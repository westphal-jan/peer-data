{"id": "1601.00740", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "5-Jan-2016", "title": "Brain4Cars: Car That Knows Before You Do via Sensory-Fusion Deep Learning Architecture", "abstract": "advanced driver assistance systems ( cad ) promote driven highways safer over the last decade. developers prepare vehicles for unsafe road directions should alert players if they perform a routine maneuver. however, many scenarios fail unavoidable because by the example drivers help alerted, arrival is already generally late. anticipating maneuvers crews can alert engineers before they coordinate the intervention and also enable pedestrians insufficient time too avoid or prepare between the danger.", "histories": [["v1", "Tue, 5 Jan 2016 05:25:14 GMT  (3099kb,D)", "http://arxiv.org/abs/1601.00740v1", "Journal Version (ICCV and ICRA combination with more system details)this http URL"]], "COMMENTS": "Journal Version (ICCV and ICRA combination with more system details)this http URL", "reviews": [], "SUBJECTS": "cs.RO cs.CV cs.LG", "authors": ["ashesh jain", "hema s koppula", "shane soh", "bharad raghavan", "avi singh", "ashutosh saxena"], "accepted": false, "id": "1601.00740"}, "pdf": {"name": "1601.00740.pdf", "metadata": {"source": "CRF", "title": "Brain4Cars: Car That Knows Before You Do via Sensory-Fusion Deep Learning Architecture", "authors": ["Ashesh Jain", "Hema S Koppula", "Shane Soh", "Bharad Raghavan", "Avi Singh", "Ashutosh Saxena"], "emails": ["ashesh@cs.cornell.edu,", "hema@cs.cornell.edu,", "avisingh@iitk.ac.in,", "shanesoh@cs.stanford.edu", "bharadr@cs.stanford.edu", "asaxena@cs.stanford.edu"], "sections": [{"heading": null, "text": "In this work we propose a vehicular sensor-rich platform and learning algorithms for maneuver anticipation. For this purpose we equip a car with cameras, Global Positioning System (GPS), and a computing device to capture the driving context from both inside and outside of the car. In order to anticipate maneuvers, we propose a sensory-fusion deep learning architecture which jointly learns to anticipate and fuse multiple sensory streams. Our architecture consists of Recurrent Neural Networks (RNNs) that use Long Short-Term Memory (LSTM) units to capture long temporal dependencies. We propose a novel training procedure which allows the network to predict the future given only a partial temporal context. We introduce a diverse data set with 1180 miles of natural freeway and city driving, and show that we can anticipate maneuvers 3.5 seconds before they occur in realtime with a precision and recall of 90.5% and 87.4% respectively.\nI. INTRODUCTION\nOver the last decade cars have been equipped with various assistive technologies in order to provide a safe driving experience. Technologies such as lane keeping, blind spot check, precrash systems etc., are successful in alerting drivers whenever they commit a dangerous maneuver [43]. Still in the US alone more than 33,000 people die in road accidents every year, the majority of which are due to inappropriate maneuvers [2]. We therefore need mechanisms that can alert drivers before they perform a dangerous maneuver in order to avert many such accidents [56].\nIn this work we address the problem of anticipating maneuvers that a driver is likely to perform in the next few seconds. Figure 1 shows our system anticipating a left turn maneuver a few seconds before the car reaches the intersection. Our system also outputs probabilities over the maneuvers the driver can perform. With this prior knowledge of maneuvers, the driver assistance systems can alert drivers about possible dangers before they perform the maneuver, thereby giving them more time to react. Some previous works [22, 41, 50] also predict a driver\u2019s future maneuver. However, as we show in the following sections, these methods use limited context and/or do not accurately model the anticipation problem.\nIn order to anticipate maneuvers, we reason with the contextual information from the surrounding events, which we refer to as the driving context. We obtain this driving context from multiple sources. We use videos of the driver inside the car and the road in front, the vehicle\u2019s dynamics, global position coordinates (GPS), and street maps; from this we extract a time series of multi-modal data from both inside and outside the vehicle. The challenge lies in modeling the temporal aspects of driving and fusing the multiple sensory streams. In this work we propose a specially tailored approach for anticipation in such sensory-rich settings.\nAnticipation of the future actions of a human is an important perception task with applications in robotics and computer vision [39, 77, 33, 34, 73]. It requires the prediction of future events from a limited temporal context. This differentiates anticipation from activity recognition [73], where the complete temporal context is available for prediction. Furthermore, in sensory-rich robotics settings like ours, the context for anticipation comes from multiple sensors. In such scenarios the end performance of the application largely depends on how the information from different sensors are fused. Previous works on anticipation [33, 34, 39] usually deal with singledata modality and do not address anticipation for sensory-rich robotics applications. Additionally, they learn representations using shallow architectures [30, 33, 34, 39] that cannot handle long temporal dependencies [6].\nIn order to address the anticipation problem more generally,\nar X\niv :1\n60 1.\n00 74\n0v 1\n[ cs\n.R O\n] 5\nJ an\n2 01\n6\n\ud835\udc312\ud835\udc311 \ud835\udc313 \ud835\udc31\ud835\udc47\n\ud835\udc32 \ud835\udc32 \ud835\udc32 \ud835\udc32\n(\ud835\udc311, \ud835\udc312, \u2026 , \ud835\udc31\ud835\udc47) \u2192 \ud835\udc32\nTraining example\nTraining RNN for anticipation\n\ud835\udc311 \ud835\udc31\ud835\udc61\n\ud835\udc32\ud835\udc61\n(\ud835\udc311, \ud835\udc312, \u2026 , \ud835\udc31\ud835\udc61)\nTest example\nAnticipation given partial context\n?\n1 \ud835\udc47 1 \ud835\udc61\ud835\udc61 =\nFig. 2: (Left) Shows training RNN for anticipation in a sequenceto-sequence prediction manner. The network explicitly learns to map the partial context (x1, ..,xt) \u2200t to the future event y. (Right) At test time the network\u2019s goal is to anticipate the future event as soon as possible, i.e. by observing only a partial temporal context.\nwe propose a Recurrent Neural Network (RNN) based architecture which learns rich representations for anticipation. We focus on sensory-rich robotics applications, and our architecture learns how to optimally fuse information from different sensors. Our approach captures temporal dependencies by using Long Short-Term Memory (LSTM) units. We train our architecture in a sequence-to-sequence prediction manner (Figure 2) such that it explicitly learns to anticipate given a partial context, and we introduce a novel loss layer which helps anticipation by preventing over-fitting.\nWe evaluate our approach on a driving data set with 1180 miles of natural freeway and city driving collected across two states \u2013 from 10 drivers and with different kinds of driving maneuvers. The data set is challenging because of the variations in routes and traffic conditions, and the driving styles of the drivers (Figure 3). We demonstrate that our deep learning sensory-fusion approach anticipates maneuvers 3.5 seconds before they occur with 84.5% precision and 77.1% recall while using out-of-the-box face tracker. With more sophesticated 3D pose estimation of the face, our precision and recall increases to 90.5% and 87.4% respectively. We believe that our work creates scope for new ADAS features to make roads safer. In summary our key contributions are as follows:\n\u2022 We propose an approach for anticipating driving maneuvers several seconds in advance. \u2022 We propose a generic sensory-fusion RNN-LSTM architecture for anticipation in robotics applications. \u2022 We release the first data set of natural driving with videos from both inside and outside the car, GPS, and speed information. \u2022 We release an open-source deep learning package\nNeuralModels which is especially designed for robotics applications with multiple sensory streams.\nOur data set and deep learning code are publicly available at: http://www.brain4cars.com"}, {"heading": "II. RELATED WORK", "text": "Our work builds upon the previous works on assisitive vehicular technologies, anticipating human activities, learning temporal models, and computer vision methods for analyzing human face. Assistive features for vehicles. Latest cars available in market comes equipped with cameras and sensors to monitor the surrounding environment. Through multi-sensory fusion they provide assisitive features like lane keeping, forward collision avoidance, adaptive cruise control etc. These systems warn drivers when they perform a potentially dangerous maneuver [59, 68]. Driver monitoring for distraction and drowsiness has also been extensively researched [21, 55]. Techniques like eye-gaze tracking are now commercially available (Seeing Machines Ltd.) and has been effective in detecting distraction. Our work complements existing ADAS and driver monitoring techniques by anticipating maneuvers several seconds before they occur.\nClosely related to us are previous works on predicting the driver\u2019s intent. Vehicle trajectory has been used to predict the intent for lane change or turn maneuver [9, 22, 41, 44]. Most of these works ignore the rich context available from cameras, GPS, and street maps. Previous works have addressed maneuver anticipation [1, 50, 15, 67] through sensoryfusion from multiple cameras, GPS, and vehicle dynamics. In particular, Morris et al. [50] and Trivedi et al. [67] used Relevance Vector Machine (RVM) for intent prediction and performed sensory fusion by concatenating feature vectors. We will show that such hand designed concatenation of features does not work well. Furthermore, these works do not model the temporal aspect of the problem properly. They assume\nthat informative contextual cues always appear at a fixed time before the maneuver. We show that this assumption is not true, and in fact the temporal aspect of the problem should be carefully modeled. In contrast to these works, our RNN-LSTM based sensory-fusion architecture captures long temporal dependencies through its memory cell and learns rich representations for anticipation through a hierarchy of non-linear transformations of input data. Our work is also related to works on driver behavior prediction with different sensors [26, 21, 20], and vehicular controllers which act on these predictions [59, 68, 18]. Anticipation and Modeling Humans. Modeling of human motion has given rise to many applications, anticipation being one of them. Anticipating human activities has shown to improve human-robot collaboration [73, 36, 46, 38, 16]. Similarly, forecasting human navigation trajectories has enabled robots to plan sociable trajectories around humans [33, 8, 39, 29]. Feature matching techniques have been proposed for anticipating human activities from videos [57]. Modeling human preferences has enabled robots to plan good trajectories [17, 60, 28, 31]. Similar to these works, we anticipate human actions, which are driving maneuvers in our case. However, the algorithms proposed in the previous works do not apply in our setting. In our case, anticipating maneuvers requires modeling the interaction between the driving context and the driver\u2019s intention. Such interactions are absent in the previous works, and they use shallow architectures [6] that do not properly model temporal aspects of human activities. They further deal with a single data modality and do not tackle the challenges of sensory-fusion. Our problem setup involves all these challenges, for which we propose a deep learning approach which efficiently handles temporal dependencies and learns to fuse multiple sensory streams. Analyzing the human face. The vision approaches related to our work are face detection and tracking [69, 76], statistical models of face [10] and pose estimation methods for face [75]. Active Appearance Model (AAM) [10] and its variants [47, 74] statistically model the shape and texture of the face. AAMs have also been used to estimate the 3D-pose of a face from a single image [75] and in design of assistive features for driver monitoring [55, 63]. In our approach we adapt off-theshelf available face detection [69] and tracking algorithms [58] (see Section VI). Our approach allows us to easily experiment with more advanced face detection and tracking algorithms. We demonstrate this by using the Constrained Local Neural Field (CLNF) model [4] and tracking 68 fixed landmark points on the driver\u2019s face and estimating the 3D head-pose. Learning temporal models. Temporal models are commonly used to model human activities [35, 49, 71, 72]. These models have been used in both discriminative and generative fashions. The discriminative temporal models are mostly inspired by the Conditional Random Field (CRF) [42] which captures the temporal structure of the problem. Wang et al. [72] and Morency et al. [49] propose dynamic extensions of the CRF for image segmentation and gesture recognition respectively. On the other hand, generative approaches for temporal modeling include various filtering methods, such as Kalman and particle filters [64], Hidden Markov Models, and many types of Dynamic Bayesian Networks [51]. Some previous works [9, 40, 53] used HMMs to model different aspects of the driver\u2019s behaviour. Most of these generative approaches model how latent (hidden) states influence the observations. However, in our problem both the latent states and the observations influence each other. In the following sections, we will describe the Autoregressive Input-Output HMM (AIO-HMM) for maneuver anticipation [30] and will use it as a baseline to compare our deep learning approach. Unlike AIO-HMM our deep architecture have internal memory which allows it to handle long temporal dependencies [24]. Furthermore, the input features undergo a hierarchy of nonlinear transformation through the deep architecture which allows learning rich representations. Two building blocks of our architecture are Recurrent Neural Networks (RNNs) [54] and Long Short-Term Memory (LSTM) units [25]. Our work draws upon ideas from previous works on RNNs and LSTM from the language [62], speech [23], and vision [14] communities. Our approach to the joint training of multiple RNNs is related to the recent work on hierarchical RNNs [19]. We consider RNNs in multi-modal setting, which is related to the recent use of RNNs in imagecaptioning [14]. Our contribution lies in formulating activity anticipation in a deep learning framework using RNNs with LSTM units. We focus on sensory-rich robotics applications, and our architecture extends previous works doing sensoryfusion with feed-forward networks [52, 61] to the fusion of temporal streams. Using our architecture we demonstrate stateof-the-art on maneuver anticipation."}, {"heading": "III. OVERVIEW", "text": "We first give an overview of the maneuver anticipation problem and then describe our system."}, {"heading": "A. Problem Overview", "text": "Our goal is to anticipate driving maneuvers a few seconds before they occur. This includes anticipating a lane change before the wheels touch the lane markings or anticipating if the driver keeps straight or makes a turn when approaching an intersection. This is a challenging problem for multiple reasons. First, it requires the modeling of context from different sources. Information from a single source, such as a camera capturing events outside the car, is not sufficiently rich. Additional visual information from within the car can also be used. For example, the driver\u2019s head movements are useful for anticipation \u2013 drivers typically check for the side traffic while changing lanes and scan the cross traffic at intersections. Second, reasoning about maneuvers should take into account the driving context at both local and global levels. Local context requires modeling events in vehicle\u2019s vicinity such as the surrounding vision, GPS, and speed information. On the other hand, factors that influence the overall route contributes to the global context, such as the driver\u2019s final destination. Third, the informative cues necessary for anticipation appear at\nvariable times before the maneuver, as illustrated in Figure 5. In particular, the time interval between the driver\u2019s head movement and the occurrence of the maneuver depends on many factors such as the speed, traffic conditions, etc.\nIn addition, appropriately fusing the information from multiple sensors is crucial for anticipation. Simple sensory fusion approaches like concatenation of feature vectors performs poorly, as we demonstrate through experiments. In our proposed approach we learn a neural network layer for fusing the temporal streams of data coming from different sensors. Our resulting architecture is end-to-end trainable via back propagation, and we jointly train it to: (i) model the temporal aspects of the problem; (ii) fuse multiple sensory streams; and (iii) anticipate maneuvers."}, {"heading": "B. System Overview", "text": "For maneuver anticipation our vehicular sensory platform includes the following (as shown in Figure 4):\n1) A driver-facing camera inside the vehicle. We mount this camera on the dashboard and use it to track the driver\u2019s head movements. This camera operates at 25 fps. 2) A camera facing the road is mounted on the dashboard to capture the (outside) view in front of the car. This camera operates at 30 fps. The video from this camera enables additional reasoning on maneuvers. For example, when the vehicle is in the left-most lane, the only safe maneuvers are a right-lane change or keeping straight, unless the vehicle is approaching an intersection. 3) A speed logger for vehicle dynamics because maneuvers correlate with the vehicle\u2019s speed, e.g., turns usually happen at lower speeds than lane changes. 4) A Global Positioning System (GPS) for localizing the vehicle on the map. This enables us to detect upcoming road artifacts such as intersections, highway exits, etc.\nUsing this system we collect 1180 miles of natural city and freeway driving data from 10 drivers. We denote the information from sensors with feature vector x. Our vehicular systems gives a temporal sequence of feature vectors {(x1,x2, ...,xt, ...)}. For now we do not distinguish between the information from different sensors, later in Section V-B we introduce sensory fusion. In Section VI we formally define our feature representations and describe our data set in Section VIII-A. We now formally define anticipation and present our deep learning architecture."}, {"heading": "IV. PRELIMINARIES", "text": "We now formally define anticipation and then present our Recurrent Neural Network architecture. The goal of anticipation is to predict an event several seconds before it happens given the contextual information up to the present time. The future event can be one of multiple possibilities. At training time a set of temporal sequences of observations and events {(x1,x2, ...,xT )j ,yj}Nj=1 is provided where xt is the observation at time t, y is the representation of the event\n(described below) that happens at the end of the sequence at t = T , and j is the sequence index. At test time, however, the algorithm receives an observation xt at each time step, and its goal is to predict the future event as early as possible, i.e. by observing only a partial sequence of observations {(x1, ...,xt)|t < T}. This differentiates anticipation from activity recognition [70, 37] where in the latter the complete observation sequence is available at test time. In this paper, xt is a real-valued feature vector and y = [y1, ..., yK ] is a vector of size K (the number of events), where yk denotes the probability of the temporal sequence belonging to event the k such that \u2211K k=1 y\nk = 1. At the time of training, y takes the form of a one-hot vector with the entry in y corresponding to the ground truth event as 1 and the rest 0.\nIn this work we propose a deep RNN architecture with Long Short-Term Memory (LSTM) units [25] for anticipation. Below we give an overview of the standard RNN and LSTM which form the building blocks of our architecture."}, {"heading": "A. Recurrent Neural Networks", "text": "A standard RNN [54] takes in a temporal sequence of vectors (x1,x2, ...,xT ) as input, and outputs a sequence of vectors (h1,h2, ...,hT ) also known as high-level representations. The representations are generated by non-linear transformation of the input sequence from t = 1 to T , as described in the equations below.\nht = f(Wxt + Hht\u22121 + b) (1) yt = softmax(Wyht + by) (2)\nwhere f is a non-linear function applied element-wise, and yt is the softmax probabilities of the events having seen the observations up to xt. W, H, b, Wy , by are the parameters that are learned. Matrices are denoted with bold, capital letters, and vectors are denoted with bold, lower-case letters. In a standard RNN a common choice for f is tanh or sigmoid. RNNs with this choice of f suffer from a well-studied problem of vanishing gradients [54], and hence are poor at capturing long temporal dependencies which are essential for anticipation. A common remedy to vanishing gradients is to replace tanh non-linearities by Long Short-Term Memory cells [25]. We now give an overview of LSTM and then describe our model for anticipation."}, {"heading": "B. Long-Short Term Memory Cells", "text": "LSTM is a network of neurons that implements a memory cell [25]. The central idea behind LSTM is that the memory cell can maintain its state over time. When combined with RNN, LSTM units allow the recurrent network to remember long term context dependencies.\nLSTM consists of three gates \u2013 input gate i, output gate o, and forget gate f \u2013 and a memory cell c. See Figure 6 for an illustration. At each time step t, LSTM first computes its gates\u2019 activations {it,ft} (3)(4) and updates its memory cell from ct\u22121 to ct (5), it then computes the output gate activation ot (6), and finally outputs a hidden representation ht (7). The inputs into LSTM are the observations xt and\nthe hidden representation from the previous time step ht\u22121. LSTM applies the following set of update operations:\nit = \u03c3(Wixt + Uiht\u22121 + Vict\u22121 + bi) (3) ft = \u03c3(Wfxt + Ufht\u22121 + Vfct\u22121 + bf ) (4) ct = ft ct\u22121 + it tanh(Wcxt + Ucht\u22121 + bc) (5) ot = \u03c3(Woxt + Uoht\u22121 + Voct + bo) (6) ht = ot tanh(ct) (7)\nwhere is an element-wise product and \u03c3 is the logistic function. \u03c3 and tanh are applied element-wise. W\u2217, V\u2217, U\u2217, and b\u2217 are the parameters, further the weight matrices V\u2217 are diagonal. The input and forget gates of LSTM participate in updating the memory cell (5). More specifically, forget gate controls the part of memory to forget, and the input gate computes new values based on the current observation that are written to the memory cell. The output gate together with the memory cell computes the hidden representation (7). Since LSTM cell activation involves summation over time (5) and derivatives distribute over sums, the gradient in LSTM gets propagated over a longer time before vanishing. In the standard RNN, we replace the non-linear f in equation (1) by the LSTM equations given above in order to capture long temporal dependencies. We use the following shorthand notation to denote the recurrent LSTM operation.\n(ht, ct) = LSTM(xt,ht\u22121, ct\u22121) (8)\nWe now describe our RNN architecture with LSTM units for anticipation. Following which we will describe a particular instantiation of our architecture for maneuver anticipation where the observations x come from multiple sources."}, {"heading": "V. NETWORK ARCHITECTURE FOR ANTICIPATION", "text": "In order to anticipate, an algorithm must learn to predict the future given only a partial temporal context. This makes anticipation challenging and also differentiates it from activity recognition. Previous works treat anticipation as a recognition problem [34, 50, 57] and train discriminative classifiers (such as SVM or CRF) on the complete temporal context. However, at test time these classifiers only observe a partial temporal context and make predictions within a filtering framework. We model anticipation with a recurrent architecture which unfolds through time. This lets us train a single classifier that learns to handle partial temporal context of varying lengths.\nFurthermore, anticipation in robotics applications is challenging because the contextual information can come from multiple sensors with different data modalities. Examples include autonomous vehicles that reason from multiple sensors [3] or robots that jointly reason over perception and language instructions [48]. In such applications the way information from different sensors is fused is critical to the application\u2019s final performance. We therefore build an end-to-end deep learning architecture which jointly learns to anticipate and fuse information from different sensors."}, {"heading": "A. RNN with LSTM units for anticipation", "text": "At the time of training, we observe the complete temporal observation sequence and the event {(x1,x2, ...,xT ),y}. Our goal is to train a network which predicts the future event given a partial temporal observation sequence {(x1,x2, ...,xt)|t < T}. We do so by training an RNN in a sequence-to-sequence prediction manner. Given training examples {(x1,x2, ...,xT )j ,yj}Nj=1 we train an RNN with LSTM units to map the sequence of observations (x1,x2, ...,xT ) to the sequence of events (y1, ...,yT ) such that yt = y,\u2200t, as shown in Fig. 2. Trained in this manner, our RNN will attempt to map all sequences of partial observations (x1,x2, ...,xt) \u2200t \u2264 T to the future event y. This way our model explicitly learns to anticipate. We additionally use LSTM units which prevents the gradients from vanishing and allows our model to capture long temporal dependencies in human activities.1"}, {"heading": "B. Fusion-RNN: Sensory fusion RNN for anticipation", "text": "We now present an instantiation of our RNN architecture for fusing two sensory streams: {(x1, ...,xT ), (z1, ..., zT )}. In the next section we will describe these streams for maneuver anticipation.\nAn obvious way to allow sensory fusion in the RNN is by concatenating the streams, i.e. using ([x1; z1], ..., [xT ; zT ]) as input to the RNN. However, we found that this sort of simple concatenation performs poorly. We instead learn a sensory fusion layer which combines the high-level representations of sensor data. Our proposed architecture first passes the two sensory streams {(x1, ...,xT ), (z1, ..., zT )} independently through separate RNNs (9) and (10). The high level representations from both RNNs {(hx1 , ...,hxT ), (hz1, ...,hzT ) are then concatenated at each time step t and passed through a fully connected (fusion) layer which fuses the two representations (11), as shown in Figure 7. The output representation from the fusion layer is then passed to the softmax layer for anticipation (12). The following operations are performed from t = 1 to T .\n(hxt , c x t ) = LSTMx(xt,h x t\u22121, c x t\u22121) (9) (hzt , c z t ) = LSTMz(zt,h z t\u22121, c z t\u22121) (10)\nSensory fusion: et = tanh(Wf [hxt ;h z t ] + bf ) (11)\nyt = softmax(Wyet + by) (12)\n1Driving maneuvers can take up to 6 seconds and the value of T can go up to 150 with a camera frame rate of 25 fps.\nwhere W\u2217 and b\u2217 are model parameters, and LSTMx and LSTMz process the sensory streams (x1, ...,xT ) and (z1, ..., zT ) respectively. The same framework can be extended to handle more sensory streams."}, {"heading": "C. Exponential loss-layer for anticipation.", "text": "We propose a new loss layer which encourages the architecture to anticipate early while also ensuring that the architecture does not over-fit the training data early enough in time when there is not enough context for anticipation. When using the standard softmax loss, the architecture suffers a loss of \u2212 log(ykt ) for the mistakes it makes at each time step, where ykt is the probability of the ground truth event k computed by the architecture using Eq. (12). We propose to modify this loss by multiplying it with an exponential term as illustrated in Figure 7. Under this new scheme, the loss exponentially grows with time as shown below.\nloss = N\u2211 j=1 T\u2211 t=1 \u2212e\u2212(T\u2212t) log(ykt ) (13)\nThis loss penalizes the RNN exponentially more for the mistakes it makes as it sees more observations. This encourages the model to fix mistakes as early as it can in time. The loss in equation 13 also penalizes the network less on mistakes made early in time when there is not enough context available. This way it acts like a regularizer and reduces the risk to over-fit very early in time."}, {"heading": "VI. FEATURES", "text": "We extract features by processing the inside and outside driving contexts. We do this by grouping the overall contextual information from the sensors into: (i) the context from inside the vehicle, which comes from the driver facing camera and is represented as temporal sequence of features (z1, ..., zT ); and (ii) the context from outside the vehicle, which comes from the remaining sensors: GPS, road facing camera, and street\nmaps. We represent the outside context with (x1, ...,xT ). In order to anticipate maneuvers, our RNN architecture (Figure 7) processes the temporal context {(x1, ...,xt), (z1, ..., zt)} at every time step t, and outputs softmax probabilities yt for the following five maneuvers:M = {left turn, right turn, left lane change, right lane change, straight driving}.\nA. Inside-vehicle features.\nThe inside features zt capture the driver\u2019s head movements at each time instant t. Our vision pipeline consists of face detection, tracking, and feature extraction modules. We extract head motion features per-frame, denoted by \u03c6(face). We compute zt by aggregating \u03c6(face) for every 20 frames, i.e., zt = \u221120 i=1 \u03c6(facei)/\u2016 \u221120 i=1 \u03c6(facei)\u2016. Face detection and tracking. We detect the driver\u2019s face using a trained Viola-Jones face detector [69]. From the detected face, we first extract visually discriminative (facial) points using the Shi-Tomasi corner detector [58] and then track those facial points using the Kanade-Lucas-Tomasi (KLT) tracker [45, 58, 66]. However, the tracking may accumulate errors over time because of changes in illumination due to the shadows of trees, traffic, etc. We therefore constrain the tracked facial points to follow a projective transformation and remove the incorrectly tracked points using the RANSAC algorithm. While tracking the facial points, we lose some of the tracked points with every new frame. To address this problem, we re-initialize the tracker with new discriminative facial points once the number of tracked points falls below a threshold [32].\nHead motion features. For maneuver anticipation the horizontal movement of the face and its angular rotation (yaw) are particularly important. From the face tracking we obtain face tracks, which are 2D trajectories of the tracked facial points in the image plane. Figure 8 (bottom) shows how the horizontal coordinates of the tracked facial points vary with time before a left turn maneuver. We represent the driver\u2019s face movements and rotations with histogram features. In particular, we take matching facial points between successive frames and create histograms of their corresponding horizontal motions (in pixels) and angular motions in the image plane (Figure 8). We bin the horizontal and angular motions using [\u2264 \u22122, \u22122 to 0, 0 to 2, \u2265 2] and [0 to \u03c02 , \u03c0 2 to \u03c0, \u03c0 to 3\u03c0 2 , 3\u03c0 2 to 2\u03c0], respectively. We also calculate the mean movement of the driver\u2019s face center. This gives us \u03c6(face) \u2208 R9 facial features per-frame. The driver\u2019s eye-gaze is also useful a feature. However, robustly estimating 3D eye-gaze in outside environment is still a topic of research, and orthogonal to this work on anticipation. We therefore do not consider eye-gaze features. 3D head pose and facial landmark features. Our framework is flexible and allows incorporating more advanced face detection and tracking algorithms. For example we replace the KLT tracker described above with the Constrained Local Neural Field (CLNF) model [4] and track 68 fixed landmark points on the driver\u2019s face. CLNF is particularly well suited for driving scenarios due its ability to handle a wide range of head pose and illumination variations. As shown in Figure 9, CLNF offers us two distinct benefits over the features from KLT (i) while discriminative facial points may change from situation to situation, tracking fixed landmarks results in consistent optical flow trajectories which adds to robustness; and (ii) CLNF also allows us to estimate the 3D head pose of the driver\u2019s face by minimizing error in the projection of a generic 3D mesh model of the face w.r.t. the 2D location of landmarks in the image. The histogram features generated from the optical flow trajectories along with the 3D head pose features (yaw, pitch and row), give us \u03c6(face) \u2208 R12 when using the CLNF tracker.\nIn Section VIII we present results with the features from KLT, as well as the results with richer features obtained from the CLNF model."}, {"heading": "B. Outside-vehicle features.", "text": "The outside feature vector xt encodes the information about the outside environment such as the road conditions, vehicle dynamics, etc. In order to get this information, we use the road-facing camera together with the vehicle\u2019s GPS coordinates, its speed, and the street maps. More specifically, we obtain two binary features from the road-facing camera indicating whether a lane exists on the left side and on the right side of the vehicle. We also augment the vehicle\u2019s GPS coordinates with the street maps and extract a binary feature indicating if the vehicle is within 15 meters of a road artifact such as intersections, turns, highway exists, etc. We also encode the average, maximum, and minimum speeds of the vehicle over the last 5 seconds as features. This results in a xt \u2208 R6 dimensional feature vector."}, {"heading": "VII. BAYESIAN NETWORKS FOR MANEUVER ANTICIPATION", "text": "In this section we propose alternate Bayesian networks [30] based on Hidden Markov Model (HMM) for maneuver anticipation. These models form a strong baseline to compare our sensory-fusion deep learning architecture.\nDriving maneuvers are influenced by multiple interactions involving the vehicle, its driver, outside traffic, and occasionally global factors like the driver\u2019s destination. These interactions influence the driver\u2019s intention, i.e. their state of mind before the maneuver, which is not directly observable. In our Bayesian network formulation, we represent the driver\u2019s intention with discrete states that are latent (or hidden). In order to anticipate maneuvers, we jointly model the driving context and the latent states in a tractable manner. We represent the driving context as a set of features described in Section VI. We now present the motivation for the Bayesian networks and then discuss our key model Autoregressive Input-Output HMM (AIO-HMM)."}, {"heading": "A. Modeling driving maneuvers", "text": "Modeling maneuvers require temporal modeling of the driving context. Discriminative methods, such as the Support Vector Machine and the Relevance Vector Machine [65], which do not model the temporal aspect perform poorly on anticipation tasks, as we show in Section VIII. Therefore, a temporal model such as the Hidden Markov Model (HMM) is better suited to model maneuver anticipation.\nAn HMM models how the driver\u2019s latent states generate both the inside driving context (zt) and the outside driving context (xt). However, a more accurate model should capture how events outside the vehicle (i.e. the outside driving context) affect the driver\u2019s state of mind, which then generates the observations inside the vehicle (i.e. the inside driving context). Such interactions can be modeled by an Input-Output HMM (IOHMM) [7]. However, modeling the problem with IOHMM does not capture the temporal dependencies of the inside driving context. These dependencies are critical to capture the smooth and temporally correlated behaviours such as the driver\u2019s face movements. We therefore present Autoregressive Input-Output HMM (AIO-HMM) which extends IOHMM to model these observation dependencies. Figure 10 shows the AIO-HMM graphical model for modeling maneuvers. We learn separate AIO-HMM model for each maneuver. In order to anticipate maneuvers, during inference we determine which model best explains the past several seconds of the driving context based on the data log-likelihood. In Appendix A we describe the training and inference procedure for AIO-HMM."}, {"heading": "VIII. EXPERIMENTS", "text": "In this section we first give an overview of our data set and then present the quantitative results. We also demonstrate our system and algorithm on real-world driving scenarios. Our video demonstrations are available at: http://www.brain4cars.com."}, {"heading": "A. Driving data set", "text": "Our data set consists of natural driving videos with both inside and outside views of the car, its speed, and the global position system (GPS) coordinates.2 The outside car video\n2The inside and outside cameras operate at 25 and 30 frames/sec.\ncaptures the view of the road ahead. We collected this driving data set under fully natural settings without any intervention.3 It consists of 1180 miles of freeway and city driving and encloses 21,000 square miles across two states. We collected this data set from 10 drivers over a period of two months. The complete data set has a total of 2 million video frames and includes diverse landscapes. Figure 11 shows a few samples from our data set. We annotated the driving videos with a total of 700 events containing 274 lane changes, 131 turns, and 295 randomly sampled instances of driving straight. Each lane change or turn annotation marks the start time of the maneuver, i.e., before the car touches the lane or yaws, respectively. For all annotated events, we also annotated the lane information, i.e., the number of lanes on the road and the current lane of the car. Our data set is publicly available at http://www.brain4cars.com."}, {"heading": "B. Baseline algorithms", "text": "We compare the following algorithms:\n\u2022 Chance: Uniformly randomly anticipates a maneuver. \u2022 SVM [50]: Support Vector Machine is a discriminative\nclassifier [11]. Morris et al. [50] takes this approach for anticipating maneuvers.4 We train the SVM on 5 seconds of driving context by concatenating all frame features to get a R3840 dimensional feature vector.\n\u2022 Random-Forest [12]: This is also a discriminative classifier that learns many decision trees from the training data, and at test time it averages the prediction of the individual decision trees. We train it on the same features as SVM with 150 trees of depth ten each.\n\u2022 HMM: This is the Hidden Markov Model. We train the HMM on a temporal sequence of feature vectors that we extract every 0.8 seconds, i.e., every 20 video frames. We consider three versions of the HMM: (i) HMM E: with only outside features from the road camera, the vehicle\u2019s speed, GPS and street maps (Section VI-B); (ii) HMM F : with only inside features from the driver\u2019s face (Section VI-A); and (ii) HMM E + F : with both inside and outside features.\n\u2022 IOHMM: Jain et al. [30] modeled driving maneuvers with this Bayesian network. It is trained on the same features as HMM E + F .\n\u2022 AIO-HMM: Jain et al. [30] proposed this Bayesian network for modeling maneuvers. It is trained on the same features as HMM E + F .\n\u2022 Simple-RNN (S-RNN): In this architecture sensor streams are fused by simple concatenation and then passed through a single RNN with LSTM units.\n\u2022 Fusion-RNN-Uniform-Loss (F-RNN-UL): In this architecture sensor streams are passed through separate RNNs,\n3Protocol: We set up cameras, GPS and speed recording device in subject\u2019s personal vehicles and left it to record the data. The subjects were asked to ignore our setup and drive as they would normally.\n4Morries et al. [50] considered binary classification problem (lane change vs driving straight) and used RVM [65].\nAlgorithm 1 Maneuver anticipation Initialize m\u2217 = driving straight Input Features {(x1, ...,xT ), (z1, ..., zT )} and prediction threshold pth Output Predicted maneuver m\u2217 while t = 1 to T do\nObserve features (x1, ...,xt) and (z1, ..., zt) Estimate probability yt of each maneuver in M m\u2217t = argmaxm\u2208M yt if m\u2217t 6= driving straight & yt{m\u2217t } > pth then m\u2217 = m\u2217t break\nend if end while Return m\u2217\nand the high-level representations from RNNs are then fused via a fully-connected layer. The loss at each time step takes the form \u2212 log(ykt ).\n\u2022 Fusion-RNN-Exp-Loss (F-RNN-EL): This architecture is similar to F-RNN-UL, except that the loss exponentially grows with time \u2212e\u2212(T\u2212t) log(ykt ).\nOur RNN and LSTM implementations are open-sourced and available at NeuralModels [27]. For the RNNs in our Fusion-RNN architecture we use a single layer LSTM of size 64 with sigmoid gate activations and tanh activation for hidden representation. Our fully connected fusion layer uses tanh activation and outputs a 64 dimensional vector. Our overall architecture (F-RNN-EL and F-RNN-UL) have nearly 25,000 parameters that are learned using RMSprop [13]."}, {"heading": "C. Evaluation protocol", "text": "We evaluate an algorithm based on its correctness in predicting future maneuvers. We anticipate maneuvers every 0.8 seconds where the algorithm processes the recent context and assigns a probability to each of the four maneuvers: {left lane change, right lane change, left turn, right turn} and a probability to the event of driving straight. These five probabilities together sum to one. After anticipation, i.e. when the algorithm has computed all five probabilities, the algorithm predicts a maneuver if its probability is above a threshold pth. If none of the maneuvers\u2019 probabilities are above this threshold, the algorithm does not make a maneuver prediction and predicts driving straight. However, when it predicts one of the four maneuvers, it sticks with this prediction and makes no further predictions for next 5 seconds or until a maneuver occurs, whichever happens earlier. After 5 seconds or a maneuver has occurred, it returns to anticipating future maneuvers. Algorithm 1 shows the inference steps for maneuver anticipation.\nDuring this process of anticipation and prediction, the algorithm makes (i) true predictions (tp): when it predicts the correct maneuver; (ii) false predictions (fp): when it predicts a maneuver but the driver performs a different maneuver; (iii) false positive predictions (fpp): when it predicts a maneuver\nbut the driver does not perform any maneuver (i.e. driving straight); and (iv) missed predictions (mp): when it predicts driving straight but the driver performs a maneuver. We evaluate the algorithms using their precision and recall scores:\nPr = tp\ntp+ fp+ fpp\ufe38 \ufe37\ufe37 \ufe38 Total # of maneuver predictions\n; Re = tp\ntp+ fp+mp\ufe38 \ufe37\ufe37 \ufe38 Total # of maneuvers\nThe precision measures the fraction of the predicted maneuvers that are correct and recall measures the fraction of the maneuvers that are correctly predicted. For true predictions (tp) we also compute the average time-to-maneuver, where timeto-maneuver is the interval between the time of algorithm\u2019s prediction and the start of the maneuver.\nWe perform cross validation to choose the number of the driver\u2019s latent states in the AIO-HMM and the threshold on probabilities for maneuver prediction. For SVM we crossvalidate for the parameter C and the choice of kernel from Gaussian and polynomial kernels. The parameters are chosen as the ones giving the highest F1-score on a validation set. The F1-score is the harmonic mean of the precision and recall, defined as F1 = 2 \u2217 Pr \u2217Re/(Pr +Re)."}, {"heading": "D. Quantitative results", "text": "We evaluate the algorithms on maneuvers that were not seen during training and report the results using 5-fold cross validation. Table I reports the precision and recall scores under three settings: (i) Lane change: when the algorithms only predict for the left and right lane changes. This setting is relevant for highway driving where the prior probabilities of turns are low; (ii) Turns: when the algorithms only predict for the left and right turns; and (iii) All maneuvers: here the algorithms jointly predict all four maneuvers. All three settings include the instances of driving straight.\nTable I compares the performance of the baseline anticipation algorithms, Bayesian networks, and the variants of our deep learning model. All algorithms in Table I use same feature vectors and KLT face tracker which ensures a fair comparison. As shown in the table, overall the best algorithm for maneuver anticipation is F-RNN-EL, and the best performing Bayesian network is AIO-HMM. F-RNN-EL significantly outperforms AIO-HMM in every setting. This improvement in performance is because RNNs with LSTM units are very expressive models with an internal memory. This allows them\nto model the much needed long temporal dependencies for anticipation. Additionally, unlike AIO-HMM, F-RNN-EL is a discriminative model that does not make any assumptions about the generative nature of the problem. The results also highlight the importance of modeling the temporal nature in the data. Classifiers like SVM and Random Forest do not model the temporal aspects and hence performs poorly.\nThe performance of several variants of our deep architecture, reported in Table I, justifies our design decisions to reach the final fusion architecture. When predicting all maneuvers, F-RNN-EL gives 6% higher precision and recall than S-RNN, which performs a simple fusion by concatenating the two sensor streams. On the other hand, F-RNN models each sensor stream with a separate RNN and then uses a fully connected layer to fuse the high-level representations at each time step. This form of sensory fusion is more principled since the sensor streams represent different data modalities. In addition, exponentially growing the loss further improves the performance. Our new loss scheme penalizes the network proportional to the length of context it has seen. When predicting all maneuvers, we observe that F-RNN-EL shows an improvement of 2% in precision and recall over F-RNNUL. We conjecture that exponentially growing the loss acts like a regularizer. It reduces the risk of our network overfitting early in time when there is not enough context available. Furthermore, the time-to-maneuver remains comparable for FRNN with and without exponential loss.\nThe Bayesian networks AIO-HMM and HMM E+F adopt different sensory fusion strategies. AIO-HMM fuses the two sensory streams using an input-output model, on the other hand HMM E + F performs early fusion by concatenation. As a result, AIO-HMM gives 10% higher precision than HMM E + F for jointly predicting all the maneuvers. AIOHMM further extends IOHMM by modeling the temporal dependencies of events inside the vehicle. This results in better performance: on average AIO-HMM precision is 3% higher than IOHMM, as shown in Table I. Another important aspect of anticipation is the joint modeling of the inside and outside driving contexts. HMM F learns only from the inside driving context, while HMM E learns only from the outside driving context. The performances of both the models is therefore less than HMM E + F , which learns jointly both the contexts.\nTable II compares the fpp of different algorithms. False positive predictions (fpp) happen when an algorithm predicts\na maneuver but the driver does not perform any maneuver (i.e. drives straight). Therefore low value of fpp is preferred. HMM F performs best on this metric at 11% as it mostly assigns a high probability to driving straight. However, due to this reason, it incorrectly predicts driving straight even when maneuvers happen. This results in the low recall of HMM F at 36%, as shown in Table I. AIO-HMM\u2019s fpp is 10% less than that of IOHMM and HMM E+F , and F-RNNEL is 3% less than AIO-HMM. The primary reason for false positive predictions is distracted driving. Drivers interactions with fellow passengers or their looking at the surrounding scenes are sometimes wrongly interpreted by the algorithms. Understanding driver distraction is still an open problem, and orthogonal to the objective of this work.\n3D head-pose features. The modularity of our approach allows experimenting with more advanced head tracking algorithms. We replace the pipeline for extracting features from the driver\u2019s face [30] by a Constrained Local Neural Field (CLNF) model [4]. The new vision pipeline tracks 68 facial landmark points and estimates the driver\u2019s 3D head pose as described in Section VI. As shown in Table III, we see a significant, 6% increase in precision and 10% increase in recall of FRNN-EL when using features from our new vision pipeline. This increase in performance is attributed to the following reasons: (i) robustness of CLNF model to variations in illumination and head pose; (ii) 3D head-pose features are very informative for understanding the driver\u2019s intention; and (iii) optical flow trajectories generated by tracking facial landmark points represent head movements better, as shown in Figure 9. The confusion matrix in Figure 13 shows the precision for each maneuver. F-RNN-EL gives a higher precision than AIOHMM on every maneuver when both algorithms are trained on same features (Fig. 13c). The new vision pipeline with CLNF tracker further improves the precision of F-RNN-EL on all maneuvers (Fig. 13d).\nEffect of prediction threshold. In Figure 12 we study how F1-score varies as we change the prediction threshold pth.\nWe make the following observations: (i) The F1-score does not undergo large variations with changes to the prediction threshold. Hence, it allows practitioners to fairly trade-off between the precision and recall without hurting the F1-score by much; and (ii) the maximum F1-score attained by FRNN-EL is 4% more than AIO-HMM when compared on the same features and 13% more with our new vision pipeline. In Tables I, II and III, we used the threshold values which gave the highest F1-score. Anticipation complexity. The F-RNN-EL anticipates maneuvers every 0.8 seconds using the previous 5 seconds of the driving context. The complexity mainly comprises of feature extraction and the model inference in Algorithm 1. Fortunately both these steps can be performed as a dynamic program by storing the computation of the most recent anticipation. Therefore, for every anticipation we only process the incoming 0.8 seconds and not complete 5 seconds of the driving context. On average we predict a maneuver under 0.20 milliseconds using Theano [5] on Nvidia K40 GPU on Ubuntu 12.04."}, {"heading": "IX. CONCLUSION", "text": "In this paper we considered the problem of anticipating driving maneuvers a few seconds before the driver performs them. This problem requires the modeling of long temporal dependencies and the fusion of multiple sensory streams. We proposed a novel deep learning architecture based on Recurrent Neural Networks (RNNs) with Long Short-Term Memory (LSTM) units for anticipation. Our architecture learns to fuse multiple sensory streams, and by training it in a sequence-to-sequence prediction manner, it explicitly learns to anticipate using only a partial temporal context. We also proposed a novel loss layer for anticipation which prevents over-fitting.\nWe release an open-source data set of 1180 miles of natural driving. We performed an extensive evaluation and showed improvement over many baseline algorithms. Our sensory fusion deep learning approach gives a precision of 84.5% and recall of 77.1%, and anticipates maneuvers 3.5 seconds (on average) before they happen. By incorporating the driver\u2019s 3D head-pose our precision and recall improves to 90.5%\nand 87.4% respectively. Potential application of our work is enabling advanced driver assistance systems (ADAS) to alert drivers before they perform a dangerous maneuver, thereby giving drivers more time to react. We believe that our deep learning architecture is widely applicable to many activity anticipation problems. Our code and data set are publicly available on the project web-page.\nAcknowledgement. We thank NVIDIA for the donation of K40 GPUs used in this research. We also thank Silvio Savarese for useful discussions. This work was supported by National Robotics Initiative (NRI) award 1426452, Office of Naval Research (ONR) award N00014-14-1-0156, and by Microsoft Faculty Fellowship and NSF Career Award to Saxena."}, {"heading": "APPENDIX A MODELING MANEUVERS WITH AIO-HMM", "text": "Given T seconds long driving context C before the maneuverM, we learn a generative model for the context P (C|M). The driving context C consists of the outside driving context and the inside driving context. The outside and inside contexts are temporal sequences represented by the outside features xT1 = {x1, ..,xT } and the inside features zT1 = {z1, .., zT } respectively. The corresponding sequence of the driver\u2019s latent states is hT1 = {h1, .., hT }. x and z are vectors and h is a discrete state.\nP (C|M) = \u2211 hT1 P (zT1 ,x T 1 , h T 1 |M)\n= P (xT1 |M) \u2211 hT1 P (zT1 , h T 1 |xT1 ,M)\n\u221d \u2211 hT1 P (zT1 , h T 1 |xT1 ,M) (14)\nWe model the correlations between x, h and z with an AIOHMM as shown in Figure 10. The AIO-HMM models the distribution in equation (14). It does not assume any generative process for the outside features P (xT1 |M). It instead models them in a discriminative manner. The top (input) layer of the AIO-HMM consists of outside features xT1 . The outside features then affect the driver\u2019s latent states hT1 , represented by the middle (hidden) layer, which then generates the inside features zT1 at the bottom (output) layer. The events inside the\nvehicle such as the driver\u2019s head movements are temporally correlated because they are generally smooth. The AIO-HMM handles these dependencies with autoregressive connections in the output layer. Model Parameters. AIO-HMM has two types of parameters: (i) state transition parameters w; and (ii) observation emission parameters (\u00b5,\u03a3). We use set S to denote the possible latent states of the driver. For each state h = i \u2208 S, we parametrize transition probabilities of leaving the state with log-linear functions, and parametrize the output layer feature emissions with normal distributions.\nTransition: P (ht = j|ht\u22121 = i,xt;wij) = ewij \u00b7xt\u2211 l\u2208S e wil\u00b7xt\nEmission: P (zt|ht = i,xt, zt\u22121;\u00b5it,\u03a3i) = N (zt|\u00b5it,\u03a3i) The inside (vehicle) features represented by the output layer are jointly influenced by all three layers. These interactions are modeled by the mean and variance of the normal distribution. We model the mean of the distribution using the outside and inside features from the vehicle as follows:\n\u00b5it = (1 + ai \u00b7 xt + bi \u00b7 zt\u22121)\u00b5i In the equation above, ai and bi are parameters that we learn for every state i \u2208 S. Therefore, the parameters we learn for state i \u2208 S are \u03b8i = {\u00b5i, ai, bi, \u03a3i and wij |j \u2208 S}, and the overall model parameters are \u0398 = {\u03b8i|i \u2208 S}."}, {"heading": "A. Learning AIO-HMM parameters", "text": "The training data D = {(xTn1,n, z Tn 1,n)|n = 1, .., N} consists of N instances of a maneuver M. The goal is to maximize the data log-likelihood.\nl(\u0398;D) = N\u2211 n=1 logP (zTn1,n|x Tn 1,n;\u0398) (15)\nDirectly optimizing equation (15) is challenging because parameters h representing the driver\u2019s states are latent. We therefore use the iterative EM procedure to learn the model parameters. In EM, instead of directly maximizing equation (15), we maximize its simpler lower bound. We estimate the lower bound in the E-step and then maximize that estimate in the M-step. These two steps are repeated iteratively. E-step. In the E-step we get the lower bound of equation (15) by calculating the expected value of the complete data loglikelihood using the current estimate of the parameter \u0398\u0302.\nE-step: Q(\u0398; \u0398\u0302) = E[lc(\u0398;Dc)|\u0398\u0302,D] (16)\nwhere lc(\u0398;Dc) is the log-likelihood of the complete data Dc defined as:\nDc = {(xTn1,n, z Tn 1,n, h Tn 1,n)|n = 1, .., N} (17)\nlc(\u0398;Dc) = N\u2211 n=1 logP (zTn1,n, h Tn 1,n|x Tn 1,n;\u0398) (18)\nWe should note that the occurrences of hidden variables h in lc(\u0398;Dc) are marginalized in equation (16), and hence h need not be known. We efficiently estimate Q(\u0398; \u0398\u0302) using the forward-backward algorithm [51]. M-step. In the M-step we maximize the expected value of the complete data log-likelihood Q(\u0398; \u0398\u0302) and update the model parameter as follows:\nM-step: \u0398 = argmax\u0398Q(\u0398; \u0398\u0302) (19)\nSolving equation (19) requires us to optimize for the parameters \u00b5, a, b, \u03a3 and w. We optimize all parameters expect w exactly by deriving their closed form update expressions. We optimize w using the gradient descent.\nB. Inference of Maneuvers\nOur learning algorithm trains separate AIO-HMM models for each maneuver. The goal during inference is to determine which model best explains the past T seconds of the driving context not seen during training. We evaluate the likelihood of the inside and outside feature sequences (zT1 and x T 1 ) for each maneuver, and anticipate the probability PM of each maneuver M as follows:\nPM = P (M|zT1 ,xT1 ) \u221d P (zT1 ,xT1 |M)P (M) (20) Algorithm 2 shows the complete inference procedure. The inference in equation (20) simply requires a forwardpass [51] of the AIO-HMM, the complexity of which is O(T (|S|2 + |S||z|3 + |S||x|)). However, in practice it is only O(T |S||z|3) because |z|3 |S| and |z|3 |x|. Here |S| is the number of discrete states representing the driver\u2019s intention, while |z| and |x| are the dimensions of the inside and outside feature vectors respectively. In equation (20) P (M) is the prior probability of maneuver M. We assume an uninformative uniform prior over the maneuvers.\nAlgorithm 2 Anticipating maneuvers input Driving videos, GPS, Maps and Vehicle Dynamics output Probability of each maneuver\nInitialize the face tracker with the driver\u2019s face while driving do\nTrack the driver\u2019s face [69] Extract features zT1 and x T 1 (Sec. VI) Inference PM = P (M|zT1 ,xT1 ) (Eq. (20)) Send the inferred probability of each maneuver to ADAS\nend while"}], "references": [{"title": "Are we ready for autonomous driving? the kitti vision benchmark suite", "author": ["A. Andreas", "P. Lenz", "R. Urtasun"], "venue": "Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition", "citeRegEx": "3", "shortCiteRegEx": null, "year": 2012}, {"title": "Constrained local neural fields for robust facial landmark detection in the wild", "author": ["T. Baltrusaitis", "P. Robinson", "L-P. Morency"], "venue": "ICCV Workshop", "citeRegEx": "4", "shortCiteRegEx": null, "year": 2013}, {"title": "Theano: new features and speed improvements", "author": ["F. Bastien", "P. Lamblin", "R. Pascanu", "J. Bergstra", "I.J. Goodfellow", "A. Bergeron", "N. Bouchard", "Y. Bengio"], "venue": "Deep Learning and Unsupervised Feature Learning NIPS 2012 Workshop", "citeRegEx": "5", "shortCiteRegEx": null, "year": 2012}, {"title": "On the expressive power of deep architectures", "author": ["Y. Bengio", "O. Delalleau"], "venue": "Algorithmic Learning Theory, pages 18\u201336", "citeRegEx": "6", "shortCiteRegEx": null, "year": 2011}, {"title": "An input output hmm architecture", "author": ["Y. Bengio", "O. Frasconi"], "venue": "Advances in Neural Information Processing Systems", "citeRegEx": "7", "shortCiteRegEx": null, "year": 1995}, {"title": "Learning motion patterns of people for compliant robot motion", "author": ["M. Bennewitz", "W. Burgard", "G. Cielniak", "S. Thrun"], "venue": "International Journal of Robotics Research", "citeRegEx": "8", "shortCiteRegEx": null, "year": 2005}, {"title": "Continuous driver intention recognition with hidden markov models", "author": ["H. Berndt", "J. Emmert", "K. Dietmayer"], "venue": "IEEE Intelligent Transportation Systems Conference", "citeRegEx": "9", "shortCiteRegEx": null, "year": 2008}, {"title": "Active appearance models", "author": ["T.F. Cootes", "G.J. Edwards", "C.J. Taylor"], "venue": "IEEE Transactions on Pattern Analysis and Machine Intelligence, 23(6)", "citeRegEx": "10", "shortCiteRegEx": null, "year": 2001}, {"title": "Support-vector networks", "author": ["C. Cortes", "V. Vapnik"], "venue": "Machine learning, 20(3)", "citeRegEx": "11", "shortCiteRegEx": null, "year": 1995}, {"title": "Decision forests for classification", "author": ["A. Criminisi", "J. Shotton", "E. Konukoglu"], "venue": "regression, density estimation, manifold learning and semi-supervised learning. MSR TR, 5(6)", "citeRegEx": "12", "shortCiteRegEx": null, "year": 2011}, {"title": "H", "author": ["Y.N. Dauphin"], "venue": "de Vries, J. Chung, and Y. Bengio. Rmsprop and equilibrated adaptive learning rates for nonconvex optimization. arXiv:1502.04390", "citeRegEx": "13", "shortCiteRegEx": null, "year": 2015}, {"title": "Long-term recurrent convolutional networks for visual recognition and description", "author": ["J. Donahue", "L.A. Hendricks", "S. Guadarrama", "M. Rohrbach", "S. Venugopalan", "K. Saenko", "T. Darrell"], "venue": "Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition", "citeRegEx": "14", "shortCiteRegEx": null, "year": 2015}, {"title": "On-road prediction of driver\u2019s intent with multimodal sensory cues", "author": ["A. Doshi", "B. Morris", "M.M. Trivedi"], "venue": "IEEE Pervasive Computing", "citeRegEx": "15", "shortCiteRegEx": null, "year": 2011}, {"title": "Formalizing assistive teleoperation", "author": ["A. Dragan", "S. Srinivasa"], "venue": "Proceedings of Robotics: Science and Systems", "citeRegEx": "16", "shortCiteRegEx": null, "year": 2012}, {"title": "Generating legible motion", "author": ["A. Dragan", "S. Srinivasa"], "venue": "Proceedings of Robotics: Science and Systems", "citeRegEx": "17", "shortCiteRegEx": null, "year": 2013}, {"title": "Improved driver modeling for human-in-the-loop vehicular con-  trol", "author": ["K. Driggs-Campbell", "V. Shia", "R. Bajcsy"], "venue": "Proceedings of the International Conference on Robotics and Automation", "citeRegEx": "18", "shortCiteRegEx": null, "year": 2015}, {"title": "Hierarchical recurrent neural network for skeleton based action recognition", "author": ["Y. Du", "W. Wang", "L. Wang"], "venue": "Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition", "citeRegEx": "19", "shortCiteRegEx": null, "year": 2015}, {"title": "Vision in and out of vehicles", "author": ["L. Fletcher", "N. Apostoloff", "L. Petersson", "A. Zelinsky"], "venue": "IEEE IS, 18(3)", "citeRegEx": "20", "shortCiteRegEx": null, "year": 2003}, {"title": "Correlating driver gaze with the road scene for driver assistance systems", "author": ["L. Fletcher", "G. Loy", "N. Barnes", "A. Zelinsky"], "venue": "Robotics and Autonomous Systems, 52(1)", "citeRegEx": "21", "shortCiteRegEx": null, "year": 2005}, {"title": "Will this car change the lane?turn signal recognition in the frequency domain", "author": ["B. Frohlich", "M. Enzweiler", "U. Franke"], "venue": "IEEE International Vehicle Symposium Proceedings", "citeRegEx": "22", "shortCiteRegEx": null, "year": 2014}, {"title": "Deepspeech: Scaling up end-to-end speech recognition", "author": ["A. Hannun", "C. Case", "J. Casper", "B. Catanzaro", "G. Diamos", "E. Elsen", "R. Prenger", "S. Satheesh", "S. Sengupta", "A. Coates"], "venue": "arXiv:1412.5567", "citeRegEx": "23", "shortCiteRegEx": null, "year": 2014}, {"title": "Hierarchical recurrent neural networks for long-term dependencies", "author": ["S. El Hihi", "Y. Bengio"], "venue": "NIPS", "citeRegEx": "24", "shortCiteRegEx": null, "year": 1995}, {"title": "Long short-term memory", "author": ["S. Hochreiter", "J. Schmidhuber"], "venue": "Neural computation, 9(8)", "citeRegEx": "25", "shortCiteRegEx": null, "year": 1997}, {"title": "Facial expression analysis for predicting unsafe driving behavior", "author": ["M.E. Jabon", "J.N. Bailenson", "E. Pontikakis", "L. Takayama", "C. Nass"], "venue": "IEEE Pervasive Computing, (4)", "citeRegEx": "26", "shortCiteRegEx": null, "year": 2010}, {"title": "Neuralmodels", "author": ["A. Jain"], "venue": "https://github.com/asheshjain399/ NeuralModels", "citeRegEx": "27", "shortCiteRegEx": null, "year": 2015}, {"title": "Beyond geometric path planning: Learning context-driven user preferences via sub-optimal feedback", "author": ["A. Jain", "S. Sharma", "A. Saxena"], "venue": "Proceedings of the International Symposium on Robotics Research", "citeRegEx": "28", "shortCiteRegEx": null, "year": 2013}, {"title": "Planit: A crowdsourcing approach for learning to plan paths from large scale preference feedback", "author": ["A. Jain", "D. Das", "J. Gupta", "A. Saxena"], "venue": "Proceedings of the International Conference on Robotics and Automation", "citeRegEx": "29", "shortCiteRegEx": null, "year": 2015}, {"title": "Car that knows before you do: Anticipating maneuvers via learning temporal driving models", "author": ["A. Jain", "H.S. Koppula", "B. Raghavan", "S. Soh", "A. Saxena"], "venue": "ICCV", "citeRegEx": "30", "shortCiteRegEx": null, "year": 2015}, {"title": "Learning preferences for manipulation tasks from online coactive feedback", "author": ["A. Jain", "S. Sharma", "T. Joachims", "A. Saxena"], "venue": "International Journal of Robotics Research", "citeRegEx": "31", "shortCiteRegEx": null, "year": 2015}, {"title": "Forwardbackward error: Automatic detection of tracking failures", "author": ["Z. Kalal", "K. Mikolajczyk", "J. Matas"], "venue": "Proceedings of the International Conference on Pattern Recognition", "citeRegEx": "32", "shortCiteRegEx": null, "year": 2010}, {"title": "Activity forecasting", "author": ["K.M. Kitani", "B.D. Ziebart", "J.A. Bagnell", "M. Hebert"], "venue": "In Proceedings of the European Conference on Computer Vision", "citeRegEx": "33", "shortCiteRegEx": "33", "year": 2012}, {"title": "Anticipating human activities using object affordances for reactive robotic response", "author": ["H. Koppula", "A. Saxena"], "venue": "Proceedings of Robotics: Science and Systems", "citeRegEx": "34", "shortCiteRegEx": null, "year": 2013}, {"title": "Learning spatio-temporal  structure from rgb-d videos for human activity detection and anticipation", "author": ["H. Koppula", "A. Saxena"], "venue": "Proceedings of the International Conference on Machine Learning", "citeRegEx": "35", "shortCiteRegEx": null, "year": 2013}, {"title": "Anticipating human activities using object affordances for reactive robotic response", "author": ["H. Koppula", "A. Saxena"], "venue": "IEEE Transactions on Pattern Analysis and Machine Intelligence", "citeRegEx": "36", "shortCiteRegEx": null, "year": 2015}, {"title": "Learning human activities and object affordances from rgb-d videos", "author": ["H. Koppula", "R. Gupta", "A. Saxena"], "venue": "International Journal of Robotics Research, 32(8)", "citeRegEx": "37", "shortCiteRegEx": null, "year": 2013}, {"title": "Anticipatory planning for humanrobot teams", "author": ["H. Koppula", "A. Jain", "A. Saxena"], "venue": "ISER", "citeRegEx": "38", "shortCiteRegEx": null, "year": 2014}, {"title": "Feature-based prediction of trajectories for socially compliant navigation", "author": ["M. Kuderer", "H. Kretzschmar", "C. Sprunk", "W. Burgard"], "venue": "Proceedings of Robotics: Science and Systems", "citeRegEx": "39", "shortCiteRegEx": null, "year": 2012}, {"title": "A driver behavior recognition method based on a driver model framework", "author": ["N. Kuge", "T. Yamamura", "O. Shimoyama", "A. Liu"], "venue": "Technical report, SAE Technical Paper", "citeRegEx": "40", "shortCiteRegEx": null, "year": 2000}, {"title": "Learning-based approach for online lane change intention prediction", "author": ["P. Kumar", "M. Perrollaz", "S. Lefevre", "C. Laugier"], "venue": "IEEE International Vehicle Symposium Proceedings", "citeRegEx": "41", "shortCiteRegEx": null, "year": 2013}, {"title": "Conditional random fields: Probabilistic models for segmenting and labeling sequence data", "author": ["J. Lafferty", "A. McCallum", "F. Pereira"], "venue": "Proceedings of the International Conference on Machine Learning", "citeRegEx": "42", "shortCiteRegEx": null, "year": 2001}, {"title": "Probabilistic analysis of dynamic scenes and collision risks assessment to improve driving safety", "author": ["C. Laugier", "I.E. Paromtchik", "M. Perrollaz", "MY. Yong", "J-D. Yoder", "C. Tay", "K. Mekhnacha", "A. Negre"], "venue": "ITS Magazine, IEEE, 3(4)", "citeRegEx": "43", "shortCiteRegEx": null, "year": 2011}, {"title": "Driver intent inference at urban intersections using the intelligent driver model", "author": ["M. Liebner", "M. Baumann", "F. Klanner", "C. Stiller"], "venue": "IEEE International Vehicle Symposium Proceedings", "citeRegEx": "44", "shortCiteRegEx": null, "year": 2012}, {"title": "An iterative image registration technique with an application to stereo vision", "author": ["B. Lucas", "T. Kanade"], "venue": "Proceedings of the International Joint Conference on Artificial Intelligence", "citeRegEx": "45", "shortCiteRegEx": null, "year": 1981}, {"title": "Human-robot collaborative manipulation planning using early prediction of human motion", "author": ["J. Mainprice", "D. Berenson"], "venue": "Proceedings of the IEEE/RSJ Conference on Intelligent Robots and Systems", "citeRegEx": "46", "shortCiteRegEx": null, "year": 2013}, {"title": "Active appearance models revisited", "author": ["I. Matthews", "S. Baker"], "venue": "International Journal of Computer Vision, 60 (2)", "citeRegEx": "47", "shortCiteRegEx": null, "year": 2004}, {"title": "Tell me dave: Context-sensitive grounding of natural language to manipulation instructions", "author": ["D.K. Misra", "J. Sung", "K. Lee", "A. Saxena"], "venue": "Proceedings of Robotics: Science and Systems", "citeRegEx": "48", "shortCiteRegEx": null, "year": 2014}, {"title": "Latent-dynamic discriminative models for continuous gesture recognition", "author": ["L. Morency", "A. Quattoni", "T. Darrell"], "venue": "Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition", "citeRegEx": "49", "shortCiteRegEx": null, "year": 2007}, {"title": "Lane change  intent prediction for driver assistance: On-road design and evaluation", "author": ["B. Morris", "A. Doshi", "M. Trivedi"], "venue": "IEEE International Vehicle Symposium Proceedings", "citeRegEx": "50", "shortCiteRegEx": null, "year": 2011}, {"title": "Machine learning: a probabilistic perspective", "author": ["K.P. Murphy"], "venue": "MIT press", "citeRegEx": "51", "shortCiteRegEx": null, "year": 2012}, {"title": "Multimodal deep learning", "author": ["J. Ngiam", "A. Khosla", "M. Kim", "J. Nam", "H. Lee", "A.Y. Ng"], "venue": "Proceedings of the International Conference on Machine Learning", "citeRegEx": "52", "shortCiteRegEx": null, "year": 2011}, {"title": "Graphical models for driver behavior recognition in a smartcar", "author": ["N. Oliver", "A.P. Pentland"], "venue": "IEEE International Vehicle Symposium Proceedings", "citeRegEx": "53", "shortCiteRegEx": null, "year": 2000}, {"title": "On the difficulty of training recurrent neural networks", "author": ["R. Pascanu", "T. Mikolov", "Y. Bengio"], "venue": "arXiv:1211.5063", "citeRegEx": "54", "shortCiteRegEx": null, "year": 2012}, {"title": "Look at the driver", "author": ["M. Rezaei", "R. Klette"], "venue": "look at the road: No distraction! no accident! In Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition", "citeRegEx": "55", "shortCiteRegEx": null, "year": 2014}, {"title": "J", "author": ["T. Rueda-Domingo", "P. Lardelli-Claret"], "venue": "Luna del Castillo, J. Jimenez-Moleon, M. Garcia-Martin, and A. Bueno-Cavanillas. The influence of passengers on the risk of the driver causing a car collision in spain: Analysis of collisions from 1990 to 1999. Accident Analysis & Prevention", "citeRegEx": "56", "shortCiteRegEx": null, "year": 2004}, {"title": "Human activity prediction: Early recognition of ongoing activities from streaming videos", "author": ["M.S. Ryoo"], "venue": "Proceedings of the International Conference on Computer Vision", "citeRegEx": "57", "shortCiteRegEx": null, "year": 2011}, {"title": "Good features to track", "author": ["J. Shi", "C. Tomasi"], "venue": "Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition", "citeRegEx": "58", "shortCiteRegEx": null, "year": 1994}, {"title": "Semiautonomous vehicular control using driver modeling", "author": ["V. Shia", "Y. Gao", "R. Vasudevan", "K.D. Campbell", "T. Lin", "F. Borrelli", "R. Bajcsy"], "venue": "IEEE Transactions on Intelligent Transportation Systems, 15(6)", "citeRegEx": "59", "shortCiteRegEx": null, "year": 2014}, {"title": "A human aware mobile robot motion planner", "author": ["E.A. Sisbot", "L.F. Marin-Urias", "R. Alami", "T. Simeon"], "venue": "IEEE Transactions on Robotics", "citeRegEx": "60", "shortCiteRegEx": null, "year": 2007}, {"title": "Robobarista: Object part-based transfer of manipulation trajectories from crowd-sourcing in 3d pointclouds", "author": ["J. Sung", "S.H. Jin", "A. Saxena"], "venue": "Proceedings of the International Symposium on Robotics Research", "citeRegEx": "61", "shortCiteRegEx": null, "year": 2015}, {"title": "Sequence to sequence learning with neural networks", "author": ["I. Sutskever", "O. Vinyals", "Q.V. Le"], "venue": "Advances in Neural Information Processing Systems", "citeRegEx": "62", "shortCiteRegEx": null, "year": 2014}, {"title": "Looking-in and looking-out vision for urban intelligent assistance: Estimation of driver attentive state and dynamic surround for safe merging and braking", "author": ["A. Tawari", "S. Sivaraman", "M. Trivedi", "T. Shannon", "M. Tippelhofer"], "venue": "IEEE IVS", "citeRegEx": "63", "shortCiteRegEx": null, "year": 2014}, {"title": "Probabilistic robotics", "author": ["S. Thrun", "W. Burgard", "D. Fox"], "venue": "MIT press", "citeRegEx": "64", "shortCiteRegEx": null, "year": 2005}, {"title": "Sparse bayesian learning and the relevance vector machine", "author": ["M.E. Tipping"], "venue": "Journal of Machine Learning Research, 1", "citeRegEx": "65", "shortCiteRegEx": null, "year": 2001}, {"title": "Detection and tracking of point features", "author": ["C. Tomasi", "T. Kanade"], "venue": "International Journal of Computer Vision", "citeRegEx": "66", "shortCiteRegEx": null, "year": 1991}, {"title": "Looking-in and looking-out of a vehicle: Computer-vision-based enhanced vehicle safety", "author": ["M. Trivedi", "T. Gandhi", "J. McCall"], "venue": "IEEE Transactions on Intelligent Transportation Systems, 8(1)", "citeRegEx": "67", "shortCiteRegEx": null, "year": 2007}, {"title": "Safe semi-autonomous control with enhanced driver modeling", "author": ["R. Vasudevan", "V. Shia", "Y. Gao", "R. Cervera-Navarro", "R. Bajcsy", "F. Borrelli"], "venue": "American Control Conference", "citeRegEx": "68", "shortCiteRegEx": null, "year": 2012}, {"title": "Robust real-time face detection", "author": ["P. Viola", "M.J. Jones"], "venue": "International Journal of Computer Vision, 57(2)", "citeRegEx": "69", "shortCiteRegEx": null, "year": 2004}, {"title": "Action recognition with improved trajectories", "author": ["H. Wang", "C. Schmid"], "venue": "Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition", "citeRegEx": "70", "shortCiteRegEx": null, "year": 2013}, {"title": "Hidden conditional random fields for gesture recognition", "author": ["S.B. Wang", "A. Quattoni", "L. Morency", "D. Demirdjian", "T. Darrell"], "venue": "Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition", "citeRegEx": "71", "shortCiteRegEx": null, "year": 2006}, {"title": "A dynamic conditional random field model for object segmentation in image sequences", "author": ["Y. Wang", "Q. Ji"], "venue": "Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition", "citeRegEx": "72", "shortCiteRegEx": null, "year": 2005}, {"title": "Probabilistic movement modeling for intention inference in human-robot interaction", "author": ["Z. Wang", "K. M\u00fclling", "M. Deisenroth", "H. Amor", "D. Vogt", "B. Sch\u00f6lkopf", "J. Peters"], "venue": "International Journal of Robotics Research", "citeRegEx": "73", "shortCiteRegEx": null, "year": 2013}, {"title": "Supervised descent method and its applications to face alignment", "author": ["X. Xiong", "F. De la Torre"], "venue": "In Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition,", "citeRegEx": "74", "shortCiteRegEx": "74", "year": 2013}, {"title": "Supervised descent method for solving nonlinear least squares problems in computer vision", "author": ["X. Xiong", "F. De la Torre"], "venue": "arXiv preprint arXiv:1405.0601,", "citeRegEx": "75", "shortCiteRegEx": "75", "year": 2014}, {"title": "A survey of recent advances in face detection", "author": ["C. Zhang", "Z. Zhang"], "venue": "Technical report, Microsoft Research", "citeRegEx": "76", "shortCiteRegEx": null, "year": 2010}, {"title": "Planning-based prediction for pedestrians", "author": ["B.D. Ziebart", "N. Ratliff", "G. Gallagher", "C. Mertz", "K. Peterson", "J.A. Bagnell", "M. Hebert", "A.K. Dey", "S. Srinivasa"], "venue": "Proceedings of the IEEE/RSJ Conference on Intelligent Robots and Systems", "citeRegEx": "77", "shortCiteRegEx": null, "year": 2009}], "referenceMentions": [{"referenceID": 40, "context": ", are successful in alerting drivers whenever they commit a dangerous maneuver [43].", "startOffset": 79, "endOffset": 83}, {"referenceID": 53, "context": "We therefore need mechanisms that can alert drivers before they perform a dangerous maneuver in order to avert many such accidents [56].", "startOffset": 131, "endOffset": 135}, {"referenceID": 19, "context": "Some previous works [22, 41, 50] also predict a driver\u2019s future maneuver.", "startOffset": 20, "endOffset": 32}, {"referenceID": 38, "context": "Some previous works [22, 41, 50] also predict a driver\u2019s future maneuver.", "startOffset": 20, "endOffset": 32}, {"referenceID": 47, "context": "Some previous works [22, 41, 50] also predict a driver\u2019s future maneuver.", "startOffset": 20, "endOffset": 32}, {"referenceID": 36, "context": "Anticipation of the future actions of a human is an important perception task with applications in robotics and computer vision [39, 77, 33, 34, 73].", "startOffset": 128, "endOffset": 148}, {"referenceID": 74, "context": "Anticipation of the future actions of a human is an important perception task with applications in robotics and computer vision [39, 77, 33, 34, 73].", "startOffset": 128, "endOffset": 148}, {"referenceID": 30, "context": "Anticipation of the future actions of a human is an important perception task with applications in robotics and computer vision [39, 77, 33, 34, 73].", "startOffset": 128, "endOffset": 148}, {"referenceID": 31, "context": "Anticipation of the future actions of a human is an important perception task with applications in robotics and computer vision [39, 77, 33, 34, 73].", "startOffset": 128, "endOffset": 148}, {"referenceID": 70, "context": "Anticipation of the future actions of a human is an important perception task with applications in robotics and computer vision [39, 77, 33, 34, 73].", "startOffset": 128, "endOffset": 148}, {"referenceID": 70, "context": "This differentiates anticipation from activity recognition [73], where the complete temporal context is available for prediction.", "startOffset": 59, "endOffset": 63}, {"referenceID": 30, "context": "Previous works on anticipation [33, 34, 39] usually deal with singledata modality and do not address anticipation for sensory-rich robotics applications.", "startOffset": 31, "endOffset": 43}, {"referenceID": 31, "context": "Previous works on anticipation [33, 34, 39] usually deal with singledata modality and do not address anticipation for sensory-rich robotics applications.", "startOffset": 31, "endOffset": 43}, {"referenceID": 36, "context": "Previous works on anticipation [33, 34, 39] usually deal with singledata modality and do not address anticipation for sensory-rich robotics applications.", "startOffset": 31, "endOffset": 43}, {"referenceID": 27, "context": "Additionally, they learn representations using shallow architectures [30, 33, 34, 39] that cannot handle long temporal dependencies [6].", "startOffset": 69, "endOffset": 85}, {"referenceID": 30, "context": "Additionally, they learn representations using shallow architectures [30, 33, 34, 39] that cannot handle long temporal dependencies [6].", "startOffset": 69, "endOffset": 85}, {"referenceID": 31, "context": "Additionally, they learn representations using shallow architectures [30, 33, 34, 39] that cannot handle long temporal dependencies [6].", "startOffset": 69, "endOffset": 85}, {"referenceID": 36, "context": "Additionally, they learn representations using shallow architectures [30, 33, 34, 39] that cannot handle long temporal dependencies [6].", "startOffset": 69, "endOffset": 85}, {"referenceID": 3, "context": "Additionally, they learn representations using shallow architectures [30, 33, 34, 39] that cannot handle long temporal dependencies [6].", "startOffset": 132, "endOffset": 135}, {"referenceID": 27, "context": "Images from the data set [30] for a left lane change.", "startOffset": 25, "endOffset": 29}, {"referenceID": 56, "context": "These systems warn drivers when they perform a potentially dangerous maneuver [59, 68].", "startOffset": 78, "endOffset": 86}, {"referenceID": 65, "context": "These systems warn drivers when they perform a potentially dangerous maneuver [59, 68].", "startOffset": 78, "endOffset": 86}, {"referenceID": 18, "context": "Driver monitoring for distraction and drowsiness has also been extensively researched [21, 55].", "startOffset": 86, "endOffset": 94}, {"referenceID": 52, "context": "Driver monitoring for distraction and drowsiness has also been extensively researched [21, 55].", "startOffset": 86, "endOffset": 94}, {"referenceID": 6, "context": "Vehicle trajectory has been used to predict the intent for lane change or turn maneuver [9, 22, 41, 44].", "startOffset": 88, "endOffset": 103}, {"referenceID": 19, "context": "Vehicle trajectory has been used to predict the intent for lane change or turn maneuver [9, 22, 41, 44].", "startOffset": 88, "endOffset": 103}, {"referenceID": 38, "context": "Vehicle trajectory has been used to predict the intent for lane change or turn maneuver [9, 22, 41, 44].", "startOffset": 88, "endOffset": 103}, {"referenceID": 41, "context": "Vehicle trajectory has been used to predict the intent for lane change or turn maneuver [9, 22, 41, 44].", "startOffset": 88, "endOffset": 103}, {"referenceID": 47, "context": "Previous works have addressed maneuver anticipation [1, 50, 15, 67] through sensoryfusion from multiple cameras, GPS, and vehicle dynamics.", "startOffset": 52, "endOffset": 67}, {"referenceID": 12, "context": "Previous works have addressed maneuver anticipation [1, 50, 15, 67] through sensoryfusion from multiple cameras, GPS, and vehicle dynamics.", "startOffset": 52, "endOffset": 67}, {"referenceID": 64, "context": "Previous works have addressed maneuver anticipation [1, 50, 15, 67] through sensoryfusion from multiple cameras, GPS, and vehicle dynamics.", "startOffset": 52, "endOffset": 67}, {"referenceID": 47, "context": "[50] and Trivedi et al.", "startOffset": 0, "endOffset": 4}, {"referenceID": 64, "context": "[67] used Relevance Vector Machine (RVM) for intent prediction and performed sensory fusion by concatenating feature vectors.", "startOffset": 0, "endOffset": 4}, {"referenceID": 23, "context": "Our work is also related to works on driver behavior prediction with different sensors [26, 21, 20], and vehicular controllers which act on these predictions [59, 68, 18].", "startOffset": 87, "endOffset": 99}, {"referenceID": 18, "context": "Our work is also related to works on driver behavior prediction with different sensors [26, 21, 20], and vehicular controllers which act on these predictions [59, 68, 18].", "startOffset": 87, "endOffset": 99}, {"referenceID": 17, "context": "Our work is also related to works on driver behavior prediction with different sensors [26, 21, 20], and vehicular controllers which act on these predictions [59, 68, 18].", "startOffset": 87, "endOffset": 99}, {"referenceID": 56, "context": "Our work is also related to works on driver behavior prediction with different sensors [26, 21, 20], and vehicular controllers which act on these predictions [59, 68, 18].", "startOffset": 158, "endOffset": 170}, {"referenceID": 65, "context": "Our work is also related to works on driver behavior prediction with different sensors [26, 21, 20], and vehicular controllers which act on these predictions [59, 68, 18].", "startOffset": 158, "endOffset": 170}, {"referenceID": 15, "context": "Our work is also related to works on driver behavior prediction with different sensors [26, 21, 20], and vehicular controllers which act on these predictions [59, 68, 18].", "startOffset": 158, "endOffset": 170}, {"referenceID": 70, "context": "Anticipating human activities has shown to improve human-robot collaboration [73, 36, 46, 38, 16].", "startOffset": 77, "endOffset": 97}, {"referenceID": 33, "context": "Anticipating human activities has shown to improve human-robot collaboration [73, 36, 46, 38, 16].", "startOffset": 77, "endOffset": 97}, {"referenceID": 43, "context": "Anticipating human activities has shown to improve human-robot collaboration [73, 36, 46, 38, 16].", "startOffset": 77, "endOffset": 97}, {"referenceID": 35, "context": "Anticipating human activities has shown to improve human-robot collaboration [73, 36, 46, 38, 16].", "startOffset": 77, "endOffset": 97}, {"referenceID": 13, "context": "Anticipating human activities has shown to improve human-robot collaboration [73, 36, 46, 38, 16].", "startOffset": 77, "endOffset": 97}, {"referenceID": 30, "context": "Similarly, forecasting human navigation trajectories has enabled robots to plan sociable trajectories around humans [33, 8, 39, 29].", "startOffset": 116, "endOffset": 131}, {"referenceID": 5, "context": "Similarly, forecasting human navigation trajectories has enabled robots to plan sociable trajectories around humans [33, 8, 39, 29].", "startOffset": 116, "endOffset": 131}, {"referenceID": 36, "context": "Similarly, forecasting human navigation trajectories has enabled robots to plan sociable trajectories around humans [33, 8, 39, 29].", "startOffset": 116, "endOffset": 131}, {"referenceID": 26, "context": "Similarly, forecasting human navigation trajectories has enabled robots to plan sociable trajectories around humans [33, 8, 39, 29].", "startOffset": 116, "endOffset": 131}, {"referenceID": 54, "context": "Feature matching techniques have been proposed for anticipating human activities from videos [57].", "startOffset": 93, "endOffset": 97}, {"referenceID": 14, "context": "Modeling human preferences has enabled robots to plan good trajectories [17, 60, 28, 31].", "startOffset": 72, "endOffset": 88}, {"referenceID": 57, "context": "Modeling human preferences has enabled robots to plan good trajectories [17, 60, 28, 31].", "startOffset": 72, "endOffset": 88}, {"referenceID": 25, "context": "Modeling human preferences has enabled robots to plan good trajectories [17, 60, 28, 31].", "startOffset": 72, "endOffset": 88}, {"referenceID": 28, "context": "Modeling human preferences has enabled robots to plan good trajectories [17, 60, 28, 31].", "startOffset": 72, "endOffset": 88}, {"referenceID": 3, "context": "Such interactions are absent in the previous works, and they use shallow architectures [6] that do not properly model temporal aspects of human activities.", "startOffset": 87, "endOffset": 90}, {"referenceID": 66, "context": "The vision approaches related to our work are face detection and tracking [69, 76], statistical models of face [10] and pose estimation methods for face [75].", "startOffset": 74, "endOffset": 82}, {"referenceID": 73, "context": "The vision approaches related to our work are face detection and tracking [69, 76], statistical models of face [10] and pose estimation methods for face [75].", "startOffset": 74, "endOffset": 82}, {"referenceID": 7, "context": "The vision approaches related to our work are face detection and tracking [69, 76], statistical models of face [10] and pose estimation methods for face [75].", "startOffset": 111, "endOffset": 115}, {"referenceID": 72, "context": "The vision approaches related to our work are face detection and tracking [69, 76], statistical models of face [10] and pose estimation methods for face [75].", "startOffset": 153, "endOffset": 157}, {"referenceID": 7, "context": "Active Appearance Model (AAM) [10] and its variants [47, 74] statistically model the shape and texture of the face.", "startOffset": 30, "endOffset": 34}, {"referenceID": 44, "context": "Active Appearance Model (AAM) [10] and its variants [47, 74] statistically model the shape and texture of the face.", "startOffset": 52, "endOffset": 60}, {"referenceID": 71, "context": "Active Appearance Model (AAM) [10] and its variants [47, 74] statistically model the shape and texture of the face.", "startOffset": 52, "endOffset": 60}, {"referenceID": 72, "context": "AAMs have also been used to estimate the 3D-pose of a face from a single image [75] and in design of assistive features for driver monitoring [55, 63].", "startOffset": 79, "endOffset": 83}, {"referenceID": 52, "context": "AAMs have also been used to estimate the 3D-pose of a face from a single image [75] and in design of assistive features for driver monitoring [55, 63].", "startOffset": 142, "endOffset": 150}, {"referenceID": 60, "context": "AAMs have also been used to estimate the 3D-pose of a face from a single image [75] and in design of assistive features for driver monitoring [55, 63].", "startOffset": 142, "endOffset": 150}, {"referenceID": 66, "context": "In our approach we adapt off-theshelf available face detection [69] and tracking algorithms [58] (see Section VI).", "startOffset": 63, "endOffset": 67}, {"referenceID": 55, "context": "In our approach we adapt off-theshelf available face detection [69] and tracking algorithms [58] (see Section VI).", "startOffset": 92, "endOffset": 96}, {"referenceID": 1, "context": "We demonstrate this by using the Constrained Local Neural Field (CLNF) model [4] and tracking 68 fixed landmark points on the driver\u2019s face and estimating the 3D head-pose.", "startOffset": 77, "endOffset": 80}, {"referenceID": 32, "context": "Temporal models are commonly used to model human activities [35, 49, 71, 72].", "startOffset": 60, "endOffset": 76}, {"referenceID": 46, "context": "Temporal models are commonly used to model human activities [35, 49, 71, 72].", "startOffset": 60, "endOffset": 76}, {"referenceID": 68, "context": "Temporal models are commonly used to model human activities [35, 49, 71, 72].", "startOffset": 60, "endOffset": 76}, {"referenceID": 69, "context": "Temporal models are commonly used to model human activities [35, 49, 71, 72].", "startOffset": 60, "endOffset": 76}, {"referenceID": 39, "context": "The discriminative temporal models are mostly inspired by the Conditional Random Field (CRF) [42] which captures the temporal structure of the problem.", "startOffset": 93, "endOffset": 97}, {"referenceID": 69, "context": "[72] and Morency et al.", "startOffset": 0, "endOffset": 4}, {"referenceID": 46, "context": "[49] propose dynamic extensions of the CRF for image segmentation and gesture recognition respectively.", "startOffset": 0, "endOffset": 4}, {"referenceID": 61, "context": "On the other hand, generative approaches for temporal modeling include various filtering methods, such as Kalman and particle filters [64], Hidden Markov Models, and many types of Dynamic Bayesian Networks [51].", "startOffset": 134, "endOffset": 138}, {"referenceID": 48, "context": "On the other hand, generative approaches for temporal modeling include various filtering methods, such as Kalman and particle filters [64], Hidden Markov Models, and many types of Dynamic Bayesian Networks [51].", "startOffset": 206, "endOffset": 210}, {"referenceID": 6, "context": "Some previous works [9, 40, 53] used HMMs to model different aspects of the driver\u2019s behaviour.", "startOffset": 20, "endOffset": 31}, {"referenceID": 37, "context": "Some previous works [9, 40, 53] used HMMs to model different aspects of the driver\u2019s behaviour.", "startOffset": 20, "endOffset": 31}, {"referenceID": 50, "context": "Some previous works [9, 40, 53] used HMMs to model different aspects of the driver\u2019s behaviour.", "startOffset": 20, "endOffset": 31}, {"referenceID": 27, "context": "In the following sections, we will describe the Autoregressive Input-Output HMM (AIO-HMM) for maneuver anticipation [30] and will use it as a baseline to compare our deep learning approach.", "startOffset": 116, "endOffset": 120}, {"referenceID": 21, "context": "Unlike AIO-HMM our deep architecture have internal memory which allows it to handle long temporal dependencies [24].", "startOffset": 111, "endOffset": 115}, {"referenceID": 51, "context": "Two building blocks of our architecture are Recurrent Neural Networks (RNNs) [54] and Long Short-Term Memory (LSTM) units [25].", "startOffset": 77, "endOffset": 81}, {"referenceID": 22, "context": "Two building blocks of our architecture are Recurrent Neural Networks (RNNs) [54] and Long Short-Term Memory (LSTM) units [25].", "startOffset": 122, "endOffset": 126}, {"referenceID": 59, "context": "Our work draws upon ideas from previous works on RNNs and LSTM from the language [62], speech [23], and vision [14] communities.", "startOffset": 81, "endOffset": 85}, {"referenceID": 20, "context": "Our work draws upon ideas from previous works on RNNs and LSTM from the language [62], speech [23], and vision [14] communities.", "startOffset": 94, "endOffset": 98}, {"referenceID": 11, "context": "Our work draws upon ideas from previous works on RNNs and LSTM from the language [62], speech [23], and vision [14] communities.", "startOffset": 111, "endOffset": 115}, {"referenceID": 16, "context": "Our approach to the joint training of multiple RNNs is related to the recent work on hierarchical RNNs [19].", "startOffset": 103, "endOffset": 107}, {"referenceID": 11, "context": "We consider RNNs in multi-modal setting, which is related to the recent use of RNNs in imagecaptioning [14].", "startOffset": 103, "endOffset": 107}, {"referenceID": 49, "context": "We focus on sensory-rich robotics applications, and our architecture extends previous works doing sensoryfusion with feed-forward networks [52, 61] to the fusion of temporal streams.", "startOffset": 139, "endOffset": 147}, {"referenceID": 58, "context": "We focus on sensory-rich robotics applications, and our architecture extends previous works doing sensoryfusion with feed-forward networks [52, 61] to the fusion of temporal streams.", "startOffset": 139, "endOffset": 147}, {"referenceID": 67, "context": "This differentiates anticipation from activity recognition [70, 37] where in the latter the complete observation sequence is available at test time.", "startOffset": 59, "endOffset": 67}, {"referenceID": 34, "context": "This differentiates anticipation from activity recognition [70, 37] where in the latter the complete observation sequence is available at test time.", "startOffset": 59, "endOffset": 67}, {"referenceID": 22, "context": "In this work we propose a deep RNN architecture with Long Short-Term Memory (LSTM) units [25] for anticipation.", "startOffset": 89, "endOffset": 93}, {"referenceID": 51, "context": "A standard RNN [54] takes in a temporal sequence of vectors (x1,x2, .", "startOffset": 15, "endOffset": 19}, {"referenceID": 51, "context": "RNNs with this choice of f suffer from a well-studied problem of vanishing gradients [54], and hence are poor at capturing long temporal dependencies which are essential for anticipation.", "startOffset": 85, "endOffset": 89}, {"referenceID": 22, "context": "A common remedy to vanishing gradients is to replace tanh non-linearities by Long Short-Term Memory cells [25].", "startOffset": 106, "endOffset": 110}, {"referenceID": 22, "context": "LSTM is a network of neurons that implements a memory cell [25].", "startOffset": 59, "endOffset": 63}, {"referenceID": 31, "context": "Previous works treat anticipation as a recognition problem [34, 50, 57] and train discriminative classifiers (such as SVM or CRF) on the complete temporal context.", "startOffset": 59, "endOffset": 71}, {"referenceID": 47, "context": "Previous works treat anticipation as a recognition problem [34, 50, 57] and train discriminative classifiers (such as SVM or CRF) on the complete temporal context.", "startOffset": 59, "endOffset": 71}, {"referenceID": 54, "context": "Previous works treat anticipation as a recognition problem [34, 50, 57] and train discriminative classifiers (such as SVM or CRF) on the complete temporal context.", "startOffset": 59, "endOffset": 71}, {"referenceID": 0, "context": "Examples include autonomous vehicles that reason from multiple sensors [3] or robots that jointly reason over perception and language instructions [48].", "startOffset": 71, "endOffset": 74}, {"referenceID": 45, "context": "Examples include autonomous vehicles that reason from multiple sensors [3] or robots that jointly reason over perception and language instructions [48].", "startOffset": 147, "endOffset": 151}, {"referenceID": 66, "context": "trained Viola-Jones face detector [69].", "startOffset": 34, "endOffset": 38}, {"referenceID": 55, "context": "From the detected face, we first extract visually discriminative (facial) points using the Shi-Tomasi corner detector [58] and then track those facial points using the Kanade-Lucas-Tomasi (KLT) tracker [45, 58, 66].", "startOffset": 118, "endOffset": 122}, {"referenceID": 42, "context": "From the detected face, we first extract visually discriminative (facial) points using the Shi-Tomasi corner detector [58] and then track those facial points using the Kanade-Lucas-Tomasi (KLT) tracker [45, 58, 66].", "startOffset": 202, "endOffset": 214}, {"referenceID": 55, "context": "From the detected face, we first extract visually discriminative (facial) points using the Shi-Tomasi corner detector [58] and then track those facial points using the Kanade-Lucas-Tomasi (KLT) tracker [45, 58, 66].", "startOffset": 202, "endOffset": 214}, {"referenceID": 63, "context": "From the detected face, we first extract visually discriminative (facial) points using the Shi-Tomasi corner detector [58] and then track those facial points using the Kanade-Lucas-Tomasi (KLT) tracker [45, 58, 66].", "startOffset": 202, "endOffset": 214}, {"referenceID": 29, "context": "To address this problem, we re-initialize the tracker with new discriminative facial points once the number of tracked points falls below a threshold [32].", "startOffset": 150, "endOffset": 154}, {"referenceID": 1, "context": "We track facial landmark points using the CLNF tracker [4] which results in more consistent 2D trajectories as compared to the KLT tracker [58] used by Jain et al.", "startOffset": 55, "endOffset": 58}, {"referenceID": 55, "context": "We track facial landmark points using the CLNF tracker [4] which results in more consistent 2D trajectories as compared to the KLT tracker [58] used by Jain et al.", "startOffset": 139, "endOffset": 143}, {"referenceID": 27, "context": "[30].", "startOffset": 0, "endOffset": 4}, {"referenceID": 1, "context": "For example we replace the KLT tracker described above with the Constrained Local Neural Field (CLNF) model [4] and track 68 fixed landmark points on the driver\u2019s face.", "startOffset": 108, "endOffset": 111}, {"referenceID": 27, "context": "In this section we propose alternate Bayesian networks [30] based on Hidden Markov Model (HMM) for maneuver anticipation.", "startOffset": 55, "endOffset": 59}, {"referenceID": 62, "context": "Discriminative methods, such as the Support Vector Machine and the Relevance Vector Machine [65], which do not model the temporal aspect perform poorly on anticipation tasks, as we show in Section VIII.", "startOffset": 92, "endOffset": 96}, {"referenceID": 4, "context": "Such interactions can be modeled by an Input-Output HMM (IOHMM) [7].", "startOffset": 64, "endOffset": 67}, {"referenceID": 47, "context": "\u2022 SVM [50]: Support Vector Machine is a discriminative classifier [11].", "startOffset": 6, "endOffset": 10}, {"referenceID": 8, "context": "\u2022 SVM [50]: Support Vector Machine is a discriminative classifier [11].", "startOffset": 66, "endOffset": 70}, {"referenceID": 47, "context": "[50] takes this approach for anticipating maneuvers.", "startOffset": 0, "endOffset": 4}, {"referenceID": 9, "context": "\u2022 Random-Forest [12]: This is also a discriminative classifier that learns many decision trees from the training data, and at test time it averages the prediction of the individual decision trees.", "startOffset": 16, "endOffset": 20}, {"referenceID": 27, "context": "[30] modeled driving maneuvers with this Bayesian network.", "startOffset": 0, "endOffset": 4}, {"referenceID": 27, "context": "[30] proposed this Bayesian net-", "startOffset": 0, "endOffset": 4}, {"referenceID": 47, "context": "[50] considered binary classification problem (lane change vs driving straight) and used RVM [65].", "startOffset": 0, "endOffset": 4}, {"referenceID": 62, "context": "[50] considered binary classification problem (lane change vs driving straight) and used RVM [65].", "startOffset": 93, "endOffset": 97}, {"referenceID": 24, "context": "Our RNN and LSTM implementations are open-sourced and available at NeuralModels [27].", "startOffset": 80, "endOffset": 84}, {"referenceID": 10, "context": "Our overall architecture (F-RNN-EL and F-RNN-UL) have nearly 25,000 parameters that are learned using RMSprop [13].", "startOffset": 110, "endOffset": 114}, {"referenceID": 27, "context": "[30].", "startOffset": 0, "endOffset": 4}, {"referenceID": 47, "context": "[50] SVM 73.", "startOffset": 0, "endOffset": 4}, {"referenceID": 47, "context": "[50] SVM 15.", "startOffset": 0, "endOffset": 4}, {"referenceID": 1, "context": "We use [4] to track 68 facial landmark points and estimate 3D head-pose.", "startOffset": 7, "endOffset": 10}, {"referenceID": 27, "context": "We replace the pipeline for extracting features from the driver\u2019s face [30] by a Constrained Local Neural Field (CLNF) model [4].", "startOffset": 71, "endOffset": 75}, {"referenceID": 1, "context": "We replace the pipeline for extracting features from the driver\u2019s face [30] by a Constrained Local Neural Field (CLNF) model [4].", "startOffset": 125, "endOffset": 128}, {"referenceID": 2, "context": "20 milliseconds using Theano [5] on Nvidia K40 GPU on Ubuntu 12.", "startOffset": 29, "endOffset": 32}, {"referenceID": 48, "context": "We efficiently estimate Q(\u0398; \u0398\u0302) using the forward-backward algorithm [51].", "startOffset": 70, "endOffset": 74}, {"referenceID": 48, "context": "The inference in equation (20) simply requires a forwardpass [51] of the AIO-HMM, the complexity of which is O(T (|S| + |S||z| + |S||x|)).", "startOffset": 61, "endOffset": 65}, {"referenceID": 66, "context": "input Driving videos, GPS, Maps and Vehicle Dynamics output Probability of each maneuver Initialize the face tracker with the driver\u2019s face while driving do Track the driver\u2019s face [69] Extract features z1 and x T 1 (Sec.", "startOffset": 181, "endOffset": 185}], "year": 2016, "abstractText": "Advanced Driver Assistance Systems (ADAS) have made driving safer over the last decade. They prepare vehicles for unsafe road conditions and alert drivers if they perform a dangerous maneuver. However, many accidents are unavoidable because by the time drivers are alerted, it is already too late. Anticipating maneuvers beforehand can alert drivers before they perform the maneuver and also give ADAS more time to avoid or prepare for the danger. In this work we propose a vehicular sensor-rich platform and learning algorithms for maneuver anticipation. For this purpose we equip a car with cameras, Global Positioning System (GPS), and a computing device to capture the driving context from both inside and outside of the car. In order to anticipate maneuvers, we propose a sensory-fusion deep learning architecture which jointly learns to anticipate and fuse multiple sensory streams. Our architecture consists of Recurrent Neural Networks (RNNs) that use Long Short-Term Memory (LSTM) units to capture long temporal dependencies. We propose a novel training procedure which allows the network to predict the future given only a partial temporal context. We introduce a diverse data set with 1180 miles of natural freeway and city driving, and show that we can anticipate maneuvers 3.5 seconds before they occur in realtime with a precision and recall of 90.5% and 87.4% respectively.", "creator": "LaTeX with hyperref package"}}}