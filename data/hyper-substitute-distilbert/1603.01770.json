{"id": "1603.01770", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "6-Mar-2016", "title": "An Argument-based Creative Assistant for Harmonic Blending", "abstract": "simultaneous compression forms a powerful marker for structural creativity where, for information, the properties of two memory spaces may be coded in generally consistent manner to produce a clear harmonic space. particularly, proving about the importance grammatical property acquisition in producing input spaces and evaluating functional results promoting conceptual blending is only rigorous task. in the specific setting of text harmony, defining appropriate performance features requiring melodic pairs and evaluating unusual musical structures requires deep throat apt confirmation. through this paper, colleagues provide logical creative tool that helps musicologists to uncover and to verify collaboration strategies. composition tool allows a music expert frequently specify arguments over given transition formats. appropriate arguments are then sorted by the system diagram defining combinations of features in an idiom - blending facility. a music expert can assess whether the intuitive linguistic tuning makes musicological errors and easily - recognize the arguments ( pairs of features ) to explore programming strategies that can potentially produce better harmonic performances. we conclude with later discussion discussed future work that would further automate the harmonisation mission.", "histories": [["v1", "Sun, 6 Mar 2016 00:06:09 GMT  (201kb,D)", "http://arxiv.org/abs/1603.01770v1", "8 pp; submitted to 7th International Conference on Computational Creativity"]], "COMMENTS": "8 pp; submitted to 7th International Conference on Computational Creativity", "reviews": [], "SUBJECTS": "cs.SD cs.AI", "authors": ["maximos kaliakatsos-papakostas", "roberto confalonieri", "joseph corneli", "asterios zacharakis", "emilios cambouropoulos"], "accepted": false, "id": "1603.01770"}, "pdf": {"name": "1603.01770.pdf", "metadata": {"source": "CRF", "title": "An Argument-based Creative Assistant for Harmonic Blending Paper type: System Description Paper", "authors": ["Maximos Kaliakatsos-Papakostas", "Roberto Confalonieri", "Joseph Corneli", "Asterios Zacharakis", "Emilios Cambouropoulos"], "emails": ["max@mus.auth.gr", "aszachar@mus.auth.gr", "emilios@mus.auth.gr", "confalonieri@iiia.csic.es", "j.corneli@gold.ac.uk"], "sections": [{"heading": null, "text": "An Argument-based Creative Assistant for Harmonic Blending Paper type: System Description Paper\nMaximos Kaliakatsos-Papakostasa, Roberto Confalonierib, Joseph Cornelic, Asterios Zacharakisa and Emilios Cambouropoulosa aDepartment of Music, Aristotle University of Thessaloniki, Greece\nbArtificial Intelligence Research Institute, IIIA-CSIC, Bellaterra (Barcelona), Spain cDepartment of Computing, Goldsmiths, University of London, UK\na{max,aszachar,emilios}@mus.auth.gr bconfalonieri@iiia.csic.es\ncj.corneli@gold.ac.uk"}, {"heading": "Abstract", "text": "Conceptual blending is a powerful tool for computational creativity where, for example, the properties of two harmonic spaces may be combined in a consistent manner to produce a novel harmonic space. However, deciding about the importance of property features in the input spaces and evaluating the results of conceptual blending is a nontrivial task. In the specific case of musical harmony, defining the salient features of chord transitions and evaluating invented harmonic spaces requires deep musicological background knowledge. In this paper, we propose a creative tool that helps musicologists to evaluate and to enhance harmonic innovation. This tool allows a music expert to specify arguments over given transition properties. These arguments are then considered by the system when defining combinations of features in an idiomblending process. A music expert can assess whether the new harmonic idiom makes musicological sense and re-adjust the arguments (selection of features) to explore alternative blends that can potentially produce better harmonic spaces. We conclude with a discussion of future work that would further automate the harmonisation process."}, {"heading": "Introduction", "text": "The invention of new harmonic spaces in this paper is conceived as a computational creative process according to which a new harmonic idiom is created by means of blending the \u2018atoms\u2019 of harmony, i.e., transitions between chords. The blended transitions are created by combining the features characterising pairs of transitions belonging to two idioms (expressed as sets of potentially learned transitions) according to an amalgam-based algorithm (Confalonieri et al., 2015; Eppe et al., 2015b) that implements Fauconnier and Turner (2002)\u2019s theory of conceptual blending. The transitions are then used in an extended harmonic space that accommodates the two initial harmonic spaces, linked with the new blended transitions.\nWhen modeling creative processes computationally, one of the key questions is how good are the created artefacts. The approach to evaluation that has been applied most frequently within computational creativity requires a human to evaluate attributes of the created work or the system\u2019s operation. Basic measures consider the typicality of a generated artefact within a particular genre, or the quality of the generated work according to the users\u2019 aesthetic judgement (Ritchie, 2007).\nTransition blending system\nBlends imported to extended\nmatrices\nUser evaluation\nGraphical User Interface\nDisplay of extended matrix of transitions. Does it\nmake musical sense?\nUser defines input idioms\nQuestions to user /\nargumentation\nTransitions from idioms as blending inputs Map answers to blending features\n\u03b1\n\u03b2\n\u03b3\n\u03b6\n\u03b9\nFigure 1: A schematic diagram of the system\u2019s workflow.\nIn music blending, the evaluation of artefacts is not a trivial matter. This is due not only to the time evolving nature of the final output, but also to the lack of clearly defined criteria for their assessment. In the particular case of transition blending, the evaluation of the blends is of key importance, in order to produce musically meaningful extended harmonic spaces. To evaluate the set of blended transitions and the corresponding generated extended harmonic space, several musical features need to be taken into account according to indications by musicologists. The importance of each particular feature, however, is not known in advance and musicologists need to make adjustments by experimenting with a large set of test cases.\nTo ease this task, in this paper, we propose a creative tool (Figure 1) that assists a musicologist with the evaluation of harmonic blends. The system allows a musicologist to specify arguments \u2014 abstracting the properties of chords and transitions \u2014 and to use them for iterative evaluation of the blended outcome, based on the transitions that the system proposes in order to connect two (potentially remote) harmonic spaces.\nUsing arguments to make and explain decisions has been proposed and explored in Artificial Intelligence (?), where an argument is a reason for believing a statement, choosing\nar X\niv :1\n60 3.\n01 77\n0v 1\n[ cs\n.S D\n] 6\nM ar\n2 01\n6\nan option, or doing an action. In most existing works on argumentation, an argument is either considered as an abstract entity whose origin and structure are not defined (Dung, 1995), or it is a logical proof for a statement where the proof is built from a knowledge base (Amgoud and Prade, 2009).\nIn our approach, arguments encapsulate desirable properties that the user would like to have in the resulting transition blends. Arguments are specified by the user by \u2018answering\u2019 specific questions over the features of the idioms selected as input for the transition blending process. Providing some higher level arguments as inputs to the system is equivalent to allowing a musical expert to interact with it in a language he/she understands. This offers the user a flexible way to adjust the harmonic blending properties according to different input scenarios in order to improve the creativity of the system. Extended experimentation with the system \u2014by making use of the available arguments\u2014 can enable music experts to provide valuable feedback regarding the functionality of transition features, thus directly intervening in the blending process by answering simple questions. In a future scenario, the assessment of the system will be based on merely musicological criteria that should be more clearly defined.\nThe paper is organised as follow. In the next section, we describe the harmonic blending creative process embedded in a creative assistant tool we implemented. Next, we describe the methodology of transition blending and extending harmonic spaces. We show how user arguments are used to evaluate transition blends based on two criteria resembling two of the optimality principles of conceptual blending. Then, we present a process-based system evaluation that focuses on the creative acts of programmers (Colton et al., 2014). This evaluation is helpful in guiding further developments of the system. These are discussed in a concluding section.\nSystem overview and test cases Figure 1 illustrates a diagram of the presented system. The user (music expert) interacts with the system through the Graphical User Interface (GUI), where she/he selects two initial idioms (harmonic spaces) in \u03b3 and defines the important features used in conceptual blending by answering to specific questions (argumentation) in \u03b2. The selected initial idioms are described as sets of chord transitions, while the provided answers to questions are mapped to enabling/disabling features of transitions (see Section \u2018Chord transitions description and blending\u2019) that define the outcome of transition blending (see Section \u2018Evaluation of transition blending via arguments\u2019).\nAfterwards, pairs of transition in the two initial harmonic spaces are given as inputs to the transition blending system in where new transitions are invented through conceptual blending. These transitions are then integrated into an extended musical idiom that includes the initial idioms selected by the user, while the role of the new transitions is to provide musically meaningful connections between the initial harmonic spaces. The created extended idiom is displayed to the user in the GUI in terms of a transition matrix (see Section \u2018From transition blends to transition matrices\u2019).\nBy observing the matrix, the music expert evaluates (\u03b9) the results produced by the current blending setup, i.e., the given questions to the argumentation module (\u03b2), and re-adjusts her/his answers in \u03b2 accordingly.\nSeveral scenarios for initial idiom combinations are available to the user. The system included several harmonic blending test cases according to which the user could blend simple \u2018artificial\u2019 harmonic spaces as well as harmonic spaces trained from data in different tonalities. The artificial harmonic spaces are constructed to include simple transitions in order to allow clear interpretations of the results, e.g., a C major space included the chords C, F and G7. Among the trained idioms that have been examined, there are sets of Bach chorales in major and minor mode, and sets of modal chorales in several modes.\nThe test cases, in which harmonic spaces in different tonalities are blended, resemble the musical task of finding transition paths for tonality modulations (changing the tonality of a given harmonic space). This task allowed music experts to identify arguments for defining the features of transition blending that connect potentially remote harmonic spaces (e.g., C major with F] major) in a manner that is explainable in music theory in terms of tonality modulations. Through the processes offered by the system, the music experts were able to come to conclusions about what transition features are important for constructing meaningful connections between different combinations of pairs of initial harmonic spaces.\nMethodological aspects of transition blending and extending harmonic spaces\nThe cognitive theory of conceptual blending by Fauconnier and Turner (2002) has been extensively used in linguistics, music composition (Zbikowski, 2002), music cognition (Antovic, 2009, 2011) and other domains mainly as an analytical tool, which is useful for explaining the cognitive process that humans undergo when engaged in creative acts. According to this theory, human creativity is modeled as a process by which a new concept is constructed by taking the commonalities among two input spaces into account, to form a so-called generic space, and by projecting their non-common structure in a selective way to a novel blended space, called a blend.\nIn computational creativity, conceptual blending has been modeled by Goguen (2006) as a generative mechanism, according to which input spaces are modeled as algebraic specifications and a blend is computed as a categorical colimit. A computational framework that extends Goguen\u2019s approach has been developed in the context of the COncept INVENtion Theory1 (COINVENT) project (Schorlemmer et al., 2014) based on the notion of amalgams (?). According to this framework, input spaces are described as sets of features, properties and relations, and an amalgam-based workflow finds the blends (Confalonieri et al., 2015; Eppe et al., 2015b). The amalgam-based workflow generalises input concepts until a generic space is found and \u2018combines\u2019 generalised versions of the input spaces to create blends that\n1http://www.coinvent-project.eu\nare consistent or satisfy certain properties that relate to the knowledge domain (Figure 2).2\nAmalgam-based conceptual blending has been applied to invent chord cadences (Eppe et al., 2015a; Zacharakis, Kaliakatsos-Papakostas, and Cambouropoulos, 2015). In this setting, cadences are considered as special cases of chord transitions\u2014pairs of chords, where the first chord is followed by the second one\u2014 that are described by means of features such as the roots or types of the involved chords, or intervals between voice motions, among others. When blending two transitions, the amalgam-based algorithm first finds a generic space between them (point 1 in Figure 2). For instance, in the case of blending the perfect with the Phrygian cadences (Figure 3)\u2014described by the transitions I1: G7\u2192 C and I2: B[m\u2192 C5 respectively\u2014 their generic space consists of any transition that has a second chord with the root note C, since this is the root note of both inputs\u2019 second chords (C and C5).\nAfter a generic space is found, the amalgam-based process computes the amalgam of two input spaces by unifying their content. If the resulting amalgam is inconsistent, then it iteratively generalises the properties of the inputs (point 2 in Figure 2), until the resulting unification is consistent (point 3 in Figure 2). For instance, trying to directly unify the transitions I1: G7\u2192C and I2: B[m\u2192C5 would yield an inconsistent amalgam, since a transition cannot both include and not include a leading note to the second chord\u2019s tonic (which is a property of I1 and the I2 respectively). Therefore, the amalgam-based process generalises the clashing property in one of the inputs (e.g., the property describing the absence of leading note would be left empty in I2) and tries to unify the generalised versions of the inputs again. After a number of generalisation steps are applied (point 2\n2In the process of blending through amalgams, the notions of \u2018amalgam\u2019 and \u2018blend\u2019 are the same. Therefore, in the following paragraphs they are used interchangeably.\nin Figure 2), the resulting blend is consistent (point 3 in Figure 2). However, it may be the case that the blend is not complete, in the sense that this process may have generated an over-generalised term.\nBlending completion (Fauconnier and Turner, 2002) is a domain-specific process that uses background knowledge to consistently assign specific properties to generalised terms. In the hitherto discussed example, blend completion is used for completing the A[ note as the chord\u2019s fifth in blending the perfect and Phrygian cadence in order to obtain the tritone substitution cadence (Figure 3).\nAfter several blends have been computed, an evaluation process ranks them according to some optimality principles (Fauconnier and Turner, 2002, Chapter 16). These principles are a necessary aspect of conceptual blending since they allow to filter interesting blends from the (potentially too) many possible ones3. A complete description of optimality principles is out of the scope of this paper and the reader is referred to Goguen and Harrell (2010) for applications of such principles in the Alloy algorithm. We give, however, two extreme examples of \u2018bad blends\u2019 for clarifying the importance of using optimality principles in conceptual blending. \u2022 Example 1, violating the symmetry principle: Each of the\ninput spaces is a trivial form of a blend. This is a bad blend, because no information from the other input spaces is considered.\n\u2022 Example 2, violating the web principle: Consider a blend that includes all properties of the generic space, but all other information are filled by properties that are not included in any of the input spaces. This blend has the least possible connections with the input spaces and therefore, the least amount of information from the inputs is identifiable in this blend.\nThese examples suggest two criteria for ranking the blends; we provide a computational characterisation of them below.\nChord transitions description and blending Individual chord transitions are the \u2018atoms\u2019 of the methodology followed herein to construct new transition matrices. Specifically, transition sets from two musical idioms provide input transitions for blending, producing a list of blended\n3The amalgam-based algorithm produces many blends by following alternative generalisation paths.\ntransitions that are afterwards embeded in an extended harmonic space. This methodology is described briefly in the next section while some definitions regarding chord transitions follow. Definition 1. A chord transition c is described by a set of features F . In this work a transition is represented by 17 features. Features 1-6 refer to the involved chords. Features 8 to 10 indicate changes during the transitions and are based on the Directed Interval Class (DIC) vector (Cambouropoulos, Katsiavalos, and Tsougras, 2013; Cambouropoulos, 2012). Feature 7 accounts for the change that occurred regarding the chords\u2019 root notes. The features considered important in this work are the following:\n1. fromRoot: the root pitch class of the first chord, 2. toRoot: the root pitch class of the second chord, 3. fromType: the type of the first chord (GCT base), 4. toType: the type of the second chord (GCT base), 5. fromPCs: the pitch classes included in the first chord, 6. toPCs: the pitch classes included in the second chord, 7. DICinfo: the DIC vector of the transition, 8. DIChas0: Boolean value indicating whether the DIC of\nthe transition has 0, 9. DIChas1: Boolean value indicating whether the DIC of\nthe transition has 1, 10. DIChasMinus1: Boolean value indicating whether the\nDIC of the transition has \u22121, 11. ascSemZero: Boolean value indicating whether the first\nchord has the relative pitch class value 11, 12. descSemZero: Boolean value indicating whether the first\nchord has the relative pitch class value 1, 13. semZero: Boolean value indicating whether the first chord\nhas the relative pitch class value 11 or 1, 14. ascSemNextRoot: Boolean value indicating whether the\nfirst chord has a pitch class with ascending semitone relation with the pitch class of the second chord\u2019s root,\n15. descSemNextRoot: Boolean value indicating whether the first chord has a pitch class with descending semitone relation with the pitch class of the second chord\u2019s root,\n16. semNextRoot: Boolean value indicating whether the first chord has a pitch class with ascending or descending semitone relation with the pitch class of the second chord\u2019s root, and\n17. 5thRootRelation: Boolean value indicating whether the first chord\u2019s root note is a fifth above of the second\u2019s. Each feature can be considered as a function that assigns\na value to a chord transition c. Features\u2019 values are defined differently depending on the properties they represent. For instance, features 3 to 8 are set-value functions that assign a set of values to a chord. We refer to them as Fi(c). The value of the feature 7 is a vector and we refer to it as ~f(c). Finally, all the other features are binary functions and we refer to them as fi(c).\nFrom transition blends to transition matrices In the literature, an effective and common way to describe chord progressions in a music idiom in a statistical manner is by using Markov models (see Kaliakatsos-Papakostas and Cambouropoulos (2014); Simon, Morris, and Basu (2008), among others). Such models reflect the probabilities of each chord following other chords in the idiom, as trained or statistically measured throughout all the pieces in the examined idiom. First-order Markov models, specifically, indicate the probability of transitions from one chord to another, disregarding information about previous chords. Therefore, individual transitions play an important role on indicating particular characteristics of an idiom.\nA convenient way to represent a first order Markov model is through transition matrices, which include one respective row and column for each chord in the examined idiom. The probability value in the i-th row and the j-th column exhibits the probability of the i-th chord going to the j-th \u2014 the probabilities of each row sum to unit. The utilised chords are actually represented by chord group exemplars, obtained by the method described in Kaliakatsos-Papakostas et al. (2015), while transitions between chords that pertain to the same chord group are disregarded (this neutralises the diagonal). The representation of chords is based on the General Chord Type representation (Cambouropoulos, KaliakatsosPapakostas, and Tsougras, 2014).\nThen, an important question is: How would a blended idiom be expressed in terms of a transition matrix, provided that the transition matrices of two initial idioms are available?\nAmong many possible answers, the idea examined in the present system is to create an extended transition matrix that includes not only an altered version of the initial ones, but also new transitions that allow moving across chords of the initial idioms by potentially using new chords. The examined methodology uses transition blending to create new transitions that: (a) maximally preserve the common parts of transitions between the two initial spaces, and (b) incorporate blended characteristics for creating a smooth \u2018morphing\u2019 harmonic effect when moving from chords of one space to chords of the other. An abstract illustration of an extended matrix is given in Figure 4.\nBy analysing the graphical representation of an extended matrix as depicted in Figure 4 the following facts are highlighted:\n1. By using transitions in Ii, only chords of the i-th idiom are used. When using the transition probabilities in Ii, the resulting harmonisations preserve the character of idiom i.\n2. Transitions in Ai\u2212j create direct jumps from chords of the i-th to chords of the j-th idiom. If a blended transition happens to be in Ai\u2212j there is no need for further considerations \u2013 such a transition can be included in the extended matrix.\n3. Transitions in Bi\u2212X constitute harmonic motions from a chord of idiom i to a newly created chord by blending. Similarly, transitions in the BX\u2212j arrive at chords in idiom j from new chords. For moving from idiom i to idiom j\nusing one external chord cx that was produced by blending, a chain of two transitions is needed: ci\u2192 cx followed by a transition cx \u2192 cj , where ci in idiom i and cj in idiom j respectively. A chain of two consecutive transitions with one intermediate external chord from chords of i to chords of j will be denoted as Bi\u2212X\u2212j.\n4. Sector C transitions incorporate pairs of chords that exist outside the i-th and j-th idioms. Having two external chords, transitions in C violate our hypothesis for moving from one known chord sets to the other using one new chord at most; therefore, blends resulting to C-type blends are disregarded.\nBased on this analysis of the extended matrix, a methodology is proposed for using blends between transitions in I1 and I2. Thereby, transitions in I1 are blended with ones in I2 and a number of the best blends is stored for further investigation, creating a pool of best blends. Based on multiple simulations, a large number of the best blends (i.e. 100) in each blending simulation should be inserted in the pool of best blends (B), so that several commuting scenarios can be created between the initial transition spaces. Thus, a greater number of blends in the pool of best blends introduces a larger number of possible commuting paths in Ai\u2212j or in Bi\u2212X\u2212j.\nEvaluation of transition blending via arguments By applying the aforementioned blending process a pool of best blends is created that is afterwards used for connecting the transition blocks of two initial idioms, through forming an extended matrix. When a music expert is using the system, she/he is able to select pairs of initial input idioms, choose which aspects of blending are important through arguments (analysed in the following paragraphs)\nand evaluate/re-adjust this choice by observing the produced results in the extended matrix.\nThe user evaluates the importance of several transition features by answering questions based on the connecting transitions produced by blending in the extended matrix. The features related to the transitions and their constituent chords are classified into 9 questions (Table 1).\nQ1: Are roots and types of chords important? Q2: Are individual pitch classes of chords important? Q3: Are repeating pitch classes in transitions important? Q4: Are semitone steps in transitions important? Q5: Are tone steps in transitions important? Q6: Are the intervalic contents of transitions important? Q7: Are semitone motions to the tonic important? Q8: Are semitones to the second chord\u2019s root important? Q9: Are motions of the chord roots by 5th important? The first two questions concern characteristics of the chords that constitute the transition, mapping the user answers to features from 1 to 6, while the remaining seven questions concern intervalic changes that occur within the transition, mapping the user answers to features from 7 to 17. Relating questions to transition features was performed with the involvement of music experts, to ensure that the mapping is as accurate and as informative to the user as possible.\nWe denote the set of questions available to the user as Q. When a user selects a question, an argument is automatically generated. For the sake of this paper, an argument is defined as follows.\nDefinition 2. An argumentA is a tuple \u3008q, F \u3009, where q \u2208 Q and F \u2282 F .\nThe user can specify at most 9 arguments, each of them is mapped to a set of properties. The set of user arguments {A1, . . . , A9} corresponding to answers to Q will be denoted by A. We assume to have a function \u03c8 : A \u2192 F that returns the set of chord and transition properties associated with an argument (e.g, for the purposes of the current analysis, Table 1 specifies \u03c8 as a look-up function). The arguments are used to compute two criteria in order to rate a blend: total association and symmetry.\nThe total association indicates the total number of properties that a blend inherits from the inputs. A blend with higher input associations is preferable since it is structurally more deeply related with the inputs. The total association is calculated by taking the individual association of a blend w.r.t. the input chord transitions into account. The individual association of a blend b w.r.t. to an input I , denoted as a(b, I), is defined as:\na(b, I) = \u2211 Ai\u2208A Val(Ai, b, I)\nwhere Val : A \u2192 R is a function that takes an argument as input and aggregates the values of the chord and transition change properties associated with the argument, by interpreting them according to some music background knowledge. Depending on the type of argument, Val is defined in different ways.\nWhen an argument refers to the roots and types of chords (A1), Val is defined as:\nVal(A1, b, I) = \u2211\nFj\u2208\u03c8(A1)\nequals(Fj(I), Fj(b))\nThe value ofA1 is calculated by counting how many properties \u2014among fromRoot, toRoot, fromType and toType\u2014 are equals between a blend b and an input I . equals is a function that returns 1 when two sets are equals and 0 otherwise.\nWhen an argument refers to the individual pitch classes of chords (A2), Val is defined as:\nVal(A2, b, I) = \u2211\nFj\u2208\u03c8(A2)\n|Fj(I) \u2229 Fj(b)|\nThe value of A2 is calculated as the number of elements that are common in the set-value properties fromRelPCs and toRelPCs of a blend b and an input I .\nWhen an argument refers to the intervalic contents of transitions (A6), Val is defined as:\nVal(A6, b, I) = norm[0,1](\u03c1~f(I), ~f(b))\nThe value of A6 is calculated as the Pearson\u2019s correlation coefficient of the vector-value property DICinfo of a blend b and an input I . Higher correlations in the DIC vectors of two transitions indicate higher resemblance; norm is a function that normalises the Pearson\u2019s coefficient from the interval [\u22121, 1] to the interval [0, 1]. For all the other types of arguments, Val is defined as:\nVal(Ai, b, I) = \u2211\nfj\u2208\u03c8(Ai)\n1\u2212 (fj(I)\u2212 fj(b))\nBased on the above definitions, the total association value is the sum of the individual associations.\nassoc(b) = \u2211 Ii\u2208I a(b, Ii)\nwhere I is the set of input spaces, containing in this specific case, I1 and I2.\nSymmetry, on the other hand, reflects the balance of properties that a blend inherits from both input spaces. A blend has a high symmetry when it inherits an almost equal proportion of properties from both input spaces. Blends having higher symmetry are preferred to those with lower symmetry, since a high symmetry reflects a stronger hybridisation of structural characteristics. Hybridisation is an important principle to evaluate transition blends.\nThe blend symmetry is defined in terms of its \u2018asymmetry\u2019. The asymmetry of a blend w.r.t. the inputs, denoted as asym(b), is calculated as:\u2223\u2223\u2223\u2223a(b, I1)2 + a(b, I1)a(b, I2)a(b, I1)2 + a(b, I2) \u2212 a(b, I2) 2 + a(b, I1)a(b, I2) a(b, I2)2 + a(b, I1)\n\u2223\u2223\u2223\u2223 The value of asym(b) is defined in [0, 1], where 0 stands for a perfect symmetry (equal association with both inputs) and 1 stands for total asymmetry (association only with one input). Additionally, the non-absolute version of the above equation suggests the prevailing input, with a negative value indicating dominating association of the blend with the first input and a positive value contrarily.\nThe total rate of a blend is computed by taking the input association and asymmetry values into account.\nrate(b) = assoc(b)(1\u2212 asym(b))\nassoc(b) + (1\u2212 asym(b))\nThe above expression promotes pairs of association and symmetry that are both high, while a simple sum would allow a low value of the one to be covered by the other.\nFinally, a decision making criterion to compare any pair of blends b1, b2 \u2208 B can be defined as follows. Definition 3 (Decision criterion). A blend b1 is preferred to a blend b2 if and only if rate(b1) \u2265 rate(b2).\nIt is worthy to notice that the above criterion guarantees that any pair of blends is comparable, and, consequently, it allows to decide which blends are the best ones. This is an important property for blend evaluation and, generally, for approaches to argumentation-based decision making (Amgoud and Prade, 2009; Bonet and Geffner, 1996).\nSystem evaluation Referring to Figure 1, via the interface \u03b1, the user has access to modules \u03b3, and \u03b2 which can be used to specify concepts that will inform the resulting product, namely, the input idioms and arguments that impose constraints on the generated blend. These are translated by the system into processfriendly formats. Module embodies the (process-level) concept of a system that make use of the supplied idioms and the blending properties to generate example transition\nmatrices, \u03b6. In the current version of the system, these transitions are evaluated by the user (music expert) in step \u03b9 using sophisticated harmonic knowledge that reflects historically established musical aesthetic. The user can then return to the GUI \u03b1, and adjust the settings of \u03b3 and \u03b2 to regenerate the transitions.\nThis is illustrated in Figure 5 in box P1, using the diagrammatic extension to the FACE model by Colton et al. (2014). Here, capital letters F , A, C, or E are creative acts that generate a framing, aesthetic, concept, or example, respectively. Administrative acts S and T denote selection and translation. Lower-case letters denote the generated artefact in each case (e.g., the concept c corresponding to the concept-creation act C). Subscripts p, g, or m indicate whether the act takes place at the process, ground, or meta level. Inside each box, stacks show the dependence in development epochs, and arrows show run-time message passing. Acts taken by the programmer or user are decorated with a bar, whereas acts taken by the system itself receive no extra decoration.\nIn the current version of the system, apart from the programmer\u2019s creative acts specifying the modules and their interconnections, and the algorithm C p that turns inputs into blends, the user, who is assumed to be a music expert, must intervene in the system in two places.\nFirst, the user defines system settings C\u03b3g , C\u03b2g that correspond to the selection of input idioms and of arguments respectively. Second, after the run completes, he or she evaluates the system output via A\u03b9g .\nThe system\u2019s primary responsibilities take place through the creative acts E g , which generate blends, and S[a\u03b2,\u03b3g ](e\n\u2217), in which the aestheticA\u03b2,\u03b3g (a unified label for assoc and asym, which are defined anew in each run, based on a fixed translation of the user\u2019s arguments, as specified in the previous section) is applied to rate the possible blends, and select to a final extended transition matrix.\nTherefore, the key idea behind what has been implemented so far is an \u2018automated ranking/evaluation\u2019 step that guides the selection of blends, S[a\u03b2,\u03b3g ](e\n\u2217) according to the arguments defined by the user. The development of the programmatic components that operationalise this process has relied on both computer science and musicological insights. This approach has been characterised as meaningful per se through informal feedback provided by musical experts \u2013 but is perhaps especially valuable because it constitutes a prototype for more involved automated evaluation of computer-generated harmonic spaces.\nIndeed, the next step towards the development of a more autonomously creative system using the same architecture is fairly clear: future work would need to \u2018close the loop\u2019 computationally, connecting the evaluation of generated transition matrices with the parameter-setting (i.e., argumentation) stage, and making this run autonomously to refine the system\u2019s behavior. This as-yet hypothetical situation is illustrated in the box P2.\nHere, the programmer has translated some of the userspecified aesthetics into code T [A\u03b9g], and invented a metalevel concept C\u03b1m defining a system component that can au-\ntomatically apply these aesthetics to the generated transition matrices e\u03b6g as in order to automatically generate new system settings C\u03b3g , C \u03b2 g .\nConclusion, Discussion and Future Work In this paper, we described a methodology for harmonic blending and we proposed a creative system that assists musicologists with the evaluation and enhancement of harmonic innovation. We defined some harmonic features of chord transitions utilised for evaluating blends of transitions, leading to the invention of novel harmonic spaces. The system allows a musicologist to specify arguments over these features that are taken into account in the generation of new harmonic spaces. The music expert can then assess whether the new harmonic idiom makes musicological sense and readjust the arguments to explore alternative blends that can potentially produce better harmonic spaces.\nThe main advantage of the current system is the agile interaction through which the user can express desirable properties over the transition blends and their argument-based evaluation in order to produce musically meaningful results. The added value of argumentation is the ranking/evaluation of blended transition \u2013 obtained by conceptual blending of two input transition belonging to two musical idioms \u2013 by answering questions which abstract several properties of chord transitions. On the other hand, the evaluation of the creative output of the system, i.e., an extended harmonic space that includes blended transitions, is carried out by the user via an introspective argumentative dialogue.\nIn a future work we intent to use the argumentation-based process for evaluating the blended harmonisations of user defined melodies, i.e., actual music output. Additionally, mapping the properties of the blended idiom or, at a latter stage of a harmonised melody, back to the parameter-setting stage opens an interesting direction for future research and further improvements of the system. The added value of argumentation can be stressed, for instance, by letting the system suggest possible refinements of the initial user arguments, progressively converting part of the introspective user evaluation into a more explicit format. For example, a future version of the system would be based on identifying harmonic features of the input spaces that automatically suggest an \u2018optimal\u2019 set of initial arguments. The current version of the system is an already-usable prototype on the way towards the development of a more autonomous creative system."}], "references": [{"title": "Using arguments for making and explaining decisions", "author": ["L. Amgoud", "H. Prade"], "venue": "Artificial Intelligence 173(3-4):413\u2013436.", "citeRegEx": "Amgoud and Prade,? 2009", "shortCiteRegEx": "Amgoud and Prade", "year": 2009}, {"title": "Musical Metaphors in Serbian and Romani Children: An Empirical Study", "author": ["M. Antovic"], "venue": "Metaphor and Symbol 24(3):184\u2013202.", "citeRegEx": "Antovic,? 2009", "shortCiteRegEx": "Antovic", "year": 2009}, {"title": "Musical metaphor revisited: Primitives, universals and conceptual blending", "author": ["M. Antovic"], "venue": "Universals and Conceptual Blending (February 17, 2011).", "citeRegEx": "Antovic,? 2011", "shortCiteRegEx": "Antovic", "year": 2011}, {"title": "Justifying practical reasoning", "author": ["K. Atkinson", "T. Bench-Capon", "P. McBurney"], "venue": "Proc. of the Fourth Workshop on Computational Models of Natural Argument (CMNA\u201904), 87\u201390.", "citeRegEx": "Atkinson et al\\.,? 2004", "shortCiteRegEx": "Atkinson et al\\.", "year": 2004}, {"title": "Persuasion in practical argument using value-based argumentation frameworks", "author": ["T.J.M. Bench-Capon"], "venue": "Journal of Logic and Computation 13(3):429\u2013448.", "citeRegEx": "Bench.Capon,? 2003", "shortCiteRegEx": "Bench.Capon", "year": 2003}, {"title": "Arguing for decisions: A qualitative model of decision making", "author": ["B. Bonet", "H. Geffner"], "venue": "Proc. of the 12th Conference on Uncertainty in Artificial Intelligence (UAI\u201996), 98\u2013105.", "citeRegEx": "Bonet and Geffner,? 1996", "shortCiteRegEx": "Bonet and Geffner", "year": 1996}, {"title": "An idiom-independent representation of chords for computational music analysis and generation", "author": ["E. Cambouropoulos", "M. Kaliakatsos-Papakostas", "C. Tsougras"], "venue": "Proceeding of the joint 11th Sound and Music Computing Conference (SMC) and 40th International", "citeRegEx": "Cambouropoulos et al\\.,? 2014", "shortCiteRegEx": "Cambouropoulos et al\\.", "year": 2014}, {"title": "Idiom-independent harmonic pattern recognition based on a novel chord transition representation", "author": ["E. Cambouropoulos", "A. Katsiavalos", "C. Tsougras"], "venue": "In Proceedings of the 3rd International Workshop on Folk Music Analysis (FMA2013), FMA 2013.", "citeRegEx": "Cambouropoulos et al\\.,? 2013", "shortCiteRegEx": "Cambouropoulos et al\\.", "year": 2013}, {"title": "A Directional Interval Class Representation of Chord Transitions", "author": ["E. Cambouropoulos"], "venue": "In Proceedings of the Joint Conference ICMPC-ESCOM 2012 (12th International Conference for Music Perception and Cognition, & 8th Conference of the European Society for the", "citeRegEx": "Cambouropoulos,? 2012", "shortCiteRegEx": "Cambouropoulos", "year": 2012}, {"title": "Assessing progress in building autonomously creative systems", "author": ["S. Colton", "A. Pease", "J. Corneli", "M. Cook", "T. Llano"], "venue": "Ventura, D.; Colton, S.; Lavrac, N.; and Cook, M., eds., Proceedings of the Fifth International Conference on Computational Creativity.", "citeRegEx": "Colton et al\\.,? 2014", "shortCiteRegEx": "Colton et al\\.", "year": 2014}, {"title": "Stakeholder groups in computational creativity research and practice", "author": ["S. Colton", "A. Pease", "J. Corneli", "M. Cook", "R. Hepworth", "D. Ventura"], "venue": "Besold, T. R.; Schorlemmer, M.; and Smaill, A., eds., Computational Creativity Research: Towards Creative Machines, Think-", "citeRegEx": "Colton et al\\.,? 2015", "shortCiteRegEx": "Colton et al\\.", "year": 2015}, {"title": "Upward Refinement for Conceptual Blending in Description Logic \u2013 An ASPbased Approach and Case Study in EL", "author": ["R. Confalonieri", "M. Schorlemmer", "E. Plaza", "M. Eppe", "O. Kutz", "R. Pe\u00f1aloza"], "venue": "International Workshop on Ontologies and Logic Programming", "citeRegEx": "Confalonieri et al\\.,? 2015", "shortCiteRegEx": "Confalonieri et al\\.", "year": 2015}, {"title": "Modelling serendipity in a computational context", "author": ["J. Corneli", "A. Pease", "S. Colton", "A. Jordanous", "C. Guckelsberger"], "venue": null, "citeRegEx": "Corneli et al\\.,? \\Q2015\\E", "shortCiteRegEx": "Corneli et al\\.", "year": 2015}, {"title": "On the acceptability of arguments and its fundamental role in nonmonotonic reasoning, logic programming and n-person games", "author": ["P.M. Dung"], "venue": "Artificial Intelligence 77(2):321 \u2013 357.", "citeRegEx": "Dung,? 1995", "shortCiteRegEx": "Dung", "year": 1995}, {"title": "Computational invention of cadences and chord progressions by conceptual chord-blending", "author": ["M. Eppe", "R. Confalonier", "E. Maclean", "M. KaliakatsosPapakostas", "E. Cambouropoulos", "M. Schorlemmer", "M. Codescu", "K.-U. K\u00fchnberger"], "venue": "International Joint Con-", "citeRegEx": "Eppe et al\\.,? 2015a", "shortCiteRegEx": "Eppe et al\\.", "year": 2015}, {"title": "ASP, Amalgamation, and the Conceptual Blending Workflow", "author": ["M. Eppe", "E. Maclean", "R. Confalonieri", "O. Kutz", "M. Schorlemmer", "E. Plaza"], "venue": "Calimeri, F.; Ianni, G.; and Truszczynski, M., eds., Logic Programming and Nonmonotonic Reasoning, volume 9345 of Lec-", "citeRegEx": "Eppe et al\\.,? 2015b", "shortCiteRegEx": "Eppe et al\\.", "year": 2015}, {"title": "The Way We Think: Conceptual Blending And The Mind\u2019s Hidden Complexities", "author": ["G. Fauconnier", "M. Turner"], "venue": "Basic Books.", "citeRegEx": "Fauconnier and Turner,? 2002", "shortCiteRegEx": "Fauconnier and Turner", "year": 2002}, {"title": "Style: A Computational and Conceptual Blending-Based Approach", "author": ["J. Goguen", "D.F. Harrell"], "venue": "Argamon, S., and Dubnov, S., eds., The Structure of Style: Algorithmic Approaches to Understanding Manner and Meaning. Berlin: Springer. 147\u2013170.", "citeRegEx": "Goguen and Harrell,? 2010", "shortCiteRegEx": "Goguen and Harrell", "year": 2010}, {"title": "Mathematical Models of Cognitive Space and Time", "author": ["J. Goguen"], "venue": "Andler, D.; Ogawa, Y.; Okada, M.; and Watanabe, S., eds., Reasoning and Cognition, volume 2 of Interdisciplinary Conference Series on Reasoning Studies. Keio University Press.", "citeRegEx": "Goguen,? 2006", "shortCiteRegEx": "Goguen", "year": 2006}, {"title": "A fitness function for creativity in jazz improvisation and beyond", "author": ["A. Jordanous"], "venue": "Proceedings of the International Conference on Computational Creativity, 223\u2013227.", "citeRegEx": "Jordanous,? 2010", "shortCiteRegEx": "Jordanous", "year": 2010}, {"title": "Probabilistic harmonisation with fixed intermediate chord constraints", "author": ["M. Kaliakatsos-Papakostas", "E. Cambouropoulos"], "venue": "Proceeding of the joint 11th Sound and Music Computing Conference (SMC) and 40th International Computer Music Conference (ICMC), ICMC\u2013SMC", "citeRegEx": "Kaliakatsos.Papakostas and Cambouropoulos,? 2014", "shortCiteRegEx": "Kaliakatsos.Papakostas and Cambouropoulos", "year": 2014}, {"title": "Evaluating the General Chord Type representation in tonal music and organising GCT chord labels in functional chord categories", "author": ["M. Kaliakatsos-Papakostas", "A. Zacharakis", "C. Tsougras", "E. Cambouropoulos"], "venue": "Proceedings of the 4th International Conference on Music In-", "citeRegEx": "Kaliakatsos.Papakostas et al\\.,? 2015", "shortCiteRegEx": "Kaliakatsos.Papakostas et al\\.", "year": 2015}, {"title": "How to reason defeasibly", "author": ["J. Pollock"], "venue": "Artificial Intelligence Journal 57:1\u201342.", "citeRegEx": "Pollock,? 1992", "shortCiteRegEx": "Pollock", "year": 1992}, {"title": "Some empirical criteria for attributing creativity to a computer program", "author": ["G.D. Ritchie"], "venue": "Minds and Machines 17:67\u201399.", "citeRegEx": "Ritchie,? 2007", "shortCiteRegEx": "Ritchie", "year": 2007}, {"title": "Coinvent: Towards a computational concept invention theory", "author": ["M. Schorlemmer", "A. Smaill", "K.-U. K\u00fchnberger", "O. Kutz", "S. Colton", "E. Cambouropoulos", "A. Pease"], "venue": "5th Int. Conf. on Computational Creativity.", "citeRegEx": "Schorlemmer et al\\.,? 2014", "shortCiteRegEx": "Schorlemmer et al\\.", "year": 2014}, {"title": "Mysong: Automatic accompaniment generation for vocal melodies", "author": ["I. Simon", "D. Morris", "S. Basu"], "venue": "Proceedings of the SIGCHI Conference on Human Factors in Computing Systems, CHI \u201908, 725\u2013734. New York, NY, USA: ACM.", "citeRegEx": "Simon et al\\.,? 2008", "shortCiteRegEx": "Simon et al\\.", "year": 2008}, {"title": "Conceptual blending in music cadences: A formal model and subjective evaluation", "author": ["A. Zacharakis", "M. Kaliakatsos-Papakostas", "E. Cambouropoulos"], "venue": "Proceedings of the 4th International Conference on Music Information Retrieval (ISMIR 2015).", "citeRegEx": "Zacharakis et al\\.,? 2015", "shortCiteRegEx": "Zacharakis et al\\.", "year": 2015}, {"title": "Conceptualizing Music: Cognitive Structure, Theory, and Analysis", "author": ["L.M. Zbikowski"], "venue": "Oxford University Press.", "citeRegEx": "Zbikowski,? 2002", "shortCiteRegEx": "Zbikowski", "year": 2002}], "referenceMentions": [{"referenceID": 11, "context": "The blended transitions are created by combining the features characterising pairs of transitions belonging to two idioms (expressed as sets of potentially learned transitions) according to an amalgam-based algorithm (Confalonieri et al., 2015; Eppe et al., 2015b) that implements Fauconnier and Turner (2002)\u2019s theory of conceptual blending.", "startOffset": 217, "endOffset": 264}, {"referenceID": 15, "context": "The blended transitions are created by combining the features characterising pairs of transitions belonging to two idioms (expressed as sets of potentially learned transitions) according to an amalgam-based algorithm (Confalonieri et al., 2015; Eppe et al., 2015b) that implements Fauconnier and Turner (2002)\u2019s theory of conceptual blending.", "startOffset": 217, "endOffset": 264}, {"referenceID": 23, "context": "Basic measures consider the typicality of a generated artefact within a particular genre, or the quality of the generated work according to the users\u2019 aesthetic judgement (Ritchie, 2007).", "startOffset": 171, "endOffset": 186}, {"referenceID": 11, "context": "The blended transitions are created by combining the features characterising pairs of transitions belonging to two idioms (expressed as sets of potentially learned transitions) according to an amalgam-based algorithm (Confalonieri et al., 2015; Eppe et al., 2015b) that implements Fauconnier and Turner (2002)\u2019s theory of conceptual blending.", "startOffset": 218, "endOffset": 310}, {"referenceID": 13, "context": "In most existing works on argumentation, an argument is either considered as an abstract entity whose origin and structure are not defined (Dung, 1995), or it is a logical proof for a statement where the proof is built from a knowledge base (Amgoud and Prade, 2009).", "startOffset": 139, "endOffset": 151}, {"referenceID": 0, "context": "In most existing works on argumentation, an argument is either considered as an abstract entity whose origin and structure are not defined (Dung, 1995), or it is a logical proof for a statement where the proof is built from a knowledge base (Amgoud and Prade, 2009).", "startOffset": 241, "endOffset": 265}, {"referenceID": 9, "context": "Then, we present a process-based system evaluation that focuses on the creative acts of programmers (Colton et al., 2014).", "startOffset": 100, "endOffset": 121}, {"referenceID": 27, "context": "The cognitive theory of conceptual blending by Fauconnier and Turner (2002) has been extensively used in linguistics, music composition (Zbikowski, 2002), music cognition (Antovic, 2009, 2011) and other domains mainly as an analytical tool, which is useful for explaining the cognitive process that humans undergo when engaged in creative acts.", "startOffset": 136, "endOffset": 153}, {"referenceID": 24, "context": "A computational framework that extends Goguen\u2019s approach has been developed in the context of the COncept INVENtion Theory1 (COINVENT) project (Schorlemmer et al., 2014) based on the notion of amalgams (?).", "startOffset": 143, "endOffset": 169}, {"referenceID": 11, "context": "According to this framework, input spaces are described as sets of features, properties and relations, and an amalgam-based workflow finds the blends (Confalonieri et al., 2015; Eppe et al., 2015b).", "startOffset": 150, "endOffset": 197}, {"referenceID": 15, "context": "According to this framework, input spaces are described as sets of features, properties and relations, and an amalgam-based workflow finds the blends (Confalonieri et al., 2015; Eppe et al., 2015b).", "startOffset": 150, "endOffset": 197}, {"referenceID": 11, "context": "The cognitive theory of conceptual blending by Fauconnier and Turner (2002) has been extensively used in linguistics, music composition (Zbikowski, 2002), music cognition (Antovic, 2009, 2011) and other domains mainly as an analytical tool, which is useful for explaining the cognitive process that humans undergo when engaged in creative acts.", "startOffset": 47, "endOffset": 76}, {"referenceID": 1, "context": "The cognitive theory of conceptual blending by Fauconnier and Turner (2002) has been extensively used in linguistics, music composition (Zbikowski, 2002), music cognition (Antovic, 2009, 2011) and other domains mainly as an analytical tool, which is useful for explaining the cognitive process that humans undergo when engaged in creative acts. According to this theory, human creativity is modeled as a process by which a new concept is constructed by taking the commonalities among two input spaces into account, to form a so-called generic space, and by projecting their non-common structure in a selective way to a novel blended space, called a blend. In computational creativity, conceptual blending has been modeled by Goguen (2006) as a generative mechanism, according to which input spaces are modeled as algebraic specifications and a blend is computed as a categorical colimit.", "startOffset": 172, "endOffset": 739}, {"referenceID": 14, "context": "Amalgam-based conceptual blending has been applied to invent chord cadences (Eppe et al., 2015a; Zacharakis, Kaliakatsos-Papakostas, and Cambouropoulos, 2015).", "startOffset": 76, "endOffset": 158}, {"referenceID": 16, "context": "Blending completion (Fauconnier and Turner, 2002) is a domain-specific process that uses background knowledge to consistently assign specific properties to generalised terms.", "startOffset": 20, "endOffset": 49}, {"referenceID": 16, "context": "Blending completion (Fauconnier and Turner, 2002) is a domain-specific process that uses background knowledge to consistently assign specific properties to generalised terms. In the hitherto discussed example, blend completion is used for completing the A[ note as the chord\u2019s fifth in blending the perfect and Phrygian cadence in order to obtain the tritone substitution cadence (Figure 3). After several blends have been computed, an evaluation process ranks them according to some optimality principles (Fauconnier and Turner, 2002, Chapter 16). These principles are a necessary aspect of conceptual blending since they allow to filter interesting blends from the (potentially too) many possible ones3. A complete description of optimality principles is out of the scope of this paper and the reader is referred to Goguen and Harrell (2010) for applications of such principles in the Alloy algorithm.", "startOffset": 21, "endOffset": 844}, {"referenceID": 8, "context": "Features 8 to 10 indicate changes during the transitions and are based on the Directed Interval Class (DIC) vector (Cambouropoulos, Katsiavalos, and Tsougras, 2013; Cambouropoulos, 2012).", "startOffset": 115, "endOffset": 186}, {"referenceID": 8, "context": "In the literature, an effective and common way to describe chord progressions in a music idiom in a statistical manner is by using Markov models (see Kaliakatsos-Papakostas and Cambouropoulos (2014); Simon, Morris, and Basu (2008), among others).", "startOffset": 177, "endOffset": 199}, {"referenceID": 8, "context": "In the literature, an effective and common way to describe chord progressions in a music idiom in a statistical manner is by using Markov models (see Kaliakatsos-Papakostas and Cambouropoulos (2014); Simon, Morris, and Basu (2008), among others).", "startOffset": 177, "endOffset": 231}, {"referenceID": 8, "context": "In the literature, an effective and common way to describe chord progressions in a music idiom in a statistical manner is by using Markov models (see Kaliakatsos-Papakostas and Cambouropoulos (2014); Simon, Morris, and Basu (2008), among others). Such models reflect the probabilities of each chord following other chords in the idiom, as trained or statistically measured throughout all the pieces in the examined idiom. First-order Markov models, specifically, indicate the probability of transitions from one chord to another, disregarding information about previous chords. Therefore, individual transitions play an important role on indicating particular characteristics of an idiom. A convenient way to represent a first order Markov model is through transition matrices, which include one respective row and column for each chord in the examined idiom. The probability value in the i-th row and the j-th column exhibits the probability of the i-th chord going to the j-th \u2014 the probabilities of each row sum to unit. The utilised chords are actually represented by chord group exemplars, obtained by the method described in Kaliakatsos-Papakostas et al. (2015), while transitions between chords that pertain to the same chord group are disregarded (this neutralises the diagonal).", "startOffset": 177, "endOffset": 1168}, {"referenceID": 0, "context": "This is an important property for blend evaluation and, generally, for approaches to argumentation-based decision making (Amgoud and Prade, 2009; Bonet and Geffner, 1996).", "startOffset": 121, "endOffset": 170}, {"referenceID": 5, "context": "This is an important property for blend evaluation and, generally, for approaches to argumentation-based decision making (Amgoud and Prade, 2009; Bonet and Geffner, 1996).", "startOffset": 121, "endOffset": 170}, {"referenceID": 9, "context": "This is illustrated in Figure 5 in box P1, using the diagrammatic extension to the FACE model by Colton et al. (2014). Here, capital letters F , A, C, or E are creative acts that generate a framing, aesthetic, concept, or example, respectively.", "startOffset": 97, "endOffset": 118}], "year": 2016, "abstractText": "Maximos Kaliakatsos-Papakostas, Roberto Confalonieri, Joseph Corneli, Asterios Zacharakis and Emilios Cambouropoulos Department of Music, Aristotle University of Thessaloniki, Greece Artificial Intelligence Research Institute, IIIA-CSIC, Bellaterra (Barcelona), Spain Department of Computing, Goldsmiths, University of London, UK {max,aszachar,emilios}@mus.auth.gr confalonieri@iiia.csic.es j.corneli@gold.ac.uk Abstract", "creator": "LaTeX with hyperref package"}}}