{"id": "1603.03876", "review": {"conference": "EMNLP", "VERSION": "v1", "DATE_OF_SUBMISSION": "12-Mar-2016", "title": "Variational Neural Discourse Relation Recognizer", "abstract": "implicit discourse processing learning reveals a complementary component for achieving paradigm - dependent information and nature description understanding. previous studies involve weaker models but are built utilizing either brute manual features or sparse discourse functions. in this terminology, instead, philosophers explore generative models versus consider a variational simple graph relation modeled. authors incorporate all this complexity as virile. virile selects a directed probabilistic context alongside a latent continuous variable that generates possibly a distribution and the dictionary between conflicting two arguments of the dictionary. in order to help their inference and learning, algorithms seek a neural group relation model to investigate the posterior approaching the latent variable, and employ positive feedback posterior to optimize a reparameterized variational lower approximation. computation allows where techniques be trained with standard complex integration methods. variations on the sat data set show while virile can achieve consistent results against state - gone - the - art targets.", "histories": [["v1", "Sat, 12 Mar 2016 09:11:30 GMT  (477kb,D)", "http://arxiv.org/abs/1603.03876v1", "7 pages"], ["v2", "Sun, 25 Sep 2016 23:33:44 GMT  (452kb,D)", "http://arxiv.org/abs/1603.03876v2", "10 pages, accepted at emnlp 2016"]], "COMMENTS": "7 pages", "reviews": [], "SUBJECTS": "cs.CL", "authors": ["biao zhang", "deyi xiong", "jinsong su", "qun liu", "rongrong ji", "hong duan", "min zhang"], "accepted": true, "id": "1603.03876"}, "pdf": {"name": "1603.03876.pdf", "metadata": {"source": "CRF", "title": "Variational Neural Discourse Relation Recognizer", "authors": ["Biao Zhang", "Deyi Xiong", "Jinsong Su"], "emails": ["zb@stu.xmu.edu.cn,", "jssu@xmu.edu.cn", "dyxiong@suda.edu.cn"], "sections": [{"heading": "1 Introduction", "text": "Discourse relation characterizes the internal structure and logical relation of a coherent text. Automatically identifying these relations not only plays an important role in discourse comprehension and generation, but also obtains wide applications in many other relevant natural language processing tasks, such as text summarization [Yoshida et al., 2014], conversation [Higashinaka et al., 2014], question answering [Verberne et al., 2007] and information extraction [Cimiano et al., 2005]. Generally, discourse relations can be divided into two categories: explicit and implicit, which can be illustrated in the following example:\nThe company was disappointed by the ruling. (because) The obligation is totally unwarranted.\nWith the discourse connective because, these two sentences display an explicit discourse relation CONTINGENCY which can be inferred easily. Once this discourse connective is removed, however, the discourse relation becomes implicit and\ndifficult to be recognized. This is because almost no surface information in these two sentences can signal this relation. For successful recognition of this relation, in the contrary, we need to understand the deep semantic correlation between disappointed and obligation in the two sentences above. Although explicit discourse relation recognition (DRR) has made great progress [Miltsakaki et al., 2005; Pitler et al., 2008], implicit DRR still remains a serious challenge due to the difficulty in semantic analysis.\nConventional approaches to implicit DRR often treat the relation recognition as a classification problem, where discourse arguments and relations are regarded as the inputs and outputs respectively. Generally, these methods first generate a representation for a discourse, denoted as x1 (e.g., manual features in SVM-based recognition [Pitler et al., 2009; Lin et al., 2009] or sentence embeddings in neural networksbased recognition [Ji and Eisenstein, 2015; Zhang et al., 2015]), and then directly model the conditional probability of the corresponding discourse relation y given x, i.e. p(y|x). In spite of their success, these discriminative approaches rely heavily on the goodness of discourse representation x. Sophisticated and good representations of a discourse, however, may make models suffer from overfitting as we do not have large-scale balanced data.\nInstead, we assume that there is a latent continuous variable z from an underlying semantic space. It is this latent variable that generates both discourse arguments and the corresponding relation, i.e. p(x,y|z). The latent variable enables us to jointly model discourse arguments and their relations, rather than conditionally model y on x. However, the incorporation of the latent variable makes the modeling difficult due to the following three aspects: 1) the posterior distribution of the latent continuous variable is intractable; 2) a relatively simple approximation to the posterior, e.g. the mean-filed approach, may fail in capturing the true posterior of the latent variable; 3) a complicated approximation for the posterior will make the inference and learning inefficient.\nInspired by Kingma and Welling [2014] as well as Rezende et al. [2014] who introduce a variational neural inference model to the intractable posterior via optimizing a reparam-\n1Unless otherwise specified, all the variables in the paper, e.g., x,y, z are multivariate. But for notational convenience, we treat them as univariate variables in most cases. Additionally, we use bold symbols to denote variables, and plain symbols to denote values.\nar X\niv :1\n60 3.\n03 87\n6v 1\n[ cs\n.C L\n] 1\n2 M\nar 2\n01 6\namssymb amsmath\neterized variational lower bound, we propose a VarIational neuRal dIscourse reLation rEcognizer (VIRILE) with a latent continuous variable for implicit DRR in this paper. The key idea behind VIRILE is that although the posterior distribution is intractable, we can approximate it via a deep neural network. Figure 1 illustrates the graph structure of VIRILE. Specifically, there are three essential components:\n\u2022 neural discourse recognizer: Since a discourse x and the corresponding relation y is independent given the latent variable z (as shown by the solid lines), we can formulate the generation of x and y from z in the equation p\u03b8(x,y|z) = p\u03b8(x|z)p\u03b8(y|z). These two conditional probabilities in the right hand side are modeled via deep neural networks in our neural discourse recognizer (see section 4.1).\n\u2022 neural posterior approximator: VIRILE assumes that the latent variable can be inferred from discourse arguments x (as shown by the dash lines). In order to infer the latent variable, we employ a deep neural network to approximate the intractable posterior q\u03c6(z|x) (see section 4.2), which makes the inference procedure efficient.\n\u2022 variational reparameterization: we introduce a reparameterization technique to bridge the gap between the above-mentioned components (see section 4.3). This allows us to naturally use standard stochastic gradient ascent techniques for optimization (see section 4.4).\nThe main contributions of our work lie in the following two aspects. 1) We exploit a generative graphic model for implicit DRR. To the best of our knowledge, this has never been investigated before. 2) We develop a neural recognizer and a neural posterior approximator specifically for implicit DRR, which enables both the recognition and inference to be efficient.\nWe conduct a series of experiments for English implicit DRR on the PDTB-style corpus to evaluate the effectiveness of our proposed VIRILE model. Experiment results show that our variational model achieves competitive results against several strong baselines in term of F1 score. Extensive analysis on the variational lower bound further reveals that our\nmodel can indeed fit the data set with respect to discourse arguments and relations."}, {"heading": "2 Related Work", "text": "There are two lines of research related to our work: implicit discourse relation recognition and variational neural model, which we describe in succession.\nImplicit Discourse Relation Recognition Due to the release of Penn Discourse Treebank [Prasad et al., 2008] corpus, constantly increasing efforts are made for implicit DRR. Upon this corpus, Pilter et al. [2009] exploit several linguistically informed features, such as polarity tags, modality and lexical features. Lin et al. [2009] further incorporate context words, word pairs as well as discourse parse information into their classifier. Following this direction, several more powerful features have been exploited: entities [Louis et al., 2010], word embeddings [Braud and Denis, 2015], Brown cluster pairs and co-reference patterns [Rutherford and Xue, 2014]. With these features, Park and Cardie [2012] perform feature set optimization for better feature combination.\nDifferent from feature engineering, predicting discourse connectives can indirectly help the relation classification [Zhou et al., 2010; Patterson and Kehler, 2013]. In addition, selecting explicit discourse instances that are similar to the implicit ones can enrich the training corpus for implicit DRR and gains improvement [Wang et al., 2012; Lan et al., 2013; Braud and Denis, 2014; Fisher and Simmons, 2015; Rutherford and Xue, 2015]. Very recently, neural network models have been also used for implicit DRR due to its capability for representation learning [Ji and Eisenstein, 2015; Zhang et al., 2015].\nDespite their successes, most of them focus on the discriminative models, leaving the field of generative models for implicit DRR a relatively uninvestigated area.\nVariational Neural Model In the presence of continuous latent variables with intractable posterior distributions, efficient inference and learning in directed probabilistic models is required. Kingma and Welling [2014] as well as Rezende et al. [2014] introduce variational neural networks that employ an approximate inference model for intractable posterior and reparameterized variational lower bound for stochastic gradient optimization. Kingma et al. [2014] revisit the approach to semi-supervised learning with generative models and further develop new models that allow effective generalization from a small labeled dataset to a large unlabeled dataset. Chung et al. [2015] incorporate latent variables into the hidden state of a recurrent neural network, while Gregor et al. [2015] combine a novel spatial attention mechanism that mimics the foveation of human eyes, with a sequential variational autoencoding framework that allows the iterative construction of complex images.\nWe follow the spirit of these variational models, but focus on the adaptation and utilization of them onto implicit DRR, which, to the best of our knowledge, is the first attempt in this respect."}, {"heading": "3 Background: Variational Autoencoder", "text": "In this section, we briefly review the variational autoencoder (VAE) [Kingma and Welling, 2014; Rezende et al., 2014], one of the most classical variational neural models, which forms the basis of our model.\nDifferent from conventional neural autoencoders, VAE is a generative model that can be regarded as a regularized version of the standard autoencoder. The VAE significantly changes the autoencoder architecture by introducing a latent random variable z, designed to capture the variations in the observed variable x. With the incorporation of z, the joint distribution is formulated as follows:\np\u03b8(x, z) = p\u03b8(x|z)p\u03b8(z) (1) where p\u03b8(z) is the prior over the latent variable, which is usually equipped with a simple Gaussian distribution; and p\u03b8(x|z) is the conditional distribution that models the probability of x given the latent variable z. Typically, the VAE parameterizes p\u03b8(x|z) with a highly non-linear but flexible function approximator such as a neural network.\nAlthough introducing a highly non-linear function improves the learning capability of VAE, this makes the inference of the posterior p\u03b8(z|x) intractable. To tackle this problem, the VAE further introduces an approximate posterior q\u03c6(z|x) to enable the following variational lower bound: LV AE(\u03b8, \u03c6;x) = \u2212KL(q\u03c6(z|x)||p\u03b8(z))\n+Eq\u03c6(z|x)[log p\u03b8(x|z)] \u2264 log p\u03b8(x) (2)\nwhere KL(Q||P ) is Kullback-Leibler divergence between two distributions Q and P , and q\u03c6(z|x) is usually a diagonal GaussianN (\u00b5, diag(\u03c32)) whose mean \u00b5 and variance \u03c32 are parameterized by again, neural networks, conditioned on x.\nTo maximize the variational lower bound in Eq. (2) stochastically with respect to both \u03b8 and \u03c6, the VAE introduces a reparameterization trick that parameterizes the latent variable z with the Gaussian parameters \u00b5 and \u03c3 in q\u03c6(z|x):\nz\u0303 = \u00b5+ \u03c3 (3) where is a standard Gaussian variable, and denotes an element-wise product. Intuitively, the VAE learns the representation of the latent variable not as single points, but as soft ellipsoidal regions in latent space, forcing the representation to fill the space rather than memorizing the training data as isolated representations. With this trick, the VAE model can be trained through standard backpropagation technique with stochastic gradient ascent."}, {"heading": "4 The VIRILE Model", "text": "This section introduces our proposed VIRILE model. Formally, in VIRILE, there are two observed variables , x for a discourse and y for the corresponding relation, and one latent variable z. As illustrated in Figure 1, the joint distribution of the three variables is formulated as follows:\np\u03b8(x,y, z) = p\u03b8(x,y|z)p\u03b8(z) (4) We begin with this distribution to elaborate the major components in VIRILE."}, {"heading": "4.1 Neural Discourse Recognizer", "text": "The conditional distribution p(x,y|z) in Eq. (4) shows that both discourse arguments and the corresponding relation are generated from the latent variable. As shown in Figure 1, x is d-separated from y by z. Therefore the discourse x and the corresponding relation y is independent given the latent variable z. The joint probability can be therefore formulated as follows\np\u03b8(x,y, z) = p\u03b8(x|z)p\u03b8(y|z)p\u03b8(z) (5) We adopt the centered isotropic multivariate Gaussian as the prior for the latent variable, p\u03b8(z) = N (z;0, I) following previous work [Kingma and Welling, 2014; Rezende et al., 2014]. With respect to the two conditional distributions, we parameterize them via neural networks as shown in Figure 2.\nBefore we further explain the network structure, it is necessary to briefly introduce how discourse relations are annotated in our training data. The PDTB corpus, our training corpus, annotates implicit discourse relations between two neighboring arguments, namely Arg1 and Arg2. In VIRILE, we represent the two arguments with bag-of-word representations, and denote them as x1 and x2.\nTo model p\u03b8(x|z) (the bottom part in Figure 2), we project the representation of the latent variable z \u2208 Rdz onto a hidden layer:\nh\u20321 = f(Wh\u20321z + bh\u20321) (6) h\u20322 = f(Wh\u20322z + bh\u20321) (7)\nwhere Wh\u20321 \u2208 R dh\u20321 \u00d7dz ,Wh\u20322 \u2208 R dh\u20322 \u00d7dz are the transformation matrices, bh\u20321 \u2208 R dh\u20321 , bh\u20322 \u2208 R\ndh\u20322 are the bias terms, du is the dimensionality of vector representations of u and f(\u00b7) is an element-wise activation function, such as tanh(\u00b7), which is used throughout our model.\nUpon this hidden layer, we further stack a Sigmoid layer to predict the probabilities of corresponding discourse arguments:\nx\u20321 = Sigmoid(Wx\u20321h \u2032 1 + bx\u20321) (8) x\u20322 = Sigmoid(Wx\u20322h \u2032 2 + bx\u20322) (9)\nwhere x\u20321 \u2208 Rdx1 and x\u20322 \u2208 Rdx2 are the real-valued representations of the reconstructed x1 and x2 respectively. Notice\nthat the equality of dx1 = dx2 , dh\u20321 = dh\u20322 is not necessary though we assume so in our experiments. We assume that p\u03b8(x|z) is a multivariate Bernoulli distribution. Therefore the logarithm of p(x|z) is calculated as the sum of probabilities of words in discourse arguments as follows:\nlog p(x|z) = \u2211 i x1,i log x \u2032 1,i + (1\u2212 x1,i) log(1\u2212 x\u20321,i)\n+ \u2211 j x2,j log x \u2032 2,j + (1\u2212 x2,j) log(1\u2212 x\u20322,j)\n(10)\nwhere ui,j is the jth element in ui. In order to estimate p\u03b8(y|z) (the top part in Figure 2), we stack a softmax layer over the representation of the latent variable z:\ny\u2032 = SoftMax(Wy\u2032z + by\u2032) (11)\nwhere Wy\u2032 \u2208 Rdy\u00d7dz , by\u2032 \u2208 Rdy are the weight matrix and bias term. dy denotes the number of discourse relations. Suppose that the true relation is y \u2208 Rdy , the logarithm of p(y|z) can be computed as follows:\nlog p(y|z) = dy\u2211 i=1 yi log y \u2032 i (12)\nIn order to precisely estimate these conditional probabilities, our model will force the representation z of the latent variable to encode semantic information for both the reconstructed discourse x\u2032 (Eq. (10)) and predicted discourse relation y\u2032 (Eq. (12)), which is exactly what we want."}, {"heading": "4.2 Neural Posterior Approximator", "text": "For the joint distribution in Eq. (5), we can define a variational lower bound that is similar to Eq. (2). The difference lies in the approximate posterior, which should be q\u03c6(z|x,y) for VIRILE. However, considering the absence of y during discourse relation recognition, we assume that the latent variable can be inferred from discourse arguments x alone. This allows us to use q\u03c6(z|x) rather than q\u03c6(z|x,y) to approximate the true posterior.\nSimilar to previous work [Kingma and Welling, 2014; Rezende et al., 2014], we let q\u03c6(z|x) be a multivariate Gaussian distribution with a diagonal covariance structure:\nq\u03c6(z|x) = N (z;\u00b5, \u03c32I) (13)\nwhere the mean \u00b5 and s.d. \u03c3 of the approximate posterior are the outputs of the neural network as shown in Figure 3.\nSimilar to the calculation of p\u03b8(x|z), we first transform the input x into a hidden representation:\nh1 = f(Wh1x1 + bh1) (14)\nh2 = f(Wh2x2 + bh2) (15) where Wh1 \u2208 Rdh1\u00d7dx1 ,Wh2 \u2208 Rdh2\u00d7dx2 are weight matrices, and bh1 \u2208 Rdh1 , bh2 \u2208 Rdh2 are the bias terms. Notice that dh1/dh2 are not necessarily equal to dh\u20321/dh\u20322 .\nWe then obtain the Gaussian parameters \u00b5 and log \u03c32\nthrough linear regression:\n\u00b5 =W\u00b51h1 +W\u00b52h2 + b\u00b5 (16)\nlog \u03c32 =W\u03c31h1 +W\u03c32h2 + b\u03c3 (17) where \u00b5, \u03c3 \u2208 Rdz . In this way, this posterior approximator can be efficiently computed."}, {"heading": "4.3 Variational Reparameterization", "text": "We have described how to calculate the likelihood p\u03b8(x,y|z) and the approximate posterior q\u03c6(z|x). In order to optimize our model, we need to further compute an expectation over the approximate posterior, that is Eq\u03c6(z|x)[log p\u03b8(x,y|z)]. Since this expectation is intractable, we employ the Monte Carlo method to estimate it with a reparameterization trick similar to Eq. (3):\nEq\u03c6(z|x)[log p\u03b8(x,y|z)] ' 1\nL L\u2211 l=1 log p\u03b8(x,y|z\u0303(l))\nwhere z\u0303 = \u00b5+ \u03c3 and \u223c N (0, I) (18)\nwhere L is the number of samples. This reparameterization bridges the gap between the likelihood and the posterior, and enables the internal backpropagation in our neural network. When testing new instances using the proposed model, we simply ignore the noise and set z\u0303 = \u00b5 to avoid uncertainty."}, {"heading": "4.4 Parameter Learning", "text": "Given a training instance (x(t), y(t)), the joint training objective is defined as follows:\nL(\u03b8, \u03c6) ' 1 2 dz\u2211 j=1 ( 1 + log ( (\u03c3 (t) j ) 2 ) \u2212 ( \u00b5 (t) j )2 \u2212 ( \u03c3 (t) j )2)\n+ 1\nL L\u2211 l=1 log p\u03b8(x (t), y(t)|z\u0303(t,l))\nwhere z\u0303(t,l) =\u00b5(t) + \u03c3(t) (l) and (l) \u223c N (0, I) (19)\nThe first term is the KL divergence which can be computed and differentiated without estimation (see [Kingma and Welling, 2014] for detail). Intuitively, this is a conventional neural network with a special regularizer. The second term is the approximate expectation shown in Eq. (18), which is also differentiable.\nThere are two different sets of parameters in the proposed model,\nAlgorithm 1 Parameter Learning Algorithm of VIRILE. Inputs: A, the maximum number of iterations;\nM , the number of instances in one batch; L, the number of samples;\n\u03b8, \u03c6\u2190 Initialize parameters repeat D \u2190 getRandomMiniBatch(M) \u2190 getRandomNoiseFromStandardGaussian() g\u2190\u2207\u03b8,\u03c6L(\u03b8, \u03c6;D, ) \u03b8, \u03c6\u2190 parameterUpdater(\u03b8, \u03c6; g) until convergence of parameters (\u03b8, \u03c6) or reach the maximum iteration A\n\u2022 \u03b8: Wh\u20321 ,Wh\u20322 , bh\u20321 , bh\u20322 ,Wx\u20321 ,Wx\u20322 , bx\u20321 , bx\u20322 ,Wy\u2032 and by\u2032 \u2022 \u03c6: Wh1 ,Wh2 , bh1 , bh2 ,W\u00b51 ,W\u00b52 , b\u00b5,W\u03c31 ,W\u03c32 and b\u03c3\nSince the objective function in Eq. (19) is differentiable, we can optimize these parameters jointly using standard gradient ascent techniques. The training procedure for VIRILE is summarized in Algorithm 1."}, {"heading": "5 Experiments", "text": "We conducted a series of experiments on English implicit DRR task to validate the effectiveness of VIRILE. We first briefly review the PDTB dataset that we used to train our model. We then present experiment setup, results and analysis on the variational lower bound in this section."}, {"heading": "5.1 Dataset", "text": "We used the largest hand-annotated discourse corpus PDTB 2.02 [Prasad et al., 2008] (PDTB hereafter). This corpus contains discourse annotations over 2,312 Wall Street Journal articles, and is organized in different sections. Following previous work [Pitler et al., 2009; Zhou et al., 2010; Lan et al., 2013; Zhang et al., 2015], we used sections 2- 20 as our training set, sections 21-22 as the test set. Sections 0-1 were used as the development set for hyperparameter optimization.\nIn PDTB, discourse relations are annotated in a predicateargument view. Each discourse connective is treated as a predicate that takes two text spans as its arguments. The discourse relation tags in PDTB are arranged in a three-level hierarchy, where the top level consists of four major semantic classes: TEMPORAL (TEM), CONTINGENCY (CON), EXPANSION (EXP) and COMPARISON (COM). Because the toplevel relations are general enough to be annotated with a high inter-annotator agreement and are common to most theories of discourse, in our experiments we only use this level of annotations.\nWe formulated the task as four separate one-against-all binary classification problems: each top level class vs. the other three discourse relation classes. We also balanced the training set by resampling training instances in each class until the number of positive and negative instances are equal. In contrast, all instances in the test and development set are kept in nature. The statistics of various data sets is listed in Table 1.\n2http://www.seas.upenn.edu/ pdtb/"}, {"heading": "5.2 Setup", "text": "We tokenized all datasets using Stanford NLP Toolkit3. For optimization, we employed the Adagrad algorithm to update parameters. With respect to the hyperparameters M,L,A and the dimensionality of all vector representations, we set them according to previous work [Kingma and Welling, 2014; Rezende et al., 2014] and preliminary experiments on the development set. Finally, we set M = 100, A = 1000, L = 1, dz = 20, dx1 = dx2 = 10001, dh1 = dh2 = dh\u20321 = dh\u20322 = 400, dy = 2 for all experiments. Notice that there is one dimension in dx1 and dx2 for unknown words.\nWe compared VIRILE against the following two different baseline methods:\n\u2022 SVM: a support vector machine (SVM) classifier trained with several manual features. We used the toolkit SVMlight4 to train the classifier in our experiments.\n\u2022 SCNN: a shallow convolutional neural network proposed by Zhang et al. [2015].\nFeatures used in SVM are taken from the state-of-the-art implicit discourse relation recognition model, including Bag of Words, Cross-Argument Word Pairs, Polarity, First-Last, First3, Production Rules, Dependency Rules and Brown cluster pair [Rutherford and Xue, 2014]. In order to collect bag of words, production rules, dependency rules, and crossargument word pairs, we used a frequency cutoff of 5 to remove rare features, following Lin et al. [2009]."}, {"heading": "5.3 Classification Results", "text": "Because the development and test sets are imbalanced in terms of the ratio of positive and negative instances, we chose F1 score as our major evaluation metric. In addition, we also provided the precision, recall and accuracy metrics for further analysis. Table 2 summarizes the classification results, where the highest F1 score in four tasks are highlighted in bold.\nFrom Table 2, we observe that the proposed VIRILE outperforms SVM on EXP/TEM and SCNN on EXP/COM according to their F1 scores. Although it fails on CON, VIRILE achieves the best result on EXP. Overall, VIRILE is competitive in comparison with the two state-of-the-art baselines.\nSimilar to other generative models, VIRILE obtains relatively low precisions but high recalls in most cases. With respect to the accuracy, our model does not yield substantial improvements over the two baselines except for TEM. This may be because that we used the F1 score rather than the\n3http://nlp.stanford.edu/software/corenlp.shtml 4http://svmlight.joachims.org/\n1 -1241.55 28.55072\n2 -244.73 28.55072\n3 -226.18 28.55072 4 -253.5 28.55072 5 -217.03 28.55072 6 -214.32 28.55072 7 -210.16 28.55072 8 -208.91 28.55072 9 -207.41 28.55072 10 -205.73 28.55072 11 -204.35 28.55072 12 -203.5 28.55072 13 -202.31 28.55072 14 -201.73 28.55072 15 -201.12 28.55072 16 -200.67 28.55072 17 -200.16 28.55072 18 -199.52 28.55072 19 -199.58 28.55072 20 -198.84 28.55072 21 -198.51 28.55072 22 -198 28.55072 23 -197.8 28.55072 24 -197.83 28.55072 25 -197.17 28.55072 26 -196.59 28.55072\n27 -196.5 28.55072\n28 -196.85 28.55072\n29 -196.31 28.55072\n30 -196.04 28.55072\n31 -196.03 28.55072\n32 -195.69 28.55072\n33 -195.6 28.55072 34 -195.32 28.55072 35 -195.52 28.55072 36 -195.04 28.55072 37 -194.73 28.55072 38 -194.97 28.55072 39 -194.44 28.55072 40 -194.73 28.55072 41 -194.44 28.55072 42 -194.23 28.55072 43 -193.95 28.55072 44 -193.59 28.55072 45 -193.74 28.55072 46 -193.56 28.55072 47 -193.48 28.55072 48 -193.04 28.55072 49 -193.33 28.55072 50 -193 28.55072 51 -193 28.55072 52 -192.56 28.55072 53 -192.51 28.55072 54 -192.36 28.55072\n-300\n-280\n-260\n-240\n-220\n-200\n-180\n-160\n-140\n-120\n18\n20\n22\n24\n26\n28\n30\n32\n34\n1 101 201 301 401 501 601 701 801 901\nDev Train\n(a) COM vs Other\n1 -835.86 39.91881\n2 -229.88 39.91881\n3 -212.99 39.91881\n4 -208.35 39.91881\n5 -203.63 39.91881 6 -201.16 39.91881 7 -198.83 39.91881 8 -197.81 39.91881 9 -197.17 39.91881 10 -196.56 39.81043 11 -194.58 39.81043 12 -194.22 39.72881 13 -193.63 39.59044 14 -192.55 39.50276 15 -191.96 40.02829 16 -191.6 40.24298 17 -192.43 40.61489 18 -190.85 40.46553 19 -190.63 39.84298 20 -189.82 39.82869 21 -189.58 39.13538 22 -189.31 38.30303 23 -188.93 37.48327 24 -188.23 36.00563 25 -188.21 35.32934 26 -188.04 35.9584 27 -187.6 34.8228\n28 -187.61 34.52566\n29 -187.58 33.17384\n30 -186.98 34.23138\n31 -186.96 34.28571\n32 -186.49 33.8118\n33 -186.19 34.00936\n34 -185.93 34.02226\n35 -185.81 34.29487 36 -185.61 34.64567 37 -185.39 35.65891 38 -185.21 35.23957 39 -184.96 35.36585 40 -184.86 36.7713 41 -184.54 37.28324 42 -184.4 37.62376 43 -184.58 37.51724 44 -184.1 37.63441 45 -184.03 39.37419 46 -183.85 39.79975 47 -183.83 40.24096 48 -183.6 40.28605 49 -183.37 40.98544 50 -183.29 41.93194 51 -183.08 41.83565 52 -182.77 42.10526 53 -182.62 42.78507 54 -182.67 43.53877\n-300\n-280\n-260\n-240\n-220\n-200\n-180\n-160\n-140\n32\n34\n36\n38\n40\n42\n44\n1 101 201 301 401 501 601 701 801 901\nDev Train\n(b) CON vs Other\n2 -223.37 72.38403\n3 -210.24 72.38403\n4 -202.49 72.38403\n5 -198.18 72.38403\n6 -196.3 72.38403 7 -192.9 72.38403 8 -191.21 72.38403 9 -190 72.38403 10 -188.8 72.38403 11 -187.76 72.38403 12 -187.32 72.38403 13 -186.14 72.38403 14 -185.61 72.38403 15 -184.83 72.38403 16 -184.25 72.38403 17 -183.52 72.38403 18 -183.09 72.38403 19 -182.69 72.38403 20 -182.19 72.38403 21 -181.87 72.38403 22 -181.36 72.38403 23 -180.9 72.38403 24 -180.63 72.38403 25 -180.22 72.38403 26 -179.85 72.38403 27 -179.63 72.38403 28 -179.13 72.38403 29 -178.72 72.38403\n30 -178.65 72.38403\n31 -178.26 72.38403\n32 -177.92 72.38403\n33 -177.63 72.38403\n34 -177.39 72.38403\n35 -177.09 72.38403\n36 -176.85 72.38403 37 -176.67 72.38403 38 -176.44 72.38403 39 -176.13 72.38403 40 -175.81 72.38403 41 -175.58 72.38403 42 -175.28 72.38403 43 -175.14 72.38403 44 -174.87 72.38403 45 -174.64 72.31516 46 -174.43 72.31516 47 -174.18 72.31516 48 -173.92 72.31516 49 -173.79 72.31516 50 -173.64 72.31516 51 -173.32 72.31516 52 -173.28 72.31516 53 -172.96 72.31516 54 -173.9 72.31516\n-300\n-280\n-260\n-240\n-220\n-200\n-180\n-160\n-140\n50\n55\n60\n65\n70\n75\n1 101 201 301 401\nDev Train\n(c) EXP vs Other\n1 -2994.29 10.26464\n2 -268.26 10.28112\n3 -299.07 10.26464\n4 -244.27 10.26464 5 -236.82 10.26464 6 -233.55 10.26464 7 -230.2 10.26464 8 -227.11 10.26464 9 -225.03 10.26464 10 -223.56 10.26464 11 -222.2 10.26464 12 -221.03 10.26464 13 -219.73 10.26464 14 -218.37 10.26464 15 -217.73 10.26464 16 -216.59 10.26464 17 -215.89 10.26464 18 -215.11 10.26464 19 -214.14 10.26464 20 -213.86 10.26464 21 -213.19 10.26464 22 -212.9 10.26464 23 -211.75 10.26464 24 -211.31 10.26464 25 -211.17 10.26464 26 -210.23 10.26464 27 -209.73 10.26464\n28 -209.8 10.26464\n29 -209.49 10.26464\n30 -209.46 10.26464\n31 -208.53 10.26464\n32 -207.92 10.28939\n33 -208.11 10.28939\n34 -207.9 10.30596 35 -207.56 10.32258 36 -207.06 10.36437 37 -206.73 10.41497 38 -206.47 10.46607 39 -206.65 10.37891 40 -205.77 10.48253 41 -206.09 10.48253 42 -205.62 10.36789 43 -205.56 10.36789 44 -205.48 10.49069 45 -205.49 10.44521 46 -205.45 10.54451 47 -204.61 10.58109 48 -204.78 10.72056 49 -204.26 10.76787 50 -204.36 10.76787 51 -203.81 10.72056 52 -203.58 10.70175 53 -204.01 10.64572 54 -203.64 10.56277\n-300\n-280\n-260\n-240\n-220\n-200\n-180\n-160\n0\n2\n4\n6\n8\n10\n12\n14\n1 101 201 301 401 501 601 701 801 901\nDev Train\n(d) TEM vs Other\nFigure 4: Illustration of the variational lower bound (blue color) on the training set and F-score (brown color) on the development set. Horizontal axis: the epoch numbers; Vertical axis: the F1 score for relation classification (left) and the estimated average variational lower bound per datapoint (right).\naccuracy, as our selection criterion on the development set. Nevertheless, more analysis should be done to understand the deep reason.\nBesides, we find that the performance of our model is proportional to the number of training instances. This suggests that collecting more training instances (in spite of the noises) may be beneficial to our model."}, {"heading": "5.4 Variational Lower Bound Analysis", "text": "In addition to the classification performance, the efficiency in learning and inference is another concern for variational methods. Figure 4 shows the training procedure for four tasks in terms of the variational lower bound on the training set. We also provide F1 scores on the development set to investigate the relations between the variational lower bound and recognition performance.\nWe find that our model converges toward the variational lower bound considerably fast in all experiments (within 100 epochs), which resonates with the previous findings [Kingma and Welling, 2014; Rezende et al., 2014]. However, the change trend of the F1 score does not follow that of the lower bound. Particularly to the four discourse relations, we further observe that the change paths of the F1 score are completely different. This may suggest that the four discourse relations have different properties and distributions.\nSpecifically, the number of epochs when the best F1 score reaches is also different for the four discourse relations. This indicates that dividing the implicit DRR into four different tasks according to the type of discourse relations is reasonable\nand better than performing DRR on the mixtures of the four relations."}, {"heading": "6 Conclusion and Future Work", "text": "In this paper, we have presented a variational neural discourse relation recognizer for implicit DRR. Different from conventional discriminative models that directly calculate the conditional probability of the relation y given discourse arguments x, our model assumes that it is a latent variable from an underlying semantic space that generates both x and y. In order to make the inference and learning efficient, we introduce a neural discourse recognizer and a neural posterior approximator as our generative and inference model respectively. Using the reparameterization technique, we are able to optimize the whole model via standard stochastic gradient ascent algorithm. Experiment results in terms of classification and variational lower bound verify the effectiveness of our model.\nIn the future, we would like to exploit the utilization of discourse instances with explicit relations for implicit DRR. For this we can start from two directions: 1) converting explicit instances into pseudo implicit instances and retrain our model; 2) developing a semi-supervised model to leverage semantic information inside discourse arguments. Furthermore, we are also interested in adapting our model to other similar tasks, such as nature language inference."}], "references": [], "referenceMentions": [], "year": 2017, "abstractText": "Implicit discourse relation recognition is a crucial component for automatic discourse-level analysis and nature language understanding. Previous studies exploit discriminative models that are built on either powerful manual features or deep discourse representations. In this paper, instead, we explore generative models and propose a variational neural discourse relation recognizer. We refer to this model as VIRILE. VIRILE establishes a directed probabilistic model with a latent continuous variable that generates both a discourse and the relation between the two arguments of the discourse. In order to perform efficient inference and learning, we introduce a neural discourse relation model to approximate the posterior of the latent variable, and employ this approximated posterior to optimize a reparameterized variational lower bound. This allows VIRILE to be trained with standard stochastic gradient methods. Experiments on the benchmark data set show that VIRILE can achieve competitive results against state-of-the-art baselines.", "creator": "LaTeX with hyperref package"}}}