{"id": "1603.05570", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "17-Mar-2016", "title": "Predicate Gradual Logic and Linguistics", "abstract": "there are generally major proposals tentatively treating donkey anaphora such consist verbal coding algorithms using the likes, or e - type theories and the likes. if all of them works well among a categories of specific animals carriage companies use to demonstrate implications of their approaches. first i show elephant cab literature, however, they are quite wholly serious and don't pass for actually evaluating various neurological symptoms they remedy when hackney smells like subsequent examples. i am mule logical approach. i develoop some that extends a metaphor, propositional fuzzy logic, and show that it solely treat donkey anaphora generally. i also cite and address a limitation around the modern convention entitled existential conditioning. furthermore, i proposed bodily episodes'of syllogisms and conversion are realisable following this logic.", "histories": [["v1", "Thu, 17 Mar 2016 16:43:37 GMT  (114kb,D)", "http://arxiv.org/abs/1603.05570v1", null]], "reviews": [], "SUBJECTS": "cs.CL", "authors": ["ryuta arisaka"], "accepted": false, "id": "1603.05570"}, "pdf": {"name": "1603.05570.pdf", "metadata": {"source": "CRF", "title": "Predicate Gradual Logic and Linguistics", "authors": ["Ryuta Arisaka"], "emails": ["ryutaarisaka@gmail.com"], "sections": [{"heading": null, "text": "1 Introduction\n(1) Every farmer who owns a donkey beats it.\nThe donkey sentence by Geach [7] depicts how Fregean predicate logic fails to naturally encode anaphoric expressions.\n( 2) There is a farmer who owns a donkey. It runs. \u2203x\u2203y.farmer(x) \u2227 donkey(y) \u2227 own(x, y) \u2227 run(y)\n( 3) Every farmer owns a donkey. It runs. \u2200x.(farmer(x) \u2283 \u2203y.donkey(y) \u2227 own(x, y) \u2227 run(y))\nBefore going further, I state my assumption that \u00ac binds the strongest, \u2227 and \u2228 bind the second strongest, \u2200 and \u2203 the third strongest, and \u2283 the weakest. The expressions (2) and (3) and the orthodox first-order encoding shown below them suggest that the indefinite noun a donkey, in the presence of the pronoun it anaphoric to it, should be understood to be possessing existential force. However, the heuristics does not appear to be extendible to (1), for, suppose it were applicable, we would be getting the following first-order encoding which is not a sentence.\n\u2200x.(farmer(x) \u2227 (\u2203y.donkey(y) \u2227 own(x, y)) \u2283 beat(x, y)).\nWe also cannot just bring the existential quantifier out of the inner scope.\n\u2200x\u2203y.(farmer(x) \u2227 donkey(y) \u2227 own(x, y) \u2283 beat(x, y)).\nIn this attempted encoding, assume for now that each entity d1, d2, . . . in a given domain of discourse is denoted by a constant a1, a2, . . . in a one-to-one manner, then \u2203y binds farmer(a) \u2227 donkey(y) \u2227 own(a, y) \u2283 beat(a, y) for each such a. Hence we only need find some individual denoted by some constant a2 for every such a to replace y with in the expression such to make farmer(a)\u2227donkey(a2)\u2227own(a, a2) \u2283 beat(a, a2) true. Suppose we have a domain of discourse having three entities: a farmer, a donkey and a pebble denoted by a1, by a2 and respectively by a3 such that the farmer owns the donkey which he/she does not beat. If x is replaced by a2 or a3, the\nlicensed under Creative Commons License CC-BY Leibniz International Proceedings in Informatics Schloss Dagstuhl \u2013 Leibniz-Zentrum f\u00fcr Informatik, Dagstuhl Publishing, Germany\nar X\niv :1\n60 3.\n05 57\n0v 1\n[ cs\n.C L\n] 1\n7 M\nar 2\n01 6\nantecedent of the material implication is false, and the sentence is vacuously true, and if x is replaced by a1, then substitution of a3 into y makes it true. So the first-order sentence, quite out of keeping with the semantics of (1), is true in the given domain of discourse.\nThese taken into account, formal semanticists who accept the view that the Geach\u2019 sentence is first-order formalisable in a standard way are forced to choose the following alternative for the representation of (1).\n(i) \u2200x\u2200y.(farmer(x) \u2227 donkey(y) \u2227 own(x, y) \u2283 beat(x, y)).\nNow, if it were the adequate encoding, a pair of an indefinite noun and a pronoun anaphoric to it would be sometimes understood existentially, sometimes understood universally, the quantificational force irregularly varying depending on the context in which it is found. That would be certainly a hindrance to automating formalisation of anaphoric expressions.\nA quick search on the Web has taken the author to the Wikipedia, the Stanford Encyclopedia of Philosophy, and a few forum threads on the donkey anaphora. Except for the Wikipedia entry where multiple viewpoints are blended in, all the others seem to assert that it is not the case that the donkey sentence cannot be encoded as a first-order expression in a standard way; it is just that the encoding of the donkey sentence in that manner is inconsistent with the encoding of other anaphoric expressions, which can be taken to be a consensus among - at the very least - the users of formal logic.\nHowever, regardless of the trend, I cannot help wondering how (i) came to be considered the adequate encoding of (1), i.e. since when it is the case that (1) means (4).\n(4) Every farmer who owns a donkey beats every one of the donkeys he/she owns.\nSuppose a domain of discourse in which there are two farmers. One of them owns a couple of donkeys which he/she beats equally. The other owns two donkeys and beats one of them but not the other. While there is hardly any doubt that (4) is false in this domain of discourse, the judgement that (1) must be false in the same domain of discourse sounds a little too audacious. When we utter (1) correct to its usage, we surely cannot mean so much more off the mark as (4) than the following:\n(5) Every farmer who owns a donkey beats a donkey he owns.\nwhich, as I will argue like a linguist in cognitive tradition may do, already carries imprecision, but which may be still acceptable by force of common sense prevailing over this particular donkey sentence. In any case, logic should capture general principles rather than specific appearance of them."}, {"heading": "1.1 Previous Approaches", "text": "There are several proposals for formally treating the donkey anaphora such as discourse representation theory and the likes [10, 12, 11, 8, 19], or E-Type theory and the likes [23, 20, 4, 5]. Still, it does not appear as if any of them had extricated the linguistic problems that the donkey anaphora presents. There is a defeating counter-example to all of them.\n( 6) Every school which employs a handsome PC instructor who teaches every female learner using a Mac machine buys it for him.\nIt is just another donkey sentence having the same linguistic characteristic as the Geach\u2019 sentence. If it were the case that they had indeed solved the donkey anaphora, then the same formal techniques could adequately encode (6) just as they could (1). But none of them can formalise (6)."}, {"heading": "1.1.1 Dynamic Theories", "text": "Appeared earliest - or at least published earliest - in this movement is discourse representation theory (DRT). Unlike more traditional formal linguistics formed around the Russelian interpretation, DRT treats quantifying force of a noun phrase context-dependently. In classic DRT, it is possible to derive (i) from (1) in a manner consistent to \u2018more normal\u2019 anaphora. In the more recent DRT, it is possible to interpret (1) as (ii).\n(ii) For every farmer X who owns a donkey Y , it holds true that X beats Y .\nIf one accepts the commonly approved view [13] that (1) has both the so-called weak reading: (5), and the so-called strong reading: (4), then the modern DRT somewhat offers an interim solution in that its user, according to his/her preference, could choose either (4), or (ii) - which is not quite (5) but still closer to it than (4) is. Even then, the revamped DRT does not voluntarily facilitate two different formal semantics corresponding to them, one for each: suppose that somebody has encoded (4) using the modern DRT; suppose that we pass the formal expression to Mr X, but not the fact that it is meant to be formalisation of (4); suppose that Mr X wants to find a natural expression corresponding to the formal expression; then he may be inclined to say that (4) corresponds to it, that (ii) corresponds to it, or, if he is cautious, that it could be (4) or (ii); but Mr X cannot obtain that it must be (4). That is, DRT formalisation of a donkey sentence is not lossless, multiple donkey sentences in natural language mapping to a DRT expression in general. Besides, neither the classic nor the modern DRT can encode (6). If we apply the more recent DRT to (6), what we eventually get is the following expression:1\n[0[1x, y : school(x), handsome(y), pcinstructor(y), employ(x, y), [2z, w : female(z), learner(z),Mac(w), use(z, w)]\u2200z[3teach(x, z)]]\u2200x[4u : buy(u, x)]].\nIn this DRT representation u cannot be resolved to be w as DRS 2 that contains the variable z is not accessible from DRS 4 that needs it.\nNeither can FCS which is another quantifier-free theory which puts an extra focus on discourse referents and the relations to hold between them, nor DPL, a formal variant of DRT and FCS, encode (6). First of all, the principle of FCS, simply for the fact that it encodes (1) into (i), is controversial. DPL can translate (1) into (ii), on the other hand. However, DPL, and also FCS, suffer from the same scoping issue as DRT does."}, {"heading": "1.1.2 Substitution theories", "text": "There are other approaches based on E-Type Theory by Evans [5].\n( 7) If Thomas1 owns a donkey2, he1 beats it2. ( 8) If Thomas owns a donkey, (the) Thomas beats the donkey.\nEvans argues that, if for instance we have (7), it should be paraphrasable to (8) where the he anaphoric to Thomas is replaced by that particular Thomas who owns the donkey, and similarly for the it. By applying this principle to (1), we obtain (9).\n(9) Every farmer who owns a donkey beats the donkey.\n1 Readers are referred to the cited references for the syntax.\nThe uniqueness presupposition justifies the use of the definite noun phrase the donkey in (9). Despite the E-Type theory having appeal to intuition, this approach has not found many proponents. There is firstly an obvious doubt over the uniqueness condition. There is, however, more serious a problem: it requires the substituting entity to carry the context in which a donkey was used. This cannot be the case in general, as I will discuss shortly.\nThe so-called numberless theories [4, 20] derive from the E-Type Theory. For the perceivable inconvenience in the uniqueness presupposition, those theories interpret (1) as follows.\n(10) Every farmer who owns a donkey beats the donkey or the donkeys he/she owns.\nThese theories, as derivatives of the E-Type theory, inherit the serious problem from it. Kanazawa argues against the semantic plurality these theories assume [14]."}, {"heading": "1.1.3 Anaphora is not bound by the context that binds its antecedent", "text": "There is a problem common to all that have been mentioned above. Consider (6), the Mac sentence, again. In the sentence, while the pronoun it is anaphoric to the Mac machine, it is by no means the case that the Mac sentence intends to mean that School X which satisfies the stated condition buys the Mac machine(s) owned by the female learner(s) for the handsome PC instructor. Most naturally, it is some brand new Mac machine the school buys for him. In another word, while the it is indeed some Mac machine, the Mac machine cannot be further made specific by the specific context in which it appears in the Mac sentence.\nHence the Mac sentence is a testimony also to the fact that neither the strong reading of (1), which is (4), nor the weak reading of it, which is (5), as categorized in [13] is general enough for a general donkey sentence. See [6] for effectively the same outlook as the author\u2019s."}, {"heading": "1.2 A new approach with Gradual Logic", "text": "I have shown that, if the effect of the donkey anaphora has been somehow addressed for specific donkey sentences by the above-mentioned formal approaches, the cause of it has still not been. In this work I will identify a fundamental cause of the gap between natural and formal languages, and, by resolving it, solve the donkey anaphora within formal logic as a consequence.\nTo address its cause, it is necessary that we contemplate over the following point.\nThere are no smallest concepts referring to objects in natural languages, so long just as we acknowledge infinitely extending notions such as space, time, size, colour, etc, in short any reasonable quality into which an object is subjected [2]. But formal/symbolic logic has always assumed the entities that cannot be further divisible.\nHence inspecting the logical atomicism and developing an alternative foundation for formal/symbolic logic should be the key to closing the gap. I presented a class of propositional logics that do not assume smallest entities [1, 2]. I will derive a solution to the donkey anaphora by extending, with quantifiers, one formulation of propositional gradual logic.\nAt least something should be said of gradual logic, however. Propositional gradual logic bears a deceptively simple appearance. Apart from the usual logical connectives available to propositional logic, there is only one additional logical connective m. From specific examples used in [1, 2], I recall Hat m Green for instance. Given, as so supposed in [1, 2], that Hat and Green both convey existence of some entities, it means that Hat is, and Green as an attribute of Hat is. It moreover means that Hat m Green itself indicates existence of a concept: Green Hat, if it is indeed the case that the concept Hat has the attribute of being Green. The usual nullary logical connectives of propositional logic > and \u22a5 signify the presence and the absence respectively. A postulate in [2] dictates that for\nany concept X it always holds that X = (X m>), i.e. a concept is if and only if it is such that it has some attribute, which implies that there cannot be an atomic entity in Gradual Logic.\nTo speak more of specific details about what the attribution relation means here semantically, we need to keep in mind that Gradual Logic assumes multiple domains of discourse. Let us say that any concept that appears at the leftmost position in some m chain; e.g. Hat in Hat m (Green m Lamination), a 0-th degree concept. Any 0-th degree concept is a constituent of some domain of discourse. The Green in Hat m (Green m Lamination) is in another domain of discourse, whose existence is dependent on the existence of Hat in the 0-th degree domain of discourse. In the like manner, Lamination in Hat m (Green m Lamination) is in another domain of discourse which depends on the existence of Green in the domain of discourse which in turn depends on the existence of Hat in the 0-th degree domain of discourse.\nAlthough propositional gradual logic does not handle quantified expressions generally, there is a sketch towards Gradual Predicate Logic in the last section of [2]. The key idea mentioned is to consider a propositional gradual logic expression as a term; e.g. instead of using a variable x to say there is a green hat: \u2203x.Green(x) \u2227 Hat(x), we let a predicate range over a propositional gradual logic expression: is(GreenmHat). However, given that there is virtually no predicate-term distinction in propositional gradual logic, it should be also possible to use a gradual logic expression as a predicate. I will show that such idea can be indeed formalised, which I may call Predicate Gradual Logic for some distinction from the idea of gradual predicate logic in the mentioned reference. There is obviously no difficulty involved in augmenting propositional gradual logic with quantifiers for the concepts in the 0-th degree domain of discourse. They appear basically the same as the standard first-order expressions.\nThere is some hat. (iii) \u2203x.Hat(x).\nEvery man walks. (iv) \u2200x.Man(x) \u2283 walk(x).\nUnrestricted predication over a general gradual logic expression appears, by contrast, a lot more involved. Nonetheless, recall that Hat = (Hat m>), which means that (iii) is the same as \u2203x.(Hat m>)(x), while (iv) is the same as \u2200x.(Man m>)(x) \u2283 (walk m>)(x). Hence, at least in a certain way, (iii) and (iv) already illuminate a solution to the difficult cases. In case we have an expression There is a hat which is green., the corresponding predicate gradual logic encoding should be something to do with replacing > in (iii) with an expression that involves Green. I develop formal semantics of Predicate Gradual Logic based on this insight."}, {"heading": "1.3 Predicate Gradual Logic encoding of donkey sentences", "text": "I believe, however, that it is probably more helpful if I begin by presenting examples of predicate gradual logic expressions than by spelling out rigorous formal definitions outright. Semantics will not be developed until Section 3, and the formal expressions themselves may not be fully comprehended except by some. But it is more important to understand explanations of features of logic given after the examples at this point than the examples themselves. Now, although I am presenting materials in this order for the best, any reader who wishes to see examples only after the semantics of logic has been given should immediately go to Section 3, and should come back to this part and Section 2 later.\nMinimal reading aid: x, y l x, and u l x and so on are variables. l is left-associative. m binds stronger than \u2200 and \u2203 but weaker than \u2227 and \u2228. ' is a binary operator.\n(5) Every farmer who owns a donkey beats a donkey he/she owns. ( ?5) \u2200x\u2203ylx\u2203ulx.([farmermdonkey(y)\u2227own(\u25e6x, y)](x) \u2283 y l x ' ul x\u2227beat(x, ul x)).\n( 4) Every farmer who owns a donkey beats every one of the donkeys he/she owns. ( ?4) \u2200x\u2200y l x.([farmer m (donkey(y) \u2283 own(\u25e6x, y))](x) \u2283 beat(x, y l x)).\n( 1) Every farmer who owns a donkey beats it. ( ?1) \u2200x\u2203y l x \u2203u.([farmer m donkey(y) \u2227 own(\u25e6x, y)](x) \u2283 y ' u \u2227 beat(x, u)).\n( 6) Every school who employs a handsome PC instructor who teaches every female student using a Mac machine buys it for him. ( ?6) \u2200x \u2203y l x \u2200z l y l x \u2203w l z l y l x \u2203u.([school m ([pcinstructor m handsome(\u25e6y) \u2227 ([learner m female(\u25e6z) \u2227 (Mac(w) \u2227 use(\u25e6z, w))](z) \u2283 teach(\u25e6y, z))](y) \u2227 employ(\u25e6x, y))](x) \u2283 w ' u \u2227 buy(x, u)).\n( 11) Every school who employs a handsome PC instructor who teaches every female student who likes a Mac allows her to order it through him. ( ?11) \u2200x \u2203y l x \u2200z l y l x \u2203w l z l y l x \u2203u.([school m ([pcinstructor m handsome(\u25e6y) \u2227 ([learner m female(\u25e6z) \u2227 (Mac(w) \u2227 like(\u25e6z, w))](z) \u2283 teach(\u25e6y, z))](y) \u2227 employ(\u25e6x, y))](x) \u2283 w ' u \u2227 allowOrderThrough(x, z, u, y))."}, {"heading": "1.3.1 Scopes of quantifiers", "text": "In first-order logic, supposing that x is some variable, we have \u2200x for universal quantification, and \u2203x for existential quantification. In either of the cases, x does not occur free in the expression in the scope of it. That is no different in predicate gradual logic."}, {"heading": "1.3.2 Attributed objects", "text": "But a variable in predicate gradual logic is not assumed to be indivisible. In all the five formal expressions above there is some variable of the sort of y l x. It means y as an attribute of x.\nSignificance of ' is best explained with the recognition cut-off principle [2, 15]: even if two things are distinguishable, they are not so distinguished in a domain in which the distinction cannot be perceived. v1 ' v2 says that v1 may not be the same as v2 but that they are indistinguishable as far as the most salient parts of v1 and v2, like foreground is to backgrounds in Langacker\u2019s cognitive grammar [17, 18], are concerned. Such surficial indistinguishability is amply expected from the fact that there are many domains of discourse in gradual logic. For instance when we have y l x and u l x, the entity referred to by y and the entity referred to by u are being \u2018looked in\u2019 by l as an attribute of the entity referred to by x, which are then the most salient parts of y l x and of u l x respectively. The expression y l x ' u l x signifies that the entity for y is indistinguishable from the entity for u within the particular domain of discourse in which the two are discussed. See (?5), and take a contrast with (?4).\nIn this work, I consider attribute normal interpretation for attribution. Under the interpretation, that the entity in a domain of discourse Y is an attribute of the entity in a domain of discourse X means that X contains the latter as well as the former entities. Hence \u2203xl a1.something(xl a1) for instance requires that some entity referred to by x be found in at least two domains of discourse: in the domain of discourse as an attribute domain of the entity referred to by a1; and in the domain of discourse in which the entity is found. See y ' u in (?1), to the right of \u2283 which is bound indirectly by \u2203y l x in this manner. The formal expression does not limit the donkey to be beaten to be some\ndonkey owned by a farmer, although that too is a possibility. The portion: y ' u\u2227beat(x, u) merely ensures that the donkey be a donkey."}, {"heading": "1.3.3 Existential import", "text": "Under Fregean interpretation, a universal expression does not assume existential import, while an existential expression does. An expression of the sort of (1), under the interpretation, does not presuppose existence of a farmer who owns a donkey. That is, it can be a phantom term. I will reason in Section 2 that this convention does not assign a truth value clearly to natural expressions, e.g. the Mac sentence. For now I note that there should not be any such phantom terms if the truth/falsehood of the sentence that contains them is judgeable at all. Consequently, for any predicate available to any domain of discourse, there must be at least one entity in the domain of discourse to be predicated by it."}, {"heading": "1.3.4 Attributed predicates", "text": "Not only objects, but also predicates can have attributes in predicate gradual logic. For (?4), farmerm X is a predicate: is-farmer-with-the-attribute-X. If X is >, (farmer m X) = (farmer m >) = farmer according to the principle of Gradual Logic, and the predicate is is-farmer-with-some-attribute, or is more simply is-farmer. This means that farmer m \u2203y.donkey(y) is a predicate is-farmer which takes \u2203y.donkey(y) as its attribute. Given, however, that there should be many specific attribution relations, we may explicitly state the own-owned relation in (?4) on m: farmermown \u2203y.donkey(y). Nonetheless, instead of diversifying m, deriving a multi-m gradual logic that way, we may agree on a convention that, by [farmer m \u2203y.own(\u25e6a, y) \u2227 donkey(y)](a), the \u25e6a in own(\u25e6a, y) refers to the entity to which own(\u25e6a, y) is an attribute, farmer in this case. Then the expression is a paraphrase of [farmer mown \u2203y.donkey(y)](a) but with actually a greater mathematical and philosophical flexibilities. Now, although is-farmer-who-owns-a-donkey is more descriptive than is-farmer, it is no less a predicate than is-farmer is, the former (should be) requiring the same number of arguments as the latter. Provided that the entity denoted by a is in the given domain of discourse, [farmerm\u2203y.donkey(y)\u2227own(\u25e6a, y)](a) denotes the assertion that what a denotes is a farmer who owns a donkey. By \u2200x.([farmerm \u2203y.donkey(y)\u2227 own(\u25e6x, y)](x) \u2283 X), we express the following assertion: for every farmer who owns a donkey, it is the case that X, or, if the scope of y must extend to X as well, then \u2200x\u2203ylx.([farmermdonkey(y)\u2227own(\u25e6x, y)](x) \u2283 X), which provides a generic solution to (1), (4) and (5), as (?1), (?4) and (?5).\nNow, at this point careful readers may fret that, if we adopt this kind of predication, an entity to take place of y as an attribute to an entity to take place of x must be discussed before the latter can be ever determined. To assure readers, I mention that that is just an ostensible paradox that does not need to be worried about. I will provide details in Section 2."}, {"heading": "1.3.5 Let us check the given examples", "text": "That (1) is different from (4) is formally expressed. Further, it does not matter how deep in a noun phrase a noun phrase to be referred back by a pronoun occurs for the predicate gradual logic encoding to work.2 Take (1), it says that, for any farmer who owns a donkey, it is the case that he/she beats a donkey; Cf. the last section of 1.1. But this is precisely what (?1) is expressing. It almost makes\n2 This is not to say that this first-order predicate gradual logic could encode all the donkey sentences.\nno difference if we instead like to express (4), to which predicate gradual logic provides (?4). In a like manner, yet another distinct expression is obtained for the natural expression below that perhaps was the true intention of Evans\u2019 in tackling the Geach\u2019 sentence.\n( 12) Every farmer who owns a donkey beats the donkey he/she owns. ( ?12) \u2200x\u2203y l x.([farmer m donkey(y) \u2227 own(\u25e6x, y)](x) \u2283 beat(x, y l x)).\nThe innovation of predicate gradual logic in view of natural expression encoding is that it can express those different expressions distinctly, allowing loss-lesser translation of anaphora than is possible in currently predominant formal approaches.\nThe predicate gradual logic encoding of (6) appears a little daunting. However, at every attributive domain of discourse we recognise self-similarity. Technically, therefore, (?6) is only a longer version of (?1) and (?4) - except that we cannot neglect the matter of existential import of a universally quantified expression. This, as I mentioned, is to be discussed in Section 2.\nThe predicate gradual logic encoding of (11) appears even more frightening. Not only existentially quantified entities but also a universally quantified entity are referred to in allows her to order it through him. Actually handling this kind of sentence is beyond the scope of this work. Just like Evans\u2019 counter-example to Geach thesis on anaphora:\n(13) Harry brought some sheep and John vaccinated them.\nwhich says (most likely) that John vaccinates all the sheep brought by Harry, there are donkey sentences of this kind in which all that satisfy a condition (e.g. all the female students who like a Mac machine in (11)) need to be treated as though they are a single entity. So I am only listing it to demonstrate that first-order predicate gradual logic can deal with this kind of an involved natural expression in some cases. In (?11) it is the case that possibly many entities that match the formal description [learnermfemale(\u25e6z)\u2227\u2203w.(Mac(w)\u2227like(\u25e6z, w))](z) should be most naturally treated if they were talked about collectively. At the same time, however, it is certainly possible to think of the elements in the collection one by one, and the method works for (11).\n2 On certain philosophical matters\nPredicate gradual logic does not share the same philosophical foundation with Fregean logic. I will discuss on two points."}, {"heading": "2.1 Existential import", "text": "2.1.1 Being\n1) Man walks. 2) Tom walks.\nMany perhaps agree that Man in 1) is a man in general, or idealisation of what a man is, talked as though a single unique entity, if, as Aristotle considers, an expression that is of universal character but that is not expressed universally should be distinguished from a universal expression of universal character. I reckon, however, that they do not produce much difference in the modern logical context where one has freedom in defining a domain of discourse at will: one, if he/she likes, could just choose such a domain of discourse in which Man is a single entity. By contrast, a good number of formal logicians who have familiarised themselves with Fregean logic would disagree with the statement that Tom in 1) is Tom in general. Consider, however, a domain of discourse where every being is Tom. Then if 2) was uttered without anything consigned to the realm of presupposition, it\nmust be understood to be meaning that just any being in the domain of discourse walks, and there Tom is synonymous to Man. While I do not intend to anonymise Tom, there is a point that I wish to draw from this: that no noun phrases, or in fact no natural expressions, definitely identify unique and indivisible entities; Cf. [1, 2]. DRT supposes that proper nouns are predicates, some dynamic predicate logic such as [19] consider them to be constants. I do not agree with the latter."}, {"heading": "2.1.2 There should be no phantom terms without existential import", "text": "3) Socrates is ill in the given domain of discourse. 4) Socrates is ill in reality. 5) A ball is in Room 201 on the second floor of the Tower Hotel. Room 201 is not connected to\nRoom 1202 which is on the 12th floor of the Tower Hotel. The ball physically hits a guest in Room 1202.\n3) is true if he is ill in the given domain of discourse; otherwise, it is false. For 4), we know that the Socrates, the great Greek philosopher who is said to have lived in the past, is not existing any more in reality. Suppose Socrates in the given domain of discourse is denoted by a. Now, the statement is such that a in reality is ill. But the problem is that a does not exist in reality. What is the truth value of 4)? This is analogous to the last sentence of 5). Let us assume that any of the three observations the three sentences impart to us were done at almost the same moment, so that the observation by the last sentence cannot be considered to be occurring at a time as late with respect to the moment the observation of the first sentence was done as would allow transfer of the ball into Room 1202. Then the third sentence says that the ball in Room 201 hits a guest in Room 1202, which is impossible. What would be the truth value of the last sentence of 5)? Is it false because the ball in Room 201 did not hit the guest in Room 1202? Or is it true because the ball could not possibly hit the guest in a disjoint room, i.e. true by the situation being absolutely impossible to occur? I, as many would agree, judge that it should be false because it did not hit the guest. For exactly the same reason 4) should be then false. However, it basically means (Cf. Being above) that any that is Socrates in the given domain of discourse is ill in reality. And it is this that I just stated is false. But because it is false, it must be the case that a universal expression carries existential import. For a proof, suppose - by means of showing contradiction - that Socrates in 4) did not denote anything, then 4) which is understood to be \u2200x.(Socrates(x) \u2283 illReal(x)) is vacuously true. But this is contradictory because it is false.\nIn fact, if we should adopt the modern account of existential import, there are certain things that simply go unexplained. Let us consider (4) (the so-known strong reading of the Geach donkey sentence) again, which was:\n(4) Every farmer who owns a donkey beats every one of the donkeys he/she owns.\nAnd the first-order encoding was:\n(i) \u2200x\u2200y.(farmer(x) \u2227 donkey(y) \u2227 own(x, y) \u2283 beat(x, y)).\nIn case there is no farmer, there is no donkey, or there is no own-owned relation to hold between a farmer and a donkey, it holds that the expression is vacuously true. However, suppose a domain of discourse that contains just two elements denoted by a1 and a2 such that farmer(a1)\u2227donkey(a2)\u2227 own(a1, a2) is true, while farmer(a2) or donkey(a1) is false. Then (i) is: (A) true iff beat(a1, a2) holds true; (B) false iff beat(a1, a2) is false. Now, consider that the action to \u2018beat\u2019 does not denote anything. Then (i) evaluates to false according to (B). But should it not be the case that (i) is vacuously true in that case, too? However, suppose that we also guard against the absence of \u2018beat\u2019. Then we gain the following expression.\n(ii) \u2200x\u2200y.(farmer(x) \u2227 donkey(y) \u2227 own(x, y) \u2227 beat(x, y) \u2283 >)\nwhich is: (A) vacuously true in case there is no farmer, there is no donkey, or there is a farmer denoted by a1 and a donkey denoted by a2 but there is no own-a1-a2 or no beat-a1-a2, and (B) true for a farmer denoted by a1 and a donkey denoted by a2 for which own-a1-a2 and beat-a1a2 both hold. But whichever may hold to be the case, the expression is always true. I take this example, despite its simplicity, as a strong counter-argument against the modern existential import convention. Further, lack of existential import in universal expressions makes little sense in (6) (the Mac sentence). There are scenarios relevant to truth judgement of the sentence.\nThere is no school in a given domain of discourse. In this case, (6) is vacuously true, as its subject phrase does not refer anything. There is a school in a given domain of discourse, and every school in the domain of discourse does not employ a handsome PC instructor. In this case, too, (6) is vacuously true.\nThese two are legible. However, what if we apply the same principle to the inner universal expression for female students? Suppose there is at least one school in the given domain of discourse. If every school employs a handsome PC instructor but there is no Mac machine in the same domain of discourse, it is presumably the case that the modern existential import convention judges that there is/are a school/schools which employs/employ a handsome PC instructor who teaches every female student who uses a Mac machine is satisfiable in the domain of discourse, which is to say that there exists something which is a school which employs a handsome PC instructor who teaches every female student who uses a Mac machine, simply because there is no Mac machine in the domain of discourse and then because there is consequently no female student using it (in the domain of discourse).3 Under this scenario, (6) is not vacuously true. It is in fact tantamount to:\n(14) \u2217 Every school1 which employs a handsome PC instructor2 buys it? for him2.\nand the truth of buys it for him must be evaluated. However, what could be this misplaced \u2018it\u2019? Given there has not appeared any indication of an entity which the pronoun could point to, it is hard to judge that (14) is sensible. The discordance is caused by the Fregean absence of existential import in a universal expression. A counterargument to this exhibition of mine could be the following:\nWhile it is true that (14) makes no sense, it is not the same as (6), after all, even in the supposed particular domain of discourse. So if (6), instead of (14), is mentioned, the sentence should make sense: the \u2018it\u2019 is anaphoric to the \u2018a Mac machine\u2019 even though there exists no \u2018a Mac machine\u2019 in the particular domain of discourse, and the sentence evaluates to false because no schools buy \u2018a Mac machine\u2019 which is not in the domain of discourse.\nThis argument is flawed. If no entity in a domain of discourse is \u2018a Mac machine\u2019, the pronoun could not possibly refer to anything in the domain of discourse, not only in (14) but also in (6). To detail, note that it is impossible to discuss some entity that does not exist in a domain of discourse from within the particular domain of discourse. It does not follow, just because (6) contains a phrase \u2018a Mac machine\u2019, that a discussor who was defined to be able to discuss the entities in a domain of discourse only from within the particular domain of discourse all of a sudden gains ability to discuss\n3 Readers are cautioned against confusion about the difference between talking about the entities in the domain of discourse and talking about entities outside the toy domain. A Mac machine as a concept which I think exists of course exists in my mind. It is in the supposed domain of discourse that it is defined to not exist. When I say that there is no Mac machine in a domain of discourse, I am saying that a Mac machine that I know of is nowhere to be found in the particular domain of discourse.\nan entity that lies outside it. The discussor in the domain of discourse would not cognize the \u2018a Mac machine\u2019. It is true that we who think of this problem from outside the toy domain do, but that is just because our domain of discourse is not the toy domain of discourse.4 Hence plausibility of the above counterargument attempt is only attained by mixing two domains of discourse and by allowing free substitutions of one to the other at every convenience. In fact, if it were the case that (6) would make sense in the particular domain of discourse, it must be the case that the use of \u2018it\u2019 must also make sense. How could it have ever been learned that it is \u2018it\u2019 and not \u2018he\u2019, \u2018she\u2019, etc. without conveniently importing what we know of a Mac machine from outside the particular domain of discourse into it?\nTherefore, it seems right that (6) and (14) are indistinguishable in the particular domain of discourse if we suppose the modern existential import convention. And (6) under the supposition would make no more sense than (14). However, (6) certainly is a reasonable natural expression, which then counterevidences the convention."}, {"heading": "2.1.3 Square of opposition", "text": "Square of opposition has its root in Aristotle\u2019s Organon.5 The Traditional Square of Opposition (hereafter TSO) is illustrated in Figure 1. While A implies I and E implies O in the figure, the\nsubaltern relations do not carry over to the Fregean logic because it does not assume existential import of a universal expression. Contraries do not remain in the Fregean logic, either. According to an entry in the Stanford Encyclopedia of Philosophy on the Square of Opposition [21], the modern revision was motivated by the following reason, which I quote from the entry word for word:\nSuppose that \u2018S\u2019 is an empty term; it is true of nothing. Then the I form: \u2018Some S is P\u2019 is false. But then its contradictory E form: \u2018No S is P\u2019 must be true. But then the subaltern O form: \u2018Some S is not P\u2019 must be true. But that is wrong, since there aren\u2019t any Ss.\n4 Now, how does it ever happen in reality that he who comprehends language and who has been presented a phrase does not register it in his mind? I do not know, and I do not think that such be realistic. However, it is not the matter at hand. If one defines a domain of discourse to be not expandable with a new external input, what I have stated is a natural consequence to ensue. Whether the supposition is adequate or inadequate, that is another issue. 5 Freely available at http://classics.mit.edu/Browse/browse-Aristotle.html\nNow, the O form, if Aristotle\u2019s descriptions in On Interpretation (Cf. Part 6 onwards in the Internet Classics Archive) are to be followed properly, should be regarded more as \u2018Not every S is P.\u2019. Some works in the literature use this observation for defence of TSO, saying that if O is not \u2018Some S is not P.\u2019 but \u2018Not every S is P.\u2019 there is little problem in the formulation of TSO. They assume existential import in affirmative expressions only.\nBut this popular defence which goes on to justify TSO by absence or presence of existential import in certain expressions is not very accurate. Nowhere in Organon is it mentioned that a sentence which contains a term that may not denote anything could be judged of truth and falsehood. In fact, On Interpretation seems to offer a quite different view - that if a sentence is such that its truth value can be judged, it must be the case that there is no such phantom term that denotes nothing. What I am now, and not before (for the viewpoint assumed in [2] is no different from one of the popular interpretations), conscious of, largely thanks to the analysis I conducted in There should be no phantom terms without existential import, is that it is almost pointless to suppose lack of existential import, not just of a term used in the subject phrase of a sentence, but also of any term that appears in the sentence. When Aristotle considers the truth value of a sentence describing a future event: of whether a sea fight would or would not take place tomorrow, Aristotle is not merely alluding to intuitionistic reasoning (under which a proposition is true just when it can be constructively found to be true). Consider the following as found in Part 9 of On Interpretation:\n...[W]e see that both deliberation and action are causative with regard to the future, and that, to speak more generally, in those things which are not continuously actual there is potentiality in either direction. Such things may either be or not be; event also therefore may either take place or not take place. There are many obvious instances of this. It is possible that this coat may be cut in half, and yet it may not be cut in half, but wear out first. So it is therefore with all other events which possess this kind of potentiality. It is therefore plain that it is not of necessity that everything is or takes place; but in some instances there are real alternatives, in which case the affirmation is no more true and no more false than the denial;... Let me illustrate. A sea-fight must either take place tomorrow or not, but it is not necessary that it should take place tomorrow, neither is it necessary that it should not take place, yet it is necessary that it either should or should not take place tomorrow. Since propositions correspond with facts, it is evident that when in future events there is a real alternative, and a potentiality in contrary directions, the corresponding affirmation and denial have the same character. ... [I]n the case of that which exists potentially, but not actually, the rule which applies to that which exists actually does not hold good.\nIn plain terms it says that the proposition: \u2018This coat (in a domain of discourse X) will be cut in half (in another domain of discourse Y which is not X).\u2019, due to possibilities that Y may no longer retain the coat in X that could be cut in half, cannot be assigned a truth value. Neither can to the denial of the proposition: \u2018This coat (in X) will not be cut in half (in Y).\u2019.6 What this implies is the following. Suppose we have:\n3) Socrates is ill in reality. iii) \u2200x.(Socrates(x) \u2283 illReal(x)).\n6 A proposition A contradictory to a proposition B assumes the same subject as A does. Cf. On Interpretation. Hence if a proposition is about This coat (although an indivisible individual is not assumed in predicate gradual logic), then \u2018This coat will not be cut in half.\u2019 is indeed the proposition contradictory to \u2018This coat will be cut in half.\u2019.\n4) Socrates is not ill in reality. iv) \u2200x.(Socrates(x) \u2283 \u00ac illReal(x)).\nIf it were the case that Socrates could be an empty term not denoting anything, then it must be the case that neither 3) nor 4) is true or false, since non-being which is not cannot be judged, first of all, to be ill or not to be ill. Therefore, when Aristotle mentions in Part 10 of Categories:\n...[I]f Socrates exists, one of the two propositions \u2018Socrates is ill\u2019, \u2018Socrates is not ill\u2019 is true, and the other false. This is likewise the case if he does not exist; for if he does not exist, to say that he is ill is false, to say that he is not ill is true.\nit is not intention of Aristotle\u2019s to question existential import of Socrates in the domain of discourse in which Aristotle is delivering all these discussion. It is indisputable that Socrates is in the domain of discourse. It is only whether the Socrates which is in the domain of discourse is also in Aristotle\u2019s mental representation of reality, i.e. a different domain of discourse, that is being questioned. Hence the modern dispute against the truth assignment by Aristotle to 3) and 4) (falsehood to the former and truth to the latter) in case Socrates does not exist, that both should be vacuously true, is quite irrelevant. Within Aristotle\u2019s discourse, there is no such theory of \u2018vacuous truth\u2019. In light of Aristotle\u2019s judgement, 3) is false if Socrates is not in reality; and if 3) is false, 4) is naturally true. If 4) is false, then Socrates must be ill, which makes 3) true.\nLet us put things together. In all of A, E, I, and O, there is existential import in S if the expressions should bear any truth value at all. Therefore the argument that motivated the modern revision on TSO is off the mark. The popular defence for TSO was defending against a possibility which never arises, and, in so trying to defend, themselves resorted to introduction of existential import in affirmative statements while not in negative statements, which is no less controversial. In fact, it does not matter if O is \u2018Not every S is P.\u2019 or \u2018Some S is not P.\u2019, for, so long as they bear a truth value, S is not a phantom term in the domain of discourse discussing them. In case S or any term in a sentence is a phantom term in the domain of discourse it bears no truth value.\nThis is a very important verification. Previously, by a few discerning scholars [9, 22] on Aristotle\u2019s Organon, this result was anticipated, but their treatises left open wide possibilities of opposition. The analysis that I have conducted above corroborates the anticipated result reasonably beyond doubt."}, {"heading": "2.2 On attributed predicates", "text": "I stated under the last header of 1.3 that \u2200x\u2203y l x.([farmer m donkey(y) \u2227 own(\u25e6x, y)](x) \u2283 X) expresses the assertion: for every farmer who owns a donkey, it is the case that X. I stated that this may appear paradoxical at first sight, because the formal expression seems to say that there is y, and then x, while y must be an attribute of x. Let me dispel the ostensible paradox.\nWhen we talk about anything, say a car, we indeed talk about it. But to talk about it, we do not need know its details: we do not need know the size of the car\u2019s engine to be considered to be knowing the \u2018car\u2019; and we do not need know how many litres of diesel it loads. On the contrary, by a car we mean some exemplary representation of it (Kant\u2019s Form [15]) that covers only certain details of it but no further. When we then talk about its parts, we have in mind some exemplary car, and we probe its inside, again in mind. The parts may not be found in the particular exemplary car. But in that case our focus shifts from the car to the next car that is just as equally exemplar as the first one. And so an exemplary \u2018a car with the parts\u2019 is being determined in three steps: (A) an exemplary \u2018a car\u2019 is thought of; (B) the particular exemplary car that we thought of is looked in; (Ca) if the particular exemplary car is indeed with the parts, then it is an exemplary \u2018a car with the\nparts\u2019; (Cb) if not, the exemplary \u2018a car\u2019 was inconsistent with the described attribute \u2018the parts\u2019, in which case the thinker has to choose another equally exemplary \u2018a car\u2019. This is how our mind processes concepts, and \u2200x \u2203y l x.[farmer m \u2203y.donkey(y) \u2227 own(\u25e6x, y)](x) precisely models the cognitive process: (A) a constituent denoted by a in the outermost domain of discourse takes place of x. It is irrelevant to farmer if it is not a farmer in that particular domain of discourse; (B) By the principle of recognition cut-off [2], however, the domain of discourse does not distinguish a farmer from another any more specifically than must be in the domain of discourse. Hence, if that which is denoted by a is a farmer in the outermost domain of discourse, its attributive domain needs to be looked in to see what farmer it is; (Ca) if it indeed owns a donkey, then it falls under \u2203y l a.[farmer m donkey(y) \u2227 own(\u25e6a, y)]; (Cb) if not, then it is inconsistent with the described attribute donkey(y) \u2227 own(\u25e6a, y).\nHence existence of some constituent to take place of y can be justifiably discussed under the hypothesis that some constituent to take place of x is a farmer at the outer (main) domain of discourse."}, {"heading": "2.2.1 References to composite concepts", "text": "There may be many ways to interpret m. Of the two interpretations introduced in [2], the first one considers that if we have P m Q and R m Q, then it is the same as if we had P \u2227 R m Q. In this interpretation it is attributes that are prioritised over concepts that have them. But let us say that we like to express: There is a small rabbit, and there is a small elephant. Under the particular interpretation it would follow that both the rabbit and the elephant fall under a certain size range to be considered small, and the elephant becomes large as soon as it is as large as a large rabbit. But in this case, or perhaps when, in general, we deal with natural language expressions, another interpretation under which (rabbit m small) \u2227 (elephant m small) means that rabbit, relative to all its specific instances, is small, and that elephant, relative to all its specific instances, is small, should be more appropriate. Now, it is possible that the main concept to the left of m is not a single entity.\n( 15) There is a pair of a farmer and a teacher who collectively own a donkey.\n( ?15) \u2203x.[farmer \u2227 teacher m \u2203y.own(\u25e6x, y) \u2227 donkey(y)](x).\nThe predicate represents a composition of a farmer and a teacher who collectively own a donkey. The expression is not necessarily the same as: There is a farmer who owns a donkey, and there is a teacher who owns the same donkey., because it could be that neither of them could claim sole ownership of the donkey to himself/herself. But the real matter is that the parts of farmer\u2227 teacher go inaccessible in the above formalisation. Let us consider another sentence to follow (15):\n(16) The farmer buys a new farm.\nThere is no way that we could sensibly reuse x to refer just to the farmer here. This tells that an object may be divisible not just by attributes in other domains of discourse but also by entities in the main domain of discourse. I introduce the following facility to also apply quantification inside the collective predicate in the main domain of discourse.\n\u2203x \u2203z \u2203w.[farmer(z)\u2227teacher(w)m\u2203y.own(\u25e6x, y)\u2227donkey(y)](x)\u2227\u2203u.[farmmnew(\u25e6u)](u)\u2227 buy(z, u).\nIt formalises (15) followed by (16).\n3 Formalisation\nPreliminary remarks. To both readers who have come here by completing Section 2 and those who may have jumped from the middle of Section 1, may I state that if at any point you are unsure of notations, then you should not hope to find clues after that point, for nothing that comes later will help understand the concept you may stumble upon - no, you should read from the beginning of this section again to find what you did not take a note. Then you will find your answers. This may be a good place, incidentally, to note one thing peculiar to my writing. Due partly to my dislike about indiscriminately using \u2018and\u2019 and \u2018or\u2019 in both natural and formal contexts, and due partly to the need for eventually dealing with three truth values: T for logical truth, F for logical falsehood, and U for undecided, I will more likely - though I do not give a guarantee that I will always do - use and, or and not, whenever the context in which such words are used strongly indicates truth-value comparisons. \u2018if...then\u2019 or \u2018iff\u2019 to mean \u2018if and only if\u2019 are not so meticulously marked. I define for U that:\n1. (U and T) = (U or T) = U. 2. (U and F) = (U or F) = U. 3. not U = U.\nAssume that and and or are associative and commutative. The three meta-notations follow the semantics of classical conjunction, disjunction and negation when an expression does not involve U. In short T,F and U are Bochvar-three-values [3]. Assume that and and or are associative and commutative. The three meta-notations follow the semantics of classical conjunction, disjunction and negation when an expression does not involve U. In short T,F and U are Bochvar-three-values [3]. When I mention some predicate P, not, however, of predicate gradual logic, in such a way as not to explicitly mention either of U,T and F; e.g. \u201cP iff ...\u201d, I mean to really say \u201cP is T iff ...\u201d. Materials not to be covered\n1. Proof theory: while I present semantics that is not finitely restricted, I will not show consistency in infinite cases. Proof theory is being developed in another ongoing work, and consistency relative to ZFC consistency in infinite cases will be dealt with there. 2. Non-nullary function symbols and nullary predicates: they are not needed for the objective of this paper. 3. Modalities and generalised quantifiers: dealing with every class of natural expressions is not an objective.\nEnd of preliminary remarks.\nFirstly, I assume a set of logical connectives {>0,\u22a50,\u22001,\u22031,\u00ac1,\u22272,\u22282,\u22832,m2}. The subscripts indicate their arity. \u00ac binds the strongest, \u2227 and \u2228 bind the second strongest, m the third strongest, \u2200 and \u2203 the fourth strongest, while \u2283 binds the weakest. Secondly, I assume parentheses, brackets and punctuation symbols. Thirdly, I assume a set X of an uncountably infinite number of basic variables. Fourthly, I assume a symbol ' for surface equality and a symbol = for equality. Differences between the two symbols will become clear by and by. And lastly, I assume l also, which is the inverse symbol of m, but which is only used within terms, to be defined shortly. Any of these that I have just mentioned is treated as a logical symbol.\nIn addition, I assume: (A) a set A of an at most countable number of basic domain symbols; and (B) a set P of an at most countable number of distinct basic predicate symbols with arity greater than or equal to 1. Any of these is treated as a non-logical symbol.\nThe language for predicate gradual logic, L, comprises these symbols. For convenience, I will\ndenote any basic variable by x with or without a subscript, any basic domain symbol by a with or without a subscript, and any basic predicate symbol by p with or without a subscript. A term body, which I denote by t? with or without a subscript, and a term, which I denote by t with or without a subscript and/or a superscript, are recursively and simultaneously defined: Term body\n1. A sequence of terms t1. \u00b7 \u00b7 \u00b7 .tn for n \u2265 1.\nTerm\n1. A basic variable or a basic domain symbol. 2. tl t? for some term t and some term body t?.\nFor presentational convenience, I use the notation: t? n for some n \u2265 1, to mean that t? is a n-long sequence of terms, i.e. t? = t1. \u00b7 \u00b7 \u00b7 .tn for some terms ti, 1 \u2264 i \u2264 n. Further, I write t ? n, i for some 1 \u2264 i \u2264 n to refer to the i-th term in the sequence of terms; e.g. t? n, i = ti in case t? n = t1. \u00b7 \u00b7 \u00b7 .tn. I call a term with a front superscript of \u25e6 with or without a subscript and/or a superscript a connector; e.g. \u25e6t11. I denote either a term or a connector by t with or without a subscript and/or a superscript, and call it a g-term.\nI Definition 1 (Term leftmost position). I define lefm to be a recursive function taking as the input a term and outputting either a basic variable or a basic domain symbol:\n1. lefm(x) = x. 2. lefm(a) = a. 3. lefm(tl t?) = lefm(t).\nI define a variable to be a term t with lefm(t) \u2208 X . I simultaneously define a predicate: P with or without a subscript, and a formula: F with or without a subscript, to be any that matches the following descriptions. Predicate\n1. Any basic predicate in P . 2. \u2227l(\u22652) i Pi(ti1, . . . , tin) such that Pi, 1 \u2264 i \u2264 l are n-ary predicates having n terms. 3. P m F such that P is a n-ary predicate and F is a formula.\nFormula\n1. p(t1, . . . , tn) or \u00acp(t1, . . . , tn) such that p is a n-ary basic predicate and t1, . . . , tn are g-terms. 2. > or \u22a5. 3. t1 = t2 or t1 ' t2 such that t1 and t2 are terms. 4. P (t1, . . . , tn) such that P is a n-ary predicate and t1, . . . , tn are terms. 5. \u00acF such that F is a formula. 6. \u2200v.F or \u2203v.F such that: v is a variable; and F is a formula. 7. F1 \u2227 F2, F1 \u2228 F2 or F1 \u2283 F2 such that F1 and F2 are formulas.\nNotice from these definitions that I do not consider, for instance, [own m completely](\u25e6a1, a2) or [own(\u25e6a1, a2)\u2227like(\u25e6a3, a4)](\u25e6a5, a6) as a formula. A connector can occur only in a basic predicate which does not form a collective predicate (save implicitly with > by p = (pm>))."}, {"heading": "3.1 Free and bound variables", "text": "Four definitions precede the definition of free and bound variables. But these four will be also referred to.\nI Definition 2 (Subterm and Subvariable). For a term body symbol t?, I define Subterm(t?) to be a list of all its sub-terms:\n1. If t? is a basic term, then t? is a sub-term of t?. 2. If t? is in the form t1 l t?2, then: (A) all sub-terms of t?2 are sub-terms of t?; and (B) if t3 is a\nsub-term of t1, then t3 l t?2 is a sub-term of t?.\nAny in group (A) appears before any in group (B) in Subterm(t?). For each Subterm(t?2) and Subterm(t3), and for any t?a, t?b in the list, if t?a appears before t?b , then the order is preserved in Subterm(t?).\n3. If t? is in the form t1. \u00b7 \u00b7 \u00b7 .tn, then any sub-term of ti, 1 \u2264 i \u2264 n is a sub-term of t?. For 1 \u2264 i < j \u2264 n, any sub-term of ti appears before all sub-terms of tj in Subterm(t?). For any 1 \u2264 i \u2264 n, and for any t?a, t?b \u2208 Subterm(ti), if t?a appears before t?b in Subterm(ti), then the order is preserved in Subterm(t?).\n4. Any others, t? does not have any sub-term.\nI define Subvariable(t?) for a term body symbol to be all variables in Subterm(t?) order-preserving.\nIDefinition 3 (Occurrence of a variable in a formula). Let S be either a term body or a formula. Let match be a predicate taking as inputs a variable and S of L. The definition is recursive.\n1. not match(v, S) for some symbol S iff there are no descriptions below by which match(v, S). 2. For any x1, x2 \u2208 X , match(x1, x2) iff x1 is x2. 3. match(v, t? n ) iff match(v, t? n, i ) for some 1 \u2264 i \u2264 n.\n4. match(x, tl t? n ) iff match(x, t? n,i ) for some 1 \u2264 i \u2264 n. 5. match(v1 l t ? n 1 , tl t ? m ) iff one of the following two holds true.\n(A) match(v1 l t ? n 1 , t ? m, i ) for some 1 \u2264 i \u2264 m. (B) When the following three conditions hold true. (AA) n = m.\n(BB) match(t ? n,i 1 , t ? m,i ) for each 1 \u2264 i \u2264 n. (CC) match(v1, t).\n6. match(v, p(t1, . . . , tn)) iff there exists ti, 1 \u2264 i \u2264 n, such that match(v, ti). 7. match(x, [ \u2227l(\u22652) i=1 Pi(ti1, . . . , tin)](t1, . . . , tn)) iff there exists some tj , 1 \u2264 j \u2264 n, or tkj , 1 \u2264\nj \u2264 n, 1 \u2264 k \u2264 l such that match(x, tj) or match(x, tkj ).\n8. match(v1 l t ? m 1 , [ \u2227l(\u22652) i=1 Pi(ti1, . . . , tin)](t1, . . . , tn) iff one of the conditions below satisfies:\n(A) There exists some 1 \u2264 k \u2264 n such that match(v1 l t ? m 1 , tk). (B) There exists some 1 \u2264 i \u2264 l and some 1 \u2264 k \u2264 n such that match(v1 l t ? m 1 , t l k).\n(C) There exists some 1 \u2264 i \u2264 l such that match(v l t? m1 , Pi(ti1, . . . , tin)). 9. match(x, [P m F ](t1, . . . , tn)) iff: (A) there exists some ti, 1 \u2264 i \u2264 n, such that match(x, ti);\nor (B) match(x, P ) (provided P is a formula).\n10. match(v l t? m , [P m F ](t1, . . . , tn)) iff one of the following conditions satisfies:\n(A) match(v l t? m , ti) for some 1 \u2264 i \u2264 n. (B) When the following three conditions hold true:\n(AA) n = m. (BB) match(t? m,i , ti) for every 1 \u2264 i \u2264 m. (CC) match(v, F ).\n(C) match(v l t? m , P ) (provided P is a formula).\n11. match(v,\u00acF ) iff match(v, F ). 12. match(v1,\u2200v2.F ) iff match(v1, vx) for vx \u2208 Subvariable(v2) excluding v2 or match(v1, F ). 13. match(v1,\u2203v2.F ) iff match(v1, vx) for vx \u2208 Subvariable(v2) excluding v2 or match(v1, F ). 14. match(v, F1\u2227F2) (or match(v, F1\u2228F2) or match(v, F1 \u2283 F2)) iff match(v, F1) or match(v, F2). 15. match(v, t1 = t2) (or match(v, t1 ' t2)) iff match(v, t1) or match(v, t2).\nThen I say that a variable v occurs in a formula F iff match(v, F ).\nFor convenience, let us assume that t\u2022 with or without a subscript is either \u2020, (t?)\u2020 or else ((. . . ((t?1)\u2020l t?2) l \u00b7 \u00b7 \u00b7 ) l t?n\u22121) l t?n, containing one and only one constituent that comes with superscript \u2020. I call any of them a marked term body.\nI Definition 4 (Marked term body concatenation and extraction). I define \u2295 to be a function that takes as inputs a term body and a marked term body and that outputs a marked term body.7\n1. t?1 \u2295 \u2020 = (t?1)\u2020. 2. t?1 \u2295 (t?2)\u2020 = (t?1)\u2020 l t?2 for a term body t?2. 3. t?1 \u2295 ((. . . ((t?2)\u2020 l t?3) l \u00b7 \u00b7 \u00b7 ) l t?n\u22121) l t?n = ((. . . (((t?1)\u2020 l t?2) l t?3) l \u00b7 \u00b7 \u00b7 ) l t?n\u22121) l t?n for\nterm bodies t?2, . . . , t ? n, 3 \u2264 n.\nI define \u03c4l to be a function that takes as the input a marked term body and that outputs a marked term body, and \u03c4r, also a function that takes as the input a marked term body and that outputs a term body:\n1. \u03c4l((t?1)\u2020) = t?1. 2. \u03c4l((t?1)\u2020 l t?2) = t?1. 3. \u03c4l(((. . . (((t?1)\u2020 l t?2) l t?3) l \u00b7 \u00b7 \u00b7 ) l t?n\u22121) l t?n) = t?1.\n4. \u03c4r((t?1)\u2020) = \u2020. 5. \u03c4r((t?1)\u2020 l t?2) = (t?2)\u2020. 6. \u03c4r(((. . . (((t?1)\u2020 l t?2) l t?3) l \u00b7 \u00b7 \u00b7 ) l t?n\u22121) l t?n) = (. . . (((t?2)\u2020 l t?3) l \u00b7 \u00b7 \u00b7 ) l t?n\u22121) l t?n.\nIt holds true that \u03c4l(t\u2022)\u2295 \u03c4r(t\u2022) = t\u2022 for a marked term body.\nI Definition 5 (Projection of marked term bodies). I define \u03b4 to be a function that takes a marked term body and that outputs a term body or , such that:\n1. \u03b4( \u2020) = . 2. \u03b4((t?1)\u2020 l t?2) = t?1 l t?2. 3. \u03b4(((. . . ((t?1)\u2020 l t?2) l \u00b7 \u00b7 \u00b7 ) l t?n\u22121) l t?n) = ((. . . (t?1 l t?2) l \u00b7 \u00b7 \u00b7 ) l t?n\u22121) l t?n.\n7 Two definitions may suffice, the second and the third items presented together, but these three are more perspicuous.\nI Definition 6 (Free and bound variables). Let Free and Bound be functions taking some marked term body and a formula and outputting a set of variables. The definition is recursive.\n1. Free(t\u2022,>) = Bound(t\u2022,>) = Free(t\u2022,\u22a5) = Bound(t\u2022,\u22a5) = \u2205. 2. Free(t\u2022, t1 = t2) and similarly Free(t\u2022, t1 ' t2) for some terms t1 and t2 contain any variable\n\u03b4(v\u2295t\u2022) iff v occurs in t1 or t2. The sets contain no other variables. Meanwhile, Bound(t\u2022, t1 = t2) = Bound(t\u2022, t1 ' t2) = \u2205. 3. Free(t\u2022, p(t1, . . . , tn)) for some g-terms contains any variable \u03b4(v \u2295 t\u2022) iff v occurs in ti, 1 \u2264 i \u2264 n. The set contains no other variables. Meanwhile, Bound(t\u2022, p(t1, . . . , tn)) = \u2205.\n4. Free(t\u2022, [ \u2227l(\u22652) i=1 Pi(ti1, . . . , tin)](t1, . . . , tn)) contains any variable \u03b4(v\u2295t\u2022) if v occurs in tj , 1 \u2264\nj \u2264 n. It also contains \u22c3l i=1 Free(t1. \u00b7 \u00b7 \u00b7 .tn\u2295t\u2022, Pi(ti1, . . . , tin)). It contains no other variables.\nMeanwhile, Bound(t\u2022, [ \u2227l(\u22652) i=1 Pi(t i 1, . . . , t i n)](t1, . . . , tn)) = \u22c3l i=1 Bound(t1. \u00b7 \u00b7 \u00b7 .tn\u2295t\n\u2022, Pi(ti1, . . . , tin)). 5. Free(t\u2022, [P m F ](t1, . . . , tn)) = Free(t\u2022, P (t1, . . . , tn)) \u222a Free(t1. \u00b7 \u00b7 \u00b7 .tn \u2295 t\u2022, F ). Mean-\nwhile, Bound(t\u2022, [P m F ](t1, . . . , tn)) = Bound(t\u2022, P (t1, . . . , tn)) \u222a Bound(t1. \u00b7 \u00b7 \u00b7 .tn \u2295 t\u2022, F ). 6. Free(t\u2022,\u00acF ) = Free(t\u2022, F ). And Bound(t\u2022,\u00acF ) = Bound(t\u2022, F ). 7. Free(t\u2022,\u2200v.F ) = (Free(t\u2022, F ) \u222a {\u03b4(vx \u2295 t\u2022) | vx \u2208 Subvariable(v) and\nlefm(vx) 6= lefm(v)}). Meanwhile, Bound(t\u2022,\u2200v.F ) = Bound(t\u2022, F ) \u222a {\u03b4(vy \u2295 t\u2022) | vx \u2208 Subvariable(v) and vy = vx[lefm(vx) 7\u2192 lefm(v)]}. Here, vx[lefm(vx) 7\u2192 lefm(v)] is a variable that is almost exactly vx except that lefm(vx) is replaced by lefm(v).\n8. Free(t\u2022,\u2203v.F ) = Free(t\u2022,\u2200v.F ). And Bound(t\u2022,\u2203v.F ) = Bound(t\u2022,\u2200v.F ). 9. Free(t\u2022, F1 \u2227 F2) = Free(t\u2022, F1 \u2228 F2) = Free(t\u2022, F1 \u2283 F2) = Free(t\u2022, F1) \u222a Free(t\u2022, F2).\nBound(t\u2022, F1\u2227F2) = Bound(t\u2022, F1\u2228F2) = Bound(t\u2022, F1 \u2283 F2) = Bound(t\u2022, F1)\u222aBound(t\u2022, F2).\nI Definition 7 (Well-formedness). Let Subformula be a function that takes a formula and that outputs the set of all the subformulas of the formula. I assume that any p(t1, . . . , tn),>,\u22a5, any t1 = t2 or any t1 ' t2 has only itself as its subformula, but otherwise I take it for granted that readers are familiar with the notion of a subformula of a formula; Cf. [16]. Let Pnode be a function that takes two formulas and that outputs a set of formulas such that Pnode(F1, F2) = {[PmF3](t1, . . . , tn) \u2208 Subformula(F1) |F2 \u2208 Subformula(F3) and (there exist no Px, F4 such that [PxmF4](t1, . . . , tm) \u2208 Subformula(F3) and F2 \u2208 Subformula(F4))}. I say that a formula F is well-formed iff the following conditions hold true of F .\n(Term compatibility in equalities) Tcompatible(F ) which holds true iff the following satisfy for any subformula of F in either of the forms: t1 = t2 or t1 ' t2: 1. If t1 is either some basic variable or some basic domain symbol, then t2 is either a basic\nvariable or a basic domain symbol.\n2. If t1 is t\u20321lt ? m 1 for some term t \u2032 1 and some term body t ? m 1 , then (A) t2 is t \u2032 2lt ? m 2 for some\nterm t\u20322 and some term body t ? m 2 ; (B) Tcompatible(t\u20321 = t\u20322); and (C) Tcompatible(t ? m,i 1 = t ? m,i 2 ) for each 1 \u2264 i \u2264 m.\n(Connector compatibility) Ccompatible(F ) which holds true iff, for any basic predicate p(t1, . . . , tn) occurring as a subformula of F , and for any ti, 1 \u2264 i \u2264 n, if ti = \u25e6ti for some term ti, then for each [P m F3](t\u20321, . . . , t\u2032m) \u2208 Pnode(F, p(t1, . . . , tn)), there exists 1 \u2264 j \u2264 m such that t\u2032j = ti. (No free variables) Free( \u2020, F ) = \u2205.\nConnector compatibility says that the use of \u25e6ti must be proper (Cf. 1.3): it must have a corresponding term ti."}, {"heading": "3.2 Semantics", "text": "Let us define domains of discourse. Since I presume that any object is divisible by attributes it has, the domains must be nested ones. I have mentioned also that an object may be a collection of objects, so it can be also divisible by objects. The divisibility and the nesting then go in two directions.\nBut, let us begin with some intuition on divisibility by attributes, and then on divisibility by objects. For a start readers could imagine a countable set W of possible worlds. To make matters even simpler, let us for now forget about divisibility by objects. Readers could (for now) imagine that an object in predicate gradual logic is each such possible world. Usually it is the case that a possible world w is a point in W which is not further divisible. In predicate gradual logic w \u2208 W is a point only in the particular set W . That is, if we look into w, what appeared as a point in W turns out to have extension, like in any fractal space. This should form primitive understanding of l (and also m), which is a relation between objects that are in one space and their attributes that are in other attributive spaces of the space. This, however, is of course too coarse to capture domains of discourse in predicate gradual logic. Rigorously, any combination of points in such a Kripkean space, or in fact any combination of sequences of points in any Kripkean spaces should be permitted to have such attributive Kripkean spaces in order that that be reflection of predicate gradual logic\u2019 objects and attributes. We have covered up to divisibility by attributes. Let us now add divisibility by objects into this understanding. We no longer just have those points, but we can also refer to collections of those points as if they were points. Remember the entities in set theory, where every one of them is a set. We are done with divisibility by objects. Now, to put things together, any collections of points, any sequence of them in one or more such spaces can have an attributive space, which is a proper understanding about the divisibility and the nesting of objects in predicate gradual logic.\nIncidentally, by an object I do not mean the usual indivisible entities lying in the external world. The postulate of such entities and the postulate that any reasoning would be possible of them are incompatible with my point of view [2].\nOnto formal definitions now. I define a semantic structure to be a tuple (D,D,P, \u00b5, I\u00b5,v,\u2208?). The components are as defined below.\nI Definition 8 (D: Constituents of domains of discourse). Let D\u2212 be an at most countable set. Its elements are referred to by d with or without a subscript. Then D is some subset of D\u2212 \u00d7N. I refer to any (d, n) \u2208 D by dn. I define \u03c1 to be a projection operator for D into D\u2212 such that: \u03c1(dn) = d if dn \u2208 D.\nFrom here on I will call each element of D strictly by a basic object. It is not necessary that a basic object be independent of the others. It could happen that dn11 \u2208 D be a collection of d n2 2 , d n3 3 \u2208 D. It, however, must be a set in ZFC; and in case dn comprises dn11 , . . . , d nk k , it must be that d1 6= \u00b7 \u00b7 \u00b7 6= dk. There is a good reason why it should be so, which will be explained later. It will become convenient that we have similar notions to term symbols, term body symbols, and so on for the elements of D, too. Let us define object symbols, o with or without a subscript and/or a superscript, and object body symbols, o? with or without a subscript and/or a superscript. They derive from substituting o into all t and o? into all t? in the definitions of Term body and Term. I denote the class of all object symbols by O. o? m with or without a subscript similarly denotes a sequence of object symbols with length m, and, similarly, marked object bodies (Cf. around Definition 4), o\u2022 with or without a subscript. Similarly for \u2295, \u03c4l, \u03c4r and \u03b4, and assume also Subobject is analogous to Subterm.\nI Definition 9 (\u00b5: Variable assignment and I\u00b5: Interpretation). \u00b5 is defined to be some function that takes as inputs an object body and a basic variable symbol and that outputs a basic object. I\u00b5 is a function dependent on some variable assignment \u00b5, defined as follows.\n1. I\u00b5(\u03b4(o\u2022), a) \u2208 D for each basic domain symbol a. 2. I\u00b5(\u03b4(o\u2022), x) = \u00b5(\u03b4(o\u2022), x). 3. I\u00b5(\u03b4(o\u2022), t1. \u00b7 \u00b7 \u00b7 .tn) = I\u00b5(\u03b4(o\u2022), t1). \u00b7 \u00b7 \u00b7 .I\u00b5(\u03b4(o\u2022), tn). 4. I\u00b5(\u03b4(o\u2022), tl t?) = I\u00b5(\u03b4(I\u00b5(\u03b4(o\u2022), t?)\u2295 o\u2022), t) l I\u00b5(\u03b4(o\u2022), t?). 5. I\u00b5(\u03b4(o\u2022), \u25e6t) = I\u00b5(\u03b4(\u03c4r(o\u2022)), t). 6. I\u00b5(\u03b4(o\u2022), p) \u2286 On for any n-ary basic predicate.\nI Definition 10 (v: Binary relation over object body symbols). The binary relation satisfies the following conditions.\nReflexibity For any object body symbol o?, it holds that o? v o?. Transitivity For any three object body symbols o?1, o?2 and o?3, it holds that o?1 v o?3 if o?1 v o?2 and o?2 v o?3. Antisymmetry For any two object body symbols o?1 and o?2, it holds that o?1 = o?2 iff o?1 v o?2 and o?2 v o?1. Subsumptivity For any three object body symbols o?1, o?2 and o?3, it holds that (o?1 l o?2) v o?3 iff o ? 2 v o?3. It also holds that o?1 v (o?2 l o?3) iff o?1 = (o?4 l o?5) for some o?4 and o?5\nsuch that o?5 v o?3 and o?4 v o?2.\nSequentiality For any two object body symbols o ? n 1 and o ? m 2 , it holds that o ? n 1 v\no ? m 2 iff n = m and o ? n,i 1 v o ? m,i 2 for each 1 \u2264 i \u2264 m.\nI Definition 11 ( D: Domain function, and P: Predicate function). Components of a structure around domains are defined to satisfy the following conditions. D takes as the input or an object body and outputs a subset of D. P takes as the input or an object body and outputs a subset of P .\nTop D( ) = D and P( ) = P . Monotonicity For any two object body symbols o?1, o?2, it holds that if o?1 v o?2, then\nD(o?1) \u2286 D(o?2) and P(o?1) \u2286 P(o?2).\nThis definition embodies attribute normal interpretation for both D and P . Now, let us come back to the point made after Definition 8. The point of the superscripts on some d is to express differences between d1, d2, ..., that are observable if we zoom out of the domain of discourse that contains them, say D(o?), but that are not observable in the very domain of discourse. Hence in the very domain D(o?) having a set {d1, d2} for instance is the same as having another set {di} for some di \u2208 D(o?).\nIDefinition 12 (\u2208?: Indexed set inclusions). I define a class of set inclusion operators: {\u2208}\u00d7O such that if o?1(\u2208, \u03b4(o\u20221))o?2, it is not necessary that o?1(\u2208, \u03b4(o\u20222))o?2 unless \u03b4(o\u20221) = \u03b4(o\u20222). Apart from this mutual independence, each one of them is a ZFC set inclusion operator. I denote any (\u2208, \u03b4(o\u2022)) by \u2208\u03b4(o\u2022). I define \u2208? to be the class of all these set inclusions.\nIncidentally, suppose there are two sequences of object symbols. One is o?1 = d n1 1 . \u00b7 \u00b7 \u00b7 .d ni i , and the other is o?2 = d n\u20321 1 . \u00b7 \u00b7 \u00b7 .d n\u2032i i for i > 1. Even if d nj j \u2208\u03b4(o \u2022) d n\u2032j j for at least one 1 \u2264 j \u2264 i (but potentially all such j) and dnkk = d n\u2032k k for any other 1 \u2264 k \u2264 i, it is not perforce the case that o?1 \u2208\u03b4(o \u2022) o?2, while, of course, if o ? 1 \u2208\u03b4(o \u2022) o?2 and o?2 \u2208\u03b4(o \u2022) o?3, then it holds true that o ? 1 \u2208\u03b4(o\n\u2022) o?3. I have just finished defining all the components of a structure. There are a few other definitions\nrequired for characterisation of semantics.\nI Definition 13 (Variable assignment updates). Let \u03ben be a recursive function that takes a variable and that outputs a marked term body, such that: \u03be0(v) is almost exactly v except that lefm(v) is replaced by (lefm(v))\u2020; and \u03bek+1(v) = \u03c4r(\u03bek(v)). Let V(v) be \u22c3 k\u22651{\u03bek(v) | \u03bek(v) 6= \u2020}. Then I define \u03b6 to be a function taking: a structure; an object body symbol or else ; a variable; and a basic object, and outputting a structure, such that \u03b6(M, \u03b4(o\u2022), v, dn) is a strucutre that is almost exactly M except that \u00b5(\u03b4(o\u2022), lefm(v)) = dn and \u00b5(\u03b4(I\u00b5(\u03b4(o\u2022), \u03b4(t\u2022)) \u2295 o\u2022), lefm(v)) = dn for each t\u2022 \u2208 V(v).\nThis embodies the attribute normal interpretation for variable assignment.\nI Definition 14 (Surface equality). I say that o1 ' o2 for any two objects o1 and o2 iff |Subobject(o1)| = |Subobject(o2)| and \u03c1(lefm(o1)) = \u03c1(lefm(o2)) where o1 (o2) is the last element in Subobject(o1) (in Subobject(o2)) and if |Subobject(o1)| 6= 1, then for all 1 \u2264 i < |Subobject(o1)|, {i-th element of Subobject(o1)} = {i-th element of Subobject(o2)}.\nI Definition 15 (Proper objects). I define properOD to be a predicate dependent on some D. It takes an object body symbol or , and an ordered list of object body symbols. The definition is recursive.\n1. properOD(\u03b4(o\u2022), (dn)) iff dn \u2208 D(\u03b4(o\u2022)). 2. properOD(\u03b4(o\u2022), (ol o?)) iff properOD(\u03b4(o? \u2295 o\u2022), (o)) and properOD(\u03b4(o\u2022), (o?)). 3. properOD(\u03b4(o\u2022), (o1. \u00b7 \u00b7 \u00b7 .on)) iff properOD(\u03b4(o\u2022), (oi)) for each 1 \u2264 i \u2264 n. 4. properOD(\u03b4(o\u2022), (o?1, . . . , o?n)) iff properOD(\u03b4(o\u2022), (o?i )) for each 1 \u2264 i \u2264 n.\nI Definition 16 (Proper g-terms). I define properI\u00b5 to be a predicate dependent on some I\u00b5. It takes an object body symbol or , and a g-term. It is recursive.\n1. properI\u00b5(\u03b4(o \u2022), x) iff I\u00b5(\u03b4(o\u2022), x) \u2208 D(\u03b4(o\u2022)). 2. properI\u00b5(\u03b4(o \u2022), a) iff I\u00b5(\u03b4(o\u2022), a) \u2208 D(\u03b4(o\u2022)). 3. properI\u00b5(\u03b4(o \u2022), tl t?) iff properI\u00b5(\u03b4(o \u2022), t?) and properI\u00b5(\u03b4(I\u00b5(\u03b4(o \u2022), t?)\u2295 o\u2022), t). 4. properI\u00b5(\u03b4(o \u2022), t1. \u00b7 \u00b7 \u00b7 .tn) iff properI\u00b5(\u03b4(o\n\u2022), ti) for all 1 \u2264 i \u2264 n. 5. properI\u00b5(\u03b4(o \u2022),\u25e6 t) iff properI\u00b5(\u03b4(\u03c4r(o \u2022)), t).\nThese two notations judge whether each basic predicate and term can appear under a given domain of discourse.\nI Definition 17 (Semantics). I define the following forcing relations.\nA M, o\u2022 |= p(t1, . . . , tn) is U if I\u00b5(\u03b4(o\u2022), p) = \u2205 or not properOD(\u03b4(o\u2022), (I\u00b5(\u03b4(o\u2022), p))) or p 6\u2208 P(\u03b4(o\u2022)) or not properI\u00b5(\u03b4(o\n\u2022), ti) for some 1 \u2264 i \u2264 n. These rules marked with alphabets have a priority over any other rules to follow and override any of them.\nB M, o\u2022 |= t1 = t2 is U if not properI\u00b5(\u03b4(o \u2022), t1) or not properI\u00b5(\u03b4(o \u2022), t2). C M, o\u2022 |= t1 ' t2 is U if not properI\u00b5(\u03b4(o \u2022), t1) or not properI\u00b5(\u03b4(o \u2022), t2).\nD M, o\u2022 |= [ \u2227l(\u22652) i=1 Pi(ti1, . . . , tin)](t1, . . . , tn) is U if there exist some 1 \u2264 i \u2264 l and some\n1 \u2264 j \u2264 n such that not properI\u00b5(\u03b4(o \u2022), tij) or not properI\u00b5(\u03b4(o \u2022), tj). E M, o\u2022 |= [PmF ](t1, . . . , tn) is U if there exists some 1 \u2264 j \u2264 n such that not properI\u00b5(\u03b4(o\n\u2022), tj) or notM, I\u00b5(\u03b4(o\u2022), t1). \u00b7 \u00b7 \u00b7 .I\u00b5(\u03b4(o\u2022), tn)\u2295 o\u2022 |= F .\n1. M, o\u2022 |= p(t1, . . . , tn) if (I\u00b5(\u03b4(o\u2022), t1), . . . , I\u00b5(\u03b4(o\u2022), tn)) \u2208\u03b4(o \u2022) I\u00b5(\u03b4(o\u2022), p). 2. M, o\u2022 |= [ \u2227l(\u22652) i=1 Pi(ti1, . . . , tin)](t1, . . . , tn) if:\nM, o\u2022 |= Pi(ti1, . . . , tin) for each 1 \u2264 i \u2264 l, and I\u00b5(\u03b4(o\u2022), ti1). \u00b7 \u00b7 \u00b7 .I\u00b5(\u03b4(o\u2022), tin) \u2208\u03b4(o \u2022) I\u00b5(\u03b4(o\u2022), t1). \u00b7 \u00b7 \u00b7 .I\u00b5(\u03b4(o\u2022), tn) for each 1 \u2264 i \u2264 l.\n3. M, o\u2022 |= [P m F ](t1, . . . , tn) if: M, o\u2022 |= P (t1, . . . , tn) andM, I\u00b5(\u03b4(o\u2022), t1). \u00b7 \u00b7 \u00b7 .I\u00b5(\u03b4(o\u2022), tn)\u2295 o\u2022 |= F . 4. M, o\u2022 |= >. 5. notM, o\u2022 |= \u22a5. 6. M, o\u2022 |= \u00acF if notM, o\u2022 |= F . 7. M, o\u2022 |= \u2200v.F if \u03b6(M, \u03b4(o\u2022), v, dn), o\u2022 |= F for each dn \u2208 D(\u03b4(I\u00b5(\u03b4(o\u2022), v)\u2295 o\u2022)). 8. M, o\u2022 |= \u2203v.F if \u03b6(M, \u03b4(o\u2022), v, dn), o\u2022 |= F for some dn \u2208 D(\u03b4(I\u00b5(\u03b4(o\u2022), v)\u2295 o\u2022)). 9. M, o\u2022 |= F1 \u2227 F2 ifM, o\u2022 |= F1 andM, o\u2022 |= F2.\n10. M, o\u2022 |= F1 \u2228 F2 ifM, o\u2022 |= F1 orM, o\u2022 |= F2. 11. M, o\u2022 |= F1 \u2283 F2 ifM, o\u2022 |= \u00acF1 orM, o\u2022 |= F2. 12. M, o\u2022 |= t1 = t2 if I\u00b5(\u03b4(o\u2022), t1) = I\u00b5(\u03b4(o\u2022), t2). 13. M, o\u2022 |= t1 ' t2 if I\u00b5(\u03b4(o\u2022), t1) ' I\u00b5(\u03b4(o\u2022), t2).\nAlphabetical rules apply when a predicate or a term that is not under \u03b4(o\u2022) nonetheless appears. To explain the second condition of the rule E, P m F is inconsistent in that case, and the terms are then predicated by inconsistency, which is impossible.\nI Definition 18 (Coherence). LetM be a structure. Meanwhile, let F be a well-formed formula in L. I say thatM coheres to F iffM, \u2020 |= F is either T or F.\nI Definition 19 (Satisfiability and validity). I say that a structureM satisfies a formula F iffM coheres to F andM, \u2020 |= F . I say that F is valid iff there is at least oneM that satisfies F and everyM that coheres to F satisfies F .\nI Theorem 20 (Consistency in finite cases). Restricted to finite D, predicate gradual logic is consitent.\nProof. Mostly straightforward. J\n4 Revisiting the Mac sentence\n( 6) Every school which employs a handsome PC instructor who teaches every female learner using a Mac machine buys it for him. ( ?6) \u2200x \u2203y l x \u2200z l y l x \u2203w l z l y l x \u2203u.([school m ([pcinstructor m handsome(\u25e6y) \u2227 ([learner m female(\u25e6z) \u2227 (Mac(w) \u2227 use(\u25e6z, w))](z) \u2283 teach(\u25e6y, z))](y) \u2227 employ(\u25e6x, y))](x) \u2283 w ' u \u2227 buy(x, u)).\nWe may have the following semantic structure (D,D,P, \u00b5, I\u00b5,v,\u2208?):\nD is {school, PCinstructor, learner, Mac}. D satisfies:\n1. PCinstructor \u2208 D(school). 2. learner \u2208 D(PCinstructorl school). 3. Mac \u2208 D(learner l PCinstructorlschool).\nP satisfies:\n1. school,employ \u2208 P( ). 2. pcinstructor, teach \u2208 P(school). 3. handsome, learner \u2208 P(PCinstructorlschool). 4. female,Mac,use \u2208 P(learner l PCinstructorlschool).\nI\u00b5 satisfies:\n1. I\u00b5( , school) = {school}. 2. I\u00b5(school,pcinstructor) = {PCinstructor}. 3. I\u00b5(school, teach) = {(PCinstructor, learner)}. 4. I\u00b5(PCinstructor lschool, handsome) = {PCinstructor}. 5. I\u00b5(PCinstructor lschool, learner) = {learner}. 6. I\u00b5(learner l PCinstructor l school, female) = {learner}. 7. I\u00b5(learner l PCinstructor l school, Mac) = {Mac}. 8. I\u00b5(learner l PCinstructor l school, use) = {(learner, Mac)}.\nThen it satisfies the well-formed formula (?6).\n5 Predicate Gradual Logic and Aristotle\u2019s Syllogisms\nIn the other work on propositional logic [2], I mentioned that quantification will be required to represent Aristotle\u2019s syllogisms. I show that basically all that play a major part in Aristotle\u2019s discourse in Prior Analytics are represented in predicate gradual logic. In this section, those in the form: \u2200x.Pb(x) \u2283 Pa(x), are universal affirmative expressions, meant to be read: Every b is a (A in Figure 1), those in the form: \u2200x.Pb(x) \u2283 \u00acPa(x) are universal negative expressions, meant to be read: No b is a (E in Figure 1), those in the form: \u2203x.Pb(x) \u2227 Pa(x) are particular affirmative expressions, meant to be read: Some b is a (I in Figure 1), and those in the form: \u2203x.Pb(x)\u2227\u00acPa(x) are particular negative expressions, meant to be read: Some b is not a (O in Figure 1)."}, {"heading": "5.1 Conversion", "text": "There are three conversion rules: one for universal negative, one for universal affirmative, and one for particular affirmative. While Fregean predicate logic seems to work except for the second one, actually it does not: Aristotle\u2019s logic, as I have shown, has three truth values, and classical logic returns T or F when U is required.\n1. Universal\n(A) Negative.\ni. (\u2200x.P1(x) \u2283 \u00acP2(x)) \u2283 (\u2200x.P2(x) \u2283 \u00acP1(x)). ii. Example: if no pleasure is good, then no good will be pleasure.\n(B) Affirmative.\ni. (\u2200x.P1(x) \u2283 P2(x)) \u2283 (\u2203x.P2(x) \u2227 P1(x)). ii. Example: if every pleasure is good, some good must be pleasure.\n2. Particular\n(A) Affirmative.\ni. (\u2203x.P1(x) \u2227 P2(x)) \u2283 (\u2203x.P2(x) \u2227 P1(x)). ii. Example: if some pleasure is good, then some good will be pleasure."}, {"heading": "5.2 Syllogisms: three figures", "text": "There are three figures in Aristotle\u2019s syllogisms as shown below. The first figure displays syllogisms for three terms a, b and c when b is the middle term which is a predicate for c (minor extreme), and which is predicated by a (major extreme). The second figure displays syllogisms for three terms a, b and c when a is the middle term which is a predicate both for b and c and when b (major extreme) is closer in relation than c (minor extreme) to a. The third figure displays syllogisms for three terms\na, b and c when c is the middle term that is predicated both by a and b and when a (major extreme) is further in relation than b (minor extreme) to c. While again, if every sentence is to be evaluated of truth/falsehood, Fregean predicate logic does appear to return a correct truth value, Aristotle\u2019s logic is properly three-valued. Predicate gradual logic returns a matching truth value out of T,F and U to each expression below.\n1. First figure\n(A) Universal affirmative in major and minor: (\u2200x.Pb(x) \u2283 Pa(x)) \u2227 (\u2200x.Pc(x) \u2283 Pb(x)) \u2283 (\u2200x.Pc(x) \u2283 Pa(x)). (B) Universal negative in major and universal negative in minor: (\u2200x.Pb(x) \u2283 \u00acPa(x)) \u2227 (\u2200x.Pc(x) \u2283 Pb(x)) \u2283 (\u2200x.Pc(x) \u2283 \u00acPa(x)). (C) Universal affirmative in major and particular affirmative in minor: (\u2200x.Pb(x) \u2283 Pa(x)) \u2227 (\u2203x.Pc(x) \u2227 Pb(x)) \u2283 (\u2203x.Pc(x) \u2227 Pa(x)). (D) Universal negative in major and particular affirmative in minor: (\u2200x.Pb(x) \u2283 \u00acPa(x)) \u2227 (\u2203x.Pc(x) \u2227 Pb(x)) \u2283 (\u2203x.Pc(x) \u2227 \u00acPa(x)).\n2. Second figure\n(A) Universal negative in major and universal affirmative in minor: (\u2200x.Pb(x) \u2283 \u00acPa(x)) \u2227 (\u2200x.Pc(x) \u2283 Pa(x)) \u2283 (\u2200x.Pc(x) \u2283 \u00acPb(x)). (B) Universal affirmative in major and universal negative in minor: (\u2200x.Pb(x) \u2283 Pa(x)) \u2227 (\u2200x.Pc(x) \u2283 \u00acPa(x)) \u2283 (\u2200x.Pc(x) \u2283 \u00acPa(x)). (C) Universal negative in major and particular affirmative in minor: (\u2200x.Pb(x) \u2283 \u00acPa(x)) \u2227 (\u2203x.Pc(x) \u2227 Pa(x)) \u2283 (\u2203x.Pc(x) \u2227 \u00acPb(x)). (D) Universal affirmative in major and particular negative in minor: (\u2200x.Pb(x) \u2283 Pa(x)) \u2227 (\u2203x.Pc(x) \u2227 \u00acPa(x)) \u2283 (\u2203x.Pc(x) \u2227 \u00acPb(x)).\n3. Third figure\n(A) Universal affirmative in major and minor: (\u2200x.Pc(x) \u2283 Pa(x)) \u2227 (\u2200x.Pc(x) \u2283 Pb(x)) \u2283 (\u2203x.Pb(x) \u2227 Pa(x)). (B) Universal negative in major and universal affirmative in minor: (\u2200x.Pc(x) \u2283 \u00acPa(x)) \u2227 (\u2200x.Pc(x) \u2283 Pb(x)) \u2283 (\u2203x.Pb(x) \u2227 \u00acPa(x)). (C) Particular affirmative in major and universal affirmative in minor: (\u2203x.Pc(x) \u2227 Pa(x)) \u2227 (\u2200x.Pc(x) \u2283 Pb(x)) \u2283 (\u2203x.Pb(x) \u2227 Pa(x)). (D) Universal affirmative in major and particular affirmative in minor: (\u2200x.Pc(x) \u2283 Pa(x)) \u2227 (\u2203x.Pc(x) \u2227 Pb(x)) \u2283 (\u2203x.Pb(x) \u2227 Pa(x)). (E) Particular negative in major and universal affirmative in minor: (\u2203x.Pc(x) \u2227 \u00acPa(x)) \u2227 (\u2200x.Pc(x) \u2283 Pb(x)) \u2283 (\u2203x.Pb(x) \u2227 \u00acPa(x)). (F) Universal negative in major and particular affirmative in minor: (\u2200x.Pc(x) \u2283 \u00acPa(x)) \u2227 (\u2203x.Pc(x) \u2227 Pb(x)) \u2283 (\u2203x.Pb(x) \u2227 \u00acPa(x)).\n6 Conclusion\nI presented a new logic and a new approach, which is for now a novel principle with bright outlooks, expected to offer a new perspective in formal logic. I demonstrated against the modern account of existential import, corroborating former anticipation [9, 22]. I showed that Aristotle\u2019s syllogisms as well as conversion are realisable in predicate gradual logic.\nReferences\n1 Ryuta Arisaka. Gradual Classical Logic for Attributed Objects. ArXiv e-prints:1404.6036, 2014. 2 Ryuta Arisaka. Gradual Classical Logic for Attributed Objects - Extended in Re-Presentation.\nArXiv e-prints:1504.04802, 2015. 3 Dmitrii Anatol\u2019evich Bochvar. On a three-valued logical calculus and its applications to the analysis\nof the paradoxes of the classical extended functional calculus (English translation of the original Russian paper). In History and Philosophy of Logic, volume 2, pages 87\u2013112. Taylor & Francis, 1981(1937). 4 Martin Davies. Meaning, Quantification, Necessity. Routledge & Kegan Paul, 1981. 5 Gareth Evans. Pronouns, Quantifiers, and Relative Clauses (I). Canadian Journal of Philosophy,\n7(3):467\u2013536, 1977. 6 Gilles Fauconnier. Mental Spaces: Aspects of Meaning Construction in Natural Languages. MIT\nPress, 1985. 7 Peter T. Geach. REFERENCE and GENERALITY. Cornell University Press, 1962. 8 Jeroen Groenendijk and Martin Stokhof. Dynamic Predicate Logic. Linguistics and Philosophy,\n14(1):39\u2013100, 1991. 9 H. L. A. Hart. A Logician\u2019s Fairy Tale. The Philosophical Review, 60(2):198\u2013212, 1951.\n10 Irene Heim. The Semantics of Definite and Indefinite Noun Phrases. PhD thesis, University of Massachusetts, 1982. 11 Hans Kamp. A Theory of Truth and Semantics Representation. In Formal Semantics - the Essential Readings, pages 189\u2013222. Blackwell, 1981. 12 Hans Kamp, Josef Van Genabith, and Uwe Reyle. Discourse Representation Theory. In Handbook of Philosophical Logic, volume 15, pages 125\u2013394. Springer, 2nd edition, 2011. 13 Makoto Kanazawa. Weak vs. strong readings of donkey sentences and monotonicity inference in a dynamic setting. Linguistics and Philosophy, 17(2):109\u2013158, 1994. 14 Makoto Kanazawa. Singular donkey pronouns are semantically singular. Linguistics and Philosophy, 24(3):383\u2013403, 2001. 15 Immanuel Kant. Critique of Pure Reason. Penguin Classics; Revised edition, 2008. 16 Stephen C. Kleene. Introduction to META-MATHEMATICS. North-Holland Publishing Co., 1952. 17 Ronald W. Langacker. Foundations of Cognitive Grammar, volume 1. Stanford University Press, 1987. 18 Ronald W. Langacker. Foundations of Cognitive Grammar, volume 2. Stanford University Press, 1991. 19 Reinhard Muskens. Combining Montague Semantics and Discourse Representation. Linguistics and Philosophy, 19(2):143\u2013186, 1996. 20 Stephen Neale. Descriptions. MIT Press, 1990. 21 Terence Parsons. The Traditional Square of Opposition. In The Stanford Encyclopedia of Philosophy. 2015. 22 P. F. Strawson. Introduction to Logical Theory. London: Methuen, 1952. 23 George M. Wilson. Pronouns and Pronominal Descriptions: A New Semantical \u2018Category\u2019. Philo-\nsophical Studies, 45:1\u201330, 1984."}], "references": [], "referenceMentions": [], "year": 2016, "abstractText": "There are several major proposals for treating donkey anaphora such as discourse representation theory and the likes, or E-Type theories and the likes. Every one of them works well for a set of specific examples that they use to demonstrate validity of their approaches. As I show in this paper, however, they are not very generalisable and do not account for essentially the same problem that they remedy when it manifests in other examples. I propose another logical approach. I develop logic that extends a recent, propositional gradual logic, and show that it can treat donkey anaphora generally. I also identify and address a problem around the modern convention on existential import. Furthermore, I show that Aristotle\u2019s syllogisms and conversion are realisable in predicate gradual logic.", "creator": "LaTeX with hyperref package"}}}