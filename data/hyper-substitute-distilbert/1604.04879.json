{"id": "1604.04879", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "17-Apr-2016", "title": "Mahalanobis Distance Metric Learning Algorithm for Instance-based Data Stream Classification", "abstract": "with the massive innovation challenges rampant and much growing shift of technology, stream mining algorithm presently enjoyed considerable attention. to address most large number engineering scenarios in which given idea manifests this becomes tools particularly required in annual research workshops. instance - based data stream algorithms uniquely manage the euclidean distance determining the classification task underlying this theme. means novel way to look into historical issue is to take advantage both a more flexible outcome simply not the increased requirements experienced by specific data stream scenario. in our paper we present a new argument that selects a mahalanobis distance using algebraic curve dissimilarity used in much informal discussion. this publication yielded a mahalanobis efficient metric learning environment for a k - level data stream classification algorithm with concept drift detection. first, some basic theories of generic distance classification learning are essentially taking into account modelling technologies as well of online distance metric learning processes. second, we implement specific evaluation policies concerning comparative metrics such as q \u2010 based research stream classification algorithms. here, our technology is evaluated on different datasets by challenging its assumptions with criteria matching the many instance - made data stream classification : online computer community of the art. the results announce that our proposal is better", "histories": [["v1", "Sun, 17 Apr 2016 15:01:51 GMT  (985kb,D)", "http://arxiv.org/abs/1604.04879v1", null]], "reviews": [], "SUBJECTS": "cs.LG", "authors": ["jorge luis rivero perez", "bernardete ribeiro", "carlos morell perez"], "accepted": false, "id": "1604.04879"}, "pdf": {"name": "1604.04879.pdf", "metadata": {"source": "CRF", "title": "Mahalanobis Distance Metric Learning Algorithm for Instance-based Data Stream Classification", "authors": ["Jorge Luis Rivero Perez", "Bernardete Ribeiro", "Carlos Morell Perez"], "emails": ["jlrivero@dei.uc.pt", "bribeiro@dei.uc.pt", "cmorellp@uclv.edu.cu"], "sections": [{"heading": null, "text": "I. INTRODUCTION\nIn recent years there has been a great development in the information technology and communications, which has changed the data collection and processing methods [1], [2]. This phenomenon, coupled with the fact that the traditional batch learning has limitations to deal with issues of data stream environments, leads to other data processing techniques. One approach is the instance-based data stream classification algorithms. Under this scheme, each new instance is compared with existing ones using a distance function, and the closest existing instances are used to assign the class to the new one. However the performance of these methods depends on the quality of the distance function. It is necessary that the function is able to identify the instances that are semantically similar. Likewise, it should also identify as dissimilar those that are semantically different [3]. The general-purpose function does not take into account any statistical regularities that might be estimated from a large training set of labeled examples. However, the best results are obtained when the metric is designed specifically for the task at hand, issue that has received much interest from researchers in the last decade [3], [4]. Distance metric learning consists in adapting some\npairwise real-valued metric function such as Mahalanobis to the problem of interest using side information as supervision, brought by training examples. Most of methods learn the metric in a supervised manner from similarity, dissimilarity and/or relative distance constraints, being formulated as an optimization problem [3]. Metric learning algorithms have key properties. Each algorithm has properties that define their applicability and suitability for the application at hand. These properties are: Learning paradigm, form of metric, scalability, optimality of the solution and dimensionality reduction. Some studies [5], [6], [7] have shown that good design metric learning can significantly improve the k-NN classification accuracy in batch learning. This, with the scalability property of the online distance metric learning, has motivated us to implement a new instance-based data stream classification algorithm, learning a Mahalanobis distance metric. One solution could be to learn the metric in an online way. This approach leads to complex convex optimization problems so it is unable to address well the computational resources restrictions of data stream environments. For that reason we choose KISS Metric Learning algorithm [8], a simple statistical proposal of distance metric learning. We implement a KISSME-based variant (Keep It Simple and Straightforward MEtric) in an online setting for hybridizing it with a k-NN algorithm, being our Online-KISSME-Stream the main contribution of this paper. Then, to evaluate its performance we use streaming evaluation methodologies and implement some well comparison metrics for online learning, taking into account aspects such as concept drift detection. The rest of the paper is organized as follows. In Section II we briefly review the background and related work on Mahalanobis metric learning. In Section III we describe and present the above Online-KISSME-Stream. In Section IV we report and discuss the results of our experiments on three synthetic and one standard real data sets. Finally in Section V the conclusions and outline of future work are discussed."}, {"heading": "II. RELATED WORK", "text": "The essence of metric learning is that given a distance function d(xi, xj) between the data points xi, xj lying in some feature space X \u2286 IRd, for example, the Euclidean one, together with side information as supervision, it should learn a mapping function such that the original distance function applied to the mapped data is better. The methods under this approach are dubbed global since they learn a mapping\nar X\niv :1\n60 4.\n04 87\n9v 1\n[ cs\n.L G\n] 1\n7 A\npr 2\nfunction which is applied to the whole data. Depending on the transformation, this approach is divided into two subclasses: linear and non-linear. For the linear case, the aim is to learn a linear mapping transformation from side information, which may encode the matrix G, so that the distance learned is ||Gxi \u2212 Gxj ||2. This approach is called Mahalanobis metric learning. The Mahalanobis distance originally refers to a distance measure that incorporates the correlation among the features. However, in the literature this term is used to refer to Mahalanobis generalized quadratic distances defined as: dM (xi, xj) = \u221a (xi \u2212 xj)TM(xi \u2212 xj) and parameterized by the matrix M that belongs to the cone of symmetric positive semi-definite (PSD) d\u00d7 d real-valued matrices; as M is positive semi-definite it can be factorized as GTG. Then, Mahalanobis distance corresponds to a generalized Euclidean distance using the inverse of the variance-covariance matrix [4], [9]. A general regularized model that captures most of the metric learning existing techniques is proposed in [4]. To encode supervision the author assumes a collection of m loss functions, which denotes as c1, ..., cm. The other part of the model is a regularizer r(M) which is a function of M . Joining the supervision encoded as loss functions and the regularizer the following model is obtained as a linear combination of these two components:\n\u03b3(M) = r(M) + \u03bb m\u2211 i=1 ci(X TMX) (1)\nwhere \u03bb is a trade-off between the regularizer and the loss, and the goal is to find the minimum of \u03b3(M) over the domain of M , which is the space of PSD matrices. Then the metric learning model is specified as a constrained optimization problem. Quite a few online metric learning algorithms have been proposed, under an approach that learns a Mahalanobis matrix [10], [11], [12], [13]. In the sequel we describe some of the most well-known."}, {"heading": "A. Online Mahalanobis Metric Learning Algorithms", "text": "POLA (Pseudo-metric Online Learning Algorithm) [10], was the first algorithm focused on online Mahalanobis metric learning that learns a matrix M and a threshold b \u2265 1. POLA in each step t receives a triplet: (xi, xj , yij), where yij = 1 (if (xi, xj) \u2208 S and yij = \u22121) if (xi, xj) \u2208 D. The loss function used by POLA is ci(XTMX) = [1 + yi(dM (xi, xj) \u2212 \u03b3)]+ and it uses a squared Frobenius norm for regularization. POLA performs two successive orthogonal projections [4], [3]. Another algorithm based on POLA is LEGO (Lego Exact Gradient Online) [11] but it is based on LogDet divergence regularization, which gives it a better performance than POLA. Another algorithm based on POLA is RDML which is more flexible because at each step t it performs a gradient descent step assuming Frobenius regularization:\nM t = \u03a0Cd+(M t\u22121 \u2212 \u03bbyij(xi \u2212 xj)(xi \u2212 xj)T ) (2)\nwhere \u03a0Cd+(M t\u22121\u2212\u03bbyij(xi\u2212xj)(xi\u2212xj)T ) is the projection to the PSD cone. The \u03bb parameter implements a trade-off between satisfying the pairwise constraints and keeping close to the matrix of the previous step M t\u22121. Unlike POLA, the authors perform the update solving a convex quadratic program [3]. In MDML (Mirror Descent Metric Learning) [12] the authors proposed a general framework for online Mahalanobis\ndistance learning. It is based on composite mirror descent and is focused on regularization with the nuclear norm [3]. These algorithms for the best of our knowledge have not been hybridized with a data stream classification algorithm such as k-NN, hence the novelty of our proposal lies in the hybridization and evaluation on data stream environments assuming all the restrictions imposed by this context. In the majority of these works the authors focus on finding the best combination of regularizers and loss function according the model described by the eq. 1. The proposals vary depending on their regularizer and loss function. All these ones receive the supervision information step by step taking into account the dimension time."}, {"heading": "III. PROPOSED APPROACH", "text": "In our proposal, we implemented KISS Metric Learning algorithm [8] while in an online setting and hybridized it with a k-NN data stream classification algorithm to compute the distance in each query. We compare its performance with IBLStream [14], which is one of the best instance-based data stream classification algorithms."}, {"heading": "A. KISSME Algorithm", "text": "The KISSME algorithm [8] is a simple proposal from a statistical inference point of view, making some assumptions about the distributions to obtain a Mahalanobis matrix from similar and dissimilar constraints. The authors consider two independent generation processes for observed commonalities of similar and dissimilar pairs.\nThey define the dissimilarity by the plausibility of belonging either to one or the other. Then, from a statistical inference point of view the optimal statistical decision whether a pair (i, j) is dissimilar or not is obtained by a likelihood ratio test. Thus, the authors test the hypothesis H0 that a pair is dissimilar and on the other hand the alternative H1: [8]\n\u03b4(xi, xj) = log ( p(xi, xj |H0) p(xi, xj |H1) ) (3)\nThen, H0 is validated with a high value of \u03b4(xi, xj). In contrast, a low value means that H0 is rejected and the pair is considered as similar. The authors cast the problem in the space of pairwise differences (xij = xi \u2212 xj) with zero mean and re-write eq. 3 to: [8]\n\u03b4(xij) = log ( p(xij |H0) p(xij |H1) ) = log ( f(xij |\u03b80) f(xij |\u03b81) ) (4)\nWhere f(xij |\u03b81) is a probability density function with parameters \u03b81 for hypothesis H1 that a pair (i, j) is similar (yij = 1) and vice-versa H0 for a pair being dissimilar. The authors assume a Gaussian structure of the difference space and relax the problem, obtaining a Mahalanobis distance metric that reflects the properties of the log-likelihood ratio test by re-writing eq. 4 to: [8]\n\u03b4 (xij) = log  1\u221a2\u03c0|\u03a3yij=0| exp ( \u22121/2xTij\u03a3 \u22121 yij=0 xij ) 1\u221a\n2\u03c0|\u03a3yij=1| exp\n( \u22121/2xTij\u03a3 \u22121 yij=1 xij\n)  (5)\nwhere \u2211 yij=0 = \u2211 yij=0 (xi \u2212 xj)(xi \u2212 xj)T (6)\n\u2211 yij=1 = \u2211 yij=1 (xi \u2212 xj)(xi \u2212 xj)T (7)\nare the similar and dissimilar constraints computed by the outer vector product. Then, by re-projection of its differences:\nM\u0302 = (\u2211\u22121 yij=1 \u2212 \u22111 yij=0 ) (8)\nonto the cone of positive semidefinite matrices. Hence, to obtain the Mahalanobis matrix M they clip the spectrum of M\u0302 by eigenanalysis."}, {"heading": "B. Online-KISSME-Stream", "text": "For our online variant1, we initialize the k-NN classification algorithm with an Euclidean distance function to compute the distances among the instances setting a diagonal d \u00d7 d Mahalanobis matrix, where d is the number of attributes. Then we define the maximun number of instances that can be stored in the base. While the instances base does not store the maximun number each new arriving instance is added to it (algorithm 1, line: 3). The class of this instance is compared with the classes of instances stored previously in the base (algorithm 1, line: 5, 8). If the classes are the same then it is a similarity constraint needed to update the similar matrix calculated by the outer vector product (eq. 6) (algorithm 1, lines: 5-7). But if the classes are not the same then it is a dissimilarity constraint and we update the dissimilarity matrix (eq. 7) (algorithm 1, lines: 8-10). When the base stores this number of instances we compute the Mahalanobis matrix by means of the difference between the inverse similarity and dissimilarity matrices (eq. 8) (algorithm 1, lines: 14-15) and we set that the algorithm has learned (algorithm 1, line: 16). In the next step, we substitute the previous matrix by setting the Mahalanobis matrix computed before. After this stage, each arriving instance is classified by the k-NN algorithm with the Mahalanobis matrix learned (algorithm 1, lines: 19- 41). The concept drift detection is performed by means of Drift Detection Method [15]. Different concept drift levels are evaluated (algorithm 1, lines: 24-30). When a warning level is detected the Mahalanobis matrix is updated again (eq. 8) (algorithm 1, lines: 25-27). But when the level of concept drift is out control then all the parameters are reset to its defaults values except the Mahalanobis matrix (algorithm 1, lines: 28- 30). It means to delete all the instances in the base and also set the algorithm in learning mode again. However the matrix used is the Mahalanobis one previously learned. Finally, we edit the instances base deleting the instances that have the same label as the arriving instance. The arriving instance is always added. The pseudo-code of the proposed method is listed in the algorithm 1.\n1Available in: http://eden.dei.uc.pt/\u223cjlrivero/Online-KISSME-Stream.tar.gz\nAlgorithm 1 Online-KISSME-Stream Require: Instance, maxbaseSize\n1: if learned = false then 2: if instanceBase \u227a maxbaseSize then 3: instanceBase.add(Instance) 4: for instance in instanceBase do 5: if instance.class=Instance.class then 6: update similarMatrix 7: similarSize=similarSize+1 8: else 9: update dissimilarMatrix\n10: dissimilarSize=dissimilarSize+1 11: end if 12: end for 13: end if 14: if instanceBase=maxbaseSize then 15: update mahalanobisMatrix 16: learned = true 17: end if 18: else 19: neighbours=search.KNN(Instance) 20: makeDistribution (neighbours,distances) trueClass=Instance.class 21: if makeDistribution.maxIndex=trueClass then 22: prediction=true 23: end if 24: update Concept Drift level 25: if ddmLevel=ddmWarningLevel then 26: update mahalanobisMatrix 27: end if 28: if ddmLevel=ddmOutcontrolLevel then 29: resetLearning 30: end if 31: if prediction=true then 32: for neighbourInstance in neighbour do 33: if Instance.class=neighbourInstance.class then 34: deleteInstance() 35: end if 36: end for 37: end if 38: insertInstance(Instance) 39: while learner.size \u227a maxbaseSize do 40: delete the oldest instance from the instanceBase by deleteInstance() 41: end while 42: end if\nIn the next section we present the experimental results obtained from comparing our proposed approach with IBLStream [14]. Our study takes into account the indicators of temporal relevance, spatial relevance and consistency. Subsequent tasks of editing the database instances to remove or add new instances lead to optimize the composition and size of the case autonomously base. Unlike our proposal, IBLStream instead of learning a distance metric, uses Value Difference Metric (VDM) as distance measure to determine the set of k-NN instances to classify. IBLStream is implemented in MOA (Massive Online Analysis) [16] which is an extensible framework, that apart from allowing to implement algorithms also permits running experiments for online learning."}, {"heading": "IV. EXPERIMENTAL EVALUATIONS", "text": "In the case of streaming classification algorithms, there have been some proposals [17], [18], [19], [20] on evaluation methodologies. In particular, there have been some works on what metrics are appropriate to evaluate the performance of the classifiers. There are basically two data stream evaluation methodologies known as: (i) holdout (ii) prequential. Both of them with forgetting mechanisms. Regarding the latter, sliding windows and fading factors are popular whenever fast and efficient change detection are required. In [18], [17] it is argued that prequential error with forgetting mechanisms should be used to provide reliable error estimators. Therein it is proved that, the use of prequential error with forgetting mechanisms reveals to be advantageous in assessing performance and comparing stream learning algorithms. In the design of our experiments we use the prequential evaluation methodology with fading factors as forgetting mechanism and we compute some metrics such as: predictive error rates using a prequential error estimator and the accuracy. We also implemented and computed the McNemar\u2019s Test to compare paired proportions of both algorithms classification results, and the statistic Q proposed in [17] to comparative assessment between any two algorithms. The latter statistic allows to compare the performance of two algorithms from the sequences of the prequential accumulated loss for each algorithm: SAi and S B i ,\nQi(A,B) = log( SAi SBi ) (9)\nand by using fading factors the Qi statistic takes the form:\nQ\u03b1i (A,B) = log( Li(A) + \u03b1\u00d7 SAi\u22121 Li(B) + \u03b1\u00d7 SBi\u22121 ) (10)\nwhere Li(A) and Li(B) are the computed loss for the current instance and \u03b1\u00d7 SAi\u22121, \u03b1\u00d7 SBi\u22121 are the corresponding fading accumulated losses. The signal of Qi is informative about the relative performance of both models, while its value shows the strength of the differences.\nIn order to assess our approach and the validity of the statements we made, we conducted a set of experiments on three synthetic and one real data sets. For each of the experiments performed on the synthetic data sets we computed and plotted the comparative metrics: prequential accuracy, and Q statistic. Additionally, in the case of the experiment on the real world problem data set, we compared paired proportions of both algorithms classification results with the McNemar\u2019s Test and we also computed and plotted the predictive accuracy and the percent error rate. The first five data sets shown in Table I are synthetic and available in MOA. This framework facilitates the reproducibility of the experiments. In those cases the experiments were performed over a total of 100, 000 instances for each data set. The Fading Factor Classification\nPerformance Evaluator was used with a fading factor (\u03b1) value of 0.999 for data streams without concept drift, while in the concept drifting data streams the fading factor was 0.95. Both algorithms were evaluated with setups corresponding to its default values [14]. The results regarding the metrics above indicated show that the performance of Online-KISSMEStream in the data sets in which concept drift does not occur are better than those yielded by the IBLStream. This is evidenced by the comparative prequential accuracy where Online-KISSME-Stream shows better results than IBLStream, even from the early stages. Likewise, the same holds for the comparative predictive prequential error. In this case, the sign of Q is mainly negative, illustrating the overall advantage of our proposal over IBLStream. In the concept drifting data streams although the performance of Online-KISSME-Stream is not as good compared to IBLStream still the results yielded by our approach can be considered as competitive. The results of the evaluations are depicted graphically from Figure 1 to Figure 4. We also evaluated the algorithms on KDD Cup 99. It is a well-known real world problem data set regarding network intrusion detection. In [21] different preprocessing techniques that have been applied to this problem, prior to evaluate machine learning algorithms, have been reviewed. This data set is commonly used in the research community because it is available, labeled and preprocessed. The original data set contains about 5 million instances, each of which represents a TCP/IP connection made up of 41 numeric and nominal attributes. In many investigations a small portion representing 10% of the original data set is used, containing 494, 021 instances. In our experiments we used 111, 000 instances of the 10% KDD Cup 99 data set."}, {"heading": "A. Evaluation Results on Synthetic Datasets", "text": "On the Random Tree Generator with 100, 000 instances the prequential accuracy (see Figure 1) of Online-KISSMEStream is higher than the IBLStream one. This leads to have a minor prequential error than IBLStream. The Q statistic (see Figure 1) shows a higher area under the curve for the values less than zero meaning that Online-KISSME-Stream had less losses on this data set. In the Waveform data set\u2019s instances evaluated by Online-KISSME-Stream algorithm we observe that the prequential accuracy (see Figure 2) is higher than IBLStream one, specifically for the earlier instances. Likewise, the prequential error is less than the IBLStream one; and the area under the curve for values less than zero in the Q statistic (see Figure 2) is greater, meaning less losses in this data set too. On the Rotating Hyperplane data set the prequential accuracy results (see Figure 3), the prequential error and the Q statistic (see Figure 3) show very competitive results of classification, with a slight advantage for IBLStream classification algorithm."}, {"heading": "B. Evaluation Results on KDD Cup 99 Dataset", "text": "Two experiments were performed on 111, 000 KDD Cup 99 instances. In the first, the prequential accuracy of OnlineKISS-Stream was better than the IBLStream (Figure 4). In the second, we applied the McNemar\u2019s Test. This test is nonparametric on nominal data, which has been widely used for the comparison of batch learning classification algorithms. In [17] the applicability of this test to classification problems in data stream environments is emphasized. This test has acceptable type I error. To implement both quantities ni,j : n0,1 denotes the number of examples misclassified by OnlineKISSME-Stream and that were not by IBLStream; whereas ni,j : n1,0 denotes the number of examples misclassified by IBLStream and that were not by Online-KISSME-Stream. Then, two hypotheses were defined: H0 no differences between classifiers and H1 there are differences between classifiers. The null hypothesis H0 is rejected if with one degree of freedom and confidence level of 0.99, the statistic is greater than 6.635. Along with ca. the first 8000 instances H0 is accepted showing no differences in classification since the value of the McNemar statistic is less than 6.635. This value becomes greater afterwards and H0 is rejected indicating differences between both classifiers (see Figure 4). This test along with the prequential accuracy reinforces that our proposal is better in this real world problem."}, {"heading": "V. CONCLUSIONS", "text": "The distance metric learning has attracted great interest from the research community in recent years. Most approaches define an optimization model combining the constraints of similarity with dissimilarity as loss functions with regularizers.\nThere are five properties that cast these algorithms for certain environments. An important characteristic that led us to think about the development of this work is the scalability which is essential to ensure incremental learning in streaming scenarios. In this paper we proposed Online-KISS-Stream, a new instance-based data stream classification algorithm that learns a Mahalanobis metric based on KISSME algorithm. The online optimization proposed by KISSME computes the similarity and dissimilarity matrices from outer vector product and then computes the eigen decomposition of the difference of the inverse of both matrices, allowing to obtain the Mahalanobis matrix in an online way. Furthermore, by combining with the concept drift detection it updates the Mahalanobis matrix whenever required. To evaluate the performance of OnlineKISS-Stream several experiments were performed on synthetic and real world data sets. We compared successfully the results yielded by our approach with IBLStream. We implemented the established metrics for data stream classification algorithms such as prequential error, prequential accuracy, and Q with fading factors as forgetting mechanism. For statistical significance we used the McNemar\u2019s Test in the KDD Cup 99 data set showing differences between our algorithm and IBLStream. Future work will address distance metric learning with different regularizers."}, {"heading": "ACKNOWLEDGMENT", "text": "Erasmus Mundus Action 2 Programme, Eureka SD Project is gratefully acknowledged for funding."}], "references": [{"title": "A survey on learning from data streams: current and future trends", "author": ["J. Gama"], "venue": "Progress in Artificial Intelligence, vol. 1, no. 1, pp. 45\u201355, 2012.", "citeRegEx": "1", "shortCiteRegEx": null, "year": 2012}, {"title": "Incremental learning of concept drift from streaming imbalanced data", "author": ["G. Ditzler", "R. Polikar"], "venue": "Knowledge and Data Engineering, IEEE Transactions on, vol. 25, no. 10, pp. 2283\u20132301, 2013.", "citeRegEx": "2", "shortCiteRegEx": null, "year": 2013}, {"title": "A survey on metric learning for feature vectors and structured data", "author": ["A. Bellet", "A. Habrard", "M. Sebban"], "venue": "arXiv preprint arXiv:1306.6709, 2013.", "citeRegEx": "3", "shortCiteRegEx": null, "year": 2013}, {"title": "Metric learning: a survey", "author": ["B. Kulis"], "venue": "Found. and Trends in Machine Learning, vol. 5, no. 4, pp. 287\u2013364, 2012.", "citeRegEx": "4", "shortCiteRegEx": null, "year": 2012}, {"title": "Learning an image manifold for retrieval", "author": ["X. He", "W.-Y. Ma", "H.-J. Zhang"], "venue": "Proceedings of the 12th annual ACM international conference on Multimedia. ACM, 2004, pp. 17\u201323.", "citeRegEx": "5", "shortCiteRegEx": null, "year": 2004}, {"title": "Manifoldranking based image retrieval", "author": ["J. He", "M. Li", "H.-J. Zhang", "H. Tong", "C. Zhang"], "venue": "Proceedings of the 12th annual ACM international conference on Multimedia. ACM, 2004, pp. 9\u201316.", "citeRegEx": "6", "shortCiteRegEx": null, "year": 2004}, {"title": "Distance metric learning for large margin nearest neighbor classification", "author": ["K. Weinberger", "J. Blitzer", "L. Saul"], "venue": "Advances in neural information processing systems, vol. 18, p. 1473, 2006.", "citeRegEx": "7", "shortCiteRegEx": null, "year": 2006}, {"title": "Large scale metric learning from equivalence constraints", "author": ["M. Kostinger", "M. Hirzer", "P. Wohlhart", "P.M. Roth", "H. Bischof"], "venue": "Computer Vision and Pattern Recognition (CVPR), 2012 IEEE Conference on. IEEE, 2012, pp. 2288\u20132295.", "citeRegEx": "8", "shortCiteRegEx": null, "year": 2012}, {"title": "Aprendizaje supervisado de funciones de distancia: estado del arte.", "author": ["B. Nguyen Cong", "J.L. Rivero P\u00e9rez", "C. Morell"], "venue": "Revista Cubana de Ciencias Informa\u0301ticas,", "citeRegEx": "9", "shortCiteRegEx": "9", "year": 2015}, {"title": "Online and batch learning of pseudo-metrics", "author": ["S. Shalev-Shwartz", "Y. Singer", "A.Y. Ng"], "venue": "Proceedings of the twenty-first international conference on Machine learning. ACM, 2004, p. 94.", "citeRegEx": "10", "shortCiteRegEx": null, "year": 2004}, {"title": "Online metric learning and fast similarity search.", "author": ["P. Jain", "B. Kulis", "I.S. Dhillon", "K. Grauman"], "venue": "in NIPS, vol", "citeRegEx": "11", "shortCiteRegEx": "11", "year": 2008}, {"title": "Regularized distance metric learning: Theory and algorithm.", "author": ["R. Jin", "S. Wang", "Y. Zhou"], "venue": "in NIPS, vol", "citeRegEx": "13", "shortCiteRegEx": "13", "year": 2009}, {"title": "Iblstreams: a system for instance-based classification and regression on data streams", "author": ["A. Shaker", "E. H\u00fcllermeier"], "venue": "Evolving Systems, vol. 3, no. 4, pp. 235\u2013249, 2012.", "citeRegEx": "14", "shortCiteRegEx": null, "year": 2012}, {"title": "Learning with drift detection", "author": ["J. Gama", "P. Medas", "G. Castillo", "P. Rodrigues"], "venue": "Advances in Artificial Intelligence\u2013SBIA 2004. Springer, 2004, pp. 286\u2013295.", "citeRegEx": "15", "shortCiteRegEx": null, "year": 2004}, {"title": "Moa: Massive online analysis", "author": ["A. Bifet", "G. Holmes", "R. Kirkby", "B. Pfahringer"], "venue": "The Journal of Machine Learning Research, vol. 99, pp. 1601\u20131604, 2010.", "citeRegEx": "16", "shortCiteRegEx": null, "year": 2010}, {"title": "On evaluating stream learning algorithms", "author": ["J. Gama", "R. Sebasti\u00e3o", "P.P. Rodrigues"], "venue": "Machine Learning, vol. 90, no. 3, pp. 317\u2013346, 2013.", "citeRegEx": "17", "shortCiteRegEx": null, "year": 2013}, {"title": "Issues in evaluation of stream learning algorithms", "author": ["J. Gama", "R. Sebastiao", "P.P. Rodrigues"], "venue": "Proceedings of the 15th ACM SIGKDD international conference on Knowledge discovery and data mining. ACM, 2009, pp. 329\u2013338.", "citeRegEx": "18", "shortCiteRegEx": null, "year": 2009}, {"title": "Recovery analysis for adaptive learning from non-stationary data streams", "author": ["A. Shaker", "E. H\u00fcllermeier"], "venue": "Proceedings of the 8th International Conference on Computer Recognition Systems CORES 2013. Springer, 2013, pp. 289\u2013298.", "citeRegEx": "19", "shortCiteRegEx": null, "year": 2013}, {"title": "Pitfalls in benchmarking data stream classification and how to avoid them", "author": ["A. Bifet", "J. Read", "I. \u017dliobait\u0117", "B. Pfahringer", "G. Holmes"], "venue": "Machine Learning and Knowledge Discovery in Databases. Springer, 2013, pp. 465\u2013479.", "citeRegEx": "20", "shortCiteRegEx": null, "year": 2013}, {"title": "T\u00e9cnicas de aprendizaje autom\u00e1tico para la detecci\u00f3n de intrusos en redes de computadoras", "author": ["J.L. Rivero P\u00e9rez"], "venue": "Revista Cubana de Ciencias Inform\u00e1ticas, vol. 8, no. 4, pp. 52\u201373, 2014.", "citeRegEx": "21", "shortCiteRegEx": null, "year": 2014}], "referenceMentions": [{"referenceID": 0, "context": "In recent years there has been a great development in the information technology and communications, which has changed the data collection and processing methods [1], [2].", "startOffset": 162, "endOffset": 165}, {"referenceID": 1, "context": "In recent years there has been a great development in the information technology and communications, which has changed the data collection and processing methods [1], [2].", "startOffset": 167, "endOffset": 170}, {"referenceID": 2, "context": "Likewise, it should also identify as dissimilar those that are semantically different [3].", "startOffset": 86, "endOffset": 89}, {"referenceID": 2, "context": "However, the best results are obtained when the metric is designed specifically for the task at hand, issue that has received much interest from researchers in the last decade [3], [4].", "startOffset": 176, "endOffset": 179}, {"referenceID": 3, "context": "However, the best results are obtained when the metric is designed specifically for the task at hand, issue that has received much interest from researchers in the last decade [3], [4].", "startOffset": 181, "endOffset": 184}, {"referenceID": 2, "context": "Most of methods learn the metric in a supervised manner from similarity, dissimilarity and/or relative distance constraints, being formulated as an optimization problem [3].", "startOffset": 169, "endOffset": 172}, {"referenceID": 4, "context": "Some studies [5], [6], [7] have shown that good design metric learning can significantly improve the k-NN classification accuracy in batch learning.", "startOffset": 13, "endOffset": 16}, {"referenceID": 5, "context": "Some studies [5], [6], [7] have shown that good design metric learning can significantly improve the k-NN classification accuracy in batch learning.", "startOffset": 18, "endOffset": 21}, {"referenceID": 6, "context": "Some studies [5], [6], [7] have shown that good design metric learning can significantly improve the k-NN classification accuracy in batch learning.", "startOffset": 23, "endOffset": 26}, {"referenceID": 7, "context": "For that reason we choose KISS Metric Learning algorithm [8], a simple statistical proposal of distance metric learning.", "startOffset": 57, "endOffset": 60}, {"referenceID": 3, "context": "Then, Mahalanobis distance corresponds to a generalized Euclidean distance using the inverse of the variance-covariance matrix [4], [9].", "startOffset": 127, "endOffset": 130}, {"referenceID": 8, "context": "Then, Mahalanobis distance corresponds to a generalized Euclidean distance using the inverse of the variance-covariance matrix [4], [9].", "startOffset": 132, "endOffset": 135}, {"referenceID": 3, "context": "A general regularized model that captures most of the metric learning existing techniques is proposed in [4].", "startOffset": 105, "endOffset": 108}, {"referenceID": 9, "context": "Quite a few online metric learning algorithms have been proposed, under an approach that learns a Mahalanobis matrix [10], [11], [12], [13].", "startOffset": 117, "endOffset": 121}, {"referenceID": 10, "context": "Quite a few online metric learning algorithms have been proposed, under an approach that learns a Mahalanobis matrix [10], [11], [12], [13].", "startOffset": 123, "endOffset": 127}, {"referenceID": 11, "context": "Quite a few online metric learning algorithms have been proposed, under an approach that learns a Mahalanobis matrix [10], [11], [12], [13].", "startOffset": 135, "endOffset": 139}, {"referenceID": 9, "context": "POLA (Pseudo-metric Online Learning Algorithm) [10], was the first algorithm focused on online Mahalanobis metric learning that learns a matrix M and a threshold b \u2265 1.", "startOffset": 47, "endOffset": 51}, {"referenceID": 3, "context": "POLA performs two successive orthogonal projections [4], [3].", "startOffset": 52, "endOffset": 55}, {"referenceID": 2, "context": "POLA performs two successive orthogonal projections [4], [3].", "startOffset": 57, "endOffset": 60}, {"referenceID": 10, "context": "Another algorithm based on POLA is LEGO (Lego Exact Gradient Online) [11] but it is based on LogDet divergence regularization, which gives it a better performance than POLA.", "startOffset": 69, "endOffset": 73}, {"referenceID": 2, "context": "Unlike POLA, the authors perform the update solving a convex quadratic program [3].", "startOffset": 79, "endOffset": 82}, {"referenceID": 2, "context": "It is based on composite mirror descent and is focused on regularization with the nuclear norm [3].", "startOffset": 95, "endOffset": 98}, {"referenceID": 7, "context": "In our proposal, we implemented KISS Metric Learning algorithm [8] while in an online setting and hybridized it with a k-NN data stream classification algorithm to compute the distance in each query.", "startOffset": 63, "endOffset": 66}, {"referenceID": 12, "context": "We compare its performance with IBLStream [14], which is one of the best instance-based data stream classification algorithms.", "startOffset": 42, "endOffset": 46}, {"referenceID": 7, "context": "The KISSME algorithm [8] is a simple proposal from a statistical inference point of view, making some assumptions about the distributions to obtain a Mahalanobis matrix from similar and dissimilar constraints.", "startOffset": 21, "endOffset": 24}, {"referenceID": 7, "context": "Thus, the authors test the hypothesis H0 that a pair is dissimilar and on the other hand the alternative H1: [8]", "startOffset": 109, "endOffset": 112}, {"referenceID": 7, "context": "3 to: [8]", "startOffset": 6, "endOffset": 9}, {"referenceID": 7, "context": "4 to: [8]", "startOffset": 6, "endOffset": 9}, {"referenceID": 13, "context": "The concept drift detection is performed by means of Drift Detection Method [15].", "startOffset": 76, "endOffset": 80}, {"referenceID": 12, "context": "In the next section we present the experimental results obtained from comparing our proposed approach with IBLStream [14].", "startOffset": 117, "endOffset": 121}, {"referenceID": 14, "context": "IBLStream is implemented in MOA (Massive Online Analysis) [16] which is an extensible framework, that apart from allowing to implement algorithms also permits running experiments for online learning.", "startOffset": 58, "endOffset": 62}, {"referenceID": 15, "context": "In the case of streaming classification algorithms, there have been some proposals [17], [18], [19], [20] on evaluation methodologies.", "startOffset": 83, "endOffset": 87}, {"referenceID": 16, "context": "In the case of streaming classification algorithms, there have been some proposals [17], [18], [19], [20] on evaluation methodologies.", "startOffset": 89, "endOffset": 93}, {"referenceID": 17, "context": "In the case of streaming classification algorithms, there have been some proposals [17], [18], [19], [20] on evaluation methodologies.", "startOffset": 95, "endOffset": 99}, {"referenceID": 18, "context": "In the case of streaming classification algorithms, there have been some proposals [17], [18], [19], [20] on evaluation methodologies.", "startOffset": 101, "endOffset": 105}, {"referenceID": 16, "context": "In [18], [17] it is argued that prequential error with forgetting mechanisms should be used to provide reliable error estimators.", "startOffset": 3, "endOffset": 7}, {"referenceID": 15, "context": "In [18], [17] it is argued that prequential error with forgetting mechanisms should be used to provide reliable error estimators.", "startOffset": 9, "endOffset": 13}, {"referenceID": 15, "context": "We also implemented and computed the McNemar\u2019s Test to compare paired proportions of both algorithms classification results, and the statistic Q proposed in [17] to comparative assessment between any two algorithms.", "startOffset": 157, "endOffset": 161}, {"referenceID": 12, "context": "Both algorithms were evaluated with setups corresponding to its default values [14].", "startOffset": 79, "endOffset": 83}, {"referenceID": 19, "context": "In [21] different preprocessing techniques that have been applied to this problem, prior to evaluate machine learning algorithms, have been reviewed.", "startOffset": 3, "endOffset": 7}, {"referenceID": 15, "context": "In [17] the applicability of this test to classification problems in data stream environments is emphasized.", "startOffset": 3, "endOffset": 7}], "year": 2016, "abstractText": "With the massive data challenges nowadays and the rapid growing of technology, stream mining has recently received considerable attention. To address the large number of scenarios in which this phenomenon manifests itself suitable tools are required in various research fields. Instance-based data stream algorithms generally employ the Euclidean distance for the classification task underlying this problem. A novel way to look into this issue is to take advantage of a more flexible metric due to the increased requirements imposed by the data stream scenario. In this paper we present a new algorithm that learns a Mahalanobis metric using similarity and dissimilarity constraints in an online manner. This approach hybridizes a Mahalanobis distance metric learning algorithm and a k-NN data stream classification algorithm with concept drift detection. First, some basic aspects of Mahalanobis distance metric learning are described taking into account key properties as well as online distance metric learning algorithms. Second, we implement specific evaluation methodologies and comparative metrics such as Q statistic for data stream classification algorithms. Finally, our algorithm is evaluated on different datasets by comparing its results with one of the best instance-based data stream classification algorithm of the state of the art. The results demonstrate that our proposal is better in some scenarios and has shown to be competitive in others.", "creator": "TeX"}}}