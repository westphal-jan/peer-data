{"id": "1608.02076", "review": {"conference": "EMNLP", "VERSION": "v1", "DATE_OF_SUBMISSION": "6-Aug-2016", "title": "Bi-directional Attention with Agreement for Dependency Parsing", "abstract": "we perform entirely balanced bi - face attention model targeting relational parsing, which learns questions agree without headword allocation from strictly active and backward parsing formats. the parsing procedure with each direction is formulated as sequentially querying the memory component whilst stores incorrect job conclusions. both proposed capability can use matching soft constraints descriptions, exposing the navigator to implicitly describe word - order machine behaviour without dramatically increasing the computational complexity. we conduct experiments study english, chinese, and 12 other languages running the conll - shared task, concluded that single new model achieves be - of - the - art constraint query predictions satisfying 7 vectors.", "histories": [["v1", "Sat, 6 Aug 2016 07:16:31 GMT  (92kb,D)", "https://arxiv.org/abs/1608.02076v1", "EMNLP 2016"], ["v2", "Thu, 22 Sep 2016 08:52:31 GMT  (92kb,D)", "http://arxiv.org/abs/1608.02076v2", "EMNLP 2016"]], "COMMENTS": "EMNLP 2016", "reviews": [], "SUBJECTS": "cs.CL cs.AI cs.LG", "authors": ["hao cheng", "hao fang", "xiaodong he", "jianfeng gao", "li deng"], "accepted": true, "id": "1608.02076"}, "pdf": {"name": "1608.02076.pdf", "metadata": {"source": "CRF", "title": "Bi-directional Attention with Agreement for Dependency Parsing", "authors": ["Hao Cheng", "Hao Fang", "Xiaodong He", "Jianfeng Gao", "Li Deng"], "emails": ["chenghao@uw.edu", "hfang@uw.edu", "xiaohe@microsoft.com", "jfgao@microsoft.com", "deng@microsoft.com"], "sections": [{"heading": null, "text": "We develop a novel bi-directional attention model for dependency parsing, which learns to agree on headword predictions from the forward and backward parsing directions. The parsing procedure for each direction is formulated as sequentially querying the memory component that stores continuous headword embeddings. The proposed parser makes use of soft headword embeddings, allowing the model to implicitly capture high-order parsing history without dramatically increasing the computational complexity. We conduct experiments on English, Chinese, and 12 other languages from the CoNLL 2006 shared task, showing that the proposed model achieves state-of-the-art unlabeled attachment scores on 6 languages.1"}, {"heading": "1 Introduction", "text": "Recently, several neural network models have been developed for efficiently accessing long-term memory and discovering dependencies in sequential data. The memory network framework has been studied in the context of question answering and language modeling (Weston et al., 2015; Sukhbaatar et al., 2015), whereas the neural attention model under the encoder-decoder framework has been applied to machine translation (Bahdanau et al., 2015) and constituency parsing (Vinyals et al., 2015b). Both frameworks learn the latent alignment between the source and target sequences, and the mechanism of\n1Our software and models are available at https:// github.com/hao-cheng/biattdp.\nattention over the encoder can be viewed as a soft operation on the memory. Although already used in the encoder for capturing global context information (Bahdanau et al., 2015), the bi-directional recurrent neural network (RNN) has yet to be employed in the decoder. Bi-directional decoding is expected to be advantageous over the previously developed uni-directional counterpart, because the former exploits richer contextual information. Intuitively, we can use two separate uni-directional RNNs where each one constructs its respective attended encoder context vectors for computing RNN hidden states. However, the drawback of this approach is that the decoder would often produce different alignments resulting in discrepancies for the forward and backward directions. In this paper, we design a training objective function to enforce attention agreement between both directions, inspired by the alignmentby-agreement idea from Liang et al. (2006). Specifically, we develop a dependency parser (BiAtt-DP) using a bi-directional attention model based on the memory network. Given that the golden alignment is observed for dependency parsing in the training stage, we further derive a simple and interpretable approximation for the agreement objective, which makes a natural connection between the latent and observed alignment cases.\nThe proposed BiAtt-DP parses a sentence in a linear order via sequentially querying the memory component that stores continuous embeddings for all headwords. In other words, we consider all possible arcs during the parsing. This formulation is adopted by graph-based parsers such as the MSTParser (McDonald et al., 2005). The consideration\nar X\niv :1\n60 8.\n02 07\n6v 2\n[ cs\n.C L\n] 2\n2 Se\np 20\nof all possible arcs makes the proposed BiAtt-DP different from many recently developed neural dependency parsers (Chen and Manning, 2014; Weiss et al., 2015; Alberti et al., 2015; Dyer et al., 2015; Ballesteros et al., 2015), which use a transitionbased algorithm by modeling the parsing procedure as a sequence of actions on buffers. Moreover, unlike most graph-based parsers which may suffer from high computational complexity when utilizing high-order parsing history (McDonald and Pereira, 2006), the proposed BiAtt-DP can implicitly inject such information into the model while keeping the computational complexity in the order of O(n2) for a sentence with n words. This is achieved by feeding the RNN in the query component with a soft headword embedding, which is computed as the probability-weighted sum of all headword embeddings in the memory component.\nTo the best of our knowledge, this is the first attempt to apply memory network models to graphbased dependency parsing. Moreover, it is the first extension of neural attention models from unidirection to multi-direction by enforcing agreement on alignments. Experiments on English, Chinese, and 12 languages from the CoNLL 2006 shared task show the BiAtt-DP can achieve competitive parsing accuracy with several state-of-the-art parsers. Furthermore, our model achieves the highest unlabeled attachment score (UAS) on Chinese, Czech, Dutch, German, Spanish and Turkish."}, {"heading": "2 A MemNet-based Dependency Parser", "text": "The proposed parser first encodes each word in a sentence by continuous embeddings using a bidirectional RNN, and then performs two types of operations, i.e. 1) headword predictions based on bidirectional parsing history and 2) the relation prediction conditioned on the current modifier and its predicted headword both in the embedding space. In the following, we first present how the token embeddings are constructed. Then, the key components of the proposed parser, i.e. the memory component and the query component, are discussed in detail. Lastly, we describe the parsing algorithm using a bidirectional attention model with agreement."}, {"heading": "2.1 Token Embeddings", "text": "In the proposed BiAtt-DP, the memory and query components share the same token embeddings. We use the notion of additive token embedding as in (Botha and Blunsom, 2014) to utilize the available information about the token, e.g., its word form, lemma, part-of-speech (POS) tag, and morphological features. Specifically, the token embedding is computed as\nEformeformi + E poseposi + E lemmaelemmai + \u00b7 \u00b7 \u00b7 ,\nwhere ei\u2019s are one-hot encoding vectors for the ith word, and E\u2019s are parameters to be learned that store the continuous embeddings for corresponding feature. Note those one-hot encoding vectors have different dimensions, depending on individual vocabulary sizes, and all E\u2019s have the same first dimension but different second dimension. The additive token embeddings allow us to easily integrate a variety of information. Moreover, we only need to make a single decision on the dimensionality of the token embedding, rather than a combination of decisions on word embeddings and POS tag embeddings as in concatenated token embeddings used by Chen and Manning (2014), Dyer et al. (2015) and Weiss et al. (2015). It reduces the number of model parameters to be tuned, especially when lots of different features are used. In our experiments, the word form and fine-grained POS tag are always used, whereas other features are used depending on their availability in the dataset. All singleton words, lemmas, and POS tags are replaced by special tokens.\nThe additive token embeddings are transformed into another space before they are used by the memory and query components, i.e.\nxi = LReL [ P ( Eformeformi + \u00b7 \u00b7 \u00b7 )] ,\nwhere P is the projection matrix and is shared by the memory and query components as well. The activation function of this projection layer is the leaky rectified linear (LReL) function (Mass et al., 2013) with 0.1 as the slope of the negative part. In the remaining part of the paper, we refer to xi \u2208 Rp as the token embedding for word at position i. Note the subscript i is substituted by j and t for the memory and query components, respectively."}, {"heading": "2.2 Components", "text": "As shown in Figure 1, the proposed BiAtt-DP has three components, i.e. a memory component, a leftto-right query component, and a right-to-left query component. Given a sentence of length n, the parser first uses a bi-directional RNN to construct n + 1 headword embeddings, m0,m1, . . . ,mn \u2208 Re, with m0 reserved for the ROOT symbol. Each query component is an uni-directional attention model. In a query component, a sequence of n modifier embeddings q1, . . . ,qn \u2208 Rd are constructed recursively by conditioning on all headword embeddings. To address the vanishing gradient issue in RNNs, we use the gated recurrent unit (GRU) proposed by Cho et al. (2014), where an update gate and a reset gate are employed to control the information flow. We replace the hyperbolic tangent function in GRU with the LReL function, which is faster to compute and achieves better parsing accuracy in our preliminary studies. In the following, we refer to headword and modifier embeddings as memory and query vectors, respectively.\nMemory Component: The proposed BiAtt-DP uses a bi-directional RNN to obtain the memory vectors. At time step j, the current hidden state vector hlj \u2208 Re/2 (or hrj \u2208 Re/2) is computed as a non-linear transformation based on the current input vector xj and the previous hidden state vector hlj\u22121 (or h r j+1), i.e. h l j = GRU(h l j\u22121,xj) (or hrj = GRU(h r j+1,xj)). Ideally, the recursive nature of the RNN allows it to capture all context information from one-side, and a bi-directional RNN can thus capture context information from both sides. We concatenate the hidden layers of the left-to-right RNN and the right-to-left RNN for the word at position j as the memory vector mj = [ hlj ;h r j ] . These memory vectors are expected to encode the words and their context information in the headword space.\nQuery Component: For each query component, we use a single-directional RNN with GRU to obtain the query vectors qj\u2019s, which are the hidden state vectors of the RNN. Each qt is used to query the memory component, returning association scores st,j\u2019s between the word at position t and the head-\nword at position j for j \u2208 {0, \u00b7 \u00b7 \u00b7 , n}, i.e.\nst,j = v T\u03c6 (Cmj + Dqt) , (1)\nwhere \u03c6(\u00b7) is the element-wise hyperbolic tangent function, and C \u2208 Rh\u00d7e, D \u2208 Rh\u00d7d and v \u2208 Rh are model parameters. Then, we can obtain probabilities (aka attention weights), at,0, \u00b7 \u00b7 \u00b7 , at,n, over all headwords in the sentence by normalizing st,j\u2019s, using a softmax function\nat = softmax(st). (2)\nThe soft headword embedding is then defined as m\u0303t = \u2211n j=1 at,jmj . At each time step t, the\nRNN takes the soft headword embedding m\u0303lt\u22121 or m\u0303rt+1 as the input, in addition to the token embedding xt. Formally, for the forward case, the qt can be computed as qt = GRU (qt\u22121, [m\u0303t;xt]). Although the RNN is able to capture long-span context information to some extent, the local context may very easily dominate the hidden state. Therefore, this additional soft headword embedding allows the model to access long-span context information in a different channel. On the other hand, by recursively feeding both the query vector and the soft headword embedding into the RNN, the model implicitly captures high-order parsing history information, which can potentially improve the parsing accuracy (Yamada and Matsumoto, 2003; McDonald and Pereira, 2006). However, for a graph-based dependency parser, utilizing parsing history features is computationally expensive. For example, an k-th order MSTParser (McDonald and Pereira, 2006) has O(nk+1) complexity for a sentence of n words. In contrast, the BiAtt-DP implicitly captures high-order parsing history while keeping the complexity in the order of O(n2), i.e. for each direction. we compute n(n+1) pair-wise probabilities at,j for t = 1, \u00b7 \u00b7 \u00b7 , n and j = 0, \u00b7 \u00b7 \u00b7 , n.\nIn this paper, we choose to use soft headword embeddings rather than making hard decisions on headwords. In the latter case, beam search may potentially improve the parsing accuracy at the cost of higher computational complexity, i.e. O(Bn2) with a beam width of B. When using soft headword embeddings, there is no need to perform beam search. Moreover, it is straightforward to incorporate parsing history from both directions by using two query components at the cost of O(2n2), which cannot be easily achieved when using beam search. The parsing decision can be made directly based on attention weights from the two query components or further rescored by the maximum spanning tree (MST) search algorithm."}, {"heading": "2.3 Parsing by Attention with Agreement", "text": "For the bi-directional attention model, the underlying probability distributions alt and a r t may not agree with each other. In order to encourage the agreement, we use the mathematically convenient metric, i.e. the squared Hellinger distance H2 ( alt||art ) , for quantifying the distance between these two distri-\nbutions. For dependency parsing, when the golden alignment is known during training, we can derive an upper bound on the latent agreement objective as\nH2(alt,a r t ) \u2264 2 \u221a D(gt||alt) +D(gt||art ),\nwhere D(\u00b7||\u00b7) is the KL-divergence. The complete derivation is provided in the Appendix A. During optimization, we can safely drop the constant scaler and the square root operation in the upper bound, leading to the following loss function\nD(gt||alt) +D(gt||art ) = 2D(gt||alt art ), (3)\nwhere indicates element-wise multiplication. The resulting loss function is equivalent to the crossentropy loss, which is widely adopted for training neural networks.\nAs we can see, the loss function (3) tries to minimize the distance between the golden alignment and the intersection of the two directional attention alignments at every time step. Therefore, during inference, the headword prediction for the word at time step t can be obtained as\nargmax j\nlog alt,j + log a r t,j ,\nseeking for agreement between both query components. This parsing procedure is also similar to the exhaustive left-to-right modifier-first search algorithm described in (Covington, 2001), but it is enhanced by an additional right-to-left search with the agreement enforcement. Alternatively, we can treat (log alt,j + log a r t,j) as a score of the corresponding arc and then search for the MST to form a dependency parse tree, as proposed in (McDonald et al., 2005). The MST search is achieved via the ChuLiu-Edmonds algorithm (Chu and Liu, 1965; Edmonds, 1967), which can be implemented in O(n2) for dense graphs according to Tarjan (1977). In practice, the MST search slows down the parsing speed by 6\u201310%. However, it forces the parser to produce a valid tree, and we observe a slight improvement on parsing accuracy in most cases.\nAfter obtaining each modifier and its soft header embeddings, we use a single-layer perceptron to predict the head-modifier relation, i.e.\nyt = softmax ( U [ m\u0303lt; m\u0303 r t ] + W [ qlt; q r t ]) , (4)\nwhere yt,1, \u00b7 \u00b7 \u00b7 , yt,m are the probabilities of m possible relations, and U \u2208 Rm\u00d72e and W \u2208 Rm\u00d72d are model parameters."}, {"heading": "3 Model Learning", "text": "For the t-th word (modifier) wt in a sentence of length n, let H lt and H r t denote random variables representing the predicted headword from forward (left-to-right) and backward (right-to-left) parsing directions, respectively. Also let Rt denote the random variable representing the dependency relation for wt. The joint probability of headword and relation predictions can be written as\nP (R1:n, H l 1:n, H r 1:n|w1:n)\n= n\u220f\nt=1\nP (Rt|w1:n)P (H lt |w1:n)P (Hrt |w1:n)\n= n\u220f\nt=1\nylt,Rt \u00b7 a l t,Hlt \u00b7 art,Hrt (5)\nwhere at each time step we assume head-modifier relations and headwords from both directions are independent with each other when conditioned on the global knowledge of the whole sentence. Note that the long-span context and high-order parsing history information are injected when we model P (H lt |w1:n), P (Hrt |w1:n) and P (Rt|w1:n), as discussed in Section 2.2.\nAs discussed in Section 2.3, the model can be trained by encouraging attention agreement between two query components. From (5), we observe that it is equivalent to maximizing the log-likelihood of the golden dependency tree (or minimizing the crossentropy) for each training sentence, i.e.\nn\u2211 t=1 ( log yt,relationt + log a l t,headt + log a r t,headt ) ,\nwhere at,j and yt,r are defined in (2) and (4), respectively, and relationt and headt are golden relation and headword labels, respectively. The gradients are computed via the back-propagation algorithm (Rumelhart et al., 1986). Errors of yt come from the arc labels, whereas there are two source of errors for at, one from the headword labels and the other back-propagated from errors of yt. We use stochastic gradient descent with the Adam algorithm proposed in (Kingma and Ba, 2015). The\nlearning rate is halved at each iteration once the loglikelihood of the dev set decreases. The whole training procedure terminates when the log-likelihood decreases for the second time. All learning parameters except bias terms are initialized randomly according to the Gaussian distribution N (0, 10\u22122). In our experiments, we tune the initial learning rate with a step size of 0.0002, and choose the best one based on the log-likelihood on the dev set at the first epoch. Empirically, the selected initial learning rates fall in the range of [0.0004, 0.0010] for hidden layer size [128, 320], and tend to be larger when using a smaller hidden layer size, i.e. [0.0016, 0.0034] for hidden layer size around 80. The training data are randomly shuffled at every epoch."}, {"heading": "4 Experiments", "text": "In this section, we present the parsing accuracy of the proposed BiAtt-DP on 14 languages. We report both UAS and labeled attachment score (LAS), obtained by the CoNLL-X eval.pl script2 which ignores punctuation symbols. The headword predictions are made through the MST search, which slightly improves both UAS and LAS (less than 0.3% absolutely). Overall, the proposed BiAtt-DP achieves competitive parsing accuracy on all languages as state-of-the-art parsers, and obtains better UAS in 6 languages. We also show the impact of using POS tags and pre-trained word embeddings. Moreover, different variants of the full model are compared in this section."}, {"heading": "4.1 Data", "text": "We work on the English Treebank-3 (PTB) dataset (Marcus et al., 1999), the Chinese Treebank-5.1 (CTB) dataset (Palmer et al., 2005), and 12 other languages from the CoNLL 2006 shared task (Buchholz and Marsi, 2006). For PTB and CTB datasets, we use exactly the same setup as in (Chen and Manning, 2014; Dyer et al., 2015). Specifically, we convert the English and Chinese data using the Stanford parser v3.3.0 (de Marneffe et al., 2006) and the Penn2Malt tool (Zhang and Clark, 2008), respectively.\nFor English, POS tags are obtained using the Stanford POS tagger v3.3.0 (Toutanova et al., 2003),\n2http://ilk.uvt.nl/conll/software.html\nwhereas for Chinese, we use gold segmentation and POS tags. When constructing the token embeddings for English and Chinese, both the word form and the POS tag are used. We also initialize Eform by pretrained word embeddings3.\nFor the 12 other languages, we randomly hold out 5% of the training data as the dev set. In addition to the word form and find-grained POS tags, we use extra features such as lemmas, coarse-grained POS tags, and morphemes when they are available in the dataset. No pre-trained word embeddings are used for these 12 languages."}, {"heading": "4.2 Model Configurations", "text": "The hidden layer size is kept the same across all RNNs in the proposed BiAtt-DP. We also require the dimension of the token embeddings to be the same as the hidden layer size. Note that we concatenate the hidden layers of two RNNs for constructing mj , and thus we have e = 2d. The weight matrices C and D respectively project vectors mj and qt to the same dimension h, which is equivalent to d. For English and Chinese, since the dimension of pretrained word embeddings are 300, we use 300 \u00d7 h as the dimension of embedding parameters E\u2019s. For the 12 other languages, we use square matrices for the embedding parameters E\u2019s. For all languages, We tune the hidden layer size and choose one according to UAS on the dev set. The selected hidden layer sizes for these languages are: 368 (English), 114 (Chinese), 128 (Arabic), 160 (Bulgarian), 224 (Czech), 176 (Danish), 220 (Dutch), 200 (German), 128 (Japanese), 168 (Portuguese), 128 (Slovene), 144 (Spanish), 176 (Swedish), and 128 (Turkish)."}, {"heading": "4.3 Results", "text": "We first compare our parser with state-of-the-art neural transition-based dependency parsers on PTB and CTB. For English, we also compare with stateof-the-art graph-based dependency parsers. The results are shown in Table 1 and Table 2, respectively. It can be seen that the BiAtt-DP outperforms all other graph-based parsers on PTB. Compared with\n3For English, we use the dependency-based word embeddings at https://goo.gl/tWke3I (Levy and Goldberg, 2014). For Chinese, we pre-train 192-dimension skip-gram embeddings (Mikolov et al., 2013) on Chinese Gigawords (Graff et al., 2005).\nthe transition-based parsers, it achieves better accuracy than Chen and Manning (2014), which uses a feed-forward neural network, and Dyer et al. (2015), which uses three stack LSTM networks. Compared with the integrated parsing and tagging models, the BiAtt-DP outperforms Bohnet and Nivre (2012) but has a small gap to Alberti et al. (2015). On CTB, it achieves best UAS and similar LAS. This may be caused by that the relation vocabulary size is relatively smaller than the average sentence length, which biases the joint objective to be more sensitive to UAS. The parsing speed is around 50\u201360 sents/sec measured on a desktop with Intel Core i7 CPU @ 3.33GHz using single thread.\nNext, in Table 3 we show the parsing accuracy of the proposed BiAtt-DP on 12 languages in the CoNLL 2006 shared task, including comparison with state-of-the-art parsers. Specifically, we show UAS of the 3rd-order RBGParser as reported in (Lei et al., 2014) since it also uses low-dimensional continuous embeddings. However, there are several major differences between the RBGParser and the BiAtt-DP. First, in (Lei et al., 2014), the lowdimensional continuous embeddings are derived\nfrom low-rank tensors. Second, the RBGParser uses combined scoring of arcs by including traditional features from the MSTParser (McDonald and Pereira, 2006) / TurboParser (Martins et al., 2013). Third, the RBGParser employs a third-order parsing algorithm based on (Zhang et al., 2014), although it also implements a first-order parsing algorithm, which achieves lower UAS in general. In Table 3, we show that the proposed BiAtt-DP outperforms the RBGParser in most languages except Japanese, Slovene, and Swedish.\nIt can be observed from Table 3 that the BiAttDP has highly competitive parsing accuracy as stateof-the-art parsers. Moreover, it achieves best UAS for 5 out of 12 languages. For the remaining seven languages, the UAS gaps between the BiAtt-DP and state-of-the-art parsers are within 1.0%, except Swedish. An arguably fair comparison for the BiAttDP is the MSTParser (McDonald and Pereira, 2006), since the BiAtt-DP replaces the scoring function for arcs but uses exactly the same search algorithm. Due to the space limit, we refer readers to (Lei et al., 2014) for results of the MSTParsers (also shown in Appendix B). The BiAtt-DP consistently outperforms both parser by up to 5% absolute UAS score.\nFinally, following (Pitler and McDonald, 2015), we also analyze the performance of the BiAtt-DP on both crossed and uncrossed arcs. Since the BiAtt-\nDP uses a graph-based non-projective parsing algorithm, it is interesting to evaluate the performance on crossed arcs, which result in the non-projectivity of the dependency tree. The last three columns of Table 3 show the recall of crossed arcs, that of uncrossed arcs, and the percentage of crossed arcs in the test set. Pitler and McDonald (2015) reported numbers on the same data for Dutch, German, Portuguese, and Slovene as in this paper. For these four languages, the BiAtt-DP achieves better UAS than that reported in (Pitler and McDonald, 2015). More importantly, we observe that the improvement on recall of crossed arcs (around 10\u201318% absolutely) is much more significant than that of uncrossed arcs (around 1\u20133% absolutely), which indicates the effectiveness of the BiAtt-DP in parsing languages with non-projective trees."}, {"heading": "4.4 Ablative Study", "text": "Here we try to study the impact of using pre-trained word embeddings, POS tags, as well as the bidirectional query components on our model. First of all, we start from our best model (Model 1 in Table 4) on English, which uses 300 as the token embedding dimension and 368 as the hidden layer size. We keep those model parameter dimensions unchanged and analyze different factors by comparing the parsing accuracy on PTB dev set.\nThe results are summarized in Table 4. Comparing Models 1\u20133, it can be observed that without using pre-trained word embeddings, both UAS and LAS drop by 0.6%, and without using POS tags in token embeddings, the numbers further drop by 1.6% in UAS and around 2.6% in LAS. In terms of query components, using single query component (Models 4\u20135) degrades UAS by 0.7\u20130.9% and LAS by around 1.0%, compared with Model 2. For Model 6, the soft headword embedding is only used for arc label predictions but not fed into the next hidden state, which is around 0.3% worse than Model 2. This supports the hypothesis about the usefulness of the parsing history information. We also implement a variant of Model 6 which produces one at instead two by using both qlt and q r t in (1). It gets 92.44% UAS and 89.26% LAS, indicating that naively applying a bi-directional RNN may not be enough."}, {"heading": "5 Related Work", "text": "Neural Dependency Parsing: Recently developed neural dependency parsers are mostly transition-based models, which read words sequentially from a buffer into a stack and incrementally build a parse tree by predicting a sequence of transitions (Yamada and Matsumoto, 2003; Nivre, 2003; Nivre, 2004). A feed-forward neural network is used in (Chen and Manning, 2014), where they represent the current state with 18 selected elements such as the top words on the stack and buffer. Each element is encoded by concatenated embeddings of words, POS tags, and arc labels. Their dependency parser achieves improvement\non both accuracy and parsing speed. Weiss et al. (2015) improve the parser using semi-supervised structured learning and unlabeled data. The model is extended to integrate parsing and tagging in (Alberti et al., 2015). On the other hand, Dyer et al. (2015) develop the stack LSTM architecture, which uses three LSTMs to respectively model the sequences of buffer states, stack states, and actions. Unlike the transition-based formulation, the proposed BiAtt-DP directly predicts the headword and the dependency relation at each time step. Specifically, there is no explicit representation of actions or headwords in our model. The model learns to retrieve the most relevant information from the input memory to make decisions on headwords and head-modifier relations.\nGraph-based Dependency Parsing: In addition to the transition-based parsers, another line of research in dependency parsing uses graph-based models. Graph-based parser usually build a dependency tree from a directed graph and learns to scoring the possible arcs. Due to this nature, nonprojective parsing can be done straightforwardly by most graph-based dependency parsers. The MSTParser (McDonald et al., 2005) and the TurboParser (Martins et al., 2010) are two examples of graphbased parsers. The MSTParser formulates the parsing as searching for the MST, whereas the TurboParser performs approximate variational inference over a factor graph. The RBGParser proposed in (Lei et al., 2014) can also be viewed as a graph-based parser, which scores arcs using low-dimensional continuous features derived from low-rank tensors as well as features used by MSTParser/TurboParser. It also employs a sampler-based algorithm for parsing (Zhang et al., 2014).\nNeural Attention Model: The proposed BiAttDP is closely related to the memory network (Sukhbaatar et al., 2015) for question answering, as well as the neural attention models for machine translation (Bahdanau et al., 2015) and constituency parsing (Vinyals et al., 2015b). The way we query the memory component and obtain the soft headword embeddings is essentially the attention mechanism. However, different from the above studies where the alignment information is latent, in dependency parsing, the arc between the modifier and\nheadword is known during training. Thus, we can utilize these labels for attention weights. The similar idea is employed by the pointer network in (Vinyals et al., 2015a), which is used to solve three different combinatorial optimization problems."}, {"heading": "6 Conclusion", "text": "In this paper, we develop a bi-directional attention model by encouraging agreement between the latent attention alignments. Through a simple and interpretable approximation, we make the connection between latent and observed alignments for training the model. We apply the bi-directional attention model incorporating the agreement objective during training to the proposed memory-network-based dependency parser. The resulting parser is able to implicitly capture the high-order parsing history without suffering from issue of high computational complexity for graph-based dependency parsing.\nWe have carried out empirical studies over 14 languages. The parsing accuracy of the proposed model is highly competitive with state-of-the-art dependency parsers. For English, the proposed BiAttDP outperforms all graph-based parsers. It also achieves state-of-the-art performance in 6 languages in terms of UAS, demonstrating the effectiveness of the proposed mechanism of bi-directional attention with agreement and its use in dependency parsing.\nA Upper Bound on H2(p,q)\nHere, we use the following definition of squared Hellinger distance for countable space\nH2(p,q) = 1\n2 \u2211 i ( \u221a pi \u2212 \u221a qi) 2\nwhere p,q \u2208 \u2206k are two k-simplexes. Introducing g \u2208 \u2206k, the squared Hellinger distance can be upper bounded as\nH2(p,q) \u2264 \u221a 2H(p,q) (6)\n\u2264 \u221a 2 [H(p,g) +H(q,g)] (7) \u2264 2 \u221a H2(p,g) +H2(q,g) (8)\nwhere (6), (7) and (8) follow the inequalities between the `1-norm and the `2-norm, the triangle\ninequality defined for a metric, and the CauchySchwarz\u2019s inequality, respectively. Using the relationship between the KL-divergence and the squared Hellinger distance, (8) can be further bounded by\n2 \u221a D(g||p) +D(g||q)."}, {"heading": "B UAS Scores of MSTParsers", "text": ""}], "references": [{"title": "Improved transition-based parsing and tagging with neural networks", "author": ["Chris Alberti", "David Weiss", "Slav Petrov", "Slav Petrov."], "venue": "Proc. Conf. Empirical Methods Natural Language Process. (EMNLP), pages 1354\u20131359.", "citeRegEx": "Alberti et al\\.,? 2015", "shortCiteRegEx": "Alberti et al\\.", "year": 2015}, {"title": "Globally normalized transition-based neural networks", "author": ["Daniel Andor", "Chris Alberti", "David Weiss", "Aliaksei Severyn", "Alessandro Presta", "Kuzman Ganchev", "Slav Petrov", "Michael Collins."], "venue": "Proc. Annu. Meeting Assoc. for Computational Linguistics (ACL).", "citeRegEx": "Andor et al\\.,? 2016", "shortCiteRegEx": "Andor et al\\.", "year": 2016}, {"title": "Neural machine translation by jointly learning to align and translate", "author": ["Dzmitry Bahdanau", "Kyunghyun Cho", "Yoshua Bengio."], "venue": "Proc. Int. Conf. Learning Representations (ICLR).", "citeRegEx": "Bahdanau et al\\.,? 2015", "shortCiteRegEx": "Bahdanau et al\\.", "year": 2015}, {"title": "Improved transition-based parsing by modeling characters instead of words with lstms", "author": ["Miguel Ballesteros", "Chris Dyer", "Noah A. Smith."], "venue": "Proc. Conf. Empirical Methods Natural Language Process. (EMNLP), pages 349\u2013359.", "citeRegEx": "Ballesteros et al\\.,? 2015", "shortCiteRegEx": "Ballesteros et al\\.", "year": 2015}, {"title": "A transitionbased system for joint part-of-speech tagging and labeled non-projective dependency parsing", "author": ["Bernd Bohnet", "Joakim Nivre."], "venue": "Proc. Conf. Empirical Methods Natural Language Process. (EMNLP), pages 1455\u20131465.", "citeRegEx": "Bohnet and Nivre.,? 2012", "shortCiteRegEx": "Bohnet and Nivre.", "year": 2012}, {"title": "Very high accurarcy and fast dependency parsing is not a contradiction", "author": ["Bernd Bohnet."], "venue": "Proc. Int. Conf. Computational Linguistics (COLING), pages 89\u201397.", "citeRegEx": "Bohnet.,? 2010", "shortCiteRegEx": "Bohnet.", "year": 2010}, {"title": "Compositional morphology for word representations and language modelling", "author": ["Jan A. Botha", "Phil Blunsom."], "venue": "Proc. Int. Conf. Machine Learning (ICML).", "citeRegEx": "Botha and Blunsom.,? 2014", "shortCiteRegEx": "Botha and Blunsom.", "year": 2014}, {"title": "CoNLL-X shared task on multilingual dependency parsing", "author": ["Sabine Buchholz", "Erwin Marsi."], "venue": "Proc. Conf. Computational Natural Language Learning (CoNLL), pages 149\u2013164.", "citeRegEx": "Buchholz and Marsi.,? 2006", "shortCiteRegEx": "Buchholz and Marsi.", "year": 2006}, {"title": "A fast and accurate dependency parser using neural networks", "author": ["Danqi Chen", "Christopher D Manning."], "venue": "Proc. Conf. Empirical Methods Natural Language Process. (EMNLP), pages 740\u2013750.", "citeRegEx": "Chen and Manning.,? 2014", "shortCiteRegEx": "Chen and Manning.", "year": 2014}, {"title": "Learning phrase representations using RNN encoder-decoder for statistical machine translation", "author": ["Kyunghyun Cho", "Bart van Merri\u00ebnboer", "Caglar Gulcehre", "Dzmitry Bahadanau", "Fethhi Bougares", "Holger Schwenk", "Yoshua Bengio."], "venue": "Proc. Conf. Empirical", "citeRegEx": "Cho et al\\.,? 2014", "shortCiteRegEx": "Cho et al\\.", "year": 2014}, {"title": "On the shortest arborescene of a directed graph", "author": ["Yoeng-Jin Chu", "Tseng-Hong Liu."], "venue": "Science Sinica, 14:1396\u20131400.", "citeRegEx": "Chu and Liu.,? 1965", "shortCiteRegEx": "Chu and Liu.", "year": 1965}, {"title": "A fundamental algorithm for dependency parsing", "author": ["Michael A. Covington."], "venue": "Proc. Annu. ACM Southeast Conf., pages 95\u2013102.", "citeRegEx": "Covington.,? 2001", "shortCiteRegEx": "Covington.", "year": 2001}, {"title": "Generating typed dependency parses from phrase structure parses", "author": ["Marie-Catherine de Marneffe", "Bill MacCartney", "Christopher D. Manning."], "venue": "Proc. Int. Conf. Language Resources and Evaluation (LREC).", "citeRegEx": "Marneffe et al\\.,? 2006", "shortCiteRegEx": "Marneffe et al\\.", "year": 2006}, {"title": "Transitionbased dependency parsing with stack long short-term memory", "author": ["Chris Dyer", "Miguel Ballesteros", "Wang Ling", "Austin Matthews", "Noah A. Smith."], "venue": "Proc. Annu. Meeting Assoc. for Computational Linguistics (ACL), pages 334\u2013343.", "citeRegEx": "Dyer et al\\.,? 2015", "shortCiteRegEx": "Dyer et al\\.", "year": 2015}, {"title": "Optimum branchings", "author": ["Jack Edmonds."], "venue": "Journal of Research of the National Bureau of Standards, 718(4):233\u2013240.", "citeRegEx": "Edmonds.,? 1967", "shortCiteRegEx": "Edmonds.", "year": 1967}, {"title": "Chinese Gigaword Second Edition LDC2005T14", "author": ["David Graff", "Ke Chen", "Junbo Kong", "Kazuaki Maeda."], "venue": "Web Download.", "citeRegEx": "Graff et al\\.,? 2005", "shortCiteRegEx": "Graff et al\\.", "year": 2005}, {"title": "Adam: A method for stochastic optimization", "author": ["Diederik Kingma", "Jimmy Ba."], "venue": "Proc. Int. Conf. Learning Representations (ICLR).", "citeRegEx": "Kingma and Ba.,? 2015", "shortCiteRegEx": "Kingma and Ba.", "year": 2015}, {"title": "Dual decomposition for parsing with non-projective head automata", "author": ["Terry Koo", "Alexander M. Rush", "Michael Collins", "Tommi Jaakkola", "David Sontag."], "venue": "Proc. Conf. Empirical Methods Natural Language Process. (EMNLP), pages 1288\u20131298.", "citeRegEx": "Koo et al\\.,? 2010", "shortCiteRegEx": "Koo et al\\.", "year": 2010}, {"title": "Low-rank tensors for scoring dependency structures", "author": ["Tao Lei", "Yu Xin", "Yuan Zhang", "Regina Barzilay", "Tommi Jaakkola."], "venue": "Proc. Annu. Meeting Assoc. for Computational Linguistics (ACL), pages 1381\u20131391.", "citeRegEx": "Lei et al\\.,? 2014", "shortCiteRegEx": "Lei et al\\.", "year": 2014}, {"title": "Dependencybased word embeddings", "author": ["Omer Levy", "Yoav Goldberg."], "venue": "Proc. Annu. Meeting Assoc. for Computational Linguistics (ACL), pages 302\u2013 308.", "citeRegEx": "Levy and Goldberg.,? 2014", "shortCiteRegEx": "Levy and Goldberg.", "year": 2014}, {"title": "Alignment by agreement", "author": ["Percy Liang", "Ben Tasker", "Dan Klein."], "venue": "Proc. Human Language Technology Conf. and Conf. North American Chapter Assoc. for Computational Linguistics (HLT-NAACL), pages 104\u2013111.", "citeRegEx": "Liang et al\\.,? 2006", "shortCiteRegEx": "Liang et al\\.", "year": 2006}, {"title": "Treebank-3 LDC99T42", "author": ["Mitchell Marcus", "Beatrice Santorini", "Mary Ann Marcinkiewicz", "Ann Taylor."], "venue": "Web Download.", "citeRegEx": "Marcus et al\\.,? 1999", "shortCiteRegEx": "Marcus et al\\.", "year": 1999}, {"title": "Turbo parsers: Dependency parsing by approximate variational inference", "author": ["Andr\u00e8 F.T. Martins", "Noah A. Smith", "Eric P. Xing."], "venue": "Proc. Conf. Empirical Methods Natural Language Process. (EMNLP), pages 34\u201344.", "citeRegEx": "Martins et al\\.,? 2010", "shortCiteRegEx": "Martins et al\\.", "year": 2010}, {"title": "Turing on the turbo: Fast third-order non-projective turbo parsers", "author": ["Andr\u00e8 F.T. Martins", "Miguel B. Almeida", "Noah A. Smith."], "venue": "Proc. Annu. Meeting Assoc. for Computational Linguistics (ACL), pages 617\u2013622.", "citeRegEx": "Martins et al\\.,? 2013", "shortCiteRegEx": "Martins et al\\.", "year": 2013}, {"title": "Rectifier nonlinearities improve neural network acoustic models", "author": ["Andrew L. Mass", "Awni Y. Hannun", "Andrew Y. Ng."], "venue": "Proc. Int. Conf. Machine Learning (ICML).", "citeRegEx": "Mass et al\\.,? 2013", "shortCiteRegEx": "Mass et al\\.", "year": 2013}, {"title": "Online learning of approximate dependency parsing algorithms", "author": ["Ryan McDonald", "Fernando Pereira."], "venue": "Proc. European Chapter Assoc. for Computational Linguistics (EACL), pages 81\u201388.", "citeRegEx": "McDonald and Pereira.,? 2006", "shortCiteRegEx": "McDonald and Pereira.", "year": 2006}, {"title": "Non-projective dependency parsing using spanning tree algorithms", "author": ["Ryan McDonald", "Fernando Pererira", "Kiril Ribarov", "Jan Haji\u010d."], "venue": "Proc. Human Language Technology Conf. and Conf. Empirical Methods Natural Language Process. (HLT/EMNLP), pages", "citeRegEx": "McDonald et al\\.,? 2005", "shortCiteRegEx": "McDonald et al\\.", "year": 2005}, {"title": "Efficient estimation of word representations in vector space", "author": ["Tomas Mikolov", "Kai Chen", "Greg Corrado", "Jeffrey Dean."], "venue": "Proc. Workshop at Int. Conf. Learning Representations.", "citeRegEx": "Mikolov et al\\.,? 2013", "shortCiteRegEx": "Mikolov et al\\.", "year": 2013}, {"title": "An efficient algorithm for projective dependency parsing", "author": ["Joakim Nivre."], "venue": "Proc. Int. Conf. Parsing Technologies (IWPT), pages 149\u2013160.", "citeRegEx": "Nivre.,? 2003", "shortCiteRegEx": "Nivre.", "year": 2003}, {"title": "Incrementality in deterministic dependency parsing: Bringing engineering and cognition together", "author": ["Joakim Nivre."], "venue": "Proc. Workshop at ACL.", "citeRegEx": "Nivre.,? 2004", "shortCiteRegEx": "Nivre.", "year": 2004}, {"title": "Chinese Treebank 5.0 LDC2005T01", "author": ["Martha Palmer", "Fu-Dong Chiou", "Nianwen Xue", "Tsan-Kuang Lee"], "venue": "Web Download", "citeRegEx": "Palmer et al\\.,? \\Q2005\\E", "shortCiteRegEx": "Palmer et al\\.", "year": 2005}, {"title": "A linear-time translation system for crossing interval trees", "author": ["Emily Pitler", "Ryan McDonald."], "venue": "Proc. Conf. North American Chapter Assoc. for Computational Linguistics (NAACL), pages 662\u2013671.", "citeRegEx": "Pitler and McDonald.,? 2015", "shortCiteRegEx": "Pitler and McDonald.", "year": 2015}, {"title": "Learning representations by backpropogating errors", "author": ["David E. Rumelhart", "Geoffrey E. Hinton", "Ronald J. Williams."], "venue": "Nature, 323(6088):533\u2013536, October.", "citeRegEx": "Rumelhart et al\\.,? 1986", "shortCiteRegEx": "Rumelhart et al\\.", "year": 1986}, {"title": "Vine pruning for efficient multi-pass dependency parsing", "author": ["Alexander M. Rush", "Slav Petrov."], "venue": "Proc. Conf. North American Chapter Assoc. for Computational Linguistics: Human Language Technologies (NAACL-HLT), pages 498\u2013507.", "citeRegEx": "Rush and Petrov.,? 2012", "shortCiteRegEx": "Rush and Petrov.", "year": 2012}, {"title": "End-to-end memory networks", "author": ["Sainbayar Sukhbaatar", "Arthur Szlam", "Jason Weston", "Rob Fergus."], "venue": "Proc. Annu. Conf. Neural Inform. Process. Syst. (NIPS), pages 2431\u20132439.", "citeRegEx": "Sukhbaatar et al\\.,? 2015", "shortCiteRegEx": "Sukhbaatar et al\\.", "year": 2015}, {"title": "Finding optimum branchings", "author": ["Robert E. Tarjan."], "venue": "Networks, 7(1):25\u201335.", "citeRegEx": "Tarjan.,? 1977", "shortCiteRegEx": "Tarjan.", "year": 1977}, {"title": "Feature-rich part-of-speech tagging with a cyclic dependency network", "author": ["Kristina Toutanova", "Dan Klein", "Christopher D. Manning", "Yoram Singer."], "venue": "Proc. Human Language Technology Conf. and Conf. North American Chapter Assoc. for Computational Linguis-", "citeRegEx": "Toutanova et al\\.,? 2003", "shortCiteRegEx": "Toutanova et al\\.", "year": 2003}, {"title": "Pointer networks", "author": ["Oriol Vinyals", "Meire Fortunato", "Navdeep Jaitly."], "venue": "Proc. Annu. Conf. Neural Inform. Process. Syst. (NIPS), pages 2692\u20132700.", "citeRegEx": "Vinyals et al\\.,? 2015a", "shortCiteRegEx": "Vinyals et al\\.", "year": 2015}, {"title": "Grammar as a foreign language", "author": ["Oriol Vinyals", "Lukasz Kaiser", "Terry Koo", "Slav Petrov", "Ilya Sutskever", "Geoffrey Hinton."], "venue": "Proc. Annu. Conf. Neural Inform. Process. Syst. (NIPS), pages 2755\u20132763.", "citeRegEx": "Vinyals et al\\.,? 2015b", "shortCiteRegEx": "Vinyals et al\\.", "year": 2015}, {"title": "Structured training for neural network transition-based parsing", "author": ["David Weiss", "Chris Alberti", "Michael Collins", "Slav Petrov."], "venue": "Proc. Annu. Meeting Assoc. for Computational Linguistics (ACL), pages 323\u2013 333.", "citeRegEx": "Weiss et al\\.,? 2015", "shortCiteRegEx": "Weiss et al\\.", "year": 2015}, {"title": "Memory networks", "author": ["Jason Weston", "Sumit Chopra", "Antoine Bordes."], "venue": "Proc. Int. Conf. Learning Representations (ICLR).", "citeRegEx": "Weston et al\\.,? 2015", "shortCiteRegEx": "Weston et al\\.", "year": 2015}, {"title": "Statistical dependency analysis with support vector machine", "author": ["Hiroyasu Yamada", "Yuji Matsumoto."], "venue": "Proc. Int. Conf. Parsing Technologies (IWPT), pages 195\u2013206.", "citeRegEx": "Yamada and Matsumoto.,? 2003", "shortCiteRegEx": "Yamada and Matsumoto.", "year": 2003}, {"title": "A tale of two parsers: investigating and combining graph-based and transition-based depdency parsing using beam-search", "author": ["Yue Zhang", "Stephen Clark"], "venue": null, "citeRegEx": "Zhang and Clark.,? \\Q2008\\E", "shortCiteRegEx": "Zhang and Clark.", "year": 2008}, {"title": "Generalized higher-order dependency parsing with cube pruning", "author": ["Hao Zhang", "Ryan McDonald."], "venue": "Proc. Conf. Empirical Methods Natural Language Process. and Computational Natural Language Learning (EMNLP-CoNLL), pages 320\u2013331.", "citeRegEx": "Zhang and McDonald.,? 2012", "shortCiteRegEx": "Zhang and McDonald.", "year": 2012}, {"title": "Enforcing structural diversity in cube-pruned dependency parsing", "author": ["Hao Zhang", "Ryan McDonald."], "venue": "Proc. Annu. Meeting Assoc. for Computational Linguistics (ACL), pages 656\u2013661.", "citeRegEx": "Zhang and McDonald.,? 2014", "shortCiteRegEx": "Zhang and McDonald.", "year": 2014}, {"title": "Online learning for inexact hypergraph search", "author": ["Hao Zhang", "Liang Huang", "Kai Zhao", "Ryan McDonald."], "venue": "Proc. Conf. Empirical Methods Natural Language Process. (EMNLP), pages 908\u2013913.", "citeRegEx": "Zhang et al\\.,? 2013", "shortCiteRegEx": "Zhang et al\\.", "year": 2013}, {"title": "Steps to excellence: Simple inference with the refined scoring of dependency trees", "author": ["Yuan Zhang", "Tao Lei", "Regina Barzilay", "Tommi Jaakkola", "Amir Golberson."], "venue": "Proc. Annu. Meeting Assoc. for Computational Linguistics (ACL), pages 197\u2013207.", "citeRegEx": "Zhang et al\\.,? 2014", "shortCiteRegEx": "Zhang et al\\.", "year": 2014}], "referenceMentions": [{"referenceID": 40, "context": "The memory network framework has been studied in the context of question answering and language modeling (Weston et al., 2015; Sukhbaatar et al., 2015), whereas the neural attention model under the encoder-decoder framework has been applied to machine translation (Bahdanau et al.", "startOffset": 105, "endOffset": 151}, {"referenceID": 34, "context": "The memory network framework has been studied in the context of question answering and language modeling (Weston et al., 2015; Sukhbaatar et al., 2015), whereas the neural attention model under the encoder-decoder framework has been applied to machine translation (Bahdanau et al.", "startOffset": 105, "endOffset": 151}, {"referenceID": 2, "context": ", 2015), whereas the neural attention model under the encoder-decoder framework has been applied to machine translation (Bahdanau et al., 2015) and constituency parsing (Vinyals et al.", "startOffset": 120, "endOffset": 143}, {"referenceID": 38, "context": ", 2015) and constituency parsing (Vinyals et al., 2015b).", "startOffset": 33, "endOffset": 56}, {"referenceID": 2, "context": "Although already used in the encoder for capturing global context information (Bahdanau et al., 2015), the bi-directional recurrent neural network (RNN) has yet to be employed in the decoder.", "startOffset": 78, "endOffset": 101}, {"referenceID": 2, "context": "Although already used in the encoder for capturing global context information (Bahdanau et al., 2015), the bi-directional recurrent neural network (RNN) has yet to be employed in the decoder. Bi-directional decoding is expected to be advantageous over the previously developed uni-directional counterpart, because the former exploits richer contextual information. Intuitively, we can use two separate uni-directional RNNs where each one constructs its respective attended encoder context vectors for computing RNN hidden states. However, the drawback of this approach is that the decoder would often produce different alignments resulting in discrepancies for the forward and backward directions. In this paper, we design a training objective function to enforce attention agreement between both directions, inspired by the alignmentby-agreement idea from Liang et al. (2006). Specifically, we develop a dependency parser (BiAtt-DP) using a bi-directional attention model based on the memory network.", "startOffset": 79, "endOffset": 877}, {"referenceID": 26, "context": "This formulation is adopted by graph-based parsers such as the MSTParser (McDonald et al., 2005).", "startOffset": 73, "endOffset": 96}, {"referenceID": 8, "context": "of all possible arcs makes the proposed BiAtt-DP different from many recently developed neural dependency parsers (Chen and Manning, 2014; Weiss et al., 2015; Alberti et al., 2015; Dyer et al., 2015; Ballesteros et al., 2015), which use a transitionbased algorithm by modeling the parsing procedure as a sequence of actions on buffers.", "startOffset": 114, "endOffset": 225}, {"referenceID": 39, "context": "of all possible arcs makes the proposed BiAtt-DP different from many recently developed neural dependency parsers (Chen and Manning, 2014; Weiss et al., 2015; Alberti et al., 2015; Dyer et al., 2015; Ballesteros et al., 2015), which use a transitionbased algorithm by modeling the parsing procedure as a sequence of actions on buffers.", "startOffset": 114, "endOffset": 225}, {"referenceID": 0, "context": "of all possible arcs makes the proposed BiAtt-DP different from many recently developed neural dependency parsers (Chen and Manning, 2014; Weiss et al., 2015; Alberti et al., 2015; Dyer et al., 2015; Ballesteros et al., 2015), which use a transitionbased algorithm by modeling the parsing procedure as a sequence of actions on buffers.", "startOffset": 114, "endOffset": 225}, {"referenceID": 13, "context": "of all possible arcs makes the proposed BiAtt-DP different from many recently developed neural dependency parsers (Chen and Manning, 2014; Weiss et al., 2015; Alberti et al., 2015; Dyer et al., 2015; Ballesteros et al., 2015), which use a transitionbased algorithm by modeling the parsing procedure as a sequence of actions on buffers.", "startOffset": 114, "endOffset": 225}, {"referenceID": 3, "context": "of all possible arcs makes the proposed BiAtt-DP different from many recently developed neural dependency parsers (Chen and Manning, 2014; Weiss et al., 2015; Alberti et al., 2015; Dyer et al., 2015; Ballesteros et al., 2015), which use a transitionbased algorithm by modeling the parsing procedure as a sequence of actions on buffers.", "startOffset": 114, "endOffset": 225}, {"referenceID": 25, "context": "Moreover, unlike most graph-based parsers which may suffer from high computational complexity when utilizing high-order parsing history (McDonald and Pereira, 2006), the proposed BiAtt-DP can implicitly inject such information into the model while keeping the computational complexity in the order of O(n2) for a sentence with n words.", "startOffset": 136, "endOffset": 164}, {"referenceID": 6, "context": "We use the notion of additive token embedding as in (Botha and Blunsom, 2014) to utilize the available information about the token, e.", "startOffset": 52, "endOffset": 77}, {"referenceID": 8, "context": "Moreover, we only need to make a single decision on the dimensionality of the token embedding, rather than a combination of decisions on word embeddings and POS tag embeddings as in concatenated token embeddings used by Chen and Manning (2014), Dyer et al.", "startOffset": 220, "endOffset": 244}, {"referenceID": 8, "context": "Moreover, we only need to make a single decision on the dimensionality of the token embedding, rather than a combination of decisions on word embeddings and POS tag embeddings as in concatenated token embeddings used by Chen and Manning (2014), Dyer et al. (2015) and Weiss et al.", "startOffset": 220, "endOffset": 264}, {"referenceID": 8, "context": "Moreover, we only need to make a single decision on the dimensionality of the token embedding, rather than a combination of decisions on word embeddings and POS tag embeddings as in concatenated token embeddings used by Chen and Manning (2014), Dyer et al. (2015) and Weiss et al. (2015). It reduces the number of model parameters to be tuned, especially when lots of different features are used.", "startOffset": 220, "endOffset": 288}, {"referenceID": 24, "context": "The activation function of this projection layer is the leaky rectified linear (LReL) function (Mass et al., 2013) with 0.", "startOffset": 95, "endOffset": 114}, {"referenceID": 9, "context": "To address the vanishing gradient issue in RNNs, we use the gated recurrent unit (GRU) proposed by Cho et al. (2014), where an update gate and a reset gate are employed to control the information flow.", "startOffset": 99, "endOffset": 117}, {"referenceID": 41, "context": "On the other hand, by recursively feeding both the query vector and the soft headword embedding into the RNN, the model implicitly captures high-order parsing history information, which can potentially improve the parsing accuracy (Yamada and Matsumoto, 2003; McDonald and Pereira, 2006).", "startOffset": 231, "endOffset": 287}, {"referenceID": 25, "context": "On the other hand, by recursively feeding both the query vector and the soft headword embedding into the RNN, the model implicitly captures high-order parsing history information, which can potentially improve the parsing accuracy (Yamada and Matsumoto, 2003; McDonald and Pereira, 2006).", "startOffset": 231, "endOffset": 287}, {"referenceID": 25, "context": "For example, an k-th order MSTParser (McDonald and Pereira, 2006) has O(nk+1) complexity for a sentence of n words.", "startOffset": 37, "endOffset": 65}, {"referenceID": 11, "context": "This parsing procedure is also similar to the exhaustive left-to-right modifier-first search algorithm described in (Covington, 2001), but it is enhanced by an additional right-to-left search with the agreement enforcement.", "startOffset": 116, "endOffset": 133}, {"referenceID": 26, "context": "(log at,j + log a r t,j) as a score of the corresponding arc and then search for the MST to form a dependency parse tree, as proposed in (McDonald et al., 2005).", "startOffset": 137, "endOffset": 160}, {"referenceID": 10, "context": "The MST search is achieved via the ChuLiu-Edmonds algorithm (Chu and Liu, 1965; Edmonds, 1967), which can be implemented in O(n2) for dense graphs according to Tarjan (1977).", "startOffset": 60, "endOffset": 94}, {"referenceID": 14, "context": "The MST search is achieved via the ChuLiu-Edmonds algorithm (Chu and Liu, 1965; Edmonds, 1967), which can be implemented in O(n2) for dense graphs according to Tarjan (1977).", "startOffset": 60, "endOffset": 94}, {"referenceID": 10, "context": "The MST search is achieved via the ChuLiu-Edmonds algorithm (Chu and Liu, 1965; Edmonds, 1967), which can be implemented in O(n2) for dense graphs according to Tarjan (1977). In practice, the MST search slows down the parsing speed by 6\u201310%.", "startOffset": 61, "endOffset": 174}, {"referenceID": 32, "context": "The gradients are computed via the back-propagation algorithm (Rumelhart et al., 1986).", "startOffset": 62, "endOffset": 86}, {"referenceID": 16, "context": "We use stochastic gradient descent with the Adam algorithm proposed in (Kingma and Ba, 2015).", "startOffset": 71, "endOffset": 92}, {"referenceID": 21, "context": "We work on the English Treebank-3 (PTB) dataset (Marcus et al., 1999), the Chinese Treebank-5.", "startOffset": 48, "endOffset": 69}, {"referenceID": 30, "context": "1 (CTB) dataset (Palmer et al., 2005), and 12 other languages from the CoNLL 2006 shared task (Buchholz and Marsi, 2006).", "startOffset": 16, "endOffset": 37}, {"referenceID": 7, "context": ", 2005), and 12 other languages from the CoNLL 2006 shared task (Buchholz and Marsi, 2006).", "startOffset": 64, "endOffset": 90}, {"referenceID": 8, "context": "For PTB and CTB datasets, we use exactly the same setup as in (Chen and Manning, 2014; Dyer et al., 2015).", "startOffset": 62, "endOffset": 105}, {"referenceID": 13, "context": "For PTB and CTB datasets, we use exactly the same setup as in (Chen and Manning, 2014; Dyer et al., 2015).", "startOffset": 62, "endOffset": 105}, {"referenceID": 42, "context": ", 2006) and the Penn2Malt tool (Zhang and Clark, 2008), respectively.", "startOffset": 31, "endOffset": 54}, {"referenceID": 36, "context": "0 (Toutanova et al., 2003),", "startOffset": 2, "endOffset": 26}, {"referenceID": 19, "context": "gl/tWke3I (Levy and Goldberg, 2014).", "startOffset": 10, "endOffset": 35}, {"referenceID": 27, "context": "For Chinese, we pre-train 192-dimension skip-gram embeddings (Mikolov et al., 2013) on Chinese Gigawords (Graff et al.", "startOffset": 61, "endOffset": 83}, {"referenceID": 15, "context": ", 2013) on Chinese Gigawords (Graff et al., 2005).", "startOffset": 29, "endOffset": 49}, {"referenceID": 11, "context": "6 Dyer et al. (2015) 93.", "startOffset": 2, "endOffset": 21}, {"referenceID": 11, "context": "6 Dyer et al. (2015) 93.2 90.9 B&N (2012)\u2020 93.", "startOffset": 2, "endOffset": 42}, {"referenceID": 0, "context": "22 Alberti et al. (2015)\u2020 94.", "startOffset": 3, "endOffset": 25}, {"referenceID": 0, "context": "22 Alberti et al. (2015)\u2020 94.23 92.41 Weiss et al. (2015)\u2020 94.", "startOffset": 3, "endOffset": 58}, {"referenceID": 0, "context": "22 Alberti et al. (2015)\u2020 94.23 92.41 Weiss et al. (2015)\u2020 94.26 92.41 Andor et al. (2016)\u2217 94.", "startOffset": 3, "endOffset": 91}, {"referenceID": 5, "context": "Graph Bohnet (2010)\u2020 92.", "startOffset": 6, "endOffset": 20}, {"referenceID": 5, "context": "Graph Bohnet (2010)\u2020 92.88 90.71 Martins et al. (2013)\u2020 92.", "startOffset": 6, "endOffset": 55}, {"referenceID": 5, "context": "Graph Bohnet (2010)\u2020 92.88 90.71 Martins et al. (2013)\u2020 92.89 90.55 Z&M (2014)\u2020 93.", "startOffset": 6, "endOffset": 79}, {"referenceID": 13, "context": "the same POS tagger as C&M (2014) and Dyer et al. (2015),", "startOffset": 38, "endOffset": 57}, {"referenceID": 0, "context": "\u2020 and \u2217 are provided in (Alberti et al., 2015) and (Andor et al.", "startOffset": 24, "endOffset": 46}, {"referenceID": 13, "context": "4 Dyer et al. (2015) 87.", "startOffset": 2, "endOffset": 21}, {"referenceID": 5, "context": "the transition-based parsers, it achieves better accuracy than Chen and Manning (2014), which uses a feed-forward neural network, and Dyer et al.", "startOffset": 63, "endOffset": 87}, {"referenceID": 5, "context": "the transition-based parsers, it achieves better accuracy than Chen and Manning (2014), which uses a feed-forward neural network, and Dyer et al. (2015), which uses three stack LSTM networks.", "startOffset": 63, "endOffset": 153}, {"referenceID": 3, "context": "Compared with the integrated parsing and tagging models, the BiAtt-DP outperforms Bohnet and Nivre (2012) but has a small gap to Alberti et al.", "startOffset": 82, "endOffset": 106}, {"referenceID": 0, "context": "Compared with the integrated parsing and tagging models, the BiAtt-DP outperforms Bohnet and Nivre (2012) but has a small gap to Alberti et al. (2015). On CTB, it achieves best UAS and similar LAS.", "startOffset": 129, "endOffset": 151}, {"referenceID": 18, "context": "Specifically, we show UAS of the 3rd-order RBGParser as reported in (Lei et al., 2014) since it also uses low-dimensional continuous embeddings.", "startOffset": 68, "endOffset": 86}, {"referenceID": 18, "context": "First, in (Lei et al., 2014), the lowdimensional continuous embeddings are derived", "startOffset": 10, "endOffset": 28}, {"referenceID": 7, "context": "Table 3: UAS on 12 languages in the CoNLL 2006 shared task (Buchholz and Marsi, 2006).", "startOffset": 59, "endOffset": 85}, {"referenceID": 18, "context": "The results of the 3rd-order RBGParser are reported in (Lei et al., 2014).", "startOffset": 55, "endOffset": 73}, {"referenceID": 31, "context": "same dataset in terms of UAS among (Pitler and McDonald, 2015), (Zhang and McDonald, 2014), (Zhang et al.", "startOffset": 35, "endOffset": 62}, {"referenceID": 44, "context": "same dataset in terms of UAS among (Pitler and McDonald, 2015), (Zhang and McDonald, 2014), (Zhang et al.", "startOffset": 64, "endOffset": 90}, {"referenceID": 45, "context": "same dataset in terms of UAS among (Pitler and McDonald, 2015), (Zhang and McDonald, 2014), (Zhang et al., 2013), (Zhang", "startOffset": 92, "endOffset": 112}, {"referenceID": 33, "context": "and McDonald, 2012), (Rush and Petrov, 2012), (Martins et al.", "startOffset": 21, "endOffset": 44}, {"referenceID": 23, "context": "and McDonald, 2012), (Rush and Petrov, 2012), (Martins et al., 2013), (Martins et al.", "startOffset": 46, "endOffset": 68}, {"referenceID": 22, "context": ", 2013), (Martins et al., 2010), and (Koo et al.", "startOffset": 9, "endOffset": 31}, {"referenceID": 17, "context": ", 2010), and (Koo et al., 2010).", "startOffset": 13, "endOffset": 31}, {"referenceID": 31, "context": "effectiveness of the parser in dealing with non-projectivity, we follow (Pitler and McDonald, 2015), to compute the recall of crossed", "startOffset": 72, "endOffset": 99}, {"referenceID": 25, "context": "Second, the RBGParser uses combined scoring of arcs by including traditional features from the MSTParser (McDonald and Pereira, 2006) / TurboParser (Martins et al.", "startOffset": 105, "endOffset": 133}, {"referenceID": 23, "context": "Second, the RBGParser uses combined scoring of arcs by including traditional features from the MSTParser (McDonald and Pereira, 2006) / TurboParser (Martins et al., 2013).", "startOffset": 148, "endOffset": 170}, {"referenceID": 46, "context": "Third, the RBGParser employs a third-order parsing algorithm based on (Zhang et al., 2014), although it also implements a first-order parsing algorithm, which achieves lower UAS in general.", "startOffset": 70, "endOffset": 90}, {"referenceID": 25, "context": "An arguably fair comparison for the BiAttDP is the MSTParser (McDonald and Pereira, 2006), since the BiAtt-DP replaces the scoring function for arcs but uses exactly the same search algorithm.", "startOffset": 61, "endOffset": 89}, {"referenceID": 18, "context": "Due to the space limit, we refer readers to (Lei et al., 2014) for results of the MSTParsers (also shown in Appendix B).", "startOffset": 44, "endOffset": 62}, {"referenceID": 31, "context": "Finally, following (Pitler and McDonald, 2015), we also analyze the performance of the BiAtt-DP on both crossed and uncrossed arcs.", "startOffset": 19, "endOffset": 46}, {"referenceID": 31, "context": "For these four languages, the BiAtt-DP achieves better UAS than that reported in (Pitler and McDonald, 2015).", "startOffset": 81, "endOffset": 108}, {"referenceID": 31, "context": "Finally, following (Pitler and McDonald, 2015), we also analyze the performance of the BiAtt-DP on both crossed and uncrossed arcs. Since the BiAttDP uses a graph-based non-projective parsing algorithm, it is interesting to evaluate the performance on crossed arcs, which result in the non-projectivity of the dependency tree. The last three columns of Table 3 show the recall of crossed arcs, that of uncrossed arcs, and the percentage of crossed arcs in the test set. Pitler and McDonald (2015) reported numbers on the same data for Dutch, German, Portuguese, and Slovene as in this paper.", "startOffset": 20, "endOffset": 497}, {"referenceID": 41, "context": "Neural Dependency Parsing: Recently developed neural dependency parsers are mostly transition-based models, which read words sequentially from a buffer into a stack and incrementally build a parse tree by predicting a sequence of transitions (Yamada and Matsumoto, 2003; Nivre, 2003; Nivre, 2004).", "startOffset": 242, "endOffset": 296}, {"referenceID": 28, "context": "Neural Dependency Parsing: Recently developed neural dependency parsers are mostly transition-based models, which read words sequentially from a buffer into a stack and incrementally build a parse tree by predicting a sequence of transitions (Yamada and Matsumoto, 2003; Nivre, 2003; Nivre, 2004).", "startOffset": 242, "endOffset": 296}, {"referenceID": 29, "context": "Neural Dependency Parsing: Recently developed neural dependency parsers are mostly transition-based models, which read words sequentially from a buffer into a stack and incrementally build a parse tree by predicting a sequence of transitions (Yamada and Matsumoto, 2003; Nivre, 2003; Nivre, 2004).", "startOffset": 242, "endOffset": 296}, {"referenceID": 8, "context": "A feed-forward neural network is used in (Chen and Manning, 2014), where they represent the current state with 18 selected elements such as the top words on the stack and buffer.", "startOffset": 41, "endOffset": 65}, {"referenceID": 0, "context": "The model is extended to integrate parsing and tagging in (Alberti et al., 2015).", "startOffset": 58, "endOffset": 80}, {"referenceID": 7, "context": "A feed-forward neural network is used in (Chen and Manning, 2014), where they represent the current state with 18 selected elements such as the top words on the stack and buffer. Each element is encoded by concatenated embeddings of words, POS tags, and arc labels. Their dependency parser achieves improvement on both accuracy and parsing speed. Weiss et al. (2015) improve the parser using semi-supervised structured learning and unlabeled data.", "startOffset": 42, "endOffset": 367}, {"referenceID": 0, "context": "The model is extended to integrate parsing and tagging in (Alberti et al., 2015). On the other hand, Dyer et al. (2015) develop the stack LSTM architecture, which uses three LSTMs to respectively model the sequences of buffer states, stack states, and actions.", "startOffset": 59, "endOffset": 120}, {"referenceID": 26, "context": "The MSTParser (McDonald et al., 2005) and the TurboParser (Martins et al.", "startOffset": 14, "endOffset": 37}, {"referenceID": 22, "context": ", 2005) and the TurboParser (Martins et al., 2010) are two examples of graphbased parsers.", "startOffset": 28, "endOffset": 50}, {"referenceID": 18, "context": "The RBGParser proposed in (Lei et al., 2014) can also be viewed as a graph-based parser, which scores arcs using low-dimensional continuous features derived from low-rank tensors as well as features used by MSTParser/TurboParser.", "startOffset": 26, "endOffset": 44}, {"referenceID": 46, "context": "It also employs a sampler-based algorithm for parsing (Zhang et al., 2014).", "startOffset": 54, "endOffset": 74}, {"referenceID": 34, "context": "Neural Attention Model: The proposed BiAttDP is closely related to the memory network (Sukhbaatar et al., 2015) for question answering, as well as the neural attention models for machine translation (Bahdanau et al.", "startOffset": 86, "endOffset": 111}, {"referenceID": 2, "context": ", 2015) for question answering, as well as the neural attention models for machine translation (Bahdanau et al., 2015) and constituency parsing (Vinyals et al.", "startOffset": 95, "endOffset": 118}, {"referenceID": 38, "context": ", 2015) and constituency parsing (Vinyals et al., 2015b).", "startOffset": 33, "endOffset": 56}, {"referenceID": 37, "context": "The similar idea is employed by the pointer network in (Vinyals et al., 2015a), which is used to solve three different combinatorial optimization problems.", "startOffset": 55, "endOffset": 78}, {"referenceID": 18, "context": "We use the numbers reported in (Lei et al., 2014).", "startOffset": 31, "endOffset": 49}], "year": 2016, "abstractText": "We develop a novel bi-directional attention model for dependency parsing, which learns to agree on headword predictions from the forward and backward parsing directions. The parsing procedure for each direction is formulated as sequentially querying the memory component that stores continuous headword embeddings. The proposed parser makes use of soft headword embeddings, allowing the model to implicitly capture high-order parsing history without dramatically increasing the computational complexity. We conduct experiments on English, Chinese, and 12 other languages from the CoNLL 2006 shared task, showing that the proposed model achieves state-of-the-art unlabeled attachment scores on 6 languages.1", "creator": "TeX"}}}