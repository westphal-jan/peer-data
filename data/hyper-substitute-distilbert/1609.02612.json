{"id": "1609.02612", "review": {"conference": "NIPS", "VERSION": "v1", "DATE_OF_SUBMISSION": "8-Sep-2016", "title": "Generating Videos with Scene Dynamics", "abstract": "we write on memory amounts or unlabeled mathematics in order explicitly acquire that mode of symbolic alignment for both script recognition tasks ( and. g. action classification ) and video generation tasks ( e. g. future prediction ). learners want better generative adversarial network for video with a spatial - gradient convolutional architecture that untangles static scene'natural foreground as projected world. considerations suggest this model can generate tiny videos 5000 to 200 second daily approximately frame rate better understanding simple baselines, demonstrating we maximize ample utility at predicting the projections of static simulations. overall, experiments and discussions show the model internally learns useful results for recognizing tasks with minimal supervision, suggesting movement dynamics are a promising future graphic representation studies. insights reveal that graphic models primarily impact technological applications and statistical understanding and simulation.", "histories": [["v1", "Thu, 8 Sep 2016 22:29:52 GMT  (1926kb,D)", "http://arxiv.org/abs/1609.02612v1", "NIPS 2016. See more atthis http URL"], ["v2", "Mon, 17 Oct 2016 03:13:10 GMT  (1927kb,D)", "http://arxiv.org/abs/1609.02612v2", "NIPS 2016. See more atthis http URL"], ["v3", "Wed, 26 Oct 2016 13:58:10 GMT  (1927kb,D)", "http://arxiv.org/abs/1609.02612v3", "NIPS 2016. See more atthis http URL"]], "COMMENTS": "NIPS 2016. See more atthis http URL", "reviews": [], "SUBJECTS": "cs.CV cs.GR cs.LG", "authors": ["carl vondrick", "hamed pirsiavash", "antonio torralba 0001"], "accepted": true, "id": "1609.02612"}, "pdf": {"name": "1609.02612.pdf", "metadata": {"source": "CRF", "title": "Generating Videos with Scene Dynamics", "authors": ["Carl Vondrick", "Hamed Pirsiavash", "Antonio Torralba"], "emails": ["vondrick@mit.edu", "hpirsiav@umbc.edu", "torralba@mit.edu"], "sections": [{"heading": "1 Introduction", "text": "Understanding object motions and scene dynamics is a core problem in computer vision. For both video recognition tasks (e.g., action classification) and video generation tasks (e.g., future prediction), a model of how scenes transform is needed. However, creating a model of dynamics is challenging because there is a vast number of ways that objects and scenes can change.\nIn this work, we are interested in the fundamental problem of learning how scenes transform with time. We believe investigating this question may yield insight into the design of predictive models for computer vision. However, since annotating this knowledge is both expensive and ambiguous, we instead seek to learn it directly from large amounts of in-the-wild, unlabeled video. Unlabeled video has the advantage that it can be economically acquired at massive scales yet contains rich temporal signals \u201cfor free\u201d because frames are temporally coherent.\nWith the goal of capturing some of the temporal knowledge contained in large amounts of unlabeled video, we present an approach that learns to generate tiny videos which have fairly realistic dynamics and motions. To do this, we capitalize on recent advances in generative adversarial networks [8, 28, 4], which we extend to video. We introduce a two-stream generative model that explicitly models the foreground separately from the background, which allows us to enforce that the background is stationary, helping the network to learn which objects move and which do not.\nOur experiments suggest that our model has started to learn about dynamics. In our generation experiments, we show that our model can generate scenes with plausible motions.1 We conducted a psychophysical study where we asked over a hundred people to compare generated videos, and people preferred videos from our full model more often. Furthermore, by making the model conditional on an input image, our model can sometimes predict a plausible (but \u201cincorrect\u201d) future. In our recognition experiments, we show how our model has learned, without supervision, useful features for human action classification. Moreover, visualizations of the learned representation suggest future generation may be a promising supervisory signal for learning to recognize objects of motion.\n1See http://mit.edu/vondrick/tinyvideo for the animated videos.\n29th Conference on Neural Information Processing Systems (NIPS 2016), Barcelona, Spain.\nar X\niv :1\n60 9.\n02 61\n2v 1\n[ cs\n.C V\n] 8\nS ep\n2 01\n6\nThe primary contribution of this paper is showing how to leverage large amounts of unlabeled video in order to acquire priors about scene dynamics. The secondary contribution is the development of a generative model for video. The remainder of this paper describes these contributions in detail. In section 2, we describe our generative model for video. In section 3, we present several experiments to analyze the generative model. We believe that generative video models can impact many applications, such as in simulations, forecasting, and representation learning."}, {"heading": "1.1 Related Work", "text": "This paper builds upon early work in generative video models [26]. However, previous work has focused mostly on small patches, and evaluated it for video clustering. Here, we develop a generative video model for natural scenes using state-of-the-art adversarial learning methods [8, 28]. Conceptually, our work is related to studies into fundamental roles of time in computer vision [27, 11, 2, 6, 21]. However, here we are interested in generating short videos with realistic temporal semantics, rather than detecting or retrieving them.\nOur technical approach builds on recent work in generative adversarial networks for image modeling [8, 28, 4, 44, 25], which we extend to video. To our knowledge, there has been relatively little work extensively studying generative adversarial networks for video. Most notably, [19] also uses adversarial networks for video frame prediction. Our framework can generate videos for longer time scales and learn representations of video using unlabeled data. Our work is also related to efforts to predict the future in video [30, 19, 40, 46, 39, 15, 7, 50]. Often these works may be viewed as a generative model conditioned on the past frames. Our work complements these efforts in two ways. Firstly, we explore how to generate videos from scratch (not conditioned on the past). Secondly, while prior work has used generative models in video settings mostly on a single frame, we jointly generate a sequence of frames (32 frames) using spatio-temporal convolutional networks, which may help prevent drifts due to errors accumulating.\nWe leverage approaches for recognizing actions in video with deep networks, but apply them for video generation instead. We use spatio-temporal 3D convolutions to model videos [37], but we use fractionally strided convolutions [47] instead because we are interested in generation. We also use two-streams to model video [31], but apply them for video generation instead of action recognition. However, our approach does not explicitly use optical flow; instead, we expect the network to learn motion features on its own. Finally, this paper is related to a growing body of work that capitalizes on large amounts of unlabeled video for visual recognition tasks [16, 43, 34, 12, 21, 22, 3, 29, 23, 24, 17, 38, 39, 1]. We instead leverage large amounts of unlabeled video for generation."}, {"heading": "2 Generative Models for Video", "text": "In this section, we present a generative model for videos. We propose to use generative adversarial networks [8], which have been shown to have good performance on image generation [28, 4]."}, {"heading": "2.1 Review: Generative Adversarial Networks", "text": "The main idea behind generative adversarial networks [8] is to train two networks: a generator network G tries to produce a video, and a discriminator network D tries to distinguish between \u201creal\u201c videos and \u201cfake\u201d generated videos. One can train these networks against each other in a min-max game where the generator seeks to maximally fool the discriminator while simultaneously the discriminator seeks to detect which examples are fake:\nmin wG max wD\nEx\u223cpx(x) [logD(x;wD)] + Ez\u223cpz(z) [log (1\u2212D(G(z;wG);wD))] (1)\nwhere z is a latent \u201ccode\u201d that is often sampled from a simple distribution (such as a normal distribution) and x \u223c px(x) samples from the data distribution. In practice, since we do not know the true distribution of data px(x), we can estimate the expectation by drawing from our dataset.\nSince we will optimize Equation 1 with gradient based methods (SGD), the two networks G and D can take on any form appropriate for the task as long as they are differentiable with respect to parameters wG and wD. We design a G and D for video."}, {"heading": "2.2 Generator Network", "text": "The input to the generator network is a low-dimensional latent code z \u2208 Rd. In most cases, this code can be sampled from a distribution (e.g., Gaussian). Given a code z, we wish to produce a video.\nWe design the architecture of the generator network with a few principles in mind. Firstly, we want the network to be invariant to translations in both space and time. Secondly, we want a low-dimensional z to be able to produce a high-dimensional output (video). Thirdly, we want to assume a stationary camera and take advantage of the the property that usually only objects move. We are interested in modeling object motion, and not the motion of cameras. Moreover, since modeling that the background is stationary is important in video recognition tasks [41], it may be helpful in video generation as well. We explore two different network architectures:\nOne Stream Architecture: We combine spatio-temporal convolutions [13, 37] with fractionally strided convolutions [47, 28] to generate video. Three dimensional convolutions provide spatial and temporal invariance, while fractionally strided convolutions can upsample efficiently in a deep network, allowing z to be low-dimensional. We use an architecture inspired by [28], except extended in time. We use a five layer network of 4\u00d7 4\u00d7 4 convolutions with a stride of 2, except for the first layer which uses 2\u00d7 4\u00d7 4 convolutions (time\u00d7 width\u00d7 height). We found that these kernel sizes provided an appropriate balance between training speed and quality of generations.\nTwo Stream Architecture: The one stream architecture does not model that the world is stationary and usually only objects move. We experimented with making this behavior explicit in the model. We use an architecture that enforces a static background and moving foreground. We use a two-stream architecture where the generator is governed by the combination:\nG2(z) = m(z) f(z) + (1\u2212m(z)) b(z). (2)\nOur intention is that 0 \u2265 m(z) \u2265 1 can be viewed as a spatio-temporal mask that selects either the foreground f(z) model or the background model b(z) for each pixel location and timestep. To enforce a background model in the generations, b(z) produces a spatial image that is replicated over time, while f(z) produces a spatio-temporal cuboid masked by m(z). By summing the foreground model with the background model, we can obtain the final generation. Note that is element-wise multiplication, and we replicate singleton dimensions to match its corresponding tensor. During learning, we also add to the objective a small sparsity prior on the mask \u03bb\u2016m(z)\u20161 for \u03bb = 0.1, which we found helps encourage the network to use the background stream.\nWe use fractionally strided convolutional networks for m(z), f(z), and b(z). For f(z), we use the same network as the one-stream architecture, and for b(z) we use a similar generator architecture to [28]. We only use their architecture; we do not initialize with their learned weights. To create the mask m(z), we use a network that shares weights with f(z) except the last layer, which has only one output channel. We use a sigmoid activation function for the mask. We visualize the two-stream architecture in Figure 1. In our experiments, the generator produces 64\u00d7 64 videos for 32 frames, which is a little over a second."}, {"heading": "2.3 Discriminator Network", "text": "The discriminator needs to be able to solve two problems: firstly, it must be able to classify realistic scenes from synthetically generated scenes, and secondly, it must be able to recognize realistic motion between frames. We chose to design the discriminator to be able to solve both of these tasks with the same model. We use a five-layer spatio-temporal convolutional network with kernels 4\u00d7 4\u00d7 4 so that the hidden layers can learn both visual models and motion models. We design the architecture to be reverse of the foreground stream in the generator, replacing fractionally strided convolutions with strided convolutions (to down-sample instead of up-sample), and replacing the last layer to output a binary classification (real or not)."}, {"heading": "2.4 Learning and Implementation", "text": "We train the generator and discriminator with stochastic gradient descent. We alternate between maximizing the loss w.r.t. wD and minimizing the loss w.r.t. wG until a fixed number of iterations. All networks are trained from scratch. Our implementation is based off a modified version of [28] in Torch7. We used a more numerically stable implementation of cross entropy loss to prevent overflow. We use the Adam [14] optimizer and a fixed learning rate of 0.0002 and momentum term of 0.5. The latent code has 100 dimensions, which we sample from a normal distribution. We use a batch size of 64. We initialize all weights with zero mean Gaussian noise with standard deviation 0.01. We normalize all videos to be in the range [\u22121, 1]. We use batch normalization [10] followed by the ReLU activation functions after every layer in the generator, except the output layers, which uses tanh. Following [28], we also use batch normalization in the discriminator except for the first layer and we instead use leaky ReLU [45]. Training typically took several days on a GPU."}, {"heading": "3 Experiments", "text": "We experiment with the generative adversarial network for video (VGAN) on both generation and recognition tasks. We also show several qualitative examples online."}, {"heading": "3.1 Unlabeled Video Dataset", "text": "We use a large amount of unlabeled video to train our model. We downloaded over two million videos from Flickr [36] by querying for popular Flickr tags as well as querying for common English words. From this pool, we created two datasets:\nUnfiltered Unlabeled Videos: We use these videos directly, without any filtering, for representation learning. The dataset is over 5, 000 hours. Filtered Unlabeled Videos: To evaluate generations, we use the Places2 pre-trained model [49] to automatically filter the videos by scene category. Since image/video generation is a challenging problem, we assembled this dataset to better diagnose strengths and weaknesses of approaches. We experimented with four scene categories: golf course, hospital rooms (babies), beaches, and train station.\nStabilization: As we are interested in the movement of objects and not camera shake, we stabilize the camera motion for both datasets. We extract SIFT keypoints [18], use RANSAC to estimate a homography (rotation, translation, scale) between adjacent frames, and warp frames to minimize background motion. When the homography moved out of the frame, we fill in the missing values using the previous frames. If the homography has too large of a re-projection error, we ignore that segment of the video for training, which only happened 3% of the time. The only other pre-processing we do is normalizing the videos to be in the range [\u22121, 1]. We extract frames at native frame rate (25 fps). We use 32-frame videos of spatial resolution 64\u00d7 64."}, {"heading": "3.2 Video Generation", "text": "We evaluate both the one-stream and two-stream generator. We trained a generator for each scene category in our filtered dataset. We perform both a qualitative evaluation as well as a quantitative psychophysical evaluation to measure the perceptual quality of the generated videos.\nQualitative Results: We show several examples of the videos generated from our model in Figure 2. We observe that a) the generated scenes tend to be fairly sharp and that b) the motion patterns are generally correct for their respective scene. For example, the beach model tends to produce beaches with crashing waves, the golf model produces people walking on grass, and the train station generations usually show train tracks and a train with windows rapidly moving along it. While the model usually learns to put motion on the right objects, one common failure mode is that the objects lack resolution. For example, the people in the beaches and golf courses are often blobs. Nevertheless, we believe it is promising that our model can generate short motions. We visualize the behavior of the two-stream architecture in Figure 3.\nBaseline: Since to our knowledge there are no existing large-scale generative models of video ([30] requires an input frame), we develop a simple but reasonable baseline for this task. We train an autoencoder over our data. The encoder is similar to the discriminator network (except producing 100 dimensional code), while the decoder follows the two-stream generator network. Hence, the baseline autoencoder network has a similar number of parameters as our full approach. We then feed examples through the encoder and fit a Gaussian Mixture Model (GMM) with 256 components over the 100 dimensional hidden space. To generate a novel video, we sample from this GMM, and feed the sample through the decoder.\nEvaluation Metric: We quantitatively evaluate our generation using a psychophysical two-alternative forced choice with workers on Amazon Mechanical Turk. We show a worker two random videos,\nand ask them \u201cWhich video is more realistic?\u201d We collected over 13, 000 opinions across 150 unique workers. We paid workers one cent per comparison, and required workers to historically have a 95% approval rating on MTurk. We experimented with removing bad workers that frequently said real videos were not realistic, but the relative rankings did not change. We designed this experiment following advice from [35], which advocates evaluating generative models for the task at hand. In our case, we are interested in perceptual quality of motion. We consider a model X better than model Y if workers prefer generations from X more than generations from Y.\nQuantitative Results: Table 1 shows the percentage of times that workers preferred generations from one model over another. Workers consistently prefer videos from the generative adversarial network more than an autoencoder. Additionally, workers show a slight preference for the two-stream architecture, especially in scenes where the background is large (e.g., golf course, beach). Although the one-stream architecture is capable of generating stationary backgrounds, it may be difficult to find this solution, motivating a more explicit architecture. The one-stream architecture generally produces high-frequency temporal flickering in the background. To evaluate whether static frames are better than our generations, we also ask workers to choose between our videos and a static frame, and workers only chose the static frame 38% of the time, suggesting our model produces more realistic motion than static frames on average. Finally, while workers generally can distinguish real videos from generated videos, the workers show the most confusion with our two-stream model compared to baselines, suggesting the two-stream generations may be more realistic on average."}, {"heading": "3.3 Video Representation Learning", "text": "We also experimented with using our model as a way to learn unsupervised representations for video. We train our two-stream model with over 5, 000 hours of unfiltered, unlabeled videos from Flickr. We then fine-tune the discriminator on the task of interest (e.g., action recognition) using a relatively small set of labeled video. To do this, we replace the last layer (which is a binary classifier) with a K-way softmax classifier. We also add dropout [33] to the penultimate layer to reduce overfitting.\nAction Classification: We evaluated performance on classifying actions on UCF101 [32]. We report accuracy in Figure 4a. Initializing the network with the weights learned from the generative adversarial network outperforms a randomly initialized network, suggesting that it has learned an useful internal representation for video. Interestingly, while a randomly initialized network under-performs hand-crafted STIP features [32], the network initialized with our model significantly\noutperforms it. We also experimented with training a logistic regression on only the last layer, which performed worse. Finally, our model slightly outperforms another recent unsupervised video representation learning approach [21]. However, our approach uses an order of magnitude fewer parameters, less layers (5 layers vs 8 layers), and low-resolution video.\nPerformance vs Data: We also experimented with varying the amount of labeled training data available to our fine-tuned network. Figure 4b reports performance versus the amount of labeled training data available. As expected, performance increases with more labeled data. The fine-tuned model shows an advantage in low data regimes: even with one eighth of the labeled data, the finetuned model still beats a randomly initialized network. Moreover, Figure 4c plots the relative accuracy gain over the fine-tuned model and the random initialization (fine-tuned performance divided by random initialized performance). This shows that fine-tuning with our model has larger relative gain over random initialization in cases with less labeled data, showing its utility in low-data regimes."}, {"heading": "3.4 Future Generation", "text": "We investigate whether our approach can be used to generate the future of a static image. Specifically, given a static image x0, can we extrapolate a video of possible consequent frames?\nEncoder: We utilize the same model as our two-stream model, however we must make one change in order to input the static image instead of the latent code. We can do this by attaching a fivelayer convolutional network to the front of the generator which encodes the image into the latent space, similar to a conditional generative adversarial network [20]. The rest of the generator and discriminator networks remain the same. However, we add an additional loss term that minimizes the L1 distance between the input and the first frame of the generated image. We do this so that the generator creates videos consistent with the input image. We train from scratch with the objective:\nmin wG max wD\nEx\u223cpx(x) [logD(x;wD)] + Ex0\u223cpx0 (x0) [log (1\u2212D(G(x0;wG);wD))] +Ex0\u223cpx0 (x0) [ \u03bb\u2016x0 \u2212G0(x0;wG)\u201622 ] (3) where x0 is the first frame of the input, G0(\u00b7) is the first frame of the generated video, and \u03bb \u2208 R is a hyperparameter. The discriminator will try to classify realistic frames and realistic motions as before, while the generator will try to produce a realistic video such that the first frame is reconstructed well.\nResults: We qualitatively show a few examples of our approach in Figure 5 using held-out testing videos. Although the extrapolations are rarely correct, they often have fairly plausible motions. The\nmost common failure is that the generated video has a scene similar but not identical to the input image, such as by changing colors or dropping/hallucinating objects. The former could be solved by a color histogram normalization in post-processing (which we did not do for simplicity), while we suspect the latter will require building more powerful generative models. The generated videos are usually not the correct video, but we observe that often the motions are plausible. We are not aware of an existing approach that can directly generate multi-frame videos from a single static image. [30, 19] can generate video, but they require multiple input frames and empirically become blurry after extrapolating many frames. [40, 46] can predict optic flow from a single image, but they do not generate several frames of motion and may be susceptible to warping artifacts. We believe this experiment shows an important application of generative video models.\nVisualizing Representation: Since generating the future requires understanding how objects move, the network may need learn to recognize some objects internally, even though it is not supervised to do so. Figure 6 visualizes some activations of hidden units in the third convolutional layer. While not at all units are semantic, some of the units tend to be selective for objects that are sources of motion, such as people or train tracks. These visualizations suggest that scaling up future generation might be a promising supervisory signal for object recognition and complementary to [24, 5, 43].\nConclusion: Understanding scene dynamics will be crucial for the next generation of computer vision systems. In this work, we explored how to learn some dynamics from large amounts of unlabeled video by capitalizing on adversarial learning methods. Since annotating dynamics is expensive, we believe learning from unlabeled data is a promising direction. While we are still a long way from fully harnessing the potential of unlabeled video, our experiments support that abundant unlabeled video can be lucrative for both learning to generate videos and learning visual representations.\nAcknowledgements: We thank Yusuf Aytar for dataset discussions. We thank MIT TIG, especially Garrett Wollman, for troubleshooting issues on storing the 26 TB of video. We are grateful for the Torch7 community for answering many questions. NVidia donated GPUs used for this research. This work was supported by NSF grant #1524817 to AT, START program at UMBC to HP, and the Google PhD fellowship to CV."}], "references": [{"title": "Learning sound representations from unlabeled video", "author": ["Yusuf Aytar", "Carl Vondrick", "Antonio Torralba"], "venue": null, "citeRegEx": "1", "shortCiteRegEx": "1", "year": 2016}, {"title": "Watching unlabeled video helps learn new human actions from very few labeled snapshots", "author": ["Chao-Yeh Chen", "Kristen Grauman"], "venue": "In CVPR,", "citeRegEx": "3", "shortCiteRegEx": "3", "year": 2013}, {"title": "Deep generative image models using a laplacian pyramid of adversarial networks", "author": ["Emily L Denton", "Soumith Chintala", "Rob Fergus"], "venue": "In NIPS,", "citeRegEx": "4", "shortCiteRegEx": "4", "year": 2015}, {"title": "Unsupervised visual representation learning by context prediction", "author": ["Carl Doersch", "Abhinav Gupta", "Alexei A Efros"], "venue": "In ICCV,", "citeRegEx": "5", "shortCiteRegEx": "5", "year": 2015}, {"title": "Statistical learning of higher-order temporal structure from visual shape sequences", "author": ["J\u00f3zsef Fiser", "Richard N Aslin"], "venue": "JEP,", "citeRegEx": "6", "shortCiteRegEx": "6", "year": 2002}, {"title": "Recurrent network models for human dynamics", "author": ["Katerina Fragkiadaki", "Sergey Levine", "Panna Felsen", "Jitendra Malik"], "venue": "In ICCV,", "citeRegEx": "7", "shortCiteRegEx": "7", "year": 2015}, {"title": "Generative adversarial nets", "author": ["Ian Goodfellow", "Jean Pouget-Abadie", "Mehdi Mirza", "Bing Xu", "David Warde-Farley", "Sherjil Ozair", "Aaron Courville", "Yoshua Bengio"], "venue": "In NIPS,", "citeRegEx": "8", "shortCiteRegEx": "8", "year": 2014}, {"title": "Dimensionality reduction by learning an invariant mapping", "author": ["Raia Hadsell", "Sumit Chopra", "Yann LeCun"], "venue": "In CVPR,", "citeRegEx": "9", "shortCiteRegEx": "9", "year": 2006}, {"title": "Batch normalization: Accelerating deep network training by reducing internal covariate", "author": ["Sergey Ioffe", "Christian Szegedy"], "venue": "shift. arXiv,", "citeRegEx": "10", "shortCiteRegEx": "10", "year": 2015}, {"title": "Discovering states and transformations in image collections", "author": ["Phillip Isola", "Joseph J Lim", "Edward H Adelson"], "venue": "In CVPR,", "citeRegEx": "11", "shortCiteRegEx": "11", "year": 2015}, {"title": "Learning image representations tied to ego-motion", "author": ["Dinesh Jayaraman", "Kristen Grauman"], "venue": "In ICCV,", "citeRegEx": "12", "shortCiteRegEx": "12", "year": 2015}, {"title": "3d convolutional neural networks for human action recognition", "author": ["Shuiwang Ji", "Wei Xu", "Ming Yang", "Kai Yu"], "venue": null, "citeRegEx": "13", "shortCiteRegEx": "13", "year": 2013}, {"title": "Adam: A method for stochastic optimization", "author": ["Diederik Kingma", "Jimmy Ba"], "venue": null, "citeRegEx": "14", "shortCiteRegEx": "14", "year": 2014}, {"title": "Building high-level features using large scale unsupervised learning", "author": ["Quoc V Le"], "venue": "CASSP,", "citeRegEx": "16", "shortCiteRegEx": "16", "year": 2013}, {"title": "Object recognition from local scale-invariant features", "author": ["David G Lowe"], "venue": "In ICCV,", "citeRegEx": "18", "shortCiteRegEx": "18", "year": 1999}, {"title": "Deep multi-scale video prediction beyond mean square error", "author": ["Michael Mathieu", "Camille Couprie", "Yann LeCun"], "venue": null, "citeRegEx": "19", "shortCiteRegEx": "19", "year": 2015}, {"title": "Conditional generative adversarial nets", "author": ["Mehdi Mirza", "Simon Osindero"], "venue": null, "citeRegEx": "20", "shortCiteRegEx": "20", "year": 2014}, {"title": "Unsupervised learning using sequential verification for action recognition", "author": ["Ishan Misra", "C Lawrence Zitnick", "Martial Hebert"], "venue": null, "citeRegEx": "21", "shortCiteRegEx": "21", "year": 2016}, {"title": "Deep learning from temporal coherence in video", "author": ["Hossein Mobahi", "Ronan Collobert", "Jason Weston"], "venue": "In ICML,", "citeRegEx": "22", "shortCiteRegEx": "22", "year": 2009}, {"title": "The open world of micro-videos", "author": ["Phuc Xuan Nguyen", "Gregory Rogez", "Charless Fowlkes", "Deva Ramanan"], "venue": null, "citeRegEx": "23", "shortCiteRegEx": "23", "year": 2016}, {"title": "Ambient sound provides supervision for visual learning", "author": ["Andrew Owens", "Jiajun Wu", "Josh H McDermott", "William T Freeman", "Antonio Torralba"], "venue": null, "citeRegEx": "24", "shortCiteRegEx": "24", "year": 2016}, {"title": "Context encoders: Feature learning by inpainting", "author": ["Deepak Pathak", "Philipp Krahenbuhl", "Jeff Donahue", "Trevor Darrell", "Alexei A Efros"], "venue": null, "citeRegEx": "25", "shortCiteRegEx": "25", "year": 2016}, {"title": "Recursive estimation of generative models of video", "author": ["Nikola Petrovic", "Aleksandar Ivanovic", "Nebojsa Jojic"], "venue": "In CVPR,", "citeRegEx": "26", "shortCiteRegEx": "26", "year": 2006}, {"title": "Seeing the arrow of time", "author": ["Lyndsey Pickup", "Zheng Pan", "Donglai Wei", "YiChang Shih", "Changshui Zhang", "Andrew Zisserman", "Bernhard Scholkopf", "William Freeman"], "venue": "In CVPR,", "citeRegEx": "27", "shortCiteRegEx": "27", "year": 2014}, {"title": "Unsupervised representation learning with deep convolutional generative adversarial networks", "author": ["Alec Radford", "Luke Metz", "Soumith Chintala"], "venue": null, "citeRegEx": "28", "shortCiteRegEx": "28", "year": 2015}, {"title": "Learning temporal embeddings for complex video analysis", "author": ["Vignesh Ramanathan", "Kevin Tang", "Greg Mori", "Li Fei-Fei"], "venue": "In CVPR,", "citeRegEx": "29", "shortCiteRegEx": "29", "year": 2015}, {"title": "Video (language) modeling: a baseline for generative models of natural videos", "author": ["MarcAurelio Ranzato", "Arthur Szlam", "Joan Bruna", "Michael Mathieu", "Ronan Collobert", "Sumit Chopra"], "venue": null, "citeRegEx": "30", "shortCiteRegEx": "30", "year": 2014}, {"title": "Two-stream convolutional networks for action recognition in videos", "author": ["Karen Simonyan", "Andrew Zisserman"], "venue": "In NIPS,", "citeRegEx": "31", "shortCiteRegEx": "31", "year": 2014}, {"title": "Ucf101: A dataset of 101 human actions classes from videos", "author": ["Khurram Soomro", "Amir Roshan Zamir", "Mubarak Shah"], "venue": "in the wild. arXiv,", "citeRegEx": "32", "shortCiteRegEx": "32", "year": 2012}, {"title": "Dropout: a simple way to prevent neural networks from overfitting", "author": ["Nitish Srivastava", "Geoffrey E Hinton", "Alex Krizhevsky", "Ilya Sutskever", "Ruslan Salakhutdinov"], "venue": null, "citeRegEx": "33", "shortCiteRegEx": "33", "year": 2014}, {"title": "Unsupervised learning of video representations using lstms", "author": ["Nitish Srivastava", "Elman Mansimov", "Ruslan Salakhutdinov"], "venue": null, "citeRegEx": "34", "shortCiteRegEx": "34", "year": 2015}, {"title": "A note on the evaluation of generative models", "author": ["Lucas Theis", "A\u00e4ron van den Oord", "Matthias Bethge"], "venue": null, "citeRegEx": "35", "shortCiteRegEx": "35", "year": 2015}, {"title": "Yfcc100m: The new data in multimedia research", "author": ["Bart Thomee", "David A Shamma", "Gerald Friedland", "Benjamin Elizalde", "Karl Ni", "Douglas Poland", "Damian Borth", "Li-Jia Li"], "venue": null, "citeRegEx": "36", "shortCiteRegEx": "36", "year": 2016}, {"title": "Learning spatiotemporal features with 3d convolutional networks", "author": ["Du Tran", "Lubomir Bourdev", "Rob Fergus", "Lorenzo Torresani", "Manohar Paluri"], "venue": null, "citeRegEx": "37", "shortCiteRegEx": "37", "year": 2014}, {"title": "Efficiently scaling up crowdsourced video annotation", "author": ["Carl Vondrick", "Donald Patterson", "Deva Ramanan"], "venue": null, "citeRegEx": "38", "shortCiteRegEx": "38", "year": 2013}, {"title": "Anticipating visual representations from unlabeled video", "author": ["Carl Vondrick", "Hamed Pirsiavash", "Antonio Torralba"], "venue": null, "citeRegEx": "39", "shortCiteRegEx": "39", "year": 2015}, {"title": "Patch to the future: Unsupervised visual prediction", "author": ["Jacob Walker", "Arpan Gupta", "Martial Hebert"], "venue": "In CVPR,", "citeRegEx": "40", "shortCiteRegEx": "40", "year": 2014}, {"title": "Action recognition with improved trajectories", "author": ["Heng Wang", "Cordelia Schmid"], "venue": "In ICCV,", "citeRegEx": "41", "shortCiteRegEx": "41", "year": 2013}, {"title": "Towards good practices for very deep two-stream convnets", "author": ["Limin Wang", "Yuanjun Xiong", "Zhe Wang", "Yu Qiao"], "venue": null, "citeRegEx": "42", "shortCiteRegEx": "42", "year": 2015}, {"title": "Unsupervised learning of visual representations using videos", "author": ["Xiaolong Wang", "Abhinav Gupta"], "venue": "In ICCV,", "citeRegEx": "43", "shortCiteRegEx": "43", "year": 2015}, {"title": "Generative image modeling using style and structure adversarial networks", "author": ["Xiaolong Wang", "Abhinav Gupta"], "venue": null, "citeRegEx": "44", "shortCiteRegEx": "44", "year": 2016}, {"title": "Empirical evaluation of rectified activations in convolutional network", "author": ["Bing Xu", "Naiyan Wang", "Tianqi Chen", "Mu Li"], "venue": null, "citeRegEx": "45", "shortCiteRegEx": "45", "year": 2015}, {"title": "A data-driven approach for event prediction", "author": ["Jenny Yuen", "Antonio Torralba"], "venue": "In ECCV", "citeRegEx": "46", "shortCiteRegEx": "46", "year": 2010}, {"title": "Object detectors emerge in deep scene cnns", "author": ["Bolei Zhou", "Aditya Khosla", "Agata Lapedriza", "Aude Oliva", "Antonio Torralba"], "venue": null, "citeRegEx": "48", "shortCiteRegEx": "48", "year": 2014}, {"title": "Learning deep features for scene recognition using places database", "author": ["Bolei Zhou", "Agata Lapedriza", "Jianxiong Xiao", "Antonio Torralba", "Aude Oliva"], "venue": "In NIPS,", "citeRegEx": "49", "shortCiteRegEx": "49", "year": 2014}, {"title": "Temporal perception and prediction in ego-centric video", "author": ["Yipin Zhou", "Tamara L Berg"], "venue": "In ICCV,", "citeRegEx": "50", "shortCiteRegEx": "50", "year": 2015}], "referenceMentions": [{"referenceID": 6, "context": "To do this, we capitalize on recent advances in generative adversarial networks [8, 28, 4], which we extend to video.", "startOffset": 80, "endOffset": 90}, {"referenceID": 24, "context": "To do this, we capitalize on recent advances in generative adversarial networks [8, 28, 4], which we extend to video.", "startOffset": 80, "endOffset": 90}, {"referenceID": 2, "context": "To do this, we capitalize on recent advances in generative adversarial networks [8, 28, 4], which we extend to video.", "startOffset": 80, "endOffset": 90}, {"referenceID": 22, "context": "This paper builds upon early work in generative video models [26].", "startOffset": 61, "endOffset": 65}, {"referenceID": 6, "context": "Here, we develop a generative video model for natural scenes using state-of-the-art adversarial learning methods [8, 28].", "startOffset": 113, "endOffset": 120}, {"referenceID": 24, "context": "Here, we develop a generative video model for natural scenes using state-of-the-art adversarial learning methods [8, 28].", "startOffset": 113, "endOffset": 120}, {"referenceID": 23, "context": "Conceptually, our work is related to studies into fundamental roles of time in computer vision [27, 11, 2, 6, 21].", "startOffset": 95, "endOffset": 113}, {"referenceID": 9, "context": "Conceptually, our work is related to studies into fundamental roles of time in computer vision [27, 11, 2, 6, 21].", "startOffset": 95, "endOffset": 113}, {"referenceID": 4, "context": "Conceptually, our work is related to studies into fundamental roles of time in computer vision [27, 11, 2, 6, 21].", "startOffset": 95, "endOffset": 113}, {"referenceID": 17, "context": "Conceptually, our work is related to studies into fundamental roles of time in computer vision [27, 11, 2, 6, 21].", "startOffset": 95, "endOffset": 113}, {"referenceID": 6, "context": "Our technical approach builds on recent work in generative adversarial networks for image modeling [8, 28, 4, 44, 25], which we extend to video.", "startOffset": 99, "endOffset": 117}, {"referenceID": 24, "context": "Our technical approach builds on recent work in generative adversarial networks for image modeling [8, 28, 4, 44, 25], which we extend to video.", "startOffset": 99, "endOffset": 117}, {"referenceID": 2, "context": "Our technical approach builds on recent work in generative adversarial networks for image modeling [8, 28, 4, 44, 25], which we extend to video.", "startOffset": 99, "endOffset": 117}, {"referenceID": 40, "context": "Our technical approach builds on recent work in generative adversarial networks for image modeling [8, 28, 4, 44, 25], which we extend to video.", "startOffset": 99, "endOffset": 117}, {"referenceID": 21, "context": "Our technical approach builds on recent work in generative adversarial networks for image modeling [8, 28, 4, 44, 25], which we extend to video.", "startOffset": 99, "endOffset": 117}, {"referenceID": 15, "context": "Most notably, [19] also uses adversarial networks for video frame prediction.", "startOffset": 14, "endOffset": 18}, {"referenceID": 26, "context": "Our work is also related to efforts to predict the future in video [30, 19, 40, 46, 39, 15, 7, 50].", "startOffset": 67, "endOffset": 98}, {"referenceID": 15, "context": "Our work is also related to efforts to predict the future in video [30, 19, 40, 46, 39, 15, 7, 50].", "startOffset": 67, "endOffset": 98}, {"referenceID": 36, "context": "Our work is also related to efforts to predict the future in video [30, 19, 40, 46, 39, 15, 7, 50].", "startOffset": 67, "endOffset": 98}, {"referenceID": 42, "context": "Our work is also related to efforts to predict the future in video [30, 19, 40, 46, 39, 15, 7, 50].", "startOffset": 67, "endOffset": 98}, {"referenceID": 35, "context": "Our work is also related to efforts to predict the future in video [30, 19, 40, 46, 39, 15, 7, 50].", "startOffset": 67, "endOffset": 98}, {"referenceID": 5, "context": "Our work is also related to efforts to predict the future in video [30, 19, 40, 46, 39, 15, 7, 50].", "startOffset": 67, "endOffset": 98}, {"referenceID": 45, "context": "Our work is also related to efforts to predict the future in video [30, 19, 40, 46, 39, 15, 7, 50].", "startOffset": 67, "endOffset": 98}, {"referenceID": 33, "context": "We use spatio-temporal 3D convolutions to model videos [37], but we use fractionally strided convolutions [47] instead because we are interested in generation.", "startOffset": 55, "endOffset": 59}, {"referenceID": 27, "context": "We also use two-streams to model video [31], but apply them for video generation instead of action recognition.", "startOffset": 39, "endOffset": 43}, {"referenceID": 13, "context": "Finally, this paper is related to a growing body of work that capitalizes on large amounts of unlabeled video for visual recognition tasks [16, 43, 34, 12, 21, 22, 3, 29, 23, 24, 17, 38, 39, 1].", "startOffset": 139, "endOffset": 193}, {"referenceID": 39, "context": "Finally, this paper is related to a growing body of work that capitalizes on large amounts of unlabeled video for visual recognition tasks [16, 43, 34, 12, 21, 22, 3, 29, 23, 24, 17, 38, 39, 1].", "startOffset": 139, "endOffset": 193}, {"referenceID": 30, "context": "Finally, this paper is related to a growing body of work that capitalizes on large amounts of unlabeled video for visual recognition tasks [16, 43, 34, 12, 21, 22, 3, 29, 23, 24, 17, 38, 39, 1].", "startOffset": 139, "endOffset": 193}, {"referenceID": 10, "context": "Finally, this paper is related to a growing body of work that capitalizes on large amounts of unlabeled video for visual recognition tasks [16, 43, 34, 12, 21, 22, 3, 29, 23, 24, 17, 38, 39, 1].", "startOffset": 139, "endOffset": 193}, {"referenceID": 17, "context": "Finally, this paper is related to a growing body of work that capitalizes on large amounts of unlabeled video for visual recognition tasks [16, 43, 34, 12, 21, 22, 3, 29, 23, 24, 17, 38, 39, 1].", "startOffset": 139, "endOffset": 193}, {"referenceID": 18, "context": "Finally, this paper is related to a growing body of work that capitalizes on large amounts of unlabeled video for visual recognition tasks [16, 43, 34, 12, 21, 22, 3, 29, 23, 24, 17, 38, 39, 1].", "startOffset": 139, "endOffset": 193}, {"referenceID": 1, "context": "Finally, this paper is related to a growing body of work that capitalizes on large amounts of unlabeled video for visual recognition tasks [16, 43, 34, 12, 21, 22, 3, 29, 23, 24, 17, 38, 39, 1].", "startOffset": 139, "endOffset": 193}, {"referenceID": 25, "context": "Finally, this paper is related to a growing body of work that capitalizes on large amounts of unlabeled video for visual recognition tasks [16, 43, 34, 12, 21, 22, 3, 29, 23, 24, 17, 38, 39, 1].", "startOffset": 139, "endOffset": 193}, {"referenceID": 19, "context": "Finally, this paper is related to a growing body of work that capitalizes on large amounts of unlabeled video for visual recognition tasks [16, 43, 34, 12, 21, 22, 3, 29, 23, 24, 17, 38, 39, 1].", "startOffset": 139, "endOffset": 193}, {"referenceID": 20, "context": "Finally, this paper is related to a growing body of work that capitalizes on large amounts of unlabeled video for visual recognition tasks [16, 43, 34, 12, 21, 22, 3, 29, 23, 24, 17, 38, 39, 1].", "startOffset": 139, "endOffset": 193}, {"referenceID": 34, "context": "Finally, this paper is related to a growing body of work that capitalizes on large amounts of unlabeled video for visual recognition tasks [16, 43, 34, 12, 21, 22, 3, 29, 23, 24, 17, 38, 39, 1].", "startOffset": 139, "endOffset": 193}, {"referenceID": 35, "context": "Finally, this paper is related to a growing body of work that capitalizes on large amounts of unlabeled video for visual recognition tasks [16, 43, 34, 12, 21, 22, 3, 29, 23, 24, 17, 38, 39, 1].", "startOffset": 139, "endOffset": 193}, {"referenceID": 0, "context": "Finally, this paper is related to a growing body of work that capitalizes on large amounts of unlabeled video for visual recognition tasks [16, 43, 34, 12, 21, 22, 3, 29, 23, 24, 17, 38, 39, 1].", "startOffset": 139, "endOffset": 193}, {"referenceID": 6, "context": "We propose to use generative adversarial networks [8], which have been shown to have good performance on image generation [28, 4].", "startOffset": 50, "endOffset": 53}, {"referenceID": 24, "context": "We propose to use generative adversarial networks [8], which have been shown to have good performance on image generation [28, 4].", "startOffset": 122, "endOffset": 129}, {"referenceID": 2, "context": "We propose to use generative adversarial networks [8], which have been shown to have good performance on image generation [28, 4].", "startOffset": 122, "endOffset": 129}, {"referenceID": 6, "context": "The main idea behind generative adversarial networks [8] is to train two networks: a generator network G tries to produce a video, and a discriminator network D tries to distinguish between \u201creal\u201c videos and \u201cfake\u201d generated videos.", "startOffset": 53, "endOffset": 56}, {"referenceID": 37, "context": "Moreover, since modeling that the background is stationary is important in video recognition tasks [41], it may be helpful in video generation as well.", "startOffset": 99, "endOffset": 103}, {"referenceID": 11, "context": "One Stream Architecture: We combine spatio-temporal convolutions [13, 37] with fractionally strided convolutions [47, 28] to generate video.", "startOffset": 65, "endOffset": 73}, {"referenceID": 33, "context": "One Stream Architecture: We combine spatio-temporal convolutions [13, 37] with fractionally strided convolutions [47, 28] to generate video.", "startOffset": 65, "endOffset": 73}, {"referenceID": 24, "context": "One Stream Architecture: We combine spatio-temporal convolutions [13, 37] with fractionally strided convolutions [47, 28] to generate video.", "startOffset": 113, "endOffset": 121}, {"referenceID": 24, "context": "We use an architecture inspired by [28], except extended in time.", "startOffset": 35, "endOffset": 39}, {"referenceID": 24, "context": "For f(z), we use the same network as the one-stream architecture, and for b(z) we use a similar generator architecture to [28].", "startOffset": 122, "endOffset": 126}, {"referenceID": 24, "context": "Our implementation is based off a modified version of [28] in Torch7.", "startOffset": 54, "endOffset": 58}, {"referenceID": 12, "context": "We use the Adam [14] optimizer and a fixed learning rate of 0.", "startOffset": 16, "endOffset": 20}, {"referenceID": 8, "context": "We use batch normalization [10] followed by the ReLU activation functions after every layer in the generator, except the output layers, which uses tanh.", "startOffset": 27, "endOffset": 31}, {"referenceID": 24, "context": "Following [28], we also use batch normalization in the discriminator except for the first layer and we instead use leaky ReLU [45].", "startOffset": 10, "endOffset": 14}, {"referenceID": 41, "context": "Following [28], we also use batch normalization in the discriminator except for the first layer and we instead use leaky ReLU [45].", "startOffset": 126, "endOffset": 130}, {"referenceID": 32, "context": "We downloaded over two million videos from Flickr [36] by querying for popular Flickr tags as well as querying for common English words.", "startOffset": 50, "endOffset": 54}, {"referenceID": 44, "context": "Filtered Unlabeled Videos: To evaluate generations, we use the Places2 pre-trained model [49] to automatically filter the videos by scene category.", "startOffset": 89, "endOffset": 93}, {"referenceID": 14, "context": "We extract SIFT keypoints [18], use RANSAC to estimate a homography (rotation, translation, scale) between adjacent frames, and warp frames to minimize background motion.", "startOffset": 26, "endOffset": 30}, {"referenceID": 26, "context": "Baseline: Since to our knowledge there are no existing large-scale generative models of video ([30] requires an input frame), we develop a simple but reasonable baseline for this task.", "startOffset": 95, "endOffset": 99}, {"referenceID": 31, "context": "We designed this experiment following advice from [35], which advocates evaluating generative models for the task at hand.", "startOffset": 50, "endOffset": 54}, {"referenceID": 29, "context": "We also add dropout [33] to the penultimate layer to reduce overfitting.", "startOffset": 20, "endOffset": 24}, {"referenceID": 28, "context": "Action Classification: We evaluated performance on classifying actions on UCF101 [32].", "startOffset": 81, "endOffset": 85}, {"referenceID": 28, "context": "Interestingly, while a randomly initialized network under-performs hand-crafted STIP features [32], the network initialized with our model significantly", "startOffset": 94, "endOffset": 98}, {"referenceID": 28, "context": "9% STIP Features [32] 43.", "startOffset": 17, "endOffset": 21}, {"referenceID": 7, "context": "9% Temporal Coherence [9] 45.", "startOffset": 22, "endOffset": 25}, {"referenceID": 17, "context": "4% Shuffle and Learn [21] 50.", "startOffset": 21, "endOffset": 25}, {"referenceID": 38, "context": "1% ImageNet Supervision [42] 91.", "startOffset": 24, "endOffset": 28}, {"referenceID": 28, "context": "Figure 4: Video Representation Learning: We evaluate the representation learned by the discriminator for action classification on UCF101 [32].", "startOffset": 137, "endOffset": 141}, {"referenceID": 17, "context": "Moreover, our model slightly outperforms another unsupervised video representation [21] despite using an order of magnitude fewer learned parameters and only 64 \u00d7 64 videos.", "startOffset": 83, "endOffset": 87}, {"referenceID": 17, "context": "Finally, our model slightly outperforms another recent unsupervised video representation learning approach [21].", "startOffset": 107, "endOffset": 111}, {"referenceID": 16, "context": "We can do this by attaching a fivelayer convolutional network to the front of the generator which encodes the image into the latent space, similar to a conditional generative adversarial network [20].", "startOffset": 195, "endOffset": 199}, {"referenceID": 43, "context": "(a) hidden unit that fires on \u201cperson\u201d (b) hidden unit that fires on \u201ctrain tracks\u201d Figure 6: Visualizing Representation: We visualize some hidden units in the encoder of the future generator, following the technique from [48].", "startOffset": 222, "endOffset": 226}, {"referenceID": 26, "context": "[30, 19] can generate video, but they require multiple input frames and empirically become blurry after extrapolating many frames.", "startOffset": 0, "endOffset": 8}, {"referenceID": 15, "context": "[30, 19] can generate video, but they require multiple input frames and empirically become blurry after extrapolating many frames.", "startOffset": 0, "endOffset": 8}, {"referenceID": 36, "context": "[40, 46] can predict optic flow from a single image, but they do not generate several frames of motion and may be susceptible to warping artifacts.", "startOffset": 0, "endOffset": 8}, {"referenceID": 42, "context": "[40, 46] can predict optic flow from a single image, but they do not generate several frames of motion and may be susceptible to warping artifacts.", "startOffset": 0, "endOffset": 8}, {"referenceID": 20, "context": "These visualizations suggest that scaling up future generation might be a promising supervisory signal for object recognition and complementary to [24, 5, 43].", "startOffset": 147, "endOffset": 158}, {"referenceID": 3, "context": "These visualizations suggest that scaling up future generation might be a promising supervisory signal for object recognition and complementary to [24, 5, 43].", "startOffset": 147, "endOffset": 158}, {"referenceID": 39, "context": "These visualizations suggest that scaling up future generation might be a promising supervisory signal for object recognition and complementary to [24, 5, 43].", "startOffset": 147, "endOffset": 158}], "year": 2016, "abstractText": "We capitalize on large amounts of unlabeled video in order to learn a model of scene dynamics for both video recognition tasks (e.g. action classification) and video generation tasks (e.g. future prediction). We propose a generative adversarial network for video with a spatio-temporal convolutional architecture that untangles the scene\u2019s foreground from the background. Experiments suggest this model can generate tiny videos up to a second at full frame rate better than simple baselines, and we show its utility at predicting plausible futures of static images. Moreover, experiments and visualizations show the model internally learns useful features for recognizing actions with minimal supervision, suggesting scene dynamics are a promising signal for representation learning. We believe generative video models can impact many applications in video understanding and simulation.", "creator": "LaTeX with hyperref package"}}}