{"id": "1610.04989", "review": {"conference": "EMNLP", "VERSION": "v1", "DATE_OF_SUBMISSION": "17-Oct-2016", "title": "Cached Long Short-Term Memory Neural Networks for Document-Level Sentiment Classification", "abstract": "meanwhile, biomedical processes have achieved great savings on sentiment storage due to apparent ability to alleviate retrieval poverty. however, all of the remaining challenges is to keep long history in document - form sentiment classification under standard weighted architecture because of the difficulty of the memory unit. and address this poverty, neural introduced a structurally encoded quasi - term memory neural module ( nos ) to remedy the recurring semantic gaps in long speeches. clstm introduces a compression mechanism, which divides memory into smaller copies under different playback rates generally thus enables the computation to keep significant information better atop a textual unit. the proposed clstm outperforms the state - of - living - art models on potentially publicly available system - level statistical library datasets.", "histories": [["v1", "Mon, 17 Oct 2016 07:28:06 GMT  (139kb,D)", "http://arxiv.org/abs/1610.04989v1", "Published as long paper of EMNLP2016"]], "COMMENTS": "Published as long paper of EMNLP2016", "reviews": [], "SUBJECTS": "cs.CL cs.NE", "authors": ["jiacheng xu", "danlu chen", "xipeng qiu", "xuanjing huang"], "accepted": true, "id": "1610.04989"}, "pdf": {"name": "1610.04989.pdf", "metadata": {"source": "CRF", "title": "Cached Long Short-Term Memory Neural Networks for Document-Level Sentiment Classification", "authors": ["Jiacheng Xu", "Danlu Chen", "Xipeng Qiu", "Xuanjing Huang"], "emails": ["jcxu13@fudan.edu.cn", "dlchen13@fudan.edu.cn", "xpqiu@fudan.edu.cn", "xjhuang@fudan.edu.cn"], "sections": [{"heading": null, "text": "Recently, neural networks have achieved great success on sentiment classification due to their ability to alleviate feature engineering. However, one of the remaining challenges is to model long texts in document-level sentiment classification under a recurrent architecture because of the deficiency of the memory unit. To address this problem, we present a Cached Long Short-Term Memory neural networks (CLSTM) to capture the overall semantic information in long texts. CLSTM introduces a cache mechanism, which divides memory into several groups with different forgetting rates and thus enables the network to keep sentiment information better within a recurrent unit. The proposed CLSTM outperforms the state-of-the-art models on three publicly available document-level sentiment analysis datasets."}, {"heading": "1 Introduction", "text": "Sentiment classification is one of the most widely used natural language processing techniques in many areas, such as E-commerce websites, online social networks, political orientation analyses (Wilson et al., 2009; O\u2019Connor et al., 2010), etc.\nRecently, deep learning approaches (Socher et al., 2013; Kim, 2014; Chen et al., 2015; Liu et al., 2016) have gained encouraging results on sentiment classification, which frees researchers from handcrafted feature engineering. Among these methods, Recurrent Neural Networks (RNNs) are one of the most\n\u2217 Corresponding author.\nprevalent architectures because of the ability to handle variable-length texts.\nSentence- or paragraph-level sentiment analysis expects the model to extract features from limited source of information, while document-level sentiment analysis demands more on selecting and storing global sentiment message from long texts with noises and redundant local pattern. Simple RNNs are not powerful enough to handle the overflow and to pick up key sentiment messages from relatively far time-steps .\nEfforts have been made to solve such a scalability problem on long texts by extracting semantic information hierarchically (Tang et al., 2015a; Tai et al., 2015), which first obtain sentence representations and then combine them to generate high-level document embeddings. However, some of these solutions either rely on explicit a priori structural assumptions or discard the order information within a sentence, which are vulnerable to sudden change or twists in texts especially a long-range one (McDonald et al., 2007; Mikolov et al., 2013). Recurrent models match people\u2019s intuition of reading word by word and are capable to model the intrinsic relations between sentences. By keeping the word order, RNNs could extract the sentence representation implicitly and meanwhile analyze the semantic meaning of a whole document without any explicit boundary.\nPartially inspired by neural structure of human brain and computer system architecture, we present the Cached Long Short-Term Memory neural networks (CLSTM) to capture the long-range sentiment information. In the dual store memory model\nar X\niv :1\n61 0.\n04 98\n9v 1\n[ cs\n.C L\n] 1\n7 O\nct 2\nproposed by Atkinson and Shiffrin (1968), memories can reside in the short-term \u201cbuffer\u201d for a limited time while they are simultaneously strengthening their associations in long-term memory. Accordingly, CLSTM equips a standard LSTM with a similar cache mechanism, whose internal memory is divided into several groups with different forgetting rates. A group with high forgetting rate plays a role as a cache in our model, bridging and transiting the information to groups with relatively lower forgetting rates. With different forgetting rates, CLSTM learns to capture, remember and forget semantics information through a very long distance.\nOur main contributions are as follows:\n\u2022 We introduce a cache mechanism to diversify the internal memory into several distinct groups with different memory cycles by squashing their forgetting rates. As a result, our model can capture the local and global emotional information, thereby better summarizing and analyzing sentiment on long texts in an RNN fashion. \u2022 Benefiting from long-term memory unit with a\nlow forgetting rate, we could keep the gradient stable in the long back-propagation process. Hence, our model could converge faster than a standard LSTM. \u2022 Our model outperforms state-of-the-art meth-\nods by a large margin on three document-level datasets (Yelp 2013, Yelp 2014 and IMDB). It worth noticing that some of the previous methods have utilized extra user and product information."}, {"heading": "2 Related Work", "text": "In this section, we briefly introduce related work in two areas: First, we discuss the existing documentlevel sentiment classification approaches; Second, we discuss some variants of LSTM which address the problem on storing the long-term information."}, {"heading": "2.1 Document-level Sentiment Classification", "text": "Document-level sentiment classification is a sticky task in sentiment analysis (Pang and Lee, 2008), which is to infer the sentiment polarity or intensity of a whole document. The most challenging part is that not every part of the document is equally informative for inferring the sentiment of the whole\ndocument (Pang and Lee, 2004; Yessenalina et al., 2010). Various methods have been investigated and explored over years (Wilson et al., 2005; Pang and Lee, 2008; Pak and Paroubek, 2010; Yessenalina et al., 2010; Moraes et al., 2013). Most of these methods depend on traditional machine learning algorithms, and are in need of effective handcrafted features.\nRecently, neural network based methods are prevalent due to their ability of learning discriminative features from data (Socher et al., 2013; Le and Mikolov, 2014; Tang et al., 2015a). Zhu et al. (2015) and Tai et al. (2015) integrate a tree-structured model into LSTM for better semantic composition; Bhatia et al. (2015) enhances document-level sentiment analysis by using extra discourse paring results. Most of these models work well on sentence-level or paragraph-level sentiment classification. When it comes to the document-level sentiment classification, a bottom-up hierarchical strategy is often adopted to alleviate the model complexity (Denil et al., 2014; Tang et al., 2015b)."}, {"heading": "2.2 Memory Augmented Recurrent Models", "text": "Although it is widely accepted that LSTM has more long-lasting memory units than RNNs, it still suffers from \u201cforgetting\u201d information which is too far away from the current point (Le et al., 2015; Karpathy et al., 2015). Such a scalability problem of LSTMs is crucial to extend some previous sentence-level work to document-level sentiment analysis.\nVarious models have been proposed to increase the ability of LSTMs to store long-range information (Le et al., 2015; Salehinejad, 2016) and two kinds of approaches gain attraction. One is to augment LSTM with an external memory (Sukhbaatar et al., 2015; Monz, 2016), but they are of poor performance on time because of the huge external memory matrix. Unlike these methods, we fully exploit the potential of internal memory of LSTM by adjusting its forgetting rates.\nThe other one tries to use multiple time-scales to distinguish different states (El Hihi and Bengio, 1995; Koutn\u0131\u0301k et al., 2014; Liu et al., 2015). They partition the hidden states into several groups and each group is activated and updated at different frequencies (e.g. one group updates every 2 time-step, the other updates every 4 time-step). In these meth-\nods, different memory groups are not fully interconnected, and the information is transmitted from faster groups to slower ones, or vice versa.\nHowever, the memory of slower groups are not updated at every step, which may lead to sentiment information loss and semantic inconsistency. In our proposed CLSTM, we assign different forgetting rates to memory groups. This novel strategy enable each memory group to be updated at every time-step, and every bit of the long-term and shortterm memories in previous time-step to be taken into account when updating."}, {"heading": "3 Long Short-Term Memory Networks", "text": "Long short-term memory network (LSTM) (Hochreiter and Schmidhuber, 1997) is a typical recurrent neural network, which alleviates the problem of gradient diffusion and explosion. LSTM can capture the long dependencies in a sequence by introducing a memory unit and a gate mechanism which aims to decide how to utilize and update the information kept in memory cell.\nFormally, the update of each LSTM component can be formalized as:\ni(t) = \u03c3(Wix (t) +Uih (t\u22121)), (1)\nf (t) = \u03c3(Wfx (t) +Ufh (t\u22121)), (2)\no(t) = \u03c3(Wox (t) +Uoh (t\u22121)), (3)\nc\u0303(t) = tanh(Wcx (t) +Uch (t\u22121)), (4) c(t) = f (t) c(t\u22121) + i(t) c\u0303(t), (5) h(t) = o(t) tanh(c(t)), (6)\nwhere \u03c3 is the logistic sigmoid function. Operator is the element-wise multiplication operation. i(t), f (t), o(t) and c(t) are the input gate, forget gate, output gate, and memory cell activation vector at time-step t respectively, all of which have the same size as the hidden vector h(t) \u2208 RH . Wi, Wf , Wo \u2208 RH\u00d7d and Ui, Uf , Uo \u2208 RH\u00d7H are trainable parameters. Here, H and d are the dimensionality of hidden layer and input respectively."}, {"heading": "4 Cached Long Short-Term Memory Neural Network", "text": "LSTM is supposed to capture the long-term and short-term dependencies simultaneously, but when\ndealing with considerably long texts, LSTM also fails on capturing and understanding significant sentiment message (Le et al., 2015). Specifically, the error signal would nevertheless suffer from gradient vanishing in modeling long texts with hundreds of words and thus the network is difficult to train.\nSince the standard LSTM inevitably loses valuable features, we propose a cached long short-term memory neural networks (CLSTM) to capture information in a longer steps by introducing a cache mechanism. Moreover, in order to better control and balance the historical message and the incoming information, we adopt one particular variant of LSTM proposed by Greff et al. (2015), the Coupled Input and Forget Gate LSTM (CIFG-LSTM).\nCoupled Input and Forget Gate LSTM Previous studies show that the merged version gives performance comparable to a standard LSTM on language modeling and classification tasks because using the input gate and forget gate simultaneously incurs redundant information (Chung et al., 2014; Greff et al., 2015).\nIn the CIFG-LSTM, the input gate and forget gate are coupled as one uniform gate, that is, let i(t) = 1 \u2212 f (t). We use f (t) to denote the coupled gate. Formally, we will replace Eq. 5 as below:\nc(t) = f (t) c(t\u22121) + (1\u2212 f (t)) c\u0303(t) (7)\nFigure 1 gives an illustrative comparison of a standard LSTM and the CIFG-LSTM.\nCached LSTM Cached long short-term memory neural networks (CLSTM) aims at capturing the long-range information by a cache mechanism, which divides memory into several groups, and dif-\nferent forgetting rates, regarded as filters, are assigned to different groups.\nDifferent groups capture different-scale dependencies by squashing the scales of forgetting rates. The groups with high forgetting rates are short-term memories, while the groups with low forgetting rates are long-term memories.\nSpecially, we divide the memory cells into K groups {G1, \u00b7 \u00b7 \u00b7 , GK}. Each group includes a internal memory ck, output gate ok and forgetting rate rk. The forgetting rate of different groups are squashed in distinct ranges.\nWe modify the update of a LSTM as follows.\nr (t) k = \u03c8k \u03c3(Wkrx(t) + K\u2211 j=1 Uj\u2192kf h (t\u22121) j )  , (8)\no (t) k = \u03c3(W k ox (t) + K\u2211 j=1 Uj\u2192ko h (t\u22121) j ), (9)\nc\u0303 (t) k = tanh(W k cx (t) + K\u2211 j=1 Uj\u2192kc h (t\u22121) j ), (10)\nc (t) k = (1\u2212 r (t) k ) c (t\u22121) k + (r (t) k ) c\u0303 (t) k , (11) h(t)k = o (t) k tanh(c (t) k ), (12)\nwhere r(t)k represents forgetting rate of the k-th memory group at step t; \u03c8k is a squash function, which constrains the value of forgetting rate rk within a range. To better distinguish the different role of each group, its forgetting rate is squashed into a distinct area. The squash function \u03c8k(z) could be formalized as:\nrk = \u03c8k(z) = 1 K \u00b7 z+ k \u2212 1 K , (13)\nwhere z \u2208 (0, 1) is computed by logistic sigmoid function. Therefore, rk can constrain the forgetting rate in the range of (k\u22121K , k K ).\nIntuitively, if a forgetting rate rk approaches to 0, the group k tends to be the long-term memory; if a rk approaches to 1, the group k tends to be the shortterm memory. Therefore, group G1 is the slowest, while groupGK is the fastest one. The faster groups are supposed to play a role as a cache, transiting information from faster groups to slower groups.\nBidirectional CLSTM Graves and Schmidhuber (2005) proposed a Bidirectional LSTM (B-LSTM) model, which utilizes additional backward information and thus enhances the memory capability.\nWe also employ the bi-directional mechanism on CLSTM and words in a text will receive information from both sides of the context. Formally, the outputs of forward LSTM for the k-th group is [ \u2212\u2192 h (1) k , \u2212\u2192 h (2) k , . . . , \u2212\u2192 h (T ) k ]. The outputs of backward LSTM for the k-th group is [ \u2190\u2212 h (1) k , \u2190\u2212 h (2) k , . . . , \u2190\u2212 h (T ) k ].\nHence, we encode each word wt in a given text w1:T as h (t) k :\nh (t) k =\n\u2212\u2192 h\n(t) k \u2295\n\u2190\u2212 h\n(t) k , (14)\nwhere the \u2295 indicates concatenation operation.\nTask-specific Output Layer for Document-level Sentiment Classification With the capability of modeling long text, we can use our proposed model to analyze sentiment in a document. Figure 2 gives an overview of the architecture.\nSince the first group, the slowest group, is supposed to keep the long-term information and can better represent a whole document, we only utilize the final state of this group to represent a document. As for the B-CLSTM, we concatenate the state of the first group in the forward LSTM at T -th time-step and the first group in the backward LSTM at first time-step.\nThen, a fully connected layer followed by a softmax function is used to predict the probability distribution over classes for a given input. Formally, the probability distribution p is:\np = softmax(Wp \u00d7 z+ bp), (15)\nwhere Wp and bp are model\u2019s parameters. Here z is \u2212\u2192 h\n(T ) 1 in CLSTM, and z is [\n\u2212\u2192 h\n(T ) 1 \u2295\n\u2190\u2212 h\n(1) 1 ] in B-\nCLSTM."}, {"heading": "5 Training", "text": "The objective of our model is to minimize the crossentropy error of the predicted and true distributions. Besides, the objective includes an L2 regularization term over all parameters. Formally, suppose we have m train sentence and label pairs (w(i)1:Ti , y\n(i))mi=1, the object is to minimize the objective function J(\u03b8):\nJ(\u03b8) = \u2212 1 m m\u2211 i=1 logp (i) y(i) + \u03bb 2 ||\u03b8||2, (16)\nwhere \u03b8 denote all the trainable parameters of our model."}, {"heading": "6 Experiment", "text": "In this section, we study the empirical result of our model on three datasets for document-level sentiment classification. Results show that the proposed model outperforms competitor models from several aspects when modelling long texts."}, {"heading": "6.1 Datasets", "text": "Most existing datasets for sentiment classification such as Stanford Sentiment Treebank (Socher et al., 2013) are composed of short paragraphs with several sentences, which cannot evaluate the effectiveness of the model under the circumstance of encoding long texts. We evaluate our model on three popular real-world datasets, Yelp 2013, Yelp 2014 and\nIMDB. Table 1 shows the statistical information of the three datasets. All these datasets can be publicly accessed1. We pre-process and split the datasets in the same way as Tang et al. (2015b) did.\n\u2022 Yelp 2013 and Yelp 2014 are review datasets derived from Yelp Dataset Challenge2 of year 2013 and 2014 respectively. The sentiment polarity of each review is 1 star to 5 stars, which reveals the consumers\u2019 attitude and opinion towards the restaurants. \u2022 IMDB is a popular movie review dataset con-\nsists of 84919 movie reviews ranging from 1 to 10. Average length of each review is 394.6 words, which is much larger than the length of two Yelp review datasets."}, {"heading": "6.2 Evaluation Metrics", "text": "We use Accuracy (Acc.) and MSE as evaluation metrics for sentiment classification. Accuracy is a standard metric to measure the overall classification result and Mean Squared Error (MSE) is used to figure out the divergences between predicted sentiment labels and the ground truth ones."}, {"heading": "6.3 Baseline Models", "text": "We compare our model, CLSTM and B-CLSTM with the following baseline methods.\n1http://ir.hit.edu.cn/\u02dcdytang/paper/ acl2015/dataset.7z\n2http://www.yelp.com/dataset_challenge\n\u2022 CBOW sums the word vectors and applies a non-linearity followed by a softmax classification layer. \u2022 JMARS is one of the state-of-the-art recom-\nmendation algorithm, which leverages user and aspects of a review with collaborative filtering and topic modeling. \u2022 CNN UPNN (CNN) (Tang et al., 2015b) can be\nregarded as a CNN (Kim, 2014). Multiple filters are sensitive to capture different semantic features during generating a representation in a bottom-up fashion. \u2022 RNN is a basic sequential model to model texts\n(Elman, 1991). \u2022 LSTM is a recurrent neural network with mem-\nory cells and gating mechanism (Hochreiter and Schmidhuber, 1997). \u2022 BLSTM is the bidirectional version of LSTM,\nand can capture more structural information and longer distance during looking forward and back (Graves et al., 2013). \u2022 CIFG-LSTM & CIFG-BLSTM are Coupled\nInput Forget Gate LSTM and BLSTM, denoted as CIFG-LSTM and CIFG-BLSTM respectively (Greff et al., 2015). They combine the input and forget gate of LSTM and require smaller number of parameters in comparison with the standard LSTM."}, {"heading": "6.4 Hyper-parameters and Initialization", "text": "For parameter configuration, we choose parameters on validation set mainly according to classification accuracy for convenience because MSE always has strong correlation with accuracy. The dimension of pre-trained word vectors is 50. We use 120 as the dimension of hidden units, and choose weight decay among { 5e\u22124, 1e\u22124, 1e\u22125 }. We use Adagrad (Duchi et al., 2011) as optimizer and its initial learning rate is 0.01. Batch size is chosen among { 32, 64, 128 } for efficiency. For CLSTM, the number of memory groups is chosen upon each dataset, which will be discussed later. We remain the total number of the hidden units unchanged. Given 120 neurons in all for instance, there are four memory groups and each of them has 30 neurons. This makes model comparable to (B)LSTM. Table 3 shows the optimal hyper-parameter configurations for each dataset.\nFor model initialization, we initialize all recurrent matrices with randomly sampling from uniform distribution in [-0.1, 0.1]. Besides, we use GloVe(Pennington et al., 2014) as pre-trained word vectors. The word embeddings are fine-tuned during training. Hyper-parameters achieving best results on the validation set are chosen for final evaluation on test set."}, {"heading": "6.5 Results", "text": "The classification accuracy and mean square error (MSE) of our models compared with other competitive models are shown in Table 2. When comparing our models to other neural network models, we have several meaningful findings.\n1. Among all unidirectional sequential models, RNN fails to capture and store semantic features while vanilla LSTM preserves sentimental messages much longer than RNN. It shows that internal memory plays a key role in text modeling. CIFG-LSTM gives performance comparable to vanilla LSTM.\n2. With the help of bidirectional architecture, models could look backward and forward to capture features in long-range from global perspective. In sentiment analysis, if users show their opinion at the beginning of their review, single directional models will possibly forget these hints.\n3. The proposed CLSTM beats the CIFG-LSTM and vanilla LSTM and even surpasses the bidirectional models. In Yelp 2013, CLSTM achieves 59.4% in accuracy, which is only 0.4 percent worse than B-CLSTM, which reveals that the cache mechanism has successfully and effectively stored valuable information without the support from bidirectional structure.\n4. Compared with existing best methods, our\nmodel has achieved new state-of-the-art results by a large margin on all documentlevel datasets in terms of classification accuracy. Moreover, B-CLSTM even has surpassed JMARS and CNN (UPNN) methods which utilized extra user and product information.\n5. In terms of time complexity and numbers of parameters, our model keeps almost the same as its counterpart models while models of hierarchically composition may require more computational resources and time."}, {"heading": "6.6 Rate of Convergence", "text": "We compare the convergence rates of our models, including CIFG-LSTM, CIFG-BLSTM and BCLSTM, and the baseline models (LSTM and BLSTM). We configure the hyper-parameter to make sure every competing model has approximately the same numbers of parameters, and various models have shown different convergence rates in Figure 3. In terms of convergence rate, B-CLSTM beats other competing models. The reason why BCLSTM converges faster is that the splitting memory groups can be seen as a better initialization and constraints during the training process."}, {"heading": "6.7 Effectiveness on Grouping Memory", "text": "For the proposed model, the number of memory groups is a highlight. In Figure 4, we plot the best prediction accuracy (Y-axis) achieved in validation\nset with different number of memory groups on all datasets. From the diagram, we can find that our model outperforms the baseline method. In Yelp 2013, when we split the memory into 4 groups, it achieves the best result among all tested memory group numbers. We can observe the dropping trends when we choose more than 5 groups.\nFor fair comparisons, we set the total amount of neurons in our model to be same with vanilla LSTM. Therefore, the more groups we split, the less the neurons belongs to each group, which leads to a worse\ncapacity than those who have sufficient neurons for each group."}, {"heading": "6.8 Sensitivity on Document Length", "text": "We also investigate the performance of our model on IMDB when it encodes documents of different lengths. Test samples are divided into 10 groups with regard to the length. From Figure 5, we can draw several thoughtful conclusions.\n1. Bidirectional models have much better performance than the counterpart models.\n2. The overall performance of B-CLSTM is better than CIFG-BLSTM. This means that our model is adaptive to both short texts and long documents. Besides, our model shows power in dealing with very long texts in comparison with CIFG-BLSTM.\n3. CBOW is slightly better than CIFG-LSTM due to LSTM forgets a large amount of information during the unidirectional propagation."}, {"heading": "7 Conclusion", "text": "In this paper, we address the problem of effectively analyzing the sentiment of document-level texts in an RNN architecture. Similar to the memory structure of human, memory with low forgetting rate captures the global semantic features while memory with high forgetting rate captures the local semantic features. Empirical results on three real-world document-level review datasets show that our model outperforms state-of-the-art models by a large margin.\nFor future work, we are going to design a strategy to dynamically adjust the forgetting rates for finegrained document-level sentiment analysis."}, {"heading": "Acknowledgments", "text": "We appreciate the constructive work from Xinchi Chen. Besides, we would like to thank the anonymous reviewers for their valuable comments. This work was partially funded by National Natural Science Foundation of China (No. 61532011 and 61672162), the National High Technology Research and Development Program of China (No. 2015AA015408)."}], "references": [], "referenceMentions": [], "year": 2016, "abstractText": "Recently, neural networks have achieved great<lb>success on sentiment classification due to their<lb>ability to alleviate feature engineering. How-<lb>ever, one of the remaining challenges is to<lb>model long texts in document-level sentiment<lb>classification under a recurrent architecture<lb>because of the deficiency of the memory unit.<lb>To address this problem, we present a Cached<lb>Long Short-Term Memory neural networks<lb>(CLSTM) to capture the overall semantic in-<lb>formation in long texts. CLSTM introduces<lb>a cache mechanism, which divides memory<lb>into several groups with different forgetting<lb>rates and thus enables the network to keep<lb>sentiment information better within a recur-<lb>rent unit. The proposed CLSTM outperforms<lb>the state-of-the-art models on three publicly<lb>available document-level sentiment analysis<lb>datasets.", "creator": "LaTeX with hyperref package"}}}