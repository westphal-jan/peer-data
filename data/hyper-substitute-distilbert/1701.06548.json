{"id": "1701.06548", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "23-Jan-2017", "title": "Regularizing Neural Networks by Penalizing Confident Output Distributions", "abstract": "concepts slowly explore regularizing neural networks by penalizing relative entropy output distributions. that show clearly penalizing low time transfer distributions, uncertainty has been shown to improve exploration in reinforcement learning, possibly producing especially strong leverage in supervised learning. meanwhile, approaches describe a stronger entropy based confidence penalty at probability networks implementing the integration of the sample norm. we exhaustively evaluate newly proposed comprehensive project solutions implement smoothing on seemingly common benchmarks : image merging ( mnist and cifar - 10 ), language modeling ( swiss treebank ), numerical inversion ( penn'83 % - slavic - german ), and hierarchical analysis ( gi per hoffman ). we find evidence both label sorting and the confidence penalty improve read - matching - the - atom models across benchmarks without modifying existing frames, thereby promising wide applicability motivated these regularizers.", "histories": [["v1", "Mon, 23 Jan 2017 18:35:28 GMT  (64kb,D)", "http://arxiv.org/abs/1701.06548v1", "Submitted to ICLR 2017"]], "COMMENTS": "Submitted to ICLR 2017", "reviews": [], "SUBJECTS": "cs.NE cs.LG", "authors": ["gabriel pereyra", "george tucker", "jan chorowski", "{\\l}ukasz kaiser", "geoffrey hinton"], "accepted": false, "id": "1701.06548"}, "pdf": {"name": "1701.06548.pdf", "metadata": {"source": "CRF", "title": "REGULARIZING NEURAL NETWORKS BY PENALIZING CONFIDENT OUTPUT DISTRIBUTIONS", "authors": ["Gabriel Pereyra", "George Tucker", "Jan Chorowski", "Geoffrey Hinton"], "emails": ["pereyra@google.com", "gjt@google.com", "chorowski@google.com", "lukaszkaiser@google.com", "geoffhinton@google.com"], "sections": [{"heading": null, "text": "We systematically explore regularizing neural networks by penalizing low entropy output distributions. We show that penalizing low entropy output distributions, which has been shown to improve exploration in reinforcement learning, acts as a strong regularizer in supervised learning. Furthermore, we connect a maximum entropy based confidence penalty to label smoothing through the direction of the KL divergence. We exhaustively evaluate the proposed confidence penalty and label smoothing on 6 common benchmarks: image classification (MNIST and Cifar-10), language modeling (Penn Treebank), machine translation (WMT\u201914 English-to-German), and speech recognition (TIMIT and WSJ). We find that both label smoothing and the confidence penalty improve state-of-the-art models across benchmarks without modifying existing hyperparameters, suggesting the wide applicability of these regularizers."}, {"heading": "1 INTRODUCTION", "text": "Large neural networks with millions of parameters achieve strong performance on image classification (Szegedy et al., 2015a), machine translation (Wu et al., 2016), language modeling (Jozefowicz et al., 2016), and speech recognition (Graves et al., 2013). However, despite using large datasets, neural networks are still prone to overfitting. Numerous techniques have been proposed to prevent overfitting, including early stopping, L1/L2 regularization (weight decay), dropout (Srivastava et al., 2014), and batch normalization (Ioffe & Szegedy, 2015). These techniques, along with most other forms of regularization, act on the hidden activations or weights of a neural network. Alternatively, regularizing the output distribution of large, deep neural networks has largely been unexplored.\nTo motivate output regularizers, we can view the knowledge of a model as the conditional distribution it produces over outputs given an input (Hinton et al., 2015) as opposed to the learned values of its parameters. Given this functional view of knowledge, the probabilities assigned to class labels that are incorrect (according to the training data) are part of the knowledge of the network. For example, when shown an image of a BMW, a network that assigns a probability of 10\u22123 to \u201cAudi\u201d and 10\u22129 to \u201ccarrot\u201d is clearly better than a network that assigns 10\u22129 to \u201cAudi\u201d and 10\u22123 to carrot, all else being equal. One reason it is better is that the probabilities assigned to incorrect classes are an indication of how the network generalizes. Distillation (Hinton et al., 2015; Bucilu et al., 2006) exploits this fact by explicitly training a small network to assign the same probabilities to incorrect classes as a large network or ensemble of networks that generalizes well. Further, by operating on the output distribution that has a natural scale rather than on internal weights, whose significance depends on the values of the other weights, output regularization has the property that it is invariant to the parameterization of the underlying neural network.\n\u2217Work done as part of the Google Brain Residency Program \u2020Equal Contribution\nar X\niv :1\n70 1.\n06 54\n8v 1\n[ cs\n.N E\n] 2\n3 Ja\nn 20\nIn this paper, we systematically evaluated two output regularizers: a maximum entropy based confidence penalty and label smoothing (uniform and unigram) for large, deep neural networks on 6 common benchmarks: image classification (MNIST and Cifar-10), language modeling (Penn Treebank), machine translation (WMT\u201914 English-to-German), and speech recognition (TIMIT and WSJ). We find that both label smoothing and the confidence penalty improve state-of-the-art models across benchmarks without modifying existing hyperparameters."}, {"heading": "2 RELATED WORK", "text": "The maximum entropy principle (Jaynes, 1957) has a long history with deep connections to many areas of machine learning including unsupervised learning, supervised learning, and reinforcement learning. In supervised learning, we can search for the model with maximum entropy subject to constraints on empirical statistics, which naturally gives rise to maximum likelihood in log-linear models (see (Berger et al., 1996) for a review). Deterministic annealing Rose (1998) is a general approach for optimization that is widely applicable, avoids local minima, and can minimize discrete objectives, and it can be derived from the maximum entropy principle. Closely related to our work, Miller et al. (1996) apply deterministic annealing to train multilayer perceptrons, where an entropy based regularizer is introduced and slowly annealed. However, their focus is avoiding poor initialization and local minima, and while they find that deterministic annealing helps, the improvement diminishes quickly as the number of hidden units exceeds eight.\nIn reinforcement learning, encouraging the policy to have an output distribution with high entropy has been used to improve exploration (Williams & Peng, 1991). This prevents the policy from converging early and leads to improved performance (Mnih et al., 2016). Penalizing low entropy has also been used when combining reinforcement learning and supervised learning to train a neural speech recognition model to learn when to emit tokens (Luo et al., 2016). When learning to emit, the entropy of the emission policy was added to the training objective and was annealed throughout training. Indeed, in recent work on reward augmented maximum likelihood (Norouzi et al., 2016), this entropy augmented reinforcement learning objective played a direct role in linking maximum likelihood and reinforcement learning objectives.\nPenalizing the entropy of a network\u2019s output distribution has not been evaluated for large deep neural networks in supervised learning, but a closely related idea, label smoothing regularization, has been shown to improve generalization (Szegedy et al., 2015b). Label smoothing regularization estimates the marginalized effect of label-dropout during training, reducing overfitting by preventing a network from assigning full probability to each training example and maintaining a reasonable ratio between the logits of the incorrect classes. Simply adding label noise has also been shown to be effective at regularizing neural networks (Xie et al., 2016). Instead of smoothing the labels with a uniform distribution, as in label smoothing, we can smooth the labels with a teacher model (Hinton et al., 2015) or the model\u2019s own distribution (Reed et al., 2014). Distillation and self-distillation both regularize a network by incorporating information about the ratios between incorrect classes.\nVirtual adversarial training (VAT) (Miyato et al., 2015) is another promising smoothing regularizer. However, we did not compare to VAT because it has multiple hyperparameters and the approximated gradient of the local distributional smoothness can be computed with no more than three pairs of forward and back propagations, which is significantly more computation in grid-searching and training than the other approaches we compared to."}, {"heading": "3 DIRECTLY PENALIZING CONFIDENCE", "text": "Confident predictions correspond to output distributions that have low entropy. A network is overconfident when it places all probability on a single class in the training set, which is often a symptom of overfitting (Szegedy et al., 2015b). The confidence penalty constitutes a regularization term that prevents these peaked distributions, leading to better generalization.\nA neural network produces a conditional distribution p\u03b8(y|x) over classes y given an input x through a softmax function. The entropy of this conditional distribution is given by\nH(p\u03b8(y|x)) = \u2212 \u2211 i p\u03b8(yi|x) log(p\u03b8(yi|x)).\nTo penalize confident output distributions, we add the negative entropy to the negative log-likelihood during training\nL(\u03b8) = \u2212 \u2211 log p\u03b8(y|x)\u2212 \u03b2H(p\u03b8(y|x)),\nwhere \u03b2 controls the strength of the confidence penalty. Notably, the gradient of the entropy term with respect to the logits is simple to compute. Denoting the ith logit by zi, then\n\u2202H(p\u03b8)\n\u2202zi = p\u03b8(yi|x) (\u2212 log p\u03b8(yi|x)\u2212H(p\u03b8)) ,\nwhich is the weighted deviation from the mean."}, {"heading": "3.1 ANNEALING AND THRESHOLDING THE CONFIDENCE PENALTY", "text": "In reinforcement learning, penalizing low entropy distributions prevents a policy network from converging early and encourages exploration. However, in supervised learning, we typically want quick convergence, while preventing overfitting near the end of training, suggesting a confidence penalty that is weak at the beginning of training and strong near convergence. A simple way to achieve this is to anneal the confidence penalty.\nAnother way to strengthen the confidence penalty as training progresses is to only penalize output distributions when they are below a certain entropy threshold. We can achieve this by adding a hinge loss to the confidence penalty, leading to an objective of the form\nL(\u03b8) = \u2212 \u2211 log p\u03b8(y|x)\u2212 \u03b2max(0,\u0393\u2212H(p\u03b8(y|x)),\nwhere \u0393 is the entropy threshold below which we begin applying the confidence penalty.\nInitial experiments suggest that thresholding the confidence penalty leads to faster convergence at the cost of introducing an extra hyper-parameter. For the majority of our experiments, we were able to achieve comparable performance without using the thresholded version. For the sake of simplicity, we focus on the single hyper-parameter version in our experiments."}, {"heading": "3.2 CONNECTION TO LABEL SMOOTHING", "text": "Label smoothing estimates the marginalized effect of label noise during training. When the prior label distribution is uniform, label smoothing is equivalent to adding the KL divergence between the uniform distribution u and the network\u2019s predicted distribution p\u03b8 to the negative log-likelihood\nL(\u03b8) = \u2212 \u2211 log p\u03b8(y|x)\u2212DKL(u\u2016p\u03b8(y|x)).\nBy reversing the direction of the KL divergence, DKL(p\u03b8(y|x)\u2016u), we recover the confidence penalty. This interpretation suggests further confidence regularizers that use alternative target distributions instead of the uniform distribution. We leave the exploration of these regularizers to future work."}, {"heading": "4 EXPERIMENTS", "text": "We evaluated the confidence penalty and label smoothing on MNIST and CIFAR-10 for image classification, Penn Treebank for language modeling, WMT\u201914 English-to-German for machine translation, and TIMIT and WSJ for speech recognition. All models were implemented using TensorFlow (Abadi et al., 2016) and trained on NVIDIA Tesla K40 or K80 GPUs."}, {"heading": "4.1 IMAGE CLASSIFICATION", "text": ""}, {"heading": "4.1.1 MNIST", "text": "As a preliminary experiment, we evaluated the approaches on the standard MNIST digit recognition task. We used the standard split into 60k training images and 10k testing images. We use the last 10k images of the training set as a held-out validation set for hyper-parameter tuning and then retrained the models on the entire dataset with the best configuration.\nWe trained fully-connected, ReLu activation neural networks with 1024 units per layer and two hidden layers. Weights were initialized from a normal distribution with standard deviation 0.01. Models were optimized with stochastic gradient descent with a constant learning rate 0.05 (except for dropout where we set the learning rate to 0.001).\nFor label smoothing, we varied the smoothing parameter in the range [0.05, 0.1, 0.2, 0.3, 0.4, 0.5], and found 0.1 to work best for both methods. For the confidence penalty, we varied the weight values over [0.1, 0.3, 0.5, 1.0, 2.0, 4.0, 8.0] and found a confidence penalty weight of 1.0 to work best.\nWe also plotted the norm of the gradient as training progressed in Figure 2. We observed that label smoothing and confidence penalty had smaller gradient norms and converged more quickly than models regularized with dropout. If the output distributions is peaked on a misclassified example, the model receives a large gradient. This may explain why the regularized models have smaller gradient norms."}, {"heading": "4.1.2 CIFAR-10", "text": "CIFAR-10 is an image classification dataset consisting of 32x32x3 RGB images of 10 classes. The dataset is split into 50k training images and 10k testing images. We use the last 5k images of the training set as a held-out validation set for hyper-parameter tuning, as is common practice.\nFor our experiments, we used a densely connected convolutional neural network, which represents the current state-of-the-art on CIFAR-10 (Huang et al., 2016a). We use the small configuration from (Huang et al., 2016a), which consists of 40-layers, with a growth rate of 12. All models were trained for 300 epochs, with a batch-size of 50 and a learning rate 0.1. The learning rate was reduced by a factor of 10 at 150 and 225 epochs. We present results for training without data-augmentation. We found that the confidence penalty did not lead to improved performance when training with data augmentation, however neither did other regularization techniques, including dropout.\nFor our final test scores, we trained on the entire training set. For label smoothing, we tried smoothing parameter values of [0.05, 0.1, 0.2, 0.3, 0.4, 0.5], and found 0.1 to work best. For the confidence penalty, we performed a grid search over confidence penalty weight values of [0.1, 0.25, 0.5, 1.0, 1.5] and found a confidence penalty weight of 0.1 to work best."}, {"heading": "4.2 LANGUAGE MODELING", "text": "For language modeling, we found that confidence penalty significantly outperforms label noise and label smoothing. We performed word-level language modeling experiments using the Penn Treebank dataset (PTB) (Marcus et al., 1993). We used the hyper-parameter settings from the large configuration in (Zaremba et al., 2014). Briefly, we used a 2-layer, 1500-unit LSTM, with 65% dropout applied on all non-recurrent connections. We trained using stochastic gradient descent for 55 epochs, decaying the learning rate by 1.15 after 14 epochs, and clipped the norm of the gradients when they were larger than 10.\nFor label noise and label smoothing, we performed a grid search over noise and smoothing values of [0.05, 0.1, 0.15, 0.2, 0.3, 0.4, 0.5]. For label noise, we found 0.1 to work best. For label smoothing, we found 0.1 to work best. For the confidence penalty, we performed a grid search over confidence penalty weight values of [0.1, 0.5, 1.0, 2.0, 3.0]. We found a confidence penalty weight of 2.0 to work best, which led to an improvement of 3.7 perplexity points over the baseline.\nFor reference, we also include results of the existing state-of-the-art models for the word-level language modeling task on PTB. Variational dropout (Gal, 2015) applies a fixed dropout mask (stochastic for each sample) at each time-step, instead of resampling at each time-step as in traditional dropout. Note, that we do not include the variational dropout results that use Monte Carlo (MC) model averaging, which achieves lower perplexity on the test set but requires 1000 model evaluations, which are then averaged. Recurrent highway networks (Zilly et al., 2016) currently represent the state-of-the-art performance on PTB."}, {"heading": "4.3 MACHINE TRANSLATION", "text": "For machine translation, we evaluated the confidence penalty on the WMT\u201914 English-to-German translation task using Google\u2019s production-level translation system Wu et al. (2016). The training set consists of 5M sentence pairs, and we used newstest2012 and newtests2013 for validation and newstest2014 for testing. We report tokenized BLEU scores as computed by the multi-bleu.perl script from the Moses translation machine translation package.\nOur model was an 8-layer sequence-to-sequence model with attention (Bahdanau et al., 2014). The first encoder was a bidirectional LSTM, the remaining encoder and decoder layers were unidirectional LSTMs, and the attention network was a single layer feed-forward network. Each layer had 512 units (compared to 1024 in (Wu et al., 2016)). The model was trained using 12 replicas running concurrently with asynchronous updates. Dropout of 30% was applied as described in (Zaremba et al., 2014). Optimization used a mix of Adam and SGD with gradient clipping. Unlike (Wu et al., 2016), we did not use reinforcement learning to fine-tune our model. We used a beam size of 12 during decoding. For more details, see (Wu et al., 2016).\nFor label smoothing, we performed a grid search over values [0.05, 0.1, 0.2, 0.3, 0.4, 0.5] and found 0.1 to work best for both uniform and unigram smoothing. For the confidence penalty, we searched over values of [0.5, 2.5, 4.5] and found a value of 2.5 to work best . For machine translation, we found label smoothing slightly outperformed confidence penalty. When applied without dropout, both lead to an improvement of just over 1 BLEU point (dropout leads to an improvement of just over 2 BLEU points). However, when combined with dropout, the effect of both regularizers was diminished."}, {"heading": "4.4 SPEECH RECOGNITION", "text": ""}, {"heading": "4.4.1 TIMIT", "text": "In the TIMIT corpus, the training set consists of 3512 utterances, the validation set consists of 184 utterances and the test set consists of 192 utterances. All 61 phonemes were used during training and decoding, and during scoring, these 61 phonemes were reduced to 39 to compute the phoneme error rate (PER).\nAs our base model, we used a sequence-to-sequence model with attention. The encoder consisted of 3 bidirectional LSTM layers, the decoder consisted of a single unidirectional LSTM layer, and the attention network consisted of a single layer feed-forward network. All layers consisted of 256 units. Dropout of 15% was applied as described in Zaremba et al. (2014). We trained the model with asynchronous SGD with 5 replicas. We used a batch size of 32, a learning rate of 0.01, and momentum of 0.9. Gradients were clipped at 5.0. For more details, see Norouzi et al. (2016).\nFor label smoothing, we performed a grid search over values [0.05, 0.1, 0.15, 0.2, 0.3, 0.4, 0.5, 0.6, 0.8] and found 0.2 to work best. For the confidence penalty, we performed a grid search over values of [0.125, 0.25, 0.5, 1.0, 2.0, 4.0, 8.0] and found a value of 1.0 to work best. Label smoothing led to an absolute improvement over the dropout baseline of 1.6%, while the confidence penalty led to an absolute improvement of 1.2%."}, {"heading": "4.4.2 WALL STREET JOURNAL", "text": "For the WSJ corpus we used attention-based sequence-to-sequence networks that directly predicted characters. We used the SI284 subset for training, DEV93 for validation, and EVAL92 for testing. We used 240-dimensional vectors consisting of 80-bin filterbank features augmented with their deltas and delta-deltas with per-speaker normalized mean and variances computed with Kaldi Povey et al. (2011). We did not use text-only data or separate language models during decoding.\nNetwork architecture details were as follows. The encoder of the network consisted of 4 bidirectional LSTM layers each having 256 units, interleaved with 3 time-subsampling layers, configured to drop every second frame (Bahdanau et al., 2016; Chan et al., 2015). The decoder used a single LSTM layer with 256 units. The attention vectors were computed with a single layer feedforward network having 64 hidden units and the convolutional filters as described in Chorowski et al. (2015). Weights were initialized from a uniform distribution [\u22120.075, 0.075]. All models used weight decay of 10\u22126, additive Gaussian weight noise with standard deviation 0.075, applied after 20K steps, and were trained for 650K steps. We used the ADAM optimizer asynchronously over 8 GPUs. We used a learning rate of 10\u22123, which was reduced to 10\u22124 after 400K and 10\u22125 after 500K steps.\nWe tested three methods of increasing the entropy of outputs: the confidence penalty and two variants of label smoothing: uniform and unigram. All resulted in improved Word Error Rates (WER), however the unigram smoothing resulted in the greatest WER reduction, and we found it to be least sensitive to its hyperparameter (the smoothing value). Furthermore, uniform smoothing and confidence penalty required masking network outputs corresponding to tokens that never appeared as labels, such as the start-of-sequence token.\nTable 6 compares the performance of the regularized networks with several recent results. We observe that the benefits of label smoothing (WER reduction from 14.2 to 11) improve over the recently proposed Latent Sequence Decompositions (LSD) method (Chan et al., 2016) which reduces the WER from 14.7 to 12.9 by extending the space of output tokens to dynamically chosen character n-grams."}, {"heading": "5 CONCLUSION", "text": "Motivated by recent successes of output regularizers (Szegedy et al., 2015b; Xie et al., 2016), we conduct a systematic evaluation of two output regularizers: the confidence penalty and label smoothing. We show that this form of regularization, which has been shown to improve exploration in reinforcement learning, also acts as a strong regularizer in supervised learning. We find that both the confidence penalty and label smoothing improve a wide range of state-of-the-art models, without the need to modify hyper-parameters."}, {"heading": "ACKNOWLEDGMENTS", "text": "We would like to thank Sergey Ioffe, Alex Alemi and Navdeep Jaitly for helpful discussions. We would also like to thank Prajit Ramachandran, Barret Zoph, Mohammad Norouzi, and Yonghui Wu for technical help with the various models used in our experiments. We thank the anonymous reviewers for insightful comments."}, {"heading": "6 GRADIENT NORMS", "text": ""}], "references": [{"title": "Tensorflow: Large-scale machine learning on heterogeneous distributed systems", "author": ["Mart\u0131n Abadi", "Ashish Agarwal", "Paul Barham", "Eugene Brevdo", "Zhifeng Chen", "Craig Citro", "Greg S Corrado", "Andy Davis", "Jeffrey Dean", "Matthieu Devin"], "venue": "arXiv preprint arXiv:1603.04467,", "citeRegEx": "Abadi et al\\.,? \\Q2016\\E", "shortCiteRegEx": "Abadi et al\\.", "year": 2016}, {"title": "End-to-end attention-based large vocabulary speech recognition", "author": ["D. Bahdanau", "J. Chorowski", "D. Serdyuk", "P. Brakel", "Y. Bengio"], "venue": "IEEE International Conference on Acoustics, Speech and Signal Processing (ICASSP),", "citeRegEx": "Bahdanau et al\\.,? \\Q2016\\E", "shortCiteRegEx": "Bahdanau et al\\.", "year": 2016}, {"title": "Neural machine translation by jointly learning to align and translate", "author": ["Dzmitry Bahdanau", "Kyunghyun Cho", "Yoshua Bengio"], "venue": "arXiv preprint arXiv:1409.0473,", "citeRegEx": "Bahdanau et al\\.,? \\Q2014\\E", "shortCiteRegEx": "Bahdanau et al\\.", "year": 2014}, {"title": "A maximum entropy approach to natural language processing", "author": ["Adam L Berger", "Vincent J Della Pietra", "Stephen A Della Pietra"], "venue": "Computational linguistics,", "citeRegEx": "Berger et al\\.,? \\Q1996\\E", "shortCiteRegEx": "Berger et al\\.", "year": 1996}, {"title": "N-gram counts and language models from the common crawl", "author": ["Christian Buck", "Kenneth Heafield", "Bas Van Ooyen"], "venue": "In LREC,", "citeRegEx": "Buck et al\\.,? \\Q2014\\E", "shortCiteRegEx": "Buck et al\\.", "year": 2014}, {"title": "Listen, attend and spell", "author": ["William Chan", "Navdeep Jaitly", "Quoc V Le", "Oriol Vinyals"], "venue": "arXiv preprint arXiv:1508.01211,", "citeRegEx": "Chan et al\\.,? \\Q2015\\E", "shortCiteRegEx": "Chan et al\\.", "year": 2015}, {"title": "Latent sequence decompositions", "author": ["William Chan", "Yu Zhang", "Quoc Le", "Navdeep Jaitly"], "venue": "arXiv preprint arXiv:1610.03035,", "citeRegEx": "Chan et al\\.,? \\Q2016\\E", "shortCiteRegEx": "Chan et al\\.", "year": 2016}, {"title": "On using very large target vocabulary for neural machine translation", "author": ["S\u00e9bastien Jean Kyunghyun Cho", "Roland Memisevic", "Yoshua Bengio"], "venue": null, "citeRegEx": "Cho et al\\.,? \\Q2015\\E", "shortCiteRegEx": "Cho et al\\.", "year": 2015}, {"title": "Attention-based models for speech recognition", "author": ["Jan K Chorowski", "Dzmitry Bahdanau", "Dmitriy Serdyuk", "Kyunghyun Cho", "Yoshua Bengio"], "venue": "In Advances in Neural Information Processing Systems,", "citeRegEx": "Chorowski et al\\.,? \\Q2015\\E", "shortCiteRegEx": "Chorowski et al\\.", "year": 2015}, {"title": "A theoretically grounded application of dropout in recurrent neural networks", "author": ["Yarin Gal"], "venue": "arXiv preprint arXiv:1512.05287,", "citeRegEx": "Gal.,? \\Q2015\\E", "shortCiteRegEx": "Gal.", "year": 2015}, {"title": "Towards end-to-end speech recognition with recurrent neural networks", "author": ["Alex Graves", "Navdeep Jaitly"], "venue": "In ICML,", "citeRegEx": "Graves and Jaitly.,? \\Q2014\\E", "shortCiteRegEx": "Graves and Jaitly.", "year": 2014}, {"title": "Connectionist temporal classification: labelling unsegmented sequence data with recurrent neural networks", "author": ["Alex Graves", "Santiago Fern\u00e1ndez", "Faustino Gomez", "J\u00fcrgen Schmidhuber"], "venue": "In Proceedings of the 23rd international conference on Machine learning,", "citeRegEx": "Graves et al\\.,? \\Q2006\\E", "shortCiteRegEx": "Graves et al\\.", "year": 2006}, {"title": "Speech recognition with deep recurrent neural networks", "author": ["Alex Graves", "Abdel-rahman Mohamed", "Geoffrey Hinton"], "venue": "IEEE international conference on acoustics, speech and signal processing,", "citeRegEx": "Graves et al\\.,? \\Q2013\\E", "shortCiteRegEx": "Graves et al\\.", "year": 2013}, {"title": "Deep residual learning for image recognition", "author": ["Kaiming He", "Xiangyu Zhang", "Shaoqing Ren", "Jian Sun"], "venue": "arXiv preprint arXiv:1512.03385,", "citeRegEx": "He et al\\.,? \\Q2015\\E", "shortCiteRegEx": "He et al\\.", "year": 2015}, {"title": "Distilling the knowledge in a neural network", "author": ["Geoffrey Hinton", "Oriol Vinyals", "Jeff Dean"], "venue": "arXiv preprint arXiv:1503.02531,", "citeRegEx": "Hinton et al\\.,? \\Q2015\\E", "shortCiteRegEx": "Hinton et al\\.", "year": 2015}, {"title": "Densely connected convolutional networks", "author": ["Gao Huang", "Zhuang Liu", "Kilian Q Weinberger"], "venue": "arXiv preprint arXiv:1608.06993,", "citeRegEx": "Huang et al\\.,? \\Q2016\\E", "shortCiteRegEx": "Huang et al\\.", "year": 2016}, {"title": "Deep networks with stochastic depth", "author": ["Gao Huang", "Yu Sun", "Zhuang Liu", "Daniel Sedra", "Kilian Weinberger"], "venue": "arXiv preprint arXiv:1603.09382,", "citeRegEx": "Huang et al\\.,? \\Q2016\\E", "shortCiteRegEx": "Huang et al\\.", "year": 2016}, {"title": "Batch normalization: Accelerating deep network training by reducing internal covariate shift", "author": ["Sergey Ioffe", "Christian Szegedy"], "venue": "arXiv preprint arXiv:1502.03167,", "citeRegEx": "Ioffe and Szegedy.,? \\Q2015\\E", "shortCiteRegEx": "Ioffe and Szegedy.", "year": 2015}, {"title": "Information theory and statistical mechanics", "author": ["Edwin T Jaynes"], "venue": "Physical review,", "citeRegEx": "Jaynes.,? \\Q1957\\E", "shortCiteRegEx": "Jaynes.", "year": 1957}, {"title": "Exploring the limits of language modeling", "author": ["Rafal Jozefowicz", "Oriol Vinyals", "Mike Schuster", "Noam Shazeer", "Yonghui Wu"], "venue": "arXiv preprint arXiv:1602.02410,", "citeRegEx": "Jozefowicz et al\\.,? \\Q2016\\E", "shortCiteRegEx": "Jozefowicz et al\\.", "year": 2016}, {"title": "Fractalnet: Ultra-deep neural networks without residuals", "author": ["Gustav Larsson", "Michael Maire", "Gregory Shakhnarovich"], "venue": "arXiv preprint arXiv:1605.07648,", "citeRegEx": "Larsson et al\\.,? \\Q2016\\E", "shortCiteRegEx": "Larsson et al\\.", "year": 2016}, {"title": "Learning online alignments with continuous rewards policy gradient", "author": ["Yuping Luo", "Chung-Cheng Chiu", "Navdeep Jaitly", "Ilya Sutskever"], "venue": "arXiv preprint arXiv:1608.01281,", "citeRegEx": "Luo et al\\.,? \\Q2016\\E", "shortCiteRegEx": "Luo et al\\.", "year": 2016}, {"title": "Effective approaches to attentionbased neural machine translation", "author": ["Minh-Thang Luong", "Hieu Pham", "Christopher D Manning"], "venue": "arXiv preprint arXiv:1508.04025,", "citeRegEx": "Luong et al\\.,? \\Q2015\\E", "shortCiteRegEx": "Luong et al\\.", "year": 2015}, {"title": "Building a large annotated corpus of english: The penn treebank", "author": ["Mitchell P Marcus", "Mary Ann Marcinkiewicz", "Beatrice Santorini"], "venue": "Computational linguistics,", "citeRegEx": "Marcus et al\\.,? \\Q1993\\E", "shortCiteRegEx": "Marcus et al\\.", "year": 1993}, {"title": "Pointer sentinel mixture models", "author": ["Stephen Merity", "Caiming Xiong", "James Bradbury", "Richard Socher"], "venue": "arXiv preprint arXiv:1609.07843,", "citeRegEx": "Merity et al\\.,? \\Q2016\\E", "shortCiteRegEx": "Merity et al\\.", "year": 2016}, {"title": "A global optimization technique for statistical classifier design", "author": ["David Miller", "Ajit V Rao", "Kenneth Rose", "Allen Gersho"], "venue": "IEEE Transactions on Signal Processing,", "citeRegEx": "Miller et al\\.,? \\Q1996\\E", "shortCiteRegEx": "Miller et al\\.", "year": 1996}, {"title": "Distributional smoothing by virtual adversarial examples", "author": ["Takeru Miyato", "Shin-ichi Maeda", "Masanori Koyama", "Ken Nakae", "Shin Ishii"], "venue": "arXiv preprint arXiv:1507.00677,", "citeRegEx": "Miyato et al\\.,? \\Q2015\\E", "shortCiteRegEx": "Miyato et al\\.", "year": 2015}, {"title": "Asynchronous methods for deep reinforcement learning", "author": ["Volodymyr Mnih", "Adria Puigdomenech Badia", "Mehdi Mirza", "Alex Graves", "Timothy P Lillicrap", "Tim Harley", "David Silver", "Koray Kavukcuoglu"], "venue": "arXiv preprint arXiv:1602.01783,", "citeRegEx": "Mnih et al\\.,? \\Q2016\\E", "shortCiteRegEx": "Mnih et al\\.", "year": 2016}, {"title": "Acoustic modeling using deep belief networks", "author": ["Abdel-rahman Mohamed", "George E Dahl", "Geoffrey Hinton"], "venue": "IEEE Transactions on Audio, Speech, and Language Processing,", "citeRegEx": "Mohamed et al\\.,? \\Q2012\\E", "shortCiteRegEx": "Mohamed et al\\.", "year": 2012}, {"title": "Reward augmented maximum likelihood for neural structured prediction", "author": ["Mohammad Norouzi", "Dale Schuurmans", "Samy Bengio", "Zhifeng Chen", "Navdeep Jaitly", "Mike Schuster", "Yonghui Wu"], "venue": "In Advances in Neural Information Processing Systems,", "citeRegEx": "Norouzi et al\\.,? \\Q2016\\E", "shortCiteRegEx": "Norouzi et al\\.", "year": 2016}, {"title": "The kaldi speech recognition toolkit", "author": ["Daniel Povey", "Arnab Ghoshal", "Gilles Boulianne", "Lukas Burget", "Ondrej Glembek", "Nagendra Goel", "Mirko Hannemann", "Petr Motlicek", "Yanmin Qian", "Petr Schwarz", "Jan Silovsky", "Georg Stemmer", "Karel Vesely"], "venue": "In IEEE 2011 Workshop on Automatic Speech Recognition and Understanding. IEEE Signal Processing Society,", "citeRegEx": "Povey et al\\.,? \\Q2011\\E", "shortCiteRegEx": "Povey et al\\.", "year": 2011}, {"title": "Using the output embedding to improve language models", "author": ["Ofir Press", "Lior Wolf"], "venue": "arXiv preprint arXiv:1608.05859,", "citeRegEx": "Press and Wolf.,? \\Q2016\\E", "shortCiteRegEx": "Press and Wolf.", "year": 2016}, {"title": "Training deep neural networks on noisy labels with bootstrapping", "author": ["Scott Reed", "Honglak Lee", "Dragomir Anguelov", "Christian Szegedy", "Dumitru Erhan", "Andrew Rabinovich"], "venue": "arXiv preprint arXiv:1412.6596,", "citeRegEx": "Reed et al\\.,? \\Q2014\\E", "shortCiteRegEx": "Reed et al\\.", "year": 2014}, {"title": "Deterministic annealing for clustering, compression, classification, regression, and related optimization problems", "author": ["Kenneth Rose"], "venue": "Proceedings of the IEEE,", "citeRegEx": "Rose.,? \\Q1998\\E", "shortCiteRegEx": "Rose.", "year": 1998}, {"title": "Dropout: a simple way to prevent neural networks from overfitting", "author": ["Nitish Srivastava", "Geoffrey E Hinton", "Alex Krizhevsky", "Ilya Sutskever", "Ruslan Salakhutdinov"], "venue": "Journal of Machine Learning Research,", "citeRegEx": "Srivastava et al\\.,? \\Q1929\\E", "shortCiteRegEx": "Srivastava et al\\.", "year": 1929}, {"title": "Going deeper with convolutions", "author": ["Christian Szegedy", "Wei Liu", "Yangqing Jia", "Pierre Sermanet", "Scott Reed", "Dragomir Anguelov", "Dumitru Erhan", "Vincent Vanhoucke", "Andrew Rabinovich"], "venue": "In Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition,", "citeRegEx": "Szegedy et al\\.,? \\Q2015\\E", "shortCiteRegEx": "Szegedy et al\\.", "year": 2015}, {"title": "Rethinking the inception architecture for computer vision", "author": ["Christian Szegedy", "Vincent Vanhoucke", "Sergey Ioffe", "Jonathon Shlens", "Zbigniew Wojna"], "venue": "arXiv preprint arXiv:1512.00567,", "citeRegEx": "Szegedy et al\\.,? \\Q2015\\E", "shortCiteRegEx": "Szegedy et al\\.", "year": 2015}, {"title": "Combining time-and frequency-domain convolution in convolutional neural networkbased phone recognition", "author": ["L\u00e1szl\u00f3 T\u00f3th"], "venue": "IEEE International Conference on Acoustics, Speech and Signal Processing (ICASSP),", "citeRegEx": "T\u00f3th.,? \\Q2014\\E", "shortCiteRegEx": "T\u00f3th.", "year": 2014}, {"title": "Regularization of neural networks using dropconnect", "author": ["Li Wan", "Matthew Zeiler", "Sixin Zhang", "Yann L Cun", "Rob Fergus"], "venue": "In Proceedings of the 30th International Conference on Machine Learning", "citeRegEx": "Wan et al\\.,? \\Q2013\\E", "shortCiteRegEx": "Wan et al\\.", "year": 2013}, {"title": "Function optimization using connectionist reinforcement learning algorithms", "author": ["Ronald J Williams", "Jing Peng"], "venue": "Connection Science,", "citeRegEx": "Williams and Peng.,? \\Q1991\\E", "shortCiteRegEx": "Williams and Peng.", "year": 1991}, {"title": "Google\u2019s neural machine translation system: Bridging the gap between human and machine translation", "author": ["Yonghui Wu", "Mike Schuster", "Zhifeng Chen", "Quoc V Le", "Mohammad Norouzi", "Wolfgang Macherey", "Maxim Krikun", "Yuan Cao", "Qin Gao", "Klaus Macherey"], "venue": "arXiv preprint arXiv:1609.08144,", "citeRegEx": "Wu et al\\.,? \\Q2016\\E", "shortCiteRegEx": "Wu et al\\.", "year": 2016}, {"title": "Disturblabel: Regularizing cnn on the loss layer", "author": ["Lingxi Xie", "Jingdong Wang", "Zhen Wei", "Meng Wang", "Qi Tian"], "venue": "arXiv preprint arXiv:1605.00055,", "citeRegEx": "Xie et al\\.,? \\Q2016\\E", "shortCiteRegEx": "Xie et al\\.", "year": 2016}, {"title": "Recurrent neural network regularization", "author": ["Wojciech Zaremba", "Ilya Sutskever", "Oriol Vinyals"], "venue": "arXiv preprint arXiv:1409.2329,", "citeRegEx": "Zaremba et al\\.,? \\Q2014\\E", "shortCiteRegEx": "Zaremba et al\\.", "year": 2014}, {"title": "Under review as a conference paper at ICLR", "author": ["Jie Zhou", "Ying Cao", "Xuguang Wang", "Peng Li", "Wei Xu"], "venue": null, "citeRegEx": "Zhou et al\\.,? \\Q2017\\E", "shortCiteRegEx": "Zhou et al\\.", "year": 2017}], "referenceMentions": [{"referenceID": 40, "context": ", 2015a), machine translation (Wu et al., 2016), language modeling (Jozefowicz et al.", "startOffset": 30, "endOffset": 47}, {"referenceID": 19, "context": ", 2016), language modeling (Jozefowicz et al., 2016), and speech recognition (Graves et al.", "startOffset": 27, "endOffset": 52}, {"referenceID": 12, "context": ", 2016), and speech recognition (Graves et al., 2013).", "startOffset": 32, "endOffset": 53}, {"referenceID": 14, "context": "To motivate output regularizers, we can view the knowledge of a model as the conditional distribution it produces over outputs given an input (Hinton et al., 2015) as opposed to the learned values of its parameters.", "startOffset": 142, "endOffset": 163}, {"referenceID": 14, "context": "Distillation (Hinton et al., 2015; Bucilu et al., 2006) exploits this fact by explicitly training a small network to assign the same probabilities to incorrect classes as a large network or ensemble of networks that generalizes well.", "startOffset": 13, "endOffset": 55}, {"referenceID": 18, "context": "The maximum entropy principle (Jaynes, 1957) has a long history with deep connections to many areas of machine learning including unsupervised learning, supervised learning, and reinforcement learning.", "startOffset": 30, "endOffset": 44}, {"referenceID": 3, "context": "In supervised learning, we can search for the model with maximum entropy subject to constraints on empirical statistics, which naturally gives rise to maximum likelihood in log-linear models (see (Berger et al., 1996) for a review).", "startOffset": 196, "endOffset": 217}, {"referenceID": 27, "context": "This prevents the policy from converging early and leads to improved performance (Mnih et al., 2016).", "startOffset": 81, "endOffset": 100}, {"referenceID": 21, "context": "Penalizing low entropy has also been used when combining reinforcement learning and supervised learning to train a neural speech recognition model to learn when to emit tokens (Luo et al., 2016).", "startOffset": 176, "endOffset": 194}, {"referenceID": 29, "context": "Indeed, in recent work on reward augmented maximum likelihood (Norouzi et al., 2016), this entropy augmented reinforcement learning objective played a direct role in linking maximum likelihood and reinforcement learning objectives.", "startOffset": 62, "endOffset": 84}, {"referenceID": 41, "context": "Simply adding label noise has also been shown to be effective at regularizing neural networks (Xie et al., 2016).", "startOffset": 94, "endOffset": 112}, {"referenceID": 14, "context": "Instead of smoothing the labels with a uniform distribution, as in label smoothing, we can smooth the labels with a teacher model (Hinton et al., 2015) or the model\u2019s own distribution (Reed et al.", "startOffset": 130, "endOffset": 151}, {"referenceID": 32, "context": ", 2015) or the model\u2019s own distribution (Reed et al., 2014).", "startOffset": 40, "endOffset": 59}, {"referenceID": 26, "context": "Virtual adversarial training (VAT) (Miyato et al., 2015) is another promising smoothing regularizer.", "startOffset": 35, "endOffset": 56}, {"referenceID": 3, "context": "In supervised learning, we can search for the model with maximum entropy subject to constraints on empirical statistics, which naturally gives rise to maximum likelihood in log-linear models (see (Berger et al., 1996) for a review). Deterministic annealing Rose (1998) is a general approach for optimization that is widely applicable, avoids local minima, and can minimize discrete objectives, and it can be derived from the maximum entropy principle.", "startOffset": 197, "endOffset": 269}, {"referenceID": 3, "context": "In supervised learning, we can search for the model with maximum entropy subject to constraints on empirical statistics, which naturally gives rise to maximum likelihood in log-linear models (see (Berger et al., 1996) for a review). Deterministic annealing Rose (1998) is a general approach for optimization that is widely applicable, avoids local minima, and can minimize discrete objectives, and it can be derived from the maximum entropy principle. Closely related to our work, Miller et al. (1996) apply deterministic annealing to train multilayer perceptrons, where an entropy based regularizer is introduced and slowly annealed.", "startOffset": 197, "endOffset": 502}, {"referenceID": 0, "context": "All models were implemented using TensorFlow (Abadi et al., 2016) and trained on NVIDIA Tesla K40 or K80 GPUs.", "startOffset": 45, "endOffset": 65}, {"referenceID": 37, "context": "Model Layers Size Test Wan et al. (2013) - Unregularized 2 800 1.", "startOffset": 23, "endOffset": 41}, {"referenceID": 34, "context": "40% Srivastava et al. (2014) - Dropout 3 1024 1.", "startOffset": 4, "endOffset": 29}, {"referenceID": 34, "context": "40% Srivastava et al. (2014) - Dropout 3 1024 1.25% Wan et al. (2013) - DropConnect 2 800 1.", "startOffset": 4, "endOffset": 70}, {"referenceID": 34, "context": "40% Srivastava et al. (2014) - Dropout 3 1024 1.25% Wan et al. (2013) - DropConnect 2 800 1.20% Srivastava et al. (2014) - MaxNorm + Dropout 2 8192 0.", "startOffset": 4, "endOffset": 121}, {"referenceID": 13, "context": "Model Layers Parameters Test He et al. (2015) - Residual CNN 110 1.", "startOffset": 29, "endOffset": 46}, {"referenceID": 13, "context": "Model Layers Parameters Test He et al. (2015) - Residual CNN 110 1.7M 13.63% Huang et al. (2016b) - Stochastic Depth Residual CNN 110 1.", "startOffset": 29, "endOffset": 98}, {"referenceID": 13, "context": "Model Layers Parameters Test He et al. (2015) - Residual CNN 110 1.7M 13.63% Huang et al. (2016b) - Stochastic Depth Residual CNN 110 1.7M 11.66% Larsson et al. (2016) - Fractal CNN 21 38.", "startOffset": 29, "endOffset": 168}, {"referenceID": 13, "context": "Model Layers Parameters Test He et al. (2015) - Residual CNN 110 1.7M 13.63% Huang et al. (2016b) - Stochastic Depth Residual CNN 110 1.7M 11.66% Larsson et al. (2016) - Fractal CNN 21 38.6M 10.18% Larsson et al. (2016) - Fractal CNN (Dropout) 21 38.", "startOffset": 29, "endOffset": 220}, {"referenceID": 13, "context": "Model Layers Parameters Test He et al. (2015) - Residual CNN 110 1.7M 13.63% Huang et al. (2016b) - Stochastic Depth Residual CNN 110 1.7M 11.66% Larsson et al. (2016) - Fractal CNN 21 38.6M 10.18% Larsson et al. (2016) - Fractal CNN (Dropout) 21 38.6M 7.33% Huang et al. (2016a) - Densely Connected CNN 40 1.", "startOffset": 29, "endOffset": 280}, {"referenceID": 13, "context": "Model Layers Parameters Test He et al. (2015) - Residual CNN 110 1.7M 13.63% Huang et al. (2016b) - Stochastic Depth Residual CNN 110 1.7M 11.66% Larsson et al. (2016) - Fractal CNN 21 38.6M 10.18% Larsson et al. (2016) - Fractal CNN (Dropout) 21 38.6M 7.33% Huang et al. (2016a) - Densely Connected CNN 40 1.0M 7.00% Huang et al. (2016a) - Densely Connected CNN 100 7.", "startOffset": 29, "endOffset": 339}, {"referenceID": 23, "context": "We performed word-level language modeling experiments using the Penn Treebank dataset (PTB) (Marcus et al., 1993).", "startOffset": 92, "endOffset": 113}, {"referenceID": 42, "context": "We used the hyper-parameter settings from the large configuration in (Zaremba et al., 2014).", "startOffset": 69, "endOffset": 91}, {"referenceID": 9, "context": "Variational dropout (Gal, 2015) applies a fixed dropout mask (stochastic for each sample) at each time-step, instead of resampling at each time-step as in traditional dropout.", "startOffset": 20, "endOffset": 31}, {"referenceID": 40, "context": "Model Parameters Validation Test Zaremba et al. (2014) - Regularized LSTM 66M 82.", "startOffset": 33, "endOffset": 55}, {"referenceID": 9, "context": "4 Gal (2015) - Variational LSTM 66M 77.", "startOffset": 2, "endOffset": 13}, {"referenceID": 9, "context": "4 Gal (2015) - Variational LSTM 66M 77.9 75.2 Press & Wolf (2016) - Tied Variational LSTM 51M 79.", "startOffset": 2, "endOffset": 66}, {"referenceID": 9, "context": "4 Gal (2015) - Variational LSTM 66M 77.9 75.2 Press & Wolf (2016) - Tied Variational LSTM 51M 79.6 75.0 Merity et al. (2016) - Pointer Sentinel LSTM 21M 72.", "startOffset": 2, "endOffset": 125}, {"referenceID": 9, "context": "4 Gal (2015) - Variational LSTM 66M 77.9 75.2 Press & Wolf (2016) - Tied Variational LSTM 51M 79.6 75.0 Merity et al. (2016) - Pointer Sentinel LSTM 21M 72.4 70.9 Zilly et al. (2016) - Variational RHN 32M 71.", "startOffset": 2, "endOffset": 183}, {"referenceID": 9, "context": "4 Gal (2015) - Variational LSTM 66M 77.9 75.2 Press & Wolf (2016) - Tied Variational LSTM 51M 79.6 75.0 Merity et al. (2016) - Pointer Sentinel LSTM 21M 72.4 70.9 Zilly et al. (2016) - Variational RHN 32M 71.2 68.5 Zilly et al. (2016) - Tied Variational RHN 24M 68.", "startOffset": 2, "endOffset": 235}, {"referenceID": 2, "context": "Our model was an 8-layer sequence-to-sequence model with attention (Bahdanau et al., 2014).", "startOffset": 67, "endOffset": 90}, {"referenceID": 40, "context": "Each layer had 512 units (compared to 1024 in (Wu et al., 2016)).", "startOffset": 46, "endOffset": 63}, {"referenceID": 42, "context": "Dropout of 30% was applied as described in (Zaremba et al., 2014).", "startOffset": 43, "endOffset": 65}, {"referenceID": 40, "context": "Unlike (Wu et al., 2016), we did not use reinforcement learning to fine-tune our model.", "startOffset": 7, "endOffset": 24}, {"referenceID": 40, "context": "For more details, see (Wu et al., 2016).", "startOffset": 22, "endOffset": 39}, {"referenceID": 38, "context": "For machine translation, we evaluated the confidence penalty on the WMT\u201914 English-to-German translation task using Google\u2019s production-level translation system Wu et al. (2016). The training set consists of 5M sentence pairs, and we used newstest2012 and newtests2013 for validation and newstest2014 for testing.", "startOffset": 161, "endOffset": 178}, {"referenceID": 4, "context": "Model Parameters Validation Test Buck et al. (2014) - PBMT 20.", "startOffset": 33, "endOffset": 52}, {"referenceID": 4, "context": "Model Parameters Validation Test Buck et al. (2014) - PBMT 20.7 Cho et al. (2015) - RNNSearch 16.", "startOffset": 33, "endOffset": 82}, {"referenceID": 4, "context": "Model Parameters Validation Test Buck et al. (2014) - PBMT 20.7 Cho et al. (2015) - RNNSearch 16.9 Zhou et al. (2016) - Deep-Att 20.", "startOffset": 33, "endOffset": 118}, {"referenceID": 4, "context": "Model Parameters Validation Test Buck et al. (2014) - PBMT 20.7 Cho et al. (2015) - RNNSearch 16.9 Zhou et al. (2016) - Deep-Att 20.6 Luong et al. (2015) - P-Attention 164M 20.", "startOffset": 33, "endOffset": 154}, {"referenceID": 4, "context": "Model Parameters Validation Test Buck et al. (2014) - PBMT 20.7 Cho et al. (2015) - RNNSearch 16.9 Zhou et al. (2016) - Deep-Att 20.6 Luong et al. (2015) - P-Attention 164M 20.9 Wu et al. (2016) - WPM-16K 167M 24.", "startOffset": 33, "endOffset": 195}, {"referenceID": 4, "context": "Model Parameters Validation Test Buck et al. (2014) - PBMT 20.7 Cho et al. (2015) - RNNSearch 16.9 Zhou et al. (2016) - Deep-Att 20.6 Luong et al. (2015) - P-Attention 164M 20.9 Wu et al. (2016) - WPM-16K 167M 24.4 Wu et al. (2016) - WPM-32K 278M 24.", "startOffset": 33, "endOffset": 232}, {"referenceID": 41, "context": "Dropout of 15% was applied as described in Zaremba et al. (2014). We trained the model with asynchronous SGD with 5 replicas.", "startOffset": 43, "endOffset": 65}, {"referenceID": 29, "context": "For more details, see Norouzi et al. (2016). For label smoothing, we performed a grid search over values [0.", "startOffset": 22, "endOffset": 44}, {"referenceID": 26, "context": "Model Parameters Validation Test Mohamed et al. (2012) - DNN-HMM 20.", "startOffset": 33, "endOffset": 55}, {"referenceID": 26, "context": "Model Parameters Validation Test Mohamed et al. (2012) - DNN-HMM 20.7 Norouzi et al. (2016) - RML 6.", "startOffset": 33, "endOffset": 92}, {"referenceID": 11, "context": "9 Graves et al. (2006) - CTC 6.", "startOffset": 2, "endOffset": 23}, {"referenceID": 11, "context": "9 Graves et al. (2006) - CTC 6.8M 18.4 Graves et al. (2013) - RNN Transducer 4.", "startOffset": 2, "endOffset": 60}, {"referenceID": 11, "context": "9 Graves et al. (2006) - CTC 6.8M 18.4 Graves et al. (2013) - RNN Transducer 4.3M 17.7 T\u00f3th (2014) - CNN 13.", "startOffset": 2, "endOffset": 99}, {"referenceID": 1, "context": "The encoder of the network consisted of 4 bidirectional LSTM layers each having 256 units, interleaved with 3 time-subsampling layers, configured to drop every second frame (Bahdanau et al., 2016; Chan et al., 2015).", "startOffset": 173, "endOffset": 215}, {"referenceID": 5, "context": "The encoder of the network consisted of 4 bidirectional LSTM layers each having 256 units, interleaved with 3 time-subsampling layers, configured to drop every second frame (Bahdanau et al., 2016; Chan et al., 2015).", "startOffset": 173, "endOffset": 215}, {"referenceID": 25, "context": "We used 240-dimensional vectors consisting of 80-bin filterbank features augmented with their deltas and delta-deltas with per-speaker normalized mean and variances computed with Kaldi Povey et al. (2011). We did not use text-only data or separate language models during decoding.", "startOffset": 185, "endOffset": 205}, {"referenceID": 1, "context": "The encoder of the network consisted of 4 bidirectional LSTM layers each having 256 units, interleaved with 3 time-subsampling layers, configured to drop every second frame (Bahdanau et al., 2016; Chan et al., 2015). The decoder used a single LSTM layer with 256 units. The attention vectors were computed with a single layer feedforward network having 64 hidden units and the convolutional filters as described in Chorowski et al. (2015). Weights were initialized from a uniform distribution [\u22120.", "startOffset": 174, "endOffset": 439}, {"referenceID": 6, "context": "2 to 11) improve over the recently proposed Latent Sequence Decompositions (LSD) method (Chan et al., 2016) which reduces the WER from 14.", "startOffset": 88, "endOffset": 107}, {"referenceID": 1, "context": "3 Bahdanau et al. (2016) - seq2seq 5.", "startOffset": 2, "endOffset": 25}, {"referenceID": 1, "context": "3 Bahdanau et al. (2016) - seq2seq 5.7M 18.6 Chan et al. (2016) - Baseline 5.", "startOffset": 2, "endOffset": 64}, {"referenceID": 1, "context": "3 Bahdanau et al. (2016) - seq2seq 5.7M 18.6 Chan et al. (2016) - Baseline 5.1M 14.7 Chan et al. (2016) - LSD 5.", "startOffset": 2, "endOffset": 104}, {"referenceID": 41, "context": "Motivated by recent successes of output regularizers (Szegedy et al., 2015b; Xie et al., 2016), we conduct a systematic evaluation of two output regularizers: the confidence penalty and label smoothing.", "startOffset": 53, "endOffset": 94}], "year": 2017, "abstractText": "We systematically explore regularizing neural networks by penalizing low entropy output distributions. We show that penalizing low entropy output distributions, which has been shown to improve exploration in reinforcement learning, acts as a strong regularizer in supervised learning. Furthermore, we connect a maximum entropy based confidence penalty to label smoothing through the direction of the KL divergence. We exhaustively evaluate the proposed confidence penalty and label smoothing on 6 common benchmarks: image classification (MNIST and Cifar-10), language modeling (Penn Treebank), machine translation (WMT\u201914 English-to-German), and speech recognition (TIMIT and WSJ). We find that both label smoothing and the confidence penalty improve state-of-the-art models across benchmarks without modifying existing hyperparameters, suggesting the wide applicability of these regularizers.", "creator": "LaTeX with hyperref package"}}}