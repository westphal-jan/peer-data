{"id": "1704.08387", "review": {"conference": "ACL", "VERSION": "v1", "DATE_OF_SUBMISSION": "27-Apr-2017", "title": "Learning Structured Natural Language Representations for Semantic Parsing", "abstract": "we introduce a powerful semantic parser which is robust and selective. our model forwards arbitrary language components to fluent, quasi - symmetric natural translation representations in what form of predicate - nominal structures, which define induced with dynamic transition system and subsequently programmed to target sequences. the query parser is trained began - to - end while implicit logical forms addressing their relationships. we obtain competitive pricing on various datasets. human developmental predicate - argument structures shed names emphasizing every types of operations desired ; phonetic parsing and how these are different from actively motivated semantic.", "histories": [["v1", "Thu, 27 Apr 2017 00:24:20 GMT  (38kb)", "http://arxiv.org/abs/1704.08387v1", null], ["v2", "Wed, 17 May 2017 09:57:29 GMT  (34kb)", "http://arxiv.org/abs/1704.08387v2", null], ["v3", "Wed, 14 Jun 2017 04:18:26 GMT  (34kb)", "http://arxiv.org/abs/1704.08387v3", null]], "reviews": [], "SUBJECTS": "cs.CL", "authors": ["jianpeng cheng 0001", "siva reddy", "vijay saraswat", "mirella lapata"], "accepted": true, "id": "1704.08387"}, "pdf": {"name": "1704.08387.pdf", "metadata": {"source": "CRF", "title": "Learning Structured Natural Language Representations for Semantic Parsing", "authors": ["Jianpeng Cheng", "Siva Reddy", "Vijay Saraswat"], "emails": ["jianpeng.cheng@ed.ac.uk,", "siva.reddy@ed.ac.uk,", "vsaraswa@us.ibm.com,", "mlap@inf.ed.ac.uk"], "sections": [{"heading": null, "text": "ar X\niv :1\n70 4.\n08 38\n7v 1\n[ cs\n.C L\n] 2\n7 A\npr 2\n01 7\nwhich is interpretable and scalable. Our model converts natural language utterances to intermediate, domain-general natural language representations in the form of predicate-argument structures, which are induced with a transition system and subsequently mapped to target domains. The semantic parser is trained end-to-end using annotated logical forms or their denotations. We achieve the state of the art on SPADES and GRAPHQUESTIONS and obtain competitive results on GEOQUERY and WEBQUESTIONS. The induced predicate-argument structures shed light on the types of representations useful for semantic parsing and how these are different from linguistically motivated ones.1"}, {"heading": "1 Introduction", "text": "Semantic parsing is the task of mapping natural language utterances to machine interpretable meaning representations. Despite differences in the choice of meaning representation and model structure, most existing work conceptualizes semantic parsing following two main approaches. Under the first approach, an utterance is parsed and grounded to a meaning representation directly via learning a task-specific grammar (Zelle and Mooney, 1996; Zettlemoyer and Collins, 2005; Wong and Mooney, 2006; Kwiatkowksi et al., 2010; Liang et al., 2011; Berant et al., 2013; Flanigan et al., 2014; Pasupat and Liang, 2015; Groschwitz et al., 2015). Under the second approach, the utterance is first parsed to an intermediate task-independent representation tied to a syntactic parser and\n1Our code will be available at https://github.com/cheng6076/scanner.\nthen mapped to a grounded representation (Kwiatkowski et al., 2013; Reddy et al., 2016, 2014; Krishnamurthy and Mitchell, 2015; Gardner and Krishnamurthy, 2017). A merit of the two-stage approach is that it creates reusable intermediate interpretations, which potentially enables the handling of unseen words and knowledge transfer across domains (Bender et al., 2015).\nThe successful application of encoder-decoder models (Bahdanau et al., 2015; Sutskever et al., 2014) to a variety of NLP tasks has provided strong impetus to treat semantic parsing as a sequence transduction problem where an utterance is mapped to a target meaning representation in string format (Dong and Lapata, 2016; Jia and Liang, 2016; Koc\u030cisky\u0301 et al., 2016). Such models still fall under the first approach, however, in contrast to previous work (Zelle and Mooney, 1996; Zettlemoyer and Collins, 2005; Liang et al., 2011) they reduce the need for domain-specific assumptions, grammar learning, and more generally extensive feature engineering. But this modeling flexibility comes at a cost since it is no longer possible to interpret how meaning composition is performed. Such knowledge plays a critical role in understand modeling limitations so as to build better semantic parsers. Moreover, without any taskspecific prior knowledge, the learning problem is fairly unconstrained, both in terms of the possible derivations to consider and in terms of the target output which can be ill-formed (e.g., with extra or missing brackets).\nIn this work, we propose a neural semantic parser that alleviates the aforementioned problems. Our model falls under the second class of approaches where utterances are first mapped to an intermediate representation containing natural language predicates. However, rather than using an external parser (Reddy et al., 2014, 2016) or manually specified CCG grammars\n(Kwiatkowski et al., 2013), we induce intermediate representations in the form of predicateargument structures from data. This is achieved with a transition-based approach which by design yields recursive semantic structures, avoiding the problem of generating ill-formed meaning representations. Compared to most existing semantic parsers which employ a CKY style bottomup parsing strategy (Krishnamurthy and Mitchell, 2012; Cai and Yates, 2013; Berant et al., 2013; Berant and Liang, 2014), the transition-based approach we proposed does not require feature decomposition over structures and thereby enables the exploration of rich, non-local features. The output of the transition system is then grounded (e.g., to a knowledge base) with a neural mapping model under the assumption that grounded and ungrounded structures are isomorphic.2 As a result, we obtain a neural network that jointly learns to parse natural language semantics and induce a lexicon that helps grounding.\nThe whole network is trained end-to-end on natural language utterances paired with annotated logical forms or their denotations. We conduct experiments on four datasets, including GEOQUERY (which has logical forms; Zelle and Mooney 1996), SPADES (Bisk et al., 2016), WEBQUESTIONS (Berant et al., 2013), and GRAPHQUESTIONS (Su et al., 2016) (which have denotations). Our semantic parser achieves the state of the art on SPADES and GRAPHQUESTIONS, while obtaining competitive results on GEOQUERY and WEBQUESTIONS. A sideproduct of our modeling framework is that the induced intermediate representations can contribute to rationalizing neural predictions (Lei et al., 2016). Specifically, they can shed light on the kinds of representations (especially predicates) useful for semantic parsing. Evaluation of the induced predicate-argument relations against syntax-based ones reveals that they are interpretable and meaningful compared to heuristic baselines, but they sometimes deviate from linguistic conventions."}, {"heading": "2 Preliminaries", "text": "Problem Formulation Let K denote a knowledge base or more generally a reasoning system, and x an utterance paired with a grounded mean-\n2We discuss the merits and limitations of this assumption in Section 5.\ning representation G or its denotation y. Our problem is to learn a semantic parser that maps x to G via an intermediate ungrounded representation U . When G is executed against K, it outputs denotation y.\nGrounded Meaning Representation We represent grounded meaning representations in FunQL (Kate et al., 2005) amongst many other alternatives such as lambda calculus (Zettlemoyer and Collins, 2005), \u03bb-DCS (Liang, 2013) or graph queries (Holzschuher and Peinl, 2013; Harris et al., 2013). FunQL is a variablefree query language, where each predicate is treated as a function symbol that modifies an argument list. For example, the FunQL representation for the utterance which states do not border texas is:\nanswer(exclude(state(all), next to(texas)))\nwhere next to is a domain-specific binary predicate that takes one argument (i.e., the entity texas) and returns a set of entities (e.g., the states bordering Texas) as its denotation. all is a special predicate that returns a collection of entities. exclude is a predicate that returns the difference between two input sets.\nAn advantage of FunQL is that the resulting s-expression encodes semantic compositionality and derivation of the logical forms. This property makes FunQL logical forms convenient to be predicted with recurrent neural networks (Vinyals et al., 2015; Choe and Charniak, 2016; Dyer et al., 2016). However, FunQL is less expressive than lambda calculus, partially due to the elimination of variables. A more compact logical formulation which our method also applies to is \u03bb-DCS (Liang, 2013). In the absence of anaphora and composite binary predicates, conversion algorithms exist between FunQL and \u03bb-DCS. However, we leave this to future work.\nUngrounded Meaning Representation We also use FunQL to express ungrounded meaning representations. The latter consist primarily of natural language predicates and domain-general predicates. Assuming for simplicity that domaingeneral predicates share the same vocabulary in ungrounded and grounded representations, the ungrounded representation for the example utterance is:\nanswer(exclude(states(all), border(texas)))\nwhere states and border are natural language predicates. In this work we consider five types of domain-general predicates illustrated in Table 1. Notice that domain-general predicates are often implicit, or represent extra-sentential knowledge. For example, the predicate all in the above utterance represents all states in the domain which are not mentioned in the utterance but are critical for working out the utterance denotation. Finally, note that for certain domain-general predicates, it also makes sense to extract natural language rationales (e.g., not is indicative for exclude). But we do not find this helpful in experiments.\nIn this work we constrain ungrounded representations to be structurally isomorphic to grounded ones. In order to derive the target logical forms, all we have to do is replacing predicates in the ungrounded representations with symbols in the knowledge base.3"}, {"heading": "3 Modeling", "text": "In this section, we discuss our neural model which maps utterances to target logical forms. The semantic parsing task is decomposed in two stages: we first explain how an utterance is converted to an intermediate representation (Section 3.1), and then describe how it is grounded to a knowledge base (Section 3.2)."}, {"heading": "3.1 Generating Ungrounded Representations", "text": "At this stage, utterances are mapped to intermediate representations with a transition-based algorithm. In general, the transition system generates the representation by following a derivation tree (which contains a set of applied rules) and some canonical generation order (e.g., depth-first). For\n3As a more general definition, we consider two semantic graphs isomorphic if the graph structures governed by domain-general predicates, ignoring local structures containing only natural language predicates, are the same (Section 5).\nFunQL, a simple solution exists since the representation itself encodes the derivation. Consider again answer(exclude(states(all), border(texas))) which is tree structured. Each predicate (e.g., border) can be visualized as a non-terminal node of the tree and each entity (e.g., texas) as a terminal. The predicate all is a special case which acts as a terminal directly. We can generate the tree with a top-down, depth first transition system reminiscent of recurrent neural network grammars (RNNGs; Dyer et al. 2016). Similar to RNNG, our algorithm uses a buffer to store input tokens in the utterance and a stack to store partially completed trees. A major difference in our semantic parsing scenario is that tokens in the buffer are not fetched in a sequential order or removed from the buffer. This is because the lexical alignment between an utterance and its semantic representation is hidden. Moreover, some predicates cannot be clearly anchored to a token span. Therefore, we allow the generation algorithm to pick tokens and combine logical forms in arbitrary orders, conditioning on the entire set of sentential features. Alternative solutions in the traditional semantic parsing literature include a floating chart parser (Pasupat and Liang, 2015) which allows to construct logical predicates out of thin air.\nOur transition system defines three actions,\nnamely NT, TER, and RED, explained below.\nNT(X) generates a Non-Terminal predicate. This predicate is either a natural language expression such as border, or one of the domain-general predicates exemplified in Table 1 (e.g., exclude). The type of predicate is determined by the placeholder X and once generated, it is pushed onto the stack and represented as a non-terminal followed by an open bracket (e.g., \u2018border(\u2019). The open bracket will be closed by a reduce operation.\nTER(X) generates a TERminal entity or the special predicate all. Note that the terminal choice does not include variable (e.g., $0, $1), since FunQL is a variable-free language which sufficiently captures the semantics of the datasets we work with. The framework could be extended to generate directed acyclic graphs by incorporating variables with additional transition actions for handling variable mentions and co-reference.\nRED stands for REDuce and is used for subtree completion. It recursively pops elements from the stack until an open non-terminal node is encoun-\ntered. The non-terminal is popped as well, after which a composite term representing the entire subtree, e.g., border(texas), is pushed back to the stack. If a RED action results in having no more open non-terminals left on the stack, the transition system terminates. Table 2 shows the transition actions used to generate our running example.\nThe model generates the ungrounded representation U conditioned on utterance x by recursively calling one of the above three actions. Note that U is defined by a sequence of actions (denoted by a) and a sequence of term choices (denoted by u) as shown in Table 2. The conditional probability p(U |x) is factorized over time steps as:\np(U |x) = p(a, u|x)\n=\nT \u220f\nt=1\np(at|a<t, x)p(ut|a<t, x) I(at 6=RED)\n(1)\nwhere I is an indicator function.\nTo predict the actions of the transition system, we encode the input buffer with a bidirectional LSTM (Hochreiter and Schmidhuber, 1997) and the output stack with a stack-LSTM (Dyer et al., 2015). At each time step, the model uses the representation of the transition system et to predict an action:\np(at|a<t, x) \u221d exp(Wa \u00b7 et) (2)\nwhere et is the concatenation of the buffer representation bt and the stack representation st. While the stack representation st is easy to retrieve as\nthe top state of the stack-LSTM, obtaining the buffer representation bt is more involved. This is because we do not have an explicit buffer representation due to the non-projectivity of semantic parsing. We therefore compute at each time step an adaptively weighted representation of bt (Bahdanau et al., 2015) conditioned on the stack representation st. This buffer representation is then concatenated with the stack representation to form the system representation et.\nWhen the predicted action is either NT or TER, an ungrounded term ut (either a predicate or an entity) needs to be chosen from the candidate list depending on the specific placeholder X. To select a domain-general term, we use the same representation of the transition system et to compute a probability distribution over candidate terms:\np(uGENERALt |a<t, x) \u221d exp(Wp \u00b7 et) (3)\nTo choose a natural language term, we directly compute a probability distribution of all natural language terms (in the buffer) conditioned on the stack representation st and select the most relevant term (Jia and Liang, 2016; Gu et al., 2016):\np(uNLt |a<t, x) \u221d exp(st) (4)\nWhen the predicted action is RED, the completed subtree is composed into a single representation on the stack. For the choice of composition function, we use a single-layer neural network as in Dyer et al. (2015), which takes as input the concatenated representation of the predicate and argument of the subtree."}, {"heading": "3.2 Generating Grounded Representations", "text": "Since we constrain the network to learn ungrounded structures that are isomorphic to the target meaning representation, converting ungrounded representations to grounded ones becomes a simple lexical mapping problem. For simplicity, hereafter we do not differentiate natural language and domain-general predicates.\nTo map an ungrounded term ut to a grounded term gt, we compute the conditional probability of gt given ut with a bi-linear neural network:\np(gt|ut) \u221d exp ~ut \u00b7Wug \u00b7 ~gt \u22a4 (5)\nwhere ~ut is the contextual representation of the ungrounded term given by the bidirectional LSTM, ~gt is the grounded term embedding, and Wug is the weight matrix.\nThe above grounding step can be interpreted as learning a lexicon: the model exclusively relies on the intermediate representation U to predict the target meaning representation G without taking into account any additional features based on the utterance. In practice, U may provide sufficient contextual background for closed domain semantic parsing where an ungrounded predicate often maps to a single grounded predicate, but is a relatively impoverished representation for parsing large open-domain knowledge bases like Freebase. In this case, we additionally rely on a discriminative reranker which ranks the grounded representations derived from ungrounded representations (see Section 3.4)."}, {"heading": "3.3 Training Objective", "text": "When the target meaning representation is available, we directly compare it against our predictions and back-propagate. When only denotations are available, we compare surrogate meaning representations against our predictions (Reddy et al., 2014). Surrogate representations are those with the correct denotations. When there exist multiple surrogate representations,4 we select one randomly and back-propagate. The global effect of the above update rule is close to maximizing the marginal likelihood of denotations, which differs from recent work on weakly-supervised semantic parsing based on reinforcement learning (Neelakantan et al., 2017).\n4The average Freebase surrogate representations obtained with highest denotation match (F1) is 1.4.\nConsider utterance x with ungrounded meaning representation U , and grounded meaning representation G. Both U and G are defined with a sequence of transition actions (same for U and G) and a sequence of terms (different for U and G). Recall that a = [a1, \u00b7 \u00b7 \u00b7 , an] denotes the transition action sequence defining U and G; let u = [u1, \u00b7 \u00b7 \u00b7 , uk] denote the ungrounded terms (e.g., predicates), and g = [g1, \u00b7 \u00b7 \u00b7 , gk] the grounded terms. We aim to maximize the likelihood of the grounded meaning representation p(G|x) over all training examples. This likelihood can be decomposed into the likelihood of the grounded action sequence p(a|x) and the grounded term sequence p(g|x), which we optimize separately.\nFor the grounded action sequence (which by design is the same as the ungrounded action sequence and therefore the output of the transition system), we can directly maximize the log likelihood log p(a|x) for all examples:\nLa = \u2211\nx\u2208T\nlog p(a|x) = \u2211\nx\u2208T\nn \u2211\nt=1\nlog p(at|x) (6)\nwhere T denotes examples in the training data. For the grounded term sequence g, since the intermediate ungrounded terms are latent, we maximize the expected log likelihood of the grounded terms \u2211\nu [p(u|x) log p(g|u, x)] for all examples, which is a lower bound of the log likelihood log p(g|x):\nLg = \u2211\nx\u2208T\n\u2211\nu\n[p(u|x) log p(g|u, x)]\n= \u2211\nx\u2208T\n\u2211\nu\n[\np(u|x)\nk \u2211\nt=1\nlog p(gt|ut)\n] (7)\nThe final objective is the combination of La and Lg, denoted as LG = La + Lg. We optimize this objective with the method described in Lei et al. (2016)."}, {"heading": "3.4 Reranker", "text": "As discussed above, for open domain semantic parsing, solely relying on the ungrounded representation would result in an impoverished model lacking sentential context useful for disambiguation decisions. For all Freebase experiments, we followed previous work (Berant et al., 2013; Berant and Liang, 2014; Reddy et al., 2014) in additionally training a discriminative ranker to rerank grounded representations globally.\nThe discriminative ranker is a maximumentropy model (Berant et al., 2013). The objective is to maximize the log likelihood of the correct answer y given x by summing over all grounded candidates G with denotation y (i.e.,[[G]]K = y):\nLy = \u2211\n(x,y)\u2208T\nlog \u2211\n[[G]]K=y\np(G|x) (8)\np(G|x) \u221d exp{f(G,x)} (9)\nwhere f(G,x) is a feature function that maps pair (G, x) into a feature vector. We give details on the features we used in Section 4.2."}, {"heading": "4 Experiments", "text": "In this section, we verify empirically that our semantic parser derives useful meaning representations. We give details on the evaluation datasets and baselines used for comparison. We also describe implementation details and the features used in the discriminative ranker."}, {"heading": "4.1 Datasets", "text": "We evaluated our model on the following datasets which cover different domains, and use different types of training data, i.e., pairs of natural language utterances and grounded meanings or question-answer pairs.\nGEOQUERY (Zelle and Mooney, 1996) contains 880 questions and database queries about US geography. The utterances are compositional, but the language is simple and vocabulary size small. The majority of questions include at most one entity. SPADES (Bisk et al., 2016) contains 93,319 questions derived from CLUEWEB09 (Gabrilovich et al., 2013) sentences. Specifically, the questions were created by randomly removing an entity, thus producing sentence-denotation pairs (Reddy et al., 2014). The sentences include two or more entities and although they are not very compositional, they constitute a largescale dataset for neural network training. WEBQUESTIONS (Berant et al., 2013) contains 5,810 question-answer pairs. Similar to SPADES, it is based on Freebase and the questions are not very compositional. However, they are real questions asked by people on the Web. Finally, GRAPHQUESTIONS (Su et al., 2016) contains 5,166 question-answer pairs which were created by showing 500 Freebase graph queries to Amazon Mechanical Turk workers and asking them to paraphrase them into natural language."}, {"heading": "4.2 Implementation Details", "text": "Amongst the four datasets described above, GEOQUERY has annotated logical forms which we directly use for training. For the other three datasets, we treat surrogate meaning representations which lead to the correct answer as gold standard. The surrogates were selected from a subset of candidate Freebase graphs, which were obtained by entity linking. Entity mentions in SPADES have been automatically annotated with Freebase entities (Gabrilovich et al., 2013). For WEBQUESTIONS and GRAPHQUESTIONS, we follow the procedure described in Reddy et al. (2016). We identify potential entity spans using seven handcrafted partof-speech patterns and associate them with Freebase entities obtained from the Freebase/KG API.5 We use a structured perceptron trained on the entities found in WEBQUESTIONS and GRAPHQUESTIONS to select the top 10 non-overlapping entity disambiguation possibilities. We treat each possibility as a candidate input utterance, and use the perceptron score as a feature in the discriminative reranker, thus leaving the final disambiguation to the semantic parser.\nApart from the entity score, the discriminative ranker uses the following basic features. The first feature is the likelihood score of a grounded representation aggregating all intermediate representations. The second set of features include the embedding similarity between the relation and the utterance, as well as the similarity between the relation and the question words. The last set of features includes the answer type as indicated by the last word in the Freebase relation (Xu et al., 2016).\nWe used the Adam optimizer for training with an initial learning rate of 0.001, two momentum parameters [0.99, 0.999], and batch size 1. The dimensions of the word embeddings, LSTM states, entity embeddings and relation embeddings are [50, 100, 100, 100]. The word embeddings were initialized with Glove embeddings (Pennington et al., 2014). All other embeddings were randomly initialized."}, {"heading": "4.3 Results", "text": "Experimental results on the four datasets are summarized in Tables 3\u20136. We present comparisons of our system which we call SCANNER (as a shorthand for SymboliC meANiNg rEpResentation) against a variety of models previously described\n5 http://developers.google.com/freebase/\nin the literature.\nGEOQUERY results are shown in Table 5. The first block contains symbolic systems, whereas neural models are presented in the second block. We report accuracy which is defined as the proportion of the utterance that are correctly parsed to their gold standard logical forms. All previous neural systems (Dong and Lapata, 2016; Jia and Liang, 2016) treat semantic parsing as a sequence transduction problem and use LSTMs to directly map utterances to logical forms. SCANNER yields performance improvements over these systems when using comparable data sources for training. Jia and Liang (2016) achieve better results with synthetic data that expands GEOQUERY; we could adopt their approach to improve model performance, however, we leave this to future work.\nTable 6 reports SCANNER\u2019s performance on SPADES. For all Freebase related datasets we use average F1 (Berant et al., 2013) as our evaluation metric. Previous work on this dataset has used a semantic parsing framework similar to ours where natural language is converted to an intermediate syntactic representation and then grounded to Freebase. Specifically, Bisk et al. (2016) evaluate the effectiveness of four different CCG parsers on the semantic parsing task when varying the amount of supervision required. As can be seen, SCANNER outperforms all CCG variants (from unsupervised to fully supervised) without having access to any manually annotated derivations or\nlexicons. For fair comparison, we also built a neural baseline that encodes an utterance with a recurrent neural network and then predicts a grounded meaning representation directly (Ture and Jojic, 2016; Yih et al., 2016). Again, we observe that SCANNER outperforms this baseline.\nResults on WEBQUESTIONS are summarized in Table 3. SCANNER obtains performance on par with the best symbolic systems (see the first block in the table). It is important to note that Bast and Haussmann (2015) develop a question answering system, which contrary to ours cannot produce meaning representations whereas Berant and Liang (2015) propose a sophisticated agenda-based parser which is trained borrowing ideas from imitation learning. SCANNER is conceptually similar to Reddy et al. (2016) who also learn a semantic parser via intermediate representations which they generate based on the output of a dependency parser. SCANNER performs competitively despite not having access to any linguistically-informed syntactic structures. The second block in Table 3 reports the results of several neural systems. Xu et al. (2016) represent the state of the art on WEBQUESTIONS. Their system uses Wikipedia to prune out erroneous candidate answers extracted from Freebase. Our model would also benefit from a similar post-processing step. As in previous experiments, SCANNER outperforms the neural baseline, too.\nFinally, Table 4 presents our results on GRAPHQUESTIONS. We report F1 for SCANNER,\nthe neural baseline model, and three symbolic systems presented in Su et al. (2016). SCANNER achieves a new state of the art on this dataset with a gain of 4.23 F1 points over the best previously reported model."}, {"heading": "4.4 Analysis of Intermediate Representations", "text": "Since a central feature of our parser is that it learns intermediate representations with natural language predicates, we conducted additional experiments in order to inspect their quality. For GEOQUERY which contains only 280 test examples, we manually annotated intermediate representations for the test instances and evaluated the learned representations against them. The experimental setup aims to shows how humans can participate in improving the semantic parser with feedback at the intermediate stage. In terms of evaluation, we use three metrics shown in Table 7. The first row shows the percentage of exact matches between the predicted representations and the human annotations. The second row refers to the percentage of structure matches, where the predicted representations have the same structure as the human annotations, but may not use the same lexical terms. Among structurally correct predictions, we additionally compute how many tokens are correct, as shown in the third row. As can be seen, the induced meaning representations overlap to a large extent with the human gold standard.\nWe also evaluated the intermediate representations created by SCANNER on the other three (Freebase) datasets. Since creating a manual gold standard for these large datasets is time-consuming, we compared the induced representations against the output of a syntactic parser. Specifically, we converted the questions to event-argument structures with EASYCCG (Lewis and Steedman, 2014), a high coverage and high accuracy CCG parser. EASYCCG extracts predicate-argument structures with a labeled F-score of 83.37%. For further comparison, we built a simple baseline which identifies pred-\nicates based on the output of the Stanford POStagger (Manning et al., 2014) following the ordering VBD\u226bVBN\u226bVB\u226bVBP\u226bVBZ\u226bMD.\nAs shown in Table 8, on SPADES and WEBQUESTIONS, the predicates learned by our model match the output of EASYCCG more closely than the heuristic baseline. But for GRAPHQUESTIONS which contains more compositional questions, the mismatch is higher. However, since the key idea of our model is to capture salient meaning for the task at hand rather than strictly obey syntax, we would not expect the predicates induced by our system to entirely agree with those produced by the syntactic parser. To further analyze how the learned predicates differ from syntax-based ones, we grouped utterances in SPADES into four types of linguistic constructions: coordination (conj), control and raising (control), prepositional phrase attachment (pp), and subordinate clauses (subord). Table 8 also shows the breakdown of matching scores per linguistic construction, with the number of utterances in each type. In Table 9, we provide examples of predicates identified by SCANNER, indicating whether they agree or not with the output of EASYCCG. As a reminder, the task in SPADES is to predict the entity masked by a blank symbol ( ).\nAs can be seen in Table 8, the matching score is relatively high for utterances involving coordination and prepositional phrase attachments. The model will often identify informative predicates (e.g., nouns) which do not necessarily agree with linguistic intuition. For example, in the utterance wilhelm maybach and his son started maybach in 1909 (see Table 9), SCANNER identifies the predicateargument structure son(wilhelm maybach) rather than started(wilhelm maybach). We also observed that the model struggles with control and subordinate constructions. It has difficulty distinguish-\ning control from raising predicates as exemplified in the utterance ceo john thain agreed to leave from Table 9, where it identifies the raising predicate agreed. For subordinate clauses, SCANNER tends to take shortcuts identifying as predicates words closest to the blank symbol."}, {"heading": "5 Discussion", "text": "We presented a neural semantic parser which converts natural language utterances to grounded meaning representations via intermediate predicate-argument structures. Our model essentially jointly learns how to parse natural language semantics and the lexicons that help grounding. Compared to previous neural semantic parsers, our model is more interpretable as the intermediate structures are useful for inspecting what the model has learned and whether it matches linguistic intuition.\nAn assumption our model imposes is that ungrounded and grounded representations are structurally isomorphic. An advantage of this assumption is that tokens in the ungrounded and grounded representations are strictly aligned. This allows the neural network to focus on parsing and lexical mapping, sidestepping the challenging structure mapping problem which would result in a\nlarger search space and higher variance. On the negative side, the structural isomorphism assumption restricts the expressiveness of the model, especially since one of the main benefits of adopting a two-stage parser is the potential of capturing domain-independent semantic information via the intermediate representation. While it would be challenging to handle drastically nonisomorphic structures in the current model, it is possible to perform local structure matching, i.e., when the mapping between natural language and domain-specific predicates is many-to-one or one-to-many. For instance, Freebase does not contain a relation representing daughter, using instead two relations representing female and child. Previous work (Kwiatkowski et al., 2013) models such cases by introducing collapsing (for manyto-one mapping) and expansion (for one-to-many mapping) operators. Within our current framework, these two types of structural mismatches can be handled with semi-Markov assumptions (Sarawagi and Cohen, 2005; Kong et al., 2016) in the parsing (i.e., predicate selection) and the grounding steps, respectively. Aside from relaxing strict isomorphism, we would also like to perform cross-domain semantic parsing where the first stage of the semantic parser is shared across\ndomains.\nAcknowledgments We would like to thank three anonymous reviewers, members of the Edinburgh ILCC and the IBM Watson, and Abulhair Saparov for feedback. The support of the European Research Council under award number 681760 \u201cTranslating Multiple Modalities into Text\u201d is gratefully acknowledged."}], "references": [{"title": "Neural machine translation by jointly learning to align and translate", "author": ["Dzmitry Bahdanau", "KyunghyunCho", "Yoshua Bengio."], "venue": "Proceedings of ICLR 2015. San Diego, California.", "citeRegEx": "Bahdanau et al\\.,? 2015", "shortCiteRegEx": "Bahdanau et al\\.", "year": 2015}, {"title": "More accurate question answering on Freebase", "author": ["Hannah Bast", "Elmar Haussmann."], "venue": "Proceedings of the 24th ACM International on Conference on Information and Knowledge Management. ACM, pages 1431\u20131440.", "citeRegEx": "Bast and Haussmann.,? 2015", "shortCiteRegEx": "Bast and Haussmann.", "year": 2015}, {"title": "Layers of interpretation: On grammar and compositionality", "author": ["Emily M Bender", "Dan Flickinger", "Stephan Oepen", "Woodley Packard", "Ann Copestake."], "venue": "Proceedings of the 11th International Conference on Computational Semantics. London, UK,", "citeRegEx": "Bender et al\\.,? 2015", "shortCiteRegEx": "Bender et al\\.", "year": 2015}, {"title": "Semantic parsing on Freebase from question-answer pairs", "author": ["Jonathan Berant", "AndrewChou", "Roy Frostig", "Percy Liang."], "venue": "Proceedings of the 2013 Conference on Empirical Methods in Natural Language Processing. Seattle, Washington, pages 1533\u2013", "citeRegEx": "Berant et al\\.,? 2013", "shortCiteRegEx": "Berant et al\\.", "year": 2013}, {"title": "Semantic parsing via paraphrasing", "author": ["Jonathan Berant", "Percy Liang."], "venue": "Proceedings of the 52nd Annual Meeting of the Association for Computational Linguistics (Volume 1: Long Papers). Baltimore, Maryland, pages 1415\u20131425.", "citeRegEx": "Berant and Liang.,? 2014", "shortCiteRegEx": "Berant and Liang.", "year": 2014}, {"title": "Imitation learning of agenda-based semantic parsers", "author": ["Jonathan Berant", "Percy Liang."], "venue": "Transactions of the Association for Computational Linguistics 3:545\u2013558.", "citeRegEx": "Berant and Liang.,? 2015", "shortCiteRegEx": "Berant and Liang.", "year": 2015}, {"title": "Evaluating induced CCG parsers on grounded semantic parsing", "author": ["Yonatan Bisk", "Siva Reddy", "John Blitzer", "Julia Hockenmaier", "Mark Steedman."], "venue": "Proceedings of the 2016 Conference on Empirical Methods in Natural Language Processing. Austin,", "citeRegEx": "Bisk et al\\.,? 2016", "shortCiteRegEx": "Bisk et al\\.", "year": 2016}, {"title": "Question answering with subgraph embeddings", "author": ["Antoine Bordes", "Sumit Chopra", "Jason Weston."], "venue": "Proceedings of the 2014 Conference on Empirical Methods in Natural Language Processing (EMNLP). Doha, Qatar, pages 615\u2013620.", "citeRegEx": "Bordes et al\\.,? 2014", "shortCiteRegEx": "Bordes et al\\.", "year": 2014}, {"title": "Large-scale semantic parsing via schema matching and lexicon", "author": ["Qingqing Cai", "Alexander Yates"], "venue": null, "citeRegEx": "Cai and Yates.,? \\Q2013\\E", "shortCiteRegEx": "Cai and Yates.", "year": 2013}, {"title": "Parsing as language modeling", "author": ["Do Kook Choe", "Eugene Charniak."], "venue": "Proceedings of the 2016", "citeRegEx": "Choe and Charniak.,? 2016", "shortCiteRegEx": "Choe and Charniak.", "year": 2016}, {"title": "Language to logical form with neural attention", "author": ["Li Dong", "Mirella Lapata."], "venue": "Proceedings of the", "citeRegEx": "Dong and Lapata.,? 2016", "shortCiteRegEx": "Dong and Lapata.", "year": 2016}, {"title": "Question answering over Freebase with multicolumn convolutional neural networks", "author": ["Li Dong", "Furu Wei", "Ming Zhou", "Ke Xu."], "venue": "Proceed-", "citeRegEx": "Dong et al\\.,? 2015", "shortCiteRegEx": "Dong et al\\.", "year": 2015}, {"title": "Transitionbased dependency parsing with stack long shortterm memory", "author": ["Chris Dyer", "Miguel Ballesteros", "Wang Ling", "Austin Matthews", "Noah A. Smith."], "venue": "Proceedings of the 53rd Annual", "citeRegEx": "Dyer et al\\.,? 2015", "shortCiteRegEx": "Dyer et al\\.", "year": 2015}, {"title": "Recurrent neural network grammars", "author": ["Chris Dyer", "Adhiguna Kuncoro", "Miguel Ballesteros", "Noah A. Smith."], "venue": "Proceedings of the 2016 Con-", "citeRegEx": "Dyer et al\\.,? 2016", "shortCiteRegEx": "Dyer et al\\.", "year": 2016}, {"title": "A discriminative graph-based parser for the abstract meaning representation", "author": ["Jeffrey Flanigan", "Sam Thomson", "Jaime Carbonell", "Chris Dyer", "Noah A. Smith."], "venue": "Proceedings of the 52nd Annual", "citeRegEx": "Flanigan et al\\.,? 2014", "shortCiteRegEx": "Flanigan et al\\.", "year": 2014}, {"title": "FACC1: Freebase annotation of ClueWeb corpora, version 1 (release date 2013-06-26, format version 1, correction level", "author": ["Evgeniy Gabrilovich", "Michael Ringgaard", "Amarnag Subramanya"], "venue": null, "citeRegEx": "Gabrilovich et al\\.,? \\Q2013\\E", "shortCiteRegEx": "Gabrilovich et al\\.", "year": 2013}, {"title": "OpenVocabulary Semantic Parsing with both Distributional Statistics and Formal Knowledge", "author": ["Matt Gardner", "Jayant Krishnamurthy."], "venue": "Pro-", "citeRegEx": "Gardner and Krishnamurthy.,? 2017", "shortCiteRegEx": "Gardner and Krishnamurthy.", "year": 2017}, {"title": "Graph parsing with s-graph grammars", "author": ["Jonas Groschwitz", "Alexander Koller", "Christoph Teichmann."], "venue": "Proceedings of the 53rd Annual Meet-", "citeRegEx": "Groschwitz et al\\.,? 2015", "shortCiteRegEx": "Groschwitz et al\\.", "year": 2015}, {"title": "Incorporating copying mechanism in sequence-to-sequence learning", "author": ["Jiatao Gu", "Zhengdong Lu", "Hang Li", "Victor OK Li."], "venue": "ACL .", "citeRegEx": "Gu et al\\.,? 2016", "shortCiteRegEx": "Gu et al\\.", "year": 2016}, {"title": "SPARQL 1.1 query language. W3C recommendation", "author": ["Steve Harris", "Andy Seaborne", "Eric Prud\u2019hommeaux"], "venue": null, "citeRegEx": "Harris et al\\.,? \\Q2013\\E", "shortCiteRegEx": "Harris et al\\.", "year": 2013}, {"title": "Long short-term memory", "author": ["Sepp Hochreiter", "J\u00fcrgen Schmidhuber."], "venue": "Neural computation 9(8):1735\u20131780.", "citeRegEx": "Hochreiter and Schmidhuber.,? 1997", "shortCiteRegEx": "Hochreiter and Schmidhuber.", "year": 1997}, {"title": "Performance of graph query languages: comparison of cypher, gremlin and native access in Neo4j", "author": ["Florian Holzschuher", "Ren\u00e9 Peinl."], "venue": "Proceedings of the Joint EDBT/ICDT 2013 Workshops. ACM, pages 195\u2013204.", "citeRegEx": "Holzschuher and Peinl.,? 2013", "shortCiteRegEx": "Holzschuher and Peinl.", "year": 2013}, {"title": "Data recombination for neural semantic parsing", "author": ["Robin Jia", "Percy Liang."], "venue": "Proceedings of the 54th Annual Meeting of the Association for Computational Linguistics (Volume 1: Long Papers). Berlin, Germany, pages 12\u201322.", "citeRegEx": "Jia and Liang.,? 2016", "shortCiteRegEx": "Jia and Liang.", "year": 2016}, {"title": "Learning to Transform Natural to Formal Languages", "author": ["Rohit J. Kate", "Yuk Wah Wong", "Raymond J. Mooney."], "venue": "Proceedings for the 20th National Conference on Artificial Intelligence. Pittsburgh, Pennsylvania, pages 1062\u20131068.", "citeRegEx": "Kate et al\\.,? 2005", "shortCiteRegEx": "Kate et al\\.", "year": 2005}, {"title": "Segmental recurrent neural networks", "author": ["Lingpeng Kong", "Chris Dyer", "Noah A Smith."], "venue": "Proceedings of ICLR 2016. San Juan, Puerto Rico.", "citeRegEx": "Kong et al\\.,? 2016", "shortCiteRegEx": "Kong et al\\.", "year": 2016}, {"title": "Semantic parsing with semi-supervised sequential autoencoders", "author": ["Tom\u00e1\u0161 Ko\u010disk\u00fd", "G\u00e1bor Melis", "Edward Grefenstette", "Chris Dyer", "Wang Ling", "Phil Blunsom", "Karl Moritz Hermann."], "venue": "Proceedings of the 2016 Conference on Empirical Meth-", "citeRegEx": "Ko\u010disk\u00fd et al\\.,? 2016", "shortCiteRegEx": "Ko\u010disk\u00fd et al\\.", "year": 2016}, {"title": "Weakly supervised training of semantic parsers", "author": ["Jayant Krishnamurthy", "Tom Mitchell."], "venue": "Proceedings of the 2012 Joint Conference on Empirical Methods in Natural Language Processing and Computational Natural Language Learning. Jeju Is-", "citeRegEx": "Krishnamurthy and Mitchell.,? 2012", "shortCiteRegEx": "Krishnamurthy and Mitchell.", "year": 2012}, {"title": "Learning a Compositional Semantics for Freebase with an Open Predicate Vocabulary", "author": ["Jayant Krishnamurthy", "Tom M. Mitchell."], "venue": "Transactions of the Association for Computational Linguistics 3:257\u2013270.", "citeRegEx": "Krishnamurthy and Mitchell.,? 2015", "shortCiteRegEx": "Krishnamurthy and Mitchell.", "year": 2015}, {"title": "Inducing probabilistic CCG grammars from logical form with higherorder unification", "author": ["Tom Kwiatkowksi", "Luke Zettlemoyer", "Sharon Goldwater", "Mark Steedman."], "venue": "Proceedings of the 2010 Conference on Empirical Methods in Natural Language", "citeRegEx": "Kwiatkowksi et al\\.,? 2010", "shortCiteRegEx": "Kwiatkowksi et al\\.", "year": 2010}, {"title": "Scaling Semantic Parsers with On-the-Fly Ontology Matching", "author": ["Tom Kwiatkowski", "Eunsol Choi", "Yoav Artzi", "Luke Zettlemoyer."], "venue": "Proceedings of", "citeRegEx": "Kwiatkowski et al\\.,? 2013", "shortCiteRegEx": "Kwiatkowski et al\\.", "year": 2013}, {"title": "Lexical generalization in CCG grammar induction for semantic parsing", "author": ["Tom Kwiatkowski", "Luke Zettlemoyer", "Sharon Goldwater", "Mark Steedman."], "venue": "Proceedings of the 2011 Conference on Empirical Methods in Natural Language Processing.", "citeRegEx": "Kwiatkowski et al\\.,? 2011", "shortCiteRegEx": "Kwiatkowski et al\\.", "year": 2011}, {"title": "Rationalizing neural predictions", "author": ["Tao Lei", "Regina Barzilay", "Tommi Jaakkola."], "venue": "Proceedings of", "citeRegEx": "Lei et al\\.,? 2016", "shortCiteRegEx": "Lei et al\\.", "year": 2016}, {"title": "A* CCG parsing with a supertag-factored model", "author": ["Mike Lewis", "Mark Steedman."], "venue": "Proceed-", "citeRegEx": "Lewis and Steedman.,? 2014", "shortCiteRegEx": "Lewis and Steedman.", "year": 2014}, {"title": "Lambda dependency-based compositional semantics", "author": ["Percy Liang."], "venue": "arXiv preprint arXiv:1309.4408 .", "citeRegEx": "Liang.,? 2013", "shortCiteRegEx": "Liang.", "year": 2013}, {"title": "Learning dependency-based compositional semantics", "author": ["Percy Liang", "Michael Jordan", "Dan Klein."], "venue": "Proceedings of the 49th Annual Meeting", "citeRegEx": "Liang et al\\.,? 2011", "shortCiteRegEx": "Liang et al\\.", "year": 2011}, {"title": "The stanford corenlp natural language processing toolkit", "author": ["Christopher Manning", "Mihai Surdeanu", "John Bauer", "Jenny Finkel", "Steven Bethard", "David McClosky."], "venue": "Proceedings of 52nd Annual", "citeRegEx": "Manning et al\\.,? 2014", "shortCiteRegEx": "Manning et al\\.", "year": 2014}, {"title": "Learning a natural language interface with neural programmer", "author": ["Arvind Neelakantan", "Quoc V Le", "Martin Abadi", "Andrew McCallum", "Dario Amodei."], "venue": "Proceedings of ICLR 2017. Toulon, France.", "citeRegEx": "Neelakantan et al\\.,? 2017", "shortCiteRegEx": "Neelakantan et al\\.", "year": 2017}, {"title": "Compositional semantic parsing on semi-structured tables", "author": ["Panupong Pasupat", "Percy Liang."], "venue": "Proceedings of the 53rd Annual Meeting of the", "citeRegEx": "Pasupat and Liang.,? 2015", "shortCiteRegEx": "Pasupat and Liang.", "year": 2015}, {"title": "Glove: Global vectors for word representation", "author": ["Jeffrey Pennington", "Richard Socher", "Christopher Manning."], "venue": "Proceedings of the 2014 Con-", "citeRegEx": "Pennington et al\\.,? 2014", "shortCiteRegEx": "Pennington et al\\.", "year": 2014}, {"title": "Large-scale semantic parsing without questionanswer pairs. Transactions of the Association for Computational Linguistics 2:377\u2013392", "author": ["Siva Reddy", "Mirella Lapata", "andMark Steedman"], "venue": null, "citeRegEx": "Reddy et al\\.,? \\Q2014\\E", "shortCiteRegEx": "Reddy et al\\.", "year": 2014}, {"title": "Transforming dependency structures to logical forms for semantic parsing", "author": ["Siva Reddy", "Oscar T\u00e4ckstr\u00f6m", "Michael Collins", "Tom Kwiatkowski", "Dipanjan Das", "Mark Steedman", "Mirella Lapata"], "venue": null, "citeRegEx": "Reddy et al\\.,? \\Q2016\\E", "shortCiteRegEx": "Reddy et al\\.", "year": 2016}, {"title": "Semimarkov conditional random fields for information extraction", "author": ["Sunita Sarawagi", "William W Cohen."], "venue": "Advances in Neural Information Processing Systems 17, MIT Press, pages 1185\u20131192.", "citeRegEx": "Sarawagi and Cohen.,? 2005", "shortCiteRegEx": "Sarawagi and Cohen.", "year": 2005}, {"title": "On generating characteristic-rich question sets for qa evaluation", "author": ["Yu Su", "Huan Sun", "Brian Sadler", "Mudhakar Srivatsa", "Izzeddin Gur", "Zenghui Yan", "Xifeng Yan."], "venue": "Proceedings of the 2016 Confer-", "citeRegEx": "Su et al\\.,? 2016", "shortCiteRegEx": "Su et al\\.", "year": 2016}, {"title": "Sequence to sequence learning with neural networks", "author": ["Ilya Sutskever", "Oriol Vinyals", "Quoc V Le."], "venue": "Advances in Neural Information Processing Systems 27, MIT Press, pages 3104\u20133112.", "citeRegEx": "Sutskever et al\\.,? 2014", "shortCiteRegEx": "Sutskever et al\\.", "year": 2014}, {"title": "Simple and effective question answering with recurrent neural networks", "author": ["Ferhan Ture", "Oliver Jojic."], "venue": "arXiv preprint arXiv:1606.05029 .", "citeRegEx": "Ture and Jojic.,? 2016", "shortCiteRegEx": "Ture and Jojic.", "year": 2016}, {"title": "Grammar as a foreign language", "author": ["Oriol Vinyals", "\u0141ukasz Kaiser", "Terry Koo", "Slav Petrov", "Ilya Sutskever", "Geoffrey Hinton."], "venue": "Advances in Neural Information Processing Systems 28. MIT Press, pages 2773\u20132781.", "citeRegEx": "Vinyals et al\\.,? 2015", "shortCiteRegEx": "Vinyals et al\\.", "year": 2015}, {"title": "Learning for semantic parsing with statistical machine translation", "author": ["Yuk Wah Wong", "Raymond Mooney."], "venue": "Proceedings of the Human Language", "citeRegEx": "Wong and Mooney.,? 2006", "shortCiteRegEx": "Wong and Mooney.", "year": 2006}, {"title": "Question answering on Freebase via relation extraction and textual evidence", "author": ["Kun Xu", "Siva Reddy", "Yansong Feng", "Songfang Huang", "Dongyan Zhao."], "venue": "Proceedings of the 54th AnnualMeeting of", "citeRegEx": "Xu et al\\.,? 2016", "shortCiteRegEx": "Xu et al\\.", "year": 2016}, {"title": "Information extraction over structured data: Question answering with Freebase", "author": ["Xuchen Yao", "Benjamin Van Durme."], "venue": "Proceedings of the 52nd", "citeRegEx": "Yao and Durme.,? 2014", "shortCiteRegEx": "Yao and Durme.", "year": 2014}, {"title": "Semantic parsing via staged query graph generation: Question answering with knowledge base", "author": ["Wen-tau Yih", "Ming-Wei Chang", "Xiaodong He", "Jianfeng Gao."], "venue": "Proceedings of the 53rd Annual", "citeRegEx": "Yih et al\\.,? 2015", "shortCiteRegEx": "Yih et al\\.", "year": 2015}, {"title": "The value of semantic parse labeling for knowledge base question answering", "author": ["Wen-tau Yih", "Matthew Richardson", "Chris Meek", "MingWei Chang", "Jina Suh."], "venue": "Proceedings of the 54th Annual Meet-", "citeRegEx": "Yih et al\\.,? 2016", "shortCiteRegEx": "Yih et al\\.", "year": 2016}, {"title": "Learning to Parse Database Queries Using Inductive Logic Programming", "author": ["John M. Zelle", "Raymond J. Mooney."], "venue": "Proceedings of the 13th National Conference on Artificial Intelligence. Portland, Oregon, pages 1050\u20131055.", "citeRegEx": "Zelle and Mooney.,? 1996", "shortCiteRegEx": "Zelle and Mooney.", "year": 1996}, {"title": "Online learning of relaxed CCG grammars for parsing to logical form", "author": ["Luke Zettlemoyer", "Michael Collins."], "venue": "Proceedings of the 2007 Joint Con-", "citeRegEx": "Zettlemoyer and Collins.,? 2007", "shortCiteRegEx": "Zettlemoyer and Collins.", "year": 2007}, {"title": "Learning to Map Sentences to Logical Form: Structured Classification with Probabilistic Categorial Grammars", "author": ["Luke S. Zettlemoyer", "Michael Collins."], "venue": "Proceedings of 21st Conference in Uncertainilty in Artificial Intelligence. Edinburgh,", "citeRegEx": "Zettlemoyer and Collins.,? 2005", "shortCiteRegEx": "Zettlemoyer and Collins.", "year": 2005}, {"title": "Type-driven incremental semantic parsing with polymorphism", "author": ["Kai Zhao", "Liang Huang."], "venue": "In", "citeRegEx": "Zhao and Huang.,? 2015", "shortCiteRegEx": "Zhao and Huang.", "year": 2015}], "referenceMentions": [{"referenceID": 51, "context": "Under the first approach, an utterance is parsed and grounded to a meaning representation directly via learning a task-specific grammar (Zelle and Mooney, 1996; Zettlemoyer and Collins, 2005; Wong and Mooney, 2006; Kwiatkowksi et al., 2010; Liang et al., 2011; Berant et al., 2013; Flanigan et al., 2014; Pasupat and Liang, 2015; Groschwitz et al., 2015).", "startOffset": 136, "endOffset": 354}, {"referenceID": 53, "context": "Under the first approach, an utterance is parsed and grounded to a meaning representation directly via learning a task-specific grammar (Zelle and Mooney, 1996; Zettlemoyer and Collins, 2005; Wong and Mooney, 2006; Kwiatkowksi et al., 2010; Liang et al., 2011; Berant et al., 2013; Flanigan et al., 2014; Pasupat and Liang, 2015; Groschwitz et al., 2015).", "startOffset": 136, "endOffset": 354}, {"referenceID": 46, "context": "Under the first approach, an utterance is parsed and grounded to a meaning representation directly via learning a task-specific grammar (Zelle and Mooney, 1996; Zettlemoyer and Collins, 2005; Wong and Mooney, 2006; Kwiatkowksi et al., 2010; Liang et al., 2011; Berant et al., 2013; Flanigan et al., 2014; Pasupat and Liang, 2015; Groschwitz et al., 2015).", "startOffset": 136, "endOffset": 354}, {"referenceID": 28, "context": "Under the first approach, an utterance is parsed and grounded to a meaning representation directly via learning a task-specific grammar (Zelle and Mooney, 1996; Zettlemoyer and Collins, 2005; Wong and Mooney, 2006; Kwiatkowksi et al., 2010; Liang et al., 2011; Berant et al., 2013; Flanigan et al., 2014; Pasupat and Liang, 2015; Groschwitz et al., 2015).", "startOffset": 136, "endOffset": 354}, {"referenceID": 34, "context": "Under the first approach, an utterance is parsed and grounded to a meaning representation directly via learning a task-specific grammar (Zelle and Mooney, 1996; Zettlemoyer and Collins, 2005; Wong and Mooney, 2006; Kwiatkowksi et al., 2010; Liang et al., 2011; Berant et al., 2013; Flanigan et al., 2014; Pasupat and Liang, 2015; Groschwitz et al., 2015).", "startOffset": 136, "endOffset": 354}, {"referenceID": 3, "context": "Under the first approach, an utterance is parsed and grounded to a meaning representation directly via learning a task-specific grammar (Zelle and Mooney, 1996; Zettlemoyer and Collins, 2005; Wong and Mooney, 2006; Kwiatkowksi et al., 2010; Liang et al., 2011; Berant et al., 2013; Flanigan et al., 2014; Pasupat and Liang, 2015; Groschwitz et al., 2015).", "startOffset": 136, "endOffset": 354}, {"referenceID": 14, "context": "Under the first approach, an utterance is parsed and grounded to a meaning representation directly via learning a task-specific grammar (Zelle and Mooney, 1996; Zettlemoyer and Collins, 2005; Wong and Mooney, 2006; Kwiatkowksi et al., 2010; Liang et al., 2011; Berant et al., 2013; Flanigan et al., 2014; Pasupat and Liang, 2015; Groschwitz et al., 2015).", "startOffset": 136, "endOffset": 354}, {"referenceID": 37, "context": "Under the first approach, an utterance is parsed and grounded to a meaning representation directly via learning a task-specific grammar (Zelle and Mooney, 1996; Zettlemoyer and Collins, 2005; Wong and Mooney, 2006; Kwiatkowksi et al., 2010; Liang et al., 2011; Berant et al., 2013; Flanigan et al., 2014; Pasupat and Liang, 2015; Groschwitz et al., 2015).", "startOffset": 136, "endOffset": 354}, {"referenceID": 17, "context": "Under the first approach, an utterance is parsed and grounded to a meaning representation directly via learning a task-specific grammar (Zelle and Mooney, 1996; Zettlemoyer and Collins, 2005; Wong and Mooney, 2006; Kwiatkowksi et al., 2010; Liang et al., 2011; Berant et al., 2013; Flanigan et al., 2014; Pasupat and Liang, 2015; Groschwitz et al., 2015).", "startOffset": 136, "endOffset": 354}, {"referenceID": 29, "context": "then mapped to a grounded representation (Kwiatkowski et al., 2013; Reddy et al., 2016, 2014; Krishnamurthy and Mitchell, 2015; Gardner and Krishnamurthy, 2017).", "startOffset": 41, "endOffset": 160}, {"referenceID": 27, "context": "then mapped to a grounded representation (Kwiatkowski et al., 2013; Reddy et al., 2016, 2014; Krishnamurthy and Mitchell, 2015; Gardner and Krishnamurthy, 2017).", "startOffset": 41, "endOffset": 160}, {"referenceID": 16, "context": "then mapped to a grounded representation (Kwiatkowski et al., 2013; Reddy et al., 2016, 2014; Krishnamurthy and Mitchell, 2015; Gardner and Krishnamurthy, 2017).", "startOffset": 41, "endOffset": 160}, {"referenceID": 2, "context": "A merit of the two-stage approach is that it creates reusable intermediate interpretations, which potentially enables the handling of unseen words and knowledge transfer across domains (Bender et al., 2015).", "startOffset": 185, "endOffset": 206}, {"referenceID": 0, "context": "The successful application of encoder-decoder models (Bahdanau et al., 2015; Sutskever et al., 2014) to a variety of NLP tasks has provided strong impetus to treat semantic parsing as a sequence transduction problem where an utterance is mapped to a target meaning representation in string format (Dong and Lapata, 2016; Jia and Liang, 2016; Ko\u010disk\u00fd et al.", "startOffset": 53, "endOffset": 100}, {"referenceID": 43, "context": "The successful application of encoder-decoder models (Bahdanau et al., 2015; Sutskever et al., 2014) to a variety of NLP tasks has provided strong impetus to treat semantic parsing as a sequence transduction problem where an utterance is mapped to a target meaning representation in string format (Dong and Lapata, 2016; Jia and Liang, 2016; Ko\u010disk\u00fd et al.", "startOffset": 53, "endOffset": 100}, {"referenceID": 10, "context": ", 2014) to a variety of NLP tasks has provided strong impetus to treat semantic parsing as a sequence transduction problem where an utterance is mapped to a target meaning representation in string format (Dong and Lapata, 2016; Jia and Liang, 2016; Ko\u010disk\u00fd et al., 2016).", "startOffset": 204, "endOffset": 270}, {"referenceID": 22, "context": ", 2014) to a variety of NLP tasks has provided strong impetus to treat semantic parsing as a sequence transduction problem where an utterance is mapped to a target meaning representation in string format (Dong and Lapata, 2016; Jia and Liang, 2016; Ko\u010disk\u00fd et al., 2016).", "startOffset": 204, "endOffset": 270}, {"referenceID": 25, "context": ", 2014) to a variety of NLP tasks has provided strong impetus to treat semantic parsing as a sequence transduction problem where an utterance is mapped to a target meaning representation in string format (Dong and Lapata, 2016; Jia and Liang, 2016; Ko\u010disk\u00fd et al., 2016).", "startOffset": 204, "endOffset": 270}, {"referenceID": 51, "context": "Such models still fall under the first approach, however, in contrast to previous work (Zelle and Mooney, 1996; Zettlemoyer and Collins, 2005; Liang et al., 2011) they reduce the need for domain-specific assumptions, grammar learning, and more generally extensive feature engineering.", "startOffset": 87, "endOffset": 162}, {"referenceID": 53, "context": "Such models still fall under the first approach, however, in contrast to previous work (Zelle and Mooney, 1996; Zettlemoyer and Collins, 2005; Liang et al., 2011) they reduce the need for domain-specific assumptions, grammar learning, and more generally extensive feature engineering.", "startOffset": 87, "endOffset": 162}, {"referenceID": 34, "context": "Such models still fall under the first approach, however, in contrast to previous work (Zelle and Mooney, 1996; Zettlemoyer and Collins, 2005; Liang et al., 2011) they reduce the need for domain-specific assumptions, grammar learning, and more generally extensive feature engineering.", "startOffset": 87, "endOffset": 162}, {"referenceID": 29, "context": "(Kwiatkowski et al., 2013), we induce intermediate representations in the form of predicateargument structures from data.", "startOffset": 0, "endOffset": 26}, {"referenceID": 26, "context": "Compared to most existing semantic parsers which employ a CKY style bottomup parsing strategy (Krishnamurthy and Mitchell, 2012; Cai and Yates, 2013; Berant et al., 2013; Berant and Liang, 2014), the transition-based approach we proposed does not require feature decomposition over structures and thereby enables the exploration of rich, non-local features.", "startOffset": 94, "endOffset": 194}, {"referenceID": 8, "context": "Compared to most existing semantic parsers which employ a CKY style bottomup parsing strategy (Krishnamurthy and Mitchell, 2012; Cai and Yates, 2013; Berant et al., 2013; Berant and Liang, 2014), the transition-based approach we proposed does not require feature decomposition over structures and thereby enables the exploration of rich, non-local features.", "startOffset": 94, "endOffset": 194}, {"referenceID": 3, "context": "Compared to most existing semantic parsers which employ a CKY style bottomup parsing strategy (Krishnamurthy and Mitchell, 2012; Cai and Yates, 2013; Berant et al., 2013; Berant and Liang, 2014), the transition-based approach we proposed does not require feature decomposition over structures and thereby enables the exploration of rich, non-local features.", "startOffset": 94, "endOffset": 194}, {"referenceID": 4, "context": "Compared to most existing semantic parsers which employ a CKY style bottomup parsing strategy (Krishnamurthy and Mitchell, 2012; Cai and Yates, 2013; Berant et al., 2013; Berant and Liang, 2014), the transition-based approach we proposed does not require feature decomposition over structures and thereby enables the exploration of rich, non-local features.", "startOffset": 94, "endOffset": 194}, {"referenceID": 6, "context": "We conduct experiments on four datasets, including GEOQUERY (which has logical forms; Zelle and Mooney 1996), SPADES (Bisk et al., 2016), WEBQUESTIONS (Berant et al.", "startOffset": 117, "endOffset": 136}, {"referenceID": 3, "context": ", 2016), WEBQUESTIONS (Berant et al., 2013), and GRAPHQUESTIONS (Su et al.", "startOffset": 22, "endOffset": 43}, {"referenceID": 42, "context": ", 2013), and GRAPHQUESTIONS (Su et al., 2016) (which have denotations).", "startOffset": 28, "endOffset": 45}, {"referenceID": 31, "context": "A sideproduct of our modeling framework is that the induced intermediate representations can contribute to rationalizing neural predictions (Lei et al., 2016).", "startOffset": 140, "endOffset": 158}, {"referenceID": 23, "context": "Grounded Meaning Representation We represent grounded meaning representations in FunQL (Kate et al., 2005) amongst many other alternatives such as lambda calculus (Zettlemoyer and Collins, 2005), \u03bb-DCS (Liang, 2013) or graph queries (Holzschuher and Peinl, 2013; Harris et al.", "startOffset": 87, "endOffset": 106}, {"referenceID": 53, "context": ", 2005) amongst many other alternatives such as lambda calculus (Zettlemoyer and Collins, 2005), \u03bb-DCS (Liang, 2013) or graph queries (Holzschuher and Peinl, 2013; Harris et al.", "startOffset": 64, "endOffset": 95}, {"referenceID": 33, "context": ", 2005) amongst many other alternatives such as lambda calculus (Zettlemoyer and Collins, 2005), \u03bb-DCS (Liang, 2013) or graph queries (Holzschuher and Peinl, 2013; Harris et al.", "startOffset": 103, "endOffset": 116}, {"referenceID": 21, "context": ", 2005) amongst many other alternatives such as lambda calculus (Zettlemoyer and Collins, 2005), \u03bb-DCS (Liang, 2013) or graph queries (Holzschuher and Peinl, 2013; Harris et al., 2013).", "startOffset": 134, "endOffset": 184}, {"referenceID": 19, "context": ", 2005) amongst many other alternatives such as lambda calculus (Zettlemoyer and Collins, 2005), \u03bb-DCS (Liang, 2013) or graph queries (Holzschuher and Peinl, 2013; Harris et al., 2013).", "startOffset": 134, "endOffset": 184}, {"referenceID": 45, "context": "to be predicted with recurrent neural networks (Vinyals et al., 2015; Choe and Charniak, 2016; Dyer et al., 2016).", "startOffset": 47, "endOffset": 113}, {"referenceID": 9, "context": "to be predicted with recurrent neural networks (Vinyals et al., 2015; Choe and Charniak, 2016; Dyer et al., 2016).", "startOffset": 47, "endOffset": 113}, {"referenceID": 13, "context": "to be predicted with recurrent neural networks (Vinyals et al., 2015; Choe and Charniak, 2016; Dyer et al., 2016).", "startOffset": 47, "endOffset": 113}, {"referenceID": 33, "context": "A more compact logical formulation which our method also applies to is \u03bb-DCS (Liang, 2013).", "startOffset": 77, "endOffset": 90}, {"referenceID": 13, "context": "We can generate the tree with a top-down, depth first transition system reminiscent of recurrent neural network grammars (RNNGs; Dyer et al. 2016).", "startOffset": 121, "endOffset": 146}, {"referenceID": 37, "context": "Alternative solutions in the traditional semantic parsing literature include a floating chart parser (Pasupat and Liang, 2015) which allows to construct logical predicates out of thin air.", "startOffset": 101, "endOffset": 126}, {"referenceID": 20, "context": "we encode the input buffer with a bidirectional LSTM (Hochreiter and Schmidhuber, 1997) and the output stack with a stack-LSTM (Dyer et al.", "startOffset": 53, "endOffset": 87}, {"referenceID": 12, "context": "we encode the input buffer with a bidirectional LSTM (Hochreiter and Schmidhuber, 1997) and the output stack with a stack-LSTM (Dyer et al., 2015).", "startOffset": 127, "endOffset": 146}, {"referenceID": 0, "context": "We therefore compute at each time step an adaptively weighted representation of bt (Bahdanau et al., 2015) conditioned on the stack representation st.", "startOffset": 83, "endOffset": 106}, {"referenceID": 22, "context": "To choose a natural language term, we directly compute a probability distribution of all natural language terms (in the buffer) conditioned on the stack representation st and select the most relevant term (Jia and Liang, 2016; Gu et al., 2016):", "startOffset": 205, "endOffset": 243}, {"referenceID": 18, "context": "To choose a natural language term, we directly compute a probability distribution of all natural language terms (in the buffer) conditioned on the stack representation st and select the most relevant term (Jia and Liang, 2016; Gu et al., 2016):", "startOffset": 205, "endOffset": 243}, {"referenceID": 12, "context": "For the choice of composition function, we use a single-layer neural network as in Dyer et al. (2015), which takes as input the concatenated representation of the predicate and argument of the subtree.", "startOffset": 83, "endOffset": 102}, {"referenceID": 39, "context": "When only denotations are available, we compare surrogate meaning representations against our predictions (Reddy et al., 2014).", "startOffset": 106, "endOffset": 126}, {"referenceID": 36, "context": "mantic parsing based on reinforcement learning (Neelakantan et al., 2017).", "startOffset": 47, "endOffset": 73}, {"referenceID": 31, "context": "We optimize this objective with the method described in Lei et al. (2016).", "startOffset": 56, "endOffset": 74}, {"referenceID": 3, "context": "For all Freebase experiments, we followed previous work (Berant et al., 2013; Berant and Liang, 2014; Reddy et al., 2014) in additionally training a discriminative ranker to rerank grounded representations globally.", "startOffset": 56, "endOffset": 121}, {"referenceID": 4, "context": "For all Freebase experiments, we followed previous work (Berant et al., 2013; Berant and Liang, 2014; Reddy et al., 2014) in additionally training a discriminative ranker to rerank grounded representations globally.", "startOffset": 56, "endOffset": 121}, {"referenceID": 39, "context": "For all Freebase experiments, we followed previous work (Berant et al., 2013; Berant and Liang, 2014; Reddy et al., 2014) in additionally training a discriminative ranker to rerank grounded representations globally.", "startOffset": 56, "endOffset": 121}, {"referenceID": 3, "context": "The discriminative ranker is a maximumentropy model (Berant et al., 2013).", "startOffset": 52, "endOffset": 73}, {"referenceID": 51, "context": "GEOQUERY (Zelle and Mooney, 1996) contains 880 questions and database queries about US geography.", "startOffset": 9, "endOffset": 33}, {"referenceID": 6, "context": "SPADES (Bisk et al., 2016) con-", "startOffset": 7, "endOffset": 26}, {"referenceID": 15, "context": "tains 93,319 questions derived from CLUEWEB09 (Gabrilovich et al., 2013) sentences.", "startOffset": 46, "endOffset": 72}, {"referenceID": 39, "context": "the questions were created by randomly removing an entity, thus producing sentence-denotation pairs (Reddy et al., 2014).", "startOffset": 100, "endOffset": 120}, {"referenceID": 3, "context": "WEBQUESTIONS (Berant et al., 2013) contains 5,810 question-answer pairs.", "startOffset": 13, "endOffset": 34}, {"referenceID": 42, "context": "Finally, GRAPHQUESTIONS (Su et al., 2016) contains 5,166 question-answer pairs which were created by showing 500 Freebase graph queries to Amazon Mechanical Turk workers and asking them to paraphrase them into natural language.", "startOffset": 24, "endOffset": 41}, {"referenceID": 15, "context": "Entity mentions in SPADES have been automatically annotated with Freebase entities (Gabrilovich et al., 2013).", "startOffset": 83, "endOffset": 109}, {"referenceID": 15, "context": "Entity mentions in SPADES have been automatically annotated with Freebase entities (Gabrilovich et al., 2013). For WEBQUESTIONS and GRAPHQUESTIONS, we follow the procedure described in Reddy et al. (2016). We identify potential entity spans using seven handcrafted partof-speech patterns and associate them with Freebase entities obtained from the Freebase/KG API.", "startOffset": 84, "endOffset": 205}, {"referenceID": 47, "context": "tures includes the answer type as indicated by the last word in the Freebase relation (Xu et al., 2016).", "startOffset": 86, "endOffset": 103}, {"referenceID": 38, "context": "The word embeddings were initialized with Glove embeddings (Pennington et al., 2014).", "startOffset": 59, "endOffset": 84}, {"referenceID": 1, "context": "9 Bast and Haussmann (2015) 49.", "startOffset": 2, "endOffset": 28}, {"referenceID": 1, "context": "9 Bast and Haussmann (2015) 49.4 Berant and Liang (2015) 49.", "startOffset": 2, "endOffset": 57}, {"referenceID": 1, "context": "9 Bast and Haussmann (2015) 49.4 Berant and Liang (2015) 49.7 Reddy et al. (2016) 50.", "startOffset": 2, "endOffset": 82}, {"referenceID": 3, "context": "SEMPRE (Berant et al., 2013) 10.", "startOffset": 7, "endOffset": 28}, {"referenceID": 4, "context": "80 PARASEMPRE (Berant and Liang, 2014) 12.", "startOffset": 14, "endOffset": 38}, {"referenceID": 42, "context": "Numbers for comparison systems are from Su et al. (2016).", "startOffset": 40, "endOffset": 57}, {"referenceID": 10, "context": "All previous neural systems (Dong and Lapata, 2016; Jia and Liang, 2016) treat semantic parsing as a sequence transduction problem and use LSTMs to directly map utterances to logical forms.", "startOffset": 28, "endOffset": 72}, {"referenceID": 22, "context": "All previous neural systems (Dong and Lapata, 2016; Jia and Liang, 2016) treat semantic parsing as a sequence transduction problem and use LSTMs to directly map utterances to logical forms.", "startOffset": 28, "endOffset": 72}, {"referenceID": 10, "context": "All previous neural systems (Dong and Lapata, 2016; Jia and Liang, 2016) treat semantic parsing as a sequence transduction problem and use LSTMs to directly map utterances to logical forms. SCANNER yields performance improvements over these systems when using comparable data sources for training. Jia and Liang (2016) achieve better results with synthetic data that expands GEO-", "startOffset": 29, "endOffset": 319}, {"referenceID": 3, "context": "use average F1 (Berant et al., 2013) as our evaluation metric.", "startOffset": 15, "endOffset": 36}, {"referenceID": 3, "context": "use average F1 (Berant et al., 2013) as our evaluation metric. Previous work on this dataset has used a semantic parsing framework similar to ours where natural language is converted to an intermediate syntactic representation and then grounded to Freebase. Specifically, Bisk et al. (2016) evaluate the effectiveness of four different CCG parsers on the semantic parsing task when varying the amount of supervision required.", "startOffset": 16, "endOffset": 291}, {"referenceID": 28, "context": "1 Kwiatkowksi et al. (2010) 87.", "startOffset": 2, "endOffset": 28}, {"referenceID": 28, "context": "1 Kwiatkowksi et al. (2010) 87.9 Kwiatkowski et al. (2011) 88.", "startOffset": 2, "endOffset": 59}, {"referenceID": 28, "context": "1 Kwiatkowksi et al. (2010) 87.9 Kwiatkowski et al. (2011) 88.6 Kwiatkowski et al. (2013) 88.", "startOffset": 2, "endOffset": 90}, {"referenceID": 28, "context": "1 Kwiatkowksi et al. (2010) 87.9 Kwiatkowski et al. (2011) 88.6 Kwiatkowski et al. (2013) 88.0 Zhao and Huang (2015) 88.", "startOffset": 2, "endOffset": 117}, {"referenceID": 28, "context": "1 Kwiatkowksi et al. (2010) 87.9 Kwiatkowski et al. (2011) 88.6 Kwiatkowski et al. (2013) 88.0 Zhao and Huang (2015) 88.9 Liang et al. (2011) 91.", "startOffset": 2, "endOffset": 142}, {"referenceID": 6, "context": "Unsupervised CCG (Bisk et al., 2016) 24.", "startOffset": 17, "endOffset": 36}, {"referenceID": 6, "context": "8 Semi-supervised CCG (Bisk et al., 2016) 28.", "startOffset": 22, "endOffset": 41}, {"referenceID": 6, "context": "6 Supervised CCG (Bisk et al., 2016) 30.", "startOffset": 17, "endOffset": 36}, {"referenceID": 6, "context": "9 Rule-based system (Bisk et al., 2016) 31.", "startOffset": 20, "endOffset": 39}, {"referenceID": 44, "context": "For fair comparison, we also built a neural baseline that encodes an utterance with a recurrent neural network and then predicts a grounded meaning representation directly (Ture and Jojic, 2016; Yih et al., 2016).", "startOffset": 172, "endOffset": 212}, {"referenceID": 50, "context": "For fair comparison, we also built a neural baseline that encodes an utterance with a recurrent neural network and then predicts a grounded meaning representation directly (Ture and Jojic, 2016; Yih et al., 2016).", "startOffset": 172, "endOffset": 212}, {"referenceID": 1, "context": "It is important to note that Bast and Haussmann (2015) develop a question answering system, which contrary to ours cannot produce meaning representations whereas Berant and Liang (2015) propose a sophisticated agenda-based parser which is trained borrowing ideas from imitation learning.", "startOffset": 29, "endOffset": 55}, {"referenceID": 1, "context": "It is important to note that Bast and Haussmann (2015) develop a question answering system, which contrary to ours cannot produce meaning representations whereas Berant and Liang (2015) propose a sophisticated agenda-based parser which is trained borrowing ideas from imitation learning.", "startOffset": 29, "endOffset": 186}, {"referenceID": 1, "context": "It is important to note that Bast and Haussmann (2015) develop a question answering system, which contrary to ours cannot produce meaning representations whereas Berant and Liang (2015) propose a sophisticated agenda-based parser which is trained borrowing ideas from imitation learning. SCANNER is conceptually similar to Reddy et al. (2016) who also learn a semantic parser via intermediate representations which they generate based on the output of a dependency parser.", "startOffset": 29, "endOffset": 343}, {"referenceID": 1, "context": "It is important to note that Bast and Haussmann (2015) develop a question answering system, which contrary to ours cannot produce meaning representations whereas Berant and Liang (2015) propose a sophisticated agenda-based parser which is trained borrowing ideas from imitation learning. SCANNER is conceptually similar to Reddy et al. (2016) who also learn a semantic parser via intermediate representations which they generate based on the output of a dependency parser. SCANNER performs competitively despite not having access to any linguistically-informed syntactic structures. The second block in Table 3 reports the results of several neural systems. Xu et al. (2016) represent the state of the art on WEBQUESTIONS.", "startOffset": 29, "endOffset": 675}, {"referenceID": 42, "context": "the neural baseline model, and three symbolic systems presented in Su et al. (2016). SCANNER achieves a new state of the art on this dataset with a gain of 4.", "startOffset": 67, "endOffset": 84}, {"referenceID": 32, "context": "Specifically, we converted the questions to event-argument structures with EASYCCG (Lewis and Steedman, 2014), a high coverage and high accuracy CCG parser.", "startOffset": 83, "endOffset": 109}, {"referenceID": 35, "context": "icates based on the output of the Stanford POStagger (Manning et al., 2014) following the ordering VBD\u226bVBN\u226bVB\u226bVBP\u226bVBZ\u226bMD.", "startOffset": 53, "endOffset": 75}, {"referenceID": 29, "context": "Previous work (Kwiatkowski et al., 2013) models such cases by introducing collapsing (for manyto-one mapping) and expansion (for one-to-many mapping) operators.", "startOffset": 14, "endOffset": 40}, {"referenceID": 41, "context": "Within our current framework, these two types of structural mismatches can be handled with semi-Markov assumptions (Sarawagi and Cohen, 2005; Kong et al., 2016) in the parsing (i.", "startOffset": 115, "endOffset": 160}, {"referenceID": 24, "context": "Within our current framework, these two types of structural mismatches can be handled with semi-Markov assumptions (Sarawagi and Cohen, 2005; Kong et al., 2016) in the parsing (i.", "startOffset": 115, "endOffset": 160}], "year": 2017, "abstractText": "We introduce a neural semantic parser which is interpretable and scalable. Our model converts natural language utterances to intermediate, domain-general natural language representations in the form of predicate-argument structures, which are induced with a transition system and subsequently mapped to target domains. The semantic parser is trained end-to-end using annotated logical forms or their denotations. We achieve the state of the art on SPADES and GRAPHQUESTIONS and obtain competitive results on GEOQUERY and WEBQUESTIONS. The induced predicate-argument structures shed light on the types of representations useful for semantic parsing and how these are different from linguistically motivated ones.", "creator": "LaTeX with hyperref package"}}}