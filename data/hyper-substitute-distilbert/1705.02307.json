{"id": "1705.02307", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "5-May-2017", "title": "A Time-Vertex Signal Processing Framework", "abstract": "an emerging way to utilize utilizing medium - dimensional para - constraint techniques is to assume that mathematical underlying symbols minimum be captured by a graph. thereby, ideas have begun to emerge owing to the analysis of time - varying graph systems. because latter aims mainly explain the notion of joint process analysis to a full - fledged tool denoted as time - band signal characterization, that links together the information - sensitive complexity processing techniques representing suitable formal tools of graph constraint processing. this entails three main principles : (. ) we increase relevant formal motivation for harmonic place - vertex detectors as an essential tool facilitate the indirect measurement of simple partial parallel lenses on substrates. ( b ) materials improve semantic accuracy of objective pixel procedure comparing multi - to great orders of magnitude. ( c ) through our intrinsic filters, others manipulate ladder - scaled dictionaries reflecting the distribution scales and the general channel - frequency content of a signal. the utility of our methods exists illustrated in numerous directions and datasets, such as dynamic static graphical texture classification, still - video inpainting, and source localization in seismic events. our strategies assure that quantum analysis of time - vertex signals primarily bring ideas to propagation and estimation.", "histories": [["v1", "Fri, 5 May 2017 17:20:32 GMT  (1335kb,D)", "http://arxiv.org/abs/1705.02307v1", null]], "reviews": [], "SUBJECTS": "cs.LG", "authors": ["francesco grassi", "reas loukas", "nathana\\\"el perraudin", "benjamin ricaud"], "accepted": false, "id": "1705.02307"}, "pdf": {"name": "1705.02307.pdf", "metadata": {"source": "CRF", "title": "A Time-Vertex Signal Processing Framework Scalable processing and meaningful representations for time-series on graphs", "authors": ["Francesco Grassi", "Andreas Loukas", "Nathana\u00ebl Perraudin", "Benjamin Ricaud"], "emails": [], "sections": [{"heading": null, "text": "Index Terms\u2014Time-Vertex Signal Processing, Graph Signal Processing, Partial Differential Equations\nI. INTRODUCTION\nWhether examining consensus and rumor spreading over social networks [1]\u2013[3], transportation networks [4] and related epidemic spreading [5], neuronal activation patterns [6] or time-evolving functional network in the brain [7], as well as other datasets collected from a variety of fields, such as physics, engineering, and lifescience, much of the high-dimensional data exhibit complex non-euclidean properties.\nAn emerging way to deal with these issues is to use a graph to capture the structure underlying the data. This has been the driving force behind recent efforts in the signal processing field to extend harmonic analysis to graph signals, i.e., signals supported on the vertices of irregular graphs [8], [9]. In the field of graph signal processing (GSP), the introduction of the graph Fourier transform (GFT) has enabled us to perform harmonic analysis taking into account the structure of the data, and has lead to improvements for tasks such as clustering [10], low-rank extraction [11], spectral\nestimation [12], [13], non-stationary analysis [14], [15] and semi-supervised learning [16], [17].\nNevertheless, though state-of-the-art graph-based methods have been successful for many tasks, so far they predominantly ignore the time-dimension of data, for example by treating successive signals independently or performing a global average [6], [12], [18]. On the contrary, many of the systems to which GSP is applied to are inherently dynamic. Consider for instance a road network, and suppose that we want to infer traffic conditions given flow information over a subset of highways and streets. Approaches that do not take into account the temporal evolution of traffic will be biased by seasonal variations and unable to provide insights about transient phenomena, such as rush hour traffic, bottlenecks caused by blockage, and stop waves.\nRecently, several ideas begin to emerge related to the analysis of time-varying graph signals, such as Joint time-vertex Fourier transform (JFT) [19] and the joint time-vertex filters [20] and filterbanks [21]. While these constitute notable contributions, we argue that the potential of joint harmonic analysis is yet unexplored, both in terms of its foundations, algorithms, and applications.\nIn this work we aim at elevating the notion of joint harmonic analysis to a full-fledged framework, referred to as the Time-Vertex Signal Processing Framework, that links together the time-domain signal processing techniques with the new tools of GSP.\nThis entails the following contributions: 1. Connection to PDEs. We illustrate how joint analysis emerges when analyzing the state evolution of simple Partial Differential Equations (PDEs) on graphs (Section III-A). We also provide an example (epidemic spreading) demonstrating that the joint frequency analysis can be meaningful for the study non-linear and stochastic processes leading to a compact and intuitive representation (Section III-B). 2. Accurate fast joint filtering. In Section IV we illustrate the utility of joint filtering time-vertex signals and propose a fast filtering implementation, called Fast Fourier-Chebyshev (FFC) algorithm, which significantly improves upon the state-of-the-art filters both in terms of\nar X\niv :1\n70 5.\n02 30\n7v 1\n[ cs\n.L G\n] 5\nM ay\n2 01\n7\n2 separable and non-separable filtering objectives. For the latter case especially, our numerical experiments show that FFC can yield up to two orders of magnitude smaller approximation error at a similar complexity to previous joint filters. 3. Overcomplete representations. We study redundant time-vertex dictionaries and exploit them for signal analysis and synthesis. The proposed framework includes a frame condition guaranteeing that no information is lost. Two particular cases are: time-vertex wavelets capturing the different scales of the signal components, and the short time-vertex Fourier transform that is useful in determining the local time frequency content of the signal.\n4. Illustrating the utility of time-vertex analysis. Finally, Section VI provides experimental evidence for the utility of joint harmonic analysis in a number of graph-temporal datasets that were up to now not fully exploited, such as dynamic meshes, video and general dynamics over networks. The range of applications covers the classical signal processing problems of denoising, inpainting and compression, but also extends to feature extraction for classification and source localization problems."}, {"heading": "A. Related Work", "text": "The time-vertex framework is intimately linked with the stochastic analysis of multivariate signals and, therefore, with graphical models (e.g. [22] and references therein). The main difference between graphical models and GSP lies in the assumption about the relation between the signal and graph [23]. Graphical models adopt a purely Bayesian setting, where edges denote conditional dependencies between variables. As such, the graph usually is a proxy for the covariance and is learned from the data. On the other hand, GSP assumes that the graph is given and its relation to the signal can be understood through harmonic analysis.\nIn this context, the idea of time-vertex analysis can be traced back to the study [24] aiming to process multi-modal signals with different graphs associated with each of their modalities (i.e., one can consider a timevertex signal as multi-modal, with time and graph being the two modalities). Collaboration between the graph theory and signal processing communities has led to new tools to process and analyze time-varying graphs and signals on a graph, such as multilayer graphs and tensor products of graphs [25]\u2013[27]. The notion of joint timevertex harmonic analysis was further realized in [19] by one of the authors of this work. Therein, the joint Fourier analysis is presented and its properties analyzed in details, together with examples of joint filters. In this work, we leverage these concepts proposing a framework\nin which the joint Fourier transform is just one of the building blocks.\nVisualization, filtering and stationarity. The idea of analyzing the behavior of graph filters with time-varying signals first appeared in [28], showing that graph filters could be analyzed by applying jointly a GFT and a Ztransform and as such they possess a joint frequency response. Since then, we have seen a number of works dealing with time-varying signals on graphs: Authors in [29] propose a method that relies on graph wavelet theory and product graphs to visualize time-varying data defined on the vertices of a graph in order to identify spatial and/or temporal variations. A step towards the graphical model has been carried out by authors in [30]. In this work, authors assume data time dependencies to be modeled by an auto-regressive (AR) process and they propose several algorithms to estimate the network structure capturing the spatio-temporal dependencies and the coefficients of the AR process expressed as graph polynomial filters. In order to deal with the high computational complexity of the eigendecomposition, different filtering approximation algorithms have been proposed, mainly based on polynomials: centralized and distributed joint filter 2D Chebychev polynomial [19], separable rational [20] implementations, and autoregressive models [31].\nFinally, in parallel with this work, the authors extended the notions of time stationarity and the recent graph stationarity [12] to the joint time-vertex domain [32] providing a framework for the statistical signal processing of time-vertex signals. Authors showed that assuming joint stationarity to regularize learning can yield significant accuracy improvements and reduce computational complexity in both estimation and recovery tasks prediction with respect to purely time or graph methods [33], [34]. Despite the relevance of this work to time-vertex analysis, here we focus on the purely deterministic setting."}, {"heading": "II. HARMONIC TIME-VERTEX ANALYSIS", "text": "We denote by G = (V, E ,WG) the graph, where V indicates the set of nodes, E the set of edges and WG is the associated N \u00d7 N weight matrix. Furthermore, let LG = DG \u2212WG be the combinatorial Laplacian matrix, i.e. the finite difference approximation to the continuous Laplacian operator [17] or the LaplaceBeltrami operator for Riemannian manifolds [35]. We suppose that the signal on a graph is sampled at T successive regular intervals of unit length. That is, if we denote by xt \u2208 RN the graph signal at instant t, the time-varying graph signal corresponds to the matrix X = [x1,x2, . . . ,xT ] \u2208 RN\u00d7T . We denote X\u1d40, X\u0304 , and X\u2217 the transpose, the complex conjugate and the\n3 hermitian of X . Furthermore, we refer to both X and its vectorized form x = vec(X) \u2208 RNT as \u201ctime-vertex signal\u201d."}, {"heading": "A. The joint time-vertex Fourier transform", "text": "The main idea of harmonic analysis is to decompose a signal into oscillating modes thanks to the Fourier transform. For instance, one analyses oscillations along the temporal axis by applying the Discrete Fourier Transform (DFT) independently to each row of X\nDFT{X} = XU\u0304T , (1)\nwhere UT is the normalized DFT matrix defined as\nU\u2217T (t, k) = e\u2212j\u03c9kt\u221a\nT , with \u03c9k = 2\u03c0(k \u2212 1) T , (2)\nwith t, k = 1, 2, . . . , T. Similarly, the Graph Fourier Transform (GFT) [8], [14], [36] allows us to analyze oscillations along the graph edges. As each column of X represents a time instant, the GFT of X for all t reads\nGFT{X} = X\u0303 = U\u2217GX, (3)\nwhere UG is obtained by the eigendecomposition LG = UG\u039bGU \u2217 G of the graph Laplacian. As UG is orthonormal, the inverse Fourier transform becomes GFT-1{X\u0303} = X = UGX\u0303 . This spectral decomposition gives rise to a graph-specific notion of frequency as their squared modulus corresponds the Laplacian eigenvalue \u039bG(`, `) = \u03bb`.\nHarmonic time-vertex analysis amounts to analyzing oscillations jointly along both the time and the vertex dimensions. Hence, assuming a non-varying graph in time, the joint time-vertex Fourier transform, or JFT for short, is obtained by applying the GFT on the graph dimension and the DFT along the time dimension [19]\nX\u0302(`, k) = 1\u221a T N\u2211 n=1 T\u2211 t=1 X(n, t)u\u2217` (n)e \u2212j\u03c9kt.\nThe above expression can be conveniently rewritten in matrix form as\nX\u0302 = JFT{X} = U\u2217GXUT . (4)\nExpressed in vector form, the transform becomes\nx\u0302 = JFT{x} = U\u2217J x, (5)\nwhere UJ = UT \u2297 UG is the Kronecker product of the basis. The relation between Eq.(4) and Eq.(5) is obtained through the property of the Kronecker product (M1 \u2297M2)x = M2XM\u1d401 .\nProperties of JFT.\nProperty 1. JFT is an invertible transform. The inverse JFT in matrix and vector form are, respectively, JFT -1{X\u0302} = UGXU \u1d40 T and JFT -1{x\u0302} = UJx.\nProperty 2. The Parseval relation holds:\nN,T\u2211 n,t=1 |X(n, t)|2 = N,T\u2211 `,k=1 |X\u0302(`, k)|2. (6)\nProperty 3. The transform is independent on the order GFT and DFT are applied to the time-vertex signal\nJFT{X} = GFT{DFT{X}} = DFT{GFT{X}}.\nProperty 4. The subspace of zero graph and temporal frequency is spanned by the constant time-vertex signal 11\u2217, with 1 the all-ones vector."}, {"heading": "B. Time-vertex calculus and variation", "text": "In the following, we briefly present the main timevertex differential operators. These will help us (a) to perform calculus on a finite, discrete time and space, and (b) to characterize the properties of the signals, such as smoothness, while taking into account the intrinsic structure of the data domain.\nTime and vertex domains. Before introducing the timevertex operators, we momentarily diverge by presenting the standard definitions in the time and graph domains. The main discrete calculus operator in time is the first order difference operator\nX\u2207T |t = xt \u2212 xt\u22121,\ntaken here with periodic boundary conditions. Hence, the symmetric time Laplacian matrix LT = \u2207\u2217T\u2207T is the discrete second order derivative in time with reversed sign\nXLT |t = \u2212xt+1 + 2xt \u2212 xt\u22121 (7)\nwith xt+1 = x1. As a circulant matrix, it has eigendecomposition LT = UT\u039bTU\u2217T , where\n\u039bT (k, k) = 2 (1\u2212 cos (\u03c9k)) . (8)\nThe operator corresponding to the time derivative in the vertex is the edge derivative. Given a graph signal x \u2208 RN , the edge derivative with respect to edge e = (n,m) at vertex n is given by\n\u2202X\n\u2202e \u2223\u2223\u2223\u2223 n = \u221a W (n,m) [xn \u2212 xm] . (9)\nTherefore the graph gradient of x at vertex n is \u2207Gx|n = { \u2202x\n\u2202e \u2223\u2223\u2223\u2223 n } e\u2208E\n(10)\nand, as before, LG = \u2207\u2217G\u2207G, where \u2207\u2217G is the divergence operator of the graph.\n4 Joint domain. We define the joint gradient of a timevertex signal X by concatenation of the time and graph gradients:\n\u2207Jx = vec ([\nX\u2207\u1d40T \u2207GX\n]) . (11)\nTherefore \u2207J can be rewritten as \u2207J = [ \u2207T \u2297 IG IT \u2297\u2207G ] . (12)\nThe Laplacian is classically defined to equal the divergence of the gradient, and also in our case the joint Laplacian is LJ = \u2207\u2217J\u2207J . Expanding the expression while exploiting the mixed-product property of the Kronecker product, we find\nLJ = (\u2207T \u2297 IG)\u2217(\u2207T \u2297 IG) + (IT \u2297\u2207G)\u2217(IT \u2297\u2207G) = (\u2207\u2217T \u2297 IG)(\u2207T \u2297 IG) + (IT \u2297\u2207\u2217G)(IT \u2297\u2207G) = (\u2207\u2217T\u2207T )\u2297 IG + IT \u2297 (\u2207\u2217G\u2207G) = LT \u2297 IG + IT \u2297LG = LT \u00d7LG,\nand therefore LJ is also equivalent to the Cartesian product between the time and graph Laplacians1. Above, and the second equality follows from the mixed-product property of the Kronecker product. Thus, the Laplacian operator LJ applied to the signal x is\nLJx = (LT \u00d7LG)x = vec(LGX +XLT ) .\nThe result of the Cartesian product is a multilayer graph, referred to as the joint graph J , where the original graph G is copied at each time step t = 1, 2, . . . , T . Additionally, each node at layer t is connected to itself at layer t\u22121 and t+1 with periodic boundary conditions. It is useful to remind that the Kronecker product of the two eigenvectors basis UT and UG diagonalize the joint Laplacian with eigenvalues equal to the sum of all the pairs (\u03c9k, \u03bb`) [37]:\nLJ = LT \u2297 IG + IT \u2297LG = (UT\u039bTU \u2217 T )\u2297 IG + IT \u2297 (UG\u039bGU\u2217G)\n= (UT \u2297UG)(\u039bT \u00d7\u039bG)(UT \u2297UG)\u2217 = UJ\u039bJU\u2217J\nwhere we have used the mixed-product property of the Kronecker product.\nMeasures of joint variation. The gradient and its various norms are often used as regularizers in regression because they capture the variation of the signal over a domain of interest. The `2- norm of the joint gradient measures the total variation of\n1In this work we consider the Cartesian product for its amenable spectral properties, but in general other graph products could be considered, such as the Kronecker product J = G\u2297GT or the strong product J = G GT = G\u00d7GT +G\u2297GT [24].\ntim e\nRegular 2D Grid Sensor Graph\nFig. 1. Solution to the wave equation on a regular 2D grid and on a sensor graph at different point in time. The propagating behavior is evident even in the case of irregular domain.\nthe signal across edges and consecutive steps. Observe that\n\u2016\u2207Jx\u201622 = x\u1d40LJx = \u2016\u2207GX\u2016 2 F + \u2016X\u2207T \u2016 2 F\n= tr(X\u1d40LGX) + tr(XLTX\u1d40) (13)\nmeaning that \u2016\u2207Jx\u201622 is separable over the the two domains.\nAnalogously, the `1-norm of the joint gradient can be written as the sum of the `1-norms\n\u2016\u2207Jx\u20161 = \u2016vec(\u2207GX)\u20161 + \u2016vec(X\u2207T )\u20161, (14)\nwhich is often referred as the Total Variation (TV) norm. In general, it is possible to define a mixed norm Np,q (\u00b7)\nNp,q (x) , wG\u2016vec(\u2207GX)\u2016pp + wT \u2016vec(X\u2207T )\u2016 q q\n(15) where the p-norm and the q-norm are computed independently on the two domains and wG, wT are non-negative weights. Such norms are often useful when the signal vary differently (e.g., smooth or piece-wise) across the two domains, as we will show in Section VI-B."}, {"heading": "III. DYNAMICS OVER GRAPHS", "text": "This section motivates the JFT further by showing that it can be used to characterize two linear PDEs evolving over the graph by kernels defined in the joint frequency domain, and also to provide insight on standard non-linear PDEs used in epidemic modeling. Our interest in PDEs analysis is related to their capability of encoding information about the structure of the underlying domain, whether continuous or discrete [38], [39] Moreover, PDEs are not only simple but powerful models of many phenomena observed in reality, but also a motivation for the Fourier transform [40], [41].\n5"}, {"heading": "A. Linear dynamics on graphs", "text": "We are interested in linear PDEs whose solution at each time step can be expressed as a linear operator applied to the initial condition. In particular, we consider the heat diffusion and the wave equations defined in the discrete setting. We denote x1 the initial condition of the PDEs, or equivalently in the joint spectral domain Z(`, k) = x\u03031(`)U \u2217 T (k, 1).\nHeat equation. The discrete heat diffusion equation xt \u2212 xt\u22121 = \u2212sLGxt is, arguably, one of the simplest dynamics described by differential equations. The parameter s represents thermal diffusivity and is interpreted as a scale parameter for multiscale dynamic graph wavelet analysis [15] and graph scale-space theory [42]. It is well understood that\nxt = (I \u2212 sLG)t\u22121x1. (16)\nEvaluating both the GFT and DFT, one also finds that the solution also has distinct structure in the joint spectral domain\nX\u0302(`, k) = 1\u221a T\na(\u03bb`, \u03c9k) T \u2212 1\na(\u03bb`, \u03c9k)\u2212 1 Z(`, k) (17)\nwhere a(\u03bb`, \u03c9k) = (1 \u2212 s\u03bb`) e\u2212j\u03c9k . The JFT of a heat diffusion process therefore exhibits a smooth nonseparable low-pass form.\nWave equation More interesting dynamics can be modeled by the discrete second order differential equation\nXLT = sLGX, (18)\nrepresenting a discrete wave propagating on a graph with speed s > 0. Figure 1 shows the evolution of a signal obtained by solving (18) using a numerical iterative scheme on a regular 2D lattice and on a random sensor graph. It is clear that, assuming a sufficiently regular graph, the solution to Eq. (18) evolves on the graph as a wave propagates in the Euclidean domain. In the appendix we prove that, for vanishing initial velocity, the solution in the joint spectral domain can be written as\nX\u0302(`, k) = K\u0302s(\u03bb`, \u03c9k)Z(`, k)\nwhere K\u0302s(\u03bb`, \u03c9k) = \u2211 t cos(t\u03b8`)e \u2212j\u03c9kt (19)\nand \u03b8` = arccos(1\u2212 s\u03bb`2 ). Since the arccos(x) is defined only for x \u2208 [\u22121, 1], to guarantee stability the parameter s must satisfy s < 4/\u03bbmax.\nThe distinctive pattern of the JFT of a wave shown in Fig. 2 (bottom right) is sparser and more structured that the original (top left), GFT (top right), and DFT (bottom left) representations."}, {"heading": "B. Complex dynamics over networks: the illustrative example of epidemic models", "text": "Time-vertex harmonic analysis often provides useful insights on the dynamics of a signal even when the latter is not characterized by a linear PDE. To illustrate this, we will show how the JFT can be used to characterize the evolution of a non-linear, discrete, and non-deterministic model for the spread of an infectious disease.\nIn particular, we focus on the dynamics corresponding to different compartmental models commonly used in epidemiology. We simulated the epidemics spreading over N = 695 cities of Europe according to two different models: the Susceptible-Exposed-Infected-Recovered (SEIR) model and the SEIRS model, where the immunity of recovered individuals is only temporary. The models are parametrized by the contagion probability of infection, the infectious, latent and immunity periods and the population per city. Each node of the graph represents a city with a fixed population of individuals. Connections within the cities are modeled using randomly generated Erdo\u030bs-Re\u0301nyi graphs. Inter-cities connection are modeled using two graphs, a terrestrial coordinate-based graph and the graph of airline connections between the major city in Europe.\nWe simulate different realizations of the epidemic breakout, varying the parameters and observing how they influence the joint spectrum of the signals describing the evolution of the number of infected individuals at each node. Figure 3 shows the JFT of those signals. In the first case, the spectrum is characterized by regularly spaced lines along the angular frequency axis, caused by the inherent periodicity of the SEIRS model, where every individual can be infected again after the temporary\n6\nimmunity period ceases. The spacing between the lines is due to both the immunity and latent periods. In the second case the epidemic has a more diffusive behaviour, without evident periodicity. For each one of the models, we simulate scenarios with high and low probabilities of contagion. It can be observed that the high probability case is characterized by a larger bandwidth occupancy with respect to the low probability one, due to a more impulsive behaviour of the epidemic breakout. Therefore, JFT seems to reveal the underlying structure and allows us to differentiate between the different models."}, {"heading": "IV. FAST FILTERING OF TIME-VERTEX SIGNALS", "text": "After recalling the definition of joint filters, we next present a novel algorithm to perform fast filtering on large graphs. Experiments illustrate that our algorithm achieves significantly better approximation of filtering objectives than state-of-the-art, while also not being constrained to a specific class of separable responses."}, {"heading": "A. Joint time-vertex filters", "text": "A joint filter h(LG,LT ) is a function defined in the joint two-dimensional spectral domain h : R+ \u00d7 R 7\u2192 C and is evaluated at the graph eigenvalues \u03bb and the angular frequencies \u03c9. Similarly to both the classical and the graph case, the generalized filtering operator is applied by means of the convolution theorem, i.e., pointwise multiplication in the spectral domain. The output of a joint filter is\nh(LG,LT )x = UJ h(\u039bG,\u2126)U \u2217 J x, (20)\nwhere h(\u039bG,\u2126) is a diagonal NT\u00d7NT matrix defined as\nh(\u039bG,\u2126) = diag  h(\u03bb1, \u03c91) \u00b7 \u00b7 \u00b7 h(\u03bb1, \u03c9T )... . . . ... h(\u03bbN , \u03c91) \u00b7 \u00b7 \u00b7 h(\u03bbN , \u03c9T )  \nand the diag(A) operator creates a matrix with diagonal elements the vectorized form of A.\nIllustration: dynamic mesh filtering. Figure 4 shows an example of joint filtering of a mesh representing a dancer2. We design (a) a joint separable lowpass filter that attenuates high frequency components in both graph and time domains, and (b) a wave filter whose frequency response is described in Eq. (19). In the first case, we obtain the approximate skeleton of the mesh with rigid movements, whereas the wave filter produce a fluid (wavy) dancer, enhancing the frequency components in a non-linear fashion. We remark that this effect can only be obtained using non-separable filters.\nSeparable vs. non-separable filters. A notable family of joint filters are those that have separable response\nh(\u03bb, \u03c9) = h1(\u03bb)h2(\u03c9). (21)\nThese filters have a straightforward interpretation: the frequency response of each filter affects only the domain where it is defined\nh(LG,LT )x = vec(h1(LG)Xh2(LT )) . (22)\nMoreover, since they can be designed independently at the two domains, joint filters can be obtained by combining graph and temporal filters [20]. However, due to their simple form, separable filters cannot model the dynamics of PDEs (e.g., waves or heat diffusion), where there is an interplay between the temporal and graph frequency domains. For this reason, in the following we aim to find an efficient joints filter implementation for separable as well as non-separable filtering objectives.\n2http://research.microsoft.com/en-us/um/redmond/events/ geometrycompression/data/default.html\n7"}, {"heading": "B. Fast joint filtering", "text": "Due to the high complexity of eigendecomposition, graph filters are almost always implemented using fast 2D polynomial [43] and rational [31] approximations. In the context of time-vertex analysis, the importance of fast joint filtering is emphasized by the increase of the problem\u2019s dimensions. Recognizing this need, researchers have recently proposed distributed joint filter 2D Chebychev polynomial [19] and separable rational [20] implementations, appropriate for arbitrary and separable joint response functions, respectively. In the following, we improve upon state of the art by enhancing the filtering approximation at a similar (up to logarithmic factors) complexity.\nThe Fast Fourier Chebyshev (FFC) algorithm. The basic idea of our algorithm is to exploit the small complexity of FFT and perform graph filtering in the time-frequency domain. Concretely, to filter X with response h(\u03bb, \u03c9), we do the following:\n1. Compute the FFT of every row of X , at a total complexity of O(NT log T ). 2. For each \u03c9k, approximate h(\u03bb, \u03c9k) with a Chebyshev polynomial of order MG and use the fast graph Chebyshev recursion [14] to filter the corresponding angular frequency component of X . The complexity of this step is O(MGT |E|). 3. Use the inverse FFT to obtain the filtered timevertex signal, with complexity O(NT log T ).\nOur scheme can approximate both separable or nonseparable joint filters using O(T |E|MG + NT log T ) operations, which up to a logarithmic factor is a linear complexity to the number of edges |E|, nodes N , timesteps T , and filter order MG. Moreover, it can be performed distributedly since both the FFT and the graph Chebychev recursion necessitate only local or few hop information.\nNumerical comparison. To evaluate the approximation properties of the above scheme, we show in Figure 5 numerical experiments for an ideal separable lowpass filter and a non-separable wave filter on a time-vertex graph with size N = 5000, T = 3000. In detail, the approximated filtering functions (low pass and wave) are, respectively,\nhLP(\u03bb`, \u03c9k) = e\u2212(\u03bb`\u2212\u03bbcf ) 1 + e\u2212(\u03bb`\u2212\u03bbcf ) e\u2212(|\u03c9k|\u2212\u03c9cf ) 1 + e\u2212(|\u03c9k|\u2212\u03c9cf ) (23)\nhwave(\u03bb`, \u03c9k) = e \u2212|\u03c0|\u03c9k|\u2212arccos(1\u2212\u03bb`/(2\u03bbmax)|2 . (24)\nFor each case, we compare our algorithm with the state-of-the-art, i.e., Chebyshev2D approximation [19] of complexity and the ARMA2D approach [20], while\nchoosing MG and MT as graph and temporal polynomial orders, respectively (here MG = MT ).\nAs shown in Figure 5, FFC results in a significant improvement in accuracy for the same order and the difference is particularly prominent in the non-separable case (ARMA2D cannot be used here). We remark however that, to interpret these results correctly, one has to consider the complexity of each method:\nmethod complexity applicability\nFFC O(T |E|MG +NT log T ) all Cheby2D [19] O(T |E|MT +NTMTMG) all\nARMA2D [20] O(T |E|MG + T |E|MT ) separable\nTherefore, for the same order, the three different methods feature slightly different complexities, implying that a direct comparison of accuracy is not entirely fair. Nevertheless, the unfairness in not in our favor as, in our experiments for all orders larger than 2, the asymptotic complexity of FFC is the smallest (since here MG = MT , log T < MTMG, and log T < |E|MT /N ). We also note that, in practice one often needs MT log T to achieve a good approximation, in which case FFC is the fastest."}, {"heading": "V. TIME-VERTEX DICTIONARIES AND FRAMES", "text": "So far, we have looked at time-vertex signals through the lenses of the canonical and the joint Fourier bases. However, in some cases it is beneficial to also consider alternative representations. For example, in the classic case, the wavelet and the short time Fourier transforms respectively enable time-scale and time-frequency analysis of the signal. The purpose of this section is to show how one can define analogous representations for time-vertex signals. These can be used for instance to generate features given as an input to a classifier (see Section VI-C) or to regularize an optimization problem such as (41) in Section VI-C.\n8 Classically, the atoms of the representations are built by applying a transform (e.g. scaling or modulation) to a mother function and shifting the resulting functions. We follow a similar approach, with the difference that the mother function is replaced by a kernel defined in the time-vertex frequency domain and the shifting has to be replaced by an operator suitable to graphs. The spectral time-vertex wavelet and the short time vertex Fourier transforms follow as consequences of our framework."}, {"heading": "A. Joint time-vertex localization", "text": "The ability to localize a kernel over a particular time and vertex is a key ingredient of our dictionary construction. In the following, we derive such a joint localization operator as a generalization of the graph localization operator [12], [36], [44], which localizes a kernel h(LG) onto vertex vm\nT Gm h \u2206 = h(LG) \u03b4m = N\u2211 `=1 h(\u03bb`) u\u0304`(m)u`. (25)\nAbove, \u03b4m is a Kronecker delta centered at vertex vm. Similarly, in the joint domain we define the joint timevertex localization operator as the filtering with a twodimensional Kronecker delta\nT Jm,\u03c4 h \u2206 = h(LG,LT ) (\u03b4m \u2297 \u03b4\u03c4 ) . (26)\nIt turns out that the joint time-vertex localization operator has the advantages of both the graph localization and the traditional translation operator. Indeed, we observe the following relations\nT Jm,\u03c4 h(n, t) = 1\nT N,T\u2211 `=1 k=1 h(\u03bb`, \u03c9k)u\u0304`(m)e \u2212j\u03c9k\u03c4u`(n)e j\u03c9kt\n= 1\nT T\u2211 k=1 ( N\u2211 `=1 h(\u03bb`, \u03c9k)u\u0304`(m)u`(n) ) ej\u03c9k(t\u2212\u03c4)\n(27)\nFrom (27), it follows that joint localization consists of three steps: (a) localizing independently all kernels h(\u00b7, \u03c9k), (b) computing the inverse DFT along the other dimension, and (c) translating the result. Joint localization is thus equivalent to independent application of a graph localization and a translation. Note that the steps (a) and (b) can be considered as localizing the signal along the time dimension.\nWhen the filter is separable, i.e. h(\u03bb, \u03c9) = hG(\u03bb)hT (\u03c9), the joint localization is simply\nh(LG,LT ) (\u03b4\u03c4\u2297\u03b4m) = vec(hG(LG)(\u03b4\u03c4 \u2297 \u03b4\u1d40m)hT (LT )) , (28) showing that the filter can be localized independently in time and in the vertex domain."}, {"heading": "B. Joint time-vertex dictionaries", "text": "We proceed to present our dictionary construction for time-vertex signals. We start with a mother timevertex kernel h(\u03bb, \u03c9) and a transformation sz\u03bb,z\u03c9 (\u00b7, \u00b7) parametrized by some values [z\u03bb, z\u03c9] belonging to the finite 2D set Z\u03bb \u00d7 Z\u03c9 \u2282 R2 and controlling the kernel\u2019s shape along the vertex and time domains. The transformed kernel is then obtained by composition\nhz\u03bb,z\u03c9 (\u03bb, \u03c9) = h(sz\u03bb,z\u03c9 (\u03bb, \u03c9)). (29)\nWe build our dictionary by transforming h(\u03bb, \u03c9) with all z\u03bb, z\u03c9 \u2208 Z\u03bb \u00d7 Z\u03c9 , (possibly) normalizing, and jointly localizing the resulting kernels hz\u03bb,z\u03c9 (\u03bb, \u03c9) at each node m and time \u03c4 . Concretely, the dictionary is"}, {"heading": "Dh = {T Jm,\u03c4 hz\u03bb,z\u03c9 } for m \u2208 V, \u03c4 = 1, 2, . . . , T,", "text": "and [z\u03bb, z\u03c9] \u2208 Z\u03bb \u00d7Z\u03c9}. (30)\nWhen Dh is overly redundant, one may choose to consider only a subset of values for m and \u03c4 .\nWe next consider two interesting examples of the proposed dictionary construction that are generalizations of the short-time Fourier and wavelet transforms [45], [46]:\nShort Time-Vertex Fourier Transform (STVFT). Set sz\u03bb,z\u03c9 (\u00b7, \u00b7) to a shift in the spectral domain\nsz\u03bb,z\u03c9 (\u03bb, \u03c9) = [\u03bb\u2212 z\u03bb, \u03c9 \u2212 z\u03c9]. (31)\nThis transform can be considered as a modulation. Nevertheless, we note that it does not correspond to a multiplication by an eigenvector as in [36], [47]. Our construction is more related to [48, Section 3]. Then, given a separable mother kernel h(\u03bb, \u03c9) = hG(\u03bb)hT (\u03c9) and a finite 2D set Z\u03bb\u00d7Z\u03c9 \u2282 R2, the STVFT of signal X is defined as\nSTVFT{X}(m, \u03c4, z\u03bb, z\u03c9) \u2206 = \u3008X, T Jm,\u03c4 h(\u03bb\u2212 z\u03bb, \u03c9 \u2212 z\u03c9)\u3009\n= 1\u221a T \u2211 `,k h(\u03bb` \u2212 z\u03bb, \u03c9k \u2212 z\u03c9)X\u0302(`, k)u`(m)ej\u03c9k\u03c4 .\nProvided that h(\u03bb, \u03c9) is localized around [0, 0], the amplitude of the coefficient (n, t, z\u03bb, z\u03c9) indicates the presence of the spectral mode [z\u03bb, z\u03c9] at vertex m and time \u03c4 . Moreover, since the mother kernel is separable, the design in the two domains can be performed independently:\nFor the graph domain, we suggest to select the values of z\u03bb to be equally spaced in [0, \u03bbmax] [48, Section 3]. The spacing should be selected such that\u2211 z\u03bb\u2208Z\u03bb h 2 G(\u03bb` \u2212 z\u03bb) \u2248 c for every \u03bb`, ensuring good conditioning of the associated frame (see [14, Theorem 5.6]). Because of the graph irregularity, in most of the cases, we need to keep all possible values for m, i.e., m = 1, 2, . . . , N .\n9 For the time domain, we recover a traditional STFT, with the difference that hT (\u03c9) is defined in the spectral domain. Nevertheless, for convenience, the window can still be designed in the time domain. As a rule of thumb |Z\u03c9| = lhT , where lhT is the support of hT in the time domain3, and the values of \u03c4 should be sampled regularly with a spacing lhTR , where R is the desired redundancy. For a more complete treatment we refer the reader to [45].\nSpectral Time-Vertex Wavelet Tranform (STVWT). Following the idea developed in [14], we set sz\u03bb,z\u03c9 (\u00b7, \u00b7) to a generalized graph dilation (or scaling), i.e., a multiplication in the spectral domain\nsz\u03bb,z\u03c9 (\u03bb, \u03c9) = [z\u03bb \u03bb, z\u03c9 \u03c9]. (32)\nThen, given a kernel h(\u03bb, \u03c9) the STVWT of X reads\nSTVWT{X}(m, \u03c4, z\u03bb, z\u03c9) \u2206 = \u3008X, T Jm,\u03c4 h(z\u03bb \u03bb, z\u03c9 \u03c9)\u3009\n= 1\u221a T \u2211 `,k h(z\u03bb \u03bb, z\u03c9 \u03c9)X\u0302(`, k)u`(m)e j\u03c9k\u03c4 ,\nwhere z\u03bb, z\u03c9 are the scale parameters for the vertex and the time dimensions. A usual requirement for h(\u03bb, \u03c9) is that it has a zero DC component, i.e., h(0, 0) = 0. Contrarily to the STVFT, the mother kernel here may not be separable, as illustrated in VI-C. The choice of the discretization lattice [m, \u03c4, z\u03bb, z\u03c9] is thus more involved and case dependent: we suggest that m and \u03c4 take all possible N and T values respectively, while z\u03bb and z\u03c9 are carefully selected depending on the application. This choice is justified by the computational complexity detailed in the following."}, {"heading": "C. Joint time-vertex frames", "text": "To make the proposed dictionaries and associated signal representations usable in practice, we next provide answers to three key questions: (a) How can we compute the representations efficiently (i.e., performing analysis and synthesis)? (b) How can we guarantee that the associated transforms are well conditioned such that they can be successfully inverted? (c) How to efficiently invert them, recovering the original signal? The second point is particularly important since a well conditioned transform allows for more robust representations, for instance when the dictionary is used to solve a synthesis or analysis regression problem with a sparse regularizer.\nEfficient analysis and synthesis. The dictionary atoms can be seen as a filter-bank {hz(\u03bb, \u03c9)}z\u2208Z\u03bb\u00d7Z\u03c9 , in\n3In practice, the kernel is chosen to have a compact support in the time-domain.\nwhich case the operators going from the signal to the representation domain and back are the analysis operator\nDh{X}(m, \u03c4, z) = \u3008X, T Jm,\u03c4 hz \u3009 = Cz(m, \u03c4),\nand the synthesis operator D\u2217h{C}(n, t) = \u2211 z \u3008Cz, T Jn,t hz \u3009 = Y (n, t).\nNotice that in general X 6= Y , and equality holds only when the filter-bank is a unitary tight frame.\nInstead of computing the dictionary explicitly (an operation that is costly both in memory and in computations), one may acquire the analysis coefficients for all m, \u03c4 by joint filtering X with kernel hz\u03bb,z\u03c9 taking advantage of the relation Cz = mat(hz(LG,LT )x). Similarly synthesis can be performed by summing filtering operations. Using our FFC filtering algorithm presented in Section IV-B, the total analysis complexity is thus O(|Z\u03bb \u00d7 Z\u03c9|(T |E|MG + NT log T )), where typically MG \u2248 50.\nThe drawback of this technique is that it does not allow us to take advantage of sub-sampling the lattice [n, t], especially in the non-separable case. Indeed, a filtering operation will always provide all coefficients regardless of the desired lattice. While addressing this computational problem is beyond the scope of this contribution, we note that we can still efficiently perform a sub-sampled STVFT by first filtering only in the graph domain and second computing a traditional STFT.\nConditioning and frame bounds. In several applications in signal processing one is interested not only in processing data in another convenient representation, but also to recover the original signal from its alternative representation. Redundant invertible dictionaries are referred to as frames [45], [49]. The following theorem generalizes the classic [45] results regarding the frame bounds, providing a condition for a joint time-vertex dictionary to be a frame, as in the case of graphs [48, Lemma 1], [14, Theorem 5.6].\nTheorem 1. Let {hz(\u03bb, \u03c9)}z\u2208Z\u03bb\u00d7Z\u03c9 be the kernels of a time-vertex dictionary Dh, and set\nA = min l,k \u2211 z |hz(\u03bb`, \u03c9k)|2, B = max l,k \u2211 z |hz(\u03bb`, \u03c9k)|2."}, {"heading": "If 0 < A \u2264 B <\u221e, then Dh is a frame in the sense:", "text": "A\u2016X\u20162F \u2264 \u2016Dh{X}\u2016 2 F \u2264 B\u2016X\u2016 2 F (33)\nfor any time-vertex signal X \u2208 RN\u00d7T .\nThe proof of theorem can be found in the appendix (see section A).\nThe theorem asserts that, if A > 0, no information is lost when the analysis operator is applied to a time-vertex signals, thus the transform is invertible. Furthermore, the\n10\nratio of the frame bounds A/B is related to the condition number of the frame operator Sh{X} = D\u2217h{Dh{X}}, hence it is decisive for efficient reconstruction when we want to recover the signal from its representation solving an optimization problem [14, Section 7].\nEfficient inversion. To recover the signal X from the coefficients C, a solution is to use the pseudo-inverse, i.e. X = D\u2020h{C} or to solve the following convex problem arg minX\u2016Dh{X} \u2212 C\u2016 2 2. Problematically, these are computationally intractable for large value of N and T . We will instead design a dual set of kernels that allows us to invert the transform by a single synthesis operation. To this end, we search for a set of filters h\u0303 such that D\u2217 h\u0303 {Dh{X}} = X . It is not difficult to see that this equality is satisfied when\u2211 z\u03bb,z\u03c9 h\u0303z\u03bb,z\u03c9 (\u03bb`, \u03c9k)hz\u03bb,z\u03c9 (\u03bb`, \u03c9k) = 1, \u2200 \u03bb`, \u03c9k. (34) Although redundant joint time-vertex frames admit an infinite number of dual kernel sets satisfying (34), the typical choice is to use the canonical dual, defined as\nh\u0303z\u03bb,z\u03c9 (\u03bb`, \u03c9k) = \u2211 z\u2032\u03bb,z \u2032 \u03c9 h2z\u2032\u03bb,z\u2032\u03c9 (\u03bb`, \u03c9k) \u22121hz\u03bb,z\u03c9 (\u03bb`, \u03c9k). (35) In fact, this corresponds to the pseudo-inverse of Dh, i.e., D\u2020h = D \u2217 h\u0303\n, while also having a low computational complexity.\nTo summarize, given an invertible time-vertex transform Dh and coefficients C, the inverse transform of Dh associated with the set of kernels {hz\u03bb,z\u03c9}[z\u03bb,z\u03c9]\u2208Z is\nX = D\u2217 h\u0303 {C} = \u2211 z\u03bb,z\u03c9 h\u0303z\u03bb,z\u03c9 (LG,LT )Cz\u03bb,z\u03c9 , (36)\nwhere h\u0303 is defined in (35)."}, {"heading": "VI. EXPERIMENTS", "text": "The suitability of the time-vertex framework for several classes of problems is illustrated on a wide variety of datasets: (a) dynamic meshes representing a walking dog and a dancing man, (b) the Caltrans Performance Measurement System (PeMS) traffic dataset depicting high resolution daily vehicle flow of 10 consecutive days in the highways of Sacramento measured every 5 minutes, (c) simulated SEIR- or SEIRS-type epidemics over Europe, (d) the Kuala Lumpur City Centre (KLCC) time-lapse video and (e) earthquake waveforms recorded by seismic stations geographically distributed in New Zealand, connected to the GeoNet Network.\nResults suggest that joint analysis of time-vertex signals can bring forth benefits in signal denoising and\nrecovery, learning and source localization problems. We remark that all the experiments were done using the GSPBOX [50], the UNLocBoX [51] and the LTFAT [52]. Code reproducing the experiments is available at https://lts2.epfl.ch/reproducible-research/a-timevertex-signal-processing-framework/."}, {"heading": "A. Compactness of representation", "text": "A key motivation behind the joint harmonic analysis is the capability of encoding time-varying graphdependent signal evolution in a compact way. Our first step will therefore be to examine the energy compaction of the JFT transform in four datasets: two meshes representing a dancer (N = 1502 points in R3 and T = 570 timesteps) and a dog walking (N = 2502 points in R3 and T = 52 timesteps), the PeMS traffic flow dataset (N = 710 stations measuring traffic over T = 2880 intervals of 5-minute length each) and the number of infected individuals in an SEIRS epidemic (see Section III-B for description). Transforms with good energy compaction are desirable because they summarize the data well and can be used to construct efficient regularizers for regression problems.\nTo measure energy compactness, we compute the DFT, GFT and JFT for each dataset, we replace the spectrum coefficients with magnitudes smaller than the p-th percentile with zeros and perform the corresponding inverse transform on the resulting coefficients. Denoting by X the original signal and Xp the compressed one, the compression error is for each p given by \u2016Xp\u2212X\u2016F /\u2016X\u2016F . As shown in Figure 6, JFT exhibits\n11\nbetter energy compaction properties in all the datasets, and especially for the meshes where the graph captures well the signal structure."}, {"heading": "B. Regression problems with joint variation priors", "text": "We next examine the utility of joint variation priors for regression problems in two example applications.\nDenoising of dynamic meshes. Whenever a smoothness prior can be assumed, the joint Tikhonov regularization can be used to denoise a time-varying graph signal. The prior can be easily expressed in the time-vertex domain thanks to Eq. (13). Joint denoising is then performed by solving the following optimization problem\narg min X \u2016X\u2212Y \u20162F +\u03c41\u2016\u2207GX\u2016 2 F +\u03c42\u2016X\u2207T \u2016 2 F , (37)\nwhere the regularization terms require the solution to be smooth in both graph and time domains. This problem has a closed form solution in our framework, which is a joint non-separable lowpass filter\nhTIK(\u03bb`, \u03c9k) = 1\n1 + \u03c41\u03bb` + 2\u03c42(1\u2212 cos(2\u03c0\u03c9k)) .\n(38) In order to investigate its performance, we consider the vertices of a mesh of size 2502\u00d7 59\u00d7 3 representing a walking dog, we add Gaussian noise to the coordinates, we build a k nearest neighbor graph based on the distances between the time average of the coordinates and finally we solve the problem (37) for each coordinate dimension. We averaged the results over 20 realizations of the noise.\nThe meshes in Figure 7 represent, from left to right, the original, the noisy and the recovered one, for one\nrealization of the noise. Remarkably, the normalized error drops from 0.20 to 0.06, respectively before and after denoising, making the dog distinguishable again. As side effect, the dog appears to be thinner, due to the graph regularization. The heat-map in the left corner of the figure shows the role of the regularization parameters. We found (using exhaustive search) that the lowest error is achieved when \u03c41 = 0.71 and \u03c42 = 1.78. We compare the performance of the joint Tikhonov regularization with respect to time- and graph-only for the best parameter combinations of all methods. The boxplot on the right shows the minimum achievable error statistics in the three cases over the 20 realizations. It is easy to see that the graph plays a major role in the denoising, since it encodes the structural information of the mesh. Nevertheless, the joint approach performs the best, i.e., 0.062 \u00b1 0.0002, taking advantage of the smoothness in both domains, while graph and time methods achieve 0.067\u00b1 0.0003 and 0.095\u00b1 0.0002, respectively.\nInpainting of time-lapse video. We consider the problem of time-vertex signal recovery from noisy, corrupted, and incomplete measurements. Depending on the characteristics of the signal, the prior Np,q (x) with\n12\ndifferent values of p and q and different weights can be used. A typical signal recovery problem in signal processing is the image inpainting, i.e., trying to replace corrupted or lost part of the image. Since patch-graphs allow non-local image processing [53], our goal is to extend graph-based non-local processing to video inpainting and recovery. However, since our framework is constrained to static graphs, we focus on the particular case of time-lapse videos, whose structure stays majorly invariant throughout the video. To this end, we corrupted a time-lapse video that shows the skyline of the Kuala Lumpur City Centre, which statistical properties were amenable from a graph perspective, being the skyline static with time-varying colors. The video has size 160\u00d7 214\u00d7 3\u00d7 604 (height \u00d7 width \u00d7 colors \u00d7 frames). We removed 20% of the pixels and 20% of the frames from the original KLCC video, achieving a normalized error of 0.61. The inpainting is performed solving the optimization problem for each color using as regularizer N1,2 (x):\narg min X \u2016M \u25e6X \u2212 Y \u20162F + \u03b31\u2016\u2207GX\u20161 + \u03b32\u2016X\u2207T \u2016 2 F , (39) where M is the mask of the missing entries. The patch graph G is constructed from the video averaged in time. The rationale is that the l1 over the graph will restore the missing pixels, being each frame approximately piecewise constant, whereas the l2 norm in time recovers the smooth changes of the colors from dawn until dusk.\nFigure 8 shows two frames of the video, their corrupted counterparts and the result of the recovery, along with the respective normalized errors. The recovered video has a normalized error of 0.049, illustrating that the joint inpainting is able to restore the global quality of the video even in case of considerable missing information.\nWe compare the recovery performance with all the joint regularizers Np,q (x) for p, q = {1, 2}, and with\ntwo baseline algorithms, based on 3D-Tikhonov and isotropic 3D-TV regularizations [54]. The last two correspond to using a grid graph with equal weights on the edges. Table I reports the normalized errors averaged over the pixels-only, frames-only and the whole video. The better performance achieved by the joint regularizer N1,2 (x) is due to its capability to restore missing frames, while missing pixels recovery performances are almost the same. Figure 9 illustrates a summary statistics of the errors computed over each frame. Although TV performs the best in the median, in case of occluded frames the error is much larger w.r.t. the joint recovery, leading to a higher average error."}, {"heading": "C. Overcomplete representations", "text": "Last, we examine the utility of STVFT and STVWT, respectively, as a feature extractor for dynamic mesh clustering and as a dictionary used to uncover the wavelike structure and epicenter of a seismic event.\nClustering dynamic meshes using STVFT. We consider the motion classification of a dynamic mesh representing the dancer, corrupted with additive sparse noise with density 0.1 with normally distributed entries and SNR of \u221220 dB and \u221210 dB. Our objective is to determine the phase of the dance (moving arms, stretching legs and bending body) at each frames by performing spectral clustering on some representation of the windowed signal. To obtain the ground-truth, we\n13\nlabeled each frame by hand and verified that, when the noiseless signal (i.e., the actual trajectory of the points in time over each window) was used to define the features, one obtains a classification accuracy of 0.926.\nSince we want to localize spatial-structured phenomena in time, our approach will be to use a STVFT to derive the representation. To capture the geometry of the problem, we used a nearest neighbour graph constructed based on the coordinates of the mesh vertices averaged in time; this graph was fixed for the whole sequence. As explained in Section V-B, the STVFT is separable, meaning that we can handle the vertex and the time dimensions separately. In the time domain we use a rectangular window with support equal to 50 samples in time and spacing such that the overlap is 60%. For the vertex dimension, we use the an Itersine kernel (defined in the GSPBOX [50]) that we uniformly translate at 5 different positions in the graph spectral domain.\nThe STVFT provides features associated to a time instant that we can directly use to classify the dance (see Figure 10 for a visual illustration of the clustering results). Other transforms such as GFT, DFT, and JFT do no have this property. Hence, in order to compare with these other transforms, we use the same rectangular windows (width 50, overlap 20 samples) to extract 27 time sequences from the signal. We then used the transformed data associated with each sequence as a point to be clustered.\nFigure 11 illustrates the clustering accuracy statistics over 20 realizations of sparse noise for features constructed based on the magnitude of five representations:\nthe windowed sequences, as well as their GFT, DFT, JFT, and STVFT representations. Observe how the presence of sparse noise severely hampers classification when the raw signal is used, with the average accuracy dropping from 0.926 for the clean signals to 0.469 and 0.74 for \u221220 dB and \u221210 dB, respectively.\nWe can also see that the two representations leading to the highest median accuracy are the JFT and STVFT, suggesting the utility of joint harmonic representations. Nevertheless, the STVFT provides more robust estimates with an average accuracy of 0.869 rather than 0.792 for the JFT at \u221220 dB.\nSeismic epicenter estimation with STVWT. We analyze seismic events recorded by the GeoNet sensor network whose epicenters were chosen to be randomly distributed in different areas of New Zealand. We extend the results presented in [21] to a greater dataset using the STVWT with mother kernel based on the wave PDE, which allows us to decompose the signal as sum of PDE solutions. As a first approximation, when the waves propagate in a continuous domain or a regular lattice, seismic waveforms can be modeled as oscillating damped waves [55]. Our premise is thus that we can approximate the seismic waveforms using a small set of damped waves propagating on the graph connecting the seismic stations. Thus, we expect the damped wave mother kernel\nh(\u03bb`, \u03c9k) = 1\u221a T e\u03b2+j\u03c9k + \u03bb`/2\u2212 1 2(cosh (\u03b2 + j\u03c9k) + \u03bb`/2\u2212 1) (40)\nto be a good approximation of the seismic waves recorded by the sensors, with the damping factor \u03b2 chosen to fit the damping present in the seismic signals. To construct the STVWT, we select 10 equally spaced values in [0, 2] for z\u03bb and set z\u03c9 = 1. To estimate the epicenter of the earthquake we solve\narg min C \u2016D\u2217h{C} \u2212X\u201622 + \u03b3\u2016C\u20161, (41)\nwhere \u03b3 is the regularization parameter controlling the trade-off between the fidelity term (selected using exhaustive search) and the sparseness assumption and D\u2217h is the synthesis operator associated with STVWT.\nThe solution provides important pieces of information. Firstly, using the synthesis operator we can obtain a denoised version of the original process. Secondly, the non-zero coefficients of C, describe the origins and amplitudes of the different components. Therefore, we average the coordinates of the vertices corresponding to the sources of the waves with highest energy coefficients. We compare the performance of STVWT with the estimate obtained using only the signal amplitude: for each earthquake we average the coordinates of the stations using as weights energy of the signals. Figure 12 shows on\n14\nthe left the comparison over 40 different seismic events randomly distributed over the New Zealand between the two methods. STVWT based on the damped wave kernel achieves an average error of 48.5 km, providing an almost twofold improvement over the baseline, whose average performance is 88.3 km. On the right, it illustrates the estimate for 3 different seismic events and the respective seismic waveforms. These results show that the proposed method significantly improves the source estimation performance."}, {"heading": "VII. CONCLUSION", "text": "This work puts forth a Time-Vertex Signal Processing Framework, that facilitates the analysis of graph structured data that also evolve in time. We motivate our framework leveraging the notion of partial differential equation on graphs. We introduce joint operators, such as time-vertex localization and we present a novel approach to significantly improve the accuracy of fast joint filtering. We also illustrate how to build time-vertex dictionaries, providing conditions for efficient invertibility and examples of constructions. Our experimental results on a variety of datasets, suggest that the proposed tools can bring forth significant benefits in various signal processing and learning tasks involving time-series on graphs.\nAPPENDIX"}, {"heading": "A. Wave equation", "text": "In the continuous setting, the wave equation is\n\u2202ttu\u2212\u2206u = 0\nwhere u : R\u00d7 Rd \u2192 C is a function of both time t \u2208 R and space x \u2208 Rd, with \u2206 being the Laplacian operator. Even though being a second order PDE, the\nequation can be rewritten as a first order system defining v(t) := \u2202tu(t). The pair (u(t), v(t)) evolves now according to the system \u2202tu(t) = v(t)\n\u2202tv(t) = \u2206u(t)\n(42)\nAssuming vanishing initial velocity v(0) = 0, the solution u(t) is given via functional calculus by [56]\nu(t) = cos(t \u221a \u2212\u2206)u(0) (43)\nwhere cos(t \u221a \u2212\u2206) is called propagator operator.\nTo obtain a discrete wave equation evolving on a graph, we approximate the second order time derivative with its stencil approximation and the continuous Laplacian \u2206 with the graph Laplacian LG with reversed sign:\nXLT = sLGX, (44)\nwhere s > 0 is the speed of the propagation. The wave equation is a hyperbolic differential equation and several difficulties arise when discretizing it for numerical computation of the solution [56]. Moreover, the graph being an irregular domain, the solution of the above equation is not any more a smooth wave after a few iterations. Nevertheless, we assume as in the case of the heat diffusion Eq. (16) that the solution can be written as\nxt = Ks(LG, t)x1 = Kt,sx1, (45)\nwhere Kt,s = Ks(LG, t) is a matrix obtained applying the function Ks(LG, t) to the scaled Laplacian sLG and parametrized by the time t. We will call the operator Kt,s \u201cthe discrete analogue of the wave propagator\u201d of Eq. (43). Therefore, matrix X = [Kt,sx1] T t=1 = Ks{x1} is obtained stacking the\n15\nvectors xt of Eq. (45) along the columns. Substituting (45) into (44), we obtain Ks{x1}LT = sLGKs{x1} which in the graph spectral domain is\nK\u0303s{x\u03031}LT = s\u039bGK\u0303s{x\u03031}, (46)\nwhere K\u0303t,s = Ks(\u039bG, t). Equation (46) is formally analogous to the eigendecomposition of the operator LT , therefore, the `-th row of K\u0303s{x\u03031} must be an eigenvector of LT with eigenvalue \u03bb`, for every `. It has been proved in [57] that the eigenvectors UT (t, k) = cos(tk\u03c0/T ) form also the discrete Fourier basis. Using Eq. (8), we obtain\nKs(\u03bb`, t) = cos(t\u03b8`), (47)\nwith \u03b8` = arccos(1\u2212 s\u03bb`2 ). Since the arccos(x) is defined only for x \u2208 [\u22121, 1], to guarantee stability the parameter s must satisfy s < 4/\u03bbmax. We remark that this result is in agreement with the stability analysis of numerical solver for the discrete wave equation presented in [56].\nTaking the DFT of the wave kernel in Eq. (47), we obtain\nK\u0302s(\u03bb`, \u03c9k) = \u2211 t cos(t\u03b8`)e \u2212j\u03c9kt\nTherefore, the solution in the joint spectral domain can be written as\nX\u0302(`, k) = K\u0302s(\u03bb`, \u03c9k)Z(`, k),\nwhere Z(`, k) = x\u03031(`)U\u2217T (k, 1). Note that there exists a closed form solution for the function K\u0302s:\nK\u0302s(\u03bb`, \u03c9k) = \u03b4 (\u03c9k + \u03b8`) + \u03b4 (\u03c9k \u2212 \u03b8`) 2 , if T\u03b8`/2\u03c0 integer 1\n2\n( 1\u2212 e\u2212jT (\u03c9k+\u03b8`)\n1\u2212 e\u2212j(\u03c9k+\u03b8`) +\n1\u2212 e\u2212jT (\u03c9k\u2212\u03b8`)\n1\u2212 e\u2212j(\u03c9k\u2212\u03b8`)\n) , otherwise"}, {"heading": "B. Frame bound for joint time-vertex dictionaries", "text": "Theorem 1. Let {hz(\u03bb, \u03c9)}z\u2208Z\u03bb\u00d7Z\u03c9 be the kernels of a time-vertex dictionary Dh, and set\nA = min l,k \u2211 z |hz(\u03bb`, \u03c9k)|2, B = max l,k \u2211 z |hz(\u03bb`, \u03c9k)|2."}, {"heading": "If 0 < A \u2264 B <\u221e, then Dh is a frame in the sense:", "text": "A\u2016X\u20162F \u2264 \u2016Dh{X}\u2016 2 F \u2264 B\u2016X\u2016 2 F\nfor any time-vertex signal X \u2208 RN\u00d7T .\nProof. In the joint spectral domain we can write: \u2016{Dh{X}}\u2016F2 = \u2211 m,\u03c4,z |{Dh{X}} (m, \u03c4, z)|2\n= \u2211 z,m,\u03c4 \u2211 `,k n,t X(n, t)hz(\u03bb`, \u03c9k)u \u2217 ` (n)u`(m)e \u2212j\u03c9k(t\u2212\u03c4)  \u2211 `\u2032,k\u2032\nn\u2032,t\u2032\nX(n\u2032, t\u2032)hz(\u03bb`\u2032 , \u03c9k\u2032)u \u2217 `\u2032(n \u2032)u`\u2032(m)e \u2212j\u03c9k\u2032 (t\n\u2032\u2212\u03c4)  \u2217\n= \u2211 z,`,k hz(\u03bb`, \u03c9k)h\u0302 \u2217 z(\u03bb`, \u03c9k)X\u0302(`, k)X\u0302 \u2217(`, k)\n= \u2211 z,`,k |hz(\u03bb`, \u03c9k)|2|X\u0302(`, k)|2 = \u2211 z \u3008|hz|2, |X\u0302|2\u3009,\nwhere the equality holds due to the orthogonality of the eigenvectors. Finally, each element in the sum can be lower bounded and upper bounded by the minimum and maximum value that every filter takes over ` and k. Using the Parseval relation (6), the theorem holds."}], "references": [{"title": "The anatomy of a scientific rumor", "author": ["M. De Domenico", "A. Lima", "P. Mougel", "M. Musolesi"], "venue": "Scientific reports, 2013.", "citeRegEx": "1", "shortCiteRegEx": null, "year": 2013}, {"title": "The political blogosphere and the 2004 US election: divided they blog", "author": ["L.A. Adamic", "N. Glance"], "venue": "Proceedings of the 3rd international workshop on Link discovery. ACM, 2005, pp. 36\u201343.", "citeRegEx": "2", "shortCiteRegEx": null, "year": 2005}, {"title": "Information diffusion in online social networks: A survey", "author": ["A. Guille", "H. Hacid", "C. Favre", "D.A. Zighed"], "venue": "ACM SIGMOD Record, no. 2, pp. 17\u201328, 2013.", "citeRegEx": "3", "shortCiteRegEx": null, "year": 2013}, {"title": "Nericell: rich monitoring of road and traffic conditions using mobile smartphones", "author": ["P. Mohan", "V.N. Padmanabhan", "R. Ramjee"], "venue": "SENSYS. ACM, 2008, pp. 323\u2013336.", "citeRegEx": "4", "shortCiteRegEx": null, "year": 2008}, {"title": "Epidemic processes in complex networks", "author": ["R. Pastor-Satorras", "C. Castellano", "P. Van Mieghem", "A. Vespignani"], "venue": "Rev. Mod. Phys., no. 3, pp. 925\u2013979, aug 2015.", "citeRegEx": "5", "shortCiteRegEx": null, "year": 2015}, {"title": "Graph frequency analysis of brain signals", "author": ["W. Huang", "L. Goldsberry", "N.F. Wymbs", "S.T. Grafton", "D.S. Bassett", "A. Ribeiro"], "venue": "IEEE Journal of Selected Topics in Signal Processing, no. 7, pp. 1189\u20131203, 2016.", "citeRegEx": "6", "shortCiteRegEx": null, "year": 2016}, {"title": "The physiological underpinnings of visual short-term memory binding using graph modular dirichlet energy: Evidence from healthy subjects", "author": ["K. Smith", "B. Ricaud", "N. Shahid", "S. Rhodes", "J.M. Starr", "A. Ibanez", "M.A. Parra", "J. Escudero", "P. Vandergheynst"], "venue": "arXiv preprint arXiv:1606.02587, 2016.", "citeRegEx": "7", "shortCiteRegEx": null, "year": 2016}, {"title": "The emerging field of signal processing on graphs: Extending high-dimensional data analysis to networks and other irregular domains", "author": ["D.I. Shuman", "S.K. Narang", "P. Frossard", "A. Ortega", "P. Vandergheynst"], "venue": "Signal Process. Mag., IEEE, no. 3, pp. 83\u201398, 2013.", "citeRegEx": "8", "shortCiteRegEx": null, "year": 2013}, {"title": "Discrete signal processing on graphs", "author": ["A. Sandryhaila", "J.M.F. Moura"], "venue": "IEEE Trans. Signal Process., no. 7, pp. 1644\u20131656, 2013.", "citeRegEx": "9", "shortCiteRegEx": null, "year": 2013}, {"title": "Laplacian eigenmaps and spectral techniques for embedding and clustering.", "author": ["M. Belkin", "P. Niyogi"], "venue": "in NIPS,", "citeRegEx": "10", "shortCiteRegEx": "10", "year": 2001}, {"title": "Fast robust pca on graphs", "author": ["N. Shahid", "N. Perraudin", "V. Kalofolias", "G. Puy", "P. Vandergheynst"], "venue": "IEEE Journal of Selected Topics in Signal Processing, no. 4, pp. 740\u2013756, 2016.  16", "citeRegEx": "11", "shortCiteRegEx": null, "year": 2016}, {"title": "Stationary signal processing on graphs", "author": ["N. Perraudin", "P. Vandergheynst"], "venue": "IEEE Trans. Signal Process., no. 99, pp. 1\u20131, 2017.", "citeRegEx": "12", "shortCiteRegEx": null, "year": 2017}, {"title": "Stationary graph processes and spectral estimation", "author": ["A.G. Marques", "S. Segarra", "G. Leus", "A. Ribeiro"], "venue": "arXiv preprint arXiv:1603.04667, 2016.", "citeRegEx": "13", "shortCiteRegEx": null, "year": 2016}, {"title": "Wavelets on graphs via spectral graph theory", "author": ["D.K. Hammond", "P. Vandergheynst", "R. Gribonval"], "venue": "Applied and Computational Harmonic Analysis, no. 2, pp. 129\u2013150, 2011.", "citeRegEx": "14", "shortCiteRegEx": null, "year": 2011}, {"title": "Diffusion wavelets", "author": ["R.R. Coifman", "M. Maggioni"], "venue": "Applied and Computational Harmonic Analysis, no. 1, pp. 53\u201394, 2006.", "citeRegEx": "15", "shortCiteRegEx": null, "year": 2006}, {"title": "Semi-supervised learning on Riemannian manifolds", "author": ["M. Belkin", "P. Niyogi"], "venue": "Machine learning, no. 1-3, pp. 209\u2013239, 2004.", "citeRegEx": "16", "shortCiteRegEx": null, "year": 2004}, {"title": "Kernels and regularization on graphs", "author": ["A.J. Smola", "R. Kondor"], "venue": "Learning theory and kernel machines, B. Sch\u00f6lkopf and M. Warmuth, Eds. Springer, 2003, pp. 144\u2013158.", "citeRegEx": "17", "shortCiteRegEx": null, "year": 2003}, {"title": "How to learn a graph from smooth signals", "author": ["V. Kalofolias"], "venue": "AISTATS, 2016.", "citeRegEx": "18", "shortCiteRegEx": null, "year": 2016}, {"title": "Frequency Analysis of Temporal Graph Signals", "author": ["A. Loukas", "D. Foucard"], "venue": "GLOBALSIP, 2016.", "citeRegEx": "19", "shortCiteRegEx": null, "year": 2016}, {"title": "Separable autoregressive moving average graph-temporal filters", "author": ["E. Isufi", "A. Loukas", "A. Simonetto", "G. Leus"], "venue": "EU- SIPCO. IEEE, 2016, pp. 200\u2013204.", "citeRegEx": "20", "shortCiteRegEx": null, "year": 2016}, {"title": "Tracking time-vertex propagation using dynamic graph wavelets", "author": ["F. Grassi", "N. Perraudin", "B. Ricaud"], "venue": "GLOBALSIP, 2016.", "citeRegEx": "21", "shortCiteRegEx": null, "year": 2016}, {"title": "Causality and graphical models in time series analysis", "author": ["R. Dahlhaus", "M. Eichler"], "venue": "Oxford Statistical Science Series, pp. 115\u2013 137, 2003.", "citeRegEx": "22", "shortCiteRegEx": null, "year": 2003}, {"title": "Graph Signal Processing\u2013A Probabilistic Framework", "author": ["C. Zhang", "D. Flor\u00eancio", "P.A. Chou"], "venue": "Microsoft Research Lab - Redmond, Tech. Rep., 2015.", "citeRegEx": "23", "shortCiteRegEx": null, "year": 2015}, {"title": "Big data analysis with signal processing on graphs: Representation and processing of massive data sets with irregular structure", "author": ["A. Sandryhaila", "J.M.F. Moura"], "venue": "IEEE Signal Process. Mag., no. 5, pp. 80\u201390, 2014.", "citeRegEx": "24", "shortCiteRegEx": null, "year": 2014}, {"title": "Multilayer networks", "author": ["M. Kivel\u00e4", "A. Arenas", "M. Barthelemy", "J.P. Gleeson", "Y. Moreno", "M.A. Porter"], "venue": "Journal of Complex Networks, no. 3, pp. 203\u2013271, 2014.", "citeRegEx": "25", "shortCiteRegEx": null, "year": 2014}, {"title": "Principal patterns on graphs: Discovering coherent structures in datasets", "author": ["K. Benzi", "B. Ricaud", "P. Vandergheynst"], "venue": "IEEE Transactions on Signal and Information Processing over Networks, no. 2, pp. 160\u2013173, 2016.", "citeRegEx": "26", "shortCiteRegEx": null, "year": 2016}, {"title": "Mathematical formulation of multilayer networks", "author": ["M. De Domenico", "A. Sol\u00e9-Ribalta", "E. Cozzo", "M. Kivel\u00e4", "Y. Moreno", "M.A. Porter", "S. G\u00f3mez", "A. Arenas"], "venue": "Physical Review X, no. 4, p. 41022, 2013.", "citeRegEx": "27", "shortCiteRegEx": null, "year": 2013}, {"title": "Distributed autoregressive moving average graph filters", "author": ["A. Loukas", "A. Simonetto", "G. Leus"], "venue": "IEEE Signal Process. Lett., no. 11, pp. 1931\u20131935, 2015.", "citeRegEx": "28", "shortCiteRegEx": null, "year": 1931}, {"title": "Wavelet-based visualization of time-varying data on graphs", "author": ["P. Valdivia", "F. Dias", "F. Petronetto", "C.T. Silva", "L.G. Nonato"], "venue": "2015 IEEE Conference on Visual Analytics Science and Technology (VAST), Oct 2015, pp. 1\u20138.", "citeRegEx": "29", "shortCiteRegEx": null, "year": 2015}, {"title": "Signal processing on graphs: Estimating the structure of a graph", "author": ["J. Mei", "J.M.F. Moura"], "venue": "in ICASSP. IEEE, 2015, pp. 5495\u20135499.", "citeRegEx": "30", "shortCiteRegEx": null, "year": 2015}, {"title": "Autoregressive moving average graph filtering", "author": ["E. Isufi", "A. Loukas", "A. Simonetto", "G. Leus"], "venue": "IEEE Trans. Signal Process., no. 2, pp. 274\u2013288, 2017.", "citeRegEx": "31", "shortCiteRegEx": null, "year": 2017}, {"title": "Towards stationary time-vertex signal processing", "author": ["N. Perraudin", "A. Loukas", "F. Grassi", "P. Vandergheynst"], "venue": "ICASSP, 2017.", "citeRegEx": "32", "shortCiteRegEx": null, "year": 2017}, {"title": "Predicting the evolution of stationary graph signals", "author": ["A. Loukas", "N. Perraudin"], "venue": "arXiv preprint arXiv:1607.03313, 2016.", "citeRegEx": "33", "shortCiteRegEx": null, "year": 2016}, {"title": "Stationary time-vertex signal processing", "author": ["A. Loukas", "N. Perraudin"], "venue": "ArXiv e-prints, Nov. 2016.", "citeRegEx": "34", "shortCiteRegEx": null, "year": 2016}, {"title": "A graph discretization of the laplace-beltrami operator", "author": ["D. Burago", "S. Ivanov", "Y. Kurylev"], "venue": "Journal of Spectral Theory, vol. 4, no. 4, pp. 675\u2013714, 2014.", "citeRegEx": "35", "shortCiteRegEx": null, "year": 2014}, {"title": "Vertexfrequency analysis on graphs", "author": ["D.I. Shuman", "B. Ricaud", "P. Vandergheynst"], "venue": "Applied and Computational Harmonic Analysis, no. 2, pp. 260\u2013291, 2013.", "citeRegEx": "36", "shortCiteRegEx": null, "year": 2013}, {"title": "Laplacian matrices of graphs: a survey", "author": ["R. Merris"], "venue": "Linear Algebra and its Applications, pp. 143 \u2013 176, 1994.", "citeRegEx": "37", "shortCiteRegEx": null, "year": 1994}, {"title": "PDE approaches to graph analysis", "author": ["J. Solomon"], "venue": "CoRR, 2015. [Online]. Available: http://arxiv.org/abs/1505.00185", "citeRegEx": "38", "shortCiteRegEx": null, "year": 2015}, {"title": "On the partial difference equations of mathematical physics", "author": ["R. Courant", "K. Friedrichs", "H. Lewy"], "venue": "IBM Journal of Research and Development, no. 2, pp. 215\u2013234, March 1967.", "citeRegEx": "39", "shortCiteRegEx": null, "year": 1967}, {"title": "M\u00e9moire sur la propagation de la chaleur dans les corps solides", "author": ["J.-B.-J. Fourier"], "venue": "Nouveau Bulletin des sciences par la Soci\u00e9t\u00e9 philomatique de Paris, p. 112\u2013116, 1807.", "citeRegEx": "40", "shortCiteRegEx": null, "year": 1807}, {"title": "Fourier\u2019s heat conduction equation: History, influence, and connections", "author": ["T.N. Narasimhan"], "venue": "Reviews of Geophysics, no. 1, pp. 151\u2013172, 1999. [Online]. Available: http://dx.doi.org/10.1029/ 1998RG900006", "citeRegEx": "41", "shortCiteRegEx": null, "year": 1999}, {"title": "Graph scalespace theory for distributed peak and pit identification", "author": ["A. Loukas", "M. Cattani", "M. Zuniga", "J. Gao"], "venue": "IPSN. ACM/IEEE, 2015.", "citeRegEx": "42", "shortCiteRegEx": null, "year": 2015}, {"title": "Chebyshev polynomial approximation for distributed signal processing", "author": ["D.I. Shuman", "P. Vandergheynst", "P. Frossard"], "venue": "DCOSS. IEEE, 2011, pp. 1\u20138.", "citeRegEx": "43", "shortCiteRegEx": null, "year": 2011}, {"title": "Global and Local Uncertainty Principles for Signals on Graphs", "author": ["N. Perraudin", "B. Ricaud", "D. Shuman", "P. Vandergheynst"], "venue": "arXiv preprint arXiv:1603.03030, 2016.", "citeRegEx": "44", "shortCiteRegEx": null, "year": 2016}, {"title": "An introduction to frames and Riesz bases (Second Edition)", "author": ["O. Christensen"], "venue": null, "citeRegEx": "45", "shortCiteRegEx": "45", "year": 2016}, {"title": "Foundations of Time-Frequency Analysis, ser", "author": ["K. Gr\u00f6chenig"], "venue": "Applied and Numerical Harmonic Analysis. Boston, MA: Birkha\u0308user Boston,", "citeRegEx": "46", "shortCiteRegEx": "46", "year": 2001}, {"title": "A windowed graph fourier transform", "author": ["D.I. Shuman", "B. Ricaud", "P. Vandergheynst"], "venue": "Statistical Signal Processing Workshop (SSP), 2012 IEEE. Ieee, 2012, pp. 133\u2013136.", "citeRegEx": "47", "shortCiteRegEx": null, "year": 2012}, {"title": "Spectrum-adapted tight graph wavelet and vertex-frequency frames", "author": ["D.I. Shuman", "C. Wiesmeyr", "N. Holighaus", "P. Vandergheynst"], "venue": "IEEE Trans. Signal Process., no. 16, pp. 4223\u20134235, 2015.", "citeRegEx": "48", "shortCiteRegEx": null, "year": 2015}, {"title": "Life beyond bases: The advent of frames (part i)", "author": ["J. Kovacevic", "A. Chebira"], "venue": "IEEE Signal Process. Mag., no. 4, pp. 86\u2013104, July 2007.", "citeRegEx": "49", "shortCiteRegEx": null, "year": 2007}, {"title": "GSPBOX: A toolbox for signal processing on graphs", "author": ["N. Perraudin", "J. Paratte", "D. Shuman", "V. Kalofolias", "P. Vandergheynst", "D.K. Hammond"], "venue": "ArXiv e-prints, Aug. 2014.", "citeRegEx": "50", "shortCiteRegEx": null, "year": 2014}, {"title": "UN- LocBoX A matlab convex optimization toolbox using proximal splitting methods", "author": ["N. Perraudin", "D. Shuman", "G. Puy", "P. Vandergheynst"], "venue": "ArXiv e-prints, feb 2014.", "citeRegEx": "51", "shortCiteRegEx": null, "year": 2014}, {"title": "The Large Time-Frequency Analysis Toolbox 2.0", "author": ["Z. Pr\u016f\u0161a", "P.L. S\u00f8ndergaard", "N. Holighaus", "C. Wiesmeyr", "P. Balazs"], "venue": "Cham: Springer International Publishing,", "citeRegEx": "52", "shortCiteRegEx": "52", "year": 2014}, {"title": "A non-local algorithm for image denoising", "author": ["A. Buades", "B. Coll", "J.M. Morel"], "venue": "in CVPR, June 2005, pp. 60\u201365.", "citeRegEx": "53", "shortCiteRegEx": null, "year": 2005}, {"title": "An augmented lagrangian method for total variation video restoration", "author": ["S.H. Chan", "R. Khoshabeh", "K.B. Gibson", "P.E. Gill", "T.Q. Nguyen"], "venue": "IEEE Trans. Image Process., vol. 20, no. 11, pp. 3097\u20133111, 2011.", "citeRegEx": "54", "shortCiteRegEx": null, "year": 2011}, {"title": "Fundamentals of Geophysics, 2nd ed", "author": ["W. Lowrie"], "venue": null, "citeRegEx": "55", "shortCiteRegEx": "55", "year": 2007}, {"title": "Durran, Numerical methods for wave equations in geophysical fluid dynamics", "author": ["R. D"], "venue": "Springer Science & Business Media,", "citeRegEx": "56", "shortCiteRegEx": "56", "year": 2013}, {"title": "The discrete cosine transform", "author": ["G. Strang"], "venue": "SIAM review, no. 1, pp. 135\u2013147, 1999.", "citeRegEx": "57", "shortCiteRegEx": null, "year": 1999}], "referenceMentions": [{"referenceID": 0, "context": "Whether examining consensus and rumor spreading over social networks [1]\u2013[3], transportation networks [4] and related epidemic spreading [5], neuronal activation patterns [6] or time-evolving functional network in the brain [7], as well as other datasets collected from a variety of fields, such as physics, engineering, and lifescience, much of the high-dimensional data exhibit complex non-euclidean properties.", "startOffset": 69, "endOffset": 72}, {"referenceID": 2, "context": "Whether examining consensus and rumor spreading over social networks [1]\u2013[3], transportation networks [4] and related epidemic spreading [5], neuronal activation patterns [6] or time-evolving functional network in the brain [7], as well as other datasets collected from a variety of fields, such as physics, engineering, and lifescience, much of the high-dimensional data exhibit complex non-euclidean properties.", "startOffset": 73, "endOffset": 76}, {"referenceID": 3, "context": "Whether examining consensus and rumor spreading over social networks [1]\u2013[3], transportation networks [4] and related epidemic spreading [5], neuronal activation patterns [6] or time-evolving functional network in the brain [7], as well as other datasets collected from a variety of fields, such as physics, engineering, and lifescience, much of the high-dimensional data exhibit complex non-euclidean properties.", "startOffset": 102, "endOffset": 105}, {"referenceID": 4, "context": "Whether examining consensus and rumor spreading over social networks [1]\u2013[3], transportation networks [4] and related epidemic spreading [5], neuronal activation patterns [6] or time-evolving functional network in the brain [7], as well as other datasets collected from a variety of fields, such as physics, engineering, and lifescience, much of the high-dimensional data exhibit complex non-euclidean properties.", "startOffset": 137, "endOffset": 140}, {"referenceID": 5, "context": "Whether examining consensus and rumor spreading over social networks [1]\u2013[3], transportation networks [4] and related epidemic spreading [5], neuronal activation patterns [6] or time-evolving functional network in the brain [7], as well as other datasets collected from a variety of fields, such as physics, engineering, and lifescience, much of the high-dimensional data exhibit complex non-euclidean properties.", "startOffset": 171, "endOffset": 174}, {"referenceID": 6, "context": "Whether examining consensus and rumor spreading over social networks [1]\u2013[3], transportation networks [4] and related epidemic spreading [5], neuronal activation patterns [6] or time-evolving functional network in the brain [7], as well as other datasets collected from a variety of fields, such as physics, engineering, and lifescience, much of the high-dimensional data exhibit complex non-euclidean properties.", "startOffset": 224, "endOffset": 227}, {"referenceID": 7, "context": ", signals supported on the vertices of irregular graphs [8], [9].", "startOffset": 56, "endOffset": 59}, {"referenceID": 8, "context": ", signals supported on the vertices of irregular graphs [8], [9].", "startOffset": 61, "endOffset": 64}, {"referenceID": 9, "context": "In the field of graph signal processing (GSP), the introduction of the graph Fourier transform (GFT) has enabled us to perform harmonic analysis taking into account the structure of the data, and has lead to improvements for tasks such as clustering [10], low-rank extraction [11], spectral estimation [12], [13], non-stationary analysis [14], [15] and semi-supervised learning [16], [17].", "startOffset": 250, "endOffset": 254}, {"referenceID": 10, "context": "In the field of graph signal processing (GSP), the introduction of the graph Fourier transform (GFT) has enabled us to perform harmonic analysis taking into account the structure of the data, and has lead to improvements for tasks such as clustering [10], low-rank extraction [11], spectral estimation [12], [13], non-stationary analysis [14], [15] and semi-supervised learning [16], [17].", "startOffset": 276, "endOffset": 280}, {"referenceID": 11, "context": "In the field of graph signal processing (GSP), the introduction of the graph Fourier transform (GFT) has enabled us to perform harmonic analysis taking into account the structure of the data, and has lead to improvements for tasks such as clustering [10], low-rank extraction [11], spectral estimation [12], [13], non-stationary analysis [14], [15] and semi-supervised learning [16], [17].", "startOffset": 302, "endOffset": 306}, {"referenceID": 12, "context": "In the field of graph signal processing (GSP), the introduction of the graph Fourier transform (GFT) has enabled us to perform harmonic analysis taking into account the structure of the data, and has lead to improvements for tasks such as clustering [10], low-rank extraction [11], spectral estimation [12], [13], non-stationary analysis [14], [15] and semi-supervised learning [16], [17].", "startOffset": 308, "endOffset": 312}, {"referenceID": 13, "context": "In the field of graph signal processing (GSP), the introduction of the graph Fourier transform (GFT) has enabled us to perform harmonic analysis taking into account the structure of the data, and has lead to improvements for tasks such as clustering [10], low-rank extraction [11], spectral estimation [12], [13], non-stationary analysis [14], [15] and semi-supervised learning [16], [17].", "startOffset": 338, "endOffset": 342}, {"referenceID": 14, "context": "In the field of graph signal processing (GSP), the introduction of the graph Fourier transform (GFT) has enabled us to perform harmonic analysis taking into account the structure of the data, and has lead to improvements for tasks such as clustering [10], low-rank extraction [11], spectral estimation [12], [13], non-stationary analysis [14], [15] and semi-supervised learning [16], [17].", "startOffset": 344, "endOffset": 348}, {"referenceID": 15, "context": "In the field of graph signal processing (GSP), the introduction of the graph Fourier transform (GFT) has enabled us to perform harmonic analysis taking into account the structure of the data, and has lead to improvements for tasks such as clustering [10], low-rank extraction [11], spectral estimation [12], [13], non-stationary analysis [14], [15] and semi-supervised learning [16], [17].", "startOffset": 378, "endOffset": 382}, {"referenceID": 16, "context": "In the field of graph signal processing (GSP), the introduction of the graph Fourier transform (GFT) has enabled us to perform harmonic analysis taking into account the structure of the data, and has lead to improvements for tasks such as clustering [10], low-rank extraction [11], spectral estimation [12], [13], non-stationary analysis [14], [15] and semi-supervised learning [16], [17].", "startOffset": 384, "endOffset": 388}, {"referenceID": 5, "context": "Nevertheless, though state-of-the-art graph-based methods have been successful for many tasks, so far they predominantly ignore the time-dimension of data, for example by treating successive signals independently or performing a global average [6], [12], [18].", "startOffset": 244, "endOffset": 247}, {"referenceID": 11, "context": "Nevertheless, though state-of-the-art graph-based methods have been successful for many tasks, so far they predominantly ignore the time-dimension of data, for example by treating successive signals independently or performing a global average [6], [12], [18].", "startOffset": 249, "endOffset": 253}, {"referenceID": 17, "context": "Nevertheless, though state-of-the-art graph-based methods have been successful for many tasks, so far they predominantly ignore the time-dimension of data, for example by treating successive signals independently or performing a global average [6], [12], [18].", "startOffset": 255, "endOffset": 259}, {"referenceID": 18, "context": "Recently, several ideas begin to emerge related to the analysis of time-varying graph signals, such as Joint time-vertex Fourier transform (JFT) [19] and the joint time-vertex filters [20] and filterbanks [21].", "startOffset": 145, "endOffset": 149}, {"referenceID": 19, "context": "Recently, several ideas begin to emerge related to the analysis of time-varying graph signals, such as Joint time-vertex Fourier transform (JFT) [19] and the joint time-vertex filters [20] and filterbanks [21].", "startOffset": 184, "endOffset": 188}, {"referenceID": 20, "context": "Recently, several ideas begin to emerge related to the analysis of time-varying graph signals, such as Joint time-vertex Fourier transform (JFT) [19] and the joint time-vertex filters [20] and filterbanks [21].", "startOffset": 205, "endOffset": 209}, {"referenceID": 21, "context": "[22] and references therein).", "startOffset": 0, "endOffset": 4}, {"referenceID": 22, "context": "The main difference between graphical models and GSP lies in the assumption about the relation between the signal and graph [23].", "startOffset": 124, "endOffset": 128}, {"referenceID": 23, "context": "In this context, the idea of time-vertex analysis can be traced back to the study [24] aiming to process multi-modal signals with different graphs associated with each of their modalities (i.", "startOffset": 82, "endOffset": 86}, {"referenceID": 24, "context": "Collaboration between the graph theory and signal processing communities has led to new tools to process and analyze time-varying graphs and signals on a graph, such as multilayer graphs and tensor products of graphs [25]\u2013[27].", "startOffset": 217, "endOffset": 221}, {"referenceID": 26, "context": "Collaboration between the graph theory and signal processing communities has led to new tools to process and analyze time-varying graphs and signals on a graph, such as multilayer graphs and tensor products of graphs [25]\u2013[27].", "startOffset": 222, "endOffset": 226}, {"referenceID": 18, "context": "The notion of joint timevertex harmonic analysis was further realized in [19] by one of the authors of this work.", "startOffset": 73, "endOffset": 77}, {"referenceID": 27, "context": "The idea of analyzing the behavior of graph filters with time-varying signals first appeared in [28], showing that graph filters could be analyzed by applying jointly a GFT and a Ztransform and as such they possess a joint frequency response.", "startOffset": 96, "endOffset": 100}, {"referenceID": 28, "context": "Since then, we have seen a number of works dealing with time-varying signals on graphs: Authors in [29] propose a method that relies on graph wavelet theory and product graphs to visualize time-varying data defined on the vertices of a graph in order to identify spatial and/or temporal variations.", "startOffset": 99, "endOffset": 103}, {"referenceID": 29, "context": "A step towards the graphical model has been carried out by authors in [30].", "startOffset": 70, "endOffset": 74}, {"referenceID": 18, "context": "In order to deal with the high computational complexity of the eigendecomposition, different filtering approximation algorithms have been proposed, mainly based on polynomials: centralized and distributed joint filter 2D Chebychev polynomial [19], separable rational [20] implementations, and autoregressive models [31].", "startOffset": 242, "endOffset": 246}, {"referenceID": 19, "context": "In order to deal with the high computational complexity of the eigendecomposition, different filtering approximation algorithms have been proposed, mainly based on polynomials: centralized and distributed joint filter 2D Chebychev polynomial [19], separable rational [20] implementations, and autoregressive models [31].", "startOffset": 267, "endOffset": 271}, {"referenceID": 30, "context": "In order to deal with the high computational complexity of the eigendecomposition, different filtering approximation algorithms have been proposed, mainly based on polynomials: centralized and distributed joint filter 2D Chebychev polynomial [19], separable rational [20] implementations, and autoregressive models [31].", "startOffset": 315, "endOffset": 319}, {"referenceID": 11, "context": "Finally, in parallel with this work, the authors extended the notions of time stationarity and the recent graph stationarity [12] to the joint time-vertex domain [32] providing a framework for the statistical signal processing of time-vertex signals.", "startOffset": 125, "endOffset": 129}, {"referenceID": 31, "context": "Finally, in parallel with this work, the authors extended the notions of time stationarity and the recent graph stationarity [12] to the joint time-vertex domain [32] providing a framework for the statistical signal processing of time-vertex signals.", "startOffset": 162, "endOffset": 166}, {"referenceID": 32, "context": "Authors showed that assuming joint stationarity to regularize learning can yield significant accuracy improvements and reduce computational complexity in both estimation and recovery tasks prediction with respect to purely time or graph methods [33], [34].", "startOffset": 245, "endOffset": 249}, {"referenceID": 33, "context": "Authors showed that assuming joint stationarity to regularize learning can yield significant accuracy improvements and reduce computational complexity in both estimation and recovery tasks prediction with respect to purely time or graph methods [33], [34].", "startOffset": 251, "endOffset": 255}, {"referenceID": 16, "context": "the finite difference approximation to the continuous Laplacian operator [17] or the LaplaceBeltrami operator for Riemannian manifolds [35].", "startOffset": 73, "endOffset": 77}, {"referenceID": 34, "context": "the finite difference approximation to the continuous Laplacian operator [17] or the LaplaceBeltrami operator for Riemannian manifolds [35].", "startOffset": 135, "endOffset": 139}, {"referenceID": 7, "context": "Similarly, the Graph Fourier Transform (GFT) [8], [14], [36] allows us to analyze oscillations along the graph edges.", "startOffset": 45, "endOffset": 48}, {"referenceID": 13, "context": "Similarly, the Graph Fourier Transform (GFT) [8], [14], [36] allows us to analyze oscillations along the graph edges.", "startOffset": 50, "endOffset": 54}, {"referenceID": 35, "context": "Similarly, the Graph Fourier Transform (GFT) [8], [14], [36] allows us to analyze oscillations along the graph edges.", "startOffset": 56, "endOffset": 60}, {"referenceID": 18, "context": "Hence, assuming a non-varying graph in time, the joint time-vertex Fourier transform, or JFT for short, is obtained by applying the GFT on the graph dimension and the DFT along the time dimension [19]", "startOffset": 196, "endOffset": 200}, {"referenceID": 36, "context": "It is useful to remind that the Kronecker product of the two eigenvectors basis UT and UG diagonalize the joint Laplacian with eigenvalues equal to the sum of all the pairs (\u03c9k, \u03bb`) [37]:", "startOffset": 182, "endOffset": 186}, {"referenceID": 23, "context": "1In this work we consider the Cartesian product for its amenable spectral properties, but in general other graph products could be considered, such as the Kronecker product J = G\u2297GT or the strong product J = G GT = G\u00d7GT +G\u2297GT [24].", "startOffset": 226, "endOffset": 230}, {"referenceID": 37, "context": "Our interest in PDEs analysis is related to their capability of encoding information about the structure of the underlying domain, whether continuous or discrete [38], [39] Moreover, PDEs are not only simple but powerful models of many phenomena observed in reality, but also a motivation for the Fourier transform [40], [41].", "startOffset": 162, "endOffset": 166}, {"referenceID": 38, "context": "Our interest in PDEs analysis is related to their capability of encoding information about the structure of the underlying domain, whether continuous or discrete [38], [39] Moreover, PDEs are not only simple but powerful models of many phenomena observed in reality, but also a motivation for the Fourier transform [40], [41].", "startOffset": 168, "endOffset": 172}, {"referenceID": 39, "context": "Our interest in PDEs analysis is related to their capability of encoding information about the structure of the underlying domain, whether continuous or discrete [38], [39] Moreover, PDEs are not only simple but powerful models of many phenomena observed in reality, but also a motivation for the Fourier transform [40], [41].", "startOffset": 315, "endOffset": 319}, {"referenceID": 40, "context": "Our interest in PDEs analysis is related to their capability of encoding information about the structure of the underlying domain, whether continuous or discrete [38], [39] Moreover, PDEs are not only simple but powerful models of many phenomena observed in reality, but also a motivation for the Fourier transform [40], [41].", "startOffset": 321, "endOffset": 325}, {"referenceID": 14, "context": "The parameter s represents thermal diffusivity and is interpreted as a scale parameter for multiscale dynamic graph wavelet analysis [15] and graph scale-space theory [42].", "startOffset": 133, "endOffset": 137}, {"referenceID": 41, "context": "The parameter s represents thermal diffusivity and is interpreted as a scale parameter for multiscale dynamic graph wavelet analysis [15] and graph scale-space theory [42].", "startOffset": 167, "endOffset": 171}, {"referenceID": 19, "context": "Moreover, since they can be designed independently at the two domains, joint filters can be obtained by combining graph and temporal filters [20].", "startOffset": 141, "endOffset": 145}, {"referenceID": 42, "context": "Due to the high complexity of eigendecomposition, graph filters are almost always implemented using fast 2D polynomial [43] and rational [31] approximations.", "startOffset": 119, "endOffset": 123}, {"referenceID": 30, "context": "Due to the high complexity of eigendecomposition, graph filters are almost always implemented using fast 2D polynomial [43] and rational [31] approximations.", "startOffset": 137, "endOffset": 141}, {"referenceID": 18, "context": "Recognizing this need, researchers have recently proposed distributed joint filter 2D Chebychev polynomial [19] and separable rational [20] implementations, appropriate for arbitrary and separable joint response functions, respectively.", "startOffset": 107, "endOffset": 111}, {"referenceID": 19, "context": "Recognizing this need, researchers have recently proposed distributed joint filter 2D Chebychev polynomial [19] and separable rational [20] implementations, appropriate for arbitrary and separable joint response functions, respectively.", "startOffset": 135, "endOffset": 139}, {"referenceID": 13, "context": "For each \u03c9k, approximate h(\u03bb, \u03c9k) with a Chebyshev polynomial of order MG and use the fast graph Chebyshev recursion [14] to filter the corresponding angular frequency component of X .", "startOffset": 117, "endOffset": 121}, {"referenceID": 18, "context": ", Chebyshev2D approximation [19] of complexity and the ARMA2D approach [20], while Fig.", "startOffset": 28, "endOffset": 32}, {"referenceID": 19, "context": ", Chebyshev2D approximation [19] of complexity and the ARMA2D approach [20], while Fig.", "startOffset": 71, "endOffset": 75}, {"referenceID": 18, "context": "Cheby2D [19] O(T |E|MT +NTMTMG) all", "startOffset": 8, "endOffset": 12}, {"referenceID": 19, "context": "ARMA2D [20] O(T |E|MG + T |E|MT ) separable", "startOffset": 7, "endOffset": 11}, {"referenceID": 11, "context": "In the following, we derive such a joint localization operator as a generalization of the graph localization operator [12], [36], [44], which localizes a kernel h(LG) onto vertex vm", "startOffset": 118, "endOffset": 122}, {"referenceID": 35, "context": "In the following, we derive such a joint localization operator as a generalization of the graph localization operator [12], [36], [44], which localizes a kernel h(LG) onto vertex vm", "startOffset": 124, "endOffset": 128}, {"referenceID": 43, "context": "In the following, we derive such a joint localization operator as a generalization of the graph localization operator [12], [36], [44], which localizes a kernel h(LG) onto vertex vm", "startOffset": 130, "endOffset": 134}, {"referenceID": 44, "context": "We next consider two interesting examples of the proposed dictionary construction that are generalizations of the short-time Fourier and wavelet transforms [45], [46]:", "startOffset": 156, "endOffset": 160}, {"referenceID": 45, "context": "We next consider two interesting examples of the proposed dictionary construction that are generalizations of the short-time Fourier and wavelet transforms [45], [46]:", "startOffset": 162, "endOffset": 166}, {"referenceID": 35, "context": "Nevertheless, we note that it does not correspond to a multiplication by an eigenvector as in [36], [47].", "startOffset": 94, "endOffset": 98}, {"referenceID": 46, "context": "Nevertheless, we note that it does not correspond to a multiplication by an eigenvector as in [36], [47].", "startOffset": 100, "endOffset": 104}, {"referenceID": 44, "context": "For a more complete treatment we refer the reader to [45].", "startOffset": 53, "endOffset": 57}, {"referenceID": 13, "context": "Following the idea developed in [14], we set sz\u03bb,z\u03c9 (\u00b7, \u00b7) to a generalized graph dilation (or scaling), i.", "startOffset": 32, "endOffset": 36}, {"referenceID": 44, "context": "Redundant invertible dictionaries are referred to as frames [45], [49].", "startOffset": 60, "endOffset": 64}, {"referenceID": 48, "context": "Redundant invertible dictionaries are referred to as frames [45], [49].", "startOffset": 66, "endOffset": 70}, {"referenceID": 44, "context": "The following theorem generalizes the classic [45] results regarding the frame bounds, providing a condition for a joint time-vertex dictionary to be a frame, as in the case of graphs [48, Lemma 1], [14, Theorem 5.", "startOffset": 46, "endOffset": 50}, {"referenceID": 49, "context": "We remark that all the experiments were done using the GSPBOX [50], the UNLocBoX [51] and the LTFAT [52].", "startOffset": 62, "endOffset": 66}, {"referenceID": 50, "context": "We remark that all the experiments were done using the GSPBOX [50], the UNLocBoX [51] and the LTFAT [52].", "startOffset": 81, "endOffset": 85}, {"referenceID": 51, "context": "We remark that all the experiments were done using the GSPBOX [50], the UNLocBoX [51] and the LTFAT [52].", "startOffset": 100, "endOffset": 104}, {"referenceID": 52, "context": "Since patch-graphs allow non-local image processing [53], our goal is to extend graph-based non-local processing to video inpainting and recovery.", "startOffset": 52, "endOffset": 56}, {"referenceID": 53, "context": "two baseline algorithms, based on 3D-Tikhonov and isotropic 3D-TV regularizations [54].", "startOffset": 82, "endOffset": 86}, {"referenceID": 49, "context": "For the vertex dimension, we use the an Itersine kernel (defined in the GSPBOX [50]) that we uniformly translate at 5 different positions in the graph spectral domain.", "startOffset": 79, "endOffset": 83}, {"referenceID": 20, "context": "We extend the results presented in [21] to a greater dataset using the STVWT with mother kernel based on the wave PDE, which allows us to decompose the signal as sum of PDE solutions.", "startOffset": 35, "endOffset": 39}, {"referenceID": 54, "context": "As a first approximation, when the waves propagate in a continuous domain or a regular lattice, seismic waveforms can be modeled as oscillating damped waves [55].", "startOffset": 157, "endOffset": 161}, {"referenceID": 1, "context": "To construct the STVWT, we select 10 equally spaced values in [0, 2] for z\u03bb and set z\u03c9 = 1.", "startOffset": 62, "endOffset": 68}, {"referenceID": 55, "context": "Assuming vanishing initial velocity v(0) = 0, the solution u(t) is given via functional calculus by [56]", "startOffset": 100, "endOffset": 104}, {"referenceID": 55, "context": "The wave equation is a hyperbolic differential equation and several difficulties arise when discretizing it for numerical computation of the solution [56].", "startOffset": 150, "endOffset": 154}, {"referenceID": 56, "context": "It has been proved in [57] that the eigenvectors UT (t, k) = cos(tk\u03c0/T ) form also the discrete Fourier basis.", "startOffset": 22, "endOffset": 26}, {"referenceID": 55, "context": "We remark that this result is in agreement with the stability analysis of numerical solver for the discrete wave equation presented in [56].", "startOffset": 135, "endOffset": 139}], "year": 2017, "abstractText": "An emerging way to deal with highdimensional non-euclidean data is to assume that the underlying structure can be captured by a graph. Recently, ideas have begun to emerge related to the analysis of time-varying graph signals. This work aims to elevate the notion of joint harmonic analysis to a full-fledged framework denoted as Time-Vertex Signal Processing, that links together the time-domain signal processing techniques with the new tools of graph signal processing. This entails three main contributions: (a) We provide a formal motivation for harmonic time-vertex analysis as an analysis tool for the state evolution of simple Partial Differential Equations on graphs. (b) We improve the accuracy of joint filtering operators by up-to two orders of magnitude. (c) Using our joint filters, we construct time-vertex dictionaries analyzing the different scales and the local time-frequency content of a signal. The utility of our tools is illustrated in numerous applications and datasets, such as dynamic mesh denoising and classification, still-video inpainting, and source localization in seismic events. Our results suggest that joint analysis of time-vertex signals can bring benefits to regression and learning.", "creator": "TeX"}}}