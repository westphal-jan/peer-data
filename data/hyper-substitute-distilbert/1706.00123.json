{"id": "1706.00123", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "31-May-2017", "title": "Diversified Top-k Partial MaxSAT Solving", "abstract": "we understand reverse diversified top - f individual selection problem, fuzzy combination of regular maxsat problem and learning tree. besides these strong maxsat range f and a positive filter algorithm, the diversified top - k total maxsat is found find more maximal solutions formula f such at the k maximal solutions satisfy the maximum number of soft points of f. this problem can am widely used in many applications because scenario mining, sensor place, motif discovery, mathematical combinatorial testing. hopefully prove the problem from np - hard enough takes careful exercise entirely computational the problem. the concrete idea called the assumption is helps solve selective encoding ee which reduces diversified top - k partial maxsat problem into reduced maxsat problem, should immediately reproduce his stuffing problem with error - been - art modifications. in addition, we consider an algorithm memkc exactly solving randomly diversified top - the meta maxsat. through several ways questions show whether our solution can be theoretically applied to the encryption problem.", "histories": [["v1", "Wed, 31 May 2017 23:37:18 GMT  (71kb,D)", "http://arxiv.org/abs/1706.00123v1", null]], "reviews": [], "SUBJECTS": "cs.AI", "authors": ["junping zhou", "huanyao sun", "feifei ma", "jian gao", "ke xu", "minghao yin"], "accepted": false, "id": "1706.00123"}, "pdf": {"name": "1706.00123.pdf", "metadata": {"source": "CRF", "title": "Diversified Top-k Partial MaxSAT Solving", "authors": ["Junping Zhou", "Huanyao Sun", "Feifei Ma", "Jian Gao", "Ke Xu", "Minghao Yin"], "emails": [], "sections": [{"heading": "1 Introduction", "text": "Given a partial MaxSAT formula F and a positive integer k, the diversified topk partial MaxSAT is a problem of finding k maximal solutions for F such that the k maximal solutions satisfy the maximum number of soft clauses of F . As a matter of fact, it is a combination of partial MaxSAT problem and enumeration problem, which covers the traits of the two problems [1,2,3,4]. For example, both the diversified top-k partial MaxSAT and partial MaxSAT problems require to seek the solution(s) to satisfy the maximum number of soft clauses. Both the diversified top-k partial MaxSAT and enumeration problems ask for enumerating some or all solutions. On the other hand, the proposed problem has its own characteristics and merits. It enumerates only k solutions instead of all because in some applications listing k solutions that are large and informative are preferred for a user [5]. Hence, diversified top-k partial MaxSAT can open up a wide range of applications. For instance, the social network community detection can be solved using diversified top-k partial MaxSAT based algorithm, by finding top-k diversified communities covering most number of nodes in the social network [6]. The sensor place problem for water pollution monitoring, which is to ar X iv :1\n70 6.\n00 12\n3v 1\n[ cs\n.A I]\n3 1\nM ay\nselect limited number of sensors guaranteeing the detection is maximized, can be expressed as the diversified top-k partial MaxSAT problem [7]. The diversified top-k clique problem, used in motif discovery in molecular biology, can be also translated into diversified top-k partial MaxSAT problem [8]. Additionally, the diversified top-k partial MaxSAT problem can serve to detect the faults in complex software systems [9]. In this sense, the diversified top-k partial MaxSAT problem is versatile and valuable.\nIn this paper, we focus on exploring the diversified top-k partial MaxSAT problem solving. The concrete proposal is to devise an efficient encoding from diversified top-k partial MaxSAT problem into a target problem, and then solve the resulting problem with state-of-art solvers. Since the diversified top-k partial MaxSAT problem is a generalization of the partial MaxSAT problem in some sense, we propose an encoding EE which reduces diversified top-k partial MaxSAT into partial MaxSAT. Moreover, we present another algorithm MEMKC to exactly solve the diversified top-k partial MaxSAT.The fundamental principle of the algorithm is to decompose the diversified top-k partial MaxSAT into two stages, each of which corresponds to one problem: the first stage corresponds to the model enumeration problem, and the second corresponds to the Max-k-Cover problem. In the first stage, the algorithm enumerates each truth assignment that satisfies all hard clauses of a given partial MaxSAT instance F . In the second stage, it selects k truth assignments from the results of the first stage to satisfy the maximum number of soft clauses of F . After that, we conduct experiments on diversified top-k partial MaxSAT instances, which reveal that EE encoding is correct, effect, and efficient. The empirical investigation also shows that some application problems solved by converting them to diversified top-k partial MaxSAT problem can obtain a better solution. For example, when we handle the diversified top-k clique problem in dense graphs or hard graphs, it is more efficient to solve by reducing them to diversified top-k partial MaxSAT problems than state-of-art diversified top-k clique solvers.\nThe outline of the paper is as follows. We first present some related definitions in Section 2. In Section 3, we address the reduction of diversified top-k partial MaxSAT into partial MaxSAT. We then propose another exact algorithm MEMKC to solve diversified top-k partial MaxSAT in Section 4. In Section 5, two applications of the diversified top-k partial MaxSAT are introduced. In Section 6, we show the experimental results. Finally, we conclude this paper."}, {"heading": "2 Preliminaries", "text": "In this section, we will first present some definitions related this paper. A literal is either a Boolean variable (variable for short) x or its negation \u00acx. A positive literal is just a variable x, and the negative literal is the negation of a variable, i.e., \u00acx. A clause is a disjunction of literals. The length of a clause is the number of literals that the clause contains. A clause is a unit clause if the length of the clause is 1. A formula F in Conjunctive Normal Form (CNF) is a conjunction of clauses. The length of a formula F expressed by |F | is the number of clauses\nincluded in the formula. Any variable in F can take a value true or false. A truth assignment for F is a map that assigns each variable a value. Given a truth assignment, a clause is satisfied iff at least one literal in it take the value true and a formula F is satisfied iff each clause in F is satisfied.\nA partial MaxSAT formula in CNF is also a conjunction of clauses and the clauses can be distinguished into hard clauses and soft clauses. The hard clauses are un-relaxed constraints, all of which must be satisfied; while soft clauses are relaxed constrains, some of which can be unsatisfied. Thus, the partial MaxSAT formula can be expressed in a set of hard clauses and a set of soft clauses. Given a partial MaxSAT formula F with a set of hard clauses Sh and a set of soft clauses Ss, Sh \u222aS \u2032 s (S \u2032 s \u2286 Ss) is a maximal satisfiable subset of F iff Sh \u222aS \u2032\ns is satisfied, but addition of any clause in Ss \u2212 S \u2032\ns results in unsatisfied. We define the truth assignment satisfying any a maximal satisfiable subset is a maximal solution for a partial MaxSAT formula F . Given a partial MaxSAT formula F , the partial MaxSAT problem is to find a truth assignment for F which satisfies not only all hard clauses but also the maximum number of soft clauses, and we call this truth assignment solution. Apparently, the truth assignment satisfying the largest maximal satisfiable subset is a solution of the partial MaxSAT problem.\nDefinition 1. Given a partial MaxSAT formula F and a positive integer k, the diversified top-k partial MaxSAT problem is to compute a set R, such that each ri \u2208 R is a maximal solution of F , |R| \u2264 k, and the set R can satisfy the maximum number of distinct soft clauses of F .\nWe define the set R the solution of the diversified top-k partial MaxSAT problem."}, {"heading": "3 Encoding", "text": "In this section, we propose an encoding, named Expanding Encoding (EE), from diversified top-k partial MaxSAT problem into partial MaxSAT problem. The central idea of EE is derived from the following observation. First of all, given a partial MaxSAT formula F and a positive integer k, the diversified top-k partial MaxSAT problem requires to find k maximal solutions\u2014that is, each variable in F is set k values though many of the values are repeated. So, we expand each variable into k variables, i.e., xi is developed into xi1, xi2, ..., xik. Secondly, diversified top-k partial MaxSAT problem and partial MaxSAT problem have something in common. They are both to compute a solution to satisfy the maximum number of soft clauses of F . Thus, we encode diversified top-k partial MaxSAT problem into partial MaxSAT problem. The specific encoding process is addressed as the follows.\nGiven a positive integer k and a partial MaxSAT formula F with variables x1, x2, ..., xn, we create the partial MaxSAT formula as follows.\n1. For each variable xi in F , we extend xi to xi1, xi2, ..., xik. 2. For each hard clause xa\u2228 xb\u2228 ... \u2228 xp in F , we develop the clause into\nk hard clauses. They are (1) xa1\u2228 xb1\u2228...\u2228 xp1, (2) xa2\u2228 xb2 \u2228 ...\u2228\nxp2,... , (k) xak\u2228 xbk \u2228 ...\u2228 xpk, where \" \" is either null or \"\u00ac\", and the corresponding symbol \" \" in developed clauses is equal to the original hard clause. 3. For each soft clause xq\u2228 xt \u2228 ...\u2228 xz in F , we expand the clause into a clause with k times length as the original one. That is ( xq1\u2228 xt1 \u2228 ...\u2228 xz1)\u2228( xq2\u2228 xt2\u2228 ...\u2228 xz2)\u2228 ...\u2228 ( xqk\u2228 xtk \u2228 ...\u2228 xzk), where \" \" is either null or \"\u00ac\", and the corresponding symbol \" \" in developed clauses is also equal to the original soft clause.\nSince hard clauses are un-relaxed constraints and the values which are set to variables in F must satisfy each original hard clause, the auxiliary hard clauses are added into the converted partial MaxSAT formula. In addition, because soft clauses are relaxed constrains and can be satisfied if just one literal set to true, the original soft clause grows longer in the converted partial MaxSAT formula. Generally speaking, if the original diversified top-k partial MaxSAT has n variables, m hard clauses, and m\u2032 soft clauses, the partial MaxSAT contains k \u00d7 n variables, k \u00d7m hard clauses, and m\u2032 soft clauses.\nExample 1. Let F = Sh \u222a Ss be a partial MaxSAT formula, where Sh = {x1 \u2228 x2,\u00acx1 \u2228 \u00acx2} is the set of hard clauses, and Ss = {x1, x2} is the set of soft clauses. When k = 2, the partial MaxSAT encoding of the diversified top-k partial MaxSAT instance F is formed by the hard clauses c1 = x11 \u2228 x21, c2 = x12\u2228x22, c3 = \u00acx11\u2228\u00acx21, c4 = \u00acx12\u2228\u00acx22, and the soft clauses c5 = x11\u2228x12, c6 = x21 \u2228 x22.\n4 Reducing Diversified top-k Partial MaxSAT Problem\nIn this section, we define a method, named MEMKC, to exactly solve the diversified top-k partial MaxSAT problem. The method split the original problem into model enumeration [10] and Max-k-Cover [11]. This method MEMKC firstly enumerates every truth assignment satisfying all hard clauses of a given partial MaxSAT formula F , and such truth assignment is called model. Let the soft clauses of the given partial MaxSAT formula F be a universe set U , where each soft clause is an element of U , and let the soft clauses satisfied by a model be a subset of U. Obviously, to solve a top-k Partial MaxSAT problem can be reduced to a Max-k-cover problem, i.e. seeking out k subset from the subsets returned by previous model enumeration process to cover the maximum number of elements in the universe set.\nIn the following, we will describe the framework of MEMKC algorithm in Fig.1. This algorithm includes the ME (Model Enumeration) and MKC (Maxk-Cover) functions, and takes the partial MaxSAT formula F and a positive integer k as the inputs. In the algorithm, Sh (resp. Ss) denotes the formula only containing hard clauses (resp. soft clauses), which is obtained by deleting all the soft clauses (resp. hard clauses) from F . SM is a set storing the selected models. At first, the algorithm invokes the ME to enumerate all models stored in the set S. Then, the MKC is called to select k models satisfying the maximum\nnumber of soft clauses. Fig.2 and Fig.3 propose the ME and MKC functions respectively. In the two functions, s, s1, and s2 is the current models expressed in xi = value, xj = value, ..., where xi, xj , ... are the variables, and value is either true or false. The symbol \" \" is either null or \"\u00ac\". When the symbol \" \" in x = true is null, the value of the variable x is true; otherwise false. F |x=true (resp. F |x=false) is the result of applying a simplified rule, i.e., removing all clauses containing the literal x (resp.\u00acx) from F , and deleting all occurrences of \u00acx (resp.x) from the other clauses in F . S/s is a set of models obtained by deleting the model s from S. F |s=true is a formula received by dropping the satisfied clauses by the model s from F. SNi (i=1 or 2) is a variable recoding the number of soft clauses satisfied by the models in SM .\nFunction ME (F ,s) while F contains a unit clause x\nF =F | x=true; add x = true to s ;\nif F has an empty clause then return \u2205; if F is empty then return {s}; s1 = s; s2 = s; pick a variable x from F ; F1 =F |x=true; add x = true to s1 ; F2 =F |x=false; add x = false to s2 ; return ME(F1,s1) \u222a ME(F2,s2).\nFig. 2: The ME function\nFunction MKC (F ,S,k,SM) if k=0 or S = \u2205 then return 0; pick a model s from S; S = S/s ; F1 = F ; F2 = F |s=true; SN1=MKC(F1, S, k, SM); SN2=MKC(F2,S, k-1,SM \u222a {s})+ (|F | \u2212 |F2|); return max(SN1, SN2).\nFig. 3: The MKC function"}, {"heading": "5 Applications", "text": "In this section, we will discuss the applications of the diversified top-k partial Max-SAT problem.\n5.1 Diversified Top-k Clique\nThe problem of diversified top-k clique is to pick up k maximal cliques which cover the maximum number of vertices [12]. This problem has wide real-world applications including social networks, complex networks, and molecular biology [13,14,15]. In addition, diversified top-k clique problem can be solved by converting into diversified top-k partial MaxSAT. Suppose G=<V,E> is an undirected and simple graph, where V={v1, v2, ..., vn} is a set of vertices, E={e1, e2, ..., em} is a set of edges, and each ei is expressed as a 2-tuple <vt, vj> (1 \u2264 t, j \u2264 n, t 6= j). Given a positive integer k, the encoding from diversified top-k clique into diversified top-k partial MaxSAT is as follows. The integer k remains the same. The hard clauses are composed of all the non-adjacent vertices in G, i.e., \u00acvi \u2228 \u00acvj , where < vi , vj > /\u2208 E, and the soft part is the unit clauses formed by every vertex in G, i.e., vi, where vi \u2208 V .\nExample 2. Given a positive integer k, an undirected and simple graph G=<V, E>, where V={v1, v2, v3, v4} and E={<v1, v2>, <v2, v3>, <v3, v4>, <v1, v4>}, the diversified top-k partial MaxSAT encoding of the diversified top-k clique in G consists of the integer k, hard clauses \u00acv1 \u2228 \u00acv3, \u00acv2 \u2228 \u00acv4, and soft clauses v1, v2, v3, v4.\n5.2 Diversified Top-k Covering Arrays\nCovering Arrays (CAs) are interesting objects of study in combinatorics. It plays an important role in factorial designs in which each treatment is a combination of factors at different levels. A CA of run size N , factor number M , strength t can be denoted by CA(N, s1, s2, . . . , sM , t). It is an N \u00d7M matrix satisfying the following constraints:\n1. There are exactly si symbols appearing in each column i (1 \u2264 i \u2264M). 2. In every N \u00d7 t sub-array, each ordered combination of symbols from the t\ncolumns appears at least once in rows.\nsi is refered to as the level of factor i. By combining equal entries in si, a CA(N, s1, s2, . . . , sM , t) is represented in the shortened form CA(N, si1 a1 , si2 a2 , . . . , t), where a1, a2, . . . indicate the number of factors at level si1 , si2 , . . . .\nFor many complex software systems, there are usually different components/ parameters, each of which can take a number of values. System faults usually arise from the interaction of several parameters/components. Combinatorial testing [20,16,17,18,19] is an important black-box testing technique to reveal such faults. CAs have been used as test suites in Combinatorial testing for more than two decades. Each row of the CA represents a test case, and the i-th column corresponds to the value of parameter pi in each test case. For any t columns of the array, the N\u00d7 t sub-array covers all value combinations of the corresponding t parameters. Therefore, a CA of strength t can be used as a test suite to detect the faults caused by the interactions of t parameters.\nIdeally, one would like to examine the system\u2019s behavior under all t-way combinations of the parameter values. But this kind of exhaustive testing may be\nvery costly for a non-trivial software system. In some occasions, resource or time only permits to execute a certain number of test cases. It is highly desirable to maximize the coverage of these test cases. Given parameters, coverage criteria, and a positive integer k, a diversified top-k CA is a k\u00d7M sub-matrix of a CA in which the number of ordered combination of t values from different columns is maximized. The diversified top-k CA problem can be also solved by transforming it to diversified top-k partial MaxSAT. Suppose there is a positive integer k and a CA(N, s1, s2, . . . , sM , t).Then each value combination can be modeled as a variable. If two value combinations contradict each other, then we add a hard clause, i.e., \u00acvari \u2228 \u00acvarj , where the value combination modeled as vari contradicts with varj . In addition, the soft part is formed by each variable, i.e., vari. The integer k is unchanged.\nExample 3. Given a positive integer k and a CA(N, si1 a1 , si2 a2 , si3 a3 , t), where N = 2, M = 3, t = 2, si1 = 1, si2 = 1, si3 = 2, the diversified top-k partial MaxSAT encoding of the diversified top-k CA consists of the integer k, the hard clauses (1)\u00acvar2 \u2228 \u00acvar3, (2)\u00acvar4 \u2228 \u00acvar5, and the soft clauses (1)var1, (2)var2, ..., (5)var5.\nNote that, in general, sij>1. This example set that way is only to illustrate how the transformation works."}, {"heading": "6 Experimental Results", "text": "In this section, we perform experiments to evaluate the effectiveness and efficiency of EE encoding from the comparison of our algorithm MEMKC, diversified top-k clique solver EnumKOpt [12], diversified top-k CA solver k-CA [20], and the state-of-the-art partial MaxSAT solvers Openwbo [21], Dist [22], and CCLS [23]."}, {"heading": "6.1 Experimental Preliminaries", "text": "We implement MEMKC algorithm in C++ programming language. Since enumerating all models is computationally intractable, MEMKC is only used in Part 1 to evaluate the small-scale instances. EnumKOpt is the best current approximate solver for diversified top-k clique. Diversified top-k CA solver k-CA implemented in C++ is an approximate solver by greedily calling the state-ofthe-art CA solver TCA [20]. Dist and CCLS are excellent approximate solvers for partial MaxSAT. The time limits of EnumKOpt, k-CA, Dist, and CCLS are set to 1800, 300, 300, 300 seconds respectively when they execute once on each instance. Openwbo, an exact solver, wins the first prize in unweighted partial MaxSAT track in MaxSAT Evaluation 2016. The cut off time of Openwbo is set to 30000 seconds. In the experimental results, if a solver fails to find a feasible solution in the cut off time, the corresponding results are marked with \"-\". The execution time retured is in seconds. #uncov represents the number of unsatisfied soft clauses (uncovered nodes or value combinations) solved by solvers. And the results obtained by Dist and CCLS are the average values by executing\nten times on each instance. All experiments are running on a workstation under Linux with 8 cores of Inter(R) Xeon(R) E7-4820 v2 @2.00GHz CPU and 8GB RAM."}, {"heading": "6.2 Experimental Results", "text": "Part 1: This experiment is to demonstrate the effectiveness of MEMKC. It should be noted that since MEMKC need to enumerate all the Fig.4 illustrates the number of unsatisfied soft clauses returned by MEMKC solver and partial MaxSAT solvers, including exact solver Openwbo and approximate solvers Dist, CCLS, on random diversified top-k partial MaxSAT instances. These random instances solved by the partial MaxSAT solvers are encoded with EE encoding. In the experiment, vicj represents the instance with i variables, j\u2212i hard clauses, and i soft clauses. The results reported in Fig.4 suggest that MEMKC is effective because each solver can obtain the same results on the identical instances.\nPart 2: The purpose of the experiment is to verify the effectiveness of the EE encoding. Table 1 presents the performance of three partial MaxSAT solvers\non instances encoded from random diversified top-k partial MaxSAT instances with EE encoding. In this experiment, we vary k from 1 to 6. The scale of these instances (expressed by vari) ranges from 40 to 100 variables and 200 to 1200 clauses, where the number of soft clauses is from 40 to 100. Table 1 records the mean number of unsatisfied soft clauses for each solver in a set of 30 instances. By analyzing the results in Table 1, we can see that the instances with a few variables can be exact solved, and all instances can be successfully settled by approximate solvers, Dist and CCLS, which reveals that the EE encoding is effect.\nPart 3: We carry out three experiments comparing with the diversified topk clique solver EnumKOpt and three partial MaxSAT solvers on graphs to illustrate the efficiency of EE encoding. These instances solved by the partial MaxSAT solvers are first encoded from graphs into diversified top-k partial MaxSAT problem and then converted into partial MaxSAT problem with EE encoding. In the first experiment, we randomly generate graphs with 40 to 100 vertices and 10% probability that two vertices have an edge. In the second experiment, the generated random graphs vary probabilities of an edge existing between two vertices from 10% to 70%, and the number of vertices in all graphs is 60. In the results of the experiment, each graph is represented by Pj, where j is the probability. In the last experiment, we choose the well-known BHOSLIB benchmark, which is famous for its hardness [24].\nTable 2 presents the results of the first experiment, which compares the diversified top-k clique solver with partial MaxSAT solvers on random sparse graphs by varying the number of vertices. We use Vi to express each instance, where i is the number of vertices. As can be seen from Table 2, exact solver Openwbo can deal with the instances with small scale and all instances can be rapidly solved by the approximate solvers. In addition, comparing with all known optimal solutions found by Openwbo, almost all approximate solvers can obtain the optimal solutions. This indicates that EE encoding and EnumKOpt have the equal effectiveness when solving the diversified top-k clique problem in sparse graphs. The results of the second experiment are showed in Table 3. This experiment compares the diversified top-k clique solver with three partial MaxSAT solvers on random graphs with varying probabilities that two vertices have an edge. Among these results, we observe the performance of EnumKOpt becomes worse with the increasing probability, while the performance of approximate solvers for partial MaxSAT is stable. Moreover, the exact solver Openwbo for partial MaxSAT can find solutions on random graphs with high probabilities. This illustrates that it is more appropriate for diversified top-k clique problem to be solved by converting to diversified top-k partial MaxSAT problem when they handle the dense graphs. Table 4 summarizes the experimental results of EnumKOpt and three partial MaxSAT solvers on instances from BHOSLIB. We can find that these graphs cannot be solved by EnumKOpt and Openwho, but can be efficiently obtained the solutions by translating these graphs into diversified top-k partial MaxSAT and further encoding to partial MaxSAT with EE encoding. This illustrates that EE encoding is efficient on hard instances and it will be also efficient when we solve the diversified top-k cliques on hard instances by conventing it to diversified top-k partial MaxSAT.\nPart 4: We perform one experiment in Table 5 to compare the diversified top-k CA solver with three partial MaxSAT solvers on CAs. In Table 5, each instance is denoted by CA(N, s1, s2, . . . , sM , t), which is defined in Section 5.2. These instances solved by the partial MaxSAT solvers are also first encoded from CAs into diversified top-k partial MaxSAT problem and then converted into partial MaxSAT problem with EE encoding. From Table 5, we can find that the performance of k-CA is roughly worse than the three partial MaxSAT"}, {"heading": "5 84 0 - - 84 0.02 84 0.01", "text": ""}, {"heading": "4 87 0 - - 87 0.02 87 0.01", "text": ""}, {"heading": "3 90 0 - - 90 0.02 90 0", "text": ""}, {"heading": "2 93 0 93 53.55 93 0.01 93 0", "text": ""}, {"heading": "1 96 0 96 0.29 96 0.01 96 0", "text": ""}, {"heading": "6 71 0 - - 71 0.02 71 0.01", "text": ""}, {"heading": "5 74 0 - - 74 0.02 74 0.01", "text": ""}, {"heading": "4 77 0 - - 77 0.02 77 0.01", "text": ""}, {"heading": "3 80 0 - - 80 0.01 80 0", "text": ""}, {"heading": "2 83 0 83 26.97 83 0.01 83 0", "text": ""}, {"heading": "1 86 0 86 0.37 86 0.01 86 0", "text": ""}, {"heading": "6 62 0 - - 62 0.02 62 0.01", "text": ""}, {"heading": "5 65 0 - - 65 0.02 65 0.01", "text": ""}, {"heading": "4 68 0 - - 68 0.01 68 0", "text": ""}, {"heading": "3 71 0 71 4672.18 71 0.01 71 0", "text": ""}, {"heading": "2 74 0 74 14.79 74 0.01 74 0", "text": ""}, {"heading": "1 77 0 77 0.16 77 0.01 77 0", "text": ""}, {"heading": "6 52 0 - - 52 0.02 52 0", "text": ""}, {"heading": "5 55 0 - - 55 0.01 55 0", "text": ""}, {"heading": "4 58 0 - - 58 0.01 58 0", "text": ""}, {"heading": "3 61 0 61 811.58 61 0.01 61 0", "text": ""}, {"heading": "2 64 0 64 5.28 64 0.01 64 0", "text": ""}, {"heading": "1 67 0 67 0.06 67 0.01 67 0", "text": ""}, {"heading": "6 42 0 - - 42 0.01 42 0", "text": ""}, {"heading": "5 45 0 - - 45 0.01 45 0", "text": ""}, {"heading": "4 48 0 48 29152.67 48 0.01 48 0", "text": ""}, {"heading": "3 51 0 51 334.47 51 0.01 51 0", "text": ""}, {"heading": "2 54 0 54 2.83 54 0.01 54 0", "text": ""}, {"heading": "1 57 0 57 0.04 57 0.01 57 0", "text": ""}, {"heading": "6 33 0 - - 33 0.01 33 0", "text": ""}, {"heading": "5 35 0 - - 35 0.01 35 0", "text": ""}, {"heading": "4 38 0 38 1021.6 38 0.01 38 0", "text": ""}, {"heading": "3 41 0 41 23.64 41 0.01 41 0", "text": ""}, {"heading": "2 44 0 44 0.97 44 0.01 44 0", "text": ""}, {"heading": "1 47 0 47 0.02 47 0.01 47 0", "text": ""}, {"heading": "6 24 0 - 23 0.01 23 0", "text": ""}, {"heading": "5 26 0 25 2069.67 25 0.01 25 0", "text": ""}, {"heading": "4 28 0 28 84.8 28 0.03 28 0", "text": ""}, {"heading": "3 31 0 31 3.61 31 0.02 31 0", "text": ""}, {"heading": "2 34 0 34 0.22 34 0.03 34 0", "text": ""}, {"heading": "1 37 0 37 0.01 37 0.02 37 0", "text": ""}, {"heading": "5 - - 0 0 0 0.02 0 0", "text": ""}, {"heading": "4 - - 0 0.01 0 0.03 0 0", "text": ""}, {"heading": "3 - - 5 0.68 5 0.03 5 0", "text": ""}, {"heading": "2 - - 19 1.48 19 0.03 19 0", "text": ""}, {"heading": "1 39 0 37 0.08 37 0.03 37 0", "text": ""}, {"heading": "6 - - 0 0 0 0.01 0 0", "text": ""}, {"heading": "5 - - 1 1.81 1 0.01 1 0", "text": ""}, {"heading": "4 - - 8 4947.78 8 0.05 8 0", "text": ""}, {"heading": "3 - - 18 1178.02 18 0.06 18 0", "text": ""}, {"heading": "2 - - 30 12.56 30 0.06 30 0", "text": ""}, {"heading": "1 45 0 45 0.36 45 0.04 45 0", "text": ""}, {"heading": "6 - - - - 20 0.42 20 0.01", "text": ""}, {"heading": "5 - - - - 26 0.03 26 0.01", "text": ""}, {"heading": "4 - - - - 32 0.02 32 0", "text": ""}, {"heading": "3 - - 38 6630.16 38 0.01 38 0", "text": ""}, {"heading": "2 46 0 44 11.67 44 0.01 44 0", "text": ""}, {"heading": "1 52 0 52 0.11 52 0.01 52 0", "text": ""}, {"heading": "6 - - - - 26 0.01 26 0", "text": ""}, {"heading": "5 - - - - 31 0.02 31 0", "text": ""}, {"heading": "4 - - - - 36 0.01 36 0", "text": ""}, {"heading": "3 44 0 42 6116.46 42 0.01 42 0", "text": ""}, {"heading": "2 49 0 48 15.43 48 0.01 48 0", "text": ""}, {"heading": "1 54 0 54 0.08 54 0.01 54 0", "text": ""}, {"heading": "6 - - - - 31 0.03 31 0", "text": ""}, {"heading": "5 - - - - 35 0.01 35 0", "text": ""}, {"heading": "4 42 0 - - 40 0.01 40 0", "text": ""}, {"heading": "3 46 0 45 2153.82 45 0.01 45 0", "text": ""}, {"heading": "2 50 0 50 10.71 50 0.01 50 0", "text": ""}, {"heading": "1 55 0 55 0.1 55 0 55 0", "text": ""}, {"heading": "6 40 0 \u2013 \u2013 37 0.01 37 0", "text": ""}, {"heading": "5 43 0 - - 40 0.02 40 0", "text": ""}, {"heading": "4 46 0 - - 44 0.01 44 0", "text": ""}, {"heading": "3 49 0 48 255.7 48 0.01 48 0", "text": ""}, {"heading": "2 52 0 52 6.03 52 0.01 52 0", "text": ""}, {"heading": "1 56 0 56 0.06 56 0.01 56 0", "text": ""}, {"heading": "6 42 0 - - 42 0.01 42 0", "text": ""}, {"heading": "5 45 0 - - 45 0.01 45 0", "text": ""}, {"heading": "4 48 0 48 29152.67 48 0.01 48 0", "text": ""}, {"heading": "3 51 0 51 334.47 51 0.01 51 0", "text": ""}, {"heading": "2 54 0 54 2.83 54 0.01 54 0", "text": ""}, {"heading": "1 57 0 57 0.04 57 0.01 57 0", "text": "solvers when k \u2265 3. Thus, it is worth solving diversified top-k CA with converting the problem to diversified top-k partial MaxSAT problem."}, {"heading": "7 Conclusion", "text": "In this paper, we define the diversified top-k partial MaxSAT problem, which generalizes partial MaxSAT problem and enumeration problem. We provide an encoding EE from diversified top-k partial MaxSAT into partial MaxSAT. In order to verify the correctness of EE encoding, we propose an exact algorithm MEMKC. In the experiments, we demonstrate that our approach can be successfully solved the diversified top-k partial MaxSAT problem and this problem can be effectively applied to diversified top-k clique and diversified top-k CA problems."}, {"heading": "1. Hua Jiang, ChuMin Li, Felip Manya. \"An Exact Algorithm for the MaximumWeight", "text": "Clique Problem in Large Graphs.\" AAAI, 2017:830-838. 2. Hua Jiang, ChuMin Li, Felip Manya. \"Combining Efficient Preprocessing and Incremental MaxSAT Reasoning for MaxClique in Large Graphs.\" Proceedings of 22nd European Conference On Artifical Intelligence, ECAI, 2016: 939-947. 3. Borassi, et al. \"Telling stories fast: Via linear-time delay pitch enumeration.\" Experimental Algorithms (2013): 200."}, {"heading": "4. Zhiwen Fang, ChuMin Li, Ke Xu. \"An exact algorithm based on MaxSAT reasoning", "text": "for the maximum weight clique problem.\" Journal of Artificial Intelligence Research 55 (2016): 799-833."}, {"heading": "5. Bernard, H. Russell, P. D. Killworth, and L. Sailer. \"Informant accuracy in social", "text": "network data IV: a comparison of clique-level structure in behavioral and cognitive network data.\" Social Networks 2.3(1980): 191-218."}, {"heading": "6. Kempe, David, J. Kleinberg, and Tardos. \"Maximizing the spread of influence", "text": "through a social network.\" ACM SIGKDD International Conference on Knowledge Discovery and Data Mining ACM, 2003: 137-146. 7. Krause, Andreas, and C. Guestrin. \"Near-optimal Observation Selection using Submodular Functions. \" AAAI Conference on Artificial Intelligence, July 22-26, 2007."}, {"heading": "8. Zheng, X., et al. \"Large cliques in Arabidopsis gene coexpression network and motif", "text": "discovery.\" Journal of Plant Physiology 168.6(2011): 611-618."}, {"heading": "9. Yilmaz, Cemal, M. B. Cohen, and A. A. Porter. \"Covering Arrays for Efficient Fault", "text": "Characterization in Complex Configuration Spaces.\" IEEE Transactions on Software Engineering 32.1(2006): 20-34. 10. Morgado, A., and J. Marquessilva. \"Good Learning and Implicit Model Enumeration.\" IEEE International Conference on TOOLS with Artificial Intelligence IEEE 2005:6 131-136."}, {"heading": "11. Chang, Lijun, J. X. Yu, and L. Qin. \"Fast Maximal Cliques Enumeration in Sparse", "text": "Graphs.\" Algorithmica 66.1(2013):173-186. 12. Yuan, Long, et al. \"Diversified top-k clique search.\" ICDE 2015:171-196."}, {"heading": "13. N. Berry, T. Ko, T. Moy, J. Smrcka, J. Turnley, and B.Wu. \"Emergent Clique", "text": "Formation in Terrorist Recruitmen\" Workshop on Agent Organizations: Theory and Practice,2004. 14. C. Lee, F. Reid, A. McDaid, and N. Hurley. \"Detecting highly overlapping ommunity structure by greedy clique expansion\" Workshop on Social Network Mining and Analysis,1002.1827(2010). 15. X. Zheng, T. Liu, Z. Yang, and J. Wang. \"Large cliques in Arabidopsisgene coexpression network and motif discovery.\" Journal of Plant Physiology 168.6(2011):611- 618."}, {"heading": "16. Kuhn, D. Richard, and Michael J. Reilly. \"An investigation of the applicability of", "text": "design of experiments to software testing.\" Software Engineering Workshop, 2002. Proceedings. 27th Annual NASA Goddard/IEEE. IEEE, 2002."}, {"heading": "17. Cohen, David M, et al. \"The AETG System: An Approach to Testing Based on", "text": "Combinatorial Design.\" IEEE Transactions on Software Engineering 23.7(1997):437- 444."}, {"heading": "18. Kuhn, D. R, D. R. Wallace, and A. M. Gallo. \"Software Fault Interactions and", "text": "Implications for Software Testing.\" IEEE Transactions on Software Engineering 30.6(2004):418-421.\n19. Nie, Changhai, and H. Leung. \"A survey of combinatorial testing.\" Acm Computing Surveys 43.2(2011):11. 20. Lin J., Luo C., Cai S., Su K., Hao D., Zhang L. \"TCA: An Efficient Two-Mode Meta-Heuristic Algorithm for Combinatorial Test Generation (T)\". 30th IEEE/ACM International Conference on Automated Software Engineering, 2015:494-505. 21. Martins, Ruben, Vasco Manquinho, and Ines Lynce. \"Open-WBO: A modular MaxSAT solver.\" International Conference on Theory and Applications of Satisfiability Testing. Springer International Publishing, 2014. 22. Cai, Shaowei, et al. \"Tailoring local search for partial MaxSAT.\" Twenty-Eighth AAAI Conference on Artificial Intelligence AAAI Press, 2014:2623-2629. 23. Luo, Chuan, et al. \"CCLS: An Efficient Local Search Algorithm for Weighted Maximum Satisfiability.\" IEEE Transactions on Computers 64.7(2015):1830-1843. 24. Ke Xu and Wei Li. \"Many Hard Examples in Exact Phase Transitions.\" Theoretical Computer Science 355(2006):291-302."}], "references": [{"title": "An Exact Algorithm for the MaximumWeight Clique Problem in Large Graphs.", "author": ["Hua Jiang", "ChuMin Li", "Felip Manya"], "venue": null, "citeRegEx": "1", "shortCiteRegEx": "1", "year": 2017}, {"title": "Combining Efficient Preprocessing and Incremental MaxSAT Reasoning for MaxClique in Large Graphs.", "author": ["Hua Jiang", "ChuMin Li", "Felip Manya"], "venue": "Proceedings of 22nd European Conference On Artifical Intelligence,", "citeRegEx": "2", "shortCiteRegEx": "2", "year": 2016}, {"title": "Telling stories fast: Via linear-time delay pitch enumeration.\" Experimental Algorithms", "author": ["Borassi"], "venue": null, "citeRegEx": "3", "shortCiteRegEx": "3", "year": 2013}, {"title": "An exact algorithm based on MaxSAT reasoning for the maximum weight clique problem.", "author": ["Zhiwen Fang", "ChuMin Li", "Ke Xu"], "venue": "Journal of Artificial Intelligence Research", "citeRegEx": "4", "shortCiteRegEx": "4", "year": 2016}, {"title": "Informant accuracy in social network data IV: a comparison of clique-level structure in behavioral and cognitive network data.", "author": ["Bernard", "H. Russell", "P.D. Killworth", "L. Sailer"], "venue": "Social Networks", "citeRegEx": "5", "shortCiteRegEx": "5", "year": 1980}, {"title": "Maximizing the spread of influence through a social network.", "author": ["Kempe", "David", "J. Kleinberg", "Tardos"], "venue": "ACM SIGKDD International Conference on Knowledge Discovery and Data Mining ACM,", "citeRegEx": "6", "shortCiteRegEx": "6", "year": 2003}, {"title": "Near-optimal Observation Selection using Submodular Functions", "author": ["Krause", "Andreas", "C. Guestrin"], "venue": "AAAI Conference on Artificial Intelligence, July", "citeRegEx": "7", "shortCiteRegEx": "7", "year": 2007}, {"title": "Large cliques in Arabidopsis gene coexpression network and motif discovery.", "author": ["X Zheng"], "venue": "Journal of Plant Physiology", "citeRegEx": "8", "shortCiteRegEx": "8", "year": 2011}, {"title": "Covering Arrays for Efficient Fault Characterization in Complex Configuration Spaces.", "author": ["Yilmaz", "Cemal", "M.B. Cohen", "A.A. Porter"], "venue": "IEEE Transactions on Software Engineering", "citeRegEx": "9", "shortCiteRegEx": "9", "year": 2006}, {"title": "Good Learning and Implicit Model Enumeration.", "author": ["A. Morgado", "J. Marquessilva"], "venue": "IEEE International Conference on TOOLS with Artificial Intelligence", "citeRegEx": "10", "shortCiteRegEx": "10", "year": 2005}, {"title": "Fast Maximal Cliques Enumeration in Sparse Graphs.", "author": ["Chang", "Lijun", "J.X. Yu", "L. Qin"], "venue": null, "citeRegEx": "11", "shortCiteRegEx": "11", "year": 2013}, {"title": "Diversified top-k clique search.\" ICDE 2015:171-196", "author": ["Yuan", "Long"], "venue": null, "citeRegEx": "12", "shortCiteRegEx": "12", "year": 2015}, {"title": "Emergent Clique Formation in Terrorist Recruitmen\" Workshop on Agent Organizations: Theory and Practice,2004", "author": ["N. Berry", "T. Ko", "T. Moy", "J. Smrcka", "J. Turnley", "B.Wu"], "venue": null, "citeRegEx": "13", "shortCiteRegEx": "13", "year": 2004}, {"title": "Detecting highly overlapping ommunity structure by greedy clique expansion\" Workshop on Social Network Mining and Analysis,1002.1827(2010)", "author": ["C. Lee", "F. Reid", "A. McDaid", "N. Hurley"], "venue": null, "citeRegEx": "14", "shortCiteRegEx": "14", "year": 2010}, {"title": "Large cliques in Arabidopsisgene coexpression network and motif discovery.", "author": ["X. Zheng", "T. Liu", "Z. Yang", "J. Wang"], "venue": "Journal of Plant Physiology", "citeRegEx": "15", "shortCiteRegEx": "15", "year": 2011}, {"title": "An investigation of the applicability of design of experiments to software testing.", "author": ["Kuhn", "D. Richard", "Michael J. Reilly"], "venue": "Software Engineering Workshop,", "citeRegEx": "16", "shortCiteRegEx": "16", "year": 2002}, {"title": "The AETG System: An Approach to Testing Based on Combinatorial Design.", "author": ["Cohen", "David M"], "venue": "IEEE Transactions on Software Engineering", "citeRegEx": "17", "shortCiteRegEx": "17", "year": 1997}, {"title": "Software Fault Interactions and Implications for Software Testing.", "author": ["Kuhn", "D. R", "D.R. Wallace", "A.M. Gallo"], "venue": "IEEE Transactions on Software Engineering", "citeRegEx": "18", "shortCiteRegEx": "18", "year": 2004}, {"title": "A survey of combinatorial testing.", "author": ["Nie", "Changhai", "H. Leung"], "venue": "Acm Computing Surveys", "citeRegEx": "19", "shortCiteRegEx": "19", "year": 2011}, {"title": "TCA: An Efficient Two-Mode Meta-Heuristic Algorithm for Combinatorial Test Generation (T)", "author": ["J. Lin", "C. Luo", "S. Cai", "K. Su", "D. Hao", "L. Zhang"], "venue": "30th IEEE/ACM International Conference on Automated Software Engineering,", "citeRegEx": "20", "shortCiteRegEx": "20", "year": 2015}, {"title": "Open-WBO: A modular MaxSAT solver.", "author": ["Martins", "Ruben", "Vasco Manquinho", "Ines Lynce"], "venue": "International Conference on Theory and Applications of Satisfiability Testing. Springer International Publishing,", "citeRegEx": "21", "shortCiteRegEx": "21", "year": 2014}, {"title": "Tailoring local search for partial MaxSAT.\" Twenty-Eighth AAAI Conference on Artificial Intelligence", "author": ["Cai", "Shaowei"], "venue": null, "citeRegEx": "22", "shortCiteRegEx": "22", "year": 2014}, {"title": "CCLS: An Efficient Local Search Algorithm for Weighted Maximum Satisfiability.", "author": ["Luo", "Chuan"], "venue": "IEEE Transactions on Computers", "citeRegEx": "23", "shortCiteRegEx": "23", "year": 2015}, {"title": "Many Hard Examples in Exact Phase Transitions.\" Theoretical Computer Science 355(2006):291-302", "author": ["Ke Xu", "Wei Li"], "venue": null, "citeRegEx": "24", "shortCiteRegEx": "24", "year": 2006}], "referenceMentions": [{"referenceID": 0, "context": "As a matter of fact, it is a combination of partial MaxSAT problem and enumeration problem, which covers the traits of the two problems [1,2,3,4].", "startOffset": 136, "endOffset": 145}, {"referenceID": 1, "context": "As a matter of fact, it is a combination of partial MaxSAT problem and enumeration problem, which covers the traits of the two problems [1,2,3,4].", "startOffset": 136, "endOffset": 145}, {"referenceID": 2, "context": "As a matter of fact, it is a combination of partial MaxSAT problem and enumeration problem, which covers the traits of the two problems [1,2,3,4].", "startOffset": 136, "endOffset": 145}, {"referenceID": 3, "context": "As a matter of fact, it is a combination of partial MaxSAT problem and enumeration problem, which covers the traits of the two problems [1,2,3,4].", "startOffset": 136, "endOffset": 145}, {"referenceID": 4, "context": "It enumerates only k solutions instead of all because in some applications listing k solutions that are large and informative are preferred for a user [5].", "startOffset": 151, "endOffset": 154}, {"referenceID": 5, "context": "For instance, the social network community detection can be solved using diversified top-k partial MaxSAT based algorithm, by finding top-k diversified communities covering most number of nodes in the social network [6].", "startOffset": 216, "endOffset": 219}, {"referenceID": 6, "context": "select limited number of sensors guaranteeing the detection is maximized, can be expressed as the diversified top-k partial MaxSAT problem [7].", "startOffset": 139, "endOffset": 142}, {"referenceID": 7, "context": "The diversified top-k clique problem, used in motif discovery in molecular biology, can be also translated into diversified top-k partial MaxSAT problem [8].", "startOffset": 153, "endOffset": 156}, {"referenceID": 8, "context": "Additionally, the diversified top-k partial MaxSAT problem can serve to detect the faults in complex software systems [9].", "startOffset": 118, "endOffset": 121}, {"referenceID": 9, "context": "The method split the original problem into model enumeration [10] and Max-k-Cover [11].", "startOffset": 61, "endOffset": 65}, {"referenceID": 10, "context": "The method split the original problem into model enumeration [10] and Max-k-Cover [11].", "startOffset": 82, "endOffset": 86}, {"referenceID": 11, "context": "The problem of diversified top-k clique is to pick up k maximal cliques which cover the maximum number of vertices [12].", "startOffset": 115, "endOffset": 119}, {"referenceID": 12, "context": "This problem has wide real-world applications including social networks, complex networks, and molecular biology [13,14,15].", "startOffset": 113, "endOffset": 123}, {"referenceID": 13, "context": "This problem has wide real-world applications including social networks, complex networks, and molecular biology [13,14,15].", "startOffset": 113, "endOffset": 123}, {"referenceID": 14, "context": "This problem has wide real-world applications including social networks, complex networks, and molecular biology [13,14,15].", "startOffset": 113, "endOffset": 123}, {"referenceID": 19, "context": "Combinatorial testing [20,16,17,18,19] is an important black-box testing technique to reveal such faults.", "startOffset": 22, "endOffset": 38}, {"referenceID": 15, "context": "Combinatorial testing [20,16,17,18,19] is an important black-box testing technique to reveal such faults.", "startOffset": 22, "endOffset": 38}, {"referenceID": 16, "context": "Combinatorial testing [20,16,17,18,19] is an important black-box testing technique to reveal such faults.", "startOffset": 22, "endOffset": 38}, {"referenceID": 17, "context": "Combinatorial testing [20,16,17,18,19] is an important black-box testing technique to reveal such faults.", "startOffset": 22, "endOffset": 38}, {"referenceID": 18, "context": "Combinatorial testing [20,16,17,18,19] is an important black-box testing technique to reveal such faults.", "startOffset": 22, "endOffset": 38}, {"referenceID": 11, "context": "In this section, we perform experiments to evaluate the effectiveness and efficiency of EE encoding from the comparison of our algorithm MEMKC, diversified top-k clique solver EnumKOpt [12], diversified top-k CA solver k-CA [20], and the state-of-the-art partial MaxSAT solvers Openwbo [21], Dist [22], and CCLS [23].", "startOffset": 185, "endOffset": 189}, {"referenceID": 19, "context": "In this section, we perform experiments to evaluate the effectiveness and efficiency of EE encoding from the comparison of our algorithm MEMKC, diversified top-k clique solver EnumKOpt [12], diversified top-k CA solver k-CA [20], and the state-of-the-art partial MaxSAT solvers Openwbo [21], Dist [22], and CCLS [23].", "startOffset": 224, "endOffset": 228}, {"referenceID": 20, "context": "In this section, we perform experiments to evaluate the effectiveness and efficiency of EE encoding from the comparison of our algorithm MEMKC, diversified top-k clique solver EnumKOpt [12], diversified top-k CA solver k-CA [20], and the state-of-the-art partial MaxSAT solvers Openwbo [21], Dist [22], and CCLS [23].", "startOffset": 286, "endOffset": 290}, {"referenceID": 21, "context": "In this section, we perform experiments to evaluate the effectiveness and efficiency of EE encoding from the comparison of our algorithm MEMKC, diversified top-k clique solver EnumKOpt [12], diversified top-k CA solver k-CA [20], and the state-of-the-art partial MaxSAT solvers Openwbo [21], Dist [22], and CCLS [23].", "startOffset": 297, "endOffset": 301}, {"referenceID": 22, "context": "In this section, we perform experiments to evaluate the effectiveness and efficiency of EE encoding from the comparison of our algorithm MEMKC, diversified top-k clique solver EnumKOpt [12], diversified top-k CA solver k-CA [20], and the state-of-the-art partial MaxSAT solvers Openwbo [21], Dist [22], and CCLS [23].", "startOffset": 312, "endOffset": 316}, {"referenceID": 19, "context": "Diversified top-k CA solver k-CA implemented in C++ is an approximate solver by greedily calling the state-ofthe-art CA solver TCA [20].", "startOffset": 131, "endOffset": 135}, {"referenceID": 23, "context": "In the last experiment, we choose the well-known BHOSLIB benchmark, which is famous for its hardness [24].", "startOffset": 101, "endOffset": 105}], "year": 2017, "abstractText": "We introduce a diversified top-k partial MaxSAT problem, a combination of partial MaxSAT problem and enumeration problem. Given a partial MaxSAT formula F and a positive integer k, the diversified top-k partial MaxSAT is to find k maximal solutions for F such that the k maximal solutions satisfy the maximum number of soft clauses of F . This problem can be widely used in many applications including community detection, sensor place, motif discovery, and combinatorial testing. We propose an approach for solving the problem. The concrete idea of the approach is to design an encoding EE which reduces diversified top-k partial MaxSAT problem into partial MaxSAT problem, and then solve the resulting problem with state-of-art solvers. In addition, we present an algorithm MEMKC exactly solving the diversified top-k partial MaxSAT. Through several experiments we show that our approach can be successfully applied to the interesting problem.", "creator": "LaTeX with hyperref package"}}}