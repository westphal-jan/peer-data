{"id": "1012.2148", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "10-Dec-2010", "title": "Bisimulations for fuzzy transition systems", "abstract": "there has been a long history conjecture of using fuzzy language equivalence to compare the behavior of fuzzy systems, but the comparison at such this level is too increasingly coarse. recently, a finer behavioral measure, coarse bisimulation, has been formally introduced to fuzzy finite automata. however, the results obtained are applicable only efficiently to finite - state systems. in this subsequent paper, we consider bisimulation statistics for general fuzzy systems which may be necessarily infinite - dimensional state or infinite - event, by modeling them as regular fuzzy transition systems. to help understand semantics and check bisimulation, we characterize it in three ways by enumerating whole transitions, comparing onto individual transitions, and using a monotonic function. in addition, we address composition like operations, subsystems, quotients, and homomorphisms of fuzzy transition systems and discuss their many properties connected with bisimulation. the graphical results presented here are useful for comparing the exact behavior of general fuzzy systems. in particular, this makes it possible to relate just an infinite fuzzy system to a finite one, through which altogether is easier to analyze, with the same behavior.", "histories": [["v1", "Fri, 10 Dec 2010 00:24:42 GMT  (260kb,DS)", "http://arxiv.org/abs/1012.2148v1", "13 double column pages"]], "COMMENTS": "13 double column pages", "reviews": [], "SUBJECTS": "cs.AI", "authors": ["yongzhi cao", "guoqing chen", "etienne kerre"], "accepted": false, "id": "1012.2148"}, "pdf": {"name": "1012.2148.pdf", "metadata": {"source": "CRF", "title": "Bisimulations for Fuzzy Transition Systems", "authors": ["Yongzhi Cao", "Guoqing Chen", "Etienne Kerre"], "emails": ["caoyz@pku.edu.cn).", "chengq@sem.tsinghua.edu.cn).", "etienne.kerre@ugent.be)."], "sections": [{"heading": null, "text": "Index Terms\u2014Fuzzy automaton, fuzzy transition system, bisimulation, fuzzy language, homomorphism.\nI. INTRODUCTION\nTHE idea of fuzzy systems was originated by Zadeh in1965 [42]. One of the main research directions on fuzzy systems is to consider fuzzy systems as a generalization of nondeterministic automata or Petri nets and investigate them within the same conceptual framework as classical systems. As a natural generalization of nondeterministic automata, the mathematical formulation of fuzzy automata was first proposed by Wee in 1967 [38]. The basic idea in the formulation is that, unlike the classical case, a fuzzy automaton can switch from one state to another one to a certain (truth) degree, and thus it is capable of capturing the uncertainty appearing in states or state transitions of a system. In the literature up to now (see, for example, [1], [8], [12], [14], [19], [23], [28], [34], [39], [41]), a great variety of types of fuzzy automata has been proposed in different modeling situations and the notion of fuzzy automata has proved useful in many areas such as learning control and pattern recognition. In parallel, various fuzzy Petri nets have been formulated and extensively investigated (see [4]\u2013[6], [9], [18], [31] and the references therein).\nThis work was supported by the National Natural Science Foundation of China under Grants 70890080, 60873061, and 60973004 and by the National Basic Research Program of China (973 Program) under Grants 2007CB311003, 2009CB320701, and 2010CB328103.\nY. Cao is with the Institute of Software, School of Electronics Engineering and Computer Science, and the Key Laboratory of High Confidence Software Technologies, Peking University, Beijing 100871, China (e-mail: caoyz@pku.edu.cn).\nG. Chen is with the School of Economics and Management, Tsinghua University, Beijing 100084, China (e-mail: chengq@sem.tsinghua.edu.cn).\nE. Kerre is with the Department of Applied Mathematics and Computer Science, Ghent University, Krijgslaan 291 (S9), B-9000 Gent, Belgium (email: etienne.kerre@ugent.be).\nt\ns0 t0\ns1\ns2 s3\nt1 t2\nt3 t4\naj0:9 aj0:9 aj0:7\nbj0:8 bj0:8 cj0:8cj0:7\nS T\nFig. 1. Fuzzy language equivalent systems may not be bisimilar.\nWhen modeling a system by fuzzy automata (or fuzzy Petri nets), it is often possible to define multiple models of the same system. Given different fuzzy automaton models of a system, there is a need for some formal techniques that can be used to compare these models. A straightforward idea is to employ the concept of fuzzy language equivalence that stipulates that two fuzzy automata are equivalent if they accept the same strings of input symbols with the identical membership grade [14], [19], [24], [28]. Although this equivalence has been extensively used in both theory and application, it is sometimes considered to be too coarse. For example, the systems S and T in Fig. 1 are fuzzy language equivalent if we simply identify every state as being accepting, but their behavior is different: S can always choose between b and c after performing a, while T can only execute either b or c (but not both) after a. More seriously, fuzzy language equivalent systems can have different deadlocking behavior (inability to proceed).\nIn fact, the above deficiency of fuzzy language equivalence is not due to fuzziness, but to nondeterminism. For classical nondeterministic systems, this matter has been satisfactorily resolved by introducing the important notion of bisimulation [27], [29]. A bisimulation is a binary relation between discrete event systems like process algebras, Petri nets or automata models, associating systems which behave in the same way in the sense that one system simulates the other and viceversa. Intuitively, two systems are bisimilar if they match each other\u2019s moves. Bisimulation equivalence allows one to relate bisimilar systems and to reduce the state space of a system by combining bisimilar states to generate a quotient system with an equivalent behavior but with fewer states. In the past two decades, bisimulation has been considerably extended to\nar X\niv :1\n01 2.\n21 48\nv1 [\ncs .A\nI] 1\n0 D\nec 2\n01 0\nprobabilistic and stochastic systems (see, for example, [2], [3], [16], [22], [26] and references therein).\nHowever, to our knowledge, few efforts, except the work [3], [32], [36], have been made to consider the bisimulation for fuzzy automata, or more generally, fuzzy systems. Following the algebraic theory of classical automata, Petkovic\u0301 introduced the concept of congruence for fuzzy automata in [32]. It turns out that such a congruence is exactly a bisimulation. Based on this concept, an improved minimization algorithm for fuzzy automata has been developed there. Recently, Buchholz has put forward a general definition of bisimulation for weighted automata over a generic semiring which includes well-known automata models as specific cases [3]. A partition refinement algorithm using a matrix notation is provided to compute the largest bisimulation for a given weighted automaton and a definition of \u201caggregated\u201d automaton, corresponding to a quotient, is presented as well. By instantiating the semiring in the framework of [3] to the closed unit interval [0, 1] with binary operations max and min, Sun et al. investigated the forward and backward bisimulations for fuzzy automata [36].\nIt is worth noting that the methods in [3], [32], [36] are applicable only to finite (finite-state and finite-event) fuzzy systems. It is clearly a limitation, because many fuzzy systems are (or should be seen as) infinite-state or infinite-event. For example, the dynamic fuzzy systems studied in [21], fuzzy discrete event systems modeled by max-product automata [25], and fuzzy stochastic automata [34] involve an infinite number of states and fuzzy automata for computing with all words in [8] require an infinite number of events. This observation motivates us to introduce and explore the concept of bisimulation for general fuzzy systems which may be infinitestate or infinite-event. To this end, we model fuzzy systems as fuzzy transition systems (FTSs) and define bisimulation between them in this paper. An FTS is characterized by a (possibly infinite) set of states, including the initial state, a (possibly infinite) set of labels, and a set of fuzzy transitions. Although many formal description tools for fuzzy systems such as fuzzy Petri nets are not FTSs, it is possible to translate a system\u2019s description in one of these formalisms into the FTS representing its behavior.\nFTSs are a natural generalization of the widely used formal models\u2014labeled transition systems\u2014in computer science [20]. On the other hand, they are an extension of fuzzy automata by allowing state set and label set to be infinite. FTSs and some probabilistic transition systems [11], [16], [26] seem to be similar, but they have two major differences: One is that when a probabilistic transition system is put into operation, there is no vagueness in the current state, next state, and the extent to which they will be activated. At any time (upon each label), one and exactly one state will be activated with an implied membership value of 1. The other difference is that in a probabilistic transition system, the sum of the weights for some transitions (from the current state) should be one, whilst there is no such requirement for an FTS.\nWe define the notion of bisimulation between FTSs based on a general binary relation, which is not necessarily an equivalence relation as required in [3], [32], [36] and makes it more convenient for bisimulation checking. Due to the relaxation\nof relation, we have to consider the so-called correlational pairs in place of equivalence classes in [3], [32], [36]. As a result, the bisimulation equates two FTSs whenever they perform the same action with the same maximum possibility in each correlational pair. We show that the union of all bisimulations between two TFSs gives rise to the largest bisimulation, called bisimilarity. Bisimulation and bisimilarity are also characterized in two other ways: One is to compare individual transitions which does not involve correlational pairs; the other is based upon a suitable monotonic function which has the bisimilarity as the largest fixed point. These are just different formal presentations of the same thing, but they may help in understanding and checking bisimulation and bisimilarity. Further, we address composition operations, subsystems, quotients, and homomorphisms of FTSs and discuss their properties connected with bisimulation. The results presented in the paper are helpful in comparing the behavior of FTSs. In particular, this makes it possible to relate an infinite fuzzy system to a finite one, which is easier to analyze, with the same behavior.\nThe remainder of this paper is structured as follows. We briefly review some basics of fuzzy sets and introduce the concept of FTSs in Section II. Section III is devoted to the definition of bisimulation using correlational pairs and the existence of bisimilarity. We specialize the notion of bisimulation for equivalence relations and for fuzzy finite automata in this section. In Section IV, we characterize bisimulation and bisimilarity by comparing individual transitions and explore more properties of bisimulation. In Section V, by defining a monotonic function we give a necessary and sufficient condition for a relation to be a bisimulation and show that bisimilarity is exactly the largest fixed point of the function. The notions of subsystems, quotients, and homomorphisms of FTSs and their properties connected with bisimulation are addressed in Section VI. The paper is concluded in Section VII with a brief discussion on the future research."}, {"heading": "II. FUZZY TRANSITION SYSTEMS", "text": "In this section, after briefly recalling a few basic facts on fuzzy set theory, we present fuzzy transition systems (FTSs) as a basic model for some fuzzy systems.\nLet X be a universal set. A fuzzy set A, or rather a fuzzy subset A of X , is defined by a function assigning to each element x of X a value A(x) in [0, 1]. Such a function is called a membership function, which is a generalization of the characteristic function associated to a crisp subset of X; the value A(x) characterizes the degree of membership of x in A. The support of a fuzzy set A is a crisp set defined as supp(A) = {x \u2208 X : A(x) > 0}. Whenever supp(A) is a finite set, say supp(A) = {x1, x2, . . . , xn}, we may write A in Zadeh\u2019s notation as\nA = A(x1) x1 + A(x2) x2 + \u00b7 \u00b7 \u00b7+ A(xn) xn .\nA fuzzy subset of X can be used to formally represent a possibility distribution on X . We denote by F(X) the set of all fuzzy subsets of X .\nFor any A,B \u2208 F(X), we say that A is contained in B (or B contains A), denoted by A \u2286 B, if A(x) \u2264 B(x) for all x \u2208 X . We say that A = B if and only if A \u2286 B and B \u2286 A.\nFor any family \u03bbi, i \u2208 I , of elements of [0, 1], we write \u2228i\u2208I\u03bbi or \u2228{\u03bbi : i \u2208 I} for the supremum of {\u03bbi : i \u2208 I}, and \u2227i\u2208I\u03bbi or \u2227{\u03bbi : i \u2208 I} for the infimum. In particular, if I is finite, then \u2228i\u2208I\u03bbi and \u2227i\u2208I\u03bbi are the greatest element and the least element of {\u03bbi : i \u2208 I}, respectively. For any \u00b5 \u2208 F(X) and U \u2286 X , the notation \u00b5(U) stands for \u2228x\u2208U\u00b5(x). Given A,B \u2208 F(X), the union of A and B, denoted A \u222a B, is defined by the membership function\n(A \u222aB)(x) = A(x) \u2228B(x)\nfor all x \u2208 X; the intersection of A and B, denoted A \u2229 B, is given by the membership function\n(A \u2229B)(x) = A(x) \u2227B(x)\nfor all x \u2208 X . Recall that a labeled transition system consists of a set S of states, a set A of labels, a transition relation \u2212\u2192\u2286 S \u00d7 A\u00d7S, and an initial state s0 \u2208 S (cf. [20]). Such a transition relation is equivalent to a multi-valued mapping from S \u00d7 A to S, i.e., a mapping from S \u00d7 A to P(S), the power set of S. If the label set is a singleton, the system is essentially unlabeled, and a simpler definition that omits the labels is possible. Fuzzy transition systems are a natural generalization of labeled transition systems and can be thought of as weighted graphs, possibly with an infinite number of vertices or edges.\nDefinition 1: A fuzzy transition system (FTS) is a four-tuple S = (S,A, \u03b4, s0), where\n(1) S is a finite or infinite set of states, (2) A is a finite or infinite set of labels, (3) \u03b4, the fuzzy transition function, is a mapping from S\u00d7A\nto F(S), or equivalently a fuzzy multi-valued mapping from S \u00d7A to S, and\n(4) s0, a member of S, is the initial state. An FTS is said to be finite if both S and A are finite,\nand infinite otherwise. Labels can represent different things depending on the language of interest. Typical uses of labels include representing input expected, conditions that must be true to trigger the transition, or actions performed during the transition. Intuitively, if the FTS is in state s \u2208 S and the label a \u2208 A occurs, then it may go into any one of the states s\u2032 \u2208 S, and the possibility degree of going into s\u2032 is \u03b4(s, a)(s\u2032). In other words, \u03b4(s, a)(s\u2032) > 0 means that there exists a transition from s to s\u2032 with label a and possibility degree \u03b4(s, a)(s\u2032). For clarity, we sometimes use the more suggestive notations like s\na\u2212\u2192 \u00b5 and s a|\u03b3\u2212\u2212\u2192 s\u2032 to denote \u03b4(s, a) = \u00b5 and \u03b4(s, a)(s\u2032) = \u03b3, respectively. In the obvious way, we can identify any fuzzy transition function \u03b4 : S \u00d7 A \u2212\u2192 F(S) with a fuzzy relation \u2212\u2192\u03b4: S \u00d7A\u00d7 S \u2212\u2192 [0, 1].\nFor example, Fig. 2 depicts a finite FTS S = ({s0, s1, s2, s3, s4}, {a, b, c}, \u03b4S , s0) and an infinite FTS T = ({t0, t1, t2, . . .}, {a}, \u03b4T , t0), where an arc, say from si to sj with label a|x in S , means that \u03b4S(si, a)(sj) = x.\nClearly, a labeled transition system is a special FTS that has 0 and 1 as the possibility degrees. We remark that there\nare many probabilistic versions of labeled transition systems. Among others, discrete probabilistic transition systems introduced by Larsen and Skou [22] are the most relevant to FTSs above; they can be viewed as a special FTS that has probability distributions as the codomain of fuzzy transition function. Nevertheless, the semantics of probabilistic transition systems and FTSs are rather different: The weight of a transition in a probabilistic context reflects a frequency of occurrence, while the weight in a fuzzy context describes the membership grade (namely, uncertainty) of a target state. It is well known that probability theory is not capable of capturing uncertainty in all its manifestations.\nFor each s \u2208 S, we associate to s a fuzzy language LSs , which captures the behavior of S starting at s. Formally, LSs is defined as a fuzzy subset of A\u2217, the set of all finite strings over A (including the empty string ), and given by\nLSs (w) = \u2228s\u2032\u2208S\u03b4(s, w)(s\u2032),\nwhere \u03b4(s, w)(s\u2032) is inductively defined as follows:\n\u03b4(s, )(s\u2032) = { 1, if s\u2032 = s 0, otherwise\n\u03b4(s, ua)(s\u2032) = \u2228s\u2032\u2032\u2208S [\u03b4(s, u)(s\u2032\u2032) \u2227 \u03b4(s\u2032\u2032, a)(s\u2032)].\nIn particular, the fuzzy language LSs0 associated to the initial state s0 of S is also called the fuzzy language generated by S. Let Si = (Si, A, \u03b4i, s0i) be an FTS and si \u2208 Si, where i = 1, 2. The states s1 and s2 are said to be fuzzy language equivalent if LS1s1 = L S2 s2 . For instance, if S and T are the FTSs in Fig. 2, we can get by a routine computation that\nLSs0 = 1 + 0.9\na +\n0.8 ab + 0.7 ac ,\nLTt0 = 1 + 1\na ,\nLSs1 = L S s2 .\nFor labeled transition systems, one can build an overall system by building its component transition systems first and then composing them by some operators. Therefore, compositional operators can serve the need of modular specification and verification of systems. As an example, let us focus\non a parallel composition operator on FTSs, in which the synchronization occurs on a set of synchronizing labels; more operators can be found in [3], [40].\nGiven two FTSs S1 = (S1, A1, \u03b41, s01) and S2 = (S2, A2, \u03b42, s02), the labels that are intended to synchronize are listed in the set A1 \u2229 A2 and the rest of the labels can be performed independently. More concretely, the parallel composition of S1 and S2 is a four-tuple\nS1|S2 = (S1 \u00d7 S2, A1 \u222aA2, \u03b4, (s01, s02)),\nwhere for all (s1, s2), (s\u20321, s \u2032 2) \u2208 S1 \u00d7 S2 and a \u2208 A1 \u222aA2, \u03b4((s1, s2), a)((s \u2032 1, s \u2032 2)) = \u03b41(s1, a)(s \u2032 1) \u2227 \u03b42(s2, a)(s\u20322), if a \u2208 A1 \u2229A2 \u03b41(s1, a)(s \u2032 1), if a \u2208 A1\\A2 and s\u20322 = s2 \u03b42(s2, a)(s \u2032 2), if a \u2208 A2\\A1 and s\u20321 = s1\n0, otherwise.\nClearly, this constructs an FTS S1|S2, which represents that the systems S1 and S2 are running concurrently. The synchronization constraint A1 \u2229 A2 forces some labels to be carried out by both of the systems at the same time and allows all the possible interleavings of the other labels of the two systems. For example, Fig. 3 shows a parallel composition of S in Fig. 2 and the FTS S \u2032 given here.\nIn the literature, there are a large number of formal description tools for dynamic fuzzy systems such as various fuzzy automata [1], [8], [12], [28], [34], [41], fuzzy Petri nets [6], [9], [31], fuzzy control systems [10], [15], [30], fuzzy discrete event systems [7], [13], [25], [33], neuro-fuzzy systems [17], and so on. In general, they are not FTSs, but it is possible to translate a system\u2019s description in one of these formalisms into the FTS representing its behavior. Among others, it is perhaps the simplest for fuzzy automata since they themselves are a special class of FTSs. For comparison, we are ready to review a kind of fuzzy automata, which has been known as max-min automata in some mathematical literature [19], [35].\nA fuzzy automaton is nothing other than a finite FTS with a fuzzy final state set. More precisely, it is formalized as follows.\nDefinition 2: A fuzzy automaton is a five-tuple M = (Q,\u03a3, \u03b4, q0, F ), where:\n(1) Q is a finite set of states. (2) \u03a3 is a finite input alphabet. (3) \u03b4, the fuzzy transition function, is a function from Q\u00d7\u03a3\nto F(Q) that takes a state in Q and an input symbol in \u03a3 as arguments and returns a fuzzy subset of Q.\n(4) q0, a member of Q, is the initial state. (5) F is a fuzzy subset of Q, called the fuzzy set of final\nstates and for each q \u2208 Q, F (q) indicates intuitively the degree to which q is a final state.\nDenote by \u03a3\u2217 the set of all finite strings constructed by concatenation of elements of \u03a3, including the empty string . The fuzzy language LM accepted by M is defined as a fuzzy subset of \u03a3\u2217 and given by\nLM (w) = \u2228q\u2208Q[\u03b4(q0, w)(q) \u2227 F (q)].\nClearly, for any fuzzy automaton M = (Q,\u03a3, \u03b4, q0, F ), we have that LM \u2286 LSMq0 , where SM = (Q,\u03a3, \u03b4, q0)."}, {"heading": "III. BISIMULATION", "text": "In the literature [3], [32], [36], the notion of bisimulation has been extended to fuzzy finite automata, in which it is an equivalence relation on the state set of the underlying automaton. In this section, we introduce a general definition of bisimulation for FTSs which is not necessarily an equivalence relation and can be applied to compare different classes of models.\nTo state the key definition, we need the following notion. Let Si = (Si, A, \u03b4i, s0i), i = 1, 2, be an FTS. For a binary relation R \u2286 S1\u00d7S2, we use \u03c01 and \u03c02 for the canonical projections of R on S1 and S2, respectively. More concretely, \u03c01(R) = {s \u2208 S1 : (s, t) \u2208 R for some t \u2208 S2} and \u03c02(R) = {t \u2208 S2 : (s, t) \u2208 R for some s \u2208 S1}. A pair (U, V ) with U \u2286 S1 and V \u2286 S2 is called R-correlational if \u03c0\u221211 (U) = \u03c0 \u22121 2 (V ), where \u03c0\u221211 (U) = {(s, t) \u2208 R : s \u2208 U} and \u03c0 \u22121 2 (V ) = {(s, t) \u2208 R : t \u2208 V }. If S1 = S2 and R is an equivalence relation, it is easy to check that (U, V ) is R-correlational if and only if U = V =\u22c3 i Ci for some equivalence classes Ci \u2208 S1/R, where we are writing S1/R for the set of all equivalence classes induced by R.\nDefinition 3: Let S1 = (S1, A, \u03b41, s01) and S2 = (S2, A, \u03b42, s02) be two FTSs. A relation R \u2286 S1\u00d7S2 is called a bisimulation between S1 and S2 if for all (s, t) \u2208 R and a \u2208 A,\n(1) s a\u2212\u2192 \u00b5 in S1 implies t a\u2212\u2192 \u03b7 in S2 for some \u03b7 \u2208 F(S2)\nsuch that \u00b5(U) = \u03b7(V ) for every R-correlational pair (U, V ); (2) t a\u2212\u2192 \u03b7 in S2 implies s a\u2212\u2192 \u00b5 in S1 for some \u00b5 \u2208 F(S1)\nsuch that \u00b5(U) = \u03b7(V ) for every R-correlational pair (U, V ).\nTwo states s \u2208 S1 and t \u2208 S2 are bisimilar, denoted s \u223c t, if there exists a bisimulation R between S1 and S2 such that\n(s, t) \u2208 R. Two FTSs S1 and S2 are bisimilar, denoted S1 \u223c S2, if their initial states s01 and s02 are bisimilar.\nIntuitively, if two FTSs are bisimilar, then it is possible for each to simulate, or \u201ctrack\u201d, the other\u2019s behavior. More specifically, for a relation to be a bisimulation, related states must be able to \u201cmatch\u201d transitions of each other by moving to related states with the same possibility degree. Bisimulation has a number of pleasing properties. For example, bisimilar FTSs generate the same fuzzy language, which will be proven later, and moreover, they must have the same \u201cdeadlock potential\u201d.\nExample 1: Fig. 4 describes two bisimilar FTSs: S given in Fig. 2 and S/ \u223c defined here, in which we use dashed arrows to relate the states in a relation R = {(s0, [s0]), (s1, [s1]), (s2, [s1]), (s3, [s3]), (s4, [s3])}. By definition, it is easy to check that R is a bisimulation. Therefore, S and S/ \u223c are bisimilar. Two other bisimilar FTSs involving infinite states are shown in Fig. 5, where R = {(s0, t0), (s, t2), (s, t3), . . .} gives rise to a bisimulation between the FTS S defined here and the FTS T in Fig. 2. The importance of this simple example lies in that an infinite FTS may be related to a finite one with the same behavior.\nLike the notion of bisimulation in concurrency theory, bisimulation here is preserved by various operations on relations. Let R \u2286 S \u00d7 T and Q \u2286 T \u00d7 U . Recall that the inverse R\u22121 of R and the composition R \u25e6Q of R and Q are defined by\nR\u22121 = {(t, s) : (s, t) \u2208 R} and R \u25e6Q = {(s, u) : \u2203t \u2208 T such that (s, t) \u2208 R, (t, u) \u2208 Q},\nrespectively. We can now state the following proposition. Proposition 1: Let S, S1, S2, and S3 be FTSs.\n(1) The diagonal \u2206S = {(s, s) : s \u2208 S} is a bisimulation on S.\n(2) If R is a bisimulation between S1 and S2, then R\u22121 is a bisimulation between S2 and S1. (3) If R1 and R2 are bisimulations between S1 and S2, then so is R1 \u222aR2. (4) If R is a bisimulation between S1 and S2, and Q is a bisimulation between S2 and S3, then R \u25e6 Q is a bisimulation between S1 and S3.\nProof: See Appendix A.\nLet us point out that the intersection of two bisimulations is not necessarily a bisimulation. A simple counterexample is as follows: Let S = (S = {s0, s, t}, A = {a}, \u03b4, s0) be an FTS, where \u03b4(s0, a)(s) = \u03b4(s0, a)(t) = 0.8 and \u03b4 takes values 0 for all other cases. Consider R1 = \u2206S = {(s0, s0), (s, s), (t, t)} and R2 = {(s0, s0), (s, t), (t, s)}. It is easy to check that both R1 and R2 are bisimulations on S, but their intersection R1\u2229 R2 = {(s0, s0)} fails to be a bisimulation on S.\nA bisimulation between an FTS S and itself is called a bisimulation on S. A bisimulation equivalence is a bisimulation that is also an equivalence relation. As a result, a bisimulation between different FTSs must not be a bisimulation equivalence. Nevertheless, it follows from Proposition 1 that the relation \u223c on the set of all FTSs is an equivalence relation, that is, S \u223c S, S1 \u223c S2 implies S2 \u223c S1, and S1 \u223c S2 and S2 \u223c S3 imply S1 \u223c S3.\nFor bisimulation equivalence, we have the following characterization.\nProposition 2: Let S = (S,A, \u03b4, s0) be an FTS. If R is an equivalence relation on S, then the following are equivalent:\n(1) R is a bisimulation on S. (2) For any (s, t) \u2208 R, \u03b4(s, a)(C) = \u03b4(t, a)(C) holds for\nall a \u2208 A and C \u2208 S/R.\nProof: See Appendix A.\nRecall that a partially ordered set (L,\u2264) is called a complete lattice if every subset of L has a supremum and an infimum in (L,\u2264). The assertion (3) in Proposition 1 shows us a lattice structure on the set of all bisimulations between two FTSs.\nCorollary 1: Let S1 and S2 be two FTSs. Then the set of all bisimulations between S1 and S2 is a complete lattice, with\nthe supremum and infimum given by\u2228 i Ri = \u22c3 i\nRi,\u2227 i Ri = \u22c3 {R : R is a bisimulation and R \u2286 \u22c2 i Ri}.\nIn particular, the union of all bisimulations between S1 and S2 gives rise to the largest bisimulation, which is called a bisimilarity and is denoted by \u223c. Furthermore, the largest bisimulation on one and the same FTS is an equivalence relation, as shown below.\nCorollary 2: Let \u223c= \u22c3 {R : R is a bisimulation on S}. Then \u223c is an equivalence relation on S. Proof: The reflexivity, symmetry, and transitivity of \u223c\nfollow directly from the assertions (1), (2), and (4) in Proposition 1, respectively.\nThe following observation shows that the operation of parallel composition is commutative.\nProposition 3: Let S1 = (S1, A1, \u03b41, s01) and S2 = (S2, A2, \u03b42, s02) be two FTSs. Then S1|S2 \u223c S2|S1.\nProof: It is straightforward by verifying that R = {((s1, s2), (s2, s1)) : (s1, s2) \u2208 S1 \u00d7 S2} is a bisimulation between S1|S2 and S2|S1. We thus omit the details.\nLet us end this section with a special bisimulation for fuzzy automata (cf. [3], [32], [36]).\nDefinition 4: Let Mi = (Qi,\u03a3, \u03b4i, q0i, Fi), i = 1, 2, be a fuzzy automaton. A relation R \u2286 Q1 \u00d7 Q2 is a bisimulation between M1 and M2 if\n(1) R is a bisimulation between (Q1,\u03a3, \u03b41, q01) and (Q2,\u03a3, \u03b42, q02) in the sense of Definition 3;\n(2) F1(q1) = F2(q2) for all (q1, q2) \u2208 R. Two fuzzy automata M1 and M2 are bisimilar if their initial states are related by a bisimulation."}, {"heading": "IV. AN ALTERNATIVE DEFINITION OF BISIMILARITY", "text": "This section is devoted to an equivalent definition of bisimilarity. Based on this definition, we can explore more properties of bisimulation. In particular, as an example, we prove that bisimilarity can be preserved by parallel composition, which means that the behavior comparison of FTSs can be carried out compositionally.\nLet us begin with the following observation, which provides a sufficient condition for a relation to be a bisimulation.\nProposition 4: Let S1 = (S1, A, \u03b41, s01) and S2 = (S2, A, \u03b42, s02) be two FTSs. A relation R \u2286 S1 \u00d7 S2 is a bisimulation between S1 and S2 if for all (s, t) \u2208 R and a \u2208 A,\n(1) if s a|\u03b3\u2212\u2212\u2192 s\u2032 for some s\u2032 \u2208 S1, then for any > 0, there\nexists t\u2032 \u2208 S2 satisfying t a|\u03b3\u2032\u2212\u2212\u2192 t\u2032, \u03b3\u2032 > \u03b3 \u2212 , and\n(s\u2032, t\u2032) \u2208 R; (2) if t\na|\u03b3\u2212\u2212\u2192 t\u2032 for some t\u2032 \u2208 S2, then for any > 0, there exists s\u2032 \u2208 S1 satisfying s\na|\u03b3\u2032\u2212\u2212\u2192 s\u2032, \u03b3\u2032 > \u03b3 \u2212 , and (s\u2032, t\u2032) \u2208 R.\nProof: See Appendix A. For the necessity of the condition in Proposition 4, we have\nthe following remark.\nRemark 1: In general, not all bisimulations satisfy the conditions (1) and (2) in Proposition 4. For example, consider FTSs S and T shown in Fig. 6. Taking R = {(s0, t0), (s\u2032, t\u2032\u2032), (s\u2032\u2032, t\u2032), (s\u2032\u2032, t\u2032\u2032)}, it is not difficult to check that R is a bisimulation by Definition 3. However, s0\na|0.8\u2212\u2212\u2212\u2192 s\u2032 in S cannot be matched by a transition in T that satisfies the condition (1) in Proposition 4.\nNevertheless, the largest bisimulation \u223c does satisfy the conditions (1) and (2) in Proposition 4, as shown below.\nProposition 5: Let S1 = (S1, A, \u03b41, s01) and S2 = (S2, A, \u03b42, s02) be two FTSs. Then for every (s, t) \u2208\u223c and a \u2208 A,\n(1) if s a|\u03b3\u2212\u2212\u2192 s\u2032 for some s\u2032 \u2208 S1, then for any > 0, there\nexists t\u2032 \u2208 S2 satisfying t a|\u03b3\u2032\u2212\u2212\u2192 t\u2032, \u03b3\u2032 > \u03b3 \u2212 , and\n(s\u2032, t\u2032) \u2208\u223c; (2) if t\na|\u03b3\u2212\u2212\u2192 t\u2032 for some t\u2032 \u2208 S2, then for any > 0, there exists s\u2032 \u2208 S1 satisfying s\na|\u03b3\u2032\u2212\u2212\u2192 s\u2032, \u03b3\u2032 > \u03b3 \u2212 , and (s\u2032, t\u2032) \u2208\u223c.\nProof: See Appendix A. As a direct corollary of Propositions 4 and 5, we see that the\nfollowing definition of bisimilarity is equivalent to the original one introduced in Definition 3.\nDefinition 5: Let S1 = (S1, A, \u03b41, s01) and S2 = (S2, A, \u03b42, s02) be two FTSs. Two states s1 \u2208 S1 and s2 \u2208 S2 are bisimilar if there exists R \u2286 S1\u00d7S2 such that (s1, s2) \u2208 R, and moreover, for every (s, t) \u2208 R and a \u2208 A,\n(1) if s a|\u03b3\u2212\u2212\u2192 s\u2032 for some s\u2032 \u2208 S1, then for any > 0, there\nexists t\u2032 \u2208 S2 satisfying t a|\u03b3\u2032\u2212\u2212\u2192 t\u2032, \u03b3\u2032 > \u03b3 \u2212 , and\n(s\u2032, t\u2032) \u2208 R; (2) if t\na|\u03b3\u2212\u2212\u2192 t\u2032 for some t\u2032 \u2208 S2, then for any > 0, there exists s\u2032 \u2208 S1 satisfying s\na|\u03b3\u2032\u2212\u2212\u2192 s\u2032, \u03b3\u2032 > \u03b3 \u2212 , and (s\u2032, t\u2032) \u2208 R.\nIn contrast with Definition 3, the above definition does not need to consider numerous R-correlational pairs and is more convenient to determine bisimilar states. As an example, we now prove two properties of bisimilarity by using the new definition.\nLet us first show that bisimilar states are fuzzy language equivalent, as promised earlier.\nProposition 6: Let S1 = (S1, A, \u03b41, s01) and S2 = (S2, A, \u03b42, s02) be two FTSs. For any s1 \u2208 S1 and s2 \u2208 S2, if s1 \u223c s2, then LS1s1 = L S2 s2 .\nProof: See Appendix A. It follows immediately from the above proposition that\nbisimilar FTSs generate the same fuzzy language, and furthermore, bisimilar fuzzy automata accept the same fuzzy language. As mentioned in Introduction, we point out that the converse of Proposition 6 is not true in general, even for crisp transition systems, which is well known in concurrency theory community. For the convenience of the reader, let us record a counterexample: Consider the FTSs S and T in Fig. 1. We see by definition that\nLSs0 = L T t0 =\n1\n+\n0.9\na +\n0.8 ab + 0.7 ac .\nHowever, it is obvious that s0 6\u223c t0 since there is no any bisimulation containing (s0, t0). Clearly, if the FTSs under consideration are deterministic in the sense that the support of each \u03b4(s, a) has at most one element, then the converse of Proposition 6 actually holds.\nThe following theorem shows that bisimilarity is preserved by the parallel composition operator defined in Section II, i.e., it is a congruence according to this operation.\nTheorem 1: Let Si = (Si, Ai, \u03b4Si , s0i) and Ti = (Ti, Ai, \u03b4Ti , t0i), where i = 1, 2. If S1 \u223c T1 and S2 \u223c T2, then S1|S2 \u223c T1|T2.\nProof: See Appendix A. We end this section with a discussion on Definition 5. One\nmay have noted that introducing into Definition 5 is not elegant. However, without it makes really different, as we will see below.\nDefinition 6: Let S1 = (S1, A, \u03b41, s01) and S2 = (S2, A, \u03b42, s02) be two FTSs. A relation R \u2286 S1\u00d7S2 is called a strong bisimulation between S1 and S2 if for all (s, t) \u2208 R, the following conditions hold:\n(1) if s a|\u03b3\u2212\u2212\u2192 s\u2032, then there is t\u2032 \u2208 S2 such that t a|\u03b3\u2032\u2212\u2212\u2192 t\u2032 with \u03b3\u2032 \u2265 \u03b3 and (s\u2032, t\u2032) \u2208 R; (2) if t a|\u03b3\u2212\u2212\u2192 t\u2032, then there is s\u2032 \u2208 S1 such that s\na|\u03b3\u2032\u2212\u2212\u2192 s\u2032 with \u03b3\u2032 \u2265 \u03b3 and (s\u2032, t\u2032) \u2208 R.\nTwo states s \u2208 S1 and t \u2208 S2 are said to be strongly bisimilar, denoted s ' t, if there exists some strong bisimulation R with (s, t) \u2208 R.\nBy definition, every strong bisimulation is a bisimulation in the sense of Definition 3 or, equivalently, Definition 5. The converse, however, does not hold. The FTSs in Fig. 5 serve as a counterexample. The relation R = {(s0, t0), (s, t2), (s, t3), . . .} is a bisimulation, but it is not a strong bisimulation; in particular, s0 \u223c t0, but s0 6' t0. Obviously, this non-coincidence of bisimulation and strong bisimulation arises from the infinite branches of a transition. In light of this, we can provide a sufficient condition for a bisimulation to be strong. To this end, let us introduce a notion.\nAn FTS S = (S,A, \u03b4, s0) is called image finite if for any s \u2208 S and a \u2208 A, the cardinality of {s\u2032 \u2208 S : \u03b4(s, a)(s\u2032) > 0} is finite. In other words, an FTS is image finite if every state has only finitely many outgoing transitions labeled by the same label. In particular, if the state set of an FTS is finite, then the FTS must be image finite. The following result shows that the notions of bisimulation and strong bisimulation are equivalent for image finite FTSs.\nProposition 7: Let S1 = (S1, A, \u03b41, s01) and S2 = (S2, A, \u03b42, s02) be two image finite FTSs. Then every bisimulation R \u2286 S1 \u00d7 S2 is a strong bisimulation.\nProof: It follows directly from the definition of image finiteness.\nThe above proposition, together with Definition 5, gives an easy way to verify bisimulation for image finite FTSs. In particular, it is applicable to fuzzy finite automata.\nCorollary 3: Let S1 = (S1, A, \u03b41, s01) and S2 = (S2, A, \u03b42, s02) be two image finite FTSs. Then two states s1 \u2208 S1 and s2 \u2208 S2 are bisimilar if and only if there exists R \u2286 S1 \u00d7 S2 such that (s1, s2) \u2208 R, and moreover, for all (s, t) \u2208 R and a \u2208 A,\n(1) if s a|\u03b3\u2212\u2212\u2192 s\u2032 for some s\u2032 \u2208 S1, then there exists t\u2032 \u2208 S2\nsatisfying t a|\u03b3\u2032\u2212\u2212\u2192 t\u2032, \u03b3\u2032 \u2265 \u03b3, and (s\u2032, t\u2032) \u2208 R;\n(2) if t a|\u03b3\u2212\u2212\u2192 t\u2032 for some t\u2032 \u2208 S2, then there exists s\u2032 \u2208 S1\nsatisfying s a|\u03b3\u2032\u2212\u2212\u2192 s\u2032, \u03b3\u2032 \u2265 \u03b3, and (s\u2032, t\u2032) \u2208 R."}, {"heading": "V. FIXED POINT CHARACTERIZATION", "text": "In this section, we describe the bisimilarity \u223c as a fixed\npoint to a suitable monotonic function. To this end, let us recall some notions and Tarski\u2019s fixed point theorem for subsequent use.\nLet (P, ) be a partially ordered set. A function f : P \u2212\u2192 P is said to be monotonic if for all x1, x2 \u2208 P , x1 x2 implies that f(x1) f(x2). An element x \u2208 P is called a fixed point of f if x = f(x).\nThe following important theorem is due to Tarski [37]. Theorem 2 (Tarski): Let (P, ) be a complete lattice and f : P \u2212\u2192 P a monotonic function. Then f has a largest fixed point fmax and a least fixed point fmin given by:\nfmax = \u2228 {x \u2208 P : x f(x)},\nfmin = \u2227 {x \u2208 P : f(x) x}.\nLet S1 = (S1, A, \u03b41, s01) and S2 = (S2, A, \u03b42, s02) be two FTSs. We first note that the set P(S1\u00d7S2) of binary relations between S1 and S2 ordered by set inclusion is a complete lattice with the set-theoretical union and intersection as the supremum and infimum, respectively.\nNext we define a function \u0393 : P(S1\u00d7S2) \u2212\u2192 P(S1\u00d7S2) as follows: For any R \u2208 P(S1 \u00d7 S2), (s, t) \u2208 \u0393(R) if and only if for any a \u2208 A, the following hold:\n(1) if s a\u2212\u2192 \u00b5 in S1, then there is t a\u2212\u2192 \u03b7 in S2 for some \u03b7 \u2208\nF(S2) such that \u00b5(U) = \u03b7(V ) for every R-correlational pair (U, V ); (2) if t a\u2212\u2192 \u03b7 in S2, then there is s a\u2212\u2192 \u00b5 in S1 for\nsome \u00b5 \u2208 F(S1) such that \u00b5(U) = \u03b7(V ) for every R-correlational pair (U, V ).\nThe following proposition shows that the function \u0393 defined above is monotonic.\nProposition 8: For any R,R\u2032 \u2208 P(S1 \u00d7 S2), if R \u2286 R\u2032, then \u0393(R) \u2286 \u0393(R\u2032).\nProof: See Appendix A. As all the conditions for Tarski\u2019s theorem are satisfied, we can now characterize the bisimilarity \u223c as a fixed point of the function \u0393.\nTheorem 3: (1) A relation R \u2286 S1 \u00d7 S2 is a bisimulation if and only if\nR \u2286 \u0393(R). (2) The bisimilarity \u223c is the largest fixed point of \u0393.\nProof: See Appendix A. As an immediate consequence of the above theorem, we\nhave the following. Corollary 4: Define \u03930(S1\u00d7S2) = S1\u00d7S2 and \u0393n+1(S1\u00d7 S2) = \u0393(\u0393 n(S1 \u00d7 S2)). Then \u223c= \u22c2 n\u22650 \u0393\nn(S1 \u00d7 S2). In particular, if both S1 and S2 are finite, then \u223c is equal to \u0393n(S1 \u00d7 S2) for some n \u2265 0. Note how this gives us an algorithm to calculate \u223c for any given finite FTSs: To compute \u223c, simply evaluate the non-increasing sequence \u0393k(S1 \u00d7 S2) for k \u2265 0 until the sequence stabilizes. For some fuzzy finite automata, corresponding algorithms for computing \u223c on one and the same fuzzy finite automaton have been provided in [3], [32], [36]."}, {"heading": "VI. SUBSYSTEMS, QUOTIENTS, AND HOMOMORPHISMS", "text": "Recall that the composition operation of FTSs seeks to build up more complex systems by combining simpler components in prescribed ways. On the contrary, the identification of subsystems and quotients is an analytic process, in which structure is to be sought in a previously existing FTS. Both subsystems and quotients are a special relationship between FTSs. More generally, it is possible to relate two FTSs via a homomorphism. This section is devoted to the notions of subsystems, quotients, and homomorphisms and their properties involving bisimulations.\nLet us begin with the notion of subsystem. It describes the restrictive behavior of an FTS, in which a subset of states could be found which was closed under evolution. What that means is that states in the given subset would evolve only into each other and into no others.\nDefinition 7: Given two FTSs S1 = (S1, A, \u03b41, s01) and S2 = (S2, A, \u03b42, s02), we say that S1 is a subsystem of S2, written S1 \u2264 S2, if\n(1) S1 \u2286 S2; (2) \u03b42(s1, a)(s2) = 0 for any s1 \u2208 S1, a \u2208 A, and s2 \u2208\nS2\\S1; (3) \u03b41 = \u03b42|S1\u00d7A.\nIn the above definition, the notation \u03d5|X\u2032 means that we are restricting the mapping \u03d5 defined on X to the smaller domain X \u2032.\nSubsystems can be characterized in terms of bisimulations as follows.\nProposition 9: Let Si = (Si, A, \u03b4i, s0i), i = 1, 2, be an FTS. Then S1 \u2264 S2 if and only if the diagonal \u2206S1 of S1 is a bisimulation between S1 and S2.\nProof: See Appendix A. The notion of homomorphism is defined as follows. Definition 8: Let S1 = (S1, A, \u03b41, s01) and S2 = (S2, A, \u03b42, s02) be two FTSs. A mapping f : S1 \u2212\u2192 S2 is called a homomorphism from S1 to S2 if the following hold:\n(1) f(s01) = s02. (2) \u03b42(f(s), a)(t) = \u2228{\u03b41(s, a)(t\u2032) : t\u2032 \u2208 S1, f(t\u2032) = t} for\nany s \u2208 S1, a \u2208 A, and t \u2208 S2.\nThe homomorphism image of S1 under a homomorphism f , denoted f(S1), is defined as (f(S1), A, \u03b42|f(S1)\u00d7A, s02); it turns out that f(S1) is an FTS and moreover, f(S1) \u2264 S2. In particular, if S1 \u2264 S2, the embedding mapping i : S1 \u21aa\u2192 S2 gives rise to a homomorphism; the homomorphism image of S1 under i is identical to itself.\nThe kernel Ker(f) of a homomorphism f : S1 \u2212\u2192 S2 consists of all pairs of states in S1 that have the same image under f , namely,\nKer(f) = {(s, s\u2032) \u2208 S1 \u00d7 S1 : f(s) = f(s\u2032)}.\nThe binary relation Ker(f) is a bisimulation, as shown below. Proposition 10: If f : S1 \u2212\u2192 S2 is a homomorphism, then Ker(f) is a bisimulation on S1. Proof: See Appendix A.\nLike subsystems, homomorphisms can also be characterized in terms of bisimulations.\nTheorem 4: Let S1 = (S1, A, \u03b41, s01) and S2 = (S2, A, \u03b42, s02) be two FTSs and f : S1 \u2212\u2192 S2 a mapping. Then f is a homomorphism if and only if its graph G(f) = {(s, f(s)) : s \u2208 S1} is a bisimulation between S1 and S2 that contains (s01, s02).\nProof: See Appendix A. As an immediate consequence of the above theorem, we see that S1 \u223c S2 if there is a homomorphism relating them. Therefore, if the FTS S1 is complex in some sense (for example, it has a large number of states), by homomorphism one may relate it to a simpler FTS without losing essential information about its behavior.\nThe next proposition shows that both homomorphism and its inverse preserve bisimulations.\nProposition 11: Let S1 and S2 be two FTSs and f : S1 \u2212\u2192 S2 a homomorphism.\n(1) If R \u2286 S1 \u00d7 S1 is a bisimulation on S1, then f(R) = {(f(s), f(s\u2032)) : (s, s\u2032) \u2208 R} is a bisimulation on S2. (2) If R \u2286 S2\u00d7S2 is a bisimulation on S2, then f\u22121(R) = {(s, s\u2032) : (f(s), f(s\u2032)) \u2208 R} is a bisimulation on S1.\nProof: See Appendix A. We now turn to the quotients of FTSs. According to the\nidea of equivalence relations, two or more states of an FTS might be regarded as being interchangeable. By aggregating interchangeable states, we get the quotient of the FTS.\nDefinition 9: Let S = (S,A, \u03b4, s0) be an FTS and R an equivalence relation on S. The quotient of S with respect to R is a four-tuple S/R = (S/R,A, \u03b4\u0303, [s0]), where\n(1) S/R is the quotient set, defined by S/R = {[s] : s \u2208 S} with [s] = {s\u2032 \u2208 S : (s, s\u2032) \u2208 R}; (2) \u03b4\u0303 : S/R\u00d7A \u2212\u2192 F(S/R) is defined by\n\u03b4\u0303([s], a)([s\u2032]) = \u2228{\u03b4(s1, a)(s2) : s1 \u2208 [s], s2 \u2208 [s\u2032]}\nfor any [s], [s\u2032] \u2208 S/R and a \u2208 A. It is easy to check that the function \u03b4\u0303 is well-defined. As a result, S/R is an FTS. In Fig. 4, we have presented an FTS S and its quotient with respect to the largest bisimulation \u223c= {(s0, s0), (s1, s1), (s2, s2), (s3, s3), (s4, s4), (s1, s2), (s2, s1), (s3, s4), (s4, s3)} on S.\nProposition 12: Let S = (S,A, \u03b4, s0) be an FTS and R an equivalence relation on S. Then R is a bisimulation on S if and only if the quotient map \u03c0 : S \u2212\u2192 S/R gives a homomorphism from S to S/R.\nProof: See Appendix A. Noting that usually S/R has significantly fewer states than S , we may use the following result to reduce the number of states of S while retaining its behavior.\nCorollary 5: Let S = (S,A, \u03b4, s0) be an FTS and R a bisimulation equivalence on S. Then S \u223c S/R.\nProof: If R is a bisimulation equivalence on S, then we know by Proposition 12 that the quotient map \u03c0 is a homomorphism from S to S/R. It therefore follows from Theorem 4 that S and S/R are bisimilar.\nThe best choice of R in the above corollary is the bisimilarity \u223c, the largest bisimulation equivalence on S. Based on quotients, the following proposition gives a necessary and sufficient condition for R =\u223c.\nProposition 13: Let S be an FTS and R a bisimulation equivalence on S. Then R =\u223c if and only if the diagonal \u2206S/R of S/R is the unique bisimulation equivalence on S/R.\nProof: See Appendix A."}, {"heading": "VII. CONCLUSION", "text": "In this paper, we have introduced FTSs as a semantic model of some (possibly infinite) fuzzy systems. To compare two fuzzy systems at a finer level of \u201csemantical sameness\u201d, bisimulation defined for fuzzy finite automata [3], [32], [36] has been extended to general FTSs. Some new characterizations of bisimulation and bisimilarity have been provided. Following the standard study on algebraic structure, we have investigated the composition operations, subsystems, quotients, and homomorphisms of FTSs. Many properties of bisimulation have been examined as well.\nThere are some limits and directions in which the present work can be extended. In [6], we have promised to compare the expressiveness of the two formal models of computing with words established in [6], [8] by utilizing bisimulation. In the study, we have found that it is necessary to consider bisimulation for infinite fuzzy systems since the above formal models of computing with words may have infinite labels, and moreover, we have realized that the nondeterminism in fuzzy Petri nets for computing with words [6] is different from those in fuzzy automata. This observation leads to the present paper as preliminary work along this way, and a convincing comparison of the expressiveness remains yet to be done. In addition, the paper has been concerned mainly with the theoretical development of bisimulation for FTSs. It is desirable to apply the results here to compare some practical fuzzy systems. In particular, one can use some variants of bisimilarity such as similarity to abstract from certain details of the fuzzy systems of interest. Finally, as we have seen, it is possible to relate an infinite fuzzy system to a finite one with the same behavior. It is interesting to give sufficient conditions for this kind of relevance."}, {"heading": "APPENDIX A", "text": "Let us first prove Proposition 4 since it makes the proof of Proposition 1 more handy.\nProof of Proposition 4: We only check the first condition in the definition of bisimulation, since the second one is symmetric. Suppose that s a\u2212\u2192 \u00b5 in S1. By the condition of the proposition, there exists an \u03b7 \u2208 F(S2) such that t\na\u2212\u2192 \u03b7. It remains to verify that \u00b5(U) = \u03b7(V ) for every R-correlational pair (U, V ). Without loss of generality, we assume, by contradiction, that \u00b5(U) > \u03b7(V ) for some Rcorrelational pair (U, V ). For simplicity, we write \u03b1 and \u03b2 for \u00b5(U) and \u03b7(V ), respectively. That is, \u03b1 = sups\u2032\u2208U \u00b5(s\n\u2032) and \u03b2 = supt\u2032\u2208V \u03b7(t \u2032). Because \u03b1 > \u03b2 and \u03b1 = sups\u2032\u2208U \u00b5(s \u2032), there is s\u2032 \u2208 U such that s a|\u03b3\u2212\u2212\u2192 s\u2032 with \u03b3 > \u03b1\u2212 \u03b1\u2212\u03b24 . Taking = \u03b1\u2212\u03b24 , we get by the condition (1) that there exists t\n\u2032 \u2208 S2 satisfying t\na|\u03b3\u2032\u2212\u2212\u2192 t\u2032, \u03b3\u2032 > \u03b3 \u2212 , and (s\u2032, t\u2032) \u2208 R. Hence, we have that\n\u03b3\u2032 > \u03b3 \u2212\n> \u03b1\u2212 \u03b1\u2212 \u03b2 4 \u2212 \u03b1\u2212 \u03b2 4 = \u03b1+ \u03b2\n2 > \u03b2,\nnamely, \u03b3\u2032 > \u03b2. On the other hand, it follows from (s\u2032, t\u2032) \u2208 R that \u03b3\u2032 \u2264 supt\u2032\u2208V \u03b7(t\u2032) = \u03b2, a contradiction. As a result, we get that \u00b5(U) = \u03b7(V ) for every R-correlational pair (U, V ). Consequently, R is a bisimulation.\nTo prove Proposition 1, it is convenient to have the following lemma.\nLemma 1: If R \u2286 R\u2032 \u2286 S1\u00d7S2, then every R\u2032-correlational pair (U, V ) is also R-correlational.\nProof: Assume that (U, V ) is R\u2032-correlational. Then we get by definition that \u03c0\u2032\u221211 (U) = \u03c0 \u2032\u22121 2 (V ), where we are writing \u03c0\u2032 for the canonical projections with respect to R\u2032. It yields that\n{(s, t) \u2208 R\u2032 : s \u2208 U} = {(s, t) \u2208 R\u2032 : t \u2208 V }. (1)\nFor any (s\u2032, t\u2032) \u2208 \u03c0\u221211 (U) = {(s, t) \u2208 R : s \u2208 U}, we see that (s\u2032, t\u2032) \u2208 {(s, t) \u2208 R\u2032 : s \u2208 U} since R \u2286 R\u2032. It follows from Eq. (1) that (s\u2032, t\u2032) \u2208 {(s, t) \u2208 R\u2032 : t \u2208 V }, which means that t\u2032 \u2208 V . Therefore, we get that (s\u2032, t\u2032) \u2208 {(s, t) \u2208 R : t \u2208 V } = \u03c0\u221212 (V ). This proves that \u03c0 \u22121 1 (U) \u2286 \u03c0 \u22121 2 (V ). By the same argument, we can prove the converse inclusion, and thus \u03c0\u221211 (U) = \u03c0 \u22121 2 (V ). Hence, (U, V ) is R-correlational.\nProof of Proposition 1: Both (1) and (2) are trivial; we only prove the assertions (3) and (4).\n(3) For simplicity, let us write R for R1 \u222a R2. For any (s, t) \u2208 R, there exists some i \u2208 {1, 2} such that (s, t) \u2208 Ri. Therefore, if s a\u2212\u2192 \u00b5 in S1, then we have that t\na\u2212\u2192 \u03b7 in S2 for some \u03b7 \u2208 F(S2) satisfying \u00b5(U) = \u03b7(V ) for every Ricorrelational pair (U, V ). By Lemma 1, each R-correlational pair (U, V ) is also Ri-correlational. Hence, it holds that for any R-correlational pair (U, V ), \u00b5(U) = \u03b7(V ). Similarly, we can verify the other part in the definition of bisimulation.\n(4) Let us assume that (s, u) \u2208 R\u25e6Q. Then there is a t \u2208 S2 satisfying that (s, t) \u2208 R and (t, u) \u2208 Q. Now let s a|\u03b3\u2212\u2212\u2192 s\u2032\nand > 0. Then for /2, there exist t\u2032 \u2208 S2 and \u03b3\u2032\u2032 > \u03b3\u2212 /2 such that t\na|\u03b3\u2032\u2032\u2212\u2212\u2212\u2192 t\u2032 and (s\u2032, t\u2032) \u2208 R. Further, for /2, there exist u\u2032 \u2208 S3 and \u03b3\u2032 > \u03b3\u2032\u2032 \u2212 /2 such that u\na|\u03b3\u2032\u2212\u2212\u2192 u\u2032 and (t\u2032, u\u2032) \u2208 Q. Consequently, we see that (s\u2032, u\u2032) \u2208 R \u25e6Q and\n\u03b3\u2032 > \u03b3\u2032\u2032 \u2212 /2 > \u03b3 \u2212 /2\u2212 /2 = \u03b3 \u2212 ,\nas desired. If u\na|\u03b3\u2212\u2212\u2192 u\u2032 in S3, then for any > 0, we can find \u03b3\u2032 > \u03b3\u2212 such that s\na|\u03b3\u2032\u2212\u2212\u2192 s\u2032 and (s\u2032, u\u2032) \u2208 R\u25e6Q by a similar argument. Consequently, R \u25e6Q is a bisimulation.\nProof of Proposition 2: Suppose that R is a bisimulation on S. Since R is an equivalence relation on S, we see that for any C \u2208 S/R, the pair (C,C) is R-correlational. It thus follows immediately from the definition of bisimulation that (2) holds. Conversely, we only need to verify that \u03b4(s, a)(U) = \u03b4(t, a)(V ) for any R-correlational pair (U, V ). As R is an equivalence relation, we have that U = V = \u222ai\u2208ICi for some Ci \u2208 S/R. It gives rise to\n\u03b4(s, a)(U) = \u03b4(s, a)(\u222ai\u2208ICi) = \u2228i\u2208I\u03b4(s, a)(Ci) = \u2228i\u2208I\u03b4(t, a)(Ci) = \u03b4(t, a)(\u222ai\u2208ICi) = \u03b4(t, a)(V ),\nnamely, \u03b4(s, a)(U) = \u03b4(t, a)(V ), as desired. To prove Proposition 5, the notion of z-closure and a lemma will be handy. Following [11], we say that a relation R \u2286 S1\u00d7S2 is z-closed if for all s, s\u2032 \u2208 S1 and t, t\u2032 \u2208 S2, we have (s, t\u2032) \u2208 R whenever (s, t) \u2208 R, (s\u2032, t) \u2208 R, and (s\u2032, t\u2032) \u2208 R. Let us set, for n \u2208 N, R0 = R, Rn+1 = {(s, t\u2032) \u2208 S1 \u00d7 S2 : (s, t) \u2208 R, (s\u2032, t) \u2208 Rn, (s\u2032, t\u2032) \u2208 R for some s\u2032 \u2208 S1, t \u2208 S2}, and R\u2217 = \u222an\u2208NRn. By definition, (s, t) \u2208 Rn if and only if there are s0, s1, . . . , sn \u2208 S1 and t0, t1, . . . , tn \u2208 S2 such that s0 = s, tn = t, (si, ti) \u2208 R for all i \u2264 n, and (si+1, ti) \u2208 R for all i < n. It turns out that R\u2217 is the least z-closed binary relation between S1 and S2 that contains R.\nLemma 2: Let S1 = (S1, A, \u03b41) and S2 = (S2, A, \u03b42) be two FTSs. If R \u2286 S1 \u00d7 S2 is a bisimulation, then so is R\u2217.\nProof: By definition, we have that R\u2217 = \u222an\u2208NRn. Therefore, to prove the lemma, it suffices to show that for all (s, t) \u2208 Rn and a \u2208 A, if s\na\u2212\u2192 \u00b5s in S1, then there is a \u00b5t \u2208 F(S2) such that t\na\u2212\u2192 \u00b5t and \u00b5s(U) = \u00b5t(V ) for every Rn-correlational pair (U, V ). This can be shown by induction on n. For the basis step, namely, n = 0, it is trivial. Suppose now that (s, t) \u2208 Rn+1. Pick s\u2032 \u2208 S1 and t\u2032 \u2208 S2 such that (s, t\u2032) \u2208 R, (s\u2032, t\u2032) \u2208 Rn, and (s\u2032, t) \u2208 R. By the induction hypothesis and the fact that every R-correlational pair is necessarily Rn-correlational, we thus get that t\u2032\na\u2212\u2192 \u00b5t\u2032 and s\u2032 a\u2212\u2192 \u00b5s\u2032 such that \u00b5s(U) = \u00b5t\u2032(V ) = \u00b5s\u2032(U) = \u00b5t(V ) for every Rn-correlational pair (U, V ). Whence, R\u2217 is a bisimulation, as desired.\nProof of Proposition 5: Let us write R for \u223c. Since R is the largest bisimulation, it follows from Lemma 2 that R =\nR\u2217. Suppose that (s, t) \u2208 R and s a|\u03b3\u2212\u2212\u2192 s\u2032 for some s\u2032 \u2208 S1. Then there is \u00b5 \u2208 F(S1) such that \u00b5(s\u2032) = \u03b3. Clearly, the label a can trigger the transition from t. Otherwise, by considering the R-correlational pair ({s\u2032}, \u2205), we find that R is not a bisimulation, which is contradictory. Therefore, there is an \u03b7 \u2208 F(S2) such that t\na\u2212\u2192 \u03b7. Set V0 = {t\u2032 \u2208 S2 : (s\u2032, t\u2032) \u2208 R, \u03b7(t\u2032) > 0}. Because R is z-closed, we obtain that V0 6= \u2205. Suppose that (U1, V1) is the minimal R-correlational pair satisfying {s\u2032} \u2286 U1 and V0 \u2286 V1. Hence, we have that \u03b3 \u2264 \u00b5(U1) = \u03b7(V1), and furthermore, for any > 0 there exists some t\u2032 \u2208 V1 such that t\na|\u03b3\u2032\u2212\u2212\u2192 t\u2032 and \u03b3\u2032 > \u03b7(V1)\u2212 \u2265 \u03b3 \u2212 . Again, since R is z-closed, we see that (s\u2032, t\u2032) \u2208 R. Therefore, the assertion (1) in the proposition holds; the other assertion is symmetric and we thus omit its proof.\nProof of Proposition 6: To prove that LS1s1 = L S2 s2 , it is sufficient to show that LS1s1 (w) = L S2 s2 (w) for any string w \u2208 A\u2217. We verify it by induction on the length of the string w. The basis step is for strings of length 0, namely, w = . In this case, LS1s1 ( ) = 1 = L S2 s2 ( ) by definition. Thus the basis step is true. The induction hypothesis is that LS1s1 (w) = L S2 s2 (w) for all strings w with length no more than n. We now prove the same for strings of the form wa. By contradiction, let us suppose, without loss of generality, that LS1s1 (wa) > L S2 s2 (wa) for some a \u2208 A. For simplicity, we set \u03b1 = LS1s1 (wa) and \u03b2 = LS2s2 (wa), that is, \u03b1 = \u2228s\u2032\u2208S1\u03b41(s1, wa)(s\n\u2032) and \u03b2 = \u2228s\u2032\u2032\u2208S2\u03b42(s2, wa)(s\u2032\u2032). Note that \u03b1\u2212\u03b2 4 > 0. By the definition of supremum, there exists an s\u2032 \u2208 S1 such that\n\u03b41(s1, wa)(s \u2032) > \u03b1\u2212 \u03b1\u2212 \u03b2\n4\n> \u03b2 + \u03b1\u2212 \u03b2\n4\n\u2265 \u03b42(s2, wa)(s\u2032\u2032) + \u03b1\u2212 \u03b2\n4 ,\nnamely, \u03b41(s1, wa)(s\u2032) > \u03b42(s2, wa)(s\u2032\u2032) + \u03b1\u2212\u03b24 for all s\u2032\u2032 \u2208 S2. It follows from definition that \u03b41(s1, wa)(s\u2032) = \u2228s\u20321\u2208S1 [\u03b41(s1, w)(s \u2032 1) \u2227 \u03b41(s\u20321, a)(s\u2032)] and \u03b42(s2, wa)(s\u2032\u2032) = \u2228s\u20322\u2208S2 [\u03b42(s2, w)(s \u2032 2) \u2227\u03b41(s\u20322, a)(s\u2032\u2032)]. Therefore, there is an s\u20321 \u2208 S1 such that \u03b41(s1, w)(s\u20321) \u2227 \u03b41(s\u20321, a)(s\u2032) > \u03b42(s2, w)(s \u2032 2) \u2227 \u03b42(s\u20322, a)(s\u2032\u2032) + \u03b1\u2212\u03b2 4 for all s \u2032 2, s \u2032\u2032 \u2208 S2. Using the induction hypothesis, we have that \u03b41(s1, w)(s\u20321) \u2264 \u2228s\u20322\u2208S2\u03b42(s2, w)(s \u2032 2). This forces that \u03b41(s \u2032 1, a)(s \u2032) > \u03b42(s \u2032 2, a)(s \u2032\u2032) + \u03b1\u2212\u03b24 for all s \u2032 2, s \u2032\u2032 \u2208 S2. On the other hand, we see that \u03b41(s1, w)(s\u20321) > 0 from the proven fact \u03b41(s1, w)(s \u2032 1)\u2227\u03b41(s\u20321, a)(s\u2032) > \u03b42(s2, w)(s\u20322)\u2227\u03b42(s\u20322, a)(s\u2032\u2032)+ \u03b1\u2212\u03b2 4 . It implies that there must be an s \u2032 2 \u2208 S2 such that s\u20321 \u223c s\u20322. Consider the transition s\u20321 a|\u03b41(s\u20321,a)(s\n\u2032)\u2212\u2212\u2212\u2212\u2212\u2212\u2212\u2212\u2192 s\u2032 and = \u03b1\u2212\u03b24 . By the previous argument, there is no s\n\u2032\u2032 \u2208 S2 such that s\u20322\na|\u03b3\u2032\u2212\u2212\u2192 s\u2032\u2032 and \u03b3\u2032 > \u03b41(s\u20321, a)(s\u2032)\u2212 , which contradicts the bisimilarity of s\u20321 and s \u2032 2. The proof of the induction step is finished, as desired. Proof of Theorem 1: Let Ri \u2286 Si\u00d7Ti be a bisimulation such that Si \u223c Ti. We may assume that Ri satisfies the conditions of Definition 5. Consider R = {((s1, s2), (t1, t2)) : (s1, t1) \u2208 R1, (s2, t2) \u2208 R2} \u2286 (S1 \u00d7 S2) \u00d7 (T1 \u00d7 T2). It follows that ((s01, s02), (t01, t02)) \u2208 R. To show that S1|S2 \u223c T1|T2, it\nsuffices to verify that R is a bisimulation between S1|S2 and T1|T2.\nFor any ((s1, s2), (t1, t2)) \u2208 R, if (s1, s2) a|\u03b3\u2212\u2212\u2192 (s\u20321, s\u20322),\nwe now show that for any > 0, there are \u03b3\u2032 > \u03b3 \u2212 and (t\u20321, t \u2032 2) \u2208 T1 \u00d7 T2 satisfying that (t1, t2)\na|\u03b3\u2032\u2212\u2212\u2192 (t\u20321, t\u20322) and ((s\u20321, s \u2032 2), (t \u2032 1, t \u2032 2)) \u2208 R. By the definition of parallel composition, three cases need to be considered.\nCase 1: a \u2208 A1 \u2229 A2. In this case, since (s1, s2) a|\u03b3\u2212\u2212\u2192\n(s\u20321, s \u2032 2), there exists \u03b3i \u2265 \u03b3 such that si a|\u03b3i\u2212\u2212\u2192 s\u2032i for i = 1, 2. This forces that there exist \u03b3\u2032i > \u03b3i \u2212 and t\u2032i \u2208 Ti such that ti\na|\u03b3\u2032i\u2212\u2212\u2192 t\u2032i and (s\u2032i, t\u2032i) \u2208 Ri for i = 1, 2. Taking \u03b3\u2032 = \u03b3\u20321 \u2227 \u03b3\u20322, we see that \u03b3\u2032 > \u03b3 \u2212 , (t1, t2)\na|\u03b3\u2032\u2212\u2212\u2192 (t\u20321, t\u20322), and ((s\u20321, s \u2032 2), (t \u2032 1, t \u2032 2)) \u2208 R, as desired.\nCase 2: a \u2208 A1\\A2. In this case, we see that s1 a|\u03b3\u2212\u2212\u2192 s\u20321 and s\u20322 = s2. Hence, there are \u03b3 \u2032 > \u03b3\u2212 and t\u20321 \u2208 T1 satisfying that t1 a|\u03b3\u2032\u2212\u2212\u2192 t\u20321 and (s\u20321, t\u20321) \u2208 R1. We thus have that (t1, t2)\na|\u03b3\u2032\u2212\u2212\u2192 (t\u20321, t2) and ((s \u2032 1, s2), (t \u2032 1, t2)) \u2208 R.\nCase 3: a \u2208 A2\\A1. This is analogous to Case 3; we omit it.\nIn a similar way, we can show that if (t1, t2) a|\u03b3\u2212\u2212\u2192 (t\u20321, t\u20322), then for any > 0, there are \u03b3\u2032 > \u03b3\u2212 and (s\u20321, s\u20322) \u2208 S1\u00d7S2 satisfying that (s1, s2)\na|\u03b3\u2032\u2212\u2212\u2192 (s\u20321, s\u20322) and ((s\u20321, s\u20322), (t\u20321, t\u20322)) \u2208 R. This completes the proof of the theorem.\nProof of Proposition 8: Suppose that (s, t) \u2208 \u0393(R) and s\na\u2212\u2192 \u00b5 in S1. Then by the definition of \u0393(R) there exists t\na\u2212\u2192 \u03b7 in S2 such that \u00b5(U) = \u03b7(V ) for every R-correlational pair (U, V ). As R \u2286 R\u2032, it follows from Lemma 1 that \u00b5(U) = \u03b7(V ) for every R\u2032-correlational pair (U, V ). Consequently, (s, t) \u2208 \u0393(R\u2032), which means that \u0393(R) \u2286 \u0393(R\u2032), as desired.\nProof of Theorem 3: The assertion (1) is simply a reformulation of the definition of bisimulation.\nFor (2), we first show that \u223c is a fixed point of \u0393, that is, \u0393(\u223c) =\u223c. Because \u223c is a bisimulation, we obtain by (1) that \u223c\u2286 \u0393(\u223c). It therefore follows from the monotony of \u0393 that \u0393(\u223c) \u2286 \u0393(\u0393(\u223c)), which means that \u0393(\u223c) is a bisimulation. This forces that \u0393(\u223c) \u2286\u223c, since \u223c is the largest bisimulation. Consequently, we have that \u0393(\u223c) =\u223c. Furthermore, \u223c must be the largest fixed point of \u0393, since by (1) any fixed point of \u0393 is a bisimulation and \u223c is the largest bisimulation. This completes the proof of (2).\nProof of Proposition 9: For the necessity, suppose that S1 \u2264 S2. Hence, S1 \u2286 S2. It follows that \u2206S1 = {(s, s) : s \u2208 S1} \u2286 S1\u00d7S1 \u2286 S1\u00d7S2. For any (s, s) \u2208 \u2206S1 and a \u2208 A, if s a|\u03b3\u2212\u2212\u2192 t in S1, it forces that s\na|\u03b3\u2212\u2212\u2192 t in S2 since \u03b41 = \u03b42|S1\u00d7A. Clearly, (t, t) \u2208 \u2206S1 . Conversely, if s\na|\u03b3\u2212\u2212\u2192 t in S2, we see that t \u2208 S1 because \u03b42(s, a)(t) = 0 for every t \u2208 S2\\S1 by definition. Therefore, (t, t) \u2208 \u2206S1 in this case. Again, since \u03b41 = \u03b42|S1\u00d7A, we have that s\na|\u03b3\u2212\u2212\u2192 t in S1. Whence, \u2206S1 is a bisimulation between S1 and S2.\nWe now consider the sufficiency. Assume that \u2206S1 is a bisimulation between S1 and S2. It follows that S1 \u2286 S2 by \u2206S1 \u2286 S1 \u00d7 S2. To prove that \u03b42(s1, a)(s2) = 0 for any s1 \u2208 S1, a \u2208 A, and s2 \u2208 S2\\S1, we suppose,\nby contradiction, that there exist s \u2208 S1, a \u2208 A, and t \u2208 S2\\S1 such that \u03b42(s, a)(t) > 0. As t 6\u2208 S1, the transition s a|\u03b42(s,a)(t)\u2212\u2212\u2212\u2212\u2212\u2212\u2212\u2192 t in S2 cannot be matched by any transition in S1. Therefore, \u2206S1 is not a bisimulation, which contradicts the hypothesis. It remains to verify that \u03b41 = \u03b42|S1\u00d7A. By contradiction, assume that there are s, t \u2208 S1 and a \u2208 A such that \u03b41(s, a)(t) > \u03b42|S1\u00d7A(s, a)(t) = \u03b42(s, a)(t) or conversely, \u03b42|S1\u00d7A(s, a)(t) = \u03b42(s, a)(t) > \u03b41(s, a)(t). If the former inequality holds, then we can find that the transition s\na|\u03b41(s,a)(t)\u2212\u2212\u2212\u2212\u2212\u2212\u2212\u2192 t in S1 cannot be matched by any transition in S2, while if the latter holds, we see that the transition s\na|\u03b42(s,a)(t)\u2212\u2212\u2212\u2212\u2212\u2212\u2212\u2192 t in S2 cannot be matched by any transition in S1. In either case, it contradicts the assumption that \u2206S1 is a bisimulation. Therefore, S1 \u2264 S2. This completes the proof of the proposition.\nProof of Proposition 10: It is easy to see that Ker(f) is an equivalence relation on S1. For any (s, s\u2032) \u2208 Ker(f), a \u2208 A, and C \u2208 S1/Ker(f), we obtain by the definition of homomorphism that\n\u03b41(s, a)(C) = \u2228t\u2208C\u03b41(s, a)(t) = \u03b42(f(s), a)(f(t))\n= \u03b42(f(s \u2032), a)(f(t)) = \u2228t\u2208C\u03b41(s\u2032, a)(t) = \u03b41(s \u2032, a)(C).\nIt therefore follows from Proposition 2 that Ker(f) is a bisimulation on S1, finishing the proof.\nTo give the proof of Theorem 4, it is convenient to have the following lemma.\nLemma 3: Let S1 = (S1, A, \u03b41, s01) and S2 = (S2, A, \u03b42, s02) be two FTSs. Suppose that R is a bisimulation between S1 and S2. Then for any (s, t) \u2208 R and a \u2208 A, we have the following:\n(1) \u03b41(s, a)(s\u2032) \u2264 \u2228{\u03b42(t, a)(t\u2032) : t\u2032 \u2208 S2, (s\u2032, t\u2032) \u2208 R} for any s\u2032 \u2208 S1. (2) \u03b42(t, a)(t\u2032) \u2264 \u2228{\u03b41(s, a)(s\u2032) : s\u2032 \u2208 S1, (s\u2032, t\u2032) \u2208 R} for any t\u2032 \u2208 S2.\nProof: (1) and (2) are symmetric, so we only prove (1). Set \u03b3 = \u03b41(s, a)(s\u2032) and \u03b30 = \u2228{\u03b42(t, a)(t\u2032) : t\u2032 \u2208 S2, (s\n\u2032, t\u2032) \u2208 R}. By contradiction, assume that \u03b3 > \u03b30. Then taking = \u03b3 \u2212 \u03b30, there exist \u03b3\u2032 > \u03b3 \u2212 = \u03b30 and t\u2032 \u2208 S2 such that t\na|\u03b3\u2032\u2212\u2212\u2192 t\u2032 and (s\u2032, t\u2032) \u2208 R. We thus see that \u03b3\u2032 \u2264 \u03b30, a contradiction. Hence, \u03b3 \u2264 \u03b30, as desired. This completes the proof of (1).\nProof of Theorem 4: We prove the necessity first. Suppose that f : S1 \u2212\u2192 S2 is a homomorphism. Then we have that (s01, s02) \u2208 G(f). For any (s, f(s)) \u2208 G(f) and s\na|\u03b3\u2212\u2212\u2192 s\u2032, we get by the definition of homomorphism that \u03b42(f(s), a)(f(s\n\u2032)) = \u2228{\u03b41(s, a)(s\u2032\u2032) : s\u2032\u2032 \u2208 S1, f(s\u2032\u2032) = f(s\u2032)}. Taking \u03b3\u2032 = \u03b42(f(s), a)(f(s\u2032)), we see that \u03b3\u2032 > \u03b3\u2212 for any > 0, f(s)\na|\u03b3\u2032\u2212\u2212\u2192 f(s\u2032), and (s\u2032, f(s\u2032)) \u2208 G(f). Conversely, if f(s)\na|\u03b3\u2212\u2212\u2192 t, then \u03b3 = \u03b42(f(s), a)(t) = \u2228{\u03b41(s, a)(s\u2032\u2032) : s\u2032\u2032 \u2208 S1, f(s\u2032\u2032) = t} by the definition of homomorphism. Thus, for any > 0, there exists s\u2032 \u2208 S1 such that f(s\u2032) = t and \u03b41(s, a)(s\u2032) > \u03b3 \u2212 . That is, for any\n> 0, there exist \u03b3\u2032 = \u03b41(s, a)(s\u2032) > \u03b3 \u2212 and s\u2032 \u2208 S such that s\na|\u03b3\u2032\u2212\u2212\u2192 s\u2032 and (s\u2032, t) \u2208 G(f). So G(f) is a bisimulation between S1 and S2.\nNext, to see the sufficiency, assume that G(f) is a bisimulation containing (s01, s02). By definition, we need to check that \u03b42(f(s), a)(t) = \u2228{\u03b42(s, a)(s\u2032) : s\u2032 \u2208 S1, f(s\u2032) = t} for any s \u2208 S1, a \u2208 A, and t \u2208 S2. Let \u03b30 = \u2228{\u03b41(s, a)(s\u2032) : s\u2032 \u2208 S1, f(s\u2032) = t} and \u03b31 = \u03b42(f(s), a)(t). Then we have that \u03b31 \u2264 \u03b30 by Lemma 3. On the other hand, for any s\u2032 \u2208 S1 with f(s\u2032) = t, we get, again by Lemma 3, that\n\u03b41(s, a)(s \u2032) \u2264 \u2228{\u03b42(f(s), a)(t\u2032) : t\u2032 = f(s\u2032)}\n= \u03b42(f(s), a)(t)\n= \u03b31,\nwhich means that \u03b30 \u2264 \u03b31. Hence, \u03b31 = \u03b30, finishing the proof of the theorem.\nProof of Proposition 11: (1) Let (f(s), f(s\u2032)) \u2208 f(R) and f(s)\na|\u03b3\u2212\u2212\u2192 t. We now show that for any > 0, there exist \u03b3\u2032 > \u03b3 \u2212 and t\u2032 \u2208 S satisfying that f(s\u2032) a|\u03b3 \u2032\n\u2212\u2212\u2192 f(t\u2032) and (t, f(t\u2032)) \u2208 f(R). Since f is a homomorphism, there exists s\u2032\u2032 \u2208 S1 such that t = f(s\u2032\u2032). By Theorem 4, we know that G(f) = {(s, f(s)) : s \u2208 S1} is a bisimulation. Thus, there are \u03b31 > \u03b3 \u2212 /3 and s1 \u2208 S1 such that s\na|\u03b31\u2212\u2212\u2212\u2192 s1 and f(s1) = t. It follows from (f(s), f(s\u2032)) \u2208 f(R) that (s, s\u2032) \u2208 R. Therefore, there exist \u03b32 > \u03b31 \u2212 /3 and t\u2032 \u2208 S1 such that s\u2032\na|\u03b32\u2212\u2212\u2212\u2192 t\u2032 and (s1, t\u2032) \u2208 R. Again, using the fact that G(f) is a bisimulation, there exists \u03b3\u2032 > \u03b32 \u2212 /3 such that f(s\u2032)\na|\u03b3\u2032\u2212\u2212\u2192 f(t\u2032). Moreover, we have that \u03b3\u2032 > \u03b3 \u2212 and (t, f(t\u2032)) = (f(s1), f(t\n\u2032)) \u2208 f(R). Similarly, we can prove that if f(s\u2032)\na|\u03b3\u2212\u2212\u2192 t, then for any > 0, there exist \u03b3\u2032 > \u03b3 \u2212 and t\u2032 \u2208 S1 satisfying that f(s)\na|\u03b3\u2032\u2212\u2212\u2192 f(t\u2032) and (t, f(t\u2032)) \u2208 f(R). The proof of (1) is completed.\n(2) It can be proved by imitating the proof of (1). Proof of Proposition 12: Suppose that R is a bisimulation on S. By definition, we see that \u03c0(s0) = [s0]. For any s, s\u2032 \u2208 S and a \u2208 A, it follows from Proposition 2 that\n\u03b4(s, a)([s\u2032]) = \u03b4(s\u2032\u2032, a)([s\u2032])\nfor all s\u2032\u2032 \u2208 [s], which means that\n\u03b4(s, a)([s\u2032]) = \u2228s\u2032\u2032\u2208[s]\u03b4(s\u2032\u2032, a)([s\u2032]).\nThis forces that\n\u03b4\u0303([s], a)([s\u2032]) = \u03b4(s, a)([s\u2032]) = \u2228{\u03b4(s, a)(t\u2032) : t\u2032 \u2208 [s\u2032]}.\nTherefore, \u03c0 is a homomorphism from S to S/R by definition. Conversely, if the quotient map \u03c0 : S \u2212\u2192 S/R gives a homomorphism from S to S/R, then by Proposition 10 the kernel Ker(\u03c0) = {(s, s\u2032) \u2208 S \u00d7 S : [s] = [s\u2032]} of \u03c0 is a bisimulation on S. Observe that Ker(\u03c0) = R, so R is a bisimulation on S, which completes the proof of the proposition.\nProof of Proposition 13: We first show the necessity. By contradiction, suppose that Q is another bisimulation equivalence on S/R. Then there is ([s], [s\u2032]) \u2208 Q\\\u2206S/R, which means that [s] 6= [s\u2032], i.e., (s, s\u2032) /\u2208 R. Since R is a\nbisimulation equivalence on S, we get by Proposition 12 that the quotient map \u03c0 : S \u2212\u2192 S/R is a homomorphism from S to S/R. By (2) of Proposition 11, we see that \u03c0\u22121(Q) is a bisimulation on S. Since \u223c is the largest one, we have that \u03c0\u22121(Q) \u2286\u223c= R. Noting that (s, s\u2032) \u2208 \u03c0\u22121(Q), we find that (s, s\u2032) \u2208 R, a contradiction. Hence, \u2206S/R is the only bisimulation equivalence on S/R.\nNow, we consider the sufficiency. Assume that \u2206S/R is the unique bisimulation equivalence on S/R. Then \u2206S/R is also the largest bisimulation on S/R. Let R\u2032 be an arbitrary bisimulation on S. Using Proposition 11, we know that \u03c0(R\u2032) is a bisimulation on S/R. So \u03c0(R\u2032) \u2286 \u2206S/R, which implies that for any (s, s\u2032) \u2208 R\u2032, [s] = [s\u2032]. Therefore, (s, s\u2032) \u2208 R, and thus R\u2032 \u2286 R. It forces that R =\u223c, finishing the proof."}], "references": [{"title": "Pattern recognition using temporal fuzzy automata", "author": ["G. Bailador", "G. Trivi\u00f1o"], "venue": "Fuzzy Sets Syst., vol. 161, pp. 37-55, 2010.", "citeRegEx": "1", "shortCiteRegEx": null, "year": 2010}, {"title": "Exact performance equivalence: an equivalence relation for stochastic automata", "author": ["P. Buchholz"], "venue": "Theor. Comput. Sci., vol. 215, pp. 263-287, 1999.", "citeRegEx": "2", "shortCiteRegEx": null, "year": 1999}, {"title": "Bisimulation relations for weighted automata", "author": ["P. Buchholz"], "venue": "Theor. Comput. Sci., vol. 393, pp. 109-123, 2008.", "citeRegEx": "3", "shortCiteRegEx": null, "year": 2008}, {"title": "Fuzzy reasoning supported by Petri nets", "author": ["A.J. Bugarin", "S. Barro"], "venue": "IEEE Trans. Fuzzy Syst., vol. 2, pp. 135-150, 1994.", "citeRegEx": "4", "shortCiteRegEx": null, "year": 1994}, {"title": "Task sequence planning using fuzzy Petri nets", "author": ["T. Cao", "A.C. Sanderson"], "venue": "IEEE Trans. Syst., Man, Cybern., vol. 25, pp. 755-768, May 1995.", "citeRegEx": "5", "shortCiteRegEx": null, "year": 1995}, {"title": "A fuzzy Petri-nets model for computing with words", "author": ["Y. Cao", "G. Chen"], "venue": "IEEE Trans. Fuzzy Syst., vol. 18, pp. 486-499, 2010.", "citeRegEx": "6", "shortCiteRegEx": null, "year": 2010}, {"title": "Supervisory control of fuzzy discrete event systems", "author": ["Y. Cao", "M.S. Ying"], "venue": "IEEE Trans. Syst., Man, Cybern., Part B, vol. 35, pp. 366- 371, Apr. 2005.", "citeRegEx": "7", "shortCiteRegEx": null, "year": 2005}, {"title": "Retraction and generalized extension of computing with words", "author": ["Y. Cao", "M. Ying", "G. Chen"], "venue": "IEEE Trans. Fuzzy Syst., vol. 15, pp. 1238- 1250, Dec. 2007.", "citeRegEx": "8", "shortCiteRegEx": null, "year": 2007}, {"title": "Fuzzy Petri net: an overview", "author": ["J. Cardoso", "R. Valette", "D. Dubois"], "venue": "Proc. 13th IFAC World Congr., San Francisco, CA, June 30-July 5, 1996, pp. 443-448.", "citeRegEx": "9", "shortCiteRegEx": null, "year": 1996}, {"title": "A description of the dynamic behavior of fuzzy systems", "author": ["Y.Y. Chen", "T.C. Tsao"], "venue": "IEEE Trans. Syst., Man, Cybern., vol. 19, pp. 745-755, 1989.", "citeRegEx": "10", "shortCiteRegEx": null, "year": 1989}, {"title": "Bisimulation for probabilistic transition systems: a coalgebraic approach", "author": ["E.P. de Vink", "J.J.M.M. Rutten"], "venue": "Theor. Comput. Sci., vol. 221, pp. 271-293, 1999.", "citeRegEx": "11", "shortCiteRegEx": null, "year": 1999}, {"title": "New directions in fuzzy automata", "author": ["M. Doostfatemeh", "S.C. Kremer"], "venue": "Int. J. Approx. Reason., vol. 38, pp. 175-214, 2005.", "citeRegEx": "12", "shortCiteRegEx": null, "year": 2005}, {"title": "Theory of extended fuzzy discreteevent systems for handling ranges of knowledge uncertainties and subjectivity", "author": ["X. Du", "H. Ying", "F. Lin"], "venue": "IEEE Trans. Fuzzy Syst., vol. 17, pp. 316-328, 2009.", "citeRegEx": "13", "shortCiteRegEx": null, "year": 2009}, {"title": "Fuzzy Sets and Systems: Theory and Applications", "author": ["D. Dubois", "H. Prade"], "venue": "New York: Academic,", "citeRegEx": "14", "shortCiteRegEx": "14", "year": 1980}, {"title": "A survey on analysis and design of model-based fuzzy control systems", "author": ["G. Feng"], "venue": "IEEE Trans. Fuzzy Syst., vol. 14, pp. 676-697, 2006.", "citeRegEx": "15", "shortCiteRegEx": null, "year": 2006}, {"title": "Reactive, generative, and stratified models of probabilistic processes", "author": ["R.J. van Glabbeek", "S.A. Smolka", "B. Steffen"], "venue": "Inf. Comput.,", "citeRegEx": "16", "shortCiteRegEx": "16", "year": 1995}, {"title": "Equivalence in knowledge representation: automata, recurrent neural networks, and dynamical fuzzy systems", "author": ["C.L. Giles", "C.W. Omlin", "K.K. Thornber"], "venue": "Proc. IEEE, vol. 87, pp. 1623-1640, 1999.", "citeRegEx": "17", "shortCiteRegEx": null, "year": 1999}, {"title": "Fuzzy Petri net", "author": ["X.G. He"], "venue": "Chinese J. Comput., vol. 17, no. 12, pp. 946-950, 1994, (in Chinese).", "citeRegEx": "18", "shortCiteRegEx": null, "year": 1994}, {"title": "Fuzzy Switching and Automata: Theory and Applications", "author": ["A. Kandel", "S.C. Lee"], "venue": null, "citeRegEx": "19", "shortCiteRegEx": "19", "year": 1979}, {"title": "Formal verification of parallel programs", "author": ["R.M. Keller"], "venue": "Comm. ACM, vol. 19, pp. 371-384, 1976.", "citeRegEx": "20", "shortCiteRegEx": null, "year": 1976}, {"title": "A limit theorem in some dynamic fuzzy systems", "author": ["M. Kurano", "M. Yasuda", "J. Nakagami", "Y. Yoshida"], "venue": "Fuzzy Sets Syst.,", "citeRegEx": "21", "shortCiteRegEx": "21", "year": 1992}, {"title": "Bisimulation through probabilistic testing", "author": ["K.G. Larsen", "A. Skou"], "venue": "Inf. Comput., vol. 94, pp. 1-28, 1991.  CAO, CHEN, AND KERRE: BISIMULATIONS FOR FUZZY TRANSITION SYSTEMS  13", "citeRegEx": "22", "shortCiteRegEx": null, "year": 1991}, {"title": "Fuzzy Turing machines: variants and universality", "author": ["Y.M. Li"], "venue": "IEEE Trans. Fuzzy Syst., vol. 16, no. 6, pp. 1491-1502, 2008.", "citeRegEx": "23", "shortCiteRegEx": null, "year": 2008}, {"title": "Approximation and robustness of fuzzy finite automata", "author": ["Y.M. Li"], "venue": "Int. J. Approx. Reason., vol. 47, no. 2, pp. 247-257, 2008.", "citeRegEx": "24", "shortCiteRegEx": null, "year": 2008}, {"title": "Modeling and control of fuzzy discrete event systems", "author": ["F. Lin", "H. Ying"], "venue": "IEEE Trans. Syst., Man, Cybern., Part B, vol. 32, pp. 408- 415, Aug. 2002.", "citeRegEx": "25", "shortCiteRegEx": null, "year": 2002}, {"title": "An overview of probabilistic process algebras and their equivalences", "author": ["N. L\u00f3pez", "M. N\u00fa\u00f1ez"], "venue": "in: C. Baier et al. (Eds.), Validation of Stochastic Systems, Lect. Notes Comput. Sci., vol. 2925, Springer, Berlin, 2004, pp. 89-123.", "citeRegEx": "26", "shortCiteRegEx": null, "year": 2004}, {"title": "Communication and Concurrency", "author": ["R. Milner"], "venue": "Upper Saddle River, NJ: Boca Raton, FL: Prentice-Hall,", "citeRegEx": "27", "shortCiteRegEx": "27", "year": 1989}, {"title": "Fuzzy Automata and Languages: Theory and Applications", "author": ["J.N. Mordeson", "D.S. Malik"], "venue": "Boca Raton, FL: Chapman N Hall/CRC,", "citeRegEx": "28", "shortCiteRegEx": "28", "year": 2002}, {"title": "Concurrency and automata on infinite sequences", "author": ["D. Park"], "venue": "in: G. Goos and J. Hartmanis (Eds.), Proc. 5th GI Conference on Theoretical Computer Science, Lect. Notes Comput. Sci., vol. 104, Springer, Berlin, 1981, pp. 167-183.", "citeRegEx": "29", "shortCiteRegEx": null, "year": 1981}, {"title": "Fuzzy Control and Fuzzy Systems", "author": ["W. Pedrycz"], "venue": null, "citeRegEx": "30", "shortCiteRegEx": "30", "year": 1993}, {"title": "A generalized fuzzy Petri net model", "author": ["W. Pedrycz", "F. Gomide"], "venue": "IEEE Trans. Fuzzy Syst., vol. 2, no. 4, pp. 295-301, Nov. 1994.", "citeRegEx": "31", "shortCiteRegEx": null, "year": 1994}, {"title": "Congruences and homomorphisms of fuzzy automata", "author": ["T. Petkovi\u0107"], "venue": "Fuzzy Sets Syst., vol. 157, pp. 444-458, 2006.", "citeRegEx": "32", "shortCiteRegEx": null, "year": 2006}, {"title": "Supervisory control of fuzzy discrete event systems: a formal approach", "author": ["D.W. Qiu"], "venue": "IEEE Trans. Syst., Man, Cybern., Part B, vol. 35, pp. 72-88, Feb. 2005.", "citeRegEx": "33", "shortCiteRegEx": null, "year": 2005}, {"title": "Fuzzy stochastic automata for intelligent vehicle control", "author": ["G.G. Rigatos"], "venue": "IEEE Trans. Industr. Electr., vol. 50, pp. 76-79, 2003.", "citeRegEx": "34", "shortCiteRegEx": null, "year": 2003}, {"title": "Maxmin automata", "author": ["E.S. Santos"], "venue": "Inform. Contr., vol. 13, pp. 363-377, 1968.", "citeRegEx": "35", "shortCiteRegEx": null, "year": 1968}, {"title": "Bisimulation relations for fuzzy finite automata", "author": ["D.D. Sun", "Y.M. Li", "W.W. Yang"], "venue": "Fuzzy Syst. Math., vol. 23, pp. 92-100, 2009 (in Chinese).", "citeRegEx": "36", "shortCiteRegEx": null, "year": 2009}, {"title": "A lattice-theoretical fixpoint theorem and its applications", "author": ["A. Tarski"], "venue": "Pac. J. Math., vol. 5, pp. 285-309, 1955.", "citeRegEx": "37", "shortCiteRegEx": null, "year": 1955}, {"title": "On generalizations of adaptive algorithm and application of the fuzzy sets concept to pattern classification, Ph.D", "author": ["W.G. Wee"], "venue": null, "citeRegEx": "38", "shortCiteRegEx": "38", "year": 1967}, {"title": "A formulation of fuzzy automata and its application as a model of learning systems", "author": ["W.G. Wee", "K.S. Fu"], "venue": "IEEE Trans. Syst. Sci. Cybern., vol. 5, no. 3, pp. 215-223, 1969.", "citeRegEx": "39", "shortCiteRegEx": null, "year": 1969}, {"title": "Models for concurrency", "author": ["G. Winskel", "M. Nielsen"], "venue": "in: S. Abramsky, Dov M. Gabby, T. S. E. Maibaum (Eds.), Handbook of Logic in Computer Science, vol. 4: Semantic Modelling, Clarendon Press, Oxford, 1995, pp. 1-139.", "citeRegEx": "40", "shortCiteRegEx": null, "year": 1995}, {"title": "Fuzzy automata with fuzzy relief", "author": ["J. Virant", "N. Zimic"], "venue": "IEEE Trans. Fuzzy Syst., vol. 3, no. 1, pp. 69-74, Feb. 1995.", "citeRegEx": "41", "shortCiteRegEx": null, "year": 1995}, {"title": "Fuzzy sets and systems", "author": ["L.A. Zadeh"], "venue": "Proc. Symp. Syst. Theory, Polytech. Inst. Brooklyn, New York,", "citeRegEx": "42", "shortCiteRegEx": "42", "year": 1965}], "referenceMentions": [{"referenceID": 41, "context": "THE idea of fuzzy systems was originated by Zadeh in 1965 [42].", "startOffset": 58, "endOffset": 62}, {"referenceID": 37, "context": "As a natural generalization of nondeterministic automata, the mathematical formulation of fuzzy automata was first proposed by Wee in 1967 [38].", "startOffset": 139, "endOffset": 143}, {"referenceID": 0, "context": "In the literature up to now (see, for example, [1], [8], [12], [14], [19], [23], [28], [34], [39], [41]), a great variety of types of fuzzy automata", "startOffset": 47, "endOffset": 50}, {"referenceID": 7, "context": "In the literature up to now (see, for example, [1], [8], [12], [14], [19], [23], [28], [34], [39], [41]), a great variety of types of fuzzy automata", "startOffset": 52, "endOffset": 55}, {"referenceID": 11, "context": "In the literature up to now (see, for example, [1], [8], [12], [14], [19], [23], [28], [34], [39], [41]), a great variety of types of fuzzy automata", "startOffset": 57, "endOffset": 61}, {"referenceID": 13, "context": "In the literature up to now (see, for example, [1], [8], [12], [14], [19], [23], [28], [34], [39], [41]), a great variety of types of fuzzy automata", "startOffset": 63, "endOffset": 67}, {"referenceID": 18, "context": "In the literature up to now (see, for example, [1], [8], [12], [14], [19], [23], [28], [34], [39], [41]), a great variety of types of fuzzy automata", "startOffset": 69, "endOffset": 73}, {"referenceID": 22, "context": "In the literature up to now (see, for example, [1], [8], [12], [14], [19], [23], [28], [34], [39], [41]), a great variety of types of fuzzy automata", "startOffset": 75, "endOffset": 79}, {"referenceID": 27, "context": "In the literature up to now (see, for example, [1], [8], [12], [14], [19], [23], [28], [34], [39], [41]), a great variety of types of fuzzy automata", "startOffset": 81, "endOffset": 85}, {"referenceID": 33, "context": "In the literature up to now (see, for example, [1], [8], [12], [14], [19], [23], [28], [34], [39], [41]), a great variety of types of fuzzy automata", "startOffset": 87, "endOffset": 91}, {"referenceID": 38, "context": "In the literature up to now (see, for example, [1], [8], [12], [14], [19], [23], [28], [34], [39], [41]), a great variety of types of fuzzy automata", "startOffset": 93, "endOffset": 97}, {"referenceID": 40, "context": "In the literature up to now (see, for example, [1], [8], [12], [14], [19], [23], [28], [34], [39], [41]), a great variety of types of fuzzy automata", "startOffset": 99, "endOffset": 103}, {"referenceID": 3, "context": "In parallel, various fuzzy Petri nets have been formulated and extensively investigated (see [4]\u2013[6], [9], [18], [31] and the references therein).", "startOffset": 93, "endOffset": 96}, {"referenceID": 5, "context": "In parallel, various fuzzy Petri nets have been formulated and extensively investigated (see [4]\u2013[6], [9], [18], [31] and the references therein).", "startOffset": 97, "endOffset": 100}, {"referenceID": 8, "context": "In parallel, various fuzzy Petri nets have been formulated and extensively investigated (see [4]\u2013[6], [9], [18], [31] and the references therein).", "startOffset": 102, "endOffset": 105}, {"referenceID": 17, "context": "In parallel, various fuzzy Petri nets have been formulated and extensively investigated (see [4]\u2013[6], [9], [18], [31] and the references therein).", "startOffset": 107, "endOffset": 111}, {"referenceID": 30, "context": "In parallel, various fuzzy Petri nets have been formulated and extensively investigated (see [4]\u2013[6], [9], [18], [31] and the references therein).", "startOffset": 113, "endOffset": 117}, {"referenceID": 13, "context": "A straightforward idea is to employ the concept of fuzzy language equivalence that stipulates that two fuzzy automata are equivalent if they accept the same strings of input symbols with the identical membership grade [14], [19], [24], [28].", "startOffset": 218, "endOffset": 222}, {"referenceID": 18, "context": "A straightforward idea is to employ the concept of fuzzy language equivalence that stipulates that two fuzzy automata are equivalent if they accept the same strings of input symbols with the identical membership grade [14], [19], [24], [28].", "startOffset": 224, "endOffset": 228}, {"referenceID": 23, "context": "A straightforward idea is to employ the concept of fuzzy language equivalence that stipulates that two fuzzy automata are equivalent if they accept the same strings of input symbols with the identical membership grade [14], [19], [24], [28].", "startOffset": 230, "endOffset": 234}, {"referenceID": 27, "context": "A straightforward idea is to employ the concept of fuzzy language equivalence that stipulates that two fuzzy automata are equivalent if they accept the same strings of input symbols with the identical membership grade [14], [19], [24], [28].", "startOffset": 236, "endOffset": 240}, {"referenceID": 26, "context": "[27], [29].", "startOffset": 0, "endOffset": 4}, {"referenceID": 28, "context": "[27], [29].", "startOffset": 6, "endOffset": 10}, {"referenceID": 1, "context": "probabilistic and stochastic systems (see, for example, [2], [3],", "startOffset": 56, "endOffset": 59}, {"referenceID": 2, "context": "probabilistic and stochastic systems (see, for example, [2], [3],", "startOffset": 61, "endOffset": 64}, {"referenceID": 15, "context": "[16], [22], [26] and references therein).", "startOffset": 0, "endOffset": 4}, {"referenceID": 21, "context": "[16], [22], [26] and references therein).", "startOffset": 6, "endOffset": 10}, {"referenceID": 25, "context": "[16], [22], [26] and references therein).", "startOffset": 12, "endOffset": 16}, {"referenceID": 2, "context": "However, to our knowledge, few efforts, except the work [3], [32], [36], have been made to consider the bisimulation for fuzzy automata, or more generally, fuzzy systems.", "startOffset": 56, "endOffset": 59}, {"referenceID": 31, "context": "However, to our knowledge, few efforts, except the work [3], [32], [36], have been made to consider the bisimulation for fuzzy automata, or more generally, fuzzy systems.", "startOffset": 61, "endOffset": 65}, {"referenceID": 35, "context": "However, to our knowledge, few efforts, except the work [3], [32], [36], have been made to consider the bisimulation for fuzzy automata, or more generally, fuzzy systems.", "startOffset": 67, "endOffset": 71}, {"referenceID": 31, "context": "Following the algebraic theory of classical automata, Petkovi\u0107 introduced the concept of congruence for fuzzy automata in [32].", "startOffset": 122, "endOffset": 126}, {"referenceID": 2, "context": "Recently, Buchholz has put forward a general definition of bisimulation for weighted automata over a generic semiring which includes well-known automata models as specific cases [3].", "startOffset": 178, "endOffset": 181}, {"referenceID": 2, "context": "By instantiating the semiring in the framework of [3] to the closed unit interval [0, 1] with binary operations max and min, Sun et al.", "startOffset": 50, "endOffset": 53}, {"referenceID": 0, "context": "By instantiating the semiring in the framework of [3] to the closed unit interval [0, 1] with binary operations max and min, Sun et al.", "startOffset": 82, "endOffset": 88}, {"referenceID": 35, "context": "investigated the forward and backward bisimulations for fuzzy automata [36].", "startOffset": 71, "endOffset": 75}, {"referenceID": 2, "context": "It is worth noting that the methods in [3], [32], [36] are applicable only to finite (finite-state and finite-event) fuzzy systems.", "startOffset": 39, "endOffset": 42}, {"referenceID": 31, "context": "It is worth noting that the methods in [3], [32], [36] are applicable only to finite (finite-state and finite-event) fuzzy systems.", "startOffset": 44, "endOffset": 48}, {"referenceID": 35, "context": "It is worth noting that the methods in [3], [32], [36] are applicable only to finite (finite-state and finite-event) fuzzy systems.", "startOffset": 50, "endOffset": 54}, {"referenceID": 20, "context": "For example, the dynamic fuzzy systems studied in [21], fuzzy discrete event systems modeled by max-product automata [25], and fuzzy stochastic automata [34] involve an infinite number of states and fuzzy automata for computing with all words in [8] require an infinite number of events.", "startOffset": 50, "endOffset": 54}, {"referenceID": 24, "context": "For example, the dynamic fuzzy systems studied in [21], fuzzy discrete event systems modeled by max-product automata [25], and fuzzy stochastic automata [34] involve an infinite number of states and fuzzy automata for computing with all words in [8] require an infinite number of events.", "startOffset": 117, "endOffset": 121}, {"referenceID": 33, "context": "For example, the dynamic fuzzy systems studied in [21], fuzzy discrete event systems modeled by max-product automata [25], and fuzzy stochastic automata [34] involve an infinite number of states and fuzzy automata for computing with all words in [8] require an infinite number of events.", "startOffset": 153, "endOffset": 157}, {"referenceID": 7, "context": "For example, the dynamic fuzzy systems studied in [21], fuzzy discrete event systems modeled by max-product automata [25], and fuzzy stochastic automata [34] involve an infinite number of states and fuzzy automata for computing with all words in [8] require an infinite number of events.", "startOffset": 246, "endOffset": 249}, {"referenceID": 19, "context": "mal models\u2014labeled transition systems\u2014in computer science [20].", "startOffset": 58, "endOffset": 62}, {"referenceID": 10, "context": "FTSs and some probabilistic transition systems [11], [16], [26] seem to be similar, but they have two major differences: One is that when a probabilistic transition system is put into operation, there is no vagueness in the current state, next state, and the extent to which they will be activated.", "startOffset": 47, "endOffset": 51}, {"referenceID": 15, "context": "FTSs and some probabilistic transition systems [11], [16], [26] seem to be similar, but they have two major differences: One is that when a probabilistic transition system is put into operation, there is no vagueness in the current state, next state, and the extent to which they will be activated.", "startOffset": 53, "endOffset": 57}, {"referenceID": 25, "context": "FTSs and some probabilistic transition systems [11], [16], [26] seem to be similar, but they have two major differences: One is that when a probabilistic transition system is put into operation, there is no vagueness in the current state, next state, and the extent to which they will be activated.", "startOffset": 59, "endOffset": 63}, {"referenceID": 2, "context": "We define the notion of bisimulation between FTSs based on a general binary relation, which is not necessarily an equivalence relation as required in [3], [32], [36] and makes it more convenient for bisimulation checking.", "startOffset": 150, "endOffset": 153}, {"referenceID": 31, "context": "We define the notion of bisimulation between FTSs based on a general binary relation, which is not necessarily an equivalence relation as required in [3], [32], [36] and makes it more convenient for bisimulation checking.", "startOffset": 155, "endOffset": 159}, {"referenceID": 35, "context": "We define the notion of bisimulation between FTSs based on a general binary relation, which is not necessarily an equivalence relation as required in [3], [32], [36] and makes it more convenient for bisimulation checking.", "startOffset": 161, "endOffset": 165}, {"referenceID": 2, "context": "Due to the relaxation of relation, we have to consider the so-called correlational pairs in place of equivalence classes in [3], [32], [36].", "startOffset": 124, "endOffset": 127}, {"referenceID": 31, "context": "Due to the relaxation of relation, we have to consider the so-called correlational pairs in place of equivalence classes in [3], [32], [36].", "startOffset": 129, "endOffset": 133}, {"referenceID": 35, "context": "Due to the relaxation of relation, we have to consider the so-called correlational pairs in place of equivalence classes in [3], [32], [36].", "startOffset": 135, "endOffset": 139}, {"referenceID": 0, "context": "subset A of X , is defined by a function assigning to each element x of X a value A(x) in [0, 1].", "startOffset": 90, "endOffset": 96}, {"referenceID": 0, "context": "For any family \u03bbi, i \u2208 I , of elements of [0, 1], we write \u2228i\u2208I\u03bbi or \u2228{\u03bbi : i \u2208 I} for the supremum of {\u03bbi : i \u2208 I}, and \u2227i\u2208I\u03bbi or \u2227{\u03bbi : i \u2208 I} for the infimum.", "startOffset": 42, "endOffset": 48}, {"referenceID": 19, "context": "[20]).", "startOffset": 0, "endOffset": 4}, {"referenceID": 0, "context": "In the obvious way, we can identify any fuzzy transition function \u03b4 : S \u00d7 A \u2212\u2192 F(S) with a fuzzy relation \u2212\u2192\u03b4: S \u00d7A\u00d7 S \u2212\u2192 [0, 1].", "startOffset": 122, "endOffset": 128}, {"referenceID": 21, "context": "Among others, discrete probabilistic transition systems introduced by Larsen and Skou [22] are the most relevant to FTSs above; they can be viewed as a special FTS that has probability distributions as the codomain of fuzzy transition function.", "startOffset": 86, "endOffset": 90}, {"referenceID": 2, "context": "on a parallel composition operator on FTSs, in which the synchronization occurs on a set of synchronizing labels; more operators can be found in [3], [40].", "startOffset": 145, "endOffset": 148}, {"referenceID": 39, "context": "on a parallel composition operator on FTSs, in which the synchronization occurs on a set of synchronizing labels; more operators can be found in [3], [40].", "startOffset": 150, "endOffset": 154}, {"referenceID": 0, "context": "tion tools for dynamic fuzzy systems such as various fuzzy automata [1], [8], [12], [28], [34], [41], fuzzy Petri nets [6], [9], [31], fuzzy control systems [10], [15], [30], fuzzy discrete event systems [7], [13], [25], [33], neuro-fuzzy systems [17], and so on.", "startOffset": 68, "endOffset": 71}, {"referenceID": 7, "context": "tion tools for dynamic fuzzy systems such as various fuzzy automata [1], [8], [12], [28], [34], [41], fuzzy Petri nets [6], [9], [31], fuzzy control systems [10], [15], [30], fuzzy discrete event systems [7], [13], [25], [33], neuro-fuzzy systems [17], and so on.", "startOffset": 73, "endOffset": 76}, {"referenceID": 11, "context": "tion tools for dynamic fuzzy systems such as various fuzzy automata [1], [8], [12], [28], [34], [41], fuzzy Petri nets [6], [9], [31], fuzzy control systems [10], [15], [30], fuzzy discrete event systems [7], [13], [25], [33], neuro-fuzzy systems [17], and so on.", "startOffset": 78, "endOffset": 82}, {"referenceID": 27, "context": "tion tools for dynamic fuzzy systems such as various fuzzy automata [1], [8], [12], [28], [34], [41], fuzzy Petri nets [6], [9], [31], fuzzy control systems [10], [15], [30], fuzzy discrete event systems [7], [13], [25], [33], neuro-fuzzy systems [17], and so on.", "startOffset": 84, "endOffset": 88}, {"referenceID": 33, "context": "tion tools for dynamic fuzzy systems such as various fuzzy automata [1], [8], [12], [28], [34], [41], fuzzy Petri nets [6], [9], [31], fuzzy control systems [10], [15], [30], fuzzy discrete event systems [7], [13], [25], [33], neuro-fuzzy systems [17], and so on.", "startOffset": 90, "endOffset": 94}, {"referenceID": 40, "context": "tion tools for dynamic fuzzy systems such as various fuzzy automata [1], [8], [12], [28], [34], [41], fuzzy Petri nets [6], [9], [31], fuzzy control systems [10], [15], [30], fuzzy discrete event systems [7], [13], [25], [33], neuro-fuzzy systems [17], and so on.", "startOffset": 96, "endOffset": 100}, {"referenceID": 5, "context": "tion tools for dynamic fuzzy systems such as various fuzzy automata [1], [8], [12], [28], [34], [41], fuzzy Petri nets [6], [9], [31], fuzzy control systems [10], [15], [30], fuzzy discrete event systems [7], [13], [25], [33], neuro-fuzzy systems [17], and so on.", "startOffset": 119, "endOffset": 122}, {"referenceID": 8, "context": "tion tools for dynamic fuzzy systems such as various fuzzy automata [1], [8], [12], [28], [34], [41], fuzzy Petri nets [6], [9], [31], fuzzy control systems [10], [15], [30], fuzzy discrete event systems [7], [13], [25], [33], neuro-fuzzy systems [17], and so on.", "startOffset": 124, "endOffset": 127}, {"referenceID": 30, "context": "tion tools for dynamic fuzzy systems such as various fuzzy automata [1], [8], [12], [28], [34], [41], fuzzy Petri nets [6], [9], [31], fuzzy control systems [10], [15], [30], fuzzy discrete event systems [7], [13], [25], [33], neuro-fuzzy systems [17], and so on.", "startOffset": 129, "endOffset": 133}, {"referenceID": 9, "context": "tion tools for dynamic fuzzy systems such as various fuzzy automata [1], [8], [12], [28], [34], [41], fuzzy Petri nets [6], [9], [31], fuzzy control systems [10], [15], [30], fuzzy discrete event systems [7], [13], [25], [33], neuro-fuzzy systems [17], and so on.", "startOffset": 157, "endOffset": 161}, {"referenceID": 14, "context": "tion tools for dynamic fuzzy systems such as various fuzzy automata [1], [8], [12], [28], [34], [41], fuzzy Petri nets [6], [9], [31], fuzzy control systems [10], [15], [30], fuzzy discrete event systems [7], [13], [25], [33], neuro-fuzzy systems [17], and so on.", "startOffset": 163, "endOffset": 167}, {"referenceID": 29, "context": "tion tools for dynamic fuzzy systems such as various fuzzy automata [1], [8], [12], [28], [34], [41], fuzzy Petri nets [6], [9], [31], fuzzy control systems [10], [15], [30], fuzzy discrete event systems [7], [13], [25], [33], neuro-fuzzy systems [17], and so on.", "startOffset": 169, "endOffset": 173}, {"referenceID": 6, "context": "tion tools for dynamic fuzzy systems such as various fuzzy automata [1], [8], [12], [28], [34], [41], fuzzy Petri nets [6], [9], [31], fuzzy control systems [10], [15], [30], fuzzy discrete event systems [7], [13], [25], [33], neuro-fuzzy systems [17], and so on.", "startOffset": 204, "endOffset": 207}, {"referenceID": 12, "context": "tion tools for dynamic fuzzy systems such as various fuzzy automata [1], [8], [12], [28], [34], [41], fuzzy Petri nets [6], [9], [31], fuzzy control systems [10], [15], [30], fuzzy discrete event systems [7], [13], [25], [33], neuro-fuzzy systems [17], and so on.", "startOffset": 209, "endOffset": 213}, {"referenceID": 24, "context": "tion tools for dynamic fuzzy systems such as various fuzzy automata [1], [8], [12], [28], [34], [41], fuzzy Petri nets [6], [9], [31], fuzzy control systems [10], [15], [30], fuzzy discrete event systems [7], [13], [25], [33], neuro-fuzzy systems [17], and so on.", "startOffset": 215, "endOffset": 219}, {"referenceID": 32, "context": "tion tools for dynamic fuzzy systems such as various fuzzy automata [1], [8], [12], [28], [34], [41], fuzzy Petri nets [6], [9], [31], fuzzy control systems [10], [15], [30], fuzzy discrete event systems [7], [13], [25], [33], neuro-fuzzy systems [17], and so on.", "startOffset": 221, "endOffset": 225}, {"referenceID": 16, "context": "tion tools for dynamic fuzzy systems such as various fuzzy automata [1], [8], [12], [28], [34], [41], fuzzy Petri nets [6], [9], [31], fuzzy control systems [10], [15], [30], fuzzy discrete event systems [7], [13], [25], [33], neuro-fuzzy systems [17], and so on.", "startOffset": 247, "endOffset": 251}, {"referenceID": 18, "context": "For comparison, we are ready to review a kind of fuzzy automata, which has been known as max-min automata in some mathematical literature [19], [35].", "startOffset": 138, "endOffset": 142}, {"referenceID": 34, "context": "For comparison, we are ready to review a kind of fuzzy automata, which has been known as max-min automata in some mathematical literature [19], [35].", "startOffset": 144, "endOffset": 148}, {"referenceID": 2, "context": "In the literature [3], [32], [36], the notion of bisimulation has been extended to fuzzy finite automata, in which it is an equivalence relation on the state set of the underlying automaton.", "startOffset": 18, "endOffset": 21}, {"referenceID": 31, "context": "In the literature [3], [32], [36], the notion of bisimulation has been extended to fuzzy finite automata, in which it is an equivalence relation on the state set of the underlying automaton.", "startOffset": 23, "endOffset": 27}, {"referenceID": 35, "context": "In the literature [3], [32], [36], the notion of bisimulation has been extended to fuzzy finite automata, in which it is an equivalence relation on the state set of the underlying automaton.", "startOffset": 29, "endOffset": 33}, {"referenceID": 2, "context": "[3], [32], [36]).", "startOffset": 0, "endOffset": 3}, {"referenceID": 31, "context": "[3], [32], [36]).", "startOffset": 5, "endOffset": 9}, {"referenceID": 35, "context": "[3], [32], [36]).", "startOffset": 11, "endOffset": 15}, {"referenceID": 36, "context": "The following important theorem is due to Tarski [37].", "startOffset": 49, "endOffset": 53}, {"referenceID": 2, "context": "For some fuzzy finite automata, corresponding algorithms for computing \u223c on one and the same fuzzy finite automaton have been provided in [3], [32], [36].", "startOffset": 138, "endOffset": 141}, {"referenceID": 31, "context": "For some fuzzy finite automata, corresponding algorithms for computing \u223c on one and the same fuzzy finite automaton have been provided in [3], [32], [36].", "startOffset": 143, "endOffset": 147}, {"referenceID": 35, "context": "For some fuzzy finite automata, corresponding algorithms for computing \u223c on one and the same fuzzy finite automaton have been provided in [3], [32], [36].", "startOffset": 149, "endOffset": 153}, {"referenceID": 2, "context": "To compare two fuzzy systems at a finer level of \u201csemantical sameness\u201d, bisimulation defined for fuzzy finite automata [3], [32], [36] has been extended to general FTSs.", "startOffset": 119, "endOffset": 122}, {"referenceID": 31, "context": "To compare two fuzzy systems at a finer level of \u201csemantical sameness\u201d, bisimulation defined for fuzzy finite automata [3], [32], [36] has been extended to general FTSs.", "startOffset": 124, "endOffset": 128}, {"referenceID": 35, "context": "To compare two fuzzy systems at a finer level of \u201csemantical sameness\u201d, bisimulation defined for fuzzy finite automata [3], [32], [36] has been extended to general FTSs.", "startOffset": 130, "endOffset": 134}, {"referenceID": 5, "context": "In [6], we have promised to compare the expressiveness of the two formal models of computing with words established in [6], [8] by utilizing bisimulation.", "startOffset": 3, "endOffset": 6}, {"referenceID": 5, "context": "In [6], we have promised to compare the expressiveness of the two formal models of computing with words established in [6], [8] by utilizing bisimulation.", "startOffset": 119, "endOffset": 122}, {"referenceID": 7, "context": "In [6], we have promised to compare the expressiveness of the two formal models of computing with words established in [6], [8] by utilizing bisimulation.", "startOffset": 124, "endOffset": 127}, {"referenceID": 5, "context": "In the study, we have found that it is necessary to consider bisimulation for infinite fuzzy systems since the above formal models of computing with words may have infinite labels, and moreover, we have realized that the nondeterminism in fuzzy Petri nets for computing with words [6] is different from those in fuzzy automata.", "startOffset": 281, "endOffset": 284}, {"referenceID": 10, "context": "Following [11], we say that a relation R \u2286 S1\u00d7S2 is z-closed if for all s, s\u2032 \u2208 S1 and t, t\u2032 \u2208 S2, we have (s, t\u2032) \u2208 R whenever (s, t) \u2208 R, (s\u2032, t) \u2208 R, and (s\u2032, t\u2032) \u2208 R.", "startOffset": 10, "endOffset": 14}], "year": 2010, "abstractText": "There has been a long history of using fuzzy language equivalence to compare the behavior of fuzzy systems, but the comparison at this level is too coarse. Recently, a finer behavioral measure, bisimulation, has been introduced to fuzzy finite automata. However, the results obtained are applicable only to finite-state systems. In this paper, we consider bisimulation for general fuzzy systems which may be infinite-state or infiniteevent, by modeling them as fuzzy transition systems. To help understand and check bisimulation, we characterize it in three ways by enumerating whole transitions, comparing individual transitions, and using a monotonic function. In addition, we address composition operations, subsystems, quotients, and homomorphisms of fuzzy transition systems and discuss their properties connected with bisimulation. The results presented here are useful for comparing the behavior of general fuzzy systems. In particular, this makes it possible to relate an infinite fuzzy system to a finite one, which is easier to analyze, with the same behavior.", "creator": "LaTeX with hyperref package"}}}