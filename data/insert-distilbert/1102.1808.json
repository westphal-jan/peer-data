{"id": "1102.1808", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "9-Feb-2011", "title": "From Machine Learning to Machine Reasoning", "abstract": "a plausible inference definition proof of \" reasoning \" ability could be \" algebraically manipulating : previously acquired knowledge in order to answer a potential new question \". this definition covers first - order logical inference or automatic probabilistic inference. it also includes much simpler manipulations commonly become used to build large learning systems. for instance, we can build an optical character recognition system performed by first training for a character segmenter, an isolated character recognizer, and a language model, using appropriate labeled training sets. adequately concatenating these modules measuring and observing fine thus tuning the resulting system can be viewed as creating an exact algebraic operation in a space of models. the resulting model answers a new question, that is, converting the image of a text page into a computer readable text.", "histories": [["v1", "Wed, 9 Feb 2011 08:25:36 GMT  (1213kb)", "http://arxiv.org/abs/1102.1808v1", "15 pages"], ["v2", "Thu, 10 Feb 2011 03:18:15 GMT  (1248kb)", "http://arxiv.org/abs/1102.1808v2", "15 pages - minor changes for version 2"], ["v3", "Fri, 11 Feb 2011 05:10:57 GMT  (1248kb)", "http://arxiv.org/abs/1102.1808v3", "15 pages - fix broken pagination in v2"]], "COMMENTS": "15 pages", "reviews": [], "SUBJECTS": "cs.AI cs.LG", "authors": ["leon bottou"], "accepted": false, "id": "1102.1808"}, "pdf": {"name": "1102.1808.pdf", "metadata": {"source": "CRF", "title": "From Machine Learning to Machine Reasoning", "authors": ["L\u00e9on Bottou"], "emails": [], "sections": [{"heading": null, "text": "A plausible definition of \"reasoning\" could be \"algebraically manipulating previously acquired knowledge in order to answer a new question\". This definition covers first-order logical inference or probabilistic inference. It also includes much simpler manipulations commonly used to build large learning systems. For instance, we can build an optical character recognition system by first training a character segmenter, an isolated character recognizer, and a language model, using appropriate labelled training sets. Adequately concatenating these modules and fine tuning the resulting system can be viewed as an algebraic operation in a space of models. The resulting model answers a new question, that is, converting the image of a text page into a computer readable text.\nThis observation suggests a conceptual continuity between algebraically rich inference systems, such as logical or probabilistic inference, and simple manipulations, such as the mere concatenation of trainable learning systems. Therefore, instead of trying to bridge the gap between machine learning systems and sophisticated \"all-purpose\" inference mechanisms, we can instead algebraically enrich the set of manipulations applicable to training systems, and build reasoning capabilities from the ground up."}, {"heading": "1. Introduction", "text": "Since learning and reasoning are two essential abilities associated with intelligence, machine learning and machine reasoning have both received much attention during the short history of computer science. The statistical nature of learning is now well understood (e.g., Vapnik, 1995). Statistical machine learning methods are now commonplace (NIPS, 1987-2010.) An internet search for \u201csupport vector machines\u201d returns more than two million web pages. The nature of reasoning has proven more elusive. Although computer algorithms for logical inference (Robinson, 1965) share their roots with the foundations of mathematics, converting ordinary data into a consistent set of logical expressions has proved very challenging: searching the discrete spaces of symbolic formulas often leads to a combinatorial explosion (Lighthill, 1973). Computer algorithms for general probabilistic inference (Pearl, 1988) still suffer from unfavorable computational properties (Roth, 1996). However, there are practical algorithms for many special cases of interest. These algorithms have gained considerable popularity in the machine learning community. This practicality comes at the price of reduced expressive capabilities: since probabilistic inference is a mathematical construction, it is easily described using first order logic; the converse is not true. In particular, expressing causality with first order logic is very simple, expressing causality with probabilities is challenging (Pearl, 2000).\nHuman reasoning displays neither the limitations of logical inference nor those of probabilistic inference.\nThe ability to reason is often confused with the ability to make logical inferences. When we observe a visual scene, when we hear a complex sentence, we are able to explain in formal terms the relation of the objects in the scene, or the precise meaning of the sentence components. However, there is no evidence that such a formal analysis necessarily takes place: we see a scene, we hear a sentence, and we just know what they mean. This suggests the existence of a middle layer, already a form of reasoning, but not yet formal or logical. Investigating informal reasoning is attractive because we hope to avoid the computational complexity issues associated with combinatorial searches in the vast space of discrete logic propositions.\nMinsky and Papert (1969) have shown that simple cognitive tasks cannot be implemented using linear threshold functions but require multiple layers of computation. Recent advances have uncovered effective strategies to train such deep models (Hinton et al., 2006). Deep learning has attracted considerable interest in the machine learning community. Regular workshops have been held during the NIPS and ICML conferences since 2007. The ability to train deep machine learning models appears to be related to the appropriate definition of unsupervised auxiliary tasks that help discovering internal representations in the inner layers of the models (Bengio et al., 2007; Weston et al., 2008.) Deep structures had been trained in the past using supervised intermediate tasks (e.g., Bottou et al., 1997; LeCun et al., 1998.) The surprise of deep learning is that the same results can be achieved using very loosely related auxiliary tasks. Deep learning is therefore intimately related to multi-task learning (Caruana, 1997.)\nThis document presents an idea that results from a long maturation (Bottou, 2008). Both deep learning and multi-task learning show that we can leverage auxiliary tasks to help solving a task of interest. This apparently simple idea can be interpreted as a rudimentary form of reasoning. Enriching this algebraic structure then leads to higher forms of reasoning. This provides a path to build reasoning abilities into machine learning systems from the ground up."}, {"heading": "2. Auxiliary tasks", "text": "One frequently mentioned problem is the scarcity of labeled data. This assertion is biased because we usually build a learning machine to accomplish a valuable task. The corresponding training labels are then expensive and therefore scarce. Conversely, labels available in abundance are often associated with tasks that are not very valuable. But this does not make these abundant labels useless: in the vicinity of an interesting and valuable task, less valuable tasks provide opportunities to approach the initial problem.\nConsider the task of identifying persons from face images. Despite the increasing availability of collaborative image tagging schemes (von Ahn, 2006), it certainly remains expensive to collect and label millions of training images representing the face of each subject with a good variety of positions and contexts. However, it is easy to collect training data for the slightly different task of telling whether two faces in images represent the same person or not (Miller, 2006): two faces in the same picture are likely to belong to different persons; two faces in successive video frames are likely to belong to the same person. These two tasks have much in common: image analysis primitives, feature extraction, part recognizers trained on the auxiliary task can certainly help solving the original task.\nFigure 1 outlines a transfer learning strategy involving three trainable modules. The preprocessor P computes a compact face representation from the image. The comparator D compares the representations associated with two images. The classifier C produces the person label associated with an image representation. We first assemble two instances of the preprocessor P and one comparator D and train the resulting model using the abundant labels for the auxiliary task. Training simply works by minimizing a regularized loss function using stochastic gradient descent. Then we assemble another instance of the preprocessor P with the classifier C and train the resulting model using a restrained number of labeled examples for the original task. This works because the preprocessor P already performs useful tasks and vastly simplifies the job of the classifier C. Alternatively we could simultaneously train both assemblages by making sure that all instances of the preprocessor share the same parameters. Comparable transfer learning systems have achieved high accuracies on vision benchmarks (e.g., Ahmed et al., 2008.)\nFigure 1 \u2013 Training a face recognizer.\nP\nP\nD y/n P johnC\nWe have designed a structurally more complex system to address various natural language processing benchmark tasks (Collobert et al., 2007, 2011). The word embedding module W computes a 50-dimensional representation for each vocabulary word. Fixed length sequences of words are extracted from a large corpus (900M words). Incorrect sequences are created by randomly replacing the central word. The auxiliary task consists in producing a score whose magnitude indicates whether a sequence of words is genuine or incorrect. An assemblage of several word embedding module W and a ranking module R is trained on this task. The benchmark tasks are then trained using smaller corpora of labelled sentences. Each sentence is processed by assembling the word embedding components W and routing their outputs, together with ancillary information, to classifiers that produce tags for the word(s) of interest (figure 2.)\nThis system reaches near state-of-the-art performance while running hundreds of times faster than natural language processing systems with comparable performance. Many natural language processing systems rely on the considerable linguistic knowledge that went into the manual design of task specific input features. The system described above learns useful features using an essentially unsupervised task trained on a very large corpus. Figure 3 illustrates the quality of the resulting word representation."}, {"heading": "3. Reasoning revisited", "text": "Although modular learning systems and their training algorithms have been researched extensively (e.g., Bottou and Gallinari, 1991), little attention has been paid to the rules that describe how to assemble trainable modules in order to address a particular task. In fact, these composition rules play an extremely important role. The dictionary of elementary trainable modules and the composition operators form a simple algebraic system on a space of models. The composition rules describe the algebraic manipulations that let us combine previously acquired knowledge \u2013 in the form of models previously trained on auxiliary tasks \u2013 in order to create a model that addresses a new task.\nI would like at this point to draw a bold parallel: \u201calgebraic manipulation of previously acquired knowledge in order to answer a new question\u201d is a plausible definition of the word \u201creasoning\u201d. There are significant differences: conventional reasoning operates on \u201cpremises and conclusions\u201d; composition rules operate on\n\u201ctrainable modules\u201d. Yet we can easily argue that the history of mathematics teaches that algebraic structures are more significant than the objects on which they operate. In both the face recognition and the natural language processing examples, the implicit composition rules derive from the assumption that internal representations that can be learned on the auxiliary task and can benefit the task of interest. These internal representations play the same role as reasoning abstractions, that is, concepts that cannot be observed directly but are assumed relevant for multiple problems.\nComposition rules can be described with very different levels of sophistication. Like the face recognition and the natural language processing examples, most works discussing multi-task learning (Caruana, 1997) construct adhoc combinations justified by a semantic interpretation of the internal representations. Works discussing structured learning systems (e.g., Bakir et al., 2007) often provide more explicit rules. For instance, graph transformer networks (Bottou et al., 1997; LeCun et al., 1998, section IV) construct specific recognition and training models for each input image using graph transduction algorithms. The specification of the graph transducers then should be viewed as a description of the composition rules (figure 5)."}, {"heading": "4. Probabilistic Models", "text": "The rich algebraic structure of probability theory plays an important role in the appeal of probabilistic models in machine learning because it tells how to combine conditional probability distributions and how to interpret these combinations. However, in order to construct an algebraic structure of probabilistic models, it is necessary to also discuss how probability distributions are parametrized.\nGraphical models (Pearl, 1988) describe the factorization of a joint probability distribution into elementary conditional distributions with specific conditional independence assumptions. This factorization suggests to individually parametrize these elementary conditional distribution. The probabilistic inference rules then induce an algebraic structure on the space of conditional probability distribution models describing relations between arbitrary subsets of random variables.\nMany refinements have been devised to make the parametrization more explicit. The plate notation (Buntine, 1994) compactly represents large graphical models with repeated structures that usually share parameters. Figure 5 shows how treating the parameters like a random variable makes the parametrization even more explicit. More\nrecent works propose considerably richer languages to describe large graphical probabilistic models. Probabilistic Relational Models (Friedman et al., 1999) and Relational Dependency Networks (Neville and Jensen, 2003) derive graphical probabilistic models from frame-based knowledge bases. Markov Logic Networks (Richardson and Domingos, 2006) derive graphical probabilistic models from the clauses of a first order logic knowledge base. Such high order languages for describing probabilistic models are expressions of the composition rules described in the previous section."}, {"heading": "5. Reasoning systems", "text": "We are clearly drifting away from the statistical approach because we are no longer fitting a simple statistical model to the data. In fact, we are dealing with a more complex object composed of (a) an algebraic space of models, and (b) composition rules that establish a homomorphic correspondence between the space of models and the space of questions of interest. We call such an object a \u201creasoning system.\u201d\nA potentially surprising consequence of this definition is the arbitrary nature of a reasoning system. Just like statistical models, reasoning systems vary in expressive power, in predictive abilities, and in computational requirements. A few salient examples can illustrate this diversity:\n\u2022 First order logic reasoning \u2013 Consider a space of models composed of functions that predict the truth value of a first logic formula as a function of the potential values of its free variables. Such functions are usually represented by collections of fully instantiated predicates. This space of functions is highly constrained by the algebraic structure of the first order logic formulas: if we know some of these functions, we can apply logical inference to deduct or constrain functions associated with other formulas and therefore representing different tasks. First order logic has very high expressive power because the bulk of mathematics can formalized as first order logic statements (Hilbert and Ackermann, 1928.) This is not sufficient, however, to express the subtleties of natural language: every first order logic formula is easily expressed in natural language; the converse is not true. Finally, first order logic typically leads to computationally expensive algorithms because they often involve combinatorial searches in vast discrete spaces.\n\u2022 Probabilistic reasoning \u2013 Consider the space of models formed by all the conditional probability distributions associated with a predefined collection of random variables. These conditional distributions are highly constrained by the algebraic properties of the probability theory: if we know a subset of these conditional distributions, we can apply Bayesian inference to deduct or constrain additional conditional distributions and therefore answer different questions (Pearl, 1988). The continuous nature of probability theory provides opportunities to avoid computationally expensive discrete combinatorial searches. These improved computational requirements come at the price of reduced expressive capabilities: since probabilistic inference is a mathematical construction, it is easily described using first order logic; the converse is not true. Despite this limitation, inference in probabilistic models is a popular machine learning topic.\n\u2022 Causal reasoning \u2013 Causality is a well known expressive limitation of probabilistic reasoning. For instance, we can establish a correlation between the events \u201cit is raining\u201d and \u201cpeople carry open umbrellas\u201d. This correlation is predictive: if people carry open umbrellas, we can be pretty certain that it is raining. But this correlation tells us little about the consequences of an intervention: banning umbrellas will not stop the rain. This is a serious limitation because causes and effects play a central role\nin our understanding of the world. Pearl (2003) proposes to address this issue by enriching the probabilistic machinery with a new construction: whereas P(X|Y=y) represents the distribution of random variable X given the observation Y=y, the new construction P(X|do(Y=y)) represents the distribution of X when an intervention enforces the condition Y=y.\n\u2022 Newtonian mechanics \u2013 Classical mechanics is an extremely successful example of causal reasoning system. Consider the motion of point masses in various experimental setups. Newton's laws define the abstract concept of a force as the cause explaining any deviation from the uniform motion. The second and third laws then describe how to compute the consequences of interventions such as applying a new force or transferring a point mass from one experimental setup into another. For instance, a first setup could be a weighting device that measures the relative masses of point masses A and B; and a second setup could involve the collision of point masses A and B.\n\u2022 Spatial reasoning \u2013 How would a visual scene change if one changes the viewpoint or if one manipulates one of the objects in the scene? Such questions clearly obey algebraic constraints that derive from the bi-dimensional projection and from the relations between objects. Spatial reasoning does not require the full logic apparatus but certainly benefits from the definition of specific algebraic constructions (Aiello et al., 2007.)\n\u2022 Social reasoning \u2013 Changes of viewpoint also play an important role in social interactions. Placing oneself in somebody else's shoes allows us to understand the beliefs and the intents of other members of the society and therefore plays an essential cognitive role (Baron-Cohen, 1997). It is certainly challenging, but conceivable, to approach social interactions in terms of such processes.\n\u2022 Non-falsifiable reasoning \u2013 History provides countless examples of reasoning systems with questionable predictive capabilities. Mythology interprets the world by applying a social reasoning systems to abstract deities. Astrology attempts interprets social phenomena by reasoning about the motion of planets. Just like non-falsifiable statistical models, non-falsifiable reasoning systems are unlikely to have useful predictive capabilities (Popper, 1959; Vapnik, 1994.)\nThere are two ways to face such a universe of reasoning systems. One approach would be to identify a single reasoning framework strictly more powerful than all others. Whether such a framework exists and whether it leads to computationally feasible algorithms is unknown. Symbolic reasoning (e.g., with first order logic) did not fulfill these hopes (Lighthill, 1973). Probabilistic reasoning is more practical but considerably less expressive. The second approach is to embrace this diversity as an opportunity to better match the reasoning models to the applicative domain of interest: \u201cwhen solving a given problem, try to avoid solving a more general problem as an intermediate step\u201d (Vapnik, 1994).\nIt is therefore desirable to map the universe of reasoning systems. What are the potential algebraic structures? What is their footprint in terms of expressive power, suitability for specific applications, computational requirements, and predictive abilities? Unfortunately we cannot expect such theoretical advances on schedule. We can, however, nourish our intuitions by empirically exploring the capabilities of algebraic structures designed for specific applicative domains.\nThe replication of essential human cognitive processes such as scene analysis, language understanding, and social interactions forms an important class of applications. These processes probably include a form of reasoning because we are able, after the facts, to explain our conclusions with logical arguments. However, the actual processes usually happen without conscious involvement, suggesting that the full complexity of logic reasoning is not required. Which algebraic reasoning primitive are suitable for such applications?\nThe following sections describe more specific ideas investigating reasoning systems suitable for natural language processing and vision tasks. It defines trainable modules that provide the means to represent arbitrary hierarchical structures using fixed size representation vectors. The discussion includes preliminary results on natural language processing tasks and potential directions for vision tasks. Additional modules working on this space or representations are then proposed. The section concludes with the description of conceptual and algorithmic issues associated with learning algorithms operating in this space."}, {"heading": "6 Association and dissociation", "text": "We have already demonstrated the possibility to learn salient word embeddings using an essentially non supervised task (Collobert et. al., 2011). Can we learn salient embeddings for any meaningful segment of a sentence?\nWe consider again a collection of trainable modules. The word embedding module W computes a continuous representation for each word of the dictionary. In preliminary experiments, this is a simple lookup table that specifies a vector in a 50-dimensional representation space for each word in the dictionary. The coordinates of these vectors are determined by the training algorithm. The association module is a trainable function that takes two vectors in the representation space and produces a single vector in the same space, which is expected to represent the association of the two input vectors.\nGiven a sentence segment composed of n words, figure 6 shows how n-1 applications of the association module reduce the sentence segment to a single vector in the representation space. We would like this vector to be a representation of the meaning of the sentence. We would also like each intermediate result to represent the meaning of the corresponding sentence fragment.\nThere are many ways to sequence the applications of the association module, each associated with a particular way of bracketing the sentence into meaningful segments. Figure 6, for instance, corresponds to the standard bracketing of the sentence \u201c((the cat) (sat (on (the mat))\u201d. In order to determine which bracketing splits the sentence into the most meaningful segments, we introduce an additional saliency scoring module R, which takes as input a vector in the representation space and produces a score whose magnitude is expected to measure how meaningful is the corresponding sentence segment (figure 7).\nApplying the saliency scoring module R to all intermediate results and summing all the resulting scores yields a global score measuring how meaningful is a particular way to bracket a sentence. The most meaningful way to recursively apply the association module can be determined by maximizing this global score. Specific parsing algorithms are described later in this document.\nThe challenge is to train these modules in order to have them achieve the desired function.\nFigure 8 illustrates a non-supervised training technique inspired by Collobert et. al. (2007, 2011). This is again a stochastic gradient procedure. During each iteration, a short sentence segment is randomly picked from a large text corpus and bracketed as described above (figure 8, left). An arbitrary word is then replaced by a random word from the vocabulary. As a consequence certain intermediate results in the representation space are likely to correspond to meaningless sentence fragments. We would like to make the associated scores smaller than the scores associated with the genuine sentence segments. This can be expressed by an adequate ranking loss\nfunction. The parameters of all modules are then adjusted using a simple gradient descent step. Repeating this iterative procedure corresponds to the stochastic gradient descent optimization of a well defined loss function. However, there is evidence that training works much faster if one starts with short segments and a limited vocabulary size.\nPreliminary results have been obtained using a similar procedure (Etter, 2009). Sentence segments of length five were extracted from a dump of the English Wikipedia (600M words). The vocabulary was restricted to the 1000 most frequent words initialized with the Collobert (2011) embeddings. The initial sentence segment brackets were constructed randomly. In order to investigate how the resulting system maps word sequences into the representation space, all two-word sequences of the 500 most common words were constructed and mapped into the representation space. Figure 9 shows the closest neighbors in representation space of some of these sequences. This analysis was restricted to two-word sequences because the computational cost grows exponentially with the sequence length.\nSocher et al. (2010) independently trained a similar system in a supervised manner using the WSJ section of the annotated Penn TreeBank corpus. Although this is a much smaller corpus (about 1M words), they obtained meaningful representations. For instance they report that the phrases \u201cdecline to comment\u201d and \u201cwould not disclose the terms\u201d are close in the induced embedding space. The supervised training approach also provides a more objective way to assess the results since one can compare the bracketing performance of the system with that of established parsers. They report a bracketing performance that compares with that of statistical parsing systems of the 2000s.\nThere is much work left to accomplish, including (i) robustly addressing all the numerical aspects of the training procedure, (ii) seamlessly training using both supervised and unsupervised corpora, (iii) assessing the value of the sentence fragment representations using well known NLP benchmarks, and (iv) finding a better way to navigate these sentence fragment representations. We now introduce a new module to address this last problem.\nThe dissociation module D is the inverse of the association module, that is, a trainable function that computes two representation space vectors from a single vector. When its input is a meaningful output of the association module, its output should be the two inputs of the association module. Stacking one instance of the association\nThe ranking loss function tries to make the \u201cgood\u201d scores higher than the \u201cbad\u201d scores.\nmodule and one instance of the dissociation module is equivalent to an auto-encoder (figure 10, left). Recursively applying the dissociation module provides convenient means for traversing the hierarchical representations computed by a stack of association modules (figure 10, right). Such Recursive Auto-Associative Memory (RAAM) were proposed as a connectionist representation of infinite recursive structures (Pollack, 1990). Comparable ideas have been proposed by Hinton (1990).\nThe domain of definition of the dissociation module is not obvious. Given a vector in representation space, we need to know whether it results from the association of two more elementary vectors or whether it should be considered as atomic. Sperduti (1994) defines and compares various labelling schemes for this purpose. However, it is probably simpler to use the saliency scoring module (figure 7) to specify the domain of definition of the dissociation module: only sufficiently meaningful associations can be dissociated.\nThe definition of the dissociation module implies that the association module is injective: its output uniquely defines its inputs. This property is not enforced by the training procedures outlined in the previous subsection. It is therefore necessary to simultaneously train both the association and dissociation modules. This can be achieved by augmenting the earlier loss function (figure 8) with terms that apply the dissociation module to each presumed meaningful intermediate representation and measure how close its outputs are from the inputs of the corresponding association module.\nThe association and dissociation modules are similar to the primitives cons and car/cdr, which are the elementary operations to navigate lists and trees in the Lisp computer programming languages. These primitives can be used to construct and navigate arbitrary propositional logic expressions. The main difference is the nature of the representation space. Instead of a discrete space implemented with pointers and atoms, we are using vectors in a continuous representation space. One the one hand, the depth of the structure we can construct is limited by numerical precision issues. On the other hand, numerical proximity in the representation space is meaningful (see figures 3 and 9). This property reduces the computational cost of search algorithms. This is why the multilayer stochastic gradient algorithms are able to discover meaningful intermediate representations in the first place.\nOnce we have constructed the means to represent arbitrary phrases using a continuous representation, we can consider training a variety of modules. Consider for instance a trainable module that converts the representation of a sentence in the present tense into a sentence in the past tense. We can then parse an initial sentence and construct its representation, convert the representation into the representation of the same sentence in the past tense, and use the dissociation module to reconstruct the converted sentence. How far we can go with such manipulations is an entirely open question.\nAssociation and dissociation modules are not limited to natural language processing tasks. A number of state-ofthe-art systems for scene categorization and object recognition use a combination of strong local features, such as SIFT or HOG features, consolidated along a pyramidal structure (e.g, Lazebnik et al., 2006). Similar pyramidal structures have long been associated with the visual cortex (Hubel and Wiesel, 1962; Riesenhuber and Poggio, 2003). Convolutional neural networks exploit the same idea (e.g., LeCun et al., 1998, 2004). Interpreting such pyramidal structures as the recursive application of an association module is relatively straightforward (e.g., Lonardi et al., 1994).\nThe drawback of pyramidal structures is their fixed geometry. Since local features are aggregated according to a predefined pattern, the upper levels of the pyramid represent data with poor spatial and orientation accuracy. This is why pyramidal recognition systems often work poorly as image segmentation tools. For instance, we\nhave designed a large convolutional neural network (Grangier et al., 2009) to identify and label objects in the city scenes of the LabelMe corpus (Russel et al., 2008). This system provides good object recognition accuracies but coarse segmentations (figure 11.)\nThe parsing mechanism described for the natural language processing system provides an opportunity to work around this limitation. Let us attach intermediate representations to image regions. Initially the image regions are the small patches used for the computation of local features. Guided by a scoring module that evaluate the saliency of each potential association, the association module can then opportunistically aggregate the representations attached to two neighboring regions and produce a new representation attached with the union of the input regions. Training such a system could be achieved in both supervised and unsupervised modes, using the methods explained in the previous subsection.\nFurther algebraic constraints can enrich such a vision system. For instance, we could consider modules that transform vectors in representation space to account for affine transformations of the initial image. More interestingly maybe, we could consider modules that transform the representation vectors to account for changes in the position of the viewer. Since such viewpoint changes modify the occlusion patterns (e.g. Hoeim et al., 2007), such modules provides an interpretation of the three-dimensional geometry of the scene. Since viewpoint changes can also reveal or hide entire objects, such modules could conceivably provide a tool for constructing a vision system that implements object permanence (Piaget, 1937).\nFinally, we can also envision modules that convert image representations into sentence representations and conversely. Training such modules would provide the means to associate sentences and images. Given an image, we could then parse the image, convert the final image representation into a sentence representation, and apply the dissociation module to reconstruct the sentence. Conversely, given a sentence, we could produce a sketch of the associated image by similar means. Much work is needed to specify the semantic nature of such conversions."}, {"heading": "7. Universal parser", "text": "Let us return to the problem of determining the most meaningful way to apply the association module, which was tersely defined as the maximization of the sum of the scores computed by the ranking component for all intermediate results.\nFigure 12 illustrates a maximization algorithm template whose main element is a short-term memory (STM) able to store a collection of representation vectors. The two possible actions are (1) inserting a new representation vector into the short-term memory, and (2) applying the association module A to two representation vectors taken from the short-term memory and replacing them by the combined representation vector. Each application of the association module is scored using the saliency scoring module R. The algorithm terminates when neither action is possible, that is, when the short-term memory contains a single representation vector and there are no more representation vectors to insert.\nThe main algorithm design choices are the criteria to decide which representation vector (if any) should be\ninserted into the short-term memory, and which representation vectors taken from the short-term memory (if any) should be associated. These design choices then determine which data structure is most appropriate for implementing the short-term memory.\nFor instance, in the case of the English language, nearly all syntactically meaningful sentence segments are contiguous sequences of words. It is therefore attractive to implement the short-term memory as a stack and construct a shift/reduce parser: the first action (\u201cshift\u201d) then consists in picking the next sentence word and pushing its representation on top of the stack; the second action (\u201creduce\u201d) consists in applying the association module to the top two stack elements and replacing them by the resulting representation. The problem then reduces to determining which sequence of actions to perform in order to maximize the sum of saliency scores. Even in this simple case, the graph of the possible actions grows exponentially with the length of the sentence.\nFortunately, heuristic beam search techniques are available to efficiently explore this graph. They can also handle more complicated ways to organize the short-term memory, often without dramatically increasing its computational complexity. The greedy parsing algorithm is an extreme example which consists in first inserting all word representations into the short-term memory, and repeatedly associating the two representation vectors with the highest association saliency. Simple experimentation with various compromises can suggest what works best for each application.\nThis parsing algorithm template is consistent with the cognitive psychology view of short-term memory. In particular, Miller (1956) argues that the human short-term memory holds seven plus-or-minus two chunks of information. Chunks are loosely defined as pieces of information that the subject recognizes as an entity. This definition depends on the knowledge of the subject, that is, the contents of her long-term memory. In the case of the parsing algorithm template, the long-term memory is represented by the trainable parameters of the association module A and the scoring module R."}, {"heading": "8. More modules", "text": "The previous sections essentially discuss the association and dissociation modules. They also briefly mention a couple additional modules: modules that perform predefined transformations on natural language sentences; modules that implement specific visual reasoning primitives; and modules that bridge the representations of sentences and the representation of images. These modules enrich the algebraic reasoning structure by endowing the space of representation vectors with additional semantics.\n\u2022 There is a natural framework for such enhancements in the case of natural language processing. Operator grammars (Harris, 1968) provide a mathematical description of natural languages based on transformation operators: starting from elementary sentence forms, more complex sentences are described by the successive application of sentence transformation operators. The structure and the meaning of the sentence is revealed as a side effect of these successive transformations. Since the association and dissociation modules provide the means to navigate the sentence structure, we have the necessary tools to replicate the sentence transformation operators described by Harris and establish a connection with this important body of linguistic work.\n\u2022 There is also a natural framework for such enhancements in the case of vision. Modules working on representation vectors can model the consequence of various interventions. Viewpoint changes causes image rotations, image rescaling, perspective changes, and occlusion changes. We could also envision modules modeling the representation space consequences of direct interventions on the scene, such as moving an object.\nThere is also an opportunity to go beyond modules that merely leverage the structure of the representation space. As explained earlier, the association and dissociation modules are algebraically equivalent to the Lisp primitives car, cdr, and cons, and, like these primitives, provide the means to construct arbitrarily propositional logic expressions. Adding variables and quantifiers would provide an implementation of first order logic. Although there are connectionist approaches to variable binding (e.g., Smolensky, 1990), they cannot avoid the computational complexity of first-order logic problems. Would it be possible instead to identify capabilities that are necessary for the kind of informal and intuitive reasoning that humans carry out with ease? Here are two examples:\n\u2022 Anaphora resolution consists in identifying which components of a tree designate the same entity. This amounts to identifying the multiple occurrences of a same variable in a first-order logic expression, or to resolving pronouns in the case of natural language sentences. This could be approached by constructing an instantiation module that takes the representation vector of a tree and applies a predefined substitution to all occurrences of a designated entity in the tree.\n\u2022 Identifying which instantiations make sense could be achieved by a trainable module that returns a high score when there is a isKindOf relation between two representation vectors. But such ontologies are often context dependent. For instance a cat and a turtle are kinds of pets in the context of a household, and are members of different families in the context of biological classification. The restricted entailment scoring module takes the representations of two structurally similar trees and returns a high score if the first tree is a valid instantiation of the second one. This score expresses the relation between the differing tree branches in the context of the rest of the tree."}, {"heading": "9. Representation space", "text": "Although the previous subsection present the essential modules as functions operating on a relatively lowdimensional vectorial space (e.g., 50-dimensional vectors), modules with similar algebraic properties could be defined on different representation spaces. Such choices have a considerable impact on the computational and practical aspects of the training algorithms. An investigation is therefore necessary.\n\u2022 Our preliminary results were obtained using dense vectors with relatively low dimension, ranging from 20 to 200 dimensions (e.g., Collobert, 2011). In order to provide sufficient capabilities, the trainable functions must often be designed with a nonlinear parametrization. The training algorithms are simple extensions of the multilayer network training procedures, using gradient back-propagation and stochastic gradient descent. These nonconvex optimization procedures are inherently complex and have often been criticized for their lack of robustness. On the other hand, when properly implemented, they often turn out to be the most effective methods available for large-scale machine learning problems.\n\u2022 Sparse vectors in much higher dimensional spaces are attractive because they provide the opportunity to rely more on trainable modules with linear parametrization (e.g. Paccanaro and Hinton, 2001, Mairal et al., 2010). The training algorithms can then exploit simpler optimization procedures. In order to maintain good generalization abilities and good computational performance, sparsity inducing terms must be included in the optimization criteria. Such terms also make the optimization more complex, potentially negating the benefits of sparse high-dimensional vectors in the first place.\n\u2022 The representation space can also be a space of probability distributions defined on a vector of discrete random variables. The learning algorithms must then be expressed as stochastic sampling techniques such as Gibbs sampling, MCMC, Contrastive Divergence (Hinton et. al, 2006), or Herding (Welling, 2009).\nRegardless of the chosen representation space, a well designed GPU implementation can considerably speed-up the experimentation cycle. For instance, training the language model of (Collobert et al., 2011) demands three to six weeks of computation on a standard processor. Reducing this training time to a couple days changes the dynamics of the experimentation.\nConclusions The research directions outlined in this document are intended as a breakthrough effort towards the practical and conceptual understanding of the interplay between machine learning and machine reasoning. Instead of trying to bridge the gap between machine learning systems and sophisticated \"all-purpose\" inference mechanisms,a we can instead algebraically enrich the set of manipulations applicable to training systems, and build reasoning capabilities from the ground up. This possibility gives new ways to work around the limitations of both logical and probabilistic inference. Is this new path to Artificial Intelligence?"}], "references": [{"title": "Training Hierarchical Feed-forward Visual Recognition Models Using Transfer Learning from Pseudo Tasks", "author": ["\u2022 Amr Ahmed", "Kai Yu", "Wei Xu", "Yihong Gong", "Eric P. Xing"], "venue": "Proc. 10th European Conference on Computer Vision (ECCV),", "citeRegEx": "Ahmed et al\\.,? \\Q2008\\E", "shortCiteRegEx": "Ahmed et al\\.", "year": 2008}, {"title": "Games with a purpose", "author": ["\u2022 Luis von Ahn"], "venue": "IEEE Computer Magazine,", "citeRegEx": "Ahn.,? \\Q2006\\E", "shortCiteRegEx": "Ahn.", "year": 2006}, {"title": "Mindblindness: an essay on autism and theory of mind", "author": ["\u2022 Simon Baron-Cohen"], "venue": null, "citeRegEx": "Baron.Cohen.,? \\Q1995\\E", "shortCiteRegEx": "Baron.Cohen.", "year": 1995}, {"title": "Greedy Layer-Wise Training of Deep Networks, Advances in Neural Information", "author": ["\u2022 Yoshua Bengio", "Pascal Lamblin", "Dan Popovici", "Hugo Larochelle"], "venue": "Processing Systems", "citeRegEx": "Bengio et al\\.,? \\Q2007\\E", "shortCiteRegEx": "Bengio et al\\.", "year": 2007}, {"title": "A framework for the cooperation of learning algorithms", "author": ["\u2022 L\u00e9on Bottou", "Patrick Gallinari"], "venue": "Advances in Neural Information Processing Systems", "citeRegEx": "Bottou and Gallinari.,? \\Q1991\\E", "shortCiteRegEx": "Bottou and Gallinari.", "year": 1991}, {"title": "Global Training of Document Processing Systems using Graph Transformer Networks", "author": ["L\u00e9on Bottou", "Yann LeCun", "Yoshua Bengio"], "venue": "Proc. of Computer Vision and Pattern Recognition,", "citeRegEx": "Bottou et al\\.,? \\Q1997\\E", "shortCiteRegEx": "Bottou et al\\.", "year": 1997}, {"title": "Artificial intelligence in seven years? Seminar presentation, University of Montreal, http://www.iro.umontreal.ca/~lisa/seminaires/26-06-2008.html", "author": ["\u2022 L\u00e9on Bottou"], "venue": null, "citeRegEx": "Bottou.,? \\Q2008\\E", "shortCiteRegEx": "Bottou.", "year": 2008}, {"title": "The trade-offs of large-scale learning", "author": ["\u2022 L\u00e9on Bottou", "Olivier Bousquet"], "venue": "Advances in Neural Information Processing Systems", "citeRegEx": "Bottou and Bousquet.,? \\Q2008\\E", "shortCiteRegEx": "Bottou and Bousquet.", "year": 2008}, {"title": "Operations for learning with graphical models", "author": ["\u2022 Wray Buntine"], "venue": "Journal of Artificial Intelligence Research,", "citeRegEx": "Buntine.,? \\Q1994\\E", "shortCiteRegEx": "Buntine.", "year": 1994}, {"title": "Fast Semantic Extraction Using a Novel Neural Network Architecture", "author": ["\u2022 Ronan Collobert", "Jason Weston"], "venue": "Proc. 45th Annual Meeting of the Association of Computational Linguistics (ACL),", "citeRegEx": "Collobert and Weston.,? \\Q2007\\E", "shortCiteRegEx": "Collobert and Weston.", "year": 2007}, {"title": "Natural Language Processing (almost) from Scratch", "author": ["\u2022 Ronan Collobert", "Jason Weston", "L\u00e9on Bottou", "Michael Karlen", "Koray Kavukcuoglu", "Pavel Kuksa"], "venue": "Journal of Machine Learning Research (submitted, http://leon.bottou.org/morefiles/nlp.pdf),", "citeRegEx": "Collobert et al\\.,? \\Q2011\\E", "shortCiteRegEx": "Collobert et al\\.", "year": 2011}, {"title": "Semantic Vector Machines", "author": ["Vincent Etter"], "venue": "Masters thesis,", "citeRegEx": "Etter.,? \\Q2009\\E", "shortCiteRegEx": "Etter.", "year": 2009}, {"title": "Learning probabilistic relational models", "author": ["\u2022 Nir Friedman", "Lise Getoor", "Daphne Koller", "Avi Pfeffer"], "venue": "Proc. Sixteenth International Joint Conference on Artificial Intelligence,", "citeRegEx": "Friedman et al\\.,? \\Q1999\\E", "shortCiteRegEx": "Friedman et al\\.", "year": 1999}, {"title": "Deep convolutional networks for scene parsing", "author": ["\u2022 David Grangier", "L\u00e9on Bottou", "Ronan Collobert"], "venue": "ICML 2009 Deep Learning Workshop, http://david.grangier.info/scene_parsing,", "citeRegEx": "Grangier et al\\.,? \\Q2009\\E", "shortCiteRegEx": "Grangier et al\\.", "year": 2009}, {"title": "Mathematical Structures of Language", "author": ["\u2022 Zelig S. Harris"], "venue": null, "citeRegEx": "Harris.,? \\Q1968\\E", "shortCiteRegEx": "Harris.", "year": 1968}, {"title": "Grundz\u00fcge der theoretischen Logik", "author": ["\u2022 David Hilbert", "Wilhelm Ackermann"], "venue": null, "citeRegEx": "Hilbert and Ackermann,? \\Q1928\\E", "shortCiteRegEx": "Hilbert and Ackermann", "year": 1928}, {"title": "A fast learning algorithm for deep belief nets", "author": ["\u2022 Geoffrey E. Hinton", "Simon Osindero", "Yee-Whye Teh"], "venue": "Neural Computation,", "citeRegEx": "Hinton et al\\.,? \\Q2006\\E", "shortCiteRegEx": "Hinton et al\\.", "year": 2006}, {"title": "Mapping part-whole hierarchies into connectionist networks", "author": ["\u2022 Geoffrey E. Hinton"], "venue": "Artificial Intelligence,", "citeRegEx": "Hinton.,? \\Q1990\\E", "shortCiteRegEx": "Hinton.", "year": 1990}, {"title": "Recovering Occlusion Boundaries from a Single Image", "author": ["\u2022 Derek Hoiem", "Andrew Stein", "Alexei A. Efros", "Martial Hebert"], "venue": "Proc. International Conference on Computer Vision,", "citeRegEx": "Hoiem et al\\.,? \\Q2007\\E", "shortCiteRegEx": "Hoiem et al\\.", "year": 2007}, {"title": "Closing the Loop on Scene Interpretation", "author": ["\u2022 Derek Hoiem", "Alexei A. Efros", "Martial Hebert"], "venue": "Proc. Computer Vision and Pattern Recognition,", "citeRegEx": "Hoiem et al\\.,? \\Q2008\\E", "shortCiteRegEx": "Hoiem et al\\.", "year": 2008}, {"title": "Receptive fields, binocular interaction and functional architecture in the cat\u2019s visual cortex", "author": ["David H. Hubel", "Torsten N. Wiesel"], "venue": "J. Physiol.,", "citeRegEx": "Hubel and Wiesel.,? \\Q1962\\E", "shortCiteRegEx": "Hubel and Wiesel.", "year": 1962}, {"title": "Beyond Bags of Features: Spatial Pyramid Matching for Recognizing Natural Scene Categories", "author": ["\u2022 Svetlana Lazebnik", "Cordelia Schmid", "Jean Ponce"], "venue": "Procs of Computer Vision and Pattern Recognition,", "citeRegEx": "Lazebnik et al\\.,? \\Q2006\\E", "shortCiteRegEx": "Lazebnik et al\\.", "year": 2006}, {"title": "Gradient Based Learning Applied to Document Recognition", "author": ["\u2022 Yann LeCun", "L\u00e9on Bottou", "Yoshua Bengio", "Patrick Haffner"], "venue": "Proceedings of IEEE,", "citeRegEx": "LeCun et al\\.,? \\Q1998\\E", "shortCiteRegEx": "LeCun et al\\.", "year": 1998}, {"title": "Learning Methods for Generic Object Recognition with Invariance to Pose and Lighting", "author": ["\u2022 Yann LeCun", "L\u00e9on Bottou", "Jie HuangFu"], "venue": "Proc. of Computer Vision and Pattern Recognition,", "citeRegEx": "LeCun et al\\.,? \\Q2004\\E", "shortCiteRegEx": "LeCun et al\\.", "year": 2004}, {"title": "Artificial intelligence: A general survey", "author": ["\u2022 James Lighthill"], "venue": "In Artificial Intelligence: A Paper Symposium. Science Research Council,", "citeRegEx": "Lighthill.,? \\Q1973\\E", "shortCiteRegEx": "Lighthill.", "year": 1973}, {"title": "Encoding pyramids by labeling RAAM", "author": ["\u2022 Stefano Lonardi", "Alessandro Sperduti", "Antonina Starita"], "venue": "Proc. Neural Networks for Signal Processing,", "citeRegEx": "Lonardi et al\\.,? \\Q1994\\E", "shortCiteRegEx": "Lonardi et al\\.", "year": 1994}, {"title": "Online Learning for Matrix Factorization and Sparse Coding", "author": ["\u2022 Julien Mairal", "Francis Bach", "Jean Ponce", "Guillermo Sapiro"], "venue": "Journal of Machine Learning Research,", "citeRegEx": "Mairal et al\\.,? \\Q2010\\E", "shortCiteRegEx": "Mairal et al\\.", "year": 2010}, {"title": "The magical number seven, plus or minus two: Some limits on our capacity for processing information", "author": ["Georges A. Miller"], "venue": "Psychological Review", "citeRegEx": "Miller.,? \\Q1956\\E", "shortCiteRegEx": "Miller.", "year": 1956}, {"title": "Collective classification with relational dependency networks", "author": ["\u2022 Jennifer Neville", "David Jensen"], "venue": "Proc. Second International Workshop on Multi-Relational Data Mining,", "citeRegEx": "Neville and Jensen.,? \\Q2003\\E", "shortCiteRegEx": "Neville and Jensen.", "year": 2003}, {"title": "Learning hierarchical structures with linear relational embedding", "author": ["\u2022 Alberto Paccanaro", "Geoffrey Hinton"], "venue": "Advances in Neural Information Processing Systems", "citeRegEx": "Paccanaro and Hinton.,? \\Q2001\\E", "shortCiteRegEx": "Paccanaro and Hinton.", "year": 2001}, {"title": "La Construction du r\u00e9el chez l'enfant", "author": ["\u2022 Jean Piaget"], "venue": "Delachaux et Niestle\u0301 (Neuchatel),", "citeRegEx": "Piaget.,? \\Q1937\\E", "shortCiteRegEx": "Piaget.", "year": 1937}, {"title": "Causality: Models, Reasoning, and Inference", "author": ["\u2022 Judea Pearl"], "venue": null, "citeRegEx": "Pearl.,? \\Q2000\\E", "shortCiteRegEx": "Pearl.", "year": 2000}, {"title": "Recursive Distributed Representations", "author": ["\u2022 Jordan B. Pollack"], "venue": "Artificial Intelligence,", "citeRegEx": "Pollack.,? \\Q1990\\E", "shortCiteRegEx": "Pollack.", "year": 1990}, {"title": "How Visual Cortex Recognizes Objects: The Tale of the Standard Model. The Visual Neurosciences", "author": ["\u2022 Maximillian Riesenhuber", "Tomaso Poggio"], "venue": null, "citeRegEx": "Riesenhuber and Poggio.,? \\Q2003\\E", "shortCiteRegEx": "Riesenhuber and Poggio.", "year": 2003}, {"title": "A Machine-Oriented Logic Based on the Resolution Principle", "author": ["\u2022 John A. Robinson"], "venue": "Communications of the ACM,", "citeRegEx": "Robinson.,? \\Q1965\\E", "shortCiteRegEx": "Robinson.", "year": 1965}, {"title": "On the hardness of approximate reasoning", "author": ["\u2022 Dan Roth"], "venue": "Artificial Intelligence,", "citeRegEx": "Roth,? \\Q1996\\E", "shortCiteRegEx": "Roth", "year": 1996}, {"title": "LabelMe: a database and web-based tool for image annotation", "author": ["Brian C. Russell", "Antonio Torralba", "Kevin P. Murphy", "William T. Freeman"], "venue": "International Journal of Computer Vision,", "citeRegEx": "Russell et al\\.,? \\Q2008\\E", "shortCiteRegEx": "Russell et al\\.", "year": 2008}, {"title": "Learning Continuous Phrase Representations and Syntactic Parsing with Recursive Neural Networks", "author": ["Richard Socher", "Andrew Ng", "Christopher Manning"], "venue": "NIPS Deep Learning workshop presentation,", "citeRegEx": "Socher et al\\.,? \\Q2010\\E", "shortCiteRegEx": "Socher et al\\.", "year": 2010}, {"title": "Tensor Product Variable Binding and the Representation of Symbolic Structures in Connectionist Systems", "author": ["\u2022 Paul Smolensky"], "venue": "Artificial Intelligence", "citeRegEx": "Smolensky.,? \\Q1990\\E", "shortCiteRegEx": "Smolensky.", "year": 1990}, {"title": "Encoding Labeled Graphs by Labeling RAAM", "author": ["\u2022 Alessandro Sperduti"], "venue": "Advances in Neural Information Processing Systems,", "citeRegEx": "Sperduti.,? \\Q1994\\E", "shortCiteRegEx": "Sperduti.", "year": 1994}, {"title": "The Nature of Statistical Learning", "author": ["\u2022 Vladimir N. Vapnik"], "venue": null, "citeRegEx": "Vapnik.,? \\Q1995\\E", "shortCiteRegEx": "Vapnik.", "year": 1995}, {"title": "Herding Dynamic Weights to Learn", "author": ["\u2022 Max Welling"], "venue": "Proc. 26th International Conference on Machine Learning,", "citeRegEx": "Welling.,? \\Q2009\\E", "shortCiteRegEx": "Welling.", "year": 2009}, {"title": "Deep learning via semi-supervised embedding", "author": ["\u2022 Jason Weston", "Fr\u00e9d\u00e9ric Ratle", "Ronan Collobert"], "venue": "Proc. International Conference on Machine Learning,", "citeRegEx": "Weston et al\\.,? \\Q2008\\E", "shortCiteRegEx": "Weston et al\\.", "year": 2008}], "referenceMentions": [{"referenceID": 34, "context": "Although computer algorithms for logical inference (Robinson, 1965) share their roots with the foundations of mathematics, converting ordinary data into a consistent set of logical expressions has proved very challenging: searching the discrete spaces of symbolic formulas often leads to a combinatorial explosion (Lighthill, 1973).", "startOffset": 51, "endOffset": 67}, {"referenceID": 24, "context": "Although computer algorithms for logical inference (Robinson, 1965) share their roots with the foundations of mathematics, converting ordinary data into a consistent set of logical expressions has proved very challenging: searching the discrete spaces of symbolic formulas often leads to a combinatorial explosion (Lighthill, 1973).", "startOffset": 314, "endOffset": 331}, {"referenceID": 35, "context": "Computer algorithms for general probabilistic inference (Pearl, 1988) still suffer from unfavorable computational properties (Roth, 1996).", "startOffset": 125, "endOffset": 137}, {"referenceID": 31, "context": "In particular, expressing causality with first order logic is very simple, expressing causality with probabilities is challenging (Pearl, 2000).", "startOffset": 130, "endOffset": 143}, {"referenceID": 16, "context": "Recent advances have uncovered effective strategies to train such deep models (Hinton et al., 2006).", "startOffset": 78, "endOffset": 99}, {"referenceID": 6, "context": "This document presents an idea that results from a long maturation (Bottou, 2008).", "startOffset": 67, "endOffset": 81}, {"referenceID": 8, "context": "The plate notation (Buntine, 1994) compactly represents large graphical models with repeated structures that usually share parameters.", "startOffset": 19, "endOffset": 34}, {"referenceID": 12, "context": "Probabilistic Relational Models (Friedman et al., 1999) and Relational Dependency Networks (Neville and Jensen, 2003) derive graphical probabilistic models from frame-based knowledge bases.", "startOffset": 32, "endOffset": 55}, {"referenceID": 28, "context": ", 1999) and Relational Dependency Networks (Neville and Jensen, 2003) derive graphical probabilistic models from frame-based knowledge bases.", "startOffset": 43, "endOffset": 69}, {"referenceID": 31, "context": "Pearl (2003) proposes to address this issue by enriching the probabilistic machinery with a new construction: whereas P(X|Y=y) represents the distribution of random variable X given the observation Y=y, the new construction P(X|do(Y=y)) represents the distribution of X when an intervention enforces the condition Y=y.", "startOffset": 0, "endOffset": 13}, {"referenceID": 24, "context": ", with first order logic) did not fulfill these hopes (Lighthill, 1973).", "startOffset": 54, "endOffset": 71}, {"referenceID": 11, "context": "Preliminary results have been obtained using a similar procedure (Etter, 2009).", "startOffset": 65, "endOffset": 78}, {"referenceID": 11, "context": "Preliminary results have been obtained using a similar procedure (Etter, 2009). Sentence segments of length five were extracted from a dump of the English Wikipedia (600M words). The vocabulary was restricted to the 1000 most frequent words initialized with the Collobert (2011) embeddings.", "startOffset": 66, "endOffset": 279}, {"referenceID": 32, "context": "Such Recursive Auto-Associative Memory (RAAM) were proposed as a connectionist representation of infinite recursive structures (Pollack, 1990).", "startOffset": 127, "endOffset": 142}, {"referenceID": 17, "context": "Comparable ideas have been proposed by Hinton (1990).", "startOffset": 39, "endOffset": 53}, {"referenceID": 39, "context": "Sperduti (1994) defines and compares various labelling schemes for this purpose.", "startOffset": 0, "endOffset": 16}, {"referenceID": 20, "context": "Similar pyramidal structures have long been associated with the visual cortex (Hubel and Wiesel, 1962; Riesenhuber and Poggio, 2003).", "startOffset": 78, "endOffset": 132}, {"referenceID": 33, "context": "Similar pyramidal structures have long been associated with the visual cortex (Hubel and Wiesel, 1962; Riesenhuber and Poggio, 2003).", "startOffset": 78, "endOffset": 132}, {"referenceID": 13, "context": "have designed a large convolutional neural network (Grangier et al., 2009) to identify and label objects in the city scenes of the LabelMe corpus (Russel et al.", "startOffset": 51, "endOffset": 74}, {"referenceID": 30, "context": "Since viewpoint changes can also reveal or hide entire objects, such modules could conceivably provide a tool for constructing a vision system that implements object permanence (Piaget, 1937).", "startOffset": 177, "endOffset": 191}, {"referenceID": 13, "context": "The main algorithm design choices are the criteria to decide which representation vector (if any) should be Figure 11 \u2013 Sample output of the scene labelling system described in (Grangier et al., 2009).", "startOffset": 177, "endOffset": 200}, {"referenceID": 27, "context": "In particular, Miller (1956) argues that the human short-term memory holds seven plus-or-minus two chunks of information.", "startOffset": 15, "endOffset": 29}, {"referenceID": 14, "context": "Operator grammars (Harris, 1968) provide a mathematical description of natural languages based on transformation operators: starting from elementary sentence forms, more complex sentences are described by the successive application of sentence transformation operators.", "startOffset": 18, "endOffset": 32}, {"referenceID": 41, "context": "al, 2006), or Herding (Welling, 2009).", "startOffset": 22, "endOffset": 37}, {"referenceID": 10, "context": "For instance, training the language model of (Collobert et al., 2011) demands three to six weeks of computation on a standard processor.", "startOffset": 45, "endOffset": 69}], "year": 2011, "abstractText": "A plausible definition of \"reasoning\" could be \"algebraically manipulating previously acquired knowledge in order to answer a new question\". This definition covers first-order logical inference or probabilistic inference. It also includes much simpler manipulations commonly used to build large learning systems. For instance, we can build an optical character recognition system by first training a character segmenter, an isolated character recognizer, and a language model, using appropriate labelled training sets. Adequately concatenating these modules and fine tuning the resulting system can be viewed as an algebraic operation in a space of models. The resulting model answers a new question, that is, converting the image of a text page into a computer readable text. This observation suggests a conceptual continuity between algebraically rich inference systems, such as logical or probabilistic inference, and simple manipulations, such as the mere concatenation of trainable learning systems. Therefore, instead of trying to bridge the gap between machine learning systems and sophisticated \"all-purpose\" inference mechanisms, we can instead algebraically enrich the set of manipulations applicable to training systems, and build reasoning capabilities from the ground up.", "creator": "Writer"}}}