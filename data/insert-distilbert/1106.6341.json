{"id": "1106.6341", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "30-Jun-2011", "title": "Vision-Based Navigation III: Pose and Motion from Omnidirectional Optical Flow and a Digital Terrain Map", "abstract": "an algorithm for pose and motion estimation using corresponding features in omnidirectional images presented and a digital terrain map is proposed. in previous paper, such algorithm for regular camera was considered. using a digital terrain ( or digital elevation ) map ( dtm / dem ) system as interpreting a global reference enables recovering the absolute position and orientation of the camera. in order to do this, the dtm is used unsuccessfully to formulate a constraint between corresponding features in two consecutive frames. in this 2016 paper, these constraints are extended to handle non - central projection, as is the case with many omnidirectional systems. the mass utilization of optical omnidirectional data systems is shown to improve the robustness and accuracy of the navigation algorithm. the feasibility of this algorithm primarily is partially established through lab experimentation with two kinds of omnidirectional acquisition systems. the first one is polydioptric cameras while the second is catadioptric camera.", "histories": [["v1", "Thu, 30 Jun 2011 18:59:53 GMT  (1727kb)", "http://arxiv.org/abs/1106.6341v1", "6 pages, 9 figures"], ["v2", "Tue, 16 Aug 2011 09:22:33 GMT  (1727kb)", "http://arxiv.org/abs/1106.6341v2", "6 pages, 9 figures"]], "COMMENTS": "6 pages, 9 figures", "reviews": [], "SUBJECTS": "cs.CV cs.AI", "authors": ["ronen lerner", "oleg kupervasser", "ehud rivlin"], "accepted": false, "id": "1106.6341"}, "pdf": {"name": "1106.6341.pdf", "metadata": {"source": "META", "title": "Pose and Motion from Omnidirectional Optical Flow and a Digital Terrain Map\u20ac", "authors": ["Ronen Lerner", "Oleg Kupervasser", "Ehud Rivlin"], "emails": ["ronenl@cs.technion.ac.il", "kup@yahoo.com", "ehudr@cs.technion.ac.il"], "sections": [{"heading": null, "text": "I. INTRODUCTION\nVision-based navigation algorithms has been a major research issue during the past decades. Two common approaches for the navigation problem are: landmarks and ego-motion integration. In the landmarks approach several features are located on the image-plane and matched to their known 3D location. Using the 2D and 3D data the camera\u2019s pose can be derived. Few examples for such algorithms are [1], [2]. Once the landmarks were found, the pose derivation is simple and can achieve quite accurate estimates. The main difficulty is the detection of the features and their correct matching to the landmarks set. In ego-motion integration approach the motion of the camera with respect to itself is estimated. The ego-motion can be derived from the optical-flow field, or from instruments such as accelerometers and gyroscopes. Once the ego-motion was obtained, one can integrate this motion to derive the camera\u2019s path. One of the factors that make this approach attractive is that no specific features need to be detected, unlike the previous approach. Several ego-motion estimation algorithms can be found in [3], [4], [5], [6]. The weakness of ego-motion integration comes from the fact that small errors are accumulated during the integration process. Hence, the estimated camera\u2019s path is drifted and the pose estimation accuracy decrease along time. If such approach is used it would be desirable to reduce the drift by activating, once in a\nwhile, an additional algorithm that estimates the pose directly. In [7] such navigation-system is being suggested. In that work, like in this work, the drift is being corrected using a Digital Terrain Map (DTM). The DTM is a discrete representation of the observed ground\u2019s topography. It contains the altitude over the sea level of the terrain for each geographical location. In [7] a segment of the ground was reconstructed using \u2018structurefrom-motion\u2019 (SFM) algorithm and was matched to the DTM in order to derive the camera\u2019s pose. Using SFM algorithm, which does not make any use of the information obtained from the DTM but bases its estimate on the flow-field alone, positions their technique under the same critique that applies for SFM algorithms [8]. The algorithm presented in the previous work [9] does not require an intermediate explicit reconstruction of the 3D world. By combining the DTM information directly with the images information it is claimed that the algorithm is well-conditioned and generates accurate estimates for reasonable scenarios with reasonable error sources. Recently, an increasing interest in omnidirectional vision for applications in robotics could be noted. Technically, omnidirectional vision, sometimes also called panoramic vision, can be achieved in various ways. Examples include camera with extreme wide angle lenses (\u201cfish-eye\u201d), cameras with hyperbolic or parabolic mirrors mounted in front of a standard lens (catadioptric imaging), sets of cameras mounted in a ringlike or sphere-like configuration (polydioptric imaging), or an ordinary camera that rotates around an axis and takes a sequence of images that covers a field of view of 360 degrees [10], [11], [12], [13], [14], [15], [16], [17], [18], [19]. Omnidirectional vision provides a very large field of view, which has some useful properties. For instance, it enables the tracking of objects which are placed in different directions in the surrounding scene. It is well established that such variety of features facilitates the obtainment of a robust and accurate estimate of the camera pose. On the other hand, vision algorithms have to account for the specific properties of the particular omnidirectional imaging sensor setup in use. This may comprise theoretical and methodological challenges, as is the case for catadioptric vision. Here, the extreme geometrical distortions of the images caused by the parabolic or hyperbolic\n1-4244-0259-X/06/$20.00 \u00a92006 IEEE\nmirror require a suitable adaptation of image interpretation methods. The projection induced by an omnidirectional camera is the transformation from the 3D space to the image(s) plane. The least restrictive assumption that can be made about any camera model is that the inverse image of a point is a line in space. For many omnidirectional cameras, all such lines do not necessarily intersect in a single point. Their envelope is called a dia-caustic and represents a locus of viewpoints. If all the lines intersect in a single point, then the system has a single effective viewpoint and it is a central projection. In [20] a theorem is presented stating that a catadioptric camera has a single effective viewpoint if and only if the mirrors cross-section is a conic section. In any other case, including multiple cameras configurations, rotating camera systems and other shapes of mirrors, there is no single center of projection. The data acquired by such omnidirectional systems cannot be processed by vision algorithms that were developed under the single effective viewpoint assumption. In this paper the navigation algorithm that was presented in [9] is extended to handle omnidirectional data. The most general case of non-central projection (\u201cmulti-optical center\u201d) is analyzed. The single center of projection case that was previously analyzed becomes a particular case of this general formulation when all optical centers are located in a single point. As was shown in [9], one of the most important factors that influence the robustness and the accuracy of the navigation algorithm is the complexity of the observed terrain. The extreme case, where only a planar segment of the terrain is visible, results in an ill-conditioned system which may lead to the failure of the algorithm. Whenever the navigating platform comes close to a mountainside in the terrain, such an ill-conditioned scenario might arise if a regular camera (not omnidirectional one) is used. However, when using an omnidirectional vision system, the rest of the terrain will still be visible even if the platform approaches one of the mountainsides (see Fig. 1). Therefore, more robust and accurate results can be achieved when using omnidirectional vision. The paper continues as follows: Section II formally define the navigation problem. Section III derive the constraint for any corresponding features coming from two consecutive images along the trajectory. Experimental results are presented in section IV, and conclusions are drawn in section V."}, {"heading": "II. PROBLEM DEFINITION AND NOTATIONS", "text": "The problem can be briefly described as follows: At any given time instance t, a coordinates system C(t) is fixed to an omnidirectional camera. At that time instance the camera is located at some geographical location p(t) \u2013 a 3D vector, and has a given orientation R(t) \u2013 an orthonormal rotation matrix, with respect to a global coordinates system W . p(t) and R(t) define the transformation from the camera\u2019s frame C(t) to the world\u2019s frame W , where if Cv and Wv are vectors in C(t) and W respectively, then Wv = R(t)Cv + p(t). Considering two sequential time instances t1 and t2: the transformation from C(t1) to C(t2) is given by the translation vector \u0394p(t1, t2) and the rotation matrix \u0394R(t1, t2), such that C(t2)v = \u0394R (t1, t2) C(t1)v + \u0394p (t1, t2). A rough estimates of the camera\u2019s pose at t1 and of the ego-motion between the two time instances \u2013 pE(t1) ,RE(t1), \u0394pE(t1, t2) and \u0394RE(t1, t2) \u2013 are assumed to be known (the subscript letter \u201cE\u201d denotes that this is an estimated quantity). Such estimates can be obtained from dead-reckoning navigation system. Also supplied is the optical-flow field. No special assumption is made on the omnidirectional acquisition system. It is assumed, however, that the system was fully calibrated. As a result, for each visible feature it is possible to compute its line of sight with respect to the camera system - C, which can be defined by a source point - CSi and a unit-vector - Cqi, oriented from the source point to the observed feature. Using the above notations, the objective of the proposed algorithm is to estimate the true camera\u2019s pose and ego-motion: p(t1), R(t1), \u0394p(t1, t2) and \u0394R(t1, t2), using n corresponding features from the optical-flow field {CSi(tk), Cqi(tk)} (i=1. . . n, k=1,2), the DTM and the initial-guess: pE(t1), RE(t1), \u0394pE(t1, t2) and \u0394RE(t1, t2)."}, {"heading": "III. THE NAVIGATION ALGORITHM", "text": "The following section describes a navigation algorithm which estimate the above mentioned parameters. The pose and ego-motion of the camera are derived using a DTM and the optical-flow field of two consecutive frames. Unlike the landmarks approach no specific features should be detected and matched. Only the correspondence between the two consecutive images should be found in order to derive the opticalflow field. As was mentioned in the previous section, a rough estimate of the required parameters is supplied as an input. Nevertheless, since the algorithm only use this input as an initial guess and re-calculate the pose and ego-motion directly, no integration of previous errors will take place and accuracy will be preserved. The new approach is founded on the following observation. Since the DTM supplies information about the structure of the observed terrain, depth of observed features is being dictated by the camera\u2019s pose. Hence, given the pose and ego-motion of the camera, the optical-flow field can be uniquely determined. The objective of the algorithm will be finding the pose and ego-motion which lead to an optical-flow field as close as possible to the given flow field.\nA single vector from the optical-flow field will be used to define a constraint for the camera\u2019s pose and ego-motion. Let WG \u2208 R3 be a location of a ground feature point in the 3D world. At two different time instances t1 and t2, this feature point is detected in the omnidirectional images and its lines of sight \u2013 {CS(t1), Cq(t1)} and {CS(t2), Cq(t2)} \u2013 are computed. Using an initial-guess of the pose of the camera at t1, the line passing through CS(t1) in direction of Cq(t1) can be intersected with the DTM. Any ray-tracing style algorithm can be used for this purpose. The location of this intersection is denoted as WGE . The subscript letter \u201cE\u201d highlights the fact that this ground-point is the estimated location for the feature point, that in general will be different from the true ground-feature location WG. The difference between the true and estimated locations is due to two main sources: the error in the initial guess for the pose and the errors in the determination of WGE caused by DTM discretization and intrinsic errors. For a reasonable initial-guess and DTM-related errors, the two points WGE and WG will be close enough so as to allow the linearization of the DTM around WGE . Denoting by N the normal of the plane tangent to the DTM at the point WGE , one can write: NT (WG\u2212 WGE) \u2248 0. (1) The true ground feature WG can be described using true pose parameters:\nWG = WS(t1) + R(t1) \u00b7 q(t1) \u00b7 \u03bb = R(t1) \u00b7 (CS(t1) + q(t1) \u00b7 \u03bb) + p(t1). (2)\nHere, \u03bb denotes the distance between WS(t1) and the feature point WG. In the aforementioned equation we use the feature\u2019s transformed source point:\nWS(t1) = R(t1)CS(t1) + p(t1). (3)\nReplacing (2) in (1) we get:\nNT [R(t1) \u00b7 (CS(t1) + q(t1) \u00b7 \u03bb) + p(t1) \u2212 WGE ] = 0. (4) From this expression, the distance of the true feature can be computed using the estimated feature location:\n\u03bb = NT WGE \u2212NT WS(t1)\nNTR(t1)q(t1) . (5)\nIn order to simplify notations, R(ti) will be replaced by Ri and likewise for p(ti), S(ti) and q(ti) (i = 1, 2). \u0394R(t1, t2) and \u0394p(t1, t2) will be replaced by R12 and p12 respectively. The superscript describing the coordinate frame in which the vector is given will also be omitted, except for the cases were special attention needs to be drawn to the frames. Normally, p12, Sis and qis are in camera\u2019s frame while the rest of the vectors are given in the world\u2019s frame. Using the simplified notations, (5) can be assigned into (2) and after reorganization we get:\nWG = R1q1N\nT\nNTR1q1 WGE \u2212 R1q1N\nT\nNTR1q1 WS1 + WS1. (6)\nIn order to obtain simpler expressions, define the following projection operator:\nP(u, n) .= ( I\u2212 un T\nnTu\n) (7)\nThis operator projects a vector onto the subspace normal to n, along the direction of u. As an illustration, it is easy to verify that nT \u00b7 P(u, n)v \u2261 0 and P(u, n)u \u2261 0. By adding and subtracting GE to (6), and after reordering: WG = WGE + [ I\u2212 R1q1N T\nNTR1q1\n] WS1 \u2212 [ I\u2212 R1q1N T\nNTR1q1\n] WGE\n(8) Using the projection operator, (8) becomes:\nWG = WGE + P(R1q1, N) (WS1 \u2212 WGE) (9) The above expression has a clear geometric interpretation (see Fig.2). The vector from GE to WS1 is being projected onto the tangent plane. The projection is along the direction R1q1. Our next step will be transferring G from the global coordinates frame - W into the first camera\u2019s frame C1 and then to the second camera\u2019s frame C2. Since p1 and R1 describe the transformation from C1 into W , we will use the inverse transformation:\nC2G = R12RT1 ( WG\u2212 p1) + p12. (10)\nAssigning (9) into (10) gives:\nC2G = R12 \u00b7 CS1 + p12 +R12L (WGE \u2212 WS1) . (11) L in the above expression represents:\nL = q1N T\nNTR1q1 (12)\nq2 is a unit-vector pointing to the true ground-feature G. Thus, the vectors q2 and (C2G\u2212 C2S2) should coincide. This observation can be expressed mathematically by projecting (C2G\u2212 C2S2) on the ray continuation of q2:\nC2G\u2212 C2S2 = q2 \u00b7 ( qT2 \u00b7 (C2G\u2212 C2S2) ) (13)\nIn expression (13), qT2 \u00b7 (C2G \u2212 C2S2) is the magnitude of (C2G \u2212 C2S2)\u2019s projection on q2. By reorganizing (13) and using the projection operator, we obtain:\nP(q2, q2) \u00b7 (C2G\u2212 C2S2) = 0, (14) where:\nP(q2, q2) = [ I\u2212 q2 \u00b7 qT2 ] . (15)\n(C2G\u2212C2S2) is being projected on the orthogonal complement of q2. Since (C2G \u2212 C2S2) and q2 should coincide, this projection should yield the zero-vector. Plugging (11) into (14) yields our final constraint:\nP(q2, q2) [R12 \u00b7 CS1 + p12 +R12L (WGE \u2212 WS1)\u2212 C2S2] = 0 (16)\nThis constraint involves the position, orientation and the egomotion defining the two frames of the camera. Although it involves 3D vectors, it is clear that its rank can not exceed two due to the usage of P which projects R3 on a two-dimensional subspace. Such constraint can be established for each vector in the optical-flow field, until a non-singular system is obtained. Since twelve parameters need to be estimated (six for pose and six for the ego-motion), at least six optical-flow vectors are required for the system solution. Usually, more vectors will be used in order to define an over-determined system, which will lead to more robust solution. The reader attention is drawn to the fact that a non-linear constraint was obtained. Thus, an iterative scheme will be used in order to solve this system. For example, Newton-iterations which start from the rough estimate of the pose and motion parameters and iteratively converge to the least square solution can be performed. As was suggested in [21], M-estimator can be integrated into this scheme to increase its robustness in the presence of outliers."}, {"heading": "IV. EXPERIMENTAL RESULTS", "text": "Lab experimentation was performed using a real 3D model of a terrain and images from an omnidirectional acquisition system. The dimensions of the model were 115\u00d7 95 cm with elevation variations as high as 32cm (see Fig.3(a)). A laserbased 3D-scanner was used to capture the terrain and build a DTM with a 1mm spatial grid (see Fig.3(b)). Two types of omnidirectional acquisition systems were tested: a configuration of three regular cameras heading to\ndifferent directions, and a catadioptric system with a parabolic mirror."}, {"heading": "A. Three Cameras Configuration", "text": "Three cameras with a wide field of view (80\u25e6 each) were firmly attached to a robotic arm. Each camera was posed in a different orientation (see Fig. 4). Their internal parameters and relative pose parameters were accurately estimated as part of the system calibration phase. In each experiment the cameras configuration was moved along a different trajectory. The robotic arm allowed moving of the cameras in a controlled manner while also providing true measurements for the pose of the cameras at all time instances. Fig.5 shows examples of two of the trajectories evaluated. The first trajectory (a in the figure) contains constant translational motion with the orientation held constant. In the second trajectory (b in the figure) position and orientation of the cameras were changed significantly. Although highly accurate \u201cground-truth\u201d data for the trajectory of the cameras was obtained from the robotic manipulator, this trajectory was corrupted using a simulated error model so that the \u201ctrue\u201d and the a priori trajectories drifted away with time. The error model drifted the trajectory position and orientation by 1 mm/sec and 0.7\u25e6/sec, respectively. In order to compensate for this drift, the proposed algorithm was called at 1 Hz rate. Whenever activated, this algorithm was supplied with the latest 3 images (one from each camera) and a previous image triplet that was captured 20mm\naway. The a priori information was derived from the available drifted pose at these two frames. Since 20mm baseline was desired, the algorithm was activated for the first time only after 3 seconds of movement. Later, it was periodically activated in 1 second gaps. During the experiments, gray-level images of 640 \u00d7 480 pixels were obtained from each of the three cameras. Correspondence between about 100 features per camera (300 features all together) was derived using the Lucas-Kanade tracking method [22], [23]. Features were not selected using an image-dependent algorithm, but rather, by using a regular grid spanned over the image-plane. As shown in Figure 5, the algorithm converged to reasonable estimates for the navigation parameters along the two trajectories described above. The figure shows the \u201cground-truth\u201d together with two trajectories computed using the error model: the first contains no updates while the second was updated periodically by using the proposed algorithm, at a 1 Hz rate. The figure clearly show that the corrected-path remains close to the true-path along the whole trajectory. Figure 6 shows the position and orientation errors of the drifted and corrected paths for the two trajectories. It can be seen that the errors of the corrected path are kept small while the errors in the uncompensated path increase gradually. The saw-tooth shaped graph of the corrected path is characteristic: the orientation errors accumulate between updates but are strongly reduced each time the algorithm is applied. In order to demonstrate the importance of the omnidirectional vision usage, the two trajectories were also reconstructed using 300 features coming from only one of the cameras, while the data from the other two cameras were ignored. Fig. 7(a)\ncompares the translational accuracies that were obtained when using one vs. three cameras while reconstructing trajectory b. A clear advantage can be observed for the utilization of the omnidirectional configuration. In [9], the sensitivities of the proposed algorithm were studied. It was found that the obtained accuracy is highly related to the complexity of the observed terrain. The extreme case, where only a planar segment of the terrain is visible, results in an ill-conditioned system which leads to the failure of the algorithm. Whenever the navigating platform comes close to one of the mountainsides of the terrain, such an ill-conditioned scenario might happen if a regular camera (not omnidirectional one) is used. However, if using an omnidirectional vision system, then the rest of the terrain will still be visible even when approaching one of the mountainsides. Therefore, more robust and accurate results can be expected when using omnidirectional vision, as confirmed by Fig. 7(a). Note the blue dot in this figure. At that time instance, the algorithm performance was relatively poor for the single camera scenario since only small segment of the terrain was visible to that camera - Fig. 7(b)."}, {"heading": "B. Catadioptric System", "text": "In the second experiment the three regular cameras were replaced by a single catadioptric system which is constructed of a parabolic mirror mounted in front of an orthographic camera (see Fig. 8(a)). Images of 1024\u00d7768 pixels were captured by this camera and 300 feature correspondences between two consecutive images were computed for the algorithm using the Lucas-Kanade method (see Fig. 8(b)). It should be noted that this tracking method is not optimal for catadioptric images due to the nature of the distortion of this kind of images. However, since the catadioptric system was first calibrated, these distortions can be computed and then cancelled. For each feature, a warped images can be rendered from the original images such that the local area of the feature appears as if it would be in a regular perspective camera. Next the LucasKanade tracking method can be activated on these warped images with no special difficulty. The translational and angular accuracies that were obtained during the two examined trajectories are presented in Figure 9. The slight deterioration in the algorithm performance (compared to its performance with the three cameras configuration)\nis probably due to the low resolution at the periphery of catadioptric images and due to the usage of the Lucas-Kanade tracking method directly on the distorted images."}, {"heading": "V. CONCLUSIONS", "text": "An algorithm for pose and motion estimation using corresponding features in omnidirectional images and a DTM was presented. The DTM served as a global reference and its data was used for recovering the absolute position and orientation of the camera. The derived constraint eliminates the requirement for the commonly used assumption of single effective viewpoint. As a result, the presented algorithm is applicable for all omnidirectional acquisition systems. The performance of the presented algorithm was demonstrated using both polydioptric cameras and catadioptric camera. Both position and orientation estimates were found to be sufficiently accurate in order to bound the accumulated errors\nand to prevent trajectory drifts. Moreover, the utilization of omnidirectional data was shown to improve the robustness and accuracy of the navigation algorithm, compared to its counterpart algorithm for regular cameras. The improvement is attributed to the wide segment of the visible terrain. Such a segment tends to include much higher complexity than smaller segments which might be observed when using a regular camera."}], "references": [{"title": "Statistical image analysis for pose estimation without point correspondences", "author": ["Y. Liu", "M.A. Rodrigues"], "venue": "Patt. Recognition Letters, vol. 22, pp. 1191\u20131206, 2001.", "citeRegEx": "1", "shortCiteRegEx": null, "year": 2001}, {"title": "Softposit: Simultaneous pose and correspondence determination", "author": ["P. David", "D. DeMenthon", "R. Duraiswami", "H. Samet"], "venue": "Proc. of the European Conf. of Comp. Vision, 2002, pp. 698\u2013714.", "citeRegEx": "2", "shortCiteRegEx": null, "year": 2002}, {"title": "Recursive estimation of time-varying motion and structure parameters", "author": ["J.L. Barron", "R. Eagleson"], "venue": "Patt. Recognition, vol. 29, no. 5, pp. 797\u2013818, 1996.", "citeRegEx": "3", "shortCiteRegEx": null, "year": 1996}, {"title": "Comparison of approaches to egomotion computation", "author": ["T. Tian", "C. Tomasi", "D. Heeger"], "venue": "Proc. IEEE Conf. Comp. Vision Patt. Recog., pp. 315\u2013320, 1996.", "citeRegEx": "4", "shortCiteRegEx": null, "year": 1996}, {"title": "MFm: 3-D motion from 2-D motion causally integrated over time", "author": ["A. Chiuso", "P. Favaro", "H. Jin", "S. Soatto"], "venue": "Proc. of the European Conf. of Comp. Vision, 2000.", "citeRegEx": "5", "shortCiteRegEx": null, "year": 2000}, {"title": "Robust recovery of ego-motion", "author": ["M. Irani", "B. Rousso", "S. Peleg"], "venue": "Proc. Of Comp. Analysis of Images and Patt., 1993, pp. 371\u2013378.", "citeRegEx": "6", "shortCiteRegEx": null, "year": 1993}, {"title": "Integrated position estimation using aerial image sequences", "author": ["D.G. Sim", "R.H. Park", "R.C. Kim", "S.U. Lee", "I.C. Kim"], "venue": "IEEE Trans. on Patt. Analysis and Machine Intelligence, vol. 24, no. 1, pp. 1\u201318, 2002.", "citeRegEx": "7", "shortCiteRegEx": null, "year": 2002}, {"title": "A critique of structure-from-motion algorithms", "author": ["J. Oliensis"], "venue": "Comp. Vision and Image Understanding, vol. 80, pp. 172\u2013214, 2000.", "citeRegEx": "8", "shortCiteRegEx": null, "year": 2000}, {"title": "Error analysis for a navigation algorithm based on optical-flow and a digital terrain map", "author": ["R. Lerner", "P. Rotstein", "E. Rivlin"], "venue": "Proc. IEEE Conf. Comp. Vision Patt. Recog., vol. 1, 2004, pp. 604\u2013610.", "citeRegEx": "9", "shortCiteRegEx": null, "year": 2004}, {"title": "Epipolar geometry for panoramic cameras", "author": ["T. Svoboda", "T. Pajdla", "V. Hlavac"], "venue": "ECCV, vol. 1406, pp. 218\u2013232, 1998.", "citeRegEx": "10", "shortCiteRegEx": null, "year": 1998}, {"title": "Epipolar geometry for central catadioptric cameras", "author": ["T. Svoboda", "T. Pajdla"], "venue": "international Journal of Computer Vision, vol. 49, no. 1, pp. 23\u201337, 2002.", "citeRegEx": "11", "shortCiteRegEx": null, "year": 2002}, {"title": "Estimation of omnidirectional camera model from epipolar geometry", "author": ["B. Micusik", "T. Pajdla"], "venue": "CVPR, vol. 1, pp. 485\u2013490, 2003.", "citeRegEx": "12", "shortCiteRegEx": null, "year": 2003}, {"title": "A unifying theory for central panoramic systems", "author": ["C. Geyer", "K. Daniilidis"], "venue": "ECCV, vol. 1843, pp. 445\u2013461, 2000.", "citeRegEx": "13", "shortCiteRegEx": null, "year": 1843}, {"title": "Para-catadioptric camera auto-calibration from epipolar geometry. Research Report CTU-CMP-2003-18, CMP K13133", "author": ["B. Micusik", "T. Pajdla"], "venue": "FEE Czech Technical University in Prague,", "citeRegEx": "14", "shortCiteRegEx": "14", "year": 2003}, {"title": "Epipolar geometry for panoramic cameras", "author": ["T. Svoboda", "T. Pajdla", "V. Hlavac"], "venue": "ECCV, vol. 1406, pp. 218\u2013232, 1998.", "citeRegEx": "15", "shortCiteRegEx": null, "year": 1998}, {"title": "Epipolar geometry for panoramic cameras", "author": ["C. Geyer", "K. Daniilidis"], "venue": "ECCV, vol. 1406, pp. 218\u2013232, 1998.", "citeRegEx": "16", "shortCiteRegEx": null, "year": 1998}, {"title": "Catadioptric self-calibration", "author": ["S.B. Kang"], "venue": "CVPR, vol. 1, pp. 201\u2013207, 2000.", "citeRegEx": "17", "shortCiteRegEx": null, "year": 2000}, {"title": "Omnidirectional camera model and epipolar geometry estimation by ransac with bucketing", "author": ["B. Micusk", "T. Pajdla"], "venue": "SCIA, vol. 1, pp. 83\u201390, 2003.", "citeRegEx": "18", "shortCiteRegEx": null, "year": 2003}, {"title": "Robust wide baseline stereo from maximally stable extremal regions", "author": ["J. Matas", "O. Chum", "M. Urban", "T. Pajdla"], "venue": "BMVC, vol. 1, pp. 384\u2013 393, 2002.", "citeRegEx": "19", "shortCiteRegEx": null, "year": 2002}, {"title": "A theory of catadioptric image formation", "author": ["S. Baker", "S. Nayar"], "venue": "Proc. of IEEE Int. Conf. on Comp. Vision, 1998, pp. 35\u201342.", "citeRegEx": "20", "shortCiteRegEx": null, "year": 1998}, {"title": "Pose and motion recovery from feature correspondences and a digital terrain map", "author": ["R. Lerner", "E. Rivlin", "H. Rotstein"], "venue": "2006, submitted for publication in TPAMI.", "citeRegEx": "21", "shortCiteRegEx": null, "year": 2006}, {"title": "An iterative image registration technique with an application to stereo vision", "author": ["B.D. Lucas", "T. Kanade"], "venue": "Proc. of the 7th Int. Joint Conf. on Artificial Intelligence, Vancouver, Canada, 1981, pp. 674\u2013679.", "citeRegEx": "22", "shortCiteRegEx": null, "year": 1981}, {"title": "Pyramidal implementation of the lucas kanade feature tracker, description of the algorithm", "author": ["J.Y. Bouguet"], "venue": "Intel Research Lab, Tech. Rep., 1999.", "citeRegEx": "23", "shortCiteRegEx": null, "year": 1999}], "referenceMentions": [{"referenceID": 0, "context": "Few examples for such algorithms are [1], [2].", "startOffset": 37, "endOffset": 40}, {"referenceID": 1, "context": "Few examples for such algorithms are [1], [2].", "startOffset": 42, "endOffset": 45}, {"referenceID": 2, "context": "Several ego-motion estimation algorithms can be found in [3], [4], [5], [6].", "startOffset": 57, "endOffset": 60}, {"referenceID": 3, "context": "Several ego-motion estimation algorithms can be found in [3], [4], [5], [6].", "startOffset": 62, "endOffset": 65}, {"referenceID": 4, "context": "Several ego-motion estimation algorithms can be found in [3], [4], [5], [6].", "startOffset": 67, "endOffset": 70}, {"referenceID": 5, "context": "Several ego-motion estimation algorithms can be found in [3], [4], [5], [6].", "startOffset": 72, "endOffset": 75}, {"referenceID": 6, "context": "In [7] such navigation-system is being suggested.", "startOffset": 3, "endOffset": 6}, {"referenceID": 6, "context": "In [7] a segment of the ground was reconstructed using \u2018structurefrom-motion\u2019 (SFM) algorithm and was matched to the DTM in order to derive the camera\u2019s pose.", "startOffset": 3, "endOffset": 6}, {"referenceID": 7, "context": "Using SFM algorithm, which does not make any use of the information obtained from the DTM but bases its estimate on the flow-field alone, positions their technique under the same critique that applies for SFM algorithms [8].", "startOffset": 220, "endOffset": 223}, {"referenceID": 8, "context": "The algorithm presented in the previous work [9] does not require an intermediate explicit reconstruction of the 3D world.", "startOffset": 45, "endOffset": 48}, {"referenceID": 9, "context": "sequence of images that covers a field of view of 360 degrees [10], [11], [12], [13], [14], [15], [16], [17], [18], [19].", "startOffset": 62, "endOffset": 66}, {"referenceID": 10, "context": "sequence of images that covers a field of view of 360 degrees [10], [11], [12], [13], [14], [15], [16], [17], [18], [19].", "startOffset": 68, "endOffset": 72}, {"referenceID": 11, "context": "sequence of images that covers a field of view of 360 degrees [10], [11], [12], [13], [14], [15], [16], [17], [18], [19].", "startOffset": 74, "endOffset": 78}, {"referenceID": 12, "context": "sequence of images that covers a field of view of 360 degrees [10], [11], [12], [13], [14], [15], [16], [17], [18], [19].", "startOffset": 80, "endOffset": 84}, {"referenceID": 13, "context": "sequence of images that covers a field of view of 360 degrees [10], [11], [12], [13], [14], [15], [16], [17], [18], [19].", "startOffset": 86, "endOffset": 90}, {"referenceID": 14, "context": "sequence of images that covers a field of view of 360 degrees [10], [11], [12], [13], [14], [15], [16], [17], [18], [19].", "startOffset": 92, "endOffset": 96}, {"referenceID": 15, "context": "sequence of images that covers a field of view of 360 degrees [10], [11], [12], [13], [14], [15], [16], [17], [18], [19].", "startOffset": 98, "endOffset": 102}, {"referenceID": 16, "context": "sequence of images that covers a field of view of 360 degrees [10], [11], [12], [13], [14], [15], [16], [17], [18], [19].", "startOffset": 104, "endOffset": 108}, {"referenceID": 17, "context": "sequence of images that covers a field of view of 360 degrees [10], [11], [12], [13], [14], [15], [16], [17], [18], [19].", "startOffset": 110, "endOffset": 114}, {"referenceID": 18, "context": "sequence of images that covers a field of view of 360 degrees [10], [11], [12], [13], [14], [15], [16], [17], [18], [19].", "startOffset": 116, "endOffset": 120}, {"referenceID": 19, "context": "In [20] a theorem is presented stating that a catadioptric camera has a single effective viewpoint if and only if the mirrors cross-section is a conic section.", "startOffset": 3, "endOffset": 7}, {"referenceID": 8, "context": "In this paper the navigation algorithm that was presented in [9] is extended to handle omnidirectional data.", "startOffset": 61, "endOffset": 64}, {"referenceID": 8, "context": "As was shown in [9], one of the most important factors that influence the robustness and the accuracy of the navigation algorithm is the complexity of the observed terrain.", "startOffset": 16, "endOffset": 19}, {"referenceID": 20, "context": "As was suggested in [21], M-estimator can be integrated into this scheme to increase its robustness in the presence of outliers.", "startOffset": 20, "endOffset": 24}, {"referenceID": 21, "context": "Correspondence between about 100 features per camera (300 features all together) was derived using the Lucas-Kanade tracking method [22], [23].", "startOffset": 132, "endOffset": 136}, {"referenceID": 22, "context": "Correspondence between about 100 features per camera (300 features all together) was derived using the Lucas-Kanade tracking method [22], [23].", "startOffset": 138, "endOffset": 142}, {"referenceID": 8, "context": "In [9], the sensitivities of the proposed algorithm were studied.", "startOffset": 3, "endOffset": 6}], "year": 2006, "abstractText": "An algorithm for pose and motion estimation using corresponding features in omnidirectional images and a digital terrain map is proposed. In previous paper, such algorithm for regular camera was considered. Using a Digital Terrain (or Digital Elevation) Map (DTM/DEM) as a global reference enables recovering the absolute position and orientation of the camera. In order to do this, the DTM is used to formulate a constraint between corresponding features in two consecutive frames. In this paper, these constraints are extended to handle non-central projection, as is the case with many omnidirectional systems. The utilization of omnidirectional data is shown to improve the robustness and accuracy of the navigation algorithm. The feasibility of this algorithm is established through lab experimentation with two kinds of omnidirectional acquisition systems. The first one is polydioptric cameras while the second is catadioptric camera.", "creator": null}}}