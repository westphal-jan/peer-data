{"id": "1107.1283", "review": {"conference": "NIPS", "VERSION": "v1", "DATE_OF_SUBMISSION": "7-Jul-2011", "title": "Spectral Methods for Learning Multivariate Latent Tree Structure", "abstract": "this work considers the problem of learning the structure of a broad class of purely multivariate latent variable tree system models, which include a variety of continuous and discrete curve models ( additionally including the widely used linear - gaussian models, hidden markov models, and markov chain evolutionary trees ). the setting is one question where we only have samples from certain hypothetical observed variables in the tree and our goal is to estimate the stationary tree structure ( i. e., the graph of how the underlying hidden variables are connected to matched the observed variables ). we provide the spectral gradient recursive parameter grouping statistics algorithm, an efficient and simple bottom - up procedure for recovering the tree structure structure from independent samples of the observed variables. our finite sample size bounds correct for assessing exact recovery of the dynamic tree structure elucidate certain natural dependencies on underlying statistical and structural properties of exactly the simulated underlying joint distribution. furthermore, our sample complexity guarantees have no useful explicit dependence on the dimensionality of the observed variables, making the algorithm applicable broadly to many high - dimensional settings. at the heart of training our algorithm basically is a special spectral quartet test for determining the relative topology of a quartet of variables, however which only utilizes certain second order statistics and is based on the determinants of certain cross - covariance matrices.", "histories": [["v1", "Thu, 7 Jul 2011 02:33:31 GMT  (367kb,D)", "https://arxiv.org/abs/1107.1283v1", null], ["v2", "Tue, 8 Nov 2011 15:42:32 GMT  (172kb,D)", "http://arxiv.org/abs/1107.1283v2", null]], "reviews": [], "SUBJECTS": "cs.LG stat.ML", "authors": ["animashree anandkumar", "kamalika chaudhuri", "daniel j hsu", "sham m kakade", "le song", "tong zhang 0001"], "accepted": true, "id": "1107.1283"}, "pdf": {"name": "1107.1283.pdf", "metadata": {"source": "CRF", "title": "Spectral Methods for Learning Multivariate Latent Tree Structure", "authors": ["Animashree Anandkumar", "Kamalika Chaudhuri", "Daniel Hsu", "Sham M. Kakade", "Le Song", "Tong Zhang"], "emails": ["a.anandkumar@uci.edu,", "kamalika@cs.ucsd.edu,", "dahsu@microsoft.com,", "skakade@microsoft.com,", "lesong@cs.cmu.edu,", "tzhang@stat.rutgers.edu"], "sections": [{"heading": "1 Introduction", "text": "Graphical models are a central tool in modern machine learning applications, as they provide a natural methodology for succinctly representing high-dimensional distributions. As such, they have enjoyed much success in various AI and machine learning applications such as natural language processing, speech recognition, robotics, computer vision, and bioinformatics.\nThe main statistical challenges associated with graphical models include estimation and inference. While the body of techniques for probabilistic inference in graphical models is rather rich [29], current methods for tackling the more challenging problems of parameter and structure estimation are less developed and understood, especially in the presence of latent (hidden) variables. The problem of parameter estimation involves determining the model parameters from samples of certain observed variables. Here, the predominant approach is the expectation maximization (EM) algorithm, and only rather recently is the understanding of this algorithm improving [10, 5]. The problem of structure learning is to estimate the underlying graph\nE-mail: a.anandkumar@uci.edu, kamalika@cs.ucsd.edu, dahsu@microsoft.com, skakade@microsoft.com, lesong@cs.cmu.edu, tzhang@stat.rutgers.edu\nar X\niv :1\n10 7.\n12 83\nv2 [\ncs .L\nG ]\nof the graphical model. In general, structure learning is NP-hard and becomes even more challenging when some variables are unobserved [6]. The main approaches for structure estimation are either greedy or local search approaches [9, 15] or, more recently, based on convex relaxation [25].\nThis work focuses on learning the structure of multivariate latent tree graphical models. Here, the underlying graph is a directed tree (e.g., hidden Markov model, binary evolutionary tree), and only samples from a set of (multivariate) observed variables (the leaves of the tree) are available for learning the structure. Latent tree graphical models are relevant in many applications, ranging from computer vision, where one may learn object/scene structure from the co-occurrences of objects to aid image understanding [7]; to phylogenetics, where the central task is to reconstruct the tree of life from the genetic material of surviving species [12].\nGenerally speaking, methods for learning latent tree structure exploit structural properties afforded by the tree that are revealed through certain statistical tests over every choice of four variables in the tree. These quartet tests, which have origins in structural equation modeling [30, 3], are hypothesis tests of the relative configuration of four (possibly non-adjacent) nodes/variables in the tree (see Figure 1); they are also related to the four point condition associated with a corresponding additive tree metric induced by the distribution [4]. Some early methods for learning tree structure are based on the use of exact correlation statistics or distance measurements (e.g., [24, 26]). Unfortunately, these methods ignore the crucial aspect of estimation error, which ultimately governs their sample complexity. Indeed, this (lack of) robustness to estimation error has been quantified for various algorithms (notably, for the popular Neighbor Joining algorithm [14, 19]), and therefore serves as a basis for comparing different methods. Subsequent work in the area of mathematical phylogenetics has focused on the sample complexity of evolutionary tree reconstruction [13, 14, 20, 11]. The basic model there corresponds to a directed tree over discrete random variables, and much of the recent effort deals exclusively in the regime for a certain model parameter (the Kesten-Stigum regime [18]) that allows for a sample complexity that is polylogarithmic in the number of leaves, as opposed to polynomial [20, 11]. Finally, recent work in machine learning has developed structure learning methods for latent tree graphical models that extend beyond the discrete distributions of evolutionary trees [8], thereby widening their applicability to other problem domains.\nThis work extends beyond previous studies, which have focused on latent tree models with either discrete or scalar Gaussian variables, by directly addressing the multivariate setting where hidden and observed nodes may be random vectors rather than scalars. The generality of our techniques allows us to handle a much wider class of distributions than before, both in terms of the conditional independence properties imposed by the models (i.e., the random vector associated with a node need not follow a distribution that corresponds to a tree model), as well as other characteristics of the node distributions (e.g., some nodes in the tree could have discrete state spaces and others continuous, as in a Gaussian mixture model).\nWe propose the Spectral Recursive Grouping algorithm for learning multivariate latent tree structure. The algorithm has at its core a multivariate spectral quartet test, which extends the classical quartet tests for scalar variables by applying spectral techniques from multivariate statistics (specifically canonical correlation analysis [2, 22]). Spectral methods have enjoyed recent success in the context of parameter estimation [21, 16, 27, 28]; our work shows that they are also useful for structure learning. We use the spectral quartet test in a simple modification of the recursive grouping algorithm of [8] to perform the tree reconstruction. The algorithm is essentially a robust method for reasoning about the results of quartet tests (viewed simply as hypothesis tests); the tests either confirm or reject hypotheses about the relative topology over quartets of\nvariables. By carefully choosing which tests to consider and properly interpreting their results, the algorithm is able to recover the correct latent tree structure (with high probability) in a provably efficient manner, in terms of both computational and sample complexity. The recursive grouping procedure is similar to the short quartet method from phylogenetics [14], which also guarantees efficient reconstruction in the context of evolutionary trees. However, our method and analysis applies to considerably more general high-dimensional settings; for instance, our sample complexity bound is given in terms of natural correlation conditions that generalize the more restrictive effective depth conditions of previous works [14, 8]. Finally, we note that while we do not directly address the question of parameter estimation, provable parameter estimation methods may derived using the spectral techniques from [21, 16]."}, {"heading": "2 Preliminaries", "text": ""}, {"heading": "2.1 Latent variable tree models", "text": "Let T be a connected, directed tree graphical model with leaves Vobs := {x1, x2, . . . , xn} and internal nodes Vhid := {h1, h2, . . . , hm} such that every node has at most one parent. The leaves are termed the observed variables and the internal nodes hidden variables. Note that all nodes in this work generally correspond to multivariate random vectors; we will abuse terminology and still refer to these random vectors as random variables. For any h \u2208 Vhid, let ChildrenT(h) \u2286 VT denote the children of h in T.\nEach observed variable x \u2208 Vobs is modeled as random vector in Rd, and each hidden variable h \u2208 Vhid as a random vector in Rk. The joint distribution over all the variables VT := Vobs \u222a Vhid is assumed satisfy conditional independence properties specified by the tree structure over the variables. Specifically, for any disjoint subsets V1, V2, V3 \u2286 VT such that V3 separates V1 from V2 in T, the variables in V1 are conditionally independent of those in V2 given V3."}, {"heading": "2.2 Structural and distributional assumptions", "text": "The class of models considered are specified by the following structural and distributional assumptions.\nCondition 1 (Linear conditional means). Fix any hidden variable h \u2208 Vhid. For each hidden child g \u2208 ChildrenT(h) \u2229 Vhid, there exists a matrix A(g|h) \u2208 Rk\u00d7k such that\nE[g|h] = A(g|h)h;\nand for each observed child x \u2208 ChildrenT(h) \u2229 Vobs, there exists a matrix C(x|h) \u2208 Rd\u00d7k such that\nE[x|h] = C(x|h)h.\nWe refer to the class of tree graphical models satisfying Condition 1 as linear tree models. Such models include a variety of continuous and discrete tree distributions (as well as hybrid combinations of the two, such as Gaussian mixture models) which are widely used in practice. Continuous linear tree models include linear-Gaussian models and Kalman filters. In the discrete case, suppose that the observed variables take on d values, and hidden variables take k values. Then, each variable is represented by a binary vector in {0, 1}s, where s = d for the observed variables and s = k for the hidden variables (in particular, if the variable takes value i, then the corresponding vector is the i-th coordinate vector), and any conditional distribution between the variables is represented by a linear relationship. Thus, discrete linear tree models include discrete hidden Markov models [16] and Markovian evolutionary trees [21].\nIn addition to the linearity, the following conditions are assumed in order to recover the hidden tree structure. For any matrix M , let \u03c3t(M) denote its t-th largest singular value.\nCondition 2 (Rank condition). The variables in VT = Vhid \u222a Vobs obey the following rank conditions.\n1. For all h \u2208 Vhid, E[hh>] has rank k (i.e., \u03c3k(E[hh>]) > 0).\n2. For all h \u2208 Vhid and hidden child g \u2208 ChildrenT(h) \u2229 Vhid, A(g|h) has rank k.\n3. For all h \u2208 Vhid and observed child x \u2208 ChildrenT(h) \u2229 Vobs, C(x|h) has rank k.\nThe rank condition is a generalization of parameter identifiability conditions in latent variable models [1, 21, 16] which rules out various (provably) hard instances in discrete variable settings [21].\nCondition 3 (Non-redundancy condition). Each hidden variable has at least three neighbors. Furthermore, there exists \u03c12max > 0 such that for each pair of distinct hidden variables h, g \u2208 Vhid,\ndet(E[hg>])2\ndet(E[hh>]) det(E[gg>]) \u2264 \u03c12max < 1.\nThe requirement for each hidden node to have three neighbors is natural; otherwise, the hidden node can be eliminated. The quantity \u03c1max is a natural multivariate generalization of correlation. First, note that \u03c1max \u2264 1, and that if \u03c1max = 1 is achieved with some h and g, then h and g are completely correlated, implying the existence of a deterministic map between hidden nodes h and g; hence simply merging the two nodes into a single node h (or g) resolves this issue. Therefore the non-redundancy condition simply means that any two hidden nodes h and g cannot be further reduced to a single node. Clearly, this condition is necessary for the goal of identifying the correct tree structure, and it is satisfied as soon as h and g have limited correlation in just a single direction. Previous works [24, 23] show that an analogous condition ensures identifiability for general latent tree models (and in fact, the conditions are identical in the Gaussian case). Condition 3 is therefore a generalization of this condition suitable for the multivariate setting.\nOur learning guarantees also require a correlation condition that generalize the explicit depth conditions considered in the phylogenetics literature [14, 21]. To state this condition, first define Fh to be the set of subtrees of that remain after a hidden variable h \u2208 Vhid is removed from T (see Figure 2). Also, for any subtree T \u2032 of T, let Vobs[T \u2032] \u2286 Vobs be the observed variables in T \u2032.\nCondition 4 (Correlation condition). There exists \u03b3min > 0 such that for all hidden variables h \u2208 Vhid and all triples of subtrees {T1, T2, T3} \u2286 Fh in the forest obtained if h is removed from T,\nmax x1\u2208Vobs[T1],x2\u2208Vobs[T2],x3\u2208Vobs[T3] min {i,j}\u2282{1,2,3}\n\u03c3k(E[xix>j ]) \u2265 \u03b3min.\nThe quantity \u03b3min is related to the effective depth of T, which is the maximum graph distance between a hidden variable and its closest observed variable [14, 8]. The effective depth is at most logarithmic in the number of variables (as achieved by a complete binary tree), though it can also be a constant if every hidden variable is close to an observed variable (e.g., in a hidden Markov model, the effective depth is 1, even though the true depth, or diameter, is m+ 1). If the matrices giving the (conditionally) linear relationship between neighboring variables in T are all well-conditioned, then \u03b3min is at worst exponentially small in the effective depth, and therefore at worst polynomially small in the number of variables.\nAlgorithm 1 SpectralQuartetTest on observed variables {z1, z2, z3, z4}. Input: For each pair {i, j} \u2282 {1, 2, 3, 4}, an empirical estimate \u03a3\u0302i,j of the second-moment matrix E[ziz>j ]\nand a corresponding confidence parameter \u2206i,j > 0. Output: Either a pairing {{zi, zj}, {zi\u2032 , zj\u2032}} or \u22a5.\n1: if there exists a partition of {z1, z2, z3, z4} = {zi, zj} \u222a {zi\u2032 , zj\u2032} such that\nk\u220f s=1 [\u03c3s(\u03a3\u0302i,j)\u2212\u2206i,j ]+[\u03c3s(\u03a3\u0302i\u2032,j\u2032)\u2212\u2206i\u2032,j\u2032 ]+ > k\u220f s=1 (\u03c3s(\u03a3\u0302i\u2032,j) + \u2206i\u2032,j)(\u03c3s(\u03a3\u0302i,j\u2032) + \u2206i,j\u2032)\nthen return the pairing {{zi, zj}, {zi\u2032 , zj\u2032}}. 2: else return \u22a5.\nFinally, also define \u03b3max := max\n{x1,x2}\u2286Vobs {\u03c31(E[x1x>2 ])}\nto be the largest spectral norm of any second-moment matrix between observed variables. Note \u03b3max \u2264 1 in the discrete case, and, in the continuous case, \u03b3max \u2264 1 if each observed random vector is in isotropic position.\nIn this work, the Euclidean norm of a vector x is denoted by \u2016x\u2016, and the (induced) spectral norm of a matrix A is denoted by \u2016A\u2016, i.e., \u2016A\u2016 := \u03c31(A) = sup{\u2016Ax\u2016 : \u2016x\u2016 = 1}."}, {"heading": "3 Spectral quartet tests", "text": "This section describes the core of our learning algorithm, a spectral quartet test that determines topology of the subtree induced by four observed variables {z1, z2, z3, z4}. There are four possibilities for the induced subtree, as shown in Figure 1. Our quartet test either returns the correct induced subtree among possibilities in Figure 1(a)\u2013(c); or it outputs \u22a5 to indicate abstinence. If the test returns \u22a5, then no guarantees are provided on the induced subtree topology. If it does return a subtree, then the output is guaranteed to be the correct induced subtree (with high probability).\nThe quartet test proposed is described in Algorithm 1 (SpectralQuartetTest). The notation [a]+ denotes max{0, a} and [t] (for an integer t) denotes the set {1, 2, . . . , t}.\nThe quartet test is defined with respect to four observed variables Z := {z1, z2, z3, z4}. For each pair of variables zi and zj , it takes as input an empirical estimate \u03a3\u0302i,j of the second-moment matrix E[ziz>j ], and confidence bound parameters \u2206i,j which are functions of N , the number of samples used to compute the \u03a3\u0302i,j \u2019s, a confidence parameter \u03b4, and of properties of the distributions of zi and zj . In practice, one uses a single threshold \u2206 for all pairs, which is tuned by the algorithm. Our theoretical analysis also applies to this case. The output of the test is either \u22a5 or a pairing of the variables {{zi, zj}, {zi\u2032 , zj\u2032}}. For example, if the output is the pairing is {{z1, z2}, {z3, z4}}, then Figure 1(a) is the output topology.\nEven though the configuration in Figure 1(d) is a possibility, the spectral quartet test never returns {{z1, z2, z3, z4}}, as there is no correct pairing of Z. The topology {{z1, z2, z3, z4}} can be viewed as a degenerate case of {{z1, z2}, {z3, z4}} (say) where the hidden variables h and g are deterministically identical, and Condition 3 fails to hold with respect to h and g."}, {"heading": "3.1 Properties of the spectral quartet test", "text": "With exact second moments: The spectral quartet test is motivated by the following lemma, which shows the relationship between the singular values of second-moment matrices of the zi\u2019s and the induced topology among them in the latent tree. Let detk(M) := \u220fk s=1 \u03c3s(M) denote the product of the k largest singular values of a matrix M .\nLemma 1 (Perfect quartet test). Suppose that the observed variables Z = {z1, z2, z3, z4} have the true induced tree topology shown in Figure 1(a), and the tree model satisfies Condition 1 and Condition 2. Then\ndetk(E[z1z>3 ])detk(E[z2z>4 ]) detk(E[z1z>2 ])detk(E[z3z>4 ]) = detk(E[z1z>4 ])detk(E[z2z>3 ]) detk(E[z1z>2 ])detk(E[z3z>4 ]) = det(E[hg>])2 det(E[hh>]) det(E[gg>]) \u2264 1 (1)\nand detk(E[z1z>3 ])detk(E[z2z>4 ]) = detk(E[z1z>4 ])detk(E[z2z>3 ]).\nThis lemma shows that given the true second-moment matrices and assuming Condition 3, the inequality in (1) becomes strict and thus can be used to deduce the correct topology: the correct pairing is {{zi, zj}, {zi\u2032 , zj\u2032}} if and only if\ndetk(E[ziz>j ])detk(E[zi\u2032z>j\u2032 ]) > detk(E[zi\u2032z>j ])detk(E[ziz>j\u2032 ]).\nReliability: The next lemma shows that even if the singular values of E[ziz>j ] are not known exactly, then with valid confidence intervals (that contain these singular values) a robust test can be constructed which is reliable in the following sense: if it does not output \u22a5, then the output topology is indeed the correct topology.\nLemma 2 (Reliability). Consider the setup of Lemma 1, and suppose that Figure 1(a) is the correct topology. If for all pairs {zi, zj} \u2282 Z and all s \u2208 [k], \u03c3s(\u03a3\u0302i,j) \u2212 \u2206i,j \u2264 \u03c3s(E[ziz>j ]) \u2264 \u03c3s(\u03a3\u0302i,j) + \u2206i,j, and if SpectralQuartetTest returns a pairing {{zi, zj}, {zi\u2032 , zj\u2032}}, then {{zi, zj}, {zi\u2032 , zj\u2032}} = {{z1, z2}, {z3, z4}}.\nIn other words, the spectral quartet test never returns an incorrect pairing as long as the singular values of E[ziz>j ] lie in an interval of length 2\u2206i,j around the singular values of \u03a3\u0302i,j . The lemma below shows how to set the \u2206i,js as a function of N , \u03b4 and properties of the distributions of zi and zj so that this required event holds with probability at least 1 \u2212 \u03b4. We remark that any valid confidence intervals may be used; the one described below is particularly suitable when the observed variables are high-dimensional random vectors.\nLemma 3 (Confidence intervals). Let Z = {z1, z2, z3, z4} be four random vectors. Let \u2016zi\u2016 \u2264 Mi almost surely, and let \u03b4 \u2208 (0, 1/6). If each empirical second-moment matrix \u03a3\u0302i,j is computed using N iid copies of zi and zj, and if\nd\u0304i,j := E[\u2016zi\u20162\u2016zj\u20162]\u2212 tr(E[ziz>j ]E[ziz>j ]>)\nmax{\u2016E[\u2016zj\u20162ziz>i ]\u2016, \u2016E[\u2016zi\u20162zjz>j ]\u2016} , ti,j := 1.55 ln(24d\u0304i,j/\u03b4),\n\u2206i,j \u2265\n\u221a 2 max {\u2225\u2225E[\u2016zj\u20162ziz>i ]\u2225\u2225,\u2225\u2225E[\u2016zi\u20162zjz>j ]\u2225\u2225}ti,j N + MiMjti,j 3N ,\nthen with probability 1\u2212 \u03b4, for all pairs {zi, zj} \u2282 Z and all s \u2208 [k],\n\u03c3s(\u03a3\u0302i,j)\u2212\u2206i,j \u2264 \u03c3s(E[ziz>j ]) \u2264 \u03c3s(\u03a3\u0302i,j) + \u2206i,j . (2)\nConditions for returning a correct pairing: The conditions under which SpectralQuartetTest returns an induced topology (as opposed to \u22a5) are now provided.\nAn important quantity in this analysis is the level of non-redundancy between the hidden variables h and g. Let\n\u03c12 := det(E[hg>])2\ndet(E[hh>]) det(E[gg>]) . (3)\nIf Figure 1(a) is the correct induced topology among {z1, z2, z3, z4}, then the smaller \u03c1 is, the greater the gap between detk(E[z1z>2 ])detk(E[z3z>4 ]) and either of detk(E[z1z>3 ])detk(E[z2z>4 ]) and detk(E[z1z>4 ])detk(E[z2z>3 ]). Therefore, \u03c1 also governs how small the \u2206i,j need to be for the quartet test to return a correct pairing; this is quantified in Lemma 4. Note that Condition 3 implies \u03c1 \u2264 \u03c1max < 1.\nLemma 4 (Correct pairing). Suppose that (i) the observed variables Z = {z1, z2, z3, z4} have the true induced tree topology shown in Figure 1(a); (ii) the tree model satisfies Condition 1, Condition 2, and \u03c1 < 1 (where \u03c1 is defined in (3)), and (iii) the confidence bounds in (2) hold for all {i, j} and all s \u2208 [k]. If\n\u2206i,j < 1\n8k \u00b7min\n{ 1, 1 \u03c1 \u2212 1 } \u00b7min {i,j} {\u03c3k(E[ziz>j ])}\nfor each pair {i, j}, then SpectralQuartetTest returns the correct pairing {{z1, z2}, {z3, z4}}."}, {"heading": "4 The Spectral Recursive Grouping algorithm", "text": "The Spectral Recursive Grouping algorithm, presented as Algorithm 2, uses the spectral quartet test discussed in the previous section to estimate the structure of a multivariate latent tree distribution from iid samples of the observed leaf variables.1 The algorithm is a modification of the recursive grouping (RG) procedure proposed in [8]. RG builds the tree in a bottom-up fashion, where the initial working set of variables are the observed variables. The variables in the working set always correspond to roots of disjoint subtrees of T discovered by the algorithm. (Note that because these subtrees are rooted, they naturally induce parent/child relationships, but these may differ from those implied by the edge directions in T.) In each iteration, the algorithm determines which variables in the working set to combine. If the variables are combined as siblings, then a new hidden variable is introduced as their parent and is added to the working set, and its children are removed. If the variables are combined as neighbors (parent/child), then the child is removed from the working set. The process repeats until the entire tree is constructed.\nOur modification of RG uses the spectral quartet tests from Section 3 to decide which subtree roots in the current working set to combine. Note that because the test may return \u22a5 (a null result), our algorithm uses the tests to rule out possible siblings or neighbors among variables in the working set\u2014this is encapsulated in the subroutine Mergeable (Algorithm 3), which tests quartets of observed variables (leaves) in the subtrees rooted at working set variables. For any pair {u, v} \u2286 R submitted to the subroutine (along with the current working set R and leaf sets L[\u00b7]):\n\u2022 Mergeable returns false if there is evidence (provided by a quartet test) that u and v should first be joined with different variables (u\u2032 and v\u2032, respectively) before joining with each other; and\n\u2022 Mergeable returns true if no quartet test provides such evidence.\nThe subroutine is also used by the subroutine Relationship (Algorithm 4) which determines whether a candidate pair of variables should be merged as neighbors (parent/child) or as siblings: essentially, to check if u is a parent of v, it checks if v is a sibling of each child of u. The use of unreliable estimates of long-range correlations is avoided by only considering highly-correlated variables as candidate pairs to merge (where correlation is measured using observed variables in their corresponding subtrees as proxies). This leads to a sample-efficient algorithm for recovering the hidden tree structure.\nThe Spectral Recursive Grouping algorithm enjoys the following guarantee.\nTheorem 1. Let \u03b7 \u2208 (0, 1). Assume the directed tree graphical model T over variables (random vectors) VT = Vobs \u222a Vhid satisfies Conditions 1, 2, 3, and 4. Suppose the Spectral Recursive Grouping algorithm (Algorithm 2) is provided N independent samples from the distribution over Vobs, and uses parameters given by\n\u2206xi,xj :=\n\u221a 2Bxi,xj txi,xj\nN + MxiMxj txi,xj 3N (4)\n1To simplify notation, we assume that the estimated second-moment matrices \u03a3\u0302x,y and threshold parameters \u2206x,y \u2265 0 for all pairs {x, y} \u2282 Vobs are globally defined. In particular, we assume the spectral quartet tests use these quantities.\nAlgorithm 2 Spectral Recursive Grouping.\nInput: Empirical second-moment matrices \u03a3\u0302x,y for all pairs {x, y} \u2282 Vobs computed from N iid samples from the distribution over Vobs; threshold parameters \u2206x,y for all pairs {x, y} \u2282 Vobs. Output: Tree structure T\u0302 or \u201cfailure\u201d. 1: let R := Vobs, and for all x \u2208 R, T [x] := rooted single-node tree x and L[x] := {x}. 2: while |R| > 1 do 3: let pair {u, v} \u2208 {{u\u0303, v\u0303} \u2286 R : Mergeable(R,L[\u00b7], u\u0303, v\u0303) = true} be such that max{\u03c3k(\u03a3\u0302x,y) : (x, y) \u2208\nL[u]\u00d7 L[v]} is maximized. If no such pair exists, then halt and return \u201cfailure\u201d. 4: let result := Relationship(R,L[\u00b7], T [\u00b7], u, v). 5: if result = \u201csiblings\u201d then 6: Create a new variable h, create subtree T [h] rooted at h by joining T [u] and T [v] to h with edges {h, u} and {h, v}, and set L[h] := L[u] \u222a L[v]. 7: Add h to R, and remove u and v from R. 8: else if result = \u201cu is parent of v\u201d then 9: Modify subtree T [u] by joining T [v] to u with an edge {u, v}, and modify L[u] := L[u] \u222a L[v].\n10: Remove v from R. 11: else if result = \u201cv is parent of u\u201d then 12: {Analogous to above case.} 13: end if 14: end while 15: Return T\u0302 := T [h] where R = {h}.\nAlgorithm 3 Subroutine Mergeable(R,L[\u00b7], u, v). Input: Set of nodes R; leaf sets L[v] for all v \u2208 R; distinct u, v \u2208 R. Output: true or false.\n1: if there exists distinct u\u2032, v\u2032 \u2208 R \\ {u, v} and (x, y, x\u2032, y\u2032) \u2208 L[u] \u00d7 L[v] \u00d7 L[u\u2032] \u00d7 L[v\u2032] s.t. SpectralQuartetTest({x, y, x\u2032, y\u2032}) returns {{x, x\u2032}, {y, y\u2032}} or {{x, y\u2032}, {x\u2032, y}} then return false. 2: else return true.\nwhere\nBxi,xj := max {\u2225\u2225E[\u2016xi\u20162xjx>j ]\u2225\u2225,\u2225\u2225E[\u2016xj\u20162xix>i ]\u2225\u2225}, Mxi \u2265 \u2016xi\u2016 almost surely,\nd\u0304xi,xj := E[\u2016xi\u20162\u2016xj\u20162]\u2212 tr(E[xix>j ]E[xjx>i ]) max {\u2225\u2225E[\u2016xj\u20162xix>i ]\u2225\u2225,\u2225\u2225E[\u2016xi\u20162xjx>j ]\u2225\u2225} , txi,xj := 4 ln(4d\u0304xi,xjn/\u03b7).\nLet B := maxxi,xj\u2208Vobs{Bxi,xj}, M := maxxi\u2208Vobs{Mxi}, t := maxxi,xj\u2208Vobs{txi,xj}. If\nN > 200 \u00b7 k2 \u00b7B \u00b7 t(\n\u03b32min \u03b3max\n\u00b7 (1\u2212 \u03c1max) )2 + 7 \u00b7 k \u00b7M2 \u00b7 t\u03b32min\n\u03b3max \u00b7 (1\u2212 \u03c1max)\n,\nthen with probability at least 1\u2212 \u03b7, the Spectral Recursive Grouping algorithm returns a tree T\u0302 with the same undirected graph structure as T.\nConsistency is implied by the above theorem with an appropriate scaling of \u03b7 with N . The theorem reveals that the sample complexity of the algorithm depends solely on intrinsic spectral properties of the distribution. Note that there is no explicit dependence on the dimensions of the observable variables, which makes the result applicable to high-dimensional settings.\nAlgorithm 4 Subroutine Relationship(R,L[\u00b7], T [\u00b7], u, v). Input: Set of nodes R; leaf sets L[v] for all v \u2208 R; rooted subtrees T [v] for all v \u2208 R; distinct u, v \u2208 R. Output: \u201csiblings\u201d, \u201cu is parent of v\u201d (\u201cu\u2192 v\u201d), or \u201cv is parent of u\u201d (\u201cv \u2192 u\u201d).\n1: if u is a leaf then assert u 6\u2192 v. 2: if v is a leaf then assert v 6\u2192 u. 3: let R[w] := (R \\ {w}) \u222a {w\u2032 : w\u2032 is a child of w in T [w]} for each w \u2208 {u, v}. 4: if there exists child u1 of u in T [u] s.t. Mergeable(R[u],L[\u00b7], u1, v)=false then assert \u201cu 6\u2192 v\u201d. 5: if there exists child v1 of v in T [v] s.t. Mergeable(R[v],L[\u00b7], u, v1)=false then assert \u201cv 6\u2192 u\u201d. 6: if both \u201cu 6\u2192 v\u201d and \u201cv 6\u2192 u\u201d were asserted then return \u201csiblings\u201d. 7: else if \u201cu 6\u2192 v\u201d was asserted then return \u201cv is parent of u\u201d (\u201cv \u2192 u\u201d). 8: else return \u201cu is parent of v\u201d (\u201cu\u2192 v\u201d)."}, {"heading": "Acknowledgements", "text": "Part of this work was completed while DH was at the Wharton School of the University of Pennsylvania and at Rutgers University. AA was supported by in part by the setup funds at UCI and the AFOSR Award FA9550-10-1-0310."}, {"heading": "A Sample-based confidence intervals for singular values", "text": "We show how to derive confidence bounds for the singular values of \u03a3i,j := E[ziz>j ] for {i, j} \u2282 {1, 2, 3, 4} from N iid copies of the random vectors {z1, z2, z3, z4}. That is, we show how to set \u2206i,j so that, with high probability, \u03c3s(\u03a3\u0302i,j)\u2212\u2206i,j \u2264 \u03c3s(\u03a3i,j) \u2264 \u03c3s(\u03a3\u0302i,j) + \u2206i,j for all {i, j} and all s \u2208 [k].\nWe state exponential tail inequalities for the spectral norm of the estimation error \u03a3\u0302i,j \u2212\u03a3i,j . The first exponential tail inequality is stated for general random vectors under Bernstein-type conditions, and the second is specific to random vectors in the discrete setting.\nLemma 5. Let zi and zj be random vectors such that \u2016zi\u2016 \u2264Mi and \u2016zj\u2016 \u2264Mj almost surely, and let\nd\u0304i,j := E[\u2016zi\u20162\u2016zj\u20162]\u2212 tr(\u03a3i,j\u03a3>i,j) max {\u2225\u2225E[\u2016zj\u20162ziz>i ]\u2225\u2225,\u2225\u2225E[\u2016zi\u20162zjz>j ]\u2225\u2225} \u2264 max{dim(zi),dim(zj)}.\nLet \u03a3i,j := E[ziz>j ] and let \u03a3\u0302i,j be the empirical average of N independent copies of ziz>j . Pick any t > 0. With probability at least 1\u2212 4d\u0304i,jt(et \u2212 t\u2212 1)\u22121,\n\u2225\u2225\u2225\u03a3\u0302i,j \u2212\u03a3i,j\u2225\u2225\u2225 \u2264 \u221a 2 max {\u2225\u2225E[\u2016zj\u20162ziz>i ]\u2225\u2225,\u2225\u2225E[\u2016zi\u20162zjz>j ]\u2225\u2225}t\nN + MiMjt 3N .\nRemark 1. For any \u03b4 \u2208 (0, 1/6), we have 4d\u0304i,jt(et \u2212 t\u2212 1)\u22121 \u2264 \u03b4 provided that t \u2265 1.55 ln(4d\u0304i,j/\u03b4).\nProof. Define the random matrix\nZ :=\n[ ziz > j\nzjz > i\n] .\nLet Z1, . . . , ZN be independent copies of Z. Then Pr [\u2225\u2225\u2225\u03a3\u0302i,j \u2212\u03a3i,j\u2225\u2225\u2225 > t] = Pr[\u2225\u2225\u2225\u2225 1N N\u2211 `=1 Z` \u2212 E[Z] \u2225\u2225\u2225\u2225 > t ] .\nNote that\nE[Z2] = E [ \u2016zj\u20162ziz>i\n\u2016zi\u20162zjz>j ] so by convexity, \u2225\u2225E[Z2]\u2212 E[Z]2\u2225\u2225 \u2264 \u2225\u2225E[Z2]\u2225\u2225\n\u2264 max {\u2225\u2225E[\u2016zj\u20162ziz>i ]\u2225\u2225,\u2225\u2225E[\u2016zi\u20162zjz>j ]\u2225\u2225}\nand\ntr(E[Z2]\u2212 E[Z]2) = tr(E[\u2016zj\u20162ziz>i ]) + tr(E[\u2016zi\u20162zjz>j ])\u2212 tr(\u03a3i,j\u03a3>i,j)\u2212 tr(\u03a3>i,j\u03a3i,j) = 2 ( E[\u2016zi\u20162\u2016zj\u20162]\u2212 tr(\u03a3i,j\u03a3>i,j) ) .\nMoreover, \u2016Z\u2016 \u2264 \u2016zi\u2016\u2016zj\u2016 \u2264MiMj .\nBy the matrix Bernstein inequality [17], for any t > 0,\nPr \u2225\u2225\u2225\u03a3\u0302i,j \u2212\u03a3i,j\u2225\u2225\u2225 > \u221a 2 ( max {\u2225\u2225E[\u2016zj\u20162ziz>i ]\u2225\u2225,\u2225\u2225E[\u2016zi\u20162zjz>j ]\u2225\u2225}) t N + MiMjt 3N  \u2264 2 \u00b7 2 ( E[\u2016zi\u20162\u2016zj\u20162]\u2212 tr(\u03a3i,j\u03a3>i,j) ) max\n{\u2225\u2225E[\u2016zj\u20162ziz>i ]\u2225\u2225,\u2225\u2225E[\u2016zi\u20162zjz>j ]\u2225\u2225} \u00b7 t(et \u2212 t\u2212 1)\u22121 = 4d\u0304i,jt(et \u2212 t\u2212 1)\u22121. The claim follows.\nIn the case of discrete random variables (modeled as random vectors as described in Section 2), the following lemma from [16] can give a tighter exponential tail inequality.\nLemma 6 ([16]). Let zi and zj be random vectors, each with support on the vertices of a probability simplex. Let \u03a3i,j := E[ziz>j ] and let \u03a3\u0302i,j be the empirical average of N independent copies of ziz>j . Pick any t > 0. With probability at least 1\u2212 e\u2212t, \u2225\u2225\u2225\u03a3\u0302i,j \u2212\u03a3i,j\u2225\u2225\u2225 \u2264 \u2225\u2225\u2225\u03a3\u0302i,j \u2212\u03a3i,j\u2225\u2225\u2225\nF \u2264 1 +\n\u221a t\u221a\nN\n(where \u2016A\u2016F denotes the Frobenius norm of a matrix A).\nFor simplicity, we only work with Lemma 5, although it is easy to translate all of our results by changing the tail inequality. The proof of Lemma 3 is immediate from combining Lemma 5 and Weyl\u2019s Theorem.\nLemma 3 provides some guidelines on how to set the \u2206i,j as functions of N , \u03b4, and properties of zi and zj . The dependence on the properties of zi and zj comes through the quantities Mi, Mj , d\u0304i,j , and\nBi,j := max i,j { \u2225\u2225E[\u2016zj\u20162ziz>i ]\u2225\u2225,\u2225\u2225E[\u2016zi\u20162zjz>j ]\u2225\u2225}.\nIn practice, one may use plug-in estimates for these quantities, or use loose upper bounds based on weaker knowledge of the distribution. For instance, d\u0304i,j is at most max{dim(zi),dim(zj)}, the larger of the explicit vector dimensions of zi and zj . Also, if the maximum directional standard deviation \u03c3\u2217 of any zi is known, then Bi,j \u2264 max{M2i ,M2j }\u03c32\u2217. We note that as these are additive confidence intervals, some dependence on the properties of zi and zj is inevitable."}, {"heading": "B Analysis of the spectral quartet test", "text": "For any hidden variable h \u2208 Vhid, let DescendantsT(h) \u2286 VT be the descendants of h in T. For any g \u2208 DescendantsT(h)\u2229Vhid such that the (directed) path from h to g is h\u2192 g1 \u2192 g2 \u2192 \u00b7 \u00b7 \u00b7 \u2192 gq = g, define A(g|h) \u2208 Rk\u00d7k to be the product\nA(g|h) := A(gq|gq\u22121) \u00b7 \u00b7 \u00b7A(g2|g1)A(g1|h).\nSimilarly, for any x \u2208 DescendantsT(h) \u2229 Vobs such that the (directed) path from h to x is h \u2192 g1 \u2192 g2 \u2192 \u00b7 \u00b7 \u00b7 \u2192 gq \u2192 x, define C(x|h) \u2208 Rd\u00d7k to be the product\nC(x|h) := C(x|gq)A(gq|gq\u22121) \u00b7 \u00b7 \u00b7A(g2|g1)A(g1|h).\nB.1 log detk metric\nDefine the function \u00b5 : VT \u00d7 VT \u2192 R by\n\u00b5(u, v) :=  log detk(E[uu>]\u22121/2E[uv>]E[vv>]\u22121/2) if u, v \u2208 Vhid log detk(E[uv>]E[vv>]\u22121/2) if u \u2208 Vobs, v \u2208 Vhid log detk(E[uu>]\u22121/2E[uv>]) if u \u2208 Vhid, v \u2208 Vobs log detk(E[uv>]) if u, v \u2208 Vobs .\nProposition 1 (log detk metric). Assume Conditions 1 and 2 hold, and pick any u, v \u2208 VT. If w \u2208 VT\\{u, v} is on the (undirected) path u v, then \u00b5(u, v) = \u00b5(u,w) + \u00b5(w, v).\nProof. Suppose the induced topology over u, v, w in T is the following.\nu w v\nAssume for now that u, v \u2208 Vhid. Then, using Condition 1,\nE[uv>] = E[uw>]A>(v|w) = (E[uw >]E[ww>]\u22121/2)(E[ww>]\u22121/2E[wv>])\nso, because rank(E[uu>]\u22121/2E[uw>]E[ww>]\u22121/2) = rank(E[ww>]\u22121/2E[wv>]E[vv>]\u22121/2) = k by Condition 2,\n\u00b5(u, v) = log detk(E[uu>]\u22121/2E[uw>]E[ww>]\u22121/2E[ww>]\u22121/2E[wv>]E[vv>]\u22121/2)\n= log detk(E[uu>]\u22121/2E[uw>]E[ww>]\u22121/2) + log detk(E[ww>]\u22121/2E[wv>]E[vv>]\u22121/2) = \u00b5(u,w) + \u00b5(w, v).\nIf u \u2208 Vhid but v \u2208 Vobs, then let Uv \u2208 Rd\u00d7k be a matrix of orthonormal left singular vectors of C(v|w). Then E[uv>] = (E[uw>]E[ww>]\u22121/2)(E[ww>]\u22121/2E[wv>]) as before, and\ndetk(E[uu>]\u22121/2E[uv>]) = |det(E[uu>]\u22121/2E[uv>]Uv)| = |det(E[uu>]\u22121/2)| \u00b7 | det(E[uv>]Uv)| = detk(E[uu>]\u22121/2E[uw>]E[ww>]\u22121/2) \u00b7 detk(E[ww>]\u22121/2E[wv>]Uv) = detk(E[uu>]\u22121/2E[uw>]E[ww>]\u22121/2) \u00b7 detk(E[ww>]\u22121/2E[wv>]),\nso\n\u00b5(u, v) = log detk(E[uu>]\u22121/2E[uw>]E[ww>]\u22121/2) + log detk(E[ww>]\u22121/2E[wv>]) = \u00b5(u,w) + \u00b5(w, v).\nSuppose now that the induced toplogy over u, v, w in T is the following.\nu w v\nAgain, first assume that u, v \u2208 Vhid. Then, by Condition 1,\nE[uv>] = A(u|w)E[ww>]A>(v|w) = (E[uw >]E[ww>]\u22121/2)(E[ww>]\u22121/2E[wv>]),\nso \u00b5(u, v) = \u00b5(u,w) + \u00b5(v, w) as before. The cases where one or both of u and v is in Vobs follow by similar arguments as above.\nB.2 Proof of Lemma 1\nBy Proposition 1,\ndetk(E[z1z>3 ]) \u00b7 detk(E[z2z>4 ]) = exp(\u00b5(z1, z3) + \u00b5(z2, z4)) = exp(\u00b5(z1, h) + \u00b5(h, g) + \u00b5(g, z3) + \u00b5(z2, h) + \u00b5(h, g) + \u00b5(g, z4))\n= exp(\u00b5(z1, h) + \u00b5(h, g) + \u00b5(g, z4) + \u00b5(z2, h) + \u00b5(h, g) + \u00b5(g, z3))\n= exp(\u00b5(z1, z4) + \u00b5(z2, z3)) = detk(E[z1z>4 ]) \u00b7 detk(E[z2z>3 ]).\nMoreover,\ndetk(E[z1z>3 ]) \u00b7 detk(E[z2z>4 ]) detk(E[z1z>2 ]) \u00b7 detk(E[z3z>4 ]) = exp(\u00b5(z1, z3) + \u00b5(z2, z4)) exp(\u00b5(z1, z2) + \u00b5(z3, z4))\n= exp(\u00b5(z1, h) + \u00b5(h, g) + \u00b5(g, z3) + \u00b5(z2, h) + \u00b5(h, g) + \u00b5(g, z4))\nexp(\u00b5(z1, h) + \u00b5(h, z2) + \u00b5(z3, g) + \u00b5(g, z4))\n= exp(2\u00b5(h, g))\n= det(E[hh>]\u22121/2E[hg>]E[gg>]\u22121/2)2\n= det(E[hg>])2\ndet(E[hh>]) \u00b7 det(E[gg>]) .\nFinally, note that u>E[hh>]\u22121/2E[hg>]E[gg>]\u22121/2v \u2264 \u2016u\u2016\u2016v\u2016 for all vectors u and v by Cauchy-Schwarz, so\ndet(E[hg>])2\ndet(E[hh>]) \u00b7 det(E[gg>]) = det(E[hh >]\u22121/2E[hg>]E[gg>]\u22121/2)2 \u2264 1\nas required. Note that if Condition 3 also holds, then Lemma 1 implies the strict inequalities\nmax { detk(E[z1z>3 ]) \u00b7 detk(E[z2z>4 ]), detk(E[z1z>4 ]) \u00b7 detk(E[z2z>3 ]) } < detk(E[z1z>2 ]) \u00b7 detk(E[z3z>4 ]).\nB.3 Proof of Lemma 2\nGiven that (2) holds for all pairs {i, j} and all s \u2208 {1, 2, . . . , k}, if the spectral quartet test returns a pairing {{zi, zj}, {zi\u2032 , zj\u2032}}, it must be that\nk\u220f s=1 \u03c3s(E[ziz>j ])\u03c3s(E[zi\u2032z>j\u2032 ]) \u2265 k\u220f s=1 [\u03c3s(\u03a3\u0302i,j)\u2212\u2206i,j ]+[\u03c3s(\u03a3\u0302i\u2032,j\u2032)\u2212\u2206i\u2032,j\u2032 ]+\n> k\u220f s=1 (\u03c3s(\u03a3\u0302i\u2032,j) + \u2206i\u2032,j)(\u03c3s(\u03a3\u0302i,j\u2032) + \u2206i,j\u2032) \u2265 k\u220f s=1 \u03c3s(E[zi\u2032z>j ])\u03c3s(E[ziz>j\u2032 ]).\nTherefore\ndetk(E[ziz>j ]) \u00b7 detk(E[zi\u2032z>j\u2032 ]) = k\u220f s=1 \u03c3s(E[ziz>j ])\u03c3s(E[zi\u2032z>j\u2032 ])\n> k\u220f s=1 \u03c3s(E[zi\u2032z>j ])\u03c3s(E[ziz>j\u2032 ]) = detk(E[zi\u2032z>j ]) \u00b7 detk(E[ziz>j\u2032 ]).\nBut by Lemma 1, the above inequality can only hold if {{zi, zj}, {zi\u2032 , zj\u2032}} = {{z1, z2}, {z3, z4}}.\nB.4 Proof of Lemma 4\nLet \u03a3i,j := E[ziz>j ]. The assumptions in the statement of the lemma imply\nmax{\u22061,2,\u22063,4} < 0 8k min{\u03c3k(\u03a31,2), \u03c3k(\u03a33,4)}\nwhere 0 := min { 1 \u03c1 \u2212 1, 1 } . Therefore\nk\u220f s=1 [\u03c3s(\u03a3\u03021,2)\u2212\u22061,2]+[\u03c3s(\u03a3\u03023,4)\u2212\u22063,4]+ \u2265 k\u220f s=1 [\u03c3s(\u03a31,2)\u2212 2\u22061,2]+[\u03c3s(\u03a33,4)\u2212 2\u22063,4]+\n> ( k\u220f s=1 \u03c3s(\u03a31,2)\u03c3s(\u03a33,4) )( 1\u2212 0 4k )2k \u2265 (\nk\u220f s=1 \u03c3s(\u03a31,2)\u03c3s(\u03a33,4)\n) (1\u2212 0/2). (5)\nIf E[hg>] has rank k, then so do \u03a3i,j for i \u2208 {1, 2} and j \u2208 {3, 4}. Therefore, for {i\u2032, j\u2032} = {1, 2, 3, 4} \\ {i, j},\nmax{\u2206i,j ,\u2206i\u2032,j\u2032} < 0 8k min{\u03c3k(\u03a3i\u2032,j\u2032), \u03c3k(\u03a3i\u2032,j\u2032)}.\nThis implies\nk\u220f s=1 (\u03c3s(\u03a3\u0302i,j) + \u2206i,j)(\u03c3s(\u03a3\u0302i\u2032,j\u2032) + \u2206i\u2032,j\u2032) \u2264 k\u220f s=1 (\u03c3s(\u03a3i,j) + 2\u2206i,j)(\u03c3s(\u03a3i\u2032,j\u2032) + 2\u2206i\u2032,j\u2032)\n< ( k\u220f s=1 \u03c3s(\u03a3i,j)\u03c3s(\u03a3i\u2032,j\u2032) )( 1 + 0 4k )2k \u2264 (\nk\u220f s=1 \u03c3s(\u03a3i,j)\u03c3s(\u03a3i\u2032,j\u2032)\n) (1 + 0). (6)\nTherefore, combining (5), (6), and Lemma 1,\nk\u220f s=1 [\u03c3s(\u03a3\u03021,2)\u2212\u22061,2]+[\u03c3s(\u03a3\u03023,4)\u2212\u22063,4]+\n> 1\u2212 0/2 1 + 0 \u00b7 det(E[hh >]) det(E[gg>]) det(E[hg>])2 \u00b7 k\u220f s=1 (\u03c3s(\u03a3\u0302i,j) + \u2206i,j)(\u03c3s(\u03a3\u0302i\u2032,j\u2032) + \u2206i\u2032,j\u2032)\n\u2265 1 (1 + 0)2\n\u00b7 det(E[hh >]) det(E[gg>]) det(E[hg>])2 \u00b7 k\u220f s=1 (\u03c3s(\u03a3\u0302i,j) + \u2206i,j)(\u03c3s(\u03a3\u0302i\u2032,j\u2032) + \u2206i\u2032,j\u2032)\n\u2265 k\u220f s=1 (\u03c3s(\u03a3\u0302i,j) + \u2206i,j)(\u03c3s(\u03a3\u0302i\u2032,j\u2032) + \u2206i\u2032,j\u2032),\nso the spectral quartet test will return the correct pairing {{z1, z2}, {z3, z4}}, proving the lemma.\nB.5 Conditions for returning a correct pairing when rank(E[hg>]) < k The spectral quartet test is also useful in the case where E[hg>] has rank r < k. In this case, the widths of the confidence intervals are allowed to be wider than in the case where rank(E[hg>]) = k. Define\n\u03c3min := min ( {\u03c3k(\u03a31,2), \u03c3k(\u03a33,4)} \u222a {\u03c3r(\u03a3i,j) : i \u2208 {1, 2}, j \u2208 {3, 4}} ) .\n\u03c121 = \u03c3 2(k\u2212r) min \u00b7maxi,j,i\u2032,j\u2032 \u220fr s=1 \u03c3s(\u03a3i,j)\u03c3s(\u03a3i\u2032,j\u2032)\u220fk\ns=1 \u03c3s(\u03a31,2)\u03c3s(\u03a33,4) .\nInstead of depending on mini,j{\u03c3k(\u03a3i,j)} and \u03c1 as in the case where rank(E[hg>]) = k, we only depend on \u03c3min and \u03c11.\nLemma 7 (Correct pairing, rank r < k). Suppose that (i) the observed variables Z = {z1, z2, z3, z4} have the true induced (undirected) topology shown in Figure 1(a), (ii) the tree model satisfies Condition 1 and Condition 2, (iii) E[hg>] has rank r < k, and (iv) the confidence bounds in (2) hold for all {i, j} and all s \u2208 [k]. If\n\u2206i,j < 1\n8k \u00b7min\n{ 1, 8k ( 1\n2\u03c11\n) 1 k\u2212r } \u00b7 \u03c3min\nfor each {i, j}, then Algorithm 1 returns the correct pairing {{z1, z2}, {z3, z4}}.\nNote that the allowed width increases (to a point) as the rank r decreases.\nProof. The assumptions in the statement of the lemma imply\nmax{\u2206i,j : {i, j} \u2282 [4]} < 1\u03c3min\n8k\nwhere\n1 := min\n{ 8k \u00b7 ( 1\n2\u03c11\n) 1 k\u2212r\n, 1 } .\nWe have k\u220f s=1\n[\u03c3s(\u03a3\u03021,2)\u2212\u22061,2]+[\u03c3s(\u03a3\u03023,4)\u2212\u22063,4]+ > (\nk\u220f s=1 \u03c3s(\u03a31,2)\u03c3s(\u03a33,4)\n) (1\u2212 1/2)\nas in the proof of Lemma 4. Moreover,\nk\u220f s=1 (\u03c3s(\u03a3\u0302i,j) + \u2206i,j)(\u03c3s(\u03a3\u0302i\u2032,j\u2032) + \u2206i\u2032,j\u2032)\n< ( r\u220f s=1 \u03c3s(\u03a3i,j)\u03c3s(\u03a3i\u2032,j\u2032) ) \u00b7 (1 + 1) \u00b7 ( 1\u03c3min 8k )2(k\u2212r) \u2264 (\nk\u220f s=1 \u03c3s(\u03a31,2)\u03c3s(\u03a33,4)\n) \u00b7 \u03c1 2 1\n(\u03c3min)2(k\u2212r) \u00b7 (1 + 1) \u00b7 ( 1\u03c3min 8k )2(k\u2212r) =\n( k\u220f s=1 \u03c3s(\u03a31,2)\u03c3s(\u03a33,4) ) \u00b7 \u03c121 \u00b7 (1 + 1) \u00b7 ( 1 8k )2(k\u2212r) <\n( k\u220f s=1 [\u03c3s(\u03a3\u03021,2)\u2212\u22061,2]+[\u03c3s(\u03a3\u03023,4)\u2212\u22063,4]+ ) \u00b7 \u03c121 \u00b7 1 + 1 1\u2212 1/2 \u00b7 ( 1 8k )2(k\u2212r) \u2264 (\nk\u220f s=1 [\u03c3s(\u03a3\u03021,2)\u2212\u22061,2]+[\u03c3s(\u03a3\u03023,4)\u2212\u22063,4]+ ) \u00b7 \u03c121 \u00b7 (1 + 1)2 \u00b7 ( 1 8k )2(k\u2212r) \u2264\nk\u220f s=1 [\u03c3s(\u03a3\u03021,2)\u2212\u22061,2]+[\u03c3s(\u03a3\u03023,4)\u2212\u22063,4]+.\nTherefore the spectral quartet test will return the correct pairing {{z1, z2}, {z3, z4}}; the lemma follows."}, {"heading": "C Analysis of Spectral Recursive Grouping", "text": "C.1 Overview\nHere is an outline of the argument for Theorem 1.\n1. First, we condition on a 1\u2212 \u03b7 probability event over the iid samples from the distribution over Vobs in which the empirical second-moment matrices are sufficiently close to the true second-moment matrices in by spectral norm (Equation 8). This is required to reason deterministically about the behavior of the algorithm.\n2. Next, we characterize the pairs {u, v} \u2286 R (where R are the roots of subtrees maintained by the algorithm) that cause the Mergeable subroutine to return true. (Lemma 11), as well as those that cause it to return false (Lemma 12).\n3. We use the above characterizations to show that the main while-loop of the algorithm maintains loop invariants such that when the loop finally terminates, the entire tree structure will have been completely discovered (Lemma 13). This is achieved by showing each iteration of the while-loop\n(a) selects a \u201cMergeable\u201d pair {u, v} \u2286 R that satisfies certain properties (Claim 2 and Claim 3) such that, if they are properly combined (as siblings or parent/child), the required loop invariants will be perserved; and (b) uses the Relationship subroutine to correctly determine whether the chosen pair {u, v} should be combined as siblings or parent/child (Claim 4).\nC.2 Proof of Theorem 1\nRecall the definitions of A(g|h) \u2208 Rk\u00d7k and C(x|h) \u2208 Rd\u00d7k for descendants g \u2208 DescendantsT(h) \u2229 Vhid and x \u2208 DescendantsT(h) \u2229 C(x|h) in T, as given in Appendix B.\nLet us define\nmin := min\n{ 1\n\u03c1max \u2212 1, 1\n} , \u03b5 :=\n\u03b3min/\u03b3max 8k + \u03b3min/\u03b3max ,\n\u03b8 := \u03b3min 1 + \u03b5 , \u03c2 := \u03b3min \u03b3max \u00b7 (1\u2212 \u03b5) \u00b7 \u03b8.\nThe sample size requirement ensures that\n\u2206xi,xj < min \u00b7 \u03c2\n8k \u2264 \u03b5\u03b8.\nThis implies conditions on the thresholds \u2206xi,xj in Lemma 4 for the spectral quartet test on {x1, x2, x3, x4} to return a correct pairing, provided that\nmin{\u03c3k(\u03a3xi,xj ) : {i, j} \u2282 {1, 2, 3, 4}} \u2265 \u03c2. (7)\nThe probabilistic event we need is that in which the confidence bounds from Lemma 5 hold for each pair of observed variables. The event\n\u2200{xi, xj} \u2286 Vobs \u2016\u03a3\u0302xi,xj \u2212\u03a3xi,xj\u2016 \u2264 \u2206xi,xj , (8)\noccurs with probability at least 1\u2212\u03b7 by Lemma 5 and a union bound. We henceforth condition on the above event.\nThe following is an immediate consequence of Weyl\u2019s Theorem and conditioning on the above event.\nLemma 8. Fix any pair {x, y} \u2286 Vobs. If \u03c3k(\u03a3x,y) \u2265 (1 + \u03b5)\u03b8, then \u03c3k(\u03a3\u0302x,y) \u2265 \u03b8. If \u03c3k(\u03a3\u0302x,y) \u2265 \u03b8, then \u03c3k(\u03a3x,y) \u2265 (1\u2212 \u03b5)\u03b8.\nBefore continuing, we need some definitions and notation. First, we refer to the variables in VT interchangeably as both nodes and variables. Next, we generally ignore the direction of edges in T, except when it becomes crucial (namely, in Lemma 10). For a node r in T, we say that a subtree T [r] of T (ignoring edge directions) is rooted at r if T [r] contains r, and for every node u in T [r] and any node v not in T [r], the (undirected) path from u to v in T passes through r. Note that a rooted subtree naturally imply parent/child relationships between its constituent nodes, and it is in this sense we use the terms \u201cparent\u201d, \u201cchild\u201d, \u201csibling\u201d, etc. throughout the analysis, rather than in the sense given by the edge directions in T (the exception is in Lemma 10). A collection C of disjoint rooted subtrees of T naturally gives rise to a super-tree ST [C] by starting with T and then collapsing each T [r] \u2208 C into a single node. Note that each node in ST [C] is either associated with a subtree in C, or is a node in T that doesn\u2019t appear in any subtree in C. We say a subtree T \u2208 C is a leaf component relative to C if it is a leaf in this super-tree ST [C]. Finally, define Vhid[C] := {h \u2208 Vhid : h does not appear in any subtree in C}.\nThe following lemma is a simple fact about the super-tree given properties on the subtrees (which will be maintained by the algorithm).\nLemma 9 (Super-tree property). Let R \u2286 VT. Let C := {T [u] : u \u2208 R} be a collection of disjoint rooted subtrees, with u being the root of T [u], such that their leaf sets {L[u] : u \u2208 R} partition Vobs. Then the nodes of the super-tree ST [C] are C \u222a Vhid[C], and the leaves of ST [C] are all in C.\nProof. This follows because each leaf in T appears in the leaf set of some T [u].\nThe next lemma relates the correlation between two observed variables in a quartet (on opposite sides of the bottleneck) to the correlations of the other pairs crossing the bottleneck.\nLemma 10 (Correlation transfer). Consider the following induced (undirected) topology over {z1, z2, z3, z4} \u2286 Vobs.\nz1\nz2\nz3\nz4\nh g\nThen\n\u03c3k(E[z1z>4 ]) \u2265 \u03c3k(E[z1z>3 ])\u03c3k(E[z2z>4 ])\n\u03c31(E[z2z>3 ]) .\nProof. In this proof, the edge directions and the notion of ancestor are determined according to the edge directions in T. Let r be the least common ancestor of {z1, z2, z3, z4} in T. There are effectively three possible cases to consider, depending on the location of r relative to the zi, h, and g; we may exploit the fact that \u03c3k(E[z1z>4 ]) = \u03c3k(E[z4z>1 ]) to cover the remaining cases.\n1. Suppose r appears between h and z1.\nz1\nz2\nz3\nz4\nr\nh g\nBy Condition 2, we can choose matrices U1, U2, U3, U4 \u2208 Rd\u00d7k such that the columns of U1 are an orthonormal basis of range(C(z1|r)), the columns of U2 are an orthonormal basis of range(C(z2|h)), the columns of U3 are an orthonormal basis of range(C(z3|g)), and the columns of U4 are an orthonormal basis of range(C(z4|g)). We have\nU>1 E[z1z>4 ]U4 = U>1 C(z1|r)E[rr >]A>(h|r)C > (z4|h)U4\n= (U>1 C(z1|r)E[rr >])A>(h|r)(C > (z3|h)U3)(C > (z3|h)U3) \u22121\n(U>2 C(z2|h)E[hh >])\u22121(U>2 C(z2|h)E[hh >])(C>(z4|h)U4)\n= (U>1 C(z1|r)E[rr >]A>(h|r)C > (z3|h)U3)(U > 2 C(z2|h)E[hh >]C>(z3|h)U3) \u22121\n(U>2 C(z2|h)E[hh >]C>(z4|h)U4)\n= (U>1 E[z1z>3 ]U3)(U>2 E[z2z>3 ]U3)\u22121(U>2 E[z2z>4 ]U4).\n2. Suppose r appears between h and z2.\nz1\nz2\nz3\nz4\nr\nh g\nBy Condition 2, we can choose matrices U1, U2, U3, U4 \u2208 Rd\u00d7k such that the columns of U1 are an orthonormal basis of range(C(z1|h)), the columns of U2 are an orthonormal basis of range(C(z2|r)), the columns of U3 are an orthonormal basis of range(C(z3|g)), and the columns of U4 are an orthonormal\nbasis of range(C(z4|g)). We have\nU>1 E[z1z>4 ]U4 = U>1 C(z1|h)E[hh >]A\u2212>(h|r)C > (z4|r)U4\n= (U>1 C(z1|h)E[hh >])(C>(z3|h)U3)(C > (z3|h)U3) \u22121A\u2212>(h|r)\n(U>2 C(z2|r)E[rr >])\u22121(U>2 C(z2|r)E[rr >])(C>(z4|r)U4)\n= (U>1 C(z1|h)E[hh >]C>(z3|h)U3)(U > 2 C(z2|r)E[rr >]A>(h|r)C > (z3|h)U3) \u22121\n(U>2 C(z2|r)E[rr >]C>(z4|r)U4)\n= (U>1 E[z1z>3 ]U3)(U>2 E[z2z>3 ]U3)\u22121(U>2 E[z2z>4 ]U4).\n3. Suppose either r = h, or r is between h and g.\nz1\nz2\nz3\nz4\nr g\nz1\nz2\nz3\nz4\nrh g\nIn either case, by Condition 2, we can choose matrices U1, U2, U3, U4 \u2208 Rd\u00d7k such that the columns of U1 are an orthonormal basis of range(C(z1|h)), the columns of U2 are an orthonormal basis of range(C(z2|h)), the columns of U3 are an orthonormal basis of range(C(z3|g)), and the columns of U4 are an orthonormal basis of range(C(z4|g)). We have\nU>1 E[z1z>4 ]U4 = U>1 C(z1|r)E[rr >]C>(z4|r)U4\n= (U>1 C(z1|r)E[rr >])(C>(z3|r)U3)(C > (z3|r)U3) \u22121\n(U>2 C(z2|r)E[rr >])\u22121(U>2 C(z2|r)E[rr >])(C>(z4|r)U4)\n= (U>1 C(z1|r)E[rr >]C>(z3|r)U3)(U > 2 C(z2|r)E[rr >]C>(z3|r)U3) \u22121\n(U>2 C(z2|r)E[rr >]C>(z4|r)U4)\n= (U>1 E[z1z>3 ]U3)(U>2 E[z2z>3 ]U3)\u22121(U>2 E[z2z>4 ]U4).\nTherefore, in all cases,\n\u03c3k(E[z1z>4 ]) \u2265 \u03c3k(E[z1z>3 ]) \u00b7 \u03c3k(E[z2z>4 ])\n\u03c31(E[z2z>3 ]) .\nThe next two lemmas (Lemmas 11 and 12) show a dichotomy in the cases that cause the subroutine Mergeable return either true or false.\nLemma 11 (Mergeable pairs). Let R \u2286 VT. Let C := {T [r] : r \u2208 R} be a collection of disjoint rooted subtrees, with r being the root of T [r], such that their leaf sets {L[r] : r \u2208 R} partition Vobs. Further, suppose the pair {u, v} \u2286 R are such that one of the following conditions hold.\n1. {u, v} share a common neighbor in T, and both of T [u] and T [v] are leaf components relative to C.\n2. {u, v} are neighbors in T, and at least one of T [u] and T [v] is a leaf component relative to C.\nThen for all pairs {u1, v1} \u2286 R \\ {u, v} and all (x, y, x1, y1) \u2208 L[u] \u00d7 L[v] \u00d7 L[u1] \u00d7 L[v1], SpectralQuartetTest({x, y, x1, y1}) returns {{x, y}, {x1, y1}} or \u22a5. This implies that Mergeable(R,L[\u00b7], u, v) returns true.\nRemark 2. Note that if |R| < 4, then Mergeable(R,L[\u00b7], u, v) returns true for all pairs {u, v} \u2286 R.\nProof. Suppose the first condition holds, and let h be the common neighbor. Since T [u] is a leaf component relative to C, the (undirected) path from any node u\u2032 in T [u] to another node w not in T [u] must pass through h. Similarly, the (undirected) path from any node v\u2032 in T [v] to another node w not in T [v] must pass through h. Therefore, each choice of {u1, v1} \u2286 R\\{u, v} and (x, y, x1, y1) \u2208 L[u]\u00d7L[v]\u00d7L[u1]\u00d7L[v1] induces one of the following topologies,\nx\ny\nx1\ny1\nh\nx\ny\nx1\ny1\nh\nupon which, by Lemma 2, the quartet test returns either {{x, y}, {x1, y1}} or \u22a5. Now instead suppose the second condition holds. Without loss of generality, assume T [u] is a leaf component relative to C, which then implies that the (undirected) path from any node u\u2032 in T [u] to another node w not in T [u] must pass through v. Moreover, since T [v] is rooted at v, the (undirected) path from any node v\u2032 in T [v] to another node w not in T [v] must pass through v. If T [v] is also a leaf component, then it must be that R = {u, v}, in which case R \\ {u, v} = \u2205. If T [v] is not a leaf component, then each choice of {u1, v1} \u2286 R \\ {u, v} and (x, y, x1, y1) \u2208 L[u] \u00d7 L[v] \u00d7 L[u1] \u00d7 L[v1] induces one of the following topologies,\nx\ny\nx1\ny1\nv\nx\ny\nx1\ny1\nv\nupon which, by Lemma 2, the quartet test returns either {{x, y}, {x1, y1}} or \u22a5.\nLemma 12 (Un-mergeable pairs). Let R \u2286 VT. Let C := {T [r] : r \u2208 R} be a collection of disjoint rooted subtrees, with r being the root of T [r], such that their leaf sets {L[r] : r \u2208 R} partition Vobs. Further, suppose the pair {u, v} \u2286 R are such that all of the following conditions hold.\n1. There exists (x, y) \u2208 L[u]\u00d7 L[v] such that \u03c3k(\u03a3\u0302x,y) \u2265 \u03b8.\n2. {u, v} do not share a common neighbor in T, or at least one of T [u] and T [v] is not a leaf component relative to C.\n3. {u, v} are not neighbors in T, or neither T [u] nor T [v] is a leaf component relative to C.\nThen there exists a pair {u1, v1} \u2286 R \\ {u, v} and (x1, y1) \u2208 L[u1] \u00d7 L[v1] such that SpectralQuartetTest({x, y, x1, y1}) returns {{x, x1}, {y, y1}}. This implies that Mergeable(R,L[\u00b7], u, v) returns false.\nProof. First, take (x, y) \u2208 L[u]\u00d7L[v] such that \u03c3k(\u03a3\u0302x,y) \u2265 \u03b8. By Lemma 8, \u03c3k(\u03a3x,y) \u2265 (1\u2212 \u03b5)\u03b8. Lemma 9 implies that the nodes of ST [C] are C\u222aVhid[C], and that each leaf in ST [C] is a subtree T [u] \u2208 C. The second and third conditions of the lemma on {u, v} imply that at least one of the following cases holds.\n(i) Neither T [u] nor T [v] is a leaf component relative to C.\n(ii) u and v are not neighbors and do not share a common neighbor.\n(iii) u and v are not neighbors, and one of T [u] and T [v] is not a leaf component relative to C.\nSuppose (i) holds. Then each of T [u] and T [v] have degree \u2265 2 in ST [C]. Note that neither u nor v are leaves in T. Moreover, there exists {u1, v1} \u2286 (R \\ {u, v}) \u222a Vhid[C] such that u1 is adjacent to u in T, v1 is adjacent to v in T, and the (undirected) path from u1 to v1 in T intersects the (undirected) path from u to v in T.\nuu1 v1v\nSince u is not a leaf, it has at least three neighbors by assumption, and thus there exist three subtrees {Tu,1, Tu,2, Tu,3} \u2286 Fu such that u1 is the root of Tu,1, x \u2208 Vobs[Tu,2] and y \u2208 Vobs[Tu,3]. Moreover, by Condition 4, there exist x1 \u2208 Vobs[Tu,1], x2 \u2208 Vobs[Tu,2], and x3 \u2208 Vobs[Tu,3] such that \u03c3k(E[xix>j ]) \u2265 \u03b3min for all {i, j} \u2282 {1, 2, 3}. Note that it is possible to have x2 = x and x3 = y. Let u2 denote the node in Tu,2 at which the (undirected) paths x u and x2 u intersect (if x2 = x, then let u2 be the root of Tu,2); similarly, let u3 denote the node in Tu,2 at which the (undirected) paths y u and x3 u intersect (if x3 = y, then let u3 be the root of Tu,3). The induced (undirected) topology over these nodes is shown below.\nu\nu1 u2 u3\nx yx1 x2 x3\nA completely analogous argument can be applied relative to v instead of u, giving the following.\nv\nv1 v2 v3\ny xy1 y2 y3\nClaim 1. The following lower bounds hold.\nmin {\u03c3k(\u03a3x1,x), \u03c3k(\u03a3x1,y), \u03c3k(\u03a3y1,y), \u03c3k(\u03a3y1,x)} \u2265 \u03b3min \u00b7 (1\u2212 \u03b5)\u03b8\n\u03b3max = \u03c2. (9)\nProof. We just show the inequalities for \u03c3k(E[x1x>]) and \u03c3k(E[x1y>]); the other two are analogous. If x2 = x, then \u03c3k(E[x1x>]) = \u03c3k(E[x1x>2 ]) \u2265 \u03b3min \u2265 \u03c2. If x2 6= x, then we have the following induced (undirected) topology.\nx1\ny\nx2\nx\nu u2\nTherefore, by Lemma 10,\n\u03c3k(E[x1x>]) \u2265 \u03c3k(E[x1x>2 ]) \u00b7 \u03c3k(E[yx>]) \u03c31(E[yx>2 ]) \u2265 \u03b3min \u00b7 (1\u2212 \u03b5)\u03b8 \u03b3max = \u03c2.\nThis gives the first claimed inequality; now we show the second. If x3 = y, then \u03c3k(E[x1y>]) = \u03c3k(E[x1x>3 ]) \u2265 \u03b3min \u2265 \u03c2. If x3 6= y, then we have the following induced (undirected) topology.\nx1\nx\nx3\ny\nu u3\nAgain, by Lemma 10,\n\u03c3k(E[x1y>]) \u2265 \u03c3k(E[x1x>3 ]) \u00b7 \u03c3k(E[xy>]) \u03c31(E[xx>3 ]) \u2265 \u03b3min \u00b7 (1\u2212 \u03b5)\u03b8 \u03b3max = \u03c2.\nClaim 1, Lemma 4, and the sample size requirement of Theorem 1 (as per (7)) imply that the spectral quartet test on {x, x1, y, y1} returns the correct pairing. Since the induced (undirected) topology is\nx1\nx\ny1\ny\nu v\nthe correct pairing is {{x, x1}, {y, y1}}. Because the leaf sets {L[r] : r \u2208 R} partition Vobs, and because x1 6\u2208 L[u] and y1 6\u2208 L[v], there exists {u\u2032, v\u2032} \u2286 R \\ {u, v} such that x1 \u2208 L[u\u2032] and y1 \u2208 L[v\u2032]. This proves the lemma in this case.\nNow instead suppose (ii) holds. Since T is connected, and T [u] and T [v] are respectively rooted at u and v, there must exist a pair {u1, v1} \u2282 (R \\ {u, v}) \u222a Vhid[C] such that neither u1 nor v1 are leaves in T, u1 is adjacent to u in T, v1 is adjacent to v in T, and the (undirected) path from u to v in T passes through the path from u1 to v1.\nu u1 v1 v\nAn argument analogous to that in case (i) applies to prove the lemma in this case; we provide a brief sketch below. Because u1 is not a leaf, there exists three subtrees {Tu1,1, Tu1,2, Tu1,3} \u2286 Fu1 such that u is the root of Tu1,2 (so x \u2208 Vobs[Tu1,2]) and y \u2208 Vobs[Tu1,3]. Moreover, there exist x1 \u2208 Vobs[Tu1,1], x2 \u2208 Vobs[Tu1,2], and x3 \u2208 Vobs[Tu1,3] such that \u03c3k(E[xix>j ]) \u2265 \u03b3min for all {i, j} \u2282 {1, 2, 3} (it is possible to have x2 = x and x3 = y). Let u \u2032 1 denote the root of Tu1,1, u\u20322 denote the node in Tu1,2 at which the (undirected) paths x u1 and x2 u1 intersect (if x2 = x, then let u\u20322 = u, which is the root of Tu1,2), and u3 denote the node in Tu1,2 at which the (undirected) paths y u1 and x3 u1 intersect (if x3 = y, then let u3 be the root of Tu1,3). An analogous argument applies relative to v1 instead of u1; the induced (undirected) topologies are given below.\nu1\nu\u20321 u \u2032 2 u \u2032 3\nx yx1 x2 x3\nv1\nv\u20321 v \u2032 2 v \u2032 3\ny xy1 y2 y3\nUsing the arguments in Claim 1, it can be shown that the inequalities in (9) hold in this case, so by Lemma 4, the quartet test on {x, x1, y, y1} returns {{x, x1}, {y, y1}}. Because the leaf sets {L[r] : r \u2208 R} partition Vobs, and because x1 6\u2208 L[u] = Vobs[Tu1,2] and y1 6\u2208 L[v] = Vobs[Tv1,2], there exists {u\u2032, v\u2032} \u2286 R \\ {u, v} such that x1 \u2208 L[u\u2032] and y1 \u2208 L[v\u2032]. This proves the lemma in this case.\nFinally, suppose (iii) holds. Without loss of generality, assume T [u] is not a leaf component relative to C. Since T is connected, and T [u] and T [v] are respectively rooted at u and v, there must exist v1 \u2208 (R\\ {u, v})\u222aVhid[C] such that v1 is not a leaf in T, v1 is adjacent to v in T, and the (undirected) path from u to v in T passes through v1. Moreover, since T [u] is not a leaf component relative to C, it has degree \u2265 2 in ST [C]. Note that u is not a leaf in T, and moreover, there exists u1 \u2208 (R \\ {u, v}) \u222a Vhid[C] such that u1 is adjacent to u in T, and u1 is not on the (undirected) path from u to v.\nuu1 v1 v\nAgain, an argument analogous to that in case (i) applies now to prove the lemma in this case.\nFinally, we give a lemma which analyzes the while-loop of Algorithm 2 and consequently implies Theorem 1.\nLemma 13 (Loop invariants). The following invariants concerning the state of the objects (R, T [\u00b7],L[\u00b7]) hold before the while-loop in Algorithm 2, and after each iteration of the while-loop.\n1. R \u2286 VT, and for each u \u2208 R, T [u] is a subtree of T rooted at u. Moreover, the rooted subtree T [v] is already defined by Algorithm 2 for every node v appearing in T [u] for some u \u2208 R. Finally, for each u \u2208 R, the subtree T [u] is formed by joining the subtrees T [v] corresponding to children v of u in T [u] via edges {u, v}.\n2. The subtrees in C := {T [u] : u \u2208 R} are disjoint, and the leaf sets {L[u] : u \u2208 R} partition Vobs.\nMoreover, no iteration of the while-loop terminates in failure.\nBefore proving Lemma 13, we show how it implies Theorem 1. Initially, |R| = n, and each iteration of the while-loop decreases the cardinality of R by one, so there are a total of n\u22121 iterations of the while-loop. By Lemma 13, the final iteration results in a set R = {h} such that T\u0302 = T [h] is a subtree of T rooted at h, and L[h] = Vobs. This implies that T\u0302 has the same (undirected) structure as T, as required. This completes the proof of Theorem 1.\nProof of Lemma 13. The loop invariants clearly hold before the while-loop with the initial settings of R = Vobs, T [x] = rooted single-node tree x, and L[x] = {x} for all x \u2208 R. So assume as the inductive hypothesis that the loop invariants hold at the start of a particular iteration (in which |R| > 1). It remains to prove that the iteration does not terminate in failure, and that the loop invariants hold at the end of the iteration. Let R, T [\u00b7], and L[\u00b7] be in their state at the beginning of the iteration.\nBecause the second loop invariant holds, Lemma 9 implies that the nodes of ST [C] are C \u222a Vhid[C], and that each leaf in ST [C] is a subtree T [u] \u2208 C (so we may refer to the leaves of ST [C] as leaf components). Claim 2. If |R| > 1, then there exists a pair {u, v} \u2286 R such that the following hold.\n1. Either u and v are neighbors in T, and at least one of T [u] or T [v] is a leaf component relative to C; or u and v share a common neighbor in Vhid[C], and both T [u] and T [v] are leaf components relative to C.\n2. Mergeable(R,L[\u00b7], u, v) = true.\n3. max{\u03c3k(\u03a3\u0302x,y) : (x, y) \u2208 L[u]\u00d7 L[v]} \u2265 \u03b8.\nProof. Suppose there are no pairs {u, v} \u2286 C such that u and v are neighbors in T and at least one of T [u] and T [v] is a leaf component relative to C. Then each leaf component must be adjacent to some h \u2208 Vhid[C] in ST [C]. Consider the tree ST \u2032 obtained from ST [C] by removing all the leaf components in ST [C]. The leaves of ST \u2032 must be among the h \u2208 Vhid[C] that were adjacent to the leaf components in ST [C]. Fix such a leaf h in ST \u2032, and observe that it has degree one in ST \u2032. By assumption, no node in T has degree two, so h must have been connected to at least two leaf components in ST [C], say T [u] and T [v]. The node h is therefore a common neighbor of u and v. This proves the existence of a pair {u, v} \u2286 R satisfying the first required property.\nFix the pair {u, v} specified above. By Lemma 11, Mergeable(R,L[\u00b7], u, v) returns true, so {u, v} satisfies the second required property.\nTo show the final required property, we consider two cases. Suppose first that u and v are neighbors, and that T [u] is a leaf component relative to C. Note that u and v cannot both be leaves in T. If v is not a leaf, then there exists subtrees Tv,1 and Tv,2 in Fv such that Tv,1 = T [u] (because T [u] is a leaf component) and Tv,2 = T [v\u2032] for some child v\u2032 of v in T [v] (by the first loop invariant). By Condition 4, there exists x \u2208 Vobs[Tv,1] = L[u] and y \u2208 Vobs[Tv,2] \u2286 L[v] such that \u03c3k(\u03a3x,y) \u2265 \u03b3min = (1 + \u03b5)\u03b8; by Lemma 8, \u03c3k(\u03a3\u0302x,y) \u2265 \u03b8. If v is a leaf but u is not, then there exists subtrees Tu,1 and Tu,2 in Fu such that\nTu,1 = v and Tu,2 = T [u\u2032] for some child u\u2032 of u in T [u] (by the first loop invariant). So by Condition 4, there y \u2208 Vobs[Tu,2] \u2286 L[u] such that \u03c3k(\u03a3v,y) \u2265 \u03b3min = (1+\u03b5)\u03b8; by Lemma 8, \u03c3k(\u03a3\u0302v,y) \u2265 \u03b8. Now instead suppose that u and v share a common neighbor h, and that both T [u] and T [v] are leaf components relative to C. This latter fact implies that {T [u], T [v]} \u2282 Fh, so Condition 4 implies that there exists x \u2208 Vobs[T [u]] = L[u] and y \u2208 Vobs[T [v]] = L[v] such that \u03c3k(\u03a3x,y) \u2265 \u03b3min = (1 + \u03b5)\u03b8. By Lemma 8, \u03c3k(\u03a3\u0302x,y) \u2265 \u03b8.\nClaim 3. Consider any pair {u, v} \u2286 R such that max{\u03c3k(\u03a3\u0302x,y) : (x, y) \u2208 L[u] \u00d7 L[v]} \u2265 \u03b8. If the first property from Claim 2 fails to hold for {u, v}, then Mergeable(R,L[\u00b7], u, v) = false.\nProof. This follows immediately from Lemma 12.\nTaken together, Claims 2 and 3 imply that the pair {u, v} \u2286 R selected by the first step in the while-loop indeed exists (so the iteration does not terminate in failure) and satisfies the properties in Claim 2.\nNow we consider the second step of the while-loop, which is the call to the subroutine Relationship.\nClaim 4. Suppose a pair {u, v} satisfies the properties in Claim 2. Then Relationship(R,L[\u00b7], T [\u00b7], u, v) returns the correct relationship for u and v. Specifically:\n1. If u and v share a common neighbor in T (and both are leaf components relative to C), then \u201csiblings\u201d is returned.\n2. If u and v are neighbors in T and T [v] is a leaf component relative to C but T [u] is not, then \u201cu is parent of v\u201d is returned.\n3. If u and v are neighbors in T and T [u] is a leaf component relative to C but T [v] is not, then \u201cv is parent of u\u201d is returned.\n4. If u and v are neighbors in T and both T [u] and T [v] are leaf components relative to C, and u is a leaf in T but v is not, then \u201cv is parent of u\u201d is returned.\n5. If u and v are neighbors in T and both T [u] and T [v] are leaf components relative to C, and v is a leaf in T but u is not, then \u201cu is parent of v\u201d is returned.\n6. If u and v are neighbors in T and both T [u] and T [v] are leaf components relative to C, and neither u nor v are leaves in T, then \u201cu is parent of v\u201d is returned.\nProof. Fix the pair (x, y) \u2208 L[u]\u00d7L[v] guaranteed by the third property of Claim 2 such that \u03c3k(\u03a3\u0302x,y) \u2265 \u03b8. Now we consider the possible relationships between u and v.\nSuppose u and v share a common neighbor h \u2208 Vhid[C] in T, and that both T [u] and T [v] are leaf components relative to C. We need to show that the subroutine Relationship asserts both \u201cu 6\u2192 v\u201d and \u201cv 6\u2192 u\u201d. To show that \u201cu 6\u2192 v\u201d is asserted, we assume u is not a leaf (otherwise \u201cu 6\u2192 v\u201d is immediately asserted and we\u2019re done), let {u1, . . . , uq} be the children of u in T [u], and takeR[u] as defined in Relationship. By the first loop invariant, the subtrees in C[u] are disjoint, and the leaf sets {L[r] : r \u2208 R[u]} partition Vobs. In particular, x \u2208 L[ui] for some i \u2208 {1, . . . , q}. Since ui and v are not neighbors, and do not share a common neighbor. Therefore, by Lemma 12, Mergeable(R[u],L[\u00b7], ui, v) = false, so \u201cu 6\u2192 v\u201d is asserted. A similar argument implies that \u201cv 6\u2192 u\u201d is asserted. Since both \u201cu 6\u2192 v\u201d and \u201cv 6\u2192 u\u201d are asserted, the subroutine returns \u201csiblings\u201d.\nNow instead suppose u and v are neighbors. First, suppose T [u] is a leaf component relative to C. We claim that if v is not a leaf, then \u201cv 6\u2192 u\u201d is not asserted. Let {v1, . . . , vq} be the children of v in T [v], and take R[v] = {u, v1, . . . , vq} as defined in Relationship. By the first loop invariant, the subtrees in C[v] are disjoint, and the leaf sets {L[r] : r \u2208 R[v]} partition Vobs. By Lemma 14, T [u] and T [vi] are leaf components relative to C[v] for each i \u2208 {1, . . . , q}. For each i \u2208 {1, . . . , q}, {u, vi} share v as a common neighbor, and T [u] and T [vi] are both leaf components relative to C[v]. Therefore by Lemma 11, Mergeable(R[v],L[\u00b7], u, vi) = true for all i \u2208 {1, . . . , q}, so \u201cv 6\u2192 u\u201d is not asserted.\nSuppose T [u] is a leaf component relative to C but T [v] is not. By Lemma 9, v is not a leaf in T, so as argued above, \u201cv 6\u2192 u\u201d is not asserted. It remains to show that \u201cu 6\u2192 v\u201d is asserted. Assume u is not a leaf (or else u 6\u2192 v is immediately asserted and we\u2019re done), let {u1, . . . , uq} be the children of u in T [u], and take R[u] as defined in Relationship. By the first loop invariant, the subtrees in C[u] are disjoint, and the leaf sets {L[r] : r \u2208 R[u]} partition Vobs. In particular, x \u2208 L[ui] for some i \u2208 {1, . . . , q}. By Lemma 14, T [v] is not a leaf component relative to C[u]. Moreover, ui and v are not neighbors. Therefore by Lemma 12, Mergeable(R[u],L[\u00b7], ui, v) = false, so \u201cu 6\u2192 v\u201d is asserted. Since \u201cv 6\u2192 u\u201d is not asserted but \u201cu 6\u2192 v\u201d is asserted, the subroutine returns \u201cv \u2192 u\u201d. An analogous argument shows that if T [v] is a leaf component relative to C but T [u] is not, then the subroutine returns \u201cu\u2192 v\u201d.\nNow suppose both T [u] and T [v] are leaf components relative to C. By assumption, leaves in T are only adjacent to non-leaves, so it cannot be that both u and v are leaves. Therefore at least one of u and v is not a leaf in T. Without loss of generality, say v is not a leaf in T. Then as argued above, \u201cv 6\u2192 u\u201d is not asserted. If u is a leaf, then \u201cu 6\u2192 v\u201d is asserted, so the subroutine returns \u201cv \u2192 u\u201d. If u is not a leaf, then by symmetry, \u201cu 6\u2192 v\u201d is not asserted. Therefore the subroutine returns \u201cu\u2192 v\u201d.\nClaim 4 implies that the remaining steps in the while-loop after the call to Relationship preserve the two loop invariants, simply by construction.\nThere is one last lemma used in the proof of Lemma 13.\nLemma 14 (Leaf components). Suppose the invariants in Lemma 13 are satisfied. Then for each u \u2208 R such that u is not a leaf in T, the leaf components relative to the collection\nC[u] := (C \\ {T [u]}) \u222a {T [v] : v is a child of u in T [u]}\nare\n{T [r] : r 6= u \u2227 T [r] is a leaf component relative to C} \u222a {T [r] : r is a child of u in T [u]}.\nProof. Pick any u \u2208 R such that u is not a leaf in T. Let {v1, . . . , vq} be the children of u in T [u]. By the first loop invariant, each vi is the root of a subtree T [vi]. This implies that the subtrees {T [v1], . . . , T [vq]} are disjoint and {L[v1], . . . ,L[vq]} partition L[u]. Therefore ST [C[u]] is the same as ST [C] except with the following changes.\n1. T [u] is replaced with u.\n2. For each i, T [vi] is added with the edge {u, vi}.\nThis means that each T [vi] has degree one in ST [C[u]] and therefore is a leaf component relative to C[u]."}], "references": [], "referenceMentions": [], "year": 2011, "abstractText": "<lb>This work considers the problem of learning the structure of multivariate linear tree models, which<lb>include a variety of directed tree graphical models with continuous, discrete, and mixed latent variables<lb>such as linear-Gaussian models, hidden Markov models, Gaussian mixture models, and Markov evolu-<lb>tionary trees. The setting is one where we only have samples from certain observed variables in the tree,<lb>and our goal is to estimate the tree structure (i.e., the graph of how the underlying hidden variables are<lb>connected to each other and to the observed variables). We propose the Spectral Recursive Grouping al-<lb>gorithm, an efficient and simple bottom-up procedure for recovering the tree structure from independent<lb>samples of the observed variables. Our finite sample size bounds for exact recovery of the tree structure<lb>reveal certain natural dependencies on underlying statistical and structural properties of the underlying<lb>joint distribution. Furthermore, our sample complexity guarantees have no explicit dependence on the<lb>dimensionality of the observed variables, making the algorithm applicable to many high-dimensional set-<lb>tings. At the heart of our algorithm is a spectral quartet test for determining the relative topology of a<lb>quartet of variables from second-order statistics.", "creator": "LaTeX with hyperref package"}}}