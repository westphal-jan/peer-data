{"id": "1203.1685", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "8-Mar-2012", "title": "Statistical Function Tagging and Grammatical Relations of Myanmar Sentences", "abstract": "this paper describes a context free grammar ( cfg ) reference based grammatical relations for abstract myanmar sentences which combine corpus - domain based function tagging system. part of the conceptual challenge of statistical function tagging for generic myanmar sentences comes from accepting the intuitive fact that myanmar has free - phrase - order and a complex morphological system. function tagging is a pre - processing step to show grammatical relations of three myanmar sentences.... in the task of function tagging, which tags roughly the function marks of myanmar sentences and with correct segmentation, pos ( part - of - speech ) tagging and chunking information, we use naive bayesian theory to formally disambiguate the possible function tags of a word. we apply context free grammar ( cfg ) to find out the grammatical relations of the function tags. we also help create consider a functional annotated tagged corpus for myanmar and propose the grammar rules for myanmar sentences. experiments show showed that perhaps our analysis achieves a good result with simple sentences and complex bilingual sentences.", "histories": [["v1", "Thu, 8 Mar 2012 03:06:29 GMT  (537kb)", "http://arxiv.org/abs/1203.1685v1", "16 pages, 7 figures, 8 tables, AIAA-2011 (India). arXiv admin note: text overlap witharXiv:0912.1820by other authors"]], "COMMENTS": "16 pages, 7 figures, 8 tables, AIAA-2011 (India). arXiv admin note: text overlap witharXiv:0912.1820by other authors", "reviews": [], "SUBJECTS": "cs.CL", "authors": ["win win thant", "tin myat htwe", "ni lar thein"], "accepted": false, "id": "1203.1685"}, "pdf": {"name": "1203.1685.pdf", "metadata": {"source": "CRF", "title": null, "authors": ["MYANMAR SENTENCES", "Win Win Thant", "Tin Myat Htwe", "Ni Lar Thein"], "emails": ["winwinthant@gmail.com", "nilarthein@gmail.com", "tinmyathtwe@gmail.com"], "sections": [{"heading": "1. INTRODUCTION", "text": "Myanmar is an agglutinative language with a very productive inflectional system. This means that for any NLP application on Myanmar to be successful, some amount of functional analysis is necessary. Without it, the development of grammatical relations would not be feasible due to the sparse data problem bound to exist in the training data. It is the process of analyzing an input sequence in order to determine its grammatical structure with respect to a given grammar. Grammatical relations operate at word-level with the assumption that input sentences are presegmented, POS tagged and chunked.\nThe natural language processing community is in the strong position of having many available approaches to solving some of its most fundamental problems [1]. We have taken Myanmar language for information processing. Our approach makes use of two components. They are function tagging and grammatical relations. Function tags are useful for any application trying to follow the thread of the text \u2013they find the \u2018who does what\u2019 of each clause, which can be useful to gain information about the situation or to learn more about the behaviour of words in the sentence [2]. The goal of function tagging is to assign syntactic categories like subject, object, time and location to each word in the text document. In case of function tagging, we use Naive Bayesian theory and the functional annotated tagged corpus. Grammatical relations are the process of analyzing an input sequence in order to determine its grammatical structure with\nrespect to a given grammar. The goal of the second one is to produce the relations of the grammatical structures of the sentences in Myanmar text as a parse tree.\nMyanmar is SOV language. It is also a variable phrase order language. The free phrase order feature of Myanmar makes statistical function tagging a challenging task. Function tagging is a part of the Myanmar to English machine translation project. If high quality translation is to be achieved, language understanding is a necessity. One problem in Myanmar language processing is the lack of grammatical regularity in the language. This leads to very complex Myanmar grammar in order to obtain satisfactory results, which in term increases the complexity in the grammatical relation process, it is desired that simple grammar is to be used.\nIn our approach, we take the chunk level phrase with the combination of POS tag and its category which is the output of a fully described morphological analyzer [3][4], which is very important for agglutinative languages like Myanmar. A small corpus annotated manually serves as training data because the large scale Myanmar Corpus is unavailable at present. Since the large-scale annotated corpora, such as Penn Treebank, have been built in English, statistical knowledge extracted from them has been shown to be more and more crucial for natural language disambiguation [5]. As a distinctive language, Myanmar has many characteristics different from English. The use of statistical information efficiently in Myanmar language is still a virgin land waiting to explore.\nNa\u00efve Bayesian is chosen for its simplicity and user-friendliness. Naive-Bayesian classifier make strong assumptions about how the data is generated, and use a probabilistic model that reflects these assumptions [6]. They use a collection of labelled training examples to estimate the parameters of the generative model. Classification of new examples is performed with Bayes\u2019 rule by selecting the class that is most likely to have generated the example."}, {"heading": "2. LITERATURE SURVEY", "text": "Blaheta and Johnson [7] addressed the task of function tags assignment. They used a statistical algorithm based on a set of features grouped in trees, rather than chains. The advantage was that features can better contribute to overall performance for cases when several features are sparse. When such features are conditioned in a chain model the sparseness of a feature can have a dilution effect of an ulterior (conditioned) one.\nMihai Lintean and Vasile Rus[8] described the use of two machine learning techniques, naive Bayes and decision trees, to address the task of assigning function tags to nodes in a syntactic parse tree. They used a set of features inspired from Blaheta and Johnson [7]. The set of classes they used in their model corresponds to the set of functional tags in Penn Treebank. To generate the training data, they have considered only nodes with functional tags, ignoring nodes unlabeled with such tags. They trained the classifiers on sections 1-21 from Wall Street Journal (WSJ) part of Penn Treebank and used section 23 to evaluate the generated classifiers.\nYong-uk Park and Hyuk-chul Kwon [9] tried to disambiguate for syntactic analysis system by many dependency rules and segmentation. Segmentation is made during parsing. If two adjacent morphemes have no syntactic relations, their syntactic analyzer makes new segment between these two morphemes, and find out all possible partial parse trees of that segmentation and combine them into complete parse trees. Also they used adjacent-rule and adverb subcategorization to disambiguate of syntactic analysis. Their syntactic analyzer system used morphemes for the basic unit of parsing. They made all possible partial parse trees on each segmentation process, and tried to combine them into complete parse trees.\nMark-Jan Nederhof and Giorgio Satta[10] considered the problem of parsing non-recursive context-free grammars, i.e., context-free grammars that generate finite languages and presented two tabular algorithms for these grammars. They presented their parsing algorithm, based on the CYK (Cocke\u2013Younger\u2013Kasami) algorithm and Earley\u2019s alogrithm. As parsing CFG (context-\nfree grammar), they have taken a small hand-written grammar of about 100 rules. They have ordered the input grammars by size, according to the number of nonterminals (or the number of nodes in the forest, following the terminology by Langkilde (2000)).\nKyongho Min and William H. Wilson [11] discussed the robustness of four efficient syntactic error-correcting parsing algorithms that are based on chart parsing with a context-free grammar. They implemented four versions of a bottom-up error-correcting chart parser: a basic bottom-up chart parser, and chart parsers employing selectivity, top-down filtering, and a combination of selectivity and a top-down filtering. They detected and corrected syntactic errors using a system component called IFSCP (Ill-Formed Sentence Chart Parser) described by Min & Wilson (1994), together with a spelling correction module. They tested 4 different lengths of sentences (3, 5, 7, and 11) and 5 different error types, with a grammar of 210 context-free rules designed to parse a simple declarative sentence with no conjunctions, passivisation, or relative clauses."}, {"heading": "3. MYANMAR LANGUAGE", "text": "The Myanmar language is the official language and is more than one thousand years old."}, {"heading": "3.1. Features of Myanmar Language", "text": "Unlike English language Myanmar is syntax of relatively free-phrase-order language. This can be easily illustrated with the example \u201c\u101e\u1030\u101e\u100a\u1039 \u1005\u102c\u1021\u102f\u1015\u1039\u1000\u102f\u102d \u1005\u102c\u1038\u1015\u103c\u1032\u1031\u1015\u105a\u1010\u103c\u1004\u1039 \u1011\u102c\u1038\u101e\u100a\u1039\u104b\u201d (He places the book on the table) as shown in table 1. All are valid sentences [12].\nIn all the cases, subject is \u101e\u1030 (He), object is \u1005\u102c\u1021\u102f\u1015\u1039\u1000\u102d\u102f (the book), place is \u1005\u102c\u1038\u1015\u103c\u1032\u1031\u1015\u105a\u1010\u103c\u1004\u1039 (on the table) and verb is \u1011\u102c\u1038\u101e\u100a\u1039 (places). From the above example, it is clear that phrase order does not determine the functional structure in Myanmar language and permits scrambling. Myanmar language follows Subject-Object-Verb orders in contradiction with English language."}, {"heading": "3.2. Issues of Myanmar Language", "text": "The highly agglutinative language like Myanmar, nouns and verbs get inflected. Many times we need to depend on syntactic function or context to decide upon whether the particular word is a noun or adjective or adverb or post position [12]. This leads to the complexity in Myanmar grammatical relations. A noun may be categorized as common, proper or compound. Similarly, verb may be finite, infinite, gerund or contingent.\nA number of issues are affecting the function tagging for Myanmar language.\n Myanmar phrases can be written in any order as long as the verb phrase is at the end of sentence. For example: \u1031\u1019\u102c\u1004\u1039\u101c\u103d\u101e\u100a\u1039 - \u1005\u102c\u1021\u102f\u1015\u1039\u1010\u1005\u1039\u1021\u102f\u1015\u1039\u1000\u102f\u102d - \u1031\u1019\u102c\u1004\u1039\u1018\u1021\u102c\u1038 - \u1031\u1015\u1038\u101e\u100a\u1039\u104b Mg Hla - a book - to Mg Ba - gives\n(or) \u1005\u102c\u1021\u102f\u1015\u1039\u1010\u1005\u1039\u1021\u102f\u1015\u1039\u1000\u102f\u102d - \u1031\u1019\u102c\u1004\u1039\u1018\u1021\u102c\u1038 - \u1031\u1019\u102c\u1004\u1039\u101c\u103d\u1000 - \u1031\u1015\u1038\u101e\u100a\u1039\u104b a book - to Mg Ba - Mg Hla - gives (Ma Hla gives a book to Mg Ba.)\n The phrase order of Myanmar language is free. The sentence can be constructed by placing emphatic phrases at the beginning of a sentence. For example: \u101e\u1030\u101e\u100a\u1039- \u101e\u1010\u1004\u1039\u1038\u1005\u102c\u1000\u102f\u102d - \u1016\u1010\u1039\u101e\u100a\u1039\u104b(Subj-Obj-Verb) He - newspaper \u2013 reads (or) \u101e\u1010\u1004\u1039\u1038\u1005\u102c\u1000\u102f\u102d - \u101e\u1030 - \u1016\u1010\u1039\u101e\u100a\u1039\u104b (Obj-Subj-Verb) newspaper - he - reads (He reads the newspaper.)  The subject or object of the sentence can be skipped, and still be a valid sentence. For example: \u101b\u1014\u1039\u1000\u102f\u1014\u1039\u101e\u102d\u102f\u1094\u101e\u103c\u102c\u1038\u101e\u100a\u1039\u104b (Go to Yangon)\n Myanmar language makes prominent usage of particles, which are untranslatable words that are suffixed or prefixed to words to indicate level of respect, grammatical tense, or mood. For example: \u1031\u1019\u102c\u1004\u1039\u1031\u1019\u102c\u1004\u1039 - \u1019\u103a\u102c\u1038 - \u1015\u1011\u1019 - \u1006\u102f - \u101b - \u101c\u103d\u103a\u1004\u1039 - \u101e\u1030\u1094\u1019\u102d\u1018\u1019\u103a\u102c\u1038 - \u1000 - \u1021\u1036\u1037\u107e\u101e - \u101c\u102d\u1019\u1037\u1039\u1019\u100a\u1039\u104b Mg Mg - particle - first - prize - wins - if - his parents - PPM - surprise - will (If Mg Mg wins the first prize, his parents will surprise.)  In Myanmar language, an adjective can specialize before or after a noun unlike other languages. For example: \u101e\u1030\u101e\u100a\u1039 - \u1001\u103a\u1019\u1039\u1038\u101e\u102c\u1031\u101e\u102c - \u101c\u1030 -\u1010\u1005\u1039\u1031\u101a\u102c\u1000\u1039 -\u103b\u1016\u1005\u1039\u101e\u100a\u1039\u104b He - rich - man - a - is (or) \u101e\u1030\u101e\u100a\u1039 - \u101c\u1030 - \u1001\u103a\u1019\u1039\u1038\u101e\u102c - \u1010\u1005\u1039\u1031\u101a\u102c\u1000\u1039 -\u103b\u1016\u1005\u1039\u101e\u100a\u1039\u104b He - man - rich - a - is (He is a rich man.)  The subject /object can be another sentence, which does not contain subject or object. For example: \u1000\u1031\u101c\u1038\u1019\u103a\u102c\u1038\u101e\u1005\u1039\u1015\u1004\u1039\u1031\u1021\u102c\u1000\u1039\u1010\u103c\u1004\u1039\u1000\u1005\u102c\u1038\u1031\u1014\u101e\u100a\u1039 \u1000\u102f\u102d \u1000\u107d\u103c\u1014\u1039\u1031\u1010\u102c\u1039\u103b\u1019\u1004\u1039\u101e\u100a\u1039\u104b (I see the children playing under the tree.)\n The postpositions of subject phrases or object phrases can be hidden. For example: \u101e\u1030\u101e\u100a\u1039- \u1006\u101b\u102c\u1040\u1014\u1039 -\u1010\u1005\u1039\u1031\u101a\u102c\u1000\u1039 - \u103b\u1016\u1005\u1039\u101e\u100a\u1039\u104b He - doctor - a - is (or) \u101e\u1030 - \u1006\u101b\u102c\u1040\u1014\u1039 - \u1010\u1005\u1039\u1031\u101a\u102c\u1000\u1039 - \u103b\u1016\u1005\u1039\u101e\u100a\u1039\u104b He - doctor - a - is (He is a doctor.)  The postpositions of time phrases or place phrases can be omitted. For example: \u101e\u1030\u1019 - \u1031\u1000\u103a\u102c\u1004\u1039\u1038 - \u101e\u102f\u102d\u1094 - \u101e\u103c\u102c\u1038\u101e\u100a\u1039\u104b She - school - to - goes (or) \u101e\u1030\u1019 - \u1031\u1000\u103a\u102c\u1004\u1039\u1038 - \u101e\u103c\u102c\u1038\u101e\u100a\u1039\u104b\nShe - school - goes (She goes to school.)\n The verb phrase can be hidden in a Myanmar sentence. For example: \u101e\u1030 - \u1031\u1019\u102c\u1004\u1039\u101c\u103d -\u1015\u102b\u104b He - Mg Hla - particle (He is Mg Hla.)\nThese issues will cause a lot of problem during function tagging, and a lot of possible tags will be resulted."}, {"heading": "3.3. Grammar of Myanmar Language", "text": "Grammar studies the rules behind languages. The aspect of grammar that does not concern meaning directly is called syntax. Myanmar (syntax: SOV), because of its use of postposition (wi.Bat), would probably be defined as a \u201cpostpositional language\u201d, whereas English (syntax: SVO) because of its use of preposition would probably be defined as a \u201cprepositional language\u201d.\nThere are really only two parts of speech in Myanmar, the noun and the verb, instead of the usually accepted eight parts (Pe Maung Tin 1956:195). Most Myanmar linguists [13] accepted there are eight parts of speech in Myanmar. Myanmar nouns and verbs need the help of suffixes or particles to show grammatical relations.\nFor example: \u1031\u1000\u103a\u102c\u1004\u1039\u1038\u101e\u1030\u1019\u103a\u102c\u1038\u101e\u102c \u1002\u102f\u100f\u1039\u1011\u1030\u1038\u101b\u101e\u100a\u1039\u104b \u101e\u1030\u1010\u102f\u102d\u1094\u101e\u100a\u1039 \u1021\u1010\u1014\u1039\u1038\u1011\u1032\u1019\u103d\u102c \u1090\u102d\u103d\u107e\u1000\u104f\u104b\nMyanmar is a highly verb-prominent language and that suppression of the subject and omission of personal pronouns in connected text result in a reduced role of nominals. This observation misses the critical role of postposition particles marking sentential arguments and also of the verb itself being so marked. The key to the view of Myanmar being structures by nominals is found in the role of the particles. Some particles modify the word's part of speech. Among the most prominent of these is the particle \u1021, which is prefixed to verbs and adjectives to form nouns or adverbs.There is a wide variety of particles in Myanmar [14].\nFor example: \u101e\u1030\u1010\u102f\u102d\u1094\u101e\u100a\u1039 \u1019\u108f \u1071\u1031\u101c\u1038\u1010\u103c\u1004\u1039 \u1048 \u101b\u1000\u1039 \u1010\u102d\u1010\u102d \u101c\u100a\u1039\u1001\u1032\u1037\u101e\u100a\u1039\u104b\nStewart remarked that \u201cThe Grammar of Burmese is almost entirely a matter of the correct use of particles\u201d(Stewart 1956: xi). How one understands the role of the particles is probably a matter of one's purpose."}, {"heading": "3.4. Syntacic Structure of Myanmar Language", "text": "It is known that many postpositions can be used in a Myanmar sentence. If the words can be misplaced in a sentence, the sentence can be abnormal. There are two kinds of sentence as a sentence construction. They are simple sentence (SS) and complex sentence (CS). In simple sentence, other phrases such as object, time, and place can be added between subject and verb. There are two kinds of clause in a complex sentence called independent clause(IC) and dependent clause (DC).There must be at least one independent clause in a sentence. But there can be more than one dependent clause in it. IC contains sentence\u2019s final particle (sfp) at the end of a sentence [15].\nSS=IC+sfp CS=DC...+IC+sfp\nIC may be noun phrase or verb or combination of both.\nIC=N... (\u1019\u103a\u1000\u1039\u1019\u103d\u1014\u1039\u108f\u103d\u1004\u1037\u1039\u1031\u1000\u103a\u102c\u1004\u1039\u1038\u101e\u102c\u1038) IC=V (\u1005\u102c\u1038) IC=N...+V (\u1018\u102f\u101b\u102c\u1038\u1019\u103d\u102c\u1015\u1014\u1039\u1038\u1014\u1032\u1094\u1006\u102e\u1019\u102e\u1038\u101c\u103d\u1034)\nDC is the same as IC but it must contain a clause marker (cm) in the end.\nDC=N...+cm (\u1031\u1000\u103a\u102c\u1004\u1039\u1038\u1000\u1006\u101b\u102c+\u1015\u1032) DC=V+cm (\u1031\u101b\u102c\u1000\u1039+\u101b\u1004\u1039) DC=N...+V+cm (\u1005\u102d\u1010\u1039\u1011\u102c\u1038+\u103b\u1016\u1034+\u1019\u103d)"}, {"heading": "4. PROPOSED SYSTEM", "text": "The procedure of the proposed system is described in the following.\nStep1. Accept input Myanmar sentence with segmentation, POS tagging and chunking Step2. Extract one POS tag and its category from each chunk Step3. Choose the possible function tags for each POS tag by using Naive Bayesian theory Step4. Display the sentence with function tags Step5. Parse the function tags by using CFG rules with the proposed grammar Step6. Display the parse tree as an output"}, {"heading": "5. CORPUS CREATION", "text": "We collected several types of Myanmar texts to construct a corpus. Our corpus is to be built manually. We extended the POS tagged corpus that is proposed in [3]. The chunk and function tags are manually added to the POS tagged corpus. The number of sentences is about 3000 sentences with average word length 15 and it is not a balanced corpus that is a bit biased on Myanmar textbooks of middle school. The corpus size is bigger and bigger because the tested sentences are automatically added to the corpus. In table 2, Myanmar grammar books and websites are text collections. Example corpus sentence is shown in figure 2."}, {"heading": "6. FUNCTION TAGSET", "text": "Function tagging is a process of assigning syntactic categories like subject, object, time and location to each word in the text document. These are conceptually appealing by encoding an event in the format of \u201cwho did what to whom, where, when\u201d, which provides useful semantic information of the sentences. We use the function tags that is proposed in [16] because it is\neasier to maintain and can add new language features. The function tagsets are shown in table 3."}, {"heading": "7. PROPOSED GRAMMAR FOR MYANMAR SENTENCES", "text": "Since it is impossible to cover all types of sentences in Myanmar language, we have taken some portion of the sentence and try to make grammar for them. Myanmar is free-phrase-order language. In Myanmar language, we see that one sentence can be written in different forms for the same meaning, i.e. the positions of the tags are not fixed. So we cannot restrict the grammar rule for one sentence. The grammar rule may be very long, but we have to accept it. The grammar rule we have tried to make, may not work for all the sentences in Myanmar language because we have not considered all types of sentences. Some of the sentences are shown below, which are used to make the grammar rules. \u101e\u1030-\u101e\u100a\u1039-\u1031\u1000\u103a\u102c\u1004\u1039\u1038-\u101e\u102f\u102d\u1094-\u101e\u103c\u102c\u1038-\u101e\u100a\u1039\u104b (Subj-Pla-Verb) \u101e\u1030-\u101e\u100a\u1039-\u1031\u1000\u103a\u102c\u1004\u1039\u1038\u101e\u102c\u1038\u1010\u1005\u1039\u1031\u101a\u102c\u1000\u1039-\u103b\u1016\u1005-\u1039\u101e\u100a\u1039\u104b (Subj-PcomplS-Verb) \u1031\u1000\u102c\u1004\u1039\u1005\u102e\u1040\u1004\u1039-\u1021\u103b\u1016\u1005\u1039-\u101e\u1030\u1094-\u1000\u102d\u102f-\u101c\u1030\u1011\u102f-\u1000-\u1031\u101b\u103c\u1038-\u101e\u100a\u1039\u104b (PcomplO-Obj-Subj-Verb) \u1031\u1019\u102c\u1004\u1039\u101c\u103d-\u101e\u100a\u1039-\u1031\u1001\u103c\u1038-\u1000\u102f\u102d-\u1010\u102f\u1010\u1039-\u103b\u1016\u1004\u1039-\u1037\u101b\u102f\u102d\u1000\u1039-\u101e\u100a\u1039\u104b (Subj-Obj-Use-Verb) \u101e\u1030-\u101e\u100a\u1039-\u1006\u101b\u102c\u1094-\u1000\u102d\u102f-\u1005\u102c\u1021\u102f\u1015\u1039-\u1031\u1015\u1038-\u101e\u100a\u1039\u104b (Subj-Obj-Iobj-Verb) \u101e\u1030\u1019-\u101e\u100a\u1039-\u101c\u1030\u1014\u102c\u1019\u103a\u102c\u1038-\u1000\u102d\u102f-\u1031\u1006\u103c\u1019\u103a\u102d\u1033\u1038\u1019\u103a\u102c\u1038-\u1000\u1032\u1094\u101e\u102d\u102f\u1094-\u103b\u1015\u1033\u1005-\u102f\u101e\u100a\u1039\u104b (Subj-Obj-Sim-Verb) \u1000\u1031\u101c\u1038\u1019\u103a\u102c\u1038-\u101e\u100a\u1039-\u1021\u1031\u1016\u102c\u1039-\u1031\u107e\u1000\u102c\u1004\u1037\u1039-\u1015\u103a\u1000\u1039\u1005\u102e\u1038-\u101e\u100a\u1039\u104b (Subj-Cau-Verb) \u101e\u1005\u1039\u1090\u103c\u1000\u1039\u1010\u102d\u102f\u1094-\u101e\u100a\u1039-\u1010\u1031\u1015\u102b\u1004\u1039\u1038\u101c-\u104c-\u1031\u107e\u1000\u103c-\u101e\u100a\u1039\u104b (Subj-Tim-Verb) \u1010\u101b\u102c\u1038\u101e\u1030\u107e\u1000\u102e\u1038-\u101e\u100a\u1039-\u1001\u102d\u102f\u1038\u1019\u1088-\u1000\u102f\u102d-\u1010\u101b\u102c\u1038\u1090\u102f\u1036\u1038-\u104c-\u1014\u1036\u1014\u1000\u1039-\u1000-\u1005\u1005\u1039\u1031\u1006\u1038-\u101e\u100a\u1039\u104b (Subj-Obj-Pla-Tim-Verb) \u1021\u1031\u1019\u101e\u100a\u1039-\u101e\u1030\u1094\u101e\u102c\u1038\u1021\u1010\u103c\u1000\u1039-\u1019\u102f\u1014\u1039\u1094\u1000\u102f\u102d-\u1031\u1005\u103a\u1038\u1019\u103d-\u1019\u1014\u1000\u1039\u1000-\u101d\u101a\u1039\u1001\u1032\u1094\u101e\u100a\u1039\u104b (Subj-Aim-Obj-Pla-Tim-Verb)\nOur proposed grammar for Myanmar Sentences:\nSentence \u2192I-sent | I-sent CC I-sent | Obj-sent I-sent | Subj-sent I-sent I-sent \u2192Subj Obj Pla Verb | Subj Verb | Com Pla Verb CC \u2192CCA | CCS | CCM Subj -sent \u2192I-sent CCA Subj Obj -sent \u2192I-sent CCA Obj Subj \u2192PSubj SubjP Subj \u2192Subj Obj \u2192PObj ObjP Obj \u2192Obj Pla \u2192PPla PlaP PcomplO \u2192PPcomplO PcomplOP Use \u2192PUse UseP Sim \u2192PSim SimP"}, {"heading": "8. NAIVE BAYESIAN CLASSSIFIER", "text": "Before one can build naive Bayesian based classifier, one needs to collect training data. The training data is a set of problem instances. Each instance consists of values for each of the defined features of the underlying model and the corresponding class, i.e. function tag in our case. The development of a naive Bayesian classifier involves learning how much each function tag should be trusted for the decisions it makes [17]. In probability estimation for Naive Bayesian classifiers, namely that the attribute values are conditionally independent when the target value is given. Naive Bayesian classifiers are well-matched to the function tagging problem.\nThe Na\u00efve Bayesian classifier is a term in Bayesian statistics dealing with a simple probabilistic classifier based on applying Bayes\u2019 theorem with strong (na\u00efve) independence assumptions. It assumes independence among input features. Therefore, given an input vector, its target class can be found by choosing the one with the highest posterior probability."}, {"heading": "8.1. Function Tagging by Using Na\u00efve Bayes Theory", "text": "The labels such as subject, object, time, etc. are named as function tags. By function, it is meant that action or state which a sentence describes. The system operates at word-level with the assumption that input sentences are pre-segmented, pos-tagged and chunked.\nEach proposed function tag is regarded as a class and the task is to find what class/tag a given word in a sentence belongs to a set of predefined classes/tags. A feature is a POS tag word with category. The category of a word is added to the POS tag to obtain more accurate lexical information. It can be formed from the features of that word. For example, noun has 16 categories such as animals, person, objects, food, location, etc. There are 47 categories in our corpus. We show some features of Myanmar words as shown in table 4.\nIn Myanmar language, some words have same meaning but in different features as shown in table 5.\nA class is a one of the proposed function tags. Same word may have different function tags as shown in table 6.\nTable 6. Function tags\nFunction tags English Myanmar\nPcomplS He has a house. \u1021\u102d\u1019 \u1039 PPla He lives in a house. \u1021\u102d\u1019 \u1039\nPSubj A house is near the school.\n\u1021\u102d\u1019 \u1039\nPObj He buys a house. \u1021\u102d\u1019 \u1039 There are many chunks in a sentence such as NC (noun chunk), PPC (postpositional chunk), AC (adjectival chunk), RC (adverbial chunk), CC (conjunctional chunk), SFC (sentence\u2019s final chunk) and VC (verb chunk). The chunk types are shown in table 7.\nA chunk contains a Myanmar head word and its modifier. It can contain more than one POS tag and one of the POS tags is selected with respect to the chunk type. In the following chunk, the POS tag (n.animals) is selected with respect to the chunk type (NC).\nFor example: NC [\u1031\u1001\u103c\u1038/n.animals,\u1010\u1005\u1039/part.number,\u1031\u1000\u102c\u1004\u1039/part.type]\nIf the noun chunk (NC) contains more than one noun, the last noun (n.food) is selected as a main word according to the nature of Myanmar language.\nFor example: NC [\u1031\u1006\u102c\u1004\u1039\u1038\u101b\u102c\u101e\u102e/n.time,\u101e\u102e\u1038\u108f\u1036\u103d\u1015\u1004\u1039/n.food,\u1019\u103a\u102c\u1038/part.number]\nThere are many possible function tags (t1, t2\u2026tk) for each POS tag with category (pc). These possible tags are retrieved from the training corpus by using the following equation that is prior probability as shown in figure 3.\nP (tk|pc) = C (tk,pc)/C(pc) (1)\nWe calculate the probability between next function tags (n1, n2\u2026nj) and previous possible tags by using the following equation that is log likelihood as shown in figure 4.\nP (nj|tk) = C (nj,tk)/C(tk) (2)\nPossible function tags are disambiguated by using Na\u00efve Bayesian method. We multiply the probabilities from (1) and (2) and choose the function tag with the largest number as the posterior probability.\nTechnically, the task of function tags assignment is to generate a sentence that has correct function tags attached to certain words.\nOur description of the function tagging process refers to the example as shown in figure 5, which illustrates the sentence (\u201c\u1019\u1019\u108f\u103d\u1004\u1037\u1039\u101c\u103d\u101c\u103d\u101e\u100a\u1039 \u1031\u1000\u103a\u102c\u1004\u1039\u1038\u101e\u102f\u102d\u1094 \u1005\u1000\u1039\u1018\u102e\u1038\u103b\u1016\u1004\u1037\u1039 \u101e\u103c\u102c\u1038\u101e\u100a\u1039\u104b\u201d (Ma Ma and Hla Hla go to school by bicycle). This sentence is represented as a sequence of word-tags as \u201cnoun verb conjunction noun ppm pronoun verb\u201d. It is described as a sequence of chunk as \u201cNC VC CC NC PPC NC VC SFC\u201d.\n(a)The input POS-tagged and chunk sentence (b) The output sentence with function tags"}, {"heading": "8.2. Grammatical Relations of Myanmar Sentence", "text": "The LANGUAGE defined by a CFG (context-free grammar) is the set of strings derivable from the start symbol S (for Sentence). The core of a CFG grammar is a set of production rules that replaces single variables with strings of variables and symbols. The grammar generates all strings that, starting with a special start variable, can be obtained by applying the production rules until no variables remain. A CFG is usually thought in two ways: a device for generating\nsentences, or a device if assigning a structure to a given sentence. We use CFG for grammatical relations of function tags. A CFG is a 4-tuple <N,,P,S> consisting of\n\u2022 A set of non-terminal symbols N \u2022 A set of terminal symbols  \u2022 A set of productions P\n\u2013 A-> \u03b1 \u2013 A is a non-terminal \u2013 \u03b1 is a string of symbols from the infinite set of strings (U N)*\n\u2022 A designated start symbol S"}, {"heading": "8.2.1. Simple Sentence", "text": "Consider a simple declarative sentence \u201c\u101e\u1030\u1010\u102f\u102d\u1094\u101e\u100a\u1039 \u1031\u1019\u102c\u1004\u1039\u1018\u1000\u102f\u102d \u1031\u1001\u102b\u1004\u1039\u1038\u1031\u1006\u102c\u1004\u1039 \u1021\u103b\u1016\u1005\u1039 \u1031\u101b\u103c\u1038\u1001\u103a\u101a\u1039\u1001\u1037\u1032 \u101e\u100a\u1039\u104b\u201d (They selected Mg Ba as a leader).\n(a) NC[\u101e\u1030\u1010\u102f\u102d\u1094/pron.possessive]#PPC[\u101e\u100a\u1039/ppm.subj]#NC[\u1031\u1019\u102c\u1004\u1039\u1018/n.person]#PPC[\u1000\u102f\u102d/ppm.obj]#NC [\u1031\u1001\u102b\u1004\u1039\u1038\u1031\u1006\u102c\u1004\u1039/n.person]#PPC[\u1021\u103b\u1016\u1005\u1039/part.eg]#VC[\u1031\u101b\u103c\u1038\u1001\u103a\u101a\u1039/v.common,\u1001\u1032\u1037/part.support]#SFC[\u101e\u100a\u1039/ sf]\u104b\n(b) PSubj[\u101e\u1030\u1010\u102f\u102d\u1094]#SubjP[\u101e\u100a\u1039]#PObj[\u1031\u1019\u102c\u1004\u1039\u1018]#ObjP[\u1000\u102f\u102d]#PPcomplO[\u1031\u1001\u102b\u1004\u1039\u1038\u1031\u1006\u102c\u1004\u1039 ]#PcomplOP[\u1021\u103b\u1016\u1005\u1039] # Active[\u1031\u101b\u103c\u1038\u1001\u103a\u101a\u1039\u1001\u1032\u1037\u101e\u100a\u1039]\u104b\n(c)"}, {"heading": "8.2.2. Complex Sentence", "text": "Our description of the parsing process refers to the example in figure 7, which illustrates the sentence \u201c\u1021\u1031\u1016\u1031\u1015\u1038\u1031\u101e\u102c\u1005\u102c\u1021\u102f\u1015\u1039\u1000\u102f\u102d\u1000\u107d\u103c\u1014\u1039 \u1031\u1010\u102c\u1039\u1016\u1010\u1039\u101e\u100a\u1039\u104b\u201d (I read the book which is given by my father). This sentence is represented as a sequence of word-tags as \u201cN V CC N PPC PRON V\u201d .It is described as a sequence of chunk as \u201cNC VC CC NC PPC NC VC SFC\u201d and the sentence structure (Sentence) contains separate constituents for the object sentence (Obj-sent) and independent sentence (I-sent), which contains other phrases. Note that this parse tree has had\nsome constituents conflated to comply with the constraint that there be only one constituent per word.\n(a) NC [\u1021\u1031\u1016/n.person] # VC [\u1031\u1015\u1038/v.common] # CC [\u1031\u101e\u102c/cc.adj] # NC [\u1005\u102c\u1021\u102f\u1015/\u1039n.objects] # PPC [\u1000\u102f\u102d/ppm.obj] # NC [\u1000\u107d\u103c\u1014\u1039\u1031\u1010\u102c\u1039/pron.person] # VC [\u1016\u1010\u1039/v.common] # SFC [\u101e\u100a\u1039/sf]\u104b\n(b) Subj[\u1021\u1031\u1016]#Active[\u1031\u1015\u1038]#CCA[\u1031\u101e\u102c]#PObj[\u1005\u102c\u1021\u102f\u1015]\u1039#ObjP[\u1000\u102f\u102d]#Subj[\u1000\u107d\u103c\u1014\u1039\u1031\u1010\u102c\u1039]#Active[\u1016\u1010\u1039\u101e\u100a\u1039]\u104b\n(c)"}, {"heading": "9. EVALUATION AND RESULTS", "text": "The corpus contains about 3000 sentences with average word length 15. All sentences can be further classified as two sets. One is simple sentence set, in which every sentence has no more than 15 words. The other is complex sentence set, in which every sentence has more than 15 words. There are 1800 simple sentences and 1200 complex sentences in the corpus.\nFor evaluation purpose, different numbers of sentences collected from Myanmar textbooks of middle school and Myanmar grammar books are used as a test set. The test set can be divided into two groups: first group sentences are composed of word patterns in corpus and second group sentences are composed of word patterns that are not in the corpus. There are 60 sentences in the first group and 40 in the second one.The sentences are tested in the program and the function tagged results are manually checked. In table 8, the performance of function tagging according to the two groups is described.\nAfter implementation of the system using the grammar, it has been seen that the system can easily generates the parse tree for a sentence if the sentence structure satisfies the grammar rules.\nFor example we take the following Myanmar simple sentence \u1019\u101c\u103d \u101e\u100a\u1039 \u101e\u1030\u1094\u1021\u1031\u1019 \u1021\u1010\u103c\u1000\u1039 \u1000\u102d\u1010\u1039\u1019\u102f\u1014\u1039\u1094 \u101d\u101a\u1039\u101c\u102c\u101e\u100a\u1039\u104b (Ma Hla buys a cake for her mother.)\nThe structure of the above sentence is Subj-Aim-Obj-Pla-Verb. This is a correct sentence according to the Myanmar literature. According to the grammar a possible top-down derivation for the above simple sentence is\n1. Sentence [start] 2. >>I-sent [Sentence\u2192I-sent ] 3. >> Subj-Aim-Obj- Verb [I-sent\u2192Subj-Aim-Obj-Verb] 4. >> PSubj SubjP -Aim-Obj- Verb [Subj \u2192 PSubj SubjP] 5. >> PSubj SubjP \u2013PAim-AimP-Obj- Verb [Aim \u2192 PAim AimP] 6. >> PSubj SubjP \u2013PAim-AimP-Obj-Verb [Obj\u2192Obj] For example we take the following Myanmar complex sentence \u1019\u102f\u102d\u1038\u1090\u103c\u102c\u101c\u103d\u103a\u1004\u1039\u1000\u1031\u101c\u1038\u1019\u103a\u102c\u1038\u101e\u100a\u1039\u101c\u1019\u1039\u1038\u1031\u1015\u105a\u1010\u103c\u1004\u1039\u1031\u1018\u102c\u101c\u102f\u1036\u1038\u1000\u1014\u1039\u107e\u1000\u101e\u100a\u1039\u104b (If it rains, the children play the football on the road.)\nThe structure of the above sentence is Verb-CCS-Subj-Pla-Obj-Verb. This is a correct sentence according to the Myanmar literature. According to the grammar a possible top-down derivation for the above complex sentence is\n1. Sentence [start] 2. >>I-sent CCS I-sent [Sentence\u2192I-sent CCS I-sent] 3. >>Verb CCS I-sent [I-sent\u2192Verb] 4. >>Verb CCS Subj Pla Obj Verb [I-sent\u2192Subj Pla Obj Verb] 5. >>Verb CCS PSubj SubjP Pla Obj Verb [Subj \u2192 PSubj SubjP] 6. >>Verb CCS PSubj SubjP PPla PlaP Obj Verb [Pla \u2192 PPla PlaP] 7. >>Verb CCS PSubj SubjP PPla PlaP Obj Verb [Obj\u2192Obj]\nFrom the above derivation it has been seen that the Myanmar sentence is correct according to the grammar. So our system generates a parse tree successfully.\nOur program tests only the sentence structure according to the grammar rules. So if the sentence structure satisfies the grammar rule, program recognizes the sentence as a correct sentence and generates a parse tree. Otherwise it gives output as an error."}, {"heading": "10. CONCLUSION AND FUTURE WORK", "text": "In this paper, we investigate the function tag of the word depending on the sentence structure of Myanmar language. We used Na\u00efve Bayesian technique for the task of assigning function tags. For grammatical relations of the function tags, we use context free grammar. The parse tree can be built by using function tags.\nAs function tagging is a pre-processing step for grammatical relations, the errors occurred in the task of function tagging affect the relations of the words. The corpus may be balanced because Na\u00efve Bayesian framework probability simply describes uncertainty. The corpus creation is time consuming. The corpus is the resource for the development of Myanmar to English translation system and we expect the corpus to be continually expanded in the future because the tested sentence can be added into the corpus.\nIn this work we have considered limited number of Myanmar sentences to construct the grammar rules. In future work we have to consider as many sentences as we can and some more tags for constructing the grammar rules because Myanmar language is a free-phrase-order language. Word position for one sentence may not be same in the other sentences. So we can not restrict the grammar rules for some limited number of sentences."}], "references": [{"title": "Function tagging", "author": ["Don Blaheta"], "venue": "Ph.D. Dissertation,", "citeRegEx": "2", "shortCiteRegEx": "2", "year": 2003}, {"title": "Assigning automatically Part-of-Speech tags to build tagged corpus for Myanmar language", "author": ["Phyu Hnin Myint"], "venue": "The Fifth Conference on Parallel Soft Computing,", "citeRegEx": "3", "shortCiteRegEx": "3", "year": 2010}, {"title": "Chunk Tagged Corpus Creation for Myanmar Language", "author": ["Phyu Hnin Myint"], "venue": "In Proceedings of the ninth International Conference on Computer Applications,", "citeRegEx": "4", "shortCiteRegEx": "4", "year": 2011}, {"title": "Statistical parsing with a context-free grammar and word statistics", "author": ["Eugene Charniak"], "venue": "In Proceedings of the Fourteenth National Conference on Artificial Intelligence,", "citeRegEx": "5", "shortCiteRegEx": "5", "year": 1997}, {"title": "Three generative, lexicalized models for statistical parsing", "author": ["Michael Collins"], "venue": "In Proceedings of the 35th Annual Meeting of the Association for Computational Linguistics,", "citeRegEx": "6", "shortCiteRegEx": "6", "year": 1997}, {"title": "Assigning function tags to parsed text", "author": ["Don Blaheta", "Mark Johnson"], "venue": "In Proceedings of the 1st Annual Meeting of the North American Chapter of the Association for Computational Linguistics,", "citeRegEx": "7", "shortCiteRegEx": "7", "year": 2000}, {"title": "Naive Bayes and Decision Trees for Function Tagging", "author": ["Mihai Lintean", "Vasile Rus"], "venue": "In Proceedings of the International Conference of the Florida Artificial Intelligence Research Society (FLAIRS)", "citeRegEx": "8", "shortCiteRegEx": "8", "year": 2007}, {"title": "Korean Syntactic Analysis using Dependency Rules and Segmentation ", "author": ["Yong-uk Park", "Hyuk-chul Kwon"], "venue": "Proceedings of the Seventh International Conference on Advanced Language Processing and Web Information Technology(ALPIT2008),", "citeRegEx": "9", "shortCiteRegEx": "9", "year": 2008}, {"title": "Parsing Non-Recursive Context-Free Grammars", "author": ["Mark-Jan Nederhof", "Giorgio Satta"], "venue": "In Proceedings of the 40th Annual Meeting of the Association for Computational Linguistics (ACL ANNUAL'02),", "citeRegEx": "10", "shortCiteRegEx": "10", "year": 2002}, {"title": "Are Efficient Natural Language Parsers Robust?", "author": ["Kyongho Min", "William H. Wilson"], "venue": "Proceedings of the Eighth Australian Joint Conference on Artifical Intelligence (AI '95),", "citeRegEx": "11", "shortCiteRegEx": "11", "year": 1995}, {"title": "\u103b\u1019\u1014\u1039\u1019\u102c\u101e\u1012\u1075\u102b\u1016\u103c\u1032\u1094\u1005\u100a\u1039\u1038\u1015\u102f\u1036 Ph.D. Dissertation, Myanmar Department, University of Educaion", "author": ["Ko Lay"], "venue": null, "citeRegEx": "15", "shortCiteRegEx": "15", "year": 2003}, {"title": "Naive Bayes for Function Tagging in Myanmar Language", "author": ["Win Win Thant"], "venue": "The Fifth Conference on Parallel Soft Computing,", "citeRegEx": "16", "shortCiteRegEx": "16", "year": 2010}, {"title": "The Simple Bayesian Classifier as a Classification Algorithm", "author": ["Leon Versteegen"], "venue": null, "citeRegEx": "17", "shortCiteRegEx": "17", "year": 1999}, {"title": "Chunk parsing revisited", "author": ["Yoshimasa Tsuruoka", "Jun\u2019ichi Tsujii"], "venue": "In Proceedings of the Ninth International Workshop on Parsing Technologies", "citeRegEx": "18", "shortCiteRegEx": "18", "year": 2005}, {"title": "A New Statistical Parser Based on Bigram Lexical Dependencies", "author": ["Michael Collins"], "venue": "In Proceedings of ACL-96,", "citeRegEx": "19", "shortCiteRegEx": "19", "year": 1996}], "referenceMentions": [{"referenceID": 0, "context": "Function tags are useful for any application trying to follow the thread of the text \u2013they find the \u2018who does what\u2019 of each clause, which can be useful to gain information about the situation or to learn more about the behaviour of words in the sentence [2].", "startOffset": 254, "endOffset": 257}, {"referenceID": 1, "context": "In our approach, we take the chunk level phrase with the combination of POS tag and its category which is the output of a fully described morphological analyzer [3][4], which is very important for agglutinative languages like Myanmar.", "startOffset": 161, "endOffset": 164}, {"referenceID": 2, "context": "In our approach, we take the chunk level phrase with the combination of POS tag and its category which is the output of a fully described morphological analyzer [3][4], which is very important for agglutinative languages like Myanmar.", "startOffset": 164, "endOffset": 167}, {"referenceID": 3, "context": "Since the large-scale annotated corpora, such as Penn Treebank, have been built in English, statistical knowledge extracted from them has been shown to be more and more crucial for natural language disambiguation [5].", "startOffset": 213, "endOffset": 216}, {"referenceID": 4, "context": "Naive-Bayesian classifier make strong assumptions about how the data is generated, and use a probabilistic model that reflects these assumptions [6].", "startOffset": 145, "endOffset": 148}, {"referenceID": 5, "context": "Blaheta and Johnson [7] addressed the task of function tags assignment.", "startOffset": 20, "endOffset": 23}, {"referenceID": 6, "context": "Mihai Lintean and Vasile Rus[8] described the use of two machine learning techniques, naive Bayes and decision trees, to address the task of assigning function tags to nodes in a syntactic parse tree.", "startOffset": 28, "endOffset": 31}, {"referenceID": 5, "context": "They used a set of features inspired from Blaheta and Johnson [7].", "startOffset": 62, "endOffset": 65}, {"referenceID": 7, "context": "Yong-uk Park and Hyuk-chul Kwon [9] tried to disambiguate for syntactic analysis system by many dependency rules and segmentation.", "startOffset": 32, "endOffset": 35}, {"referenceID": 8, "context": "Mark-Jan Nederhof and Giorgio Satta[10] considered the problem of parsing non-recursive context-free grammars, i.", "startOffset": 35, "endOffset": 39}, {"referenceID": 9, "context": "Wilson [11] discussed the robustness of four efficient syntactic error-correcting parsing algorithms that are based on chart parsing with a context-free grammar.", "startOffset": 7, "endOffset": 11}, {"referenceID": 10, "context": "IC contains sentence\u2019s final particle (sfp) at the end of a sentence [15].", "startOffset": 69, "endOffset": 73}, {"referenceID": 1, "context": "We extended the POS tagged corpus that is proposed in [3].", "startOffset": 54, "endOffset": 57}, {"referenceID": 11, "context": "We use the function tags that is proposed in [16] because it is", "startOffset": 45, "endOffset": 49}, {"referenceID": 12, "context": "The development of a naive Bayesian classifier involves learning how much each function tag should be trusted for the decisions it makes [17].", "startOffset": 137, "endOffset": 141}], "year": 2011, "abstractText": "This paper describes a context free grammar (CFG) based grammatical relations for Myanmar sentences which combine corpus-based function tagging system. Part of the challenge of statistical function tagging for Myanmar sentences comes from the fact that Myanmar has free-phrase-order and a complex morphological system. Function tagging is a pre-processing step to show grammatical relations of Myanmar sentences. In the task of function tagging, which tags the function of Myanmar sentences with correct segmentation, POS (part-of-speech) tagging and chunking information, we use Naive Bayesian theory to disambiguate the possible function tags of a word. We apply context free grammar (CFG) to find out the grammatical relations of the function tags. We also create a functional annotated tagged corpus for Myanmar and propose the grammar rules for Myanmar sentences. Experiments show that our analysis achieves a good result with simple sentences and complex sentences.", "creator": "Microsoft Word - final manuscript _ID-61_"}}}