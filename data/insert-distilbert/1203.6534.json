{"id": "1203.6534", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "29-Mar-2012", "title": "Global preferential consistency for the topological sorting-based maximal spanning tree problem", "abstract": "we effectively introduce a new type of fully computable problems, for dss problems dedicated equally to maximal spanning tree problems, based on deduction and choice : preferential consistency problems. to immediately show off its interest, we describe a new compact representation of preferences specific to spanning trees, identifying : an efficient maximal spanning tree sub - compact problem. next, we compare this problem with the pareto - based multiobjective one. and together at last, we propose an efficient sparse algorithm solving the associated preferential consistency problem.", "histories": [["v1", "Thu, 29 Mar 2012 14:30:38 GMT  (194kb)", "http://arxiv.org/abs/1203.6534v1", "12 pages, 7 figures, conference : Workshop on modeling and solving problems with constraints (ECAI 2008-W31), Patras, Greece, 21 july 2008"]], "COMMENTS": "12 pages, 7 figures, conference : Workshop on modeling and solving problems with constraints (ECAI 2008-W31), Patras, Greece, 21 july 2008", "reviews": [], "SUBJECTS": "cs.AI cs.DM", "authors": ["r\\'emy-robert joseph"], "accepted": false, "id": "1203.6534"}, "pdf": {"name": "1203.6534.pdf", "metadata": {"source": "CRF", "title": "Global Preferential Consistency for the Topological Sorting-Based Maximal Spanning Tree Problema", "authors": ["R\u00e9my-Robert Joseph"], "emails": [], "sections": [{"heading": null, "text": "Keywords: Consistency enforcing, Interactive methods, Multiobjective combinatorial optimization, Preferences compact representation, Spanning tree."}, {"heading": "1 INTRODUCTION", "text": "Given an undirected graph G = (V, E) with V the vertices and E the edges, a spanning tree x of G is a connected and acyclic partial graph of G. x is then always composed with |V| \u2212 1 edges. We denote by SST(G) the spanning trees set of G. For short, we write: e \u2208 x, with e \u2208 E, to say: e is an edge of the spanning tree x. More generally, we will assimilate x to its edges set. The classical problem of maximum spanning tree (\u21d4 ST/\u03a3u/OPT) is defined as follow:\nST/\u03a3u/OPT: Given an undirected graph G = (V, E) and a utility u(e) associated with each edge e \u2208 E, the result is a feasible spanning tree x of G, maximizing the sum of utilities of edges in x, if such a tree exists. Otherwise, the result is \u2018no\u2019.\nSeveral consistency problems have been recently investigated on spanning trees. On the one hand, we note the consistency problem associated with feasible spanning trees of a graph [25]. Other investigations pointed out consistency associated with weighted spanning trees [8], and maximum spanning tree [9]. On the other hand, numerous local consistency problems combining classical spanning tree problems with other constraints have been investigated. For example, the diameter constrained minimum spanning tree problem (DCMST) [16].\nWithin non-conventional preferences, the situation is radically different. Very few consistency spanning tree problems have been investigated in literature. We cite a local consistency problem processed for the robust spanning tree problem with interval data (RSTID) [1].\nYet, the most of combinatorial problems from the real practical world require the modeling of imprecision or uncertainty, multiple divergent viewpoints and conflicts management, to wholly assess the solutions and to identify the best compromise ones. These singularities require more complex modeling of preferences [27, 21]. For now some decades, the OR/CP community scrutinizes combinatorial problems enabling non-conventional global preferences. Thus, we attended to the flowering of a great number of publications dealing with multiobjective combinatorial optimization problems (see [10, 3] for surveys). Nevertheless, a very few articles dealt with combinatorial problems with purely ordinal and/or intransitive preferential information. We mention the recent investigations in the scope of (i) decision theory with maximal spanning trees and maximal paths in a digraph [18], (ii) game theory with stable matchings (see [20] for a survey), (iii) algebraic combinatorial optimization [28, 5], or (iv) artificial intelligence with some configuration problems [4, 14] and with heuristic search algorithms [17, 14]. We decide to bring another stone to this building, with the concept of preferential consistency applied to the topological sorting-based maximal spanning trees problem.\nThe decision problematic of finding a suitable preferred solution is semi-structured: in the general case (beyond total preorders), a preferred solution fitted to the decision-maker cannot be only identified from the implemented preferential information. Preferred solutions are not all equivalent, some are partially comparable others are incomparable, and sometimes, there exists no optimal or maximal solution [27, 21]. To investigate these semi-computable problems, we will use the concept of Decision Support System (DSS) to explore the preferred solutions set. This exploration can be achieved other than by building iteratively new preferred solutions \u2013 as usually in multicriteria optimization \u2013; For example, by describing this preferred set with the set of values present in at least one preferred solution. The notion of consistency, defined in Constraint Programming, gathers the theoretical surrounding of this descriptive approach of implicit sets. This is a reactive [26] and deductive approach of solving; In a polynomial number of actions (removings, instantiations and backtrackings), the user leads to a preferred solution.\nConsequently, after an introduction on preference relations (\u00a7 2.1), we make a brief presentation on compact representation of preferences (\u00a7 2.2). We next point out a generalization of the maximum spanning trees problem: the maximal spanning trees problem (\u00a7 3.1). So, we introduce (\u00a7 3.2) preferential consistency,\na Accepted in: Workshop on modeling and solving problems with constraints (ECAI 2008-W31), Patras, Greece, 21 july 2008 : 30-38. * Universit\u00e9 des Antilles et de la Guyane / Institut d'Etudes Sup\u00e9rieures de Guyane, French Guyana, France, e-mail : remy.joseph@caramail.com\ni.e. a template redefining consistency in order to take into account of peculiarities of combinatorial problems exploiting non-conventional preferences, followed by its using on the maximal spanning trees. In general, most of relevant computable problems supporting the initial decision problem are intractable. Accordingly, we point out an easy suitable maximal spanning trees sub-problem (\u00a7 4), based on a compact preference representation inspired by topological sorting (\u00a7 4.1). In \u00a7 4.2, we give an example of using in the multicriteria context and we compare this sub-problem with the Pareto-based multiobjective version. Next, we design a global preferential consistency algorithm (\u00a7 5) dedicated to it. We conclude (\u00a7 6) with some perspectives."}, {"heading": "2 PREREQUISITES IN DECISION THEORY", "text": "Throughout this article, we take place at a very general abstraction level, where global preferences are represented by a non complete, intransitive and even cyclic binary relation on the solutions space, but enabling a maximal set (there exist no solution strictly preferred to any of them). Here are some definitions:"}, {"heading": "2.1 Preference relation", "text": "Given a non-empty finite set S, a (crisp binary) preference relation [23, 27, 21] \u227d of an individual on S is a reflexive binary relation on S (\u21d4 \u227d \u2286 S \u00d7 S and \u2200 x \u2208 S, (x, x) \u2208 \u227d) translating some judgments of this individual concerning his preferences between the alternative elements of S. For every couple of elements x and y of S, the assertion \u00ab x \u227d y \u00bb is equivalent to \u00ab (x, y) \u2208 \u227d \u00bb and means that \u00ab x is at least as good quality as y for considered individual \u00bb. A preference relation \u227d carries out a partition of S \u00d7 S into four fundamental relations:\n(indifference) x \u2243 y \u21d4 ( x \u227d y and y \u227d x ) for all x, y \u2208 S (strict preference) x \u227b y \u21d4 ( x \u227d y and not(y \u227d x) ) for all x, y \u2208 S (strict aversion) x \u227a y \u21d4 y \u227b x for every x, y \u2208 S (incomparability) x \u2225 y \u21d4 ( not(x \u227d y) and not(y \u227d x) ) for every x, y \u2208 S Preference relations defined on a finite set formally correspond\nwith the concept of simple directed graphs (shortly digraphs). Accordingly, the graphical representation of digraphs will allow us to illustrate our investigation. For every non-empty A \u2286 S, the restriction of \u227d to A is the preference relation \u227d|A defined as follow: \u227d|A = {(x, y) \u2208 A \u00d7 A, such that: x \u227d y}. By abuse, we do not specify the restriction, the context enabling to identify the targeted subset of S. A preference relation \u227d is: \u2022 transitive iff [x \u227d y and y \u227d z] \u21d2 x \u227d z, for all x, y, z \u2208 S \u2022 quasi-transitive iff [x \u227b y and y \u227b z] \u21d2 x \u227b z, for all x, y, z \u2208\nS iff the strict preference relation is transitive \u2022 P-acyclic iff \u2200 t > 2 and \u2200 x1, x2, \u2026, xt \u2208 S,\n[x1 \u227b x2 \u227b \u2026 \u227b xt] \u21d2 not(xt \u227b x1) iff \u227d has no circuit of strict preference.\n\u2022 an equivalence relation iff it is reflexive1, symmetric and transitive \u2022 a partial preorder iff it is reflexive and transitive\n1 Mention that a binary relation \u227d is symmetric iff x \u227d y \u21d2 y \u227d x, for all x, y \u2208 S; antisymmetric iff x \u227d y \u21d2 not(y \u227d x), for all x, y \u2208 S with x \u2260 y; and complete (or total) iff x \u227d y or y \u227d x, for all x, y \u2208 S and x \u2260 y.\n\u2022 a complete (or total) preorder iff it is reflexive, transitive and complete \u2022 a complete (or total) order iff it is reflexive, transitive, antisymmetric and complete\nGiven a finite non-empty set S structured by a preference relation \u227d, the maximal set (or efficient set) of S according to \u227d, denoted M(S, \u227d), is the subset of S verifying: M(S, \u227d) = {x \u2208 S | \u2200 y \u2208 S, not(y \u227b x)}; while the optimal set of S according to \u227d, denoted B(S, \u227d), is the subset of S verifying: B(S, \u227d) = {x \u2208 S | \u2200 y \u2208 S, x \u227d y}. Of course, there exists other choices of axioms identifying preferred (i.e. best quality, or best compromise) solutions from a preference relation, and we refer to [11, 24] for a deepening.\nGiven a preference relation \u227d on a finite set S, another preference relation \u227d\u2019 on S is an extension of \u227d if \u2200 x, y \u2208 S, x \u227b y \u21d2 x \u227b\u2019 y. The relation \u227d\u2019 is called a linear extension of \u227d if \u227d\u2019 is an extension of \u227d and \u227d\u2019 is a total order. We have the following result (see [23]): a preference relation \u227d on a finite set S is P-acyclic \u21d4 every non empty subset of S has a non empty maximal set (\u21d4 \u2200 \u2205 \u2260 A \u2286 S, M(A, \u227d) \u2260 \u2205) \u21d4 there exists linear extensions of \u227d and they are obtained by topological sorting."}, {"heading": "2.2 Compact representations of preferences in combinatorial problems", "text": "In combinatorial practical applications, solutions are implicit: described by a set S of elementary components of a set E (\u21d4 S \u2286 P(E)). Then, it is necessary to imagine a compact representation of preferences for their elicitation (acquisition) and their processing; because these operations with an explicit representation \u2013 the listing of the couples x, y \u2208 S such that x \u227d y \u2013 being usually intractable. Thus, in classical combinatorial optimization, the preferences are represented by a utility function u from P(E) to \u211d to maximize: x \u227d y \u21d4 u(x) \u2265 u(y). In multicriteria optimization based on the Pareto dominance, preferences are represented by a vector of utility functions (u1, \u2026, up), aggregated by the Pareto dominance: x \u227d y \u21d4 [\u2200 i \u2208 {1, \u2026, p}, ui(x) \u2265 ui(y)]. This hierarchical aggregation will be noted p\u03a3u>PARETO. And more generally, every aggregation of a family of p utility functions by a rule AR will be noted p\u03a3u>AR. In artificial intelligence, numerous compact representations of preferences appeared: from CP-nets [4, 14] to constraints describing the preferential neighbourhood of the solutions (called preferential constraints in [13]), by going through soft constraints [3, 19] and dynamic CSP [26]. In the following, any compact representation of a preference relation \u227d is denoted I(\u227d). We will present in \u00a7 4.1 the compact representation used here for our maximal spanning trees sub-problem."}, {"heading": "3 PREFERENTIAL CONSISTENCY AND MAXIMAL SPANNING TREES", "text": ""}, {"heading": "3.1 Maximal spanning trees problems", "text": "Consider the problem of finding a satisficing (in the meaning of Newell & Simon [15]) maximal spanning tree. Denoted by\nDS(ST/CBPR/MAX), this semi-structured problem is formulated in the following way:\nDS(ST/CBPR/MAX): Given an undirected graph G = (V, E) and a compact representation I(\u227d) of a preference relation \u227d on P(E), the result is a feasible spanning tree which is: (i) maximal for (SST(G), \u227d), if such a solution exists, and (ii)suited with the system of values of the user. Otherwise, the result is \u2018no\u2019.\nRemark 1. DS and CBPR mean respectively decision support and crisp binary preference relation. The condition (ii) means the user via an interactive process will treat the lack of equivalence and the incompleteness between maximal solutions. This definition of problem involves that the satisficing solution, must be also maximal in (SST(G), \u227d). In other words, the only degree of freedom let to the DSS user is the choice of a suited solution among the maximal ones. This definition refers for example to contexts where preferences have been given by the different actors of the decision problem, next aggregated in global \u2013 possibly incomplete and intransitive \u2013 preferences \u227d on the solutions P(E) via a compact representation I(\u227d); Now, an individual: the user, being able to bring efficiently forgotten preferential information at different times of the decision process, is in charge of finding the suited solution mirroring at best global preferences.\nAt this semi-structured problem is associated the computable problem of finding a maximal spanning tree, denoted ST/CBPR/MAX, the definition of which corresponds with the DS(ST/CBPR/MAX) one, after erasing the property (ii). In such a general framework, these computable problems are hard. To be convinced, it is sufficient to consider the peculiar case where the used compact representation of preferences is the Pareto-based multicriteria one. Hence, the membership problem associated with this multiobjective spanning trees problem is NP-complete [6, 12]."}, {"heading": "3.2 Preferential consistency for maximal spanning trees", "text": "In Constraint Programming [19], consistency is a part of a more general problematic called description. The aim of consistency is the description of the feasible set of a constraint system by way of values or combinations of values belonging to at least one feasible element.\nConsistency problematic can be extended, in the framework of combinatorial problems exploiting non-conventional preferences, so as to take into account of preferential information. Simply, consistency will not rely on feasibility but on best quality or best compromise. Hence, we won\u2019t remove inconsistent values in the meaning that they belong to no feasible solution, but rather because they belong to no preferred solution. In this case, we speak about preferential consistency. Without going into details, problems consisting in erasing preferentially inconsistent values, from a constraint system and a compact representation of a preference relation, are called preferential consistency problems. As in constraint satisfaction, several levels of preferential consistency can be defined, according to whether all or a part of preferentially inconsistent information is deleted. We named global preferential consistency the removing of all the preferentially inconsistent information.\nRemark 2. In a non-conventional preference context, each used choice axiom (e.g. optimality, maximality, domination, \u2026) identifies a specific choice set (optimal set, maximal set, domination set, \u2026) which are generally pairwise different (see \u00a7 2.1). This other parameter specializes preferential consistency. Thus, we speak about OPT-consistency for preferential consistency using optimality as choice axiom, MAX-consistency for preferential consistency using maximality, and so on.\nTo better understand preferential consistency, in the following, we study in details the case of maximal spanning tree problem. Consider then the following general computable problem, of preferential consistency for maximal spanning trees of a graph:\nGPC(ST/CBPR/MAX): Given an undirected graph G = (V, E) and a compact representation I(\u227d) of a preference relation \u227d on P(E), list the edges in E belonging to a maximal spanning tree for \u227d, if such edges exist. Otherwise return \u2018no\u2019.\nAn edge e is called MAX-consistent for (G, I(\u227d)) if there exists at least one maximal spanning tree for (SST(G), \u227d) containing e. Otherwise, it is called MAX-inconsistent for (G, I(\u227d)).\nIn this article, we do not dwell on the computational complexity of this problem. But there are great chances it is at least as difficult as ST/CBPR/MAX, with the sight of investigations in constraint programming [2, 19]. Yet, in order to better appreciate the using of this kind of computable problem in a DSS, we turn towards an efficiently solvable sub-problem of ST/CBPR/MAX."}, {"heading": "4 THE ST/TOSORT-VSMAX/MAX PROBLEM", "text": ""}, {"heading": "4.1 Compact representation and TOSORT-VSMAX condition", "text": "From now, to point out an edges set, for example {a, b}, we adopt the notation ab. Given an undirected graph G = (V, E) and a Pacyclic preference relation \u227dE on E, we consider the binary relation \u227dK on P(E) defined as follow: \u2200 x, y \u2208 P(E), x \u227dK y \u21d4\n\u2203 a linear extension {e1, \u2026, e|E|} of \u227dE on E, verifying: ei \u227bE ej \u21d2 i < j for all 1 \u2264 i, j \u2264 |E|, and for every 1 \u2264 j \u2264 |E|, ej \u2209 x \u21d2 (x \u2229 {e1, \u2026, ej\u20131}) \u222a {ej} contains a cycle\nExample 1. The Figure 1 illustrates the case of a complete undirected graph G on 3 vertices, with a total order \u227dE on E. Then, the binary relation \u227dK verifies (Figure 2), in addition with reflexive 2 To avoid surcharges of the graphical representation, the reflexive arcs\nare not drawn.\narcs, that: A \u227bK B, for every A \u2208 M = {ab, abc} and B \u2208 P(E) \\ M, because the only linear extension of \u227dE is itself.\nThe Figure 3 considers an undirected graph G = (V, E), with V = {\u03b1, \u03b2, \u03b3, \u03b4} and E = {a, b, c, d, h}; and a P-acyclic relation \u227dE on the edges set E of G verifying, in addition of reflexive arcs: a \u227bE h, c \u227bE b, c \u227bE d, d \u227bE b, h \u227bE b, c \u2243E h, d \u2243E h.\nThen, the binary relation \u227dK establishes a bipartition {M, P(E) \\ M} of P(E) with M = {x \u2208 P(E) such that: acd \u2286 x or ach \u2286 x} and satisfies the following relations: \u2200 (A, B) \u2208 M \u00d7 (P(E) \\ M), A \u227bK B and \u2200 (A1, A2) \u2208 M \u00d7 M, A1 \u2243K A2.\nDefinition 1. A preference relation \u227d on P(E) is called TOSORTVSMAX for the couple (G, \u227dE) iff: \u2200 (x, y) \u2208 SST(G) \u00d7 SST(G) with x \u2260 y,\n   \u21d2\u2248 \u21d4\u21d2 yxyxyx yxyx ||or ) ofextension an is relation the( K K \nRemark 3. The word TOSORT in the notation TOSORT-VSMAX points out the relation \u227dK: the relation \u227dE can be topologically sorted \u21d4 the relation \u227dE is P-acyclic \u21d4 there exists a non-empty maximal set of edges for every non-empty edges subset of E \u21d4 there exist total orders extending \u227dE. And the second word VSMAX points out both conditions of this definition \u2013 the extension condition and the translation of the indifference of \u227dK into indifference and incomparability of \u227d \u2013 which define a very strong version of maximality.\nExample 2. The Figure 4 illustrates a preference relation on P(E) satisfying TOSORT-VSMAX for the couple (G, \u227dE) of Figure 1. This illustration shows a TOSORT-VSMAX relation may include strict preference circuits.\nFor the Figure 3, the feasible spanning trees set is SST(G) = {abd, abh, acd, ach, adh, bcd, bch, bdh}; Accordingly, every TOSORTVSMAX preference relation \u227d on P(E) satisfies:\n   \u00d7\u2208\u2200 leincomparabor t indiffereneither are and ,\\)(},{),( ST achacd yxGSachacdyx M .\nThe preference relation \u227dE on E is called the compact representation of the TOSORT-VSMAX relation \u227d on P(E). Here are some properties:\nProperties 1. Given a couple (G, \u227dE) made up an undirected graph G = (V, E) and a P-acyclic relation \u227dE on the edges set E, then: (a) Every TOSORT-VSMAX preference relation for (G, \u227dE) identifies the same maximal set as the relation \u227dK induced by \u227dE. (b) The existence of feasible spanning trees warranties the existence of a non empty maximal set for (SST(G), \u227dK). The proof is immediate. The relation \u227dK is the minimum information to know in order to identify the maximal set of TOSORT-VSMAX preference relations. Now, we consider the following sub-problem of ST/CBPR/MAX:\nST/TOSORT-VSMAX/MAX: Given an undirected graph G = (V, E) and a compact representation \u227dE of a TOSORT-VSMAX preference relation \u227d on P(E), return a maximal spanning tree for \u227d, if such a solution exists. Otherwise return \u2018no\u2019.\nWe denote SST/TV/MAX(G, \u227dE) the set of possible maximal spanning trees outputted by an algorithm solving this problem.\nTheorem 1. The ST/TOSORT-VSMAX/MAX problem can be solved in a polynomial time in the input size (G, \u227dE).\nSketch of Proof: One algorithm consists in elaborating a linear extension {e1, \u2026, e|E|} of \u227dE on E (\u21d4 the TOPOLOGICAL SORT problem3 [7, 22]); Next in assigning a utility u(e) to each edge e of E in order to satisfy the following condition: u(ei) > u(ei+1), 1 \u2264 i \u2264 |E| \u2013 1; for example, u(ei) = |E| \u2013 i. And, at last in solving the classic spanning tree problem (\u21d4 ST/\u03a3u/OPT) with the instance (G, u). The resulting\n3 In the rest of this article, we will have to use a particular algorithm solving this problem. We will consider the following one: increasingly and greedily number the maximal edges among the not yet numbered edges of E. The designed list of edges is then a linear extension of \u227dE.\n\u2243 \u227dK \u2243K\n\u227d\nmaximum spanning tree is then also a maximal solution for ST/TOSORT-VSMAX/MAX. "}, {"heading": "4.2 Multiobjective spanning tree problems based on topological sorting", "text": "Now we confront this problem to the classical maximum spanning tree problem, and its Pareto-based multiobjective version.\nExample 3. The classical problem of maximum spanning tree (\u21d4 ST/\u03a3u/OPT) can be polynomially transformed into the ST/TOSORTVSMAX/MAX problem. Indeed, for any spanning tree x of G, the sum of utilities of edges in x defines a total preorder \u227du on P(E):\n\u2200 (x, y) \u2208 P(E)\u00b2, x \u227du y \u21d4 \u2211 e\u2208x ue\u2265\u2211 e\u2208 y ue \nThe relation \u227du is TOSORT-VSMAX, and its compact representation \u227duE is the preorder induced by u: \u2200 e, e\u2019 \u2208 E, e \u227duE e\u2019 \u21d4 u(e) \u2265 u(e\u2019). The couple (G, \u227duE) is then an instance of ST/TOSORT-VSMAX/MAX, and its solution set SST/TV/MAX(G, \u227duE) = B(SST(G), \u227du). This assertion is easily provable by erasing the topological sorting part of the sketch of proof of Theorem 1.\nThe ST/TOSORT-VSMAX/MAX problem can be used to model and solve multicriteria problems. So, the multi-attribute utility function can be aggregated first to produce global preferences on the edges, and next to partially rank sets of edges. Here is an example:\nExample 4. The ST/PARETO>TOSORT-VSMAX/MAX problem considers an undirected graph G = (V, E) and a couple (p, u) made up a positive number p and a multi-attribute utility function u from E \u00d7 {1, ..., p} to \u211d. p is the number of considered criteria and u(e, k) is the utility of the edge e according to the criterion k. In this problem, the preference information (p, u) is aggregated with Pareto dominance, in order to define a global preference relation \u227dEP on each edge:\n\u2200 e, e\u2019 \u2208 E, e \u227dEP e\u2019 \u21d4 for every 1 \u2264 k \u2264 p, u(e, k) \u2265 u(e\u2019, k) Next, this preference relation on the edges is aggregated with the \u227dK relation, to obtain a collective opinion \u227dPK between the subsets of E.\nThen we consider the instance (G, (2, u)) made up the undirected graph G = (V, E) of the Figure 3, and the bicriteria utility function u given by the following table:\nBy aggregating u with the Pareto dominance, we obtain the preference relation \u227dEP on E given by the Figure 5. At last, by solving the ST/TOSORT-VSMAX/MAX problem on this instance (G, \u227dEP), we get the maximal set M(SST(G), \u227dPK) = {abd, abh, acd, ach, bcd, bch}\nRemark 4. Instead of using the Pareto dominance to obtain the global preference relation \u227dEP on the edges, we can apply any aggregation rule AR on u. The only condition on AR is to provide a preference relation \u227dEP having at least the P-acyclicity property.\nIn the multicriteria decision-making community [10], the multiattribute utility function u(e, k), with (e, k) \u2208 E \u00d7 {1, ..., p}, is usually aggregated with a simple sum per criterion, to produce a family of p individual utilities on the powerset of edges. Next, this family is aggregated, generally with the Pareto dominance, into a global preference, noted in this case \u227d\n\u03a3P , on the sets of edges.\nExample 5. By running an algorithm solving the ST/p\u03a3u>PARETO/ MAX problem on the instance (G, (2, u)) described in the Example 4, we obtain the maximal set M(SST(G), \u227d\u03a3P) = {abh, acd, ach, bcd, bch}, which is strictly included in M(SST(G), \u227dPK).\nThe following theorem describes the relationship between the classical hierarchical aggregation p\u03a3u>PARETO and ours PARETO>TOSORT-VSMAX:\nTheorem 2. Given an undirected graph G = (V, E), and a couple (p, u) made up a positive number p and a multi-attribute utility function u from E \u00d7 {1, ..., p} to \u211d; then every maximal solution for ST/p\u03a3u>PARETO/MAX is also a maximal solution for ST/PARETO>TOSORTVSMAX/MAX. Formally:\n\u2200 x \u2208 SST(G), x \u2208 M(SST(G), \u227d\u03a3P) \u21d2 x \u2208 M(SST(G), \u227dPK) (1)\nBefore showing this theorem, here is a lemma which describes a property of the relation \u227dK:\nLemma 1. Given a couple (G = (V, E), \u227dE) and an element x \u2208 P(E), then the relation \u227dK is transitive and: \u2203 y \u2208 P(E) such that x \u227dK y \u21d4 x is optimal in (P(E), \u227dK) \u21d4 x is maximal in (P(E), \u227dK) Moreover, if x \u2208 SST(G), then: \u2203 y \u2208 SST(G) such that x \u227dK y \u21d4 x is optimal in (SST(G), \u227dK)\n\u21d4 x is maximal in (SST(G), \u227dK)\nProof: The demonstration of the optimality (first equivalence) is immediate. What about maximality (second equivalence)? If x is optimal, then x is maximal. Now, what about the contrary case ? If x is maximal in (P(E), \u227dK) then, there 2 cases: If there exists a z such that x \u227dK y, then x is optimal according to the first equivalence. Otherwise (\u21d4 if such a z does not exist), then \u2200 w \u2208 P(E), x \u2225K w \u21d4 \u2200 w \u2208 P(E), not(x \u227dK w) and not(w \u227dK x). Consequently, there is no optimal element in (P(E), \u227dK). This assertion is equivalent to say that for every linear extension {e1, \u2026, e|E|} of \u227dE on E, and for every subset z of E, there exists a 1 \u2264 j \u2264 |E| verifying that: ej \u2209 x and (x \u2229 {e1, \u2026, ej\u20131}) \u222a {ej} is acyclic. This is possible, if and only if (V, E) is a tree and E is not in P(E). This is a contradiction.\nHence, at last, x is optimal in (P(E), \u227dK) \u21d4 x is maximal in (P(E), \u227dK). The transitivity of \u227dK is a direct consequence of the first equivalence. Next, both the last equivalences are true because (P(E), \u227dK) verifies the Arrow choice axiom [23]: For any A, B \u2208 P(E) and A \u2286 B,\nIf B(B, \u227dK) \u2229 A \u2260 \u2205 then B(B, \u227dK) \u2229 A = B(A, \u227dK) (every restriction of P(E) conserves the optimality). \nProof (Theorem 2): First of all, both the following assertions are false: (a) \u2200 x, y \u2208 SST(G), x \u227dPK y \u21d2 x \u227d\u03a3P y (b) \u2200 x, y \u2208 SST(G), x \u227d\u03a3P y \u21d2 x \u227dPK y\nIndeed, for the assertion (a), it is sufficient to take the undirected graph of Figure 3, with the bicriteria utility function of Table 1.\nThe assertion (b) is false because PK only carries out the dichotomy between the maximal set and its complementary. So, the preferences between two non maximal elements are unknown.\nWe prove now the formulae (1). So, we reason by contradiction: Suppose there exists an x \u2208 SST(G) maximal for \u227d\u03a3P, but not for \u227dPK. This proposition is equivalent with the following one, according to Lemma 1: \u2203 x \u2208 SST(G) such that: [\u2200 y \u2208 SST(G), not(y \u227b\u03a3P x)] and [\u2200 y \u2208 SST(G), not(x \u227dPK y)] By definition, not(x \u227dPK y) \u21d4 \u2203 e1 \u2208 E \\ x, and \u2203 e2 \u2208 L(x \u222a {e1}) verifying e1 \u227bEP e2. Now, if we take the spanning tree y defined as follow: y = x \u222a {e1} \\ {e2}, then we have, because of the definition of e1 \u227bEP e2:\n\u2200 1 \u2264 i \u2264 p, ),(),(),(),( 2 }{\\ 1 }{\\ 11 ieuieuieuieu exeexe +\u2264+ \u2211\u2211 \u2208\u2208 , and\n\u2203 1 \u2264 k \u2264 p, ),(),(),(),( 2 }{\\ 1 }{\\ 11 keukeukeukeu exeexe +<+ \u2211\u2211 \u2208\u2208 .\n\u21d4 y \u227b\u03a3P x. This contradicts the maximality of x in (SST(G), \u227d\u03a3P). Hence the result. \nIn the following, we propose an algorithm solving: GPC(ST/TOSORT-VSMAX/MAX), the global preferential consistency problem associated with ST/TOSORT-VSMAX/MAX."}, {"heading": "5 GLOBAL PREFERENTIAL CONSISTENCY AND TOSORT-VSMAX", "text": "Instead of either listing all the maximal spanning trees, or finding such one tree, we will point out the removing of edges belonging to no maximal spanning tree. Especially here, we are interested in GPC(ST/TOSORT-VSMAX/MAX). Here is its definition:\nGPC(ST/TOSORT-VSMAX/MAX): Let G = (V, E) be an undirected graph and \u227dE be a P-acyclic preference relation on E representing a TOSORT-VSMAX preference relation \u227d on P(E). Return all the edges of E belonging to a maximal spanning tree for \u227d, if such edges exist. Otherwise return \u2018no\u2019.\nDenote SGPC(ST/TV/MAX)(G, \u227dE) \u2286 E, the edges set outputted by an algorithm solving this problem. Then, by definition, we have the following equality:\nSGPC(ST/TV/MAX)(G, \u227dE) =  ),(ST/TV/MAX EGSx x \u2265\u2208 . (2)\nThis equality is equivalent to the conjunction of the following assertions: (a) for all e \u2208 SGPC(ST/TV/MAX)(G, \u227dE) \u2286 E, there exists x \u2208\nSST/TV/MAX(G, \u227dE) \u2286 P(E), such that: e \u2208 x. (b) for all x \u2208 SST/TV/MAX(G, \u227dE) \u2286 P(E), x \u2286 SGPC(ST/TV/MAX)(G, \u227dE).\nThe Figure 6 presents an algorithm solving this preferential consistency problem.\nThis algorithm supposes we know: \u2212 Another algorithm NBCONNECTEDCOMPONENTS solving the counting\nproblem of the connected components in an undirected graph. This problem is known solvable in a linear time (by a depth first search algorithm) for any given undirected graph (see e.g. [22, \u00a7 6.3 p. 90]). \u2212 A choice strategy CHOOSE outputting an element of the input explicit set in the non-empty case. Otherwise, return \u2018no\u2019.\nExample 6. By running GPCORDINALSTMAX1 on the instance given in Figure 1 and Figure 3, we obtain as result the respective edges sets {a, b} and E \\ {b}.\nWe denote |(G, \u227dE)| the size of the instance (G, \u227dE) of ST/TOSORT-VSMAX/MAX. This size can be formulated in terms of the vertices set cardinality m = |V| of graph G, the number of edges n = |E| in G, and the number of arcs p = |\u227dE| in (E, \u227dE): Hence, |(G, \u227dE)| is in O(m + n + p). Now, we remark that 0 \u2264 n \u2264 m\u00b2 and 0 \u2264 p \u2264 n\u00b2. Hence, |(G, \u227dE)| is in O(m4). We have the following results:\nProperty 2. The algorithm GPCORDINALSTMAX1 has a worst case time complexity, which is linear in the size of the input (G, \u227dE).\nProof: It is simply sufficient to see that an order of magnitude for the worst case time complexity of this algorithm GPCORDINALSTMAX1 only depends on the second loop (lines 5 to 10). The algorithm\nNBCONNECTEDCOMPONENTS , solving the counting connected components problem in time linear in the size of its instance (a partial graph of G), is then in O(m + n). Consequently, the worst case time complexity of the conditional instruction \u2018if \u2026end if\u2019 (line 9) is about m + n. It is similar for: \u2212 line 6, where the choice strategy necessitates a greedy search of\nmaximal edge, solvable in the worst case in O(n) \u2212 line 8, where the maximum number of possible unions is about\ncardinality of E, i.e. in O(n). At last, the body of the 2nd loop runs in the worst case in O(m + n) times. Now, the number of loops is equal to the number of edges; and proves that the complexity of the algorithm GPCORDINALSTMAX1 is in O((m + n)\u22c5n) \u2248 O(m4), i.e. linear in the input size |(G, \u227dE)|. \nTheorem 3 The algorithm GPCORDINALSTMAX1 returns the whole MAX-consistent edges (and only them) for maximal spanning trees of the ST/TOSORT-VSMAX/MAX problem, from an instance ((V, E), \u227dE), if such trees exist. Otherwise returns \u2018no\u2019.\nThe logic underlying this algorithm consists in putting an edge e \u2208 E in a best scenario of choice, in order to elaborate a linear extension of \u227dE (= the minimal number assigned to e among the linear extensions). Such a best scenario consists in choosing e as soon as possible, during the topological sort. For that, the topological sorting algorithm has to number every better edge e\u2019 than e for \u227dE; next the edge e\u2019 is numbered iff every better edge than e\u2019 is numbered, and so on. In the best case, when e is numbered, if the number of connected components decreases when we add e to the already numbered edges, then e can be chosen to belong to a maximal spanning tree for a TOSORT-VSMAX preference relation. Indeed, this best scenario may then be completed in a maximal spanning tree, by iteratively choosing any maximal remaining edge.\nBefore showing this theorem, here is a lemma which will help us in the demonstration.\nLemma 2. Given an instance (G, \u227dE), with \u227dE P-acyclic, denote C(e) the edges of E for which there exists a path of strict preferences towards e: C(e) = {f \u2208 E such that: \u2203 f (1), \u2026, f (p) \u2208 E, with p \u2265 0, and f \u227bE f (1) \u227bE \u2026 \u227bE f (p) \u227bE e}. Then, for every A \u2286 E, C(e) \\ A \u2260 \u2205 \u21d2 M(C(e) \\ A, \u227dE) \u2286 M(E \\ A,\u227dE)\nProof: First of all, let us clarify the set E \\ C(e): E \\ C(e) = {f \u2208 E such that: There exists no path of strict prefer-\nences from f to e in (E, \u227dE)} = {f \u2208 E such that: There is no path of strict preferences\nfrom f to e1 in (E, \u227dE), \u2200 e1 \u2208 C(e)}. Indeed, if such a path existed from f to e1, and \u2013 by definition of C(e) \u2013 from e1 to e, then there would exist a path of strict preferences from f to e.\nShow now lemma: Suppose that C(e) \\ A \u2260 \u2205. Then every edge f \u2208 M(C(e) \\ A, \u227dE) verifies: \u2200 f1 \u2208 C(e) \\ A, not(f1 \u227bE f)\n\u21d2 There exists no path of strict preferences from f1 to f in (C(e) \\ A, \u227dE).\nHence, if some edges are added to C(e) \\ A \u2013 in this case E \\ (C(e) \u222a A) \u2013 for which there exists no path of strict preferences from f2 \u2208 E \\ (C(e) \u222a A) to e1 \u2208 C(e) \\ A, then it won\u2019t also exist a path from f2 to f. At last, \u2200 f \u2208 M(C(e) \\ A, \u227dE), \u2200 f1 \u2208 E \\ A, not(f1 \u227bE f). This shows lemma. \nProof (Theorem 3): Firstly, we have the following equivalence, because of the Properties 1 (b) translated by the first line of the algorithm: GPCORDINALSTMAX1(G, \u227dE) = \u2018no\u2019 \u21d4 SST(G) = \u2205. Then point out on the first part of the proposition: Suppose GPCORDINALSTMAX1(G, \u227dE) \u2260 \u2018no\u2019, and show \u2013 by help of Lemma 2 \u2013 formulae (2):\nGPCORDINALSTMAX1(G, \u227dE) =  ),(ST/TV/MAX EGSx x \u2265\u2208 .\nDirect inclusion: For any e \u2208 GPCORDINALSTMAX1(G, \u227dE) \u2286 E, there exists x \u2208 SST/TV/MAX(G, \u227dE) \u2286 P(E), such that: e \u2208 x. Indeed, such an x can be designed by using the strategy described in the previous remark with a topological sort of (E, \u227dE). So, as long as we are not at an iteration k such that e is maximal in the set Bk of not yet numbered edges, then, during iterations i < k, the choice strategy consists in taking as current edge ei a maximal edge for (C(e) \\ (E \\ Bi), \u227dE), with C(e) \\ (E \\ Bi) \u2286 Bi. According to the above lemma, M(C(e) \\ (E \\ Bi), \u227dE) \u2286 M(Bi,\u227dE). Therefore, this strategy is available, and the iteration k = |C(e)|. During the iteration k, given e decreases the number of connected components in C(e) \u2013 because e is in GPCORDINALSTMAX1(G, \u227dE) and then verifies the condition of line 9 in GPCORDINALSTMAX1 \u2013, then e is chosen to be added to Ak\u20131, the current tree. Next, during iterations i > k, the topological sort algorithm takes as current edge, any edge of M(Bi,\u227dE). At last, the elaborated linear extension can be associated to a utility function (see sketch of proof of Theorem 1) and next used as instance of an algorithm solving ST/\u03a3u/OPT, which necessarily returns a solution x \u2260 \u2018non\u2019, containing e and then maximal for (G, \u227dE).\nConverse inclusion: For every x \u2208 SST/TV/MAX(G, \u227dE) \u2286 P(E), x \u2286 SGPC(ST/TV/MAX)(G, \u227dE). Indeed, reason by contradiction. Suppose that:\n\u2203 x \u2208 SST/TV/MAX(G, \u227dE) and x \u2284 SGPC(ST/TV/MAX)(G, \u227dE). \u21d4 \u2203 e \u2209 SGPC(ST/TV/MAX)(G, \u227dE) although: e \u2208 x, and x \u2208\nSST/TV/MAX(G, \u227dE). \u21d4 The number of connected components does not decrease if we\nadd e in C(e), according to line 9 of GPCORDINALSTMAX1 \u21d4 \u03a4here exists in C(e) an undirected path L(e) between both the\nends of e.\nSo that e should be chosen during the design of x, because e \u2208 x, it is necessary that e be maximal at an iteration k \u2264 |E|, if we use the Kruskal\u2019s algorithm to solve ST/TO-SORT-VSMAX/MAX. At this iteration, e \u2208 Ak, the tree at iteration k, and e decreases the number of connected components in Ak\u20131. If e \u2208 M(E, \u227dE), then e \u2208 SGPC(ST/TV/MAX)(G, \u227dE), this is a contradiction with the initial assumption. Accordingly, C(e) \u2260 \u2205. Moreover, every edge of C(e) has already been chosen in the scenario of the topological sort algorithm during iterations i < k, in order that e be maximal during the iteration k. It is sure that C(e) \u2288 x because it would exist an undirected path L(e) \u222a {e} in x; that is contradictory with x is a tree. Hence C(e) \\ x \u2260 \u2205. And for every f \u2208 C(e) \\ x, f has not been added to x because during the iteration i < k where it has been chosen, there already exists an undirected path L(f) in Ai \u2286 x between the ends of f.\nNow, the edge set (C(e) \u2229 x) \u222a         \u2208  xeCf fL \\)( )( is an undirected\npath (or contains such a path) in x between the ends of e, making up with e an undirected path in x (see Figure 7). This contradicts the assumption x is a tree. That demonstrates the converse inclusion. "}, {"heading": "6 CONCLUSION AND PERSPECTIVES", "text": "One of the limits, devolved upon decision processes based on listing of preferred solutions suggested by Perny & Spanjaard [18] to solve ordinal combinatorial problems, was the intractability of large size inputs. We introduced another kind of computable problems, preferential consistency ones. Their outputs can be processed in real-time by a human being (i.e. linear in the input size). These computable problems are based both on the notion of consistency pointing out by constraint programming (CP), and on the notion of choice investigated in decision aiding (DA). In the case of maximal spanning trees problems satisfying the TOSORT-VSMAX condition, we proposed an algorithm solving the global consistency problem, with a linear worst case time complexity in its input size.\nOne of the aims of this article is to bring together the CP and OR-DA communities, to process more efficiently combinatorial problems exploiting complex preferences. Their mutual contributions open a new way of interactive solving of semi-structured combinatorial problems. Consequently, the perspectives are numerous: At first, with preferential consistency: Global preferential consistency can be used in an interactive decision process, where the user makes some local decisions (choice), and where the DSS is restricted to remove preferential inconsistent domain-values. However, such support systems may not always warrant a preferred solution for the initial instance. Consequently, we have explored this way, for example by identifying domain-values which are in all preferred solutions or, by investigating rational choice theory [23] to identify some sufficient properties so that the decision process always returns a preferred solution for the initial instance, if such a solution exists. Next, with efficient spanning trees problems and the particular compact representation of preferences used in this article: We have been scrutinizing the concept of expressive power of a compact representation. Any kind of compact representations models only a subset of preference relations. For example, utility functions model\nonly total preorders. In order to better understand the type of compact representation used in this article, we focus our researches on its expressive power for spanning trees problems. At last, with applications: What makes a good theory, it is its applicability to real world problems. The possible applications are numerous. And at this time, we work on an autonomous electrical network designing problem allowing several \u2013 not necessary cardinal \u2013 criteria. Shortly, these problems arise in isolated regions as some Pacific islands or in remote villages in rainforest. The isolation of these populations implies that the continuous supply of fossil fuels is very expensive to the community, and exorbitantly expensive if you wanted to connect to an existing electricity grid. Renewable energies form a more interesting both in terms of costs (a barrel of oil more and more expensive, and means of delivery prohibitive as boat (sometimes pirogue), helicopter or plane), in terms of noise and soil pollution, etc. These problems necessitate very complex preferential information as inhabitants opinions, cost, environmental and aesthetic criteria."}], "references": [{"title": "A Constraint Satisfaction Approach to the Robust Spanning Tree Problem with Interval Data", "author": ["I.D. Aron", "P. van Hentenryck"], "venue": "In: 18th Conference on Uncertainty in Artificial Intelligence,", "citeRegEx": "1", "shortCiteRegEx": "1", "year": 2002}, {"title": "The Complexity of Reasoning with Global Constraints", "author": ["C. Bessi\u00e8re", "E. Hebrard", "B. Hnich", "T. Walsh"], "venue": "Constraints 12 (2), 239\u2013259, ", "citeRegEx": "2", "shortCiteRegEx": null, "year": 2007}, {"title": "Semiring-Based CSPs and Valued CSPs: Frameworks", "author": ["S. Bistarelli", "U. Montanari", "F. Rossi", "T. Schiex", "G. Verfaillie", "H. Fargier"], "venue": "properties, and comparison, Constraints 4, 199\u2013240, ", "citeRegEx": "3", "shortCiteRegEx": null, "year": 1999}, {"title": "Preference-Based Constrained Optimization with Cp-nets", "author": ["C. Boutilier", "R.I. Brafman", "C. Domshlak", "H.H. Hoos", "D. Poole"], "venue": "Computational Intelligence 20, 137\u2013157 ", "citeRegEx": "4", "shortCiteRegEx": null, "year": 2004}, {"title": "The Complexity of Multi- Constrained Spanning Tree Problems", "author": ["P.M. Camerini", "G. Galbiati", "F. Maffioli"], "venue": "in: Theory of Algorithms, Colloquium Pecs, 53\u2013101 ", "citeRegEx": "6", "shortCiteRegEx": null, "year": 1984}, {"title": "Introduction to Algorithms", "author": ["T.H. Cormen", "C.E. Leiserson", "R.L. Rivest"], "venue": "MIT Press and McGraw-Hill. Second Edition, Section 22.4: Topological Sort: 549\u2013552 ", "citeRegEx": "7", "shortCiteRegEx": null, "year": 2001}, {"title": "Graph Constraints in Constraint Programming: Weighted spanning trees", "author": ["G. Dooms", "I. Katriel"], "venue": "INGI research report 2006-01, UCL, Belgium ", "citeRegEx": "8", "shortCiteRegEx": null, "year": 2006}, {"title": "The Minimum Spanning Tree Constraint", "author": ["G. Dooms", "I. Katriel"], "venue": "in: 12 International Conference on Principles and Practice of Constraint Programming, Nantes, France ", "citeRegEx": "9", "shortCiteRegEx": null, "year": 2006}, {"title": "An Annotated Bibliography of Multiobjective Combinatorial Optimisation", "author": ["M. Ehrgott", "X. Gandibleux"], "venue": "Research Report n\u00b062/2000, Kaiserslautern University, Germany; reprinted in OR Spektrum 22, 425\u2013460 ", "citeRegEx": "10", "shortCiteRegEx": null, "year": 2000}, {"title": "Topics on Domination in Directed Graphs", "author": ["J. Ghoshal", "R. Laskar", "D. Pillone"], "venue": "in: T. Haynes, S. Hedetniemi and P. J. Slater, Domination in Graphs. Advanced topics, coll. Monographs and textbooks in pure and applied mathematics, vol. 209, chapter 15: 401\u2013437, Marcel Dekker, New York ", "citeRegEx": "11", "shortCiteRegEx": null, "year": 1998}, {"title": "On Spanning Tree Problems with Multiple Objectives", "author": ["H.W. Hamacher", "G. Ruhe"], "venue": "Annals of Operations Research 52, 209\u2013230 ", "citeRegEx": "12", "shortCiteRegEx": null, "year": 1994}, {"title": "Decision-Support with Preference Constraints", "author": ["R.-R. Joseph", "P. Chan", "M. Hiroux", "G. Weil"], "venue": "European Journal of Operation Research 177 (3), 1469\u20131494 ", "citeRegEx": "13", "shortCiteRegEx": null, "year": 2007}, {"title": "Preference-Based Problem Solving for Constraint Programming", "author": ["U. Junker"], "venue": "in: G. Bosi, R. I. Brafman, J. Chomicki and W. Kie\u00dfling (eds.), Preferences 2004: Specification, inference, applications, Dagstuhl seminar proceedings, Schloss Dagstuhl, Germany ", "citeRegEx": "14", "shortCiteRegEx": null, "year": 2006}, {"title": "Human Problem Solving", "author": ["A. Newell", "H.A. Simon"], "venue": "Englewood Cliffs, NJ, Prentice-Hall ", "citeRegEx": "15", "shortCiteRegEx": null, "year": 1972}, {"title": "Constraint Programming for the Diameter Constrained Minimum Spanning Tree Problem, Electronic Notes in Discrete Mathematics", "author": ["T.F. Noronha", "A.C. dos Santos", "C.C. Ribeiro"], "venue": null, "citeRegEx": "16", "shortCiteRegEx": "16", "year": 2007}, {"title": "Preference-Based Search in State Space Graphs", "author": ["P. Perny", "O. Spanjaard"], "venue": "Proceedings of the AAAI'2002 Conference, Edmonton, Canada 751\u2013756 ", "citeRegEx": "17", "shortCiteRegEx": null, "year": 2002}, {"title": "A Preference-Based Approach to Spanning Trees and Shortest Paths Problems", "author": ["P. Perny", "O. Spanjaard"], "venue": "European Journal of Operational Research 162, 584\u2013601 ", "citeRegEx": "18", "shortCiteRegEx": null, "year": 2005}, {"title": "P", "author": ["F. Rossi"], "venue": "van Beek and T. Walsh, Hanbook of Constraint Programming, Foundations of Artificial Intelligence series, Elsevier ", "citeRegEx": "19", "shortCiteRegEx": null, "year": 2006}, {"title": "The Two-Sided Matching", "author": ["A. Roth", "M. Sotomayor"], "venue": "Cambridge University Press, Cambridge ", "citeRegEx": "20", "shortCiteRegEx": null, "year": 1990}, {"title": "Aide Multicrit\u00e8re \u00e0 la D\u00e9cision: M\u00e9thodes et cas", "author": ["B. Roy", "D. Bouyssou"], "venue": "Economica, series \u201cGestion\u201d, Paris ", "citeRegEx": "21", "shortCiteRegEx": null, "year": 1993}, {"title": "Combinatorial Optimization: Polyhedra and Efficiency", "author": ["A. Schrijver"], "venue": "Series in algorithms and combinatorics vol. 24, Springer Verlag Publication, Chichester ", "citeRegEx": "22", "shortCiteRegEx": null, "year": 2003}, {"title": "Collective Choice and Social Welfare", "author": ["A.K. Sen"], "venue": "coll. Advanced textbooks in economics, vol. 11, Elsevier Science Publishers, Netherlands ", "citeRegEx": "23", "shortCiteRegEx": null, "year": 1970}, {"title": "Choice Functions: Rationality Re-examined", "author": ["B. Subiza", "J.E. Peris"], "venue": "Theory and Decision 48, 287\u2013304 ", "citeRegEx": "24", "shortCiteRegEx": null, "year": 2000}, {"title": "Rooted Tree and Spanning Tree Constraints", "author": ["C. Unsworth", "P. Prosser"], "venue": "17th ECAI Workshop on Modelling and Solving Problems with Constraints ", "citeRegEx": "25", "shortCiteRegEx": null, "year": 2006}, {"title": "Constraint Solving in Uncertain and Dynamic Environments: a Survey", "author": ["G. Verfaillie", "N. Jussien"], "venue": "Constraints 10 (3), 253\u2013281 ", "citeRegEx": "26", "shortCiteRegEx": null, "year": 2005}, {"title": "Multicriteria Decision Aid", "author": ["P. Vincke"], "venue": "John Wiley & Sons ", "citeRegEx": "27", "shortCiteRegEx": null, "year": 1992}, {"title": "Linear and Combinatorial Optimization in Ordered Algebraic Structures", "author": ["U. Zimmerman"], "venue": "Series in Annals of Discrete Mathematics n\u00b010, North-Holland, Amsterdam ", "citeRegEx": "28", "shortCiteRegEx": null, "year": 1981}], "referenceMentions": [{"referenceID": 23, "context": "On the one hand, we note the consistency problem associated with feasible spanning trees of a graph [25].", "startOffset": 100, "endOffset": 104}, {"referenceID": 6, "context": "Other investigations pointed out consistency associated with weighted spanning trees [8], and maximum spanning tree [9].", "startOffset": 85, "endOffset": 88}, {"referenceID": 7, "context": "Other investigations pointed out consistency associated with weighted spanning trees [8], and maximum spanning tree [9].", "startOffset": 116, "endOffset": 119}, {"referenceID": 14, "context": "For example, the diameter constrained minimum spanning tree problem (DCMST) [16].", "startOffset": 76, "endOffset": 80}, {"referenceID": 0, "context": "We cite a local consistency problem processed for the robust spanning tree problem with interval data (RSTID) [1].", "startOffset": 110, "endOffset": 113}, {"referenceID": 25, "context": "These singularities require more complex modeling of preferences [27, 21].", "startOffset": 65, "endOffset": 73}, {"referenceID": 19, "context": "These singularities require more complex modeling of preferences [27, 21].", "startOffset": 65, "endOffset": 73}, {"referenceID": 8, "context": "Thus, we attended to the flowering of a great number of publications dealing with multiobjective combinatorial optimization problems (see [10, 3] for surveys).", "startOffset": 138, "endOffset": 145}, {"referenceID": 2, "context": "Thus, we attended to the flowering of a great number of publications dealing with multiobjective combinatorial optimization problems (see [10, 3] for surveys).", "startOffset": 138, "endOffset": 145}, {"referenceID": 16, "context": "We mention the recent investigations in the scope of (i) decision theory with maximal spanning trees and maximal paths in a digraph [18], (ii) game theory with stable matchings (see [20] for a survey), (iii) algebraic combinatorial optimization [28, 5], or (iv) artificial intelligence with some configuration problems [4, 14] and with heuristic search algorithms [17, 14].", "startOffset": 132, "endOffset": 136}, {"referenceID": 18, "context": "We mention the recent investigations in the scope of (i) decision theory with maximal spanning trees and maximal paths in a digraph [18], (ii) game theory with stable matchings (see [20] for a survey), (iii) algebraic combinatorial optimization [28, 5], or (iv) artificial intelligence with some configuration problems [4, 14] and with heuristic search algorithms [17, 14].", "startOffset": 182, "endOffset": 186}, {"referenceID": 26, "context": "We mention the recent investigations in the scope of (i) decision theory with maximal spanning trees and maximal paths in a digraph [18], (ii) game theory with stable matchings (see [20] for a survey), (iii) algebraic combinatorial optimization [28, 5], or (iv) artificial intelligence with some configuration problems [4, 14] and with heuristic search algorithms [17, 14].", "startOffset": 245, "endOffset": 252}, {"referenceID": 3, "context": "We mention the recent investigations in the scope of (i) decision theory with maximal spanning trees and maximal paths in a digraph [18], (ii) game theory with stable matchings (see [20] for a survey), (iii) algebraic combinatorial optimization [28, 5], or (iv) artificial intelligence with some configuration problems [4, 14] and with heuristic search algorithms [17, 14].", "startOffset": 319, "endOffset": 326}, {"referenceID": 12, "context": "We mention the recent investigations in the scope of (i) decision theory with maximal spanning trees and maximal paths in a digraph [18], (ii) game theory with stable matchings (see [20] for a survey), (iii) algebraic combinatorial optimization [28, 5], or (iv) artificial intelligence with some configuration problems [4, 14] and with heuristic search algorithms [17, 14].", "startOffset": 319, "endOffset": 326}, {"referenceID": 15, "context": "We mention the recent investigations in the scope of (i) decision theory with maximal spanning trees and maximal paths in a digraph [18], (ii) game theory with stable matchings (see [20] for a survey), (iii) algebraic combinatorial optimization [28, 5], or (iv) artificial intelligence with some configuration problems [4, 14] and with heuristic search algorithms [17, 14].", "startOffset": 364, "endOffset": 372}, {"referenceID": 12, "context": "We mention the recent investigations in the scope of (i) decision theory with maximal spanning trees and maximal paths in a digraph [18], (ii) game theory with stable matchings (see [20] for a survey), (iii) algebraic combinatorial optimization [28, 5], or (iv) artificial intelligence with some configuration problems [4, 14] and with heuristic search algorithms [17, 14].", "startOffset": 364, "endOffset": 372}, {"referenceID": 25, "context": "Preferred solutions are not all equivalent, some are partially comparable others are incomparable, and sometimes, there exists no optimal or maximal solution [27, 21].", "startOffset": 158, "endOffset": 166}, {"referenceID": 19, "context": "Preferred solutions are not all equivalent, some are partially comparable others are incomparable, and sometimes, there exists no optimal or maximal solution [27, 21].", "startOffset": 158, "endOffset": 166}, {"referenceID": 24, "context": "This is a reactive [26] and deductive approach of solving; In a polynomial number of actions (removings, instantiations and backtrackings), the user leads to a preferred solution.", "startOffset": 19, "endOffset": 23}, {"referenceID": 21, "context": "Given a non-empty finite set S, a (crisp binary) preference relation [23, 27, 21] \u227d of an individual on S is a reflexive binary relation on S (\u21d4 \u227d \u2286 S \u00d7 S and \u2200 x \u2208 S, (x, x) \u2208 \u227d) translating some judgments of this individual concerning his preferences between the alternative elements of S.", "startOffset": 69, "endOffset": 81}, {"referenceID": 25, "context": "Given a non-empty finite set S, a (crisp binary) preference relation [23, 27, 21] \u227d of an individual on S is a reflexive binary relation on S (\u21d4 \u227d \u2286 S \u00d7 S and \u2200 x \u2208 S, (x, x) \u2208 \u227d) translating some judgments of this individual concerning his preferences between the alternative elements of S.", "startOffset": 69, "endOffset": 81}, {"referenceID": 19, "context": "Given a non-empty finite set S, a (crisp binary) preference relation [23, 27, 21] \u227d of an individual on S is a reflexive binary relation on S (\u21d4 \u227d \u2286 S \u00d7 S and \u2200 x \u2208 S, (x, x) \u2208 \u227d) translating some judgments of this individual concerning his preferences between the alternative elements of S.", "startOffset": 69, "endOffset": 81}, {"referenceID": 9, "context": "best quality, or best compromise) solutions from a preference relation, and we refer to [11, 24] for a deepening.", "startOffset": 88, "endOffset": 96}, {"referenceID": 22, "context": "best quality, or best compromise) solutions from a preference relation, and we refer to [11, 24] for a deepening.", "startOffset": 88, "endOffset": 96}, {"referenceID": 21, "context": "We have the following result (see [23]): a preference relation \u227d on a finite set S is P-acyclic \u21d4 every non empty subset of S has a non empty maximal set (\u21d4 \u2200 \u2205 \u2260 A \u2286 S, M(A, \u227d) \u2260 \u2205) \u21d4 there exists linear extensions of \u227d and they are obtained by topological sorting.", "startOffset": 34, "endOffset": 38}, {"referenceID": 3, "context": "In artificial intelligence, numerous compact representations of preferences appeared: from CP-nets [4, 14] to constraints describing the preferential neighbourhood of the solutions (called preferential constraints in [13]), by going through soft constraints [3, 19] and dynamic CSP [26].", "startOffset": 99, "endOffset": 106}, {"referenceID": 12, "context": "In artificial intelligence, numerous compact representations of preferences appeared: from CP-nets [4, 14] to constraints describing the preferential neighbourhood of the solutions (called preferential constraints in [13]), by going through soft constraints [3, 19] and dynamic CSP [26].", "startOffset": 99, "endOffset": 106}, {"referenceID": 11, "context": "In artificial intelligence, numerous compact representations of preferences appeared: from CP-nets [4, 14] to constraints describing the preferential neighbourhood of the solutions (called preferential constraints in [13]), by going through soft constraints [3, 19] and dynamic CSP [26].", "startOffset": 217, "endOffset": 221}, {"referenceID": 2, "context": "In artificial intelligence, numerous compact representations of preferences appeared: from CP-nets [4, 14] to constraints describing the preferential neighbourhood of the solutions (called preferential constraints in [13]), by going through soft constraints [3, 19] and dynamic CSP [26].", "startOffset": 258, "endOffset": 265}, {"referenceID": 17, "context": "In artificial intelligence, numerous compact representations of preferences appeared: from CP-nets [4, 14] to constraints describing the preferential neighbourhood of the solutions (called preferential constraints in [13]), by going through soft constraints [3, 19] and dynamic CSP [26].", "startOffset": 258, "endOffset": 265}, {"referenceID": 24, "context": "In artificial intelligence, numerous compact representations of preferences appeared: from CP-nets [4, 14] to constraints describing the preferential neighbourhood of the solutions (called preferential constraints in [13]), by going through soft constraints [3, 19] and dynamic CSP [26].", "startOffset": 282, "endOffset": 286}, {"referenceID": 13, "context": "Consider the problem of finding a satisficing (in the meaning of Newell & Simon [15]) maximal spanning tree.", "startOffset": 80, "endOffset": 84}, {"referenceID": 4, "context": "Hence, the membership problem associated with this multiobjective spanning trees problem is NP-complete [6, 12].", "startOffset": 104, "endOffset": 111}, {"referenceID": 10, "context": "Hence, the membership problem associated with this multiobjective spanning trees problem is NP-complete [6, 12].", "startOffset": 104, "endOffset": 111}, {"referenceID": 17, "context": "In Constraint Programming [19], consistency is a part of a more general problematic called description.", "startOffset": 26, "endOffset": 30}, {"referenceID": 1, "context": "But there are great chances it is at least as difficult as ST/CBPR/MAX, with the sight of investigations in constraint programming [2, 19].", "startOffset": 131, "endOffset": 138}, {"referenceID": 17, "context": "But there are great chances it is at least as difficult as ST/CBPR/MAX, with the sight of investigations in constraint programming [2, 19].", "startOffset": 131, "endOffset": 138}, {"referenceID": 5, "context": ", e|E|} of \u227dE on E (\u21d4 the TOPOLOGICAL SORT problem3 [7, 22]); Next in assigning a utility u(e) to each edge e of E in order to satisfy the following condition: u(ei) > u(ei+1), 1 \u2264 i \u2264 |E| \u2013 1; for example, u(ei) = |E| \u2013 i.", "startOffset": 52, "endOffset": 59}, {"referenceID": 20, "context": ", e|E|} of \u227dE on E (\u21d4 the TOPOLOGICAL SORT problem3 [7, 22]); Next in assigning a utility u(e) to each edge e of E in order to satisfy the following condition: u(ei) > u(ei+1), 1 \u2264 i \u2264 |E| \u2013 1; for example, u(ei) = |E| \u2013 i.", "startOffset": 52, "endOffset": 59}, {"referenceID": 8, "context": "In the multicriteria decision-making community [10], the multiattribute utility function u(e, k), with (e, k) \u2208 E \u00d7 {1, .", "startOffset": 47, "endOffset": 51}, {"referenceID": 21, "context": "Next, both the last equivalences are true because (P(E), \u227dK) verifies the Arrow choice axiom [23]: For any A, B \u2208 P(E) and A \u2286 B, If B(B, \u227dK) \u2229 A \u2260 \u2205 then B(B, \u227dK) \u2229 A = B(A, \u227dK) (every restriction of P(E) conserves the optimality).", "startOffset": 93, "endOffset": 97}, {"referenceID": 16, "context": "One of the limits, devolved upon decision processes based on listing of preferred solutions suggested by Perny & Spanjaard [18] to solve ordinal combinatorial problems, was the intractability of large size inputs.", "startOffset": 123, "endOffset": 127}, {"referenceID": 21, "context": "Consequently, we have explored this way, for example by identifying domain-values which are in all preferred solutions or, by investigating rational choice theory [23] to identify some sufficient properties so that the decision process always returns a preferred solution for the initial instance, if such a solution exists.", "startOffset": 163, "endOffset": 167}], "year": 2012, "abstractText": "We introduce a new type of fully computable problems, for DSS dedicated to maximal spanning tree problems, based on deduction and choice: preferential consistency problems. To show its interest, we describe a new compact representation of preferences specific to spanning trees, identifying an efficient maximal spanning tree sub-problem. Next, we compare this problem with the Pareto-based multiobjective one. And at last, we propose an efficient algorithm solving the associated preferential consistency problem.", "creator": "Writer"}}}