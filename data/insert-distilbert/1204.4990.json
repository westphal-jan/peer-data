{"id": "1204.4990", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "23-Apr-2012", "title": "Objective Function Designing Led by User Preferences Acquisition", "abstract": "many real world problems designing can be defined as optimisation problems... in which the empirical aim is to maximise an objective function. maintaining the mathematical quality of obtained solution is considered directly linked critically to the pertinence of the used objective function. however, designing such function, which has to translate the user needs, is usually fastidious. in this paper, a method to help user objective functions designing is proposed. our prototype approach, whereas which is highly interactive, is based on man or machine dialogue and more particularly on the comparison steps of problem instance solutions by the user. we propose an experiment in the domain of cartographic generalisation that shows promising quality results.", "histories": [["v1", "Mon, 23 Apr 2012 08:02:19 GMT  (363kb)", "http://arxiv.org/abs/1204.4990v1", "International Conference on Information Technology and Applications, Hanoi : Viet Nam (2009)"]], "COMMENTS": "International Conference on Information Technology and Applications, Hanoi : Viet Nam (2009)", "reviews": [], "SUBJECTS": "cs.LG cs.AI cs.HC", "authors": ["patrick taillandier", "julien gaffuri"], "accepted": false, "id": "1204.4990"}, "pdf": {"name": "1204.4990.pdf", "metadata": {"source": "CRF", "title": null, "authors": [], "emails": ["patrick.taillandier@gmail.com).", "julien.gaffuri@ign.fr)."], "sections": [{"heading": null, "text": "optimisation problems in which the aim is to maximise an objective function. The quality of obtained solution is directly linked to the pertinence of the used objective function. However, designing such function, which has to translate the user needs, is usually fastidious. In this paper, a method to help user objective functions designing is proposed. Our approach, which is highly interactive, is based on man-machine dialogue and more particularly on the comparison of problem instance solutions by the user. We propose an experiment in the domain of cartographic generalisation that shows promising results.\nIndex Terms\u2014user needs definition, objective function designing, man-machine dialogue, cartographic generalisation.\nI. INTRODUCTION\nArtificial systems are more effective than humans to solve many problems. One of the reasons is their computing capacity that allows them to tests many possibilities in a short period of time. However, in order to get good results, an artificial system has to know what it is searching, i.e. what type of solutions is expected. Unfortunately, while human experts can easily give a qualitative evaluation of the quality of a problem solution or order several solutions in terms of quality, it is often far more difficult for them to express their expectations in a formal way that can be used by artificial systems. This problem is particularly complex when numerous measures are used to characterise a solution and when no simple links can be found between these measures values and the solution quality.\nThis paper deals with the problem of the formalisation of the user outcome expectation from the system, into a form usable by artificial systems. In this context, we propose an approach aiming at translating the user needs into an objective function thanks to dialogue between the user and the system.\nIn Section 2, the general context of our work is introduced. Section 3 is devoted to the presentation of our approach. Section 4 describes an application of our approach to cartographic generalisation. We present a real case study that we carried out\nP. Taillandier is with the UMI UMMISCO of IRD, 209, 32 avenue Henri Varagnat,93143 Bondy, France and with the UMI 209 of IFI, MSI, ngo 42 Ta Quang Buu, Ha Noi, Viet Nam (e-mail: patrick.taillandier@gmail.com).\nJ. Gaffuri is with the COGIT lab of IGN , 73 avenue De Paris, 94165\nSaint-Mand\u00e9, France (e-mail: julien.gaffuri@ign.fr).\nICITA 2009 ISBN: 978-981-08-3029-8\nas well as its results. Section 5 concludes and presents the perspectives of this work."}, {"heading": "II. CONTEXT", "text": "A. Optimisation problem and objective function\nMany real world problems can be expressed as optimisation problems. Solving such a problem consists in finding, among all possible solutions of the problems, the one that maximises an objective function. This function characterises the quality of a solution. Its definition is a key point of the resolution of optimisation problems [19]-[20]. Indeed, the goal of the resolution of an optimisation problem is to find the solution that maximises (or minimises) this function. Thus, if the objective function is not in adequacy with the real quality of a solution, the solutions that will be found will never be good. Many works were interested in the definition of such function for specific problems [14]-[21] but few proposed general approach for helping the user of an optimisation system to define it.\nB. Related Works\nThe problem of objective function definition and more generally of user need definition is a complex problem which was studied in various fields.\nA first approach to solve this problem is to use supervised machine learning techniques. These techniques consist in inducing a general model from examples labeled by a user/expert. In this context, it is possible to learn an objective function from examples evaluated by a user. This approach was used in several works. For example, [21] used this approach in the domain of computer vision, [6], in the learning of cognitive radio.\nA second approach consists in establishing a man-machine dialogue to converge toward a formalisation of the user needs. Reference [5] proposes to use such approach in order to help users to create original map legends. This work proposed to use map samples to establish a dialogue between the user and the system. This dialogue allows the system to retrieve the user preferences, and thus to design a suitable legend that respects the user expectations as well as cartographic constraints (to ensure the map readability). In the same way, [13] proposes to use map samples to capture user needs in terms of geographic information. Our work is taking place in the continuity of these two works. We propose to use the same approach based on a dialogue between the user and the system established through the presentation of samples."}, {"heading": "III. PROPOSED APPROACH", "text": "A. General approach\nAs stated in the introduction, if experts often have difficulties to express in a formal way their needs from a system, it is far easier for them to compare different solutions of a problem and to point out their preferences. Thus, we propose to base our user need definition approach on the presentation of comparisons between solutions to the user. Each comparison is composed of two solutions for a same problem instance. The user can give his preferences toward these two solutions to the system, i.e. the solution that he prefers if there is one. The system then automatically build the evaluation function from the whole set of preferences.\nOur general approach, presented Figure 1, is composed of 3 steps: the first one consists in generating a set of pairs of solutions to compare (called \u201ccomparisons set\u201d); the second one consists in capturing the user preferences by asking the user to select its favourite solution for each comparison; the last step consists in using these captured preferences to automatically build the objective function that will represent the user expectations toward the optimisation system.\nIn the following sections, we described each of these three\nsteps.\nB. Initialisation of the comparison set\nThe first step of our approach consists in generating a set of comparisons that will be used to capture the user needs. We defined a comparison as a set of two solutions for a same problem instance.\nThe generation of the comparison set depends on the context of use of our approach. For example, in the case where a set of instances of the considered problem is available and where this set is too big to take into account all available instances, a sampling method has to be used in order to select a subset of problem instances. The subset has to be representative of the whole set in order to capture more pertinently the user preferences in a generic objective function.\nEach selected instance has to be solved in order to obtain at least two solutions for it. For each couple of solutions, a comparison is created and is added to the comparison set.\nC. Capture of the user preferences\nThe second step of our approach consists in capturing the user preferences. Figure 2 presents our approach: at each iteration, a comparison is selected between all available ones (the comparison set). Then, the user defines its preferences, i.e. between the two solutions, the one that he finds better. The user can also define that the two solutions are as good or as bad. This sequence is reiterated until an ending criterion is checked. An example of ending criterion can be to stop the cycle when a specific number of comparisons have been presented to the user.\nThe main question of this step concerns the choice of a comparison to propose to the user at each iteration. How to choose that comparison? To guide this choice, we propose to use comparison choice strategies: a comparison choice strategy allows the choice of the next comparison among a set of comparisons according to a specific strategy.\nIn this paper, we propose four different comparison choice\nstrategies:\n\u2022 Measure consistency analysis: this strategy consists in\nchoosing a comparison where the two solutions are equivalent in terms of measure values. The goal is to analyse the consistency of the measure set. If the user prefers one of the two solutions whereas they are equivalent in terms of measure values, it means that the measure set is not pertinent and does not allow to well-characterised the solution quality.\n\u2022 Measure evolution analysis: this strategy consists in\nchoosing a comparison where the value of only one measure changes between the two solutions. The goal is to analyse how the quality of a solution evolves according to the evolution of the value of this measure.\n\u2022 Order of preference between two measures: this strategy\nconsists in choosing a comparison where the values of only two measures change between the two solutions. The goal is to compare the relative importance of each measure for the computation of the solution quality.\n\u2022 Random comparison: this strategy consists in choosing randomly a comparison in the comparison set.\nIn order to define a global strategy of user preference capture,\nwe propose to chain different comparison choice strategies. Indeed, in a first step, we propose to apply the measure consistency analysis strategy in order to check the pertinence of the measure set. If this one is not pertinent, the objective function obtained at the end of the user need definition process will certainly not be perfect. Then, in a second step, we propose to apply the measure evolution analysis strategy for each measure. This step allows a better understanding of the link existing between the evolution of a measure and the evolution of the solution quality. The third step consists in applying the order of preference between two measures strategy to compare by couple the relative importance of each measure. In the last step, we propose to apply he random comparison strategy.\nD. Definition of the objective function\nThe last step of our approach consists in designing an\nobjective function from the user preferences.\nWe propose to formulate the objective function as a set of regression rules. Each regression rule is associated to a weighted means. The interest of such representation is to be easily interpretable by domain experts and thus to facilitate the objective function validation.\nLet M be the set of measures, wi the weight associated to the measure i and Vali(sol), the value of the measure i for the solution sol belonging to the whole possible solution set SOL.\nWe define the measures of M such as:\nMAXVALsolvalMINVALMiSOLsol i _)(_,, \u2264\u2264\u2208\u2200\u2208\u2200\nwith VAL_MIN and VAL_MAX real.\nEach regression rule is defined as follows:\n)( 1\n)(then condition if solValw w solquality Mi ii\nMi\ni \u2211 \u2211 \u2208 \u2208 \u00d7\u00d7=\nAn Example of objective function is presented in Section\nIV.E.3.\nBuilding an objective function consists in finding a set of regression rules (with, for each of them, a condition and the weight values) from the preferences given by the users on the samples. As presented Figure 3, to solve this problem, we propose to use an approach based on the search of the best weights and eventually on the partitioning of the measures set (which correspond to the addition of new regression rules).\nAt the initial stage, the objective function is composed of only one regression rule, such as the measure space is composed of only one partition. At the first step, the system searches a weight assignment that maximises the adequacy between the objective function and the user preferences. If this weight assignment is in total adequacy with the user preferences, the process ends; the objective function is composed of only one regression rule. Otherwise, new regression rules are introduced: the system computes partitions of the measure set in order to detect the parts of the measure set that are not compatible with the others. Then, a new weight assignment is searched again for all regression rules, by considering all partitions built at the same time. If the weight assignment obtained after the partitioning\nallows to get a better result than the previous one, it is kept; otherwise, the system backtracks to the previous objective function and end the evaluation function building process. This partitioning procedure is recursively repeated until the learnt objective function allows to obtain the given user preferences or until no more improvement of the objective function is obtained.\n1) Search of the best weight assignment\nWe propose to formulate the problem of best weight assignment as a minimisation problem. We define a global error function that represents the inadequacy between the evaluation function (and thus the weight assignment) and the user preferences. The goal of the best weight assignment search is to find the weights that allow to minimise the global error function.\nLet fobj(sol) be the current objective function that evaluates\nthe quality of a solution sol.\nLet csol1,sol2 be a comparison between two solutions, sol1 and\nsol2.\nLet pc be the user preference for the comparison c. pc can be either {sol1} (the user prefers the solution sol1), {sol2} (the user prefers the solution sol2) or {sol1, sol2} (the two solutions have the same quality for the user).\nWe define the function comp(c, fobj, pc) that determines for a comparison c if the user preference pc is compatible with the objective function fobj, i.e. if the preference formulated by the user is consistent with the quality order obtained by applying the objective function on the solutions. If the user preference pc is compatible with the objective function fobj for the comparison c, comp(c, fobj, pc) is equal to 0; otherwise it is equal to 1.\n{ }\n{ } { }\n    \n    \n\n \n \n\n>=\n>=\n==\n=\notherwise\nsolfsolfandsolpor\nsolfsolfandsolpor\nsolfsolfandsolsolp\nif\npfccomp\nobjobjc\nobjobjc\nobjobjc\ncobj\n1\n)()(\n)()(\n)()(,\n0\n),,(\n122\n211\n2121\nWe define the function error(c, fobj, pc) that returns the error\nvalue for a comparison c. This function is defined as:\n \n \n\n=\u2212+\n=\n=\n1),,()()(\n0),,(0\n),,(\n21 cobjobjobjerror\ncobj\ncobj\npfccompifsolfsolfval\npfccompif\npfcerror\nIn this function, we integrated a parameter valerror that represents the minimum importance of an error whatever the values of the objective function for the two solutions are. The higher the value of this parameter, the more important it will be to minimise the number of incompatible comparisons.\nFinally, the global error function proposed corresponds to the mean error obtained with the objective function fobj on the comparison sample Comp:\n\u2211 \u2208 \u00d7= Compc cobjobj pfcerror Comp\nCompfError ),,( 1 ),(\nThe aims of the weight assignment step is to find a weight assignment that minimises Error(fobj, Comp). The size of the search space will be most of time too high to carry out a complete search. Thus, it will be necessary to proceed by incomplete search. In this context, we propose to use a metaheuristic to find the best weight assignment. In the literature, numerous metaheuristics were introduced [8]-[11]-[15]. In this paper, we propose to use genetic algorithms [12] which are particularly effective when the search space is well-structured as it is in our search problem.\n2) Partitioning of the measure space\nFor some user need definition problems, it will not be possible to find a weight assignment compatible with all user preferences. Thus, we propose to partition the measure set space and to define for each partition a regression rule with its own weight assignment.\nWe propose to base our partitioning method on the utilisation of supervised learning techniques. The goal is to search the parts of the measure space that have a different behaviour in terms of objective function. Thus, we search to detect the parts of the measure space which contain solutions linked to an incompatible comparison.\nWe built an example set composed of solutions described by its measures values. The conclusion could be either \u201ccompatible\u201d if the comparison which contains the solution is compatible with the objective function or \u201cincompatible\u201d if it is not. Then, a supervised learning algorithm is used to partition the measure space. We remind that we proposed to express the partition in the form of rules. Thus, it is necessary to use a supervised learning algorithm that allows to build a predictive model expressed by rules. Different algorithms could be used for this partitioning problem such as RIDOR [10] or C4.5 algorithm [16]. In this paper, we propose to use the effective and well-established RIPPER algorithm [7].\nFigure 4 presents an example of partitioning for a measure set\ncomposed of two measures.\nOnce the partitioning is carried out, the user need definition module performs a new search of the best weights assignment. All partitions are considered at the same time for this search. If the weights assignment found is better (in terms of minimisation of the global error value) than the assignment obtained before the partitioning, the new objective function is kept. Otherwise, the module keeps the previously obtained objective function."}, {"heading": "IV. APPLICATION TO CARTOGRAPHIC GENERALISATION", "text": "A. Automatic cartographic generalisation\nWe propose to test our objective function designing approach in the domain of cartographic generalisation. Cartographic generalisation is the process that aims at simplifying geographic data to suit the scale and purpose of a map. The objective of this process is to ensure the readability of the map while keeping the essential information of the initial data. Figure 5 gives an example of cartographic generalisation.\nThe automation of the generalisation process is an interesting industrial application context which is far from being solved. Moreover, it directly interests the mapping agencies that wish to improve their map production lines. At last, the multiplication of web sites allowing creating one\u2019s own map increases the needs of reliable and effective automatic generalisation processes.\nOne classical approach to automate the generalisation process is to use a local, step-by-step and knowledge-based method [4]: each vector object of the database (representing a building, a road segment, etc.) is transformed by application of a sequence of generalisation algorithms realising atomic transformations. The choice of the applied sequence algorithms is not predetermined but built on the fly for each object according to heuristics and to its characteristics.\nB. The generalisation system\nThe generalisation system that we use for our experiment is based on the AGENT model [3]-[17]. The AGENT model has been further described in [18].\nIn this model, geographic objects (roads, buildings, etc) are modelled as agents. Geographic agents manage their own generalisation, choosing and applying generalisation operations to themselves. Each state of the agent represents the geometric state of the considered geographic objects.\nDuring its generalisation process, each agent is guided by a set of constraints that represents the specifications of the desired cartographic product. An example of constraint is, for a building agent, to be big enough to be readable. Each constraint has a satisfaction level between 0 (constraint not satisfy at all) and 100 (constraint perfectly satisfy). For each state, the agent computes its own satisfaction according to the values of its constraint satisfaction.\nTo satisfy its constraints as well as possible, a geographical agent carries out a cycle of actions during which it tests different actions in order to reach a perfect state (where all of its constraints are perfectly satisfied) or at least the best possible state. The action cycle results in an informed exploration of a state tree. Each state represents the geometric state of the considered geographic objects. Figure 6 gives an example of a state tree obtained with the generalisation system."}, {"heading": "C. Difficulties of the agent satisfaction function definition", "text": "The AGENT model has been the core of numerous research works and is used for map production in several mapping agencies. However, the question of the evaluation of the state of an agent is still asked. The function usually used is a mean of the constraint satisfaction weighted by their importance (which is often an integer ranged between 1 and 10). The problem of this function is to give satisfaction values too homogenous. More over, it does not allow to take into account discontinuities in the satisfaction function. At last, the definition of the importance values is often complex and fastidious when more than five constraints are in stake [2]. Thus, having an approach like the one described in this paper allowing to design the agent satisfaction function is particularly interesting in the context of the AGENT model.\nD. Implementation of our approach for the AGENT model\nWe experiment our approach on an implementation of our user need definition module in Java, using G\u00e9Oxygene [2] for geographical data transformation, and WEKA [22] for the partitioning part using RIPPER algorithm.\nFigure 7 presents our implemented interface. On the top panel, the initial state for a building is presented to the user, with, under, the two possible solutions. The user gives its preference for this sample.\nE. Case study\n1) Setting of the case study\nWe propose to apply our user need definition approach for the learning of the satisfaction function of the generalisation of building agents for 1:25000 scaled maps.\nWe defined six constraints for the building agents:\n\u2022 Size constraint: the building shape should be big enough. Let Ssz be the value of this constraint satisfaction. \u2022 Granularity constraint: the building shape should not contain too small details. Let Sgr be the value of this\nconstraint satisfaction.\n\u2022 Squareness constraint: the angles of the building that are nearly square should be square. Let Ssq be the value of\nthis constraint satisfaction.\n\u2022 Convexity constraint: the convexity of the building should be preserved. Let Scv be the value of this constraint\nsatisfaction\n\u2022 Elongation constraint: the elongation of the building\nshould be preserved. Let Sel be the value of this constraint satisfaction\n\u2022 Orientation constraint: the orientation of the building should be preserved. Let Sor be the value of this\nconstraint satisfaction\n2) Experiment protocol\n50 comparisons (the learning set) were presented to a generalisation expert to learn an objective function. Then, we tested the learnt objective function on 50 new comparisons (the test set) which were selected in a new area and for which the\nexpert expressed its preferences.\nThe value used for valerror (cf. Section III.D.1) is 40. This value is high enough to limit the number of incompatible comparisons and, at the same time, not too high in order to take into account the difference of values of the objective function value in case of errors. Thus, in our application context, the value of the global error is ranged between 0 and 140.\n3) Results\nThe learnt objective function (with S, the satisfaction of the\nbuilding agent) is the following:\n( )\n( )\n( )    \n  \n\n\u00d7+\u00d7+\u00d7+\u00d7+\u00d7=\u21d2>\n\u00d7+\u00d7+\u00d7+\u00d7+\u00d7=\u21d2<\u2264\n\u00d7+\u00d7+\u00d7+\u00d7+\u00d7+\u00d7=\u21d2<\nszgrsqelcvcv\nszgrsqelcvcv\nszorgrsqelcvcv\nSSSSSSSif\nSSSSSSSif\nSSSSSSSSif\n72399 30\n1 )93(\n67177 28\n1 )9383(\n722926 28\n1 )83(\nTable 1 presents the results obtained on the two comparison sets. The learnt objective function allowed to get, for both comparison sets, a global error value lower than 5 and a number of incompatible comparisons equals to 5.\nThese results show that our approach allowed to learn a pertinent objective function. Indeed, the results obtained by the learnt function are both good on the learning set and on the test set. For both comparison sets, the global error value is very low and only 5 of the 50 comparisons are incompatible. Among these incompatible comparisons, several can be explained by the lack of pertinent measures used to describe the generalisation results. Indeed, the Measure consistency analysis comparison choice strategy allowed us to detect that, for some comparisons, two states can be identical in terms of constraint satisfactions but different in terms of generalisation quality."}, {"heading": "V. CONCLUSION", "text": "In this paper, we presented an approach dedicated to the definition of user needs. Thus, we proposed an approach based on a man-machine dialogue aiming at defining an objective function representing the user expectations toward an optimisation system. An experiment, carried out in the domain of cartographic generalisation, showed that our approach can help users to formalise their needs and can allow to detect lacks of pertinent measures.\nOur approach is based on the utilisation of comparison choosing strategies. In this paper, we defined four different strategies. Other strategies, more complex, could be proposed, such as strategies that take more into account the preferences initially formalised by the user.\nConcerning the exploration part as well as the partitioning part, we just tested one search algorithm and one supervised learning algorithm. An interesting study could be to test others algorithms and to compare the results with the ones obtained.\nA last perspective could be to pass from an acquisition problem to a revision problem. Indeed, it could be interesting to take into account an initial objective function and to refine it rather than learning a new one from scratch."}], "references": [{"title": "OXYGENE: An open framework for the deployment of geographic web services", "author": ["T. Badard", "A. Braun"], "venue": "Im proceedings of the 21 International Cartographic Conference (ACI/ICA), Durban, South Africa, August 10-16", "citeRegEx": "1", "shortCiteRegEx": null, "year": 2003}, {"title": "Quality Assessment of Cartographic Generalisation", "author": ["S. Bard"], "venue": "Transactions in GIS, 8", "citeRegEx": "2", "shortCiteRegEx": null, "year": 2004}, {"title": "Integrating multi-agent", "author": ["M. Barrault", "N. Regnauld", "C. Duch\u00eane", "K. Haire", "C. Baejis", "Y. Demazeau", "P. Hardy", "W. Mackaness", "A. Ruas", "R. Weibel"], "venue": "object-oriented, and algorithmic techniques for improved automated map generalization. In ICC", "citeRegEx": "3", "shortCiteRegEx": null, "year": 2001}, {"title": "A review and conceptual framework of automated map generalization", "author": ["K. Brassel", "R. Weibel"], "venue": "IJGIS", "citeRegEx": "4", "shortCiteRegEx": null, "year": 1988}, {"title": "Creative Cartography based on Dialogue", "author": ["S. Christophe"], "venue": "'In proceedings of AutoCarto', Shepherdstown, West Virginia", "citeRegEx": "5", "shortCiteRegEx": null, "year": 2008}, {"title": "Applications of Machine Learning to Cognitive Radio Networks, Wireless Communications", "author": ["C. Clancy", "J. Hecker", "E. Stuntebeck", "T. O'Shea"], "venue": "IEEE, vol. 14,", "citeRegEx": "6", "shortCiteRegEx": "6", "year": 2007}, {"title": "Fast effective rule induction", "author": ["W. Cohen"], "venue": "Proc. (ICML-95)", "citeRegEx": "7", "shortCiteRegEx": null, "year": 1995}, {"title": "Ant Colony Optimization", "author": ["M. Dorigo", "T. St\u00fctzle"], "venue": "MIT Press", "citeRegEx": "8", "shortCiteRegEx": null, "year": 2004}, {"title": "Role of urban patterns for building generalisation: An application of AGENT", "author": ["J. Gaffuri", "J. Tr\u00e9visan"], "venue": "'Workshop on Generalisation and Multiple representation', United Kingdom", "citeRegEx": "9", "shortCiteRegEx": null, "year": 2004}, {"title": "Induction of Ripple-Down Rules Applied to Modeling Large Databases", "author": ["B.R. Gaines", "P. Compton"], "venue": "Journal of Intelligent Information Systems 5(3)", "citeRegEx": "10", "shortCiteRegEx": null, "year": 1995}, {"title": "Tabu search", "author": ["F. Glover"], "venue": "Journal on Computing", "citeRegEx": "11", "shortCiteRegEx": null, "year": 1989}, {"title": "Adaptation in Natural and Artificial Systems", "author": ["J.H. Holland"], "venue": "Ann Arbor: University of Michigan Press", "citeRegEx": "12", "shortCiteRegEx": null, "year": 1975}, {"title": "A method based on samples to capture user needs for generalisation", "author": ["F. Hubert", "A. Ruas"], "venue": "'fifth workshop on progress in automated map generalisation', Paris", "citeRegEx": "13", "shortCiteRegEx": null, "year": 2003}, {"title": "An alternative objective function for Markovian fields", "author": ["S. Kakade", "Y.W. Teh", "S. Roweis"], "venue": "Proc. 19  th ICML", "citeRegEx": "14", "shortCiteRegEx": null, "year": 2002}, {"title": "Optimization by Simulated Annealing", "author": ["S. Kirkpatrick", "C. Gellatt", "M.P. Vecchi"], "venue": "Science 220", "citeRegEx": "15", "shortCiteRegEx": null, "year": 1983}, {"title": "C4.5: programs for machine", "author": ["J. Quinlan"], "venue": null, "citeRegEx": "16", "shortCiteRegEx": "16", "year": 1993}, {"title": "Mod\u00e8le de g\u00e9n\u00e9ralisation de donn\u00e9es g\u00e9ographiques \u00e0 base de contraintes et d\u2019autonomie", "author": ["A. Ruas"], "venue": "Th\u00e8se de l\u2019UMLV", "citeRegEx": "17", "shortCiteRegEx": null, "year": 1999}, {"title": "A Prototype Generalisation System Based on the Multi-Agent Paradigm", "author": ["A. Ruas", "C. Duch\u00eane"], "venue": "Generalisation of Geographic Information: Cartographic Modelling and Applications", "citeRegEx": "18", "shortCiteRegEx": null, "year": 2007}, {"title": "Norvig, informed search and exploration, chapter 4 of artificial intelligence, a modern approach, second edition", "author": ["P.S. Russel"], "venue": "Pearson education,", "citeRegEx": "19", "shortCiteRegEx": "19", "year": 1995}, {"title": "Knowledge revision in systems based on an informed tree search strategy: application to cartographic generalisation, in CSTST", "author": ["P. Taillandier", "C. Duch\u00eane", "A. Drogoul"], "venue": null, "citeRegEx": "20", "shortCiteRegEx": "20", "year": 2008}, {"title": "Learning local objective functions for robust face model fitting", "author": ["M. Wimmer", "F. Stulp", "S. Pietzsch", "B. Radig"], "venue": "IEEE Transactions on Pattern Analysis andMachine Intelligence (PAMI),", "citeRegEx": "21", "shortCiteRegEx": "21", "year": 2008}, {"title": "Data Mining: Practical Machine Learning Tools and Techniques (San Francisco", "author": ["I.H. Witten", "E. Frank"], "venue": "CA: Morgan Kaufmann),", "citeRegEx": "22", "shortCiteRegEx": "22", "year": 2005}], "referenceMentions": [{"referenceID": 18, "context": "Its definition is a key point of the resolution of optimisation problems [19]-[20].", "startOffset": 73, "endOffset": 77}, {"referenceID": 19, "context": "Its definition is a key point of the resolution of optimisation problems [19]-[20].", "startOffset": 78, "endOffset": 82}, {"referenceID": 13, "context": "Many works were interested in the definition of such function for specific problems [14]-[21] but few proposed general approach for helping the user of an optimisation system to define it.", "startOffset": 84, "endOffset": 88}, {"referenceID": 20, "context": "Many works were interested in the definition of such function for specific problems [14]-[21] but few proposed general approach for helping the user of an optimisation system to define it.", "startOffset": 89, "endOffset": 93}, {"referenceID": 20, "context": "For example, [21] used this approach in the domain of computer vision, [6], in the learning of cognitive radio.", "startOffset": 13, "endOffset": 17}, {"referenceID": 5, "context": "For example, [21] used this approach in the domain of computer vision, [6], in the learning of cognitive radio.", "startOffset": 71, "endOffset": 74}, {"referenceID": 4, "context": "Reference [5] proposes to use such approach in order to help users to create original map legends.", "startOffset": 10, "endOffset": 13}, {"referenceID": 12, "context": "In the same way, [13] proposes to use map samples to capture user needs in terms of geographic information.", "startOffset": 17, "endOffset": 21}, {"referenceID": 7, "context": "In the literature, numerous metaheuristics were introduced [8]-[11]-[15].", "startOffset": 59, "endOffset": 62}, {"referenceID": 10, "context": "In the literature, numerous metaheuristics were introduced [8]-[11]-[15].", "startOffset": 63, "endOffset": 67}, {"referenceID": 14, "context": "In the literature, numerous metaheuristics were introduced [8]-[11]-[15].", "startOffset": 68, "endOffset": 72}, {"referenceID": 11, "context": "In this paper, we propose to use genetic algorithms [12] which are particularly effective when the search space is well-structured as it is in our search problem.", "startOffset": 52, "endOffset": 56}, {"referenceID": 9, "context": "Different algorithms could be used for this partitioning problem such as RIDOR [10] or C4.", "startOffset": 79, "endOffset": 83}, {"referenceID": 15, "context": "5 algorithm [16].", "startOffset": 12, "endOffset": 16}, {"referenceID": 6, "context": "In this paper, we propose to use the effective and well-established RIPPER algorithm [7].", "startOffset": 85, "endOffset": 88}, {"referenceID": 3, "context": "One classical approach to automate the generalisation process is to use a local, step-by-step and knowledge-based method [4]: each vector object of the database (representing a building, a road segment, etc.", "startOffset": 121, "endOffset": 124}, {"referenceID": 2, "context": "The generalisation system that we use for our experiment is based on the AGENT model [3]-[17].", "startOffset": 85, "endOffset": 88}, {"referenceID": 16, "context": "The generalisation system that we use for our experiment is based on the AGENT model [3]-[17].", "startOffset": 89, "endOffset": 93}, {"referenceID": 17, "context": "The AGENT model has been further described in [18].", "startOffset": 46, "endOffset": 50}, {"referenceID": 1, "context": "At last, the definition of the importance values is often complex and fastidious when more than five constraints are in stake [2].", "startOffset": 126, "endOffset": 129}, {"referenceID": 1, "context": "We experiment our approach on an implementation of our user need definition module in Java, using G\u00e9Oxygene [2] for geographical data transformation, and WEKA [22] for the partitioning part using RIPPER algorithm.", "startOffset": 108, "endOffset": 111}, {"referenceID": 21, "context": "We experiment our approach on an implementation of our user need definition module in Java, using G\u00e9Oxygene [2] for geographical data transformation, and WEKA [22] for the partitioning part using RIPPER algorithm.", "startOffset": 159, "endOffset": 163}], "year": 2009, "abstractText": "Many real world problems can be defined as optimisation problems in which the aim is to maximise an objective function. The quality of obtained solution is directly linked to the pertinence of the used objective function. However, designing such function, which has to translate the user needs, is usually fastidious. In this paper, a method to help user objective functions designing is proposed. Our approach, which is highly interactive, is based on man-machine dialogue and more particularly on the comparison of problem instance solutions by the user. We propose an experiment in the domain of cartographic generalisation that shows promising results.", "creator": "PScript5.dll Version 5.2.2"}}}