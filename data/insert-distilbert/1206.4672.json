{"id": "1206.4672", "review": {"conference": "ICML", "VERSION": "v1", "DATE_OF_SUBMISSION": "18-Jun-2012", "title": "Efficient Active Algorithms for Hierarchical Clustering", "abstract": "advances in sensing technologies and the growth of the internet have resulted in an explosion in raising the size of modern datasets, while storage and processing power continue to lag behind. this motivates the need for algorithms that are efficient, both in terms of the number of measurements needed and running time. to combat the challenges both associated with large datasets, we propose a general framework for active hierarchical binary clustering, that repeatedly runs effectively an off - the - shelf clustering detection algorithm on small subsets of the data and comes with guarantees on performance, measurement complexity and runtime parameter complexity. we instantiate this framework with a simple spectral clustering algorithm and provide concrete results on its performance, showing that, under some assumptions, this algorithm recovers all clusters of size? ( v log 1 n ) using o ( n log ^ 2 n ) similarities and runs in o ( n log ^ 3 n ) time for a dataset of n objects. through extensive experimentation we also demonstrate that this framework nonetheless is practically alluring.", "histories": [["v1", "Mon, 18 Jun 2012 15:35:20 GMT  (3381kb)", "http://arxiv.org/abs/1206.4672v1", "ICML2012"]], "COMMENTS": "ICML2012", "reviews": [], "SUBJECTS": "cs.LG stat.ML", "authors": ["akshay krishnamurthy", "sivaraman balakrishnan", "min xu", "aarti singh"], "accepted": true, "id": "1206.4672"}, "pdf": {"name": "1206.4672.pdf", "metadata": {"source": "CRF", "title": "Efficient Active Algorithms for Hierarchical Clustering", "authors": ["Akshay Krishnamurthy", "Sivaraman Balakrishnan"], "emails": ["akshaykr@cs.cmu.edu", "sbalakri@cs.cmu.edu", "minx@cs.cmu.edu", "aarti@cs.cmu.edu"], "sections": [{"heading": "1. Introduction", "text": "Clustering is a ubiquitous task in exploratory data analysis, data mining, and several application domains. In clustering, we assign each object to one or more groups so that objects in the same group are very similar while objects in different groups are dissimilar. In a hierarchical clustering, the groups have multiple resolutions, so that a large cluster may be recursively divided into smaller sub-clusters. There exist many Appearing in Proceedings of the 29 th International Conference on Machine Learning, Edinburgh, Scotland, UK, 2012. Copyright 2012 by the author(s)/owner(s).\neffective algorithms for clustering, but as modern data sets get larger, the fact that these algorithms require every pairwise similarity between objects poses a serious measurement and/or computational burden and limits the practicality of these algorithms. It is therefore practically appealing to develop clustering algorithms that are effective on large scale problems from both a measurement and a computational perspective.\nTo achieve both measurement and computational improvements, we focus on reducing the number of similarity measurements required for clustering. This approach results in immediate reduction in measurement overhead in applications where similarities are observed directly, but it can also provide dramatic computational gains in applications where similarities between objects are computed via some kernel evaluated on observed object features. The case of internet topology inference is an example of the former, where covariance in the packet delays observed at nodes reflects the similarity between them. Obtaining these similarities requires injecting probe packets into the network and places a significant burden on network infrastructure. Phylogenetic inference and other biological sequence analyses are examples of the latter, where computationally intensive edit distances are often used. In both cases our algorithms are dramatically faster than many popular algorithms.\nIn this paper, we propose a novel framework for speeding up hierarchical clustering algorithms through activization\u2013creating active versions of the algorithms where only a small number of informative similarities are measured. Our framework allows the user to specify various levels of activeness and we provide theoretical analysis that quantifies the resulting trade-off between measurement overhead and computation time on one hand, and statistical accuracy on the other.\nAs a detailed example, we apply our framework to spectral clustering. Spectral clustering is a very popular clustering technique that relies on the structure\nof the eigenvectors of the Laplacian of the similarity matrix. These algorithms have received considerable attention in recent years because of their empirical success, but they suffer from the fact that they require all n(n\u2212 1)/2 similarities between the n objects to be clustered and must compute a spectral decomposition, which on large datasets can be computationally prohibitive. Our active algorithm avoids this limitation by subsampling few objects in each round and only computing eigenvectors of very small sub-matrices. By appealing to previous statistical guarantees (Balakrishnan et al., 2011), we can show that this algorithm has desirable theoretical properties, both in terms of statistical and computational performance."}, {"heading": "2. Related Work", "text": "There is a large body of work on hierarchical and partitional clustering algorithms, many coming with various theoretical guarantees, but only few algorithms attempt to minimize the number of pairwise similarities used (Eriksson et al., 2011; Balcan & Gupta, 2010; Shamir & Tishby, 2011). Along this line, the work of Eriksson et. al. (2011) and Shamir and Tishby (2011) is closest in flavor to ours.\nEriksson et. al. (2011) develop an active algorithm for hierarchical clustering and analyze the correctness and measurement complexity of this algorithm under noise model where a small fraction of the similarities are inconsistent with the hierarchy. They show that for a constant fraction of inconsistent similarities, their algorithm can recover hierarchical clusters up to size \u2126(log n) using O(n log2 n) similarities. Our analysis for ActiveSpectral yields similar results in terms of noise tolerance, measurement complexity, and resolution, but in the context of i.i.d. subgaussian noise rather than inconsistencies. Our algorithm is also computationally more efficient.\nAnother approach to minimizing the number of similarities used is via perturbation theory, which suggests that randomly sampling the entries of a similarity matrix preserves many of its important properties, such as its spectral norm (Achlioptas & McSherry, 2001). With this result, the Davis-Kahan theorem suggests that spectral clustering algorithms, which look at the eigenvectors of the Laplacian associated with the similarity matrix, can succeed in recovering the clusters. This intuition is formalized by Shamir and Tishby (2011) who analyze a binary spectral algorithm that randomly samples b entries from the similarity matrix. Their results imply that as long as b = \u2126(n log3/2 n) their algorithm will find flat k-way clusters of size \u2126(n) with high probability. Our work, translated to the flat clustering setting improves this guarantee; Theo-\nrem 2 implies that O(n log n) similarities are needed to recover the clustering. Furthermore, we can give guarantees on the size of smallest cluster \u2126(log n) that can be recovered in a hierarchy by selectively sampling similarities at each level.\nRecently (Voevodski et al., 2012) proposed an active algorithm for flat k-way clustering that selects O(k) landmarks and partitions the objects using distances to these landmarks. Theoretically, the authors guarantee approximate-recovery of clusters of size \u2126(n) using O(nk) pairwise distances. This idea of selecting landmarks bears strong resemblence to the first phase of our active clustering algorithm and also has connections to the Landmark MDS algorithm of de Silva and Tenenbaum (2002). These approaches are tied to specific algorithms, while our framework is much more general. Moreover, we guarantee exact cluster recovery (under mild assumptions) rather than approximate recovery, which translates into guarantees on hierarchical clustering.\nA related direction is the body of work on efficient streaming and online algorithms for approximating the k-means and k-medians objectives (See for example (Charikar et al., 2003; Shindler et al., 2011)). As with (Voevodski et al., 2012), the guarantees for these algorithms do not immediately translate into an exact recovery guarantee, making it challenging to transform these approaches into hierarchical clustering algorithms. Moreover, the success of spectral clustering in practice suggests that an efficient spectral algorithm would also be very appealing. While there have been advances in this direction, the majority of these require the entire similarity matrix or graph to be known a priori (Frieze et al., 2004). Apart from (Shamir & Tishby, 2011), we know of no other spectral algorithm that optimizes the number of similarities needed."}, {"heading": "3. Main Results", "text": "Before proceeding with our main results, we first clarify some notation and introduce a hierarchical clustering model that we will analyze. We refer to A as any flat clustering algorithm, which takes as parameters a dataset and a natural number k, indicating the number of clusters to produce. Throughout the paper, k will denote the number of clusters at any split, and we will assume that k is known and fixed across the hierarchy. We let n be the number of objects in a datasets and define s to be a parameter to our algorithms, influencing the number of measurements used by our algorithm, where smaller s implies fewer measurements. The parameter s reflects a tradeoff between the measurement overhead and the statistical accuracy of our algorithms; increasing s increases the\nAlgorithm 1 ActiveCluster(A, s, {xi}ni=1, k) if n \u2264 s then return {xi}ni=1 Draw S \u2286 {xi}ni=1 of size s uniformly at random. C 1, . . . C  k \u2190 A(S, k).\nSet C1 \u2190 C 1, . . . Ck \u2190 C k. for xi \u2208 {xi}ni=1 \\ S do \u2200j \u2208 [k], \u03b1j \u2190 1|Cj |  xl\u2208Cj K(xi, xl).\nCargmaxj\u2208[k]\u03b1j \u2190 Cargmaxj\u2208[k]\u03b1j \u222a {xi}. end for\noutput {Cj , ActiveCluster(A, s, Cj , k)}kj=1\nrobustness of our method, albeit at the cost of requiring more measurements. Finally, our algorithms employ an abstract, possibly noisy similarity function K, which can model both cases where similarities are measured directly and where they are computed via some kernel function based on observed object features.\nDefinition 1 A hierarchical clustering C on objects {xi}ni=1 is a collection of clusters such that C0  {xi}ni=1 \u2208 C and for each Ci, Cj \u2208 C either Ci \u2282 Cj , Cj \u2282 Ci or Ci \u2229 Cj = \u2205. For any cluster C, if \u2203C  with C  \u2282 C, then there exists a set {Ci}ki=1 of disjoint clusters such that k i=1 Ci = C.\nEvery hierarchical clustering C has a parameter \u03b7 that quantifies how balanced the clusters are at any split. Formally, \u03b7 \u2265 maxsplits{C1,...,Ck} maxi |Ci| mini |Ci| , where each split is a non-terminal cluster, partitioned into {Ci}ki=1. \u03b7 upper bounds the ratio between the largest and smallest clusters sizes across all splits in C. This type of balancedness parameter has been used in previous analyses of clustering algorithms (Eriksson et al., 2011; Balakrishnan et al., 2011), and it is common to assume that the clustering is not too unbalanced. For clarity of presentation, we will state our results assuming \u03b7 = O(1), although our proofs contain a precise dependence between the level of activeness s and \u03b7."}, {"heading": "3.1. An Active Clustering Framework", "text": "Our primary contribution is the introduction of a novel framework for hierarchical clustering that is efficient both in terms of the number of similarities used and the algorithmic running time. To recover any single split of the hierarchy, we run a flat clustering algorithm A on a small subset of the data to compute a seed clustering of the dataset. Using this initial clustering, we place each remaining object into the seed cluster for which it is most similar on average. This results in a flat clustering of the entire dataset, using only similarities to the objects in the small subset.\nBy recursively applying this procedure to each cluster, we obtain a hierarchical clustering, using a small fraction of the similarities. In this recursive phase, we\ndo not observe any measurements between clusters at the previous split, i.e. to partition Cj , we only observe similarities between objects in Cj . This results in an active algorithm that focuses its measurements to resolve the higher-resolution cluster structure.\nPseudocode for ActiveCluster is shown in Algorithm 1. As a demonstration, in Figure 1, we show the sampling pattern of ActiveCluster on the first, and second splits of a hierarchy (top row), in addition to the patterns at the end of the computation (bottom right). Only the similarities shown in white are needed. As is readily noticeable, the algorithm uses very few similarities yet can recover this hierarchy.\nWe are now ready to state our main theoretical contribution which characterizes ActiveCluster in terms of probability of success in recovering the true hierarchy (denoted C), measurement and runtime complexity. In order to make these guarantees we will need to place some mild restrictions on the similarity function K, which ensure that the similarities agree with the hierarchy (up to some random noise):\nK1 For each xi \u2208 Cj \u2208 C and j = j:\nmin xk\u2208Cj [K(xi, xk)]\u2212 max xk\u2208Cj [K(xi, xk)] \u2265 \u03b3 > 0\nwhere expectations are taken with respect to the possible noise on K. K2 For each object xi \u2208 Cj , a set of Mj objects of size mj drawn uniformly from cluster Cj satisfies:\n\n min xk\u2208Cj\nE[K(xi, xk)]\u2212 \nxk\u2208Mj\nK(xi, xk)\nmj > \n\n\n\u2264 2 exp{\u22122mj 2\n\u03c32 }\nWhere \u03c32 \u2265 0 parameterizes the noise on the similarity function K. Similarly, a set Mj of size mj drawn uniformly from cluster Cj with j = j satisfies: \n \nxk\u2208Mj\nK(xi, xk)\nmj \u2212 max xk\u2208Cj E[K(xi, xk)] > \n\n\n\u2264 2 exp{\u22122mj 2\n\u03c32 }\nK1 states that the similarity from an object xi to its cluster should, in expectation, be larger than the the similarity from that object to any other cluster. This is related to the Tight-Clustering condition used in (Eriksson et al., 2011) and less stringent than earlier results which assume that within- and between-cluster similarities are constant and bounded in expectation (Rohe et al., 2010). Moreover, an assumption of this form seems necessary to ensure that even in expectation one could identify the clustering. Lastly, K2 enforces that within- and between-cluster similarities concentrate away from each other. This condition is satisfied, for example, if similarities are constant in expectation, perturbed with any subgaussian noise. We emphasize that K2 subsumes many of the assumptions of previous clustering analyses (for example (Balakrishnan et al., 2011; Rohe et al., 2010)).\nTheorem 1 Let {xi}ni=1 be a dataset with true hierarchical clustering C, let K be a similarity function satisfing assumptions K1 and K2 and consider any flat clustering algorithm A with the following property:\nA1 For any dataset {yi}mi=1 with clustering C where K satisfies K1 and K2, A({yi}mi=1, k) returns the first split of C into k clusters with probability \u2265 1\u2212 o( kc1em ) for some constant c1 > 0. Then ActiveCluster(A, s, {xi}ni=1, k):"}, {"heading": "R1 recovers all clusters of size at least s with probability 1\u2212o(n2e\u2212cs), for some constant c = c(\u03b7, \u03b3).", "text": "This probability of success is 1\u2212 o(1) as long as:\ns \u2265 max\n \n\n1 c1 log n 4(1 + \u03b7)2 log n\n24 1 + \u03b7\n\u03b32 log(4C\u03b7kn)\n \n\n= \u2126(log(nk)) (1)\nR2 uses O(ns log n) similarity measurements. R3 runs in time O(nAs + ns log n) where A on a\ndatasets of size s runs in time O(As).\nAt a high level, the theorem says that the clustering guarantee for a flat, non-active algorithm, A, can be\ntranslated into a hierarchical clustering guarantee for an active version of A, and that this active algorithm enjoys significantly reduced measurement and runtime complexity. The only property needed by A is that it recovers a flat clustering with very high probability. While the probability of success seems strangely high, we will show that for a fairly intuitive model, a simple spectral clustering algorithm enjoys this kind of guarantee. Verifying that the model satisfies the conditions K1 and K2, immediately results in a guarantee for the active version of this spectral algorithm.\nBefore delving into the proof of the theorem, some remarks are in order. First, by plugging in the lower bound for s into the upper bound on the measurement complexity, we see that ActiveCluster needs O(n log(nk) log n) similarities, which is considerably less than the O(n2) similarities required by a nonactive algorithm. Second, at the lower bound for s, we see that unless A runs in exponential time, ActiveCluster runs in O\u0303(n), which is significantly faster than any clustering algorithm that observes all of the similarities and must take \u2126(n2) time.\nWe now turn to the proof of R1. Due to space limitations, we defer many details and technical lemmas to the appendix. The proofs for R2 and R3 are straightforward, involving counting arguments on trees, and are also available in the appendix.\nProof for R1: We study the sampling, clustering and averaging phases of ActiveCluster in turn. In the sampling phase, we demonstrate that choosing s objects at random does not result in a highly unbalanced subset. Using bernoulli concentration inequalities and a union bound we show that the balance factor across all splits is at most 2\u03b7 + 1 with probability \u2265 1\u2212 o(ne\u2212c\u03b7,\u03b3s), which goes to 1 under Equation 1.\nFor the clustering phase, Lemma 3 (in the appendix) shows that the total number of calls to A is at most n k\u22121 and each time we call A we have a probability of success \u2265 1\u2212o( kec1s ) by assumption A1. It is now easy to see that the probability of A failing at any split is o(n exp{\u2212s}), which is o(1) under Equation 1.\nIn the averaging phase, we need to show that for each split of the hierarchy and object xi, the sample average within cluster similarity is larger than the sample average between cluster similarity. Under assumption K1 and K2, we know that these quantities concentrate away from each other. Via a union bound across all objects and all levels of the hierarchy, we can conclude that the probability of making a mistake in any averaging procedure is O(nk log n exp{ \u2212\u03b3 2s\n4(1+\u03b7)}) which again goes to zero as long as s satisfies Equation 1.\nAlgorithm 2 SpectralCluster(W )\nCompute Laplacian L = D \u2212W , Dii = n\nj=1 Wij\nv2 \u2190 smallest non-constant eigenvector of L. C1 \u2190 {i : v2(i) \u2265 0}, C2 \u2190 {j : v2(j) < 0}\noutput {C1, C2}."}, {"heading": "3.2. Active Spectral Clustering", "text": "To make the guarantees in Theorem 1 more concrete, we show how to translate this into real guarantees for a specific subroutine algorithm A. In this section, we turn a simple spectral algorithm (See pseudocode in Algorithm 2) into an active clustering algorithm, using the analysis from (Balakrishnan et al., 2011). The algorithm operates on hierarchically structured similarity matrices refered to as the noisy Hierarchical Block Matrices (again from (Balakrishnan et al., 2011)). These are defined as follows:\nDefinition 2 A similarity matrix W is a noisy hierarchical block matrix (noisy HBM) if W  A + R where A is ideal and R is a perturbation matrix:\n\u2022 An ideal similarity matrix is characterized by ranges of off-block diagonal similarity values\n[\u03b1\u03be,\u03b2\u03be] for each cluster C\u03be such that if x \u2208 C\u03be\u25e6L and y \u2208 C\u03be\u25e6R, where C\u03be\u25e6L and C\u03be\u25e6R are two sub-clusters of C\u03be at the next level in a binary hierarchy, then \u03b1\u03be \u2264 Ax,y \u2264 \u03b2\u03be. Additionally, min{\u03b1\u03be\u25e6R,\u03b1\u03be\u25e6L} \u2265 \u03b2\u03be. \u2022 A symmetric (n \u00d7 n) matrix R is a perturbation matrix with parameter \u03c3 if (a) (Rij) = 0, (b) the entries of R are subgaussian, that is\n(exp(tRij)) \u2264 exp  \u03c32t2\n2\n and (c) for each row\ni, Ri1, . . . Rin are independent.\nTo apply Theorem 1, we need to verify that the assumption K1 and K2 are met and SpectralCluster succeeds with exponentially high probability. Checking that these conditions hold as long as \u03c3 = O(1) results in the following guarantees for ActiveSpectral, the active version of SpectralCluster. Proof of this theorem is deferred to the appendix.\nTheorem 2 Let W be a noisy HBM with \u03c3 = O(1) and \u03b7 = O(1). Then, ActiveSpectral succeeds in recovering all clusters of size s with probability 1 \u2212 o(1) as long as Equation 1 holds. Moreover, ActiveSpectral uses O(ns log n) measurements and runs in O(ns2 log s+ ns log n) time.\nThe results of this theorem quantify one extreme of the tradeoff between statistical robustness and measurement complexity for hierarchical spectral algorithms. In particular, it states that ActiveSpectral can tolerate a constant amount of noise while using only O(n log2 n) measurements. At the other end of this\nspectrum is the result of Balakrishnan et. al. (2011), showing that using O(n2) measurements, one can tolerate noise that grows fairly rapidly with n. Varying s allows for interpolation between these two extremes.\n3.3. Active k-means clustering\nIt is also possible to activize the popular k-means algorithm in our framework, but we cannot prove statistical performance guarantees since it is unknown whether k-means satisfies assumption A1. Activizing k-means helps illuminate the differences between observing similarities directly and computing similarities from directly observed object features. Conventionally, k-means fits into the latter framework. Here, the active version does not enjoy a reduced measurement complexity, because all of the objects must be observed, but it can reduce the number of similarity computations from nkT to skT + (n\u2212 s)kT , since the iterative subroutine runs on only s objects for T iterations. In cases where the similarity function is expensive to compute, such as edit distance, this can lead to gains in running time.\nA less traditional way to use k-means is to represent each object as a n-dimensional vector of its similarity to each other object. Here, we can apply k-means to a n \u00d7 n similarity matrix, much like we can apply SpectralCluster and this algorithm can be activized using our framework. While we cannot develop theoretical guarantees for this algorithm, which we call ActiveKMeans, our experiments demonstrate that it performs very well in practice."}, {"heading": "3.4. Some Practical Considerations", "text": "Our algorithm as stated has some shortcomings that enable theoretical analysis but that are undesirable for practical applications. Specifically, the fact that k is known and constant across splits in the hierarchy, and the balancedness condition are both assumptions that are likely to be violated in any real-world setting. We therefore develop a variant of ActiveSpectral, called HeurSpec, with several heuristics.\nFirst, we employ the popular eigengap heuristic, in which the number of clusters k is chosen so that the gap in eigenvalues \u03bbk+1\u2212 \u03bbk of the Laplacian is large. Secondly, we propose discarding all subsampled objects with low degree (when restricted to the sample) in the hopes of removing underrepresented clusters from the sample. In the averaging phase, if an object is not highly similar to any cluster represented in the sample, we create a new cluster for this object. We expect that in tandem, these two heuristics will help us recover small clusters. By comparing the performance of HeurSpec to that of ActiveSpectral, we indirectly evaluate these heuristics."}, {"heading": "4. Simulations", "text": "In this section we present experiments that verify our theoretical results. By Theorem 2, we expect ActiveSpectral to be robust to a constant amount of noise \u03c3, meaning that it will recover all sufficiently large splits with high probability. In comparison, Balakrishnan et. al. (2011), show that SpectralCluster can tolerate noise growing with n. We constrast these guarantees by plotting the probability of successful recovery of the first split in a noisy HBM as a function of \u03c3 for different n in Figure 2. 2(a) demonstrates that indeed the noise tolerance of SpectralCluster grows with n while 2(c) demonstrates that ActiveSpectral enjoys constant noise tolerance. Figures 2(b) and 2(d) suggest that similar guarantees may hold for k-means and ActiveKMeans.\nOur theory also predicts that increasing the activeness parameter improves the statistical performance of ActiveSpectral. To demonstrate this, we plot the probability of successful recovery of the first split of a noisy HBM of size n = 256 as a function of s for fixed noise variance. We compare three algorithms, ActiveSpectral, ActiveKMeans, and Algorithm 1 from (Shamir & Tishby, 2011), which subsamples entries of the similarity matrix. In theory, ActiveSpectral requires \u2126(n log n) total measurements to recover a single split, whereas (Shamir & Tishby, 2011) show that their algorithm requires \u2126(n log3/2 n). Figure 2(e) demonstrates that this improvement is also noticeable in practice. ActiveKMeans seems to enjoy an even more favorable dependence on s.\nThe simulations in Figures 2(a)-(e) only examine the ability of our algorithms to recover the first split of a\nhierarchy, while our theory predicts that all sufficiently large clusters can be reliably recovered. One way to measure this is the outlier fraction metric between the clustering returned by an algorithm and the true hierarchy (Eriksson et al., 2011). For any triplet of objects xi, xj , xk we say that the two clusterings agree on this triplet if they both group the same pair of objects deeper in the hierarchy relative to the third object and disagree otherwise. The outlier fraction is simply the fraction of triplets for which the two clusterings agree.\nIn Figure 2(f), we plot the outlier fraction for six algorithms as a function of \u03c3 on the noisy HBM. The algorithms are: Hierarchical Spectral (SC), Single Linkage (SL), HeurSpec (HSC), ActiveSpectral (ASC), Hierarchical k-Means (KM), and ActiveKMeans (AKM). These experiments demonstrate that the non-active algorithms (except single linkage) are much more robust to noise than the corresponding active ones, as predicted by our theory, but also that the heuristics described in Section 3.4 have dramatic impact on performance.\nLastly, we verify the measurement and run time complexity guarantees for our active algorithms in comparison to the non-active versions. In Figure 2(g) and 2(h), we plot the number of measurements and running time as a function of n on a log-log plot for each algorithm. The three non-active algorithms have steeper slopes than the active ones, suggesting that they are polynomially more expensive in both cases."}, {"heading": "5. Real World Experiments", "text": "To demonstrate the practical performance of the ActiveCluster framework, we apply our algorithms to\nthree real-world datasets and one additional synthetic dataset. The datasets are: The set of articles from NIPS volumes 0 through 12 from (Roweis, 2002), a subset of NPIC500 co-occurence data from the Readthe-Web project (Mitchell, 2009) which we call RTW, a SNP dataset from the HGDP (Pemberton et al., 2008), and a synthetic phylogeny dataset produced using phyclust (Chen, 2010). We refer the reader to the appendix for additional details on these datasets.\nIn the phylogeny and SNP datasets, we have access to a reference tree that can be used in our evaluation. In these cases we can report the outlier fraction, as we did in simulation. However, the other datasets lack such ground truth and without it, evaluating the performance of each algorithm is non-trivial. Indeed, there is no well-established metric for this sort of evaluation.\nFor this reason, we employ two distinct metrics to evaluate the quality of hierarchical clusterings. They are a hierarchical K-means objective (HKM) (Kauchak & Dasgupta, 2003) and an analogous hierarchical ratiocut (HRC) objective, both of which are natural generalizations of the k-means and ratio cut objectives respectively, averaging across clusters, and removing small clusters as they bias the objectives. Formally,\nlet C be the hierarchical clustering and let C\u0304 be all of the clusters in C that are larger than log n. For each C \u2208 C\u0304 let xC be the cluster center. Then:\nHKM(C) = 1 |C\u0304| \nC\u2208C\u0304\n1 |C| \nxj\u2208C\nxTj xC\n||xj ||||xC || (2)\nHRC(C) = 1 |C\u0304| \nC\u2208C\u0304\n\nCk\u2286C\nK(Ck, C \\ Ck) 2|Ck| (3)\nIn Table 1 and 2, we record experimental results across the datasets for our algorithms. On the read-the-web dataset, we were unable to run the non-active algorithms. On the SNP and phylogeny datasets, we include computing similarities via edit distance in the running time of each algorithm, noting that computing all pairs takes 6500 and 15000 seconds respectively. The immediate observation is that these algorithms are extremly fast; on the SNP and phylogeny datasets where computing similarities is the bottleneck, activization leads to significant performance improvements. Moreover, the algorithms perform well by our metrics; they find clusterings that score well according to HKM and HRC, or that have reasonable agreement with the reference clustering1.\nWe are also interested in more qualitatively understanding the performance of these algorithms. For the NIPS data, we manually collected a small subset of articles and visualized the hierarchy produced by ActiveKMeans restricted to these objects. The hierarchy in Figure 3 is what one would expect on the subset, attesting to the performanceActiveKMeans. On the other hand, this same kind of evaluation on the RTW data demonstrates that active algorithms do not perform well on this dataset, while the non-active algorithms do. We suspect this is caused by the RTW dataset consisting of many small clusters that do not get sampled by the ActiveCluster framework.\n1 The SNP dataset is a k-way hierarchy and our algorithms (apart from HeurSpec) recover binary hierarchies that cannot have high agreement with the reference.\nFor the SNP and phylogeny datasets, the permuted heatmaps are clear enough to be used in qualitative evaluations. These heatmaps are shown in Figure 4, and they suggest that all three active algorithms perform very well on these datasets. Heatmaps for the remaining datasets are less clear, but for completeness we include them in the appendix."}, {"heading": "6. Discussion", "text": "Our results in this paper, showing that a family of active hierarchical clustering algorithms have strong performance guarantees, raise several interesting questions. We showed that ActiveSpectral enjoys reasonable statistical performance, but can other algorithms be activized while retaining statistical properties? Second, are there principled ways to circumvent a balancedness condition, even when objects are subsampled? Finally, is there a theoretically justified approach for estimating the number of clusters, k?\nAnother direction relates not toward clustering, but toward the recently popular matrix completion problem. On hierarchically structured matrices, our results imply that an active algorithm can recover high-rank (rank n/ log n) matrices using O(n log2 n) similarities, an improvement over non-active approaches. Active algorithms may therefore yield impressive guarantees for matrix completion and related problems, and we hope to explore this direction in the future."}, {"heading": "Acknowledgements", "text": "This research is supported in part by AFOSR under grant FA9550-10-1-0382 and NSF under grant IIS1116458. AK is supported in part by a NSF Graduate Research Fellowship."}], "references": [{"title": "Fast computation of low rank matrix approximations", "author": ["D. Achlioptas", "F. McSherry"], "venue": "In STOC,", "citeRegEx": "Achlioptas and McSherry,? \\Q2001\\E", "shortCiteRegEx": "Achlioptas and McSherry", "year": 2001}, {"title": "Noise thresholds for spectral clustering", "author": ["S. Balakrishnan", "M. Xu", "A. Krishnamurthy", "A. Singh"], "venue": "In NIPS,", "citeRegEx": "Balakrishnan et al\\.,? \\Q2011\\E", "shortCiteRegEx": "Balakrishnan et al\\.", "year": 2011}, {"title": "Robust hierarchical clustering", "author": ["M.F. Balcan", "P. Gupta"], "venue": "In COLT,", "citeRegEx": "Balcan and Gupta,? \\Q2010\\E", "shortCiteRegEx": "Balcan and Gupta", "year": 2010}, {"title": "Better streaming algorithms for clustering problems", "author": ["M. Charikar", "L. O\u2019Callaghan", "Panigrahy", "Rina"], "venue": "In STOC,", "citeRegEx": "Charikar et al\\.,? \\Q2003\\E", "shortCiteRegEx": "Charikar et al\\.", "year": 2003}, {"title": "Phylogenetic Clustering with R package phyclust", "author": ["W.C. Chen"], "venue": "URL http://thirteen-01.stat.iastate. edu/snoweye/phyclust/", "citeRegEx": "Chen,? \\Q2010\\E", "shortCiteRegEx": "Chen", "year": 2010}, {"title": "Global versus local methods in nonlinear dimensionality reduction", "author": ["V. de Silva", "J.B. Tenenbaum"], "venue": "In NIPS,", "citeRegEx": "Silva and Tenenbaum,? \\Q2002\\E", "shortCiteRegEx": "Silva and Tenenbaum", "year": 2002}, {"title": "Active Clustering: Robust and Efficient Hierarchical Clustering using Adaptively Selected Similarities", "author": ["B. Eriksson", "G. Dasarathy", "A. Singh", "R. Nowak"], "venue": null, "citeRegEx": "Eriksson et al\\.,? \\Q2011\\E", "shortCiteRegEx": "Eriksson et al\\.", "year": 2011}, {"title": "Fast montecarlo algorithms for finding low-rank approximations", "author": ["A.M. Frieze", "R. Kannan", "S. Vempala"], "venue": "J. ACM,", "citeRegEx": "Frieze et al\\.,? \\Q2004\\E", "shortCiteRegEx": "Frieze et al\\.", "year": 2004}, {"title": "An iterative improvement procedure for hierarchical clustering", "author": ["D. Kauchak", "S. Dasgupta"], "venue": "In NIPS,", "citeRegEx": "Kauchak and Dasgupta,? \\Q2003\\E", "shortCiteRegEx": "Kauchak and Dasgupta", "year": 2003}, {"title": "Noun phrases in context 500 dataset, 2009. URL http://www.cs.cmu.edu/~tom/10709_ fall09/RTWdata.html", "author": ["T. Mitchell"], "venue": null, "citeRegEx": "Mitchell,? \\Q2009\\E", "shortCiteRegEx": "Mitchell", "year": 2009}, {"title": "Using population mixtures to optimize the utility of genomic databases: linkage disequilibrium and association study design in India", "author": ["T.J. Pemberton", "M. Jakobsson", "D.F. Conrad", "G. Coop", "J.D. Wall", "J.K. Pritchard", "P.I. Patel", "N.A. Rosenberg"], "venue": "Ann. Hum. Genet.,", "citeRegEx": "Pemberton et al\\.,? \\Q2008\\E", "shortCiteRegEx": "Pemberton et al\\.", "year": 2008}, {"title": "Spectral Clustering and the High-Dimensional Stochastic Block Model", "author": ["K. Rohe", "S. Chatterjee", "B. Yu"], "venue": "Technical Report 791,", "citeRegEx": "Rohe et al\\.,? \\Q2010\\E", "shortCiteRegEx": "Rohe et al\\.", "year": 2010}, {"title": "Fast and accurate k-means for large datasets", "author": ["M. Shindler", "A. Meyerson", "A. Wong"], "venue": "In NIPS,", "citeRegEx": "Shindler et al\\.,? \\Q2011\\E", "shortCiteRegEx": "Shindler et al\\.", "year": 2011}, {"title": "Active Clustering of Biological Sequences", "author": ["K. Voevodski", "M.F. Balcan", "H. R\u00f6glin", "S. Teng", "Y. Xia"], "venue": "Journal of Machine Learning Research,", "citeRegEx": "Voevodski et al\\.,? \\Q2012\\E", "shortCiteRegEx": "Voevodski et al\\.", "year": 2012}], "referenceMentions": [{"referenceID": 1, "context": "By appealing to previous statistical guarantees (Balakrishnan et al., 2011), we can show that this algorithm has desirable theoretical properties, both in terms of statistical and computational performance.", "startOffset": 48, "endOffset": 75}, {"referenceID": 6, "context": "There is a large body of work on hierarchical and partitional clustering algorithms, many coming with various theoretical guarantees, but only few algorithms attempt to minimize the number of pairwise similarities used (Eriksson et al., 2011; Balcan & Gupta, 2010; Shamir & Tishby, 2011).", "startOffset": 219, "endOffset": 287}, {"referenceID": 6, "context": "There is a large body of work on hierarchical and partitional clustering algorithms, many coming with various theoretical guarantees, but only few algorithms attempt to minimize the number of pairwise similarities used (Eriksson et al., 2011; Balcan & Gupta, 2010; Shamir & Tishby, 2011). Along this line, the work of Eriksson et. al. (2011) and Shamir and Tishby (2011) is closest in flavor to ours.", "startOffset": 220, "endOffset": 342}, {"referenceID": 6, "context": "There is a large body of work on hierarchical and partitional clustering algorithms, many coming with various theoretical guarantees, but only few algorithms attempt to minimize the number of pairwise similarities used (Eriksson et al., 2011; Balcan & Gupta, 2010; Shamir & Tishby, 2011). Along this line, the work of Eriksson et. al. (2011) and Shamir and Tishby (2011) is closest in flavor to ours.", "startOffset": 220, "endOffset": 371}, {"referenceID": 13, "context": "Recently (Voevodski et al., 2012) proposed an active algorithm for flat k-way clustering that selects O(k) landmarks and partitions the objects using distances to these landmarks.", "startOffset": 9, "endOffset": 33}, {"referenceID": 5, "context": "This idea of selecting landmarks bears strong resemblence to the first phase of our active clustering algorithm and also has connections to the Landmark MDS algorithm of de Silva and Tenenbaum (2002). These approaches are tied to specific algorithms, while our framework is much more general.", "startOffset": 173, "endOffset": 200}, {"referenceID": 3, "context": "A related direction is the body of work on efficient streaming and online algorithms for approximating the k-means and k-medians objectives (See for example (Charikar et al., 2003; Shindler et al., 2011)).", "startOffset": 157, "endOffset": 203}, {"referenceID": 12, "context": "A related direction is the body of work on efficient streaming and online algorithms for approximating the k-means and k-medians objectives (See for example (Charikar et al., 2003; Shindler et al., 2011)).", "startOffset": 157, "endOffset": 203}, {"referenceID": 13, "context": "As with (Voevodski et al., 2012), the guarantees for these algorithms do not immediately translate into an exact recovery guarantee, making it challenging to transform these approaches into hierarchical clustering algorithms.", "startOffset": 8, "endOffset": 32}, {"referenceID": 7, "context": "While there have been advances in this direction, the majority of these require the entire similarity matrix or graph to be known a priori (Frieze et al., 2004).", "startOffset": 139, "endOffset": 160}, {"referenceID": 6, "context": "This type of balancedness parameter has been used in previous analyses of clustering algorithms (Eriksson et al., 2011; Balakrishnan et al., 2011), and it is common to assume that the clustering is not too unbalanced.", "startOffset": 96, "endOffset": 146}, {"referenceID": 1, "context": "This type of balancedness parameter has been used in previous analyses of clustering algorithms (Eriksson et al., 2011; Balakrishnan et al., 2011), and it is common to assume that the clustering is not too unbalanced.", "startOffset": 96, "endOffset": 146}, {"referenceID": 6, "context": "This is related to the Tight-Clustering condition used in (Eriksson et al., 2011) and less stringent than earlier results which assume that within- and between-cluster similarities are constant and bounded in expectation (Rohe et al.", "startOffset": 58, "endOffset": 81}, {"referenceID": 11, "context": ", 2011) and less stringent than earlier results which assume that within- and between-cluster similarities are constant and bounded in expectation (Rohe et al., 2010).", "startOffset": 147, "endOffset": 166}, {"referenceID": 1, "context": "We emphasize that K2 subsumes many of the assumptions of previous clustering analyses (for example (Balakrishnan et al., 2011; Rohe et al., 2010)).", "startOffset": 99, "endOffset": 145}, {"referenceID": 11, "context": "We emphasize that K2 subsumes many of the assumptions of previous clustering analyses (for example (Balakrishnan et al., 2011; Rohe et al., 2010)).", "startOffset": 99, "endOffset": 145}, {"referenceID": 1, "context": "In this section, we turn a simple spectral algorithm (See pseudocode in Algorithm 2) into an active clustering algorithm, using the analysis from (Balakrishnan et al., 2011).", "startOffset": 146, "endOffset": 173}, {"referenceID": 1, "context": "The algorithm operates on hierarchically structured similarity matrices refered to as the noisy Hierarchical Block Matrices (again from (Balakrishnan et al., 2011)).", "startOffset": 136, "endOffset": 163}, {"referenceID": 6, "context": "One way to measure this is the outlier fraction metric between the clustering returned by an algorithm and the true hierarchy (Eriksson et al., 2011).", "startOffset": 126, "endOffset": 149}, {"referenceID": 9, "context": "The datasets are: The set of articles from NIPS volumes 0 through 12 from (Roweis, 2002), a subset of NPIC500 co-occurence data from the Readthe-Web project (Mitchell, 2009) which we call RTW, a SNP dataset from the HGDP (Pemberton et al.", "startOffset": 157, "endOffset": 173}, {"referenceID": 10, "context": "The datasets are: The set of articles from NIPS volumes 0 through 12 from (Roweis, 2002), a subset of NPIC500 co-occurence data from the Readthe-Web project (Mitchell, 2009) which we call RTW, a SNP dataset from the HGDP (Pemberton et al., 2008), and a synthetic phylogeny dataset produced using phyclust (Chen, 2010).", "startOffset": 221, "endOffset": 245}, {"referenceID": 4, "context": ", 2008), and a synthetic phylogeny dataset produced using phyclust (Chen, 2010).", "startOffset": 67, "endOffset": 79}], "year": 2012, "abstractText": "Advances in sensing technologies and the growth of the internet have resulted in an explosion in the size of modern datasets, while storage and processing power continue to lag behind. This motivates the need for algorithms that are efficient, both in terms of the number of measurements needed and running time. To combat the challenges associated with large datasets, we propose a general framework for active hierarchical clustering that repeatedly runs an off-the-shelf clustering algorithm on small subsets of the data and comes with guarantees on performance, measurement complexity and runtime complexity. We instantiate this framework with a simple spectral clustering algorithm and provide concrete results on its performance, showing that, under some assumptions, this algorithm recovers all clusters of size \u03a9(log n) using O(n log n) similarities and runs in O(n log n) time for a dataset of n objects. Through extensive experimentation we also demonstrate that this framework is practically alluring.", "creator": "Preview"}}}