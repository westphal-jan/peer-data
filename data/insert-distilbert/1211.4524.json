{"id": "1211.4524", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "19-Nov-2012", "title": "Applying Dynamic Model for Multiple Manoeuvring Target Tracking Using Particle Filtering", "abstract": "in this paper, we applied a dynamic model for determining manoeuvring targets in sir particle filter algorithm for drastically improving tracking accuracy of multiple manoeuvring targets. in our proposed approach, a color distribution model is used to detect changes of target's model. our proposed mapping approach controls deformation of target's model. if deformation of target's model is larger than a predetermined threshold, then the model will be updated. global nearest parallel neighbor ( gnn ) algorithm implementation is used as data association algorithm. we named our proposed method as deformation detection particle filter ( bsc ddpf ). ddpf approach is compared with basic sir - pf algorithm on real airshow videos. comparisons results show that, the basic sir - pf algorithm is not able to track the manoeuvring targets when the rotation or differential scaling is occurred in target's profile model. however, ddpf approach updates target's gradient model when the rotation or inverse scaling is occurred. thus, the proposed approach is able to track the manoeuvring targets more efficiently and accurately.", "histories": [["v1", "Mon, 19 Nov 2012 18:07:44 GMT  (1916kb)", "http://arxiv.org/abs/1211.4524v1", "13 pages, 7 Figures, 1 Table"]], "COMMENTS": "13 pages, 7 Figures, 1 Table", "reviews": [], "SUBJECTS": "cs.CV cs.AI", "authors": ["mohammad javad parseh", "saeid pashazadeh"], "accepted": false, "id": "1211.4524"}, "pdf": {"name": "1211.4524.pdf", "metadata": {"source": "CRF", "title": "MANOEUVRING TARGET TRACKING USING PARTICLE FILTERING", "authors": ["Mohammad Javad Parseh", "Saeid Pashazadeh"], "emails": ["@ms."], "sections": [{"heading": null, "text": "DOI:10.5121/ijitca.2012.2404 37\nIn this paper, we applied a dynamic model for manoeuvring targets in SIR particle filter algorithm for improving tracking accuracy of multiple manoeuvring targets. In our proposed approach, a color distribution model is used to detect changes of target's model . Our proposed approach controls deformation of target's model. If deformation of target's model is larger than a predetermined threshold, then the model will be updated. Global Nearest Neighbor (GNN) algorithm is used as data association algorithm. We named our proposed method as Deformation Detection Particle Filter (DDPF) . DDPF approach is compared with basic SIR-PF algorithm on real airshow videos. Comparisons results show that, the basic SIR-PF algorithm is not able to track the manoeuvring targets when the rotation or scaling is occurred in target' s model. However, DDPF approach updates target's model when the rotation or scaling is occurred. Thus, the proposed approach is able to track the manoeuvring targets more efficiently and accurately.\nKEYWORDS\nMultiple manoeuvring target tracking , particle filtering , video tracking , dynamic models."}, {"heading": "1. INTRODUCTION", "text": "Multi target tracking is one of the important research areas in computer vision. Human tracking in monitoring applications and aircraft tracking in military applications are known as important applications areas of multi target tracking. Multi target tracking includes two main stages: 1) pose\nestimation and 2) data association. Kalman filtering and grid-based methods are the most important methods for pose estimation that are used in linear systems with Gaussian noises. For linear-Gaussian systems, Kalman filter is an analytical and optimal method. Particle filtering is a numerical and suboptimal method that is used for pose estimation. Unlike the Kalman filtering, Particle filtering method can be used in non-linear system with non-Gaussian noises. This is the\nmost important advantage of particle filtering over other methods. Estimation of manoeuvring\ntarget' s state is one of the most important problems in pose estimation. Multiple Model (MM)\napproach is a common solution to resolve this problem [1-3]. Target' s posteriori density function\nis represented by weighted sum of the output of several parallel filters in MM approach [4]. A\nreal-time approach is presented in [1 5 ] for tracking a manoeuvring target by incorporating dynamic components in the target model. They employed particle filter based tracker. This tracker exploits a first order dynamic model and continuously performs adaptation of model noise for balancing uncertainty between the static and dynamic components of the state vector. The presented experimental evaluation shows that this approach is particularly effective in video sequences where appearance and motion have quick changes and there are partial or full target\nocclusions.\nData association algorithm associates each measurement to track. In cluttered environments, measurements may arise from detected targets or clutter. From the view of implementation, Global Nearest Neighbor (GNN) is the simplest method for data association [ 5 ]. Usually, this method is more efficient in clutter-free environments. One of the most common data association methods is Joint Probabilistic Data Association (JPDA) [ 6 ]. In this method, the probability of each measurement associated with each track is calculated. Multiple Hypothesis Tracking (MHT) is the most complex method for data association that is efficient for cluttered environments [ 7 ]. In MHT method, each hypothesis is a measurement-to-track association. Set of all hypothesizes is considered, and likelihood of each hypothesis is calculated. One of the best methods for obtaining best hypothesis is presented by Nummiaro et. al. [ 8 ]. In MHT method, the best hypothesis is chosen through the set of all hypothesizes by using a statistical approach, whereas in the JPDA method, an average of target state is calculated on all hypothesizes. This is the main difference between JPDA method and MHT method. In this paper, DDPF algorithm is proposed by\nimproving the basic SIR algorithm for tracking the multiple manoeuvring targets using a dynamic model for targets.\nRemaining sections of this paper is organised as follows: In section 2 , particle filter method is\nintroduced briefly. In section 3 , basic SIR particle filter algorithm is introduced and in section 4 ,\ntarget representation model is explained. In section 5 , a dynamic equation for manoeuvring target\nand in section 6 , likelihood function is presented. In section 7 , we briefly describe data\nassociation algorithm. In section 8 , a new method is presented for deformation detection. In\nsection 9 , conditions of experiments is presented . In section 10, we compare results of our\nproposed DDPF method and basic SIR algorithm in multiple manoeuvring target tracking.\nFinally, in section 1 1 , we\u2019ll discuss about and make conclusion from experimental results."}, {"heading": "2. PARTICLE F ILTER", "text": "Appropriate pose estimation method should be chosen according to tracking conditions. If the system is linear and system noise is Gaussian, Kalman filter is most appropriate method to pose\nestimation. But, if the system' s dynamic equation is non-linear and system noise is non-Gaussian, an approximation technique should be used. One of the most common numerical and approximation methods to pose estimation is sequential Monte Carlo [9]. This technique is known\nas particle filter [10] or Monte Carlo [11] . Let assume Xt denotes the target' s state at time t , and Zt\ndenotes the set of all measurements zt up to time t . The main idea in particle filtering is representation of probability distribution function (pdf) by a set of weighted samples. Suppose\nthat ( ){ }( ) ( ), | 1,...,n nS s n N\u03c9= = is a set of weighted samples where ( ) 1\n1 N n n \u03c9 = =\u2211 , then the posteriori\ndensity function is represented as follows.\n( ) ( ) 1\n| N i i t t t t t\ni p X Z X X\u03c9 \u03b4 = \u2248 \u2212\u2211 (1)\nwhere it\u03c9 is the weight of sample i at time t which is calculated by following equation.\n( ) ( ) ( ) 1 1\n1\n| |\n| ,\ni i i\nt t t ti i t t i i\nt t t\np z X p X X\nq X X z \u03c9 \u03c9\n\u2212\n\u2212\n\u2212\n\u221d (2)\nw here ( ).q is importance density function which is used in sampling step. This method is called\nSampling Importance Sampling (SIS). In the equation ( 1 ), \u03b4 is Kronecker delta function which\nis defined as follows:\n( ) 1 0\n0 0\nt t\nt \u03b4\n= = \n\u2260\n(3)\nI n this paper, target\u2019 s state is defined as follows :\n( ){ }, | 1,...,k kt t tX x y k T= = (4)\nw here k tx and k ty are coordinates of target k at time t in video screen, and T is the number of\ntargets. The particle filter method includes two main stages: prediction and update. In the\nprediction stage, particles of next step are obtained by using current particles and state transition equation. In the update stage, a weight is assigned to each particle using the available measurements. After the weight assignment, posteriori density function is calculated by equation\n( 1 ). Then the target' s next state is computed by a weighted average on the next step particles using\nfollowing equation:\n1\n\u02c6 N i i\nt t t\ni X X\u03c9 = =\u2211 (5)"}, {"heading": "3. SIR PARTICLE FILTER", "text": "One of the big challenges in implementation of SIS particle filter algorithm is appropriate choice of importance density function ( ).q . This function is used in sampling step. Accuracy of pose estimation increases by increasing the similarity between importance density function and posteriori density function. Another problem in implementation of particle filter is degeneracy problem. After several iteration of particle filter algorithm, some of the particles have very small\nweight. This means that, some of the particles don\u2019t have effect on calculation of posteriori density function. This is an adverse event. There are two solutions to overcome the degeneracy\nproblem: 1) appropriate choice of importance density function 2) resampling. Both of these\nsolutions are used in SIR approach. State transition function is considered as importance density\nfunction.\n( ) ( ) ( )1 1| , | ,t i i t t t t t X t t q X X z p X X X\u2212 \u2212= = \u039d \u2211 (6)\nThis is a suboptimal choice for importance density function. After state estimation in each step of SIR algorithm, current samples are resampled. After the resampling step, weights of samples are equal to 1 N ( N is the number of samples). If the state transition function is considered as importance density function, then the particle weights are calculated by following equation:\n( )1 |i i it t t tp z X\u03c9 \u03c9 \u2212\u221d (7)\nEquation ( 7 ) should be modified as follows, because weights of samples are equal to 1 N after the resampling step.\n( )|i it t tp z X\u03c9 = (8)\nwhere ( )| it tp z X is likelihood of each particle at time t ."}, {"heading": "4. TARGET REPRESENTATION MODEL", "text": "In this paper, each target\u2019 s state is represented by a rectangle. Center of the rectangle denotes the\ntarget\u2019s current state, and dimensions of the rectangle are adjusted by target's size. Fig.1 shows\nthe representation model of targets. In this figure, xH and yH are dimensions of surrounding\nrectangle of target object, and ( ),x y denotes the current state of each target. Model of each target\nconsists of the target' s state and dimensions of surrounding rectangle. If changes of the model become larger than the predetermined threshold then target\u2019s model will be updated. When the target model is updated, both target state and dimensions of corresponding rectangle will be\nupdated."}, {"heading": "5. SYSTEM DYNAMIC EQUATION", "text": "In this paper, we used real-world videos. These videos are extracted from real airshow videos that obtained from internet. In these videos, camera is movable. Sudden motion of camera causes undesirable motion in trajectory lines of targets. So, a discrete-time random walk process is\nconsidered as state transition equation for each target. In random walk model, the state transition\nequation is defined as follows.\n1t t tX X \u03c5\u2212= + (9)\nwhere ( )0,t p\u03c5 \u039d \u03a3 is a two dimensional Gaussian noise. Probability of state transition of each\ntarget is defined as following equation.\n( ) ( )1| ,tt t X t tp X X X\u2212 = \u039d \u03a3 (10)"}, {"heading": "6. LIKELIHOOD FUNCTION", "text": "We used combination of two functions to define the likelihood function in this study. First function calculates the likelihood according to difference between corresponding pixels in\ngrayscale mode [1 6 ]. Second function calculates the likelihood of corresponding regions using a\ncolor histogram in RGB mode [1 3 ]. The likelihood function is defined as following equation:\n( ) ( )2int| it t ensity colorp z X p p= + (11)\nIn section 6.1, grayscale module is briefly explained, and an equation is defined to calculate\nintensityp . In section 6.2, RGB module is introduced and an equation is defined to compute colorp ."}, {"heading": "6.1. Grayscale Module", "text": "Difference in intensity of corresponding pixels is used to calculate the similarity between target\u2019 s\nregion and each particle's region. If S is the set of pixels inside the target\u2019s region and j C is the set of pixels inside the j th particle\u2019s region, then we calculate similarity of these regions using\nfollowing equation [18] :\n( ) 1\nint\nI i i\nj\ni\nx y\nT C\nH H\nensity p e\n=\n   \u2212   \u2212  \u00d7      \u2211\n= (12)\nwhere xH and yH are the dimensions of rectangular region of target object, and I is the number\nof pixels inside this region."}, {"heading": "6.1. RGB Module", "text": "A color distribution model is used as measurement model in some studies [14]. This model is an\n8\u00d78\u00d78 histogram in RGB color space. This histogram is calculated for target' s rectangular region. Distance of each pixel from center of region affects values of histogram. In [14], the interval\n(0,255) is divided to 8 equal parts, and an 8\u00d78\u00d78 histogram is used. For reducing computational\ncomplexity, we used a 4\u00d74\u00d74 histogram. In this color distribution model, efficacy of each pixel on values of histogram reduces as it is placed far from the center of region. Epanechnikov kernel\nfunction is used to indicate this property in the histogram, which is defined as follows:\n( ) 21 1\n0\nr r k r\notherwise  \u2212 < =  \n(13)\nwhere r is the distance of each pixel from the center of region. The color distribution model is\nrepresented by a histogram which is shown in following equation:\n{ }( ) 1,..., u s s u m p p = =\n(14)\nwhere s denotes the location of an arbitrary pixel, and m is the number of histogram bins. Number\nof histogram bins is considered as m=64 . The histogram value in location s is obtained by following equation:\n( )( )( ) 1\nI iu\ns i\ni\ns X p f k h X u\na \u03b4\n=\n \u2212  = \u2212 \n  \u2211 (15)\nwhere I is the number of pixels inside the target\u2019s region, and . is considered as Euclidean\ndistance. 2 2x ya H H= + , where xH and yH are the dimensions surrounding rectangle of target\nobject. In equation ( 15 ), f is a normalization coefficient which is defined as follows:\n1\n1\nI i\ni\nf s X\nk a= =  \u2212      \u2211\n(16)\nBhattacharyya distance is used to calculate the difference of two histograms using following\nequation:\n[ ]1 ,d p q\u03c1= \u2212 (17)\nwhere [ ],p q\u03c1 denotes the similarity of p and q and is defined as follows:\n[ ] ( ) ( ) 1\n, m\nu u\nu p q p q\u03c1 = = \u00d7\u2211 (18)\nFinally, the distance between, histogram of target\u2019s region and histogram of each particle\u2019s region\nare used to assign the weight to each particle. colorp is calculated by following equation:\n2d\ncolorp e \u03bb\u2212=\n(19)\nwhere \u03bb is a parameter that experimentally considered 25 in this paper."}, {"heading": "7. DATA ASSOCIATION", "text": "Data association algorithm associates the available measurements to detected targets. In cluttered environments, some of the obtained measurements may arise from clutter. A data association algorithm must detect the measurements that are arisen from clutter. Some of the important data association algorithms are Global Nearest Neighbor (GNN), Joint Probabilistic Data Association (JPDA) and Multi Hypothesis Tracking (MHT). GNN is more efficient algorithm for clutter-free environments. Our selected videos in this study had static background and our tracking environment was clutter-free. We used GNN as data association algorithm. Each measurement is associated to nearest track in GNN algorithm. Optimal association minimizes the sum of\ndistances between each measurement and it' s corresponding track. The optimal association can be obtained using a cost matrix and an optimization algorithm. Distance between each measurement and track represents their cost in this matrix. We used Munkres optimization algorithm in our\nstudy that was presented in [1 4 ].\nThis algorithm uses the cost matrix for determining the optimal association . We used three types\nof measurements: 1) grayscale module, 2) RGB module and 3) target detection for deformation\ndetection. Grayscale module and RGB module don' t require data association, because these are\ncalculated for each particle separately. Data association is only used for target detection.\nIn our application, number of targets is constant and predetermined. If the number of detected targets in tracking environment is less than the predetermined number, then at least one of the targets has been occluded by another one. In such case, target detection step is ignored during the occlusion phenomenon. The color histogram and intensity of corresponding pixels are considered\nas observation. Data association won' t be applied during the occlusion phenomenon, because data\nassociation is only used for target detection observation."}, {"heading": "8. DEFORMATION DETECTION", "text": "Manoeuvring target tracking is one of the big challenges in target tracking. Target\u2019s model\nchanges in occurrence of rotation or scaling. In such case, the target\u2019 s old model is not efficient\nfor weight assignment. Using static model for tracking manoeuvring targets don\u2019t yield good results. The MM approach is a commonly used approach to overcome this problem. In this paper, a dynamic model is used to improve the results of SIR algorithm in multiple manoeuvring target\ntracking. If changes of target\u2019 s model are larger than the predetermined threshold, then the model should be updated. Old model of target is replaced by new one. Deformation detection is done\nusing a color histogram that is described in section 6.2 . After several frames, the considered targets are detected again by using a background subtraction algorithm. The color histogram is\ncalculated for region of each detected target as described in section 6.2 . Suppose that, the newq is the color histogram of new model of target and oldq is the color histogram of old model of target. We used Bhattacharyya distance to detect the deformation of target model which is defined as following equation:\n[ ]1 ,new oldd q q\u03c1= \u2212 (20)\nwhere [ ],new oldq q\u03c1 denotes the similarity of two histograms and obtains using following equation:\n[ ] ( ) ( ) 1\n, m\nu u\nnew old new old\nu q q q q\u03c1 = = \u00d7\u2211 ( 21)\nwhen d T> , then changes of target\u2019s model is larger than a predetermined threshold and the its\nprevious model should be replaced by new one. T is a threshold which is experimentally\nconsidered as 0.12 . Our proposed DDPF algorithm is described in Table 1."}, {"heading": "9. CONDITIONS OF EXPERIMENTS", "text": "Our proposed DDPF algorithm and basic SIR algorithm are implemented by MATLAB 2011(b). These algorithms are tested on a system with configuration: CORE i7 CPU, 4GB RAM and 1GB Geforce VGA. The real-world videos are selected to test our proposed algorithm. These videos\nare extracted from parts of real airshow videos. Format of these videos is \" mp4\", and their\ndimensions are 240\u00d7320 . It is assumed that the number of targets is constant and predetermined in these videos. A background subtraction algorithm is used to detect the targets, because the selected videos have partly static background. Background of selected videos should be reclusion. Our proposed DDPF method is appropriate for tracking in clutter-free environment."}, {"heading": "10. COMPARISON", "text": "In this section, we compare results of our proposed DDPF algorithm with basic SIR particle filter\nalgorithm in multi manoeuvring target tracking. Fig.2 shows that the basic SIR-PF algorithm is\nnot able to track the manoeuvring targets without using dynamic model for targets. Fig.3 shows that DDPF algorithm efficiently tracks the manoeuvring targets. Comparison results show that the\nbasic SIR-PF algorithm misses the targets when the rotation or scaling occurs in target\u2019s model, whereas proposed DDPF method resolves this problem by updating the model when the rotation or scaling occurs. Results of our proposed method are very sensitive to parameters settings. By increasing the dimensions of videos, the computational complexity of our approach increases\ndrastically. We tested our proposed approach on other videos and their results are shown in Fig.4\nand Fig.5 ."}, {"heading": "11. CONCLUSION AND DISCUSSION", "text": "In this paper, we proposed DDPF method by applying a dynamic model for targets in the SIR\nbased particle filtering algorithm for tracking multiple manoeuvring targets. Results illustrate that\nthe basic SIR-PF algorithm is not able to efficiently tracks the multiple manoeuvring targets when\nthe rotation or scaling is occurred in target model , whereas DDPF method will be able to track\nmultiple manoeuvring targets more robustly. Our studies showed that the results are very sensitive to parameters settings. Extending this approach by adaptive parameters is under study as our future work. One of the problems in multi manoeuvring target tracking is occlusion problem. Resolving the occlusion problem for improving the results of proposed approach is our other\nfuture work."}], "references": [{"title": "N", "author": ["A. Doucet"], "venue": "J. Gordon and V. Krishnamurthy, ", "citeRegEx": "3", "shortCiteRegEx": null, "year": 2001}, {"title": "Tracking and Data Association", "author": ["Y. Bar-Shalom", "T. Fortmann"], "venue": null, "citeRegEx": "5", "shortCiteRegEx": "5", "year": 1988}, {"title": "and M", "author": ["Y. Bar-Shalom", "T. Fortmann"], "venue": "Scheffe, ", "citeRegEx": "6", "shortCiteRegEx": null, "year": 1980}, {"title": "An Algorithm for Tracking Multiple Targets", "author": ["D. Reid"], "venue": "IEEE Trans. Automat. Control,", "citeRegEx": "7", "shortCiteRegEx": "7", "year": 1979}, {"title": "N", "author": ["A. Doucet"], "venue": "de-Freitas and N. Gordon, ", "citeRegEx": "9", "shortCiteRegEx": null, "year": 2001}, {"title": "N", "author": ["S. Arulampalam", "S.R. Maskell"], "venue": "J. Gordon and T. Clapp, ", "citeRegEx": "10", "shortCiteRegEx": null, "year": 2001}, {"title": "S", "author": ["B. Ristic"], "venue": "Arulampalam and N. Gordon, ", "citeRegEx": "12", "shortCiteRegEx": null, "year": 2004}, {"title": "E", "author": ["K. Nummiaro"], "venue": "Koller-Meier and L. V. Gool, ", "citeRegEx": "13", "shortCiteRegEx": null, "year": 2003}, {"title": "2010 ) \" Fiducial Facial Points Tracking Using Particle Filter and Geometric Features", "author": ["S. Fazli", "R. Afrouzian", "H. Seyedarabi"], "venue": "Proc. of IEEE International Congress on Ultra-Modern Telecommunications and Control Systems ", "citeRegEx": "16", "shortCiteRegEx": null, "year": 2010}], "referenceMentions": [{"referenceID": 0, "context": "Multiple Model (MM) approach is a common solution to resolve this problem [1-3].", "startOffset": 74, "endOffset": 79}, {"referenceID": 1, "context": "A real-time approach is presented in [1 5 ] for tracking a manoeuvring target by incorporating dynamic components in the target model.", "startOffset": 37, "endOffset": 43}, {"referenceID": 1, "context": "From the view of implementation, Global Nearest Neighbor (GNN) is the simplest method for data association [ 5 ].", "startOffset": 107, "endOffset": 112}, {"referenceID": 2, "context": "One of the most common data association methods is Joint Probabilistic Data Association (JPDA) [ 6 ].", "startOffset": 95, "endOffset": 100}, {"referenceID": 3, "context": "Multiple Hypothesis Tracking (MHT) is the most complex method for data association that is efficient for cluttered environments [ 7 ].", "startOffset": 128, "endOffset": 133}, {"referenceID": 4, "context": "One of the most common numerical and approximation methods to pose estimation is sequential Monte Carlo [9].", "startOffset": 104, "endOffset": 107}, {"referenceID": 5, "context": "This technique is known as particle filter [10] or Monte Carlo [11] .", "startOffset": 43, "endOffset": 47}, {"referenceID": 2, "context": "First function calculates the likelihood according to difference between corresponding pixels in grayscale mode [1 6 ].", "startOffset": 112, "endOffset": 118}, {"referenceID": 0, "context": "Second function calculates the likelihood of corresponding regions using a color histogram in RGB mode [1 3 ].", "startOffset": 103, "endOffset": 109}], "year": 2012, "abstractText": "In this paper, we applied a dynamic model for manoeuvring targets in SIR particle filter algorithm for improving tracking accuracy of multiple manoeuvring targets. In our proposed approach, a color distribution model is used to detect changes of target's model . Our proposed approach controls deformation of target's model. If deformation of target's model is larger than a predetermined threshold, then the model will be updated. Global Nearest Neighbor (GNN) algorithm is used as data association algorithm. We named our proposed method as Deformation Detection Particle Filter (DDPF) . DDPF approach is compared with basic SIR-PF algorithm on real airshow videos. Comparisons results show that, the basic SIR-PF algorithm is not able to track the manoeuvring targets when the rotation or scaling is occurred in target' s model. However, DDPF approach updates target's model when the rotation or scaling is occurred. Thus, the proposed approach is able to track the manoeuvring targets more efficiently and accurately.", "creator": "PScript5.dll Version 5.2.2"}}}