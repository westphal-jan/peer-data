{"id": "1302.5645", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "18-Feb-2013", "title": "Role of temporal inference in the recognition of textual inference", "abstract": "this project is a part of nature language processing and its aims to develop a classification system of recognition inference text - appointed timinf. this symbolic type of system can detect, given two portions of text, correct if a text is semantically deducted from the subject other. we focused on theoretically making the inference time in this type of system. for that we have built and analyzed a body built from questions collected through the web. this study has enabled us to classify different types of times inferences and for designing substantially the architecture of timinf which seeks further to integrate a module inference time in a detection system inference text. we should also assess the performance of sorties timinf system on a test corpus with the same strategy adopted out in the classification challenge rte.", "histories": [["v1", "Mon, 18 Feb 2013 15:28:51 GMT  (2581kb)", "http://arxiv.org/abs/1302.5645v1", "2008 thesis, in French"]], "COMMENTS": "2008 thesis, in French", "reviews": [], "SUBJECTS": "cs.CL", "authors": ["djallel bouneffouf"], "accepted": false, "id": "1302.5645"}, "pdf": {"name": "1302.5645.pdf", "metadata": {"source": "CRF", "title": "D\u2019inge\u0301nieur en informatique", "authors": ["Houari Boumediene", "Djallel Bouneffouf"], "emails": [], "sections": [{"heading": null, "text": "Universit\u00e9 des Sciences et Technologie Houari Boumediene\nTHESE\nSp\u00e9cialit\u00e9 : Informatique\nOption : Recherche\nPr\u00e9sent\u00e9e pour obtenir le titre :\nD\u2019ing\u00e9nieur en informatique\nPar\nDjallel Bouneffouf\nRapport du stage effectu\u00e9 au laboratoire de recherche en\nInformatique de Toulouse (IRIT)\nR\u00f4le de l\u2019inf\u00e9rence temporelle dans la\nreconnaissance de l\u2019inf\u00e9rence textuelle\nSoutenu le 18 juin 2008 devant le jury compos\u00e9 de :\nMadame A.Aissani Pr\u00e9sidente\nMonsieur H.Azzoune Examinateur\nMadame F.Khellaf Directrice de th\u00e8se\nR\u00e9sum\u00e9 du projet\nCe projet s\u201fins\u00e8re dans le cadre du traitement du langage nature. Il a pour objectif le d\u00e9veloppement d\u201fun syst\u00e8me de reconnaissance d\u201finf\u00e9rence textuelle, nomm\u00e9 TIMINF. Ce type de syst\u00e8me permet de d\u00e9tecter, \u00e9tant donn\u00e9 deux portions de textes, si un des textes est s\u00e9mantiquement d\u00e9duit de l\u201fautre. Nous nous sommes focalis\u00e9s sur l\u201fapport de l\u201finf\u00e9rence temporelle dans ce type de syst\u00e8me. Pour cela, nous avons constitu\u00e9 et analys\u00e9 un corpus construit \u00e0 partir de questions collect\u00e9es \u00e0 travers le web. Cette \u00e9tude, nous a permis de classer diff\u00e9rents types d\u201finf\u00e9rences temporelles et de concevoir l\u201farchitecture informatique de TIMINF qui a pour but l\u201fint\u00e9gration d\u201fun module d\u201finf\u00e9rence temporelle dans un syst\u00e8me de d\u00e9tection d\u201finf\u00e9rence textuelle. Nous proposons, \u00e9galement d\u201f\u00e9valuer les performances des sorties du syst\u00e8me TIMINF sur un corpus de test avec la m\u00eame strat\u00e9gie adopt\u00e9 dans le challenge RTE.\nMot clef : Traitement du langage naturel, reconnaissance d\u201finf\u00e9rence textuelle, inf\u00e9rence temporelle, syst\u00e8me question r\u00e9ponse, Recherche d\u201finformation.\nProject summary\nThis project is a part of nature language processing and its aims to develop a system of recognition inference text-appointed TIMINF. This type of system can detect, given two portions of text, if a text is semantically deducted from the other. We focused on making the inference time in this type of system. For that we have built and analyzed a body built from questions collected through the web. This study has enabled us to classify different types of times inferences and for designing the architecture of TIMINF which seeks to integrate a module inference time in a detection system inference text. We also assess the performance of sorties TIMINF system on a test corpus with the same strategy adopted in the challenge RTE.\nKeyword: Natural language processing, recognizing of textual entailment, temporal inference, question answering system, Information Retrieval.\nTable des mati\u00e8res\nIntroduction g\u00e9n\u00e9rale .................................................................................................................. 1\nChapitre 1 : LE TALN et LE RTE\n1) Introduction ............................................................................................................................ 6\n2) Br\u00e8ve historique du traitement automatique du langage naturel ........................................... 6\n3) Les niveaux de traitement ...................................................................................................... 7\n3.1) Le niveau lexical ............................................................................................................. 7 3.2) Le niveau syntaxique ...................................................................................................... 8 3.3) Le niveau s\u00e9mantique...................................................................................................... 9 3.4) Le niveau pragmatique .................................................................................................... 9\n4) Les difficult\u00e9s du TALN : ambigu\u00eft\u00e9 ................................................................................... 10\n4.1) Ambigu\u00eft\u00e9 des graph\u00e8mes (lettres) ............................................................................... 10 4.2) Ambigu\u00eft\u00e9 dans les propri\u00e9t\u00e9s grammaticales et s\u00e9mantiques ...................................... 10 4.3) Ambigu\u00eft\u00e9 de la fonction grammaticale des groupes de mots ...................................... 10 4.4) Ambigu\u00eft\u00e9 de la port\u00e9e des quantificateurs, des conjonctions et des pr\u00e9positions ....... 11 4.5) Ambigu\u00eft\u00e9 sur l\u2019interpr\u00e9tation \u00e0 donner en contexte \u00e0 un \u00e9nonc\u00e9 ................................ 11\n5) La reconnaissance de l\u2019inf\u00e9rence textuelle (RTE) ............................................................... 11\n5.1) Introduction .............................................................................................................. 11 5.2) Les applications du RTE .......................................................................................... 12\n5.2.1) La recherche d\u2019information .................................................................................... 12 5.2.2) L\u2019extraction d\u2019information ..................................................................................... 13 5.2.3) Le syst\u00e8me question- r\u00e9ponse ................................................................................ 14 5.2.4) La traduction automatique ..................................................................................... 14 5.2.4) Le r\u00e9sum\u00e9 automatique .......................................................................................... 14 5.2.5) L\u2019acquisition des Paraphrases (AP) ........................................................................... 14 5.3) Le challenge \u201cPASCAL Recognizing of Textual Entailment\u201d ................................ 15\n5.3.1) La pr\u00e9paration du corpus ....................................................................................... 15 5.3.2) Les directives de jugements ................................................................................... 16 5.3.3) Les mesures d\u2019\u00e9valuation ...............................................................................................\n5.4) L\u2019analyse des principales m\u00e9thodes utilis\u00e9es ................................................................... 17\n5.4.1) Les pr\u00e9traitements ...................................................................................................... 17\n5.4.1.1) Le Niveau lexical ............................................................................................. 17\n5.4.1.2) Le niveau syntaxique .......................................................................................... 18 5.4.1.3) Le niveau s\u00e9mantique ......................................................................................... 19 5.4.2) Les diff\u00e9rents niveaux d\u2019inf\u00e9rence textuelle .............................................................. 20\n5.4.2.1) L\u2019inf\u00e9rence au niveau lexical ........................................................................... 20\n5.4.2.2) L\u2019inf\u00e9rence au niveau lexico syntaxique ............................................................ 23 5.4.2.3) L\u2019inf\u00e9rence s\u00e9mantique (logique) ....................................................................... 24\n5.4.3) Les ressources utilis\u00e9es .............................................................................................. 24\n5.4.3.1) Le WordNet ........................................................................................................ 24\n5.4.3.2) Le FrameNet ................................................................................................... 25\n5.4.3.3) Le Cyc ................................................................................................................ 25 5.5.4) Quelques exemples d\u2019inf\u00e9rence utilis\u00e9s par des groupes de recherches ................. 26\n5.5.4.1) La reconnaissance de l\u2019inf\u00e9rence textuelle bas\u00e9e sur l\u2019analyse de d\u00e9pendance\net WordNet (Universit\u00e9 nationale de l\u2019\u00e9ducation a distance de Madrid) ...................... 27\n5.5.4.2) COGEX (universit\u00e9 du Texas, USA) ...................................................................... 29 5.5.5) Conclusion ................................................................................................................. 31\n5.6) Conclusion ........................................................................................................................ 32\nChapitre 2: Le temps dans la langue\n1) Introduction .......................................................................................................................... 34\n2) la structure de points ........................................................................................................... 34\n3) la structure d\u2019intervalles ...................................................................................................... 35\n4) la structure d\u2019\u00e9v\u00e9nements ................................................................................................... 35"}, {"heading": "5) La th\u00e9orie d\u2019Allen ................................................................................................................ 36", "text": "5) le temps dans la langue ....................................................................................................... 37\n5.1) Le mod\u00e8le de Reichenbach ........................................................................................... 38 5.2) Les adverbiaux temporels ............................................................................................. 39\n6) L\u2019inf\u00e9rence temporelle ......................................................................................................... 39\n6.1) Le travail du groupe Human Language Technology Research Institut (HLTRI) sur l\u2019inf\u00e9rence temporelle ......................................................................................................... 40 6.2) Synth\u00e9se ........................................................................................................................ 41\n7) Conclusion ........................................................................................................................... 41\nChapitre 3 : L'\u00e9laboration du corpus\n1) Introduction .......................................................................................................................... 44\n2) L\u2019\u00e9laboration du corpus ....................................................................................................... 44\n3) Classification de l\u2019inf\u00e9rence temporelle .............................................................................. 47\n3.1) Les inf\u00e9rences entre expressions temporelles ............................................................... 47\n3.1.1) Les inf\u00e9rences entre dates ...................................................................................... 48 3.1.2) les inf\u00e9rences entre adverbiaux temporels ............................................................. 49 3.1.3) Les inf\u00e9rences entre dates et adverbiaux temporels ............................................... 49 3.3.2) Les inf\u00e9rences entre \u00e9v\u00e8nements............................................................................ 49\n3.3.2.1) Les relations entre \u00e9v\u00e8nements temporels ....................................................... 50\n3.3.2.2) Les inf\u00e9rences lexico s\u00e9mantiques ................................................................... 51\n3.3.4) Les inf\u00e9rences entre \u00e9v\u00e8nements et expressions temporelles ............................... 51\n3) Le bilan de l\u2019\u00e9tude du corpus ............................................................................................... 52\n4) Conclusion ........................................................................................................................... 53\nChapitre 4 : La pr\u00e9sentation du syst\u00e8me TIMINF\n1) Introduction .......................................................................................................................... 55\n2) Architecture informatique de TIMINF ................................................................................ 55\n2.1) Le pr\u00e9traitement ............................................................................................................ 57\n2.1.1) Le projet TARSQI .................................................................................................. 57\n2.1.1.1) Treetagger ........................................................................................................ 58\n2.1.1.2) GUTime ........................................................................................................... 59\n2.1.1.3) Evita ................................................................................................................. 60\n2.1.1.4) GutenLink ........................................................................................................ 61\n2.1.1.5) Slinket .............................................................................................................. 63\n2.1.1.6) SputLink ........................................................................................................... 64\n2.1.1.7) L\u2019utilisation de TARSQI .................................................................................. 64\n2.1.1.8) L\u2019int\u00e9gration de TARSQI au syst\u00e8me TIMINF ............................................... 66\n2.1.2) L\u2019analyse syntaxique.............................................................................................. 66\n2.1.2.1) La pr\u00e9sentation de link grammar parser ........................................................... 66\n2.1.2.2) L\u2019int\u00e9gration du link parser \u00e0 notre syst\u00e8me .................................................... 67\n2.2) Les test d\u2019inf\u00e9rence textuelle ........................................................................................ 68\n2.2.1) Les testes d\u2019inf\u00e9rences entre \u00e9v\u00e9nements et entre sujets ....................................... 68\n2.2.1.1) L\u2019inf\u00e9rence entre sujets ................................................................................... 69\n2.2.1.2) L\u2019inf\u00e9rence entre \u00e9v\u00e8nements ......................................................................... 70\n2.2.2) Le balisage des expressions temporelles non d\u00e9tect\u00e9es par TARSQI ................... 71 2.3) Les Ressources linguistiques ........................................................................................ 72\n2.3.1) Les ressources externes ......................................................................................... 72 2.3.1) Les ressources internes ......................................................................................... 73 2.4) Les tests d\u2019inf\u00e9rences temporelles ................................................................................ 73\n2.4.1) Les r\u00e8gles d\u2019inf\u00e9rences ........................................................................................ 73\n2.4.1.1) Les d\u00e9finitions des fonctions utilis\u00e9s dans l\u2019abstraction des r\u00e8gles d\u2019inf\u00e9rence\n....................................................................................................................................... 74\n4.1.1.2) Les r\u00e8gles du groupe 1 ..................................................................................... 75\n4.1.1.3) La r\u00e8gle du groupe 2 ........................................................................................ 81\n4.2.2) Le superviseur ........................................................................................................ 82 4.4) Conclusion .................................................................................................................... 84\nChapitre 5: La mise en \u0153uvre et L'\u00e9valuation du syst\u00e8me TIMEINF\n1) Introduction .......................................................................................................................... 86\n2) environnement et outils utilis\u00e9s ........................................................................................... 86\n2.1) Python ........................................................................................................................... 86 2.2) TARSQI ........................................................................................................................ 87\n2.2.1) Installation .............................................................................................................. 87 2.2.2) Utilisation de la boite \u00e0 outils TARSQI ................................................................. 88 2.2.3) Utilisation de la boite \u00e0 outils d\u2019interface graphique ............................................. 88 2.3) Link Parseur .................................................................................................................. 89 2.4) PyWordNet ................................................................................................................... 90\n2.4.1) Installation .............................................................................................................. 90 2.4.2) Utilisation de PyWordNet dans notre syst\u00e8me ...................................................... 90\n3) Exemple d\u2019ex\u00e9cution du TIMINF sur un exemple du corpus .............................................. 92\n3.1) TARSQI ........................................................................................................................ 92 3.2) Analyse syntaxique ....................................................................................................... 93 3.3) Inf\u00e9rence entre sujets et \u00e9v\u00e9nements ............................................................................. 94 3.4) Balisages des expressions temporelles non d\u00e9tect\u00e9es par TARSQI ............................. 94 3.5) Superviseur ................................................................................................................... 94\n4) L\u2019\u00e9valuation de notre syst\u00e8me ............................................................................................. 95\n4.1) l\u2019\u00e9valuation du syst\u00e8me sur le corpus de d\u00e9veloppement ............................................. 95 4.2) Evaluation du syst\u00e8me avec le corpus de test ............................................................... 96 4.4) Analyse des erreurs caus\u00e9es par le syst\u00e8me. ................................................................. 96\n5) Conclusion ........................................................................................................................... 97\nConclusion g\u00e9n\u00e9rale et perspectives......................................................................................... 98\nReferences .............................................................................................................................. 102\nAnnexe ................................................................................................................................... 103\nTable des illustrations\nLes figures\nFigure 2.1 : Exemple de moteur de recherche a base de mot cl\u00e9 ....................................................... 12\nFigure 1.2 : Exemple o\u00f9 le moteur de recherche \u00e0 base de mot cl\u00e9 ne marche pas ........................... 13\nFigure 1.3 : Exemple du corpus annot\u00e9 ............................................................................................. 16\nFigure 1.4 : Sortie du TreeTagger ...................................................................................................... 18\nFigure 1.5 : Exemple d\u201fannotation syntaxique .................................................................................. 19\nFigure 1.6 : Exemple de structure pr\u00e9dicat argument ........................................................................ 20\nFigure 1.7 : L\u201farchitecture du syst\u00e8me .............................................................................................. 27\nFigure 1.8: Exemple de recouvrement entre arbre de d\u00e9pendance .................................................... 28\nFigure 1.9: Architecture du syst\u00e8me UNED ...................................................................................... 29\nFigure 1.10 : Architecture du syst\u00e8me ............................................................................................... 30\nFigure 2.1: Repr\u00e9sentation des relations d\u201fAllen ............................................................................... 37\nFigure 2.2: r\u00e8gles d\u201finf\u00e9rence temporelle .......................................................................................... 40\nFigure 2.3: application des r\u00e8gles d\u201finf\u00e9rences sur un exemple du corpus RTE ............................... 40\nFigure 3.1 : repr\u00e9sente la r\u00e9ponse du syst\u00e8me AnswerBus ................................................................ 45\nFigure 3.2 : Exemple du corpus annot\u00e9 ............................................................................................. 46\nFigure 3.3 : Pourcentage de paires par types d\u201finf\u00e9rences ................................................................. 47\nFigure 3.4 : Nombre de paires par types d\u201finf\u00e9rences ....................................................................... 50\nFigure 3.5 : Nombre de paires par types d\u201finf\u00e9rences ....................................................................... 51\nFigure 3.6 : Pourcentage de paires par types d\u201finf\u00e9rences ................................................................. 53\nFigure 4.1 : architecture du syst\u00e8me TIMINF ................................................................................... 56\nFigure 4.2 : Architecture du module TARSQI ................................................................................... 57\nFigure 4.3 : Sortie en format tableau de TreeTagger ......................................................................... 58\nFigure 4.4 : Sortie en format XML de TreeTagger ............................................................................ 59\nFigure 4.5: Sortie du module GUTime .............................................................................................. 60\nFigure 4.6 : Sortie du module Evita ................................................................................................... 61\nFigure 4.7 : Sortie du module GutenLink .......................................................................................... 62\nFigure 4.8 : Sortie du module SLINKET ........................................................................................... 63\nFigure 4.10 : Entr\u00e9e format simple-xml \u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026...64\nFigure 4.9: Inf\u00e9rence effectu\u00e9 par le module SputLINK ................................................................... 65\nFigure 4.11 : Sortie du module GutenLink ........................................................................................ 66\nFigure 4.12 : L\u201fanalyse syntaxique .................................................................................................... 66\nFigure 4.13 : Sortie du module Link Grammar Parser....................................................................... 67\nFigure 4.14 : L\u201finf\u00e9rence entre \u00e9v\u00e8nements et sujets ........................................................................ 68\nFigure 4.15 : Exemple d\u201finf\u00e9rence entre sujets ................................................................................. 69\nFigure 4.16 : Exemple d\u201finf\u00e9rence entre \u00e9v\u00e8nements ........................................................................ 70\nFigure 4.17 : exemple de balisages d\u201fexpressions temporelles ......................................................... 71\nFigure 4.18 : Ressources linguistiques ............................................................................................... 72\nFigure 4.19 : R\u00e8gles d\u201finf\u00e9rences ...................................................................................................... 73\nFigure 4.20 : R\u00e8gle R1 d\u201finf\u00e9rence temporelle .................................................................................. 76\nFigure 4.21 : R\u00e8gle R2 d\u201finf\u00e9rence temporelle .................................................................................. 77\nFigure 4.22 : R\u00e8gle R3 d\u201finf\u00e9rence temporelle .................................................................................. 78\nFigure 4.23: R\u00e8gle R4 d\u201finf\u00e9rence temporelle ................................................................................... 79\nFigure 4.24 : R\u00e8gle R5 d\u201finf\u00e9rence temporelle .................................................................................. 80\nFigure 4.25 : R\u00e8gle R6 d\u201finf\u00e9rence temporelle .................................................................................. 82\nFigure 4.26 : Architecture du superviseur .......................................................................................... 83\nFigure 5.1 : Shell python .................................................................................................................... 86\nFigure 5.2 : Comment ex\u00e9cuter un programme ................................................................................. 87\nFigure 5.3 : Capture d\u201f\u00e9cran de l\u201finterface TARSQI ......................................................................... 89\nFigure 5.4 : Capture d\u201f\u00e9cran de l\u201finterface de link parser ................................................................. 90\nFigure 5.5 : La fonction d\u201finterfa\u00e7age avec WordNet ....................................................................... 91\nFigure 5.6 : Entr\u00e9 simple-xml ............................................................................................................ 92\nFigure 5.7 : Sortie TARSQI ............................................................................................................... 93\nFigure 5.8: Sortie de l\u201fanalyseur syntaxique ...................................................................................... 93\nFigure 5.9 : Inf\u00e9rence entre sujets et \u00e9v\u00e8nements .............................................................................. 94\nFigure 5.10: Balisages des expressions temporelles .......................................................................... 94\nIntroduction g\u00e9n\u00e9rale\nNous regroupons sous le vocable de traitement automatique du langage naturel (TALN) l\u201fensemble des recherches et d\u00e9veloppements visant \u00e0 mod\u00e9liser et \u00e0 reproduire, \u00e0 l\u201faide de machines, la capacit\u00e9 humaine \u00e0 produire et \u00e0 comprendre des \u00e9nonc\u00e9s linguistiques dans le but de communication (Yvon, 2007).\nLes deux sources principales de motivation \u00e0 l\u201f\u00e9tude du TALN sont d\u201fune part; la volont\u00e9 de mod\u00e9liser une comp\u00e9tence fascinante (le langage), afin de tester des hypoth\u00e8ses sur les m\u00e9canismes de la communication humaine, ou plus g\u00e9n\u00e9ralement sur la nature de la cognition humaine et d\u201fautre part le besoin de disposer d\u201fapplications capables de traiter efficacement les morceaux d\u201finformations \u00ab naturelles\u00bb (documents \u00e9crits ou sonores) aujourd\u201fhui disponibles sous forme \u00e9lectronique (mails, pages HTML, documents hyperm\u00e9dias, etc).\nLe TALN est un champ de savoir et de techniques \u00e9labor\u00e9s autour de probl\u00e9matiques diverses. Les concepts et techniques qu\u201fil utilise se trouvent \u00e0 la crois\u00e9e de multiples champs disciplinaires : l\u201fIntelligence Artificielle \u00abtraditionnelle\u00bb, l\u201finformatique th\u00e9orique, la logique, la linguistique, mais aussi les neurosciences, les statistiques, etc.\nUne des principales probl\u00e9matiques du TALN est que dans une langue en g\u00e9n\u00e9ral, nous pouvons toujours exprimer la m\u00eame id\u00e9e avec plusieurs phrases diff\u00e9rentes, ce qui pose un vrai probl\u00e8me d\u201fambigu\u00eft\u00e9, que les chercheurs, dans tous les domaines du traitement du langage, veulent r\u00e9soudre.\nExtraction d\u201finformation (EI), question r\u00e9ponse (QR), recherche d\u201finformation (RI), r\u00e9sum\u00e9 automatique et traduction automatique sont des exemples d\u201fapplications qui ont besoin d\u201f\u00e9valuer la relation s\u00e9mantique entre des segments de textes, c\u201fest-\u00e0-dire, si un segment de texte peut \u00eatre s\u00e9mantiquement d\u00e9duit d\u201fun autre.\nAu d\u00e9but du traitement du langage naturel, le probl\u00e8me d\u201fambigu\u00eft\u00e9 \u00e9tait dispers\u00e9 dans ses diff\u00e9rentes applications et chaque groupe de recherche traite le probl\u00e8me \u00e0 sa fa\u00e7on, mais cela a produit une grande perte de temps. Pour cela, les chercheurs ont choisi d\u201funifier leurs forces pour cr\u00e9er un domaine qui a pour but de centraliser le probl\u00e8me d\u201fambigu\u00eft\u00e9 et de proposer des m\u00e9thodes de traitement du langage au niveau lexical, syntaxique et s\u00e9mantique ind\u00e9pendamment d'une application donn\u00e9e. La reconnaissance de l\u201finf\u00e9rence textuelle (RTE) est n\u00e9e.\nAinsi: on dira qu'un texte, not\u00e9 T (texte), inf\u00e8re un texte, not\u00e9 H (hypoth\u00e9se), si et seulement si H peut \u00eatre inf\u00e9r\u00e9 \u00e0 partir de T (Dagan et al, 05).\nExemple d'inf\u00e9rence dite TRUE T: Since its formation in 1948, Israel was involved in many wars with neighboring Arab countries. H: Israel was established in 1948.\nExemple d'inf\u00e9rence dite FALSE T: Since its formation in 1948, Israel was involved in many wars with neighboring Arab countries. H: Israel was established before 1948.\nLe Pascal RTE est un concoure qui \u00e0 d\u00e9buter en 2005 et son objectif et de comparer les r\u00e9alisations des diff\u00e9rents groupes de recherches travaillant sur le RTE. Il y a eu trois comp\u00e9titions Pascal RTE (2005, 2006 et 2007) et dans ces trois comp\u00e9titions, les principales m\u00e9thodes utilis\u00e9es sont bas\u00e9es sur:\n- le word matching (contage de mot) : l\u201finf\u00e9rence entre le texte T et H est vrai si le nombre de mot similaire entre les deux segments de textes est \u00e9lev\u00e9.\nExemple: T: Amine eats chocolates in the kitchen. H : Amine eats chocolates.\nDans l\u201fexemple l\u201finf\u00e9rence est consid\u00e9r\u00e9 comme vrai par l\u201falgorithme puisqu\u201fil a 100 % des mots du texte H qui existe dans le texte T. nous appelons cette m\u00e9thode le comptage de mots ou en anglais \u00ab le word matching \u00bb.\n- l'inf\u00e9rence lexicale : T inf\u00e8re H si les mots contenus dans la phrase H peuvent \u00eatre d\u00e9duits de T apr\u00e8s des transformations lexicales.\n- les relations de d\u00e9pendances syntaxiques (telles que les relations entre un verbe et ses arguments). Un matching entre les graphes de d\u00e9pendances de T et H est alors effectu\u00e9.\n- l'inf\u00e9rence logique: transformer T et H en une repr\u00e9sentation logique (souvent du premier ordre) puis v\u00e9rifier si H est une d\u00e9duction logique de T.\nPour le moment, les aspects temporels ne sont pas du tout abord\u00e9s (reconnaissances des dates, expressions temporelles, \u00e9v\u00e9nements, ordonnancement d'\u00e9v\u00e9nements dans le temps, etc.) dans le RTE. Pour cela, notre projet, nomm\u00e9 TIMINF, pour \u00ab Time-inference \u00bb, vise \u00e0 mod\u00e9liser, \u00e0 d\u00e9velopper et \u00e0 \u00e9valuer l\u201fapport de l\u201finf\u00e9rence temporelle dans le domaine de la reconnaissance de l\u201finf\u00e9rence textuelle (RTE).\nMotivation\nNotre approche est motiv\u00e9e par les constatations suivantes : La plupart des syst\u00e8mes de d\u00e9tection d\u201finf\u00e9rence textuelle \u00e9valu\u00e9s au Pascal RTE, se sont focalis\u00e9s sur les principales inf\u00e9rences (lexical, syntaxique et logique) et pour le moment, les aspects temporels ne sont pas du tout abord\u00e9s. Aussi les groupes travaillant sur les inf\u00e9rences temporells ne se basent que sur l\u201fam\u00e9lioration des d\u00e9t\u00e9ctions des relations temporelles existentes entre \u00e9venements et expressions temporelles et n\u201fessayent en aucun cas d\u201fint\u00e9grer leurs travaux a un syst\u00e9me d\u201finf\u00e9rence textuelle.\nM\u00e9thodologie de travail Pour parvenir \u00e0 la r\u00e9alisation du syst\u00e8me d\u201finf\u00e9rence textuelle int\u00e9grant l\u201finf\u00e9rence temporelle. Nous avons en premier lieu \u00e9tudi\u00e9 les diff\u00e9rents m\u00e9thodes existantes dans la reconnaissance de l\u201finf\u00e9rence textuelle pour cela nous nous sommes bas\u00e9s sur les trois\nchallenges qui se sont d\u00e9roul\u00e9s pour avoir un \u00e9tat des lieux sur les diff\u00e9rentes m\u00e9thodes existant.\nEnsuite nous avons \u00e9tudi\u00e9 la logique temporelle et son application sur le langage naturel, pour pouvoir avoir une id\u00e9e de l\u201fint\u00e9gration du temps dans la langue. Apres avoir \u00e9tudi\u00e9 les diff\u00e9rentes inf\u00e9rences textuelles et temporelles nous avons entam\u00e9 l\u201f\u00e9tude des relations temporelles qui peuvent exister entre deux s\u00e9gments de textes \u00e0 travers un corpus que nous avons \u00e9labor\u00e9. La suite logique \u00e0 notre projet est de concevoir notre syst\u00e9me d\u201finf\u00e9rnece textuelle int\u00e9grant les diff\u00e9rentes r\u00e9gles d\u201finf\u00e9rences temporelles d\u00e9couvertes au paravant.\nNous terminons notre travail avec l\u201f\u00e9valuation de notre syst\u00e8me et l\u201f\u00e9tude des diff\u00e9rentes failles existentes en proposant quelques perspectives de recherche future.\nPlan du m\u00e9moire\nLe plan que nous adoptons dans ce manuscrit refl\u00e8te les diff\u00e9rentes \u00e9volutions de notre projet. Ce document comporte cinq chapitres. Apr\u00e8s avoir \u00e9tudi\u00e9 les diff\u00e9rentes approches adopt\u00e9es pour traiter l\u201finf\u00e9rence textuelle dans le premier chapitre, le deuxi\u00e8me chapitre pr\u00e9sente le temps dans la langue et aussi une \u00e9tude sur l\u201finf\u00e9rence temporelle.\nDans le chapitre trois nous avons entrepris une d\u00e9marche exp\u00e9rimentale \u00e0 base de corpus afin de d\u00e9gager diff\u00e9rentes classes d\u201finf\u00e9rence temporelle. A partir de cette analyse, la seconde \u00e9tape a \u00e9t\u00e9 de concevoir l\u201farchitecture d\u201fun syst\u00e8me de reconnaissance d\u201finf\u00e9rence textuelle pr\u00e9sent\u00e9 dans le chapitre 4.\nEnfin une fois le syst\u00e8me con\u00e7u, nous nous sommes int\u00e9ress\u00e9s dans le dernier chapitre \u00e0 l\u201f\u00e9valuation des sorties de notre syst\u00e8me en le confrontant \u00e0 un corpus de test adapt\u00e9. Nous r\u00e9sumons, en conclusion de ce manuscrit, les diff\u00e9rentes contributions de ce projet et nous donnons plusieurs pistes de recherches futures.\nPartie 1\nL'\u00e9tat de l\u201fart\nR\u00e9sum\u00e9\nAvant d\u201fentamer la conception de notre syst\u00e8me d\u201finf\u00e9rence, nous avons besoin d\u201fexplorer les deux notions d\u201finf\u00e9rences textuelles et temporelles. Pour cela la partie \u00e9tat de l\u201fart de notre m\u00e9moire est constitu\u00e9e de deux chapitres contenants successivement un large tour d\u201fhorizon sur l\u201finf\u00e9rence textuelle et ses diff\u00e9rents niveaux de traitements. Le deuxi\u00e8me chapitre va contenir l\u201f\u00e9tude de la logique temporelle sous ses diff\u00e9rentes facettes et les diff\u00e9rentes techniques d\u201finf\u00e9rences temporelles existantes \u00e0 nos jours.\n-Chapitre 1-\nLE TALN ET LE RTE\nChapitre 1"}, {"heading": "Le TALN et Le RTE", "text": ""}, {"heading": "1) Introduction", "text": "Dans ce chapitre, nous commencerons par clarifier quelques concepts linguistiques, en \u00e9tudiant les diff\u00e9rents niveaux de repr\u00e9sentation et de traitement des \u00e9nonc\u00e9s linguistiques. La section suivante est consacr\u00e9e \u00e0 l\u201f\u00e9tude de l\u201finf\u00e9rence textuelle o\u00f9 nous pr\u00e9sentons les diff\u00e9rentes applications du RTE et les principaux niveaux d\u201finf\u00e9rences textuelles nous d\u00e9taillons les \u00e9tapes de d\u00e9veloppement du challenge Pascale RTE qui a \u00e9t\u00e9 mis en \u0153uvre pour \u00e9valuer les avances des groupes de recherches dans ce domaine. Nous terminons ce chapitre par la pr\u00e9sentation de quelques m\u00e9thodes d\u201finf\u00e9rences utilis\u00e9es par des groupes de recherches \u00e9valu\u00e9es dans le challenge Pascal RTE."}, {"heading": "2) Br\u00e8ve historique du traitement automatique du", "text": "langage naturel\nHistoriquement, les premiers travaux importants dans le domaine du TALN ont port\u00e9 sur la traduction automatique, avec, d\u00e8s 1954, la mise au point du premier traducteur automatique (tr\u00e8s rudimentaire). Quelques phrases russes, s\u00e9lectionn\u00e9es \u00e0 l\u201favance, furent traduites automatiquement en anglais.\nDepuis 1954, de lourds financements ont \u00e9t\u00e9 investis et de nombreuses recherches ont \u00e9t\u00e9 lanc\u00e9es. Les principaux travaux pr\u00e9sent\u00e9s concernent alors la fabrication et la manipulation de dictionnaires \u00e9lectroniques, car les techniques de traduction consistent essentiellement \u00e0 traduire mot \u00e0 mot, avec ensuite un \u00e9ventuel r\u00e9arrangement de l\u201fordre des mots.\nCette conception simpliste de la traduction a conduit \u00e0 l\u201fexemple c\u00e9l\u00e8bre suivant : la phrase The spirit is willing but the flesh is weak (l\u201fesprit est fort mais la chair est faible) fut traduite en russe puis retraduite en anglais. Cela donna quelque chose comme : The vodka is strong but the meat is rotten (la vodka est forte mais la viande est pourrie) !\nCe qui ressort de cet exemple, c\u201fest que de nombreuses connaissances contextuelles (i.e. portant sur la situation d\u00e9crite) et encyclop\u00e9diques (i.e. portant sur le monde en g\u00e9n\u00e9ral) sont n\u00e9cessaires pour trouver la traduction correcte d\u201fun mot (par exemple ici spirit, qui, suivant les contextes peut se traduire comme esprit ou comme alcool).\nPosant comme conjecture que tout aspect de l\u201fintelligence humaine peut \u00eatre d\u00e9crit de fa\u00e7on suffisamment pr\u00e9cise pour qu\u201fune machine le simule, les figures les plus marquantes de l\u201f\u00e9poque (John Mc Carthy, Marvin Minsky, Allan Newell, Herbert Simon) y discutent des\npossibilit\u00e9s de cr\u00e9er des programmes d\u201fordinateurs qui se comportent intelligemment, et en particulier qui soient capables d\u201futiliser le langage.\nAujourd\u201fhui, le champ du traitement du langage naturel est un champ de recherche tr\u00e8s actif. De nombreuses applications industrielles (traduction automatique, recherche documentaire, interfaces en langage naturel), qui commencent \u00e0 atteindre le grand public, sont l\u00e0 pour t\u00e9moigner de l\u201fimportance des avanc\u00e9es accomplies mais \u00e9galement des progr\u00e8s qu\u201fil reste encore \u00e0 accomplir."}, {"heading": "3) Les niveaux de traitement", "text": "Nous introduisons dans cette section les diff\u00e9rents niveaux de traitements n\u00e9cessaires pour parvenir \u00e0 une compr\u00e9hension compl\u00e8te d\u201fun \u00e9nonc\u00e9 en langage naturel. Ces niveaux correspondent \u00e0 des modules qu\u201fil faudrait d\u00e9velopper et faire coop\u00e9rer dans le cadre d\u201fune application compl\u00e8te de traitement de la langue.\nNous consid\u00e9rons \u00e0 titre d\u201fexemple l\u201f\u00e9nonc\u00e9 suivant :\n(1) Le pr\u00e9sident des antialcooliques mangeait une pomme avec un couteau,\nNous envisageons les traitements successifs qu\u201fil convient d\u201fappliquer \u00e0 cet \u00e9nonc\u00e9 pour parvenir automatiquement \u00e0 sa compr\u00e9hension la plus compl\u00e8te. Il nous faudra successivement : \u2013 identifier les composants lexicaux, et leurs propri\u00e9t\u00e9s : c\u201fest l\u201f\u00e9tape de traitement lexical ; \u2013 identifier des constituants (groupe) de plus haut niveau, et les relations (de dominance) qu\u201fils entretiennent entre eux : c\u201fest l\u201f\u00e9tape de traitement syntaxique ; \u2013 construire une repr\u00e9sentation du sens de cet \u00e9nonc\u00e9, en associant \u00e0 chaque concept \u00e9voqu\u00e9 un objet ou une action dans un monde de r\u00e9f\u00e9rence (r\u00e9el ou imaginaire) : c\u201fest l\u201f\u00e9tape de traitement s\u00e9mantique. \u2013 identifier enfin la fonction de l\u201f\u00e9nonc\u00e9 dans le contexte particulier de la situation dans lequel il a \u00e9t\u00e9 produit : c\u201fest l\u201f\u00e9tape de traitement pragmatique."}, {"heading": "3.1) Le niveau lexical", "text": "Le but de cette \u00e9tape de traitement est de passer des formes atomiques (tokens) identifi\u00e9es par le segmenteur de mots (Nugues, 2006), c\u201fest-\u00e0-dire de reconna\u00eetre dans chaque cha\u00eene de caract\u00e8res une (ou plusieurs) unit\u00e9(s) linguistique(s), dot\u00e9e(s) de caract\u00e9ristiques propres (son sens, sa prononciation, ses propri\u00e9t\u00e9s syntaxiques, etc).\nSelon l\u201fexemple (1), l\u201f\u00e9tape d\u201fidentification lexicale devrait conduire \u00e0 un r\u00e9sultat voisin de celui donn\u00e9 ci-dessous, dans lequel on peut constater en particulier l\u201fambigu\u00eft\u00e9 d\u201fune forme telle que pr\u00e9sident: cette cha\u00eene correspond \u00e0 deux formes du verbe pr\u00e9sider (indicatif et subjonctif), ainsi \u00e0 une forme nominale, et sa prononciation diff\u00e8re selon qu\u201felle repr\u00e9sente un nom ou un verbe.\nOn con\u00e7oit ais\u00e9ment que pour les mots les plus fr\u00e9quents, comme \u00ab le \u00bb, la solution la plus simple est de rechercher la forme dans (un lexique) 1 pr\u00e9compil\u00e9. Dans les faits, c\u201fest effectivement ce qui se passe, y compris pour des formes plus rares, dans la mesure o\u00f9 l\u201futilisation des formalismes de repr\u00e9sentations compacts permettant un acc\u00e8s optimis\u00e9 (par exemple sous la forme d\u201fautomates d\u201f\u00e9tats finis), et l\u201faugmentation de la taille des m\u00e9moires rend possible la manipulation de vastes lexiques (de l\u201fordre de centaines de milliers de formes). Pour autant, cette solution ne r\u00e9sout pas tous les probl\u00e8mes. Le langage est cr\u00e9ation, et de nouvelles formes surgissent tous les jours, que ce soit par emprunt \u00e0 d\u201fautres langues (il n\u201fy a qu\u201fa \u00e9cout\u00e9 parler les enseignants des autres modules de la dominante informatique !), ou, plus fr\u00e9quemment, par l\u201fapplication de proc\u00e9d\u00e9s r\u00e9guliers de cr\u00e9ations de mots, qui nous permettent de composer pratiquement \u00e0 volont\u00e9 de nouvelles formes imm\u00e9diatement compr\u00e9hensibles par tous les locuteurs de notre langue : si j\u201faime lire Proust, ne peut-on pas dire que je m\u201femproustise, que de proustien je deviens proustiste, voire proustophile, puis que, lass\u00e9, je me d\u00e9semproustise... Ce ph\u00e9nom\u00e8ne n\u201fa rien de marginal, puisqu\u201fil est admis que, m\u00eame si l\u201fon dispose d\u201fun lexique complet du fran\u00e7ais, environ 5 \u00e0 10 % des mots d\u201fun article de journal pris au hasard ne figureront pas dans ce lexique. La solution purement lexicale atteint l\u00e0 ses limites, et il faut donc mettre en \u0153uvre d\u201fautres approches, de mani\u00e8re \u00e0 traiter aussi les formes hors-lexiques."}, {"heading": "3.2) Le niveau syntaxique", "text": "La syntaxe est l\u201f\u00e9tude des contraintes portant sur les successions licites de formes qui doivent \u00eatre prises en compte lorsque l\u201fon cherche \u00e0 d\u00e9crire les s\u00e9quences constituant des phrases grammaticalement correctes: toutes les suites de mots ne forment pas des phrases acceptables (Ligauzat, 1994). La description des contraintes caract\u00e9ristiques d\u201fune langue donn\u00e9e se fait par le biais d\u201fune grammaire.\nLes mod\u00e8les et les formalismes grammaticaux propos\u00e9s dans le cadre du traitement automatique du langage sont particuli\u00e8rement nombreux et vari\u00e9s. Le niveau syntaxique est donc le niveau conceptuel concern\u00e9 par le calcul de la validit\u00e9 de certaines s\u00e9quences de mots, les s\u00e9quences grammaticales ou bien-form\u00e9es. On con\u00e7oit bien l\u201fimportance d\u201fun tel traitement dans une application de g\u00e9n\u00e9ration, pour laquelle il est essentiel que la machine engendre des \u00e9nonc\u00e9s corrects. Dans une application de compr\u00e9hension, la machine analyse des textes qui lui sont fournis, et dont on peut supposer qu\u201fils sont grammaticaux. Pourquoi donc, dans ce cas, mettre en \u0153uvre des connaissances syntaxiques ?\nUne premi\u00e8re motivation provient du fait que les textes ne sont pas toujours grammaticaux, par exemple \u00e0 cause des fautes d\u201forthographes. Une analyse syntaxique peut donc permettre de choisir entre plusieurs corrections \u00e0 apporter \u00e0 une phrase incorrecte, mais \u00e9galement se r\u00e9v\u00e9ler bien utile pour am\u00e9liorer les sorties d\u201fun syst\u00e8me de reconnaissance optique de caract\u00e8re ou d\u201fencore un syst\u00e8me de reconnaissance de la parole.\n1 En linguistique, le lexique d'une langue constitue l'ensemble de ses lemmes ou, d'une mani\u00e8re plus courante mais moins pr\u00e9cise, \u00ab l'ensemble de ses mots \u00bb. Toujours dans les usages courants, on utilise, plus facilement le terme vocabulaire.\nUne seconde raison est que l\u201fentr\u00e9e du module syntaxique est une s\u00e9rie de formes \u00e9tiquet\u00e9es morpho syntaxiquement, une forme pouvant avoir plusieurs \u00e9tiquettes diff\u00e9rentes. Une premi\u00e8re fonction du module syntaxique consiste donc \u00e0 d\u00e9sambigu\u00efser la suite d\u201f\u00e9tiquettes, en \u00e9liminant les s\u00e9quences qui correspondent \u00e0 des \u00e9nonc\u00e9s grammaticalement invalides."}, {"heading": "3.3) Le niveau s\u00e9mantique", "text": "Intuitivement, la s\u00e9mantique se pr\u00e9occupe du sens des \u00e9nonc\u00e9s (yvon, 2007). Une phrase comme Le jardin de la porte mange le ciel, bien que grammaticalement parfaitement correcte, n\u201fa pas de sens dans la plupart des contextes. Mais qu\u201fest ce que le sens ? Pour une expression comme la bouteille de droite dans la phrase :\nSers-toi du vin. Non, pas celui-l\u00e0, prends la bouteille de droite.\nLe sens correspond \u00e0 l\u201fobjet (au concept) d\u00e9sign\u00e9. Dans cet exemple, le sens d\u00e9pend \u00e9troitement du contexte : il faut une repr\u00e9sentation de la sc\u00e8ne pour savoir de quelle bouteille, et donc de quel vin, il s\u201fagit.\nPour une expression pr\u00e9dicative, comme Il commande un Margaux 1982, le sens peut \u00eatre repr\u00e9sent\u00e9 par un pr\u00e9dicat logique comme <demander(paul,chateau_margaux_82)>. L\u201fidentification d\u201fun tel pr\u00e9dicat d\u00e9pend encore une fois du contexte. Le verbe commander aurait en effet renvoy\u00e9 \u00e0 un autre pr\u00e9dicat s\u201fil s\u201fagissait de commander un navire."}, {"heading": "3.4) Le niveau pragmatique", "text": "Le niveau pragmatique est parfaitement dissociable du niveau s\u00e9mantique. Alors que la s\u00e9mantique se pr\u00e9occupe du sens des \u00e9nonc\u00e9s, la pragmatique porte sur les attitudes (v\u00e9rit\u00e9, d\u00e9sirabilit\u00e9, probabilit\u00e9) que les locuteurs adoptent vis \u00e0 vis des \u00e9nonc\u00e9s et sur les op\u00e9rations logiques que ces attitudes d\u00e9clenchent (yvon, 2007).\nHistoriquement, certains linguistes ont appel\u00e9 pragmatique tout traitement du langage faisant intervenir le contexte d\u201f\u00e9nonciation. Ce crit\u00e8re pr\u00e9sente fort peu d\u201fint\u00e9r\u00eat, dans la mesure o\u00f9 les processus s\u00e9mantiques sont les m\u00eames, que le contexte intervienne ou non. En revanche, il existe une distinction tr\u00e8s importante, bas\u00e9e sur la notion d\u201finf\u00e9rence logique. Consid\u00e9rons l\u201fexemple suivant :\n(a) Pierre : viendras-tu au bal ce soir ?\n(b) Marie : j\u201fai entendu que Paul y sera !\nLa seconde phrase sera interpr\u00e9t\u00e9e comme une r\u00e9ponse n\u00e9gative si l\u201fon sait que Marie n\u201faime pas Paul.\nCette interpr\u00e9tation n\u201fest pas de nature s\u00e9mantique. \u00c0 partir de la compr\u00e9hension du sens de l\u201fintervention de Marie, Pierre r\u00e9alise une inf\u00e9rence logique en utilisant une connaissance contextuelle, l\u201finimiti\u00e9 entre Paul et Marie. Pierre conclut que Marie ne veut pas aller au bal, autrement dit il reconstruit l\u201fattitude de Marie par rapport \u00e0 son propre \u00e9nonc\u00e9. Cette op\u00e9ration n\u201fest pas une construction conceptuelle, c\u201fest une op\u00e9ration logique. Elle appartient donc \u00e0 la pragmatique.\nLes techniques correspondant \u00e0 ce niveau de traitement sont encore tr\u00e8s mal ma\u00eetris\u00e9es. Le niveau pragmatique, m\u00eame si les techniques qui lui correspondent ne sont pas encore stabilis\u00e9es, appara\u00eet moins difficile \u00e0 aborder que le niveau s\u00e9mantique. Il semble en effet qu\u201fil repose sur un ensemble de principes fixes, comme le principe de pertinence, qu\u201fil s\u201fagit de mod\u00e9liser correctement. La d\u00e9termination de l\u201fintention argumentative de l\u201fauteur ou du locuteur est essentielle dans bon nombre d\u201fapplications, notamment la gestion de dialogue, le r\u00e9sum\u00e9 de texte, la traduction automatique, les syst\u00e8mes d\u201faide contextuelle ou d\u201fenseignement, etc. On attend donc des progr\u00e8s significatifs \u00e0 ce niveau dans les ann\u00e9es qui viennent."}, {"heading": "4) Les difficult\u00e9s du TALN : ambigu\u00eft\u00e9", "text": "Le langage naturel est ambigu, et cette ambigu\u00eft\u00e9 se manifeste par la multitude d\u201finterpr\u00e9tations possibles pour chacune des entit\u00e9s linguistiques pertinentes pour un niveau de traitement, comme en t\u00e9moignent les exemples suivants :"}, {"heading": "4.1) Ambigu\u00eft\u00e9 des graph\u00e8mes (lettres)", "text": "Cette ambig\u00fcit\u00e9 existe dans le processus d\u201fencodage orthographique en comparant la prononciation du i dans lit, poire et maison.\n4.2) Ambigu\u00eft\u00e9 dans les propri\u00e9t\u00e9s grammaticales et\ns\u00e9mantiques\nAinsi mange est ambigu \u00e0 la fois morpho-syntaxiquement, puisqu\u201fil correspond aux formes indicatives et subjonctives du verbe manger), mais aussi s\u00e9mantiquement. En effet, cette forme peut aussi bien r\u00e9f\u00e9rer (dans un style familier) \u00e0 un ensemble d\u201factions conventionnelles (comme de s\u201fassoir \u00e0 une table, mettre une serviette, utiliser divers ustensiles, ceci \u00e9ventuellement en maintenant une interaction avec un autre humain) avec pour vision finale d\u201fing\u00e9rer de la nourriture (auquel il ne requi\u00e8re pas de compl\u00e9ment d\u201fobjet direct); et \u00e0 l\u201faction consistant \u00e0 effectivement ing\u00e9rer un type particulier de nourriture (auquel cas il requiert un compl\u00e9ment d\u201fobjet direct), etc. Comparez en effet :\n(a) Demain, Paul mange avec ma s\u0153ur. (b) Paul mange son pain au chocolat.\nAinsi que les d\u00e9ductions que l\u201fon peut faire \u00e0 partir de ces deux \u00e9nonc\u00e9s : de (a), on peut raisonnablement conclure que Paul sera assis \u00e0 une table, disposera de couverts,... ; tout ceci n\u201fest pas n\u00e9cessairement vrai dans le cas de l\u201f\u00e9nonc\u00e9 (b)."}, {"heading": "4.3) Ambigu\u00eft\u00e9 de la fonction grammaticale des groupes de", "text": "mots\nL\u201fambig\u00fcit\u00e9 est illustr\u00e9e par la phrase :\nil poursuit la jeune fille \u00e0 v\u00e9lo.\nDans cet exemple \u00e0 v\u00e9lo est soit un compl\u00e9ment de mani\u00e8re de poursuivre (et c\u201fest il qui p\u00e9dale), soit un compl\u00e9ment de nom de fille (et c\u201fest elle qui mouline) ;"}, {"heading": "4.4) Ambigu\u00eft\u00e9 de la port\u00e9e des quantificateurs, des", "text": "conjonctions et des pr\u00e9positions\nAinsi, dans Tous mes amis ont pris un verre, nous pouvons supposer que chacun avait un verre diff\u00e9rent, mais dans Tous les t\u00e9moins ont entendu un cri, il est probable que c\u201f\u00e9tait le m\u00eame cri pour tous les t\u00e9moins. De m\u00eame, lorsque l\u201fon \u00e9voque les chiens et les chats de Paul, l\u201finterpr\u00e9tation la plus naturelle consiste \u00e0 comprendre de Paul comme le compl\u00e9ment de nom du groupe les chats et les chiens ; cette lecture est beaucoup moins naturelle dans les chiens de race et les chats de Paul ;\n4.5) Ambigu\u00eft\u00e9 sur l\u201finterpr\u00e9tation \u00e0 donner en contexte \u00e0\nun \u00e9nonc\u00e9\nNous comparons ainsi la \u00ab signification \u00bb de non, dans les deux \u00e9changes suivants :\n(a) Si je vais en cours demain ? Non (n\u00e9gation) (b) Tu vas en cours demain ! Non ! (j\u2019y crois pas).\nEn effet, l\u201fambigu\u00eft\u00e9 est un probl\u00e8me majeur du TALN. Pour y pallier les chercheurs ont cr\u00e9e un domaine qui a pour but de centraliser ce probl\u00e8me et de proposer des m\u00e9thodes de traitement du langage au niveau lexical, syntaxique et s\u00e9mantique ind\u00e9pendamment d'une application donn\u00e9e. Dans ce qui suit nous allons explorer ce domaine ainsi que ces diff\u00e9rentes applications.\n5) La reconnaissance de l\u201finf\u00e9rence textuelle (RTE)"}, {"heading": "5.1) Introduction", "text": "Le RTE est un domaine de recherche assez r\u00e9cent en traitement du langage (2005) qui a pour but de f\u00e9d\u00e9rer les recherches en TALN afin de proposer des m\u00e9thodes de traitement du langage au niveau lexical, syntaxique et s\u00e9mantique ind\u00e9pendamment d'une application donn\u00e9e (r\u00e9sum\u00e9 automatique, syst\u00e8me de question r\u00e9ponse ou encore la recherche d'information). Le RTE vise \u00e0 d\u00e9terminer automatiquement si un segment de texte (H) est d\u00e9duit d\u201fun autre segment de texte (T) (Dagan et al, 05).\nExemple :\nT : \u00ab Amine a 40 degr\u00e9s de fi\u00e8vre, sa m\u00e8re l\u2019a pris imm\u00e9diatement \u00e0 l\u2019h\u00f4pital \u00bb.\nH : \u00ab Amine est malade \u00bb.\nDans l\u201fexemple ci dessus, comprendre que le segment H est d\u00e9duit du segment T, est une d\u00e9duction simple pour l\u201f\u00eatre humain, mais pour la machine c\u201fest tout autre. Pour cela, les chercheurs ont propos\u00e9 plusieurs approches pour r\u00e9soudre le probl\u00e8me.\nDans l\u201fexemple, pour dire que H est inf\u00e9r\u00e9 de T le syst\u00e8me doit lier le fait d\u201f\u00eatre malade (texte H) avec le mot h\u00f4pital et fi\u00e8vre (texte T) pour d\u00e9duire qu\u201fil y a inf\u00e9rence.\nDans cette section, nous pr\u00e9sentons les diff\u00e9rentes applications du RTE, puis nous d\u00e9taillons les \u00e9tapes de d\u00e9veloppement du challenge Pascale RTE qui a \u00e9t\u00e9 mis en \u0153uvre pour \u00e9valuer les avances des groupes de recherches dans ce domaine.\nNous d\u00e9veloppons dans la section 2, les principaux niveaux d\u201finf\u00e9rences textuelles et nous terminons ce chapitre par la pr\u00e9sentation de quelques m\u00e9thodes d\u201finf\u00e9rences utilis\u00e9es par des groupes de recherches \u00e9valu\u00e9es dans le challenge pascal RTE."}, {"heading": "5.2) Les applications du RTE", "text": "L\u201finf\u00e9rence entre des segments de textes est au c\u0153ur de plusieurs applications du traitement automatique du langage naturel (TALN). Nous d\u00e9crivons dans ce qui suit comment le RTE contribue dans ces diff\u00e9rents domaines :"}, {"heading": "5.2.1) La recherche d\u201finformation", "text": "La recherche d'information est la science qui consiste \u00e0 rechercher l'information dans des documents, des bases de donn\u00e9es, qu'elles soient relationnelles ou mises en r\u00e9seau par des liens hypertextes (Joachims, 2003).\nLa recherche d'information est un domaine historiquement li\u00e9 aux sciences de l'information et \u00e0 la biblioth\u00e9conomie qui ont toujours eu le souci d\u201f\u00e9tablir des repr\u00e9sentations des documents dans le but d'en r\u00e9cup\u00e9rer des informations, \u00e0 travers la construction d\u201findex. L\u201finformatique a permis le d\u00e9veloppement d\u201foutils pour traiter l\u201finformation et \u00e0 \u00e9tablir la repr\u00e9sentation des documents au moment de leur indexation, ainsi que pour rechercher l\u201finformation. Les approches qui \u00e9taient utilis\u00e9es auparavant se basaient sur la recherche de mots cl\u00e9s dans les textes. Le probl\u00e8me dans ces syst\u00e8mes c\u201fest qu\u201fils ne prennent en compte ni les relations entre les mots cl\u00e9s ni leurs sens.\nExemple 1 :\nFigure 1.1 : Exemple de moteur de recherche a base de mot cl\u00e9\nDans cet exemple (Figure 1.1) nous remarquons qu\u201fun moteur de recherche fonctionnant \u00e0 base de mot cl\u00e9 comme Google fait bien ce type de recherche et r\u00e9pond bien \u00e0 la question simple comme \u00ab the first president Algerie \u00bb puisque la simple recherche des mots cl\u00e9s dans les diff\u00e9rents documents permet de donner une bonne r\u00e9ponse \u00e0 l\u201futilisateur.\nExemple 2 :\nDans cet exemple (Figure 1.2) nous remarquons que l\u201futilisation des mots cl\u00e9s seuls peut nous mener \u00e0 un document qui n\u201fa aucune relation avec notre requ\u00eate et qui montre que l\u201finf\u00e9rence s\u00e9mantique est indispensable \u00e0 la recherche d\u201finformation."}, {"heading": "5.2.2) L\u201fextraction d\u201finformation", "text": "L'extraction d'information consiste \u00e0 identifier l'information bien pr\u00e9cise d'un texte en langue naturelle et \u00e0 la repr\u00e9senter sous forme structur\u00e9e. Par exemple, \u00e0 partir d'un rapport sur un accident d\u201fautomobile, un syst\u00e8me d'extraction d'information sera capable d'identifier la date et le lieu de l'accident, le type d'incident, ainsi que les victimes. Ces informations pourront ensuite \u00eatre stock\u00e9es dans une base de donn\u00e9es pour y effectuer des recherches ult\u00e9rieures ou \u00eatre utilis\u00e9es comme base \u00e0 la g\u00e9n\u00e9ration automatique de r\u00e9sum\u00e9s (Kosseim., 2005).\nL'extraction d'information s'av\u00e8re tr\u00e8s pratique dans l'industrie o\u00f9 des op\u00e9rations d'extractions y sont quotidiennement effectu\u00e9es \u00e0 la main. Nous pensons, par exemple, au traitement de rapports de filature d'une agence de surveillance, \u00e0 la gestion de d\u00e9p\u00eaches d'une agence de presse, \u00e0 la manipulation de rapports d'incidents d'une compagnie d'assurances, etc. Un syst\u00e8me d'extraction d'information permet de traiter automatiquement et plus rapidement de grandes quantit\u00e9s de documents.\nDans ce cas de figure le RTE donne son apport dans la d\u00e9tection de l\u201finformation."}, {"heading": "5.2.3) Le syst\u00e8me question- r\u00e9ponse", "text": "Les syst\u00e8mes Questions/R\u00e9ponses sont capables de r\u00e9pondre \u00e0 des questions \u00e9crites en langage naturel en cherchant la r\u00e9ponse dans un corpus de textes. Ils sont classiquement constitu\u00e9s d'un ensemble de modules r\u00e9alisant respectivement : une analyse de la question, une recherche de portions de documents pertinents et une extraction de la r\u00e9ponse \u00e0 l'aide de motifs d'extractions, ou patterns en anglais (Nyberg et al, 2002). Le syst\u00e8me doit identifier le segment de texte qui contient la r\u00e9ponse. L\u201finf\u00e9rence entre le texte T et le segment H peut aider \u00e0 d\u00e9tecter le segment qui contient la r\u00e9ponse.\nExemple : H : \u00ab who is Ariel Sharon ? \u00bb. T : \u00ab Israel\u201fs Prime Minister, Ariel Sharon, visited Prague \u00bb. Le syst\u00e8me effectue d\u201fabord une transformation \u00e0 l\u201faffirmatif de la question \u00ab Ariel Sharon is Isreal\u201fs Prime Minister \u00bb puis une comparaison entre le segment de texte T et le segment H. Si H est inf\u00e9r\u00e9 de T comme dans l\u201fexemple alors T est accept\u00e9 comme un segment contenant la r\u00e9ponse \u00e0 la question H."}, {"heading": "5.2.4) La traduction automatique", "text": "La traduction automatique d\u00e9signe, au sens strict, le fait de traduire enti\u00e8rement un texte gr\u00e2ce \u00e0 un ou plusieurs programmes informatiques, sans qu'un traducteur humain n'ait \u00e0 intervenir (Laurian et Marie, 1996). La traduction automatique est encore tr\u00e8s imparfaite, et la g\u00e9n\u00e9ration de traduction d'une qualit\u00e9 comparable \u00e0 celle de traducteurs humains rel\u00e8ve encore de l'utopie.\nPour \u00e9valuer les performances de la machine, le RTE permet de comparer la traduction faite par la machine avec celle faite par l\u201fhumain."}, {"heading": "5.2.5) Le r\u00e9sum\u00e9 automatique", "text": "Le r\u00e9sum\u00e9 automatique se propose de faire une extraction de l\u201finformation jug\u00e9e importante d\u201fun texte d\u201fentr\u00e9 pour construire, \u00e0 partir de cette information, un nouveau texte de sortie, condens\u00e9. Ce nouveau texte permet d\u201f\u00e9viter la lecture en entier du document source.\nLe RTE est utilis\u00e9 pour trouver les redondances d\u201finformations. Si un segment de texte inf\u00e8re un autre, un des deux va \u00eatre supprim\u00e9. En particulier c\u201fest int\u00e9ressant dans les applications qui font le r\u00e9sum\u00e9 de plusieurs documents. S\u201fil y a plusieurs documents qui relatent le m\u00eame fait, un seul doit \u00eatre pris."}, {"heading": "5.2.6) L\u201facquisition des Paraphrases (AP)", "text": "Une paraphrase, c\u201fest le fait de dire avec d\u201fautres mots, d\u201fautres termes ce qui est dit dans un texte, un paragraphe.\nDans ce cas de figure le RTE est utilis\u00e9 pour d\u00e9tecter l\u201finf\u00e9rence entre le texte paraphras\u00e9 et le texte d\u201forigine. Comme dans l\u201fexemple suivant o\u00f9 les deux phrases ont le m\u00eame sens avec juste une autre disposition des mots dans la phrase. Exemple : T : \u00ab Ce m\u00e9dicament est commercialis\u00e9 au Canada seulement \u00bb. H : \u00ab La commercialisation de ce m\u00e9dicament s\u201fest effectu\u00e9e au Canada seulement \u00bb.\n5.3) Le challenge \u201cPASCAL Recognizing of Textual Entailment\u201d\nLe Pascal recognition of Textual Entailment est un concours qui a d\u00e9but\u00e9 en 2005. Il se d\u00e9roule chaque ann\u00e9e et son objectif, est de fournir \u00e0 la communaut\u00e9 du TAL un nouveau point de rep\u00e8re pour v\u00e9rifier les progr\u00e8s dans la reconnaissance l\u201finf\u00e9rence textuelle, et de comparer les r\u00e9alisations des diff\u00e9rents groupes de recherches travaillant dans ce domaine ( http://www.pascal-network.org/Challenges/RTE/ ).\nSuite au succ\u00e8s du premier RTE un nouveau RTE a \u00e9t\u00e9 organis\u00e9, avec 23 groupes venus du monde entier (par rapport \u00e0 17 pour le premier d\u00e9fi) qui ont pr\u00e9sent\u00e9 les r\u00e9sultats de leurs syst\u00e8mes. Les repr\u00e9sentants des groupes participants ont pr\u00e9sent\u00e9 leurs travaux au PASCAL Challenges atelier en avril 2006 \u00e0 Venise, Italie.\nL'\u00e9v\u00e9nement a \u00e9t\u00e9 un succ\u00e8s et le nombre de participants et leurs contributions \u00e0 la discussion ont d\u00e9montr\u00e9 que le Textual Entailment est un domaine en expansion rapide. D\u00e9j\u00e0, les ateliers ont donn\u00e9 naissance \u00e0 un nombre impressionnant de publications dans les grandes conf\u00e9rences, en plus des travaux en cours. Les d\u00e9marches entreprises pour r\u00e9aliser le concours sont :\n Pr\u00e9paration du corpus.\n Etablissement des mesures d\u201f\u00e9valuations. Dans ce qui suit les d\u00e9marches cit\u00e9es sont d\u00e9taill\u00e9es."}, {"heading": "5.3.1) La pr\u00e9paration du corpus", "text": "La premi\u00e8re \u00e9tape \u00e0 entreprendre consiste \u00e0 cr\u00e9er le corpus de texte-hypoth\u00e8se (T-H) pair de petit segment de texte, qui correspond \u00e0 des informations collect\u00e9es \u00e0 travers le web dans des domaines diff\u00e9rents. Les exemples ont \u00e9t\u00e9 collect\u00e9s manuellement pour l\u201finf\u00e9rence par des annotateurs humains. Les exemples ont \u00e9t\u00e9 divis\u00e9s en deux types de corpus (Corpus de d\u00e9veloppement et Corpus de test).\nLe corpus de d\u00e9veloppement est utilis\u00e9 au d\u00e9but de challenge pour donner aux utilisateurs la possibilit\u00e9 de tester leurs syst\u00e8mes et de faire des petites mises au point pour se pr\u00e9parer au test.\nLe corpus de test est utilis\u00e9 pour l\u201f\u00e9valuation finale.\n1. Pour le RTE 1 Le corpus \u00e9tait compos\u00e9 de 567 paires de (H-T) pour le d\u00e9veloppement et 800 pairs pour le test. Le choix d\u201fun large corpus est justifi\u00e9 par la n\u00e9cessit\u00e9 d\u201favoir des r\u00e9sultats statistiques significatifs.\nLe corpus est collect\u00e9 en respectant les diff\u00e9rentes applications du traitement de langage naturel (QR, RI, IE., PP\u2026) et la collecte des exemples est faite par niveau d\u201finf\u00e9rence : L\u201fanalyse lexique, syntaxique, logique et connaissance du monde, et les diff\u00e9rents niveaux de difficult\u00e9s.\nLe corpus doit inclure 50% d\u201fun exemple de T-H correspondant \u00e0 de vraies inf\u00e9rences et 50% de fausses inf\u00e9rences. Pour cela, chaque exemple (T-H) est jug\u00e9 vrai ou faux par l\u201fannotateur qui cr\u00e9e l\u201fexemple. Puis l\u201fexemple est \u00e9valu\u00e9 par un second juge qui \u00e9value les paires de textes et d\u201fhypoth\u00e8ses, sans avoir pris conscience de leurs contextes.\nLes annotateurs \u00e9taient d\u201faccord avec le jugement dans 80% des exemples, ce qui correspond \u00e0 0.6 Kappa2, les 20% du corpus o\u00f9 il n\u201fy a pas eu d\u201faccord ont \u00e9t\u00e9 supprim\u00e9s). Le reste du corpus est consid\u00e9r\u00e9 comme un \u00abgold standard\u00bb ou \u00ab BASELINE \u00bb pour l\u201f\u00e9valuation.\nLe but de cette man\u0153uvre est de cr\u00e9er un corpus o\u00f9 il n\u201fy aura pas de jugements controverses. Pour effectuer leurs jugements et annoter le corpus les annotateurs suivent des directives. Dans ce qui suit, nous allons citer les diff\u00e9rentes directives qui \u00e9taient prises en consid\u00e9ration."}, {"heading": "5.3.2) Les directives de jugements", "text": " L\u201finf\u00e9rence est une relation \u00e0 un seul sens.\n L\u201fhypoth\u00e8se doit \u00eatre inf\u00e9r\u00e9e d\u201fun texte, mais le texte ne doit pas forcement \u00eatre inf\u00e9r\u00e9 de l\u201fhypoth\u00e8se.\n L\u201fhypoth\u00e8se doit \u00eatre inf\u00e9r\u00e9e enti\u00e8rement du texte. L\u201finf\u00e9rence est fausse s\u201fil reste une partie de l\u201fhypoth\u00e8se qui ne peut \u00eatre inf\u00e9r\u00e9e par le texte.\n2 Kappa (J.Cohen, 1960) :c\u201fest une mesure statistique pour calculer a quel point deux personnes (ou groupes de personnes) A et B sont d\u201faccord pour classer N \u00e9l\u00e9ments dans K cat\u00e9gories mutuellement exclusives.\n les cas o\u00f9 l\u201finf\u00e9rence est probable doit \u00eatre jug\u00e9 comme vrai.\n il est autoris\u00e9 d\u201futiliser les connaissances du monde comme dans l\u201fexemple le chiffre d\u2019affaire de Google est de 50 millions de dollars. On doit savoir que Google est une\nentreprise donc on peut lui attribuer la possibilit\u00e9 d\u201favoir un chiffre d\u201faffaire."}, {"heading": "5.3.3) Les mesures d\u201f\u00e9valuation", "text": "Le syst\u00e8me d\u201fannotation du corpus adopt\u00e9 dans les deux challenges pr\u00e9c\u00e9dant est binaire, c\u201fest-\u00e0-dire que le syst\u00e8me donne deux r\u00e9sultats possibles soit l\u201finf\u00e9rence entre les deux textes est vrai ou fausse}. Le r\u00e9sultat est compar\u00e9 au \u201eGOLD standard\u201f, et le pourcentage donnant le nombre de fois o\u00f9 il y a similitude entre le syst\u00e8me et le \u201egold standard\u201f donne \u201el\u201faccuracy\u201f du syst\u00e8me. L\u201faccuracy est une mesure standard dans les syst\u00e8mes de traitement du langage naturel. Elle est fr\u00e9quemment utilis\u00e9e pour \u00e9valuer les performances des applications, (Beyer et al. 2005). Elle est calcul\u00e9e comme ceci. Accuracy = X / Y. O\u00f9 : X : repr\u00e9sente le nombre de fois o\u00f9 les r\u00e9sultats du syst\u00e8me sont similaires au gold standard. Y : repr\u00e9sente le nombre de paires contenu dans le corpus de test. Par exemple Le nombre de r\u00e9sultats similaires est de 500 paires et le corpus est de 800 paires, l\u201faccuracy est de 500/800 qui est \u00e9gale \u00e0 62,5%."}, {"heading": "5.4) L\u201fanalyse des principales m\u00e9thodes utilis\u00e9es", "text": "Dans ce qui suit, nous allons pr\u00e9senter les diff\u00e9rentes \u00e9tapes de traitements effectu\u00e9es pour d\u00e9tecter l\u201finf\u00e9rence textuelle."}, {"heading": "5.4.1) Les pr\u00e9traitements", "text": "Quelque soit la technique adopt\u00e9e pour effectuer l\u201finf\u00e9rence textuelle, il est n\u00e9cessaire de pr\u00e9 traiter les donn\u00e9es brutes avant d\u201fappliquer les techniques d\u201finf\u00e9rences. Dans le RTE trois niveaux de pr\u00e9traitements ont \u00e9t\u00e9 utilis\u00e9s:\n Niveau lexical pour \u00e9viter les probl\u00e8mes li\u00e9s \u00e0 la morphologie de mots.\n Niveau syntaxique pour pouvoir donner une structure pr\u00e9alable au texte.\n Niveau s\u00e9mantique pour analyser les sens des mots.\nCi-dessous nous allons pr\u00e9senter les diff\u00e9rents niveaux de pr\u00e9traitements existants et utiliser pour l\u201finf\u00e9rence textuelle."}, {"heading": "5.4.1.1) Le Niveau lexical", "text": "L\u201fobjectif du pr\u00e9traitement au niveau du \"mot\" est de r\u00e9duire les variations dues \u00e0 la morphologie et d\u201f\u00e9viter que des petites erreurs initiales se propagent dans toutes les \u00e9tapes du traitement. Pour cela, diff\u00e9rentes transformations ont \u00e9t\u00e9 introduites :\nA) La tokenisation\nL\u201fobjectif de la tokenisation est de trouver les unit\u00e9s de base du \"sens \" dans les textes. Pour cela, les syst\u00e8mes doivent r\u00e9soudre diff\u00e9rents probl\u00e8mes comme la gestion des blancs, de la ponctuation, des retours lignes et des fins de paragraphes.\nB) La lemmatisation\nLa lemmatisation d'une forme d'un mot consiste \u00e0 en prendre sa forme canonique. Celle-ci est d\u00e9finie comme ceci : Quand c\u201fest un verbe on doit le m\u00e8tre \u00e0 l'infinitif :\nExemple : Parti (verbe) -> partir\nPour les autres mots, ils doivent \u00eatre mis au masculin singulier.\nExemple : Parti (nom) -> parti\nPour effectuer l\u201fanalyse lexicale, diff\u00e9rents outil qui ont \u00e9t\u00e9 mis en point. Le TreeTagger est un des outils le plus utilis\u00e9s pour la langue anglaise.\nLe TreeTagger effectue une tokinisation, une lemmatisation et un \u00e9tiquetage comme le montre l\u201fexemple suivant :\nExemple d\u201fentr\u00e9e dans le TreeTagger : \u00ab Le TreeTagger est facile \u00e0 utiliser \u00bb.\nLa figure suivante reprend la sortie du logiciel."}, {"heading": "5.4.1.2) Le niveau syntaxique", "text": "L\u201fobjectif de cette \u00e9tape est de d\u00e9crire les structures de phrases possibles et d\u201fanalyser les phrases en structures. La structure r\u00e9v\u00e9l\u00e9e par l'analyse donne alors pr\u00e9cis\u00e9ment la fa\u00e7on dont les r\u00e8gles syntaxiques sont combin\u00e9es dans le texte. Cette structure est souvent une hi\u00e9rarchie de syntagmes, repr\u00e9sent\u00e9e par un arbre syntaxique dont les n\u0153uds peuvent \u00eatre d\u00e9cor\u00e9s (dot\u00e9s d'informations compl\u00e9mentaires).\nNous illustrons cette analyse avec la sortie d\u201fun des outils utilis\u00e9s dans l\u201fannotation syntaxique (SYNTEX) 3 .\nNous remarquons dans l\u201fexemple ci-dessus que l\u201fanalyse morphosyntaxique permet d\u201f\u00e9tiqueter les mots et l\u201fanalyse syntaxique permet de les relier entre eux."}, {"heading": "5.4.1.3) Le niveau s\u00e9mantique", "text": "Pour simplifier, nous pouvons dire que l'analyse s\u00e9mantique s'appuie, entre autres, sur la compr\u00e9hension du sens des mots des textes, contrairement aux analyses lexicales ou grammaticales, qui analysent les mots \u00e0 partir du lexique ou de la grammaire. Dans le cadre de l'analyse s\u00e9mantique, il est donc fondamental d'analyser le sens des mots pour comprendre ce qu'on dit. Pour cela plusieurs approches ont \u00e9t\u00e9 adopt\u00e9es pour annoter les relations entre les mots pour mieux cerner leur sens. Une de ces approches est la structure pr\u00e9dicat argument qui est expliqu\u00e9e ci-dessous.\nLa structure que nous appelons pr\u00e9dicative est un graphe de relation pr\u00e9dicat-argument, o\u00f9 les pr\u00e9dicats repr\u00e9sentent l\u201faction. Une relation pr\u00e9dicative correspond \u00e0 une relation de d\u00e9pendance syntaxique. Le pr\u00e9dicat peut avoir plusieurs types d\u201farguments (sujet, compl\u00e9ment d\u201fobjet direct et compl\u00e9ment d\u201fobjet indirect).\n3 La fonction de cet analyseur est d'identifier des relations de d\u00e9pendances entre mots et d'extraire d'un corpus des syntagmes (verbaux, nominaux, adjectivaux) (Bourigault, 2000).\nExemple :\n5.4.2) Les diff\u00e9rents niveaux d\u201finf\u00e9rence textuelle\nDans cette section nous allons pr\u00e9senter les diff\u00e9rents niveaux d\u201finf\u00e9rences (Lexical, lexico syntaxique, s\u00e9mantique (logique) et connaissance du monde) utilis\u00e9es pour la d\u00e9tection de l\u201finf\u00e9rence textuelle.\n5.4.2.1) L\u201finf\u00e9rence au niveau lexical\nA ce niveau, l\u201finf\u00e9rence entre deux segments de textes est accept\u00e9 s\u201fil existe des mots semblables entre T et H, o\u00f9 les mots contenus dans la phrase H peuvent \u00eatre inf\u00e9r\u00e9s de T apr\u00e8s des transformations lexicales (vanderwede et al., 2005). Les trois techniques d\u201finf\u00e9rence sont ci-dessous :\nA) Les d\u00e9rivations morphologiques\nCe m\u00e9canisme d\u201finf\u00e9rence consid\u00e8re que deux des termes sont \u00e9quivalents si l\u201fun peut \u00eatre obtenu de l\u201fautre apr\u00e8s une d\u00e9rivation morphologique. Il existe trois type de d\u00e9rivations morphologiques :\n- La normalisation\nExemple : T : \u00ab l\u201facquisition d\u201fun AIRBUS A380 par le roi FAHD \u00bb. H : \u00ab le roi FAHD a acquis un AIRBUS A380 \u00bb.\nLa transformation <d\u2019acquisition> en <a acquis > a permis de faire la d\u00e9duction de l\u201finf\u00e9rence entre les deux textes.\n- La d\u00e9rivation nominale\nExemple\nT : Le GIA a donne de la terreur au peuple alg\u00e9rien.\nH : Le GIA est un groupe terroriste.\nLa transformation de terreur en terroriste a permis de faire la d\u00e9duction de l\u201finf\u00e9rence entre les deux textes.\n- Les relations entre noms et verbes\nExemple\nT : Mark gagne \u00e0 tous les coups.\nH : Mark est un gagnant.\nLa transformation de Mark est un gagnant en Mark gagne a permis de faire la d\u00e9duction de l\u201finf\u00e9rence entre les deux textes.\nB) Les relations ontologiques\nUne ontologie est un ensemble structur\u00e9 de concepts permettant de donner un sens aux informations. Elle est aussi un mod\u00e8le de donn\u00e9es qui repr\u00e9sente un ensemble de concepts dans un domaine et les rapports entre ces concepts (Bourigault, 2004). Elle est employ\u00e9e pour raisonner au sujet des objets dans ce domaine. Les concepts sont organis\u00e9s dans un graphe dont les relations peuvent \u00eatre : des relations s\u00e9mantiques et des relations de subsomption. L'objectif premier d'une ontologie est de mod\u00e9liser un ensemble de connaissances dans un domaine donn\u00e9. Ce m\u00e9canisme d\u201finf\u00e9rence se r\u00e9f\u00e8re \u00e0 la relation ontologique qui existe entre deux termes. Ces diff\u00e9rentes relations sont cit\u00e9es ci dessous.\n- La synonymie\nRepr\u00e9sente un ensemble de mots interchangeables dans un contexte donn\u00e9. Elle est souvent utilis\u00e9e pour reconna\u00eetre l\u201finf\u00e9rence.\nExemple\nT : \u00ab Jane a abattue Mark \u00bb.\nH : \u00ab Jane a tu\u00e9 Mark \u00bb.\nAutre exemple comme (\u201e\u201fcommencer\u201f\u201f/\u201f\u201fd\u00e9marrer\u201f\u201f), (\u201e\u201fenlever \u201e\u201f/\u201f\u201f retirer\u201f\u201f).\n- La g\u00e9n\u00e9ralisation (hypernymie)\nLa relation d\u201fHypernymie est le terme g\u00e9n\u00e9rique utilis\u00e9 pour d\u00e9signer une classe englobant des instances de classes plus sp\u00e9cifiques. Y est un hypernyme de X si X est un type de Y.\nExemple\nT : \u00ab On a coup\u00e9 le sapin \u00bb.\nH : \u00ab On a coup\u00e9 l\u201farbre \u00bb.\nLa relation entre l\u201farbre et le sapin (l\u201farbre est une g\u00e9n\u00e9ralisation sapin) a permis l\u201finf\u00e9rence entre les deux textes.\n- L\u201fhyponymie\nLa relation Hyponymie est le terme sp\u00e9cifique utilis\u00e9 pour d\u00e9signer un membre d'une classe (relation inverse de Hypernymie). X est un hyponyme de Y si X est un type de Y.\nExemple\nT : John a pris un moyen de transport pour terrestre pour faire le trajet Toulouse paris.\nH : John a fait Toulouse Paris en TGV.\nLa relation entre moyen de transport pour terrestre et TGV qui a permis l\u201finf\u00e9rence entre les deux textes.\n- La relation de M\u00e9ronymie\nX est un m\u00e9ronyme de Y si X est une partie de Y.\nExemple :\n{Avion} a comme m\u00e9ronyme {{porte}, {moteur}} ;\nC) La connaissance du monde dans l\u201fanalyse lexique\nCe m\u00e9canisme d\u201finf\u00e9rence se r\u00e9f\u00e8re \u00e0 la connaissance du monde pour d\u00e9tecter l\u201finf\u00e9rence au niveau lexical (Len Schubert, 2002).\nExemple :\n\u201e\u201fTaliban  organisation \u201e\u201fet \u201e\u201fyahoo  moteur de recherche \u201e\u201f\n5.4.2.2) L\u201finf\u00e9rence au niveau lexico syntaxique\nAu niveau lexico syntaxique l\u201fhypoth\u00e8se est repr\u00e9sent\u00e9e par des relations de d\u00e9pendances syntaxiques. La relation d\u201finf\u00e9rence entre T et H est d\u00e9finit comme un recouvrement des relations de H par les relations de T, ou le recouvrement est obtenu apr\u00e8s une s\u00e9quence de transformation appliqu\u00e9e \u00e0 la relation de T. Les diff\u00e9rents s types de transformations sont sp\u00e9cifies par :\nA) Les transformations syntaxiques\nDans ce m\u00e9canisme d\u201finf\u00e9rence, la transformation se fait entre les structures syntaxiques qui ont les m\u00eames \u00e9l\u00e9ments lexicaux et pr\u00e9servent le sens de la relation entre elles (Vanderwende et al..,2005). Ce genre de m\u00e9canisme inclut la transformation passive active et l\u201fapposition 4 . Exemple : \u00ab Mon chat, ce gentil petit siamois, est assis sur cette table \u00bb. \u00ab Il peut devenir : Mon chat est assis sur cette table, ce gentil petit siamois ! \u00bb.\nB) L\u201finf\u00e9rence bas\u00e9e sur les paraphrases\nDans ce m\u00e9canisme d\u201finf\u00e9rence, la transformation modifie la structure syntaxique du segment du texte et quelques \u00e9l\u00e9ments lexicaux, mais elle garde la relation d\u201finf\u00e9rence entre le segment de texte original et celui qui est transform\u00e9. Ce type de relation entre les deux segments est appel\u00e9 dans la litt\u00e9rature \u00ab Paraphrase \u00bb. Des m\u00e9thodes pour effectuer la transformation sont propos\u00e9es dans (Lin et Pantel, 2001). Exemple : T : \u00ab Ce m\u00e9dicament est commercialis\u00e9 au Canada seulement \u00bb. H : \u00ab La commercialisation de ce m\u00e9dicament s\u201fest effectu\u00e9e au Canada seulement \u00bb.\nC) La cor\u00e9f\u00e9rence\nLa relation de cor\u00e9f\u00e9rence met en relation un pronom et un ant\u00e9c\u00e9dent \u00e9loign\u00e9 l\u201fun de l\u201fautre dans la phrase. Par exemple : \u00ab L\u201fItalie et l\u201fAllemagne ont tous deux jou\u00e9 deux matchs, ils n\u201font perdu aucun match encore \u00bb. Inf\u00e8re \u00e0\n\u00ab Ni l\u201fItalie ni l\u201fAllemagne n\u201fa encore perdu un match \u00bb, cela inclut la transformation de\ncor\u00e9f\u00e9rence \u00ab ils  l\u201fItalie et l\u201fAllemagne \u00bb.\n4 L\u201fapposition est une construction grammaticale dans laquelle deux \u00e9l\u00e9ments, normalement substantif expressions, sont plac\u00e9s \u00e0 c\u00f4t\u00e9 de l'autre, avec un \u00e9l\u00e9ment servant \u00e0 d\u00e9finir ou modifier les autres.. Lorsque ce dispositif est utilis\u00e9, les deux \u00e9l\u00e9ments sont cens\u00e9s \u00eatre \u00e0 l'apposition. Par exemple, dans l'expression \"mon ami Alice\" le nom \"Alice\" est \u00e0 l'apposition de \"mon ami\".\n5.4.2.3) L\u201finf\u00e9rence s\u00e9mantique (logique)\nA ce niveau, l\u201finf\u00e9rence entre deux segments de textes est accept\u00e9e si le sens des deux phrases se concorde. En d\u201fautre termes, l\u201finf\u00e9rence textuelle est consid\u00e9r\u00e9e comme un probl\u00e8me d\u201fimplication logique entre les sens des deux phrases (Tatu et al., 2006). Pour cela, la structure pr\u00e9dicat argument est souvent utilis\u00e9e, c'est-\u00e0-dire que, les segments de textes T et H sont transform\u00e9s en pr\u00e9dicat et \u00e0 travers des d\u00e9ductions logiques comme par exemple l\u201futilisation de la (preuve par r\u00e9futation 5 ) on arrive \u00e0 d\u00e9duire l\u201finf\u00e9rence. Un exemple des syst\u00e8mes utilisant cette m\u00e9thode d\u201finf\u00e9rence est d\u00e9crit dans la section (5.5.4.2)."}, {"heading": "5.4.3) Les ressources utilis\u00e9es", "text": "Dans les diff\u00e9rents techniques d\u201finf\u00e9rence textuelle plusieurs ressources sont utilis\u00e9es (WordNet, framnet, Cyc\u2026). L\u201fensemble constitue un \u00ab \u00e9cosyst\u00e8me \u00bb complet couvrant des aspects lexicaux, syntaxiques et s\u00e9mantiques. Combin\u00e9es, ces ressources fournissent un point de d\u00e9part int\u00e9ressant pour des d\u00e9veloppements s\u00e9mantiques en TAL ou dans le cadre du Web s\u00e9mantique, telle que la recherche d\u201finformation, l\u201finf\u00e9rence pour la compr\u00e9hension automatique de textes, la d\u00e9sambigu\u00efsation lexicale, la r\u00e9solution d\u201fanaphore et aussi l\u201finf\u00e9rence textuelle. Dans ce qui suit, nous allons d\u00e9finir les diff\u00e9rentes ressources existantes et utilis\u00e9es pour d\u00e9tecter l\u201finf\u00e9rence textuelle."}, {"heading": "5.4.3.1) Le WordNet", "text": "WordNet (Miller, 1995) est une base de donn\u00e9es lexicale d\u00e9velopp\u00e9e depuis 1985 par des linguistes du laboratoire des sciences cognitives de l'universit\u00e9 de Princeton. C\u201fest un r\u00e9seau s\u00e9mantique de la langue anglaise, qui est fond\u00e9 sur une th\u00e9orie psychologique du langage. La premi\u00e8re version diffus\u00e9e remonte \u00e0 juin 1991. Son but est de r\u00e9pertorier de classifier et de mettre en relation de diverses mani\u00e8res le contenu s\u00e9mantique et lexical de la langue anglaise. Le syst\u00e8me se pr\u00e9sente sous la forme d'une base de donn\u00e9es \u00e9lectronique (Chaumartin, 2007).\nLe synset (ensemble de synonymes) est la composante atomique sur laquelle repose WordNet. Un synset correspond \u00e0 un groupe de mots, d\u00e9notant un sens ou un usage particulier. Un synset est d\u00e9fini par les relations qu'il entretient avec les sens voisins. Les noms et verbes sont organis\u00e9s en hi\u00e9rarchies. Des relations d\u201fhyperonymie et d\u201fhyponymie relient les \u00ab anc\u00eatres \u00bb des noms et des verbes avec leurs \u00absp\u00e9cialisations\u00bb. Au niveau racine, ces hi\u00e9rarchies sont organis\u00e9es en types de base.\n\u00c0 l'instar d'un dictionnaire traditionnel, WordNet offre ainsi, pour chaque mot, une liste de synsets correspondant \u00e0 toutes ses acceptions r\u00e9pertori\u00e9es. Mais les synsets ont \u00e9galement d'autres usages : ils peuvent repr\u00e9senter des concepts plus abstraits, de plus haut niveau que les mots et leurs sens, qu'on peut organiser sous forme d'ontologie. Nous pouvons ainsi interroger le syst\u00e8me quant aux hyperonymes d'un mot particulier. \u00c0 partir par exemple du\n5 La r\u00e9futation est un proc\u00e9d\u00e9 logique consistant \u00e0 prouver la fausset\u00e9 ou l'insuffisance d'une proposition ou d'un argument.\nsens le plus commun du nom \"car\" (correspondant au synset \"1. car, auto...\"), la relation d'hyperonymie d\u00e9finit un arbre de concepts de plus en plus g\u00e9n\u00e9raux:\n1. car, auto, automobile, machine, motorcar\n=> motor vehicle, automotive vehicle\n=> vehicle\n=> conveyance, transport\n=> instrumentality, instrumentation\n=> artifact, artefact\n=> object, physical object\n=> entity, something\nDans cet exemple, il est clair que le dernier concept, \"entity, something\", est le plus g\u00e9n\u00e9ral, le plus abstrait (il pourrait ainsi \u00eatre le super-concept d'une multitude de concepts plus sp\u00e9cialis\u00e9s).\nNous pouvons \u00e9galement interroger le syst\u00e8me quant \u00e0 la relation inverse de l'hypernymie, l'hyponymie. WordNet offre en fait une multitude d'autres ontologies, faisant usage de relations s\u00e9mantiques plus sp\u00e9cialis\u00e9es et restrictives. Nous pouvons ainsi interroger le syst\u00e8me quant aux m\u00e9ronymes d'un mot ou d'un concept, les parties constitutives d'un objet (\"HAS-PART\"). Les m\u00e9ronymes associ\u00e9s au sens \"car, auto...\" du mot \"car\" sont :\n1. car, auto, automobile, machine, motorcar\nHAS PART: accelerator, accelerator pedal, gas pedal, gas,\nthrottle, gun\nHAS PART: air bag\nHAS PART: auto accessory\nHAS PART: automobile engine\nHAS PART: automobile horn, car horn, motor horn, horn\n(...)"}, {"heading": "5.4.3.2) Le FrameNet", "text": "FrameNet (Baker, Fillmore et Lowe, 1998), projet men\u00e9 \u00e0 Berkeley \u00e0 l\u201finitiative de Charles Fillmore, est fond\u00e9 sur la s\u00e9mantique des cadres (frame semantics). FrameNet a pour objectif de documenter la combinatoire syntaxique et s\u00e9mantique pour chacun des sens d\u201fune entr\u00e9e lexicale \u00e0 travers une annotation manuelle d\u201fexemples choisis dans des corpus sur des crit\u00e8res de repr\u00e9sentativit\u00e9 lexicographique. Les annotations sont ensuite synth\u00e9tis\u00e9es dans des tables, qui r\u00e9sument pour chaque mot les cadres avec leurs arguments syntaxiques."}, {"heading": "5.4.3.3) Le Cyc", "text": "Cyc est un projet d\u201fIntelligence Artificielle lanc\u00e9 en 1984 par Doug Lenat. Cyc vise \u00e0 regrouper une ontologie et une base de donn\u00e9es compl\u00e8tes sur le sens commun, pour permettre \u00e0 des applications d'int\u00e9lligence artificielle. D\u201feffectuer des raisonnements similaires \u00e0 ceux des humains. Des fragments de connaissances typiques sont par exemple : \u00ab les chats ont quatre pattes \u00bb ; \u00ab Paris est la capitale de la France \u00bb. Elles contiennent des\ntermes (PARIS, FRANCE, CHAT?) et des assertions (\u00ab Paris est la capitale de la France \u00bb) qui relient ces termes entre eux. Gr\u00e2ce au moteur d\u201finf\u00e9rence fourni avec la base Cyc, il est possible d\u201fobtenir une r\u00e9ponse \u00e0 une question comme \u00ab Quelle est la capitale de la France ? \u00bb La base Cyc contient des millions d\u201fassertions (faits et r\u00e8gles) rentr\u00e9es \u00e0 la main."}, {"heading": "5.5) L\u201fanalyse des syst\u00e8mes participant au RTE 2", "text": "Nous avons marqu\u00e9s pour chaque groupe de recherche participant au RTE2 les types d\u201finf\u00e9rences utilis\u00e9s. Les r\u00e9sultats sont affiches dans le tableau 1.6.\nTableau 1.1 Repr\u00e9sentation des diff\u00e9rents types d\u201finf\u00e9rences entrepris par les groupes de\nrecherches\n5.5.4) Quelques exemples d\u201finf\u00e9rence utilis\u00e9s par des groupes de recherches\nDans le RTE 2 nous avons remarqu\u00e9 que tous les groupes de recherches n\u201font pas utilis\u00e9 d\u201finf\u00e9rence temporelle dans leurs syst\u00e8mes et \u00e0 l\u201fheure actuelle, les r\u00e9sultats du RTE 3 ne sont pas encore publi\u00e9s officiellement mais d\u201fapr\u00e8s notre lecture des diff\u00e9rentes publications des groupes de recherches participant au RTE3, il y a deux groupes qui ont fait allusion \u00e0 l\u201finf\u00e9rence temporelle. Pour cela, nous avons choisi de d\u00e9crire leurs syst\u00e8mes.\nType d\u201fanalyse\nGroupes de recherches\nlexicale\nsyntaxique lexico-\ns\u00e9mantique\nLogique num\u00e9rique\nTemporelle\nUNED + + + +\nUMESS +\nMITRE + +\nIRST + +\nGOGEX + + +\nLCC\u201fS + +\nC&C + +\n5.5.4.1) La reconnaissance de l\u201finf\u00e9rence textuelle bas\u00e9e sur l\u201fanalyse de d\u00e9pendance et WordNet (Universit\u00e9 nationale de l\u201f\u00e9ducation a distance de\nMadrid)\nLe syst\u00e8me pr\u00e9sent\u00e9 montre comment des informations s\u00e9mantiques peuvent \u00eatre extraites du texte en utilisant les structurations syntaxiques donn\u00e9es par l\u201fanalyse de d\u00e9pendance, et des ressources lexico- s\u00e9mantiques comme Word Net peuvent d\u00e9velopper le RTE.\nLes techniques utilis\u00e9es par ce syst\u00e8me sont les suivantes :\n l\u201fanalyse d\u00e9pendance du texte et de l\u201fhypoth\u00e8se.\n l\u201finf\u00e9rence lexicale entre les n\u0153uds des arbres en utilisant Word Net.\n la concordance entre les arbres de d\u00e9pendance bas\u00e9e sur la notion de l\u201finclusion.\nA) L\u201farchitecture du syst\u00e8me\nL\u201farchitecture du syst\u00e8me est montr\u00e9e dans la figure suivante (Figure 1.7) :\nCette architecture est compos\u00e9e de Trois modules :\n L\u201fanalyse de d\u00e9pendance : Elle consiste \u00e0 normaliser les informations du dataset, de g\u00e9n\u00e9rer les d\u00e9pendances existantes entre les mots et de donner \u00e0 la sortie un arbre de\nd\u00e9pendance constitu\u00e9 de n\u0153uds qui repr\u00e9sentent les mots de la phrase et d\u201farcs qui repr\u00e9sentent les d\u00e9pendances entre les n\u0153uds. Ce travail est r\u00e9alis\u00e9 par un logiciel nomm\u00e9 \u00ab Lin\u201fs Minipar \u00bb.\n L\u201fanalyse lexicale : prend les informations donn\u00e9es par l\u201fanalyse de d\u00e9pendance et retourne les mots de l\u201fhypoth\u00e8se H qui sont inf\u00e8res du texte T. Ce module utilise\nWordNet pour d\u00e9tecter les relations de (synonymie, hyponymie, meronymie ) entre les un\u00eetes lexicales.\n Les relations entre les arbres de d\u00e9pendance : le but est de d\u00e9duire si l\u201farbre de l\u201fhypoth\u00e8se est recouvert par l\u201farbre de d\u00e9pendance du texte, Pour cela, la r\u00e8gle \u00e9tablie\nest qu\u201fun arc est dit recouvert s\u201fil est dans le m\u00eame emplacement que dans l\u201farbre repr\u00e9sentant le texte et il y a une inf\u00e9rence entre ces n\u0153uds et celle du texte. La figure ci-dessous (figure 1.8) reprend ce genre de recouvrement.\nB) L\u201fexp\u00e9rimentation du syst\u00e8me\nLe groupe a soumi deux syst\u00e8mes au challenge.\n- Syst\u00e8me 1 Le systeme1 n\u201futilise que les deux premiers modules, et la d\u00e9cision de l\u201fexistence d\u201finf\u00e9rence est prise par rapport au nombre de n\u0153uds de l\u201fhypoth\u00e8se inf\u00e8re de l\u201farbre de d\u00e9pendance du texte.\n- Syst\u00e8me 2 Le syst\u00e8me 2 utilise les 3 modules et la d\u00e9cision est prise par rapport au nombre d\u201farc\nrecouverts.\nLes r\u00e9sultats sont affiches dans le tableau 1.2. L\u201futilisation de WordNet seule a donn\u00e9 de bons r\u00e9sultats, mais en ajoutant le module de recouvrement il d\u00e9cro\u00eet les performances du syst\u00e8me.\nTableau 1.2: Les valeurs de pr\u00e9cision des syst\u00e8mes\nLes syst\u00e8mes Pr\u00e9cision\nSyst\u00e8me 1 : 56,37 %\nSyst\u00e8me 2 : 54,75 %\nLa notion de recouvrement n\u201fest pas appropri\u00e9e pour le RTE, car un large recouvrement n\u201fimplique pas une inf\u00e9rence s\u00e9mantique, et un faible recouvrement n\u201fimplique pas une diff\u00e9rence s\u00e9mantique. L\u201futilisation de Word Net a contribu\u00e9 \u00e0 l\u201finf\u00e9rence au niveau lexical et a augment\u00e9 les performances du syst\u00e8me. Dans cette direction, les prochaines \u00e9tapes seront de reconna\u00eetre et d\u201f\u00e9valuer les inf\u00e9rences entre les expressions num\u00e9riques, les entit\u00e9s nomm\u00e9es 6 et les expressions temporelles.\nC) L\u201f\u00e9volution du syst\u00e8me\nCe qui a \u00e9t\u00e9 d\u00e9velopp\u00e9 pour le RTE2 est un module pour la d\u00e9tection des expressions num\u00e9riques, ce qui a permis d\u201faugmenter fortement la pr\u00e9cision (harrera et al.,2006). La figure suivante montre comment le module est introduit dans leur syst\u00e8me.\nDans le RTE 3, le groupe s\u201fest focalis\u00e9 sur l\u201finf\u00e9rence entre les entit\u00e9s nomm\u00e9es. Il a d\u00e9fini les relations d\u201finf\u00e9rences entre les entit\u00e9s nomm\u00e9es (Rodrigo et al., 2007). Exemple :\n- Nom propre E1 inf\u00e8re nom propre E2 si une cha\u00eene E1 contient la cha\u00eene E2. - une expression du temps t1 inf\u00e8re une expression du temps T2 si l\u201fintervalle de temps\nexprim\u00e9e dans t1 est inclus dans l\u201fintervalle T2.\nCe module de d\u201finf\u00e9rence a lui aussi contribu\u00e9 \u00e0 augmenter la pr\u00e9cision (Rodrigo et al, 2007)."}, {"heading": "5.5.4.2) COGEX (universit\u00e9 du Texas, USA)", "text": "Le syst\u00e8me utilise une approche logique pour r\u00e9soudre l\u201finf\u00e9rence textuelle. En d\u201fautres termes, l\u201finf\u00e9rence textuelle est consid\u00e9r\u00e9e comme un probl\u00e8me d\u201fimplication logique entre les sens des deux phrases (Tatu et al., 2006). La description du syst\u00e8me et l\u201f\u00e9volution qui s\u201fest produite dans chaque challenge est d\u00e9crite dans ce qui suit.\n6 Les entit\u00e9s nomm\u00e9es d\u00e9signent l'ensemble des noms de personnes, de lieux, d'entreprise contenues dans un texte.\nA) La description du syst\u00e8me\nLa premi\u00e8re \u00e9tape consiste \u00e0 transformer le texte et l\u201fhypoth\u00e8se en forme logique (Moldovan and Rus, 2001).\nPour cela il faut d\u201fabord transformer du langage nature a un format pr\u00e9dicat argument, pour cella le groupe utilise WordNet pour lier le pr\u00e9dicat avec ses argument. Concr\u00e8tement WordNet produit des relations entre les synsets, et chaque synset lui correspond un pr\u00e9dicat.\nLe pr\u00e9dicat peut avoir un ou plusieurs arguments et le pr\u00e9dicat qui correspond au nom a un seul argument en g\u00e9n\u00e9ral, et le pr\u00e9dicat qui correspond \u00e0 un verbe a trois arguments : l\u201f\u00e9v\u00e9nement, le sujet et le compl\u00e9ment d\u201fobjet. Pour chaque relation dans la cha\u00eene lexicale 7 , le syst\u00e8me g\u00e9n\u00e8re un axiome utilisant les pr\u00e9dicats qui correspondent au synset de la relation.\nPar exemple : il y a une relation d\u201finf\u00e9rence entre le verbe vendre et le verbe payer. Le syst\u00e8me g\u00e9n\u00e8re l\u201faxiome suivant pour cette relation : Vendre_VB_1(e1,x1,x2)  payer_VB_1(e1,x1,x3) Ce type d\u201faxiome contribue \u00e0 l\u201finf\u00e9rence quand une cha\u00eene lexicale est trouv\u00e9e.\nApres la transformation des deux paires de texte en format logique le groupe utilise la preuve par \u00ab l\u201fabsurde \u00bb ou \u201e\u201fpreuve par contradiction\u201f\u201f (Wos, 1998). La n\u00e9gation de l\u201fhypoth\u00e8se H est r\u00e9alis\u00e9e s\u201fil y a une contradiction ou une d\u00e9duction de contradiction par rapport au texte T, nous concluons que l\u201fhyponyme est d\u00e9rivable du texte.\nB) L\u201f\u00e9volution du syst\u00e8me\nIl a \u00e9t\u00e9 d\u00e9velopp\u00e9 pour le RTE 2 un module qui traite la n\u00e9gation dans la transformation du texte en pr\u00e9dicat et un autre module qui fait une analyse s\u00e9mantique en tant que pr\u00e9 traitement pour donner les relations existantes entre le verbe et ses arguments et aussi entre les arguments eux- m\u00eames (Tatu et al.,2006).\nPour le RTE3 le groupe a d\u00e9velopp\u00e9 et int\u00e9grer a leur syst\u00e8me plusieurs outils. Dans ce qui suit nous allons pr\u00e9senter l\u201farchitecture du syst\u00e8me et les nouveaux outils con\u00e7us et utilises pour am\u00e9liorer l\u201finf\u00e9rence. Le sch\u00e9ma du dernier syst\u00e8me con\u00e7u pour le RTE 3 par le groupe est donn\u00e9 par la figure cidessous.\n7 Une cha\u00eene lexicale est une cha\u00eene o\u00f9 il y a une relation entre deux synsets.\n- EXtended WordNet XWN (eXtended WordNet) est un projet qui a pour but d\u201fenrichir les relations du dictionnaire WordNet avec des relations s\u00e9mantique entre les synsets et les transforment en format logique (Tatu et Moldovan, 2007).\n- TARSQI\nC\u201fest un syst\u00e8me modulaire pour l'annotation automatique temporelle qui ajoute les expressions du temps, des \u00e9v\u00e9nements et des relations temporelles de l'actualit\u00e9 des textes (Venhaguane et al. ,2005).\n- Outil pour la gestion des cor\u00e9f\u00e9rences\nPour relier les phrases dans les textes longs et, r\u00e9soudre le probl\u00e8me qui est apport\u00e9 par les cor\u00e9f\u00e9rences dans l\u201finf\u00e9rence textuelle, l\u201foutil d\u00e9velopp\u00e9 combine l\u201falgorithme Hobbs (Hobbs, 1978) et l\u201falgorithme de r\u00e9solution d\u201fanaphore (Lappin and Leass, 1994). Pour le RTE, il est important d\u201favoir les relations entre les pr\u00e9dicats d\u201fun long texte.\nExemple 1 : George Bush grandit \u00e0 Greenwich au Connecticut, Il est \u00e0 l'\u00e9poque membre d'une confr\u00e9rie \u00e9tudiante secr\u00e8te devenue c\u00e9l\u00e8bre. Lier George Bush et il, est une des taches que l\u201foutil doit r\u00e9soudre.\nLe d\u00e9veloppement du XWN-KB a eu un impact consid\u00e9rable sur le RTE, mais l\u201futilisation du TARSQI n\u201fa donn\u00e9 aucun impact sur le r\u00e9sultat car l\u201futilisation des expressions temporelles dans ce corpus est inexistante."}, {"heading": "5.5.5) Conclusion", "text": "Dans les travaux entam\u00e9s par UNED sur les entit\u00e9s nomm\u00e9es, le groupe a \u00e9tabli plusieurs r\u00e8gles d\u201finf\u00e9rence entre les entit\u00e9s nomm\u00e9es, parmi lesquelles se trouve une r\u00e8gle d\u201finf\u00e9rence entre les expressions temporelles. Celle-ci peut \u00eatre consid\u00e9rer comme une contribution implicite \u00e0 l\u201finf\u00e9rence temporelle. Mais concr\u00e8tement l\u201finf\u00e9rence temporelle est consid\u00e9r\u00e9e comme une perspective pour leurs prochaines recherches."}, {"heading": "5.6) Conclusion", "text": "Dans ce chapitre nous avons explor\u00e9s l\u201fapport du RTE dans les diff\u00e9rentes applications du TALN (RI, QR, EI et RA) et nous avons explor\u00e9 les diff\u00e9rentes approches utilis\u00e9es pour d\u00e9tecter l\u201finf\u00e9rence (lexical, lexico syntaxique, s\u00e9mantique et logique). Aussi nous avons analys\u00e9 les approches des diff\u00e9rents groupes de recherches qui ont participe au challenge Pascal RTE. Cette \u00e9tape nous a permis de d\u00e9couvrir les chemins qui n\u201font pas encore \u00e9t\u00e9 pris pour d\u00e9tecter l\u201finf\u00e9rence textuelle. Enfin nous nous sommes focalis\u00e9s \u00e0 d\u00e9crire les syst\u00e8mes qui ont mentionn\u00e9 l\u201faspect temporel dans leurs recherches. Nous avons remarqu\u00e9 que dans les trois RTE qui se sont d\u00e9roul\u00e9s, l\u201finf\u00e9rence temporelle est une perspective qui n\u201fest pas encore entam\u00e9e. Nous allons justement d\u00e9crire dans le prochain chapitre l\u201faspect temporel dans le RTE.\n- Chapitre 2 -\nLe temps et la langue\nChapitre 2\nLe temps et la langue"}, {"heading": "1) Introduction", "text": "Avant d\u201fentamer notre travail sur l\u201finf\u00e9rence textuelle, nous avons besoin d\u201fexplorer la notion du temps dans ses diff\u00e9rentes banni\u00e8res, d\u201fabord par rapport \u00e0 la logique modale et aussi par rapport \u00e0 la langue.\nLe mot \u00ab temps \u00bb recouvre plusieurs significations en fran\u00e7ais, et il est n\u00e9cessaire pour la compr\u00e9hension de distinguer le temps grammatical du temps notionnel. Le second est repr\u00e9sent\u00e9 en logique par une ligne droite et infinie, avec un point marquant le pr\u00e9sent et s\u00e9parant le pass\u00e9 du futur. Le temps grammatical d\u00e9signe les marques linguistiques utilis\u00e9es pour exprimer le temps notionnel dans le langage (l\u201fimparfait, le pr\u00e9sent de l\u201findicatif, etc.\u2026).\nDans ce qui suit nous allons explorer ces deux notions du temps, du point de vu logique avec ces diff\u00e9rentes repr\u00e9sentations (structure de points, structure d\u201fintervalles, \u00e9v\u00e9nement et Allen) ensuite au point de vu langage. Nous terminons avec une \u00e9tude sur l\u201finf\u00e9rence temporelle \u00e9labor\u00e9e par l\u201fun des groupes les plus abouti dans le domaine."}, {"heading": "2) La structure de points", "text": "La conception du temps est couramment reli\u00e9e \u00e0 la notion de point ou d\u201finstant sur un axe temporel. Les points permettent en effet d\u201futiliser les structures de nombres (entiers, rationnels ou r\u00e9els). Cette conception est largement utilis\u00e9e dans la mod\u00e9lisation de ph\u00e9nom\u00e8nes \u00e9voluant dans le temps. Cette structure temporelle doit \u00eatre manipul\u00e9e avec un langage logique ; la logique du temps, historiquement tr\u00e8s li\u00e9e au d\u00e9veloppement des logiques modales. Elle est bas\u00e9e sur les\nconnecteurs logiques habituels () et les op\u00e9rateurs temporels P (pass\u00e9) et F (futur). Ainsi, si l\u201faction de chanter effectu\u00e9e par John est not\u00e9e p, on aura les repr\u00e9sentations suivantes : - John chante : p - John chanta : Pp - John chantera : Fp - John avait chant\u00e9 : PPp (on se place dans le pass\u00e9 d\u201fun point situ\u00e9 au pass\u00e9 lui-m\u00eame) - John aura chant\u00e9 : FPp\nCes formules seront enrichies avec de nouveaux op\u00e9rateurs similaires \u00e0 ceux utilis\u00e9s en logique modale (Bras, 1990). Toutes les logiques d\u00e9riv\u00e9es de la logique du temps sont bas\u00e9es sur une ontologie de points. Nous allons maintenant nous int\u00e9resser \u00e0 des ontologies d\u201fintervalles."}, {"heading": "3) La structure d\u201fintervalles", "text": "Du point de vue philosophique, il semble que le concept de point d\u00e9pourvu de dur\u00e9e ne correspond pas \u00e0 la r\u00e9alit\u00e9 : Du point de vue linguistique, il est encore plus \u00e9vident qu\u201fune entit\u00e9 ponctuelle est mal adapt\u00e9e pour l\u201fexpression de la r\u00e9f\u00e9rence temporelle. M\u00eame les expressions dites ponctuelles se r\u00e9f\u00e9rent \u00e0 des p\u00e9riodes \u00e9tendus, comme dans les exemples suivants : A six heures pr\u00e9cises, Harry quitta son bureau.\nUne structure d\u201fintervalle est d\u00e9finie par < I, <, >, avec I un ensemble non vide d\u201fentit\u00e9s\ntemporelles, des relations de pr\u00e9c\u00e9dence (<) et d\u201finclusion (). Voici quelques propri\u00e9t\u00e9s de cette structure :\n\nest un ordre partiel, elle est en effet :\nR\u00e9flexive : (xxx.\nAntisym\u00e9trique : (x(y(xy  yx  xy).\nTransitive : (x(x xyyzxz).\nNous pouvons \u00e9galement remplacer la relation (par la relation O (overlap) qui exprime que deux \u00e9v\u00e9nements ont une partie commune, et d\u00e9finie par rapport \u00e0 l\u201finclusion:\nxOy (z) (zx  zy)\nLa mise en place des logiques temporelles bas\u00e9es sur les s\u00e9mantiques d\u201fintervalles am\u00e8nent \u00e0 des r\u00e9sultats relativement complexes, qu\u201fil n\u201fest pas n\u00e9cessaire d\u201fexposer ici. Des critiques ont \u00e9t\u00e9 adress\u00e9es aux s\u00e9mantiques d\u201fintervalles, notamment en ce qui concerne la difficult\u00e9 de d\u00e9finir la v\u00e9rit\u00e9 d\u201fune proposition (vraie sur toutes intervalles ? sur au moins l\u201fun deux ?). Ces probl\u00e8mes ont provoqu\u00e9 la n\u00e9cessit\u00e9 de concevoir une entit\u00e9 plus globale et plus compl\u00e8te."}, {"heading": "4) La structure d\u201f\u00e9v\u00e9nements", "text": "L\u201f\u00e9v\u00e9nement est une nouvelle entit\u00e9 primitive, de dur\u00e9e non nulle et fini, correspondant intuitivement \u00e0 des fragments de notre perception du monde. Pour les linguistes comme pour les philosophes, les logiciens et les sp\u00e9cialistes de l\u201fintelligence artificielle, la tendance est de pr\u00e9f\u00e9rer les \u00e9v\u00e9nements aux intervalles car les \u00e9v\u00e9nements ont une structure \u00e0 port\u00e9e non seulement temporelle, mais aussi spatiale. Davidson a propos\u00e9 de traiter les \u00e9v\u00e9nements comme des objets, ajoutant \u00e0 l\u201fensemble des individus d\u201fun mod\u00e8le, un ensemble d\u201f\u00e9v\u00e9nements, par exemple, la phrase Marie aime Paul n\u201fest plus repr\u00e9sent\u00e9e par aimer (Paul, Marie), mais par : Aimer(e, Paul, Marie)\nUne structure d\u201f\u00e9v\u00e9nement est d\u00e9finie par Kamp par le triplet<E, , >, o\u00f9 E est un ensemble\nd\u201fentit\u00e9s de base non nulle,  est la relation de pr\u00e9c\u00e9dence, et O la relation de recouvrement si e1Oe2 alors une partie de e1 au moins a eu lieu en m\u00eame temps que e2.\nest asym\u00e9trique : (e1 e2) (e2  e1)\n est transitive : (e1 e2)  (e2 e3)  (e1 e3)\nO est sym\u00e9trique : (e1 e2)  (e2 e1)\nO est r\u00e9flexive : (e1 e2)\nPrincipe de s\u00e9paration : (e1 e2)   (e1 e2)\nTransitive mixte : (e1 e2) (e2 e3)  (e3 e4)  (e1 e4)\nPrincipe de lin\u00e9arit\u00e9 : (e1 e2) (e1 e2) (e2 e1) Ces conditions minimales sont dict\u00e9es par l\u201fintuition lorsque nous avons des \u00e9v\u00e9nements et des relations qui les lient.\nNous avons pr\u00e9sent\u00e9 trois ontologies (structures de points, structures d\u201fintervalles et structures d\u201f\u00e9v\u00e9nements). Il est fondamental de s\u00e9parer le niveau temporel (points et intervalles) du niveau relatif \u00e0 l\u201fexp\u00e9rience du monde (\u00e9v\u00e9nements). En effet, si les relations d\u00e9finies dans les structures d\u201f\u00e9v\u00e9nements sont des relations temporelles, les \u00e9v\u00e9nements sont \u00e9galement des exp\u00e9riences, des \u00ab faits \u00bb qui ont lieu et qui d\u00e9terminent la structure du temps. C\u201fest pourquoi nous pouvons dire que la logique d\u201fAllen, que nous allons pr\u00e9senter, permet de rattacher les deux notions.\n5) La th\u00e9orie d\u201fAllen Selon Allen, deux intervalles peuvent \u00eatre li\u00e9s entre eux par les 13 relations primitives suivantes (Bras, 1990). O\u00f9 X et Y sont des termes de types intervalles de temps (on appelle \u00ab relation inverse \u00bb la relation correspondante entre Y et X) :\nRelation Symbole Symbole\nrelation inverse\nX beforeY < >\nX equalsY  \nX meetsY M Mi\nX overlapsY O Oi\nX duringY D Di\nX startsY S Si\nX finishes Y F Fi\nTableau 2.1: Les relations d\u201fAllen\nLes relations sont mutuellement exclusives : une seule relation est possible entre deux intervalles.\nIl est possible de composer les relations. Ainsi, la transitivit\u00e9 des relations entre intervalles est d\u00e9finie par:\n I  j k (( I < j) (j < k) I < k)\n I  j k ((I mj) (j d k) (I o k)  (I d k)  (I s k))\nIl existe 169 relations de transitivit\u00e9 de ce type.\nDeux intervalles peuvent \u00eatre reli\u00e9s par une relation primitive, mais aussi par une relation complexe ; il est ainsi possible de repr\u00e9senter une connaissance incompl\u00e8te des relations. La connaissance temporelle sur un ensemble d\u201fintervalles peut \u00eatre repr\u00e9sent\u00e9e par un r\u00e9seau de contraintes. Il s\u201fagit d\u201fun graphe orient\u00e9 dont les n\u0153uds repr\u00e9sentent les intervalles et dont les arcs sont \u00e9tiquet\u00e9s par la relation entre les intervalles.\nL\u201fexemple suivant, tr\u00e8s simple, permet d\u201fillustrer rapidement le raisonnement sur les intervalles : Paul entra dans la pi\u00e8ce (1). Marie regardait la t\u00e9l\u00e9vision (2) .Elle l\u2019\u00e9teint (3). (1) Et (2) introduisent l\u201fassertion temporelle suivante : I entre during I regarde_television Puis, en examinant (2) et (3), nous obtenons :\nI regarde_television meet I enteindre- television"}, {"heading": "5) Le temps dans la langue", "text": "Qu'est-ce qui distingue le temps linguistique des autres notions de temps? \"Ce que le temps linguistique a de particulier c'est qu'il est organiquement li\u00e9 \u00e0 l'exercice de la parole, qu'il se d\u00e9finit et s'ordonne comme fonction du discours. Ce temps a son centre \u2013 un centre, \u00e0 la fois, g\u00e9n\u00e9rateur et axial - dans le pr\u00e9sent de l'instance de la parole\" (Benveniste, 1974). Le discours instaure un maintenant, moment de l'\u00e9nonciation. En opposition au maintenant, nous cr\u00e9ons un alors. Ce maintenant est donc le fondement des oppositions de la langue."}, {"heading": "5.1) Le mod\u00e8le de Reichenbach", "text": "Reichenbach a propos\u00e9, pour mod\u00e9liser la s\u00e9mantique des temps grammaticaux, les trois rep\u00e8res suivants : E le moment de l\u201f\u00e9v\u00e9nement S le moment de l\u201f\u00e9nonciation ou de la parole (Speech Time) R le moment de r\u00e9f\u00e9rence Les relations possibles entre rep\u00e8res sont la relation de simultan\u00e9it\u00e9) not\u00e9e \u00ab , \u00bb et la relation de pr\u00e9c\u00e9dence not\u00e9e \u00ab _ \u00bb. La nouveaut\u00e9 r\u00e9side surtout dans l\u201fajout d\u201fun moment de r\u00e9f\u00e9rence, qui permet de prendre en consid\u00e9ration certains temps compos\u00e9s. Ainsi, la repr\u00e9sentation de quelques temps grammaticaux \u00e0 l\u201faide du mod\u00e8le de Reichenbach est la suivante : Pass\u00e9 simple je vis Paul E, R_S Plus-que-parfait j\u201favais vu Paul E_R_S Futur je verrai Paul S_E,R Futur ant\u00e9rieur j\u201faurai vu Paul S_E_R"}, {"heading": "5.2) Les adverbiaux temporels", "text": "Un adverbial est un \u00e9l\u00e9ment (mot ou groupe de mots) ayant une fonction similaire \u00e0 celle d\u201fun adverbe ou d\u201fun compl\u00e9ment circonstanciel, c\u201fest-\u00e0-dire qu\u201fil modifie le verbe auquel il est rattach\u00e9 (Charolles, 1997). Nous pouvons le supprimer sans rendre la syntaxe ni la s\u00e9mantique de la phrase incorrecte. Ainsi, les passages soulign\u00e9s des exemples suivants ont une fonction adverbiale temporelle : Paul arrive demain. Marie est revenue \u00e0 cinq heures. Nous pouvons distinguer : Les adverbiaux de r\u00e9f\u00e9rence temporelle dont le r\u00f4le est d\u201fexprimer la localisation d\u201fun \u00e9v\u00e9nement dans le temps : demain. Les adverbiaux de dur\u00e9e : pendant une heure, en trois jours Les adverbiaux de dur\u00e9e : pendent une heure. Les adverbiaux de fr\u00e9quence : souvent, tous les mois. Les adverbiaux it\u00e9ratifs : trois fois, plusieurs fois. Les adverbiaux de quantification : toujours, quelquefois. Les adverbiaux pr\u00e9suppositionnels : encore, d\u00e9j\u00e0."}, {"heading": "6) L\u201finf\u00e9rence temporelle", "text": "Si l\u201fannotation des marqueurs du temps dans le discours sont l\u201fobjet de plusieurs sujets de recherches, l\u201f\u00e9tude de l\u201finf\u00e9rence temporelle et ses applications ne sont qu\u201f\u00e0 ses d\u00e9buts. Ce probl\u00e8me commence \u00e0 g\u00e9n\u00e9rer des travaux en informatique linguistique li\u00e9s aux enjeux que repr\u00e9sentent les informations temporelles entre autre pour la recherche d\u201finformation et les syst\u00e8mes questions-r\u00e9ponses.\nAvec l\u201fexploration de ce nouveau champ d\u201faction dans le traitement du langage naturel, l\u201finf\u00e9rence temporelle nous permet d\u201f\u00e9tablir des relations temporelles existantes entre \u00e9v\u00e8nements dans un texte, de d\u00e9tecter les relations existantes entre expressions temporelles et aussi les relations entre expressions temporelles et \u00e9v\u00e9nements.\nDans ce qui suit nous pr\u00e9sentons l\u201fune des recherches les plus abouti dans le domaine."}, {"heading": "6.1) Le travail du groupe Human Language Technology Research", "text": "Institut (HLTRI) sur l\u201finf\u00e9rence temporelle :\nHLTRI est un groupe de recherche travaillant sur l\u201finf\u00e9rence temporelle. Il est aussi membre de l\u201forganisation fondatrice du langage (TimeML 8 ) qui est un langage de sp\u00e9cification d\u201f\u00e9v\u00e9nements et d\u201fexpressions temporelles dans le langage naturel. Afin d\u201f\u00e9tudier l\u201finf\u00e9rence temporelle dans le langage naturel, le groupe (HLTRI) a \u00e9tabli un grand corpus de questions-r\u00e9ponses qui sont fond\u00e9es sur la recherche d\u201finformation temporelle. Les questions sont annot\u00e9es comme ceci: \u2022 Expressions temporelles, annot\u00e9es par la balise TIMEX3. \u2022 La balise EVENT correspond \u00e0 un \u00e9v\u00e9nement. \u2022 LIEN est une balise qui code les relations entre \u00e9l\u00e9ments temporels.\nPour d\u00e9couvrir les relations temporelles entre les \u00e9v\u00e9nements dans un texte, le groupe a utilis\u00e9 la repr\u00e9sentation graphique. Les n\u0153uds du graphe sont repr\u00e9sent\u00e9s par les \u00e9v\u00e9nements et les arcs entre les n\u0153uds sont soit des relations TLink, SLink ou ALink. Pour classer les \u00e9v\u00e9nements dans un m\u00eame texte, il utilise les trois relations ALINK, TLINK, SLINK et entre les \u00e9v\u00e8nements de deux textes diff\u00e9rents il n\u201futilise que le module TLINK. - TLink, repr\u00e9sentant les relations temporelles entre les \u00e9v\u00e9nements ou entre un \u00e9v\u00e9nement et une expression temporelle. - SLink ou relation de subordination, est utilis\u00e9e pour introduire des contextes et des relations entre deux \u00e9v\u00e9nements. - ALink ou relation aspectuelle, repr\u00e9sentant la relation aspectuelle entre un \u00e9v\u00e9nement et son argument (en g\u00e9n\u00e9ral c\u201fest un autre \u00e9v\u00e9nement). Afin d\u201favoir toutes les relations temporelles possibles entre les \u00e9v\u00e8nements des deux textes, le groupe a con\u00e7u un module d\u201finf\u00e9rence temporelle. \u00c0 partir des diff\u00e9rents liens TLINK, ALINK et SLINK existant entre les expressions temporelles et les \u00e9v\u00e9nements, le module inf\u00e8re de nouveaux liens non d\u00e9tect\u00e9s auparavant. Pour cela le groupe a d\u00e9finit plusieurs r\u00e8gles d\u201finf\u00e9rences qui sont cit\u00e9es ci-dessous :\n8 TimeML a \u00e9t\u00e9 d\u00e9velopp\u00e9 dans le cadre de trois ateliers AQUAINT et des projets. En 2002, TERQAS atelier vise \u00e0 renforcer la langue naturelle de r\u00e9pondre \u00e0 la question des syst\u00e8mes de r\u00e9ponse temps-fond\u00e9 des questions sur les \u00e9v\u00e9nements et les entit\u00e9s dans des articles de journaux. La premi\u00e8re version de TimeML a \u00e9t\u00e9 d\u00e9finie et la TimeBank corpus a \u00e9t\u00e9 cr\u00e9\u00e9 comme une illustration. Tango a un atelier de suivi dans lequel un outil graphique d'annotation a \u00e9t\u00e9 d\u00e9velopp\u00e9. Actuellement, le TARSQI projet d\u00e9veloppe des algorithmes qui balise les \u00e9v\u00e9nements et le temps des expressions NL textes dans le temps et l'ancrage et l'ordre des \u00e9v\u00e9nements. En outre, TimeML a \u00e9t\u00e9 examin\u00e9e et encourag\u00e9e dans: ARTE atelier ACL : Annoter et Raisonnement sur le temps et les \u00e9v\u00e9nements (Juillet 2006), S\u00e9minaire Dagstuhl Annoter, l'extraction et le raisonnement sur le temps et les \u00e9v\u00e9nements (avril, 2005).\nConcr\u00e8tement le module suit les \u00e9tapes suivantes : Etape1:trouver T1 et T2, deux expressions temporelles dans la phrase ou des phrases adjacentes. Etape2:Rechercher des \u00e9v\u00e9nements E1 et E2 li\u00e9 \u00e0 T1 et T2 respectivement. Etape3:Trouver une relation CE1 lien entre E1 et d'autres \u00e9v\u00e9nements. Etape4:Trouver relation CE2 lien entre E2 et d'autres \u00e9v\u00e9nements. Etape5:Utiliser une inf\u00e9rence temporelle reliant CE2 et CE1.\nLors de l'application de la proc\u00e9dure \u00e0 l'exemple illustr\u00e9 dans la figure 2.3 le module suit les \u00e9tapes suivantes : Etape 1: trouver les expressions temporelles t1 et t2. Etape 2: \u00e9v\u00e9nements e1 et e4 reli\u00e9es \u00e0 t1 et t2 avec TLink : is_includes. Etape 3: d\u00e9tecter la cha\u00eene des \u00e9v\u00e9nements (e1, e2, e3). Etape 5: T1 et T2 sont li\u00e9s (par un ANCHORTIME (t2)=t1), ce qui signifie que e1, e2, e4 et e3 sont simultan\u00e9s."}, {"heading": "6.2) Synth\u00e9se", "text": "Ce groupe s\u201fest focalis\u00e9 sur la d\u00e9duction de nouvelles relations entre \u00e9venements. Cette \u00e9tude sur l\u201finf\u00e9rence temporelle a permis d\u201f\u00e9tablir plusieurs r\u00e9gles d\u201finf\u00e9rences reliant les \u00e9venements et les expressions temporelles."}, {"heading": "7) Conclusion", "text": "Dans ce chapitre nous avons explor\u00e9 la logique temporelle et ses applications dans le traitement du langage Naturel. Nous avons aussi illustr\u00e9 avec les travaux du groupe (HLTRI) les diff\u00e9rents types d\u201finf\u00e9rences temporelles existants, Nous avons remarqu\u00e9 que ce groupe ne se base que sur l\u201fam\u00e9lioration des d\u00e9tections des relations temporelles existantes entre \u00e9venements et expressions temporelles. Nous nous sommes inspir\u00e9s de ces travaux dans notre fa\u00e7on de proc\u00e9der pour \u00e9laborer le corpus et concevoir nos inf\u00e9rences. Nous allons montrer dans les prochains chapitres comment nous avons concr\u00e9tis\u00e9 cet objectif.\nPartie 2\nConception, r\u00e9alisation et mise en \u0153uvre du\nsyst\u00e8me TIMINF\nR\u00e9sum\u00e9 :\nCette partie de notre m\u00e9moire est compos\u00e9e de trois chapitres qui regroupent la conception et la r\u00e9alisation de notre projet. Dans le chapitre trois, nous avons entrepris une d\u00e9marche exp\u00e9rimentale \u00e0 base de corpus afin de d\u00e9gager les diff\u00e9rentes classes d\u201finf\u00e9rence temporelle et \u00e0 partir de cette analyse, nous avons con\u00e7u l\u201farchitecture du syst\u00e8me de reconnaissance d\u201finf\u00e9rence textuelle TIMINF pr\u00e9sent\u00e9 dans le chapitre quatre. Nous nous sommes int\u00e9ress\u00e9s dans le dernier chapitre \u00e0 l\u201f\u00e9valuation des sorties de notre syst\u00e8me en le confrontant \u00e0 un corpus de test adapt\u00e9.\n- Chapitre 3 -\nL\u201f\u00e9laboration et \u00e9tude du corpus\nChapitre 3\nL\u201f\u00e9laboration et l\u201f\u00e9tude du corpus"}, {"heading": "1) Introduction", "text": "L\u201fimportance du RTE dans le TALN a pouss\u00e9 les chercheurs \u00e0 s\u201finvestir dans ce domaine et \u00e0 explorer diff\u00e9rents chemins pour parvenir \u00e0 d\u00e9tecter et \u00e0 classifier diff\u00e9rents types d\u201finf\u00e9rences.\nDans les chapitres pr\u00e9cedents, nous avons d\u201fabord \u00e9tudi\u00e9 les groupes travaillant sur la reconaissance de l\u201finf\u00e9rence textuelle et nous avons remarqu\u00e9 qu\u201faucun groupe n\u201futilisait l\u201finf\u00e9rence temporelle dans son syst\u00e8me. Dans le chapitre pr\u00e9cedent nous avons \u00e9tudi\u00e9 le temps dans la langue et nous avons remarqu\u00e9 que les groupes travaillant sur l\u201finf\u00e9rence temporelle se base sur l\u201fam\u00e9lioration des d\u00e9t\u00e9ctions des relations temporelles existantes entre \u00e9v\u00e8nements et expressions temporelles mais ils n\u201fessayaient en aucun cas d\u201fint\u00e9grer leurs travaux a un syst\u00e9me d\u201finf\u00e9rence textuelle.\nAfin de r\u00e9pondre au manque de l\u201finf\u00e9rence temporelle dans le RTE, notre objectif est d\u201fint\u00e9grer le syst\u00e8me de d\u00e9t\u00e9ction d\u201finf\u00e9rence temporelle dans un syst\u00e9me d\u201finf\u00e9rence textuelle. Pour cela, nous avons l\u201fobligation d\u201f\u00e9tudier les relations temporelles qui peuvent exister entre deux s\u00e9gments de textes \u00e0 travers un corpus que nous avons \u00e9labor\u00e9. Ceci nous a permis de distinguer diff\u00e9rents types d\u201finf\u00e9rences. Nous allons montrer tout au long de ce chapitre comment nous avons concr\u00e9tis\u00e9 ces diff\u00e9rents objectifs."}, {"heading": "2) L\u201f\u00e9laboration du corpus", "text": "La premi\u00e8re \u00e9tape \u00e0 entreprendre consiste \u00e0 cr\u00e9er le corpus constitu\u00e9 de paires de textes et hypoth\u00e8ses (T-H) qui correspond \u00e0 des informations collect\u00e9es \u00e0 travers le web dans des domaines diff\u00e9rents. Nous avons choisi d\u201f\u00e9tablir notre corpus en langue anglaise car jusqu'\u00e0 nos jours les recherches les plus abouties sur l\u201finf\u00e9rence temporelle et aussi sur le RTE sont en langue anglaise.\nPour cela, nous avons choisi d\u201futiliser le corpus de questions \u00e9labor\u00e9es pour le test par la compagne d\u201f\u00e9valuation des syst\u00e8mes de recherches d\u201finformations (clef 9 ) pour l\u201fann\u00e9e 2006.\n9 Le lien du challenge clef : http://www.elda.org/article225.html\nLe challenge CLEF est cr\u00e9e en 2000 pour fournir une infrastructure visant \u00e0 soutenir le d\u00e9veloppement, d'essai et d'\u00e9valuation des syst\u00e8mes de cross-langue de recherche d'information dans plusieurs langues europ\u00e9ennes (Fran\u00e7ais, Italien, Allemand).\nPour pouvoir d\u00e9velopper et \u00e9valuer notre syst\u00e8me, nous avons s\u00e9lectionn\u00e9 des questions portant sur des \u00e9v\u00e9nements temporels et nous avons soumis ces questions au syst\u00e8me de question-r\u00e9ponse answerbus 10 disponible sur le web. Nous avons r\u00e9cup\u00e9r\u00e9 les r\u00e9ponses correspondantes et nous les avons modifi\u00e9es pour obtenir l\u201finf\u00e9rence souhait\u00e9e. Nous avons aussi transform\u00e9 les questions \u00e0 l\u201faffirmatif.\nNous illustrons ces d\u00e9marches par l\u201fexemple montr\u00e9 ci-dessous :\nLa question num\u00e9ro 13 du corpus de test de challenge clef 2006:\nIn what year did the catastrophe in Chernobyl happen?\nLa requ\u00eate va \u00eatre mise dans le syst\u00e8me de question r\u00e9ponse Answerbus. Le r\u00e9sultat est montr\u00e9 ci-dessous :\nNous choisissons la premi\u00e8re r\u00e9ponse donn\u00e9e par le syst\u00e8me qui est :\n10 http://www.answerbus.com\nH: It is not by accident that one of the versions explaining the catastrophe at the Chernobyl AES on 26 April 1986 (because smaller-scale accidents happened there before) ties up the cause of the tragedy with experiments at \"Chernobyl-Two\" .\nAussi, nous transformons la question en affirmatif en r\u00e9pondant \u00e0 la question. Comme r\u00e9sultat nous avons la r\u00e9ponse suivante :"}, {"heading": "T: the catastrophe of Chernobyl happens in 1987.", "text": "Finalement nous avons une paire de texte de la forme :"}, {"heading": "T: the catastrophe of Chernobyl happens in 1987.", "text": "H: It is not by accident that one of the versions explaining the catastrophe at the Chernobyl AES on 26 April 1986 (because smaller-scale accidents happened there before) ties up the cause of the tragedy with experiments at \"Chernobyl-Two\" .\nComme dans le challenge RTE, les exemples sont divis\u00e9s en deux types de corpus (corpus de d\u00e9veloppement et corpus de test).\nLes deux corpus sont constitu\u00e9s de 30 paires de textes et chaque portion du corpus doit inclure 50% d\u201fexemples avec une inf\u00e9rence vrai 50% d\u201fexemples avec une inf\u00e9rence fausse. Pour cela, chaque exemple (T-H) paire est jug\u00e9 par un annotateur pour voir s\u201fil y a une inf\u00e9rence textuelle dans la paire de texte entre (T-H) ou pas.\nLa figure suivante montre un exemple du corpus apr\u00e8s annotation :\nL\u201fexemple est \u00e9valu\u00e9 par un second juge qui \u00e9value les paires de textes et d\u201fhypoth\u00e8ses, sans avoir pris conscience de leurs contextes.\nLes annotateurs \u00e9taient d\u201faccord avec le jugement dans 86,66 % des exemples, ce qui correspond \u00e0 0.6 Kappa qui est une mesure statistique pour calculer a quel point deux personnes A et B sont d\u201faccord pour classer N \u00e9l\u00e9ments dans K cat\u00e9gories mutuellement exclusives, les 13,33% du corpus o\u00f9 il n\u201fy a pas eu d\u201faccord ont \u00e9t\u00e9 supprim\u00e9s. Le reste du corpus est consid\u00e9r\u00e9 comme un \u00abgold standard\u00bb ou \u00ab BASELINE \u00bb pour l\u201f\u00e9valuation."}, {"heading": "3) Classification de l\u201finf\u00e9rence temporelle", "text": "Apres avoir con\u00e7u notre corpus, nous avons annot\u00e9 manuellement les \u00e9v\u00e9nements, les dates et les diff\u00e9rents types d\u201finf\u00e9rences (lexicales, syntaxiques et temporelles) existant entre les segments de textes. Cela nous a permis de d\u00e9tecter les diff\u00e9rents types d\u201finf\u00e9rences temporelles entre les segments de textes. Nous d\u00e9taillons dans ce qui suit les diff\u00e9rentes classes que nous avons distingu\u00e9:"}, {"heading": "3.1) Les inf\u00e9rences entre expressions temporelles", "text": "L\u201finf\u00e9rence permet d\u201f\u00e9tablir des relations temporelles liant date, heure et dur\u00e9e entre elles. Dans le m\u00eame contexte, nous avons distingu\u00e9 trois types d\u201finf\u00e9rences temporelles liant des expressions temporelles.\nCette figure repr\u00e9sente le nombre de paires de textes pour chaque sous classe d\u201finf\u00e9rence dans notre corpus de d\u00e9veloppement.\nDans ce qui suit, nous pr\u00e9sentons les trois types d\u201finf\u00e9rences :"}, {"heading": "3.1.1) Les inf\u00e9rences entre dates", "text": "C\u201fest la relation temporelle entre qui peut y avoir entre les dates du texte T et les dates du texte H.\nL\u201fexemple suivant permet de montrer la relation qui peut exister entre les dates.\nExemple 1:\n<pair id=\"8\" value=\"TRUE\" > T: the football world cup finished on t1: july 12 th 2006. H: the football world cup finished in t2: july 2006.\nDans cet exemple, nous remarquons que l\u201finclusion entre les deux dates t1 et t2 a permis d\u201favoir l\u201finf\u00e9rence temporelle.\nExemple 2:\n1) <pair id=\"1\" value=\"TRUE\" > T: the second world war finished in t1: 1945. H: the end of the second world war took part t2: between 1940 and 1950.\nDans cet exemple nous remarquons aussi que l\u201finclusion entre les deux dates t1 et t2 a permis d\u201favoir l\u201finf\u00e9rence temporelle."}, {"heading": "3.1.2) Les inf\u00e9rences entre adverbiaux temporels", "text": "L\u201finf\u00e9rence permet d\u201f\u00e9tablir une relation temporelle entre adverbiaux de r\u00e9f\u00e9rence temporelle qui exprime la localisation d\u201fun \u00e9v\u00e9nement dans le temps. L\u201fexemple suivant permet de montrer la relation qui peut exister entre deux adverbiaux temporels.\nExemple 1:\n<pair id=\"15\" value=\"TRUE\" > T: he has worked during 10 days. H: He has worked for many days.\nDans cet exemple, nous pouvons remarquer que l\u201fadverbial temporel \u00ab During 10 days \u00bb l\u201finf\u00e8re l\u201fadverbial \u00ab many days \u00bb.\nExemple 2:\n14) <pair id=\"14\" value=\"TRUE\" > T: the day before yesterday, Paul disappeared. H: two days ago, Paul disappeared.\nDans cet exemple nous remarquons que l\u201fadverbial temporel \u00ab the day before yesterday\u00bb inf\u00e8re l\u201fadverbial \u00ab two days ago\u00bb."}, {"heading": "3.1.3) Les inf\u00e9rences entre dates et adverbiaux temporels", "text": "L\u201finf\u00e9rence permet d\u201f\u00e9tablir des relations temporelles entre dates et adverbes. L\u201fexemple suivant permet de montrer la relation qui peut exister entre un adverbial temporel et une date.\nExemple 1:\n18) <pair id=\"18\" value=\"TRUE\" > T: the building collapsed at 2 o\u201fclock p.m. H: in the afternoon the building collapsed.\nDans l\u201fexemple pr\u00e9c\u00e9dant nous pouvons remarquer que \u00ab 2 o\u201fclock p.m \u00bb inf\u00e8re l\u201fadverbial \u00abthe afternoon \u00bb.\nExemple 2:\n19) <pair id=\"19\" value=\"TRUE\" > T: Mark has arrived on Monday, the day after Celine has arrived. H: Celine has arrived on Tuesday.\nDans l\u201fexemple pr\u00e9c\u00e9dant nous pouvons remarquer que si nous ajoutons \u00ab the day after \u00bb \u00e0 \u00ab Monday\u00bb nous arrivons \u00e0 \u00abTuesday\u00bb. Ceci implique une inf\u00e9rence entre ces adverbiaux temporels."}, {"heading": "3.3.2) Les inf\u00e9rences entre \u00e9v\u00e8nements", "text": "L\u201finf\u00e9rence permet d\u201f\u00e9tablir des relations temporelles entre \u00e9v\u00e9nements. Dans ce contexte, nous avons d\u00e9tect\u00e9 deux types d\u201finf\u00e9rences, une qui demande la relation entre \u00e9v\u00e9nements pour d\u00e9tecter l\u201finf\u00e9rence, et l\u201fautre ne demande que l\u201finf\u00e9rence lexico s\u00e9mantique. Cette figure pr\u00e9sente le nombre de paires de textes dans chaque sous classe dans le corpus."}, {"heading": "3.3.2.1) Les relations entre \u00e9v\u00e8nements temporels", "text": "La relation temporelle entre \u00e9v\u00e9nements est \u00e9tablie par rapport aux relations qu\u201felle peut avoir avec d\u201fautres \u00e9v\u00e9nements dans le texte.\nL\u201fexemple suivant permet de montrer la relation qui peut exister entre un adverbial temporel et une date.\nExemple 1:\n22) <pair id=\"22\" value=\"TRUE\" > T: since the death of Turing, the scientific community gives the Turing prize to researchers who found out discoveries in computer science. H: The Turing prize was not given before the death of Turing.\nDans l\u201fexemple pr\u00e9c\u00e9dent, nous pouvons apercevoir que les deux \u00e9v\u00e9nements \u00ab given \u00bb apparaissant dans les deux segments d\u00e9pendent d\u201fautres \u00e9v\u00e9nements \u00ab the death of turing \u00bb pour se situer dans le temps.\nExemple 2:\n23) <pair id=\"23\" value=\"TRUE\" > T: Algeria has become independent. H: before its independence Algeria was colonized.\nDans l\u201fexemple pr\u00e9c\u00e9dent, nous pouvons apercevoir que l\u201f\u00e9v\u00e9nement \u00ab independent \u00bb apparaissant dans le segment H, d\u00e9pendent de l\u201f\u00e9v\u00e9nement \u00ab was colonized \u00bb pour se situer dans le temps."}, {"heading": "3.3.2.2) Les inf\u00e9rences lexico s\u00e9mantiques", "text": "La relation temporelle entre \u00e9v\u00e9nements est \u00e9tablie par rapport aux relations s\u00e9mantiques qui peuvent exister entre eux. L\u201fexemple suivant permet de montrer la relation lexico-s\u00e9mantique existante entre deux \u00e9v\u00e8nements.\nExemple 1:\n26) <pair id=\"26\" value=\"TRUE\" > T: France has won the match against Brasil. H: France has played the match against Brasil.\nDans l\u201fexemple pr\u00e9c\u00e9dent, nous pouvons constater que l\u201f\u00e9v\u00e8nement \u00ab won \u00bb se produit apr\u00e8s l\u201f\u00e9v\u00e8nement \u00ab played \u00bb.\nExemple 2:\n27) <pair id=\"27\" value=\"TRUE\" > T : Amine was dreaming . H : Amine was sleeping deeply. Dans l\u201fexemple pr\u00e9c\u00e9dant nous pouvons constater que l\u201f\u00e9v\u00e8nement \u00ab was dreaming\u00bb se produit durant l\u201f\u00e9v\u00e8nement \u00ab was sleeping deeply\u00bb."}, {"heading": "3.3.4) Les inf\u00e9rences entre \u00e9v\u00e8nements et expressions temporelles", "text": "L\u201finf\u00e9rence permet d\u201f\u00e9tablir des relations temporelles entre \u00e9v\u00e9nements et expressions temporelles. Cette figure repr\u00e9sente le nombre de paires de textes o\u00f9 existe ce type d\u201finf\u00e9rence.\nL\u201fexemple suivant permet de montrer la relation temporelle existante entre \u00e9v\u00e8nements et expressions temporelles. Exemple 1:\n29) <pair id=\"29\" value=\"TRUE\" > T: Japan gave weapons back after the explosion of the first atomic bomb. H: Japan gave weapons back in 1945.\nDans l\u201fexemple pr\u00e9c\u00e9dent, nous pouvons remarquer que l\u201f\u00e9v\u00e8nement \u00ab the explosion of the first atomic bomb \u00bb est ancr\u00e9 temporellement avec l\u201fexpression temporelle \u00ab1945 \u00bb.\nExemple 2:\n30) <pair id=\"30\" value=\"TRUE\" > T: Germany has become unified since the fall down of the Berlin wall. H: Germany unified 19 years ago.\nDans l\u201fexemple pr\u00e9c\u00e9dent, nous pouvons remarquer que l\u201f\u00e9v\u00e8nement \u00abthe fall down of the Berlin wall\u00bb est ancr\u00e9 temporellement avec l\u201fexpression temporelle \u00ab19 years ago\u00bb.\n4) Le bilan de l\u201f\u00e9tude du corpus\nDans notre \u00e9laboration du corpus, nous nous sommes limit\u00e9s \u00e0 des segments de textes relativement brefs et concrets. Nous retrouvons dans ce corpus des inf\u00e9rences temporelles sous des formes vari\u00e9es. Le tableau suivant repr\u00e9sente le pourcentage de paires du corpus de d\u00e9veloppement par type d\u201finf\u00e9rence temporelle existante, sachant qu\u201fil existe 30 paires dans notre corpus.\nTypes d\u201finf\u00e9rences\ntemporelles\nNombres de paires\nInf\u00e9rences entre expressions\ntemporelles\n21/30\nInf\u00e9rences entre \u00e9v\u00e8nements\n6/30\nInf\u00e9rences entre \u00e9v\u00e8nements\net expressions temporelles\n3/30\nTableau 3.1 : Nombre de paire dans le corpus\nCette figure repr\u00e9sente le pourcentage de paires de chaque type d\u201finf\u00e9rence dans le corpus de d\u00e9veloppement :\nNous constatons que notre corpus de d\u00e9veloppement a un pourcentage \u00e9lev\u00e9 de paires contenant une inf\u00e9rence temporelle entre expression temporelle et cela est d\u00fb \u00e0 une forte pr\u00e9sence de questions d\u201fordres temporelles extraites du corpus de test du challenge cl\u00e9. Les d\u00e9tails des corpus de test et de d\u00e9veloppement sont disponibles en annexe."}, {"heading": "5) Conclusion", "text": "Dans ce chapitre nous avons expliqu\u00e9, comment nous avons \u00e9labor\u00e9 un corpus contenant des paires de segments de textes integrant des relations temporelles, ensuite nous avons fait une classification des diff\u00e9rents types d\u201finf\u00e9rences temporelles existantes dans le corpus. La suite logique de ce travail consiste \u00e0 d\u00e9duire des r\u00e9gles d\u201finf\u00e9rences temporelles et \u00e0 les int\u00e9grer \u00e0 un syst\u00e9me d\u201finf\u00e9rence texuelle. Ces d\u00e9marches sont l\u201fobjet du chapitre suivant que nous allons exposer.\n- Chapitre 4 -\nLa pr\u00e9sentation du syst\u00e8me TIMINF\nChapitre 4"}, {"heading": "La pr\u00e9sentation du syst\u00e8me TIMINF", "text": ""}, {"heading": "1) Introduction", "text": "Nous pr\u00e9sentons, dans ce chapitre notre projet d\u201finf\u00e9rence temporelle, nomm\u00e9 TIMINF. Ce projet a pour but de d\u00e9velopper et d\u201f\u00e9valuer l\u201fapport de l\u201finf\u00e9rence temporelle dans la reconnaissance de l\u201finf\u00e9rence textuelle.\nL\u201fun des principaux d\u00e9fis de ce type de syst\u00e8me est de permettre aux syst\u00e8mes d\u201finf\u00e9rences textuelles, d\u201fouvrir un voile sur l\u201finf\u00e9rence temporelle et d\u201fexplorer cette nouvelle approche. Dans ce cadre, l\u201fobjectif de TIMINF est de d\u00e9finir ce que devrait \u00eatre un syst\u00e8me d\u201finf\u00e9rence textuelle int\u00e9grant l\u201faspect temporel dans son fonctionnement, qui tient en compte la relation entre expression temporelle et relation entre les \u00e9v\u00e8nements dans la d\u00e9duction de l\u201finf\u00e9rence textuelle.\nNous allons montrer tout au long de ce document comment nous avons concr\u00e9tis\u00e9 cet objectif. Nous d\u00e9crivons alors les principaux modules constituant le syst\u00e8me."}, {"heading": "2) Architecture informatique de TIMINF", "text": "L\u201farchitecture g\u00e9n\u00e9rale de TIMINF, telle que d\u00e9duite de l\u201fanalyse du corpus pr\u00e9sent\u00e9 au chapitre pr\u00e9c\u00e9dant, est illustr\u00e9e dans la figure 4.1 suivante. Cette derni\u00e8re s\u201farticule autour de trois \u00e9tapes essentielles qui sont :\n Le pr\u00e9traitement qui permet de rep\u00e9rer les donn\u00e9es temporelles et les composants syntaxiques de la paire de texte (T, H).\n L\u201finf\u00e9rence textuelle qui contient les modules de test d\u201finf\u00e9rence textuelle et du balisage des expressions temporelles.\n L\u201finf\u00e9rence temporelle qui contient les moteurs d\u201finf\u00e9rence et les r\u00e8gles d\u201finf\u00e9rences.\nFigure 4.1 : Architecture du syst\u00e8me TIMINF\nDans ce qui suit nous pr\u00e9sentons les diff\u00e9rents modules constituants le syst\u00e8me TIMINF.\nAnalyse\nsyntaxique T TARSQI\nBalisages des expressions temporelles non d\u00e9tect\u00e9es par TARSQI\nSuperviseur\nYE YES\nRee R\u00e8gles d\u201finf\u00e9rences\nRee Paire de texte\nRee Ressources\nl\u201finguistiques\nT Test d\u201finf\u00e9rence\nT temporelle\nYES NO\nD Test\nd\u201finf\u00e9rence textuelle\nD pr\u00e9 traitement\nInf\u00e9rence entre sujets\nInf\u00e9rence entre \u00e9v\u00e9nements"}, {"heading": "2.1) Le pr\u00e9traitement", "text": "Le pr\u00e9traitement est effectu\u00e9 par les deux modules TARSQI et LINK parseur. Ces deux modules s\u201fex\u00e9cutent en parall\u00e8le et nous permettent respectivement de rep\u00e9rer les donn\u00e9es temporelles et les composants syntaxiques de la paire de texte (T, H). Nous d\u00e9taillerons dans ce qui suit les deux modules et leurs utilisations dans notre syst\u00e8me."}, {"heading": "2.1.1) Le projet TARSQI", "text": "TARSQI est un outil permettant d\u201forganiser des textes en langages naturels en fonction de leurs caract\u00e9ristiques temporelles (Pustejovsky et al., 2003). Son objectif est d\u201fannoter les donn\u00e9es temporelles dans un texte en langage naturel, d'extraire des donn\u00e9es temporelles \u00e0 partir de textes et d\u201feffectuer des raisonnements sur les donn\u00e9es temporelles (http://www.timeml.org). Afin de r\u00e9pondre \u00e0 ces diff\u00e9rents objectifs, le module TARSQI utilise les balises TimeML pour marquer les expressions temporelles, les \u00e9v\u00e9nements, les relations temporelles et les Subordinations syntaxiques des \u00e9v\u00e9nements. Le syst\u00e8me TARSQI est mis en place comme une cascade de modules successivement ajout\u00e9s. L'architecture du syst\u00e8me est d\u00e9finie dans le sch\u00e9ma ci-dessous.\nFigure 4.2 : Architecture du module TARSQI\ninf(e1,e2 )=vrai\ndocument entrant : \u00e9tiquet\u00e9 par TreeTagger\nGUTime : d\u00e9tection des expressions temporelles\nSlinket : identifie les relations subordonn\u00e9es entre deux \u00e9v\u00e9nements\nSputLINK : d\u00e9tection des relations implicites entre \u00e9v\u00e9nements\nGUTenLINK : repr\u00e9sente la relation entre deux objets temporels\nE Evita : syst\u00e8me de reconnaissance d\u201f\u00e9v\u00e9nements\nDocument TimeML\nLe module TARSQI doit avoir comme entr\u00e9e des documents pr\u00e9trait\u00e9s syntaxiquement. Pour cela, les concepteurs de TARSQI ont choisi d\u201futiliser une analyse morphosyntaxique avec le module TreeTagger.\nDans ce qui suit nous allons d\u00e9crire le module TreeTagger."}, {"heading": "2.1.1.1) TreeTagger", "text": "C\u201fest un syst\u00e8me d'\u00e9tiquetage automatique des cat\u00e9gories grammaticales des mots avec lemmatisation et tokenisation (Helmut Schmid, 1994) (www.ims.unistuttgart.de/projekte/corplex/TreeTagger/).\nLe module Treetagger a comme entr\u00e9e un texte brut et il admet deux types de sorties :\nA) Une sortie en forme de tableau\nComme il est montr\u00e9 dans l\u201fexemple suivant (figure 4.3), le mode de sortie est un tableau repr\u00e9sentant l\u201f\u00e9tiquetage des mots dans la phrase.\nSachant que :\nMot : repr\u00e9sente le mot \u00e9tiquet\u00e9.\nPOS : repr\u00e9sente la cat\u00e9gorie grammaticale du mot par exemple (VB pour verbe, DT pour un d\u00e9terminant\u2026..).\nLemme : repr\u00e9sente la lemmatisation du mot.\nB) Sortie format XML\nAvec La sortie format XML, chaque mot est tagu\u00e9 avec les balises de TreeTagger.\nExemple d\u201fentr\u00e9e, sortie TreeTagger :\nLes balises utilis\u00e9es par TreeTagger sont :\n <BODY> contient le corps du document.\n <TEXT> contient le texte.\n Les phrases doivent \u00eatre marqu\u00e9es d'un <s>.\n Le groupe nominal est balis\u00e9 avec <NG> et le groupe verbal avec <VG>.\n chaque mot dans la phrase est balis\u00e9 par <LEX>.\nLes attributs utilis\u00e9s par TreeTagger sont :\n Stem : repr\u00e9sente la lemmatisation du mot qui est balis\u00e9.\n Pos : donne la cat\u00e9gorie grammaticale du mot balis\u00e9. (DT pour d\u00e9terminant-nom, PP pour une pr\u00e9position\u2026). pour en savoir plus sur les diff\u00e9rents symboles utilis\u00e9s\npar Treetagger pour \u00e9tiquetter les diff\u00e9rentes cat\u00e9gories grammaticales, toutes les d\u00e9finitions des symboles sont disponibles sur le site (www.ims.unistuttgart.de/projekte/corplex/TreeTagger/)."}, {"heading": "2.1.1.2) GUTime", "text": "L'\u00e9tiqueteur GUTime, d\u00e9velopp\u00e9 \u00e0 l'Universit\u00e9 de Georgetown, utilise TIMEX3 tag pour repr\u00e9senter les expressions temporelles, telles que : les dates, les heures, les dur\u00e9es, etc (Mani et Wilson, 2000).\nIl existe 3 types d\u201finformations temporelles d\u00e9tect\u00e9es par TIMEX3.\nDATE : c'est-\u00e0-dire les ann\u00e9es, les mois et les jours.\nExemple:\nUSA were touched by terrorism in September 11, 2001.\nTIME : c'est-\u00e0-dire les heures de la journ\u00e9e.\nExemple:\nThe building collapsed at 2 o'clock p.m.\nDURATION : repr\u00e9sente un intervalle de temps entre deux dates.\nExemple:\nThe end of the second world war happened between 1940 and 1950.\nUn exemple de sortie du module GUTime est montr\u00e9 ci-dessous :\nLes attributs de TIMEX3 dans l\u201fexemple sont :\nTid : donne l\u201fidentifiant de l\u201fexpression temporelle, pour chaque expression tagger par TIMEX a son propre identifiant. Type : chaque TIMEX est assign\u00e9 \u00e0 ces diff\u00e9rents types {DATE, TIME, DURATION}. TemporalFunction : c\u201fest un attribut qui retourne si la date est pr\u00e9cise dans le temps ou pas.\nExemple:\nNext Tuesday  TemporalFunction= true. September 11,2001 TemporalFunction= false.\nAnchorTimeID : s\u201fil y a un ancrage temporel de l\u201fexpression temporelle identifi\u00e9e par Tid avec une autre expression temporelle, AnchorTimeID donne son identifiant."}, {"heading": "2.1.1.3) Evita", "text": "Evita est un syst\u00e8me de reconnaissance d\u201f\u00e9v\u00e9nements, pour cela le module utilise deux balises de TIMEML (EVENT et MAKEINTANCE) qui sont d\u00e9crites ci-dessous :\nA) EVENT\nEVENT est utilis\u00e9 pour annoter les \u00e9v\u00e9nements dans un texte, syntaxiquement, les \u00e9v\u00e8nements sont g\u00e9n\u00e9ralement des verbes, mais un nom peut aussi \u00eatre utilis\u00e9 pour d\u00e9noter un \u00e9v\u00e9nement. Les diff\u00e9rentes classes d\u201f\u00e9v\u00e9nements qui sont d\u00e9tect\u00e9es sont repr\u00e9sent\u00e9es ci-dessous.\n occurence : la plupart des \u00e9v\u00e9nements font partie de cette classe. Ils d\u00e9crivent ce qui se produit dans le monde.\n state : les \u00e9tats d\u00e9crivant les circonstances dans lesquelles un \u00e9v\u00e9nement a lieu et dont l\u201f\u00e9tat peut \u00eatre modifi\u00e9 ; et les \u00e9tats introduits par les i-action, i-state et reporting.\n Reporting : description de l\u201faction d\u201fune personne par un acte narratif.\n i-action : une action intentionnelle introduisant un autre \u00e9v\u00e9nement, comme un essai, une enqu\u00eate, un rapport, un ordre, une demande, une promesse, une nomination.\n i-state : similaire \u00e0 i-action mais pour identifier un \u00e9tat tel que penser, ressentir. suspecter, douter, vouloir, d\u00e9sirer, d\u00e9tester, \u00eatre pr\u00eat, \u00eatre capable.\n aspectual : un \u00e9v\u00e9nement d\u00e9butant, terminant ou continuant une action.\n Perception : constatation physique d\u201fun \u00e9v\u00e9nement telle qu\u201fentendre ou voir l\u201faction.\nB) MAKEINSTANCE\nMAKEINSTANCE est une r\u00e9alisation de lien, il indique les diff\u00e9rentes instances d'un \u00e9v\u00e9nement donn\u00e9.\nDans l\u201fannotation, les <EVENT> ne participe jamais \u00e0 une relation, c\u201fest la r\u00e9alisation (<MAKEINSTANCE>) de l\u201f\u00e9v\u00e9nement qui y participe et chaque EVENT introduit au moins un correspondant MAKEINSTANCE.\nUn exemple de sortie du module Evita est montr\u00e9 ci-dessous:\nLes attributs de EVENT dans l\u201fexemple sont : Eid : donne l\u201fidentifiant de l\u201f\u00e9v\u00e8nement, pour chaque \u00e9v\u00e8nement tagger par EVENT a son propre identifiant. Class : d\u00e9termine la classe auquel appartient l\u201f\u00e9v\u00e8nement. Les attributs de MAKEINSTANCE dans l\u201fexemple sont : eventID : donne l\u201fidentifiant de l\u201f\u00e9v\u00e8nement, pour chaque \u00e9v\u00e8nement tagger par EVENT a son propre identifiant. Eiid : instance de l\u201f\u00e9v\u00e9nement trouv\u00e9 dans le texte. Pos : donne la cat\u00e9gorie grammaticale du mot balis\u00e9. Tense : donne le temps de l\u201f\u00e9v\u00e8nement si l\u201f\u00e9v\u00e8nement est un verbe."}, {"heading": "2.1.1.4) GutenLink", "text": "GutenLink est un module de TARSQI qui utilise les balises TLINK de TIMEML pour repr\u00e9senter la relation entre deux objets temporels, que ce soit deux \u00e9v\u00e9nements, deux marqueurs temporels ou un marqueur temporel et un \u00e9v\u00e9nement. Il y a quatorze types de relations identifi\u00e9es par le module, bien que certaines soient simplement l\u201finverse d\u201fautre :\n before et after sp\u00e9cifient qu\u201fun objet temporel pr\u00e9c\u00e8de ou suit l\u201fautre objet temporel de la relation ;\n ibefore et iafter sp\u00e9cifient qu\u201fun objet temporel est imm\u00e9diatement avant ou apr\u00e8s un autre.\n includes et is-included sp\u00e9cifient qu\u201fun objet temporel inclut ou est inclus dans un autre, p. ex. John arrived in Montreal yesterday.\n during sp\u00e9cifie que l\u201f\u00e9tat ou l\u201f\u00e9v\u00e9nement se poursuit durant une p\u00e9riode de temps, p. ex. John taught for 90 minutes.\n during-inv est l\u201finverse de la relation pr\u00e9c\u00e9dente.\n simultaneous sp\u00e9cifie que deux instances d\u201f\u00e9v\u00e9nements semblent co\u00efncider dans le Temps.\n identity indique que deux objets temporels repr\u00e9sentent le m\u00eame \u00e9v\u00e9nement.\n begins sp\u00e9cifie qu\u201fun \u00e9v\u00e9nement d\u00e9bute par l\u201fobjet temporel avec lequel il est li\u00e9.\n begun-by est l\u201finverse de begin, elle relie un objet temporel \u00e0 un \u00e9v\u00e9nement d\u00e9butant par l\u201fobjet temporel.\n ends et ended-by sont similaires aux deux relations pr\u00e9c\u00e9dentes sauf qu\u201felles Sp\u00e9cifient la fin de l\u201f\u00e9v\u00e9nement.\nUn exemple de sortie du module GutenLink est montr\u00e9 ci-dessous :\nLes attributs de TLINK dans l\u201fexemple sont :\neventInstanceID : donne l\u201fidentifiant de l\u201f\u00e9v\u00e8nement. relatedToTime : donne l\u201fidentifiant de l\u201fexpression temporelle. relType : donne la relation temporelle existant entre les l\u201fexpressions temporelles, ils utilisent pour cela les relations d\u201fAllen."}, {"heading": "2.1.1.5) Slinket", "text": "Les liens subordonnants <SLINK> identifient les relations entre deux \u00e9v\u00e9nements. Ils sont habituellement introduits par des verbes modaux qui impliquent une confirmation.\nLes liens subordonnants sont d\u00e9finis selon six types de relations qui interagissent avec les classes d\u201f\u00e9v\u00e9nements reporting, i-state et i-action (modal introduit la possibilit\u00e9 d\u201fun \u00e9v\u00e9nement, p. ex. John promised Mary to buy some beer).\nLes diff\u00e9rentes classes d\u201f\u00e9v\u00e9nements qui sont d\u00e9tect\u00e9es sont repr\u00e9sent\u00e9es ci-dessous.\n evidential introduit la perception ou le compte-rendu de l\u201f\u00e9v\u00e9nement, p. ex. Johnsaid he bought a pack of beer.\n neg-evidential introduit la perception ou rapporte que l\u201f\u00e9v\u00e9nement ne s\u201fest pas r\u00e9alis\u00e9, p. ex. John denied he bought beers\n factive est une action qui implique ou pr\u00e9suppose qu\u201fun \u00e9v\u00e9nement a d\u00e9j\u00e0 eu lieu, p. ex. John managed to leave the party.\n counter-factive est la n\u00e9gation de la relation pr\u00e9c\u00e9dente p. ex. John forgot to buy beers.\n conditional indique que la r\u00e9alisation de l\u201faction entra\u00eenera l\u201f\u00e9v\u00e9nement en relation.\nUn exemple de sortie du module SLINKET est montr\u00e9 ci-dessous:\nLes attributs de SLINK dans l\u201fexemple sont :\neventInstanceID : c\u201fest l\u201fidentifiant de l\u201f\u00e9v\u00e8nement concern\u00e9 par la relation de subordination. subordinatedEventInstance : c\u201fest l\u201fidentifiant de l\u201f\u00e9v\u00e8nement subordonn\u00e9. relType : donne la relation temporelle existante entre entit\u00e9s."}, {"heading": "2.1.1.6) SputLink", "text": "Le module SputLink effectue des inf\u00e9rences temporelles en tenant compte des relations temporelles d\u00e9j\u00e0 g\u00e9n\u00e9r\u00e9es par les modules qui le pr\u00e9c\u00e8dent, c\u201fest-\u00e0-dire (GUTenLINK et Slinket) et g\u00e9n\u00e8re de nouvelles relations temporelles. SputLink est fond\u00e9 sur l\u201falg\u00e8bre d\u201fintervalle fond\u00e9 par James Allen's en 1983. Allen r\u00e9duit tous les \u00e9v\u00e8nements et expressions de temps \u00e0 13 intervalles de bases et identifie les relations entre les intervalles. Les informations temporelles dans un document sont repr\u00e9sent\u00e9es comme un graphe o\u00f9 les \u00e9v\u00e9nements et les expressions temporelles forment les n\u0153uds, les relations temporelles forment les arcs.\nExemple\nEvenement Before(a,b)= a pr\u00e9c\u00e9de b A B C A C\nFigure 4.9: Inf\u00e9rence effectu\u00e9 par le module SputLINK\nAinsi, si A pr\u00e9c\u00e8de B et B pr\u00e9c\u00e8de C. des deux relations, on d\u00e9duit que A pr\u00e9c\u00e8de C.\n2.1.1.7) L\u2019utilisation de TARSQI\nAfin de permettre la portabilit\u00e9 du module TARSQI, les concepteurs ont propos\u00e9 deux formats d\u201fentr\u00e9e possible \u00e0 TARSQI qui sont d\u00e9crits ci-dessous:\nA) Format simple\u2013xml\nAvec ce format, l\u201fanalyse morphosyntaxique est incluse dans le module TARSQI. L\u201fentr\u00e9e est repr\u00e9sent\u00e9e par le format suivant:\nExemple d\u201fentr\u00e9e simple-xml.\nBefore(A,B) Before(B,C) Before(A,C)\nLes balises de simpe_xml :\n <DOC> pour annoter le d\u00e9but et la fin du document.\n <DOCID> contient le type du document.\n <TEXT> contient le texte.\nB) Format RTE3\nAvec ce format, l\u201fanalyse morphosyntaxique n\u201fest pas incluse dans le module TARSQI et nous avons comme entr\u00e9e le format RTE3, qui est le r\u00e9sultat d\u201fun pr\u00e9traitement effectu\u00e9 par le groupe COGEX qui travaille sur le RTE. Le groupe a choisi de d\u00e9velopper son propre pr\u00e9traitement.\nNous pr\u00e9sentons dans ce qui suit un exemple de sortie du format RTE3 :\nExemple :\n<XML version=\"1.0\" ?>\n<pair length=\"short\" task=\"IE\" id=\"1\">\n<t><s>text1</s></t>\n<br/><h><s><NG>\n<HEAD><lex start=\"0\" end=\"12\" pos=\"NNP\" stem=\"Le Beau Serge\">Le Beau Serge</lex> </HEAD></NG><VG><lex start=\"14\" end=\"16\" pos=\"VBD\" stem=\"be\">was</lex>\n<HEAD><lex start=\"18\" end=\"25\" pos=\"VBN\" stem=\"direct\">directed</lex> </HEAD></VG>\n<HEAD><lex start=\"27\" end=\"28\" pos=\"IN\" stem=\"by\">by</lex> </HEAD><NG>\n<HEAD><lex start=\"30\" end=\"36\" pos=\"NNP\" stem=\"Chabrol\">Chabrol</lex> </HEAD></NG><lex start=\"37\" end=\"37\" pos=\".\" stem=\".\">.</lex> </s></h>\n</pair>\nFigure 4.11 : Sortie du module GutenLink\nLes balises du format RTE3 sont :\n Les phrases doivent \u00eatre marqu\u00e9es d'<s>.\n Les groupes nominaux sont balis\u00e9s avec <NG> et les groupes verbaux avec <VG>.\n Les d\u00e9buts de phrases sont marqu\u00e9s par des balises <HEAD>.\n <t> repr\u00e9sente la premier phrase et <s> repr\u00e9sente la deuxi\u00e8me phrase.\n <pair> repr\u00e9sente la paire de phrases.\nLes attributs :\n Start : repr\u00e9sente la position du caract\u00e8re de d\u00e9but de la chaine dans le texte.\n End : repr\u00e9sente la position du caract\u00e8re de fin de la chaine dans le texte.\n Stem : repr\u00e9sente la lemmatisation du mot qui est balis\u00e9.\n Pos : donne la cat\u00e9gorie grammaticale du mot balis\u00e9."}, {"heading": "2.1.1.8) L\u2019int\u00e9gration de TARSQI au syst\u00e8me TIMINF", "text": "Dans notre syst\u00e8me d\u201finf\u00e9rence, nous avons utilis\u00e9 le format simple-xml au lieu de RTE3 car nous avons choisi d\u201futiliser le module TreeTagger pour l\u201fanalyse morphosyntaxique qui est int\u00e9gr\u00e9 dans le module TARSQI dans le format simple-xml.\nEn plus de la d\u00e9tection des expressions temporelles, la phase de pr\u00e9traitement int\u00e8gre l\u201fanalyse syntaxique pour d\u00e9tecter la relation grammaticale entre les mots dans une phrase. Dans ce qui suit, nous allons pr\u00e9senter l\u201foutil que nous avons choisi pour effectuer l\u201fanalyse syntaxique."}, {"heading": "2.1.2) L\u201fanalyse syntaxique", "text": ""}, {"heading": "2.1.2.1) Pr\u00e9sentation de link grammar parser", "text": "Nous avons utilis\u00e9 le Link Grammar Parser (Sleator et Temperley, 1991) qui est un analyseur syntaxique de la langue anglaise, bas\u00e9 sur la d\u00e9pendance syntaxique. Partant d\u2019une phrase fournie en entr\u00e9e, cet analyseur produit un ou plusieurs graphes de d\u00e9pendances, qui consistent en un ensemble de liens reliant des paires de mots. Les n\u0153uds du graphe sont les mots de la phrase. Certains d\u2019entre eux ont un suffixe qui indique la partie du discours (nom, verbe, adjectif,adverbe, pr\u00e9position, etc.).\nLes arcs \u00e9tiquet\u00e9s relient les n\u0153uds du graphe. Chaque \u00e9tiquette pr\u00e9cise un r\u00f4le grammatical (D pour d\u00e9terminant-nom, S pour sujet-verbe\u2026). Dans ce qui suit, nous montrons un exemple de sortie du parseur Link Grammar Parser. Exemple :\nLes d\u00e9finitions des diff\u00e9rents liens repr\u00e9sent\u00e9s dans le graphe sont les suivantes :\nEE adverbe se connecte \u00e0 un autre adverbe. Ssconnecte le sujet au verbe. Xpconnecte le d\u00e9but et la fin de la phrase. MVaconnecte le verbe \u00e0 l\u201fadverbe. Wd le premier mot est un sujet. .v verbe. .e adverbe. LEFT-WALL  d\u00e9termine le d\u00e9but de la phrase.\nPour en savoir plus sur les diff\u00e9rents symboles utilis\u00e9s par Link Grammar Parser pour \u00e9tiqueter les diff\u00e9rents liens grammaticaux, toutes les d\u00e9finitions des symboles sont disponibles sur le lien suivant (www.link.cs.cmu.edu/link/)."}, {"heading": "2.1.2.2) L\u2019int\u00e9gration du link parser \u00e0 notre syst\u00e8me", "text": "Concr\u00e8tement l\u201fanalyseur syntaxique nous a permis de d\u00e9tecter les sujets dans les deux segments de textes (T, H) et de les baliser avec nos propres balises comme il figure dans l\u201fexemple suivant.\nExemple:\n<pair id=\"28\" value=\"TRUE\" > <s> <syntax type: sujet>Poland</syntax> became a communistic state in 1945.</s><s> <syntax type: sujet>Poland</syntax> has become a communistic state since the invasion of Russians.</s>\nLa balise <syntaxe type: sujet>sujet</syntaxe> est choisi pour baliser les sujets dans la paire(T, H).\nApres l\u201fanalyse syntaxique et le traitement par TARSQI, la paire de texte est pr\u00eate \u00e0 \u00eatre soumise au test d\u201finf\u00e9rence textuelle qui a besoin des pr\u00e9traitements effectu\u00e9s pr\u00e9c\u00e9demment pour tester l\u201finf\u00e9rence textuelle. Dans ce qui suit nous d\u00e9crivons les diff\u00e9rents constituants de la phase de test d\u201finf\u00e9rence textuelle."}, {"heading": "2.2) Les tests d\u201finf\u00e9rences textuelles", "text": "La deuxi\u00e8me phase s\u201farticule autour de deux modules. Le premier permet de tester l\u201finf\u00e9rence textuelle pour savoir s\u201fil y a une inf\u00e9rence textuelle ou pas et le deuxi\u00e8me module permet de d\u00e9tecter les expressions temporelles non d\u00e9tect\u00e9es par TARSQI. Les deux modules exploitent des ressources linguistiques.\nDans ce qui suit nous allons pr\u00e9senter les deux modules et les ressources linguistiques utilis\u00e9es :"}, {"heading": "2.2.1) Les tests d\u201finf\u00e9rences entre \u00e9v\u00e9nements et entre sujets", "text": "Le but de ce module est de d\u00e9tecter s\u201fil y a une inf\u00e9rence textuelle entre les deux paires de textes (T, H).\nLe module est mis en place comme une cascade de sous modules successives. Le premier module d\u00e9tecte les inf\u00e9rences textuelles entre les sujets des deux segments de textes (T, H) et\nle deuxi\u00e8me d\u00e9tecte les inf\u00e9rences textuelles entre \u00e9v\u00e8nements des deux segments de textes (T, H).\nNous d\u00e9crivons ci-dessous les deux modules d\u201finf\u00e9rences :\n2.2.1.1) L\u201finf\u00e9rence entre sujets\nLe module d\u201finf\u00e9rence entre sujets d\u00e9tecte s\u201fil y a une inf\u00e9rence textuelle entre les sujets du texte H avec les sujets du texte T. Pour cela, le module utilise les sorties du module LINK parser c'est-\u00e0-dire que pour chaque sujet d\u00e9tect\u00e9, dans le texte H nous recherchons s\u201fil y a une relation de synonymie avec un des sujets du texte T. Pour cela, le module emploie WordNet pour retrouver toutes les relations ontologiques qui lient les deux entit\u00e9s (l\u201futilisation de wordNet dans notre syst\u00e8me est d\u00e9taill\u00e9e dans le chapitre cinq). Aussi nous utilisons le comptage de mots pour comparer des groupes de mots (l\u201falgorithme de comptage de mots est expliqu\u00e9 dans l\u201fexemple (1)).\nCe module accepte comme entr\u00e9e au module le r\u00e9sultat de l\u201fanalyse syntaxique des paires de texte T et H et en sortie il existe deux possibilit\u00e9s :\n Si le module trouve une \u00e9quivalence entre deux sujets, il d\u00e9clenche le module d\u201finf\u00e9rence entre \u00e9v\u00e9nements en lui envoyant les \u00e9v\u00e9nements correspondants aux\ndeux sujets.\n Si le module ne trouve pas d\u201f\u00e9quivalence entre sujets, le module envoie le message \u00ab pas d\u201finf\u00e9rence \u00bb au module du test d\u201finf\u00e9rence.\nExemple (1) : paire num\u00e9ro 3 du corpus de d\u00e9veloppement.\nFigure 3.12 : exemple d\u201finf\u00e9rence entre sujets\nFigure 3.15 : Exemple d\u201finf\u00e9rence entre sujets\nDans l\u201fexemple suivant le module d\u00e9tecte tous les sujets contenus dans le segment T et le segment H et les met dans deux listes diff\u00e9rentes, ensuit il effectue la comparaison entre les \u00e9v\u00e8nements des deux listes.\nDans notre exemple la premi\u00e8re liste ne contient qu\u201fun seul sujet {S1} et la deuxi\u00e8me liste contient le sujet {S2}. Une relation d\u201f\u00e9quivalence est d\u00e9tect\u00e9e entre les \u00e9v\u00e8nements S1 et S2.\nT: The Algerian revolution war started on 1st November 1954 and\nS1\ncaused the death of 1, 5 million of martyrs and lasted 7 years.\nH: The Algerian war ended in July 5 th, 1962.\nS2\nRelation d\u201f\u00e9quivalence entre S1 et S2\nPour d\u00e9tecter l\u201f\u00e9quivalence le module utilise l\u201falgorithme de comptage de mots pour d\u00e9duire l\u201finf\u00e9rence entre \u00abthe Algerian war \u00bb et \u00ab the Algerian revolution war\u00bb.\nLe comptage de mots : L\u201falgorithme r\u00e9cup\u00e8re les deux groupes deux mots dans deux listes diff\u00e9rents et compare chaque mot d\u201fune liste avec les mots contenu dans la deuxi\u00e8me liste et s\u201fil y a un seul mot qui est semblable ou sous mot d\u201fun mot de la deuxi\u00e8me liste, il consid\u00e8re qu\u201fil y a une inf\u00e9rence entre sujets."}, {"heading": "2.2.1.2) L\u201finf\u00e9rence entre \u00e9v\u00e8nements", "text": "Le module d\u201finf\u00e9rence entre \u00e9v\u00e8nements d\u00e9tecte s\u201fil y a une relation ontologique entre les deux \u00e9v\u00e8nements re\u00e7us du module d\u201finf\u00e9rence entre sujets. Pour cela, le module emploie WORDNET pour retrouver toutes les relations qui lient les deux entit\u00e9s.\nLe module a comme entr\u00e9e les \u00e9v\u00e8nements re\u00e7us du module d\u201finf\u00e9rence entre sujets et le balisage de TARSQI et comme sortie les r\u00e9sultats suivants :\n S\u201fil trouve une \u00e9quivalence entre deux \u00e9v\u00e8nements, il envoie le message \u00ab oui\u00bb au module de test d\u201finf\u00e9rence.\n S\u201fil trouve deux \u00e9v\u00e8nements contraires, il envoie le message \u00ab non \u00bb au module de test d\u201finf\u00e9rence.\n S\u201fil ne trouve pas de relation entre \u00e9v\u00e9nements, il envoie le message \u00ab pas d\u201finf\u00e9rence \u00bb au module de test d\u201finf\u00e9rence.\nExemple :\nFigure 4.16 : Exemple d\u201finf\u00e9rence entre \u00e9v\u00e8nements\nDans l\u201fexemple ci-dessus le module d\u00e9tecte une liste d\u201f\u00e9v\u00e8nements dans le texte T {E1, E2, E3} et une autre liste d\u201f\u00e9v\u00e8nements dans le texte H {E1} et effectue la comparaison entre les \u00e9v\u00e8nements des deux listes. Une relation ontologique (synonymie) est d\u00e9tect\u00e9e entre les \u00e9v\u00e8nements E4 et E3.\nT: the Algerian revolution war started in 1 November 1954 and\nE1\ncaused the death of 1,5 million of martyrs and finished 7 years.\nE3 E3\nH : the algerian war ended in july 5, 1962.\nE4\nRelation de synonymie entre E4 et E3"}, {"heading": "2.2.2) Le balisage des expressions temporelles non d\u00e9tect\u00e9es par", "text": "TARSQI\nNous avons remarqu\u00e9 qu\u201fau niveau de la d\u00e9tection des expressions temporelles, les modules de balisages existant ont un manque au niveau de la d\u00e9tection des entit\u00e9s nomm\u00e9es et des adverbiaux temporels.\nDans ce qui suit nous montrons les diff\u00e9rentes balises utilis\u00e9es :\nEntit\u00e9s nomm\u00e9es : elles sont balis\u00e9es par <NE TYPE=\" \" Val=\u201f\u201f \u201e\u201f>entit\u00e9 nomm\u00e9e</NE>.\n TYPE contient le type d\u201fexpression temporelle {date, dur\u00e9e}.\n Val contient la date ou la dur\u00e9e correspondante.\nExemple :\nFigure 4.17 : Exemple de balisages d\u201fexpressions temporelles\nNotre objectif avec le balisage de \u00ab the fall down of the Berlin Wall\u00bb est de rep\u00e9rer l\u201f\u00e9v\u00e8nement dans le temps.\nDans l\u201fexemple pr\u00e9c\u00e9dent le balisage avec le module TARSQI ne d\u00e9tecte que \u00ab fall \u00bb comme \u00e9v\u00e9nement et ne le relie pas \u00e0 une date.\nAdverbiaux temporels : ils sont balis\u00e9s par <TIMEX3 tid=\"t\" TYPE=\" \" VAL=\"\" >\n TYPE contient le type d\u201fexpression temporelle {date, dur\u00e9e}.\n Val contient les entit\u00e9s que nous avons mises pour repr\u00e9senter les expressions temporelles.\nDans ce qui suit nous relions \u00e0 chaque expression les symboles correspondants.\n Les jours de la semaine c\u201fest \u00e0 dire {Monday, Tuesday, Wednesday, Thursday, Friday Saturday, Sunday} sont repr\u00e9sent\u00e9s respectivement par des nombres de 1\n\u00e0 7,\nT: Germany has become unified since t2: the fall down of the Berlin Wall.\nH: Germany unified t1: 19 years ago.\nT2 est balis\u00e9 ainsi:\n<NE TYPE=\" date \" Val=\u201f\u201f 1989 \u201e\u201f> the fall down of the Berlin Wall</NE>.\n {Day before yesterday, two days ago, Yesterday}, sont repr\u00e9sent\u00e9s respectivement par {-2, -2, -1}\n {everyday often} sont repr\u00e9sent\u00e9s avec {often}.\n {Someday, Many days, morning, evening, Afternoon} sont repr\u00e9sent\u00e9s respectivement par PSD, PMD, aMORNING, aNIGHT et AFTERNOON."}, {"heading": "2.3) Les Ressources linguistiques", "text": "Deux types de ressources sont utilis\u00e9s :"}, {"heading": "2.3.1) Les ressources externes", "text": "Dans la conception de notre module d\u201finf\u00e9rence, l\u201futilisation d\u201fune ressource lexicale est indispensable au bon fonctionnement des deux modules (inf\u00e9rence entre sujets et inf\u00e9rence entre \u00e9v\u00e9nements). Pour cela, nous avons choisi d\u201futiliser Wordnet qui est la base de donn\u00e9es lexicale qui correspond le plus \u00e0 notre besoin en termes de relations ontologiques entre mots."}, {"heading": "2.3.1) Les ressources internes", "text": "Ce module est en fait une base de donn\u00e9es lexicale contenant les diff\u00e9rentes entit\u00e9s nomm\u00e9es qui sont utilis\u00e9es par le module de balisage pour annoter les expressions temporelles non d\u00e9tect\u00e9es par le module TARSQI. Puisque notre objectif est de se focaliser sur l\u201finf\u00e9rence entre expressions temporelles, non pas sur leur d\u00e9tection, nous avons effectu\u00e9 une annotation manuelle de ces expressions temporelles sachant qu\u201fil existe des logiciels payant qui peuvent effectuer la d\u00e9tection."}, {"heading": "2.4) Les tests d\u201finf\u00e9rences temporelles", "text": "Cette phase permet de d\u00e9tecter s\u201fil y a une inf\u00e9rence temporelle et aussi textuelle entre les deux segments de textes T et H. Pour cela, nous utilisons un superviseur qui communique avec une base de r\u00e8gles d\u201finf\u00e9rences et d\u201fapr\u00e8s les r\u00e9sultats de la phase pr\u00e9c\u00e9dente (phase de test d\u201finf\u00e9rence textuelle), il d\u00e9cide de la r\u00e8gle \u00e0 utiliser.\nDans ce qui suit nous d\u00e9crivons les modules constituants cette phase."}, {"heading": "2.4.1) Les r\u00e8gles d\u201finf\u00e9rences", "text": "Les r\u00e8gles d\u201finf\u00e9rences sont divis\u00e9es en deux groupes.\nGroupe 1 : contient les fonctions qui testent si les \u00e9v\u00e9nements ont un ancrage temporel identique.\nGroupe 2 : contient les fonctions qui testent si les \u00e9v\u00e9nements ont un ancrage temporel diff\u00e9rent.\n2.4.1.1) D\u00e9finition des fonctions utilis\u00e9es dans l\u201fabstraction des r\u00e8gles\nd\u201finf\u00e9rences\nDans ce qui suit, nous allons d\u00e9finir toutes les fonctions que nous avons utilis\u00e9es dans l\u201fabstraction de nos r\u00e8gles d\u201finf\u00e9rences.\nSachant que S repr\u00e9sente un des textes T ou H de la paire, E repr\u00e9sente un \u00e9v\u00e9nement dans le texte et t repr\u00e9sente une expression temporelle.\n <S, E>: indique que l\u201f\u00e9v\u00e9nement E est dans le segment de texte S.\n Subj (<S, E>): la fonction retourne le sujet de l\u201f\u00e9v\u00e8nement E dans le segment S.\n Equivalent (<S,E1>,<S,E2>): la fonction retourne s\u201fil y a une \u00e9quivalence entre E1 et E2 ou pas.\n Contraire (<S,E1>,<S,E2>): la fonction retourne s\u201fil y a une antonymie entre E1 et E2 ou pas.\n Inclut (<S,t>,<S,t>): la fonction retourne si t est inclut dans l\u201fintervalle de t\u201f ou pas.\n Egale (<S, t1>,<S, t2>): la fonction retourne s\u201fil y a une \u00e9quivalence entre t1 et t2 ou pas.\n D\u00e9but (<S,t>,<S,E>,type): la fonction et bool\u00e9en et renvoi vrai ou faux, si t est la date de debut de l\u201f\u00e9v\u00e9nement E ou pas.\n After(<S,E1>,<S,E2>,type): la fonction retourne s\u201fil y a une \u00e9quivalence entre t1 et t2 ou pas.\n before(<S,E1>,<S,E2>,type): la fonction retourne si E1 est avant E2 ou pas .\n Fin (<S,E>,<S, t>,type): la fonction retourne si t est la date de fin de l\u201f\u00e9v\u00e9nement E ou pas.\n Relation (<S, E>,<S,t>,type): indique s\u201fil y a une relation TLINK entre l\u201f\u00e9v\u00e9nement E et la date t. Tel que l\u201fargument type indique le type d\u201fexpression temporelle {date,\ndur\u00e9e}.\n Inf (T, H): indique, en sortie s\u201fil y \u00e0 une inf\u00e9rence entre les segments de textes T et H ou pas.\n Somme(<S, t1>,<S,t2>): renvoi en sortie la somme des deux dates.\n Diff\u00e9rence(<S, t1>,<S,t2>): renvoi en sortie la diff\u00e9rence entre les deux dates.\nLes symboles utilis\u00e9s dans les sch\u00e9mas de repr\u00e9sentation de nos r\u00e8gles d\u201finf\u00e9rences sont pr\u00e9sent\u00e9s ci-dessous :\n: repr\u00e9sente le lien entre les deux \u00e9v\u00e8nements.\n: repr\u00e9sente le lien entre les deux expressions temporelles.\n: repr\u00e9sente les \u00e9l\u00e9ments du texte T.\n: repr\u00e9sente les \u00e9l\u00e9ments du texte H.\n: repr\u00e9sente le lien entre les \u00e9v\u00e9nements et expressions temporelles.\n: repr\u00e9sente l\u201f\u00e9v\u00e9nement.\n: repr\u00e9sente l\u201fexpression temporelle.\n.t : repr\u00e9sente une date.\n.e : repr\u00e9sente un \u00e9v\u00e8nement.\n.d : repr\u00e9sente une dur\u00e9e.\nAinsi, les diff\u00e9rentes r\u00e8gles d\u201finf\u00e9rences con\u00e7ues sont reparties comme suit :"}, {"heading": "4.1.1.2) Les r\u00e8gles du groupe 1", "text": "Ces r\u00e8gles permettent de savoir s\u201fil y a un ancrage temporel entre \u00e9v\u00e8nements.\nSi \u00e9quivalent (<T, e1>, <H, e2>) ^ \u00e9quivalent (<T, Subj (<T, e1>)>, <H, Subj (<H,e2>)>) alors :\nA) R\u00e8gle R1\nSi les diff\u00e9rentes conditions se r\u00e9unissent c\u201fest-\u00e0-dire :\n d\u00e9tecter une \u00e9quivalence entre les deux \u00e9v\u00e8nements (e1, e2)\n chaque \u00e9v\u00e9nement est relie avec la m\u00eame relation TLINK avec une date e1t1 et e2t2\n les dates sont \u00e9gales.\nNous aurons une inf\u00e9rence temporelle et textuelle entre les segments T et H.\nL\u201fabstraction de la r\u00e8gle R1 est repr\u00e9sent\u00e9e dans ce qui suit :\no Si relation (<T,e1>,< T,t> ,date) ^ relation (<H,e2>, <H,t\u201f>,date)\nalors Inf(T,H)= Vraie SSi inclus(<T,t> ,<H, t\u201f>) v \u00e9gale(<T,t> ,<H, t\u201f>)\nsinon inf(T,H)=Faux\nLes num\u00e9ros des exemples dans le corpus de d\u00e9veloppement o\u00f9 les r\u00e8gles peuvent s\u201fappliquer : 8, 7, 15, 14, 18, 28, 29, 30.\nCette figure repr\u00e9sente la r\u00e8gle d\u201finf\u00e9rence R1:\nDans l\u201fexemple qui suit, nous allons appliquer la r\u00e8gle R1 sur la paire num\u00e9ro 8 du corpus.\n8) <pair id=\"9\" value=\"TRUE\" > T: since its e1: creation in 1948, Israel had faced a lot of conflict with the Arabic countries. H: Israel e2: was conceived in 1948.\nPuisque l\u201f\u00e9v\u00e9nement e1 se d\u00e9roule en 1948 et l\u201f\u00e9v\u00e9nement e2 se d\u00e9roule entre 1948 et puisque e2 est le synonyme de e1 alors il y a une inf\u00e9rence temporelle entre e1 et e2.\nB) R\u00e8gle R2\nSi les diff\u00e9rentes conditions se r\u00e9unissent c\u201fest-\u00e0-dire :\n d\u00e9tecter une \u00e9quivalence entre les deux \u00e9v\u00e8nements (e1, e2)\n t1 est la date de d\u00e9but de l\u201f\u00e9v\u00e8nement e1, t2 est la date de fin de l\u201f\u00e9v\u00e8nement e1 et l\u201f\u00e9v\u00e9nement e2 est reli\u00e9 a une dur\u00e9e e2d.\n la diff\u00e9rence entre les dates t1 et t2 est \u00e9gale \u00e0 la dur\u00e9e d.\nNous aurons une inf\u00e9rence temporelle et textuelle entre les segments T et H.\nL\u201fabstraction de la r\u00e8gle R2 est repr\u00e9sent\u00e9e dans ce qui suit :\no Si debut(<T,e1>,<T,t>,date) ^ fin(<T,e1>,<T,t\u201f>,date) ^ relation(<H,e2>, <H,t\u201f\u201f>,dur\u00e9e)\nAlors Inf(T,H)= \u00e9gale(Diff\u00e9rence (<T,t>,<T,t\u201f>) , <H,t\u201f\u201f>)\nsinon Inf(T,H)=Faux\nLes num\u00e9ros des exemples dans le corpus de d\u00e9veloppement o\u00f9 les r\u00e8gles peuvent s\u201fappliquer: 4, 12.\nCette figure repr\u00e9sente la r\u00e8gle d\u201finf\u00e9rence R2 :\nDans l\u201fexemple qui suit, nous allons appliquer la r\u00e8gle R2 sur la paire num\u00e9ro 4 du corpus.\n4) <pair id=\"4\" value=\"TRUE\" > T: Pasteur began looking for the germ that causes rabies in 1880, and in july 1885 he found the efficient vaccine against the illness. H: to find the vaccine, Pasteur\u201fs researches took five years.\nPuisque l\u201f\u00e9v\u00e9nement e1 se d\u00e9roule au m\u00eame moment que l\u201f\u00e9v\u00e8nement e2 car si nous ajoutons \u00ab 7 years\u00bb \u00e0 \u00ab november the first 1954\u00bb nous serions en 1962 qui est la date o\u00f9 s\u201fest d\u00e9roul\u00e9 l\u201f\u00e9v\u00e8nement e2 et puisque e2 est le synonyme de e1 alors il y a une inf\u00e9rence temporelle entre e1 et e2.\nC) R\u00e8gle R3\nSi les diff\u00e9rentes conditions se r\u00e9unissent c\u201fest-\u00e0-dire :\n d\u00e9tecter une \u00e9quivalence entre les deux \u00e9v\u00e8nements (e1, e2)\n t1 est la date de d\u00e9but de l\u201f\u00e9v\u00e8nement e1, \u00e9v\u00e9nement e1 est reli\u00e9 a une dur\u00e9e e1d et t2 est la date de fin de l\u201f\u00e9v\u00e8nement e1.\n la somme entre la date t1et la dur\u00e9e d est \u00e9gale \u00e0 t2.\nNous aurons une inf\u00e9rence temporelle et textuelle entre les segments T et H.\nL\u201fabstraction de la r\u00e8gle R3 est repr\u00e9sent\u00e9e dans ce qui suit :\no Si debut(<T,e1>,<T,t>,date) ^ relation(<T,e1>,<T,t\u201f>,dur\u00e9e) ^ fin(<H,e2>, <H,t\u201f\u201f>,date)\nAlors Inf(T,H)= egal(Somme(<T,t>, <T,t\u201f>) , <H,t\u201f\u201f>)\nsinon Inf(T,H)= Faux\nLes num\u00e9ros des exemples dans le corpus de d\u00e9veloppement o\u00f9 les r\u00e8gles peuvent s\u201fappliquer : 3, 11.\nCette figure repr\u00e9sente la r\u00e8gle d\u201finf\u00e9rence R3:\nDans l\u201fexemple qui suit, nous allons appliquer la r\u00e8gle R3 sur la paire num\u00e9ro 3 du corpus de d\u00e9veloppement.\n3) <pair id=\"3\" value=\"TRUE\" >\nT: the Algerian revolution war started on november the first 1954, it caused the death of 1,5 million of martyrs and it e1: lasted 7 years. H: the Algerian revolution war e2: ended on july the fifth 1962.\nL\u201f\u00e9v\u00e9nement e1 se d\u00e9roule au m\u00eame moment que l\u201f\u00e9v\u00e9nement e2 car si on ajoute \u00ab 7 years\u00bb \u00e0 \u00ab november the first 1954\u00bb nous serions en 1962 qui est la date o\u00f9 se d\u00e9roule l\u201f\u00e9v\u00e8nement e2 et puisque e2 est le synonyme de e1 alors il y a une inf\u00e9rence temporelle entre e1 et e2.\nD) R\u00e8gle R4\nSi les diff\u00e9rentes conditions se r\u00e9unissent c\u201fest-\u00e0-dire :\n d\u00e9tecter une \u00e9quivalence entre les deux \u00e9v\u00e8nements (e1, e2)\n t1 est la date de fin de l\u201f\u00e9v\u00e8nement e1, \u00e9v\u00e9nement e1 est reli\u00e9 \u00e0 une dur\u00e9e e1d et t2 est la date de d\u00e9but de l\u201f\u00e9v\u00e8nement e1.\n la somme entre la date t1 et la dur\u00e9e d est \u00e9gale a t2.\nNous aurons une inf\u00e9rence temporelle et textuelle entre les segments T et H.\nL\u201fabstraction de la r\u00e8gle R4 est repr\u00e9sent\u00e9e dans ce qui suit :\no Si relation(<T,e1>,<T,t>,dur\u00e9e) ^ fin(<T,e1>,<T, t\u201f>,date) ^ debut(<H,e2>, <H, t\u201f\u201f>,date)\nAlors Inf(T, H)= \u00e9gale(Diff\u00e9rence (<T, t\u201f>,<T, t>),<H, t\u201f\u201f>)\nsinon Inf(T, H)=Faux\nLes num\u00e9ros des exemples dans le corpus de d\u00e9veloppement o\u00f9 les r\u00e8gles peuvent s\u201fappliquer : 10, 20.\nCette figure repr\u00e9sente la r\u00e8gle d\u201finf\u00e9rence R4:\nDans l\u201fexemple qui suit, nous allons appliquer la r\u00e8gle R4 sur la paire num\u00e9ro 10 du corpus.\n10) <pair id=\"11\" value=\"TRUE\" > T: on t1: december 2nd 1804, Napoleon Bonaparte became the emperor of the French, before d1: one year exactly, he e1: won the battle of Austerlitz. H: in t2: 1803, Napoleon e2: won the battle of Austerlitz.\nL\u201f\u00e9v\u00e9nement e1 se d\u00e9roule au m\u00eame moment que l\u201f\u00e9v\u00e9nement e2 car si on r\u00e9duit \u00ab one year exactly \u00bb \u00e0 \u00ab december 2nd 1804 \u00bb nous serions en 1803 qui est la date o\u00f9 se d\u00e9roule l\u201f\u00e9v\u00e8nement e2 et puisque e2 est le synonyme de e1 alors il y a une inf\u00e9rence temporelle entre e1 et e2.\nE) R\u00e8gle R5\nSi les diff\u00e9rentes conditions se r\u00e9unissent c\u201fest-\u00e0-dire :\n d\u00e9tecter une \u00e9quivalence entre les deux \u00e9v\u00e8nements (e1, e2)\n l\u201f\u00e9v\u00e9nement e1 est reli\u00e9 avec une relation TLINK e1t2 et l\u201f\u00e9v\u00e9nement e1 est reli\u00e9 avec la m\u00eame relation TLINK \u00e0 une dur\u00e9e e2d.\n inclusion entre la date t1 et la dur\u00e9e d.\nNous aurons une inf\u00e9rence temporelle et textuelle entre les segments T et H.\nL\u201fabstraction de la r\u00e8gle R5 est repr\u00e9sent\u00e9e dans ce qui suit :\no Relation (<T, e1>, < T,t> ,date) ^ relation(<H,e2>, <H,t\u201f>,dur\u00e9e)\nalors Inf(T, H)= Vraie SSi inclus(<T,t> ,<H, t\u201f>)\nsinon inf(T, H)=Faux\nLe num\u00e9ro de l\u201fexemple dans le corpus de d\u00e9veloppement o\u00f9 cette r\u00e8gle peut \u00eatre appliqu\u00e9e: 1. Cette figure repr\u00e9sente la r\u00e8gle d\u201finf\u00e9rence R5:\nApplication de la r\u00e8gle 5 sur la paire num\u00e9ro 1 du corpus.\n1) <pair id=\"1\" value=\"TRUE\" > T: the second world war e1: finished in 1945. H: the end of the second world war e2: took part between 1940 and 1950.\nPuisque l\u201f\u00e9v\u00e9nement e1 ce d\u00e9roule en 1945 et l\u201f\u00e9v\u00e9nement e2 se d\u00e9roule entre 1940 et 1950 et puisque e2 est le synonyme de e1 alors il y a une inf\u00e9rence temporelle entre e1 et e2."}, {"heading": "4.1.1.3) Groupe 2", "text": "Cette r\u00e8gle permet de savoir s\u201fil n\u201fy a pas d\u201fancrage temporel entre \u00e9v\u00e8nements.\nSi contraire(<T,e1> ,<H,e2>) ^ \u00e9quivalent(<T ,Subj(e1)> , <T,subj(e2)>) =<H,Subj(e2)>)\nA) R\u00e8gle R6\nSi les diff\u00e9rentes conditions se r\u00e9unissent c\u201fest-\u00e0-dire :\n d\u00e9tecter que l\u201f\u00e9v\u00e8nement e1 est le contraire de l\u201f\u00e9v\u00e8nement e2.\n l\u201f\u00e9v\u00e9nement e1 se produit soit avant ou apr\u00e8s e2.\nNous aurons une inf\u00e9rence temporelle et textuelle entre les segments T et H.\nL\u201fabstraction de la r\u00e8gle R6 est repr\u00e9sent\u00e9e dans ce qui suit :\nSi relation (<T, e1>, <T, t>, date) ^ relation(<H, e2>, <H, t\u201f>, date)\nAlors\nInf(T, H) = Vraie SSi before(relation (<T,e1>,<T,t>, date), relation(<H, e2>,\n<H, t\u201f>, date)\nv\nafter(relation (<T, e1>,<T, t>, date) , relation(<H, e2>, <H, t\u201f>, date)\nsinon inf(T, H)=Faux\nLes num\u00e9ros des exemples dans le corpus de d\u00e9veloppement o\u00f9 les r\u00e8gles peuvent s\u201fappliquer : 2, 5.\nCette figure repr\u00e9sente la r\u00e8gle d\u201finf\u00e9rence R6:\nApplication de la r\u00e8gle 6 sur la paire 2 du corpus.\n2) <pair id=\"2\" value=\"TRUE\" >\nT: Algeria got its e1: independence in 1962.\nH: Before 1962 Algeria was e2: colonized.\nDans cet exemple ci-dessus, puisque l\u201f\u00e9v\u00e9nement e1 se d\u00e9roule en 1962 et l\u201f\u00e9v\u00e9nement e2 se d\u00e9roule avant l\u201f\u00e9v\u00e8nement e1 et puisque e2 est l\u201fantonyme de e1 alors il y a une inf\u00e9rence temporelle entre e1 et e2."}, {"heading": "4.2.2) Le superviseur", "text": "Ce module, accepte en entr\u00e9e, les r\u00e9sultats du module \u00ab inf\u00e9rence entre \u00e9v\u00e9nements \u00bb, le r\u00e9sultat de \u00ab TARSQI \u00bb, \u00ab les ressources \u00bb \u00e0 ajouter et \u00ab les r\u00e8gles d\u201finf\u00e9rences \u00bb et en sortie, il indique s\u201fil y une inf\u00e9rence textuelle ou pas.\nLe superviseur permet de choisir les r\u00e8gles d\u201finf\u00e9rences temporelles \u00e0 appliquer et de d\u00e9cider de l\u201fexistence ou pas de l\u201finf\u00e9rence textuelle.\nAinsi, le superviseur applique la proc\u00e9dure suivante:\n Si le module a comme message \u00ab pas d\u201finf\u00e9rence \u00bb de la phase pr\u00e9c\u00e9dente c'est-\u00e0dire du module de test d\u201finf\u00e9rence le superviseur va afficher, \u00ab pas d\u201finf\u00e9rence\ntextuelle \u00bb.\n Si le module a comme message \u00ab non \u00bb qui veut dire qu\u201fil y a une relation d\u201fantonymie entre les \u00e9v\u00e8nements le module va ex\u00e9cuter les r\u00e8gles d\u201finf\u00e9rences\ntemporelles qui d\u00e9tectent si les deux \u00e9v\u00e8nements ne sont pas ancr\u00e9s temporellement.\n Si le module a comme message \u00ab oui \u00bb qui veut dire qu\u201fil y a une relation de synonymie entre les \u00e9v\u00e8nements, le module va ex\u00e9cuter les r\u00e8gles d\u201finf\u00e9rences\ntemporelles qui d\u00e9tectent si les \u00e9v\u00e9nements sont ancr\u00e9s temporellement.\nNous repr\u00e9sentons dans la figure suivante l\u201farchitecture du superviseur :\nFigure 4.26 : Architecture du superviseur\nFichier texte\nPas d\u201finf\u00e9rence\nOui\noui\nOui Non\nOui\noui\nOui Non\nOui Non Oui\noui\nOui Non Oui\noui\nPas d\u201finf\u00e9rence\nPas d\u201finf\u00e9rence Inf\u00e9rence vrai\nPas d\u201finf\u00e9rence Inf\u00e9rence vrai\nTest d\u201finf\u00e9rence entre\nsujets\nTest d\u201finf\u00e9rence entre\n\u00e9v\u00e8nements\nTest des r\u00e8gles d\u201finf\u00e9rences du groupe 1 Test d\u201fantonymie\nTest de synonymie\nTest des r\u00e8gles\nd\u201finf\u00e9rences du groupe 2 Pas d\u201finf\u00e9rence\nOui oui\nOui oui Oui Non\nOui Non\nIl existe des cas o\u00f9 plusieurs r\u00e8gles peuvent s\u201fappliquer. Pour cela, le superviseur prend les mesures suivantes :\n S\u201fil existe une fonction qui retourne une fausse inf\u00e9rence temporelle, cela implique qu\u201fil n\u201fy a pas d\u201finf\u00e9rence textuelle entre les segments T et H.\n Si toutes les fonctions retournent une inf\u00e9rence temporelle, cela implique qu\u201fil y a une inf\u00e9rence textuelle entre les segments T et H.\nComme il est montr\u00e9 dans la Figure 4.27 le superviseur ex\u00e9cute les r\u00e8gles du m\u00eame groupe une par une."}, {"heading": "4.4) Conclusion", "text": "Nous avons pr\u00e9sent\u00e9 dans ce chapitre, notre projet TIMINF. Son architecture informatique se base sur cinq modules principaux. Les deux modules TARSQI et Link Grammar Parser constituent la phase de pr\u00e9traitement indispensable \u00e0 la phase de test d\u201finf\u00e9rence, qui nous permet de d\u00e9tecter l\u201finf\u00e9rence entre \u00e9v\u00e8nements et sujets. Le module de balisage qui est inclue dans la deuxi\u00e8me phase est utilis\u00e9 pour baliser les expressions temporelles non d\u00e9tect\u00e9es par TARSQI."}, {"heading": "Le superviseur est le dernier module de notre syst\u00e8me. Celui ci communique avec une base de", "text": "r\u00e8gle et d\u00e9cide des choix des r\u00e8gles d\u2019inf\u00e9rences temporelles a appliqu\u00e9. Il a aussi le r\u00f4le de tester l\u2019inf\u00e9rence textuelle entre les phrases T et H d\u2019apr\u00e8s les donn\u00e9es re\u00e7ues de tous les composants du syst\u00e8me. Nous allons pr\u00e9senter dans le chapitre qui suit les diff\u00e9rentes \u00e9tapes de la mise en \u0153uvre du syst\u00e8me TIMINF ainsi qu\u201fune \u00e9tude exp\u00e9rimentale.\n- Chapitre 5 -"}, {"heading": "La mise en \u0153uvre et l\u201f\u00e9valuation du syst\u00e8me", "text": "TIMINF\nChapitre 5"}, {"heading": "La mise en \u0153uvre et l\u201f\u00e9valuation du syst\u00e8me", "text": "TIMINF"}, {"heading": "1) Introduction", "text": "Dans ce chapitre nous allons expliquer l\u201finstallation des diff\u00e9rents outils utilis\u00e9s pour aboutir \u00e0 notre objectif. Nous donnons aussi un exemple de d\u00e9roulement de notre syst\u00e8me qui r\u00e9sume les principales sp\u00e9cifications de notre projet et montre comment les diff\u00e9rents modules peuvent \u00eatre mis en \u0153uvre dans un syst\u00e8me de test d\u201finf\u00e9rence textuelle int\u00e9grant l\u201faspect temporel dans ses d\u00e9cisions. Nous finissons ce chapitre avec l\u201f\u00e9valuation de notre syst\u00e8me."}, {"heading": "2) Environnement et outils utilis\u00e9s", "text": ""}, {"heading": "2.1) Python", "text": "Pour concevoir notre syst\u00e8me nous avons choisi d\u201futiliser le langage de programmation Python qui a fait ses preuves dans la programmation de nombres applications du TALN. Python est un langage portable, dynamique, extensible, gratuit, qui permet une approche modulaire et orient\u00e9e objet de la programmation. Python est d\u00e9velopp\u00e9 depuis 1989 par Guido van Rossum et de nombreux contributeurs b\u00e9n\u00e9voles (Swinnen, 2005).\nL'interpr\u00e9teur peut \u00eatre lanc\u00e9 directement depuis la ligne de commande (dans un \u00ab shell \u00bb Linux, ou bien dans une fen\u00eatre DOS sous Windows) : il suffit d'y taper la commande \"python\" (en supposant que le logiciel lui-m\u00eame ait \u00e9t\u00e9 correctement install\u00e9). Nous utilisons une interface graphique telle que Windows. Pour cela nous avons pr\u00e9f\u00e9r\u00e9 travailler dans un environnement de travail sp\u00e9cialis\u00e9 tel que IDLE. Avec IDLE sous Windows, notre environnement de travail ressemblera \u00e0 celui-ci : Les trois caract\u00e8res \u00ab sup\u00e9rieur \u00e0 \u00bb constituent le signal d'invit\u00e9, ou prompt principal, lequel indique que Python est pr\u00eat \u00e0 ex\u00e9cuter une commande.\nPour r\u00e9diger nos s\u00e9quences d'instructions nous avons utilis\u00e9 l'\u00e9diteur incorpor\u00e9 dans une interface de d\u00e9veloppement telle que IDLE). Il serait parfaitement possible d'utiliser un syst\u00e8me de traitement de textes, \u00e0 la condition d'effectuer la sauvegarde sous un format \"texte pur\" (sans balises de mise en page). Il est cependant pr\u00e9f\u00e9rable d'utiliser un v\u00e9ritable \u00e9diteur ANSI \"intelligent\" tel que nedit ou IDLE, muni d'une fonction de coloration syntaxique pour Python, qui aide \u00e0 \u00e9viter les fautes de syntaxe. La figure ci-dessous illustre l'utilisation de l'\u00e9diteur IDLE). Sous (windows) :\nPar la suite, pour tester l'ex\u00e9cution de notre programme, il nous suffit de lancer l'interpr\u00e9teur Python en lui fournissant (comme argument) le nom du fichier qui contient le script. Par exemple, si nous avons plac\u00e9 un script dans un fichier nomm\u00e9 \u00ab MonScript \u00bb, il suffira d'entrer la commande suivante dans une fen\u00eatre de terminal pour que ce script s'ex\u00e9cute : python MonScript Dans l'explorateur Windows, nous pouvons lancer l'ex\u00e9cution de notre script en effectuant un simple clic de souris sur l'ic\u00f4ne correspondante ou dans IDLE, en lan\u00e7ant l'ex\u00e9cution du script en cours d'\u00e9dition, directement \u00e0 l'aide de la combinaison de touches <Ctrl-F5>."}, {"heading": "2.2) TARSQI", "text": "Nous d\u00e9crivons dans ce qui suit le processus d\u201finstallation de TARSQI dans un environnement Linux puisqu\u201fil n'existe pas actuellement une version Windows de TARSQI. Toutefois, le code est \u00e9crit pour \u00eatre multiplateforme. Le groupe TIMEML travaille actuellement sur une version de TARSQI adapt\u00e9 pour Windows qui sera publi\u00e9e d\u00e8s que possible."}, {"heading": "2.2.1) L\u201finstallation", "text": ""}, {"heading": "La bo\u00eete \u00e0 outils requiert au moins la version 2,3 de Python et la version 5,8 de Perl. La bo\u00eete \u00e0 outils a \u00e9t\u00e9 test\u00e9e sur les plates-formes suivantes: Red Hat Linux 5, avec Python 2.4.3 et Perl 5.8.8", "text": "Mac OS X, avec Python 2.3.5 et Perl 5.8.8\nPour installer TARSQI, nous avons d\u201fabord t\u00e9l\u00e9charg\u00e9 et d\u00e9compresser l'archive dans un r\u00e9pertoire et, taper dans l\u201finvit\u00e9 de commande ce qui suit :\n% Gunzip-c TTK-1.0.tar.gz | tar xp\nCette commande permet de d\u00e9compresser le contenu dans un r\u00e9pertoire nomm\u00e9 TTK-1,0,\nqui est un r\u00e9pertoire choisi par nous.\nLa bo\u00eete \u00e0 outils TARSQI est con\u00e7ue pour fonctionner de fa\u00e7on transparente avec le SGI TreeTagger. Le TreeTagger doit \u00eatre install\u00e9 dans ttk-1.0/code/components/preprocessing/treetagger/\nCe r\u00e9pertoire doit avoir des sous-r\u00e9pertoires bin et lib.\n2.2.2) L\u201futilisation de la boite \u00e0 outils TARSQI\nPour ex\u00e9cuter l'outil TARSQI, nous devons ouvrir un terminal, aller au r\u00e9pertoire o\u00f9 se trouve le fichier tarsqi.py et taper :\npython tarsqi.py <input_type> [drapeaux] <infile> <outfile>\n<input_type>: Il existe deux formats d\u201fentr\u00e9e de TARSQI : simple-xml et rte3.\n[drapeaux]: Avec les drapeaux nous pouvons ex\u00e9cuter un seul ou plusieurs module de TARSQI o\u00f9 l\u201fordre des modules est important. En voici un exemple:\n[drapeaux]= pr\u00e9processeur, GUTIME, EVITA\nL\u201fexemple montre une demande d\u201fex\u00e9cution des 3 premiers modules de TARSQI."}, {"heading": "2.2.3) L\u201futilisation de la boite \u00e0 outils d\u201finterface graphique", "text": "La Bo\u00eete \u00e0 outils d'interface graphique peut \u00eatre utilis\u00e9e en tapant :\n% Pythonw gui.py\nL'interface graphique a trois avantages sur l'utilisation de la version en ligne de commande:\n Il est plus rapide lors de l'utilisation sur un fichier par fichier, parce que toutes les biblioth\u00e8ques sont charg\u00e9es soit au d\u00e9marrage ou lorsque le premier fichier est trait\u00e9.\n Il est plus facile \u00e0 utiliser.\n Il permet \u00e0 l'utilisateur de taper certains points d'entr\u00e9e et voir ce qui se passe. Le principal inconv\u00e9nient est qu'il n'est pas possible de traiter tous les fichiers dans un r\u00e9pertoire. Voici une capture d'\u00e9cran:\nLes fonctionnalit\u00e9s peuvent \u00eatre r\u00e9sum\u00e9es comme suit:\n Utilisez \"Chargez le fichier\" pour s\u00e9lectionner un fichier \u00e0 traiter.  Utilisez \"Texte de charge\" \u00e0 saisir du texte. Cette op\u00e9ration va cr\u00e9er un fichier\ndans le dossier data / en / r\u00e9pertoire utilisateur, qui est ensuite s\u00e9lectionn\u00e9 comme fichier d'entr\u00e9e.  Utilisez \u00ab Processus de dossier \u00bb pour traiter le fichier d'entr\u00e9e conformes aux\nparam\u00e8tres s\u00e9lectionn\u00e9s."}, {"heading": "2.3) Link Parseur", "text": "L\u2019installation de ce module n\u2019est pas difficile, puisque apr\u00e8s avoir t\u00e9l\u00e9charg\u00e9 le syst\u00e8me de puis le lien suivant (http://www.abisource.org/projects/link-grammar/), nous avons d\u00e9compress\u00e9 le contenu dans un r\u00e9pertoire de notre choix. Il suffit d\u2019un click sur l\u2019ex\u00e9cutable contenu dans le r\u00e9pertoire."}, {"heading": "Il suffit d\u2019\u00e9crire le texte que nous voulons analyser et nous aurons l\u2019analyse syntaxique.", "text": ""}, {"heading": "2.4) PyWordNet", "text": "Dans notre module nous avons choisi d\u201futiliser une version de WordNet qui correspond au choix de notre langage de programmation. En effet, PyWordNet est une interface Python pour la base de donn\u00e9es WordNet qui permet avec des fonctions du langage python de consulter la base de donn\u00e9es WordNet. Exemple : Si nous tapons l\u201fexpression suivante dans l\u201finvit\u00e9 de commande python :\nNous interrogeons la base de donn\u00e9es sur les diff\u00e9rents sens du mot \u00ab dog \u00bb. {'dog' in {noun: dog, domestic dog, Canis familiaris}"}, {"heading": "2.4.1) L\u201finstallation", "text": "Pour installer Pywordnet, il nous a fallu d\u201fabord T\u00e9l\u00e9charger et installer WordNet de 2.0 qui est disponible sur le site http://www.cogsci.princeton.edu/ wn ~ /. Aussi nous avons t\u00e9l\u00e9charg\u00e9 PyWordNet de http://sourceforge.net/projects/pywordnet et d\u00e9compresser dans le r\u00e9pertoire. Ensuite avec l\u201finvit\u00e9 de commande nous acc\u00e9dons au r\u00e9pertoire contenant les fichiers d\u00e9compress\u00e9s et nous tapons python setup.py.\nCette commande va permettre concr\u00e8tement d\u201finstaller les deux biblioth\u00e8ques n\u00e9cessaires au bon fonctionnement du syst\u00e8me. Les deux biblioth\u00e8ques sont respectivement wordnet.py contient la base de donn\u00e9es et wntools.py contient les fonctions qui permettent de consulter la base de donn\u00e9es.\n>>> N['dog'] dog(n.) >>> N['dog'].getSenses()\n2.4.2) L\u201futilisation de PyWordNet dans notre syst\u00e8me\nPour savoir si les mots sont antonyme ou synonymie, qui est l\u201fobjet du module inf\u00e9rence entre sujet et \u00e9v\u00e9nement, nous avons utilis\u00e9 la fonction meet (mot1, mot2, Synonymie) de la biblioth\u00e8que PyWordNet qui permet de donner vrai s\u201fil y a une synonymie entre les deux.\nLa m\u00eame chose pour l\u201fantonyme mot et meet (mot1, mot2, antonymie) qui permet de donner vrai si \u201eil y a une antonymie entre les deux mots.\nCette figure repr\u00e9sente la fonction qui d\u00e9tecte s\u201fil y a une antonymie entre deux mots programm\u00e9s en Python :\nDans ce qui suit nous allons illustrer nos travaux avec le d\u00e9roulement d\u201fun exemple du corpus sur notre syst\u00e8me. Nous allons citer les diff\u00e9rentes phases de traitement de la paire de textes."}, {"heading": "3) Exemple d\u201fex\u00e9cution du TIMINF sur un exemple", "text": "du corpus\nNous avons choisi pour l\u201fexemple, la paire num\u00e9ro 8 du corpus de d\u00e9veloppement.\nComme il est montr\u00e9 dans l\u201fexemple ci-dessous la premi\u00e8re \u00e9tape est de transformer le texte brut en format simple-xml, pour cela nous avons balis\u00e9 manuellement les paires du corpus."}, {"heading": "3.1) TARSQI", "text": "Le module TARSQI va permettre de d\u00e9tecter les deux \u00e9v\u00e9nements de la paire de deux textes (T,H) qui correspondent dans l\u201fexemple au verbe collapsed qui est l\u201f\u00e9v\u00e8nement des deux segments de textes.\nLa commande qui permet d\u201fenclencher le module TARSQI avec le format simpel-xml dans un environnement UNIX c\u201fest :\npython tarsqi.py simple-xml (le nom du fichier contenant les deux segments de textes) (le nom du fichier de sortie).\nCi-dessous nous montrons la sortie TARSQI correspondant \u00e0 l\u201fexemple :"}, {"heading": "3.2) L\u201fanalyse syntaxique", "text": "L\u201fanalyse syntaxique se fait en parall\u00e8le avec TARSQI et elle va permettre de d\u00e9tecter les sujets des deux segments de textes, qui correspond dans l\u201fexemple \u00e0 the building.\nCi-dessous nous montrons la sortie de LINK Parseur correspondante \u00e0 l\u201fexemple :"}, {"heading": "3.3) L\u201finf\u00e9rence entre sujets et \u00e9v\u00e9nements", "text": "Comme il est montr\u00e9 dans l\u201fexemple ci-dessous le module de test d\u201finf\u00e9rence entre sujets et \u00e9v\u00e8nements va permettre de d\u00e9tecter l\u201f\u00e9quivalence entre les deux sujets et les deux \u00e9v\u00e8nements des segments T et H."}, {"heading": "3.4) Le balisages des expressions temporelles non d\u00e9tect\u00e9es", "text": "par TARSQI\nComme il est montr\u00e9 dans l\u201fexemple ci-dessous, le balisage des expressions temporelles va permettre de positionner l\u201fexpression temporelle dans le temps. Dans l\u201fexemple il d\u00e9termine que the afternoon c\u201fest l\u201fintervalle temporel entre midi et 18 heures."}, {"heading": "3.5) Le superviseur", "text": "L\u201f\u00e9quivalence entre les sujets et les \u00e9v\u00e8nements est d\u00e9tect\u00e9e par la phase d\u201finf\u00e9rence textuelle et d\u201fancrage entre les expressions temporelles (2 o\u201fclock et the afternoon) est d\u00e9tect\u00e9 par l\u201fapplication de la r\u00e9gle R5 de la base de r\u00e8gles d\u201finf\u00e9rences qui stipule que si les diff\u00e9rentes conditions se r\u00e9unissent c\u201fest-\u00e0-dire :\n d\u00e9tecter une \u00e9quivalence entre les deux \u00e9v\u00e8nements (e1, e2)\n l\u201f\u00e9v\u00e9nement e1 est reli\u00e9 avec une relation TLINK e1t2 et l\u201f\u00e9v\u00e9nement e1 est reli\u00e9 avec la m\u00eame relation TLINK \u00e0 une dur\u00e9e e2d.\n inclusion entre la date t1 et la dur\u00e9e d.\nNous aurons une inf\u00e9rence temporelle et textuelle entre les segments T et H.\nDes deux r\u00e9sultats pr\u00e9c\u00e9dents le superviseur d\u00e9cide qu\u201fil y a une inf\u00e9rence textuelle entre les segments T et H.\nCette figure repr\u00e9sente les diff\u00e9rentes conditions n\u00e9cessaires \u00e0 une inf\u00e9rence textuelle."}, {"heading": "4) L\u201f\u00e9valuation de notre syst\u00e8me", "text": "Notre objectif consiste \u00e0 am\u00e9liorer les syst\u00e8mes d\u201finf\u00e9rences textuelles. Dans ce cadre, nous avons choisi d\u201f\u00e9valuer notre syst\u00e8me d\u201finf\u00e9rence avec le syst\u00e8me d\u201f\u00e9valuation adopt\u00e9 par le challenge RTE. Pour cela, nous devons \u00e9valuer le syst\u00e8me par rapport au corpus de d\u00e9veloppement et aussi par rapport au corpus de test.\nChaque paire du corpus est lanc\u00e9e dans notre syst\u00e8me qui donne en sortie s\u201fil y a une inf\u00e9rence textuelle ou pas. Les r\u00e9sultats sont compar\u00e9s au \u00ab GOLD standard \u00bb que nous avons \u00e9tabli dans notre \u00e9tape de conception du corpus. Le pourcentage donnant le nombre de fois o\u00f9 il y a similitude entre notre syst\u00e8me et le \u00ab gold standard \u00bb donne \u00ab l\u201faccuracy \u00bb du syst\u00e8me. l\u201faccuracy est une mesure standard fr\u00e9quemment utilis\u00e9e dans les syst\u00e8mes de traitements du langage naturel.\nDans ce qui suit, nous allons pr\u00e9senter les r\u00e9sultats pr\u00e9liminaires des \u00e9valuations des deux corpus.\n4.1) L\u201f\u00e9valuation du syst\u00e8me sur le corpus de d\u00e9veloppement\nNous avons \u00e9labor\u00e9 notre syst\u00e8me d\u201fapr\u00e8s l\u201f\u00e9tude des inf\u00e9rences existantes dans le corpus de d\u00e9veloppement. Ce corpus nous a permis de tester notre syst\u00e8me plusieurs fois en effectuant \u00e0 chaque fois des modifications jusqu'\u00e0 ce qu\u201fon arrive \u00e0 concevoir un syst\u00e8me qui a donn\u00e9 100% d\u201faccuracy par rapport \u00e0 ce corpus."}, {"heading": "4.2) L\u201f\u00e9valuation du syst\u00e8me avec le corpus de test", "text": "Le corpus de test est constitu\u00e9 de 30 paires de textes, 15 d\u201fentres elles sont \u00e9valu\u00e9es comme contenant une inf\u00e9rence textuelle fausse et les autres sont \u00e9valu\u00e9s comme vrai.\nNous avons soumis ce corpus a notre syst\u00e8me qui nous a permis de calculer l\u201faccuracy.\nLes r\u00e9sultats d\u201faccuracy sont montr\u00e9s dans le tableau suivant :\nLes syst\u00e9mes L\u201faccuracy\nSyst\u00e8me 58 %\nTableau 2.1 : Le tableau repr\u00e9sente l\u201faccuracy du syst\u00e8me\nLes r\u00e9sultats de l\u201f\u00e9valuation sont encouragent puisque nos r\u00e9sultats sont plus \u00e9lev\u00e9s que la moyenne de l\u201faccuracy des syst\u00e8mes participants au RTE 2 qui sont de 56.6 %.\nDans ce qui suit nous allons \u00e9tudier les causes de d\u00e9faillance de notre syst\u00e8me."}, {"heading": "4.4) L\u201fanalyse des erreurs caus\u00e9es par le syst\u00e8me", "text": "D\u201fapr\u00e8s notre \u00e9tude des r\u00e9sultats donn\u00e9s par notre syst\u00e8me nous avons pu \u00e9laborer un tableau contenant des statistiques concernant les causes d\u201f\u00e9checs de notre syst\u00e8me.\nProbl\u00e8me Pourcentage\nd\u201ferreur dans le corpus\nAnalyse syntaxique\n38 %\nTARSQI 62 %\nTableau 3.2 : les causes d\u201ferreurs du syst\u00e8me\nNous remarquons dans ce tableau que les majeures parties des erreurs commises par notre syst\u00e8me sont en g\u00e9n\u00e9rale caus\u00e9 par la d\u00e9ficience de l\u201foutil TARSQI.\nEn effet, TARSQI ne d\u00e9tecte pas plusieurs choses. Par exemple, au niveau de la d\u00e9tection des \u00e9v\u00e8nements o\u00f9 nous avons remarqu\u00e9 que TARSQI ne d\u00e9tecte pas les verbes compos\u00e9s comme un \u00e9v\u00e9nement mais plut\u00f4t comme deux \u00e9v\u00e8nements ind\u00e9pendants.\nExemple: paire num\u00e9ro 1 du corpus de test. T: the First World War spent 7 years.\nH: World War I, also known as the First World War, the Great War and the War To End All Wars, was a global military conflict which took place primarily in Europe from 1914 to 1918.\nDans l\u201fexemple la d\u00e9tection de l\u201f\u00e9v\u00e9nement took place par TARSQI n\u201fa pas pu se faire car took place est un verbe compos\u00e9.\nAussi les erreurs de notre syst\u00e8me viennent de l\u201fanalyse syntaxique effectuer en pr\u00e9 traitement par link parser o\u00f9 les sujets des verbes ne sont pas d\u00e9tect\u00e9s.\nExemple: paire num\u00e9ro 10 du corpus de test.\nT: Protracted military S1: conflict between Iran and Iraq. It officially began on t1: Sept. 22, 1980, finally, in July, 1988, Iran was forced to accept a United Nations\u2013mandated cease-fire. H: With more than 100000 Iranian victims of Iraq's chemical weapons during the ten-year war, Iran is one of the countries most severely afflicted by weapons.\nDans l\u201fexemple pr\u00e9c\u00e9dant, la relation entre la date t1 et le sujet S1 n\u201fest pas d\u00e9tect\u00e9 par TARSQI puisque l\u201fanalyse syntaxique n\u201fa pas pu auparavant relier entre conflict et it."}, {"heading": "5) Conclusion", "text": "Nous avons pr\u00e9sent\u00e9 dans ce chapitre le processus d\u201finstallation de nos diff\u00e9rents outils n\u00e9cessaires au bon fonctionnement de notre syst\u00e8me. Nous avons \u00e9galement pr\u00e9sent\u00e9 le d\u00e9roulement de notre syst\u00e8me sur un exemple du corpus qui a permis de montrer comment les diff\u00e9rents modules \u00e9taient mis en \u0153uvre dans notre syst\u00e8me.\nEnfin, nous avons donn\u00e9 les performances de notre syst\u00e8me qui \u00e9taient encourageantes et nous avons \u00e9tudi\u00e9 les diff\u00e9rentes failles de notre syst\u00e8me. Cela a permis de monter que l\u201finf\u00e9rence temporelle \u00e0 un besoin in\u00e9luctable aux d\u201fautres modules d\u201finf\u00e9rences.\nConclusion g\u00e9n\u00e9rale et perspective\nNous avons pr\u00e9sent\u00e9, tout au long de ce manuscrit, notre d\u00e9marche pour la conception d\u201fun syst\u00e8me d\u201finf\u00e9rence textuelle consid\u00e9rant l\u201finf\u00e9rence temporelle dans sa d\u00e9cision. Pour cela nous avons d\u201fabord explor\u00e9 l\u201fapport du RTE dans les diff\u00e9rentes applications du TAL (RI, QR, EI et RA) et \u00e9tudi\u00e9 les diff\u00e9rentes approches utilis\u00e9es pour d\u00e9tecter l\u201finf\u00e9rence (lexical, lexico syntaxique, s\u00e9mantique et logique). Puis nous avons analys\u00e9 les approches des diff\u00e9rents groupes de recherches qui ont particip\u00e9 aux trois challenges Pascal RTE. Cette \u00e9tape nous a permis de d\u00e9couvrir les chemins qui n\u201font pas encore \u00e9t\u00e9 \u00e9tudi\u00e9s pour d\u00e9tecter l\u201finf\u00e9rence textuelle.\nEnsuite, nous avons explor\u00e9 la logique temporelle, ses applications dans le traitement du langage nature et les diff\u00e9rents types d\u201finf\u00e9rences temporelles existantes. Cette \u00e9tude nous a permis de constater qu\u201fil n\u201fy a pas de travail \u00e0 nos jours liant l\u201finf\u00e9rence temporelle et la reconnaissance de l\u201finf\u00e9rence temporelle.\nNous avons \u00e9labor\u00e9 un corpus contenant des paires de segments de textes integrant des relations temporelles et nous avons fait une classification des diff\u00e9rents types d\u201finf\u00e9rences temporelles existants dans le corpus.\nLa suite logique de ce travail est de d\u00e9duire des r\u00e9gles d\u201finf\u00e9rences temporelles et les int\u00e9grer \u00e0 un syst\u00e9me de reconnaissance d\u201finf\u00e9rence texuelle.\nUne fois le syst\u00e9me concu, nous avons \u00e9valu\u00e9 ses performances avec la m\u00e9me stategie d\u201fevaluation adopt\u00e9e dans le challenge pascal RTE. Cette evaluation nous a donn\u00e9 des r\u00e9sultats encourageants.\nEnfin, nous avons \u00e9tudi\u00e9 les diff\u00e9rentes failles de notre syst\u00e8me. Cela a permis de pr\u00e9voir plusieurs perspectives de recherches.\nContribution\nEtant donn\u00e9 les objectifs que nous nous sommes fix\u00e9s pour ce projet, les principales contributions de TIMINF peuvent \u00eatre r\u00e9sum\u00e9es comme suit :\nL\u201f\u00e9laboration d\u201fun corpus \u00e0 base d\u201finf\u00e9rence temporelle permettra d\u201f\u00e9valuer les recherches futures dans ce Domaine.\nL\u201f\u00e9tude du corpus nous a permis de classifier diff\u00e9rents types d\u201finf\u00e9rence temporelle et de d\u00e9velopper diff\u00e9rentes r\u00e8gles d\u201finf\u00e9rences temporelles.\nAussi l\u201f\u00e9valuation de notre syst\u00e8me a permis de voir concr\u00e8tement quel est l\u201fapport de l\u201faspect temporel dans le RTE.\nPerspectives et travaux futurs\nNous envisageons de poursuivre nos recherches futures dans trois directions principales.\nNotre syst\u00e8me ne permet pas de d\u00e9tecter les entit\u00e9s nomm\u00e9es et de g\u00e9rer les anaphores. Pour cela, nous envisageons d\u201fintroduire un module permettant de d\u00e9tecter et de dater les entit\u00e9s nomm\u00e9es automatiquement. Aussi nous pensons \u00e0 int\u00e9grer un module pour g\u00e9rer les anaphores et \u00e9tudier l\u201fimpacte de celui-ci sur la performance de notre syst\u00e8me.\nLa seconde direction scientifique est d\u201f\u00e9valuer le syst\u00e8me pr\u00e9dicat argument comme pr\u00e9traitement au lieu d\u201fune simple analyse syntaxique.\nEnfin, nous envisageons \u00e9galement de d\u00e9velopper un syst\u00e8me pouvant tester l\u201finf\u00e9rence textuelle dans des segments de textes plus grandes et utiliser un syst\u00e8me qui utilise comme r\u00e9ponse trois sorties possibles (inf\u00e9rence vrai, inf\u00e9rence Fausse ou on ne c\u201fest pas s\u201fil y a une inf\u00e9rence) et nous associons chaque inf\u00e9rence vraie \u00e0 une application du TALN (QR, RI, IE, PP\u2026).\nR\u00e9f\u00e9rences\n(Baker, Fillmore et Lowe, 1998) Baker, Charles J. Fillmore, and John B. Lowe. 1998. The berkeley framenet project. In Proceedings of the COLING-ACL, Montreal.\n(Bras, 1990) Myriam Bras. Calcul des Structures Temporelles du Discours. PhD thesis, IRIT, 1990. (Benveniste, 1974) Benveniste Emile Probl\u00e8mes de linguistique g\u00e9n\u00e9rale. Paris, Gallimard, vol. II.\n(Bourigault, 2000) BOURIGAULT D. Recent Advances in Computational Terminology, 2000.\n(Bourigault et al., 2004) BOURIGAULT D. AUSSENAC-GILLES N. et CHARLET J. (2004). Construction de ressources terminologiques ou ontologiques \u00e0 partir de textes : un cadre unificateur pour trois \u00e9tudes de cas, Revue d'Intelligence Artificielle, 18(4), 24 pp.\n(Charolles, 1997) Charolles M. \u00ab L\u201fencadrement du discours \u2013 univers, champs, domaines et espaces \u00bb, Cahier derecherche linguistique, 6, p. 1-73. 1997.\n(Chaumartin, 2007) Francois-Regis chaumartin, wordnet et son ecosysteme, BDL-CA,2007, montreal.\n(Cohen, 1960) Cohen J. : \u201cA coefficient of agreement for nominal scales\u201d, Educ. Psychol. Meas.: 20, 27-46. 1960\n(Dagan et al, 2005) Textual inference problems from the PASCAL RTE. Challenge, 2005.\n(Len Schubert, 2002) Len Schubert. Can we derive general Word Knowledge from Texts ?. 2002.\n(Helmut Schmid, 1994) Part-of-Speech Tagging with Neural Networks. Proceedings of the 15th International Conference on Computational Linguistics (COLING-94). August 1994.\n(Joachims, 2003) T. Joachims, Information Retrieval and Language Technology (pdf), 2003, Cornell University.\n(Kosseim., 2005). Leila Kosseim, Extraction d'information bilingue, 2005.\n(Ligauzat , 1994) G\u00e9rard Ligauzat. Repr\u00e9sentation des connaissances et linguistique. Armand Colin, Paris, 1994.\n(Lin et Pantel, 2001) DeKang Lin and Patrick Pantel. 2001. Discovery of inference rules for Question Answering. Natural Language Engineering.\n(Laurain et Marie, 2006) La traduction automatique. France. Septentrion Presses Universitaire, 1996. p. 15-16.\n(Macleod et al., 1998) C.Macleod, R.Grishman, A.Meyers, L.Barrett and R. Reeves. 1998. Nomex : A lexicom of normalisations.in Proceedings of 8 the International Congress of the European association for lexicography.1998. liege, begium : EURALEX.\n(Mani et Wilson, 2000) Mani and George Wilson. 2000. Processingof News. In Proceedings of the 38th Annual Meetingof the Association for Computational Linguistics(ACL2000), pages 69\u201376.\n(Moldovan et Rus, 2001) Dan I. Moldovan and Vasile Rus. 2001. Logic form transformation of wordnet and its applicability to question answering. In Meeting of the Association for Computational Linguistics, pages 394-401.\n(Moldovan and Rus, 2001). Moldovan and Rus Logic Forms can be utilized by a wide variety.2001.\n(Miller, 1995) P. Miller. 1995. \"Notes on phonology and orthography in several Katuic MonKhmer groups in Northeast Thailand.\" Mon-Khmer Studies 24: 27-51.\n(Nugues, 2006) Pierre Nugues. An Introduction to Language Processing with Perl and Prolog. Springer Verlag, 2006.\n(Nyberg et al, 2002) E. Nyberg, T.Mitamura, J. Carbonnell, J. Callan, K. Cllins-Thompson, K Czuba, M. Duggan, L. Hiyakumoto, N. Hu, Y. huang, J. Ko, L.V. Lita, S.Muratagh et V. Pedro. The JAVELIN Question-Ansewering System at TREC 2002. In Proceding of the 11 th Text Retrieval conference (TREC-11), 2002.\n(Pustejovsky et al., 2003) Paul Kiparsky and Carol Kiparsky. InManfred Bierwisch and Karl Erich Heidolph, editors, Progress in Linguistics. A collection of Papers, pages143\u2013173. Mouton, Paris.\n(Rodrigo et al., 2007) A. Rodrigo, A. Pe\u02dcnas, J. Herrera and F. Verdejo..The Effect of Entity Recognition on Answer Validation.In Lecture Notes in Computer Science. In press 2007.\n(Sleator et Temperley, 1991) Daniel Sleator and Davy Temperley. 1991. Parsing English with a Link Grammar. Carnegie Mellon University Computer Science technical report CMU-CS91-196, October 1991.\n(Swinnen, 2005) G\u00e9rard Swinnen Apprendre \u00e0 programmer avec Python, Copyright 2005.\n(Tatu et Moldovan,2007) Marta Tatu and Dan Moldovan. 2007 COGEX at the third recognising of textual entailement challenge. In proceeding of the wokshop on textual entailment, prague, June 2007.\n(Tatu et al., 2006) Marta Tatu, B Iles, J. Slavick, A. Novischi, and D. Moldovan. 2006, COGEX at the third recognising of textual entailement challenge. In proceeding of the wokshop on textual entailment,Venice, Italy.\n(vanderwende et al., 2005) Lucy vanderwende, deborah coughlin and bill dolan. 2005.what syntax contribute in entailment task. In proccedings of pascalchallange workshop on recogning texual entailment,2005 .\n(Venhagen et al., 2005) M. Venhagen, I. Mani , R. Sauri, R. Knippen, J .Littman and J. Pustejovsky. 2005. Automating Tenporal Annotation With TARSQI. In Proceedings of ACL 2005. demo session.\n(WOS, 1998) L. WOS. Automated Reasoning -33 Basic Research Problems. Prentice-Hall. (Yvon, 2007) Fran\u00e7ois Yvon . Une petite introduction au Traitement Automatique des Langues Naturelles, 2007."}], "references": [], "referenceMentions": [], "year": 2009, "abstractText": null, "creator": "Microsoft\u00ae Office Word 2007"}}}