{"id": "1303.5705", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "20-Mar-2013", "title": "Combining Multiple-Valued Logics in Modular Expert Systems", "abstract": "the way experts manage uncertainty usually changes depending on the task they are performing. this fact has lead us to consider the problem topology of communicating modules ( task implementations ) in forming a large and structured knowledge based system when modules have different uncertainty calculi. in this paper, the analysis of the communication consistency problem is made assuming that ( i ) each complementary uncertainty calculus member is an inference mechanism defining an exact entailment relation, and therefore the communication is considered to likewise be inference - preserving, and ( ii ) we restrict us ourselves freely to the case which the different uncertainty calculi are given by a class language of truth functional multiple - valued logics.", "histories": [["v1", "Wed, 20 Mar 2013 15:29:35 GMT  (428kb)", "http://arxiv.org/abs/1303.5705v1", "Appears in Proceedings of the Seventh Conference on Uncertainty in Artificial Intelligence (UAI1991)"]], "COMMENTS": "Appears in Proceedings of the Seventh Conference on Uncertainty in Artificial Intelligence (UAI1991)", "reviews": [], "SUBJECTS": "cs.AI", "authors": ["jaume agust\\'i-cullell", "francesc esteva", "pere garcia", "lluis godo", "carles sierra"], "accepted": false, "id": "1303.5705"}, "pdf": {"name": "1303.5705.pdf", "metadata": {"source": "CRF", "title": "Combining Multiple-valued Logics in Modular Expert Systems", "authors": ["Jaume Agusti-Cullell", "Francese Esteva", "Pere Garcia", "Lluis Godo", "Carles Sierra"], "emails": ["agusti@ceab.es", "esteva@ceab.es", "pere@ceab.es", "godo@ceab.es", "sierra@ceab.es"], "sections": [{"heading": null, "text": "The way experts manage uncertainty usually changes depending on the task they are performing. This fact has lead us to consider the problem of communicating modules (task implementations) in a large and structured knowledge based system when modules have different uncertainty calculi. In this paper, the analysis of the communication problem is made assuming that (i) each uncertainty calculus is an inference mechanism defining an entailment relation, and therefore the communication is considered to be inference-preserving, and (ii) we restrict ourselves to the case which the different uncertainty calculi are given by a class of truth functional Multiple-valued Logics.\n1 INTRODUCTION\nMost expert system (ES) building tools with uncertainty management capabilities provide a unique and global method for representing and combining evidence. Nevertheless, human experts usually change the way they manage uncertainty depending on the task they are performing. To be able to model this behaviour, an ES building tool must allow to attach different uncertainty calculi to the structures implementing the different tasks (in modular ES shells the notion of task is usually implemented as goal-oriented modules). However, tasks or modules in a know ledge base are not independent one of each other, they need to cooperate and communicate, as human experts do when solving complex problems. This can be shown in the following example.\nA physician diagnosing a pneumonia could ask to a radiologist about the results of a radiological analysis. The simplest and more frequent type of communication is to get an \"atomic\" answer like\n\"it is likely that the patient has a cavitation in his left lung.\"\nThen, to use this information in his own reasoning, the physician must only interpret in his language the linguistic expression likely used by the radiologist, and perhaps to identify it with another uncertainty term, say for example acceptable, used by himself. But the communication could have been richer than that \"atomic\" answer, and consist of a more complex piece of information. For instance, the radiologist could have answered:\n\"if from a clinical point of view you are very confident that the patient has a bacterial disease and he is also inmunodepressed, then its nearly sure he has a cavitation in his left lung.\"\nAs in the previous case, to use the radiologist information the physician must again interpret it. However, this time the interpretation can not be only a matter of uncertainty terms (very confident, nearly sure) but also a matter of way of reasoning, if he wants to make use of this information in other situations (i.e., patients) which do not match exactly the one expressed above.\nTherefore, if in a knowledge base we have different uncertainty calculi for different tasks (or modules), and these modules need to communicate, a correspondence between their uncertainty calculi must be established. To model the first type of communication shown in the example, in a modular ES shell only a way of translating the languages of different uncertainty calculi, attached to different modules, is required. However, to model the second type of communication the correspondence is also required to be made inference-preserving. The need to preserve sometimes inferences through the communication among tasks can be made clearer by means of another little example from an existing expert system, PNEUMON-IAl [Verdaguer, 1989], for the diagnosis of\n1 PNEUMON-IA is an application developped in the modular rule based expert system shell MILORD [Sierra, 1989]. that manages linguistically expressed uncertainty (see section 3 for more details)\n18 Agusti-Cullell, Esteva, Garcia, God6, and Sierra\npneumoniae. The module (task) Bacteria of this expert system comprises the following rule:\n[If a patient has leukopenia and left-deviation then he has a bacterial disease, sure]\nstating that the certainty about the bacterianicity of a disease depends on the certainty of the facts leukopenia and /eft-deviation, which are investigated in another module named Laboratory. Let's suppose that these two modules have different uncertainty calculi. Then we could have two types of communication between them. A first possibility is that Bacteria asks to Laboratory for the two facts, translates the answers and makes its \"and\" combination to conclude about bacterianicity. The second possibility is Bacteria asks the certainty value of the non-atomic sentence \"leucopenia and /eft-deviation\" and translates it. In this last case the \"and\" combination of the certainty values is performed in the Laboratory module, and the result is afterwards translated to the Bacteria uncertainty calculus and used to conclude about bacterianicity. It seems clear that in order to keep the coherence of the whole diagnosis task, the certainty degree of bacterianicity found out in each case should be the same. To make this sure, the correspondence between the uncertainty calculi of those modules should preserve the inferences made in the Laboratory module when moving to the Bacteria module.\nThe general problem of analyzing conditions under which a correspondence or communication between different tasks with different uncertainty calculi preserves inference is a very hard one. In order to deal with this problem, several approaches could be taken into account, from pure logical ones to more cognitive ones. In [Meseguer, 1989], in another but not very different setting, it is argued that \"if the approach taken lacks a logical basis to serve as a criterion of correctness the result may be quite ad hoc and unsatisfactory, and it will probably involve a good deal of costly engineering trial and error\". Following this argument, the approach we have chosen is a logical one, but without forgetting cognitive aspects. More concretely, our analysis will be carried out from two main points:\n- first, we will consider uncertainty calculi as inference mechanisms defining logical entailment relationships. Therefore, correspondences (or communications) between different uncertainty calculi will be analyzed as mappings between different entailment systems.\n- and second, we will use finite truth-functional multiple valued logics (MY-logics, for short) as uncertainty calculi, as long as this is a simplified view of the uncertainty reasoning model that our laboratory has been working with in developing applications with the MILORD system [ Sierra, 1989], mainly in the medical diagnosis field.\nThe paper is structured in the following way. After this introductory section, in section two there is a general overview on entailment systems and their inference preserving mappings. In section three, we describe the class of finite truth-functional multiple-valued logics we will use as uncertainty calculi for different tasks. Section four is devoted to a detailed study of inference-preserving mappings for our uncertainty calculi, and finally, an\ninteractive algorithm for defining such inference preserving correspondences is proposed. This algorithm has been thought as a mechanism to support human experts when developing applications.\n2 ENTAILMENT SYSTEMS\nInference engines of many rule-based ES can be considered as implementations of proof calculi (from a set of axioms and a set of inference rules) of some underlying Logical Systems. As it is known, every logical system should have a syntactical and semantical formalizations. The theories of Institutions and Entailments Systems allow to formalize an intuitive notion of logical system from the model and proof theoretic approach point of view respectively ([Goguen and Burstall, 1983], [Meseguer, 1989], [Harper et a!., 1989]). In this way the Institution approach takes the satisfaction relation between models and sentences as basic whereas the Entailment System approach takes the entailment relation.\nThe communication problem among tasks or modules has been introduced as the problem of defining inference preserving mappings. Therefore, in this paper we focus our attention in the entailment systems approach rather than in the Institutions one, and thus, we are mainly interested in correspondences between different entailment systems.\nAlthough a categorical definition of Entailment Systems has been given [Meseguer, 1989], for our purposes an Entailment System will consist of a pair (L, /-), where L is a language (a set of sentences, usually built from a set of connectives and a signature that provides a set of sorted symbols), and/- is an entailment relation on zLxL, i.e. a relation satisfying the following properties:\nEl.- reflexivity: for any sentence E, {E}I- E E2.- mono tonicity: if r 1- E and r \ufffd r' then r\u2022 1- E E3.- transitivity: if r 1- Ei, for iE I and\nru{Ei, iE I} 1- E then r 1- E,\nwhere r and r' are sets of sentences, and E and Ei are sentences of L.\nIn [Meseguer, 1989] the following notion of a map of entailment systems has been proposed.\nDefinition 2.1. (map of entailment systems) Given the entailment systems (L, /-) and (L', /-' ), a mapping H:L-->L' is said to be a map of entailment systems if the following condition If T/- E then H(T) /-' H(E), holds for all set of sentences rand for all sentence E of L. The map His said to be conservative if r /- E whenever H(T) /-' H(E). A map between entailment systems allows to preserve inference in a strict sense. In partiCular, when the map is conservative one entailment system is an extension of the other one. However these strong conditions sometimes can be weakened in the uncertainty reasoning framework. From the point of view of the correspondence problem between different tasks with different uncertainty calculi, when a task imports information from another task, it\nCombining Multiple-valued Logics in a Modular Expert Systems\ndoesn't need always to deduce exactly the s _ ame conclusions as the previous one could deduce. Sometimes it only needs that its conclusions be coherent with th\n_ e\ndeduction system of the other task . In other words, It allows its reasoning to be less accurate when dealing with the other task information, but not incorrect in any case. To model this last situation a definition weaker than the conservative one is introduced below. We will call it weak conservative.\nDefinition 2.2. (weak con servative map). Given entailment systems (L, /-) and (L', /- ') a map H from L to L ' is called weak conservative if the following condition holds:\nIf H(r) J- ' E' then there exists a sentence E of L such that Tj- E and H(E) f-' E'\nfor all set of sentences r of L and all sentence E' of L '. If H is also a map of entailment systems we call it weak conservative map .\n3 A CLASS OF MULTIPLE-VALUED LOGICS FOR THE UNCERTAINTY\nMANA GEMENT IN RULE-BASED\nEXPERT SYSTEMS\nTaking the uncertainty management of MILORD as a reference, in this section we consider a restricted type of MV -logics which are expressive enough to model the uncertainty reasoning used in many rule-based systems. The uncertainty management approach used in MILORD has the following characteristics [Godo et al., 1989]: 1) The expert defines a set of linguistic terms expressing uncertainty corresponding to the verbal scale he will use to weight facts and rules. 2) The set of linguistic terms is supposed to be ordered, at least partially, according to the amount of uncertainty they express, being always the booleans 'true' and 'false' their maximum and minimum elements respectively. 3) The combination and propagation of uncertainty is performed by operators defined over the set of linguistic terms, basically conjunction, disjunction, negation and detachment operators. A method for the elicitation of these operators from the expert has been proposed in {Lopez de Mantaras et al., 90). The main difference of this approach with respect to other ones is that no underlying numerical representation of the linguistic terms is required. Linguistic terms are treated as mere labels. The only a priori requirement is that these labels should represent an ordered set of expressions about uncertainty. For each logical connective, a set of desirable properties of the corresponding operator is listed. Many of thes\ufffd propertie\ufffd are a finite counterpart of those of the uncertamty calcuh based on t-norms and t-conorms, which are in turn the basis of the usual [ 0,1)-valued systems underlying Fuzzy Sets Theory [Alsina et al., 1983]. The listed properties act as constraints on the set of possible solutions. In this way, all operators fulfilling them are gener\n_ ated: This\napproach has been implemented by formulating 1t as a constraint satisfaction problem [Godo and Meseguer, 1991]. Finally, the expert may select the one he thinks\nfits better his own way of uncertainty management in the current task.\nThese characteristics make clear that the logics associated to the different MILORD uncertainty calculi are a class of finite multiple-valued logics, taking the linguistic terms as truth-values and the operators as the interpretations of the logical connectives. In other words, each linguistic term set, together with its set of operators, defines a truth values algebra and therefore a corresponding multiple valued logic. In (Agusti-Cullell et al., 1990), MV -logics have been analyzed from the semantic point of view and formalized as families of Institutions.\nFollowing that line, the main characteristics of our MV logics for uncertainty management we are concerned with are given by:\n- An algebra of truth-values: a finite algebra A = <An, 0, 1, N, T, l> such that:\n1) The set of truth-values An is a chain2 represented by 0 = ao < a1 < ... < an-! = 1, where 0 and 1 are the booleans False and True respectively. 2) The negation operator N is an unary operation such that the following properties hold:\nN1: if a < b then N(a) > N(b) N2: N2 = Id.\n3) The \"and\" operation T is any binary operation such that the following properties hold:\nTl: T{a,b) = T(b,a) T2: T(a,T(b,c)) = T(T(a,b),c) T3: T(O,a) = 0 T4: T(1,a) = a TS: if a :<>b then T(a,c) i> T{b,c) for all c.\nNote that in the unit interval these properties define t-norms functions if we add the condition of continuity. 4) The implication operator I is defined by residuation with respect to T,. I(a,b) = Max{ c E An such that T(a,c) :5 b} i.e., I is the finite counterpart of an R-implication generated by the \"and\" operator T [Trillas and Valverde, 1985]. - A set of Connectives: \"not\"(--,), \"and\"(&) and \"implication\"(-->) - A set of Sentences: sentences are pairs of classical-like propositional sentences and intervals of truth-values. The classical like-propositional sentences are built from a set of atomic symbols and the above set of connectives. However the sentences we will consider through this case study are only of the following types:\n(pJ, V), (P! & P2 & ... & Pn , V), (PI & P2 & \u00b7\u00b7\u00b7 & Pn --> q, V),\nwhere pJ, ... , Pn are literals (atoms or negations of atoms), q is an atomic sentence and V is a subset of truth values. For each truth-values algebra A, LA will stand for"}, {"heading": "2 Usually the set of truth-values An stands for a totally ordered set of linguistic terms that the expert uses to express uncertainty, but", "text": "nothing changes if it is only partially ordered.\n19\n20 Agusti-Cullell, Esteva, Garcia, God6, and Sierra\nthe set of sentences with intervals of truth-values belonging to A -Models : are defined by valuations, i.e. mappings p from to the firsts components of sentences to An provided that:\np(-,p) = N( p(p) ) P(Pl & pz) = T( P(Pl), P(P2) ) p(p --> q) = I(p(p), p(q))\n-Satisfaction Relation: between models and sentences is defined by: Mp I= (p, V) if, and only if p(p) E V, where Mp stands for the model \ufffde\ufffdined by a valuation p. - Entailment Relation: the rmmmal one generated by\n1) the following set of axioms: (A-1) ((p1 &pz)&p3 --> P1&(pz&p3), 1) (A-2) (p1 &(pz&p3) --> (p1 &P2)&p3, 1) (A-3) (pl&pz-->pz&pl, 1) (A-4) ( -,-,p-->p, 1) 2) the following inference rules, which are sound with respect to the satisfaction relation (Agusti-Cullell et a!., 1990):\n(RI-1) WEAKENING: 1, (p, V) I- (p, V'), where V c;;;; V' and 1 is a set of sentences, (RI-2) NOT-introduction: (p, V) 1- (-,p, N(V)), (RI-3) AND-introduction: (Pl\u00b7 Vl), (P2, Vz) 1- (Pl & pz, T(V1, Vz)), (RI-4) MODUS PONENS: (p, V1), (p-->q, Vz) 1- (q, MP(V1, Vz)), being {0, if a and b are inconsistent\nMP(a,b) = [a,l], if b = 1 T(a,b), otherwise\nwhere a and b are said to be inconsistent if there exists no c such that I(a,c) = b.\nNotice that these inference rules are the only ones that an inference engine would need when working on sets of sentences of the above specified types, very common in fact in rule-based ES. However, instead of the rule RI-4 and for the sake of simplicity, we will consider the following inference rule:\n(RI-4') MODIFIED MODUS PONENS: (p, V1), (p-->q, Vz) I- (q, T(V1, Vz)).\nAlthough it is correct for instance in the usual case of upper intervals of truth-valu\ufffds, this inference rule is \ufffdot logically sound in general with. respect to the sem\ufffdn\ufffd1cs (satisfaction relation) above defmed. Nevertheless, It IS a well known fact that, from the cognitive point of view, detachment operators share the same properties required to conjunction operators [ Bonissone, 1987]. These arguments, together with self-evident simplicity reasons, have lead us to adopt the inference rule RI -4'. Therefore, from now on, given a truth-values algebra A we will denote by MVLA the multiple-valued logic defined above, and by (LA, 1-A) its associated entailment system. The language of this entailment system is LA and its entailment relation is the minimal one determined by axioms A-1, A-2, A-3 and A-4, and by inference rules RI1, RI-2, RI-3 and RI-4'.\nOn the other hand, the disjunction operator needed for parallel combination can be obtained from the negation and conjunction operators using the De Morgan laws. For these reasons, and for deductive purposes, only the ordered set of truth-values (linguistic terms) and the conjunction and negation operators should be specified in the truth values algebra definitions. Therefore, from now on, truth values algebras will be represented by <A, T,N >, omitting the booleans 0 and 1, as long as they belong to all algebras.\n4 INFERENCE P RESERVING MAPS BETWEEN MV -LOGICS\nThe aim of this section is to analyze the problem of preserving inference in communicating modules, assuming that each one has its own finite MY -logic as uncertainty calculus. In section two, maps and weak conservative maps of entailment systems have been introduced in order to model inference preserving correspondences. In the first subsection of this section, it is shown that morphisms and quasi-morphisms of truth values algebras generate maps and weak conservative maps respectively of the corresponding entailment systems. In the second and third subsection, morphisms and quasi morphisms of truth-values algebras are studied. Finally, in the fourth subsection an interactive algorithm to define such mappings to assist human experts when developing applications, is proposed.\n4.1 WEAK CONSERVATIVE MAPS\nNow we consider the problem of finding inference preserving correspondences between two of these logics MVLA and MVLB, where A= <An, T, N> and B = <Bm, T', N'> are their corresponding truth-values algebras. As !t has been noted in section 2, the mappings between therr entailment systems (LA, I-A) and (LB,I-B) we are mainly interested in are the weak conservative ones. In order to give a sufficient condition for a mapping f: An --> B m to generate a weak conservative mapping between the entailment systems of MVLA and MVLB, we need some new definitions and results:\nGiven a truth-values algebra A = <A11,T,N>, we consider the set of intervals of A11, I(An) ={[a,b]l a,b E An} where [a,b] = {x 1 x E A n. a \ufffd x \ufffd b }. We can define the following order relation in I(An):\nI]\ufffd 12 if a\ufffd b for all a E /]and for all b E f2.\nLet's consider now the following operations on I(An) 1) N*([a,b]) = [N(b), N(a)] 2) T*([at.b1J,[az,bzJ) = [ T(apz), T(bt.bz)J It is easy to check that N* is a negation mapping and T* fulfils T1 + TS. Moreover, identifying every element a of An with the interval [a,a] of I(An), <An, T, N> is a subalgebra of d(An).T*,N*>, that is, we have the following proposition.\nCombining Multiple-valued Logics in a Modular Expert Systems 21\nProposition 4.1. Any truth-value algebra <An. T, N> can be extended to an algebra <I(An). T*, N* > of the same type that has <An, T, N> as a subalgebra.\nIt is worth noticing that (I(An), \ufffd*) is only a partial ordered set with minimum 0 = [0,0] and maximum 1 = [1,1], and N* and T* are univocally defined by N and T. Next we give a small example of an algebra of intervals generated by a truth-values algebra of four elements\nExample. Let A = {0 < a < b < 1} the chain of four elements. The set of intervals of A is I( A)= {[O,a], [O,b], [0,1], [a,b], [a,l], [b,l], [0,0], [a,a], [b,b], [1,1] }. Identifying every interval [x,x] with the element x of A, the order relation on A and I( A) can be represented by the graphs of figure 1.\nA\nr r r \u2022\n0\nFigure 1: Graphs of the order relation of A and I(A).\nNext we introduce what we call a quasi-morphism of algebras as a weakened notion of morphism, allowing to map values of an algebra into intervals of the other. This tries to capture the possibility of being imprecise when renaming truth-values from a MV -logic to another.\nDefinition 4.1. Given two truth-values algebras A = <An, Tj, Nj> and B = <Bm, T2, N2>. a mapping\nf: An --> I(Bm) is a quasi-morphism from A to B if the following conditions hold:\nl) f is non-decreasing, i.e. if a :5 b , then f(a) f> f(b), 2) f(O) = 0, 3) f( N J(x) ) = N2* ( f(x) ), 4) f( TJ(x,y) ) c T2*(/(x)f(y)),\nIt is clear from this definition that : (i) algebra morphisms are a particular case of algebra quasi-morphisms, identifying every element b of B with the interval [b,b]. Moreover, a quasi-morphism f is a morphism if, and only if, f(Am) c Bm.\n(ii) algebra morphisms from <An, T1, N 1> to <l(Bm), T1 *, Nz*> are also quasi-morphisms.\nTheorem 4.2. Let MVLA and MVLB be the multiple valued logics defined on the truth-values algebras A =\n<An. T, N> and B = <Bm. T', N'> respectively. Then every quasi-morphism of A to B generates a weak conservative mapping between the entailment systems of MVLA and MVLs.\nProof. Let f: An --> I(Bm) be a quasi-morphism between A and B, and let r = {(pr, Vl), ... , (pn, Vn)} a set of sentences of MVLA. We will denote by Hf the translation function from MVLA to MVLa defined by\nHf((s, V)) = (s,f(V)).Obviously Hf translates axioms of MVLA into axioms of MVLa. Suppose that in MVLa a sentence E' = (q, V') can be derived from Hf(r) = {(Pl. f(Vl)), ... , (pn, f(Vn))} and axioms of MVLa by applying a sequence of RI-1, RI-2, RI-3 and RI-4' inference rules and let's denote by g' the composition of their corresponding inference functions (only functions N' and T' will appear). Then it must be the case that g'(f(V 1), ... , f(V n)) c V'. We have to show that there exists a sentence E of MVLA such that it can be derived from r 1-A E and thatHf(E) 1-B E'. Let E be the sentence (q, g(Vr, ... , Vn)), where g is the function obtained from g' replacing the occurrences of N' and T' by N and T. Then it is clear that rI-A E holds and, because f is a quasi-morphism, we have f(g(Vr, ... , Vn)) c g'(f(Vl ), ... , f(Vn)) c V', so Hf(E) 1-B E' also holds and the theorem have been proved. \u2022\nIn the particular case of algebra morphisms, the following proposition shows that they also generate maps of entailment systems.\nProposition 4.3. Let MVLA and MVLB be the multiple-valued logics defined on the truth-values algebras A = <An, T, N > and B = <Bm, T', N'> respectively. Then every order-preserving morphism of A to B generates a map between the entailment systems of MVLA and MVLB.\n4.2 MORPHISMS OF TRUTH-VALUES ALGEBRAS\nIn this subsection we tum our attention to the problem of relating truth-values algebras by means of order-preserving mappings which are algebra morphisms, and some necessary and/or sufficient conditions for their existence are given. Although there can exist algebra morphisms which are not order-preserving, for cognitive and logical reasons it seems reasonable to require this condition. Therefore, as long as we are only interested in order preserving mappings, from now on, and for the sake of simplicity, we will use the term morphisms as an abbreviation of order-preserving morphism with f(O) = 0.\nWe begin with some well-known results on negation operators. For each chain A0, there exists only one negation N and it is defined by N(ai) = an-i-1\u00b7 Then every chain A0 can be partitioned in three subsets:\n- the set of negative elements Nn ={xI x < N(x)} - the set of fixed elements :Fn = {xI x = N(x) } - the set of positive elements Pn ={xI x > N(x) }\n22 Agusti-Cullell, Esteva, Garda, God6, and Sierra\nbeing these subsets :F' n= { ak }, N n = { ai I kk }, Pn = { ai I i>k }, if n =2k+1, and :F'n= 0, Nn = { ai I kk} and Pn = { ai I i\ufffdk }, if n=2k. The following equalities also hold: N(Nn) = Pn, N(:F'n) = :F'n and N(Pn) = Nn.\nProposition 4.4. Given two chains An and Bm. a mapping f: An --> Bm is a morphism with respect to the negation operator if, and only if, the following conditions hold:\n1.f;Nn is an order preserving mapping from Nn to Nmu1'm such that f(O) = 0 2.f(1'n) = F'm 3.1f ai belongs to Pn.J(ai) = N'(j(an-i-1 )), where N ' is the negation associated to Bm.\nFrom this proposition it is easy to show that: - If n is odd then, in order to be f a morphism, m must\nbe also odd, as long as f(:F' n) = :F' m # 0. - In the case of being n even or both n and m odd,\nevery mapping ft: Nn --> Nmu:F'm defines a negation morphism/in the following way: {f1 (ai), if ai E N n\nf(ai)= br, if ar E :F' n and :F' m = {br} N'(f1 (N(ai))), if ai E Pn\nand reciprocally, every negation morphism/ is defined by the mapping f1 = fiNn\u00b7 We follow now with two propositions about how \"and\" operations can defined in order to have algebra morphisms.\nProposition 4.5. Let < An, N, T > be a truth-values algebra and let B m a chain containing An such that the negation N' associated to B fulfils N'jAn = N, i.e. if ai = bj then N(ai) = bm-j-1\u00b7 Then there exists at least an \"and\" operation T' on Bm such that <An. N, T> is a subalgebra of< Bm. N ', T' >.\nProof It can be easily checked that the mapping T' defined as:\n, {T(p-,q-): if p # 1 and q # 1 T (p,q) = p, If q = 1\nq, i f p = 1 where p- =max{ x E An I x :S p }, is an \"and\" operation on Bm, and that it also verifies T'IAnxAn = T. \u2022\nProposition 4.6. Let <An. T, N> be a truth-values algebra and letf: An --> Bm be a negation morphism. Then there exists an \"and\" operation T' on B m such that f is an algebra morphism if, and only if, f is compatible with T, that is, for all a,b,c,d E An,f(a) =f (b) andf(c) = f(d) imply f(T (a,c)) = f(T(b,d)). Proof. Obviously, if f is an algebra morphism it is compatible with T. On the other hand, if f is compatible with T, the relation =f defined as a =f b ifbEF f(a) = f(b) is a congruence relation on An. Let < Anl=f , Tf, Nf> be the quotient algebra. Therefore, identifying An/=f with\nf(An). f will be a morphism from <An, T, N> to < f(An), Tf, Nf>. By proposition 4.5 there exists T' on Bm such that < f(An). Tf, Nf> is a subalgebra of <Bm, T', N'>, where N' is the negation associated to Bm. \u2022\nNow, taking into account the above results, it is interesting to point out some considerations about the problem of algebra morphism generation. In the following A will stand for a truth-values algebra <An, T, N> and Bm for a chain of m elements.\n1) If n is odd and m even, there is no possible morphism between A and B, being B any truth-values algebra defined on Bm. Then, this case will not be considered any more.\n2) In order to define a morphism f: An --> Bm with respect to the negation operator we only need to take any mapping fi: Nn --> Nmu:F'm with f1(0) = 0 and to extend it in the way above indicated.\n3) The generation of possible operations T' on Bm. together with renaming mappings f from An to Bm such that f: <An. T, N> --> <Bm, T', N'> are morphisms, is a process that can be automated without difficulties. The problem reduces to:\n- first, to generate all mappings f from all order preserving mappings f1: Nn --> Nmu:F'm with f1(0) = 0, - second, to check which ones are compatible with T, - and third, to generate all algebras Bm containing f(Am) as subalgebra. This method will provide us with a family of suitable algebras <Bm. T', N'> for each mapping f1.\n4) Nevertheless, in general, it can be the case that the set of possible solutions would be empty. As an example, consider the algebra <A.4,T,N>, where A4 ={O<al<az<l}, and the \"and\" operation T is the one given in figure 2.\nIt is easy to check that there exists no renaming mapping from A4 to B3 such that a morphism between <A4,T,N> and <B3, T', N'> can be defined for any \"and\" operation T'. Let B3 = {O<b<l}, and thus N '= {0}, :F''= {b}, and P'= {1}. It is clear that if f1:{0,a1} --> {O,b} is order preserving and f1 (0) = 0, then there are only two possibilities:\n1) f1(a1) = 0, and then the mapping f: A4--> B3 is defined by f(O) = f(a1) and f(az) = f(1) = 1, but f is not compatible with T, because f(az) = f(l) but f(T(az,az)) = 0 * 1 = f(T(az, 1));\nCombining Multiple-valued Logics in a Modular Expert Systems 23\n2) f1(a) = b, and then the mapping f: A4 --> B3 is defined by f(O) = 0, f(al) = f(az) = b, and f(1) = 1, but again f is not compatible with T, because f(al) = f(az) but f(T(a1,a1)) = 0 * b = f(T(az,az)).\n4 . 3 QUASI-MORPHISMS OF TRUTH-VALUES ALGEBRAS\nAs we have seen in last section, given any truth-values algebras A and B, it is not always possible to find a morphism between them. However, this is not the case of quasi-morphisms because of the additional freedom of mapping (or renaming) a truth-value of A to an interval of B. This point is proved in the following proposition.\nProposition 4.7: Let A = <An. TJ, NJ> and B = <Bm. Tz, Nz> be two truth-values algebras. Let C = <Cko T', N'> be an algebra that can be imbedded in both A and B, and let h1 and hz their corresponding monomorphisms. Then there exists at least one quasi-morphism f from A to B such that f(hz(c)) = hz(c), for a/1 c E Ck.\nProof. First of all, notice that given A and B there always exists the algebra C, because at least the algebra of booleans satisfies the required condition for any pair of truth-values algebras. So, let h1 and hz be the corresponding monomorphisms from C to A and B respectively, and consider the mapping f: An --> l(Bm) defined by: f(x) = [ h2(Cx -), h2(Cx +) l where ex-= max{ c of Ck 1 hl(c)$x} and ex+= min { c of Ck 1 h1(c) \ufffd x }. Straightforward computation shows that the required properties for f to be a quasi-morphism hold.\u2022\nAs an example, let's consider the algebras A = < As, T, N> and B = <B7, T', N'>, where the \"and\" operations T and T' are given in figure 3 respectively.\n..lJ 0 a1 a2 a3 1 0 0 0 0 0 0\na1 0 0 a! a! a1 az 0 a1 az az az a3 0 a! az a3 a3 1 0 a! az a3 1\n.LJ 0 bl bz b3 b4 bs 1 0 0 0 0 0 0 0 0\nbr 0 bl bj bj bj bl bj bz 0 bj bz bz bz bz bz b3 0 bl bz b3 b3 b3 b3 b4 0 bj bz b3 b4 b4 b4 bs 0 bj bz b3 b4 bs bs 1 0 br bz b3 b4 bs 1\nFigure 3. \"And\" operations in chains of five and seven elements\nIt can be checked that there is no morphism from A to B. On the other hand C = <C3, T'', N\">, being C3={0<b<l} and T\"(x,y) = min(x,y), is the maximal subalgebra that can be imbedded into A and B, and the monomorphisms h 1 and h2 are defined by:\nh1( 0) = o hz(O) = o h1(b)=a2 hz(b)=b3 h1(1) = 1 hz<O = 1\nrespectively. The above proposition 4.7 assures that the mapping f: As-> I(B7) defined by:\nf(O) =0 f(ai) = [O,b3] f(az) = b3 f(a3) = [b3,l] f(l) = 1\nis a quasi-morphism from A to B.\n4.4 PRAGMATICS OF INFERENCE PRESERVING MAPPINGS\nIn the previous sections we have seen that when two modules, that use different multiple-valued logical languages, need to communicate, an inference preserving mapping between their logics has to be defined. The process of defining these mappings could be supported by an interactive algorithm based on the notion of morphism and quasi-morphism between truth-values algebras. This process could be as follows: Initially the expert determines a MV -logic for each module, giving the set of truth-values and the \"and\" truth table, and proposes as many as needed renaming functions between different truth-values sets. Then, for each pair of modules having different MV -logics, the interactive algorithm will take their truth-values algebras and the renaming between them and check if the initial renaming is an algebra quasi-morphism. If not, the algorithm presents to the expert the set of possible modifications of the renaming function, each one being a morphism or a quasi-morphism. The expert may then select the one that fits better his aims. If no selection is made, possible modifications of the \"and\" truth-table are suggested, keeping the initial renaming function. Finally, if there has not been any solution, possible modifications of both renaming and truth-table are suggested .\nNext, we give an scheme of the algorithm in a Pascal-like style. The notation used is the one of the previous sections.\nQuasi-morphism _generator(( An. T) (Bm. T'), f)= ; An and Bm are the truth-values sets, ; T and T' are the \"and\" connectives ; and f is a renaming from An to I(Bm) ; 1: Renaming checking if quasi-morphism?(A, B, f)\n; A= (An. T) and B = (Bm. T') ; This predicate is implicitly defined\n24 Agusti-Cullell, Esteva, Garda, God6, and Sierra\n; in the previous sections. Then Return (A, B, f)\n; If the renaming given by the expert ; determines a quasi-morphism we return ; it.\n;2: Renaming generation R = {f: An-> I(Bm) I quasi-morphism?(A, B, f)}\n; R is the set of all acceptable\nprint(R)\n; renaming functions ; The way they are computed is described ; below.\nif select(r) ; r E R is selected by the expert\nthen return (A, B, r) ;3: \"And\" truth-tables generation\nC = { T' I T' is an \"and\" operation on Bm and quasi-morphism?(A, (Bm, T'), f) } print( C) if select( c) ; c E C is selected by the expert then return (A, (Bm, c), f)\n;4: Renaming and \"and\" truth-table generation RC = { (f, T') If: An-> I(Bm) and quasi-morphism?(A, (Bm, T'), f) } print(RC) if select((x, y))\n; (x,y) E RC is selected by the expert then return (A, (Bm, y), x) else return nil\nIn the following a constructive description of predicates and functions used in the algorithm is given.\na) Renaming checking: It is only a checking predicate. It checks if a given function (renaming) is a quasi-morphism from A to B, where A and B are two given algebras.\nb) Renaming generation: Let A and B be two truth values algebras. Renaming generation is a predicate that returns all possible quasi-morphisms from the truth-values algebra A to the interval algebra I(B). The method to find these quasi-morphisms is the following:\n1. Define the operations T'* and N'* on I(B). 2. Define mappings f 1 : N u :f' ---- > N'*u:f''* such that f 1 (0) = 0, f1 (:f) = :f'' * and x $ y implies f1 (x) I> f1 (y). 3. For every f1, define the negation morphism f by, {f1(X), if X E N u :f' f(x) = N'*(f1(N(x))), if x E :P 4 Check if f is a quasi-morphism. Remarks: The solutions, if any, contain as a particular case all the possible morphisms from A to B. By proposition 4.7, for every pair of algebras A and B, the renaming generation set (A,B) is not empty.\nc) \"And\" truth-table generation: Let A be a truth value algebra, let Bm be a chain of m elements and let f be a renaming function from An to I(Bm). \"And\" truth table generation is a predicate that returns \"and\" operations\non Bm such that f be a quasi-morphism. The method for finding \"and\" operations is the following:\n1. If f is not a negation morphism, it returns the empty set. 2. Find all \"and\" operations T' on Bm. 3. Check if f is a quasi-morphism. Remarks: A general algorithm for finding truth-values algebras over a partially ordered set of n elements is given in [Godo and Meseguer, 1991). d) Renaming and truth-table generation: Let A be a truth-value algebra and let Bm be a chain of m elements. Renaming and truth-table generation is a function that, given An and Bm, returns pairs (T' ,f), where T' is an \"and\" operation on Bm and f is a quasi-morphism from A to <I(Bm),T'*,N'*>. In this case, the method for finding pairs (T', f) is the following one:\n1 . Define N'* on I(Bm). 2. Define all the possible functions f1 as in the case of renaming generation. 3. For every f1, define the negation morphisms as in the case of renaming generation. 4. Find all \"and\" operations T' on Bm. 5. Check if f is a quasi-morphism.\nFinal remarks: 1.- All these methods can be automated. 2.- Some of the functions can return the empty set. (see examples of subsections 4.2 and 4.3) 3.- An order of preference on the sets R, C and RC should be given. There are many possibilities to do this. For example, several distances with respect to the initial renaming and truth-table operation can be defined on the above sets to obtain preference orderings. It seems reasonable that in all cases algebra morphisms should be preferred to algebra quasi-morphisms. 4.- The complexity of the algorithm is exponential in the number of truth-values. However, two factors make acceptable the execution time of the algorithm: (i) the number of different uncertainty linguistic terms used by an expert is usually not greater then nine [Miller, 1967), and (ii) the strong conditions required to \"and\" operations (see section 3) restrict the combinatorial explosion in the generation of such operations ..\n5 CONCLUSIONS AND FUTURE\nWORK\nIn this paper, the problem of communicating tasks with different uncertainty calculi has been introduced in a very general framework. This problem arises when dealing with large knowledge-based systems in which a better modelling of reasoning for different tasks requires working together with different uncertainty reasoning systems In the framework of rule-based expert systems, this problem has been analyzed in detail in the particular case in which different MY-logics are used to model the management of uncertainty in different tasks. Necessary and/or sufficient conditions for the correspondence mappings between them to be inference preserving have been given. Also an interactive algorithm to define such mappings has been\nCombining Multiple-valued Logics in a Modular Expert Systems 25\nproposed to assist the human expert in relating tasks or modules by inference preserving correspondences. However the general problem of communicating different uncertainty reasoning systems is very complex, and further research is needed as much in the field of distributed knowledge based systems as in the case of considering more complex models of uncertainty reasoning systems.\nAcknowledgements\nThis research has been partially supported by the CICYT id.880j382 project SPES, and by the ESPRIT-II Basic Research Action DRUMS.\nReferences\nAgusti-Cullell J., Esteva F., Garcia P., Godo L.(1990) 'Formalizing Multiple-valuated Logics as Institutions' .Short version in Proceedings of Third International IPMU Conference, Paris, pp.355-357. Full version will appear in Lecture Notes on Computer Science in June 1991. Alsina C., Trillas E., Valverde L.(1983)' On some logical connectives for Fuzzy Set Theory'. Journal of Mathematical Analysis and Applications, 93, pp. 15- 26. Bonissone P.P. (1987) 'Summarizing and propagating uncertain information by triangular norms' International Journal of aproximate reasoning 1 ( 1 ). pp. 71-101. Godo L., Lopez de Mantaras R., Sierra C., Verdaguer A. (1989) 'MILORD:The architecture and management of linguistically expressed uncertainty'. Int. Journal of Intellieent System Vol. 4 nQ 4, pp. 471-501.\nGodo L., Meseguer P. (1991) 'A constraint-based approach to generate finite truth-values algebras'. Research Report I IIA-CEAB 9119. Goguen J., Burstall R.M., (1983) 'In t r o d u c ing Institutions' . Proc. Workshop on Logics of Programs, Carnegie-Mellon University. Springer LNCS 164, pp. 221-256. Harper R., Sannella D., Tarleckii A. (1989) 'Structure and Representation in LF' Proc 4th IEEE Symposium on Logic of Computer Science. Lopez de Mantaras R. (1990) 'Approximate Reasoning Models' EIJJjs Horwood Ltd, Miller G.A. (1967) 'The Magical Number Seven Plus or Minus Two: Some Limits on our Capacity for Processing Information' in The Psychology of Communication, Penguin Books Inc. Meseguer J. (1989) 'General Logics'. In H.D. Ebbinghaus el al. (eds) Proc Logic Colloquium '87. North - Holland. Sierra C. (1989) 'MILORD: Arquitectura multi-nivell per a sistemes experts en classificaci6\" Ph. D. Universitat Politecnica de Catalunya . Barcelona. Trillas E., Valverde L. (1985) 'On mode and implication in approximate reasoning ' in Gupta et a!. (Eds.)\nApproximate reasoning in expert systems. pp. 157- 166. North-Holland. Verdaguer, A. (1989) 'PNEUMON-IA; desenvolupament i validaci6 d'un sistema expert d'ajuda a/ diagnostic medic' Ph. D. Thesis. Universitat Autonoma de Barcelona"}], "references": [{"title": "Formalizing Multiple-valuated Logics as Institutions' .Short version in Proceedings", "author": ["J. Agusti-Cullell", "F. Esteva", "P. Garcia", "L.(1990 Godo"], "venue": null, "citeRegEx": "Agusti.Cullell et al\\.,? \\Q1990\\E", "shortCiteRegEx": "Agusti.Cullell et al\\.", "year": 1990}, {"title": "On some logical connectives for Fuzzy Set Theory", "author": ["C. Alsina", "E. Trillas", "L.(1983 Valverde"], "venue": "Notes on Computer Science", "citeRegEx": "Alsina et al\\.,? \\Q1991\\E", "shortCiteRegEx": "Alsina et al\\.", "year": 1991}, {"title": "Summarizing and propagating uncertain information by triangular norms' International Journal of aproximate reasoning", "author": ["P.P. Bonissone"], "venue": null, "citeRegEx": "26", "shortCiteRegEx": "26", "year": 1987}, {"title": "MILORD:The architecture and management of linguistically expressed uncertainty", "author": ["L. Godo", "R. Lopez de Mantaras", "C. Sierra", "A. Verdaguer"], "venue": "Int. Journal of Intellieent System Vol. 4 nQ", "citeRegEx": "Godo et al\\.,? \\Q1989\\E", "shortCiteRegEx": "Godo et al\\.", "year": 1989}, {"title": "The Magical Number Seven Plus or Minus Two: Some Limits on our Capacity for Processing Information' in The Psychology", "author": ["Models' EIJJjs Horwood Ltd", "Miller G.A"], "venue": null, "citeRegEx": "Ltd and G.A.,? \\Q1967\\E", "shortCiteRegEx": "Ltd and G.A.", "year": 1967}, {"title": "General Logics", "author": ["J. Meseguer"], "venue": "In H.D. Ebbinghaus", "citeRegEx": "Meseguer,? \\Q1989\\E", "shortCiteRegEx": "Meseguer", "year": 1989}, {"title": "MILORD: Arquitectura multi-nivell per a sistemes experts en classificaci6\" Ph. D", "author": ["C. Holland. Sierra"], "venue": null, "citeRegEx": "Sierra,? \\Q1989\\E", "shortCiteRegEx": "Sierra", "year": 1989}, {"title": "On mode and implication in approximate reasoning ' in Gupta et a", "author": ["L. Valverde"], "venue": null, "citeRegEx": "Trillas and Valverde,? \\Q1985\\E", "shortCiteRegEx": "Trillas and Valverde", "year": 1985}, {"title": "PNEUMON-IA; desenvolupament i validaci6 d'un sistema expert d'ajuda a/ diagnostic", "author": ["A. Verdaguer"], "venue": "medic' Ph. D. Thesis. Universitat Autonoma de Barcelona", "citeRegEx": "Verdaguer,? \\Q1989\\E", "shortCiteRegEx": "Verdaguer", "year": 1989}], "referenceMentions": [{"referenceID": 8, "context": "The need to preserve sometimes inferences through the communication among tasks can be made clearer by means of another little example from an existing expert system, PNEUMON-IAl [Verdaguer, 1989], for the diagnosis of", "startOffset": 179, "endOffset": 196}, {"referenceID": 6, "context": "1 PNEUMON-IA is an application developped in the modular rule\u00ad based expert system shell MILORD [Sierra, 1989].", "startOffset": 96, "endOffset": 110}, {"referenceID": 5, "context": "In [Meseguer, 1989],", "startOffset": 3, "endOffset": 19}, {"referenceID": 6, "context": "with in developing applications with the MILORD system [ Sierra, 1989], mainly in the medical diagnosis field.", "startOffset": 55, "endOffset": 70}, {"referenceID": 5, "context": "model and proof theoretic approach point of view respectively ([Goguen and Burstall, 1983], [Meseguer, 1989], [Harper et a!.", "startOffset": 92, "endOffset": 108}, {"referenceID": 5, "context": "Although a categorical definition of Entailment Systems has been given [Meseguer, 1989], for our purposes an Entailment System will consist of a pair (L, /-), where L is a language (a set of sentences, usually built from a set", "startOffset": 71, "endOffset": 87}, {"referenceID": 5, "context": "In [Meseguer, 1989] the following notion of a map of", "startOffset": 3, "endOffset": 19}, {"referenceID": 3, "context": "The uncertainty management approach used in MILORD has the following characteristics [Godo et al., 1989]: 1) The expert defines a set of linguistic terms expressing uncertainty corresponding to the verbal scale he will use to weight facts and rules.", "startOffset": 85, "endOffset": 104}, {"referenceID": 0, "context": "In (Agusti-Cullell et al., 1990), MV -logics have been analyzed from the semantic point of view and formalized as families of Institutions.", "startOffset": 3, "endOffset": 32}, {"referenceID": 7, "context": ", I is the finite counterpart of an R-implication generated by the \"and\" operator T [Trillas and Valverde, 1985].", "startOffset": 84, "endOffset": 112}], "year": 2011, "abstractText": "The way experts manage uncertainty usually changes depending on the task they are performing. This fact has lead us to consider the problem of communicating modules (task implementations) in a large and structured knowledge based system when modules have different uncertainty calculi. In this paper, the analysis of the communication problem is made assuming that (i) each uncertainty calculus is an inference mechanism defining an entailment relation, and therefore the communication is considered to be inference-preserving, and (ii) we restrict ourselves to the case which the different uncertainty calculi are given by a class of truth\u00ad functional Multiple-valued Logics.", "creator": "pdftk 1.41 - www.pdftk.com"}}}