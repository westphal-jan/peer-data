{"id": "1310.1415", "review": {"conference": "ICML", "VERSION": "v1", "DATE_OF_SUBMISSION": "4-Oct-2013", "title": "Narrowing the Gap: Random Forests In Theory and In Practice", "abstract": "despite widespread interest and practical use, the theoretical properties of random forests are still not currently well understood. in following this paper introduction we contribute to this understanding in two ways. we present a new theoretically tractable variant simulation of random regression forests and prove that our algorithm is quite consistent. we also provide an accompanying empirical evaluation, comparing against our algorithm and other theoretically tractable random forest models to solve the random forest algorithm used in practice. thus our experiments provide insight into the relative importance of different simplifications that theoreticians really have made to obtain tractable models for analysis.", "histories": [["v1", "Fri, 4 Oct 2013 22:33:35 GMT  (4536kb,D)", "http://arxiv.org/abs/1310.1415v1", "Under review by the International Conference on Machine Learning (ICML) 2014"]], "COMMENTS": "Under review by the International Conference on Machine Learning (ICML) 2014", "reviews": [], "SUBJECTS": "stat.ML cs.LG", "authors": ["misha denil", "david matheson", "nando de freitas"], "accepted": true, "id": "1310.1415"}, "pdf": {"name": "1310.1415.pdf", "metadata": {"source": "META", "title": "Narrowing the Gap: Random ForestsIn Theory and In Practice", "authors": ["Misha Denil", "David Matheson"], "emails": ["mdenil@cs.ubc.ca", "davidm@cs.ubc.ca", "nando@cs.ox.ac.uk"], "sections": [{"heading": "1. Introduction", "text": "Random forests are a type of ensemble method which makes predictions by averaging over the predictions of several independent base models. Since its introduction by Breiman (2001) the random forests framework has been extremely successful as a general purpose classification and regression method.\nDespite their widespread use, a gap remains between the theoretical understanding of random forests and their practical use. A variety of random forest algorithms have appeared in the literature, with great practical success. However, these algorithms are difficult to analyze, and the basic mathematical properties of even the original variant are still not well understood (Biau, 2012).\nPreliminary work. Under review by the International Conference on Machine Learning (ICML).\nThis state of affairs has led to a polarization between theoretical and empirical contributions to the literature. Empirically focused papers describe elaborate extensions to the basic random forest framework, adding domain specific refinements which push the state of the art in performance, but come with no guarantees (Schroff et al., 2008; Shotton et al., 2011; Montillo et al., 2011; Xiong et al., 2012; Zikic et al., 2012). In contrast, theoretical papers focus on simplifications of the standard framework where analysis is more tractable. Notable contributions in this direction are the recent papers of Biau et al. (2008) and Biau (2012).\nIn this paper we present a new variant of random regression forests with tractable theory, which relaxes two of the key simplifying assumptions from previous works. We also provide an empirical comparison between standard random forests and several models which have been analyzed by the theory community. Our algorithm achieves the closest match between theoretically tractable models and practical algorithms to date, both in terms of similarity of the algorithms and in empirical performance.\nEmpirical comparison of the theoretical models, something which has not previously appeared in the literature, provides important insight into the relative importance of the different simplifications made to the standard algorithm to enable tractable analysis."}, {"heading": "2. Related work", "text": "Random forests (Breiman, 2001) were originally conceived as a method of combining several CART (Breiman et al., 1984) style decision trees using bagging (Breiman, 1996). Their early development was influenced by the random subspace method of Ho (1998), the approach of random split selection\nar X\niv :1\n31 0.\n14 15\nv1 [\nst at\n.M L\n] 4\nO ct\nfrom Dietterich (2000) and the work of Amit & Geman (1997) on feature selection. Several of the core ideas used in random forests were also present in the early work of Kwokt & Carter (1988) on ensembles of decision trees.\nIn the years since their introduction, random forests have grown from a single algorithm to an entire framework of models (Criminisi et al., 2011), and have been applied to great effect in a wide variety of fields (Svetnik et al., 2003; Prasad et al., 2006; Cutler et al., 2007; Shotton et al., 2011; Criminisi & Shotton, 2013).\nIn spite of the extensive use of random forests in practice, the mathematical forces underlying their success are not well understood. The early theoretical work of Breiman (2004) for example, is essentially based on intuition and mathematical heuristics, and was not formalized rigorously until quite recently (Biau, 2012).\nThere are two main properties of theoretical interest associated with random forests. The first is consistency of estimators produced by the algorithm which asks (roughly) if we can guarantee convergence to an optimal estimator as the data set grows infinitely large. Beyond consistency we are also interested in rates of convergence. In this paper we focus on consistency, which, surprisingly, has not yet been established even for Breiman\u2019s original algorithm.\nTheoretical papers typically focus on stylized versions of the algorithms used in practice. An extreme example of this is the work of Genuer (2010; 2012), which studies a model of random forests in one dimension with completely random splitting. In exchange for simplification researchers acquire tractability, and the tact assumption is that theorems proved for simplified models provide insight into the properties of their more sophisticated counterparts, even if the formal connections have not been established.\nAn important milestone in the development of the theory of random forests is the work of Biau et al. (2008), which proves the consistency of several randomized ensemble classifiers. Two models studied in Biau et al. (2008) are direct simplifications of the algorithm from Breiman (2001), and two are simple randomized neighborhood averaging rules, which can be viewed as simplifications of random forests from the perspective of Lin & Jeon (2006).\nMore recently Biau (2012) has analyzed a variant of random forests originally introduced in Breiman (2004) which is quite similar to the original algorithm. The main differences between the model in Biau (2012) and that of Breiman (2001) are in how candidate split points are selected and that the former requires a sec-\nond independent data set to fit the leaf predictors.\nWhile the problem of consistency of Breiman\u2019s algorithm remains open, some special cases have proved tractable. In particular, Meinshausen (2006) has shown that a model of random forests for quantile regression is consistent and Ishwaran & Kogalur (2010) have shown the consistency of their survival forests model. Denil et al. (2013) have shown the consistency of an online version of random forests."}, {"heading": "3. Random Forests", "text": "In this section we briefly review the random forests framework. For a more comprehensive review we refer the reader to Breiman (2001) and Criminisi et al. (2011).\nRandom forests are built by combining the predictions of several trees, each of which is trained in isolation. Unlike in boosting (Schapire & Freund, 2012) where the base models are trained and combined using a sophisticated weighting scheme, typically the trees are trained independently and the predictions of the trees are combined through averaging.\nThere are three main choices to be made when constructing a random tree. These are (1) the method for splitting the leafs, (2) the type of predictor to use in each leaf, and (3) the method for injecting randomness into the trees.\nSpecifying a method for splitting leafs requires selecting the shapes of candidate splits as well as a method for evaluating the quality of each candidate. Typical choices here are to use axis aligned splits, where data are routed to sub-trees depending on whether or not they exceed a threshold value in a chosen dimension; or linear splits, where a linear combination of features are thresholded to make a decision. The threshold value in either case can be chosen randomly or by optimizing a function of the data in the leafs.\nIn order to split a leaf, a collection of candidate splits are generated and a criterion is evaluated to choose between them. A simple strategy is to choose among the candidates uniformly at random, as in the models analyzed in Biau et al. (2008). A more common approach is to choose the candidate split which optimizes a purity function over the leafs that would be created. Typical choices here are to maximize the information gain, or the Gini gain (Hastie et al., 2013).\nThe most common choice for predictors in each leaf is to use the average response over the training points which fall in that leaf. Criminisi et al. (2011) explore the use of several different leaf predictors for regression\nand other tasks, but these generalizations are beyond the scope of this paper. We consider only simple averaging predictors here.\nInjecting randomness into the tree construction can happen in many ways. The choice of which dimensions to use as split candidates at each leaf can be randomized, as well as the choice of coefficients for random combinations of features. In either case, thresholds can be chosen either randomly or by optimization over some or all of the data in the leaf.\nAnother common method for introducing randomness is to build each tree using a bootstrapped or subsampled data set. In this way, each tree in the forest is trained on slightly different data, which introduces differences between the trees."}, {"heading": "4. Algorithm", "text": "In this section we describe the workings of our random forest algorithm. Each tree in the random regression forest is constructed independently. Unlike the random forests of Breiman (2001) we do not preform bootstrapping between the different trees."}, {"heading": "4.1. Tree construction", "text": "Each node of the tree corresponds to a rectangular subset of RD, and at each step of the construction the cells associated with leafs of the tree form a partition of RD. The root of the tree corresponds to all of RD. At each step of the construction a leaf of the tree is selected for expansion.\nIn each tree we partition the data set randomly into two parts, each of which plays a different role in the tree construction. We refer to points assigned to the different parts as structure and estimation points respectively.\nStructure points are allowed to influence the shape of the tree. They are used to determine split dimensions and split points in each internal node of the tree. However, structure points are not permitted to effect the predictions made in the tree leafs.\nEstimation points play the dual role. These points are used to fit the estimators in each leaf of the tree, but have no effect on the shape of the tree partition.\nThe data are randomly partitioned in each tree by assigning each point to the structure or estimation part with equal probability. This partition is required to ensure consistency; however, there is no reason we cannot have additional parts. For instance, we could assign some points to a third, ignored part of the par-\ntition in order to fit each tree on a subset of the data. However, we found that subsampling generally hurts performance, so we do not pursue this idea further."}, {"heading": "4.2. Leaf expansion", "text": "When a leaf is selected for expansion we select, at random, min(1+Poisson(\u03bb), D) distinct candidate dimensions. We choose a split point for the leaf by searching over the candidate split points in each of the candidate dimensions.\nA key difference between our algorithm and standard random forests is how we search for split points in candidate dimensions. In a standard random forest points are projected into the candidate dimension and every possible split point is evaluated as a candidate split point. In our algorithm we restrict the range of the search by first selecting m of the structure points in the leaf and evaluating candidate split points only over the range defined by these points. Restricting the range in this way forces the trees to be (approximately) balanced, and is depicted in Figure 1.\nFor each candidate split point S we compute the reduction in squared error,\nErr(L) = 1\nNs(L) \u2211 Yj\u2208L Ij=s (Yj \u2212 Y\u0304 L)2\nI(S) = Err(A)\u2212 Err(A\u2032)\u2212 Err(A\u2032\u2032)\nwhere A is the leaf to be split, A\u2032 and A\u2032\u2032 are the two children which would be created by splitting A at S. The notation Y\u0304 A denotes the empirical mean of the structure points falling in the cell A and Ns(A) counts the number of structure points in A. The variables Ij \u2208 {e, s} are indicators which denote whether the point (Xj , Yj) is a structure or estimation point.\nThe split point is chosen as the candidate which maximizes I(S) without creating any children with fewer than kn estimation points, where n denotes the size of the training set. If no such candidate is found then expansion is stopped."}, {"heading": "4.3. Prediction", "text": "Once the forest has been trained it can be used to make predictions for new unlabeled data points. To make a prediction for a query point x, each tree independently predicts\nf jn(x) = 1\nNe(An(x)) \u2211 Yi\u2208An(x) Ii=e Yi\nand the forest averages the predictions of each tree\nf (M)n (x) = 1\nM M\u2211 j=1 f jn(x)\nHere An(x) denotes the leaf containing x and Ne(An(x)) denotes the number of estimation points it contains. Note that the predictions made by each tree depend only on the estimation points in that tree; however, since points are assigned to the structure and estimation parts independently in each tree, structure points in one tree have the opportunity to contribute to the prediction as estimation points in another tree."}, {"heading": "5. Consistency", "text": "In this section we prove consistency of the random regression forest model described in this paper. We denote a tree partition created by our algorithm trained on data Dn = {(Xi, Yi)}ni=1 as fn. As n varies we obtain a sequence of classifiers and we are interested in showing that the sequence {fn} is consistent as n\u2192\u221e. More precisely, Definition 1. A sequence of estimators {fn} is consistent for a certain distribution on (X,Y ) if the value of the risk functional\nR(fn) = EX,Z,Dn [ |fn(X,Z,Dn)\u2212 f(X)|2 ] converges to 0 as n \u2192 \u221e, where f(x) = E [Y |X = x] is the (unknown) regression function.\nIn order to show that our random forest classifier is consistent, we will take advantage of its structure as an empirical averaging estimator.\nDefinition 2. A (randomized) empirical averaging estimator is an estimator that averages a fixed number of (possibly dependent) base estimators, i.e.\nf (M)n (x, Z (M),Dn) =\n1\nM M\u2211 j=1 fn(x, Z j ,Dn)\nwhere Z(M) = (Z1, . . . , ZM ) is composed of M (possibly dependent) realizations of Z.\nThe first step of our construction is to show that the consistency of the random regression forest is implied by the consistency of the trees it is composed of. The following proposition makes this assertion precise. A similar result was shown by Biau et al. (2008) for binary classifiers and a corresponding mutli-class generalization appears in Denil et al. (2013). For regression, it is particularly straightforward.\nProposition 3. Suppose {fn} is a sequence of consistent estimators. Then {f (M)n }, the sequence of empirical averaging estimators obtained by averaging M copies of {fn} with different randomizing variables is also consistent.\nProof. We must show that R(f (M) n )\u2192 0. Compute\nR(f (M)n ) =\nEX,Z(M),Dn | 1 M M\u2211 j=1 fn(x, Z j ,Dn)\u2212 f(x)|2  by the triangle inequality and the fact that ( \u2211n i=1 ai) 2 \u2264 n \u2211n i=1 a 2 i ,\n\u2264 1 M M\u2211 j=1 EX,Zj ,Dn [ |fn(x, Zj ,Dn)\u2212 f(x)|2 ] = R(fn)\u2192 0\nwhich is the desired result.\nProposition 3 allows us to focus our attention on the consistency of each of the trees in the regression forest. The task of proving the tree estimators are consistent is greatly simplified if we condition on the partition of the data into structure and estimation points. Conditioned on the partition, the shape of the tree becomes independent of the estimators in the leafs. The following proposition shows that, under certain conditions, proving consistency conditioned on the partitioning variables is sufficient.\nProposition 4. Suppose {fn} is a sequence of estimators which are conditionally consistent for some distribution on (X,Y ) based on the value of some auxiliary variable I. That is,\nlim n\u2192\u221e\nEX,Z,Dn [ |fn(X,Z, I,Dn)\u2212 f(x)|2 | I ] = 0\nfor all I \u2208 I and that \u03bd is a distribution on I. Moreover, suppose f(x) is bounded. If these conditions hold and if \u03bd(I) = 1 and each fn is bounded with probability 1, then {fn} is unconditionally consistent, i.e. R(fn)\u2192 0.\nProof. Note that R(mn) = EX,Z,I,Dn [ |fn(X,Z, I,Dn)\u2212 f(X)|2 ] = EI [ EX,Z,Dn [ |fn(X,Z, I,Dn)\u2212 f(X)|2 | I\n]] and\nEX,Z,I,Dn [ |fn(X,Z, I,Dn)\u2212 f(X)|2 ] \u2264 EX,Z,I,Dn [ |fn(X,Z, I,Dn)|2 ] + EX [ |f(X)|2\n] \u2264 sup\nx EZ,I,Dn\n[ |fn(x, Z, I,Dn)|2 ] + sup\nx |f(x)|2\nBoth of these terms are finite by the boundedness assumptions. This means we can apply the dominated convergence theorem to obtain\nlim n\u2192\u221e R(fn) = EI [\nlim n\u2192\u221e\nEX,Z,Dn [ |fn(X,Z,Dn)\u2212 f(X)|2 | I ]] = 0\nwhich is the desired result.\nWith these preliminary results in hand, we are equipped to prove our main result.\nTheorem 5. Suppose that X is supported on RD and has a density which is bounded from above and below. Moreover, suppose that f(x) is bounded and that E [ Y 2 ] < \u221e. Then the random regression forest algorithm described in this paper is consistent provided that kn \u2192\u221e and kn/n\u2192 0 as n\u2192\u221e.\nProof. Since the construction of the tree is monotone transformation invariant we can assume without loss of generality that X is supported on [0, 1]D with uniform marginals (Devroye et al., 1996).\nBy Proposition 3 it is sufficient to show consistency of the base estimator. Moreover, using I to denote an infinite sequence of partitioning variables, by Proposition 4 it is sufficient to show consistency of the base estimator conditioned on I. To this end, we appeal to Theorem 4.1 from Gyo\u0308rfi et al. (2002). According to this theorem {fn} is consistent if both diam(An(X)) \u2192 0 and Ne(An(X)) \u2192 \u221e in probability. The diameter of a set is defined as\ndiam(A) = sup x,y\u2208A\n\u2016x\u2212 y\u2016 .\nConsider a tree partition defined by the structure points (fixed by conditioning on I) and the additional randomizing variable Z. That Ne(An(X)) \u2192 \u221e is trivial, since Ne(An(X)) \u2265 kn. To see that diam(An(X))\u2192 0 in probability, let Vn(x) be the size of the first dimension of An(x). It suffices to show that E [Vn(x)]\u2192 0 for all x in the support of X.\nLet X1, . . . , Xm\u2032 \u223c \u00b5|An(x) for some 1 \u2264 m\u2032 \u2264 m denote the structure points selected to determine the range of the split points in the cell An(x). Without loss of generality, we can assume that Vn(x) = 1 and that \u03c01Xi \u223c Uniform[0, 1], where \u03c01 is a projection onto the first coordinate. Conditioned on the event that the first dimension is cut, the largest possible size for the first dimension of the child cells is bounded by\nV \u2217 = max( m\nmax i=1\n\u03c01Xi, 1\u2212 m\nmin i=1 \u03c01Xi)\nRecall that we choose min(1 + Poisson(\u03bb), D) distinct candidate split dimensions, and define the following events\nE1 = {There is exactly one candidate dimension} E2 = {The first dimension is a candidate}\nThen, using V \u2032 to denote the size of the first dimension of the child cell,\nE [V \u2032] \u2264 E [I {(E1 \u2229 E2)c}+ I {E1 \u2229 E2}V \u2217] = P (Ec1) + P (Ec2|E1)P (E1)\n+ P (E2|E1)P (E1)E [V \u2217]\n= (1\u2212 e\u2212\u03bb) + (1\u2212 1 D )e\u2212\u03bb + 1 D e\u2212\u03bbE [V \u2217]\nBy Lemma 6 in Appendix A,\n= 1\u2212 e \u2212\u03bb D + e\u2212\u03bb D \u00b7 2m+ 1 2m+ 2 = 1\u2212 e \u2212\u03bb\n2D(m+ 1)\nIterating this argument we have that after K splits the expected size of the first dimension of the cell containing x is upper bounded by(\n1\u2212 e \u2212\u03bb\n2D(m+ 1)\n)K ,\nso it suffices to have K \u2192 \u221e in probability. This is shown to hold by Proposition 7 in Appendix A, which proves the claim."}, {"heading": "6. Discussion", "text": "In this section we describe two different random forest models which have been previous analyzed in the literature. We discuss some of the differences between them and the model in this paper, and the relationship of the three models to Breiman\u2019s original algorithm. Both of the models we discuss here were originally presented as classification algorithms, but adapting them for regression is straightforward.\nThe first model we compare to our own is the scale invariant random forest from Biau et al. (2008), which we refer to as Biau08. The trees in this forest are constructed by repeatedly expanding leaf nodes as follows: a leaf in the tree is chosen uniformly at random for expansion. Within this leaf a dimension is chosen uniformly at random and the data are sorted according to their projection into the chosen dimension. Finally, if there are N data points in the leaf being expanded then a random index I is drawn from the set {0, 1, . . . , N} and the split point is chosen so that the I smallest values fall into one of the children and the rest in the other. Leaf expansion continues in this manner until a specified number of terminal nodes has been reached.\nThe second model we compare to is the algorithm analyzed in Biau (2012), which we refer to as Biau12. The trees in this forest assume the data is supported on [0, 1]D, so data must first be scaled to lie in this range. Trees are grown by expanding leafs in breadth first order until a specified number of terminal nodes has been reached. Leafs in this model are expanded by selecting a fixed number of random candidate dimensions (with replacement). For each candidate dimension there is one candidate split point which lies at the midpoint of the cell being expanded. To choose between the different candidate dimensions, the information gain from each split is computed and the candidate split point with the greatest information gain is selected.\nAn important feature of Biau12 is that fitting the model requires partitioning the data set into two parts. One of these parts is used for determining the structure of the trees, and the other part is used for fitting the estimators in the leafs. The roles of the two parts of this partition are identical to the structure and estimation points in our own algorithm. The main difference between how Biau12 partitions the data and how we\ndo so is that for Biau12 the partition into structure and estimation points is the same for all the trees in the forest, whereas in our algorithm the partition is randomly chosen independently for each tree.\nComparing our algorithm and the two from Biau to Breiman\u2019s original random forests algorithm we see there are two key points of difference:\n1. How candidate split points are chosen.\n2. How data splitting happens (if at all).\nIn our experiments we look at how different choices for these two factors effect the performance of random forests on several regression problems."}, {"heading": "7. Experiments", "text": "In this section we empirically compare our algorithm to Biau08 and Biau12 (described in Section 6) and Breiman (the original algorithm described in Breiman (2001)) on several datasets. The purpose of these experiments is to provide insight into the relative impact of the different simplifications that have been used to obtain theoretical tractability. To this end we have chosen to evaluate the different algorithms on several realistic tasks, including and extremely challenging joint prediction problem from computer vision.\nSince the algorithms are each parameterized slightly differently it is not possible to use the same parame-\nters for all of them. Breiman and our own algorithm specify a minimum leaf size, which we set to 5 following Breiman\u2019s advice for regression (Breiman, 2001).\nBiau08 and Biau12 are parameterized in terms of a target number of leafs rather than a minimum leaf size. For these algorithms we choose the target number of leafs to be n/5, meaning the trees will be approximately the same size as those grown by Breiman and our own algorithm.\nBiau12 requires the data to lie within the unit hypercube. For this algorithm we pre-process the data by shifting and scaling each feature into this range."}, {"heading": "7.1. UCI datasets", "text": "For our first set of experiments we used four data sets from the UCI repository. A summary of the datasets can be seen in Table 1. With the exception of diabetes, these datasets were chosen for their relatively large number of instances and features.\nIn all the experiments in this section we follow Breiman\u2019s rule of thumb of using one third of the total number of attributes as candidate dimensions. All results in the this section are the mean of five runs of five fold cross validation.\nFor our algorithm we choose m = 1000 structure points for selecting the search range in the candidate dimensions. We experimented with other settings for m but found our results to be very insensitive to this parameter.\nFigure 2 compares the performance of several different random forest algorithm variants on the four UCI data sets. The clear trend here is that Breiman\u2019s algorithm outperforms our own, which in turn outperforms both algorithms from Biau. Generally Biau12\noutperforms Biau08, except in the wine quality data set where, strangely, the order is reversed.\nFigure 2 includes a variant of our algorithm which performs data splitting at the forest level, and also a variant of Biau12 which performs data splitting at the tree level. This difference appears to have relatively little effect when there is sufficient data; however, for the Diabetes dataset, which is comparatively small, splitting at the tree instead of the forest level significantly improves performance.\nIn all cases the gap between Biau12 and our algorithm is larger than the difference in performance from changing how data splitting is done. This indicates that in a practical sense it is the split selection strategy that accounts for most of the improvement of our algorithm over Biau12.\nWe also experimented with variants of Biau12 and our own algorithm with no data splitting. The most notable thing here is that when data splitting is removed our algorithm is very competitive with Breiman. This indicates that the gap in performance between our algorithm and standard random forests can be contributed almost entirely to data splitting.\nWe performed all of these experiments using a range of forest sizes. Figure 3 (left) shows performance as a function of forest size. In the interest of space we present this figure only for the CT slice dataset, but the curves for the other datasets tell a similar story. This figure shows that the results from Figure 2 are consistent over a wide range of forest sizes.\nFigure 3 (right) more closely examines the effects of the different data splitting and split point selection strategies."}, {"heading": "7.2. Kinect Pose Estimation", "text": "In this section, we evaluate our random forest algorithm on the challenging computer vision problem of\npredicting the location of human joints from a depth image and corresponding body part labels. See Figure 4 for an example.\nTypically the first step in a joint location pipeline is to predict the body part labels of each pixel in the depth image and the second step is to use the labelled pixels to predict joint locations (Shotton et al., 2011).\nSince our primary goal is to evaluate regression models rather than to build an end product, we implement only the second step in the basic pipeline. Using depth images with ground truth body part labels for each pixel as training data, we learn a regression model of the offset from a pixel to a joint.\nFor each joint, we train a forest on the pixels of body parts associated with that joint and predict the relative offset from each pixel to the joint. Typically these errors would be post-processed with mean shift to find a more accurate final prediction for the joint location. We instead report the regression error directly to avoid confounding factors in the comparison between the forest models.\nEach joint has its own model that predicts the offset from a pixel to the location of the joint. An offset is predicted for all pixels with body part labels associated with a joint.\nTo build our data set, we sample random poses from\nthe CMU mocap dataset1 and render a pair of 320x240 resolution depth and body part images along with the positions of each joint in the skeleton. The 19 body parts and one background class are represented by 20 unique color identifiers in the body part image.\nFor this experiment we generate 2000 poses for training and 500 poses for testing. To create the training set, we sample 20 pixels without replacement from each body part class in each pose. We then sample 40000 pixels without replacement from the sampled pixels with the associated body part labels across all poses. During testing we evaluate the MSE of the offsets of all pixels associated with a joint. Figure 4 visualizes the raw depth image, ground truth body part labels and the votes for the left hand made by all pixels in the left arm.\nThe features associated with each pixel are depth differences between pairs of pixels at specified offsets from the target. At training time, candidate pairs of offsets are sampled from a 2-dimensional Gaussian distributions with variance 40.0 (chosen by cross validation). The offsets are scaled by the depth of the target pixel to produce depth invariant features. Figure 4 (left) shows candidate feature offsets u and v for the indicated pixel. The resulting feature value is the depth difference between the pixel at offset u and the pixel at offset v. In this experiment we sample 1000 candidate offsets at each node.\nFigure 5 shows the MSE and standard deviation for each joint in pixel units. In the interest of space we only show the joints for the left side of the body but we see similar results for the right side. Just as with the UCI datasets, the dominant ordering from largest to smallest test error is Biau08, Biau12, ours and Breiman."}, {"heading": "8. Conclusion", "text": "It is fascinating that an algorithm as simple and useful as random forests has turned out to be so difficult to analyze. Motivated by this, we set as our goal to narrow the gap between the theory and practice of regression forests, and we succeeded to a significant extent. Specifically, we were able to derive a new regression forest algorithm, to prove that it is consistent, and to show that its empirical performance is closer to Breiman\u2019s popular model than previous theoretical variants.\nOur extensive empirical study, which compares the algorithm widely used in practice to recent theoretical\n1Data obtained from mocap.cs.cmu.edu\nvariants for the first time, also casts light on how different design choices and theoretical simplifications impact performance.\nWe focused on consistency because this is still an important open problem. However, we believe that our theoretical analysis and empirical study help in setting the arena for embarking on other types of analyses, including finite sample size complexity bounds, asymptotic convergence rates, and consistency of random forests in machine learning problems beyond regression."}, {"heading": "A. Technical results", "text": "Lemma 6. If U1, . . . Um are iid Uniform[0, 1] random variables then\nE [ max(\nm max i=1 Ui, 1\u2212 m min i=1 Ui)\n] = 2m+ 1\n2m+ 2\nProof. Let Mi = max(Ui, 1\u2212 Ui), so Mi are iid Uniform[1/2, 1] with CDF given by\nFMi(x) = 2x\u2212 1\nfor 1/2 \u2264 x \u2264 1. Moreover, if M = maxmi=1Mi then FM (x) = (2x\u2212 1)m since the Mi are iid. The density of M is then\nfM (x) = d dx FM (x) = 2m(2x\u2212 1)m\u22121\nand its expected value is\nE [M ] = \u222b 1 1/2 xfM (dx) = 2m+ 1 2m+ 2\nwhich proves the claim.\nProposition 7. For sufficiently large n, every cell of the tree will be cut infinitely often in probability. That is, if K is the distance from the root of the tree to a leaf then P (K < t)\u2192 0 for all t as n\u2192\u221e.\nProof. The splitting mechanism functions by choosing m structure points uniformly at random from the node to be split and searching between their min and max. We will refer to the points selected by the splitting mechanism as active. Without loss of generality we can assume the active points are uniformly distributed on [0, 1] and lower bound the number of estimation points in the smallest child.\nDenote the active points U1, . . . , Um and let U = max m i=1(max(Ui, 1 \u2212 Ui)). We know from the calculations in Lemma 6 that\nP (U \u2264 t) = (2t\u2212 1)m\nwhich means that the length of the smallest child is at least \u03b41/K < 1 with probability (2(1\u2212 \u03b41/K)\u2212 1)m, i.e.\nP ( U \u2264 1\u2212 \u03b41/K ) = (2(1\u2212 \u03b41/K)\u2212 1)m\nRepeating this argument K times we have that after K splits all sides of all children have length at least \u03b4 with probability at least (2(1 \u2212 \u03b41/K) \u2212 1)Km. This bound is derived by assuming that the same dimension is cut at each level of the tree. If different dimensions are cut at different levels the probability that all sides have length at least \u03b4 is greater, so the bound holds in those cases also.\nThis argument shows that every cell at depth K contains a hypercube with sides of length \u03b4 with probability at least (2(1\u2212 \u03b41/K)\u2212 1)Km. Thus for any K and 1 > 0 we can pick \u03b4 such that\n0 < \u03b41/K \u2264 1\u2212 1 2 ((1\u2212 1)1/Km + 1)\nand know that every cell of depth K contains a hypercube with sides of length \u03b4 with probability at least 1 \u2212 1. Since the distribution of X has a non-zero density, each of these hypercubes has positive measure with respect to \u00b5X . Define\np = min L a leaf at depth K \u00b5X(L) .\nWe know p > 0 since the minimum is over finitely many leafs and each leaf contains a set of positive measure.\nIt remains to show that we can choose n large enough so that any set A \u2282 [0, 1]D with \u00b5X(A) \u2265 p contains at least kn estimation points. To this end, fix an arbitrary A \u2282 [0, 1]D with \u00b5X(A) = p. In a data set of size n the number of points which fall in A is Binomial(n, p). Each point is an estimation point with probability 1/2, meaning that the number of estimation points, En, in A is Binomial(n, p/2).\nUsing Hoeffding\u2019s inequality we can bound En as follows P (En < kn) \u2264 exp ( \u2212 2 n (np 2 \u2212 kn )2) \u2264 exp ( (kn \u2212 np 2 )p ) .\nFor this probability to be upper bounded by an arbitrary 2 > 0 it is sufficient to have\nkn n \u2264 p 2 \u2212 1 np log( 1 2 ) .\nThe second term goes to zero as n \u2192 \u221e so for sufficiently large n the RHS is positive and since kn/n \u2192 0 it is always possible to choose n to satisfy this inequality.\nIn summary, we have shown that if a branch of the tree is grown to depth K then the leaf at the end of this branch contains a set of positive measure with respect to \u00b5X with arbitrarily high probability. Moreover, we have shown that if n is sufficiently large this leaf will contain at least kn estimation points.\nThe only condition which causes our algorithm to terminate leaf expansion is if it is not possible to create child leafs with at least kn points. Since we can make the probability that any leaf at depth K contains at least this many points arbitrarily high, we conclude that by making n large we can make the probability that all branches are actually grown to depth at least K by our algorithm arbitrarily high as well. Since this argument holds for any K the claim is shown."}], "references": [{"title": "Shape quantization and recognition with randomized trees", "author": ["Y. Amit", "D. Geman"], "venue": "Neural Computation,", "citeRegEx": "Amit and Geman,? \\Q1997\\E", "shortCiteRegEx": "Amit and Geman", "year": 1997}, {"title": "Analysis of a random forests model", "author": ["G. Biau"], "venue": "Journal of Machine Learning Research,", "citeRegEx": "Biau,? \\Q2012\\E", "shortCiteRegEx": "Biau", "year": 2012}, {"title": "Consistency of random forests and other averaging classifiers", "author": ["G. Biau", "L. Devroye", "G. Lugosi"], "venue": "Journal of Machine Learning Research,", "citeRegEx": "Biau et al\\.,? \\Q2008\\E", "shortCiteRegEx": "Biau et al\\.", "year": 2008}, {"title": "Consistency for a simple model of random forests", "author": ["L. Breiman"], "venue": "Technical report, University of California at Berkeley,", "citeRegEx": "Breiman,? \\Q2004\\E", "shortCiteRegEx": "Breiman", "year": 2004}, {"title": "Classification and Regression Trees", "author": ["L. Breiman", "J. Friedman", "C. Stone", "R. Olshen"], "venue": "CRC Press LLC,", "citeRegEx": "Breiman et al\\.,? \\Q1984\\E", "shortCiteRegEx": "Breiman et al\\.", "year": 1984}, {"title": "Decision Forests for Computer Vision and Medical Image Analysis", "author": ["A. Criminisi", "J. Shotton"], "venue": null, "citeRegEx": "Criminisi and Shotton,? \\Q2013\\E", "shortCiteRegEx": "Criminisi and Shotton", "year": 2013}, {"title": "Decision forests: A unified framework for classification, regression, density estimation, manifold learning and semisupervised learning", "author": ["A. Criminisi", "J Shotton", "E. Konukoglu"], "venue": "Foundations and Trends in Computer Graphics and Vision,", "citeRegEx": "Criminisi et al\\.,? \\Q2011\\E", "shortCiteRegEx": "Criminisi et al\\.", "year": 2011}, {"title": "Random forests for classification", "author": ["Cutler", "DR", "T. Edwards", "K. Beard"], "venue": "in ecology. Ecology,", "citeRegEx": "Cutler et al\\.,? \\Q2007\\E", "shortCiteRegEx": "Cutler et al\\.", "year": 2007}, {"title": "Consistency of online random forests", "author": ["M. Denil", "D. Matheson", "N. de Freitas"], "venue": "In International Conference on Machine Learning,", "citeRegEx": "Denil et al\\.,? \\Q2013\\E", "shortCiteRegEx": "Denil et al\\.", "year": 2013}, {"title": "An experimental comparison of three methods for constructing ensembles of decision trees: Bagging, boosting, and randomization", "author": ["T.G. Dietterich"], "venue": "Machine Learning,", "citeRegEx": "Dietterich,? \\Q2000\\E", "shortCiteRegEx": "Dietterich", "year": 2000}, {"title": "Risk bounds for purely uniformly random forests", "author": ["R. Genuer"], "venue": "arXiv preprint arXiv:1006.2980,", "citeRegEx": "Genuer,? \\Q2010\\E", "shortCiteRegEx": "Genuer", "year": 2010}, {"title": "Variance reduction in purely random forests", "author": ["R. Genuer"], "venue": "Journal of Nonparametric Statistics,", "citeRegEx": "Genuer,? \\Q2012\\E", "shortCiteRegEx": "Genuer", "year": 2012}, {"title": "A Distribution-Free Theory of Nonparametric Regression", "author": ["L. Gy\u00f6rfi", "M. Kohler", "A. Krzyzak", "H. Walk"], "venue": null, "citeRegEx": "Gy\u00f6rfi et al\\.,? \\Q2002\\E", "shortCiteRegEx": "Gy\u00f6rfi et al\\.", "year": 2002}, {"title": "The random subspace method for constructing decision forests", "author": ["T.K. Ho"], "venue": "IEEE Transactions on Pattern Analysis and Machine Intelligence,", "citeRegEx": "Ho,? \\Q1998\\E", "shortCiteRegEx": "Ho", "year": 1998}, {"title": "Consistency of random survival", "author": ["H. Ishwaran", "U.B. Kogalur"], "venue": "forests. Statistics and probability letters,", "citeRegEx": "Ishwaran and Kogalur,? \\Q2010\\E", "shortCiteRegEx": "Ishwaran and Kogalur", "year": 2010}, {"title": "Multiple decision trees", "author": ["S.W. Kwokt", "C. Carter"], "venue": "In Uncertainty in Artificial Intelligence,", "citeRegEx": "Kwokt and Carter,? \\Q1988\\E", "shortCiteRegEx": "Kwokt and Carter", "year": 1988}, {"title": "Random forests and adaptive nearest neighbors", "author": ["Y. Lin", "Y. Jeon"], "venue": "Journal of the American Statistical Association,", "citeRegEx": "Lin and Jeon,? \\Q2006\\E", "shortCiteRegEx": "Lin and Jeon", "year": 2006}, {"title": "Quantile regression forests", "author": ["N. Meinshausen"], "venue": "Journal of Machine Learning Research,", "citeRegEx": "Meinshausen,? \\Q2006\\E", "shortCiteRegEx": "Meinshausen", "year": 2006}, {"title": "Entangled decision forests and their application for semantic segmentation of CT images", "author": ["A. Montillo", "J. Shotton", "J. Winn", "J.E. Iglesias", "D. Metaxas", "A. Criminisi"], "venue": "In Information Processing in Medical Imaging,", "citeRegEx": "Montillo et al\\.,? \\Q2011\\E", "shortCiteRegEx": "Montillo et al\\.", "year": 2011}, {"title": "Newer classification and regression tree techniques: Bagging and random forests for ecological prediction", "author": ["A. Prasad", "L. Iverson", "A. Liaw"], "venue": null, "citeRegEx": "Prasad et al\\.,? \\Q2006\\E", "shortCiteRegEx": "Prasad et al\\.", "year": 2006}, {"title": "Boosting: Foundations and Algorithms", "author": ["R. Schapire", "Y. Freund"], "venue": null, "citeRegEx": "Schapire and Freund,? \\Q2012\\E", "shortCiteRegEx": "Schapire and Freund", "year": 2012}, {"title": "Object class segmentation using random forests", "author": ["F. Schroff", "A. Criminisi", "A. Zisserman"], "venue": "In Procedings of the British Machine Vision Conference,", "citeRegEx": "Schroff et al\\.,? \\Q2008\\E", "shortCiteRegEx": "Schroff et al\\.", "year": 2008}, {"title": "Realtime human pose recognition in parts from single depth images", "author": ["J. Shotton", "A. Fitzgibbon", "M. Cook", "T. Sharp", "M. Finocchio", "R. Moore", "A. Kipman", "A. Blake"], "venue": "IEEE Computer Vision and Pattern Recognition,", "citeRegEx": "Shotton et al\\.,? \\Q2011\\E", "shortCiteRegEx": "Shotton et al\\.", "year": 2011}, {"title": "Random forest: a classification and regression tool for compound classification and QSAR modeling", "author": ["V. Svetnik", "A. Liaw", "C. Tong", "J. Culberson", "R. Sheridan", "B. Feuston"], "venue": "Journal of Chemical Information and Computer Sciences,", "citeRegEx": "Svetnik et al\\.,? \\Q1947\\E", "shortCiteRegEx": "Svetnik et al\\.", "year": 1947}, {"title": "Random forests for metric learning with implicit pairwise position dependence", "author": ["C. Xiong", "D. Johnson", "R. Xu", "J.J. Corso"], "venue": "In ACM SIGKDD International Conference on Knowledge Discovery and Data Mining,", "citeRegEx": "Xiong et al\\.,? \\Q2012\\E", "shortCiteRegEx": "Xiong et al\\.", "year": 2012}, {"title": "Atlas encoding by randomized forests for efficient label propagation", "author": ["D. Zikic", "B. Glocker", "A. Criminisi"], "venue": "In International Conference on Medical Image Computing and Computer Assisted Intervention,", "citeRegEx": "Zikic et al\\.,? \\Q2012\\E", "shortCiteRegEx": "Zikic et al\\.", "year": 2012}], "referenceMentions": [{"referenceID": 3, "context": "Since its introduction by Breiman (2001) the random forests framework has been extremely successful as a general purpose classification and regression method.", "startOffset": 26, "endOffset": 41}, {"referenceID": 1, "context": "However, these algorithms are difficult to analyze, and the basic mathematical properties of even the original variant are still not well understood (Biau, 2012).", "startOffset": 149, "endOffset": 161}, {"referenceID": 21, "context": "Empirically focused papers describe elaborate extensions to the basic random forest framework, adding domain specific refinements which push the state of the art in performance, but come with no guarantees (Schroff et al., 2008; Shotton et al., 2011; Montillo et al., 2011; Xiong et al., 2012; Zikic et al., 2012).", "startOffset": 206, "endOffset": 313}, {"referenceID": 22, "context": "Empirically focused papers describe elaborate extensions to the basic random forest framework, adding domain specific refinements which push the state of the art in performance, but come with no guarantees (Schroff et al., 2008; Shotton et al., 2011; Montillo et al., 2011; Xiong et al., 2012; Zikic et al., 2012).", "startOffset": 206, "endOffset": 313}, {"referenceID": 18, "context": "Empirically focused papers describe elaborate extensions to the basic random forest framework, adding domain specific refinements which push the state of the art in performance, but come with no guarantees (Schroff et al., 2008; Shotton et al., 2011; Montillo et al., 2011; Xiong et al., 2012; Zikic et al., 2012).", "startOffset": 206, "endOffset": 313}, {"referenceID": 24, "context": "Empirically focused papers describe elaborate extensions to the basic random forest framework, adding domain specific refinements which push the state of the art in performance, but come with no guarantees (Schroff et al., 2008; Shotton et al., 2011; Montillo et al., 2011; Xiong et al., 2012; Zikic et al., 2012).", "startOffset": 206, "endOffset": 313}, {"referenceID": 25, "context": "Empirically focused papers describe elaborate extensions to the basic random forest framework, adding domain specific refinements which push the state of the art in performance, but come with no guarantees (Schroff et al., 2008; Shotton et al., 2011; Montillo et al., 2011; Xiong et al., 2012; Zikic et al., 2012).", "startOffset": 206, "endOffset": 313}, {"referenceID": 1, "context": "Notable contributions in this direction are the recent papers of Biau et al. (2008) and Biau (2012).", "startOffset": 65, "endOffset": 84}, {"referenceID": 1, "context": "Notable contributions in this direction are the recent papers of Biau et al. (2008) and Biau (2012).", "startOffset": 65, "endOffset": 100}, {"referenceID": 4, "context": "Random forests (Breiman, 2001) were originally conceived as a method of combining several CART (Breiman et al., 1984) style decision trees using bagging (Breiman, 1996).", "startOffset": 95, "endOffset": 117}, {"referenceID": 3, "context": "Random forests (Breiman, 2001) were originally conceived as a method of combining several CART (Breiman et al., 1984) style decision trees using bagging (Breiman, 1996). Their early development was influenced by the random subspace method of Ho (1998), the approach of random split selection ar X iv :1 31 0.", "startOffset": 16, "endOffset": 252}, {"referenceID": 9, "context": "from Dietterich (2000) and the work of Amit & Geman (1997) on feature selection.", "startOffset": 5, "endOffset": 23}, {"referenceID": 9, "context": "from Dietterich (2000) and the work of Amit & Geman (1997) on feature selection.", "startOffset": 5, "endOffset": 59}, {"referenceID": 9, "context": "from Dietterich (2000) and the work of Amit & Geman (1997) on feature selection. Several of the core ideas used in random forests were also present in the early work of Kwokt & Carter (1988) on ensembles of decision trees.", "startOffset": 5, "endOffset": 191}, {"referenceID": 6, "context": "In the years since their introduction, random forests have grown from a single algorithm to an entire framework of models (Criminisi et al., 2011), and have been applied to great effect in a wide variety of fields (Svetnik et al.", "startOffset": 122, "endOffset": 146}, {"referenceID": 19, "context": ", 2011), and have been applied to great effect in a wide variety of fields (Svetnik et al., 2003; Prasad et al., 2006; Cutler et al., 2007; Shotton et al., 2011; Criminisi & Shotton, 2013).", "startOffset": 75, "endOffset": 188}, {"referenceID": 7, "context": ", 2011), and have been applied to great effect in a wide variety of fields (Svetnik et al., 2003; Prasad et al., 2006; Cutler et al., 2007; Shotton et al., 2011; Criminisi & Shotton, 2013).", "startOffset": 75, "endOffset": 188}, {"referenceID": 22, "context": ", 2011), and have been applied to great effect in a wide variety of fields (Svetnik et al., 2003; Prasad et al., 2006; Cutler et al., 2007; Shotton et al., 2011; Criminisi & Shotton, 2013).", "startOffset": 75, "endOffset": 188}, {"referenceID": 1, "context": "The early theoretical work of Breiman (2004) for example, is essentially based on intuition and mathematical heuristics, and was not formalized rigorously until quite recently (Biau, 2012).", "startOffset": 176, "endOffset": 188}, {"referenceID": 2, "context": "The early theoretical work of Breiman (2004) for example, is essentially based on intuition and mathematical heuristics, and was not formalized rigorously until quite recently (Biau, 2012).", "startOffset": 30, "endOffset": 45}, {"referenceID": 1, "context": "An important milestone in the development of the theory of random forests is the work of Biau et al. (2008), which proves the consistency of several randomized ensemble classifiers.", "startOffset": 89, "endOffset": 108}, {"referenceID": 1, "context": "An important milestone in the development of the theory of random forests is the work of Biau et al. (2008), which proves the consistency of several randomized ensemble classifiers. Two models studied in Biau et al. (2008) are direct simplifications of the algorithm from Breiman (2001), and two are simple randomized neighborhood averaging rules, which can be viewed as simplifications of random forests from the perspective of Lin & Jeon (2006).", "startOffset": 89, "endOffset": 223}, {"referenceID": 1, "context": "An important milestone in the development of the theory of random forests is the work of Biau et al. (2008), which proves the consistency of several randomized ensemble classifiers. Two models studied in Biau et al. (2008) are direct simplifications of the algorithm from Breiman (2001), and two are simple randomized neighborhood averaging rules, which can be viewed as simplifications of random forests from the perspective of Lin & Jeon (2006).", "startOffset": 89, "endOffset": 287}, {"referenceID": 1, "context": "An important milestone in the development of the theory of random forests is the work of Biau et al. (2008), which proves the consistency of several randomized ensemble classifiers. Two models studied in Biau et al. (2008) are direct simplifications of the algorithm from Breiman (2001), and two are simple randomized neighborhood averaging rules, which can be viewed as simplifications of random forests from the perspective of Lin & Jeon (2006).", "startOffset": 89, "endOffset": 447}, {"referenceID": 1, "context": "More recently Biau (2012) has analyzed a variant of random forests originally introduced in Breiman (2004) which is quite similar to the original algorithm.", "startOffset": 14, "endOffset": 26}, {"referenceID": 1, "context": "More recently Biau (2012) has analyzed a variant of random forests originally introduced in Breiman (2004) which is quite similar to the original algorithm.", "startOffset": 14, "endOffset": 107}, {"referenceID": 1, "context": "More recently Biau (2012) has analyzed a variant of random forests originally introduced in Breiman (2004) which is quite similar to the original algorithm. The main differences between the model in Biau (2012) and that of Breiman (2001) are in how candidate split points are selected and that the former requires a second independent data set to fit the leaf predictors.", "startOffset": 14, "endOffset": 211}, {"referenceID": 1, "context": "More recently Biau (2012) has analyzed a variant of random forests originally introduced in Breiman (2004) which is quite similar to the original algorithm. The main differences between the model in Biau (2012) and that of Breiman (2001) are in how candidate split points are selected and that the former requires a second independent data set to fit the leaf predictors.", "startOffset": 14, "endOffset": 238}, {"referenceID": 3, "context": "While the problem of consistency of Breiman\u2019s algorithm remains open, some special cases have proved tractable. In particular, Meinshausen (2006) has shown that a model of random forests for quantile regression is consistent and Ishwaran & Kogalur (2010) have shown the consistency of their survival forests model.", "startOffset": 36, "endOffset": 146}, {"referenceID": 3, "context": "While the problem of consistency of Breiman\u2019s algorithm remains open, some special cases have proved tractable. In particular, Meinshausen (2006) has shown that a model of random forests for quantile regression is consistent and Ishwaran & Kogalur (2010) have shown the consistency of their survival forests model.", "startOffset": 36, "endOffset": 255}, {"referenceID": 3, "context": "While the problem of consistency of Breiman\u2019s algorithm remains open, some special cases have proved tractable. In particular, Meinshausen (2006) has shown that a model of random forests for quantile regression is consistent and Ishwaran & Kogalur (2010) have shown the consistency of their survival forests model. Denil et al. (2013) have shown the consistency of an online version of random forests.", "startOffset": 36, "endOffset": 335}, {"referenceID": 3, "context": "For a more comprehensive review we refer the reader to Breiman (2001) and Criminisi et al.", "startOffset": 55, "endOffset": 70}, {"referenceID": 3, "context": "For a more comprehensive review we refer the reader to Breiman (2001) and Criminisi et al. (2011).", "startOffset": 55, "endOffset": 98}, {"referenceID": 1, "context": "A simple strategy is to choose among the candidates uniformly at random, as in the models analyzed in Biau et al. (2008). A more common approach is to choose the candidate split which optimizes a purity function over the leafs that would be created.", "startOffset": 102, "endOffset": 121}, {"referenceID": 6, "context": "Criminisi et al. (2011) explore the use of several different leaf predictors for regression", "startOffset": 0, "endOffset": 24}, {"referenceID": 3, "context": "Unlike the random forests of Breiman (2001) we do not preform bootstrapping between the different trees.", "startOffset": 29, "endOffset": 44}, {"referenceID": 1, "context": "A similar result was shown by Biau et al. (2008) for binary classifiers and a corresponding mutli-class generalization appears in Denil et al.", "startOffset": 30, "endOffset": 49}, {"referenceID": 1, "context": "A similar result was shown by Biau et al. (2008) for binary classifiers and a corresponding mutli-class generalization appears in Denil et al. (2013). For regression, it is particularly straightforward.", "startOffset": 30, "endOffset": 150}, {"referenceID": 12, "context": "1 from Gy\u00f6rfi et al. (2002). According to this theorem {fn} is consistent if both diam(An(X)) \u2192 0 and N(An(X)) \u2192 \u221e in probability.", "startOffset": 7, "endOffset": 28}, {"referenceID": 1, "context": "The first model we compare to our own is the scale invariant random forest from Biau et al. (2008), which we refer to as Biau08.", "startOffset": 80, "endOffset": 99}, {"referenceID": 1, "context": "The second model we compare to is the algorithm analyzed in Biau (2012), which we refer to as Biau12.", "startOffset": 60, "endOffset": 72}, {"referenceID": 1, "context": "In this section we empirically compare our algorithm to Biau08 and Biau12 (described in Section 6) and Breiman (the original algorithm described in Breiman (2001)) on several datasets.", "startOffset": 56, "endOffset": 163}, {"referenceID": 22, "context": "Typically the first step in a joint location pipeline is to predict the body part labels of each pixel in the depth image and the second step is to use the labelled pixels to predict joint locations (Shotton et al., 2011).", "startOffset": 199, "endOffset": 221}], "year": 2013, "abstractText": "Despite widespread interest and practical use, the theoretical properties of random forests are still not well understood. In this paper we contribute to this understanding in two ways. We present a new theoretically tractable variant of random regression forests and prove that our algorithm is consistent. We also provide an empirical evaluation, comparing our algorithm and other theoretically tractable random forest models to the random forest algorithm used in practice. Our experiments provide insight into the relative importance of different simplifications that theoreticians have made to obtain tractable models for analysis.", "creator": "LaTeX with hyperref package"}}}