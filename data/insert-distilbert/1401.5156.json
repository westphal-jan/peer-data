{"id": "1401.5156", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "21-Jan-2014", "title": "Harmony Search Algorithm for Curriculum-Based Course Timetabling Problem", "abstract": "in this paper, harmony compensated search algorithm is applied to curriculum - based course timetabling. the implementation, specifically understanding the linear process of improvisation consists of memory consideration, random consideration and pitch adjustment. in memory consideration, the value difference of the course number for new solution preparation was selected from all other course number located in the same column of the harmony improved memory. this research used the highest occurrence percent of the designated course number to be periodically scheduled in a new harmony. the remaining courses that have not been scheduled by memory consideration will randomly go through random consideration, i. e. will select any second feasible location choice available to be scheduled in the new harmony adjusted solution. each course scheduled out phase of memory consideration is examined as to whether only it should be pitch smoothly adjusted with all probability of eight procedures. however, the algorithm produced results that were not comparatively better than those previously known used as best solution. with proper modification in terms of the approach in this algorithm would make the algorithm perform better on curriculum - based course timetabling.", "histories": [["v1", "Tue, 21 Jan 2014 03:01:50 GMT  (699kb)", "http://arxiv.org/abs/1401.5156v1", null]], "reviews": [], "SUBJECTS": "cs.AI", "authors": ["juliana wahid", "naimah mohd hussin"], "accepted": false, "id": "1401.5156"}, "pdf": {"name": "1401.5156.pdf", "metadata": {"source": "CRF", "title": "Harmony Search Algorithm for Curriculum-Based Course Timetabling Problem", "authors": ["Juliana Wahid", "Naimah Mohd Hussin"], "emails": ["w.juliana@uum.edu.my", "naimahmh@perlis.uitm.edu.my"], "sections": [{"heading": null, "text": "curriculum-based course timetabling. The implementation, specifically the process of improvisation consists of memory consideration, random consideration and pitch adjustment. In memory consideration, the value of the course number for new solution was selected from all other course number located in the same column of the Harmony Memory. This research used the highest occurrence of the course number to be scheduled in a new harmony. The remaining courses that have not been scheduled by memory consideration will go through random consideration, i.e. will select any feasible location available to be scheduled in the new harmony solution. Each course scheduled out of memory consideration is examined as to whether it should be pitch adjusted with probability of eight procedures. However, the algorithm produced results that were not comparatively better than those previously known as best solution. With proper modification in terms of the approach in this algorithm would make the algorithm perform better on curriculum-based course timetabling.\nKeywords-Harmony Search Algorithm; Curriculum-based\nCourse Timetabling;\nI. INTRODUCTION\nThe university course timetabling is the administrative tasks that allocate the set of courses offered by the university to particular rooms and time slots. The allocating process needs to satisfy several constraints so that timetable can actually be carried out (feasible). There are two categories of constraints in timetabling such as hard and soft constraints [1]. Hard constraints or constraints which may not be broken consist of matters that need rigidly be fulfilled in the timetable such as courses must be allocated into different time slots in order to avoid students and staffs clashes. While soft constraints are matters reflecting the preferences and teaching/learning comfort expectations of the students and staffs which are not necessarily essential. Some examples of soft constraints are such as avoiding students having to attend three or more courses in successive time slots, and stopping students from having only one course in any day.\nThe university course timetabling as described in International Timetabling Competition website (www.cs.qub.ac.uk/itc2007/) fall into two versions. The first version is the Post Enrolment, which the timetable is\nconstructed based on student enrolments i.e. after students have selected which lectures they wish to attend. The second version is the curriculum-based course timetabling (CB-CTT). This version will construct the timetable according to curricula published by the university.\nUniversity course timetabling problem (UCTP) that fall into group of non deterministic polynomial (NP) problem can be formulated as a combinatorial optimization problem (COP) [2-3], in which the larger the number of lectures to be scheduled and the diversity of constraints need to be considered, the harder the problem to be solved.\nThe works towards solving course timetabling problems have started in year 1960\u2019s, whereby the problem is modeled as a graph coloring approach [4]. Since then, various methods and approaches have been explored and proposed to solve the problems. In year 1970\u2019s, Barham and Westwood [5] have attempted to use heuristic methods. Moving forward to year 1980\u2019s, Mulvey [6] solved the university course-scheduling problem using network flows while Werra and Hertz [7] have tested tabu search methods. As in 1990\u2019s, the works in this problems are more unleashed where variety of methods are proposed. Yu [8] used artificial neural networks to solve the timetabling problem. In the other hand, Downsland [9] and Dige et al. [10] solved the timetabling problem by simulated annealing, while Deris et al. [11] exhibited constraint-based reasoning method in a case study of university timetabling problem. The active timetable research in this era also was contributed by the First International Conference on the Practice and Theory of Automated Timetabling (PATAT) held in 1995. In this era also, the evolutionary algorithms [12] in timetabling problem are proposed. In the new millennium era, the works continue. Constraint based programming [13], hyper heuristic methods [14-15], and metaheuristic methods [16] has been introduced and become an interesting approach for solving timetabling problems.\nEven though enormous effort expended over the last forty years to discover efficient methods and approaches for solving timetabling problems, these problems are nevertheless still the focus of intense research [17]. For course timetabling problems, the solutions algorithms are usually problemspecific; that is, no general solution can solve different\nproblem instances. Even though the problem has been widely researched, there is still no definitive solution approach that is able to provide excellent solutions across the broad spectrum of problem instances. This is parallel with the No Free Lunch theorem [18] that says if we cannot make any prior assumptions about the optimization problem we are trying to solve, no strategy can be expected to perform better than any other. Indeed, Gomes & Williams [19] stated that NP-hard problems are inflexible, which means that there does not exist an efficient algorithm that is ensured to find an optimal solution for this kind of problems.\nThis study has interest on examining specific algorithm i.e. harmony search algorithm (HSA). There are several components that can be improved in finding solution to university course timetabling problem (UCTP). HSA was successfully adapted to UCTP by Al-Betar, Khader, & Abdul Gani [20]. In their work, Al-Betar, et al. [20] described the adaptation of HSA for UCTP using five steps of HSA such as 1: Initialize HSA parameters and UCTP parameters, 2: Initialize Harmony Memory (HM) with random feasible timetables based on Harmony Memory Size (HMS) Parameter, 3: Improvise new harmony solution, 4: Update harmony memory, and 5: Stop Criteria. The HSA can find near optimal solutions for UCTP and produces better results than several others in the previous literature.\nIn their later work [21], the modified harmony search algorithm (MHSA) was produced to enhance the basic HSA for UCTP whereby the basic memory consideration of basic HSA is changed to modified memory consideration, and pitch adjustment with random walk as an acceptance rule of basic HSA is changed to pitch adjustment with side walk and first improvement acceptance rule.\nIn the same year, works on HSA for UCTP focused on pitch adjustment operator produced whereby eight pitch adjustment procedures were proposed to enhance the solution quality of the UCTP [22].\nA year before the producing of MHSA, the hybridization of HSA with hill climbing optimiser (HCO) and particle swarm optimization (PSO) was produced by Al-Betar & Khader [23]. The role of HCO in the hybridization is as new operator (located at step 3) to improve the quality of new harmony vector relative to the number of improvisations (NI) in each run with probability of hill climbing rate (HCR). The PSO was also located at step 3, used to modify the memory consideration operator to imitate the best harmony among the HM vector to construct new harmony.\nAs according to Al-Betar & Khader [23], the HSA exploits the advantages of population-based methods by identifying the potential regions in the search space using the memory consideration and random consideration operator. It also utilizes the advantages of local search-based methods by fine tuning the search space region using the pitch adjustment operators. So far in the literature, the works on HSA for UCTP carried out mostly focussed on the first version of UCTP, i.e.\nthe Post Enrolment. None so far focussed on the curriculumbased course timetabling.\nFrom this point of view, this study will explore the implementation of harmony search algorithm (HSA) into CBCTT.\nThis paper is organized as follow: section 2 describes literature review on the curriculum-based course university timetabling problem and the details of the harmony search algorithm, section 3 presents the methodology used in the paper followed by section 4 that explains the details of implementation of harmony search algorithm for CB-CTT. Section 5 discusses the experimental results and compares them with the best known solution in the literature. The possible future approach for improvement also discussed in this section. Section 6 shows some conclusions.\nII. LITERATURE REVIEW"}, {"heading": "A. Curriculum-based course timetabling (CB-CTT)", "text": "The curriculum-based course timetabling (CB-CTT) problem is an alternative of an university timetabling problem which creating a weekly timetable by allocating lectures for several university courses to a certain number of rooms and time periods based on curricula. The available constraints for this variant of university timetabling problem are solely based on the definition of the curricula [24]. Opposite to postenrolment based course timetabling problems in which students specifically register for courses they wish to attend.\nThe curriculum-based course timetabling problem has been selected as one of the competition tracks of the International Timetabling Competition 2007 (ITC2007). This study used problem definition presented in Bonutti, De Cesco, Di Gaspero, & Schaerf [25] which extended from technical description in the ITC2007 web site and the corresponding technical report from Di Gaspero et al. [26]. The CB-CTT problem definition consists of the following basic entities:\nDays \u2013 number of teaching days in the week (typically 5 or 6).\nTimeslots - Each day is split into a fixed number of timeslots, which is equal for all days.\nPeriods - a pair composed of a day and a timeslot. The total number of scheduling periods is the product of the days times the day timeslots.\nCourses and Teachers - Each course consists of a fixed number of lectures to be scheduled in distinct periods, it is attended by a given number of students, and is taught by a teacher. For each course there is a minimum number of days that the lectures of the course should be spread in, moreover there are some periods in which the course cannot be scheduled.\nRooms - Each room has a capacity, expressed in terms of number of available seats, and a location expressed as an integer value representing a separate building. Some rooms may not be suitable for some courses (because they miss some equipment).\nCurricula - A curriculum is a group of courses such that any pair of courses in the group have students in common. Based on curricula, we have the conflicts between courses and other soft constraints.\nThe CB-CTT problem consists in scheduling lectures of a set of courses into a weekly timetable, where each lecture of a course must be assigned a period and a room in accordance with a given set of constraints. A feasible timetable is one in which all lectures have been scheduled at a timeslot and a room, so that the hard constraints such as follows are satisfied:\nH1 - Lectures: Each lecture of a course must be scheduled in a distinct period and a room.\nH2 - Room occupancy: Any two lectures cannot be assigned in the same period and the same room.\nH3 - Conflicts: Lectures of courses in the same curriculum or taught by the same teacher cannot be scheduled in the same period, i.e., no period can have an overlapping of students nor teachers.\nH4 - Availability: If the teacher of a course is not available at a given period, then no lectures of the course can be assigned to that period.\nIn addition, a feasible timetable satisfying the four hard constraints incurs a penalty cost for the violations of the four soft constraints such as follows:\nS1 - Room capacity: For each lecture, the number of students attending the course should not be greater than the capacity of the room hosting the lecture.\nS2 - Room stability: All lectures of a course should be scheduled in the same room. If this is impossible, the number of occupied rooms should be as few as possible.\nS3 - Minimum working days: The lectures of a course should be spread into the given minimum number of days.\nS4 - Curriculum compactness: For a given curriculum, a violation is counted if there is one lecture not adjacent to any other lecture belonging to the same curriculum within the same day.\nThen, the objective of the CB-CTT problem is to minimize the number of soft constraint violations in a feasible solution."}, {"heading": "B. Harmony search algorithm (HSA)", "text": "The harmony search algorithm (HSA) is a new metaheuristic algorithm that impersonates the musical improvisation process in which a group of musicians improvise their instruments\u2019 pitch by searching for a perfect state of harmony according to audio-aesthetic standard [27]. The equivalent terms between musical scenario and optimization problems that obtained from Al-Betar & Khader [21] are as the following:\n Improvisation \u2194 Generation or construction\n Harmony \u2194 Solution vector\n Musician \u2194 Decision variable\n Pitch \u2194 Value\n Pitch range \u2194 Value range\n Audio-aesthetic standard \u2194 Objective function\n Practice \u2194 Iteration\n Pleasing harmony \u2194 (Near-) optimal solution\nThe HSA consists of several steps such as 1) problem formulation, 2) algorithm parameter setting, 3) random tuning for memory initialization, 4) harmony improvisation (memory consideration, random consideration, and pitch adjustment), 5) memory update, 6) performing termination, and 7) cadenza [28]. Figure 1 shows the pseudo-code of the HSA with five main steps in which STEP1 consists of problem formulation and algorithm parameter setting, STEP2 consists of random tuning for memory initialization, STEP3 consists of harmony improvisation (memory consideration, random consideration, and pitch adjustment), STEP4 consists of memory update and STEP5 consists of performing termination and cadenza. The details of each step will further discussed in section 4.\nIII. METHODOLOGY\nThis section list the steps used to achieve the objective in\nthis study such as follows:\nA. Initial Phase\nThis phase concentrates on studying and understanding the HSA and CB-CTT from literature that can be found in section 2."}, {"heading": "B. Preprocessing Phase", "text": "This phase focuses on understanding the original data file and transferring them into related matrixes, such as conflict matrix that represents a conflict between courses, where Lectures of courses in the same curriculum or taught by the same teacher must be all scheduled in different periods."}, {"heading": "C. Construction Phase", "text": "This phase focuses on finding feasible initial solutions\nthat satisfy all hard constraints related to each data instances.\nD. Improvement Phase\nThis phase aims to improve solutions generated from the\nconstruction phase, where the HSA are employed. The details of step ii, iii and iv are covered in the next section."}, {"heading": "E. Analysis Phase", "text": "This phase evaluates the quality of the solutions obtained from the improvement phase against the other methods in the literature which can be seen in section 5.\nIV. THE HARMONY SEARCH ALGORITHM FOR CB-CTT\nThis section describes details of steps as shown earlier in\nFigure 1in implementing HSA into CB-CTT as follows:"}, {"heading": "A. CB-CTT formulation and HSA parameter setting", "text": "The problem formulation of CB-CTT is based on the data instances provided by ITC2007 available on http://tabu.diegm.uniud.it/ctt. The details of the data instances are describes in Table 1.\nThe problem formulation of CB-CTT was to minimize the cost of soft constraints such as room capacity, room stability, minimum working days and curriculum compactness.The timetable solution for CB-CTT in HSA is represented by a vector of courses x = (x1, x2, . . . , xN), each lecture for each course must be scheduled in a feasible location. For example, in the first data problem instances established by ITC2007, the number of courses C = 30 which have number of lectures that sum up to total lectures L = 160, the number of rooms R = 6, the number of period per day P = 6 and the number of days D = 5. The possible timeslots of each lectures that represent by courses is within the range between 0 to 179 (R X P X D = 6 X 6 X 5=180). As shown in Figure 2, first course denotes by 0 located at first room in period 0, 1, 3 and 4 in Day 0, and period 0 and 2 in Day 1. These locations equivalent to timeslot 0, 1, 3, 4, 6, and 8. Solution with value -1 shows that the timeslot is empty.\nAs for the preprocessing phase, the following data\nstructures are used to build a CB-CTT solution:\n- Course Correlation matrix: is a matrix with size C x C where the element > 0 if courses in the same\ncurriculum and if more then one course tought by same teacher or 0 otherwise.\n- Course period matrix: is a binary matrix with size C x P where the element contains either 1 if and only if\ncourse C not available in period P or 0 otherwise.\n- Course room matrix: is a binary matrix with size C x R where the element contains either 1 if and only if\ncourse C and room R is compatible with both aspects of size and features or 0 otherwise.\n- Courseperiodavail matrix C x (P xR) contains either 1 if and only if course C available in period P in\nroom R or 0 otherwise.\nThe following parameters of the HSA that identified by Geem [28] which required to solve the optimization problem are also specified in this step:\n Harmony memory size (HMS) - number of solution vectors concurrently handled.\n Harmony memory considering rate (HMCR) \u2013 (0 \u2264 HMCR \u2264 1) where HSA picks one value randomly\nfrom memory.\n Pitch adjusting rate (PAR) - (0 \u2264 PAR \u2264 1) is the rate where HSA fine-tunes the value which was originally\npicked from memory.\n Maximum improvisation (MI) - number of iterations or stopping criterion.\nThe harmony memory (HM) is a memory location where all the solution vectors (sets of decision variables) and corresponding objective function values are stored. The function values are used to evaluate the quality of solution vectors. In CB-CTT, the HM consists of sets of timetable solution and corresponding of costs of soft constraints i.e. room capacity, room stability, minimum working days and curriculum compactness. As surveyed by Geem [29], HMS of value range from 30 to 100 was frequently used in literature.\nThe HSA parameter setting used in this study are as\nfollows:\n Harmony memory size (HMS) - 50\n Harmony memory considering rate (HMCR) \u2013 0.9\n Pitch adjusting rate (PAR) \u2013 1.0, with multi pitch with eight procedures [22] such as follows:\no Move-timeslot: 0< U(0 ,1 ) \u2264 0.10xPAR o Swap-timeslot: 0.10xPAR<U(0,1)\u2264 0.20xPAR o move-location: 0.20xPAR<U(0,1)\u2264 0.30xPAR o swap-location:0.30xPAR<U(0,1 ) \u2264 0.40xPAR o exchange-location:0.40xPAR<U(0,1)\u2264\n0.50xPAR\no swap-distinct-timeslots : 0.50xPAR< U(0 ,1 ) \u2264 0.60xPAR o move-room : 0.60xPAR< U(0 ,1 ) \u2264 0.70xPAR o Swap-room : 0.70xPAR< U(0 ,1 ) \u2264 0.80xPAR o do nothing : 0.80xPAR< U(0 ,1 ) \u2264 1\n Maximum improvisation (MI) \u2013 first phase: 10, Second phase: 50"}, {"heading": "B. Random tuning for memory initialization", "text": "In this step, the harmony memory (HM) matrix is filled with as many randomly generated solution vectors as the HMS. In the CB-CTT model, the randomly generated solution vectors undergo a validation process to verify that they feasible i.e. not violated the hard constraints (lectures, conflicts, availability and room occupation).\nThis step constructs maximum feasible timetabling solutions for CB-CTT as determined by HMS. HM is filled with these solutions and sorted according to the minimum total cost of soft constraints. The technique used to generate random HM solutions is assigning the courses by using the combination of graph heuristic that produced maximum numbers of solutions proposed by Juliana & Naimah [30] which combines saturation degree with largest degree. In this technique, the course with the least available period and largest number soft conflicting students is scheduled first."}, {"heading": "C. Harmony improvisation (memory consideration, random consideration, and pitch adjustment)", "text": "1) Memory consideration\nThe memory consideration selects feasible locations of the courses to be scheduled in the new harmony solution, x_ =\n(x1, x2, . . . , xN), from the solutions stored in HM with the probability of HMCR. In memory consideration, the value of the course number for new solution was selected from all other course number located in the same column of the HM. This research used the highest occurrence of the course number to be scheduled in a new harmony with probability of HMCR. In certain situations, if there are same numbers of highest occurrence for any course number, the least available period and highest conflicts for that course were used to choose between the course numbers. If the operators cannot find a feasible timetable (this happens in some medium and large data instances), the algorithm initiates a neighborhood search to find feasible timetable, such as find an empty timeslot for unassigned course number and swapping between course numbers.\n2) Random consideration\nThe remaining courses that have not been scheduled by memory consideration will select any feasible location available to be scheduled in the new harmony solution with probability (1-HMCR).\n3) Pitch adjustment\nIn CB-CTT the pitch adjustment operator works similar to neighborhood structures in local search-based methods into eight procedures [22] as follows:\na) The pitch adjustment move-timeslot. An event that meets the probability of 10%\u00d7PAR is randomly\nmoved to any feasible timeslot where the room is not changed.\nb) The pitch adjustment Swap-timeslot. An event that meets the probability between 10%\u00d7PAR and\n20%\u00d7PAR is swapped with the timeslot of another event, while the rooms of both events are not changed.\nc) The pitch adjustment move-location. An event that meets the probability between 20%\u00d7PAR and\n30%\u00d7PAR is randomly moved to any free feasible location in the new harmony solution.\nd) The pitch adjustment swap-location. An event that meets the probability between 30%\u00d7PAR and\n40%\u00d7PAR is randomly swapped with another event while the feasibility is maintained.\ne) The pitch adjustment exchange-location. An event that meets the probability between 40%\u00d7PAR and\n50%\u00d7PAR is randomly exchanged with another two events while the feasibility is maintained.\nf) The pitch adjustment swap-distinct-timeslots. An event that meets the probability between 50%\u00d7PAR\nand 60%\u00d7PAR is adjusted as follows: (1) select all the events that have the same timeslot as first event. (2) select a timeslot in random . (3) simply swap all the events in timeslot with all the events in other timeslot without changing the rooms.\ng) The pitch adjustment move-room. An event that meets the probability between 60%\u00d7PAR and\n70%\u00d7PAR is moved to any free feasible room while the timeslot is not changed.\nh) The pitch adjustment Swap-room. An event that meets the probability between 70%\u00d7PAR and\n80%\u00d7PAR swaps its room with a room of another event in the same timeslot while reserving the feasibility.\nEach course scheduled out of memory consideration is examined as to whether it should be pitch adjusted with probability by the above eight procedures.\n4) Repair process\nDue to large size of data instances, some courses may not able to find feasible locations in the new harmony. This extra step needs to be carried out to ensure all courses are scheduled in the new harmony solutions. The repair process used here is based on a one-level backtracking process by Al-Betar & Khader [21] with some modification such as follows:\na) Select an unscheduled course. b) Find all feasible locations for the unscheduled course\nwhich is currently occupied by other courses in the new harmony solution. c) Delete the course that held the feasible location and add it to the unscheduled list. d) Schedule the unscheduled course to new harmony solution in the feasible location and remove it from\nthe unscheduled list.\nThe above steps of repair process are carried out in iterative manner, however if the predefined iterations cannot find a complete feasible timetable, the improvisation process of new harmony is restarted with a new random seed and discarded the current new solution."}, {"heading": "D. Memory update", "text": "If the new harmony vector, x_ = (x1, x2, . . . , xN) , is better than the worst harmony stored in HM in terms of the objective function value, the new harmony vector is included to the HM, and the worst harmony vector is excluded from the HM."}, {"heading": "E. Performing termination", "text": "Steps 4.3 and 4.4 of HSA are repeated until the number of maximum improvisation (MI) is met. For the purpose of this study two cycles of iterations, i.e. 10 and 50, were used to observe whether the solutions are improving or not.\nV. RESULTS AND DISCUSSIONS\nIn this section, the performance of HSA for solving the CB-CTT problem was evaluated using 21 data instances generated in ITC-2007. The proposed method is coded using C++ in Microsoft Visual 2008 under Windows Vista on an Intel Machine with Core TM and a 2.16GHz processor and 1GB RAM. Table 2 shows the experimental results of HSA\nalgorithm for 10 iterations and 50 iterations together with the best known results solution. As there are several instances that not improving from 10 iterations to 50 iterations such as comp05, comp07, and comp12, the higher iterations e.g. 100, 150, and so on were not carried out yet to enhance the proposed method. The time complexity of each iteration also not yet described as this paper shows only low level number of iterations.\nSo far, the result demonstrates that HSA could be tailored to solve CB-CTT problems. However, our approach is still not able to achieve results comparable with the best known solution. An improvement (which is currently ongoing, with optimism) is required, in order to enhance the performance of the proposed method to produce desired outcomes better than those currently in use. There several issues that needed to be considered in enhancing the approach such as in the memory consideration, perhaps the used of smallest occurrence for course number can be applied. Another issue could be the process of repairing after improvisation process. A method to ensure all new solutions after improvisation process is feasible without to restart with a new random seed also be needed.\nThe method used in this study provide alternative way of solving curriculum-based course timetabling, as this type of data instance not yet focused by other researcher that involved in this HSA.\nThis paper presented the harmony search algorithm for solving the CB-CTT problems. Results from the experiments have shown that the algorithm is capable of solving timetabling problems. Although the results produced by the algorithm in this study are presently not comparatively better than those already reported in the literature, there are rooms for improvement. Further works need to be considered to improve the HSA performance."}, {"heading": "ACKNOWLEDGMENT", "text": "This study was funded by Ministry of Higher Education\nof Malaysia."}], "references": [{"title": "Automated university timetabling: The state of the art", "author": ["E.K. Burke"], "venue": "The Computer Journal, 40(9), 565\u2013571., 1997.", "citeRegEx": "1", "shortCiteRegEx": null, "year": 1997}, {"title": "Heuristics from nature for hard combinatorial optimization problems", "author": ["A. Colorni"], "venue": "International Transactions in Operational Research, 3(1): 1-21, January 1996, 1996.", "citeRegEx": "2", "shortCiteRegEx": null, "year": 1996}, {"title": "Metaheuristics in combinatorial optimization:Overview and conceptual comparison", "author": ["C. Blum", "A. Roli"], "venue": "ACM Computing Surveys, 35(3):268-308, 2003, 2003.", "citeRegEx": "3", "shortCiteRegEx": null, "year": 2003}, {"title": "A technique for colouring a graph applicable to large scale timetabling problems", "author": ["D. Wood"], "venue": "The Computer Journal 12, 317\u2013319 (1969), 1969.", "citeRegEx": "4", "shortCiteRegEx": null, "year": 1969}, {"title": "A Simple Heuristic to Facilitate Course Timetabling", "author": ["A.M. Barham", "J.B. Westwood"], "venue": "The Journal of the Operational Research Society, vol. 29, pp. 1055-1060, 1978.", "citeRegEx": "5", "shortCiteRegEx": null, "year": 1978}, {"title": "A classroom/time assignment model", "author": ["J.M. Mulvey"], "venue": "European Journal of Operational Research 9 (64) (1982) 64\u00b170., 1982.", "citeRegEx": "6", "shortCiteRegEx": null, "year": 1982}, {"title": "Tabu search techniques: A tutorial and an application to neural networks", "author": ["D. d. Werra", "A. Hertz"], "venue": "OR Spectrum 11 (1989) 131\u00b1141., 1989.", "citeRegEx": "7", "shortCiteRegEx": null, "year": 1989}, {"title": "Time-table scheduling using neural network algorithms", "author": ["T.L. Yu"], "venue": "IJCNN International Joint Conference on Neural Networks, 1990, Page(s): 279 -284 vol.1., 1990.", "citeRegEx": "8", "shortCiteRegEx": null, "year": 1990}, {"title": "A Timetabling Problem in Which Clashes are Inevitable", "author": ["K.A. Dowsland"], "venue": "The Journal of the Operational Research Society, vol. 41, pp. 907-918, 1990.", "citeRegEx": "9", "shortCiteRegEx": null, "year": 1990}, {"title": "Timetabling by simulated annealing", "author": ["P. Dige"], "venue": "Lecture Notes in Economics and Mathematical Systems 396 (1993) 151\u00b1174., 1993.", "citeRegEx": "10", "shortCiteRegEx": null, "year": 1993}, {"title": "University Timetabling by Constraint-Based Reasoning: A Case Study", "author": ["S.B. Deris"], "venue": "The Journal of the Operational Research Society, vol. 48, pp. 1178-1190, 1997.", "citeRegEx": "11", "shortCiteRegEx": null, "year": 1997}, {"title": "A Hybrid Genetic Algorithm for Highly Constrained Timetabling Problems", "author": ["E.K. Burke"], "venue": "Proceedings of the 6th Intemational Conference on Genetic Algorithms pp 605-610, Morgan Kaufinann, San Francisco, CA, USA, (ICGA\u201995, Pittsburgh, USA, 15th- 19th July 1995). 1995.", "citeRegEx": "12", "shortCiteRegEx": null, "year": 1995}, {"title": "Constraint-based timetabling-a case study", "author": ["A.M. Abbas", "E.P.K. Tsung"], "venue": "ACS/IEEE International Conference on Computer Systems and Applications, 2001, Page(s): 67 -72., 2001.", "citeRegEx": "13", "shortCiteRegEx": null, "year": 2001}, {"title": "A graph-based hyper-heuristic for educational timetabling problems", "author": ["E.K. Burke"], "venue": "European Journal of Operational Research 176 (2007) 177\u2013192, 2007.", "citeRegEx": "14", "shortCiteRegEx": null, "year": 2007}, {"title": "A Tabu-Search Hyperheuristic for Timetabling and Rostering", "author": ["E.K. Burke"], "venue": "Journal of Heuristics 9, 451-470 (2003), 2003.", "citeRegEx": "15", "shortCiteRegEx": null, "year": 2003}, {"title": "A survey of metaheuristic-based techniques for University Timetabling problems", "author": ["R. Lewis"], "venue": "OR Spectrum 30, 167\u2013190 (2008), 2008.", "citeRegEx": "16", "shortCiteRegEx": null, "year": 2008}, {"title": "School timetable construction algorithms and complexity", "author": ["R.J. Willemen"], "venue": "PhD Thesis, Universiteitsdrukkerij Technische Universiteit Eindhoven, The Netherlands, 2002.", "citeRegEx": "17", "shortCiteRegEx": null, "year": 2002}, {"title": "No free lunch theorems for optimization \" Evolutionary Computation, IEEE Transactions on Volume: 1 , Issue: 1 Digital Object Identifier: 10.1109/4235.585893 Publication Year", "author": ["D.H. Wolpert", "W.G. Macready"], "venue": null, "citeRegEx": "18", "shortCiteRegEx": "18", "year": 1997}, {"title": "APPROXIMATION ALGORITHMS", "author": ["C.P. Gomes", "R. Williams"], "venue": "SEARCH METHODOLOGIES Introductory Tutorials in Optimization and Decision Support Techniques, G. Kendall and E. K. Burke, Eds., ed: Springer Science-i-Business Media, LLC, 2005, pp. 557-585.", "citeRegEx": "19", "shortCiteRegEx": null, "year": 2005}, {"title": "A harmony search algorithm for university course timetabling", "author": ["M. Al-Betar"], "venue": "PATAT 2008, 2008.", "citeRegEx": "20", "shortCiteRegEx": null, "year": 2008}, {"title": "A harmony search algorithm for university course timetabling", "author": ["M. Al-Betar", "A.T. Khader"], "venue": "Annals of Operations Research, pp. 1-29, 2010.", "citeRegEx": "21", "shortCiteRegEx": null, "year": 2010}, {"title": "A Harmony Search with Multi-pitch Adjusting Rate for the University Course Timetabling", "author": ["M. Al-Betar"], "venue": "Recent Advances in Harmony Search Algorithm, SCI 270, pp. 147\u2013161. springerlink.com \u00a9 Springer- Verlag Berlin Heidelberg 2010, 2010.", "citeRegEx": "22", "shortCiteRegEx": null, "year": 2010}, {"title": "A hybrid harmony search for university course timetabling", "author": ["M. Al-Betar", "A.T. Khader"], "venue": "Multidisciplinary International Conference on Scheduling : Theory and Applications (MISTA 2009) 10-12 August 2009, Dublin, Ireland, 2009.", "citeRegEx": "23", "shortCiteRegEx": null, "year": 2009}, {"title": "Multi-criteria Curriculum-Based Course Timetabling\u2014A Comparison of a Weighted Sum and a Reference Point Based Approach", "author": ["M. Geiger"], "venue": "Evolutionary Multi-Criterion Optimization. vol. 5467, M. Ehrgott, et al., Eds., ed: Springer Berlin / Heidelberg, 2009, pp. 290-304.", "citeRegEx": "24", "shortCiteRegEx": null, "year": 2009}, {"title": "Benchmarking curriculum-based course timetabling: formulations, data formats, instances, validation, visualization, and results", "author": ["A. Bonutti"], "venue": "Annals of Operations Research, pp. 1-12, 2010.", "citeRegEx": "25", "shortCiteRegEx": null, "year": 2010}, {"title": "The second international timetabling competition (ITC-2007): Curriculum-based course timetabling (track 3) \" (Technical Report QUB/IEEE/Tech/ITC2007/CurriculumCTT/v1.0/1)", "author": ["L. Di Gaspero"], "venue": "School of Electronics,", "citeRegEx": "26", "shortCiteRegEx": "26", "year": 2007}, {"title": "A new heuristic optimization algorithm: harmony search", "author": ["Z.W. Geem"], "venue": "Simulation 76,", "citeRegEx": "27", "shortCiteRegEx": "27", "year": 2001}, {"title": "State-of-the-Art in the Structure of Harmony Search Algorithm", "author": ["Z.W. Geem"], "venue": "Recent Advances In Harmony Search Algorithm. vol. 270, Z. Geem, Ed., ed: Springer Berlin / Heidelberg, 2010, pp. 1-10.", "citeRegEx": "28", "shortCiteRegEx": null, "year": 2010}, {"title": "Optimal cost design of water distribution networks using harmony search", "author": ["Z.W. Geem"], "venue": "Engineering Optimization 38, 259\u2013280 (2006), 2006.", "citeRegEx": "29", "shortCiteRegEx": null, "year": 2006}, {"title": "Constructing Population of Initial Solutions for Curriculum-Based Course Timetabling Problem", "author": ["W. Juliana", "M.H. Naimah"], "venue": "International Conference on Innovation, Management and Technology Research (ICIMTR2012), 21-22 May 2012, Melaka, Malaysia, 2012.", "citeRegEx": "30", "shortCiteRegEx": null, "year": 2012}], "referenceMentions": [{"referenceID": 0, "context": "There are two categories of constraints in timetabling such as hard and soft constraints [1].", "startOffset": 89, "endOffset": 92}, {"referenceID": 1, "context": "University course timetabling problem (UCTP) that fall into group of non deterministic polynomial (NP) problem can be formulated as a combinatorial optimization problem (COP) [2-3], in which the larger the number of lectures to be scheduled and the diversity of constraints need to be considered, the harder the problem to be solved.", "startOffset": 175, "endOffset": 180}, {"referenceID": 2, "context": "University course timetabling problem (UCTP) that fall into group of non deterministic polynomial (NP) problem can be formulated as a combinatorial optimization problem (COP) [2-3], in which the larger the number of lectures to be scheduled and the diversity of constraints need to be considered, the harder the problem to be solved.", "startOffset": 175, "endOffset": 180}, {"referenceID": 3, "context": "The works towards solving course timetabling problems have started in year 1960\u2019s, whereby the problem is modeled as a graph coloring approach [4].", "startOffset": 143, "endOffset": 146}, {"referenceID": 4, "context": "In year 1970\u2019s, Barham and Westwood [5] have attempted to use heuristic methods.", "startOffset": 36, "endOffset": 39}, {"referenceID": 5, "context": "Moving forward to year 1980\u2019s, Mulvey [6] solved the university course-scheduling problem using network flows while Werra and Hertz [7] have tested tabu search methods.", "startOffset": 38, "endOffset": 41}, {"referenceID": 6, "context": "Moving forward to year 1980\u2019s, Mulvey [6] solved the university course-scheduling problem using network flows while Werra and Hertz [7] have tested tabu search methods.", "startOffset": 132, "endOffset": 135}, {"referenceID": 7, "context": "Yu [8] used artificial neural networks to solve the timetabling problem.", "startOffset": 3, "endOffset": 6}, {"referenceID": 8, "context": "In the other hand, Downsland [9] and Dige et al.", "startOffset": 29, "endOffset": 32}, {"referenceID": 9, "context": "[10] solved the timetabling problem by simulated annealing, while Deris et al.", "startOffset": 0, "endOffset": 4}, {"referenceID": 10, "context": "[11] exhibited constraint-based reasoning method in a case study of university timetabling problem.", "startOffset": 0, "endOffset": 4}, {"referenceID": 11, "context": "In this era also, the evolutionary algorithms [12] in timetabling problem are proposed.", "startOffset": 46, "endOffset": 50}, {"referenceID": 12, "context": "Constraint based programming [13], hyper heuristic methods [14-15], and metaheuristic methods [16] has been introduced and become an interesting approach", "startOffset": 29, "endOffset": 33}, {"referenceID": 13, "context": "Constraint based programming [13], hyper heuristic methods [14-15], and metaheuristic methods [16] has been introduced and become an interesting approach", "startOffset": 59, "endOffset": 66}, {"referenceID": 14, "context": "Constraint based programming [13], hyper heuristic methods [14-15], and metaheuristic methods [16] has been introduced and become an interesting approach", "startOffset": 59, "endOffset": 66}, {"referenceID": 15, "context": "Constraint based programming [13], hyper heuristic methods [14-15], and metaheuristic methods [16] has been introduced and become an interesting approach", "startOffset": 94, "endOffset": 98}, {"referenceID": 16, "context": "Even though enormous effort expended over the last forty years to discover efficient methods and approaches for solving timetabling problems, these problems are nevertheless still the focus of intense research [17].", "startOffset": 210, "endOffset": 214}, {"referenceID": 17, "context": "This is parallel with the No Free Lunch theorem [18] that says if we cannot make any prior assumptions about the optimization problem we are trying to solve, no strategy can be expected to perform better than any other.", "startOffset": 48, "endOffset": 52}, {"referenceID": 18, "context": "Indeed, Gomes & Williams [19] stated that NP-hard problems are inflexible, which means that there does not exist an efficient algorithm that is ensured to find an optimal solution for this kind of problems.", "startOffset": 25, "endOffset": 29}, {"referenceID": 19, "context": "HSA was successfully adapted to UCTP by Al-Betar, Khader, & Abdul Gani [20].", "startOffset": 71, "endOffset": 75}, {"referenceID": 19, "context": "[20] described the adaptation of HSA for UCTP using five steps of HSA such as 1: Initialize HSA parameters and UCTP parameters, 2: Initialize Harmony Memory (HM) with random feasible timetables based on Harmony Memory Size (HMS) Parameter, 3: Improvise new harmony solution, 4: Update harmony memory, and 5: Stop Criteria.", "startOffset": 0, "endOffset": 4}, {"referenceID": 20, "context": "In their later work [21], the modified harmony search algorithm (MHSA) was produced to enhance the basic HSA for UCTP whereby the basic memory consideration of basic HSA is changed to modified memory consideration, and pitch adjustment with random walk as an acceptance rule of basic HSA is changed to pitch adjustment with side walk and first improvement acceptance rule.", "startOffset": 20, "endOffset": 24}, {"referenceID": 21, "context": "In the same year, works on HSA for UCTP focused on pitch adjustment operator produced whereby eight pitch adjustment procedures were proposed to enhance the solution quality of the UCTP [22].", "startOffset": 186, "endOffset": 190}, {"referenceID": 22, "context": "A year before the producing of MHSA, the hybridization of HSA with hill climbing optimiser (HCO) and particle swarm optimization (PSO) was produced by Al-Betar & Khader [23].", "startOffset": 169, "endOffset": 173}, {"referenceID": 22, "context": "As according to Al-Betar & Khader [23], the HSA exploits the advantages of population-based methods by identifying the potential regions in the search space using the memory consideration and random consideration operator.", "startOffset": 34, "endOffset": 38}, {"referenceID": 23, "context": "The available constraints for this variant of university timetabling problem are solely based on the definition of the curricula [24].", "startOffset": 129, "endOffset": 133}, {"referenceID": 24, "context": "This study used problem definition presented in Bonutti, De Cesco, Di Gaspero, & Schaerf [25] which extended from technical description in the ITC2007 web site and the corresponding technical report from Di Gaspero et al.", "startOffset": 89, "endOffset": 93}, {"referenceID": 25, "context": "[26].", "startOffset": 0, "endOffset": 4}, {"referenceID": 26, "context": "The harmony search algorithm (HSA) is a new metaheuristic algorithm that impersonates the musical improvisation process in which a group of musicians improvise their instruments\u2019 pitch by searching for a perfect state of harmony according to audio-aesthetic standard [27].", "startOffset": 267, "endOffset": 271}, {"referenceID": 20, "context": "The equivalent terms between musical scenario and optimization problems that obtained from Al-Betar & Khader [21] are as the following:", "startOffset": 109, "endOffset": 113}, {"referenceID": 27, "context": "The HSA consists of several steps such as 1) problem formulation, 2) algorithm parameter setting, 3) random tuning for memory initialization, 4) harmony improvisation (memory consideration, random consideration, and pitch adjustment), 5) memory update, 6) performing termination, and 7) cadenza [28].", "startOffset": 295, "endOffset": 299}, {"referenceID": 20, "context": "Pseudo Code of Harmony Search Algorithm Source: [21]", "startOffset": 48, "endOffset": 52}, {"referenceID": 24, "context": "Description of CB-CTT Instances Source:[25] The problem formulation of CB-CTT was to minimize the cost of soft constraints such as room capacity, room stability, minimum working days and curriculum compactness.", "startOffset": 39, "endOffset": 43}, {"referenceID": 27, "context": "The following parameters of the HSA that identified by Geem [28] which required to solve the optimization problem are also specified in this step:", "startOffset": 60, "endOffset": 64}, {"referenceID": 28, "context": "As surveyed by Geem [29], HMS of value range from 30 to 100 was frequently used in literature.", "startOffset": 20, "endOffset": 24}, {"referenceID": 21, "context": "0, with multi pitch with eight procedures [22] such as follows: o Move-timeslot: 0< U(0 ,1 ) \u2264 0.", "startOffset": 42, "endOffset": 46}, {"referenceID": 29, "context": "The technique used to generate random HM solutions is assigning the courses by using the combination of graph heuristic that produced maximum numbers of solutions proposed by Juliana & Naimah [30] which combines saturation degree with largest degree.", "startOffset": 192, "endOffset": 196}, {"referenceID": 21, "context": "In CB-CTT the pitch adjustment operator works similar to neighborhood structures in local search-based methods into eight procedures [22] as follows:", "startOffset": 133, "endOffset": 137}, {"referenceID": 20, "context": "The repair process used here is based on a one-level backtracking process by Al-Betar & Khader [21] with some modification such as follows: a) Select an unscheduled course.", "startOffset": 95, "endOffset": 99}], "year": 2014, "abstractText": "In this paper, harmony search algorithm is applied to curriculum-based course timetabling. The implementation, specifically the process of improvisation consists of memory consideration, random consideration and pitch adjustment. In memory consideration, the value of the course number for new solution was selected from all other course number located in the same column of the Harmony Memory. This research used the highest occurrence of the course number to be scheduled in a new harmony. The remaining courses that have not been scheduled by memory consideration will go through random consideration, i.e. will select any feasible location available to be scheduled in the new harmony solution. Each course scheduled out of memory consideration is examined as to whether it should be pitch adjusted with probability of eight procedures. However, the algorithm produced results that were not comparatively better than those previously known as best solution. With proper modification in terms of the approach in this algorithm would make the algorithm perform better on curriculum-based course", "creator": "Microsoft\u00ae Office Word 2007"}}}