{"id": "1405.3396", "review": {"conference": "ICML", "VERSION": "v1", "DATE_OF_SUBMISSION": "14-May-2014", "title": "Reducing Dueling Bandits to Cardinal Bandits", "abstract": "we present algorithms for reducing the dueling boots bandits hunting problem to the conventional ( stochastic ) multi - armed bandits problem. the dueling bandits problem is an online model of learning with ordinal feedback of the form \" a is infinitely preferred to b \" ( as opposed to cardinal feedback like \" a has value 2. 5 \" ), giving it hence wide applicability in learning obtained from implicit user feedback and revealed and stated preferences. in contrast to existing algorithms for the dueling bandits detection problem, our reductions - - named $ \\ doubler $, $ \\ multisbm $ and $ \\ doublesbm $ - - provide a generic schema for translating the extensive body of known results about conventional multi - armed bandit algorithms to the dueling bandits setting. accounting for $ \\ doubler $ and $ \\ multisbm $ we prove regret upper bounds in both finite and infinite settings, and conjecture about the performance of $ \\ doublesbm $ which empirically outperforms the other two strategies as well as previous algorithms in our experiments. in addition, theoretically we provide the first almost optimal regret bound in terms of second order terms, such as documenting the differences between the values of the arms.", "histories": [["v1", "Wed, 14 May 2014 08:03:08 GMT  (132kb,D)", "http://arxiv.org/abs/1405.3396v1", null]], "reviews": [], "SUBJECTS": "cs.LG", "authors": ["nir ailon", "zohar shay karnin", "thorsten joachims"], "accepted": true, "id": "1405.3396"}, "pdf": {"name": "1405.3396.pdf", "metadata": {"source": "CRF", "title": "Reducing Dueling Bandits to Cardinal Bandits", "authors": ["Nir Ailon", "Zohar Karnin"], "emails": ["nailon@cs.technion.ac.il", "zkarnin@gmail.com", "tj@cs.cornell.edu"], "sections": [{"heading": "1 Introduction", "text": "When interacting with an online system, users reveal their preferences through the choices they make. Such a choice \u2013 often termed implicit feedback \u2013 may be the click or tap on a particular link in a web-search ranking, or watching a particular movie among a set of recommendations. Connecting to a classic body of work in econometrics and empirical work in information retrieval Joachims et al. (2007), such implicit feedback is typically viewed as an ordinal preference between alternatives (i.e., \u201cA is better than B\u201d), but it does not provide reliable cardinal valuations (i.e., \u201cA is very good, B is mediocre\u201d).\nar X\niv :1\n40 5.\n33 96\nv1 [\ncs .L\nTo formalize the problem of learning from preferences, we consider the following interactive online learning model, which we call the Utility-Based Dueling Bandits Problem (UBDB) similar to Yue et al. (2012); Yue & Joachims (2011). At each iteration t, the learning system presents two actions xt, yt \u2208 X to the user, where X is the set (either finite or infinite) of possible actions. Each of the two actions has an associated random reward (or utility) for the user, which we denote by ut and vt, respectively. The quantity ut (resp. vt) is drawn from a distribution that depends on xt (resp. yt) only. We assume these utilities are in [0, 1]. The learning system is rewarded the average utility Uavt = (ut + vt)/2 of the two actions it presents, but it does not observe this reward. Instead, it only observes the user\u2019s binary choice among the two alternative actions xt, yt, which depends on the respective utilities ut and vt. In particular, we model the observed choice as a {0, 1}-valued random variable bt distributed as\nPr[bt = 0|(ut, vt)] = \u03c6(ut, vt) Pr[bt = 1|(ut, vt)] = \u03c6(vt, ut) , (1.1)\nwhere \u03c6 : [0, 1] \u00d7 [0, 1] 7\u2192 [0, 1] is a link function. Clearly, the link function has to satisfy \u03c6(A,B)+\u03c6(B,A) = 1. Below we concentrate on linear link functions (defined in Sec. 2). The binary choice is interpreted as a stochastic preference response between the left alternative xt (if bt = 0) and the right alternative yt (if bt = 1). The utility Uav captures the overall latent user experience from the pair of alternatives. A concrete example of this UBDB game is learning for web search, where X is a set of ranking functions among which the search engine selects two for each incoming query; the search engine then presents an interleaving Chapelle et al. (2012) of the two rankings, from which it can sense a stochastic preference between the two ranking functions based on the user\u2019s clicking behavior.\nThe purpose of this paper is to show how UBDB can be reduced to the conventional (cardinal) stochastic Multi-Armed Bandit (MAB) problem1, which has been studied since 1952 Robbins (1952). In MAB, the system chooses only a single action xt \u2208 X in each round and directly observes its cardinal reward ut, which is assumed to be drawn from a latent but fixed distribution attached to xt. The set X in the traditional MAB game is of finite cardinality K. In more general settings Dani et al. (2008); Mannor & Shamir (2011), this set can be infinite but structured in some way. Dani et al. (2008), for example, assume a stochastic setting in which X is a convex, bounded subset of Rn, and the expectation \u00b5(x) of the corresponding value distribution is \u3008\u00b5, x\u3009, where \u00b5 \u2208 Rn is an unknown coefficient vector and \u3008\u00b7, \u00b7\u3009 is the inner product with respect to the standard basis. We refer to this as the linear expected utility setting. We study here both the finite setting and the infinite setting.\nMain results. We provide general reductions from UBDB to MAB. More precisely, we use a MAB strategy as a black-box for helping us play the UBDB game. The art is in exactly how to use a black-box designed for MAB in order to play UBDB. We present one method, Doubler (Section 3) which adds an extraO(log T ) factor to the expected regret function compared to that of the MAB black-box, assuming the MAB black-box\n1One armed bandit is a popular slang for slot machines in casinos, and the MAB game describes the problem faced by a gambler who can choose one machine to play at each instance.\nhas polylogarithmic (in T ) regret, where T is the time horizon. When the MAB blackbox has polynomial regret, only an extra O(1) factor is incurred. This algorithm works for infinite bandit spaces. We also present a reduction algorithm MultiSBM (Section 4) which works for finite bandit spaces and gives an O(log T ) regret, assuming the MAB black-box enjoys an O(log T ) expected regret function with some mild higher moment assumptions. These assumptions are satisfied, for example, by the seminal UCB algorithm Auer et al. (2002). Our analysis in fact shows that for sufficiently large T , the regret of MultiSBM is asymptotically identical to that of UCB not only in terms of the time horizon T but in terms of second order terms such as the differences between the values of the arms; it follows that MultiSBM is asymptotically optimal in the second order terms as well as in T . Finally, we propose a third algorithm Sparring (Section 5) which we conjecture to enjoy regret bounds comparable to those of the MAB algorithms hiding in the black boxes it uses. We base the conjecture on arguments about a related, but different problem. In experiments (Section 7) comparing our reductions with special-purpose UBDB algorithms, Sparring performs clearly the best, further supporting our conjecture.\nAll results in this extended abstract assume the linear link function (see Section 2), but we also show preliminary results for other interesting link functions in Appendix D.\nContributions in relation to previous work. While specific algorithms for specific cases of the Dueling Bandits problem already exist Yue et al. (2012); Yue & Joachims (2011, 2009), our reductions provide a general approach to solving the UBDB. In particular, this paper provides general reductions that make it possible to transfer the large body of MAB work on exploiting structure in X to the dueling case in a constructive and algorithmic way. Second, despite the generality of the reductions their regret is asymptotically comparable to the tournament elimination strategies in Yue et al. (2012); Yue & Joachims (2011) for the finite case as T \u2192\u221e, and better than the regret of the online convex optimzation algorithm of Yue & Joachims (2009) for the infinite case (albeit in a more restricted setting).\nIn our setting, the reward and feedback of the agent playing the online game are, in some sense, orthogonal to each other, or decoupled. A different type of decoupling was also considered in Avner et al.\u2019s work Avner et al. (2012), although this work cannot be compared to theirs. There is yet more work on bandit games where the algorithm plays two bandits (or more) in each iteration, e.g. Agarwal et al. Agarwal et al. (2010), although there the feedback is cardinal and not relative in each step. There is much work on learning from example pairs Herbrich et al. (2000); Freund et al. (2003); Ailon et al. (2012) as well as noisy sorting Karp & Kleinberg (2007); Feige et al. (1994), which are not the setting studied here. Finally, our results connect multi-armed bandits and online optimization to the classic econometric theory of discrete choice, with its use of preferential or choice information to recover values of goods (see Train (2009) and references therein).\nAnother important topic related to our work is that of partial monitoring games. The idea was introduced by Piccolboni & Schindelhauer (2001). The objective in partial monitoring is to choose at each round an action from some finite set of actions, and receive a reward based on some unknown function chosen by an oblivious process. The observed information is defined as some (known) function of the chosen action and the current choice of the oblivious process. One extreme setting in which\nthe observed information equals the reward captures MAB. In the other extreme, the observed information equals the entire vector of rewards (for all actions), giving rise to the so-called full information game. Our setting is a strict case of partial monitoring as it falls in neither extremes. Most papers dealing with partial monitoring either discuss non-stochastic settings or present problem-independent results. In both cases the regret is lower bounded by \u221a T , which is inapplicable to our setting (see Antos et al. (2012) for a characterization of partial monitoring problems). Barto\u0301k et al. Barto\u0301k et al. (2012) do present problem dependent bounds. Using their work, a logarithmic (in T ) bound can be deduced for the dueling bandit problem, at least in the finite case. However, the dependence on the number of arms is quadratic, whereas we present a linear one in what follows. Our algorithms are also much simpler and directly take advantage of the structure of the problem at hand."}, {"heading": "2 Definitions", "text": "The set of actions (or arms) is denoted by X . In a standard stochastic MAB (multiarmed bandit) game, each bandit x \u2208 X has an unknown associated expected utlity \u00b5(x) \u2208 [0, 1]. At each step t the algorithm chooses some xt \u2208 X and receives from \u201cnature\u201d a random utility ut \u2208 [0, 1], drawn from a distribution of expectation \u00b5(xt). This utility is viewed by the algorithm.2 The regret at time T of an algorithm is defined as R(T ) = \u2211T t=1(\u00b5(x\n\u2217) \u2212 ut). where x\u2217 is such that \u00b5(x\u2217) = maxx\u2208X \u00b5(x) (we assume the maximum is achievable). Throughout, for x \u2208 X we will let \u2206x denote \u00b5(x\u2217)\u2212 \u00b5(x) whenever we deal with MAB. (We will shortly make reference to some key results on MAB in Section 2.1.)\nIn this work we will use MAB algorithms as black boxes. To that end, we define a Singleton Bandit Machine (SBM) as a closed computational unit with an internal timer and memory. A SBM S supports three operations: reset, advance and feedback. The reset operation simply clears its state.3 The advance operation returns the next bandit to play, and feedback is used for simulating a feedback (the utility). It is assumed that advance and feedback operations are invoked in an alternating fashion. For example, if we want to use a SBM to help us play a traditional MAB game we first invoke reset(S), then invoke and set x1 \u2190 advance(S), we will play x1 against nature and observe u1 and then invoke feedback(S, u1). We then invoke and set x2 \u2190 advance(S), then we\u2019ll play x2 against nature and observe u2, then invoke feedback(S, u2) and so on. For all SBM\u2019s S that will be used in the algorithms in this work, we will only invoke the operation feedback(S, \u00b7) with values in [0, 1].\nIn the utility based dueling bandit game (UBDB), the algorithm chooses (xt, yt) \u2208 X \u00d7X at each step, and a corresponding pair of random utilities (ut, vt) \u2208 [0, 1] are given rise to, but not observed by the algorithm. We assume ut is drawn from a distribution of expectation \u00b5(xt) and vt independently from a distribution of expectation \u00b5(yt). The algorithm observes a choice variable bt \u2208 {0, 1} distributed according to the law (1.1). This random variable should be thought of as the outcome of a duel,\n2It is typically assumed that this distribution depends on xt only, but this assumption can be relaxed. 3We assume the bandit space X is universally known to all SBM\u2019s.\nor match between xt and yt. The outcome bt = 1 (resp. bt = 0) should be interpreted as \u201cyt is chosen\u2019 (resp. \u201cxt is chosen\u201d).4 The link function \u03c6, which is assumed to be known, quantitatively determines how to translate the utilities ut, vt to winning probabilities. The linear link function \u03c6lin is defined by\nPr[bt = 1|(ut, vt)] = \u03c6lin(ut, vt) := 1 + vt \u2212 ut\n2 \u2208 [0, 1] .\nThe unobserved reward is Uavt = (ut+ vt)/2, and the corresponding regret after T steps is Rav(T ) := \u2211T t=1(\u00b5(x\n\u2217)\u2212Uavt ), where x\u2217 = argmaxx\u2208X \u00b5(x). This implies that expected zero regret is achievable by setting (xt, yt) = (x\u2217, x\u2217). In practice, these two identical alternatives would be displayed as one, as would naturally happen in interleaved retrieval evaluation Chapelle et al. (2012). It should be also clear that playing (x\u2217, x\u2217) is pure exploitation, because the feedback is then an unbiased coin with zero exploratory information.\nWe also consider another form of (unobserved) utility, which is given as U choicet := ut(1 \u2212 bt) + vtbt. We call this choice-based utility, since the utility that is obtained depends on the user\u2019s choice. Accordingly, we define Rchoicet := \u00b5(x\n\u2217) \u2212 U choicet . In words, the player receives reward associated with either the left bandit or the right bandit, whichever was actually chosen. The utility U choice captures the user\u2019s experience after choosing a result. In an e-commerce system, U choice may capture conversion, namely, the monetary value of the choice. Although both utility modelings Uav and U choice are well motivated by applications, we avoid dealing with choice based utilities and regrets for the following reason: regret bounds with respect to Uav imply similar regret bounds with respect to U choice.\nObservation 2.1. Assuming a link function where u > v implies \u03c6(u, v) > 1/2, for any xt, yt, E[Rchoicet |(xt, yt)] \u2264 E[Ravt |(xt, yt)].\n(Due to lack of space, the proof can be found in Appendix E.) The observation\u2019s assumption on the link function in words is: when presented with two items, the item with the larger utility is more likely to be chosen. This clearly happens for any reasonable link function. We henceforth assume utility Uav and regretRav and will no longer make references to choice-based versions thereof."}, {"heading": "2.1 Classic Stochastic MAB: A Short Review", "text": "We review some relevant classic MAB literature. We begin with the well known UCB policy (Algorithm 1) for MAB in the finite case. The commonly known analysis of UCB provides expected regret bounds. For the finite X case, we need a less known, robust guarantee bounding the probability of playing a sub-optimal arm too often. Lemma 2.2 is implicitly proved in Auer et al. (2002). For completeness, we provide an explicit proof in Appendix A.\n4 We have just defined a two-level model in which the distribution of the random variable bt is determined by the outcome two other random variables ut, vt. For simplicity, the reader is encouraged to assume that (ut, vt) is deterministically (\u00b5(xt), \u00b5(yt)). Most technical difficulties in what follows are already captured by this simpler case.\nAlgorithm 1 UCB algorithm for MAB with |X| = K arms. Parameter \u03b1 affects tail of regret per action in X . \u2200x \u2208 X , set \u00b5\u0302x =\u221e \u2200x \u2208 X , set tx = 0 set t = 1 while true do\nlet x be the index maximizing \u00b5\u0302x + \u221a\n(\u03b1+2) ln(t) 2tx\nplay x and update \u00b5\u0302x as the average of rewards so far on action x; increment tx by 1. t\u2190 t+ 1\nend while\nLemma 2.2. AssumeX is finite. Fix a parameter \u03b1 > 0. LetH := \u2211 x\u2208X\\{x\u2217} 1/\u2206x. When running the UCB policy (Algorithm 1) with parameter \u03b1 for T rounds the expected regret is bounded by\n2(\u03b1+ 2)H ln(T ) +K \u03b1+ 2\n\u03b1 = O(\u03b1H lnT ) .\nFurthermore, lex x \u2208 X denote some suboptimal arm and let s \u2265 4\u03b1 ln(T )/\u22062x. Denote by \u03c1x(T ) the random variable counting the number of times arm x was chosen up to time T . Then Pr[\u03c1x(T ) \u2265 s] \u2264 2\u03b1 \u00b7 (s/2) \u2212\u03b1.\nFor the infinite case, we will review a well known setting and result which will later be used to highlight the usefulness of Algorithm 2 (and the ensuing Theorem 3.1). In this setting, the set X of arms is an arbitrary (infinite) convex set in Rd. Here, the player chooses at each time point a vector x \u2208 X and observes a stochastic reward with an expected value of \u3008\u00b5, x\u3009, for some unknown vector \u00b5 \u2208 Rd.5 This setting was dealt with by Dani et al. (2008). They provide an algorithm for this setting that could be thought of as linear optimization under noisy feedback. Their algorithm provides (roughly) \u221a T regret for general convex bodies and polylog(T ) regret for polytopes. Formally, for general convex bodies, they prove the following.\nLemma 2.3 (Dani et al. 2008). Algorithm CONFIDENCEBALL1 (resp. CONFIDENCEBALL2) of Dani et al. (2008), provides an expected regret ofO (\u221a dT log3 T ) (resp. O (\u221a d2T log3 T ) ) for any convex set of arms.\nIn case X is a polytope with vertex set V and there is a unique vertex v\u2217 \u2208 V achieving maxx\u2208X \u3008\u00b5, x\u3009, and any other vertex v \u2208 V satisfies the gap condition \u3008\u00b5, v\u3009 \u2264 \u3008\u00b5, v\u2217\u3009 \u2212\u2206 for some \u2206 > 0, we say we are in the \u2206-gap case.\nLemma 2.4 (Dani et al. 2008). Assume the \u2206-gap case. Algorithm CONFIDENCEBALL1 (resp. CONFIDENCEBALL2) of Dani et al. (2008), provides an expected regret of O ( \u2206\u22121d2 log3 T ) (resp. O ( \u2206\u22121d3 log3 T ) ).\n5Affine linear functions can also be dealt with by adding a coordinate fixed as 1.\nAlgorithm 2 (Doubler): Reduction for finite and infinite X with internal structure. 1: S \u2190 new SBM over X 2: L \u2190 an arbitrary singleton in X 3: i\u2190 1, t\u2190 1 4: while true do 5: reset(S) 6: for j = 1...2i do 7: choose xt uniformly from L 8: yt \u2190 advance(S) 9: play (xt, yt), observe choice bt 10: feedback(S, bt) 11: t\u2190 t+ 1 12: end for 13: L \u2190 the multi-set of arms played as yt in the last for-loop 14: i\u2190 i+ 1 15: end while"}, {"heading": "3 UBDB Strategy for Large or Structured X", "text": "In this section we consider UBDB in the case of a large or possibly infinite set of arms X , and the linear link function. The setting where X is large typically occurs when some underlying structure for X exists through which it is possible to gain information regarding one arm via queries to another. Our approach, called Doubler, is best explained by thinking of the UBDB strategy as a competition between two players, one controlling the choice of the left arm and the other, the choice of the right one. The objective of each player is to win as many rounds possible, hence intuitively, both players should play the arms with the largest approximated value. Since we are working with a stochastic environment it is not clear how to analyze a game in which both players are adaptive, and whether such a game would indeed lead to a low regret dueling match (see also Section 5 for a related discussion). For that reason, we make sure that at all times one player has a fixed stochastic strategy, which is updated infrequently.\nWe divide the time axis into exponentially growing epochs. In each epoch, the left player plays according to some fixed (stochastic) strategy which we define shortly, while the right one plays adaptively according to a strategy provided by a SBM. At the beginning of a new epoch, the distribution governing the left arm changes in a way that mimics the actions of the right arm in the previous epoch. The formal definition of Doubler is given in Algorithm 2.\nThe following theorem bounds the expected regret of Algorithm 2 as a function of the total number T of steps and the expected regret of the SBM that is used.\nTheorem 3.1. Consider a UBDB game over a set X . Assume the SBM S in Line 1 of Doubler (Algorithm 2) has an expected regret of c log\u03b1 T after T steps, for all T . Then the expected regret of Doubler is at most 2c \u03b1\u03b1+1 log\n\u03b1+1 T . If the expected regret of the SBM is bounded by some function f(T ) = \u2126(T\u03b1) (with \u03b1 > 0), then the expected regret of Doubler is at most O(f(T )).\nThe proof is deferred to Appendix B. By setting the SBM S used in Line 1 as the algorithms CONFIDENCEBALL1 or CONFIDENCEBALL2 of Dani et al. (2008), we obtain the following:\nCorollary 3.2. Consider a UBDB game over a setX . Assume that the SBM S in Line 1 of Doubler is algorithm CONFIDENCEBALL2 (resp. CONFIDENCEBALL1). If X is a compact convex set, then the expected regret of Doubler is at most O( \u221a dT log3(T ))\n(resp.O( \u221a d2T log3(T ))). In the \u2206-gap setting (see discussion leading to Lemma 2.4),\nthe expected regret is bounded by O ( \u2206\u22121d2 log4(T ) ) (resp. O ( \u2206\u22121d3 log4(T ) ) ).\nIn the finite case, one may set the SBM S to the standard UCB, and obtain:\nCorollary 3.3. Consider a UBDB game over a finite set X of cardinality K. Let \u2206i be the difference between the reward of the best arm and the i\u2019th best arm. Assume the SBM S in Line 1 of Doubler is UCB. Then the expected regret of Doubler is at most O(H log2(T )) where H := \u2211K i=2 \u2206 \u22121 i\nMemory requirement issues: A possible drawback of Doubler is its need to store the history of yt from the last epoch in memory, translating to a possible memory requirement of \u2126(T ). This situation can be avoided in many natural cases. The first is the case where X is embedded in a real linear space and the expectation \u00b5(x) is a linear function. Here, there is no need to store the entire history of choices of the left arm but rather the average arm (recall that here the arms are thought of as vectors in Rd, hence the average is well defined). Playing the average arm (as xt) instead of picking an arm uniformly from the list of chosen arm gives the same result with memory requirements equivalent to storage of one arm. In other cases (e.g., X is not even geometrically embedded) this cannot be done. Nevertheless, as long as we are in a \u2206-gap case, as T grows, the arm played as yt is the optimal one with increasingly higher probability. In more detail, if the regret incurred in a time epoch is R, then the number of times a suboptimal arm is played is at most R/\u2206. As R is polylogarithmic in T , the required space is polylogarithmic in T as well. We do not elaborate further on memory requirements and leave this as future research."}, {"heading": "4 UBDB Strategy for Unstructured X", "text": "In this section we present and analyze an alternative reduction strategy, called MultiSBM, particularly suited for the finite X case where the elements of X typically have no structure. MultiSBM will not incur an additional logarithmic factor as our previous approach did. Unlike the algorithms in Yue & Joachims (2011); Yue et al. (2012), we will avoid running an elimination tournament, but just resort to a standard MAB strategy by reduction. Denote K = |X|. The idea is to use K different SBMs in parallel, where each instance is indexed by an element in X . In step t we choose a left arm xt \u2208 X in a way that will be explained shortly. The right arm, yt is chosen according to the suggestion on the SBM indexed by xt, and the binary choice is fed back to that\nAlgorithm 3 (MultiSBM): Reduction for unstructured finite X by using K SBMs in parallel.\n1: For all x \u2208 X: Sx \u2190 new SBM over X , reset(Sx) 2: y0 \u2190 arbitrary element of X 3: t\u2190 1 4: while true do 5: xt \u2190 yt\u22121 6: yt \u2190 advance(Sxt) 7: play (xt, yt), observe choice bt 8: feedback(Sxt , bt) 9: t\u2190 t+ 1\n10: end while\nSBM. In the next round, xt+1 is set to be yt, namely, the right arm becomes the left one in the next step. Algorithm 3 describes MultiSBM exactly.\nNaively, the regret of the algorithm can be shown to be at most K times that of a single SBM. However, it turns out that the regret is in fact asymptotically competitive with that of a single SBM, without the extraK factor. Specifically, we show that the total regret is in fact dominated solely by the regret of the SBM corresponding to the arm with maximal utility. To achieve this, we assume that the SBM\u2019s implement a strategy with a certain robustness property that implies a bound not only on the expected regret, but also on the tail of the regret distribution. More precisely, an inverse polynomial tail distribution is necessary. Interestingly, the assumption is satisfied by the UCB algorithm Auer et al. (2002) (as detailed in Lemma 2.2). Recall that x\u2217 \u2208 X denotes an arm with largest valuation \u00b5(x), and that \u2206x := \u00b5(x\u2217)\u2212 \u00b5(x) for all x \u2208 X . Assume \u2206x > 0 for all x 6= x\u2217.6\nDefinition 4.1. Let Tx be the number of times a (sub-optimal) arm x \u2208 X is played when running the policy T rounds. A MAB policy is said to be \u03b1-robust when it has the following property: for all s \u2265 4\u03b1\u2206\u22122x ln(T ), it holds that Pr[Tx > s] < 2\u03b1 (s/2) \u2212\u03b1.\nRecall that as discussed in Section 2.1, in Auer et al.\u2019s (2002) classic UCB policy this property can be achieved by slightly enlarging the confidence region.\nTheorem 4.2. The total expected regret of MultiSBM (Algorithm 3) in the UBDB game is\nO ( H\u03b1 lnT +H\u03b1 ( K lnK+K ln lnT \u2212 \u2211 x 6=x\u2217 ln \u2206x )) ,\nassuming the policy of the SBMs defined in Line 1 is\u03b1-robust for\u03b1 = max(3, ln(K)/ ln ln(T )). The robustness can be ensured by choosing the UCB policy (Algorithm 1) for the SBM with parameter \u03b1.\nNote that achieving (\u03b1 = 3)-robustness requires implementing a variant of UCB with a slight modification of the confidence interval parameter in each SBM. Therefore,\n6If this is not the case, our statements still hold, yet the proof becomes slightly more technical. As there is no real additional complication to the problem under this setting, we ignore this case.\nif the horizon T is large enough so that ln lnT > (lnK)/3, then the total regret is comparable to that of UCB in the standard MAB game.\nThe proof of the theorem is deferred to Appendix C. The main idea behind the proof is showing that a certain \u201cpositive feedback loop\u201d emerges: if the expected regret incurred by the right arm at some time t is low, then there is a higher chance that x\u2217 will be played as the left arm at time t+ 1. Conversely, if any fixed arm (in particular, x\u2217) is played very often as the left arm, then the expected regret incurred by the right arm decreases rapidly."}, {"heading": "5 A Heuristic Approach", "text": "In this section we describe a heuristic called Sparring for playing UBDB, which shows extremely good performance in our experiments. Unfortunately, as of yet we were unable to prove performance bounds that explain its empirical performance. Sparring uses two SBMs, corresponding to left and right. In each round the pair of arms is chosen according to the strategies of the two corresponding SBMs. The SBM corresponding to the chosen arm receives a feedback of 1 while the other receives 0. The formal algorithm is described in Algorithm 4.\nThe intuition for this idea comes from analysis of an adversarial version of UDBD, in which it can be easily shown that the resulting expected regret of Sparring is at most a constant times the regret of the two SBMs which emulate an algorithm for adversarial MAB. (We omit the exact discussion and analysis for the adversarial counterpart of UDBD in this extended abstract.) We conjecture that the regret of Sparring is asymptotically bounded by the combined regret of the algorithms hiding in the SBM\u2019s, with (possibly) a small overhead. Proving this conjecture is especially interesting for settings in whichX is infinite and a MAB algorithm with polylogarithmic regret exists. Indeed, previous literature based on tournament elimination strategies does not apply to infinite X , and Doubler presented earlier is probably suboptimal due to the extra log-factor it incurs.\nProving the conjecture appears to be tricky due to the fact that the left (resp. right) SBM does not see a stochastic environment, because its feedback depends on nonstochastic choices made by the right (resp. left) SBM. Perhaps there exist bad settings where both strategies would be mutually \u2018stuck\u2019 in some sub-optimal state. We leave the analysis of this approach as an interesting problem for future research. Our experiments will nevertheless include Sparring."}, {"heading": "6 Notes", "text": "Lower Bound: Our results contain upper bounds for the regret of the dueling bandit problem. We note that a matching lower bound, up to logarithmic terms can be shown via a simple reduction to the MAB problem. This reduction is the reverse of the others presented here: simulate a SBM by using a UBDB solver. It is an easy exercise to obtain such a reduction whose regret w.r.t. the MAB problem is at most twice the\nAlgorithm 4 (Sparring): Reduction to two SBMs. 1: SL, SR \u2190 two new SBMs over X 2: reset(SL), reset(SR), t\u2190 1 3: while true do 4: xt \u2190 advance(SL); yt \u2190 advance(SR) 5: play (xt, yt), observe choice bt \u2208 {0, 1} 6: feedback(SL,1bt=0); feedback(SR,1bt=1) 7: t\u2190 t+ 1 8: end while\nregret of the dueling bandit problem. It follows that the same lower bounds of the classic MAB problem apply to the UBDB problem.\nAdversarial Setting: One may also consider an adversarial setting for the UBDB problem. Here, utilities of the arms that are assumed to be constant in the stochastic case are assumed to change each round in some arbitrary way. We do not elaborate on this setting due to space constraints but mention that (a) a lower bound of \u221a KT matching that of the MAB problem is valid in the UDBD setting, and (b) the Sparring algorithm, when using SBM solvers for the adversarial setting, can be shown to obtain the same regret bounds of said SBM solvers."}, {"heading": "7 Experiments", "text": "We now present several experiments comparing our algorithms with baselines consisting of the state-of-the-art INTERLEAVED FILTER (IF) Yue et al. (2012) and BEAT THE MEAN BANDIT (BTMB) Yue & Joachims (2011). Our experiments are exhaustive, as we include scenarios for which no bounds were derived (e.g. nonlinear link functions), as well as the much more general scenario in which BTMB was analyzed Yue & Joachims (2011).\nHenceforth, the set X of arms is {A,B,C,D,E, F}. For applications such as the interleaving search engines Chapelle et al. (2012), 6 arms is realistic. We considered 5 choices of the expected value function \u00b5(\u00b7) and 3 link functions78.\nlinear \u03c6(x, y) = (1 + x\u2212 y)/2 natural \u03c6(x, y) = x/(x+ y) logit \u03c6(x, y) = (1 + exp{y \u2212 x})\u22121\nName \u00b5(A) \u00b5(B) \u00b5(C) \u00b5(D) \u00b5(E) \u00b5(F ) 1good 0.8 0.2 0.2 0.2 0.2 0.2 2good 0.8 0.7 0.2 0.2 0.2 0.2 3good 0.8 0.7 0.7 0.2 0.2 0.2 arith 0.8 0.7 0.575 0.45 0.325 0.2 geom 0.8 0.7 0.512 0.374 0.274 0.2\n7To be precise, the actual expected utility vector \u00b5 was a random permutation of the one given in the table. This was done to prevent initialization bias arising from the specific implementation of the algorithms.\n8Note that in row \u2019arith\u2019, \u00b5(2)..\u00b5(6) form an arithmetic progression, and in row \u2019geom\u2019 they form a geometric progression.\nFor each 15 combinations of arm values and link function we ran all 5 algorithms IF, BTMB, MultiSBM, Doubler, and Sparring with random inputs spanning a time horizon of up to 32000.\nWe also set out to test our algorithms in a scenario defined in Yue & Joachims (2011). We refer to this setting as YJ. Unlike our setting, where choice probabilities are derived from (random) latent utilities together with a link function, in YJ an underlying unknown fixed matrix (Pxy) is assumed, where Pxy is the probability of arm x chosen given the pair (x, y). The matrix satisfies very mild constraints. Following Yue & Joachims (2011), define xy = (Pxy \u2212 Pyx)/2. The main constraint is, for some unknown total order over X , the imposition x y \u21d0\u21d2 (x, y) > 0. The optimal arm x\u2217 is maximal in the total order. The regret incurred by playing the pair (xt, yt) at time t is 12 ( x\u2217xt + x\u2217yt).\nThe BTMB algorithm Yue & Joachims (2011) proposed for YJ is, roughly speaking, a tournament elimination scheme, in which a working set of candidate arms is maintained. Arms are removed from the set whenever there is high certainty about their suboptimality. Although the YJ setting is more general than ours, our algorithms can be executed without any modification, giving rise to an interesting comparison with BTMB. For this comparison, we shall use the same matrix ( xy)x,y\u2208X as in Yue & Joachims (2011), which was empirically estimated from an operational search engine.\nA B C D E F A 0 0.05 0.05 0.04 0.11 0.11 B \u22120.05 0 0.05 0.06 0.08 0.10 C \u22120.05 \u22120.05 0 0.04 0.01 0.06 D \u22120.04 \u22120.04 \u22120.04 0 0.04 0 E \u22120.11 \u22120.08 \u22120.01 \u22120.04 0 0.01 F \u22120.11 \u22120.10 \u22120.06 0 \u22120.01 0\n(Note that x\u2217 = A B C D E F .)\nExperiment Results and Analysis Figure 1 contains the expected regrets of these described scenarios as a function of the log (to the base 2) of the time, averaged over 400 executions, with one standard deviation confidence bars. The experiments reveal some interesting results. First, the heuristic approach is superior to all others in all of the settings. Second, among the other algorithms, the top two are the algorithms IF and MultiSBM, where MultiSBM is superior in a wide variety of scenarios."}, {"heading": "8 Future work", "text": "We dealt with choice in sets of size 2. What happens in cases where the player chooses from larger sets? We also analyzed only the linear choice function. See Appendix D for an extension of the results in Section 4 to other link functions.\nBoth algorithms Doubler and MultiSBM treated the left and right sides asymmetrically. This did not allow us to consider distinct expected valuation functions for the left and right positions. 9 Algorithm Sparring is symmetric, further motivating the question of proving its performance guarantees.\n9Such a case is actually motivated in a setting where, say, the perceived user valuation of items appearing lower in the list are lower, giving rise to bias toward items appearing at the top.\nProving (or refuting) the conjecture in Section 5 regarding the regret of Sparring is an interesting open problem. Much like our proof idea for the guarantee of MultiSBM, there is clearly a positive feedback loop between the two SBM\u2019s in Sparring: the\nmore often the left (resp. right) arm is played optimally, the right (resp. left) arm would experience an environment which is closer to that of the standard MAB, and would hence incur expected regret approximately that of the SBM it implements."}, {"heading": "Acknowledgments", "text": "The authors thank anonymous reviewers for thorough and insightful reviews. This research was funded in part by NSF Awards IIS-1217686 and IIS-1247696, a Marie Curie Reintegration Grant PIRG07-GA-2010-268403, an Israel Science Foundation grant 1271/33 and a Jacobs Technion-Cornell Innovation Institute grant."}, {"heading": "A Robustness of the UCB algorithm", "text": "For completeness, we present a proof of robustness for the UCB algorithm, presented as Algorithm 1 below. Note that we did not make an effort to bound the constants in the proof. We start by presenting Chernoff\u2019s inequality providing a tail bound for estimations of variables contained in [0, 1].\nLemma A.1. Let Y1, . . . , Yt be i.i.d variables supported in [0, 1]. Then for any \u03b5 > 0 it holds that\nPr\n[ 1\nt t\u2211 i=1 Yi \u2212 E[Yi] > \u03b5\n] \u2264 e\u22122t\u03b5 2\nRecall that in our setting, there are K arms, each with an expected reward. For convenience we assume the set of bandits X is the set {1, . . . ,K} and further assume for the purpose of the analysis that arm 1 has the largest expected reward. We denote by \u2206i the difference between the reward of arm 1 and that of arm i.\nProof of Lemma 2.2. For convenience, define \u03b2 = \u03b1 + 2 where \u03b1 is the robustness parameter given as input to the algorithm. For i > 1, define\nui(t) = 2\u03b2 ln(t)/\u2206 2 i\nIf at time t, arm i where i > 1 (i.e. i is suboptimal) was chosen, one of the following must be true\n1. \u03c1i(t) < ui(t) 2. \u00b5\u0302i > \u00b5i + \u221a\n\u03b2 ln(t) 2\u03c1i(t)\n3. \u00b5\u03021 + \u221a\n\u03b2 ln(t) 2\u03c11(t) < \u00b51\nHere, \u03c1i(t), \u03c11(t) denote the number of times arms i and 1 (the optimal arm) were pulled up to time t. Indeed, if all 3 are false we have\n\u00b5\u03021 +\n\u221a \u03b2 ln(t)\n2\u03c11(t) \u2265 \u00b51 = \u00b5i + \u2206i \u2265\n\u00b5i + 2\n\u221a \u03b2 ln(t)\n2\u03c1i(t) \u2265 \u00b5\u0302i +\n\u221a \u03b2 ln(t)\n2\u03c1i(t)\nand the i\u2019th arm cannot be chosen. Hence, denoting \u03c1i(T ) the number of times arm i is queried in a total budget of T queries, we have\nE[\u03c1i(T )\u2212 ui(T )] \u2264 T\u2211\nt=ui(T )+1\nPr[(2) or (3)]\nTo bound the probability of event (2) occurring, we use Chernoff\u2019s inequality (Lemma A.1)\nPr[(2)] \u2264 Pr [ \u2203\u03c1i \u2208 [t] : \u00b5\u0302i > \u00b5i + \u221a \u03b2 ln(t)\n2\u03c1i\n] \u2264\nt \u00b7 t\u2212\u03b2 = t1\u2212\u03b2 .\nThe bound for event (3) is analogous. It follows that the probability of events (2) or (3) occurring is bounded by 2t1\u2212\u03b2 and\nE[\u03c1i(T )\u2212 ui(T )] \u2264 T\u2211\nt=ui(T )+1\n2t1\u2212\u03b2 \u2264\n2 \u03b2 \u2212 2 ( 2\u03b2 ln(T )\u2206\u22122i )2\u2212\u03b2 (A.1)\nProving the bound on the expected regret is now a matter of simple calculation\nE[R] = \u2211 i>1 E[\u2206i \u00b7 \u03c1i(T )] \u2264\n2 \u2211 i \u2206i \u03b2 \u2212 2 + \u2211 i>1 2\u03b2 ln(T )/\u2206i \u2264 2K \u03b2 \u2212 2 + 2\u03b2H ln(T )\nWe proceed to prove the high probability bounds on the number of pulls of a suboptimal arm. Denote by \u03c1si (T ) the number of times arm i was chosen starting from the time point t \u2265 s. Assuming s \u2265 2\u03b2 ln(T )\u2206\u22122i , by the same arguments leading to equation A.1 we have\nE[\u03c1si (T )\u2212 ui(T )] \u2264 2\n\u03b2 \u2212 2 s2\u2212\u03b2\nAssume that arm i was chosen at least s times for some\ns \u2265 4(\u03b2 + 2) ln(T ) \u22062i\nit follows that \u03c1s\u2212ui(T )\u22121i (T ) \u2265 ui(T ) + 1. The probability of this happening is bounded by Markov\u2019s inequality by\nPr[\u03c1i(T ) \u2265 s] \u2264 Pr [ \u03c1 s\u2212ui(T )\u22121 i (T )\u2212 ui(T ) \u2265 1 ] \u2264\nE [ \u03c1 s\u2212ui(T )\u22121 i (T )\u2212 ui(T ) ] \u2264\n2\n\u03b2 \u2212 2 (s\u2212 ui(T )\u2212 1)2\u2212\u03b2 \u2264\n2\n\u03b2 \u2212 2 (s 2 )2\u2212\u03b2 The last inequality holds since\ns \u2265 4(\u03b2 + 2) ln(T ) \u22062i \u2265 2 + 4\u03b2 ln(T ) \u22062i = 2ui(T ) + 2"}, {"heading": "B Proof of Theorem 3.1", "text": "Let B(T ) denote the supremum of the expected regret of the SBM S (defined in line1 of Algorithm 2) after T steps, over all possible utility distributions of the arm set X .\nFix a phase i in the algorithm. The length Ti of the phase is exactly 2i. For all time steps t inside the phase, the left bandit xt is drawn from some fixed distribution. Let \u00b5\u2032 denote the common expectation E[ut] = Ext [ut|xt] of the reward of the left arm in all steps t in the phase. Now, the SBM S (defined in Line 1) is playing a standard MAB\ngame over the set X with binary rewards. Let bt denote the binary reward in the t\u2019th step (within the phase). By construction,\nE[bt|vt, ut] = vt \u2212 ut + 1\n2 \u2208 [0, 1] . (B.1)\nBy conditional expectation, for all y \u2208 X ,\nE[bt|yt = y] = \u00b5(y)\u2212 \u00b5\u2032 + 1\n2 \u2208 [0, 1] . (B.2)\nNote that the arm with highest expected reward is y = x\u2217. By the definition of the bound function B(T ), the total expected regret (in the traditional MAB sense) of the SBM S in the phase is at most B(Ti) = B(2i). This means, that\nE [\u2211 t ( bt \u2212 \u00b5(x\u2217)\u2212 \u00b5\u2032 + 1 2 )] \u2264 B(2i) ,\nwhere the summation runs over t in the phase. But this clearly means, using (B.2), that\nE [\u2211 t \u00b5(yt)\u2212 \u00b5(x\u2217) 2 ] \u2264 B(2i) .\nBut notice that E[vt] = EytE[vt|yt] = E[\u00b5(yt)]. Hence,\nE [\u2211 t vt \u2212 \u00b5(x\u2217) 2 ] \u2264 B(2i) .\nIn words, this says that the expected contribution of the right arm to the regret (in the UDBD game) in phase i is at mostB(2i). It remains to bound the expected contribution to the regret of the left bandit in phase i, which is drawn by a distribution which assigns to all x \u2208 X a probability proportional to the frequency of x played as the right arm in the previous phase.10 By the principle of conditional expectation, and due to the linearity of the link function, the expected regret incurred by xt (in each step in the phase) is exactly the average expected regret contributed by the right bandit in phase i \u2212 1, and hence at most B(2i\u22121)/2i\u22121. This means that the total expected regret incurred by the left bandit in phase i is bounded by 2i(B(2i\u22121)/2i\u22121) = 2B(2i\u22121). Concluding, for a time horizon of T uniquely decomposable as 2+4+8+ \u00b7 \u00b7 \u00b7+2k+Z for some integers k \u2265 1 and 0 \u2264 Z \u2264 2k+1-1, the total expected regret is given by the following function of T :\n1/2 + 3B(2) + 3B(4) + \u00b7 \u00b7 \u00b7+ 3B(2k) +B(Z) . (B.3)\nThe theorem claim is now obtained by simple analysis of (B.3).\n10If X is infinite, to be precise we need to say that the distribution is also supported on the set of arms played on the right side in the previous phase."}, {"heading": "C Proof of Theorem 4.2", "text": "To follow the proof, it is important to understand that in MultiSBM (Algorithm 3), exactly one SBM is advanced at each step in Line 6. This means that the internal timer of each SBM may be (and usually is) strictly behind the iteration counter of the algorithm, which is measured by the variable t. Denote by \u03c1x(t) the total number of times Sx was advanced after t iterations of the algorithm, for all x \u2208 X .\nWe now assume that all coin tosses are fixed (obliviously) in advance. This allows us to discuss the regret of the SBM Sx (line 1) after T \u2032 internal steps even if in practice the value t for which \u03c1x(t) = T \u2032 might be much larger than the total number of arm pulls T , and in fact, may not even exist.\nNotice that internally, Sx sees a world in which the reward is binary, and the expected reward for bandit y \u2208 X is exactly (\u00b5(y) \u2212 \u00b5(x) + 1)/2 at each internal step. This is because when Sx is advanced, the left bandit (in the UBDB game) is identically x. It follows that in all SBMs, the suboptimalities are the same and are \u2206y/2 for arm y.\nFor x \u2208 X and integer T \u2032 > 0, let\nRx(T \u2032) =\n1\n2 \u2211 t:\u03c1x(t)\u2264T \u2032,xt=x \u2206yt\nIn words, this is the contribution of the right bandit choices to the UBDB regret at all times t for which the left bandit is chosen as x, and Sx\u2019s internal counter has not surpassed T \u2032. The expression Rx(T \u2032) , by the last discussion, also measures the expected internal regret seen by Sx after T \u2032 internal steps. Similarly, we define\nRxy(T \u2032) = #{t : \u03c1x(t) \u2264 T \u2032, xt = x, yt = y}\u2206y/2\nThis measures a part of Rx(T \u2032) for which the right bandit is y. We start with an observation expressing the regret of the entire process as a function of the different Rxy\u2019s. It will be useful to define \u03c1xy(T \u2032) = #{t : \u03c1x(t) \u2264 T \u2032, xt = x, yt = y}, so that Rxy(T \u2032) = \u03c1xy(T \u2032)\u2206y/2.\nObservation C.1. For any T \u2265 1, the total regret R(T ) of MultiSBM after T steps satisfies \u2223\u2223\u2223R(T )\u2212 2\u2211x\u2208X\u2211y\u2208X Rxy(\u03c1x(T ))\u2223\u2223\u2223 \u2264 0.5. We conclude that in order to bound the expected regret R(T ) it suffices to bound the expressions E[Rxy(\u03c1x(T ))]. By using the upper bound of \u03c1x(T ) \u2264 T , we get the trivial bound for E[R(T )] of K times the expected regret of a single machine. The main insight is to exploit the fact that typically, \u03c1x(T ) is order of lnT for suboptimal x. We begin with the observation that for any fixed x, y \u2208 X (x suboptimal), s \u2265 8\u03b1,\nPr[Rxy(T ) \u2265 (s lnT )/\u2206y] = Pr[Rxy(T ) \u2265 ((s/2) lnT )/(\u2206y/2)] = Pr[\u03c1xy(T ) \u2265 ((s/2) lnT )/(\u2206y/2)2]\n\u2264 ( (s/4) lnT )/(\u2206y/2) 2 )\u2212\u03b1 \u2264 (s lnT )\u2212\u03b1 (C.1)\nThis is immediate from the \u03b1-robustness of the SBM and the fact we choose \u03b1 > 2. For the same assumption on s and x, y and using the union bound,\nPr [ \u2203p \u2208 {0, . . . , dln lnT e} : Rxy ( ee p ) \u2265 s \u00b7 p/\u2206y ] \u2264 2s\u2212\u03b1 (C.2)\nWe now bound the quantity \u03c1x(T ) for any nonoptimal fixed x. Using the (trivial) fact that all z \u2208 X satisfy \u03c1z(T ) \u2264 T , together with the fact that SBM Sx is advanced in each iteration only if x was the right bandit in the previous one, we have that for all suboptimal x,\nPr[\u03c1x(T ) \u2265 (sK lnT )/\u22062x] \u2264 \u2211 z\u2208X Pr [Rzx(T ) \u2265 (s lnT )/\u2206x] \u2264 K/(s lnT )\u03b1, (C.3)\nwhere the rightmost inequality is by union bound and (C.1). Fix some x, y \u2208 X (x suboptimal). The last two inequalities give rise to a random variable Z defined as the minimal scalar for which we have\n\u2200T \u2032 \u2208 [e, ee, ee 2 , . . . , ee dln ln(T )e ],\n\u03c1x(T ) \u2264 (ZK lnT )/\u22062x, Rxy(T \u2032) \u2264 (Z lnT \u2032)/\u2206y By (C.2)-(C.3) we have that for all s \u2265 8\u03b1, Pr[Z \u2265 s] \u2264 2s\u2212\u03b1 + K(s lnT )\u2212\u03b1. Also, conditioned on the event that {Z \u2264 s} we have that Rxy(\u03c1x(T )) \u2264 Rsxy := s \u00b7e \u00b7 ln((sK lnT )/\u22062x)/\u2206y , which isO ( s\u2206\u22121y (ln lnT + lnK + ln s+ ln(1/\u2206x)) ) . Combining, E[Rxy(\u03c1x(T ))] is bounded above by:\nR8\u03b1\u22121xy + \u221e\u2211 i=0 R8\u03b1+ixy (2(8\u03b1+ i) \u2212\u03b1 +K((8\u03b1+ i) lnT )\u2212\u03b1) .\nFor \u03b1 = max{3, 2 + (lnK)/ ln lnT )}, it is easy to verify that the last expression converges to O(R8\u03b1xy ), hence\nE[Rxy(\u03c1x(T ))] = O ( \u03b1\u2206\u22121y (ln lnT + lnK + ln(1/\u2206x)) ) .\nConcluding, the total expected regret E[R] is at most 0.5+E[Rx\u2217+ \u2211 x,y\u2208X\\{x\u2217}Rxy], clearly proving the theorem."}, {"heading": "D Extension to more General Models", "text": "Assume the setting of Section 4. In this section we assume for simplicity that for any t and any choice of xt, yt, the utilities are deterministically ut = \u00b5(xt), vt = \u00b5(yt). In Yue & Joachims (2011), the dueling bandit problem is presented where a more relaxed assumption is made on the probabilities of the outcomes of duels. Each pair of arm x, y is assigned a parameter \u2206(x, y) such that the probability of x being chosen when dueling with y is 0.5 + \u2206(x, y). It is assumed that there exists some order over the arms and the \u2206\u2019s hold two properties.\n\u2022 (Relaxed) Stochastic Transitivity: For some \u03b3 \u2265 1 and any pair x\u2217 x y we have \u03b3\u2206(x\u2217, y) \u2265 max{\u2206(x\u2217, x),\u2206(x, y)}.\n\u2022 (Relaxed) Stochastic Triangle Inequality: For some \u03b3 \u2265 1 and any pair x\u2217 x y we have \u03b3\u2206(x\u2217, y) \u2264 \u2206(x\u2217, x) + \u2206(x, y).\nWe have analyzed MultiSBM (Algorithm 3) under the assumption that \u2206(x, y) = (\u00b5(x)\u2212 \u00b5(y))/2. It can be easliy verified that our proof holds for arbitrary \u2206\u2019s under the following assumption:\n\u2022 (Relaxed) Extended Stochastic Triangle Inequality. For some \u03b3 \u2265 1, and any pair x, y (where it does not necessarily hold that x y) it holds that \u03b3\u2206(x\u2217, y) \u2264 \u2206(x\u2217, x) + \u2206(x, y).\nThis property is clearly held for \u2206(x, y) = (\u00b5(x) \u2212 \u00b5(y))/2. However, it holds for a wider family of \u2206\u2019s. For example, it holds for \u2206(x, y) = \u00b5(x)/(\u00b5(x) + \u00b5(y)), assuming all \u00b5\u2019s are in the region [1/\u03b3, 1]. The effect of \u03b3 to the regret is given in the following theorem:\nTheorem D.1. Assume the probability for the outcome of a duel is defined according to \u2206(x, y), where \u2206 has the Relaxed Extended Stochastic Triangle Inequality with parameter \u03b3. The total expected regret of MultiSBM in the UBDB game is asymptotic to\n\u03b3H\u03b1 K ln(K) +K ln ln(T ) + \u2211 x\u2208X\\{x\u2217} ln(1/\u2206x) + ln(T )H\u03b1\nassuming the invoked MAB policy is \u03b1-robust for \u03b1 = max(3, ln(K)/ ln ln(T )).\nNotice that \u03b3 does not enter the summand of ln(T ), meaning that for large values of T , the regret is unaffected by \u03b3. We defer the proof of the theorem to the full version of the paper."}, {"heading": "E Proof of Observation 2.1", "text": "By definition,\nE[Rchoicet |(xt, yt)] = \u00b5(x\u2217)\u2212 E[U choicet |(xt, yt)] .\nBut now note that by the definition of the link function and of U choicet ,\nE[U choicet |(xt, yt)] = \u03c6(ut, vt)ut + \u03c6(vt, ut)vt \u2265 ut + vt\n2\nwhere we used the assumption that for u > v, \u03c6(u, v) > 1/2. Now notice that the expression on the right is exactly E[Uav|(xt, yt)]. Hence,\nE[Rchoicet |(xt, yt)] \u2264 \u00b5(x\u2217)\u2212 E[Uavt |(xt, yt)] = E[Ravt ] ."}], "references": [{"title": "Optimal algorithms for online convex optimization with multi-point bandit feedback", "author": ["Agarwal", "Alekh", "Dekel", "Ofer", "Xiao", "Lin"], "venue": "In COLT, pp", "citeRegEx": "Agarwal et al\\.,? \\Q2010\\E", "shortCiteRegEx": "Agarwal et al\\.", "year": 2010}, {"title": "Active learning using smooth relative regret approximations with applications", "author": ["Ailon", "Nir", "Begleiter", "Ron", "Ezra", "Esther"], "venue": "Journal of Machine Learning Research Proceedings Track,", "citeRegEx": "Ailon et al\\.,? \\Q2012\\E", "shortCiteRegEx": "Ailon et al\\.", "year": 2012}, {"title": "Toward a classification of finite partial-monitoring games", "author": ["Antos", "Andr\u00e1s", "Bart\u00f3k", "G\u00e1bor", "P\u00e1l", "D\u00e1vid", "Szepesv\u00e1ri", "Csaba"], "venue": "Theoretical Computer Science,", "citeRegEx": "Antos et al\\.,? \\Q2012\\E", "shortCiteRegEx": "Antos et al\\.", "year": 2012}, {"title": "Finite-time analysis of the multiarmed bandit problem", "author": ["Auer", "Peter", "Cesa-Bianchi", "Nicol\u00f2", "Fischer", "Paul"], "venue": "Mach. Learn.,", "citeRegEx": "Auer et al\\.,? \\Q2002\\E", "shortCiteRegEx": "Auer et al\\.", "year": 2002}, {"title": "Decoupling exploration and exploitation in multi-armed bandits", "author": ["Avner", "Orly", "Mannor", "Shie", "Shamir", "Ohad"], "venue": "In ICML,", "citeRegEx": "Avner et al\\.,? \\Q2012\\E", "shortCiteRegEx": "Avner et al\\.", "year": 2012}, {"title": "An adaptive algorithm for finite stochastic partial monitoring", "author": ["Bart\u00f3k", "G\u00e1bor", "Zolghadr", "Navid", "Szepesv\u00e1ri", "Csaba"], "venue": "arXiv preprint arXiv:1206.6487,", "citeRegEx": "Bart\u00f3k et al\\.,? \\Q2012\\E", "shortCiteRegEx": "Bart\u00f3k et al\\.", "year": 2012}, {"title": "Large-scale validation and analysis of interleaved search evaluation", "author": ["O. Chapelle", "T. Joachims", "F. Radlinski", "Yue", "Yisong"], "venue": "ACM Transactions on Information Systems (TOIS),", "citeRegEx": "Chapelle et al\\.,? \\Q2012\\E", "shortCiteRegEx": "Chapelle et al\\.", "year": 2012}, {"title": "Stochastic linear optimization under bandit feedback", "author": ["Dani", "Varsha", "Hayes", "Thomas P", "Kakade", "Sham M"], "venue": "In COLT, pp", "citeRegEx": "Dani et al\\.,? \\Q2008\\E", "shortCiteRegEx": "Dani et al\\.", "year": 2008}, {"title": "Computing with noisy information", "author": ["Feige", "Uriel", "Raghavan", "Prabhakar", "Peleg", "David", "Upfal", "Eli"], "venue": "SIAM J. Comput.,", "citeRegEx": "Feige et al\\.,? \\Q1994\\E", "shortCiteRegEx": "Feige et al\\.", "year": 1994}, {"title": "An efficient boosting algorithm for combining preferences", "author": ["Freund", "Yoav", "Iyer", "Raj D", "Schapire", "Robert E", "Singer", "Yoram"], "venue": "Journal of Machine Learning Research,", "citeRegEx": "Freund et al\\.,? \\Q2003\\E", "shortCiteRegEx": "Freund et al\\.", "year": 2003}, {"title": "Large margin rank boundaries for ordinal regression", "author": ["R Herbrich", "Graepel", "Thore", "Obermayer", "Klaus"], "venue": "Book chapter, Advances in Large Margin Classifiers,", "citeRegEx": "Herbrich et al\\.,? \\Q2000\\E", "shortCiteRegEx": "Herbrich et al\\.", "year": 2000}, {"title": "Evaluating the accuracy of implicit feedback from clicks and query reformulations in web search", "author": ["T. Joachims", "L. Granka", "Pan", "Bing", "H. Hembrooke", "F. Radlinski", "G. Gay"], "venue": "ACM Transactions on Information Systems (TOIS),", "citeRegEx": "Joachims et al\\.,? \\Q2007\\E", "shortCiteRegEx": "Joachims et al\\.", "year": 2007}, {"title": "Noisy binary search and its applications", "author": ["Karp", "Richard M", "Kleinberg", "Robert"], "venue": "In Proceedings of the eighteenth annual ACM-SIAM symposium on Discrete algorithms,", "citeRegEx": "Karp et al\\.,? \\Q2007\\E", "shortCiteRegEx": "Karp et al\\.", "year": 2007}, {"title": "From bandits to experts: On the value of sideobservations", "author": ["Mannor", "Shie", "Shamir", "Ohad"], "venue": "In NIPS, pp", "citeRegEx": "Mannor et al\\.,? \\Q2011\\E", "shortCiteRegEx": "Mannor et al\\.", "year": 2011}, {"title": "Discrete prediction games with arbitrary feedback and loss", "author": ["Piccolboni", "Antonio", "Schindelhauer", "Christian"], "venue": "In Computational Learning Theory,", "citeRegEx": "Piccolboni et al\\.,? \\Q2001\\E", "shortCiteRegEx": "Piccolboni et al\\.", "year": 2001}, {"title": "Some aspects of the sequential design of experiments", "author": ["H. Robbins"], "venue": "Bulletin of the AMS,", "citeRegEx": "Robbins,? \\Q1952\\E", "shortCiteRegEx": "Robbins", "year": 1952}, {"title": "Discrete Choice Methods with Simulation", "author": ["Train", "Keneth"], "venue": null, "citeRegEx": "Train and Keneth.,? \\Q2009\\E", "shortCiteRegEx": "Train and Keneth.", "year": 2009}, {"title": "Interactively optimizing information retrieval systems as a dueling bandits problem", "author": ["Yue", "Yisong", "T. Joachims"], "venue": "In International Conference on Machine Learning (ICML),", "citeRegEx": "Yue et al\\.,? \\Q2009\\E", "shortCiteRegEx": "Yue et al\\.", "year": 2009}, {"title": "Beat the mean bandit", "author": ["Yue", "Yisong", "Joachims", "Thorsten"], "venue": "In ICML, pp", "citeRegEx": "Yue et al\\.,? \\Q2011\\E", "shortCiteRegEx": "Yue et al\\.", "year": 2011}, {"title": "The k-armed dueling bandits problem", "author": ["Yue", "Yisong", "Broder", "Josef", "Kleinberg", "Robert", "Joachims", "Thorsten"], "venue": "J. Comput. Syst. Sci.,", "citeRegEx": "Yue et al\\.,? \\Q2012\\E", "shortCiteRegEx": "Yue et al\\.", "year": 2012}], "referenceMentions": [{"referenceID": 11, "context": "Connecting to a classic body of work in econometrics and empirical work in information retrieval Joachims et al. (2007), such implicit feedback is typically viewed as an ordinal preference between alternatives (i.", "startOffset": 97, "endOffset": 120}, {"referenceID": 17, "context": "To formalize the problem of learning from preferences, we consider the following interactive online learning model, which we call the Utility-Based Dueling Bandits Problem (UBDB) similar to Yue et al. (2012); Yue & Joachims (2011).", "startOffset": 190, "endOffset": 208}, {"referenceID": 17, "context": "To formalize the problem of learning from preferences, we consider the following interactive online learning model, which we call the Utility-Based Dueling Bandits Problem (UBDB) similar to Yue et al. (2012); Yue & Joachims (2011). At each iteration t, the learning system presents two actions xt, yt \u2208 X to the user, where X is the set (either finite or infinite) of possible actions.", "startOffset": 190, "endOffset": 231}, {"referenceID": 6, "context": "A concrete example of this UBDB game is learning for web search, where X is a set of ranking functions among which the search engine selects two for each incoming query; the search engine then presents an interleaving Chapelle et al. (2012) of the two rankings, from which it can sense a stochastic preference between the two ranking functions based on the user\u2019s clicking behavior.", "startOffset": 218, "endOffset": 241}, {"referenceID": 6, "context": "A concrete example of this UBDB game is learning for web search, where X is a set of ranking functions among which the search engine selects two for each incoming query; the search engine then presents an interleaving Chapelle et al. (2012) of the two rankings, from which it can sense a stochastic preference between the two ranking functions based on the user\u2019s clicking behavior. The purpose of this paper is to show how UBDB can be reduced to the conventional (cardinal) stochastic Multi-Armed Bandit (MAB) problem1, which has been studied since 1952 Robbins (1952). In MAB, the system chooses only a single action xt \u2208 X in each round and directly observes its cardinal reward ut, which is assumed to be drawn from a latent but fixed distribution attached to xt.", "startOffset": 218, "endOffset": 570}, {"referenceID": 6, "context": "A concrete example of this UBDB game is learning for web search, where X is a set of ranking functions among which the search engine selects two for each incoming query; the search engine then presents an interleaving Chapelle et al. (2012) of the two rankings, from which it can sense a stochastic preference between the two ranking functions based on the user\u2019s clicking behavior. The purpose of this paper is to show how UBDB can be reduced to the conventional (cardinal) stochastic Multi-Armed Bandit (MAB) problem1, which has been studied since 1952 Robbins (1952). In MAB, the system chooses only a single action xt \u2208 X in each round and directly observes its cardinal reward ut, which is assumed to be drawn from a latent but fixed distribution attached to xt. The set X in the traditional MAB game is of finite cardinality K. In more general settings Dani et al. (2008); Mannor & Shamir (2011), this set can be infinite but structured in some way.", "startOffset": 218, "endOffset": 878}, {"referenceID": 6, "context": "A concrete example of this UBDB game is learning for web search, where X is a set of ranking functions among which the search engine selects two for each incoming query; the search engine then presents an interleaving Chapelle et al. (2012) of the two rankings, from which it can sense a stochastic preference between the two ranking functions based on the user\u2019s clicking behavior. The purpose of this paper is to show how UBDB can be reduced to the conventional (cardinal) stochastic Multi-Armed Bandit (MAB) problem1, which has been studied since 1952 Robbins (1952). In MAB, the system chooses only a single action xt \u2208 X in each round and directly observes its cardinal reward ut, which is assumed to be drawn from a latent but fixed distribution attached to xt. The set X in the traditional MAB game is of finite cardinality K. In more general settings Dani et al. (2008); Mannor & Shamir (2011), this set can be infinite but structured in some way.", "startOffset": 218, "endOffset": 902}, {"referenceID": 6, "context": "A concrete example of this UBDB game is learning for web search, where X is a set of ranking functions among which the search engine selects two for each incoming query; the search engine then presents an interleaving Chapelle et al. (2012) of the two rankings, from which it can sense a stochastic preference between the two ranking functions based on the user\u2019s clicking behavior. The purpose of this paper is to show how UBDB can be reduced to the conventional (cardinal) stochastic Multi-Armed Bandit (MAB) problem1, which has been studied since 1952 Robbins (1952). In MAB, the system chooses only a single action xt \u2208 X in each round and directly observes its cardinal reward ut, which is assumed to be drawn from a latent but fixed distribution attached to xt. The set X in the traditional MAB game is of finite cardinality K. In more general settings Dani et al. (2008); Mannor & Shamir (2011), this set can be infinite but structured in some way. Dani et al. (2008), for example, assume a stochastic setting in which X is a convex, bounded subset of R, and the expectation \u03bc(x) of the corresponding value distribution is \u3008\u03bc, x\u3009, where \u03bc \u2208 R is an unknown coefficient vector and \u3008\u00b7, \u00b7\u3009 is the inner product with respect to the standard basis.", "startOffset": 218, "endOffset": 975}, {"referenceID": 1, "context": "These assumptions are satisfied, for example, by the seminal UCB algorithm Auer et al. (2002). Our analysis in fact shows that for sufficiently large T , the regret of MultiSBM is asymptotically identical to that of UCB not only in terms of the time horizon T but in terms of second order terms such as the differences between the values of the arms; it follows that MultiSBM is asymptotically optimal in the second order terms as well as in T .", "startOffset": 75, "endOffset": 94}, {"referenceID": 1, "context": "These assumptions are satisfied, for example, by the seminal UCB algorithm Auer et al. (2002). Our analysis in fact shows that for sufficiently large T , the regret of MultiSBM is asymptotically identical to that of UCB not only in terms of the time horizon T but in terms of second order terms such as the differences between the values of the arms; it follows that MultiSBM is asymptotically optimal in the second order terms as well as in T . Finally, we propose a third algorithm Sparring (Section 5) which we conjecture to enjoy regret bounds comparable to those of the MAB algorithms hiding in the black boxes it uses. We base the conjecture on arguments about a related, but different problem. In experiments (Section 7) comparing our reductions with special-purpose UBDB algorithms, Sparring performs clearly the best, further supporting our conjecture. All results in this extended abstract assume the linear link function (see Section 2), but we also show preliminary results for other interesting link functions in Appendix D. Contributions in relation to previous work. While specific algorithms for specific cases of the Dueling Bandits problem already exist Yue et al. (2012); Yue & Joachims (2011, 2009), our reductions provide a general approach to solving the UBDB.", "startOffset": 75, "endOffset": 1190}, {"referenceID": 1, "context": "These assumptions are satisfied, for example, by the seminal UCB algorithm Auer et al. (2002). Our analysis in fact shows that for sufficiently large T , the regret of MultiSBM is asymptotically identical to that of UCB not only in terms of the time horizon T but in terms of second order terms such as the differences between the values of the arms; it follows that MultiSBM is asymptotically optimal in the second order terms as well as in T . Finally, we propose a third algorithm Sparring (Section 5) which we conjecture to enjoy regret bounds comparable to those of the MAB algorithms hiding in the black boxes it uses. We base the conjecture on arguments about a related, but different problem. In experiments (Section 7) comparing our reductions with special-purpose UBDB algorithms, Sparring performs clearly the best, further supporting our conjecture. All results in this extended abstract assume the linear link function (see Section 2), but we also show preliminary results for other interesting link functions in Appendix D. Contributions in relation to previous work. While specific algorithms for specific cases of the Dueling Bandits problem already exist Yue et al. (2012); Yue & Joachims (2011, 2009), our reductions provide a general approach to solving the UBDB. In particular, this paper provides general reductions that make it possible to transfer the large body of MAB work on exploiting structure in X to the dueling case in a constructive and algorithmic way. Second, despite the generality of the reductions their regret is asymptotically comparable to the tournament elimination strategies in Yue et al. (2012); Yue & Joachims (2011) for the finite case as T \u2192\u221e, and better than the regret of the online convex optimzation algorithm of Yue & Joachims (2009) for the infinite case (albeit in a more restricted setting).", "startOffset": 75, "endOffset": 1639}, {"referenceID": 1, "context": "These assumptions are satisfied, for example, by the seminal UCB algorithm Auer et al. (2002). Our analysis in fact shows that for sufficiently large T , the regret of MultiSBM is asymptotically identical to that of UCB not only in terms of the time horizon T but in terms of second order terms such as the differences between the values of the arms; it follows that MultiSBM is asymptotically optimal in the second order terms as well as in T . Finally, we propose a third algorithm Sparring (Section 5) which we conjecture to enjoy regret bounds comparable to those of the MAB algorithms hiding in the black boxes it uses. We base the conjecture on arguments about a related, but different problem. In experiments (Section 7) comparing our reductions with special-purpose UBDB algorithms, Sparring performs clearly the best, further supporting our conjecture. All results in this extended abstract assume the linear link function (see Section 2), but we also show preliminary results for other interesting link functions in Appendix D. Contributions in relation to previous work. While specific algorithms for specific cases of the Dueling Bandits problem already exist Yue et al. (2012); Yue & Joachims (2011, 2009), our reductions provide a general approach to solving the UBDB. In particular, this paper provides general reductions that make it possible to transfer the large body of MAB work on exploiting structure in X to the dueling case in a constructive and algorithmic way. Second, despite the generality of the reductions their regret is asymptotically comparable to the tournament elimination strategies in Yue et al. (2012); Yue & Joachims (2011) for the finite case as T \u2192\u221e, and better than the regret of the online convex optimzation algorithm of Yue & Joachims (2009) for the infinite case (albeit in a more restricted setting).", "startOffset": 75, "endOffset": 1662}, {"referenceID": 1, "context": "These assumptions are satisfied, for example, by the seminal UCB algorithm Auer et al. (2002). Our analysis in fact shows that for sufficiently large T , the regret of MultiSBM is asymptotically identical to that of UCB not only in terms of the time horizon T but in terms of second order terms such as the differences between the values of the arms; it follows that MultiSBM is asymptotically optimal in the second order terms as well as in T . Finally, we propose a third algorithm Sparring (Section 5) which we conjecture to enjoy regret bounds comparable to those of the MAB algorithms hiding in the black boxes it uses. We base the conjecture on arguments about a related, but different problem. In experiments (Section 7) comparing our reductions with special-purpose UBDB algorithms, Sparring performs clearly the best, further supporting our conjecture. All results in this extended abstract assume the linear link function (see Section 2), but we also show preliminary results for other interesting link functions in Appendix D. Contributions in relation to previous work. While specific algorithms for specific cases of the Dueling Bandits problem already exist Yue et al. (2012); Yue & Joachims (2011, 2009), our reductions provide a general approach to solving the UBDB. In particular, this paper provides general reductions that make it possible to transfer the large body of MAB work on exploiting structure in X to the dueling case in a constructive and algorithmic way. Second, despite the generality of the reductions their regret is asymptotically comparable to the tournament elimination strategies in Yue et al. (2012); Yue & Joachims (2011) for the finite case as T \u2192\u221e, and better than the regret of the online convex optimzation algorithm of Yue & Joachims (2009) for the infinite case (albeit in a more restricted setting).", "startOffset": 75, "endOffset": 1786}, {"referenceID": 1, "context": "These assumptions are satisfied, for example, by the seminal UCB algorithm Auer et al. (2002). Our analysis in fact shows that for sufficiently large T , the regret of MultiSBM is asymptotically identical to that of UCB not only in terms of the time horizon T but in terms of second order terms such as the differences between the values of the arms; it follows that MultiSBM is asymptotically optimal in the second order terms as well as in T . Finally, we propose a third algorithm Sparring (Section 5) which we conjecture to enjoy regret bounds comparable to those of the MAB algorithms hiding in the black boxes it uses. We base the conjecture on arguments about a related, but different problem. In experiments (Section 7) comparing our reductions with special-purpose UBDB algorithms, Sparring performs clearly the best, further supporting our conjecture. All results in this extended abstract assume the linear link function (see Section 2), but we also show preliminary results for other interesting link functions in Appendix D. Contributions in relation to previous work. While specific algorithms for specific cases of the Dueling Bandits problem already exist Yue et al. (2012); Yue & Joachims (2011, 2009), our reductions provide a general approach to solving the UBDB. In particular, this paper provides general reductions that make it possible to transfer the large body of MAB work on exploiting structure in X to the dueling case in a constructive and algorithmic way. Second, despite the generality of the reductions their regret is asymptotically comparable to the tournament elimination strategies in Yue et al. (2012); Yue & Joachims (2011) for the finite case as T \u2192\u221e, and better than the regret of the online convex optimzation algorithm of Yue & Joachims (2009) for the infinite case (albeit in a more restricted setting). In our setting, the reward and feedback of the agent playing the online game are, in some sense, orthogonal to each other, or decoupled. A different type of decoupling was also considered in Avner et al.\u2019s work Avner et al. (2012), although this work cannot be compared to theirs.", "startOffset": 75, "endOffset": 2078}, {"referenceID": 0, "context": "Agarwal et al. Agarwal et al. (2010), although there the feedback is cardinal and not relative in each step.", "startOffset": 0, "endOffset": 37}, {"referenceID": 0, "context": "Agarwal et al. Agarwal et al. (2010), although there the feedback is cardinal and not relative in each step. There is much work on learning from example pairs Herbrich et al. (2000); Freund et al.", "startOffset": 0, "endOffset": 182}, {"referenceID": 0, "context": "Agarwal et al. Agarwal et al. (2010), although there the feedback is cardinal and not relative in each step. There is much work on learning from example pairs Herbrich et al. (2000); Freund et al. (2003); Ailon et al.", "startOffset": 0, "endOffset": 204}, {"referenceID": 0, "context": "Agarwal et al. Agarwal et al. (2010), although there the feedback is cardinal and not relative in each step. There is much work on learning from example pairs Herbrich et al. (2000); Freund et al. (2003); Ailon et al. (2012) as well as noisy sorting Karp & Kleinberg (2007); Feige et al.", "startOffset": 0, "endOffset": 225}, {"referenceID": 0, "context": "Agarwal et al. Agarwal et al. (2010), although there the feedback is cardinal and not relative in each step. There is much work on learning from example pairs Herbrich et al. (2000); Freund et al. (2003); Ailon et al. (2012) as well as noisy sorting Karp & Kleinberg (2007); Feige et al.", "startOffset": 0, "endOffset": 274}, {"referenceID": 0, "context": "Agarwal et al. Agarwal et al. (2010), although there the feedback is cardinal and not relative in each step. There is much work on learning from example pairs Herbrich et al. (2000); Freund et al. (2003); Ailon et al. (2012) as well as noisy sorting Karp & Kleinberg (2007); Feige et al. (1994), which are not the setting studied here.", "startOffset": 0, "endOffset": 295}, {"referenceID": 0, "context": "Agarwal et al. Agarwal et al. (2010), although there the feedback is cardinal and not relative in each step. There is much work on learning from example pairs Herbrich et al. (2000); Freund et al. (2003); Ailon et al. (2012) as well as noisy sorting Karp & Kleinberg (2007); Feige et al. (1994), which are not the setting studied here. Finally, our results connect multi-armed bandits and online optimization to the classic econometric theory of discrete choice, with its use of preferential or choice information to recover values of goods (see Train (2009) and references therein).", "startOffset": 0, "endOffset": 559}, {"referenceID": 0, "context": "Agarwal et al. Agarwal et al. (2010), although there the feedback is cardinal and not relative in each step. There is much work on learning from example pairs Herbrich et al. (2000); Freund et al. (2003); Ailon et al. (2012) as well as noisy sorting Karp & Kleinberg (2007); Feige et al. (1994), which are not the setting studied here. Finally, our results connect multi-armed bandits and online optimization to the classic econometric theory of discrete choice, with its use of preferential or choice information to recover values of goods (see Train (2009) and references therein). Another important topic related to our work is that of partial monitoring games. The idea was introduced by Piccolboni & Schindelhauer (2001). The objective in partial monitoring is to choose at each round an action from some finite set of actions, and receive a reward based on some unknown function chosen by an oblivious process.", "startOffset": 0, "endOffset": 726}, {"referenceID": 2, "context": "In both cases the regret is lower bounded by \u221a T , which is inapplicable to our setting (see Antos et al. (2012) for a characterization of partial monitoring problems).", "startOffset": 93, "endOffset": 113}, {"referenceID": 2, "context": "In both cases the regret is lower bounded by \u221a T , which is inapplicable to our setting (see Antos et al. (2012) for a characterization of partial monitoring problems). Bart\u00f3k et al. Bart\u00f3k et al. (2012) do present problem dependent bounds.", "startOffset": 93, "endOffset": 204}, {"referenceID": 6, "context": "In practice, these two identical alternatives would be displayed as one, as would naturally happen in interleaved retrieval evaluation Chapelle et al. (2012). It should be also clear that playing (x\u2217, x\u2217) is pure exploitation, because the feedback is then an unbiased coin with zero exploratory information.", "startOffset": 135, "endOffset": 158}, {"referenceID": 3, "context": "2 is implicitly proved in Auer et al. (2002). For completeness, we provide an explicit proof in Appendix A.", "startOffset": 26, "endOffset": 45}, {"referenceID": 7, "context": "5 This setting was dealt with by Dani et al. (2008). They provide an algorithm for this setting that could be thought of as linear optimization under noisy feedback.", "startOffset": 33, "endOffset": 52}, {"referenceID": 7, "context": "3 (Dani et al. 2008).", "startOffset": 2, "endOffset": 20}, {"referenceID": 7, "context": "3 (Dani et al. 2008). Algorithm CONFIDENCEBALL1 (resp. CONFIDENCEBALL2) of Dani et al. (2008), provides an expected regret ofO (\u221a dT log T ) (resp.", "startOffset": 3, "endOffset": 94}, {"referenceID": 7, "context": "4 (Dani et al. 2008).", "startOffset": 2, "endOffset": 20}, {"referenceID": 7, "context": "4 (Dani et al. 2008). Assume the \u2206-gap case. Algorithm CONFIDENCEBALL1 (resp. CONFIDENCEBALL2) of Dani et al. (2008), provides an expected regret of O ( \u2206\u22121d2 log T ) (resp.", "startOffset": 3, "endOffset": 117}, {"referenceID": 7, "context": "By setting the SBM S used in Line 1 as the algorithms CONFIDENCEBALL1 or CONFIDENCEBALL2 of Dani et al. (2008), we obtain the following:", "startOffset": 92, "endOffset": 111}, {"referenceID": 17, "context": "Unlike the algorithms in Yue & Joachims (2011); Yue et al. (2012), we will avoid running an elimination tournament, but just resort to a standard MAB strategy by reduction.", "startOffset": 48, "endOffset": 66}, {"referenceID": 3, "context": "Interestingly, the assumption is satisfied by the UCB algorithm Auer et al. (2002) (as detailed in Lemma 2.", "startOffset": 64, "endOffset": 83}, {"referenceID": 3, "context": "Interestingly, the assumption is satisfied by the UCB algorithm Auer et al. (2002) (as detailed in Lemma 2.2). Recall that x\u2217 \u2208 X denotes an arm with largest valuation \u03bc(x), and that \u2206x := \u03bc(x\u2217)\u2212 \u03bc(x) for all x \u2208 X . Assume \u2206x > 0 for all x 6= x\u2217.6 Definition 4.1. Let Tx be the number of times a (sub-optimal) arm x \u2208 X is played when running the policy T rounds. A MAB policy is said to be \u03b1-robust when it has the following property: for all s \u2265 4\u03b1\u2206\u22122 x ln(T ), it holds that Pr[Tx > s] < 2 \u03b1 (s/2) \u2212\u03b1. Recall that as discussed in Section 2.1, in Auer et al.\u2019s (2002) classic UCB policy this property can be achieved by slightly enlarging the confidence region.", "startOffset": 64, "endOffset": 571}, {"referenceID": 16, "context": "We now present several experiments comparing our algorithms with baselines consisting of the state-of-the-art INTERLEAVED FILTER (IF) Yue et al. (2012) and BEAT THE MEAN BANDIT (BTMB) Yue & Joachims (2011).", "startOffset": 134, "endOffset": 152}, {"referenceID": 16, "context": "We now present several experiments comparing our algorithms with baselines consisting of the state-of-the-art INTERLEAVED FILTER (IF) Yue et al. (2012) and BEAT THE MEAN BANDIT (BTMB) Yue & Joachims (2011). Our experiments are exhaustive, as we include scenarios for which no bounds were derived (e.", "startOffset": 134, "endOffset": 206}, {"referenceID": 16, "context": "We now present several experiments comparing our algorithms with baselines consisting of the state-of-the-art INTERLEAVED FILTER (IF) Yue et al. (2012) and BEAT THE MEAN BANDIT (BTMB) Yue & Joachims (2011). Our experiments are exhaustive, as we include scenarios for which no bounds were derived (e.g. nonlinear link functions), as well as the much more general scenario in which BTMB was analyzed Yue & Joachims (2011). Henceforth, the set X of arms is {A,B,C,D,E, F}.", "startOffset": 134, "endOffset": 420}, {"referenceID": 6, "context": "For applications such as the interleaving search engines Chapelle et al. (2012), 6 arms is realistic.", "startOffset": 57, "endOffset": 80}], "year": 2014, "abstractText": "We present algorithms for reducing the Dueling Bandits problem to the conventional (stochastic) Multi-Armed Bandits problem. The Dueling Bandits problem is an online model of learning with ordinal feedback of the form \u201cA is preferred to B\u201d (as opposed to cardinal feedback like \u201cA has value 2.5\u201d), giving it wide applicability in learning from implicit user feedback and revealed and stated preferences. In contrast to existing algorithms for the Dueling Bandits problem, our reductions \u2013 named Doubler, MultiSBM and Sparring \u2013 provide a generic schema for translating the extensive body of known results about conventional Multi-Armed Bandit algorithms to the Dueling Bandits setting. For Doubler and MultiSBM we prove regret upper bounds in both finite and infinite settings, and conjecture about the performance of Sparring which empirically outperforms the other two as well as previous algorithms in our experiments. In addition, we provide the first almost optimal regret bound in terms of second order terms, such as the differences between the values of the arms.", "creator": "LaTeX with hyperref package"}}}