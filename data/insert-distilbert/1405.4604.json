{"id": "1405.4604", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "19-May-2014", "title": "On the saddle point problem for non-convex optimization", "abstract": "a central challenge to many fields of science and engineering usage involves minimizing non - convex error functions over continuous, homogeneous high dimensional spaces. gradient descent or quasi - newton algebra methods are almost equally ubiquitously used to perform such minimizations, and it is often thought that clearly a main technical source of difficulty for the ability of these local learning methods to find the global minimum is the proliferation of local minima with sometimes much higher error than the global minimum. here we argue, based on results from statistical network physics, random matrix theory, and neural resource network theory, that a deeper and more profound euclidean difficulty originates from the proliferation of saddle feature points, not local minima, especially in high dimensional learning problems of practical interest. such geographic saddle points are surrounded by high degree error plateaus that rapidly can dramatically slow down learning, and give the illusory impression of the existence point of there a local minimum. motivated by these arguments, we propose proving a new algorithm, particularly the saddle - free newton method, that can rapidly escape high dimensional saddle saddle points, unlike gradient descent and quasi - newton methods. theoretically we apply this algorithm to deep neural network training, and provide preliminary numerical evidence for its superior performance.", "histories": [["v1", "Mon, 19 May 2014 04:56:30 GMT  (379kb,D)", "http://arxiv.org/abs/1405.4604v1", "11 pages, 8 figures"], ["v2", "Wed, 28 May 2014 03:05:00 GMT  (409kb,D)", "http://arxiv.org/abs/1405.4604v2", "11 pages, 8 figures"]], "COMMENTS": "11 pages, 8 figures", "reviews": [], "SUBJECTS": "cs.LG cs.NE", "authors": ["razvan pascanu", "yann n dauphin", "surya ganguli", "yoshua bengio"], "accepted": false, "id": "1405.4604"}, "pdf": {"name": "1405.4604.pdf", "metadata": {"source": "CRF", "title": "On the saddle point problem for non-convex optimization", "authors": ["Razvan Pascanu", "Yann N. Dauphin", "Surya Ganguli"], "emails": ["r.pascanu@gmail.com", "dauphiya@iro.umontreal.ca", "sganguli@standford.edu", "yoshua.bengio@umontreal.ca"], "sections": [{"heading": "1 Introduction", "text": "It is often the case that our geometric intuition, derived from our experience within a low dimensional physical world, is woefully inadequate for thinking about the geometry of typical error surfaces in high-dimensional spaces. Consider, for example, minimizing a typical, randomly chosen error function of a single scalar variable. More precisely, the error function could be a single draw of a Gaussian process (Rasmussen and Williams, 2005). Such a random error function would, with high probability over the choice of function, have many local minima (maxima), in which the gradient vanishes and the second derivative is negative (positive). However, it is highly unlikely to have a saddle point (see Figure 1 (a)), in which the gradient and the second derivative vanish. Indeed, such saddle points, being a degenerate condition, would occur with probability zero. Similarly, typical, random error functions on higher dimensional spaces of N variables are likely to have many local minima for very small N . However, as we review below, as the dimensionality N increases, local minima with high error relative to the global minimum occur with a probability that is exponentially small in N .\nIn general, consider an error function f(\u03b8) where \u03b8 is an N dimensional continuous variable. A critical point is by definition a point \u03b8 where the gradient of f(\u03b8) vanishes. All critical points of\nar X\niv :1\n40 5.\n46 04\nv1 [\ncs .L\nG ]\n1 9\nf(\u03b8) can be further characterized by the curvature of the function in its vicinity, as described by the eigenvalues of the Hessian. Note that the Hessian is symmetric and hence the eigenvalues are real numbers. The following are the four possible scenarios:\n\u2022 If all eigenvalues are non-zero and positive, then the critical point is a local minimum. \u2022 If all eigenvalues are non-zero and negative, then the critical point is a local maximum. \u2022 If the eigenvalues are non-zero and we have both positive and negative eigenvalues, then\nthe critical point is a saddle point with a min-max structure (see Figure 1 (b)). That is, if we restrict the function f to the subspace spanned by the eigenvectors corresponding to positive (negative) eigenvalues, then the saddle point is a maximum (minimum) of this restriction.\n\u2022 If the Hessian matrix is singular, then the degenerate critical point can be a saddle point, as it is, for example, for \u03b83, \u03b8 \u2208 R or for the monkey saddle (Figure 1 (a) and (c)). If it is a saddle, then, if we restrict \u03b8 to only change along the direction of singularity, the restricted function does not exhibit a minimum or a maximum; it exhibits, to second order, a plateau. When moving from one side to other of the plateau, the eigenvalue corresponding to this picked direction generically changes sign, being exactly zero at the critical point. Note that an eigenvalue of zero can also indicate the presence of a gutter structure, a degenerate minimum, maximum or saddle, where a set of connected points are the are all minimum, maximum or saddle structures of the same shape and error. In Figure 1 (d) it is shaped as a circle. The error function looks like the bottom of a wine bottle, where all points along this circle are minimum of equal value.\nA plateau is an almost flat region in some direction. This structure is given by having the eigenvalues (which describe the curvature) corresponding to the directions of the plateau be close to 0, but not exactly 0. Or, additionally, by having a large discrepancy between the norm of the eigenvalues. This large difference would make the direction of \u201crelative\u201d small eigenvalues look like flat compared to the direction of large eigenvalues.\nSaddle points are unstable under gradient descent dynamics on the error surface, as the dynamics is repelled away from the saddle by directions of negative curvature. However, this repulsion can occur slowly due to plateaus of small negative eigenvalues. A similar slow-down can occur for local minima with small positive eigenvalues. Second order methods were designed to rapidly descend local minima by rescaling gradient steps by the inverse eigenvalues. However, the Newton method does not treat saddle points appropriately; as argued below, saddle-points instead become attractive under the Newton dynamics.\nThus given the proliferation of saddle points, not local minima, in high dimensional problems, the entire theoretical justification for quasi-Newton methods, i.e. the ability to rapidly descend to the bottom of a convex local minimum, becomes less relevant in high dimensional nonconvex optimization. In this work, we propose an algorithm whose theoretical justification is motivated by ensuring rapid escape from saddle points. This algorithm leverages second order-curvature information in\na fundamentally different way than quasi-Newton methods, and also, in preliminary results, outperforms them in some high dimensional problems."}, {"heading": "1.1 The prevalence of saddle points", "text": "Here we review arguments from disparate literatures suggesting that saddle points, not local minima, provide a fundamental impediment to rapid high dimensional non-convex optimization. One line of evidence comes from statistical physics, where the nature of critical points of random Gaussian error functions on high dimensional dimensional continuous domains is studied Bray and Dean (2007); Fyodorov and Williams (2007) using replica theory, a theoretical technique for analyzing high dimensional systems with quenched disorder like spin glasses (see Parisi (2007) for a recent review). In particular, Bray and Dean (2007) counted the typical number of critical points of a random function in a finite cubic volume in N dimensional space within a range of error and index \u03b1. By definition the index \u03b1 is the fraction of negative eigenvalues of the Hessian at the critical point. Of course every such function has a unique global minimum at = min and \u03b1 = 0 and a global maximum at = max and \u03b1 = 1, where min and max do not depend strongly on the detailed realization of the random function due to concentration of measure. In Bray and Dean (2007), the authors found that any such function, over a large enough volume, has exponentially many critical points, but in the \u2212 \u03b1 plane all the critical points are overwhelmingly likely to be located on a monotonically increasing curve \u2217(\u03b1) that rises from min to max as \u03b1 ranges from 0 to 1. Indeed the probability that a critical point lies an O(1) distance off this curve, both over the choice of a critical point for a given function and over the choice of random function from the Gaussian ensemble, is exponentially small in the dimensionality N , for large N .\nIntuitively, these theoretical results indicate that critical points at any intermediate error above the global minimum min are exponentially likely to be saddle points, with the fraction of negative eigenvalues \u03b1 of the Hessian monotonically increasing with . Furthermore, any critical point with a very small fraction of negative eigenvalues is exponentially likely to occur at low error close to min. In particular, any local minimum with \u03b1 = 0 will have an error exceedingly close to that of the global minimum. Thus the optimization landscape of a random Gaussian error function has no local minima with high error, but is instead riddled with exponentially many saddle points at errors far above that of the global minimum error.\nThese results can be further understood via random matrix theory. Indeed, for a random error function in N dimensions, the Hessian at a critical point at error can be thought of as an N by N random symmetric matrix whose eigenvalue distribution depends on . Bray and Dean (2007) found that the entire eigenvalue distribution of the Hessian took the form of Wigner\u2019s famous semi-circular law (Wigner, 1958), but shifted by an amount determined by . Indeed, a completely unconstrained random symmetric matrix has a symmetric eigenvalue density on the real axis shaped like a semicircle with both mode and mean at 0. Thus any eigenvalue is positive or negative with probability 1/2. The eigenvalue distribution of the Hessian of the critical point at error is a shifted semicircle, where the shift ensures that the fraction of negative eigenvalues \u03b1 is given exactly by the solution to = \u2217(\u03b1). When the error = min, the semicircular distribution of the Hessian is shifted so far to the right that all eigenvalues are positive, corresponding to the global minimum. As the error of the critical point increases, the semicircular eigenvalue distribution shifts to the left, and the fraction of negative eigenvalues \u03b1 increases. At intermediate error , half way between min and max, the semicircular distribution of eigenvalues has its mode at 0. This implies that the highest density of eigenvalues occurs near 0, and so a typical critical point at intermediate error not only has many negative curvature directions, but also many approximate plateau directions, in which a finite fraction of eigenvalues of the Hessian lie near 0. The existence of these approximate plateau directions, in addition to the negative directions, would of course have significant implications for high dimensional non-convex optimization, in particular, dramatically slowing down gradient descent dynamics. Moreover, Fyodorov and Williams (2007) give a review of work in which qualitatively similar results are derived for random error functions superimposed on a quadratic error surface.\nBefore continuing, we note that the random matrix perspective concisely and intuitively crystalizes the striking difference between the geometry of low and high dimensional error surfaces. ForN = 1, the Hessian of a random function is a single random number, and so with overwhelming probability it will be positive or negative; the event that it is 0 is a set of measure zero. This reflects the intuition that saddle points in 1 dimension are extremely unlikely, while maxima and minima always occur.\nAlternatively, an unconstrained random Gaussian matrix inN dimensions has a probabilityO(e\u2212N ) that all of its eigenvalues are positive. This fact reflects that local minima with error far higher than the global minima are exponentially unlikely. The Hessian at a critical point with error very close to the global minimum is not a fully unconstrained random Gaussian matrix; the fact that the error is so small, shifts its eigenvalue distribution to the right, so that more eigenvalues are positive Bray and Dean (2007); Fyodorov and Williams (2007).\nThus the above work indicates that for typical, generic functions chosen from a random Gaussian ensemble of functions, local minima with high error are exponentially rare in the dimensionality of the problem, but saddle points with many negative and approximate plateau directions are exponentially likely at high error. However, are the error landscapes of practical problems of interest somehow not reflective of generic error landscapes, and therefore not riddled with similar saddle points? Although our proposed algorithm described below should be generically useful for a wide variety of problems, given that our proximal motivation is ultimately training deep neuronal networks, we review evidence from that literature that saddle points also play a prominent role in the learning dynamics.\nIn Baldi and Hornik (1989) the error surface of a single hidden layer MLP with linear units is analysed. The number of hidden units is assumed to be less than the number of inputs units. Such an error surface shows only saddle-points and no local minimum or local maximum. This result is qualitatively consistent with the observation made by Bray and Dean (2007). In fact, as long as we do not get stuck in the plateaus surrounding these saddle points, for such a model we are guaranteed to obtain the global minimum of the error. Indeed Saxe et al. (2014), analyzed the dynamics of learning in the presence of these saddle points, and showed that they arise due to scaling symmetries in the weight space of deep linear feedforward models. These scaling symmetries enabled Saxe et al. (2014) to find new exact solutions to the nonlinear dynamics of learning in deep linear networks. These learning dynamics exhibit plateaus of high error followed by abrupt transitions to better performance, and they qualitatively recapitulate aspects of the hierarchical development of semantic concepts in infants (Saxe et al., 2013).\nIn Saad and Solla (1995) the dynamics of stochastic gradient descent are analyzed for soft committee machines. The paper explores how well a student model can learn to imitate a teacher model which was randomly sampled. An important observation of this work is showing that learning goes through an initial phase of being trapped in the symmetric subspace. In other words, due to symmetries in the randomly initialized weights, the network has to traverse one or more plateaus that are caused by units with similar behaviour. Rattray et al. (1998); Inoue et al. (2003) provides further analysis, stating that the initial phase of learning is plagued with saddle point structures caused by symmetries in the weights. Intuitively, the escape from these saddle points corresponds to weight differentiation of the afferent synapses onto hidden units. Being trapped along the symmetric subspace corresponds to pairs of hidden units computing the same function on the input distribution. Exiting the symmetric subspace corresponds to hidden units learning to become different from each other, thereby specializing and learning the internal representations of the teacher neural network. Interestingly, the error function in the vicinity of the symmetric subspace has a saddle point structure, and signals that hidden unit differentiation will lower error by following directions of negative curvature. Thus first order gradient descent dynamics yields a plateau in the error because it is difficult for such dynamics to rapidly escape from the saddle point in the vicinity of the symmetric subspace by specializing hidden units.\nMizutani and Dreyfus (2010) looks at the effect of negative curvature for learning and implicitly at the effect of saddle point structures in the error surface. Their findings are similar. A proof is given where the error surface of a single layer MLP is shown to have saddle points (where the Hessian matrix is indefinite)."}, {"heading": "2 Optimization algorithms near saddle points", "text": "The above work suggests that both in typical randomly chosen high dimensional error surfaces, and neural network training error surfaces, a proliferation of saddle points with error much higher than the local minimum constitute the predominant obstruction to rapid non convex optimization. We now provide a theoretically justified algorithm to deal with this problem. We will focus on nondegenerate saddle points, namely those for which the Hessian is not exactly singular. These critical\npoints can be locally analyzed based on a unique reparametrization of the function as described by Morse\u2019s lemma (see chapter 7.3, Theorem 7.16 in Callahan (2010)).\nThis reparametrization is given by taking a Taylor expansion of the function f around the critical point. If we assume that the Hessian is not singular, then there is a neighbourhood around this critical point where this approximation is reliable and, since the first order derivatives vanish, the Taylor expansion is given by:\nf(\u03b8\u2217 + \u2206\u03b8) = f(\u03b8\u2217) + 1\n2 (\u2206\u03b8)TH\u2206\u03b8 (1)\nLet us denote by e[1], . . . , e[n\u03b8] the eigenvectors of the Hessian H and by \u03bb[1], . . . , \u03bb[n\u03b8] the corresponding eigenvalues. We can now make a change of coordinates into the space span by these eigenvectors:\n\u2206v =  12e[1]T. . . 1 2e[n\u03b8] T \u2206\u03b8 (2)\nf(\u03b8\u2217 + \u2206\u03b8) = f(\u03b8\u2217) + 1\n2 n\u03b8\u2211 i=1 \u03bb[i](e[i] T\u2206\u03b8)2 = f(\u03b8\u2217) + n\u03b8\u2211 i=1 \u03bb[i]\u2206v 2 i (3)\nFor gradient descent we can see that, as expected, the gradient points in the right direction close to a saddle point. Namely, if some eigenvalue \u03bb[i] is positive, then we move towards \u03b8\u2217 in that direction because the restriction of f to the corresponding eigenvector is f(\u03b8\u2217) + \u03bb[i]\u2206v2i , which has a minimum when vi = 0. On the other hand, if the eigenvalue is negative, then the gradient descent will move away from \u03b8\u2217 which is a maximum when restricting the loss function to the corresponding eigenvector of said eigenvalue.\nThe downside of gradient descent is not the direction, but the size of the step along each eigenvector. The step we will take, for any direction e[i], is given by \u22122\u03bb[i]\u2206vi. Because the gradients are proportional to the corresponding eigenvalues of the Hessian, the eigenvalue dictates how fast we move in each direction. Note that also, to avoid divergence, the learning rate has to be at most 1/|\u03bb[max]|. Therefore, if there is a large discrepancy between eigenvalues, then gradient descent will have to take very small steps in some directions. This means that it might takes a very long time to move away form the critical point, if the critical point is a saddle point, or to the critical point if it is a minimum.\nThe Newton method solves the slowness problem by properly rescaling the gradients in each direction with the inverse of the corresponding eigenvalue. The step we take now is given by \u2212\u2206vi. However, this approach can result in moving in the wrong direction. Specifically, if an eigenvalue is negative, then by multiplying with its inverse, the Newton method would change the sign of the gradient along this eigenvector. Instead of taking the step away from \u03b8\u2217 in the direction of negative curvature (where \u03b8\u2217 is a maximum), Newton method moves towards \u03b8\u2217. This effectively makes \u03b8\u2217 an attractor for the dynamics of the Newton method, making this algorithm converge to this unstable critical point. Therefore, while gradient descent might still escape saddle points in finite time, Newton method can not and it will converge to said saddle point.\nA trust region approach is a practical implementation of second order methods for non-convex problems, where the Hessian is damped to remove negative curvature. Damping the Hessian by adding the identity matrix times some constant \u03b1 is equivalent to adding \u03b1 to each of the eigenvalues of the Hessian. That is, we now rescale the gradients by multiplying them with 1/\u03bb[i]+\u03b1, resulting in the step \u2212 ( \u03bb[i]/\u03bb[i]+\u03b1 ) \u2206vi. In particular, to deal with negative curvature, one has to increase the damping coefficient \u03b1 enough such that even for the most negative eigenvalue \u03bb[min] we have \u03bb[min] + \u03b1 > 0. This ensures moving in a descent direction. The downside is again the step size in each direction. Adding a fixed constant to each eigenvalue makes the ratio \u03bb[i]/\u03bb[i]+\u03b1 far from 1 for most eigenvalues, especially when we have a large discrepancy between them.\nBeside damping, another approach of dealing with negative curvature for second order methods is to ignore them. This can be done regardless of the approximation of the Newton method used, for example as either a truncated Newton method or a BFGS approximation (see Nocedal and Wright (2006) chapters 4 and 7). By ignoring direction of negative curvature, we will not be able to escape saddle points, as there is no direction in which we move away from \u03b8\u2217. Damping and ignoring the directions of negative curvature are the main existing approaches to deal with negative curvature.\nNatural gradient descent is a first order method that relies on the curvature of the parameter manifold. That is, we take a step that induces a constant change in the behaviour of the model as measured by the KL-divergence between the model before taking the step and after. For example, the recently proposed Hessian-Free Optimization (Martens, 2010) was shown to be a variant of natural gradient descent (Pascanu and Bengio, 2014). The algorithm ends up doing an update similar to the Newton method, just that instead of inverting the Hessian we invert Fisher Information Matrix, F, which is positive definite by construction. It is argued in Rattray et al. (1998); Inoue et al. (2003) that natural gradient descent can address certain saddle point structures effectively. Specifically, it can resolve those saddle points arising from having units behaving very similar. In Mizutani and Dreyfus (2010), however, it is argued that natural gradient descent does also suffer when negative curvature is present. One particular known issue is the over-realizable regime, when the model is over complete. In this situations, while there exists a stationary solution \u03b8\u2217, the Fisher matrix around \u03b8\u2217 is rank deficient. Numerically, this means that the Gauss Newton direction can be (close to) orthogonal to the gradient at some distant point from \u03b8\u2217 (Mizutani and Dreyfus, 2010). A line search in this direction would fail and lead to the algorithm converging to some non-stationary point. Another weakness of natural gradient is that the residual S defined as the difference between the Hessian and the Fisher Information Matrix can be large close to certain saddle points that exhibit strong negative curvature. This means that the landscape close to these critical points can be dominated by S, meaning that the rescaling provided by F\u22121 is not optimal in all directions as it does not match the eigenvalues of the Hessian.\nThe same is true for TONGA Le Roux et al. (2007), an algorithm similar to natural gradient descent. TONGA relies on the covariance of the gradients for the rescaling factor. As these gradients vanish close to a critical point, their covariance will indicate that one needs to take much larger steps then needed close to critical points."}, {"heading": "3 Generalized trust region methods", "text": "We will refer to a straight forward extension of trust region methods as generalized trust region methods. The extension involves two simple changes of the method. The first one is that we allow to take a first order Taylor expansion of the function to minimize instead of always relying on a second order Taylor expansion as typically done in trust region methods.\nThe second change is that we replace the constraint on the norm of the step \u2206\u03b8 by a constraint on the distance between \u03b8 and \u03b8+ \u2206\u03b8. The distance measure is also not specified and can be specific to the instance of generalized trust region method used. If we define Tk(f, \u03b8,\u2206\u03b8) to indicate a k-th order Taylor series expansion of f around \u03b8 evaluated at \u03b8 + \u2206\u03b8, then we can summarize a generalized trust region as:\n\u2206\u03b8 = arg min \u2206\u03b8\nTk{f, \u03b8,\u2206\u03b8} with k \u2208 {1, 2}\ns. t. d(\u03b8, \u03b8 + \u2206\u03b8) \u2264 \u2206 (4)"}, {"heading": "4 Addressing the saddle point problem", "text": "In order to address the saddle point problem, we will look for a solution within the family of generalized trust region methods. We know that using the Hessian as a rescaling factor can result in a non-descent direction because of the negative curvature. The analysis above also suggest that correcting negative curvature by an additive term results in a suboptimal step, therefore we want the resulting step from this trust region method to not be a function of the Hessian. We therefore use a first order Taylor expansion of the loss. This means that the curvature information has to come from the constraint by picking a suitable distance measure d."}, {"heading": "4.1 Limit the influence of second order terms \u2013 Saddle-Free Newton Method", "text": "The analysis carried out for different optimization techniques states that, close to nondegenerate critical points, what we want to do is to rescale the gradient in each direction e[i] by 1/|\u03bb[i]|. This achieves the same optimal rescaling as the Newton method, while preserving the sign of the gradient and therefore avoids making saddle point attractors of the dynamics of learning. The idea of taking the absolute value of the eigenvalues of the Hessian was suggested before. See, for example, in Nocedal and Wright (2006, chapter 3.4) or in Murray (2010, chapter 4.1). However, we are not aware of any proper justification of this algorithm or even a proper detailed exploration (empirical or otherwise) of this idea.\nThe problem is that one can not simply replace H by |H|, where |H| is the matrix obtained by taking the absolute value of each eigenvalue of H, without proper justification. For example, one obvious question is: are we still optimizing the same function? While we might be able to argue that we do the right thing close to critical points, can we do the same far away from these critical points? In what follows we will provide such a justification.\nLet us consider the function we want to minimize f by employing a generalized trust region method that works on a first order approximation of f and enforces some constraint on the step taken based on some distance measure d between \u03b8 and \u03b8 + \u2206\u03b8. Since the minimum of the first order approximation of f is at infinity, we know that within this generalized trust region approach we will always jump to the border of the trust region.\nSo the proper question to ask is how far from \u03b8 can we trust our first order approximation of f . One measure of this trustfulness is given by how much the second order term of the Taylor expansion of f influences the value of the function at some point \u03b8+\u2206\u03b8. That is we want the following constraint to hold:\nd(\u03b8, \u03b8 + \u2206\u03b8) = \u2223\u2223\u2223\u2223f(\u03b8) +\u2207f\u2206\u03b8 + 12\u2206\u03b8TH\u2206\u03b8 \u2212 f(\u03b8)\u2212\u2207f\u2206\u03b8 \u2223\u2223\u2223\u2223 = 12 \u2223\u2223\u2206\u03b8TH\u2206\u03b8\u2223\u2223 \u2264 \u2206 (5)\nwhere \u2207f is the partial derivative of f with respect to \u03b8 and \u2206 \u2208 R is some some small value that indicates how much discrepancy we are willing to accept between our first order approximation of f and the second order approximation of f .Note that the distance measure d takes into account the curvature of the function.\nEquation (5) is also not easy to solve for \u2206\u03b8 in more than one dimension. If we resolve the absolute value by taking the square of the distance we get a function that is quartic in \u2206\u03b8 (the term is raised to the power 4). We address this problem by relying on the following Lemma.\nLemma 1. Let A be a nonsingular square matrix in Rn \u00d7 Rn, and x \u2208 Rn be some vector. Then it holds that |xTAx| \u2264 xT |A|x, where |A| is the matrix obtained by taking the absolute value of each of the eigenvalues of A.\nProof. Let e[1], . . . e[n] be the different eigenvectors of A and \u03bb[1], . . . \u03bb[n] the corresponding eigenvalues. We now re-write the identity by expressing the vector x in terms of these eigenvalues:\n|xTAx| = \u2223\u2223\u2223\u2223\u2223\u2211 i (xTe[i])e[i] TAx \u2223\u2223\u2223\u2223\u2223 =\n\u2223\u2223\u2223\u2223\u2223\u2211 i (xTe[i])\u03bb[i](e[i] Tx) \u2223\u2223\u2223\u2223\u2223 =\n\u2223\u2223\u2223\u2223\u2223\u2211 i \u03bb[i](x Te[i]) 2 \u2223\u2223\u2223\u2223\u2223 We can now use the triangle inequality | \u2211 i xi| \u2264 \u2211 i |xi| and get that\n|xTAx| \u2264 \u2211 i |(xTe[i])2\u03bb[i]|\n= \u2211 i (xTe[i])|\u03bb[i]|(e[i]Tx)\n= xT |A|x\nInstead of using the originally proposed distance measure, based on lemma 1, we will approximate the distance by its upper bound given by \u2206\u03b8|H|\u2206\u03b8, resulting in the following generalized trust region method:\n\u2206\u03b8 = arg min \u2206\u03b8\nf(\u03b8) +\u2207f\u2206\u03b8\ns. t. \u2206\u03b8T |H|\u2206\u03b8 \u2264 \u2206 (6)\nNote that as discussed before, the inequality constraint can be turned into a equality one as the first order approximation of f has a minimum at infinity and we always jump to the border of the trust region. Similar to Pascanu and Bengio (2014), we can use Lagrange multipliers to get the solution of this constraint optimization. This gives (up to a scalar that we fold into the learning rate) a step of the form:\n\u2206\u03b8 = \u2212\u2207f |H|\u22121 (7)\nThe algorithm is a trust region method that uses the curvature of the function to define the shape of the trust region. It allows to move further in directions of low curvature and enforces to move less in direction of high curvature. If the Hessian is positive definite the method behaves identically to the Newton method. Close to a nondegenerate critical points, it takes the optimum step, by scaling based on the eigenvalues of the Hessian which describe the geometry of the surface locally, while moving away from the critical point in the direction of negative curvature."}, {"heading": "5 Experimental results \u2013 empirical evidence for the saddle point problem", "text": "In this section we run experiments on a scaled down version of MNIST, where each input image is rescaled to be of size 10 \u00d7 10. This rescaling allows us to construct models that are small enough such that we can implement the exact Newton method and Saddle-Free Newton method, without relying on any kind of approximations.\nAs a baseline we also consider minibatch stochastic gradient descent, the de facto optimization algorithm for such models. We additionally use momentum to improve the convergence speed of this algorithm. The hyper-parameters of minibatch SGD \u2013 the learning rate, minibatch size and the momentum constant \u2013 are chosen using random search (Bergstra and Bengio, 2012). We pick the best configurations from approximately 80 different choices. The learning rate and momentum constant are sampled on a logarithmic scale, while the minibatch size is sampled from the set {1, 10, 100}. The best performing hyper-parameter values for SGD are provided in Table 1.\nDamped Newton method is a trust region method where we damp the Hessian H by adding the identity times the damping factor. No approximations are used in computing the Hessian or its inverse (beside numerical inaccuracy due to machine precision). For the Saddle-Free Newton we also damp the matrix |H|, obtained by taking the absolute value of the eigenvalues of the Hessian. At each step, for both methods, we pick the best damping coefficient among the following values: {100, 10\u22121, 10\u22122, 10\u22123, 10\u22124, 10\u22125}. We do not perform an additional line search for the step size, but rather consider a fixed learning rate of 1. Note that by searching over the damping coefficient we implicitly search for the optimum step size as well. These two methods are run in batch mode.\nThe results of these experiments are visualized in Figure 2. Figure 2 (a) looks at the minimum error reached by different algorithms as a function of the model size. The plot provides empirical\nevidence that, as the dimensionality of the problem increases, the number of saddle points also increases (exponentially so). We argue that for the larger model (50 hidden units), the likelihood of an algorithms such as SGD or Newton method to stop near a saddle point becomes higher (as the number of saddle points is much larger) and therefore we should see these algorithms perform worse in this regime. The plot confirms our intuition. We see that for the 50 hidden units case, Saddle-Free outperforms the other two methods considerably.\nFigure 2 (b) depicts the training error versus the number of epochs that the model already went through. This plot suggest that Saddle-Free behaves well not only near a critical point but also far from them, taking a reasonable large steps.\nIn Figure 2 (c) we look at the norm of the largest positive eigenvalue of the Hessian as a function of the number of training epochs for different optimization algorithms. Figure 2 (d) looks in a similar fashion at the largest negative eigenvalues of the Hessian. Both these quantities are approximated using the Power method. The plot clearly shows that initially there is a direction of negative curvature (and therefore we are bound to go near saddle points). The norm of the largest negative eigenvalue is close to that of the largest positive eigenvalue. As learning progresses, the norm of the negative eigenvalue decreases. This is caused by moving closer to a minimum. For stochastic gradient descent and Damped Newton method, however, even at convergence we still have a reasonably large negative eigenvalue, suggesting that we have actually \u201cconverged\u201d to a saddle point rather than a lo-\ncal minimum. For Saddle-Free Newton method the value of the most negative eigenvalue decreases considerably, suggesting that we are more likely to have converged to an actual local minimum."}, {"heading": "6 Conclusion", "text": "In the introduction of this work we provided a thorough literature review of works that argue for the prevalence of saddle points in large scale non-convex problems or how learning addresses negative curvature. We tried to expand this collection of results by providing an intuitive analysis of how different existing optimization techniques behave near such structures. Our analysis clearly shows that while some algorithms might not be \u201cstuck\u201d in the plateau surrounding the saddle point they do take a suboptimal step.\nThe analysis also suggests what would be the optimal step. We extend this observation, that was done prior to this work, to a proper optimization algorithm by relying on the framework of generalized trust region methods. Within this framework, at each step, we optimize a first order Taylor approximation of our function, constraint to a region within which this approximation is reliable. The size of this region (in each direction) is determined by how different the first order approximation of the function is from the second order approximation of the function.\nFrom this we derive an algorithm that we call Saddle-Free Newton method, that looks similarly to the Newton method, just that the matrix that we need to invert is obtained from the Hessian matrix by taking the absolute value of all eigenvalues. We show empirically that our claims hold on a small model trained on a scaled-down version of MNIST, where images are scaled to be 10\u00d7 10 pixels."}, {"heading": "Acknowledgments", "text": "The authors would like to acknowledge the support of the following agencies for research funding and computing support: NSERC, Calcul Que\u0301bec, Compute Canada, the Canada Research Chairs and CIFAR. We would also like to thank the developers of Theano (Bergstra et al., 2010; Bastien et al., 2012). Razvan Pascanu is supported by a DeepMind Fellowship."}], "references": [{"title": "Neural networks and principal component analysis: Learning from examples without local minima", "author": ["P. Baldi", "K. Hornik"], "venue": "Neural Networks, 2(1), 53\u201358.", "citeRegEx": "Baldi and Hornik,? 1989", "shortCiteRegEx": "Baldi and Hornik", "year": 1989}, {"title": "Theano: new features and speed improvements", "author": ["F. Bastien", "P. Lamblin", "R. Pascanu", "J. Bergstra", "I.J. Goodfellow", "A. Bergeron", "N. Bouchard", "Y. Bengio"], "venue": null, "citeRegEx": "Bastien et al\\.,? \\Q2012\\E", "shortCiteRegEx": "Bastien et al\\.", "year": 2012}, {"title": "Random search for hyper-parameter optimization", "author": ["J. Bergstra", "Y. Bengio"], "venue": "Journal of Machine Learning Research, 13, 281\u2013305.", "citeRegEx": "Bergstra and Bengio,? 2012", "shortCiteRegEx": "Bergstra and Bengio", "year": 2012}, {"title": "Theano: a CPU and GPU math expression compiler", "author": ["J. Bergstra", "O. Breuleux", "F. Bastien", "P. Lamblin", "R. Pascanu", "G. Desjardins", "J. Turian", "D. WardeFarley", "Y. Bengio"], "venue": "Proceedings of the Python for Scientific Computing Conference (SciPy).", "citeRegEx": "Bergstra et al\\.,? 2010", "shortCiteRegEx": "Bergstra et al\\.", "year": 2010}, {"title": "Statistics of critical points of gaussian fields on large-dimensional spaces", "author": ["A.J. Bray", "D.S. Dean"], "venue": "Physics Review Letter, 98, 150201.", "citeRegEx": "Bray and Dean,? 2007", "shortCiteRegEx": "Bray and Dean", "year": 2007}, {"title": "Advanced Calculus: A Geometric View", "author": ["J. Callahan"], "venue": "Undergraduate Texts in Mathematics. Springer.", "citeRegEx": "Callahan,? 2010", "shortCiteRegEx": "Callahan", "year": 2010}, {"title": "Replica symmetry breaking condition exposed by random matrix calculation of landscape complexity", "author": ["Y.V. Fyodorov", "I. Williams"], "venue": "Journal of Statistical Physics, 129(5-6), 1081\u20131116.", "citeRegEx": "Fyodorov and Williams,? 2007", "shortCiteRegEx": "Fyodorov and Williams", "year": 2007}, {"title": "On-line learning theory of soft committee machines with correlated hidden units steepest gradient descent and natural gradient descent", "author": ["M. Inoue", "H. Park", "M. Okada"], "venue": "Journal of the Physical Society of Japan, 72(4), 805\u2013810.", "citeRegEx": "Inoue et al\\.,? 2003", "shortCiteRegEx": "Inoue et al\\.", "year": 2003}, {"title": "Topmoumoute online natural gradient algorithm", "author": ["N. Le Roux", "Manzagol", "P.-A.", "Y. Bengio"], "venue": "Advances in Neural Information Processing Systems.", "citeRegEx": "Roux et al\\.,? 2007", "shortCiteRegEx": "Roux et al\\.", "year": 2007}, {"title": "Deep learning via hessian-free optimization", "author": ["J. Martens"], "venue": "International Conference in Machine Learning, pages 735\u2013742.", "citeRegEx": "Martens,? 2010", "shortCiteRegEx": "Martens", "year": 2010}, {"title": "An analysis on negative curvature induced by singularity in multi-layer neural-network learning", "author": ["E. Mizutani", "S. Dreyfus"], "venue": "Advances in Neural Information Processing Systems, pages 1669\u20131677.", "citeRegEx": "Mizutani and Dreyfus,? 2010", "shortCiteRegEx": "Mizutani and Dreyfus", "year": 2010}, {"title": "Newton-type methods", "author": ["W. Murray"], "venue": "Technical report, Department of Management Science and Engineering, Stanford University.", "citeRegEx": "Murray,? 2010", "shortCiteRegEx": "Murray", "year": 2010}, {"title": "Numerical Optimization", "author": ["J. Nocedal", "S. Wright"], "venue": "Springer.", "citeRegEx": "Nocedal and Wright,? 2006", "shortCiteRegEx": "Nocedal and Wright", "year": 2006}, {"title": "Mean field theory of spin glasses: statistics and dynamics", "author": ["G. Parisi"], "venue": "Technical Report Arxiv 0706.0094.", "citeRegEx": "Parisi,? 2007", "shortCiteRegEx": "Parisi", "year": 2007}, {"title": "Revisiting natural gradient for deep networks", "author": ["R. Pascanu", "Y. Bengio"], "venue": "International Conference on Learning Representations.", "citeRegEx": "Pascanu and Bengio,? 2014", "shortCiteRegEx": "Pascanu and Bengio", "year": 2014}, {"title": "Gaussian Processes for Machine Learning (Adaptive Computation and Machine Learning)", "author": ["C.E. Rasmussen", "C.K.I. Williams"], "venue": "The MIT Press.", "citeRegEx": "Rasmussen and Williams,? 2005", "shortCiteRegEx": "Rasmussen and Williams", "year": 2005}, {"title": "Natural Gradient Descent for On-Line Learning", "author": ["M. Rattray", "D. Saad", "S.I. Amari"], "venue": "Physical Review Letters, 81(24), 5461\u20135464.", "citeRegEx": "Rattray et al\\.,? 1998", "shortCiteRegEx": "Rattray et al\\.", "year": 1998}, {"title": "On-line learning in soft committee machines", "author": ["D. Saad", "S.A. Solla"], "venue": "Physical Review E, 52, 4225\u20134243.", "citeRegEx": "Saad and Solla,? 1995", "shortCiteRegEx": "Saad and Solla", "year": 1995}, {"title": "Learning hierarchical category structure in deep neural networks", "author": ["A. Saxe", "J. McClelland", "S. Ganguli"], "venue": "Proceedings of the 35th annual meeting of the Cognitive Science Society, pages 1271\u20131276.", "citeRegEx": "Saxe et al\\.,? 2013", "shortCiteRegEx": "Saxe et al\\.", "year": 2013}, {"title": "Exact solutions to the nonlinear dynamics of learning in deep linear neural network", "author": ["A. Saxe", "J. McClelland", "S. Ganguli"], "venue": "International Conference on Learning Representations.", "citeRegEx": "Saxe et al\\.,? 2014", "shortCiteRegEx": "Saxe et al\\.", "year": 2014}, {"title": "On the distribution of the roots of certain symmetric matrices", "author": ["E.P. Wigner"], "venue": "The Annals of Mathematics, 67(2), 325\u2013327.", "citeRegEx": "Wigner,? 1958", "shortCiteRegEx": "Wigner", "year": 1958}], "referenceMentions": [{"referenceID": 15, "context": "More precisely, the error function could be a single draw of a Gaussian process (Rasmussen and Williams, 2005).", "startOffset": 80, "endOffset": 110}, {"referenceID": 4, "context": "One line of evidence comes from statistical physics, where the nature of critical points of random Gaussian error functions on high dimensional dimensional continuous domains is studied Bray and Dean (2007); Fyodorov and Williams (2007) using replica theory, a theoretical technique for analyzing high dimensional systems with quenched disorder like spin glasses (see Parisi (2007) for a recent review).", "startOffset": 186, "endOffset": 207}, {"referenceID": 4, "context": "One line of evidence comes from statistical physics, where the nature of critical points of random Gaussian error functions on high dimensional dimensional continuous domains is studied Bray and Dean (2007); Fyodorov and Williams (2007) using replica theory, a theoretical technique for analyzing high dimensional systems with quenched disorder like spin glasses (see Parisi (2007) for a recent review).", "startOffset": 186, "endOffset": 237}, {"referenceID": 4, "context": "One line of evidence comes from statistical physics, where the nature of critical points of random Gaussian error functions on high dimensional dimensional continuous domains is studied Bray and Dean (2007); Fyodorov and Williams (2007) using replica theory, a theoretical technique for analyzing high dimensional systems with quenched disorder like spin glasses (see Parisi (2007) for a recent review).", "startOffset": 186, "endOffset": 382}, {"referenceID": 4, "context": "One line of evidence comes from statistical physics, where the nature of critical points of random Gaussian error functions on high dimensional dimensional continuous domains is studied Bray and Dean (2007); Fyodorov and Williams (2007) using replica theory, a theoretical technique for analyzing high dimensional systems with quenched disorder like spin glasses (see Parisi (2007) for a recent review). In particular, Bray and Dean (2007) counted the typical number of critical points of a random function in a finite cubic volume in N dimensional space within a range of error and index \u03b1.", "startOffset": 186, "endOffset": 440}, {"referenceID": 4, "context": "One line of evidence comes from statistical physics, where the nature of critical points of random Gaussian error functions on high dimensional dimensional continuous domains is studied Bray and Dean (2007); Fyodorov and Williams (2007) using replica theory, a theoretical technique for analyzing high dimensional systems with quenched disorder like spin glasses (see Parisi (2007) for a recent review). In particular, Bray and Dean (2007) counted the typical number of critical points of a random function in a finite cubic volume in N dimensional space within a range of error and index \u03b1. By definition the index \u03b1 is the fraction of negative eigenvalues of the Hessian at the critical point. Of course every such function has a unique global minimum at = min and \u03b1 = 0 and a global maximum at = max and \u03b1 = 1, where min and max do not depend strongly on the detailed realization of the random function due to concentration of measure. In Bray and Dean (2007), the authors found that any such function, over a large enough volume, has exponentially many critical points, but in the \u2212 \u03b1 plane all the critical points are overwhelmingly likely to be located on a monotonically increasing curve \u2217(\u03b1) that rises from min to max as \u03b1 ranges from 0 to 1.", "startOffset": 186, "endOffset": 963}, {"referenceID": 20, "context": "Bray and Dean (2007) found that the entire eigenvalue distribution of the Hessian took the form of Wigner\u2019s famous semi-circular law (Wigner, 1958), but shifted by an amount determined by .", "startOffset": 133, "endOffset": 147}, {"referenceID": 4, "context": "Bray and Dean (2007) found that the entire eigenvalue distribution of the Hessian took the form of Wigner\u2019s famous semi-circular law (Wigner, 1958), but shifted by an amount determined by .", "startOffset": 0, "endOffset": 21}, {"referenceID": 4, "context": "Bray and Dean (2007) found that the entire eigenvalue distribution of the Hessian took the form of Wigner\u2019s famous semi-circular law (Wigner, 1958), but shifted by an amount determined by . Indeed, a completely unconstrained random symmetric matrix has a symmetric eigenvalue density on the real axis shaped like a semicircle with both mode and mean at 0. Thus any eigenvalue is positive or negative with probability 1/2. The eigenvalue distribution of the Hessian of the critical point at error is a shifted semicircle, where the shift ensures that the fraction of negative eigenvalues \u03b1 is given exactly by the solution to = \u2217(\u03b1). When the error = min, the semicircular distribution of the Hessian is shifted so far to the right that all eigenvalues are positive, corresponding to the global minimum. As the error of the critical point increases, the semicircular eigenvalue distribution shifts to the left, and the fraction of negative eigenvalues \u03b1 increases. At intermediate error , half way between min and max, the semicircular distribution of eigenvalues has its mode at 0. This implies that the highest density of eigenvalues occurs near 0, and so a typical critical point at intermediate error not only has many negative curvature directions, but also many approximate plateau directions, in which a finite fraction of eigenvalues of the Hessian lie near 0. The existence of these approximate plateau directions, in addition to the negative directions, would of course have significant implications for high dimensional non-convex optimization, in particular, dramatically slowing down gradient descent dynamics. Moreover, Fyodorov and Williams (2007) give a review of work in which qualitatively similar results are derived for random error functions superimposed on a quadratic error surface.", "startOffset": 0, "endOffset": 1662}, {"referenceID": 4, "context": "The Hessian at a critical point with error very close to the global minimum is not a fully unconstrained random Gaussian matrix; the fact that the error is so small, shifts its eigenvalue distribution to the right, so that more eigenvalues are positive Bray and Dean (2007); Fyodorov and Williams (2007).", "startOffset": 253, "endOffset": 274}, {"referenceID": 4, "context": "The Hessian at a critical point with error very close to the global minimum is not a fully unconstrained random Gaussian matrix; the fact that the error is so small, shifts its eigenvalue distribution to the right, so that more eigenvalues are positive Bray and Dean (2007); Fyodorov and Williams (2007).", "startOffset": 253, "endOffset": 304}, {"referenceID": 18, "context": "These learning dynamics exhibit plateaus of high error followed by abrupt transitions to better performance, and they qualitatively recapitulate aspects of the hierarchical development of semantic concepts in infants (Saxe et al., 2013).", "startOffset": 217, "endOffset": 236}, {"referenceID": 0, "context": "In Baldi and Hornik (1989) the error surface of a single hidden layer MLP with linear units is analysed.", "startOffset": 3, "endOffset": 27}, {"referenceID": 0, "context": "In Baldi and Hornik (1989) the error surface of a single hidden layer MLP with linear units is analysed. The number of hidden units is assumed to be less than the number of inputs units. Such an error surface shows only saddle-points and no local minimum or local maximum. This result is qualitatively consistent with the observation made by Bray and Dean (2007). In fact, as long as we do not get stuck in the plateaus surrounding these saddle points, for such a model we are guaranteed to obtain the global minimum of the error.", "startOffset": 3, "endOffset": 363}, {"referenceID": 0, "context": "In Baldi and Hornik (1989) the error surface of a single hidden layer MLP with linear units is analysed. The number of hidden units is assumed to be less than the number of inputs units. Such an error surface shows only saddle-points and no local minimum or local maximum. This result is qualitatively consistent with the observation made by Bray and Dean (2007). In fact, as long as we do not get stuck in the plateaus surrounding these saddle points, for such a model we are guaranteed to obtain the global minimum of the error. Indeed Saxe et al. (2014), analyzed the dynamics of learning in the presence of these saddle points, and showed that they arise due to scaling symmetries in the weight space of deep linear feedforward models.", "startOffset": 3, "endOffset": 557}, {"referenceID": 0, "context": "In Baldi and Hornik (1989) the error surface of a single hidden layer MLP with linear units is analysed. The number of hidden units is assumed to be less than the number of inputs units. Such an error surface shows only saddle-points and no local minimum or local maximum. This result is qualitatively consistent with the observation made by Bray and Dean (2007). In fact, as long as we do not get stuck in the plateaus surrounding these saddle points, for such a model we are guaranteed to obtain the global minimum of the error. Indeed Saxe et al. (2014), analyzed the dynamics of learning in the presence of these saddle points, and showed that they arise due to scaling symmetries in the weight space of deep linear feedforward models. These scaling symmetries enabled Saxe et al. (2014) to find new exact solutions to the nonlinear dynamics of learning in deep linear networks.", "startOffset": 3, "endOffset": 792}, {"referenceID": 15, "context": "In Saad and Solla (1995) the dynamics of stochastic gradient descent are analyzed for soft committee machines.", "startOffset": 3, "endOffset": 25}, {"referenceID": 15, "context": "Rattray et al. (1998); Inoue et al.", "startOffset": 0, "endOffset": 22}, {"referenceID": 7, "context": "(1998); Inoue et al. (2003) provides further analysis, stating that the initial phase of learning is plagued with saddle point structures caused by symmetries in the weights.", "startOffset": 8, "endOffset": 28}, {"referenceID": 5, "context": "16 in Callahan (2010)).", "startOffset": 6, "endOffset": 22}, {"referenceID": 12, "context": "This can be done regardless of the approximation of the Newton method used, for example as either a truncated Newton method or a BFGS approximation (see Nocedal and Wright (2006) chapters 4 and 7).", "startOffset": 153, "endOffset": 179}, {"referenceID": 9, "context": "For example, the recently proposed Hessian-Free Optimization (Martens, 2010) was shown to be a variant of natural gradient descent (Pascanu and Bengio, 2014).", "startOffset": 61, "endOffset": 76}, {"referenceID": 14, "context": "For example, the recently proposed Hessian-Free Optimization (Martens, 2010) was shown to be a variant of natural gradient descent (Pascanu and Bengio, 2014).", "startOffset": 131, "endOffset": 157}, {"referenceID": 10, "context": "Numerically, this means that the Gauss Newton direction can be (close to) orthogonal to the gradient at some distant point from \u03b8\u2217 (Mizutani and Dreyfus, 2010).", "startOffset": 131, "endOffset": 159}, {"referenceID": 8, "context": "For example, the recently proposed Hessian-Free Optimization (Martens, 2010) was shown to be a variant of natural gradient descent (Pascanu and Bengio, 2014). The algorithm ends up doing an update similar to the Newton method, just that instead of inverting the Hessian we invert Fisher Information Matrix, F, which is positive definite by construction. It is argued in Rattray et al. (1998); Inoue et al.", "startOffset": 62, "endOffset": 392}, {"referenceID": 7, "context": "(1998); Inoue et al. (2003) that natural gradient descent can address certain saddle point structures effectively.", "startOffset": 8, "endOffset": 28}, {"referenceID": 7, "context": "(1998); Inoue et al. (2003) that natural gradient descent can address certain saddle point structures effectively. Specifically, it can resolve those saddle points arising from having units behaving very similar. In Mizutani and Dreyfus (2010), however, it is argued that natural gradient descent does also suffer when negative curvature is present.", "startOffset": 8, "endOffset": 244}, {"referenceID": 8, "context": "The same is true for TONGA Le Roux et al. (2007), an algorithm similar to natural gradient descent.", "startOffset": 30, "endOffset": 49}, {"referenceID": 14, "context": "Similar to Pascanu and Bengio (2014), we can use Lagrange multipliers to get the solution of this constraint optimization.", "startOffset": 11, "endOffset": 37}, {"referenceID": 2, "context": "The hyper-parameters of minibatch SGD \u2013 the learning rate, minibatch size and the momentum constant \u2013 are chosen using random search (Bergstra and Bengio, 2012).", "startOffset": 133, "endOffset": 160}, {"referenceID": 3, "context": "We would also like to thank the developers of Theano (Bergstra et al., 2010; Bastien et al., 2012).", "startOffset": 53, "endOffset": 98}, {"referenceID": 1, "context": "We would also like to thank the developers of Theano (Bergstra et al., 2010; Bastien et al., 2012).", "startOffset": 53, "endOffset": 98}], "year": 2017, "abstractText": "A central challenge to many fields of science and engineering involves minimizing non-convex error functions over continuous, high dimensional spaces. Gradient descent or quasi-Newton methods are almost ubiquitously used to perform such minimizations, and it is often thought that a main source of difficulty for the ability of these local methods to find the global minimum is the proliferation of local minima with much higher error than the global minimum. Here we argue, based on results from statistical physics, random matrix theory, and neural network theory, that a deeper and more profound difficulty originates from the proliferation of saddle points, not local minima, especially in high dimensional problems of practical interest. Such saddle points are surrounded by high error plateaus that can dramatically slow down learning, and give the illusory impression of the existence of a local minimum. Motivated by these arguments, we propose a new algorithm, the saddle-free Newton method, that can rapidly escape high dimensional saddle points, unlike gradient descent and quasi-Newton methods. We apply this algorithm to deep neural network training, and provide preliminary numerical evidence for its superior performance.", "creator": "LaTeX with hyperref package"}}}