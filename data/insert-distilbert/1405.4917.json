{"id": "1405.4917", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "19-May-2014", "title": "An Algebraic Hardness Criterion for Surjective Constraint Satisfaction", "abstract": "the constraint satisfaction problem ( csp ) on a relational relational set structure b is to decide, given a small set of constraints on every variables where the relations come from b, whether or not there be is a assignment to the variables satisfying all of the constraints ; the surjective csp is the variant where one decides the existence of a surjective satisfying assignment onto the universe of b. we present an algebraic condition on the polymorphism clone of b and prove that it is sufficient for the hardness of the surjective csp on a finite structure b, in the sense that this problem admits a geometric reduction from a certain fixed - structure csp. to our knowledge, this is the first result that allows one to use algebraic information from a relational structure b to infer information on the complexity hardness dependence of surjective constraint satisfaction on b. a corollary argument of our result is that, on any finite non - trivial structure having completely only essentially unary polymorphisms, bounded surjective constraint satisfaction is np - complete.", "histories": [["v1", "Mon, 19 May 2014 23:23:24 GMT  (11kb)", "https://arxiv.org/abs/1405.4917v1", null], ["v2", "Mon, 2 Jun 2014 10:29:27 GMT  (11kb)", "http://arxiv.org/abs/1405.4917v2", null]], "reviews": [], "SUBJECTS": "cs.LO cs.AI cs.CC", "authors": ["hubie chen"], "accepted": false, "id": "1405.4917"}, "pdf": {"name": "1405.4917.pdf", "metadata": {"source": "CRF", "title": "An Algebraic Hardness Criterion for Surjective Constraint Satisfaction", "authors": ["Hubie Chen"], "emails": [], "sections": [{"heading": null, "text": "ar X\niv :1\n40 5.\n49 17\nv2 [\ncs .L\nO ]"}, {"heading": "1 Introduction", "text": "The constraint satisfaction problem (CSP) is a computational problem in which one is to decide, given a set of constraints on variables, whether or not there is an assignment to the variables satisfying all of the constraints. This problem appears in many guises throughout computer science, for instance, in database theory, artificial intelligence, and the study of graph homomorphisms. One obtains a rich and natural family of problems by defining, for each relational structure B, the problem CSP(B) to be the case of the CSP where the relations used to specify constraints must come from B. An increasing literature studies the algorithmic and complexity behavior of this problem family, focusing on finite and finite-like structures [1, 12, 2]; a primary research issue is to determine which such problems are polynomial-time tractable, and which are not. To this end of classifying problems, a so-called algebraic approach has been quite fruitful [5]. In short, this approach is founded on the facts that the complexity of a problem CSP(B) depends (up to polynomial-time reducibility) only on the set of relations that are primitive positive definable from B, and that this set of relations can be derived from the clone of polymorphisms of B. Hence, the project of classifying all relational structures according to the complexity of CSP(B) can be formulated as a classification question on clones;\nthis permits the employment of algebraic notions and techniques in this project. (See the next section for formal definitions of the notions discussed in this introduction.)\nA natural variant of the CSP is the surjective CSP, where an instance is again a set of constraints, but one is to decide whether or not there is a surjective satisfying assignment to the variables. For each relational structure B, one may define SCSP(B) to be the surjective CSP on B, in analogy to the definition of CSP(B). Note that one can equivalently define SCSP(B) to be the problem of deciding, given as input a relational structure A, whether or not there is a surjective homomorphism from A to B. An early result on this problem family was the complexity classification of all two-element structures [7, Proposition 6.11], [8, Proposition 4.7]. There is recent interest in understanding the complexity of these problems, which perhaps focuses on the cases where the structure B is a graph; we refer the reader to the survey [3] for further information and pointers, and also can reference the related articles [13, 10, 11]. The introduction in the survey [3] suggests that the problems SCSP(B) \u201cseem to be very difficult to classify in terms of complexity\u201d, and that \u201cstandard methods to prove easiness or hardness fail.\u201d Indeed, in contrast to the vanilla CSP, there is no known way to reduce the complexity classification of the problems SCSP(B) to a classification of clones. In particular, there is no known result showing that the complexity of a problem SCSP(B) depends only on the relations that are primitive positive definable from B. Thus far, there has been no success in using algebraic information based on the polymorphisms of B to deduce complexity hardness consequences for the problem SCSP(B). (The claims given here are relative to the best of our knowledge).\nIn this article, we give (to our knowledge) the first result which allows one to use algebraic information from the polymorphisms of a structure B to infer information about the complexity hardness of SCSP(B). Let us assume that the structures under discussion are finite relational structures. It is known and straightforward to verify that the problem SCSP(B) polynomial-time reduces to the problem CSP(B+), where B+ denotes the expansion of B by constants [3, Section 2]. We give a sufficient condition for the problem CSP(B+) to polynomial-time reduce to the problem SCSP(B), and hence for the equivalence of these two problems (up to polynomial-time reducibility). From a high level, our sufficient condition requires a certain relationship between the diagonal and the image of an operation, for each operation in the polymorphism clone of B. Any structure B whose polymorphisms are all essentially unary satisfies our sufficient condition, and a corollary of our main theorem is that, for any such structure B (having a non-trivial universe), the problem SCSP(B) is NP-complete. In the classification of two-element structures [7, Proposition 6.11], each structure on which SCSP(B) is proved NP-complete has only essentially unary polymorphisms (this can be inferred from existing results [6, Theorem 5.1]). Hence, the just-named corollary yields a new algebraic proof of the hardness results needed for this classification; we find this proof to be a desirable, concise alternative to the relational argumentation carried out in previously known proofs of this classification [7, Proposition 6.11], [8, Proposition 4.7].\nWe hope that our result might lead to further interaction between the study of surjective constraint satisfaction and universal algebra, and in particular that the techniques that we present might be used to prove new hardness results or to simplify known hardness proofs."}, {"heading": "2 Preliminaries", "text": "For a natural number n, we use n to denote the set {1, . . . , n}. We use \u2118(B) to denote the power set of a set B."}, {"heading": "2.1 Logic and computational problems", "text": "We make basic use of the syntax and semantics of relational first-order logic. A signature is a set of relation symbols; each relation symbol R has an associated arity (a natural number), denoted by ar(R). A structure B over signature \u03c3 consists of a universe B which is a set, and an interpretation RB \u2286 Bar(R) for each relation symbol R \u2208 \u03c3. In this article, we assume that signatures under discussion are finite, and focus on finite structures; a structure is finite if its universe is finite. When B is a structure over signature \u03c3, we define B+ to be the expansion of B \u201cby constants\u201d, that is, the expansion which is defined on signature \u03c3 \u222a {Cb | b \u2208 B}, where each Cb has unary arity and is assumed not to be in \u03c3, and where CB +\nb = {b}. By an atom, we refer to a formula of the form R(v1, . . . , vk) where R is a relation symbol, k = ar(R), and the vi are variables; by a variable equality, we refer to a formula of the form u = v where u and v are variables. A pp-formula (short for primitive positive formula) is a formula built using atoms, variable equalities, conjunction (\u2227), and existential quantification (\u2203). A quantifier-free pp-formula is a pp-formula that does not contain existential quantification, that is, a pp-formula that is a conjunction of atoms and variable equalities. A relation P \u2286 Bm is pp-definable over a structure B if there exists a pp-formula \u03c8(x1, . . . , xm) such that a tuple (b1, . . . , bm) is in P if and only if B, b1, . . . , bm |= \u03c8; when such a ppformula exists, it is called a pp-definition of P over B.\nWe now define the computational problems to be studied. For each structure B, define CSP(B) to be the problem of deciding, given a conjunction \u03c6 of atoms (over the signature of B), whether or not there is a map f to B defined on the variables of \u03c6 such that B, f |= \u03c6. For each structure B, define SCSP(B) to be the problem of deciding, given a pair (U, \u03c6) where U is a set of variables and \u03c6 is a conjunction of atoms (over the signature of B) with variables from U , whether or not there is a surjective map f : U \u2192 B such that B, f |= \u03c6.\nNote that these two problems are sometimes formulated as relational homomorphism problems; for example, one can define SCSP(B) as the problem of deciding, given a structure A over the signature of B, whether or not there is a surjective homomorphism from A to B. This is an equivalent formulation: an instance (U, \u03c6) of SCSP(B) can be translated naturally to the structure A with universe U and where (u1, . . . , uk) \u2208 R\nA if and only if R(u1, . . . , uk) is present in \u03c6; this structure A admits a surjective homomorphism to B if and only if (U, \u03c6) is a yes instance of SCSP(B) as we have defined it. One can also naturally invert this passage, to translate from the homomorphism formulation to ours. Let us remark that in our formulation of SCSP(B), when (U, \u03c6) is an instance, it is permitted that U contain variables that are not present in \u03c6; indeed, whether or not the instance is a yes instance may be sensitive to the exact number of such variables, and this is why this variable set is given explicitly.\nWe now make a simple observation which essentially says that one could alternatively define SCSP(B) by allowing the formula \u03c6 to be a quantifier-free pp-formula, as variable equalities may be efficiently eliminated in a way that preserves the existence of a surjective satisfying assignment.\nProposition 2.1 There exists a polynomial-time algorithm that, given a pair (W,\u03c6) where \u03c6 is a quantifierfree pp-formula with variables from W , outputs a pair (W \u2032, \u03c6\u2032) where \u03c6\u2032 is a conjunction of atoms with variables from W \u2032 and having the following property: for any structure B (whose signature contains the relation symbols present in \u03c6), there exists a surjective map f : W \u2192 B such that B, f |= \u03c6 if and only if there exists a surjective map f \u2032 :W \u2032 \u2192 B such that B, f \u2032 |= \u03c6\u2032.\nProof. The algorithm repeatedly eliminates variable equalities one at a time, until no more exist. Precisely, given a pair (W,\u03c6), it iterates the following two steps as long as \u03c6 contains a variable equality. The first step is to simply obtain \u03c6\u2032 by removing from \u03c6 all variable equalities u = u that equate the same variable,\nand then replace (W,\u03c6) by (W,\u03c6\u2032). The second step is to check if \u03c6 contains a variable equality u = v between two different variables; if so, the algorithm picks such an equality u = v, obtains \u03c6\u2032 by replacing all instances of v with u, and then replaces (W,\u03c6) by (W \\ {v}, \u03c6\u2032). The output of the algorithm is the final value of (W,\u03c6). It is straightforwardly verified that this final value has the desired property (by checking that each of the two steps preserve the property)."}, {"heading": "2.2 Algebra", "text": "All operations under consideration are assumed to be of finite arity greater than or equal to 1. We use image(f) to denote the image of an operation f . The diagonal of an operation f : Bk \u2192 B, denoted by f\u0302 , is the unary operation defined by f\u0302(b) = f(b, . . . , b). Although not the usual definition, it is correct to say that an operation f : Bk \u2192 B is essentially unary if and only if there exists i \u2208 k such that f(b1, . . . , bk) = f\u0302(bi).\nWhen t1, . . . , tk are tuples on B having the same arity m and f : Bk \u2192 B is an operation, the tuple f(t1, . . . , tk) is the arity m tuple obtained by applying f coordinatewise. The entries of a tuple t of arity m are denoted by t = (t1, . . . , tm). Let P \u2286 Bm be a relation, and let f : Bk \u2192 B be an operation; we say that f is a polymorphism of P or that P is preserved by f if for any choice of k tuples t1, . . . , tk \u2208 P , it holds that f(t1, . . . , tk) \u2208 P . An operation f : Bk \u2192 B is a polymorphism of a structure B if f is a polymorphism of each relation of B; we use Pol(B) to denote the set of all polymorphisms of B. It is known that, for any structure B, the set Pol(B) is a clone, which is a set of operations that contains all projections and is closed under composition.\nWe will make use of the following characterization of pp-definability relative to a structure B.\nTheorem 2.2 [9, 4] A non-empty relation P \u2286 Bm is pp-definable over a finite structure B if and only if each operation f \u2208 Pol(B) is a polymorphism of P ."}, {"heading": "3 Hardness result", "text": "Throughout this section, B will be a finite set; we set n = |B| and use b\u22171, . . . , b \u2217 n to denote a fixed enumeration of the elements of B.\nWe give a complexity hardness result on SCSP(B) under the assumption that the polymorphism clone of B satisfies a particular property, which we now define. We say that a clone C on a setB is diagonal-cautious if there exists a map G : Bn \u2192 \u2118(B) such that:\n\u2022 for each operation f \u2208 C , it holds that image(f) \u2286 G(f\u0302 (b\u22171), . . . , f\u0302(b \u2217 n)), and\n\u2022 for each tuple (b1, . . . , bn) \u2208 Bn, if {b1, . . . , bn} 6= B, then G(b1, . . . , bn) 6= B.\nRoughly speaking, this condition yields that, when the diagonal of an operation f \u2208 C is not surjective, then the image of f is contained in a proper subset of B that is given by G as a function of f\u0302 .\nExample 3.1 When a clone consists only of essentially unary operations, it is diagonal-cautious via the map G(b1, . . . , bn) = {b1, . . . , bn}, as for an essentially unary operation f , it holds that image(f) \u2286 {f\u0302(b\u22171), . . . , f\u0302(b \u2217 n)} = image(f\u0302).\nExample 3.2 When each operation in a clone has a surjective diagonal, the clone is diagonal-cautious via the map G given in the previous example.\nThe following lemma is the key to our hardness result; it provides a quantifier-free pp-formula which will be used as a gadget in the hardness proof.\nLemma 3.3 Suppose that B is a finite structure whose universe B has size strictly greater than 1, and suppose that Pol(B) is diagonal-cautious viaG. There exists a quantifier-free pp-formula \u03c8(v1, . . . , vn, x, y1, . . . , ym) such that:\n(1) If it holds that B, b1, . . . , bn, c, d1, . . . , dm |= \u03c8, then b1, . . . , bn, c, d1, . . . , dm \u2208 G(b1, . . . , bn).\n(2) For each c \u2208 B, it holds that B, b\u22171, . . . , b \u2217 n, c |= \u2203y1 . . . \u2203ym\u03c8.\n(3) If it holds that B, b1, . . . , bn |= \u2203x\u2203y1 . . . \u2203ym\u03c8, then there exists a unary polymorphism u of B such that (u(b\u22171), . . . , u(b \u2217 n)) = (b1, . . . , bn).\nProof. Let\nt1 = (t11, . . . , t 1 nn)\n... ...\ntn = (tn1 , . . . , t n nn)\nbe tuples from B(n n) such that the following three conditions hold:\n(\u03b1) It holds that {(t1i , . . . , t n i ) | i \u2208 n n} = Bn.\n(\u03b2) For each i \u2208 n, it holds that {t1i , . . . , t n i } = {b \u2217 i }.\n(\u03b3) It holds that {t1n+1, . . . , t n n+1} = B.\nVisualizing the tuples as rows (as above), condition (\u03b1) is equivalent to the assertion that each tuple from Bn occurs exactly once as a column; condition (\u03b2) enforces that the first n columns are the tuples with constant values b\u22171, . . . , b \u2217\nn (respectively); and, condition (\u03b3) enforces that the (n+1)th column is a rainbow column in that each element of B occurs exactly once in that column.\nLet P be the (nn)-ary relation {f(t1, . . . , tn) | f is an n-ary polymorphism of B }. It is well-known and straightforward to verify that the relation P is preserved by all polymorphisms of B. By Theorem 2.2, we have that P has a pp-definition \u03c6(w1, . . . , wnn) over B. We may and do assume that \u03c6 is in prenex normal form, in particular, we assume \u03c6 = \u2203z1 . . . \u2203zq\u03b8(w1, . . . , wnn , z1, . . . , zq) where \u03b8 is a conjunction of atoms and equalities.\nSince t1, . . . , tn \u2208 P , there exist tuples u1, . . . , un \u2208 Bq such that, for each k \u2208 n, it holds that B, (tk, uk) |= \u03b8. By condition (\u03b1), there exist values a1, . . . , aq \u2208 nn such that, for each i \u2208 q, it holds that (u1i , . . . , u n i ) = (t 1 ai , . . . , tnai). Define \u03c8(w1, . . . , wnn) as \u03b8(w1, . . . , wnn , wa1 , . . . , waq ). We associate the variable tuples (w1, . . . , wnn) and (v1, . . . , vn, x, y1, . . . , ym), so that \u03c8 may be viewed as a formula with variables from {v1, . . . , vn, x, y1, . . . , ym}. We verify that \u03c8 has the three conditions given in the lemma statement, as follows.\n(1): Suppose that B, b1, . . . , bn, c, d1, . . . , dm |= \u03c8. Then (b1, . . . , bn, c, d1, . . . , dm) is of the form f(t1, . . . , tn) where f is a polymorphism of B. We have\n{b1, . . . , bn, c, d1, . . . , dm} \u2286 image(f) \u2286 G(f\u0302(b \u2217 1), . . . , f\u0302(b \u2217 n)) = G(b1, . . . , bn).\nThe second containment follows from the definition of diagonal-cautious, and the equality follows from (\u03b2).\n(2): We had that, for each k \u2208 n, it holds that B, (tk, uk) |= \u03b8. By the choice of the ai and the definition of \u03c8, it holds (for each k \u2208 n) that B, tk |= \u03c8. Condition (2) then follows immediately from conditions (\u03b1) and (\u03b2).\n(3): Suppose that B, b1, . . . , bn |= \u2203x\u2203y1 . . . \u2203ym\u03c8. By definition of \u03c8, we have that there exists a tuple beginning with (b1, . . . , bn) that satisfies \u03b8 on B. By the definition of \u03b8, we have that there exists a tuple t beginning with (b1, . . . , bn) such that t \u2208 P . There exists a polymorphism f of B such that t = f(t1, . . . , tn). By condition (\u03b2), we have that (f\u0302(b\u22171), . . . , f\u0302(b \u2217 n)) = (b1, . . . , bn).\nLet us make some remarks. The relation P in the just-given proof is straightforwardly verified (via Theorem 2.2) to be the smallest pp-definable relation (over B) that contains all of the tuples t1, . . . , tn. The definition of \u03c8 yields that the relation defined by \u03c8 (over B) is a subset of P ; the verification of condition (2) yields that each of the tuples t1, . . . , tn is contained in the relation defined by \u03c8. Therefore, the formula \u03c8 defines precisely the relation P . A key feature of the lemma, which is critical for our application to surjective constraint satisfaction, is that the formula \u03c8 is quantifier-free. We believe that it may be of interest to search for further applications of this lemma.\nThe following is our main theorem.\nTheorem 3.4 Suppose that B is a finite structure such that Pol(B) is diagonal-cautious. Then the problem CSP(B+) many-one polynomial-time reduces to SCSP(B).\nProof. The result is clear if the universe B of B has size 1, so assume that it has size strictly greater than 1. Let \u03c8(v1, . . . , vn, x, y1, . . . , ym) be the quantifier-free pp-formula given by Lemma 3.3. Let \u03c6 be an instance of CSP(B+) which uses variables U . The reduction creates an instance of SCSP(B) as follows. It first creates a quantifier-free pp-formula \u03c6\u2032 that uses variables\nU \u2032 = U \u222a {v1, . . . , vn} \u222a \u22c3\nu\u2208U\n{yu1 , . . . , y u m}.\nHere, each of the variables given in the description of U \u2032 is assumed to be distinct from the others, so that |U \u2032| = |U |+ n+ |U |m. Let \u03c6= be the formula obtained from \u03c6 by replacing each atom of the form Cb\u2217\nj (u)\nby the variable equality u = vj . The formula \u03c6\u2032 is defined as \u03c6= \u2227 \u2227 u\u2208U \u03c8(v1, . . . , vn, u, y u 1 , . . . , y u m). The output of the reduction is the algorithm of Proposition 2.1 applied to (U \u2032, \u03c6\u2032). To prove the correctness of this reduction, we need to show that there exists a map f : U \u2192 B such that B +, f |= \u03c6 if and only if there exists a surjective map f \u2032 : U \u2032 \u2192 B such that B, f \u2032 |= \u03c6\u2032.\nFor the forward direction, define f= : U \u222a {v1, . . . , vn} \u2192 B to be the extension of f such that f=(vi) = b \u2217 i for each i \u2208 n. It holds that f = is surjective and that B, f= |= \u03c6=. By property (2) in the statement of Lemma 3.3, there exists an extension f \u2032 : U \u2032 \u2192 B of f= such that B, f \u2032 |= \u03c6\u2032. For the backward direction, we argue as follows. We claim that {f \u2032(v1), . . . , f \u2032(vn)} = B. If not, then by the definition of diagonal-cautious, it holds that G(f \u2032(v1), . . . , f \u2032(vn)) 6= B; by property (1) in the statement of Lemma 3.3 and by the definition of \u03c6\u2032, it follows that f \u2032(u\u2032) \u2208 G(f \u2032(v1), . . . , f \u2032(vn)) for each u\u2032 \u2208 U \u2032, contradicting that f \u2032 is surjective. By property (3) in the statement of Lemma 3.3, there exists a unary polymorphism u of B such that (u(b\u22171), . . . , u(b \u2217 n)) = (f \u2032(v1), . . . , f\n\u2032(vn)); by the just-established claim, u is a bijection. Since the set of unary polymorphisms of a structure is closed under composition and since B is by assumption finite, the inverse u\u22121 of u is also a polymorphism of B. Hence it holds that B, u\u22121(f \u2032) |= \u03c6\u2032, where u\u22121(f \u2032) denotes the composition of f \u2032 with u\u22121. Since u\u22121(f \u2032) maps each variable vj to b\u2217j , we can infer that B +, u\u22121(f \u2032) |= \u03c6.\nCorollary 3.5 Suppose that B is a finite structure whose universe B has size strictly greater than 1. If each polymorphism of B is essentially unary, then SCSP(B) is NP-complete.\nProof. The problem SCSP(B) is in NP whenever B is a finite structure, so it suffices to prove NP-hardness. By Example 3.1, we have that Pol(B) is diagonal-cautious. Hence, we can apply Theorem 3.4, and it suffices to argue that CSP(B+) is NP-hard. Since B+ is by definition the expansion of B with constants, the polymorphisms of B+ are exactly the idempotent polymorphisms of B; here then, the polymorphisms of B+ are the projections. It is well-known that a structure having only projections as polymorphisms has a NP-hard CSP [5] (note that in this case, Theorem 2.2 yields that every relation over the structure\u2019s universe is pp-definable).\nAcknowledgements. The author thanks Matt Valeriote, Barny Martin, and Yuichi Yoshida for useful comments and feedback. The author was supported by the Spanish Project FORMALISM (TIN2007-66523), by the Basque Government Project S-PE12UN050(SAI12/219), and by the University of the Basque Country under grant UFI11/45."}], "references": [{"title": "Constraint satisfaction problems of bounded width", "author": ["L. Barto", "M. Kozik"], "venue": "In Proceedings of FOCS\u201909,", "citeRegEx": "1", "shortCiteRegEx": "1", "year": 2009}, {"title": "Complexity classification in infinite-domain constraint satisfaction", "author": ["Manuel Bodirsky"], "venue": "CoRR, abs/1201.0856,", "citeRegEx": "2", "shortCiteRegEx": "2", "year": 2012}, {"title": "The complexity of surjective homomorphism problems - a survey", "author": ["Manuel Bodirsky", "Jan K\u00e1ra", "Barnaby Martin"], "venue": "Discrete Applied Mathematics,", "citeRegEx": "3", "shortCiteRegEx": "3", "year": 2012}, {"title": "Galois theory for post algebras, part", "author": ["V.G. Bodnar\u010duk", "L.A. Kalu\u017enin", "V.N. Kotov", "B.A. Romov"], "venue": "I and II. Cybernetics,", "citeRegEx": "4", "shortCiteRegEx": "4", "year": 1969}, {"title": "Classifying the Complexity of Constraints using Finite Algebras", "author": ["A. Bulatov", "P. Jeavons", "A. Krokhin"], "venue": "SIAM Journal on Computing,", "citeRegEx": "5", "shortCiteRegEx": "5", "year": 2005}, {"title": "A rendezvous of logic, complexity, and algebra", "author": ["Hubie Chen"], "venue": "ACM Computing Surveys,", "citeRegEx": "6", "shortCiteRegEx": "6", "year": 2009}, {"title": "Complexity Classification of Boolean Constraint Satisfaction Problems", "author": ["N. Creignou", "S. Khanna", "M. Sudan"], "venue": "SIAM Monographs on Discrete Mathematics and Applications. Society for Industrial and Applied Mathematics,", "citeRegEx": "7", "shortCiteRegEx": "7", "year": 2001}, {"title": "On generating all solutions of generalized satisfiability problems", "author": ["Nadia Creignou", "Jean-Jacques H\u00e9brard"], "venue": "ITA, 31(6):499\u2013511,", "citeRegEx": "8", "shortCiteRegEx": "8", "year": 1997}, {"title": "Closed Systems of Functions and Predicates", "author": ["D. Geiger"], "venue": "Pacific Journal of Mathematics,", "citeRegEx": "9", "shortCiteRegEx": "9", "year": 1968}, {"title": "Computing vertex-surjective homomorphisms to partially reflexive trees", "author": ["Petr A. Golovach", "Dani\u00ebl Paulusma", "Jian Song"], "venue": "Theor. Comput. Sci.,", "citeRegEx": "10", "shortCiteRegEx": "10", "year": 2012}, {"title": "Graph partitions with prescribed patterns", "author": ["Pavol Hell"], "venue": "Eur. J. Comb.,", "citeRegEx": "11", "shortCiteRegEx": "11", "year": 2014}, {"title": "Tractability and learnability arising from algebras with few subpowers", "author": ["P. Idziak", "P. Markovic", "R. McKenzie", "M. Valeriote", "R. Willard"], "venue": "SIAM J. Comput.,", "citeRegEx": "12", "shortCiteRegEx": "12", "year": 2010}, {"title": "Max-sur-csp on two elements", "author": ["Hannes Uppman"], "venue": "In CP, pages 38\u201354,", "citeRegEx": "13", "shortCiteRegEx": "13", "year": 2012}], "referenceMentions": [{"referenceID": 0, "context": "An increasing literature studies the algorithmic and complexity behavior of this problem family, focusing on finite and finite-like structures [1, 12, 2]; a primary research issue is to determine which such problems are polynomial-time tractable, and which are not.", "startOffset": 143, "endOffset": 153}, {"referenceID": 11, "context": "An increasing literature studies the algorithmic and complexity behavior of this problem family, focusing on finite and finite-like structures [1, 12, 2]; a primary research issue is to determine which such problems are polynomial-time tractable, and which are not.", "startOffset": 143, "endOffset": 153}, {"referenceID": 1, "context": "An increasing literature studies the algorithmic and complexity behavior of this problem family, focusing on finite and finite-like structures [1, 12, 2]; a primary research issue is to determine which such problems are polynomial-time tractable, and which are not.", "startOffset": 143, "endOffset": 153}, {"referenceID": 4, "context": "To this end of classifying problems, a so-called algebraic approach has been quite fruitful [5].", "startOffset": 92, "endOffset": 95}, {"referenceID": 2, "context": "There is recent interest in understanding the complexity of these problems, which perhaps focuses on the cases where the structure B is a graph; we refer the reader to the survey [3] for further information and pointers, and also can reference the related articles [13, 10, 11].", "startOffset": 179, "endOffset": 182}, {"referenceID": 12, "context": "There is recent interest in understanding the complexity of these problems, which perhaps focuses on the cases where the structure B is a graph; we refer the reader to the survey [3] for further information and pointers, and also can reference the related articles [13, 10, 11].", "startOffset": 265, "endOffset": 277}, {"referenceID": 9, "context": "There is recent interest in understanding the complexity of these problems, which perhaps focuses on the cases where the structure B is a graph; we refer the reader to the survey [3] for further information and pointers, and also can reference the related articles [13, 10, 11].", "startOffset": 265, "endOffset": 277}, {"referenceID": 10, "context": "There is recent interest in understanding the complexity of these problems, which perhaps focuses on the cases where the structure B is a graph; we refer the reader to the survey [3] for further information and pointers, and also can reference the related articles [13, 10, 11].", "startOffset": 265, "endOffset": 277}, {"referenceID": 2, "context": "The introduction in the survey [3] suggests that the problems SCSP(B) \u201cseem to be very difficult to classify in terms of complexity\u201d, and that \u201cstandard methods to prove easiness or hardness fail.", "startOffset": 31, "endOffset": 34}, {"referenceID": 8, "context": "2 [9, 4] A non-empty relation P \u2286 B is pp-definable over a finite structure B if and only if each operation f \u2208 Pol(B) is a polymorphism of P .", "startOffset": 2, "endOffset": 8}, {"referenceID": 3, "context": "2 [9, 4] A non-empty relation P \u2286 B is pp-definable over a finite structure B if and only if each operation f \u2208 Pol(B) is a polymorphism of P .", "startOffset": 2, "endOffset": 8}, {"referenceID": 4, "context": "It is well-known that a structure having only projections as polymorphisms has a NP-hard CSP [5] (note that in this case, Theorem 2.", "startOffset": 93, "endOffset": 96}], "year": 2014, "abstractText": "The constraint satisfaction problem (CSP) on a relational structure B is to decide, given a set of constraints on variables where the relations come from B, whether or not there is a assignment to the variables satisfying all of the constraints; the surjective CSP is the variant where one decides the existence of a surjective satisfying assignment onto the universe of B. We present an algebraic condition on the polymorphism clone of B and prove that it is sufficient for the hardness of the surjective CSP on a finite structure B, in the sense that this problem admits a reduction from a certain fixed-structure CSP. To our knowledge, this is the first result that allows one to use algebraic information from a relational structure B to infer information on the complexity hardness of surjective constraint satisfaction on B. A corollary of our result is that, on any finite non-trivial structure having only essentially unary polymorphisms, surjective constraint satisfaction is NP-complete.", "creator": "LaTeX with hyperref package"}}}