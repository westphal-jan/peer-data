{"id": "1411.4825", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "18-Nov-2014", "title": "Cognitive Systems and Question Answering", "abstract": "this paper briefly characterizes the field of cognitive computing. as an exemplification, the field dynamics of natural soft language input question method answering is introduced together with its specific challenges. a possibility to master these myriad challenges is illustrated by a detailed presentation of model the loganswer system, which is a successful representative of the field of natural language question answering.", "histories": [["v1", "Tue, 18 Nov 2014 12:37:00 GMT  (306kb,D)", "http://arxiv.org/abs/1411.4825v1", null]], "reviews": [], "SUBJECTS": "cs.AI cs.CL", "authors": ["ulrich furbach", "claudia schon", "frieder stolzenburg"], "accepted": false, "id": "1411.4825"}, "pdf": {"name": "1411.4825.pdf", "metadata": {"source": "CRF", "title": "Cognitive Systems and Question Answering", "authors": ["Ulrich Furbach", "Claudia Schon", "Frieder Stolzenburg"], "emails": ["uli@uni-koblenz.de", "schon@uni-koblenz.de", "fstolzenburg@hs-harz.de"], "sections": [{"heading": null, "text": "Human computer interaction is a discipline with increasing importance. Many people spend a lot of time with computers playing games, watching movies but, of course, also solve problems during their professional activities. This becomes even more important,\nar X\n2 the more data and information has to be taken into account. Indeed, this amount is increasing every day. Big data and open data are keywords that relate to fields of computer science, where exactly these aspects are tackled.\nThis paper briefly describes the term cognitive computing and demonstrates that natural language question answering is an example for this new computing paradigm. In the next section, cognitive computing is discussed. After this, a brief overview on natural language question answering is given. Then the LogAnswer system is described and finally we conclude with current extensions and future work."}, {"heading": "Cognitive Computing", "text": "IBM is certainly one of the major companies that pushed the development of modern computers from the very beginning. With respect to the development of intelligent machines, IBM succeeded twice to set a milestone: In 1997 the chess playing computer Deep Blue managed to beat the world-champion Garry Kasparov. There was a discussion after this match whether the IBM team was cheating during the tournament. Kasparov demanded a rematch, which was refuted and, even more, Deep Blue was dismantled. In 2011 the IBM computer system Watson beat two former winners in the quiz-show Jeopardy. In Jeopardy, the players have to understand natural language questions from various domains and give quick answers. This kind of question answering and reasoning is called deep question answering. The Watson system used many different sources of knowledge. Being not connected to the internet, Watson had access to databases, dictionaries, encyclopedias, formal ontologies but also literary works and newspaper articles.\nVery different to Deep Blue, after this effective public event, the Watson system was developed further and also tailored to various application domains [6]. It is now applied in eHealth, cancer research, finance and the list is steadily increasing. There is even a version of Watson which is acting as chef, creating really extraordinary dishes, e.g. a Vietnamese Apple Kebab [10]. The keyword which turns the Jeopardy winning system into the basis of a business plan is cognitive computing system. Such a system is designed to learn and to interact with people in a way that the result could not be achieved either by humans or machine on their own. Of course, mastering Big Data also plays an important role \u2013 IBM\u2019s marketing slogan is \u201dArtificial Intelligence meets Business Intelligence\u201d. Such a cognitive computing system has the following properties:\n(a) Multiple knowledge formats have to be processed: Formal knowledge, like ontologies but also a broad variety of natural language sources, like textbooks, encyclopedias, newspapers and literary works.\n(b) The different formats of knowledge also entail the necessity to work with different reasoning mechanisms, including information retrieval, automated deduction in formal logic and probabilistic reasoning.\n(c) The different parts and modules have to interact and cooperate very closely. (d) The entire processing is time critical, because of the interaction with humans. (e) The system must be aware of its own state and accuracy in order to rank its outcome.\n3 Natural language question answering is obviously one example of cognitive computing as depicted above. There are one or several huge text corpora together with other background knowledge, which can be given in various formats. The user interaction is rather simple: The user asks a natural language question and the system answers in natural language. In the following natural language question answering is briefly introduced."}, {"heading": "Natural Language Question-Answering", "text": "Up to the 1980s, most systems processing natural language were based on explicit, hand-coded rules. With these rules, the syntactic structure of sentences or the dependency of semantic constituents was analyzed. Here, utterances were understood as to have a syntax characterized by a formal grammar, in particular, a context-free grammar. Later on, syntactic rules were enhanced by feature descriptions of syntactic constituents, e.g. in case grammars or semantic nets [5]. These representations can also be expressed by logical formulas, which lead to so-called phrase-structure grammars. One of the latest and most prominent theories in this respect is HPSG \u2013 Head-Driven Phrase Structure Grammar [8].\nStarting in the 1980s, machine learning (ML) techniques were introduced in the field of natural language processing (NLP). This changed the field completely. Until that time, the idea was that in order to process natural language, the sentential structure of an utterance has to be analyzed and hence somehow the meaning understood first. But since computers became much faster, more or less brute-force methods based on statistical analyses and machine learning were employed. Hidden Markov Models were used to predict which word or part of speech is used next [7].\nNowadays, computers and the World Wide Web provide an ever-growing amount of digitally stored knowledge, which is accessible to anyone from home, the workplace or even with mobile devices. While the abundance of available information offers manifold benefits, it can also make the search for some particular data quite tedious. The tool of choice is usually a search engine. However, this is inadequate if the user has a specific question in mind: Instead of simply entering a question, one has to guess suitable keywords.\nThe field of question answering (QA) intends to improve this search process. A QA system communicates with the user in natural language. It accepts properly formulated questions and returns concise answers. These automatically generated answers are usually not extracted from the web. Rather, the QA system operates on an extensive knowledge base which has been derived from textual sources, employing a natural language interface allowing untrained users an intuitive interaction with the system.\nCurrently, many QA systems rely on shallow linguistic methods for answer derivation, however, with little attempt to include semantics. This may prevent finding an answer. For example, a superficial word matching algorithm can fail when the textual sources use synonyms of the words in the question. Hence a system must model some form of background knowledge. In summary, cognitive aspects of linguistic analysis, e.g. semantic nets in a logical representation, should be combined with machine learn-\n4\ning techniques, e.g. when determining the most appropriate answer candidate \u2013 as done in the LogAnswer system."}, {"heading": "The LogAnswer System", "text": "LogAnswer [2] is an open domain question answering system. It is accessible by a web interface (http://www.loganswer.de) similar to that of a search engine, see Fig. 1. The user enters a question into the text box and LogAnswer presents the three best answers, which are highlighted in the relevant textual sources to provide a context. While many systems for natural language question answering focus on shallow linguistic methods, LogAnswer uses an automated theorem prover (ATP) to compute the replies.\nThe system was developed in the LogAnswer project which was a cooperation between the IICS (Intelligent Information and Communication Systems) at the Fernuniversita\u0308t in Hagen and the Artificial Intelligence Research Group (AGKI) at the University Koblenz-Landau. The project was funded by the German Research Foundation DFG (Deutsche Forschungsgemeinschaft) and aimed at the development of efficient and robust methods for logic-based question answering. The IICS is experienced in computational linguistics and knowledge engineering. Within the LogAnswer project the IICS handled the natural language aspects and provided the knowledge base. As an expert in automated theorem proving, the AGKI was responsible for the deductive aspects of the LogAnswer project.\nAs indicated in (c) in the list of properties of cognitive computing systems, it is important to take care that the different modules interact and cooperate closely. When combining NLP and automated reasoning as in the LogAnswer system, paying attention\nFreitag, 17. Oktober 14\nto the conflicting aims of the two fields is important. Since NLP methods are often confronted with flawed textual data, they strive toward robustness and speed. Nevertheless, they lack the ability to perform complex inferences. In contrast to that, a theorem prover uses a sound calculus to derive precise complex proofs. However, even minor flaws or omissions in the data can lead to a failure of the derivation process. Furthermore, refutationally complete theorem provers can have problems when dealing with large amounts of data due to the fact that they can easily get stuck performing redundant inferences. In the LogAnswer system NLP is used to filter the input for the theorem prover to a fraction of the knowledge available to LogAnswer, and the prover is embedded into a relaxation mechanism which can lessen the proof requirements for imperfect input data [3].\nAs claimed in (a) in the list of properties, the LogAnswer system uses multiple knowledge formats. One part of the knowledge is provided by a snapshot of the German Wikipedia, which has been translated into a semantic network representation in the MultiNet (Multilayered Extended Semantic Networks) formalism [5]. To make the semantic networks accessible to modern theorem provers, LogAnswer is also equipped with a representation of the MultiNet knowledge base in first-order logic (FOL). See [3] for details on the translation of the MultiNet knowledge base into a first-order logic knowledge base. All in all, 29.1 million natural language sentences have been translated. In addition to that, a background knowledge consisting of 12,000 logical rules and facts is used. This background knowledge provides general knowledge which is advantageous for the setting of question answering. Automated reasoning enables the integration of this background knowledge.\nIn Figure 2 it is depicted how LogAnswer processes a question. Since it is a webbased question answering system, users expect the system to respond quickly. This aspect of time criticality corresponds to (d) in the list of properties and is a serious restriction of the time available for the LogAnswer system to process a question. In such a restricted time, a question cannot be answered directly using the the whole knowl-\n6 edge base. Therefore, several different techniques such as natural language processing, information retrieval, machine learning and automated deduction come to use. This corresponds to claim (b) in the list of properties. After translating the question into the MultiNet and FOL representation, the Wikipedia content is matched against the given query using retrieval and shallow linguistic criteria. By this, lists of features like the number of matching lexemes between passages and the question or the occurrences of proper names in the passage are computed. Afterwards an ML algorithm ranks text passages using these features. Then up to 200 text passages are extracted from the knowledge base according to this ranking. These so-called answer candidates have a high probability to contain the answer and can be computed rapidly. The computation of feature lists is implemented robustly, which allows to handle documents containing syntactic errors and thus to extract answers from text passages which cannot be parsed completely. In the next step the theorem prover Hyper [9] is used. The Hyper theorem prover is an implementation of the hypertableaux calculus [1] extended with equality. It has been shown to be very suitable for the type of reasoning problems occurring in the question answering setting, which are characterized by their large number of irrelevant axioms.\nWith the help of Hyper the answer candidates are tested consecutively. For each of these tests, the logical representation of both the query and an answer candidate together with the background knowledge are fed into Hyper. A successful proof provides an answer by giving an instantiation of the variables of the logical representation of the query. If no proof can be found in time, query relaxation techniques come to pass. These techniques allow certain subgoals of the query to be weakened or dropped in order to enable the prover to find a proof in short time. Query relaxation increases the likelihood of finding an answer even if the knowledge at hand is incomplete. However, the drawback of this technique is that it decreases the probability that the answer found is relevant to the query. As claimed in (e) in the list of properties, the LogAnswer system is aware of its own accuracy, because all proofs are ranked by machine learning algorithms. The three proofs with the highest rank are translated back into natural language answers and are presented to the user."}, {"heading": "Conclusions", "text": "In this paper, the state of the art in cognitive computing systems and in natural language question answering is discussed. As a prototypical example, the LogAnswer system is described in detail and its properties are checked against criteria for cognitive computing systems.\nCurrently the LogAnswer system is extended in the follow-up project RatioLog, aiming at the inclusion of rational and human-like reasoning components. In [4] the use of deontic logic for modeling human reasoning and its automating with the logical machinery from LogAnswer is demonstrated. Another extension is with respect to defeasible reasoning [11], which is helpful to determine the best answer from the possibly contradicting answer candidates.\n7 Dieser Beitrag entstand im Rahmen des Projekts RatioLog \u2013 Rationale Erweiterungen des Logischen Schlie\u00dfens, das von der Deutschen Forschungsgemeinschaft (DFG) unter den Kennzeichen FU 263/15-1 und STO 421/5-1 gefo\u0308rdert wird."}], "references": [{"title": "Hyper tableaux. In Logics in Artificial Intelligence, European Workshop, JELIA", "author": ["P. Baumgartner", "U. Furbach", "I. Niemel\u00e4"], "venue": "Proceedings", "citeRegEx": "1", "shortCiteRegEx": "1", "year": 1996}, {"title": "Logic-based question answering", "author": ["U. Furbach", "I. Gl\u00f6ckner", "H. Helbig", "B. Pelzer"], "venue": "KI Ku\u0308nstliche Intelligenz 24,", "citeRegEx": "2", "shortCiteRegEx": "2", "year": 2010}, {"title": "An application of automated reasoning in natural language question answering", "author": ["U. Furbach", "I. Gl\u00f6ckner", "B. Pelzer"], "venue": "AI Commun", "citeRegEx": "3", "shortCiteRegEx": "3", "year": 2010}, {"title": "Automated reasoning in deontic logic", "author": ["U. Furbach", "C. Schon", "F. Stolzenburg"], "venue": "In Proceedings of the KI 2014 Workshop on Higher-Level Cognition and Computation (Stuttgart,", "citeRegEx": "4", "shortCiteRegEx": "4", "year": 2014}, {"title": "Knowledge Representation and the Semantics of Natural Language", "author": ["H. Helbig"], "venue": "Cognitive Technologies. Springer,", "citeRegEx": "5", "shortCiteRegEx": "5", "year": 2006}, {"title": "Smart Machines: IBM\u2019s Watson and the Era of Cognitive Computing", "author": ["J.E. Kelly III", "S. Hamm"], "venue": "Columbia Business School Publishing,", "citeRegEx": "6", "shortCiteRegEx": "6", "year": 2013}, {"title": "Foundations of statistical natural language processing", "author": ["C.D. Manning", "H. Sch\u00fctze"], "venue": null, "citeRegEx": "7", "shortCiteRegEx": "7", "year": 2001}, {"title": "Head-Driven Phrase Structure Grammar", "author": ["C.J. Pollard", "I.A. Sag"], "venue": null, "citeRegEx": "8", "shortCiteRegEx": "8", "year": 1994}, {"title": "System description: E-KRHyper", "author": ["C. Wernhard", "B. Pelzer"], "venue": "In CADE", "citeRegEx": "9", "shortCiteRegEx": "9", "year": 2007}, {"title": "Poole\u2019s specificity revised", "author": ["Wirth", "C.-P", "Stolzenburg", "F. David"], "venue": "Proceedings of 14th International Conference on Principles of Knowledge Representation and Reasoning (Wien, Austria,", "citeRegEx": "11", "shortCiteRegEx": "11", "year": 2014}], "referenceMentions": [{"referenceID": 5, "context": "Very different to Deep Blue, after this effective public event, the Watson system was developed further and also tailored to various application domains [6].", "startOffset": 153, "endOffset": 156}, {"referenceID": 4, "context": "in case grammars or semantic nets [5].", "startOffset": 34, "endOffset": 37}, {"referenceID": 7, "context": "One of the latest and most prominent theories in this respect is HPSG \u2013 Head-Driven Phrase Structure Grammar [8].", "startOffset": 109, "endOffset": 112}, {"referenceID": 6, "context": "Hidden Markov Models were used to predict which word or part of speech is used next [7].", "startOffset": 84, "endOffset": 87}, {"referenceID": 1, "context": "LogAnswer [2] is an open domain question answering system.", "startOffset": 10, "endOffset": 13}, {"referenceID": 2, "context": "In the LogAnswer system NLP is used to filter the input for the theorem prover to a fraction of the knowledge available to LogAnswer, and the prover is embedded into a relaxation mechanism which can lessen the proof requirements for imperfect input data [3].", "startOffset": 254, "endOffset": 257}, {"referenceID": 4, "context": "One part of the knowledge is provided by a snapshot of the German Wikipedia, which has been translated into a semantic network representation in the MultiNet (Multilayered Extended Semantic Networks) formalism [5].", "startOffset": 210, "endOffset": 213}, {"referenceID": 2, "context": "See [3] for details on the translation of the MultiNet knowledge base into a first-order logic knowledge base.", "startOffset": 4, "endOffset": 7}, {"referenceID": 8, "context": "In the next step the theorem prover Hyper [9] is used.", "startOffset": 42, "endOffset": 45}, {"referenceID": 0, "context": "The Hyper theorem prover is an implementation of the hypertableaux calculus [1] extended with equality.", "startOffset": 76, "endOffset": 79}, {"referenceID": 3, "context": "In [4] the use of deontic logic for modeling human reasoning and its automating with the logical machinery from LogAnswer is demonstrated.", "startOffset": 3, "endOffset": 6}, {"referenceID": 9, "context": "Another extension is with respect to defeasible reasoning [11], which is helpful to determine the best answer from the possibly contradicting answer candidates.", "startOffset": 58, "endOffset": 62}], "year": 2014, "abstractText": "This paper briefly characterizes the field of cognitive computing. As an exemplification, the field of natural language question answering is introduced together with its specific challenges. A possibility to master these challenges is illustrated by a detailed presentation of the LogAnswer system, which is a successful representative of the field of natural language question answering.", "creator": "LaTeX with hyperref package"}}}