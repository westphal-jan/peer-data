{"id": "1412.0233", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "30-Nov-2014", "title": "The Loss Surfaces of Multilayer Networks", "abstract": "fundamentally we study simply the connection between the highly non - convex loss function of a simple model of the fully - connected feed - forward partial neural network and the hamiltonian of the normal spherical spin - glass model \u2014 under the assumptions terms of : i ) variable independence, ii ) redundancy in network parametrization, and iii ) dynamic uniformity. these assumptions enable us to explain the complexity of the fully decoupled neural network through the prism of the results from the random matrix theory. we show that however for large - size decoupled networks itself the lowest likely critical values of the usual random loss function are located in a well - defined narrow band lower - bounded by the global minimum. furthermore, they form a layered structure. also we show that the optimal number of local minima outside the narrow band diminishes exponentially with decreased the size of the existing network. we empirically demonstrate that the mathematical model exhibits similar behavior as the computer simulations, despite the presence of high dependencies in real electrical networks. we conjecture upon that algorithms both simulated annealing and sgd converge to the band containing the largest number of critical intersection points, and emphasize that all critical points found there merely are local minima adjustments and correspond independently to the same expected high learning quality measured by the test error. this emphasizes a crucial major difference found between large - and small - size networks where for this the latter poor quality local minima calculations have non - zero probability of being recovered. simultaneously we prove that recovering the global minimum becomes harder as the network coverage size increases and that it is in optimal practice irrelevant as global minimum often leads to overfitting.", "histories": [["v1", "Sun, 30 Nov 2014 15:48:16 GMT  (294kb,D)", "http://arxiv.org/abs/1412.0233v1", null], ["v2", "Thu, 4 Dec 2014 21:46:57 GMT  (358kb,D)", "http://arxiv.org/abs/1412.0233v2", null], ["v3", "Wed, 21 Jan 2015 22:25:26 GMT  (367kb,D)", "http://arxiv.org/abs/1412.0233v3", null]], "reviews": [], "SUBJECTS": "cs.LG", "authors": ["anna choromanska", "mikael henaff", "michael mathieu", "g\\'erard ben arous", "yann lecun"], "accepted": false, "id": "1412.0233"}, "pdf": {"name": "1412.0233.pdf", "metadata": {"source": "CRF", "title": "The Loss Surface of Multilayer Networks", "authors": ["Anna Choromanska", "Mikael Henaff", "Michael Mathieu"], "emails": ["achoroma@cims.nyu.edu", "mbh305@nyu.edu", "mathieu@cs.nyu.edu", "benarous@cims.nyu.edu", "yann@cs.nyu.edu"], "sections": [{"heading": null, "text": "We study the connection between the highly non-convex loss function of a simple model of the fully-connected feed-forward neural network and the Hamiltonian of the spherical spin-glass model under the assumptions of: i) variable independence, ii) redundancy in network parametrization, and iii) uniformity. These assumptions enable us to explain the complexity of the fully decoupled neural network through the prism of the results from the random matrix theory. We show that for large-size decoupled networks the lowest critical values of the random loss function are located in a well-defined narrow band lowerbounded by the global minimum. Furthermore, they form a layered structure. We show that the number of local minima outside the narrow band diminishes exponentially with the size of the network. We empirically demonstrate that the mathematical model exhibits similar behavior as the computer simulations, despite the presence of high dependencies in real networks. We conjecture that both simulated annealing and SGD converge to the band containing the largest number of critical points, and that all critical points found there are local minima and correspond to the same high learning quality measured by the test error. This emphasizes a major difference between largeand small-size networks where for the latter poor quality local minima have non-zero probability of being recovered. Simultaneously we prove that recovering the global minimum becomes harder as the network size increases and that it is in practice irrelevant as global minimum often leads to overfitting."}, {"heading": "1 Introduction", "text": "Deep learning methods have enjoyed a resurgence of interest in the last few years for such applications as image recognition, speech recognition, and natural language processing [Ciresan et al., 2012]. Some of the most popular methods use multi-stage architectures composed of alternated layers of linear transformations and max function. In a particularly popular version, the max functions are known as ReLUs (Rectified Linear Units) and compute the mapping y = max(x, 0) in a pointwise fashion [Nair and Hinton, 2010]. In other architectures, such as convolutional networks [LeCun et al., 1998a] and maxout networks [Goodfellow et al., 2013], the max operation is performed over a small set of variable within a layer.\nThe vast majority of practical applications of deep learning use supervised learning with very deep networks. The supervised loss function, generally a crossentropy or hinge loss, is minimized using some form of stochastic gradient descent (SGD) [Bottou, 1998], in which the gradient is evaluated using the backpropagation procedure [LeCun et al., 1998b].\nThe general shape of the loss function is very poorly understood. In the early days of neural nets (late 1980s and early 1990s), many reearchers and engineers were experimenting with relatively small networks, whose convergence tends to be unreliable, particularly when using batch optimization. Multilayer neural nets earned a reputation of being finicky and unreliable, which in part caused the community to focus on simpler method with convex loss functions, such as kernel machines and boosting.\nHowever, several researchers experimenting with larger networks and SGD had noticed that, while multilayer nets do have many local minima, the result of multiple experiments consistently give very similar performance. This suggests that, while local nimia are numerous, they are relatively easy to find, and they\nar X\niv :1\n41 2.\n02 33\nv1 [\ncs .L\nG ]\n3 0\nN ov\n2 01\nare all more or less equivalent in terms of performance on the test set. The present paper attempts to explain this peculiar property through the use of random matrix theory applied to the analysis of critical points in high degree polynomials on the sphere.\nWe first establish that the loss function of a typical multilayer net with ReLUs can be expressed as a polynomial as the a function of the weights in the network, whose degree is the number of layers, and whose number of monomials is the number of paths from inputs to output. As the weights (or the inputs) vary, some of the monomials are switched off and others become activated, leading to a piecwise, continuous polynomial whose monomials are switched in and out at the boundaries between pieces.\nAn important question concerns the distribution of critical points (maxima, minima, and saddle points) of such functions. the Hamiltonian of spherical spin glasses have\nResults from random matrix theory applied to spherical spin glasses have shown that these functions have a combinatorially large number of saddle points. Loss surfaces for large neural nets have many local minima that are essentially equivalent from the point of view of the test error, and these minima tend to be highly degenerate, with many eigenvalues of the Hessian near zero.\nWe empirically verify several hypotheses regarding learning with large-size networks:\n\u2022 For large-size networks, most local minima are equivalent and yield similar performance on a test set.\n\u2022 The probability of finding a \u201cbad\u201d (high value) local minimum is non-zero for small-size networks and decreases quickly with network size.\n\u2022 Struggling to find the global minimum on the training set (as opposed to one of the many good local ones) is not useful in practice as it may lead to overfitting.\nThe above hypotheses can be directly justified by our theoretical findings. We finally conclude the paper with brief discussion of our results and future research directions in Section 6.\nWe confirm the intuition and empirical evidence expressed in previous works that the problem of training deep learning systems resides with avoiding saddle points and quickly \u201cbreaking the symmetry\u201d by picking sides of saddle points and chosing a suitable attractor [LeCun et al., 1998b, Saxe et al., 2014, Dauphin et al., 2014].\nWhat is new in this paper? To the best of our knowledge, this paper is the first work providing a theoretical description of the optimization paradigm with neural networks in the presence of large number of parameters. It has to be emphasized however that this connection relies on a number of possibly unrealistic assumptions. It is also an attempt to shed light on the puzzling behavior of modern deep learning systems when it comes to optimization and generalization."}, {"heading": "2 Prior work", "text": "In the 1990s, a number of researchers have studied the convergence of gradient-based learning for multilayer networks using the methods of statistical physics, notably Saad and Solla [Saad and Solla, 1995], and the edited works [Saad, 2009]. More recently, Saxe [Saxe et al., 2014] and Dauphin [Dauphin et al., 2014] have explored the statistical properties of the error surface in multi-layer architectures, pointing out the importance of saddle points.\nEarlier theoretical analyses [Bray and Dean, 2007, Fyodorov and Williams, 2007, Baldi and Hornik, 1989, Wigner, 1958] suggest the existence of a certain structure of critical points of random Gaussian error functions on high dimensional continuous spaces. They imply that critical points which error is much higher than the global minimum are exponentially likely to be saddle points with many negative and approximate plateau directions whereas all local minima are likely to have an error very close to that of the global minimum (these results are conveniently reviewed in [Dauphin et al., 2014]). The work of [Dauphin et al., 2014] establishes a strong empirical connection between neural networks and the theory of random Gaussian fields by providing an experimental evidence that the cost function of neural networks exhibits the same properties as the Gaussian error functions on high dimensional continuous spaces. Nevertheless they provide no theoretical justification for the existence of this connection which instead we provide in this paper.\nThis work is inspired by the recent advances in random matrix theory and the work of [Auffinger et al., 2010] and [Auffinger and Ben Arous, 2013]. The authors of these works provided an asymptotic evaluation of the complexity of the spherical spin-glass model (the spin-glass model originates from the condensed matter physics where it is used to represent a magnet with irregularly aligned spins). They discovered and mathematically proved the existence of a layered structure of the low critical values for the model\u2019s Hamiltonian which in fact is a Gaussian process. Their re-\nsults are not discussed in details here as it will be done in Section 4 in the context of neural networks. We build the bridge between their findings and neural networks and show that the objective function used by neural network is analogous to the Hamiltonian of the spin-glass model under the assumptions of: i) variable independence, ii) redundancy in network parametrization, and iii) uniformity, and thus their landscapes share the same properties. We emphasize that the connection between spin-glass models and neural networks was already explored back in the past (a summary can be found in [Dotsenko, 1995]). In example in [Amit et al., 1985] the authors showed that the long-term behavior of certain neural network models are governed by the statistical mechanism of infinite-range Ising spin-glass Hamiltonians. Another work [Nakanishi and Takayama, 1997] examined the nature of the spin-glass transition in the Hopfield neural network model. None of these works however make the attempt to explain the paradigm of optimizing the highly non-convex neural network objective function through the prism of spin-glass theory and thus in this respect our approach is very novel."}, {"heading": "3 Deep network and spin-glass model", "text": ""}, {"heading": "3.1 Preliminaries", "text": "For the theoretical analysis, we consider a simple model of the fully-connected feed-forward deep network with a single output and rectified linear units. We call the network N . We focus on a binary classification task. Let X be the random input vector of dimensionality d. Let (H \u2212 1) denote the number of hidden layers in the network and we will refer to the input layer as the 0th layer and to the output layer as the Hth layer. Let ni denote the number of units in the ith layer (note that n0 = d and nH = 1). Let Wi be the matrix of weights between (i\u2212 1)th and ith layers of the network. Also, let \u03c3 denotes the activation function that converts a unit\u2019s weighted input to its output activation. We consider linear rectifiers thus \u03c3(x) = max(0, x). We can therefore write that for any given random input vector X, the network gives the following (random) output Y :\nY = q\u03c3(W>H\u03c3(W > H\u22121 . . . \u03c3(W > 1 X))) . . . ), where q = \u221a\n(n0n1...nH)(H\u22121)/2H is simply a normalization factor. The same expression for the output of the network can be re-expressed in the following way:\nY = q n0\u2211 i=1 \u03b3\u2211 j=1 Xi,jAi,j H\u220f k=1 w (k) i,j , (1)\nwhere the first summation is over the network inputs and the second one is over all paths from a given net-\nwork input to its output, where \u03b3 is the total number of such paths (note that \u03b3 = n1n2 . . . nH). Also, for all i = {1, 2, . . . , n0}: Xi,1 = Xi,2 = \u00b7 \u00b7 \u00b7 = Xi,\u03b3 . Furthermore, w\n(k) i,j is the weight of the k th segment of path\nindexed with (i, j) which connects layer (k\u2212 1)st with layer kth of the network. Note that each path corresponds to a certain set of H weights, which we refer to as a configuration of weights, which are multiplied by each other. Finally, Ai,j denotes whether a path (i, j) is active (Ai,j = 1) or not (Ai,j = 0).\nDefinition 3.1. The mass of the network \u03a8 is the total number of all paths between all network inputs and outputs: \u03a8 = \u220fH i=0 ni. Also let \u039b as \u039b = H \u221a \u03a8. Definition 3.2. The size of the network N is the total number of network parameters: N = \u2211H\u22121 i=0 nini+1.\nThe mass and the size of the network depend on each other as captured in Theorem 3.1.\nTheorem 3.1. Let \u03a8 be the mass of the network, d be the number of network inputs and H be the depth of the network. The size of the network is bounded as\n\u03a82H = \u039b2HH \u2265 N \u2265 H \u221a \u03a82 H H \u221a d \u2265 H \u221a \u03a8 = \u039b.\nIn the rest of the paper we assume that the depth of the network H is bounded. Therefore N \u2192 \u221e iff \u03a8\u2192\u221e, and N \u2192\u221e iff \u039b\u2192\u221e.\nIn the rest of this section we will be establishing a connection between the loss function of the neural network and the Hamiltonian of the spin-glass model. All proofs are deferred to the Supplementary material."}, {"heading": "3.2 Approximation", "text": "In this section we introduce randomness to the model by assuming Xs and As are random. We make certain assumptions regarding the neural network model. They consider random variables Xs and As (their distributions and mutual dependencies) as well as they introduce spherical constraint on the model weights. We also introduce two other assumptions regarding redundancy of network parameters and their uniformity (details in the text below), both of them are justified by empirical evidence in the literature.\nInput We assume each input Xi,j is a normal random variable such that Xi,j \u223c N(0, 1). Clearly the model contains several dependencies as one input is associated with many paths in the network. That poses a major theoretical problem in analyzing these models as it is unclear how to account for these dependencies. In this paper we instead study fully decoupled model [De la Pen\u0303a and Gine\u0301, 1999], where Xi,j \u2019s are\nassumed to be independent. We allow this simplification as to the best of our knowledge there exists no theoretical description of the optimization paradigm with neural networks in the literature either under independence assumption or when the dependencies are allowed. Also note that statistical learning theory heavily relies on this assumption [Hastie et al., 2001] even when the model under consideration is much simpler than a neural network. Under the independence assumption we will explore the similarity of this model to the spin-glass model. We emphasize that despite the presence of high dependencies in real neural networks, both models exhibit high similarities as will be empirically demonstrated.\nPaths We assume each path in Equation 1 is equally likely to be active thus Ai,j \u2019s will be modeled as Bernoulli random variables with the same probability of success \u03c1. By assuming the independence of X\u2019s and A\u2019s we get the following\nEA[Y ] = q n0\u2211 i=1 \u03b3\u2211 j=1 Xi,j\u03c1 H\u220f k=1 w (k) i,j . (2)\nRedundancy in network parametrization Let W = {w1, w2, . . . , wN} be the set of all weights of the network. Let A denote the set of all H-length configuration of weights chosen from W (order of weights in a configuration does matter). Note that the size of A is therefore NH . Also let B be a set such that each element correspond to the single configuration of weights from Equation 2, thus B = {(w11,1, w21,1, . . . , wH1,1), (w11,2, w21,2, . . . , wH1,2), . . . , (w1n0,\u03b3 , w 2 n0,\u03b3 , . . . , w H n0,\u03b3)}, where every single weight comes from set W (note that B \u2282 A). Thus Equation 2 can be equivalently written as\nYN :=EA[Y ]=q N\u2211\ni1,i2,...,iH=1\nri1,i2,...,iH\u2211 j=1 X (j) i1,i2,...,iH \u03c1 H\u220f k=1 wik . (3)\nWe will now explain the notation. It is overcomplicated for purpose, as this notation will be useful later on. ri1,i2,...,iH denotes whether the configuration (wi1 , wi2 , . . . , wiH ) appeared in Equation 2 or not, thus ri1,i2,...,iH \u2208 {0\u222a1}, and {X (j) i1,i2,...,iH\n}ri1,i2,...,iHj=1 denote a set of random variables corresponding to the same weight configuration (since ri1,i2,...,iH \u2208 {0\u222a1} this set has at most one element). Also ri1,i2,...,iH = 0 implies that summand X (j) i1,i2,...,iH \u03c1 \u220fH k=1 wik is zeroed out). Furthermore, the following condition has to be satisfied: \u2211N i1,i2,...,iH=1\nri1,i2,...,iH = \u03a8. In the notation YN , index N refers to the number of unique weights of a network (this notation will also be helpful later).\nConsider a family of networks which have the same graph of connections as network N but different edge\nweighting such that they only have s unique weights and s \u2264 N (through notation analogy expected output of this network will be called Ys). It was recently shown [Denil et al., 2013, Denton et al., 2014] that for large-size networks large number of network parameters (according to [Denil et al., 2013] even up to 95%) are redundant and can either be learned from a very small set of unique parameters or even not learned at all with almost no loss in prediction accuracy.\nDefinition 3.3. A network M which has the same graph of connections as N and the number of unique weights s satisfying s \u2264 N is called a (s, )-reduction image of N for some \u2208 [0, 1] if the prediction accuracy of N and M differ by no more than (thus they classify at most fraction of data points differently).\nTheorem 3.2. Let N be a neural network giving the output whose expectation YN is given in Equation 3. Let M be its (s, )-reduction image for some s \u2264 N and \u2208 [0, 0.5]. Through analogy, let Ys be the expected output of network M. Then the following holds\ncorr(sign(Ys), sign(YN )) \u2265 1\u2212 2 1 + 2 ,\nwhere corr denotes the correlation defined as corr(A,B) = E[(A\u2212E[A]])(B\u2212E[B]])std(A)std(B) , std is the standard deviation and sign(\u00b7) denotes the sign of prediction (sign(Ys) and sign(YN ) are both random).\nThe redundancy assumption implies that one can preserve to be close to 0 even with s << N .\nUniformity Consider network M to be a (s, )- reduction image of N for some s \u2264 N and \u2208 [0, 1]. The output Ys of the image network can in general be expressed as\nYs = q s\u2211 i1,...,iH=1 ti1,...,iH\u2211 j=1 X (j) i1,...,iH \u03c1 H\u220f k=1 wik ,\nwhere ti1,...,iH \u2208 {Z+ \u222a 0} is the number of times each configuration (wi1 , wi2 , . . . , wiH ) repeats in Equation 3 and \u2211s i1,...,iH=1\nti1,...,iH = \u03a8. We assume that unique weights are close to being evenly distributed on the graph of connections of network M. We call this assumption a uniformity assumption. Thus this assumption implies that for all (i1, i2, . . . , iH) : i1, i2, . . . , iH \u2208 {1, 2, . . . , s} there exists a positive constant c \u2265 1 such that the following holds\n1 c \u00b7 \u03a8 sH \u2264 ti1,i2,...,iH \u2264 c \u00b7 \u03a8 sH . (4)\nThe factor \u03a8 sH\ncomes from the fact that for the network where every weight is uniformly distributed on the graph of connections (thus with high probability\nevery node is adjacent to an edge with any of the unique weights) it holds that ti1,i2,...,iH = \u03a8 sH\n. Note that this condition can be satisfied with small c (close to 1) if s is sufficiently small.\nFor simplicity assume \u03a8 sH \u2208 Z+ and H\n\u221a \u03a8 \u2208 Z+. Con-\nsider therefore an expression as follows\nY\u0302s = q s\u2211 i1,...,iH=1 \u03a8 sH\u2211 j=1 X (j) i1,...,iH \u03c1 H\u220f k=1 wik , (5)\nwhich corresponds to a network for which the lowerbound and upper-bound in Equation 4 match. Note that one can combine both summations in Equation 5 and re-index its terms to obtain\nY\u0302s = q \u039b\u2211 i1,...,iH=1 Xi1,...,iH\u03c1 H\u220f k=1 wik . (6)\nThe following theorem (Theorem 3.3) captures the connection between Y\u0302s and Ys.\nTheorem 3.3. Under the uniformity assumption of Equation 4, random variable Y\u0302s in Equation 5 and random variable Ys in Equation 3 sattisfy the following: corr(Y\u0302s, Ys) \u2265 1c2 .\nWe will refer to Y\u0302s as an (s, , c)-approximator of YN , where the quality of this approximation is captured in Theorems 3.2 and 3.3. Intuitively, for large networks (our analysis in Section 4 considers \u039b\u2192\u221e) one would expect s to be small enough to simultaneously guarantee c sufficiently close to 1 and preserve good accuracy ( close to 0).\nSpherical constraint We finally make a benign assumption that for some positive constant C weights satisfy the spherical condition\n1\n\u039b \u039b\u2211 i=1 w2i = C. (7)\nNext we will consider two frequently used loss functions, absolute loss and hinge loss, where we approximate YN (recall Yn := EA[Y ]) with Y\u0302s.\n3.3 Loss function as a H-spin spherical spin-glass model\nLet La\u039b,H(w) and Lh\u039b,H(w) be the (random) absolute loss and (random) hinge loss that we define as follows\nLa\u039b,H(w) = EA[ |Yt \u2212 Y | ]\nand Lh\u039b,H(w) = EA[max(0, 1\u2212 YtY )],\nwhere Yt is a random variable corresponding to the true data labeling that takes values \u2212S or S in case of the absolute loss, where S = supw Y\u0302s, and \u22121 or 1 in case of the hinge loss. Also note that in case of the hinge loss max operator can be modeled as Bernoulli random variable. One can show that after approximating EA[Y ] with its (s, , c)-approximator Y\u0302s both losses can be generalized to the following expression\nL\u039b,H(w) = C1 + C2q \u039b\u2211\ni1,i2,...,iH=1\nXi1,i2,...,iH H\u220f k=1 w\u0303ik ,\nwhere\n1\n\u039b \u039b\u2211 i=1 w\u03032i = 1, (8)\nand C1, C2 are some constants and weights w\u0303 are simply scaled weights w. We skip the details showing this equivalence, and defer them to the Supplementary material, as they are strictly technical.\nTo simplify the notation in Equation 11 we drop the letter accents and simply denote w\u0302 as w. We also skip constants C1 and C2 as they do not matter when minimizing the loss function. After substituting q =\n1 \u03a8(H\u22121)/2H = 1 \u039b(H\u22121)/2 we obtain\nL\u039b,H(w)= 1\n\u039b(H\u22121)/2 \u039b\u2211 i1,i2,...,iH=1 Xi1,i2,...,iHwi1wi2. . .wiH . (9)\nEquation 9 is the centered Gaussian process on the sphere S = S\u039b\u22121( \u221a \u039b) and is equivalent to the Hamiltonian of the H-spin spherical spin-glass model. The spherical constraint is captured in Equation 8. An asymptotic evaluation of the complexity of spherical H-spin spherical spin-glass models via random matrix theory was studied in the literature [Auffinger et al., 2010] where a precise description of the energy landscape for the Hamiltonians of these models is provided. In this paper we use the results of the theoretical analysis of the complexity of spinglass models [Auffinger et al., 2010] to gain an understanding of the optimization of strongly non-convex loss functions of neural networks."}, {"heading": "4 Theoretical results", "text": "The theoretical findings of this section are direct consequence of the theoretical analysis of the complexity of spherical spin-glass models of [Auffinger et al., 2010]. We will first introduce the notation and definitions.\nDefinition 4.1. Let u \u2208 R and k be an integer such that 0 \u2264 k < \u039b. We will denote as C\u039b,k(u) a random number of critical values of L\u039b,H(w) in the set \u039bB =\n{\u039bX : x \u2208 (\u2212\u221e, u)} with index1 equal to k. Similarly we will denote as C\u039b(B) a random total number of critical values of L\u039b,H(w).\nLater in the paper by critical values of the loss function that have non-diverging (fixed) index we mean the ones with index non-diverging with \u039b. We will also call them low-index saddle points. Next we summarize the results of the theoretical analysis in [Auffinger et al., 2010] in the context of neural networks.\nThe existence of the band of low-index critical points One can directly use Theorem 2.12 in [Auffinger et al., 2010] to show that for large-size networks (more precisely when \u039b\u2192\u221e but recall that \u039b \u2192 \u221e iff N \u2192 \u221e) it is improbable to find a critical value below certain level \u2212\u039bE0(H) (which we call the ground state), where E0(H) is some real number.\nLet us also introduce the number that we will refer to as E\u221e. We will refer to this important threshold as an energy barrier and define it as\nE\u221e = E\u221e(H) = 2 \u221a H \u2212 1 H .\nTheorem 2.14 in [Auffinger et al., 2010] implies that for large-size networks all critical values of the loss function that are of non-diverging index must lie below the threshold \u2212\u039bE\u221e(H). Any critical point that lies above the energy barrier is a high-index saddle point with overwhelming probability. Thus for largesize networks all critical values of the loss function that are of non-diverging index must lie in the band (\u2212\u039bE0(H),\u2212\u039bE\u221e(H)).\nLayered structure of low-index critical points From Theorem 2.15 in [Auffinger et al., 2010] it follows that for large-size networks finding a critical value with index larger or equal to k (for any fixed integer k) below energy level \u2212\u039bEk(H) is improbable, where \u2212Ek(H) \u2208 [\u2212E0(H),\u2212E\u221e(H)]. Furthermore, the sequence {Ek(H)}k\u2208N is strictly decreasing and converges to E\u221e as k \u2192\u221e [Auffinger et al., 2010].\nThese results unravel a layered structure for the lowest critical values of the loss function of a large-size network, where with overwhelming probability the critical values above the global minimizer (ground state) of the loss function are local minima exclusively. Above the band ((\u2212\u039bE0(H),\u2212\u039bE1(H))) containing only local minima (critical points of index 0), there is another one, ((\u2212\u039bE1(H),\u2212\u039bE2(H))), where one\n1The number of negative eigenvalues of the Hessian \u22072L\u039b,H at w is also called index of \u22072L\u039b,H at w.\ncan only find local minima and saddle points of index 1, and above this band there exists another one, ((\u2212\u039bE2(H),\u2212\u039bE3(H))), where one can only find local minima and saddle points of index 1 and 2, etc.\nThe band (\u2212E0(H),\u2212E\u221e) is in practice very narrow, i.e. it is order of magnitudes narrower than band (\u2212E\u221e, 0) (an example is shown in Figure 1 and 2), which indicates that low-index critical points lie \u2019close\u2019 to the global minimum.\nLogarithmic asymptotics of the mean number of critical points We will now define two nondecreasing, continuous functions on R, \u0398H and \u0398k,H as follows\n\u0398H(u) =  1 2 log(H\u22121)\u2212 H\u22122 4(H\u22121)\u2212I(u) if u\u2264\u2212E\u221e 1 2 log(H\u22121)\u2212 H\u22122 4(H\u22121) if \u2212E\u221e\u2264u \u2264 0\n1 2 log(H \u2212 1) if 0\u2264u\n,\nand for any integer k \u2265 0:\n\u0398k,H(u)=\n{ 1 2 log(H\u22121)\u2212 H\u22122 4(H\u22121)\u2212(k+1)I(u) if u\u2264\u2212E\u221e\n1 2 log(H\u22121)\u2212 H\u22122 4(H\u22121) if u\u2265\u2212E\u221e\nwhere\nI(u) = \u2212 u E2\u221e\n\u221a u2\u2212E2\u221e\u2212log(\u2212u+ \u221a u2\u2212E2\u221e)+logE\u221e.\nFigure 2 captures exemplary plots of the functions \u0398H(u) and \u0398k,H(u). Also note that the following corollary holds.\nCorollary 4.1. For all k > 0 and u < \u2212E\u221e, \u0398k,H(u) < \u03980,H(u).\nNext we will show the logarithmic asymptotics of the mean number of critical points (the asymptotics of the mean number of critical points can be found in the Supplementary material).\nTheorem 4.1 ([Auffinger et al., 2010], Theorem 2.5 and 2.8). For all H \u2265 2\nlim \u039b\u2192\u221e\n1 \u039b logE[C\u039b(u)] = \u0398H(u).\nand for all H \u2265 2 and k \u2265 0 fixed\nlim \u039b\u2192\u221e\n1 \u039b logE[C\u039b,k(u)] = \u0398k,H(u).\nFrom Theorem 4.1 and Corollary 4.1 the number of critical points in the band (\u2212\u039bE0(H),\u2212\u039bE\u221e(H)) increases exponentially as \u039b grows and that local minima dominate over saddle points and this domination also grows exponentially as \u039b grows. Thus for large-size networks the probability of recovering a saddle point in the band (\u2212\u039bE0(H),\u2212\u039bE\u221e(H)), rather than a local minima, goes to 0.\nHardness of recovering the global minimum Note that based on what was already shown recovering the global minimizer when starting from any (local) minima from one of the energy bands above, e.g. (\u2212\u039bEi(H),\u2212\u039bEi+1(H)), diverges with \u039b since it is bounded below by \u039b(E0(H) \u2212 Ei(H)). Furthemore, let us consider what happens if we cross the barrier. Suppose we are at a local minima with a scaled energy of \u2212E\u221e \u2212 \u03b4. In order to find a further low lying minima it has to pass through a saddle point. The moving particle has to go up at least to the level where there is equal amount of saddle points to have a decent chance of finding a path that might possibly take it to another local minima. This process takes exponentially long time so in practice finding the global minimum is not feasible.\nFigure 1 captures exemplary plots of the distributions of the mean number of critical points, local minima and low-index saddle points. Clearly local minima and low-index saddle points are located in the band (\u2212\u039bE0(H),\u2212\u039bE\u221e(H)) whereas high-index saddle points can only be found above the energy barrier \u2212\u039bE\u221e(H). Figure 1 also reveals the layered structure for the lowest critical values of the loss function.\nNote that the variance of the loss in Equation 9 is \u039b which suggests that the extensive quantities should scale with \u039b. In fact this is the reason behind the\nscaling factor in front of the summation in the loss. The relation to the logarithmic asymptotics is as follows: the number of critical values of the loss below the level \u039bu is roughly e\u039b\u0398H(u). The gradient descent gets trapped roughly at the barrier denoted by \u2212\u039bE\u221e, as will be shown in the experimental section."}, {"heading": "5 Experiments", "text": ""}, {"heading": "5.1 Experimental Setup", "text": "Spin-Glass To illustrate the theorems in Section 4, we conducted spin-glass simulations for different dimensions \u039b from 25 to 500. For each value of \u039b, we obtained an estimate of the distribution of minima by sampling 1000 initial points on the unit sphere and performing stochastic gradient descent (SGD) to find a minimum energy point. Note that throughout this section we will refer to the energy of the Hamiltonian of the spin-glass model as its loss.\nNeural Network We performed an analogous experiment on a scaled-down version of MNIST, where each image was downsampled to size 10\u00d7 10. Specifically, we trained 1000 networks with one hidden layer and n1 \u2208 {25, 50, 100, 250, 500} hidden units, each one starting from a random set of parameters sampled uniformly within the unit cube. All networks were trained for 200 epochs using SGD with learning rate decay.\nTo verify the validity of our theoretical assumption of parameter redundancy, we trained a neural network on a subset of MNIST using simulated annealing (SA) where 95% of parameters were assumed to be redundant. Specifically, we allowed the weights to take one of 3 values uniformly spaced in the interval [\u22121, 1]. We obtained less than 2.5% drop in accuracy, which demonstrates the heavy over-parametrization of neural networks as discussed in Section 3.\nSaddle Points It is necessary to verify that our solutions obtained through SGD are low-index critical points rather than high-index saddle points. It was\nobserved by [Dauphin et al., 2014] that certain optimization schemes have the potential to get trapped in high-index saddle points of poor quality. We ran two tests to ensure that this was not the case in our experimental setup. First, for n1 = {10, 25, 50, 100} we computed the eigenvalues of the Hessian of the loss function at each solution and computed the index. All eigenvalues less than 0.001 in magnitude were set to 0. Figure 5 captures an exemplary distribution of normalized indices, which is the proportion of negative eigenvalues, for n1 = 25 (the results for n1 = {10, 50, 100} can be found in the Supplementary material). It can be seen that all solutions are either minima or saddle points of very low normalized index (of the order 0.01).nhidden=25\nNext, we compared simulated annealing to SGD on a subset of MNIST. Simulated annealing does not\ncompute gradients and thus does not tend to become trapped in high-index saddle points. We found that SGD performed at least as well as simulated annealing, which indicates that becoming trapped in poor saddle points is not a problem in our experiments. The result of this comparison are in the Supplementary material. We emphasize that all figures in this paper should be read in color.\nScaling loss values To observe qualitative differences in behavior for different values of \u039b or n1, it is necessary to rescale the loss values to make their expected values approximately equal. For spin-glasses, the expected value of the loss at critical points scales linearly with \u039b, therefore we rescaled the losses by dividing them by \u039b (note that this normalization is in the statement of Theorem 4.1) which gives us the histogram of points at the correct scale. For MNIST experiments, we empirically found that the loss with respect to number of hidden units approximately follows an exponential power law: E[L] \u221d e\u03b1n \u03b2 1 . We fitted the coefficients \u03b1, \u03b2 and scaled the loss values to L/e\u03b1n \u03b2 1 ."}, {"heading": "5.2 Results", "text": "Figure 3 shows the distributions of the scaled losses for both sets of experiments. For the spin-glasses (left plot), we see that for small values of \u039b, we obtain poor local minima on many experiments, while for larger\nvalues of \u039b the distribution becomes increasingly concentrated around the energy barrier where local minima have high quality. We observe that the left tails for all \u039b touches the barrier that is hard to penetrate and as \u039b increases the values concentrate around \u2212E\u221e. In fact this concentration result has long been predicted but not proved until [Auffinger et al., 2010].\nWe see that qualitatively the distribution of losses for the neural network experiments (right plot) exhibits similar behavior. Even after scaling, the variance decreases with higher network sizes. This is clearly captured in Figure 4. This indicates that getting stuck in poor local minima is a major problem for smaller networks but becomes gradually of less importance as the network size increases. This is because critical points of large networks exhibit the layered structure where high-quality low-index critical points lie close to the global minimum."}, {"heading": "5.3 Relationship between train and test loss", "text": "The theory and experiments thus far indicate that minima lie in a band which gets smaller as the network size increases. This indicates that computable solutions become increasingly equivalent with respect to training error, but how does this relate to error on the test set? To determine this, we computed the correlation \u03c1 between training and test loss for all solutions for each network size, with the following results:\nWe see that training and test error become increasingly decorrelated as the network size increases. This provides further indication that attempting to find the absolute possible minimum is of limited use with regards to generalization performance."}, {"heading": "6 Conclusion", "text": "This paper establishes a connection between the neural network and the spin-glass model. We show that under certain assumptions, the loss function of the fully decoupled large-size neural network of depth H has similar landscape to the Hamiltonian of the H-spin spherical spin-glass model. We empirically demonstrate that both models studied here are highly similar also in real settings, despite the presence of variable dependencies in real networks. To the best of our knowledge our work is one of the first efforts in the literature to shed light on the theory of neural network optimization."}, {"heading": "7 Proof of Theorem 3.1", "text": "Proof. First we will prove the lower-bound on N . By the inequality between arithmetic and geometric mean the mass and the size of the network are connected as follows\nN \u2265 H \u221a \u03a82 H\nH \u221a n0nH\n= H \u221a\n\u03a82 H H \u221a d ,\nand since H \u221a\n\u03a8 HH\u221a d\n= H \u221a\u220fH\ni=1 niH \u2265 1 then\nN \u2265 H \u221a \u03a82 H H \u221a d \u2265 H \u221a \u03a8.\nNext we show the upper-bound on N . Let nmax = maxi\u2208{1,2,...,H} ni. Then\nN \u2264 Hn2max \u2264 H\u03a82."}, {"heading": "8 Proof of Theorem 3.2", "text": "Proof. We will first proof the following more general lemma.\nLemma 8.1. Let Y1 and Y2 be the outputs of two arbitrary binary classifiers. Assume that the first classifiers predicts 1 with probability p where, without loss of generality, we assume p \u2264 0.5 and \u22121 otherwise. Furthemore, let the prediction accuracy of the second classifier differ from the prediction accuracy of the first classifier by no more than \u2208 [0, p]. Then the following holds\ncorr(sign(Y1), sign(Y2))\n\u2265 1\u2212 2 \u2212 (1\u2212 2p) 2 \u2212 2(1\u2212 2p) 4 \u221a p(1\u2212 p)(p+ )(1\u2212 p+ ) .\nProof. Consider two random variables Z1 = sign(Y1) and Z2 = sign(Y2). Let X+ denote the set of data points for which the first classifier predicts +1 and let X\u2212 denote the set of data points for which the first classifier predicts \u22121 (X+ \u222a X\u2212 = X , where X is the entire dataset). Also let p = |X\n+| |X | . Furthermore, let\nX\u2212 denote the dataset for which Z1 = +1 and Z2 = \u22121 and X+ denote the dataset for which Z1 = \u22121 and Z2 = +1, where |X+ |+|X \u2212 | X = . Also let + = |X+ | X and \u2212 = |X\u2212 | X . Therefore\nZ1 = { 1 if x \u2208 X+ \u22121 if x \u2208 X\u2212\nand\nZ2 = { 1 if x \u2208 X+ \u222a X+ \\ X\u2212 \u22121 if x \u2208 X\u2212 \u222a X\u2212 \\ X+ .\nOne can compute that E[Z1] = 2p \u2212 1, E[Z2] = 2(p + + \u2212 \u2212) \u2212 1, E[Z1Z2] = 1 \u2212 2 , std(Zs) = 2 \u221a p(1\u2212 p), and finally std(Z\u039b) =\n2 \u221a (p+ + \u2212 \u2212)(1\u2212 p\u2212 + + \u2212). Thus we obtain\ncorr(sign(Y1), sign(Y2)) = corr(Z1, Z2) = E[Z1Z2]\u2212 E[Z1]E[Z2]\nstd(Z1)std(Z2)\n= 1\u2212 2 \u2212 (1\u2212 2p)2 + 2(1\u2212 2p)( + \u2212 \u2212) 4 \u221a p(1\u2212 p)(p+ + \u2212 \u2212)(1\u2212 p\u2212 + + \u2212)\n\u2265 1\u2212 2 \u2212 (1\u2212 2p) 2 \u2212 2(1\u2212 2p) 4 \u221a p(1\u2212 p)(p+ )(1\u2212 p+ )\n(10)\nNote that when the first classifier is network N considered in this paper and M is its (s, )-reduction image E[Y1] = 0 and E[Y2] = 0 (that follows from the fact that X\u2019s in Equation 3 have zero-mean). That implies p = 0.5 which, when substituted to Equation 10 gives the theorem statement."}, {"heading": "9 Proof of Theorem 3.3", "text": "Proof. Note that E[Y\u0302s] = 0 and E[Ys] = 0. Furthermore E[Y\u0302sY\u039b] = q2\u03c12 \u039b\u2211\ni1,i2,...,iH=1\nmin\n( \u03a8\n\u039bH , ti1,i2,...,iH ) H\u220f k=1 w2ik\nand\nstd(Y\u0302s) = q\u03c1 \u221a\u221a\u221a\u221a \u039b\u2211 i1,i2,...,iH=1 \u03a8 \u039bH H\u220f k=1 w2ik\nstd(Ys) = q\u03c1 \u221a\u221a\u221a\u221a \u039b\u2211 i1,i2,...,iH=1 ti1,i2,...,iH H\u220f k=1 w2ik .\nTherefore\ncorr(Y\u0302s, Ys)\n=\n\u039b\u2211 i1,...,iH=1 min ( \u03a8 \u039bH , ti1,...,iH ) H\u220f k=1\nw2ik\u221a\u221a\u221a\u221a\u221a  \u039b\u2211 i1,...,iH=1 \u03a8 \u039bH H\u220f k=1 w2ik  \u039b\u2211 i1,...,iH=1 ti1,...,iH H\u220f k=1 w2ik  \u2265 1\nc2 ,\nwhere the last inequality is the direct consequence of the uniformity assumption of Equation 4."}, {"heading": "10 Loss function as a H - spin spherical spin-glass model", "text": "We consider two loss functions, (random) absolute loss La\u039b,H(w) and (random) hinge loss Lh\u039b,H(w) defined in the main body of the paper. Recall that in case of the hinge loss max operator can be modeled as Bernoulli random variable, that we will refer to as M , with success (M = 1) probability \u03c1 \u2032 = C \u2032\n\u03c1 \u221a CH for some non-\nnegative constant C\u2032 . We assume M is independent of Y\u0302s. Therefore we obtain that\nLa\u039b,H(w) = { S \u2212 Y\u0302s if Yt = S S + Y\u0302s if Yt = \u2212S\nand\nLh\u039b,H(w) = EM,A[M(1\u2212 YtY\u0302s)]\n= { EM [M(1\u2212 Y\u0302s)] if Yt = 1 EM [M(1 + Y\u0302s)] if Yt = \u22121\nNote that both cases can be generalized as L\u039b,H(w) = {\nEM [M(S \u2212 Y\u0302s)] if Yt > 0 EM [M(S + Y\u0302s)] if Yt < 0 ,\nwhere in case of the absolute loss \u03c1 \u2032\n= 1 and in case of the hinge loss S = 1. Furthermore, using the fact that X\u2019s are Gaussian random variables one we can further generalize both cases as\nL\u039b,H(w) = S\u03c1 \u2032 +q \u039b\u2211 i1,i2,...,iH=1 Xi1,i2,...,iH\u03c1\u03c1 \u2032 H\u220f k=1 wik .\nLet w\u0303i = H\n\u221a \u03c1\u03c1\u2032\nC\u2032 wi for all i = {1, 2, . . . , k}. Note that w\u0303i =\n1\u221a C wi. Thus\nL\u039b,H(w) = S\u03c1 \u2032 + qC\n\u2032 \u039b\u2211\ni1,...,iH=1\nXi1,...,iH H\u220f k=1 w\u0303ik . (11)\nNote that the spherical assumption in Equation 7 directly implies that\n1\n\u039b \u039b\u2211 i=1 w\u03032i = 1\nTo simplify the notation in Equation 11 we drop the letter accents and simply denote w\u0303 as w. We skip constant S\u03c1 \u2032 and C\u2032 as it does not matter when minimizing the loss function. After substituting q = 1 \u03a8(H\u22121)/2H\nwe obtain\nL\u039b,H(w)= 1\n\u039b(H\u22121)/2 \u039b\u2211 i1,i2,...,iH=1 Xi1,i2,...,iHwi1wi2. . .wiH ."}, {"heading": "11 Asymptotics of the mean number of critical points and local minima", "text": "Below, we provide the asymptotics of the mean number of critical points (Theorem 11.1) and the mean number of local minima (Theorem 11.2), which extend Theorem 4.1. Those results are the consequences of Theorem 2.17. and Corollary 2.18. [Auffinger et al., 2010].\nTheorem 11.1. For H \u2265 3, the following holds as \u039b\u2192\u221e:\n\u2022 For u < \u2212E\u221e\nE[C\u039b(u)] = h(v)\u221a 2H\u03c0\nexp(I1(v)\u2212 v2 I \u2032 1(v))\n\u2212\u03a6\u2032(v) + I \u20321(v) \u039b\u2212 1 2\n\u00b7 exp (\u039b\u0398H(u)) (1 + o(1)),\nwhere v = \u2212u \u221a\nH 2(H\u22121) , \u03a6(v) = \u2212 H\u22122 2H v 2, h(v) = \u2223\u2223\u2223 v\u2212\u221a2 v+ \u221a 2 \u2223\u2223\u2223 14 + \u2223\u2223\u2223 v+\u221a2 v\u2212 \u221a 2 \u2223\u2223\u2223 14 and I1(v) = \u222b v\u221a 2 \u221a |x2 \u2212 2|dx.\n\u2022 For u = \u2212E\u221e\nE[C\u039b(u)] = 2A(0)\n\u221a 2H\n3(H \u2212 2) \u039b\u2212 1 3\n\u00b7 exp (\u039b\u0398H(u)) (1 + o(1)),\nwhere A is the Airy function of first kind.\n\u2022 For u \u2208 (\u2212E\u221e, 0)\nE[C\u039b(u)] = 2 \u221a\n2H(E2\u221e \u2212 u2) (2\u2212H)\u03c0u\n\u00b7 exp (\u039b\u0398H(u)) (1 + o(1)),\n\u2022 For u > 0\nE[C\u039b(u)] = 4 \u221a 2\u221a \u03c0(H \u2212 2) \u039b 1 2\n\u00b7 exp (\u039b\u0398H(0)) (1 + o(1)),\nTheorem 11.2. For H \u2265 3 and u < \u2212E\u221e, the following holds as \u039b\u2192\u221e:\nE[C\u039b,0(u)] = h(v)\u221a 2H\u03c0\nexp(I1(v)\u2212 v2 I \u2032 1(v))\n\u2212\u03a6\u2032(v) + I \u20321(v) \u039b\u2212 1 2\n\u00b7 exp (\u039b\u0398H(u)) (1 + o(1)),\nwhere v, \u03a6, h and I1 were defined in Theorem 11.1."}, {"heading": "12 Additional Experiments", "text": "Figure 8 shows the distribution of normalized indices, which is the proportion of negative eigenvalues, for neural networks with n1 = {10, 25, 50, 100}. We see that all solutions are minima or saddle points of very low index.\nFigure 6 compares SGD with SA.\nFigure 7 captures the zoomed (n1 = {10, 25, 50, 100}) boxplot generated based on the distributions of the scaled losses for the neural network experiment.\na) n1 = 10 nhidden=10\nnormalized index\nF re\nqu en\ncy\n0.0000 0.0005 0.0010 0.0015 0.0020 0.0025\n0 20\n0 40\n0 60\n0 80\n0\nb) n1 = 25 nhidden=25\nnormalized index\nF re\nqu en\ncy\n0.000 0.005 0.010 0.015\n0 20\n0 40\n0 60\n0 80\n0\nc) n1 = 50 nhidden=50"}], "references": [], "referenceMentions": [], "year": 2017, "abstractText": "We study the connection between the highly<lb>non-convex loss function of a simple model of<lb>the fully-connected feed-forward neural net-<lb>work and the Hamiltonian of the spherical<lb>spin-glass model under the assumptions of:<lb>i) variable independence, ii) redundancy in<lb>network parametrization, and iii) uniformity.<lb>These assumptions enable us to explain the<lb>complexity of the fully decoupled neural net-<lb>work through the prism of the results from<lb>the random matrix theory. We show that for<lb>large-size decoupled networks the lowest crit-<lb>ical values of the random loss function are<lb>located in a well-defined narrow band lower-<lb>bounded by the global minimum. Further-<lb>more, they form a layered structure. We<lb>show that the number of local minima out-<lb>side the narrow band diminishes exponen-<lb>tially with the size of the network. We em-<lb>pirically demonstrate that the mathemati-<lb>cal model exhibits similar behavior as the<lb>computer simulations, despite the presence<lb>of high dependencies in real networks. We<lb>conjecture that both simulated annealing and<lb>SGD converge to the band containing the<lb>largest number of critical points, and that<lb>all critical points found there are local min-<lb>ima and correspond to the same high learn-<lb>ing quality measured by the test error. This<lb>emphasizes a major difference between large-<lb>and small-size networks where for the lat-<lb>ter poor quality local minima have non-zero<lb>probability of being recovered. Simultane-<lb>ously we prove that recovering the global<lb>minimum becomes harder as the network size<lb>increases and that it is in practice irrelevant<lb>as global minimum often leads to overfitting.<lb>", "creator": "LaTeX with hyperref package"}}}