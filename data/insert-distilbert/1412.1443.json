{"id": "1412.1443", "review": {"conference": "NIPS", "VERSION": "v1", "DATE_OF_SUBMISSION": "3-Dec-2014", "title": "Structure learning of antiferromagnetic Ising models", "abstract": "in conducting this paper we lightly investigate the computational complexity of learning involving the graph structure components underlying a discrete undirected graphical model from i. i. d. samples. we first observe that the notoriously difficult problem of learning parities with noise can undoubtedly be further captured as a special case objective of learning graphical models. this leads forward to an unconditional computational lower bound of $ \\ omega ( p ^ { d / 2 } ) $ for learning general graphical models on $ p $ nodes of maximum degree $ d $, for analyzing the class of so - called statistical decomposition algorithms recently introduced by steven feldman shapiro et al ( 2013 ). the graphical lower bound suggests that the $ o ( p ^ d ) $ runtime required to exhaustively search over neighborhoods cannot alternatively be significantly cost improved without restricting the class of models.", "histories": [["v1", "Wed, 3 Dec 2014 19:08:55 GMT  (25kb)", "http://arxiv.org/abs/1412.1443v1", "15 pages. NIPS 2014"]], "COMMENTS": "15 pages. NIPS 2014", "reviews": [], "SUBJECTS": "stat.ML cs.IT cs.LG math.IT", "authors": ["guy bresler", "david gamarnik", "devavrat shah"], "accepted": true, "id": "1412.1443"}, "pdf": {"name": "1412.1443.pdf", "metadata": {"source": "CRF", "title": "Structure learning of antiferromagnetic Ising models", "authors": ["Guy Bresler", "David Gamarnik", "Devavrat Shah"], "emails": ["gbresler@mit.edu", "gamarnik@mit.edu", "devavrat@mit.edu"], "sections": [{"heading": null, "text": "ar X\niv :1\n41 2.\n14 43\nv1 [\nst at\n.M L\n] 3\nlower bound suggests that the O\u0303(pd+2) runtime required by Bresler, Mossel, and Sly\u2019s [2] exhaustive-search algorithm cannot be significantly improved without restricting the class of models.\nAside from structural assumptions on the graph such as it being a tree, hypertree, tree-like, etc., many recent papers on structure learning assume that the model has the correlation decay property. Indeed, focusing on ferromagnetic Ising models, Bento and Montanari [3] showed that all known low-complexity algorithms fail to learn simple graphs when the interaction strength exceeds a number related to the correlation decay threshold. Our second set of results gives a class of repelling (antiferromagnetic) models that have the opposite behavior: very strong interaction allows efficient learning in time O\u0303(p2). We provide an algorithm whose performance interpolates between O\u0303(p2) and O\u0303(pd+2) depending on the strength of the repulsion."}, {"heading": "1 Introduction", "text": "Graphical models have had tremendous impact in a variety of application domains. For unstructured high-dimensional distributions, such as in social networks, biology, and finance, an important first step is to determine which graphical model to use. In this paper we focus on the problem of structure learning: Given access to n independent and identically distributed samples \u03c3(1), . . . \u03c3(n) from an undirected graphical model representing a discrete random vector \u03c3 = (\u03c31, . . . , \u03c3p), the goal is to find the graph G underlying the model. Two basic questions are 1) How many samples are required? and 2) What is the computational complexity?\nIn this paper we are mostly interested in the computational complexity of structure learning. We first consider the problem of learning a general discrete undirected graphical model of bounded degree."}, {"heading": "1.1 Learning general graphical models", "text": "Several algorithms based on exhaustively searching over possible node neighborhoods have appeared in the last decade [4, 2, 5]. Abbeel, Koller, and Ng [4] gave algorithms for learning general graphical models close to the true distribution in Kullback-Leibler distance. Bresler, Mossel, and Sly [2] presented algorithms guaranteed to learn the true underlying graph. The algorithms in both [4] and [2] perform a search over candidate neighborhoods, and for a graph of maximum degree d, the computational complexity for recovering a graph on p nodes scales as O\u0303(pd+2) (where the O\u0303 notation hides logarithmic factors).\nWhile the algorithms in [2] are guaranteed to reconstruct general models under basic nondegeneracy conditions using an optimal number of samples n = O(d log p) (sample complexity lower bounds were proved by Santhanam and Wainwright [6] as well as [2]), the exponent d in the O\u0303(pd+2) run-time is impractically high even for constant but large graph degrees. This has motivated a great deal of work on structure learning for special classes of graphical models. But before giving up on general models, we ask the following question:\nQuestion 1: Is it possible to learn the structure of general graphical models on p nodes with maximum degree d using substantially less computation than pd?\nOur first result suggests that the answer to Question 1 is negative. We show an unconditional computational lower bound of p d 2 for the class of statistical algorithms introduced by Feldman et al. [1]. This class of algorithms was introduced in order to understand the apparent difficulty of the Planted Clique problem, and is based on Kearns\u2019 statistical query model [7]. Kearns showed in his landmark paper that statistical query algorithms require exponential computation to learn parity functions subject to classification noise, and our hardness construction is related to this problem. Most known algorithmic approaches (including Markov chain Monte Carlo, semidefinite programming, and many others) can be implemented as statistical algorithms, so the lower bound is fairly convincing.\nWe give background and prove the following theorem in Section 4.\nTheorem 1.1. Statistical algorithms require at least \u2126(p d 2 ) computation steps in order to learn the structure of a general graphical models of degree d.\nIf complexity pd is to be considered intractable, what shall we consider as tractable? Writing algorithm complexity in the form c(d)pf(d), for high-dimensional (large p) problems the exponent f(d) is of primary importance, and we will think of tractable algorithms as having an f(d) that is bounded by a constant independent of d. The factor c(d) is also important, and we will use it to compare algorithms with the same exponent f(d).\nIn light of Theorem 1.1, reducing computation below p\u2126(d) requires restricting the class of models. One can either restrict the graph structure or the nature of the interactions between variables. The seminal paper of Chow and Liu [8] makes a model restriction of the first type, assuming that the graph is a tree; generalizations include to polytrees [9], hypertrees [10], and others. Among the many possible assumptions of the second type, the correlation decay property is distinguished: to the best of our knowledge all existing low-complexity algorithms require the correlation decay property [3]."}, {"heading": "1.2 Correlation decay property", "text": "Informally, a graphical model is said to have the correlation decay property (CDP) if any two variables \u03c3s and \u03c3t are asymptotically independent as the graph distance between s and t increases. Exponential decay of correlations holds when the distance from independence decreases exponentially fast in graph distance, and we will mean this stronger form when referring to correlation decay. Correlation decay is known to hold for a number of pairwise graphical models in the so-called high-temperature regime, including Ising, hard-core lattice gas, Potts (multinomial) model, and others (see, e.g., [11, 12, 13, 14, 15, 16]).\nBresler, Mossel, and Sly [2] observed that it is possible to efficiently learn models with (exponential) decay of correlations, under the additional assumption that neighboring variables have correlation bounded away from zero (as is true, e.g., for the ferromagnetic Ising model in the high temperature regime). The algorithm they proposed for this setting pruned the candidate set of neighbors for each node to roughly sizeO(d) by retaining only those variables with sufficiently high correlations, and then within this set performed the exhaustive search over neighborhoods mentioned before, resulting in a computational cost of dO(d)O\u0303(p2). The greedy algorithms of Netrapali et al. [17] and Ray et al. [18] also require the correlation decay property and perform a similar pruning step by retaining only nodes with high pairwise correlation; they then use a different method to select the true neighborhood.\nA number of papers consider the problem of reconstructing Ising models on graphs with few short cycles, beginning with Anandkumar et al. [19]. Their results apply to the case of Ising models on sparsely connected graphs such as the Erdo\u0308s-Renyi random graph G(p, dp ). They additionally require the interaction parameters to be either generic or ferromagnetic. Ferromagnetic models have the benefit that neighbors always have a non-negligible correlation because the dependencies cannot cancel, but in either case the results still require the CDP to hold. Wu et al. [20] remove the assumption of generic parameters in [19], but again require the CDP.\nOther algorithms for structure learning are based on convex optimization, such as Ravikumar et al.\u2019s [21] approach using regularized node-wise logistic regression. While this algorithm does not explicitly require the CDP, Bento and Montanari [3] found that the logistic regression algorithm of [21] provably fails to learn certain ferromagnetic Ising model on simple graphs not satisfying the CDP. Other convex optimization-based algorithms such as [22, 23, 24] require similar incoherence or restricted isometry-type conditions that are difficult to verify, but likely also require the CDP. Since all known algorithms for structure learning require the CDP, we ask the following question (paraphrasing Bento and Montanari):\nQuestion 2: Is low-complexity structure learning possible for models which do not exhibit the CDP, on general bounded degree graphs?\nOur second main result answers this question affirmatively by showing that a broad class of repelling models on general graphs can be learned using simple algorithms, even when the underlying model does not exhibit the CDP."}, {"heading": "1.3 Repelling models", "text": "The antiferromagnetic Ising model has a negative interaction parameter, whereby neighboring nodes prefer to be in opposite states. Other popular antiferromagnetic models include the Potts or coloring model, and the hard-core model.\nAntiferromagnetic models have the interesting property that correlations between neighbors can be zero due to cancellations. Thus algorithms based on pruning neighborhoods using pairwise correlations, such as the algorithm in [2] for models with correlation decay, does not work for anti-ferromagnetic models. To our knowledge there are no previous results that improve on the pd computational complexity for structure learning of antiferromagnetic models on general graphs of maximum degree d.\nOur first learning algorithm, described in Section 2, is for the hard-core model.\nTheorem 1.2 (Informal). It is possible to learn strongly repelling models, such as the hardcore model, with run-time O\u0303(p2).\nWe extend this result to weakly repelling models (equivalent to the antiferromagnetic Ising model parameterized in a nonstandard way, see Section 3). Here \u03b2 is a repelling strength and h is an external field.\nTheorem 1.3 (Informal). Suppose \u03b2 \u2265 (d\u2212\u03b1)(h+ ln 2) for a nonnegative integer \u03b1. Then it is possible to learn an antiferromagnetic Ising model with interaction \u03b2, with run-time O\u0303(p2+\u03b1).\nThe computational complexity of the algorithm interpolates between O\u0303(p2), achievable for strongly repelling models, and O\u0303(pd+2), achievable for general models using exhaustive search. The complexity depends on the repelling strength of the model, rather than structural assumptions on the graph as in [19, 20].\nWe remark that the strongly repelling models exhibit long-range correlations, yet the algorithmic task of graph structure learning is possible using a certain local procedure.\nThe focus of this paper is on structure learning, but the problem of parameter estimation is equally important. It turns out that the structure learning problem is strictly more challenging for the models we consider: once the graph is known, it is not difficult to estimate the parameters with low computational complexity (see, e.g., [4])."}, {"heading": "2 Learning the graph of a hard-core model", "text": "We warm up by considering the hard-core (independent set) model. The analysis in this section is straightforward, but serves as an example to highlight the fact that the CDP is not a necessary condition for structure learning.\nGiven a graphG = (V,E) on |V | = p nodes, denote by I(G) \u2286 {0, 1}p the set of independent set indicator vectors \u03c3, for which at least one of \u03c3i or \u03c3j is zero for each edge {i, j} \u2208 E(G). The hardcore model with fugacity \u03bb > 0 assigns nonzero probability only to vectors in I(G), with\nP(\u03c3) = \u03bb|\u03c3|\nZ , \u03c3 \u2208 I(G) . (2.1)\nHere |\u03c3| is the number of entries of \u03c3 equal to one and Z = \u2211\n\u03c3\u2208I(G) \u03bb |\u03c3| is the normalizing\nconstant called the partition function. If \u03bb > 1 then more mass is assigned to larger independent sets. (We use indicator vectors to define the model in order to be consistent with the antiferromagnetic Ising model in the next section.)\nOur goal is to learn the graph G = (V,E) underlying the model (2.1) given access to independent samples \u03c3(1), . . . , \u03c3(n). The following simple algorithm reconstructs G efficiently.\nAlgorithm 1 simpleHC\nInput: n samples (\u03c3(1), . . . , \u03c3(n)) \u2208 {0, 1}p. Output: edge set E\u0302. 1: Let S = \u2205 2: For each i, j, k: 3: If \u03c3 (k) i = \u03c3 (k) j = 1, then S \u2190 S \u222a {i, j} 4: Output E\u0302 = Sc\nThe idea behind the algorithm is very simple. If {i, j} belongs to the edge set E(G), then for every sample \u03c3(k) either \u03c3 (k) i = 0 or \u03c3 (k) j = 0 (or both). Thus for every i, j and k such that \u03c3 (k) i = \u03c3 (k) j = 1 we can safely declare {i, j} not to be an edge. To show correctness of the algorithm it is therefore sufficient to argue that for every non-edge {i, j} there is a high likelihood that such an independent set \u03c3(k) will be sampled.\nBefore doing this, we observe that simpleHC actually computes the maximum-likelihood estimate for the graph G. To see this, note that an edge e = {i, j} for which \u03c3 (k) i = \u03c3 (k) j = 1 for some k cannot be in G\u0302, since P(\u03c3(k)|G\u0302+e) = 0 for any G\u0302. Thus the ML estimate contains a subset of those edges e which have not been ruled out by \u03c3(1), . . . , \u03c3(n). But adding any such edge e to the graph decreases the value of the partition function in (2.1) (the sum is over fewer independent sets), thereby increasing the likelihood of each of the samples.\nThe sample complexity and computational complexity of simpleHC is as follows:\nTheorem 2.1. Consider the hard-core model (2.1) on a graph G = (V,E) on |V | = p nodes and with maximum degree d. The sample complexity of simpleHC is\nn = O(22d max{1, \u03bb2d} log p) , (2.2)\ni.e. with this many samples the algorithm simpleHC correctly reconstructs the graph with probability 1\u2212 o(1). The computational complexity is\nO(np2) = O((2\u03bb)2d\u22122p2 log p) . (2.3)\nProof. Algorithm c correctly reconstructs the graph G if for every e = {i, j} not in E(G), at least one observed independent set vector \u03c3(k) contains both i and j. Let Akij = {\u03c3 (k) i = 0 or \u03c3 (k) j = 0} be the event that at least one of i or j is missing from \u03c3 (k), and let Aij = \u2229nk=1A k ij . We have by the union bound and independence of A k ij for different k,\nP(error) \u2264 P\n( \u22c3\n(i,j)\u2208Ec\nAij\n) \u2264 ( p\n2\n) P(\u2229nk=1A k ij) = ( p\n2\n) P(A1ij) n \u2264 ( p\n2\n) (1 \u2212 \u03b3)n .\nThe last inequality is from Lemma 2.3, proved at the end of this section, with the quantity \u03b3 defined in the statement of the Lemma. To make P(error) approach zero at the rate 1/p it suffices to take\nn = 3\u03b3\u22121 log p .\nThis proves the theorem.\nWe next show that the sample complexity bound in Theorem 2.1 is basically tight:\nTheorem 2.2 (Sample complexity lower bound). Consider the hard-core model (2.1). There is a family of graphs on p nodes with maximum degree d such that if the probability of successful reconstruction is above 1/2, then the number of samples must be\nn = \u2126 ( (1 + \u03bb)d\u22122 log p ) .\nProof. We give a set of graphs G on p nodes with maximum degree at most d so that given samples generated from a graph selected uniformly at random from G, the (optimal) maximum a posteriori (MAP) rule requires the number of samples stated in the theorem. It is possible to prove the theorem using Fano\u2019s inequality, but since we know the ML rule is equivalent to algorithm simpleHC, we can give a direct proof.\nWe define a set of graphs Gm as follows. Let G0 consist ofm stars of degree d\u22121, i.e. for each 1 \u2264 v \u2264 m add d \u2212 1 nodes uv,1, . . . , uv,d\u22121 with edges {v, uv,i}. There are p = m \u00b7 (d\u2212 1) nodes in total. Now we let Gm be the set of ( m 2 ) graphs Gij obtained by adding the edge {i, j} between a pair of star centers i and j. The graph G is selected uniformly at random from Gm and samples are generated from the model (2.1).\nThe samples \u03c3(1), . . . , \u03c3(n) do not rule out edge e = {i, j} if there is no \u03c3(k) with \u03c3 (k) i = \u03c3 (k) j = 1. Suppose that none of edges e1, e2, . . . , er have been ruled out. In this case the observations have the same likelihood under Get for each 1 \u2264 t \u2264 r, and it follows that the probability of error is at least 1\u2212 1/(t\u2212 1) since the prior on the models is uniform.\nFrom now onward we assume without loss of generality (by symmetry of the construction) that samples are generated from the model on Gab. Call \u03c3 (k) a witness for non-edge {i, j} 6= {a, b} if \u03c3 (k) i = \u03c3 (k) j = 1. We proceed by upper bounding the probability of observing a\nwitness for each of the ( m 2 ) \u2212 1 missing edges. Each star center i is included in a particular random independent set \u03c3(k) with probability at most\n\u03bb\n\u03bb+ \u2211d\u22121\nr=0 ( d\u22121 r ) \u03bbr\n\u2264 1\n\u03bb\u22121(1 + \u03bb)d\u22121 \u2264\n1\n(1 + \u03bb)d\u22122 := q ,\neven conditional on any assignment to other star centers. It follows that \u03c3(k) is a witness for non-edge {i, j} with probability at most q2.\nTake an arbitrary cardinality m/3 matching M of non-edges (i.e. no two of the non-edges share an endpoint) with each edge also disjoint from a and b (recall that we are focusing on graph Gab). For each e \u2208 M let Xe be the indicator variable for the event that in n samples, non-edge e has no witness. Note that the variablesXe are mutually independent. If we define Z = \u2211 e\u2208M Xe, then we have EZ \u2265 (m/3)(1\u2212 q 2)n, and moreover, EZ2 \u2264 EZ + (EZ)2.\nBy the Paley-Zygmund inequality,\nP ( Z \u2265 EZ\n10\n) \u2265 4(EZ)2\n5EZ2 \u2265\n4\n5(1 + EZ/(EZ)2) .\nIf EZ \u2265 40, then P(Z \u2265 3) \u2265 2/3. If Z \u2265 4, then by the above discussion, the probability of error is at least 3/4, hence EZ \u2265 40 implies P(error) \u2265 23 \u00b7 3 4 = 1/2. Hence if the probability of successful reconstruction is above 1/2, then EZ < 40, which requires\nn \u2265 (1 + o(1)) logm/3\n\u2212 log(1\u2212 q2) = \u2126\n( (1 + \u03bb)d\u22122 log p ) ,\nwhere we used the fact that \u2212 log(1\u2212 q2) = q2 + o(q4) and q\u22121 = (1 + \u03bb)d\u22122.\nLemma 2.3. Suppose edge e = (i, j) /\u2208 G, and let I be an independent set chosen according to the Gibbs distribution (2.1). Then P({i, j} \u2286 I) \u2265 (22d+1 max{1, \u03bb2d})\u22121 , \u03b3 .\nProof. We can decompose the partition function as\nZ = \u2211\nI\n\u03bb|I| = \u2211\nI\u2208S\u2205,\u2205\n\u03bb|I| + \u2211\nI\u2208S\u2205,j\n\u03bb|I| + \u2211\nI\u2208Si,\u2205\n\u03bb|I| + \u2211\nI\u2208Si,j\n\u03bb|I|\n: = Z\u2205,\u2205 + Z\u2205,j + Zi,\u2205 + Zi,j , (2.4)\nwhere Sij = {I : i, j \u2208 I}, Si,\u2205 = {I : i \u2208 I, j /\u2208 I}, etc. Our goal is to lower bound Zi,j , since\nP({i, j} \u2286 I) =\n\u2211 I:{i,j}\u2286I \u03bb |I|\n\u2211 I \u03bb |I| = Zi,j Z . (2.5)\nWe begin by observing that\n|Si,j | \u00b7 2 d \u2265 |S\u2205,j| , (2.6)\nbecause for each independent set I with i \u2208 I, there are at most 2d distinct independent sets I \u2032 with i /\u2208 I \u2032 with some subset of (at most d) neighbors of i included. One way of observing this is defining the map f : S\u2205,j \u2192 Si,j by I 7\u2192 {i} \u222a I \\ N (i). The map f takes at most 2d sets I \u2032 \u2208 S\u2205,j to each I \u2208 Si,j , which implies (2.6).\nNow, each such set I \u2032 mapping to I has weight at most a factor max{1, \u03bbd\u22121} larger than I, so\n2dmax{1, \u03bbd\u22121}Zi,j \u2265 Z\u2205,j . (2.7)\nSimilar reasoning gives\n2dmax{1, \u03bbd\u22121}Zi,j \u2265 Zi,\u2205, and 2 2dmax{1, \u03bb2d\u22122}Zi,j \u2265 Z\u2205,\u2205 . (2.8)\nUsing these estimates, we obtain\nZ \u2264 Zi,j ( 1 + 4 \u00b7 2d\u22121max{1, \u03bbd\u22121}+ 4 \u00b7 22d\u22122max{1, \u03bb2d\u22122} ) \u2264 Zi,j \u00b7 2 2d+1 max{1, \u03bb2d} ,\nand plugging into (2.5) proves the lemma."}, {"heading": "3 Learning anti-ferromagnetic Ising models", "text": "In this section we consider the anti-ferromagnetic Ising model on a graph G = (V,E). We parametrize the model in such a way that each configuration has probability\nP(\u03c3) = 1\nZ exp\n{ H(\u03c3) } , \u03c3 \u2208 {0, 1}p , (3.1)\nwhere H(\u03c3) = \u2212\u03b2 \u2211\n(i,j)\u2208E\n\u03c3i\u03c3j + \u2211\ni\u2208V\nhi\u03c3i . (3.2)\nHere \u03b2 > 0 and {hi}i\u2208V are real-valued parameters, and we assume that |hi| \u2264 h for all i. Working with configurations in {0, 1}p rather than the more typical {\u22121,+1}p amounts to a reparametrization (which is without loss of generality as shown for example in Appendix 1 of [25]). Setting hi = h = ln \u03bb for all i, we recover the hard-core model with fugacity \u03bb in the limit \u03b2 \u2192 \u221e, so we think of (3.2) as a \u201csoft\u201d independent set model."}, {"heading": "3.1 Strongly antiferromagnetic models", "text": "We start by considering the situation in which the repelling strength \u03b2 is sufficiently large that we can modify the approach used for the hard-core model.\nDefine the empirical conditional probability\nP\u0302(\u03c3a = 1|\u03c3b = 1) := P\u0302(\u03c3a = 1, \u03c3b = 1)\nP\u0302(\u03c3b = 1) ,\nwhere for any set S \u2282 V and xS \u2208 {0, 1}|S|,\nP\u0302(\u03c3V = xV ) = 1\nn\nn\u2211\nk=1\n1 {\u03c3 (k)\nV =xV }\n.\nThe following lemma shows that we can obtain good estimates for P(\u03c3a = 1|\u03c3b = 1).\nLemma 3.1. Suppose that P(\u03c3b = 1) \u2265 q for all b \u2208 V . If the number of samples is n \u2265 (2/q2\u01eb2) log ( 8p2/\u03b6 ) , then with probability at least 1\u2212 \u03b6 we have for all a, b \u2208 V\n|P(\u03c3a = 1|\u03c3b = 1)\u2212 P\u0302(\u03c3a = 1|\u03c3b = 1)| \u2264 \u01eb .\nThe proof is given in the Supplementary Material.\nThe structure estimation algorithm StrongRepelling, described next, determines\nwhether each edge {a, b} is present based on comparing P\u0302 to a threshold.\nAlgorithm 2 StrongRepelling\nInput: \u03b2, h, d, and n samples \u03c3(1), . . . , \u03c3(n) \u2208 {0, 1}p. Output: edge set E\u0302. 1: Let \u03b4 = (1 + 2deh(d\u22121))\u22122 and E\u0302 = \u2205 2: For each possible edge {a, b} \u2208 ( V 2 ) : 3: If P\u0302 (\u03c3a = 1|\u03c3b = 1) \u2264 (1 + e\u03b2\u2212h)\u22121 + \u03b4, then add edge (a, b) to E\u0302"}, {"heading": "4: Output E\u0302", "text": "The performance of algorithm StrongRepelling is stated next in Proposition 3.2. The proof is similar to that of Theorem 2.1, replacing Lemma 2.3 by Lemma 3.3 below. Theorem 3.7, given in the next subsection, subsumes Proposition 3.2, so we prove only the stronger Theorem 3.7.\nProposition 3.2. Consider the antiferromagnetic Ising model (3.2) on a graph G = (V,E) on p nodes and with maximum degree d. If\n\u03b2 \u2265 (d+ 2)(h+ ln 2) ,\nthen algorithm StrongRepelling has sample complexity\nn = O ( 22de2h(d+1) log p ) ,\ni.e. this many samples are sufficient to reconstruct the graph with probability 1\u2212 o(1). The computational complexity of StrongRepelling is\nO(np2) = O ( 22de2h(d+1)p2 log p ) .\nWhen the interaction parameter \u03b2 \u2265 (d + 2)(h+ ln 2) it is possible to identify edges using pairwise statistics. The next lemma shows the necessary separation.\nLemma 3.3. We have the following estimates:\n(i) If (a, b) /\u2208 E(G), then P(\u03c3a = 1|\u03c3b = 1) \u2265 1\n1+2deg(a)eh(deg(a)+1) .\n(ii) Conversely, if (a, b) \u2208 E(G), then P(\u03c3a = 1|\u03c3b = 1) \u2264 1\n1+e\u03b2\u2212h .\n(iii) For any b \u2208 V , P(\u03c3b = 1) \u2265 1\n1+2deg(b)eh(deg(b)+1) .\nProof. We start by defining restricted partition function summations: Let\nSab = {\u03c3 \u2208 {0, 1} p : \u03c3a = \u03c3b = 1} ,\nSa\u2205 = {\u03c3 \u2208 {0, 1} p : \u03c3a = 1, \u03c3b = 0} ,\nand analogously for S\u2205b and S\u2205\u2205. We then define Zab = \u2211\n\u03c3\u2208Sab exp(H(\u03c3)) and again\nanalogously for Za\u2205, Z\u2205b, Z\u2205\u2205.\nWe first prove part (i) of the lemma, in which we assume that (a, b) /\u2208 E(G) and lower bound the probability\nP(\u03c3a = 1|\u03c3b = 1) = Zab\nZab + Z\u2205b .\nTo this end, consider the map f : S\u2205b \u2192 Sab defined by taking a configuration \u03c3, setting \u03c3i = 0 for neighbors i \u2208 N(a), and then setting \u03c3a = 1. Since the assumption (a, b) /\u2208 E(G) implies that \u03c3a = \u03c3b = 1 is a valid assignment to these variables, the definition of f implies in particular that (f(\u03c3))b = 1 if \u03c3b = 1, so indeed f(\u03c3) \u2208 Sab for \u03c3 \u2208 S\u2205b.\nNow, at most 2deg(a) sets are mapped by f to any one set (since the neighbors of a can be in any configuration), and for any \u03c3 \u2208 S\u2205b, exp(H(f(\u03c3)) \u2265 exp(H(\u03c3) \u2212 h(deg(a) + 1)). This shows that 2deg(a) exp[h(deg(a)+1)]Zab \u2265 Z\u2205b , and proves part (i) of the lemma. The proof of part (iii) is omitted as it is almost identical to part (i).\nWe now turn to part (ii), assuming that (a, b) \u2208 E(G). Consider the map g : Sab \u2192 S\u2205b taking \u03c3 \u2208 Sab and setting \u03c3a = 0 (removing node a from the independent set). The map g is one-to-one, and H increases by \u03b2 due to resolving the conflict on edge (a, b), but decreases by ha \u2264 h due to omitting node a: exp(H(g(\u03c3))) \u2265 exp(H(\u03c3) + \u03b2 \u2212 h). This shows that Zab \u2265 e\u2212\u03b2+hZ\u2205b , and completes the proof."}, {"heading": "3.2 Weakly antiferromagnetic models", "text": "In this section we focus on learning weakly repelling models and show a trade-off between computational complexity and strength of the repulsion. Recall that for strongly repelling models (with \u03b2 \u2265 d(h + ln 2)) our algorithm has run-time O(p2 log p), the same as for the hard-core model (infinite repulsion).\nFor a subset of nodes U \u2286 V , let G \\ U denote the graph obtained from G by removing nodes in U (as well as any edges incident to nodes in U).\nWe can effectively remove nodes from the graph by conditioning: The family of models (3.2) has the property that conditioning on \u03c3i = 0 amounts to removing node i from the graph.\nFact 3.4 (Self-reducibility). Let G = (V,E), and consider the model (3.2). Then for any subset of nodes U \u2286 V , the probability law PG(\u03c3 \u2208 \u00b7 |\u03c3U = 0) is equal to PG\\U (\u03c3V \\U \u2208 \u00b7 ) with the same \u03b2 and the natural restriction of (hi)i\u2208V to (hi)i\u2208V \\U .\nThe following corollary is immediate from Lemma 3.3.\nCorollary 3.5. We have the conditional probability estimates for deleting subsets of nodes:\n(i) If (a, b) /\u2208 E(G), then for any subset of nodes U \u2282 V \\ {a, b},\nPG\\U (\u03c3a = 1|\u03c3b = 1) \u2265 1\n1 + 2degG\\U (a)eh(degG\\U (a)+1) .\n(ii) Conversely, if (a, b) \u2208 E(G), then for any subset of nodes U \u2286 V \\ {a, b}\nPG\\U (\u03c3a = 1|\u03c3b = 1) \u2264 1\n1 + e\u03b2\u2212h .\nThe final ingredient is to show that we can condition by restricting attention to a subset of the observed data, \u03c3(1), . . . , \u03c3(n), without throwing away too many samples.\nLemma 3.6. Let U \u2286 V be a subset of nodes and denote the subset of samples with variables \u03c3U equal to zero by AU = {\u03c3(k) : \u03c3 (k) u = 0 for all u \u2208 U}. Then with probability at least 1\u2212 exp(\u2212n/8(1 + eh)2|U|) the number |AU | of such samples is at least n 2 \u00b7 (1 + e h)\u2212|U|.\nProof. We start by computing the probability that a particular sample \u03c3(k) is in AU , or equivalently that \u03c3 (k) U = 0. Let W \u2286 V be any subset of nodes, and denote by xW an assignment to the corresponding variables. Due to the antiferromagnetic nature of the interaction, the distribution (3.2) satisfies the monotonicity property\nP(\u03c3a = 1|\u03c3W = xW ) \u2264 P(\u03c3a = 1|\u03c3W = xW , \u03c3b = 0)\nfor any neighbor b \u2208 N(a) \\W . This monotonicity together with Bayes\u2019 rule gives\nP(\u03c3U = 0) =\n|U|\u220f\ni=1\nP(\u03c3ui = 0|\u03c3u1 = \u00b7 \u00b7 \u00b7 = \u03c3ui\u22121 = 0) \u2265\n|U|\u220f\ni=1\nP(\u03c3ui = 0|\u03c3N(ui) = 0)\n=\n|U|\u220f\ni=1\n[1 + ehi ]\u22121 \u2265 (1 + eh)\u2212|U| .\nDenoting the last displayed quantity by q, we see that the number of samples obtained, |AU |, stochastically dominates a Binom(n, q) random variable. We apply Azuma\u2019s inequality, which states that\nP(Bin(n, q)\u2212 nq \u2264 \u2212nt) \u2264 exp(\u2212nt2/2),\nwith t = q/2 and this proves the lemma.\nWe now present the algorithm. Effectively, it reduces node degree by removing nodes (which can be done by conditioning on value zero as discussed above), and then applies the strong repelling algorithm to the residual graph.\nAlgorithm 3 WeakRepelling\nInput: \u03b2, h, d, and n samples \u03c3(1), . . . , \u03c3(n) \u2208 {0, 1}p. Output: edge set E\u0302. 1: Let \u03b4 = (4 + 4 \u00b7 2d\u2212\u03b1eh(d\u2212\u03b1+1))\u22121, E\u0302 = \u2205, and \u03b1 = \u2308d\u2212 \u03b2/(h+ ln 2)\u2309 2: For each {a, b} \u2208 ( V 2 ) : 3: For each U \u2286 V \\ {a, b} of size |U | \u2264 \u03b1"}, {"heading": "4: Compute P\u0302G\\U (\u03c3a = 1|\u03c3b = 1)", "text": "5: If maxU :|U|\u2264\u03b1 P\u0302G\\U (\u03c3a = 1|\u03c3b = 1) \u2264 (1 + e \u03b2\u2212h)\u22121 + \u03b4, then add {a, b} to E\u0302\n6: Output E\u0302\nTheorem 3.7. Let \u03b1 \u2264 d be a nonnegative integer, and consider the antiferromagnetic Ising model 3.2 with\n\u03b2 \u2265 (d+ 2\u2212 \u03b1)(h+ ln 2)\non a graph G. Algorithm WeakRepelling reconstructs the graph with probability 1\u2212 o(1) as p \u2192 \u221e using\nn = O ( (1 + eh)2\u03b1(d+ 2)24de4h(d+1) log p )\ni.i.d. samples, with run-time\nO ( np2+\u03b1 ) = O\u0303\u03b2,h,d(p 2+\u03b1) .\nProof. We first argue that all of the empirical conditional probabilities P\u0302G\\U (\u03c3a = 1|\u03c3b = 1) computed in Step 4 of algorithm WeakRepelling are accurate up to tolerance \u03b4 when considering subsets U of cardinality up to \u03b1, i.e.,\n|P\u0302G\\U (\u03c3a = 1|\u03c3b = 1)\u2212 PG\\U (\u03c3a = 1|\u03c3b = 1)| \u2264 \u03b4 . (3.3)\nThere are at most \u03b1 ( p \u03b1 ) \u2264 \u03b1p\u03b1 subsets |U | of size at most \u03b1. By Lemma 3.6, for each such U , with probability at least 1\u2212exp(\u2212n/8(1+eh)2|U|) \u2265 1\u2212exp(\u2212n/8(1+eh)2\u03b1) the number |AU | of samples with \u03c3U = 0 is at least n 2 \u00b7 (1+ e\nh)\u2212\u03b1. It follows from the union bound that with probability at least\n1\u2212 \u03b1p\u03b1 exp(\u2212n/8(1 + eh)2\u03b1)\nwe have |AU | \u2265 n 2 \u00b7 (1 + e h)\u2212\u03b1 for all U with |U | \u2264 \u03b1. By the assumed n in the theorem statement, this holds with probability 1 \u2212 o(1). Denote the effective sample size by n\u2032 = n 2 \u00b7 (1 + e h)\u2212\u03b1.\nWe now apply Lemma 3.1 with\n\u01eb = \u03b4 := 1\n4(1 + 2d\u2212\u03b1eh(d\u2212\u03b1+1)) .\nThis requires n\u2032 \u2265 (2/q2\u01eb2) log ( 8p2/\u03b6 ) , where q = ( 1 + 2deg(b)eh(deg(b)+1) )\u22121 and we can\ntake \u03b6 = 1/p. The value of n given in the theorem statement suffices in order that (3.3) holds for all a, b \u2208 V \\ U .\nWe first argue that E \u2286 E\u0302, that is, all true edges are added to E\u0302. Consider an arbitrary edge e = (a, b) \u2208 E. By Corollary 3.5 and (3.3),\nmax U :|U|\u2264\u03b1\nP\u0302G\\U (\u03c3a = 1|\u03c3b = 1) \u2264 (1 + e \u03b2\u2212h)\u22121 + \u03b4 := A\u22121 + \u03b4 ,\nso in Line 5 of algorithm WeakRepelling the edge e is added to E\u0302.\nWe next show that E\u0302 \u2286 E, so only true edges are included. Suppose e = (a, b) /\u2208 E. By choosing U \u2286 \u2202a \\ {b}, Corollary 3.5 and (3.3) imply that\nP\u0302G\\U (\u03c3a = 1|\u03c3b = 1) \u2265 ( 1 + 2d\u2212\u03b1eh(d\u2212\u03b1+1) )\u22121 \u2212 \u03b4 := B\u22121 \u2212 \u03b4 ,\nhence the same inequality applies to the maximum computed in Line 5 of the algorithm. Now, under the assumption \u03b2 \u2265 (d+ 2\u2212 \u03b1)(h+ ln 2), we have\nA\u2212 1 = e\u03b2\u2212h \u2265 4 \u00b7 e(d\u2212\u03b1)heh2d\u2212\u03b1 = 4(B \u2212 1) .\nHence\nB\u22121 \u2212A\u22121 \u2265 1\nB \u2212\n1\n4B \u2212 3 =\n3B \u2212 3\nB(4B \u2212 3) >\n1\n2B = 2\u03b4 ,\nwhere the last inequality used the fact that B \u2265 2. This shows that e /\u2208 E is not added to E\u0302 and completes the proof."}, {"heading": "4 Statistical algorithms and proof of Theorem 1.1", "text": "We start by describing the statistical algorithm framework introduced by [1]. In this section it is convenient to work with variables taking values in {\u22121,+1} rather than {0, 1}."}, {"heading": "4.1 Background on statistical algorithms", "text": "Let X = {\u22121,+1}p denote the space of configurations and let D be a set of distributions over X . Let F be a set of solutions (in our case, graphs) and Z : D \u2192 2F be a map taking each distribution D \u2208 D to a subset of solutions Z(D) \u2286 F that are defined to be valid solutions for D. In our setting, since each graphical model under our consideration will be identifiable, there is a single graph Z(D) corresponding to each distribution D. For n > 0, the distributional search problem Z over D and F using n samples is to find a valid solution f \u2208 Z(D) given access to n random samples from an unknown D \u2208 D.\nThe class of algorithms we are interested in are called unbiased statistical algorithms, defined by access to an unbiased oracle. Other related classes of algorithms are defined in [1], and similar lower bounds can be derived for those as well.\nDefinition 4.1 (Unbiased Oracle). Let D be the true distribution. The algorithm is given access to an oracle, which when given any function h : X \u2192 {0, 1}, takes an independent random sample x from D and returns h(x).\nThese algorithms access the sampled data only through the oracle: unbiased statistical algorithms outsource the computation. Because the data is accessed through the oracle, it is possible to prove unconditional lower bounds using information-theoretic methods. As noted in the introduction, many algorithmic approaches can be implemented as statistical algorithms.\nWe now define a key quantity called average correlation. The average correlation of a subset of distributions D\u2032 \u2286 D relative to a distribution D is denoted \u03c1(D\u2032, D),\n\u03c1(D\u2032, D) := 1\n|D\u2032|2\n\u2211\nD1,D2\u2208D\u2032\n\u2223\u2223\u2223\u2223 \u2329 D1 D \u2212 1, D2 D \u2212 1 \u232a\nD\n\u2223\u2223\u2223\u2223 , (4.1)\nwhere \u3008f, g\u3009D := Ex\u223cD[f(x)g(x)] and the ratio D1/D represents the ratio of probability mass functions, so (D1/D)(x) = D1(x)/D(x).\nWe quote the definition of statistical dimension with average correlation from [1], and then state a lower bound on the number of queries needed by any statistical algorithm.\nDefinition 4.2 (Statistical dimension). Fix \u03b3 > 0, \u03b7 > 0, and search problem Z over set of solutions F and class of distributions D over X . We consider pairs (D,DD) consisting of a \u201creference distribution\u201d D over X and a finite set of distributions DD \u2286 D with the following property: for any solution f \u2208 F , the set Df = DD \\ Z\u22121(f) has size at least (1 \u2212 \u03b7) \u00b7 |DD|. Let \u2113(D,DD) be the largest integer \u2113 so that for any subset D\u2032 \u2286 Df with |D\u2032| \u2265 |Df |/\u2113, the average correlation is |\u03c1(D\u2032, D)| < \u03b3 (if there is no such \u2113 one can take \u2113 = 0). The statistical dimension with average correlation \u03b3 and solution set bound \u03b7 is defined to be the largest \u2113(D,DD) for valid pairs (D,DD) as described, and is denoted by SDA(Z, \u03b3, \u03b7).\nTheorem 4.3 ([1]). Let X be a domain and Z a search problem over a set of solutions F and a class of distributions D over X . For \u03b3 > 0 and \u03b7 \u2208 (0, 1), let \u2113 = SDA(Z, \u03b3, \u03b7). Any (possibly randomized) unbiased statistical algorithm that solves Z with probability \u03b4 requires at least m calls to the Unbiased Oracle for\nm = min\n{ \u2113(\u03b4 \u2212 \u03b7)\n2(1\u2212 \u03b7) , (\u03b4 \u2212 \u03b7)2 12\u03b3\n} .\nIn particular, if \u03b7 \u2264 1/6, then any algorithm with success probability at least 2/3 requires at least min{\u2113/4, 1/48\u03b3} samples from the Unbiased Oracle.\nIn order to show that a graphical model on p nodes of maximum degree d requires computation p\u2126(d) in this computational model, we therefore would like to show that SDA(Z, \u03b3, \u03b7) = p\u2126(d) with \u03b3 = p\u2212\u2126(d)."}, {"heading": "4.2 Soft parities", "text": "For any subset S \u2282 [p] of cardinality |S| = d, let \u03c7S(x) = \u220f\ni\u2208S xi be the parity of variables in S. Define a probability distribution by assigning mass to x \u2208 {\u22121,+1}p according to\npS(x) = 1\nZ exp(c \u00b7 \u03c7S(x)) . (4.2)\nHere c is a constant, and the partition function is\nZ = \u2211\nx\nexp(c \u00b7 \u03c7S(x)) = 2 p\u22121(ec + e\u2212c) . (4.3)\nOur family of distributions D is given by these soft parities over subsets S \u2282 [p], and |D| = ( p d ) . Lemma 4.4. Let U denote the uniform distribution on {\u22121,+1}p. For S 6= T , the correlation \u3008pSU \u2212 1, pT U \u2212 1\u3009 is exactly equal to zero for any value of c. If S = T , the correlation \u3008pSU \u2212 1, pS U \u2212 1\u3009 = 1\u2212 4 (ec+e\u2212c)2 \u2264 1.\nLemma 4.5. For any set D\u2032 \u2286 D of size at least |D|/pd/2, the average correlation satisfies \u03c1(D\u2032, U) \u2264 ddp\u2212d/2 .\nProof. By the preceding lemma, the only contributions to the sum (4.1) comes from choosing the same set S in the sum, of which there are a fraction 1/|D\u2032|. Each such correlation is at most one by Lemma 4.4, so \u03c1 \u2264 1/|D\u2032| \u2264 pd/2/|D| = pd/2/ ( p d ) \u2264 dd/pd/2. Here we used the\nestimate ( n k ) \u2265 (nk ) k.\nProof of Theorem 1.1. Let \u03b7 = 1/6 and \u03b3 = ddp\u2212d/2, and consider the set of distributions D given by soft parities as defined above. With reference distribution D = U , the uniform distribution, Lemma 4.5 implies that SDA(Z, \u03b3, \u03b7) of the structure learning problem over distribution (4.2) is at least \u2113 = pd/2/dd. The result follows from Theorem 4.3."}, {"heading": "Acknowledgments", "text": "This work was supported in part by NSF grants CMMI-1335155 and CNS-1161964, and by Army Research Office MURI Award W911NF-11-1-0036."}], "references": [], "referenceMentions": [], "year": 2014, "abstractText": "In this paper we investigate the computational complexity of learning the<lb>graph structure underlying a discrete undirected graphical model from i.i.d.<lb>samples. Our first result is an unconditional computational lower bound of<lb>\u03a9(p) for learning general graphical models on p nodes of maximum degree<lb>d, for the class of so-called statistical algorithms recently introduced by<lb>Feldman et al. [1]. The construction is equivalent to the notoriously difficult<lb>learning parities with noise problem in computational learning theory. Our<lb>lower bound suggests that the \u00d5(p) runtime required by Bresler, Mossel,<lb>and Sly\u2019s [2] exhaustive-search algorithm cannot be significantly improved<lb>without restricting the class of models.<lb>Aside from structural assumptions on the graph such as it being a tree,<lb>hypertree, tree-like, etc., many recent papers on structure learning assume<lb>that the model has the correlation decay property. Indeed, focusing on fer-<lb>romagnetic Ising models, Bento and Montanari [3] showed that all known<lb>low-complexity algorithms fail to learn simple graphs when the interaction<lb>strength exceeds a number related to the correlation decay threshold. Our<lb>second set of results gives a class of repelling (antiferromagnetic) models<lb>that have the opposite behavior: very strong interaction allows efficient<lb>learning in time \u00d5(p). We provide an algorithm whose performance in-<lb>terpolates between \u00d5(p) and \u00d5(p) depending on the strength of the<lb>repulsion.", "creator": "LaTeX with hyperref package"}}}