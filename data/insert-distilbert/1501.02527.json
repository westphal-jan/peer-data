{"id": "1501.02527", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "12-Jan-2015", "title": "Autodetection and Classification of Hidden Cultural City Districts from Yelp Reviews", "abstract": "topic models are finding a way to discover underlying themes in an otherwise unstructured complicated collection of documents. in this study, somehow we thus specifically incorrectly used the weighted latent dirichlet allocation ( lda ) topic model on a dataset of yelp reviews to classify restaurants based off of their reviews. furthermore, sometimes we hypothesize that within a city, restaurants can be grouped into similar \" clusters \" based on both geographical location and similarity. we used several different clustering methods, including k - means clustering and a probabilistic mixture density model, in order to uncover diverse and actually classify districts, both well - known persons and hidden ( i. e. cultural areas like chinatown or cantonese hearsay - like \" the best food street for italian fusion restaurants \" ) within a city. we use these models to display and label different subject clusters on a map. we also introduce a topic similarity heatmap that displays the similarity distribution displayed in a city to a new restaurant.", "histories": [["v1", "Mon, 12 Jan 2015 03:10:01 GMT  (8884kb,D)", "http://arxiv.org/abs/1501.02527v1", null]], "reviews": [], "SUBJECTS": "cs.CL cs.AI cs.IR", "authors": ["harini suresh", "nicholas locascio"], "accepted": false, "id": "1501.02527"}, "pdf": {"name": "1501.02527.pdf", "metadata": {"source": "CRF", "title": "Autodetection and Classification of Hidden Cultural City Districts from Yelp Reviews", "authors": ["Harini Suresh", "Nick Locascio"], "emails": [], "sections": [{"heading": null, "text": "I. INTRODUCTION\nCities are often defined by their domineering cultural characteristics. However, particular cities themselves harbor a large variety of different cultural districts. Streets separated by just a few blocks may give very different impressions. These implicit boundaries and classifications are not documented on official maps, and usually are only learned with much time and experience living in a particular city."}, {"heading": "A. Motivation", "text": "We believe that having a sense of these districts is valuable to a much wider population. Some examples are: 1. New Businesses: For business-owner or entrepreneur looking to open a new restaurant or expand to a different location, knowing which areas of a city harbor restaurants very similar to or different than that particular business is doubtless a valuable insight. 2. Newcomers: For tourists, people moving in, or anyone else new to the city, it is often an arduous and daunting task to get a sense of things such as where they are most likely to find a good Thai restaurant, the block to go for Dim Sum, or the best area for a dressy, upscale dinner with good wine. 3. Anyone looking to explore: Even people who have already have a sense of the city can be surprised by a holein-the-wall cafe or undiscovered area. The LDA model we describe can identify the most highly weighted classification\n*This work was supported by Joshua Tenenbaum 1H. Suresh is an Undergraduate in Computer Science, Massachussets Insititude of Technology, Cambridge, MA 02139, USA hsuresh at mit.edu\n2N. Locascio is an Undergraduate in Computer Science, Massachussets Insititude of Technology, Cambridge, MA 02139, USA njl at mit.edu\nfor a particular area as well as secondary classifications. This allows it to uncover more hidden characteristics of a particular area besides the most highly weighted. This is interesting information in itself, but can also be used as a backbone of a recommendation system. If a person really enjoys a particular area of town, this model could discover and rank other non-obvious areas that share similar traits.\nFrom a cognitive science point of view, we think trying to model these questions is an interesting experiment to test the accuracy of methods like LDA and Probabilistic Mixture Models to model human cognition. Recent cognitive science research has had major successes in probabilistic generative models of human cognition [12, 13]. Specifically, research by Tenenbaum shows strong support for Bayesian concept learning [14] and Sanborn et. al. use Dirichlet Process Mixture Models for category learning that emulates human learning [15]. Using techniques like these in this paper, we try to recreate the kind of map a local might build up in their head over time of the different subsections of their city."}, {"heading": "B. The Yelp Dataset", "text": "The Yelp Academic dataset was released in 2013 and has grown to include over 42,000 businesses with over 1 million reviews [9]. The dataset has been used in academic papers for sentiment analysis, word layout systems, and recommendation engines, among other research areas. The quality and sheer size of the dataset is of high value to our research and its natural language user reviews are pivotal to our cultural detection and classification system."}, {"heading": "II. METHODS", "text": ""}, {"heading": "A. The LDA Model", "text": "Latent Dirichlet Allocation (LDA), first introduced by Blei et. al. in 2003 [1], has been applied to numerous and diverse fields: from computer vision [2,3] to recommendation systems [4] to spam filtering [5]. LDA hypothesizes that a collection of documents D can be treated as a \u201dbag of words\u201d where each document d is generated by the following process, given hyperparameters \u03b1 and \u03b2:\n1. Assume each topic k has a fixed distribution over all words in D that is \u03c6k \u223c Dirichlet(\u03b2) 2. Choose the document\u2019s topic distribution \u03b8d \u223c Dirichlet(\u03b1) 3. To generate each word w: a. Choose a topic zi from Discrete(\u03b8d)\nar X\niv :1\n50 1.\n02 52\n7v 1\n[ cs\n.C L\n] 1\n2 Ja\nn 20\n15\nb. Choose a word wi from Discrete(\u03c6zi)\nUsing this model, LDA is able to learn the topic mixtures, p(z|d), for the documents on which it is trained, in an unsupervised manner."}, {"heading": "B. Training LDA", "text": "To implement LDA, we used tools from the Python Library Gensim, which provides functionality to analyze semantic structure in texts [6]. Based off of the results of the Expectation Maximization algorithm used by Huang et. al. [7] to determine the optimal number of topics for Yelp restaurant reviews in Phoenix, we chose K = 50 as the number of topics to extract. We used hyperparameters \u03b1 and \u03b2 with symmetric 1.0/K priors.\nWe cleaned the reviews to remove punctuation, numbers, and a list of stopwords made up of the \u201cEnglish Stop Words\u201d list in the Scikit-learn python library [11]. Additionally, we specified that after this initial cleaning, the model should only consider the 40,000 median frequency words. This eliminated words that only appeared a handful of times, as well as generic food-related words that appeared many times. These words provide little information gain and removing them dramatically increased the convergence time of our LDA training.\nWe trained the model on all restaurant reviews (around 1.1 million) from Las Vegas. Training uses the online inference algorithm described by Hoffman et. al. [8] and results in an LDA topic model object that can be queried with new, unseen documents to return an optimal topic distribution. We used our model to predict topic weights for each restaurant. In addition, the model contains the static word distributions \u03c6k for each topic."}, {"heading": "C. Training Examples", "text": "Our LDA model produced 50 topics. Each topic is a collection of word-weight couples. Words with high corresponding weight values are most representative of the topic. The topic word weights are normalized such that W\u2211 wi wi = 1. Table I is a small sampling of selected topics our model generated. Table I displays the topic #, the label we chose for the topic based on its word distribution, and the word distribution. The full list of topics and their weights can be viewed in the Appendix."}, {"heading": "D. LDA Inference", "text": "We used our trained LDA model to predict topic distributions for each of the 3855 restaurants. A restaurant\u2019s topic distribution is a collection of coupled topic numbers and corresponding weights. Topics with high corresponding weight values are most representative of the restaurant. These\ntopic distribution weights are normalized such that W\u2211 wi wi = 1. A sampling of topic predictions is shown in Table II."}, {"heading": "E. Clustering Preparation", "text": "We tested several clustering methods in order to group restaurants into appropriate clusters. We assume that culinary districts in a city are characterized by closeness and similarity of restaurants. In our model, therefore, we represent each restaurant as a combined vector of its coordinate position and its LDA assigned topic weight distribution. This vector has 52 dimensions, 2 of which represent the spatial location of the restaurant, and 50 of which represent the restaurant\u2019s LDA topic weights.\n1. Scaling Procedure\nSince the spatial coordinates and topic weights are measured in different spaces, their values are on different scales. To prevent our results being arbitrarily skewed by these different units of scale, we used a scaling procedure, multiplying the topic weight distributions by a constant S.\nBy varying S, we can give the topic weights more or less influence over the clustering. When S = 0, the clustering\nis equivalent to clustering based only on location. As S increases, topic weights are given more control over the clustering. When S >> coordinates, the clustering is done purely by topic similarity.\nOur goal was to find an S such that close-together clusters of restaurants would be grouped into a single cluster, and points on the outer edges of these clusters would identify themselves with the cluster that best matched their topic distribution. In this way, we allow for a Chinese restaurant to \u2019escape\u2019 a nearby cluster of Italian restaurants.\nSince we are not using pure spatial features, our clustering may result in some clusters overlapping and interweaving. This allows our model to be representative of the real world of cultural mixing and fuzzy cultural boundaries.\nTo determine a reasonable scaling factor S, we constructed a plausible scenario. A Chinese Restaurant (CR) lies betwen two clusters - a primarily Italian cluster (I) and a primarily Chinese cluster (C). CR is 0.25 mi from I\u2019s center and 0.75 mi from C\u2019s center. We want to choose an S such that Dist(CR,C) < Dist(CR, I): that is, we want the Chinese restaurant to be classified into the \u201cChinese Restaurant\u201d cluster despite it being closer in spatial coordinates to the Italian cluster\u2019s center. The Dist function is a Euclidean distance metric between the two vectors. Let\u2019s assume C and CR share the same topic distributions, and that CR and I share zero topics in their distributions. We define Dist(CR,C) as\nDist(R,Cluster) = \u221a\u221a\u221a\u221a(\u2206x)2 + S \u2217 T\u2211 tj (\u2206tj)2 (1)\nSo our goal is to find an S such that:\nDist(CR,C) < Dist(CR, I) (2)\n\u221a (0.75)2 + (0.0)2 < \u221a (0.25)2 + (S \u2217 1.0)2 + (S \u2217 1.0)2\n0.75 < \u221a (0.25)2 + 2S2\n0.5625 < 0.0625 + 2S2\n0.5 < 2S2\n0.25 < S2\n(3)\nS > 0.5 (4)\nThis calculation of S, however, assumes topic distributions are all-or-none, when in fact most restaurants are a mixture of a few topics. In fact, we determined the mean # of topics assignments a restaurant received to be 5. We found a typical restaurant to have 1 dominating topic comprising of at least 0.5 of the weight and 4 subtopics comprising\nof the rest of the weight. We performed a more advanced analysis of the same scenario and found S > 0.913. The analysis can be found in Equation 10 of the appendix.\n2. Normalization\nSince some topics are inherently more common than other topics due to the high prevalence of some restaurant types, we wanted to avoid our model becoming unfairly skewed by very common topics such as a \u201cpizza\u201d topic. There are 355 pizza restaurants in Las Vegas, comprising of 9.2% of all Las Vegas restaurants. To avoid the scenario where all clusters are labeled as \u201cpizza\u201d simply because of the uniformly large number of these restaurants across all clusters, we vertically normalize the topic weights for each restaurant. We define w to be a 50 dimensional topic weight vector of a restaurant, and N to be the number of restaurants. We define\nV Norm(w) = wi\nW i (5)\nwhere\nW i = N\u2211 j=1 wij (6)\nThis normalization can be thought of as dividing out the \u2019background\u2019 of a city\u2019s restaurant distribution, ensuring clusters will be dominated by notable exceptions to the average: we don\u2019t want to point out that pizza restaurants are pretty much evenly distributed in high quantities all around Vegas, but rather discover when they, or another type of restaurant, are appear in notably high quantities. We then horizontally re-normalize each topic vector so that the values remain at the same scale.\n3. Determining the Number of Clusters\nTo determine the optimal number of clusters, we first used the \u2019Elbow Method\u2019, which looks at the percentage of variance explained as a function of the number of clusters. The idea is that we should choose a number of clusters such that adding more clusters doesn\u2019t significantly improve the modeling. We performed clustering with C = 5 to C = 35 clusters and plotted the variance quantity Wk vs. C, where Wk is the sum of the normalized intra-cluster sums of sqaures [16]. Figure 1 shows a plot of log(Wk) vs. C.\nThe Elbow Method involves visually choosing the \u2019elbow\u2019 of the graph where the slope changes most drastically. We determined our elbow happens at C = 30. However, determining the elbow of a graph is not a well-defined process, and in fact this is one of the known weaknesses of the Elbow Method.\nBecause of the shortcomings of the elbow method, we also used the Gap Statistic [10, 16] to determine the optimal C with which to cluster. The Gap Statistic is a way to\nto standardize the comparison of the \u201cvariance explained\u201d metric used in the Elbow Method. The Gap Statistic takes the approach of standardizing the variance explained against a null reference distribution of the data (distribution with no apparent underlying clusters). The Gap Statistic method involves calculating the difference between the variance explained for the dataset and the variance explained for the null reference distribution. This difference is known as the Gap Statistic. The C value that yields the greatest Gap Statistic (greatest difference in variance) is the optimal C value for clustering the data. Figure 2 shows the results of the Gap Statistic.\nThe Gap Statistic predicts that C=30 is the optimal number of clusters for our data. This confirms our identification of the \u2019elbow\u2019 was indeed correct.\nF. Clustering\n1. K-means Clustering\nK-means clustering is a clustering algorithm that will find C centroids to cluster a data set. The K-Means algorithm\nconverges on a centroid distribution that minimizes the sum of squares of distances between cluster centroids and the corresponding data points that are classified by them.\nUsing tools from the Python library Scikit-learn [11], we performed K-means clustering on all 3855 Vegas restaurants with random K++ means initialization and 300 iterations, specifying C = 30 and S = 0.913. We used a Euclidean distance metric for our clustering and classification of the 52- dimensional restaurant vectors. The result of this clustering can be seen in Figure 3.\nThe clusters have a median of 148 members in each with a standard deviation of 80.\n2. Gaussian Mixture Model\nA Gaussian mixture model (GMM) is a probabilistic generative model that assumes all the data points are generated from a mixture of a finite number of Gaussian distributions. The GMM, in principle, is a weighted sum of C component Gaussian densities. Each Gaussian distribution can be thought of as a cluster that can classify data points.\nAlso using tools from the Python library Scikit-learn, we trained our GMM with the Expectation Maximization Algorithm on 3855 restaurants specifying C = 30 and S = 0.913. The result of this clustering can be seen in Figure 3. The GMM clusters have a median of 200 members each, with mean 158 members and standard deviation of 40 members.\nMost notably, GMM clusters varied from the K-means clusters in shape: the K-means clusters were nearly always\nspherical in shape, due to K-means minimizing distance. The Gaussian Mixture Model, however, is not limited to spherical clusters, as the Gaussian distributions that define its clusters are shaped by variances in each dimension. This results in some elongated elliptical clusters.\nSome of the clusters consists of only restaurants that lie on a particular street. It may be that this behavior is actually beneficial. Oftentimes cultural districts within a city are highly street based, and the GMM model is flexible enough to detect clusters like this. The result of the GMM clustering can be seen in Figure 4."}, {"heading": "G. Determining a Cluster\u2019s Label", "text": "Once we determine relevant spatial and topical clusters, we are tasked with labeling the clusters. To determine the labeling of a cluster, we take the average topic vector for all restaurants in the cluster. We then chose the top two topics that describe a cluster and use their human-attributed labels. These labels overlayed atop their cluster distributions are shown in Figure 5.\nWe chose to display the top two labels to uncover not only the most frequent topic within a cluster but also underlying categories which might be less obvious.\nUsing our Gaussian Mixture Clustering, we were able to enhance these labeling with appropriate orientations3. Since each cluster is represented by a Gaussian with two\n3Unfortunately, the label rotations often result in the collision of labels. If this system were to be implemented as an analytics interface, this issue could be mitigated by a zoomable display, hiding of colliding labels, or other methods. Our paper, however, is concerned more with the exploration of these methods than the user interfacing and experience.\ndimensional variances, we are able to rotate the labelings to align with the direction of maximum Gaussian variance. These rotated labels have a tendency to orient with streets. The Waffles/Brunch label in the top left displays this rather useful property. These oriented labels overlayed atop their Gaussian cluster distributions are shown in Figure 6."}, {"heading": "H. Cultural HeatMap and Optimal Placement for New Restaurants", "text": "While clustering restaurants on space and topics illuminates a city\u2019s many cultural centers, it does not show how a specific topic is distributed throughout the city. To show this\ndistribution for a given topic we plotted topic similarity in a heatmap. We ran our LDA inference on a novel restaurant\u2019s reviews. From this we got a topic distribution of that novel restaurant. We divided the city into a a 20X20 grid of squares. For each square we calculated the average topic similarity from the center of the square to all restaurants in the city. We used a Gaussian Weight metric to scale topic similarity by proximity. For each square we calculated a similarity metric Sim(center, novel) where:\nSim(center, novel) =\n1\n\u2016R\u2016 R\u2211 ri 2 \u221a 2\u2212 dist(novel, ri) \u2217Gw(center, ri) (7)\nwhere\nR = all restaurants in city novel = the topic distribution of the novel restaurant dist = euclidian distance metric for topic distributions and\nGw(square, restaurant) = G(x, \u03c3, \u00b5) (8)\nwhere\n\u00b5 = the center of the square \u03c3 = \u221a 2 \u2217 square width x = the position of the restaurant\nG(x, \u03c3, \u00b5) = 1\n\u03c3 \u221a 2\u03c0 e\u2212(x\u2212\u00b5) 2/2\u03c32 (9)\nOur similarity metric takes in to account topic similarity of the novel restaurant to each other restaurant in the city. We use a Gaussian weight to scale these topic similarities by distance. This allows restaurants near the square\u2019s center location to have most of the influence over the square\u2019s color. We calculated our similarity metric for every square in our grid and colored our Heat Map red for high values and blue for low values. The results of our heatmap generated by comparing the topics of the Restaurant \u201dPho Vietnamese Restaurant\u201d to the restaurants of Vegas are shown in Figure 7.\nIn Figure 8, the X indicates the actual location of the the restaurant (the similarity calculations were conducted without including this restaurant). Our Heat Map shows that the restaurant is in an area of high topic similarity, which is accurate (Pho Vietnamese Restaurant is located in Las Vegas\u2019s Chinatown District)."}, {"heading": "III. DISCUSSION & APPLICATIONS", "text": ""}, {"heading": "A. Evaluation of Results", "text": "We found that the resultant LDA topics (Appendix Table III) were well-defined and descriptive. We observed that the\nwords within a given topic fit well into a particular category of food type or culture, and we had very little trouble labeling them based off of the given words and weights. Additionally, the topics themselves seem reasonably distinct from each other with only few overlapping topics. The general area in which we saw the most overlap was the buffet restaurants topic. Topics #0, #5, #48 each concerned buffet restaurants. However, looking at the words in each, we were able to distinguish \u201cSeafood/Buffet\u201d (#5) and \u201cUpscale/Buffet\u201d(#0) from a more general \u201cBuffet\u201d topic (#48).\nLooking at the K-means clustering of Las Vegas restaurants, we observed that our clustering classifies areas defined beforehand: it put labels of \u201cPho\u201d and \u201cDim Sum\u201d on Chinatown, and \u201cLuxe\u201d, \u201cSteakhouse\u201d, \u201cUpscale\u201d, and \u201cSeafood/Buffet\u201d over the Strip. Interestingly, it also split these clusters into smaller subclusters, for example separating a \u201cDim Sum\u201d and \u201cRamen\u201d cluster from a \u201cPho\u201d and \u201cSoup\u201d cluster. This behavior may or may not be ideal: it may be identifying actual sub-districts, or future work may involve a final cluster merge step in which two clusters close in distance and topic similarity can be merged in to a single cluster.\nThe GMM also distinguished these already-known cultural areas. The shape and sizes of the clusters themselves were slightly more varied and often alligned with a particular street. This ability is interesting because oftentimes districts may be very street-based.\nAs all this learning was unsupervised, we are very interested in finding a metric to quantitatively determine accuracy across these different models. One potential way to do this would be to conduct cognitive studies with\npeople who live in or are familiar with particular cities. For example, we could compare our map with maps described by Las Vegas residents, or get a measure of how accurate they believe our map is."}, {"heading": "B. Applications of Automatic Cluster Labeling", "text": "The automatic spatial and topical clustering and labeling approach outlined above is a general method that can be applied to any city. Figure 8 in the Appendix shows the results of labeling 2 other cities (Phoenix and Endinberg) with this method. These maps can be analytical tools with various applications including but not limited to determining new restaurant placement, understanding cultural regions of a city, discovering unexplored areas of one\u2019s city, choosing where to live, or what route to take on a stroll to the park."}, {"heading": "C. Applications of Topic Heat Map", "text": "Like the automatic cultural labeling method, the Topic Heat Map can be used as a useful analytics tool. This map can be used to determine certain cultural hotbeds, both known and hidden. A hidden cultural hotbed may present a market opportunity for continued growth. The Topical Heat Map of a city may be an especially valuable asset to a new restaurant or chain looking to strategize where exactly to place a new store location. The Heat Map could actually be used to perform a detailed analysis on what kind of location, for different types of restaurants, is optimal (see IV part 3 for more detail)."}, {"heading": "IV. FURTHER RESEARCH", "text": "1) Using the timestamps on reviews, it is possible to filter reviews based on when they were written. This would allow for creating dynamic maps using reviews within a moving a time window to see how culture changes: how new clusters emerge, split and merge.\n2) In our study we use the Elbow Method and Gap Statistic to predetermine an appropriate number of clusters to use. Instead, it may prove valuable to use a Nested Chinese Restaurant Process to learn a hierarchy of clusters and subclusters. For example, this could split Chinatown into various subclusters under the general Chinese cluster. This could be used to label the graphs at various scales and zoom levels. Additionally, using a Chinese Restaurant Process as part of a Nonparametric Mixture Model would allow the model to flexibly add more clusters as needed, and may be more likely to find the optimal number of clusters.\n3) The similarity heatmap we developed along with Yelp star ratings could be used to analyze what kind of placement makes a restaurant successful. For example, it may be that placing a restaurant right in the center of an area of very high similarity creates direct competition and comparison that is actually detrimental. At the same time, it may be that placing a restaurant in an area where it is completely out of place is also a bad idea. A detailed analysis of where\nrestaurants with varying star ratings fall on a similarity heatmap could provide valuable insight to businesses about what kind of placement is optimal.\n4) Using Yelp user data and the classifications from this model, it is possible to create a recommendation system. Recommendations could be general areas or specific restaurant suggestions: for example, if a user likes several restaurants in a specific area/cluster, we imagine recommending to them another restaurant or area that shares similar topics."}, {"heading": "ACKNOWLEDGMENT", "text": "We would like to thank Joshua Tenenbaum for supporting this work."}], "references": [{"title": "Latent Dirichlet Allocation", "author": ["D. Blei", "A. Ng", "M. Jordan"], "venue": "Journal of Machine Learning Research 3, pp. 993", "citeRegEx": "1", "shortCiteRegEx": null, "year": 2003}, {"title": "Semi-Latnt Dirichlet Allocation: A Hierarchical Model for Human Action Recognition", "author": ["Y. Wang", "P. Sabzmeydani", "G. Mori"], "venue": "Lecture Notes in Computer Science, vol. 4814, A. Elgammal, B. Rosenhahn, R. Klette, Eds., Heidelberg: Springer Berlin", "citeRegEx": "2", "shortCiteRegEx": null, "year": 2007}, {"title": "Semantic Annotation of Satellite Images Using Latent Dirichlet Allocation", "author": ["M. Lienou", "H. Maitre", "M. Datcu"], "venue": "Geoscience and Remote Sensing Letters, IEEE,", "citeRegEx": "3", "shortCiteRegEx": "3", "year": 2009}, {"title": "Latent dirichlet allocation for tag recommendation", "author": ["R. Krestel", "P. Fankhauser", "W. Nejdl"], "venue": "Proc. of the third ACM conf. on recommender systems, New York", "citeRegEx": "4", "shortCiteRegEx": null, "year": 2009}, {"title": "Latent dirichlet allocation in web spam filtering", "author": ["I. Br", "J. Szab", "A. Benczr"], "venue": "Proc. of the 4th int. workshop on adversarial information retrieval on the web, New York", "citeRegEx": "5", "shortCiteRegEx": null, "year": 2008}, {"title": "Improving Restaurants by Extracting Subtopics from Yelp Reviews", "author": ["J. Huang", "S. Rogers", "E. Joo"], "venue": "presented at iConference, Berlin", "citeRegEx": "7", "shortCiteRegEx": null, "year": 2014}, {"title": "Online Learning for Latent Dirichlet Allocation", "author": ["M. Hoffman", "D. Blei", "F. Bach"], "venue": "Advances in Neural Information Processing Systems 23", "citeRegEx": "8", "shortCiteRegEx": null, "year": 2010}, {"title": "Estimating the number of clusters in a data set via the gap statistic", "author": ["R. Tibshirani", "G. Walther", "T. Hastie"], "venue": "J. R. Statist. Soc., vol. 63, part 2, pp. 411", "citeRegEx": "10", "shortCiteRegEx": null, "year": 2001}, {"title": "Scikit-learn: Machine Learning in Python", "author": ["F. Pedregosa", "G. Varoquaux", "A. Gramfort", "V. Michel", "B. Thirion", "O. Grisel", "M. Blondel", "P. Prettenhofer", "R. Weiss", "V. Dubourg", "J. Vanderplas", "A. Passos", "D. Cournapeau", "M. Brucher", "M. Perrot", "E. Duchesnay"], "venue": "Journal of Machine Learning, vol. 12, pp. 2825", "citeRegEx": "11", "shortCiteRegEx": null, "year": 2011}, {"title": "Probabilistic models of cognition: exploring representations and inductive biases", "author": ["T. Griffiths", "N. Chater", "C. Kemp", "A. Perfors", "J.B. Tenenbaum"], "venue": "Trends in Cognitive Sciences, vol. 14, pp. 357", "citeRegEx": "12", "shortCiteRegEx": null, "year": 2010}, {"title": "Probabilistic models of cognition: Conceptual foundations", "author": ["N. Chater", "J.B. Tenenbaum", "A. Yuille"], "venue": "Trends in Cognitive Sciences, vol. 10", "citeRegEx": "13", "shortCiteRegEx": null, "year": 2006}, {"title": "Rules and Similarity in Concept Learning", "author": ["J.B. Tenenbaum"], "venue": "Advances in Neural Information Processing Systems 12, pp. 59", "citeRegEx": "14", "shortCiteRegEx": null, "year": 2000}, {"title": "Psychological Review", "author": ["A.N. Sanborn", "T.L. Griffiths", "D.J. Navarro"], "venue": "vol. 117, pp. 1144", "citeRegEx": "15", "shortCiteRegEx": null, "year": 2010}], "referenceMentions": [{"referenceID": 9, "context": "Recent cognitive science research has had major successes in probabilistic generative models of human cognition [12, 13].", "startOffset": 112, "endOffset": 120}, {"referenceID": 10, "context": "Recent cognitive science research has had major successes in probabilistic generative models of human cognition [12, 13].", "startOffset": 112, "endOffset": 120}, {"referenceID": 11, "context": "Specifically, research by Tenenbaum shows strong support for Bayesian concept learning [14] and Sanborn et.", "startOffset": 87, "endOffset": 91}, {"referenceID": 12, "context": "use Dirichlet Process Mixture Models for category learning that emulates human learning [15].", "startOffset": 88, "endOffset": 92}, {"referenceID": 0, "context": "in 2003 [1], has been applied to numerous and diverse fields: from computer vision [2,3] to recommendation systems [4] to spam filtering [5].", "startOffset": 8, "endOffset": 11}, {"referenceID": 1, "context": "in 2003 [1], has been applied to numerous and diverse fields: from computer vision [2,3] to recommendation systems [4] to spam filtering [5].", "startOffset": 83, "endOffset": 88}, {"referenceID": 2, "context": "in 2003 [1], has been applied to numerous and diverse fields: from computer vision [2,3] to recommendation systems [4] to spam filtering [5].", "startOffset": 83, "endOffset": 88}, {"referenceID": 3, "context": "in 2003 [1], has been applied to numerous and diverse fields: from computer vision [2,3] to recommendation systems [4] to spam filtering [5].", "startOffset": 115, "endOffset": 118}, {"referenceID": 4, "context": "in 2003 [1], has been applied to numerous and diverse fields: from computer vision [2,3] to recommendation systems [4] to spam filtering [5].", "startOffset": 137, "endOffset": 140}, {"referenceID": 5, "context": "[7] to determine the optimal number of topics for Yelp restaurant reviews in Phoenix, we chose K = 50 as the number of topics to extract.", "startOffset": 0, "endOffset": 3}, {"referenceID": 8, "context": "We cleaned the reviews to remove punctuation, numbers, and a list of stopwords made up of the \u201cEnglish Stop Words\u201d list in the Scikit-learn python library [11].", "startOffset": 155, "endOffset": 159}, {"referenceID": 6, "context": "[8] and results in an LDA topic model object that can be queried with new, unseen documents to return an optimal topic distribution.", "startOffset": 0, "endOffset": 3}, {"referenceID": 7, "context": "Because of the shortcomings of the elbow method, we also used the Gap Statistic [10, 16] to determine the optimal C with which to cluster.", "startOffset": 80, "endOffset": 88}, {"referenceID": 8, "context": "Using tools from the Python library Scikit-learn [11], we performed K-means clustering on all 3855 Vegas restaurants with random K++ means initialization and 300 iterations, specifying C = 30 and S = 0.", "startOffset": 49, "endOffset": 53}], "year": 2015, "abstractText": "Topic models are a way to discover underlying themes in an otherwise unstructured collection of documents. In this study, we specifically used the Latent Dirichlet Allocation (LDA) topic model on a dataset of Yelp reviews to classify restaurants based off of their reviews. Furthermore, we hypothesize that within a city, restaurants can be grouped into similar \u201cclusters based on both location and similarity. We used several different clustering methods, including Kmeans Clustering and a Probabilistic Mixture Model, in order to uncover and classify districts, both well-known and hidden (i.e. cultural areas like Chinatown or hearsay like \u201cthe best street for Italian restaurants\u201d) within a city. We use these models to display and label different clusters on a map. We also introduce a topic similarity heatmap that displays the similarity distribution in a city to a new restaurant.", "creator": "LaTeX with hyperref package"}}}