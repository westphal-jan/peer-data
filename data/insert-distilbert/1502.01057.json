{"id": "1502.01057", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "3-Feb-2015", "title": "Personalized Web Search", "abstract": "personalization is important for search engines to improve user experience. first most of the existing methods work do pure feature engineering and extract, a realistic lot of session - style features and then train a ranking model. basically here we proposed working a novel way to model both long term and short term user behavior using multi - layered armed bandit algorithm. our algorithm can generalize session information across most users well, and as an explore - exploit style algorithm, it can generalize variables to new urls and eliminate new users well. experiments show that our algorithm can improve performance over the algorithm default ranking and outperforms several popular multi - armed bandit algorithms.", "histories": [["v1", "Tue, 3 Feb 2015 22:37:37 GMT  (112kb,D)", "http://arxiv.org/abs/1502.01057v1", null]], "reviews": [], "SUBJECTS": "cs.IR cs.LG", "authors": ["li zhou"], "accepted": false, "id": "1502.01057"}, "pdf": {"name": "1502.01057.pdf", "metadata": {"source": "CRF", "title": "Personalized Web Search", "authors": ["Li Zhou"], "emails": ["lizhou@cs.cmu.edu"], "sections": [{"heading": null, "text": "Categories and Subject Descriptors H.4 [Information Systems Applications]: Miscellaneous\nGeneral Terms Application\nKeywords Personalization, Web Search, Multi-armed Bandit, Hiddensemi Markov model"}, {"heading": "1. BACKGROUND OF THIS IRLAB", "text": "Note that this section is not a technical session, it just describes how I did this IRLab. My IRLab project started from last semester. At the beginning, I wanted to do personalization on Web Search, because it is a hot topic in both academic and industry world. I also found a personalization dataset which was released as part of WSDM 2014 workshop. At first, I tried to use Hidden-semi markov model to model the short term user behavior, where each user\u2019s intent is a hidden state and the observations are queries within the same session period. I implemented this method during the summer. However it turned out that it did not work well: the average number of queries in each session period is about 3, so the data is really sparse; on the other hand, Hidden-semi markov model has a lot of parameters. As a\nresult, the model I got overfit the data. I tried several techniques to fix this, such as decrease the number of parameters and keep only the sessions that contains more than 5 queries. However my results showed that it still did not work well.\nThis semester my capstone project is to use Multi-armed bandit algorithm for news personalization. One advantage of Multi-armed bandit is that it can handle the \u2018cold start\u2019 problem, which means it can learn to personalize a new user very quickly. Most of the academic paper apply Multi-armed bandit to news or ads recommendation, none of them have tried Multi-armed bandit to Web Search, so for this IRLab I decided to apply Multi-armed bandit to Web Search dataset. Web Search is a harder problem than news recommendation, and one big challenge is how to make use of the session information of users to model the long term and short term user behavior. This is a totally different problem from my capstone project because in my capstone project, I focused on using Multi-armed bandit algorithm on news personalization for new users; However in IRLab, I focused on Web Search personalization, and I proposed a new algorithm for modeling long term and short term user behavior using session information. Code: https://bitbucket.org/lizhou_cmu/personalization Site: https://sites.google.com/site/personalizedwebsearch"}, {"heading": "2. INTRODUCTION", "text": "The goal of search engine is to match users\u2019 intent with indexed documents. Traditional search engine treat a user\u2019s queries as his/her intent. However queries are not sufficient for expressing user intent. For example, if a user searches a movie name, e.g. \u2018Forrest Gump\u2019, what does this user really want? does he want to watch this movie, or just want to read the reviews, or want to find out who is the star? We need more context information in order to infer his/her interests. If the previous query of this user is \u2018movie trailer online\u2019, then we have a high confidence that this user wants to watch the trailer of \u2018Forrest Gump\u2019. If the search engine just return a list of results based on a user\u2019s query and ignore the user\u2019s specific interests and/or search context, then the identical query from different users or in different contexts will generate the same set of results displayed in the same way for all users, and users\u2019 intent will be hard to satisfy.\nPersonalization is one way to solve this problem. Basically personalization techniques put a search in the context of the user\u2019s interests, and consider two cases [6]: the long term\nar X\niv :1\n50 2.\n01 05\n7v 1\n[ cs\n.I R\n] 3\nF eb\n2 01\n5\nuser behavior in the past and the short term user behavior in the current session. These two types of contextual information are then used to infer the user intent. For a given query, a personalized search provide different results for different users based on the current user\u2019s intent.\nSearch session is a series of intent-related user\u2019s requests to the search engine[28]. Studies[7] [22] has been shown that a user tends to refine the queries or explore related information about his or her search intent in a session. There are about five types of refinement, a) spelling correction: refine \u2018MSN messnger\u2019 to \u2018MSN messenger\u2019; b) peer queries: refine \u2018SMTP\u2019 to \u2018POP3\u2019; c) Acronym: refine \u2018BAMC\u2019 to \u2018Brooke Army Medical Center\u2019; d) Generalization: refine \u2018Washington mutual home loans\u2019 to \u2018home loans\u2019; e) Specialization: refine \u2018Nokia N73\u2019 to \u2018free themes Nokia N73\u2019.\nLong term behavior of a user is the user profile built based on the history behavior of that user. Most of the current work[19] [24] make use of the click data and try to infer user\u2019s interests. For example if the user tends to click technology articles, then next time when he search \u2018Apple\u2019, the search engine will show \u2018Apple\u2019 the company rather than \u2018apple\u2019 the fruit.\nIn this paper, we tried two methods to model the short term user behavior within one session. The first method is Hidden-semi markov model, where we assume the user intent is a hidden variable, and each user intent will generate a sequence of queries. After the last queries satisfy the user\u2019s needs, or the user gives up trying any other queries under such intent, then the hidden intent transit to another hidden variable and again generate a sequence of queries. The second method we tried is to use Multi-armed bandit techniques. We group different sessions into a few clusters. And while interact the user within one session, we try to identify which cluster the current session is in, and hence infer the user\u2019s intent. We also propose a long term behavior modeling algorithm. We build the user interests profile in a online style and adjust this profile based on user\u2019s interact with our algorithm.\nThe remainder of this paper is structured as follows, in section 3 we will talk about the existing methods for solving personalization problems, and then we describe a short term behavior modeling algorithm which is finally abandoned by us. In section 5 we will talk about our latest proposed algorithm and how we model long term and short term behavior. Finally we will show our results on the Yandex web search dataset[3]."}, {"heading": "3. RELATED WORK", "text": "Personalization is a very popular topic. There are have been quite a few workshops on personalization[3][1]. Most work focuses on the following problems: a) when should we do personalization and shouldn\u2019t? b) how to model long term user behavior? c) how to model short term user behavior?"}, {"heading": "3.1 To Personalize or not to Personalize", "text": "Personalization does not guaranteed to give us good results. [25] and [26] showed that there is a lot of variation across queries in the benefits that can be achieved through personalization. For some queries, everyone who issues the query\nis looking for the same thing. For other queries, different people want very different results even though they express their need in the same way. They characterize queries using a variety of features of the query, the results returned for the query, and people\u2019s interaction history with the query. Using these features they build predictive models to identify queries that can benefit from personalization. Experiments suggested that for popular queries or queries with very similar click behavior between different people, no personalization strategy should be adopted. Similarly, [11] defined the click entropy to measure variation in information needs of users under a query. And experimental results showed that personalized Web search yields significant improvements over generic Web search for queries with a high click entropy. For the queries with a low click entropy, personalization methods performed similarly or even worse than generic search. As personalized search had different effectiveness for different kinds of queries, they argued that queries should not be handled in the same manner with regard to personalization, and the click entropy can be used as a simple measurement on whether a query should be personalized."}, {"heading": "3.2 Long Term User Behavior Modeling", "text": "Long term behavior modeling focuses on how to build a profile for each user based on history data, and then re-rank search results according to user profile. The key problem is how to represent and learn each user profile. Typically there are two ways, the first is to represent user profile using history queries, clicked urls, and many other features. The second method is to map user interests into a set of topics. [19] build a Firefox add-on and capture features such as unigram, noun phrase etc. Each term is scored by TF, TF-IDF and BM25. These terms and scores are treated as the user profile. Then they use simple score function such as inner product and language model to calculate the similarity of the user profile and the url snippet, and further re-rank the search results. [23] build a language model for each user as the user profile. The language model is built based on the queries and the query topics of that user. Then they train a probabilistic models to re-rank the default search results. [27] analyze the query logs by looking at navigation behavior across all users. These navigation behavior are used to construct the user profile. [24] explored how to exploit longterm search history, which consists of past queries, result documents and clickthrough, as useful search context that can improve retrieval performance. They estimate a query language model which is a weighted average of the unit history models of past queries, and they use EM algorithm to estimate the model.\nThere are also a lot of works map user interests into a set of topics. [18] map user interests to categories in the ODP taxonomy. Then they uses URLs organized under those categories as training examples to classify search results into various user interests at query time. [9] do re-rank based on the distance between a user profile defined using ODP topics and the sets of ODP topics covered by each URL returned in regular web search. The distance metrics they defined is very complex, it contains word semantic distance based on WordNet and the depth of the categories. [5] [12] classify urls into 1 of the 219 topical categories from the top two levels of the ODP. [20] learn a user topic perference vec-\ntor based on history data, and then adopted topic-sensitive PageRank."}, {"heading": "3.3 Short Term User Behavior Modeling", "text": "Short term behavior modeling focuses on infer current user\u2019s intent based on behaviors in the current session. [7] proposed a context-aware query suggestion approach which is in two steps: in the offline step, queries are clustered by a clickthrough bipartite, and a concept sequence suffix tree is constructed as the query suggestion model; in the online step, a user\u2019s search context is captured by mapping the query sequence submitted by the user to a sequence suffix tree. [29] investigate the effectiveness of activity-based context. Features include queries, SERP clicks, post-SERP navigation. They assign ODP category labels to URLs and call it query model, they also build context model based on actions that occur prior to the current query in the search session. Finally they build intent model which is the weighted average of query model and context model. Use all these model they get the topics of current session and then do re-ranking. [28] [31] defined a set of features such as the cosine and jaccard distance between the search results and the query. And then they trained a learning to rank model. [17] adopted vlHMM to model session behavior, where each query in the session has a latent intention conditioned on the former n query, also states in the vlHMM are represented as feature vectors. [30] mine historic search-engine logs to find other users performing similar tasks to the current user and leverage their on-task behavior to identify web pages to promote in the current ranking. Features include query, clicked urls and webpage content. [14] decomposed web sessions into nonoverlapping segments and learned the temporal context for each segment. The goal is to discover temporal hidden contexts in the web search sessions.\nFinally, [6] and [6] make use of both long term and short term context to re-rank search results. Main feature they use are previously clicked urls."}, {"heading": "3.4 Existing Multi-armed Bandit Approach to Personalization", "text": "Multi-armed bandit has been applied to news personalization. News personalization is quite different from Web Search. In news personalization, we assume that there are a set of candidate articles, and each time we only select one of them to the user, and after get feedback from the user, we udpate our model. The feedbacks are click/not click in our case. Here we talk about two algorithms, which will be our baseline algorithm.\n3.4.1 LinUCB[16] LinUCB try to minimize the regret which is defined as the expectation of reward of best article and the expectation of reward of article selected by the algorithm:\nR(T ) = E[ T\u2211 i=1 rt,a\u2217]\u2212 E[ T\u2211 i=1 rt,at ] (1)\nThe reward in our case is the click-through rate. LinUCB model the expected reward of an article as a linear function of the context\u2019s feature vector\nE[rt,a|xt,a] = xTt,a\u03b8\u2217a (2)\nSo to predict the reward of an article, it is now a linear regression problem. However unlike traditional linear regression problem, we also have a confidence interval associated with each of our predicted value, that is, the estimated reward of an article is\nat = arg max(x T t,a\u03b8a + \u03b1 \u221a xTt,aA \u22121 a xt,a) (3)\nwhere Aa = D T aDa + Id The last part of the above equation is the confidence interval. What LinUCB does is to always select the article which has the highest upper confidence interval bound.\n3.4.2 Thompson Sampling Thompson sampling [8] is a very old heuristic algorithm yet recently received a lot of attention. Thompson sampling is a Bayesian style algorithm, it model the reward likelihood as a parameteric function P (r|a, x, \u03b8), where \u03b8 is the parameter vector for the model. Given some prior distribution P (\u03b8) on these parameters, the posterior distribution of these parameters is given by the Bayes rule, P (\u03b8|D) \u221d \u220f P (ri|ai, xi, \u03b8)P (\u03b8). Normally the reward is a stochastic function of the action, context and then unknown true parameter \u03b8\u2217, and we want to choose the article that maximizeing the expected reward maxaE(r|a, x, \u03b8\u2217). However we do not know the true parameter \u03b8\u2217, so we are actually choosing the article based on the following probability with each article\u222b\nI(E(r|a, x, \u03b8) = max a\u2032\nE(r|a\u2032, x, theta))P (\u03b8|D)d\u03b8 (4)\nWhere I is the indicator function. Bascially we are selecting an article according to its probability of being optimal. When implementation, what we do this simple: sample a \u03b8 from current posterior distribution, calculate the probability of each article being optimal according to the above equation, and then select an article and receive reward from users (clicked or not clicked), finally we update the posterior distribution based on the rewward. Normally the prior and posterior distribution are all Gaussian distribution [4]."}, {"heading": "4. ABANDONED PROPOSED METHOD", "text": "This is the first algorithm I came up with for short term personalization. Search sessions record the user behavior within a short period. Session segmentation normally based on time span or similarities between queries [13]. Within a session, we assume that there are at last one and maybe more hidden intent. For example, during one session, a user may want to trade-in his \u2018IPhone 3GS\u2019, so he first search \u2018IPhone trade-in\u2019, and then search \u2018IPhone trade-in Bestbuy\u2019, and then search \u2018IPhone 3GS trade-in Bestbuy price\u2019. Another example is that if a user want to have some nice dinner with his friends in Mount Washington, Pittsburgh, he may first search \u2018restaurant mount washington\u2019, and then search \u2018seafood mount washington pittsburgh\u2019 and then maybe \u2018lobster mount washington pittsburgh\u2019 or \u2018seafood buffet mount washington pittsburgh\u2019. As we can see, there is a intent behind each of the sequence of the queries, and people are refining their queries to express their intent. Hidden-semi markov model[32] is a perfect model for modeling such sequential transition. In the Hidden-semi markov model, there is a hidden variable which genearate a sequence of observations. The difference between it and the\nhidden markov model is that in hidden markov model, a hidden variance only generate one observation. A descriptive structure in figure 1 showed how we model session behavior.\nAssume a discrete-time Markov chain with the set of (hidden) states S = {1, ...,M}. The state sequence is denoted by S1:T = S1, ..., ST , where St \u2208 S is the state at time t. A realization of S1:T is denoted as s1:T , and S[t] = i means state i starting and ending at t with duration 1, and S[t1 : t2] = i means state i starting from t1 and ending at t2. Denote the observation sequence by O1:T = O1, ..., OT , where Ot is the observation at time t. Then we can define the state transition probablity from (i, d\u2032) to (j, d) by\na(i,d\u2032)(j,d) = P (S[t+1:t+d] = j|S[t\u2212d\u2032+1:t] = i) (5)\nwhich is the probability of stay in state i for duration d\u2032 and then transite to state j and stay for duration d. We can also define the emission probability by\nbj,d(ot+1:t+d) = P (ot+1:t+d|St+1:t+d = j) (6)\nwhich is the probability of emit observation ot+1:t+d within time span t+ 1 : t+ d. The initial distribution of the state is defined as\n\u03c0j,d = P [St\u2212d+1:t = j] (7)"}, {"heading": "4.1 Inference", "text": "Similar to Hidden markov model, we use forward-backward algorithm to infer the MLE of state sequence. The forward variables for HSMM is defined by\n\u03b1t(j, d) = P (St\u2212d+t:t = j, o1:t|\u03bb) (8)\nand the backward variables for HSMM is defined by\n\u03b2(t, d) = P (Ot+1:T |S[t\u2212d+1:t] = j, \u03bb) (9)\nso the forward-backward algorithm for HSMM is [32][21]: \u03b1t(j, d) = \u2211\ni\u2208S\\{j} \u2211 d\u2032\u2208D \u03b1t\u2212d(i, d \u2032)a(i,d\u2032)(j,d)bj,d(ot\u2212d+1 : t)\n(10) \u03b2t(j, d) = \u2211\ni\u2208S\\{j}\na(j,d)(i,d\u2032)bi,d\u2032(Ot+1:t+d\u2032)\u03b2t+d\u2032(i, d \u2032)\n(11)\nAfter the forward variables and backward variables are determined, we can calculate the probability that state j start at t \u2212 d + 1 and ends at t, with duration d, given partial observed sequence o1:t\nP (St\u2212d+1:t = j|o1:t, \u03bb) = \u03b1t(j, d)\u2211 j,d \u03b1t(i, d \u2032) (12)\nand the predicted probability that state j will start at t+ 1 and end at t + d with duration d, given partial observed sequence o1:t by\nP (St+1:t+d = j|o1:t, \u03bb) = \u2211 i 6=j,d\u2032 \u03b1t(i, d\n\u2032)a(i,d\u2032)(j,d)\u2211 i,d\u2032 \u03b1t(i, d \u2032) (13)\nThe posterior probabilites for given entire observation sequence o1 : t can be determined by\n\u03b7t(j, d) = P (St\u2212d+1,t = j, o1:T |\u03bb) = \u03b1t(j, d)\u03b2t(j, d) (14) t(i, j) = \u2211 d\u2032\u2208D \u2211 d\u2208D (i, d\u2032; j, d) (15)"}, {"heading": "4.2 Estimation", "text": "We can re-estimate using the expectations:\na\u0302(i,d\u2032)(j,d) = \u2211 t t(i, d \u2032; j, d)/ \u2211 j 6=i,d \u2211 t (i, d\u2032; j, d) (16)\nb\u0302j,d(o1 : od) = \u2211 t [\u03b7t(j, d)I(ot+1:t+d = O1 : d)]/ \u2211 t \u03b7t(j, d)\n(17)\nTo reduce the number of parameters, we used queries\u2019 cluster rather than queries\u2019 unigram as the observation variables. We trained a ranking model for each query cluster\noffline. And then predicting, we use HSMM model to predict the query cluster of the next query, and then use the corresponding ranking model to re-rank the search results."}, {"heading": "4.3 Why Abandon This Method", "text": "I implemented this method during the summer. Based on an opensource project[2] from JHU, I wrote my own HSMM model code. However I found out that I am too optimistic about this model. First, in the dataset, most of the sessions only have one or two queries, so it is not sufficient to estimate the HSMM model. Then I kept only the sessions that contain more than 5 queries, which slightly solved this problem.\nSecond, it is hard to estimate the stop condition of HSMM. General HSMM application such as those in speech or NLP do not have that much search space, so with sufficient data we can infer the probability of stop current sequence and transit to another hidden variable after staying in state i for time t. However in our case users may stop because they are satisfied about the results, or because they just give up and leave. There are many factors that affect the stop condition, and based on my observation of the final model, the HSMM model I got is very random, and do not capture stopping behavior.\nThird, HSMM is not a non-parametric model, so we have to set the total number of different hidden \u2018intent\u2019 we have in the model. Moreover, since we want to avoid overfitting, we use query cluster instead of query word as obervations, so we have to set the total number of query clusters. Our results are sensitive to the two parameters.\nFourth, a query in our model is not depended on the previous query. However it should be. Users often refine their query based on their previous query, not just based on their intent. However if we make each query depend on the previous one, it would make the model even harder to infer and estimate, because the number of parameters to be estimated will again increase and more data is needed.\nAs a result, HSMM is a nice model in NLP area, but it is not that easy to apply to user session behavior model."}, {"heading": "5. PROPOSED METHOD", "text": "I proposed to use Multi-armed bandit algorithm on Web Search for personalization. Since Multi-armed bandit select one article at a time, so we focus on the rank 1 results in the search result list, and try to improve the click-through rate of the rank 1 article."}, {"heading": "5.1 Short term behavior modeling", "text": "Normally each session contains one intent such as \u2018food in recent area\u2019 or \u2018local weather\u2019. Sessions with the same intent will be repeated across different users. For example, when people want to find a place to trade-in their old computer, they may all search queries such as \u2018trade-in bestbuy\u2019 or \u2018trade-in computer\u2019 etc. So sessions with this intent will be repeated again and again. Thus we can group sessions based on the queries, and then treat these sessions as our prior knowledge. When predicting online, we need to infer which session group this session is in, this can be done by\na Generalized Thompson sampling [15]. Algorithm has the following step\n5.1.1 Step 1 In the training data, for each session, we find out the urls been clicked. Then we build a hash table: the key is the clicked url, and the value is the query term. So for each clicked url, we have a set of associated query term. Then each session is represented by the query terms that is associated with all the clicked urls in that session.\n5.1.2 Step 2 Based on Step 1, we get a set of sessions, and each session is associated with a set of query terms. We then run a LDA on this dataset, which each session is treated as a document.\n5.1.3 Step 3 For each topic we get from LDA, we collect all the sessions in that topic, and then train a RankSVM model for that topic.\n5.1.4 Step 4 (online) When predicting, we need to infer which session cluster the current session belongs to. To do that, we adopt Generalized Thompson sampling [15]. More specifically, we treat each pre-trained RankSVM model as the prior model {\u03b51, \u03b52, ..., \u03b5N}, then within the original 10 ten results, we reassign an article to rank 1 based on the following probability:\nP (a) = (1\u2212 \u03b3) N\u2211 i=1 wi,tI(\u03b5i(xt) = a) Wt + \u03b3 K (18)\nHere \u03b3 is a smoothing parameter, and wi,t is the weight of prior model i at time t. The idea behind this is that each model will vote a url of which they believe should be ranked at top 1, then we take the weighted average of their vote and do normalization. After we re-rank, we will recevie feedback from the user, that is whether the user clicked or not clicked the rank 1 url. Based on the feedback, we update the weight of each RankSVM model based on\n\u2200i, wi,t+1 \u2190 wi,t \u00b7 exp(\u2212\u03b7`(fi(xt, at), rt)) (19) Wt+1 \u2190 ||wt+1||1 (20)\nHere ` is the loss function, in our case it could be logarithmic loss: `(r\u0302, r) = I(r = 1)ln1/r\u0302 + I(r = 0)ln1/(1 \u2212 r\u0302), \u03b7 is the learning rate and fi(xt, at) is the prediction function provided by RankSVM. The idea behaind this is that we penalize when the model predict wrong with a loss function and adjust the weight of each RankSVM model after we observe users\u2019 behaviors.\n5.1.5 Step 5 In a real search engine system, after a pre-defined time period, e.g. 1 day, we can re-train these RankSVM models use data up to date. In this case we will update our model based on the latest user behavior.\nOne advantage of this algorithm is that Generalized Thompson Sampling converges very fast, so it can very quickly identify which session cluster the current session is in, that is, it can find a reasonable weight vector wt very fast."}, {"heading": "5.2 Long term behavior modeling", "text": "We use thompson sampling with linear payoff [4] to model long term user behavior. Again, we are focusing on the top 1 ranking of the search list. We still assume that there are 10 default search results, and we try to select one that we think the user will click with the highest probability and put it in the rank 1 position. The probability of being clicked by a user is modeled as a linear regression with a Gaussian error. Suppose the likelihood of reward ri(t) at time t given context bi(t) and parameter u were given by the pdf of Gaussian distribution N(bi(t) T\u00b5, v2), and Let\nB(t) = Id + t\u22121\u2211 \u03c4=1 ba(\u03c4)(\u03c4)ba(\u03c4)(\u03c4) T (21)\n\u00b5\u0302(t) = B(t)\u22121( t\u22121\u2211 \u03c4=1 ba(\u03c4)(\u03c4)ra(\u03c4)(\u03c4)) (22)\nThen if the prior for \u00b5 at time t is given byN(\u00b5\u0302(t), v2B(t)\u22121), they posterior distribution at time t+ 1 is then\nP (\u00b5\u0302|ri(t)) \u221d P (ri(t)\u2016\u00b5\u0302)P (\u00b5\u0302) (23) \u223c N(\u00b5\u0302(t+ 1), v2B(t+ 1)\u22121) (24)\nThen the algorithm consist of the following steps:\n5.2.1 Step 1 Sample \u00b5\u0302(t) from distribution N(\u00b5\u0302, v2B\u22121)\n5.2.2 Step 2 Select article\nai(t) = arg max i bi(t)\nT \u00b5\u0302(t) (25)\nand observe reward (clicked or not clicked) rt.\n5.2.3 Step 3 Update\nB = B + ba(t)(t) T (26)\nf = f + ba(t)(t)rt (27) \u00b5\u0302 = B\u22121f (28)\nThe idea behind this is that we predict the click-through rate as a linear regression problem, and assume a Gaussian prior. Each time we observe the feedback from a user, we will update the posterior, and then sample a new parameter from the posterior distribution. Compare to a pure linear regression model or a ranking model, the advantage of this model is that as a Explore-Exploit algorithm, it can quickly learn the performance of a new article, while standard linear regression suffers overfitting when data is insufficient."}, {"heading": "6. DATASET", "text": "We use the data provided by Yandex as part of WSDM 2014 Log-based Personalization workshop[3]. The dataset includes user sessions extracted from Yandex logs, with user ids, queries, query terms, URLs, their domains, URL rankings and clicks. The user data is fully anonymized. Only meaningless numeric IDs of users are released. Some characteristics of the dataset:\n1. Unique queries: 21,073,569\n2. Unique urls: 703,484,26\n3. Unique users: 5,736,333\n4. Training sessions: 34,573,630\n5. Test sessions: 797,867\n6. Clicks in the training data: 64,693,054\n7. Total records in the log: 167,413,039\nThe time span for the training dataset is 27 days, and the time span for the test dataset is 3 days. However we do not have the ground truth of the test data, so we split training data into 24 days of training dataset and 3 days of test dataset.\nIn the dataset, each session contains one or more queries, and each queries contains 10 default search results, and which url the user clicked. All the behavior is associated with a time units. For example, the click log contains information about how many time units passed before the user clicked that url. Each log instance is either session metadata, or query action, or click action. Session metadata contains session Id, day id, and user id; query action contains session id, time passed, search id, query id, list of terms and list of url and domains; click action contains session id, time passed, search id and url id."}, {"heading": "7. EXPERIMENT SETTING", "text": ""}, {"heading": "7.1 Metric", "text": "URLs are labeled using 3 grades of relevance: 0 (irrelevant), 1 (relevant), 2 (highly relevant). The labeling is based on dwell-time: 0 (irrelevant) grade corresponds to documents with no clicks and clicks with dwell time strictly less than 50 time units; 1 (relevant grade) corresponds to documents with clicks and dwell time between 50 and 399 time units (inclusively); 2 (highly relevant) grade corresponds to the documents with clicks and dwell time not shorter than 400 time units. In addition, the relevance grade of 2 assigned to the documents associated with the clicks which are the last actions in the corresponding sessions. Dwell time is the time passed between the click on the document and the next click or the next query. It is well-known that dwell time is well correlated with the probability of the user to satisfy her information need with the clicked document [10].\nSince we are using Multi-armed bandit algorithm, we are interested in only the click through rate of the rank 1 position of the search results. So our performance metric is the CTR of rank 1 position of the search list instead of the NDCG or MAP of the entire search list."}, {"heading": "7.2 Feature construction", "text": "I use the following 18 features described in Table 1. Note that our goal is not feature engineering, so I didn\u2019t spend huge amount of time to come up with new features. These features try to capture the url related click statistics under one session, one user and all the users. These features are used by RankSVM models for both short term and long term modeling.\nTable 1: Features used by both long term and short term modeling\nfea id fea name fea description 1 short term relevance level 2 in this session, the number of times that this url is level 2 relevent 2 short term relevance level 1 in this session, the number of times that this url is level 1 relevent 3 short term relevance level 0 in this session, the number of times that this url is level 0 relevent 4 short term show in this session, the number of times this url is shown 5 short term missed in this session, the number of times this url is missed 6 short term skipped in this session, the number of times this url is skipped 7 long term relevance level 2 in all the history data of this user, the number of times that this url is level 2 relevent 8 long term relevance level 1 in all the history data of this user, the number of times that this url is level 1 relevent 9 long term relevance level 0 in all the history data of this user, the number of times that this url is level 0 relevent 10 long term show in all the history data of this user, the number of times this url is shown 11 long term missed in all the history data of this user, the number of times this url is missed 12 long term skipped in all the history data of this user, the number of times this url is skipped 13 cross user relevance level 2 in all the history data of all users, the number of times that this url is level 2 relevent 14 cross user relevance level 1 in all the history data of all users, the number of times that this url is level 1 relevent 15 cross user relevance level 0 in all the history data of all users, the number of times that this url is level 0 relevent 16 cross user show in all the history data of all users, the number of times this url is shown 17 cross user missed in all the history data of all users, the number of times this url is missed 18 cross user skipped in all the history data of all users, the number of times this url is skipped"}, {"heading": "7.3 Compared Algorithms", "text": "Note that our algorithm is a type of Explore-Exploit algorithm, so it can be used on top of any supervised learning algorithm such as RankSVM, LambdaMART, or RankNet. So here we focus on compare our algorithm with other ExploreExploit algorithm:\n7.3.1 Default ranking This is the default ranking provided by Yandex, which is a very high baseline since it is a commercial search engine. The NDCG of default ranking is 0.794379.\n7.3.2 LinUCB [16] This is one of the most popular UCB style algorithm and have been treated as baseline for many papers. This algorithm has been described in the background section. Each time the algorithm select the articles that has the highest upper confidence bound.\n7.3.3 Thompson Sampling[8] This is an algorithm that has been used by Yahoo! news personalization. It is a very efficient algorithm and has been proved to achieve lower regret than LinUCB.\n7.3.4 Our Proposed Algorithm The long term (based on Thompson sampling) and short term (based on Generalized thompson sampling) user behavior modeling algorithm proposed by us."}, {"heading": "8. EXPERIMENT RESULTS", "text": ""}, {"heading": "8.1 Results on Short term session data", "text": "For short term session data, we first do cluster on all the sessions in training data, and then use Generalized Thompson sampling to infer which session group the current session is in, and then apply the corresponding ranking model. The result is shown is figure 2. From figure 2 we can see that when the number of cluster is 7, Generalized Thompson sampling achieved the best CTR on rank 1 position, it is 3.4%\nhigher than default ranking and 2.01% higher than LinUCB. We can also see that when the number of cluster is 1, Generalized thompson sampling is still better than the default ranking, which means the RankSVM model itself can help improve the CTR of Rank 1 position. Figure 3 shows the performance of Generalized thompson sampling when different percentage of training data is being used. Since in our proposed algorithm, we have to do session clustering and train a ranking model on each of the cluster, so as we have more and more data, we can have higher and higher CTR."}, {"heading": "8.2 Results on Long term session data", "text": "For long term user behavior modeling, our proposed model use Thompson sampling with linear payoffs, And the advantage is that it can explore the CTR of urls in long tail, while traditional supervised learning algorithm suffer data insufficient for long tail urls. First we show that our algorithm indeed sensitive to the learning rate, which is a common problem for all online learning algorithms. From Figure 4 we can see that the algorithm achieve highest CTR when the learning rate \u03b1 = 2. From Figure 5 we can see that our proposed long term and short term modeling algorithm can\nimprove the CTR of rank 1 position of default ranking. Also note that the long term modeling can improve the CTR with 4.08%, which is higher than the short term modeling. So we can see that long term modeling is more efficient than short term modeling. Also if we combine the long term and short term modeling, we can improve the default CTR on rank 1 position with 4.59%."}, {"heading": "9. CONCLUSION", "text": "We proposed a novel way to model both long term and short term user behavior using Multi-armed bandit algorithm. For short term, we first do clustering on session data and then use Generalized thompson sampling to identify which session cluster the current session is in, for long term, we use thompson sampling with linear payoff. Experiments show that our algorithm can efficiently improve performance over the default ranking and outperforms LinUCB, a popular Multiarmed bandit algorithm."}, {"heading": "10. REFERENCES", "text": "[1] NIPS 2014 personalization workshop. https://sites.\ngoogle.com/site/nips2014personalization/.\n[2] Semi-markov sequence modeler. https://github.com/danieldeutsch/sm2.\n[3] WSCD personalization workshop. http://research. microsoft.com/en-us/um/people/nickcr/wscd2014/.\n[4] S. Agrawal and N. Goyal. Thompson sampling for contextual bandits with linear payoffs. arXiv preprint arXiv:1209.3352, 2012.\n[5] P. N. Bennett, K. Svore, and S. T. Dumais. Classification-enhanced ranking. In Proceedings of the 19th international conference on World wide web, pages 111\u2013120. ACM, 2010.\n[6] P. N. Bennett, R. W. White, W. Chu, S. T. Dumais, P. Bailey, F. Borisyuk, and X. Cui. Modeling the impact of short-and long-term behavior on search personalization. In Proceedings of the 35th international ACM SIGIR conference on Research and development in information retrieval, pages 185\u2013194. ACM, 2012.\n[7] H. Cao, D. Jiang, J. Pei, Q. He, Z. Liao, E. Chen, and H. Li. Context-aware query suggestion by mining click-through and session data. In Proceedings of the 14th ACM SIGKDD international conference on Knowledge discovery and data mining, pages 875\u2013883. ACM, 2008.\n[8] O. Chapelle and L. Li. An empirical evaluation of thompson sampling. In Advances in Neural Information Processing Systems, pages 2249\u20132257, 2011.\n[9] P. A. Chirita, W. Nejdl, R. Paiu, and C. Kohlschu\u0308tter. Using odp metadata to personalize search. In Proceedings of the 28th annual international ACM SIGIR conference on Research and development in information retrieval, pages 178\u2013185. ACM, 2005.\n[10] K. Collins-Thompson, P. N. Bennett, R. W. White, S. de la Chica, and D. Sontag. Personalizing web search results by reading level. In Proceedings of the 20th ACM international conference on Information and knowledge management, pages 403\u2013412. ACM, 2011.\n[11] Z. Dou, R. Song, J.-R. Wen, and X. Yuan. Evaluating\nthe effectiveness of personalized web search. Knowledge and Data Engineering, IEEE Transactions on, 21(8):1178\u20131190, 2009.\n[12] C. Eickhoff, K. Collins-Thompson, P. N. Bennett, and S. Dumais. Personalizing atypical web search sessions. In Proceedings of the sixth ACM international conference on Web search and data mining, pages 285\u2013294. ACM, 2013.\n[13] D. Gayo-Avello. A survey on session detection methods in query logs and a proposal for future evaluation. Information Sciences, 179(12):1822\u20131843, 2009.\n[14] J. Kiseleva, H. Thanh Lam, M. Pechenizkiy, and T. Calders. Discovering temporal hidden contexts in web sessions for user trail prediction. In Proceedings of the 22nd international conference on World Wide Web companion, pages 1067\u20131074. International World Wide Web Conferences Steering Committee, 2013.\n[15] L. Li. Generalized thompson sampling for contextual bandits. arXiv preprint arXiv:1310.7163, 2013.\n[16] L. Li, W. Chu, J. Langford, and R. E. Schapire. A contextual-bandit approach to personalized news article recommendation. In Proceedings of the 19th international conference on World wide web, pages 661\u2013670. ACM, 2010.\n[17] Z. Liao, D. Jiang, J. Pei, Y. Huang, E. Chen, H. Cao, and H. Li. A vlhmm approach to context-aware search. ACM Transactions on the Web (TWEB), 7(4):22, 2013.\n[18] Z. Ma, G. Pant, and O. R. L. Sheng. Interest-based personalized search. ACM Transactions on Information Systems (TOIS), 25(1):5, 2007.\n[19] N. Matthijs and F. Radlinski. Personalizing web search using long term browsing history. In Proceedings of the fourth ACM international conference on Web search and data mining, pages 25\u201334. ACM, 2011.\n[20] F. Qiu and J. Cho. Automatic identification of user interest for personalized search. In Proceedings of the 15th international conference on World Wide Web, pages 727\u2013736. ACM, 2006.\n[21] L. Rabiner. A tutorial on hidden markov models and selected applications in speech recognition. Proceedings of the IEEE, 77(2):257\u2013286, 1989.\n[22] X. Shen, B. Tan, and C. Zhai. Context-sensitive information retrieval using implicit feedback. In Proceedings of the 28th annual international ACM SIGIR conference on Research and development in information retrieval, pages 43\u201350. ACM, 2005.\n[23] D. Sontag, K. Collins-Thompson, P. N. Bennett, R. W. White, S. Dumais, and B. Billerbeck. Probabilistic models for personalizing web search. In Proceedings of the fifth ACM international conference on Web search and data mining, pages 433\u2013442. ACM, 2012.\n[24] B. Tan, X. Shen, and C. Zhai. Mining long-term search history to improve search accuracy. In Proceedings of the 12th ACM SIGKDD international conference on Knowledge discovery and data mining, pages 718\u2013723. ACM, 2006.\n[25] J. Teevan, S. T. Dumais, and E. Horvitz. Potential for personalization. ACM Transactions on Computer-Human Interaction (TOCHI), 17(1):4, 2010.\n[26] J. Teevan, S. T. Dumais, and D. J. Liebling. To personalize or not to personalize: modeling queries with variation in user intent. In Proceedings of the 31st annual international ACM SIGIR conference on Research and development in information retrieval, pages 163\u2013170. ACM, 2008.\n[27] J. Teevan, D. J. Liebling, and G. Ravichandran Geetha. Understanding and predicting personal navigation. In Proceedings of the fourth ACM international conference on Web search and data mining, pages 85\u201394. ACM, 2011.\n[28] Y. Ustinovskiy and P. Serdyukov. Personalization of web-search using short-term browsing context. In Proceedings of the 22nd ACM international conference on Conference on information & knowledge management, pages 1979\u20131988. ACM, 2013.\n[29] R. W. White, P. N. Bennett, and S. T. Dumais. Predicting short-term interests using activity-based search context. In Proceedings of the 19th ACM international conference on Information and knowledge management, pages 1009\u20131018. ACM, 2010.\n[30] R. W. White, W. Chu, A. Hassan, X. He, Y. Song, and H. Wang. Enhancing personalized search by mining and modeling task behavior. In Proceedings of the 22nd international conference on World Wide Web, pages 1411\u20131420. International World Wide Web Conferences Steering Committee, 2013.\n[31] B. Xiang, D. Jiang, J. Pei, X. Sun, E. Chen, and H. Li. Context-aware ranking in web search. In Proceedings of the 33rd international ACM SIGIR conference on Research and development in information retrieval, pages 451\u2013458. ACM, 2010.\n[32] S.-Z. Yu. Hidden semi-markov models. Artificial Intelligence, 174(2):215\u2013243, 2010."}], "references": [{"title": "Thompson sampling for contextual bandits with linear payoffs", "author": ["S. Agrawal", "N. Goyal"], "venue": "arXiv preprint arXiv:1209.3352,", "citeRegEx": "4", "shortCiteRegEx": null, "year": 2012}, {"title": "Classification-enhanced ranking", "author": ["P.N. Bennett", "K. Svore", "S.T. Dumais"], "venue": "Proceedings of the 19th international conference on World wide web, pages 111\u2013120. ACM,", "citeRegEx": "5", "shortCiteRegEx": null, "year": 2010}, {"title": "Modeling the impact of short-and long-term behavior on search personalization", "author": ["P.N. Bennett", "R.W. White", "W. Chu", "S.T. Dumais", "P. Bailey", "F. Borisyuk", "X. Cui"], "venue": "Proceedings of the 35th international ACM SIGIR conference on Research and development in information retrieval, pages 185\u2013194. ACM,", "citeRegEx": "6", "shortCiteRegEx": null, "year": 2012}, {"title": "Context-aware query suggestion by mining click-through and session data", "author": ["H. Cao", "D. Jiang", "J. Pei", "Q. He", "Z. Liao", "E. Chen", "H. Li"], "venue": "Proceedings of the 14th ACM SIGKDD international conference on Knowledge discovery and data mining, pages 875\u2013883. ACM,", "citeRegEx": "7", "shortCiteRegEx": null, "year": 2008}, {"title": "An empirical evaluation of thompson sampling", "author": ["O. Chapelle", "L. Li"], "venue": "Advances in Neural Information Processing Systems, pages 2249\u20132257,", "citeRegEx": "8", "shortCiteRegEx": null, "year": 2011}, {"title": "Using odp metadata to personalize search", "author": ["P.A. Chirita", "W. Nejdl", "R. Paiu", "C. Kohlsch\u00fctter"], "venue": "Proceedings of the 28th annual international ACM SIGIR conference on Research and development in information retrieval, pages 178\u2013185. ACM,", "citeRegEx": "9", "shortCiteRegEx": null, "year": 2005}, {"title": "Personalizing web search results by reading level", "author": ["K. Collins-Thompson", "P.N. Bennett", "R.W. White", "S. de la Chica", "D. Sontag"], "venue": "In Proceedings of the 20th ACM international conference on Information and knowledge management,", "citeRegEx": "10", "shortCiteRegEx": "10", "year": 2011}, {"title": "Evaluating  the effectiveness of personalized web search", "author": ["Z. Dou", "R. Song", "J.-R. Wen", "X. Yuan"], "venue": "Knowledge and Data Engineering, IEEE Transactions on, 21(8):1178\u20131190,", "citeRegEx": "11", "shortCiteRegEx": null, "year": 2009}, {"title": "Personalizing atypical web search sessions", "author": ["C. Eickhoff", "K. Collins-Thompson", "P.N. Bennett", "S. Dumais"], "venue": "Proceedings of the sixth ACM international conference on Web search and data mining, pages 285\u2013294. ACM,", "citeRegEx": "12", "shortCiteRegEx": null, "year": 2013}, {"title": "A survey on session detection methods in query logs and a proposal for future evaluation", "author": ["D. Gayo-Avello"], "venue": "Information Sciences, 179(12):1822\u20131843,", "citeRegEx": "13", "shortCiteRegEx": null, "year": 2009}, {"title": "Discovering temporal hidden contexts in web sessions for user trail prediction", "author": ["J. Kiseleva", "H. Thanh Lam", "M. Pechenizkiy", "T. Calders"], "venue": "Proceedings of the 22nd international conference on World Wide Web companion, pages 1067\u20131074. International World Wide Web Conferences Steering Committee,", "citeRegEx": "14", "shortCiteRegEx": null, "year": 2013}, {"title": "Generalized thompson sampling for contextual bandits", "author": ["L. Li"], "venue": "arXiv preprint arXiv:1310.7163,", "citeRegEx": "15", "shortCiteRegEx": null, "year": 2013}, {"title": "A contextual-bandit approach to personalized news article recommendation", "author": ["L. Li", "W. Chu", "J. Langford", "R.E. Schapire"], "venue": "Proceedings of the 19th international conference on World wide web, pages 661\u2013670. ACM,", "citeRegEx": "16", "shortCiteRegEx": null, "year": 2010}, {"title": "A vlhmm approach to context-aware search", "author": ["Z. Liao", "D. Jiang", "J. Pei", "Y. Huang", "E. Chen", "H. Cao", "H. Li"], "venue": "ACM Transactions on the Web (TWEB), 7(4):22,", "citeRegEx": "17", "shortCiteRegEx": null, "year": 2013}, {"title": "Interest-based personalized search", "author": ["Z. Ma", "G. Pant", "O.R.L. Sheng"], "venue": "ACM Transactions on Information Systems (TOIS), 25(1):5,", "citeRegEx": "18", "shortCiteRegEx": null, "year": 2007}, {"title": "Personalizing web search using long term browsing history", "author": ["N. Matthijs", "F. Radlinski"], "venue": "Proceedings of the fourth ACM international conference on Web search and data mining, pages 25\u201334. ACM,", "citeRegEx": "19", "shortCiteRegEx": null, "year": 2011}, {"title": "Automatic identification of user interest for personalized search", "author": ["F. Qiu", "J. Cho"], "venue": "Proceedings of the 15th international conference on World Wide Web, pages 727\u2013736. ACM,", "citeRegEx": "20", "shortCiteRegEx": null, "year": 2006}, {"title": "A tutorial on hidden markov models and selected applications in speech recognition", "author": ["L. Rabiner"], "venue": "Proceedings of the IEEE, 77(2):257\u2013286,", "citeRegEx": "21", "shortCiteRegEx": null, "year": 1989}, {"title": "Context-sensitive information retrieval using implicit feedback", "author": ["X. Shen", "B. Tan", "C. Zhai"], "venue": "Proceedings of the 28th annual international ACM SIGIR conference on Research and development in information retrieval, pages 43\u201350. ACM,", "citeRegEx": "22", "shortCiteRegEx": null, "year": 2005}, {"title": "Probabilistic models for personalizing web search", "author": ["D. Sontag", "K. Collins-Thompson", "P.N. Bennett", "R.W. White", "S. Dumais", "B. Billerbeck"], "venue": "Proceedings of the fifth ACM international conference on Web search and data mining, pages 433\u2013442. ACM,", "citeRegEx": "23", "shortCiteRegEx": null, "year": 2012}, {"title": "Mining long-term search history to improve search accuracy", "author": ["B. Tan", "X. Shen", "C. Zhai"], "venue": "Proceedings of the 12th ACM SIGKDD international conference on Knowledge discovery and data mining, pages 718\u2013723. ACM,", "citeRegEx": "24", "shortCiteRegEx": null, "year": 2006}, {"title": "Potential for personalization", "author": ["J. Teevan", "S.T. Dumais", "E. Horvitz"], "venue": "ACM Transactions on Computer-Human Interaction (TOCHI), 17(1):4,", "citeRegEx": "25", "shortCiteRegEx": null, "year": 2010}, {"title": "To personalize or not to personalize: modeling queries with variation in user intent", "author": ["J. Teevan", "S.T. Dumais", "D.J. Liebling"], "venue": "Proceedings of the 31st annual international ACM SIGIR conference on Research and development in information retrieval, pages 163\u2013170. ACM,", "citeRegEx": "26", "shortCiteRegEx": null, "year": 2008}, {"title": "Understanding and predicting personal navigation", "author": ["J. Teevan", "D.J. Liebling", "G. Ravichandran Geetha"], "venue": "Proceedings of the fourth ACM international conference on Web search and data mining, pages 85\u201394. ACM,", "citeRegEx": "27", "shortCiteRegEx": null, "year": 2011}, {"title": "Personalization of web-search using short-term browsing context", "author": ["Y. Ustinovskiy", "P. Serdyukov"], "venue": "Proceedings of the 22nd ACM international conference on Conference on information & knowledge management, pages 1979\u20131988. ACM,", "citeRegEx": "28", "shortCiteRegEx": null, "year": 2013}, {"title": "Predicting short-term interests using activity-based search context", "author": ["R.W. White", "P.N. Bennett", "S.T. Dumais"], "venue": "Proceedings of the 19th ACM international conference on Information and knowledge management, pages 1009\u20131018. ACM,", "citeRegEx": "29", "shortCiteRegEx": null, "year": 2010}, {"title": "Enhancing personalized search by mining and modeling task behavior", "author": ["R.W. White", "W. Chu", "A. Hassan", "X. He", "Y. Song", "H. Wang"], "venue": "Proceedings of the 22nd international conference on World Wide Web, pages 1411\u20131420. International World Wide Web Conferences Steering Committee,", "citeRegEx": "30", "shortCiteRegEx": null, "year": 2013}, {"title": "Context-aware ranking in web search", "author": ["B. Xiang", "D. Jiang", "J. Pei", "X. Sun", "E. Chen", "H. Li"], "venue": "Proceedings of the 33rd international ACM SIGIR conference on Research and development in information retrieval, pages 451\u2013458. ACM,", "citeRegEx": "31", "shortCiteRegEx": null, "year": 2010}, {"title": "Hidden semi-markov models", "author": ["S.-Z. Yu"], "venue": "Artificial Intelligence, 174(2):215\u2013243,", "citeRegEx": "32", "shortCiteRegEx": null, "year": 2010}], "referenceMentions": [{"referenceID": 2, "context": "Basically personalization techniques put a search in the context of the user\u2019s interests, and consider two cases [6]: the long term ar X iv :1 50 2.", "startOffset": 113, "endOffset": 116}, {"referenceID": 24, "context": "Search session is a series of intent-related user\u2019s requests to the search engine[28].", "startOffset": 81, "endOffset": 85}, {"referenceID": 3, "context": "Studies[7] [22] has been shown that a user tends to refine the queries or explore related information about his or her search intent in a session.", "startOffset": 7, "endOffset": 10}, {"referenceID": 18, "context": "Studies[7] [22] has been shown that a user tends to refine the queries or explore related information about his or her search intent in a session.", "startOffset": 11, "endOffset": 15}, {"referenceID": 15, "context": "Most of the current work[19] [24] make use of the click data and try to infer user\u2019s interests.", "startOffset": 24, "endOffset": 28}, {"referenceID": 20, "context": "Most of the current work[19] [24] make use of the click data and try to infer user\u2019s interests.", "startOffset": 29, "endOffset": 33}, {"referenceID": 21, "context": "[25] and [26] showed that there is a lot of variation across queries in the benefits that can be achieved through personalization.", "startOffset": 0, "endOffset": 4}, {"referenceID": 22, "context": "[25] and [26] showed that there is a lot of variation across queries in the benefits that can be achieved through personalization.", "startOffset": 9, "endOffset": 13}, {"referenceID": 7, "context": "Similarly, [11] defined the click entropy to measure variation in information needs of users under a query.", "startOffset": 11, "endOffset": 15}, {"referenceID": 15, "context": "[19] build a Firefox add-on and capture features such as unigram, noun phrase etc.", "startOffset": 0, "endOffset": 4}, {"referenceID": 19, "context": "[23] build a language model for each user as the user profile.", "startOffset": 0, "endOffset": 4}, {"referenceID": 23, "context": "[27] analyze the query logs by looking at navigation behavior across all users.", "startOffset": 0, "endOffset": 4}, {"referenceID": 20, "context": "[24] explored how to exploit longterm search history, which consists of past queries, result documents and clickthrough, as useful search context that can improve retrieval performance.", "startOffset": 0, "endOffset": 4}, {"referenceID": 14, "context": "[18] map user interests to categories in the ODP taxonomy.", "startOffset": 0, "endOffset": 4}, {"referenceID": 5, "context": "[9] do re-rank based on the distance between a user profile defined using ODP topics and the sets of ODP topics covered by each URL returned in regular web search.", "startOffset": 0, "endOffset": 3}, {"referenceID": 1, "context": "[5] [12] classify urls into 1 of the 219 topical categories from the top two levels of the ODP.", "startOffset": 0, "endOffset": 3}, {"referenceID": 8, "context": "[5] [12] classify urls into 1 of the 219 topical categories from the top two levels of the ODP.", "startOffset": 4, "endOffset": 8}, {"referenceID": 16, "context": "[20] learn a user topic perference vec-", "startOffset": 0, "endOffset": 4}, {"referenceID": 3, "context": "[7] proposed a context-aware query suggestion approach which is in two steps: in the offline step, queries are clustered by a clickthrough bipartite, and a concept sequence suffix tree is constructed as the query suggestion model; in the online step, a user\u2019s search context is captured by mapping the query sequence submitted by the user to a sequence suffix tree.", "startOffset": 0, "endOffset": 3}, {"referenceID": 25, "context": "[29] investigate the effectiveness of activity-based context.", "startOffset": 0, "endOffset": 4}, {"referenceID": 24, "context": "[28] [31] defined a set of features such as the cosine and jaccard distance between the search results and the query.", "startOffset": 0, "endOffset": 4}, {"referenceID": 27, "context": "[28] [31] defined a set of features such as the cosine and jaccard distance between the search results and the query.", "startOffset": 5, "endOffset": 9}, {"referenceID": 13, "context": "[17] adopted vlHMM to model session behavior, where each query in the session has a latent intention conditioned on the former n query, also states in the vlHMM are represented as feature vectors.", "startOffset": 0, "endOffset": 4}, {"referenceID": 26, "context": "[30] mine historic search-engine logs to find other users performing similar tasks to the current user and leverage their on-task behavior to identify web pages to promote in the current ranking.", "startOffset": 0, "endOffset": 4}, {"referenceID": 10, "context": "[14] decomposed web sessions into nonoverlapping segments and learned the temporal context for each segment.", "startOffset": 0, "endOffset": 4}, {"referenceID": 2, "context": "Finally, [6] and [6] make use of both long term and short term context to re-rank search results.", "startOffset": 9, "endOffset": 12}, {"referenceID": 2, "context": "Finally, [6] and [6] make use of both long term and short term context to re-rank search results.", "startOffset": 17, "endOffset": 20}, {"referenceID": 12, "context": "1 LinUCB[16] LinUCB try to minimize the regret which is defined as the expectation of reward of best article and the expectation of reward of article selected by the algorithm:", "startOffset": 8, "endOffset": 12}, {"referenceID": 4, "context": "2 Thompson Sampling Thompson sampling [8] is a very old heuristic algorithm yet recently received a lot of attention.", "startOffset": 38, "endOffset": 41}, {"referenceID": 0, "context": "Normally the prior and posterior distribution are all Gaussian distribution [4].", "startOffset": 76, "endOffset": 79}, {"referenceID": 9, "context": "Session segmentation normally based on time span or similarities between queries [13].", "startOffset": 81, "endOffset": 85}, {"referenceID": 28, "context": "Hidden-semi markov model[32] is a perfect model for modeling such sequential transition.", "startOffset": 24, "endOffset": 28}, {"referenceID": 28, "context": "\u03b2(t, d) = P (Ot+1:T |S[t\u2212d+1:t] = j, \u03bb) (9) so the forward-backward algorithm for HSMM is [32][21]:", "startOffset": 90, "endOffset": 94}, {"referenceID": 17, "context": "\u03b2(t, d) = P (Ot+1:T |S[t\u2212d+1:t] = j, \u03bb) (9) so the forward-backward algorithm for HSMM is [32][21]:", "startOffset": 94, "endOffset": 98}, {"referenceID": 11, "context": "When predicting online, we need to infer which session group this session is in, this can be done by a Generalized Thompson sampling [15].", "startOffset": 133, "endOffset": 137}, {"referenceID": 11, "context": "To do that, we adopt Generalized Thompson sampling [15].", "startOffset": 51, "endOffset": 55}, {"referenceID": 0, "context": "2 Long term behavior modeling We use thompson sampling with linear payoff [4] to model long term user behavior.", "startOffset": 74, "endOffset": 77}, {"referenceID": 6, "context": "It is well-known that dwell time is well correlated with the probability of the user to satisfy her information need with the clicked document [10].", "startOffset": 143, "endOffset": 147}, {"referenceID": 12, "context": "2 LinUCB [16] This is one of the most popular UCB style algorithm and have been treated as baseline for many papers.", "startOffset": 9, "endOffset": 13}, {"referenceID": 4, "context": "3 Thompson Sampling[8] This is an algorithm that has been used by Yahoo! news personalization.", "startOffset": 19, "endOffset": 22}], "year": 2015, "abstractText": "Personalization is important for search engines to improve user experience. Most of the existing work do pure feature engineering and extract a lot of session-style features and then train a ranking model. Here we proposed a novel way to model both long term and short term user behavior using Multi-armed bandit algorithm. Our algorithm can generalize session information across users well, and as an ExploreExploit style algorithm, it can generalize to new urls and new users well. Experiments show that our algorithm can improve performance over the default ranking and outperforms several popular Multi-armed bandit algorithms.", "creator": "LaTeX with hyperref package"}}}