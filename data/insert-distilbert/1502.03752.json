{"id": "1502.03752", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "12-Feb-2015", "title": "A new hybrid metric for verifying parallel corpora of Arabic-English", "abstract": "this paper discusses a new metric that has been applied to verify the quality in translation between sentence pairs in parallel corpora samples of arabic - english. this metric simultaneously combines two techniques, one based on sentence length and the last other based on compression code loss length. experiments on sample profiles test parallel arabic - english corpora indicate the combination of producing these two techniques improves accuracy of the identification of satisfactory and unsatisfactory transmission sentence pairs compared to sentence length and compression signal code length difference alone. the new method proposed in this research is effective at filtering repetitive noise and reducing mis - translations resulting and in greatly improved quality.", "histories": [["v1", "Thu, 12 Feb 2015 17:49:45 GMT  (2371kb)", "http://arxiv.org/abs/1502.03752v1", "in CCSEA-2015"]], "COMMENTS": "in CCSEA-2015", "reviews": [], "SUBJECTS": "cs.CL", "authors": ["saad alkahtani", "wei liu", "william j teahan"], "accepted": false, "id": "1502.03752"}, "pdf": {"name": "1502.03752.pdf", "metadata": {"source": "CRF", "title": "A NEW HYBRID METRIC FOR VERIFYING PARALLEL", "authors": ["Saad Alkahtani", "Wei Liu", "William J. Teahan"], "emails": ["s.alkahtani@bangor.ac.uk", "w.liu@bangor.ac.uk", "w.j.teahan@bangor.ac.uk"], "sections": [{"heading": null, "text": "KEYWORDS Parallel Corpus, Sentence Alignment for Machine Translation, Prediction by Partial Matching Compression\n1. \u00a0BACKGROUND \u00a0AND \u00a0MOTIVATION \u00a0 The history of translation between natural languages can be traced back to the beginning of human culture, with its major mission being to expand the informativeness of one language, decrease the misunderstanding in dialogue, and even contribute to the growth of cultures [5]. Language translation is seen as a valuable social science oriented industry to help people develop international relationships.\nEarly pioneering machine translation systems were developed in the 1950s and 1960s [8]. Machine translation requires the development of computing technologies in the areas of computational linguistics and natural language processing. Machine and machine-aided translation are gaining in accuracy and popularity. Computer technology is essential to manage the large amounts of text available that may need to be translated.\nOur research specifically explores the development of resources for Arabic-English translation, two important global languages. Arabic is spoken throughout the world and is the official language of 27 states, the third most after French and English. The term \u2018Arabic\u2019 when used in this paper refers to a variety of dialects belonging to the Central Semitic languages. English is the essential language of commerce and science and is the common lingua franca between many nations. Both languages are two of the six official languages of the United Nations.\nArabic is the primary language for over 380 million native Arabic speakers worldwide [15]. Computing research and applications designed for Arabic has increased in recent years. In particular, there have been a significant number of people accessing the Internet in Arabic. The majority of these users do not speak any language other than Arabic, which means they cannot easily access the vast variety of English information available. At the same time, global interest in Arabic countries, in culture, politics, economics, and other areas has expanded worldwide.\nLanguage corpora have become increasingly important in natural language processing, and machine translation in particular. Corpora are an important resource often used for training purposes for statistical-based language modelling and machine translation. Large-scale parallel corpora are needed to construct statistical machine translation systems. Given the large number of Arabic speakers and the global importance of English, it is vital that translation between these languages be facilitated by the use of high quality parallel corpora. However, the structural differences between these languages present a challenge for machine translation. Arabic requires an altogether different treatment than European languages because of its unique morphology. Arabic and English are also different in a number of graphology aspects as Table 1 shows.\nThe use of parallel Arabic-English corpora to train statistical MT models provides an effective way for building MT systems. However, Arabic-English parallel texts of high quality are still very limited and are not available in satisfactory quantities, therefore most translations are performed manually, a time consuming and often error-filled process. Limitations of existing parallel corpora include incomplete data, untagged entries, with only limited text genres being available (such as news stories). In addition, many of the better quality corpora are not available for public use with fees in the thousands of dollars. For example, a list of corpora that were available from the Linguistic Data Corporation (LDC) in 2013 at the beginning of our research project is shown in Table 2 [12]. These costs are often unaffordable for most students, and also for many researchers or small research groups.\nAnother motivation behind our research is to develop techniques that would allow the construction of high quality parallel corpora that are free for everyone to use by improving the quality of the data as well as combining existing corpora, and by constructing much larger\ncorpora, for example by using web scraping techniques. In order to achieve this task, we believe that a more accurate and robust metric than existing methods (such as sentence length) is needed for matching sentence pairs between languages.\nThis paper is organised as follows. In the next section, we review some of the work that is related to the present work. Note that not all of the related work has been included (especially for the use of sentence length as a metric for alignment) due to the many publications in this area. In section 3, the new hybrid metric is described. The experimental evaluation is described in section 4, with the conclusion in the final section.\n2. \u00a0RELATED \u00a0WORK \u00a0 In a parallel bilingual corpus, textual elements (e.g. paragraphs, sentences, phrases, words) alignment is an essential job for statistical machine translation. There have been a number of different approaches for sentence alignment such as sentence length, word co-occurrence, cognates, dictionaries and parts of speech etc. for a parallel bilingual corpus [13].\nThe sentence length metric assumes that the length for each sentence will be kept the same when it is translated from the source language into the target language. Gale and Church [6] aligned parallel sentences in English-French and English-German corpora based on a sentence length metric that required calculating the character length of all sentences. Gale and Church\u2019s [6] overall accuracies were 97% for English-German and 94% for English-French. Wu [21] aligned English-Chinese corpora by using sentence length values and reached an accuracy of 95%. Kay and R\u00f6scheisen [9] developed a program that combined word and sentence alignment and calculated the word probabilities by using the dice co-efficient. Haruno and Yamazaki [7] used a similar method plus a bilingual dictionary for aligning English-Japanese corpora. Papageorgiou, Cranias, and Piperidis [17] used the sentence alignment metric based on the highest matching part of speech tags and matches restricted to nouns, adjectives and verbs, and reached 99% accuracy. Simard, Foster and Isabelle [19] used cognate-based approaches and found that sentence length difference worked well for sentence alignment. However, Melamed [14] pointed out that because results were only reported for a relatively easy bilingual text, comparing two algorithms\u2019 performances in the literature is difficult. In addition, Brown et al. [3] calculated sentence length by using the number of words instead of the number of bytes or characters, which generated similar accuracies between 96% and 97%.\nIn the last decade, there have been few new proposals for sentence alignment for parallel bilingual corpora [22]. One disadvantage of existing sentence alignment algorithms is that it is less effective when linking corresponding sentences if they are one-to-many or many-to-one mutual translations [11].\nOur approach, as well as using sentence length, also makes use of the strong correlation in compression code length (number of bits required to encode the text) between original sentences and accurately translated sentences. We show in this paper that this correlation can be used to evaluate and improve the quality of bilingual parallel corpora. If encoded into bit strings, almost all natural language text contain redundant bits that can be removed without affecting the information they carry. An observation by Behr et al. on natural languages indicates that all natural languages have similar cross entropies [2]. According to Shannon\u2019s information theory [18], a derived hypothesis from this observation will be that all natural languages can be encoded into the same length of bit strings for the same information if redundant bits are excluded.\nOur work with using compression code length metrics for sentence alignment with ChineseEnglish corpora have shown they can be very effective [13]. Our idea of using compression\ncode length as a sentence alignment metric hinges on the premise that the compression of cotranslated text (i.e. documents, paragraphs, sentences, clauses, phrases) should have similar code lengths [2]. This is based on the notion that the information contained in the cotranslations will be similar. Since compression can be used to measure the information content, we can simply look at the ratio of the compression code lengths of the co-translated text pair to determine whether the text is aligned. That is, if you have a text string (i.e. document, paragraph, sentence, clause or phrase) in one language, and its translation in another language, then the ratio of the compression code lengths of the text string pair should be close to 1.0. This approach and the new hybrid approach are described in more detail in the next section.\n3. \u00a0A \u00a0NEW \u00a0METRIC \u00a0FOR \u00a0CHECKING \u00a0THE \u00a0QUALITY \u00a0OF \u00a0PARALLEL \u00a0SENTENCE \u00a0PAIRS \u00a0 In this section, we describe how we use a distance metric based both on sentence lengths and on compression code lengths (using the Prediction by Partial Match (PPM) compression scheme) in order to check the quality of the sentence pairs."}, {"heading": "3.1. PPM Compression Code Length Metric", "text": "The Prediction by Partial Matching (PPM) compression scheme, first proposed by Cleary and Witten in 1984 [4], predicts the next symbol or character from a fixed order context. The context models are adaptively updated as the text is processed sequentially using an online adaptive process. For both Arabic and English text [1, 9], experiments have shown that order 5 models (using fixed order contexts of length 5) perform best at compressing the text using the PPMD variant of the algorithm developed by Howard in 1993 based on the PPMC variant devised by Moffat [20]. The main difference between PPMC and PPMD (and other variants PPMA and PPMB) is the calculation of the escape probability when the model needs to back off to lower order models if a symbol is not predicted by a higher order model.\nFormally, the estimation of the escape probability for PPMD is \ud835\udc52 = \ud835\udc61!/2\ud835\udc5b and for the symbol probability is \ud835\udc5d \ud835\udf11 = 2\ud835\udc50 \ud835\udf11 \u2212 1 /2\ud835\udc47!, where: \ud835\udc51 is the current coding order of a model; \ud835\udf11 is an upcoming symbol \ud835\udf11 = \ud835\udc65!!! \u2208 \ud835\udc34 ; \ud835\udc60! is the current context \ud835\udc60! = \ud835\udc65!,\u22ef , \ud835\udc65!!!!!; \ud835\udc50! \ud835\udf11 is the number of times that the symbol \ud835\udf11 in the context \ud835\udc60!; \ud835\udc61! is the total number of unique symbols that occur after the context \ud835\udc60!; \ud835\udc47! is the total number of times that the context \ud835\udc60! has been seen with \ud835\udc47! = \ud835\udc50! \ud835\udf11 ; \ud835\udc52 is the escape probability; and \ud835\udc5d \ud835\udf11 is the probably of the upcoming symbol \ud835\udf11.\nIn this paper for our experiments, we use PPMD with \ud835\udc51 = 5 since as stated, experience shows that this is most effective for compressing English and Arabic text and performs better than PPMA, PPMB and PPMC. Table 3 shows how the probabilities are estimated using PPMD when the model has been trained on the sample text string \u201c\u0644\u0627\u06cc\u064a\u0628\u0633\u0644\u0633\u0644\u0633\u0644\u0644\u0644\u06cc\u064a\u0628\u0633\u201d. The table shows the predictions, frequency counts \ud835\udc50 and probability estimates \ud835\udc5d for the order \ud835\udc58 = 3, \ud835\udc58 = 2, \ud835\udc58 = 1, \ud835\udc58 = 0 and \ud835\udc58 = \u22121 PPMD contexts (where \ud835\udc58 is the order of the model or context length). For example, only one symbol has been predicted in the single order 3 context \u2013 this has occurred once in the training text, and therefore its probability estimate that it will occur again is 3/4 and the probability estimate that a previously unseen symbol in this context will occur instead is 1/4 therefore necessitating the use of lower order models in order to estimate the probability of the unseen symbol. The model will keep on escaping down until it encounters a context where the symbol has been seen before or the symbol will be encoded using the default \ud835\udc58 = \u22121 context where every symbol is estimated with equal probability 1/ \ud835\udc34 where \ud835\udc34 is the size of the alphabet."}, {"heading": "3.2. Code Length Ratio Distance Metric for Matching Sentences", "text": "The term code length refers to the size (in bytes) of the compressed output file produced by the PPM compression algorithm. When using PPM to compress Arabic or English text, the code length is a measure of the cross-entropy of the text, which is the average size (in bytes) per character for the compressed output string. Theoretically, the cross-entropy is estimated as follows:\n\ud835\udc3b \ud835\udc46 = 1 \ud835\udc58 log! \ud835\udc5d \ud835\udc46 = \u2212 1 \ud835\udc58\n\u2212 log! \ud835\udc5d \ud835\udc65! \ud835\udc65!,\u22ef , \ud835\udc65!!!\n!\n!!!\nwhere \ud835\udc3b \ud835\udc46 is the average number of bits to encode the text and \ud835\udc58 is the order of the model (e.g. 5 for the models used in this paper).\nNote that the compression code length, the number of bits required to encode the text string losslessly, so that it can be unambiguously decoded, can be expressed simply as \ud835\udc5b\ud835\udc3b \ud835\udc46! .\nThe ratio of the compression code lengths of the parallel text strings for languages \ud835\udc38 (English) and \ud835\udc34 (Arabic) is defined as follows:\n\ud835\udc45 \ud835\udc46! , \ud835\udc46! = \ud835\udc5b \ud835\udc5a \u00d7 \ud835\udc3b \ud835\udc46! \ud835\udc3b \ud835\udc46!\nwhere \ud835\udc46! is an English text string with length \ud835\udc5b and \ud835\udc46! is an Arabic text string with length \ud835\udc5a.\nThe code length ratio (CR) is defined as:\n\ud835\udc36\ud835\udc45 = \ud835\udc5a\ud835\udc4e\ud835\udc65 \ud835\udc45!,!,\ud835\udc45!,!\nLiu et al. [13] have shown that CR is a more effective distance metric for sentence alignment of Chinese-English parallel corpora than a distance metric based on sentence length. A primary purpose of the research reported in this paper was to investigate whether this would also be the case for Arabic-English parallel corpora."}, {"heading": "3.3. Sentence Length Ratio Distance Metrics for Matching Sentences", "text": "Automatically generated bilingual corpora often have a large number of noisy sentence pairs. Consequently, researchers have devised various methods to filter noisy sentences from parallel corpora [10]. However, for our experiments discussed in Section 4, we have found a new technique based on a combination of the compression Code Length Ratio (CR) described above and the standard Sentence Length Ratio (SLR) described by M\u00fajdricza-Maydt [16] is the most effective for Arabic-English sentence pairs in order to achieve a high-quality corpus as a result.\nThe Sentence Length Ratio (SLR) for a pair of translation sentences for Arabic and English can be calculated as follows:\n\ud835\udc46\ud835\udc3f\ud835\udc45 = \ud835\udc5a\ud835\udc4e\ud835\udc65 \ud835\udc3f! \ud835\udc3f! , \ud835\udc3f! \ud835\udc3f!\nwhere \ud835\udc3f! is the length of the text for Language \ud835\udc34.\n4. \u00a0EXPERIMENTAL \u00a0EVALUATION \u00a0"}, {"heading": "4.1. Developing the Test Corpora", "text": "For our experimental evaluation, two parallel Arabic-English test corpora were created. A large corpus (Corpus A) was first created containing fifty-eight million words that was collected from two online sources Al Hayat (http://www.alhayat.com) and OPUS (http://opus.lingfil.uu.se) with permission obtained from the owners of the data. OPUS is an open source parallel corpus that provides a large collection of translated texts from the web. All the online data was collected automatically and as a result the original texts are not of high quality. However, a primary purpose of our research is to develop a more reliable collection based on this and other data with poor quality translations filtered out using our sentence matching metrics.\nA second much smaller test corpus (Corpus B) was created containing 10,000 translations judged satisfactory and 2,000 translations judged unsatisfactory. These were manually selected from Corpus A and formed the ground truth data for our experiment.\nThe files in Corpus A were also classified into 13 categories such as Books, Business, Cinema, Conferences, Crimes, Decisions, Economy, Geographies, Issues, Law, Politics, Reports and Stories as described in Table 4. The number of Arabic and English characters and words in each of the categories are also shown in the table. In total, 58,380,784 words were collected comprising 27,775,663 Arabic words and 30,808,480 English words."}, {"heading": "4.2. Compression Experiments", "text": "Preliminary compression experiments were conducted to determine if the CR compression code length measure would be effective as a metric for measuring the quality of translation between sentence pairs of Arabic and English.\nStandard PPM is an adaptive technique with its language models starting from null when the beginning of a text string is processed. The context frequency counts from which the probability estimates are made are then updated as the text string is processed sequentially. For longer text strings (such as documents and paragraphs), the PPM algorithm will usually have enough text in order to train its models effectively so that higher order contexts are being used for most predictions with less need to escape down to lower order contexts.\nOne obvious concern when using PPM code lengths is that sentences may not be long enough in order that more reliable probability estimates can be made for the CR calculation. A simple expedient in overcoming this difficulty is to prime the PPM models prior to the compression. We can use a large corpus that is representative of the language (such as the Brown corpus for English and the CCA corpus for Arabic) in order to prime the models prior to the compression being performed (i.e. \u2018train\u2019 the models using the priming text). This approach has been found to be very effective, for example, when using compression code length based metrics for sentence alignment between Chinese and English [13].\nThe purpose of the preliminary experiments described in this section were to determine how effective priming of the PPM models was for compressing Arabic sentences, and also how effective the primed PPM compression method as a sentence matching metric. A key requirement of using the CR metric is that the compression code lengths in the two different languages should be the same for sentences that are co-translations of each other. The intuition is that if the sentences are satisfactory co-translations, then they should convey exactly the same amount of information. Since compression code length is an effective method for measuring information (see [20] for several references), then we would expect that roughly 50% of the compression code lengths of sentences in one language to be longer than compression code lengths of sentences in the other language, and vice versa.\nClearly, this correlation would not be expected for sentence lengths. It is quite common that English sentences are shorter than their co-translation counterparts other languages (although this is not the case when compared with the Arabic sentences as reported below in this section). However, this should not be the case for compression code lengths if our intuition about the correlation between information is correct. If we find that the compression code lengths do not correlate, then the reason for this is more likely to be as a result of a less effective compression algorithm being used for one language resulting in a less accurate estimate of the information contained in the sentence.\nIn a preliminary experiment, 10 sample sentence pairs in Arabic and English were randomly chosen from Corpus A. The 10 sample sentence pairs that we used are shown in Table 5.\nThe results of compressing these sentences using the PPM compression scheme are shown in Table 6. The table lists the number of bytes that various variants of PPM produced as compressed output. For example, for sentence pair with id 1 (i.e. the first in Table 5), the WOT variant required 69 bytes to compress the Arabic sentence, compared to 69 bytes to compress the English sentence. In contrast, the sentence lengths are very different \u2013 the Arabic sentence is 59 characters (bytes) long compared to 95 characters for the English sentence.\nOrder 5 PPMD (as described above in Section 3.1) was used for these experiments. The WOT variant is for PPM without priming (i.e. no training). The WT variant is for PPM with priming. In this case, the PPM model was trained on the Brown Corpus prior to compressing the English text, whereas the PPM model was trained on the CCA Corpus prior to compressing the Arabic text. The WTPP variant used the same priming approach as for the WT variant, but also adopted\na pre-processing algorithm to convert the UTF-8 encoded Arabic text into a number string before it was compressed by the PPMD5 compressor. This approach is described in detail in [1]. This leads to significantly better compression as a result for Arabic text and therefore leads to a better estimate of the information contained in the Arabic sentence.\nFrom the table, we can see there is a clear mis-match as expected between the Arabic and English sentence lengths. This provides clear evidence that metrics based on techniques well founded in information theory (as is the case for compression code length based metrics) have merit since they lead to better correlation.\nThe WOT variant does a surprisingly good job of matching the sentences with the Arabic bytes size being close to the English bytes size. However, again in most cases, the number of bytes of the compressed English output is greater than the number of bytes of the compressed Arabic output. For the WT variant, the opposite story is now the case \u2013 the compressed Arabic bytes is now usually greater the compressed English bytes. This indicates that the compression method being used for the Arabic text is probably not as well tuned as is the case for the English scheme (since the use of PPM for compressing English text has been fine-tuned over many years [20]). This problem was addressed in recent research on the compression of Arabic text [1] where it was found that using pre-processing techniques significantly improves PPM-based compression for Arabic in many cases by over 25%. When we apply these techniques (i.e. this is what we call the WTPP variant), then a more desired set of mixed results is achieved (where code lengths are sometimes greater for Arabic and sometimes greater for English).\nIn order to investigate this further and to confirm whether we have a compression method for Arabic text that produces compression code lengths that correlate well with those produced by the compression method being used for English text, we conducted further experiments using the WTPP PPM variant on the whole of the test Corpus A and in each of the categories as well. The results are listed in Table 7. The percentage of sentence pairs for which the Arabic sentence lengths are greater than for their English counterparts is shown in column 2. For example, for the Books category, it was found that only 8.55 % of the Arabic sentences are longer. In contrast, the results in the third column, which lists the percentage of sentence pairs for which the Arabic compression code lengths are greater than for their English counterparts, show that the comparison is more even, with most results being around the 50% mark, except for the\nCrimes category with 62.48%. Due to this result, the nature of the sentences in this category should be investigated further.\nThese results provide reassuring evidence that the compression methods we have adopted produce the desired (and necessary) correlated data for the subsequent experiments we conducted that are described in the next section."}, {"heading": "4.3. Analysing the quality of translations in the test corpora", "text": "Experiments were performed using the ground truth data in Corpus B to determine the best thresholds and combinations for the CR and SLR metrics in order to accurately filter out the unsatisfactory translations. For the CR calculations listed there, the WTPP PPMD5 variant (as stated, which was primed on the CCA corpus) was used to compress the Arabic text sentences, whereas standard PPMD5 primed on the Brown corpus was used for the English text sentences.\nVarious thresholds were applied firstly using SLR by itself, secondly using CR by itself, and thirdly by applying the same threshold to both SLR and CR together. If the calculated distance metric exceeded the threshold value(s), then the translation sentence pair was judged to be unsatisfactory, otherwise it was judged to be satisfactory.\nThe results of how accurate the filtering process was against the ground truth data in test Corpus B are shown in Table 8. The table shows the threshold values that were used for both the SLR and CR calculations in the leftmost column. The accuracy results are then provided in the subsequent columns. (This is the percentage of correct classifications made by the SLR, CR or SLR&CR metrics where a correct classification is made when the metric at a specific threshold judges the sentence pair to be satisfactory or unsatisfactory and this matches the ground truth judgment). The results are split for the satisfactory and unsatisfactory sentence pairs, with the average results provided in the final columns.\nTable 8 shows, for example, that SLR with a threshold of 2.5 or higher is able to accurately classify 100% of the satisfactory translations whereas the threshold where this occurs for CR is at 2.25. For the unsatisfactory translations, 100% of these will be identified using SLR if the\nthreshold is set at 1.5 or less, whereas the highest accuracy for CR is 97.45% when the threshold is set as low as 1.25 (meaning most sentence pairs will be rejected). The only calculation that results in an average accuracy of 100% for all sentence pairs (both satisfactory and unsatisfactory) occurs when both SLR and CR are combined together with a threshold of 2.5. Figure 1 shows the tendencies of the classification of the satisfactory translations and unsatisfactory translations for test Corpus B using different threshold values.\nA further experiment was conducted to investigate whether different threshold values are more effective when using the combined SLR&CR technique. Table 9 displays the accuracy results matrix of the experiments on the overall accuracy averages on the same 10000 satisfactory translations and 2000 unsatisfactory translations in test Corpus B used in the previous experiment. In the table, the SLR threshold value is shown across the top row, and the CR threshold value is shown down the left column, both ranging from 1.25 up to 3.50. The table shows that 100% accuracy is achieved using threshold values 2.50 and higher for SLR combined with 2.25 and higher for CR.\nAnother experiment was devised to determine how much of the larger test Corpus A would be classified as satisfactory or unsatisfactory using various CR threshold values (from 1.25 to 3.50) when the SLR threshold value was set at 2.5. The results of this experiment are shown in Table 10. The table shows the number classified in each category (in the columns labelled \u201cAmount\u201d) and the corresponding percentages. For example, a threshold value of 2.50 for both SLR and CR results in 8.18% of test Corpus A being labelled unsatisfactory (and therefore candidates for being removed from the corpus).\nTable 10: Percentages of satisfactory and unsatisfactory translations for test Corpus A when the SLR threshold is set at 2.5.\nThreshold CR\nSatisfactory Translations Unsatisfactory Translations Amount Percentage (%) Amount Percentage (%)\n1.25 1313387 72.14 507234 27.86 1.50 1559275 85.65 261346 14.35 1.75 1626973 89.36 193648 10.64 2.00 1650374 90.65 170247 9.35 2.25 1665709 91.49 154912 8.51 2.50 1671768 91.82 148853 8.18 2.75 1674677 91.98 145944 8.02 3.00 1675700 92.04 144921 7.96 3.25 1676166 92.07 144455 7.93 3.50 1676311 92.07 144310 7.93\nFigures 2, 3, 4 and 5 show correlations for the sentence length and code length metrics for test Corpus A. Figures 2 and 3 illustrate the sentence lengths and code lengths of Arabic and\nEnglish sentences classified as unsatisfactory for the test Corpus A and show an obvious split in the plot due to 1:2 and 2:1 type mismatches.\nIn contrast, Figures 4 and 5 illustrate sentence lengths and code lengths of Arabic and English for the translations classified as satisfactory for test Corpus A and show a strong correlation between both sentence lengths and compression code lengths.\nFor defining what is a satisfactory translation in this case, it was decided if the values of SLR were less than 2.5 and CR less than 2.25 for a pair of translation sentences, then it is classified as a satisfactory translation, otherwise it is classified as an unsatisfactory translation as per Figures 2 and 3.\nThe unsatisfactory translations might be caused by errors in alignment between Arabic and English sentences which may include non-literal translations and therefore result in significant differences between the sentence pair. English sentences containing websites or abbreviations such as USA (United States of America), UNCTAD (United Nations Conference on Trade and Development Abbreviation) might also lead to mistranslations [10].\nThe flowchart in Figure 6 shows how the new hybrid metric was applied in this manner. If the CR threshold of 2.25 was exceeded, or the SLR threshold of 2.5 was exceeded, then the sentence pair would be rejected (i.e. classified as unsatisfactory), otherwise the translation was accepted (i.e. classified as satisfactory).\n5. \u00a0CONCLUSION \u00a0 Verification is an essential step in order to ensure a high quality corpus. In this paper, we have described a new method to check how well the sentences match in a parallel corpus. The method is based on the combination of two distance metrics, sentence length ratio (SLR) and compression code length ratio (CR). A threshold mechanism can be used to filter out unsatisfactory translations when either the SLR or CR values have been exceeded. Experiments with a small sample of sentence pairs from a test Arabic-English corpus containing ground truth judgments, which were manually judged to be satisfactory or unsatisfactory translations, show that a combination of both SLR and CR distance metrics performs better at classification than using a single distance metric by itself.\nThere is also other important verification tasks that are often overlooked not described here that need to be done. For example, a single check on document sizes is crucial (e.g. ensuring no zero byte documents, and removing unusually large documents if appropriate). Checking for selfplagiarism (ensuring that documents do not contain strings repeated in other documents) is also essential (especially for corpora containing news stories since it is a common practice for these types of documents to contain material copied from other news stories). We have found that the compression code length metric described here is also effective at classifying the quality of translation not just at the sentence level, but also at the document, paragraph and clause levels, and these should also be checked when verifying a parallel corpus."}], "references": [{"title": "Adaptive Models of Arabic Text", "author": ["K. Alhawiti"], "venue": "PhD Dissertation,", "citeRegEx": "1", "shortCiteRegEx": "1", "year": 2014}, {"title": "Estimating and Comparing Entropy across Written Natural Languages Using PPM Compression", "author": ["H. Behr F", "V. Fossum", "M. Mitzenmacher", "D. Xiao"], "venue": "Proceedings of Data Compression Conference,", "citeRegEx": "2", "shortCiteRegEx": "2", "year": 2003}, {"title": "The Mathematics of Machine Translation: Parameter Estimation", "author": ["P. Brown", "S. Della Pieta", "V. Della Pieta", "R. Mercer"], "venue": "Computational Linguistics,", "citeRegEx": "3", "shortCiteRegEx": "3", "year": 1993}, {"title": "Data Compression Using Adaptive Coding and Partial String Matching", "author": ["J.G. Cleary", "I.H. Witten"], "venue": "IEEE Transactions on Communications,", "citeRegEx": "4", "shortCiteRegEx": "4", "year": 1984}, {"title": "Assisting Requirement Formalization by Means of Natural Language Translation", "author": ["A. Fantechi", "S. Gnesi", "M. Carenini", "M. Vanocchi", "P. Moreschini"], "venue": "Formal Methods in System Design,", "citeRegEx": "5", "shortCiteRegEx": "5", "year": 1994}, {"title": "A Program for Aligning Sentences in Bilingual Corpora", "author": ["W.A. Gale"], "venue": "Annual Meeting,", "citeRegEx": "6", "shortCiteRegEx": "6", "year": 1993}, {"title": "High-performance Bilingual Text Alignment Using Statistical and Dictionary Information", "author": ["M. Haruno", "T. Yamazaki"], "venue": "Proceedings of the 34th Annual Meeting of Association for Computational Linguistics,", "citeRegEx": "7", "shortCiteRegEx": "7", "year": 1996}, {"title": "The Encyclopaedia of Languages and Linguistics", "author": ["W.J. Hutchins"], "venue": null, "citeRegEx": "8", "shortCiteRegEx": "8", "year": 1994}, {"title": "Text-translation Alignment", "author": ["M. Kay", "M. R\u00f6scheisen"], "venue": "Computational Linguistics,", "citeRegEx": "9", "shortCiteRegEx": "9", "year": 1993}, {"title": "Automatic Filtering of Bilingual Corpora for Statistical Machine Translation", "author": ["S. Khadivi", "H. Ney"], "venue": "Natural Language Processing and Information Systems,", "citeRegEx": "10", "shortCiteRegEx": "10", "year": 2005}, {"title": "Improving English-Russian Sentence Alignment through POS Tagging and Damerau-Levenshtein Distance", "author": ["A. Kutuzov"], "venue": "Association for Computational Linguistics,", "citeRegEx": "11", "shortCiteRegEx": "11", "year": 2013}, {"title": "Experiments with Compression-based Methods for English-Chinese Sentence Alignment", "author": ["W. Liu", "Z. Chang", "W. Teahan"], "venue": "2nd International Conference on Statistical Language and Speech Processing,", "citeRegEx": "13", "shortCiteRegEx": "13", "year": 2014}, {"title": "Models of Translational Equivalence among Words", "author": ["I.D. Melamed"], "venue": "Computational Linguistics,", "citeRegEx": "14", "shortCiteRegEx": "14", "year": 2000}, {"title": "Using Twitter to Collect a Multi-Dialectal Corpus of Arabic", "author": ["H. Mubarak", "K. Darwish", "N. Adly"], "venue": "EMNLP 2014 Workshop on Arabic Natural Language Processing", "citeRegEx": "15", "shortCiteRegEx": "15", "year": 2014}, {"title": "High-Precision Sentence Alignment by Bootstrapping from Wood Standard Annotations", "author": ["\u00c9. M\u00fajdricza-Maydt", "H. K\u00f6rkel-Qu", "S. Riezler", "S. Pad\u00f3"], "venue": "The Prague Bulletin of Mathematical Linguistics,", "citeRegEx": "16", "shortCiteRegEx": "16", "year": 2013}, {"title": "Automatic Alignment in Corpora", "author": ["H. Papageorgiou", "L. Cranias", "S. Piperidis"], "venue": "Proceedings of 32nd Annual Meeting of Association of Computational Linguistic,", "citeRegEx": "17", "shortCiteRegEx": "17", "year": 1994}, {"title": "A Mathematical Theory of Communication", "author": ["C.E. Shannon"], "venue": "Bell System Technical Journal,", "citeRegEx": "18", "shortCiteRegEx": "18", "year": 1948}, {"title": "Using Cognates to Align Sentences in Bilingual Corpora", "author": ["M. Simard", "G.F. Foster", "P. Isabelle"], "venue": "Proceedings of the Fourth International Conference on Theoretical and Methodological Issues in Machine Translation (TMI),", "citeRegEx": "19", "shortCiteRegEx": "19", "year": 1992}, {"title": "Modelling English Text", "author": ["W. Teahan"], "venue": "PhD Dissertation, University of Waikato,", "citeRegEx": "20", "shortCiteRegEx": "20", "year": 1998}, {"title": "Aligning a Parallel English-Chinese Corpus Statistically with Lexical Criteria", "author": ["D. Wu"], "venue": "Annual Meeting,", "citeRegEx": "21", "shortCiteRegEx": "21", "year": 1994}, {"title": "Revisiting Sentence Alignment Algorithms for Alignment Visualization and Evaluation", "author": ["Q. Yu", "A. Max", "F. Yvon"], "venue": "LREC Workshop,", "citeRegEx": "22", "shortCiteRegEx": "22", "year": 2012}], "referenceMentions": [{"referenceID": 4, "context": "The history of translation between natural languages can be traced back to the beginning of human culture, with its major mission being to expand the informativeness of one language, decrease the misunderstanding in dialogue, and even contribute to the growth of cultures [5].", "startOffset": 272, "endOffset": 275}, {"referenceID": 7, "context": "Early pioneering machine translation systems were developed in the 1950s and 1960s [8].", "startOffset": 83, "endOffset": 86}, {"referenceID": 13, "context": "Arabic is the primary language for over 380 million native Arabic speakers worldwide [15].", "startOffset": 85, "endOffset": 89}, {"referenceID": 11, "context": "for a parallel bilingual corpus [13].", "startOffset": 32, "endOffset": 36}, {"referenceID": 5, "context": "Gale and Church [6] aligned parallel sentences in English-French and English-German corpora based on a sentence length metric that required calculating the character length of all sentences.", "startOffset": 16, "endOffset": 19}, {"referenceID": 5, "context": "Gale and Church\u2019s [6] overall accuracies were 97% for English-German and 94% for English-French.", "startOffset": 18, "endOffset": 21}, {"referenceID": 19, "context": "Wu [21] aligned English-Chinese corpora by using sentence length values and reached an accuracy of 95%.", "startOffset": 3, "endOffset": 7}, {"referenceID": 8, "context": "Kay and R\u00f6scheisen [9] developed a program that combined word and sentence alignment and calculated the word probabilities by using the dice co-efficient.", "startOffset": 19, "endOffset": 22}, {"referenceID": 6, "context": "Haruno and Yamazaki [7] used a similar method plus a bilingual dictionary for aligning English-Japanese corpora.", "startOffset": 20, "endOffset": 23}, {"referenceID": 15, "context": "Papageorgiou, Cranias, and Piperidis [17] used the sentence alignment metric based on the highest matching part of speech tags and matches restricted to nouns, adjectives and verbs, and reached 99% accuracy.", "startOffset": 37, "endOffset": 41}, {"referenceID": 17, "context": "Simard, Foster and Isabelle [19] used cognate-based approaches and found that sentence length difference worked well for sentence alignment.", "startOffset": 28, "endOffset": 32}, {"referenceID": 12, "context": "However, Melamed [14] pointed out that because results were only reported for a relatively easy bilingual text, comparing two algorithms\u2019 performances in the literature is difficult.", "startOffset": 17, "endOffset": 21}, {"referenceID": 2, "context": "[3] calculated sentence length by using the number of words instead of the number of bytes or characters, which generated similar accuracies between 96% and 97%.", "startOffset": 0, "endOffset": 3}, {"referenceID": 20, "context": "In the last decade, there have been few new proposals for sentence alignment for parallel bilingual corpora [22].", "startOffset": 108, "endOffset": 112}, {"referenceID": 10, "context": "One disadvantage of existing sentence alignment algorithms is that it is less effective when linking corresponding sentences if they are one-to-many or many-to-one mutual translations [11].", "startOffset": 184, "endOffset": 188}, {"referenceID": 1, "context": "on natural languages indicates that all natural languages have similar cross entropies [2].", "startOffset": 87, "endOffset": 90}, {"referenceID": 16, "context": "According to Shannon\u2019s information theory [18], a derived hypothesis from this observation will be that all natural languages can be encoded into the same length of bit strings for the same information if redundant bits are excluded.", "startOffset": 42, "endOffset": 46}, {"referenceID": 11, "context": "Our work with using compression code length metrics for sentence alignment with ChineseEnglish corpora have shown they can be very effective [13].", "startOffset": 141, "endOffset": 145}, {"referenceID": 1, "context": "documents, paragraphs, sentences, clauses, phrases) should have similar code lengths [2].", "startOffset": 85, "endOffset": 88}, {"referenceID": 3, "context": "The Prediction by Partial Matching (PPM) compression scheme, first proposed by Cleary and Witten in 1984 [4], predicts the next symbol or character from a fixed order context.", "startOffset": 105, "endOffset": 108}, {"referenceID": 0, "context": "For both Arabic and English text [1, 9], experiments have shown that order 5 models (using fixed order contexts of length 5) perform best at compressing the text using the PPMD variant of the algorithm developed by Howard in 1993 based on the PPMC variant devised by Moffat [20].", "startOffset": 33, "endOffset": 39}, {"referenceID": 8, "context": "For both Arabic and English text [1, 9], experiments have shown that order 5 models (using fixed order contexts of length 5) perform best at compressing the text using the PPMD variant of the algorithm developed by Howard in 1993 based on the PPMC variant devised by Moffat [20].", "startOffset": 33, "endOffset": 39}, {"referenceID": 18, "context": "For both Arabic and English text [1, 9], experiments have shown that order 5 models (using fixed order contexts of length 5) perform best at compressing the text using the PPMD variant of the algorithm developed by Howard in 1993 based on the PPMC variant devised by Moffat [20].", "startOffset": 274, "endOffset": 278}, {"referenceID": 11, "context": "[13] have shown that CR is a more effective distance metric for sentence alignment of Chinese-English parallel corpora than a distance metric based on sentence length.", "startOffset": 0, "endOffset": 4}, {"referenceID": 9, "context": "Consequently, researchers have devised various methods to filter noisy sentences from parallel corpora [10].", "startOffset": 103, "endOffset": 107}, {"referenceID": 14, "context": "However, for our experiments discussed in Section 4, we have found a new technique based on a combination of the compression Code Length Ratio (CR) described above and the standard Sentence Length Ratio (SLR) described by M\u00fajdricza-Maydt [16] is the most effective for Arabic-English sentence pairs in order to achieve a high-quality corpus as a result.", "startOffset": 238, "endOffset": 242}, {"referenceID": 11, "context": "This approach has been found to be very effective, for example, when using compression code length based metrics for sentence alignment between Chinese and English [13].", "startOffset": 164, "endOffset": 168}, {"referenceID": 18, "context": "Since compression code length is an effective method for measuring information (see [20] for several references), then we would expect that roughly 50% of the compression code lengths of sentences in one language to be longer than compression code lengths of sentences in the other language, and vice versa.", "startOffset": 84, "endOffset": 88}, {"referenceID": 0, "context": "This approach is described in detail in [1].", "startOffset": 40, "endOffset": 43}, {"referenceID": 18, "context": "This indicates that the compression method being used for the Arabic text is probably not as well tuned as is the case for the English scheme (since the use of PPM for compressing English text has been fine-tuned over many years [20]).", "startOffset": 229, "endOffset": 233}, {"referenceID": 0, "context": "This problem was addressed in recent research on the compression of Arabic text [1] where it was found that using pre-processing techniques significantly improves PPM-based compression for Arabic in many cases by over 25%.", "startOffset": 80, "endOffset": 83}, {"referenceID": 9, "context": "English sentences containing websites or abbreviations such as USA (United States of America), UNCTAD (United Nations Conference on Trade and Development Abbreviation) might also lead to mistranslations [10].", "startOffset": 203, "endOffset": 207}], "year": 2015, "abstractText": "This paper discusses a new metric that has been applied to verify the quality in translation between sentence pairs in parallel corpora of Arabic-English. This metric combines two techniques, one based on sentence length and the other based on compression code length. Experiments on sample test parallel Arabic-English corpora indicate the combination of these two techniques improves accuracy of the identification of satisfactory and unsatisfactory sentence pairs compared to sentence length and compression code length alone. The new method proposed in this research is effective at filtering noise and reducing mis-translations resulting in greatly improved quality.", "creator": "Word"}}}