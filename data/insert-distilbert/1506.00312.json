{"id": "1506.00312", "review": {"conference": "NIPS", "VERSION": "v1", "DATE_OF_SUBMISSION": "1-Jun-2015", "title": "Copeland Dueling Bandits", "abstract": "making a balanced version of over the dueling bandit problem \" is addressed in which a condorcet winner may not exist. two algorithms are both proposed that instead seek to minimize regret observed with respect to the copeland winner, which, unlike fighting the condorcet winner, is guaranteed to exist. the first, copeland confidence bound ( ccb ), really is designed for small numbers of arms, while defeating the second, scalable copeland bandits ( scb ), specifically works better for large - scale problems. we provide theoretical results bounding the maximum regret accumulated measured by ccb and scb, often both substantially improving existing results. such existing results commonly either offer bounds of the form $ o ( k \\ n log t ) $ but require restrictive assumptions, or offer bounds of the form $ s o ( k ^ 2 \\ log t ) $ without problems requiring such assumptions. our results offer the best of both stable worlds : $ o ( k \\ log t ) $ bounds without restrictive assumptions.", "histories": [["v1", "Mon, 1 Jun 2015 00:44:37 GMT  (2140kb,D)", "http://arxiv.org/abs/1506.00312v1", "33 pages, 8 figures"]], "COMMENTS": "33 pages, 8 figures", "reviews": [], "SUBJECTS": "cs.LG", "authors": ["masrour zoghi", "zohar s karnin", "shimon whiteson", "maarten de rijke"], "accepted": true, "id": "1506.00312"}, "pdf": {"name": "1506.00312.pdf", "metadata": {"source": "CRF", "title": "Copeland Dueling Bandits", "authors": ["Masrour Zoghi", "Zohar Karnin", "Shimon Whiteson", "Maarten de Rijke"], "emails": [], "sections": [{"heading": "1 Introduction", "text": "The dueling bandit problem [1] arises naturally in domains where feedback is more reliable when given as a pairwise preference (e.g., when it is provided by a human) and specifying real-valued feedback instead would be arbitrary or inefficient. Examples include ranker evaluation [2\u20134] in information retrieval, ad placement and recommender systems. As with other preference learning problems [5], feedback consists of a pairwise preference between a selected pair of arms, instead of scalar reward for a single selected arm, as in the K-armed bandit problem.\nMost existing algorithms for the dueling bandit problem require the existence of a Condorcet winner, which is an arm that beats every other arm with probability greater than 0.5. If such algorithms are applied when no Condorcet winner exists, no decision may be reached even after many comparisons. This is a key weakness limiting their practical applicability. For example, in industrial ranker evaluation [6], when many rankers must be compared, each comparison corresponds to a costly live experiment and thus the potential for failure if no Condorcet winner exists is unacceptable [7].\nThis risk is not merely theoretical. On the contrary, recent experiments on K-armed dueling bandit problems based on information retrieval datasets show that dueling bandit problems without Condorcet winners arise regularly in practice [8, Figure 1]. In addition, we show in Appendix C.1 that there are realistic situations in ranker evaluation in information retrieval in which the probability that the Condorcet assumption holds decreases rapidly as the number of arms grows. Since the K-armed dueling bandit methods mentioned above do not provide regret bounds in the absence of a Condorcet winner, applying them remains risky in practice. Indeed, we demonstrate empirically the danger of applying such algorithms to dueling bandit problems that do not have a Condorcet winner (cf. Appendix A).\nThe non-existence of the Condorcet winner has been investigated extensively in social choice theory, where numerous definitions have been proposed, without a clear contender for the most suitable resolution [9]. In the dueling bandit context, a few methods have been proposed to address this issue, e.g., SAVAGE [10], PBR [11] and RankEl [12], which use some of the notions proposed by social choice theorists, such as the Copeland score or the Borda score to measure the quality of each arm, hence determining what constitutes the best arm (or more generally the top-k arms). In this paper, we focus on finding Copeland winners, which are arms that beat the greatest number of other arms, because it is a natural, conceptually simple extension of the Condorcet winner.\nar X\niv :1\n50 6.\n00 31\n2v 1\n[ cs\n.L G\n] 1\nJ un\n2 01\nUnfortunately, the methods mentioned above come with bounds of the form O(K2 log T ). In this paper, we propose two new K-armed dueling bandit algorithms for the Copeland setting with significantly improved bounds.\nThe first algorithm, called Copeland Confidence Bound (CCB), is inspired by the recently proposed Relative Upper Confidence Bound method [13], but modified and extended to address the unique challenges that arise when no Condorcet winner exists. We prove anytime high-probability and expected regret bounds for CCB of the form O(K2 + K log T ). Furthermore, the denominator of this result has much better dependence on the \u201cgaps\u201d arising from the dueling bandit problem than most existing results (cf. Sections 3 and 5.1 for the details).\nHowever, a remaining weakness of CCB is the additiveO(K2) term in its regret bounds. In applications with large K, this term can dominate for any experiment of reasonable duration. For example, at Bing, 200 experiments are run concurrently on any given day [14], in which case the duration of the experiment needs to be longer than the age of the universe in nanoseconds before K log T becomes significant in comparison to K2.\nOur second algorithm, called Scalable Copeland Bandits (SCB), addresses this weakness by eliminating the O(K2) term, achieving an expected regret bound of the form O(K logK log T ). The price of SCB\u2019s tighter regret bounds is that, when two suboptimal arms are close to evenly matched, it may waste comparisons trying to determine which one wins in expectation. By contrast, CCB can identify that this determination is unnecessary, yielding better performance unless there are very many arms. CCB and SCB are thus complementary algorithms for finding Copeland winners.\nOur main contributions are as follows: 1. We propose two new algorithms that address the dueling bandit problem in the absence of a Condorcet winner, one\ndesigned for problems with small numbers of arms and the other scaling well with the number of arms. 2. We provide regret bounds that bridge the gap between two groups of results: those of the form O(K log T ) that\nmake the Condorcet assumption, and those of the form O(K2 log T ) that do not make the Condorcet assumption. Our bounds are similar to those of the former but are as broadly applicable as the latter. Furthermore, the result for CCB has substantially better dependence on the gaps than the second group of results. In addition, Appendix A presents the results of an empirical evaluation of CCB and SCB using a real-life problem\narising from information retrieval (IR). The experimental results mirror the theoretical ones."}, {"heading": "2 Problem Setting", "text": "Let K \u2265 2. The K-armed dueling bandit problem [1] is a modification of the K-armed bandit problem [15]. The latter considers K arms {a1, . . . , aK} and at each time-step, an arm ai can be pulled, generating a reward drawn from an unknown stationary distribution with expected value \u00b5i. The K-armed dueling bandit problem is a variation in which, instead of pulling a single arm, we choose a pair (ai, aj) and receive one of them as the better choice, with the probability of ai being picked equal to an unknown constant pij and that of aj being picked equal to pji = 1\u2212 pij . A problem instance is fully specified by a preference matrix P = [pij ], whose ij entry is equal to pij .\nMost previous work assumes the existence of a Condorcet winner [10]: an arm, which without loss of generality we label a1, such that p1i > 12 for all i > 1. In such work, regret is defined relative to the Condorcet winner. However, Condorcet winners do not always exist [8, 13]. In this paper, we consider a formulation of the problem that does not assume the existence of a Condorcet winner.\nInstead, we consider the Copeland dueling bandit problem, which defines regret with respect to a Copeland winner, which is an arm with maximal Copeland score. The Copeland score of ai, denoted Cpld(ai), is the number of arms aj for which pij > 0.5. The normalized Copeland score, denoted cpld(ai), is simply Cpld(ai) K\u22121 . Without loss of generality, we assume that a1, . . . , aC are the Copeland winners, where C is the number of Copeland winners. We define regret as follows:\nDefinition 1. The regret incurred by comparing ai and aj is 2cpld(a1)\u2212 cpld(ai)\u2212 cpld(aj). Remark 2. Since our results (see \u00a75) establish bounds on the number of queries to non-Copeland winners, they can also be applied to other notions of regret."}, {"heading": "3 Related Work", "text": "Numerous methods have been proposed for the K-armed dueling bandit problem, including Interleaved Filter [1], Beat the Mean [3], Relative Confidence Sampling [8], Relative Upper Confidence Bound (RUCB) [13], Doubler and\nMultiSBM [16], and mergeRUCB [17], all of which require the existence of a Condorcet winner, and often come with bounds of the form O(K log T ). However, as observed in [13] and Appendix C.1, real-world problems do not always have Condorcet winners.\nThere is another group of algorithms that do not assume the existence of a Condorcet winner, but have bounds of the form O(K2 log T ) in the Copeland setting: Sensitivity Analysis of VAriables for Generic Exploration (SAVAGE) [10], Preference-Based Racing (PBR) [11] and Rank Elicitation (RankEl) [12]. All three of these algorithms are designed to solve more general or more difficult problems, and they solve the Copeland dueling bandit problem as a special case.\nThis work bridges the gap between these two groups by providing algorithms that are as broadly applicable as the second group but have regret bounds comparable to those of the first group. Furthermore, in the case of the results for CCB, rather than depending on the smallest gap between arms ai and aj , \u2206min :=mini>j |pij \u2212 0.5|, as in the case of many results in the Copeland setting,1 our regret bounds depend on a larger quantity that results in a substantially lower upper-bound, cf. \u00a75.1.\nIn addition to the above, bounds have been proven for other notions of winners, including Borda [10\u201312], Random Walk [11, 18], and very recently von Neumann [19]. The dichotomy discussed also persists in the case of these results, which either rely on restrictive assumptions to obtain a linear dependence on K or are more broadly applicable, at the expense of a quadratic dependence on K. A natural question for future work is whether the improvements achieved in this paper in the case of the Copeland winner can be obtained in the case of these other notions as well.\nA related setting is that of partial monitoring games [20]. While a dueling bandit problem can be modeled as a partial monitoring problem, doing so yields weaker results. In [21], the authors present problem-dependent bounds from which a regret bound of the formO(K2 log T ) can be deduced for the dueling bandit problem, whereas our work achieves a linear dependence in K."}, {"heading": "4 Method", "text": "We now present two algorithms that find Copeland winners."}, {"heading": "4.1 Copeland Confidence Bound (CCB)", "text": "CCB (see Algorithm 1) is based on the principle of optimism followed by pessimism: it maintains optimistic and pessimistic estimates of the preference matrix, i.e., matrices U and L (Line 6). It uses U to choose an optimistic Copeland winner ac (Lines 7\u20139 and 11\u201312), i.e., an arm that has some chance of being a Copeland winner. Then, it uses L to choose an opponent ad (Line 13), i.e., an arm deemed likely to discredit the hypothesis that ac is indeed a Copeland winner.\nMore precisely, an optimistic estimate of the Copeland score of each arm ai is calculated using U (Line 7), and ac is selected from the set of top scorers, with preference given to those in a shortlist, Bt (Line 11). Theses are arms that have, roughly speaking, been optimistic winners throughout history. To maintain Bt, as soon as CCB discovers that the optimistic Copeland score of an arm is lower than the pessimistic Copeland score of another arm, it purges the former from Bt (Line 9B).\nThe mechanism for choosing the opponent ad is as follows. The matrices U and L define a confidence interval around pij for each i and j. In relation to ac, there are three types of arms: (1) arms aj s.t. the confidence region of pcj is strictly above 0.5, (2) arms aj s.t. the confidence region of pcj is strictly below 0.5, and (3) arms aj s.t. the confidence region of pcj contains 0.5. Note that an arm of type (1) or (2) at time t\u2032 may become an arm of type (3) at time t > t\u2032 even without queries to the corresponding pair as the size of the confidence intervals increases as time goes on.\nCCB always chooses ad from arms of type (3) because comparing ac and a type (3) arm is most informative about the Copeland score of ac. Among arms of type (3), CCB favors those that have confidently beaten arm ac in the past (Line 13), i.e., arms that in some round t\u2032 < t were of type (2). Such arms are maintained in a shortlist of \u201cformidable\u201d opponents (Bit) that are likely to confirm that ai is not a Copeland winner; these arms are favored when selecting ad (Lines 10 and 13).\nThe sets Bit are what speeds up the elimination of non-Copeland winners, enabling regret bounds that scale asymptotically with K rather than K2. Specifically, for a non-Copeland winner ai, the set Bit will eventually contain LC+1\n1Cf. [10, Equation 9 in \u00a74.1.1] and [11, Theorem 1].\nAlgorithm 1 Copeland Confidence Bound Input: A Copeland dueling bandit problem and an exploration parameter \u03b1 > 12 .\n1: W = [wij ]\u2190 0K\u00d7K // 2D array of wins: wij is the number of times ai beat aj 2: B1 = {a1, . . . , aK} // potential best arms 3: Bi1 = \u2205 for each i = 1, . . . ,K // potential to beat ai 4: LC = K // estimated max losses of a Copeland winner 5: for t = 1, 2, . . . do 6: U := [uij ]= W W+WT + \u221a \u03b1 ln t W+WT and L := [lij ]= WW+WT \u2212 \u221a \u03b1 ln t W+WT\n, with uii= lii= 12 , \u2200i 7: Cpld(ai) = # { k |uik \u2265 12 , k 6= i } and Cpld(ai) = # { k | lik \u2265 12 , k 6= i } 8: Ct = {ai |Cpld(ai) = maxj Cpld(aj)} 9: Set Bt \u2190 Bt\u22121 and Bit \u2190 Bit\u22121 and update as follows:\nA. Reset disproven hypotheses: If for any i and aj \u2208 Bit we have lij > 0.5, reset Bt, LC and Bkt for all k (i.e. set them to their original values as in Lines 2\u20134 above). B. Remove non-Copeland winners: For each ai \u2208 Bt, if Cpld(ai) < Cpld(aj) holds for any j, set Bt \u2190 Bt \\ {ai}, and if |Bit| 6= LC + 1, then set Bit \u2190 {ak|uik < 0.5}. However, if Bt = \u2205, reset Bt, LC and Bkt for all k. C. Add Copeland winners: For any ai \u2208 Ct with Cpld(ai) = Cpld(ai), set Bt \u2190 Bt \u222a {ai}, Bit \u2190 \u2205 and LC \u2190 K \u2212 1 \u2212 Cpld(ai). For each j 6= i, if we have |Bjt | < LC + 1, set Bjt \u2190\u2205, and if |Bjt |> LC +1, randomly choose LC+1 elements of Bjt and remove the rest. 10: With probability 1/4, sample (c, d) uniformly from the set {(i, j) | aj \u2208 Bit and 0.5 \u2208 [lij , uij ]} (if it is nonempty) and skip to Line 14. 11: If Bt \u2229 Ct 6= \u2205, then with probability 2/3, set Ct \u2190 Bt \u2229 Ct. 12: Sample ac from Ct uniformly at random. 13: With probability 1/2, choose the set Bi to be either Bit or {a1, . . . , aK} and then set d \u2190 arg max{j\u2208Bi | ljc\u22640.5} ujc. If there is a tie, d is not allowed to be equal to c. 14: Compare arms ac and ad and increment wcd or wdc depending on which arm wins. 15: end for\nstrong opponents for ai (Line 4.1C), where LC is the number of losses of each Copeland winner. Since LC is typically small (cf.Appendix C.3), asymptotically this leads to a bound of only O(log T ) on the number of time-steps when ai is chosen as an optimistic Copeland winner, instead of a bound of O(K log T ), which a more naive algorithm would produce."}, {"heading": "4.2 Scalable Copeland Bandits (SCB)", "text": "SCB is designed to handle dueling bandit problems with large numbers of arms. It is based on an arm-identification algorithm, described in Algorithm 2, designed for a PAC setting, i.e., it finds an -Copeland winner with probability 1 \u2212 \u03b4, although we are primarily interested in the case with = 0. Algorithm 2 relies on a reduction to a K-armed bandit problem where we have direct access to a noisy version of the Copeland score; the process of estimating the score of arm ai consists of comparing ai to a random arm aj until it becomes clear which arm beats the other. The sample complexity bound, which yields the regret bound, is achieved by combining a bound for K-armed bandits and\nAlgorithm 2 Approximate Copeland Bandit Solver Input: A Copeland dueling bandit problem with preference matrix P = [pij ], failure probability \u03b4 > 0, and approxi-\nmation parameter > 0. Also, define [K] := {1, . . . ,K}. 1: Define a random variable reward(i) for i \u2208 [K] as the following procedure: pick a uniformly random j 6= i\nfrom [K]; query the pair (ai, aj) sufficiently many times in order to determine w.p. at least 1 \u2212 \u03b4/K2 whether pij > 1/2; return 1 if pij > 0.5 and 0 otherwise. 2: Invoke Algorithm 4, where in each of its calls to reward(i), the feedback is determined by the above stochastic process.\nReturn: The same output returned by Algorithm 4.\na bound on the number of arms that can have a high Copeland score. Algorithm 2 calls a K-armed bandit algorithm as a subroutine. To this end, we use the KL-based arm-elimination algorithm (a slight modification of Algorithm 2 in [22]) described in Algorithm 4 in Appendix I. It implements an elimination tournament with confidence regions based on the KL-divergence between probability distributions.\nCombining this with the squaring trick, a modification of the doubling trick that reduces the number of partitions from log T to log log T , the SCB algorithm, described in Algorithm 3, repeatedly calls Algorithm 2 but forceterminates if an increasing threshold is reached. If it terminates early, then the identified arm is played against itself until the threshold is reached. Algorithm 3 Scalable Copeland Bandits Input: A Copeland dueling bandit problem with preference matrix P = [pij ]\n1: for all r = 1, 2, . . . do 2: Set T = 22 r\nand run Algorithm 2 with failure probability log(T )/T in order to find an exact Copeland winner ( = 0); force-terminate if it requires more than T queries.\n3: Let T0 be the number of queries used by invoking Algorithm 2, and let ai be the arm produced by it; query the pair (ai, ai) T \u2212 T0 times. 4: end for"}, {"heading": "5 Theoretical Results", "text": "In this section, we present regret bounds for both CCB and SCB. Assuming that the number of Copeland winners and the number of losses of each Copeland winner are bounded,2 CCB\u2019s regret bound takes the form O(K2 + K log T ), while SCB\u2019s is of the form O(K logK log T ). Note that these bounds are not directly comparable. When there are relatively few arms, CCB is expected to perform better. By contrast, when there are many arms SCB is expected to be superior. Appendix A provides empirical evidence to support these expectations.\nThroughout this section we impose the following condition on the preference matrix: A There are no ties, i.e., for all pairs (ai, aj) with i 6= j, we have pij 6= 0.5. This assumption is not very restrictive in practice. For example, in the ranker evaluation setting from information retrieval, each arm corresponds to a ranker, a complex and highly engineered system, so it is unlikely that two rankers are indistinguishable. Furthermore, some of the results we present in this section actually hold under even weaker assumptions. However, for the sake of clarity, we defer a discussion of these nuanced differences to Appendix E."}, {"heading": "5.1 Copeland Confidence Bounds (CCB)", "text": "To analyze Algorithm 1, consider a K-armed Copeland bandit problem with arms a1, . . . , aK and preference matrix P = [pij ], such that arms a1, . . . , aC are the Copeland winners, with C being the number of Copeland winners. Throughout this section, we assume that the parameter \u03b1 in Algorithm 1 satisfies \u03b1>0.5, unless otherwise stated. We first define the relevant quantities:\nDefinition 3. Given the above setting we define:3 1. Li := {aj | pij < 0.5}, i.e., the arms to which ai loses, and LC := |L1|. 2. \u2206ij := |pij \u2212 0.5| and \u2206min := mini 6=j \u2206ij 3. Given i > C, define i\u2217 as the index of the (LC + 1)th largest element in the set {\u2206ij | pij < 0.5}. 4. Define \u2206\u2217i to be \u2206ii\u2217 if i > C and 0 otherwise. Moreover, let us set \u2206 \u2217 min := mini>C \u2206 \u2217 i . 5. Define \u2206\u2217ij to be \u2206 \u2217 i + \u2206ij if pij \u2265 0.5 and max{\u2206\u2217i ,\u2206ij} otherwise.4 6. \u2206 := min {mini\u2264C<j \u2206ij ,\u2206\u2217min}, where \u2206\u2217min is defined as in item 4 above. 7. C(\u03b4) := ( (4\u03b1\u2212 1)K2/(2\u03b1\u2212 1)\u03b4 ) 1 2\u03b1\u22121 where \u03b1 is as in Algorithm 1. 8. N\u03b4ij(t) is the number of time-steps between timesC(\u03b4) and t when ai was chosen as the optimistic Copeland winner\nand aj as the challenger. Also, N\u0302\u03b4ij(t) is defined to be (4\u03b1 ln t)/ ( \u2206\u2217ij )2\nif i 6= j, 0 if i = j > C and t if i = j \u2264 C. We also define N\u0302\u03b4(t) := \u2211 i 6=j N\u0302 \u03b4 ij(t) + 1.\n2See Appendix C.3 for experimental evidence that this is the case in practice. 3See Tables 2 and 3 for a summary of the definitions used in this paper. 4See Figures 7 and 8 for a pictorial explanation.\nUsing this notation, our expected regret bound for CCB takes the form: O ( K2+(C+LC)K lnT\n\u22062\n) (1)\nThis result is proven in two steps. First, Proposition 4 bounds the number of comparisons involving non-Copeland winners, yielding a result of the form O(K2 lnT ). Second, Theorem 11 closes the gap between this bound and that of (1) by showing that, beyond a certain time horizon, CCB selects non-Copeland winning arms as the optimistic Copeland winner very infrequently.\nNote that we have \u2206\u2217ij \u2265 \u2206ij for all pairs i 6= j. Thus, for simplicity, the analysis in this section can be read as if the bounds were given in terms of \u2206ij . We use \u2206\u2217ij instead because it gives tighter upper bounds. In particular, simply using the gaps \u2206ij would replace the denominator of the expression in (1) with \u22062min, which leads to a substantially worse regret bound in practice. For instance, in the ranker evaluation application used in the experiments, this change would on average increase the regret bound by a factor that is of the order of tens of thousands. See Appendix C.4 for a more quantitative discussion of this point.\nWe can now state our first bound, proved in Appendix E under weaker assumptions.\nProposition 4. Given any \u03b4 > 0 and \u03b1 > 0.5, if we apply CCB (Algorithm 1) to a dueling bandit problem satisfying Assumption A, the following holds with probability 1\u2212 \u03b4: for any T > C(\u03b4) and any pair of arms ai and aj , we have N\u03b4ij(T ) \u2264 N\u0302\u03b4ij(T ).\nOne can sum the inequalities in the last proposition over pairs (i, j) to get a regret bound of the formO(K2 log T ) for Algorithm 1. However, as Theorem 11 will show, we can use the properties of the sets Bit to obtain a tighter regret bound of the form O(K log T ). Before stating that theorem, we need a few definitions and lemmas. We begin by defining the key quantity:\nDefinition 5. Given a preference matrix P and \u03b4 > 0, then T\u03b4 is the smallest integer satisfying T\u03b4 \u2265 C( \u03b42 )+8K2(LC+1)2 ln 6K 2 \u03b4 +K 2 ln 6K\u03b4 + 32\u03b1K(LC+1) \u22062min lnT\u03b4+N\u0302 \u03b4 2(T\u03b4)+4K max i>C N\u0302 \u03b4 2 i (T\u03b4).\nRemark 6. T\u03b4 is poly(K, \u03b4\u22121) and our regret bound below scales as log T\u03b4 .\nThe following two lemmas are key to the proof of Theorem 11. Lemma 7 (proved in Appendix F) states that, with high probability by time T\u03b4 , each set Bit contains LC + 1 arms aj , each of which beats ai (i.e., pij < 0.5). This fact then allows us to prove Lemma 8 (Appendix G), which states that, after time-step T\u03b4 , the rate of suboptimal comparisons is O(K lnT ) rather than O(K2 lnT ).\nLemma 7. Given \u03b4 > 0, with probability 1\u2212 \u03b4, each set BiT\u03b4 with i > C contains exactly LC + 1 elements with each element aj satisfying pij < 0.5. Moreover, for all t \u2208 [T\u03b4, T ], we have Bit = BiT\u03b4 .\nLemma 8. Given a Copeland bandit problem satisfying Assumption A and any \u03b4 > 0, with probability 1 \u2212 \u03b4 the following holds: the number of time-steps between T\u03b4/2 and T when each non-Copeland winner ai can be chosen as optimistic Copeland winners (i.e., times when arm ac in Algorithm 1 satisfies c > C) is bounded by N\u0302 i :=\n2N\u0302 iB + 2 \u221a N\u0302 iB ln 2K \u03b4 , where N\u0302 i B := \u2211 j\u2208BiT\u03b4/2 N\u0302 \u03b4/4 ij (T ).\nRemark 9. Due to Lemma 7, with high probability we have N\u0302 iB \u2264 (LC+1) lnT(\u2206\u2217min)2 for each i > C and so the total number of times between T\u03b4 and T when a non-Copeland winner is chosen as an optimistic Copeland winner is in O(KLC lnT ) for a fixed minimal gap \u2206\u2217min. The only other way a suboptimal comparison can occur is if a Copeland winner is compared against a non-Copeland winner, and according to Proposition 4, the number of such occurrences is bounded by O(KC lnT ). Hence, the number of suboptimal comparisons is in O(K lnT ) assuming that C and LC are bounded. In Appendix C.3, we provide experimental evidence for this.\nWe now define the quantities needed to state the main theorem.\nDefinition 10. We define the following three quantities: A(1)\u03b4 := C(\u03b4/4) + N\u0302 \u03b4(T\u03b4/2), A (2) \u03b4 := \u2211 i>C \u221a LC+1 \u2206\u2217i\nln 2K\u03b4 and A(3) := \u2211 i\u2264C<j 1 (\u2206ij) 2 + 2 \u2211 i>C LC+1\n(\u2206\u2217i ) 2 .\nTheorem 11. Given a Copeland bandit problem satisfying Assumption A and any \u03b4 > 0 and \u03b1 > 0.5, with probability 1\u2212 \u03b4, the regret accumulated by CCB is bounded by the following:\nA (1) \u03b4 +A (2) \u03b4 \u221a lnT +A(3) lnT \u2264 A(1)\u03b4 +A (2) \u03b4 \u221a lnT + 2K(C + LC + 1)\n\u22062 lnT.\nFor a general assessment of the above quantities, assuming that LC and C are both O(1), the above quantities in terms of K become A(1)\u03b4 = O(K2), A (2) \u03b4 = O(K log(K)), A(3) = O(K). Hence, the above bound boils down to the expression in (1). We now turn to the proof of the theorem.\nProof of Theorem 11. Let us consider the two disjoint time-intervals [1, T\u03b4/2] and (T\u03b4/2, T ]: [1,T\u03b4/2]: In this case, applying Proposition 4 to T\u03b4 , we get that the number of time-steps when a non-Copeland\nwinner was compared against another arm is bounded by A(1)\u03b4 . As the maximum regret such a comparison can incur is 1, this deals with the first term in the above expression.\n(T\u03b4/2,T]: In this case, applying Lemma 8, we get the other two terms in the above regret bound. Now that we have the high probability regret bound given in Theorem 11, we can deduce the expected regret result claimed in (1) for \u03b1 > 1, as a corollary by integrating \u03b4 over the interval [0, 1]."}, {"heading": "5.2 Scalable Copeland Bandits", "text": "We now turn to our regret result for SCB, which lowers the K2 dependence in the additive constant of CCB\u2019s regret result to K logK. We begin by defining the relevant quantities:\nDefinition 12. Given a K-armed Copeland bandit problem and an arm ai, we define the following: 1. Recall that cpld(ai) := Cpld(ai)/(K \u2212 1) is called the normalized Copeland score. 2. ai is an -Copeland-winner if 1\u2212 cpld(ai) \u2264 (1\u2212 cpld(a1)) (1 + ). 3. \u2206i := max{cpld(a1)\u2212 cpld(ai), 1/(K \u2212 1)} and Hi := \u2211 j 6=i\n1 \u22062ij , with H\u221e := maxiHi.\n4. \u2206 i = max {\u2206i, (1\u2212 cpld(a1))}.\nWe now state our main scalability result:\nTheorem 13. Given a Copeland bandit problem satisfying Assumption A, the expected regret of SCB (Algorithm 3) is bounded by O ( 1 K \u2211K i=1 Hi(1\u2212cpld(ai)) \u22062i ) log(T ), which in turn can be bounded by O ( K(LC+logK) log T \u22062min ) , where LC and \u2206min are as in Definition 3.\nRecall that SCB is based on Algorithm 2, an arm-identification algorithm that identifies a Copeland winner with high probability. As a result, Theorem 13 is an immediate corollary of Lemma 14, obtained by using the well known squaring trick. As mentioned in Section 4.2, the squaring trick is a minor variation on the doubling trick that reduces the number of partitions from log T to log log T .\nLemma 14 is a result for finding an -approximate Copeland winner (see Definition 12.2). Note that, for the regret setting, we are only interested in the special case with = 0, i.e., the problem of identifying the best arm. Lemma 14. With probability 1\u2212 \u03b4, Algorithm 2 finds an -approximate Copeland winner by time O ( 1\nK K\u2211 i=1 Hi(1\u2212 cpld(ai)) (\u2206 i) 2\n) log(1/\u03b4) \u2264 O ( H\u221e ( log(K) + min { \u22122, LC })) log(1/\u03b4).\nassuming5 \u03b4 = (KH\u221e)\u2126(1). In particular when there is a Condorcet winner (cpld(a1) = 1, LC = 0) or more generally cpld(a1) = 1\u2212O(1/K), LC = O(1), an exact solution is found with probability at least 1\u2212 \u03b4 by using an expected number of queries of at most O (H\u221e(LC + logK)) log(1/\u03b4).\nIn the remainder of this section, we sketch the main ideas underlying the proof of Lemma 14, detailed in Appendix H. We first treat the simpler deterministic setting in which a single query suffices to determine which of a pair of arms beats the other. While a solution can easily be obtained using K(K \u2212 1)/2 many queries, we aim for one with query complexity linear in K. The main ingredients of the proof are as follows: 1. cpld(ai) is the mean of a Bernoulli random variable defined as such: sample uniformly at random an index j from\nthe set {1, . . . ,K} \\ {i} and return 1 if ai beats aj and 0 otherwise. 5The exact expression requires replacing log(1/\u03b4) with log(KH\u221e/\u03b4).\n2. Applying a KL-divergence based arm-elimination algorithm (Algorithm 4) to the K-armed bandit arising from the above observation, we obtain a bound by dividing the arms into two groups: those with Copeland scores close to that of the Copeland winners, and the rest. For the former, we use the result from Lemma 15 to bound the number of such arms; for the latter, the resulting regret is dealt with using Lemma 16, which exploits the possible distribution of Copeland scores. Let us state the two key lemmas here:\nLemma 15. Let D \u2282 {a1, . . . , aK} be the set of arms for which cpld(ai) \u2265 1 \u2212 d/(K \u2212 1), that is arms that are beaten by at most d arms. Then |D| \u2264 2d+ 1. Proof. Consider a fully connected directed graph, whose node set is D and the arc (ai, aj) is in the graph if arm ai beats arm aj . By the definition of cpld, the in-degree of any node i is upper bounded by d. Therefore, the total number of arcs in the graph is at most |D|d. Now, the full connectivity of the graph implies that the total number of arcs in the graph is exactly |D|(|D| \u2212 1)/2. Thus, |D|(|D| \u2212 1)/2 \u2264 |D|d and the claim follows.\nLemma 16. The sum \u2211 {i|cpld(ai)<1} 1 1\u2212cpld(ai) is in O(K logK).\nProof. Follows from Lemma 15 via a careful partitioning of arms. Details are in Appendix H.\nGiven the structure of Algorithm 2, the stochastic case is similar to the deterministic case for the following reason: while the latter requires a single comparison between arms ai and aj to determine which arm beats the other, in the stochastic case, we need roughly log(K log(\u2206\u22121ij )/\u03b4)\n\u22062ij comparisons between the two arms to correctly answer the same\nquestion with probability at least 1\u2212 \u03b4/K2."}, {"heading": "6 Conclusion", "text": "In many applications that involve learning from human behavior, feedback is more reliable when provided in the form of pairwise preferences. In the dueling bandit problem, the goal is to use such pairwise feedback to find the most desirable choice from a set of options. Most existing work in this area assumes the existence of a Condorcet winner, i.e., an arm that beats all other arms with probability greater than 0.5. Even though these results have the advantage that the bounds they provide scale linearly in the number of arms, their main drawback is that in practice the Condorcet assumption is too restrictive. By contrast, other results that do not impose the Condorcet assumption achieve bounds that scale quadratically in the number of arms.\nIn this paper, we set out to solve a natural generalization of the problem, where instead of assuming the existence of a Condorcet winner, we seek to find a Copeland winner, which is guaranteed to exist. We proposed two algorithms to address this problem: one for small numbers of arms, called CCB; and a more scalable one, called SCB, that works better for problems with large numbers of arms. We provided theoretical results bounding the regret accumulated by each algorithm: these results improve substantially over existing results in the literature, by filling the gap that exists in the current results, namely the discrepancy between results that make the Condorcet assumption and are of the form O(K log T ) and the more general results that are of the form O(K2 log T ).\nMoreover, we have included empirical results on both a dueling bandit problem arising from a real-life application domain and a large-scale synthetic problem used to test the scalability of SCB. The results of these experiments show that CCB beats all existing Copeland dueling bandit algorithms, while SCB outperforms CCB on the large-scale problem.\nOne open question raised by our work is how to devise an algorithm that has the benefits of both CCB and SCB, i.e., the scalability of the latter together with the former\u2019s better dependence on the gaps. At this point, it is not clear to us how this could be achieved.\nAnother interesting direction for future work is an extension of both CCB and SCB to problems with a continuous set of arms. Given the prevalence of cyclical preference relationships in practice, we hypothesize that the non-existence of a Condorcet winner is an even greater issue when dealing with an infinite number of arms. Given that both our algorithms utilize confidence bounds to make their choices, we anticipate that continuous-armed UCB-style algorithms like those proposed in [23\u201329] can be combined with our ideas to produce a solution to the continuous-armed Copeland bandit problem that does not rely on the convexity assumptions made by algorithms such as the one proposed in [30].\nFinally, it is also interesting to expand our results to handle scores other than the Copeland score, such as an - insensitive variant of the Copeland score (as in [12]), or completely different notions of winners, such as the Borda, the Random Walk or the von Neumann winners (see, e.g., [19, 31])."}, {"heading": "A Experimental Results", "text": "To evaluate our methods CCB and SCB, we apply them to three Copeland dueling bandit problems. The first is a 5-armed problem arising from ranker evaluation in the field of information retrieval (IR) [32]. The second is a 500- armed synthetic example created to test the scalability of SCB. The third is an example with a Condorcet winner which shows how CCB compares against RUCB when the condition required by RUCB is satisfied.\nAll three experiments follow the experimental approach in [3, 13] and use the given preference matrix to simulate comparisons between each pair of arms (ai, aj) by drawing samples from Bernoulli random variables with mean pij . We compare our two proposed algorithms against the state of the art K-armed dueling bandit algorithm, RUCB [13], and Copeland SAVAGE, PBR and RankEl. We include RUCB in order to verify our claim that K-armed dueling bandit algorithms that assume the existence of a Condorcet winner have linear regret if applied to a Copeland dueling bandit problem without a Condorcet winner. Note that in all our plots, the horizontal time axes use a log scale, while the vertical axes, which measure cumulative regret, use a linear scale.\nThe first experiment uses a 5-armed problem arising from ranker evaluation in the field of information retrieval (IR) [32], detailed in Appendix B. Figure 1 shows the regret accumulated by CCB, SCB, the Copeland variants of SAVAGE, PBR and RankEl, as well as RUCB on this problem. CCB outperforms all other algorithms in this 5-armed experiment.\nNote that three of the baseline algorithms under consideration here (i.e., SAVAGE, PBR and RankEl) require the horizon of the experiment as an input. Therefore, we ran independent experiments with varying horizons and recorded the accumulated regret: the markers on the curves corresponding to these algorithms represent these numbers. Consequently, the regret curves are not monotonically increasing. For instance, SAVAGE\u2019s cumulative regret at time 2 \u00d7 107 is lower than at time 107 because the runs that produced the former number were not continuations of those that resulted in the latter, but rather completely independent. Furthermore, RUCB\u2019s cumulative regret grows linearly, which is why the plot does not contain the entire curve.\nThe second experiment uses a 500-armed synthetic example created to test the scalability of SCB. In particular, we fix a preference matrix in which the three Copeland winners are in a cycle, each with a Copeland score of 498, and the other arms have Copeland scores ranging from 0 to 496.\nFigure 2, which depicts the results of this experiment, shows that when there are many arms, SCB can substantially outperform CCB. We omit SAVAGE, PBR and RankEl from this experiment because they scale poorly in the number of arms [10\u201312].\nThe reason for the sharp transition in the regret curves of CCB and SCB in the synthetic experiment is as follows. Because there are many arms, as long as one of the two arms being compared is not a Copeland winner, the comparison can result in substantial regret; since both algorithms choose the second arm in each round based on some criterion other than the Copeland score, even if the first chosen arm in a given time-step is a Copeland winner, the incurred regret may be as high as 0.5. The sudden transition in Figure 2 occurs when the algorithm becomes confident enough of its choice for the first arm to begin comparing it against itself, at which point it stops accumulating regret.\nThe third experiment is an example with a Condorcet winner designed to show how CCB compares against RUCB when the condition required by RUCB is satisfied. The regret plots for SAVAGE and SCB were excluded here since they both perform substantially worse than either RUCB or CCB, as expected. This example was extracted in the same fashion as the example used in the ranker evaluation experiment detailed in Appendix B, with the sole difference that this time we ensured that one of the rankers is a Condorcet winner. The results, depicted in Figure 3, show that CCB enjoys a slight advantage over RUCB in this case. We attribute this to the careful process of identifying and utilizing the weaknesses of non-Copeland winners, as carried out by lines 12 and 18 of Algorithm 1."}, {"heading": "B Ranker Evaluation Details", "text": "A ranker is a function that takes as input a user\u2019s search query and ranks the documents in a collection according to their relevance to that query. Ranker evaluation aims to determine which among a set of rankers performs best. One effective way to achieve this is to use interleaved comparisons [33], which interleave the ranked lists of documents proposed by two rankers and present the resulting list to the user, whose subsequent click feedback is used to infer a noisy preference for one of the rankers. Given a set of K rankers, the problem of finding the best ranker can then be modeled as a K-armed dueling bandit problem, with each arm corresponding to a ranker.\nWe use interleaved comparisons to estimate the preference matrix for the full set of rankers included with the MSLR dataset6, from which we select 5 rankers such that a Condorcet winner does not exist. The MSLR dataset consists of relevance judgments provided by expert annotators assessing the relevance of a given document to a given query. Using this data set, we create a set of 136 rankers, each corresponding to a ranking feature provided in the data set, e.g., PageRank. The ranker evaluation task in this context corresponds to determining which single feature constitutes the best ranker [4].\nTo compare a pair of rankers, we use probabilistic interleave (PI) [34], a recently developed method for interleaved comparisons. To model the user\u2019s click behavior on the resulting interleaved lists, we employ a probabilistic user model [34, 35] that uses as input the manual labels (classifying documents as relevant or not for given queries) provided with the MSLR dataset. Queries are sampled randomly and clicks are generated probabilistically by conditioning on these assessments in a way that resembles the behavior of an actual user [36]. Specifically, we employ an informational click model in our ranker evaluation experiments [37].\nThe informational click model simulates the behavior of users whose goal is to acquire knowledge about multiple facets of a topic, rather than seeking a specific page that contains all the information that they need. As such, in the informational click model, the user tends to continue examining documents even after encountering a highly relevant document. The informational click model is one of the three click models utilized in the ranker evaluation literature, along with the perfect and navigational click models [37]. It turns out that the full preference matrix of the feature vectors of the MSLR dataset has a Condorcet winner when the perfect or the navigational click-models are used. As we will see in Appendix C.1, using the informational click model that is no longer true.\n6http://research.microsoft.com/en-us/projects/mslr/default.aspx\nFollowing [3, 13], we first use the above approach to estimate the comparison probabilities pij for each pair of rankers and then use these probabilities to simulate comparisons between rankers. More specifically, we estimate the full preference matrix, called the informational preference matrix, by performing 400, 000 interleaved comparisons on each pair of the 136 feature rankers."}, {"heading": "C Assumptions and Key Quantities", "text": "In this section, we provide quantitative analysis of the various assumptions, definitions and quantities that were discussed in the main body of the paper.\nC.1 The Condorcet Assumption To test how stringent the Condorcet assumption is, we use the informational preference matrix described in Section B to estimate for each K = 1, . . . , 136 the probability PK that a given K-armed dueling bandit problem, obtained from considering K of our 136 feature rankers, would have a Condorcet winner by randomly selecting 10, 000 Karmed dueling bandit problems and counting the ones with Condorcet winners. As can be seen from Figure 4, as K grows the probability that the Condorcet assumption holds decreases rapidly. We hypothesize that this is because the informational click model explores more of the list of ranked documents than the navigational click model, which was used in [13], and so it is more likely to encounter non-transitivity phenomena of the sort described in [38].\nC.2 Other Notions of Winners As mentioned in Section 3, numerous other definitions of what constitutes the best arm have been proposed, some of which specialize to the Condorcet winner, when it exists. This latter property is desirable both in preference learning and social choice theory: the Condorcet winner is the choice that is preferred over all other choices, so if it exists, there is good reason to insist on selecting it. The Copeland winner, as discussed in this paper, and the von Neumann winner [19] satisfy this property, while the Borda (a.k.a. Sum of Expectations) and the Random Walk (a.k.a. PageRank)\nwinners [39] do not. The von Neumann winner is in fact defined as a distribution over arms such that playing it will maximize the probability to beat any fixed arm. The Borda winner is defined as the arm maximizing the score\u2211 j 6=i pij and can be interpreted as the arm that beats other arms by the most, rather than beating the most arms. The Random Walk winner is defined as the arm we are most likely to visit in some Markov Chain determined by the preference matrix. In this section, we provide some numerical evidence for the similarity of these notions in practice, based on the sampled preference matrices obtained from the ranker evaluation from IR, which was described in the last section. Table 1 lists the percentage of preference matrices for which pairs of winner overlapped. In the case of the von Neumann winner, which is defined as a probability distribution over the set of arms [19], we used the support of the distribution (i.e., the set of arms with non-zero probability) to define overlap with the other definitions.\nAs these numbers demonstrate, the Copeland and the von Neumann winners are very likely to overlap, as are the Borda and Random Walk winners, while the first two definitions are more likely to be incompatible with the latter two. Furthermore, in the case of %94.2 of the preference matrices, all Copeland winners were contained in the support of the von Neumann winner, suggesting that in practice the Copeland winner is a more restrictive notion of what constitutes a winner.\nC.3 The Quantities C and LC We also examine additional quantities relevant to our regret bounds: the number of Copeland winners, C; the number of losses of each Copeland winner, LC ; and the range of values in which these quantities fall. Using the above randomly chosen preference sub-matrices, we counted the number of times each possible value for C and LC was observed. The results are depicted in Figure 5: the area of the circle with coordinates (x, y) is proportional to the percentage of examples with K = x which satisfied C = y (in the top plot) or LC = y (in the bottom plot). As these plots show, the parameters C and LC are generally much lower than K.\nC.4 The Gap \u2206 The regret bound for CCB, given in (1), depends on the gap \u2206 defined in Definition 3.6, rather than the smallest gap \u2206min as specified in Definition 3.2. The latter would result in a looser regret bound and Figure 6 quantifies this deterioration in the ranker evaluation example under consideration here. In particular, the plot depicts the average of the ratio between the two bounds (the one using \u2206 and the one using \u2206min) across the 10, 000 sampled preference matrices used in the analysis of the Condorcet winner for each K in the set {2, . . . , 135}. The average ratio decreases as the number of arms approaches 136 because, asK increases, the sampled preference matrices increasingly resemble the full preference matrix and so their gaps \u2206 and \u2206min approach those of the full 136-armed preference matrix as well. As it turns out, the ratio \u22062/\u22062min for the full matrix is equal to 1, 419. Hence, the curve in Figure 6 approaches that number as the number of arms approaches 136."}, {"heading": "D Background Material", "text": "Maximal Azuma-Hoeffding Bound [40, \u00a7A.1.3]: Given random variables X1, . . . , XN with common range [0, 1] satisfying E[Xn|X1, . . . , Xn\u22121] = \u00b5, define the partial sums Sn = X1 + \u00b7 \u00b7 \u00b7+Xn. Then, for all a > 0, we have\nP (\nmax n\u2264N\nSn > n\u00b5+ a ) \u2264 e\u22122a2/N\nP (\nmin n\u2264N\nSn < n\u00b5\u2212 a ) \u2264 e\u22122a2/N\nHere, we will quote a useful Lemma that we will refer to repeatedly in our proofs:\nLemma 17 (Lemma 1 in [13]). Let P := [pij ] be the preference matrix of a K-armed dueling bandit problem with arms {a1, . . . , aK}. Then, for any dueling bandit algorithm and any \u03b1 > 12 and \u03b4 > 0, we have\nP ( \u2200 t > C(\u03b4), i, j, pij \u2208 [lij(t), uij(t)] ) > 1\u2212 \u03b4."}, {"heading": "E Proof of Proposition 4", "text": "Before starting with the proof, let us point out the following two properties that can be derived from Assumption A in Section 5:\nP1 There are no ties involving a Copeland winner and a non-Copeland winner, i.e., for all pairs of arms (ai, aj) with i \u2264 C < j, we have pij 6= 0.5.\nP2 Each non-Copeland winner has more losses than every Copeland winner, i.e., for every pair of arms (ai, aj), with i \u2264 C < j, we have |Li| < |Lj |.\nEven though we have assumed in the statement of Proposition 4 that Assumption A holds, it turns out that the proof provided in this section holds as long as the above two properties hold.\nProposition 4 Applying CCB to a dueling bandit problem satisfying properties P1 and P2, we have the following bounds on the number of comparisons involving various arms for each T > C(\u03b4): for each pair of arms ai and aj , such that either at least one of them is not a Copeland winner or pij 6= 0.5, with probability 1\u2212 \u03b4 we have\nN\u03b4ij(T ) \u2264 N\u0302\u03b4ij(T ) :=  4\u03b1 lnT( \u2206\u2217ij )2 if i 6= j\n0 if i = j > C\n(2)\nProof of Proposition 4. We will prove these bounds by considering a number of cases separately:\n1. i \u2264 C and pij 6= 0.5: First of all, since ai is a Copeland winner, this means that according to the definitions in Tables 2 and 3, \u2206\u2217ij is simply equal to \u2206ij ; secondly, assuming by way of contradiction that N \u03b4 ij(t) > 4\u03b1 lnT \u2206ij\n> 0, then we have \u03c4ij > C(\u03b4) and so by Lemma 17, we have with probability 1 \u2212 \u03b4 that the confidence interval [lij(\u03c4ij), uij(\u03c4ij)] contains the preference probability pij . But, in order for arm aj to have been chosen as the challenger to ai, we must also have 0.5 \u2208 [lij(\u03c4ij), uij(\u03c4ij)]; to see this, let us consider the two possible cases:\n(a) If we have pij > 0.5, then having 0.5 /\u2208 [lij(\u03c4ij), uij(\u03c4ij)]\nimplies that we have lij(\u03c4ij) > 0.5, which in turn implies\nuji(\u03c4ij) = 1\u2212 lij(\u03c4ij) < 0.5 = uii(\u03c4ij),\nbut this is impossible since in that case ai would\u2019ve been chosen as the challenger.\n(b) If we have pij < 0.5, then have 0.5 /\u2208 [lij(\u03c4ij), uij(\u03c4ij)]\nimplies that we have uij(\u03c4ij) < 0.5, but this is impossible because it means that we had lji(\u03c4ij) > 0.5, and CCB would\u2019ve eliminated it from considerations in its second round.\nSo, in either case, we cannot have 0.5 /\u2208 [lij(\u03c4ij), uij(\u03c4ij)]. Therefore, at time \u03c4ij , we must have had uij(\u03c4ij) \u2212 lij(\u03c4ij) > |pij \u2212 0.5| =: \u2206ij . From this, we can conclude the following, using the definition of uij and lij :\nuij(\u03c4ij)\u2212 lij(\u03c4ij) := 2 \u221a\n\u03b1 ln \u03c4ij Nij(\u03c4ij) \u2265 \u2206ij\n\u2234 2 \u221a \u03b1 ln \u03c4ij N\u03b4ij(\u03c4ij) \u2265 \u2206ij \u2235 N\u03b4ij(\u03c4ij) \u2264 Nij(\u03c4ij)\n\u2234 2\n\u221a \u03b1 lnT\nN\u03b4ij(\u03c4ij) \u2265 \u2206ij \u2235 \u03c4ij \u2264 T\n\u2234 N\u03b4ij(\u03c4ij) \u2264 4\u03b1 lnT\n\u22062ij ,\ngiving us the desired bound. The reader is referred to Figure 7 for an illustration of this argument.\n2. C < i: Let us deal with the two cases included in Inequality (2) separately:\n(a) i = j > C: In plain terms, this says that with probability 1 \u2212 \u03b4 no non-Copeland winner will be compared against itself after time C(\u03b4). The reason for this is the following set of facts:\nai\n1 2 ai\naC aj\n\u2206\u2217ij\n\u2206\u2217iK\nhold. On the other hand, Lemma 17 states that with probability 1\u2212 \u03b4 we have uij(\u03c4ij) \u2265 pij . Putting these two together we get uij(\u03c4ij) \u2265 max{0.5, pij}. (3) On the other hand, we will show next that with probability 1 \u2212 \u03b4, we have lij(\u03c4ij) \u2264 0.5 \u2212 \u2206\u2217i ; this is a consequence of the following facts: \u2022 Since ai was chosen as the optimistic Copeland winner, we can deduce that ai had no more that LC\noptimistic losses. \u2022 Let ak1 , . . . , akl be the l \u2264 LC arms to which ai lost optimistically during time-step \u03c4ij . Then, the\nsmallest pik with k /\u2208 {k1, . . . , kl}, must be less than to equal to the {LC + 1}th smallest element in the set {pik | k = 1, . . . ,K}. \u2022 This, in turn, is equal to the {LC + 1}th smallest element in the set {pik|pik < 0.5} (since this latter set of numbers are the smallest ones in the former set). But, this is equal to 0.5\u2212\u2206\u2217i by definition. So, we have the desired bound on lij(\u03c4ij) and combining this with Inequality (3), we have\nuij(\u03c4ij)\u2212 lij(\u03c4ij) \u2265 max{0, pij \u2212 0.5}+ \u2206\u2217i = \u2206\u2217ij ,\nwhere the last equality follows directly from the definition of \u2206\u2217ij and the fact that pij > 0.5 \u2212\u2206\u2217i . Now, repeating the same calculations as before, we can conclude that with probability 1\u2212 \u03b4, we have\nN\u03b4ij(\u03c4ij) \u2264 4\u03b1 lnT( \u2206\u2217ij )2 .\nA pictorial depiction of the various steps in this part of the proof can be found in Figure 8.\nThe two boxes in the top row with red intervals represent arms to which a1 loses (i.e. p1j < 0.5), the number of which happens to be 2 in this example, which means that LC = 2. Now, by Definition 3.3, i\u2217 is the index with the index j with the (LC + 1)th (in this case 3rd) lowest pij , and since the three lowest pij in this example are piK , piC and pii\u2217 , this means that the column labeled as ai\u2217 is indeed labeled correctly. Given this, Definition 3.4 tells us that \u2206\u2217i is the size of the gap shown in the block corresponding to pair (ai, ai\u2217). Moreover, by Definition 3.5, the gap \u2206\u2217ij is defined using one of the following three cases: (1) if we have pij < pii\u2217 (as with the ones with red confidence intervals in the bottom row of plots), then we get \u2206\u2217ij := \u2206ij = 0.5\u2212 pij ; (2) if we have pii\u2217 < pij \u2264 0.5 (as in the plots in the 2nd, 3rd and 7th column of the bottom row), then we get \u2206\u2217ij := \u2206\u2217i ; (3) if we have 0.5 < pij (as in the 1st and 6th column in the bottom row), then we get \u2206\u2217ij := \u2206ij + \u2206 \u2217 i . The reasoning behind this trichotomy is as follows: in the case of arms aj in group (1), they are not going to be chosen to be played against ai as soon as top of the interval goes below 0.5, and by Lemma 17, we know that the bottom of the interval will be below pij . In the case of the arms in groups (2) and (3), the bottom of their interval needs to be below pii\u2217 because otherwise that would mean that neither arm ai\u2217 nor arms in group (1) were eligible to be included in the arg max expression in Line 13 of Algorithm 1, which can only happen if we have uij < 0.5 for j = i\u2217 as well as the arms in group (1), from which we can deduce that the optimistic Copeland score of ai must have been lower than K \u2212 1\u2212LC , and so ai could not have been chosen as an optimistic Copeland winner. Using the same argument, we can also see that the tops of the confidence intervals corresponding to arms in group (2) must be above 0.5, or else it would be impossible for ai to be chosen as an optimistic Copeland winner. Moreover, by Lemma 17, the intervals of the arms aj in group (3) must contain pij . 20"}, {"heading": "F Proof of Lemma 7", "text": "Let us begin with the following direct corollary of Proposition 4:\nCorollary 18. Given any \u03b4 > 0, any T > C(\u03b4) and any sub-interval of length N\u0302\u03b4(T ) := \u2211 i 6=j N\u0302 \u03b4 ij(T ) + 1, with probability 1\u2212 \u03b4, there is at least one time-step when there exists c \u2264 C such that\nCpld(ac) = Cpld(ac) = Cpld(ac)\n\u2265 Cpld(aj) \u2200 j, (4)\nProof. According to Proposition 4, with probability 1 \u2212 \u03b4, there are at most \u2211i 6=j N\u0302\u03b4ij(T ) time-steps between C(\u03b4) and T when Algorithm 1 did not compare a Copeland winner against itself: i.e. c and d in Algorithm 1 did not satisfy c = d \u2264 C.\nIn other words, during this time-period, in any sub-interval of length N\u0302\u03b4(T ) := \u2211 i6=j N\u0302 \u03b4 ij(T ) + 1, there is at least\none time-step when a Copeland winner was compared against itself. During this time-step, we must have had\nCpld(ac) = Cpld(ac) = Cpld(ac)\n\u2265 Cpld(aj) \u2200 j,\nwhere the first two equalities are due to the fact that in order for Algorithm 1 to set c = d, we must have 0.5 /\u2208 [lcj , ucj ] for each j 6= c, or else ac would not be played against itself; on the other hand, the last inequality is due to the fact that ac was chosen as an optimistic Copeland winner by Line 8 of Algorithm 1, so its optimistic Copeland score must have been greater than or equal to the optimistic Copeland score of the rest of the arms.\nLemma 19. If there exists an arm ai with i > C such that BiC(\u03b4/2) contains an arm aj that loses to ai (i.e. pij > 0.5) or such that BiC(\u03b4/2) contains fewer than LC + 1 arms, then the probability that by time-step T0 the sets Bit and Bt are not reset by Line 9.A of Algorithm 1 is less than \u03b4/6, where we define\nT0 := C(\u03b4/2) + N\u0302 \u03b4/2(T\u03b4)\n+ 32\u03b1K(LC + 1) lnT\u03b4\n\u22062min\n+ 8K2(LC + 1) 2 ln\n6K2\n\u03b4 .\nProof. By Line 9.A of Algorithm 1, as soon as we have lij > 0.5, the set Bit will be emptied. In what follows, we will show that the probability that the number of time-steps before we have lij > 0.5 is greater than\n\u2206T := N\u0302\u03b4/2(T\u03b4) +N\nwith\nN := 32\u03b1K(LC + 1) lnT\u03b4\n\u22062min + 8K2(LC + 1)\n2 ln 6K2\n\u03b4\nis bounded by \u03b4/6K2. This is done using the amount of exploration infused by Line 10 of Algorithm 1. To begin, let us note that by Corollary 18, there is a time-step before T0 := C(\u03b4/2) + N\u0302\u03b4/2(T\u03b4) when the condition of Line 9.C of Algorithm 1 is satisfied for some Copeland winner. At this point, if Bit contains fewer than LC + 1 elements, then it will be emptied; furthermore, for all k > C, the sets BkT0 will have at most LC + 1 elements and so the set\nSt := {(k, `)|a` \u2208 Bkt and 0.5 \u2208 [lk`, uk`]}\ncontains at mostK(LC+1) elements for all t \u2265 T0. Moreover, if at time-step T1 := C(\u03b4/2)+\u2206T we have aj \u2208 BiT1 , then we can conclude that (i, j) \u2208 St for all t \u2208 [C(\u03b4/2), T1], since, if at any time after C(\u03b4/2) arm aj were to be\nremoved from Bit, it will never be added back because that can only happen through Line 9.B of Algorithm 1 and by Lemma 17 and the assumption of the lemma we have uij > pij > 0.5.\nWhat we can conclude from the observations in the last paragraph is that if at time-step T1 we still have aj \u2208 BiT1 , then there are \u2206T time-steps during which the probability of comparing arms ai and aj was at least 14K(LC+1) and yet no more than 4\u03b1 lnT\u03b4 \u22062ij comparisons took place, since otherwise, we would have lij > 0.5 at some point before T1. Now, let Bijn denote the indicator random variable that is equal to 1 if arms ai and aj were chosen to be played against each other by Line 10 of Algorithm 1 during time-step T1 + n. Also, let X1, . . . , XN be iid Bernoulli random variables with mean 14K(LC+1) . Since B ij n and Xn are Bernoulli and we have E [ Bijn ] \u2264 E[Xn] for each n, then we can conclude that\nP ( N\u2211 n=1 Bijn < s ) \u2264 P ( N\u2211 n=1 Xn < s ) for all s.\nOn the other hand, we can use the Hoeffding bound to show that the right hand side of the above inequality is smaller than \u03b4/6 if we set s = 4\u03b1 lnT\u03b4\n\u22062ij :\nP ( N\u2211 n=1 Xn < 4\u03b1 lnT\u03b4 \u22062ij ) \u2264 P ( N\u2211 n=1 Xn < 4\u03b1 lnT\u03b4 \u22062min )\n= P ( N\u2211 n=1 Xn < N 4K(LC + 1) \u2212 a ) \u2264 e \u2212 2a2 N\nwith a := \u22124\u03b1 lnT\u03b4 \u22062min + N 4K(LC + 1)\n= e \u2212 32\u03b1 2 ln2 T\u03b4 \u22064 min N + 4\u03b1 lnT\u03b4 K(LC+1)\u2206 2 min \u2212 N 8K2(LC+1) 2\n\u2264 e 4\u03b1 lnT\u03b4 K(LC+1)\u2206 2 min \u2212 N 8K2(LC+1) 2\n= e\u2212 ln 6K 2/\u03b4 = \u03b4/6K2.\nNow, if we take a union bound over all pairs of arms ai and aj satisfying the condition stated at the beginning of this scenario, we get that with probability \u03b4/6 by time-step C(\u03b4/2) + \u2206T all such erroneous hypotheses are reset by Line 9.A of Algorithm 1, emptying the sets Bit.\nLemma 20. Let t1 \u2208 [C(\u03b4/2), T\u03b4) be such that for all i, j satisfying aj \u2208 Bit1 we have pij < 0.5. Then, the following two statements hold with probability 1\u2212 5\u03b4/6:\n1. If the set Bt1 in Algorithm 1 contains at least one Copeland winner, then if we set t2 = t1 + nmax, where\nnmax := 2K max i>C\nN\u0302 \u03b4/2 i (T\u03b4) +\nK2 ln(6K/\u03b4)\n2 ,\nthen Bt2 is non-empty and contains no non-Copeland winners, i.e. for all ai \u2208 Bt2 we have i \u2264 C.\n2. If the set Bt1 in Algorithm 1 contains no Copeland winners, i.e. for all ai \u2208 Bt1 , we have i > C, then within nmax time-steps the set Bt will be emptied by Line 9.B of Algorithm 1.\nTherefore, with probability 1 \u2212 5\u03b4/6, by time t1 + 2nmax all non-Copeland winners (i.e. arms ai with i > C) are eliminated from Bt.\nProof. We will consider the two cases in the following, conditioning on the conclusions of Lemma 17, Proposition 4 and Corollary 18, all simultaneously holding with 1\u2212 \u03b4/2:\n1. Bt1 contains a Copeland winner (i.e. ac \u2208 Bt1 for some c \u2264 C): in this case, by Lemma 17, we know that the Copeland winner will forever remain in the set Bt because\nCpld(ac) \u2265 max j Cpld(aj) \u2265 max j Cpld(aj),\nthen Bt2 will indeed be empty. Moreover, in what follows, we will show that the probability that any non-Copeland winner in Bt is not eliminated by time t2 is less than \u03b4/6. Let us assume by way of contradiction that there exists an arm ab with b > C such that ab is in Bt2 : we will show that the probability of this happening is less than \u03b4/6K, and so, taking a union bound over non-Copeland winning arms, the probability that any non-Copeland winner is in Bt2 is seen to be smaller than \u03b4/6. Now, to see that the probability of ab being in the set Bt2 is small, note that the fact that ab being in Bt2 implies that ab was in the set Bt for the entirety of the time interval [C(\u03b4/2), t2] as we will show in the following. If ab is eliminated from Bt at some point between t1 and t2, it will not get added back into Bt because that can only take place if the set Bt is reset at some point and there are only two ways for that to happen:\n(a) By Line 9.A of Algorithm 1 in the case that for some pair (i, j) with aj \u2208 Bit we have lij > 0.5; however, this is ruled out by our assumption that at time t1 we have pij < 0.5 and by Lemma 17, which stipulates that we have lij \u2264 pij < 0.5.\n(b) By Line 9.B of Algorithm 1 in the case that all arms are eliminated from Bt, but this cannot happen by the fact mentioned above that ac will not not be removed from Bt.\nSo, as mentioned above, we indeed have that at each time-step between t1 and t2, the set Bt contains ab. Next, we will show that the probability of this happening is less than \u03b4/6K. To do so, let us denote by Sb the time-steps when arm ab was in the set of optimistic Copeland winners, i.e.\nSb := { t \u2208 (t1, t2] \u2223\u2223 ab \u2208 Ct } . We can use Corollary 18 above with T = T\u03b4 to show that the size of the set Sb (which we denote by |Sb|) is bounded from below by t2 \u2212 t1 \u2212 \u2211 i 6=j N\u0302 \u03b4/2 ij (T\u03b4): this is because whenever any Copeland winner ac is played against itself, Equation (4) holds, and so if we were to have ab /\u2208 Ct during that time-step ab would have had to get eliminated from Bt because ab not being an optimistic Copeland winner would imply that\nCpld(ab) < Cpld(ac) = Cpld(ac).\nBut, we know from facts (a) and (b) above that ab remains in Bt for all t \u2208 (t1, t2]. Therefore, as claimed, we have\n|Sb| \u2265 t2 \u2212 t1 \u2212 \u2211 i 6=j N \u03b4/2 ij (T\u03b4) \u2265 2KN\u0302 \u03b4/2 b (T\u03b4) + K2 ln(6K/\u03b4) 2 =: nb, (5)\nwhere the last inequality is due to the definition of nmax := t2 \u2212 t1. On the other hand, Proposition 4 tells us that the number of time-steps between t1 and t2 when ab could have been chosen as an optimistic Copeland winner is bounded as\nN \u03b4/2 b (T\u03b4) \u2264 N\u0302 \u03b4/2 b (T\u03b4). (6)\nFurthermore, given the fact that during each time-step t \u2208 Sb we have ab \u2208 Bt \u2229 Ct, the probability of ab being chosen as an optimistic Copeland winner is at least 1/K because of the sampling procedure in Lines 14-17 of Algorithm 1. However, this is considerably higher than the ratio obtained by dividing the right-hand sides of Inequality (6) by that of Inequality (5). We will make this more precise in the following: for each t \u2208 Sb, denote by \u00b5bt the probability that arm ab would be chosen as the optimistic Copeland winner by Algorithm 1, and let X b t be the Bernoulli random variable that returns 1 when arm ab is chosen as the optimistic Copeland winner or 0\notherwise. As pointed out above, we have that \u00b5bt \u2265 1K for all t \u2208 Sb, which, together with the fact that |Sb| \u2265 nb, implies that the random variable Xb := \u2211 t\u2208Sb X b t satisfies\nP (Xb < x) \u2264 P (Binom(nb, 1/K) < x). (7) This is both because the Bernoulli summands ofXb have higher means than the Bernoulli summands ofBinom(nb, 1/K) and because Xb is the sum of a larger number of Bernoulli variables, so Xb has more mass away from 0 than does Binom(nb, 1/K). So, we can bound the right-hand side of Inequality (7) by \u03b4/6K with x = N\u0302 \u03b4/2 b (T\u03b4) to get our desired result. But, this is a simple consequence of the Hoeffding bound, a more general form of which is quoted in Section D. More precisely, we have\nP ( Binom(nb, 1/K) < N\u0302 \u03b4/2 b (T\u03b4) ) = P ( Binom(nb, 1/K) < nb K \u2212 a )\nwith a := nb K \u2212 N\u0302\u03b4/2b (T\u03b4)\n< e\u22122a 2/nb = e\n\u22122(nbK \u2212N\u0302 \u03b4/2 b (T\u03b4)) 2\nnb\n= e\u22122nb/K 2+4N\u0302 \u03b4/2 b (T\u03b4)/K\u22122N\u0302 \u03b4/2 b (T\u03b4) 2/nb\n\u2264 e\u22122nb/K2+4N\u0302 \u03b4/2 b (T\u03b4)/K = e\u2212 ln(6K/\u03b4) = \u03b4/6K\nUsing the union bound over the non-Copeland winning arms that were in Bt1 , of whom there is at most K \u2212 1, we can conclude that with probability \u03b4/6 they are all eliminated from Bt2 .\n2. Bt1 does not contain any Copeland winners: in this case, we can use the exact same argument as above to conclude that the probability that the set Bt is non-empty for all t \u2208 (t1, t2] is less than \u03b4/6 because as before the probability that each arm ab \u2208 Bt1 is not eliminated within nb time-steps is smaller than \u03b4/6K.\nLet us now state the following consequence of the previous lemmas: Lemma 7. Given \u03b4 > 0, the following fact holds with probability 1 \u2212 \u03b4: for each i > C, the set BiT\u03b4 contains\nexactly LC + 1 elements with each element aj satisfying pij < 0.5. Moreover, for all t \u2208 [T\u03b4, T ], we have Bit = BiT\u03b4 .\nProof. In the remainder of the proof, we will condition on the high probability event that the conclusions of Lemma 17, Corollary 18, Lemma 19 and Lemma 20 all hold simultaneously with probability 1\u2212 \u03b4.\nCombining Lemma 20, we can conclude that by time-step T1 := T0+2nmax all non-Copeland winners are removed from BT1 , which also means by Line 9.B of Algorithm 1 that the corresponding sets BiT1 , with i > C are non-empty, and Lemma 19 tells us that these sets have at least LC + 1 elements aj each of which beats ai (i.e. pij < 0.5).\nNow, applying Corollary 18, we know that within N\u0302\u03b4/2(T\u03b4) time-steps, Line 9.C of Algorithm 1 will be executed, at which point we will have LC = LC and so Bit will be reduced to LC + 1 elements. Moreover, by Lemma 17, for all t > T1 and aj \u2208 Bit we have lij \u2264 pij < 0.5 and so Bit will not be emptied by any of the provisions in Line 9 of Algorithm 1.\nNow, since by definition we have T \u03b4 \u2265 T1 + N\u0302\u03b4/2(T\u03b4), we have the desired result."}, {"heading": "G Proof of Lemma 8", "text": "Lemma 8 Given a Copeland bandit problem satisfying Assumption A and any \u03b4 > 0, with probability 1 \u2212 \u03b4 the following statement holds: the number of time-steps between T\u03b4/2 and T when each non-Copeland winning arm ai can be chosen as optimistic Copeland winners (i.e. time-steps when arm ac in Algorithm 1 satisfies c = i > C) is bounded by\nN\u0302 i := 2N\u0302 iB + 2 \u221a N\u0302 iB ln 2K\n\u03b4 ,\nwhere N\u0302 iB := \u2211 j\u2208BiT\u03b4/2 N\u0302 \u03b4/4 ij (T ).\nProof. The idea of the argument is outlined in the following sequence of facts: 1. By Lemma 7, we know that with probability 1\u2212 \u03b4/2, for each i > C and all times t > T\u03b4/2 the sets Bit will consist\nof exactly LC + 1 arms that beat the arm ai, and that Bit = BiT\u03b4/2 . 2. Moreover, if at time t > T\u03b4/2 > C(\u03b4/4), Algorithm 1 chooses a non-Copeland winner as an optimistic Copeland\nwinner (i.e. i > C), then with probability 1\u2212 \u03b4/4 we know that\nCpld(ai) \u2265 Cpld(a1) \u2265 Cpld(a1) = K \u2212 1\u2212 LC .\n3. This means that there could be at most LC arms aj that optimistically lose to ai (i.e. uij < 0.5) and so at least one arm ab \u2208 Bit does satisfy uib \u2265 0.5 4. This, in turn, means that in Line 13 of Algorithm 1 with probability 0.5 the arm ad will be chosen from Bit. 5. By Proposition 4, we know that with probability 1\u2212 \u03b4/4, in the time interval [T\u03b4/2, T ] each arm aj \u2208 BiT\u03b4/2 can be\ncompared against ai at most N\u0302 \u03b4/4 ij (T ) many times.\nGiven that by Fact 3 above we need at least one arm aj \u2208 Bit to satisfy uij \u2265 0.5 for Algorithm 1 to set (c, d) = (i, j), and that by Fact 4 arms from Bit have a higher probability of being chosen to be compared against ai, this means that arm ai will be chosen as optimistic Copeland winner roughly twice as many times we had (c, d) = (i, j) for some j \u2208 BiT\u03b4/2 . A high probability version of the claim in the last sentence together with Fact 5 would give us the bound on regret claimed by the theorem. In the remainder of this proof, we will show that indeed the number of times we have c = i is unlikely to be too many times higher than twice the number of times we get (c, d) = (i, j), where j \u2208 BiT\u03b4/2 . To do so, we will introduce the following notation: N i: the number of time-steps between T\u03b4/2 and T when arm ai was chosen as optimistic Copeland winner. Bin: the indicator random variable that is equal to 1 if Line 13 in Algorithm 1 decided to choose arm ad only from\nthe set Bitn and zero otherwise, where tn is the n th time-step after T\u03b4/2 when arm ai was chosen as optimistic Copeland winner. Note that Bi is simply a Bernoulli random variable mean 0.5.\nN iB: the number of time-steps between T\u03b4 and T when arm ai was chosen as optimistic Copeland winner and that Line 13 in Algorithm 1 chose to pick an arm from BiT\u03b4/2 to be played against ai. Note that this definition implies that we have\nN iB = Ni\u2211 n=1 Bin. (8)\nMoreover, by Fact 5 above, we know that with probability 1\u2212 \u03b4/4 we have N iB \u2264 N\u0302 iB := \u2211\nj\u2208BiT\u03b4/2\nN\u0302 \u03b4/4 ij (T ). (9)\nNow, we will use the above high probability bound onN iB to put the following high probability bound onN i: with\nprobability 1\u2212 \u03b4/2 we have N i \u2264 N\u0302 i := 2N\u0302 iB + 2 \u221a N\u0302 iB ln 2K\n\u03b4 .\nTo do so, let us assume that the we have N i > N\u0302 i and consider the first N\u0302 i time-steps after T\u03b4/2 when arm ai was chosen as optimistic Copeland winner and note that by Equation (8) we have\nN\u0302i\u2211 n=1 Bin \u2264 N iB\nand so by Inequality (9) with probability 1 \u2212 \u03b4/4 the left-hand side of the last inequality is bounded by N\u0302 iB: let us denote this event with E . On the other hand, if we apply the Hoeffding bound (cf. Appendix D) to the variables Bi1, . . . , B i N\u0302i , we get\nP ( E \u2227 N i > N\u0302 i ) \u2264 P  N\u0302i\u2211 n=1 Bin < N\u0302 i B  = P\n N\u0302i\u2211 n=1 Bin < N\u0302 i/2\u2212 \u221a N\u0302 iB ln 2K \u03b4 \n\u2264 e \u2212\nA2N\u0302 i B ( ln 2K\u03b4 )2 A2N\u0302 i B + A2 \u221a N\u0302 iB ln\n2K \u03b4 (10)\nTo simplify the last expression in the last chain of inequalities, let us use the notation \u03b1 := N\u0302 iB and \u03b2 := ln 2K \u03b4 . Given this notation, we claim that the following inequality holds if we have \u03b1 \u2265 4 and \u03b2 \u2265 2 (which hold by the assumptions of the theorem):\n\u03b1\u03b22\n\u03b1+ \u221a \u03b1\u03b2 \u2265 \u03b2. (11)\nTo see this, let us multiply both sides by the denominator of the left-hand side of the above inequality:\n\u03b1\u03b22 \u2265 \u03b1\u03b2 +\u221a\u03b1\u03b2. (12)\nTo see why Inequality (12) holds, let us note that the restrictions imposed on \u03b1 and \u03b2 imply the following pair of inequalities, whose sum is equivalent to Inequality (12):\n\u03b1\u03b22 \u2265 2\u03b1\u03b2 + \u03b1\u03b22 \u2265 2\u221a\u03b1\u03b22 = 2\u03b1\u03b22 \u2265 2\u03b1\u03b2 + 2\u221a\u03b1\u03b22\nNow that we know that Inequality (11) holds, we can combine it with Inequality (10) to get\nP ( E \u2227 N i > N\u0302 i ) \u2264 e \u2212 ln 2K \u03b4 = \u03b4\n2K .\nTaking a union over the non-Copeland winning arms, we get\nP (E \u2227 \u2200 i > C, N i > N\u0302 i) > 1\u2212 \u03b4/2.\nSo, given the fact that we have P (E) < \u03b4/4, we know that with probability 1\u2212\u03b4 each non-Copeland winner is selected as optimistic Copeland winner between T\u03b4/2 and T no more than N\u0302 i times."}, {"heading": "H A Scalable Solution to the Copeland Bandit Problem", "text": "In this section, we prove Lemma 14, providing an analysis to the PAC solver of the Copeland winner identification algorithm.\nTo simplify the proof, we begin by solving a slightly easier variant of Lemma 14 where the queries are deterministic. Specifically, rather than having a query to the pair (ai, aj) be an outcome of a Bernoulli r.v. with an expected value of pij , we assume that such a query simply yields the answer to whether pij > 0.5. Clearly, a solution can be obtained using K(K\u22121)/2 many queries but we aim for a solution with query complexity linear in K. In this section we prove the following.\nLemma 21. Given K arms and a parameter , Algorithm 2 finds a (1 + )-approximate best arm with probability at least 1\u2212 \u03b4, by using at most\nlog(K/\u03b4) \u00b7 O ( K log(K) + min { K\n2 ,K2(1\u2212 cpld(a1)) }) many queries. In particular, when there is a Condorcet winner (cpld(a1) = 1) or more generally cpld(a1) = 1 \u2212 O(1/K), an exact solution can be found with probability at least 1\u2212 \u03b4 by using at most\nO (K log(K) log(K/\u03b4))\nmany queries.\nThe idea behind our algorithm is as follows. We provide an unbiased estimator of the normalized Copeland score of arm ai by picking an arm aj uniformly at random and querying the pair (ai, aj). This method allows us to apply proof techniques for the classic MAB problem. These techniques provide a bound on the number of queries dependent on the gaps between the different Copeland scores. Our result is obtained by noticing that there cannot be too many arms with a large Copeland score; the formal statement is given later in Lemma 15. If the Copeland winner has a large Copeland score, i.e., LC is small, then only a small number of arms can be close to optimal. Hence, the main argument of the proof is that the majority of arms can be eliminated quickly and only a handful of arms must be queried many times.\nAs stated above, our algorithm uses as a black box Algorithm 4, an approximate-best-arm identification algorithm for the classical MAB setup. Recall that here, each arm ai has an associated reward \u00b5i and the objective is to identify an arm with the (approximately) largest reward. Without loss of geenrality, we assume that \u00b51 is the maximal reward. The following lemma provides an analysis of Algorithm 4 that is tight for the case where \u00b51 is close to 1. In this case, it is exactly the set of near optimal arms that will be queried many times hence it is important to take into consideration that the random variables associated with near optimal arms have a variance of roughly 1 \u2212 \u00b5i, which can be quite small. This translates to savings in the number of queries to arm ai by a factor of 1 \u2212 \u00b5i compared to an algorithm that does not take the variances into account.\nLemma 22. Algorithm 4 requires as input an error parameter , failure probability \u03b4 and an oracle to k Bernoulli distributions. It outputs, with probability at least 1 \u2212 \u03b4, a (1 + )-approximate best arm, that is an arm ai with corresponding expected reward of \u00b5 \u2265 1\u2212 (1\u2212 \u00b51)(1 + ) with \u00b51 being the maximum expected value among arms. The expected number of queries made by the algorithm is upper bounded by\nO (\u2211\ni (1\u2212 \u00b5i) log(K/(\u03b4\u2206i )) (\u2206 i) 2\n) ,\nwith \u2206 i = max {\u00b51 \u2212 \u00b5i, (1\u2212 \u00b51)}. Moreover, with probability at least 1 \u2212 \u03b4, the number of times arm i will be queried is at most\nO (\n(1\u2212 \u00b5i) log(K/(\u03b4\u2206i )) (\u2206 i) 2\n) .\nWe prove Lemma 22 in Appendix I. For convenience, we denote by \u00b5i the normalized Copeland score of arm ai and \u00b51 the maximal normalized Copeland score. To get an informative translation of the above expression to our setting, let A be the set of arms with normalized Copeland score in (1 \u2212 2(1 \u2212 \u00b51), \u00b51] and let A\u0304 be the set of the other arms. In our setting, this query complexity of Algorithm 4 is upper bounded by\nO 2|A| log(K/\u03b4) (1\u2212 \u00b51) 2 + \u2211 i\u2208A\u0304 log(K/\u03b4)(1\u2212 \u00b5i) (\u00b51 \u2212 \u00b5i)2  , (13) assuming7 \u03b4 < (1\u2212 \u00b51) .\nIt remains to provide an upper bound for the above expression given the structure of the normalized Copeland scores. In particular, we use the results of Lemma 15, repeated here for convenience.\nLemma 15. Let D \u2282 [K] be the set of arms for which cpld(ai) \u2265 1\u2212 d/(K \u2212 1), that is arms that are beaten by at most d arms. Then |D| \u2264 2d+ 1.\nWe bound the left summand in (13):\n2|A| log(K/\u03b4) (1\u2212 \u00b51) 2 \u2264 (4(1\u2212 \u00b51)(K \u2212 1) + 2) log(K/\u03b4) (1\u2212 \u00b51) 2 = O\n( log(K/\u03b4)K\n2\n) . (14)\nWe now bound the right summand in (13). Let i \u2208 A\u0304. According to the definition of A\u0304 it holds that (1 \u2212 \u00b5i) \u2264 2(\u00b51 \u2212 \u00b5i). Hence: \u2211\ni\u2208A\u0304\nlog(K/\u03b4)(1\u2212 \u00b5i) (\u00b51 \u2212 \u00b5i)2 \u2264 \u2211 i\u2208A\u0304 4 log(K/\u03b4) 1\u2212 \u00b5i .\nLemma 23. We have \u2211\ni: \u00b5i<1\n1\n1\u2212 \u00b5i = O(K log(K)).\nProof. Let A\u03c4 be the set of arms for which 2\u03c4 \u2264 1 \u2212 \u00b5i < 2\u03c4+1. According to Lemma 15, we have that |A\u03c4 | \u2264 2\u03c4+2(K \u2212 1) + 1. Other than that, since 1 \u2265 1 \u2212 \u00b5i \u2265 1/(K \u2212 1) for all i > C we have that A\u03c4 = \u2205 for any \u03c4 \u2264 \u2212 log2(K \u2212 1)\u2212 1 and \u03c4 > 0. It follows that:\n\u2211 i>C 1 1\u2212 \u00b5i \u2264 dlog2(K\u22121)e\u2211 `=0 |A`\u2212log2(K\u22121)| 2`\u2212log2(K\u22121) \u2264 dlog2(K\u22121)e\u2211 `=0 22+` + 1 2`\u2212log2(K\u22121)\n\u2264 (dlog2(K \u2212 1)e+ 1) \u00b7 5(K \u2212 1).\nFrom (13), (14) and Lemma 23, we conclude that the total number of queries is bounded by O ( log(K/\u03b4) ( K log(K) + K\n2\n)) .\nIn order to prove Lemma 21, it remains to analyze the case where is extremely small. Specifically, when 2(1\u2212 \u00b51) takes a value smaller than 1/K then the algorithm becomes inefficient in the sense that it queries the same pair more than once. This can be avoided by taking the samples of j when querying the score of arm ai to be uniformly random without replacement. The same arguments hold but are more complex as now the arm pulls are not i.i.d. Nevertheless, the required concentration bounds still hold. The resulting argument is that the number of queries is O\u0303 ( log(1/\u03b4) ( K + K\u03042 )) with \u0304 = max{ , 1/ (\u221a K(1\u2212 \u00b51) ) }. Lemma 21 immediately follows.\nWe are now ready to analyze the stochastic setting.\n7The value of \u03b4 we require is 1/T . If the assumption does not follow in that case, the regret must be linear and all of the statements hold trivially.\nProof of Lemma 14. By querying arm ai we choose a random arm j 6= i and in fact query the pair (ai, aj) sufficiently many times in order to determine whether pij > 0.5 with probability at least 1\u2212\u03b4/K2. Standard concentration bounds show that achieving this requires querying the pair (ai, aj) at most O ( log(K/(\u2206ij\u03b4))\u2206 \u22122 ij ) many times. It follows that a single query to arm ai in the deterministic case translates into an expected number of\nO ( log(KHi/\u03b4)) Hi\nK \u2212 1\n) = O ( log(KH\u221e/\u03b4)H\u221e\nK ) many queries in the stochastic setting. The claim now follows from the bound on the expected number of queries given in Lemma 21."}, {"heading": "I KL-based approximate best arm identification algorithm", "text": "Algorithm 4 solves an approximate best arm identification problem using confidence bounds based on Chernoff\u2019s inequality stated w.r.t the KL-divergence of two random variables. Recall that for two Bernoulli random variables with parameters p, q the KL-divergence from q to p is defined as d(p, q) = (1 \u2212 p) ln((1 \u2212 p)/(1 \u2212 q)) + p ln(p/q) with 0 ln(0) = 0. The building block of Algorithm 4 is the well known Chernoff bound stating that for a Bernoulli random variable with expected value q, the probability of the average of n i.i.d samples from it to be smaller (larger) than p, for p < q (p > q), is bounded by exp(\u2212nd(p, q)).\nAlgorithm 4 KL-best arm identification Input: Access to oracle giving a noisy approximation of the reward of arm i for K arms, success probability \u03b4 > 0,\napproximation parameter > 0 1: for all i \u2208 [K] do 2: T = 1 3: Si \u2190 reward(i) 4: Ii \u2190 [0, 1] 5: end for 6: B \u2190 [K] 7: t\u2190 2 8: while 1\u2212maxi\u2208B min Ii1\u2212maxi\u2208B max Ii > (1 + ) do 9: For all i \u2208 B, Si \u2190 Si + reward(i)\n10: For all i \u2208 B, let Ii = {q \u2208 [0, 1], t \u00b7 d(Sit , q) \u2264 ln(4tK/\u03b4) + 2 ln ln(t)} 11: For all i \u2208 B for which there exist some j \u2208 B with max{q \u2208 Ii} < min{q \u2208 Ij}, remove i from B. 12: t\u2190 t+ 1 13: end while Return: arg maxi\u2208B min Ii.\nProof of Lemma 22. We use an immediate application of the Chernoff-Hoeffding bound\nLemma 24. Fix i \u2208 [K]. Let Eit denote the event that at iteration t, \u00b5i /\u2208 Ii. We have that Pr[Eit ] \u2264 2 \u03b44tK \u00b7 1log(t)2 \u2264 \u03b4 2t log(t)2K .\nLet E denote the union, over all t, i of events Eit . That is, E denotes the event in which there exist some iteration t, and for some arm ai such that \u00b5i /\u2208 Ii. By the above lemma we get that\nPr[E] \u2264 \u2211 t \u2211 i Pr[Eit ] \u2264 K \u221e\u2211 t=2\n\u03b4\n2t log(t)2K \u2264 \u03b4\nIt follows that given that event E did not happen, the algorithm will never eliminate the top arm and furthermore, will output an (1 + )-approximate best arm. We proceed to analyze the total number of pulls per arm, while having a\nseparate analysis for (1+ )-approximate best arms and the other arms. We begin by stating an auxiliary lemma giving explicit bounds for the confidence regions.\nLemma 25. Assume that event E did not occur and let \u03c1 \u2265 0. For a sufficiently large universal constant c we have for any t \u2265 c log(tK/\u03b4)(1\u2212\u00b5i)\u03c12 that max Ii < \u00b5i + \u03c1. Also, for t \u2265 c log(tK/\u03b4)(1\u2212\u00b5i+\u03c1/2) \u03c12 it holds that min Ii > \u00b5\u2212 \u03c1.\nProof. We consider the Taylor series associated with f(x) = d(p + x, p). Since f(0) = f \u2032(0) = 0 it holds that for any x \u2264 1\u2212 p there exists some |x\u2032| \u2264 |x| with\nf(x) = x2f \u2032\u2032(x\u2032) = x2 (p+ x\u2032)(1\u2212 p\u2212 x\u2032) \u2264 2x2 1\u2212 p\nTo prove that max Ii < \u00b5i+\u03c1 we apply the above observation for \u03c1 \u2264 1\u2212\u00b5i (otherwise \u00b5i+\u03c1 > 1 and the claim is trivial) and reach the conclusion that for sufficiently large universal constant c it holds that\nt \u00b7 d(\u00b5i + \u03c1/2, \u00b5i) > log(tK/\u03b4) + 2 log log(tK/\u03b4)\nt \u00b7 d(\u00b5i + \u03c1/2, \u00b5i + \u03c1) > log(tK/\u03b4) + 2 log log(tK/\u03b4) The first inequality dictates that Si/t \u2264 \u00b5i + \u03c1/2. The second inequality dictates that t \u00b7 d(Si/t, \u00b5i + \u03c1) \u2265 d(\u00b5i + \u03c1/2, \u00b5i + \u03c1) is too large in order for \u00b5i + \u03c1 to be an element of Ii.\nThe bound for min Ii is analogous. Since now we have t \u2265 c log(tK/\u03b4)(1\u2212\u00b5i+\u03c1/2)\u03c12 , it holds that\nt \u00b7 d(\u00b5i \u2212 \u03c1/2, \u00b5i) > log(tK/\u03b4) + 2 log log(tK/\u03b4)\nt \u00b7 d(\u00b5i \u2212 \u03c1/2, \u00b5i \u2212 \u03c1) > log(tK/\u03b4) + 2 log log(tK/\u03b4) This means that first, Si/t \u2265 \u00b5i \u2212 \u03c1/2 and second, that t \u00b7 d(Si/t, \u00b5i \u2212 \u03c1) \u2265 d(\u00b5i \u2212 \u03c1/2, \u00b5i \u2212 \u03c1) is too large in order for \u00b5i \u2212 \u03c1 to be an element of Ii.\nLemma 26. Let i be a suboptimal arm, meaning one where \u00b5i \u2264 1\u2212 (1\u2212 \u00b51)(1 + ). Denote by \u2206i its gap \u00b51 \u2212 \u00b5i. If event E does not occur then i is queried at most O ( log ( K \u03b4\u2206i ) vi\n(\u2206i)2\n) many times, where vi = 1\u2212 \u00b5i\nProof. We first notice that as we are assuming that event E did not happen, it must be the case that arm 1 is never eliminated from B. Consider an iteration t such that\nt \u2265 c log(tK/\u03b4)vi (\u2206i)2\n(15)\nfor a sufficiently large c, then according to Lemma 25 it holds that max Ii < \u00b5i + \u2206i/2. Now, since vi = 1 \u2212 \u00b5i \u2265 1\u2212\u00b51+\u2206i/2 we have that for the same t it must be the case that min I1 > \u00b51\u2212\u2206i/2. It follows that min I1 > max Ii and arm ai is eliminated at round t.\nLemma 27. Assume \u2264 1. If event E does not occur then for some sufficiently large universal constant c it holds that when t \u2265 c log(tK/\u03b4)(1\u2212\u00b51) 2 the algorithm terminates.\nProof. Let i be an arbitrary arm. Since\nt \u2265 c log(tK/\u03b4) (1\u2212 \u00b51) 2 = c log(tK/\u03b4)(1\u2212 \u00b5i) (1\u2212 \u00b51)(1\u2212 \u00b5i) 2\nwe get, according to Lemma 25 that\nmax Ii \u2264 \u00b5i +\n3\n\u221a (1\u2212 \u00b5i)(1\u2212 \u00b51)\nIn order to bound \u221a (1\u2212 \u00b5i)(1\u2212 \u00b51) we consider the function f(x) = \u221a v(v + x). Notice that f(0) = v and f \u2032(x) = v 2 \u221a v(v+x) \u2264 12 for x \u2265 0. It follows that for positive x, \u221a v(v + x) \u2264 v + x/2, meaning that\nmax Ii \u2264 \u00b5i + ((1\u2212 \u00b5i) + \u2206i/2)\n3 \u2264 \u00b51 + (1\u2212 \u00b51) 3\nNow, since \u2264 1 we have\nt \u2265 c log(tK/\u03b4)(1\u2212 \u00b51) (1\u2212 \u00b51)2 2 \u2265 (c/2) log(tK/\u03b4)(1\u2212 \u00b51 + (1\u2212 \u00b51)) (1\u2212 \u00b51)2 2\nhence for sufficiently large c we can apply Lemma 25 and obtain\nmin I1 \u2265 \u00b51 \u2212 (1\u2212 \u00b51)\n3\nIt follows that assuming \u2264 1, min I1 \u2265 1\u2212 ( 1\u2212max\ni Ii\n) (1 + )\nmeaning that the algorithm will terminate at iteration t.\nThis concludes the proof of Lemma 22"}], "references": [{"title": "The K-armed dueling bandits problem", "author": ["Y. Yue", "J. Broder", "R. Kleinberg", "T. Joachims"], "venue": "Journal of Computer and System Sciences, 78(5),", "citeRegEx": "1", "shortCiteRegEx": null, "year": 2012}, {"title": "Optimizing search engines using clickthrough data", "author": ["T. Joachims"], "venue": "KDD,", "citeRegEx": "2", "shortCiteRegEx": null, "year": 2002}, {"title": "Beat the mean bandit", "author": ["Y. Yue", "T. Joachims"], "venue": "ICML,", "citeRegEx": "3", "shortCiteRegEx": null, "year": 2011}, {"title": "Balancing exploration and exploitation in listwise and pairwise online learning to rank for information retrieval", "author": ["K. Hofmann", "S. Whiteson", "M. de Rijke"], "venue": "Information Retrieval,", "citeRegEx": "4", "shortCiteRegEx": "4", "year": 2013}, {"title": "Multileaved comparisons for fast online evaluation", "author": ["A. Schuth", "F. Sietsma", "S. Whiteson", "D. Lefortier", "M. de Rijke"], "venue": "In CIKM,", "citeRegEx": "6", "shortCiteRegEx": "6", "year": 2014}, {"title": "Toward predicting the outcome of an A/B experiment for search relevance", "author": ["L. Li", "J. Kim", "I. Zitouni"], "venue": "WSDM,", "citeRegEx": "7", "shortCiteRegEx": null, "year": 2015}, {"title": "Relative confidence sampling for efficient on-line ranker evaluation", "author": ["M. Zoghi", "S. Whiteson", "M. de Rijke", "R. Munos"], "venue": "In WSDM,", "citeRegEx": "8", "shortCiteRegEx": "8", "year": 2014}, {"title": "A new monotonic, clone-independent, reversal symmetric, and Condorcet-consistent single-winner election method", "author": ["M. Schulze"], "venue": "Social Choice and Welfare, 36(2):267\u2013303,", "citeRegEx": "9", "shortCiteRegEx": null, "year": 2011}, {"title": "Generic exploration and k-armed voting bandits", "author": ["T. Urvoy", "F. Clerot", "R. F\u00e9raud", "S. Naamane"], "venue": "ICML,", "citeRegEx": "10", "shortCiteRegEx": null, "year": 2013}, {"title": "Top-k selection based on adaptive sampling of noisy preferences", "author": ["R. Busa-Fekete", "B. Sz\u00f6r\u00e9nyi", "P. Weng", "W. Cheng", "E. H\u00fcllermeier"], "venue": "ICML,", "citeRegEx": "11", "shortCiteRegEx": null, "year": 2013}, {"title": "PAC rank elicitation through adaptive sampling of stochastic pairwise preferences", "author": ["R. Busa-Fekete", "B. Sz\u00f6r\u00e9nyi", "E. H\u00fcllermeier"], "venue": "AAAI,", "citeRegEx": "12", "shortCiteRegEx": null, "year": 2014}, {"title": "Relative upper confidence bound for the K-armed dueling bandits problem", "author": ["M. Zoghi", "S. Whiteson", "R. Munos", "M. de Rijke"], "venue": "In ICML,", "citeRegEx": "13", "shortCiteRegEx": "13", "year": 2014}, {"title": "Online controlled experiments at large scale", "author": ["R. Kohavi", "A. Deng", "B. Frasca", "T. Walker", "Y. Xu", "N. Pohlmann"], "venue": "KDD,", "citeRegEx": "14", "shortCiteRegEx": null, "year": 2013}, {"title": "On the likelihood that one unknown probability exceeds another in view of the evidence of two samples", "author": ["W.R. Thompson"], "venue": "Biometrika, pages 285\u2013294,", "citeRegEx": "15", "shortCiteRegEx": null, "year": 1933}, {"title": "Reducing dueling bandits to cardinal bandits", "author": ["N. Ailon", "Z. Karnin", "T. Joachims"], "venue": "ICML,", "citeRegEx": "16", "shortCiteRegEx": null, "year": 2014}, {"title": "MergeRUCB: A method for large-scale online ranker evaluation", "author": ["M. Zoghi", "S. Whiteson", "M. de Rijke"], "venue": "In WSDM,", "citeRegEx": "17", "shortCiteRegEx": "17", "year": 2015}, {"title": "Iterative ranking from pair-wise comparisons", "author": ["S. Negahban", "S. Oh", "D. Shah"], "venue": "NIPS,", "citeRegEx": "18", "shortCiteRegEx": null, "year": 2012}, {"title": "Contextual dueling bandits", "author": ["M. Dud\u0131\u0301k", "K. Hofmann", "R.E. Schapire", "A. Slivkins", "M. Zoghi"], "venue": "In COLT,", "citeRegEx": "19", "shortCiteRegEx": "19", "year": 2015}, {"title": "Discrete prediction games with arbitrary feedback and loss", "author": ["A. Piccolboni", "C. Schindelhauer"], "venue": "COLT,", "citeRegEx": "20", "shortCiteRegEx": null, "year": 2001}, {"title": "An adaptive algorithm for finite stochastic partial monitoring", "author": ["G. Bart\u00f3k", "N. Zolghadr", "C. Szepesv\u00e1ri"], "venue": "ICML,", "citeRegEx": "21", "shortCiteRegEx": null, "year": 2012}, {"title": "Kullback\u2013leibler upper confidence bounds for optimal sequential allocation", "author": ["O. Capp\u00e9", "A. Garivier", "O. Maillard", "R. Munos", "G. Stoltz"], "venue": "The Annals of Statistics,", "citeRegEx": "22", "shortCiteRegEx": "22", "year": 2013}, {"title": "Multi-armed bandits in metric space", "author": ["R. Kleinberg", "A. Slivkins", "E. Upfa"], "venue": "STOC,", "citeRegEx": "23", "shortCiteRegEx": null, "year": 2008}, {"title": "X-armed bandits", "author": ["S. Bubeck", "R. Munos", "G. Stoltz", "C. Szepesvari"], "venue": "JMLR, 12,", "citeRegEx": "24", "shortCiteRegEx": null, "year": 2011}, {"title": "Gaussian process optimization in the bandit setting: No regret and experimental design", "author": ["N. Srinivas", "A. Krause", "S.M. Kakade", "M. Seeger"], "venue": "ICML,", "citeRegEx": "25", "shortCiteRegEx": null, "year": 2010}, {"title": "Optimistic optimization of a deterministic function without the knowledge of its smoothness", "author": ["R. Munos"], "venue": "NIPS,", "citeRegEx": "26", "shortCiteRegEx": null, "year": 2011}, {"title": "Convergence rates of efficient global optimization algorithms", "author": ["A.D. Bull"], "venue": "JMLR, 12,", "citeRegEx": "27", "shortCiteRegEx": null, "year": 2011}, {"title": "Exponential regret bounds for Gaussian process bandits with deterministic observations", "author": ["N. de Freitas", "A. Smola", "M. Zoghi"], "venue": "In ICML,", "citeRegEx": "28", "shortCiteRegEx": "28", "year": 2012}, {"title": "Stochastic simultaneous optimistic optimization", "author": ["M. Valko", "A. Carpentier", "R. Munos"], "venue": "ICML,", "citeRegEx": "29", "shortCiteRegEx": null, "year": 2013}, {"title": "Interactively optimizing information retrieval systems as a dueling bandits problem", "author": ["Y. Yue", "T. Joachims"], "venue": "ICML,", "citeRegEx": "30", "shortCiteRegEx": null, "year": 2009}, {"title": "Axiomatic foundations for ranking systems", "author": ["A. Altman", "M. Tennenholtz"], "venue": "JAIR,", "citeRegEx": "31", "shortCiteRegEx": null, "year": 2008}, {"title": "Introduction to Information Retrieval", "author": ["C. Manning", "P. Raghavan", "H. Sch\u00fctze"], "venue": "Cambridge University Press,", "citeRegEx": "32", "shortCiteRegEx": null, "year": 2008}, {"title": "How does clickthrough data reflect retrieval quality", "author": ["F. Radlinski", "M. Kurup", "T. Joachims"], "venue": "In CIKM,", "citeRegEx": "33", "shortCiteRegEx": "33", "year": 2008}, {"title": "A probabilistic method for inferring preferences from clicks", "author": ["K. Hofmann", "S. Whiteson", "M. de Rijke"], "venue": "In CIKM", "citeRegEx": "34", "shortCiteRegEx": "34", "year": 2011}, {"title": "An experimental comparison of click position-bias models", "author": ["N. Craswell", "O. Zoeter", "M. Taylor", "B. Ramsey"], "venue": "WSDM \u201908, pages 87\u201394,", "citeRegEx": "35", "shortCiteRegEx": null, "year": 2008}, {"title": "Efficient multiple-click models in web search", "author": ["F. Guo", "C. Liu", "Y. Wang"], "venue": "WSDM \u201909, pages 124\u2013131, New York, NY, USA,", "citeRegEx": "36", "shortCiteRegEx": null, "year": 2009}, {"title": "Fidelity, soundness, and efficiency of interleaved comparison methods", "author": ["K. Hofmann", "S. Whiteson", "M. de Rijke"], "venue": "ACM Transactions on Information Systems,", "citeRegEx": "37", "shortCiteRegEx": "37", "year": 2013}, {"title": "Mathematical games: The paradox of the nontransitive dice and the elusive principle of indifference", "author": ["M. Gardner"], "venue": "Scientific American, 223:110\u2013114,", "citeRegEx": "38", "shortCiteRegEx": null, "year": 1970}, {"title": "A survey of preference-based online learning with bandit algorithms", "author": ["R. Busa-Fekete", "E. H\u00fcllermeier"], "venue": "Algorithmic Learning Theory, pages 18\u201339. Springer,", "citeRegEx": "39", "shortCiteRegEx": null, "year": 2014}, {"title": "Prediction, Learning, and Games", "author": ["N. Cesa-Bianchi", "G. Lugosi"], "venue": "Cambridge University Press,", "citeRegEx": "40", "shortCiteRegEx": null, "year": 2006}], "referenceMentions": [{"referenceID": 0, "context": "1 Introduction The dueling bandit problem [1] arises naturally in domains where feedback is more reliable when given as a pairwise preference (e.", "startOffset": 42, "endOffset": 45}, {"referenceID": 1, "context": "Examples include ranker evaluation [2\u20134] in information retrieval, ad placement and recommender systems.", "startOffset": 35, "endOffset": 40}, {"referenceID": 2, "context": "Examples include ranker evaluation [2\u20134] in information retrieval, ad placement and recommender systems.", "startOffset": 35, "endOffset": 40}, {"referenceID": 3, "context": "Examples include ranker evaluation [2\u20134] in information retrieval, ad placement and recommender systems.", "startOffset": 35, "endOffset": 40}, {"referenceID": 4, "context": "For example, in industrial ranker evaluation [6], when many rankers must be compared, each comparison corresponds to a costly live experiment and thus the potential for failure if no Condorcet winner exists is unacceptable [7].", "startOffset": 45, "endOffset": 48}, {"referenceID": 5, "context": "For example, in industrial ranker evaluation [6], when many rankers must be compared, each comparison corresponds to a costly live experiment and thus the potential for failure if no Condorcet winner exists is unacceptable [7].", "startOffset": 223, "endOffset": 226}, {"referenceID": 7, "context": "The non-existence of the Condorcet winner has been investigated extensively in social choice theory, where numerous definitions have been proposed, without a clear contender for the most suitable resolution [9].", "startOffset": 207, "endOffset": 210}, {"referenceID": 8, "context": ", SAVAGE [10], PBR [11] and RankEl [12], which use some of the notions proposed by social choice theorists, such as the Copeland score or the Borda score to measure the quality of each arm, hence determining what constitutes the best arm (or more generally the top-k arms).", "startOffset": 9, "endOffset": 13}, {"referenceID": 9, "context": ", SAVAGE [10], PBR [11] and RankEl [12], which use some of the notions proposed by social choice theorists, such as the Copeland score or the Borda score to measure the quality of each arm, hence determining what constitutes the best arm (or more generally the top-k arms).", "startOffset": 19, "endOffset": 23}, {"referenceID": 10, "context": ", SAVAGE [10], PBR [11] and RankEl [12], which use some of the notions proposed by social choice theorists, such as the Copeland score or the Borda score to measure the quality of each arm, hence determining what constitutes the best arm (or more generally the top-k arms).", "startOffset": 35, "endOffset": 39}, {"referenceID": 11, "context": "The first algorithm, called Copeland Confidence Bound (CCB), is inspired by the recently proposed Relative Upper Confidence Bound method [13], but modified and extended to address the unique challenges that arise when no Condorcet winner exists.", "startOffset": 137, "endOffset": 141}, {"referenceID": 12, "context": "For example, at Bing, 200 experiments are run concurrently on any given day [14], in which case the duration of the experiment needs to be longer than the age of the universe in nanoseconds before K log T becomes significant in comparison to K.", "startOffset": 76, "endOffset": 80}, {"referenceID": 0, "context": "The K-armed dueling bandit problem [1] is a modification of the K-armed bandit problem [15].", "startOffset": 35, "endOffset": 38}, {"referenceID": 13, "context": "The K-armed dueling bandit problem [1] is a modification of the K-armed bandit problem [15].", "startOffset": 87, "endOffset": 91}, {"referenceID": 8, "context": "Most previous work assumes the existence of a Condorcet winner [10]: an arm, which without loss of generality we label a1, such that p1i > 12 for all i > 1.", "startOffset": 63, "endOffset": 67}, {"referenceID": 6, "context": "However, Condorcet winners do not always exist [8, 13].", "startOffset": 47, "endOffset": 54}, {"referenceID": 11, "context": "However, Condorcet winners do not always exist [8, 13].", "startOffset": 47, "endOffset": 54}, {"referenceID": 0, "context": "3 Related Work Numerous methods have been proposed for the K-armed dueling bandit problem, including Interleaved Filter [1], Beat the Mean [3], Relative Confidence Sampling [8], Relative Upper Confidence Bound (RUCB) [13], Doubler and", "startOffset": 120, "endOffset": 123}, {"referenceID": 2, "context": "3 Related Work Numerous methods have been proposed for the K-armed dueling bandit problem, including Interleaved Filter [1], Beat the Mean [3], Relative Confidence Sampling [8], Relative Upper Confidence Bound (RUCB) [13], Doubler and", "startOffset": 139, "endOffset": 142}, {"referenceID": 6, "context": "3 Related Work Numerous methods have been proposed for the K-armed dueling bandit problem, including Interleaved Filter [1], Beat the Mean [3], Relative Confidence Sampling [8], Relative Upper Confidence Bound (RUCB) [13], Doubler and", "startOffset": 173, "endOffset": 176}, {"referenceID": 11, "context": "3 Related Work Numerous methods have been proposed for the K-armed dueling bandit problem, including Interleaved Filter [1], Beat the Mean [3], Relative Confidence Sampling [8], Relative Upper Confidence Bound (RUCB) [13], Doubler and", "startOffset": 217, "endOffset": 221}, {"referenceID": 14, "context": "MultiSBM [16], and mergeRUCB [17], all of which require the existence of a Condorcet winner, and often come with bounds of the form O(K log T ).", "startOffset": 9, "endOffset": 13}, {"referenceID": 15, "context": "MultiSBM [16], and mergeRUCB [17], all of which require the existence of a Condorcet winner, and often come with bounds of the form O(K log T ).", "startOffset": 29, "endOffset": 33}, {"referenceID": 11, "context": "However, as observed in [13] and Appendix C.", "startOffset": 24, "endOffset": 28}, {"referenceID": 8, "context": "There is another group of algorithms that do not assume the existence of a Condorcet winner, but have bounds of the form O(K2 log T ) in the Copeland setting: Sensitivity Analysis of VAriables for Generic Exploration (SAVAGE) [10], Preference-Based Racing (PBR) [11] and Rank Elicitation (RankEl) [12].", "startOffset": 226, "endOffset": 230}, {"referenceID": 9, "context": "There is another group of algorithms that do not assume the existence of a Condorcet winner, but have bounds of the form O(K2 log T ) in the Copeland setting: Sensitivity Analysis of VAriables for Generic Exploration (SAVAGE) [10], Preference-Based Racing (PBR) [11] and Rank Elicitation (RankEl) [12].", "startOffset": 262, "endOffset": 266}, {"referenceID": 10, "context": "There is another group of algorithms that do not assume the existence of a Condorcet winner, but have bounds of the form O(K2 log T ) in the Copeland setting: Sensitivity Analysis of VAriables for Generic Exploration (SAVAGE) [10], Preference-Based Racing (PBR) [11] and Rank Elicitation (RankEl) [12].", "startOffset": 297, "endOffset": 301}, {"referenceID": 8, "context": "In addition to the above, bounds have been proven for other notions of winners, including Borda [10\u201312], Random Walk [11, 18], and very recently von Neumann [19].", "startOffset": 96, "endOffset": 103}, {"referenceID": 9, "context": "In addition to the above, bounds have been proven for other notions of winners, including Borda [10\u201312], Random Walk [11, 18], and very recently von Neumann [19].", "startOffset": 96, "endOffset": 103}, {"referenceID": 10, "context": "In addition to the above, bounds have been proven for other notions of winners, including Borda [10\u201312], Random Walk [11, 18], and very recently von Neumann [19].", "startOffset": 96, "endOffset": 103}, {"referenceID": 9, "context": "In addition to the above, bounds have been proven for other notions of winners, including Borda [10\u201312], Random Walk [11, 18], and very recently von Neumann [19].", "startOffset": 117, "endOffset": 125}, {"referenceID": 16, "context": "In addition to the above, bounds have been proven for other notions of winners, including Borda [10\u201312], Random Walk [11, 18], and very recently von Neumann [19].", "startOffset": 117, "endOffset": 125}, {"referenceID": 17, "context": "In addition to the above, bounds have been proven for other notions of winners, including Borda [10\u201312], Random Walk [11, 18], and very recently von Neumann [19].", "startOffset": 157, "endOffset": 161}, {"referenceID": 18, "context": "A related setting is that of partial monitoring games [20].", "startOffset": 54, "endOffset": 58}, {"referenceID": 19, "context": "In [21], the authors present problem-dependent bounds from which a regret bound of the formO(K2 log T ) can be deduced for the dueling bandit problem, whereas our work achieves a linear dependence in K.", "startOffset": 3, "endOffset": 7}, {"referenceID": 20, "context": "To this end, we use the KL-based arm-elimination algorithm (a slight modification of Algorithm 2 in [22]) described in Algorithm 4 in Appendix I.", "startOffset": 100, "endOffset": 104}, {"referenceID": 0, "context": "Now that we have the high probability regret bound given in Theorem 11, we can deduce the expected regret result claimed in (1) for \u03b1 > 1, as a corollary by integrating \u03b4 over the interval [0, 1].", "startOffset": 189, "endOffset": 195}, {"referenceID": 21, "context": "Given that both our algorithms utilize confidence bounds to make their choices, we anticipate that continuous-armed UCB-style algorithms like those proposed in [23\u201329] can be combined with our ideas to produce a solution to the continuous-armed Copeland bandit problem that does not rely on the convexity assumptions made by algorithms such as the one proposed in [30].", "startOffset": 160, "endOffset": 167}, {"referenceID": 22, "context": "Given that both our algorithms utilize confidence bounds to make their choices, we anticipate that continuous-armed UCB-style algorithms like those proposed in [23\u201329] can be combined with our ideas to produce a solution to the continuous-armed Copeland bandit problem that does not rely on the convexity assumptions made by algorithms such as the one proposed in [30].", "startOffset": 160, "endOffset": 167}, {"referenceID": 23, "context": "Given that both our algorithms utilize confidence bounds to make their choices, we anticipate that continuous-armed UCB-style algorithms like those proposed in [23\u201329] can be combined with our ideas to produce a solution to the continuous-armed Copeland bandit problem that does not rely on the convexity assumptions made by algorithms such as the one proposed in [30].", "startOffset": 160, "endOffset": 167}, {"referenceID": 24, "context": "Given that both our algorithms utilize confidence bounds to make their choices, we anticipate that continuous-armed UCB-style algorithms like those proposed in [23\u201329] can be combined with our ideas to produce a solution to the continuous-armed Copeland bandit problem that does not rely on the convexity assumptions made by algorithms such as the one proposed in [30].", "startOffset": 160, "endOffset": 167}, {"referenceID": 25, "context": "Given that both our algorithms utilize confidence bounds to make their choices, we anticipate that continuous-armed UCB-style algorithms like those proposed in [23\u201329] can be combined with our ideas to produce a solution to the continuous-armed Copeland bandit problem that does not rely on the convexity assumptions made by algorithms such as the one proposed in [30].", "startOffset": 160, "endOffset": 167}, {"referenceID": 26, "context": "Given that both our algorithms utilize confidence bounds to make their choices, we anticipate that continuous-armed UCB-style algorithms like those proposed in [23\u201329] can be combined with our ideas to produce a solution to the continuous-armed Copeland bandit problem that does not rely on the convexity assumptions made by algorithms such as the one proposed in [30].", "startOffset": 160, "endOffset": 167}, {"referenceID": 27, "context": "Given that both our algorithms utilize confidence bounds to make their choices, we anticipate that continuous-armed UCB-style algorithms like those proposed in [23\u201329] can be combined with our ideas to produce a solution to the continuous-armed Copeland bandit problem that does not rely on the convexity assumptions made by algorithms such as the one proposed in [30].", "startOffset": 160, "endOffset": 167}, {"referenceID": 28, "context": "Given that both our algorithms utilize confidence bounds to make their choices, we anticipate that continuous-armed UCB-style algorithms like those proposed in [23\u201329] can be combined with our ideas to produce a solution to the continuous-armed Copeland bandit problem that does not rely on the convexity assumptions made by algorithms such as the one proposed in [30].", "startOffset": 364, "endOffset": 368}, {"referenceID": 10, "context": "Finally, it is also interesting to expand our results to handle scores other than the Copeland score, such as an insensitive variant of the Copeland score (as in [12]), or completely different notions of winners, such as the Borda, the Random Walk or the von Neumann winners (see, e.", "startOffset": 162, "endOffset": 166}, {"referenceID": 17, "context": ", [19, 31]).", "startOffset": 2, "endOffset": 10}, {"referenceID": 29, "context": ", [19, 31]).", "startOffset": 2, "endOffset": 10}, {"referenceID": 0, "context": "[1] Y.", "startOffset": 0, "endOffset": 3}, {"referenceID": 1, "context": "[2] T.", "startOffset": 0, "endOffset": 3}, {"referenceID": 2, "context": "[3] Y.", "startOffset": 0, "endOffset": 3}, {"referenceID": 3, "context": "[4] K.", "startOffset": 0, "endOffset": 3}, {"referenceID": 4, "context": "[6] A.", "startOffset": 0, "endOffset": 3}, {"referenceID": 5, "context": "[7] L.", "startOffset": 0, "endOffset": 3}, {"referenceID": 6, "context": "[8] M.", "startOffset": 0, "endOffset": 3}, {"referenceID": 7, "context": "[9] M.", "startOffset": 0, "endOffset": 3}, {"referenceID": 8, "context": "[10] T.", "startOffset": 0, "endOffset": 4}, {"referenceID": 9, "context": "[11] R.", "startOffset": 0, "endOffset": 4}, {"referenceID": 10, "context": "[12] R.", "startOffset": 0, "endOffset": 4}, {"referenceID": 11, "context": "[13] M.", "startOffset": 0, "endOffset": 4}, {"referenceID": 12, "context": "[14] R.", "startOffset": 0, "endOffset": 4}, {"referenceID": 13, "context": "[15] W.", "startOffset": 0, "endOffset": 4}, {"referenceID": 14, "context": "[16] N.", "startOffset": 0, "endOffset": 4}, {"referenceID": 15, "context": "[17] M.", "startOffset": 0, "endOffset": 4}, {"referenceID": 16, "context": "[18] S.", "startOffset": 0, "endOffset": 4}, {"referenceID": 17, "context": "[19] M.", "startOffset": 0, "endOffset": 4}, {"referenceID": 18, "context": "[20] A.", "startOffset": 0, "endOffset": 4}, {"referenceID": 19, "context": "[21] G.", "startOffset": 0, "endOffset": 4}, {"referenceID": 20, "context": "[22] O.", "startOffset": 0, "endOffset": 4}, {"referenceID": 21, "context": "[23] R.", "startOffset": 0, "endOffset": 4}, {"referenceID": 22, "context": "[24] S.", "startOffset": 0, "endOffset": 4}, {"referenceID": 23, "context": "[25] N.", "startOffset": 0, "endOffset": 4}, {"referenceID": 24, "context": "[26] R.", "startOffset": 0, "endOffset": 4}, {"referenceID": 25, "context": "[27] A.", "startOffset": 0, "endOffset": 4}, {"referenceID": 26, "context": "[28] N.", "startOffset": 0, "endOffset": 4}, {"referenceID": 27, "context": "[29] M.", "startOffset": 0, "endOffset": 4}, {"referenceID": 28, "context": "[30] Y.", "startOffset": 0, "endOffset": 4}, {"referenceID": 29, "context": "[31] A.", "startOffset": 0, "endOffset": 4}, {"referenceID": 30, "context": "[32] C.", "startOffset": 0, "endOffset": 4}, {"referenceID": 31, "context": "[33] F.", "startOffset": 0, "endOffset": 4}, {"referenceID": 32, "context": "[34] K.", "startOffset": 0, "endOffset": 4}, {"referenceID": 33, "context": "[35] N.", "startOffset": 0, "endOffset": 4}, {"referenceID": 34, "context": "[36] F.", "startOffset": 0, "endOffset": 4}, {"referenceID": 35, "context": "[37] K.", "startOffset": 0, "endOffset": 4}, {"referenceID": 36, "context": "[38] M.", "startOffset": 0, "endOffset": 4}, {"referenceID": 37, "context": "[39] R.", "startOffset": 0, "endOffset": 4}, {"referenceID": 38, "context": "[40] N.", "startOffset": 0, "endOffset": 4}, {"referenceID": 30, "context": "The first is a 5-armed problem arising from ranker evaluation in the field of information retrieval (IR) [32].", "startOffset": 105, "endOffset": 109}, {"referenceID": 2, "context": "All three experiments follow the experimental approach in [3, 13] and use the given preference matrix to simulate comparisons between each pair of arms (ai, aj) by drawing samples from Bernoulli random variables with mean pij .", "startOffset": 58, "endOffset": 65}, {"referenceID": 11, "context": "All three experiments follow the experimental approach in [3, 13] and use the given preference matrix to simulate comparisons between each pair of arms (ai, aj) by drawing samples from Bernoulli random variables with mean pij .", "startOffset": 58, "endOffset": 65}, {"referenceID": 11, "context": "We compare our two proposed algorithms against the state of the art K-armed dueling bandit algorithm, RUCB [13], and Copeland SAVAGE, PBR and RankEl.", "startOffset": 107, "endOffset": 111}, {"referenceID": 30, "context": "The first experiment uses a 5-armed problem arising from ranker evaluation in the field of information retrieval (IR) [32], detailed in Appendix B.", "startOffset": 118, "endOffset": 122}, {"referenceID": 8, "context": "We omit SAVAGE, PBR and RankEl from this experiment because they scale poorly in the number of arms [10\u201312].", "startOffset": 100, "endOffset": 107}, {"referenceID": 9, "context": "We omit SAVAGE, PBR and RankEl from this experiment because they scale poorly in the number of arms [10\u201312].", "startOffset": 100, "endOffset": 107}, {"referenceID": 10, "context": "We omit SAVAGE, PBR and RankEl from this experiment because they scale poorly in the number of arms [10\u201312].", "startOffset": 100, "endOffset": 107}, {"referenceID": 31, "context": "One effective way to achieve this is to use interleaved comparisons [33], which interleave the ranked lists of documents proposed by two rankers and present the resulting list to the user, whose subsequent click feedback is used to infer a noisy preference for one of the rankers.", "startOffset": 68, "endOffset": 72}, {"referenceID": 3, "context": "The ranker evaluation task in this context corresponds to determining which single feature constitutes the best ranker [4].", "startOffset": 119, "endOffset": 122}, {"referenceID": 32, "context": "To compare a pair of rankers, we use probabilistic interleave (PI) [34], a recently developed method for interleaved comparisons.", "startOffset": 67, "endOffset": 71}, {"referenceID": 32, "context": "To model the user\u2019s click behavior on the resulting interleaved lists, we employ a probabilistic user model [34, 35] that uses as input the manual labels (classifying documents as relevant or not for given queries) provided with the MSLR dataset.", "startOffset": 108, "endOffset": 116}, {"referenceID": 33, "context": "To model the user\u2019s click behavior on the resulting interleaved lists, we employ a probabilistic user model [34, 35] that uses as input the manual labels (classifying documents as relevant or not for given queries) provided with the MSLR dataset.", "startOffset": 108, "endOffset": 116}, {"referenceID": 34, "context": "Queries are sampled randomly and clicks are generated probabilistically by conditioning on these assessments in a way that resembles the behavior of an actual user [36].", "startOffset": 164, "endOffset": 168}, {"referenceID": 35, "context": "Specifically, we employ an informational click model in our ranker evaluation experiments [37].", "startOffset": 90, "endOffset": 94}, {"referenceID": 35, "context": "The informational click model is one of the three click models utilized in the ranker evaluation literature, along with the perfect and navigational click models [37].", "startOffset": 162, "endOffset": 166}, {"referenceID": 2, "context": "Following [3, 13], we first use the above approach to estimate the comparison probabilities pij for each pair of rankers and then use these probabilities to simulate comparisons between rankers.", "startOffset": 10, "endOffset": 17}, {"referenceID": 11, "context": "Following [3, 13], we first use the above approach to estimate the comparison probabilities pij for each pair of rankers and then use these probabilities to simulate comparisons between rankers.", "startOffset": 10, "endOffset": 17}, {"referenceID": 11, "context": "We hypothesize that this is because the informational click model explores more of the list of ranked documents than the navigational click model, which was used in [13], and so it is more likely to encounter non-transitivity phenomena of the sort described in [38].", "startOffset": 165, "endOffset": 169}, {"referenceID": 36, "context": "We hypothesize that this is because the informational click model explores more of the list of ranked documents than the navigational click model, which was used in [13], and so it is more likely to encounter non-transitivity phenomena of the sort described in [38].", "startOffset": 261, "endOffset": 265}, {"referenceID": 17, "context": "The Copeland winner, as discussed in this paper, and the von Neumann winner [19] satisfy this property, while the Borda (a.", "startOffset": 76, "endOffset": 80}, {"referenceID": 37, "context": "winners [39] do not.", "startOffset": 8, "endOffset": 12}, {"referenceID": 17, "context": "In the case of the von Neumann winner, which is defined as a probability distribution over the set of arms [19], we used the support of the distribution (i.", "startOffset": 107, "endOffset": 111}, {"referenceID": 0, "context": ", XN with common range [0, 1] satisfying E[Xn|X1, .", "startOffset": 23, "endOffset": 29}, {"referenceID": 11, "context": "Here, we will quote a useful Lemma that we will refer to repeatedly in our proofs: Lemma 17 (Lemma 1 in [13]).", "startOffset": 104, "endOffset": 108}, {"referenceID": 0, "context": "Algorithm 4 KL-best arm identification Input: Access to oracle giving a noisy approximation of the reward of arm i for K arms, success probability \u03b4 > 0, approximation parameter > 0 1: for all i \u2208 [K] do 2: T = 1 3: Si \u2190 reward(i) 4: Ii \u2190 [0, 1] 5: end for 6: B \u2190 [K] 7: t\u2190 2 8: while 1\u2212maxi\u2208B min Ii 1\u2212maxi\u2208B max Ii > (1 + ) do 9: For all i \u2208 B, Si \u2190 Si + reward(i) 10: For all i \u2208 B, let Ii = {q \u2208 [0, 1], t \u00b7 d(i t , q) \u2264 ln(4tK/\u03b4) + 2 ln ln(t)} 11: For all i \u2208 B for which there exist some j \u2208 B with max{q \u2208 Ii} < min{q \u2208 Ij}, remove i from B.", "startOffset": 239, "endOffset": 245}, {"referenceID": 0, "context": "Algorithm 4 KL-best arm identification Input: Access to oracle giving a noisy approximation of the reward of arm i for K arms, success probability \u03b4 > 0, approximation parameter > 0 1: for all i \u2208 [K] do 2: T = 1 3: Si \u2190 reward(i) 4: Ii \u2190 [0, 1] 5: end for 6: B \u2190 [K] 7: t\u2190 2 8: while 1\u2212maxi\u2208B min Ii 1\u2212maxi\u2208B max Ii > (1 + ) do 9: For all i \u2208 B, Si \u2190 Si + reward(i) 10: For all i \u2208 B, let Ii = {q \u2208 [0, 1], t \u00b7 d(i t , q) \u2264 ln(4tK/\u03b4) + 2 ln ln(t)} 11: For all i \u2208 B for which there exist some j \u2208 B with max{q \u2208 Ii} < min{q \u2208 Ij}, remove i from B.", "startOffset": 400, "endOffset": 406}], "year": 2015, "abstractText": "A version of the dueling bandit problem is addressed in which a Condorcet winner may not exist. Two algorithms are proposed that instead seek to minimize regret with respect to the Copeland winner, which, unlike the Condorcet winner, is guaranteed to exist. The first, Copeland Confidence Bound (CCB), is designed for small numbers of arms, while the second, Scalable Copeland Bandits (SCB), works better for large-scale problems. We provide theoretical results bounding the regret accumulated by CCB and SCB, both substantially improving existing results. Such existing results either offer bounds of the formO(K log T ) but require restrictive assumptions, or offer bounds of the formO(K log T ) without requiring such assumptions. Our results offer the best of both worlds: O(K log T ) bounds without restrictive assumptions.", "creator": "LaTeX with hyperref package"}}}