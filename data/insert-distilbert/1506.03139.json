{"id": "1506.03139", "review": {"conference": "ACL", "VERSION": "v1", "DATE_OF_SUBMISSION": "10-Jun-2015", "title": "Robust Subgraph Generation Improves Abstract Meaning Representation Parsing", "abstract": "the applied abstract meaning representation ( amr ) result is a representation for open - domain rich semantics, with potential use in fields like event extraction and machine translation. node generation, therefore typically done using constructing a simple dictionary nodes lookup, is currently an important limiting process factor in amr parsing. usually we propose a small set of actions that derive amr subgraphs by transformations on spans of xml text, which allows for more robust formal learning of this stage. while our set of construction theory actions generalize radically better than the previous programming approach, and can be learned with a simple classifier. we improve on the previous state - of - the - art result for amr parsing, greatly boosting end - to - end performance by 3 f $ _ 1 $ on both the latest ldc2013e117 and ldc2014t12 + datasets.", "histories": [["v1", "Wed, 10 Jun 2015 00:40:12 GMT  (585kb,D)", "http://arxiv.org/abs/1506.03139v1", "To appear in ACL 2015"]], "COMMENTS": "To appear in ACL 2015", "reviews": [], "SUBJECTS": "cs.CL", "authors": ["keenon werling", "gabor angeli", "christopher d manning"], "accepted": true, "id": "1506.03139"}, "pdf": {"name": "1506.03139.pdf", "metadata": {"source": "CRF", "title": "Robust Subgraph Generation Improves Abstract Meaning Representation Parsing", "authors": ["Keenon Werling", "Gabor Angeli", "Christopher D. Manning"], "emails": ["keenon@stanford.edu", "angeli@stanford.edu", "manning@stanford.edu"], "sections": [{"heading": "1 Introduction", "text": "The Abstract Meaning Representation (AMR) (Banarescu et al., 2013) is a rich, graph-based language for expressing semantics over a broad domain. The formalism is backed by a large datalabeling effort, and it holds promise for enabling a new breed of natural language applications ranging from semantically aware MT to rich broaddomain QA over text-based knowledge bases. Figure 1 shows an example AMR for \u201che gleefully ran to his dog Rover,\u201d and we give a brief introduction to AMR in Section 2. This paper focuses on AMR parsing, the task of mapping a natural language sentence into an AMR graph.\nWe follow previous work (Flanigan et al., 2014) in dividing AMR parsing into two steps. The first step is concept identification, which generates AMR nodes from text, and which we\u2019ll refer to as NER++ (Section 3.1). The second step is relation\nating name\n:op1\u2212\u2212\u2192 \u201cRover\u201d) significantly improves end-to-end performance.\nidentification, which adds arcs to link these nodes into a fully connected AMR graph, which we\u2019ll call SRL++ (Section 3.2).\nWe observe that SRL++ is not the hard part of AMR parsing; rather, much of the difficulty in AMR is generating high accuracy concept subgraphs from the NER++ component. For example, when the existing AMR parser JAMR (Flanigan et al., 2014) is given a gold NER++ output, and must only perform SRL++ over given subgraphs it scores 80 F1 \u2013 nearly the inter-annotator agreement of 83 F1, and far higher than its end to end accuracy of 59 F1.\nSRL++ within AMR is relatively easy given a perfect NER++ output, because so much pressure is put on the output of NER++ to carry meaningful information. For example, there\u2019s a strong typecheck feature for the existence and type of any arc just by looking at its end-points, and syntactic dependency features are very informative for removing any remaining ambiguity. If a system is con-\nar X\niv :1\n50 6.\n03 13\n9v 1\n[ cs\n.C L\n] 1\n0 Ju\nn 20\n15\nsidering how to link the node run-01 in Figure 1, the verb-sense frame for \u201crun-01\u201d leaves very little uncertainty for what we could assign as an ARG0 arc. It must be a noun, which leaves either he or dog, and this is easily decided in favor of he by looking for an nsubj arc in the dependency parse.\nThe primary contribution of this paper is a novel approach to the NER++ task, illustrated in Figure 2. We notice that the subgraphs aligned to lexical items can often be generated from a small set of generative actions which generalize across tokens. For example, most verbs generate an AMR node corresponding to the verb sense of the appropriate PropBank frame \u2013 e.g., run generates run-01 in Figure 1. This allows us to frame the NER++ task as the task of classifying one of a small number of actions for each token, rather than choosing a specific AMR subgraph for every token in the sentence.\nOur approach to the end-to-end AMR parsing task is therefore as follows: we define an action space for generating AMR concepts, and create a classifier for classifying lexical items into one of these actions (Section 4). This classifier is trained from automatically generated alignments between the gold AMR trees and their associated sentences (Section 5), using an objective which favors alignment mistakes which are least harmful to the NER++ component. Finally, the concept subgraphs are combined into a coherent AMR parse using the maximum spanning connected subgraph\nalgorithm of Flanigan et al. (2014). We show that our approach provides a large boost to recall over previous approaches, and that end to end performance is improved from 59 to 62 smatch (an F1 measure of correct AMR arcs; see Cai and Knight (2013)) when incorporated into the SRL++ parser of Flanigan et al. (2014). When evaluating the performance of our action classifier in isolation, we obtain an action classification accuracy of 84.1%."}, {"heading": "2 The AMR Formalism", "text": "AMR is a language for expressing semantics as a rooted, directed, and potentially cyclic graph, where nodes represent concepts and arcs are relationships between concepts. AMR is based on neo-Davidsonian semantics, (Davidson, 1967; Parsons, 1990). The nodes (concepts) in an AMR graph do not have to be explicitly grounded in the source sentence, and while such an alignment is often generated to train AMR parsers, it is not provided in the training corpora. The semantics of nodes can represent lexical items (e.g., dog), sense tagged lexical items (e.g., run-01), type markers (e.g., date-entity), and a host of other phenomena.\nThe edges (relationships) in AMR describe one of a number of semantic relationships between concepts. The most salient of these is semantic role labels, such as the ARG0 and destination arcs in Figure 2. However, often these arcs define\na semantics more akin to syntactic dependencies (e.g., mod standing in for adjective and adverbial modification), or take on domain-specific meaning (e.g., the month, day, and year arcs of a dateentity).\nTo introduce AMR and its notation in more detail, we\u2019ll unpack the translation of the sentence \u201che gleefully ran to his dog Rover.\u201d We show in Figure 1 the interpretation of this sentence as an AMR graph.\nThe root node of the graph is labeled run-01, corresponding to the PropBank (Palmer et al., 2005) definition of the verb ran. run-01 has an outgoing ARG0 arc to a node he, with the usual PropBank semantics. The outgoing mod edge from run-01 to glee takes a general purpose semantics corresponding to adjective, adverbial, or other modification of the governor by the dependent. We note that run-01 has a destination arc to dog. The label for destination is taken from a finite set of special arc sense tags similar to the preposition senses found in (Srikumar, 2013). The last portion of the figure parses dog to a node which serves as a type marker similar to named entity types, and Rover into the larger subgraph indicating a concept with name \u201cRover.\u201d"}, {"heading": "2.1 AMR Subgraphs", "text": "The mapping from tokens of a sentence to AMR nodes is not one-to-one. A single token or span of tokens can generate a subgraph of AMR consisting of multiple nodes. These subgraphs can logically be considered the expression of a single concept, and are useful to treat as such (e.g., see Section 3.1).\nMany of these multi-node subgraphs capture structured data such as time expressions, as in Fig-\nure 4. In this example, a date-entity node is created to signify that this cluster of nodes is part of a structured sub-component representing a date, where the nodes and arcs within the component have specific semantics. This illustrates a broader recurring pattern in AMR: an artificial node may, based on its title, have expected children with special semantics. A particularly salient example of this pattern is the name node (see \u201cRover\u201d in Figure 1) which signifies that all outgoing arcs with label op comprise the tokens of a name object.\nThe ability to decouple the meaning representation of a lexical item from its surface form allows for rich semantic interpretations of certain concepts in a sentence. For example, the token sailor is represented in Figure 3 by a concept graph representing a person who performs the action sail01. Whereas often the AMR node aligned to a span of text is a straightforward function of the text, these cases remain difficult to capture in a principled way beyond memorizing mappings between tokens and subgraphs."}, {"heading": "3 Task Decomposition", "text": "To the best of our knowledge, the JAMR parser is the only published end-to-end AMR parser at the time of publication. An important insight in JAMR is that AMR parsing can be broken into two distinct tasks: (1) NER++ (concept identification): the task of interpreting what entities are being referred to in the text, realized by generating the best AMR subgraphs for a given set of tokens, and (2) SRL++ (relation identification): the task of discovering what relationships exist between entities, realized by taking the disjoint subgraphs generated by NER++ and creating a fullyconnected graph. We describe both tasks in more\ndetail below."}, {"heading": "3.1 NER++", "text": "Much of the difficulty of parsing to AMR lies in generating local subgraphs representing the meaning of token spans. For instance, the formalism implicitly demands rich notions of NER, lemmatization, word sense disambiguation, number normalization, and temporal parsing; among others. To illustrate, a correct parse of the sentence in Figure 2 requires lemmatization (gleefully \u2192 glee), word sense tagging (run\u2192 run-01), and open domain NER (i.e., Rover), Furthermore, many of the generated subgraphs (e.g., sailor in Figure 3) have rich semantics beyond those produced by standard NLP systems.\nFormally, NER++ is the task of generating a disjoint set of subgraphs representing the meanings of localized spans of words in the sentence. For NER++, JAMR uses a simple Viterbi sequence model to directly generate AMR-subgraphs from memorized mappings of text spans to subgraphs. This paper\u2019s main contribution, presented in Section 4, is to make use of generative actions to generate these subgraphs, rather than appealing to a memorized mapping."}, {"heading": "3.2 SRL++", "text": "The second stage of the AMR decomposition consists of generating a coherent graph from the set of disjoint subgraphs produced by NER++. Whereas NER++ produces subgraphs whose arcs encode domain-specific semantics (e.g., month), the arcs in SRL++ tend to have generally applicable semantics. For example, the many arcs encode conventional semantic roles (e.g., ARG0 and destination in Figure 2), or a notion akin to syntactic dependencies (e.g., mod and poss in Figure 2). For SRL++, JAMR uses a variation of the maximum spanning connected graph algorithm augmented by dual decomposition to impose linguistically motivated constraints on a maximum likelihood objective."}, {"heading": "4 A Novel NER++ Method", "text": "The training sets currently available for AMR are not large. To illustrate, 38% of the words in the LDC2014E113 dev set are unseen during training time. With training sets this small, memorizationbased approaches are extremely brittle. We remove much of the necessity to memorize map-\npings in NER++ by partitioning the AMR subgraph search space in terms of the actions needed to derive a node from its aligned token. At test time we do a sequence labeling of input tokens with these actions, and then deterministically derive the AMR subgraphs from spans of tokens by applying the transformation decreed by their actions. We explain in Section 4.1 how exactly we manage this partition, and in Section 4.3 how we create training data from existing resources to setup and train an action-type classifier."}, {"heading": "4.1 Derivation actions", "text": "We partition the AMR subgraph space into a set of 9 actions, each corresponding to an action that will be taken by the NER++ system if a token receives this classification.\nIDENTITY This action handles the common case that the title of the node corresponding to a token is identical to the source token. To execute the action, we take the lowercased version of the token to be the title of the corresponding node.\nNONE This action corresponds to ignoring this token, in the case that the node should not align to any corresponding AMR fragment.\nVERB This action captures the verb-sense disambiguation feature of AMR. To execute on a token, we find the most similar verb in PropBank based on Jaro-Winkler distance, and adopt its most frequent sense. This serves as a reasonable baseline for word sense disambiguation, although of course accuracy would be expected to improve if a sophisticated system were incorporated.\nVALUE This action interprets a token by its integer value. The AMR representation is sensitive to the difference between a node with a title of 5 (the integer value) and \u201c5\u201d or \u201cfive\u201d \u2013 the string value. This is a rare action, but is nonetheless distinct from any of the other classes. We execute this action by extracting an integer value with a regex based number normalizer, and using the result as the title of the generated node.\nLEMMA AMR often performs stemming and part-of-speech transformations on the source token in generating a node. For example, we get glee from gleefully. We capture this by a LEMMA action, which is executed by using the lemma of the source token as the generated node title. Note that this does not capture all lemmatizations, as\nthere are often discrepancies between the lemma generated by the lemmatizer and the correct AMR lemma.\nNAME AMR often references names with a special structured data type: the name construction. For example, Rover in Figure 1. We can capture this phenomenon on unseen names by attaching a created name node to the top of a span.\nPERSON A variant of the NAME action, this action produces a subgraph identical to the NAME action, but adds a node person as a parent. This is, in effect, a name node with an implicit entity type of person. Due to discrepancies between the output of our named entity tagger and the richer AMR named entity ontology, we only apply this tag to the person named entity tag.\nDATE The most frequent of the structured data type in the data, after name, is the date-entity construction (for an example see Figure 4). We deterministically take the output of SUTime (Chang and Manning, 2012) and convert it into the dateentity AMR representation.\nDICT This class serves as a back-off for the other classes, implementing an approach similar to Flanigan et al. (2014). In particular, we memorize a simple mapping from spans of text (such as sailor) to their corresponding most frequently aligned AMR subgraphs in the training data (i.e., the graph in Figure 3). See Section 5 for details on the alignment process. At test time we can do a lookup in this dictionary for any element that gets labeled with a DICT action. If an entry is not found in the mapping, we back off to the second most probable class proposed by the classifier.\nIt is worth observing at this point that our actions derive much of their power from the similarity between English words and their AMR counterparts; creating an analogue of these actions for other languages remains an open problem."}, {"heading": "4.2 Action Reliability", "text": "In many cases, multiple actions could yield the same subgraph when applied to a node. In this section we introduce a method for resolving this ambiguity based on comparing the reliability with which actions generate the correct subgraph, and discuss implications.\nEven given a perfect action classification for a token, certain action executions can introduce\nerrors. Some of our actions are entirely deterministic in their conversion from the word to the AMR subgraph (e.g., IDENTITY), but others are prone to making mistakes in this conversion (e.g., VERB, DICT). We define the notion of action reliability as the probability of deriving the correct node from a span of tokens, conditioned on having chosen the correct action.\nTo provide a concrete example, our dictionary lookup classifier predicts the correct AMR subgraph 67% of the time on the dev set. We therefore define the reliability of the DICT action as 0.67. In contrast to DICT, correctly labeling a node as IDENTITY, NAME, PERSON, and NONE have action reliability of 1.0, since there is no ambiguity in the node generation once one of those actions have been selected, and we are guaranteed to generate the correct node given the correct action.\nWe can therefore construct a hierarchy of reliability (Figure 5) \u2013 all else being equal, we prefer to generate actions from higher in the hierarchy, as they are more likely to produce the correct subgraph. This hierarchy is useful in resolving ambiguity throughout our system. During the creation of training data for our classifier (Section 4.3) from our aligner, when two actions could both generate the aligned AMR node we prefer the more reliable one. In turn, in our aligner we bias alignments towards those which generating more reliable action sequences as training data (see Section 5).\nThe primary benefit of this action-based NER++ approach is that we can reduce the usage of low reliability actions, like DICT. The approach taken in Flanigan et al. (2014) can be\nthought of as equivalent to classifying every token as the DICT action.\nWe analyze the empirical distribution of actions in our automatically aligned corpus in Table 1. The cumulative frequency of the non-DICT actions is striking: we can generate 74% of the tokens with high reliability (p \u2265 0.9) actions. In this light, it is unsurprising that our results demonstrate a large gain in recall on the test set."}, {"heading": "4.3 Training the Action Classifier", "text": "Given a set of AMR training data, in the form of (graph, sentence) pairs, we first induce alignments from the graph nodes to the sentence (see Section 5). Formally, for every node ni in the AMR graph, alignment gives us some token sj (at the jth index in the sentence) that we believe generated the node ni.\nThen, for each action type, we can ask whether or not that action type is able to take token sj and correctly generate ni. For concreteness, imagine the token sj is running, and the node ni has the title run-01. The two action types we find that are able to correctly generate this node are DICT and VERB. We choose the most reliable action type of those available (see Figure 5) to generate the observed node \u2013 in this case, VERB.\nIn cases where an AMR subgraph is generated from multiple tokens, we assign the action label to each token which generates the subgraph. Each of these tokens are added to the training set; at test time, we collapse sequences of adjacent identical action labels, and apply the action once to the resulting token span.\nInducing the most reliable action (according to the alignments) for every token in the training corpus provides a supervised training set for our action classifier, with some noise introduced by the automatically generated alignments. We then train a simple maxent classifier1 to make action decisions at each node. At test time, the classifier takes as input a pair \u3008i, S\u3009, where i is the index of the token in the input sentence, and S is a sequence tokens representing the source sentence. It then uses the features in Table 2 to predict the actions to take at that node."}, {"heading": "5 Automatic Alignment of Training Data", "text": "AMR training data is in the form of bi-text, where we are given a set of (sentence, graph) pairs, with no explicit alignments between them. We would like to induce a mapping from each node in the AMR graph to the token it represents. It is perfectly possible for multiple nodes to align to the same token \u2013 this is the case with sailors, for instance.\nIt is not possible, within our framework, to represent a single node being sourced from multiple tokens. Note that a subgraph can consist of many individual nodes; in cases where a subgraph should align to multiple tokens, we generate an alignment from the subgraph\u2019s nodes to the associated tokens in the sentence. It is empirically very rare for a subgraph to have more nodes than the token span it should align to.\nThere have been two previous attempts at producing automatic AMR alignments. The first was\n1A sequence model was tried and showed no improvement over a simple maxent classifier.\npublished as a component of JAMR, and used a rule-based approach to perform alignments. This was shown to work well on the sample of 100 hand-labeled sentences used to develop the system. Pourdamghani et al. (2014) approached the alignment problem in the framework of the IBM alignment models. They rendered AMR graphs as text, and then used traditional machine translation alignment techniques to generate an alignment.\nWe propose a novel alignment method, since our decomposition of the AMR node generation process into a set of actions provides an additional objective for the aligner to optimize, in addition to the accuracy of the alignment itself. We would like to produce the most reliable sequence of actions for the NER++ model to train from, where reliable is taken in the sense defined in Section 4.2. To give an example, a sequence of all DICT actions could generate any AMR graph, but is very low reliability. A sequence of all IDENTITY actions could only generate one set of nodes, but does it with absolute certainty.\nWe formulate this objective as a Boolean LP problem. Let Q be a matrix in {0, 1}|N|\u00d7|S| of Boolean constrained variables, where N are the nodes in an AMR graph, and S are the tokens in the sentence. The meaning of Qi,j = 1 can be interpreted as node ni having being aligned to token sj . Furthermore, let V be a matrix T |N|\u00d7|S|, where T is the set of NER++ actions from Section 4. Each matrix element Vi,j is assigned the most reliable action which would generate node ni from token sj . We would like to maximize the probability of the actions collectively generating a perfect set of nodes. This can be formulated linearly by maximizing the log-likelihood of the actions. Let the function REL(l) be the reliability of action l (probability of generating intended node). Our objective can then be formulated as follows:\nmax Q \u2211 i,j Qi,j [log(REL(Vi,j)) + \u03b1Ei,j ] (1)\ns.t. \u2211 j Qi,j = 1 \u2200i (2)\nQk,j +Ql,j \u2264 1 \u2200k, l, j; nk = nl (3)\nwhere E is the Jaro-Winkler similarity between the title of the node i and the token j, \u03b1 is a hyperparameter (set to 0.8 in our experiments), and the operator = denotes that two nodes in the AMR graph are both not adjacent and do not have the same title.\nThe constraint (2), combined with the binary constraint on Q, ensures that every node in the graph is aligned to exactly one token in the source sentence. The constraint (3) ensures that only adjacent nodes or nodes that share a title can refer to the same token.\nThe objective value penalizes alignments which map to the unreliable DICT tag, while rewarding alignments with high overlap between the title of the node and the token. Note that most incorrect alignments fall into the DICT class by default, as no other action could generate the correct AMR subgraph. Therefore, if there exists an alignment that would consume the token using another action, the optimization prefers that alignment. The Jaro-Winkler similarity term, in turn, serves as a tie-breaker between equally (un)reliable alignments.\nThere are many packages which can solve this Boolean LP efficiently. We used Gurobi (Gurobi Optimization, 2015). Given a matrix Q that maximizes our objective, we can decode our solved alignment as follows: for each i, align ni to the j s.t. Qi,j = 1. By our constraints, exactly one such j must exist."}, {"heading": "6 Related Work", "text": "Prior work in AMR and related formalisms include Jones et al. (2012), and Flanigan et al. (2014). Jones et al. (2012), motivated by applications in Machine Translation, proposed a graphical semantic meaning representation that predates AMR, but is intimately related. They propose a hyper-edge replacement grammar (HRG) approach to parsing into and out of this graphical semantic form. Flanigan et al. (2014) forms the basis of the approach of this paper. Their system introduces the two-stage approach we use: they implement a rule-based alignment to learn a mapping from tokens to subgraphs, and train a variant of a maximum spanning tree parser adapted to graphs and with additional constraints for their relation identifications (SRL++) component. Wang et al. (2015) uses a transition based algorithm to transform dependency trees into AMR parses. They achieve 64/62/63 P/R/F1 with contributions roughly orthogonal to our own. Their transformation action set could be easily augmented by the robust subgraph generation we propose here, although we leave this to future work.\nBeyond the connection of our work with Flani-\ngan et al. (2014), we note that the NER++ component of AMR encapsulates a number of lexical NLP tasks. These include named entity recognition (Nadeau and Sekine, 2007; Finkel et al., 2005), word sense disambiguation (Yarowsky, 1995; Banerjee and Pedersen, 2002), lemmatization, and a number of more domain specific tasks. For example, a full understanding of AMR requires normalizing temporal expressions (Verhagen et al., 2010; Stro\u0308tgen and Gertz, 2010; Chang and Manning, 2012).\nIn turn, the SRL++ facet of AMR takes many insights from semantic role labeling (Gildea and Jurafsky, 2002; Punyakanok et al., 2004; Srikumar, 2013; Das et al., 2014) to capture the relations between verbs and their arguments. In addition, many of the arcs in AMR have nearly syntactic interpretations (e.g., mod for adjective/adverb modification, op for compound noun expressions). These are similar to representations used in syntactic dependency parsing (de Marneffe and Manning, 2008; McDonald et al., 2005; Buchholz and Marsi, 2006).\nMore generally, parsing to a semantic representation is has been explored in depth for when the representation is a logical form (Kate et al., 2005; Zettlemoyer and Collins, 2005; Liang et al., 2011). Recent work has applied semantic parsing techniques to representations beyond lambda calculus expressions. For example, work by Berant et al. (2014) parses text into a formal representation of a biological process. Hosseini et al. (2014) solves algebraic word problems by parsing them into a structured meaning representation. In contrast to these approaches, AMR attempts to capture open domain semantics over arbitrary text.\nInterlingua (Mitamura et al., 1991; Carbonell et al., 1999; Levin et al., 1998) are an important inspiration for decoupling the semantics of the AMR language from the surface form of the text being parsed; although, AMR has a self-admitted English bias."}, {"heading": "7 Results", "text": "We present improvements in end-to-end AMR parsing on two datasets using our NER++ component. Action type classifier accuracy on an automatically aligned corpus and alignment accuracy on a small hand-labeled corpus are also reported."}, {"heading": "7.1 End-to-end AMR Parsing", "text": "We evaluate our NER++ component in the context of end-to-end AMR parsing on two corpora: the newswire section of LDC2014T12 and the split given in Flanigan et al. (2014) of LDC2013E117, both consisting primarily of newswire. We compare two systems: the JAMR parser (Flanigan et al., 2014),2 and the JAMR SRL++ component with our NER++ approach.\nAMR parsing accuracy is measured with a metric called smatch (Cai and Knight, 2013), which stands for \u201cs(emantic) match.\u201d The metric is the F1 of a best-match between triples implied by the target graph, and triples in the parsed graph \u2013 that is, the set of (parent, edge, child) triples in the graph.\nOur results are given in Table 3. We report much higher recall numbers on both datasets, with only small (\u2264 1 point) loss in precision. This is natural considering our approach. A better NER++ system allows for more correct AMR subgraphs to be generated \u2013 improving recall \u2013 but does not in itself necessarily improve the accuracy of the SRL++ system it is integrated in."}, {"heading": "7.2 Component Accuracy", "text": "We evaluate our aligner on a small set of 100 handlabeled alignments, and evaluate our NER++ classifier on automatically generated alignments over the whole corpus,\nOn a hand-annotated dataset of 100 AMR parses from the LDC2014T12 corpus,3 our aligner achieves an accuracy of 83.2. This is a measurement of the percentage of AMR nodes that are aligned to the correct token in their source sentence. Note that this is a different metric than the\n2Available at https://github.com/jflanigan/ jamr.\n3 Our dataset is publicly available at http://nlp. stanford.edu/projects/amr\nprecision/recall of prior work on alignments, and is based on both a different alignment dataset and subtly different alignment annotation scheme. In particular, we require that every AMR node aligns to some token in the sentence, which forces the system to always align nodes, even when unsure. A standard semantics and annotation guideline for AMR alignment is left for future work; our accuracy should be considered only an informal metric.\nWe find our informativeness-based alignment objective slightly improves end-to-end performance when compared to the rule-based approach of (Flanigan et al., 2014), improving F1 by roughly 1 point (64/59/61 P/R/F1 to 65/59/62 P/R/F1).\nOn the automatic alignments over the LDC2014T12 corpus, our action classifier achieved a test accuracy of 0.841. The classifier\u2019s most common class of mistakes are incorrect DICT classifications. It is reassuring that some of these errors can be recovered from by the na\u0131\u0308ve dictionary lookup finding the correct mapping.\nThe DICT action lookup table achieved an accuracy of 0.67. This is particularly impressive given that our model moves many of the difficult semantic tasks onto the DICT tag, and that this lookup does not make use of any learning beyond a simple count of observed span to subgraph mappings."}, {"heading": "8 Conclusion", "text": "We address a key challenge in AMR parsing: the task of generating subgraphs from lexical items in the sentence. We show that a simple classifier over actions which generate these subgraphs improves end-to-end recall for AMR parsing with only a small drop in precision, leading to an overall gain in F1. A clear direction of future work is improving the coverage of the defined actions. For example, a richer lemmatizer could shift the burden of lemmatizing unknown words into the AMR lemma semantics and away from the dictionary lookup component. We hope our decomposition provides a useful framework to guide future work in NER++ and AMR in general."}, {"heading": "Acknowledgments", "text": "We thank the anonymous reviewers for their thoughtful feedback. Stanford University gratefully acknowledges the support of the Defense Advanced Research Projects Agency (DARPA) Deep Exploration and Filtering of Text (DEFT) Program\nunder Air Force Research Laboratory (AFRL) contract no. FA8750-13-2-0040. Any opinions, findings, and conclusion or recommendations expressed in this material are those of the authors and do not necessarily reflect the view of the DARPA, AFRL, or the US government."}], "references": [{"title": "Abstract meaning representation for sembanking", "author": ["Claire Bonial", "Shu Cai", "Madalina Georgescu", "Kira Griffitt", "Ulf Hermjakob", "Kevin Knight", "Philipp Koehn", "Martha Palmer", "Nathan Schneider"], "venue": null, "citeRegEx": "Banarescu et al\\.,? \\Q2013\\E", "shortCiteRegEx": "Banarescu et al\\.", "year": 2013}, {"title": "An adapted Lesk algorithm for word sense disambiguation using wordnet", "author": ["Banerjee", "Pedersen2002] Satanjeev Banerjee", "Ted Pedersen"], "venue": "In Computational linguistics and intelligent text processing", "citeRegEx": "Banerjee et al\\.,? \\Q2002\\E", "shortCiteRegEx": "Banerjee et al\\.", "year": 2002}, {"title": "Modeling biological processes for reading comprehension", "author": ["Vivek Srikumar", "Pei-Chun Chen", "Brad Huang", "Christopher D Manning", "Abby Vander Linden", "Brittany Harding", "Peter Clark"], "venue": "In Proc. EMNLP", "citeRegEx": "Berant et al\\.,? \\Q2014\\E", "shortCiteRegEx": "Berant et al\\.", "year": 2014}, {"title": "CONLL-X shared task on multilingual dependency parsing", "author": ["Buchholz", "Marsi2006] Sabine Buchholz", "Erwin Marsi"], "venue": "In Proceedings of the Tenth Conference on Computational Natural Language Learning,", "citeRegEx": "Buchholz et al\\.,? \\Q2006\\E", "shortCiteRegEx": "Buchholz et al\\.", "year": 2006}, {"title": "Smatch: an evaluation metric for semantic feature structures", "author": ["Cai", "Knight2013] Shu Cai", "Kevin Knight"], "venue": "ACL", "citeRegEx": "Cai et al\\.,? \\Q2013\\E", "shortCiteRegEx": "Cai et al\\.", "year": 2013}, {"title": "The KANT perspective: A critique of pure transfer (and pure interlingua, pure statistics,...)", "author": ["Teruko Mitamura", "Eric H Nyberg"], "venue": null, "citeRegEx": "Carbonell et al\\.,? \\Q1999\\E", "shortCiteRegEx": "Carbonell et al\\.", "year": 1999}, {"title": "SUTIME: a library for recognizing and normalizing time expressions", "author": ["Chang", "Manning2012] Angel Chang", "Chris Manning"], "venue": "In Language Resources and Evaluation", "citeRegEx": "Chang et al\\.,? \\Q2012\\E", "shortCiteRegEx": "Chang et al\\.", "year": 2012}, {"title": "The logical form of action sentences", "author": ["Donald Davidson"], "venue": "The Logic of Decision and Action,", "citeRegEx": "Davidson.,? \\Q1967\\E", "shortCiteRegEx": "Davidson.", "year": 1967}, {"title": "The Stanford typed dependencies representation", "author": ["de Marneffe", "Christopher D. Manning"], "venue": "In Coling 2008: Proceedings of the workshop on Cross-Framework and Cross-Domain Parser", "citeRegEx": "Marneffe et al\\.,? \\Q2008\\E", "shortCiteRegEx": "Marneffe et al\\.", "year": 2008}, {"title": "Incorporating non-local information into information extraction systems by Gibbs sampling", "author": ["Trond Grenager", "Christopher Manning"], "venue": null, "citeRegEx": "Finkel et al\\.,? \\Q2005\\E", "shortCiteRegEx": "Finkel et al\\.", "year": 2005}, {"title": "A discriminative graph-based parser for the abstract meaning representation", "author": ["Sam Thomson", "Jaime Carbonell", "Chris Dyer", "Noah A Smith"], "venue": null, "citeRegEx": "Flanigan et al\\.,? \\Q2014\\E", "shortCiteRegEx": "Flanigan et al\\.", "year": 2014}, {"title": "Automatic labeling of semantic roles", "author": ["Gildea", "Jurafsky2002] Daniel Gildea", "Daniel Jurafsky"], "venue": "Computational linguistics,", "citeRegEx": "Gildea et al\\.,? \\Q2002\\E", "shortCiteRegEx": "Gildea et al\\.", "year": 2002}, {"title": "Learning to solve arithmetic word problems with verb categorization", "author": ["Hannaneh Hajishirzi", "Oren Etzioni", "Nate Kushman"], "venue": null, "citeRegEx": "Hosseini et al\\.,? \\Q2014\\E", "shortCiteRegEx": "Hosseini et al\\.", "year": 2014}, {"title": "Semantics-based machine translation with hyperedge replacement grammars", "author": ["Jones et al.2012] Bevan Jones", "Jacob Andreas", "Daniel Bauer", "Karl Moritz Hermann", "Kevin Knight"], "venue": "In COLING,", "citeRegEx": "Jones et al\\.,? \\Q2012\\E", "shortCiteRegEx": "Jones et al\\.", "year": 2012}, {"title": "Learning to transform natural to formal languages", "author": ["Kate et al.2005] Rohit J. Kate", "Yuk Wah Wong", "Raymond J. Mooney"], "venue": null, "citeRegEx": "Kate et al\\.,? \\Q2005\\E", "shortCiteRegEx": "Kate et al\\.", "year": 2005}, {"title": "An interlingua based on domain actions for machine translation of taskoriented dialogues", "author": ["Levin et al.1998] Lori S Levin", "Donna Gates", "Alon Lavie", "Alex Waibel"], "venue": "In ICSLP,", "citeRegEx": "Levin et al\\.,? \\Q1998\\E", "shortCiteRegEx": "Levin et al\\.", "year": 1998}, {"title": "Learning dependency-based compositional semantics", "author": ["Liang et al.2011] P. Liang", "M.I. Jordan", "D. Klein"], "venue": null, "citeRegEx": "Liang et al\\.,? \\Q2011\\E", "shortCiteRegEx": "Liang et al\\.", "year": 2011}, {"title": "Online largemargin training of dependency parsers", "author": ["Koby Crammer", "Fernando Pereira"], "venue": null, "citeRegEx": "McDonald et al\\.,? \\Q2005\\E", "shortCiteRegEx": "McDonald et al\\.", "year": 2005}, {"title": "An efficient interlingua translation system for multi-lingual document production", "author": ["Eric H Nyberg", "Jaime G Carbonell"], "venue": "Proceedings of Machine Translation Summit III", "citeRegEx": "Mitamura et al\\.,? \\Q1991\\E", "shortCiteRegEx": "Mitamura et al\\.", "year": 1991}, {"title": "A survey of named entity recognition and classification", "author": ["Nadeau", "Sekine2007] David Nadeau", "Satoshi Sekine"], "venue": "Lingvisticae Investigationes,", "citeRegEx": "Nadeau et al\\.,? \\Q2007\\E", "shortCiteRegEx": "Nadeau et al\\.", "year": 2007}, {"title": "The proposition bank: An annotated corpus of semantic roles", "author": ["Palmer et al.2005] Martha Palmer", "Daniel Gildea", "Paul Kingsbury"], "venue": null, "citeRegEx": "Palmer et al\\.,? \\Q2005\\E", "shortCiteRegEx": "Palmer et al\\.", "year": 2005}, {"title": "Events in the Semantics of English: A study in subatomic semantics", "author": ["Terence Parsons"], "venue": null, "citeRegEx": "Parsons.,? \\Q1990\\E", "shortCiteRegEx": "Parsons.", "year": 1990}, {"title": "Aligning english strings with abstract meaning representation graphs", "author": ["Yang Gao", "Ulf Hermjakob", "Kevin Knight"], "venue": null, "citeRegEx": "Pourdamghani et al\\.,? \\Q2014\\E", "shortCiteRegEx": "Pourdamghani et al\\.", "year": 2014}, {"title": "Semantic role labeling via integer linear programming inference", "author": ["Dan Roth", "Wen-tau Yih", "Dav Zimak"], "venue": "In Proceedings of the 20th international conference on Computational Linguistics,", "citeRegEx": "Punyakanok et al\\.,? \\Q2004\\E", "shortCiteRegEx": "Punyakanok et al\\.", "year": 2004}, {"title": "The semantics of role labeling", "author": ["Vivek Srikumar"], "venue": "Ph.D. thesis,", "citeRegEx": "Srikumar.,? \\Q2013\\E", "shortCiteRegEx": "Srikumar.", "year": 2013}, {"title": "Heideltime: High quality rule-based extraction and normalization of temporal expressions", "author": ["Str\u00f6tgen", "Gertz2010] Jannik Str\u00f6tgen", "Michael Gertz"], "venue": "In Proceedings of the 5th International Workshop on Semantic Evaluation,", "citeRegEx": "Str\u00f6tgen et al\\.,? \\Q2010\\E", "shortCiteRegEx": "Str\u00f6tgen et al\\.", "year": 2010}, {"title": "Semeval-2010 task 13: TempEval-2", "author": ["Roser Sauri", "Tommaso Caselli", "James Pustejovsky"], "venue": "In Proceedings of the 5th International Workshop on Semantic Evaluation,", "citeRegEx": "Verhagen et al\\.,? \\Q2010\\E", "shortCiteRegEx": "Verhagen et al\\.", "year": 2010}, {"title": "A transition-based algorithm for amr parsing", "author": ["Wang et al.2015] Chuan Wang", "Nianwen Xue", "Sameer Pradhan"], "venue": null, "citeRegEx": "Wang et al\\.,? \\Q2015\\E", "shortCiteRegEx": "Wang et al\\.", "year": 2015}, {"title": "Unsupervised word sense disambiguation rivaling supervised methods", "author": ["David Yarowsky"], "venue": null, "citeRegEx": "Yarowsky.,? \\Q1995\\E", "shortCiteRegEx": "Yarowsky.", "year": 1995}, {"title": "Learning to map sentences to logical form: Structured classification with probabilistic categorial grammars", "author": ["Zettlemoyer", "Collins2005] Luke S. Zettlemoyer", "Michael Collins"], "venue": null, "citeRegEx": "Zettlemoyer et al\\.,? \\Q2005\\E", "shortCiteRegEx": "Zettlemoyer et al\\.", "year": 2005}], "referenceMentions": [{"referenceID": 0, "context": "The Abstract Meaning Representation (AMR) (Banarescu et al., 2013) is a rich, graph-based language for expressing semantics over a broad do-", "startOffset": 42, "endOffset": 66}, {"referenceID": 10, "context": "We follow previous work (Flanigan et al., 2014) in dividing AMR parsing into two steps.", "startOffset": 24, "endOffset": 47}, {"referenceID": 10, "context": "For example, when the existing AMR parser JAMR (Flanigan et al., 2014) is given a gold NER++ output, and must only perform SRL++ over given subgraphs it scores 80 F1 \u2013 nearly the inter-annotator agreement of 83 F1, and far higher than its end to end accuracy of 59 F1.", "startOffset": 47, "endOffset": 70}, {"referenceID": 10, "context": "graphs are combined into a coherent AMR parse using the maximum spanning connected subgraph algorithm of Flanigan et al. (2014).", "startOffset": 105, "endOffset": 128}, {"referenceID": 10, "context": "62 smatch (an F1 measure of correct AMR arcs; see Cai and Knight (2013)) when incorporated into the SRL++ parser of Flanigan et al. (2014). When evaluating the performance of our action classifier in isolation, we obtain an action classification ac-", "startOffset": 116, "endOffset": 139}, {"referenceID": 7, "context": "AMR is based on neo-Davidsonian semantics, (Davidson, 1967; Parsons, 1990).", "startOffset": 43, "endOffset": 74}, {"referenceID": 21, "context": "AMR is based on neo-Davidsonian semantics, (Davidson, 1967; Parsons, 1990).", "startOffset": 43, "endOffset": 74}, {"referenceID": 20, "context": "The root node of the graph is labeled run-01, corresponding to the PropBank (Palmer et al., 2005) definition of the verb ran.", "startOffset": 76, "endOffset": 97}, {"referenceID": 24, "context": "The label for destination is taken from a finite set of special arc sense tags similar to the preposition senses found in (Srikumar, 2013).", "startOffset": 122, "endOffset": 138}, {"referenceID": 10, "context": "DICT This class serves as a back-off for the other classes, implementing an approach similar to Flanigan et al. (2014). In particular, we memorize a simple mapping from spans of text (such", "startOffset": 96, "endOffset": 119}, {"referenceID": 10, "context": "The approach taken in Flanigan et al. (2014) can be", "startOffset": 22, "endOffset": 45}, {"referenceID": 22, "context": "Pourdamghani et al. (2014) approached the alignment problem in the framework of the IBM alignment models.", "startOffset": 0, "endOffset": 27}, {"referenceID": 12, "context": "Prior work in AMR and related formalisms include Jones et al. (2012), and Flanigan et al.", "startOffset": 49, "endOffset": 69}, {"referenceID": 13, "context": "Jones et al. (2012), motivated by applications in Machine Translation, proposed a graphical semantic meaning representation that predates AMR, but is intimately related.", "startOffset": 0, "endOffset": 20}, {"referenceID": 10, "context": "Flanigan et al. (2014) forms the basis of the approach of this paper.", "startOffset": 0, "endOffset": 23}, {"referenceID": 10, "context": "Flanigan et al. (2014) forms the basis of the approach of this paper. Their system introduces the two-stage approach we use: they implement a rule-based alignment to learn a mapping from tokens to subgraphs, and train a variant of a maximum spanning tree parser adapted to graphs and with additional constraints for their relation identifications (SRL++) component. Wang et al. (2015) uses a transition based algorithm to transform dependency trees into AMR parses.", "startOffset": 0, "endOffset": 385}, {"referenceID": 9, "context": "These include named entity recognition (Nadeau and Sekine, 2007; Finkel et al., 2005), word sense disambiguation (Yarowsky, 1995; Banerjee and Pedersen, 2002), lemmatization, and a number of more domain specific tasks.", "startOffset": 39, "endOffset": 85}, {"referenceID": 28, "context": ", 2005), word sense disambiguation (Yarowsky, 1995; Banerjee and Pedersen, 2002), lemmatization, and a number of more domain specific tasks.", "startOffset": 35, "endOffset": 80}, {"referenceID": 26, "context": "For example, a full understanding of AMR requires normalizing temporal expressions (Verhagen et al., 2010; Str\u00f6tgen and Gertz, 2010; Chang and Manning, 2012).", "startOffset": 83, "endOffset": 157}, {"referenceID": 23, "context": "In turn, the SRL++ facet of AMR takes many insights from semantic role labeling (Gildea and Jurafsky, 2002; Punyakanok et al., 2004; Srikumar, 2013; Das et al., 2014) to capture the rela-", "startOffset": 80, "endOffset": 166}, {"referenceID": 24, "context": "In turn, the SRL++ facet of AMR takes many insights from semantic role labeling (Gildea and Jurafsky, 2002; Punyakanok et al., 2004; Srikumar, 2013; Das et al., 2014) to capture the rela-", "startOffset": 80, "endOffset": 166}, {"referenceID": 17, "context": "tactic dependency parsing (de Marneffe and Manning, 2008; McDonald et al., 2005; Buchholz and Marsi, 2006).", "startOffset": 26, "endOffset": 106}, {"referenceID": 14, "context": "More generally, parsing to a semantic representation is has been explored in depth for when the representation is a logical form (Kate et al., 2005; Zettlemoyer and Collins, 2005; Liang et al., 2011).", "startOffset": 129, "endOffset": 199}, {"referenceID": 16, "context": "More generally, parsing to a semantic representation is has been explored in depth for when the representation is a logical form (Kate et al., 2005; Zettlemoyer and Collins, 2005; Liang et al., 2011).", "startOffset": 129, "endOffset": 199}, {"referenceID": 2, "context": "For example, work by Berant et al. (2014) parses text into a formal representation of a biological process.", "startOffset": 21, "endOffset": 42}, {"referenceID": 2, "context": "For example, work by Berant et al. (2014) parses text into a formal representation of a biological process. Hosseini et al. (2014) solves algebraic word problems by parsing them into a", "startOffset": 21, "endOffset": 131}, {"referenceID": 18, "context": "Interlingua (Mitamura et al., 1991; Carbonell et al., 1999; Levin et al., 1998) are an important inspiration for decoupling the semantics of the AMR language from the surface form of the text being parsed; although, AMR has a self-admitted English bias.", "startOffset": 12, "endOffset": 79}, {"referenceID": 5, "context": "Interlingua (Mitamura et al., 1991; Carbonell et al., 1999; Levin et al., 1998) are an important inspiration for decoupling the semantics of the AMR language from the surface form of the text being parsed; although, AMR has a self-admitted English bias.", "startOffset": 12, "endOffset": 79}, {"referenceID": 15, "context": "Interlingua (Mitamura et al., 1991; Carbonell et al., 1999; Levin et al., 1998) are an important inspiration for decoupling the semantics of the AMR language from the surface form of the text being parsed; although, AMR has a self-admitted English bias.", "startOffset": 12, "endOffset": 79}, {"referenceID": 10, "context": "We evaluate our NER++ component in the context of end-to-end AMR parsing on two corpora: the newswire section of LDC2014T12 and the split given in Flanigan et al. (2014) of LDC2013E117, both consisting primarily of newswire.", "startOffset": 147, "endOffset": 170}, {"referenceID": 10, "context": "pare two systems: the JAMR parser (Flanigan et al., 2014),2 and the JAMR SRL++ component with our NER++ approach.", "startOffset": 34, "endOffset": 57}, {"referenceID": 10, "context": "We find our informativeness-based alignment objective slightly improves end-to-end performance when compared to the rule-based approach of (Flanigan et al., 2014), improving F1 by roughly 1 point (64/59/61 P/R/F1 to 65/59/62 P/R/F1).", "startOffset": 139, "endOffset": 162}], "year": 2015, "abstractText": "The Abstract Meaning Representation (AMR) is a representation for opendomain rich semantics, with potential use in fields like event extraction and machine translation. Node generation, typically done using a simple dictionary lookup, is currently an important limiting factor in AMR parsing. We propose a small set of actions that derive AMR subgraphs by transformations on spans of text, which allows for more robust learning of this stage. Our set of construction actions generalize better than the previous approach, and can be learned with a simple classifier. We improve on the previous state-of-the-art result for AMR parsing, boosting end-to-end performance by 3 F1 on both the LDC2013E117 and LDC2014T12 datasets.", "creator": "LaTeX with hyperref package"}}}