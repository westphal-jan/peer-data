{"id": "1508.00973", "review": {"conference": "AAAI", "VERSION": "v1", "DATE_OF_SUBMISSION": "5-Aug-2015", "title": "Progressive EM for Latent Tree Models and Hierarchical Topic Detection", "abstract": "hierarchical latent tree analysis ( robust hlta ) is recently. proposed as a new method for topic detection. it differs fundamentally from the lda - based methods in terms of topic definition, topic - document relationship, and learning method. it has been shown to discover significantly more coherent topics and better topic hierarchies. however, hlta relies on the expectation - maximization ( em ) algorithm fundamental for quantitative parameter estimation and hence which is not efficient enough to deal with large datasets. in this paper, we propose a method to drastically speed up robust hlta using a technique inspired by recent computer advances noted in the moments method. empirical experiments show that restructuring our method greatly improves the efficiency of hlta. it is as efficient as the state - of - the - art computational lda - based method for hierarchical topic detection and finds substantially better topics and topic hierarchies.", "histories": [["v1", "Wed, 5 Aug 2015 05:00:32 GMT  (565kb,D)", "http://arxiv.org/abs/1508.00973v1", null]], "reviews": [], "SUBJECTS": "cs.LG cs.CL cs.IR stat.ML", "authors": ["peixian chen", "nevin l zhang", "leonard k m poon", "zhourong chen"], "accepted": true, "id": "1508.00973"}, "pdf": {"name": "1508.00973.pdf", "metadata": {"source": "CRF", "title": "Progressive EM for Latent Tree Models and Hierarchical Topic Detection", "authors": ["Peixian Chen", "Nevin L. Zhang"], "emails": ["pchenac@cse.ust.hk", "lzhang@cse.ust.hk", "kmpoon@ied.edu.hk", "zchenbb@cse.ust.hk"], "sections": [{"heading": "1 INTRODUCTION", "text": "Detecting topics and topic hierarchies from document collections, along with its many potential applications, is a major research area in Machine Learning. Currently the predominant approach to topic detection is latent Dirichlet allocation (LDA) (Blei et al., 2003). LDA has been developed to detect topics and to model relationships among them, including topic correlations (Blei and Lafferty, 2007), topic hierarchies (Blei et al., 2010; Paisley et al., 2012), and topic evolution (Blei and Lafferty, 2006). We collectively name these methods LDA-based methods. In those methods, a topic is a probability distribution over a vocabulary and a document is a mixture of topics. Therefore LDA is a type of mixture membership model. \u2217http://peixianc.me\nar X\niv :1\n50 8.\n00 97\nA totally different approach to hierarchical topic detection is recently proposed by Liu et al. (2014). It is called hierarchical latent tree analysis (HLTA), where topics are organized hierarchically as a latent tree model (LTM) (Zhang, 2004; Zhang et al., 2008b) such as the one in Fig 1. In HLTA, a topic is a state of a latent variable and it corresponds to a collection of documents, and a document can belong to multiple topics. HLTA is therefore a type of multiple membership model.\nEmpirical results from Liu et al. (2014) indicate that HLTA finds significantly better topics and topic hierarchies than hierarchical latent Dirichlet allocation (hLDA), the first LDA-based method for hierarchical topic detection. However, HLTA does not scale up well. It took, for instance, 17 hours to process a NIPS dataset that consists of fewer than 2,000 documents over 1,000 distinct words (Liu et al., 2014).(Note that hLDA took even longer time.)\nThe computational bottleneck of HLTA lies in the use of the EM algorithm (Dempster et al., 1977) for parameter estimation. In this paper, we propose progressive EM (PEM) as a replacement of EM so as to scale up HLTA. PEM is motivated by the moments method, where parameters are determined by solving equations, each of which involves a small number of model parameters related to two or three observed variables (Chang, 1996; Anandkumar et al., 2012). Similarly, PEM works in steps and, at each step, it focuses on a small part of the model parameters and involves only three or four observed variables.\nOur new algorithm is hence named PEM-HLTA. It is drastically faster than HLTA. PEM-HLTA finished processing the aforementioned NIPS dataset within 4 minutes. It only took around 11 hours, on a single desktop computer, to analyze a version of New York Times dataset that consists of 300,000 articles with 10,000 distinct words. PEM-HLTA is also as efficient as nHDP (Paisley et al., 2012), a state-of-the-art LDA-based method for hierarchical topic detection, and it significantly outperforms nHDP, as well as hLDA, in terms of the quality of topics and topic hierarchies."}, {"heading": "2 PRELIMINARIES", "text": "A latent tree model (LTM) is a Markov random field over an undirected tree, where the leaf nodes represent observed variables and the internal nodes represent latent variables (Zhang et al., 2008a). In this paper we assume all variables have finite cardinality, i.e., finite number of possible states.\nParameters of an LTM consist of potentials associated with edges and nodes such that the product of all potentials is a joint distribution over all variables. We pick the potentials as follows: Root the model at an arbitrary latent node, direct the edges away from the root, and specify a marginal distribution for the root and a conditional distribution for each of the other nodes given its parent. Then in Fig 2(b), if Y is the root, the parameters are the distributions P (Y ), P (A | Y ), P (Z | Y ), P (C | Z) and so forth. Because of the way the potentials are picked, LTMs are technically tree-structured Bayesian networks (Pearl, 1988).\nLTMs with a single latent variables are known as latent class models (LCMs)(Bartholomew and Knott, 1999). They are a type of finite mixture models for discrete data. For example, the model m1 in Fig 2(a) defines the following mixture distribution over the observed variables:\nP (A, \u00b7 \u00b7 \u00b7, E)= \u2211|Y |\ni=1 P (Y = i)P (A, \u00b7 \u00b7 \u00b7, E |Y = i) (1)\nwhere |Y | is the cardinality of Y . If the model is learned from a dataset, then the data are partitioned into |Y | soft clusters, each represented by a state of Y . The model m2 in Fig 2(b) has two latent variables. Its joint distribution can be reduced to two different but related mixture distributions:\nP (A, \u00b7 \u00b7 \u00b7, E)= \u2211|Y |\ni=1 P (Y = i)P (A, \u00b7 \u00b7 \u00b7, E |Y = i), P (A, \u00b7 \u00b7 \u00b7, E)= \u2211|Z|\ni=1 P (Z= i)P (A, \u00b7 \u00b7 \u00b7, E |Z= i).\nThe model gives two different ways of partitioning the data, one represented by Y and the other by Z. Hence LTMs are a tool for multidimensional clustering (Chen et al., 2012).\nA\nY\nB C D E\n(a) m1\nY\nA B D E\nZ\nC\n(b) m2\nFigure 2: Leaf nodes are observed while others are latent."}, {"heading": "3 THE ALGORITHM", "text": "The input to our PEM-HLTA algorithm is a collection D of documents, each represented as a binary vector over a vocabulary V . The values in the vector indicate the presence or absence of words in the document. The output is an LTM, such as the one shown in Fig 1, where the word variables are at the bottom and the latent variables, all assumed binary, form several levels of hierarchy on top. Each state of a latent variable corresponds to a cluster of documents and is interpreted as a topic. The top level control of PEM-HLTA is given in Algorithm 1, and subroutines in Algorithms 2\u20133."}, {"heading": "3.1 TOP LEVEL CONTROL", "text": "We illustrate the top level control using the example model in Fig 1, which is learned from a dataset with 30 word variables. In the first pass through the loop, the subroutine BUILDISLANDS is called (line 3). It partitions all variables into 11 clusters (Fig 3 bottom), which are uni-dimensional in the sense that the co-occurrences of words in each cluster can be properly modeled using a single latent variable. A latent variable is introduced for each cluster to form an LCM. We metaphorically refer to the LCMs as islands and the latent variables in them as level-1 latent variables.\nThe next step is to link up the 11 islands (line 4). This is done by estimating the mutual information (MI) (Cover and Thomas, 2012) between every pair of latent variables and building a Chow-Liu tree (Chow and Liu, 1968) over them, so as to form an overall model (Liu et al., 2013). The result is the model at the middle of Fig 3.\nIn the subroutine HARDASSIGNMENT, inference is carried out to compute the posterior distribution of each latent variable for each document. The document is assigned to the state with the maximum posterior probability. This results in a dataset over the level-1 latent variables (line 10). In the second pass through the loop, the level-1 latent variables are partitioned into 3 groups and 3 islands are created. The islands are linked up to form the model shown at the top of Fig 3. At line 8, the model at the top of Fig 3 (m1) is stacked on the model in the middle (m) to give rise to the final model in Fig 1. While doing so, the subroutine STACKMODELS cuts off the links among the level-1 latent variables. The number of nodes at the top level is below the threshold \u03c4 , if we set \u03c4 = 5, and hence the loop is exited. EM is run on the final model for \u03ba steps to improve its parameters (line 12).\nAlgorithm 1 PEM-HLTA(D, \u03c4 , \u03b4, \u03ba) Inputs: D\u2014Collection of documents, \u03c4\u2014Upper bound on the number of top-level topics, \u03b4\u2014Threshold used\nin UD-test, \u03ba\u2014Number of EM steps on final model.\nOutputs: An HLTM and a topic hierarchy.\n1: D1 \u2190 D, L \u2190 \u2205, m\u2190 null. 2: repeat 3: L \u2190 BUILDISLANDS(D1, \u03b4); 4: m1 \u2190 BRIDGEISLANDS(L, D1); 5: if m = null then 6: m\u2190 m1; 7: else\n8: m\u2190 STACKMODELS(m1, m); 9: end if\n10: D1 \u2190 HARDASSIGNMENT(m, D); 11: until |L| < \u03c4 . 12: Run EM on m for \u03ba steps. 13: return m and topic hierarchy extracted from m.\nAlgorithm 2 BUILDISLANDS(D, \u03b4) 1: V \u2190 variables in D,M\u2190 \u2205. 2: while |V| > 0 do 3: m\u2190 ONEISLAND(D, V , \u03b4); 4: M\u2190M\u222a {m};\n5: V \u2190 variables in D but not in any m \u2208M; 6: end while 7: returnM.\nIn our experiments, we set \u03ba = 50. In Section 5.1 we will discuss how to extract a topic hierarchy from the final model."}, {"heading": "3.2 BUILDING ISLANDS", "text": "The pseudo code for the subroutine BUILDISLANDS is given in Algorithm 2. It calls another subroutine ONEISLAND to identify a uni-dimensional subset of observed variables and builds an LCM with them. Then it repeats the process on those observed variables left to create more islands, until all variables are included in these islands. Finally, it returns the set of all the islands."}, {"heading": "3.2.1 UNI-DIMENSIONALITY TEST", "text": "We rely on the uni-dimensionality test (UD-test) (Liu et al., 2013) to determine whether a set S of variables is uni-dimensional. The idea is to compare two LTMs m1 and m2, where m1 is the best model among all LCMs for S while m2 is the best model among all LTMs that contain two latent variables. The model selection criterion used is the BIC score (Schwarz, 1978). The set S is uni-dimensional if the following inequality holds:\nBIC(m2 | D)\u2212 BIC(m1 | D) < \u03b4, (2) where \u03b4 is a threshold. In other words, S is considered uni-dimensional if the best two-latent variable model is not significantly better than the best one-latent variable model. The quantity on the left hand side of Equation (2) is a large sample approximation of the natural logarithm of Bayes factor (Raftery, 1995) for comparing m1 and m2. According to the cut-off values for the Bayes factor, we set \u03b4 = 3 in our experiments."}, {"heading": "3.2.2 BUILDING AN ISLAND", "text": "Given dataset D with variables V , the subroutine ONEISLAND identifies a uni-dimensional subset of variables and builds an LCM for them. Define the mutual information between a variable Z and a set S as MI(Z,S) = maxA\u2208S MI(Z,A). ONEISLAND maintains a working set S of observed variables. Initially, S contains the pair of variables with the highest MI among all pairs, and a third variable that has the highest MI with the pair (line 2). At line 5, an LCM is learned for those three variables using the subroutine LEARNLCM, which is given in the Appendix along with some other subroutines. Then other variables are added to S one by one until the UD-test fails. We illustrate this process using Fig 2. Suppose S initially consists of three variables A, B, C. Let D be the variable that has the maximum MI with S among all other variables. Suppose the UD-test passes on S \u222a {D}, then D is added to S. Next let E be the variable with the maximum MI with S (line 7) and the UD-test is performed on S \u222a E = {A,B,C,D,E} (lines 8-14). The two models m1 and m2 used in the test is shown in Fig 2. For computational efficiency, we do not search for the best structure for m2. Instead, the structure is determined as follows: Pick the variable in S that has the maximum MI with E (line 8) (let it be C), and group it with E in the model (line 12). The\nAlgorithm 3 ONEISLAND(D, V , \u03b4) 1: if |V| \u2264 3, m\u2190 LEARNLCM(D, V), return m. 2: S \u2190 three variables in V with highest MI, 3: V1 \u2190 V \\ S; 4: D1 \u2190 PROJECTDATA(D, S), 5: m\u2190 LEARNLCM(D1, S). 6: loop 7: X \u2190 argmaxA\u2208V1 MI(A,S), 8: W \u2190 argmaxA\u2208S MI(A,X), 9: D1 \u2190 PROJECTDATA(D,S \u222a {X}), V1 \u2190 V1 \\ {X}. 10: m1 \u2190 PEM-LCM(m,S, X,D1). 11: if |V1| = 0, return m1. 12: m2 \u2190 PEM-LTM-2L(m, S \\ {W}, {W,X}, D1) 13: if BIC(m2|D1)\u2212BIC(m1|D1) > \u03b4 then. 14: returnm2 withW ,X and their parent removed. 15: end if 16: m\u2190 m1, S \u2190 S \u222a {X}. 17: end loop\nmodel parameters are estimated using the subroutines PEM-LCM and PEM-LTM-2L, which will be explained in the next section. If the test fails, then C, E and Z are removed from m2, and what remains in the model, an LCM, is returned. If the test passes, E is added to S (line 16) and the process continues."}, {"heading": "4 PROGRESSIVE EM FOR MODEL CONSTRUCTION", "text": "PEM-HLTA conceptually consists of a model construction phase (lines 2-11) and a parameter estimation phase (line 12). During the first phase, many intermediate models are constructed. In this section, we present a fast method for estimating the parameters of those intermediate models."}, {"heading": "4.1 MOMENTS METHOD FOR PARAMETER ESTIMATION", "text": "We begin by presenting a property of LTMs that motivates our new method. A similar property of HMMs was first discovered by Chang (1996). We introduce some notations using m1 of Fig 2. Since all variables have the same cardinality, the conditional distribution P (A|Y ) can be regarded as a square matrix, which we denote as PA|Y . Similarly, PAC is the matrix representation of the joint distribution P (A,C). For a value b of B, Pb|Y is the vector presentation of P (B=b|Y ) and PAbC the matrix representation of P (A,B=b, C).\nTheorem 1 [ Zhang et al. (2014)] Let Y be the latent variable in an LCM and A,B,C be three of the observed variables. Assume all variables have the same cardinality and the matrices PA|Y and PAC are invertible. Then we have\nPA|Y diag(Pb|Y )P \u22121 A|Y = PAbCP \u22121 AC , (3)\nwhere diag(Pb|Y ) is a diagonal matrix with components of Pb|Y as the diagonal elements.\nThe equation implies that the model parameters P (B=b|Y=0), \u00b7 \u00b7 \u00b7 , P (B=b|Y=|Y |) are the eigenvalues of the matrix on the right, and hence can be obtained from the marginal distributions PAbCPAC .\nTheorem 1 can be used to estimate P (B|Y ) under two conditions: (1) There is a good fit between the data and model as if the data were generated from the model, and (2) the sample size is sufficiently large. In this case, the empirical marginal distributions P\u0302 (A,B,C) and P\u0302 (A,C) computed from data are accurate estimates of the distributions P (A,B,C) and P (A,C) of the model. We can use them to form the matrix PAbCP\u22121AC , and determine PB|Y as the eigenvalues of the matrix. This is called the moments method. Note that Theorem 1 still applies when replacing edges like (Y,A) with paths. For example in Fig 2(b), if P (C|Z) and P (E|Z) are to be estimated, a third observed variable can be chosen from (A,B,D) as long as there is path from Z to this observed variable.\nTheorem 1 can be also used to estimate all the parameters of the model m1 in Fig 2. First, we can estimate P (B|Y ) using Equation 3 in the sub-model Y -{A,B,C}. By swapping the roles of variables, we can also estimate P (A|Y ) and P (C|Y ) in the sub-model. Next we can consider the sub-model Y -{B,C,D} and estimate P (D|Y ) with P (B|Y ) and P (C|Y ) fixed. Finally, we can consider the sub-model Y -{C,D,E} and estimate P (E|Y ) there with P (C|Y ) and P (D|Y ) fixed. Note that the parameters are estimated in steps instead of all at once. Hence we call this scheme progressive parameter estimation."}, {"heading": "4.2 PROGRESSIVE EM", "text": "The moments method is not iterative and hence can be drastically faster than EM. Unfortunately, it does not produce high quality estimates when the model does not fit data well and/or the sample size is not sufficiently large. In such cases, the empirical marginal distributions P\u0302 (A,B,C) and P\u0302 (A,C) are poor estimates of the distributions P (A,B,C) and P (A,C) of the model. In our experiences, the method frequently gives negative estimates for probability values in the context of latent tree models.\nIn this paper, we do not estimate parameters by solving the equation in Theorem 1. However, we adopt the progressive estimation scheme and combine it with EM. This gives rise to progress EM (PEM). To estimate the parameters of m1, PEM first estimates P (Y ), P (A|Y ), P (B|Y ), and P (C|Y ) by running EM on the sub-model Y -{A,B,C}; then it estimates P (D|Y ) by running EM on the sub-model Y -{B,C,D} with P (B|Y ), P (C|Y ) and P (Y ) fixed; and finally it estimates P (E|Y ) on sub-model Y -{C,D,E} similarly. All the sub-models involve 3 observed variables. For m2, PEM first estimates P (Y ), P (A|Y ), P (B|Y ) and P (D|Y ) by running EM on sub-model Y -{A,B,D}; then it estimates P (C|Z), P (E|Z) and P (Z|Y ) by running EM on the two latent variable sub-model {B,D}-Y -Z-{C,E}, with P (B|Y ), P (D|Y ) and P (Y ) fixed. Note that only two of the children of Y are used here, and the model involves only 4 observed variables.\nIntuitively, the moments method tries to fit data in a rigid way, while PEM tries to fit data in an elastic manner. It never gives negative probability values. Moreover, it is still efficient because EM is run only on sub-models with three or four observed binary variables, and local maxima is seldom an issue using multiple starting points."}, {"heading": "4.3 PEM FOR ISLAND BUILDING", "text": "PEM can be aligned with the subroutine ONEISLAND nicely because the subroutine adds variables to the working set S one at a time. Consider a pass through the loop. At the beginning, we have an LCM m for the variables in S, whose parameters have been estimated earlier. Then ONEISLAND finds the variable X outside S that has the maximum MI with S, and the variable W inside S that has the maximum MI with X (line 7, 8).\nAt line 11, ONEISLAND adds X to the m to create a new LCM m1, and estimates the parameters for the new variable using the subroutine PEM-LCM. We illustrate how this is done using Fig 2. Suppose the LCM m is the model Y -{A,B,C,D} and the variable X is E. PEM-LCM adds the variable E to m and thereby creates a new LCM m1, which is Y -{A,B,C,D,E} (Fig 2 left). To estimate the distribution P (E|Y ), PEM-LCM creates a temporary model m\u2032 from m1 by only keeping three observed variables: E and two other variables with maximum MI with E. Suppose m\u2032 is Y -{C,D,E}. PEM-LCM estimates the distribution P (E|Y ) by running EM on m\u2032 with all other parameters fixed. Finally, it copies P (E|Y ) from m\u2032 to m1, and returns m1. At line 12, ONEISLAND addsX tom and learns a two-latent variable modelm2 using the subroutine PEM-LTM-2L. We illustrate PEM-LTM-2L using the foregoing example. Let X be E and W be C. PEM-LTM-2L creates the new model m2, which is {A,B,D}-Y -Z-{C,E} (Fig 2 right). To estimate the parameters P (C|Z), P (E|Z) and P (Z|Y ), PEM-LTM-2L creates a temporary model m\u2032 which is {A,D}-Y -Z-{C,E}. Only the two of the children of Y that have maximum MI withE remain(A and D in this example). PEM-LTM-2L estimates the three distributions by running EM on m\u2032 with all other parameters fixed. Finally, it copies the distributions from m\u2032 to m2 and returns m2. 1 Similarly in the subroutine BRIDGEDISLANDS we use this method to estimate parameters for edges between latent variables, but only estimating P (Z|Y ) and keeping all other parameters fixed."}, {"heading": "5 EMPIRICAL RESULTS", "text": "We aim at scaling up HLTA, hence we need to empirically determine how efficient PEM-HLTA is compared with HLTA. We also compare PEM-HLTA with nHDP, the state-of-the-art LDA-based method for hierarchical topic detection, in terms of computational efficiency and quality of results. Also included in the comparisons are hLDA and a method named CorEx (Ver Steeg and Galstyan, 2014) that builds hierarchical latent trees by optimizing an information-theoretic objective function.\n1Details of PEM-LCM and PEM-LTM-2L can be found in the Appendix submitted as a supplement.\nTwo of the datasets used are NIPS data2 and Newsgroup3. Three versions of the NIPS data with vocabulary sizes 1,000, 5,000 and 10,000 were created by choosing words with highest average TF-IDF values, referred to as Nips-1k, Nips-5k and Nips-10k. Similarly, two versions (News-1k and News-5k) of the Newsgroup data were created. Note that News-10k is not included because it is beyond the capabilities of three of the methods. Comparisons of PEM-HLTA and nHDP on large-scale data will be given separately in Section 5.4. After preprocessing, NIPS and Newsgroup consist of 1,955 and 19,940 documents respectively. For PEM-HLTA, HLTA and CorEx, the data are represented as binary vectors, whereas for nHDP and hLDA, they are represented as bags-of-words.\nPEM-HLTA determines the height of hierarchy and the number of nodes at each level automatically. On the NIPS and Newsgroup datasets, it produced hierarchies with between 4 to 6 levels. For nHDP and hLDA, the height of hierarchy needs to be manually set and is usually set at 3. We set the number of nodes at each level in such way that nHDP and hLDA would yield roughly the same total number of topics as PEM-HLTA. CorEx were configured similarly. PEM-HLTA is implemented in Java. The parameter settings are described in Section 3. Implementations of other algorithms were provided by their authors and ran at their default parameter settings. All experiments are conducted on the same desktop computer."}, {"heading": "5.1 TOPIC HIERARCHIES FOR NIPS-10K", "text": "Table 1 shows parts of the topic hierarchies obtained by nHDP and PEM-HLTA. The left half displays 3 top-level topics by nHDP and their children. Each nHDP topic is represented using the top 5 words occurring with highest probabilities in the topic. The right half show 3 top-level topics yielded by PEM-HLTA and their children. The topics are extracted from the model learned by PEM-HLTA as follows: For a latent binary variable Z in the model, we enumerate the word variables in the subtree rooted at Z in descending order of their MI values with Z. The leading words are those whose probabilities differ the most between the two states of Z and are hence used to characterize the states. The state of Z under which the words occur less often overall is regarded as the background topic and is not reported, while the other state is reported as a genuine topic. Values in [] show the percentage of the documents belonging to the genuine topic.\nLet us examine some of the topics. We refer to topics on the left using the letter L followed by topic numbers and those on the right using R. For PEM-HLTA, R1 consists of probability terms: R1.1 is about EM algorithm; R1.2 about Gaussian mixtures and R1.3 about generative distributions. R1.4 is a combination of variance and noise, which are separated at the next lower level. For nHDP, the topic L1 and its children L1.1, L1.2 and L1.5 are also about probability. However, L1.3 and L1.4 do not fit in the group well. The topic R2 is about image analysis, while its first four subtopics are about different aspects of image analysis: sources of images, pixels, objects. R2.5 and R2.6 are also meaningful and related, but do not fit in well. They are placed in another subgroup by PEMHLTA. In nHDP, the subtopics of L2 do not give a clear spectrum of aspects of image analysis. The topic R3 is about speech recognition. Its subtopics are about different aspects of speech recognition. Only R3.4 does not fit in the group well. In contrast, L3 and its subtopics do not present a clear semantic hierarchy. Some of them are not meaningful. Another topic related to speech recognition L1.5 is placed elsewhere. Overall, the topics and topic hierarchy obtained by PEM-HLTA are more meaningful than those by nHDP."}, {"heading": "5.2 TOPIC COHERENCE AND MODEL QUALITY", "text": "To quantitatively measure the quality of the topics, we use the topic coherence score proposed by Mimno et al. (2011). The metric depends on the number M of words used to characterize a topic. We set M = 4. In addition, we use held-out likelihood to assess the quality of the models produced by the five algorithms. Each dataset was randomly partitioned into a training set with 80% of the data, and a test set with 20% of the data.\nTable 2 shows the average topic coherence scores of the topics produced by the five algorithms. The sign \u201c-\u201d indicates running time exceeded 72 hours. The quality of topics produced by PEM-HLTA is similar to those by HLTA on Nips-1k and News-1k, and better on Nips-5k. In all cases, PEMHLTA produced significantly better topics than nHDP and the other two algorithms. The held-out per-document loglikelihood statistics are shown in Table 3. The likelihood values of PEM-HLTA\n2http://www.cs.nyu.edu/ roweis/data.html 3http://qwone.com/jason/20Newsgroups/\nare similar to those of HLTA, showing that the use of PEM to replace EM does not influence model quality much. They are significantly higher than those of CorEx. Note that the likelihood values in Table 3 for the LDA-based methods are calculated from bag-of-words data. They are still lower than the other methods even calculated from the same binary data as for the other three methods.\nIt should be noted that, in general, better model fit does not necessarily imply better topic quality (Chang et al., 2009). In context of hierarchical topic detection, however, PEM-HLTA not only leads to better model fit, but also gives better topics and better topic hierarchies.\nTable 2: Average topic coherence scores.\nNips-1k Nips-5k Nips-10k News-1k News-5k PEM-HLTA -6.25 -8.04 -8.87 -12.30 -13.07 HLTA -6.23 -9.23 \u2014 -12.08 \u2014 hLDA -6.99 -8.94 \u2014 \u2014 \u2014 nHDP -8.08 -9.55 -9.86 -14.26 -14.51 CorEx -7.23 -9.85 -10.64 -13.47 -14.51\nTable 3: Per-document loglikelihood\nNips-1k Nips-5k Nips-10k News-1k News-5k PEM-HLTA -390 -1,117 -1,424 -116 -262 HLTA -391 -1,161 \u2014 -120 \u2014 hLDA -1,520 -2,854 \u2014 \u2014 \u2014 nHDP -3,196 -6,993 -8,262 -265 -599 CorEx -442 -1,226 -1,549 -140 -322"}, {"heading": "5.3 RUNNING TIMES", "text": "Table 4 shows the running time statistics. PEM-HLTA drastically outperforms HLTA, and the difference increases with vocabulary size. On Nips-10k and News-5k, HLTA did not terminate in 3 days, while PEM-HLTA finished the computation in about 6 hours. PEM-HLTA is also faster than nHDP, although the difference decreases with vocabulary size as nHDP works in a stochastic way (Paisley et al., 2012). Moreover, PEM-HLTA is more efficient than hLDA and CorEx.\nTable 5: Performances on the New York Times data.\nTime (min) Average topic coherence PEM-HLTA 670 -12.86 hHDP 637 -13.35"}, {"heading": "5.4 STOCHASTIC EM", "text": "Conceptually, PEM-HLTA has two phases: hierarchical model construction and parameter estimation. In the second phase, EM is run a predefined number of steps from the initial parameter values from the first phase. It is time-consuming if the sample size is large. Paisley et al. (2012) faced a similar problem with nHDP. They solve the problem using stochastic inference. The idea is to divide the data set into subsets and process the subsets one by one. Model parameters are updated after processing each data subset and overall one goes through the entire data set only once.We adopt the same idea for the second phase of PEM-HLTA and call it stochastic EM. We tested the idea on the\nNew York Times dataset1, which consists of 300,000 articles. To analyze the data, we picked 10,000 words using TF-IDF and then randomly divided the dataset into 50 equal-sized subsets. We used only the fist subset for the first phase of PEM-HLTA. For the second phase, we ran EM on current model once using each subset in turn until all the subsets are utilized .\nOn New York Times data, we only compare PEM-HLTA with nHDP since other methods are not amenable to processing large datasets as we can observe from Table 4. We still trained nHDP model using documents in bag-of-words form and PEM-HLTA using documents as binary vectors of words. Table 5 reports the running times and topic coherence. PEM-HLTA took around 11 hours which is a little bit slower than nHDP (10.5 hours). However, PEM-HLTA produced more coherent topics, which is not only testified by the coherence score, but also the resulting topic hierarchies. The reader could get a clear picture of the superiority of PEM-HLTA over nHDP by taking a quick look at the model structure and topic hierarchies submitted as supplements."}, {"heading": "6 CONCLUSIONS", "text": "We have proposed and investigated a method to scale up HLTA \u2014 a newly emerged method for hierarchical topic detection. The key idea is to replace EM using progressive EM. The resulting algorithm PEM-HLTA reduces the computation time of HLTA drastically and can handle much larger datasets. More importantly, it outperforms nHDP, the state-of-the-art LDA-based method for hierarchical topic detection, in terms of both quality of topics and topic hierarchy, with comparable speed on large-scale data. Although we only show how PEM works in HLTA, PEM can possibly be used in other more general models. PEM-HLTA can also be further scaled up through parallelization and used for text classification. We plan to investigate these directions in the future.\n1http://archive.ics.uci.edu/ml/datasets/Bag+of+Words"}], "references": [{"title": "Spectral methods for learning multivariate latent tree structure", "author": ["Animashree Anandkumar", "Kamalika Chaudhuri", "Daniel Hsu", "Sham M. Kakade", "Le Song", "Tong Zhang"], "venue": "In Advances in Neural Information Processing Systems,", "citeRegEx": "Anandkumar et al\\.,? \\Q2012\\E", "shortCiteRegEx": "Anandkumar et al\\.", "year": 2012}, {"title": "Latent Variable Models and Factor Analysis", "author": ["David J. Bartholomew", "Martin Knott"], "venue": "Arnold, 2nd edition,", "citeRegEx": "Bartholomew and Knott.,? \\Q1999\\E", "shortCiteRegEx": "Bartholomew and Knott.", "year": 1999}, {"title": "Dynamic topic models", "author": ["David M Blei", "John D Lafferty"], "venue": "In Proceedings of the 23rd international conference on Machine learning,", "citeRegEx": "Blei and Lafferty.,? \\Q2006\\E", "shortCiteRegEx": "Blei and Lafferty.", "year": 2006}, {"title": "A correlated topic model of science", "author": ["David M Blei", "John D Lafferty"], "venue": "The Annals of Applied Statistics,", "citeRegEx": "Blei and Lafferty.,? \\Q2007\\E", "shortCiteRegEx": "Blei and Lafferty.", "year": 2007}, {"title": "Latent Dirichlet allocation", "author": ["David M. Blei", "Andrew Y. Ng", "Michael I. Jordan"], "venue": "Journal of Machine Learning Research,", "citeRegEx": "Blei et al\\.,? \\Q2003\\E", "shortCiteRegEx": "Blei et al\\.", "year": 2003}, {"title": "The nested Chinese restaurant process and Bayesian nonparametric inference of topic hierarchies", "author": ["David M. Blei", "Thomas L. Griffiths", "Michael I. Jordan"], "venue": "Journal of the ACM,", "citeRegEx": "Blei et al\\.,? \\Q2010\\E", "shortCiteRegEx": "Blei et al\\.", "year": 2010}, {"title": "Reading tea leaves: How humans interpret topic models", "author": ["Jonathan Chang", "Jordan L Boyd-Graber", "Sean Gerrish", "Chong Wang", "David M Blei"], "venue": "In Advances in Neural Information Processing Systems,", "citeRegEx": "Chang et al\\.,? \\Q2009\\E", "shortCiteRegEx": "Chang et al\\.", "year": 2009}, {"title": "Full reconstruction of Markov models on evolutionary trees: Identifiability and consistency", "author": ["Joseph T. Chang"], "venue": "Mathematical Biosciences,", "citeRegEx": "Chang.,? \\Q1996\\E", "shortCiteRegEx": "Chang.", "year": 1996}, {"title": "Model-based multidimensional clustering of categorical data", "author": ["Tao Chen", "Nevin L. Zhang", "Tengfei Liu", "Kin Man Poon", "Yi Wang"], "venue": "Artificial Intelligence,", "citeRegEx": "Chen et al\\.,? \\Q2012\\E", "shortCiteRegEx": "Chen et al\\.", "year": 2012}, {"title": "Approximating discrete probability distributions with dependence trees", "author": ["C.K. Chow", "C.N. Liu"], "venue": "IEEE Transactions on Information Theory,", "citeRegEx": "Chow and Liu.,? \\Q1968\\E", "shortCiteRegEx": "Chow and Liu.", "year": 1968}, {"title": "Elements of information theory", "author": ["Thomas M Cover", "Joy A Thomas"], "venue": null, "citeRegEx": "Cover and Thomas.,? \\Q2012\\E", "shortCiteRegEx": "Cover and Thomas.", "year": 2012}, {"title": "Maximum likelihood from incomplete data via the EM algorithm", "author": ["Arthur P. Dempster", "Nan M. Laird", "Donald B. Rubin"], "venue": "Journal of the Royal Statistical Society. Series B (Methodological),", "citeRegEx": "Dempster et al\\.,? \\Q1977\\E", "shortCiteRegEx": "Dempster et al\\.", "year": 1977}, {"title": "Greedy learning of latent tree models for multidimensional clustering", "author": ["Teng-Fei Liu", "Nevin L. Zhang", "Peixian Chen", "April Hua Liu", "Leonard K.M. Poon", "Yi Wang"], "venue": "Machine Learning,", "citeRegEx": "Liu et al\\.,? \\Q2013\\E", "shortCiteRegEx": "Liu et al\\.", "year": 2013}, {"title": "Hierarchical latent tree analysis for topic detection", "author": ["Tengfei Liu", "Nevin L. Zhang", "Peixian Chen"], "venue": "In Machine Learning and Knowledge Discovery in Databases,", "citeRegEx": "Liu et al\\.,? \\Q2014\\E", "shortCiteRegEx": "Liu et al\\.", "year": 2014}, {"title": "Optimizing semantic coherence in topic models", "author": ["David Mimno", "Hanna M Wallach", "Edmund Talley", "Miriam Leenders", "Andrew McCallum"], "venue": "In Proceedings of the Conference on Empirical Methods in Natural Language Processing,", "citeRegEx": "Mimno et al\\.,? \\Q2011\\E", "shortCiteRegEx": "Mimno et al\\.", "year": 2011}, {"title": "Nested hierarchical dirichlet processes", "author": ["John Paisley", "Chong Wang", "David M Blei", "Michael I Jordan"], "venue": "IEEE Transactions on Pattern Analysis and Machine Intelligence,", "citeRegEx": "Paisley et al\\.,? \\Q2012\\E", "shortCiteRegEx": "Paisley et al\\.", "year": 2012}, {"title": "Probabilistic Reasoning in Intelligent Systems: Networks of Plausible Inference", "author": ["Judea Pearl"], "venue": null, "citeRegEx": "Pearl.,? \\Q1988\\E", "shortCiteRegEx": "Pearl.", "year": 1988}, {"title": "Bayesian model selection in social research", "author": ["Adrian E. Raftery"], "venue": "Sociological Methodology,", "citeRegEx": "Raftery.,? \\Q1995\\E", "shortCiteRegEx": "Raftery.", "year": 1995}, {"title": "Estimating the dimension of a model", "author": ["Gideon Schwarz"], "venue": "The Annals of Statistics,", "citeRegEx": "Schwarz.,? \\Q1978\\E", "shortCiteRegEx": "Schwarz.", "year": 1978}, {"title": "Discovering structure in high-dimensional data through correlation explanation", "author": ["Greg Ver Steeg", "Aram Galstyan"], "venue": "In Advances in Neural Information Processing Systems", "citeRegEx": "Steeg and Galstyan.,? \\Q2014\\E", "shortCiteRegEx": "Steeg and Galstyan.", "year": 2014}, {"title": "Hierarchical latent class models for cluster analysis", "author": ["Nevin L. Zhang"], "venue": "Journal of Machine Learning Research,", "citeRegEx": "Zhang.,? \\Q2004\\E", "shortCiteRegEx": "Zhang.", "year": 2004}, {"title": "Latent tree models and multidimensional clustering of categorical data", "author": ["Nevin L. Zhang", "Yi Wang", "Tao Chen"], "venue": "Technical Report HKUST-CS08-02, The Hong Kong Univeristy of Science and Technology,", "citeRegEx": "Zhang et al\\.,? \\Q2008\\E", "shortCiteRegEx": "Zhang et al\\.", "year": 2008}, {"title": "Discovery of latent structures: Experience with the CoIL challenge", "author": ["Nevin L. Zhang", "Yi Wang", "Tao Chen"], "venue": "Journal of Systems Science and Complexity,", "citeRegEx": "Zhang et al\\.,? \\Q2000\\E", "shortCiteRegEx": "Zhang et al\\.", "year": 2000}, {"title": "A study of recently discovered equalities about latent tree models using inverse edges", "author": ["Nevin L. Zhang", "Xiaofei Wang", "Peixian Chen"], "venue": "In Probabilistic Graphical Models,", "citeRegEx": "Zhang et al\\.,? \\Q2014\\E", "shortCiteRegEx": "Zhang et al\\.", "year": 2014}], "referenceMentions": [{"referenceID": 4, "context": "Currently the predominant approach to topic detection is latent Dirichlet allocation (LDA) (Blei et al., 2003).", "startOffset": 91, "endOffset": 110}, {"referenceID": 3, "context": "LDA has been developed to detect topics and to model relationships among them, including topic correlations (Blei and Lafferty, 2007), topic hierarchies (Blei et al.", "startOffset": 108, "endOffset": 133}, {"referenceID": 5, "context": "LDA has been developed to detect topics and to model relationships among them, including topic correlations (Blei and Lafferty, 2007), topic hierarchies (Blei et al., 2010; Paisley et al., 2012), and topic evolution (Blei and Lafferty, 2006).", "startOffset": 153, "endOffset": 194}, {"referenceID": 15, "context": "LDA has been developed to detect topics and to model relationships among them, including topic correlations (Blei and Lafferty, 2007), topic hierarchies (Blei et al., 2010; Paisley et al., 2012), and topic evolution (Blei and Lafferty, 2006).", "startOffset": 153, "endOffset": 194}, {"referenceID": 2, "context": ", 2012), and topic evolution (Blei and Lafferty, 2006).", "startOffset": 29, "endOffset": 54}, {"referenceID": 20, "context": "It is called hierarchical latent tree analysis (HLTA), where topics are organized hierarchically as a latent tree model (LTM) (Zhang, 2004; Zhang et al., 2008b) such as the one in Fig 1.", "startOffset": 126, "endOffset": 160}, {"referenceID": 12, "context": "A totally different approach to hierarchical topic detection is recently proposed by Liu et al. (2014). It is called hierarchical latent tree analysis (HLTA), where topics are organized hierarchically as a latent tree model (LTM) (Zhang, 2004; Zhang et al.", "startOffset": 85, "endOffset": 103}, {"referenceID": 13, "context": "It took, for instance, 17 hours to process a NIPS dataset that consists of fewer than 2,000 documents over 1,000 distinct words (Liu et al., 2014).", "startOffset": 128, "endOffset": 146}, {"referenceID": 12, "context": "Empirical results from Liu et al. (2014) indicate that HLTA finds significantly better topics and topic hierarchies than hierarchical latent Dirichlet allocation (hLDA), the first LDA-based method for hierarchical topic detection.", "startOffset": 23, "endOffset": 41}, {"referenceID": 11, "context": "The computational bottleneck of HLTA lies in the use of the EM algorithm (Dempster et al., 1977) for parameter estimation.", "startOffset": 73, "endOffset": 96}, {"referenceID": 7, "context": "PEM is motivated by the moments method, where parameters are determined by solving equations, each of which involves a small number of model parameters related to two or three observed variables (Chang, 1996; Anandkumar et al., 2012).", "startOffset": 195, "endOffset": 233}, {"referenceID": 0, "context": "PEM is motivated by the moments method, where parameters are determined by solving equations, each of which involves a small number of model parameters related to two or three observed variables (Chang, 1996; Anandkumar et al., 2012).", "startOffset": 195, "endOffset": 233}, {"referenceID": 15, "context": "PEM-HLTA is also as efficient as nHDP (Paisley et al., 2012), a state-of-the-art LDA-based method for hierarchical topic detection, and it significantly outperforms nHDP, as well as hLDA, in terms of the quality of topics and topic hierarchies.", "startOffset": 38, "endOffset": 60}, {"referenceID": 16, "context": "Because of the way the potentials are picked, LTMs are technically tree-structured Bayesian networks (Pearl, 1988).", "startOffset": 101, "endOffset": 114}, {"referenceID": 1, "context": "LTMs with a single latent variables are known as latent class models (LCMs)(Bartholomew and Knott, 1999).", "startOffset": 75, "endOffset": 104}, {"referenceID": 8, "context": "Hence LTMs are a tool for multidimensional clustering (Chen et al., 2012).", "startOffset": 54, "endOffset": 73}, {"referenceID": 10, "context": "This is done by estimating the mutual information (MI) (Cover and Thomas, 2012) between every pair of latent variables and building a Chow-Liu tree (Chow and Liu, 1968) over them, so as to form an overall model (Liu et al.", "startOffset": 55, "endOffset": 79}, {"referenceID": 9, "context": "This is done by estimating the mutual information (MI) (Cover and Thomas, 2012) between every pair of latent variables and building a Chow-Liu tree (Chow and Liu, 1968) over them, so as to form an overall model (Liu et al.", "startOffset": 148, "endOffset": 168}, {"referenceID": 12, "context": "This is done by estimating the mutual information (MI) (Cover and Thomas, 2012) between every pair of latent variables and building a Chow-Liu tree (Chow and Liu, 1968) over them, so as to form an overall model (Liu et al., 2013).", "startOffset": 211, "endOffset": 229}, {"referenceID": 12, "context": "1 UNI-DIMENSIONALITY TEST We rely on the uni-dimensionality test (UD-test) (Liu et al., 2013) to determine whether a set S of variables is uni-dimensional.", "startOffset": 75, "endOffset": 93}, {"referenceID": 18, "context": "The model selection criterion used is the BIC score (Schwarz, 1978).", "startOffset": 52, "endOffset": 67}, {"referenceID": 17, "context": "The quantity on the left hand side of Equation (2) is a large sample approximation of the natural logarithm of Bayes factor (Raftery, 1995) for comparing m1 and m2.", "startOffset": 124, "endOffset": 139}, {"referenceID": 7, "context": "A similar property of HMMs was first discovered by Chang (1996). We introduce some notations using m1 of Fig 2.", "startOffset": 51, "endOffset": 64}, {"referenceID": 20, "context": "Theorem 1 [ Zhang et al. (2014)] Let Y be the latent variable in an LCM and A,B,C be three of the observed variables.", "startOffset": 12, "endOffset": 32}, {"referenceID": 14, "context": "2 TOPIC COHERENCE AND MODEL QUALITY To quantitatively measure the quality of the topics, we use the topic coherence score proposed by Mimno et al. (2011). The metric depends on the number M of words used to characterize a topic.", "startOffset": 134, "endOffset": 154}, {"referenceID": 6, "context": "It should be noted that, in general, better model fit does not necessarily imply better topic quality (Chang et al., 2009).", "startOffset": 102, "endOffset": 122}, {"referenceID": 15, "context": "PEM-HLTA is also faster than nHDP, although the difference decreases with vocabulary size as nHDP works in a stochastic way (Paisley et al., 2012).", "startOffset": 124, "endOffset": 146}, {"referenceID": 15, "context": "Paisley et al. (2012) faced a similar problem with nHDP.", "startOffset": 0, "endOffset": 22}], "year": 2015, "abstractText": "Hierarchical latent tree analysis (HLTA) is recently proposed as a new method for topic detection. It differs fundamentally from the LDA-based methods in terms of topic definition, topic-document relationship, and learning method. It has been shown to discover significantly more coherent topics and better topic hierarchies. However, HLTA relies on the Expectation-Maximization (EM) algorithm for parameter estimation and hence is not efficient enough to deal with large datasets. In this paper, we propose a method to drastically speed up HLTA using a technique inspired by recent advances in the moments method. Empirical experiments show that our method greatly improves the efficiency of HLTA. It is as efficient as the state-of-the-art LDA-based method for hierarchical topic detection and finds substantially better topics and topic hierarchies.", "creator": "LaTeX with hyperref package"}}}