{"id": "1601.04800", "review": {"conference": "AAAI", "VERSION": "v1", "DATE_OF_SUBMISSION": "19-Jan-2016", "title": "Top-N Recommender System via Matrix Completion", "abstract": "top - n recommender systems have been investigated widely both in statistics industry and academia. however, the recommendation quality is far from satisfactory. in this paper, we definitely propose a little simple yet promising algorithm. we fill the user - item matrix based basically on a low - rank assumption and simultaneously keep the original information. to do that, observing a nonconvex rank relaxation rather than the customary nuclear norm is adopted to provide a truly better rank approximation and an efficient optimization strategy is designed. implementing a increasingly comprehensive expanded set of experiments on real datasets demonstrates that our method pushes the accuracy of generating top - n recommendation to a new level.", "histories": [["v1", "Tue, 19 Jan 2016 04:48:42 GMT  (70kb,D)", "http://arxiv.org/abs/1601.04800v1", "AAAI 2016"]], "COMMENTS": "AAAI 2016", "reviews": [], "SUBJECTS": "cs.IR cs.AI cs.LG stat.ML", "authors": ["zhao kang", "chong peng", "qiang cheng"], "accepted": true, "id": "1601.04800"}, "pdf": {"name": "1601.04800.pdf", "metadata": {"source": "CRF", "title": "Top-N Recommender System via Matrix Completion", "authors": ["Zhao Kang", "Chong Peng", "Qiang Cheng"], "emails": ["qcheng}@siu.edu"], "sections": [{"heading": "Introduction", "text": "The growth of online markets has made it increasingly difficult for people to find items which are interesting and useful to them. Top-N recommender systems have been widely adopted by the majority of e-commerce web sites to recommend size-N ranked lists of items that best fit customers\u2019 personal tastes and special needs (Linden, Smith, and York 2003). It works by estimating a consumer\u2019s response for new items, based on historical information, and suggesting to the consumer novel items for which the predicted response is high. In general, historical information can be obtained explicitly, for example, through ratings/reviews, or implicitly, from purchase history or access patterns (Desrosiers and Karypis 2011).\nOver the past decade, a variety of approaches have been proposed for Top-N recommender systems (Ricci, Rokach, and Shapira 2011). They can be roughly divided into three categories: neighborhood-based collaborative filtering, model-based collaborative filtering, and ranking-based methods. The general principle of neighborhood-based methods is to identify the similarities among users/items (Deshpande and Karypis 2004). For example, item-based k-nearest-neighbor (ItemKNN) collaborative filtering methods first identify a set of similar items for each of the items that the consumer has purchased, and then recommend TopN items based on those similar items. However, they suffer from low accuracy since they employ few item characteristics.\nCopyright c\u00a9 2016, Association for the Advancement of Artificial Intelligence (www.aaai.org). All rights reserved.\nModel-based methods build a model and then generate recommendations. For instance, the widely studied matrix factorization (MF) methods employ the user-item similarities in their latent space to extract the user-item purchase patterns. Pure singular-value-decomposition-based (PureSVD) matrix factorization method (Cremonesi, Koren, and Turrin 2010) characterizes users and items by the most principal singular vectors of the user-item matrix. A weighted regularized matrix factorization (WRMF) (Pan et al. 2008; Hu, Koren, and Volinsky 2008) method applies a weighting matrix to differentiate the contributions from observed purchase/rating activities and unobserved ones.\nThe third category of methods rely on ranking/retrieval criteria. Here, Top-N recommendation is treated as a ranking problem. A Bayesian personalized ranking (BPR) (Rendle et al. 2009) criterion, which is the maximum posterior estimator from a Bayesian analysis, is used to measure the difference between the rankings of user-purchased items and the rest items. BPR can be combined with ItemKNN (BPRkNN) and MF method (BPRMF). One common drawback of these approaches lies in low recommendation quality.\nRecently, a novel Top-N recommendation method SLIM (Ning and Karypis 2011) has been proposed. From user-item matrix X of size m \u00d7 n, it first learns a sparse aggregation coefficient matrix W \u2208 Rn\u00d7n+ by encoding each item as a linear combination of all other items and solving an l1-norm and l2-norm regularized optimization problem. Each entry wij describes the similarity between item i and j. SLIM has obtained better recommendation accuracy than the other state-of-the-art methods. However, SLIM can only capture relations between items that are co-purchased/co-rated by at least one user, while an intrinsic characteristic of recommender systems is sparsity due to the fact that users typically rate only a small portion of the available items.\nTo overcome the above limitation, LorSLIM (Cheng, Yin, and Yu 2014) has also imposed a low-rank constraint on W . It solves the following problem:\nmin W\n1 2 \u2016X \u2212XW\u20162F + \u03b2 2 \u2016W\u20162F + \u03bb\u2016W\u20161 + \u03b3\u2016W\u2016\u2217\ns.t. W \u2265 0, diag(W ) = 0,\nwhere \u2016W\u2016\u2217 is the nuclear norm of W , defined as the sum of its singular values. Low-rank structure is motivated by the fact that a few latent variables from F that explain items\u2019\nar X\niv :1\n60 1.\n04 80\n0v 1\n[ cs\n.I R\n] 1\n9 Ja\nn 20\n16\nfeatures in factor model W \u2248 FFT are of low rank. After obtaining W , the recommendation score for user i about an un-purchased/-rated item j is x\u0302ij = xTi wj , where xij = 0, xTi is the i-th row of X , and wj is the j-th column of W . Thus X\u0302 = XW . LorSLIM can model the relations between items even on sparse datasets and thus improves the performance.\nTo further boost the accuracy of Top-N recommender systems, we first fill the missing ratings by solving a nonconvex optimization problem, based on the assumption that the user\u2019 ratings are affected by only a few factors and the resulting rating matrix should be of low rank (Lee et al. 2014), and then make the Top-N recommendation. This is different from previous approaches: Middle values of the rating ranges, or the average user or item ratings are commonly utilized to fill out the missing ratings (Breese, Heckerman, and Kadie 1998; Deshpande and Karypis 2004); a more reliable approach utilizes content information (Melville, Mooney, and Nagarajan 2002; Li and Za\u0131\u0308ane 2004; Degemmis, Lops, and Semeraro 2007), for example, the missing ratings are provided by autonomous agents called filterbots (Good et al. 1999), which rate items based on some specific characteristics of their content; a low rank matrix factorization approach seeks to approximate X by a multiplication of low rank factors (Yu et al. 2009). Experimental results demonstrate the superior recommendation quality of our approach.\nDue to the inherent computational complexity of rank problems, the non-convex rank function is often relaxed to its convex surrogate, i.e. the nuclear norm (Cande\u0300s and Recht 2009; Recht, Xu, and Hassibi 2008). However, this substitution is not always valid and can lead to a biased solution (Shi and Yu 2011; Kang, Peng, and Cheng 2015b). Matrix completion with nuclear norm regularization can be significantly hurt when entries of the matrix are sampled non-uniformly (Srebro and Salakhutdinov 2010). Nonconvex rank approximation has received significant attention (Zhong et al. 2015; Kang and Cheng 2015). Thus we use log-determinant (logdet) function to approximate the rank function and design an effective optimization algorithm."}, {"heading": "Problem Formulation", "text": "The incomplete user-item purchases/ratings matrix is denoted as M of size m \u00d7 n. Mij is 1 or a positive value if user i has ever purchased/rated item j; otherwise it is 0. Our goal is to reconstruct a full matrix X , which is supposed to be low-rank. Consider the following matrix completion problem:\nmin X\nlogdet((XTX)1/2 + I)\ns.t. Xij = Mij , (i, j) \u2208 \u2126, (1)\nwhere \u2126 is the set of locations corresponding to the observed entries and I \u2208 Rn\u00d7n is an identity matrix. It is easy to show that logdet((XTX)1/2 + I) \u2264 \u2016X\u2016\u2217, i.e., logdet is a tighter rank approximation function than the nuclear norm. logdet also helps mitigate another inherent disadvantage of the nuclear norm, i.e., the imbalanced penalization of different singular values (Kang, Peng, and Cheng 2015a). Previously logdet(X + \u03b4I) was suggested to restrict the rank\nof positive semidefinite matrix X (Fazel, Hindi, and Boyd 2003), which is not guaranteed for more generalX , and also \u03b4 is required to be small, which leads to significantly biased approximation for small singular values. Compared to some other nonconvex relaxations in the literature (Lu et al. 2014), our formulation enjoys the simplicity and efficacy."}, {"heading": "Methodology", "text": "Considering that the user-item matrix is often nonnegative, we add nonnegative constraint X \u2265 0, i.e., element-wise positivity, for easy interpretation of the representation. Let P\u2126 be the orthogonal projection operator onto the span of matrices vanishing outside of \u2126 (i.e., \u2126c) so that\n(P\u2126(X))ij = { Xij , if Xij \u2208 \u2126; 0, if Xij \u2208 \u2126c.\nProblem (1) can be reformulated as\nmin X\nlogdet((XTX)1/2 + I) + lR+(X)\ns.t. P\u2126(X) = P\u2126(M), (2)\nwhere lR+ is the indicator function, defined element-wisely as\nlR+(x) = { 0, if x \u2265 0; +\u221e, otherwise.\nNotice that this is a nonconvex optimization problem, which is not easy to solve in general. Here we develop an effective optimization strategy based on augmented Lagrangian multiplier (ALM) method. By introducing an auxiliary variable Y , it has the following equivalent form\nmin X,Y\nlogdet((XTX)1/2 + I) + lR+(Y )\ns.t. P\u2126(X) = P\u2126(M), X = Y, (3)\nwhich has an augmented Lagrangian function of the form\nL(X,Y, Z) = logdet((XTX)1/2 + I) + lR+(Y )+ \u00b5\n2 \u2016X \u2212 Y + Z \u00b5 \u20162F s.t. P\u2126(X) = P\u2126(M),\n(4)\nwhere Z is a Lagrange multiplier and \u00b5 > 0 is a penalty parameter.\nThen, we can apply the alternating minimization idea to update X , Y , i.e., updating one of the two variables with the other fixed.\nGiven the current point Xt, Y t, Zt, we update Xt+1 by solving\nXt+1 = arg min X logdet((XTX)1/2 + I)+\n\u00b5t\n2 \u2016X \u2212 Y t + Z\nt\n\u00b5t \u20162F\n(5)\nThis can be converted to scalar minimization problems due to the following theorem (Kang et al. 2015).\nAlgorithm 1 Solve (3) Input: Original imcomplete data matrixM\u2126 \u2208 Rm\u00d7n, parameters \u00b50 > 0, \u03b3 > 1. Initialize: Y = P\u2126(M), Z = 0. REPEAT 1: Obtain X through (10). 2: Update Y as (12). 3: Update the Lagrangian multipliers Z by\nZt+1 = Zt + \u00b5t(Xt+1 \u2212 Y t+1).\n4: Update the parameter \u00b5t by \u00b5t+1 = \u03b3\u00b5t. UNTIL stopping criterion is met.\nTheorem 1 If F (Z) is a unitarily invariant function and SVD of A is A = U\u03a3AV T , then the optimal solution to the following problem\nmin Z F (Z) +\n\u03b2 2 \u2016Z \u2212A\u20162F (6)\nis Z\u2217 with SVD U\u03a3\u2217ZV T , where \u03a3\u2217Z = diag (\u03c3 \u2217); moreover, F (Z) = f \u25e6 \u03c3(Z), where \u03c3(Z) is the vector of nonincreasing singular values of Z, then \u03c3\u2217 is obtained by using the Moreau-Yosida proximity operator \u03c3\u2217 = proxf,\u03b2(\u03c3A), where \u03c3A := diag(\u03a3A), and\nproxf,\u03b2(\u03c3A) := arg min \u03c3\u22650\nf(\u03c3) + \u03b2\n2 \u2016\u03c3 \u2212 \u03c3A\u201622. (7)\nAccording to the first-order optimality condition, the gradient of the objective function of (7) with respect to each singular value should vanish. For logdet function, we have\n1\n1 + \u03c3i + \u03b2(\u03c3i \u2212 \u03c3i,A) = 0 s.t. \u03c3i \u2265 0. (8)\nThe above equation is quadratic and gives two roots. If \u03c3i,A = 0, the minimizer \u03c3\u2217i will be 0; otherwise, there exists a unique minimizer. Finally, we obtain the update of X variable with\nXt+1 = Udiag(\u03c3\u2217)V T . (9)\nThen we fix the values at the observed entries and obtain\nXt+1 = P\u2126c(Xt+1) + P\u2126(M). (10)\nTo update Y , we need to solve\nmin Y\nlR+(Y ) + \u00b5t 2 \u2016Xt+1 \u2212 Y + Z t \u00b5t \u20162F , (11)\nwhich yields the updating rule\nY t+1 = max(Xt+1 + Zt/\u00b5t, 0). (12)\nHere max(\u00b7) is an element-wise operator. The complete procedure is outlined in Algorithm 1.\nTo use the estimated matrix X\u0302 to make recommendation for user i, we just sort i\u2019s non-purchased/-rated items based on their scores in decreasing order and recommend the TopN items.\nThe \u201c#users\u201d, \u201c#items\u201d, \u201c#trns\u201d columns show the number of users, number of items and number of transactions, respectively, in each dataset. The \u201crsize\u201d and \u201ccsize\u201d columns are the average number of ratings for each user and on each item (i.e., row density and column density of the user-item matrix), respectively, in each dataset. Column corresponding to \u201cdensity\u201d shows the density of each dataset (i.e., density=#trns/(#users\u00d7#items)). The \u201cratings\u201d column is the rating range of each dataset with granularity 1."}, {"heading": "Experimental Evaluation", "text": ""}, {"heading": "Datasets", "text": "We evaluate the performance of our method on six different real datasets whose characteristics are summarized in Table 1. These datasets are from different sources and at different sparsity levels. They can be broadly categorized into two classes.\nThe first class includes Delicious, lastfm and BX. These three datasets have only implicit feedback (e.g., listening history), i.e., they are represented by binary matrices. In particular, Delicious was derived from the bookmarking and tagging information from a set of 2K users from Delicious social bookmarking system1 such that each URL was bookmarked by at least 3 users. Lastfm corresponds to music artist listening information which was obtained from the last.fm online music system2, in which each music artist was listened to by at least 10 users and each user listened to at least 5 artists. BX is a subset from the Book-Crossing dataset3 such that only implicit interactions were contained and each book was read by at least 10 users.\nThe second class contains ML100K, Netflix and Yahoo. All these datasets contain multi-value ratings. Specifically, the ML100K dataset corresponds to movie ratings and is a subset of the MovieLens research project4. The Netflix is a subset of data extracted from Netflix Prize dataset5 and each user rated at least 10 movies. The Yahoo dataset is a subset obtained from Yahoo!Movies user ratings6. In this dataset, each user rated at least 5 movies and each movie was rated by at least 3 users."}, {"heading": "Evaluation Methodology", "text": "We employ 5-fold Cross-Validation to demonstrate the efficacy of our proposed approach. For each run, each of the datasets is split into training and test sets by randomly selecting one of the non-zero entries for each user to be part of\n1http://www.delicious.com 2 http://www.last.fm 3http://www.informatik.uni-freiburg.de/ cziegler/BX/ 4http://grouplens.org/datasets/movielens/ 5http://www.netflixprize.com/ 6http://webscope.sandbox.yahoo.com/catalog.php?datatype=r\nthe test set7. The training set is used to train a model, then a size-N ranked list of recommended items for each user is generated. The evaluation of the model is conducted by comparing the recommendation list of each user and the item of that user in the test set. For the following results reported in this paper, N is equal to 10.\nTop-N recommendation is more like a ranking problem rather than a prediction task. The recommendation quality is measured by the hit-rate (HR) and the average reciprocal hitrank (ARHR) (Deshpande and Karypis 2004). They directly measure the performance of the model on the ground truth data, i.e., what users have already provided feedback for. As pointed out in (Ning and Karypis 2011), they are the most direct and meaningful measures in Top-N recommendation scenarios. HR is defined as\nHR = #hits\n#users , (13)\nwhere #hits is the number of users whose item in the test set is recommended (i.e., hit) in the size-N recommendation list, and #users is the total number of users. An HR value of 1.0 indicates that the algorithm is able to always recommend the hidden item, whereas an HR value of 0.0 denotes that the algorithm is not able to recommend any of the hidden items.\nA drawback of HR is that it treats all hits equally regardless of where they appear in the Top-N list. ARHR addresses it by rewarding each hit based on where it occurs in the Top-\n7We use the same data as in (Cheng, Yin, and Yu 2014), with partitioned datasets kindly provided by Yao Cheng.\nN list, which is defined as follows:\nARHR = 1\n#users #hits\u2211 i=1 1 pi , (14)\nwhere pi is the position of the test item in the ranked TopN list for the i-th hit. That is, hits that occur earlier in the ranked list are weighted higher than those occur later, and thus ARHR measures how strongly an item is recommended. The highest value of ARHR is equal to the hitrate and occurs when all the hits occur in the first position, whereas the lowest value is equal to HR/N when all the hits occur in the last position of the list."}, {"heading": "Comparison Algorithms", "text": "We compare the performance of the proposed method8 with seven other state-of-the-art Top-N recommendation algorithms, including the item neighborhood-based collaborative filtering method ItemKNN (Deshpande and Karypis 2004), two MF-based methods PureSVD (Cremonesi, Koren, and Turrin 2010) and WRMF (Hu, Koren, and Volinsky 2008), two ranking/retrieval criteria based methods BPRMF and BPRKNN (Rendle et al. 2009), SLIM (Ning and Karypis 2011), and LorSLIM (Cheng, Yin, and Yu 2014)."}, {"heading": "Experimental Results", "text": ""}, {"heading": "Top-N recommendation performance", "text": "We report the comparison results with other competing methods in Table 2. The results show that our algorithm per-\n8The implementation of our method is available at: https://github.com/sckangz/recom mc.\nforms better than all the other methods across all the datasets 9. Specifically, in terms of HR, our method outperforms ItemKNN, PureSVD, WRMF, BPRKNN, BPRMF, SLIM and LorSLIM by 41%, 48.14%, 35.40%, 28.69%, 36.57%, 26.26%, 12.38% on average, respectively, over all the six datasets; with respect to ARHR, ItemKNN, PureSVD, WRMF, BPRKNN, BPRMF, SLIM and LorSLIM are improved by 48.55%, 60.38%, 48.58%, 37.14%, 49.47%, 31.94%, 14.15% on average, respectively.\nAmong the seven state-of-the-art algorithms, LorSLIM is substantially better than the others. Moreover, SLIM is a lit-\n9A bug is found, so the result in published version is updated. We apologize for any inconvenience caused.\ntle better than others except on lastfm and ML100K among the rest six methods. Then BPRKNN performs best among the remaining five methods on average. Among the three MF-based models, BPRMF and WRMF have similar performance on most datasets and are much better than PureSVD on all datasets except on lastfm and ML100K."}, {"heading": "Recommendation for Different Top-N", "text": "Figure 1 shows the performance achieved by the various methods for different values of N for all six datasets. It demonstrates that the proposed method outperforms other algorithms in all scenarios. What is more, it is evident that the difference in performance between our approach and the\nother methods are consistently significant. It is interesting to note that LorSLIM, the second most competitive method, may be worse than some of the rest methods when N is large."}, {"heading": "Matrix Reconstruction", "text": "We compare our method with LorSLIM by looking at how they reconstruct the user-item matrix. We take ML100K as an example, whose density is 6.30% and the mean for those non-zero elements is 3.53. The reconstructed matrix from LorSLIM X\u0302 = XW has a density of 13.61%, whose nonzero values have a mean of 0.046. For those 6.30% non-zero entries in X , X\u0302 recovers 70.68% of them and their mean value is 0.0665. This demonstrates that lots of information is lost. On the contrary, our approach fully preserves the original information thanks to the constraint condition in our model. Our method recovers all zero values with a mean of 0.554, which is much higher than 0.046. This suggests that our method recovers X better than LorSLIM. This may explain the superior performance of our method."}, {"heading": "Parameter Tunning", "text": "Although our model is parameter-free, we introduce the auxiliary parameter \u00b5 during the optimization. In alternating direction method of multipliers (ADMM) (Yang and Yuan 2013), \u00b5 is fixed and it is not easy to choose an optimal value to balance the computational cost. Thus, a dynamical \u00b5, increasing at a rate of \u03b3, is preferred in real applications. \u03b3 > 1 controls the convergence speed. The larger \u03b3 is, the fewer iterations are to obtain the convergence, but meanwhile we may lose some precision. We show the effects of different initializations \u00b50 and \u03b3 on HR on dataset Delicious in Figure 2. It illustrates that our experimental results are not sensitive to them, which is reasonable since they are auxiliary parameters controlling mainly the convergence speed. In contrast, LorSLIM needs to tune four parameters, which are time consuming and not easy to operate."}, {"heading": "Efficiency Analysis", "text": "The time complexity of our algorithm is mainly from SVD. Exact SVD of a m \u00d7 n matrix has a time complexity\nof O(min{mn2,m2n}), in this paper we seek a low-rank matrix and thus only need a few principal singular vectors/values. Packages like PROPACK (Larsen 2004) can compute a rank k SVD with a cost of O(min{m2k, n2k}), which can be advantageous when k m,n. In fact, our algorithm is much faster than LorSLIM. Among the six datasets, ML100K and lastfm datasets have the smallest and largest sizes, respectively. Our method needs 9s and 5080s, respectively, on these two datasets, while LorSLIM takes 617s and 32974s. The time is measured on the same machine with an Intel Xeon E3-1240 3.40GHz CPU that has 4 cores and 8GB memory, running Ubuntu and Matlab (R2014a). Furthermore, without losing too much accuracy, \u03b3 can speed up our algorithm considerably. This is verified by Figure 3, which shows the computational time of our method on Delicious with varying \u03b3."}, {"heading": "Conclusion", "text": "In this paper, we present a matrix completion based method for the Top-N recommendation problem. The proposed method recovers the user-item matrix by solving a rank minimization problem. To better approximate the rank, a nonconvex function is applied. We conduct a comprehensive set of experiments on multiple datasets and compare its performance against that of other state-of-the-art Top-N recommendation algorithms. It turns out that our algorithm generates high quality recommendations, which improves the performance of the rest of methods considerably. This makes our approach usable in real-world scenarios."}, {"heading": "Acknowledgements", "text": "This work is supported by US National Science Foundation Grants IIS 1218712. Q. Cheng is the corresponding author."}], "references": [{"title": "Empirical analysis of predictive algorithms for collaborative filtering", "author": ["Heckerman Breese", "J.S. Kadie 1998] Breese", "D. Heckerman", "C. Kadie"], "venue": "In Proceedings of the Fourteenth conference on Uncertainty in artificial intelligence,", "citeRegEx": "Breese et al\\.,? \\Q1998\\E", "shortCiteRegEx": "Breese et al\\.", "year": 1998}, {"title": "Exact matrix completion via convex optimization. Foundations of Computational mathematics 9(6):717\u2013772", "author": ["Cand\u00e8s", "E.J. Recht 2009] Cand\u00e8s", "B. Recht"], "venue": null, "citeRegEx": "Cand\u00e8s et al\\.,? \\Q2009\\E", "shortCiteRegEx": "Cand\u00e8s et al\\.", "year": 2009}, {"title": "Lorslim: Low rank sparse linear methods for top-n recommendations", "author": ["Yin Cheng", "Y. Yu 2014] Cheng", "L. Yin", "Y. Yu"], "venue": "In Data Mining (ICDM),", "citeRegEx": "Cheng et al\\.,? \\Q2014\\E", "shortCiteRegEx": "Cheng et al\\.", "year": 2014}, {"title": "Performance of recommender algorithms on top-n recommendation tasks", "author": ["Koren Cremonesi", "P. Turrin 2010] Cremonesi", "Y. Koren", "R. Turrin"], "venue": "In Proceedings of the fourth ACM conference on Recommender systems,", "citeRegEx": "Cremonesi et al\\.,? \\Q2010\\E", "shortCiteRegEx": "Cremonesi et al\\.", "year": 2010}, {"title": "A content-collaborative recommender that exploits wordnet-based user profiles for neighborhood formation. User Modeling and User-Adapted Interaction 17(3):217\u2013255", "author": ["Lops Degemmis", "M. Semeraro 2007] Degemmis", "P. Lops", "G. Semeraro"], "venue": null, "citeRegEx": "Degemmis et al\\.,? \\Q2007\\E", "shortCiteRegEx": "Degemmis et al\\.", "year": 2007}, {"title": "Item-based top-n recommendation algorithms", "author": ["Deshpande", "M. Karypis 2004] Deshpande", "G. Karypis"], "venue": "ACM Transactions on Information Systems", "citeRegEx": "Deshpande et al\\.,? \\Q2004\\E", "shortCiteRegEx": "Deshpande et al\\.", "year": 2004}, {"title": "A comprehensive survey of neighborhood-based recommendation methods", "author": ["Desrosiers", "C. Karypis 2011] Desrosiers", "G. Karypis"], "venue": "In Recommender systems handbook", "citeRegEx": "Desrosiers et al\\.,? \\Q2011\\E", "shortCiteRegEx": "Desrosiers et al\\.", "year": 2011}, {"title": "Log-det heuristic for matrix rank minimization with applications to hankel and euclidean distance matrices", "author": ["Hindi Fazel", "M. Boyd 2003] Fazel", "H. Hindi", "S.P. Boyd"], "venue": "In American Control Conference,", "citeRegEx": "Fazel et al\\.,? \\Q2003\\E", "shortCiteRegEx": "Fazel et al\\.", "year": 2003}, {"title": "Combining collaborative filtering with personal agents for better recommendations", "author": ["Good"], "venue": null, "citeRegEx": "Good,? \\Q1999\\E", "shortCiteRegEx": "Good", "year": 1999}, {"title": "Collaborative filtering for implicit feedback datasets", "author": ["Koren Hu", "Y. Volinsky 2008] Hu", "Y. Koren", "C. Volinsky"], "venue": "In Data Mining,", "citeRegEx": "Hu et al\\.,? \\Q2008\\E", "shortCiteRegEx": "Hu et al\\.", "year": 2008}, {"title": "Robust pca via nonconvex rank approximation", "author": ["Kang", "Cheng 2015] Kang", "C. Zhao ang Peng", "Q. Cheng"], "venue": "In Data Mining (ICDM),", "citeRegEx": "Kang et al\\.,? \\Q2015\\E", "shortCiteRegEx": "Kang et al\\.", "year": 2015}, {"title": "Logdet rank minimization with application to subspace clustering. Computational intelligence and neuroscience 2015:68", "author": ["Kang"], "venue": null, "citeRegEx": "Kang,? \\Q2015\\E", "shortCiteRegEx": "Kang", "year": 2015}, {"title": "Robust subspace clustering via robust subspace clustering via smoothed rank approximation", "author": ["Peng Kang", "Z. Cheng 2015a] Kang", "C. Peng", "Q. Cheng"], "venue": "SIGNAL PROCESSING LETTERS,", "citeRegEx": "Kang et al\\.,? \\Q2015\\E", "shortCiteRegEx": "Kang et al\\.", "year": 2015}, {"title": "Robust subspace clustering via tighter rank approximation. ACM CIKM\u201915", "author": ["Peng Kang", "Z. Cheng 2015b] Kang", "C. Peng", "Q. Cheng"], "venue": null, "citeRegEx": "Kang et al\\.,? \\Q2015\\E", "shortCiteRegEx": "Kang et al\\.", "year": 2015}, {"title": "Propack-software for large and sparse svd calculations", "author": ["R.M. Larsen"], "venue": "Available online. URL http://sun. stanford", "citeRegEx": "Larsen,? \\Q2004\\E", "shortCiteRegEx": "Larsen", "year": 2004}, {"title": "Local collaborative ranking", "author": ["Y. Singer"], "venue": "In Proceedings of the 23rd international conference on World wide web,", "citeRegEx": "Singer,? \\Q2014\\E", "shortCiteRegEx": "Singer", "year": 2014}, {"title": "Combining usage, content, and structure data to improve web site recommendation", "author": ["Li", "J. Za\u0131\u0308ane 2004] Li", "O.R. Za\u0131\u0308ane"], "venue": "In E-Commerce and Web Technologies", "citeRegEx": "Li et al\\.,? \\Q2004\\E", "shortCiteRegEx": "Li et al\\.", "year": 2004}, {"title": "Generalized nonconvex nonsmooth low-rank minimization", "author": ["Lu"], "venue": "In Computer Vision and Pattern Recognition (CVPR),", "citeRegEx": "Lu,? \\Q2014\\E", "shortCiteRegEx": "Lu", "year": 2014}, {"title": "Content-boosted collaborative filtering for improved recommendations", "author": ["Mooney Melville", "P. Nagarajan 2002] Melville", "R.J. Mooney", "R. Nagarajan"], "venue": null, "citeRegEx": "Melville et al\\.,? \\Q2002\\E", "shortCiteRegEx": "Melville et al\\.", "year": 2002}, {"title": "Slim: Sparse linear methods for top-n recommender systems", "author": ["Ning", "X. Karypis 2011] Ning", "G. Karypis"], "venue": "In Data Mining (ICDM),", "citeRegEx": "Ning et al\\.,? \\Q2011\\E", "shortCiteRegEx": "Ning et al\\.", "year": 2011}, {"title": "One-class collaborative filtering", "author": ["Pan"], "venue": "In Data Mining,", "citeRegEx": "Pan,? \\Q2008\\E", "shortCiteRegEx": "Pan", "year": 2008}, {"title": "Necessary and sufficient conditions for success of the nuclear norm heuristic for rank minimization", "author": ["Xu Recht", "B. Hassibi 2008] Recht", "W. Xu", "B. Hassibi"], "venue": "In Decision and Control,", "citeRegEx": "Recht et al\\.,? \\Q2008\\E", "shortCiteRegEx": "Recht et al\\.", "year": 2008}, {"title": "Bpr: Bayesian personalized ranking from implicit feedback", "author": ["Rendle"], "venue": "In Proceedings of the Twenty-Fifth Conference on Uncertainty in Artificial Intelligence,", "citeRegEx": "Rendle,? \\Q2009\\E", "shortCiteRegEx": "Rendle", "year": 2009}, {"title": "Introduction to recommender systems handbook", "author": ["Rokach Ricci", "F. Shapira 2011] Ricci", "L. Rokach", "B. Shapira"], "venue": null, "citeRegEx": "Ricci et al\\.,? \\Q2011\\E", "shortCiteRegEx": "Ricci et al\\.", "year": 2011}, {"title": "Limitations of matrix completion via trace norm minimization", "author": ["Shi", "X. Yu 2011] Shi", "P.S. Yu"], "venue": "ACM SIGKDD Explorations Newsletter", "citeRegEx": "Shi et al\\.,? \\Q2011\\E", "shortCiteRegEx": "Shi et al\\.", "year": 2011}, {"title": "Collaborative filtering in a non-uniform world: Learning with the weighted trace norm", "author": ["Srebro", "N. Salakhutdinov 2010] Srebro", "R.R. Salakhutdinov"], "venue": "In Advances in Neural Information Processing Systems,", "citeRegEx": "Srebro et al\\.,? \\Q2010\\E", "shortCiteRegEx": "Srebro et al\\.", "year": 2010}, {"title": "Linearized augmented lagrangian and alternating direction methods for nuclear norm minimization", "author": ["Yang", "J. Yuan 2013] Yang", "X. Yuan"], "venue": null, "citeRegEx": "Yang et al\\.,? \\Q2013\\E", "shortCiteRegEx": "Yang et al\\.", "year": 2013}, {"title": "Fast nonparametric matrix factorization for large-scale collaborative filtering", "author": ["Yu"], "venue": "In Proceedings of the 32nd international ACM SIGIR conference on Research and development in information retrieval,", "citeRegEx": "Yu,? \\Q2009\\E", "shortCiteRegEx": "Yu", "year": 2009}, {"title": "A nonconvex relaxation approach for rank minimization problems", "author": ["Zhong"], "venue": "In Twenty-Ninth AAAI Conference on Artificial Intelligence", "citeRegEx": "Zhong,? \\Q2015\\E", "shortCiteRegEx": "Zhong", "year": 2015}], "referenceMentions": [{"referenceID": 10, "context": "This can be converted to scalar minimization problems due to the following theorem (Kang et al. 2015).", "startOffset": 83, "endOffset": 101}, {"referenceID": 14, "context": "Packages like PROPACK (Larsen 2004) can compute a rank k SVD with a cost of O(min{mk, nk}), which can be advantageous when k m,n.", "startOffset": 22, "endOffset": 35}], "year": 2016, "abstractText": "Top-N recommender systems have been investigated widely both in industry and academia. However, the recommendation quality is far from satisfactory. In this paper, we propose a simple yet promising algorithm. We fill the user-item matrix based on a low-rank assumption and simultaneously keep the original information. To do that, a nonconvex rank relaxation rather than the nuclear norm is adopted to provide a better rank approximation and an efficient optimization strategy is designed. A comprehensive set of experiments on real datasets demonstrates that our method pushes the accuracy of Top-N recommendation to a new level.", "creator": "LaTeX with hyperref package"}}}