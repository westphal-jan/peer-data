{"id": "1602.00490", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "1-Feb-2016", "title": "I Know What You Saw Last Minute - Encrypted HTTP Adaptive Video Streaming Title Classification", "abstract": "previous research has actually shown that online information can be extracted from encrypted online multimedia streams. this includes video titles classification of non http servers adaptive cinematic streams ( non - has ). this paper presents an algorithm for \\ emph { encrypted http adaptive video streaming title classification }. we evaluated our algorithm on a seemingly new youtube popular videos dataset # that inadvertently was collected from the internet under real - world network conditions. we provide the dataset and the crawler for expanding future research. our dynamic algorithm's classification accuracy is 98 \\ %.", "histories": [["v1", "Mon, 1 Feb 2016 12:15:27 GMT  (696kb)", "http://arxiv.org/abs/1602.00490v1", "9 pages. arXiv admin note: text overlap witharXiv:1602.00489"], ["v2", "Thu, 21 Jul 2016 06:42:01 GMT  (317kb,D)", "http://arxiv.org/abs/1602.00490v2", "9 pages. arXiv admin note: text overlap witharXiv:1602.00489"]], "COMMENTS": "9 pages. arXiv admin note: text overlap witharXiv:1602.00489", "reviews": [], "SUBJECTS": "cs.MM cs.LG cs.NI", "authors": ["ran dubin", "amit dvir", "ofir pele", "ofer hadar"], "accepted": false, "id": "1602.00490"}, "pdf": {"name": "1602.00490.pdf", "metadata": {"source": "CRF", "title": "I Know What You Saw Last Minute - Encrypted HTTP Adaptive Video Streaming Title Classification", "authors": ["Ran Dubin", "Amit Dvir"], "emails": [], "sections": [{"heading": null, "text": "ar X\niv :1\n60 2.\n00 49\n0v 1\n[ cs\n.M M\n] 1\nIndex Terms\u2014HTTP Adaptive Video Streaming, HTTP2, Encrypted Traffic, Classification, YouTube\nI. INTRODUCTION\nEvery day, hundreds of millions of internet users view videos online, in particular on mobile phones whose numbers are clearly going to increase [1]. By 2019, the share of video traffic is expected to increase to 80% of the total IP traffic, up from 67% in 2014. By 2019 the IP network will have to accommodate a video traffic of around 135 exabytes per month [1]. Currently, most of the video streaming web sites are using HTTP Adaptive Streaming (HAS).\nDynamic Adaptive Streaming over HTTP (DASH) is de facto standard method for HAS. DASH is a Multi Bit Rate (MBR) streaming method that was designed to improve viewers\u2019 Quality of Experience (QoE)[2]. In DASH, each video is divided into short segments, typically a few seconds long (2\u2212 16 seconds), and each segment is encoded several times, each time with a different quality representation. The user (player) Adaptation Logic (AL) algorithm is responsible for the automatic selection of the most suitable quality representation for each segment, based on the parameters such as client\u2019s playout buffer and network conditions. As a result, the quality representation in DASH can change between segments. In DASH, each quality representation is encoded in variable bit rates (VBRs). VBR does not attempt to control the output bit rate of the encoder, so that the distortion will not vary significantly [3].\nSince the adaptation logic selects the most suitable quality representation, where each has variable bit rate, information retrieval from the video streams is challenging.\nYouTube now occupies a market share of over 17% of the total mobile network bandwidth in North America [1], [4]. Recently YouTube is working over HTTP2 [5]. YouTube often uses DASH [6] with HTTP byte-range mode. In this mode, the byte range of each segment request can be different. Further information about byte-range will be discussed in Section II.\nYouTube have started to encrypt their video services [7]. As a result, traditional Deep Packet Inspection (DPI) methods for information retrieval in general and video title classification in particular are not viable.\nRecent works have shown that encryption is not sufficient to protect confidentiality [8], [9], [10], [11], [12], [13], [14], [15], [16]. Wright et al. [16] suggested a method that exploit the VBR codecs characteristics of encrypted Voice Over Internet Protocol (VOIP) streams for language identification.\nRecent works showed that video titles classification of encrypted video streams is possible [12], [13], [14]. These works use traffic patterns features such as packet size and the application layer information. Saponas et al. [12] uncovered security issues with consumer electronic gadgets that enables information retrieval such as video titles classification.\nLiu et al. [13] presented a method for video title classification of RTP/UDP internet traffic. In [14] Liu et al. presented an improved algorithm which is more efficient and demonstrated excellent results on a bigger data set with real network conditions. They use the wavelet transform for constructing unique and robust video signatures with different compactnesses.\nSince these works [12], [13], [14] have been conducted, there have been several changes in video traffic over the internet:\n\u2022 MBR adaptive streaming (the selected quality representation of the examined video title can change). \u2022 Adaptive byte-range selection over HTTP.\n\u2022 HTTP version 2 [5]. In this paper, we present a new video title classification algorithm of YouTube video streams over DASH. Our algorithm classify the video title once the viewer finished to see the movie. Inspired by previous works, we exploit the Variable Bit-Rate (VBR) encoding. We represent each video stream as a set of peaks\u2019 bit rate. We use an example-to-class nearest neighbor algorithm [17] that uses the set intersection as a similarity measure.\nWe evaluated our algorithm on a new YouTube popular videos dataset that was collected from the internet under realworld network conditions. We provide the dataset and the crawler for future research . Our algorithm\u2019s classification accuracy is 98%."}, {"heading": "II. YOUTUBE ANALYSIS", "text": "To have a better understanding about the traffic properties in the case of encrypted video streaming over DASH using HTTP2 (secure), we examined YouTube traffic under different browsers and in fixed and automatic (auto) download modes. In fixed mode, the player download a fixed video quality without quality representation adaptation. In the auto mode the player selects the quality representation based on the network conditions, browser resolution and buffer occupancy.\nFigs. 1(a)-1(d) depict the different traffic download patterns of a single video title stream. Note that the original download contained TCP re-transmissions and we filtered them using a TCP stack implementation [18].\nThe different traffic patterns are mainly caused by the browsers\u2019 player algorithms. However, the source video encoding process also affects pattern differences. It is noteworthy that at the time of our database creation, Chrome had a YouTube HTML5 player while Firefox had a Adobe flash based player. Figs. 1(a)-1(d) show that in the fixed mode, the traffic patterns of Chrome and Firefox differ significantly. In Firefox, there are small time periods where the bit rates are extremely low. In the auto mode, Firefox and Chrome have high bursty traffic with silence periods between peaks.\nFor the analysis, we used the Fiddler [19] web debugging proxy for viewing different requests without the encryption.\n2) Audio data and video data can be found in the same 5- tuple flow ({protocol (TCP/UDP), src IP, dst IP, src port, dst port}). In some cases we cannot distinguish between them. For example, using Fiddler we can see in Fig. I in the top flow, that the first two audio sections (the short sections) are very close to the two video sections (the long sections). This can cause a classification error. 3) Close video segments responses can be found in the same flow. For example, in Fig. I in the top flow, there are four segments (in the first video section) that are hard to separate. 4) The video and audio sections in each flow does not have a periodic order. 5) YouTube uses video advertisements which are often downloaded in high quality. As a result, distinguishing between them is not trivial. 6) The players download the same quality representation in parallel over different flows to accelerate the download."}, {"heading": "III. PROPOSED ALGORITHM", "text": "We propose a nearest neighbor algorithm for video title classification of YouTube encrypted video streams. The proposed solution architecture is common two both classification methods and illustrated in Fig. 4. The first two modules only pass YouTube video streams to the next modules. Each segment of network traffic enters the system separately and is first passed into the Connection Matching filter. This filter is responsible for checking whether the incoming flow is new or ongoing. It does so based on a five-tuple representation: {protocol (TCP/UDP), src IP, dst IP, src port, dst port}. If the incoming flow is new, the DPI filter decides whether it is a YouTube flow. This is done based on the SNI field in the Client Hello message which is part of the Secure Socket Layer (SSL) protocol. If the DPI module finds the following string: googlevideos.com (which identifies YouTube) in the SNI, the stream is passed to the Feature Creation module. Any ongoing or new traffic flow that is not recognized by\nthe DPI as video streaming is transparently passed into the network without further analysis. The Pre-Processing model remove audio and video features that as will be explained in Section IV-B.\nNote that in this paper we assume that we know how to detect Chrome browser traffic (in contrast to other browser YouTube traffic since the fact that each browser have different features). This can be done by identifying the audio stream of Chrome. We leave this task for future work. We decided to work with Chrome due to his support of HTTP2 and its increasing popularity.\nAfter the Feature Creation module and Feature Classification module which extracts statistical features in real time based on the arriving packets and module classify the video based of one of the proposed algorithms, are describe in details in sections III-A, III-B, III-C."}, {"heading": "A. Feature Creation", "text": "Our data crawler, identify an advertisement and click to skip them. Mostly due to the fact the the real video title can be downloaded from several sources and the Server Name Indication (SNI) is not unique. As a result in this work, since we skip the advertisement after few seconds (when allowed) we select the highest sum of bitrate as the starting point of the flow and only then we will start to create our features. This methods was found to be accurate, but reduces our feature space. Moreover, we leave the advertisement distinguishing to future work.\nDASH is streamed over a TCP transport protocol. Streaming applications have high bit rate consumption. Thus, feature creation methods need to take TCP limitations such as retransmission caused by network problems into account. Retransmission adds additional data to the stream that can cause classification errors.\nMany recent works have suggested methods for encrypted traffic classification and several surveys have presented detailed description of the state of the art methods [20], [21], [22], [23], [24]. Several works have examined different statistical features such as session duration [25], [26], [27], number of packets in a session [26], [28], [29], different variance\ncalculations of the minimum, maximum and average values of inter-arrival packet time [26], [28], payload size information [28], [30], bit rate [30], [31], Round-Trip Time (RTT) [31], packet direction [32] or server sent bit rate [33]. Not all these features are important for video streams classification. For instance, the packet size is often MTU size in video streaming, as video streaming consumes high bandwidth and re-transmission occurs often. Moreover, TCP parameters such as server sent bit rate, inter-arrival packet time, RTT and packet direction are weak features.\nState-of-the-art network traffic feature creation methods such as packet length, inter-arrival packet time and RTT packet direction are not suetable for video streaming. Due to the fact that the payload size in video streaming is often maximum size, delays in the network are varied and retransmissions cause false packet counts. Therefore, we suggest a single dimension bit rate feature based on a TCP stack retransmission filter using the TCP ACK method.\nOur feature creation starts after we identify that this traffic flow is a Chrome YouTube video flow. Any packet that enters the algorithm is verified by TCP stack implementation to prevent re-transmission packets from affecting our feature accuracy. Section IV-B will present our threshold experiment test results."}, {"heading": "B. Traffic Classification Algorithm - SVC with RBF Kernel", "text": "Each download was analyzed based on the steps in 4 were each download is represented bt feature vector of a length of 40 features (this is the maximum needed feature length after Section III-A). Downloads that doesn\u2019t have enough features are inserted with zeros. Each feature vector is standarize with Gaussian with 0 mean and unit variance. We used the well known SVC with RBF kernel [34] were the regularization parameter C and \u03b3 was found with 5 folds cross-validation over the following sets accordingly: {2\u22125, 2\u22123, ..., 215} and {2\u221215, 2\u221213, ..., 23}."}, {"heading": "C. Traffic Classification Algorithm - Exact Nearest Neighbor using Hamming Distance", "text": "Let\u2019s define H = {0, 1}. The d-dimensional Hamming Space Hd consists of bit strings of length d. Each point x \u2208 Hd is a string x = {x0, x1, ..., xd\u22121} of zero\u2019s and one\u2019s. Given two points x, y \u2208 Hd, the Hamming distance dH(x, y) between them is the number of positions at which the corresponding strings differ, i.e., dH(x, y) := |i : xi 6= yi|. When examining given two points x, y \u2208 Hd, their Hamming distance dH(x, y) can be computed in O(d) time for each y. Let\u2019s define Exact Nearest Neighbor (ENN) search problem by a given set P of n points in Hamming Space Hd, and a query point q \u2208 Hd, a nearest neighbor for q in P is a point p \u2208 P such that the Hamming distance dH(p, q) = 0 is minimized. Lets define S = {s0, s1, ..., sV as a collection of sets. Each set (single occurrence) of features from each one of the training title files after the pre-processing stage. The single result of the maximum count of ENN against all S is the defined as the classification results."}, {"heading": "IV. PERFORMANCE EVALUATION", "text": ""}, {"heading": "A. Dataset", "text": "We collected a training set of encrypted video streams, where each title was downloaded n = 90 times (each download may have different network conditions). Every segment of the stream is encoded to a feature. The name of each video is transformed to title index: y \u2208 {1 . . . V } were V = 30.\nThe video titles used in this study are popular YouTube videos from different categories such as news, video action trailers and GoPro videos []. In this study we decided to focus on the Chrome browser since it is the most popular browser in the market. Chrome YouTube player has two different modes of operation the fixed quality download mode and the adaptive quality selection mode. The Chrome YouTube player decide which quality representation to download based on his estimation of the client network conditions. As presented, both methods have different traffic signature patterns. Since, the automated mode is the default mode and the diversity of it\u2019s data is much more complex we decided to explore it in this work. Future studies will add additional browsers and operation modes. In order to collect our dataset we used the selenium framework in-order to program a smart YouTube web crawler (robot)1. The crawler receive the video title URL and the amount of seconds we want to record the download. We start to record before the crawler start and open the browser and we finish after the timer time is up. Since YouTube videos contains video advertisement we designed the crawler to search for the advertisement; when found, the crawler pushes the SKIP button when it appears in the player. Due to the fact the the video is downloaded through several connections it can be difficult to filter the advertisement connections from the video connections. As a result, in the pre-processing stage we select the largest session (5-Tuple representation) as the video title captures session. This method is wasting features that can be used for the classification. However, at the time of this research we do not have efficient algorithm (in the encryption level) that can distinguish between the real video from the advertisement. Please note that the SNI/(Client Hello) content is similar between them. Smarter methods for encrypted advertisement in YouTube are left for future work.\nThe training dataset contained 2700 video streams of 30 unique video titles (90 different downloads per title) each downloaded in the automated quality representation selection mode.\nFor each video in our dataset, YouTube provides a different subset of the following quality representations: [144P, 240P, 360P, 480P, 720P ].\nWe have three testing datasets:\n1) test-adaptive-test-titles: 300 video streams of 30 unique video titles (same titles as in the training phase). Each one has 10 different downloads with a automated representation selection.\n1https://github.com/randubin/YouTubeEncryptedVideoDownloader\n2) test-adaptive-with-drop-test-titles: 400 video streams of 10 unique video titles (titles taken from the training phase titles) each was download with additional added drop percentage from the following list: {1%, 3%, 6%, 9%} each download in the automated mode. 3) test-adaptive-with-delay-test-titles: 400 video streams of 10 unique video titles (titles taken from the training phase titles) each was download with additional added drop percentage from the following list: {100, 300, 600, 900}[ms] each downloaded in the automated mode. 4) Titles outside of the dataset: 30 video stream titles with one download per title downloaded in the automated mode. The titles are new and were not included in the training steps.\nAll the test video streams were different from the ones that were used in the training phase (because of network conditions). Furthermore, it is important to note that the added delay and drop effect the client player and causes it to select different (lower) representation different from the normal use.\nFig. 5(a) illustrates the variability of the features for each segment. Due to the above explanation the feature indexes are not a time series classification problems necessary. Furthermore, since that the network conditions effect the feature extraction they are not always the same as can be seen from the error plot in Fig. 5(b) ."}, {"heading": "B. Accuracy Evaluation using Different Training Feature Threshold Levels", "text": "In this test we evaluate different threshold levels in-order to find the best accuracy for our dataset. We use our entire training dataset with test-adaptive-test-titles. Each feature threshold was tested with three scenarios: without pre-processing filtering, with pre-processing filtering and with high pass bandwidth audio signals. The pre-processing stage is responsible to remove or partly remove audio features. Based on Fiddler analyze we found that low bit-rate audio traffic features has much lower entropy compared to video traffic which have higher bit-rate ranges. Audio traffic responses range are from 65 KBytes to 440 KBytes. However, as presented earlier it is not always possible to successfully distinguish in the encrypted traffic level between each audio/video responses. We have found that the few first features of the video server responses are not necessary unique and more correlated to the TCP window state. Usually, in the TCP slow start the TCP window is very small. After the first/second video segments the size of a video segment can be much bigger. Since our dataset contains videos with motion we can filter out the audio correctly but for music video with a static pictures the video and audio data looks similar and in those cased further research that will estimate the content type and video quality is needed. We leave this for future research. Note, that the segment real size in fiddler is not necessary the same in it\u2019s network traffic representation which can be effected by several factors explained before.\nFig. 6 summarize the adaptive threshold testing results. We can conclude that high threshold values tends to include small data peaks such as audio traffic while smaller values better isolates it. The best accuracy for the SVC(RBF) were achieved with audio high pass filter of 320 Kilo Bytes with 0.05 seconds adaptive threshold (72% accuracy). In our classifier the result gave the best performance with thresholds = 0.15 which achieves98% accuracy. For the rest of the paper we will use the SVC(RBF) classifier and our classifier with the following configuration:0.05 with pre-processing and 0.15 without preprocessing. Fig. 7(a) illustrates the SVC(RBF) Coefficient Matrix (CM) results while our CM illustrated in Fig. 7(b)( index number 30 in the matrix shows that the stream was not classified against the dataset. please note that different adaptive threshold and pre-processing can give close accuracy results but different stream are classified specially in SVC algorithm."}, {"heading": "C. Accuracy Evaluation using Different Training Dataset Sizes", "text": "In Fig. 8 we compare our recognition identification rate with different numbers of training video titles. We uses 10 test videos for each title and present the average accuracy for each dataset size. The figure shows that the SVC classifier performance have major increase from 5 to 60 titles. However, from 60 to 90 the accuracy gain increase in only 4%. It is interesting to see that even in a small scale dataset our proposed solution achieves high performances. When the dataset size is a single download we gain average accuracy of 79.66% with each increase in the dataset size the accuracy is improving until 98%. We will use our full dataset for the rest of the testing results."}, {"heading": "D. Evaluation of Robustness to Delays and Packet Losses", "text": "In this section we artificially added additional packet loss and delay to the network. Packet loss have a very strong influence over the player representation selection. We observed that the quality degraded from 720P in the regular scenarios to 240P and 144P when encountered with high packet loss\nratio (9%) especially. It is important to note that in our testing we added before the data capturing additional packet loss. Since, our training data set was build from normative network traffic (low packet loss). When the classifiers encounter with high packet loss it creates new testing data which with high probability our classifier doesn\u2019t recognize. As a result, in this scenario, we can expect low identification rate. Fig. 9(a) plots our algorithm\u2019s robustness to packet losses. We can observe that the SVC classifier is much more vulnerable to packet drop compared to our suggested method. When encountered with 1% packet loss the SVC classifier drops from 72% to 51% while our algorithm was not effected. When the packet loss increases to 9% we can see that our solution achieves 71% accuracy while the SVC classifier with 1% drop achieves 51% accuracy only. we can observe from 1% the SVC classifier has difficulties to classify the titles.\nFig. 9(b) depicts our algorithm\u2019s robustness to network delays. It is interesting to observe that both algorithms were more sensitive to delay compared to packet loss. When the player encounter with the additional delay he turn to rebuffering allot. We can see that after 100 [ms] the SVC accuracy was decreased to 50 % while the proposed solution accuracy was decreased in 2%. Our classifier show that even in high delay (900 [ms]) the algorithm achieve close performance to the SVC algorithm without any additional delays."}, {"heading": "E. Evaluation of Other Titles", "text": "In this section we used 30 different titles that are not part of the training titles. We are using our proposed solution were as before the last index indicates the the video was not classified. From the evaluation results in Fig. 10 we can observe that not even one title download feature was mistakenly classified as our training titles. Our future work will increase the amount of video titles tested in-order to understand the system accuracy in real deploymant."}, {"heading": "V. CLASSIFICATION UPPER BOUND", "text": "In this section we calculate the maximum upper bound for the maximum possible classification available based on our methods. After"}, {"heading": "VI. FUTURE OF ENCRYPTED TRAFFIC CLASSIFICATION", "text": "Network anonymity is an important issue for Internet users which gained a significant relevance with the development of encrypted network services. Users relay that encryption to hide their data transfer content and not allowing their activity content to be linked to them. Recent work such as VOIP stream VBR exploitation showed that encryption is not enough. Popular solution for providing client anonymity is the use of Onion Routing (OR)[35]. In OR the user content is routed through a series of tunnels solutions such as Tor [36] promise anonymity by routing data through several overlay nodes and using layered encryption of the content. Panchenko et al. [37] suggested a website fingerprinting attack over Tor in their solution they are not using TCP ACK information which they found to be irrelevant for Tor. In this work we tried to create a Tor dataset, however, the network conditions didn\u2019t enable to play the video stream smoothly in our area with Tor bundle package. In order to protect users from VBR exploitation websites should obfuscate network bitrate. SkypeMorph [38] suggested a Protocol Obfuscation for Tor Bridges. However, in order that all users can enjoy this obfuscation content owners should embed obfuscation algorithm in their data transfer mechanism. Network anonymity is an important issue for Internet users which gained a significant relevance with the development of encrypted network services. Users relay that encryption to hide their data transfer content and not allowing their activity content to be linked to them. Recent work such as VOIP stream VBR exploitation showed that encryption is not enough. Popular solution for providing client anonymity is the use of Onion Routing (OR)[35]. In OR the user content is routed through a series of tunnels solutions such as Tor [36] promise anonymity by routing data through several overlay nodes and using layered encryption of the content. Panchenko et al. [37] suggested a website fingerprinting attack over Tor in their solution they are not using TCP ACK information which they found to be irrelevant for Tor. In this work we tried to create a Tor dataset, however, the network conditions didn\u2019t enable to play the video stream smoothly in our area with Tor bundle package. In order to protect users from VBR exploitation websites should obfuscate network bitrate. SkypeMorph [38] suggested a Protocol Obfuscation for Tor Bridges. However, in order that all users can enjoy this obfuscation content owners should embed obfuscation algorithm in their data transfer mechanism."}, {"heading": "VII. CONCLUSIONS", "text": "In this work we present a novel HTTP encrypted adaptive streaming video title classification algorithm for YouTube with Chrome browser. The solution was evaluated with .. We have tested title duplication recognition by uploading a euniqe video twice with the same name and classifying it with the suggested\nalgorithm. The result of the classification was similar to our solution. We have tried to download our video and uploading it again. However, this time the classification failed since when the video was uploaded again and YouTube re-encode it and as a result the fingerprint changed. Therefore, we conclude that the VBR pattern for title duplication can work with our solution only for data duplication with the same source and not with same data with different encoding properties.\nWe found that exploiting the VBR nature of the audio and video encoded data can be suitable to detect the title name. We found that the data set size doesn\u2019t need to be large in-order to achieve good classification results. However, the dataset should represent all network conditions with all possible browser resolutions in order to effectively recognize each title. At the moment the classification is done in near real time but can be improve to real time with the creation of smart and representative title fingerprinting. Future work should consider the identification of encrypted video advertisement, classify different browsers based on the network features and increase the amount of tested streams. We open source our dataset and Chrome encrypted data crawler for future research in the area."}], "references": [{"title": "A Survey on Quality of Experience of HTTP Adaptive Streaming", "author": ["M. Seufert", "S. Egger", "M. Slanina", "T. Zinner", "T. Hofeld", "P. Tran- Gia"], "venue": "IEEE COMMUNICATION SURVEYS AND TUTORIALS, 17(1):469\u2013 492,", "citeRegEx": "2", "shortCiteRegEx": null, "year": 2015}, {"title": "A survey of statistical source models for variable bit-rate compressed video", "author": ["M.R. Izquierdo", "D.S. Reeves"], "venue": "Multimedia System, 7(3):199\u2013 213,", "citeRegEx": "3", "shortCiteRegEx": null, "year": 1999}, {"title": "A statistical approach to IP level classification of network traffic", "author": ["M. Crotti", "F. Gringoli", "P. Pelosato", "L. Salgarelli"], "venue": "International Conference on Communications, pages 170\u2013176, June", "citeRegEx": "8", "shortCiteRegEx": null, "year": 2006}, {"title": "Statistical traffic identification method based on flow-level behavior for fair VoIP service", "author": ["T. Okabe", "T. Kitamura", "T. Shizuno"], "venue": "IEEE Workshop on VoIP Management and Security, pages 35\u201340, April", "citeRegEx": "9", "shortCiteRegEx": null, "year": 2006}, {"title": "Timing analysis of keystrokes and timing attacks on ssh", "author": ["Dawn Xiaodong Song", "David Wagner", "Xuqing Tian"], "venue": "In Proceedings of the 10th Conference on USENIX Security Symposium - Volume", "citeRegEx": "10", "shortCiteRegEx": "10", "year": 2001}, {"title": "Password interception in a ssl/tls channel. In Advances in Cryptology - CRYPTO 2003, volume 2729 of Lecture Notes in Computer Science, pages 583\u2013599", "author": ["Brice Canvel", "Alain Hiltgen", "Serge Vaudenay", "Martin Vuagnoux"], "venue": null, "citeRegEx": "11", "shortCiteRegEx": "11", "year": 2003}, {"title": "Devices that tell on you: Privacy trends in consumer ubiquitous computing", "author": ["T. Scott Saponas", "Jonathan Lester", "Carl Hartung", "Sameer Agarwal", "Tadayoshi Kohno"], "venue": "In Proceedings of 16th USENIX Security Symposium on USENIX Security Symposium,", "citeRegEx": "12", "shortCiteRegEx": "12", "year": 2007}, {"title": "Wavelet-based traffic analysis for identifying video streams over broadband networks", "author": ["Yali Liu", "C. Ou", "Zhi Li", "C. Corbett", "B. Mukherjee", "D. Ghosal"], "venue": "In IEEE Global Telecommunications Conference,", "citeRegEx": "13", "shortCiteRegEx": "13", "year": 2008}, {"title": "Video streaming forensic content identification with traffic snooping", "author": ["Yali Liu", "Ahmad-Reza Sadeghi", "Dipak Ghosal", "Biswanath Mukherjee"], "venue": "In Information Security,", "citeRegEx": "14", "shortCiteRegEx": "14", "year": 2011}, {"title": "Phonotactic reconstruction of encrypted voip conversations: Hookt on fon-iks", "author": ["AM. White", "AR. Matthews", "KZ. Snow", "F. Monrose"], "venue": "Security and Privacy (SP), 2011 IEEE Symposium on, pages 3\u201318. IEEE,", "citeRegEx": "15", "shortCiteRegEx": null, "year": 2011}, {"title": "Language identification of encrypted voip traffic: Alejandra y roberto or alice and bob", "author": ["CV. Wright", "L. Ballard", "F. Monrose", "GM. Masson"], "venue": "In Proceedings of 16th USENIX Security Symposium on USENIX Security Symposium,", "citeRegEx": "16", "shortCiteRegEx": "16", "year": 2007}, {"title": "In defense of nearestneighbor based image classification", "author": ["Oren Boiman", "Eli Shechtman", "Michal Irani"], "venue": "In Computer Vision and Pattern Recognition,", "citeRegEx": "17", "shortCiteRegEx": "17", "year": 2008}, {"title": "Progressive download video rate traffic shaping using tcp window and deep packet inspection", "author": ["R. Dubin", "O. Hadar", "A. Noam", "R. Ohayon"], "venue": "WORLDCOMP,", "citeRegEx": "18", "shortCiteRegEx": null, "year": 2012}, {"title": "A survey of methods for encrypted traffic classification and analysis", "author": ["P. Velan", "M. \u010cerm\u00e1k", "P. \u010celeda", "M. Dra\u0161ar"], "venue": "International Journal of Network Management,", "citeRegEx": "20", "shortCiteRegEx": null, "year": 2015}, {"title": "A survey on encrypted traffic classification", "author": ["Z. Cao", "G. Xiong", "Y. Zhao", "Z. Li", "L. Guo"], "venue": "Applications and Techniques in Information Security, pages 73\u201381. Springer,", "citeRegEx": "21", "shortCiteRegEx": null, "year": 2014}, {"title": "A survey of techniques for internet traffic classification using machine learning", "author": ["TTT. Nguyen", "G. Armitage"], "venue": "Communications Surveys & Tutorials, IEEE, 10(4):56\u201376,", "citeRegEx": "22", "shortCiteRegEx": null, "year": 2008}, {"title": "Reviewing traffic classification", "author": ["S. Valenti", "D. Rossi", "A. Dainotti", "A. Pescap\u00e8", "A. Finamore", "M. Mellia"], "venue": "Data Traffic Monitoring and Analysis, pages 123\u2013147. Springer,", "citeRegEx": "23", "shortCiteRegEx": null, "year": 2013}, {"title": "Issues and future directions in traffic classification", "author": ["A. Dainotti", "A. Pescape", "KC. Claffy"], "venue": "Network, IEEE, 26(1):35\u201340,", "citeRegEx": "24", "shortCiteRegEx": null, "year": 2012}, {"title": "Empirically derived analytic models of wide-area tcp connections", "author": ["Vern Paxson"], "venue": "IEEE/ACM Transactions on Networking (TON),", "citeRegEx": "25", "shortCiteRegEx": "25", "year": 1994}, {"title": "Unveiling skype encrypted tunnels using gp", "author": ["R. Alshammari", "AN. Zincir-Heywood"], "venue": "Evolutionary Computation (CEC), 2010 IEEE Congress on, pages 1\u20138. IEEE,", "citeRegEx": "26", "shortCiteRegEx": null, "year": 2010}, {"title": "Self-learning ip traffic classification based on statistical flow characteristics", "author": ["S. Zander", "T. Nguyen", "G. Armitage"], "venue": "Passive and Active Network Measurement, pages 325\u2013328. Springer,", "citeRegEx": "27", "shortCiteRegEx": null, "year": 2005}, {"title": "Identification and analysis of skype peer-to-peer traffic", "author": ["D. Zhang", "C. Zheng", "H. Zhang", "H. Yu"], "venue": "Internet and Web Applications and Services (ICIW), 2010 Fifth International Conference on, pages 200\u2013206,", "citeRegEx": "28", "shortCiteRegEx": null, "year": 2010}, {"title": "Practical anomaly detection based on classifying frequent traffic patterns", "author": ["I. Paredes-Oliva", "I. Castell-Uroz", "P. Barlet-Ros", "X. Dimitropoulos", "J. Sole-Pareta"], "venue": "Computer Communications Workshops (INFOCOM WKSHPS), 2012 IEEE Conference on, pages 49\u201354,", "citeRegEx": "29", "shortCiteRegEx": null, "year": 2012}, {"title": "Detailed analysis of skype traffic", "author": ["D. Bonfiglio", "M. Mellia", "M. Meo", "D. Rossi"], "venue": "Multimedia, IEEE Transactions on, 11(1):117\u2013127,", "citeRegEx": "30", "shortCiteRegEx": null, "year": 2009}, {"title": "Quantifying skype user satisfaction", "author": ["KT. Chen", "CY. Huang", "P. Huang", "CL. Lei"], "venue": "ACM SIGCOMM Computer Communication Review, volume 36, pages 399\u2013410. ACM,", "citeRegEx": "31", "shortCiteRegEx": null, "year": 2006}, {"title": "Statistical protocol identification with spid: Preliminary results", "author": ["E. Hjelmvik", "W. John"], "venue": "Swedish National Computer Networking Workshop,", "citeRegEx": "32", "shortCiteRegEx": null, "year": 2009}, {"title": "Realtime classification for encrypted traffic", "author": ["R. Bar-Yanai", "M. Langberg", "D. Peleg", "L. Roditty"], "venue": "Experimental Algorithms, pages 373\u2013385. Springer,", "citeRegEx": "33", "shortCiteRegEx": null, "year": 2010}, {"title": "The pairwise piecewise-linear embedding for efficient non-linear classification", "author": ["Ofir Pele", "Ben Taskar", "Amir Globerson", "Michael Werman"], "venue": "In ICML,", "citeRegEx": "34", "shortCiteRegEx": "34", "year": 2013}, {"title": "Onion routing", "author": ["D. Goldschlag", "M. Reed", "P. Syverson"], "venue": "Communications of the ACM, 42(2):39\u201341,", "citeRegEx": "35", "shortCiteRegEx": null, "year": 1999}, {"title": "Tor: The secondgeneration onion router", "author": ["R. Dingledine", "N. Mathewson", "P. Syverson"], "venue": "Technical report, DTIC Document,", "citeRegEx": "36", "shortCiteRegEx": null, "year": 2004}, {"title": "Website fingerprinting in onion routing based anonymization networks", "author": ["A. Panchenko", "L. Niessen", "A. Zinnen", "T. Engel"], "venue": "Proceedings of the 10th annual ACM workshop on Privacy in the electronic society, pages 103\u2013114. ACM,", "citeRegEx": "37", "shortCiteRegEx": null, "year": 2011}, {"title": "Skypemorph: Protocol obfuscation for tor bridges", "author": ["H. Mohajeri Moghaddam", "B. Li", "M. Derakhshani", "I. Goldberg"], "venue": "Proceedings of the 2012 ACM conference on Computer and communications security, pages 97\u2013108. ACM,", "citeRegEx": "38", "shortCiteRegEx": null, "year": 2012}], "referenceMentions": [{"referenceID": 0, "context": "DASH is a Multi Bit Rate (MBR) streaming method that was designed to improve viewers\u2019 Quality of Experience (QoE)[2].", "startOffset": 113, "endOffset": 116}, {"referenceID": 1, "context": "VBR does not attempt to control the output bit rate of the encoder, so that the distortion will not vary significantly [3].", "startOffset": 119, "endOffset": 122}, {"referenceID": 2, "context": "Recent works have shown that encryption is not sufficient to protect confidentiality [8], [9], [10], [11], [12], [13], [14], [15], [16].", "startOffset": 85, "endOffset": 88}, {"referenceID": 3, "context": "Recent works have shown that encryption is not sufficient to protect confidentiality [8], [9], [10], [11], [12], [13], [14], [15], [16].", "startOffset": 90, "endOffset": 93}, {"referenceID": 4, "context": "Recent works have shown that encryption is not sufficient to protect confidentiality [8], [9], [10], [11], [12], [13], [14], [15], [16].", "startOffset": 95, "endOffset": 99}, {"referenceID": 5, "context": "Recent works have shown that encryption is not sufficient to protect confidentiality [8], [9], [10], [11], [12], [13], [14], [15], [16].", "startOffset": 101, "endOffset": 105}, {"referenceID": 6, "context": "Recent works have shown that encryption is not sufficient to protect confidentiality [8], [9], [10], [11], [12], [13], [14], [15], [16].", "startOffset": 107, "endOffset": 111}, {"referenceID": 7, "context": "Recent works have shown that encryption is not sufficient to protect confidentiality [8], [9], [10], [11], [12], [13], [14], [15], [16].", "startOffset": 113, "endOffset": 117}, {"referenceID": 8, "context": "Recent works have shown that encryption is not sufficient to protect confidentiality [8], [9], [10], [11], [12], [13], [14], [15], [16].", "startOffset": 119, "endOffset": 123}, {"referenceID": 9, "context": "Recent works have shown that encryption is not sufficient to protect confidentiality [8], [9], [10], [11], [12], [13], [14], [15], [16].", "startOffset": 125, "endOffset": 129}, {"referenceID": 10, "context": "Recent works have shown that encryption is not sufficient to protect confidentiality [8], [9], [10], [11], [12], [13], [14], [15], [16].", "startOffset": 131, "endOffset": 135}, {"referenceID": 10, "context": "[16] suggested a method that exploit the VBR codecs characteristics of encrypted Voice Over Internet Protocol (VOIP) streams for language identification.", "startOffset": 0, "endOffset": 4}, {"referenceID": 6, "context": "Recent works showed that video titles classification of encrypted video streams is possible [12], [13], [14].", "startOffset": 92, "endOffset": 96}, {"referenceID": 7, "context": "Recent works showed that video titles classification of encrypted video streams is possible [12], [13], [14].", "startOffset": 98, "endOffset": 102}, {"referenceID": 8, "context": "Recent works showed that video titles classification of encrypted video streams is possible [12], [13], [14].", "startOffset": 104, "endOffset": 108}, {"referenceID": 6, "context": "[12] uncovered security issues with consumer electronic gadgets that enables information retrieval such as video titles classification.", "startOffset": 0, "endOffset": 4}, {"referenceID": 7, "context": "[13] presented a method for video title classification of RTP/UDP internet traffic.", "startOffset": 0, "endOffset": 4}, {"referenceID": 8, "context": "In [14] Liu et al.", "startOffset": 3, "endOffset": 7}, {"referenceID": 6, "context": "Since these works [12], [13], [14] have been conducted, there have been several changes in video traffic over the internet:", "startOffset": 18, "endOffset": 22}, {"referenceID": 7, "context": "Since these works [12], [13], [14] have been conducted, there have been several changes in video traffic over the internet:", "startOffset": 24, "endOffset": 28}, {"referenceID": 8, "context": "Since these works [12], [13], [14] have been conducted, there have been several changes in video traffic over the internet:", "startOffset": 30, "endOffset": 34}, {"referenceID": 11, "context": "We use an example-to-class nearest neighbor algorithm [17] that uses the set intersection as a similarity measure.", "startOffset": 54, "endOffset": 58}, {"referenceID": 12, "context": "Note that the original download contained TCP re-transmissions and we filtered them using a TCP stack implementation [18].", "startOffset": 117, "endOffset": 121}, {"referenceID": 13, "context": "Many recent works have suggested methods for encrypted traffic classification and several surveys have presented detailed description of the state of the art methods [20], [21], [22], [23], [24].", "startOffset": 166, "endOffset": 170}, {"referenceID": 14, "context": "Many recent works have suggested methods for encrypted traffic classification and several surveys have presented detailed description of the state of the art methods [20], [21], [22], [23], [24].", "startOffset": 172, "endOffset": 176}, {"referenceID": 15, "context": "Many recent works have suggested methods for encrypted traffic classification and several surveys have presented detailed description of the state of the art methods [20], [21], [22], [23], [24].", "startOffset": 178, "endOffset": 182}, {"referenceID": 16, "context": "Many recent works have suggested methods for encrypted traffic classification and several surveys have presented detailed description of the state of the art methods [20], [21], [22], [23], [24].", "startOffset": 184, "endOffset": 188}, {"referenceID": 17, "context": "Many recent works have suggested methods for encrypted traffic classification and several surveys have presented detailed description of the state of the art methods [20], [21], [22], [23], [24].", "startOffset": 190, "endOffset": 194}, {"referenceID": 18, "context": "Several works have examined different statistical features such as session duration [25], [26], [27], number of packets in a session [26], [28], [29], different variance", "startOffset": 84, "endOffset": 88}, {"referenceID": 19, "context": "Several works have examined different statistical features such as session duration [25], [26], [27], number of packets in a session [26], [28], [29], different variance", "startOffset": 90, "endOffset": 94}, {"referenceID": 20, "context": "Several works have examined different statistical features such as session duration [25], [26], [27], number of packets in a session [26], [28], [29], different variance", "startOffset": 96, "endOffset": 100}, {"referenceID": 19, "context": "Several works have examined different statistical features such as session duration [25], [26], [27], number of packets in a session [26], [28], [29], different variance", "startOffset": 133, "endOffset": 137}, {"referenceID": 21, "context": "Several works have examined different statistical features such as session duration [25], [26], [27], number of packets in a session [26], [28], [29], different variance", "startOffset": 139, "endOffset": 143}, {"referenceID": 22, "context": "Several works have examined different statistical features such as session duration [25], [26], [27], number of packets in a session [26], [28], [29], different variance", "startOffset": 145, "endOffset": 149}, {"referenceID": 19, "context": "calculations of the minimum, maximum and average values of inter-arrival packet time [26], [28], payload size information [28], [30], bit rate [30], [31], Round-Trip Time (RTT) [31], packet direction [32] or server sent bit rate [33].", "startOffset": 85, "endOffset": 89}, {"referenceID": 21, "context": "calculations of the minimum, maximum and average values of inter-arrival packet time [26], [28], payload size information [28], [30], bit rate [30], [31], Round-Trip Time (RTT) [31], packet direction [32] or server sent bit rate [33].", "startOffset": 91, "endOffset": 95}, {"referenceID": 21, "context": "calculations of the minimum, maximum and average values of inter-arrival packet time [26], [28], payload size information [28], [30], bit rate [30], [31], Round-Trip Time (RTT) [31], packet direction [32] or server sent bit rate [33].", "startOffset": 122, "endOffset": 126}, {"referenceID": 23, "context": "calculations of the minimum, maximum and average values of inter-arrival packet time [26], [28], payload size information [28], [30], bit rate [30], [31], Round-Trip Time (RTT) [31], packet direction [32] or server sent bit rate [33].", "startOffset": 128, "endOffset": 132}, {"referenceID": 23, "context": "calculations of the minimum, maximum and average values of inter-arrival packet time [26], [28], payload size information [28], [30], bit rate [30], [31], Round-Trip Time (RTT) [31], packet direction [32] or server sent bit rate [33].", "startOffset": 143, "endOffset": 147}, {"referenceID": 24, "context": "calculations of the minimum, maximum and average values of inter-arrival packet time [26], [28], payload size information [28], [30], bit rate [30], [31], Round-Trip Time (RTT) [31], packet direction [32] or server sent bit rate [33].", "startOffset": 149, "endOffset": 153}, {"referenceID": 24, "context": "calculations of the minimum, maximum and average values of inter-arrival packet time [26], [28], payload size information [28], [30], bit rate [30], [31], Round-Trip Time (RTT) [31], packet direction [32] or server sent bit rate [33].", "startOffset": 177, "endOffset": 181}, {"referenceID": 25, "context": "calculations of the minimum, maximum and average values of inter-arrival packet time [26], [28], payload size information [28], [30], bit rate [30], [31], Round-Trip Time (RTT) [31], packet direction [32] or server sent bit rate [33].", "startOffset": 200, "endOffset": 204}, {"referenceID": 26, "context": "calculations of the minimum, maximum and average values of inter-arrival packet time [26], [28], payload size information [28], [30], bit rate [30], [31], Round-Trip Time (RTT) [31], packet direction [32] or server sent bit rate [33].", "startOffset": 229, "endOffset": 233}, {"referenceID": 27, "context": "We used the well known SVC with RBF kernel [34] were the regularization parameter C and \u03b3 was found with 5 folds cross-validation over the following sets accordingly: {2, 2, .", "startOffset": 43, "endOffset": 47}, {"referenceID": 28, "context": "Popular solution for providing client anonymity is the use of Onion Routing (OR)[35].", "startOffset": 80, "endOffset": 84}, {"referenceID": 29, "context": "In OR the user content is routed through a series of tunnels solutions such as Tor [36] promise anonymity by routing data through several overlay nodes and using layered encryption of the content.", "startOffset": 83, "endOffset": 87}, {"referenceID": 30, "context": "[37] suggested a website fingerprinting attack over Tor in their solution they are not using TCP ACK information which they found to be irrelevant for Tor.", "startOffset": 0, "endOffset": 4}, {"referenceID": 31, "context": "SkypeMorph [38] suggested a Protocol Obfuscation for Tor Bridges.", "startOffset": 11, "endOffset": 15}, {"referenceID": 28, "context": "Popular solution for providing client anonymity is the use of Onion Routing (OR)[35].", "startOffset": 80, "endOffset": 84}, {"referenceID": 29, "context": "In OR the user content is routed through a series of tunnels solutions such as Tor [36] promise anonymity by routing data through several overlay nodes and using layered encryption of the content.", "startOffset": 83, "endOffset": 87}, {"referenceID": 30, "context": "[37] suggested a website fingerprinting attack over Tor in their solution they are not using TCP ACK information which they found to be irrelevant for Tor.", "startOffset": 0, "endOffset": 4}, {"referenceID": 31, "context": "SkypeMorph [38] suggested a Protocol Obfuscation for Tor Bridges.", "startOffset": 11, "endOffset": 15}], "year": 2017, "abstractText": "Previous research has shown that information can be extracted from encrypted multimedia streams. This includes video titles classification of non HTTP adaptive streams (nonHAS). This paper presents an algorithm for encrypted HTTP adaptive video streaming title classification. We evaluated our algorithm on a new YouTube popular videos dataset that was collected from the internet under real-world network conditions. We provide the dataset and the crawler for future research. Our algorithm\u2019s classification accuracy is 98%.", "creator": "LaTeX with hyperref package"}}}