{"id": "1603.00441", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "1-Mar-2016", "title": "Crowdsourcing On-street Parking Space Detection", "abstract": "as the number issue of vehicles continues to grow, parking spaces are at a premium in arterial city streets. additionally, due to the lack of knowledge about street parking spaces, subtle heuristic behavior circling the blocks hopefully not only costs drivers'time and fuel, but also increases city congestion. accelerated in the wake of recent trend to build convenient, inexpensive green and energy - efficient smart cities, while we rethink common architectural techniques allegedly adopted adopted by high - profile smart parking systems, plan and present a user - engaged ( crowdsourcing ) and sonar - based prototype to identify urban on - street parking spaces. the prototype includes an ultrasonic sensor, a gps receiver simulator and associated arduino mechanical micro - controllers. it is mounted on the passenger side of a car to measure the distance from the vehicle or to confirm the nearest roadside obstacle. multiple road intersection tests are conducted around wheatley, oxford to gather results and emulate demonstrating the crowdsourcing approach. by effectively extracting parked vehicles'features from the collected trace, a supervised learning algorithm is developed to estimate roadside parking occupancy fluctuations and spot illegal parking vehicles. a quantity estimation model is intentionally derived to potentially calculate the required number of sensing units allotted to partially cover urban streets. the estimation is quantitatively compared to a fixed sensing solution. the results show consensus that the crowdsourcing way would need substantially fewer sensors compared to evaluating the fixed sensing system.", "histories": [["v1", "Tue, 1 Mar 2016 20:22:08 GMT  (1959kb,D)", "http://arxiv.org/abs/1603.00441v1", "8 pages, 4 figures"]], "COMMENTS": "8 pages, 4 figures", "reviews": [], "SUBJECTS": "cs.HC cs.LG", "authors": ["ruizhi liao", "cristian roman", "peter ball", "shumao ou", "liping chen"], "accepted": false, "id": "1603.00441"}, "pdf": {"name": "1603.00441.pdf", "metadata": {"source": "CRF", "title": "Crowdsourcing On-street Parking Space Detection", "authors": ["Ruizhi Liao", "Cristian Roman", "Peter Ball", "Shumao Ou", "Liping Chen"], "emails": ["rliao@brookes.ac.uk,", "pball@brookes.ac.uk,", "sou@brookes.ac.uk,", "cristian@cristianroman.com,", "lipingch@ie.ibm.com"], "sections": [{"heading": null, "text": "Index Terms\non-street/roadside parking, crowdsourcing, sonar/ultrasonic, supervised learning\nar X\niv :1\n60 3.\n00 44\n1v 1\n[ cs\n.H C\n] 1\nM ar\n2 01\n6\n1 Crowdsourcing On-street Parking Space Detection\nI. INTRODUCTION\nDue to the lack of real-time knowledge about the roadside parking occupancy, circling around urban streets to find a parking space not only wastes time and fuel, but also increases traffic flows. The continuous growth of vehicles and the waves of urbanization made the parking problem worse. A downtown traffic study [1] on several major cities reveals that cruising for kerb vacancies is an often-overlooked source of congestion, which accounts for up to 30 percent of total traffic flows1. In order to quantify the wasted time and fuel, we made an intuitive calculation based on the JustPark2 estimation that heuristic searching takes an average of 6.75 minutes to find a parking spot in the UK. Assuming the turnover of a parking spot is 10 cars a day, cruising for parking costs 67.5 minutes per spot a day (24637.5 minutes a year). If the cruising speed is 15 kilometers per hour (km/h), it generates 16.87 km per spot a day (6157.55 km a year), or 615.755 litres fuel a year for a single parking spot - based on a consumption of 10 litres fuel per 100 km at the speed of 15 km/h. Imagine the number of roadside parking spots worldwide, and its impact in both ecological and economical terms.\nThe frustrating circling, and the above-mentioned time or fuel wastes are exactly what an Intelligent Transportation System (ITS) aims to address, or broadly speaking, to build convenient, green and energy-efficient Smart Cities. There are various ITS or smart city projects related to parking monitoring, such as private parking [2] [3], off-street parking [4] [5] and on-street parking [6] [7].\nPrivate parking originates from peer-to-peer based sharing economy, whose concept is to rent out owners\u2019 spare facilities, e.g., Airbnb for rooms, Uber for cars, and JustPark for empty driveways. Off-street parking refers to multi-storey car parks or large fields that can accommodate hundreds of vehicles. The occupancy of off-street parks can be easily obtained by applying entrance counters, acoustic or vision based sensing techniques. The parking availability is disseminated via APPs or web portals (e.g., Parker and Parkopedia). On-street or roadside parking refers to parking spaces along public roads.\n1The surveyed cities include New York, San Francisco, Freiburg, Jerusalem, Cape Town, Sydney and London.\n2www.justpark.com.\nIt accounts for a considerable fraction of urban parking, and moreover, it provides preferable access to drivers\u2019 destinations. However, on-street parking spaces are not usually monitored.\nThe reasons for that are twofold. First, comparing to offstreet parking, on-street parking has more severe environment, e.g., harsh weather or light conditions, which may negatively impact sensors\u2019 functionalities. Secondly, although Smart City implies the trend of using various sensing technologies to instrument the city, it is rather expensive and unscalable to dig underneaths or mount overhead for roadside parking due to safety, road implementation, maintenance and municipal coordination issues that may get involved.\nFor these reasons, we focus on on-street parking and present a user-engaged Crowdsourcing Parking monitoring system, which is named as CroPark. It employs ultrasonic sensors to measure the distance from the vehicle to roadside, and uses a supervised learning algorithm to estimate the number of available parking spaces. Only a reduced set of the sensed data, namely, the interpreted parked vehicles and empty spaces, together with Global Positioning System (GPS) coordinates, vehicle speed and timestamps, are transmitted to a central server, where a parking occupancy map is built. The parking availability information is updated as next CroPark vehicle passes by, and disseminated to traffic enforcement or users via a mobile APP or a web portal.\nThe rest of the article is organized as follows. First, Section II reviews relevant on-street parking systems, and summarizes representative features of each work. By exploring other systems, the contributions of CroPark are also presented. Then, Section III explains the CroPark system and the supervised learning algorithm. After that, Section IV analyses our drivetest data and presents obtained results. Finally, Section VI concludes the article and looks into future works."}, {"heading": "II. RELATED WORK AND CONTRIBUTIONS", "text": "In this section, we overview prominent on-street parking systems and summarize their representative features. By comparing CroPark with these parking systems, the contributions of our work are described.\nSFpark [6] is a U.S. federally-funded parking management project in San Francisco, which spans from 2009 to 2014 with\n2\na total budget of 46.2 million dollars. It adopts a classical wireless sensor network structure, where the data flows from parking sensors and parking meters to a data warehouse via wireless mesh networks. The system gives a complete on/offstreet parking solution and brings a list of benefits: easier to find parking (searching time decreases by 43%), reduced congestion (traffic volume decreases by 8%), lower parking rates (11 cents cheaper), fewer parking tickets (23% lower), et cetera. However, the cost of the high-profile parking sysem is rather high. The SFpark pilot deployment installed 11700 magnetometer sensors and 300 pole-mounted mesh nodes for 8000 parking spaces (one or two sensors are installed in each parking space). From SFpark\u2019s finance figures, the parking sensors cost 5.7 million dollars (approximately 480 dollars each), which do not account for management, installation and maintenance expenditure. FASTPRK (magnetic) [7], Street Parking System (magnetic) [8], Smart Parking (infrared) [9] and Smart Santander (ferromagnetic) [10] are similar parking projects using different sensing techniques. Integrated Smart Parking Solution [11] is a Siemens-led ongoing project aiming at simplifying the searching process, which launched a testing pilot in Berlin in September, 2015. Different from the above sensor-burying approaches, radar sensors are mouted on street lamps to scan a bigger area. The radars not only monitor traffic flows but also parking spaces, which can be either used for traffic control or facilitating drivers to find a parking spot. The benefits of the overhead radar approach are claimed to be as follows. First, it is not impaired by weather or light conditions. Secondly, it detects more than just parking spots. For example, it can measure vehicle speed, traffic flows and pedestrian flows. Thirdly, it is mounted on street lamps, which alleviates the infrastructure changes. Parking Spotter [12] is an ongoing joint work by Ford and Georgia Tech. The idea is to leverage sonars and radars that are already widely employed on Ford cars to sense the onstreet parking occupancy. The sensing results are updated to a cloud server, and the results are presented to other Ford drivers\nas an added-value service. Mathur et al. in [13] present ParkNet, a mobile street parking system, which collects parking occupancy information as vehicles pass by. ParkNet consists of a GPS receiver and an ultrasonic rangefinder. Through one-month runs of three vehicles passing by the urban streets of Highland Park, New Jersey, the authors built a parking map from collected data. In order to achieve improved location accuracy, the authors utilize an environmental fingerprinting approach, namely, using objects on the street to correct GPS errors.\nNawaz et al. in [14] propose a WiFi beacon association based sensing system named ParkSense to estimate if a driver has entered or driven away from a parking spot. More specifically, ParkSense uses the WiFi association and de-association changing rates to sense the parking status. From the empirical evaluation, the authors claim that the WiFi beacon rate is highly correlated with driver\u2019s activity. The disadvantages of the system are that 1) the presence of both mobile phone and WiFi infrastructure are required, and 2) the access to spatially distributed WiFi access points for analysis is assumed.\nThe features of the surveyed parking systems are summarized in Table I.\nThe contributions of the article are summarized as follows. Some high-profile parking projects are overviewed. By looking into their features, we rethink the common sensing solutions, and present a crowdsourcing mobile sensing technique. A supervised learning algorithm is developed for CroPark to recognize parked cars and empty spaces. The algorithm uses parked cars\u2019 contouring vector extracted from the driving trace to train a classifier, which is used to differentiate parked cars from road clutters. A simple estimation model is proposed to\ncalculate how many mobile sensing units are needed to cover urban streets with certain updating frequency. The estimation produced by the model is quantitatively compared to a fixed sensing solution. The results show that CroPark would need significantly lower number of sensing units than the fixed sensing system."}, {"heading": "III. ON-STREET PARKING SPACE DETECTION: PROTOTYPE, TESTING SCENARIO AND ALGORITHM", "text": ""}, {"heading": "A. The Prototype System", "text": "The prototype kit consists of an HC-SR04 ultrasonic rangefinder, a GPS receiver and associated Arduino microcontrollers. In the road test, we placed the prototype kit under the windshield (Fig.1(a)) to provide the GPS receiver with a clear view from satellites, while we led the ultrasonic rangefinder to the passenger door (Fig.1(b)) to measure the distance from the vehicle to roadside. Note the video camera above the ultrasonic sensor is not a part of the CroPark system. The employment the camera is to record the ground truth to compare it with the ultrasonic sensor data.\nThe employed ultrasonic sensor is set to transmit a short pulse every 50 milliseconds. The emitted wave is bounced back when there is an object in the way. By counting the elapsed time, together with the sound speed in the air, the distance to the object is measured. After interpolating the GPS coordinates, the format of the measurement and an example of the road test trace are given as follows. { timestamp/distance/latitude/longitude/speed 93777 ms/532 cm/51.748295/-1.14049621/24.85 km/h\nThe measurement data is locally preprocessed to reduce the data traffic. In other words, only those data groups that are interpreted as parked vehicles or empty spaces by the algorithm are sent to the central database. It is proposed that the CroPark kits could be employed on public vehicles such as buses and taxis, and they continually gather data as they travel along their routes. The on-board communication links or a 3G shield card can be used for the back-haul data transmission. The central database has pre-installed parking zones\u2019 information (e.g., the capacity and GPS coordinates of parking zones), which are used to identify illegal parking vehicles and empty parking spaces from the received sonar data. The inferred results are accessed via mobile APPs or web portals by users or traffic enforcement agents."}, {"heading": "B. The Supervised Learning Algorithm", "text": "A supervised learning algorithm is developed to recognise parked cars and empty spaces. We use contouring patterns that are extracted from the drive-test trace to train a classifier in the purpose of discriminating parked cars and spaces from road clutters.\n1) Train the Classifier: As shown in Fig.2(a), we conducted a serial of drive tests on two roads in Wheatley, Oxford. High Street (Route1) has two parks (park1 has 6 spaces and park2 has 1 space), and Church Road (Route2) has three parks (park3 has 1 space, park4 has 11 spaces and park5 has 5 spaces). In our test, we repeatedly circled the two streets to emulate the crowdsourcing approach.\nThe algorithm takes the drive-test trace as inputs and scans the data in sequence. An example is illustrated in Fig.2(b)\nwhen park1 and park2 of the Route1 are fully parked. As can be observed from the figure, the sonar scanning presents parked vehicles to distinctive U-shaped contours as the testing car drives by. The contouring features allow us to distinguish parked vehicles from road furnitures (e.g., the two poles as shown in Fig.2(b)). The classifier training patterns vector is summarized as follows.\n\u2022 Distance: From a driving-by car\u2019s perspective, there is a distance range that a parked vehicle should reside in. The lower bound of the range corresponds to lateral safety distance or minimum safety distance (Distancemin = 70 cm). In addition to the minimum safety distance, the higher bound of the range is obtained by adding a car\u2019s width (Distancemax = 250 cm). \u2022 Standard deviation: The distance range filters out many road clutters that are outside [Distancemin, Distancemax], however, many still remain. Standard deviation is used to quantify the dispersion of a group of parked vehicle data. In particular, the standard deviation of the U-shaped bottom is relatively flat, which refers to the small-scale standard deviation (\u03c3small = 10.9) and is used to describe the vehicles\u2019 core frame; while the standard deviation at the edge of the U-shaped bottom is much larger, which refers to the big-scale standard deviation (\u03c3big = 51.3) and is used to describe the vehicles\u2019 edges accordingly. \u2022 Length: Due to the fact of various vehicles\u2019 length, we adopt 2.1 meters as a bottom line (Lengthmin) to categorize the trace for calculating the \u201dsmall-scale\u201d standard\n5 deviation, and 9 meters as a upper bound (Lengthmax) for deriving the \u201dlarge-scale\u201d standard deviation.\n\u2022 Angle: The angle between vehicle\u2019s contouring vertices and bottom is calculated using trigonometric functions. The angle of the contour we obtained from the parked vehicle trace ranges from 80\u25e6 to 130\u25e6 (a function of speed and vehicle\u2019s length). We apply this contour angle range in the classifier to mask out road furnitures. For example, as shown in Fig.2(b), \u03b1 = 87.97\u25e6 is the angle of first parked car, which falls in the angle range, while \u03b8 = 55.69\u25e6 is the angle of the two poles, which are masked out as noise.\n2) Classifier: The above four contouring patters form a feature vector, which is used to train the classifier. The classifier interprets the fed data into groups of road clutters, parked vehicles or empty spaces according to the features\u2019 ascription. As illustrated in Algorithm 1, the classifier iterates through the gathered trace, obtains the indices within the length range, and then checks whether the data are in line with the above-mentioned features.\nAlgorithm 1: Classifier Pseudocode Input: Lengthmin,max, Distancemin,max, \u03c3small,big, Speed Output: vecparked, vecempty for len = 1 : length(Trace) do\nDurationmin,max = Lengthmin,max/Speed Rangemin,max = Trace(:, 1) \u2208 [Trace(len, 1), T race(len, 1)+Durationmin,max]\n. Rangemin,max consists of all data indices in Lengthmin,max if std(Trace(Rangemin, 2))<\u03c3small & std(Trace(Rangemax, 2))>\u03c3big then\nif Distance \u2208 [Distancemin, Distancemax] & Angle \u2208 [Anglemin, Anglemax] then end vecparked(end+ 1) = [Trace(len, 3), T race(len, 4)]\nend . std() represents the standard deviation function if Trace(Rangemax, 1) \u2208 [Trace(len, 1), T race(len, 1) +Durationmax] then\nif Distance>Distancemax then vecempty(end+ 1) = [Trace(len, 3), T race(len, 4)]\nend end\nend"}, {"heading": "C. Presentation of Illegally-Parked Cars and Empty Spaces", "text": "The software bundle, namely, Linux, Apache, MySQL, and PHP (LAMP) is employed to present the interpreted data by the classifier. An example of the developed web portal showing the parking status is shown in Fig.2(a).\n1) Illegally-Parked Cars: Presenting illegally-parked cars is straightforward. We first infer the illegally-parked cars by checking whether GPS coordinates of the detected cars are in the parking database. Then we mark those cars that are outside the permitted parking zones as illegal parking on the map.\n2) Empty Spaces: The empty spaces can be presented in two ways: either just a space or a space with variable length. The former is derived using a predefined length threshold, and is suitable for line-delimited parking spaces; while the latter is adaptively obtained by multiplying the time difference of two neighbouring obstacles and the average speed, which is suitable for un-delimited spaces and flexible for compact cars or long lorries.\n3) Offsetting GPS: A GPS with high frequency refresh rate is advisable. In order to accurately pinpoint the illegal paring vehicles or empty spaces on the map, the GPS coordinates obtained from the sensor need to be calibrated. In this article, a pre-defined list of outstanding environment signatures is used to offset the GPS drift. In other words, we align the GPS sensor data with the pre-defined environment signatures when the supervised learning algorithm recognizes the environment signatures as the CroPark vehicle drives by."}, {"heading": "IV. EMPIRICAL RESULTS", "text": "In this section, we evaluate the supervised learning algorithm by examining the vehicle and space detection accuracy. In our drive test, the average cruising speed is 20 km/h, and the updating time is around 120 seconds, namely, we will pass by the same point every 2 minutes.\nA. Vehicle Detection\nTable II-(a) gives parked cars\u2019 statistics from park1 to park5 with 6 runs. The data format of x/y/z denotes \u2019number of detected vehicles/ground truth/parking capacity\u2019. For example, in park1 of the fifth run, there were 3 cars detected by the algorithm, 3 cars actually parked, and 6 parking spaces in total. The last column shows the false positives of each run, which is the number of road clutters detected as vehicles.\nThe vehicle detection rate is 123/124 = 99.2%, and the accuracy rate is 123/140 = 87.9% by counting the false positives. Note, the accuracy will increase if the updating frequency is higher or if there are more CroPark units employed, the relationship of which is explored in the following Section V and Fig. 4.\n6"}, {"heading": "B. Space Detection", "text": "As the on-street parking zones on High Street and Church Road are un-delimited parking, the length and the parking manner of the parked cars will greatly affect the detection results. Therefore, it may not be accurate to infer the number of parking spaces by deducting the number of detected cars from the parking capacity. For this reason, we give parking spaces in two ways, namely, the number of parking spaces by subtracting the number of detected cars from the parking capacity, and parking spaces with detected available length. The data format of x/y/z in the Table II-(b) denotes \u2019number of detected spaces by subtracting from parking capacity/detected spaces with variable length/ground truth\u2019. For example, in park1 of the fifth run, 3 spaces are inferred by the subtraction, 2 spaces with different length are obtained from the lengthauto-adjusting algorithm, and more than 1 space is observed in the recorded video. The trace plot of Run 5 and its space map are shown in Fig.3. The space map Fig.3(b) provides the parking space with extra length information, which is particularly important to customized requests. For example, a Smart for-two Cabrio can fit in a 3-meter space, while a BMW M5 may require a 6-meter space."}, {"heading": "V. ESTIMATING CROPARK UNITS NEEDED FOR A CITY", "text": "Let s, p and w denote the area of a city, the ratio that total roads account for a city area, and the average road width, respectively. The total road length of the city can be obtained: L = s\u00b7p/w. If the parking occupancy map updating frequency\nand the vehicle detection accuracy rate are \u03c4 and \u03b3, the number of CroPark units m needed to cover the city can be estimated:\nm = L\n\u03bd \u00b7 1\u03c4 \u00b7 \u03b3 , (1)\nwhere \u03bd is the average cruising speed of CroPark vehicles.\nIn order to compare with fixed sensing techniques, we use this model to estimate the number of CroPark units needed for San Francisco. The upper east part of San Francisco has an area of 19.26km2, where the SFpark pilot is deployed (excluding the metropolitan area). Assuming urban streets account for around 10% of the city area, and the average street width in San Francisco is 10 meters. The total road length is then derived as:\nL = 19.26 \u00b7 106 \u00b7 10%\n10 = 1.926 \u00b7 105 meters.\nIf the parking occupancy map is updated every 2 minutes (i.e., \u03c4 = 0.0083), the vehicle detection accuracy rate is \u03b3 = 87.9%, and the average city cruising speed is assumed to be \u03bd = 20 kilo meters per hour (i.e., 5.55 meters per second), the required number of CroPark units to be mounted on vehicles is:\nm = 1.926 \u00b7 105\n5.55 \u00b7 120 \u00b7 87.9% = 328,\n7 0 20 40 60 80 100 120 0 100 200 300 400 500 600\nTime (s)\nD is\nta nc\ne (c\nm )\nRaw data Parking space Parked car\n(a) Raw Data\nLon\nLa t\nGPS Parking space Parked car\n6.24 m\n5.54 m\n9.45 m\n(b) Space Map\nFig. 3: Trace Plot of Run 5\nwhich is significantly lower than 12000 sensors deployed for 8000 parking spaces in the SFpark pilot area.\nNote that, this simple estimation model is indifferent to the number or spatial distribution of parking bays, as all points of the roads will be covered by a \u03bd \u00b7 1\u03c4 rolling window with frequency \u03c4 and accuracy \u03b3.\nFig.4 also illustrates how many CroPark units are needed against updating time (i.e., 1/\u03c4 ) as cruising speed \u03bd and the vehicle detection accuracy \u03b3 vary."}, {"heading": "VI. CONCLUSIONS", "text": "In this article, we present CroPark that is consisted of an ultrasonic ranger and a GPS receiver to determine the distance\nfrom the vehicle to roadside. It is proposed that CroPark units could be placed on vehicles such as buses, taxis or private cars to continually gather data as they travel along their routes. CroPark leverages the users\u2019 heuristic searching and converts users to stakeholders. On the one hand, CroPark requires much lower number of sensor units compared with the fixed sensing solutions thanks to users\u2019 participation; on the other hand, CroPark cuts down the time and fuel consumed in searching thanks to the dissemination of parking availability information. As soon as the initial occupancy map is built up in the crowdsourcing manner, CroPark can substantially bring down the searching effort.\nAs for next steps, lane-changing detection, a balanced guidance algorithm and a right price model for on-street parking need to be considered.\n1) Lane-changing detection: The designed algorithm and current sonar configurations can only handle the single lane situation. If the vehicle moves to a second lane, then the sonar may misunderstand the extra distance as empty parking spaces. One solution is to employ a high-precision GPS, however, it may be difficult as the adjacent lanes are within just a few meters. The other solution could be employing dual ranger sensors positioned at each end of the car to measure the differentials. For example, if the vehicle moves away from one lane to another, then the difference of the two sensors\u2019 reading remains constant if we adjust the lateral time difference. 2) Balanced guidance algorithm: Owing to the updating delay and some parking areas are more preferable than\n8 others, people may flock to the same places and then find the spaces already occupied. One solution is to provide future occupancy prediction based on open data or history data [15]. The other solution is to design a reservation system or a balancing algorithm that guilds people to different locations if multiple requests to the same space are received.\n3) Right price model: As pointed out in [1], drivers are actually encouraged to circle blocks to find onstreet parking spaces if the kerb parking is free or under-priced. In other words, drivers flock to the cheap kerb parking spaces, and thus create more cruising and congestions. This suggests further research is needed to find the right price model for on-street parking."}], "references": [{"title": "Cruising for parking", "author": ["D. Shoup"], "venue": "Transport Policy, vol. 13, no. 6, 2006.", "citeRegEx": "1", "shortCiteRegEx": null, "year": 2006}, {"title": "Smart parking solutions for urban areas", "author": ["E. Polycarpou", "L. Lambrinos", "E. Protopapadakis"], "venue": "IEEE 14th International Symposium and Workshops on a World of Wireless, Mobile and Multimedia Networks (WoWMoM), pp. 1\u20136, 2013.", "citeRegEx": "4", "shortCiteRegEx": null, "year": 2013}, {"title": "A survey of intelligent car parking system", "author": ["S. Mahmud", "G. Khan", "M. Rahman", "H. Zafar"], "venue": "Journal of applied research and technology, vol. 11, no. 5, pp. 714\u2013726, 2013.", "citeRegEx": "5", "shortCiteRegEx": null, "year": 2013}, {"title": "A street parking system using wireless sensor networks", "author": ["Z. Zhang", "X. Li", "H. Yuan", "F. Yu"], "venue": "International Journal of Distributed Sensor Networks, vol. 2013, 2013.", "citeRegEx": "8", "shortCiteRegEx": null, "year": 2013}, {"title": "Parknet: drive-by sensing of road-side parking statistics", "author": ["S. Mathur", "T. Jin", "N. Kasturirangan", "J. Chandrasekaran", "W. Xue", "M. Gruteser", "W. Trappe"], "venue": "Proceedings of the 8th international conference on Mobile systems, applications, and services, pp. 123\u2013136, ACM, 2010.", "citeRegEx": "13", "shortCiteRegEx": null, "year": 2010}, {"title": "Parksense: A smartphone based sensing system for on-street parking", "author": ["S. Nawaz", "C. Efstratiou", "C. Mascolo"], "venue": "Proceedings of the 19th annual international conference on Mobile computing & networking, pp. 75\u201386, ACM, 2013.", "citeRegEx": "14", "shortCiteRegEx": null, "year": 2013}, {"title": "Predicting occupancy trends in barcelona\u2019s bicycle service stations using open data", "author": ["G.M. Dias", "B. Bellalta", "S. Oechsner"], "venue": "SAI Intelligent Systems Conference (IntelliSys), 2015, pp. 439\u2013445, Nov 2015.", "citeRegEx": "15", "shortCiteRegEx": null, "year": 2015}], "referenceMentions": [{"referenceID": 0, "context": "A downtown traffic study [1] on several major cities reveals that cruising for kerb vacancies is an often-overlooked source of congestion, which accounts for up to 30 percent of total traffic flows1.", "startOffset": 25, "endOffset": 28}, {"referenceID": 1, "context": "There are various ITS or smart city projects related to parking monitoring, such as private parking [2] [3], off-street parking [4] [5] and on-street parking [6] [7].", "startOffset": 128, "endOffset": 131}, {"referenceID": 2, "context": "There are various ITS or smart city projects related to parking monitoring, such as private parking [2] [3], off-street parking [4] [5] and on-street parking [6] [7].", "startOffset": 132, "endOffset": 135}, {"referenceID": 3, "context": "Street Parking System [8], 2013 magnetic", "startOffset": 22, "endOffset": 25}, {"referenceID": 4, "context": "ParkNet [13], 2010 sonar", "startOffset": 8, "endOffset": 12}, {"referenceID": 5, "context": "ParkSense [14], 2013 mobile phone and WiFi", "startOffset": 10, "endOffset": 14}, {"referenceID": 3, "context": "FASTPRK (magnetic) [7], Street Parking System (magnetic) [8], Smart Parking (infrared) [9] and Smart Santander (ferromagnetic) [10] are similar parking projects using different sensing techniques.", "startOffset": 57, "endOffset": 60}, {"referenceID": 4, "context": "in [13] present ParkNet, a mobile street parking system, which collects parking occupancy information as vehicles pass by.", "startOffset": 3, "endOffset": 7}, {"referenceID": 5, "context": "in [14] propose a WiFi beacon association based sensing system named ParkSense to estimate if a driver has entered or driven away from a parking spot.", "startOffset": 3, "endOffset": 7}, {"referenceID": 6, "context": "One solution is to provide future occupancy prediction based on open data or history data [15].", "startOffset": 90, "endOffset": 94}, {"referenceID": 0, "context": "3) Right price model: As pointed out in [1], drivers are actually encouraged to circle blocks to find onstreet parking spaces if the kerb parking is free or under-priced.", "startOffset": 40, "endOffset": 43}], "year": 2016, "abstractText": "As the number of vehicles continues to grow, parking spaces are at a premium in city streets. Additionally, due to the lack of knowledge about street parking spaces, heuristic circling the blocks not only costs drivers\u2019 time and fuel, but also increases city congestion. In the wake of recent trend to build convenient, green and energy-efficient smart cities, we rethink common techniques adopted by high-profile smart parking systems, and present a user-engaged (crowdsourcing) and sonar-based prototype to identify urban on-street parking spaces. The prototype includes an ultrasonic sensor, a GPS receiver and associated Arduino micro-controllers. It is mounted on the passenger side of a car to measure the distance from the vehicle to the nearest roadside obstacle. Multiple road tests are conducted around Wheatley, Oxford to gather results and emulate the crowdsourcing approach. By extracting parked vehicles\u2019 features from the collected trace, a supervised learning algorithm is developed to estimate roadside parking occupancy and spot illegal parking vehicles. A quantity estimation model is derived to calculate the required number of sensing units to cover urban streets. The estimation is quantitatively compared to a fixed sensing solution. The results show that the crowdsourcing way would need substantially fewer sensors compared to the fixed sensing system.", "creator": "LaTeX with hyperref package"}}}