{"id": "1604.04893", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "17-Apr-2016", "title": "An Initial Seed Selection Algorithm for K-means Clustering of Georeferenced Data to Improve Replicability of Cluster Assignments for Mapping Application", "abstract": "k - means is one of the most widely used clustering algorithms in these various disciplines, especially for large datasets. however the method is known to likely be highly sensitive to initial number seed selection of cluster centers. k - means + + has been proposed to overcome this problem and has been shown to have better accuracy and adequate computational efficiency than k - means. in developing many clustering problems though - such as when classifying georeferenced data for mapping applications - reflects standardization of clustering methodology, specifically, the ability to arrive at the same cluster assignment results for every complete run of the statistical method i. e. replicability of the methodology, one may really be times of very greater significance than improving any perceived measure of accuracy, especially concerning when assuming the solution is known to be non - unique, as in the case of k - means clustering. more here we propose a particularly simple initial group seed selection algorithm for k - means clustering along one attribute that draws initial cluster boundaries along the'deepest valleys'short or greatest gaps in dataset. thus, it incorporates a depth measure to maximize distance between consecutive cluster centers which augments the similar conventional k - means optimization for minimum distance between cluster center and cluster members. but unlike existing initialization methods, unfortunately no additional parameters or degrees of freedom are deliberately introduced to the clustering technique algorithm. this improves the replicability of simultaneous cluster assignments by as much as 100 % over k - means and k - means + +, virtually reducing the variance over different runs strictly to zero, without introducing any additional parameters to the clustering process. further, the proposed selection method is more computationally efficient than k - related means + + and in some cases, radically more accurate.", "histories": [["v1", "Sun, 17 Apr 2016 16:25:15 GMT  (349kb)", "http://arxiv.org/abs/1604.04893v1", "Applied Soft Computing 12 (2012)"]], "COMMENTS": "Applied Soft Computing 12 (2012)", "reviews": [], "SUBJECTS": "cs.LG cs.DS", "authors": ["fouad khan"], "accepted": false, "id": "1604.04893"}, "pdf": {"name": "1604.04893.pdf", "metadata": {"source": "CRF", "title": "An Initial Seed Selection Algorithm for K-means Clustering of Georeferenced Data to Improve Replicability of Cluster Assignments for Mapping Application", "authors": ["Fouad Khan"], "emails": ["fouadmkhan@yahoo.com"], "sections": [{"heading": null, "text": "K-means is one of the most widely used clustering algorithms in various disciplines, especially for large datasets. However the method is known to be highly sensitive to initial seed selection of cluster centers. K-means++ has been proposed to overcome this problem and has been shown to have better accuracy and computational efficiency than k-means. In many clustering problems though \u2013such as when classifying georeferenced data for mapping applications- standardization of clustering methodology, specifically, the ability to arrive at the same cluster assignment for every run of the method i.e. replicability of the methodology, may be of greater significance than any perceived measure of accuracy, especially when the solution is known to be non-unique, as in the case of k-means clustering. Here we propose a simple initial seed selection algorithm for k-means clustering along one attribute that draws initial cluster boundaries along the \u201cdeepest valleys\u201d or greatest gaps in dataset. Thus, it incorporates a measure to maximize distance between consecutive cluster centers which augments the conventional k-means optimization for minimum distance between cluster center and cluster members. Unlike existing initialization methods, no additional parameters or degrees of freedom are introduced to the clustering algorithm. This improves the replicability of cluster assignments by as much as 100% over k-means and k-means++, virtually reducing the variance over different runs to zero, without introducing any additional parameters to the clustering process. Further, the proposed method is more computationally efficient than k-means++ and in some cases, more accurate.\nbreaks ArcGIS; Jenks ArcGIS\nClustering or classification of data into groups that represent some measure of homogeneity across a given variable range or values of multiple variables, is a much analyzed and studied problem in pattern recognition. K-means clustering is one of the most widely used methods for implementing a solution to this problem and for assigning data into clusters. The method in its initial formulation was first proposed by Mac Queen in 1967 (Mac Queen 1967) though the approximation developed by Lloyd in 1982 (Lloyd 1982) has proven to be most popular in application. The method assumes apriori knowledge of the number of clusters k and requires seeding with initial values of centers of these clusters in order to be implemented. These initial seed values have been shown to be an important determinant of the eventual assignment of data to clusters. In other words, k-means clustering is highly sensitive to the initial seed selection for the value of cluster centers (Pe\u00f1a, Lozano et al. 1999). K-means++ has been proposed to overcome this problem and has been shown to produce a scale improvement in algorithm accuracy and computational efficiency or speed (Ostrovsky, Rabani et al. 2006; Arthur and Vassilvitskii 2007). The algorithm assesses the performance of the initial seed selection based on the sum of square difference between members of a cluster and the cluster center, normalized to data size. While this is a worthwhile means of assessing method performance, it may be noted that in many clustering applications, the replicability of the resultant cluster assignment can be much more desirable than the homogeneity of the cluster perceived through an objective measure.\ngeoreferenced data into classes for mapping and visualization through a Geographical Information Systems (GIS) software suite. Commercially available GIS software ArcGIS for instance utilizes a proprietary modification of Jenks natural breaks algorithm (Jenks 1967) to classify values of a variable for visualization in maps (ArcGIS 2009). The classification this method obtains seems to reproduce itself with remarkable accuracy for each run. The clustering bounds do not vary from run to run, even with variable values in eleven significant figures. Jenks\u2019 algorithm differs only slightly from k-means clustering. K-means using Lloyd\u2019s algorithm aims to minimize the following cost function C defined in Equation 2;\nEquation 2\nWhere n is the data size of number of data points, k is the number of clusters and dist(di, cj) computes the Euclidean distance between point di and its closest center cj. The algorithm runs as follows;\na) Select centers c1,\u2026,ck at random from the data. b) Calculate the minimum cost function C, assigning data points d1,\u2026,dn to their\nrespective clusters having the closest mean.\nc) Calculate new centers c1,\u2026,ck as means of the clusters assigned in step 2. d) Repeats steps b and c until no change is observed in center values c1,\u2026,ck.\nJenks algorithm differs in that instead of C it minimizes the cost function J, defined in Equation 3;\nEquation 3\nAs can be seen in Equation 3, Jenks\u2019 algorithm not only searches for minimum distance between data points and centers of clusters they belong to but for maximum difference between cluster centers themselves (Jenks 1967). If we are trying to develop a methodology for geo-processing; say a utility that studies the scaling characteristic of a city and models the distribution of sizes of housing within different size clusters, it can be essential to have a clustering mechanism that produces almost exactly similar results each time. Drawing inspiration from Jenks\u2019 algorithm, we propose an initial seed selection algorithm for k-means clustering that produces similar clusters on each run. We compare our results to those obtained by k-means as well as the widely used k-means++ initial seed selection methodology. K-means++ selects the initial centers as follows;\na) Select one center at random from dataset. b) Calculate squared distance of each point from the nearest of all selected centers\nand sum the squared distances.\nc) Choose the next center at random. Calculate sum of squared distances. Re-select\nthis center and calculate the sum of squared distances again. Repeat a given \u2018number of trials\u2019 and select the center with the minimum sum of squared distance as the next center.\nd) Repeat steps b and c until k centers are selected.\nintroduce any new parameters (such as number of trials for k-means++) in the clustering algorithm thereby avoiding additional degrees of freedom. By clustering along the deepest valleys or highest gaps in the data series, the method introduces a measure of distance between cluster centers augmenting the k-means optimization for minimum distance between cluster center and cluster members. Additionally, unlike initialization algorithms like k-means++ there is no randomness involved in the algorithm and the initial clusters obtained are always the same.\n2. Materials and Method\nWe propose the following method for calculating initial seed centers of k-means clustering along one attribute.\na) Sort the data points in terms of increasing magnitude d1,\u2026,dn such that d1 has the\nminimum and dn has the maximum magnitude.\nb) Calculate the Euclidean distances Di between consecutive points di and di+1 as\nshown in Equation 4;\nDi = di+1 \u2013 di; where i = 1,\u2026, (n-1) Equation 4\nc) Sort D in descending order without changing the index i of each Di. Identify k-1\nindex i values (i1,\u2026,i(k-1)) that correspond to the k-1 highest Di values.\nd) Sort i1,\u2026i(k-1) in ascending order. The set (i1,\u2026,i(k-1),ik) now forms the set of\nindices of data values di, which serve as the upper bounds of clusters 1,\u2026,k; where; ik = n.\nbounds of clusters 1,\u2026,k would simply be defined as (i0, i1+1,\u2026,i(k-1)+1), where i0 = 1. f) The values of cluster centers c will now simply calculated as the mean of di values\nfalling within the upper and lower bounds calculated above. This set of cluster centers (c1,\u2026,ck) will form the initial seed centers.\nThe methodology discussed above simply draws the cluster boundaries at points in the data where the gap between consecutive data values is the highest or the data has deepest \u2018valleys\u2019. In this way, a measure of distance is brought between consecutive cluster centers. The method can be easily implemented for small to medium size datasets by using the spreadsheet freely available for download at http://ge.tt/api/1/files/7FON8KH/0/blob?download. To test the replicability of cluster assignments produced using this methodology, the same data was clustered using this methodology ten times. The variance observed in cluster centers for these ten runs was calculated and averaged over the number of cluster centers. For comparison similar analysis was performed employing k-means and widely used k-means++ initial seeding methodology and the variance averaged over number of cluster centers was calculated. The analysis was run for five different datasets. The first data is the popular Iris dataset from UC Irvine Machine Learning Repository (UCIMLR) (Fisher 1936). Attribute one of the data was used for clustering. The data having 150 points was classed into 5 clusters. The second data is US census block wise population data for the Metropolitan Statistical\ndownloaded from the US Census Bureau website (US Census Bureau 2010). The area was calculated by summing and water and land areas for the census block. The population density for each census block was estimated by dividing population for the block with the area for the block. The data having 1450 points was clustered along population density into 10 clusters. The third data was Abalone dataset from UCIMLR (Nash, Sellers et al. 1994). Attribute 5 was used for clustering. The data has 4177 instances and was clustered into 25 classes. The fourth set of data was cloud cover data downloaded from Phillipe Collard (Collard 1989). Data in column 3 was used for cluster analysis. The data having 1024 points was clustered in 50 clusters. The fifth data set was randomly generated normally distributed data with mean 10 and standard deviation of 1. The data having 10,000 points was clustered into 100 clusters.\n3. Results\nWhile the objective of development of this method is to produce more replicable results, the sums of squared differences between cluster members and cluster centers between the proposed method and k-means++ were compared and are juxtaposed in Table 1. As can be seen in Table 1, k-means++ in general continues to produce more accurate clustering using this methodology, though for two of the five datasets, our method produced better results.\n(Normalized to Data size)\nDataset\nk-means++ Proposed\nmethod\nReduction%\nIris 0.042243916 0.037471719 11.30% St. George 2.39419E-07 1.76868E-07 26.13% Abalone 0.000817549 0.001229598 -50.40% Cloud 2.379979794 5.22916047 -119.71% Normal 0.000644885 0.001465068 -127.18%\nAs shown in Table 2, our proposed method is also significantly faster than k-means++,\nclustering as much as 89% faster than k-means++ in some cases. The advantage in clustering speed is obtained over the initial seed selection, where k-means++ takes significantly longer comparative to both, our proposed method and k-means [2].\nThe premier advantage of our proposed method over k-means and k-means++ though is in improving method replicability. The results are presented in Table 3. As can be seen in all three cases, the variance was virtually reduced to zero using our method, which was at least a 90% improvement on k-means++ and k-means.\nDataset\nProposed method\nk-means++ Reduction% k-means Reduction%\nIris 4.73317E-31 0.046361574 100.00% 0.499704 100.00% St. George 1.12847E-37 1.22722E-36 90.80% 1.23E-36 90.80% Abalone 2.37968E-32 0.003285155 100.00% 0.005395 100.00% Cloud 1.72981E-28 31.54401321 100.00% 22.24461 100.00% Normal 5.75868E-31 0.009478013 100.00% 0.054631 100.00%\n4. Discussions and Conclusion\nThe method for initial seed selection of algorithm we propose reduces the variance of clustering to zero accurate up to eleven significant figures, for clustering along one attribute or dimension. The further advantage of the proposed initialization method is that unlike k-means++ it does not introduce any new variables within the analysis, such as the number of trials. Almost perfect replicability and avoidance of additional degrees of freedom make the method especially suited for inclusion as part in a protocol or standard methodology or algorithm. Further, the method also produces results faster than kmeans++ and hence is more computationally efficient at least in two-dimensional space. The method has applications in all areas of data analysis where a Jenks style \u2018natural\u2019 classification, with a high level of replicability may be needed. It has the following distinct advantages over other initialization methods and naked k-means implementation;\n The results are highly replicable\n The method is fast and easy to implement\n No additional degrees of freedom or modifiable parameters are introduced that\nmay need expert input for getting replicable results\nconsidering that a measure of distance between cluster centers is introduced to augment the k-means optimization of minimum distance between cluster members and cluster center.\nAbove advantages can render the initialization method highly useful in all areas where large datasets have to be handled or a \u2018natural\u2019 classification of data is sought. This includes areas like bioanalysis for instance where density based clustering is commonly deployed; the method can be made part of a more detailed analysis regime with confidence that the replicability of the results will not be negatively affected by the clustering algorithm. In the area of market segmentation and computer vision, the method can be used to standardize clustering results. This makes the method especially suited to utility development for GIS applications.\nReferences ArcGIS. (2009, April 15, 2011). \"What is the source for ArcMap's Jenks Optimization\nclassification?\" Ask a Cartographer, from http://mappingcenter.esri.com/index.cfm?fa=ask.answers&q=541.\nArthur, D. and S. Vassilvitskii (2007). k-means++: the advantages of careful seeding.\nProceedings of the eighteenth annual ACM-SIAM symposium on Discrete algorithms. New Orleans, Louisiana, Society for Industrial and Applied Mathematics: 1027-1035.\nCollard, P. (1989). Philippe Collard's cloud cover data. Fisher, R. A. (1936). Iris data set. R. A. Fisher, UC Irvine Machine Learning Repository. Jenks, G. F. (1967). \"The data model concept in statistical mapping.\" International\nYearbook of Cartography 7: 186-190.\nLloyd, S. (1982). \"Least squares quantization in PCM.\" IEEE Transactions on\nInformation Theory 28(2): 9.\nMac Queen, J. (1967). Some methods for classification and analysis of multivariate\nobservations. Proceedings of the fifth Berkeley symposium on mathematical statistics and probability. L. M. Le Cam and J. Neyman, University of California Press. I: 281-297.\nNash, W. J., T. L. Sellers, et al. (1994). Abalone data set. S. F. Division, UC Irvine\nMachine Learning Repository.\nOstrovsky, R., Y. Rabani, et al. (2006). The effectiveness of Lloyd-type methods for the\nkMeans problem. Symposium on Foundations of Computer Science.\nPe\u00f1a, J. M., J. A. Lozano, et al. (1999). \"An empirical comparison of four initialization\nmethods for the K-Means algorithm.\" Pattern Recognition Letters 20(10): 1027- 1040.\nUS Census Bureau. (2010). \"US census 2010.\" from\nhttp://www2.census.gov/census_2010/04-Summary_File_1/."}], "references": [{"title": "k-means++: the advantages of careful seeding", "author": ["D. Arthur", "S. Vassilvitskii"], "venue": "Proceedings of the eighteenth annual ACM-SIAM symposium on Discrete algorithms. New Orleans, Louisiana, Society for Industrial and Applied Mathematics: 1027-1035.", "citeRegEx": "Arthur and Vassilvitskii,? 2007", "shortCiteRegEx": "Arthur and Vassilvitskii", "year": 2007}, {"title": "Philippe Collard's cloud cover data", "author": ["P. Collard"], "venue": null, "citeRegEx": "Collard,? \\Q1989\\E", "shortCiteRegEx": "Collard", "year": 1989}, {"title": "Iris data set", "author": ["R.A. Fisher"], "venue": "R. A. Fisher, UC Irvine Machine Learning Repository.", "citeRegEx": "Fisher,? 1936", "shortCiteRegEx": "Fisher", "year": 1936}, {"title": "The data model concept in statistical mapping.", "author": ["G.F. Jenks"], "venue": "International Yearbook of Cartography", "citeRegEx": "Jenks,? \\Q1967\\E", "shortCiteRegEx": "Jenks", "year": 1967}, {"title": "Least squares quantization in PCM.", "author": ["S. Lloyd"], "venue": "IEEE Transactions on Information Theory", "citeRegEx": "Lloyd,? \\Q1982\\E", "shortCiteRegEx": "Lloyd", "year": 1982}, {"title": "Some methods for classification and analysis of multivariate observations", "author": ["J. Mac Queen"], "venue": "Proceedings of the fifth Berkeley symposium on mathematical statistics and probability. L. M. Le Cam and J. Neyman, University of California Press. I: 281-297.", "citeRegEx": "Queen,? 1967", "shortCiteRegEx": "Queen", "year": 1967}, {"title": "The effectiveness of Lloyd-type methods for the kMeans problem", "author": ["R. Ostrovsky", "Y. Rabani"], "venue": "Symposium on Foundations of Computer Science", "citeRegEx": "Ostrovsky and Rabani,? \\Q2006\\E", "shortCiteRegEx": "Ostrovsky and Rabani", "year": 2006}, {"title": "An empirical comparison of four initialization methods for the K-Means algorithm.", "author": ["J.M. Pe\u00f1a", "J.A. Lozano"], "venue": "Pattern Recognition Letters", "citeRegEx": "Pe\u00f1a and Lozano,? \\Q1999\\E", "shortCiteRegEx": "Pe\u00f1a and Lozano", "year": 1999}], "referenceMentions": [{"referenceID": 0, "context": "K-means++ has been proposed to overcome this problem and has been shown to produce a scale improvement in algorithm accuracy and computational efficiency or speed (Ostrovsky, Rabani et al. 2006; Arthur and Vassilvitskii 2007).", "startOffset": 163, "endOffset": 225}, {"referenceID": 3, "context": "Commercially available GIS software ArcGIS for instance utilizes a proprietary modification of Jenks natural breaks algorithm (Jenks 1967) to classify values of a variable for visualization in maps (ArcGIS 2009).", "startOffset": 126, "endOffset": 138}, {"referenceID": 3, "context": "As can be seen in Equation 3, Jenks\u2019 algorithm not only searches for minimum distance between data points and centers of clusters they belong to but for maximum difference between cluster centers themselves (Jenks 1967).", "startOffset": 207, "endOffset": 219}, {"referenceID": 2, "context": "The first data is the popular Iris dataset from UC Irvine Machine Learning Repository (UCIMLR) (Fisher 1936).", "startOffset": 95, "endOffset": 108}, {"referenceID": 1, "context": "The fourth set of data was cloud cover data downloaded from Phillipe Collard (Collard 1989).", "startOffset": 77, "endOffset": 91}], "year": 2016, "abstractText": null, "creator": "Microsoft\u00ae Word 2013"}}}