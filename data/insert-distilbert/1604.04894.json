{"id": "1604.04894", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "17-Apr-2016", "title": "A global constraint for closed itemset mining", "abstract": "discovering the set requirements of closed frequent patterns simultaneously is one of the fundamental problems in data mining. recent constraint programming ( cp ) approaches named for declarative itemset mining have proven their usefulness persistence and flexibility. but the wide functional use of reified constraints in current and cp method approaches inevitably raises many difficulties to cope with high dimensional datasets. this paper proposes closed pattern global constraint structure which does not require documenting any reified constraints nor any extra variables to encode efficiently the closed frequent daily pattern mining ( cfpm ) log constraint. closed - pattern captures the particular semantics of the cfpm problem in order to ensure a polynomial pruning algorithm ensuring domain consistency. the computational properties of analyzing our constraint are historically analyzed and their practical effectiveness is experimentally evaluated.", "histories": [["v1", "Sun, 17 Apr 2016 16:32:27 GMT  (44kb,D)", "http://arxiv.org/abs/1604.04894v1", null]], "reviews": [], "SUBJECTS": "cs.AI cs.DB", "authors": ["mehdi maamar", "nadjib lazaar", "samir loudni", "yahia lebbah"], "accepted": false, "id": "1604.04894"}, "pdf": {"name": "1604.04894.pdf", "metadata": {"source": "CRF", "title": "A global constraint for closed itemset mining", "authors": ["M. Maamar", "N. Lazaar", "S. Loudni", "Y. Lebbah"], "emails": [], "sections": [{"heading": "1 Introduction", "text": "Frequent Pattern Mining is a well-known and the most popular research field of data mining. Originally introduced by [1], it plays a key role in many data mining applications. These applications include the discovery of frequent itemsets and association rules [1], correlations [3] and many other data mining tasks.\nIn practice, the number of frequent patterns produced is often huge and can easily surpass the size of the input dataset. Based on this statement, it was important to identify a condensed representation of frequent patterns. On the other hand, most of frequent patterns are redundant where it is possible to derive them from other found patterns. That is, closed frequent patterns are one of the concise and condensed representations avoiding redundancy.\nDiscovering the set of closed frequent patterns is one of the fundamental problems in Data Mining. Several specialized approaches have been proposed to discover closed frequent patterns (e.g., A-CLOSE algorithm [13], CHARM [18], CLOSET [14], LCM [16]).\nOver the last decade, the use of Constraint Programming paradigm (CP) to model and to solve Data Mining problems has received a considerable attention [5,7,10]. The declarative aspect represents the key success of the proposed CP approaches. Doing so, one can add/remove any user-constraint without the need of developing specialized resolution methods.\nRelating to the Closed Frequent Pattern Mining problem (CFPM), Luc De Raedt et. al., propose to express the different constraints that we can have in Pattern Mining as a CP model [7]. The model is expressed on boolean variables representing items and transactions, with a set of reified sums as constraints. The drawback is the wide use of reified constraints in the CP model, which makes the scalability of the approach questionable.\nar X\niv :1\n60 4.\n04 89\n4v 1\n[ cs\n.A I]\n1 7\nA pr\n2 01\n6\nThis paper proposes CLOSEDPATTERN global constraint which does not require any reified constraints nor any extra variables to encode efficiently the Closed Frequent Pattern Mining (CFPM) constraint. CLOSEDPATTERN captures the particular semantics of the CFPM problem in order to ensure a polynomial pruning algorithm ensuring domain consistency.\nExperiments on several known large datasets show that our approach clearly outperforms CP4IM [5] and achieves scalability while it is a major issue for CP approaches. These experiments also show that the fewer the number of closed patterns, the better is the performance of CLOSEDPATTERN. This is an expected result of the fact that CLOSEDPATTERN insures domain consistency.\nThe paper is organized as follows. Section 2 recalls preliminaries. Section 3 provides a critical review of specialized methods and CP approaches for CFPM. Section 4 presents the global constraint CLOSEDPATTERN. Section 5 reports experiments we performed. Finally, we conclude and draw some perspectives."}, {"heading": "2 Background", "text": "In this section, we introduce some useful notions in closed frequent pattern mining and constraint programming."}, {"heading": "2.1 Closed frequent pattern mining", "text": "Let I = {1, ..., n} be a set of n items identifiers and T = {1, ...,m} a set of transactions identifiers. A pattern p (i.e., itemset) is a subset of I. The language of patterns corresponds to LI = 2I . A transaction database is a set D \u2286 I \u00d7 T . The set of items corresponding to a transaction identified by t is denotedD[t] = {i | (i, t) \u2208 D}. A transaction t is an occurrence of some pattern p iff the set D[t] contains p (i.e. p \u2286 D[t]).\nThe cover of p, denoted by TD(p), is the set of transactions containing p (i.e. TD(p) = {t \u2208 T | p \u2286 D[t]}). Given S \u2286 T a subset of transactions, ID(S) =\u22c2 t\u2208S D[t] is the set of common items of S. The (absolute) frequency of a pattern p is the size of its cover (i.e., freqD(p) = |TD(p)|). Let \u03b8 \u2208 N+ be some given constant called a minimum support. A pattern p is frequent if freqD(p) \u2265 \u03b8.\nExample 1. Consider the transaction database in Table 1a. We have TD(CE) = {2, 3, 5, 6} , freqD(CE) = 4 and ID({2, 3, 5, 6}) = BCE.\nThe closure of a pattern p in D is the set of common items of its cover TD(p), which is denoted Clos(p) = ID(TD(p)). A pattern is closed closedD(p) if and only if Clos(p) = p.\nDefinition 1 (Closed Frequent Pattern Mining (CFPM)). Given a transaction database D and a minimum support threshold \u03b8. The closed frequent pattern mining problem is the problem of finding all patterns p such that (freqD(p) \u2265 \u03b8) and (Clos(p) = p).\nExample 2. For \u03b8 = 2, the set of closed frequent patterns in Table 1a isC\u30085\u30091,BE\u30085\u3009, BCE\u30084\u3009, ABCE\u30082\u3009 and AC\u30082\u3009.\n1 Value between \u3008.\u3009 indicates the frequency of a pattern.\nClosed frequent patterns provide a minimal representation of frequent patterns , i.e., we can derive all frequent patterns with their exact frequency value from the closed ones. Search Space Issues. In pattern mining, the search space contains 2I candidates. Given a large number of items I, a na\u0131\u0308ve search that consists of enumerating and testing the frequency of pattern candidates in a given dataset is infeasible. The main property exploited by most algorithms to reduce the search space is that frequency is monotone decreasing with respect to extension of a set.\nProperty 1 (Anti-monotonicity of the frequency). Given a transaction database D over I, and two patterns X , Y \u2286 I. Then, X \u2286 Y \u2192 freqD(Y ) \u2264 freqD(X).\nHence, any subset (resp. superset) of a frequent (resp. infrequent) pattern is also a frequent (resp. infrequent) pattern."}, {"heading": "2.2 CFPM under constraints", "text": "Constraint-based pattern mining aims at extracting all patterns p of LI satisfying a query q(p) (conjunction of constraints), which usually defines what we call a theory [11]: Th(q) = {p \u2208 LI | q(p) is true}. A common example is the frequency measure leading to the minimal frequency constraint. It is also possible to have other kind of (user-)constraints. For instance, Constraints on the size of the returned patterns, minSize(p, `min) constraint (resp. maxSize(p, `min)) holds if the number of items of p is greater or equal (resp. less or equal) to `min. Constraints on the presence of an item in a pattern item(p, i) that states that an item i must be (or not) in a pattern p."}, {"heading": "2.3 Dataset representations", "text": "The algorithms for frequent pattern mining differ mainly on the way that the dataset is represented.\nHorizontal representationH. Here, the transaction dataset is represented as a list of transaction. The Apriori algorithm [1] is one of the approaches that adopt this obvious representation. The drawback of such representation is the fact that we need several passes to update the support of pattern candidates.\nVertical representation V . This representation uses a list of items where for each item, we have the list of transactions where it appears. Many algorithms adopt this\nrepresentation [19,17,4]. The key advantage of using such representation is that the support of a pattern candidate can easily be obtained by intersecting the lists of its items.\nHybrid representationHV . The transaction dataset here is represented dually, horizontally and vertically. It is successfully used within LCM [16] and FPgrowth [9] algorithms."}, {"heading": "2.4 CSP and Global Constraints", "text": "A Constraint Satisfaction Problem (CSP) consists of a setX of n variables, a domainD mapping each variable Xi \u2208 X to a finite set of values D(Xi), and a set of constraints C. An assignment \u03c3 is a mapping from variables in X to values in their domains. A constraint c \u2208 C is a subset of the cartesian product of the domains of the variables that are in c. The goal is to find an assignment such that all constraints are satisfied. Domain consistency (DC). Constraint solvers typically use backtracking search to explore the search space of partial assignments. At each assignment, filtering algorithms prune the search space by enforcing local consistency properties like domain consistency. A constraint c on X is domain consistent, if and only if, for every Xi \u2208 X and every di \u2208 D(Xi), there is an assignment \u03c3 satisfying c such that Xi = di. Global constraints are constraints capturing a relation between a non-fixed number of variables. These constraints provide the solver with a better view of the structure of the problem. Examples of global constraints are AllDifferent, Regular and Among (see [15]). Global constraints cannot be efficiently propagated by generic local consistency algorithms, which are exponential in the number of the variables of the constraint. Dedicated filtering algorithms are constructed to achieve polynomial time complexity in the size of the input, i.e., the domains and extra parameters. This is the aim of this paper, which proposes a filtering algorithm for the frequent closed pattern constraint."}, {"heading": "3 Related works", "text": "This section provides a critical review of ad specialized methods and CP approaches for CFPM. Specialized methods for CFPM. CLOSE [13] was the first algorithm proposed to extract closed frequent patterns (CFPs). It uses an Apriori-like bottom-up method. Later, Zaki and Hsiao [18] proposed a depth-first algorithm based on a vertical database format e.g. CHARM. In [14], Pei et al. extended the FP-growth method to a method called CLOSET for mining CFPs. Finally, Uno et al. [16] have proposed LCM, one of the most fastest frequent itemset mining algorithm. It employs a hybrid representation based on vertical and horizontal ones. CP methode for itemset mining. Luc De Raedt et al. have proposed in [5] a CP model for itemset mining (CP4IM). They show how some constraints (e.g. frequency, maximality, closedness) can be modeled as CSP [12,8]. This modeling uses two sets of boolean variables M and T : (1) item variables {M1,M2, ...,Mn} where, given a pattern P , (Mi = 1) iff (i \u2208 P ); (2) transaction variables {T1, T2, ..., Tm} where (Tt = 1) iff (P \u2286 t).\nThe relationship between M and T is modeled by reified constraints stating that, for each transaction t, (Tt = 1) iff M is a subset of t. A great consequence is that the encoding of the frequency measure is straightforward: freqD(M) = \u2211 t\u2208T Tt. But such an encoding has a major drawback since it requires (m = #T ) reified constraints to encode the whole database. This constitutes a strong limitation of the size of the databases that could be managed.\nWe propose in the next section the CLOSEDPATTERN global constraint to encode both the minimum frequency constraint and the closedness constraint. This global constraint does not require any reified constraints nor any extra variables."}, {"heading": "4 CLOSEDPATTERN global constraint for CFPM", "text": "This section presents the CLOSEDPATTERN global constraint for the CFPM problem."}, {"heading": "4.1 Consistency checking and filtering", "text": "Let P be the unknown pattern we are looking for. The unknown pattern P is encoded with boolean item variables {P1, ..., Pn}, where D(Pi) = {0, 1} and (Pi = 1) iff i \u2208 P . Let \u03c3 be a partial assignment of variables P . \u03c3 can be partitioned into three distinct subsets:\n\u2013 present items \u03c3+ = {i \u2208 I |D(Pi) = {1}}, \u2013 absent items \u03c3\u2212 = {i \u2208 I |D(Pi) = {0}}, \u2013 free items \u03c3\u2217 = {i \u2208 I |D(Pi) = {0, 1}}.\nThe global constraint CLOSEDPATTERN ensures both minimum frequency constraint and closedness constraint.\nDefinition 2 (CLOSEDPATTERN global constraint). The CLOSEDPATTERN(P,D, \u03b8) constraint holds if and only if there exists an assignment \u03c3 = \u3008d1, ..., dn\u3009 of variables P such that freqD(\u03c3+) \u2265 \u03b8 and closedD(\u03c3+).\nExample 3. Consider the transaction database of Table 1a with \u03b8 = 2. LetP = \u3008P1, . . . , P5\u3009 with D(Pi) = {0, 1} for i = 1..5. Consider the closed pattern BCE encoded by P = \u300801101\u3009, where \u03c3+ = {B,C,E} and \u03c3\u2212 = {A,D}. CLOSEDPATTERN(P,D, 2) holds since freqD({B,C,E}) \u2265 2 and closedD({B,C,E}).\nDefinition 3 (Full extension item [2]). Let \u03c3 = \u3008di1 , . . . , di`\u3009 be a partial assignment of ` variables \u3008Pi1 , . . . , Pi`\u3009, and j an item such that j 6\u2208 \u03c3+. The item j is called a full extension of \u03c3 iff TD(\u03c3+) = TD(\u03c3+ \u222a {j}).\nLet \u03c3 be a partial assignment of variables P and i a free item. We denote by V\u03c3+D (i) the cover of item i within the current cover of a pattern \u03c3+:\nV\u03c3 +\nD (i) = TD(\u03c3+ \u222a {i}) = TD(\u03c3+) \u2229 TD({i}).\nWe first show when a partial assignment is consistent with respect to CLOSEDPATTERN constraint.\nProposition 1. Let \u03c3 = \u3008di1 , . . . , dil\u3009 be a partial assignment of ` variables \u3008Pi1 , . . . , Pi`\u3009. We say that \u03c3 is a consistent partial assignment iff: freqD(\u03c3+) \u2265 \u03b8 and 6 \u2203j \u2208 \u03c3\u2212 s.t. j is a full extension of \u03c3.\nProof:\nAccording to the anti-monotonicity property of the frequency (cf. property 1), if the partial assignment \u03c3 is infrequent (i.e., freqD(\u03c3+) < \u03b8), it cannot, under any circumstances, be extended to a closed pattern. Given now a frequent partial assignment \u03c3 (i.e., freqD(\u03c3+) \u2265 \u03b8), let us take j \u2208 \u03c3\u2212\ns.t. j is a full extension of \u03c3. It follows that TD(\u03c3+) = TD(\u03c3+ \u222a {j}) = V\u03c3 +\nD (j). Therefore, Clos(\u03c3+) = Clos(\u03c3+ \u222a {j}). Since \u03c3+ without j (j being in \u03c3\u2212) cannot be extended to a closed pattern, the result follows. If there is no item j \u2208 \u03c3\u2212 s.t. j is a full extension of \u03c3, then the current assignment \u03c3 can be definitely extended to a closed itemset by adopting all the full extension items to form a closed pattern.\nWe now give the CLOSEDPATTERN filtering rules by showing when a value of a given variable is inconsistent.\nProposition 2 (CLOSEDPATTERN Filtering rules). Let \u03c3 = \u3008di1 , . . . , di`\u3009 be a consistent partial assignment of ` variables \u3008Pi1 , . . . , Pi`\u3009, and Pj (j \u2208 \u03c3\u2217) be a free variable. The following two cases characterize the inconsistency of the values 0 and 1 of Pj:\n\u2013 0 6\u2208 D(Pj) iff: j is a full extension of \u03c3. (rule 1)\n\u2013 1 6\u2208 D(Pj) iff: { |V\u03c3+D (j)| < \u03b8 \u2228 (rule 2) \u2203k \u2208 \u03c3\u2212,V\u03c3+D (j) \u2286 V\u03c3 + D (k). (rule 3)\nProof: Let \u03c3 be a consistent partial assignment and Pj be a free variable.\n0 6\u2208 D(Pj) : (\u21d2) Let 0 be an inconsistent value. In this case, Pj can only take value 1. It means that Clos(\u03c3+) = Clos(\u03c3+ \u222a {j}). Thus, TD(\u03c3+) = TD(\u03c3+ \u222a {j}). By definition 3, j is a full extension of \u03c3. (\u21d0) Let j be a full extension of \u03c3, which means that Clos(\u03c3+) = Clos(\u03c3+ \u222a{j}) (def. 3). The value 0 is inconsistent where j cannot be in \u03c3\u2212 (proposition 1). 1 6\u2208 D(Pj) : (\u21d2) Let 1 be an inconsistent value. This can be the case if the frequency of the current pattern \u03c3+ is set up bellow the threshold \u03b8 by adding the item j (i.e., |V\u03c3+D (j)| < \u03b8). Or, \u03c3+\u222a{j} cannot be extended to a closed itemset: this is the case when it exists an item k such that at each time the item j belongs to a transaction in the database, k belongs as well (V\u03c3+D (j) \u2286 V\u03c3 +\nD (k)). Conversly, the lack of k (i.e., k \u2208 \u03c3\u2212) implies the lack of j as well. This means that: (Pk = 0\u21d2 Pj = 0). (\u21d0) This is a direct consequence of proposition 1.\nExample 4. In line of example 3, consider a partial assignment \u03c3 s.t. \u03c3+ = {B} and \u03c3\u2212 = \u2205. CLOSEDPATTERN(P,D, \u03b8) will remove value 1 from D(P4) (item D) and value 0 from D(P5) (item E) since, resp., |V\u03c3 + D (D)| < 2 and E is a full extension of\n\u03c3. Now, we have \u03c3+ = {B,E} and \u03c3\u2212 = {D}. Suppose that the variable P3 is set to 0 (item C). Again, CLOSEDPATTERN(P,D, \u03b8) will remove value 1 from D(P1) (item A) since the lack of C implies the lack of A in D (i.e., V\u03c3+D (A) \u2286 V\u03c3 + D (C))."}, {"heading": "4.2 CLOSEDPATTERN Filtering Algorithm", "text": "In this section, we present an algorithm enforcing domain consistency for CLOSEDPATTERN constraint. Algorithm 1 maintains the consistency based on the specificity of the CFPM problem (see proposition 1 and 2). CLOSEDPATTERN is considered as a global constraint since all variables share the same internal data structures that awake and drive the filtering.\nFILTER-CLOSEDPATTERN algorithm exploits internal data structures enabling to enhance the filtering process. At each call, we maintain incrementaly \u03c3 =< \u03c3+, \u03c3\u2212, \u03c3\u2217 > and the cover of \u03c3+ (i.e., TD(\u03c3+)). Using these two structures, one can check if an item is present or not in the vertical dataset VD.\nAlgo.1 takes as input the vertical dataset VD, a minimum support threshold \u03b8, the item k of the last assigned variable Pk, the current partial assignment \u03c3 where \u03c3\u2217 6= \u2205, and the variables P . As output, algo.1 will reduce de domain of Pi and therefore, increase \u03c3+ and/or \u03c3\u2212, and decrease \u03c3\u2217. The algorithm starts by checking if the last variable Pk is instantiated to 0 (line 3). In such case, the item k is added to (resp. removed from) \u03c3\u2212 (resp. \u03c3\u2217) (line 4). Afterwards, we check if the lack of the item k induces the lack of other free items of \u03c3\u2217 (lines 6-8), which corresponds to rule 3 of proposition 2. Otherwise, Pk is assigned to 1 or we are in the level of the first call of the FILTER-CLOSEDPATTERN where no variable is instantiated. Here, we add to (resp. remove from) \u03c3+ (resp. \u03c3\u2217) the item k if Pk = 1 (line 10). Now, the first thing to check is to verify if the current assignement is consistent or not (proposition 1). The line 10 is doing so by checking if the frequency of the current assignment (i.e., the size of the cover TD(\u03c3+)) is below the threshold \u03b8.\nThe lines from 11 to 21 represents the application of proposition 2 on the remaining free items \u03c3\u2217. First, lines 12 to 14 prune the value 0 from each item that is a full extension of the current assignment (rule 1 of prop.2). Second, lines 15 to 17 prune the value 1 from the infrequent items (rule 2 of prop.2). Finaly, lines 18 to 21 implement the rule 3 of prop.2 and prune the value 1 from each free item i \u2208 \u03c3\u2217 s.t. its cover is a superset of the cover of an absent item j \u2208 \u03c3\u2212 (V\u03c3+D (i) \u2286 V\u03c3 + D (j)).\nTheorem 1. Given a transaction database D of n items and m transactions, and a threshold minsup \u03b8. Algorithm FILTER-CLOSEDPATTERN establishes domain consistency on the CLOSEDPATTERN constraint, or proves that it is inconsitent inO(n2\u00d7m) with a space complexity of O(n\u00d7m).\nProof:\nSince that CLOSEDPATTERN implements exactly the rules given in Proposition 2, it prunes all inconsistent values, and consequently ensures domain consistency (see the given description of Algorithm 1).\nAlgorithm 1: FILTER-CLOSEDPATTERN (VD, \u03b8, k, \u03c3, P )\n1 Input: VD : vertical database; \u03b8 : minimum support; k : instantiated item 2 InOut: P = {P1 . . . Pn}: boolean item variables; \u03c3 : current assignment. 3 begin 4 if Pk = 0 then 5 \u03c3\u2212 \u2190 \u03c3\u2212 \u222a {k}; \u03c3\u2217 \u2190 \u03c3\u2217 \\ {k} 6 foreach i \u2208 \u03c3\u2217 : V\u03c3 + D (i) \u2286 V\u03c3 +\nD (k) do 7 D(Pi)\u2190 D(Pi)\u2212 {1}; 8 \u03c3\u2212 \u2190 \u03c3\u2212 \u222a {i}; \u03c3\u2217 \u2190 \u03c3\u2217 \\ {i}\n9 else 10 if Pk = 1 then \u03c3+ \u2190 \u03c3+ \u222a {k}; \u03c3\u2217 \u2190 \u03c3\u2217 \\ {k} if ( |TD(\u03c3+)| < \u03b8) then return false 11 foreach i \u2208 \u03c3\u2217 do 12 if |V\u03c3 +\nD (i)| = |TD(\u03c3+)| then 13 D(Pi)\u2190 D(Pi)\u2212 {0}; 14 \u03c3+ \u2190 \u03c3+ \u222a {i}; \u03c3\u2217 \u2190 \u03c3\u2217 \\ {i}\n15 else if |V\u03c3 +\nD (i)| < \u03b8 then 16 D(Pi)\u2190 D(Pi)\u2212 {1} 17 \u03c3\u2212 \u2190 \u03c3\u2212 \u222a {i}; \u03c3\u2217 \u2190 \u03c3\u2217 \\ {i} 18 else 19 foreach j \u2208 \u03c3\u2212 : V\u03c3 + D (i) \u2286 V\u03c3 +\nD (j) do 20 D(Pi)\u2190 D(Pi)\u2212 {1}; 21 \u03c3\u2212 \u2190 \u03c3\u2212 \u222a {i}; \u03c3\u2217 \u2190 \u03c3\u2217 \\ {i}\n22 return true;\nLet n = |I| and m = |T |. First, we need to compute TD(\u03c3+) which requires at most O(n\u00d7m). This is done only once. The cover V\u03c3+D (i) can be computed by intersecting TD(\u03c3+) (already computed) and TD({i}) (given by the vertical representation) within at most O(m). Checking rule 1 and 2 on all free variables can be done in O(n \u00d7m) ( lines 12-17). However, checking rule 3 is quadratic at lines 6-8 (i.e., O(n \u00d7m)) and cubic at lines 18-21 (i.e., O(n \u00d7 (n \u00d7m))), where checking if a cover V\u03c3+D (i) is a subset of another cover can be done in O(m). Finally, the worst case complexity is O(n\u00d7 (n\u00d7m)). The space complexity of the filtering algorithm lies in the storage of VD, \u03c3 and the cover T data structures. The vertical representation VD requires at most n \u00d7 m. In the worst case, we have to store n items within \u03c3 and m transactions within T . That is, the worst case space complexity is O(n\u00d7m+ n+m) = O(n\u00d7m).\nDuring the solving process in depth first search, the whole space complexity is about O(n\u00d7 (m+n)) since that: (1) the depth is at most n; (2) \u03c3 and T require O(n\u00d7 (m+ n)); (3) the vertical representation is the same data used all along the solving process O(n\u00d7m); (4) Finally we have O(n\u00d7 (m+ n)) +O(n\u00d7m) = O(n\u00d7 (m+ n))."}, {"heading": "5 Experiments", "text": "We made some experiments to evaluate and compare our global constraint CLOSEDPATTERN with the state of the art methods (CP and specialized methods for CFPM). We first present the benchmark datasets we used for our experiments and we give a brief description on the followed protocol.\nBenchmark datasets. The reported results are on several real and synthetic datasets [18,6] from FIMI repository2 with large size. These datasets have varied characteristics and representing different application domains as shown in Table 2.\nTable 2 reports for each dataset, the number of transaction |T |, the number of items |I|, the average size of transaction |\u0302T | and its density \u03c1 (i.e., |\u0302T |/|I|). As we can see, we select datasets by varying the number of transactions, the number of items, but also the density \u03c1. Here we have datasets that are very dense like chess and connect (resp. 49% and 33%), others that are very sparse like Retail and BMS-Web-View1 (resp. 0.06% and 0.5%). Experimental protocol. The implementation of our approach was carried out in the Gecode solver3. All experiments were conducted on an Intel Core i5-2400 @ 3.10 GHz with 8 Gb of RAM with a timeout of 3600s. For each dataset, we varied the minsup threshold until the methods are not able to complete the extraction of all closed patterns within the timeout limit. We compare our approach (CLOSEDPATTERN) with:\n1. CP4IM, the most popular CP approach for CFPM. 2. LCM, the most popular specialized method for CFPM.\nWe experiment using the available distributions of LCM-v3 4 and CP4IM 5. We denote the fact that the underlying solver used by CP4IM is Gecode solver.\nDiscussion. First we compare CLOSEDPATTERN with the most efficient CP method CP4IM. CPU times of the two methods are given in Fig. 1.\nLet us take the mushroom dataset, here CLOSEDPATTERN clearly outperforms CP4IM. Moreover, the gains in terms of CPU time becomes significant when the minsup threshold decreases. For instance, with a minsup = 0.05%, the CLOSEDPATTERN constraint is about 5 times faster than CP4IM. If we take connect and chess datasets, CP4IM\n2 http://fimi.ua.ac.be/data/ 3 http://www.gecode.org 4 http://research.nii.ac.jp/\u02dcuno/codes.htm 5 https://dtai.cs.kuleuven.be/CP4IM/\nperforms better in terms of CPU time. The behavior of CLOSEDPATTERN on the two datasets can be explained by their important density. With such datasets, the number of closed patterns is quite huge, which reduce the pruning power of the global constraint. It is important to stress that we are testing the pruning power of our global constraint without any modification on the search part. On the remaining datasets, CP4IM reaches an out of memory state due to huge number of reified constraints. For instance, if we take T40I10D100K dataset, the CP model produced by CP4IM contains |T | = 100 000 reified constraints to express the coverage constraint, 2 \u00d7 |I| = 2 \u00d7 1 000 reified constraints to express the closure and frequency constraints. That is, the CP solver has to load in memory a CP model of 102 000 reified constraint.\nA particular observation that we can make is the fact that our global constraint is able to handle all datasets handled by the specialized algorithm LCM-v3, which is not the case of CP4IM due to the size of the CP model to load. The result is also quite competitive comparing to LCM-v3 in terms of CPU time. For instance, if we take the BMS-Web-View1 dataset with minsup = 0.06%, the extraction of all closed patterns is achieved in less than 10s with CLOSEDPATTERN for 0.1s with LCM-v3. The same observation on T10I4D100K dataset (for minsup \u2264 0.5%).\nTo complement the results, The table given in Figure 1 reports a result comparison between CLOSEDPATTERN and CP4IM. For each dataset and for each value of minsup, we report the number of closed patterns (Col. 3), the number of calls to the propagate routine of Gecode (Col. 4), the number of explored nodes of the search tree (Col. 5), and the memory usage (Col. 6).\nIf we comeback to mushroom, CLOSEDPATTERN explores less nodes than CP4IM and thus, we have less calls of the propagator, while on chess and connect we have the opposite. This can be explained by the fact that we do not use any particular heuristic in the search part. The second observation is that our approach is very efficient in terms of number of propagations. For CLOSEDPATTERN, the number of propagations remains meaningless comparing to the one using CP4IM on small minsup values. This is due to the huge number of reified constraints used in CP4IM. As a last observation relating to memory consumption, CLOSEDPATTERN uses very low amount of memory on mushroom and connect, but consumes a little bit more memory on chess comparing to CP4IM.\nAt the end, comparing CLOSEDPATTERN with LCM-v3 shows that our global constraint remains competitive knowing that it just enforces domain consistency at each node without any dedicated search heuristic."}, {"heading": "6 Conclusion", "text": "In this paper, we have proposed the global constraint CLOSEDPATTERN for Closed Frequent Pattern Mining. CLOSEDPATTERN captures the particular semantics of the CFPM problem in order to ensure a polynomial pruning algorithm ensuring domain consistency. Experiments on several known large datasets show that our global constraint is clearly efficient and achieves scalability while it is a major issue for CP approaches."}], "references": [{"title": "Mining association rules between sets of items in large databases", "author": ["R. Agrawal", "T. Imieli\u0144ski", "A. Swami"], "venue": "ACM SIGMOD Record. vol. 22, pp. 207\u2013216. ACM", "citeRegEx": "1", "shortCiteRegEx": null, "year": 1993}, {"title": "Frequent item set mining", "author": ["C. Borgelt"], "venue": "Wiley Interdisc. Rew.: Data Mining and Knowledge Discovery 2(6),", "citeRegEx": "2", "shortCiteRegEx": "2", "year": 2012}, {"title": "Beyond market baskets: Generalizing association rules to correlations", "author": ["S. Brin", "R. Motwani", "C. Silverstein"], "venue": "In: SIGMOD. pp", "citeRegEx": "3", "shortCiteRegEx": "3", "year": 1997}, {"title": "MAFIA: A maximal frequent itemset algorithm", "author": ["D. Burdick", "M. Calimlim", "J. Flannick", "J. Gehrke", "T. Yiu"], "venue": "IEEE Trans. Knowl. Data Eng. 17(11),", "citeRegEx": "4", "shortCiteRegEx": "4", "year": 2005}, {"title": "Constraint programming for itemset mining", "author": ["L. De Raedt", "T. Guns", "S. Nijssen"], "venue": "Proceedings of the 14th ACM SIGKDD international conference on Knowledge discovery and data mining. pp. 204\u2013212. ACM", "citeRegEx": "5", "shortCiteRegEx": null, "year": 2008}, {"title": "Fast algorithms for frequent itemset mining using fp-trees", "author": ["G. Grahne", "J. Zhu"], "venue": "IEEE Trans. Knowl. Data Eng. 17(10),", "citeRegEx": "6", "shortCiteRegEx": "6", "year": 2005}, {"title": "k-pattern set mining under constraints", "author": ["T. Guns", "S. Nijssen", "L. De Raedt"], "venue": "Knowledge and Data Engineering, IEEE Transactions on 25(2), 402\u2013418", "citeRegEx": "7", "shortCiteRegEx": null, "year": 2013}, {"title": "Itemset mining: A constraint programming perspective", "author": ["T. Guns", "S. Nijssen", "L. De Raedt"], "venue": "Artificial Intelligence 175(12), 1951\u20131983", "citeRegEx": "8", "shortCiteRegEx": null, "year": 2011}, {"title": "Mining frequent patterns without candidate generation: A frequent-pattern tree approach", "author": ["J. Han", "J. Pei", "Y. Yin", "R. Mao"], "venue": "Data Min. Knowl. Discov. 8(1),", "citeRegEx": "9", "shortCiteRegEx": "9", "year": 2004}, {"title": "Constraint programming for mining nary patterns", "author": ["M. Khiari", "P. Boizumault", "B. Cr\u00e9milleux"], "venue": "CP", "citeRegEx": "10", "shortCiteRegEx": "10", "year": 2010}, {"title": "Levelwise search and borders of theories in knowledge discovery", "author": ["H. Mannila", "H. Toivonen"], "venue": "Data Mining and Knowledge Discovery 1(3), 241\u2013258", "citeRegEx": "11", "shortCiteRegEx": null, "year": 1997}, {"title": "Integrating constraint programming and itemset mining", "author": ["S. Nijssen", "T. Guns"], "venue": "Machine Learning and Knowledge Discovery in Databases, European Conference, ECML PKDD 2010, Barcelona, Spain, September 20-24, 2010, Proceedings, Part II. Lecture Notes in Computer Science, vol. 6322, pp. 467\u2013482. Springer", "citeRegEx": "12", "shortCiteRegEx": null, "year": 2010}, {"title": "Efficient mining of association rules using closed itemset lattices", "author": ["N. Pasquier", "Y. Bastide", "R. Taouil", "L. Lakhal"], "venue": "Inf. Syst. 24(1),", "citeRegEx": "13", "shortCiteRegEx": "13", "year": 1999}, {"title": "CLOSET: an efficient algorithm for mining frequent closed itemsets", "author": ["J. Pei", "J. Han", "R. Mao"], "venue": "SIGMOD Workshop on Data Mining and Knowledge Discovery. pp. 21\u201330", "citeRegEx": "14", "shortCiteRegEx": null, "year": 2000}, {"title": "Handbook of Constraint Programming (Foundations of Artificial Intelligence)", "author": ["F. Rossi", "Beek", "P.v.", "T. Walsh"], "venue": "Elsevier Science Inc., New York, NY, USA", "citeRegEx": "15", "shortCiteRegEx": null, "year": 2006}, {"title": "An efficient algorithm for enumerating closed patterns in transaction databases", "author": ["T. Uno", "T. Asai", "Y. Uchida", "H. Arimura"], "venue": "DS", "citeRegEx": "16", "shortCiteRegEx": "16", "year": 2004}, {"title": "Fast vertical mining using diffsets", "author": ["M.J. Zaki", "K. Gouda"], "venue": "SIGKDD International Conference on Knowledge Discovery and Data Mining. pp", "citeRegEx": "17", "shortCiteRegEx": "17", "year": 2003}, {"title": "CHARM: an efficient algorithm for closed itemset mining", "author": ["M.J. Zaki", "C. Hsiao"], "venue": "SIAM International Conference on Data Mining. pp", "citeRegEx": "18", "shortCiteRegEx": "18", "year": 2002}], "referenceMentions": [{"referenceID": 0, "context": "Originally introduced by [1], it plays a key role in many data mining applications.", "startOffset": 25, "endOffset": 28}, {"referenceID": 0, "context": "These applications include the discovery of frequent itemsets and association rules [1], correlations [3] and many other data mining tasks.", "startOffset": 84, "endOffset": 87}, {"referenceID": 2, "context": "These applications include the discovery of frequent itemsets and association rules [1], correlations [3] and many other data mining tasks.", "startOffset": 102, "endOffset": 105}, {"referenceID": 12, "context": ", A-CLOSE algorithm [13], CHARM [18], CLOSET [14], LCM [16]).", "startOffset": 20, "endOffset": 24}, {"referenceID": 17, "context": ", A-CLOSE algorithm [13], CHARM [18], CLOSET [14], LCM [16]).", "startOffset": 32, "endOffset": 36}, {"referenceID": 13, "context": ", A-CLOSE algorithm [13], CHARM [18], CLOSET [14], LCM [16]).", "startOffset": 45, "endOffset": 49}, {"referenceID": 15, "context": ", A-CLOSE algorithm [13], CHARM [18], CLOSET [14], LCM [16]).", "startOffset": 55, "endOffset": 59}, {"referenceID": 4, "context": "Over the last decade, the use of Constraint Programming paradigm (CP) to model and to solve Data Mining problems has received a considerable attention [5,7,10].", "startOffset": 151, "endOffset": 159}, {"referenceID": 6, "context": "Over the last decade, the use of Constraint Programming paradigm (CP) to model and to solve Data Mining problems has received a considerable attention [5,7,10].", "startOffset": 151, "endOffset": 159}, {"referenceID": 9, "context": "Over the last decade, the use of Constraint Programming paradigm (CP) to model and to solve Data Mining problems has received a considerable attention [5,7,10].", "startOffset": 151, "endOffset": 159}, {"referenceID": 6, "context": ", propose to express the different constraints that we can have in Pattern Mining as a CP model [7].", "startOffset": 96, "endOffset": 99}, {"referenceID": 4, "context": "Experiments on several known large datasets show that our approach clearly outperforms CP4IM [5] and achieves scalability while it is a major issue for CP approaches.", "startOffset": 93, "endOffset": 96}, {"referenceID": 10, "context": "Constraint-based pattern mining aims at extracting all patterns p of LI satisfying a query q(p) (conjunction of constraints), which usually defines what we call a theory [11]: Th(q) = {p \u2208 LI | q(p) is true}.", "startOffset": 170, "endOffset": 174}, {"referenceID": 0, "context": "The Apriori algorithm [1] is one of the approaches that adopt this obvious representation.", "startOffset": 22, "endOffset": 25}, {"referenceID": 16, "context": "representation [19,17,4].", "startOffset": 15, "endOffset": 24}, {"referenceID": 3, "context": "representation [19,17,4].", "startOffset": 15, "endOffset": 24}, {"referenceID": 15, "context": "It is successfully used within LCM [16] and FPgrowth [9] algorithms.", "startOffset": 35, "endOffset": 39}, {"referenceID": 8, "context": "It is successfully used within LCM [16] and FPgrowth [9] algorithms.", "startOffset": 53, "endOffset": 56}, {"referenceID": 14, "context": "Examples of global constraints are AllDifferent, Regular and Among (see [15]).", "startOffset": 72, "endOffset": 76}, {"referenceID": 12, "context": "CLOSE [13] was the first algorithm proposed to extract closed frequent patterns (CFPs).", "startOffset": 6, "endOffset": 10}, {"referenceID": 17, "context": "Later, Zaki and Hsiao [18] proposed a depth-first algorithm based on a vertical database format e.", "startOffset": 22, "endOffset": 26}, {"referenceID": 13, "context": "In [14], Pei et al.", "startOffset": 3, "endOffset": 7}, {"referenceID": 15, "context": "[16] have proposed LCM, one of the most fastest frequent itemset mining algorithm.", "startOffset": 0, "endOffset": 4}, {"referenceID": 4, "context": "have proposed in [5] a CP model for itemset mining (CP4IM).", "startOffset": 17, "endOffset": 20}, {"referenceID": 11, "context": "frequency, maximality, closedness) can be modeled as CSP [12,8].", "startOffset": 57, "endOffset": 63}, {"referenceID": 7, "context": "frequency, maximality, closedness) can be modeled as CSP [12,8].", "startOffset": 57, "endOffset": 63}, {"referenceID": 1, "context": "Definition 3 (Full extension item [2]).", "startOffset": 34, "endOffset": 37}, {"referenceID": 17, "context": "The reported results are on several real and synthetic datasets [18,6] from FIMI repository2 with large size.", "startOffset": 64, "endOffset": 70}, {"referenceID": 5, "context": "The reported results are on several real and synthetic datasets [18,6] from FIMI repository2 with large size.", "startOffset": 64, "endOffset": 70}], "year": 2016, "abstractText": "Discovering the set of closed frequent patterns is one of the fundamental problems in Data Mining. Recent Constraint Programming (CP) approaches for declarative itemset mining have proven their usefulness and flexibility. But the wide use of reified constraints in current CP approaches raises many difficulties to cope with high dimensional datasets. This paper proposes CLOSEDPATTERN global constraint which does not require any reified constraints nor any extra variables to encode efficiently the Closed Frequent Pattern Mining (CFPM) constraint. CLOSEDPATTERN captures the particular semantics of the CFPM problem in order to ensure a polynomial pruning algorithm ensuring domain consistency. The computational properties of our constraint are analyzed and their practical effectiveness is experimentally evaluated.", "creator": "LaTeX with hyperref package"}}}