{"id": "1606.01042", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "3-Jun-2016", "title": "Machine Learning for E-mail Spam Filtering: Review,Techniques and Trends", "abstract": "there we present a comprehensive review of the most effective content - based e - mail http spam filtering techniques. we focus primarily on proposing machine oriented learning - score based spam filters categories and their variants, and report on a broad review ranging from surveying the relevant ideas, outreach efforts, effectiveness, and the current current progress. the initial exposition of filtering the background examines the basics of e - mail spam filtering, the evolving nature of spam, spammers playing cat - and - mouse with e - telecommunication mail service providers ( esps ), and the machine learning competition front in fighting spam. we conclude by measuring with the impact of machine learning - weighted based filters and explore the promising offshoots of latest developments.", "histories": [["v1", "Fri, 3 Jun 2016 10:58:37 GMT  (496kb,D)", "http://arxiv.org/abs/1606.01042v1", "Journal. 27 Pages"]], "COMMENTS": "Journal. 27 Pages", "reviews": [], "SUBJECTS": "cs.LG cs.CR", "authors": ["alexy bhowmick", "shyamanta m hazarika"], "accepted": false, "id": "1606.01042"}, "pdf": {"name": "1606.01042.pdf", "metadata": {"source": "CRF", "title": "Machine Learning for E-mail Spam Filtering: Review, Techniques and Trends", "authors": ["Alexy Bhowmick", "Shyamanta M. Hazarika"], "emails": ["alexyb@tezu.ernet.in"], "sections": [{"heading": null, "text": "niques. We focus primarily on Machine Learning-based spam filters and their variants, and report on a broad review ranging from surveying the relevant ideas, efforts, effectiveness, and the current progress. The initial exposition of the background examines the basics of e-mail spam filtering, the evolving nature of spam, spammers playing cat-and-mouse with e-mail service providers (ESPs), and the Machine Learning front in fighting spam. We conclude by measuring the impact of Machine Learning-based filters and explore the promising offshoots of latest developments.\nKeywords E-mail \u00b7 False positive \u00b7 Image spam \u00b7 Machine learning \u00b7 Spam \u00b7 Spam filtering."}, {"heading": "1 Introduction", "text": "Electronic-mail (abbreviated as e-mail) is a fast, effective and inexpensive method of exchanging messages over the Internet. Whether its a personal message from a family member, a company-wide message from the boss, researchers across continents sharing recent findings, or astronauts staying in touch with their family (via e-mail uplinks or IP phones), e-mail is a preferred means for communication. Used worldwide by 2.3 billion users, at the time of writing the article, email usage is projected to increase up to 4.3 billion accounts by the year-end 2016 [Radicati, 2016]. But the\nAlexy Bhowmick \u00b7 Shyamanta M. Hazarika School of Engineering, Tezpur University Tezpur, Assam, India. E-mail: alexyb@tezu.ernet.in\nincreasing dependence on e-mail has induced the emergence of many problems caused by \u2018illegitimate\u2019 e-mails, i.e. spam. According to the Text Retrieval Conference (TREC) the term \u2018spam\u2019 is - an unsolicited, unwanted e-mail that was sent indiscriminately [Cormack, 2008]. Spam e-mails are unsolicited, un-ratified and usually mass mailed. Spam being a carrier of malware causes the proliferation of unsolicited advertisements, fraud schemes, phishing messages, explicit content, promotions of cause, etc. On an organizational front, spam effects include: i) annoyance to individual users, ii) less reliable e-mails, iii) loss of work productivity, iv) misuse of network bandwidth, v) wastage of file server storage space and computational power, vi) spread of viruses, worms, and Trojan horses, and vii) financial losses through phishing, Denial of Service (DoS), directory harvesting attacks, etc.[Siponen and Stucke, 2006].\nOver the couple of decades e-mail spam volume has increased exponentially and is not just an annoyance but a security threat; as it continues to evolve in its potential to do serious damage to individuals, businesses and economies. The fact that e-mail is a very cheap means of reaching to millions of potential customers serves as a strong motivation for amateur advertisers and direct marketers [Cranor and Lamacchia, 1998]. For e.g. one of the favorite spam topics is the \u2018penny stock \u2019 spam or the pump and dump schemes that take place over the Internet platform. Fraudsters (spammers) purchase large quantities of \u2018penny stocks\u2019 i.e. stocks of small, thinly traded companies, through compromised brokerage accounts and promote them via message boards or abroad e-mail campaign, pointing to the transient increase in share value. Even if a fraction of the recipients are fooled into buying the stocks, the spammers make a huge profit. Unwitting investors seeking higher gains believe the hype and purchase the ar X iv :1\n60 6.\n01 04\n2v 1\n[ cs\n.L G\n] 3\nJ un\nstocks, creating higher demand and raising the price further. Soon after the spam e-mails are sent, the fraudster sells off his stocks at premium leaving the duped investors desperate to sell their own. Stock spam is just an old trick that has made a massive comeback in the first half of 2013. The Security Threat Report 2014 [Sophos, 2014] suggests that on some days, 50% of the overall spam volume were \u2018pump and dump\u2019 mailings.\nAccording to recent reports [IBM, 2014], [Cyberoam, 2014], [Symantec, 2014], spam is being increasingly used to distribute viruses, malware, links to phishing sites, etc. An average of 54 billion spam e-mails was sent worldwide each day [Cyberoam, 2014]. Sizeable chunks were that of pharmacy spam, dating spam, online product purchase, diet products and online casinos spam [CISCO, 2014]. Another kind of spam that is rapidly evolving is \u2018Political spam\u2019; e-mail, contrary to popular media such as print, radio, or television provides political contestants an economical medium to get through to broad constituents of the electorate. Political spam is but a campaign tactic that mostly involves marketing for political ends or mudslinging.\nSpam is a broad concept that is still not completely understood. In general, spam has many forms - chat rooms are subject to chat spam, blogs are subject to blog spam (splogs)[Kolari et al, 2006], search engines are often misled by web spam (search engine spamming or spamdexing)[Gyongyi and Garcia-molina, 2005], [Shi and Xie, 2013], while social systems are plagued by social spam [Lee et al, 2010a]. This paper focuses on \u2018email spam\u2019 and its variants, and not \u2018spam\u2019 in general. Prior attempts to review e-mail spam filtering using Machine Learning have been made, the most notable ones being [Androutsopoulos et al, 2006], [Carpinter and Hunt, 2006], [Blanzieri and Bryl, 2008], [Cormack, 2008], [Guzella and Caminhas, 2009], and Wang et al [2013]. We extend earlier surveys by taking an updated set of works into account. We consider e-mail header analysis and analysis of non-content features, which were not discussed in the fairly recent overviews by [Guzella and Caminhas, 2009] and [Wang et al, 2013], who have performed topic modeling instead. We also present a content analysis of the major spam-filtering surveys over the period (2004-2015). Significant amounts of historical and recent literature, including gray literature (dissertations, press articles, technical and security reports, web publications, etc.) were studied to report recent advances and findings. We believe our survey is of complementary nature and provides an inclusive survey of the state-of-the-art in content-based e-mail spam filtering.\nOur work addresses the following:\n\u2013 First, we perform an extensive evolutionary exploration of the major spam characteristics, trends and spammers evasion techniques. In doing so, we underline some promising research directions and a few\nresearch gaps. \u2013 Second, we discuss feature engineering for textual\nand image spam e-mails. We investigate alternate spam filtering plans based on e-mail header and noncontent features. \u2013 Third, we present taxonomy of content-based e-mail spam filtering and a qualitative summary of ma-\njor surveys on spam e-mails over the period (2004- 2015). \u2013 Fourth, we report new findings and suggest lines\nof future investigations into machine learning techniques for emerging spam types.\nThe rest of the paper is organized as follows: In Sec 2, we characterize spam evolution, trends, spam causes and their counter measures. In Sec 3, we discuss corpus pre-processing, feature extraction, feature selection and analysis of header and non-content features. In Sec 4, we review spam filtering techniques employed prior to Machine Learning. Section 5 offers details on Machine Learning algorithms applied successfully to textual and multimedia content of spam e-mails. Special attention is given to recent techniques. Section 6 overviews standard evaluation measures and publicly available e-mail spam, image spam and phishing e-mail corpuses. Finally, Section 7 outlines future research trends.\n1.1 E-mail and Spam Filters\nWhen an e-mail is sent, it enters into the messaging system and is routed from one server to another till it reaches the recipients mailbox. Figure 1 depicts the e-mail architecture and how e-mail works. E-mail depends on few primary protocols: SMTP (Simple Mail Transfer Protocol) [Jonathan B. Postel, 1982], POP3 (Post Office Protocol) and IMAP (Internet Message Access Protocol). The transmission details are specified by the SMTP protocol. POP3 and IMAP are the\nmost widely implemented protocols for the Mail User Agent (MUA) and are basically used to receive messages. A Message Transfer Agent (MTA) receives mails from a sender MUA or some other MTA and then determines the appropriate route for the mail [Katakis et al, 2007]. The recipients MTA delivers the incoming mail to the incoming mail server Mail Delivery Agent (MDA) which is basically a POP/IMAP server. MUAs (e.g. Mozilla Thunderbird, Microsoft Outlook, etc.) are email clients and help the user to read and write e-mails. Spam filters can be deployed at strategic places in both clients and servers. Many Internet Service Providers (ISPs) and organizations deploy spam filters at the email server level, the preferred places to deploy being at the gateways, mail routers, etc. They can be deployed in clients, where they can be installed at proxies or as plug-ins, as in [Irwin and Friedman, 2008]. Some spam filters, (e.g. SpamBayes) can be deployed at both server and client levels.\n1.2 Structure of an E-mail\nAn e-mail comprises of two elements: body and the header. The e-mail body comprises of unstructured data such as text, HTML markup, multimedia objects and attachments. The header comprises trace information and structured fields that are part of the message content. The Simple Mail Transfer Protocol (SMTP) [Jonathan B. Postel, 1982] defines e-mail header session to contain fields like - the subject, senders name, e-mail ID, sending date, routing information, timestamp, etc. for recipient information and successful delivery. Each attribute (field) in the header has a name and specific meaning -\n\u2013 Received: Contains transit-related information of\ne-mail servers, IP addresses, dates, etc. \u2013 From: Sender\u2019s name; e-mail ID. \u201cName\u201d <e-mail@example.com> \u2013 To: Recipient\u2019s name; e-mail ID. \u201cName\u201d <e-mail@example.com> \u2013 Return Path: Encloses an optional address specifi-\ncation to be used if an error is encountered (bounce). \u2013 Message ID: A single unique message identifier\ndesignated by the mail system. \u2013 X-mailer: The mail software used to create/send\nthe message. \u2013 Subject: String identifies the theme of the message\nplaced by the sender.\n\u2013 Content type: Format of content (character set, etc.), specified by MIME (Multipurpose Internet Mail Extensions).\nEach e-mail message comprises of the transit-handling\nenvelope [Crocker, 2009] that is hidden from e-mail users.\nFirst the envelope sender address is sent, followed by one or more envelope recipient addresses, and finally the actual message is sent. The e-mail servers actually use the envelope address (not the message header address) to deliver the e-mail to the correct recipient. The final recipient sees only the e-mail header and body. The envelope address is one of the e-mail features that is very often abused by spammers."}, {"heading": "2 Characterizing Spam Evolution", "text": "A couple of decades earlier spam e-mail content was mainly textual. Therefore, spam filters analyzed only the e-mail body and header to distinguish ham (legitimate e-mails) from spam e-mails. Today however, amateur advertisers and opportunists harness addresses from chat rooms, web pages, newsgroup archives, service provider directories etc and send junk e-mail blindly to millions without much cost [Androutsopoulos et al, 2006]. Anti-spam software companies and research groups working on spam filtering for quite some time now have tasted limited success, mostly because spam filtering is an adversarial classification task. In such tasks, a malicious adversary \u2018poisons\u2019 the training data with carefully crafted attack techniques in order to mislead a classifier [Jorgensen et al, 2008]. To deliver spam email to a huge number of recipients, spammers often resort to use of bulk mailing software or e-mail harvesters [Blanzieri and Bryl, 2008].\nSpam evolution has been briefly discussed in scientific literature [Carpinter and Hunt, 2006] [Guzella and Caminhas, 2009] [Almeida and Yamakami, 2012]. One reason why spam is difficult to filter is because of its dynamic nature. The characteristics (e.g. topics, frequent terms, etc) of spam e-mail vary rapidly over time as spammers always seek to invent new strategies to bypass spam filters. These strategies include - word obfuscation, image spam, sending e-mail spam from hijacked computers, etc. A proper understanding of the spam nature and evolution can help much in the development of proper countermeasures. Some of the evasion techniques and major trends in spam causes and characteristics seen over the years are discussed below:\n2.1 Word Obfuscation\nWords like \u2018sex \u2019, \u2018free\u2019, \u2018congratulations\u2019 are good indicators of spam and have large (\u2018spammy\u2019) weights. Initial spam filters based on heuristic filtering could easily detect and filter spam e-mails based on the presence of such obvious words. Figure 2 illustrates a word cloud of common words in spam e-mail [Greenberg, 2010]; the\nlarger a word appears, the more often it has been found to occur in e-mail spam). Spammers adapted quickly by making sure such obvious words are not encountered verbatim in their messages. To defeat filters, they resorted to simple obfuscation techniques like breaking the word into multiple pieces, as -\n\u2013 f-r-e-e embedding special characters \u2013 fr<!--xx-->ee using HTML comments \u2013 \\item <a href=\u2019m&#97;i&#108;to&#58;%&#54; 6re&#101;\u2019>free</a>\nwith character-entity encoding \u2013 \\item o fr&#101xe\nencoded with HTML ASCII codes\nWhen seen by any web user, all these above samples look the same as \u201cfree\u201d but they thwart simple word/phrase filtering and escape the filter rules. The effectiveness of filter re-training however caused spammers to abandon one technique and migrate to newer obfuscation techniques. HTML-based obfuscation techniques are discussed at length in the study by [Pu and Webb, 2006]. Spammers resorted to the use of innocuous words to obfuscate the e-mail message content in order to confuse or circumvent spam filters. In general, there are many ways to obscure the e-mail content: misplaced spaces, purposeful misspellings, embedded special characters (letter substitution), Unicode letter transliteration [Liu and Stamm, 2007], HTML redrawing, etc. Tokenization attacks are a similar spamming technique more associated with the preprocessing stage in spam filtering. In tokenization the spammer works\nto defeat the feature selection process by splitting and modifying the crucial message features. Examples include introducing spaces, special symbols, asterisks in words or HTML, JavaScript, CSS layout tricks. A classic example of evading the recognition of the word \u2018VIAGRA by the spam filter would be \u2018V-I-A-G-R-A\u2019.\n2.2 Bayesian Poisoning Attacks\nA usual criticism of statistical spam filters (e.g. SpamBayes,DSPAM, POPFile) is that they are susceptible to \u2018poisoning \u2019 by interjection of random words into the spam messages [Fawcett, 2004], [Graham-Cumming, 2006]. Bayesian poisoning is such a kind of statistical attack in which spammers use carefully crafted e-mails to attack the heart of a Bayesian filter and thus degrade its effectiveness. The spammers add random or carefully selected legitimate-seeming words in order to confuse the spam filter and cause it to believe an incoming spam email is not spam (a statistical II error). Spammers can get these common English words or Ham phrases from sources like - Reuters news articles, written and spoken English, and USENET messages. These strong statistical attacks have an incidental consequence too - a statistical I error or simply a higher false positive rate. The reason is that when the user trains the spam filter with the poisoned training data, the spam filter \u2018learns\u2019 about such random words as being good evidences of spam [Sanz, 2008]. Paul Graham [Graham, 2002b] however played down the effectiveness of such poisoning techniques arguing that to outweigh the statistical significance of even one incriminating word as \u201cviagra\u201d,\nspammers would need many innocent words (e.g. names of ones friends and family, terms used at work, etc) which are unique for each recipient and spammers have no way of figuring them out. However, evidence suggests Bayesian poisoning is real and cannot be dismissed [Biggio et al, 2011].\nGraham-Cumming [Graham-Cumming, 2004] [Graham-\nCumming, 2006], identified two types of possible attacks on Bayesian filters: passive (where in absence of feedback, the spammer can at best make educated guesses) and active (where the spammer discovers an effective wordlist after getting feedback). [Lowd and Meek, 2005] investigated \u2018good word attacks\u2019 where a spammer appends words indicative of legitimate e-mail, and found Naive Bayes extremely vulnerable to both scenarios of active and passive attacks. Their results showed frequent filter re-training could mitigate the effective of these attacks. [Wittel and Wu, 2004] explored a simple passive attack of poisoning with random words (a dictionary attack) and found it ineffective against CRM1141, but effective against SpamBayes.2 A smarter passive attack with common or \u2018hammy\u2019 words (common word or focused attack) saw SpamBayes perform even worse but CRM114 remained very resistant. [Stern et al, 2004] showed that injecting common words from the English language led to the performance decrease of SpamBayes. Published research indicates that Bayesian poisoning is real and the number of published attack methods indicates that it cannot be dismissed and that further investigation on poisoning of statistical spam filters is a worthwhile task of research.\n2.3 Backscatter Spam\nWhen an e-mail is sent, the sender is normally informed if the e-mail could not be delivered or the delivery was delayed for some reason. E-mail servers normally send a bounce message notifying the sender of delivery problems. Such a message is termed - Delivery Status Notification (DSN). Mostly, DSNs are welcome to the sender and they are generally sent to the envelope sender address. Backscatter occurs when DSNs are sent to senders whose addresses are forged in the message envelope by spammers. In other words, backscatter are delivery notifications from another server, rejecting an e-mail made to come across as being mailed from an account [Cormack and Lynam, 2007]. These mails are then delivered unsolicited in bulk quantities to a lot\n1 CRM 114 - the Controllable Regex Mutilator, an opensource spam filtering device 2 SpamBayes - a popular open-source spam filtering tool, with 700,000 downloads, is based on techniques laid out by Paul Graham.\nof recipients. Hence, backscatter qualifies as unsolicited bulk e-mail and is spam. Misdirected bounces from mail servers, misdirected \u201dplease confirm your subscription\u201d requests from mailing lists, \u201dout of office\u201d vacation autoreplies and auto-responders, challenge requests from Challenge/Request Systems, etc. are the major varieties of backscatter. Backscatter, also called \u2018collateral spam\u2019 is a direct consequence of spam.\n[Cormack and Lynam, 2007] experimented with six open-source filters and a test set of 49,086 messages with backscatter representing a mere 1% of the total spam in the test set. It was found that contentbased spam filters could filter 98% of the spam, but backscatter was found to be most difficult to classify with nearly all the backscatter messages being misclassified. Backscatter is a problem that is hard to deal with and though spammers may be blamed for it, it simply exists because our mail servers are configured to bounce messages back to fake addresses rather than just reject such spam immediately [McMillan, 2008]. Servers that generate e-mail backscatter can land up on various DNS-based Blacklists (DNSBLs). Improperly configured e-mail servers gives rise to \u2018open relays\u2019 which contribute to the problem of backscatter. Open relay servers can also get listed in various DNSBLs.\n2.4 Image Spam\nText-based spam filters are designed only to analyze different components of an e-mail (sender\u2019s address, header, body, attachments) and detect specific spam characteristics. A new type of spam called image-based spam or image spam is a rapidly spreading. It involves textual spam content embedded into images that are attached to e-mails. OCR (Optical Character Recognition)based modules are effective to a limited extent against image-spam [Biggio et al, 2006] [Fumera, 2006]. But often the textual content is obfuscated by spammers to evade OCR tools. Till 2010, the upsurge of spam e-mails meant that roughly up to 85% of all e-mail spam were image spam [Wu and Tsai, 2008].\nSpamAssassin, a widely used commercial and opensource spam filter provides several OCR plug-ins (e.g. OCR Plugin 3, Fuzzy OCR Plugin4, and Bayes OCR Plugin5) that can be used to detect image spam. It has been established from current literature that the applying modern classification approaches to the generated\n3 A SpamAssassin OCR plug-in is maintained at: http://wiki.apache.org/spamassassin/OcrPlugin 4 Fuzzy OCR is available but no longer maintained. 5 A beta version of BayesOCR plugin is available at http://pralab.diee.unica.it/en/BayesOCR\ntext from image spam is very efficient. Later, signatures were also generated to easily detect and filter already known image spam. The spam filter database by mid-2012 contained more than 40 million relevant spam signatures [IBM, 2012]. In order to avoid signaturebased techniques, spammers switched tactics by making arbitrary alterations to a specified template image. They began employing obfuscation, similar to the approach usually applied in web forums, to outsmart Optical Character Recognition (OCR) tools. Lately, Pattern Recognition techniques and Computer Vision are playing a significant part in filtering of multimedia data. However, the solutions achieved so far have shortcomings, and their efficiency is yet to be systematically investigated [Biggio et al, 2006]. Image-based filtering involves extraction of relevant features from the image and classification by state-ofthe-art classifiers. Image-based spam detection is an example of classification of multimedia data. A number of researchers have devised approaches based on Pattern Recognition and Computer Vision to address different forms of image spam. In general they can be grouped into two broad categories: a) OCR-based techniques and b) Low level image features based techniques. The use of OCR tools to extract text embedded into images, and processing it using modern text categorization techniques was thoroughly investigated by [Fumera, 2006]. But OCRs have been proven to be computationally expensive and not accurate enough in adversarial situations [Goodman et al, 2007] [Attar et al, 2011]. [Biggio et al, 2006] surveyed and categorized the major techniques which have been suggested as image spam solutions. Spilling of image spam onto social networks like Twitter or Facebook has become widespread. Extraction of features for image-based spam filters is further discussed in Sec 3. A detailed and recent review involving definitions, spam tricks, complete classification of image spam filtering techniques and datasets may be found in [Wu and Tsai, 2008].\n2.5 Botnet Spam\nAt a time when blacklists had almost put the spammers out of business and diminished their profits, some enterprising spammers joined hands with virus and exploit code writers to get access to compromised machines on the Internet known as \u2018bots\u2019 or \u2018zombies\u2019. The term botnet applies to an army of machines that are compromised and controlled by a single \u2018botmaster \u2019. A bot, when subverted (e.g. by a virus/Trojan infection or by a specific bot software), can be used to send out spam or malware, harvest password and login information for identity theft and fraud, re-route users to\nspoofed websites, or even recruit new bots, and so on. Botnets on the other hand constitute a major threat to the Internet infrastructure as they have the capability to - mount crippling denial of service (DoS) attacks on servers, generate click-fraud [Perera et al, 2013], send out a flood of spam and backscatter [Xie et al, 2008] facilitate phishing and pump-and-dump schemes, form a computational grid to break weak passwords or obfuscate the operators point of origin, etc. Botnets run on the global level outside the range of national boundaries. According to public tracker Shadowserver 6, at least one million zombie machines or bots are believed to be active and the number is still growing.\nIdentifying and blacklisting each and every bot is challenging, both because a botnet attack is momentary and the fact that a single bot transmits only a small volume of spam e-mails to avoid detection. On the other hand spammers are using large Botnets to send spam, thus creating extremely a huge number of IP addresses to be blacklisted. Grum, a sneaky, kernel-mode rootkit was of notable interest to researchers. It was a relatively small botnet with only 600,000 members. Yet it was responsible for almost 25 percent, or 40 billion spam e-mails a day before it was finally taken down. Identifying botnets is a new challenge for the anti-spam industry, and tracking spammers and bringing them to justice, and pulling down botnet servers becomes an international undertaking. July 18, 2012 saw the take down of the Grum botnet [Sophos, 2013]. Recently, as a repercussion of the bombing incident during the Boston Marathon which happened on April 15, 2013, botnet spam related to the Boston Marathon bombing was found to have constituted 40 percent of all spam messages transmitted globally on subsequent days [CISCO, 2014].\nAccording to CISCO report [CISCO, 2007], botnets are the primary security threat on the Internet today. Botnets are hard to detect because of their dynamic nature and their adaptability in evading the common security defenses. Botnets have been studied thoroughly, particularly in the context of spam and phishing [Xie et al, 2008], [John et al, 2009] and [Zhuang et al, 2008]. Botnets are emerging as the most severe threat against cyber-security as they provide a distributed platform for several unlawful activities like distributed denial of service (DDoS) attacks, malware dissemination, phishing, scanning and click fraud. Because botnets attack from multiple fronts there is no single technology that can provide protection from it.\n6 https://www.shadowserver.org/wiki/\n2.6 Social Engineering - Phishing\nSpammers are increasingly adopting the use of social engineering techniques in the spam campaign. Patient and committed attackers perform extensive research and gain a sophisticated understanding of the needs and motivation of recipients and then contact them with highly believable communications (e.g. e-mails or social networking message) which may reflect knowledge of the individuals\u2019 work activities, colleagues, friends, and family. Phishing is an illegal attempt that exploits both social engineering and technical deception to acquire sensitive confidential data (e.g. social security number, e-mail address, passwords, etc.) and financial account credentials [Robinson, 2003] [Bergholz et al, 2010]. Phishing involves spam e-mails disguised as legitimate with a subject or message designed to trick the victims into revealing confidential information. In deceptive phishing, e-mail notifications appearing to come from credit card companies, security agencies, banks, providers, online payment processors or IT administrators are commonly used to exploit the unsuspecting public. The notification encourages the recipient to urgently enter/update their personal data. In most cases, the fraudsters try to frighten a recipient by some \u201durgent\u201d matter (e.g. \u201dWe suspect an unauthorized transaction on your account. To ensure that your account is not compromised, please click the link below and confirm your identity\u201d) that requires their immediate attention and divulging of their personal information. It is often accompanied by a threat to block the account within a limited period, if not responded. Once information such as user-name and password are entered, it becomes a clear case of identity theft followed by worse consequences such as transfer of cash from a victims account, official documents being obtained, or goods being purchased using stolen credentials. Malicious users are also interested in other types of passwords, such as those for social networks, e-mail accounts and other services [Kaspersky, 2014]. In malware-based phishing, malicious software is spread through e-mails or by exploiting security loopholes and installed on the user\u2019s machine. The malware may then capture user inputs, and confidential information may be sent to the \u2018phisher\u2019 [Bergholz et al, 2010]. The phishers\u2019 top targets in 2012 were social networks, financial institutions, non-profit organizations and search engines [IBM, 2014] [Kaspersky, 2014].\nPhishing attacks use e-mail as their main carrier in order to allure unmindful victims. Phishing can also occur on a fake web site that is a perfect replica of the official site, such as the log-in page for a banking web site, to harvest e-mail addresses and log-on credentials of their victims. The companies spoofed most\noften were found to be Barclays, Bank of America, PayPal, eBay etc [Ludl et al, 2007]. Phishing attacks and identity theft-based scams are becoming more sophisticated in their exploitation of social engineering techniques. While spamming affects bandwidth; social engineering attacks like phishing directly affect their victims. In recent years \u2018pharming \u2019 has evolved to be a major concern to e-commerce and banks sites. In \u2018Pharming \u2019 the attacker redirects unsuspecting users to fake sites or proxy servers with seeded scripts [Abu-nimeh et al, 2007] [Kaspersky, 2014]. The Internet Security Threat Report [Symantec, 2014] states that in 2013 the rate of phishing had increased, from 1 in 414 for 2012 to 1 in 392 in 2013. Much of these phishing attempts involve the creation of fake login pages for popular social networks sites. Besides spoofing login pages of legitimate sites, phishers also began launching baits relevant to current events for flavouring the phishing pages.\nSeveral browser extensions (e.g. SafeCache and SafeHistory for Mozilla) and plug-ins (e.g. SpoofGuard) have been proposed [Chou et al, 2004], [Stepp, 2005], [Nattakant, 2009] and [Sta, 2014]. [Chandrasekaran et al, 2006] have pointed out several weaknesses of existing browser-based solutions and proposed a novel Support Vector Machine (SVM) - based technique for e-mail spam filtering based on the inherent structural properties in phishing e-mails. [Abu-nimeh et al, 2007] evaluated the predictive accuracy of six popular machine learning-based classifiers on phishing data sets. Phishing countermeasures such as secure e-mail authentication, password hashing, etc. involves high administrative overhead, hence content-based filtering can be used to detect phishing attacks and improve existing solutions. While we agree client-side solutions for phishing have been developed over the years even by huge software companies, server-side solutions are the focus of research [Abu-nimeh et al, 2007], [Fette et al, 2007] and [Basnet et al, 2008].\nBergholz et al [2010] have identified a number of highly informative features about phishing attempts and also proposed a server-side statistical phishing filter. The success of phishing is largely determined by the low levels of user-awareness regarding how the fraudsters and spoof sites operate. Increasing user awareness will help them to learn to spot the telltale signs of social engineering tricks, which includes, undue pressure, a false sense of urgency, bogus official letters, toogood-to-be-true offers, quid-pro-quo offers, etc. Meanwhile spam filters remain the first line of defense against phishing. According to Anti-Phishing Working Group [Anti-Phishing Working Group (APWG), 2014] new brands continue to be targeted by phishers and to battle these\nphishing attacks, presently the world needs more phishing databases."}, {"heading": "3 Corpus Preprocessing", "text": "Not all information present in an e-mail is necessary or useful. Eliminating the less informative and noisy terms lowers the feature space dimensionality and enhances classification performance in most cases [Guzella and Caminhas, 2009], [Diao et al, 2003] and [Shi et al, 2012]. Corpus preprocessing is a process that involves transforming the mail corpus into a uniform format that is more comprehensible to the machine learning algorithms [Zhang et al, 2004], [Katakis et al, 2007]. Due to the adversarial nature of spam, spam filters need to constantly adapt to changing spam tactics, particularly in feature extraction and feature selection aspects. No matter which learning strategy is chosen for the training and testing of content-based filters, it is extremely crucial to handcraft a private corpus or use a corpus that is publicly available. In any case, e-mails need to undergo preprocessing as a preparation for feature extraction. Furthermore, a corpus may have an immense number of features, it is very important to choose features judiciously so as to prevent the classifiers from over-fitting [Drucker et al, 1999]. The effectiveness and success of content-based spam filters depends on - feature engineering i.e. defining and creating those features more likely to make the classifier perform better. The primary steps involved in extraction of features from an e-mail are -\n\u2013 Lexical Analysis (Tokenization): The string of text representing a message is tokenized in order to identify the candidate words to be adopted as\nrelevant spam or ham terms. Headers, attachments, and HTML tags are stripped, leaving behind just the e-mail body and subject line text. IP addresses\nand domain names can also be considered as tokens. \u2013 Stop-word Removal : Stop-word removal involves\nremoving frequently used non-informative words, e.g. \u2018a\u2019, \u2018an\u2019, \u2018the\u2019, and \u2018is\u2019, etc. Obscure texts or symbols may also be removed in subsequent steps. Stopword removal makes the selection of candidate terms more efficient and reduces the feature space consid-\nerably. \u2013 Stemming : Word-stemming is a term used to de-\nscribe a process of converting words to their morphological base forms, mainly eliminating plurals, tenses, gerund forms, prefixes and suffixes. Stemming is closely related to lemmatization which while reducing a word considers the part of speech and the context of the word. The primary advantages of\nemploying word stemming and lemmatization are feature space dimension reduction and classifier accuracy. \u2013 Representation : Involves the conversion of an email message into a specific or structured format as needed by the machine learning algorithm being employed.\n[Androutsopoulos et al, 2000a] studied the effect of corpus size, lemmatization, and stop-lists while in [Androutsopoulos et al, 2000c], they studied the effect of word stemming and stop-word removal on the performancce of classifiers. Their results show that often they do not contribute to much improvement over the filters without them. [Chih-Chin Lai and Tsai, 2004] found that stemming did not introduce any significant improvement in the filter\u2019s performance, though it did reduce the feature set size. On the contrary, employing stopping produced better performance.\n3.1 Extracting Features\nThe easiest feature extraction method is the bag of words (BOW) model (or vector-space model), in which words occurring in the e-mail are treated as features. Given a set of terms T = {t1, t2, t3...tn}, the bag of words model represents a document d as an N-dimensional feature vector x = {x1, x2, x3...xn} where xi is a function of the occurrence of ti in d. It is possible to use all the features for classification. However a feature selection mechanism may be applied to select the best N features by some measure and thus reduce dimensionality. Another simple text representation is the bag of character n-grams. [Kanaris et al, 2006] investigated on character n-grams and words in spam filtering to demonstrate the advantage of n-grams over word-tokens. Sparse Binary Polynomial Hashing (SBPH) [Yerazunis, 2003] is another feature generator from e-mails. However, its many features made it computationally heavy and of limited use. Siefkes et al [2004] proposed an effective feature combination technique known as the Orthogonal Sparse Bigrams (OSB) to extract more compact features. Experiments showed that OSB slightly performed better than SBPH with regard to error rate. Recently, [Zhu and Tan, 2011] proposed a feature extraction approach based on local concentration (LC) which efficiently extracted position-correlated information from e-mail messages. For each style of e-mail analysis, a spam filter developer must decide on a way for performing feature extraction.\n3.2 Feature Selection\nFeature selection is a key issue and has become the subject of much research. It has a three-fold objective: i) enhancing the prediction accuracy of the classifiers, ii) building faster and economical classifiers, and iii) obtaining a better understanding of the elementary process involved in generation of data [Guyon, 2003]. Dimensionality reduction and feature subset selection are two preferred techniques for lowering the feature set dimension. While feature subset selection involves the extraction of a subset of the original attributes, dimensionality reduction involves linear combinations of the original feature set [Gansterer and Ecker, 2008]. [Cormack, 2008] suggests stop-word removal as a trivial example of feature selection, and stemming as a simple example of dimensionality reduction. Information Gain (IG) is one of the simplest and most successful techniques for feature selection. As discussed earlier, natural language processing provides different feature selection ways, the simplest being the \u2018bag of words\u2019 model coupled with \u2018stemming \u2019 and \u2018stopping \u2019. [Zhang et al, 2004] investigated the impact of three popular feature selection techniques - Document Frequency (DF), Information Gain (IG) and \u03c72 (CHI) test. A novel feature selection method named Comprehensively Measure Feature Selection (CMFS) was presented and evaluated with popular feature selection methods - Information Gain (IG), Chi statistic (CHI), Document Frequency (DF), Orthogonal Centroid Feature Selection (OCFS) and DIA association factor (DIA) to demonstrate that the new method notably outperformed them all [Yang et al, 2012]. Several well-known methods for feature selection are explained and compared with new feature selection methods in [Yang and Pedersen, 1997], [Yang et al, 2011] and [Gomez et al, 2012]. [Toolan and Carthy, 2010] address the issue of effective feature selection by exploring the utility of over 40 features (extracted from ham, spam and phishing pages) that have been used in recent literature.\n3.3 E-mail Header Analysis\nE-mail headers determine the recipient of a message and record the specific route the message takes as it passes through each mail server. Message headers are very reliable and powerful sources containing discriminative features for spam filtering besides the Subject and email content. In fact, experimental results confirm that the e-mail header provides powerful cues for machine learning algorithms to efficiently filter out spam e-mails [Chih-Chin Lai and Tsai, 2004], [Zhang et al, 2004], [Sheu, 2007] and [Wang and Chen, 2007]. This fact was\nFig. 3 The header of a typical e-mail.\nunknown in spam filtering research before and much research focused on the e-mail message body only.\nAccording to [Zhang et al, 2004], a spam filter trained\nusing header features alone can achieve better or comparable results than the body solution. Statistical analysis by [Wang and Chen, 2007] showed that 92.5% of 10,024 junk e-mails were filtered out using the header features - message-ID, mail user agent (MUA), sender address etc. [Hu et al, 2010] and [Al-jarrah et al, 2012] note performance evaluation of several header-based spam classifiers and evaluated their performance in filtering e-mail spam. [Sheu, 2007] mined association rules out of other basic attributes in the e-mail header sessions and proposed an efficient decision tree-based spam filtering method. E-mail Header analysis has evolved to be a very promising research area. As a filter technique it has the capability to provide low false positive rates either by itself or when used with other anti-spamming techniques.\n3.4 Filters Based on Non-content Features\nMuch research has been accomplished in e-mail classification proposing general and specific solutions to the spam problem. However, most of these approaches explored only the content-based features [Drucker et al, 1999], [Androutsopoulos et al, 2000b], [Androutsopoulos et al, 2000a] and [Sakkis et al, 2001]. Filtering based solely on e-mail content has been argued to be a fundamentally flawed idea. Although such content-based methods have been effective, the perfectly malleable content of an e-mail and spammers reactivity to filtering methods gives rise to many challenges [mentioned in Section 2.1 and 2.2]. Different features such as temporal information, message length, MIME content type, proportion of symbols in e-mail body, presence of attachments, number of URLs in the e-mail, etc., are considered non-content features, and have led to promising results in differentiating incoming e-mails. Non-content features may include header features such as \u2018originator field \u2019, \u2018destination field \u2019, \u2018X-mailer field \u2019 etc. but they are not limited to header features. [Hu et al, 2010], [Hershkop and Stolfo, 2005], and [Wang et al, 2005] describe exploiting non-content features for profiling emails and developing efficient and scalable non-content based spam-filtering frameworks. Table 1 illustrates the popular approaches for feature extraction and feature selection adopted by researchers and their key inferences."}, {"heading": "3.4.1 Analyzing Temporal Features", "text": "As a novel solution to the spam problem, [Kiritchenko et al, 2004] employed temporal features of an e-mail to the conventional content-based approaches to create a richer information space to work with. A simple example of a temporal feature, obtainable from the message header timestamps, is the day of the week or the time of the day the e-mail was received. They represented temporal information in the form of temporal patterns, presented an algorithm for mining temporal patterns in an e-mail sequence and described approaches to integrate temporal patterns into content-based e-mail classification. [Hao et al, 2009] explored various spatio-temporal features of e-mail senders and investigated ways to deduce the reputation of an e-mail sender based only on such features. To improve the state of affairs they presented SNARE - a sender reputation system with robust classification accuracy. Investigations reveal that the use of temporal features to improve spam filter ac-\ncuracy is perhaps one of the most uncharted territories in spam filtering research."}, {"heading": "3.4.2 SMTP Path Analysis", "text": "SMTP path analysis operates by learning about the \u2018spamminess\u2019 or goodness of IP addresses by examining the history of e-mail delivered through that IP address. SMTP traffic analysis when used in combination with traditional filters does improve the accuracy of the filters. [Leiba et al, 2005] established that examining IP addresses was useful and presented a new algorithm for learning the reputation of e-mail domains and IP addresses by examining the SMTP path used to transmit e-mails. Beverly and Sollins [Beverly and Sollins, 2008] examined a variety of SMTP flow characteristics and developed a spam classifier \u2018SpamFlow \u2019 based on the statistical discriminatory power of these flows."}, {"heading": "3.4.3 Behavior Analysis", "text": "The behavioral pattern of an e-mail is \u2018what the sender does in composing or distributing e-mails\u2019. Legitimate e-mails have mostly normal and meaningful behavioral patterns, while spam e-mails have abnormal or even conflicting behavior patterns. [Yeh et al, 2005] considered behavior patterns such as data spoofing, time anomaly, relay anomaly, etc; and described them by meta-heuristics and employed them as features for the classification task. To recognize spam and viruses as irregular behviour in the e-mail, [Hershkop, 2006] proposed some behavior models, some of them are recipient frequency, group communication, user\u2019s past activity histogram, etc. [Ramachandran and Feamster, 2006] studied the spammer\u2019s behaviour at the network level and found that most spam was received from a small number of regions of IP address space. They suggested that filtering based on network-level characteristics would be much more effective to combat spam as network-level properties are less malleable than email content. [Li et al, 2007] performed an experimental study of the community behavior of spammers and came up with various clustering structures among their population. Based on those structures they proposed some group-based anti-spam strategies exploiting group membership of perceived spam sources. Further work on investigating clustering structures of spammers based on features as - Content length, Time of arrival, Frequency of e-mail, etc. was carried out by [Hao et al, 2009]."}, {"heading": "3.4.4 Analyzing Users Social Network", "text": "Social networks are very helpful for determining the trustworthiness of outsiders and hence recent spam filtering approaches have started to exploit social network interactions to distinguish between spam and ham. For their social network based classification scheme, [Boykin and Roychowdhury, 2005] analyzed the e-mail header fields to construct a social network graph of the user, and then classified e-mail messages based on \u2018clustering coefficient\u2019 of the graph subcomponent. The clustering coefficient is very low for spammers, while it is high for a network of friends. The algorithm was found to be immune to false positives and could correctly classify 50% of all e-mails correctly. [Chirita et al, 2009] and [Golbeck and Hendler, 2004] further developed the idea of creating a social network graph for inferring reputation ratings of individuals or e-mail addresses.\nTable 2, summarizes and categorizes popular machine learning attempts by authors according to perspective (Algorithm, Architecture, Methods, and Trends).\nArticles classified under \u2018Algorithm\u2019 reflect research that essentially focused on classification algorithms and their implementations and evaluations. Articles classified under \u2018Architecture\u2019 concentrated on work mainly involved with the development of spam filtering infrastructures. Articles classified under \u2018Methods\u2019 refers to study of the existing filtering methods while \u2018Trends\u2019 speaks of discourses concentrating on emerging methods and the adaptation of spam filtering methods over time. Limitations listed in the last column, corresponding to each article are as acknowledged by the authors themselves."}, {"heading": "4 Methods for Mitigating E-mail Spam", "text": "Although there are \u2018social \u2019 methods like legal measures and personal measures (e.g. never respond to spam, never forward chain-letters) to fight spam, they have had a narrow effect on spam so far is seen by the number of spam messages received daily by users. Technical measures seem to be the most effective in countering spam. Prior to machine learning techniques, many different technical measures were employed for spam filtering, like - rule-based spam filtering, white lists, black lists, challenge-response (C/R) systems, spam filtering, honey pots, OCR filters, and many others, each with its own merits and drawbacks. Black-lists, white-lists, challenge-response (C/R) systems, etc. are origin-based techniques used by reputation-based filters. We discuss briefly some of these popular approaches:\n4.1 Heuristic Filters\nInitial spam filters followed the \u2018knowledge engineering \u2019 approach and were based on coded rules or heuristics Sanz [2008]. A content-based heuristic filter analyzes the contents of a message M and classifies it to spam or ham based on the occurrence of \u2018spammy\u2019 words like \u2018viagra\u2019 or \u2018lottery \u2019 in it. They were designed based on the knowledge of regularities or patterns observed in messages Guzella and Caminhas [2009]. Cohen\u2019s Cohen [1996] was one of the earliest attempts to use learning machines that classify e-mail. Based on the RIPPER rule-learning algorithm he employed a new method for learning from corpus sets of \u201dkeyword-spotting rules\u201d to classify personal e-mails into pre-defined categories. He showed that the RIPPER algorithm can achieve a comparable performance to a traditional information retrieval (IR) method based on TF-IDF weighting.\nThe drawback of heuristic filters is that maintaining an effective set of rules is a time consuming affair, moreover the rules have to be constantly updated to keep up with the newest trends in spam. Spammers\nbegan employing content \u201dobfuscation\u201d (or obscuring), by disguising certain terms that are very common in Spam messages (e.g., by writing \u201dv!@gra\u201d instead of \u201dviagra\u201d, or \u201dF*r*e*e\u201d instead of \u201dFree\u201d) on an attempt to prevent the correct identification of these terms by Spam filters. Moreover writing regular expression-based rules are hard and error prone. In spite of these limitations, Symantec Brightmail Sanz [2008], a rule-based filter solution was a success from 2004 till the end of the last decade. It could even track down IP addresses that sent mostly junk mail and performed competitively to SpamBayes - a popular Nave Bayes-based anti-spam solution.\n4.2 Blacklisting\nA blacklist of E-mail addresses or IP addresses of the server from which spam is found to originate is created\nand maintained either at the user or server level. If a user receives an e-mail from any of these addresses, the message is automatically blocked at the SMTP connection phase. This method requires only a simple lookup in the blacklist every time; hence the computational cost is low. Black-lists include Real-time Blackhole ListS (RBL) and Domain Name System Black-lists. Common black-list databases include proxies or open relays, networks or individual addresses guilty of sending spam. Google blacklists and SpamHaus 7 are examples of blacklists.\nBlacklist techniques though effective, suffer from many\ndrawbacks. A legitimate address may be blacklisted by the filter erroneously or arbitrarily. Innocent users can get victimized and entire domains (e.g. Hotmail) can get blocked when e-mail IDs or IP addresses are used by spammers without the owners consent. As spam-\n7 http://www.spamhaus.org/\nmers resort to use of new E-mail IDs or IP addresses to bypass blacklists, frequent updates are required to keep the blacklists up-to-date. Lately, use of botnets by spammers creates an extremely huge number of IP addresses to be blacklisted. While the time and effort for updating can be overwhelming, any lag in its timeliness leads to vulnerabilities.\n4.3 Whitelisting\nWhitelisting is the reverse of blacklisting. An e-mail whitelist is a list of pre-approved or trusted contacts, domains, or IP addresses that are able to communicate to a mail user. All e-mails from fresh e-mail addresses are blocked by this method. This restrictive method may introduce an extremely high false positive rate instead of reducing it. Such a method may be good for instant messaging environments but is not a good choice as it prohibits establishing new contacts through e-mail. Moreover if spammers somehow got their hands on the whitelist, it would be easy to evade the filter using spoofed addresses, or using well-known whitelisted mailing lists. This method requires a lot of maintenance but provides moderate filtering rate. It can be employed together with other anti-spam techniques [Michelakis et al, 2004].\n4.4 Greylisting\nWhen an SMTP client connects requesting for a session for the first time, the recipient server may check if the IP address of the sender or its e-mail address is blocked or pre-approved. It may happen they are neither in the blacklist nor in the whitelist. In that case the message is rejected temporarily and the recipient MTA responds with an SMTP temporary error message. The recipient MTA then records the identity of recent attempts and its databases are updated with the new clients information; as required by SMTP RFC [P. Resnick, 2001], the client retries at a later point of time. The next attempt may be accepted for legitimate senders. This method assumes that spammers do not waste time in queuing or retrying their messages and those who do so will probably end up being blacklisted in public blacklists (DNSBLS) during the two attempts. While this technique seems very effective, evading it can also be very simple. The spammers can use zombies to do the work of retrying for the spammer.\n4.5 Challenge Response (CR) systems\nWhile white-lists place the burden of determining the authenticity of contacts on the receiver, Challenge-Response (CR) systems transfer the burden of authentication back to the sender. After sending an e-mail to the receiver, the sender receives a challenge from the receiving Mail Transfer Agent (MTA). The challenge may range from a simple question to a CAPTCHA (\u201dCompletely Automated Public Turing test to tell Computers and Humans Apart\u201d). The sender is obliged to reply correctly in his response; else his message will be deleted or put into spam folder. While this method is effective in catching spam from automated systems or botnets, it introduces an undesirable delay in the delivery process. CR systems are controversial solutions and are often criticized due to this inconvenience caused by the overhead in communication. Besides legitimate e-mails from automated mailing lists may also be blocked since these will fail the challenge. In addition, CR systems are also believed to be the cause behind the backscatter e-mail phenomenon. [Isacenkova and Balzarotti, 2011] developed a real world deployment of a CR based anti-spam system and evaluated its effectiveness and impact on end-users.\n4.6 Collaborative Spam filtering\nSpammers typically send spam to a vast number of recipients. It is likely that the same spam has been received by somebody else. Collaborative spam filtering is a distributed approach to filtering spam where a whole community works together with a shared knowledge about spam [Me\u0301ndez et al, 2006], [Sophos, 2013], and [Garriss et al, 2006]. The collaborative approach does not consider the content of e-mails; rather it requires the accumulation of any identifying information concerning spam messages, like - the subject, sender, the result of computing a mathematical function over the email body, etc. Spam messages have digital footprints which are shared with the community by early receivers. The community users then use these spam fingerprints for identifying spam e-mails. Vipuls Razor 8, Pyzor 9, DCC (Distributed Checksum Clearinghouse) 10 are examples of collaborative spam filters on the web. Though it is certain that collaborative techniques show great promise, however such schemes suffer from scalability issues and some underlying implicit assumptions.\n8 http://razor.sourceforge.net/ 9 https://github.com/SpamExperts/pyzor\n10 http://www.rhyolite.com/dcc/\n4.7 Honey pots\nA honeypot is a decoy server or system set up solely to collect spam or gather information about intruders Andreolini et al [2005]. It is also used to identify email address harvesters with the help of specially generated e-mail addresses and to detect e-mail relays. It is a finger-print based technique for content based spam filtering. Honeypots do help security professionals and researchers learn the techniques used by attackers to compromise computer systems. Bringer et al [2012] present a proper survey on the evolution in honeypots as well as advances and the current trends in honeypot research to cope with recently emerging security threats.\n4.8 Signature Schemes\nMost current antivirus products work on the basis of signatures. The hashes of previously identified spam messages are kept in a database at the Mail Transfer Agent (MTA) level. All incoming e-mails are checked against these hashes to distinguish between spam and legitimate e-mails. Because signatures match exact patterns, this scheme can detect known spams with a very high level of confidence. However, a strong shortcoming is that unknown or newly generated spam will be able to get past this filter without being detected. Signature databases need to be updated hourly, daily or weekly. The database can swell as thousands of spams are generated every day. Spammers can introduce a random string into spam mails to generate different hashes.\nThis review article examined a number of major earlier surveys on spam filtering over the period (2004- 2015). Perusing the different spam techniques and the methods used by researchers to combat spam, taxonomy of spam filtering techniques is presented above (Table 3)."}, {"heading": "5 Machine Learning Approach to E-mail Spam filtering: The Algorithms", "text": "Spam filtering is a binary classification task, in which legitimate (good or ham) e-mails are treated as negative (-) instances, and spam as positive (+) instances [Song et al, 2009]. Machine Learning is a subfield of computer science that explores the design and development of computer systems that automatically improve their performance in a task based on experience. Automatic e-mail classification uses statistical approaches or machine learning techniques and aims at building a model or a classifier specifically for the task of filtering spam from a users mail stream. Some of the most\npopular Machine Learning techniques to counter spam filtering are Naive Bayes [M. Sahami, S. Dumais, D. Heckerman et al, 1998], [Androutsopoulos et al, 2000a], Support Vector Machines [] Woitaszek and Shaaban [2003], [Amayri and Bouguila, 2010]], Decision Trees [Yeh et al, 2005], [Toolan and Carthy, 2010], Neural Networks [Wu, 2009], [Soranamageswari and Meena, 2010], etc. The building of the model or classifier requires a set of pre-classified documents (training set or an initial corpus). The process of building the model is called training.\nMachine learning algorithms have achieved more success among all previous techniques (discussed in Section 4) employed in the task of spam filtering [FdezRiverola et al, 2007a], [Almeida et al, 2010]. In fact, the success stories of Gmail [Taylor et al, 2007], [The, 2010], can be ascribed to their timely transition and successful use of Machine Learning for filtering not just incoming spam but other abuses like Denial-of-Service (DoS), virus delivery, and other imaginative attacks [Taylor et al, 2007]. Today the most successful spam filters are based upon the statistical foundations of Machine Learning. In part it is because it is easier to train and build a classifier on e-mails that individual mail users receive, than to build and tune a set of filtering rules. Machine Learning based spam filters also retrain themselves while put in use and minimizes manual effort while delivering superior filtering accuracy. In this section we explore the underlying theory and aim to present a clear picture of popular Machine Learning algorithms employed in spam filtering for the benefit of readers unfamiliar with them. Table 3 provides a taxonomy of e-mail spam filtering techniques.\n5.1 Naive Bayes (NB)\nNaive Bayes classifiers are a technique that has remained popular over the years and are arguably the most well-known statistical spam classifier. It is called \u2018naive\u2019 because it ignores possible dependencies or correlations among inputs and reduces a multivariate problem to a group of uni-variate problems [M. Sahami, S. Dumais, D. Heckerman et al, 1998]. It employs a probabilistic approach to inference. It does not need any complicated iterative parameter estimation schemes, as in Discriminant analysis. It is easy to construct, easy to interpret, surprisingly effective and can be readily applied to huge data sets [Wu et al, 2007], making it extremely popular among users. Bayesian methods typically require prior knowledge of many probabilities e.g., according to Grahams [Graham, 2002a] corpus, the word \u2018sex \u2019 indicates a 97% probability that the containing e-mail is spam. Similarly, words like \u2018viagra\u2019\nand \u2018refinance\u2019 will have high spam probability values, while names of friends and siblings will have low spam probability values. These apriori probabilities are combined with the observed data set - which is a sizeable collection of e-mails that has already been categorized as \u2018spam\u2019 and \u2018ham\u2019, to determine the final probability that an e-mail message is either spam or legitimate. Even with the flawed assumption of presumed decorrelation, Bayesian classifiers work extremely well and are surprisingly effective [M. Sahami, S. Dumais, D. Heckerman et al, 1998], [Pantel and Lin, 1998], [Graham, 2003] and [Yerazunis, 2004].\nNave Bayes method has become extremely popular due to the high levels of accuracy that it can potentially provide and it often serves as a baseline classifier for comparison with other filtering approaches. Bayesian filters are the most employed filters for classifying spam nowadays Guzella and Caminhas [2009], Metsis et al [2006] and can operate either on the network mail server level or on client e-mail programs.\nOne limitation of standard Bayesian filters is that it ignores the correlation among inputs or events; i.e. such filters do not consider that the words \u2018special \u2019 and \u2018offers\u2019 are more likely to appear together in spam e-mail than in legitimate e-mail Carpinter and Hunt [2006]. But text analysis confirms that words have a very significant correlation and are not chosen randomly. In spite of this over simplistic assumption, Bayesian classifiers have been found to work remarkably well Androutsopoulos et al [2006] and Almeida et al [2010]. However to address this limitation, Yerazunis [2003] and Siefkes et al [2004] introduced sparse binary polynomial hashing (SBPH) and orthogonal sparse bigrams (OSB).\nSBPH is a generalization of Bayesian filtering that can match mutating phrases as well as individual words or tokens, and uses the Bayesian Chain Rule (BCR) to combine the individual feature conditional probabilities into an overall probability. SBPH had a more expressive feature space and delivered \u00bf99.9% accuracy on realtime e-mail without white-lists or blacklists from as little as 500K of pre-categorized text. However, SBPH was computationally expensive; OSB retains the expressivity of SBPH but avoids most of the cost. A filter based on OSB, along with the non-probabilistic Winnow algorithm as a replacement for the Bayesian Chain Rule outperformed SBPH by 0.04% error rate; however, OSB used just 6, 00,000 features, while SBPH used 1,600,000 features to reach best results. Yerazunis [2004] argued that most Bayesian filters seem to reach a plateau of accuracy at 99.9 percent so enhancements were necessary. They set up a SBPH/BCR classifier and compared three different training methods: TEFT Train Every Thing, TOE Train Only Errors, TUNE Train Until No Errors, and found TOE training to be acceptable in performance and accuracy. Different extensions to Bayesian filtering as Token Grab Bag, Token Sequence Sensitive, Sparse Binary Polynomial Hashing with Bayesian Chain Rule (SBPH/BCR), Peaking Sparse Binary Polynomial Hashing, Markovian matching, were also tested. Markovian matching produced the best performance of all the filters.\nAccording to Ludlow [2002], the vast majority of the tens of millions of spam e-mails might be the handiwork of only 150 spammers around the world; Again, authors have \u2018textual fingerprints\u2019, at least for texts produced by writers who are not consciously changing their\nstyle of writing across texts, as argued by Baayen et al [2002]. Therefore authorship identification techniques can be used to identify the \u2018textual fingerprints\u2019 of this small group and eliminate a significant proportion of spam. Brien and Vogel [2003] were the first to apply authorship identification techniques as \u2018Chi by degrees of freedom\u2019 method to the area of e-mail spam filtering. The authors examined the Nave Bayesian method in relation to this authorship identification technique. They found that the Bayesian method was very effective when characters were used as tokens, rather than when words were used as tokens. The \u2018Chi by degrees of freedom\u2019 method when used with characters as tokens had an error rate lesser than the Bayes method. They concluded that tokens chosen affected the precision and recall parameters. Taking a leaf out of text classification, Song et al [2009] proposed a correlation-based document term weighting method to address the problem of low-FPR classification in the context of Nave Bayes.\n[Chih-Chin Lai and Tsai, 2004] conducted systematized experiments on e-mail categorization involving Naive Bayes (NB), Term Frequency - Inverse Document Frequency (TF-IDF), k-Nearest Neighbor (k-NN), and Support Vector Machines (SVMs). NB, TF-IDF and SVM achieved satisfactory results while k-NN had the worst performance out of all. It was seen that stemming did not affect performance, however employing stopping procedure yielded better performance. They concluded that combining the different techniques seemed a very promising prospect. [Lai, 2007] has made a similar comparative study on three commonly used algorithms in Machine Learning NB, k-NN and SVMs. From experimental results, NB and SVM were found to perform better than k-NN. [Youn and Mcleod, 2006] and [Yu and Xu, 2008] noted similar experiments with four machine learning algorithm each. [Seewald, 2007] investigated the simple Naive Bayes learner represented by SpamBayes, and two variants of Naive Bayes learning, SA-Train and CRM-114. SA-Train incorporated background knowledge made up of rules while CRM-114 considered multi-word phrases and their probability estimates. It was seen that all three systems performed equally well and the addition of background knowledge to SA-Train and the extended description language in the case of CRM-114 considering multi-word phrases failed to improve Bayesian learning significantly. SpamBayes offered the most stable performance and deteriorated least over time. [Almeida et al, 2010] reported that probabilistic approaches like Bayesian classification suffer from the \u2018curse of dimensionality \u2019. They verified how dimensionality reduction influences the accuracy of Nave Bayesian spam filters.\n5.2 Support Vector Machines (SVMs)\nSupport vector machines (SVMs) are ranked as one of the best \u2018off-the-shelf \u2019 supervised learning algorithm. SVMs have become one of the most sought-after classifiers in the Machine Learning community because they provide superior generalization performance, require less examples for training, and can tackle high-dimensional data with the help of kernels [Rios and Zha, 2004] [Wu et al, 2007]. Support vector machines (SVMs) result by mapping the feature vectors (training data) into a linear or non-linear feature space through a kernel function. The feature space generates an optimal separating hyper-plane (OSH) which splits the positive samples and the negative samples with maximum margin. The hyper-plane is then employed as a non-linear decision boundary for use in real-world data.\n[Drucker et al, 1999] used SVMs for content-based classification and equated their performance with other classifiers - Ripper, Rocchio, and boosting of C4.5 decision trees. It was found that boosting trees and SVMs attained good performance with regard to speed and accuracy during testing. SVMs with binary features produced best results, required lesser training, and their performance did not degrade when too many features were used. Woitaszek and Shaaban [Woitaszek and Shaaban, 2003] utilized an SVM-based filter for Microsoft Outlook to identify commercial e-mail. Classification models for spam and ham messages were built by the SVM using personal and impersonal dictionaries. Both yielded identical results attaining a best accuracy of 96.69%. [Rios and Zha, 2004] experimented with SVMs and Random Forests (RFs) and compared them against Naive Bayes models. They concluded that SVM and RF classifiers were equivalent, and that the RF classifier had greater robustness at low false positive (FP) rates; they both outperformed Naive Bayes models at low FP rates. [Tseng and Chen, 2009] proposed a complete spam detection system MailNET, which is an incremental SVM model on dynamic e-mail social networks. Although SVMs provide high accuracy for spam filtering, they have been generally associated with high computational cost and some expensive false positive errors, hence, few solutions were offered, e.g. Online SVMs [Sculley and Wachman, 2007], Ensemble of SVMs [Blanco et al, 2007], etc. A detailed study of various distance-based kernels and spam filtering behaviors employing SVM is found in [Amayri and Bouguila, 2010].\n5.3 Clustering Techniques\nClustering is the task of grouping a set of patterns into similar groups. Clustering techniques have been widely\nstudied and used in a variety of application domains. Spam filtering datasets often have true labels available and clustering algorithms, being unsupervised learning tools are not always closely related with true labelings. However given suitable representations, most clustering algorithms can partion e-mail spam datasets into ham and spam clusters. This was demonstrated by [Whissell and Clarke, 2011] in a novel investigation of e-mail spam clustering. The results were surprisingly significant as their clustering based approach bettered those of previously published state-of-the-art semi-supervised approaches, hence proving that clustering can be a powerful tool for e-mail spam filtering.\nPrior to this, Sasaki and Shinnou [Sasaki and Shinnou, 2005] had proposed spam detection technique making use of the text clustering through a vector space model. [Basavaraju and Prabhakar, 2010] presented an effective clustering algorithm integrating K-means and BIRCH algorithm features. K-means algorithm worked well for small scale data sets. BIRCH with K-Nearest Neighbour Classifier (K-NNC) was found to be the ideal combination as it performed better with large data sets. [Debarr and Wechsler, 2009] relied on using term frequency and inverse document frequency representation for e-mails and employed the Partitioning Around Medoids (PAM) clustering algorithm to cluster a uniform sample of 25% of messages in the training pool. Clustering combined with Random Forests for classification and active learning for refinement produced the best Area Under Curve (AUC) of 95.2%. These works conclude that employing the ham/spam clusters is a effective method for spam detection and because a ham/spam split is a natural clustering for an e-mail spam dataset, clustering techniques should be investigated further as a tool for more robust content based spam filters.\n5.4 Ensemble Classifiers\nEnsemble learning is a novel technique where a set of individual classifiers are trained and brought together to enhance the classification accuracy of the overall system on the same problem (spam detection). An ensemble of classifiers is very effective for classification tasks and offers good generalization. Spam filters have to deal with a diversity of spams, so it needs to continually evolve in order to detect new types of spam (future spam), and at the same time not allow \u2018classical\u2019 spam to evade the filter. Therefore, [Guerra et al, 2010] had suggested that combining old and new filters (e.g. using ensemble classifiers) may be an interesting strategy to deal with the diversity of spams. The most popular ensemble classifiers are bagging and boosting.\nBagging (or bootstrap aggregating) is an ensemble meta-learning algorithm that is usually applied to decision tree methods, e.g. Random Forest algorithm is an ensemble technique for decision trees that is known to achieve very high classification accuracy. [Biggio et al, 2011] employed bagging ensembles to exploit against poisoning attacks on spam filters. Random forests have also been used in the spam detection model described in [Debarr and Wechsler, 2009] and [Lee et al, 2010b]. Boosting [Biggio et al, 2011] involves algorithms that build a single strong learner from a set of weak learners. AdaBoost is the most common implementation of Boosting. Boosting for filtering of spam messages was first reported by [Carreras and Marquez, 2001]. [Androutsopoulos et al, 2006] compared four most promising learning algorithms from earlier work - LogitBoost, Nave Bayes, Flexible Bayes and linear SVM. The authors studied the role of attributes characterizing ngrams frequencies and explored the effect of attribute size and training set in a cost-sensitive framework context. Using evaluation measures as in [Androutsopoulos et al, 2000b], and the PU1 corpus in experiments, [Carreras and Marquez, 2001] proved the definite effect of boosting in decision-tree filters. Methods based on boosting outperformed Naive Bayes and Decision Trees algorithms when tested on the PU1 corpus. [Sakkis et al, 2001] experimented with combining a memory-based classifier with a Naive Bayes filter with another memorybased classifier as president in a stacking framework. They achieved impressive precision and recall and concluded that stacking consistently raises the performance of the overall filter. He and Thiesson [He and Thiesson, 2007] proposed a new asymmetric boosting method - Boosting with Different Costs and applied it to spam filtering. [Neumayer, 2006], [Shi et al, 2012], and [Blanco et al, 2007] also discuss the application of an ensemble learning to spam filtering."}, {"heading": "6 Evaluation Measures and Benchmarks", "text": "Ideally spam filters should be evaluated on large, publicly available spam and ham databases. Sometimes Accuracy (Acc), the ratio of messages correctly classifies is used as an integrated measure for performance. If NL and and NS signify the number of legitimate messages and spam messages to be classified, then we define Accuracy (Acc) and Error (Err) of the spam filter as -\nAcc = |L\u2192L|+|S\u2192S|NL+NS and Err = 1 - Acc = |L\u2192S|+|S\u2192L| NL+NS\nAccuracy and Error consider both False Positive |L \u2192 S| and False Negative |S \u2192 L| events to carry equal cost. However, spam filtering involves asymmetric\nerror costs. Failing to identify a ham, i.e. misclassifying a ham as spam (a False Positive event) is generally a costlier mistake than missing a spam (a False Negative event). For e.g. A business letter from the boss or a personal message from a spouse quarantined (and delayed) or deleted can lead to serious consequences, while seeing a spam in our inbox may cause just a slight irritation. True Positive event |L \u2192 L| is when a ham e-mail is correctly classified as ham. True Negative event |S \u2192 S| is when a spam e-mail is correctly classified as spam. With this in mind, the False Positive Rate (FPR) - the proportion of legitimate e-mails identified as spam is represented as -\nFPR = #ofFalsePositives#ofFalsePositives+#ofTrueNegatives\nAgain, failing to identify spam e.g. e-mails containing viruses, worms, or phishing baits as payload can incur significant risks to the user. False Negative Rate (FNR) i.e. the proportion of spam messages that were classified as legitimate, is another suitable measure.\nFNR = #ofFalseNegatives#ofTruePositives+#ofFalseNegatives\nSuperior spam classifiers have lower FPR and FNR. The two-dimensional quantity (FNR, FPR) denotes the effectiveness of hard classifiers while the effectiveness of soft classifiers may be denoted by a set of such pairs defining a curve - an ROC (Receiver Operating Characteristics) curve. ROC analysis are an excellent performance metric in spam filtering. A spam filter whose ROC curve strictly lies above that of another is the better filter in all deployment scenarios. [Cormack, 2008].\nTwo measures borrowed from Information Retrieval \u2018Recall \u2019 and \u2018Precision\u2019 are often used for capturing the effectiveness and quality of spam filters respectively [Androutsopoulos et al, 2000a]. If |S \u2192 L| signifies the number of spam messages classified as legitimate, and |S \u2192 S| signifies the number of legtimate messages classified as spam respectively, and likewise for |L \u2192 L| and |L \u2192 S| then Spam Recall (Rs) and Spam Precision (Ps) are defined by the equations:\nRs = |S\u2192S| |S\u2192S|+|S\u2192L| and Ps = |S\u2192S| |S\u2192S|+|L\u2192S|\nRecall (Rs) is a measure of the number of spam messages successfully blocked by the filter (i.e. its effectiveness), while Precision (Ps) measures the number of the messages classified as spam by the filter that were indeed spam (i.e. its quality or safety) [Androutsopoulos et al, 2006] [Sakkis et al, 2001]. Comparing spam filters based on (Rs) and (Ps) is tricky despite with each configuration giving (Rs) and (Ps) values.\nFalse positives are considerably more expensive (\u03bb times) when compared with false negatives [Androutsopoulos et al, 2000a] [Androutsopoulos et al, 2006]. Here, \u03bb is a parameter that specifies how \u2018dangerous\u2019 or \u2018costly\u2019 it is to misclassify legitimate e-mail as spam and reflects the extra effort it requires from the user to recover from failures of the filter. For many users false positives are unacceptable. [Androutsopoulos et al, 2006] suggested this cost sensitivity be taken into account by treating each legitimate message to be equal to \u03bb messages. Cost-sensitive measures Weighted Accuracy (WAcc), Weighted Error Rate (WErr) and Total Cost Ratio (TCR) [Clark, 2008] are used as shown in the formula.\nWAcc = \u03bb|L\u2192L|+|S\u2192S|NL+NS and WErr = 1 - WAcc = \u03bb|L\u2192S|+|S\u2192L|\nNL+NS\nTCR = NS\u03bb|L\u2192S|+|S\u2192L|\nThe Total Cost Ratio is used to compare the effectiveness of a filter for a given \u03bb when compared with a baseline setting [Guzella and Caminhas, 2009]. It is an evidence of the improvement brought about by the filter. This cost-sensitive evaluation uses the \u03bb parameter to adjust the weight of a false positive. There are three values for \u03bb used commonly in spam literature, \u03bb = 1, 9, 999 [Androutsopoulos et al, 2000b], [Androutsopoulos et al, 2000a], [Androutsopoulos et al, 2006], [Sakkis et al, 2001] and [Clark, 2008]. These values represent the situations when a false positive equals a false negative, or a false positive is 9 times a costlier mistake than a false negative, or 999 times costlier. Greater TCR values indicate superior performance. F-measure or F-score is another combining measure that combines both Precision (Ps) and Recall (Rs) metrics in one equation. It can be interpreted as the weighted harmonic mean of both.\nF \u2212measure = 2.Precision.RecallPrecision+Recall\n6.1 Publicly Available Benchmark Datasets\nMost of the datasets publicly available are static datasets with very few concept drift datasets. Many authors construct their own image spam or phishing corpus. Table 4 below lists public corpora with associated information used in spam filtering experiments."}, {"heading": "7 Future Challenges and Conclusion", "text": "Spam filtering is an \u2018arms race\u2019 marked by an increase in the sophistication in spam construction techniques as well as spam filtering techniques [Goodman et al, 2007]. Characterization and measurement studies have been developed in content-based spam filtering [Pu and Webb, 2006], [Blanzieri and Bryl, 2008]. The evolution of the infrastructure used by spammers to disseminate spams over the network is seen in their migration from simple obfuscation techniques, to image spam and to compromised machines. The dynamic nature of spam and the reactivity of spammers make e-mail spam filtering an active research area. E-mail spam filtering will remain a persistent problem and some of the most interesting challenges in the future of e-mail spam filtering could be -\n7.1 Handling Concept Drift\nIn the actual world, concepts change over time in unanticipated ways and are therfore hard to predict. Changes in the statistical properties of context can lead to a change in the target variable or concept. Concept drift is distinguished in literature as \u2018sudden\u2019 and \u2018gradual\u2019 [Tsymbal et al, 2008]. For e.g., a student graduating from college might all of a sudden develop financial concerns, whereas, in a biomedical context, pathogen sensitivity may gradually evolve with the passage of time as bacterial pathogens develop immunity to antibiotics that used to be effective earlier. Hidden changes in context affects not just the target concept but also causes an alteration in the underlying data distributions [Delany et al, 2005], making the learning task increasingly complicated and requiring special approaches. Models built on old data become less accurate or inconsistent\nmaking the rebuilding of the model imperative (called virtual concept drift). Spam filtering is a dynamic problem that involves concept drift. While the understanding of an unwanted message may remain the same, the statistical properties of the spam e-mail changes over time since it is driven by spammers involved in a neverending arms race with spam filters. Another reason for concept drift could be the different products or scams driven by spam that tend to become popular. The dynamic nature of spam is one of its most testing aspects. An effective spam filter must be able to track target concept drift and swiftly adapt to it. Research on concept drift confirms lazy learning techniques to be the most effective models against concept drift [Tsymbal, 2004], [Tsymbal et al, 2008]. Most of the earlier evaluations did not try to deal with concept drift, or with realworld datasets that have some concept drift. Few authors tried to address concept drift in spam filtering using Case-Base Reasoning [Delany et al, 2005], InstanceBased Reasoning [Fdez-Riverola et al, 2007b], Ensemble Learning [Tsymbal et al, 2008], Language Model technique [Hayat et al, 2010]. A particular challenge in handling concept drift is in distinguishing between true concept drift and noise. Research in concept drift is a very active area in spam filtering.\n7.2 Eliminating False Positives\nSpam filtering is often viewed as a straight text categorization problem. But e-mail is not just text, it also has structure, hence in reality it turns out to be a more complicated problem than straightforward classification. One complication arises from the cost-sensitivity associated with the spam filtering problem. The cost of inadvertently restricting a ham message is more than that of a spam message evading the filter (see section 6). Such mislabeling of e-mail is completely unacceptable to users as it can lead to loss of important information or even more serious consequences. Moreover, in this case the user has to review the messages sorted out to the spam folder and it somehow defeats the whole purpose of spam filtering [Tretyakov, 2004]. Contentbased spam filtering systems, though widely adopted as a successful spam defense strategy, has unfortunately substituted the spam issue with a false positive one. Such systems achieve a high accuracy but there exists some false positive tradeoff. False positives are more severe and expensive than spam. Although significant attempts e.g. Reliable e-mail [Garriss et al, 2006] have been made, nevertheless, to make e-mail reliable, spam filters must reduce the incidences of false positives. Reduction of false positives is another domain in e-mail\nspam analysis where much work needs to be been done on leveraging existing algorithms.\n7.3 Emerging Spam Threats\nOne of the biggest spam problems today even as spam e-mail volumes associated with botnets are receding is the snowshoe spam. Showshoe spamming is a technique that uses multiple IP addresses, websites and sub-networks to send spam, so as to avoid detection by spam filters. The term \u2018snowshoe\u2019 spam describes how some spammers distribute their load across a larger surface to keep from sinking, just as snowshoe wearers do [McAfee, 2012] [Sophos, 2013]. Social networks have also become a hunting ground for spammers. With many users migrating to social networks as a means of communication, spammers are diversifying in order to stay in business. The personal information revealed in social networks is gleaned by spammers to target unsuspecting victims with tailored e-mails.\n7.4 Prioritising E-mails\nE-mail prioritization is an urgent research area with not much research done. In addition to basic communication, our e-mails are \u2018overloaded\u2019 in the sense of being used for a wide variety of other tasks - communication, advertisements, reminders, contact management, task management, and cloud storage. There is a serious need to address the information overload issue by developing systems that can learn personal priorities from data and identify important e-mails for each user. Prioritizing e-mail as per its importance is another desirable characteristic in a spam filter. Prioritizing e-mail or perhaps redirecting urgent messages to handheld devices could be another way of managing e-mails [Koprinska et al, 2007]. Learning to prioritize or rank is a relatively new field in which Machine Learning algorithms are used to learn some ranking function. [Dredze et al, 2009] and [Aberdeen and Slater, 2011] are significant works on ranking algorithms for proposing useful filters that rapidly filter groups of inbox messages and search messages more easily. However importance ranking is harder than it seems as often users disagree on what is important, requiring a high degree of personalization. The result is the growth of one of the most challenging research areas in Machine Learning i.e. Personalized e-mail prioritization [Yang et al, 2010], which rely mostly on the analysis of social networks to model user priorities among incoming e-mail messages."}, {"heading": "8 Conclusion", "text": "Future researches must address the fact that e-mail spam filtering is a co-evolutionary problem, since as the filter attempts to extend its predictive accuracy, the spammers attempt to outdo the classifiers. Hence, an effective approach should find a successful mechanism to identify the drift or evolution in spam features. Among all the traditional approaches discussed so far, the single approach that has achieved tremendous success against spam is content-based spam filtering. Fortunately, machine learning-based systems enable systems to learn and adapt to new threats, reacting to counteractive measures adopted by spammers.\nNo single anti-spam solution may be the right answer. A multi-faceted approach that combines legal and technical solutions and more is likely to provide a death blow to such spam. Without an effective solution spam will only continue to decrease the value of an efficient communication medium. As long as spam exists it will continue to have adverse effects on the preservation of integrity of e-mails and the user\u2019s perception on the effectiveness of spam filters. We reviewed content-based spam filtering techniques based on Machine Learning methods propounded so far, highlighting the main approaches and advancements gained by the approach. A quantitative analysis of the major reviews over the last decade was conducted. Overall the number and quality of literature demonstrates that remarkable advancements have been achieved and continue to be achieved. However some outstanding problems in e-mail spam filtering as highlighted above still remain. Till more improvements in spam filtering happen, anti-spam research will remain an active research area."}], "references": [{"title": "The Learning Behind Gmail Priority Inbox", "author": ["D Aberdeen", "A Slater"], "venue": "NIPS 2010 Workshop on Learning on Cores, Clusters and Clouds,", "citeRegEx": "Aberdeen and Slater,? \\Q2011\\E", "shortCiteRegEx": "Aberdeen and Slater", "year": 2011}, {"title": "A Comparison of Machine Learning Techniques for Phishing Detection", "author": ["S Abu-nimeh", "D Nappa", "X Wang", "S Nair"], "venue": "eCrime", "citeRegEx": "Abu.nimeh et al\\.,? \\Q2007\\E", "shortCiteRegEx": "Abu.nimeh et al\\.", "year": 2007}, {"title": "Identifying Potentially Useful Email Header Features for Email", "author": ["O Al-jarrah", "I Khater", "B Al-duwairi"], "venue": null, "citeRegEx": "Al.jarrah et al\\.,? \\Q2012\\E", "shortCiteRegEx": "Al.jarrah et al\\.", "year": 2012}, {"title": "Content-Based Spam Filtering", "author": ["TA Almeida", "A Yamakami"], "venue": "The 2010 International Joint Conference on Neural Networks (IJCNN), Barcelona,", "citeRegEx": "Almeida and Yamakami,? \\Q2010\\E", "shortCiteRegEx": "Almeida and Yamakami", "year": 2010}, {"title": "Advances in Spam Filtering Techniques. In: Computational Intelligence for Privacy and Security", "author": ["TA Almeida", "A Yamakami"], "venue": null, "citeRegEx": "Almeida and Yamakami,? \\Q2012\\E", "shortCiteRegEx": "Almeida and Yamakami", "year": 2012}, {"title": "Spam Filtering: How the Dimensionality Reduction Affects the Accuracy of Naive Bayes Classifiers", "author": ["Ta Almeida", "J Almeida", "A Yamakami"], "venue": "Journal of Internet Services and Applications 1(3):183\u2013200,", "citeRegEx": "Almeida et al\\.,? \\Q2010\\E", "shortCiteRegEx": "Almeida et al\\.", "year": 2010}, {"title": "A Study of Spam Filtering using Support Vector Machines", "author": ["O Amayri", "N Bouguila"], "venue": "Artificial Intelligence Review 34(1):73\u2013108,", "citeRegEx": "Amayri and Bouguila,? \\Q2010\\E", "shortCiteRegEx": "Amayri and Bouguila", "year": 2010}, {"title": "HoneySpam : Honeypots Fighting Spam at the Source", "author": ["M Andreolini", "A Bulgarelli", "M Colajanni", "F Mazzoni"], "venue": "Proceedings of the Steps to Reducing Unwanted Traffic on the Internet Workshop,", "citeRegEx": "Andreolini et al\\.,? \\Q2005\\E", "shortCiteRegEx": "Andreolini et al\\.", "year": 2005}, {"title": "2000a) An Evaluation of Naive Bayesian Anti-Spam Filtering", "author": ["I Androutsopoulos", "J Koutsias", "KV Chandrinos", "G Paliouras", "CD Spyropoulos"], "venue": "Proceedings of 11th European Conference on Machine Learning (ECML", "citeRegEx": "Androutsopoulos et al\\.,? \\Q2000\\E", "shortCiteRegEx": "Androutsopoulos et al\\.", "year": 2000}, {"title": "Learning to Filter Spam E-Mail : A Comparison of a Naive Bayesian and a Memory based Approach", "author": ["I Androutsopoulos", "J Koutsias", "KV Chandrinos", "G Paliouras", "CD Spyropoulos"], "venue": "Proceedings of 4th European Conference on Principles", "citeRegEx": "Androutsopoulos et al\\.,? \\Q2000\\E", "shortCiteRegEx": "Androutsopoulos et al\\.", "year": 2000}, {"title": "2000c) An Experimental Comparison of Naive Bayesian and Keyword-Based Anti-Spam Filtering with Personal E-mail Messages", "author": ["I Androutsopoulos", "J Koutsias", "KV Chandrinos", "CD Spyropoulos"], "venue": "Proceedings of the 23rd Annual International", "citeRegEx": "Androutsopoulos et al\\.,? \\Q2000\\E", "shortCiteRegEx": "Androutsopoulos et al\\.", "year": 2000}, {"title": "Learning to Filter Unsolicited Commercial E-Mail", "author": ["I Androutsopoulos", "G Paliouras", "E Michelakis"], "venue": "Tech. rep., National Centre for Scientific Research Demokritos,", "citeRegEx": "Androutsopoulos et al\\.,? \\Q2006\\E", "shortCiteRegEx": "Androutsopoulos et al\\.", "year": 2006}, {"title": "A Survey of Image Spamming and Filtering Techniques", "author": ["A Attar", "RM Rad", "RE Atani"], "venue": "Artificial Intelligence Review 40(1):71\u2013105,", "citeRegEx": "Attar et al\\.,? \\Q2011\\E", "shortCiteRegEx": "Attar et al\\.", "year": 2011}, {"title": "An Experiment in Authorship Attribution", "author": ["H Baayen", "HV Halteren", "A Neijt", "F Tweedie"], "venue": "Proceedings of JADT 2002: Sixth International Conference on Textual Data Statistical Analysis,", "citeRegEx": "Baayen et al\\.,? \\Q2002\\E", "shortCiteRegEx": "Baayen et al\\.", "year": 2002}, {"title": "A Novel Method of Spam Mail Detection using Text Based Clustering Approach", "author": ["M Basavaraju", "R Prabhakar"], "venue": "International Journal of Computer Applications", "citeRegEx": "Basavaraju and Prabhakar,? \\Q2010\\E", "shortCiteRegEx": "Basavaraju and Prabhakar", "year": 2010}, {"title": "Detection of Phishing Attacks : A Machine Learning Approach", "author": ["R Basnet", "S Mukkamala", "AH Sung"], "venue": "Studies in Fuzziness and Soft Computing,", "citeRegEx": "Basnet et al\\.,? \\Q2008\\E", "shortCiteRegEx": "Basnet et al\\.", "year": 2008}, {"title": "New Filtering Approaches for Phishing Email", "author": ["A Bergholz", "JD Beer", "S Glahn"], "venue": "Journal of Computer Security", "citeRegEx": "Bergholz et al\\.,? \\Q2010\\E", "shortCiteRegEx": "Bergholz et al\\.", "year": 2010}, {"title": "Exploiting Transport-Level Characteristics of Spam", "author": ["R Beverly", "K Sollins"], "venue": "Conference on Email and Anti-Spam (CEAS),", "citeRegEx": "Beverly and Sollins,? \\Q2008\\E", "shortCiteRegEx": "Beverly and Sollins", "year": 2008}, {"title": "A Survey and Experimental Evaluation of Image Spam Filtering Techniques", "author": ["B Biggio", "G Fumera", "I Pillai", "F Roli"], "venue": "Pattern Recognition Letters", "citeRegEx": "Biggio et al\\.,? \\Q2006\\E", "shortCiteRegEx": "Biggio et al\\.", "year": 2006}, {"title": "Bagging Classifiers for Fighting Poisoning Attacks in Adversarial Classification Tasks", "author": ["B Biggio", "I Corona", "G Fumera", "G Giacinto", "F Roli"], "venue": "Multiple Classifier Systems,", "citeRegEx": "Biggio et al\\.,? \\Q2011\\E", "shortCiteRegEx": "Biggio et al\\.", "year": 2011}, {"title": "Combining SVM Classifiers for Email Anti-spam Filtering", "author": ["A Blanco", "AM Ricket", "M Martn-Merino"], "venue": "Computational and Ambient Intelligence,", "citeRegEx": "Blanco et al\\.,? \\Q2007\\E", "shortCiteRegEx": "Blanco et al\\.", "year": 2007}, {"title": "A Survey of Learning-Based Techniques of Email Spam Filtering", "author": ["E Blanzieri", "A Bryl"], "venue": "Journal Artificial Intelligence Review", "citeRegEx": "Blanzieri and Bryl,? \\Q2008\\E", "shortCiteRegEx": "Blanzieri and Bryl", "year": 2008}, {"title": "Leveraging Social Networks to Fight Spam", "author": ["PO Boykin", "VP Roychowdhury"], "venue": null, "citeRegEx": "Boykin and Roychowdhury,? \\Q2005\\E", "shortCiteRegEx": "Boykin and Roychowdhury", "year": 2005}, {"title": "A Survey: Recent Advances and Future Trends in Honeypot Research", "author": ["ML Bringer", "CA Chelmecki", "H Fujinoki"], "venue": "International Journal of Computer Network and Information Security 4(10):63\u201375,", "citeRegEx": "Bringer et al\\.,? \\Q2012\\E", "shortCiteRegEx": "Bringer et al\\.", "year": 2012}, {"title": "Tightening the Net : A Review of Current and Next Generation Spam Filtering Tools. Computers and Security", "author": ["J Carpinter", "R Hunt"], "venue": null, "citeRegEx": "Carpinter and Hunt,? \\Q2006\\E", "shortCiteRegEx": "Carpinter and Hunt", "year": 2006}, {"title": "A Survey of Emerging Approaches to Spam Filtering", "author": ["G Caruana", "M Li"], "venue": "ACM Computing Surveys 44(2):1\u201327,", "citeRegEx": "Caruana and Li,? \\Q2012\\E", "shortCiteRegEx": "Caruana and Li", "year": 2012}, {"title": "Phishing E-mail Detection Based on Structural Properties", "author": ["M Chandrasekaran", "K Narayanan", "S Upadhyaya"], "venue": "Proceedings of the NYS Cyber Security Conference,", "citeRegEx": "Chandrasekaran et al\\.,? \\Q2006\\E", "shortCiteRegEx": "Chandrasekaran et al\\.", "year": 2006}, {"title": "Comparison of Machine Learning Methods for Spam E-mail Categorization", "author": ["PA Chirita", "J Diederich", "W Nejdl"], "venue": "Fourth International Conference on Hybrid Intelligent Systems,", "citeRegEx": "Chirita et al\\.,? \\Q2004\\E", "shortCiteRegEx": "Chirita et al\\.", "year": 2004}, {"title": "A Survey of Content-based Spam Classifiers", "author": ["KP Clark"], "venue": "WW", "citeRegEx": "Clark,? \\Q2008\\E", "shortCiteRegEx": "Clark", "year": 2008}, {"title": "Email Spam Filtering: A Systematic Review. Foundations and Trends in Information Retrieval 1(4):335\u2013455", "author": ["GV Cormack"], "venue": "DOI 10.1561/1500000006,", "citeRegEx": "Cormack,? \\Q2008\\E", "shortCiteRegEx": "Cormack", "year": 2008}, {"title": "On-line Supervised Spam Filter Evaluation", "author": ["GV Cormack", "TR Lynam"], "venue": "ACM Transactions on Information Systems", "citeRegEx": "Cormack and Lynam,? \\Q2007\\E", "shortCiteRegEx": "Cormack and Lynam", "year": 2007}, {"title": "Spam Detection using", "author": ["April Tech. Rep", "D Cyberoam Debarr", "H Wechsler"], "venue": null, "citeRegEx": "Rep. et al\\.,? \\Q2009\\E", "shortCiteRegEx": "Rep. et al\\.", "year": 2009}, {"title": "A Comparative Study", "author": ["H Lu", "D Wu"], "venue": null, "citeRegEx": "Diao et al\\.,? \\Q2003\\E", "shortCiteRegEx": "Diao et al\\.", "year": 2003}, {"title": "Applying Lazy Learning Algorithms", "author": ["J chado"], "venue": null, "citeRegEx": "chado,? \\Q2007\\E", "shortCiteRegEx": "chado", "year": 2007}, {"title": "Spam Filtering Based On The Analysis Of Text Information Embedded Into Images", "author": ["G Fumera"], "venue": "Journal of Machine Learning Research (special issue on Machine Learning in Computer Security)", "citeRegEx": "Fumera,? \\Q2006\\E", "shortCiteRegEx": "Fumera", "year": 2006}, {"title": "On the Relationship Between Feature Selection and Classification Accuracy", "author": ["WN Gansterer", "GF Ecker"], "venue": "Journal of Machine Learning Research", "citeRegEx": "Gansterer and Ecker,? \\Q2008\\E", "shortCiteRegEx": "Gansterer and Ecker", "year": 2008}, {"title": "Reputation Network Analysis for Email Filtering Creating the Reputation Network", "author": ["J Golbeck", "J Hendler"], "venue": "Proceedings of the 3rd Conference on Networked Systems Design & Implementation,", "citeRegEx": "Golbeck and Hendler,? \\Q2004\\E", "shortCiteRegEx": "Golbeck and Hendler", "year": 2004}, {"title": "Highly Discriminative Statistical Features for Email Classification. Knowledge and Information Systems", "author": ["Email", "Anti-Spam", "Mountain View", "California. Gomez JC", "Boiy E", "Moens MF"], "venue": "DOI 10.1007/s10115-011-0403-7,", "citeRegEx": "Email et al\\.,? \\Q2012\\E", "shortCiteRegEx": "Email et al\\.", "year": 2012}, {"title": "Spam and the Ongoing Battle for the Inbox. Communications of the ACM 50(2):24\u201333 Graham P (2002a) A Plan for Spam", "author": ["BJ Goodman", "GV Cormack", "D Heckerman"], "venue": null, "citeRegEx": "Goodman et al\\.,? \\Q2007\\E", "shortCiteRegEx": "Goodman et al\\.", "year": 2007}, {"title": "Will Filters Kill Spam", "author": ["P Graham"], "venue": null, "citeRegEx": "Graham,? \\Q2002\\E", "shortCiteRegEx": "Graham", "year": 2002}, {"title": "Better Bayesian Filtering", "author": ["P Graham"], "venue": null, "citeRegEx": "Graham,? \\Q2003\\E", "shortCiteRegEx": "Graham", "year": 2003}, {"title": "How to Beat an Adaptive Spam Filter", "author": ["J Graham-Cumming"], "venue": "The Spam Conference Graham-Cumming J", "citeRegEx": "Graham.Cumming,? \\Q2004\\E", "shortCiteRegEx": "Graham.Cumming", "year": 2004}, {"title": "The Most Common Words In Spam Email", "author": ["A Greenberg"], "venue": null, "citeRegEx": "Greenberg,? \\Q2010\\E", "shortCiteRegEx": "Greenberg", "year": 2010}, {"title": "Exploring the Spam Arms Race to Characterize Spam Evolution", "author": ["PHC Guerra", "D Guedes", "WM Jr.", "C Hoepers", "MHPC Chaves", "K Steding-jessen"], "venue": "CEAS 2010 - Seventh Collaboration, Electronic messaging, Anti-Abuse and Spam Conference,", "citeRegEx": "Guerra et al\\.,? \\Q2010\\E", "shortCiteRegEx": "Guerra et al\\.", "year": 2010}, {"title": "Web Spam Taxonomy", "author": ["Z Gyongyi", "H Garcia-molina"], "venue": null, "citeRegEx": "Gyongyi and Garcia.molina,? \\Q2005\\E", "shortCiteRegEx": "Gyongyi and Garcia.molina", "year": 2005}, {"title": "Asymmetric Gradient Boosting with Application to Spam Filtering", "author": ["J He", "B Thiesson"], "venue": "Telecommunications", "citeRegEx": "He and Thiesson,? \\Q2010\\E", "shortCiteRegEx": "He and Thiesson", "year": 2010}, {"title": "Behavior-based Email Analysis with Application to Spam Detection", "author": ["S Hershkop"], "venue": "PhD thesis Hershkop S, Stolfo SJ", "citeRegEx": "Hershkop,? \\Q2006\\E", "shortCiteRegEx": "Hershkop", "year": 2006}, {"title": "Spam Construction Trends. In: Information Security for South Africa (ISSA), pp", "author": ["B Irwin", "B Friedman"], "venue": "Isacenkova J, Balzarotti D", "citeRegEx": "Irwin and Friedman,? \\Q2008\\E", "shortCiteRegEx": "Irwin and Friedman", "year": 2008}, {"title": "Challenge-Response Spam Filter", "author": ["JP John", "A Moshchuk", "SD Gribble", "A Krishnamurthy"], "venue": "Proceedings of the 2011 ACM SIGCOMM Conference on Internet Measurement Conference (IMC", "citeRegEx": "John et al\\.,? \\Q2009\\E", "shortCiteRegEx": "John et al\\.", "year": 2009}, {"title": "Tech", "author": ["Predictions"], "venue": "rep. Katakis I, Tsoumakas G, Vlahavas I (2007) Email Min-", "citeRegEx": "Predictions,? 2015", "shortCiteRegEx": "Predictions", "year": 2015}, {"title": "Fighting Unicode-Obfuscated", "author": ["S Stamm"], "venue": null, "citeRegEx": "Liu and Stamm,? \\Q2007\\E", "shortCiteRegEx": "Liu and Stamm", "year": 2007}, {"title": "On the Effectiveness of Techniques to Detect Phishing Sites", "author": ["C Ludl", "S McAllister", "E Kirda", "C Kruegel"], "venue": "DIMVA", "citeRegEx": "Ludl et al\\.,? \\Q2007\\E", "shortCiteRegEx": "Ludl et al\\.", "year": 2007}, {"title": "Just 150 spammers Blamed for E-mail Woe", "author": ["M Ludlow"], "venue": null, "citeRegEx": "Ludlow,? \\Q2002\\E", "shortCiteRegEx": "Ludlow", "year": 2002}, {"title": "A Bayesian Approach to Filtering Junk E-Mail", "author": ["M Sahami", "S Dumais", "D Heckerman", "E Horvitz"], "venue": "National Conference on Artificial Intelligence, Madison, WI,", "citeRegEx": "Sahami et al\\.,? \\Q1998\\E", "shortCiteRegEx": "Sahami et al\\.", "year": 1998}, {"title": "A Comparative Performance Study of Feature Selection Methods for the Anti-spam Filtering Domain", "author": ["JR M\u00e9ndez", "F D\u0131\u0301az", "EL Iglesias", "JM Corchado"], "venue": "Advances in Data Mining. Applications in Medicine,", "citeRegEx": "M\u00e9ndez et al\\.,? \\Q2006\\E", "shortCiteRegEx": "M\u00e9ndez et al\\.", "year": 2006}, {"title": "Spam Filtering with Naive Bayes Which Naive Bayes", "author": ["V Metsis", "I Androutsopoulos", "G Paliouras"], "venue": "Proceedings of the 3rd International Conference on E-mail and Anti-Spam,", "citeRegEx": "Metsis et al\\.,? \\Q2006\\E", "shortCiteRegEx": "Metsis et al\\.", "year": 2006}, {"title": "Filtron : A Learning-Based Anti-Spam Filter", "author": ["E Michelakis", "I Androutsopoulos", "G Paliouras", "G Sakkis"], "venue": "Proceedings of the 1st Conference on E-mail and Anti-Spam (CEAS)", "citeRegEx": "Michelakis et al\\.,? \\Q2004\\E", "shortCiteRegEx": "Michelakis et al\\.", "year": 2004}, {"title": "Review of Browser Extensions, a Man-in-the- Browser Phishing Techniques Targeting Bank Customers", "author": ["U Nattakant"], "venue": "Proceedings of the 7th Australian Information Security Management Conference,", "citeRegEx": "Nattakant,? \\Q2009\\E", "shortCiteRegEx": "Nattakant", "year": 2009}, {"title": "Clustering Based Ensemble Classification for Spam Filtering", "author": ["R Neumayer"], "venue": "Proceedings of the 6th Workshop on Data Analysis,", "citeRegEx": "Neumayer,? \\Q2006\\E", "shortCiteRegEx": "Neumayer", "year": 2006}, {"title": "Internet Message Format - RFC", "author": ["P Resnick"], "venue": "Tech. Rep. April", "citeRegEx": "Resnick,? \\Q2001\\E", "shortCiteRegEx": "Resnick", "year": 2001}, {"title": "SpamCop : A Spam Classification & Organization Program. In: Learning from Text Categorization Papers from the AAAI Workshop AAAI", "author": ["P Pantel", "D Lin"], "venue": "Technical Report WS-98-05,", "citeRegEx": "Pantel and Lin,? \\Q1998\\E", "shortCiteRegEx": "Pantel and Lin", "year": 1998}, {"title": "A Novel Ensemble Learning-Based Approach for Click Fraud Detection in Mobile Advertising. In: Mining Intelligence and Knowledge Exploration", "author": ["KS Perera", "B Neupane", "MA Faisal", "Z Aung", "WL Woon"], "venue": null, "citeRegEx": "Perera et al\\.,? \\Q2013\\E", "shortCiteRegEx": "Perera et al\\.", "year": 2013}, {"title": "Observed Trends in Spam Construction Techniques: A Case Study of Spam Evolution", "author": ["C Pu", "S Webb"], "venue": "Proceedings of third conference on e-mail and anti-spam (CEAS),", "citeRegEx": "Pu and Webb,? \\Q2006\\E", "shortCiteRegEx": "Pu and Webb", "year": 2006}, {"title": "Understanding the Network-Level Behavior of Spammers", "author": ["A Ramachandran", "N Feamster"], "venue": "Proceedings of ACM SIGCOMM", "citeRegEx": "Ramachandran and Feamster,? \\Q2006\\E", "shortCiteRegEx": "Ramachandran and Feamster", "year": 2006}, {"title": "Exploring Support Vector Machines and Random Forests for Spam Detection", "author": ["G Rios", "H Zha"], "venue": "In: Conference on e-mail and anti-spam (CEAS),", "citeRegEx": "Rios and Zha,? \\Q2004\\E", "shortCiteRegEx": "Rios and Zha", "year": 2004}, {"title": "A Statistical Approach to the Spam Problem", "author": ["G Robinson"], "venue": "Linux Journal (March 2003):3,", "citeRegEx": "Robinson,? \\Q2003\\E", "shortCiteRegEx": "Robinson", "year": 2003}, {"title": "Stacking Classifiers for Anti-spam Filtering of E-mail", "author": ["G Sakkis", "I Androutsopoulos", "G Paliouras", "V Karkaletsis"], "venue": "Empirical methods in Natural Language Processing,", "citeRegEx": "Sakkis et al\\.,? \\Q2001\\E", "shortCiteRegEx": "Sakkis et al\\.", "year": 2001}, {"title": "E-mail Spam Filtering", "author": ["EP Sanz"], "venue": "Advances in Computers", "citeRegEx": "Sanz,? \\Q2008\\E", "shortCiteRegEx": "Sanz", "year": 2008}, {"title": "Spam Detection Using Text Clustering", "author": ["M Sasaki", "H Shinnou"], "venue": "In: International Conference on Cyberworlds,", "citeRegEx": "Sasaki and Shinnou,? \\Q2005\\E", "shortCiteRegEx": "Sasaki and Shinnou", "year": 2005}, {"title": "Relaxed Online SVMs for Spam Filtering", "author": ["D Sculley", "GM Wachman"], "venue": "Proceedings of the 30th Annual International ACM SIGIR Conference on Research and Development in Information Retrieval,", "citeRegEx": "Sculley and Wachman,? \\Q2007\\E", "shortCiteRegEx": "Sculley and Wachman", "year": 2007}, {"title": "An Evaluation of Naive Bayes Variants in Content-Based Learning for Spam Filtering. Intelligent Data Analysis", "author": ["AK Seewald"], "venue": null, "citeRegEx": "Seewald,? \\Q2007\\E", "shortCiteRegEx": "Seewald", "year": 2007}, {"title": "Spam Email Classification Using Decision Tree Ensemble", "author": ["L Shi", "Q Wang", "X Ma", "M Weng", "H Qiao"], "venue": "Journal of Computational Information Systems", "citeRegEx": "Shi et al\\.,? \\Q2012\\E", "shortCiteRegEx": "Shi et al\\.", "year": 2012}, {"title": "A Reputation-based Collaborative Approach for Spam Filtering", "author": ["W Shi", "M Xie"], "venue": "AASRI Procedia, Elsevier B.V.,", "citeRegEx": "Shi and Xie,? \\Q2013\\E", "shortCiteRegEx": "Shi and Xie", "year": 2013}, {"title": "Combining Winnow and Orthogonal Sparse Bigrams", "author": ["C Siefkes", "F Assis", "S Chhabra", "WS Yerazunis"], "venue": null, "citeRegEx": "Siefkes et al\\.,? \\Q2004\\E", "shortCiteRegEx": "Siefkes et al\\.", "year": 2004}, {"title": "Incremental Spam Filtering", "author": ["M Siponen", "C Stucke"], "venue": "European Conference on Machine Learning (ECML),", "citeRegEx": "Siponen and Stucke,? \\Q2006\\E", "shortCiteRegEx": "Siponen and Stucke", "year": 2006}, {"title": "Better Naive Bayes Classification for High-precision Spam Detection", "author": ["Y Song", "A Kocz", "CL Giles"], "venue": "ence on System Sciences (HICSS),", "citeRegEx": "Song et al\\.,? \\Q2009\\E", "shortCiteRegEx": "Song et al\\.", "year": 2009}, {"title": "Statistical Feature Extraction for Classification of Image Spam Using Artificial Neural Networks", "author": ["M Soranamageswari", "C Meena"], "venue": "Second International Conference on Machine Learning and Computing,", "citeRegEx": "Soranamageswari and Meena,? \\Q2010\\E", "shortCiteRegEx": "Soranamageswari and Meena", "year": 2010}, {"title": "PhishHook : A Tool to Detect and Prevent Phishing Attacks", "author": ["M Stepp"], "venue": "DIMACS Workshop on Theft in E-Commerce: Content, Identity,", "citeRegEx": "Stepp,? \\Q2005\\E", "shortCiteRegEx": "Stepp", "year": 2005}, {"title": "The War Against Spam : A report from the Front Line", "author": ["April Tech. Rep", "B Symantec Taylor", "D Fingal", "D Aberdeen"], "venue": "Symantec", "citeRegEx": "Rep. et al\\.,? \\Q2014\\E", "shortCiteRegEx": "Rep. et al\\.", "year": 2014}, {"title": "Feature Selection for Spam and Phishing Detection", "author": ["F Toolan", "J Carthy"], "venue": "eCrime Researchers Summit (eCrime),", "citeRegEx": "Toolan and Carthy,? \\Q2007\\E", "shortCiteRegEx": "Toolan and Carthy", "year": 2007}, {"title": "Machine Learning Techniques in Spam Filtering. In: Data Mining Problem-oriented Seminar, MTAT, May, pp 60\u201379", "author": ["K Tretyakov"], "venue": "Tseng CY, Chen MS", "citeRegEx": "Tretyakov,? \\Q2004\\E", "shortCiteRegEx": "Tretyakov", "year": 2004}, {"title": "The Problem of Concept Drift : Definitions and Related Work (Technical Report TCD", "author": ["A Tsymbal"], "venue": null, "citeRegEx": "Tsymbal,? \\Q2004\\E", "shortCiteRegEx": "Tsymbal", "year": 2004}, {"title": "Concept Drift. Information Fusion", "author": ["CC Wang", "SY Chen"], "venue": null, "citeRegEx": "Wang and Chen,? \\Q2007\\E", "shortCiteRegEx": "Wang and Chen", "year": 2007}, {"title": "Communication CC, Network N (2008) Spamming Botnets : Signatures and Characteristics", "author": ["Y Xie", "F Yu", "K Achan", "R Panigrahy", "G Hulten", "I Osipkov"], "venue": "Proceedings of ACM SIGCOMM08,", "citeRegEx": "Xie et al\\.,? \\Q2008\\E", "shortCiteRegEx": "Xie et al\\.", "year": 2008}, {"title": "A New Feature Selection Algorithm based on Binomial Hypothesis Testing for Spam Filtering. KnowledgeBased Systems 24(6):904\u2013914", "author": ["J Yang", "Y Liu", "Z Liu", "X Zhu", "X Zhang"], "venue": "DOI 10.1016/j.knosys", "citeRegEx": "Yang et al\\.,? \\Q2011\\E", "shortCiteRegEx": "Yang et al\\.", "year": 2011}, {"title": "A New Feature Selection based on Comprehensive Measurement both in Inter-category and Intra-category for Text Categorization", "author": ["J Yang", "Y Liu", "X Zhu", "Z Liu", "X Zhang"], "venue": "Information Processing & Management 48(4):741\u2013754,", "citeRegEx": "Yang et al\\.,? \\Q2012\\E", "shortCiteRegEx": "Yang et al\\.", "year": 2012}, {"title": "A Comparative Study on Feature Selection in Text Categorization", "author": ["Y Yang", "JO Pedersen"], "venue": "Proceedings of the Fourteenth International Conference on Machine Learning,", "citeRegEx": "Yang and Pedersen,? \\Q1997\\E", "shortCiteRegEx": "Yang and Pedersen", "year": 1997}, {"title": "Personalized Email Prioritization Based on Content and Social Network Analysis", "author": ["Y Yang", "S Yoo", "F Lin", "IC Moon"], "venue": "IEEE Intelligent Systems", "citeRegEx": "Yang et al\\.,? \\Q2010\\E", "shortCiteRegEx": "Yang et al\\.", "year": 2010}, {"title": "Effective Spam Classification based on Meta-Heuristics", "author": ["Cy Yeh", "CH Wu", "SH Doong"], "venue": "Proceedings of IEEE International Conference on Systems, Man and Cybernetics,", "citeRegEx": "Yeh et al\\.,? \\Q2005\\E", "shortCiteRegEx": "Yeh et al\\.", "year": 2005}, {"title": "Sparse Binary Polynomial Hashing and the CRM114 Discriminator Rough Guide to this Talk", "author": ["WS Yerazunis"], "venue": "MIT Spam Conference", "citeRegEx": "Yerazunis,? \\Q2003\\E", "shortCiteRegEx": "Yerazunis", "year": 2003}, {"title": "The Spam-Filtering Accuracy Plateau at 99", "author": ["WS Yerazunis"], "venue": "Accuracy and How to Get Past It. In: MIT Spam Conference", "citeRegEx": "Yerazunis,? \\Q2004\\E", "shortCiteRegEx": "Yerazunis", "year": 2004}, {"title": "A Comparative Study for Email Classification", "author": ["S Youn", "D Mcleod"], "venue": "Proceedings of International Joint Conferences on Computer,", "citeRegEx": "Youn and Mcleod,? \\Q2006\\E", "shortCiteRegEx": "Youn and Mcleod", "year": 2006}, {"title": "A Comparative Study for Content-based Dynamic Spam Classification using Four Machine Learning Algorithms. KnowledgeBased Systems 21(4):355\u2013362", "author": ["Yu B", "Xu"], "venue": "DOI 10.1016/j.knosys", "citeRegEx": "B and Xu,? \\Q2008\\E", "shortCiteRegEx": "B and Xu", "year": 2008}, {"title": "An Evaluation of Statistical Spam Filtering Techniques Spam Filtering as Text Categorization", "author": ["L Zhang", "J Zhu", "T Yao"], "venue": "ACM Transactions on Asian Language Information Processing (TALIP)", "citeRegEx": "Zhang et al\\.,? \\Q2004\\E", "shortCiteRegEx": "Zhang et al\\.", "year": 2004}, {"title": "A Local-Concentration-Based Feature Extraction Approach for Spam Filtering", "author": ["Y Zhu", "Y Tan"], "venue": null, "citeRegEx": "Zhu and Tan,? \\Q2011\\E", "shortCiteRegEx": "Zhu and Tan", "year": 2011}, {"title": "Characterizing Botnets from Email Spam Records", "author": ["L Zhuang", "J Dunagan", "DR Simon", "HJ Wang", "JD Tygar"], "venue": "LEET", "citeRegEx": "Zhuang et al\\.,? \\Q2008\\E", "shortCiteRegEx": "Zhuang et al\\.", "year": 2008}], "referenceMentions": [{"referenceID": 29, "context": "According to the Text Retrieval Conference (TREC) the term \u2018spam\u2019 is - an unsolicited, unwanted e-mail that was sent indiscriminately [Cormack, 2008].", "startOffset": 134, "endOffset": 149}, {"referenceID": 74, "context": "[Siponen and Stucke, 2006].", "startOffset": 0, "endOffset": 26}, {"referenceID": 44, "context": "In general, spam has many forms - chat rooms are subject to chat spam, blogs are subject to blog spam (splogs)[Kolari et al, 2006], search engines are often misled by web spam (search engine spamming or spamdexing)[Gyongyi and Garcia-molina, 2005], [Shi and Xie, 2013], while social systems are plagued by social spam [Lee et al, 2010a].", "startOffset": 214, "endOffset": 247}, {"referenceID": 72, "context": "In general, spam has many forms - chat rooms are subject to chat spam, blogs are subject to blog spam (splogs)[Kolari et al, 2006], search engines are often misled by web spam (search engine spamming or spamdexing)[Gyongyi and Garcia-molina, 2005], [Shi and Xie, 2013], while social systems are plagued by social spam [Lee et al, 2010a].", "startOffset": 249, "endOffset": 268}, {"referenceID": 24, "context": "Prior attempts to review e-mail spam filtering using Machine Learning have been made, the most notable ones being [Androutsopoulos et al, 2006], [Carpinter and Hunt, 2006], [Blanzieri and Bryl, 2008], [Cormack, 2008], [Guzella and Caminhas, 2009], and Wang et al [2013].", "startOffset": 145, "endOffset": 171}, {"referenceID": 21, "context": "Prior attempts to review e-mail spam filtering using Machine Learning have been made, the most notable ones being [Androutsopoulos et al, 2006], [Carpinter and Hunt, 2006], [Blanzieri and Bryl, 2008], [Cormack, 2008], [Guzella and Caminhas, 2009], and Wang et al [2013].", "startOffset": 173, "endOffset": 199}, {"referenceID": 29, "context": "Prior attempts to review e-mail spam filtering using Machine Learning have been made, the most notable ones being [Androutsopoulos et al, 2006], [Carpinter and Hunt, 2006], [Blanzieri and Bryl, 2008], [Cormack, 2008], [Guzella and Caminhas, 2009], and Wang et al [2013].", "startOffset": 201, "endOffset": 216}, {"referenceID": 21, "context": "Prior attempts to review e-mail spam filtering using Machine Learning have been made, the most notable ones being [Androutsopoulos et al, 2006], [Carpinter and Hunt, 2006], [Blanzieri and Bryl, 2008], [Cormack, 2008], [Guzella and Caminhas, 2009], and Wang et al [2013]. We extend earlier surveys by taking an updated set of works into account.", "startOffset": 174, "endOffset": 270}, {"referenceID": 47, "context": "They can be deployed in clients, where they can be installed at proxies or as plug-ins, as in [Irwin and Friedman, 2008].", "startOffset": 94, "endOffset": 120}, {"referenceID": 21, "context": "To deliver spam email to a huge number of recipients, spammers often resort to use of bulk mailing software or e-mail harvesters [Blanzieri and Bryl, 2008].", "startOffset": 129, "endOffset": 155}, {"referenceID": 24, "context": "Spam evolution has been briefly discussed in scientific literature [Carpinter and Hunt, 2006] [Guzella", "startOffset": 67, "endOffset": 93}, {"referenceID": 4, "context": "and Caminhas, 2009] [Almeida and Yamakami, 2012].", "startOffset": 20, "endOffset": 48}, {"referenceID": 42, "context": "Figure 2 illustrates a word cloud of common words in spam e-mail [Greenberg, 2010]; the", "startOffset": 65, "endOffset": 82}, {"referenceID": 62, "context": "HTML-based obfuscation techniques are discussed at length in the study by [Pu and Webb, 2006].", "startOffset": 74, "endOffset": 93}, {"referenceID": 50, "context": "In general, there are many ways to obscure the e-mail content: misplaced spaces, purposeful misspellings, embedded special characters (letter substitution), Unicode letter transliteration [Liu and Stamm, 2007], HTML redrawing, etc.", "startOffset": 188, "endOffset": 209}, {"referenceID": 67, "context": "The reason is that when the user trains the spam filter with the poisoned training data, the spam filter \u2018learns\u2019 about such random words as being good evidences of spam [Sanz, 2008].", "startOffset": 170, "endOffset": 182}, {"referenceID": 41, "context": "Graham-Cumming [Graham-Cumming, 2004] [GrahamCumming, 2006], identified two types of possible attacks on Bayesian filters: passive (where in absence of feedback, the spammer can at best make educated guesses) and active (where the spammer discovers an effective wordlist after getting feedback).", "startOffset": 15, "endOffset": 37}, {"referenceID": 30, "context": "In other words, backscatter are delivery notifications from another server, rejecting an e-mail made to come across as being mailed from an account [Cormack and Lynam, 2007].", "startOffset": 148, "endOffset": 173}, {"referenceID": 30, "context": "[Cormack and Lynam, 2007] experimented with six open-source filters and a test set of 49,086 messages with backscatter representing a mere 1% of the total spam in the test set.", "startOffset": 0, "endOffset": 25}, {"referenceID": 34, "context": "OCR (Optical Character Recognition)based modules are effective to a limited extent against image-spam [Biggio et al, 2006] [Fumera, 2006].", "startOffset": 123, "endOffset": 137}, {"referenceID": 34, "context": "The use of OCR tools to extract text embedded into images, and processing it using modern text categorization techniques was thoroughly investigated by [Fumera, 2006].", "startOffset": 152, "endOffset": 166}, {"referenceID": 65, "context": ") and financial account credentials [Robinson, 2003] [Bergholz et al, 2010].", "startOffset": 36, "endOffset": 52}, {"referenceID": 77, "context": "SpoofGuard) have been proposed [Chou et al, 2004], [Stepp, 2005], [Nat-", "startOffset": 51, "endOffset": 64}, {"referenceID": 89, "context": "Sparse Binary Polynomial Hashing (SBPH) [Yerazunis, 2003] is another feature generator from e-mails.", "startOffset": 40, "endOffset": 57}, {"referenceID": 94, "context": "Recently, [Zhu and Tan, 2011] proposed a feature extraction approach based on local concentration (LC) which efficiently extracted position-correlated information from e-mail messages.", "startOffset": 10, "endOffset": 29}, {"referenceID": 89, "context": "Sparse Binary Polynomial Hashing (SBPH) [Yerazunis, 2003] is another feature generator from e-mails. However, its many features made it computationally heavy and of limited use. Siefkes et al [2004] proposed an effective feature combination technique known as the Orthogonal Sparse Bigrams (OSB) to extract more compact features.", "startOffset": 41, "endOffset": 199}, {"referenceID": 35, "context": "While feature subset selection involves the extraction of a subset of the original attributes, dimensionality reduction involves linear combinations of the original feature set [Gansterer and Ecker, 2008].", "startOffset": 177, "endOffset": 204}, {"referenceID": 29, "context": "[Cormack, 2008] suggests stop-word removal as a trivial example of feature selection, and stemming as a simple example of dimensionality reduction.", "startOffset": 0, "endOffset": 15}, {"referenceID": 86, "context": "Several well-known methods for feature selection are explained and compared with new feature selection methods in [Yang and Pedersen, 1997], [Yang et al, 2011] and [Gomez et al, 2012].", "startOffset": 114, "endOffset": 139}, {"referenceID": 82, "context": "In fact, experimental results confirm that the e-mail header provides powerful cues for machine learning algorithms to efficiently filter out spam e-mails [Chih-Chin Lai and Tsai, 2004], [Zhang et al, 2004], [Sheu, 2007] and [Wang and Chen, 2007].", "startOffset": 225, "endOffset": 246}, {"referenceID": 82, "context": "Statistical analysis by [Wang and Chen, 2007] showed that 92.", "startOffset": 24, "endOffset": 45}, {"referenceID": 17, "context": "Beverly and Sollins [Beverly and Sollins, 2008] examined a variety of SMTP flow characteristics and developed a spam classifier \u2018SpamFlow \u2019 based on the statistical discriminatory power of these flows.", "startOffset": 20, "endOffset": 47}, {"referenceID": 46, "context": "To recognize spam and viruses as irregular behviour in the e-mail, [Hershkop, 2006] proposed some behavior models, some of them are recipient frequency, group communication, user\u2019s past ac-", "startOffset": 67, "endOffset": 83}, {"referenceID": 63, "context": "[Ramachandran and Feamster, 2006] studied the spammer\u2019s behaviour at the network level and found that most spam was received from a small number of regions of IP address space.", "startOffset": 0, "endOffset": 33}, {"referenceID": 22, "context": "For their social network based classification scheme, [Boykin and Roychowdhury, 2005] analyzed the e-mail header fields to construct a social network graph of the user, and then classified e-mail messages based on \u2018clustering coefficient\u2019 of the graph subcomponent.", "startOffset": 54, "endOffset": 85}, {"referenceID": 36, "context": "[Chirita et al, 2009] and [Golbeck and Hendler, 2004] further developed the idea of creating a social network graph for inferring reputation ratings of individuals or e-mail addresses.", "startOffset": 26, "endOffset": 53}, {"referenceID": 67, "context": "Initial spam filters followed the \u2018knowledge engineering \u2019 approach and were based on coded rules or heuristics Sanz [2008]. A content-based heuristic filter analyzes the contents of a message M and classifies it to spam or ham based on the occurrence of \u2018spammy\u2019 words like \u2018viagra\u2019 or \u2018lottery \u2019 in it.", "startOffset": 112, "endOffset": 124}, {"referenceID": 67, "context": "Initial spam filters followed the \u2018knowledge engineering \u2019 approach and were based on coded rules or heuristics Sanz [2008]. A content-based heuristic filter analyzes the contents of a message M and classifies it to spam or ham based on the occurrence of \u2018spammy\u2019 words like \u2018viagra\u2019 or \u2018lottery \u2019 in it. They were designed based on the knowledge of regularities or patterns observed in messages Guzella and Caminhas [2009]. Cohen\u2019s Cohen [1996] was one of the earliest attempts to use learning machines that classify e-mail.", "startOffset": 112, "endOffset": 424}, {"referenceID": 67, "context": "Initial spam filters followed the \u2018knowledge engineering \u2019 approach and were based on coded rules or heuristics Sanz [2008]. A content-based heuristic filter analyzes the contents of a message M and classifies it to spam or ham based on the occurrence of \u2018spammy\u2019 words like \u2018viagra\u2019 or \u2018lottery \u2019 in it. They were designed based on the knowledge of regularities or patterns observed in messages Guzella and Caminhas [2009]. Cohen\u2019s Cohen [1996] was one of the earliest attempts to use learning machines that classify e-mail.", "startOffset": 112, "endOffset": 446}, {"referenceID": 24, "context": "[Carpinter and Hunt, 2006] Bayesian filtering Broad review of implementations.", "startOffset": 0, "endOffset": 26}, {"referenceID": 21, "context": "[Blanzieri and Bryl, 2008] SVM, TF-IDF, Boosting Explains feature extraction methods.", "startOffset": 0, "endOffset": 26}, {"referenceID": 29, "context": "[Cormack, 2008] SVM, Perceptron, Winnow, OSBF Testing achieves FPR = 0.", "startOffset": 0, "endOffset": 15}, {"referenceID": 3, "context": "[Almeida and Yamakami, 2010] SVM, Naive Bayes Proposed Matthews correlation coefficient (MCC).", "startOffset": 0, "endOffset": 28}, {"referenceID": 4, "context": "[Almeida and Yamakami, 2012] MDL principle, SVM Uses six, well known, large public databases.", "startOffset": 0, "endOffset": 28}, {"referenceID": 25, "context": "[Caruana and Li, 2012] Signature, k-NN, ANN, SVM Focuses on distributed computing paradigms.", "startOffset": 0, "endOffset": 22}, {"referenceID": 67, "context": "In spite of these limitations, Symantec Brightmail Sanz [2008], a rule-based filter solution was a success from 2004 till the end of the last decade.", "startOffset": 51, "endOffset": 63}, {"referenceID": 6, "context": "Heckerman et al, 1998], [Androutsopoulos et al, 2000a], Support Vector Machines [] Woitaszek and Shaaban [2003], [Amayri and Bouguila, 2010]], Decision Trees [Yeh et al, 2005], [Toolan and Carthy, 2010], Neural Networks [Wu, 2009], [Soranamageswari and Meena, 2010], etc.", "startOffset": 113, "endOffset": 140}, {"referenceID": 76, "context": "Heckerman et al, 1998], [Androutsopoulos et al, 2000a], Support Vector Machines [] Woitaszek and Shaaban [2003], [Amayri and Bouguila, 2010]], Decision Trees [Yeh et al, 2005], [Toolan and Carthy, 2010], Neural Networks [Wu, 2009], [Soranamageswari and Meena, 2010], etc.", "startOffset": 232, "endOffset": 265}, {"referenceID": 60, "context": "Heckerman et al, 1998], [Pantel and Lin, 1998], [Graham, 2003] and [Yerazunis, 2004].", "startOffset": 24, "endOffset": 46}, {"referenceID": 40, "context": "Heckerman et al, 1998], [Pantel and Lin, 1998], [Graham, 2003] and [Yerazunis, 2004].", "startOffset": 48, "endOffset": 62}, {"referenceID": 90, "context": "Heckerman et al, 1998], [Pantel and Lin, 1998], [Graham, 2003] and [Yerazunis, 2004].", "startOffset": 67, "endOffset": 84}, {"referenceID": 24, "context": "such filters do not consider that the words \u2018special \u2019 and \u2018offers\u2019 are more likely to appear together in spam e-mail than in legitimate e-mail Carpinter and Hunt [2006]. But text analysis confirms that words have a very significant correlation and are not chosen randomly.", "startOffset": 144, "endOffset": 170}, {"referenceID": 24, "context": "such filters do not consider that the words \u2018special \u2019 and \u2018offers\u2019 are more likely to appear together in spam e-mail than in legitimate e-mail Carpinter and Hunt [2006]. But text analysis confirms that words have a very significant correlation and are not chosen randomly. In spite of this over simplistic assumption, Bayesian classifiers have been found to work remarkably well Androutsopoulos et al [2006] and Almeida et al [2010].", "startOffset": 144, "endOffset": 409}, {"referenceID": 24, "context": "such filters do not consider that the words \u2018special \u2019 and \u2018offers\u2019 are more likely to appear together in spam e-mail than in legitimate e-mail Carpinter and Hunt [2006]. But text analysis confirms that words have a very significant correlation and are not chosen randomly. In spite of this over simplistic assumption, Bayesian classifiers have been found to work remarkably well Androutsopoulos et al [2006] and Almeida et al [2010]. However to address this limitation, Yerazunis [2003] and Siefkes et al [2004] introduced sparse binary polynomial hashing (SBPH) and orthogonal sparse bigrams (OSB).", "startOffset": 144, "endOffset": 434}, {"referenceID": 24, "context": "such filters do not consider that the words \u2018special \u2019 and \u2018offers\u2019 are more likely to appear together in spam e-mail than in legitimate e-mail Carpinter and Hunt [2006]. But text analysis confirms that words have a very significant correlation and are not chosen randomly. In spite of this over simplistic assumption, Bayesian classifiers have been found to work remarkably well Androutsopoulos et al [2006] and Almeida et al [2010]. However to address this limitation, Yerazunis [2003] and Siefkes et al [2004] introduced sparse binary polynomial hashing (SBPH) and orthogonal sparse bigrams (OSB).", "startOffset": 144, "endOffset": 488}, {"referenceID": 24, "context": "such filters do not consider that the words \u2018special \u2019 and \u2018offers\u2019 are more likely to appear together in spam e-mail than in legitimate e-mail Carpinter and Hunt [2006]. But text analysis confirms that words have a very significant correlation and are not chosen randomly. In spite of this over simplistic assumption, Bayesian classifiers have been found to work remarkably well Androutsopoulos et al [2006] and Almeida et al [2010]. However to address this limitation, Yerazunis [2003] and Siefkes et al [2004] introduced sparse binary polynomial hashing (SBPH) and orthogonal sparse bigrams (OSB).", "startOffset": 144, "endOffset": 513}, {"referenceID": 89, "context": "Yerazunis [2004] argued that most Bayesian filters seem to reach a plateau of accuracy at 99.", "startOffset": 0, "endOffset": 17}, {"referenceID": 52, "context": "According to Ludlow [2002], the vast majority of the tens of millions of spam e-mails might be the handiwork of only 150 spammers around the world; Again, authors have \u2018textual fingerprints\u2019, at least for texts produced by writers who are not consciously changing their", "startOffset": 13, "endOffset": 27}, {"referenceID": 91, "context": "[Youn and Mcleod, 2006] and [Yu", "startOffset": 0, "endOffset": 23}, {"referenceID": 70, "context": "[Seewald, 2007] investigated the simple Naive Bayes learner represented by SpamBayes, and two variants of Naive Bayes learning, SA-Train and CRM-114.", "startOffset": 0, "endOffset": 15}, {"referenceID": 64, "context": "SVMs have become one of the most sought-after classifiers in the Machine Learning community because they provide superior generalization performance, require less examples for training, and can tackle high-dimensional data with the help of kernels [Rios and Zha, 2004] [Wu et al, 2007].", "startOffset": 248, "endOffset": 268}, {"referenceID": 64, "context": "[Rios and Zha, 2004] experimented with SVMs and Random Forests (RFs) and compared them against Naive Bayes models.", "startOffset": 0, "endOffset": 20}, {"referenceID": 69, "context": "Online SVMs [Sculley and Wachman, 2007], Ensemble of SVMs [Blanco et al, 2007], etc.", "startOffset": 12, "endOffset": 39}, {"referenceID": 6, "context": "A detailed study of various distance-based kernels and spam filtering behaviors employing SVM is found in [Amayri and Bouguila, 2010].", "startOffset": 106, "endOffset": 133}, {"referenceID": 68, "context": "Prior to this, Sasaki and Shinnou [Sasaki and Shinnou, 2005] had proposed spam detection technique making use of the text clustering through a vector space model.", "startOffset": 34, "endOffset": 60}, {"referenceID": 14, "context": "[Basavaraju and Prabhakar, 2010] presented an effective clustering algorithm integrating K-means and BIRCH algorithm features.", "startOffset": 0, "endOffset": 32}, {"referenceID": 58, "context": "[Neumayer, 2006], [Shi et al, 2012], and [Blanco et al, 2007] also discuss the application of an ensemble learning to spam filtering.", "startOffset": 0, "endOffset": 16}, {"referenceID": 29, "context": "[Cormack, 2008].", "startOffset": 0, "endOffset": 15}, {"referenceID": 28, "context": "Cost-sensitive measures Weighted Accuracy (WAcc), Weighted Error Rate (WErr) and Total Cost Ratio (TCR) [Clark, 2008] are used as shown in the formula.", "startOffset": 104, "endOffset": 117}, {"referenceID": 28, "context": "9, 999 [Androutsopoulos et al, 2000b], [Androutsopoulos et al, 2000a], [Androutsopoulos et al, 2006], [Sakkis et al, 2001] and [Clark, 2008].", "startOffset": 127, "endOffset": 140}, {"referenceID": 30, "context": "Gen Spam 41,404 78% 2005 [Cormack and Lynam, 2007]", "startOffset": 25, "endOffset": 50}, {"referenceID": 4, "context": "Spam Archive >2,20,000 100% 1998 [Almeida and Yamakami, 2012]", "startOffset": 33, "endOffset": 61}, {"referenceID": 4, "context": "SpamArchive >2,20,000 100% 1998 [Almeida and Yamakami, 2012]", "startOffset": 32, "endOffset": 60}, {"referenceID": 4, "context": "Dataset 3927 2006 2007 [Almeida and Yamakami, 2012]", "startOffset": 23, "endOffset": 51}, {"referenceID": 62, "context": "Characterization and measurement studies have been developed in content-based spam filtering [Pu and Webb, 2006], [Blanzieri and Bryl, 2008].", "startOffset": 93, "endOffset": 112}, {"referenceID": 21, "context": "Characterization and measurement studies have been developed in content-based spam filtering [Pu and Webb, 2006], [Blanzieri and Bryl, 2008].", "startOffset": 114, "endOffset": 140}, {"referenceID": 81, "context": "Research on concept drift confirms lazy learning techniques to be the most effective models against concept drift [Tsymbal, 2004], [Tsymbal et al, 2008].", "startOffset": 114, "endOffset": 129}, {"referenceID": 80, "context": "Moreover, in this case the user has to review the messages sorted out to the spam folder and it somehow defeats the whole purpose of spam filtering [Tretyakov, 2004].", "startOffset": 148, "endOffset": 165}, {"referenceID": 0, "context": "[Dredze et al, 2009] and [Aberdeen and Slater, 2011] are significant works on ranking algorithms for proposing useful filters that rapidly filter groups of inbox messages and search messages more easily.", "startOffset": 25, "endOffset": 52}], "year": 2016, "abstractText": "We present a comprehensive review of the most effective content-based e-mail spam filtering techniques. We focus primarily on Machine Learning-based spam filters and their variants, and report on a broad review ranging from surveying the relevant ideas, efforts, effectiveness, and the current progress. The initial exposition of the background examines the basics of e-mail spam filtering, the evolving nature of spam, spammers playing cat-and-mouse with e-mail service providers (ESPs), and the Machine Learning front in fighting spam. We conclude by measuring the impact of Machine Learning-based filters and explore the promising offshoots of latest developments.", "creator": "LaTeX with hyperref package"}}}