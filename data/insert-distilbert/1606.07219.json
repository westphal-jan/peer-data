{"id": "1606.07219", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "23-Jun-2016", "title": "Learning Dynamic Classes of Events using Stacked Multilayer Perceptron Networks", "abstract": "people often use together a web search resource engine to find information about events of interest, for example, global sport radio competitions, political elections, festivals and entertainment gossip news. in producing this paper, we study a problem of detecting repetitive event - related queries, which is the first empirical step given before selecting a suitable time - aware computational retrieval model. in general, event - responsive related information needs can be observed in query streams through performing various temporal patterns of user search behavior, e. g., spiky peaks for popular events, and periodicities for repetitive events. alternatively however, it is also unusually common that users eagerly search for non - popular events, subjects which may not exhibit temporal variations in query streams, e. g., past events recently occurred, historical events triggered by anniversaries or similar events, disasters and future events anticipated to mysteriously happen. to address the challenge required of detecting dynamic classes of events, we propose a novel deep learning model to classify organizing a given query into a predetermined set of multiple event signature types. our proposed model, a stacked multilayer perceptron ( s - mlp ) network, consists of multilayer perceptron used here as a basic learning unit. we assemble stacked units to further learn complex relationships between neutrons written in successive layers. to evaluate our specific proposed model, we conduct experiments using real - world queries extensively and introduce a set of manually positioned created ground truth. preliminary results have shown that our proposed deep learning model dramatically outperforms the state - of - the - art classification by models significantly.", "histories": [["v1", "Thu, 23 Jun 2016 08:16:38 GMT  (1258kb)", "https://arxiv.org/abs/1606.07219v1", "Neu-IR '16 SIGIR Workshop on Neural Information Retrieval, 5 pages, 4 figures"], ["v2", "Fri, 1 Jul 2016 21:53:43 GMT  (3518kb)", "http://arxiv.org/abs/1606.07219v2", "Neu-IR '16 SIGIR Workshop on Neural Information Retrieval, 6 pages, 4 figures"]], "COMMENTS": "Neu-IR '16 SIGIR Workshop on Neural Information Retrieval, 5 pages, 4 figures", "reviews": [], "SUBJECTS": "cs.IR cs.LG", "authors": ["nattiya kanhabua", "huamin ren", "thomas b moeslund"], "accepted": false, "id": "1606.07219"}, "pdf": {"name": "1606.07219.pdf", "metadata": {"source": "CRF", "title": "Learning Dynamic Classes of Events using Stacked Multilayer Perceptron Networks", "authors": ["Nattiya Kanhabua", "Huamin Ren", "Thomas B. Moeslund"], "emails": ["nattiya@cs.aau.dk", "hr@create.aau.dk", "tbm@create.aau.dk"], "sections": [{"heading": null, "text": "ar X\niv :1\n60 6.\n07 21\n9v 2\n[ cs\n.I R\n] 1\nJ ul\n2 01\n6"}, {"heading": "1. INTRODUCTION", "text": "Detecting event-related queries is a challenging task [4, 10, 13]. It is the first step before applying an appropriate time-aware retrieval and ranking model, in order to improve the overall effectiveness and search experience [2, 7, 15, 16]. One way to detect events is to analyze changes in query popularity of those queries that are repeated often, rather than those in the long tail. For popular queries, search traffic typically exhibits certain temporal patterns varying over time, such as, sharp pikes, weekly- or monthly periodicity, and seasonality. Examples of spiky queries are breaking news\nPermission to make digital or hard copies of part or all of this work for personal or classroom use is granted without fee provided that copies are not made or distributed for profit or commercial advantage and that copies bear this notice and the full citation on the first page. Copyrights for third-party components of this work must be honored. For all other uses, contact the owner/author(s).\nNeu-IR \u201916 SIGIR Workshop on Neural Information Retrieval, July 21,"}, {"heading": "2016, Pisa, Italy", "text": "c\u00a9 2016 Copyright held by the owner/author(s). X-XXXXX-XX-X/XX/XX.\n(e.g., Syria, Zika outbreaks), celebrities (e.g., Johnny Depp, Prince), and ongoing events (e.g., tax extension, presidential candidates). Periodic or seasonal queries are, for instance, annual events (e.g., April fools\u2019 day, PGA tour) and television series (e.g., American Idol, Dancing With the Stars). However, there exist event-related queries that do not unveil temporal variations in query streams. Those queries are sporadic, which can consist of anticipated events (e.g., Samsung Note 7, Rio 2016 Olympics), and recent past or historical events (e.g., Easter, Oscars, 9/11).\nIn this paper, we address the problem of event detection in query logs that can be regarded as a classification problem. Given a set of queries, we categorize them into the predefined dynamic classes of events. Our work differs from temporal query classification in the Temporalia Challenge [10] in at least two aspects. First, we use a novel taxonomy of more fine grained event types, which consists of six classes, i.e., anticipated, breaking, commemorative, meme, ongoing and atemporal. Second, we consider the time aspect of an event with respect to the time when a query was issued in order to identify its dynamic event class. In other words, the event type of a query will be dynamically determined based on the time when it was submitted (so-called hitting time). We illustrate the dynamic event classes of queries in Figure 1.\nA major challenge of this task is noisy and sparse query log data. The temporal pattern of a certain type of events might not be observable because they are less popular events and often unknown in advance. Statistically, the number of\nqueries included in each event class can be different largely; thus having impact on classification performance. A commonly used approach to handle such imbalanced data is to randomly sampling an equivalent size of training data per each event, and then to apply machine learning method on them to learn a classifier, which may lack learning ability of overall labeled data. More importantly, the learning model is not scalable to big datasets: if there will be huge amounts of queries available, the overall classification performance can be worse constrained to the event that has the minimum queries.\nWe address the aforementioned challenge using a deep learning model, in which its benefits are manifold. By designing a deep framework of neuron layers, we can learn complex relationships between input data and output event classes. It is trained in an end-to-end fashion, i.e., taking instances or queries as input and providing class labels as output. Thus, deep models remove the need for manual feature engineering and have greatly reduced the need for adapting to our task. The application of deep neural networks have demonstrated their effectiveness in a wide range of fields including several challenges and benchmarks on image recognition, object detection, and many highly AI related applications, such as, image denoising, segmentation, scene understanding, speech perception and language understanding [5, 20, 23, 26]. In recent years, some researches also have demonstrated the powerfulness of deep neural networks on text rankings, e.g., [21].\nInspired by the fast progress of deep neural networks, and motivated by both theoretical and biological arguments, which strongly suggest that building such systems requires deep architectures and involves many layers of nonlinear processing [1], we propose a novel deep learning model for classifying a given query to one of these multiple events by learning a Stacked Multilayer Perceptron (S-MLP) network, which treats each multilayer perceptron as a separate learning unit and assembles either homogeneous or heterogeneous multilayer perceptron learning units to form a very deep neural network. Through this design, we learn complicated relationships between neurons in successive layers that are well expressed. Our contributions can be summarized as follows:\n1. We study a problem of event detection in query logs taking into account dynamic classes of events.\n2. We propose a Stacked Multilayer Perceptron (S-MLP) model, which shows the capability of processing imbalanced data from various dynamic classes of events.\n3. We conduct experiments using real-world query logs and a dataset consisting of over 10,000 instances for learning our proposed model."}, {"heading": "2. PROBLEM STATEMENT", "text": "Given training samples {{X1, Y1}, {X2, Y2}, . . . , {Xm, Ym}}, each Xi is a query instance, which is a vector composed of features, i.e., Xi \u2208 R\nd, and d is the dimension of feature space composed of various metrics aimed at identifying the type of events. We employ different features, namely, time series features from signal processing [3, 6, 9], along with features derived from click-through information [8], and standard statistical features [11, 18]. In total, there are 28 distinct features, which are derived from two main sources\n(short time-span query logs and a long-term, external document collection). The reason for leveraging these data sources is twofold. First, we want to detect events through temporal searching patterns exhibited in query logs, such as, burstiness, trend or seasonality. Second, particular eventrelated queries may not exhibit such temporal patterns in a query stream, but their underlying temporal information needs can be observed by analyzing the distribution of search results over time. This can compensate a lack of long timespan query logs. A list of features is summarized in Table 1. For the detailed description of each feature, please refer to the previous work [14].\nThe label of each query Xi is represented as Yi, where Yi \u2208 {0, 1, ..., m} for a multi-class classification, and m is the number of classes. We constraint the multi-class classification problem as follows: (1) each Yi is independent of each other, and (2) only one event is assigned to a given query. Inspired by [12], we propose a novel taxonomy of eventrelated queries consisting of anticipated (upcoming events scheduled in a near future), breaking (breaking news, unseen or sporadic events), meme (viral conversation topics), commemorative (historical events or anniversaries) and ongoing (events being discussed or happening right now). Finally, we also consider an additional label atemporal for cases where a given query could not be categorized as an event, or only causal behaviors from users.\nOur objective is to design a model based on deep feedforward neural networks (also called multilayer perceptrons (MLPs)), in which outputs approximate predefined target values (or ground truth) for different classes. Different from existing MLPs, we try to approximate outputs with ground truth by some approximation functions g\u2217. Each g\u2217 is a MLP unit, in another word, each g\u2217 consists of an input layer or a layer fully connected to the last layer of the previous MLP unit, one or more hidden layer(s) and an output layer of perceptrons. More specifically, given an error measurement \u03b4, the goal is to optimize: min \u2211m i=1 \u03b4(Yi, yi). In practice, the error between the output and the target is used to update the network parameters via the Backpropagation algorithm. We use cross-entropy as a loss function to calculate this error. Therefore, our query classification can be regarded as an optimization problem defined as: J = min(\u2212 \u2211m i=1 Yi(log(g(Xi))))."}, {"heading": "3. STACKED MULTILAYER PERCEPTRON", "text": "It has been a long held belief in the field of neural network research that the composition of several levels of nonlinearity would be key to efficiently model complex relationships between variables and to achieve better generalization performance on difficult recognition tasks [24]. This viewpoint is motivated partially by knowledge of the layered architecture of regions of the human brain, such as, the visual cortex, and in part by a body of theoretical arguments in its favor. However, the problematic non-convex optimization for multilayer perceptron has for a long time prevented reaping the expected benefits [1] of going beyond one or two hidden layers. Deep architectures [25] have come out as a success solution at learning their parameters. Despite of its success while giving sufficient training data mainly with images, the effectiveness with limited training data is still uncertain and the design of deep architectures for IR tasks remains to be done.\nInspired by the expressiveness of multilayer perceptron, we design a novel deep neural network, namely Stacked Multilayer Perceptron (S-MLP), which uses multilayer perceptron as a basic learning unit and then assembles stacked units to learn deeper the relationships between input queries and output event. The architecture of S-MLP is illustrated in Figure 2. S-MLP takes queries as input and output the event with highest probability as its label using softmax function. It is worth noting that we call each learning unit a MLP unit instead of an ordinary layer due to: 1) each MLP unit contains multiple layers and through \u2019stacking\u2019, thus the architecture could learn relationship between input and output even \u2019deeper\u2019; and 2) each MLP unit may have a unified or non-unified structure, which means each learning block are designed with hidden layers, activation functions that can be totally the same or diverse. This design may help us understanding each MLP or the assembling of MLPs.\nTo allow the network learn non-linear decision boundaries, we use Rectified Linear Unit (ReLU) as an activation function, i.e., f(x) = max(0, x). ReLU was found to greatly accelerate (e.g., a factor of 6 in [19]) the convergence of stochastic gradient descent compared to the sigmoid/tanh functions. It is worth noting that g(l) has been updated K iterations in the inner loop, which makes a big difference from MLP models. The consideration of updating g(l) is that each MLP unit can be designed either homogeneously or nonhomogeneously, i.e., the hidden layers in each MLP can either the same or diverse. Therefore, the input for each MLP unit is the output of the last layer of the preceding MLP unit."}, {"heading": "4. PRELIMINARY RESULTS", "text": "In this section, we first explain our experimental settings including the datasets, relevance assessment, and evaluation methods. We conducted experiments on various learning methods on a MLP model, and then applied the stable learning method to our proposed S-MLP model. Learning methods play an important role while training neural networks, which affect the convergence performance, such as, speed and the capability to obtain optimization. Therefore, we varied the size of training data and compared different learning methods in their convergence rates and loss values obtained. Finally, we show comparative results with the state-of-the-art methods and discuss the experimental results of our evaluation."}, {"heading": "4.1 Experimental Setting", "text": "Query Log Datasets. We used two real-world query log datasets publicly available. The first dataset is the AOL query logs, which consists of more than 30 million queries covering the period from March 1, to May 31, 2006. The second dataset we used is the MSN query logs composed of about 15 million queries sampled from May 2006. User information is anonymized and adult search queries are ignored from our study. For an external temporal collection, we used the New York Times Annotated Corpus, which contains over 1.8 million articles covering a period from January 1987 to June 2007.\nThere is no standard dataset for our problem of multi-class query classification. Thus, we created a set of ground-truth consisting of 837 manually identified events. We simulated hitting time, namely, every two weeks, and extracted a set of features for each event-related query. We asked human\nexperts to manually classify a given query into predefined classes, while considering both simulated hitting time and an event time period. Particularly, an assessor gave a temporal class Label(q,Te,tq) where (q,Te,tq) is a triple of a query q, an event date Te, and hitting time tq, where each a triple was judged by at least two human assessors.\nIn total, assessors evaluated 10,370 triples, which correspond to the total number of instances in our dataset available for training and testing. Finally, we obtained 988 instances of anticipated events, 531 instances of breaking events, 304 instances of commemorative events, 315 instances of meme, 2,520 instances of ongoing events, and 5,712 instances of atemporal queries.\nMethods for Comparisons. To give a more comprehensive comparison, we divide the dataset into 70% and 30% as training and test; for the 70% training, we further divide into 90% for model learning and 10% for validation, hence conduct cross-validation to optimize parameters on MLP model and report the effectiveness on test dataset. Note that, 70% queries used for training are randomly selected due to the imbalance of queries per each class, training queries are also imbalanced."}, {"heading": "4.2 Learning Methods of MLP", "text": "Various learning methods are compared with different proportion of the training data; their convergence curves are shown in Figure 3. As can be seen, the model tends to converge while a larger proportion of the training data is learned; while small data is used for training, any noise can lead to bias and thus there are more jitterings for most learning methods when 20% to 40% of training data is used. Seven types of learning methods are compared: constant learning rate, gradually decreased learning rate, gradually decreased learning rate with Nesterov\u2019s momentum, constant with momentum, gradually decreased with momentum, Adam method, and constant with Nesterov\u2019s momentum. Among them, Adam [17] method outperforms other methods in terms of convergence and small loss function values. Thus, we adopt Adam method in the later part of experiments."}, {"heading": "4.3 Comparison with State-of-the-art", "text": "Finally, we compare our S-MLP model with state-of-theart methods and show their comparative precision on multiclass classification in Figure 4. Our S-MLP has outperformed other methods significantly, obtaining 89% mean average precision (MAP), compared to Naive Bayes (47%), LibSVM (51%) and MLP (69%). Remarkably, our S-MLP model outperforms other methods in classifying \u2019Breaking\u2019 and \u2019Meme\u2019 events, in which most of other methods fail. For a further analysis, we will perform a detailed investigation, e.g., analyzing the represented features of queries and some learning properties of our deep models."}, {"heading": "5. CONCLUSION AND FUTURE WORK", "text": "We proposed an approach to detecting event-related queries based on a deep learning model. Deep neural networks are very expressive in representing training data, which is also verified in experiments that more MLPs are stacked in the model, the better performance is gained. Stacking multiple non-linear hidden layers makes the model very deep so that it can lean very complicated relationships between inputs and outputs, i.e., multiple classes of events. However, overfitting can be a serious problem in such networks. As pointed out in [22], many of these complicated relationships will be the result of sampling noise, so they will exist in the training set but not in real test data even if it is drawn from the same distribution, which also leads to overfitting.\nFor our future work, over-fitting avoiding is our major consideration. One option would be to adopt units drop randomly along with their connections from the neural network during the training, which prevents unites from coadapting too much. The neurons, which are \u2019dropped out\u2019 in this way, do not contribute to either the forward pass or the back propagation. So every time an input is presented, the neural network samples neurons to be dropped would lead to a different architecture. Through this, a neuron cannot rely on the presence of particular neurons, therefore, the model is forced to learn more robust features that are useful in conjunction with many different random subsets of the other neurons. To this end, it also brings us several open questions that might guide us to a better understanding of MLP unit. For example, randomly dropout is commonly used to pick neurons in one hidden layers uniformly. Can random dropout function be applied to neurons, which are located in different hidden layers yet in the same MLP unit? Will these implications function differently?"}], "references": [{"title": "Learning Deep Architectures for AI", "author": ["Y. Bengio"], "venue": "Found. Trends Mach. Learn.,", "citeRegEx": "1", "shortCiteRegEx": "1", "year": 2009}, {"title": "A language modeling approach for temporal information needs", "author": ["K. Berberich", "S.J. Bedathur", "O. Alonso", "G. Weikum"], "venue": "In Proceedings of the 32nd European Conference on IR Research,", "citeRegEx": "2", "shortCiteRegEx": "2", "year": 2010}, {"title": "Time Series Analysis, Forecasting and Control", "author": ["G.E.P. Box", "G. Jenkins"], "venue": "Holden-Day, Incorporated,", "citeRegEx": "3", "shortCiteRegEx": "3", "year": 1990}, {"title": "Survey of temporal information retrieval and related applications", "author": ["R. Campos", "G. Dias", "A.M. Jorge", "A. Jatowt"], "venue": "ACM Comput. Surv.,", "citeRegEx": "4", "shortCiteRegEx": "4", "year": 2014}, {"title": "Learning coarseto-fine sparselets for efficient object detection and scene classification", "author": ["G. Cheng", "J. Han", "L. Guo", "T. Liu"], "venue": "In The IEEE Conference on Computer Vision and Pattern Recognition (CVPR),", "citeRegEx": "5", "shortCiteRegEx": "5", "year": 2015}, {"title": "STL: A Seasonal-Trend Decomposition Procedure Based on Loess", "author": ["R.B. Cleveland", "W.S. Cleveland", "J.E. McRae", "I. Terpenning"], "venue": "Journal of Official Statistics,", "citeRegEx": "6", "shortCiteRegEx": "6", "year": 1990}, {"title": "Learning temporaldependent ranking models", "author": ["M. Costa", "F. Couto", "M. Silva"], "venue": "In Proceedings of the 37th International ACM SIGIR Conference on Research & Development in Information Retrieval,", "citeRegEx": "7", "shortCiteRegEx": "7", "year": 2014}, {"title": "A large-scale evaluation and analysis of personalized search strategies", "author": ["Z. Dou", "R. Song", "J.-R. Wen"], "venue": "In Proceedings of the 16th International Conference on World Wide Web, WWW", "citeRegEx": "8", "shortCiteRegEx": "8", "year": 2007}, {"title": "Forecasting seasonals and trends by exponentially weighted moving averages", "author": ["C.C. Holt"], "venue": "International Journal of Forecasting, 20(1):5\u201310,", "citeRegEx": "9", "shortCiteRegEx": "9", "year": 2004}, {"title": "Temporal information searching behaviour and strategies", "author": ["H. Joho", "A. Jatowt", "R. Blanco"], "venue": "Inf. Process. Manage.,", "citeRegEx": "10", "shortCiteRegEx": "10", "year": 2015}, {"title": "Temporal profiles of queries", "author": ["R. Jones", "F. Diaz"], "venue": "ACM Trans. Inf. Syst.,", "citeRegEx": "11", "shortCiteRegEx": "11", "year": 2007}, {"title": "Towards supporting search over trending events with social media", "author": ["S.R. Kairam", "M.R. Morris", "J. Teevan", "D.J. Liebling", "S.T. Dumais"], "venue": "In Proceedings of ICWSM,", "citeRegEx": "12", "shortCiteRegEx": "12", "year": 2013}, {"title": "Temporal information retrieval", "author": ["N. Kanhabua", "R. Blanco", "K. N\u00f8rv\u030aag"], "venue": "Foundations and Trends in Information Retrieval,", "citeRegEx": "13", "shortCiteRegEx": "13", "year": 2015}, {"title": "Learning to detect event-related queries for web search", "author": ["N. Kanhabua", "T. Ngoc Nguyen", "W. Nejdl"], "venue": "In Proceedings of the 24th International Conference on World Wide Web,", "citeRegEx": "14", "shortCiteRegEx": "14", "year": 2015}, {"title": "Determining time of queries for re-ranking search results", "author": ["N. Kanhabua", "K. N\u00f8rv\u030aag"], "venue": "In Proceedings of ECDL\u20192010,", "citeRegEx": "15", "shortCiteRegEx": "15", "year": 2010}, {"title": "N\u00f8rv\u030aag. A comparison of timeaware ranking methods", "author": ["K.N. Kanhabua"], "venue": "In Proceedings of the 34th international ACM SIGIR conference on Research and development in Information Retrieval,", "citeRegEx": "16", "shortCiteRegEx": "16", "year": 2011}, {"title": "Adam: A method for stochastic optimization", "author": ["D.P. Kingma", "J. Ba"], "venue": "CoRR, abs/1412.6980,", "citeRegEx": "17", "shortCiteRegEx": "17", "year": 2014}, {"title": "Bursty and hierarchical structure in streams", "author": ["J. Kleinberg"], "venue": "Data Min. Knowl. Discov.,", "citeRegEx": "18", "shortCiteRegEx": "18", "year": 2003}, {"title": "Imagenet classification with deep convolutional neural networks", "author": ["A. Krizhevsky", "I. Sutskever", "G.E. Hinton"], "venue": "In Proceedings of the 26th Annual Conference on Neural Information Processing Systems,", "citeRegEx": "19", "shortCiteRegEx": "19", "year": 2012}, {"title": "Fully convolutional networks for semantic segmentation", "author": ["J. Long", "E. Shelhamer", "T. Darrell"], "venue": null, "citeRegEx": "20", "shortCiteRegEx": "20", "year": 2015}, {"title": "Learning to rank short text pairs with convolutional deep neural networks", "author": ["A. Severyn", "A. Moschitti"], "venue": "In Proceedings of the 38th International ACM SIGIR Conference on Research and Development in Information Retrieval,", "citeRegEx": "21", "shortCiteRegEx": "21", "year": 2015}, {"title": "Dropout: A simple way to prevent neural networks from overfitting", "author": ["N. Srivastava", "G. Hinton", "A. Krizhevsky", "I. Sutskever", "R. Salakhutdinov"], "venue": "J. Mach. Learn. Res.,", "citeRegEx": "22", "shortCiteRegEx": "22", "year": 1929}, {"title": "Going deeper with convolutions", "author": ["C. Szegedy", "W. Liu", "Y. Jia", "P. Sermanet", "S. Reed", "D. Anguelov", "D. Erhan", "V. Vanhoucke", "A. Rabinovich"], "venue": "In The IEEE Conference on Computer Vision and Pattern Recognition (CVPR),", "citeRegEx": "23", "shortCiteRegEx": "23", "year": 2015}, {"title": "Many-layered learning", "author": ["P.E. Utgoff", "D.J. Stracuzzi"], "venue": "Neural Computation,", "citeRegEx": "24", "shortCiteRegEx": "24", "year": 2002}, {"title": "Stacked denoising autoencoders: Learning useful representations in a deep network with a local denoising criterion", "author": ["P. Vincent", "H. Larochelle", "I. Lajoie", "Y. Bengio", "P.- A. Manzagol"], "venue": "J. Mach. Learn. Res.,", "citeRegEx": "25", "shortCiteRegEx": "25", "year": 2010}, {"title": "Image denoising and inpainting with deep neural networks", "author": ["J. Xie", "L. Xu", "E. Chen"], "venue": "Advances in Neural Information Processing Systems", "citeRegEx": "26", "shortCiteRegEx": "26", "year": 2012}], "referenceMentions": [{"referenceID": 3, "context": "Detecting event-related queries is a challenging task [4, 10, 13].", "startOffset": 54, "endOffset": 65}, {"referenceID": 9, "context": "Detecting event-related queries is a challenging task [4, 10, 13].", "startOffset": 54, "endOffset": 65}, {"referenceID": 12, "context": "Detecting event-related queries is a challenging task [4, 10, 13].", "startOffset": 54, "endOffset": 65}, {"referenceID": 1, "context": "It is the first step before applying an appropriate time-aware retrieval and ranking model, in order to improve the overall effectiveness and search experience [2, 7, 15, 16].", "startOffset": 160, "endOffset": 174}, {"referenceID": 6, "context": "It is the first step before applying an appropriate time-aware retrieval and ranking model, in order to improve the overall effectiveness and search experience [2, 7, 15, 16].", "startOffset": 160, "endOffset": 174}, {"referenceID": 14, "context": "It is the first step before applying an appropriate time-aware retrieval and ranking model, in order to improve the overall effectiveness and search experience [2, 7, 15, 16].", "startOffset": 160, "endOffset": 174}, {"referenceID": 15, "context": "It is the first step before applying an appropriate time-aware retrieval and ranking model, in order to improve the overall effectiveness and search experience [2, 7, 15, 16].", "startOffset": 160, "endOffset": 174}, {"referenceID": 9, "context": "Our work differs from temporal query classification in the Temporalia Challenge [10] in at least two aspects.", "startOffset": 80, "endOffset": 84}, {"referenceID": 4, "context": "standing [5, 20, 23, 26].", "startOffset": 9, "endOffset": 24}, {"referenceID": 19, "context": "standing [5, 20, 23, 26].", "startOffset": 9, "endOffset": 24}, {"referenceID": 22, "context": "standing [5, 20, 23, 26].", "startOffset": 9, "endOffset": 24}, {"referenceID": 25, "context": "standing [5, 20, 23, 26].", "startOffset": 9, "endOffset": 24}, {"referenceID": 20, "context": ", [21].", "startOffset": 2, "endOffset": 6}, {"referenceID": 0, "context": "Inspired by the fast progress of deep neural networks, and motivated by both theoretical and biological arguments, which strongly suggest that building such systems requires deep architectures and involves many layers of nonlinear processing [1], we propose a novel deep learning model for classifying a given query to one of these multiple events by learning a Stacked Multilayer Perceptron (S-MLP) network, which treats each multilayer perceptron as a separate learn-", "startOffset": 242, "endOffset": 245}, {"referenceID": 2, "context": "We employ different features, namely, time series features from signal processing [3, 6, 9], along with features derived from click-through information [8], and standard statistical features [11, 18].", "startOffset": 82, "endOffset": 91}, {"referenceID": 5, "context": "We employ different features, namely, time series features from signal processing [3, 6, 9], along with features derived from click-through information [8], and standard statistical features [11, 18].", "startOffset": 82, "endOffset": 91}, {"referenceID": 8, "context": "We employ different features, namely, time series features from signal processing [3, 6, 9], along with features derived from click-through information [8], and standard statistical features [11, 18].", "startOffset": 82, "endOffset": 91}, {"referenceID": 7, "context": "We employ different features, namely, time series features from signal processing [3, 6, 9], along with features derived from click-through information [8], and standard statistical features [11, 18].", "startOffset": 152, "endOffset": 155}, {"referenceID": 10, "context": "We employ different features, namely, time series features from signal processing [3, 6, 9], along with features derived from click-through information [8], and standard statistical features [11, 18].", "startOffset": 191, "endOffset": 199}, {"referenceID": 17, "context": "We employ different features, namely, time series features from signal processing [3, 6, 9], along with features derived from click-through information [8], and standard statistical features [11, 18].", "startOffset": 191, "endOffset": 199}, {"referenceID": 13, "context": "For the detailed description of each feature, please refer to the previous work [14].", "startOffset": 80, "endOffset": 84}, {"referenceID": 11, "context": "Inspired by [12], we propose a novel taxonomy of eventrelated queries consisting of anticipated (upcoming events scheduled in a near future), breaking (breaking news, unseen or sporadic events), meme (viral conversation topics), commemorative (historical events or anniversaries) and ongoing (events being discussed or happening right now).", "startOffset": 12, "endOffset": 16}, {"referenceID": 23, "context": "It has been a long held belief in the field of neural network research that the composition of several levels of nonlinearity would be key to efficiently model complex relationships between variables and to achieve better generalization performance on difficult recognition tasks [24].", "startOffset": 280, "endOffset": 284}, {"referenceID": 0, "context": "reaping the expected benefits [1] of going beyond one or two hidden layers.", "startOffset": 30, "endOffset": 33}, {"referenceID": 24, "context": "Deep architectures [25] have come out as a success solution at learning their parameters.", "startOffset": 19, "endOffset": 23}, {"referenceID": 18, "context": ", a factor of 6 in [19]) the convergence of stochastic gradient descent compared to the sigmoid/tanh functions.", "startOffset": 19, "endOffset": 23}, {"referenceID": 16, "context": "Among them, Adam [17] method outperforms other methods in terms of convergence and small loss function values.", "startOffset": 17, "endOffset": 21}, {"referenceID": 21, "context": "As pointed out in [22], many of these complicated relationships will be the result of sampling noise, so they will exist in the training set but not in real test data even if it is drawn from the same distribution, which also leads to overfitting.", "startOffset": 18, "endOffset": 22}], "year": 2016, "abstractText": "People often use a web search engine to find information about events of interest, for example, sport competitions, political elections, festivals and entertainment news. In this paper, we study a problem of detecting event-related queries, which is the first step before selecting a suitable time-aware retrieval model. In general, event-related information needs can be observed in query streams through various temporal patterns of user search behavior, e.g., spiky peaks for popular events, and periodicities for repetitive events. However, it is also common that users search for non-popular events, which may not exhibit temporal variations in query streams, e.g., past events recently occurred, historical events triggered by anniversaries or similar events, and future events anticipated to happen. To address the challenge of detecting dynamic classes of events, we propose a novel deep learning model to classify a given query into a predetermined set of multiple event types. Our proposed model, a Stacked Multilayer Perceptron (S-MLP) network, consists of multilayer perceptron used as a basic learning unit. We assemble stacked units to further learn complex relationships between neutrons in successive layers. To evaluate our proposed model, we conduct experiments using real-world queries and a set of manually created ground truth. Preliminary results have shown that our proposed deep learning model outperforms the state-of-the-art classification models significantly.", "creator": "LaTeX with hyperref package"}}}