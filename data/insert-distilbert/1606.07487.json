{"id": "1606.07487", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "23-Jun-2016", "title": "The VGLC: The Video Game Level Corpus", "abstract": "levels are a commercially key component of many different video games, puzzles and a large body of work has increasingly been produced on how to procedurally generate game levels. recently, alternative machine learning techniques have been applied to video adventure game level generation towards the purpose of automatically generating levels that have the properties of the training corpus. towards that unexpected end we still have made available a corpora of video card game levels in an entirely easy to parse format ideal for different machine learning and other game ai research purposes.", "histories": [["v1", "Thu, 23 Jun 2016 21:36:36 GMT  (1142kb,D)", "https://arxiv.org/abs/1606.07487v1", "To appear in proceedings of the 7th Workshop on Procedural Content Generation"], ["v2", "Sun, 3 Jul 2016 20:04:55 GMT  (1142kb,D)", "http://arxiv.org/abs/1606.07487v2", "To appear in proceedings of the 7th Workshop on Procedural Content Generation"]], "COMMENTS": "To appear in proceedings of the 7th Workshop on Procedural Content Generation", "reviews": [], "SUBJECTS": "cs.HC cs.AI cs.LG", "authors": ["adam james summerville", "sam snodgrass", "michael mateas", "santiago onta\\~n\\'on"], "accepted": false, "id": "1606.07487"}, "pdf": {"name": "1606.07487.pdf", "metadata": {"source": "CRF", "title": "The VGLC: The Video Game Level Corpus", "authors": ["Adam James Summerville", "Sam Snodgrass", "Michael Mateas", "Santiago Onta\u00f1\u00f3n"], "emails": ["asummerv@ucsc.edu,", "sps74@drexel.edu,", "michaelm@soe.ucsc.edu,", "santi@cs.drexel.ed"], "sections": [{"heading": "Keywords", "text": "Video Games, Level Design, Procedural Content Generation, Machine Learning, Corpus"}, {"heading": "INTRODUCTION", "text": "For many different video games, levels are one of the critical pieces of game content. They represent the virtual space wherein the majority of player interaction occurs. As such, they represent a very attractive target for Procedural Content Generation (PCG), i.e. the creation of artefacts via an algorithm. Most PCG level creation has been accomplished via human-authored rules from early computer games such as Rogue up through modern games such as No Man\u2019s Sky. A large body of academic work has been performed in this field utilizing classical AI techniques such as constraint satisfaction ((Smith, Whitehead, and Mateas 2010)), Answer Set Programming ((Smith et al. 2012)), Evolutionary Algorithms ((Sorenson and Pasquier 2010)), and others. More recently, statistical AI, i.e. Machine Learning (ML), techniques have been used such as Bayes Nets ((Summerville et al. 2015)), Markov Chains ((Snodgrass and no\u0301n 2013), (Summerville, Philip, and Mateas 2015), (Dahlskog, Togelius, and Nelson 2014)), clustering ((Guzdial and Riedl 2015)), non-negative matrix factorization ((Shaker and Abou-Zleikha 2014)), PCA ((Summerville et al. 2015)), and others. While a large number of different ML techniques have been used they all have one thing in common, they require a training corpus.\nCopyright c\u00a9 2016, Association for the Advancement of Artificial Intelligence (www.aaai.org). All rights reserved.\nTowards that end we have assembled a corpus consisting of 428 levels from 12 games1. These levels exist as parseable text files, along with the corresponding image representation of the level, ideal for machine consumption for either ML PCG or other game AI applications. In the following sections we will first discuss the games in the corpus and the details of the levels included; we will then show a small subset of work that has been done with these levels; and finally we will discuss ways these levels could be used in the future."}, {"heading": "RELATED WORK", "text": "The collection of resources for the creation of a shared corpus is commonplace in fields such as Natural Language Processing (NLP). A large number of corpora exist in the NLP community, but the two most noteworthy are COCA: \u201dthe Corpus of Contemporary American English\u201d ((Davies 1990)) and the Wall Street Journal Corpus ((Paul and Baker 1992)). Similarly, many corpora are available in the machine learning community for a variety of different tasks including image classification ((Krizhevsky, Nair, and Hinton 2016)), hand-writing recognition ((Lecun and Cortes 2016)), and speech-recognition ((Godfrey, Holliman, and McDaniel 1992)).\nMachine learning based approaches for the procedural generation of video game levels have relied on a couple of different data sources: synthetic data, annotated images, and video. While a commonplace activity in many machine learning communities, the only known videogame level PCG to use synthetic data is the work of Shaker and AbouZleikha ((Shaker and Abou-Zleikha 2014)) which used data generated by other generation systems. A number of works have used annotated level images (either annotated by human hand or automatically via image-processing), mostly of Super Mario Bros. ((Summerville, Philip, and Mateas 2015), (Summerville and Mateas 2016), (Snodgrass and no\u0301n 2013), (Snodgrass and no\u0301n 2014), (Dahlskog, Togelius, and Nelson 2014), (Hoover, Togelius, and Yannakakis 2015), (no and Missura 2015)) but occasionally other games such as those from The Legend of Zelda series ((Summerville et al. 2015), (Summerville and Mateas 2015)) or Lode Runner ((Snodgrass and no\u0301n 2014)). The work of (Guzdial and Riedl 2015)\n1The corpus can be found at: https://github.com/TheVGLC/TheVGLC\nar X\niv :1\n60 6.\n07 48\n7v 2\n[ cs\n.H C\n] 3\nJ ul\n2 01\n6\nused Long Play videos of Super Mario Bros. gathered from Youtube to learn the spatial relationships of different sprite groupings."}, {"heading": "DATASETS", "text": "The levels from 12 games are present in the corpus as of the publication of this paper. There are three annotation formats: Tile, Graph, and Vector. A breakdown of the games can be seen in table 1. Most of the games in the corpus are 2D tilebased sidescrolling games which are all annotated with the Tile format, as are the levels from Doom, Doom 2, Mario Kart, and the first quest of The Legend of Zelda. The levels from The Legend of Zelda series which have a room based level structure are also annotated in the Graph format, and the levels from the Doom series can also be found in the Vector format."}, {"heading": "Annotation Formats", "text": "We will now detail the annotation formats. The Tile format is an intuitive format for tile based games, particularly those where reasoning over the space of the game should be done in a tile grid. These tile based levels exist as a two dimensional grid of size w\u00d7h with w being the width and h being the height. Each entry in this grid is annotated by a single character. Along with the w \u00d7 h array for each level there is a JSON file that acts as a legend. Each tile character is an entry in a dictionary named tiles and has an associated array of possible annotation tags, e.g. for Super Mario Bros. the\ntile character for the tile has the tags [solid, ground] and the character for the has the tags [solid,breakable]. The JSON legend file for Super Mario Bros. can be seen in figure 1.\nA section of the annotated version of Level 1-1 of Super Mario Bros. alongside the image it is derived from can can be seen in Figure 2. It should be noted that multiple different images can be mapped to the same tile character, e.g. all enemies are mapped to the same character, \u201cE\u201d, and all solid\nunbreakable tiles (ground, stairs, tree tops, giant mushroom tops) are mapped to the same character, \u201cX\u201d.\nThe Graph annotation format is used for games where the high-level topology should be reasoned about at differently than the low-level structure. Games with discrete room-toroom structures, e.g. The Legend of Zelda, or classic adventure games such as Zork and King\u2019s Quest are well represented by graphs. The graph format we chose was the DOT language used by Graphviz ((Gansner and North 2000)). This format was chosen for 3 reasons:\n\u2022 Easily Parseable - The format is very easily parsed with nodes being represented by <Node ID> [label=\"<Node Label>\"] and edges being represented by <Source ID> -> <Target ID> [label=\"<Edge Label>\"]\n\u2022 Easily Visualized - As part of Graphviz, DOT files can be consumed by the dot program to visualize the graphs\n\u2022 Portable - Because it is a popular, well-documented format it is able to be used by other programs\nAs with the Tile format there is a corresponding JSON file that acts as a legend for each game. The Legend of Zelda legend can be seen below:\n{\"vertices\" :{\"e\" : [\"enemy\" ], \"S\" : [\"switch\" ], \"b\" : [\"boss\" ], \"k\" : [\"key\"], \"K\" : [\"boss key\"], \"I\" : [\"key item\"], \"p\" : [\"puzzle\"], \"s\" : [\"start\"], \"t\" : [\"triforce\"]},\n\"edges\" : { \"S\" : [\"switch locked\" ], \"b\" : [\"bombable\" ],\n\"k\" : [\"key locked\"], \"K\" : [\"boss key locked\"], \"I\" : [\"key item locked\"], \"l\" : [\"soft locked\"], \"S\" : [\"switch locked\"],\n\"s\" : [\"visible\", \"impassable\"]}}\nAdditonally, below we have a section of the DOT file for the first dungeon from The Legend of Zelda, \u201cThe Eagle.\u201d The original annotation and the output of the DOT file can be seen in Figure 3: digraph {0 [label=\"\"] 1 [label=\"e,I\"] 2 [label=\"I\"] ... 17 [label=\"e,k\"] 18 [label=\"p\"] 7 -> 8 [label=\"\"] 8 -> 7 [label=\"\"] ... 3 -> 13 [label=\"b\"] 13 -> 3 [label=\"b\"]}\nThe final annotation format is the Vector format. For this we chose the Scalable Vector Graphics (SVG) format as it is the most readily readable and viewable vector format. Games such as those in the Doom series (which is ostensibly 3D but gameplay exists solely in a 2D plane) are best thought of as line segments (walls, doors, etc.) and objects (enemies, weapons, decorations). The SVG format readily handles line segments and discrete objects can be handled as graphical primitives (circles, rectangles, ellipses). Once more, each game has a corresponding JSON legend, Doom\u2019s can be seen in figure 5.\nIn the legend, the color of the stroke determines the annotation for that line or object primitive. An SVG representation of Doom\u2019s first level can be seen in Figure 4.\nThe annotations explained above are the initial set of annotations we explored. We recognize that there are limitations. For instance, the Tile annotation does not have a tile representation for each enemy, and some other special\ntiles, which results in a loss of information. In the future, we intend to explore more lossless representations, including more expressive tile sets and ontologies for those tile sets, allowing for more complete representations of the levels. Additionally, the original map images are included in the corpus to allow users to create their own annotations."}, {"heading": "TOOLS", "text": "Along with the levels, we have also included tools that we have used as part of processing. These include a tile based platformer A\u2217 solver and a parser and rasterizer for Doom WAD files. The platformer solver takes in a JSON file that acts as a legend (telling it which tiles are solid) as well as the dynamics of the game (what does a jump arc look like) and produces paths through a given level. The Doom parser and rasterizer take in WAD files (the data format for Doom and Doom-likes) and produces either the SVG or tile based levels found in the corpus."}, {"heading": "POTENTIAL USAGE", "text": "In hope of sparking future research, below are some potential uses of the VGLC."}, {"heading": "Corpora Based Procedural Content Generation", "text": "This is the most obvious use, or at least the most common use for this work so far. The Tile format is set up in a way where nearly any text generation based approach (Markov chains, recurrent neural networks, etc.) can produce results, but given their grid based nature they are also translatable into a form that can easily be consumed for image based methods (Markov random fields, convolutional neural networks, etc.). The Graph could be used for graph\ngrammar learning or other graph based approaches (spectral graph analysis, relational learning). The levels can also be processed such as in the work of London\u0303o and Missura ((no and Missura 2015)) or Summerville and Mateas ((Summerville and Mateas 2016)) where simulated agents are run through levels to determine how a player could actually traverse through the levels. To our knowledge, the only games to have been used for corpora based generation are Super Mario Bros., Kid Icarus, The Legend of Zelda, and Lode Runner meaning any of the other games are ripe for generation."}, {"heading": "Design Analysis", "text": "A large amount of PCG work has relied on assumptions about successful design decisions, but the levels from these games represent actual examples of successful design decisions. Dahlskog and Togelius ((Dahlskog and Togelius 2012)) performed an analysis on 20 of the levels from Super Mario Bros. to find design patterns that could be used for PCG research, but even in the Super Mario Bros. domain, this corpus contains an additional 34 levels to be analyzed. Similarly, Dormans ((Dormans 2010)) performed an analysis on the mission and physical structure of a level from The Legend of Zelda: Twilight Princess, and while none of the 3D Zelda games are represented in this corpus, there are 48 levels from the 2D games of the series that could be analyzed. Beyond those series, the 3 other games could be compared and contrasted with the closer to saturated Super Mario Bros."}, {"heading": "Style Transfer", "text": "Along those lines, we do not know of any work that has successfully transferred level design style across different games. All work has focused on a single game or series, and when work has included multiple games the work has always been partitioned. Following the work of Gatys et al. ((Gatys, Ecker, and Bethge 2015)) there has been an interest in applying different artistic styles to images, similarly, we imagine that an interesting avenue for future work would be one that could reimagine levels of one game in the style of another, or a user could sketch the skeleton of a level and in turn generate variants based on different game styles."}, {"heading": "CONCLUSIONS AND FUTURE WORK", "text": "We present this corpus in hopes of helping the community. Each group of researchers that have used corpora based machine learning approaches have needed to reinvent this, admittedly, not altogether exciting wheel, which is why we expect this work to be adopted by the community so that focus can be placed on more exciting and innovative work. The VGLC is already available online (https://github.com/TheVGLC/TheVGLC), ready to use. Furthermore, we encourage researchers to contribute additional games and tools to this corpus, to make it become more useful to the community."}], "references": [{"title": "Patterns and procedural content generation: Revisiting mario in world 1 level 1", "author": ["Dahlskog", "S. Togelius 2012] Dahlskog", "J. Togelius"], "venue": "In Proceedings of the First Workshop on Design Patterns in Games", "citeRegEx": "Dahlskog et al\\.,? \\Q2012\\E", "shortCiteRegEx": "Dahlskog et al\\.", "year": 2012}, {"title": "Linear levels through n-grams", "author": ["Togelius Dahlskog", "S. Nelson 2014] Dahlskog", "J. Togelius", "M.J. Nelson"], "venue": "In Proceedings of the 18th International Academic MindTrek Conference", "citeRegEx": "Dahlskog et al\\.,? \\Q2014\\E", "shortCiteRegEx": "Dahlskog et al\\.", "year": 2014}, {"title": "An open graph visualization system and its applications to software engineering. SOFTWARE - PRACTICE AND EXPERIENCE", "author": ["Gansner", "E.R. North 2000] Gansner", "S.C. North"], "venue": null, "citeRegEx": "Gansner et al\\.,? \\Q2000\\E", "shortCiteRegEx": "Gansner et al\\.", "year": 2000}, {"title": "A neural algorithm of artistic style", "author": ["Ecker Gatys", "L.A. Bethge 2015] Gatys", "A.S. Ecker", "M. Bethge"], "venue": "CoRR abs/1508.06576", "citeRegEx": "Gatys et al\\.,? \\Q2015\\E", "shortCiteRegEx": "Gatys et al\\.", "year": 2015}, {"title": "Switchboard: telephone speech corpus for research and development", "author": ["Holliman Godfrey", "J.J. McDaniel 1992] Godfrey", "E.C. Holliman", "J. McDaniel"], "venue": "In Acoustics,", "citeRegEx": "Godfrey et al\\.,? \\Q1992\\E", "shortCiteRegEx": "Godfrey et al\\.", "year": 1992}, {"title": "Toward game level generation from gameplay videos", "author": ["Guzdial", "M. Riedl 2015] Guzdial", "M.O. Riedl"], "venue": "In Proceedings of the FDG workshop on PCG in Games", "citeRegEx": "Guzdial et al\\.,? \\Q2015\\E", "shortCiteRegEx": "Guzdial et al\\.", "year": 2015}, {"title": "Composing video game levels with music metaphors through functional scaffolding", "author": ["Togelius Hoover", "A.K. Yannakakis 2015] Hoover", "J. Togelius", "G.N. Yannakakis"], "venue": "In ICCC Workshop on CCG", "citeRegEx": "Hoover et al\\.,? \\Q2015\\E", "shortCiteRegEx": "Hoover et al\\.", "year": 2015}, {"title": "CIFAR-10 and CIFAR-100", "author": ["Nair Krizhevsky", "A. Hinton 2016] Krizhevsky", "V. Nair", "G. Hinton"], "venue": null, "citeRegEx": "Krizhevsky et al\\.,? \\Q2016\\E", "shortCiteRegEx": "Krizhevsky et al\\.", "year": 2016}, {"title": "The MNIST database of handwritten digits", "author": ["Lecun", "Y. Cortes 2016] Lecun", "C. Cortes"], "venue": null, "citeRegEx": "Lecun et al\\.,? \\Q2016\\E", "shortCiteRegEx": "Lecun et al\\.", "year": 2016}, {"title": "Graph grammars for super mario bros levels", "author": ["no", "S.L. Missura 2015] no", "O. Missura"], "venue": "In FDG workshop on PCG in Games", "citeRegEx": "no et al\\.,? \\Q2015\\E", "shortCiteRegEx": "no et al\\.", "year": 2015}, {"title": "The design for the wall street journal-based csr corpus", "author": ["Paul", "D.B. Baker 1992] Paul", "J.M. Baker"], "venue": null, "citeRegEx": "Paul et al\\.,? \\Q1992\\E", "shortCiteRegEx": "Paul et al\\.", "year": 1992}, {"title": "Alone we can do so little, together we can do so much", "author": ["Shaker", "N. Abou-Zleikha 2014] Shaker", "M. AbouZleikha"], "venue": "AIIDE", "citeRegEx": "Shaker et al\\.,? \\Q2014\\E", "shortCiteRegEx": "Shaker et al\\.", "year": 2014}, {"title": "A case study of expressively constrainable level design automation tools for a puzzle game. In FDG", "author": ["Smith"], "venue": null, "citeRegEx": "Smith,? \\Q2012\\E", "shortCiteRegEx": "Smith", "year": 2012}, {"title": "Tanagra: a mixed-initiative level design tool. In FDG", "author": ["Whitehead Smith", "G. Mateas 2010] Smith", "J. Whitehead", "M. Mateas"], "venue": null, "citeRegEx": "Smith et al\\.,? \\Q2010\\E", "shortCiteRegEx": "Smith et al\\.", "year": 2010}, {"title": "Generating maps using markov chains. In AIIDE", "author": ["Snodgrass", "S. n\u00f3n 2013] Snodgrass", "S.O. n\u00f3n"], "venue": null, "citeRegEx": "Snodgrass et al\\.,? \\Q2013\\E", "shortCiteRegEx": "Snodgrass et al\\.", "year": 2013}, {"title": "Experiments in map generation using markov chains. In FDG", "author": ["Snodgrass", "S. n\u00f3n 2014] Snodgrass", "S.O. n\u00f3n"], "venue": null, "citeRegEx": "Snodgrass et al\\.,? \\Q2014\\E", "shortCiteRegEx": "Snodgrass et al\\.", "year": 2014}, {"title": "Towards a generic framework for automated video game level creation", "author": ["Sorenson", "N. Pasquier 2010] Sorenson", "P. Pasquier"], "venue": "In Applications of Evolutionary Computation", "citeRegEx": "Sorenson et al\\.,? \\Q2010\\E", "shortCiteRegEx": "Sorenson et al\\.", "year": 2010}, {"title": "Sampling hyrule: Multi-technique probabilistic level generation for action role playing games. In AIIDE", "author": ["Summerville", "A.J. Mateas 2015] Summerville", "M. Mateas"], "venue": null, "citeRegEx": "Summerville et al\\.,? \\Q2015\\E", "shortCiteRegEx": "Summerville et al\\.", "year": 2015}, {"title": "Super mario as a string: Platformer level generation via lstms", "author": ["Summerville", "A. Mateas 2016] Summerville", "M. Mateas"], "venue": null, "citeRegEx": "Summerville et al\\.,? \\Q2016\\E", "shortCiteRegEx": "Summerville et al\\.", "year": 2016}, {"title": "The learning of zelda: Data-driven learning of level topology. In FDG", "author": ["Summerville"], "venue": null, "citeRegEx": "Summerville,? \\Q2015\\E", "shortCiteRegEx": "Summerville", "year": 2015}, {"title": "Mcmcts pcg 4 smb: Monte carlo tree search to guide platformer level generation", "author": ["Philip Summerville", "A. Mateas 2015] Summerville", "S. Philip", "M. Mateas"], "venue": "AIIDE", "citeRegEx": "Summerville et al\\.,? \\Q2015\\E", "shortCiteRegEx": "Summerville et al\\.", "year": 2015}], "referenceMentions": [{"referenceID": 17, "context": "Machine Learning (ML), techniques have been used such as Bayes Nets ((Summerville et al. 2015)), Markov Chains ((Snodgrass and n\u00f3n 2013), (Summerville, Philip, and Mateas 2015), (Dahlskog, Togelius, and Nelson 2014)), clustering ((Guzdial and Riedl 2015)), non-negative matrix factorization ((Shaker and Abou-Zleikha 2014)), PCA ((Summerville et al.", "startOffset": 69, "endOffset": 94}, {"referenceID": 17, "context": "2015)), Markov Chains ((Snodgrass and n\u00f3n 2013), (Summerville, Philip, and Mateas 2015), (Dahlskog, Togelius, and Nelson 2014)), clustering ((Guzdial and Riedl 2015)), non-negative matrix factorization ((Shaker and Abou-Zleikha 2014)), PCA ((Summerville et al. 2015)), and others.", "startOffset": 241, "endOffset": 266}, {"referenceID": 17, "context": "((Summerville, Philip, and Mateas 2015), (Summerville and Mateas 2016), (Snodgrass and n\u00f3n 2013), (Snodgrass and n\u00f3n 2014), (Dahlskog, Togelius, and Nelson 2014), (Hoover, Togelius, and Yannakakis 2015), (no and Missura 2015)) but occasionally other games such as those from The Legend of Zelda series ((Summerville et al. 2015), (Summerville and Mateas 2015)) or Lode Runner ((Snodgrass and n\u00f3n 2014)).", "startOffset": 303, "endOffset": 328}], "year": 2016, "abstractText": "Levels are a key component of many different video games, and a large body of work has been produced on how to procedurally generate game levels. Recently, Machine Learning techniques have been applied to video game level generation towards the purpose of automatically generating levels that have the properties of the training corpus. Towards that end we have made available a corpora of video game levels in an easy to parse format ideal for different machine learning and other game AI research purposes.", "creator": "LaTeX with hyperref package"}}}