{"id": "1610.00086", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "1-Oct-2016", "title": "Consistency Ensuring in Social Web Services Based on Commitments Structure", "abstract": "web external service relevance is one of the most significant current discussions in information sharing technologies and so one of the examples of service oriented processing. to ensure accurate execution of web services operations, it must be adaptable sufficiently with policies of the social networks in which it signs up. this adaptation implements using controls called'commitment '. broadly this paper describes commitments structure and existing research about commitments and social democratic web services, then suggests an algorithm for consistency of commitments in social web services. as worth regards however the commitments may be executed concurrently, a key challenge in web virtual services execution based on tied commitment structure is consistency ensuring in execution time. the purpose of this research is providing an algorithm for consistency ensuring between web services operations based on commitments structure.", "histories": [["v1", "Sat, 1 Oct 2016 04:59:05 GMT  (1630kb)", "http://arxiv.org/abs/1610.00086v1", "International Journal of Computer Science and Information Security (IJCSIS), Vol. 14, No. 8, August 2016. arXiv admin note: text overlap witharXiv:1412.0152"]], "COMMENTS": "International Journal of Computer Science and Information Security (IJCSIS), Vol. 14, No. 8, August 2016. arXiv admin note: text overlap witharXiv:1412.0152", "reviews": [], "SUBJECTS": "cs.SI cs.AI", "authors": ["marzieh adelnia", "mohammad reza khayyambashi"], "accepted": false, "id": "1610.00086"}, "pdf": {"name": "1610.00086.pdf", "metadata": {"source": "CRF", "title": "Consistency Ensuring in Social Web Services Based on Commitments Structure", "authors": ["Marzieh Adelnia", "Mohammad Reza Khayyambashi"], "emails": ["adelniya_m@yahoo.com", "m.r.khayyambashi@eng.ui.ac.ir"], "sections": [{"heading": null, "text": "discussions in information sharing technologies and one of the examples of service oriented processing. To ensure accurate execution of web services operations, it must be adaptable with policies of the social networks in which it signs up. This adaptation implements using controls called \u201cCommitment\u201d. This paper describes commitments structure and existing research about commitments and social web services, then suggests an algorithm for consistency of commitments in social web services. As regards the commitments may be executed concurrently, a key challenge in web services execution based on commitment structure is consistency ensuring in execution time. The purpose of this research is providing an algorithm for consistency ensuring between web services operations based on commitments structure.\nIndex Terms\u2013 Commitment, Social Commitment, Consistency,\nSocial Network, Social Web Service, Web Service.\nI. INTRODUCTION\nWeb is the largest transformable-information framework. Many research has been accomplished about the web and related technologies in the past two decades. Web 1.0 as a web of cognition, web 2.0 as a web of communication, web 3.0 as a web of co-operation and web 4.0 as a web of integration are introduced as four generation of the web since the advent of the web.\n\u201cWeb 2.0 was presented in 2004 as a read-write web. The technologies of web 2.0 allow assembling and handling large global crowds with common interests in social interactions\u201d [1].\nToday, web services have become one of the most important information sharing technologies on the web and one of the examples of service oriented processing. A Web service is a software designed to support interoperable machine-to-machine interaction over a network. It has an interface described in a format that is processed by machine. Other systems communicate with the web service in a format of SOAP messages, typically conveyed using HTTP with an XML serialization in conjunction with other web-related standards. In fact a web service is an abstract notion that must be implemented by a concrete agent. The agent is the base\ncomponent of software or hardware that sends and receives messages, while the service is the resource characterized by the abstract set of functionality that is provided. Although if the agent changes, the web service don\u2019t change. According to the W3C, a web service \u201cis a software application identified by a URI, whose interfaces and binding are capable of being defined, described, and discovered by XML artifacts and supports direct interactions with other software applications using XML based messages via Internet-based applications\u201d.\nIn recent years, many users have registered in various social networks that use web services. Regarding the growth of social networks and the tendency of users for registering on them, web services can be studied from a social computing viewpoint. Social computing is an area of computer science that is concerned with the intersection of social behavior and computational systems. Social computing is basically the use of a computer for social goals. A prime example for these processes is applications based on web 2.0 like social networks and blogs.\nWith merging service oriented computing and social computing, social web services are produced that are more complicated than regular web services. To ensure accurate execution of web services operations, they must be adaptable with the policies of the social networks in which they sign up. This adaptation is implemented using controls called \u201cCommitment\u201d. In other words, transactions between web services components and social networks lead to the creation, management and use of commitments [2].\nAs regards to the concurrent execution of social web services and commitments in a social network, consistency of commitments is one of the most important challenges in this topic. In previous research [3], commitments structure is analyzed and based on their attributes classified. In this paper, the algorithm is designed. In addition to this, supplemental commitments are defined to optimizing the social web services operation and the algorithm is checked with Facebook dataset.\n69 https://sites.google.com/site/ijcsis/ ISSN 1947-5500\nII. BACKGROUND\nMany research exists about social web services, commitments and consistency in web services. This section provides an overview on these topics. The section is partitioned into three groups and each group is assigned to one topic.\nA. Overview on Social Web Services. The synergy between social computing and service oriented computing has eventuated into social web services. Existing research focuses on adoption of web services to social networks.\nIn 2010, Maaradji proposed a social constructor named \u201cSoCo\u201d that suggests and helps users for next their operations (like selecting specific web service). So users may like to perform an operation that their friends have done in social networks [4].\nIn the other research in 2011, Maamar et al. categorized\nsocial networks to three groups including [5]:\n Collaboration social networks. \u201cBy emerging their respective functionalities, social Web services have\nthe capacity to work together and response to complex user requests. In fact, a social Web service manages its own network of collaborators\u201d.\n Substitution social networks. \u201cAlthough social web services compete against each other, they can still\nhelp each other when they fail as long as they offer similar functionalities.\u201d\n Competition social networks. \u201cSocial web services compete against each other when they offer similar\nfunctionalities. Their non-functional properties differentiate them when users\u2019 non-functional requirements must be satisfied.\u201d\nMaamar also purposed an approach for weaving social networks operation using web services. The results of his research lead to creating social web services [6].\nIn 2013, Maamar et al. studied the social qualities that web services present at run time to identify and assign adequate social qualities to communities that host these web services. They discussed the binding of communities of web services to social qualities like selfishness. The quality of communities is presented based on how web services respond to the scenarios like collaboration, delegation, competition and coopetition [7].\nB. Overview on commitments\nFornara and Colombetti are the first who studied and used commitments. They defined a general formula for commitments and used them for speech evaluation [8].\nIn 2003, Grosof et al. proposed a rule-based method for representation of e-contracting. It is named \u201cSweetDeal\u201d and uses XML rules and ontologies for simulating business\n1 Commitment and Argument Network 2 Commitment - based Service Oriented Architecture\ncontracting. In SweetDeal approach, a business contract is a set of activities that can be decomposed into sub-activities. The terms of contracts use a set of commitments to execute operation by agents. The algorithm uses a coordination method to manage agent activities [9].\nIn 2005, Bentahar et al. presented a new persuasion dialogue game for agent communication. They modeled dialogue game by a framework based on social commitments and arguments, named CAN1. CAN framework allows to model dynamic communication in levels of activities that agents apply to commitments and in levels of argumentation relations. This dialogue game is specified by indicating its entry, dynamic and exit conditions. They proposed a set of algorithms for the implementation of the persuasion protocol and discussed their termination, complexity and correctness [10].\nIn 2006, Carabelea et al. studied the one of the main challenge in multi agent system. This challenge was the coordination ensuring of autonomous agent in open heterogeneous system. They used social commitments to solve this challenge. In fact they combined two models of coordinating agent, commitment-based interactions and organizations. They described how one can use social commitments to represent the expected behavior of an agent playing a role in an organization. They defined an organizational structure as a collection of roles, where a role is considered to be the subject of different types of social commitments and policies [11].\nIn 2008, Narendra defined a contract as a collection of the participant\u2019s commitments toward each other. The interactions that take place in a contract are understood in terms of how they operate on the participant\u2019s commitments. The operation on a commitment cause its state changes according to a life cycle [12].\nIn 2009, Singh et al. advocated for examining ServiceOriented Architecture (SOA) principles from a commitment perspective. As regards \u201cexisting service-oriented architectures are formulated in terms of low level abstractions far removed from business services\u201d, In CSOA2, the components are business services and the connectors are patterns, considered as commitments, which protect key elements of service engagements. Each participant is implemented as an agent; interacting agents perform a service engagement by creating and elaborating commitments to one another [13].\nIn 2010, El-Menshawy et al. showed that current methods fail to capture the meaning of interactions that arise in reallife business scenarios and proofed commitments increase flexibility and intuitively in protocols. They presented an exploder definition for commitments for using in a larger level. In their definition, a new grammar named \u201cComputation Tree Logic\u201d (CTL) and terms like \ud835\udc46\ud835\udc36\ud835\udc43 for unconditional commitments and \ud835\udc46\ud835\udc36\ud835\udc36 for conditional\n70 https://sites.google.com/site/ijcsis/ ISSN 1947-5500\ncommitments are added. CTL is a logical tree and commitments are the nodes of tree that are organized in the tree base on logical regulation in transaction execution time [14].\nIn 2012, Maamar et al. implemented social web services using commitments. They presented the architecture implementing social web services installation in terms of monitoring level, social level and service level. They introduced \u201cResponsibility\u201d concept in social web services and based on this concept, designed commitments for responsibility of social web services [2].\nIn 2013, Maamar et al. presented a set of responsibilities for social web services based on commitments and defined requirement commitments for responsibilities. A key challenge in this research is consistency ensuring between commitments in social web services that this paper has proceeded it [15].\nIn 2014, Sultan et al. merged knowledge and social commitments and presented a new framework to model and alter stochastic multi-agent systems. They defined a new multi model logic called PCTLkc 1. The PCTLkc merge probabilistic logic of knowledge (PCTLK) and probabilistic logic of commitments (PCTLC) [16].\nIn 2015, Nardi et al. proposed a commitment-based account of the concept of service that uses a core reference ontology [17]. This mechanism called UFO-S2. UFO consists of three base element as follows:\n1. UFO-A. It is an ontology of objects. 2. UFO-B. It is an ontology of event. 3. UFO-C. It is an ontology of social entities based\non UFO-A and UFO-B.\nC. Overview on Consistency in Web Services\nIn 2004, Heckel et al. discussed an approach to model consistency management for component-based architectures and its application to web service architectures. They proposed an algorithm that receives activity diagram of web service and translate it into CSP3. The CSP analyzes it for deadlock freedom [18].\nIn 2005, Greenfield et al. proposed a protocol to checking dynamic consistency. Their protocol can be run at the termination of a service-based application. The key of their work is establishing a relationship between internal service states, messages and application-level protocols. This protocol is based on the way that the reflection and transfer of critical state within messages links the local consistency expressions for each of the participating services. It should let verify global consistency at termination without needing global consistency expressions and an overall coordinator to evaluate them [19].\n1 Probabilistic Computation Tree Logic of Knowledge and Commitments 2 Unified Foundational Ontology - Service 3 Communicating Sequential Processes\nIn 2008, Choi et al. suggested a mechanism to ensure consistency for web services transactions. This mechanism recognizes inconsistent states of transactions and replaces them with consistent states. Mechanism operation is designed by a waiting graph of web services transactions and a coordinator that check waiting graph. If coordinator is certified about deadlock lack, allows transaction to execute. Also if deadlock occurred, coordinator recognizes a safe state using waiting graph and replaces it instead deadlock state. Based on this mechanism, WTDP4 is designed [20].\nIn 2011, Shan-liang discussed a model for transactions processing coordination based on BPEL. In this model a coordinator is used for web services transactions and if deadlock occurred, coordinator rollbacks operations [21].\nIn 2011, also Hemel et al. studied consistency checking of web applications as a problem. Regards to parts of an application are defined with separate domain-specific languages, which are not checked for consistency with the rest of the application, they presented a declarative, rulebased approach to linguistic integration and consistency checking in web application. They argued that domainspecific languages should be designed from the ground up with static verification and cross-aspect consistency checking in mind, providing linguistic integration of domain-specific sublanguages [22].\nIn 2014, Adelnia et al. proposed an approach for commitment classification based on commitment structure. The algorithm for consistency ensuring between commitments is designed based on attributes of commitments structure [3].\nIII. COMMITMENTS DEFINITION\nThis section describes commitments. First commitments types are explained then the commitments structure are expanded. In this section the responsibilities are required in social networks, are presented and their commitments are defined and expounded.\nA. Commitments Types\nTwo types of commitments are defined [15]: 1. Social Commitments: Responsibilities bonded by one agent to another agent. Agents are usually the\nweb services in social networks. Social commitments guarantee the proper use of the social networks in which they sign up. 2. Business Commitments: Arise when social web services take part in compositions and guarantee the\nproper development of composite web services in response to users\u2019 requests.\n4 Web service Transaction Dependency management Protocol\n71 https://sites.google.com/site/ijcsis/ ISSN 1947-5500\nB. Commitments Structure\nMaamar et al. suggested a standard formula for social commitments based on Fornara\u2019s formula. Fornara and Colombetti note that \u201c...intuitively a social commitment is made by an agent (the debtor) to another agent (the creditor), that some fact holds or some action will be carried out (the content)\u201d. In addition to this formula, Maamar also presented a list of responsibilities for social web services. A commitment structure is defined as: \ud835\udc36\ud835\udc45\ud835\udc52\ud835\udc60\ud835\udc5d\ud835\udc56 (debtor, creditor, content [|condition]). Condition parameter is optional [2].\nSocial commitments defined by Maamar et al. are listed\nas follows [15]:\n1. Resp1. \u201cCollecting any detail (d) in a social network would require indicating the purpose (p) of this\ncollection to this detail\u2019s owner (o)\u201d. This responsibility formula can be represented as: Permission(Collect(d, o, valid(p))). The commitment of this responsibility is defined as: CResp1 ( swsi, swsj ,Collect( d, swsj)| valid(pd)).\n2. Resp2. \u201cPosting any detail (d) on a social network should be correct.\u201d This responsibility formula can\nbe represented as Obligation( Post( d, true)). The commitment of this responsibility is defined as: CResp2 (swsi, snauth, Post( dself )).\n3. Resp3. \u201cCollecting any detail (d) from a social network should not be tampered after information\ncollection.\u201d This responsibility can be represented as Obligation( not-Tamper( d, o, collection (d))) and its commitments is defined as: CResp3 (swsi, swsj, notTamper( dpublic, swsj ).\n4. Resp4. \u201cSigning off from a social network would require the completion of all the pending assignments\n(ass). It can be represented as Permission(Signoff(status(ass))). Sign-off is the action and status is a function that assesses the progress (e.g., ongoing, complete, and failed) of ass.\u201d And the commitment for it is defined as: CResp4(swsi, snauth, Sign-off()|status(ass)).\n5. Resp5. \u201cRevealing any public detail (d) to the nonmembers (not(m)) of a social network should not be\nauthorized indefinitely, represented as Obligation(not-Reveal(d, o, m, collection(d))). notReveal is the action, m corresponds to the nonmembers of a social network, and collection is a function that checks if collecting d is approved in compliance with Resp1.\u201d The commitment of this responsibility defined as: CResp5 (swsi, snauth, notReveal(dpublic, o, nm)|collection(dpublic)).\nBusiness commitments structure are defined like social\ncommitments. They are expounded in [15].\nIV. SUPPLEMENTAL COMMITMENTS\nAs for increasing the variety of activities in social\nnetworks, commitments may be added or changed. In this\nsection, two commitments that can optimize and complete\nsocial web services operation, are added and described as\nfollows:\n1. Resp6. Sharing any information in a social network\nwould require specifying the goal of this action. This\nresponsibility can be defined as:\nPermission(Share(Info, o, valid(p))) and its\ncommitment is: CResp6 (swsi, swsj, Share (Info, swsj)|valid(pInfo)). Permission is the function that checks the goal, Share is the action of social web\nservice, Info is the information which would be\nshared in social network like a video or a text from\nother social networks, o is the writer of info like a\nsocial web service, valid is the method that checks\npurpose of social web service and p is the purpose of\nsocial web service. This responsibility checks the\ngoal of social web service and if its goal is valid,\nallows to social web services to share information on\nan account.\n2. Resp7. Posting any activity of user in other social\nnetworks must be correct. This responsibility can be\ndefined as: Obligation( PostActivity( act, true)) and\nits commitment is: CResp7( swsi, PostActivity( act, swsj)| valid(pact)). PostActivity is the action of social web service, act is the activity of the user in other\nsocial networks, swsi is the social web service that posts the activity of user in a social network and\nvalid(pact) is the function that checks purpose of this action and if it is valid, allows the social web service\nto be execute.\nV. COMMITMENTS CLASSIFICATION\nFor achieving consistency of commitments, commitments\nare classified based on their effect on databases and\ninformation of social network into [3]:\n1. Reader Commitments: \u201cthis category of\ncommitments don\u2019t change the information of\ndatabase and social network and usually act as an\ninformation collector for other social networks or\npurpose checker in social web services. Note that\nthe goal of social web services that use reader\ncommitments must be valid. Also privacy must be\nprotected.\u201d\n2. Writer Commitments: \u201cunlike reader commitments,\nthis category can change the information of\ndatabase and social networks. They share\nInformation and post activity on other social\nnetworks. So writer commitments are more effective\nthan reader commitments in social web service\ntransactions. Like reader commitments, in writer\ncommitments, privacy must be controlled.\u201d\nThis classification of commitments is showed in Fig.1.\n72 https://sites.google.com/site/ijcsis/ ISSN 1947-5500\nVI. CONSISTENCY GUARANTOR ALGORITHM\nAs farther described, the action of the social web service\nis implemented using commitments and as regards both\nreader and writer commitments may be executed on social\nnetworks concurrently, a major problem that must be\nconsidered is consistency ensuring of commitments in social\nweb services.\nTo designing the consistency guarantor algorithm, three\nconcepts are considered as follows:\n1. Friend: Commitments are Friend if they are reader\ncommitments. So they are consistent in all states and\ndatabase is in the safe state. It can be formulated as:\nisReader(Ci) \u02c4 isReader(Cj) \u2192 IsFriend(Ci \u060c Cj). These commitments may collect the information of social networks or check the goal of social web services. For example if CResp1 and CResp3 are executed on an account in a social network, they are Friend.\nFamily: Commitments are Family if they are writer commitments. In fact they effect on the state of database and information. It can be formulated as: isWriter(Ci) \u02c4 isWriter(Cj) \u2192 IsFamily(Ci \u060c Cj). These commitments may share the information of social networks. For example if execute two or more CResp2 concurrently on an account in a social network, they are Family.\n2. Strange: If commitments neither Friend nor Family are Srange. In this state, commitments may be\nreader or writer. It can be formulated as: isReader(Ci) \u02c4 isWriter(Cj) \u2192 IsStrange(Ci \u060c Cj). For example if CResp1 and CResp2 are executed concurrently on an account in a social network they are Strange.\nSince writer commitments impress database and\ninformation, so if arrival commitments of the social web\nservices and active commitment that is running, be Family or\nStrange, conflict may occur. In this state, consistency must\nbe guaranteed and if deadlock happened it would be removed\nand system needs to be recovered.\nSuppose that a web service signs up in a social network,\nfirst authority component recognizes it. If the web service is\nvalid in social network, it can sign up in the social network\nand a specific responsibility is assigned it. Also its\ncommitments will be created based on its responsibility. This\ntime, consistency checking between commitments is critical.\nBecause of another commitment is executing on same\naccount in social network, they may be inconsistent and\nconflict may happen. To guarantee consistency, first,\ncondition of current commitment is checked towards active\ncommitment that is executing. Three conditions may occur\nbetween concurrent commitments on an account in a social\nnetwork:\n1. IsFriend: If current commitment that has arrived\nrecently and active commitment that is running are\nFriend, both can be executed concurrent. They are\nconsistent because they don\u2019t change the\ninformation.\n2. IsFamily: If current commitment that has arrived\nrecently and active commitment that is running are\nFamily, current commitment would wait until active\ncommitment execution is finished. Regards to both\ncommitments change the information and database,\nif they are executed concurrently, inconsistency may\nhappen.\n3. IsStrange: If current commitment that has arrived\nrecently and active commitment that is running are\nStrange, current commitment would wait until the\nexecution of active commitment is finished. In this\nstate if reader commitment reads the information\nthat may be changed by writer commitment, conflict\nmay occur.\nThe three states are described, are summarized in Fig.2.\nSometimes several commitments can be created\nconcurrently in a time slice. In this state, commitments can\nbe executed based on two policy:\n73 https://sites.google.com/site/ijcsis/ ISSN 1947-5500\n1. FCFS1: Commitments are serviced based on\ncreation time in social network. This policy is\nfairness. In this policy commitments are pushed in\nwaiting queue based on creation time and next\ncommitment is selected from front of queue. So all\ncommitments are created, can be executed.\nNote that if selected commitment from waited\ncommitments is reader, algorithm can be executed as follows:\n1. In FCFS policy, all reader commitments in front of\nwaiting queue, are selected for execution, because they\nare Friend and they can be executed concurrently.\nVII. IMPLEMENTATION\nThis paper uses the application designed for suggestion\nalgorithm in previous research [3]. The user interface\napplication is shown in Fig 3. In this application five sections\nhave been considered as follows:\n LinkedIn: This section simulates LinkedIn social\nnetwork. This social network receives some\ninformation like contact list from Facebook social\nnetwork.\n YouTube: This section simulates YouTube social\nnetwork operation. In this simulation, the user can\nshare the videos on Facebook social network.\n1 First Come, First Serve\n SoundCloud: It is a music social network. Some\nactivity like play music, like and share music on\nother social network can be done in it.\n Facebook: This section is central social network in\nthis implementation that communicates with other\nsocial networks. The user activities in other social\nnetwork can receive and display in this section.\nWhen social web services sign up in Facebook\nsocial network, commitments are created and\nconsistency guarantor algorithm is executed.\n Commitments Monitoring: For monitoring the state\nof the commitments in any time, this section is\ndesigned and shows the number and state of all\n74 https://sites.google.com/site/ijcsis/ ISSN 1947-5500\ncommitments for all active social web services in a\nsocial network.\nThe algorithm is checked with Facebook wall posts\ndatasets. Experiments show that the algorithm is efficient for\nensuring consistency between commitments in social web\nservices. Also based on the experiments, the number of\nFriend, Family and Strange states are completely haphazard\nand depend on the time and order of incoming social web\nservices in social networks. Figure 4 illustrates this result.\nAlso the number of commitments that are waited in queue\nshowed in Figure 5.\nWhen a web service signs up in a social network, if it is\nauthenticated by an authority component, it will be registered\nin the social network and changed to a social web service.\nBased on its operation, one or several responsibilities are\nassigned to this social web service. For each responsibility,\ncommitments are defined that can accomplish tasks of social\nweb services. For a user account in social networks, if no\ncommitment is active, commitments of responsibility could\nbe active and execute their operations. But if another\ncommitment is active on this user account, consistency must\nbe protected. Thus the algorithm checks the state of current\ncommitments towards active commitments and decides\nwhether commitments should be executed or waited.\nFor example in Fig.3, user activity are as follows:\n1. Share a video on Facebook social network\n2. Like a music on SoundCloud social network\n3. Retrieve some information from Facebook Social\nnetwork for LinkedIn account\n75 https://sites.google.com/site/ijcsis/ ISSN 1947-5500\nThe order of commitment execution is:\n1. CResp6 2. CResp2 3. CResp7 4. CResp1\nFirst user shares a video on Facebook social network and\nthen like a music on SoundCloud social network and collect\ninformation from his account of Facebook. If these actions\nare executed in a time slice, consistency must be guaranteed.\nRegards to first CResp6 and CResp2 for information sharing are created, first, goal of social web service is checked and then\nsocial web service shares the video. Also CResp7 and CResp1 have been created and are waiting for execution. Because of\nCResp2 is active commitment, CResp7 and CResp2 are Family. Also CResp2 and CResp1 are Strange. When CResp2 is finished, CResp7 is selected from waiting commitments and will be executed. After CResp7 execution is finished, CResp1 is selected from waiting queue and will be executed. Some of results\nshowed in Table 1.\nVIII. CONCLUSION\nThis study set out to present an algorithm to ensure the\nconsistency of commitments in social web services. Also two\ncommitments are considered and added to base commitments\nfor optimizing. In consistency guarantor algorithm, first,\ncommitments are classified into two groups containing\nReader Commitments and writer commitments. Based on this\nclassification and inspiration of main concepts in social\nnetworks like \u201cFamily\u201d and \u201dFriend\u201d, the algorithm is\ndesigned. If commitments don\u2019t change the information and\ndatabase, they are called Reader Commitments and if they\naffect and change information and database, they are called\nWriter Commitment. Commitments can have three states into\neach other. They may be Friend, Family or Strange based on\ntheir operations. The algorithm manages different states that\n76 https://sites.google.com/site/ijcsis/ ISSN 1947-5500\nmay occur in commitment execution of a social web service\noperation. Facebook dataset is used for algorithm checking.\nThere are several research directions in future works of\nthis paper. One of the future works is weaving suggested\nalgorithm for consistency ensuring in business commitments.\nAlso this algorithm must be checked on the professional\nsocial networks and other social networks with special\nperformance."}], "references": [{"title": "EVOLUTION OF THE WORLD WIDE WEB: FROM WEB 1.0 TO WEB 4.0", "author": ["S. Aghaei", "M.A. Nematbakhsh", "H. Khosravi Farsani"], "venue": "International Journal of Web & Semantic Technology (IJWesT), vol. 3, no. 1, January 2012.", "citeRegEx": "1", "shortCiteRegEx": null, "year": 2012}, {"title": "Specifying and Implementing Social Web Services Operation using Commitments", "author": ["Z. Maamar", "N. Faci", "M. Luck", "S. Hachimi"], "venue": "SAC, pp. 1955-1960, ACM 2012.", "citeRegEx": "2", "shortCiteRegEx": null, "year": 1955}, {"title": "Consistency of Commitments in Social Web Services", "author": ["M. Adelnia", "M.R. Khayyambashi"], "venue": "(IJCSIS) International Journal of Computer Science and Information Security, vol. 12, no. 11, pp. 1-5, November 2014.", "citeRegEx": "3", "shortCiteRegEx": null, "year": 2014}, {"title": "Towards a Social Network Based Approach for Services Composition", "author": ["A. Maaradji", "H. Hacid", "J. Daigremont", "N. Cresp"], "venue": "2010 IEEE International Conference on Communications (ICC\u20192010), 2010.", "citeRegEx": "4", "shortCiteRegEx": null, "year": 2010}, {"title": "Social Engineering of Communities of Web Services", "author": ["Z. Maamar", "H. Yahyaoui", "E. Lim", "P. Thiran"], "venue": "the 11th Annual International Symposium on Applications and the Internet (SAINT\u20192011), Munich, Germany, 2011.", "citeRegEx": "5", "shortCiteRegEx": null, "year": 2011}, {"title": "Why Web Services Need Social Networks", "author": ["Z. Maamar", "H. Hacid", "M.N. Huhns"], "venue": "IEEE Internet Computing, vol. 15, no. 2, pp. 90- 94, 2011.", "citeRegEx": "6", "shortCiteRegEx": null, "year": 2011}, {"title": "From Social Web Services to Social Communities of Web Services", "author": ["Z. Maamar", "N. Faci", "E. Kajan", "A. Pljaskovi\u0107", "E. Ugljanin", "F. Akhter"], "venue": "Advances in Information Sciences (AIS), vol. 1, no. 1, pp. 22-37, 2013.", "citeRegEx": "7", "shortCiteRegEx": null, "year": 2013}, {"title": "Operational Specification of a Commitment-Based Agent Communication Language", "author": ["N. Fornara", "M. Colombetti"], "venue": "AAMAS'02, Bologna, Italy, July 15-19, 2002.", "citeRegEx": "8", "shortCiteRegEx": null, "year": 2002}, {"title": "SweetDeal: Representing Agent Contracts With Exceptions using XML Rules, Ontologies, and Process Descriptions", "author": ["B.N. Grosof", "T.C. Poon"], "venue": "12th international conference on, Budapest, Hungary, 2003.", "citeRegEx": "9", "shortCiteRegEx": null, "year": 2003}, {"title": "Specifying and Implementing a Persuasion Dialogue Game Using Commitments  and Arguments", "author": ["J. Bentahar", "B. Moulin", "B. Chaib-draa"], "venue": "Argumentation in Multi-Agent System, 2005, pp. 130-148.", "citeRegEx": "10", "shortCiteRegEx": null, "year": 2005}, {"title": "Coordinating Agents in Organizations Using Social Commitments", "author": ["C. Carabelea", "O. Boissier"], "venue": "Electronic Notes in Theoretical Computer Science, vol. 150, no. 3, p. 73\u201391, May 2006.", "citeRegEx": "11", "shortCiteRegEx": null, "year": 2006}, {"title": "Generating Correct Protocols from Contracts: A Commitment-based Approach", "author": ["N.C. Narendra"], "venue": "SERVICES I, pp. 407-414, IEEE Computer Society 2008.", "citeRegEx": "12", "shortCiteRegEx": null, "year": 2008}, {"title": "Commitment-Based Service-Oriented Architecture", "author": ["M.P. Singh", "A.K. Chopra", "N. Desai"], "venue": "Computer, vol. 42, no. 11, pp. 72- 79, Nov 2009.", "citeRegEx": "13", "shortCiteRegEx": null, "year": 2009}, {"title": "Verifiable Semantic Model for Agent Interactions using Social Commitments", "author": ["M. El-Menshawy", "J. Bentahar", "R. Dssouli"], "venue": "Languages, Methodologies and Developement Tools for Multi- Agents Systems, 2010, pp. 128-152.", "citeRegEx": "14", "shortCiteRegEx": null, "year": 2010}, {"title": "Commitments to Regulate Social Web Services Operation", "author": ["Z. Maamar", "N. Faci", "K. Boukadi", "Q.Z. Sheng", "L. Yao"], "venue": "IEEE Transaction on Service Computing, vol. 7, no. 2, pp. 154-167, 2013.", "citeRegEx": "15", "shortCiteRegEx": null, "year": 2013}, {"title": "Modeling and verifying probabilistic Multi-Agent Systems using knowledge and social commitments", "author": ["k. Sultan", "J. Bentahar", "W. Wan", "F. Al-Saqqar"], "venue": "Expert Systems with Applications, p. 6291\u2013 6304, 2014.", "citeRegEx": "16", "shortCiteRegEx": null, "year": 2014}, {"title": "A commitment-based reference ontology for services", "author": ["J.C. Nardi", "J.P.A. Almeida", "G. Guizzardi", "L.F. Pires", "M.J. van Sinderen", "N. Guarino", "C.M. Fonseca", "R.A.Falbo"], "venue": "Information Systems, 2015.", "citeRegEx": "17", "shortCiteRegEx": null, "year": 2015}, {"title": "Towards Consistency of Web Service Architectures", "author": ["H. Reiko", "V. Hendrik", "J. KU \u0308STER", "S. THO \u0308NE"], "venue": "University of Paderborn, Paderborn, Germany, 2004.", "citeRegEx": "18", "shortCiteRegEx": null, "year": 2004}, {"title": "Consistency for Web Services Applications", "author": ["P. Greenfield", "D. Kuo", "S. Nepal", "A. Fekete"], "venue": "31st international conference on Very large data bases(VLDB), pp. 1199-1203, 2005.", "citeRegEx": "19", "shortCiteRegEx": null, "year": 2005}, {"title": "A framework for ensuring consistency of Web Services Transactions", "author": ["S. Choi", "H. Kim", "H. Jang", "J. Kim", "S.M. Kim", "J. Song", "Y.-J. Lee"], "venue": "Information and Software Technology, no. 50, p. 684\u2013696, 2008.", "citeRegEx": "20", "shortCiteRegEx": null, "year": 2008}, {"title": "A framework for ensuring consistency of Web Services Transactions based on WS-BPEL", "author": ["P. Shan-liang", "L. Ya-Li", "L. Wen-juan"], "venue": "Modern Education and Computer Science, no. 4, pp. 47-54, 2011.", "citeRegEx": "21", "shortCiteRegEx": null, "year": 2011}, {"title": "Static consistency checking of web applications with WebDSL", "author": ["Z. Hemel", "D.M. Groenewegen", "L.C. Kats", "E. Visser"], "venue": "Journal of Symbolic Computation, vol. 46, no. 2, pp. 150-182, 2011.  International Journal of Computer Science and Information Security (IJCSIS), Vol. 14, No. 8, August 2016 77  https://sites.google.com/site/ijcsis/ ISSN 1947-5500", "citeRegEx": "22", "shortCiteRegEx": null, "year": 2011}], "referenceMentions": [{"referenceID": 0, "context": "0 allow assembling and handling large global crowds with common interests in social interactions\u201d [1].", "startOffset": 98, "endOffset": 101}, {"referenceID": 1, "context": "In other words, transactions between web services components and social networks lead to the creation, management and use of commitments [2].", "startOffset": 137, "endOffset": 140}, {"referenceID": 2, "context": "In previous research [3], commitments structure is analyzed and based on their attributes classified.", "startOffset": 21, "endOffset": 24}, {"referenceID": 3, "context": "So users may like to perform an operation that their friends have done in social networks [4].", "startOffset": 90, "endOffset": 93}, {"referenceID": 4, "context": "categorized social networks to three groups including [5]: \uf0b7 Collaboration social networks.", "startOffset": 54, "endOffset": 57}, {"referenceID": 5, "context": "The results of his research lead to creating social web services [6].", "startOffset": 65, "endOffset": 68}, {"referenceID": 6, "context": "The quality of communities is presented based on how web services respond to the scenarios like collaboration, delegation, competition and coopetition [7].", "startOffset": 151, "endOffset": 154}, {"referenceID": 7, "context": "They defined a general formula for commitments and used them for speech evaluation [8].", "startOffset": 83, "endOffset": 86}, {"referenceID": 8, "context": "The algorithm uses a coordination method to manage agent activities [9].", "startOffset": 68, "endOffset": 71}, {"referenceID": 9, "context": "They proposed a set of algorithms for the implementation of the persuasion protocol and discussed their termination, complexity and correctness [10].", "startOffset": 144, "endOffset": 148}, {"referenceID": 10, "context": "They defined an organizational structure as a collection of roles, where a role is considered to be the subject of different types of social commitments and policies [11].", "startOffset": 166, "endOffset": 170}, {"referenceID": 11, "context": "The operation on a commitment cause its state changes according to a life cycle [12].", "startOffset": 80, "endOffset": 84}, {"referenceID": 12, "context": "Each participant is implemented as an agent; interacting agents perform a service engagement by creating and elaborating commitments to one another [13].", "startOffset": 148, "endOffset": 152}, {"referenceID": 13, "context": "CTL is a logical tree and commitments are the nodes of tree that are organized in the tree base on logical regulation in transaction execution time [14].", "startOffset": 148, "endOffset": 152}, {"referenceID": 1, "context": "They introduced \u201cResponsibility\u201d concept in social web services and based on this concept, designed commitments for responsibility of social web services [2].", "startOffset": 154, "endOffset": 157}, {"referenceID": 14, "context": "A key challenge in this research is consistency ensuring between commitments in social web services that this paper has proceeded it [15].", "startOffset": 133, "endOffset": 137}, {"referenceID": 15, "context": "The PCTL merge probabilistic logic of knowledge (PCTLK) and probabilistic logic of commitments (PCTLC) [16].", "startOffset": 103, "endOffset": 107}, {"referenceID": 16, "context": "proposed a commitment-based account of the concept of service that uses a core reference ontology [17].", "startOffset": 98, "endOffset": 102}, {"referenceID": 17, "context": "The CSP analyzes it for deadlock freedom [18].", "startOffset": 41, "endOffset": 45}, {"referenceID": 18, "context": "It should let verify global consistency at termination without needing global consistency expressions and an overall coordinator to evaluate them [19].", "startOffset": 146, "endOffset": 150}, {"referenceID": 19, "context": "Based on this mechanism, WTDP is designed [20].", "startOffset": 42, "endOffset": 46}, {"referenceID": 20, "context": "In this model a coordinator is used for web services transactions and if deadlock occurred, coordinator rollbacks operations [21].", "startOffset": 125, "endOffset": 129}, {"referenceID": 21, "context": "They argued that domainspecific languages should be designed from the ground up with static verification and cross-aspect consistency checking in mind, providing linguistic integration of domain-specific sublanguages [22].", "startOffset": 217, "endOffset": 221}, {"referenceID": 2, "context": "The algorithm for consistency ensuring between commitments is designed based on attributes of commitments structure [3].", "startOffset": 116, "endOffset": 119}, {"referenceID": 14, "context": "Two types of commitments are defined [15]: 1.", "startOffset": 37, "endOffset": 41}, {"referenceID": 1, "context": "Condition parameter is optional [2].", "startOffset": 32, "endOffset": 35}, {"referenceID": 14, "context": "are listed as follows [15]: 1.", "startOffset": 22, "endOffset": 26}, {"referenceID": 14, "context": "They are expounded in [15].", "startOffset": 22, "endOffset": 26}, {"referenceID": 2, "context": "For achieving consistency of commitments, commitments are classified based on their effect on databases and information of social network into [3]: 1.", "startOffset": 143, "endOffset": 146}, {"referenceID": 2, "context": "This paper uses the application designed for suggestion algorithm in previous research [3].", "startOffset": 87, "endOffset": 90}], "year": 2016, "abstractText": "Web Service is one of the most significant current discussions in information sharing technologies and one of the examples of service oriented processing. To ensure accurate execution of web services operations, it must be adaptable with policies of the social networks in which it signs up. This adaptation implements using controls called \u201cCommitment\u201d. This paper describes commitments structure and existing research about commitments and social web services, then suggests an algorithm for consistency of commitments in social web services. As regards the commitments may be executed concurrently, a key challenge in web services execution based on commitment structure is consistency ensuring in execution time. The purpose of this research is providing an algorithm for consistency ensuring between web services operations based on commitments structure.", "creator": "Microsoft\u00ae Word 2013"}}}