{"id": "1610.00689", "review": {"conference": "AAAI", "VERSION": "v1", "DATE_OF_SUBMISSION": "3-Oct-2016", "title": "Phase-Mapper: An AI Platform to Accelerate High Throughput Materials Discovery", "abstract": "high - throughput materials discovery involves the rapid synthesis, measurement, and characterization of many different but structurally - related materials. a key problem in materials discovery, principally the phase map identification problem, involves the determination of the crystal phase diagram from the materials'composition and structural characterization data. again we present phase - mapper, a novel ai platform to solve the phase map identification problem that allows humans to interact with both the data and products of ai algorithms, including the incorporation of human feedback to constrain or initialize appropriate solutions. phase - mapper affords incorporation of above any spectral demixing algorithm, including our novel solver, agilefd, which is based on a convolutive non - negative matrix factorization algorithm. agilefd can incorporate constraints to capture the physics assumptions of the materials as well as human feedback. we compare three solver variants with previously proposed methods evaluated in a large - scale experiment involving 20 synthetic systems, demonstrating the efficacy of imposing physical constrains using agilefd. phase - mapper has also been used often by materials scientists to solve a extremely wide variety of phase diagrams, including building the previously unsolved stable nb - mn - v oxide system, which is provided here as an illustrative example.", "histories": [["v1", "Mon, 3 Oct 2016 19:35:30 GMT  (8857kb,D)", "https://arxiv.org/abs/1610.00689v1", null], ["v2", "Fri, 7 Oct 2016 17:16:13 GMT  (7683kb,D)", "http://arxiv.org/abs/1610.00689v2", null]], "reviews": [], "SUBJECTS": "cs.AI", "authors": ["yexiang xue", "junwen bai", "ronan le bras", "brendan rappazzo", "richard bernstein", "johan bjorck", "liane longpre", "santosh k suram", "robert bruce van dover", "john m gregoire", "carla p gomes"], "accepted": true, "id": "1610.00689"}, "pdf": {"name": "1610.00689.pdf", "metadata": {"source": "CRF", "title": "Phase-Mapper: An AI Platform to Accelerate High Throughput Materials Discovery", "authors": ["Yexiang Xue", "Junwen Bai", "Ronan Le Bras", "Brendan Rappazzo", "Richard Bernstein", "Johan Bjorck", "Liane Longpre", "Santosh K. Suram", "Robert B. van Dover", "John Gregoire", "Carla P. Gomes"], "emails": ["yexiang@cs.cornell.edu", "sjtu@sjtu.edu.cn", "bhr54}@cornell.edu", "lfl42}@cornell.edu", "sksuram@caltech.edu", "rbv2@cornell.edu", "gregoire@caltech.edu", "gomes@cs.cornell.edu"], "sections": [{"heading": "1 Introduction", "text": "The wonders of modern technology can largely be attributed to advances in materials science that enable innovations from semiconductors to renewable energy. High throughput materials discovery comprises a suite of emerging methodologies to rapidly identify new materials, especially, undiscovered materials that are critical for next-generation technologies (Green, Takeuchi, and Hattrick-Simpers 2013). Specifically, this method generates 102-103 unique materials and forms them into a \u201clibrary\u201d and then rapidly screens for the properties of interest.\nTo analyze the vast amount of data that are generated in high throughput experiments, automatic analysis becomes\nCopyright c\u00a9 2017, Association for the Advancement of Artificial Intelligence (www.aaai.org). All rights reserved.\nimperative. The traditional workflow in materials science relies on iterative manual analysis and heuristics, resulting in months or years of analysis for a single physical system. This quickly becomes a bottleneck as humans are unable to keep up with the rate at which data is generated from high throughput experiments. The need for automatic and scalable tools in materials science provides computer scientists unique opportunities to apply cutting edge techniques in Artificial Intelligence and data science to accelerate the materials discovery process.\nIn this paper we address the phase mapping problem, a central issue in high-throughput materials discovery, and provide an efficient method of solving it which is currently a critically missing component in the high throughput materials toolbox. A materials phase is a fundamental property of a material composition (a mixture of elements) that describes the arrangement of the constituent\nar X\niv :1\n61 0.\n00 68\n9v 2\n[ cs\n.A I]\n7 O\natoms. X-ray diffraction (XRD) is a ubiquitous technique to characterize phases, as it produces a signal containing a series of peaks that serve as a \u201cfingerprint\u201d of the underlying atomic arrangement (or crystal structure). Using traditional methods, materials scientists can obtain and interpret 1-10 XRD measurements per day, and with the recent development of automated, synchrotron-based XRD experiments, the measurement throughput has been accelerated to 103-105 measurements per day (Gregoire et al. 2009; Gregoire et al. 2014). The creation of a phase mapping algorithm that generates phase diagrams from these data remains an unsolved problem in materials science despite a series of advancements over the past decade (Hattrick-simpers, Gregoire, and Kusne 2016). The most pertinent need is to generate a physically-meaningful phase diagram for the 102- 103 materials in a given library, which relies on the spectral demixing of the 102-103 XRD patterns into a small set of basis patterns (typically less than 10).\nTo address this substantial challenge, we developed Phase-Mapper, a comprehensive AI platform that tightly integrates XRD experimentation, AI problem solving, and human intelligence for the phase mapping problem (See Figure 1). In this platform, within minutes, AI solvers give approximate results for the phase mapping problem, which then are examined and further refined by materials scientists interactively and in real time. In addition, the results of Phase-Mapper can be used to further inform future experimental designs. The demixing algorithm is a cornerstone of the Phase-Mapper platform, and we have developed a novel solver called AgileFD, based on Convolutive Non-negative Matrix Factorization (cNMF), a method that has been applied to blind source separation of audio signals and speech recognition (Smaragdis 2004; M\u00f8rup and Schmidt 2006).\nAgileFD features a lightweight iterative updates of candidate solutions, and we have developed a suite of adaptations that enable functionalities beyond cNMF. The extensions for AgileFD described here include incorporation of constraints to encode both human input, that capitalizes on a researchers knowledge of a particular dataset, and a priori knowledge of the problem related to the underlying physics of phase diagrams.This, as demonstrated below, can be critical in obtaining physically meaningful solutions. In developing the Phase-Mapper platform, careful attention has been given to deliver a rich suite of capabilities while maintaining solver convergence times within minutes, which enables researchers to interact with the solver to refine the solution.\nWe compare three variants of the AgileFD with previously proposed solvers on an experiment involving 20 synthetically generated systems. Our results show that AgileFD outperforms previous solver in terms of reconstruction error and model correctness, owing to the fact that the model represents peak shifting in an efficient way. In addition, light-weight update rules allow AgileFD to converge more quickly than previous solvers and with its extensions the obtained solutions tend to be more physically meaningful.\nPhase-Mapper has been deployed in the Joint Center for Artificial Photosynthesis (JCAP) supported by the Department of Energy for materials scientists to solve a wide va-\nriety of phase diagrams, including the previously unsolved Nb-Mn-V oxide system, which is provided here as a case study and an illustrative example of the importance of encoding physical constraints to obtain physically-meaningful phase diagram solutions."}, {"heading": "2 Phase-Mapper: AI for Materials Discovery", "text": "High throughput materials discovery is an experimentation pipeline for rapidly synthesizing and identifying new materials. In this pipeline, a handful of elements are deposited together on a two-dimensional substrate, so that different locations on the substrate receive varying proportions of the elements. This variation in elemental composition across the substrate gives rise to the forming of a discrete set of materials. Each material is present on particular segments of the substrate, due to the continuous change of the proportion of the elements across the substrate.\nAfter deposition, sample locations on the substrate are probed with high energy X-rays, and because each material has a characteristic XRD pattern it becomes possible to characterize the discrete set of materials present on the substrate. Figure 2 provides a graphical illustration of the synthesis and characterization step in the high throughput pipeline.\nUnlike in traditional powder diffraction methods for materials discovery, the XRD patterns obtained in the high throughput pipeline can be composed of the characteristic XRD patterns of several materials. Therefore, the phasemapping problem, which is to identify the characteristic XRD patterns for the materials (or basis patterns) that demix the signal, lies at the heart of the analysis of high throughput data. Mathematically, the measured XRD pattern in the j-th sample point can be characterized by a one dimensional signal Aj(q). The \u201cscattering vector magnitude\u201d q is a monotonic transformation of the diffraction angle, and is directly related to the spacing of atoms in a crystal. The phase-mapping problem is to find a small number of phases W1(q), . . . ,WK(q), such that the XRD patterns at each sample point can be explained by a linear combination of phases:\nAj(q) \u2248 K\u2211 i=1 hijWi(\u03bbijq). \u2200j (1)\nIn the above definition, we write Wi(\u03bbijq) to allow for the phases to scale slightly according to parameter \u03bbij at each sample point. This is the result of a commonly observed form of alloying, a process that can typically be approximated by a multiplicative scaling of the XRD pattern of a specific phase in the q domain. We also call this process peak\nshifting, because the effect appears to make XRD patterns in the data shift to the left or to the right. In addition to the complications introduced by peak shifting, there are a number of other constraints on the solution of the phase-mapping problem, arising from the fact that the solution must describe a system constrained by the laws of physics. The most prominent is the so called Gibbs phase rule, which states that no more than three coefficients among hij for fixed j may be nonzero (in a ternary system). Additionally, how the hij may vary spatially on the substrate, as well as the shapes that Wi may take, are constrained by physical laws.\nFundamentally novel techniques are required to solve the phase mapping problem quickly and accurately. A number of automatic techniques have been developed in recent years, which can be broadly grouped into clustering, constraint reasoning, and factor decomposition approaches. Proposed clustering methods such as hierarchical clustering (HCA) (Long et al. 2007), dynamic time warping kernel clustering (Le Bras et al. 2011) and mean shift theory (Kusne et al. 2014) produce maps of phase regions, but fail to resolve mixtures or identify basis patterns, and do not necessarily produce results consistent with physics. Constraint reasoning approaches include satisfiability modulo theory (SMT) methods (Ermon et al. 2012), which can provide physically meaningful results, but depend heavily on effective pre-processing such as peak identification, and are computationally intensive. Approaches based on non-negative matrix factorization (NMF) (Long et al. 2009) are computationally efficient, but generally perform poorly when peakshifting phenomena are present. Another factor decomposition approach called CombiFD (Ermon et al. 2015) uses combinatorial constraints to simultaneously enforce physical rules and accommodate peak shifting, but requires solving a combinatorial problem in each descent step, and is therefore computationally expensive.\nWe propose the AI platform Phase-Mapper, which integrates three key components to solve the problem: (i) cutting edge AI solvers; (ii) human intelligence and feedback; and (iii) high-throughput physical experiments (See Figure 1).\n\u2022 Our platform is supported by cutting edge AI solvers, including Non-negative Matrix Factorization (Lee and Seung 2001), and CombiFD. We also highlight a new solver called AgileFD as a key component of the platform. Motivated by Convolutive NMF, AgileFD features a set of light-weight updating rules and therefore a very fast gradient descent process. AgileFD is also flexible, allowing for additional physical constraints or incorporation of human feedback through rounding and refinement.\n\u2022 Our platform also provides tools for data exploration, visualization, and configuration that allows human experts as well as laypeople to analyze and improve solutions.\n\u2022 The solutions obtained by the interaction between solvers and human users could also shed light on the development of new physical experiments, for example by specifying regions of composition space to sample at higher resolution (active learning). Therefore, the three components of Phase-Mapper form an integrated process (see Figure 1)."}, {"heading": "3 AgileFD as a Novel Solver", "text": "AgileFD is a key component in the Phase-Mapper platform. Compared with previously proposed methods for solving the phase-mapping problem, AgileFD features quick iterative updates of candidate solutions, which makes it possible for human experts to interact with the algorithm in real time. The key behind this speed lies in the efficient problem representation. Let the XRD patterns for all samples be represented by a matrix A where each column corresponds to one sample point and each row corresponds to Aj(q) for a particular value of q. Under the assumptions of no noise and no shifting, i.e. for all i, j, \u03bbij = 1, describing A as a linear combination of a few basis patterns Wi(q) is equivalent to factorizing A as a product of two low rank matrices W and H . We enforce nonnegativity for W and H , which is required for the solutions to be physically meaningful.\nA \u2248W \u00b7H. In this formulation, the columns of W form a set of basis patterns Wi(q), while the columns of H corresponds to the values hij in equation 1. Previous approaches to solve the phase-mapping problem based on NMF have been unsuccessful in handling peak shifting, i.e. \u03bbij 6= 1. The first contribution of AgileFD is to circumvent the shifting problem by a log space resampling. Under the variable substitution q \u2192 log q our signal becomes Wi(log q). More importantly, the shifted phase Wi(log \u03bbq) becomes Wi(log \u03bb + log q), which transforms the multiplicative shift in the q domain into a constant additive offset. Once a solution is found, the transformation is reversed, and the solution is interpolated at the original q values. This allows the problem to be formulated in terms of convolutive nonnegative matrix factorization. After this variable substitution, we discretize the values of allowed \u03bb and interpolate the signals at the corresponding geometric series q values. The problem can then be written:\nA \u2248 R = \u2211 m W \u2193 m \u00b7Hm. (2)\nHere, the columns of W still represent basis patterns. W \u2193m is the result of shifting the rows of the W matrix down m rows, and padding the shifted m rows with 0, representing the basis patterns with a constant offset in the logq domain, which is equivalent to the original multiplicative shift in the q domain. The columns of Hm act as the activation of basis patterns for the basis patterns shifted down m units. Note that when M = 1, this formulation is equivalent to NMF aside from the log transformation.\nAgileFD is a family of algorithms, which can be adapted to use different loss functions, regularization, and certain imposed constraints. Equation (2) is adapted from Convolutive NMF (cNMF), which was first proposed to analyze audio signals (Smaragdis 2004). The phase-mapping problem differs from previous applications of cNMF for blind source separation as the logq domain is substituted for the time domain, and each source (phase) is expected to appear at most once per sample with a relatively small offset. As in cNMF, we use a gradient descent approach to fitW andH . The gradient updates can typically be written multiplicatively, and\nare applied iteratively until convergence. For example, when the generalized Kullback-Leibler divergence is chosen as the loss function, the following update rules can be applied:\nHm = Hm \u25e6 (W \u2193m)T (A/R)\n(W \u2193m) T 1\n, (3)\nW =W \u25e6\n\u2211 m\n( A\u2191m\nR\u2191m\n) (Hm) T\n\u2211 m 1 (Hm) T\n. (4)\nHere, A\u2191m denotes A with all rows shifted upwards m steps and padded with zeros, and 1 is the ones matrix. All divisions the in above expressions are taken elementwise, and \u25e6 denotes the Hadamard product.\nLightweight Update Rules AgileFD\u2019s gradient descent method with simple linear update rules results in very fast convergence, typically reaching local minima within minutes or faster. This runtime performance is orders of magnitude faster than CombiFD, which uses a similar problem formulation but with combinatorial constraints enforced. This increased efficiency enables high throughput analysis and also makes it possible for a human to interact with the system almost in real time.\nFurther Extensions of AgileFD for Materials Discovery Since the ultimate aim of the phase-mapping problem is to find a physically meaningful decomposition of the signal, for which the loss function is just a proxy, we must allow for experts to modify and inspect any candidate solution. It is not feasible to encode all physical constraints or the knowledge of a materials scientist within the solver a priori. Therefore, in the next few sections, we provide a number of novel modifications to the basic AgileFD algorithm, in order to impose prior knowledge or additional constraints derived from user interpretation of a proposed solution.\nAgileFD with Frozen Values In the Phase-Mapper platform, the user is provided with the opportunity to freeze individual values in the W and H matrices. For example, a user might specify a known pattern or part of a previous solution as a basis pattern a priori, freezing the corresponding row or part thereof inW to a known value. Or the user might specify that a certain set of samples contain only a single material phase and set the non-corresponding H vales to zero. The result is an interactive, iterative matrix factorization. We adapt the update rules to the this new scenario. Theorem 3.1. When the generalized KL Divergence is chosen as the loss function, the objective is always non-negative and non-increasing when applying the update rules in Equation 3 and Equation 4 while holding one or more basis patterns in W or phase proportions in H fixed.\nThe proof of Theorem 3.1 can be found in (Xue et al. 2016). It relies on the fact that the auxilliary function used to prove that the normal update rules are non-increasing has certain linearity properties.\nCustom Initialization The local optimum to which AgileFD converges is not guaranteed to be the correct optimum. In this case, initializing basis patterns or coefficients\nto values close to the expected solution, rather than random values, the user can direct the search to the correct solution space. We allow the user to specify basis patterns that can be taken from previous solutions, data samples, or provided manually, to use as an initial value. Similarly, initial values for the activation matrix can be specified.\nSparsity Regularization Sparse solutions are usually more easily interpreted, and in materials science they are more likely to be consistent with the underlying physics. The AgileFD system provides the option to introduce a sparsity term in H which can vary by index according to an human experts preferences. Using L1-regularization for H and sparsity weight matrices \u03b3m, the sparse generalized KLdivergence objective function becomes:\u2211\ni,j\n( Ai,j log\nAi,j Ri,j \u2212Ri,j +Ai,j ) + \u2211 m \u2016\u03b3m \u25e6Hm\u20161.\nThe corresponding update rule for H becomes:\nHm = Hm \u25e6 (W \u2193m)T (A/R)\n(W \u2193m) T 1+ \u03b3m\n.\nIn order to avoid the degenerate solution where H \u2192 0, each basis pattern of W is L2-normalized at the beginning of each update iteration.\nSparsity Constraints In general, correct phase map solutions should follow the Gibbs phase rule, which specifies that under certain experimental conditions, the number of observed phases at a given chemical composition is less than or equal to the number of chemical elements Nel present:\u2211\ni\nIij \u2264 Nel. (5)\nHere, Iij is an indicator of whether phase i is present at sample location j. Materials scientists might also know a priori, or infer from previous proposed solutions, that certain regions contain fewer phases than the usual limit.\nSuch combinatorial constraints cannot be encoded directly in the update rules of AgileFD. One way to enforce these constraints, which has been used in previous methods such as CombiFD (Ermon et al. 2015), is to directly encode it as hard combinatorial constraints. However, this results in a very slow update process, as we have to solve a Mixed Integer Programming (MIP) problem in each iteration. As a novel routine, we apply the Gibbs Phase rule by first solving the relaxed problem, then we choose the best values to set to zero in H to satisfy Equation 5, and then refine the solution by applying the update rules until convergence. Because the update rules are multiplicative, the zeroed values will remain zero.\nChoosing the values to zero in H is independent for each sample point j. This can be solved greedily if a faster solution is desired, or using a MIP formulation, and/or successive rounds of constraints and refinement, if a more precise solution is desired with a somewhat longer wait time. This extension is particularly useful when the unconstrained algorithm recovers a solution that is nearly correct except for relatively small violations of phase limits."}, {"heading": "4 Human Integrated Platform", "text": "We provide an integrated workflow with the Phase-Mapper platform, which includes visualizing and analyzing an instance file, setting the solver framework, analyzing the solution and using that analysis to update the solver framework. The design objectives were simple: create a practical application that seamlessly connects a visualization system with a powerful solver, that could be utilized in a large scale manner. The main features of Phase-Mapper are the visualization tools and the solver interface.\nVisualizer Phase-Mapper provides a way to visualize both the input data as well as the solution that is generated. When an instance file of a materials system is uploaded to the system, the visualizer will generate a composition map, which illustrates the varying compositions, of elements, for all sample points. The user can freely inspect the XRD patterns of each sample point, as well as the heatmap of XRD patterns for a slice of sample points. A slice heatmap example is shown in Figure 3, where two selected slices of sample points are shown in grey. The heatmap on the left represents the XRD patterns at the sample points in the slice. The heatmap also allows for multiple views of the data, emphasizing different parts of the XRD signal, as well as a way to freeze the current heatmap.\nWhen the solution files are loaded to the application, either uploaded by the user or generated by the built in solver, several new plots are generated. The first of which, plots the basis patterns that were found as solutions. The second is another composition map, displaying how much each basis pattern contributed to each sample point\u2019s signal. The third plot shows the actual XRD signal as well as the reconstructed signal for a user specified sample point. Additionally the user can toggle that plot so it shows each basis pattern\u2019s contribution to the reconstructed signal.\nConnection to Solver The solving feature of Phase Mapper enables users to interact with the AI solver behind the scenes. The user can specify many solver parameters such as how much to enforce sparsity, how many phases the solution should have, and how much shift between basis patterns it should allow. Perhaps the most useful parameter that can be set is the initilization or freezing of a particular sample point\u2019s XRD pattern as a phase in the actual solution. The user can select a single data point on the composition map and use its XRD pattern as an initialization basis for the solver, or freeze that pattern as one of the basis patterns. The former is ideal for when the user believes a data point\u2019s XRD pattern is similar to a basis pattern solution. The latter\nis best for when the user believes a data point\u2019s XRD pattern is a basis pattern solution. Both input parameters aim to help the solver more efficiently and accurately find a solution, either by starting the solver off closer to a solution, or distorting the solution space so the solver finds a more accurate solution.\nInfrastructure It was pertinent that this tool be highly accessible, and for this reason a web application was chosen as the medium to deploy this project. This application runs on any modern web browser and for that reason is completely cross-platform. On the front end, HTML and CSS were used to generate the aesthetics and structure for how the different components were presented to the user. JavaScript handled all of the client side visualization and functionality. Jquery and Ajax were used to handle the client-server communication, and all server side functionality was given by PHP. The solution parameters were passed to the solver using PHP and solver itself was written in c++. Little maintence of the platform is needed as the methods in materials science as not expected to change, and as the intended audience is well versed in the phase mapping problem there is scarce need for tutorials."}, {"heading": "5 Experiments", "text": ""}, {"heading": "5.1 Large Scale Experiments", "text": "Despite several solvers having been proposed (Le Bras et al. 2011; Long et al. 2007; Kusne et al. 2014; Ermon et al. 2012; Ermon et al. 2015) in recent years, most solvers were configured and tested only on a handful of systems. As one contribution of this paper, we provide a large-scale evaluation of various solvers on the phase-mapping problem.\nWe generated synthetic ternary metallic systems using data provided by the Materials Project (Jain et al. 2013), which provides theoretical crystal structure information using Density-Functional Theory based convex hull construction in composition, energy space that predicts compositions and corresponding lowest energy of formation atomic configurations that form the vertices of the convex hull.\nThe XRD patterns at compositions between the vertices of the convex hull are calculated, using pymatgen (Ong et al. 2013), by interpolation of a) XRD patterns of the vertex phases or b) modified XRD patterns of the vertex phases to accommodate alloying. We applied a stylized model of solid solubility and alloying, and used structure interpolation to simulate modified phase diagrams that include the additional degrees of freedom from alloying. We calculated XRD patterns for each modified constituent, including their interpolated structures, and combined them according to the mixture proportions in the phase diagram.\nWe selected 20 examples containing varying numbers of phases and amounts of alloying for our experminent. These data reflect many properties of real experimental data including physically plausible combinations of basis XRD patterns, connectivity relationships of phase fields, adherence to Gibbs phase rule, and peak shifting. These data also provide ground truth information, so that we can directly compare our solution models to those that generated the data.\nWe compare the resulting phases found by different solvers against the ground truth phases, which is known beforehand from the simulation used to generate these 20 systems. We tested NMF1, AgileFD, AgileFD with Sparsity Regularization, AgileFD with Sparsity and Gibbs phase rule enforced, and CombiFD. The convergence gap for NMF and AgileFD are set to be 2 \u00d7 10\u22125, the MIP gap of CombiFD is set to be 0.2, and the sparsity parameter is set to 0.35 in AgileFD. All solvers were given a time limit of 1 hour, and allocated one compute core.\nFirst we evaluate the solution quality by comparing the modeled signal for each phase at each sample point, including shift, to the known signal from that phase at that sample point. We find the permutation of the phases in the solu-\n1For consistency, we implemented NMF using generalized KLdivergence loss, equivalent to AgileFD with M = 1. Because of this, and the resulting use of log scaling of q, this implementation of NMF differs from that previously applied to the phase mapping problem (Long et al. 2009).\ntion to best match the ground truth, and calculate the L2 loss for each component. These are summed over all phases and samples, and scaled by the total value of all signals in the example system.\nAs shown in Figure 4, in general the solutions found by AgileFD (including AgileFD-sparsity and AgileFDsparsity-gibbs) better match the ground truth when compared with NMF and CombiFD. NMF underperforms because it cannot model peak shifting. CombiFD often only completed a few iterations within the time limit, and in a few cases timed out in the first iteration. These timeouts before convergence resulted in lower solution quality. Figure 5 compares the runtimes on each instance.\nAgileFD with sparsity regularization and/or Gibbs phase rule enforced outperforms AgileFD without extensions. They are able to find solutions that better match the physical constraints. We calculate the percentage of sample points that satisfy the Gibbs phase rule, for the solutions found by each solver for each instance. The result is shown in Table 1.When sparsity regularization (or, by design, the Gibbs phase rule) is enforced, the solutions tend to better satisfy the Gibbs phase rule."}, {"heading": "5.2 Case Study: Nb-V-Mn Oxides", "text": "The integration of the rapid solver with visualization tools enables materials scientists to take advantage of the tunable initialization and constraint parameters to create a meaningful solution. An illustrative example is found in a ternary composition library containing a broad range of compositions in the Nb-V-Mn oxide space. While the phase behavior of binary sub-compositions (e.g. Nb-V oxides) have been previously studied, the ternary compositions are being explored for the first time to discover solar light absorbers for\nenergy applications. While the set of 317 XRD patterns provides sufficient information to solve the phase behavior of these oxides, the materials researchers were unable to obtain a meaningful phase diagram for over a year due to the complex phase behavior that evaded comprehension via manual analysis. Using the visualization tools and rapidly trying various solutions, the researchers determined that there are K=6 primary phases in this dataset. For this case study, we compare solutions from 3 different solvers with K=6: (1) NMF; (2) AgileFD with M=10, which includes shifting of each basis pattern by up to approximately 2%; (3) AgileFDsparsity-gibbs with M=10.\nAs described above, adherence to the Gibbs phase rule is important for providing the researcher with a meaningful phase diagram. The number of basis patterns utilized for each sample is shown in Figure 7 for each of the 3 solutions. The NMF solution adheres to the Gibbs phase rule for only 4% of the samples, with nearly half of the samples utilizing all 6 basis patterns. While the AgileFD solution is more meaningful than the NMF solution due to the tracking of alloying via basis pattern shifting, the AgileFD solution uses more phases for several compositions, corresponding to\na worse violation of Gibbs phase rule. This property of the AgileFD solver may be understood intuitively by considering that for a given sample, any of the M copies of each basis pattern can be utilized to model small features in the XRD patterns, resulting in small amounts of shifted patterns to appear across the composition space and further motivating the encoding of Gibbs phase rule in the solver. With this constraint, the AgileFD solution utilizes a maximum of 3 phases and in some composition regions only 2 phases are utilized.\nFigure summarizes the AgileFD-sparsity-gibbs solution, and the desirable attributes that were not enforced but provide meaning to the researcher include: (1) excellent matching of the primary peaks of each basis pattern with a known crystal structure, demonstrating that each basis pattern is truly representative of a phase, (2) excellent composition space connectivity of each phase concentration map, as expected for equilibrium phase behavior, (3) systematic compositional variation in the shift parameter \u03bb, demonstrating alloying within the phases, in particular phases 3, 5, and 6. While the AgileFD solution includes pattern shifting, the lack of adherence to the Gibbs phase rule has important consequences on the solution that cannot be ameliorated through modification of the H to impose Gibbs phase rule ex post facto, without a corresponding refinement of W . The most prominent difference is highlighted in Figure 5.2 where the second basis pattern of the AgileFD basis pattern is quite different from that of the AgileFD-sparsitygibbs solution. This AgileFD basis pattern contains a mixture of signals from other phases and is thus not able to be matched to a known structure. The researcher would thus be left with the impression that this may be a newly discovered phase and undergo the arduous task of hypothesizing new crystal structures that could correspond to this basis pattern. The false-positive phase discovery from AgileFD is circumvented in the AgileFD-sparsity-gibbs solution as the encod-\ning of Gibbs phase rule in the solver results in effective demixing of basis patterns such that all 6 primary phases are identified. Indeed, only by imposing a priori constraints in AgileFD is a complete, meaningful solution produced."}, {"heading": "6 Conclusion", "text": "High-throughput materials discovery is revolutionizing the efficiency of materials science experiments through automated characterization of thousands of materials in a single library. A major, critically-missing component of the high throughput materials discovery pipeline is the ability to rapidly solve the phase map identification problem, which involves the determination of the underlying phase diagram of a family of materials from their composition and structural characterization data. To address this substantial challenge, we developed Phase-Mapper, a comprehensive AI platform that tightly integrates XRD experimentation, AI problem solving, and human intelligence for solving the phase mapping problem. AI solvers in Phase-Mapper provide, within minutes, high-quality solutions to the phase mapping problem, which can then be examined and further refined by materials scientists, interactively and in real time. The de-mixing algorithm is a cornerstone of the PhaseMapper platform, and previously-developed algorithms routinely produce non-physical solutions. We have developed a novel solver, AgileFD, that features lightweight iterative updates of candidate solutions and a suite of novel adaptations to the multiplicative updating rules. In particular, we have developed the ability to incorporate constraints that capture the physics of materials as well as human feedback, enabling functionalities well beyond traditional de-mixing techniques and producing physically-meaningful solutions. We compare different solver variants with previously proposed methods in a large-scale experiment involving 20 synthetic systems, demonstrating the efficacy of imposing physical constrains using AgileFD, while keeping fast solution times. Phase-Mapper has been deployed in the Joint Center for Artificial Photosynthesis (JCAP) supported by the Department of Energy for materials scientists to solve a wide variety of real-world phase diagrams, including the previously unsolved Nb-Mn-V oxide system, which is provided here as a case study and an illustrative example of the benefits of encoding physical constraints. We believe Phase-Mapper will lead to further developments in highthroughput materials discovery by providing rapid and critical insights into the underlying phase behavior of new materials."}, {"heading": "Acknowledgements", "text": "This material is supported by NSF awards CCF-1522054 and CNS-0832782 (Expeditions), CNS-1059284 (Infrastructure), and IIS-1344201 (INSPIRE); and ARO award W911-NF-14-1-0498. Materials experiments are supported through the Office of Science of the U.S. Department of Energy under Award No. de-sc0004993. Use of the Stanford Synchrotron Radiation Lightsource, SLAC National Accelerator Laboratory, is supported by the U.S. Department of Energy, Office of Science, Office of Basic Energy Sciences\nunder Contract No. DE-AC02-76SF00515."}], "references": [], "referenceMentions": [], "year": 2016, "abstractText": "High-Throughput materials discovery involves the rapid synthesis, measurement, and characterization of many different but structurally-related materials. A key problem in materials discovery, the phase map identification problem, involves the determination of the crystal phase diagram from the materials composition and structural characterization data. We present Phase-Mapper, a novel AI platform to solve the phase map identification problem that allows humans to interact with both the data and products of AI algorithms, including the incorporation of human feedback to constrain or initialize solutions. Phase-Mapper affords incorporation of any spectral demixing algorithm, including our novel solver, AgileFD, which is based on a convolutive non-negative matrix factorization algorithm. AgileFD can incorporate constraints to capture the physics of the materials as well as human feedback. We compare three solver variants with previously proposed methods in a large-scale experiment involving 20 synthetic systems, demonstrating the efficacy of imposing physical constrains using AgileFD. Phase-Mapper has also been used by materials scientists to solve a wide variety of phase diagrams, including the previously unsolved Nb-Mn-V oxide system, which is provided here as an illustrative example.", "creator": "LaTeX with hyperref package"}}}