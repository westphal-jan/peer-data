{"id": "1610.02293", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "7-Oct-2016", "title": "Learning Macro-actions for State-Space Planning", "abstract": "planning has achieved significant progress in recent years. among the various approaches to scale up plan synthesis, the use thereof of macro - actions has been widely thoughtfully explored. as a first stage consideration towards the development of a numerical solution to learn on - line macro - actions, ultimately we propose an algorithm to identify new useful macro - actions based on data object mining techniques. the integration in the planning search of these learned macro - actions shows significant architectural improvements over four classical planning benchmarks.", "histories": [["v1", "Fri, 7 Oct 2016 14:06:40 GMT  (16kb)", "http://arxiv.org/abs/1610.02293v1", "Journ{\\'e}es Francophones sur la Planification, la D{\\'e}cision et l'Apprentissage pour la conduite de syst{\\`e}mes (JFPDA 2016) , Jul 2016, Grenoble, France. 2016"]], "COMMENTS": "Journ{\\'e}es Francophones sur la Planification, la D{\\'e}cision et l'Apprentissage pour la conduite de syst{\\`e}mes (JFPDA 2016) , Jul 2016, Grenoble, France. 2016", "reviews": [], "SUBJECTS": "cs.AI", "authors": ["sandra castellanos-paez", "damien pellier", "humbert fiorino", "sylvie pesty"], "accepted": false, "id": "1610.02293"}, "pdf": {"name": "1610.02293.pdf", "metadata": {"source": "CRF", "title": "Learning Macro-actions for State-Space Planning", "authors": ["Sandra Castellanos-Paez", "Damien Pellier", "Humbert Fiorino", "Sylvie Pesty"], "emails": ["firstname.lastname@imag.fr"], "sections": [{"heading": null, "text": "ar X\niv :1\n61 0.\n02 29\n3v 1\n[ cs\n.A I]\n7 O\nct 2\n01 6\nPlanning has achieved significant progress in recent years. Among the various approaches to scale up plan synthesis, the use of macro-actions has been widely explored. As a first stage towards the development of a solution to learn on-line macro-actions, we propose an algorithm to identify useful macro-actions based on data mining techniques. The integration in the planning search of these learned macro-actions shows significant improvements over four classical planning benchmarks.\nKeywords : Automated Planning, Data Mining, Macro-actions, Learning"}, {"heading": "1 Introduction", "text": "Automated planning comes up with the challenge of devising fast and powerful systems that can autonomously find a plan to achieve a set of goals. A plan is a structure of appropriate actions for a given problem over a domain. From a frequent sequence of some of these actions, it is possible to build a meta-action structure called macro-action. Finding the way to learn macro-actions from previously acquired knowledge (plans) can allow us to go quickly deep into the search space by triggering them during the search. While most of the literature presents the macro-action synthesis as a result of using a filter approach over previously detected macro-actions in a set of training problems [1, 5, 4, 2], we propose a novel and general macro learning method as part of an effort to detect automatically potential macro-actions and use them in the planning search."}, {"heading": "2 Mining useful Macro-actions", "text": "The main idea of our approach is to build macro-actions from sequential patterns of actions in a set of plans and to use them during the planning search to improve the performance of the planning system.\nA sequential pattern of actions is a frequent action subsequence (\u03b1) existing in a single plan or a set of plans (\u03b8). The support of a sequence supp\u03b8(\u03b1) is the number of plans in \u03b8 that contain \u03b1. Given a support threshold \u03c3, a sequence \u03b1 is a frequent sequence on \u03b8 if supp\u03b8(\u03b1) \u2265 \u03c3. Mining of sequential patterns consists of finding the complete set of frequent subsequences given a set of plans \u03b8 and support threshold \u03c3.\nOur method to learn and to use macro actions includes two algorithms. The set-up algorithm takes as input a set of non-empty solution plans. It obtains a set of closed sequential patterns by using the BIDE+[6] algorithm. A closed sequential pattern is a sequential pattern such that it is not strictly included in another pattern having the same support. Afterwards, each obtained sequence is evaluated regarding if each one of its actions belongs to the encoded operators of the problem. When it occurs the whole sequence is encoded and added in the problem macro-action list. The enhanced search algorithm uses the encoded macro-actions list to speed-up the search of a classical implementation of the A* algorithm. A node x is selected from the pending nodes list taking into account its heuristic value h. A plan is reached when x satisfy the goal. If not the applicability of each macro-action mi = \u3008a1a2...an\u3009 over x is evaluated . A macro-action is applicable in x when the preconditions of x satisfies the preconditions of mi[0] allowing to get the successor x\u2032 and for each obtained successor the next actions are applicable ( from n > 0,mi[n\u2212 1] is applicable to xn\u22121 ). The created successors update the\nlist of pending nodes and the list of explored nodes. After the algorithm try to apply the problem operators. Finally, the node x is added to the explored nodes and another node is selected from the pending nodes list."}, {"heading": "3 Results", "text": "The experiments were based on barman, depots, ferry and sokoban benchmarks. They were carried out on an Intel Xeon E5-2630 2.30GHz. The allocated CPU time was set to 300 seconds with a maximum of 8GB of memory. For each benchmark, a learning set of plans of 1000 problems and a test set of 300 problems were randomly generated with the generators1 used for the International Planning Competition (IPC). We went trough the SPMF [3] data mining library, which implements the BIDE+ algorithm, to get the set of frequent sequences varying the degree of support between 10% and 30%. We used the PDDL4J 2 library to encode them into a forward chaining planner based on A* algorithm and on FF heuristic.\nThe evaluation was based on the classical metrics of quality and time used in IPC. Time score is computed as the quotient T \u2217 /T where T \u2217 is the minimum time required by the planner to solve the problem, and T is the time spent by the evaluated implementation to solve the same planning task. Quality score is computed as Q \u2217 /Q where Q\u2217 is the cost of the best known plan for a particular problem and Q is the cost of the plan produced by the evaluated implementation. If the planner found no solution the quality is set to zero. Table1 shows for the implementation of each given support of frequent sequences as macro-actions, the improvement percentage in regard to the original algorithm.\nMacro-actions quality score was improved in some domains owing the fact that the original algorithm could not found a plan for some problems (barman, depots and ferry). However, a domain where all the problems were solved by the original algorithm shows the worst quality (sokoban). In our results, time improvement is obtained with a support of 10% for all the domains. The results suggest that: (1) it can be possible to identify potential macro-actions over a domain by fixing the degree of support between 10% and 30%; (2) search performance can be improved, thus validating the relevance of macro-actions learning in the planning search. Further work include a formalization of useful macro-actions as macro-operators based on the generalization of frequent sequences in order to deal with the utility problem, i.e., the increasing of the branching factor due to the adding of macro-actions. As well as, the development of a solution to learn online macro-actions."}], "references": [{"title": "Macro-FF: Improving AI Planning with Automatically Learned Macro-Operators", "author": ["A. BOTEA", "M. ENZENBERGER", "M. M\u00dcLLER", "J. SCHAEFFER"], "venue": "Journal of Artificial Intelligence Research,", "citeRegEx": "1", "shortCiteRegEx": "1", "year": 2005}, {"title": "Learning Useful Macro-actions for Planning with N-Grams", "author": ["A. DULAC", "D. PELLIER", "H. FIORINO", "D. JANISZEK"], "venue": "In IEEE 25th International Conference on Tools with Artificial Intelligence,", "citeRegEx": "2", "shortCiteRegEx": "2", "year": 2013}, {"title": "SPMF: A Java Open-Source Pattern Mining Library", "author": ["P. FOURNIER-VIGER", "A. GOMARIZ", "T. GUENICHE", "A. SOLTANI", "C.-W. WU", "S. TSENG V"], "venue": "Journal of Machine Learning Research,", "citeRegEx": "3", "shortCiteRegEx": "3", "year": 2014}, {"title": "The Role of Macros in Tractable Planning", "author": ["A. JONSSON"], "venue": "J. Artif. Int. Res.,", "citeRegEx": "4", "shortCiteRegEx": "4", "year": 2009}, {"title": "Implicit Learning of Macro-Actions for Planning", "author": ["H. NEWTON M. A", "J. LEVINE"], "venue": "In Proceedings of the 19th European Conference on Artificial Intelligence (ECAI", "citeRegEx": "5", "shortCiteRegEx": "5", "year": 2010}, {"title": "BIDE: efficient mining of frequent closed sequences", "author": ["J. WANG", "J. HAN"], "venue": "In Proceedings. 20th International Conference on Data Engineering,", "citeRegEx": "6", "shortCiteRegEx": "6", "year": 2004}], "referenceMentions": [{"referenceID": 0, "context": "While most of the literature presents the macro-action synthesis as a result of using a filter approach over previously detected macro-actions in a set of training problems [1, 5, 4, 2], we propose a novel and general macro learning method as part of an effort to detect automatically potential macro-actions and use them in the planning search.", "startOffset": 173, "endOffset": 185}, {"referenceID": 4, "context": "While most of the literature presents the macro-action synthesis as a result of using a filter approach over previously detected macro-actions in a set of training problems [1, 5, 4, 2], we propose a novel and general macro learning method as part of an effort to detect automatically potential macro-actions and use them in the planning search.", "startOffset": 173, "endOffset": 185}, {"referenceID": 3, "context": "While most of the literature presents the macro-action synthesis as a result of using a filter approach over previously detected macro-actions in a set of training problems [1, 5, 4, 2], we propose a novel and general macro learning method as part of an effort to detect automatically potential macro-actions and use them in the planning search.", "startOffset": 173, "endOffset": 185}, {"referenceID": 1, "context": "While most of the literature presents the macro-action synthesis as a result of using a filter approach over previously detected macro-actions in a set of training problems [1, 5, 4, 2], we propose a novel and general macro learning method as part of an effort to detect automatically potential macro-actions and use them in the planning search.", "startOffset": 173, "endOffset": 185}, {"referenceID": 5, "context": "It obtains a set of closed sequential patterns by using the BIDE+[6] algorithm.", "startOffset": 65, "endOffset": 68}, {"referenceID": 2, "context": "We went trough the SPMF [3] data mining library, which implements the BIDE+ algorithm, to get the set of frequent sequences varying the degree of support between 10% and 30%.", "startOffset": 24, "endOffset": 27}], "year": 2016, "abstractText": "Planning has achieved significant progress in recent years. Among the various approaches to scale up plan synthesis, the use of macro-actions has been widely explored. As a first stage towards the development of a solution to learn on-line macro-actions, we propose an algorithm to identify useful macro-actions based on data mining techniques. The integration in the planning search of these learned macro-actions shows significant improvements over four classical planning benchmarks.", "creator": "LaTeX with hyperref package"}}}