{"id": "1610.02828", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "10-Oct-2016", "title": "Ranking academic institutions on potential paper acceptance in upcoming conferences", "abstract": "the crux concept of the problem in interpreting kdd cup 2016 involves developing data pattern mining techniques to rank research institutions nationally based on publications. rank importance of research institutions are derived from predictions on the number of full research papers that would potentially get accepted in upcoming top - tier conferences, utilizing public information accessible on the the web. this paper describes our solution to kdd cup 2016. assume we used a two step approach in which we first identify full research papers corresponding to each conference of interest and then train as two variants of exponential error smoothing models to make predictions. our solution achieves an overall score of 0. 7508, while the winning proxy submission scored 0. 7656 in the overall results.", "histories": [["v1", "Mon, 10 Oct 2016 09:55:14 GMT  (35kb)", "http://arxiv.org/abs/1610.02828v1", "KDD 2016, KDD Cup 2016, Appeared in the KDD Cup Workshop 2016,this https URL"]], "COMMENTS": "KDD 2016, KDD Cup 2016, Appeared in the KDD Cup Workshop 2016,this https URL", "reviews": [], "SUBJECTS": "cs.AI cs.DL cs.LG", "authors": ["jobin wilson", "ram mohan", "muhammad arif", "santanu chaudhury", "brejesh lall"], "accepted": false, "id": "1610.02828"}, "pdf": {"name": "1610.02828.pdf", "metadata": {"source": "CRF", "title": "Ranking academic institutions on potential paper acceptance in upcoming conferences", "authors": ["Jobin Wilson", "Ram Mohan", "Muhammad Arif", "Santanu Chaudhury", "Brejesh Lall"], "emails": ["jobin.wilson@flytxt.com", "ram.mohan@flytxt.com", "muhammad.arif@flytxt.com", "santanuc@ee.iitd.ac.in", "brejesh.lall@ee.iitd.ac.in", "permissions@acm.org."], "sections": [{"heading": null, "text": "ar X\niv :1\n61 0.\n02 82\n8v 1\n[ cs\n.A I]\n1 0\nO ct\nCCS Concepts \u2022Information systems \u2192 Data mining; Learning to rank; \u2022Computing methodologies \u2192 Artificial intelligence; \u2022Mathematics of computing \u2192 Time series analysis;\nKeywords web-crawler ; classification ; exponential smoothing ; ARIMA ; cross-validation"}, {"heading": "1. INTRODUCTION", "text": "The goal of KDD Cup 2016 was to build data mining techniques capable of ranking research institutions on the basis of potential paper acceptance in upcoming top-tier conferences, utilizing public data sources available on the web. The concrete task involved ranking institutions by predicting the number of their full research papers that would get\nPermission to make digital or hard copies of all or part of this work for personal or classroom use is granted without fee provided that copies are not made or distributed for profit or commercial advantage and that copies bear this notice and the full citation on the first page. Copyrights for components of this work owned by others than ACM must be honored. Abstracting with credit is permitted. To copy otherwise, or republish, to post on servers or to redistribute to lists, requires prior specific permission and/or a fee. Request permissions from permissions@acm.org.\nKDD \u201916 San Francisco, California, USA c\u00a9 2016 ACM. ISBN XXX-XXXX-XX-XXX/XX/XX. . . $15.00\nDOI: XX.XXX/XXX X\naccepted in specific upcoming conferences such as SIGIR, KDD and ACM MM, corresponding to different phases of the contest.\nPredictions corresponding to each conference is a ranked list of institutions on the basis of relevance score (rel score) for a specific upcoming conference in the year 2016. Each accepted full research paper in a particular conference has an equal vote of 1. Each author is considered to have an equal contribution to the paper. In case if an author has multiple affiliations, each affiliation is considered to contribute equally to the paper. We aggregate the fraction of the votes that each affiliations receives from all the full research papers accepted from that institution for a particular conference in a particular year, to calculate its rel score. The rel score thus represents importance of an affiliation in relation to a particular conference in a particular year. As the actual set of accepted papers for an upcoming conference will not be available at the time of prediction, we make use of data mining techniques which utilize historical data points from publicly available data sources on the web to come up with an estimate of the rel score for each institution of interest.\nA major public data source that we made use of was the Microsoft Academic Graph (MAG) [13], which includes information about publications, citations, authors, affiliations and venues. Since MAG data doesn\u2019t differentiate full research papers from others, we also made use of ACM digital library (ACM DL) data corresponding to specific conferences. For each conference of interest, we extracted information about all published papers along with the sections to which they belonged in the proceedings, using a web-crawler script."}, {"heading": "2. CONTEST EVALUATION", "text": "The contest was split into three phases wherein each phase spanned a calender month. Corresponding to each phase, predictions were generated against multiple conferences associated with that phase. At the end of each phase, organizers would select a particular conference from the set and evaluate the predictions by comparing it with the actual list of papers that got accepted by the selected conference. The overall final score was calculated as a weighted sum of the scores from each phase. Phase 1 carried a 20% weight where as Phase 2 and 3 carried a 40% weight each.\nThe evaluation metric employed to asses the quality of predictions corresponding to each phase is Normalized discounted cumulative gain (NDCG), a commonly used metric in information retrieval [5]. NDCG score varies from 0.0 to 1.0, wherein ideal ranking of entities is represented by a value of 1.0. In our problem, NDCG@20 score is calculated as follows. Once the actual list of accepted full research papers becomes available, rel scores corresponding to each institution gets calculated. Rel score corresponding to the institution at the ith rank position is denoted as reli.\nDCGn =\nn\u2211\ni=1\nreli\nlog2(i+ 1) (1)\nNDCGn = DCGn\nIDCGn (2)\nDCG@20 is calculated using Equation 1. IDCG corresponds to the ideal ranking order of institutions with respect to a conference, calculated from the actual rel scores when the ground truth becomes available. NDCG@20 is calculated from DCG@20 and IDCG@20, as indicated in Equation 2."}, {"heading": "3. RELATED WORK", "text": "There have been several studies which attempt to rank research institutions based on a variety of performance indicators such as published articles in selected top-tier journals, major international awards and highly cited researchers in prominent fields [8][17]. Though publishing an yearly ranking of research institutions or universities has become a tradition for many academic institutions, newspapers and magazines, quantifying long term scientific impact is still considered a difficult problem [15]. Diversity in the data considered, methodology employed and subjective aspects involved in the ranking procedures across various ranking approaches impose further challenges to this problem.\nA popular ranking methodology called Academic Ranking of World Universities (ARWU) proposed by Liu, Nian Cai, and Ying Cheng utilizes multifarious indicators such as alumni/staff as Nobel laureates and Fields Medalists, highly cited researchers in important fields, articles published in top journals such Nature and Science, and/or indexed by major citation indexes such as Science Citation Index-expanded, and per capita academic performance [8].\nWu, Hung-Yi, et al. (2012) proposed a hybrid multiplecriteria decision making (MCDM) model for weighing various performance evaluation indices as well as to rank research institutions [17]. Their approach involved using Analytic hierarchy process (AHP) to first weigh various performance indices belonging to dimensions such as Administration, Teaching Resources, Internationalization, Faculty, Teaching and Research, and subsequently utilizing the weights to generate the ranking of institutions.\nWang, Dashun et al. (2013) proposed an approach to quantify long term scientific impact using a metric called ultimate impact (c\u221e). This metric provides a journal independent assessment of a paper\u2019s long term impact, and it also has a meaningful interpretation [15]. c\u221e captures the total number of citations a paper will ever acquire.\nDue to the unique nature of the KDD Cup 2016 problem and the associated evaluation procedure, we realized that existing approaches for ranking research institutions wouldn\u2019t\nbe directly applicable in our context. Our approach is described in detail in Section 6."}, {"heading": "4. DATA PREPARATION", "text": "We primarily made use of MAG data that was available for download as a part of the KDD Cup 2016, from [9]. We also utilized ACM Digital Library (http://dl.acm.org/) which provides information on all the papers that are published in each of the ACM conference proceedings. Along with the paper title, it provides information on the number of pages in a paper as well as the section to which it belongs in the proceedings. Microsoft Academic Knowledge API was also used in the initial phase for validation purpose of the aggregated data.\nFor data extraction and processing, we downloaded the MAG dataset to a local Apache Spark[18] cluster consisting of 4 Nodes, with each node having a configuration of 8 cores, 32 GB RAM and 1TB hard disk. The Spark cluster was running on top of Hadoop with Yarn [14]. Spark SQL framework was used for data pre-processing. The uncompressed data volume corresponding to MAG dataset was around 100 GB. Since rel score calculation for historical instances of conferences would require a join between the files \u201dPapers\u201d and \u201dPaperAuthorAffiliations\u201dwith size 29 GB(aprox. 12.6 million records) and 18 GB(aprox. 33.7 million records) respectively, details from the \u201dPapers\u201d file corresponding to the 8 conferences of interest was extracted into separate files for optimizing the join.\nIdentifying full research papers was a problem in itself, and we attempted to solve it in a semi-automated approach utilizing auxiliary data from ACM DL. Our approach is described in detail in Section 5.4. After extracting the list of full research papers corresponding to a conference of interest, PaperId corresponding to each paper is identified by matching the paper title with the \u201dNormalized paper title\u201d field in the \u201dPapers\u201d file. In case if an exact match is not found, a soft matching procedure using sequence alignment is performed to identify the paper title corresponding to the minimum matching cost, representing the most likely match. Duplicates are also eliminated while performing the title matching.\nOnce the relevant PaperIds are identified, rel score calculation per institution per year with respect to a conference of interest would only involve a join between \u201dPapers\u201d and \u201dPaperAuthorAffiliations\u201d, followed by a simple aggregation procedure described in Section 1."}, {"heading": "5. METHODOLOGY", "text": "We attempt to transform the problem of ranking research institutions into a time series forecasting problem. Concretely, relevance score of an affiliation with respect to a conference of interest for a particular year is derived from the list of research papers that got accepted in that conference during that year, using the procedure described in Section 1. Thus, for each conference of interest, an ordered sequence of rel scores are extracted corresponding to a research institution, forming a univariate time series. We represent historical rel scores of an institution with respect to a conference as a time series wherein the first observation corresponds to the very first instance of the conference and the last observation corresponds to the most recent instance of the conference. In case if an institution has no accepted\npapers for a particular conference in a particular year, rel score corresponding to that year would be set as zero in the corresponding time series. We make use of Box-Jenkins models [1] as well as two variants of exponential smoothing models to forecast the rel score of each institution of interest with respect to specific conferences. We generate the ranked list of research institutions with respect to an upcoming conference of interest by ordering affiliations on the basis of predicted rel scores in the descending order.\nAs our main ranking problem got transformed into a time series forecasting problem, time series modeling was one approach that we strongly pursued. We also explored causal modeling using Bayesian networks as well as graph based ranking methods such as Page Rank on co-authorship networks, to address the research institution ranking problem.\nAn auxiliary problem that we had to solve was to identify full research papers accepted by a conference of interest from the set of all accepted papers. We attempted to solve this problem in a semi-automated fashion using classification models along with manual data analysis.\nSince our submissions in each phase of the contest made use of different models, we will first introduce them along with some of our experimental observations. In Section 6, we provide a detailed treatment of the procedures that we followed for generating our actual submissions across phases."}, {"heading": "5.1 Time Series Models", "text": "5.1.1 ARIMA Model Autoregressive Integrated Moving average (ARIMA)model\nis a generalization of an autoregressive moving average model (ARMA) and is applied when the original data appears nonstationary [1]. The initial differencing step is applied to reduce non-stationarity. ARMA model is constituted by a combination of two models namely Autoregressive (AR) and Moving average(MA). In the case of AR model represented by AR(p), the future value of a variable is expressed as a linear combination of the p past observed values together with an error term and a constant. Equation 3 represents an AR(p) model where yt is the observed value and \u01ebt is the random error observed at time t [1]. Parameters of the model are represented by the values \u03c6i for i = 1, 2...p and the constant c. Order of the model is denoted by p.\nyt =\np\u2211\ni=1\n\u03c6iyt\u2212i + \u01ebt + c (3)\nIn the case of an MA(q) model, the future value of a variable is expressed as a linear combination of past error values and a mean value of the observed variable. Equation 4 represents an MA(q) model where \u00b5 denotes the mean values of the sequence, \u03b8j where j = 1, 2...q represents the model parameters and q denotes the order of the model.\nyt = \u00b5+\nq\u2211\nj=1\n\u03b8j\u01ebt\u2212j + \u01ebt (4)\nARMA(p,q) models [1] combine AR(p) and MA(q) models where p and q are the model orders corresponding to p autoregressive terms and q moving average terms, as represented in the Equation 5\nyt =\np\u2211\ni=1\n\u03c6iyt\u2212i + \u01ebt + c+\nq\u2211\nj=1\n\u03b8j\u01ebt\u2212j (5)\nWe observe that length of the rel score time series vary significantly across conferences. For instance, proceedings of older conferences such as SIGMOD and SIGIR start from 1970 and 1971 respectively, resulting in relatively longer time series having 44-45 units of length were as conferences such as KDD have a relatively shorter history, resulting in time series which are only 21 units long. Publication history and consistency of research institutions also varied significantly. For instance, relatively older institutions such as IBM had a longer and more consistent history with respect to certain conferences of interest, compared to relatively newer ones such as facebook. Based on these observations as well as the fact that rel score time series may not always be stationary to fit an ARIMA model, we explore few simple time series models also.\n5.1.2 Exponential Smoothing Exponential smoothing can be thought of as a special case\nof weighted average wherein all data points are considered, while assigning exponentially smaller weights as we go back in time. Thus, exponential smoothing continuously refines its forecast on the basis of most recent observations. We make use of single exponential smoothing, which is popularly used for short-range forecasting. The model assumes that the observed data fluctuates around a reasonably stable mean, and doesn\u2019t have a consistent pattern of growth or trend [7]. Equation 6 denotes the formula for simple exponential smoothing.\ny\u0302t = \u03b1yt + (1\u2212 \u03b1)y\u0302t\u22121 (6)\nThe recursive definition indicates that each new forecast (smoothed value) is a weighted average of the current observation and the previous forecast. The previous forecast in turn was computed from the previous observed value and the forecasted value before the previous observation and so on. The model parameter \u03b1 is called smoothing factor or smoothing coefficient. The value of \u03b1 determines how much weight should be given to the most recent observed value versus the last forecasted.\nWe observe that determining the correct value of \u03b1 would be crucial for the model\u2019s predictive power. Since the nature of the conferences of interest varied significantly, the importance of the most recent rel score of an institution with respect to a conference in determining its position in the upcoming instance also vary. Based on this fact, we empirically determine optimal \u03b1 corresponding to each conference of interest using a grid-search along with a crossvalidation procedure. Details of the procedure is described in Section 6.3.\n5.1.3 Naive Exponential Smoothing Inspired from the key ideas of exponential smoothing and\nbased on our intuition that recent ranking of a research institution with respect to a conference is likely to be more indicative of its rank position in the upcoming instance of that conference, we formulated a simple non-parametric exponential smoothing scheme as represented in Equation 7.\nyt+1 = t\u2211\ni=1\nyi\net\u2212i (7)\nIn this model, forecast for the next instance of time is a weighted sum of all the previously observed values with an exponentially decreasing weight as we go back in time.\nDespite of its simplicity, we observe that this model works quite well for our institution ranking problem and has the advantage that it is non-parametric, making prediction an easy task."}, {"heading": "5.2 Causal Model", "text": "Causal modeling using Bayesian networks is one approach in which we attempt to learn how various factors such as count of authors in an institution within a particular Hindex range, count of authors in an institution with a particular publication frequency range for a conference of interest, weather the institution is academic or industry etc. influence the institutions publication in an upcoming conference of interest.\nThe causal model is represented as a directed acyclic graph with joint probability distribution factorizing according to the graph. Graphical structure and conditional independencies are used to capture the structure of our ranking problem. Learning task from historical data is performed in two steps. Causal structure learning is performed using ParallelPC [3] package and parameter learning is performed using the bnlearn[11] package; both available as part of the RStudio. Generating predictions involve calculating the expected rel scores of institutions with respect to an upcoming conference of interest, after performing belief propagation on the learned network. Though the model\u2019s cross-validation scores were impressive for certain years, high variance in the scores suggested a potential generalization issue."}, {"heading": "5.3 Network Model", "text": "We experimented with a simple network model by constructing an affiliation network based on co-authorship wherein edge weights indicate the number of times co-authorship occurred among the institutions connected by that edge, with respect to a particular conference of interest. Our assumption was that prominence a nodes within this network could potentially indicate its ranking. Page Rank algorithm was used to generate affiliation rankings from this graph. We observed that the cross-validation scores for this model was low."}, {"heading": "5.4 Classification Models", "text": "In order to identify full research papers accepted in a particular conference in a particular year, we started off with a manual process which proved to be very time consuming. We manually downloaded webpages with the list of accepted full research papers from the conference website corresponding to each year and extracted the paper names by parsing the html content using a python script. We improved this procedure by implementing a web-crawler script which automatically downloaded the conference proceedings corresponding to each instance of the conference of interest from the ACM Digital Library (http://dl.acm.org/). To determine if a paper was a full research paper, we initially used manual rules based on the section names in the proceeding to which it belonged. Based on the intuition that total num-\nber of pages in a paper and the name of the section to which it belonged in the proceedings could be potentially used to identify full research papers, we formulated a two-class classification problem to predict if a paper was a full research paper or not, in Phase 3. Labelled training data was generated from the set of full research papers that was provided along with MAG data, after a manual verification step.\n5.4.1 SVM Support Vector Machines (SVMs) are a set of supervised\nlearning techniques suitable for classification, regression and outlier detection. SVMs are based on Structural Risk Minimization principle by Vapnik(1995) from computational learning theory [6][4]. There have been several studies which argue that SVMs are well suited for text categorization tasks and show substantial performance gains compared with many popular models [6].\nWe make use of the LinearSVC implementation of SVM classifier in scikit-learn package[10]. We extract features corresponding to the section names in the proceedings and make use of tf-idf based vectorization scheme to generate feature vectors to train a classifier. The trained classifier takes in a section name within the conference proceedings and predict if that section is likely a full-research paper section or not.\n5.4.2 Random Forests Random Forests is a tree based ensemble learning method\nproposed by Leo Breiman [2]. An ensemble consisting of several decision trees is constructed during the model training phase by sub-sampling features randomly. The model produces output by averaging the predictions of individual decision trees within the forest. This approach improves generalization and reduces the prediction variance and the effect of noise.\nWe make use of the RandomForestClassifier implementation within scikit-learn package. Based on our intuition that full research papers are unlikely to be very short, we used a single feature namely paper length, the total number of pages in a research paper, to train a Random Forest model."}, {"heading": "6. OUR APPROACH", "text": "In this section, we present the specific procedures that were followed to generate our submissions corresponding to each phase, by utilizing one or more of the models described earlier. Cross-validation was applied to determine the quality of predictions using the NDCG metric described in Section 2. We implemented a cross-validation framework that took a prediction file, conference Id, prediction year and a parameter N as inputs and generated the corresponding NDCG@N score by comparing predicted rankings with the actual rankings. To forecast an institution\u2019s rel score for the tth instance of a conference, our models utilize the institution\u2019s rel scores from the first instance till the t\u22121th instance of that conference. In each phase, an expected value of the NDCG@20 score corresponding to our predictions for an upcoming conference of interest was estimated by averaging the corss-validation NDCG scores corresponding to the previous 3 instances of that conference."}, {"heading": "6.1 Phase 1", "text": "Our phase 1 approach rely on MAG data alone for extracting rel scores corresponding to research institutions across years. Since MAG doesn\u2019t differentiate full research papers\nfrom others, we assume that rel scores extracted by considering all accepted papers from a research institution in a conference of interest would be a good indicator of its ranking in the upcoming instance of that conference. Phase 1 results disproved our assumption as our actual score was significantly below our average cross-validation NDCG score.\nOur ranking procedure for this phase involves learning an individual ARIMA model corresponding to each research institution using its yearly rel score time series for a conference of interest followed by forecasting its rel score in the upcoming instance of that conference. We make use of the tsa.ARIMA model within the statsmodels package[12]. The order of the model is specified as a tuple (p, d, q), where p, d, q denotes the number of AR parameters, differences and MA parameters respectively. Corresponding to each rel score time series, a set of 3 tuples (1,1,1), (1,1,0) and (0,1,1) are used as candidates to train the model. The tuple which minimize the Root Mean Squared Error (RMSE) in a cross-validation setting is selected to train the final ARIMA model corresponding to each research institution. In case if the rel score time series corresponding to an institution is non-stationary for a conference of interest, average rel score of the institution in the last 3 instances of that conference becomes the forecasted rel score for the upcoming instance.\nBased on this approach, we observe that our average crossvalidation NDCG score for SIGIR was 0.8694 where as our score in the actual Phase 1 result was only 0.6721, taking us to the rank 104.\nIn retrospect, we recalculate the rel scores by considering only the accepted full research papers in SIGIR over the years, and fit an ARIMA(1,1,1) model for each institution to generate predictions. Full research papers were identified manually in this phase. Non-stationary time series were handled in the same way as we explained earlier. The results are captured in Table 1. We observe that ARIMA(1,1,1) is a promising model for SIGIR when trained with the correct rel scores, as the average cross-validation NDCG@20 score comes to 0.8323 whereas the winning submission score for Phase 1 is 0.8273."}, {"heading": "6.2 Phase 2", "text": "In Phase 2, full research papers are identified by utilizing ACM DL conference proceedings data as an auxiliary source. We extract section name in the proceedings to which a paper belongs as well as the length of the paper from the conference proceedings using a parser. ICML proceedings corresponding to certain years were unavailable in ACM DL. We manually collect the proceedings corresponding to those years.\nWhile parsing the proceedings, full research papers are identified using simple rules based on section names. For instance, sections having names such as \u201dKeynote\u201d, \u201dPanel\u201d, \u201dIndustry Track\u201d, \u201dPosters\u201d etc. are less likely to have full research papers within them. We construct filtering rules by manually adding such keywords into a dictionary and\nthen use substring matching to decide if a section is likely to contain full research papers.\nAfter extracting the list of full research papers accepted by a conference of interest across years, we generate the corresponding rel scores as described in Section 4. Crossvalidation is used to identify the best model corresponding to each conference of interest. Our cross-validation results for KDD are captured in Table 2.\nFor KDD, we observe that Naive Exponential Smoothing performs significantly better than ARIMA models and provide an average NDCG@20 score of 0.7954 during crossvalidation. Phase 2 result confirms that our model generalizes well, as our score in the actual result was 0.8075, taking us to the 2nd rank position in that phase."}, {"heading": "6.3 Phase 3", "text": "We observe that Phase 3 is significantly complicated compared to the previous phases, as the top performing institutions are not consistent across time for the conferences of interest. For instance, for the conference ACM MM, the number of unique affiliations that ever came to top 20 positions in the last 5 years (2011-2015) were 67.\nFor identifying full research papers, we follow the procedure described in Section 5.4. Though manual rules based on paper length alone could potentially provide an approximate list of full research papers, we utilize classification models and manually review their predictions to minimize false positives.\nPoor performance of ARIMA models is attributed to high fluctuations in the rel score data corresponding to this phase. During cross-validation, we observe that naive exponential smoothing and exponential smoothing models perform comparatively better. We perform a grid-search to tune the smoothing parameter \u03b1 for the exponential smoothing model. The optimal values for \u03b1 corresponding to the conferences ACM MM, FSE and MobiComm is empirically determined as 0.4, 0.2 and 0.35 respectively. Our cross-validation results are captured in Table 3.\nWe select exponential smoothing model with \u03b1 = 0.4 to generate predictions for ACM MM, as the average crossvalidation NDCG@20 score is 0.7294. Our actual score in the Phase 3 result was 0.7334, taking us to the 51th rank\nposition in that phase."}, {"heading": "7. DISCUSSION", "text": "We observe that KDD Cup 2016 was unique and challenging in several ways. The open nature of the problem, nonavailability of ground truth data beforehand, several possible solution approaches based on diverse facets of academic ranking such as citation networks, co-authorship networks, similarity among conferences, conference locations, temporal information etc. all added to the difficulty of the challenge.\nGetting to the right data was one of the most important challenge that we faced. Concretely, identifying full research papers from the set of all accepted papers in a conference was non-trivial. Our semi-automated approach for this task by considering ACM DL as an auxiliary data source was in fact a natural progression from a completely manual procedure to a semi-automated mechanism involving a web-crawler and multiple classification models, emphasizing the importance of human-in-the-loop machine learning pipelines [16]. Also, powerful distributed computing frameworks such as Apache Spark and Hadoop helped us to easily deal with the large data volume of MAG. Spark SQL simplified our data preprocessing tasks as many of them were expressible as simple SQL queries.\nModel selection was yet another important aspect. Since the nature of each conference of interest significantly varied, the corresponding rel score time series also had diverse characteristics. This made it essential to have a strong cross-validation framework for selecting the most appropriate model and its parameters for each of the conference of interest. Since our cross-validation framework used NDCG@20 itself as the evaluation metric, we were able to derive a reasonable estimate of our actual result scores, by averaging our cross-validation scores.\nFinally, we observed that once the right data is extracted, even simple models such as exponential smoothing provides good predictive performance and is able to generalize well in this case."}, {"heading": "8. CONCLUSION", "text": "In this paper, we presented our solution to KDD Cup 2016. We transformed the original research institution ranking problem into a time series forecasting problem. Our solution involved a two step procedure in which we first identified full research papers corresponding to a conference of interest using a semi-automated procedure and then applied time series models such ARIMA and exponential smoothing to generate predictions. We implemented a cross-validation framework for selecting the most appropriate model and its parameters corresponding to each conference of interest. This framework proved to be an essential tool that helped us to gauge how well our models generalized. Our solution achieved an overall score of 0.7508, whereas the winning submission scored 0.7656 in the overall results."}, {"heading": "9. REFERENCES", "text": "[1] G. E. Box, G. M. Jenkins, G. C. Reinsel, and G. M.\nLjung. Time series analysis: forecasting and control. John Wiley & Sons, 2015.\n[2] L. Breiman. Random forests. Machine learning, 45(1):5\u201332, 2001.\n[3] A. Hauser and P. Bu\u0308hlmann. Characterization and greedy learning of interventional markov equivalence classes of directed acyclic graphs. Journal of Machine Learning Research, 13(Aug):2409\u20132464, 2012.\n[4] M. A. Hearst, S. T. Dumais, E. Osman, J. Platt, and B. Scholkopf. Support vector machines. IEEE Intelligent Systems and their Applications, 13(4):18\u201328, 1998.\n[5] K. Ja\u0308rvelin and J. Keka\u0308la\u0308inen. Cumulated gain-based evaluation of ir techniques. ACM Transactions on Information Systems (TOIS), 20(4):422\u2013446, 2002.\n[6] T. Joachims. Text categorization with support vector machines: Learning with many relevant features. In European conference on machine learning, pages 137\u2013142. Springer, 1998.\n[7] P. S. Kalekar. Time series forecasting using holt-winters exponential smoothing. Kanwal Rekhi School of Information Technology, 4329008:1\u201313, 2004.\n[8] N. C. Liu and Y. Cheng. The academic ranking of world universities. Higher education in Europe, 30(2):127\u2013136, 2005.\n[9] Microsoft. Microsoft academic graph - 2016/02/05, February 2016. https://academicgraphsea.blob.core.windows.net/graph2016-02-05/index.html.\n[10] F. Pedregosa, G. Varoquaux, A. Gramfort, V. Michel, B. Thirion, O. Grisel, M. Blondel, P. Prettenhofer, R. Weiss, V. Dubourg, et al. Scikit-learn: Machine learning in python. Journal of Machine Learning Research, 12(Oct):2825\u20132830, 2011.\n[11] M. Scutari. Learning bayesian networks with the bnlearn r package. arXiv preprint arXiv:0908.3817, 2009.\n[12] S. Seabold and J. Perktold. Statsmodels: Econometric and statistical modeling with python. In Proceedings of the 9th Python in Science Conference, pages 57\u201361, 2010.\n[13] A. Sinha, Z. Shen, Y. Song, H. Ma, D. Eide, B.-j. P. Hsu, and K. Wang. An overview of microsoft academic service (mas) and applications. In Proceedings of the 24th International Conference on World Wide Web, pages 243\u2013246. ACM, 2015.\n[14] V. K. Vavilapalli, A. C. Murthy, C. Douglas, S. Agarwal, M. Konar, R. Evans, T. Graves, J. Lowe, H. Shah, S. Seth, et al. Apache hadoop yarn: Yet another resource negotiator. In Proceedings of the 4th annual Symposium on Cloud Computing, page 5. ACM, 2013.\n[15] D. Wang, C. Song, and A.-L. Baraba\u0301si. Quantifying long-term scientific impact. Science, 342(6154):127\u2013132, 2013.\n[16] M. Ware, E. Frank, G. Holmes, M. Hall, and I. H. Witten. Interactive machine learning: letting users build classifiers. International Journal of Human-Computer Studies, 55(3):281\u2013292, 2001.\n[17] H.-Y. Wu, J.-K. Chen, I.-S. Chen, and H.-H. Zhuo. Ranking universities based on performance evaluation by a hybrid mcdm model. Measurement, 45(5):856\u2013880, 2012.\n[18] M. Zaharia, M. Chowdhury, M. J. Franklin, S. Shenker, and I. Stoica. Spark: cluster computing with working sets. HotCloud, 10:10\u201310, 2010."}], "references": [{"title": "Time series analysis: forecasting and control", "author": ["G.E. Box", "G.M. Jenkins", "G.C. Reinsel", "G.M. Ljung"], "venue": "John Wiley & Sons,", "citeRegEx": "1", "shortCiteRegEx": null, "year": 2015}, {"title": "Random forests", "author": ["L. Breiman"], "venue": "Machine learning, 45(1):5\u201332,", "citeRegEx": "2", "shortCiteRegEx": null, "year": 2001}, {"title": "Characterization and greedy learning of interventional markov equivalence classes of directed acyclic graphs", "author": ["A. Hauser", "P. B\u00fchlmann"], "venue": "Journal of Machine Learning Research, 13(Aug):2409\u20132464,", "citeRegEx": "3", "shortCiteRegEx": null, "year": 2012}, {"title": "Support vector machines", "author": ["M.A. Hearst", "S.T. Dumais", "E. Osman", "J. Platt", "B. Scholkopf"], "venue": "IEEE Intelligent Systems and their Applications, 13(4):18\u201328,", "citeRegEx": "4", "shortCiteRegEx": null, "year": 1998}, {"title": "Cumulated gain-based evaluation of ir techniques", "author": ["K. J\u00e4rvelin", "J. Kek\u00e4l\u00e4inen"], "venue": "ACM Transactions on Information Systems (TOIS), 20(4):422\u2013446,", "citeRegEx": "5", "shortCiteRegEx": null, "year": 2002}, {"title": "Text categorization with support vector machines: Learning with many relevant features", "author": ["T. Joachims"], "venue": "European conference on machine learning, pages 137\u2013142. Springer,", "citeRegEx": "6", "shortCiteRegEx": null, "year": 1998}, {"title": "Time series forecasting using holt-winters exponential smoothing", "author": ["P.S. Kalekar"], "venue": "Kanwal Rekhi School of Information Technology, 4329008:1\u201313,", "citeRegEx": "7", "shortCiteRegEx": null, "year": 2004}, {"title": "The academic ranking of world universities", "author": ["N.C. Liu", "Y. Cheng"], "venue": "Higher education in Europe, 30(2):127\u2013136,", "citeRegEx": "8", "shortCiteRegEx": null, "year": 2005}, {"title": "Scikit-learn: Machine learning in python", "author": ["F. Pedregosa", "G. Varoquaux", "A. Gramfort", "V. Michel", "B. Thirion", "O. Grisel", "M. Blondel", "P. Prettenhofer", "R. Weiss", "V. Dubourg"], "venue": "Journal of Machine Learning Research,", "citeRegEx": "10", "shortCiteRegEx": "10", "year": 2011}, {"title": "Learning bayesian networks with the bnlearn r package", "author": ["M. Scutari"], "venue": "arXiv preprint arXiv:0908.3817,", "citeRegEx": "11", "shortCiteRegEx": null, "year": 2009}, {"title": "Statsmodels: Econometric and statistical modeling with python", "author": ["S. Seabold", "J. Perktold"], "venue": "Proceedings of the 9th Python in Science Conference, pages 57\u201361,", "citeRegEx": "12", "shortCiteRegEx": null, "year": 2010}, {"title": "An overview of microsoft academic service (mas) and applications", "author": ["A. Sinha", "Z. Shen", "Y. Song", "H. Ma", "D. Eide", "B.-j. P. Hsu", "K. Wang"], "venue": "In Proceedings of the 24th International Conference on World Wide Web,", "citeRegEx": "13", "shortCiteRegEx": "13", "year": 2015}, {"title": "Apache hadoop yarn: Yet another resource negotiator", "author": ["V.K. Vavilapalli", "A.C. Murthy", "C. Douglas", "S. Agarwal", "M. Konar", "R. Evans", "T. Graves", "J. Lowe", "H. Shah", "S. Seth"], "venue": "In Proceedings of the 4th annual Symposium on Cloud Computing,", "citeRegEx": "14", "shortCiteRegEx": "14", "year": 2013}, {"title": "Quantifying long-term scientific impact", "author": ["D. Wang", "C. Song", "A.-L. Barab\u00e1si"], "venue": "Science, 342(6154):127\u2013132,", "citeRegEx": "15", "shortCiteRegEx": null, "year": 2013}, {"title": "Interactive machine learning: letting users build classifiers", "author": ["M. Ware", "E. Frank", "G. Holmes", "M. Hall", "I.H. Witten"], "venue": "International Journal of Human-Computer Studies, 55(3):281\u2013292,", "citeRegEx": "16", "shortCiteRegEx": null, "year": 2001}, {"title": "Ranking universities based on performance evaluation by a hybrid mcdm model", "author": ["H.-Y. Wu", "J.-K. Chen", "I.-S. Chen", "H.-H. Zhuo"], "venue": "Measurement, 45(5):856\u2013880,", "citeRegEx": "17", "shortCiteRegEx": null, "year": 2012}, {"title": "Spark: cluster computing with working sets", "author": ["M. Zaharia", "M. Chowdhury", "M.J. Franklin", "S. Shenker", "I. Stoica"], "venue": "HotCloud, 10:10\u201310,", "citeRegEx": "18", "shortCiteRegEx": null, "year": 2010}], "referenceMentions": [{"referenceID": 11, "context": "A major public data source that we made use of was the Microsoft Academic Graph (MAG) [13], which includes information about publications, citations, authors, affiliations and venues.", "startOffset": 86, "endOffset": 90}, {"referenceID": 4, "context": "The evaluation metric employed to asses the quality of predictions corresponding to each phase is Normalized discounted cumulative gain (NDCG), a commonly used metric in information retrieval [5].", "startOffset": 192, "endOffset": 195}, {"referenceID": 7, "context": "There have been several studies which attempt to rank research institutions based on a variety of performance indicators such as published articles in selected top-tier journals, major international awards and highly cited researchers in prominent fields [8][17].", "startOffset": 255, "endOffset": 258}, {"referenceID": 15, "context": "There have been several studies which attempt to rank research institutions based on a variety of performance indicators such as published articles in selected top-tier journals, major international awards and highly cited researchers in prominent fields [8][17].", "startOffset": 258, "endOffset": 262}, {"referenceID": 13, "context": "ered a difficult problem [15].", "startOffset": 25, "endOffset": 29}, {"referenceID": 7, "context": "Cai, and Ying Cheng utilizes multifarious indicators such as alumni/staff as Nobel laureates and Fields Medalists, highly cited researchers in important fields, articles published in top journals such Nature and Science, and/or indexed by major citation indexes such as Science Citation Index-expanded, and per capita academic performance [8].", "startOffset": 339, "endOffset": 342}, {"referenceID": 15, "context": "(2012) proposed a hybrid multiplecriteria decision making (MCDM) model for weighing various performance evaluation indices as well as to rank research institutions [17].", "startOffset": 164, "endOffset": 168}, {"referenceID": 13, "context": "This metric provides a journal independent assessment of a paper\u2019s long term impact, and it also has a meaningful interpretation [15].", "startOffset": 129, "endOffset": 133}, {"referenceID": 16, "context": "For data extraction and processing, we downloaded the MAG dataset to a local Apache Spark[18] cluster consisting of 4 Nodes, with each node having a configuration of 8 cores, 32 GB RAM and 1TB hard disk.", "startOffset": 89, "endOffset": 93}, {"referenceID": 12, "context": "The Spark cluster was running on top of Hadoop with Yarn [14].", "startOffset": 57, "endOffset": 61}, {"referenceID": 0, "context": "We make use of Box-Jenkins models [1] as well as two variants of exponential smoothing models to forecast the rel score of each institution of interest with respect to specific conferences.", "startOffset": 34, "endOffset": 37}, {"referenceID": 0, "context": "Autoregressive Integrated Moving average (ARIMA)model is a generalization of an autoregressive moving average model (ARMA) and is applied when the original data appears nonstationary [1].", "startOffset": 183, "endOffset": 186}, {"referenceID": 0, "context": "Equation 3 represents an AR(p) model where yt is the observed value and \u01ebt is the random error observed at time t [1].", "startOffset": 114, "endOffset": 117}, {"referenceID": 0, "context": "ARMA(p,q) models [1] combine AR(p) and MA(q) models where p and q are the model orders corresponding to p autoregressive terms and q moving average terms, as represented in the Equation 5 yt = p \u2211", "startOffset": 17, "endOffset": 20}, {"referenceID": 6, "context": "The model assumes that the observed data fluctuates around a reasonably stable mean, and doesn\u2019t have a consistent pattern of growth or trend [7].", "startOffset": 142, "endOffset": 145}, {"referenceID": 2, "context": "Causal structure learning is performed using ParallelPC [3] package and parameter learning is performed using the bnlearn[11] package; both available as part of the RStudio.", "startOffset": 56, "endOffset": 59}, {"referenceID": 9, "context": "Causal structure learning is performed using ParallelPC [3] package and parameter learning is performed using the bnlearn[11] package; both available as part of the RStudio.", "startOffset": 121, "endOffset": 125}, {"referenceID": 5, "context": "SVMs are based on Structural Risk Minimization principle by Vapnik(1995) from computational learning theory [6][4].", "startOffset": 108, "endOffset": 111}, {"referenceID": 3, "context": "SVMs are based on Structural Risk Minimization principle by Vapnik(1995) from computational learning theory [6][4].", "startOffset": 111, "endOffset": 114}, {"referenceID": 5, "context": "There have been several studies which argue that SVMs are well suited for text categorization tasks and show substantial performance gains compared with many popular models [6].", "startOffset": 173, "endOffset": 176}, {"referenceID": 8, "context": "classifier in scikit-learn package[10].", "startOffset": 34, "endOffset": 38}, {"referenceID": 1, "context": "Random Forests is a tree based ensemble learning method proposed by Leo Breiman [2].", "startOffset": 80, "endOffset": 83}, {"referenceID": 10, "context": "ARIMA model within the statsmodels package[12].", "startOffset": 42, "endOffset": 46}, {"referenceID": 14, "context": "considering ACM DL as an auxiliary data source was in fact a natural progression from a completely manual procedure to a semi-automated mechanism involving a web-crawler and multiple classification models, emphasizing the importance of human-in-the-loop machine learning pipelines [16].", "startOffset": 281, "endOffset": 285}], "year": 2016, "abstractText": "The crux of the problem in KDD Cup 2016 involves developing data mining techniques to rank research institutions based on publications. Rank importance of research institutions are derived from predictions on the number of full research papers that would potentially get accepted in upcoming top-tier conferences, utilizing public information on the web. This paper describes our solution to KDD Cup 2016. We used a two step approach in which we first identify full research papers corresponding to each conference of interest and then train two variants of exponential smoothing models to make predictions. Our solution achieves an overall score of 0.7508, while the winning submission scored 0.7656 in the overall results.", "creator": "LaTeX with hyperref package"}}}