{"id": "1611.00547", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "2-Nov-2016", "title": "Limitations and Alternatives for the Evaluation of Large-scale Link Prediction", "abstract": "link prediction, the problem of identifying missing links among a set of inter - related data entities, is is a popular field of research due perhaps to its application to graph - like domains. producing consistent evaluations of the composite performance of the many link prediction algorithms being proposed can be challenging due to variable graph properties, such as size and density. in this paper we together first discuss traditional causal data mining solutions which are applicable to link prediction evaluation, with arguing about their capacity for producing faithful judgments and useful evaluations. we also introduce an innovative modification to a traditional evaluation methodology with the goal potential of adapting it to the problem of evaluating link prediction algorithms when applied differently to large graphs, by tackling earlier the problem of ignoring class imbalance. systematically we empirically anal evaluate the proposed methodology and, building on these findings, make a useful case for its importance depending on broader the evaluation of large - scale graph processing.", "histories": [["v1", "Wed, 2 Nov 2016 11:07:51 GMT  (854kb,D)", "https://arxiv.org/abs/1611.00547v1", "Submitted to the Journal of Complex Networks. 15 pages, 4 tables, 4 figures"], ["v2", "Fri, 25 Nov 2016 08:52:02 GMT  (854kb,D)", "http://arxiv.org/abs/1611.00547v2", "Submitted to New Generation Computing, 15 pages, 4 tables, 4 figures"]], "COMMENTS": "Submitted to the Journal of Complex Networks. 15 pages, 4 tables, 4 figures", "reviews": [], "SUBJECTS": "cs.SI cs.AI cs.DB", "authors": ["dario garcia-gasulla", "eduard ayguad\\'e", "jes\\'us labarta", "ulises cort\\'es"], "accepted": false, "id": "1611.00547"}, "pdf": {"name": "1611.00547.pdf", "metadata": {"source": "CRF", "title": "Limitations and Alternatives for the Evaluation of Large-scale Link Prediction", "authors": [], "emails": ["dario.garcia@bsc.es"], "sections": [{"heading": "1 Introduction", "text": "The structural particularities of graphs (i.e., networks) has motivated the design of specific machine learning methods for processing this type of data. These knowledge discovery tools typically try to exploit structural properties of high-dimensional, inter-connected data sets, with the goal of learning from the relational patterns of its entities. Among the names used to refer to some of these tools are:\n\u2022 Graph-based data mining ([21, 46])\n\u2022 Statistical Relational Learning ([17, 41])\n\u2022 Link Mining ([16, 35])\n\u2022 Network or Link Analysis ([19, 38])\n\u2022 Network Science ([32])\n\u2022 Structural Mining ([9])\nFor the sake of simplicity from now on we refer to all these methods using the general term graph mining.\nThe characterization of graph mining algorithms is relevant, not only because graphs represent data in a rather unique way, but because they are also able to capture a different type of information. While traditional table representations of entity/value pairs naturally capture intra-entity patterns, and so does traditional machine learning, network data captures mostly inter-entity patterns. Mining graphs therefore requires a shift in perspective, moving from an instance-attribute paradigm to an instance-instance paradigm.\nThese new methods of machine learning were designed to tackle network related problems such as:\nar X\niv :1\n61 1.\n00 54\n7v 2\n[ cs\n.S I]\n2 5\nN ov\n2 01\n\u2022 Finding the relevance of entities based on their relations or link-based object ranking [lu2016vital, 16] e.g., PageRank ([42]) and HITS ([27])\n\u2022 Finding groups of entities strongly related or community detection[fortunato2010community] e.g., stochastic blockmodeling ([25])\n\u2022 Finding reoccurring association patterns or frequent subgraph discovery [jiang2013survey], e.g., Apriori based algorithms ([23])\nThese graph mining tasks, which have relations among entities as the cornerstone of their design, are applicable to domains such as life sciences ([3, 18, 45]), sociology and social networks ([1, 39, 48]), collaboration analysis ([2, 35, 43]), business and product recommendation ([6, 22]), and even law enforcement and anti-terrorism ([4, 8, 28]).\nThe increased dimensionality of graph data sets often comes hand in hand with an increase in size. Together, large dimensionality and size, define the increasingly frequent family of domains known as large scale networks (e.g., Twitter, the brain connectome or web graphs). Regardless of the underlying domain, computing large scale networks represents a challenge in terms of efficiency, parallelism and scalability. Efficiency, because computing models and hardware architectures are not optimized for handling graph data. Parallelism, because the size of large networks makes serial approaches unfeasible. And scalability because limited computational resources constrain the applicability of exhaustive, model-based solutions. Beyond the challenges on how is the process implemented, the particularities of large scale networks also generate novel challenges on what must be done with the data from a data mining perspective. A prime example of that is deciding how to evaluate the performance of the mining algorithms in this novel setting.\nIn this paper we focus on the challenge of faithfully evaluating a graph mining task, Link Prediction (LP), when working with large scale graphs. The goal of LP is to find new or missing edges within a given graph. By using LP one can directly grow any data set represented as a graph using the same graph language (i.e., adding edges among vertices by using only previous edges and vertices). As a result one could apply LP algorithms to virtually any domain that can be represented as a graph without supervision. The complexity of achieving good performance on the LP task increases with the graph size, as does the problems at faithfully evaluating performance. When a graph grows linearly in vertices, the number of possible links within the graph grows quadratically. This defines a needle in a haystack context where relevant or useful predictions are but a tiny fraction of all predictions. Keeping a good precision in this type of problem turns out to be very difficult, as the smallest false positive acceptance rate will amount to a huge absolute number of wrongfully predicted edges (i.e., false positives). But in parallel, estimating the quality and applicability of results also becomes particularly difficult.\nIn \u00a72 we explore the current solutions provided by the data mining community, particularly in the context of test set construction and class imbalance. We explore the features of those methods for the particular case of LP in \u00a73, and argue on the utility of popular approaches like ten-fold cross validation and precision-recall curves. Then in \u00a74 we propose an adapted evaluation methodology, and show an empirical analysis on its impact when applied to several graphs. Conclusions are presented in \u00a76.\nThis paper is an extended version of [15], improving the definition of the proposed evaluation methodology, analysing its properties in more depth, and adding an empirical comparison between the proposed methodology and current solutions (\u00a74). Further images and tables are provided to illustrate on the relevance of the contribution."}, {"heading": "2 Evaluation context", "text": "LP and the rest of graph mining tasks represent a new family of data mining algorithms. The particularities of these algorithms originate from the special nature of networks. Particularities that include data dimensionality, variable dependency, and often log-scale distribution of information. Even with these differences, one can find analogies between graph mining problems and general data mining problems. From a traditional data mining perspective, LP can be reduced to a binary classification problem between two classes: the positive class of edges that do or should exist, and the negative class of edges that do not and should not exist. Given a directed graph G = (N,E),\nand all the possible edges in the graph (of size |N \u2217 (N \u2212 1)|), the problem of LP would be that of distinguishing between those edges that exist, e \u2208 E, and those that do not, e /\u2208 E. The analogy between LP and binary classification is accurate in most cases, as the target of LP is often to identify the positive class. Which in terms of graph mining is equivalent to finding and proposing missing links. For the remaining of this paper we will assume this mainstream case.\nIn the bibliography there are a many methodologies available for the evaluation of a binary classification problem. These methodologies are typically discriminated based on the problem characteristics, which in the case of the LP classification problem are dominated by class imbalance."}, {"heading": "2.1 Test Sets", "text": "To evaluate a binary classifier empirically we require a test set. Given a graph, LP algorithms can propose a number of edges to be added to it, however, to validate the quality of those proposals, we need a set of edges known to be correct and missing from the graph. In evaluation, each predicted edge found in the test set is considered as a correct prediction, while each predicted edge not found is considered as a mistake. From these results one can then obtain performance indicators like precision and recall.\nThe main problem with tests sets is how to obtain them. In the case of LP, the best test set one can use is that which represents a natural extension of the graph being computed. This is feasible on temporally grounded domains. For example, for a graph composed from Wikipedia articles and the hyperlinks among them from 2012, we can obtain a natural test set by considering the links added to Wikipedia after 2012 ([13]). Unfortunately, the domains and graphs having such incremental nature are rare. Instead, in most cases one must settle for the more drastic approach of randomly removing a number of edges from the graph in order to use them as test set. This yields other problems such as how to define a representative test set for the LP problem [zhu2012uncovering].\nA frequent concern when one must split a set of data to produce a test set is representativeness. Typically, a random split cannot guarantee a prototypical distribution. The most frequent solution for avoiding bias is ten fold cross validation (10-fold CV). Within the LP problem, splitting data to build a test set will be often necessary ([50]). However, as we show in \u00a73.2, performing 10-fold CV is redundant. Hence, for all the test performed in this article we will use a random split of 10% of edges on each graph to build the test set."}, {"heading": "2.2 Class imbalance", "text": "A recurrent type of real world graphs are scale-free networks, from protein interactions, to social networks or the WWW [barabasi2009scale], a type of network where degree distribution follows a power-law. This distribution implies a significant sparsity in the graph [del2011all], which becomes more severe as the graph grows. It is indeed hard to find real world networks where the average vertex degree is over fifty ([2, 32, 34]), a feature consistent even as graphs grow to billions of vertices ([44]). In the context of reducing the LP problem to a binary classification problem, scale-free networks results in a severe class imbalance, as the negative class becomes much larger in comparison to the positive class. As is well known, class imbalance can be a severely complicating factor in classification problems ([7, 33, 47, 49]).\nThe degree of class imbalance found on large graphs when performing LP is hard to overestimate, and even for non-scale-free networks, large, dense graphs are very hard to come by. To illustrate on the type of class imbalance medium and large graphs may have, Table 1 shows the topological properties of some real world graphs obtained from WordNet ([14]), the Cyc project ([31]), the movierelated IMDb knowledge base ([13]), and several web graphs from the Notre-Dame University ([5]), Stanford/Berkley universities ([26]), a Google challenge ([13]), and the Hudong, Baidu ([29]) and Wikipedia encyclopedias ([30]). Notice how, in the best case scenario, the class ratio is of 1 positive instance for every 11,382 negative instances.\nThe impact of class imbalance on classifiers was explored in [24], and authors concluded that this impact was largely reduced when all classes were of reasonable size. A priori this should be good news for LP on large graphs, as its classes seem to be of reasonable size; the positive class of all graphs shown in Table 1 is over 10,000 entities. Unfortunately, this assumption does not apply to the LP problem ([32]), and the reason for this is twofold. On one hand the imbalance found in LP on large graphs is several orders of magnitude larger than any imbalance tested in [24].\nThus its impact may become significant at some point. On the other hand, LP is not a standard data mining classification problem, and given the small amount of information provided by each edge (e.g., positive instances have no attributes), a class composed 30,000 elements could still be considered to be small. In reality, class imbalances of 1:10,000 or larger translate as a strong tendency towards false positive classification mistakes, as incorrectly accepting negative instances becomes almost inevitable. The main challenge of LP is therefore precision, a notion that should be taken into account by the evaluating methodologies."}, {"heading": "2.3 Evaluation under class imbalance", "text": "Class imbalance is key in classification problems as it implies difficulties in predicting the small class. A small class that is in most cases the main target of the predictive process. Consequently there is a large and growing state-of-the-art on how to deal with class imbalance. A frequent approach of supervised or semi-supervised learning methods to overcome class imbalance is to equilibrate the training set through over-sampling, under-sampling or feature selection ([7, 33, 47, 49]). Unsupervised LP algorithms cannot benefit from these solutions as adding or removing edges from the data set would equal to perform arbitrary classification, and there are no features to be removed beyond the existence of edges among vertices. As a result, for the LP problem one must focus only on those aspects of class imbalance that are relevant for unsupervised methods: deciding which metrics to use when evaluating and comparing the performance of binary classifiers for data sets with a large class imbalance.\nThe most frequently used methods for classifier evaluation are based on accuracy. However, these methods are biased towards the classification of instances within the large class, making them inappropriate for imbalanced data sets ([7, 20, 33, 47]). Using them for LP would be almost analogous to measuring the capability of algorithms at predicting which edges should not be added to the graph, which is not the goal of LP. For data sets with large class imbalance, the most frequently used methodology is the Receiver Operating Characteristic (ROC) curve and the derived Area Under the Curve (AUC) measure ([11]). The ROC curve sets the True Positive Rate (TPR) against the False Positive Rate (FPR), making this metric unbiased towards entities of any class regardless of their size. The AUC measures the area below the curve in order to compare the overall predictive performance of two different curves.\nROC curves are unbiased in imbalanced contexts, but their consideration of miss-classifications can result in mistakenly optimistic interpretations ([10, 50]). When the negative class is very large, showing mistakes as relative to the negative class size (i.e., FPR) can hide their actual magnitude, and make it complicated to assess the overall performance quality. From a practical perspective, most of the ROC curve is irrelevant when dealing with large class imbalance, as it represents completely unacceptable precisions. For example, one may consider that a classifier achieving a TPR of 0.95 (finding 95% of all positive edges) and a FPR of 0.01 (incorrectly accepting 1% of all negative edges) in the ROC curve demonstrates an excellent performance. However, for a data set with a positive:negative rate of 1:100 those results imply that the classifier accepts more negative edges than positive edges (i.e., it has a precision smaller than 0.5). For domains with a 1:11,000 or worse ratio, like the ones shown in Table 1, the limitations of the ROC curve become even more striking. In those\neven a FPR of 0.0001 implies a very poor precision/performance regardless of the TPR achieved. Consider a theoretical graph defined by N=100,000 and E=1,000,000, for which we build a test set using 10% of the available edges. The positive class size of this graph will be 100,000, the negative class size 9,998.9 million, and the imbalance ratio 1:99,989. Notice this graph is not particularly imbalanced (see Table 1 for comparison with graphs coming from real-world domains). A ROC curve for a LP algorithm on this theoretical graph could look like the one shown in Figure1. A FPR of 0.1 for such a graph (incorrectly accepting 10% of negative class instances) would imply the wrong prediction of 999,890,000 edges, while our graph originally had 1,000,000 edges (900,000 after the test set split). Even with a FPR of 0.0001 a classifier would be making more false predictions than edges found in the graph. This simple example shows how most of the ROC curve is virtually useless for domains with a very large imbalance, which leads us to seriously question the utility of the associated AUROC measure in this context.\nPrecision-recall (PR) curves are an alternative to ROC curves. A PR curve is resistant to class imbalances as it focuses only on the performance achieved for the positive class (typically the small one), and does not show the number of correct classifications for the negative class. PR curves plot precision (y axis) against recall (x axis), directly showing the precision of the classifier. Precision can also be obtained from ROC curves, but is not straightforwardly visible. ROC and PR curves are related; a curve dominates another (it is above it) in the ROC space if and only if it also dominates it in PR space, but are not equivalent; a classifier that optimizes on ROC space will not necessarily also optimize on PR space ([10]). One particularly relevant difference between ROC and PR curves regarding the interpretation of predictive performance is on how errors are represented. While ROC curves show miss-classifications as relative to the total number of negative cases, PR curves show miss-classifications as relative to the total number of predictions done.\nAn illustration on the impact of these differences is the curves defined by a random classifier, which always performs poorly in an imbalanced data set. The ROC curve always represents the random classifier as a straight line between points (0, 0) and (1, 1), regardless of class imbalance, with all better than random classifiers represented as lines above that diagonal. PR curves on the other hand represent random classifiers in imbalanced data sets a flat line on the x axis, as their precision in imbalanced settings is always close to zero. This alone shows that PR curves can provide richer characterizations of classifiers for imbalanced data sets."}, {"heading": "3 Evaluating link prediction", "text": "Current solutions for performance evaluation, like the ones shown in \u00a72, have severe limitations when applied to large graph mining problems. Issues like test set representativeness, or the evaluation under class imbalance, reach a new degree of relevance when considering problems like LP on large networks. In this section we discuss these problems in depth and propose solutions fitting our LP problem."}, {"heading": "3.1 Representativeness of test sets", "text": "The use of a test sets to evaluate LP implies the assumption that the test set (the prediction of which is evaluated by the curves) faithfully represents the correct edges missing from the graph. Or in other words, that all edges not found in neither the graph nor in the test set, are wrong. In certain cases, where the graph topology is stable, this may be an accurate assessment. For example, a graph obtained from WordNet data (as shown in [14]) can be considered as almost perfect, since WordNet relations have been identified, discussed and implemented by linguists for decades. In other cases though test sets are an imperfect measure of the right edges missing from the graph. Consider for example a graph obtained from Wikipedia articles and hyperlinks, in which the pagelinks among Wikipedia articles from 2012 are used as training and the new pagelinks added on 2013 are used as test. This graph is clearly incomplete, as new links are being added every day. The Wikipedia grows continuously and the fact that a link is not implemented so far does not mean it is wrong. As a result, one must take into account that some of the edges predicted, not found in the test set and labelled as mistakes, will in fact be correct predictions corresponding to edges not yet added to the graph.\nUsing a test set which does not fully represent the target class implies an underestimation of performance, as the predictions being made outside of the test set will always (and not always correctly) be considered as mistakes. Nevertheless, since this limitation applies to all the methods being evaluated (assuming all methods are evaluated using the same test set), it can be argued that the resultant performance indicators remain valid for comparative purposes. That is, we can still find out which LP algorithm works better. The unavoidable shortcoming of representativeness comes when evaluating the precision of a score in the context of applicability. That is, we cannot be sure of how well performs the best LP algorithm. The only way to obtain a faithful, non-comparative evaluation of performance of a single LP algorithm would be a hand-made validation. One could achieve an approximate solution by performing a sampling process of all edges predicted, manually evaluating the sampled edges as correct or incorrect predictions, and then extrapolating the performance obtained on the sample to the rest of the graph. There are several aspects to keep in mind with this solution. First of all, the sampling needs to be large for the extrapolation to be faithful, which equals to many hours of manual labelling. And second, the sampling would have to be done at several thresholds so that extrapolations are representative of the whole curve. Sampling may therefore be the only accurate evaluation methodology for estimating predictive performance of a given score on a specific domain, at the price of a huge amount of manual labelling hours."}, {"heading": "3.2 10-fold CV", "text": "10-fold CV is a commonly used technique for reducing variance in test set construction and improving representativeness. Although 10-fold CV is almost universally expected when using test sets that are a random portion of a complete data set, we argue that it is not needed when performing large graph mining. The main reason behind that argument being the large size of these domains, which naturally avoid variance. To assess the utility of 10-fold CV we test a webgraph obtained from a Google challenge, composed by 875,713 vertices and 5,105,039 edges. This particular graph could be considered to be medium sized, as it is easy to find much larger ones (see Table 1). The conclusions obtained for this graph could be extended, even with more reliability, to larger graphs.\nA random 10% test set of the Google challenge webgraph is composed by 510,503 edges. We obtain ten different random test sets from this graph, and use each one of them to evaluate seven different LP algorithms. As a result we obtain ten PR curves (as these are preferred to ROC curves, see \u00a72.3), for seven different LP algorithms. Algorithms used are RA (Resource Allocation), AA (Adamic-Adar), CN (Common Neighbours), INF, INF LOG, INF 2D and INF LOG 2D, all of which are described in [13]. In Figure 2 we show the ten curves belonging to one of those algorithms (INF LOG 2D),\nillustrating the minimal variance found among curves. The ten curves are virtually identical, which implies that variance among random splits is irrelevant. To empirically validate this assertion, in Table 2 we show the AUPR of the seventy curves obtained, ten for each algorithm. Results show that the variance of 10 executions using 10 randomly selected tests sets is very low. In fact, the standard deviation represents a 0.32% of the mean value in the worst case (algorithm #3). Such a low variance is the result of having a large test set, which, given the law of large numbers, will tend towards a stable sample. In this context it seems clear that performing 10-fold CV is not necessary, as a single run is a representative and accurate sample of performance."}, {"heading": "AA 0.0892558 0.0899991 0.08971357 0.0002287783", "text": ""}, {"heading": "CN 0.10017 0.10083 0.1005145 0.0001902058", "text": ""}, {"heading": "RA 0.0618143 0.0625483 0.06225763 0.0002040158", "text": "Regardless of these results, performing 10-fold CV is not a wrong or misguiding strategy. Our argument here is that 10-fold CV is not required in order to consider some results representative. This fact is particularly relevant due to the computational cost of computing large scale graphs. Building test sets and running graph mining algorithms on them is typically expensive in computational terms. Hence, the physical resources and time spent doing ten equivalent executions could be use more efficiently elsewhere."}, {"heading": "3.3 Precision-Recall curves in link prediction", "text": "Most research on LP use ROC curves ([8, 12, 34, 35, 39]) or PR curves ([2, 41]) for evaluation, but for the reasons discussed in \u00a72.3 we find PR curves to be more appropriate. PR curve shows the\nperformance of a classifier at various thresholds: at the left part of the curve are the high-certainty predictions where precision is higher, while at the right part of the curve are low-certainty predictions where recall grows at the expense of a lower precision. Through the PR curve one can see which classifier performs better at each threshold. The derived AUPR metric of the PR curve on the other hand determines which classifier performs better overall, when all thresholds are considered at the same time with the same importance. Due to this last point, we find the AUPR score to be sub-optimal for evaluating the applicability of results. Given the imbalance of the graphs used (see Table 1), a large part of the PR curve represents very low precisions. As recall grows precision can quickly reach levels unacceptable from a practical point of view. At this point one must consider which results are worth taking into account for evaluating performance. If we intend to achieve an applicable methodology we should focus on its performance where it matters, when a reasonable number of mistakes are being done. At extremely low precisions (e.g., 0.01%) results are likely to be useless, and therefore should not be taken into account (certainly not with equal weight) into the evaluation. For this reason in \u00a74 we propose a modified version of the AUPR measure with the goal of focusing on applicability."}, {"heading": "4 Constrained AUC", "text": "The goal of classic binary classification is to fully discriminate two sets. This is idoneous when dealing with balanced or typically imbalanced domains, but becomes problematic for domains with class imbalances in the order of millions (e.g., see Table 1). In this context, exhaustively discriminating the two classes becomes exceedingly complicated, which eventually renders a portion of the results obtained useless (see Figure1). Evaluation methodologies are unaware of the actual utility of each portion of the results, and combine the evidence provided by all results equally. Consequently, as the portion of results that is useless grows, the usefulness of the evaluation methodologies results decreases.\nThe LP problem is one where this disjunction between usefulness and classification performance takes place. As a solution we argue that the goal of LP is to produce high certainty and high utility predictions, instead of fully discriminating two sets. Indeed, LP does not need to classify most edges correctly in order to be useful, while trying to correctly classify all possible edges is a virtually impossible task due to the complexity of the problem. Instead, for the sake of making it useful for real world applications, LP should try to identify as many positive edges as possible, while keeping the number of false positives within an acceptable range.\nTo formally evaluate performance in terms of usefulness we first need to ground that subjective term. Since every domain, application and even user may have its own definition of it, we decide to define instead a minimal threshold which guarantees that all useful results are beyond it. If the hypothesis is accepted, all relevant results will be provided and accounted for, and utility, although not optimized, will be improved. The hypothesis we propose is as follows:\nHypothesis 1 Given a link prediction process applied on a graph G = (V,E), once the number of false positives is equal or larger than |E|, all further predictions become irrelevant.\nThe idea behind this hypothesis is that, given a data set X, we will rarely accept any result which includes a number of mistakes as large as X itself. This is a conservative approach that may hold for most applications and domains.\nBased on this hypothesis we propose the Constrained AUC score (CAUPR when applied to the PR curve) with the goal of evaluating LP scores based only on the predictions produced while keeping an acceptable number of mistakes (i.e., less than the graph size). The CAUPR is analogous to the traditional AUPR measure, computing the AUC of the PR curve where the number of non-existing edges mistakenly accepted by the score (i.e., false positives) is equal or lower than the total number of edges in the graph. Once the number of false positives is larger than the number of edges, the CAUPR for the rest of the curve equals 0. In practice, the CAUPR is a subset of the AUPR, starting from the high confidence predictions (left side of the PR curve) and ending when a given threshold is reached.\nAs an example, see Figure 3, where the PR curves of a LP score are shown for two different graphs. The vertical cut on each curve represents the location of the CAUPR threshold for each particular\ndata set and score, limiting the CAUPR to the area at the left of the threshold (coloured in grey), whereas the AUPR considers the whole curve."}, {"heading": "4.1 CAUPR properties", "text": "The goal of the CAUPR performance measure is to avoid the evaluation of irrelevant parts of the PR curve. For that purpose CAUPR defines a threshold x at which a given algorithm is accepting more false positives than edges available in the graph. For PR curves, x indicates the maximum recall an algorithm can obtain before reaching the threshold, and splits the PR curve in two. The PR sub-curve in the recall interval [0, x] will be the one CAUPR will take into account, while the PR sub-curve in the recall interval [x, 1] will be the difference between the CAUPR and the AUPR. Significantly, x is in the interval [0, 1]. It can be zero, if the first |E| predictions made by the LP algorithm are mistakes, but it can also be one, if all true positives are found before |E| false positives are accepted. In this last case the CAUPR ignores nothing of the curve, and is equal to the AUPR. Consequently, the CAUPR and AUPR measures will only differ when the LP algorithms do not perform well enough (as defined by Hypothesis 1)\nThe LP scores that may be penalized by CAUPR in comparison with the AUPR are those which outperform their competitors on the irrelevant part of the curve. Since that area, if existent, is located at the right side of the curve, and since the PR curve is monotonically decreasing, the CAUPR will penalize the scores producing more horizontal PR curves. On the other hand, LP scores which make more accurate predictions at the beginning of the curve, when the number of false positives is still assumable, but which quickly lose precision (i.e., those with a more vertical PR curve), will be the ones to benefit from the CAUPR. Consider the PR curves of Figure 4. The more horizontal curve (H) has a larger AUPR than the more vertical curve (V), but V outperforms H in CAUPR. This is due to the higher precision obtained by V at high confidence predictions, which causes a larger portion of V\u2019s AUPR to be considered by CAUPR. H, on the other hand, outperforms V at higher recall values, and mostly when the number of false positives is already larger than the graph itself, beyond the CAUPR threshold.\nAnother relevant feature provided by Hypothesis 1 is domain adaptation. By considering the number of edges in the graph as threshold, the CAUPR is affected by graph properties such as density and size (i.e., large graphs will accept more mistakes than small ones, dense graphs will accept more mistakes than sparse ones). This is an interesting feature not found in the AUPR measure: AUPR evaluates the predictions done on a graph with N vertices and 1,000 edges and the predictions done on a graph with N vertices and 100,000 edges under the same conditions, as if these two problems were equally difficult. A clearly unrealistic assumption that complicates the interpretability of results. CAUPR, on the other hand, implicitly incorporates the size and density of the graph into the evaluation, allowing more concessions when they are acceptable by the domain, according to Hypothesis 1)."}, {"heading": "4.2 CAUPR impact", "text": "To empirically evaluate the impact of the CAUPR measure we use three well known LP algorithms: Common Neighbours (CN, [40]), Adamic Adar (AA, [1]) and Resource Allocation (RA, [51]). For each of those algorithms we compute their AUPR and CAUPR when applied to the nine graphs described in Table 1. The algorithm obtaining the best AUPR on each graph (i.e., the algorithm of reference) and its corresponding AUPR and CAUPR values can be seen in the first four columns of Table 3. Each of the three LP algorithms obtains the best AUPR score on at least one of the nine graphs.\nFor each of the nine graphs we compare the results obtained by the algorithm of reference with the results obtained by the remaining two algorithms. We show the AUPR and CAUPR values of these two algorithms as a percentage of the values of reference, so that for example, for the WordNet graph, the AUPR of the AA algorithm is shown to represent a 46,3% of the AUPR of the algorithm of reference (see 2nd row, 6th column of Table 3). By also showing the percentage relation for the CAUPR measure, we can see the relative difference between both measuring methods. Using the same example, since the CAUPR of the AA algorithm is 40,7% of the CAUPR of RA, the difference is -5,6% points. Thus, the difference in performance between the AA and RA algorithms is 5,6% larger according to the CAUPR measure than for the AUPR measure.\nThe Impact column of Table 3 shows the changes in performance according to CAUPR, and shows how this measure may provide a relevant variation in the evaluation of LP for graphs with 100,000 vertices or more. Significantly, the variation provided by the CAUPR measure does not benefit any of the three algorithms: all of them have positive and negative differences. Results also indicate that\nvariations tend to increase with the graph size, since larger graphs typically have larger imbalances, which often imply a lower recall threshold for the CAUPR measure. Clearly, having a lower recall threshold makes it easier (though not necessary) for the CAUPR and AUPR measures to differ.\nTable 4 shows the recall thresholds for the CAUPR measure of every graph and algorithm tested. This table gives a measure of the portion of the PR curve that is being disregarded by the CAUPR method. A threshold of 0.1 implies that 90% of the curve is outside the CAUPR range, and therefore not considered in the CAUPR evaluation. The impact of the CAUPR measure, powered by the class imbalance, is highlighted by the fact that for five of the nine graphs a majority of the curve is irrelevant according to Hypothesis 1.\nOne remarkable result to be considered is the variation on the largest graph used, the DBpedia graph. In this domain, the AA algorithm outperforms the rest according to the AUPR measure. However, according to the CAUPR measure the RA algorithm is best instead, with a three times larger CAUPR. To analyze these results lets first consider the DBpedia graph, which has the largest class imbalance of those graphs here considered, with more than 2 million negative edges for each positive one. As shown in Table 4, RA performs very well on the DBpedia graph, reaching a recall of 26% before the threshold of mistakes is attained. Comparably, AA retrieves only a 5% of all positive edges by the time it reaches the threshold. Nevertheless, AA seems to outperforms RA for the portion of the curve beyond the threshold, thus obtaining a higher AUPR value. An example of PR curves with this kind of behaviour are illustrated in Figure 4, and are a showcase of the relevance of the proposed CAUPR measure."}, {"heading": "5 Related Work", "text": "To the best of our knowledge, there are no previous proposals on how to adapt standard evaluation methods (i.e., PR curves) to the particularities of large-scale LP. Similar solutions to our own (that of using a sub-part of the PR curve) have been previously considered for ROC curves on other contexts, particularly in the domain of diagnostic medicine, where several authors have considered the possibility of using only a partial ROC curve [36, 52]. In this field, the metrics used to cut the ROC\ncurve are often clinical relevance and clinical application. Rather differently, our proposal constrains the PR curve based on a domain agnostic measure: the input data set imbalance. The methodology we propose is thus applicable to virtually any LP evaluation problem, regardless of the data origin."}, {"heading": "6 Conclusions", "text": "Two of the most disturbing features of real world graphs for the evaluation of LP algorithms are their size and scale-free topology. Medium sized graphs (e.g., up to a few million vertices) are hard to compute through exhaustive algorithms, and have motivated the design of graph-specific parallel models (e.g., [37]). However, this same size can also simplify certain data mining steps, such as assessing test set construction as an independent dataset. This assessment, which is often implemented through 10-fold cross-validation, is actually avoidable in medium and larger graphs, since the size of a random 10% split (e.g., hundreds of thousands of vertices) already guarantees the construction of a stable sample (see Table 2). These results were consistent for graphs between 100,000 vertices and 17 million vertices, and can be extended to any graph larger than those. Avoiding cross validation can entail significant savings in terms of computational resources, allowing one to reduce the cost of every performance evaluation process by a factor of ten (assuming we were to use 10-fold cross-validation).\nThe second graph feature which is particularly relevant for evaluation is related with the scale-free topology of many real world graphs. Since LP can be reduced to a binary classification problem, where one tries to separate a positive class (the edges missing from the graph which should be added) from a negative class (the edges missing which should not be added), the scale-free topology implies a huge imbalance between both classes. In fact, imbalance reaches a degree rarely found in the bibliography, where, for every positive instance, there are tens of thousands or even millions of negative ones. Significantly, imbalance becomes larger as graphs do, making this an issue for current and future graph mining applications.\nOne side effect of huge class imbalance relates with the evaluation methodology being used. Binary classification problems are often evaluated through ROC curves, which plot TPR against FPR. FPR is however an uninformative performance scale in highly imbalanced domains, as most of the curve implies a huge amount of false positives (see illustrative Figure 1). For LP in medium or large graphs, PR curves provide a much more realistic performance measure, since these curves plot precision against recall, directly displaying the number of false positives being done.\nUnfortunately, using the PR curve does not guarantee the utility or correct interpretability of results, particularly if using the associated AUC measure. The large imbalance found in LP for large graphs often results in small precision values, which only get worse as recall grows. As a result, a significant part of the AUPR measure may correspond to predictions found at the cost of an unassumable amount of mistakes, and thus poorly represent applicable performance. To tackle this problem, we define a constrained version of the AUPR measure, CAUPR, by setting a conservative threshold for what number of mistakes are assumable. This threshold is based on the graph size\n(i.e., we can accept as many false positives as edges in the graph), which provides several interesting properties. For example, the CAUPR may be equal to the AUPR, if performance is good enough, but it can also be zero if performance is very poor. Also, the CAUPR adapts to graph size and density, being more flexible when the domain allows. Nevertheless, the use of the CAUPR measure requires of the acceptance of Hypothesis 1, which should be considered on a case by case basis.\nOur empirical comparison between the AUPR and the CAUPR measures shows significant variances between both performance metrics, which tend to increase with graph size. On the evaluation of three LP algorithms, AUPR and CAUPR differ on which is the best one when applied to the largest graph computed (DBpedia, 17 million vertices), showcasing the relevance of the AUPR performance metric for LP evaluation on large and highly imbalanced graphs."}, {"heading": "Acknowledgements", "text": "This work is partially supported by the Joint Study Agreement no. W156463 under the IBM/BSC Deep Learning Center agreement, by the Spanish Government through Programa Severo Ochoa (SEV2015-0493), by the Spanish Ministry of Science and Technology through TIN2015-65316-P project and by the Generalitat de Catalunya (contracts 2014-SGR-1051)."}], "references": [{"title": "Friends and neighbors on the web", "author": ["Lada A Adamic", "Eytan Adar"], "venue": "Social networks", "citeRegEx": "1", "shortCiteRegEx": "1", "year": 2003}, {"title": "A framework for dynamic link prediction in heterogeneous networks", "author": ["Charu C. Aggarwal", "Yan Xie", "Philip S. Yu"], "venue": "Statistical Analysis and Data Mining", "citeRegEx": "2", "shortCiteRegEx": "2", "year": 2013}, {"title": "Mixed membership stochastic block models for relational data with application to protein-protein interactions", "author": ["Edoardo M Airoldi"], "venue": "Proceedings of the international biometrics society annual meeting", "citeRegEx": "3", "shortCiteRegEx": "3", "year": 2006}, {"title": "Link prediction using supervised learning", "author": ["Mohammad Al Hasan"], "venue": "Workshop on Link Analysis, Counter-terrorism and Security", "citeRegEx": "4", "shortCiteRegEx": "4", "year": 2006}, {"title": "Internet: Diameter of the worldwide web", "author": ["R\u00e9ka Albert", "Hawoong Jeong", "Albert-L\u00e1szl\u00f3 Barab\u00e1si"], "venue": "Nature", "citeRegEx": "5", "shortCiteRegEx": "5", "year": 1999}, {"title": "Hybrid recommender systems: Survey and experiments", "author": ["Robin Burke"], "venue": null, "citeRegEx": "6", "shortCiteRegEx": "6", "year": 2002}, {"title": "SMOTE: Synthetic Minority Over-sampling Technique", "author": ["Nitesh V Chawla"], "venue": "Journal of Artificial Intelligence Research", "citeRegEx": "7", "shortCiteRegEx": "7", "year": 2002}, {"title": "Hierarchical structure and the prediction of missing links in networks", "author": ["Aaron Clauset", "Cristopher Moore", "Mark EJ Newman"], "venue": "Nature", "citeRegEx": "8", "shortCiteRegEx": "8", "year": 2008}, {"title": "Structural mining of molecular biology data", "author": ["Diane J Cook"], "venue": "Engineering in Medicine and Biology Magazine, IEEE", "citeRegEx": "9", "shortCiteRegEx": "9", "year": 2001}, {"title": "The relationship between Precision-Recall and ROC curves", "author": ["Jesse Davis", "Mark Goadrich"], "venue": "Proceedings of the 23rd international conference on Machine learning", "citeRegEx": "10", "shortCiteRegEx": "10", "year": 2006}, {"title": "ROC graphs: Notes and practical considerations for researchers", "author": ["Tom Fawcett"], "venue": null, "citeRegEx": "11", "shortCiteRegEx": "11", "year": 2004}, {"title": "Link prediction in social networks using computationally efficient topological features", "author": ["Michael Fire"], "venue": "IEEE 3rd international conference on social computing", "citeRegEx": "12", "shortCiteRegEx": "12", "year": 2011}, {"title": "Link Prediction in Large Directed Graphs", "author": ["D Garcia-Gasulla"], "venue": "PhD thesis. Universitat Politcnica de Catalunya - Barcelona TECH,", "citeRegEx": "13", "shortCiteRegEx": "13", "year": 2015}, {"title": "Link Prediction in Very Large Directed Graphs: Exploiting Hierarchical Properties in Parallel", "author": ["D. Garcia-Gasulla", "U. Cort\u00e9s"], "venue": "Workshop on Knowledge Discovery and Data Mining Meets Linked Open Data - 11th Extended Semantic Web Conference", "citeRegEx": "14", "shortCiteRegEx": "14", "year": 2014}, {"title": "Evaluating Link Prediction on Large Graphs", "author": ["Dario Garcia-Gasulla"], "venue": "Proceedings of the 18th International Conference of the Catalan Association of Artificial Intelligence", "citeRegEx": "15", "shortCiteRegEx": "15", "year": 2015}, {"title": "Link mining: a survey", "author": ["Lise Getoor", "Christopher P Diehl"], "venue": "ACM SIGKDD Explorations Newsletter", "citeRegEx": "16", "shortCiteRegEx": "16", "year": 2005}, {"title": "Introduction to statistical relational learning", "author": ["Lise Getoor", "Ben Taskar"], "venue": "MIT press,", "citeRegEx": "17", "shortCiteRegEx": "17", "year": 2007}, {"title": "Functional cartography of complex metabolic networks", "author": ["Roger Guimera", "Luis A Nunes Amaral"], "venue": "Nature", "citeRegEx": "18", "shortCiteRegEx": "18", "year": 2005}, {"title": "Missing and spurious interactions and the reconstruction of complex networks", "author": ["Roger Guimer\u00e0", "Marta Sales-Pardo"], "venue": "Proceedings of the National Academy of Sciences", "citeRegEx": "19", "shortCiteRegEx": "19", "year": 2009}, {"title": "Learning from Imbalanced Data", "author": ["Haibo He", "E.A. Garcia"], "venue": "IEEE Transactions on 21.9", "citeRegEx": "20", "shortCiteRegEx": "20", "year": 2009}, {"title": "Graph-Based Data Mining.", "author": ["Lawrence B Holder", "Diane J Cook"], "venue": "Encyclopedia of data warehousing and mining", "citeRegEx": "21", "shortCiteRegEx": "21", "year": 2009}, {"title": "Link prediction approach to collaborative filtering", "author": ["Zan Huang", "Xin Li", "Hsinchun Chen"], "venue": "Proceedings of the 5th ACM/IEEE-CS joint conference on Digital libraries. ACM", "citeRegEx": "22", "shortCiteRegEx": "22", "year": 2005}, {"title": "An apriori-based algorithm for mining frequent substructures from graph data", "author": ["Akihiro Inokuchi", "Takashi Washio", "Hiroshi Motoda"], "venue": "Principles of Data Mining and Knowledge Discovery. Springer,", "citeRegEx": "23", "shortCiteRegEx": "23", "year": 2000}, {"title": "The class imbalance problem: A systematic study", "author": ["Nathalie Japkowicz", "Shaju Stephen"], "venue": null, "citeRegEx": "24", "shortCiteRegEx": "24", "year": 2002}, {"title": "Stochastic blockmodels and community structure in networks", "author": ["Brian Karrer", "Mark EJ Newman"], "venue": "Physical Review E", "citeRegEx": "25", "shortCiteRegEx": "25", "year": 2011}, {"title": "Experiments with PageRank computation", "author": ["Ashraf Khalil", "Yong Liu"], "venue": "Indiana University, Department Computer Science. URL: http://www. cs. indiana. edu/ akhalil/Papers/pageRank", "citeRegEx": "26", "shortCiteRegEx": "26", "year": 2004}, {"title": "Authoritative sources in a hyperlinked environment", "author": ["Jon Kleinberg"], "venue": "Journal of the ACM (JACM)", "citeRegEx": "27", "shortCiteRegEx": "27", "year": 1999}, {"title": "Mapping networks of terrorist cells", "author": ["Valdis E Krebs"], "venue": "In: Connections", "citeRegEx": "28", "shortCiteRegEx": "28", "year": 2002}, {"title": "KONECT: the Koblenz network collection", "author": ["J\u00e9r\u00f4me Kunegis"], "venue": "Proceedings of the 22nd international conference on World Wide Web companion. International World Wide Web Conferences Steering Committee", "citeRegEx": "29", "shortCiteRegEx": "29", "year": 2013}, {"title": "DBpedia - A Large-scale, Multilingual Knowledge Base Extracted from Wikipedia", "author": ["Jens Lehmann"], "venue": "Semantic Web Journal", "citeRegEx": "30", "shortCiteRegEx": "30", "year": 2014}, {"title": "CYC: A Large-Scale Investment in Knowledge Infrastructure", "author": ["Douglas B Lenat"], "venue": "Communications of the ACM", "citeRegEx": "31", "shortCiteRegEx": "31", "year": 1995}, {"title": "New perspectives and methods in link prediction", "author": ["Ryan N Lichtenwalter", "Jake T Lussier", "Nitesh V Chawla"], "venue": "Proceedings of the 16th ACM SIGKDD international conference on Knowledge discovery and data mining", "citeRegEx": "32", "shortCiteRegEx": "32", "year": 2010}, {"title": "Exploratory undersampling for class-imbalance learning", "author": ["Xu-Ying Liu", "Jianxin Wu", "Zhi-Hua Zhou"], "venue": "In: Systems, Man, and Cybernetics, Part B: Cybernetics, IEEE Transactions on 39.2", "citeRegEx": "33", "shortCiteRegEx": "33", "year": 2009}, {"title": "Similarity index based on local paths for link prediction of complex networks", "author": ["Linyuan L\u00fc", "Ci-Hang Jin", "Tao Zhou"], "venue": "Physical Review E", "citeRegEx": "34", "shortCiteRegEx": "34", "year": 2009}, {"title": "Link prediction in complex networks: A survey", "author": ["Linyuan L\u00fc", "Tao Zhou"], "venue": "Physica A: Statistical Mechanics and its Applications", "citeRegEx": "35", "shortCiteRegEx": "35", "year": 2011}, {"title": "On use of partial area under the ROC curve for evaluation of diagnostic performance\u201d. In: Statistics in medicine", "author": ["Hua Ma"], "venue": null, "citeRegEx": "36", "shortCiteRegEx": "36", "year": 2013}, {"title": "Pregel: a system for large-scale graph processing", "author": ["Grzegorz Malewicz"], "venue": "Proceedings of the 2010 ACM SIGMOD International Conference on Management of data", "citeRegEx": "37", "shortCiteRegEx": "37", "year": 2010}, {"title": "The sum-over-paths covariance kernel: A novel covariance measure between nodes of a directed graph", "author": ["Amin Mantrach"], "venue": "Pattern Analysis and Machine Intelligence, IEEE Transactions on 32.6", "citeRegEx": "38", "shortCiteRegEx": "38", "year": 2010}, {"title": "Link prediction based on structural properties of online social networks", "author": ["Tsuyoshi Murata", "Sakiko Moriyasu"], "venue": "New Generation Computing", "citeRegEx": "39", "shortCiteRegEx": "39", "year": 2008}, {"title": "Clustering and preferential attachment in growing networks", "author": ["Mark EJ Newman"], "venue": "Physical Review E", "citeRegEx": "40", "shortCiteRegEx": "40", "year": 2001}, {"title": "A three-way model for collective learning on multi-relational data", "author": ["Maximilian Nickel", "Volker Tresp", "Hans-Peter Kriegel"], "venue": "Proceedings of the 28th international conference on machine learning (ICML-11)", "citeRegEx": "41", "shortCiteRegEx": "41", "year": 2011}, {"title": "The PageRank citation ranking: bringing order to the web.", "author": ["Lawrence Page"], "venue": null, "citeRegEx": "42", "shortCiteRegEx": "42", "year": 1999}, {"title": "Towards time-aware link prediction in evolving social networks", "author": ["Tomasz Tylenda", "Ralitsa Angelova", "Srikanta Bedathur"], "venue": "Proceedings of the 3rd Workshop on Social Network Mining and Analysis. ACM", "citeRegEx": "43", "shortCiteRegEx": "43", "year": 2009}, {"title": "Highly scalable graph search for the graph500 benchmark", "author": ["Koji Ueno", "Toyotaro Suzumura"], "venue": "Proceedings of the 21st international symposium on High-Performance Parallel and Distributed Computing", "citeRegEx": "44", "shortCiteRegEx": "44", "year": 2012}, {"title": "Comparative assessment of large-scale data sets of protein\u2013protein interactions", "author": ["Christian Von-Mering"], "venue": "Nature", "citeRegEx": "45", "shortCiteRegEx": "45", "year": 2002}, {"title": "State of the art of graph-based data mining", "author": ["Takashi Washio", "Hiroshi Motoda"], "venue": "ACM SIGKDD Explorations Newsletter", "citeRegEx": "46", "shortCiteRegEx": "46", "year": 2003}, {"title": "Combating the small sample class imbalance problem using feature selection", "author": ["Mike Wasikowski", "Xue Wen Chen"], "venue": "Knowledge and Data Engineering, IEEE Transactions on 22.10", "citeRegEx": "47", "shortCiteRegEx": "47", "year": 2010}, {"title": "How social network is evolving? A preliminary study on billion-scale twitter network", "author": ["Masaru Watanabe", "Toyotaro Suzumura"], "venue": "Proceedings of the 22nd international conference on World Wide Web companion. International World Wide Web Conferences Steering Committee", "citeRegEx": "48", "shortCiteRegEx": "48", "year": 2013}, {"title": "Mining with rarity: a unifying framework", "author": ["Gary M Weiss"], "venue": "ACM SIGKDD Explorations Newsletter", "citeRegEx": "49", "shortCiteRegEx": "49", "year": 2004}, {"title": "Evaluating link prediction methods", "author": ["Yang Yang", "Ryan N Lichtenwalter", "Nitesh V Chawla"], "venue": "Knowledge and Information Systems", "citeRegEx": "50", "shortCiteRegEx": "50", "year": 2014}, {"title": "Predicting missing links via local information", "author": ["Tao Zhou", "Linyuan L\u00fc", "Yi-Cheng Zhang"], "venue": "The European Physical Journal B", "citeRegEx": "51", "shortCiteRegEx": "51", "year": 2009}, {"title": "Statistical methods in diagnostic medicine", "author": ["Xiao-Hua Zhou", "Donna K McClish", "Nancy A Obuchowski"], "venue": null, "citeRegEx": "52", "shortCiteRegEx": "52", "year": 2009}], "referenceMentions": [{"referenceID": 20, "context": "\u2022 Graph-based data mining ([21, 46])", "startOffset": 27, "endOffset": 35}, {"referenceID": 45, "context": "\u2022 Graph-based data mining ([21, 46])", "startOffset": 27, "endOffset": 35}, {"referenceID": 16, "context": "\u2022 Statistical Relational Learning ([17, 41])", "startOffset": 35, "endOffset": 43}, {"referenceID": 40, "context": "\u2022 Statistical Relational Learning ([17, 41])", "startOffset": 35, "endOffset": 43}, {"referenceID": 15, "context": "\u2022 Link Mining ([16, 35])", "startOffset": 15, "endOffset": 23}, {"referenceID": 34, "context": "\u2022 Link Mining ([16, 35])", "startOffset": 15, "endOffset": 23}, {"referenceID": 18, "context": "\u2022 Network or Link Analysis ([19, 38])", "startOffset": 28, "endOffset": 36}, {"referenceID": 37, "context": "\u2022 Network or Link Analysis ([19, 38])", "startOffset": 28, "endOffset": 36}, {"referenceID": 31, "context": "\u2022 Network Science ([32])", "startOffset": 19, "endOffset": 23}, {"referenceID": 8, "context": "\u2022 Structural Mining ([9])", "startOffset": 21, "endOffset": 24}, {"referenceID": 41, "context": ", PageRank ([42]) and HITS ([27])", "startOffset": 12, "endOffset": 16}, {"referenceID": 26, "context": ", PageRank ([42]) and HITS ([27])", "startOffset": 28, "endOffset": 32}, {"referenceID": 24, "context": ", stochastic blockmodeling ([25])", "startOffset": 28, "endOffset": 32}, {"referenceID": 22, "context": ", Apriori based algorithms ([23])", "startOffset": 28, "endOffset": 32}, {"referenceID": 2, "context": "These graph mining tasks, which have relations among entities as the cornerstone of their design, are applicable to domains such as life sciences ([3, 18, 45]), sociology and social networks ([1, 39, 48]), collaboration analysis ([2, 35, 43]), business and product recommendation ([6, 22]), and even law enforcement and anti-terrorism ([4, 8, 28]).", "startOffset": 147, "endOffset": 158}, {"referenceID": 17, "context": "These graph mining tasks, which have relations among entities as the cornerstone of their design, are applicable to domains such as life sciences ([3, 18, 45]), sociology and social networks ([1, 39, 48]), collaboration analysis ([2, 35, 43]), business and product recommendation ([6, 22]), and even law enforcement and anti-terrorism ([4, 8, 28]).", "startOffset": 147, "endOffset": 158}, {"referenceID": 44, "context": "These graph mining tasks, which have relations among entities as the cornerstone of their design, are applicable to domains such as life sciences ([3, 18, 45]), sociology and social networks ([1, 39, 48]), collaboration analysis ([2, 35, 43]), business and product recommendation ([6, 22]), and even law enforcement and anti-terrorism ([4, 8, 28]).", "startOffset": 147, "endOffset": 158}, {"referenceID": 0, "context": "These graph mining tasks, which have relations among entities as the cornerstone of their design, are applicable to domains such as life sciences ([3, 18, 45]), sociology and social networks ([1, 39, 48]), collaboration analysis ([2, 35, 43]), business and product recommendation ([6, 22]), and even law enforcement and anti-terrorism ([4, 8, 28]).", "startOffset": 192, "endOffset": 203}, {"referenceID": 38, "context": "These graph mining tasks, which have relations among entities as the cornerstone of their design, are applicable to domains such as life sciences ([3, 18, 45]), sociology and social networks ([1, 39, 48]), collaboration analysis ([2, 35, 43]), business and product recommendation ([6, 22]), and even law enforcement and anti-terrorism ([4, 8, 28]).", "startOffset": 192, "endOffset": 203}, {"referenceID": 47, "context": "These graph mining tasks, which have relations among entities as the cornerstone of their design, are applicable to domains such as life sciences ([3, 18, 45]), sociology and social networks ([1, 39, 48]), collaboration analysis ([2, 35, 43]), business and product recommendation ([6, 22]), and even law enforcement and anti-terrorism ([4, 8, 28]).", "startOffset": 192, "endOffset": 203}, {"referenceID": 1, "context": "These graph mining tasks, which have relations among entities as the cornerstone of their design, are applicable to domains such as life sciences ([3, 18, 45]), sociology and social networks ([1, 39, 48]), collaboration analysis ([2, 35, 43]), business and product recommendation ([6, 22]), and even law enforcement and anti-terrorism ([4, 8, 28]).", "startOffset": 230, "endOffset": 241}, {"referenceID": 34, "context": "These graph mining tasks, which have relations among entities as the cornerstone of their design, are applicable to domains such as life sciences ([3, 18, 45]), sociology and social networks ([1, 39, 48]), collaboration analysis ([2, 35, 43]), business and product recommendation ([6, 22]), and even law enforcement and anti-terrorism ([4, 8, 28]).", "startOffset": 230, "endOffset": 241}, {"referenceID": 42, "context": "These graph mining tasks, which have relations among entities as the cornerstone of their design, are applicable to domains such as life sciences ([3, 18, 45]), sociology and social networks ([1, 39, 48]), collaboration analysis ([2, 35, 43]), business and product recommendation ([6, 22]), and even law enforcement and anti-terrorism ([4, 8, 28]).", "startOffset": 230, "endOffset": 241}, {"referenceID": 5, "context": "These graph mining tasks, which have relations among entities as the cornerstone of their design, are applicable to domains such as life sciences ([3, 18, 45]), sociology and social networks ([1, 39, 48]), collaboration analysis ([2, 35, 43]), business and product recommendation ([6, 22]), and even law enforcement and anti-terrorism ([4, 8, 28]).", "startOffset": 281, "endOffset": 288}, {"referenceID": 21, "context": "These graph mining tasks, which have relations among entities as the cornerstone of their design, are applicable to domains such as life sciences ([3, 18, 45]), sociology and social networks ([1, 39, 48]), collaboration analysis ([2, 35, 43]), business and product recommendation ([6, 22]), and even law enforcement and anti-terrorism ([4, 8, 28]).", "startOffset": 281, "endOffset": 288}, {"referenceID": 3, "context": "These graph mining tasks, which have relations among entities as the cornerstone of their design, are applicable to domains such as life sciences ([3, 18, 45]), sociology and social networks ([1, 39, 48]), collaboration analysis ([2, 35, 43]), business and product recommendation ([6, 22]), and even law enforcement and anti-terrorism ([4, 8, 28]).", "startOffset": 336, "endOffset": 346}, {"referenceID": 7, "context": "These graph mining tasks, which have relations among entities as the cornerstone of their design, are applicable to domains such as life sciences ([3, 18, 45]), sociology and social networks ([1, 39, 48]), collaboration analysis ([2, 35, 43]), business and product recommendation ([6, 22]), and even law enforcement and anti-terrorism ([4, 8, 28]).", "startOffset": 336, "endOffset": 346}, {"referenceID": 27, "context": "These graph mining tasks, which have relations among entities as the cornerstone of their design, are applicable to domains such as life sciences ([3, 18, 45]), sociology and social networks ([1, 39, 48]), collaboration analysis ([2, 35, 43]), business and product recommendation ([6, 22]), and even law enforcement and anti-terrorism ([4, 8, 28]).", "startOffset": 336, "endOffset": 346}, {"referenceID": 14, "context": "This paper is an extended version of [15], improving the definition of the proposed evaluation methodology, analysing its properties in more depth, and adding an empirical comparison between the proposed methodology and current solutions (\u00a74).", "startOffset": 37, "endOffset": 41}, {"referenceID": 12, "context": "For example, for a graph composed from Wikipedia articles and the hyperlinks among them from 2012, we can obtain a natural test set by considering the links added to Wikipedia after 2012 ([13]).", "startOffset": 188, "endOffset": 192}, {"referenceID": 49, "context": "Within the LP problem, splitting data to build a test set will be often necessary ([50]).", "startOffset": 83, "endOffset": 87}, {"referenceID": 1, "context": "It is indeed hard to find real world networks where the average vertex degree is over fifty ([2, 32, 34]), a feature consistent even as graphs grow to billions of vertices ([44]).", "startOffset": 93, "endOffset": 104}, {"referenceID": 31, "context": "It is indeed hard to find real world networks where the average vertex degree is over fifty ([2, 32, 34]), a feature consistent even as graphs grow to billions of vertices ([44]).", "startOffset": 93, "endOffset": 104}, {"referenceID": 33, "context": "It is indeed hard to find real world networks where the average vertex degree is over fifty ([2, 32, 34]), a feature consistent even as graphs grow to billions of vertices ([44]).", "startOffset": 93, "endOffset": 104}, {"referenceID": 43, "context": "It is indeed hard to find real world networks where the average vertex degree is over fifty ([2, 32, 34]), a feature consistent even as graphs grow to billions of vertices ([44]).", "startOffset": 173, "endOffset": 177}, {"referenceID": 6, "context": "As is well known, class imbalance can be a severely complicating factor in classification problems ([7, 33, 47, 49]).", "startOffset": 100, "endOffset": 115}, {"referenceID": 32, "context": "As is well known, class imbalance can be a severely complicating factor in classification problems ([7, 33, 47, 49]).", "startOffset": 100, "endOffset": 115}, {"referenceID": 46, "context": "As is well known, class imbalance can be a severely complicating factor in classification problems ([7, 33, 47, 49]).", "startOffset": 100, "endOffset": 115}, {"referenceID": 48, "context": "As is well known, class imbalance can be a severely complicating factor in classification problems ([7, 33, 47, 49]).", "startOffset": 100, "endOffset": 115}, {"referenceID": 13, "context": "To illustrate on the type of class imbalance medium and large graphs may have, Table 1 shows the topological properties of some real world graphs obtained from WordNet ([14]), the Cyc project ([31]), the movierelated IMDb knowledge base ([13]), and several web graphs from the Notre-Dame University ([5]), Stanford/Berkley universities ([26]), a Google challenge ([13]), and the Hudong, Baidu ([29]) and Wikipedia encyclopedias ([30]).", "startOffset": 169, "endOffset": 173}, {"referenceID": 30, "context": "To illustrate on the type of class imbalance medium and large graphs may have, Table 1 shows the topological properties of some real world graphs obtained from WordNet ([14]), the Cyc project ([31]), the movierelated IMDb knowledge base ([13]), and several web graphs from the Notre-Dame University ([5]), Stanford/Berkley universities ([26]), a Google challenge ([13]), and the Hudong, Baidu ([29]) and Wikipedia encyclopedias ([30]).", "startOffset": 193, "endOffset": 197}, {"referenceID": 12, "context": "To illustrate on the type of class imbalance medium and large graphs may have, Table 1 shows the topological properties of some real world graphs obtained from WordNet ([14]), the Cyc project ([31]), the movierelated IMDb knowledge base ([13]), and several web graphs from the Notre-Dame University ([5]), Stanford/Berkley universities ([26]), a Google challenge ([13]), and the Hudong, Baidu ([29]) and Wikipedia encyclopedias ([30]).", "startOffset": 238, "endOffset": 242}, {"referenceID": 4, "context": "To illustrate on the type of class imbalance medium and large graphs may have, Table 1 shows the topological properties of some real world graphs obtained from WordNet ([14]), the Cyc project ([31]), the movierelated IMDb knowledge base ([13]), and several web graphs from the Notre-Dame University ([5]), Stanford/Berkley universities ([26]), a Google challenge ([13]), and the Hudong, Baidu ([29]) and Wikipedia encyclopedias ([30]).", "startOffset": 300, "endOffset": 303}, {"referenceID": 25, "context": "To illustrate on the type of class imbalance medium and large graphs may have, Table 1 shows the topological properties of some real world graphs obtained from WordNet ([14]), the Cyc project ([31]), the movierelated IMDb knowledge base ([13]), and several web graphs from the Notre-Dame University ([5]), Stanford/Berkley universities ([26]), a Google challenge ([13]), and the Hudong, Baidu ([29]) and Wikipedia encyclopedias ([30]).", "startOffset": 337, "endOffset": 341}, {"referenceID": 12, "context": "To illustrate on the type of class imbalance medium and large graphs may have, Table 1 shows the topological properties of some real world graphs obtained from WordNet ([14]), the Cyc project ([31]), the movierelated IMDb knowledge base ([13]), and several web graphs from the Notre-Dame University ([5]), Stanford/Berkley universities ([26]), a Google challenge ([13]), and the Hudong, Baidu ([29]) and Wikipedia encyclopedias ([30]).", "startOffset": 364, "endOffset": 368}, {"referenceID": 28, "context": "To illustrate on the type of class imbalance medium and large graphs may have, Table 1 shows the topological properties of some real world graphs obtained from WordNet ([14]), the Cyc project ([31]), the movierelated IMDb knowledge base ([13]), and several web graphs from the Notre-Dame University ([5]), Stanford/Berkley universities ([26]), a Google challenge ([13]), and the Hudong, Baidu ([29]) and Wikipedia encyclopedias ([30]).", "startOffset": 394, "endOffset": 398}, {"referenceID": 29, "context": "To illustrate on the type of class imbalance medium and large graphs may have, Table 1 shows the topological properties of some real world graphs obtained from WordNet ([14]), the Cyc project ([31]), the movierelated IMDb knowledge base ([13]), and several web graphs from the Notre-Dame University ([5]), Stanford/Berkley universities ([26]), a Google challenge ([13]), and the Hudong, Baidu ([29]) and Wikipedia encyclopedias ([30]).", "startOffset": 429, "endOffset": 433}, {"referenceID": 23, "context": "The impact of class imbalance on classifiers was explored in [24], and authors concluded that this impact was largely reduced when all classes were of reasonable size.", "startOffset": 61, "endOffset": 65}, {"referenceID": 31, "context": "Unfortunately, this assumption does not apply to the LP problem ([32]), and the reason for this is twofold.", "startOffset": 65, "endOffset": 69}, {"referenceID": 23, "context": "On one hand the imbalance found in LP on large graphs is several orders of magnitude larger than any imbalance tested in [24].", "startOffset": 121, "endOffset": 125}, {"referenceID": 6, "context": "A frequent approach of supervised or semi-supervised learning methods to overcome class imbalance is to equilibrate the training set through over-sampling, under-sampling or feature selection ([7, 33, 47, 49]).", "startOffset": 193, "endOffset": 208}, {"referenceID": 32, "context": "A frequent approach of supervised or semi-supervised learning methods to overcome class imbalance is to equilibrate the training set through over-sampling, under-sampling or feature selection ([7, 33, 47, 49]).", "startOffset": 193, "endOffset": 208}, {"referenceID": 46, "context": "A frequent approach of supervised or semi-supervised learning methods to overcome class imbalance is to equilibrate the training set through over-sampling, under-sampling or feature selection ([7, 33, 47, 49]).", "startOffset": 193, "endOffset": 208}, {"referenceID": 48, "context": "A frequent approach of supervised or semi-supervised learning methods to overcome class imbalance is to equilibrate the training set through over-sampling, under-sampling or feature selection ([7, 33, 47, 49]).", "startOffset": 193, "endOffset": 208}, {"referenceID": 6, "context": "However, these methods are biased towards the classification of instances within the large class, making them inappropriate for imbalanced data sets ([7, 20, 33, 47]).", "startOffset": 150, "endOffset": 165}, {"referenceID": 19, "context": "However, these methods are biased towards the classification of instances within the large class, making them inappropriate for imbalanced data sets ([7, 20, 33, 47]).", "startOffset": 150, "endOffset": 165}, {"referenceID": 32, "context": "However, these methods are biased towards the classification of instances within the large class, making them inappropriate for imbalanced data sets ([7, 20, 33, 47]).", "startOffset": 150, "endOffset": 165}, {"referenceID": 46, "context": "However, these methods are biased towards the classification of instances within the large class, making them inappropriate for imbalanced data sets ([7, 20, 33, 47]).", "startOffset": 150, "endOffset": 165}, {"referenceID": 10, "context": "For data sets with large class imbalance, the most frequently used methodology is the Receiver Operating Characteristic (ROC) curve and the derived Area Under the Curve (AUC) measure ([11]).", "startOffset": 184, "endOffset": 188}, {"referenceID": 9, "context": "ROC curves are unbiased in imbalanced contexts, but their consideration of miss-classifications can result in mistakenly optimistic interpretations ([10, 50]).", "startOffset": 149, "endOffset": 157}, {"referenceID": 49, "context": "ROC curves are unbiased in imbalanced contexts, but their consideration of miss-classifications can result in mistakenly optimistic interpretations ([10, 50]).", "startOffset": 149, "endOffset": 157}, {"referenceID": 9, "context": "ROC and PR curves are related; a curve dominates another (it is above it) in the ROC space if and only if it also dominates it in PR space, but are not equivalent; a classifier that optimizes on ROC space will not necessarily also optimize on PR space ([10]).", "startOffset": 253, "endOffset": 257}, {"referenceID": 13, "context": "For example, a graph obtained from WordNet data (as shown in [14]) can be considered as almost perfect, since WordNet relations have been identified, discussed and implemented by linguists for decades.", "startOffset": 61, "endOffset": 65}, {"referenceID": 12, "context": "Algorithms used are RA (Resource Allocation), AA (Adamic-Adar), CN (Common Neighbours), INF, INF LOG, INF 2D and INF LOG 2D, all of which are described in [13].", "startOffset": 155, "endOffset": 159}, {"referenceID": 7, "context": "Most research on LP use ROC curves ([8, 12, 34, 35, 39]) or PR curves ([2, 41]) for evaluation, but for the reasons discussed in \u00a72.", "startOffset": 36, "endOffset": 55}, {"referenceID": 11, "context": "Most research on LP use ROC curves ([8, 12, 34, 35, 39]) or PR curves ([2, 41]) for evaluation, but for the reasons discussed in \u00a72.", "startOffset": 36, "endOffset": 55}, {"referenceID": 33, "context": "Most research on LP use ROC curves ([8, 12, 34, 35, 39]) or PR curves ([2, 41]) for evaluation, but for the reasons discussed in \u00a72.", "startOffset": 36, "endOffset": 55}, {"referenceID": 34, "context": "Most research on LP use ROC curves ([8, 12, 34, 35, 39]) or PR curves ([2, 41]) for evaluation, but for the reasons discussed in \u00a72.", "startOffset": 36, "endOffset": 55}, {"referenceID": 38, "context": "Most research on LP use ROC curves ([8, 12, 34, 35, 39]) or PR curves ([2, 41]) for evaluation, but for the reasons discussed in \u00a72.", "startOffset": 36, "endOffset": 55}, {"referenceID": 1, "context": "Most research on LP use ROC curves ([8, 12, 34, 35, 39]) or PR curves ([2, 41]) for evaluation, but for the reasons discussed in \u00a72.", "startOffset": 71, "endOffset": 78}, {"referenceID": 40, "context": "Most research on LP use ROC curves ([8, 12, 34, 35, 39]) or PR curves ([2, 41]) for evaluation, but for the reasons discussed in \u00a72.", "startOffset": 71, "endOffset": 78}, {"referenceID": 0, "context": "Significantly, x is in the interval [0, 1].", "startOffset": 36, "endOffset": 42}, {"referenceID": 39, "context": "To empirically evaluate the impact of the CAUPR measure we use three well known LP algorithms: Common Neighbours (CN, [40]), Adamic Adar (AA, [1]) and Resource Allocation (RA, [51]).", "startOffset": 118, "endOffset": 122}, {"referenceID": 0, "context": "To empirically evaluate the impact of the CAUPR measure we use three well known LP algorithms: Common Neighbours (CN, [40]), Adamic Adar (AA, [1]) and Resource Allocation (RA, [51]).", "startOffset": 142, "endOffset": 145}, {"referenceID": 50, "context": "To empirically evaluate the impact of the CAUPR measure we use three well known LP algorithms: Common Neighbours (CN, [40]), Adamic Adar (AA, [1]) and Resource Allocation (RA, [51]).", "startOffset": 176, "endOffset": 180}, {"referenceID": 35, "context": "Similar solutions to our own (that of using a sub-part of the PR curve) have been previously considered for ROC curves on other contexts, particularly in the domain of diagnostic medicine, where several authors have considered the possibility of using only a partial ROC curve [36, 52].", "startOffset": 277, "endOffset": 285}, {"referenceID": 51, "context": "Similar solutions to our own (that of using a sub-part of the PR curve) have been previously considered for ROC curves on other contexts, particularly in the domain of diagnostic medicine, where several authors have considered the possibility of using only a partial ROC curve [36, 52].", "startOffset": 277, "endOffset": 285}, {"referenceID": 36, "context": ", [37]).", "startOffset": 2, "endOffset": 6}], "year": 2016, "abstractText": "Link prediction, the problem of identifying missing links among a set of inter-related data entities, is a popular field of research due to its application to graph-like domains. Producing consistent evaluations of the performance of the many link prediction algorithms being proposed can be challenging due to variable graph properties, such as size and density. In this paper we first discuss traditional data mining solutions which are applicable to link prediction evaluation, arguing about their capacity for producing faithful and useful evaluations. We also introduce an innovative modification to a traditional evaluation methodology with the goal of adapting it to the problem of evaluating link prediction algorithms when applied to large graphs, by tackling the problem of class imbalance. We empirically evaluate the proposed methodology and, building on these findings, make a case for its importance on the evaluation of large-scale graph processing. Graph Mining Link Prediction Evaluation Methodology", "creator": "LaTeX with hyperref package"}}}