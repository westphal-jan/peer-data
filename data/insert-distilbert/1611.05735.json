{"id": "1611.05735", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "17-Nov-2016", "title": "Optimal Dynamic Coverage Infrastructure for Large-Scale Fleets of Reconnaissance UAVs", "abstract": "current current state of the art in the field of uav activation tasks relies solely largely on human operators for the design and adaptation of the drones'flying routes. furthermore, this is being done today on an individual level ( one vehicle per operators ), with some reasonable exceptions of a handful born of new systems, that are comprised efforts of a small number of self - directional organizing swarms, manually guided by a human operator.", "histories": [["v1", "Thu, 17 Nov 2016 15:28:14 GMT  (3842kb,D)", "http://arxiv.org/abs/1611.05735v1", "35 pages, 19 figures"]], "COMMENTS": "35 pages, 19 figures", "reviews": [], "SUBJECTS": "cs.AI", "authors": ["yaniv altshuler", "alex pentland", "shlomo bekhor", "yoram shiftan", "alfred bruckstein"], "accepted": false, "id": "1611.05735"}, "pdf": {"name": "1611.05735.pdf", "metadata": {"source": "META", "title": "Optimal Dynamic Coverage Infrastructure for Large-Scale Fleets of Reconnaissance UAVs", "authors": ["Yaniv Altshuler", "Alex (Sandy) Pentland", "Shlomo Bekhor", "Yoram Shiftan", "Alfred Bruckstein"], "emails": ["sbekhor@technion.ac.il", "shiftan@technion.ac.il", "freddy@cs.technion.ac.il"], "sections": [{"heading": null, "text": "ar X\niv :1\n61 1.\n05 73\n5v 1\n[ cs\n.A I]"}, {"heading": "1 Introduction", "text": "Last decade has seen a paradigmatic change in the operational processes of modern armies aerial forces, as designers and commanders have been gradually shifting their focus towards unmanned aerial vehicles (UAVs) [31, 31, 49]. Indeed, over 50% of the planes in the US today are unmanned, with this trend expected to further increase, and be adopted by additional western armies in the coming years [33,76]. Israel, as a leader of UAV technology and military adoption [35, 67], is currently relying heavily on the use of UAVs in its military force, with such vehicles becoming an increasingly dominant element of its intelligence platforms. This has been the case in visual intelligent (VISINT), and recently also in tactical signal intelligence (SIGINT), which is traditionally in charge of 80% of the information gathered by the intelligence corps [2, 22].\nTherefore, as the use of UAVs as an integral component on ongoing intelligence gathering in wartime, as well as during the \u201cbattle within the wars\u201d increases, so grows the importance of the need to base this use on an efficient infrastructure. In other words, an innovative small scale dedicated UAV squadron designed for special missions may function perfectly with high redundancy and inefficient use of its resources, but a regular large-scale information gathering that is based on unmanned vehicles operating in swarms, cannot. Furthermore, the lack of an efficient infrastructure that assumes control of the low-level resource utilization tasks means that these tasks must ultimately be taken care of by the human operators (as is being done today) dramatically reducing the number of tasks these can engage, increasing the time it takes them to do so, as well as the overall cost of this process, and ultimately significantly limiting the vehicles operational potential.\nAs the complexity of the problem increases, so does the impact of optimizing capabilities on the overall resources required in order to guarantee a pre-defined level of performance. In other words, a successful use of large scale swarms of UAVs as a combat and intelligence gathering tool necessitates the development of an efficient mechanism for optimization of their utilization, specifically in the design and maintenance of their patrolling routes.\nThis work proposes an efficient and robust analytic infrastructure for the deployment of collaborative drone swarms, focusing on its application for tactic intelligence gathering. Specifically, we present an analytic model for devising an optimal reconnaissance strategy for any given threat scenario, defined as : (a) The correlation function between the cost of a single drone and its detection performance; (b) The deployment method used (represented as a monotonically increasing function that models the coverage percentage as a function of the number of units); and (c) The estimated expected cost of an undetected threat.\nIn other words, for any deployment method of the drones swarm (three of which are discussed in this paper), and an answer to the question \u201chow much detection performance do I get by using a more expensive units\u201d the model generates an optimal strategy that is threat-specific, namely \u2014 economically optimizing the type and quantity of drones with respect to the cost of an undetected threat.\nThe proposed technique enables swarms of semi-autonomous vehicles to perform an efficient ongoing dynamic patrolling and scanning of the entire roads and transportation infrastructure in a pre-defined \u201csearch region\u201d, in a robust and near-optimal way,\nwhile guaranteeing detection of targets that are traveling in that region. We demonstrate the applicability of our model using a comprehensive roads network of the Israeli roads and highways system, containing over 15,000 directed links. The rest of the paper is organized as follows : related work is presented in Section 2. The problem and the proposed patrolling model is presented in Section 3. Analysis is presented in Sections 4 and 5, containing among others an analytic estimation of the required number of drones for a given threat scenario (Theorem 4.2), as well as an analytical estimation of the optimal types of drones to be used, if several drones of different costs and performances are available (Theorem 5.2). Section 6 presents a theoretical analysis of a case-study of the proposed monitoring method. Section 7 presents a second case study, using a real world transportation network dataset in order to discuss several deployment strategies for drones swarms to be used for different types of search regions. The data used for this analysis is presented and discussed in Section 8. Concluding remarks appear in Section 9. Readers interested in further expansion on the mathematical analysis of this problem and similar ones are invited to read [18] and [19], which also partially overlap with this work."}, {"heading": "2 Related Work", "text": "The need to efficiently monitor transportation networks has been the topic of many studies. For example, in [53], the optimal deployment of air quality monitoring units is discussed. An efficient placement of security monitors can be found in [65]. In land transportation, many works had focused on monitoring the transportation of hazardous materials. For example, infectious disease outbreaks pose a critical threat to public health and national security [26, 36]. Utilizing today\u2019s expanded trade and travel, infectious agents can be distributed easily within and across country borders as part of a biological terror attack, resulting in potentially significant loss of life, major economic crises, and political instability. Such threats stress even more the importance of a reliable and efficient transportation monitoring infrastructure. A survey of homeland security related threats and risks regarding transportation infrastructure can be found in [32]. In [61] the trade-off between accuracy and coverage, for given limited resources of sensor devices is discussed. Lam and Lo [59] proposed a heuristic approach to select locations for traffic volume count sensors in a roadway network. [91] proposed a sensor deployment framework to maximize such utilities. This framework has been extended to accommodate turning traffic information [27], existing installations and OD information content [39], screen line problem [90], time-varying network flows [43] and unobserved link flow estimation [52].\nIn its military aspects and its relevant scientific literature, it is interesting to mention the roots of this field, dating back to World War II [64, 83]. The first planar search problem considered is the patrol of a corridor between parallel borders separated by a constant width. This problem aimed for determining optimal patrol strategies for aircraft searching for ships in a channel [56], with a more generic theory of optimal scanning that was later proposed in [66].\nIn recent years this problem had gained popularity with the emphasis on large scale swarms of drones [10, 14\u201316, 24, 54, 57, 66, 78, 84, 85], using a variety of methods\nranging from the analysis of the geometrical properties of the search space [8, 9], the use of multi-agent robotics approaches [50, 79, 86] or [21, 48, 63] for biology inspired designs (behavior based control models, flocking and dispersing models and predatorprey approaches, respectively), economics inspired designs [46, 72, 82, 88] or physics inspired approaches [34, 55] (see [3] for a survey of search and evasion strategies).\nIn general, most of the techniques used for the task of a distributed monitoring use some sort of cellular decomposition. For example, in [74] the area to be monitored is divided between \u201cmonitoring agents\u201d based on their relative locations. In [30] a different decomposition method is being used, which is analytically shown to guarantee a complete coverage of the area. Another interesting work is presented in [1], discussing two methods for cooperative monitoring (one probabilistic and the other based on an exact cellular decomposition).\nWhile in most works the targets of the search mission were assumed to be idle, recent works considered dynamic targets, meaning \u2014 targets which after being detected by the searching robots, respond by performing various evasive maneuvers intended to prevent their interception. Some of these works can be seen in [6, 11, 13], whereas a variant that emphasizes the stochastic aspects of the problem can be found in [73]."}, {"heading": "3 Patrolling System Optimizing \u2014 Problem Definitions", "text": "This work analyzes the design of efficient monitoring systems through its economic perspective. Namely, when a multitude of threat scenarios are available, the main challenge is mitigating these scenarios in the cost-effective way. That is, resolving the real-time uncertainty regarding the exact kinds of threats through the optimization of its overall costs (both the direct costs of the system, as well as the indirect costs of undetected threats). It is therefore crucial to provide planners and operators with a monitoring system that can be reconfigured in real-time, having drones deployed / activated gradually as they are needed (due to new information regarding the unfolding situation, and taking into account other operational requirements or budget constraints).\nOur proposed model does not assume any constraint on the deployment scheme itself, as the latter can be highly influenced by a large variety of considerations. Rather, it enables planners to model any given deployment scheme they desire, providing the optimal number and types of drones for each one. Our proposed model also offers operators high flexibility regarding the types of drones to be used \u2014 modeled using a trade off between the number of monitoring drones and their detection quality with respect to the number of potential targets each drone can monitor simultaneously (to be denoted as the drones\u2019 \u201cSampling\u201d quality, a number ranging between 0 and 1). In this work we assume that a higher sampling quality implies a higher cost per drone. Therefore, the overall cost of the monitoring system can be modeled as :\nOveralll Cost = Cost per Unit\u00d7 Number of Units whereas the overall monitoring performance of the system can be modeled as :\nOveralll Performance = Monitoring Coverage Percentage\u00d7 Sampling\nWe note that the quality of monitoring units (i.e. their sampling rate) has in fact a non linear effect on the overall monitoring quality. For example, assuming the sampling rate of each monitor is 12 then will be able to detect slightly more than half of the vehicles traveling in the network, because some of them might pass by more than one monitor and thus have a chance of being detected by either one. Specifically, such vehicles will have probability of 1 \u2212 (0.5)2 = 0.75 to be detected. Since drones\u2019 deployments is likely be done is much smaller numbers compared to the overall possible locations, it is unlikely that many potential targets would pass by two drones during a single trip. We can therefore use a linear approximation.\nDefinition 3.1. Let CATTACK(\u03c7) denote the expected cost associated with the damage occurred by an attack \u03c7, used to model an undetected target.\nThe estimation of the damage costs are beyond the scope of this paper.\nDefinition 3.2. Let M(x) \u2208 [0, 1] be a monotonically increasing function denoting the percentage of potential targets moving on the roads network, that is detected and analyzed using x monitoring units, using some given monitoring deployment scheme.\nA monitoring system of n units would therefore be cost-effective as long as :\nCATTACK \u2265 n\nM(n) \u00b7 Cost per Unit (1)\nFor modeling the functionM(x) we propose to use the well-known Gompertz function [47], whose general form is :\ny(t) = aebe ct\nThe Gompertz function is widely used for modeling a great variety of processes, (due to the flexibly way it can be controlled using the parameters a, b and c), such as mobile phone uptake [75], population in a confined space [40], or growth of tumors [38] (see an illustration in Figure 1). Its ability to model the progress of optimization process as a function of the available resources can also be seen in [4, 5, 7, 17].\nThe function M(x) can be extrapolated using simulations, as demonstrated in Figure 13. Note thatM(x) is domain dependant and may significantly change for different networks.\nIn the next sections we show how this model can be used in order to calculate the optimal number and types of the monitoring drones."}, {"heading": "4 The Optimal Number of Monitoring Units", "text": "Definition 4.1. The Normalized Benefit of a monitoring system of n units is defined as the expected monetary saving from preventing attacks from which the fixed cost of the monitoring units is subtracted :\n\u03c9 , CATTACK \u00b7M(n)\u2212 n \u00b7 Cost per Unit\nNote that this function can refer also to non-monetary aspects of a successful attack. It also resembles the \u201cNet Present Value\u201d calculation, but without explicitly accounting for discount rates.\nTheorem 4.2. For any values of CATTACK , a, b, c and Cost per Unit, the optimal number of monitoring units that would maximize the Normalized Benefit of a monitoring system is :\nn1 = ln ( 1 a\u00b7b\u00b7c \u00b7 Cost per Unit CATTACK ) \u2212W ( 1 a\u00b7c \u00b7 Cost per Unit CATTACK )\nc\nn2 = ln ( 1 a\u00b7b\u00b7c \u00b7 Cost per Unit CATTACK ) \u2212W\u22121 ( 1 a\u00b7c \u00b7 Cost per Unit CATTACK )\nc\nwhere W (x) is the Lambert product log, that can be calculated using the series :\nW (x) = \u221e\u2211\nn=1\n(\u22121)n\u22121nn\u22122 (n\u2212 1)! x n\nProof. The optimal value of the Normalized Benefit is received for the number of monitoring units that nullifies the derivative \u2202\u03c9\u2202n :\n\u2202\u03c9 \u2202n = CATTACK \u00b7 \u2202M(n) \u2202n \u2212 Cost per Unit\nNamely :\n\u2202M(n)\n\u2202n = Cost per Unit CATTACK\n(2)\n(notice that we disregard interest rates, as both cost and damage can assumed to be subject to a similar change along time).\nIn that case, using Equation 2 we obtain :\na \u00b7 b \u00b7 c \u00b7 ecn \u00b7 ebecn = Cost per UnitCATTACK which in turn implies :\nbecn + cn\u2212 ln Cost per Unit a \u00b7 b \u00b7 c \u00b7 CATTACK = 0 (3)\nWe note that a > 0 whereas b, c < 0. Analyzing Equation 3 we can then see that in cases where :\nCost per Unit CATTACK \u2264 \u2212a \u00b7 c e\n(4)\nthe optimal value of n would equal :\nn1 = ln ( 1 a\u00b7b\u00b7c \u00b7 Cost per Unit CATTACK ) \u2212W ( 1 a\u00b7c \u00b7 Cost per Unit CATTACK )\nc (5)\nn2 = ln ( 1 a\u00b7b\u00b7c \u00b7 Cost per Unit CATTACK ) \u2212W\u22121 ( 1 a\u00b7c \u00b7 Cost per Unit CATTACK )\nc\nwhere W (x) is the Lambert product log, and where Wk(x) is its analytic continuation over the complex plane (the values of the functions W (x) and W\u22121(x) in the segment implied by the constraint of Equation 4 are illustrated in Figure 2).\nReturning to the Normalized Benefit of the system, we can now assign the values of the optimal number of monitoring units that appear in Equation 5 into the definition of \u03c9, as follows :\n\u03c91 = CATTACK \u00b7 aebe cn1 \u2212 n1 \u00b7 Cost per Unit\n\u03c92 = CATTACK \u00b7 aebe cn2 \u2212 n2 \u00b7 Cost per Unit\nand using the properties of the W function, simplify it into the following form :\n\u03c9max = max{\u03c91, \u03c92} where: (6)\n\u03c91 = a \u00b7 b \u00b7 CATTACK \u00b7 \u03b3 \u00b7 ( W (b \u00b7 \u03b3) + 1 W (b \u00b7 \u03b3) \u2212 ln (\u03b3) ) \u03c92 = a \u00b7 b \u00b7 CATTACK \u00b7 \u03b3 \u00b7 ( W\u22121 (b \u00b7 \u03b3) + 1\nW\u22121 (b \u00b7 \u03b3) \u2212 ln (\u03b3)\n)\nwhere the Monitoring Benefit Factor \u03b3 is defined as:\n\u03b3 = 1 a \u00b7 b \u00b7 c \u00b7 Cost per Unit CATTACK\nFrom Equation 6 we can see that the Normalized Benefit of a drones monitoring swarm is a function of the Monitoring Benefit Factor \u03b3, which takes into account both the parameters of the threat (through the overall potential damages and the costs of the monitoring units required to detect it) as well as the properties of the monitoring method (characterized by the values of a, b and c). Notice that the value of Cost per Unit does affect the values of a, b and c \u2014 as they are solely derived from the coverage efficiency of the network\u2019s traffic. However, we also note that the actual detection of the drones swarm is affected by their sampling quality, which in turn is monotonously affected by their cost."}, {"heading": "5 Which Drones to Use? Optimizing the Drones\u2019 Cost", "text": "In this section we address the issue of finding the optimal type of monitoring drones that should be deployed. This is done by optimizing Equation 6 with respect to the cost per single unit.\nDefinition 5.1. Let CostBase denote the cost of the \u201cmost expensive\u201d drone model. That is, the monitoring drone model with the highest level of detection available.\nThere is a wide range of monitoring drone models, where in most cases the cheapest ones are expected to have the poorest performance. We define the correlation between the sampling (or detection) quality and the cost of a single unit using a generic function, as follows :\nSampling = fS\n( Cost Per Unit\nCostBase\n) (7)\nTheorem 5.2. For any values of CATTACK , a, b, c, Cost per Unit, CostBase and for every function fS : [0, 1] \u2192 [0, 1], the optimal cost for a monitoring unit that would maximize the Normalized Benefit of a monitoring system is a value that satisfies at least one of the following expressions :\nW (b\u00b7\u03b3)\u2212ln(\u03b3)+ 1\u2212 Cost Per UnitCostBase \u00b7 \u2202fS \u2202Cost Per Unit\n[ Cost Per Unit\nCostBase\n] \u00b7 ( fS [ Cost Per Unit\nCostBase\n])\u22121\nW (b \u00b7 \u03b3) = 0\nW\u22121(b\u00b7\u03b3)\u2212ln(\u03b3)+ 1\u2212 Cost Per UnitCostBase \u00b7 \u2202fS \u2202Cost Per Unit\n[ Cost Per Unit\nCostBase\n] \u00b7 ( fS [ Cost Per Unit\nCostBase\n])\u22121\nW\u22121(b \u00b7 \u03b3) = 0\nwhere :\n\u03b3 = 1 a \u00b7 b \u00b7 c \u00b7 Cost per Unit CATTACK\n\u00b7 ( fS [ Cost Per Unit\nCostBase\n])\u22121\nProof. We first revise Equation 6 in order to take into account the different types of monitoring units. as follows :\n\u03c9max = max{\u03c91, \u03c92} (8)\nwhere \u03c91 and \u03c92 equal :\n\u03c91 = a \u00b7 b \u00b7 CATTACK \u00b7 Sampling \u00b7 \u03b3 \u00b7 ( W (b \u00b7 \u03b3) + 1 W (b \u00b7 \u03b3) \u2212 ln (\u03b3) ) \u03c92 = a \u00b7 b \u00b7 CATTACK \u00b7 Sampling \u00b7 \u03b3 \u00b7 ( W\u22121 (b \u00b7 \u03b3) + 1\nW\u22121 (b \u00b7 \u03b3) \u2212 ln (\u03b3)\n)\nand where:\n\u03b3 = 1 a \u00b7 b \u00b7 c \u00b7 Cost per Unit\nCATTACK \u00b7 Sampling We now proceed to the maximizing the financial merits of the monitoring system (namely, max{\u03c91, \u03c92}). For this, we shall calculate the partial derivatives \u2202\u03c91\u2202Cost Per Unit and \u2202\u03c92\u2202Cost Per Unit :\n\u2202\u03c91 \u2202Cost Per Unit = 1 c \u00b7 ( W (b \u00b7 \u03b3)\u2212 ln(\u03b3) + 1\u2212 \u2202fS\u2202Cost Per Unit \u00b7 Cost Per UnitCostBase\u00b7fS W (b \u00b7 \u03b3) ) (9)\n\u2202\u03c92 \u2202Cost Per Unit = 1 c \u00b7 ( W\u22121(b \u00b7 \u03b3)\u2212 ln(\u03b3) + 1\u2212 \u2202fS\u2202Cost Per Unit \u00b7 Cost Per UnitCostBase\u00b7fS W\u22121(b \u00b7 \u03b3) )\nand the rest is implied.\nTheorem 5.2 can now be used in order to calculate the optimal aspired cost of a single drone, for every correlation between its cost and its quality of detection, and for every deployment scheme and estimated threat\u2019s potential."}, {"heading": "6 Case Study I \u2013 Theoretical Analysis", "text": "In this section we demonstrate how the proposed model can be used in order to produce the optimal number and types of monitoring drones, for a given threat scenario and drones deployment scheme, selected by the system\u2019s operators.\nFor the sake of simplicity we assume in this analysis that both sampling rates and Cost Per Unit to be continuous. This simplifies cases where the sampling rate of the monitoring units can be tuned resulting in lower resource utilization for lower sampling rates (e.g. fS(Cost Per UnitCostBase ) = ( Cost Per Unit CostBase )2 ). In addition, we assume that the deployment scheme chosen can be modeled with a Gompertz function of a = 1, b = \u22120.2 and c = \u22120.05 (see an illustration of this function in Figure 3). In this case, nullifying the partial derivative of Equation 9 would produce :\n\u2202\u03c91 \u2202Cost Per Unit = 0 \u2212\u2192 W (\u22120.2 \u00b7 \u03b3) = ln (\u03b3) + 1 W (\u22120.2 \u00b7 \u03b3) (10)\n\u2202\u03c92 \u2202Cost Per Unit = 0 \u2212\u2192 W\u22121 (\u22120.2 \u00b7 \u03b3) = ln (\u03b3) + 1\nW\u22121(\u22120.2 \u00b7 \u03b3) subsequently implying :\n\u03b3opt \u2248 1.77356\n(in this example, the optimal value of \u03b3 for \u03c92 has a non-zero imaginary component). Using this optimal value of \u03b3 we would now get :\n\u03b3opt = 1 a \u00b7 b \u00b7 c \u00b7 Cost per Unit CATTACK \u00b7 Sampling = 100 \u00b7 Cost2Base CATTACK \u00b7 Cost per Unit = 1.77356\nand from this we receive :\nCost per Unitopt = 100 \u00b7 Cost2Base 1.77356 \u00b7 CATTACK \u2248 56.384 \u00b7 Cost 2 Base CATTACK (11)\nsee an illustration of Equation 11 in Figure 5. From Equation 11 we can obtain for each kind of threat the optimal type of units that should be used, in order to maximize the Normalized Benefit of the system. In this example we also see a linear connection between the optimal cost of the drones and the overall estimations of the damages from a threat.\nAssigning this back into Equation 5, we can get the optimal number of units, for each potential threat (see an illustration in Figure 5) :\nn1 = 20 \u00b7W ( \u22121127.68 \u00b7 Cost 2 Base\nC2ATTACK\n) \u2212 172.747\u2212 40 \u00b7 ln ( CostBase CATTACK )\nn1 = 20 \u00b7W ( \u22121,\u22121127.68 \u00b7 Cost 2 Base\nC2ATTACK\n) \u2212 172.747\u2212 40 \u00b7 ln ( CostBase CATTACK )\n(12)\nUsing Equations 11 and 12 we can now produce the optimal model of drones to be deployed, and in what numbers, for any given threat1: for example, if the best available drone model costs $5,000 per unit then for threats of potential damages that are estimated as $600,000 (which reflect a ratio of 1120 between the cost of best unit and the incident\u2019s damages) we should use approximately 25 units of the type that costs $1,100 each (and deploy them according to the selected deployment scheme described above). However, for threats estimated at $10,000,000 in total damages (i.e. a ratio of\n1 2000 ) an optimal monitoring system should be comprised of approximately 160 units, of the type that costs $200 each.\nNote that the previous example depends of course on the assumption of quadratic relation between cost and quality of the monitoring units, as well as on the assumption regarding the deployment scheme (i.e. the parameters of the Gompertz Model). For any change in any for these assumptions, new corresponding solutions to the optimal monitoring problem can be easily generated using the model.\n1Our model assumes continuous selection of drones\u2019 types. In reality of course there is a finite number of drones model. Therefore, after producing the optimal value for the cost of a single drone, we would select the two available models closest in cost to this optimal value (namely, the more expensive cheaper one, and the cheapest more expensive one), assign their cost in the model, and select the one for which the merit function is higher."}, {"heading": "7 Case Study II \u2013 Real World Transportation Network Monitoring", "text": "In the previous sections we have shown an analytic method for optimizing the number and types of monitoring units for any given deployment scheme (defined by the values of Gomperz function\u2019s parameters a, b and c that set the relation between the amount of monitoring resources and the increase in monitoring efficiency).\nIn this section we discuss several methods for deploying a given number of monitoring units. The goal in all three methods is the same \u2014 maximizing the probability that a target randomly moving in one of the network\u2019s edges, is detected.\nThe most trivial method for deploying n monitoring units is of course, the random deployment method. In other words, positioning the units in a randomly selected nodes in the network. As we will soon see, this method achieves surprisingly well performance in some cases. However, this method can be improved by taking into account certain features of the network, resulting in improved performance in many cases.\nIn the coming sections we will see several such improvements, all based on trafficoriented improvement of the standard Betweenness Centrality method.\nWe then show that all methods shown in this section can be efficiently approximated using the Gompertz function y = aebe ct\n. Hence, any of those method can be represented by a set of values of a, b and c, as required by our proposed model. In addition, note that the last deployment method we present here achieves remarkable results (in terms of prediction of the real traffic flow, by the analysis of the network\u2019s topology). Therefore, this method can be assumed as a standard deployment scheme\nfor transportation networks, even regardless of the scope of this work. The data used for the evaluation of this analysis was derived from a large number of location-reports, collected from cell phones in Israel, and is described and discussed in length in Section 8. Parts of the following analysis can also be found in [71] and [18]."}, {"heading": "7.1 Betweenness Centrality vs. Traffic Flow", "text": "Betweenness Centrality (BC) stands for the ability of an individual node to control the communication flow in the networks and is defined as the total fraction of shortest paths between each pair of vertices that pass through a given vertex [20, 44]. In recent years Betweenness was extensively applied for the analysis of various complex networks [23,81] including among others social networks [77,87], computer communication networks [42, 93], and protein interaction networks [28]. Holme [51] have shown that Betweenness is highly correlated with congestion in particle hopping systems. Extensions of the original definition of BC are applicable for directed and weighted networks [29, 89] as well as for multilayer networks where the underlying infrastructure and the origin-destination overlay are explicitly defined [70].\nLetG = (V,E) be a directed transportation network where V is the set of junctions and E is the set of directed links as described in Section 8. Let \u03c3s,t be the number of shortest paths between the origin vertex s \u2208 V and the destination vertex t \u2208 V (in some applications the shortest path constraint can be relieved to allow some deviations from the minimal distance between the two vertices). In the rest of this paper we will refer to the shortest or \u201calmost\u201d shortest paths between two vertices as routes. Let \u03c3s,t(v) be the number of routes from s to t that pass through the vertex v. The Betweenness Centrality can hence be expressed by the following equation:\nBC(v) = \u2211\ns,t\u2208V\n\u03c3s,t(v)\n\u03c3s,t . (13)\nNote that in this definition we include the end vertices (s and t) in the computation of Betweenness since we assume that vehicles can be inspected also at their origin and at the point of their destination.\nAfter computing the Betweenness Centrality for the given transportation network, we can easily see that the distribution of Betweenness Centrality follows a power law (Figure 6). Long tail distributions such as the power law suggest that there is a non negligible probability for existence of vertices with very high Betweenness Centrality. This is in contrast to the exponential flow distribution depicted in Figure 19. The different nature of these two distributions suggests that BC as defined above will overestimate the actual traffic flow through nodes especially for the most central vertices.\nNext we would like to check the correlation between BC and traffic flow. Although the correlation is significant the square error is very low (R2 = 0.2021) as shown in Figure 7 (a). Every point in this Figure represents a vertex with the x-axis corresponding to the measured traffic flow and y-axis corresponding to the computed BC.\nWe now discuss augmented variants of the Betweenness Centrality measure that significantly improve the correlation with the traffic flow.\n7.2 Origin-Destination based Betweenness Centrality\nBC definition according to Equation 13 BC assumes equal weights of routes between every pair of vertices in the network. In other words every vertex acts as an origin and as a destination of traffic. We would like to utilize the measured origin-destination (OD) flow matrix in order to prioritize network regions by their actual use. For this, we shall use the following altered definition for Betweenness, as suggested in [70]:\nBC(v) = \u2211\ns,t\u2208V\n\u03c3s,t(v)\n\u03c3s,t \u00b7 ODs,t (14)\nwhere OD is the actual measured origin-destination matrix. This method produces a better correlation (R2 = 0.4916) between the theoretic (BC) and the measured traffic flow (see Figure 7 (b))."}, {"heading": "7.3 Improving Betweenness Centrality using Travel Properties", "text": "Shortest Routes based on Time to Travel In order to further improve our ability to estimate the predicted network flow using the network\u2019s topology, we note that both BC calculation methods (Equations 13 and 14 above) assume that routes are chosen according to shortest path strategy based on hop counting. In this section, we retain the shortest path assumption but use weighted links for calculating the Betweenness score. One option is to use the length of the road segments as their weights for the shortest path calculations. Shortest path algorithms (such as Dijkstra\u2019s or Bellman-Ford\u2019s) are able to consider only one distance weight on links when computing the shortest path to a destination. We shall therefore assume that the primary heuristic guiding people when they chose a route is the time required to reach their destination, and recompute the BC on the directed transportation, weighting links by their free-flow travel time.\nLet BCft(v) denote the Betweenness of a node v computed w.r.t. the free-flow travel time. Figure 7 (c) shows significant improvements in the correlation between the measured traffic flow and the theoretical BCft values computed w.r.t the OD matrix and free-flow travel time link weights (R2 = 0.6123). We can see that there are few nodes whose flow was significantly underestimated by the BC measure. Notice that there are also several nodes whose flow was actually overestimated. This can be explained by the fact that people do not travel strictly via shortest paths, but may have various deviations. In particular the deviations form shortest paths are affected by the day time and the day of week.\nPeak-Hours Aware Betweenness Centrality It is a reasonable assumption that during peak hours travelers will choose to avoid the congested roads and choose their routes based on the congested travel time rather than on the free-flow travel times. Let BCct(v) denote the Betweenness of a node v computed w.r.t. the congested time. Computing Betweenness using only the congested travel time weights results in R2 = 0.7096. Although peak hours are relatively small fraction of the day, most vehicles travel at these hours. This is the reason for higher correlation of BCct with the measured traffic flow.\nWe shall now combine both the Betweenness Centrality computed w.r.t. the freeflow travel time and the congested time by taking a weighted average, namely :\nBC(v) = \u03b1 \u00b7BCft(v) + (1\u2212 \u03b1) \u00b7 BCct(v)\nwhere \u03b1 denotes the relative fraction of vehicles traveling during the free-flow periods. The resulting centrality index can achieve higher correlation with the measured average traffic flow. The maximal correlation of R2 = 0.7285 is obtained for \u03b1 = 0.25 as shown in the Figure 8.\nSeparating Stubs Nodes from Transit Nodes Nodes in the dataset were divided into two groups : stub nodes and transit nodes. A Stub node (i.e., centroid) is a node that is an origin or a destination of the traffic (as seen in the Origin-Destination matrix). These nodes account for approximately 10% of the network\u2019s nodes. All other nodes (namely, nodes that generate insignificant or no outgoing or incoming routes) are called Transit nodes, as they only forward traffic and do not generate or consume it.\nFigure 7 (d) presents the correlation that is received when the two groups of nodes are being processed separately. Specifically, the results show a R2 = 0.7068 for the Transit nodes and a R2 = 0.7429 for the Stub nodes.\nMobility Oriented Betweenness Centrality As each type of roads has a different functional class, we shall further improve our flow prediction by examining the Betweenness values achieved when calculating it for every group separately. The results\nof the correlation that is achieved using this method are presented in Figure 9. We can clearly see that for the more important roads (namely, those with lower type number, representing a more infrastructural role in the transportation network) this technique yields R2 values that are consistently above 0.74, reaching 0.83(!) for road of types 2 and 9 (note that roads of type 90 are fictive roads with infinite capacity that were artificially added in order to connect distinct regions in the network).\nIt should be noted that each node may have incoming roads of different types. Each plot corresponds to a set of nodes whose max incoming road type is as specified. In addition, the BC calculations were not made for each set of nodes separately \u2014 BC was computed for the complete network, while the correlations were computed separately for each type."}, {"heading": "7.4 Optimizing the Locations of Surveillance and Monitoring Stations", "text": "In this section we use the Group variant of shortest path Betweenness Centrality (GBC) [41] as an estimate for the utility of collaborative monitoring. In other words, we are interested in verifying that given some mobile agent that we are interested in intercepting, we position the monitoring stations in a way that maximize the chance the agent would be captured, given the traffic patterns of the transportation network. In this case, however, significant computational complexity issues arise, rendering the generation of\nan optimal solution impractical in real time by conventional tools that are based mostly on behavioral based modeling. Using Group Between Centrality we propose a way to generate efficient approximations of the optimal solution to this optimization problem.\nGBC of a given group (M \u2286 V ) of vertices accounts for all routes that pass through at least one member of the group. Let \u03c3s,t and \u03c3s,t(M) be the number of routes from s to t and the number of routes from s to t passing through at least one vertex in M respectively :\nGBC(M) = \u2211\ns,t\u2208V\n\u03c3s,t \u03c3s,t(M) \u00b7 ODs,t (15)\nGBC can be efficiently computed using the algorithm presented in [68]. Assuming the routes are weighted by the origin destination flow in transportation networks, GBC will account for the net number of vehicles that are expected to pass by the monitors during an hour. This net number is different from the total number of vehicle passing by the monitors since the same vehicle can pass by several monitors during a single trip. For example, searching for a suspected escaping terrorist car, one would like to avoid stopping the same vehicle twice and increase the number of distinct vehicles that were inspected. It is therefore important to maximize the GBC value of the set of inspection stations given the number of stations deployed.\nSeveral combinatorial optimization techniques can be used to find a group of nodes of given size that has the largest GBC. In the following discussion we refer to a greedy approximation algorithm for the monitors location optimization problem (Greedy) [37], a classical Depth First Branch and Bound (DFBnB) heuristic search algorithm [58], and recently proposed Potential Search [80].\nThe Greedy approximation algorithm chooses at every stage the node that has the maximal contribution to the GBC of the already chosen group. The approximation factor of the Greedy algorithm as reported in [37] is e\u2212 1e .\nBoth the heuristic search algorithms DFBnB and the Potential Search provably find the group having the maximal GBC. The Greedy algorithm and DFBnB were previously compared in [69] in the context of monitoring optimization in computer communication networks. Given the fact that finding a group of a given size having the maximal GBC is a hard problem, the greedy algorithm is good enough for any practical purpose (the hardness of the problem can be proven by a straightforward reduction from the Minimal Vertex Cover problem that the problem of maximizing GBC is NPComplete). Figure 10 presents the results of selecting one to 39 inspection locations using the greedy algorithm.\nIn certain cases (such as in various homeland security applications) deployment of monitoring systems are often done under tight timing conditions, as a result of new intelligence information. Therefore, any optimization method should provide closeto-real-time capabilities. In this context, it is interesting to note that both the DFBnB and the Potential algorithms are anytime search algorithms [94]. Their execution can be stopped at any point of time, yielding the best solution found so far. Therefore, in the following experiments we limit the search time to one hour, simulating a quasireal-time optimization constraint. Still, as can be seen in figure 11 the running time of then Greedy algorithm is by far lower than one hour, for the entire Israeli transportation system.\nWhen DFBnB and Potential Search algorithms cannot complete the search process within the given time bounds they produce a close to optimal solution and an estimate of its optimality (i.e. certificate). The certificate is computed by dividing the best solution found so far by the upper bound on the optimal solution. The upper bound is computed using admissible heuristic functions and is maintained by the search algorithms for efficient pruning the search space. Figure 12 shows that Potential Search produces higher certificates for its solutions within the one hour time bound for all sizes of the monitors deployment.\n7.5 Modeling Various Deployment Schemes as a Gompertz Function\nFigure 13 demonstrates the performance of our monitoring method, by showing the percentage of traffic monitored as a function of the number of monitors, for several deployment schemes: (a) Group Betweenness, (b) Betweenness, and (c) Random deployment. The benefits of the proposed method can clearly be seen from this chart.\nRemarkably, using GBC based deployment strategy it is possible to cover the vast majority of the traffic in the analyzed network (detecting any threat in probability of approximately 0.7) using only 70 monitors. This result is most probably due to the relatively small number of origins and destinations in the analyzed network. 680 origins/destinations account for a little bit more than 10% of the network nodes.\nBC based strategy produces relatively high quality deployments for small number of monitors (less than five). However, when 10 or more monitors need to be located random deployment is on average as effective as choosing the most central intersections.\nMoreover, for large numbers of monitors (more than 70-80) random deployment, although the simplest strategy, achieves coverage results that are very similar to choosing the most central intersections. This result may seem surprising but in fact it is absolutely reasonable. Central intersections tend to lay on the arterial roads and usually are quite close to each other. This results in reduced marginal utility of each additional junction joining the deployment.\nWe demonstrate Equation 3 using the results presented in Figure 13. For this, we need to calculate the regression of the simulated measurements presented in Figure 13 to the Gompertz function. This is presented in Figure 14. The regression yields the following results :\nRandom deployment : M(n) = 0.24e\u22122.73e \u22120.03n\n(16)\nBC deployment : M(n) = 0.51e\u22122.14e \u22120.02n\nGBC deployment : M(n) = 0.89e\u22122e \u22120.04n\nAt this point, we can assign the values of a,b and c in Equation 3 and get the optimal number of monitoring units, for any ratio between the cost of a single monitoring unit and the expected cost of a successful attack. This is presented in 15, where the benefit\nof the GBC deployment scheme can clearly be seen, as it enables the use of much more expensive monitoring units (which make little sense in using, when the cost of using them is greater than the potential damage of a missed detection \u2014 due to low monitoring efficiency)."}, {"heading": "8 Transportation Network Dataset", "text": "In this section we evaluate our proposed model using a real-world transportation dataset, containing data regarding the Israeli roads structure, as well as the traffic through them (simulating the potential targets that need to be detected or monitored). This section presents the dataset and its various aspects, and discusses in great length its network properties \u2013 from which the optimal deployment of the drones swarm can be derived.\nThe widespread use of cellular phones in Israel enables the collection of accurate transportation data. Given the small size of the country, all cellular companies provide national wide coverage. As shown in [25], the penetration of cellular phones to the Israeli market is very high, even to lower income households, and specially among individuals in the ages of 10 to 70 (the main focus of travel behavior studies). Such penetration enables a comprehensive study of travel behavior that is based on the mobility patterns of randomly selected mobile phones in the Israeli transportation system. This data was shown in [25] and [92] to provide a high quality coverage of the network, tracking 94% of the trips (defined as at least 2km in urban areas, and at least 10km in rural areas). The resulting data contained a wealth of traffic properties for a network of over 6,000 nodes, and 15,000 directed links. In addition, the network was accompanied with an Origin Destination (OD) matrix, specifying start and end points of trips.\nThe network was created for the National Israeli Transportation Planning Model. In urban areas the network contains arterial streets that connect the interurban roads. For each link of the network, there is information about the length (km), hierarchical type, free-flow travel time (min), capacity (vehicles per hour), toll (min), hourly flow (vehicles per hour), and congested travel time (min). The hourly flows and congested travel times were obtained from a traffic assignment model that loads the OD matrix on the network links."}, {"heading": "8.1 Network Structure", "text": "Based on the dataset described above we have created a network structure, assigning running indices from 1 to 6716 to the nodes (junctions). We have examined the directed variant of the network where each road segment between two junctions was represented as either one or two directed links between the respective nodes.\nIn order to get a basic understanding of the network we first extracted and studied several of its structural properties (see Table 1). We have partitioned the network into structural equivalence classes of the nodes and bi-connected components and computed the Betweenness Centrality indices of the nodes (Betweenness Centrality is an important network feature that measures the portion of shortests paths between all the pairs of nodes in the network, that pass through a particular node. See more details in [44, 60, 62]). Structurally equivalent vertices have exactly the same neighbors and the set of these vertices is called a structural equivalence class. As can be seen from Table 1 the number of structural equivalence classes is roughly the number of vertices in the network and the size of the largest class is three. This means that there are no \u201cstar-like\u201d structures in the network and alternative paths between any two vertices are either longer than two hops or have other links emanating from the intermediate vertices. On the other hand the number of biconnected components in the network is low compared to the number of nodes, meaning that there are significant regions of the network that can be cut out by merely disconnecting a single node."}, {"heading": "8.2 Congestions", "text": "In this paper we define the impact of congestion as the difference between the time to travel through a congested link and the free-flow time to travel. Congestion of a\njunction can be either inbound or outbound. Inbound congestion is the sum of all congestions on inbound links of some junction. Figure 17 presents the distribution of congestion on network nodes (junctions). Power law nature of this distribution means that vast majority of nodes are not congested but there are a few nodes whose congestion can be arbitrarily large. Based on the Wardrop\u2018s User Equilibrium [45] this also implies a low number of yet significant deviations between the routes chosen by travelers during free-flow and during congestions. In Section 7.3 we use this fact to merge between two routing strategies."}, {"heading": "8.3 Flow", "text": "The analyzed dataset contains traffic flow through links provided as the number of vehicles per hour. We compute the total inbound flow through a node by summing flows on all of its inbound links, where outbound flow is computed symmetrically.\nUnless a specific junction is a source or a destination of traffic we expect the inbound flow to be equal to the outbound flow. Figure 18 demonstrates the correlation between inbound and outbound flow. We see that vast majority of the nodes are located on the main diagonal, however, there are some deviations, caused by the fact that the data represents average measurements that were carried out along a substantial period of time.\nFigure 19 presents the distribution of inbound flow on network nodes. This distribution is exponential, meaning that a vast majority of nodes have little flow through them. However, in contrast to network congestion, there are no \u201cunbounded fluctuations\u201d, i.e. the flow through the most \u201cbusy\u201d junctions is not as high as can be expected from the power law distribution of betweenness and congestions (Figures 17 and 6). In fact, congestions significantly limit the flow through the busiest junctions, which subsequently is the reason we do not see the long tail in flow distribution."}, {"heading": "9 Conclusions", "text": "In this paper we have discussed the problem of optimizing the type, number and locations of surveillance drones trying to detect maneuvering targets that move on top of a pre-defined transportation network. We have presented a model for analytically generating an optimal monitoring strategy, flexible enough to support various models of drones (of different costs and performance specifications), as well as any deployment scheme used. For each threat, the model produces an optimal strategy, based on the estimation of the threat\u2019s overall potential damages.\nWe have validated our model using a variety of deployment schemes, among which\nwas an extremely efficient scheme we have developed, which is a transportation oriented variant of the Network Betweenness measure. We have then evaluated the model, as well as this deployment scheme, using a comprehensive dataset that covers the Israeli transportation network, and demonstrated how the optimal locations of any (reasonable) amount of drones can be approximated in high accuracy. The method proposed in this paper can now be used in order to generate highly efficient dynamic monitoring strategies, for a multitude of real-time threats, of different operational parameters.\nA more theoretical approach to this problem that studies the complexity of all possible strategies for a collaborative monitoring of a given area at which an unknown number of targets dynamically maneuver can be found in [16]. An additional similar variant to this problem is the search for pollutant emitting vehicles, where the merit function is derived from environments considerations [71]. It is interesting to mentioned that in those variants as well, the topological properties of the network along which the \u201ctargets\u201d can move significantly influence the ability of drones to track them, as was pointed out in [8, 9].\nIn future works we plan to conduct a thorough study of the way this method can be used for resource allocation scenarios involving several types threats, using heterogenous deployment strategies that would utilize drones of different characteristics simultaneously. In addition, we intend to conduct a further analysis of the resilience of the method, under uncertainty (regarding the topology, potential threats, and noises in the deployment scheme).\nFinally, it is interesting to note that the problem of finding optimal (and optionally dynamic) monitoring strategy is related to other kinds of monitoring problems, such as \u201creverse-monitoring\u201d \u2013 maximizing the exposure of a certain signal, or campaign to a population [19], or monitoring for evading land targets by a flock of Unmanned\nAir Vehicles (UAV). In this problem, however, the fact that the paths of the UAVs is unconstrained (as they are flying in the air) makes the calculation of a near-optimal monitoring strategy fairly easy [12, 13]."}], "references": [], "referenceMentions": [], "year": 2016, "abstractText": "<lb>Current state of the art in the field of UAV activation relies solely on human<lb>operators for the design and adaptation of the drones flying routes. Furthermore,<lb>this is being done today on an individual level (one vehicle per operators), with<lb>some exceptions of a handful of new systems, that are comprised of a small num-<lb>ber of self-organizing swarms, manually guided by a human operator. Drones-<lb>based monitoring is of great importance in variety of civilian domains, such as<lb>road safety, homeland security, and even environmental control. In its military as-<lb>pect, efficiently detecting evading targets by a fleet of unmanned drones has an ever<lb>increasing impact on the ability of modern armies to engage in warfare. The latter<lb>is true both traditional symmetric conflicts among armies as well as asymmetric<lb>ones. Be it a speeding driver, a polluting trailer or a covert convoy, the basic chal-<lb>lenge remains the same \u2014 how can its detection probability be maximized using<lb>as little number of drones as possible. In this work we propose a novel approach<lb>for the optimization of large scale swarms of reconnaissance drones \u2014 capable of<lb>producing on-demand optimal coverage strategies for any given search scenario.<lb>Given an estimation cost of the threat\u2019s potential damages, as well as types of mon-<lb>itoring drones available and their comparative performance, our proposed method<lb>generates an analytically provable strategy, stating the optimal number and types<lb>of drones to be deployed, in order to cost-efficiently monitor a pre-defined region<lb>for targets maneuvering using a given roads networks. We demonstrate our model<lb>using a unique dataset of the Israeli transportation network, on which different<lb>deployment schemes for drones deployment are evaluated. 1<lb>ar<lb>X<lb>iv<lb>:1<lb>61<lb>1.<lb>05<lb>73<lb>5v<lb>1<lb>[<lb>cs<lb>.A<lb>I]<lb>1<lb>7<lb>N<lb>ov<lb>2<lb>01<lb>6", "creator": "LaTeX with hyperref package"}}}