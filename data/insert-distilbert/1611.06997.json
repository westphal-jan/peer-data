{"id": "1611.06997", "review": {"conference": "AAAI", "VERSION": "v1", "DATE_OF_SUBMISSION": "21-Nov-2016", "title": "Coherent Dialogue with Attention-Based Language Models", "abstract": "critically we constantly model coherent conversation gap continuation via rnn - based dialogue acquisition models equipped with a dynamic attention mechanism. identifying our attention - rnn language model dynamically increases the scope of attention on the history as the conversation continues, as which opposed to standard attention ( or syllable alignment ) models with a potentially fixed input scope in a sequence - to - sequence model. this allows each user generated word to be associated with the most relevant unrelated words in its corresponding conversation history. we evaluate the model on two popular dialogue datasets, the open - domain movietriples dataset and the closed - domain ubuntu troubleshoot dataset, and achieve considerable significant improvements over the state - of - the - art and baselines on completing several metrics, those including complementary diversity - representation based semantic metrics, human evaluation, and qualitative visualizations. secondly we also simultaneously show example that evaluating a vanilla generated rnn with dynamic attention outperforms more complex memory models ( e. g., lstm and gru ) by allowing for flexible, long - distance memory. we promote further coherence semantics via topic modeling - based reranking.", "histories": [["v1", "Mon, 21 Nov 2016 20:25:19 GMT  (61kb,D)", "http://arxiv.org/abs/1611.06997v1", "To appear at AAAI 2017"]], "COMMENTS": "To appear at AAAI 2017", "reviews": [], "SUBJECTS": "cs.CL cs.AI", "authors": ["hongyuan mei", "mohit bansal", "matthew r walter"], "accepted": true, "id": "1611.06997"}, "pdf": {"name": "1611.06997.pdf", "metadata": {"source": "CRF", "title": "Coherent Dialogue with Attention-based Language Models", "authors": ["Hongyuan Mei", "Mohit Bansal", "Matthew R. Walter"], "emails": ["hmei@cs.jhu.edu", "mbansal@cs.unc.edu", "mwalter@ttic.edu"], "sections": [{"heading": "Introduction", "text": "Automatic conversational models (Winograd 1971), also known as dialogue systems, are of great importance to a large variety of applications, ranging from open-domain entertaining chatbots to goal-oriented technical support agents. An increasing amount of research has recently been done to build purely data-driven dialogue systems that learn from large corpora of human-to-human conversations, without using hand-crafted rules or templates. While most work in this area formulates dialogue modeling in a sequence-tosequence framework (similar to machine translation) (Ritter, Cherry, and Dolan 2011; Shang, Lu, and Li 2015; Vinyals and Le 2015; Sordoni et al. 2015; Li et al. 2016a; Dus\u030cek and Jurc\u030c\u0131\u0301c\u030cek 2016), some more recent work (Serban et al. 2016; Luan, Ji, and Ostendorf 2016) instead trains a language model over the entire dialogue as one single sequence. In our work, we empirically demonstrate that a language model is better suited to dialogue modeling, as it learns how the conversation evolves as information progresses. Sequence-to-sequence models, on the other hand, learn only how the most recent dialogue response is generated. Such models are better suited to converting the same information from one modality to another, e.g., in machine translation and image captioning.\nWe improve the coherence of such neural dialogue language models by developing a generative dynamic attention mechanism that allows each generated word to choose which related words it wants to align to in the increasing conversation history (including the previous words in the response being generated). Neural attention (or alignment) has proven very successful for various sequence-to-sequence tasks by associating salient items in the source sequence with the generated item in the target sequence (Mnih et al. 2014; Bahdanau, Cho, and Bengio 2015; Xu et al. 2015; Mei, Bansal, and Walter 2016a; Parikh et al. 2016). However, such attention models are limited to a fixed scope of history, corresponding to the input source sequence. In contrast, we introduce a dynamic attention mechanism to a recurrent neural network (RNN) language model in which the scope of attention increases as the recurrence operation progresses from the start through the end of the conversation.\nThe dynamic attention model promotes coherence of the generated dialogue responses (continuations) by favoring the generation of words that have syntactic or semantic associations with salient words in the conversation history. Our simple model shows significant improvements over state-ofthe-art models and baselines on several metrics (including complementary diversity-based metrics, human evaluation, and qualitative visualizations) for two benchmark datasets, the open-domain MovieTriples and closed-domain Ubuntu Troubleshoot datasets. Our vanilla RNN model with dynamic attention outperforms more complex memory models (e.g., LSTM and GRU) by allowing for long-distance and flexible memory. We also present several visualizations to intuitively understand what the attention model is learning. Finally, we also explore a complementary LDA-based method to re-rank the outputs of the soft alignment-based coherence method, further improving performance on the evaluation benchmarks."}, {"heading": "Related Work", "text": "A great deal of attention has been paid to developing datadriven methods for natural language dialogue generation. Conventional statistical approaches tend to rely extensively on hand-crafted rules and templates, require interaction with humans or simulated users to optimize parameters, or produce conversation responses in an information retrieval fashion. Such properties prevent training on the large human\nar X\niv :1\n61 1.\n06 99\n7v 1\n[ cs\n.C L\n] 2\n1 N\nov 2\n01 6\nconversational corpora that are becoming increasingly available, or fail to produce novel natural language responses.\nRitter, Cherry, and Dolan (2011) formulate dialogue response generation as a statistical phrase-based machine translation problem, which requires no explicit hand-crafted rules. The recent success of RNNs in statistical machine translation (Sutskever, Vinyals, and Lee 2014; Bahdanau, Cho, and Bengio 2015) has inspired the application of such models to the field of dialogue modeling. Vinyals and Le (2015) and Shang, Lu, and Li (2015) employ an RNN to generate responses in human-to-human conversations by treating the conversation history as one single temporally ordered sequence. In such models, the distant relevant context in the history is difficult to recall. Some efforts have been made to overcome this limitation. Sordoni et al. (2015) separately encode the most recent message and all the previous context using a bag-of-words representation, which is decoded using an RNN. This approach equates the distance of each word in the generated output to all the words in the conversation history, but loses the temporal information of the history. Serban et al. (2016) design a hierarchical model that stacks an utterance-level RNN on a token-level RNN, where the utterance-level RNN reduces the number of computational steps between utterances. Wen et al. (2015) and Wen et al. (2016) improve spoken dialog systems via multi-domain and semantically conditioned neural networks on dialog act representations and explicit slot-value formulations.\nOur work explores the ability of recurrent neural network language models (Bengio et al. 2003; Mikolov 2010) to interpret and generate natural language conversations while\nstill maintaining a relatively simple architecture. We show that a language model approach outperforms the sequenceto-sequence model at dialogue modeling. Recently, Tran, Bisazza, and Monz (2016) demonstrated that the neural attention mechanism can improve the effectiveness of a neural language model. We propose an attention-based neural language model for dialogue modeling that learns how a conversation evolves as a whole, rather than only how the most recent response is generated, and that also reduces the number of computations between the current recurrence step and the distant relevant context in the conversation history.\nThe attention mechanism in our model has the additional benefit of favoring words that have semantic association with salient words in the conversation history, which promotes the coherence of the topics in the continued dialogue. This is important when conversation participants inherently want to maintain the topic of the discussion. Some past studies have equated coherence with propositional consistency (Goldberg 1983), while others see it as a summary impression (Sanders 1983). Our work falls in the category of viewing coherence as topic continuity (Crow 1983; Sigman 1983). Similar objectives, i.e., generating dialogue responses with certain properties, have been addressed recently, such as promoting response diversity (Li et al. 2016a), enhancing personal consistency (Li et al. 2016b), and improving specificity (Yao et al. 2016). Concurrent with this work, Luan, Ji, and Ostendorf (2016) improve topic consistency by feeding into the model the learned LDAbased topic representations. We show that the simple attention neural language model significantly outperforms such\na design. Furthermore, we suggest an LDA-based re-ranker complementary to soft neural attention that further promotes topic coherence."}, {"heading": "The Model", "text": "In this section, we introduce an attention-RNN dialogue model and compare it to the architectures of basic RNN and sequence-to-sequence models."}, {"heading": "RNN Seq2Seq and Language Models", "text": "Recurrent neural networks have been successfully used both in sequence-to-sequence models (RNNSeq2Seq, Fig. 1a) (Sutskever, Vinyals, and Lee 2014) and in language models (RNN-LM, Fig. 1b) (Bengio et al. 2003; Mikolov 2010). We first discuss language models for dialogue, which is the primary focus of our work, then briefly introduce the sequence-to-sequence model, and lastly discuss the use of attention methods in both models.\nThe RNN-LM models a sentence as a sequence of tokens {w0, w1, . . . , wT } with a recurrence function\nht = f(ht\u22121, wt\u22121) (1)\nand an output (softmax) function\nP (wt = vj |w0:t\u22121) = exp g(ht, vj)\u2211 i exp g(ht, vi) , (2)\nwhere the recurrent hidden state ht \u2208 Rd encodes all the tokens up to t\u2212 1 and is used to compute the probability of generating vj \u2208 V as the next token from the vocabulary V .\nThe functions f and g are typically defined as\nf(ht\u22121, wt\u22121) = tanh(Hht\u22121 + PEwt\u22121) (3a)\ng(ht, vj) = O > vjht, (3b)\nwhere H \u2208 Rd\u00d7d is the recurrence matrix, Ewt\u22121 is a column of word embedding matrix E \u2208 Rde\u00d7V that corresponds to wt\u22121, P \u2208 Rd\u00d7de projects word embedding into the space of the same dimension d as the hidden units, and O \u2208 Rd\u00d7V is the output word embedding matrix with column vector Ovj corresponding to vj .\nWe train the RNN-LM, i.e, estimate the parameters H , P , E and O, by maximizing the log-likelihood on a set of natural language training sentences of size N\n` = 1\nN N\u2211 n=1 Tn\u2211 t=0 logP (wt|w0:t\u22121) (4)\nSince the entire architecture is differentiable, the objective can be optimized by back-propagation.\nWhen dialogue is formulated as a sequence-to-sequence task, the RNN-Seq2Seq model can be used in order to predict a target sequence wT0:L = {wT0 , wT1 , . . . , wTL} given an input source sequence wS0:M = {wS0 , wS1 , . . . , wSM}. In such settings, an encoder RNN represents the input as a sequence of hidden states hS0:M = {hS0 , hS1 , . . . , hSM}, and a separate decoder RNN then predicts the target sequence token-bytoken given the encoder hidden states hS0:M ."}, {"heading": "Attention in RNN-Seq2Seq Models", "text": "There are several ways by which to integrate the sequence of hidden states hS0:M in the decoder RNN. An attention mechanism (Fig. 1c) has proven to be particularly effective for various related tasks in machine translation, image caption synthesis, and language understanding (Mnih et al. 2014; Bahdanau, Cho, and Bengio 2015; Xu et al. 2015; Mei, Bansal, and Walter 2016a).\nThe attention module takes as input the encoder hidden state sequence hS0:M and the decoder hidden state h T l\u22121 at each step l \u2212 1, and returns a context vector zl computed as a weighted average of encoder hidden states hS0:M\n\u03b2lm = b > tanh(WhTl\u22121 + Uh S m) (5a)\n\u03b1lm = exp(\u03b2lm)/ M\u2211 m=0 exp(\u03b2lm) (5b)\nzl = M\u2211 m=0 \u03b1lmh S m, (5c)\nwhere parameters W \u2208 Rd\u00d7d, U \u2208 Rd\u00d7d, and b \u2208 Rd are jointly learned with the other model parameters. The context vector zl is then used as an extra input to the decoder RNN at step l together with wT0:l\u22121 to predict the next token w T l ."}, {"heading": "Attention in RNN-LM", "text": "We develop an attention-RNN language model (A-RNNLM) as illustrated in Figure 1d, and describe how it can be used in the context of dialogue modeling. We then describe its advantages compared to the use of attention in sequenceto-sequence models.\nAs with the RNN-LM, the model first encodes the input into a sequence of hidden states up to word t \u2212 1 (Eqn. 1). Given a representation of tokens up to t \u2212 1 {r0, r1, . . . , rt\u22121} (which we define shortly), the attention module computes the context vector zt at step t as a weighted average of r0:t\u22121\n\u03b2ti = b > tanh(Wht\u22121 + Uri) (6a)\n\u03b1ti = exp(\u03b2ti)/ t\u22121\u2211 i=0 exp(\u03b2ti) (6b)\nzt = t\u22121\u2211 i=0 \u03b1tiri (6c)\nWe then use the context vector zt together with the hidden state ht to predict the output at time t\ng(ht, zt, vj) = O > vj (Ohht +Ozzt) (7a)\nP (wt = vj |w0:t\u22121) = exp g(ht, zt, vj)\u2211 i exp g(ht, zt, vi) , (7b)\nwhere Oh \u2208 Rd\u00d7d and Oz \u2208 Rd\u00d7dz project ht and zt, respectively, into the same space of dimension d.\nThere are multiple benefits of using an attention-RNN language model for dialogue, which are empirically supported by our experimental results. First, a complete dialogue is usually composed of multiple turns. A language\nmodel over the entire dialogue is expected to better learn how a conversation evolves as a whole, unlike a sequenceto-sequence model, which only learns how the most recent response is generated and is better suited to translationstyle tasks that transform the same information from one modality to another. Second, compared to LSTM models, an attention-based RNN-LM also allows for gapped context and a flexible combination of conversation history for every individual generated token, while maintaining low model complexity. Third, attention models yield interpretable results\u2014we visualize the learned attention weights, showing how attention chooses the salient words from the dialogue history that are important for generating each new word. Such a visualization is typically harder for the hidden states and gates of conventional LSTM and RNN language models.\nWith an attention mechanism, there are multiple options for defining the token representation r0:t\u22121. The original attention model introduced by Bahdanau, Cho, and Bengio (2015) uses the hidden units h0:t\u22121 as the token representations r0:t\u22121. Recent work (Mei, Bansal, and Walter 2016a; Mei, Bansal, and Walter 2016b) has demonstrated that performance can be improved by using multiple abstractions of the input, e.g., ri = (E>wi , h > i ) >, which is what we use in this work."}, {"heading": "LDA-based Re-Ranking", "text": "While the trained attention-RNN dialogue model generates a natural language continuation of a conversation while maintaining topic concentration by token association, some dialogue-level topic-supervision can help to encourage generations that are more topic-aware. Such supervision is not commonly available, and we use unsupervised methods to learn document-level latent topics. We employ the learned topic model to select the best continuation based on document-level topic-matching.\nWe choose Latent Dirichlet Allocation (LDA) (Blei, Ng, and Jordan 2003; Blei and Lafferty 2009) due to its demonstrated ability to learn a distribution over latent topics given a collection of documents. This generative model assumes documents {w0:Tn}Nn=1 arise from K topics, each of which is defined as a distribution over a fixed vocabulary of terms, which forms a graphical structure L that can be learned from the training data. The topic representation \u03b8\u0302 of a (possibly unseen) dialogue w0:T can then be estimated with the learned topic structure L as \u03b8\u0302(w0:T ) = L(w0:T ).\nGiven a set of generated continuations {cm}Mm=1 for each unseen dialogue w0:T , the topic representations of the dialogue and its continuations are \u03b8\u0302(w0:T ) = L(w0:T ) and \u03b8\u0302(cm) = L(cm), respectively. We employ a matching score Sm = S ( \u03b8\u0302(w0:T ), \u03b8\u0302(cm) ) to compute the similarity between\n\u03b8\u0302(w0:T ) and each \u03b8\u0302(cm). In the end, a weighted score is computed as S\u0304m = \u03bbSm + (1\u2212 \u03bb)`(cm|w0:T ), where \u03bb \u2208 [0, 1] and `(cm|w0:T ) is the conditional log-likelihood of the continuation cm. The hyper-parameters K and \u03bb are tuned on a development set.\nConcurrent with our work, Luan, Ji, and Ostendorf (2016)\nuse learned topic representations \u03b8\u0302 of the given conversation as an extra feature in a language model to enhance the topic coherence of the generation. As we show in the Results and Analysis section, our model significantly outperforms this approach."}, {"heading": "Experimental Setup", "text": ""}, {"heading": "Dataset", "text": "We train and evaluate the models on two large natural language dialogue datasets, MovieTriples (pre-processed by Serban et al. (2016)) and Ubuntu Troubleshoot (preprocessed by Luan, Ji, and Ostendorf (2016)). The dialogue within each of these datasets consists of a sequence of utterances (turns), each of which is a sequence of tokens (words).1 The accompanying supplementary material provides the statistics for these two datasets."}, {"heading": "Evaluation Metrics", "text": "For the sake of comparison, we closely follow previous work and adopt several standard (and complementary) evaluation metrics: perplexity (PPL), word error rate (WER), recall@N, BLEU, and diversity-based Distinct-1. We provide further discussion of the various metrics and their advantages in the supplementary material. On the MovieTriples dataset, we use PPL and WER, as is done in previous work. Following Serban et al. (2016), we adopt two versions for each metric: i) PPL as the word-level perplexity over the entire dialogue conversation; ii) PPL@L as the word-level perplexity over the last utterance of the conversation; iii) WER; and iv) WER@L (defined similarly).\nOn the Ubuntu dataset, we follow previous work and use PPL and recall@N. Recall@N (Manning et al. 2008) evaluates a model by measuring how often the model ranks the correct dialogue continuation within top-N given 10 candidates. Additionally, we also employ the BLEU score (Papineni et al. 2001) to evaluate the quality of the generations produced by the models. Following Luan, Ji, and Ostendorf (2016), we perform model selection using PPL on the development set, and perform the evaluation on the test set using the other metrics. We also present evaluation using the Distinct-1 metric (proposed by Li et al. (2016a)) to measure the ability of the A-RNN to promote diversity in the generations, because typical neural dialogue models generate generic, safe responses (technically appropriate but not informative, e.g., \u201cI dont know\u201d). Finally, we also present a preliminary human evaluation."}, {"heading": "Training Details", "text": "For the MovieTriples dataset, we follow the same procedure as Serban et al. (2016) and first pretrain on the large Q-A SubTitle dataset (Ameixa et al. 2014), which contains 5.5M question-answer pairs from which we randomly sample 20000 pairs as the held-out set, and then fine-tune on the\n1Following Luan, Ji, and Ostendorf (2016), we randomly sample nine utterances as negative examples of the last utterance for each conversation in Ubuntu Troubleshoot for the development set.\ntarget MovieTriples dataset. We perform early-stopping according to the PPL score on the held-out set. We train the models for both the MovieTriples and Ubuntu Troubleshoot datasets using Adam (Kingma and Ba 2015) for optimization in RNN back-propagation. The accompanying supplementary material provides additional training details, including the hyper-parameter settings."}, {"heading": "Results and Analysis", "text": ""}, {"heading": "Primary Dialogue Modeling Results", "text": "In this section, we compare the performance on several metrics of our attention-based RNN-LM with RNN baselines and state-of-the-art models on the two benchmark datasets. Table 1 reports PPL and WER results on the MovieTriples test set, while Table 2 compares different models on Ubuntu Troubleshoot in terms of PPL on the development set and recall@N (N = 1 and 2) on the test set (following what previous work reports). In the tables, RNN is the plain vanilla RNN language model (RNN-LM), as defined in The Model section, and LSTM is an LSTM-RNN language model, i.e., an RNN-LM with LSTM memory units. ARNN refers to our main model as defined in the Attention in RNN-LM section. HRED in Table 1 is the hierarchical neural dialogue model proposed by Serban et al. (2016).2 LDA-CONV in Table 2 is proposed by Luan, Ji, and Ostendorf (2016), which integrates learned LDA-topicproportions into an LSTM language model in order to promote topic-concentration in the generations. Both tables demonstrate that the attention-RNN-LM (A-RNN) model\n2We compare to their best-performing model version, that adopts bidirectional gated-unit RNN (GRU).\nachieves the best results reported to-date on these datasets in terms all evaluation metrics. It improves the ability of an RNN-LM to model continuous dialogue conversations, while keeping the model architecture simple.\nWe also evaluate the effectiveness of the RNN-LM and RNN-Seq2Seq models on both the MovieTriples and Ubuntu\nTroubleshoot development sets. As shown in Table 3, the RNN language model yields lower perplexity than the RNN sequence-to-sequence model on both datasets. Hence, we present all primary results on our primary A-RNN attentionbased RNN language model.3"}, {"heading": "Generation Diversity Results", "text": "Next, we investigate the ability of the A-RNN to promote diversity in the generations, compared to that of the vanilla RNN using the Distinct-1 metric proposed by Li et al. (2016a). Distinct-1 is computed as the number of distinct unigrams in the generation scaled by the total number of generated tokens. Table 5 shows that our attention-based RNN language model (A-RNN) yields much more diversity in its generations as compared to the vanilla RNN baseline."}, {"heading": "Topic Coherence Results", "text": "Next, we investigate the ability of the different models to promote topic coherence in the generations in terms of BLEU score. In addition to the RNN and ARNN models, we consider T-A-RNN, a method that incorporates LDA-based topic information into an A-RNN model, following the approach of Luan, Ji, and Ostendorf (2016). We also evaluate our LDA-based reranker, A-RNN-RR, which re-ranks according to the score S\u0304m = \u03bbSm + (1\u2212 \u03bb)`(cm|w0:T ), where we compute the log-likelihood `(cm|w0:T ) based upon a trained A-RNN-M model and validate the weight \u03bb on the development set. We\n3Experiments also demonstrate significant improvements for the Attention-RNN-LM over the Attention-RNN-Seq2Seq.\nalso consider a method that combines the T-A-RNN model with an LDA-based re-ranker (T-A-RNN-RR).4 Table 4 reports the resulting BLEU scores for each of these methods on the development and test sets from the Ubuntu Troubleshoot dataset. We make the following observations based upon these results: (1) The A-RNN performs substantially better than the RNN with regards to BLEU; (2) using our LDA-based re-ranker further improves the performance by a significant amount (A-RNN v.s. A-RNN-RR); (3) as opposed to our LDA-based re-ranker, adopting the LDA design of Luan, Ji, and Ostendorf (2016) only yields marginal improvements on the development set, but does not generalize well to the test set (A-RNN v.s. T-A-RNN and A-RNNRR v.s. T-A-RNN-RR). Also, our LDA re-ranker results in substantial improvements even on top of their topic-based model (T-A-RNN v.s. T-A-RNN-RR)."}, {"heading": "Preliminary Human Evaluation", "text": "In addition to multiple automatic metrics, we also report a preliminary human evaluation. On each dataset, we manually evaluate the generations of both the A-RNN and RNN models on 100 examples randomly sampled from the test set. For each example, we randomly shuffle the two response generations, anonymize the model identity, and ask a human annotator to choose which response generation is more topically coherent based on the conversation history. As Table 6 shows, the A-RNN model wins substantially more often than the RNN model."}, {"heading": "Qualitative Analysis", "text": "Next, we qualitatively evaluate the effectiveness of our ARNN model through visualizations of the attention and outputs on both datasets. Figure 2 provides a visualization of the attention for a subset of the words in the generation for the two datasets. The last line in both Fig. 2a and Fig. 2b presents the generated response and we highlight in bold two output words (one on the left and one on the right) for two\n4Since Luan, Ji, and Ostendorf (2016) do not publish BLEU scores or implementations of their models, we can not compare with LDA-CONV on BLEU. Instead, we demonstrate the effect of adding the key component of LDA-CONV on top of the A-RNN.\ntime steps. For each highlighted generated word, we visualize the attention weights for words in the conversation history (i.e., words in the preceding turns and those previously generated in the output response), where darker shades indicate larger attention weights. As the figure indicates, the attention mechanism helps learn a better RNN language model that promotes topic coherence, by learning to associate the currently-generated word with informative context words in the conversation history. As shown in Figure 6a, the A-RNN generates meaningful and topically coherent responses on the MovieTriples dataset. In comparison, the vanilla RNN tends to produce generic answers, such as \u201ci don\u2019t know\u201d. Similarly, the A-RNN follows up with useful questions on the Ubuntu Troubleshoot dataset (Fig. 6b)."}, {"heading": "Conclusion", "text": "We investigate how to improve the performance of a recurrent neural network dialogue model via an attention mechanism, and how to promote topic and saliency aware conversation continuation. Our attention-RNN language model increases the scope of attention continuously as the conversation progresses (which distinguishes it from standard attention with fixed scope in a sequence-to-sequence models) such that each generated word can be associated with its most related words in the conversation history. We evaluate this simple model on two large dialogue datasets (MovieTriples and Ubuntu Troubleshoot), and achieve the best results reported to-date on multiple dialogue metrics (including complementary diversity-based metrics), performing better than gate-based RNN memory models. We also promote topic concentration by adopting LDA-based reranking, further improving performance."}, {"heading": "Acknowledgments", "text": "We thank Iulian Serban, Yi Luan, and the anonymous reviewers for sharing their datasets and for their helpful discussion. We thank NVIDIA Corporation for donating GPUs used in this research."}, {"heading": "Appendix", "text": ""}, {"heading": "LDA-based Re-Ranking Details", "text": "While the trained attention-RNN dialogue model generates a natural language continuation of a conversation while maintaining topic concentration by token saliency/association, some dialogue-level topic-supervision can help to encourage generations that are more topic-aware. Such supervision is not commonly available, and we use unsupervised methods to learn document-level latent topics, and adopt the learned topic model to select the best continuation based on document-level topic-matching.\nWe choose Latent Dirichlet Allocation (LDA) (Blei, Ng, and Jordan 2003; Blei and Lafferty 2009) due to its demonstrated ability to learn a distribution over latent topics given a collection of documents. This generative model assumes that documents arise from multiple topics, each of which is defined as a distribution over a fixed vocabulary of terms. Specifically, we can assume that K topics are associated\nwith a collection of dialogues {w0:Tn}Nn=1 in the dialogue corpus, and that each dialogue exhibits these topics with different likelihoods \u03b8n \u2208 RK . Let DirV (\u03b7) and DirK(\u03be) denote a V - and K-dimensional Dirichlet distributions with scalar parameter \u03b7 and vector parameter \u03be \u2208 RK , respectively. The associated \u03b7 and \u03be can be learned by various methods (Blei, Ng, and Jordan 2003; Blei and Lafferty 2009; Hoffman, Bach, and Blei 2010), and the topic proportions \u03b8\u0302n of a (possibly unseen) dialogue w0:Tn can be estimated with the learned topic structure L. We let \u03b8\u0302 = L(w0:T ) denote the estimated topic proportions \u03b8\u0302 of any dialogue w0:T using the learned topic structure L.\nWe use the training set to learn the topic structure L with K topics. Having generated a set of continuations {cm}Mm=1 for each unseen dialogue w0:T during testing, we use the topic structure L to compute the topic proportions for the dialogue and its continuations, \u03b8\u0302(w0:T ) = L(w0:T ) and \u03b8\u0302(cm) = L(cm), respectively. Next, we employ a predefined metric Sm = S ( \u03b8\u0302(w0:T ), \u03b8\u0302(cm) ) to compute the\nsimilarity between the topic proportions for the dialogue \u03b8\u0302(w0:T ) and each continuation \u03b8\u0302(cm). Finally, we compute a weighted score S\u0304m = \u03bbSm + (1\u2212 \u03bb)`(cm|w0:T ), where \u03bb \u2208 [0, 1] and `(cm|w0:T ) is the log-likelihood of the continuation cm conditioned on the dialogue w0:T . The hyperparametersK and \u03bb are tuned on a held-out development set according to the target evaluation metrics (defined shortly).\nConcurrent with our work, Luan, Ji, and Ostendorf (2016) also propose using learned topic representations \u03b8\u0302 of the given conversation as an extra feature in a language model in order to enhance the topic coherence of the generation. They define the function g as g(ht, \u03b8\u0302, vj) = O > vj (Ohht +O\u03b8 \u03b8\u0302). As we show in the Results and Analysis section, our attention-RNN language models significantly outperform this approach, though it is possible to further improve the quality of the generation by combining these methods i.e., by defining g(ht, zt, \u03b8\u0302, vj) = O > vj (Ohht +Ozzt +O\u03b8 \u03b8\u0302) and also using an LDA-based re-ranker."}, {"heading": "Dataset Details", "text": "We train and evaluate the models on two large natural language dialogue datasets, MovieTriples (pre-processed by Serban et al. (2016)) and Ubuntu Troubleshoot (preprocessed by Luan, Ji, and Ostendorf (2016)). The dialogue within each of these datasets consists of a sequence of utterances (turns), each of which is a sequence of tokens (words). Table 7 provides the statistics for these two datasets.5"}, {"heading": "Evaluation Metrics", "text": "For the sake of comparison, we closely follow previous work and adopt several standard (and complementary) evaluation metrics (perplexity, word error rate, recall@N and BLEU,\n5Following the approach of Luan, Ji, and Ostendorf (2016), we randomly sample nine utterances as negative examples of the last utterance for each conversation in the Ubuntu Troubleshoot for the development set.\ndiversity-based Distinct-1). On the MovieTriples dataset, we use perplexity (PPL) and word error rate (WER) as is done in previous work, due to the metrics\u2019 ability to appropriately quantify the performance of a language model by measuring its ability to learn the syntactic structure of dialogue. Following Serban et al. (2016), we adopt two versions for each metric: i) PPL as the word-level perplexity over the entire dialogue conversation; ii) PPL@L as the word-level perplexity over the last utterance of the conversation; iii) WER as the word error rate over the entire dialogue conversation; and iv) WER@L as the word error rate over the last utterance of the conversation. We use all four metrics for model selection on the development set and for evaluation on the test set.\nOn the Ubuntu Troubleshoot dataset, we follow previous work and use PPL and recall@N to evaluate the performance of the proposed language models. recall@N (Manning et al. 2008) evaluates a model by measuring how often the model ranks the correct dialogue continuation within topN range given 10 candidates. Additionally, we also adopt BLEU score (Papineni et al. 2001), to evaluate the quality of generations produced by the models. While not perfect, we believe that BLEU score is a suitable metric for evaluating topic-concentration, as it evaluates the generated continuation by counting explicit n-gram match relative to a set of references, and because word-matching can be a reasonable proximity for topic-matching.\nFinally, we also present evaluation using the diversitybased Distinct-1 metric (proposed by Li et al. (2016a)) to measure the ability of the A-RNN to promote diversity in the generations, because typical neural dialogue models generate generic, safe responses (technically appropriate but not informative, e.g., \u201cI dont know\u201d). Distinct-1 is computed as the number of distinct unigrams in the generation scaled by the total number of generated tokens."}, {"heading": "Training Details", "text": "For the MovieTriples dataset, we follow the same procedure as Serban et al. (2016) and first pretrain on a large Q-A SubTitle dataset (Ameixa et al. 2014) and then finetune on the target MovieTriples dataset. The Q-A SubTitle dataset contains approximately 5.5M question-answer pairs, from which we randomly sample 20000 pairs as the held-out set. We performed early-stopping according to the PPL score on the held-out set. We tuned the dimensionality d \u2208 {200, 300, 400, 500} of the RNN hidden states, and chose d = 300. We similarly use a setting of d = 300 on the Ubuntu Troubleshoot dataset. We use Adam (Kingma and Ba 2015) for optimization in RNN back-propagation.\nWhen training the attention-RNN dialogue model, we perform early-stopping and model selection based on the PPL values on the development set, following Luan, Ji, and Ostendorf (2016). For the LDA-based re-ranker, we choose the two hyper-parameters, i.e., the number of topics K and ranking weight \u03bb, based on the values of recall@N and BLEU score on the development set. In the end, we choose K = 10 out of K \u2208 {5, 10, 20, 50} and \u03bb = 0.45 out of \u03bb \u2208 {0.00, 0.05, . . . , 0.95, 1.00}."}, {"heading": "Output Examples", "text": "We qualitatively evaluate the effectiveness of our A-RNN model through visualizations of the output on both datasets. The A-RNN generates meaningful and topically coherent responses on the MovieTriples dataset (Fig. 6a). In comparison, the vanilla RNN tends to produce generic answers, such as \u201ci don\u2019t know\u201d. On the Ubuntu Troubleshoot dataset, the A-RNN either provides promising technical solutions or follows up with useful questions (Fig. 6b)."}], "references": [], "referenceMentions": [], "year": 2016, "abstractText": "We model coherent conversation continuation via RNNbased dialogue models equipped with a dynamic attention mechanism. Our attention-RNN language model dynamically increases the scope of attention on the history as the conversation continues, as opposed to standard attention (or alignment) models with a fixed input scope in a sequence-tosequence model. This allows each generated word to be associated with the most relevant words in its corresponding conversation history. We evaluate the model on two popular dialogue datasets, the open-domain MovieTriples dataset and the closed-domain Ubuntu Troubleshoot dataset, and achieve significant improvements over the state-of-the-art and baselines on several metrics, including complementary diversity-based metrics, human evaluation, and qualitative visualizations. We also show that a vanilla RNN with dynamic attention outperforms more complex memory models (e.g., LSTM and GRU) by allowing for flexible, long-distance memory. We promote further coherence via topic modeling-based reranking.", "creator": "LaTeX with hyperref package"}}}