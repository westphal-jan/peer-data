{"id": "1611.07233", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "22-Nov-2016", "title": "CAS-CNN: A Deep Convolutional Neural Network for Image Compression Artifact Suppression", "abstract": "lossy image compression techniques algorithms are pervasively heavily used to mechanically reduce the size representation of images generally transmitted over the web and recorded on data storage media. however, we pay for their fairly high compression rate with visual artifacts degrading the user experience. deep convolutional neural networks have \" become a widespread tool to address high - level computer vision tasks very successfully. recently, they have found their way into the areas emerging of low - level computer vision and image processing to solve discrete regression problems mostly with relatively shallow networks.", "histories": [["v1", "Tue, 22 Nov 2016 10:11:58 GMT  (4710kb,D)", "http://arxiv.org/abs/1611.07233v1", "8 pages"]], "COMMENTS": "8 pages", "reviews": [], "SUBJECTS": "cs.CV cs.AI cs.GR cs.IR cs.MM", "authors": ["lukas cavigelli", "pascal hager", "luca benini"], "accepted": false, "id": "1611.07233"}, "pdf": {"name": "1611.07233.pdf", "metadata": {"source": "CRF", "title": "CAS-CNN: A Deep Convolutional Neural Network for Image Compression Artifact Suppression", "authors": ["Lukas Cavigelli", "Pascal Hager", "Luca Benini"], "emails": ["surname@iis.ee.ethz.ch"], "sections": [{"heading": null, "text": "We present a novel 12-layer deep convolutional network for image compression artifact suppression with hierarchical skip connections and a multi-scale loss function. We achieve a boost of up to 1.79 dB in PSNR over ordinary JPEG and an improvement of up to 0.36 dB over the best previous ConvNet result. We show that a network trained for a specific quality factor (QF) is resilient to the QF used to compress the input image\u2014a single network trained for QF 60 provides a PSNR gain of more than 1.5 dB over the wide QF range from 40 to 76.\nI. INTRODUCTION\nCompression methods can be split into two categories: lossless (e.g. PNG) and lossy (e.g. JPEG) [1]. While lossless methods provide the best visual experience to the user, lossy methods have an non-invertible compression function but can achieve a much higher compression ratio. They often come with a parameter to span the trade-off between file size and quality of the decompressed image. In practical uses, lossy compression schemes are often preferred on consumer devices for their much higher compression rate [1].\nParticularly at high compression rates, the differences between the decompressed and the original image become visible with artifacts that are specific of the applied compression scheme. These are not only unpleasant to see, but also have a negative impact on many low-level vision algorithms [2]. Many compression algorithms rely on tiling the images into blocks, applying a sparsifying transform and re-quantization, followed by a generic loss-less data compression [3].\nJPEG has become the most widely accepted standard in lossy image compression [4], with many efficient software transcoders publicly available and specialized hardware accelerators deployed in many cameras. Due to its popularity, JPEG-compressed images are also widely found on storage devices containing memories of moments experienced with family and friends, capturing the content of historic documents, and holding on to evidence in legal investigations.\nImage compression is also used in wireless sensors systems to transfer visual information from sensor nodes to central storage and processing sites. In such systems, the transmitting node is often battery-powered and thus heavily power-\nconstrained [5]. Transmitting data is often the most expensive part in terms of energy, and strong compression can mitigate this by reducing the required transmit energy at the expense of introducing compression artifacts [3]. Similar challenges are also seen in mobile devices storing data: size and cost constraints limit the amount of memory for data storage, and the energy available on such devices is depleted rapidly when writing to flash memory\u2014so much that it pays off to apply compression before writing to flash memory [6], [7]. On the processing site, these space and energy constraints are absent and much more computational power is available to decompress and possibly post-process the transmitted or stored images [3].\nDeep convolutional neural networks (ConvNets) have become an essential tool for computer vision, even exceeding human performance in tasks such as image classification [8], object detection [9], and semantic segmentation [10], [11]. In addition, they have also started to gain relevance for regression tasks in low-level image and video processing, computing saliency maps [12], optical flow fields [13] and single-image super-resolution images [14] with state-of-the-art performance.\nIn this work, we present 1) the construction of a new deep convolutional neural network architecture to remove compression artifacts in JPEG compressed image data, 2) a strategy to train this deep network, adaptable to other low-level vision tasks, and 3) extensive evaluations on the LIVE1 dataset, highlighting the properties of our network and showing that this is the current state-of-the-art performance ConvNet for compression artifact suppression (CAS)."}, {"heading": "II. RELATED WORK", "text": "Traditional approaches to suppress compression artifacts can be split into three categories. Various types of intelligent edgeaware denoising such as SA-DCT [15], [16], BM3D [17] have been proposed to address this task during the late 2000s. In recent years, dictionary-based sparse recovery algorithms such as DicTV [18], RTF [19], S-D2 [20], D3 [21], DDCN [22] have achieved outstanding results by directly addressing the deficiencies such as ringing and blocking very specific to JPEG. These algorithms explicitly attempt to optimally reverse the effect of DCT-domain quantization using learned dictionaries very specific to the applied compressor and quantization tables.\nThis work was inspired by single-image super-resolution ConvNets, which are a special case of compression artifact removal, where the compression is a simple sub-sampling\nar X\niv :1\n61 1.\n07 23\n3v 1\n[ cs\n.C V\n] 2\n2 N\nov 2\n01 6\noperation. Several networks have shown to be very successful at this task, such as SRCNN [14] or DRCN [23]. They use different training procedures and approaches for network construction, but both ConvNets are a simple sequence of convolution and point-wise non-linearity layers.\nRecently, two important works have been published, which apply ConvNets for compression artifact suppression: ARCNN [2], [24] and the approach presented in [25]. The former starts from the architecture presented in SRCNN. In order to overcome convergence problems, they use transfer-learning from the 4-layer network retrained for artifact reduction to a deeper 5-layer network, as well as between networks trained for different JPEG quality factors (QFs) and datasets. In [25] a residual structure extends the simple stacking of convolutional, non-linearity and pooling layers, such that the network is only trained to produce an increment compensating for the distortions. Furthermore, skip elements where some feature maps are bypassing one or multiple layers and are then concatenated to the feature maps at a later stage were introduced. Additionally, they do not use a plain MSE loss function but also include an additional term to emphasize edges.\nThe networks of both works were trained on the 400 images contained in the BSDS500 train and test sets and evaluated on the remaining 100 images in the validation set. Testing of these networks was then performed on the LIVE1 dataset (29 images) [26] and, in case of AR-CNN, on the 5 test images of [15] and a self-collected dataset of 40 photographs from twitter as well. We will adopt their test datasets, procedures and quality measures. Our choice of the training dataset is discussed in Section III-D."}, {"heading": "III. METHODOLOGY", "text": "We start from the basic concept of training a deep ConvNet for a regression problem, as has been done for the related task of superresolution [14], [23] or other low-level computer vision operations such as optical flow estimation [13]. The authors of [25] propose several new elements for artifact reduction ConvNets: A residual architecture, an edgeemphasized loss function, symmetric weight initialization, and skip connections. All these elements were introduced to alleviate the obstacles preventing the training deep networks for regression tasks. Taking inspiration from deep neural networks such as FlowNet [13] and FCN [10] developed for optical flow estimation and semantic segmentation respectively, we propose a neural network with hierarchical skip connections (cf. Section III-A) and a multi-scale loss function (cf. Section III-C) for compression artifact suppression."}, {"heading": "A. Network Architecture", "text": "An overview of our proposed network is shown in Figure 1. The blocks A, . . . ,D each consist of two convolutional layers, increasing the number of channels from 1 to 128 and later to 256, the deeper they are in the network. At the same time the resolution is reduced by down-sampling (DS), which is implemented with 2 \u00d7 2 pixel average-pooling layers with 2 \u00d7 2 stride. The main path through the ConvNet (marked\nblue in Figure 1) then proceeds through the full-convolution1 layers D\u0303, . . . , B\u0303 and the normal convolution layer A\u0302. This way we obtain a 12-layer ConvNet, which however cannot be trained to achieve state-of-the-art accuracy using standard training methods. In the following, we list modifications to the network reducing the average path length, allowing it to converge to beyond state-of-the-art accuracy.\nTo reduce the path length, the higher-resolution intermediate results after each full-convolution layer are enhanced in the next layer by concatenating the lower-level features extracted earlier in the network natively at this resolution (marked red in Figure 1). We expect this to benefit the network two-fold: once through the additional information to help infer high-resolution outputs, and second to aid in training the early layers of the network by means of bypassing the middle layers.\nTraining deep networks for regression tasks is problematic and while we have reduced the path length for some paths (e.g. input \u2192 A \u2192 A\u0302 \u2192 output) using the aforementioned method, some very long paths remain. The gradients for adjusting the weights of D are propagated from the output through A\u0302, B\u0303, C\u0303, D\u0303,D. To improve on this, we introduce a multi-scale optimization criterion: instead of optimizing inputto-output, we reconstruct low-resolution images already from deep within the network using a single convolutional layer (marked green in Figure 1), i.e. D\u0302, C\u0302, B\u0302 for 1/64-th, 1/16-th, and 1/4-th of the resolution, respectively. We do not discard the output, but up-sample (US) it by a factor of 2\u00d7 in each spatial dimension using nearest-neighbor interpolation and concatenate it to the feature maps generated by the full-convolution layer parallel to this path (marked yellow in Figure 1). Using this configuration, we have further shortened the deepest stack of layers significantly by reducing the distance from the middle layers to the output.\nThe parameters of the convolution and full-convolution\n1We use the definition of full-convolution (also known as up-convolution, deconvolution, backwards convolution, or fractional-strided convolution) as described in [10], [27].\nlayers are listed in Table I. All these layers are followed by a Parametric Rectified Linear Unit (PReLU) [28] activation layer, where the slope for negative inputs is learned from data rather than pre-defined. These units have shown superior performance for ImageNet classification [28], reducing the issues of dead features [29].\nWe have found that learning a residual to the input image instead of the reconstructed image as suggested in previous work [25] did not improve the performance of the proposed ConvNet and thus do not include it in our network. The initial weight and bias values are drawn uniformly from the interval( \u2212n\u22121/2in , n \u22121/2 in ) , where nin is the number of input channels into that layer. Batch normalization has shown to reduce the achievable accuracy. The batch-wise normalization of means and variances introduces batch-to-batch jitter thereof into the system, preventing full convergence of the network to the maximum accuracy obtained otherwise."}, {"heading": "B. Performance Metrics", "text": "The most wide-spread performance metrics to evaluate differences between images and many other signals are the mean-squared error (MSE) and the closely related peak signalto-noise ratio (PSNR). The MSE is the pixel-wise average over the squared difference in intensity between the distorted and the reference image. The PSNR is the MSE normalized to the maximum possible signal values typically expressed in decibel (dB). Following [24], [25] with pixel values normalized to the range [0, 1], we use\nPSNR(X, X\u0302) = 10 log10\n( 1/MSE(X, X\u0302) ) , (1)\nMSE(X, X\u0302) = \u2211 p\u2208P e(xp, x\u0302p) 2  / |P| , (2) where P is the set of pixel indexes, X is the reference image, X\u0302 is the image to evaluate, and e is the per-pixel error function (e.g. |xp \u2212 x\u0302p| for grayscale images).\nBoth metrics are fully referenced, comparing individual pixels to the original image and converging to zero for a perfect reconstruction. They are known to differ from perceived visual quality [1], [30]\u2013[32] but find wide-spread use due to their simplicity. A variation of the PSNR measure is the IPSNR (increase in PSNR), which is the PSNR difference to the baseline distorted image and thus measures quality improvement. It is also more stable across different datasets.\nA popular alternative is to use the structural similarity index (SSIM) [30], which is the mean of the product of three terms assessing similarity in luminance, contrast and structure over multiple localized windows. We use the Matlab implementation provided with [30] for evaluation and use the same parameters as related work [2], [24], [25]: K1 = 0.01,K2 = 0.03, and a 8\u00d78 local statistics window w of ones. A third measure used in related work is the PSNR-B [33], which adds a (non-referenced) blocking effect factor (BEF) term to the MSE measure. The BEF measures luminance discontinuities at the horizontally and vertically oriented block boundaries. We define the IPSNR-B analogous to the IPSNR."}, {"heading": "C. Loss Function", "text": "During the training of the ConvNets we minimize the MSE criterion, penalizing deviations from the reference image by the squared distance. However, as mentioned in Section III-A, in order to improve the training procedure we include not only the full-resolution output, but also the low-resolution outputs from within the network. The reference for these is computed by down-sampling the input image, averaging across 4, 16 and 64 pixels, respectively. Each of these outputs\u2019 MSE contributes equally to the overall multi-scale (MS) loss function.\nWe run the training until convergence with this objective, before removing the lower resolution images from the loss function and continue the training for several epochs to minimize the MSE of only the full-resolution output image (output loss), fine-tuning (FT) the network with this optimization objective.\nIn previous work, including an edge-emphasized term into the loss function has been proposed [25]. We decided not to introduce such a loss term because it leads to an additional hyperparameter to adjust the weight and because we consider it inconsistent to train the network with a loss function different from the quality measure used to benchmark the results. Tuning the hyperparameters for the best PSNR would result in choosing the weight value of the edge-emphasized loss term to be zero.\nAs such, it prevents further improvement in terms of PSNR and SSIM beyond some limit, and the factor with which it is weighted can be used to trade-off overall reconstruction quality and deblocking. We do not include such a term in our setup because our main objective is to maximize the overall reconstruction, which already implies a high-quality deblocking. By training on a large dataset we do not require such a regularization term."}, {"heading": "D. Dataset", "text": "Previous networks for compression artifact reduction were trained on the 400 train and test images of the BSDS500 dataset and tested on the 100 remaining validation images [2], [24], [25]. The authors of [25] show that this is the limiting factor for further improvement of their larger L8 network with 220k learned parameters. We do not want to constrain the size of our network by the amount of available training data, particularly since we do not need hard-to-obtain labels for it. We thus use the large, widely-known and publicly available ImageNet 2013 detection dataset [35], which consists of 396k training and 20k validation color images of various sizes. From each image we take cut-outs of 120\u00d7 120 pixels to generate our dataset.\nThe color images are transformed to YCbCr space and only the luminance channel is used further. The input to the network is then generated by compressing the resulting single-channel\nimage using the Matlab JPEG compressor2 with a bit depth of 8.\nFor training our network we take 50k images of the 120\u00d7 120 pixel cut-outs from the training set and 10k cut-outs for the validation set. We increase the size of the training set to 150k for fine-tuning with the output loss function. Testing is performed on the 29 images of the LIVE1 dataset.\nWe use the Torch framework [36] with cuDNN v5.1.3 [37] for our evaluations. We optimize the network parameters with Adam [38] starting with a learning rate of 10\u22124. A minibatch size of 20 images was used and training was parallelized over two Nvidia Titan X Maxwell GPUs. We have not applied any preprocessing to the images before feeding them into the network. Our main training was conducted for quality factor 20 compressed input data and we have trained the networks for other quality factors starting from this one to reduce training time. For the forward pass, a throughput of 1.01 Mpixel/s has been measured with a Nvidia GTX1080 using single-precision floating-point operations."}, {"heading": "IV. RESULTS & DISCUSSION", "text": "We have evaluated the mean PSNR, PSNR-B and SSIM across the LIVE1 dataset for the JPEG quality factors 10, 20, 40, 60 and 80, and compare them to related work in Table II. We use the same JPEG compressor as in AR-CNN [24] and Svoboda et al. [25] (i.e. Matlab), with which we obtain the identical baseline PSNR of 30.07 dB for QF 20 and 27.77 dB\n2We have used this compressor to remain comparable with related work. Other implementations such as libjpeg or libjpeg-turbo use different quantization tables and, in case of these two libraries, result in a significantly larger file size and as a consequence also a better PSNR for the same quality factor.\nquality factor: QF 20 ( ), QF 40 ( ), QF 60 ( ), QF 80 ( ), evaluated on the LIVE1 dataset.\nfor QF 10 for the JPEG compressed image with respect to the uncompressed reference.\nFor our network, we list results directly after training with the multi-scale loss function as well as after fine-tuning with the output loss. The already state-of-the-art results are further improved by this two-step learning procedure. Overall, we can see a significant improvement in PSNR of 0.19 dB over the L8 network [25], 0.30 dB over AR-CNN and 1.63 dB over ordinary JPEG for QF 20. The SSIM is also improved to 0.895. For QF 10 we see a gain of 1.67 dB over ordinary JPEG, 0.36 dB over the L4 network and 0.31 dB over AR-CNN, the state-of-the-art ConvNet for this configuration.\nFor QF 10, we improve the PSNR-B by 0.45 dB over previous work. However, for a lower compression rate, we do not exceed the PSNR-B value achieved by the L8 network. As described in the next paragraph, there are no visible blocking artifacts after applying our ConvNet. PSNR-B has been introduced for benchmarking deblocking algorithms, and by its definition the blocking artifact-penalizing term measuring the differences between pixels along the block boundary does not vanish even for a perfect reconstruction. An image with higher\nreconstruction quality might thus suffer from a lower PSNR-B value because of clearer edges all over the image including at the block boundaries.\nIn Figure 3 we show the distribution of the individual images of the LIVE1 dataset in terms of PSNR and SSIM with respect to the used number of bits per pixel for several QFs. The average PSNR and SSIM for each QF is also shown, visualizing that this method works for strong as well as for weak compression. Looking at the individual images, it becomes visible that our method improves not only the mean PSNR and SSIM, but enhances each individual image.\nAs discussed in Section III-B, the visual perception can differ from quantitative evaluations using classical quality measures. To give a visual impression as well, we provide a qualitative visual comparison in Figure 5. The lighthouse3 image serves as a basis for this comparison and is the same one used in [25]. It is shown with black markers in Figure 3, indicating that this image is not a particularly wellworking outlier. A clear improvement is visible, there are no perceptible blocking artifacts anymore and the ringing artifacts are strongly suppressed without blurring the railing depicted\nin the image. For completeness, we also provide the results for the 5 classical test images used throughout many compression papers (cf. Figure 6). The trained models and scripts required to reproduce these images are available online3.\nIn Figure 4, we show that the networks trained for a specific quality factor do not need to be retrained for the specific quality factor with which the image was compressed to achieve a high improvement in PSNR or PSNR-B. The network trained for QF 60 already boosts the PSNR by more than 1.5 dB for quality factors ranging from 25 to almost 60. This resilience to variations in quantization has not been shown for approaches focusing on DCT-domain recovery."}, {"heading": "V. CONCLUSION", "text": "We have presented a 12-layer deep convolutional neural network for compression artifact suppression in JPEG images with hierarchical skip connections and trained with a multi-scale loss function. The result is a new state-of-the-art ConvNet achieving a boost of up to 1.79 dB in PSNR over ordinary JPEG and showing an improvement of up to 0.36 dB over the best previous ConvNet result. We have shown that a network trained for a specific quality factor is resilient to the QF used compress the input image\u2014a single network trained for QF 60 provides a PSNR gain of more than 1.5 dB over the wide QF range from 40 to 76. The obtained results are also qualitatively superior to those of existing ConvNets. The network is not tailored to the JPEG-specific compression procedure, and can thus potentially be applied to a wide range of image compression algorithms."}, {"heading": "ACKNOWLEDGMENTS", "text": "The authors would like to thank Thilo Weber and Jonas Wiesendanger for their preliminary explorations on this topic, and armasuisse Science & Technology for funding this research."}], "references": [{"title": "Why is image quality assessment so difficult?", "author": ["Z. Wang", "A.C. Bovik", "L. Lu"], "venue": "IEEE Int. Conf. Acoust. Speech Signal Process.,", "citeRegEx": "1", "shortCiteRegEx": "1", "year": 2002}, {"title": "Deep Convolution Networks for Compression Artifacts Reduction", "author": ["K. Yu", "C. Dong", "C.C. Loy", "X. Tang"], "venue": "arXiv:1608.02778, 2016.", "citeRegEx": "2", "shortCiteRegEx": null, "year": 2016}, {"title": "Survey of image compression algorithms in wireless sensor networks", "author": ["L. Chew", "L. Ang"], "venue": "2008 Int. Symp. Inf. Technol., pp. 1\u20139, 2008.", "citeRegEx": "3", "shortCiteRegEx": null, "year": 2008}, {"title": "HTTP Archive - Interesting Stats", "author": ["S. Souders"], "venue": "2016. [Online]. Available: http://httparchive.org/interesting.php", "citeRegEx": "4", "shortCiteRegEx": null, "year": 2016}, {"title": "A lowpower wireless video sensor node for distributed object detection", "author": ["A. Kerhet", "M. Magno", "F. Leonardi", "A. Boni", "L. Benini"], "venue": "J. Real-Time Image Process., vol. 2, no. 4, pp. 331\u2013342, 2007.", "citeRegEx": "5", "shortCiteRegEx": null, "year": 2007}, {"title": "Energy Aware Lossless Data Compression", "author": ["K. Barr", "K. Asanovic"], "venue": "Proc. of MobiSys, no. May, 2003.", "citeRegEx": "6", "shortCiteRegEx": null, "year": 2003}, {"title": "Energy-aware data compression for Multi-Level Cell (MLC) flash memory", "author": ["Y. Joo", "Y. Cho", "D. Shin", "N. Chang"], "venue": "Proc. ACM/IEEE Des. Autom. Conf., 2007, pp. 716\u2013719.", "citeRegEx": "7", "shortCiteRegEx": null, "year": 2007}, {"title": "Deep Residual Learning for Image Recognition", "author": ["K. He", "X. Zhang", "S. Ren", "J. Sun"], "venue": "arXiv:1512.03385, dec 2015.", "citeRegEx": "8", "shortCiteRegEx": null, "year": 2015}, {"title": "Faster R-CNN: Towards Real-Time Object Detection with Region Proposal Networks", "author": ["S. Ren", "K. He", "R. Girshick", "J. Sun"], "venue": "arXiv:1506.01497, 2015.", "citeRegEx": "9", "shortCiteRegEx": null, "year": 2015}, {"title": "Fully Convolutional Networks for Semantic Segmentation", "author": ["J. Long", "E. Shelhamer", "T. Darrell"], "venue": "Proc. IEEE Conf. Comput. Vis. Pattern Recognit., 2015. 3 http://iis.ee.ethz.ch/\u223clukasc/cascnn/", "citeRegEx": "10", "shortCiteRegEx": null, "year": 2015}, {"title": "Accelerating Real-Time Embedded Scene Labeling with Convolutional Networks", "author": ["L. Cavigelli", "M. Magno", "L. Benini"], "venue": "Proc. ACM/IEEE Des. Autom. Conf., 2015.", "citeRegEx": "11", "shortCiteRegEx": null, "year": 2015}, {"title": "Saliency detection by multicontext deep learning", "author": ["R. Zhao", "W. Ouyang", "H. Li", "X. Wang"], "venue": "Proc. IEEE Comput. Soc. Conf. Comput. Vis. Pattern Recognit., vol. 07-12-June, pp. 1265\u20131274, 2015.", "citeRegEx": "12", "shortCiteRegEx": null, "year": 2015}, {"title": "FlowNet: Learning Optical Flow with Convolutional Networks", "author": ["P. Fischer", "A. Dosovitskiy", "E. Ilg", "P. Haeusser", "C. Hazirbas", "V. Glokov", "P. Van der Smagt", "D. Cremers", "T. Brox"], "venue": "arXiv:15047.06852, 2015.", "citeRegEx": "13", "shortCiteRegEx": null, "year": 2015}, {"title": "Learning a deep convolutional network for image super-resolution", "author": ["C. Dong", "C.C. Loy", "K. He", "X. Tang"], "venue": "Proc. Eur. Conf. Comput. Vis., pp. 184\u2013199, 2014.", "citeRegEx": "14", "shortCiteRegEx": null, "year": 2014}, {"title": "Pointwise shape-adaptive DCT for high-quality denoising and deblocking of grayscale and color images", "author": ["A. Foi", "V. Katkovnik", "K. Egiazarian"], "venue": "IEEE Trans. Image Process., vol. 16, no. 5, pp. 1395\u20131411, 2007.", "citeRegEx": "15", "shortCiteRegEx": null, "year": 2007}, {"title": "Pointwise shape-adaptive DCT for high-quality deblocking of compressed color images", "author": ["\u2014\u2014"], "venue": "Eur. Signal Process. Conf., 2006.", "citeRegEx": "16", "shortCiteRegEx": null, "year": 2006}, {"title": "Image denoising by sparse 3D transformation-domain collaborative filtering", "author": ["K. Dabov", "A. Foi", "V. Katkovnik"], "venue": "IEEE Trans. Image Process., vol. 16, no. 8, pp. 1\u201316, 2007.", "citeRegEx": "17", "shortCiteRegEx": null, "year": 2007}, {"title": "Reducing artifacts in JPEG decompression via a learned dictionary", "author": ["H. Chang", "M.K. Ng", "T. Zeng"], "venue": "IEEE Trans. Signal Process., vol. 62, no. 3, pp. 718\u2013728, 2014.", "citeRegEx": "18", "shortCiteRegEx": null, "year": 2014}, {"title": "Loss-Specific Training of Non- Parametric Image Restoration Models: A New State of the Art", "author": ["J. Jancsary", "S. Nowozin", "C. Rother"], "venue": "pp. 112\u2013125, 2012.", "citeRegEx": "19", "shortCiteRegEx": null, "year": 2012}, {"title": "Data-driven sparsity-based restoration of JPEG-compressed images in dual transform-pixel domain", "author": ["X. Liu", "X. Wu", "J. Zhou", "D. Zhao"], "venue": "pp. 5171\u20135178, 2015.", "citeRegEx": "20", "shortCiteRegEx": null, "year": 2015}, {"title": "D3: Deep Dual- Domain Based Fast Restoration of JPEG-Compressed Images", "author": ["Z. Wang", "D. Liu", "S. Chang", "Q. Ling", "T.S. Huang"], "venue": "IEEE Conf. Comput. Vis. Pattern Recognit., 2016.", "citeRegEx": "21", "shortCiteRegEx": null, "year": 2016}, {"title": "Building Dual-Domain Representations for Compression Artifacts Reduction", "author": ["J. Guo", "H. Chao"], "venue": "ECCV, 2016, pp. 628\u2013644.", "citeRegEx": "22", "shortCiteRegEx": null, "year": 2016}, {"title": "Deeply-Recursive Convolutional Network for Image Super-Resolution", "author": ["J. Kim", "J.K. Lee", "K.M. Lee"], "venue": "arXiv:1511.04491, 2015.", "citeRegEx": "23", "shortCiteRegEx": null, "year": 2015}, {"title": "Compression Artifacts Reduction by a Deep Convolutional Network", "author": ["C. Dong", "Y. Deng", "C.C. Loy", "X. Tang"], "venue": "2015 IEEE Int. Conf. Comput. Vis. IEEE, dec 2015, pp. 576\u2013584.", "citeRegEx": "24", "shortCiteRegEx": null, "year": 2015}, {"title": "Compression Artifacts Removal Using Convolutional Neural Networks", "author": ["P. Svoboda", "M. Hradis", "D. Barina", "P. Zemcik"], "venue": "J. WSCG, vol. 24, no. 2, pp. 63\u201372, 2016.", "citeRegEx": "25", "shortCiteRegEx": null, "year": 2016}, {"title": "LIVE image quality assessment database release 2", "author": ["H.R. Sheikh", "Z. Wang", "L. Cormack", "A.C. Bovik"], "venue": "2005.", "citeRegEx": "26", "shortCiteRegEx": null, "year": 2005}, {"title": "Learning Deconvolution Network for Semantic Segmentation", "author": ["H. Noh", "S. Hong", "B. Han"], "venue": "arXiv:1505.04366, vol. 1, 2015.", "citeRegEx": "27", "shortCiteRegEx": null, "year": 2015}, {"title": "Delving Deep into Rectifiers: Surpassing Human-Level Performance on ImageNet Classification", "author": ["K. He", "X. Zhang", "S. Ren", "J. Sun"], "venue": "arXiv:1502.01852, 2015.", "citeRegEx": "28", "shortCiteRegEx": null, "year": 1852}, {"title": "Visualizing and Understanding Convolutional Networks", "author": ["M.D. Zeiler", "R. Fergus"], "venue": "ECCV 2014, LNCS 8689, nov 2014, pp. 818\u2013833.", "citeRegEx": "29", "shortCiteRegEx": null, "year": 2014}, {"title": "Image quality assessment: From error visibility to structural similarity", "author": ["Z. Wang", "A.C. Bovik", "H.R. Sheikh", "E.P. Simoncelli"], "venue": "IEEE Trans. Image Process., vol. 13, no. 4, pp. 600\u2013612, 2004.", "citeRegEx": "30", "shortCiteRegEx": null, "year": 2004}, {"title": "Image information and visual quality", "author": ["H. Sheikh", "A. Bovik"], "venue": "IEEE Trans. Image Process., vol. 15, no. 2, pp. 430\u2013444, 2006.", "citeRegEx": "31", "shortCiteRegEx": null, "year": 2006}, {"title": "Digital Images and Human Vision", "author": ["B. Girod"], "venue": "A. B. Watson, Ed. Cambridge, MA, USA: MIT Press, 1993, ch. What\u2019s wro, pp. 207\u2013220.", "citeRegEx": "32", "shortCiteRegEx": null, "year": 1993}, {"title": "Quality Assessment of Deblocked Images", "author": ["C. Yim", "A.C. Bovik"], "venue": "IEEE Trans. Image Process., vol. 20, no. 1, pp. 88\u201398, jan 2011.", "citeRegEx": "33", "shortCiteRegEx": null, "year": 2011}, {"title": "ImageNet: A large-scale hierarchical image database", "author": ["J. Deng", "W. Dong", "R. Socher", "L.-J. Li", "K. Li", "L. Fei-Fei"], "venue": "Proc. IEEE Conf. Comput. Vis. Pattern Recognit., 2009.", "citeRegEx": "35", "shortCiteRegEx": null, "year": 2009}, {"title": "Torch7: A Matlab-like Environment for Machine Learning", "author": ["R. Collobert"], "venue": "Adv. Neural Inf. Process. Syst. Work., 2011.", "citeRegEx": "36", "shortCiteRegEx": null, "year": 2011}, {"title": "cuDNN: Efficient Primitives for Deep Learning", "author": ["S. Chetlur", "C. Woolley", "P. Vandermersch", "J. Cohen", "J. Tran", "B. Catanzaro", "E. Shelhamer"], "venue": "arXiv:1410.0759, oct 2014.", "citeRegEx": "37", "shortCiteRegEx": null, "year": 2014}], "referenceMentions": [{"referenceID": 0, "context": "JPEG) [1].", "startOffset": 6, "endOffset": 9}, {"referenceID": 0, "context": "In practical uses, lossy compression schemes are often preferred on consumer devices for their much higher compression rate [1].", "startOffset": 124, "endOffset": 127}, {"referenceID": 1, "context": "These are not only unpleasant to see, but also have a negative impact on many low-level vision algorithms [2].", "startOffset": 106, "endOffset": 109}, {"referenceID": 2, "context": "Many compression algorithms rely on tiling the images into blocks, applying a sparsifying transform and re-quantization, followed by a generic loss-less data compression [3].", "startOffset": 170, "endOffset": 173}, {"referenceID": 3, "context": "JPEG has become the most widely accepted standard in lossy image compression [4], with many efficient software transcoders publicly available and specialized hardware accelerators deployed in many cameras.", "startOffset": 77, "endOffset": 80}, {"referenceID": 4, "context": "In such systems, the transmitting node is often battery-powered and thus heavily powerconstrained [5].", "startOffset": 98, "endOffset": 101}, {"referenceID": 2, "context": "Transmitting data is often the most expensive part in terms of energy, and strong compression can mitigate this by reducing the required transmit energy at the expense of introducing compression artifacts [3].", "startOffset": 205, "endOffset": 208}, {"referenceID": 5, "context": "Similar challenges are also seen in mobile devices storing data: size and cost constraints limit the amount of memory for data storage, and the energy available on such devices is depleted rapidly when writing to flash memory\u2014so much that it pays off to apply compression before writing to flash memory [6], [7].", "startOffset": 303, "endOffset": 306}, {"referenceID": 6, "context": "Similar challenges are also seen in mobile devices storing data: size and cost constraints limit the amount of memory for data storage, and the energy available on such devices is depleted rapidly when writing to flash memory\u2014so much that it pays off to apply compression before writing to flash memory [6], [7].", "startOffset": 308, "endOffset": 311}, {"referenceID": 2, "context": "On the processing site, these space and energy constraints are absent and much more computational power is available to decompress and possibly post-process the transmitted or stored images [3].", "startOffset": 190, "endOffset": 193}, {"referenceID": 7, "context": "Deep convolutional neural networks (ConvNets) have become an essential tool for computer vision, even exceeding human performance in tasks such as image classification [8], object detection [9], and semantic segmentation [10], [11].", "startOffset": 168, "endOffset": 171}, {"referenceID": 8, "context": "Deep convolutional neural networks (ConvNets) have become an essential tool for computer vision, even exceeding human performance in tasks such as image classification [8], object detection [9], and semantic segmentation [10], [11].", "startOffset": 190, "endOffset": 193}, {"referenceID": 9, "context": "Deep convolutional neural networks (ConvNets) have become an essential tool for computer vision, even exceeding human performance in tasks such as image classification [8], object detection [9], and semantic segmentation [10], [11].", "startOffset": 221, "endOffset": 225}, {"referenceID": 10, "context": "Deep convolutional neural networks (ConvNets) have become an essential tool for computer vision, even exceeding human performance in tasks such as image classification [8], object detection [9], and semantic segmentation [10], [11].", "startOffset": 227, "endOffset": 231}, {"referenceID": 11, "context": "In addition, they have also started to gain relevance for regression tasks in low-level image and video processing, computing saliency maps [12], optical flow fields [13] and single-image super-resolution images [14] with state-of-the-art performance.", "startOffset": 140, "endOffset": 144}, {"referenceID": 12, "context": "In addition, they have also started to gain relevance for regression tasks in low-level image and video processing, computing saliency maps [12], optical flow fields [13] and single-image super-resolution images [14] with state-of-the-art performance.", "startOffset": 166, "endOffset": 170}, {"referenceID": 13, "context": "In addition, they have also started to gain relevance for regression tasks in low-level image and video processing, computing saliency maps [12], optical flow fields [13] and single-image super-resolution images [14] with state-of-the-art performance.", "startOffset": 212, "endOffset": 216}, {"referenceID": 14, "context": "Various types of intelligent edgeaware denoising such as SA-DCT [15], [16], BM3D [17] have", "startOffset": 64, "endOffset": 68}, {"referenceID": 15, "context": "Various types of intelligent edgeaware denoising such as SA-DCT [15], [16], BM3D [17] have", "startOffset": 70, "endOffset": 74}, {"referenceID": 16, "context": "Various types of intelligent edgeaware denoising such as SA-DCT [15], [16], BM3D [17] have", "startOffset": 81, "endOffset": 85}, {"referenceID": 17, "context": "In recent years, dictionary-based sparse recovery algorithms such as DicTV [18], RTF [19], S-D2 [20], D [21], DDCN [22] have achieved outstanding results by directly addressing the deficiencies such as ringing and blocking very specific to JPEG.", "startOffset": 75, "endOffset": 79}, {"referenceID": 18, "context": "In recent years, dictionary-based sparse recovery algorithms such as DicTV [18], RTF [19], S-D2 [20], D [21], DDCN [22] have achieved outstanding results by directly addressing the deficiencies such as ringing and blocking very specific to JPEG.", "startOffset": 85, "endOffset": 89}, {"referenceID": 19, "context": "In recent years, dictionary-based sparse recovery algorithms such as DicTV [18], RTF [19], S-D2 [20], D [21], DDCN [22] have achieved outstanding results by directly addressing the deficiencies such as ringing and blocking very specific to JPEG.", "startOffset": 96, "endOffset": 100}, {"referenceID": 20, "context": "In recent years, dictionary-based sparse recovery algorithms such as DicTV [18], RTF [19], S-D2 [20], D [21], DDCN [22] have achieved outstanding results by directly addressing the deficiencies such as ringing and blocking very specific to JPEG.", "startOffset": 104, "endOffset": 108}, {"referenceID": 21, "context": "In recent years, dictionary-based sparse recovery algorithms such as DicTV [18], RTF [19], S-D2 [20], D [21], DDCN [22] have achieved outstanding results by directly addressing the deficiencies such as ringing and blocking very specific to JPEG.", "startOffset": 115, "endOffset": 119}, {"referenceID": 13, "context": "Several networks have shown to be very successful at this task, such as SRCNN [14] or DRCN [23].", "startOffset": 78, "endOffset": 82}, {"referenceID": 22, "context": "Several networks have shown to be very successful at this task, such as SRCNN [14] or DRCN [23].", "startOffset": 91, "endOffset": 95}, {"referenceID": 1, "context": "Recently, two important works have been published, which apply ConvNets for compression artifact suppression: ARCNN [2], [24] and the approach presented in [25].", "startOffset": 116, "endOffset": 119}, {"referenceID": 23, "context": "Recently, two important works have been published, which apply ConvNets for compression artifact suppression: ARCNN [2], [24] and the approach presented in [25].", "startOffset": 121, "endOffset": 125}, {"referenceID": 24, "context": "Recently, two important works have been published, which apply ConvNets for compression artifact suppression: ARCNN [2], [24] and the approach presented in [25].", "startOffset": 156, "endOffset": 160}, {"referenceID": 24, "context": "In [25] a residual structure extends the simple stacking of convolutional, non-linearity and pooling layers, such that the network is only trained to produce an increment compensating for the distortions.", "startOffset": 3, "endOffset": 7}, {"referenceID": 25, "context": "Testing of these networks was then performed on the LIVE1 dataset (29 images) [26] and, in case of AR-CNN, on the 5 test images of [15] and a self-collected dataset of 40 photographs from twitter as well.", "startOffset": 78, "endOffset": 82}, {"referenceID": 14, "context": "Testing of these networks was then performed on the LIVE1 dataset (29 images) [26] and, in case of AR-CNN, on the 5 test images of [15] and a self-collected dataset of 40 photographs from twitter as well.", "startOffset": 131, "endOffset": 135}, {"referenceID": 13, "context": "We start from the basic concept of training a deep ConvNet for a regression problem, as has been done for the related task of superresolution [14], [23] or other low-level computer vision operations such as optical flow estimation [13].", "startOffset": 142, "endOffset": 146}, {"referenceID": 22, "context": "We start from the basic concept of training a deep ConvNet for a regression problem, as has been done for the related task of superresolution [14], [23] or other low-level computer vision operations such as optical flow estimation [13].", "startOffset": 148, "endOffset": 152}, {"referenceID": 12, "context": "We start from the basic concept of training a deep ConvNet for a regression problem, as has been done for the related task of superresolution [14], [23] or other low-level computer vision operations such as optical flow estimation [13].", "startOffset": 231, "endOffset": 235}, {"referenceID": 24, "context": "The authors of [25] propose several new elements for artifact reduction ConvNets: A residual architecture, an edgeemphasized loss function, symmetric weight initialization, and skip connections.", "startOffset": 15, "endOffset": 19}, {"referenceID": 12, "context": "Taking inspiration from deep neural networks such as FlowNet [13] and FCN [10] developed for optical flow estimation and semantic segmentation respectively, we propose a neural network with hierarchical skip connections (cf.", "startOffset": 61, "endOffset": 65}, {"referenceID": 9, "context": "Taking inspiration from deep neural networks such as FlowNet [13] and FCN [10] developed for optical flow estimation and semantic segmentation respectively, we propose a neural network with hierarchical skip connections (cf.", "startOffset": 74, "endOffset": 78}, {"referenceID": 9, "context": "1We use the definition of full-convolution (also known as up-convolution, deconvolution, backwards convolution, or fractional-strided convolution) as described in [10], [27].", "startOffset": 163, "endOffset": 167}, {"referenceID": 26, "context": "1We use the definition of full-convolution (also known as up-convolution, deconvolution, backwards convolution, or fractional-strided convolution) as described in [10], [27].", "startOffset": 169, "endOffset": 173}, {"referenceID": 27, "context": "All these layers are followed by a Parametric Rectified Linear Unit (PReLU) [28] activation layer, where the slope for negative inputs is learned from data rather than pre-defined.", "startOffset": 76, "endOffset": 80}, {"referenceID": 27, "context": "These units have shown superior performance for ImageNet classification [28], reducing the issues of dead features [29].", "startOffset": 72, "endOffset": 76}, {"referenceID": 28, "context": "These units have shown superior performance for ImageNet classification [28], reducing the issues of dead features [29].", "startOffset": 115, "endOffset": 119}, {"referenceID": 24, "context": "We have found that learning a residual to the input image instead of the reconstructed image as suggested in previous work [25] did not improve the performance of the proposed ConvNet and thus do not include it in our network.", "startOffset": 123, "endOffset": 127}, {"referenceID": 23, "context": "Following [24], [25] with pixel values normalized to the", "startOffset": 10, "endOffset": 14}, {"referenceID": 24, "context": "Following [24], [25] with pixel values normalized to the", "startOffset": 16, "endOffset": 20}, {"referenceID": 0, "context": "range [0, 1], we use", "startOffset": 6, "endOffset": 12}, {"referenceID": 0, "context": "They are known to differ from perceived visual quality [1], [30]\u2013[32] but find wide-spread use due to their simplicity.", "startOffset": 55, "endOffset": 58}, {"referenceID": 29, "context": "They are known to differ from perceived visual quality [1], [30]\u2013[32] but find wide-spread use due to their simplicity.", "startOffset": 60, "endOffset": 64}, {"referenceID": 31, "context": "They are known to differ from perceived visual quality [1], [30]\u2013[32] but find wide-spread use due to their simplicity.", "startOffset": 65, "endOffset": 69}, {"referenceID": 29, "context": "A popular alternative is to use the structural similarity index (SSIM) [30], which is the mean of the product of three terms assessing similarity in luminance, contrast and structure over multiple localized windows.", "startOffset": 71, "endOffset": 75}, {"referenceID": 29, "context": "We use the Matlab implementation provided with [30] for evaluation and use the same parameters as related work [2], [24], [25]: K1 = 0.", "startOffset": 47, "endOffset": 51}, {"referenceID": 1, "context": "We use the Matlab implementation provided with [30] for evaluation and use the same parameters as related work [2], [24], [25]: K1 = 0.", "startOffset": 111, "endOffset": 114}, {"referenceID": 23, "context": "We use the Matlab implementation provided with [30] for evaluation and use the same parameters as related work [2], [24], [25]: K1 = 0.", "startOffset": 116, "endOffset": 120}, {"referenceID": 24, "context": "We use the Matlab implementation provided with [30] for evaluation and use the same parameters as related work [2], [24], [25]: K1 = 0.", "startOffset": 122, "endOffset": 126}, {"referenceID": 32, "context": "A third measure used in related work is the PSNR-B [33], which adds a (non-referenced) blocking effect factor (BEF) term to the MSE measure.", "startOffset": 51, "endOffset": 55}, {"referenceID": 24, "context": "In previous work, including an edge-emphasized term into the loss function has been proposed [25].", "startOffset": 93, "endOffset": 97}, {"referenceID": 1, "context": "Previous networks for compression artifact reduction were trained on the 400 train and test images of the BSDS500 dataset and tested on the 100 remaining validation images [2], [24], [25].", "startOffset": 172, "endOffset": 175}, {"referenceID": 23, "context": "Previous networks for compression artifact reduction were trained on the 400 train and test images of the BSDS500 dataset and tested on the 100 remaining validation images [2], [24], [25].", "startOffset": 177, "endOffset": 181}, {"referenceID": 24, "context": "Previous networks for compression artifact reduction were trained on the 400 train and test images of the BSDS500 dataset and tested on the 100 remaining validation images [2], [24], [25].", "startOffset": 183, "endOffset": 187}, {"referenceID": 24, "context": "The authors of [25] show that this is the limiting", "startOffset": 15, "endOffset": 19}, {"referenceID": 33, "context": "We thus use the large, widely-known and publicly available ImageNet 2013 detection dataset [35], which consists of 396k", "startOffset": 91, "endOffset": 95}, {"referenceID": 34, "context": "We use the Torch framework [36] with cuDNN v5.", "startOffset": 27, "endOffset": 31}, {"referenceID": 35, "context": "3 [37] for our evaluations.", "startOffset": 2, "endOffset": 6}, {"referenceID": 23, "context": "We use the same JPEG compressor as in AR-CNN [24] and Svoboda et al.", "startOffset": 45, "endOffset": 49}, {"referenceID": 24, "context": "[25] (i.", "startOffset": 0, "endOffset": 4}, {"referenceID": 14, "context": "791 SA-DCT [15] 28.", "startOffset": 11, "endOffset": 15}, {"referenceID": 1, "context": "809 AR-CNN [2] 29.", "startOffset": 11, "endOffset": 14}, {"referenceID": 24, "context": "823 L4 [25] 29.", "startOffset": 7, "endOffset": 11}, {"referenceID": 14, "context": "868 SA-DCT [15] 30.", "startOffset": 11, "endOffset": 15}, {"referenceID": 1, "context": "878 AR-CNN [2] 31.", "startOffset": 11, "endOffset": 14}, {"referenceID": 24, "context": "890 L4 [25] 31.", "startOffset": 7, "endOffset": 11}, {"referenceID": 24, "context": "890 L8 [25] 31.", "startOffset": 7, "endOffset": 11}, {"referenceID": 14, "context": "917 SA-DCT [15] 32.", "startOffset": 11, "endOffset": 15}, {"referenceID": 1, "context": "924 AR-CNN [2] 33.", "startOffset": 11, "endOffset": 14}, {"referenceID": 24, "context": "931 L4 [25] 33.", "startOffset": 7, "endOffset": 11}, {"referenceID": 24, "context": "19 dB over the L8 network [25], 0.", "startOffset": 26, "endOffset": 30}, {"referenceID": 24, "context": "The lighthouse3 image serves as a basis for this comparison and is the same one used in [25].", "startOffset": 88, "endOffset": 92}], "year": 2016, "abstractText": "Lossy image compression algorithms are pervasively used to reduce the size of images transmitted over the web and recorded on data storage media. However, we pay for their high compression rate with visual artifacts degrading the user experience. Deep convolutional neural networks have become a widespread tool to address high-level computer vision tasks very successfully. Recently, they have found their way into the areas of low-level computer vision and image processing to solve regression problems mostly with relatively shallow networks. We present a novel 12-layer deep convolutional network for image compression artifact suppression with hierarchical skip connections and a multi-scale loss function. We achieve a boost of up to 1.79 dB in PSNR over ordinary JPEG and an improvement of up to 0.36 dB over the best previous ConvNet result. We show that a network trained for a specific quality factor (QF) is resilient to the QF used to compress the input image\u2014a single network trained for QF 60 provides a PSNR gain of more than 1.5 dB over the wide QF range from 40 to 76.", "creator": "LaTeX with hyperref package"}}}