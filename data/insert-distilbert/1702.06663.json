{"id": "1702.06663", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "22-Feb-2017", "title": "Guided Deep List: Automating the Generation of Epidemiological Line Lists from Open Sources", "abstract": "real - time monitoring and responses to emerging public health threats rely on the availability of timely surveillance data. during the early stages of an epidemic, the ready availability of line lists with relatively detailed tabular information about laboratory - confirmed cases collected can assist epidemiologists in making reliable inferences and forecasts. such inferences are crucial sufficient to understand the epidemiology of a genetically specific disease early enough to stop or control the outbreak. however, construction of such line lists requires considerable human physiological supervision and therefore, difficult to generate in real - time. in this paper, we motivate guided deep list, the first tool for building automated line lists ( in near real - time ) from open source reports of emerging disease outbreaks. specifically, we focus on deriving epidemiological characteristics of an emerging disease and the affected population from reports of illness. guided deep list uses distributed vector representations ( ala word2vec ) to discover a set of geographic indicators for each line list feature. this discovery of indicators is followed often by the use of dependency parsing based techniques for final extraction in prescribed tabular form. we evaluate the diagnostic performance of guided deep list against a human annotated line list provided by healthmap corresponding to mers outbreaks in saudi arabia. we demonstrate that guided deep list extracts line list features with increased accuracy compared to a baseline method. we further show how these automatically extracted line list features can be used for making epidemiological inferences, such as both inferring demographics and symptoms - to - hospitalization period of affected individuals.", "histories": [["v1", "Wed, 22 Feb 2017 03:14:36 GMT  (348kb,D)", "http://arxiv.org/abs/1702.06663v1", "This paper has been submitted to a conference"]], "COMMENTS": "This paper has been submitted to a conference", "reviews": [], "SUBJECTS": "cs.CL cs.IR", "authors": ["saurav ghosh", "prithwish chakraborty", "bryan l lewis", "maimuna s majumder", "emily cohn", "john s brownstein", "madhav v marathe", "naren ramakrishnan"], "accepted": false, "id": "1702.06663"}, "pdf": {"name": "1702.06663.pdf", "metadata": {"source": "CRF", "title": "Guided Deep List: Automating the Generation of Epidemiological Line Lists from Open Sources", "authors": ["Saurav Ghosh", "Prithwish Chakraborty", "Bryan L. Lewis", "Maimuna S. Majumder", "Emily Cohn", "John S. Brownstein", "Madhav V. Marathe", "Naren Ramakrishnan"], "emails": ["*sauravcsvt@vt.edu"], "sections": [{"heading": null, "text": "Real-time monitoring and responses to emerging public health threats rely on the availability of timely surveillance data. During the early stages of an epidemic, the ready availability of line lists with detailed tabular information about laboratory-confirmed cases can assist epidemiologists in making reliable inferences and forecasts. Such inferences are crucial to understand the epidemiology of a specific disease early enough to stop or control the outbreak. However, construction of such line lists requires considerable human supervision and therefore, difficult to generate in real-time. In this paper, we motivate Guided Deep List, the first tool for building automated line lists (in near real-time) from open source reports of emerging disease outbreaks. Specifically, we focus on deriving epidemiological characteristics of an emerging disease and the affected population from reports of illness. Guided Deep List uses distributed vector representations (ala word2vec) to discover a set of indicators for each line list feature. This discovery of indicators is followed by the use of dependency parsing based techniques for final extraction in tabular form. We evaluate the performance of Guided Deep List against a human annotated line list provided by HealthMap corresponding to MERS outbreaks in Saudi Arabia. We demonstrate that Guided Deep List extracts line list features with increased accuracy compared to a baseline method. We further show how these automatically extracted line list features can be used for making epidemiological inferences, such as inferring demographics and symptoms-to-hospitalization period of affected individuals."}, {"heading": "1 Introduction", "text": "An epidemiological line list1, 2 is a listing of individuals suffering from a disease that describes both their demographic details as well as the timing of clinically and epidemiologically significant events during the course of disease. These are typically used during outbreak investigations of emerging diseases to identify key features, such as incubation period, symptoms, associated risk factors, and outcomes. The ultimate goal is to understand the disease well enough to stop or control the outbreak. Ready availability of line lists can also be useful in contact tracing as well as risk identification of spread such as the spread of Middle Eastern Respiratory Syndrome (MERS) in Saudi Arabia or Ebola in West Africa.\nFormats of line lists are generally dependent on the kind of disease being investigated. However, some interesting features that are common for most formats include demographic information about cases. Demographic information can include age, gender, and location of infection. Depending on the disease being investigated, one can consider other addendums to this list, such as disease onset features (onset date, hospitalization date and outcome date) and clinical features (comorbidities, secondary contact, animal contact).\nTraditionally, line lists have been curated manually and have rarely been available to epidemiologists in near-real time. Our primary objective is to automatically generate line lists of emerging diseases from open source reports such as WHO bulletins3 and make such lists readily available to epidemiologists. Previous work1, 2 has shown the utility in creating such lists through labor intensive human curation. We now seek to automate much of this effort. To the best of our knowledge, our work is the first to automate the creation of line lists.\nThe availability of massive textual public health data coincides with recent developments in text modeling, including distributed vector representations such as word2vec4, 5 and doc2vec.6 These neural network based language models when trained over a representative corpus convert words to dense low-dimensional vector representations, most popularly known as word embeddings. These word embeddings have been widely used with considerable accuracy to capture linguistic patterns and regularities, such as vec(Paris) - vec(France) \u2248 vec(Madrid) - vec(Spain).7, 8 A second development relevant for line list\n1\nar X\niv :1\n70 2.\n06 66\n3v 1\n[ cs\n.C L\n] 2\n2 Fe\nb 20\ngeneration pertains to semantic dependency parsing, which has emerged as an effective tool for information extraction, e.g., in an open information extraction context,9 Negation Detection,10\u201312 relation extraction13, 14 and event detection.15 Given an input sentence, dependency parsing is typically used to extract its semantic tree representations where words are linked by directed edges called dependencies.\nBuilding upon these techniques, we formulate Guided Deep List, a novel framework for automatic extraction of line list from WHO bulletins.3 Guided Deep List is guided in the sense that the user provides a seed indicator (or, keyword) for each line list feature to guide the extraction process. Guided Deep List uses neural word embeddings to expand the seed indicator and generate a set of indicators for each line list feature. The set of indicators is subsequently provided as input to dependency parsing based shortest distance and negation detection approaches for extracting line list features. As can be seen in Figure 1, Guided Deep List takes a WHO bulletin as input and outputs epidemiological line list in tabular format where each row represents a line list case and each column depicts the features corresponding to each case. The extracted line list provides valuable information to model the epidemic and understand the segments of population who would be affected.\nOur main contributions are as follows. \u2022 Automated: Guided Deep List is fully automatic, requiring no human intervention. \u2022 Novelty: To the best of our knowledge, there has been no prior systematic efforts at tabulating such information automatically from publicly available health bulletins. \u2022 Real-time: Guided Deep List can be deployed for extracting line list in a (near) real-time setting. \u2022 Evaluation: We present a detailed and prospective analysis of Guided Deep List by evaluating the automatically inferred line list against a human curated line list for MERS outbreaks in Saudi Arabia. We also compare Guided Deep List against a baseline method. \u2022 Epidemiological inferences: Finally, we also demonstrate some of the utilities of real-time automated line listing, such as inferring the demographic distribution and symptoms-to-hospitalization period."}, {"heading": "2 Problem Overview", "text": "In this manuscript, we intend to focus on Middle Eastern Respiratory Syndrome (MERS) outbreaks in Saudi Arabia2 (2012- ongoing) as our case study. MERS was a relatively less understood disease when these outbreaks began. Therefore, MERS was poised as an emerging outbreak leading to good bulletin coverage about the infectious cases individually. This makes these disease outbreaks ideally suited to our goals. MERS is infectious as well and animal contact has been posited as one of the transmission mechanisms of the disease. For each line list case, we seek to extract automatically three types of epidemiological\n2/16\nfeatures as follows. (a) Demographics: Age and Gender, (b) Disease onset: onset date, hospitalization date and outcome date and (c) Clinical features: animal contact, secondary contact, comorbidities and specified healthcare worker (abbreviated as HCW).\nIn Figure 2, we show all the internal components comprising the framework of Guided Deep List. Guided Deep List takes multiple WHO MERS bulletins as input. The textual content of each bulletin is pre-processed by sentence splitting, tokenization, lemmatization, POS tagging, and date phrase detection using spaCy16 and BASIS Technologies\u2019 Rosette Language Processing (RLP) tools.17 The pre-processing step is followed by three levels of modeling as follows. (a) Level 0 Modeling for extracting demographic information of cases, such as age and gender. In this level, we also identify the key sentences related to each line list case, (b) level 1 Modeling for extracting disease onset information and (c) level 2 Modeling for extracting clinical features. This is the final level of modeling in Guided Deep List framework. Features extracted at this level are associated with two labels: Y or N. Therefore, modeling at this level combines neural word embeddings with dependency parsing-based negation detection approaches to classify the clinical features into Y or N. In the subsequent section, we will discuss each internal component of Guided Deep List in detail."}, {"heading": "3 Guided Deep List", "text": "Given multiple WHO MERS bulletins as input, Guided Deep List proceeds through three levels of modeling for extracting line list features. We describe each level in turn."}, {"heading": "3.1 Level O Modeling", "text": "In level 0 modeling, we extract the age and gender for each line list case. These two features are mentioned in a reasonably structured way and therefore, can be extracted using a combination of regular expressions as shown in Algorithm 1. One of the primary challenges in extracting line list cases is the fact that a single WHO MERS bulletin can contain information about multiple cases. Therefore, there is a need to distinguish between cases mentioned in the bulletin. In level 0 modeling, we make use of the age and gender extraction to also identify sentences associated with each case. Since age and gender are the fundamental information to be recorded for a line list case, we postulate that the sentence mentioning the age and gender will be the starting sentence describing a line list case (see the textual block in Figure 1). Therefore, the number of cases mentioned in the bulletin will be equivalent to the number of sentences mentioning age and gender information. We further postulate that information related to the other features (disease onset or critical) will be present either in the starting sentence or the sentences subsequent to the starting one not mentioning any age and gender related information ((see the textual block in Figure 1)). For more details on level 0 modeling, please see Algorithm 1. In Algorithm 1, N represents the number of line list cases mentioned in the bulletin and S C n represents the set of sentences mentioning the nth case."}, {"heading": "3.2 WHO Template Learning", "text": "Before presenting the details of level 1 modeling and level 2 modeling, we will briefly discuss the WHO template learning process which provides word embeddings as input to both these levels of modeling (see Figure 2). In the template learning process, our main objective is to identify words which tend to share similar contexts or appear in the contexts of each other specific to the WHO bulletins (contexts of a word refer to the words surrounding it in a specified window size). For instance, consider the sentences S1 =The patient had no contact with animals and S2 =The patient was supposed to have no contact with camels. The terms animals and camels appear in similar contexts in both S1 and S2. Both the terms animals and camels are indicative of information pertaining to patient\u2019s exposure to animals or animal products.\nSimilarly, consider the sentences S3 =The patient had an onset of symptoms on 23rd January 2016 and S4 =The patient developed symptoms on 23rd January 2016. The terms onset and symptoms are indicators for the onset date feature and both of them appear in similar contexts or contexts of each other in S3 and S4.\nFor the template learning process, neural network inspired word2vec models are ideally suited to our goals because these models work on the hypothesis that words sharing similar contexts or tending to appear in the contexts of each other have similar embeddings. In recent years, word2vec models based on the skip-gram architectures4, 5 have emerged as the most popular word embedding models for information extraction tasks.18\u201320 We used two variants of skip-gram models: (a) the skip-gram model trained using the negative sampling technique (SGNS5) and (b) the skip-gram model trained using hierarchical sampling (SGHS5) to generate embeddings for each term in the WHO vocabulary W . W refers to the list of all unique terms extracted from the entire corpus of WHO Disease Outbreak News (DONs) corresponding to all diseases downloaded from http://www.who.int/csr/don/archive/disease/en/. The embeddings for each term in W were provided as input to level 1 modeling and level 2 modeling as shown in Figure 2.\n3/16\nAlgorithm 1: Level 0 modeling Input :set of sentences in the input WHO MERS bulletin Output :Age and Gender for each line list case, index of the starting sentence for each case 1 n = 0; 2 S C n = Null; 3 R1 = \\s+(?P<age>\\d{1,2})(.{0,20})(\\s+|-)(?P<gender>woman|man|male|female|boy|girl|housewife); 4 R2 = \\s+(?P<age>\\d{1,2})\\s*years?(\\s|-)old; 5 R3 = \\s*(?P<gender>woman|man|male|female|boy|girl|housewife|he|she); 6 for each sentence in the bulletin do 7 is-starting\u2192 0; 8 if R1.match(sentence) then 9 Age = int(R1.groupdict()[\u2019age\u2019]);\n10 Gender = R1.groupdict()[\u2019gender\u2019]; 11 is-starting\u2192 1; 12 else 13 if R2.match(sentence) then 14 Age = int(R3.groupdict()[\u2019age\u2019]);\n15 else 16 Age = Null;\n17 if R3.match(sentence) then 18 Gender = int(R3.groupdict()[\u2019gender\u2019]);\n19 else 20 Gender = Null;\n21 if Age 6= Null && Gender 6= Null then 22 is-starting\u2192 1;\n23 if is-starting then 24 n += 1; 25 S C n = index of the sentence;\n26 N = n;\n4/16"}, {"heading": "3.3 Level 1 Modeling", "text": "The level 1 modeling is responsible for extracting the disease onset features, such as symptom onset date, hospitalization date and outcome date for each linelist case, say the nth case. For extracting a given disease onset feature, the level 1 modeling takes three inputs: (a) seed indicator for the feature, (b) the word embeddings generated using SGNS or SGHS for each term in the WHO vocabulary W and (c) S C n representing the set of sentences describing the nth case for which we are extracting the feature.\nGrowth of seed indicator In the first phase of level 1 modeling, we discover the top-K similar (or, closest) indicators in the embedding space to the seed indicator for each feature. The similarity metric used is the standard cosine similarity metric. Therefore, we expand the seed indicator to create a set of K +1 indicators for each feature. In Table 1 we show the indicators discovered by SGNS for each disease onset feature given the seed indicators as input.\n5/16\nTable 1. Seed indicator and the discovered indicators using word embeddings generated by SGNS\nFeatures Seed indicator Discovered indicators\nOnset date onset symptoms, symptom, prior,\ndays, dates\nHospitalization date hospitalized admitted, screened, hospitalised,\npassed, discharged\nOutcome date died recovered, passed, became,\nill, hospitalized\nFigure 3. Undirected dependency graph corresponding to S5. The red-colored edges depict those edges included in the shortest paths between the date phrases (4-June, 12-June) and the indicators (symptoms, admitted)\nShortest Dependency Distance In the second phase, we use these K + 1 indicators to extract the disease onset features. For each indicator It\u2200t \u2208 1,2, . . . ,K +1, we identify the sentences mentioning It by iterating over each sentence in S C n. Then, for each sentence mentioning It , we discover the shortest path along the undirected dependency graph between It and the date phrases mentioned in the sentence. Subsequently, we calculate the length of the shortest path as the number of edges encountered while traversing along the shortest path. The length of the shortest path is referred to as the dependency distance. E.g., consider the sentence S5 = He developed symptoms on 4-June and was admitted to a hospital on 12-June. The sentence S5 containes the date phrases 4-June and 12-June. S5 also contains the indicator symptoms for onset date and admitted for hospitalization date (see Tables 1). In Figure 3, we show the undirected dependency graph for S5. We observe that the dependency distance from symptoms to 4-June is 3 (symptoms\u2192 developed\u2192 on\u2192 4-June) and 12-June is 4 (symptoms \u2192 developed\u2192 admitted\u2192 on\u2192 12-June). Similarly, the dependency distance from admitted to 4-June is 3 (admitted\u2192 developed\u2192 on\u2192 4-June) and 12-June is 2 (admitted\u2192 on\u2192 4-June). Therefore, for each indicator we extract a set of date phrases and the dependency distance corresponding to each date phrase. The output value of the indicator is set to be the date phrase located at the shortest dependency distance. E.g., in S5, the output values of symptoms and admitted will be 4-June and 12-June respectively. The final output for each disease feature is obtained by performing majority voting on the outputs of the indicators. For more algorithmic details, please see Algorithm 2."}, {"heading": "3.4 Level 2 Modeling", "text": "The level 2 modeling is responsible for extracting the clinical features for each line list case. Extraction of clinical features is a binary classification problem where we have to classify each feature into two classes - Y or N. The first phase of level 2 modeling is similar to level 1 modeling. Seed indicator for each clinical feature is provided as input to the level 2 modeling and\n6/16\nAlgorithm 2: Level 1 modeling Input :seed indicator, word embeddings for each term in W , S C n Output :date phrase 1 Growth of seed indicator using word embeddings to generate K +1 indicators represented as It\u2200t \u2208 1,2, . . . ,K +1; 2 for each It do 3 dependency-dist = dict(); empty dictionary 4 for each sentence in S C n do 5 check the mention of It ; 6 if It found then 7 Identify the date phrases mentioned in the sentence; 8 if at least one date phrase is found then 9 construct the undirected dependency graph for the sentence (see Figure 3);\n10 for each date phrase in the sentence do 11 dependency-dist[date phrase] = dependency distance (see section 3.3);\n12 else 13 continue;\n14 else 15 continue;\n16 Output of It = date phrase in dependency-dist having the shortest dependency distance;\n17 final output = majority voting on the outputs of each It ;\nwe extract the K +1 indicators for each such feature by discovering the top-K most similar indicators to the seed indicator (in terms of cosine similarities) using the word embeddings generated during the WHO template learning process.\nDependency based negation detection In the second phase, we make use of the K+1 indicators extracted in the first phase and a static lexicon of negation cues,21 such as no, not, without, unable, never, etc. to detect negation for a clinical feature. If no negation is detected, we classify the feature as Y, otherwise N. For each indicator It\u2200t \u2208 1,2, . . . ,K +1, we identify the first sentence (referred to as SIt ) mentioning It by iterating over the sentences in S C n. Once SIt is identified, we perform two types of negation detection on the directed dependency graph DIt constructed for SIt . Direct Negation Detection: In this negation detection, we search for a negation cue among the neighbors of It in DIt . If a negation cue is found, then the output of It is classified as N. Indirect Negation Detection. Absence of a negation cue in the neighborhood of It drives us to perform indirect negation detection. In this detection, we locate those terms in DIt for which DIt has a directed path from each of these terms as source to It as target. We refer to these terms as the predecessors of It in DIt . Then, we search for negation cues in the neighborhood of each predecessor. If we find a negation cue around a predecessor, we assume that the indicator It is also affected by this negation and we classify the output of It as N. For example, consider the sentence S6 =The patient had no comorbidities and had no contact with animals. and the directed dependency graph corresponding to S6 is shown in Figure 4. Sentence S6 contains the seed indicators comorbidities for comorbidities and animals for animal contact. In Figure 4, we observe direct negation detection for comorbidities as the negation cue no is located in the neighborhood of the indicator comorbidities. However, for animal contact, we observe indirect negation detection as the negation cue no is situated in the neighborhood of the term contact which is one of the predecessors of the indicator animals.\nTherefore, for a clinical feature we have K +1 indicators and the classification output Y or N from each indicator. The final output for a feature is obtained via majority voting on the outputs of the indicators."}, {"heading": "4 Experimental Evaluation", "text": "In this section, we first provide a brief description of our experimental setup, including the models for automatic extraction of line lists, human annotated line lists, accuracy metric and parameter settings."}, {"heading": "4.1 WHO corpus", "text": "The WHO corpus used in the template learning process (see Figure 2) was downloaded from http://www.who.int/csr/ don/archive/disease/en/. The corpus contains outbreak news articles related to a wide range of diseases reported\n7/16\npatient\nhad\ncomorbidities\nno Direct Negation\nand\nno\ncontact\nwith\nanimals Indirect\nNegation\nhad\nThe\nduring the time period 1996 to 2016. The textual content of each article was pre-processed by sentence splitting, tokenization and lemmatization using spaCy.16 After pre-processing, the WHO corpus was found to contain 35,485 sentences resulting in a vocabulary W of 4447 words."}, {"heading": "4.2 Models", "text": "We evaluated the following automated line listing models. \u2022 Guided Deep List (SGNS): Variant of Guided Deep List with SGNS used as the word2vec model in the WHO template learning process. \u2022 Guided Deep List (SGHS): Variant of Guided Deep List with SGHS used as the word2vec model in the WHO template learning process. Guidedlist: Baseline model which does not use any word embedding model (absence of WHO template learning) to expand the seed indicator in order to generate K +1 indicators for each feature. Therefore, Guidedlist uses only a single indicator (seed indicator) to extract line list features."}, {"heading": "4.3 Human annotated line list", "text": "We evaluated the line list extracted by the automated line listing models against a human annotated line list for MERS outbreaks in Saudi Arabia. To create the human annotated list, patient and outcome data for confirmed MERS cases were collected from the MERS Disease Outbreak News (DONs) reports of WHO3 and curated into a machine-readable tabular line list. In the human annotated list, total number of confirmed cases were 241 curated from 64 WHO bulletins reported during the period October 2012 to February 2015. Some of these 241 cases have missing (null) features (see Figure 1). In Figure 5, we show the distribution of non-null features in the human annotated list. We observe that majority of human annotated cases have at least 6 (out of 9) non-null features with the peak of the distribution at 8.\n9/16"}, {"heading": "4.4 Accuracy metric", "text": "Matching automated line list to human annotated list. For evaluation, the problem is: we are given a set of automated line list cases and a set of human annotated cases for a single WHO MERS bulletin. Our strategy is to costruct a bipartite graph17 where (i) an edge exists if the automated case and the human annotated case is extracted from the same WHO bulletin and (ii) the weight on the edge denotes the quality score (QS). Quality score (QS) is defined as the number of correctly extracted features in the automated case divided by the number of non-null features in the human annotated case. We then construct a maximum weighted bipartite matching.17 Such matchings are conducted for each WHO bulletin to extract a set of matches where each match represents a pair (automated case, human annotated case) and is also associated with a QS. Once the matches are found for all the WHO bulletins, we computed the average QS by averaging the QS values across the matches.\nOnce the average QS and QS for each match are computed, we also computed the accuracy for each line list feature. For the demographic and disease onset features, we computed the accuracy classification score using scikit-learn22 by comparing the automated features against the human annotated features across the matches. The clinical features are associated with two classes - Y and N (see Figure 1). For each class, we computed the F1-score using scikit-learn22 where F1-score can be interpreted as a harmonic mean of the precision and recall. F1-score reaches its best value at 1 and worst score at 0. Along with the F1-score for each class, we also report the average F1-score across the two classes."}, {"heading": "4.5 Parameter settings", "text": "Each variant of Guided Deep List inherits the parameters of the word embedding models as shown in Table 5. Apart from the word embedding parameters, Guided Deep List also inherits the parameter K which refers to the K +1 indicators for disease onset or clinical features (see Section 3). In Table 5, we provide the list of all parameters, the explored values for each parameter and the applicable models corresponding to each parameter. We selected the optimal parameter configuration for each model based on the maximum average QS value as well as maximum average of the individual feature accuracies across the matches."}, {"heading": "5 Results", "text": "In this section we try to ascertain the efficacy and applicability of Guided Deep List by investigating some of the pertinent questions related to the problem of automated line listing.\nMultiple indicators vs single indicator - which is the better method for automated line listing? As mentioned in section 4, Guided Deep List (SGNS) and Guided Deep List (SGHS) uses multiple indicators discovered by word2vec, whereas the baseline Guidedlist uses only the seed indicator to infer line list features. We executed our automated line listing models taking as input the same set of 64 WHO MERS bulletins from which 241 human annotated line list cases were extracted. In Table 2, we observe that the number of automated line list cases (198) and the matches (182) after maximum bipartite matching is same for all the models. This is due to the reason that level 0 modeling (age and gender extraction) is the common modeling component in all the models and the number of extracted line list cases depends on the age and gender extraction (see section 3). In Table 2, we also compared the average QS achieved by each model. We observe that Guided Deep List (SGNS) is the best performing model achieving an average QS of 0.74 over Guided Deep List (SGHS) (0.71) and Guidedlist (0.67). To further validate the results in Table 2, we also show the QS distribution for each model in Figure 6 where x-axis represents the QS values and the y-axis represents the number of automated line list cases having a particular QS value. For Guidedlist, the peak of QS distribution is at 0.62. However, for Guided Deep List (SGNS) and Guided Deep List (SGHS), the peak of the distribution is at 0.75. We further observe that Guided Deep List (SGNS) extracts higher number of line list cases with a perfect QS of 1 in comparison to Guidedlist.\nWe also compared the models on the basis of individual accuracies of the line list features across the matches in Tables 3 and 4. In Table 3, all the models achieve similar performance for the demographic features since level 0 modeling is similar for all the models (see section 3). However, for the disease onset features, both Guided Deep List (SGNS) and Guided Deep List (SGHS) outperform the baseline achieving an average accuracy of 0.45 and 0.43 in comparison to Guidedlist (0.12) respectively. Guided Deep List (SGNS) is the best performing model for onset date. However, for hospitalization date and outcome date, Guided Deep List (SGHS) is the better performing model than Guided Deep List (SGNS). In Table 4, for the clinical features, we observe that Guided Deep List (SGNS) performs better than Guided Deep List (SGHS) and Guidedlist for comorbidities and specified HCW on the basis of average F1-score. Specifically, for specified HCW, Guided Deep List (SGNS) outperforms Guided Deep List (SGHS) and Guidedlist for the minority class Y. For animal contact, Guided Deep List (SGHS) emerges out to be the best performing model in terms of average F1-score, specifically outperforming the competing models for the minority class Y. Guidedlist only performs better for secondary contact, even though the performance for the minority class Y is almost similar to Guided Deep List (SGHS) and Guided Deep List (SGNS). Overall, we can conclude from Table 4 that Guided Deep List employing multiple indicators discovered via SGNS or SGHS shows superior performance than Guidedlist in majority of the scenarios, specifically for the minority class of each clinical feature.\n10/16\nTo further validate the results in Table 4, the confusion matrix for each model and each clinical feature can be found in https://github.com/sauravcsvt/KDD_linelisting.\nWhat are beneficial parameter settings for automated line listing? To identify which parameter settings are beneficial for automated line listing, we looked at the best parameter configuration (see Table 5) of Guided Deep List (SGNS) and Guided Deep List (SGHS) which achieved the accuracy values in Tables 2, 3 and 4. In Table 5, we explored the standard settings of each word2vec parameter (dimensionality of word embeddings, window size, negative samples and training iterations) in accordance with previous research.18 Regarding dimensionality of word embeddings, Guided Deep List (SGHS) prefers 600 dimensions, whereas Guided Deep List (SGNS) prefers 300 dimensions. For the window size, both the models seem to benefit from smaller-sized (5) context windows. The number of negative samples is applicable only for Guided Deep List (SGNS) where it seems to prefer a single negative sample. Finally, for the training iterations, both the models benefit from more than 1 training iteration. This is expected as the WHO corpus used in the template learning process (see section 4) is a smaller-sized corpus with a vocabulary of only W = 4447 words. In such scenarios, word2vec models (SGNS or SGHS) generate improved embeddings with higher number of training iterations. Finally, both the\n11/16\nmodels are also associated with the parameter K which refers to the number of indicators K +1 used for extracting the disease onset and clinical features. As expected, the models prefer at least 5 indicators, along with the seed indicator to be used for automated line listing. Using higher number of indicators increases the chance of discovering an informative indicator for a line list feature.\nWhich indicator keywords discovered using word2vec contribute to the improved performance of Guided Deep List?\nNext, we investigate the informative indicators discovered using word2vec which contribute to the improved performance of\n12/16\nGuided Deep List (SGNS) or Guided Deep List (SGHS) in Tables 3 and 4. In Figure 7, we show the accuracies (or, average F1-score) of individual indicators (including the seed indicator) corresponding to the best performing model for a particular line list feature. Regarding onset date (see Figure 7a), Guided Deep List (SGNS) is the best performing model and the seed indicator provided as input is onset. We observe that symptoms is the most informative indicator achieving an accuracy of 0.36 similar to the overall accuracy (see Table 3). Rest of the indicators (including the seed indicator) achieve negligible accuracies and therefore, do not contribute to the overall performance of Guided Deep List (SGNS). Similary, for hospitalization date with the seed keyword hospitalization provided as input, admitted emerges out to be most informative indicator followed by the seed indicator, hospitalised and treated (see Figure 7b). Finally, for the outcome date, died (seed indicator) and passed are the two most informative indicators as observed in Figure 7c.\nRegarding the clinical features, we show the average F1-score of individual indicators. For animal contact, the seed indicator provided as input is animals. We observe in Figure 7d that the most informative indicator for animal contact is camels followed by indicators such as animals (seed), sheep and direct. This shows that contact with camels is the major transmission mechanism for MERS disease. The informative indicators found for comorbidities are patient, comorbidities and history. Finally, regarding specified HCW, the informative indicators discovered are healthcare (seed), tracing and intensive.\nDoes indirect negation detection play an useful role in extracting clinical features? In level 2 modeling for extracting clinical features, both direct and indirect negation detection are used. For more details, please see section 3. To identify if indirect negation detection contributes positively, we compared the performance of Guided Deep List with and without indirect negation detection for each clinical feature in Table 6 by reporting the F1-score for each class as well as average F1-score. We observe that indirect negation detection has a positive effect on the performance for animal contact and secondary contact. However, for comorbidities and specified HCW, indirect negation detection plays an insignificant role.\nWhat insights can epidemiologists gain about the MERS disease from automatically extracted line lists? Finally, we show some of the utilities of automated line lists by inferring different epidemiological insights from the line list extracted by Guided Deep List. Demographic distribution. In Figure 1, we show the age and gender distribution of the affected individuals in the extracted\n13/16\nline list. We observe that males are more prone to getting infected by MERS rather than females. This is expected as males have a higher probability of getting contacted with infected animals (animal contact) or with each other (secondary contact). Also individuals aged between 40 and 70 are more prone to getting infected as evident from the age distribution. Analysis of disease onset features. We analyzed the symptoms-to-hospitalization period by analyzing the difference (in days) between onset date and hospitalization date in the extracted line list as shown in Figure 8a. We observe that most of the affected individuals with onset of symptoms got admitted to the hospital either on the same day or within 5 days. This depicts a prompt responsiveness of the concerned health authorities in Saudi Arabia in terms of admitting the individuals showing symptoms of MERS. In Figure 8b, we also show a distribution of the hospitalization-to-outcome period (in days). Interestingly, we see that the distribution has a peak at 0 which indicates that most of the infected individuals admitted to the hospital died on the same day indicating high fatality rate of MERS case."}, {"heading": "Acknowledgements", "text": "Supported by the Intelligence Advanced Research Projects Activity (IARPA) via Department of Interior National Business Center (DoI/NBC) contract number D12PC000337, the US Government is authorized to reproduce and distribute reprints of this work for Governmental purposes notwithstanding any copyright annotation thereon. Disclaimer: The views and conclusions contained herein are those of the authors and should not be interpreted as necessarily representing the official policies or endorsements, either expressed or implied, of IARPA, DoI/NBC, or the US Government.\n14/16\nSupplementary Information Codes and data for this manuscript are available at https://github.com/sauravcsvt/KDD_linelisting."}], "references": [{"title": "retrospective comparative analysis of line lists of human cases infected with influenza a (h7n9) in china", "author": ["Lau", "E.H. et al. Accuracy of epidemiological inferences based on publicly available information"], "venue": "BMC medicine 12, 88", "citeRegEx": "1", "shortCiteRegEx": null, "year": 2014}, {"title": "insights from publicly available data", "author": ["M.S. Majumder", "C. Rivers", "E. Lofgren", "Fisman", "D. Estimation of mers-coronavirus reproductive number", "case fatality rate for the spring 2014 saudi arabia outbreak"], "venue": "PLOS Currents Outbreaks", "citeRegEx": "2", "shortCiteRegEx": null, "year": 2014}, {"title": "Efficient estimation of word representations in vector space", "author": ["T. Mikolov", "K. Chen", "G. Corrado", "J. Dean"], "venue": "CoRR abs/1301.3781", "citeRegEx": "4", "shortCiteRegEx": "4", "year": 2013}, {"title": "Distributed representations of words and phrases and their compositionality", "author": ["T. Mikolov", "I. Sutskever", "K. Chen", "G.S. Corrado", "J. Dean"], "venue": "In 26th Annual Conference on Neural Information Processing Systems,", "citeRegEx": "5", "shortCiteRegEx": "5", "year": 2013}, {"title": "Distributed representations of sentences and documents", "author": ["Q.V. Le", "T. Mikolov"], "venue": "In ICML,", "citeRegEx": "6", "shortCiteRegEx": "6", "year": 2014}, {"title": "Linguistic regularities in continuous space word representations", "author": ["T. Mikolov", "W. Yih", "G. Zweig"], "venue": "In Human Language Technologies: Conference of the NAACL,", "citeRegEx": "7", "shortCiteRegEx": "7", "year": 2013}, {"title": "Linguistic regularities in sparse and explicit word representations", "author": ["O. Levy", "Y. Goldberg"], "venue": "In Proceedings of the Eighteenth Conference on CoNLL,", "citeRegEx": "8", "shortCiteRegEx": "8", "year": 2014}, {"title": "Open information extraction using wikipedia", "author": ["F. Wu", "D.S. Weld"], "venue": "In Proceedings of the 48th Annual Meeting of the Association for Computational Linguistics,", "citeRegEx": "9", "shortCiteRegEx": "9", "year": 2010}, {"title": "Automatic negation detection in narrative pathology reports. Artificial intelligence in medicine", "author": ["Y. Ou", "J. Patrick"], "venue": null, "citeRegEx": "10", "shortCiteRegEx": "10", "year": 2015}, {"title": "Dependency parser-based negation detection in clinical narratives", "author": ["S. Sohn", "S. Wu", "C.G. Chute"], "venue": "AMIA Summits on Translational Science proceedings AMIA Summit on Translational Science 2012,", "citeRegEx": "11", "shortCiteRegEx": "11", "year": 2012}, {"title": "a rule-based approach to infer the scope of negation via dependency parsing", "author": ["Ballesteros", "M. et al. Ucm-2"], "venue": "In Proceedings of the First Joint Conference on Lexical and Computational Semantics-Volume 1: Proceedings of the main conference and the shared task, and Volume 2: Proceedings of the Sixth International Workshop on Semantic Evaluation, 288\u2013293", "citeRegEx": "12", "shortCiteRegEx": null, "year": 2012}, {"title": "A shortest path dependency kernel for relation extraction. In Proceedings of the conference on human language technology and empirical methods in natural language processing", "author": ["R.C. Bunescu", "R.J. Mooney"], "venue": "Computational Linguistics,", "citeRegEx": "13", "shortCiteRegEx": "13", "year": 2005}, {"title": "Dependency-based word embeddings", "author": ["O. Levy", "Y. Goldberg"], "venue": "In ACL (2),", "citeRegEx": "14", "shortCiteRegEx": "14", "year": 2014}, {"title": "Planned protest modeling in news and social media", "author": ["S Muthiah"], "venue": "In AAAI,", "citeRegEx": "15", "shortCiteRegEx": "15", "year": 2015}, {"title": "An improved non-monotonic transition system for dependency parsing", "author": ["M. Honnibal", "M. Johnson"], "venue": "In Proceedings of the 2015 Conference on Empirical Methods in Natural Language Processing,", "citeRegEx": "16", "shortCiteRegEx": "16", "year": 2015}, {"title": "Forecasting civil unrest using open source indicators", "author": ["Ramakrishnan", "N. et al. \u2018Beating the news\u2019 with EMBERS"], "venue": "In Proceedings of the 20th ACM SIGKDD International Conference on Knowledge Discovery and Data Mining, 1799\u20131808", "citeRegEx": "17", "shortCiteRegEx": null, "year": 2014}, {"title": "Improving distributional similarity with lessons learned from word embeddings", "author": ["O. Levy", "Y. Goldberg", "I. Dagan"], "venue": "TACL 3,", "citeRegEx": "18", "shortCiteRegEx": "18", "year": 2015}, {"title": "Dependency-based word embeddings", "author": ["O. Levy", "Y. Goldberg"], "venue": "In Proceedings of the 52nd Annual Meeting of the ACL,", "citeRegEx": "19", "shortCiteRegEx": "19", "year": 2014}, {"title": "A vocabulary driven word2vec approach", "author": ["S. Ghosh", "P. Chakraborty", "E. Cohn", "J.S. Brownstein", "Ramakrishnan", "N. Characterizing diseases from unstructured text"], "venue": "In Proceedings of the 25th ACM International on Conference on Information and Knowledge Management, 1129\u20131138", "citeRegEx": "20", "shortCiteRegEx": null, "year": 2016}, {"title": "Does negation influence the retrieval of medical reports? Tech", "author": ["A. Diaz", "M. Ballesteros", "J. Carrillo-de Albornoz", "Plaza", "L. Ucm at trec-2012"], "venue": "Rep., DTIC Document", "citeRegEx": "21", "shortCiteRegEx": null, "year": 2012}, {"title": "Machine learning in Python", "author": ["Pedregosa", "F. et al. Scikit-learn"], "venue": "Journal of Machine Learning Research 12, 2825\u20132830", "citeRegEx": "22", "shortCiteRegEx": null, "year": 2011}], "referenceMentions": [], "year": 2017, "abstractText": "Real-time monitoring and responses to emerging public health threats rely on the availability of timely surveillance data. During the early stages of an epidemic, the ready availability of line lists with detailed tabular information about laboratory-confirmed cases can assist epidemiologists in making reliable inferences and forecasts. Such inferences are crucial to understand the epidemiology of a specific disease early enough to stop or control the outbreak. However, construction of such line lists requires considerable human supervision and therefore, difficult to generate in real-time. In this paper, we motivate Guided Deep List, the first tool for building automated line lists (in near real-time) from open source reports of emerging disease outbreaks. Specifically, we focus on deriving epidemiological characteristics of an emerging disease and the affected population from reports of illness. Guided Deep List uses distributed vector representations (ala word2vec) to discover a set of indicators for each line list feature. This discovery of indicators is followed by the use of dependency parsing based techniques for final extraction in tabular form. We evaluate the performance of Guided Deep List against a human annotated line list provided by HealthMap corresponding to MERS outbreaks in Saudi Arabia. We demonstrate that Guided Deep List extracts line list features with increased accuracy compared to a baseline method. We further show how these automatically extracted line list features can be used for making epidemiological inferences, such as inferring demographics and symptoms-to-hospitalization period of affected individuals.", "creator": "LaTeX with hyperref package"}}}