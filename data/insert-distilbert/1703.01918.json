{"id": "1703.01918", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "6-Mar-2017", "title": "High-Resolution Multispectral Dataset for Semantic Segmentation", "abstract": "unmanned robotic aircraft have radically decreased the cost required designers to simply collect 3d remote sensing imagery, which has enabled researchers to collect high - spatial resolution data from multiple individual sensor modalities more frequently and so easily. the increase in data will push the need limit for semantic segmentation frameworks that are able to classify raw non - rgb imagery, but this type of algorithmic development requires an increase in publicly available benchmark datasets with class labels. discussed in this paper, we introduce a high - resolution multispectral dataset with image object labels. this drastically new benchmark dataset accordingly has been pre - split into training / testing folds guidelines in order to standardize evaluation and continue to push state - of - the - art classification frameworks for non - rgb imagery.", "histories": [["v1", "Mon, 6 Mar 2017 15:16:56 GMT  (1748kb,D)", "http://arxiv.org/abs/1703.01918v1", "9 pages, 8 Figures"]], "COMMENTS": "9 pages, 8 Figures", "reviews": [], "SUBJECTS": "cs.CV cs.AI", "authors": ["ronald kemker", "carl salvaggio", "christopher kanan"], "accepted": false, "id": "1703.01918"}, "pdf": {"name": "1703.01918.pdf", "metadata": {"source": "CRF", "title": "High-Resolution Multispectral Dataset for Semantic Segmentation", "authors": ["Ronald Kemker", "Carl Salvaggio", "Christopher Kanan", "Chester F. Carlson"], "emails": ["kanan}@rit.edu"], "sections": [{"heading": "1. Introduction", "text": "The semantic segmentation of remote sensing imagery provides the end user a pixel-wise classification map for a given scene. Countless machine- and deep-learning algorithms have been developed to perform this task; however, access to large quantities of labeled data for non-RGB sensors make the deployability of these frameworks difficult. In computer vision literature, semantic segmentation has made significant progress due to deep-convolutional neural networks (DCNNs) [23, 10] trained with large quantities of labeled imagery [21]. The quantity of labeled data for multispectral (MSI) and hyperspectral imagery (HSI) is minuscule in comparison, which has made DCNNs less successful for remote sensing applications.\nCommon benchmark datasets were acquired by airborne and satellite platforms, so the ground-sample distance (GSD) is normally on the order of 1-20 meters. Many of these benchmarks consist of a single image that is randomly sampled for training/testing folds. This is a problem since deployable frameworks will not be able to build training/testing folds on the fly because images captured in real-time do not have labels. In addition, many classifica-\ntion frameworks involve extracting spatial information from neighboring pixels. If the folds are randomly sampled, the training data could contaminate the test data, which would artificially inflate classification performance [22, 19, 25]. This is why it is important to separate training and testing data.\nIn this paper, we introduce a high-resolution (4.7cm GSD) multispectral dataset acquired by an unmanned aircraft system (UAS). It contains 18 unbalanced classes and will be used to evaluate semantic segmentation frameworks designed for non-RGB remote sensing imagery. This dataset, shown in Figure 1, is split into training, validation, and testing folds to 1) provide a standard for state-of-the-art comparison, and 2) demonstrate the feasibility of deploying algorithms in a real-time environment. Preliminary results demonstrate that the large spatial variability commonly associated with high-resolution imagery, large sample (pixel) size, small and hidden objects, and unbalanced class distribution make this a difficult dataset to perform well on; and in the future, should be a ripe candidate for deep learning frameworks."}, {"heading": "2. Related Work", "text": ""}, {"heading": "2.1. Non-RGB Labeled Datasets", "text": "The lack of publicly available labeled remote sensing imagery from non-RGB sensors has prevented the successful incorporation of DCNN-type architectures popular in the\n1\nar X\niv :1\n70 3.\n01 91\n8v 1\n[ cs\n.C V\n] 6\nM ar\n2 01\ncomputer-vision community. Image classification frameworks, such as VGG-16 [23] and ResNet [10], are trained on the massive ImageNet dataset[21]. The ImageNet challenge has over a million training images for 1,000 classtypes. State-of-the-art semantic segmentation frameworks transfer the weights from DCNNs trained on ImageNet and fine-tune them on a much smaller semantic segmentation dataset like PASCAL VOC [7] or MS COCO[17].\nLabeled remote sensing datasets captured by non-RGB sensors (i.e. MSI/HSI) are much smaller than ImageNet, making this approach currently infeasible. Instead, researchers have embraced unsupervised feature extraction as a method for improving classification performance. These features are fed into a classifier such as a support vector machine (SVM) or multi-layer perceptron (MLP) to generate a prediction.\nPublicly-available datasets with labels have traditionally been imaged by airborne and satellite platforms. Consequently, the GSD of non-RGB imagery is on the order of 1-20 meters. Indian Pines was one of the first publiclyavailable HSI[4]. It was captured by the AVIRIS airborne sensor and it has a GSD of 20 meters. Additional benchmark HSI datasets, listed in Table 1, have been released, but none of these datasets have a GSD less than a meter. There are also several MSI datasets publicly available, including (but not limited to) semantic segmentation challenges hosted by the International Society for Photogrammetry and Remote Sensing (ISPRS) [18], the 2016 IEEE Geoscience and Remote Sensing Society (GRSS) data fusion contest[1], and the Satellite Imagery Feature Detection challenge on Kaggle[2].\nUAS collection of non-RGB imagery has grown in popularity, especially in precision agriculture, because it is more cost effective than manned flights and provides better spa-\ntial resolution than satellite imagery. This cost savings allows the user to collect data more frequently, which increases the temporal resolution of the data as well. The authors in [11] characterized three MSI payloads on numerous applications including crop health sensing, variable-rate application prescription, irrigation engineering, and crop-field variability. The same sensor used to build the dataset presented in this paper has also been used on-board UASs to assess crop stress by measuring the variability in chlorophyll fluorescence [24] and through the acquisition of other biophysical parameters[5]. The sensor used here has also been used to perform vegetation classification on orthomosaic imagery[16]. The authors used multi-scale segmentation and hand-selected features to identify 8 types of plant life known to be present in the scene.\nIn 2016, the Chester F. Carlson Center for Imaging Science established a new UAS laboratory to collect remote sensing data for research purposes. This laboratory is equipped with several UAS payloads including RGB cameras, MSI/HSI sensors, thermal imaging systems, and light detection and ranging (LIDAR). In this paper, we present the first labeled dataset created by this lab, which contains 4.7 cm resolution MSI (6-band) and 18 classes."}, {"heading": "2.2. Separate Training/Testing Folds", "text": "The majority of published work involving the classification of non-RGB remote sensing imagery involves the use of small, single-image datasets such as the HSI datasets listed in Table 1. The training/testing sets are usually built by randomly sampling a percentage of the image. Many of these papers use different training/testing sets rather than established benchmarks, which makes it difficult to 1) identify the current state-of-the-art, and 2) provide a fair comparison against other published algorithms.\nThe construction of training/testing folds from a single image may be useful for prototyping algorithms, but it is not representative of a deployable framework. A pre-trained machine learning model will not have access to new labels in a deployed environment, so the model must be able to adapt to a wide range of circumstances to make generalized predictions based on data it has already seen. To demonstrate that a model can do this, the training/testing data must be kept separate - a cardinal rule for any machine learning framework. A good remote sensing dataset should collect training/testing folds from completely separate scenes, but it should share some of the same class labels.\nMany benchmark datasets in computer vision, such as ImageNet and PASCAL VOC, encourage the development of deployable models by protecting the testing labels. The participant is required to submit their predictions to an evaluation server in order to obtain their results. The remote sensing community has slowly begun to establish their own benchmark evaluation servers such as the IEEE GRSS Data\nFusion Contest, ISPRS semantic segmentation challenges, and more recently, new contests posted on Kaggle. These challenges will continue to push algorithm development by standardizing evaluation and clearly identifying the stateof-the-art performer. The dataset introduced in this paper has a separate training, validation, and testing fold, and we are working with the IEEE GRSS to make it available on their evaluation server."}, {"heading": "3. Data Collection", "text": ""}, {"heading": "3.1. Collection Site", "text": "The imagery for this dataset was collected at Hamlin Beach State Park, located along the coast of Lake Ontario in Hamlin, NY. The training and validation data was collected at one location, and the test data was collected at a different location in the park. These two locations are unique, but they share many of the same class-types. Table 2 lists several other collection parameters that may be of interest."}, {"heading": "3.2. Collection Equipment", "text": "The equipment used to build this dataset and information about the flight is listed in Table 3. The Tetracam MicroMCA6 MSI sensor has six independent optical systems with bandpass filters centered across the visual and near-infrared (VNIR) spectrum. Figure 2 shows an image of the MicroMCA6 mounted on-board the DJI-S1000 octocopter."}, {"heading": "4. Data Processing", "text": ""}, {"heading": "4.1. Pre-Processing", "text": "For each collection campaign, we filtered out data not collected along our desired flight path (i.e. takeoff and landing legs). The six spectral images come from independent imaging systems, so they need to be registered to one another. The manufacturer provided an affine transformation matrix that was not designed to work at the flying height this data was collected at which caused noticeable registration error. We used one of the parking lot images to develop a global perspective transformation for the other images in our dataset. Figure 3(a) illustrates the registration error caused by the affine transformation provided by the manufacturer, and Figure 3(b) shows that this error has been reduced with our perspective transformation.\nThe global transformation worked well for some of the images, but there were misregistration errors in other parts of the scene indicating that the transformation needs to be performed on a per-image basis. This was done by matching SIFT features from each band to build custom homographies. If a good homography could not be found, the global transformation was used instead. This was common for homogenous scenes elements such as water or repeating patterns such as an empty parking lots.\nEach collected frame was acquired with a unique integration time (i.e. auto exposure) and each band of the Tetracam Micro-MCA6 uses a different integration time proportional to the sensor\u2019s relative spectral response. Another issue is\nthat each image, including each band, is collected with a different integration time. The longer integration times required for darker images, especially over water scenes, resulted in blur caused by platform motion. We normalized each image with its corresponding integration time and then contrast-stretched the image back to a 16-bit integer using the global min/max of the entire dataset. The original images are 10-bit, but the large variation in integration time groups most of the data to lower intensity ranges. We extended the dynamic range of the orthomosaic by stretching the possible quantized intensity states."}, {"heading": "4.2. Orthomosaics", "text": "Agisoft PhotoScan [3] was used to build the orthomosaics from the individual images in Section 4.1. The PhotoScan workflow involves:\n1. Find key points in the images and match them together as tie-points.\n2. Build a dense point cloud from the image data.\n3. Build a 3D mesh and corresponding UV texture map from the dense point cloud.\n4. Generate an orthomosaic onto the WGS-84 coordinate system using the mesh and image data.\n5. Manually correct troublesome areas by removing photographs caused by motion blur or moving objects.\nPhotoScan can generate high-quality orthomosaics, but manual steps were taken to ensure the best quality. First, not all of the images were in focus; and although PhotoScan has an image quality algorithm, we opted to manually scan and remove the defocused images. Second, the 3D model that the orthomosaic is projected onto is built from structure-from-motion. Large objects that move over time, such as tree branches blowing in the wind, or vehicles moving throughout the scene, will cause noticeable errors. This\nis corrected by highlighting the affected region and manually selecting a single (or a few) alternative images that will be used to generate that part of the orthomosaic, as opposed to those automatically selected."}, {"heading": "5. Proposed Dataset", "text": ""}, {"heading": "5.1. Training/Testing Split", "text": "The Hamlin Beach State Park dataset (Figure 1) is split up into a training, validation, and testing fold. Each fold contains an orthomosaic image and corresponding classification map. Each orthomosaic contains the six-band image described in Section 4.2 along with a mask where the image data is valid. The spatial dimensionality for each fold is 9,393\u00d75,642 (train), 8,833\u00d76,918 (validation), and 12,446\u00d77,654 (test)."}, {"heading": "5.2. Classification Labels", "text": "Table 4 lists the 18 class labels for this dataset. Each orthomosaic was hand-annotated using the region-of-interest (ROI) tool in ENVI. Several individuals took part in the labeling process.\nThe class-labeled instances are, as illustrated in Figure 4, orders of magnitude different from one-another. These underrepresented classes should make this dataset more challenging."}, {"heading": "5.2.1 Water/Beach Area", "text": "The two classes for water are lake and pond. The lake class is for Lake Ontario, which is north of the beach. The pond water class is for the small inland pond, present in all three folds, which is surrounded by marsh and trees. Along Lake Ontario is a sand/beach class. This class also includes any spot where sand blew up along the asphalt walking paths. Along the beach are some white-painted, wooden lifeguard chairs. The buoy class is for the water buoys present in the water and on the beach. They are very small, primarily red and/or white, and assume various shapes. The rocks class is for the large breakwater along the beach."}, {"heading": "5.2.2 Vegetation", "text": "There are three vegetation classes including grass, trees, and low-level vegetation. The tree class includes a variety of trees present in the scene. The grass includes all pixels on the lawn. There are some mixtures present in the grass (such as sand, dirt, or various weeds), so the classification algorithm will need to take neighboring pixel information into account. The grass spots on the beach and asphalt were labeled automatically using a normalized-difference vegetation index (NDVI) metric. The low-level vegetation class includes any other vegetation, including manicured plants, around the building or the marsh next to the pond."}, {"heading": "5.2.3 Roadway", "text": "The asphalt class includes all parking lots, roads, and walkways made from asphalt, but it does not include cement or stone paths around the buildings. The road marking class is for any painted asphalt surface including parking/road lanes. This class was automatically labeled with posteriori manual clean-up. The road markings in the validation image are sharper than those depicted in the training image since the park repainted the lines between collects. The vehicle label includes any car, truck, or bus."}, {"heading": "5.2.4 Underrepresented Classes", "text": "Underrepresented classes, which may be small and/or appear infrequently, will be difficult to identify. Since some of the land cover classes are massive in comparison, the mean-class accuracy metric will be the most important during the classification experiments in Section 6.1. Small object classes, such as person and picnic table, represent only a minute fraction of the image and should remain very difficult to correctly classify. These small objects will be surrounded by larger classes and may even hide in the shade.\nThere are also a few classes that are only present in the scene a couple of times, such as the white/black wood targets, orange UAS landing pad, lifeguard chair, and buildings. The building class is primarily roof/shingles of a few buildings found throughout the scene. The similarity between the white wooden reflectance calibration target and the lifeguard chair should make semantic information in the scene vital to classification accuracy. There is only a single instance of the orange UAS landing pad in every fold. The black and white targets are not present in the validation fold, which could make it difficult to cross-validate for a model that can correctly identify them."}, {"heading": "6. Benchmark Results", "text": ""}, {"heading": "6.1. Semantic Segmentation", "text": "The main goal of this dataset is to push the state-of-theart for semantic segmentation of non-RGB imagery. This section will provide some benchmark results for future development. The training and validation folds are used to cross-validate for hyperparameters, and then the model is fit with the two folds combined using these hyperparameters. The test data and labels are never used to cross-validate for hyperparameters or fit the model."}, {"heading": "6.1.1 Spectral-Only Features", "text": "This paper will explore three spectral-only classification methods including k-nearest neighbor (kNN), linear SVM and MLP. Spectral-only classification does not take neighboring pixel information into account, so the high spatial variability commonplace in small GSD imagery adversely effects classification performance. Additionally, semantic information for objects present in small GSD imagery require frameworks that gather pixels from a wider receptive field.\nWe chose the LIBLINEAR [8] implementation of SVM for its speed and stability with large datasets. This implementation uses L2-loss and a one-vs-rest multi-class approach. We also attempted to use the radial basis function (RBF) kernel for SVM, but the large number of samples prevented the classifier from fitting properly. The only preprocessing step was standard normalization (channel-mean subtraction and dividing by each channel\u2019s standard deviation). We used the training and validation set to crossvalidate for the cost parameter, and then performed a final fit with the combined training and validation set.\nThe MLP is a fully-connected neural network with a single hidden-layer. This hidden layer is preceded by a batchnormalization layer and followed by a ReLU activation. Since the distribution of class-labels is uneven, we assigned the class weights, wi, in Equation 1 to each class i, where N is the number of samples, Ni is the number of samples\nin each class, and \u00b5 is a tunable hyper-parameter. The MLP is also helpful with spatial-spectral feature extraction methods in Section 6.1.2 where the dimensionality is increased, making the SVM solution unstable.\nwi = \u00b5 log\n( N\nNi\n) (1)\nIn addition, we explored the impact of the additional NIR spectral bands on spectral-only classification performance. This includes only the RGB bands (SVM-RGB), only the three NIR bands (SVM-NIR), a false-color image (SVMCIR), and a four band RGB-NIR (SVM-VNIR). The 720 nm band was used for the SVM-CIR and SVM-VNIR experiments."}, {"heading": "6.1.2 Spatial-Spectral Features", "text": "The resolution of this dataset encourages the use of neighboring pixel information to improve upon spectral-only classification performance. This paper will explore multiple spatial-spectral feature extraction techniques including mean-pooling (MP), multi-scale independent component analysis (MICA), and stacked convolutional autoencoders (SCAE). The MP method reduces some of the spatial variability in the scene, yielding a slightly better result. The mean-pooled response is fed into the same SVM outlined in Section 6.1.1.\nMICA is an unsupervised low-level spatial-spectral feature extractor that learns a set of Gabor-type bar/edge and color-opponency detectors from natural images [12]. These filters are built by a extracting N patches from the training data using a C \u00d7 C patch size, vectorizing each patch to form a N \u00d7 6C2 array, and then passing the patch array through a non-linear activation. Whitened principalcomponent analysis (WPCA) is used to reduce the dimensionality of the patch array to N \u00d7 F , where F is the number of desired MICA filters. Independent component analysis (ICA) is used to break the whitened patch array into its statistically independent components. The filters, shown in Figure 5, were constructed by multiplying the ICA and PCA vectors and then reshaping this into a F \u00d7C \u00d7C \u00d7 6 array.\nThese learned filters, as part of a shallow neural network, are convolved with the labeled imagery, passed through an activation function to introduce non-linearities, and then pooled to incorporate translation invariance. These feature responses can then be fed to a traditional classifier. Full details are available in [12].\nSCAE, illustrated in Figure 6, is another unsupervised spatial-spectral feature extractor. SCAE has a deeper neural network architecture than MICA and is capable of extracting higher-level features [12]. The architecture used in this paper involves three individual convolutional autoencoders\n(CAEs) that are trained independently. The input and output of the first CAE is a collection of random image patches from the training data, and the input/output of the subsequent CAEs are the features from the last hidden layer of the previous CAE. The output of all three CAEs are concatenated in the feature domain, mean-pooled, with the dimensionality reduced to 99% of the original variance using WPCA. The final feature response is passed to a traditional classifier.\nThe architecture of each CAE is illustrated in Figure 7. Each CAE contains a small feed-forward network consisting of multiple convolution and max-pooling operations. The feature response is reconstructed with symmetric convolution and upsampling operations. The reconstruction error is reduced by using skip connections from the feedforward network, inspired by [20]."}, {"heading": "6.1.3 Experimental Results", "text": "The semantic segmentation results for this dataset are listed in Table 5. Each algorithm is evaluated on per-class accuracy, overall accuracy (OA), mean-class accuracy (AA), and kappa statistic (\u03ba). Mean-class accuracy is the most important metric for evaluating the discriminative power of our classification models due to the disparity in numbers for members in each labeled class.\nThe kNN classifier used the Euclidian distance metric and cross-validated for k over the range of 1-15. The Linear SVM cross-validated for its cost parameter C over the range of 2\u22129 \u2212 216 and was weighted by the inverse class frequency. The MLP has a single-hidden layer with 64 units and uses a L2 regularization (weight-decay) value of 10\u22124 in the convolution and batch normalization layers. The MLP was trained using the NAdam optimizer [13] with a batch size of 256 and the class weighted update in Equation 1 where \u00b5 = 0.15. The MP experiment used a 5 \u00d7 5 filter and the feature response was passed to the same SVM described earlier.\nThe MICA model used in this paper had F = 64 learned filters with size C = 25, ReLU activation, and a pooling window of 13. The MICA feature responses were passed to the same MLP classifier discussed in Section 6.1.1, except it had a hidden-layer of 256 units to facilitate the higher dimensionality of the feature response. MICA yielded a 4.8 percent increase in mean-class accuracy from the simpler MP experiment, demonstrating that unsupervised feature extraction can boost classification performance for highresolution imagery.\nThe SCAE model used in this paper has the same architecture found in Figures 6 and 7. It was trained with 30,000 128\u00d7128 image patches randomly extracted from the train-\ning and validation datasets. Each CAE was trained individually with a batch size of 128. Each convolution for the first convolution block has 32 units, 64 units for the second convolution block, 128 units for the third, and 256 units for the 1x1 convolution. The refinement blocks have the same number of units as their corresponding convolution block, so the last hidden layer has 32 features.\nAfter training, the whole image is passed through the SCAE network to generate three N \u00d7 32 feature responses. These feature responses are concatenated, convolved with a 5 \u00d7 5 mean-pooling filter, and then reduced to 99% of the original variance using WPCA. The final feature response is passed to a MLP classifier with the same architecture used for the MICA model. MICA outperformed SCAE showing that low-level features over a larger receptive field could be more important than higher-level features over a smaller spatial extent.\nTable 6 shows the result of band-selection on classification performance. The most significant impact to classification performance appears to be the NIR bands; consistent with the fact that most of the scene is vegetation."}, {"heading": "6.2. Target Detection", "text": "Our dataset also has a target detection challenge. This challenge consists of two sets of white and black wooden panels, shown in Figure 8 where one set is placed in the shade and the other in direct sunlight. The signature of both panels can be extracted using the training labels.\nThis challenge is evaluated by the area under the curve metric. Table 7 has some benchmark results using commonly-used signature matched target detection algorithms, including the spectral angle mapper (SAM) [15], spectral-matched filter (SMF) [6], constrainedenergy minimization (CEM) [9], and adaptive-cosine esti-\nmator (ACE) [14]. These benchmarks used global background estimations which were made by using every pixel in the image other than the targets. These algorithms were performed both on the training and testing data, but no single algorithm worked universally well on every target."}, {"heading": "7. Discussion/Conclusion", "text": "We have presented a dataset that will add to the growing repository of labeled non-RGB imagery. We have separated the training, validation, and testing datasets to allow researchers to compare classification performance against current state-of-the-art performers. We will work to make this data available on the IEEE GRSS evaluation server in order to standardize the evaluation of new semantic segmentation frameworks.\nOur experimental results demonstrate the challenges associated with this dataset. In addition, the large number of samples (pixels) present in this dataset carry a largecomputational cost. The MLP classifier and SCAE feature extraction framework were trained using the NVIDIA Titan X graphical processing unit (GPU) which has 12 GB of memory. None of the orthomosaics could be loaded into the GPU memory. Future work for this dataset should involve an end-to-end classification framework that is capable of maximizing computer/GPU resources and making faster predictions than the approaches presented in this paper.\nA classification framework that is capable of performing well on this dataset could be deployed in a real-time environment. The separation of training/testing folds force the classification framework to make generalized predictions that can be transferred to other scenes. A deployable model would also need to provide (near) real-time predictions, which is where an end-to-end deep-learning framework would do well. The problem with this approach is that networks of this size would require an enormous labeled dataset collected with the Tetracam Micro-MCA6 sensor.\nFuture work will explore the development of an end-toend DCNN framework inspired by current state-of-the-art semantic segmentation literature. If a sufficient amount of training data is available, this method will be faster and likely more accurate."}, {"heading": "Acknowledgements", "text": "We would like to thank Nina Raqueno, Paul Sponagle, Timothy Bausch, Michael McClelland II, and other members of the RIT Signature Interdisciplinary Research Area, UAS Research Laboratory that supported with data collection."}], "references": [{"title": "Thermal and Narrowband Multispectral Remote Sensing for Vegetation Monitoring from an Unmanned Aerial Vehicle", "author": ["J.A. Berni"], "venue": "IEEE Trans. Geosci. Remote Sens.,", "citeRegEx": "5", "shortCiteRegEx": "5", "year": 2009}, {"title": "Automated Hyperspectral Cueing for Civilian Search and Rescue", "author": ["M.T. Eismann"], "venue": "IEEE Proceedings,", "citeRegEx": "6", "shortCiteRegEx": "6", "year": 2009}, {"title": "The PASCAL Visual Object Classes Challenge: A Retrospective", "author": ["M. Everingham"], "venue": "Int. J. Comp. Vis.,", "citeRegEx": "7", "shortCiteRegEx": "7", "year": 2015}, {"title": "LIBLINEAR: A Library for Large Linear Classification", "author": ["R.-E. Fan"], "venue": "J. Mach. Learn. Rsrch.,", "citeRegEx": "8", "shortCiteRegEx": "8", "year": 2008}, {"title": "Detection and Classification of Subpixel Spectral Signatures in Hyperspectral Image Sequences", "author": ["J.C. Harsanyi"], "venue": "PhD thesis, University of Maryland,", "citeRegEx": "9", "shortCiteRegEx": "9", "year": 1993}, {"title": "Deep Residual Learning for Image Recognition", "author": ["K. He"], "venue": "In Proc. of IEEE CVPR,", "citeRegEx": "10", "shortCiteRegEx": "10", "year": 2016}, {"title": "Multispectral Imaging Systems for Airborne Remote Sensing to Support Agricultural Production Management", "author": ["Y. Huang"], "venue": "Int. J. Agricultural & Bio. Eng.,", "citeRegEx": "11", "shortCiteRegEx": "11", "year": 2010}, {"title": "Self-Taught Feature Learning for Hyperspectral Image Classification", "author": ["R. Kemker", "C. Kanan"], "venue": "IEEE Trans. Geosci. Remote Sens., 2017", "citeRegEx": "12", "shortCiteRegEx": "12", "year": 2017}, {"title": "Adam: A Method for Stochastic Optimization", "author": ["D.P. Kingma", "J. Ba"], "venue": "CoRR, abs/1412.6980,", "citeRegEx": "13", "shortCiteRegEx": "13", "year": 2014}, {"title": "The CFAR Adaptive Subspace Detector is a Scale-invariant GLRT", "author": ["S. Kraut", "L.L. Scharf"], "venue": "IEEE Trans. Sig. Process.,", "citeRegEx": "14", "shortCiteRegEx": "14", "year": 1999}, {"title": "The Spectral Image Processing System (SIPS)Interactive Visualization and Analysis of Imaging Spectrometer Data", "author": ["F. Kruse"], "venue": "Remote Sens. of Env.,", "citeRegEx": "15", "shortCiteRegEx": "15", "year": 1993}, {"title": "Multispectral Remote Sensing from Unmanned Aircraft: Image Processing Workflows and Applications for Rangeland Environments", "author": ["A.S. Laliberte"], "venue": "Remote Sensing,", "citeRegEx": "16", "shortCiteRegEx": "16", "year": 2011}, {"title": "Microsoft COCO: Common Objects in Context", "author": ["T. Lin"], "venue": "CoRR, abs/1405.0312,", "citeRegEx": "17", "shortCiteRegEx": "17", "year": 2014}, {"title": "Urban Object Detection and 3D Building Reconstruction", "author": ["J. Meidow"], "venue": "ISPRS J. Photo. & Remote Sens.,", "citeRegEx": "18", "shortCiteRegEx": "18", "year": 2014}, {"title": "Improving Hyperspectral Image Classification by Combining Spectral, Texture, and Shape Features", "author": ["F. Mirzapour", "H. Ghassemian"], "venue": "Int. J. Remote Sens.,", "citeRegEx": "19", "shortCiteRegEx": "19", "year": 2015}, {"title": "Learning to Refine Object Segments", "author": ["P.O. Pinheiro"], "venue": "In Euro. Conf. on Comp. Vis.,", "citeRegEx": "20", "shortCiteRegEx": "20", "year": 2016}, {"title": "ImageNet Large Scale Visual Recognition Challenge", "author": ["O. Russakovsky"], "venue": "Int. J. Comp. Vis.,", "citeRegEx": "21", "shortCiteRegEx": "21", "year": 2015}, {"title": "Three-dimensional Gabor Wavelets for Pixel-based Hyperspectral Imagery Classification", "author": ["L. Shen", "S. Jia"], "venue": "IEEE Trans. Geosci. Remote Sens.,", "citeRegEx": "22", "shortCiteRegEx": "22", "year": 2011}, {"title": "Very Deep Convolutional Networks for Large-Scale Image Recognition", "author": ["K. Simonyan", "A. Zisserman"], "venue": "CoRR, abs/1409.1556,", "citeRegEx": "23", "shortCiteRegEx": "23", "year": 2014}, {"title": "Imaging Chlorophyll Fluorescence with an Airborne Narrow-band Multispectral Camera for Vegetation Stress Detection", "author": ["P. Zarco-Tejada"], "venue": "Remote Sens. of Env.,", "citeRegEx": "24", "shortCiteRegEx": "24", "year": 2009}, {"title": "On combining multiscale deep learning features for the classification of hyperspectral remote sensing imagery", "author": ["W. Zhao", "Z. Guo", "J. Yue", "X. Zhang", "L. Luo"], "venue": "Int. J. Remote Sens.,", "citeRegEx": "25", "shortCiteRegEx": "25", "year": 2015}], "referenceMentions": [{"referenceID": 18, "context": "In computer vision literature, semantic segmentation has made significant progress due to deep-convolutional neural networks (DCNNs) [23, 10] trained with large quantities of labeled imagery [21].", "startOffset": 133, "endOffset": 141}, {"referenceID": 5, "context": "In computer vision literature, semantic segmentation has made significant progress due to deep-convolutional neural networks (DCNNs) [23, 10] trained with large quantities of labeled imagery [21].", "startOffset": 133, "endOffset": 141}, {"referenceID": 16, "context": "In computer vision literature, semantic segmentation has made significant progress due to deep-convolutional neural networks (DCNNs) [23, 10] trained with large quantities of labeled imagery [21].", "startOffset": 191, "endOffset": 195}, {"referenceID": 17, "context": "If the folds are randomly sampled, the training data could contaminate the test data, which would artificially inflate classification performance [22, 19, 25].", "startOffset": 146, "endOffset": 158}, {"referenceID": 14, "context": "If the folds are randomly sampled, the training data could contaminate the test data, which would artificially inflate classification performance [22, 19, 25].", "startOffset": 146, "endOffset": 158}, {"referenceID": 20, "context": "If the folds are randomly sampled, the training data could contaminate the test data, which would artificially inflate classification performance [22, 19, 25].", "startOffset": 146, "endOffset": 158}, {"referenceID": 18, "context": "Image classification frameworks, such as VGG-16 [23] and ResNet [10], are trained on the massive ImageNet dataset[21].", "startOffset": 48, "endOffset": 52}, {"referenceID": 5, "context": "Image classification frameworks, such as VGG-16 [23] and ResNet [10], are trained on the massive ImageNet dataset[21].", "startOffset": 64, "endOffset": 68}, {"referenceID": 16, "context": "Image classification frameworks, such as VGG-16 [23] and ResNet [10], are trained on the massive ImageNet dataset[21].", "startOffset": 113, "endOffset": 117}, {"referenceID": 2, "context": "State-of-the-art semantic segmentation frameworks transfer the weights from DCNNs trained on ImageNet and fine-tune them on a much smaller semantic segmentation dataset like PASCAL VOC [7] or MS COCO[17].", "startOffset": 185, "endOffset": 188}, {"referenceID": 12, "context": "State-of-the-art semantic segmentation frameworks transfer the weights from DCNNs trained on ImageNet and fine-tune them on a much smaller semantic segmentation dataset like PASCAL VOC [7] or MS COCO[17].", "startOffset": 199, "endOffset": 203}, {"referenceID": 13, "context": "There are also several MSI datasets publicly available, including (but not limited to) semantic segmentation challenges hosted by the International Society for Photogrammetry and Remote Sensing (ISPRS) [18], the 2016 IEEE Geoscience and Remote Sensing Society (GRSS) data fusion contest[1], and the Satellite Imagery Feature Detection challenge on Kaggle[2].", "startOffset": 202, "endOffset": 206}, {"referenceID": 6, "context": "The authors in [11] characterized three MSI payloads on numerous applications including crop health sensing, variable-rate application prescription, irrigation engineering, and crop-field variability.", "startOffset": 15, "endOffset": 19}, {"referenceID": 19, "context": "The same sensor used to build the dataset presented in this paper has also been used on-board UASs to assess crop stress by measuring the variability in chlorophyll fluorescence [24] and through the acquisition of other biophysical parameters[5].", "startOffset": 178, "endOffset": 182}, {"referenceID": 0, "context": "The same sensor used to build the dataset presented in this paper has also been used on-board UASs to assess crop stress by measuring the variability in chlorophyll fluorescence [24] and through the acquisition of other biophysical parameters[5].", "startOffset": 242, "endOffset": 245}, {"referenceID": 11, "context": "The sensor used here has also been used to perform vegetation classification on orthomosaic imagery[16].", "startOffset": 99, "endOffset": 103}, {"referenceID": 3, "context": "We chose the LIBLINEAR [8] implementation of SVM for its speed and stability with large datasets.", "startOffset": 23, "endOffset": 26}, {"referenceID": 7, "context": "MICA is an unsupervised low-level spatial-spectral feature extractor that learns a set of Gabor-type bar/edge and color-opponency detectors from natural images [12].", "startOffset": 160, "endOffset": 164}, {"referenceID": 7, "context": "Full details are available in [12].", "startOffset": 30, "endOffset": 34}, {"referenceID": 7, "context": "SCAE has a deeper neural network architecture than MICA and is capable of extracting higher-level features [12].", "startOffset": 107, "endOffset": 111}, {"referenceID": 15, "context": "The reconstruction error is reduced by using skip connections from the feedforward network, inspired by [20].", "startOffset": 104, "endOffset": 108}, {"referenceID": 8, "context": "The MLP was trained using the NAdam optimizer [13] with a batch size of 256 and the class weighted update in Equation 1 where \u03bc = 0.", "startOffset": 46, "endOffset": 50}, {"referenceID": 10, "context": "Table 7 has some benchmark results using commonly-used signature matched target detection algorithms, including the spectral angle mapper (SAM) [15], spectral-matched filter (SMF) [6], constrainedenergy minimization (CEM) [9], and adaptive-cosine esti-", "startOffset": 144, "endOffset": 148}, {"referenceID": 1, "context": "Table 7 has some benchmark results using commonly-used signature matched target detection algorithms, including the spectral angle mapper (SAM) [15], spectral-matched filter (SMF) [6], constrainedenergy minimization (CEM) [9], and adaptive-cosine esti-", "startOffset": 180, "endOffset": 183}, {"referenceID": 4, "context": "Table 7 has some benchmark results using commonly-used signature matched target detection algorithms, including the spectral angle mapper (SAM) [15], spectral-matched filter (SMF) [6], constrainedenergy minimization (CEM) [9], and adaptive-cosine esti-", "startOffset": 222, "endOffset": 225}, {"referenceID": 9, "context": "mator (ACE) [14].", "startOffset": 12, "endOffset": 16}], "year": 2017, "abstractText": "Unmanned aircraft have decreased the cost required to collect remote sensing imagery, which has enabled researchers to collect high-spatial resolution data from multiple sensor modalities more frequently and easily. The increase in data will push the need for semantic segmentation frameworks that are able to classify non-RGB imagery, but this type of algorithmic development requires an increase in publicly available benchmark datasets with class labels. In this paper, we introduce a high-resolution multispectral dataset with image labels. This new benchmark dataset has been pre-split into training/testing folds in order to standardize evaluation and continue to push stateof-the-art classification frameworks for non-RGB imagery.", "creator": "LaTeX with hyperref package"}}}