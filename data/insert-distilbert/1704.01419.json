{"id": "1704.01419", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "5-Apr-2017", "title": "Linear Ensembles of Word Embedding Models", "abstract": "this paper explores simple linear methods described for combining several word embedding models into an ensemble. we must construct the combined models using an iterative geometric method based on either ordinary least squares regression or the solution to the orthogonal procrustes problem.", "histories": [["v1", "Wed, 5 Apr 2017 13:38:01 GMT  (126kb,D)", "http://arxiv.org/abs/1704.01419v1", "Nodalida 2017"]], "COMMENTS": "Nodalida 2017", "reviews": [], "SUBJECTS": "cs.CL", "authors": ["avo murom\\\"agi", "kairit sirts", "sven laur"], "accepted": false, "id": "1704.01419"}, "pdf": {"name": "1704.01419.pdf", "metadata": {"source": "CRF", "title": "Linear Ensembles of Word Embedding Models", "authors": ["Avo Murom\u00e4gi", "Kairit Sirts", "Sven Laur"], "emails": ["avom@ut.ee", "kairit.sirts@ut.ee", "swen@math.ut.ee"], "sections": [{"heading": null, "text": "We evaluate the proposed approaches on Estonian\u2014a morphologically complex language, for which the available corpora for training word embeddings are relatively small. We compare both combined models with each other and with the input word embedding models using synonym and analogy tests. The results show that while using the ordinary least squares regression performs poorly in our experiments, using orthogonal Procrustes to combine several word embedding models into an ensemble model leads to 7-10% relative improvements over the mean result of the initial models in synonym tests and 19-47% in analogy tests."}, {"heading": "1 Introduction", "text": "Word embeddings\u2014dense low-dimensional vector representations of words\u2014have become very popular in recent years in the field of natural language processing (NLP). Various methods have been proposed to train word embeddings from unannoted text corpora (Mikolov et al., 2013b; Pennington et al., 2014; Al-Rfou et al., 2013; Turian et al., 2010; Levy and Goldberg, 2014), most well-known of them being perhaps Word2Vec (Mikolov et al., 2013b). Embedding learning systems essentially train a model from a corpus of text and the word embeddings are the model parameters. These systems contain a randomized component and so the trained\nmodels are not directly comparable, even when they have been trained on exactly the same data. This random behaviour provides an opportunity to combine several embedding models into an ensemble which, hopefully, results in a better set of word embeddings. Although model ensembles have been often used in various NLP systems to improve the overall accuracy, the idea of combining several word embedding models into an ensemble has not been explored before.\nThe main contribution of this paper is to show that word embeddings can benefit from ensemble learning, too. We study two methods for combining word embedding models into an ensemble. Both methods use a simple linear transformation. First of them is based on the standard ordinary least squares solution (OLS) for linear regression, the second uses the solution to the orthogonal Procrustes problem (OPP) (Scho\u0308nemann, 1966), which essentially also solves the OLS but adds the orthogonality constraint that keeps the angles between vectors and their distances unchanged.\nThere are several reasons why using an ensemble of word embedding models could be useful. First is the typical ensemble learning argument\u2014 the ensemble simply is better because it enables to cancel out random noise of individual models and reinforce the useful patterns expressed by several input models. Secondly, word embedding systems require a lot of training data to learn reliable word representations. While there is a lot of textual data available for English, there are many smaller languages for which even obtaining enough plain unannotated text for training reliable embeddings is a problem. Thus, an ensemble approach that would enable to use the available data more effectively would be beneficial.\nAccording to our knowledge, this is the first work that attempts to leverage the data by combining several word embedding models into a new improved model. Linear methods for combin-\nar X\niv :1\n70 4.\n01 41\n9v 1\n[ cs\n.C L\n] 5\nA pr\n2 01\n7\ning two embedding models for some task-specific purpose have been used previously. Mikolov et al. (2013a) optimized the linear regression with stochastic gradient descent to learn linear transformations between the embeddings in two languages for machine translation. Mogadala and Rettinger (2016) used OPP to translate embeddings between two languages to perform cross-lingual document classification. Hamilton et al. (2016) aligned a series of embedding models with OPP to detect changes in word meanings over time. The same problem was addressed by Kulkarni et al. (2015) who aligned the embedding models using piecewise linear regression based on a set of nearest neighboring words for each word.\nRecently, Yin and Schu\u0308tze (2016) experimented with several methods to learn meta-embeddings by combining different word embedding sets. Our work differs from theirs in two important aspects. First, in their work each initial model is trained with a different word embedding system and on a different data set, while we propose to combine the models trained with the same system and on the same dataset, albeit using different random initialisation. Secondly, although the 1toN model proposed in (Yin and Schu\u0308tze, 2016) is very similar to the linear models studied in this paper, it doesn\u2019t involve the orthogonality constraint included in the OPP method, which in our experiments, as shown later, proves to be crucial.\nWe conduct experiments on Estonian and construct ensembles from ten different embedding models trained with Word2Vec. We compare the initial and combined models in synonym and analogy tests and find that the ensemble embeddings combined with orthogonal Procrustes method indeed perform significantly better in both tests, leading to a relative improvement of 7-10% over the mean result of the initial models in synonym tests and 19-47% in analogy tests."}, {"heading": "2 Combining word embedding models", "text": "A word embedding model is a matrix W \u2208R|V |\u00d7d , where |V | is the number of words in the model lexicon and d is the dimensionality of the vectors. Each row in the matrix W is the continuous representation of a word in a vector space.\nGiven r embedding models W1, . . . ,Wr we want to combine them into a target model Y . We define a linear objective function that is the sum of r\nlinear regression optimization goals:\nJ = r\n\u2211 i=1 \u2016Y \u2212WiPi\u20162 , (1)\nwhere P1, . . . ,Pr are transformation matrices that translate W1, . . . ,Wr, respectively, into the common vector space containing Y .\nWe use an iterative algorithm to find matrices P1, . . . ,Pr and Y . During each iteration the algorithm performs two steps:\n1. Solve r linear regression problems with respect to the current target model Y , which results in updated values for matrices P1, . . .Pr;\n2. Update Y to be the mean of the translations of all r models:\nY = 1 r\nr\n\u2211 i=1 WiPi. (2)\nThis procedure is continued until the change in the average normalised residual error, computed as\n1 r\nr\n\u2211 i=0 \u2016Y \u2212WiPi\u2016\u221a |V | \u00b7d , (3)\nwill become smaller than a predefined threshold value.\nWe experiment with two different methods for computing the translation matrices P1, . . . ,Pr. The first is based on the standard least squares solution to the linear regression problem, the second method is known as solution to the Orthogonal Procrustes problem (Scho\u0308nemann, 1966)."}, {"heading": "2.1 Solution with the ordinary least squares (SOLS)", "text": "The analytical solution for a linear regression problem Y = PW for finding the transformation matrix P, given the input data matrix W and the result Y is:\nP = (W TW )\u22121W TY (4)\nWe can use this formula to update all matrices Pi at each iteration. The problem with this approach is that because Y is also unknown and will be updated repeatedly in the second step of the iterative algorithm, the OLS might lead to solutions where both WiPi and Y are optimized towards 0 which is not a useful solution. In order to counteract this effect we rescale Y at the start of each iteration. This is done by scaling the elements of Y so that the variance of each column of Y would be equal to 1.\n."}, {"heading": "2.2 Solution to the Orthogonal Procrustes problem (SOPP)", "text": "Orthogonal Procrustes is a linear regression problem of transforming the input matrix W to the output matrix Y using an orthogonal transformation matrix P (Scho\u0308nemann, 1966). The orthogonality constraint is specified as\nPPT = PT P = I\nThe solution to the Orthogonal Procrustes can be computed analytically using singular value decomposition (SVD). First compute:\nS =W TY\nThen diagonalize using SVD:\nST S =V DSV T SST =UDSUT\nFinally compute:\nP =UV T\nThis has to be done for each Pi during each iteration.\nThis approach is very similar to SOLS. The only difference is the additional orthogonality constraint that gives a potential advantage to this method as in the translated word embeddings WiPi the lengths of the vectors and the angles between the vectors are preserved. Additionally, we no longer need to worry about the trivial solution where P1, . . . ,Pr and Y all converge towards 0."}, {"heading": "3 Experiments", "text": "We tested both methods on a number of Word2Vec models (Mikolov et al., 2013b) trained on the Estonian Reference Corpus.1 Estonian Reference\n1http://www.cl.ut.ee/korpused/segakorpus\nCorpus is the largest text corpus available for Estonian. Its size is approximately 240M word tokens, which may seem like a lot but compared to for instance English Gigaword corpus, which is often used to train word embeddings for English words and which contains more than 4B words, it is quite small. All models were trained using a window size 10 and the skip-gram architecture. We experimented with models of 6 different embedding sizes: 50, 100, 150, 200, 250 and 300. For each dimensionality we had 10 models available. The number of distinct words in each model is 816757.\nDuring training the iterative algorithm was run until the convergence threshold th = 0.001 was reached. The number of iterations needed for convergence for both methods and for models with different embedding size are given in Table 1. It can be seen that the convergence with SOPP took significantly fewer iterations than with SOLS. This difference is probably due to two aspects: 1) SOPP has the additional orthogonality constraint which reduces the space of feasible solutions; 2) although SOLS uses the exact analytical solutions for the least squares problem, the final solution for Y does not move directly to the direction pointed to by the analytical solutions due to the variance rescaling."}, {"heading": "4 Results", "text": "We evaluate the goodness of the combined models using synonym and analogy tests."}, {"heading": "4.1 Synonym ranks", "text": "One of the common ways to evaluate word embeddings is to use relatedness datasets to measure the correlation between the human and model judge-\nments (Schnabel et al., 2015). In those datasets, there are word pairs and each pair is human annotated with a relatedness score. The evaluation is then performed by correlating the cosine similarities between word pairs with the relatedness scores. As there are no annotated relatedness datasets for Estonian, we opted to use a synonym test instead. We rely on the assumption that the relatedness between a pair of synonyms is high and thus we expect the cosine similarity between the synonymous words to be high as well.\nWe obtained the synonyms from the Estonian synonym dictionary.2 We queried each word in our vocabulary and when the exact match for this word was found then we looked at the first synonym offered by the dictionary. If this synonym was present in our vocabulary then the synonym pair was stored. In this manner we obtained a total of 7579 synonym pairs. We ordered those pairs according to the frequency of the first word in the pair and chose the 1000 most frequent words with their synonyms for the synonym test.\nFor each first word in the synonym pair, we computed its cosine similarity with every other word in the vocabulary, ordered those similarities in the descending order and found the rank of the second word of the synonym pair in this resulting list. Then we computed the mean rank over all 1000 synonym pairs. We performed these steps on both types of combined models\u2014 YSOLS and YSOPP\u2014 and also on all input models Wi. Finally we also computed the mean of the mean ranks of all 10 input models.\nThe results as shown in Table 2 reveal that the\n2The Institute of the Estonian Language, http://www. eki.ee/dict/sys/\nsynonym similarities tend to be ranked lower in the combined model obtained with SOLS when compared to the input models. SOPP, on the other hand, produces a combined model where the synonym similarities are ranked higher than in initial models. This means that the SOPP combined models pull the synonymous words closer together than they were in the initial models. The differences in mean ranks were tested using paired Wilcoxon signed-rank test at 95% confidence level and the differences were statistically significant with p-value being less than 2.2 \u00b710\u221216 in all cases. In overall, the SOPP ranks are on average 10% lower than the mean ranks of the initial models. The absolute improvement on average between SOPP and mean of W is 3476.\nAlthough we assumed that the automatically extracted synonym pairs should be ranked closely together, looking at the average mean ranks in Table 2 reveals that it is not necessarily the case\u2014 the average rank of the best-performing SOPP model is over 31K. In order to understand those results better we looked at the rank histogram of the SOPP model and one of the initial models, shown on Figure 1. Although the first bin covering the rank range from 1 to 10 contains the most words for both models and the number of synonym pairs falling to further rank bins decreases the curve is not steep and close to 100 words (87 in case of SOPP and 94 in case of the initial model) belong to the last bin counting ranks higher than 100000. Looking at the farthest synonym pairs revealed that one word in these pairs is typically polysemous and its sense in the synonym pair is a relatively rarely used sense of this word, while there are other more common senses of this word with a\ncompletely different meaning. We give some examples of such synonym pairs:\n\u2022 kaks (two) - puudulik (insufficient): the sense of this pair is the insufficient grade in high school, while the most common sense of the word kaks is the number two;\n\u2022 ida (east) - ost (loan word from German also meaning east): the most common sense of the word ost is purchase;\n\u2022 rubla (rouble) - kull (bank note in slang): the most common sense of the word kull is hawk."}, {"heading": "4.2 Analogy tests", "text": "Analogy tests are another common intrinsic method for evaluating word embeddings (Mikolov et al., 2013c). A famous and typical example of an analogy question is \u201ca man is to a king like a woman is to a ?\u201d. The correct answer to this question is \u201cqueen\u201d.\nFor an analogy tuple a : b,x : y (a is to b as x is to y) the following is expected in an embedding space to hold:\nwb\u2212wa +wx \u2248 wy,\nwhere the vectors w are word embeddings. For the above example with \u201cman\u201d, \u201cking\u201d, \u201cwoman\u201d and \u201cqueen\u201d this would be computed as:\nwking\u2212wman +wwoman \u2248 wqueen\nGiven the vector representations for the three words in the analogy question\u2014wa, wb and wx\u2014 the goal is to maximize (Mikolov et al., 2013b)\ncos(wy,wb\u2212wa +wx) (5)\nover all words y in the vocabulary. We used an Estonian analogy data set with 259 word quartets. Each quartet contains two pairs of words. The word pairs in the data set belong into three different groups where the two pairs contain either:\n\u2022 a positive and a comparative adjective form, e.g. pime : pimedam, jo\u0303ukas : jo\u0303ukam (in English dark : darker, wealthy : wealthier);\n\u2022 the nominative singular and plural forms of a noun, e.g. vajadus : vajadused, vo\u0303istlus : vo\u0303istlused (in English need : needs , competition : competitions);\n\u2022 The lemma and the 3rd person past form of a verb, e.g. aitama : aitas, katsuma : katsus (in English help : helped, touch : touched).\nWe evaluate the results of the analogy test using prediction accuracy. A prediction is considered correct if and only if the vector wy that maximizes (5) represents the word expected by the test case. We call this accuracy Hit@1. Hit@1 can be quite a noisy measurement as there could be several word vectors in a very close range to each other competing for the highest rank. Therefore, we also compute Hit@10, which considers the prediction correct if the word expected by the test case is among the ten closest words. As a common practice, the question words represented by the vectors wa, wb and wx were excluded from the set of possible predictions.\nThe Hit@1 and Hit@10 results in Table 3 show similar dynamics: combining models with SOPP is much better than SOLS in all cases. The SOPP\ncombined model is better than the mean of the initial models in all six cases. Furthermore, it is consistently above the maximum of the best initial models. The average accuracy of SOPP is better than the average of the mean accuracies of initial models by 41%, relatively (7.7% in absolute) in terms of Hit@1 and 27% relatively (10.5% in absolute) in terms of Hit@10."}, {"heading": "5 Analysis", "text": "In order to gain more understanding how the words are located in the combined model space in comparison to the initial models we performed two additional analyses. First, we computed the distribution of mean squared errors of the words to see how the translated embeddings scatter around the word embedding of the combined model. Secondly, we looked at how both of the methods affect the pairwise similarities of words."}, {"heading": "5.1 Distribution of mean squared distances", "text": "We computed the squared Euclidean distance for each word in vocabulary between the combined model Y and all the input embedding models. The distance ei j for a jth word and the ith input model is:\ndi j = \u2016Yj\u2212Ti j\u20162,\nwhere Ti = WiPi is the ith translated embedding model. Then we found the mean squared distance\nfor the jth word by calculating:\nd j = 1 r\nr\n\u2211 i=0 di j\nThese distances are plotted on Figure 2. The words on the horizontal axis are ordered by their frequency\u2014the most frequent words coming first. We show these results for models with 100 dimensions but the results with other embedding sizes were similar.\nNotice that the distances for less frequent words are similarly small for both SOLS and SOPP methods. However, the distribution of distances for frequent words is quite different\u2014while the distances go up with both methods, the frequent words are much more scattered when using the SOPP approach.\nFigure 3 shows the mean squared distances of a random sample of 1000 words. These plots reveal another difference between the SOLS and SOPP methods. While for SOPP, the distances tend to decrease monotonically with the increase in word frequency rank, with SOLS the distances first increase and only then they start to get smaller.\nOur vocabulary also includes punctuation marks and function words, which are among the most frequent tokens and which occur in many different contexts. Thus, the individual models have a lot of freedom to position them in the word embedding space. The SOLS combined model is able to bring those words more close to each other\nin the aligned space, while SOPP has less freedom to do that because of the orthogonality constraint. When looking at the words with largest distances under SOPP in the 1000 word random sample then we see that the word with the highest mean squared distance refers to the proper name of a well-known Estonian politician who has been probably mentioned often and in various contexts in the training corpus. Other words with a large distance in this sample include for instance a name of a month and a few quantifying modifiers."}, {"heading": "5.2 Word pair similarities", "text": "In this analysis we looked at how the cosine similarities between pairs of words change in the combined model compared to their similarities in the input embedding models. For that, we chose a total of 1000 word pairs randomly from the vocabulary. For each pair we calculated the following values:\n\u2022 cosine similarity under the combined model;\n\u2022 maximum and minimum cosine similarity in the initial models Wi;\n\u2022 mean cosine similarity over the initial models Wi.\nThe results are plotted in Figure 4. These results are obtained using the word embeddings with size 100, using different embedding sizes revealed the\nsame patterns. In figures, the word pairs are ordered on the horizontal axis in the ascending order of their similarities in the combined model Y .\nThe plots reveal that 1) the words that are similar in initial models Wi are even more similar in the combined model Y ; and 2) distant words in initial models become even more distant in the combined model. Although these trends are visible in cases of both SOLS and SOPP, this behaviour of the combined models to bring more similar words closer together and place less similar words farther away is more emphasized in the combined model obtained with SOLS.\nIn Figure 4, the red, green and blue \u201cbands\u201d, representing the maximum, mean and minimum similarities of the initial models, respectively, are wider on the SOLS plot. This indicates that SOPP preserves more the original order of word pairs in terms of their similarities. However, some of this difference may be explained by the fact that SOPP has an overall smaller effect on the similarity compared to SOLS, which is due to the property of SOPP to preserve the angles and distances between the vectors during the transformation."}, {"heading": "6 Discussion and future work", "text": "From the two linear methods used to combine the models, SOPP was performing consistently better in both synonym and analogy tests. Although, as shown in Figures 2 and 3, the word embeddings of the aligned initial models were more closely clus-\ntered around the embeddings of the SOLS combined model, this seemingly better fit is obtained at the cost of distorting the relations between the individual word embeddings. Thus, we have provided evidence that adding the orthogonality constraint to the linear transformation objective is important to retain the quality of the translated word embeddings. This observation is relevant both in the context of producing model ensembles as well as in other contexts where translating one embedding space to another could be relevant, such as when working with semantic time series or multilingual embeddings.\nIn addition to combining several models trained on the same dataset with the same configuration as demonstrated in this paper, there are other possible use cases for the model ensembles which could be explored in future work. For instance, currently all our input models had the same dimensionality and the same embedding size was also used in the combined model. In future it would be interesting to experiment with combining models with different dimensionality, in this way marginalising out the embedding size hyperparameter.\nOur experiments showed that the SOPP approach performs well in both synonym and analogy tests when combining the models trained on the relatively small Estonian corpus. In future we plan to conduct similar experiments on more languages that, similar to Estonian, have limited resources for training reliable word embeddings.\nAnother idea would be to combine embeddings trained with different models. As all word embedding systems learn slightly different embeddings, combining for instance Word2Vec (Mikolov et al., 2013b), Glove (Pennington et al., 2014) and dependency based vectors (Levy and Goldberg, 2014) could lead to a model that combines the strengths of all the input models. Yin and Schu\u0308tze (2016) demonstrated that the combination of different word embeddings can be useful. However, their results showed that the model combination is less beneficial when one of the input models (Glove vectors in their example) is trained on a huge text corpus. Thus, we predict that the ensemble of word embeddings constructed based on different embedding models also has the most effect in the setting of limited training resources.\nFinally, it would be interesting to explore the domain adaptation approach by combining for instance the embeddings learned from the large gen-\neral domain with the embeddings trained on a smaller domain specific corpus. This could be of interest because there are many pretrained word embedding sets available for English that can be freely downloaded from the internet, while the corpora they were trained on (English Gigaword, for instance) are not freely available. The model combination approach would enable to adapt those embeddings to the domain data by making use of the pretrained models."}, {"heading": "7 Conclusions", "text": "Although model ensembles have been often used to improve the results of various natural language processing tasks, the ensembles of word embedding models have been rarely studied so far. Our main contribution in this paper was to combine several word embedding models trained on the same dataset via linear transformation into an ensemble and demonstrate the usefulness of this approach experimentally.\nWe experimented with two linear methods to combine the input embedding models\u2014the ordinary least squares solution to the linear regression problem and the orthogonal Procrustes which adds an additional orthogonality constraint to the least squares objective function. Experiments on synonym and analogy tests on Estonian showed that the combination with orthogonal Procrustes was consistently better than the ordinary least squares, meaning that preserving the distances and angles between vectors with the orthogonality constraint is crucial for model combination. Also, the orthogonal Procrustes combined model performed better than the average of the individual initial models in all synonym tests and analogy tests suggesting that combining several embedding models is a simple and useful approach for improving the quality of the word embeddings."}, {"heading": "Acknowledgments", "text": "We thank Alexander Tkachenko for providing the pretrained input models and the analogy test questions. We also thank the anonymous reviewers for their helpful suggestions and comments."}], "references": [{"title": "Polyglot: Distributed word representations for multilingual NLP", "author": ["Al-Rfou et al.2013] Rami Al-Rfou", "Bryan Perozzi", "Steven Skiena"], "venue": null, "citeRegEx": "Al.Rfou et al\\.,? \\Q2013\\E", "shortCiteRegEx": "Al.Rfou et al\\.", "year": 2013}, {"title": "Diachronic word embeddings reveal statistical laws of semantic change", "author": ["Jure Leskovec", "Dan Jurafsky"], "venue": "In Proceedings of the 54th Annual Meeting of the Association for Computational Linguistics", "citeRegEx": "Hamilton et al\\.,? \\Q2016\\E", "shortCiteRegEx": "Hamilton et al\\.", "year": 2016}, {"title": "Statistically significant detection of linguistic change", "author": ["Rami Al-Rfou", "Bryan Perozzi", "Steven Skiena"], "venue": "In Proceedings of the 24th International Conference on World Wide Web,", "citeRegEx": "Kulkarni et al\\.,? \\Q2015\\E", "shortCiteRegEx": "Kulkarni et al\\.", "year": 2015}, {"title": "Dependency-based word embeddings", "author": ["Levy", "Goldberg2014] Omer Levy", "Yoav Goldberg"], "venue": "In Proceedings of the 52nd Annual Meeting of the Association for Computational Linguistics (Volume 2: Short Papers),", "citeRegEx": "Levy et al\\.,? \\Q2014\\E", "shortCiteRegEx": "Levy et al\\.", "year": 2014}, {"title": "Exploiting similarities among languages for machine translation. CoRR, abs/1309.4168", "author": ["Quoc V. Le", "Ilya Sutskever"], "venue": null, "citeRegEx": "Mikolov et al\\.,? \\Q2013\\E", "shortCiteRegEx": "Mikolov et al\\.", "year": 2013}, {"title": "Distributed representations of words and phrases and their compositionality", "author": ["Ilya Sutskever", "Kai Chen", "Greg S Corrado", "Jeff Dean"], "venue": "In Advances in Neural Information Processing Systems", "citeRegEx": "Mikolov et al\\.,? \\Q2013\\E", "shortCiteRegEx": "Mikolov et al\\.", "year": 2013}, {"title": "Linguistic regularities in continuous space word representations", "author": ["Scott Wen-tau Yih", "Geoffrey Zweig"], "venue": "In Proceedings of the 2013 Conference of the North American Chapter of the Association for Computa-", "citeRegEx": "Mikolov et al\\.,? \\Q2013\\E", "shortCiteRegEx": "Mikolov et al\\.", "year": 2013}, {"title": "Bilingual word embeddings from parallel and non-parallel corpora for crosslanguage text classification", "author": ["Mogadala", "Rettinger2016] Aditya Mogadala", "Achim Rettinger"], "venue": "In Proceedings of the 2016 Conference of the North American Chapter", "citeRegEx": "Mogadala et al\\.,? \\Q2016\\E", "shortCiteRegEx": "Mogadala et al\\.", "year": 2016}, {"title": "Glove: Global vectors for word representation", "author": ["Richard Socher", "Christopher D. Manning"], "venue": "In Proceedings of the 2014 Conference on Empirical Methods in Natural Language Processing,", "citeRegEx": "Pennington et al\\.,? \\Q2014\\E", "shortCiteRegEx": "Pennington et al\\.", "year": 2014}, {"title": "Evaluation methods for unsupervised word embeddings", "author": ["Igor Labutov", "David Mimno", "Thorsten Joachims"], "venue": "In Proceedings of the 2015 Conference on Empirical Methods in Natural Language Processing,", "citeRegEx": "Schnabel et al\\.,? \\Q2015\\E", "shortCiteRegEx": "Schnabel et al\\.", "year": 2015}, {"title": "A generalized solution of the orthogonal procrustes problem", "author": ["Peter H. Sch\u00f6nemann"], "venue": null, "citeRegEx": "Sch\u00f6nemann.,? \\Q1966\\E", "shortCiteRegEx": "Sch\u00f6nemann.", "year": 1966}, {"title": "Word representations: A simple and general method for semi-supervised learning", "author": ["Turian et al.2010] Joseph Turian", "Lev Ratinov", "Yoshua Bengio"], "venue": "In Proceedings of the 48th Annual Meeting of the Association for Computational Linguis-", "citeRegEx": "Turian et al\\.,? \\Q2010\\E", "shortCiteRegEx": "Turian et al\\.", "year": 2010}, {"title": "Learning Word Meta-Embeddings", "author": ["Yin", "Sch\u00fctze2016] Wenpeng Yin", "Hinrich Sch\u00fctze"], "venue": "In Proceedings of the 54th Annual Meeting of the Association for Computational Linguistics,", "citeRegEx": "Yin et al\\.,? \\Q2016\\E", "shortCiteRegEx": "Yin et al\\.", "year": 2016}], "referenceMentions": [{"referenceID": 8, "context": "Various methods have been proposed to train word embeddings from unannoted text corpora (Mikolov et al., 2013b; Pennington et al., 2014; Al-Rfou et al., 2013; Turian et al., 2010; Levy and Goldberg, 2014), most well-known of them being perhaps Word2Vec (Mikolov et al.", "startOffset": 88, "endOffset": 204}, {"referenceID": 0, "context": "Various methods have been proposed to train word embeddings from unannoted text corpora (Mikolov et al., 2013b; Pennington et al., 2014; Al-Rfou et al., 2013; Turian et al., 2010; Levy and Goldberg, 2014), most well-known of them being perhaps Word2Vec (Mikolov et al.", "startOffset": 88, "endOffset": 204}, {"referenceID": 11, "context": "Various methods have been proposed to train word embeddings from unannoted text corpora (Mikolov et al., 2013b; Pennington et al., 2014; Al-Rfou et al., 2013; Turian et al., 2010; Levy and Goldberg, 2014), most well-known of them being perhaps Word2Vec (Mikolov et al.", "startOffset": 88, "endOffset": 204}, {"referenceID": 10, "context": "First of them is based on the standard ordinary least squares solution (OLS) for linear regression, the second uses the solution to the orthogonal Procrustes problem (OPP) (Sch\u00f6nemann, 1966), which essentially also solves the OLS but adds the orthogonality constraint that keeps the angles between vectors and their distances unchanged.", "startOffset": 172, "endOffset": 190}, {"referenceID": 2, "context": "Mikolov et al. (2013a) optimized the linear regression with stochastic gradient descent to learn linear transformations between the embeddings in two languages for machine translation.", "startOffset": 0, "endOffset": 23}, {"referenceID": 2, "context": "Mikolov et al. (2013a) optimized the linear regression with stochastic gradient descent to learn linear transformations between the embeddings in two languages for machine translation. Mogadala and Rettinger (2016) used OPP to translate embeddings between two languages to perform cross-lingual document classification.", "startOffset": 0, "endOffset": 215}, {"referenceID": 1, "context": "Hamilton et al. (2016) aligned a series of embedding models with OPP to detect changes in word meanings over time.", "startOffset": 0, "endOffset": 23}, {"referenceID": 1, "context": "Hamilton et al. (2016) aligned a series of embedding models with OPP to detect changes in word meanings over time. The same problem was addressed by Kulkarni et al. (2015) who aligned the embedding models using piecewise linear regression based on a set of nearest neighboring words for each word.", "startOffset": 0, "endOffset": 172}, {"referenceID": 10, "context": "The first is based on the standard least squares solution to the linear regression problem, the second method is known as solution to the Orthogonal Procrustes problem (Sch\u00f6nemann, 1966).", "startOffset": 168, "endOffset": 186}, {"referenceID": 10, "context": "Orthogonal Procrustes is a linear regression problem of transforming the input matrix W to the output matrix Y using an orthogonal transformation matrix P (Sch\u00f6nemann, 1966).", "startOffset": 155, "endOffset": 173}, {"referenceID": 9, "context": "ments (Schnabel et al., 2015).", "startOffset": 6, "endOffset": 29}, {"referenceID": 8, "context": ", 2013b), Glove (Pennington et al., 2014) and dependency based vectors (Levy and Goldberg, 2014) could lead to a model that combines the strengths of all the input models.", "startOffset": 16, "endOffset": 41}, {"referenceID": 4, "context": "As all word embedding systems learn slightly different embeddings, combining for instance Word2Vec (Mikolov et al., 2013b), Glove (Pennington et al., 2014) and dependency based vectors (Levy and Goldberg, 2014) could lead to a model that combines the strengths of all the input models. Yin and Sch\u00fctze (2016) demonstrated that the combination of different word embeddings can be useful.", "startOffset": 100, "endOffset": 309}], "year": 2017, "abstractText": "This paper explores linear methods for combining several word embedding models into an ensemble. We construct the combined models using an iterative method based on either ordinary least squares regression or the solution to the orthogonal Procrustes problem. We evaluate the proposed approaches on Estonian\u2014a morphologically complex language, for which the available corpora for training word embeddings are relatively small. We compare both combined models with each other and with the input word embedding models using synonym and analogy tests. The results show that while using the ordinary least squares regression performs poorly in our experiments, using orthogonal Procrustes to combine several word embedding models into an ensemble model leads to 7-10% relative improvements over the mean result of the initial models in synonym tests and 19-47% in analogy tests.", "creator": "LaTeX with hyperref package"}}}