{"id": "1704.01420", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "5-Apr-2017", "title": "The Many Faces of Link Fraud", "abstract": "when tasked to find fraudulent novice social network internet users, what is a practitioner to do? traditional classification can lead to generally poor generalization and involves high misclassification given few and possibly biased labels. we tackle this problem by analyzing fraudulent behavioral patterns, featurizing users to yield strong discriminative performance, and code building algorithms to handle new and multimodal fraud types. on first, we set up honeypots, or \" dummy \" social network accounts on which we solicit fake dummy followers ( after careful irb sample approval ). we report the signs of such behaviors, including oddities in local network connectivity, account attributes, and similarities and differences across fraud providers. we discover several types of fraud behaviors, with the possibility of even more. we discuss how to leverage these insights in practice, build strongly performing entropy - based features, and propose oec ( open - ended classification ), an approach for \" future - proofing \" existing algorithms to account for the complexities of link fraud. assisting our contributions are ( a ) observations : we analyze our honeypot fraudster ecosystem and give insights regarding various fraud behaviors, ( b ) features : we engineer features which give exceptionally strong ( & gt ; 0. 95 precision / recall ) discriminative power on ground - truth reduction data, and ( c ) algorithm : we motivate and discuss oec, which reduces misclassification rate by & gt ; 18 % over baselines and routes practitioner attention to samples at high - risk of misclassification.", "histories": [["v1", "Wed, 5 Apr 2017 13:39:40 GMT  (9558kb,D)", "http://arxiv.org/abs/1704.01420v1", null], ["v2", "Thu, 6 Apr 2017 06:31:22 GMT  (9558kb,D)", "http://arxiv.org/abs/1704.01420v2", "affiliation updates"], ["v3", "Mon, 11 Sep 2017 13:36:43 GMT  (8047kb,D)", "http://arxiv.org/abs/1704.01420v3", "\"full\" version of the ICDM2017 short paper, \"The Many Faces of Link Fraud\""]], "reviews": [], "SUBJECTS": "cs.SI cs.LG", "authors": ["neil shah", "hemank lamba", "alex beutel", "christos faloutsos"], "accepted": false, "id": "1704.01420"}, "pdf": {"name": "1704.01420.pdf", "metadata": {"source": "CRF", "title": "The Many Faces of Link Fraud", "authors": ["Neil Shah", "Hemank Lamba", "Alex Beutel", "Christos Faloutsos"], "emails": ["christos}@cs.cmu.edu,", "alexbeutel@google.com"], "sections": [{"heading": "1 Introduction", "text": "What are the characteristics of fraudulent accounts in online social networks? Understanding the behavior and actions of fraudsters is paramount to building effective anti-fraud algorithms. While previous works in social network fraud detection have primarily focused on leveraging signature properties of fraudsters including temporally synchronized behavior [3], excessively dense [16] and oddly distributed [17] graph connectivity, uncommon account names [6] and spammy links [8], our work focuses on establishing the veracity and applicability of these assumptions. In doing so, we ask: do all fraudsters share the same signature behavior, or are there multiple signatures? Since fraud detection is an adversarial setting in which fraudsters are constantly adapting to in-place detection mechanisms, it is important to constantly monitor and evaluate the strategies that fraudsters are employing to profitably perform ingenuine actions to better inform future detection mechanisms.\nWe focus on one particular setting of social network fraud called link fraud which involves the use of fake, sockpuppet accounts to create links, or graph connections, which represent followership or support of target, customer entities. Fake links artificially inflate the follower count of customer accounts, making them appear more popular than they actually are. These fake links are deceptive to authentic users and hinder the performance of machine learning algorithms which rely on authentic user input to recommend relevant and useful content to their userbase.\nTo study the behavior of these fake follower accounts, we employ the use of honeypots, or dummy accounts on which we solicit fake Twitter followers sourced from various fraud service providers. Honeypots enable us to have an clear signal of fake follower activity which is not tainted by follows from real accounts. Upon setting up the honeypot accounts and purchasing fake followers, we instrument a number of carefully\nar X\niv :1\n70 4.\n01 42\n0v 3\n[ cs\n.S I]\n1 1\nSe p\n20 17\nengineered tracking scripts which poll Twitter API to store details including account relationships and attributes over a period of time. This allows us to collect a rich representation of the fraudster ecosystem which we subsequently analyze.\nIn this work, we make and explore the following key observation:\nKey Insight (Fraud Multimodality). There are multiple types of link fraud which exhibit notably different network structures and patterns in account attribute settings.\nSpecifically, we focus on studying and characterizing the network connectivity properties and attribute distributions which are exhibited by fake followers involved in these different types of fraud. We detail a number of further observations on how these types of behavior induce different, odd network structures and suspicious patterns in account attributes. Figure 1 shows the contrast in follower connectivity of a genuine account versus two distinct types of fraudsters. Through our analysis, we additionally engineer strong features which enable us to discriminate these fraudulent users from genuine ones using novel (first-order) follower entropy features.\nSummarily, our work offers the following notable contributions: \u2022 Instrumentation: We detail our experimental setup and data scraping tools which gather a wealth of\nTwitter user information while respecting API rate limits. \u2022 Observations on Fraud Multimodality: We discover that link fraud is not unimodal and instead\nhas multiple types, and identify and characterize two such types: freemium and premium, with the possibility of more. \u2022 Features: Based on the above observations, we carefully engineer novel, entropy-based features\nwhich allow us to accurately discern fraudsters from genuine users in our ground-truth Twitter dataset with near-perfect F1-score."}, {"heading": "2 Related Work", "text": "We categorize related work into two categories: underground market studies and fraud detection approaches. Underground Markets: Prior works have shown the use of fake accounts for followers in social media [21], phone-verified email accounts [20], Facebook likes [3], etc. These accounts are often used to spread spam [8, 7] and misinformation [9, 10]. [15] estimates that the fake follower market produces $360 million per year. Recently, several works have studied the existence of underground online markets where these fraudulent actions can be purchased \u2013 [22, 14] explore underground markets providing fake content, reviews and solutions to security mechanisms. [21] studies several fraud providers over time and describes trends in pricing, account names and IP diversity. [19] compares growth rates of accounts with legitimate and fraudulent followers. [1] observes the varying retention and reliability of various fraud providers. Comparatively, our work is the first to identify major social graph differences between fraud types and across providers, and propose novel entropy-based features for capturing these behaviors. Fraud Detection: [2, 12] use profile features to detect spammers on Twitter. [18] passively analyzes accounts with promiscuous following behavior and builds a classifier using profile and messaging features. [4, 23] aim to find fake accounts in social networks via a generative stochastic model and a random-walk based method respectively \u2013 both assume small cuts between fake and genuine nodes. [3, 5] use graphtraversal based methods to find users with temporally synchronized actions on Facebook. [17, 11, 16] propose spectral methods which identify dense or odd graph structures indicative of fraud."}, {"heading": "3 Know Thy Enemy: Characterizing Link Fraud", "text": "In this section, we discuss some preliminaries about instrumentation, data collection and relevant metrics, and next illustrate numerous insights about network connectivity and account attributes of link fraudsters."}, {"heading": "3.1 Setup and Data Collection", "text": "We first discuss how we identified and purchased followers from target fraud service providers, and next detail the scraping task, followed by preliminaries."}, {"heading": "3.1.1 Purchasing Fake Followers", "text": "There are a number of different fraud service providers easily accessible and available on the web. We begin by identifying these services so we can purchase fake followers from them. To identify these services, we used Google search and queried using keywords such as \u201cbuy Twitter followers.\u201d Combining the search results, we obtained a list of websites which claim to provide these services.\nFrom surveying the websites on this list, we notice there are several prevalent models of service \u2013 we categorize these into two frameworks: premium and freemium. Premium services offer customers multiple tiers of follower counts (1K, 5K, 10K, etc.) for various amounts of money and ask only for the customer\u2019s Twitter username and a form of payment. Freemium services offer both a paid option as in premium services, but additionally offer a free option which does not ask the user for money, but instead requires the user to provide their Twitter login details to the service. In return for these details, the services promise to direct a small number of followers to the account.\nWe next setup a pool of honeypot accounts by repeating the Twitter account creation process a number of times using monikers from online screenname generators. We found that to create a sizeable pool of honeypots, we needed to distribute the account creation over several IPs in order to avoid phone verification prompts. Upon setting up the pool of honeypots, we purchased basic follower packages from several premium and paid freemium services, avoiding rarely used ones with low Alexa rank. Summarily, we bought\n1K followers from 8 different services (4 freemium, 4 premium) to 2 honeypot accounts per service. We chose to purchase 2 honeypot accounts per service instead of only 1 in order to examine the overlap dynamics of fake links to multiple customers. The final list of the services we used, service types, costs and their follower counts are summarized Table 1. Honeypots were created on the same day, and follower purchases were all done at the same time. Furthermore, the honeypots attracted no followers by themselves prior to the purchases. As a result, we posit that all followers of the honeypots are fake."}, {"heading": "3.1.2 Instrumentation Details", "text": "Reproducibility: Code available at https://goo.gl/qMBWim. We use the REST API to scrape data relevant to our operation from Twitter. As the API heavily ratelimits various data resource types, it is only feasible to extract a limited amount of information as an end-user. Prior to purchasing fake followers, we start a number of Python scripts which poll the API and insert data into a Postgres database: Honeypot account details: Every hour, we collect public details for each honeypot Twitter account including number of friends and followees, number of favorites, number of Tweets, language, etc. Honeypot account follower IDs: Every 12 hours, we collect the list of follower IDs for each honeypot. Since the honeypots were created with empty profiles, we can safely assume that all followers to these accounts were fraudulent and purchased. Honeypot account follower details: Every day, we extract public details for each of the accounts in the honeypot follower list. Honeypot account followers\u2019 friends/followers IDs: Every day, we collect the list of friend and follower IDs of the honeypot followers to examine their other connectivity. Honeypot account followers\u2019 friends/followers details: Every 3 days, we extract public details for each of the friends and followers of the honeypot followers to gain more information about them.\nAccount details requests are limited to 15 requests per 15 minute window, and each request returns details for up to 100 accounts. Similarly, ID list requests are limited to 180 requests per 15 minute window,\nand each request returns up to 5000 account IDs. Hence, it is relatively easy to scrape the first-order honeypot account follower IDs and details without exceeding the rate limit, but collecting details for the second-order followers is a bottleneck. Since the number of nodes to collect information for can explode substantially even at the second-order, we limit collection to <100K friends and followers for each of the given follower of the honeypot account. We determine periodicity values empirically using back-of-the-envelope calculations. While this data could be collected slowly using a single Twitter API key, we speed up the process by using multiple keys and cycling keys upon resource exhaustion."}, {"heading": "3.1.3 Preliminaries", "text": "In the remainder of our work, we conduct analysis on two types of networks: the ego network and boomerang network. Ego network: An ego network (or egonet) traditionally consists of a central node called the ego, as well as the neighboring nodes and the relationships (edges) between them. Egonets can essentially be considered as a local graphical representation of a node within the context of the broader, global graph and depict how the surrounding nodes are connected. For our purposes, we examine per-service egonets, where we consider the union of the individual egonets of both honeypot accounts per service. Thus, in our case, each per-service egonet is actually comprised by 2 egos (the honeypot accounts), the union of both honeypots\u2019 neighboring nodes (the purchased, fake followers) and the relationships between them. The per-service egonet representation allows us to both individually study the per-honeypot egonets as well as any interactions between them. That is, if the two honeypots for each service have distinct sets of neighboring nodes, then their per-honeypot egonets will also be distinct. Conversely, if any nodes are neighbors of both honeypots, the associated per-honeypot egonets will be conjoined. Various levels of overlap suggest differences with regards to how services reuse accounts to deliver fake links. Boomerang network: Drawing conclusions from per-service egonet analysis can be deceiving in the sense that while it does give insights into the internal relationships between the fake followers and honeypots, it does not consider the external relationships formed by the fake followers. As such, it is unable to give us a full perspective on the utilization of these fake followers. In order to gain the requisite perspective, we conduct analysis of the proposed boomerang network. We define the per-service boomerang network to be comprised of the per-service egonet in addition to the out-links of the follower nodes \u2013 the structure is reminiscent of a boomerang, in that it is comprised of the nodes \u201c1 step back and 1 step forward\u201d with respect to the honeypot account. Thus, the per-service boomerang network gives us an additional layer of information on top of the per-service egonet: connections to the other accounts followed by the honeypot\u2019s fake followers.\nWe further use the density, bipartite density, transitivity and reciprocity metrics to summarize and describe network structure, and overlap coefficient and multiple systems estimation (MSE) to characterize network overlap. Density: We define density as\n#edges\n#nodes \u00b7 (#nodes \u2212 1) Density represents the fraction of existing to possible total edges, with density 1 indicating a complete graph. Bipartite density: We define bip. density between sets A and B as\n#edges between A and B (#nodes in A) \u00b7 (#nodes in B)\nBipartite density captures the fraction of existing to possible edges between two sets of nodes, with bipartite density 1 indicating a complete bipartite graph.\nTransitivity: We define transitivity as"}, {"heading": "3 \u00b7 #triangles #connected triples", "text": "Transitivity denotes the degree of triadic closure, with transitivity 1 indicating that all connected triples of nodes are also triangles. Reciprocity: We define reciprocity as\n#bidirectional edges\n#edges\nReciprocity conveys the relative frequency of bidirectional edges, with reciprocity 1 indicating that all edges are bidirectional. Overlap coefficient: We define overlap coef. between A and B as\n|A \u2229 B| min(|A|, |B|)\nOverlap coefficient indicates the proportion of members that overlap between sets, with overlap coefficient 1 indicating that A \u2286 B or B \u2286 A and 0 indicating A \u2229 B = \u2205. Multiple systems estimation: We use MSE to estimate population size from two randomly sampled setsA and B as\n|A| \u00b7 |B| |A \u2229 B|\nIntuitively, if A and B have low overlap, the total population size is much larger than if they have high overlap.\nUpon shifting our discussion to account attributes distributions, we use entropy as a means to capture distributional skew. Entropy: We define entropy for a distribution X with n outcomes (x1 . . . xn) as\n\u2212 n\u2211 i=1 P (xi) \u00b7 log2 P (xi)\nEntropy measures the unpredictability of a distribution in bits of information, with entropy of 0 bits indicating concentration of 100% probability on a single outcome, and entropy of log2 n bits indicating uniform distribution of probability between n outcomes."}, {"heading": "3.2 Network Observations", "text": "We first focus on studying the local network properties of fraudulent accounts. Targeting oddities in network connectivity is a central theme in many link fraud detection approaches, as the mission constraints of delivering fake links to customers necessarily affects graph structure. But what are these changes? In this section, we leverage social network analysis tools to characterize effects of fraud on the surrounding network structure, and show the similarities and differences between premium and freemium fraud. We detail analyses on two types of induced subgraphs: the ego network and more expansive boomerang network."}, {"heading": "3.2.1 Ego Network Patterns", "text": "Figure 2 shows the per-service egonets for each of the 8 providers, with increased node size and darkness corresponding to higher in-degree. The honeypots (egos) are the two large and dark orange colored nodes in each subfigure. Cursory analysis reveals a notable difference in egonet network structure between freemium and premium providers. We see that the premium egonets (first row) have a star/bipartite structure: each honeypot node is the hub of a star, and the satellite nodes overlap and are disconnected. Conversely, freemium egonets have denser, near-clique type structure which suggests denser connectivity between the neighboring nodes.\nThe statistics for premium service egonets in Table 2 (top) further lend credence to the visual differences we observe from Figure 2, giving us the following insight:\nInsight 1 (Egonet Sparsity). Premium fake followers rarely follow each other, resulting in sparse egonet structure. Freemium fake followers have dense egonet structure.\nThis is substantiated by the low density and node to edge ratios across premium providers. Of these, fastfollowerz and intertwitter have an order of magnitude greater density than devumi and twitterboost. This is substantiated by the 1:2 node to edge ratio in the former 2 providers as compared to the near 1:1 ratios of the latter 2. fastfollowerz and intertwitter also have marginally higher transitivity values compared to the 0 transitivity of devumi and twitterboost, indicating that the former 2 have few triangles between the fake follower nodes whereas the latter 2 have none. We also observe no reciprocal links in these providers, indicating only one-way relationships.\nConversely, the freemium statistics in Table 2 (bottom) support that freemium fake followers have dense egonet structures. Freemium providers are an order of magnitude denser than the densest premium egonets\n\u2013 all 4 providers have 6-7% density. While not shown in interest of space, the per-honeypot egonets were each found to have an even higher 11-14% density individually. The 1:50 node to edge ratios substantiate this high density. We also notice that transitivity values are much higher for freemium providers, suggesting that an unusually high 28-30% of wedges are also triangles. Given that density and transitivity are equal in random graphs, the freemium egonets do not appear to be random, but are likely composed of dense subregions which are themselves sparsely connected. The link structure reflects how freemium providers trade follows between accounts (random partitions, biased selection, account similarity, etc.) Furthermore, all 4 providers have similar, high reciprocity of 40-42% suggesting frequent \u201cfollow-back\u201d behavior. Rationale: The freemium services accumulates a pool of free accounts, and hence trading follows enables each free user to gain some followers. As a result, such behavior creates a denser subgraph, but are also used by providers to deliver the follower demands of paid customers and turn a profit. Comparatively, premium providers are unable to use free users\u2019 accounts and must create fake accounts.\nThese insights pose an interesting question: as we expect fraudsters to act in a manner that maximizes profit, what motivates the differences in structure between freemium and premium providers? We propose an answer: If we consider that each account has a budget of edges it can create without being suspended, it seems that premium providers greatly underutilize accounts compared to freemium ones. This is because for fraudsters, delivering more links while avoiding suspension is strictly better as it means that they can either serve more customers or artificially inflate their own popularity."}, {"heading": "3.2.2 Boomerang Network Patterns", "text": "Figure 3 shows 2 boomerang networks, one for bigfolo and twitterboost, each representative of a different fraud strategy. Again, honeypot accounts are amongst the large, dark nodes with high in-degree, and the lighter, smaller nodes are fake followers or their friends. Note that the layout clusters nodes based on similar linkage, so groups of nodes visually close share connectivity properties. As with egonets, we again see a stark contrast in the boomerang structure of these two providers. Figure 3a shows the dense internal connectivity of bigfolo\u2019s fake followers (as we saw in Figure 2h), in conjunction with the sparser and less compact external connectivity to friends. Conversely, Figure 2d shows sparse internal connectivity between twitterboost\u2019s fake followers on the left, but dense near-bipartite external connectivity to the customers (including honeypots) on the right.\nTable 3 (top) gives summary statistics about premium boomerang networks, which substantiate the following:\nInsight 2 (Boomerang Density). Premium fake followers are frequently reused to follow customers, resulting in dense external connectivity in the boomerang network. Freemium fake followers are less reused to follow customers, and hence have sparse external connectivity.\nInterestingly, we see that the relative values of these statistics are inverted for the boomerang networks from the egonets \u2013 unlike for egonets where the density metric was an order of magnitude higher for freemium providers, the bipartite density in boomerang networks is instead an order of magnitude higher for the premium providers.Note that the premium providers\u2019 bipartite density indicates that nearly 1-2% (a huge amount) of all possible edges between the fake followers and their combined set of friends exists. The node to edge ratios are also much higher for premium providers \u2013 fastfollowerz and intertwitter are 1:14, and devumi and twitterboost are roughly 1:37 compared to only 1:2 for the freemium providers.\nThe freemium boomerang network statistics in Table 3 (bottom) again establishes the second part of the insight. This is further substantiated by the observation that freemium providers have an order of magnitude lower bipartite density than premium ones. We also observe that freemium boomerang networks have higher number of nodes than the premium counterpart. This is intuitive as freemium followers are otherwise genuine accounts, they have an expansive set of true friends, whereas premium fake followers are all synthetic accounts."}, {"heading": "3.2.3 Network Overlap Patterns", "text": "In our analysis thus far, we noticed that various providers have different levels of evident overlap in the fake followers they deliver between their 2 honeypots. How extensive is this overlap? Do these providers reuse accounts in the same ways? Furthermore, is there any overlap between the followers across providers? Here, we shed light on these questions.\nIntra-Network Patterns First, we study intra-network overlap, describing overlap between the fake follower nodes within each service. Table 4 shows the overlap coefficients between the honeypot followers for each service. Assuming the followers for each honeypot are randomly sampled from the service\u2019s account pool, we additionally compute the estimated total number of fake accounts currently in the fraud provider\u2019s hands using MSE.\nThe various degrees of overlap and commensurate estimates of pool size suggest the following insight:\nInsight 3 (Varying Delivery Structure). Service providers have varying methods for account reuse in efforts to to distribute suspicion across their account pools.\nWe observe that the freemium providers tend to have a high, 0.8 overlap which results in an estimated pool size slightly larger than either of the two sets of honeypot followers. However, the premium providers have an interesting split which reveals that fastfollowerz and intertwitter have very high, near 1.0 overlap, resulting in the pool size being roughly equal to each set of followers. This indicates that the pool is reused\nalmost exactly for multiple customers. Conversely, devumi and twitterboost have near 0 overlap. As a result, we estimate that the pool size is quite large, containing over 55K total fake accounts.\nWhile we cannot be certain without further investigation, these providers likely have different means of selecting and shifting the pool of active fake followers. For example, the pools used in fastfollowerz and intertwitter may cycle between a number of different \u201csub-pools\u201d based on time, customer account features, or random choice. Conversely, the evidently much larger estimated pool size for devumi and twitterboost suggests that they may each have a single, large fixed pool of usable accounts from which followers are sampled regardless of other factors.\nInter-Network Patterns Thus far, we have established that providers reuse multiple follower accounts across customers in order to turn a better profit. But how far does this reuse go? Are any accounts responsible for delivering fake links to customers from different providers? To answer these questions, we study the pairwise inter-network overlap of followers between providers.\nTable 5 shows an 8 \u00d7 8 matrix with the pairwise overlap coefficients. Given the number of nonzero entries, we draw the following surprising insight:\nInsight 4 (Collusion). Service providers seem to collaborate with and draw from each other to commit fraudulent actions.\nWe notice that there is substantial overlap within the freemium and premium providers. While fastfollowerz and intertwitter share no accounts with the other premium providers, devumi and twitterboost have a .07 overlap. Comparatively, all 4 freemium providers have a large 0.6-0.7 overlap, indicating that most of their fake accounts are the same. Furthermore, the set of followers for freemium and premium providers have 0 overlap, substantiating that followers in freemium providers are otherwise real accounts whereas those in premium providers are synthetic.\nNonzero overlap between providers is an interesting finding \u2013 it is indicative of either a willingness to share follower accounts between fraud providers, or commonality in leaked or hijacked accounts. Upon further inspection, we notice a number of suggestive findings: \u2022 Overlapping providers shared domain WHOIS protectors. \u2022 Overlapping premium providers use the same Yoast SEO plugin and stylesheets. \u2022 All freemium providers have two-column sites, advertised up to 30K followers, and priced from \u00a39.99. \u2022 All fremium providers contained the line: \u201c[service] is Not Affiliated With OR Endorsed By Twit-\nter.com.\u201d"}, {"heading": "3.3 Attribute Observations", "text": "In this section, we study the similarities and differences in account attributes of fake followers. Table 6 shows per-service, per-attribute entropy in bits for a variety of user attributes. The account attributes include creation year, default profile and profile image booleans, favorites count, followers count, friends count, lists count, statuses count, geolocation enabled boolean, language identifier, protected statuses boolean, UTC timezone, and a Twitter verification boolean which corresponds to high-profile, \u201cfamous\u201d accounts. These attributes have varying outcome spaces. Creation date has 11 possible years (2006-2016), since Twitter was\nfounded in 2006. Booleans have 2 possible outcomes (T,F). We encountered 35 different language identifiers and 39 UTC timezone settings. For count features, we logarithmically discretized the space into 32 bins from 1 to 1M to capture the wide range of activity levels. For each service, we aggregate attribute values and compute the entropy over the outcomes. The table shows the actual sample entropy in addition to the maximum possible (uniform) entropy. As previously mentioned, lower entropy indicates high synchronicity between followers. Note that a difference in entropy of 1 bit corresponds to twice the predictability.\nThe most striking insight from Table 6 is as follows:\nInsight 5 (Entropy Gap). Premium service providers deliver followers with low entropy, high regularity attributes, whereas freemium service providers have more attribute disparity.\nWe notice that the premium providers have substantially lower entropy values in many attributes versus freemium providers, and even near 0 entropy in other attributes like geolocation. We elaborate on the specific differences next."}, {"heading": "3.3.1 Account Creation", "text": "devumi, twitterboost and fastfollowerz have very low creation year entropy compared to freemium providers. While both freemium and premium accounts tend to be created more recently (perhaps because of higher suspension rate in older accounts), premium providers have a heavy bias towards recently created accounts (>2014)."}, {"heading": "3.3.2 Profile Defaults", "text": "fastfollowerz has a much lower entropy than other providers in terms of default profile \u2013 we found that >84% of these accounts did not have a default profile, whereas default profiles are actually more common than not in freemium accounts. Surprisingly, fastfollowerz, devumi and twitterboost also have near 0 entropy for profile image compared to the much higher entropy for freemium providers. We find that premium followers almost always set a custom image, suggesting that the information was fabricated or stolen from real users. Conversely, default profile images are common for freemium service accounts \u2013 this is intuitive, most real users do not fully customize their profiles."}, {"heading": "3.3.3 Action Counts", "text": "devumi and twitterboost have much lower entropy for action counts (favorites, followers, friends, lists and statuses) compared to freemium providers. fastfollowerz also exhibits lower entropy. As Figure 1d shows, there is even more variation between premium providers. Figure 1d shows that intertwitter (P1 \u201csmart\u201d) follower counts are disparate and closer to genuine users\u2019 entropy, unlike other premium fraudsters (P2 \u201cna\u00efve\u201d) who behave robotically. Comparatively, freemium followers have lower follower count entropy compared to genuine ones, which is intuitive as while the freemium follows are real accounts, their\nfollower counts are not independent from each other due to the follows traded between themselves. Figure 4 shows the rank-frequency plots for follower counts for various follower types. The plots substantiate our observations on entropy, and also show that different user types exhibit differences with regards to powerlaw fit, which is expected for skewed distributions on social networks. While entropy values in this paper are computed empirically using the samples from Table 2, accounts on real networks have varying follower counts, leading to different entropy estimates even when drawn from the same distribution. Fortunately, we can intimately relate sample size and entropy of a power-law distribution in a closed form using the Euler-Maclaurin formula as below:\nLemma 1 (Power-Law Entropy). The entropyH of a size |V | sample from a PL distribution P (r) = C \u00b7r\u2212a is given by:\nH \u2248 \u2212C \u00b7 log2(C) \u00b7 (|V | 1\u2212\u03b1 \u2212 1) 1\u2212 \u03b1 + \u03b1 \u00b7 C \u00b7\n( \u2212|V |1\u2212\u03b1 \u00b7 ((\u03b1\u2212 1) \u00b7 ln(|V |) + 1) + 1 ) (\u03b1\u2212 1)2 \u00b7 ln(2)\nProof.\nH = \u2212 |V |\u2211 r=1 Cr\u2212\u03b1 \u00b7 log2C \u00b7 r\u2212\u03b1\n\u2248 \u2212 \u222b V 1 C \u00b7 r\u2212\u03b1 \u00b7 log2Cdr + \u03b1 \u00b7 C \u222b V 1 r\u2212\u03b1 \u00b7 log2 rdr \u2248 \u2212C \u00b7 log2C \u00b7 r 1\u2212\u03b1\n1\u2212 \u03b1\n\u2223\u2223\u2223V 1 + \u03b1 \u00b7 C ( \u2212r1\u2212\u03b1 ((\u03b1\u2212 1) \u00b7 ln(r) + 1) (\u03b1\u2212 1)2 \u00b7 ln(2) \u2223\u2223\u2223V 1 ) \u2248 \u2212C \u00b7 log2(C) \u00b7 (|V |\n1\u2212\u03b1 \u2212 1) 1\u2212 \u03b1 +\n\u03b1 \u00b7 C \u00b7 ( \u2212|V |1\u2212\u03b1 \u00b7 ((\u03b1\u2212 1) \u00b7 ln(|V |) + 1) + 1 ) (\u03b1\u2212 1)2\nwhere C = 1/H|V |,\u03b1 (inverse of the V th harmonic number of order \u03b1).\nThis estimate enables us to gauge how close varying-sized samples are to the original power-law. This is especially useful for practitioners aiming to gauge what the entropy of an account\u2019s followers\u2019 attributes theoretically should be according to the number of followers assuming a given power-law fit, versus the empirical estimate. If these are not close, one can deduce that the account\u2019s followers do not obey the expected power-law fit and therefore may be suspicious. This procedure is computationally more efficient and likely more accurate than fitting a separate power-law for each of the attributes across followers of each account.\nWe noticed similar patterns in entropy for status and favorite counts as well. The lower entropy of action counts characteristic of premium providers stems from the variety of options premium providers have for Twitter engagement \u2013 in addition to fake followers, the premium providers also offer fake retweets and favorites services. Thus, premium providers are incentivized to reuse accounts for multiple types of fraud, and when done na\u00efvely result in high synchrony in \u201cserviceable\u201d attributes."}, {"heading": "3.3.4 User Settings", "text": "fastfollowerz, devumi and twitterboost all have near 0 geolocation, language, and tweet protection entropy. Of these, all devumi and twitterboost accounts use the US English language setting, have geolocation disabled and do not protect tweets. fastfollowerz has a slightly higher language entropy of .06, but we found that all fastfollowerz accounts were either using US or GB English, suggesting a heavy premium bias\nfor English accounts. We also found that premium followers almost entirely have USA timezones. \u201cSmart\u201d intertwitter followers\u2019 high language entropy from Figure 1d suggests an aim to better camouflage user attributes compard to the \u201cna\u00efve\u201d providers. Given that intertwitter also has some verified accounts, we hypothesize that the accounts may be hijacked ones. This is in contrast with freemium providers, which have much higher frequency of enabled geolocation, variance in language and protected tweets. Figure 1d also shows that freemium followers tend to appear similar to genuine ones as they are otherwise real user accounts. However, we find that freemium followers have higher language entropy than genuine ones, as freemium followers are spread over many languages whereas genuine followers tend to disproportionately speak their followee\u2019s language (i.e. if a user speaks Spanish, most of his followers speak Spanish).\nFurthermore, all 4 freemium providers and twitterboost/devumi have extremely similar attribute entropy over their fake followers respectively, further substantiating Insight 4.\nIn addition to the attributes reported in Table 6, we also studied the 160-character user description field.\nThe description field essentially contains the high-level summary of what the user aims to appear as to other Twitter users, and is thus interesting to analyze. We ask: what, if any, are the differences between freemium and premium follower descriptions?\nFigure 5 shows two wordclouds, aggregated over description text across all premium and freemium followers respectively. Font size corresponds to relative frequency in the text. For clarity, we remove common stopwords. We arrive at the following insight:\nInsight 6 (Clout vs. About). Freemium followers tend to have descriptions focusing on social media clout, whereas premium followers tend to talk about themselves.\nFigure 5a (premium), has words like \u201cmusician,\u201d \u201clover,\u201d \u201cwriter\u201d and \u201csports\u201d, corresponding to descriptive personal details \u2013 these are likely copied from genuine users. Conversely, Figure 5b (freemium) has terms like \u201csnapchat,\u201d \u201cyoutube,\u201d and \u201cinstagram\u201d, as these users try to increase clout by advertising their other, real social media pages, i.e., \u201cfollow me on snapchat.\u201d"}, {"heading": "4 Assessing Discriminative Power of Entropy Features", "text": "Thus far, we have highlighted a number of distributional differences between fraudulent and genuine users. Can we leverage these differences to discriminate user behaviors? In this section, we evaluate a number of attribute features on their discriminative power in a supervised setting.\nWe classified the engineered entropy features from Table 6 into the following groups based on feature type: \u2022 Connection: # Followers, # Friends \u2022 Activity: # Statuses, # Lists, # Favorites \u2022 Profile: Default Profile (and Image), Verified, Created \u2022 Geography: Language, UTC \u2022 All: the union of all above features Note that while we nominally refer to these features as above, they refer to the entropy of the feature over account followers, rather than raw values of the account itself. We evaluate these features using binary classification (genuine vs. fraudulent) as is traditionally done in practice. We use a Support Vector Machine (SVM) with radial basis function (RBF) kernel and 10-fold cross validation as the classifier of choice, but any out-of-box classification method could be used. Our carefully assembled ground-truth dataset consists of 307 fraudulent users and 200 genuine users, whose features are computed over their followers. The fraudulent accounts are a combination of premium and freemium\nhoneypots as well as accounts whose profiles have been listed on freemium providers\u2019 websites as users of the service. We define our fraudulent set over this multitude of account types with various properties in order to demonstrate generality. The genuine accounts belong to well-known academics in machine learning and data mining. We avoid using randomly sampled Twitter users, as previous works have shown a non-trivial amount of fake accounts on Twitter which may excessively corrupt our ground-truth genuine set. In practice, getting additional ground-truth labels is a very costly endeavor and requires careful manual inspection for each individual case.\nFigure 6 shows the relative performance of our feature groups in terms of overall precision and recall. We notice that Connection features perform comparatively poorly, Profile and Activity features perform better, Geography performs even better, and the combination All performs near-ideal with .98 precision and .95 recall (much higher recall than supervised approaches which use raw account features for Twitter spam classification [13]). Thus, we conclude that our proposed entropy features are highly reliable in discerning genuine from fraudulent users. The added benefit of using the entropy-based features is that it is much harder to control for from the fraudster\u2019s perspective \u2013 this is because while the fraudster has significant control over his own account\u2019s properties, he has limited ability to influence who follows him."}, {"heading": "5 Discussion", "text": "The analysis in this work has a number of important implications on fraud detection in practice. We detail these below. Multimodal Detection: Using individual signatures to find one type of fraud tends to be at the expense of finding other types. For example, clique detection primarily focuses on freemium fraud, whereas bipartite core detection focuses on premium fraud. Using complementary methods is a promising strategy. Importance of Time: Varying account reuse policies makes temporal granularity an important considera-\ntion in graph-based fraud detection. While analysis on a low granularity graph can reveal dense fraudulent structure in frequent reuse regimes, it may never do so for low reuse regimes. Higher granularity can be useful in these cases. Deceptive Account Attributes: Using individual account attributes to label fraudsters is of limited use. Our work suggests that most freemium fraudsters are actually real users with real profile attributes \u2013 they may be resistant to such detection schemes. Conversely, leveraging an account\u2019s follower\u2019s attributes shows promise in bridging this gap. Total vs. Partial Fraud: Different types of fraud may call for different penalties. While the implication \u201chas one fake link \u2192 has all fake links\u201d seems true for premium fraudsters, it is not for freemium ones. Removing fake links vs. suspending fake accounts is a promising way to penalize such fraudsters and minimize false positives.\nThe need for multimodal anti-fraud mechanisms suggests a shift in the detection paradigm from drawing a two-class boundary between genuine and \u201cone-hat-fits-all\u201d fraudulent users, to a more complex multiclass boundary between genuine, premium fraudulent, freemium fraudulent, and other fraud types which may be discovered in the future."}, {"heading": "6 Conclusion", "text": "In this work, we aimed to study the nature of modern link fraud regimes. To this end, we setup honeypot accounts on Twitter, purchased fake followers for them from a variety of fraud-provoding services, and carefully instrumented a data scraping process to capture their behaviors. Specifically, we studied the local network connectivity of fake followers via the egonet and proposed boomerang networks, as well as attribute distributions over profile features and account actions. Our analyses showed that there are multiple types of link fraud (we discover at least two: freemium and premium) with varying behaviors regarding internal and external network connectivity, disparity in attribute homogeneity across followers, and differences in descriptive word-usage in Twitter bios. Furthermore, we found fascinating evidence that service providers have varying types of account-reuse policies and seem to collude with each other on a number of fronts. Furthermore, we proposed the use of first-order entropy features taken across account followers\u2019 attributes to discern fraudulent from genuine accounts, and showed that these features were able to attain near-perfect F1 score on our ground-truth dataset. Holistically, our work offers several implications for practical fraud detection including multimodality of fraud behaviors, the importance of temporally sensitive algorithms, usefulness of first-order versus zeroth-order features, and disadvantages of account-based versus link-based fraud targeting."}], "references": [{"title": "What they do in shadows: Twitter underground follower market", "author": ["A. Aggarwal", "P. Kumarguru"], "venue": "In PST,", "citeRegEx": "1", "shortCiteRegEx": "1", "year": 2015}, {"title": "Detecting spammers on twitter", "author": ["F. Benevenuto", "G. Magno", "T. Rodrigues", "V. Almeida"], "venue": "In CEAS,", "citeRegEx": "2", "shortCiteRegEx": "2", "year": 2010}, {"title": "Copycatch: stopping group attacks by spotting lockstep behavior in social networks. In WWW, pages 119\u2013130", "author": ["A. Beutel", "W. Xu", "V. Guruswami", "C. Palow", "C. Faloutsos"], "venue": "International World Wide Web Conferences Steering Committee,", "citeRegEx": "3", "shortCiteRegEx": "3", "year": 2013}, {"title": "The latent community model for detecting Sybils in social networks", "author": ["Z. Cai", "C. Jermaine"], "venue": "In NDSS,", "citeRegEx": "4", "shortCiteRegEx": "4", "year": 2012}, {"title": "Uncovering large groups of active malicious accounts in online social networks", "author": ["Q. Cao", "X. Yang", "J. Yu", "C. Palow"], "venue": "In CCS,", "citeRegEx": "5", "shortCiteRegEx": "5", "year": 2014}, {"title": "Using naive bayes to detect spammy names in social networks", "author": ["D.M. Freeman"], "venue": "In AISec,", "citeRegEx": "6", "shortCiteRegEx": "6", "year": 2013}, {"title": "Detecting and characterizing social spam campaigns", "author": ["H. Gao", "J. Hu", "C. Wilson", "Z. Li", "Y. Chen", "B.Y. Zhao"], "venue": "In SIGCOMM,", "citeRegEx": "7", "shortCiteRegEx": "7", "year": 2010}, {"title": "spam: the underground on 140 characters or less", "author": ["C. Grier", "K. Thomas", "V. Paxson", "M. Zhang"], "venue": "In CCS,", "citeRegEx": "8", "shortCiteRegEx": "8", "year": 2010}, {"title": "$1.00 per rt #bostonmarathon #prayforboston: Analyzing fake content on twitter", "author": ["A. Gupta", "H. Lamba", "P. Kumaraguru"], "venue": "In Proceedings of the eCrime Researchers Summit (eCRS),", "citeRegEx": "9", "shortCiteRegEx": "9", "year": 2013}, {"title": "Faking sandy: Characterizing and identifying fake images on twitter during hurricane sandy", "author": ["A. Gupta", "H. Lamba", "P. Kumaraguru", "A. Joshi"], "venue": "In WWW, WWW \u201913 Companion,", "citeRegEx": "10", "shortCiteRegEx": "10", "year": 2013}, {"title": "Catchsync: catching synchronized behavior in large directed graphs", "author": ["M. Jiang", "P. Cui", "A. Beutel", "C. Faloutsos", "S. Yang"], "venue": "In KDD,", "citeRegEx": "11", "shortCiteRegEx": "11", "year": 2014}, {"title": "Uncovering social spammers: Social honeypots + machine learning", "author": ["K. Lee", "J. Caverlee", "S. Webb"], "venue": "In SIGIR,", "citeRegEx": "12", "shortCiteRegEx": "12", "year": 2010}, {"title": "Spam detection on twitter using traditional classifiers", "author": ["M. Mccord", "M. Chuah"], "venue": "In ICATC,", "citeRegEx": "13", "shortCiteRegEx": "13", "year": 2011}, {"title": "Re: Captchas: Understanding captcha-solving services in an economic context", "author": ["M. Motoyama", "K. Levchenko", "C. Kanich", "D. McCoy", "G.M. Voelker", "S. Savage"], "venue": "In USENIX Security, USENIX Security\u201910,", "citeRegEx": "14", "shortCiteRegEx": "14", "year": 2010}, {"title": "Fake twitter followers become multimillion-dollar business, April 2013. [Online; posted 5-April-2013", "author": ["N. Perloth"], "venue": null, "citeRegEx": "15", "shortCiteRegEx": "15", "year": 2013}, {"title": "Eigenspokes: Surprising patterns and scalable community chipping in large graphs", "author": ["B.A. Prakash", "A. Sridharan", "M. Seshadri", "S. Machiraju", "C. Faloutsos"], "venue": "In PAKDD,", "citeRegEx": "16", "shortCiteRegEx": "16", "year": 2010}, {"title": "Spotting suspicious link behavior with fbox: An adversarial perspective", "author": ["N. Shah", "A. Beutel", "B. Gallagher", "C. Faloutsos"], "venue": "In ICDM,", "citeRegEx": "17", "shortCiteRegEx": "17", "year": 2014}, {"title": "Detecting spammers on social networks", "author": ["G. Stringhini", "C. Kruegel", "G. Vigna"], "venue": "In ACSAC,", "citeRegEx": "18", "shortCiteRegEx": "18", "year": 2010}, {"title": "Follow the green: Growth and dynamics in twitter follower markets", "author": ["G. Stringhini", "G. Wang", "M. Egele", "C. Kruegel", "G. Vigna", "H. Zheng", "Y.B. Zhao"], "venue": "In SIGMETRICS,", "citeRegEx": "19", "shortCiteRegEx": "19", "year": 2013}, {"title": "Dialing back abuse on phone verified accounts", "author": ["K. Thomas", "D. Iatskiv", "E. Bursztein", "T. Pietraszek", "C. Grier", "D. McCoy"], "venue": "In CCS,", "citeRegEx": "20", "shortCiteRegEx": "20", "year": 2014}, {"title": "Trafficking fraudulent accounts: The role of the underground market in twitter spam and abuse", "author": ["K. Thomas", "D. McCoy", "C. Grier", "A. Kolcz", "V. Paxson"], "venue": "In USENIX Security,", "citeRegEx": "21", "shortCiteRegEx": "21", "year": 2013}, {"title": "Serf and turf: Crowdturfing for fun and profit", "author": ["G. Wang", "C. Wilson", "X. Zhao", "Y. Zhu", "M. Mohanlal", "H. Zheng", "B.Y. Zhao"], "venue": "In WWW, WWW", "citeRegEx": "22", "shortCiteRegEx": "22", "year": 2012}, {"title": "Sybilguard: defending against sybil attacks via social networks", "author": ["H. Yu", "M. Kaminsky", "P.B. Gibbons", "A. Flaxman"], "venue": null, "citeRegEx": "23", "shortCiteRegEx": "23", "year": 2006}], "referenceMentions": [{"referenceID": 2, "context": "While previous works in social network fraud detection have primarily focused on leveraging signature properties of fraudsters including temporally synchronized behavior [3], excessively dense [16] and oddly distributed [17] graph connectivity, uncommon account names [6] and spammy links [8], our work focuses on establishing the veracity and applicability of these assumptions.", "startOffset": 170, "endOffset": 173}, {"referenceID": 15, "context": "While previous works in social network fraud detection have primarily focused on leveraging signature properties of fraudsters including temporally synchronized behavior [3], excessively dense [16] and oddly distributed [17] graph connectivity, uncommon account names [6] and spammy links [8], our work focuses on establishing the veracity and applicability of these assumptions.", "startOffset": 193, "endOffset": 197}, {"referenceID": 16, "context": "While previous works in social network fraud detection have primarily focused on leveraging signature properties of fraudsters including temporally synchronized behavior [3], excessively dense [16] and oddly distributed [17] graph connectivity, uncommon account names [6] and spammy links [8], our work focuses on establishing the veracity and applicability of these assumptions.", "startOffset": 220, "endOffset": 224}, {"referenceID": 5, "context": "While previous works in social network fraud detection have primarily focused on leveraging signature properties of fraudsters including temporally synchronized behavior [3], excessively dense [16] and oddly distributed [17] graph connectivity, uncommon account names [6] and spammy links [8], our work focuses on establishing the veracity and applicability of these assumptions.", "startOffset": 268, "endOffset": 271}, {"referenceID": 7, "context": "While previous works in social network fraud detection have primarily focused on leveraging signature properties of fraudsters including temporally synchronized behavior [3], excessively dense [16] and oddly distributed [17] graph connectivity, uncommon account names [6] and spammy links [8], our work focuses on establishing the veracity and applicability of these assumptions.", "startOffset": 289, "endOffset": 292}, {"referenceID": 20, "context": "Underground Markets: Prior works have shown the use of fake accounts for followers in social media [21], phone-verified email accounts [20], Facebook likes [3], etc.", "startOffset": 99, "endOffset": 103}, {"referenceID": 19, "context": "Underground Markets: Prior works have shown the use of fake accounts for followers in social media [21], phone-verified email accounts [20], Facebook likes [3], etc.", "startOffset": 135, "endOffset": 139}, {"referenceID": 2, "context": "Underground Markets: Prior works have shown the use of fake accounts for followers in social media [21], phone-verified email accounts [20], Facebook likes [3], etc.", "startOffset": 156, "endOffset": 159}, {"referenceID": 7, "context": "These accounts are often used to spread spam [8, 7] and misinformation [9, 10].", "startOffset": 45, "endOffset": 51}, {"referenceID": 6, "context": "These accounts are often used to spread spam [8, 7] and misinformation [9, 10].", "startOffset": 45, "endOffset": 51}, {"referenceID": 8, "context": "These accounts are often used to spread spam [8, 7] and misinformation [9, 10].", "startOffset": 71, "endOffset": 78}, {"referenceID": 9, "context": "These accounts are often used to spread spam [8, 7] and misinformation [9, 10].", "startOffset": 71, "endOffset": 78}, {"referenceID": 14, "context": "[15] estimates that the fake follower market produces $360 million per year.", "startOffset": 0, "endOffset": 4}, {"referenceID": 21, "context": "Recently, several works have studied the existence of underground online markets where these fraudulent actions can be purchased \u2013 [22, 14] explore underground markets providing fake content, reviews and solutions to security mechanisms.", "startOffset": 131, "endOffset": 139}, {"referenceID": 13, "context": "Recently, several works have studied the existence of underground online markets where these fraudulent actions can be purchased \u2013 [22, 14] explore underground markets providing fake content, reviews and solutions to security mechanisms.", "startOffset": 131, "endOffset": 139}, {"referenceID": 20, "context": "[21] studies several fraud providers over time and describes trends in pricing, account names and IP diversity.", "startOffset": 0, "endOffset": 4}, {"referenceID": 18, "context": "[19] compares growth rates of accounts with legitimate and fraudulent followers.", "startOffset": 0, "endOffset": 4}, {"referenceID": 0, "context": "[1] observes the varying retention and reliability of various fraud providers.", "startOffset": 0, "endOffset": 3}, {"referenceID": 1, "context": "Fraud Detection: [2, 12] use profile features to detect spammers on Twitter.", "startOffset": 17, "endOffset": 24}, {"referenceID": 11, "context": "Fraud Detection: [2, 12] use profile features to detect spammers on Twitter.", "startOffset": 17, "endOffset": 24}, {"referenceID": 17, "context": "[18] passively analyzes accounts with promiscuous following behavior and builds a classifier using profile and messaging features.", "startOffset": 0, "endOffset": 4}, {"referenceID": 3, "context": "[4, 23] aim to find fake accounts in social networks via a generative stochastic model and a random-walk based method respectively \u2013 both assume small cuts between fake and genuine nodes.", "startOffset": 0, "endOffset": 7}, {"referenceID": 22, "context": "[4, 23] aim to find fake accounts in social networks via a generative stochastic model and a random-walk based method respectively \u2013 both assume small cuts between fake and genuine nodes.", "startOffset": 0, "endOffset": 7}, {"referenceID": 2, "context": "[3, 5] use graphtraversal based methods to find users with temporally synchronized actions on Facebook.", "startOffset": 0, "endOffset": 6}, {"referenceID": 4, "context": "[3, 5] use graphtraversal based methods to find users with temporally synchronized actions on Facebook.", "startOffset": 0, "endOffset": 6}, {"referenceID": 16, "context": "[17, 11, 16] propose spectral methods which identify dense or odd graph structures indicative of fraud.", "startOffset": 0, "endOffset": 12}, {"referenceID": 10, "context": "[17, 11, 16] propose spectral methods which identify dense or odd graph structures indicative of fraud.", "startOffset": 0, "endOffset": 12}, {"referenceID": 15, "context": "[17, 11, 16] propose spectral methods which identify dense or odd graph structures indicative of fraud.", "startOffset": 0, "endOffset": 12}, {"referenceID": 12, "context": "95 recall (much higher recall than supervised approaches which use raw account features for Twitter spam classification [13]).", "startOffset": 120, "endOffset": 124}], "year": 2017, "abstractText": "Most past work on social network link fraud detection tries to separate genuine users from fraudsters, implicitly assuming that there is only one type of fraudulent behavior. But is this assumption true? And, in either case, what are the characteristics of such fraudulent behaviors? In this work, we set up honeypots, (\u201cdummy\u201d social network accounts), and buy fake followers (after careful IRB approval). We report the signs of such behaviors including oddities in local network connectivity, account attributes, and similarities and differences across fraud providers. Most valuably, we discover and characterize several types of fraud behaviors. We discuss how to leverage our insights in practice by engineering strongly performing entropy-based features and demonstrating high classification accuracy. Our contributions are (a) instrumentation: we detail our experimental setup and carefully engineered data collection process to scrape Twitter data while respecting API rate-limits, (b) observations on fraud multimodality: we analyze our honeypot fraudster ecosystem and give surprising insights into the multifaceted behaviors of these fraudster types, and (c) features: we propose novel features that give strong (>0.95 precision/recall) discriminative power on ground-truth Twitter data.", "creator": "LaTeX with hyperref package"}}}