{"id": "1704.04719", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "16-Apr-2017", "title": "FML-based Prediction Agent and Its Application to Game of Go", "abstract": "in this paper, we present a robotic prediction agent including a darkforest go engine, a fuzzy markup language ( fml ) assessment engine, an fml - based decision support engine, and even a robot engine for game of go application. the knowledge base type and rule engine base of fml assessment engine are constructed by referring the information from processing the darkforest go prediction engine located in nutn and opu, for them example, the number of mcts simulations and winning online rate prediction. the internally proposed robotic prediction agent first retrieves the database of go competition website, and then the fml assessment engine infers the winning possibility based on the information generated by darkforest go engine. the fml - search based decision support engine computes the winning possibility based on the partial game situation inferred by fml assessment engine. finally, the robot engine combines with the human - cognitive friendly robot partner palro, produced by fujisoft incorporated, to report the game situation to human go players. experimental results show that the fml - based prediction agent can work effectively.", "histories": [["v1", "Sun, 16 Apr 2017 04:19:36 GMT  (1068kb)", "http://arxiv.org/abs/1704.04719v1", "6 pages, 12 figures, Joint 17th World Congress of International Fuzzy Systems Association and 9th International Conference on Soft Computing and Intelligent Systems (IFSA-SCIS 2017), Otsu, Japan, Jun. 27-30, 2017"]], "COMMENTS": "6 pages, 12 figures, Joint 17th World Congress of International Fuzzy Systems Association and 9th International Conference on Soft Computing and Intelligent Systems (IFSA-SCIS 2017), Otsu, Japan, Jun. 27-30, 2017", "reviews": [], "SUBJECTS": "cs.AI", "authors": ["chang-shing lee", "mei-hui wang", "chia-hsiu kao", "sheng-chi yang", "yusuke nojima", "ryosuke saga", "nan shuo", "naoyuki kubota"], "accepted": false, "id": "1704.04719"}, "pdf": {"name": "1704.04719.pdf", "metadata": {"source": "CRF", "title": "FML-based Prediction Agent and Its Application to Game of Go", "authors": ["Chang-Shing Lee", "Mei-Hui Wang", "Chia-Hsiu Kao", "Sheng-Chi Yang", "Yusuke Nojima", "Ryosuke Saga", "Nan Shuo", "Naoyuki Kubota"], "emails": ["leecs@mail.nutn.edu.tw", "nojima@cs.osakafu-u.ac.jp", "kubota@tmu.ac.jp"], "sections": [{"heading": null, "text": "including a darkforest Go engine, a fuzzy markup language (FML) assessment engine, an FML-based decision support engine, and a robot engine for game of Go application. The knowledge base and rule base of FML assessment engine are constructed by referring the information from the darkforest Go engine located in NUTN and OPU, for example, the number of MCTS simulations and winning rate prediction. The proposed robotic prediction agent first retrieves the database of Go competition website, and then the FML assessment engine infers the winning possibility based on the information generated by darkforest Go engine. The FML-based decision support engine computes the winning possibility based on the partial game situation inferred by FML assessment engine. Finally, the robot engine combines with the human-friendly robot partner PALRO, produced by Fujisoft incorporated, to report the game situation to human Go players. Experimental results show that the FML-based prediction agent can work effectively.\nKeywords\u2014Fuzzy markup language; prediction agent; decision\nsupport engine; robot engine; darkforest Go engine\nI. INTRODUCTION\nThe game of Go originated from China. There are 381 positions to play for a 19\u00d719 board game [2]. Normally, the weaker player plays Black and starts the game. Stones are consecutively located by two players, Black and White, on the points where the lines cross [3]. Black is also allowed to start with some handicap stones located on the empty board when the difference in strength between the players is large [3]. Moreover, the Go rules contain parts of the ko rule, life and death, suicide, and the scoring method [3]. In the end, the player who controls most territory wins the game. The level of amateur Go players is ranked as Kyu (1K is the highest one) and Dan (1D \u2013 7D and ID is the lowest one). Professional Go players are ranked from 1P to 9P and the highest level is 9P [19]. The strongest professional Go player in the world is Jie Ke from China in Feb. 2017 [20].\nCompeting with top human players in the ancient, game of Go has been a long-term goal of artificial intelligence [1]. Go\u2019s high branching factor makes traditional search techniques or even on cutting-edge hardware ineffective [1]. Additionally, the evaluation function of Go could change drastically with one stone change [1]. Combining a Deep Convolutional Neural Network (DCNN) with Monte Carlo Tree Search (MCTS), Google DeepMind AlphaGo has sent shockwaves throughout Asia and the world since Challenge Match with Lee Sedol in 2016 [3, 5, 6, 19]. Moreover, the new prototype version of AlphaGo played as Master and Magister on the online servers Tygem and FoxGo defeated more than 50 of the top Go players in the world in Dec. 2016 and in Jan. 2017 [7].\nMany different real-world applications are with a high-level of uncertainty. A lot of researches proved the good performance of using fuzzy sets. Being an IEEE Standard in May 2016, fuzzy markup language (FML) provides designers of intelligent decision making systems with a unified and high-level methodology for describing systems\u2019 behaviors by means of rules based on human domain knowledge [10, 11]. The main advantage of using FML is easy to understand and extend the implemented programs for other researchers. FML is with understandability, extendibility, and compatibility of implemented programs as well as efficiency of programming [10]. There are considerable research applications based on FML and Genetic FML (GFML) such as game of Go [12, 13] and diet [14, 15]. Additionally, Acampora et al. [16] proposed FML Script to make it with evolving capabilities through a scripting language approach. Akhavan et al. [17] used FMLbased specifications to validate and implement fuzzy models.\nThe objective of this paper is to use FML to construct the knowledge base and rule base of the proposed agent and then predict the winner of the game based on the information from darkforest Go open source and extracted sub-games. In this paper, in addition to information provided by darkforest program, we have an additional system to show the information of the game such as current game situation. According to the first-stage prediction results of darkforest Go engine [8, 9] and the second-stage inferred results of the FML assessment engine [18], we further introduce the third-stage FML-based decision support engine to predict the winner of the game. Next, we choose seven games from 60 games (Master vs. top professional Go players in Dec. 2016 and in Jan. 2017) and three games of amateur Go players to evaluate the performance. Finally, we combine playing Go with the fourth-stage robot engine to report real-time situation to Go players. The experimental results show the proposed approach is feasible.\nThe remainder of this paper is organized as follows: Section II introduces Dynamic DarkForest Go (DyNaDF) cloud platform for game of Go application. Section III describes the proposed FML-based prediction agent by introducing the system structure and the FML-based decision support engine. The experimental results are shown in Section IV. Finally, conclusions are given in Section V.\nII. DYNADF CLOUD PLATFORM FOR GAME OF GO\nA. Structure of Dynamic Darkforest Cloud Platform for Go\nFig. 1 shows the structure of the DyNaDF Cloud Platform and its brief descriptions are as follows: (1) The DyNaDF cloud platform for game of Go application is composed of a playing-\nThe authors would like to thank the financially support sponsored by the Ministry of Science and Technology of Taiwan under the grant MOST 105- 2622-E-024-003-CC2 and MOST 105-2221-E-024-017.\nGo platform located at National University of Tainan (NUTN) / Taiwan and National Center for High-Performance Computing (NCHC) / Taiwan, a darkforest Go engine located at Osaka Prefecture University (OPU) / Japan, and the robot PALRO from Tokyo Metropolitan University (TMU) / Japan; (2) Human Go players surf on the DyNaDF platform located at NUTN / NCHC to play with darkforest Go engine located in OPU; (3) The FML assessment engine infers the current game situation based on the prediction information from darkforest and stores the results into the database; (4) PALRO receives the game situation via the Internet and reports to the human Go players; (5) Human can learn more information about game\u2019s comments via Go eBook.\nB. Introduction to Dynamic Darkforest Cloud Platform\nThis subsection introduces the developed DyNaDF platform, including a demonstration game platform, a machine recommendation platform, and an FML assessment engine.\nrecommendation platform.\nThe game between Jie Ke (9P) as Black and Master as White on Dec. 31, 2016 is used as an example of Figs. 2 and 3. Fig. 2 (a) shows the screen of setting game like the number of MCTS simulations, komi, playing mode, and human is as White or as Black. Fig. 2 (b) shows the game record provided by the demo game platform. Figs. 3 (a)\u20133 (b) show the predicted next moves as well as history information like winning rate, the number of simulations, and each-move inferred current game situation provided by the machine recommendation platform. FML assessment engine consists of four different methods, including winning rate difference, simulation difference, FML Assessment-1, and FML Assessment-2 [18]. In Fig. 2 (a), we set the number of MCTS simulations to 3000 for darkforest Go engine and acquire the predicted and inferred results from darkforest and the FML assessment engine, respectively. From\nFig. 3 (b), we can observe that the top-move rates of Black and White are 62.5% and 57.81%, respectively. Fig. 3 (b) shows that FML Assessment-2 predicts \u201cWhite is Possible Advantage (WhitePossibleAdvantage)\u201d for the last move.\nIII. FML-BASED PREDICTION AGENT\nA. System Structure\nFig. 4 shows the system structure of the proposed four-stage FML-based prediction agent, including Stage I: darkforest Go engine, Stage II: FML assessment engine, Stage III: FML-based decision support engine, and Stage IV: robot engine. The followings are its short descriptions:\n Stage I: In this paper, we apply Facebook darkforest Go\nopen source that trains a DCNN to predict the next top-k moves [8]. Darkforest Go engine powered by deep learning has been developed mainly by Tian and Zhu from Facebook AI Research (FAIR) since May 2015 and was open to the public in 2016 [8, 9]. Darkforest has a stable rank of 5D on the KGS servers and pure policy network achieves a stable rank of 3D on KGS. It received the third place and second place in the KGS Go Tournament 2016 and in the ninth UEC Cup Computer 2016, respectively [8, 9]. Darkforest relies on a DCNN designed for long-term predictions and has been able to substantially improve the winning rate for pattern matching approaches against MCTS-based approaches, even with looser search budgets [8]. Tian and Zhu [9] proposed a 12-layered full convolutional network architecture for darkforest where (1) each convolution layer is followed by a ReLU nonlinearity, (2) all layers use the same number of filters at convolutional layers (w = 254) except for the first layer, (3) no weight sharing is used, (4) pooling is not used owing to negatively affecting the performance, and (5) only one softmax layer is used to predict the next move of Back and White to reduce the number of parameters.\n Stage II: FML assessment engine adopts each-moveposition, darkforest-predicted top-5-move number of simulations and winning rate to decide each-move number of simulations, winning rate, and top-move rate (TMR) [18]. After that, the FML assessment engine infers each-move current game situation, including \u201cBlack is obvious advantage (BlackObviousAdvantage, B++),\u201d \u201cBlack is possible advantage (BlackPossibleAdvantage, B+),\u201d \u201cBoth are in an uncertain situation (UncertainSituation, U),\u201d \u201cWhite is possible advantage (WhitePossibleAdvantage, W+),\u201d and \u201cWhite is obvious advantage (WhiteObviousAdvantage, W++).\u201d\n Stage III: The proposed FML-based decision support engine computes the winning possibility based on the partial game situation inferred by FML assessment engine (see Section III.B) and stores the predicted results into the database.\n Stage IV: The robot engine retrieves information from the database to comment on the game situation, including (1) Black and White\u2019s move numbers that appear the first 3 highest and the last 3 lowest number of simulations as well as the highest and lowest winning rates, (2) Black and White\u2019s average winning rates and top-move rates, and (3) overall game situation. It also reports the real-time predicted top-3-move positions to the human Go player to think carefully before playing his /his next move [18].\nB. FML-based Decision Support Engine\nThis subsection mainly focuses on the FML-based decision support engine (DSE) whose diagram is shown in Fig. 5.\nFor example, if the input vector is x = (x1, x2, \u2026, x11), then vector xi / k denotes the input 11 current game situations (CGSs) in the Neighborhoodi / k. Fig. 6 gives an example of a game with 178 moves when K = 4, where the input information of Neighborhood1/4, Neighborhood2/4, Neighborhood3/4, and\nNeighborhood4/4 is the current game situations for Neighborhood of fuzzy number Move-45 (moves 40-50), Neighborhood of fuzzy number Move-90 (moves 85-95), Neighborhood of fuzzy number Move-135 (moves 130-140), and Neighborhood of fuzzy number Move-Last (moves 168- 178), respectively. Fig. 7 is the fuzzy sets for B++, B+, U, W+, and W++. Table I shows the algorithm of the FML-based DSE.\nFig. 8 shows the scenario of the experiments whose brief descriptions are as follows: (1) the invited human Go players surf on the DyNaDF cloud platform to play with darkforest located in NUTN, NCHC, or OPU, (2) the game records on the Internet are downloaded and fed into the DyNaDF cloud platform, and then (3) the predicted each-move information is generated by darkforest during playing. Table II shows the information of three machines that we installed darkforest Go engine such as machine\u2019s location and number & model of GPU. Table III shows the basic profile of the collected games, of which 9 games are from professional Go players, and 4 games from amateur ones. Table IV shows the information of 8\nexperiments, including the adopted test models (TM1\u2013TM4), collected games (G1\u2013G13), machines that executed darkforest Go engine, namely (OPU, 2), (NUTN, 2), and (NCHC, 4), and the setting of the number of MCTS simulations (500 / 1000 / 5000 / 10000 / 20000).\nB. Darkforest-Predicted Winning Rate and TMR\nThe objective of experiments 1 and 2 is to evaluate the variance in winning rate under the different number of MCTS simulations and Neighborhood of various fuzzy numbers. The total moves of G1\u2013G7 is 228, 128, 135, 178, 118, 254, and 235, respectively. Fig. 9 shows the darkforest-predicted winning rate for G1\u2013G7 on Neighborhood of fuzzy number Move-100, Neighborhood of fuzzy number Move-200, and Neighborhood of fuzzy number Move-Last. In Fig. 9, the values with a cross (+) denote the human\u2019s winning rate of Exp. 2 (OPU, 2) / 3000, while a star (*) is the ones of computer\u2019s. Fig. 9 also shows that darkforest successfully predicted that \u201ccomputer won the game for G1\u2013G7,\u201d and \u201cthe winning rate difference between computer Go and human is the smallest when G6 was already played 100 moves.\u201d\nFig. 10 shows the bar chart of darkforest-predicted winning rate and TMR by two machines, namely (OPU, 2) and (NUTN, 2), when the number of MCTS simulations equals to 1500 and 3000. It indicates that TMR is roughly 50% and there is no obvious difference in TMR when changing the number of MCTS simulations from 1500 to 3000 for both machines (OPU, 2) and (NUTN, 2). Additionally, the winning rates of human and computer are roughly 20%\u201330% and 70%\u201380%, respectively, which exactly meets the actual game result (computer won G1\u2013 G7). Figs. 11 (a) \u201311 (b) show the bar charts of winning rate and top-move rate of Exp. 3, respectively. Fig. 11 (a) indicates that the winning rate is still close to each other even human\u2019s is higher than computer\u2019s at the time of playing move 00. However, the winning rate of computer increases after more moves were played. Observe Fig. 11 (b) that the top-move rate is kept 55%\u201362% whatever the setting of the number of MCTS simulations is 500, 5000, or even 10000.\nC. Accuracy of FML-based Decision Support Engine\nThis subsection describes the accuracy of FML-based decision support engine. We first used the collected data from Exps. 1 and 2, namely, (OPU, 2) / 1500, (NUTN, 2) / 1500, (OPU, 2) / 3000, and (NUTN, 2) / 3000, to evaluate G1\u2013G7. After that, we inferred the game result based on the current game situations from the last 10 moves to the last one move. The results show each game is correct except G7 of (NUTN, 2) / 1500. Next, we adopted the collected data of G1\u2013G7 from (OPU, 2) / 3000 plus G8\u2013G10 (Exps. 4\u20136) to evaluate the performance of FML-based DSE. Table V shows the inferred result of each game which indicates that G8 has the problem and the accuracy using K = 4 is higher than the one using K = 3.\nThis subsection is to describe the human\u2019s viewpoint about Go learning with the PALRO. In Exp. 7, we have two human Go players, 6P Yi-Min Hsieh Black) and 9P Chun-Hsun Chou White), who played games with the darkforest and PALRO at the events of IEEE WCCI 0 6 and ICIRA 0 6. After demonstration game at IEEE WCCI 0 6 for example, G ), Yi-Min Hsieh commented: \u201cAt the cr t cal moment, PALRO ll\ncheer for me and somet me t ll rem nd me of hav ng some tea to relax. It seems to have a partner to f ght together rather than f ght alone. If PALRO can be appl ed to educat on or dynam c assessment, t ll be helpful for ch ldren\u2019s learn ng.\u201d Fig. a) shows the picture when Yi-Min Hsieh commented on G at ICIRA 0 6. Fig. b) shows the picture that Lu-An Lin played G with darkforest in Exp. 8. Meanwhile, she also cooperated with darkforest and PALRO reporting the top- next moves via Facebook. Lin said that \u201cPlay ng th darkforest s helpful and nterest ng to me. In add t on to PALRO\u2019s report ng pred cted pos t ons, a short t me of s ng ng and danc ng dur ng the game refreshes me very much.\u201d\nV. CONCLUSIONS\nThis paper presents a robotic prediction agent, including a darkforest Go engine, a fuzzy markup language (FML) assessment engine, an FML-based decision support engine, and a robot engine for game of Go application. The proposed FMLbased decision support engine computes the winning possibility based on darkforest\u2019s prediction and the partial game situation inferred by FML assessment engine. Additionally, professional Go player commented that \u201cPALRO will be helpful for children\u2019s learning if it can be applied to the education.\u201d In the future, we will apply machine learning to the proposed platform and collect more data to further evaluate its accuracy and extend the proposed approach to achieve the goal of on-line real-time Go prediction platform. Additionally, the proposed approach will be pertinent to generate play-comments on a game to highlight the positional strategic plan followed by a player during a sequence of moves."}, {"heading": "ACKNOWLEDGMENT", "text": "The authors would like to thank all invited Go players for their kind help, especially for Chun-Hsun Chou, Ping-Chiang Chou, Yi-Min Hsieh, Lu-An Lin, Shuji Takemura, and Minoru Ueda. The authors also thank Dr. Yuandong Tian and Yan Zhu for FAIR opening darkforest Go engine. Finally, the authors would like to thank National Center of High Performance Computing (NCHC), especially for Sheng-Hsien Chen, and Kaohsiung City Government, Taiwan for computing resource and technical support."}], "references": [{"title": "Darkforest", "author": ["Wikipedia"], "venue": "Feb. 2017, [Online] Available: https://en.wikipedia.org/wiki/Darkforest.", "citeRegEx": "1", "shortCiteRegEx": null, "year": 2017}, {"title": "AI techniques for the game of Go", "author": ["E.W.D. Werf"], "venue": "Satawyse b. v., Maastricht, The Netherlands , 2004.", "citeRegEx": "3", "shortCiteRegEx": null, "year": 2004}, {"title": "Teaching deep convolutional neural networks to play Go", "author": ["C. Clark", "A. Storkey"], "venue": "Dec. 0 4, [Online] Available: http://arxiv.org/abs/1412.3409.", "citeRegEx": "4", "shortCiteRegEx": null, "year": 1412}, {"title": "Mastering the game of Go with deep neural networks and tree search", "author": ["D. Silver", "A. Huang", "C.J. Maddison", "A. Guez", "L. Sifre", "G. van den Driessche", "J. Schrittwieser", "I. Antonoglou", "V. Panneershelvam", "M. Lanctot", "S. Dieleman", "D. Grewe", "J. Nham", "N. Kalchbrenner", "I. Sutskever", "T. Lillicrap", "M. Leach", "K. Kavukcuoglu", "T. Graepel", "D. Hassabis"], "venue": "Nature, vol. 529, pp. 484\u2013489, Jan. 2016.", "citeRegEx": "5", "shortCiteRegEx": null, "year": 2016}, {"title": "Google masters Go: deep-learning software excels at complex ancient board game", "author": ["E. Gibney"], "venue": "Nature, vol. 529, pp. 446, Jan. 2016.", "citeRegEx": "6", "shortCiteRegEx": null, "year": 2016}, {"title": "Google secretly tested AI bot: updated version of Google DeepMind\u2019s AlphaGo program revealed as mystery online player", "author": ["E. Gibney"], "venue": "Nature, vol. 541, pp. 142, Jan. 2017.", "citeRegEx": "7", "shortCiteRegEx": null, "year": 2017}, {"title": "Better computer Go player with neural network and long-term prediction", "author": ["Y. Tian", "Y. Zhu"], "venue": "Jan. 2016, [Online] Available: https://arxiv.org/abs/1511.06410.", "citeRegEx": "8", "shortCiteRegEx": null, "year": 2016}, {"title": "Facebookresearch / darkforestGo", "author": ["Y.D. Tian"], "venue": "Jan. 0 6, [Online] Available: https://github.com/facebookresearch/darkforestGo.", "citeRegEx": "9", "shortCiteRegEx": null, "year": 0}, {"title": "855-2016-IEEE Standard for Fuzzy Markup Language", "author": ["IEEE Computational Intelligence Society"], "venue": "May 0 6, [Online] Available: http://ieeexplore.ieee.org/servlet/opac?punumber=7479439.", "citeRegEx": "10", "shortCiteRegEx": null, "year": 0}, {"title": "On the Power of Fuzzy Markup Language", "author": ["G. Acampora", "V. Loia", "C.S. Lee", "M.H. Wang"], "venue": "Springer-Verlag, Germany, Jan. 2013.", "citeRegEx": "11", "shortCiteRegEx": null, "year": 2013}, {"title": "Soft-Computing-based emotional expression mechanism for game of Computer Go", "author": ["C.S. Lee", "M.H. Wang", "M.J. Wu", "Y. Nakagawa", "H. Tsuji", "Y. Yamazaki", "K. Hirota"], "venue": "Soft Computing, vol. 17, no. 7, pp. 1263\u20131282, Jul. 2013.", "citeRegEx": "12", "shortCiteRegEx": null, "year": 2013}, {"title": "T FSbased adaptive linguistic assessment system for semantic analysis and human performance evaluation on game of Go", "author": ["C.S. Lee", "M.H. Wang", "M.J. Wu", "O. Teytaud", "S.J. Yen"], "venue": "IEEE Transactions on Fuzzy Systems, vol. 23, no. 2, pp. 400\u2013420, Apr. 2015.", "citeRegEx": "13", "shortCiteRegEx": null, "year": 2015}, {"title": "A novel genetic fuzzy markup language and its application to healthy diet assessment", "author": ["C.S. Lee", "M.H. Wang", "H. Hagas", "Z.W. Chen", "S.T. Lan", "S.E. Kuo", "H.C. Kuo", "H.H. Cheng"], "venue": "International Journal of Uncertainty, Fuzziness, and Knowledge-Based Systems, vol. 20, no. 2, pp. 247\u2013278, Oct. 2012.", "citeRegEx": "14", "shortCiteRegEx": null, "year": 2012}, {"title": "Adaptive personalized diet linguistic recommendation mechanism based on type-2 fuzzy sets and genetic fuzzy markup language", "author": ["C.S. Lee", "M.H. Wang", "S.T. Lan"], "venue": "IEEE Transactions on Fuzzy Systems, vol. 23, no. 5, pp. 1777\u20131802, Oct. 2015.", "citeRegEx": "15", "shortCiteRegEx": null, "year": 1802}, {"title": "Extending FML with evolving capabilities through a scripting language approach", "author": ["G. Acampora", "M. Reformat", "A. Vitiello"], "venue": "Proceeding of 2014 IEEE International Conference on Fuzzy Systems (FUZZ-IEEE 2014), Beijing, China, Jul. 6-11, 2014, pp. 857\u2013864.", "citeRegEx": "16", "shortCiteRegEx": null, "year": 2014}, {"title": "Validation and implementation of fuzzy models using FML-based specifications", "author": ["M.P. Akhavan", "M. RobatJazi", "M. Reformat"], "venue": "Proceeding of 2016 IEEE International Conference on Fuzzy Systems (FUZZ-IEEE 2016), Vancouver, Canada, Jul. 24-29, 2014, pp. 1088\u20131095.", "citeRegEx": "17", "shortCiteRegEx": null, "year": 2016}, {"title": "FML-based dynamic assessment agent for human-machine cooperative system on game of Go", "author": ["C.S. Lee", "M.H. Wang", "S.C. Yang", "P.H. Hung", "S.W. Lin", "N. Shuo", "N. Kubota", "C.H. Chou", "P.C. Chou", "C.H. Kao"], "venue": "Internationl Journal of Uncertainty, Fuzziness & KnowledgeBased Systems (IJUFKS), Jan. 2017. (Submitted Version).", "citeRegEx": "18", "shortCiteRegEx": null, "year": 2017}, {"title": "Human vs. computer Go: review and prospect", "author": ["C.S. Lee", "M.H. Wang", "S.J. Yen", "T.H. Wei", "I.C. Wu", "P.C. Chou", "C.H. Chou", "M.W. Wang", "T.H. Yang"], "venue": "IEEE Computational Intelligence Magazine, vol. 11, no. 3, pp. 67-72, Aug. 2016.", "citeRegEx": "19", "shortCiteRegEx": null, "year": 2016}, {"title": "Go ratings", "author": ["R. Coulom"], "venue": "Feb. 2017, [Online] Available: https://www.goratings.org/.", "citeRegEx": "20", "shortCiteRegEx": null, "year": 2017}], "referenceMentions": [{"referenceID": 1, "context": "Stones are consecutively located by two players, Black and White, on the points where the lines cross [3].", "startOffset": 102, "endOffset": 105}, {"referenceID": 1, "context": "Black is also allowed to start with some handicap stones located on the empty board when the difference in strength between the players is large [3].", "startOffset": 145, "endOffset": 148}, {"referenceID": 1, "context": "Moreover, the Go rules contain parts of the ko rule, life and death, suicide, and the scoring method [3].", "startOffset": 101, "endOffset": 104}, {"referenceID": 17, "context": "Professional Go players are ranked from 1P to 9P and the highest level is 9P [19].", "startOffset": 77, "endOffset": 81}, {"referenceID": 18, "context": "2017 [20].", "startOffset": 5, "endOffset": 9}, {"referenceID": 0, "context": "Competing with top human players in the ancient, game of Go has been a long-term goal of artificial intelligence [1].", "startOffset": 113, "endOffset": 116}, {"referenceID": 0, "context": "Go\u2019s high branching factor makes traditional search techniques or even on cutting-edge hardware ineffective [1].", "startOffset": 108, "endOffset": 111}, {"referenceID": 0, "context": "Additionally, the evaluation function of Go could change drastically with one stone change [1].", "startOffset": 91, "endOffset": 94}, {"referenceID": 1, "context": "Combining a Deep Convolutional Neural Network (DCNN) with Monte Carlo Tree Search (MCTS), Google DeepMind AlphaGo has sent shockwaves throughout Asia and the world since Challenge Match with Lee Sedol in 2016 [3, 5, 6, 19].", "startOffset": 209, "endOffset": 222}, {"referenceID": 3, "context": "Combining a Deep Convolutional Neural Network (DCNN) with Monte Carlo Tree Search (MCTS), Google DeepMind AlphaGo has sent shockwaves throughout Asia and the world since Challenge Match with Lee Sedol in 2016 [3, 5, 6, 19].", "startOffset": 209, "endOffset": 222}, {"referenceID": 4, "context": "Combining a Deep Convolutional Neural Network (DCNN) with Monte Carlo Tree Search (MCTS), Google DeepMind AlphaGo has sent shockwaves throughout Asia and the world since Challenge Match with Lee Sedol in 2016 [3, 5, 6, 19].", "startOffset": 209, "endOffset": 222}, {"referenceID": 17, "context": "Combining a Deep Convolutional Neural Network (DCNN) with Monte Carlo Tree Search (MCTS), Google DeepMind AlphaGo has sent shockwaves throughout Asia and the world since Challenge Match with Lee Sedol in 2016 [3, 5, 6, 19].", "startOffset": 209, "endOffset": 222}, {"referenceID": 5, "context": "2017 [7].", "startOffset": 5, "endOffset": 8}, {"referenceID": 8, "context": "Being an IEEE Standard in May 2016, fuzzy markup language (FML) provides designers of intelligent decision making systems with a unified and high-level methodology for describing systems\u2019 behaviors by means of rules based on human domain knowledge [10, 11].", "startOffset": 248, "endOffset": 256}, {"referenceID": 9, "context": "Being an IEEE Standard in May 2016, fuzzy markup language (FML) provides designers of intelligent decision making systems with a unified and high-level methodology for describing systems\u2019 behaviors by means of rules based on human domain knowledge [10, 11].", "startOffset": 248, "endOffset": 256}, {"referenceID": 8, "context": "FML is with understandability, extendibility, and compatibility of implemented programs as well as efficiency of programming [10].", "startOffset": 125, "endOffset": 129}, {"referenceID": 10, "context": "There are considerable research applications based on FML and Genetic FML (GFML) such as game of Go [12, 13] and diet [14, 15].", "startOffset": 100, "endOffset": 108}, {"referenceID": 11, "context": "There are considerable research applications based on FML and Genetic FML (GFML) such as game of Go [12, 13] and diet [14, 15].", "startOffset": 100, "endOffset": 108}, {"referenceID": 12, "context": "There are considerable research applications based on FML and Genetic FML (GFML) such as game of Go [12, 13] and diet [14, 15].", "startOffset": 118, "endOffset": 126}, {"referenceID": 13, "context": "There are considerable research applications based on FML and Genetic FML (GFML) such as game of Go [12, 13] and diet [14, 15].", "startOffset": 118, "endOffset": 126}, {"referenceID": 14, "context": "[16] proposed FML Script to make it with evolving capabilities through a scripting language approach.", "startOffset": 0, "endOffset": 4}, {"referenceID": 15, "context": "[17] used FMLbased specifications to validate and implement fuzzy models.", "startOffset": 0, "endOffset": 4}, {"referenceID": 6, "context": "According to the first-stage prediction results of darkforest Go engine [8, 9] and the second-stage inferred results of the FML assessment engine [18], we further introduce the third-stage FML-based decision support engine to predict the winner of the game.", "startOffset": 72, "endOffset": 78}, {"referenceID": 7, "context": "According to the first-stage prediction results of darkforest Go engine [8, 9] and the second-stage inferred results of the FML assessment engine [18], we further introduce the third-stage FML-based decision support engine to predict the winner of the game.", "startOffset": 72, "endOffset": 78}, {"referenceID": 16, "context": "According to the first-stage prediction results of darkforest Go engine [8, 9] and the second-stage inferred results of the FML assessment engine [18], we further introduce the third-stage FML-based decision support engine to predict the winner of the game.", "startOffset": 146, "endOffset": 150}, {"referenceID": 16, "context": "FML assessment engine consists of four different methods, including winning rate difference, simulation difference, FML Assessment-1, and FML Assessment-2 [18].", "startOffset": 155, "endOffset": 159}, {"referenceID": 6, "context": "\uf09f Stage I: In this paper, we apply Facebook darkforest Go open source that trains a DCNN to predict the next top-k moves [8].", "startOffset": 121, "endOffset": 124}, {"referenceID": 6, "context": "Darkforest Go engine powered by deep learning has been developed mainly by Tian and Zhu from Facebook AI Research (FAIR) since May 2015 and was open to the public in 2016 [8, 9].", "startOffset": 171, "endOffset": 177}, {"referenceID": 7, "context": "Darkforest Go engine powered by deep learning has been developed mainly by Tian and Zhu from Facebook AI Research (FAIR) since May 2015 and was open to the public in 2016 [8, 9].", "startOffset": 171, "endOffset": 177}, {"referenceID": 6, "context": "It received the third place and second place in the KGS Go Tournament 2016 and in the ninth UEC Cup Computer 2016, respectively [8, 9].", "startOffset": 128, "endOffset": 134}, {"referenceID": 7, "context": "It received the third place and second place in the KGS Go Tournament 2016 and in the ninth UEC Cup Computer 2016, respectively [8, 9].", "startOffset": 128, "endOffset": 134}, {"referenceID": 6, "context": "Darkforest relies on a DCNN designed for long-term predictions and has been able to substantially improve the winning rate for pattern matching approaches against MCTS-based approaches, even with looser search budgets [8].", "startOffset": 218, "endOffset": 221}, {"referenceID": 7, "context": "Tian and Zhu [9] proposed a 12-layered full convolutional network architecture for darkforest where (1) each convolution layer is followed by a ReLU nonlinearity, (2) all layers use the same number of filters at convolutional layers (w = 254) except for the first layer, (3) no weight sharing is used, (4) pooling is not used owing to negatively affecting the performance, and (5) only one softmax layer is used to predict the next move of Back and White to reduce the number of parameters.", "startOffset": 13, "endOffset": 16}, {"referenceID": 16, "context": "\uf09f Stage II: FML assessment engine adopts each-moveposition, darkforest-predicted top-5-move number of simulations and winning rate to decide each-move number of simulations, winning rate, and top-move rate (TMR) [18].", "startOffset": 212, "endOffset": 216}, {"referenceID": 16, "context": "It also reports the real-time predicted top-3-move positions to the human Go player to think carefully before playing his /his next move [18].", "startOffset": 137, "endOffset": 141}], "year": 2017, "abstractText": "In this paper, we present a robotic prediction agent including a darkforest Go engine, a fuzzy markup language (FML) assessment engine, an FML-based decision support engine, and a robot engine for game of Go application. The knowledge base and rule base of FML assessment engine are constructed by referring the information from the darkforest Go engine located in NUTN and OPU, for example, the number of MCTS simulations and winning rate prediction. The proposed robotic prediction agent first retrieves the database of Go competition website, and then the FML assessment engine infers the winning possibility based on the information generated by darkforest Go engine. The FML-based decision support engine computes the winning possibility based on the partial game situation inferred by FML assessment engine. Finally, the robot engine combines with the human-friendly robot partner PALRO, produced by Fujisoft incorporated, to report the game situation to human Go players. Experimental results show that the FML-based prediction agent can work effectively. Keywords\u2014Fuzzy markup language; prediction agent; decision support engine; robot engine; darkforest Go engine", "creator": "Microsoft\u00ae Word 2013"}}}