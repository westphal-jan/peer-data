{"id": "1704.06061", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "20-Apr-2017", "title": "Multi-view (Joint) Probability Linear Discrimination Analysis for Multi-view Feature Verification", "abstract": "in this paper, we explicitly extract and model jointly multi - view information from either short utterances instead of the individuals, such as speaker identity and text contents. during the development stage, a deep neural network ( dnn ) that will be used to extract j - vector, is initialized positively and trained mentally with the speech frames as input and the actual side information of the utterance as flat output block - wise one - hot labels. in the practical case of text dependent speaker verification, since there is no one - one mapping between input frames and text content labels, a syllable aware dnn is trained to provide compact lexical representation, the respective s - vector of the utterance. these two vectors ( j - vector and s - vector ) will be combined together to become a multi - view vector representation of the utterance during the enrollment and evaluation stages. in order to better describe such multi - view vectors, we propose a posterior multi - view probability linear discriminant analysis ( plda ) model which incorporates both within - speaker / text and between - speaker / text variation. in verification we calculate the increased likelihood that the two multi - view vectors belonging to the same speaker and text or not, and the likelihood will be used in decision - making. large scale experiments for the open - text set condition showed that our approach leads to 0. 26 \\ % eer, 2. 7 \\ % eer, and 1. 34 \\ % eer for impost out wrong, impostor correct, and target wrong respectively.", "histories": [["v1", "Thu, 20 Apr 2017 09:15:32 GMT  (479kb)", "https://arxiv.org/abs/1704.06061v1", null], ["v2", "Fri, 21 Apr 2017 00:59:04 GMT  (479kb)", "http://arxiv.org/abs/1704.06061v2", null], ["v3", "Thu, 6 Jul 2017 09:24:16 GMT  (805kb)", "http://arxiv.org/abs/1704.06061v3", null], ["v4", "Fri, 7 Jul 2017 00:44:27 GMT  (805kb)", "http://arxiv.org/abs/1704.06061v4", null]], "reviews": [], "SUBJECTS": "cs.LG", "authors": ["ziqiang shi", "liu liu", "mengjiao wang", "rujie liu"], "accepted": false, "id": "1704.06061"}, "pdf": {"name": "1704.06061.pdf", "metadata": {"source": "CRF", "title": "Multi-view (Joint) Probability Linear Discrimination Analysis for Multi-view Feature Verification", "authors": ["Ziqiang Shi", "Liu Liu", "Mengjiao Wang", "Rujie Liu"], "emails": [], "sections": [{"heading": null, "text": "ar X\niv :1\n70 4.\n06 06\n1v 4\n[ cs\n.L G\n] 7\nJ ul\n2 01\n1 Introduction\nThere is a long tradition of using probability linear dimensionality reduction methods for object recognition, for example face recognition and speaker verification [6, 13, 7]. Most notably, these include Factor Analysis (FA) and Probabilistic Linear Discriminant Analysis (PLDA). While FA captures the main correlations between the coordinates of a feature vector, which may represents a face image or a speech utterance, PLDA split the total data variability into within-individual and between-individual variabilities, both residing on small-dimensional subspaces. This makes PLDA suitable for a wide variety of recognition tasks, such as \u201cone-shot learning\u201d [10], verification (hypothesis testing) [13, 15] and etc..\nBesides the original PLDA formulation [6, 13], there are several alternative variants: Gaussian PLDA [4] and heavy-tailed PLDA [8] assume the priors on the model\u2019s latent variables follow a Gaussian distribution or Student\u2019s t distribution; mixture of PLDA [14, 12] assumes the feature is generated from a mixture of factor analysis models.\nOne of the questions these PLDA methods do not answer is: what shall we do with the situation that the training samples potentially belongs to not only single category, but have different kinds of labels, for example multi-task learned features? Take pose dependent face recognition or text dependent speaker verification for example, the pose or text latent variable is no longer dependent only on the current label, but rather depends on a separate pose or text label. This means the two latent variables related to speaker/individual and pose/text have the equal importance, and both variables are tied across all samples sharing a certain label.\nIn order to solve this problem, we propose a generalization of the PLDA model called multi-view (joint) PLDA explicitly model jointly multi-view information from samples. The relationship between multi-view (joint) PLDA and standard PLDA is analogous to that between joint factor analysis and factor analysis. Here we need to clarify that the term \u201cjoint PLDA\u201d also used in the work of [1], however indeed Chen et al.\n\u2217Fujitsu Research & Development Center, Beijing, China. \u2020shiziqiang@cn.fujitsu.com 1The term \u201cjoint\u201d comes from the work [3] of Dr. Ferrer, who propose a similar idea independently almost at the same time, although they have not do experiments to verify the idea in any applications yet. For this, we will not distinguish between the term \u201cjoint\u201d and \u201cmulti-view\u201d for the description of PLDA in this work\nonly employed the traditional PLDA but to define the class as the \u201cjoint\u201d classes considering both speaker and text phrase information.\nThe paper is organized as follows: sections 2 reviews the traditional PLDA method. Section 3 describe the proposed multi-view (joint) PLDA approach. Section 4 shows real life application of the multi-view (joint) PLDA, the experiments and results of the various systems are discussed. Finally, we conclude in section 5. Full derivation of the EM algorithm and scoring function of the multi-view (joint) PLDA are provided in the appendix of this paper.\n2 Probability Linear Discrimination Analysis\nProbabilistic Linear Discriminant Analysis (PLDA) can be thought of as Linear Discriminant Analysis (LDA) with a probability distributions attached to the features, where the probability distribution models the data through the latent variables corresponding to the class and the view [13].\nTake the speaker verification or face recognition for example, assume given the training data consists of I individuals each with Hi utterances or images. PLDA models data generation using the following equation:\nxij = \u00b5+Bzi + \u01ebij .\n\u01ebij is defined to be Gaussian with diagonal covariance \u03a3. Let \u03b8 = {\u00b5,B,\u03a3}, xi = {xij : j = 1, ..., Hi} and X = {xij : i = 1, ..., I; j = 1, ..., Hi}. More formally the model can be described in terms of conditional probabilities:\np(xij |zi, \u03b8) = N (xij |\u00b5+Bzi,\u03a3),\np(zi) = N (zi|0, I),\nwhere N (x|\u00b5,\u03a3) represents a Gaussian in x with mean \u00b5 and covariance \u03a3. The parameters \u03b8 of this PLDA model can be estimated using the Expectation Maximization (EM) [2] algorithm. With the learned PLDA model, given a test xt and an enrolled model xs, the likelihood ratio score is\nl(xt, xs) = P (xt, xs|same-individual)\nP (xt, xs|different-individuals)\n=\n\u222b\np(xt, xs, z|\u03b8)dz \u222b\np(xt, zt|\u03b8)dzt \u222b p(xs, zs|\u03b8)dzs\n=\n\u222b\np(xt, xs|z, \u03b8)p(z)dz \u222b\np(xt|zt, \u03b8)p(zt)dzt \u222b p(xs|zs, \u03b8)p(zs)dzs\n=\nN (\n[\nxt xs\n]\n|\n[\n\u00b5 \u00b5\n]\n,\n[\nBBT +\u03a3 BBT\nBBT BBT + \u03a3\n]\n)\nN (xt|\u00b5,BB T +\u03a3)N (xs|\u00b5,BB T +\u03a3) .\nThis standard PLDA cannot properly deal with multi-view features that belong to multiple classes, e.g. the multi-task learning features jointly having different kinds of labels. Typical examples include text dependent speaker verification or pose dependent face recognition. It is noted that we need to define the PLDA latent variable zi as the joint variable considering multiple category information. This means the latent variable zi is dependent on multiple category labels. In this work we try to separate the zi into independent latent variables - each related to the single category information. This intuitive idea result in the following multi-view (joint) PLDA.\n3 Multi-view (joint) PLDA\nIn this section, we propose an effective method to describe the multi-view features as resulting from a generative model which incorporates jointly both within-multi-view and between-multi-view variation. In verification we calculate the likelihoods that the two vectors having all views consistent or not, and the ratio of these two likelihoods will be used for the final decision.\n3.1 Generative model\nIn this work, for notation simplicity we assume the feature has only two kinds of views A and B, and it can be readily generalized to situations with three or more views. Let \u03b8 = {\u00b5,S,T,\u03a3}. We assume that the training (development) data consists of I of A views (for example speaker/individual identities) and J of B views (for example phrases/poses) each pair with Hij features. We denote the k\u2019th feature with the i\u2019th A view and j\u2019th B view by xijk. We model the multi-view feature generation by the process:\nxijk = \u00b5+ Sui +Tvj + \u01ebijk. (3.1)\nThe model comprises two parts: 1, the signal component \u00b5+Sui +Tvj which depends only on both the {A,B} views but not the particular feature vector (i.e. there is no dependence on k); 2, the noise component \u01ebijk which is different for every feature vector and represents within-multi-view noise. The term \u00b5 represents the overall mean of the training vectors. The columns of the matrix S and T contain a basis for the betweenA and between-B subspaces respectively, while the terms ui and vj represent the position in these spaces. Remaining unexplained data variation is explained by the residual noise term \u01ebijk which is defined to be Gaussian with diagonal covariance \u03a3. The latent variables ui and vj are particularly important in real application, e.g. text dependent speaker verification or pose dependent face recognition, as these represents the identity of the speaker/individual i and the content/angle of the text/pose j respectively. In verification, we will consider the likelihood that the two vectors were generated from the same underlying ui and vj .\nFormally the model can be described in terms of conditional probabilities\np(xijk |ui, vj , \u03b8) = N (xijk |\u00b5+ Sui +Tvj ,\u03a3),\np(ui) = N (ui|0, I),\np(vj) = N (vj |0, I),\nwhere N (x|\u00b5,\u03a3) represents a Gaussian in x with mean \u00b5 and covariance \u03a3. Here it\u2019s worth to notice that the formulation 3.1 is almost same as that of Joint Factor Analysis (JFA) [?], although the usage is totally different. JFA is mainly used as a front end for robust speaker feature extraction, while in this work the similar formulation is used as back-end for classification of j-vectors. The mathematical relationship between multi-view (joint) PLDA and JFA is analogous (not exactly) to that between PLDA and i-vector [7].\nLet X = {xijk : i = 1, ..., I; j = 1, ..., J ; k = 1, ..., Hij}. In order to find the parameters \u03b8 = {\u00b5,S,T,\u03a3} under which the data set X is most likely, the classical EM algorithm [2] is employed.\n3.2 EM formulation\nThe auxiliary function for EM is\nQ(\u03b8|\u03b8t) = EU,V |X,\u03b8t [log p(X,U, V |\u03b8)]\n= EU,V |X,\u03b8t\n\n\n\nI \u2211\ni=1\nJ \u2211\nj=1\nHij \u2211\nk=1\nlog[p(xijk |ui, vj , \u03b8)p(ui, vj)]\n\n\n\n= EU,V |X,\u03b8t\n\n\n\nI \u2211\ni=1\nJ \u2211\nj=1\nHij \u2211\nk=1\nlog[N (xijk |\u00b5+ Sui +Tvj ,\u03a3)N (ui, vj |0, I)]\n\n\n\nLet zij =\n[\nui vj\n]\n, Z = {zij : i = 1, ..., I; j = 1, ..., J} and B = [ S T ] . By maximizing the auxiliary\nfunction, we obtain the following EM formulations. E steps: we need to calculate the expectations EU|X,\u03b8t [ui], EV |X,\u03b8t [vj ], EU|X,\u03b8t [uiu T i ], EV |X,\u03b8t [vjv T j ], and EU,V |X,\u03b8t [uiv T j ]. Indeed we have\nEZ|X,\u03b8t\n{[\nui vj\n]}\n= (3.2)\n( I+BT\u03a3\u22121B )\u22121 BT \u03a3\u22121 Hij \u2211\nk=1\n(xijk \u2212 \u00b5),\nEZ|X,\u03b8t\n{[\nuiu T i uiv T j vju T i vjv T j\n]}\n= ( I+BT\u03a3\u22121B )\u22121\n(3.3)\n+ EZ|X,\u03b8t [zij ]EZ|X,\u03b8t [zij ] T .\nM steps: we update the values of the parameters \u03b8 = {\u00b5,S,T,\u03a3} and have\nS = { I \u2211\ni=1\nJ \u2211\nj=1\nHijk \u2211\nk=1\n(xijk \u2212 \u00b5)EU|X,\u03b8t [ui] T\n\u2212 I \u2211\ni=1\nJ \u2211\nj=1\nHijk \u2211\nk=1\nTEU,V |X,\u03b8t [vju T i ]}\n{ EU|X,\u03b8t [uiu T i ] }\u22121 ,\nT = { I \u2211\ni=1\nJ \u2211\nj=1\nHijk \u2211\nk=1\n(xijk \u2212 \u00b5)EV |X,\u03b8t [vj ] T\n\u2212 I \u2211\ni=1\nJ \u2211\nj=1\nHijk \u2211\nk=1\nSEU,V |X,\u03b8t [uiv T j ]}\n{ EV |X,\u03b8t [vjv T j ] }\u22121 ,\n\u03a3 = 1\n\u2211I i=1 \u2211J j=1 \u2211Hijk k=1 1\nI \u2211\ni=1\nJ \u2211\nj=1\nHijk \u2211\nk=1\ndiag{(xijk \u2212 \u00b5)(xijk \u2212 \u00b5) T \u2212(xijk \u2212 \u00b5) [ EU|X,\u03b8t [ui] TST + EV |X,\u03b8t [vi] TTT ] },\n\u00b5 =\n\u2211I i=1 \u2211J j=1 \u2211Hijk k=1 xijk\n\u2211I i=1 \u2211J j=1 \u2211Hijk k=1 1\n,\nwhere diag represents the operation of retaining only the diagonal elements from a matrix. The expectation terms EU|X,\u03b8t [ui], EV |X,\u03b8t [vj ], EU|X,\u03b8t [uiu T i ], EV |X,\u03b8t [vjv T j ], and EU,V |X,\u03b8t [uiv T j ] can be extracted from Equations (3.2) and (3.3).\n3.3 Likelihood Ration Scores\nWe treat the verification as a kind of hypothesis testing problem with the null hypothesis H0 defined for the all same latent variables, and the alternative hypothesis H1 defined for one or more different latent variables. That is in verification we compare the likelihood of the vectors under the hypothesis H0 where two multiview features match (have the same underlying hidden variables) and the hypothesis H1 where they do not (different underlying A variable with same B variable in model M1, same A variable with different B variables in model M2, or different underlying A variables with different B variables in model M3, as the Fig. 1 shows). If the two j-vectors belong to the same speaker saying same phrase, then they must have the same speaker and phrase variables ui and vj ; otherwise if the two j-vectors belong to different speakers or saying different phrases, they will have different speaker variable or different phrase variables. Given a test j-vector xt and an enrolled j-vector xs, set A = SS\nT +TTT , B = 2SST +TTT , C = SST +2TTT , and let the priori probability of the models M1, M2, M3 as p1 = P (M1|H1), p2 = P (M2|H1), p3 = P (M3|H1), then the likelihood ratio score is\nl(xt, xs) = P (xt, xs|H0)\nP (xt, xs|H1)\n=\n\u222b \u222b\np(xt, xs|u1, v1, \u03b8)p(u1)p(v1)du1dv1 X\n=\nN (\n[\nxt xs\n]\n|\n[\n\u00b5 \u00b5\n]\n,\n[\nA+\u03a3 A A A+\u03a3\n]\n)\nX ,\nwhere\nX = P (xt, xs|H1)\n= P (xt, xs|M1)P (M1|H1)\n+ P (xt, xs|M2)P (M2|H1) + P (xt, xs|M3)P (M3|H1)\n+ p1\n\u222b \u222b \u222b\np(xt, xs, u1, u2, v1|\u03b8)du1du2dv1\n= p2\n\u222b \u222b \u222b\np(xt, xs, u1, v1, v2|\u03b8)du1dv1dv2\n+ p3\n\u222b \u222b\np(xt, u1, v1|\u03b8)du1dv1\n\u222b \u222b\np(xs, u2, v2|\u03b8)du2dv2\n= p1N (\n[\nxt xs\n]\n|\n[\n\u00b5 \u00b5\n]\n,\n[\nC+\u03a3 C C C+\u03a3\n]\n)\n+ p2N (\n[\nxt xs\n]\n|\n[\n\u00b5 \u00b5\n]\n,\n[\nB+\u03a3 B B B+\u03a3\n]\n)\n+ p3N (xt|\u00b5,A+\u03a3)N (xs|\u00b5,A+ \u03a3).\nNotice that like standard PLDA [13], we do not calculate a point estimate of hidden variable. Instead we compute the probability that the two multi-view vectors had the same hidden variables, regardless of what this actual latent variable was.\n4 Experiments\nMulti-view (joint) PLDA is a general method for object recognition. In this section, the method is evaluated on the task of text dependent speaker verification. We describe the experimental setup and results for the proposed method on the public RSR2015 English corpus [9] and our internal Huiting202 Chinese Mandarin database collected by the Huiting Techonogly2.\n4.1 J-vector extraction\nChen et al. [1] proposed a method to train a DNN to make classifications for both speaker and phrase identities by minimizing a total loss function consisting a sum of two cross-entropy losses as shown in Fig. 2 - one related to the speaker label and the other to the text label. Once training is complete, the output layer is removed, and the rest of the neural network is used to extract speaker-phrase joint features. That is each frame of an utterance is forward propagated through the network, and the output activations of all\n2http://huitingtech.com/\nthe frames are averaged to form an utterance-level feature called j-vector. The enrollment speaker models are formed by averaging the j-vectors corresponding to the enrollment recordings.\n4.2 Experimental setup\nRSR2015 corpus [9] was released by I2R, is used to evaluate the performance of different speaker verification systems. In this work, we follow the setup of [11], the part I of RSR2015 is used for the testing of multi-view (joint) PLDA. The background and development data of RSR2015 part I are merged as new background data to train the j-vector extractor.\nOur internal Huiting202 database is designed for local applications. It contains 202 speakers reading 20 different phrases, 20 sessions each phrase. All speech files are of 16kHz. The gender distribution is balanced on the data set. 132 randomly selected speakers are used for training the background multi-task learned DNN, and the remaining 70 speakers were used for enrollment and evaluation.\nIn this work, 39-dimensional Mel-frequency cepstral coefficients (MFCC, 13 static including the log energy + 13 \u2206 + 13 \u2206\u2206) are extracted and normalized using utterance-level mean and variance normalization. The input is stacked normalized MFCCs from 11 frames (5 frames from each side of the current frame). The DNN has 6 hidden layers (with sigmoid activation function) of 2048 nodes each. During the background model development stage, the DNN was trained by the strategy of pre-training with Restricted Boltzmann Machine (RBM) and fine tuning with SGD using cross-entropy criterion. Once the DNN is trained, the j-vector can be extracted during the enrollment and evaluation stages.\n4.3 Results and discussion\nThree systems are evaluated and compared across above conditions:\n\u2022 j-vector: the standard j-vector system with cosine similarity.\n\u2022 PLDA: the j-vector system with classic PLDA (the j-vector with \u201cjoint PLDA\u201d called in [1]).\n\u2022 jPLDA: multi-view (joint) PLDA system described in section ?? with j-vector.\nWhen evaluation a speaker is enrolled with 3 utterances of the same phrase. The task concerns on both the phrase content and speaker identity. Nontarget trials are of three types: the impostor pronouncing wrong lexical content (impostor wrong, IW); a target speaker pronouncing wrong lexical content (target wrong, TW); the imposter pronouncing correct lexical content (impostor correct, IC).\nThe PLDA and jPLDA models both are trained using the j-vectors. The class defined in both models is the multi-task label on both the speaker and phrase. For each test session the j-vector is extracted using the same process and then log likelihood from PLDA and likelihood from jPLDA are used to distinguish among different models. The subspace dimension is set to 40 and then the PLDA model is estimated with\n10 iterations; the speaker and the phrase subspace dimensions of jPLDA are both set to 20 in order for fair comparisons and the jPLDA mode is also trained with 10 iterations.\nTable 1 and 2 compare the performances of all above-mentioned systems in terms of equal error rate (EER) for the three types of nontarget trials. Obviously jPLDA is superior thanthe standard PLDA, no matter which database is used in the test. Since multi-view PLDA system can explore both the identity and the lexical information from the j-vector, it always performs better than conventional PLDA systems.\nWe presented a novel generative model that decomposes a pattern into the different classes and the multiple views. Multi-view (joint) Probabilistic Linear Discriminant Analysis (PLDA) is related to PLDA, and can be thought of as PLDA with multiple probability distributions attached to or influence the features. One of the most important advantages of multi-view PLDA, compared to PLDA and its previously proposed probabilistic motivations, is that multiple information can be explicitly modeled and explored from the samples to improve the verification performance. Reported results showed that multi-view PLDA provided significant reduction in error rates over conventional systems in term of EER.\nReferences\n[1] Nanxin Chen, Yanmin Qian, and Kai Yu. Multi-task learning for text-dependent speaker verificaion. In INTERSPEECH, 2015.\n[2] A. P. Dempster. Maximum likelihood estimation from incomplete data via the em algorithm (with discussion. Journal of the Royal Statistical Society, 39(1):1\u201338, 1977.\n[3] Luciana Ferrer. Joint probabilistic linear discriminant analysis. arXiv preprint arXiv:1704.02346, 2017.\n[4] Daniel Garcia-Romero and Carol Y. Espy-Wilson. Analysis of i-vector length normalization in speaker recognition systems. In INTERSPEECH 2011, Conference of the International Speech Communication Association, Florence, Italy, August, pages 249\u2013252, 2011.\n[5] Higham and J Nicholas. Accuracy and stability of numerical algorithms. Journal of the American Statistical Association, 16(94):285\u2013289, 1996.\n[6] Sergey Ioffe. Probabilistic linear discriminant analysis. Proc Eccv, 22(4):531\u2013542, 2006.\n[7] Y. Jiang, K. A. Lee, Z. Tang, B. Ma, A. Larcher, and H. Li. Plda modeling in i-vector and supervector space for speaker verification. In ACM International Conference on Multimedia, Singapore, November, pages 882\u2013891, 2012.\n[8] P. Kenny. Bayesian speaker verification with heavy tailed priors. In Proc. Odyssey Speaker and Language Recogntion Workshop, Brno, Czech Republic, 2010.\n[9] Anthony Larcher, Kong Aik Lee, Bin Ma, and Haizhou Li. Text-dependent speaker verification: Classifiers, databases and rsr2015. Speech Communication, 60:56\u201377, 2014.\n[10] Fe Fei Li, R Fergus, and P Perona. A bayesian approach to unsupervised one-shot learning of object categories. In IEEE International Conference on Computer Vision, 2003. Proceedings, pages 1134\u20131141 vol.2, 2003.\n[11] Yuan Liu, Yanmin Qian, Nanxin Chen, Tianfan Fu, Ya Zhang, and Kai Yu. Deep feature for textdependent speaker verification. Speech Communication, 73:1\u201313, 2015.\n[12] Man-Wai Mak, Xiaomin Pang, and Jen-Tzung Chien. Mixture of plda for noise robust i-vector speaker verification. IEEE/ACM Transactions on Audio, Speech and Language Processing (TASLP), 24(1):130\u2013 142, 2016.\n[13] Simon J D Prince and James H Elder. Probabilistic linear discriminant analysis for inferences about identity. Proceedings, pages 1\u20138, 2007.\n[14] Konstantin Simonchik, Timur Pekhovsky, Andrey Shulipa, and Anton Afanasyev. Supervized mixture of plda models for cross-channel speaker verification. In INTERSPEECH, pages 1684\u20131687, 2012.\n[15] Ehsan Variani, Xin Lei, Erik Mcdermott, and Ignacio Lopez Moreno. Deep neural networks for small footprint text-dependent speaker verification. In ICASSP 2014 - 2014 IEEE International Conference on Acoustics, Speech and Signal Processing, pages 4052\u20134056, 2014.\nThis appendix provides the derivation of the formulae about multi-view (joint) Probability Linear Discriminant Analysis (PLDA). The appendix starts with the general Expectation Maximization (EM) algorithm and EM to the conventional PLDA. Then, the appendix extends the derivation to multi-view PLDA.\nA The Expectation Maximization (EM) algorithm\nGiven the statistical model which generates a set X of observed data, a set of unobserved latent data or missing values Z, and a vector of unknown parameters \u03b8, along with a likelihood function L(\u03b8;X,Z) = p(X,Z|\u03b8), the maximum likelihood estimate (MLE) of the unknown parameters is determined by the marginal likelihood of the observed data\nL(\u03b8;X) = p(X |\u03b8) = \u2211\nZ\np(X,Z|\u03b8).\nHowever, this quantity is often intractable. The EM algorithm seeks to find the MLE of the marginal likelihood by iteratively applying the following two steps:\nExpectation step (E step): Calculate the expected value of the log likelihood function, with respect to the conditional distribution of Z given X under the current estimate of the parameters \u03b8t\nQ(\u03b8|\u03b8t) = EZ|X,\u03b8t [logL(\u03b8;X,Z)].\nMaximization step (M step): Find the parameter that maximizes this quantity:\n\u03b8t+1 := argmax \u03b8 Q(\u03b8|\u03b8t).\nExpectation-maximization works to improve Q(\u03b8|\u03b8t) rather than directly improving log p(X |\u03b8). Here we show that improvements to the former imply improvements to the latter.\nFor any Z with non-zero probability p(Z|X, \u03b8), we can write log p(X |\u03b8) = log p(X,Z|\u03b8)\u2212 log p(Z|X, \u03b8) . We take the expectation over possible values of the unknown data Z under the current parameter estimate \u03b8t by multiplying both sides by p(Z|X, \u03b8t) and summing (or integrating) over Z. The left-hand side is the expectation of a constant, so we get:\nlog p(X |\u03b8) = \u2211\nZ\np(Z|X, \u03b8t) log p(X,Z|\u03b8)\u2212 \u2211\nZ\np(Z|X, \u03b8t) log p(Z|X, \u03b8)\n= Q(\u03b8|\u03b8t) +H(\u03b8|\u03b8t) ,\nwhere H(\u03b8|\u03b8t) is defined by the negated sum it is replacing. This last equation holds for any value of \u03b8 including \u03b8 = \u03b8t, log p(X |\u03b8t) = Q(\u03b8t|\u03b8t) + H(\u03b8t|\u03b8t) , and subtracting this last equation from the previous equation gives log p(X |\u03b8)\u2212 log p(X |\u03b8t) = Q(\u03b8|\u03b8t)\u2212Q(\u03b8t|\u03b8t)+H(\u03b8|\u03b8t)\u2212H(\u03b8t|\u03b8t) , However, Gibbs\u2019 inequality tells us that H(\u03b8|\u03b8t) \u2265 H(\u03b8t|\u03b8t), so we can conclude that\nlog p(X |\u03b8)\u2212 log p(X |\u03b8t) \u2265 Q(\u03b8|\u03b8t) \u2212Q(\u03b8t|\u03b8t) . In words, choosing \u03b8 to improve Q(\u03b8|\u03b8t) beyond Q(\u03b8t|\u03b8t) can not cause log p(X |\u03b8) to decrease below log p(X |\u03b8t), and so the marginal likelihood of the data is nondecreasing.\nObservations X = {x1, ..., xn}, latent variables Z = {z1, ..., zm}, the model p(x|\u03b8).\nL(\u03b8) = n \u2211\ni=1\nlog p(xi|\u03b8) = n \u2211\ni=1\nlog m \u2211\nj=1\np(xi, zj |\u03b8).\nn \u2211\ni=1\nlog p(xi|\u03b8) = n \u2211\ni=1\nlog m \u2211\nj=1\np(xi, zj|\u03b8)\n= n \u2211\ni=1\nlog m \u2211\nj=1\nQi(zj) p(xi, zj |\u03b8)\nQi(zj)\n\u2265 n \u2211\ni=1\nm \u2211\nj=1\nQi(zj) log p(xi, zj |\u03b8)\nQi(zj) .\nwhere \u2211m\nj=1 Qi(zj) = 1, and \u2265 becomes = if and only if Qi(zj) = p(zj|xi, \u03b8). Thus we get the EM algorithm. E steps:\nQi(zj) := p(zj|xi, \u03b8t).\nM steps:\n\u03b8t+1 := argmax \u03b8\nn \u2211\ni=1\nm \u2211\nj=1\nQi(zj) log p(xi, zj|\u03b8)\nQi(zj) .\nThe convergence of EM algorithm. We have\nL(\u03b8t) = n \u2211\ni=1\nm \u2211\nj=1\nQi(zj) log p(xi, zj |\u03b8t)\nQi(zj) ,\nwhere Qi(zj) := p(zj|xi, \u03b8t).\nL(\u03b8t+1) = max \u03b8\nn \u2211\ni=1\nm \u2211\nj=1\nQi(zj) log p(xi, zj|\u03b8)\nQi(zj)\n\u2265 n \u2211\ni=1\nm \u2211\nj=1\nQi(zj) log p(xi, zj |\u03b8t)\nQi(zj)\n= L(\u03b8t).\nB Probability Linear Discriminant Analysis\nWe assume that the training data consists of I speakers or individuals each with Hi sessions or images. We model data generation by the process:\nxij = \u00b5+Bzi + \u01ebij .\n\u01ebij is defined to be Gaussian with diagonal covariance \u03a3. Let \u03b8 = {\u00b5,B,\u03a3}, xi = {xij : j = 1, ..., Hi} and X = {xij \u2208 Rd : i = 1, ..., I; j = 1, ..., Hi} and B \u2208 Rd\u00d7N , that is the dimension of the subspace is N .\nMore formally the model can be described in terms of conditional probabilities:\nP (xij |zi, \u03b8) = N (xij |\u00b5+Bzi,\u03a3),\nP (zi) = N (zi|0, I),\nwhere N (x|\u00b5,\u03a3) represents a Gaussian in x with mean \u00b5 and covariance \u03a3.\nB.1 Training of PLDA\nWe use EM algorithm updates for learning the PLDA model. E steps: calculate the expectation EZ|X,\u03b8t [zi] and EZ|X,\u03b8t [ziz T i ].\nP (zi|xi, \u03b8) \u221d P (xi|zi, \u03b8)P (zi) =\n\n\nHi \u220f\nj=1\nP (xij |zi, \u03b8)\n\nP (zi)\n=\n\n\nHi \u220f\nj=1\nN (xij |\u00b5+Bzi,\u03a3)\n\nN (zi|0, I)\n\u221d\n\n\n\nHi \u220f\nj=1\nexp\n[\n\u2212 1\n2 (xij \u2212 \u00b5\u2212Bzi)\nT\u03a3\u22121(xij \u2212 \u00b5\u2212Bzi)\n]\n\n\n\nexp\n(\n\u2212 1\n2 zTi zi\n)\n= exp\n\n\n\n\u2212 1\n2\n\n\nHi \u2211\nj=1\n(xij \u2212 \u00b5\u2212Bzi) T\u03a3\u22121(xij \u2212 \u00b5\u2212Bzi)\n\n\u2212 1\n2 zTi zi\n\n\n\n\u221d exp\n\n\n\nHi \u2211\nj=1\n(xij \u2212 \u00b5) T\u03a3\u22121Bzi \u2212\n1 2 zTi (I+HiB T\u03a3\u22121B)zi\n\n\n\nThus we have\nEZ|X,\u03b8t [zi] = ( I+HiB T\u03a3\u22121B )\u22121 BT\u03a3\u22121\nHi \u2211\nj=1\n(xij \u2212 \u00b5).\nEZ|X,\u03b8t [ziz T i ] =\n(\nI+HiB T\u03a3\u22121B )\u22121 + EZ|X,\u03b8t [zi]EZ|X,\u03b8t [zi] T .\nM steps:\n\u03b8t+1 := argmax \u03b8 Q(\u03b8|\u03b8t)\n= argmax \u03b8 EZ|X,\u03b8t [logL(\u03b8;X,Z)] = argmax \u03b8 EZ|X,\u03b8t [log p(X,Z|\u03b8)]\n= argmax \u03b8 EZ|X,\u03b8t\n\n\nI \u2211\ni=1\nHi \u2211\nj=1\nlog p(xij , zi|\u03b8)\n\n\n= argmax \u03b8 EZ|X,\u03b8t\n\n\n\nI \u2211\ni=1\nHi \u2211\nj=1\nlog[p(xij |zi, \u03b8)p(zi)]\n\n\n\n= argmax \u03b8 EZ|X,\u03b8t\n\n\n\nI \u2211\ni=1\nHi \u2211\nj=1\nlog[N (xij |\u00b5+Bzi,\u03a3)N (zi|0, I)]\n\n\n\n= argmax \u03b8 EZ|X,\u03b8t\n\n\n\nI \u2211\ni=1\nHi \u2211\nj=1\nlog\n[\n1 \u221a\n(2\u03c0)D|\u03a3| exp\n(\n\u2212 1\n2 (xij \u2212 \u00b5\u2212Bzi)\nT\u03a3\u22121(xij \u2212 \u00b5\u2212Bzi)\n)\n]\n\n\n\n= \u2212 argmax \u03b8\nI \u2211\ni=1\nHi \u2211\nj=1\nEZ|X,\u03b8t\n{\n1 2 log |\u03a3|+ 1 2 (xij \u2212 \u00b5\u2212Bzi) T\u03a3\u22121(xij \u2212 \u00b5\u2212Bzi))\n}\n= argmax \u03b8\nI \u2211\ni=1\nHi \u2211\nj=1\n[\n\u2212 1\n2 log |\u03a3| \u2212\n1 2 (xij \u2212 \u00b5) T\u03a3\u22121(xij \u2212 \u00b5)\n]\n+\nI \u2211\ni=1\nHi \u2211\nj=1\n(xij \u2212 \u00b5) T\u03a3\u22121BEZ|X,\u03b8t [zi]\u2212\n1\n2\n\n\nI \u2211\ni=1\nHi \u2211\nj=1\nEZ|X,\u03b8t [z T i B T\u03a3\u22121Bzi]\n\n\nwhere the fact that N (zi|0, I) has no dependence on \u03b8 is used in the derivation. Take derivatives with respect to B, \u03a3\u22121, and \u00b5 and then equate these derivatives to zero to proved the update rules. The following is the detailed derivations. We have\n\u2202Q \u2202B =\nI \u2211\ni=1\nHi \u2211\nj=1\n\u03a3\u22121(xij \u2212 \u00b5)EZ|X,\u03b8t [zi] T \u2212\nI \u2211\ni=1\nHi \u2211\nj=1\n\u03a3\u22121BEZ|X,\u03b8t [ziz T i ].\nSetting \u2202Q \u2202B = 0, result in\nB =\n\n\n\nI \u2211\ni=1\nHi \u2211\nj=1\n(xij \u2212 \u00b5)EZ|X,\u03b8t [zi] T\n\n\n\n\n\n\nI \u2211\ni=1\nHi \u2211\nj=1\nEZ|X,\u03b8t [ziz T i ]\n\n\n\n\u22121\n.\nWe have\n\u2202Q\n\u2202\u03a3\u22121 =\n1\n2\nI \u2211\ni=1\nHi \u2211\nj=1\n[ \u03a3\u2212 (xij \u2212 \u00b5)(xij \u2212 \u00b5) T ]\n+\nI \u2211\ni=1\nHi \u2211\nj=1\n(xij \u2212 \u00b5)EZ|X,\u03b8t [zi] TBT \u2212\n1\n2\n\n\nI \u2211\ni=1\nHi \u2211\nj=1\nBEZ|X,\u03b8t [ziz T i ]B T\n\n\n= 1\n2\nI \u2211\ni=1\nHi \u2211\nj=1\n[ \u03a3\u2212 (xij \u2212 \u00b5)(xij \u2212 \u00b5) T ]\n+\nI \u2211\ni=1\nHi \u2211\nj=1\n(xij \u2212 \u00b5)EZ|X,\u03b8t [zi] TBT \u2212\n1\n2\n\n\nI \u2211\ni=1\nHi \u2211\nj=1\n(xij \u2212 \u00b5)EZ|X,\u03b8t [zi] TBT\n\n\nSetting \u2202Q \u2202\u03a3\u22121 = 0, we have\nI \u2211\ni=1\nHi \u2211\nj=1\n\u03a3 = I \u2211\ni=1\nHi \u2211\nj=1\n{\n(xij \u2212 \u00b5)(xij \u2212 \u00b5) T \u2212 (xij \u2212 \u00b5)EZ|X,\u03b8t [zi] TBT } .\nRearranging, result in\n\u03a3 = 1\n\u2211I i=1 \u2211Hi j=1 1\nI \u2211\ni=1\nHi \u2211\nj=1\n{\n(xij \u2212 \u00b5)(xij \u2212 \u00b5) T \u2212 (xij \u2212 \u00b5)EZ|X,\u03b8t [zi] TBT } .\nWe have\n\u2202Q \u2202\u00b5 =\nI \u2211\ni=1\nHi \u2211\nj=1\n\u2212(xij \u2212 \u00b5) T\u03a3\u22121 \u2212\nI \u2211\ni=1\nHi \u2211\nj=1\nEZ|X,\u03b8t [zi] TBT\u03a3\u22121\nSetting \u2202Q \u2202\u00b5\n= 0, we have I\n\u2211\ni=1\nHi \u2211\nj=1\n\u2212(xij \u2212 \u00b5) T \u2212\nI \u2211\ni=1\nHi \u2211\nj=1\nEZ|X,\u03b8t [zi] TBT = 0\nSince EZ|X,\u03b8t [zi] \u2248 0, we have \u2211I i=1 \u2211Hi j=1 \u2212(xij \u2212 \u00b5) = 0, that is\n\u00b5 =\n\u2211I i=1 \u2211Hi j=1 xij\n\u2211I i=1 \u2211Hi j=1 1\n.\nB.2 Verification by using PLDA\nGiven a test xt and target xs, the likelihood ratio score is\nl(xt, xs) = P (xt, xs|same latent variable)\nP (xt, xs|different latent variables) =\n\u222b\np(xt, xs, z|\u03b8)dz \u222b\np(xt, zt|\u03b8)dzt \u222b p(xs, zs|\u03b8)dzs\n=\n\u222b\np(xt, xs|z, \u03b8)p(z)dz \u222b\np(xt|zt, \u03b8)p(zt)dzt \u222b p(xs|zs, \u03b8)p(zs)dzs =\nN (\n[\nxt xs\n]\n|\n[\n\u00b5 \u00b5\n]\n,\n[\nBBT +\u03a3 BBT\nBBT BBT +\u03a3\n]\n)\nN (xt|\u00b5,BB T +\u03a3)N (xs|\u00b5,BB T +\u03a3) .\nWe take log of both side\nlog l(xt, xs) = logN (\n[\nxt xs\n]\n|\n[\n\u00b5 \u00b5\n]\n,\n[\nBBT +\u03a3 BBT\nBBT BBT +\u03a3\n]\n)\u2212 logN (xt|\u00b5,BB T +\u03a3)N (xs|\u00b5,BB T +\u03a3).\nSince \u00b5 is a global offset that can be pre-computed and removed from all xij , we set \u00b5 = 0, and we have\nlog l(xt, xs) = \u2212 1\n2\n[\nxTt x T s\n]\n[\nBBT +\u03a3 BBT\nBBT BBT +\u03a3 ]\u22121 [ xt xs ]\n+ 1\n2\n[\nxTt x T s\n]\n[\nBBT +\u03a3 0\n0 BBT +\u03a3 ]\u22121 [ xt xs ] + const.\nLet \u03a31 = BB T +\u03a3 and \u03a32 = BB T , we have\nlog l(xt, xs) = \u2212 1\n2\n[\nxTt x T s\n]\n[\n\u03a31 \u03a32 \u03a32 \u03a31 ]\u22121 [ xt xs ] + 1 2 [ xTt x T s ] [ \u03a31 0 0 \u03a31 ]\u22121 [ xt xs ] + const.\n= \u2212 1\n2\n[\nxTt x T s\n]\n[\n(\u03a31 \u2212 \u03a32\u03a3 \u22121 1 \u03a32) \u22121 \u2212\u03a3\u221211 \u03a32(\u03a31 \u2212 \u03a32\u03a3 \u22121 1 \u03a32) \u22121\n\u2212(\u03a31 \u2212 \u03a32\u03a3 \u22121 1 \u03a32) \u22121\u03a32\u03a3 \u22121 1 (\u03a31 \u2212 \u03a32\u03a3 \u22121 1 \u03a32) \u22121\n] [\nxt xs\n]\n+ 1\n2\n[\nxTt x T s\n]\n[\n\u03a3\u221211 0 0 \u03a3\u221211\n] [\nxt xs\n]\n+ const.\n= 1\n2\n[\nxTt x T s\n]\n[\n\u03a3\u221211 \u2212 (\u03a31 \u2212 \u03a32\u03a3 \u22121 1 \u03a32) \u22121 \u03a3\u221211 \u03a32(\u03a31 \u2212 \u03a32\u03a3 \u22121 1 \u03a32) \u22121 \u03a3\u221211 \u03a32(\u03a31 \u2212 \u03a32\u03a3 \u22121 1 \u03a32) \u22121 \u03a3\u221211 \u2212 (\u03a31 \u2212 \u03a32\u03a3 \u22121 1 \u03a32) \u22121\n] [\nxt xs\n]\n+ const\n= 1\n2\n[\nxTt x T s\n]\n[\nQ P P Q\n] [\nxt xs\n]\n+ const\n= 1\n2\n[\nxTt Qxt + 2x T t Pxs + x T s Qxs\n]\n+ const\nThe above approach needs to obtain the inverse of the matrix \u03a31 and \u03a31 \u2212\u03a32\u03a3 \u22121 1 \u03a32, both have the size of d\u00d7d. When d \u226b 0 (that situation is very common in modern application), the inverse becomes very hard to solve or even cannot be solved. If we look carefully about the definition of \u03a31, it is indeed an inverse of a low-rank correction of \u03a3, which can always be computed by doing a low-rank correction to the inverse of the original matrix using the Woodbury matrix identity [5]:\n(A+ UCV ) \u22121 = A\u22121 \u2212A\u22121U ( C\u22121 + V A\u22121U )\u22121 V A\u22121,\nwhere A is n-by-n and invertible, U is n-by-k, C is k-by-k and invertible, and V is k-by-n. Using the Woodbury matrix identity, we have\n\u03a3\u221211 = (\u03a3 +BB T )\u22121\n= \u03a3\u22121 \u2212 \u03a3\u22121B ( I+BT\u03a3\u22121B )\u22121 BT\u03a3\u22121\nwhere we successfully transform the a d \u00d7 d matrix inverse into a N \u00d7 N matrix inverse. Using the same identity, with a little cumbersome computation, we have\n(\n\u03a31 \u2212 \u03a32\u03a3 \u22121 1 \u03a32 )\u22121 =\n(\n\u03a3 +BBT \u2212BBT ( \u03a3+BBT )\u22121 BBT )\u22121\n=\n(\n\u03a3 +BBT \u2212B\n(\nBT ( \u03a3+BBT )\u22121 B\n) BT )\u22121\n=\n(\n\u03a3 +B\n(\nI\u2212BT ( \u03a3+BBT )\u22121 B\n) BT )\u22121\n= ( \u03a3+BXBT )\u22121\n= \u03a3\u22121 \u2212 \u03a3\u22121B ( X\u22121 +BT\u03a3\u22121B )\u22121 BT\u03a3\u22121\nwhere we define X = I\u2212BT ( \u03a3+BBT )\u22121 B.\nLet Y = ( \u03a31 \u2212 \u03a32\u03a3 \u22121 1 \u03a32 )\u22121 then we have\nlog l(xt, xs) = 1\n2\n[\nxTt x T s\n]\n[\n\u03a3\u221211 \u2212 (\u03a31 \u2212 \u03a32\u03a3 \u22121 1 \u03a32) \u22121 \u03a3\u221211 \u03a32(\u03a31 \u2212 \u03a32\u03a3 \u22121 1 \u03a32) \u22121 \u03a3\u221211 \u03a32(\u03a31 \u2212 \u03a32\u03a3 \u22121 1 \u03a32) \u22121 \u03a3\u221211 \u2212 (\u03a31 \u2212 \u03a32\u03a3 \u22121 1 \u03a32) \u22121\n] [\nxt xs\n]\n+ const\n= 1\n2\n[\nxTt x T s\n]\n[\n\u03a3\u221211 \u2212Y \u03a3 \u22121 1 \u03a32Y \u03a3\u221211 \u03a32Y \u03a3 \u22121 1 \u2212Y\n] [\nxt xs\n]\n+ const\n= 1\n2\n[ xTt ( \u03a3\u221211 \u2212Y ) xt + x T t ( \u03a3\u221211 \u03a32Y ) xs + x T s ( \u03a3\u221211 \u03a32Y ) xt + x T s ( \u03a3\u221211 \u2212Y ) xs ] + const\n= 1\n2\n[ xTt ( \u03a3\u221211 \u2212Y ) xt + 2x T t ( \u03a3\u221211 \u03a32Y ) xs + x T s ( \u03a3\u221211 \u2212Y ) xs ] + const\n= 1\n2 [xTt\n(\n\u2212\u03a3\u22121B ( I+BT\u03a3\u22121B )\u22121 BT\u03a3\u22121 +\u03a3\u22121B ( X\u22121 +BT\u03a3\u22121B )\u22121 BT\u03a3\u22121 )\nxt\n+ 2xTt\n(\n\u03a3\u22121 \u2212 \u03a3\u22121B ( I+BT\u03a3\u22121B )\u22121 BT\u03a3\u22121 ) BBT ( \u03a3\u22121 \u2212 \u03a3\u22121B ( X\u22121 +BT\u03a3\u22121B )\u22121 BT\u03a3\u22121 )\nxs\n+ xTs\n(\n\u2212\u03a3\u22121B ( I+BT\u03a3\u22121B )\u22121 BT\u03a3\u22121 +\u03a3\u22121B ( X\u22121 +BT\u03a3\u22121B )\u22121 BT\u03a3\u22121 )\nxs] + const\n= 1\n2 [xTt\n( \u2212\u03a3\u22121BTBT\u03a3\u22121 +\u03a3\u22121BHBT\u03a3\u22121 )\nxt + x T s\n( \u2212\u03a3\u22121BTBT\u03a3\u22121 +\u03a3\u22121BHBT\u03a3\u22121 )\nxs\n+ 2xTt\n( \u03a3\u22121B\u2212 \u03a3\u22121BTBT\u03a3\u22121B )( BT\u03a3\u22121 \u2212BT\u03a3\u22121BHBT\u03a3\u22121 )\nxs] + const\nwhere we defined T = ( I+BT\u03a3\u22121B )\u22121 and H = ( X\u22121 +BT\u03a3\u22121B )\u22121 which are inverse of N\u00d7N matrix,\nsince \u03a31, \u03a32 and further Y are all symmetric matrix.\nC Multi-view PLDA\nThe goal of this section is to present the EM algorithm updates for leaning the multi-view (joint) PLDA model.\nC.1 Training of multi-view (joint) PLDA\nLet X = {xijk \u2208 Rd : i = 1, ..., I; j = 1, ..., J ; k = 1, ..., Hij} and xij = {xijk : k = 1, ..., Hij}. E steps: we need to calculate the expectations EU|X,\u03b8t [ui], EV |X,\u03b8t [vj ], EU|X,\u03b8t [uiu T i ], EV |X,\u03b8t [vjv T j ], and EU,V |X,\u03b8t [uiv T j ]. Indeed we have\nP (ui, vj |xij , \u03b8) \u221d P (xij |ui, vj , \u03b8)P (ui, vj) =\n\n\nHij \u220f\nk=1\nP (xijk |ui, vj , \u03b8)\n\nP (ui, vj)\n=\n\n\nHij \u220f\nk=1\nN (xijk |\u00b5+ Sui +Tvi,\u03a3)\n\nN (ui, vj |0, I)\n\u221d\n\n\n\nHij \u220f\nk=1\nexp\n[\n\u2212 1\n2 (xijk \u2212 \u00b5\u2212 Sui \u2212Tvj)\nT\u03a3\u22121(xijk \u2212 \u00b5\u2212 Sui \u2212Tvj)\n]\n\n\n\nexp\n(\n\u2212 1\n2 uTi ui \u2212\n1 2 vTj vj\n)\n= exp\n\n\n\n\u2212 1\n2\n\n\nHij \u2211\nk=1\n(xijk \u2212 \u00b5\u2212Bzij) T\u03a3\u22121(xijk \u2212 \u00b5\u2212Bzij)\n\n\u2212 1\n2 uTi ui \u2212\n1 2 vTj vj\n\n\n\n\u221d exp\n\n\n\nHij \u2211\nk=1\n(xijk \u2212 \u00b5) T\u03a3\u22121Bzij \u2212\n1 2 zTij(I+B T\u03a3\u22121B)zij\n\n\n\n,\nwhere zij =\n[\nui vj\n]\nand B = [ S T ] .\nThus we have\nEZ|X,\u03b8t\n{[\nui vj\n]}\n= EZ|X,\u03b8t [zij ] = ( I+HijB T\u03a3\u22121B )\u22121 BT\u03a3\u22121\nHij \u2211\nk=1\n(xijk \u2212 \u00b5).\nwhere Z = {zij : i = 1, ..., I; j = 1, ..., J}.\nEZ|X,\u03b8t\n{[\nuiu T i uiv T j vju T i vjv T j\n]}\n= EZ|X,\u03b8t [zijz T ij ] =\n(\nI+HijB T\u03a3\u22121B )\u22121 + EZ|X,\u03b8t [zij ]EZ|X,\u03b8t [zij ] T .\nM steps: we update the values of the parameters \u03b8 = {\u00b5,S,T,\u03a3} and have\n\u03b8t+1 := argmax \u03b8 Q(\u03b8|\u03b8t)\n= argmax \u03b8 EU,V |X,\u03b8t [logL(\u03b8;X,U, V )] = argmax \u03b8 EU,V |X,\u03b8t [log p(X,U, V |\u03b8)]\n= argmax \u03b8 EU,V |X,\u03b8t\n\n\nI \u2211\ni=1\nJ \u2211\nj=1\nHij \u2211\nk=1\nlog p(xijk, ui, vj |\u03b8)\n\n\n= argmax \u03b8 EU,V |X,\u03b8t\n\n\n\nI \u2211\ni=1\nJ \u2211\nj=1\nHij \u2211\nk=1\nlog[p(xijk |ui, vj , \u03b8)p(ui, vj)]\n\n\n\n= argmax \u03b8 EU,V |X,\u03b8t\n\n\n\nI \u2211\ni=1\nJ \u2211\nj=1\nHij \u2211\nk=1\nlog[N (xijk |\u00b5+ Sui +Tvj ,\u03a3)N (ui, vj |0, I)]\n\n\n\n= argmax \u03b8 EU,V |X,\u03b8t \n\n\nI \u2211\ni=1\nJ \u2211\nj=1\nHij \u2211\nk=1\nlog\n[\n1 \u221a\n(2\u03c0)D|\u03a3| exp\n(\n\u2212 1\n2 (xijk \u2212 \u00b5\u2212 Sui \u2212Tvi)\nT\u03a3\u22121(xijk \u2212 \u00b5\u2212 Sui \u2212Tvj)\n)\n]\n\n\n\n= \u2212 argmax \u03b8\nI \u2211\ni=1\nJ \u2211\nj=1\nHij \u2211\nk=1\nEU,V |X,\u03b8t\n{\n1 2 log |\u03a3|+ 1 2 (xijk \u2212 \u00b5\u2212 Sui \u2212Tvi) T\u03a3\u22121(xijk \u2212 \u00b5\u2212 Sui \u2212Tvj))\n}\n= argmax \u03b8\nI \u2211\ni=1\nJ \u2211\nj=1\nHijk \u2211\nk=1\n[\n\u2212 1\n2 log |\u03a3| \u2212\n1 2 (xijk \u2212 \u00b5) T\u03a3\u22121(xijk \u2212 \u00b5)\n]\n+\nI \u2211\ni=1\nJ \u2211\nj=1\nHijk \u2211\nk=1\n(xijk \u2212 \u00b5) T\u03a3\u22121\n{ SEU|X,\u03b8t [ui] +TEV |X,\u03b8t [vi] }\n\u2212 1\n2\nI \u2211\ni=1\nJ \u2211\nj=1\nHijk \u2211\nk=1\n{\nEU|X,\u03b8t [u T i S T\u03a3\u22121Sui] + 2EU,V |X,\u03b8t [v T j T T\u03a3\u22121Sui] + EV |X,\u03b8t [v T j T T\u03a3\u22121Tvj ] }\nIn this above derivation, we use the fact that N (ui, vj |0, I) has nothing to do with \u03b8. We have\n\u2202Q \u2202S =\nI \u2211\ni=1\nJ \u2211\nj=1\nHijk \u2211\nk=1\n\u03a3\u22121(xijk\u2212\u00b5)EU|X,\u03b8t [ui] T\u2212\nI \u2211\ni=1\nJ \u2211\nj=1\nHijk \u2211\nk=1\n\u03a3\u22121SEU|X,\u03b8t [uiu T i ]\u2212\nI \u2211\ni=1\nJ \u2211\nj=1\nHijk \u2211\nk=1\n\u03a3\u22121TEU,V |X,\u03b8t [vju T i ].\n\u2202Q \u2202T =\nI \u2211\ni=1\nJ \u2211\nj=1\nHijk \u2211\nk=1\n\u03a3\u22121(xijk\u2212\u00b5)EV |X,\u03b8t [vj ] T\u2212\nI \u2211\ni=1\nJ \u2211\nj=1\nHijk \u2211\nk=1\n\u03a3\u22121TEV |X,\u03b8t [vjv T j ]\u2212\nI \u2211\ni=1\nJ \u2211\nj=1\nHijk \u2211\nk=1\n\u03a3\u22121SEU,V |X,\u03b8t [uiv T j ].\nSetting \u2202Q \u2202S = 0 and \u2202Q \u2202T = 0, we have\nS =\n\n\n\nI \u2211\ni=1\nJ \u2211\nj=1\nHijk \u2211\nk=1\n(xijk \u2212 \u00b5)EU|X,\u03b8t [ui] T \u2212\nI \u2211\ni=1\nJ \u2211\nj=1\nHijk \u2211\nk=1\nTEU,V |X,\u03b8t [vju T i ]\n\n\n\n{ EU|X,\u03b8t [uiu T i ] }\u22121 .\nT =\n\n\n\nI \u2211\ni=1\nJ \u2211\nj=1\nHijk \u2211\nk=1\n(xijk \u2212 \u00b5)EV |X,\u03b8t [vj ] T \u2212\nI \u2211\ni=1\nJ \u2211\nj=1\nHijk \u2211\nk=1\nSEU,V |X,\u03b8t [uiv T j ]\n\n\n\n{ EV |X,\u03b8t [vjv T j ] }\u22121 .\nWe have\n\u2202Q\n\u2202\u03a3\u22121 =\n1\n2\nI \u2211\ni=1\nJ \u2211\nj=1\nHijk \u2211\nk=1\n[ \u03a3\u2212 (xijk \u2212 \u00b5)(xijk \u2212 \u00b5) T ]\n+\nI \u2211\ni=1\nJ \u2211\nj=1\nHijk \u2211\nk=1\n(xijk \u2212 \u00b5) [ EU|X,\u03b8t [ui] TST + EV |X,\u03b8t [vj ] TTT ]\n\u2212 1\n2\n\n\nI \u2211\ni=1\nJ \u2211\nj=1\nHijk \u2211\nk=1\n(\nSEU|X,\u03b8t [uiu T i ]S T + 2TEU,V |X,\u03b8t [vju T i ]S T +TEV |X,\u03b8t [vjv T j ]T\nT )\n\n\n= 1\n2\nI \u2211\ni=1\nJ \u2211\nj=1\nHijk \u2211\nk=1\n[ \u03a3\u2212 (xijk \u2212 \u00b5)(xijk \u2212 \u00b5) T ]\n+ I \u2211\ni=1\nJ \u2211\nj=1\nHijk \u2211\nk=1\n(xijk \u2212 \u00b5) [ EU|X,\u03b8t [ui] TST + EV |X,\u03b8t [vj ] TTT ]\n\u2212 1\n2\n\n\nI \u2211\ni=1\nJ \u2211\nj=1\nHijk \u2211\nk=1\n(\n(xijk \u2212 \u00b5)EU|X,\u03b8t [ui] TST + (xijk \u2212 \u00b5)EV |X,\u03b8t [vj ] TTT )\n\n\nSetting \u2202Q \u2202\u03a3\u22121 = 0, we have\nI \u2211\ni=1\nJ \u2211\nj=1\nHijk \u2211\nk=1\n\u03a3 =\nI \u2211\ni=1\nJ \u2211\nj=1\nHijk \u2211\nk=1\n{\n(xijk \u2212 \u00b5)(xijk \u2212 \u00b5) T \u2212 (xijk \u2212 \u00b5)\n[\nEU|X,\u03b8t [ui] TST + EV |X,\u03b8t [vi] TTT ]} .\nRearranging, result in\n\u03a3 = 1\n\u2211I i=1 \u2211J j=1 \u2211Hijk k=1 1\nI \u2211\ni=1\nJ \u2211\nj=1\nHijk \u2211\nk=1\n{\n(xijk \u2212 \u00b5)(xijk \u2212 \u00b5) T \u2212 (xijk \u2212 \u00b5)\n[\nEU|X,\u03b8t [ui] TST + EV |X,\u03b8t [vi] TTT ]} .\nWe have\n\u2202Q \u2202\u00b5 =\nI \u2211\ni=1\nJ \u2211\nj=1\nHijk \u2211\nk=1\n\u2212(xijk \u2212 \u00b5) T\u03a3\u22121 \u2212\nI \u2211\ni=1\nJ \u2211\nj=1\nHijk \u2211\nk=1\n[\nEU|X,\u03b8t [ui] TST + EV |X,\u03b8t [vi] TTT ] \u03a3\u22121\nSetting \u2202Q \u2202\u00b5 = 0, we have\nI \u2211\ni=1\nJ \u2211\nj=1\nHijk \u2211\nk=1\n\u2212(xijk \u2212 \u00b5) T \u2212\nI \u2211\ni=1\nJ \u2211\nj=1\nHijk \u2211\nk=1\n[\nEU|X,\u03b8t [ui] TST + EV |X,\u03b8t [vj ] TTT ] = 0\nSince EU|X,\u03b8t [ui] \u2248 0 and EV |X,\u03b8t [vj ] \u2248 0, we have \u2211I i=1 \u2211J j=1 \u2211Hijk k=1 \u2212(xij \u2212 \u00b5) = 0, that is\n\u00b5 =\n\u2211I i=1 \u2211J j=1 \u2211Hijk k=1 xijk\n\u2211I i=1 \u2211J j=1 \u2211Hijk k=1 1\n.\nC.2 Verification of the latent variables u and v separately\nIn multi-view (joint) PLDA, as described in the main body of this work, the latent variables u and v are verified jointly. Indeed the latent variables u and v can also be verified separately.\nSimilar with the verification of hidden variables u and v jointly together in the main body, we also treat the verification of single variable u as a kind of hypothesis testing problem with the null hypothesis H0 defined for the all same latent variable u, and the alternative hypothesis H1 defined for different u variables. That is in verification we compare the likelihood of the vectors under the hypothesisH0 where two multi-view features have the same underlying hidden variable u (same v variable in model M0, different v variables in model M1, as the Fig. 3 shows) and the hypothesis H1 where they have different latent variables of u (same v variable in model M2, different v variables in model M3, as the Fig. 1 shows). Given a test feature xt and an enrolled feature xs, set A = SS\nT + TTT , B = 2SST + TTT , C = SST + 2TTT , and let the priori probability of the models M0, M1, M2, M3 as p0 = P (M0|H0), p1 = P (M1|H0), p2 = P (M2|H1), p3 = P (M3|H1), then the likelihood ratio score is\nl(xt, xs) = P (xt, xs|H0)\nP (xt, xs|H1)\n= X\nY\nwhere\nX\n= P (xt, xs|H0)\n= P (xt, xs|M0)P (M0|H0) + P (xt, xs|M1)P (M1|H0)\n= p0\n\u222b \u222b\np(xt, xs, u1, v1|\u03b8)du1adv1 + p2\n\u222b \u222b \u222b\np(xt, xs, u1, v1, v2|\u03b8)du1dv1dv2\n= p0N (\n[\nxt xs\n]\n|\n[\n\u00b5 \u00b5\n]\n,\n[\nA+\u03a3 A A A+\u03a3\n]\n) + p1N (\n[\nxt xs\n]\n|\n[\n\u00b5 \u00b5\n]\n,\n[\nB+\u03a3 B B B+\u03a3\n]\n).\nand\nY\n= P (xt, xs|H1)\n= P (xt, xs|M2)P (M2|H1) + P (xt, xs|M3)P (M3|H1)\n= p2\n\u222b \u222b \u222b\np(xt, xs, u1, u2, v1|\u03b8)du1du2dv1 + p3\n\u222b \u222b\np(xt, u1, v1|\u03b8)du1dv1\n\u222b \u222b\np(xs, u2, v2|\u03b8)du2dv2\n= p2N (\n[\nxt xs\n]\n|\n[\n\u00b5 \u00b5\n]\n,\n[\nC+\u03a3 C C C+\u03a3\n]\n) + p3N (\n[\nxt xs\n]\n|\n[\n\u00b5 \u00b5\n]\n,\n[\nA+\u03a3 0 0 A+\u03a3\n]\n)."}], "references": [{"title": "Multi-task learning for text-dependent speaker verificaion", "author": ["Nanxin Chen", "Yanmin Qian", "Kai Yu"], "venue": "In INTERSPEECH,", "citeRegEx": "1", "shortCiteRegEx": "1", "year": 2015}, {"title": "Maximum likelihood estimation from incomplete data via the em algorithm (with discussion", "author": ["A.P. Dempster"], "venue": "Journal of the Royal Statistical Society,", "citeRegEx": "2", "shortCiteRegEx": "2", "year": 1977}, {"title": "Joint probabilistic linear discriminant analysis", "author": ["Luciana Ferrer"], "venue": "arXiv preprint arXiv:1704.02346,", "citeRegEx": "3", "shortCiteRegEx": "3", "year": 2017}, {"title": "Analysis of i-vector length normalization in speaker recognition systems", "author": ["Daniel Garcia-Romero", "Carol Y. Espy-Wilson"], "venue": "In INTERSPEECH 2011, Conference of the International Speech Communication", "citeRegEx": "4", "shortCiteRegEx": "4", "year": 2011}, {"title": "Accuracy and stability of numerical algorithms", "author": ["Higham", "J Nicholas"], "venue": "Journal of the American Statistical Association,", "citeRegEx": "5", "shortCiteRegEx": "5", "year": 1996}, {"title": "Probabilistic linear discriminant analysis", "author": ["Sergey Ioffe"], "venue": "Proc Eccv,", "citeRegEx": "6", "shortCiteRegEx": "6", "year": 2006}, {"title": "Plda modeling in i-vector and supervector space for speaker verification", "author": ["Y. Jiang", "K.A. Lee", "Z. Tang", "B. Ma", "A. Larcher", "H. Li"], "venue": "In ACM International Conference on Multimedia, Singapore,", "citeRegEx": "7", "shortCiteRegEx": "7", "year": 2012}, {"title": "Bayesian speaker verification with heavy tailed priors", "author": ["P. Kenny"], "venue": "In Proc. Odyssey Speaker and Language Recogntion Workshop, Brno, Czech Republic,", "citeRegEx": "8", "shortCiteRegEx": "8", "year": 2010}, {"title": "Text-dependent speaker verification: Classifiers, databases and rsr2015", "author": ["Anthony Larcher", "Kong Aik Lee", "Bin Ma", "Haizhou Li"], "venue": "Speech Communication,", "citeRegEx": "9", "shortCiteRegEx": "9", "year": 2014}, {"title": "A bayesian approach to unsupervised one-shot learning of object categories", "author": ["Fe Fei Li", "R Fergus", "P Perona"], "venue": "In IEEE International Conference on Computer Vision,", "citeRegEx": "10", "shortCiteRegEx": "10", "year": 2003}, {"title": "Deep feature for textdependent speaker verification", "author": ["Yuan Liu", "Yanmin Qian", "Nanxin Chen", "Tianfan Fu", "Ya Zhang", "Kai Yu"], "venue": "Speech Communication,", "citeRegEx": "11", "shortCiteRegEx": "11", "year": 2015}, {"title": "Mixture of plda for noise robust i-vector speaker verification", "author": ["Man-Wai Mak", "Xiaomin Pang", "Jen-Tzung Chien"], "venue": "IEEE/ACM Transactions on Audio, Speech and Language Processing (TASLP),", "citeRegEx": "12", "shortCiteRegEx": "12", "year": 2016}, {"title": "Probabilistic linear discriminant analysis for inferences about identity", "author": ["Simon J D Prince", "James H Elder"], "venue": null, "citeRegEx": "13", "shortCiteRegEx": "13", "year": 2007}, {"title": "Supervized mixture of plda models for cross-channel speaker verification", "author": ["Konstantin Simonchik", "Timur Pekhovsky", "Andrey Shulipa", "Anton Afanasyev"], "venue": "In INTERSPEECH,", "citeRegEx": "14", "shortCiteRegEx": "14", "year": 2012}], "referenceMentions": [{"referenceID": 5, "context": "1 Introduction There is a long tradition of using probability linear dimensionality reduction methods for object recognition, for example face recognition and speaker verification [6, 13, 7].", "startOffset": 180, "endOffset": 190}, {"referenceID": 12, "context": "1 Introduction There is a long tradition of using probability linear dimensionality reduction methods for object recognition, for example face recognition and speaker verification [6, 13, 7].", "startOffset": 180, "endOffset": 190}, {"referenceID": 6, "context": "1 Introduction There is a long tradition of using probability linear dimensionality reduction methods for object recognition, for example face recognition and speaker verification [6, 13, 7].", "startOffset": 180, "endOffset": 190}, {"referenceID": 9, "context": "This makes PLDA suitable for a wide variety of recognition tasks, such as \u201cone-shot learning\u201d [10], verification (hypothesis testing) [13, 15] and etc.", "startOffset": 94, "endOffset": 98}, {"referenceID": 12, "context": "This makes PLDA suitable for a wide variety of recognition tasks, such as \u201cone-shot learning\u201d [10], verification (hypothesis testing) [13, 15] and etc.", "startOffset": 134, "endOffset": 142}, {"referenceID": 5, "context": "Besides the original PLDA formulation [6, 13], there are several alternative variants: Gaussian PLDA [4] and heavy-tailed PLDA [8] assume the priors on the model\u2019s latent variables follow a Gaussian distribution or Student\u2019s t distribution; mixture of PLDA [14, 12] assumes the feature is generated from a mixture of factor analysis models.", "startOffset": 38, "endOffset": 45}, {"referenceID": 12, "context": "Besides the original PLDA formulation [6, 13], there are several alternative variants: Gaussian PLDA [4] and heavy-tailed PLDA [8] assume the priors on the model\u2019s latent variables follow a Gaussian distribution or Student\u2019s t distribution; mixture of PLDA [14, 12] assumes the feature is generated from a mixture of factor analysis models.", "startOffset": 38, "endOffset": 45}, {"referenceID": 3, "context": "Besides the original PLDA formulation [6, 13], there are several alternative variants: Gaussian PLDA [4] and heavy-tailed PLDA [8] assume the priors on the model\u2019s latent variables follow a Gaussian distribution or Student\u2019s t distribution; mixture of PLDA [14, 12] assumes the feature is generated from a mixture of factor analysis models.", "startOffset": 101, "endOffset": 104}, {"referenceID": 7, "context": "Besides the original PLDA formulation [6, 13], there are several alternative variants: Gaussian PLDA [4] and heavy-tailed PLDA [8] assume the priors on the model\u2019s latent variables follow a Gaussian distribution or Student\u2019s t distribution; mixture of PLDA [14, 12] assumes the feature is generated from a mixture of factor analysis models.", "startOffset": 127, "endOffset": 130}, {"referenceID": 13, "context": "Besides the original PLDA formulation [6, 13], there are several alternative variants: Gaussian PLDA [4] and heavy-tailed PLDA [8] assume the priors on the model\u2019s latent variables follow a Gaussian distribution or Student\u2019s t distribution; mixture of PLDA [14, 12] assumes the feature is generated from a mixture of factor analysis models.", "startOffset": 257, "endOffset": 265}, {"referenceID": 11, "context": "Besides the original PLDA formulation [6, 13], there are several alternative variants: Gaussian PLDA [4] and heavy-tailed PLDA [8] assume the priors on the model\u2019s latent variables follow a Gaussian distribution or Student\u2019s t distribution; mixture of PLDA [14, 12] assumes the feature is generated from a mixture of factor analysis models.", "startOffset": 257, "endOffset": 265}, {"referenceID": 0, "context": "Here we need to clarify that the term \u201cjoint PLDA\u201d also used in the work of [1], however indeed Chen et al.", "startOffset": 76, "endOffset": 79}, {"referenceID": 2, "context": "com The term \u201cjoint\u201d comes from the work [3] of Dr.", "startOffset": 41, "endOffset": 44}, {"referenceID": 12, "context": "2 Probability Linear Discrimination Analysis Probabilistic Linear Discriminant Analysis (PLDA) can be thought of as Linear Discriminant Analysis (LDA) with a probability distributions attached to the features, where the probability distribution models the data through the latent variables corresponding to the class and the view [13].", "startOffset": 330, "endOffset": 334}, {"referenceID": 1, "context": "The parameters \u03b8 of this PLDA model can be estimated using the Expectation Maximization (EM) [2] algorithm.", "startOffset": 93, "endOffset": 96}, {"referenceID": 6, "context": "The mathematical relationship between multi-view (joint) PLDA and JFA is analogous (not exactly) to that between PLDA and i-vector [7].", "startOffset": 131, "endOffset": 134}, {"referenceID": 1, "context": "In order to find the parameters \u03b8 = {\u03bc,S,T,\u03a3} under which the data set X is most likely, the classical EM algorithm [2] is employed.", "startOffset": 116, "endOffset": 119}, {"referenceID": 12, "context": "Notice that like standard PLDA [13], we do not calculate a point estimate of hidden variable.", "startOffset": 31, "endOffset": 35}, {"referenceID": 8, "context": "We describe the experimental setup and results for the proposed method on the public RSR2015 English corpus [9] and our internal Huiting202 Chinese Mandarin database collected by the Huiting Techonogly.", "startOffset": 108, "endOffset": 111}, {"referenceID": 0, "context": "[1] proposed a method to train a DNN to make classifications for both speaker and phrase identities by minimizing a total loss function consisting a sum of two cross-entropy losses as shown in Fig.", "startOffset": 0, "endOffset": 3}, {"referenceID": 8, "context": "2 Experimental setup RSR2015 corpus [9] was released by I2R, is used to evaluate the performance of different speaker verification systems.", "startOffset": 36, "endOffset": 39}, {"referenceID": 10, "context": "In this work, we follow the setup of [11], the part I of RSR2015 is used for the testing of multi-view (joint) PLDA.", "startOffset": 37, "endOffset": 41}, {"referenceID": 0, "context": "\u2022 PLDA: the j-vector system with classic PLDA (the j-vector with \u201cjoint PLDA\u201d called in [1]).", "startOffset": 88, "endOffset": 91}, {"referenceID": 0, "context": "References [1] Nanxin Chen, Yanmin Qian, and Kai Yu.", "startOffset": 11, "endOffset": 14}, {"referenceID": 1, "context": "[2] A.", "startOffset": 0, "endOffset": 3}, {"referenceID": 2, "context": "[3] Luciana Ferrer.", "startOffset": 0, "endOffset": 3}, {"referenceID": 3, "context": "[4] Daniel Garcia-Romero and Carol Y.", "startOffset": 0, "endOffset": 3}, {"referenceID": 4, "context": "[5] Higham and J Nicholas.", "startOffset": 0, "endOffset": 3}, {"referenceID": 5, "context": "[6] Sergey Ioffe.", "startOffset": 0, "endOffset": 3}, {"referenceID": 6, "context": "[7] Y.", "startOffset": 0, "endOffset": 3}, {"referenceID": 7, "context": "[8] P.", "startOffset": 0, "endOffset": 3}, {"referenceID": 8, "context": "[9] Anthony Larcher, Kong Aik Lee, Bin Ma, and Haizhou Li.", "startOffset": 0, "endOffset": 3}, {"referenceID": 9, "context": "[10] Fe Fei Li, R Fergus, and P Perona.", "startOffset": 0, "endOffset": 4}, {"referenceID": 10, "context": "[11] Yuan Liu, Yanmin Qian, Nanxin Chen, Tianfan Fu, Ya Zhang, and Kai Yu.", "startOffset": 0, "endOffset": 4}, {"referenceID": 11, "context": "[12] Man-Wai Mak, Xiaomin Pang, and Jen-Tzung Chien.", "startOffset": 0, "endOffset": 4}, {"referenceID": 12, "context": "[13] Simon J D Prince and James H Elder.", "startOffset": 0, "endOffset": 4}, {"referenceID": 13, "context": "[14] Konstantin Simonchik, Timur Pekhovsky, Andrey Shulipa, and Anton Afanasyev.", "startOffset": 0, "endOffset": 4}, {"referenceID": 4, "context": "If we look carefully about the definition of \u03a31, it is indeed an inverse of a low-rank correction of \u03a3, which can always be computed by doing a low-rank correction to the inverse of the original matrix using the Woodbury matrix identity [5]: (A+ UCV ) \u22121 = A \u2212AU ( C + V AU \u22121 V A, where A is n-by-n and invertible, U is n-by-k, C is k-by-k and invertible, and V is k-by-n.", "startOffset": 237, "endOffset": 240}], "year": 2017, "abstractText": "Multi-view feature has been proved to be very effective in many multimedia applications. However, the current back-end classifiers cannot make full use of such features. In this paper, we propose a method to model the multi-faceted information in the multi-view features explicitly and jointly. In our approach, the feature was modeled as a result derived by a generative multi-view (joint) Probability Linear Discriminant Analysis (PLDA) model, which contains multiple kinds of latent variables. The usual PLDA model only considers one single label. However, in practical use, when using multi-task learned network as feature extractor, the extracted feature are always attached to several labels. This type of feature is called multi-view feature. With multi-view (joint) PLDA, we are able to explicitly build a model that can combine multiple heterogeneous information from the multi-view features. In verification step, we calculated the likelihood to describe whether the two features having consistent labels or not. This likelihood are used in the following decision-making. Experiments have been conducted on large scale verification task. On the public RSR2015 data corpus, the results showed that our approach can achieve 0.02% EER and 0.09% EER for impostor wrong and impostor correct cases respectively.", "creator": "LaTeX with hyperref package"}}}