{"id": "1705.05363", "review": {"conference": "ICML", "VERSION": "v1", "DATE_OF_SUBMISSION": "15-May-2017", "title": "Curiosity-driven Exploration by Self-supervised Prediction", "abstract": "in many real - world scenarios, rewards extrinsic cues to the agent are extremely sparse, passive or absent altogether. in such cases, curiosity can serve as an intrinsic dynamic reward signal to enable the agent to explore its environment and learn skills that experience might be useful later during in its life. we formulate curiosity as the error in an agent's conscious ability to predict the consequence of its own actions in a visual feature knowledge space learned by a self - supervised inverse dynamics model. our formulation scales to high - dimensional continuous state spaces like images, bypasses the difficulties of directly predicting pixels, and, critically, ignores the aspects of the environment that cannot affect the agent. the proposed approach is evaluated in two environments : vizdoom and super mario bros. three broad settings are investigated : 1 ) sparse extrinsic reward, where curiosity allows for far fewer interactions with the environment to reach the goal ; 2 ) exploration with approximately no extrinsic reward, where curiosity pushes the agent to explore more efficiently ; and 3 ) generalization results to various unseen scenarios ( e. g. new levels of the same game ) where the knowledge gained from earlier experience helps the agent explore new places much faster than starting from scratch. demo video and code available at", "histories": [["v1", "Mon, 15 May 2017 17:56:22 GMT  (2221kb,D)", "http://arxiv.org/abs/1705.05363v1", "In ICML 2017. Website atthis https URL"]], "COMMENTS": "In ICML 2017. Website atthis https URL", "reviews": [], "SUBJECTS": "cs.LG cs.AI cs.CV cs.RO stat.ML", "authors": ["deepak pathak", "pulkit agrawal", "alexei a efros", "trevor darrell"], "accepted": true, "id": "1705.05363"}, "pdf": {"name": "1705.05363.pdf", "metadata": {"source": "META", "title": "Curiosity-driven Exploration by Self-supervised Prediction", "authors": ["Deepak Pathak", "Pulkit Agrawal", "Alexei A. Efros", "Trevor Darrell"], "emails": ["<pathak@berkeley.edu>."], "sections": [{"heading": "1. Introduction", "text": "Reinforcement learning algorithms aim at learning policies for achieving target tasks by maximizing rewards provided by the environment. In some scenarios, these rewards are supplied to the agent continuously, e.g. the running score in an Atari game (Mnih et al., 2015), or the distance between a robot arm and an object in a reaching task (Lillicrap et al., 2016). However, in many real-world scenarios, rewards extrinsic to the agent are extremely sparse or miss-\n1University of California, Berkeley. Correspondence to: Deepak Pathak <pathak@berkeley.edu>.\nProceedings of the 34 th International Conference on Machine Learning, Sydney, Australia, 2017. JMLR: W&CP. Copyright 2017 by the author(s).\n(a) learn to explore in Level-1 (b) explore faster in Level-2\nFigure 1. Discovering how to play Super Mario Bros without rewards. (a) Using only curiosity-driven exploration, the agent makes significant progress in Level-1. (b) The gained knowledge helps the agent explore subsequent levels much faster than when starting from scratch. Watch the video at http://pathak22. github.io/noreward-rl/\ning altogether, and it is not possible to construct a shaped reward function. This is a problem as the agent receives reinforcement for updating its policy only if it succeeds in reaching a pre-specified goal state. Hoping to stumble into a goal state by chance (i.e. random exploration) is likely to be futile for all but the simplest of environments.\nAs human agents, we are accustomed to operating with rewards that are so sparse that we only experience them once or twice in a lifetime, if at all. To a three-year-old enjoying a sunny Sunday afternoon on a playground, most trappings of modern life \u2013 college, good job, a house, a family \u2013 are so far into the future, they provide no useful reinforcement signal. Yet, the three-year-old has no trouble entertaining herself in that playground using what psychologists call intrinsic motivation (Ryan, 2000) or curiosity (Silvia, 2012). Motivation/curiosity have been used to explain the need to explore the environment and discover novel states. The French word fla\u0302neur perfectly captures the notion of a curiosity-driven observer, the \u201cdeliberately aimless pedestrian, unencumbered by any obligation or sense of urgency\u201d (Cornelia Otis Skinner). More generally, curiosity is a way of learning new skills which might come handy for pursuing rewards in the future.\nSimilarly, in reinforcement learning, intrinsic motivation/rewards become critical whenever extrinsic rewards are sparse. Most formulations of intrinsic reward can be grouped into two broad classes: 1) encourage the agent to explore \u201cnovel\u201d states (Bellemare et al., 2016; Lopes\nar X\niv :1\n70 5.\n05 36\n3v 1\n[ cs\n.L G\n] 1\n5 M\nay 2\n01 7\net al., 2012; Poupart et al., 2006) or, 2) encourage the agent to perform actions that reduce the error/uncertainty in the agent\u2019s ability to predict the consequence of its own actions (i.e. its knowledge about the environment) (Houthooft et al., 2016; Mohamed & Rezende, 2015; Schmidhuber, 1991; 2010; Singh et al., 2005; Stadie et al., 2015).\nMeasuring \u201cnovelty\u201d requires a statistical model of the distribution of the environmental states, whereas measuring prediction error/uncertainty requires building a model of environmental dynamics that predicts the next state (st+1) given the current state (st) and the action (at) executed at time t. Both these models are hard to build in highdimensional continuous state spaces such as images. An additional challenge lies in dealing with the stochasticity of the agent-environment system, both due to the noise in the agent\u2019s actuation, which causes its end-effectors to move in a stochastic manner, and, more fundamentally, due to the inherent stochasticity in the environment. To give the example from (Schmidhuber, 2010), if the agent receiving images as state inputs is observing a television screen displaying white noise, every state will be novel and it would be impossible to predict the value of any pixel in the future. Other examples of such stochasticity include appearance changes due to shadows from other moving entities, presence of distractor objects, or other agents in the environment whose motion is not only hard to predict but is also irrelevant to the agent\u2019s goals. Somewhat different, but related, is the challenge of generalization across physically (and perhaps also visually) distinct but functionally similar parts of an environment, which is crucial for largescale problems. One proposed solution to all these problems is to only reward the agent when it encounters states that are hard to predict but are \u201clearnable\u201d (Schmidhuber, 1991). However, estimating learnability is a non-trivial problem (Lopes et al., 2012).\nThis work belongs to the broad category of methods that generate an intrinsic reward signal based on how hard it is for the agent to predict the consequences of its own actions, i.e. predict the next state given the current state and the executed action. However, we manage to escape most pitfalls of previous prediction approaches with the following key insight: we only predict those changes in the environment that could possibly be due to the actions of our agent or affect the agent, and ignore the rest. That is, instead of making predictions in the raw sensory space (e.g. pixels), we transform the sensory input into a feature space where only the information relevant to the action performed by the agent is represented. We learn this feature space using self-supervision \u2013 training a neural network on a proxy inverse dynamics task of predicting the agent\u2019s action given its current and next states. Since the neural network is only required to predict the action, it has no incentive to represent within its feature embedding space the factors of vari-\nation in the environment that do not affect the agent itself. We then use this feature space to train a forward dynamics model that predicts the feature representation of the next state, given the feature representation of the current state and the action. We provide the prediction error of the forward dynamics model to the agent as an intrinsic reward to encourage its curiosity.\nThe role of curiosity has been widely studied in the context of solving tasks with sparse rewards. In our opinion, curiosity has two other fundamental uses. Curiosity helps an agent explore its environment in the quest for new knowledge (a desirable characteristic of exploratory behavior is that it should improve as the agent gains more knowledge). Further, curiosity is a mechanism for an agent to learn skills that might be helpful in future scenarios. In this paper, we evaluate the effectiveness of our curiosity formulation in all three of these roles.\nWe first compare the performance of an A3C agent (Mnih et al., 2016) with and without the curiosity signal on 3-D navigation tasks with sparse extrinsic reward in the VizDoom environment. We show that a curiosity-driven intrinsic reward is crucial in accomplishing these tasks (see Section 4.1). Next, we show that even in the absence of any extrinsic rewards, a curious agent learns good exploration policies. For instance, an agent trained only with curiosity as its reward is able to cross a significant portion of Level-1 in Super Mario Bros. Similarly in VizDoom, the agent learns to walk intelligently along the corridors instead of bumping into walls or getting stuck in corners (see Section 4.2). A question that naturally follows is whether the learned exploratory behavior is specific to the physical space that the agent trained itself on, or if it enables the agent to perform better in unseen scenarios too? We show that the exploration policy learned in the first level of Mario helps the agent explore subsequent levels faster (shown in Figure 1), while the intelligent walking behavior learned by the curious VizDoom agent transfers to a completely new map with new textures (see Section 4.3). These results suggest that the proposed method enables an agent to learn generalizable skills even in the absence of an explicit goal."}, {"heading": "2. Curiosity-Driven Exploration", "text": "Our agent is composed of two subsystems: a reward generator that outputs a curiosity-driven intrinsic reward signal and a policy that outputs a sequence of actions to maximize that reward signal. In addition to intrinsic rewards, the agent optionally may also receive some extrinsic reward from the environment. Let the intrinsic curiosity reward generated by the agent at time t be rit and the extrinsic reward be ret . The policy sub-system is trained to maximize the sum of these two rewards rt = rit + r e t , with r e t mostly (if not always) zero.\nWe represent the policy \u03c0(st; \u03b8P ) by a deep neural network with parameters \u03b8P . Given the agent in state st, it executes the action at \u223c \u03c0(st; \u03b8P ) sampled from the policy. \u03b8P is optimized to maximize the expected sum of rewards,\nmax \u03b8P E\u03c0(st;\u03b8P )[\u03a3trt] (1)\nUnless specified otherwise, we use the notation \u03c0(s) to denote the parameterized policy \u03c0(s; \u03b8P ). Our curiosity reward model can potentially be used with a range of policy learning methods; in the experiments discussed here, we use the asynchronous advantage actor critic policy gradient (A3C) (Mnih et al., 2016) for policy learning. Our main contribution is in designing an intrinsic reward signal based on prediction error of the agent\u2019s knowledge about its environment that scales to high-dimensional continuous state spaces like images, bypasses the hard problem of predicting pixels and is unaffected by the unpredictable aspects of the environment that do not affect the agent."}, {"heading": "2.1. Prediction error as curiosity reward", "text": "Making predictions in the raw sensory space (e.g. when st corresponds to images) is undesirable not only because it is hard to predict pixels directly, but also because it is unclear if predicting pixels is even the right objective to optimize. To see why, consider using prediction error in the pixel space as the curiosity reward. Imagine a scenario where the agent is observing the movement of tree leaves in a breeze. Since it is inherently hard to model breeze, it is even harder to predict the pixel location of each leaf.\nThis implies that the pixel prediction error will remain high and the agent will always remain curious about the leaves. But the motion of the leaves is inconsequential to the agent and therefore its continued curiosity about them is undesirable. The underlying problem is that the agent is unaware that some parts of the state space simply cannot be modeled and thus the agent can fall into an artificial curiosity trap and stall its exploration. Novelty-seeking exploration schemes that record the counts of visited states in a tabular form (or their extensions to continuous state spaces) also suffer from this issue. Measuring learning progress instead of prediction error has been proposed in the past as one solution (Schmidhuber, 1991). Unfortunately, there are currently no known computationally feasible mechanisms for measuring learning progress.\nIf not the raw observation space, then what is the right feature space for making predictions so that the prediction error provides a good measure of curiosity? To answer this question, let us divide all sources that can modify the agent\u2019s observations into three cases: (1) things that can be controlled by the agent; (2) things that the agent cannot control but that can affect the agent (e.g. a vehicle driven by another agent), and (3) things out of the agent\u2019s control and not affecting the agent (e.g. moving leaves). A good feature space for curiosity should model (1) and (2) and be unaffected by (3). This latter is because, if there is a source of variation that is inconsequential for the agent, then the agent has no incentive to know about it."}, {"heading": "2.2. Self-supervised prediction for exploration", "text": "Instead of hand-designing a feature representation for every environment, our aim is to come up with a general mechanism for learning feature representations such that the prediction error in the learned feature space provides a good intrinsic reward signal. We propose that such a feature space can be learned by training a deep neural network with two sub-modules: the first sub-module encodes the raw state (st) into a feature vector \u03c6(st) and the second submodule takes as inputs the feature encoding \u03c6(st), \u03c6(st+1) of two consequent states and predicts the action (at) taken by the agent to move from state st to st+1. Training this neural network amounts to learning function g defined as:\na\u0302t = g ( st, st+1; \u03b8I ) (2)\nwhere, a\u0302t is the predicted estimate of the action at and the the neural network parameters \u03b8I are trained to optimize,\nmin \u03b8I LI(a\u0302t, at) (3)\nwhere, LI is the loss function that measures the discrepancy between the predicted and actual actions. In case at is discrete, the output of g is a soft-max distribution across all possible actions and minimizing LI amounts to maximum likelihood estimation of \u03b8I under a multinomial distribution. The learned function g is also known as the inverse dynamics model and the tuple (st, at, st+1) required to learn g is obtained while the agent interacts with the environment using its current policy \u03c0(s).\nIn addition to inverse dynamics model, we train another neural network that takes as inputs at and \u03c6(st) and predicts the feature encoding of the state at time step t+ 1,\n\u03c6\u0302(st+1) = f ( \u03c6(st), at; \u03b8F ) (4)\nwhere \u03c6\u0302(st+1) is the predicted estimate of \u03c6(st+1) and the neural network parameters \u03b8F are optimized by minimizing the loss function LF :\nLF ( \u03c6(st), \u03c6\u0302(st+1) ) = 1\n2 \u2016\u03c6\u0302(st+1)\u2212 \u03c6(st+1)\u201622 (5)\nThe learned function f is also known as the forward dynamics model. The intrinsic reward signal rit is computed as,\nrit = \u03b7\n2 \u2016\u03c6\u0302(st+1)\u2212 \u03c6(st+1)\u201622 (6)\nwhere \u03b7 > 0 is a scaling factor. In order to generate the curiosity based intrinsic reward signal, we jointly optimize the forward and inverse dynamics loss described in equations 3 and 5 respectively. The inverse model learns a feature space that encodes information relevant for predicting the agent\u2019s actions only and the forward model makes predictions in this feature space. We refer to this proposed\ncuriosity formulation as Intrinsic Curiosity Module (ICM). As there is no incentive for this feature space to encode any environmental features that are not influenced by the agent\u2019s actions, our agent will receive no rewards for reaching environmental states that are inherently unpredictable and its exploration strategy will be robust to the presence of distractor objects, changes in illumination, or other nuisance sources of variation in the environment. See Figure 2 for illustration of the formulation.\nThe use of inverse models has been investigated to learn features for recognition tasks (Agrawal et al., 2015; Jayaraman & Grauman, 2015). Agrawal et al. (2016) constructed a joint inverse-forward model to learn feature representation for the task of pushing objects. However, they only used the forward model as a regularizer for training the inverse model features, while we make use of the error in the forward model predictions as the curiosity reward for training our agent\u2019s policy.\nThe overall optimization problem that is solved for learning the agent is a composition of equations 1, 3 and 5 and can be written as,\nmin \u03b8P ,\u03b8I ,\u03b8F\n[ \u2212 \u03bbE\u03c0(st;\u03b8P )[\u03a3trt] + (1\u2212 \u03b2)LI + \u03b2LF ] (7)\nwhere 0 \u2264 \u03b2 \u2264 1 is a scalar that weighs the inverse model loss against the forward model loss and \u03bb > 0 is a scalar that weighs the importance of the policy gradient loss against the importance of learning the intrinsic reward signal."}, {"heading": "3. Experimental Setup", "text": "To evaluate our curiosity module on its ability to improve exploration and provide generalization to novel scenarios, we will use two simulated environments. This section describes the details of the environments and the experimental setup.\nEnvironments The first environment we evaluate on is the VizDoom (Kempka et al., 2016) game. We consider the Doom 3-D navigation task where the action space of the agent consists of four discrete actions \u2013 move forward, move left, move right and no-action. Our testing setup in all the experiments is the \u2018DoomMyWayHome-v0\u2019 environment which is available as part of OpenAI Gym (Brockman et al., 2016). Episodes are terminated either when the agent finds the vest or if the agent exceeds a maximum of 2100 time steps. The map consists of 9 rooms connected by corridors and the agent is tasked to reach some fixed goal location from its spawning location. The agent is only provided a sparse terminal reward of +1 if it finds the vest and zero otherwise. For generalization experiments, we pre-train on\na different map with different random textures from (Dosovitskiy & Koltun, 2016) and each episode lasts for 2100 time steps. Sample frames from VizDoom are shown in Figure 3a, and maps are explained in Figure 4. It takes approximately 350 steps for an optimal policy to reach the vest location from the farthest room in this map (sparse reward).\nOur second environment is the classic Nintendo game Super Mario Bros (Paquette, 2016). We consider four levels of the game: pre-training on the first level and showing generalization on the subsequent levels. In this setup, we reparametrize the action space of the agent into 14 unique actions following (Paquette, 2016). This game is played using a joystick allowing for multiple simultaneous button presses, where the duration of the press affects what action is being taken. This property makes the game particularly hard, e.g. to make a long jump over tall pipes or wide gaps, the agent needs to predict the same action up to 12 times in a row, introducing long-range dependencies. All our experiments on Mario are trained using curiosity signal only, without any reward from the game.\nTraining details All agents in this work are trained using visual inputs that are pre-processed in manner similar to (Mnih et al., 2016). The input RGB images are converted into gray-scale and re-sized to 42 \u00d7 42. In order to model temporal dependencies, the state representation (st) of the environment is constructed by concatenating the current frame with the three previous frames. Closely following (Mnih et al., 2015; 2016), we use action repeat of four during training time in VizDoom and action repeat of six in Mario. However, we sample the policy without any action repeat during inference. Following the asynchronous training protocol in A3C, all the agents were trained asynchronously with twenty workers using stochastic gradient descent. We used ADAM optimizer with its parameters not shared across the workers.\nA3C architecture The input state st is passed through a sequence of four convolution layers with 32 filters each,\nkernel size of 3x3, stride of 2 and padding of 1. An exponential linear unit (ELU; (Clevert et al., 2015)) is used after each convolution layer. The output of the last convolution layer is fed into a LSTM with 256 units. Two seperate fully connected layers are used to predict the value function and the action from the LSTM feature representation.\nIntrinsic Curiosity Module (ICM) architecture The intrinsic curiosity module consists of the forward and the inverse model. The inverse model first maps the input state (st) into a feature vector \u03c6(st) using a series of four convolution layers, each with 32 filters, kernel size 3x3, stride of 2 and padding of 1. ELU non-linearity is used after each convolution layer. The dimensionality of \u03c6(st) (i.e. the output of the fourth convolution layer) is 288. For the inverse model, \u03c6(st) and \u03c6(st+1) are concatenated into a single feature vector and passed as inputs into a fully connected layer of 256 units followed by an output fully connected layer with 4 units to predict one of the four possible actions. The forward model is constructed by concatenating \u03c6(st) with at and passing it into a sequence of two fully connected layers with 256 and 288 units respectively. The value of \u03b2 is 0.2, and \u03bb is 0.1. The Equation (7) is minimized with learning rate of 1e\u2212 3.\nBaseline Methods \u2018ICM + A3C\u2019 denotes our full algorithm which combines intrinsic curiosity model with A3C. Across different experiments, we compare our approach with three baselines. First is the vanilla \u2018A3C\u2019 algorithm with -greedy exploration. Second is \u2018ICM-pixels + A3C\u2019, which is a variant of our ICM without the inverse model, and has curiosity reward dependent only on the forward model loss in predicting next observation in pixel space. To design this, we remove the inverse model layers and append\ndeconvolution layers to the forward model. ICM-pixels is close to ICM in architecture but incapable of learning embedding that is invariant to the uncontrollable part of environment. Note that ICM-pixels is representative of previous methods which compute information gain by directly using the observation space (Schmidhuber, 2010; Stadie et al., 2015). We show that directly using observation space for computing curiosity is significantly worse than learning an embedding as in ICM. Finally, we include comparison with state-of-the-art exploration methods based on variational information maximization (VIME) (Houthooft et al., 2016) which is trained with TRPO."}, {"heading": "4. Experiments", "text": "We qualitatively and quantitatively evaluate the performance of the learned policy with and without the proposed intrinsic curiosity signal in two environments, VizDoom and Super Mario Bros. Three broad settings are evaluated: a) sparse extrinsic reward on reaching a goal (Section 4.1); b) exploration with no extrinsic reward (Section 4.2); and c) generalization to novel scenarios (Section 4.3). In VizDoom generalization is evaluated on a novel map with novel textures, while in Mario it is evaluated on subsequent game levels."}, {"heading": "4.1. Sparse Extrinsic Reward Setting", "text": "We perform extrinsic reward experiments on VizDoom using \u2018DoomMyWayHome-v0\u2019 setup described in Section 3. The extrinsic reward is sparse and only provided when the agent finds the goal (a vest) located at a fixed location in the map. We systematically varied the difficulty of this goaldirected exploration task by varying the distance between\nthe initial spawning location of the agent and the location of the goal. A larger distance means that the chances of reaching the goal location by random exploration is lower and consequently the reward is said to be sparser.\nVarying the degree of reward sparsity: We consider three setups with \u201cdense\u201d, \u201csparse\u201d and \u201cvery-sparse\u201d rewards (see Figure 4b). In these settings, the reward is always terminal and the episode terminates upon reaching goal or after a maximum of 2100 steps. In the \u201cdense\u201d reward case, the agent is randomly spawned in any of the 17 possible spawning locations uniformly distributed across the map. This is not a hard exploration task because sometimes the agent is randomly initialized close to the goal and therefore by random -greedy exploration it can reach the goal with reasonably high probability. In the \u201csparse\u201d and \u201cvery sparse\u201d reward cases, the agent is always spawned in Room-13 and Room-17 respectively which are 270 and 350 steps away from the goal under an optimal policy. A long sequence of directed actions is required to reach the goals from these rooms, making these settings hard goal directed exploration problems.\nResults shown in Figure 5 indicate that while the performance of the baseline A3C degrades with sparser rewards, curious A3C agents are superior in all cases. In the \u201cdense\u201d reward case, curious agents learn much faster indicating more efficient exploration of the environment as compared to -greedy exploration of the baseline agent. One possible explanation of the inferior performance of ICM-pixels in comparison to ICM is that in every episode the agent is spawned in one out of seventeen rooms with different textures. It is hard to learn a pixel-prediction model as the number of textures increases.\nIn the \u201csparse\u201d reward case, as expected, the baseline A3C agent fails to solve the task, while the curious A3C agent is able to learn the task quickly. Note that ICM-pixels and ICM have similar convergence because, with a fixed spawning location of the agent, the ICM-pixels encounters the same textures at the starting of each episode which makes learning the pixel-prediction model easier as compared to the \u201cdense\u201d reward case. Finally, in the \u201cvery sparse\u201d reward case, both the A3C agent and ICM-pixels never succeed, while the ICM agent achieves a perfect score in 66% of the random runs. This indicates that ICM is better suited than ICM-pixels and vanilla A3C for hard goal directed exploration tasks.\nRobustness to uncontrollable dynamics For testing the robustness of the proposed ICM formulation to changes in the environment that do not affect the agent, we augmented the agent\u2019s observation with a fixed region of white noise which made up 40% of the image (see Figure 3b). In VizDoom 3-D navigation, ideally the agent should be unaffected by this noise as the noise does not affect the agent in anyway and is merely a nuisance. Figure 6 compares the performance of ICM against some baseline methods on the \u201csparse\u201d reward setup described above. While, the proposed ICM agent achieves a perfect score, ICM-pixels suffers significantly despite having succeeded at the \u201csparse reward\u201d task when the inputs were not augmented with any noise (see Figure 5b). This indicates that in contrast to ICM-pixels, ICM is insensitive to nuisance changes in the environment.\nComparison to TRPO-VIME We now compare our curious agent against variational information maximization agent trained with TRPO (Houthooft et al., 2016) for the\nVizDoom \u201csparse\u201d reward setup described above. TRPO is in general more sample efficient than A3C but takes a lot more wall-clock time. We do not show these results in plots because TRPO and A3C have different setups. The hyperparameters and accuracy for the TRPO and VIME results follow from the concurrent work (Fu et al., 2017). Despite the sample efficiency of TRPO, we see that our ICM agents work significantly better than TRPO and TRPO-VIME, both in terms of convergence rate and accuracy. Results are shown in the Table below:\nMethod Mean (Median) Score (\u201csparse\u201d reward setup) (at convergence)\nTRPO 26.0 % ( 0.0 %) A3C 0.0 % ( 0.0 %) VIME + TRPO 46.1 % ( 27.1 %)\nICM + A3C 100.0 % (100.0 %)\nAs a sanity check, we replaced the curiosity network with random noise sources and used them as the curiosity reward. We performed systematic sweep across different distribution parameters in the \u201csparse\u201d reward case: uniform, Gaussian and Laplacian. We found that none of these agents were able to reach the goal showing that our curiosity module does not learn degenerate solutions."}, {"heading": "4.2. No Reward Setting", "text": "A good exploration policy is one which allows the agent to visit as many states as possible even without any goals. In the case of 3-D navigation, we expect a good exploration policy to cover as much of the map as possible; in the case of playing a game, we expect it to visit as many game states as possible. In order to test if our agent can learn a good exploration policy, we trained it on VizDoom and Mario without any rewards from the environment. We then evaluated what portion of the map was explore (for VizDoom), and how much progress it made (for Mario) in this setting. To our surprise, we have found that in both cases, the noreward agent was able to perform quote well (see video at http://pathak22.github.io/noreward_rl/).\nVizDoom: Coverage during Exploration. An agent trained with no extrinsic rewards was able to learn to navigate corridors, walk between rooms and explore many rooms in the 3-D Doom environment. On many occasions the agent traversed the entire map and reached rooms that were farthest away from the room it was initialized in. Given that the episode terminates in 2100 steps and farthest rooms are over 250 steps away (for an optimally-moving agent), this result is quite remarkable, demonstrating that it is possible to learn useful skills without the requirement of any external supervision of rewards. Example explorations are shown in Figure 7. The first 3 maps show our agent ex-\nplore a much larger state space without any extrinsic signal, compared to a random exploration agent (last two maps), which often has hard time getting around local minima of state spaces, e.g. getting stuck against a wall and not able to move (see video).\nMario: Learning to play with no rewards. We train our agent in the Super Mario World using only curiosity based signal. Without any extrinsic reward from environment, our Mario agent can learn to cross over 30% of Level-1. The agent received no reward for killing or dodging enemies or avoiding fatal events, yet it automatically discovered these behaviors (see video). One possible reason is because getting killed by the enemy will result in only seeing a small part of the game space, making its curiosity saturate. In order to remain curious, it is in the agent\u2019s interest to learn how to kill and dodge enemies so that it can reach new parts of the game space. This suggests that curiosity provides indirect supervision for learning interesting behaviors.\nTo the best of our knowledge, this is the first demonstration where the agent learns to navigate in a 3D environment and discovers how to play a game by making use of relatively complex visual imagery directly from pixels, without any extrinsic rewards. There are several prior works that use reinforcement learning to navigate in 3D environments from pixel inputs or playing ATARI games such as (Mirowski et al., 2017; Mnih et al., 2015; 2016), but they rely on intermediate external rewards provided by the environment."}, {"heading": "4.3. Generalization to Novel Scenarios", "text": "In the previous section we showed that our agent learns to explore large parts of the space where its curiosity-driven exploration policy was trained. However, it remains unclear whether the agent has done this by learning \u201cgeneralized skills\u201d for efficiently exploring its environment, or if it simply memorized the training set. In other words we would like to know, when exploring a space, how much of the learned behavior is specific to that particular space and how much is general enough to be useful in novel scenar-\nios? To investigate this question, we train a no reward exploratory behavior in one scenario (e.g. Level-1 of Mario) and then evaluate the resulting exploration policy in three different ways: a) apply the learned policy \u201cas is\u201d to a new scenario; b) adapt the policy by fine-tuning with curiosity reward only; c) adapt the policy to maximize some extrinsic reward. Happily, in all three cases, we observe some promising generalization results:\nEvaluate \u201cas is\u201d: We evaluate the policy trained by maximizing curiosity on Level-1 of Mario on subsequent levels without adapting the learned policy in any way. We measure the distance covered by the agent as a result of executing this policy on Levels 1, 2, and 3, as shown in Table 1. We note that the policy performs surprisingly well on Level 3, suggesting good generalization, despite the fact that Level-3 has different structures and enemies compared to Level-1. However, note that the running \u201cas is\u201d on Level2 does not do well. At first, this seems to contradict the generalization results on Level-3. However, note that Level-3 has similar global visual appearance (day world with sunlight) to Level-1, whereas Level-2 is significantly different (night world). If this is indeed the issue, then it should be possible to quickly adapt the exploration policy to Level-2 with a little bit of \u201cfine-tuning\u201d. We will explore this below.\nFine-tuning with curiosity only: From Table 1 we see that when the agent pre-trained (using only curiosity as reward) on Level-1 is fine-tuned (using only curiosity as reward) on Level-2 it quickly overcomes the mismatch in global visual appearance and achieves a higher score than training from scratch with the same number of iterations. Interestingly, training \u201cfrom scratch\u201d on Level-2 is worse than the fine-tuned policy, even when training for more iterations than pre-training + fine-tuning combined. One possible reason is that Level-2 is more difficult than Level1, so learning the basic skills such as moving, jumping, and killing enemies from scratch is much more dangerous than in the relative \u201csafety\u201d of Level-1. This result, therefore might suggest that first pre-training on an earlier level\nand then fine-tuning on a later one produces a form of curriculum which aids learning and generalization. In other words, the agent is able to use the knowledge it acquired by playing Level-1 to better explore the subsequent levels. Of course, the game designers do this on purpose to allow the human players to gradually learn to play the game.\nHowever, interestingly, fine-tuning the exploration policy pre-trained on Level-1 to Level-3 deteriorates the performance, compared to running \u201cas is\u201d. This is because Level3 is very hard for the agent to cross beyond a certain point \u2013 the agent hits a curiosity blockade and is unable to make any progress. As the agent has already learned about parts of the environment before the hard point, it receives almost no curiosity reward and as a result it attempts to update its policy with almost zero intrinsic rewards and the policy slowly degenerates. This behavior is vaguely analogous to boredom, where if the agent is unable to make progress it gets bored and stops exploring.\nFine-tuning with extrinsic rewards: If it is the case that the agent has actually learned useful exploratory behavior, then it should be able to learn quicker than starting from scratch even when external rewards are provided by environment. We perform this evaluation on VizDoom where we pre-train the agent using curiosity reward on a map showed in Figure 4a. We then test on the \u201cvery sparse\u201d reward setting of \u2018DoomMyWayHome-v0\u2019 environment which uses a different map with novel textures (see Figure 4b) as described earlier in Section 4.1.\nResults in Figure 8 show that the ICM agent pre-trained only with curiosity and then fine-tuned with external reward learns faster and achieves higher reward than an ICM agent trained from scratch to jointly maximize curiosity and the external rewards. This result confirms that the learned exploratory behavior is also useful when the agent is required to achieve goals specified by the environment. It is also worth noting that ICM-pixels does not generalize to this test environment. This indicates that the proposed mechanism of measuring curiosity is significantly better for learning skills that generalize as compared to measuring curiosity in the raw sensory space."}, {"heading": "5. Related Work", "text": "Curiosity-driven exploration is a well studied topic in the reinforcement learning literature and a good summary can be found in (Oudeyer & Kaplan, 2009; Oudeyer et al., 2007). Schmidhuber (1991; 2010) and Sun et al. (2011) use surprise and compression progress as intrinsic rewards. Classic work of Kearns et al. (1999) and Brafman et al. (2002) propose exploration algorithms polynomial in the number of state space parameters. Others have used empowerment, which is the information gain based on entropy of actions, as intrinsic rewards (Klyubin et al., 2005; Mohamed & Rezende, 2015). Stadie et al. (2015) use prediction error in the feature space of an auto-encoder as a measure of interesting states to explore. State visitation counts have also been investigated for exploration (Bellemare et al., 2016; Oh et al., 2015; Tang et al., 2016). Osband et al. (2016) train multiple value functions and makes\nuse of bootstrapping and Thompson sampling for exploration. Many approaches measure information gain for exploration (Little & Sommer, 2014; Still & Precup, 2012; Storck et al., 1995). Houthooft et al. (2016) use an exploration strategy that maximizes information gain about the agent\u2019s belief of the environment\u2019s dynamics. Our approach of jointly training forward and inverse models for learning a feature space has similarities to (Agrawal et al., 2016; Jordan & Rumelhart, 1992; Wolpert et al., 1995), but these works use the learned models of dynamics for planning a sequence of actions instead of exploration. The idea of using a proxy task to learn a semantic feature embedding has been used in a number of works on self-supervised learning in computer vision (Agrawal et al., 2015; Doersch et al., 2015; Goroshin et al., 2015; Jayaraman & Grauman, 2015; Pathak et al., 2016; Wang & Gupta, 2015).\nConcurrent work: A number of interesting related papers have appeared on Arxiv while the present work was in submission. Sukhbaatar et al. (2017) generates supervision for pre-training via asymmetric self-play between two agents to improve data efficiency during fine-tuning. Several methods propose improving data efficiency of RL algorithms using self-supervised prediction based auxiliary tasks (Jaderberg et al., 2017; Shelhamer et al., 2017). Fu et al. (2017) learn discriminative models, and Gregor et al. (2017) use empowerment based measure to tackle exploration in sparse reward setups."}, {"heading": "6. Discussion", "text": "In this work we propose a mechanism for generating curiosity-driven intrinsic reward signal that scales to high dimensional visual inputs, bypasses the difficult problem of predicting pixels and ensures that the exploration strategy of the agent is unaffected by nuisance factors in the environment. We demonstrate that our agent significantly outperforms the baseline A3C with no curiosity, a recently proposed VIME (Houthooft et al., 2016) formulation for exploration, and a baseline pixel-predicting formulation.\nIn VizDoom our agent learns the exploration behavior of moving along corridors and across rooms without any rewards from the environment. In Mario our agent crosses more than 30% of Level-1 without any rewards from the game. One reason why our agent is unable to go beyond this limit is the presence of a pit at 38% of the game that requires a very specific sequence of 15-20 key presses in order to jump across it. If the agent is unable to execute this sequence, it falls in the pit and dies, receiving no further rewards from the environment. Therefore it receives no gradient information indicating that there is a world beyond the pit that could potentially be explored. This issue is somewhat orthogonal to developing models of curiosity, but presents a challenging problem for policy learning.\nIt is common practice to evaluate reinforcement learning approaches in the same environment that was used for training. However, we feel that it is also important to evaluate on a separate \u201ctesting set\u201d as well. This allows us to gauge how much of what has been learned is specific to the training environment (i.e. memorized), and how much might constitute \u201cgeneralizable skills\u201d that could be applied to new settings. In this paper, we evaluate generalization in two ways: 1) by applying the learned policy to a new scenario \u201cas is\u201d (no further learning), and 2) by finetuning the learned policy on a new scenario (we borrow the pre-training/fine-tuning nomenclature from the deep feature learning literature). We believe that evaluating generalization is a valuable tool and will allow the community to better understand the performance of various reinforcement learning algorithms. To further aid in this effort, we will make the code for our algorithm, as well as testing and environment setups freely available online.\nAn interesting direction of future research is to use the learned exploration behavior/skill as a motor primitive/lowlevel policy in a more complex, hierarchical system. For example, our VizDoom agent learns to walk along corridors instead of bumping into walls. This could be a useful primitive for a navigation system.\nWhile the rich and diverse real world provides ample opportunities for interaction, reward signals are sparse. Our approach excels in this setting and converts unexpected interactions that affect the agent into intrinsic rewards. However our approach does not directly extend to the scenarios where \u201copportunities for interactions\u201d are also rare. In theory, one could save such events in a replay memory and use them to guide exploration. However, we leave this extension for future work.\nAcknowledgements: We would like to thank Sergey Levine, Evan Shelhamer, Saurabh Gupta, Phillip Isola and other members of the BAIR lab for fruitful discussions and comments. We thank Jacob Huh for help with Figure 2 and Alexey Dosovitskiy for VizDoom maps. This work was supported in part by NSF IIS-1212798, IIS-1427425, IIS1536003, IIS-1633310, ONR MURI N00014-14-1-0671, Berkeley DeepDrive, equipment grant from Nvidia, and the Valrhona Reinforcement Learning Fellowship."}], "references": [{"title": "Learning to see by moving", "author": ["Agrawal", "Pulkit", "Carreira", "Joao", "Malik", "Jitendra"], "venue": "In ICCV,", "citeRegEx": "Agrawal et al\\.,? \\Q2015\\E", "shortCiteRegEx": "Agrawal et al\\.", "year": 2015}, {"title": "Learning to poke by poking: Experiential learning of intuitive physics", "author": ["Agrawal", "Pulkit", "Nair", "Ashvin", "Abbeel", "Pieter", "Malik", "Jitendra", "Levine", "Sergey"], "venue": null, "citeRegEx": "Agrawal et al\\.,? \\Q2016\\E", "shortCiteRegEx": "Agrawal et al\\.", "year": 2016}, {"title": "Unifying count-based exploration and intrinsic motivation", "author": ["Schaul", "Tom", "Saxton", "David", "Munos", "Remi"], "venue": "In NIPS,", "citeRegEx": "Schaul et al\\.,? \\Q2016\\E", "shortCiteRegEx": "Schaul et al\\.", "year": 2016}, {"title": "R-max-a general polynomial time algorithm for near-optimal reinforcement learning", "author": ["Brafman", "Ronen I", "Tennenholtz", "Moshe"], "venue": null, "citeRegEx": "Brafman et al\\.,? \\Q2002\\E", "shortCiteRegEx": "Brafman et al\\.", "year": 2002}, {"title": "Fast and accurate deep network learning by exponential linear units (elus)", "author": ["Clevert", "Djork-Arn\u00e9", "Unterthiner", "Thomas", "Hochreiter", "Sepp"], "venue": null, "citeRegEx": "Clevert et al\\.,? \\Q2015\\E", "shortCiteRegEx": "Clevert et al\\.", "year": 2015}, {"title": "Unsupervised visual representation learning by context prediction", "author": ["Doersch", "Carl", "Gupta", "Abhinav", "Efros", "Alexei A"], "venue": "In ICCV,", "citeRegEx": "Doersch et al\\.,? \\Q2015\\E", "shortCiteRegEx": "Doersch et al\\.", "year": 2015}, {"title": "Learning to act by predicting the future", "author": ["Dosovitskiy", "Alexey", "Koltun", "Vladlen"], "venue": null, "citeRegEx": "Dosovitskiy et al\\.,? \\Q2016\\E", "shortCiteRegEx": "Dosovitskiy et al\\.", "year": 2016}, {"title": "Ex2: Exploration with exemplar models for deep reinforcement learning", "author": ["Fu", "Justin", "Co-Reyes", "John D", "Levine", "Sergey"], "venue": null, "citeRegEx": "Fu et al\\.,? \\Q2017\\E", "shortCiteRegEx": "Fu et al\\.", "year": 2017}, {"title": "Unsupervised feature learning from temporal data", "author": ["Goroshin", "Ross", "Bruna", "Joan", "Tompson", "Jonathan", "Eigen", "David", "LeCun", "Yann"], "venue": null, "citeRegEx": "Goroshin et al\\.,? \\Q2015\\E", "shortCiteRegEx": "Goroshin et al\\.", "year": 2015}, {"title": "Variational intrinsic control", "author": ["Gregor", "Karol", "Rezende", "Danilo Jimenez", "Wierstra", "Daan"], "venue": "ICLR Workshop,", "citeRegEx": "Gregor et al\\.,? \\Q2017\\E", "shortCiteRegEx": "Gregor et al\\.", "year": 2017}, {"title": "Vime: Variational information maximizing exploration", "author": ["Houthooft", "Rein", "Chen", "Xi", "Duan", "Yan", "Schulman", "John", "De Turck", "Filip", "Abbeel", "Pieter"], "venue": null, "citeRegEx": "Houthooft et al\\.,? \\Q2016\\E", "shortCiteRegEx": "Houthooft et al\\.", "year": 2016}, {"title": "Reinforcement learning with unsupervised auxiliary tasks", "author": ["Jaderberg", "Max", "Mnih", "Volodymyr", "Czarnecki", "Wojciech Marian", "Schaul", "Tom", "Leibo", "Joel Z", "Silver", "David", "Kavukcuoglu", "Koray"], "venue": null, "citeRegEx": "Jaderberg et al\\.,? \\Q2017\\E", "shortCiteRegEx": "Jaderberg et al\\.", "year": 2017}, {"title": "Learning image representations tied to ego-motion", "author": ["Jayaraman", "Dinesh", "Grauman", "Kristen"], "venue": "In ICCV,", "citeRegEx": "Jayaraman et al\\.,? \\Q2015\\E", "shortCiteRegEx": "Jayaraman et al\\.", "year": 2015}, {"title": "Forward models: Supervised learning with a distal teacher", "author": ["Jordan", "Michael I", "Rumelhart", "David E"], "venue": "Cognitive science,", "citeRegEx": "Jordan et al\\.,? \\Q1992\\E", "shortCiteRegEx": "Jordan et al\\.", "year": 1992}, {"title": "Efficient reinforcement learning in factored mdps", "author": ["Kearns", "Michael", "Koller", "Daphne"], "venue": "In IJCAI,", "citeRegEx": "Kearns et al\\.,? \\Q1999\\E", "shortCiteRegEx": "Kearns et al\\.", "year": 1999}, {"title": "Vizdoom: A doom-based ai research platform for visual reinforcement learning", "author": ["Kempka", "Micha\u0142", "Wydmuch", "Marek", "Runc", "Grzegorz", "Toczek", "Jakub", "Ja\u015bkowski", "Wojciech"], "venue": null, "citeRegEx": "Kempka et al\\.,? \\Q2016\\E", "shortCiteRegEx": "Kempka et al\\.", "year": 2016}, {"title": "Empowerment: A universal agentcentric measure of control", "author": ["Klyubin", "Alexander S", "Polani", "Daniel", "Nehaniv", "Chrystopher L"], "venue": "In Evolutionary Computation,", "citeRegEx": "Klyubin et al\\.,? \\Q2005\\E", "shortCiteRegEx": "Klyubin et al\\.", "year": 2005}, {"title": "Continuous control with deep reinforcement learning", "author": ["Lillicrap", "Timothy P", "Hunt", "Jonathan J", "Pritzel", "Alexander", "Heess", "Nicolas", "Erez", "Tom", "Tassa", "Yuval", "Silver", "David", "Wierstra", "Daan"], "venue": null, "citeRegEx": "Lillicrap et al\\.,? \\Q2016\\E", "shortCiteRegEx": "Lillicrap et al\\.", "year": 2016}, {"title": "Learning and exploration in action-perception loops", "author": ["Little", "Daniel Y", "Sommer", "Friedrich T"], "venue": "Closing the Loop Around Neural Systems,", "citeRegEx": "Little et al\\.,? \\Q2014\\E", "shortCiteRegEx": "Little et al\\.", "year": 2014}, {"title": "Exploration in model-based reinforcement learning by empirically estimating learning progress", "author": ["Lopes", "Manuel", "Lang", "Tobias", "Toussaint", "Marc", "Oudeyer", "Pierre-Yves"], "venue": "In NIPS,", "citeRegEx": "Lopes et al\\.,? \\Q2012\\E", "shortCiteRegEx": "Lopes et al\\.", "year": 2012}, {"title": "Learning to navigate in complex environments", "author": ["Mirowski", "Piotr", "Pascanu", "Razvan", "Viola", "Fabio", "Soyer", "Hubert", "Ballard", "Andy", "Banino", "Andrea", "Denil", "Misha", "Goroshin", "Ross", "Sifre", "Laurent", "Kavukcuoglu", "Koray"], "venue": null, "citeRegEx": "Mirowski et al\\.,? \\Q2017\\E", "shortCiteRegEx": "Mirowski et al\\.", "year": 2017}, {"title": "Human-level control through deep reinforcement learning", "author": ["Mnih", "Volodymyr", "Kavukcuoglu", "Koray", "Silver", "David", "Rusu", "Andrei A", "Veness", "Joel", "Bellemare", "Marc G", "Graves", "Alex", "Riedmiller", "Martin", "Fidjeland", "Andreas K", "Ostrovski", "Georg"], "venue": null, "citeRegEx": "Mnih et al\\.,? \\Q2015\\E", "shortCiteRegEx": "Mnih et al\\.", "year": 2015}, {"title": "Asynchronous methods for deep reinforcement learning", "author": ["Mnih", "Volodymyr", "Badia", "Adria Puigdomenech", "Mirza", "Mehdi", "Graves", "Alex", "Lillicrap", "Timothy P", "Harley", "Tim", "Silver", "David", "Kavukcuoglu", "Koray"], "venue": null, "citeRegEx": "Mnih et al\\.,? \\Q2016\\E", "shortCiteRegEx": "Mnih et al\\.", "year": 2016}, {"title": "Variational information maximisation for intrinsically motivated reinforcement learning", "author": ["Mohamed", "Shakir", "Rezende", "Danilo Jimenez"], "venue": "In NIPS,", "citeRegEx": "Mohamed et al\\.,? \\Q2015\\E", "shortCiteRegEx": "Mohamed et al\\.", "year": 2015}, {"title": "Action-conditional video prediction using deep networks in atari games", "author": ["Oh", "Junhyuk", "Guo", "Xiaoxiao", "Lee", "Honglak", "Lewis", "Richard L", "Singh", "Satinder"], "venue": "In NIPS,", "citeRegEx": "Oh et al\\.,? \\Q2015\\E", "shortCiteRegEx": "Oh et al\\.", "year": 2015}, {"title": "Deep exploration via bootstrapped dqn", "author": ["Osband", "Ian", "Blundell", "Charles", "Pritzel", "Alexander", "Van Roy", "Benjamin"], "venue": "In NIPS,", "citeRegEx": "Osband et al\\.,? \\Q2016\\E", "shortCiteRegEx": "Osband et al\\.", "year": 2016}, {"title": "What is intrinsic motivation? a typology of computational approaches", "author": ["Oudeyer", "Pierre-Yves", "Kaplan", "Frederic"], "venue": "Frontiers in neurorobotics,", "citeRegEx": "Oudeyer et al\\.,? \\Q2009\\E", "shortCiteRegEx": "Oudeyer et al\\.", "year": 2009}, {"title": "Intrinsic motivation systems for autonomous mental development", "author": ["Oudeyer", "Pierre-Yves", "Kaplan", "Frdric", "Hafner", "Verena V"], "venue": "Evolutionary Computation,", "citeRegEx": "Oudeyer et al\\.,? \\Q2007\\E", "shortCiteRegEx": "Oudeyer et al\\.", "year": 2007}, {"title": "Super mario bros", "author": ["Paquette", "Philip"], "venue": "in openai gym. github:ppaquette/gym-super-mario,", "citeRegEx": "Paquette and Philip.,? \\Q2016\\E", "shortCiteRegEx": "Paquette and Philip.", "year": 2016}, {"title": "Context encoders: Feature learning by inpainting", "author": ["Pathak", "Deepak", "Krahenbuhl", "Philipp", "Donahue", "Jeff", "Darrell", "Trevor", "Efros", "Alexei A"], "venue": null, "citeRegEx": "Pathak et al\\.,? \\Q2016\\E", "shortCiteRegEx": "Pathak et al\\.", "year": 2016}, {"title": "An analytic solution to discrete bayesian reinforcement learning", "author": ["Poupart", "Pascal", "Vlassis", "Nikos", "Hoey", "Jesse", "Regan", "Kevin"], "venue": "In ICML,", "citeRegEx": "Poupart et al\\.,? \\Q2006\\E", "shortCiteRegEx": "Poupart et al\\.", "year": 2006}, {"title": "Intrinsic and extrinsic motivations: Classic definitions and new directions", "author": ["Richard Ryan", "Edward L. Deci"], "venue": "Contemporary Educational Psychology,", "citeRegEx": "Ryan and Deci,? \\Q2000\\E", "shortCiteRegEx": "Ryan and Deci", "year": 2000}, {"title": "A possibility for implementing curiosity and boredom in model-building neural controllers", "author": ["Schmidhuber", "Jurgen"], "venue": "In From animals to animats: Proceedings of the first international conference on simulation of adaptive behavior,", "citeRegEx": "Schmidhuber and Jurgen.,? \\Q1991\\E", "shortCiteRegEx": "Schmidhuber and Jurgen.", "year": 1991}, {"title": "Formal theory of creativity, fun, and intrinsic motivation (1990\u20132010)", "author": ["Schmidhuber", "J\u00fcrgen"], "venue": "IEEE Transactions on Autonomous Mental Development,", "citeRegEx": "Schmidhuber and J\u00fcrgen.,? \\Q2010\\E", "shortCiteRegEx": "Schmidhuber and J\u00fcrgen.", "year": 2010}, {"title": "Loss is its own reward: Self-supervision for reinforcement learning", "author": ["Shelhamer", "Evan", "Mahmoudieh", "Parsa", "Argus", "Max", "Darrell", "Trevor"], "venue": null, "citeRegEx": "Shelhamer et al\\.,? \\Q2017\\E", "shortCiteRegEx": "Shelhamer et al\\.", "year": 2017}, {"title": "Curiosity and motivation", "author": ["Silvia", "Paul J"], "venue": "In The Oxford Handbook of Human Motivation,", "citeRegEx": "Silvia and J.,? \\Q2012\\E", "shortCiteRegEx": "Silvia and J.", "year": 2012}, {"title": "Intrinsically motivated reinforcement learning", "author": ["Singh", "Satinder P", "Barto", "Andrew G", "Chentanez", "Nuttapong"], "venue": "In NIPS,", "citeRegEx": "Singh et al\\.,? \\Q2005\\E", "shortCiteRegEx": "Singh et al\\.", "year": 2005}, {"title": "Incentivizing exploration in reinforcement learning with deep predictive models", "author": ["Stadie", "Bradly C", "Levine", "Sergey", "Abbeel", "Pieter"], "venue": "NIPS Workshop,", "citeRegEx": "Stadie et al\\.,? \\Q2015\\E", "shortCiteRegEx": "Stadie et al\\.", "year": 2015}, {"title": "An information-theoretic approach to curiosity-driven reinforcement learning", "author": ["Still", "Susanne", "Precup", "Doina"], "venue": "Theory in Biosciences,", "citeRegEx": "Still et al\\.,? \\Q2012\\E", "shortCiteRegEx": "Still et al\\.", "year": 2012}, {"title": "Reinforcement driven information acquisition in nondeterministic environments", "author": ["Storck", "Jan", "Hochreiter", "Sepp", "Schmidhuber", "J\u00fcrgen"], "venue": "In ICANN,", "citeRegEx": "Storck et al\\.,? \\Q1995\\E", "shortCiteRegEx": "Storck et al\\.", "year": 1995}, {"title": "Intrinsic motivation and automatic curricula via asymmetric self-play", "author": ["Sukhbaatar", "Sainbayar", "Kostrikov", "Ilya", "Szlam", "Arthur", "Fergus", "Rob"], "venue": null, "citeRegEx": "Sukhbaatar et al\\.,? \\Q2017\\E", "shortCiteRegEx": "Sukhbaatar et al\\.", "year": 2017}, {"title": "Planning to be surprised: Optimal bayesian exploration in dynamic environments", "author": ["Sun", "Yi", "Gomez", "Faustino", "Schmidhuber", "J\u00fcrgen"], "venue": "In AGI,", "citeRegEx": "Sun et al\\.,? \\Q2011\\E", "shortCiteRegEx": "Sun et al\\.", "year": 2011}, {"title": "Unsupervised learning of visual representations using videos", "author": ["Wang", "Xiaolong", "Gupta", "Abhinav"], "venue": "In ICCV,", "citeRegEx": "Wang et al\\.,? \\Q2015\\E", "shortCiteRegEx": "Wang et al\\.", "year": 2015}, {"title": "An internal model for sensorimotor integration", "author": ["Wolpert", "Daniel M", "Ghahramani", "Zoubin", "Jordan", "Michael I"], "venue": "Science-AAAS-Weekly Paper Edition,", "citeRegEx": "Wolpert et al\\.,? \\Q1995\\E", "shortCiteRegEx": "Wolpert et al\\.", "year": 1995}], "referenceMentions": [{"referenceID": 21, "context": "the running score in an Atari game (Mnih et al., 2015), or the distance between a robot arm and an object in a reaching task (Lillicrap et al.", "startOffset": 35, "endOffset": 54}, {"referenceID": 17, "context": ", 2015), or the distance between a robot arm and an object in a reaching task (Lillicrap et al., 2016).", "startOffset": 78, "endOffset": 102}, {"referenceID": 10, "context": "its knowledge about the environment) (Houthooft et al., 2016; Mohamed & Rezende, 2015; Schmidhuber, 1991; 2010; Singh et al., 2005; Stadie et al., 2015).", "startOffset": 37, "endOffset": 152}, {"referenceID": 36, "context": "its knowledge about the environment) (Houthooft et al., 2016; Mohamed & Rezende, 2015; Schmidhuber, 1991; 2010; Singh et al., 2005; Stadie et al., 2015).", "startOffset": 37, "endOffset": 152}, {"referenceID": 37, "context": "its knowledge about the environment) (Houthooft et al., 2016; Mohamed & Rezende, 2015; Schmidhuber, 1991; 2010; Singh et al., 2005; Stadie et al., 2015).", "startOffset": 37, "endOffset": 152}, {"referenceID": 19, "context": "However, estimating learnability is a non-trivial problem (Lopes et al., 2012).", "startOffset": 58, "endOffset": 78}, {"referenceID": 22, "context": "We first compare the performance of an A3C agent (Mnih et al., 2016) with and without the curiosity signal on 3-D navigation tasks with sparse extrinsic reward in the VizDoom environment.", "startOffset": 49, "endOffset": 68}, {"referenceID": 22, "context": "Our curiosity reward model can potentially be used with a range of policy learning methods; in the experiments discussed here, we use the asynchronous advantage actor critic policy gradient (A3C) (Mnih et al., 2016) for policy learning.", "startOffset": 196, "endOffset": 215}, {"referenceID": 0, "context": "The use of inverse models has been investigated to learn features for recognition tasks (Agrawal et al., 2015; Jayaraman & Grauman, 2015).", "startOffset": 88, "endOffset": 137}, {"referenceID": 0, "context": "The use of inverse models has been investigated to learn features for recognition tasks (Agrawal et al., 2015; Jayaraman & Grauman, 2015). Agrawal et al. (2016) constructed a joint inverse-forward model to learn feature representation for the task of pushing objects.", "startOffset": 89, "endOffset": 161}, {"referenceID": 15, "context": "Environments The first environment we evaluate on is the VizDoom (Kempka et al., 2016) game.", "startOffset": 65, "endOffset": 86}, {"referenceID": 22, "context": "Training details All agents in this work are trained using visual inputs that are pre-processed in manner similar to (Mnih et al., 2016).", "startOffset": 117, "endOffset": 136}, {"referenceID": 21, "context": "Closely following (Mnih et al., 2015; 2016), we use action repeat of four during training time in VizDoom and action repeat of six in Mario.", "startOffset": 18, "endOffset": 43}, {"referenceID": 4, "context": "An exponential linear unit (ELU; (Clevert et al., 2015)) is used after each convolution layer.", "startOffset": 33, "endOffset": 55}, {"referenceID": 37, "context": "Note that ICM-pixels is representative of previous methods which compute information gain by directly using the observation space (Schmidhuber, 2010; Stadie et al., 2015).", "startOffset": 130, "endOffset": 170}, {"referenceID": 10, "context": "Finally, we include comparison with state-of-the-art exploration methods based on variational information maximization (VIME) (Houthooft et al., 2016) which is trained with TRPO.", "startOffset": 126, "endOffset": 150}, {"referenceID": 10, "context": "Comparison to TRPO-VIME We now compare our curious agent against variational information maximization agent trained with TRPO (Houthooft et al., 2016) for the VizDoom \u201csparse\u201d reward setup described above.", "startOffset": 126, "endOffset": 150}, {"referenceID": 7, "context": "The hyperparameters and accuracy for the TRPO and VIME results follow from the concurrent work (Fu et al., 2017).", "startOffset": 95, "endOffset": 112}, {"referenceID": 20, "context": "There are several prior works that use reinforcement learning to navigate in 3D environments from pixel inputs or playing ATARI games such as (Mirowski et al., 2017; Mnih et al., 2015; 2016), but they rely on intermediate external rewards provided by the environment.", "startOffset": 142, "endOffset": 190}, {"referenceID": 21, "context": "There are several prior works that use reinforcement learning to navigate in 3D environments from pixel inputs or playing ATARI games such as (Mirowski et al., 2017; Mnih et al., 2015; 2016), but they rely on intermediate external rewards provided by the environment.", "startOffset": 142, "endOffset": 190}, {"referenceID": 27, "context": "Curiosity-driven exploration is a well studied topic in the reinforcement learning literature and a good summary can be found in (Oudeyer & Kaplan, 2009; Oudeyer et al., 2007).", "startOffset": 129, "endOffset": 175}, {"referenceID": 16, "context": "Others have used empowerment, which is the information gain based on entropy of actions, as intrinsic rewards (Klyubin et al., 2005; Mohamed & Rezende, 2015).", "startOffset": 110, "endOffset": 157}, {"referenceID": 24, "context": "State visitation counts have also been investigated for exploration (Bellemare et al., 2016; Oh et al., 2015; Tang et al., 2016).", "startOffset": 68, "endOffset": 128}, {"referenceID": 21, "context": "Curiosity-driven exploration is a well studied topic in the reinforcement learning literature and a good summary can be found in (Oudeyer & Kaplan, 2009; Oudeyer et al., 2007). Schmidhuber (1991; 2010) and Sun et al. (2011) use surprise and compression progress as intrinsic rewards.", "startOffset": 154, "endOffset": 224}, {"referenceID": 13, "context": "Classic work of Kearns et al. (1999) and Brafman et al.", "startOffset": 16, "endOffset": 37}, {"referenceID": 3, "context": "(1999) and Brafman et al. (2002) propose exploration algorithms polynomial in the number of state space parameters.", "startOffset": 11, "endOffset": 33}, {"referenceID": 3, "context": "(1999) and Brafman et al. (2002) propose exploration algorithms polynomial in the number of state space parameters. Others have used empowerment, which is the information gain based on entropy of actions, as intrinsic rewards (Klyubin et al., 2005; Mohamed & Rezende, 2015). Stadie et al. (2015) use prediction error in the feature space of an auto-encoder as a measure of interesting states to explore.", "startOffset": 11, "endOffset": 296}, {"referenceID": 3, "context": "(1999) and Brafman et al. (2002) propose exploration algorithms polynomial in the number of state space parameters. Others have used empowerment, which is the information gain based on entropy of actions, as intrinsic rewards (Klyubin et al., 2005; Mohamed & Rezende, 2015). Stadie et al. (2015) use prediction error in the feature space of an auto-encoder as a measure of interesting states to explore. State visitation counts have also been investigated for exploration (Bellemare et al., 2016; Oh et al., 2015; Tang et al., 2016). Osband et al. (2016) train multiple value functions and makes", "startOffset": 11, "endOffset": 555}, {"referenceID": 39, "context": "Many approaches measure information gain for exploration (Little & Sommer, 2014; Still & Precup, 2012; Storck et al., 1995).", "startOffset": 57, "endOffset": 123}, {"referenceID": 1, "context": "Our approach of jointly training forward and inverse models for learning a feature space has similarities to (Agrawal et al., 2016; Jordan & Rumelhart, 1992; Wolpert et al., 1995), but these works use the learned models of dynamics for planning a sequence of actions instead of exploration.", "startOffset": 109, "endOffset": 179}, {"referenceID": 43, "context": "Our approach of jointly training forward and inverse models for learning a feature space has similarities to (Agrawal et al., 2016; Jordan & Rumelhart, 1992; Wolpert et al., 1995), but these works use the learned models of dynamics for planning a sequence of actions instead of exploration.", "startOffset": 109, "endOffset": 179}, {"referenceID": 0, "context": "The idea of using a proxy task to learn a semantic feature embedding has been used in a number of works on self-supervised learning in computer vision (Agrawal et al., 2015; Doersch et al., 2015; Goroshin et al., 2015; Jayaraman & Grauman, 2015; Pathak et al., 2016; Wang & Gupta, 2015).", "startOffset": 151, "endOffset": 286}, {"referenceID": 5, "context": "The idea of using a proxy task to learn a semantic feature embedding has been used in a number of works on self-supervised learning in computer vision (Agrawal et al., 2015; Doersch et al., 2015; Goroshin et al., 2015; Jayaraman & Grauman, 2015; Pathak et al., 2016; Wang & Gupta, 2015).", "startOffset": 151, "endOffset": 286}, {"referenceID": 8, "context": "The idea of using a proxy task to learn a semantic feature embedding has been used in a number of works on self-supervised learning in computer vision (Agrawal et al., 2015; Doersch et al., 2015; Goroshin et al., 2015; Jayaraman & Grauman, 2015; Pathak et al., 2016; Wang & Gupta, 2015).", "startOffset": 151, "endOffset": 286}, {"referenceID": 29, "context": "The idea of using a proxy task to learn a semantic feature embedding has been used in a number of works on self-supervised learning in computer vision (Agrawal et al., 2015; Doersch et al., 2015; Goroshin et al., 2015; Jayaraman & Grauman, 2015; Pathak et al., 2016; Wang & Gupta, 2015).", "startOffset": 151, "endOffset": 286}, {"referenceID": 6, "context": "Houthooft et al. (2016) use an exploration strategy that maximizes information gain about the agent\u2019s belief of the environment\u2019s dynamics.", "startOffset": 0, "endOffset": 24}, {"referenceID": 11, "context": "Several methods propose improving data efficiency of RL algorithms using self-supervised prediction based auxiliary tasks (Jaderberg et al., 2017; Shelhamer et al., 2017).", "startOffset": 122, "endOffset": 170}, {"referenceID": 34, "context": "Several methods propose improving data efficiency of RL algorithms using self-supervised prediction based auxiliary tasks (Jaderberg et al., 2017; Shelhamer et al., 2017).", "startOffset": 122, "endOffset": 170}, {"referenceID": 36, "context": "Sukhbaatar et al. (2017) generates supervision for pre-training via asymmetric self-play between two agents to improve data efficiency during fine-tuning.", "startOffset": 0, "endOffset": 25}, {"referenceID": 7, "context": "Fu et al. (2017) learn discriminative models, and Gregor et al.", "startOffset": 0, "endOffset": 17}, {"referenceID": 7, "context": "Fu et al. (2017) learn discriminative models, and Gregor et al. (2017) use empowerment based measure to tackle exploration in sparse reward setups.", "startOffset": 0, "endOffset": 71}, {"referenceID": 10, "context": "We demonstrate that our agent significantly outperforms the baseline A3C with no curiosity, a recently proposed VIME (Houthooft et al., 2016) formulation for exploration, and a baseline pixel-predicting formulation.", "startOffset": 117, "endOffset": 141}], "year": 2017, "abstractText": "In many real-world scenarios, rewards extrinsic to the agent are extremely sparse, or absent altogether. In such cases, curiosity can serve as an intrinsic reward signal to enable the agent to explore its environment and learn skills that might be useful later in its life. We formulate curiosity as the error in an agent\u2019s ability to predict the consequence of its own actions in a visual feature space learned by a self-supervised inverse dynamics model. Our formulation scales to high-dimensional continuous state spaces like images, bypasses the difficulties of directly predicting pixels, and, critically, ignores the aspects of the environment that cannot affect the agent. The proposed approach is evaluated in two environments: VizDoom and Super Mario Bros. Three broad settings are investigated: 1) sparse extrinsic reward, where curiosity allows for far fewer interactions with the environment to reach the goal; 2) exploration with no extrinsic reward, where curiosity pushes the agent to explore more efficiently; and 3) generalization to unseen scenarios (e.g. new levels of the same game) where the knowledge gained from earlier experience helps the agent explore new places much faster than starting from scratch.", "creator": "LaTeX with hyperref package"}}}