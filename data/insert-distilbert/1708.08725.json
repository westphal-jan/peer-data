{"id": "1708.08725", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "29-Aug-2017", "title": "Machine Learning Approach for Detection of nonTor Traffic", "abstract": "intrusion detection has once attracted a considerable wider interest from researchers and industries. after many years of research the community still faces the problem of building reliable and efficient intrusion detection data systems ( ids ) capable of handling large geographical quantities of data with changing patterns in real time situations. effectively the tor network is popular in providing privacy and security privacy to particular end user by anonymising the identity of internet route users connecting through a series thereof of tunnels and nodes. this collaborative work focuses on the classification of linked tor traffic controller and nontor traffic to expose the activities within tor traffic that minimizes the protection of users. a study tasked to compare the reliability and efficiency efficacy of artificial neural network and remote support vector machine in detecting nontor traffic in unb - cic tor network traffic dataset is presented successfully in this paper. the results are analysed based on the overall accuracy, detection denial rate and false positive rate of utilizing the two algorithms. experimental quantitative results show that both algorithms could detect possible nontor traffic in the dataset. a hybrid artificial neural network proved a radically better classifier than svm in detecting nontor traffic in unb - cic tor network traffic dataset.", "histories": [["v1", "Tue, 29 Aug 2017 12:35:51 GMT  (383kb)", "http://arxiv.org/abs/1708.08725v1", "6 pages, 4 figures, Accepted and Presented in ARES '17 Proceedings of the 12th International Conference on Availability, Reliability and Security"]], "COMMENTS": "6 pages, 4 figures, Accepted and Presented in ARES '17 Proceedings of the 12th International Conference on Availability, Reliability and Security", "reviews": [], "SUBJECTS": "cs.CR cs.LG", "authors": ["elike hodo", "xavier bellekens", "ephraim iorkyase", "andrew hamilton", "christos tachtatzis", "robert atkinson"], "accepted": false, "id": "1708.08725"}, "pdf": {"name": "1708.08725.pdf", "metadata": {"source": "CRF", "title": "Machine Learning Approach for Detection of nonTor Traffic", "authors": ["Elike Hodo", "Xavier Bellekens", "Andrew Hamilton", "Christos Tachtatzis", "Robert Atkinson"], "emails": ["elike.hodo@strath.ac.uk", "x.bellekens@abertay.ac.uk", "Ephraim.iorkyase@strath.ac.uk", "Andrew.w.hamilton@strath.ac.uk", "Christos.tachtatzis@strath.ac.uk", "Robert.atkinson@strath.ac.uk"], "sections": [{"heading": null, "text": "KEYWORDS Artificial neural network, support vector machines, intrusion detection systems, Tor and nonTor, UNB-CIC Tor Network Traffic dataset."}, {"heading": "1 INTRODUCTION", "text": "The computing world has changed over the past decade due to the rapid development of internet and new privacy enhancement technologies to circumvent internet censorship. Tor which is popular in fighting internet censorship has been deployed to serve thousands of users transferring terabytes of data daily [1], [2].\nTor is an overlay network designed to provide privacy and anonymity over the internet for TCP based applications like browsing. It operates by anonymising the identity of users connecting through a series of tunnels and nodes. A user browses the web firstly by sending a request anonymously to Tor routers from one of the directory servers [2], [3]. Once a connection is established, traffic is relayed to the first router also called the Entry Guard. A session key is then generated between the client and the Entry Guard using Deffie-Hellman key exchange [4]. The same process is repeated on one router (hop) at a time to extend the circuit each time with established session keys for the previous routers. The last hop called the exit router communicates direct with the destination as a proxy [1]. With the establishment of three routers, the circuit is ready for internet traffic. The design of TOR network which includes the use of three hops and session keys helps to maintain anonymity through a concept called \u2018perfect forward secrecy\u2019[2], [5].\nTor networks are created to give internet users their privacy, freedom of speech, illegal tapping traffic and surveillance of network threatening users\u2019 personal identity [6]. Besides Tor network being used for good, greater portion of its traffic are port scans, hacking attempts, exfiltration of stolen data and online criminality [2].\nOver the last decade, Tor traffic classification has advanced in its applications in systems like quality of service (QoS) tools or Security information and Event management (SIEM) [7]. A considerable interest have been attracted from researchers and the industries to the study of these technologies and developing classification techniques [8][7].\nTo this effect intrusion detection system (IDS) plays an important role in Tor networks. Intrusion Detection Systems are placed on the networks to monitor and detect anomalies. In general IDS can be categorised into two components, based on the detection technique. Signature based and Outlier based IDS. Most IDs employ a signature based detection approach where the network traffic is monitored and compared against database rules or signature of known anomaly in network traffic [9][10]. An alarm is raised on detection of a mismatch. Signature based is the most\nARES\u201917, August 2017, Regio Callabria, ITALY E. Hodo et al.\ncommon as they do not necessarily have to learn the network traffic\u2019s behaviour. Although it is effective in detecting known anomalies, it cannot detect unknown anomalies unless the signature and rules are updated with new signatures [11][12]. Signature based is known to have a significant time lapse between anomaly detection and activation of its corresponding signature [10]. Signature based techniques are mainly human-dependent in creating, testing and deploying signatures.\nThe outlier technique is a behavioural based detection system. It observes changes in normal activity of network traffic and builds a profile of the network traffic being monitored [13][14]. An alarm is raised whenever a deviation from the normal behaviour is detected. It has the ability to detect unknown anomalies. However outlier detection based IDS have the disadvantage of being computational expensive because the profile generated over a period needs to be updated against each system activity [15] [10]. Machine learning techniques have the ability to learn the normal and anomalous patterns automatically by training a dataset to predict an anomaly in network traffic. One important characteristic defining the effectiveness of machine learning techniques is the features extracted from raw data for classification and detection. Features are the important information extracted from raw data. The underlying factor in selecting the best features lies in a trade-off between detection accuracy and false alarm rates. The use of all features on the other hand will lead to a significant overhead and thus reducing the risk of removing important features. Although the importance of feature selection cannot be overlooked, intuitive understanding of the problem is mostly used in the selection of features [16].\nThis paper analyses the performance of Artificial neural network (ANN) and Support vector machines (SVM) in terms of overall accuracy in detecting nonTor traffic in a Tor network traffic dataset data from the University of New Brunswick (UNB), Canadian Institute for cyber security (CIC) using a hybrid anomaly based approach. As part of the work, the results are compared with the results of A.Lashkari et al.[7] being the only study published to the best of our knowledge using the UNB-CIC Tor Network Traffic dataset [17]. A. Lashkari et al.[7]extracted 23 time based features from the dataset. A combination algorithm Cfs-SubsetEval + BestFirst (SE+BF) and Infogain+Ranker (IG+RK) was used to reduce the number of features from 23 to 5. The results from the feature selection algorithm was used to test different machine learning algorithms (ZeroR, C4.5 and KNN) using 10 fold cross validation and measured the weighted average precision and recall. Their results showed C4.5 was the best classifier.\nIn the proposed approach 10 features are selected out of the 28 features of the dataset using Correlation based feature selection (CFS) for training and testing the detection algorithms.\nThe rest of the paper is organised as follows: section 2 describes intrusion detection systems, section 3 describes the UNB-CIC Tor Network Traffic dataset, section 4 introduces Artificial neural network and Support vector machines algorithms used in the experiment respectively, section 5 analysis experimental results, conclusion and future works are presented in section VI."}, {"heading": "2 INTRUSION DETECTION SYSTEM", "text": "Intrusion detection system is a software application or a device placed at strategic places on a network to monitor and detect anomalies in network traffic [1][2] as shown in Fig. 1. The main features of IDS are to raise an alarm when an anomaly is detected. A complementary approach is to take corrective measures when anomalies are detected, such an approach is referred to as an intrusion Prevention System (IPS) [3]. Based on the interactivity property of IDS, it can be designed to work either on-line or offline. On-line IDS operates on a network in real time by analysing traffic packets and applying rules to classify normal and analogous traffic. Off-line IDS operates by storing data and after processing to classify normal and anomaly."}, {"heading": "3 UNB-CIC TOR NETWORK TRAFFIC DATASET", "text": "UNB-CIC Tor Network Traffic dataset [17] is a representative dataset of real-world traffic defined as a set of task. Three users were set up for browser traffic collection and two users for the communication parts such as chat, mail, p2p etc. from more than 18 representative applications such as Facebook, skype, Spotify, Gmail etc. The dataset contains 8 types of Tor traffic as shown in table 1 and non-Tor traffic."}, {"heading": "3.1 UNB-CIC Tor network Traffic dataset", "text": "description\nTable 1: Description of UNB-CIC Tor Network Traffic\nType of Traffic Description\nMachine Learning Approach for Detection of nonTor Traffic ARES\u201917, August 2017, Regio Callabria, ITALY\nBrowsing Email Chat Audio-Streaming Video-Streaming File Transfer Voice over Internet Protocol (Voip HTTP and HTTPS traffic generated by users while using Firefox and chrome Traffic samples generated using a Thunderbird client and two other accounts holders. Mails were delivered through SMTP/S and received using POP3/SSL in client 1 and IMAP/SSL in client 2. Instant messaging applications were identified under the chat label. The label was associated with Facebook and hangouts through web browser, skype and IAM and ICQ using an application called pidgin. Traffic was captured from Spotify identifying audio applications that require a continuous and steady stream of data. Traffic was captured from YouTube and Vimeo services using Chrome and Firefox identifying video applications that require a continuous and steady stream of data. This traffic was generated from skype file transfers, FTP over SSH (SFTP) and FTP over SSL (FTPS) traffic sessions identifying the traffic applications sending or receiving file documents. This is the traffic generated by voice applications using Facebook, Hangouts and Skype.\nTable 2: Description of captured features\nFeature Name Feature description Source IP Source Port Destination IP Destination Port Protocol Flow Duration Flow Bytes/s Flow Packets/s Flow IAT Mean Flow IAT Std Flow IAT Max Flow IAT Min Fwd IAT Mean Fwd IAT Std Fwd IAT Max Fwd IAT Min Bwd IAT Mean Bwd IAT Std Bwd IAT Max Bwd IAT Min Active Mean Active Std Active Max Active Min Idle Mean Idle Std Idle Max Idle Min IP address sending packets to destination Port sending packets from source IP address receiving packets from source Port receiving packets Type of the protocol used Length of connection in seconds Number of data bytes Number of data packets Packets flow inter arrival time Mean Packets flow inter arrival time Standard deviation Packets flow inter arrival time Max. Packets flow inter arrival time Min. Forward inter arrival time, the time between two packets Sent forward direction Mean. Forward inter arrival time, the time between two packets sent forward direction Standard deviation. Forward inter arrival time, the time between two packets sent forward direction Max. Forward inter arrival time, the time between two packets sent forward direction Min. Backward inter arrival time, the time between two packets sent backward Mean. Backward inter arrival time, the time between two packets sent backward Standard deviation. Backward inter arrival time, the time between two packets sent backward Max. Backward inter arrival time, the time between two packets sent backward Min. The amount of time a flow was active before becoming idle mean. The amount of time a flow was active before becoming idle Standard deviation. The amount of time a flow was active before becoming idle Max. The amount of time a flow was active before becoming idle Min. The amount of time a flow was idle before becoming active Mean. The amount of time a flow was idle before becoming active Std deviation. The amount of time a flow was idle before becoming active Max. The amount of time a flow was idle before becoming active Min.\nARES\u201917, August 2017, Regio Callabria, ITALY E. Hodo et al.\nThe non-Tor traffic captured in the dataset contains unique characteristics differentiating it from the Tor traffic. These characteristics are called features. The UNB-CIC Tor Network Traffic dataset contains a total of 28 features listed in table 2.\nThe features were generated by a sequence of packets having the same values for {source IP, source Port, destination port and protocol (TCP and UDP)}. All Tor traffic was TCP since the flow does not support UDP. The generation of flows was done by a new application, the ISCX Flow Meter which generates bidirectional flows [7]."}, {"heading": "4 DETECTION ALGORITHMS", "text": ""}, {"heading": "4.1 Artificial Neural Network", "text": "Artificial neural network (ANN) consists of information processing elements known to mimic neurons of the brain.\nIn this experiment, the neural network which is a Multilayer perceptron (MLP) is provided with a set labelled training set which learns a mapping from input features listed in table II represented as \ud835\udc65 in Fig. 2 to outputs (Tor and NonTor) as \ud835\udc66 in Fig. 2 given a labelled set of inputs-output pairs\n\ud835\udc51 = {(\ud835\udc65', \ud835\udc66')}'+1, (1)\nWhere, \ud835\udc51 is called the training set and \ud835\udc41 is the number of training examples. It is assumed that \ud835\udc66' is a categorical variable from some infinite set, \ud835\udc66' \u2208 {1\u2026\ud835\udc36} [4]. The technique used to train the MLP neural network is the Back Propagation hence the name MLP-BP.\nThe construction of the MLP-BP neural network is by putting layers of non-linear elements to form complex hypotheses. Each node takes an element of a feature vector. The structure of the ANN consists of three layers feed-forward neural network as shown in Fig. 2 Nodes labelled \ud835\udc652 \u2026\u2026\ud835\udc653 have been used to represent the input feature vectors to the ANN. Hidden inner nodes \ud835\udc4e2 \u2026\u2026\ud835\udc4e3 make up the hidden layer with an output layer of \ud835\udc662 \ud835\udc4e\ud835\udc5b\ud835\udc51 \ud835\udc667 nodes denoting different output classes (Tor and NonTor). The interconnection between the nodes is associated with scalar weights with an initial weight assigned to the connection. During training, the weights are adjusted.\nEvaluating the hypotheses is done by setting the input modes in a feed-back process and the values are propagated through the network to the output. At this stage the gradient descent is used so as to push the error in the output node back through the network by a back propagation process in order to estimate the error in the hidden nodes. The gradient of the cost \u2013 function is then calculated [5]."}, {"heading": "4.2 Support Vector Machines", "text": "Support Vector Machines (SVM) is a machine learning algorithm that learns to classify data using points labelled training examples falling into one or two classes. The SVM algorithm builds a model that can predict if a new example falls into one category or the other [6]. The model is constructed by constructing \ud835\udc58 Models of SVM, where \ud835\udc58 denotes the number of classes (Tor and NonTor). \ud835\udc652 \ud835\udc4e\ud835\udc5b\ud835\udc51 \ud835\udc667 SVM represented as \ud835\udc59th SVM is trained with all the examples in the \ud835\udc59th class labelled 1 and the other labelled 0. Where,\ud835\udc65' \u2208 \ud835\udc45; , \ud835\udc66' \u2208 {1,0} , \ud835\udc56 = 1\u2026 . . \ud835\udc41 and \ud835\udc66' \u2208 {1\u2026\u2026\ud835\udc58} is a class of \ud835\udc65' . Introducing a slack of positive variables \ud835\udf09' , that measures the extent of constraint in a non-linear situation. The prima Optimisation problem becomes [7]:\nx lll bw ,, min 27 (\ud835\udc64A)B\ud835\udc64A + \u2201 \u00e5 =\nN\ni\nl\ni 1 x\n(\ud835\udc64A)Bf (\ud835\udc65)' + \ud835\udc4fA \u2265 1 \u2212 \ud835\udf09' A , \ud835\udc56\ud835\udc53 \ud835\udc66' = \ud835\udc41, (2)\n(\ud835\udc64A)Bf (\ud835\udc65)' + \ud835\udc4fA \u2264 \u22121 + \ud835\udf09'A, \ud835\udc56\ud835\udc53 \ud835\udc66' = \ud835\udc41, \ud835\udf09'A \u2265 0, \ud835\udc56 = 1\u2026\u2026\ud835\udc41, Where the training set \ud835\udc65' are mapped into higher dimensional space by the function f and \u2201 , where \u2201 is a parameter which trades off wide margin with small number of margin failures . Minimisation of 2\n7 (\ud835\udc64A)B\ud835\udc64A implies maximising 7 JK , which is\nthe margin between the two data points. The SVM then searches for a balance between the regularisation term 2\n7 (\ud835\udc64A)B\ud835\udc64A and the\nerrors in training the dataset. Solving (2) gives \ud835\udc58 decision functions:\n\ud835\udc64 2Bf \ud835\udc65 + \ud835\udc4f2 \u22ee (3)\n\ud835\udc64 MBf \ud835\udc65 + \ud835\udc4fM where \ud835\udc65 is the class having the largest value of the decision function:\n\ud835\udc65 \u2261 \ud835\udc4e\ud835\udc5f\ud835\udc54\ud835\udc5a\ud835\udc4e\ud835\udc65A\u22612\u2026M( \ud835\udc64A Bf \ud835\udc65 + \ud835\udc4fA) (4) The dual problem of (2) having the same number of variables as the number of data in (2). Thus \ud835\udc58 \ud835\udc41 -variable quadratic programing problems are solved.\nMachine Learning Approach for Detection of nonTor Traffic ARES\u201917, August 2017, Regio Callabria, ITALY"}, {"heading": "5 EXPERIMENTAL RESULTS ANALYSIS", "text": ""}, {"heading": "5.1 Results Evaluation Metrics", "text": "The effectiveness of IDS requires high accuracy, high detection rate (Recall) and high Positive Predictive value (Precision) as well as low false positive rate. The performance of IDS in general is evaluated in terms of overall accuracy, detection rate and false positive rate. Accuracy (ACC)= BR\nBRSB,STRST,\nDetection Rate (DR)= BR BRSTR False Positive rate (FPR)= TR TRSB, Positive Predictive Value (PPV)= BR BRSTR Where, True Negative (TN): a measure of the number of normal events rightly classified normal.\nTrue Positive (TP): a measure of attacks classified rightly as attack.\nFalse Positive (FP): a measure of normal events misclassified as attacks.\nFalse Negative (FN): a measure of attacks misclassified as normal."}, {"heading": "5.2 Feature Selection Algorithm", "text": "This paper proposes correlation based feature selection (CFS) to select the relevant features out of the 28 features. CFS is a filtering algorithm using a correlation based heuristic evaluation function to rank feature subsets. A good set of features are highly correlated with the class (target) and at the same time uncorrelated to each other. Redundant features are ignored because they have low correlation with class and will turn to highly correlated with one or more of the remaining features. A feature is accepted based on the extent it predicts classes in areas of the instance space which has not been predicted by other features. Equation (8) shows the CFS feature subset evaluation function. \ud835\udc40V = MWXY\nMSM MZ2 WYY (5)\nWhere \ud835\udc40V is heuristic \u201cmerit\u201d of a feature subset \ud835\udc60 containing \ud835\udc58 features, \ud835\udc5f\\] is the average feature class correlation. The numerator can be thought of as giving an indication of how predictive a group of features are; the denominator of how much redundancy there is among the features [8]. The CFS algorithm reduces the dimensionality of the dataset, reduces overfitting and gives a shorter training time. Table IV shows the 10 selected features based on the appropriate correlation measure and heuristic search strategy. The selected features are: destination Port, Bwd IAT Mean, Idle Max., Fwd IAT Min., Source Port, idel Min., Flow Bytes/s, Flow IAT Std., Source IP, Destination IP."}, {"heading": "5.3 Experimental Results", "text": "Neural network and Support vector machine classification involves two phases: the classification phase and training phase as shown in Fig. 3. In the training phase, the algorithm learns the distribution of the features with corresponding classes. During the classification phase, the learned model is applied to a test set which has not been previously seen by the training phase.\nIn this work, experiment was performed by training ANN and SVM with UNB-CIC Tor Network Traffic dataset to detect nonTor Traffic. In the first set of experiment, ANN was trained with all 28 features of the dataset with 20-hidden neurons and with 10 features selected using CFS with 6-hidden nodes. The ANN uses Levenberg-Marquardt training function (trainlm) for learning. In the second set of the experiment SVM was trained with all 28 features in the dataset and with 10 features selected using CFS. The performance of ANN and SVM was evaluated on train (70%) dataset, test (15%) dataset and validation 20% dataset. Fig. 4 shows the results after training ANN and SVM with all 28 features and 10 features selected by CFS. A.Lashkari et al.[9] Proposed C 4.5 in classifying Tor Traffic and nonTor Traffic using only the time based features of the dataset.\nThe experimental results as compared to the results in [7] show CFS-ANN performs with an overall accuracy of 99.8% in the\nARES\u201917, August 2017, Regio Callabria, ITALY E. Hodo et al.\nclassification of Tor and nonTor using only 10 features in the dataset. On the other hand the DR for Tor and nonTor Traffic in CFS-ANN recorded 98.9% and 100% respectively which performed better than C 4.5. The best values in detection accuracy, detection rate with a low false positive rate in the classification of Tor and nonTor traffic were recorded by CFSANN making it a promising detection system for nonTor traffic. A comparison of experimental results with results from [7] are shown in table 3."}, {"heading": "6 CONCLUSIONS", "text": "This paper presents experimental study using two algorithms to detect nonTor traffic in UNB-CIC Tor Network Traffic dataset. The research mainly focuses on detecting nonTor traffic in a representative dataset of real-world traffic to expose the activities within the Tor-traffic that downgrades the privacy of users. The work proposes CFS-ANN hybrid classifier in the detection of nonTor traffic in UNB-CIC Tor Network Traffic dataset. Experimental results show the proposed algorithm detects nonTor with an accuracy of 99.8%, detection rate of 100% and false positive rate of 1.2%. The proposed algorithm performed better than SVM and C4.5 proposed in [7] as shown in table 4. The proposed hybrid classifier reduces the dimensionality of the data size by 65% removing the less effective features thereby lowering computational cost and training time.\nIn the future, the performance of the proposed algorithm and deep neural networks will be analysed in the classification of the 8 different types of traffic in the UNB-CIC Tor Network Traffic dataset."}, {"heading": "ACKNOWLEDGMENTS", "text": "The authors would like to thank the Canadian Institute of Cyber Security, University of Brunswick for providing us with the dataset to carry out this work."}], "references": [{"title": "TorWard: Discovery, Blocking, and Traceback of Malicious Traffic Over Tor", "author": ["Z. Ling", "J. Luo", "K. Wu", "W. Yu", "X. Fu"], "venue": "IEEE Trans. Inf. Forensics Secur., vol. 10, no. 12, pp. 2515\u20132530, Dec. 2015.", "citeRegEx": "1", "shortCiteRegEx": null, "year": 2015}, {"title": "Tor-based malware and Tor connection detection", "author": ["I. Ghafir", "V. Prenosil", "J. Svoboda"], "venue": "International Conference on Frontiers of Communications, Networks and Applications (ICFCNA 2014 - Malaysia), 2014, p. 19 (6 .)-19 (6 .).", "citeRegEx": "2", "shortCiteRegEx": null, "year": 2014}, {"title": "Please slow down", "author": ["S. Doswell", "N. Aslam", "D. Kendall", "G. Sexton"], "venue": "Proceedings of the Third ACM workshop on Security and privacy in  smartphones & mobile devices - SPSM \u201913, 2013, pp. 87\u201392.", "citeRegEx": "3", "shortCiteRegEx": null, "year": 2013}, {"title": "New directions in cryptography", "author": ["W. Diffie", "M. Hellman"], "venue": "IEEE Trans. Inf. Theory, vol. 22, no. 6, pp. 644\u2013654, Nov. 1976.", "citeRegEx": "4", "shortCiteRegEx": null, "year": 1976}, {"title": "Detecting and blocking onion router traffic using deep packet inspection", "author": ["F.A. Saputra", "I.U. Nadhori", "B.F. Barry"], "venue": "2016 International Electronics Symposium (IES), 2016, pp. 283\u2013288.", "citeRegEx": "6", "shortCiteRegEx": null, "year": 2016}, {"title": "Characterization of Tor Traffic using Time based Features", "author": ["A.H. Lashkari", "G.D. Gil", "M.S.I. Mamun", "A.A. Ghorbani"], "venue": "pp. 253\u2013 262, 2017.", "citeRegEx": "7", "shortCiteRegEx": null, "year": 2017}, {"title": "A survey of techniques for internet traffic classification using machine learning", "author": ["T. Nguyen", "G. Armitage"], "venue": "IEEE Commun. Surv. Tutorials, vol. 10, no. 4, pp. 56\u201376, 2008.", "citeRegEx": "8", "shortCiteRegEx": null, "year": 2008}, {"title": "Snort - Lightweight Intrusion Detection for Networks", "author": ["Roesch", "Martin"], "venue": "Proceedings of the 13th USENIX conference on System administration, 1999, pp. 229\u2013238.", "citeRegEx": "9", "shortCiteRegEx": null, "year": 1999}, {"title": "A Neural Network based system for Intrusion Detection and attack classification", "author": ["B. Subba", "S. Biswas", "S. Karmakar"], "venue": "2016 Twenty Second National Conference on Communication (NCC), 2016, pp. 1\u20136.", "citeRegEx": "10", "shortCiteRegEx": null, "year": 2016}, {"title": "High Perception Intrusion Detection System Using Neural Networks", "author": ["G.A. Haidar", "C. Boustany"], "venue": "2015 Ninth International Conference on Complex, Intelligent, and Software Intensive Systems, 2015, pp. 497\u2013 501.", "citeRegEx": "11", "shortCiteRegEx": null, "year": 2015}, {"title": "A Highly-Efficient Memory-Compression Scheme for GPU- Accelerated Intrusion Detection Systems", "author": ["X.J.A. Bellekens", "C. Tachtatzis", "R.C. Atkinson", "C. Renfrew", "T. Kirkham"], "venue": "Proc. 7th Int. Conf. Secur. Inf. Networks - SIN \u201914, pp. 302\u2013309, 2014.", "citeRegEx": "12", "shortCiteRegEx": null, "year": 2014}, {"title": "A survey on Wireless Sensor Network for Community Intrusion Detection Systems", "author": ["N.K. Mittal"], "venue": "2016 3rd International Conference on Recent Advances in Information Technology (RAIT), 2016, pp. 107\u2013111.", "citeRegEx": "13", "shortCiteRegEx": null, "year": 2016}, {"title": "Network Intrusion Detection System Using Neural Networks", "author": ["J. Shun", "H. a. Malki"], "venue": "2008 Fourth Int. Conf. Nat. Comput., vol. 5, pp. 242\u2013 246, 2008.", "citeRegEx": "14", "shortCiteRegEx": null, "year": 2008}, {"title": "Threat analysis of IoT networks Using Artificial Neural Network Intrusion Detection System", "author": ["E. Hodo", "X. Bellekens", "A. Hamilton", "P.-L. Dubouilh", "E. Iorkyase", "C. Tachtatzis", "R. Atkinson"], "venue": "2016 3rd International Symposium on Networks, Computers and Communications (ISNCC), 2016, pp. 1\u20136.", "citeRegEx": "15", "shortCiteRegEx": null, "year": 2016}, {"title": "Towards effective feature selection in machine learning-based botnet detection approaches", "author": ["E. Biglar Beigi", "H. Hadian Jazi", "N. Stakhanova", "A.A. Ghorbani"], "venue": "2014 IEEE Conference on Communications and Network Security, 2014, pp. 247\u2013255.", "citeRegEx": "16", "shortCiteRegEx": null, "year": 2014}, {"title": "Understanding Intrusion Detection Systems", "author": ["D. Rozenblum"], "venue": "SANS Inst., no. 122, pp. 11\u201315, 2001.", "citeRegEx": "18", "shortCiteRegEx": null, "year": 2001}, {"title": "Shallow and Deep Networks Intrusion Detection System: A Taxonomy and Survey.", "author": ["E. Hodo", "X. Bellekens", "A. Hamilton", "C. Tachtatzis", "R. Atkinson"], "venue": "[Online]. Available: https://arxiv.org/ftp/arxiv/papers/1701/1701.02145.pdf. [Accessed:", "citeRegEx": "19", "shortCiteRegEx": "19", "year": 2017}, {"title": "Machine learning: a probabilistic perspective", "author": ["K. Murphy"], "venue": "Chance encounters: Probability in ..., 2012. [Online]. Available: http://link.springer.com/chapter/10.1007/978-94-011-3532-0_2. [Accessed: 06-Jan-2015].", "citeRegEx": "21", "shortCiteRegEx": null, "year": 2012}, {"title": "Machine Learning in Wireless Sensor Networks: Algorithms, Strategies, and Applications", "author": ["M.A. Alsheikh", "S. Lin", "D. Niyato", "H.-P. Tan"], "venue": "IEEE Commun. Surv. Tutorials, vol. 16, no. 4, pp. 1996\u20132018, 2014.", "citeRegEx": "22", "shortCiteRegEx": null, "year": 1996}, {"title": "A Tutorial on Support Vector Machines for Pattern Recognition", "author": ["C.J.C. Burges"], "venue": "Data Min. Knowl. Discov., vol. 2, no. 2, pp. 121\u2013167.", "citeRegEx": "23", "shortCiteRegEx": null, "year": 0}, {"title": "Correlation-based Feature Selection for Machine Learning", "author": ["M.A. Hall"], "venue": "1999.", "citeRegEx": "25", "shortCiteRegEx": null, "year": 1999}], "referenceMentions": [{"referenceID": 0, "context": "Tor which is popular in fighting internet censorship has been deployed to serve thousands of users transferring terabytes of data daily [1], [2].", "startOffset": 136, "endOffset": 139}, {"referenceID": 1, "context": "Tor which is popular in fighting internet censorship has been deployed to serve thousands of users transferring terabytes of data daily [1], [2].", "startOffset": 141, "endOffset": 144}, {"referenceID": 1, "context": "A user browses the web firstly by sending a request anonymously to Tor routers from one of the directory servers [2], [3].", "startOffset": 113, "endOffset": 116}, {"referenceID": 2, "context": "A user browses the web firstly by sending a request anonymously to Tor routers from one of the directory servers [2], [3].", "startOffset": 118, "endOffset": 121}, {"referenceID": 3, "context": "A session key is then generated between the client and the Entry Guard using Deffie-Hellman key exchange [4].", "startOffset": 105, "endOffset": 108}, {"referenceID": 0, "context": "The last hop called the exit router communicates direct with the destination as a proxy [1].", "startOffset": 88, "endOffset": 91}, {"referenceID": 1, "context": "The design of TOR network which includes the use of three hops and session keys helps to maintain anonymity through a concept called \u2018perfect forward secrecy\u2019[2], [5].", "startOffset": 158, "endOffset": 161}, {"referenceID": 4, "context": "Tor networks are created to give internet users their privacy, freedom of speech, illegal tapping traffic and surveillance of network threatening users\u2019 personal identity [6].", "startOffset": 171, "endOffset": 174}, {"referenceID": 1, "context": "Besides Tor network being used for good, greater portion of its traffic are port scans, hacking attempts, exfiltration of stolen data and online criminality [2].", "startOffset": 157, "endOffset": 160}, {"referenceID": 5, "context": "Over the last decade, Tor traffic classification has advanced in its applications in systems like quality of service (QoS) tools or Security information and Event management (SIEM) [7].", "startOffset": 181, "endOffset": 184}, {"referenceID": 6, "context": "A considerable interest have been attracted from researchers and the industries to the study of these technologies and developing classification techniques [8][7].", "startOffset": 156, "endOffset": 159}, {"referenceID": 5, "context": "A considerable interest have been attracted from researchers and the industries to the study of these technologies and developing classification techniques [8][7].", "startOffset": 159, "endOffset": 162}, {"referenceID": 7, "context": "Most IDs employ a signature based detection approach where the network traffic is monitored and compared against database rules or signature of known anomaly in network traffic [9][10].", "startOffset": 177, "endOffset": 180}, {"referenceID": 8, "context": "Most IDs employ a signature based detection approach where the network traffic is monitored and compared against database rules or signature of known anomaly in network traffic [9][10].", "startOffset": 180, "endOffset": 184}, {"referenceID": 9, "context": "Although it is effective in detecting known anomalies, it cannot detect unknown anomalies unless the signature and rules are updated with new signatures [11][12].", "startOffset": 153, "endOffset": 157}, {"referenceID": 10, "context": "Although it is effective in detecting known anomalies, it cannot detect unknown anomalies unless the signature and rules are updated with new signatures [11][12].", "startOffset": 157, "endOffset": 161}, {"referenceID": 8, "context": "Signature based is known to have a significant time lapse between anomaly detection and activation of its corresponding signature [10].", "startOffset": 130, "endOffset": 134}, {"referenceID": 11, "context": "It observes changes in normal activity of network traffic and builds a profile of the network traffic being monitored [13][14].", "startOffset": 118, "endOffset": 122}, {"referenceID": 12, "context": "It observes changes in normal activity of network traffic and builds a profile of the network traffic being monitored [13][14].", "startOffset": 122, "endOffset": 126}, {"referenceID": 13, "context": "However outlier detection based IDS have the disadvantage of being computational expensive because the profile generated over a period needs to be updated against each system activity [15] [10].", "startOffset": 184, "endOffset": 188}, {"referenceID": 8, "context": "However outlier detection based IDS have the disadvantage of being computational expensive because the profile generated over a period needs to be updated against each system activity [15] [10].", "startOffset": 189, "endOffset": 193}, {"referenceID": 14, "context": "Although the importance of feature selection cannot be overlooked, intuitive understanding of the problem is mostly used in the selection of features [16].", "startOffset": 150, "endOffset": 154}, {"referenceID": 5, "context": "[7] being the only study published to the best of our knowledge using the UNB-CIC Tor Network Traffic dataset [17].", "startOffset": 0, "endOffset": 3}, {"referenceID": 5, "context": "[7]extracted 23 time based features from the dataset.", "startOffset": 0, "endOffset": 3}, {"referenceID": 0, "context": "Intrusion detection system is a software application or a device placed at strategic places on a network to monitor and detect anomalies in network traffic [1][2] as shown in Fig.", "startOffset": 156, "endOffset": 159}, {"referenceID": 1, "context": "Intrusion detection system is a software application or a device placed at strategic places on a network to monitor and detect anomalies in network traffic [1][2] as shown in Fig.", "startOffset": 159, "endOffset": 162}, {"referenceID": 2, "context": "A complementary approach is to take corrective measures when anomalies are detected, such an approach is referred to as an intrusion Prevention System (IPS) [3].", "startOffset": 157, "endOffset": 160}, {"referenceID": 5, "context": "The generation of flows was done by a new application, the ISCX Flow Meter which generates bidirectional flows [7].", "startOffset": 111, "endOffset": 114}, {"referenceID": 3, "context": "C} [4].", "startOffset": 3, "endOffset": 6}, {"referenceID": 4, "context": "the other [6].", "startOffset": 10, "endOffset": 13}, {"referenceID": 5, "context": "prima Optimisation problem becomes [7]:", "startOffset": 35, "endOffset": 38}, {"referenceID": 6, "context": "The numerator can be thought of as giving an indication of how predictive a group of features are; the denominator of how much redundancy there is among the features [8].", "startOffset": 166, "endOffset": 169}, {"referenceID": 7, "context": "[9] Proposed C 4.", "startOffset": 0, "endOffset": 3}, {"referenceID": 5, "context": "The experimental results as compared to the results in [7] show CFS-ANN performs with an overall accuracy of 99.", "startOffset": 55, "endOffset": 58}, {"referenceID": 5, "context": "A comparison of experimental results with results from [7] are shown in table 3.", "startOffset": 55, "endOffset": 58}, {"referenceID": 5, "context": "[7]", "startOffset": 0, "endOffset": 3}, {"referenceID": 5, "context": "5 [7]", "startOffset": 2, "endOffset": 5}, {"referenceID": 5, "context": "5 proposed in [7] as shown in table 4.", "startOffset": 14, "endOffset": 17}], "year": 2017, "abstractText": "Intrusion detection has attracted a considerable interest from researchers and industries. After many years of research the community still faces the problem of building reliable and efficient intrusion detection systems (IDS) capable of handling large quantities of data with changing patterns in real time situations. The Tor network is popular in providing privacy and security to end user by anonymising the identity of internet users connecting through a series of tunnels and nodes. This work focuses on the classification of Tor traffic and nonTor traffic to expose the activities within Tor traffic that minimizes the protection of users. A study to compare the reliability and efficiency of Artificial Neural Network and Support vector machine in detecting nonTor traffic in UNB-CIC Tor Network Traffic dataset is presented in this paper. The results are analysed based on the overall accuracy, detection rate and false positive rate of the two algorithms. Experimental results show that both algorithms could detect nonTor traffic in the dataset. A hybrid Artificial neural network proved a better classifier than SVM in detecting nonTor traffic in UNB-CIC Tor Network Traffic dataset.", "creator": "Word"}}}