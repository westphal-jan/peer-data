{"id": "1006.1512", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "8-Jun-2010", "title": "The Deterministic Dendritic Cell Algorithm", "abstract": "The Dendritic specialisation Cell 28-29 Algorithm italicized is an yiji immune - brattleboro inspired algorithm u.s.-made orig - inally mussavian based solemnities on the laetus function of natural dendritic ekadashi cells. The dockland original instantiation of text-type the long-beaked algorithm is a highly stochastic algorithm. yamethin While k\u0131z\u0131lcahamam the erg performance of the dumex algorithm pamphleteers is good when applied to 49-28 large kreditanstalt real - time datasets, electroencephalogram it mutebusi is difficult liscio to abysmal anal - fekkai yse due maqdadiyah to hemangiomas the unscrambling number ignatius of random - presbyteral based elements. sindoni In this sgy2 paper keratoderma a tumescence deterministic version of the algorithm is chamula proposed, implemented jullian and callot tested using a port tondi scan dataset sg-1000 to cybex provide a controllable dockworker system. s\u0142omniki This version consists of aviaco a nationaltheater controllable amount of parameters, ostiglia which are fifty-sixth experimented with in privity this paper. In tergesen addition the nsm effects are var\u00e8se examined of aadi the cumia use fruit of trys time windows arseneau and variation seckendorff on rahimuddin the number patryannytimes.com of earner cells, both unaccomplished which are marriot shown duberman to fullscale influence the algorithm. aerosmith Finally wicket-taker a palatines novel md-81 metric mid-late for mush the assessment of bigan the algorithms 30-6 output is ginsburg introduced mercyful and bengawan proves bushs to be sitwell a lokuhettige more 1.3667 sensitive krrish metric 1-888 than euro272 the kickboxer metric used busia with the 5.00 original gunvalson Dendritic phf Cell Algorithm.", "histories": [["v1", "Tue, 8 Jun 2010 10:07:34 GMT  (150kb)", "http://arxiv.org/abs/1006.1512v1", "12 pages, 1 algorithm, 1 figure, 2 tables, 7th International Conference on Artificial Immune Systems (ICARIS 2008)"]], "COMMENTS": "12 pages, 1 algorithm, 1 figure, 2 tables, 7th International Conference on Artificial Immune Systems (ICARIS 2008)", "reviews": [], "SUBJECTS": "cs.AI cs.NE", "authors": ["julie greensmith", "uwe aickelin"], "accepted": false, "id": "1006.1512"}, "pdf": {"name": "1006.1512.pdf", "metadata": {"source": "CRF", "title": "The Deterministic Dendritic Cell Algorithm", "authors": ["Julie Greensmith", "Uwe Aickelin"], "emails": ["uxa@cs.nott.ac.uk"], "sections": [{"heading": null, "text": "inally based on the function of natural dendritic cells. The original instantiation of the algorithm is a highly stochastic algorithm. While the performance of the algorithm is good when applied to large real-time datasets, it is difficult to analyse due to the number of random-based elements. In this paper a deterministic version of the algorithm is proposed, implemented and tested using a port scan dataset to provide a controllable system. This version consists of a controllable amount of parameters, which are experimented with in this paper. In addition the effects are examined of the use of time windows and variation on the number of cells, both which are shown to influence the algorithm. Finally a novel metric for the assessment of the algorithms output is introduced and proves to be a more sensitive metric than the metric used with the original Dendritic Cell Algorithm.\n1 Introduction\nArtificial Immune Systems (AISs) have developed significantly over the past five years, instigated by the creation of novel algorithms termed \u20182nd Generation AISs\u2019. These AISs initially rely on interdisciplinary collaboration to use current research in immunology to produce algorithms which are both true to the underlying metaphor used as inspiration and perform well upon their resultant application domain. One such 2nd Generation AIS is the Dendritic Cell Algorithm (DCA), which is based on models of the dendritic cells (DCs) of the human immune system.\nThe original DCA was developed as part of the Danger Project [1], and formed the majority of Greensmith\u2019s thesis [3]. A prototype of the algorithm was first presented in 2005 [4] with a fully implemented real-time system version presented in 2006 [8]. The DCA has distinct advantages when applied to real-time computer security problems, as it has very low CPU processing requirements and does not require extensive training periods. All versions of the DCA to date have used a relatively large number of parameters and stochastic elements, such as random selection of cells and variable thresholds. Setting these parameters to the appropriate values has always been somewhat arbitrary, and thus has left the algorithm open to various criticisms. The use of various probabilistic elements was in part an artifact of the use of the Twycross\u2019 libtissue framework for the initial algorithm development. While this framework is useful for the rapid development of such AISs, one of the drawbacks for the DCA is the sheer amount of interacting entities.\nAs a result, it is still unclear which parts of the algorithm are responsible for its performance and for its time-dependent correlation properties. In order to push forward the DCA as a serious contender within biologically inspired computation, a thorough analysis of the algorithm itself must be performed: a task too complex when implemented within a large framework. Insight is needed into exactly what each component of the algorithm does and how detection is actually achieved. Despite avoiding a theoretical approach so far, the time has come to pick apart this algorithm and to break it down into a controllable deterministic system which is more accessible for the performance of various computational analyses and the various parameter relationships explored.\nThe aim of this paper is to describe, implement, and test a deterministic DCA (dDCA) to uncover its inner relationships and function. This paper is structured as follows, with background information present in section 2, section 3describing the dDCA and the new metric K\u03b1 . Experiments are described in section 4, with a discussion of results and conclusions presented in sections 5 and 6 respectively.\n2 DCA Overview\nMetaphorically, DCs are the crime-scene investigators of the human immune system, traversing the tissue for evidence of damage - namely signals, and for potential suspects responsible for the damage, namely antigen. More information regarding the function of natural DCs can be found in [10] with a distilled version for computer scientists presented in [3]. The DCA is derived from an abstract model of DC biology resulting in a population based algorithm which provides robust detection and correlation. Different cells process signals acquired over different time periods, generating individual \u2018snapshots\u2019 of input information which are correlated with antigens. The original DCA is described in detail in numerous sources including [7] and [3].\nThe majority of research performed with the DCA has been within the sphere of security. In particular, the works of Greensmith et al. have focussed on computer security applications. The algorithm to date has been successfully applied to port-scan detection [8] [6] [5], and upon comparison to a self organizing map performed well on the large dataset used, classifying 13 million antigens in under 100 seconds. In addition to her work, the DCA has also been applied to the detection of a novel threat on the internet, botnets [2], where the DCA produced high rates of true positives and low rates of false positives in comparison to a statistical technique. Outside of computer security Kim et al. have successfully applied the DCA to the detection of misbehaviour in wireless sensor networks, where again the algorithm showed a lot of promise. More recently in the work of Lay and Bate [9], the DCA is applied to the detection of overruns in the scheduling of processes, again with success.\nThe DCA is also showing promise in the area of robotic security as demonstrated by Oates et al. [11]. A proof of concept experiment is performed to demonstrate that the DCA could be used for basic object discrimination in a controlled environment. The same researchers have now extended this research into the theoretical domain [12] through frequency tuning analysis. This research has highlighted that the DCA exhibits filter properties and also suggests the importance of the lifespan limit. Their research\nalso contains two optimizations of the DCA which are used in this paper, namely a real valued representation of individual DC output and tissue centric processing of signals.\n3 The Deterministic DCA (dDCA)\nIn this section the dDCA is formally described followed by a discussion of the modified features. In order to produce the deterministic version, it is necessary to make a number of assumptions and modifications to the original DCA:\n\u2013 Both signals and antigen are required for the system to correctly function. If no\nsignals are used, then the DCs will not exceed their lifespan limit and will not be able to present antigen. If no antigen are used, then the context has no subject. \u2013 At minimum two signal categories are required, an activating signal and an inhibitory signal - the danger and safe signal respectively. \u2013 A uniform distribution of lifespan values is used across the population. This allows for the study of the time-window effect in a repeatable and controllable manner. \u2013 To provide reproducibility and for the ease of sensitivity a reduction in parameters is required from those used with the original DCA. As a result explicit antigen storage and sampling of the antigen population is removed, with all antigen data sampled by the DC population. \u2013 Each DC in the population is exposed to identical input signal data and would process these signals in an identical manner. This results in the optimisation of the signal processing procedure, as the output signal values are calculated only once for the entire population, as suggested by Oates et al. [12]. \u2013 The output context value of an individual DC is reduced to one factor, k\u203e, which negative numbers indicate a safe context and positive numbers indicating analogous to the previously used mature context. This is also derived from the theoretical analysis provided in Oates et al. [12].\nOne further modification is proposed for use with this system. This is the incorporation of an antigen profile. In previous implementations of the DCA, the string type antigens are stored in an \u2018antigen vector\u2019 data structure. This required the random selection of antigen by each DC and antigen overwriting. To ensure exact reproducibility the random sampling and storage is replaced by a simple array. In this array the value of the antigen is stored with the number of times a DC has collected antigens of this type. This reduces the required overhead as no dynamic memory management is required and leaves no concerns over denial of service due to the potential threat of antigen flooding.\nPrevious versions of the DCA featured in excess of 10 parameters, each of which were derived from empirical biological observation and through sensitivity analysis. The resultant algorithm contains three parameters. Firstly, the number of DCs must be defined - this is set to 100 as previously, but is experimented with in Section 4. Secondly the weighting schema for the signal processing. The signal processing equation used previously is modified for use with simplified weight values. As with the original DCA, the input signals are transformed to output signals. However a different procedure is needed as the processing is performed in the tissue, the incorporation of k reduces\nthe outputs from three to two and this is coupled with the reduction to two signal categories. The new signal processing procedure is shown in Equations 1 and 4, where S and D is the input value for the safe and danger signals respectively with 2 and 3 showing subsequent derivation thereof, c is the interim costimulation output signal and k is the interim context output value. Pseudocode for the implemented dDCA is given in Algorithm 1.\ncsm = S + D (1)\nk = (mature \u2212 semi) (2)\nk = (D \u2212 S) \u2212 S (3)\nk = D \u2212 2S (4)\ninput : Antigen and Signals output: Antigen Types and cumulative k values\nset number of cells; initialise DCs(); while data do\nswitch input do case antigen\nantigenCounter++; cell index = antigen counter modulus number of cells ; DC of cell index assigned antigen; update DC\u2019s antigen profile;\nend case signals\ncalculate csm and k; for all DCs do\nDC.lifespan -= csm; DC.k += k; if DC.lifespan <= 0 then\nlog DC.k, number of antigen and cell iterations ; reset DC();\nend\nend\nend\nend\nend for each antigen Type do calculate anomaly metrics; end\nAlgorithm 1: Pseudocode of the deterministic DCA.\nI\n3.1 Anomaly Metrics: MCAV and K\u03b1\nThe mature context antigen value (MCAV) is calculated once all data is processed, derived from the output of the cells collected during run-time. This value is generated for each antigen type (\u03b1), where \u03b1 is defined as a set of antigens of identical value. As the name suggests, the MCAV is a measure of the proportion of antigen presented by a fully mature cell as shown in Equation 5, where M C AV\u03b1 is the MCAV for antigen type \u03b1, M is the number of \u2019mature\u2019 antigen of type \u03b1, and Ag is the total amount of antigen presented for antigen type \u03b1.\nM M C AV\u03b1 =\nAg (5)\nThis metric returns a value between zero and one, where the probability of an antigen type being anomalous increases as this value tends to one. This is a convenient, normalised output, to which an anomaly threshold can be applied. However, it fails to encapsulate the magnitude of the difference between positive and negative values of the presented k\u203e. In the MCAV calculation a value of k\u203e of -1 is treated in exactly the same manner as a value of -200. The algorithm provides this information, hence it may be fruitful to incorporate this information into a more sophisticated metric.\nK\u03b1 is implemented with the dDCA, and uses the magnitudes of the k\u203e values. This generates real valued anomaly scores and may assist in the polarisation of normal and anomalous processes. The process of calculating this anomaly score is shown in Equation 6, where km is the k\u203e value for DCm , \u03b1m is the number of antigen presented of type \u03b1 by DCm .\nP km\nK\u03b1 = P m\n(6)\nm \u03b1m\nAs this equation returns real valued numbers dependent on the actual values of the input signals used, we propose a method for defining an anomaly threshold, to allow for the classification of the antigen types analysed. This can be performed if the signals are known a priori. The number of signal instances and the equivalent processed total sum of the input signals. The threshold, TK , is defined in Equation 7 with SK , the weighted sum of all input signals, defined in Equation 8, where Is is the number of pairs of signal instances, \u203ei is the mean number of iterations per cell incarnation, and D and S representing danger and safe signal values.\nSK\nTK = \u2217 \u203ei (7) s\nSK = X D \u2212 2 X\nS (8) Is Is\nOnce TK is applied to the K\u03b1 values, antigen types with a value of over this thresh- old are classed as anomalous, and lower values classed as normal. If required, true and false positives can be derived from this information. A similar threshold can be derived from the MCAV, using the ratio of total danger signals to total safe signals present in the used dataset.\n4 Experimental Analysis\n4.1 Introduction\nIn this section initial tests are performed using the dDCA. This involves re-visiting a past dataset, namely the ping scan data used in Greensmith et al. [7] with one randomly selected set used to test the algorithm. In these experiments two aspects of the algorithm\u2019s function are examined:\n\u2013 E0: A validation exercise to ensure the dDCA is correct. \u2013 E1: The influence of variation in the number of cells. \u2013 E2: Examination of \u2018time windows\u2019 and their effects on performance.\n4.2 Testing Dataset\nFor these experiments one safe and one danger signal are used to provide the context information. As opposed to contriving artificial data, a dataset containing an outbound port scan is used. The object of using this data is that it is real-world data yet it is also relatively small, with approximately 25,000 antigens and 38 sets of danger and safe signal instances. The data is derived from a monitored remote shell session, where antigens are derived from process ID numbers and signals from monitored attributes of machine behaviour. Specifically, the danger signal is the rate of sending of outbound network packets, with the safe signal being the inverse rate of change of the packet sending rate. For more information of the necessity of these signals for port scan detection and for the mechanisms involve in port scanning please refer to [3].\nIn this dataset signals are updated once per second, with antigens generated as processes produce system calls. Both signals are normalised within a range of 0 to 50, based on maximum values derived in preliminary experiments. A graph of these signals is shown in Figure 1(a), where the mean danger signal value is 15.0 and mean safe signal value is 21.8. In terms of antigens, four processes of interest are captured by the antigen generator. These processes include two anomalous processes namely nmap the port scan process and pts a parent process of the nmap. Also included are two normal processes including sshd the remote shell facilitator process and bash the process of the actual monitored remote shell. The aim of the dDCA for these experiments is to produce high MCAV and K\u03b1 for the nmap and pts with lower values for the bash and sshd processes.\n4.3 Experimental Setup\nThe deterministic DCA has two parameter values namely the number of cells and the lifespan limit. Unless specified otherwise, all experiments described use 100 artificial DCs with a maximum lifespan limit of 100 csm signal units. The increments of the lifespans are derived from the maximum limit divided by the number of cells. This is used to ensure an equivalent range of cells are present in each experiment. The TK value used for this experiment is calculated as shown in Equation 9 , where the number of signal instances is 38 and the mean number of iterations per cell incarnation is 2.\nThe anomaly threshold for the MCAV is set to 0.69 based on the ratio of danger to safe signals within the dataset. The signal processing schema used is the one described previously in Equation 4 For the implementation, the dDCA is coded in C (gcc 4.0.1), with all experiments run on a 2.2 GHz MacBook Intel Core 2 Duo.\n\u221257.4 = \u2212\n1090\n38\n\u2217 2 (9)\n4.4 E0: Validation\nBefore the dDCA can be used for these experiments, it must first be validated against the results generated by the original DCA. For this purpose, the results presented for the original DCA are derived from data used for Chapter 6 of [3]. The results of one run of the dDCA with default parameters are compared with three runs of the original DCA, with the MCAV results generated presented in Table 1. As shown in this table, the same trends are evident in both datasets. However, less polarisation between the normal and anomalous processes is shown with the dDCA. Despite such discrepancies, as similar trends are shown, we are confident that the dDCA is valid as a form of DCA.\n4.5 E1: Cell Number Experiments\nIn this series, the number of cells used to process data are varied between runs. The set\nof cell numbers used is n = {1, 5, 10, 50, 100, 500, 1000, 5000}. Based on past sensitivity analyses of the cell numbers we expect the greatest variation between 1 and 100 cells. In addition to exploring this relationship, this experiment is used to generate statistics regarding the mean behaviour of the cell population. During these experiments, the number of antigen presented per cell per iteration, the number of iterations per lifespan and the number of cell resets are collated and mean values are calculated. Additionally, these experiments are timed to gain some insight into the scalability of the algorithm.\nBoth the MCAV and K\u03b1 values are shown for the four processes of interest for each cell number and we can use this information to assess the differences between the two output metrics. We predict that the real valued magnitude of K\u03b1 will produce more polarised results as it will provide discrimination between borderline cases and the more extreme, which of course is merely represented as 0 or 1 for the MCAV.\nThe results for the cell number experiments are shown in Figures 1(b) and 1(c). A graph of the timing results for the experiments are presented in Figure 1(d). Statistics regarding the cell behaviour information are presented in Table 2.\n4.6 E2: Time Window Experiments\nIt is assumed that the DCA performs correlation between antigen and signals based on time windows. These experiments are designed to ascertain if this is indeed the case. The nature of the time window effect created by the population of DCs is examined by shifting the position of the signals within the dataset. Each cell in the population has a lifespan, which defines the quantity of input signals the cell can process per incarnation. Having variable time windows should add robustness when the signals occur after the antigens, but we expect a reduction in DCA performance should the signals occur before the antigen.\nWhile the cells create a type of moving average for the signals, this does not extend before the cell is initialised, and therefore signals appearing before antigen may result in a poor performance. A total of 20 extra datasets are created, with a maximum shift of 20 second for the signals before and after the original position, at two second increments. As with E1, both the MCAV and K\u03b1 values are calculated for each process of interest. These results are presented in Figures 1(e) and 1(f).\n5 Experimental Analysis\n5.1 E1: Cell Numbers\nIn E0 the dDCA is validated as fit for purpose. Subsequently when the number of cells is varied in E1 a noticeable effect on the performance of the DCA is indicated as shown in Figures 1(b) and 1(c). When the MCAV is used as the anomaly metric, an increase in the number of cells causes an increase in the MCAV for both pts and bash, though sshd and nmap do not increase to the same magnitude. The same trends are evident though less noticeable when using K\u03b1 for the bash and pts processes. This may be because it is difficult to assess if these processes, the parent processes of the nmap scan process, are actually anomalous or normal given that they have involvement in facilitating the scan itself. These two processes are borderline cases, and it appears that K\u03b1 provides improved information for this type of input data.\nThe sshd process which does not assist the scan has consistently low K\u03b1 values, well below the derived threshold of -57.4. It is interesting to note that as the number\nof cells used increases, the resultant output values converge. One possible explanation for this is that the lifespan limit is set incorrectly and maybe an improvement could be made if the range of these thresholds also increase in proportion to the number of cells.\nAnother explanation is that once the number of cells exceeds a certain limit, the capacity of the system exceeds the requirements of the input data, and therefore no matter how many extra cells are added, the resultant values remain similar. This is also shown in the summary statistics of the cell behaviour presented in Table 1. The results of the timed experiments are also encouraging, giving that the relationship between the number of cells and the execution time appears to be linear.\n5.2 E2: Time Windows\nThe results of experiment E2 also show similar trends in comparison between MCAV and K\u03b1 , with the K\u03b1 values representing more precisely the classification of these processes. Therefore, K\u03b1 will be used in future for the assessment of our DCA experiments both empirical and theoretical. A marked difference is shown in particular for the nmap process between time offset -20 and zero and for the pts process also between -20 and zero.\nExamination of the pts graphs show a moderately low MCAV value, yet when K\u03b1 is used, this value looks to remain stable at a level of 0. This could indicate that the pts process exhibits minor fluctuations around this point, with these fluctuations amplified by the binary classification of cells used in the MCAV, with K\u03b1 showing to be more sensitive to encapsulating such fluctuations.\nIn terms of the time window analysis two conclusions can be drawn from these graphs. Firstly, when the signals are delayed (time offset of 0 to 20), correct classification continues for almost 10 seconds, until the anomalous processes are classified as normal as they fall below TK . Interestingly, improved results are shown with a delay of 2-4 seconds - which is equivalent to the average number of cell iterations per lifespan. Potentially the range of acceptable delay may be linked to a relationship between the number of iterations and the lifespan range itself, to which a formal analysis may be able to prove. Within the applications of the DCA in security so far, the signals are always updated after the antigens are generated, indicating one reason for why the DCA functions in the manner shown previously. These results suggest that the dDCA has the potential to be error tolerant to at least a five second lag in signal data, which is a desirable property for any behaviour based anomaly detection approach, as this reflects the situation often seen in real world intrusion data.\nThe opposite effect is shown when the signals are advanced ahead of the antigens. For the MCAV results both sets of processes, normal and anomalous, are classified incorrectly between time offset -20 and 0. A similar effect is seen for K\u03b1 for the same offset values. One explanation for this effect is that whilst cells produce a type of moving average, this is derived from information in only one direction i.e. the cells cannot incorporate information received before the start of their current incarnation. Therefore a reincarnated cell can only have knowledge of the signals which occur after its generation. While these results are interesting, a more formal analysis with contrived and controllable data must be performed in future in order to corroborate this tenet. This\nmirrors what is shown with natural DCs, as pathogenic infection (i.e. the presence of antigen) always occurs before the generation of danger signals.\n6 Conclusions\nIn this paper a deterministic version of the DCA is proposed, implemented and tested. In addition to changes in the algorithm a new metric for the system\u2019s evaluation is proposed namely K\u03b1 which takes into account the magnitude of the output values produced by the DC population. The dDCA is compared to the original DCA using a port scan dataset used previously with the DCA. We are satisfied that while that results are not identical the values show similar trends, indicating that the essence of the DCA is housed within the deterministic version. This version has several advantages, including the ability to replay experiments exactly, predictability of output and the reduction in the number of parameters required. All such factors have resulted in a version of the DCA which is simple to implement and can produce reliable, consistent results.\nOne of the remaining parameters of the dDCA is the number of cells used. As this number increases, discrimination between the processes is less obvious. While the cause of this effect still remains unclear it has given us insight into the limits of the system as it appears that there is a saturation point. For this particular dataset, this point is at 500 cells shown for both the MCAV and K\u03b1 . The metric K\u03b1 is tested for the first time in this experiment and is shown to be more sensitive to the minor fluctuations in the resulting output of the cells and provides a more precise overview of the classification of the various antigen types. To assess the implications of K\u03b1 , this metric should be applied to a wider range of problems. Finally, timing discrepancies between signals and antigen are performed. As a result it is shown that should there be a delay for the input signals, within a tolerance range the dDCA can cope well with this delay. A potential relationship between the lifespan maximum limit and the number of iterations per cell incarnation may exist, though a more formal analysis is required to verify this effect. Conversely, if the signal data is advanced, severe misclassifications can occur, hence suggesting that the dDCA should not be applied to data where there is the potential for delayed antigen as performance may be impaired.\nAs future work we intend to further explore this new instantiation of the DCA. This investigation will involve a more in-depth study of the inherent relationships present within the algorithm in addition to extensive testing both on a range of real-world and synthetic data, and in comparison with other standard techniques such as support vector machines. This has the aim of selecting such parameters appropriately no matter what the application. In conclusion, the dDCA is a comparable and controllable form of the DCA and is a powerful tool necessary to further the understanding of this interesting immune-inspired algorithm.\nAcknowledgements\nThis research is supported by the EPSRC (EP/D071976/1). Code optimisations courtesy of Gianni Tedesco.\nReferences\n1. U. Aickelin, P. Bentley, S. Cayzer, J. Kim, and J. McLeod. Danger theory: The link between\nAIS and IDS. In Proc. of the 2nd International Conference on Artificial Immune Systems (ICARIS), LNCS 2787, pages 147\u2013155. Springer-Verlag, 2003. 2. Y. Al-Hammadi, U. Aickelin, and J. Greensmith. DCA for detecting bots. In to appear in\nProc. of the Congress on Evolutionary Computation (CEC), page tba, 2008.\n3. J. Greensmith. The Dendritic Cell Algorithm. PhD thesis, School of Computer Science,\nUniversity Of Nottingham, 2007.\n4. J. Greensmith, U. Aickelin, and S. Cayzer. Introducing Dendritic Cells as a novel immune-\ninspired algorithm for anomaly detection. In Proc. of the 4th International Conference on Artificial Immune Systems (ICARIS), LNCS 3627, pages 153\u2013167. Springer-Verlag, 2005. 5. J. Greensmith, U. Aickelin, and J. Feyereisl. The DCA-SOMe comparison: A comparative\nstudy between two biologically-inspired algorithms. Evolutionary Intelligence: Special Issue on Artificial Immune Systems, accepted for publication, 2008. 6. J. Greensmith, U. Aickelin, and G. Tedesco. Information fusion for anomaly detection with\nthe DCA. Information Fusion, in print, 2008.\n7. J. Greensmith, U. Aickelin, and J. Twycross. Articulation and clarification of the Dendritic\nCell Algorithm. In Proc. of the 5th International Conference on Artificial Immune Systems (ICARIS), LNCS 4163, pages 404\u2013417, 2006. 8. J. Greensmith, J. Twycross, and U. Aickelin. Dendritic cells for anomaly detection. In Proc.\nof the Congress on Evolutionary Computation (CEC), pages 664\u2013671, 2006.\n9. N. Lay and I. Bate. Improving the reliability of real-time embedded systems using innate\nimmune techniques. Evolutionary Intelligence: Special Issue on Artificial Immune Systems, 2008. 10. M. Lutz and G. Schuler. Immature, semi-mature and fully mature dendritic cells: which\nsignals induce tolerance or immunity? Trends in Immunology, 23(9):991\u20131045, 2002.\n11. R. Oates, J. Greensmith, U. Aickelin, J. Garibaldi, and G. Kendall. The application of a\ndendritic cell algorithm to a robotic classifier. In Proc. of the 6th International Conference on Artificial Immune Systems (ICARIS), LNCS 4628, pages 204\u2013215, 2007. 12. R. Oates, G. Kendall, and J. Garibaldi and. Frequency analysis for dendritic cell population\ntuning: Decimating the dendritic cell. Evolutionary Intelligence: Special Issue on Artificial Immune Systems, 2008."}], "references": [{"title": "Danger theory: The link between AIS and IDS", "author": ["U. Aickelin", "P. Bentley", "S. Cayzer", "J. Kim", "J. McLeod"], "venue": "In Proc. of the 2nd International Conference on Artificial Immune Systems (ICARIS),", "citeRegEx": "1", "shortCiteRegEx": "1", "year": 2003}, {"title": "DCA for detecting bots", "author": ["Y. Al-Hammadi", "U. Aickelin", "J. Greensmith"], "venue": "In to appear in Proc. of the Congress on Evolutionary Computation (CEC), page tba,", "citeRegEx": "2", "shortCiteRegEx": "2", "year": 2008}, {"title": "The Dendritic Cell Algorithm", "author": ["J. Greensmith"], "venue": "PhD thesis, School of Computer Science, University Of Nottingham,", "citeRegEx": "3", "shortCiteRegEx": "3", "year": 2007}, {"title": "Introducing Dendritic Cells as a novel immuneinspired algorithm for anomaly detection", "author": ["J. Greensmith", "U. Aickelin", "S. Cayzer"], "venue": "In Proc. of the 4th International Conference on Artificial Immune Systems (ICARIS),", "citeRegEx": "4", "shortCiteRegEx": "4", "year": 2005}, {"title": "The DCA-SOMe comparison: A comparative study between two biologically-inspired algorithms", "author": ["J. Greensmith", "U. Aickelin", "J. Feyereisl"], "venue": "Evolutionary Intelligence: Special Issue on Artificial Immune Systems, accepted for publication,", "citeRegEx": "5", "shortCiteRegEx": "5", "year": 2008}, {"title": "Information fusion for anomaly detection with the DCA", "author": ["J. Greensmith", "U. Aickelin", "G. Tedesco"], "venue": "Information Fusion, in print,", "citeRegEx": "6", "shortCiteRegEx": "6", "year": 2008}, {"title": "Articulation and clarification of the Dendritic Cell Algorithm", "author": ["J. Greensmith", "U. Aickelin", "J. Twycross"], "venue": "In Proc. of the 5th International Conference on Artificial Immune Systems (ICARIS),", "citeRegEx": "7", "shortCiteRegEx": "7", "year": 2006}, {"title": "Dendritic cells for anomaly detection", "author": ["J. Greensmith", "J. Twycross", "U. Aickelin"], "venue": "In Proc. of the Congress on Evolutionary Computation (CEC),", "citeRegEx": "8", "shortCiteRegEx": "8", "year": 2006}, {"title": "Improving the reliability of real-time embedded systems using innate immune techniques", "author": ["N. Lay", "I. Bate"], "venue": "Evolutionary Intelligence: Special Issue on Artificial Immune Systems,", "citeRegEx": "9", "shortCiteRegEx": "9", "year": 2008}, {"title": "Immature, semi-mature and fully mature dendritic cells: which signals induce tolerance or immunity", "author": ["M. Lutz", "G. Schuler"], "venue": "Trends in Immunology,", "citeRegEx": "10", "shortCiteRegEx": "10", "year": 2002}, {"title": "The application of a dendritic cell algorithm to a robotic classifier", "author": ["R. Oates", "J. Greensmith", "U. Aickelin", "J. Garibaldi", "G. Kendall"], "venue": "In Proc. of the 6th International Conference on Artificial Immune Systems (ICARIS),", "citeRegEx": "11", "shortCiteRegEx": "11", "year": 2007}, {"title": "Frequency analysis for dendritic cell population tuning: Decimating the dendritic cell", "author": ["R. Oates", "G. Kendall", "J. Garibaldi"], "venue": "Evolutionary Intelligence: Special Issue on Artificial Immune Systems,", "citeRegEx": "12", "shortCiteRegEx": "12", "year": 2008}], "referenceMentions": [{"referenceID": 0, "context": "The original DCA was developed as part of the Danger Project [1], and formed the majority of Greensmith\u2019s thesis [3].", "startOffset": 61, "endOffset": 64}, {"referenceID": 2, "context": "The original DCA was developed as part of the Danger Project [1], and formed the majority of Greensmith\u2019s thesis [3].", "startOffset": 113, "endOffset": 116}, {"referenceID": 3, "context": "A prototype of the algorithm was first presented in 2005 [4] with a fully implemented real-time system version presented in 2006 [8].", "startOffset": 57, "endOffset": 60}, {"referenceID": 7, "context": "A prototype of the algorithm was first presented in 2005 [4] with a fully implemented real-time system version presented in 2006 [8].", "startOffset": 129, "endOffset": 132}, {"referenceID": 9, "context": "More information regarding the function of natural DCs can be found in [10] with a distilled version for computer scientists presented in [3].", "startOffset": 71, "endOffset": 75}, {"referenceID": 2, "context": "More information regarding the function of natural DCs can be found in [10] with a distilled version for computer scientists presented in [3].", "startOffset": 138, "endOffset": 141}, {"referenceID": 6, "context": "The original DCA is described in detail in numerous sources including [7] and [3].", "startOffset": 70, "endOffset": 73}, {"referenceID": 2, "context": "The original DCA is described in detail in numerous sources including [7] and [3].", "startOffset": 78, "endOffset": 81}, {"referenceID": 7, "context": "The algorithm to date has been successfully applied to port-scan detection [8] [6] [5], and upon comparison to a self organizing map performed well on the large dataset used, classifying 13 million antigens in under 100 seconds.", "startOffset": 75, "endOffset": 78}, {"referenceID": 5, "context": "The algorithm to date has been successfully applied to port-scan detection [8] [6] [5], and upon comparison to a self organizing map performed well on the large dataset used, classifying 13 million antigens in under 100 seconds.", "startOffset": 79, "endOffset": 82}, {"referenceID": 4, "context": "The algorithm to date has been successfully applied to port-scan detection [8] [6] [5], and upon comparison to a self organizing map performed well on the large dataset used, classifying 13 million antigens in under 100 seconds.", "startOffset": 83, "endOffset": 86}, {"referenceID": 1, "context": "In addition to her work, the DCA has also been applied to the detection of a novel threat on the internet, botnets [2], where the DCA produced high rates of true positives and low rates of false positives in comparison to a statistical technique.", "startOffset": 115, "endOffset": 118}, {"referenceID": 8, "context": "More recently in the work of Lay and Bate [9], the DCA is applied to the detection of overruns in the scheduling of processes, again with success.", "startOffset": 42, "endOffset": 45}, {"referenceID": 10, "context": "[11].", "startOffset": 0, "endOffset": 4}, {"referenceID": 11, "context": "The same researchers have now extended this research into the theoretical domain [12] through frequency tuning analysis.", "startOffset": 81, "endOffset": 85}, {"referenceID": 11, "context": "[12].", "startOffset": 0, "endOffset": 4}, {"referenceID": 11, "context": "[12].", "startOffset": 0, "endOffset": 4}, {"referenceID": 6, "context": "[7] with one randomly selected set used to test the algorithm.", "startOffset": 0, "endOffset": 3}, {"referenceID": 2, "context": "For more information of the necessity of these signals for port scan detection and for the mechanisms involve in port scanning please refer to [3].", "startOffset": 143, "endOffset": 146}, {"referenceID": 2, "context": "For this purpose, the results presented for the original DCA are derived from data used for Chapter 6 of [3].", "startOffset": 105, "endOffset": 108}], "year": 2010, "abstractText": "The Dendritic Cell Algorithm is an immune-inspired algorithm originally based on the function of natural dendritic cells. The original instantiation of the algorithm is a highly stochastic algorithm. While the performance of the algorithm is good when applied to large real-time datasets, it is difficult to analyse due to the number of random-based elements. In this paper a deterministic version of the algorithm is proposed, implemented and tested using a port scan dataset to provide a controllable system. This version consists of a controllable amount of parameters, which are experimented with in this paper. In addition the effects are examined of the use of time windows and variation on the number of cells, both which are shown to influence the algorithm. Finally a novel metric for the assessment of the algorithms output is introduced and proves to be a more sensitive metric than the metric used with the original Dendritic Cell Algorithm.", "creator": "PrimoPDF http://www.primopdf.com/"}}}