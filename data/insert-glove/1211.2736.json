{"id": "1211.2736", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "12-Nov-2012", "title": "Hybrid Systems for Knowledge Representation in Artificial Intelligence", "abstract": "cottingham There are 41-nation few k.p.s. knowledge 3,631 representation (naci KR) callup techniques available waldoks for efficiently clairton representing knowledge. kharosthi However, wissa with shadbolt the pandikar increase amphitheaters in complexity, better komac methods are kwamashu needed. dezcallar Some researchers came +11.00 up mcdill with m81 hybrid mechanisms by combining fedders two nuernberg or more glass-fronted methods. avc In an 4,795 effort th\u01a1 to geteilt construct 10-piece an vogl intelligent computer leucocephala system, lamah a primary consideration 50,100 is cifl to geels represent channer large amounts 38-nation of reticulocytes knowledge in koodo a way that thip allows localities effective use and efficiently organizing information to routiers facilitate making inartful the recommended inferences. There are armorgroup merits and demerits of bahamut combinations, basham and ne\u00e9 standardized tabish method fondriest of KR is needed. reinald In folan this paper, a-4p various houseplant hybrid bletchley schemes romey of KR rezin were explored 4-0-18-0 at length 27.9 and details presented.", "histories": [["v1", "Mon, 12 Nov 2012 19:09:08 GMT  (253kb)", "http://arxiv.org/abs/1211.2736v1", "6 pages"]], "COMMENTS": "6 pages", "reviews": [], "SUBJECTS": "cs.AI", "authors": ["rajeswari p v n", "t v prasad"], "accepted": false, "id": "1211.2736"}, "pdf": {"name": "1211.2736.pdf", "metadata": {"source": "META", "title": "Hybrid Systems for Knowledge Representation in Artificial Intelligence", "authors": ["Rajeswari P. V. N"], "emails": [], "sections": [{"heading": null, "text": "31 | P a g e\nwww.ijarai.thesai.org\ntechniques available for efficiently representing\nknowledge. However, with the increase in complexity,\nbetter methods are needed. Some researchers came up\nwith hybrid mechanisms by combining two or more\nmethods. In an effort to construct an intelligent computer\nsystem, a primary consideration is to represent large\namounts of knowledge in a way that allows effective use\nand efficiently organizing information to facilitate making\nthe recommended inferences. There are merits and\ndemerits of combinations, and standardized method of KR\nis needed. In this paper, various hybrid schemes of KR\nwere explored at length and details presented.\nKeywords- Knowledge representation; hybrid system; hybrid\nschema structure.\nI. INTRODUCTION\nAn expert (knowledge based) system is a problem solving and decision making system based on knowledge of its task and logical rules or procedures for using knowledge. Both the knowledge and the logic is obtained from the experience of a specialist in the area (Business Expert). An expert system emulates the interaction a user might have with a human expert to solve a problem. The end user provides input by selecting one or more answers from a list or by entering data. The program will ask questions until it has reached a logical conclusion."}, {"heading": "A. Knowledge Engineering", "text": "As described in [1], KR is the process of designing an expert system. It consists of three stages:\n Knowledge acquisition: The process of obtaining the knowledge from experts (by interviewing and/or\nobserving human experts, reading specific books, etc).\n Knowledge representation: Selecting the most appropriate structures to represent the knowledge (lists, sets, scripts,\ndecision trees, object-attribute value triplets, etc).\n Knowledge validation: Testing that the knowledge of ES is correct and complete."}, {"heading": "B. Types of Knowledge", "text": " Declarative: It describes what is known about a problem. This includes simple statements which are asserted to be\neither true or false.\n Procedural: Describes how a problem is solved. It contains rules, strategies, agendas and procedures.\n Heuristic: It describes a rule-of-thumb that helps to guides the reasoning process.\n Meta knowledge: Describes knowledge about knowledge for improve the efficiency of problem solving.\n Structural knowledge: It describes about knowledge structures. It contains rule sets, concept relationships and\nconcept to object relationships. [2]\n Factual Knowledge: It is verifiable through experiments and formal methods,\n Tacit knowledge: It is implicit, unconscious knowledge that can be difficult to express in words or other\nrepresentations form.\n Priori/Prior knowledge: It is independent of the experience or empirical evidence e.g. \u201ceverybody born\nbefore 1990 is older than 15 years\u201d\n Posteriori/Posterior knowledge: dependent of experience or empirical evidence, as \u201cX was born in 1990\u201d."}, {"heading": "C. The Knowledge Representation", "text": "It is an area of AI research which is aimed at representing knowledge in symbols to facilitate inference from those knowledge elements, creating new elements of knowledge, whereas knowledge (is a progression from data to information, from information to knowledge and knowledge to wisdom) and representation ( is a combination of syntax, semantics and reasoning) [3].\nThere are two basic components of KR i.e. reasoning and inference. In cognitive science it is concerned with how people store and process information and in AI the objective is to store knowledge so that programs can process it. [4]"}, {"heading": "D. Knowledge Representation Issues", "text": "The following are the issues to be considered regarding the knowledge representation\n Grain Size \u2013 Resolution Detail\n Scope\n Modularity\n Understandability\n Explicit Vs. Implicit Knowledge\n Procedural Vs. Declarative knowledge.\n32 | P a g e\nwww.ijarai.thesai.org\nII. KNOWLEDGE REPRESENTATION TECHNIQUES\nMany of the problems in AI require extensive knowledge about the world. Objects, properties, categories and relations between objects, situations, events, states and time, causes and effects are the things that AI needs to represents. KR provides the way to represent all the above defined things [5]. KR techniques are divided in to two major categories that are declarative representation and procedural representation. The declarative representation techniques are used to represents objects, facts, relations. Whereas the procedural representation are used to represent the action performed by the objects. Some of the techniques for knowledge representation are\n Bayesian Network\n Facts and Production Rules\n Semantic nets\n Conceptual Dependency\n CYC\n Frames\n Scripts\n Neural Networks Hybrid Representation\nIII. HYBRID SYSTEMS\nA hybrid KR system is an implementation of a hybrid KR formalism consisting of two or more different sub formalisms. These sub formalism should be integrated through (i) a representational theory, which explains what knowledge is to be-represented by what formalism, and (ii) a common semantics for the overall formalism, explaining in a semantic sound manner the relationship between expressions of different sub formalisms.[6] The generalized architecture for a hybrid system is given in Fig 1.\nIn general these systems consist of two different kinds of knowledge: The terminological knowledge, consisting of a set of concepts and roles defining a terminology, and the assertional knowledge, consisting of some logical formalism suited to represent general assertions."}, {"heading": "A. KRYPTON", "text": "The system consists of two modules: the Terminological Box and the Assertional Box. The terminological box, or module, is based on the KL-ONE language -a representation system based on semantic networks and frames [7]. The KRYPTON has been developed mainly from the work of KLONE. The difficulties in representing assertional knowledge using KL-ONE gives the idea of the integration of a theoremprover and a KL-ONE-like language into a hybrid system. It is basically like a \u201ctell-ask\u201d module. All interactions between a user and a KRYPTON knowledge base are mediated by TELL and ASK operations shown in Fig 2.\nThe most important feature introduced by KRYPTON is the notion of a Functional Approach to knowledge representation [8]: KRYPTON is provided with a clear, implementation independent, description of what services are provided to the user. This Knowledge Level [9] description is\npresented in the form of a formal definition of the syntax and semantics of the languages provided by the two modules along with the interaction between these two modules.\nThe set of primitives of the KRYPTON language vary from one presentation to another presentation of the language. In the complete form, the terminological box includes primitives for: Concept conjunction, value and number restriction on concepts, primitive sub-concept, concept decomposition, role differentiation, role chain, primitive subrole and role decomposition. And the assertional box provides a complete first-order logic language including the usual operators: Not, and, or, exists and for all."}, {"heading": "B. KANDOR", "text": "The basic units of KANDOR are individuals and frames. Knowledge model for KANDOR is given in Fig 3. Individuals are associated to objects in the real world and frames are associated to sets of these individuals. These units are manipulated through the standard representational structures of frames, slots, restrictions, and slot fillers common to most frame-based systems. Each slot maps individuals into sets of values, called slot fillers, Elements of these sets can be other individuals, strings, or numbers.\n33 | P a g e\nwww.ijarai.thesai.org\nFrames in KANDOR have no assertion import; they look simply as descriptions of some set of individuals. There are two types of frames: Primitive and defined. To be an instance of a primitive frame, an individual must be explicitly specified as an instance of the frame when it is created.\nTo be an instance of a defined frame an individual must satisfy the conditions associated to the frame definition. There two types of conditions: Super-frames and restrictions. A super-frame is just another frame, and a restriction is a condition on a set of slots fillers for some slot. An individual satisfies the restriction if its slots fillers for that slot satisfy the condition.\nKANDOR provides two main operations that require inferences to be made: Given an individual and a frame, determine whether the individual is an instance of the frame, arid, given two frames, it determines whether one frame is subset of another frame.\nKANDOR has been used as the knowledge representation component of ARGON [10], which is an interactive information retrieval system which is designed to be used by non experts for retrieval purpose over a large, heterogeneous knowledge bases, possibly taken from a large number of sources or repositories."}, {"heading": "C. BACK", "text": "The structure of a BACK represents as the same structure of KRYPTON, which contains an terminological box and an assertional box. One main aspect in the BACK implementation is the Balancedness of the formalisms involved. Although the fact that the reasoning in hybrid systems is frequently incomplete (because of efficiency requirements) sometimes leads to situations where one formalism allows to express something which obviously should have some impact on another formalism according to the semantics of the system, the incompleteness of the reasoning precludes this impact to be realized by the system. The formalisms of this type of systems are said to be \u201cunbalanced\u201d.\nThe main criteria taken into account in the development of the BACK system [16] are the following: (i) The sub formalisms of the system should be balanced, (ii) the\nformalism should permit tractable inference algorithms covering almost all possible inferences, (iii) the assertional box formalism should be able to represent incomplete knowledge in a limited manner, (iv) the system should allow for extending the knowledge base incrementally (retractions are not considered) and (v) the system should reject assertional box entries which are inconsistent. The terminological language of BACK is more powerful than that of KRYPTON."}, {"heading": "D. KL-TWO", "text": "The KL-TWO system is composed by two sub formalisms: PENNI, a modified version of the RUP (Reasoning Utility Package) system) and NIKL (New implementation of KLONE), a terminological reasoner in the KL-ONE [7] tradition. These two formalisms are complementary: PENNI is able to represent propositional assertions without any quantification and NIKL allows the representation of a simple class of universally quantified sentences. These sentences can be\n34 | P a g e\nwww.ijarai.thesai.org\napplied in PENNI to extend its propositional language with a limited form of quantification. Fig 4 shows the architecture of KL-TWO [12] .\nThe PENNI formalism consists of a database of propositional assertions, more specifically, a data base of ground sentences of first-order logic without quantifiers. This database permits incremental assertions and retractions. Underlying the deductive mechanism of PENNI is a Truth Maintenance System (TMS) allowing all the useful operations that have been associated with such systems.\nAnd the NIKL terminological reasoner allows the definition of composite concepts and roles through the use of structuring primitives and primitive concepts and roles. The primitives available in NIKL include: Concept conjunction, statement of the minimal number of role fillers, concept value restriction and role differentiation. The inference provided by NIKL is basically the sub assumption relation between concepts. It has been proved recently that the subsumption problem in NIKL is undecidable.\nTwo forms of hybrid reasoning are performed by the KLTWO system: The forward reasoning, which is used to classify new assertions according to the concepts already defined in the NIKL knowledge base, and the backward reasoning, used to answer queries. Both mechanisms combine the inferences mechanism of PENNI and NIKL to perform their tasks"}, {"heading": "E. CAKE", "text": "The CAKE system was developed as a knowledge representation and reasoning facility for the Programmer's Apprentice project [13] different from the previously presented hybrid systems. CAKE does not present complementary representation formalisms in which different types of knowledge are represented, but it uses its two formalisms to represent the same knowledge.\nThe two formalisms present in CAKE are: A predicate calculus package which is based on the RUP (Reasoning Utility Package) system and a specialized, semantic network like formalism which is used to represent the structure of programs. This last formalism, called Plan Diagrams or simply Plans, was developed without any special concern about formal semantics but was only designed to fit the requirements of the program representation problem.\nThe current architecture of CAKE consists of eight layers: The bottom five layers forming the predicate calculus level and the top three layers corresponding to the Plan level. The predicate calculus layers, from bottom to top, and their functions are the following: (i) Truth Maintenance, unit propositional resolution, retraction and explanation, (ii) Equality, uniqueness of terms, congruence closure, (iii) Demons, pattern directed invocation, priority queues, (iv) Algebraic, commutativity, associativity, etc, lattices, Boolean\nalgebras, (v) Types, type inheritance and functionality. The Plan layers are the following: (i) Plan Calculus, data and control flow graphs, abstract data types, (ii) Plan Recognition, flow graph parsing and recognition heuristics, (iii) Plan Synthesis, search of refinement space and synthesis heuristics."}, {"heading": "F. MANTRA [14]", "text": "Developed by J. Calmet, I. A. Tjandra and G. Bittencourt in 1991, it is combination of four different knowledge representation techniques. First order logic, terminological language, semantic networks and Production systems. All algorithm used for inference are decidable because this representation used the four value logic. Mantra is a three layers architecture model. It consist the epistemological level, the logical level, Heuristic level.\nExample [1]:- Ex of operation in logic level\n1 command::= tell (know1edge base, Fact).\n2 ask (knowledge base, Query)\n3 to-frames (frame-def)\n4 to-met (snet-den) 5 Fact: = to-logic (formu1a)\n6 Query: = from logic (formula)\nEx of operation on terminological box\nframe - def ::= identifier : c = concept | identifier:\nr = relation\nConcept::= ( concept ) | concept .\nAdvantages: 1 An intelligent, graphical user interface would help in building knowledge bases. 2 Support procedural knowledge. 3 A graph editor can be used t o visualize, for instance, hierarchies or terminologies that would help the user for representing expert\u2019s knowledge.\nDisadvantages: Less expressive, only applicable for symbolic computation (mathematical model)."}, {"heading": "G. FRORL", "text": "The acronym for FRORL is Frame-and-Rule Oriented Requirement specification Language [14] which was developed by Jeffrey J. P. Tsai, Thomas Weigert and HungChin Jang in 1992, and this FRORL is based on the concepts of frames and production rules which is mainly designed for software requirement and specification analysis. Six main steps for processing purpose are as follows:\n1) Identify subject and themes\n2) Define object frames.\n3) Define object abstract inheritance relation\n4) Define object attributes.\n5) Identify activity frames.\n6) Define actions and communication\nThere are two types of frames, i.e., Object frame and Activity frames. Object frames are used to represent the real world entity not limited to physical entity. These frames will act as a data structure. Each activity in FRORL are represented by activity frame to represent the changes in the world. Activity, precondition and action are reserved word not to be used in specification. Language for FRORL consists of Horn clause of predicate logic.\n35 | P a g e\nwww.ijarai.thesai.org\nAdvantages: 1 Modularity. 2 Incremental development. 3 Reusability. 4 Prototyping.\nDisadvantages: Only limited for building prototype model for software."}, {"heading": "H. Other Hybrid Systems", "text": "Other hybrid systems adopt a restricted version of firstorder logic in their assertional module. Examples of some latest hybrid systems are\n The LOOM system is a very ambitious project developed at USC (California, USA). It includes a tern classifier,\ninstance matcher, truth maintenance for both TBox and\nABox, default reasoning, full-first-order retrieval language, pattern-driven methods, a pattern classifier, and\nautomatic detection of inconsistency. The system can\nalso interface with a rule-based system. Its semantics uses\na three-valued semantics that is extended to seven values\nwhen defaults are included.\n The QUARK system developed at the University of Hamburg (FRG), includes a Hom clauses interpreter, and\na terminological reasoner in the KL-ONE tradition. Its\nsemantics is defined using the four-valued approach. The\nsystem is organized around nodes called Denotasional\nEntities (DE), and the set of facts associated to these DEs, called aggregates. The aggregates correspond to the frame\nentities in other systems, and are organized into a\nnetwork.\n The CLASSIC system is a direct descendent of the KANDOR system, and shares all functionalities with this\nsystem. The goal of a CLASSIC hybrid system is to extend the expressive power of KANDOR's\nterminological language while remaining tractable. Along\nwith the functionalities of the KANDOR system, it\nincludes\n(a) a construct to allow equalities between role fillers, (b) a set construct to allow one to say a slot is filled by an\nindividual of one of a set of different frames,\n(c) a test-defined construct which allows one to test\nmembership in classes by a user defined test, and\n(d) a limited form of rules which allow one to say that\nonce something is found to be an instance of one concept, then it is an instance of another concept. The system also\nallows host concepts, such as integers, strings, and all\nCommon Lisp structures.\nThe Comparison between different hybrid systems [15] is presented in Table 1.\nIV. CONCLUSION\nDifferent KR schemes are used in AI, which differ in terms of semantics, structure and flexibility in level of power of expression. Combination of two or more representation schemes, which is known as Hybrid Systems may be used for making the system more efficient and improving the knowledge representation. Different hybrid systems are discussed with their corresponding architectures and also presented a comparative data in terms of modules (Assertional, Terminology), Formal semantics and Domain of Applications."}], "references": [{"title": "Comparative Study of Three Declarative Knowledge representation Techniques", "author": ["Poonam Tanwar", "T.V. Prasad", "S. Aswal Mahendra"], "venue": "Int\u2019l Jour. on Comp. Sc. & Engg. (IJCSE),", "citeRegEx": "4", "shortCiteRegEx": "4", "year": 2010}, {"title": "Comparative Study of Three Declarative Knowledge Representation Techniques", "author": ["Poonam Tanwar", "T.V. Prasad", "S. Aswal Mahendra"], "venue": "Int. J. on Comp. Sc. and Engg,", "citeRegEx": "5", "shortCiteRegEx": "5", "year": 2010}, {"title": "Knowledge representation and inference in similarity networks and Bayesian multinets", "author": ["Dan Geiger", "David Heckerman"], "venue": "Artificial Intelligence", "citeRegEx": "6", "shortCiteRegEx": "6", "year": 1996}, {"title": "An overview of the KL-ONE Knowledge Representation System", "author": ["R.J. Brachman", "J.G. Schmolze"], "venue": "Cognitive Science, Vol. 9,", "citeRegEx": "7", "shortCiteRegEx": "7", "year": 1985}, {"title": "A Logic of Implicit and Explicit Belief.", "author": ["H.J. Levesque"], "venue": "Proceedings of AAAI", "citeRegEx": "8", "shortCiteRegEx": "8", "year": 1984}, {"title": "Small Can Be Beautiful in Knowledge Representation", "author": ["P.F. Patel-Schneider"], "venue": "Proc. of the IEEE Workshop on Principles of Knowledge-Based Systems\",", "citeRegEx": "10", "shortCiteRegEx": "10", "year": 1984}, {"title": "Knowledge Base Integration: What we can learn from Database Integration Research\u201d, A.I", "author": ["Jintae Lee"], "venue": "Memo No:1011,", "citeRegEx": "11", "shortCiteRegEx": "11", "year": 1988}, {"title": "The Restricted Language Architecture for Hybrid Representation System", "author": ["Marc Vilain"], "venue": "BBN Laboratories, Proc. of the 9th Int. Conf. on Artificial Intelligence,", "citeRegEx": "12", "shortCiteRegEx": "12", "year": 1985}, {"title": "An Overview of the Programmer's Apprentice", "author": ["C. Rich", "H.E. Shrobr", "R.C. Waters"], "venue": "Proc. of IJCAI", "citeRegEx": "13", "shortCiteRegEx": "13", "year": 1979}, {"title": "An Effective Knowledge base system Architecture and issues in representation techniques", "author": ["Tanwar Poonam", "Prasad T.V", "Datta Kamlesh"], "venue": "Int. Jour. of Advancements in Technology,", "citeRegEx": "14", "shortCiteRegEx": "14", "year": 2011}], "referenceMentions": [{"referenceID": 0, "context": "[4]", "startOffset": 0, "endOffset": 3}, {"referenceID": 1, "context": "KR provides the way to represent all the above defined things [5].", "startOffset": 62, "endOffset": 65}, {"referenceID": 2, "context": "[6] The generalized architecture for a hybrid system is given in Fig 1.", "startOffset": 0, "endOffset": 3}, {"referenceID": 3, "context": "The terminological box, or module, is based on the KL-ONE language -a representation system based on semantic networks and frames [7].", "startOffset": 130, "endOffset": 133}, {"referenceID": 4, "context": "The most important feature introduced by KRYPTON is the notion of a Functional Approach to knowledge representation [8]: KRYPTON is provided with a clear, implementation independent, description of what services are provided to the user.", "startOffset": 116, "endOffset": 119}, {"referenceID": 5, "context": "KANDOR has been used as the knowledge representation component of ARGON [10], which is an interactive information retrieval system which is designed to be used by non experts for retrieval purpose over a large, heterogeneous knowledge bases, possibly taken from a large number of sources or repositories.", "startOffset": 72, "endOffset": 76}, {"referenceID": 6, "context": "Fig 3 Knowledge model of KANDOR [11]", "startOffset": 32, "endOffset": 36}, {"referenceID": 3, "context": "The KL-TWO system is composed by two sub formalisms: PENNI, a modified version of the RUP (Reasoning Utility Package) system) and NIKL (New implementation of KLONE), a terminological reasoner in the KL-ONE [7] tradition.", "startOffset": 206, "endOffset": 209}, {"referenceID": 7, "context": "Fig 4 shows the architecture of KL-TWO [12] .", "startOffset": 39, "endOffset": 43}, {"referenceID": 8, "context": "The CAKE system was developed as a knowledge representation and reasoning facility for the Programmer's Apprentice project [13] different from the previously presented hybrid systems.", "startOffset": 123, "endOffset": 127}, {"referenceID": 9, "context": "MANTRA [14]", "startOffset": 7, "endOffset": 11}, {"referenceID": 9, "context": "The acronym for FRORL is Frame-and-Rule Oriented Requirement specification Language [14] which was developed by Jeffrey J.", "startOffset": 84, "endOffset": 88}], "year": 2012, "abstractText": "There are few knowledge representation (KR) techniques available for efficiently representing knowledge. However, with the increase in complexity, better methods are needed. Some researchers came up with hybrid mechanisms by combining two or more methods. In an effort to construct an intelligent computer system, a primary consideration is to represent large amounts of knowledge in a way that allows effective use and efficiently organizing information to facilitate making the recommended inferences. There are merits and demerits of combinations, and standardized method of KR is needed. In this paper, various hybrid schemes of KR were explored at length and details presented. KeywordsKnowledge representation; hybrid system; hybrid schema structure.", "creator": "Microsoft\u00ae Office Word 2007"}}}