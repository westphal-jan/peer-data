{"id": "1301.6711", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "23-Jan-2013", "title": "Bayesian Poker", "abstract": "chronic Poker corigliano is ideal for testing meriton automated content-control reasoning under roamers uncertainty. It impertinent introduces uncertainty both 334-6552 by physical randomization 2-44 and kabal by gabriele incomplete information 65-million about opponents putschist hands. Another bolyard source investhk OF unusally uncertainty moondoggie IS the limited information aureolus available TO construct psychological servi\u00e7os models OF timbal opponents, tarkan their starostin tendencies TO saint-julien bluff, play conservatively, dinagat reveal weakness, etc. 14,400 AND the xiaosong relation BETWEEN namtha their hand stroboscopic strengths wiencke AND moninder betting behaviour. ALL burney OF these f-35 uncertainties vestby must crighton be ffh assessed ghouse accurately AND stagliano combined effectively bathyscaphe FOR ANY overshadow reasonable bresciano LEVEL 13,467 OF platino skill IN runing the game gobrecht TO a\u00edda be hunt achieved, sigourney since obermayer good decision bhikkhus making IS h\u00f8dd highly vfl sensitive mudge TO tdh those tasks. filings We describe our greville Bayesian Poker lucasarts Program (503.5 BPP ), jannatabad which furuhashi uses a daska Bayesian transcendently network TO holthuis model bosphorous the programs sturdevant poker hand, the opponents hand leonidovich AND greenlights the arivaca opponents playing behaviour conditioned upon the thinis hand, loftily and 34.66 betting curves klock which unama govern play darras given a probability of bailii winning. The history of enjoy play mission-based with maunoury opponents missale is schrunk used to a.f.c improve oldsmar BPPs goolwa understanding OF ceda their albireo behaviour. leamy We nachagyn compare bolshevik BPP abashiri experimentally i-84 WITH: a simple teals RULE - based fulsome system; khushboo a kalkar program brutality which depends sonore exclusively ON hand 12-cylinder probabilities (reconfirm i. cordani e. , without opponent elahi modeling ); AND WITH human players. recieved BPP has shown gilan itself TO casaubon be 2-7-2 an eastpoint effective dingdong player against 11-meter ALL these noticeably opponents, barring dichroism the better floorspace humans. butty We schelter also secretaries sketch roty out SOME epigraphic likely ways OF baard improving nr2b play.", "histories": [["v1", "Wed, 23 Jan 2013 15:59:06 GMT  (307kb)", "http://arxiv.org/abs/1301.6711v1", "Appears in Proceedings of the Fifteenth Conference on Uncertainty in Artificial Intelligence (UAI1999)"]], "COMMENTS": "Appears in Proceedings of the Fifteenth Conference on Uncertainty in Artificial Intelligence (UAI1999)", "reviews": [], "SUBJECTS": "cs.AI cs.GT", "authors": ["kevin b korb", "ann nicholson", "nathalie jitnah"], "accepted": false, "id": "1301.6711"}, "pdf": {"name": "1301.6711.pdf", "metadata": {"source": "CRF", "title": null, "authors": ["Nathalie Jitnah"], "emails": ["}@csse.monash.edu.au"], "sections": [{"heading": null, "text": "Poker is ideal for testing automated reason ing under uncertainty. It introduces un certainty both by physical randomization and by incomplete information about op ponents' hands. Another source of uncer tainty is the limited information available to construct psychological models of opponents, their tendencies to bluff, play conservatively, reveal weakness, etc. and the relation be tween their hand strengths and betting be haviour. All of these uncertainties must be assessed accurately and combined effectively for any reasonable level of skill in the game to be achieved, since good decision making is highly sensitive to those tasks. We de scribe our Bayesian Poker Program (BPP) , which uses a Bayesian network to model the program's poker hand, the opponent's hand and the opponent's playing behaviour con ditioned upon the hand, and betting curves which govern play given a probability of win ning. The history of play with opponents is used to improve BPP's understanding of their behaviour. We compare BPP experimentally with: a simple rule-based system; a program which depends exclusively on hand probabil ities (i.e., without opponent modeling); and with human players. BPP has shown itself to be an effective player against all these opponents, barring the better humans. We also sketch out some likely ways of improv ing play.\n1 INTRODUCTION\nPoker is an ideal vehicle for testing automated reason ing under uncertainty. Poker is a game intermediate\nbetween chess and chance: there are important oppor tunities for the exercise of strategic planning, tactical skills and the astute observation and learning of the abilities and tendencies of opponents; and there are im portant elements of uncertainty, making all of learning, planning and execution difficult. ljncertainty enters through the direct introduction of physical random ness by shuffling; it also enters into the game through the player's incomplete knowledge of the state of op ponents' hands. In addition, poker is famously a game of psychology - effective modeling of one's opponents and effective bluffing are critical for success. Finally, poker is a game all about betting, and betting be haviour is the foundation and origin of our most pow erful formalization for coping with uncertainty, namely probability theory, as well as our most powerful philo sophical theory of uncertainty, namely Bayesianism (Ramsey, 1931). Considering all of these factors, it is somewhat surprising, ten years after Judea Pearl's seminal presentation of effective computational mod els of probabilistic reasoning (Pearl, 1988) that poker is only now beginning to be studied as an application domain. Here we present one such implementation of five-card stud poker using Bayesian networks, begun with (Jitnah, 1993) and brought to a competitive level of play recently.\nThere has been some prior work on automated poker play. Findler ( 1977) used a combination of a proba bilistic assessment of hand strength with the collection of frequency data for opponent behaviour to support the refinement of the models of opponent. The fre quency data were collected separately for each oppo nent and each round of play ( in his \"Bayes 4\" model).\nKoller and Pfeffer (1997) present a framework, based on an augmented game tree, for generating and solving imperfect information games such as poker. Although their algorithm finds optimal randomized strategies in time polynomial with respect to the game tree, the size of the game tree for full poker is still prohibitive. They suggest abstracting the problem by partition ing the game tree into clusters. Our representation is\n344 Korb, Nicholson, and Jitnah\na Bayesian network model, rather than a game tree, however we reduce the problem size using abstraction by using hand types.\nMost recently, Billings et al. (1998) have investigated the automation of the poker game Texas Hold'em. They combine probability tables for current hand strength, the probability of a hand improving dur ing play, frequency data for opponent behaviour, and playing heuristics. Their work models opponents in a weighting scheme relating hand strength to betting behaviour. Our work similarly uses frequency data to learn by updating the conditional probability of bet ting behaviour given the state of the opponent's hand, and it also models opponents, but does so more ex plicitly as a subnet in a Bayesian network. Hold' em is an interesting poker variation, but has the drawback that all known (up) cards are shared by all the play ers. This means that the potential of any hand is (in some sense) assessed against an average hand, since nothing is known explicitly about opponents' hands, except what has been revealed by the opponents' be haviour. Stud poker, which we have chosen to study, reveals partial information about each hand during play, requiring that information to be combined with observation of behaviour to assess the potential of an opponent's hand.\nIn Section 2, we describe five-card stud poker and how a probability of winning is optimally used to select an action given the current size of the pot. In Section 3 we describe a simple Bayesian network which compactly represents two-person poker and provides an estimate of the probability of winning after each card is dealt. In Section 4 we discuss the betting (playing) curves, functions for probabilistically converting pot odds and a winning probability into an action, and our proce dure for optimizing them. We also discuss bluffing as a method for further camouflaging hand strength strategically. Then in Section 5 we describe the exper iments we have conducted to test the effectiveness of our program. Finally, we discuss some likely ways of improving the program (Section 6).\n2 FIVE-CARD STUD POKER\n2.1 THE GAME\nIn five-card stud poker, after an ante (an initial fixed size bet), players are dealt a sequence of five cards, the first down (hidden) and the remainder up (available for scrutiny by other players). Players bet after each up card is dealt, in a clockwise fashion, beginning with the best hand showing. The first player(s) may PASS make no bet, waiting for someone else to open betting. Bets may be CALLED (matched) or RAISED, with up to three raises per round. Alternatively, a player facing a bet may FOLD her or his hand, i.e., drop out for\nthis hand. After the final betting round, among the remaining players the one with the strongest hand wins in a \"showdown\". The strength of poker hand types is strictly determined by the probability of the hand type appearing in a random selection of five cards (see Table 1). Two hands of the same type are ranked according to the value of the cards (without regard for suits); for example, a pair of Aces beats a pair of Kings.\nA basic decision facing any poker player, given that a bet is on the table, is whether to call or fold one's hand (ignoring the possibility of raising protem). Assuming probability p of winning the pot if the hand is played to a showdown, n - 1 opponents remain in the game and an expected cost k of reaching the showdown, then the threshold probability of winning required to make the decision to call a bet can be worked out from the pot odds. Letting f be the size of the final pot and c the current size of the pot, then, following Zadeh (1974):1\npot oddsz ==\n==\nk f-k k c + (n- 1)k\n(1)\n(2)\nThis assumes that the final size of the pot minus the current player's future contribution will be the current size of the pot plus equal contributions by all other players. The calling threshold B z identifies the proba bility of winning at which the expected values of call ing a bet versus folding are equal. By the standard relation between probability and odds, Bz is then:\nBz pot odds\n1 +pot odds (3)\n1 One approximation here is that this ignores any play ers who contribute to the pot in the future but fail to stay to the showdown. In two-player games, that case does not arise. Billings et al. (1998), incidentally, give (1) incor rectly as pot odds = kj f (in our notation; see p. 496).\n= k\nc+nk (4)\nZadeh's formula (2) for pot odds is not quite right, however, because the cost k of reaching the showdown is not the same for all players. Since the contemplated scenario is matching someone else's bet, it will clearly cost the decision maker one more bet to reach the showdown than at least one opponent. As a better ap proximation, we can assume that the current player is in the middle of the table - i.e., midway between the first bettor and the last person called upon to match that bet. In that case, (2) should be replaced by:\nk pot odds =\nc+ (n -1)k- (n;1) u ( 5)\nwhere u is the size of the betting unit. Given u = 1 and the restriction to a single opponent ( n = 2), which currently applies to BPP, the denominator becomes c + k - 1/2. However, this formula reflects a false uncertainty as to BPP's position at the table: since the basic decision we are considering is whether to call, and not to bet, the correct formula is:\npot odds k\nc+k-1 (6)\nSo, finally, by (3)\n(} = k c + 2k -1\n(7)\nIf we can compute an accurate probability of winning, then by comparison with (} we can make reasonable decisions about whether to call or fold. By extension - considering the degree to which our estimated win ning probability exceeds that threshold when it does - we can make reasonable decisions about bets and raises as well. (Adjustments for randomization and bluffing are discussed below.) The main problem is to assess winning chances accurately. This clearly is not simply a matter of the probability that the hand you have now, if dealt out to the full five cards, will end up stronger than your opponent's hand as far as you can see it (i.e., its upcards), if it is also dealt out. For testing purposes, however, we do use just such a pro gram as an opponent to BPP: at each decision point it simulates enough hand completions to have an excel lent estimate of the probability of winning, going by the current known cards alone, and it uses this prob ability alone for decision making. 2\nSuch a pure combinatorial probability is clearly of in terest, but it ignores a great deal of information that good poker players rely upon. It ignores the \"tells\" that some poker players have: facial tics, pupil di lation, fidgeting, etc., revealing abnormally strong or\n2This program is due to Jon Oliver.\nBayesian Poker 345\nweak hands; it also ignores current opponent betting behaviour and the past association between betting behaviour and hand strength. Without a robot's sen sory apparatus, our program is in no position to deal with tells, but it does account for current betting be haviour and learns from the past relationship between opponents' behaviour throughout the game and their hand strength at showdown. The learning can be par ticular to a specific opponent or it can combine infor mation across opponents.\n3 A BAYESIAN NETWORK FOR POKER\n3.1 NETWORK STRUCTURE\nBPP uses a simple Bayesian network structure (Fig ure 1) for modeling the relationships between current hand type, final hand type and the behaviour of the opponent. We maintain such a network structure for each of the four rounds of play (the betting rounds after two, three, four and five cards have been dealt). The number of cards involved in the current and ob served hand types, and the conditional probability ma trices for them, vary for each round: in effect, then, we use four distinct Bayesian networks to govern play.\nThe node OPP Final represents the opponent's final hand type, while BPP Final represents BPP's final hand type; that is, these represent the hand types they will have after all five cards are dealt. Whether or not BPP will win is the value of the Boolean variable BPP Win; this will depend on the final hand types, deterministically when the hand types are different, and probabilistically when the hand types are equal. BBP's final hand is an observed variable after the final card is dealt, whereas its opponent's final hand type\n346 Korb, Nicholson, and Jitnah\nis observed only after play ends in a showdown. At any given stage in the game, BPP's current hand type is represented by the node BPP Current (an observed variable), while OPP Current represents its opponent's current hand type. Since BPP cannot observe its op ponent's current hand type, this must be inferred from the information available: the opponent's upcard hand type, represented by node OPP Upcards, and the oppo nent's actions, represented by node OPP Action. Note that until the final round BPP Current, OPP Current and OPP Upcards represent partial hand types (e.g., three cards to a flush).\nIn order to keep the network structure a simple poly tree, we have made certain assumptions. In particular, the current network structure assumes that the final hand types are independent and that the opponent's action depends only on its current hand; we discuss the relaxation of these assumptions in Section 6.\n3.2 HAND TYPES\nThe nodes representing hand types were initially given values which divided hands into the nine categories of final hand reported in Table 1 (Jitnah, 1993). This produced a level of play comparable to a weak ama teur. Since any busted hand, for example, is treated as equal to any other, BPP would bet inappropriately strongly on middling busted hands and inappropri ately weakly on Ace-high busted hands. The lack of refinement of paired hands also hurt its performance. In principle we could provide a different hand type to each poker hand that has a distinct value, since there are only finitely many of them. That finite num ber, however, is fairly large from the point of view of Bayesian net propagation; for example, there are al ready 156 differently valued Full Houses. We opted for a modest additional refinement, moving from 9 hand types to 17 types, subdividing the busted hands into busted-low (9 high or lower), busted-medium (10 or J high), busted-queen, busted-king and busted-ace; we subdivided pairs likewise. This appears to be sufficient to achieve quite good results in five-card stud amateur play. If we were to move to games involving more dealt cards (e.g., seven-card stud) or games with wild cards, we would need to further refine the higher categories of hand, as they would appear more often.\n3.3 CONDITIONAL PROBABILITY MATRICES\nThere are four action matrices MA/C corresponding to the four rounds of betting. These report the con ditional probabilities per round of passing or calling versus betting or raising, given the opponent's current hand type. BPP adjusts these matrices over time, us ing the relative frequencies of these behaviours. Since the rules of poker do not allow the observation of hid-\nden cards unless the hand is held to showdown, these counts are made only for such hands. This is likely to introduce some selection bias into the estimates of con ditional probabilities, but we have not yet attempted to determine the nature of the bias.\nThe four matrices Mu1c give the conditional probabil ities of having a given hand showing on the table when the opponent's hand (including the hidden card) is of a certain type. The four matrices Mc/F (used for both OPP Current and BPP Current) give the conditional probability for each type of partial hand given that the final hand will be of a particular kind. These matri ces were estimated by dealing out 10,000,000 hands of poker.\n3.4 BELIEF UPDATING\nBelief updating is done by standard Bayesian net prop agation rules (Pearl, 1988). Given evidence for BPP Current, OPP Upcards and OPP Action, belief updat ing produces belief vectors for both players final hand types and, most importantly, a posterior probability of BPP winning the game.\n4 RANDOMIZATION\n4.1 BETTING CURVES\nAs described above, the calling threshold 8 identifies the probability of winning at which the expected val ues of calling a bet versus folding are equal. Proba bilities substantially higher than e should in general lead to bets and raises; probabilities much lower to passes and folds. However, if a player invariably bets strongly given a strong hand and weakly given a weak hand, other players will quickly learn of this associa tion; this will allow them to better assess their chances of winning and so to maximize their profit at the ex pense of the more predictable player. Therefore, we use betting curves, such as that of Figures 2, to ran domize the actions of BPP in a way dependent upon the probability of winning. The horizontal axis shows the difference between that probability and 8; the ver tical axis is the (unnormalized) probability of a given action: fold, call or bet (raise). The normalized prob abilities are used to stochastically select an action in any situation.\nThe playing curves are generated by the following ex ponential functions (where dis the winning probability minus 8 and f is a parameter adjustable for each round of play):\nbet/raise prob = 1 + e-\ufffd(d-/o) (8)\n1 fold prob = 1 + eB(d+fJ) (9)\ne-20(d+/.)2 call prob =\n2 (10)\nIdeal f parameters will select the optimal horizontal displacement of each curve relative to d and thereby the optimal balance between conservative and ag gressive play. For example, if the folding curve is shifted to the right relative to the calling curve, more conservative play will result, with even moderately strong hands perhaps being dropped. Or if the bet ting/raising curve is shifted to the left, more aggressive play will result.\nIn order to find good f parameters, we employed a stochastic search of the parameter space when run ning BPP against the rule-based opponent. Since the space being searched is 12 dimensional (three types of curves, four each for the rounds of play) and the score function is highly noisy (wins flosses in actual poker play), it is not clear that the search for optimal ity was successful. Nevertheless, the curves produced by our stochastic search appear to provide a reason able answer to such questions as how much greater the probability of winning must be over the threshold for active bets and raises to be rewarded. Their use also provides good camouflage for playing behaviour by their introduction of random play.\nOne apparent anomaly is that the point at which the probability of folding equals the probability of calling should occur when the probability of winning is equal to () (i.e., at 0 on the horizontal axis of Figure 2).\nWe believe the explanation is that our estimate of the pot odds (being dependent upon an estimate of the expected cost to a showdown) is inexact. If so, then when we optimize the playing curves, the optimization process will compensate for the estimation error by displacing the playing curves. Since the calling curve is displaced to the left, this suggests that () is being overestimated.\n4.2 BLUFFING\nBluffing is the intentional misrepresentation of the strength of one's hand. You may over-represent the strength of your hand (what is commonly thought of as bluffing), in order to chase opponents with stronger hands out of the round. You may equally well under represent the strength of your hand (\"sandbagging\"), in order to retain players with weaker hands and re lieve them of spare cash. These are tactical purposes behind almost all (human) instances of bluffing.\nOn the other hand, there is an important strategic purpose to bluffing, as von Neumann and Morgenstern (1953) pointed out, namely \"to create uncertainty in (the] opponent's mind\" (pp. 188-9). In BPP this pur pose is already partially fulfilled by the randomiza tion introduced with the betting curves. However, that randomization occurs primarily at the margins of decision making, when one is maximally uncertain whether, say, calling or raising is optimal over the long run of similar situations. Bluffing is not restricted to\n348 Korb, Nicholson, and Jitnah\nsituations where the optimal normal action is uncer tain; the need is to disguise from the opponent what the situation is, whether or not the optimal response is known to the player. Hence, bluffing is desirable for BPP as an action in addition to the use of randomizing playing curves. Since BPP's randomized play already results in some apparent bluffing, the probability with which BPP ought to bluff outright should be some what lower than otherwise. BPP currently bluffs (by over-representation) in the last round of betting with a low probability (5%).\n5 EXPERIMENTATION\n5.1 OPPONENTS\nA Simple Probabilistic Opponent\nThe probabilistic player, as mentioned in \u00a7 2.2, es timates its winning probability for its current hand by taking a large sample of possible continuations of its own hand and its opponent's hand. Since our experimental intention was to compare the effective ness of using this combinatorial probability versus the Bayesian net probability that incorporates the oppo nent's behaviour, once the combinatorial player com puted its probability we used the same algorithm to complete its play as does BPP - i.e., the probabilis tic opponent used the pot odds in the same way as BPP to determine its betting behaviour.\nA Rule-Based Opponent\nThe rule-based system which we used as another op ponent for BPP is described in Figure 4. These rules incorporate plausible maxims for play, for example, that you should generally fold your hand if it is al ready beaten by what's showing of your opponent's hand (i.e., its upcards).\nHuman Opponents\nPeople who had experience playing poker were invited to try themselves against BPP.\n5.2 RESULTS\nThe cumulative performance of BPP against the three different varieties of opponent we have tested against is shown in Figure 3. BPP is clearly outperforming the two automated opponents (\"prob\" and \"rules\"), with the discrepancy in their results suggesting that the rule-based system is superior overall to the probabilis tic player (although we have not yet run them against each other to verify that). The \"humans\" recorded in Figure 3 shows the combined record of various people\nwho took up an invitation to play BPP via telnet. 3 The evident variation in the human record is likely due to their different playing abilities. Given more play against the different individuals we would expect consistent trends to emerge. The \"experienced\" player is someone who has frequently and successfully played amateur poker; this player ended up with a net gain (loss to BPP) of only 63 betting units after about 450 games.\nSignificance Results\nIn order to confirm our impressions of relative per formance from Figure 3 we conducted two-tailed sig nificance tests of the null hypothesis that BPP's true expected winnings are zero against each opponent. BPP's performance was significantly different from zero against both the probabilistic opponent ( t :: 15.8;p ::; 0.01) and the rule-based opponent (t = 7.84;p :s; 0.01). Its performance against both sets of humans was not significantly different from zero.\nLearning\nDuring these tests the conditional probability matrices MAIO were learned individually per opponent, start ing from a default assumption that aggressive play (betting, raising) was as likely as conservative play (passing, calling). The results of Figure 3 do not appear to show any large learning effect: other than the human performances, which do not reflect a sin gle level of play, the slopes of BPP's cumulative win ning record do not appear to change substantially after the first 200 games. However, since each showdown contributed equally to the updates of the matrices,\n3The automated opponents were run considerably longer than shown in Figure 3, but without any interest ingly different results.\nBayesian Poker 349\nthe most learning should occur in the early stages of play with an opponent. In order to check whether learning was occurring, we performed a difference of means significance test for each opponent comparing early performance (the first 200 games) with late per formance (the last 200 games). BPP's performance against the probabilistic opponent was significantly different ( t = 3.25; p ::; 0.01), but showed no signifi cant improvement against any of the other players.\n6 FUTURE WORK\n6.1 IMPROVEMENTS\nDuring the work on this project we have noted a va riety of methods of improving the Bayesian network and/ or its use in poker. We list some of the more promising ideas here.\nRefine action nodes. Currently BPP merges the actions CALL and PASS, and again BET and RAISE. This is possible because the paired playing situations are mutually exclusive. However, it is unlikely that given the same winning probability and pot odds each dual is as good a choice as the other. Therefore, they should be separated and given independent playing curves.\nFurther refinement of hand types. It's clear that the hand types need further refinement to reach any thing like expert play. It is not clear how far to go.\nImprove network structure. A link should be added from BPP Final to OPP Final (or vice versa). This will allow knowledge of the cards of one hand (observed or inferred) to be employed in determining the unknown cards of the other. The program should\nalso take advantage of the difference between BPP's upcards and its full hand. This could involve adding a node for BPP parallel to OPP Upcards. The point is that when one's strong cards are showing on the table, there is no reason to bet coyly; on the contrary, it is ad vantageous to make opponents pay for the opportunity of seeing any future cards by betting aggressively. On the other hand, when one's strongest card is hidden, aggressive betting can drive opponents out of the game prematurely. However, it's not clear how to develop the Bayesian network to allow for this. A simpler and more direct approach would be to divide the playing curves, which govern aggressive vs. conservative bet ting behaviour, so that one set applies when the hand type is already fixed by one's upcards (i.e., the strong cards are showing) and the other when the hand type is hidden. By optimizing these separately, the optimal behaviour described above should be discovered.\nAdd bluffing to the opponent model. Just as for BPP, the conservativeness or aggressiveness of an op ponent's play, which is learned and captured by recal ibrating the matrices relating OPP Current and OPP Action, does not fully describe the bluffing behaviour of the opponent. A plausible extension would be to add an opponent bluffing node which is a parent of OPP Action and a child of OPP Current and BPP Current (since the latter gives rise to BPP's upcards and behaviour, even though they are not explicitly rep resented).\nImproved Learning of Opponent Model. We did not get much of a learning effect. We believe this is largely due to weaknesses in the representa tional power of the opponent model, limiting the con sequences of learning. By refining the action nodes and adding modeling of bluffing, we would expect learn-\n350 Korb, Nicholson, and Jitnah\ning applied to the conditional probability matrices re lating the nodes of the opponent model to be more effective. Another structural change important for improved learning and play would be to make OPP Action a child node of a new BPP Upcards node, so that what the opponent observes of BPP's hand would jointly condition his or her behaviour.\n6.2 MORE CHALLENGING POKER\nIn the future we would like to make the poker-playing environment more challenging, in particular introduc ing multi-opponent games and allowing table stakes games. In multiple opponent games it will be more im portant to incorporate the interrelations between what is known of different player's hands and the node rep resenting their final hands. In table stakes any player may bet or raise as much money as is jointly available at the time to that player and any remaining oppo nent. This makes the precise computation of winning probabilities rather more critical. Especially, it will be necessary to have more refined hand matrices, since uncertainty between a pair of threes and a pair of fours can suddenly become fatal. Thus, table stakes poker provides a much more severe test environment than fixed-size betting.\n6.3 A DYNAMIC BAYESIAN NETWORK\nIn addition to the improvements described in \u00a7 6.1, we anticipate using a dynamic Bayesian network (DBN) to model more effectively the interrelation between rounds of play. Currently, we use a succession of four distinct Bayesian networks, one per round. In a DBN model for poker, each round would correspond to a single time which would contain the nodes BPP Cur rent, OPP Current, OPPUpcards and OPP Action. The probability of winning would then depend on the current hand types for the final time slice (which cor respond to the final hand types in the current BN).\n7 CONCLUSION\nPoker is the quintessential game combining physical probabilities (the randomness introduced by shuffling) with epistemic probabilities (the unknown values of hidden cards) with the uncertainties of assessing the opponent's psychology (propensity to bluff, strategic intentions). It appears to be an ideal domain for in vestigating the application of Bayesian networks. The game is too complex to model precisely with Bayesian networks, at least with the technology available to us; however, we have developed a simple and prac tical Bayesian network and have demonstrated its ef fectiveness against two reasonable computational al ternatives as well as against non-expert amateur play. We expect to be able to improve the standard of play\nof the Bayesian player substantially towards the level achieved by human experts using the techniques out lined above.\nInvitation\nAnyone wishing to test our poker program may telnet to indy13.cs.monash.edu.au and login as \"poker\" with the password \"maverick\".\nAcknowledgements\nWe acknowledge the assistance of Jon Oliver, Tam Lien, Aidan Doyle, Jamie Scuglia and Scott Thomp son.\nReferences\nBillings, D., Papp, D., Schaeffer, J. and Szafron, D. (1998). Opponent modeling in poker. In Proc 15th National Con/ on AI (AAAI-98}, 493-499. Findler, N. (1977). Studies in machine cognition us ing the game of poker. CACM, 20, 230-245. Jitnah, N. (1993). An expert system that uses Bayesian reasoning to play poker. Honours The sis, Department of Computer Science, Monash University. Koller, D. and Pfeffer, A. (1997). Representations and solutions for game-theoretic problems. Arti ficial Intelligence, g4, 167-215. Pearl, J. (1988). Probabilistic reasoning in intelligent systems. Morgan Kaufmann. Ramsey, F.P. (1931). Foundations of mathematics and other logical essays, ed. by R.B. Braithwaite. New York: Humanities Press. von Neumann, J. and Morgenstern, 0. (1953). The ory of games and economic behavior. Princeton. Zadeh, N. (1974). Winning poker systems. Melvin Powers Wilshire Book Company."}], "references": [{"title": "Opponent modeling in poker", "author": ["D. Billings", "D. Papp", "J. Schaeffer", "D. Szafron"], "venue": "Proc 15th National Con/ on AI (AAAI-98}, 493-499.", "citeRegEx": "Billings et al\\.,? 1998", "shortCiteRegEx": "Billings et al\\.", "year": 1998}, {"title": "Studies in machine cognition us\u00ad ing the game of poker", "author": ["N. Findler"], "venue": "CACM, 20, 230-245.", "citeRegEx": "Findler,? 1977", "shortCiteRegEx": "Findler", "year": 1977}, {"title": "An expert system that uses Bayesian reasoning to play poker", "author": ["N. Jitnah"], "venue": "Honours The\u00ad sis, Department of Computer Science, Monash University.", "citeRegEx": "Jitnah,? 1993", "shortCiteRegEx": "Jitnah", "year": 1993}, {"title": "Representations and solutions for game-theoretic problems", "author": ["D. Koller", "A. Pfeffer"], "venue": "Arti\u00ad ficial Intelligence, g4, 167-215.", "citeRegEx": "Koller and Pfeffer,? 1997", "shortCiteRegEx": "Koller and Pfeffer", "year": 1997}, {"title": "Probabilistic reasoning in intelligent systems", "author": ["J. Pearl"], "venue": "Morgan Kaufmann.", "citeRegEx": "Pearl,? 1988", "shortCiteRegEx": "Pearl", "year": 1988}, {"title": "Foundations of mathematics and other logical essays, ed", "author": ["F.P. Ramsey"], "venue": "by R.B. Braithwaite. New York: Humanities Press.", "citeRegEx": "Ramsey,? 1931", "shortCiteRegEx": "Ramsey", "year": 1931}, {"title": "The\u00ad ory of games and economic behavior. Princeton", "author": ["J. von Neumann", "Morgenstern"], "venue": null, "citeRegEx": "Neumann et al\\.,? \\Q1953\\E", "shortCiteRegEx": "Neumann et al\\.", "year": 1953}, {"title": "Winning poker systems", "author": ["N. Zadeh"], "venue": "Melvin Powers Wilshire Book Company.", "citeRegEx": "Zadeh,? 1974", "shortCiteRegEx": "Zadeh", "year": 1974}], "referenceMentions": [{"referenceID": 5, "context": "Finally, poker is a game all about betting, and betting be\u00ad haviour is the foundation and origin of our most pow\u00ad erful formalization for coping with uncertainty, namely probability theory, as well as our most powerful philo\u00ad sophical theory of uncertainty, namely Bayesianism (Ramsey, 1931).", "startOffset": 277, "endOffset": 291}, {"referenceID": 4, "context": "Considering all of these factors, it is somewhat surprising, ten years after Judea Pearl's seminal presentation of effective computational mod\u00ad els of probabilistic reasoning (Pearl, 1988) that poker is only now beginning to be studied as an application domain.", "startOffset": 175, "endOffset": 188}, {"referenceID": 2, "context": "Here we present one such implementation of five-card stud poker using Bayesian networks, begun with (Jitnah, 1993) and brought to a competitive level of play recently.", "startOffset": 100, "endOffset": 114}, {"referenceID": 0, "context": "Most recently, Billings et al. (1998) have investigated the automation of the poker game Texas Hold'em.", "startOffset": 15, "endOffset": 38}, {"referenceID": 7, "context": "Letting f be the size of the final pot and c the current size of the pot, then, following Zadeh (1974):1", "startOffset": 90, "endOffset": 103}, {"referenceID": 0, "context": "Billings et al. (1998), incidentally, give (1) incor\u00ad rectly as pot odds = kj f (in our notation; see p.", "startOffset": 0, "endOffset": 23}, {"referenceID": 2, "context": "The nodes representing hand types were initially given values which divided hands into the nine categories of final hand reported in Table 1 (Jitnah, 1993).", "startOffset": 141, "endOffset": 155}, {"referenceID": 4, "context": "Belief updating is done by standard Bayesian net prop\u00ad agation rules (Pearl, 1988).", "startOffset": 69, "endOffset": 82}], "year": 2011, "abstractText": "Poker is ideal for testing automated reason\u00ad ing under uncertainty. It introduces un\u00ad certainty both by physical randomization and by incomplete information about op\u00ad ponents' hands. Another source of uncer\u00ad tainty is the limited information available to construct psychological models of opponents, their tendencies to bluff, play conservatively, reveal weakness, etc. and the relation be\u00ad tween their hand strengths and betting be\u00ad haviour. All of these uncertainties must be assessed accurately and combined effectively for any reasonable level of skill in the game to be achieved, since good decision making is highly sensitive to those tasks. We de\u00ad scribe our Bayesian Poker Program (BPP) , which uses a Bayesian network to model the program's poker hand, the opponent's hand and the opponent's playing behaviour con\u00ad ditioned upon the hand, and betting curves which govern play given a probability of win\u00ad ning. The history of play with opponents is used to improve BPP's understanding of their behaviour. We compare BPP experimentally with: a simple rule-based system; a program which depends exclusively on hand probabil\u00ad ities (i.e., without opponent modeling); and with human players. BPP has shown itself to be an effective player against all these opponents, barring the better humans. We also sketch out some likely ways of improv\u00ad ing play.", "creator": "pdftk 1.41 - www.pdftk.com"}}}