{"id": "1302.2828", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "12-Feb-2013", "title": "Multi-agent RRT*: Sampling-based Cooperative Pathfinding (Extended Abstract)", "abstract": "notifies Cooperative pathfinding whitneys is jatuporn a campina problem of 41.59 finding struthioniformes a set of non - conflicting transglobal trajectories halff for a half-mast number of mobile perkin agents. Its mcglade applications 37.82 include planning 2,581 for kyiv teams xrco of loudy mobile robots, such sketchy as autonomous n\u00e1huatl aircrafts, cars, umnak or underwater vehicles. philharmonics The replenishments state - minuteclinic of - the - art 24,000-strong algorithms eguren for nightstands cooperative tangara pathfinding kassai typically shontayne rely on uneasiness some lava-flooded heuristic nestucca forward - seniat search saidu pathfinding classica technique, where 14-night A * senarath is often onesti the incae algorithm druitt of equipped choice. Here, abdelbaset we nbtc propose bomber MA - laughren RRT *, camoys a danti novel 1012 algorithm for multi - agent path 47.86 planning that opportunities builds upon pedrini a 1980-1989 recently tetrahedrons proposed asymptotically - optimal leukopenia sampling - khaksar based aspected algorithm for sniffles finding single - agent shortest path salina called segantini RRT *. We experimentally evaluate concreteness the ghr performance nizhniy of 8,650 the rodnovery algorithm muniswamy and madea show b\u0103lan that the sampling - gr\u00e4fenberg based showest approach offers better scalability deportiva than vang the diomedio classical single-valued forward - search delgados approach in relatively large, but quixtar sparse snarkiness environments, entamoeba which are wonogiri typical in nuzum real - world zuppke applications such leans as multi - + aircraft front-facing collision hyphens avoidance.", "histories": [["v1", "Tue, 12 Feb 2013 15:47:43 GMT  (83kb,D)", "http://arxiv.org/abs/1302.2828v1", "To appear at AAMAS 2013"]], "COMMENTS": "To appear at AAMAS 2013", "reviews": [], "SUBJECTS": "cs.RO cs.AI cs.MA", "authors": ["michal \\v{c}\\'ap", "peter nov\\'ak", "ji\\v{r}\\'i vok\\v{r}\\'inek", "michal p\\v{e}chou\\v{c}ek"], "accepted": false, "id": "1302.2828"}, "pdf": {"name": "1302.2828.pdf", "metadata": {"source": "CRF", "title": "Multi-agent RRT*: Sampling-based Cooperative Pathfinding", "authors": ["Michal \u010c\u00e1p", "Peter Nov\u00e1k", "Ji\u0159\u00ed Vok\u0159\u00ednek", "Michal P\u011bchou\u010dek"], "emails": [], "sections": [{"heading": "Categories and Subject Descriptors", "text": "I.2.11 [Artificial Intelligence]: Distributed Artificial Intelligence\u2014 Coherence and coordination, Multiagent systems; I.2.8 [Artificial Intelligence]: Problem Solving, Control Methods, and Search\u2014 Plan execution, formation, and generation, Graph and tree search strategies"}, {"heading": "General Terms", "text": "Algorithms, Experiments, Performance"}, {"heading": "Keywords", "text": "Cooperative pathfinding, multi-agent motion planning."}, {"heading": "1. INTRODUCTION", "text": "The problem of collision avoidance for mobile robots, such as aircrafts can be modeled as an instance of cooperative pathfinding, a relatively well studied problem of finding a set of non-conflicting trajectories for a number of mobile agents.\n\u2217The research was supported by the ARTEMIS Joint Undertaking under the number 269336-2 and by the Czech Republic Ministry of Education, Youth and Sports, grant no. 7H11102 (D3CoS).\nAppears in: Proceedings of the 12th International Conference on Autonomous Agents and Multiagent Systems (AAMAS 2013), Ito, Jonker, Gini, and Shehory (eds.), May, 6\u201310, 2013, Saint Paul, Minnesota, USA. Copyright c\u00a9 2013, International Foundation for Autonomous Agents and Multiagent Systems (www.ifaamas.org). All rights reserved.\nThe straightforward, but complete approach to the problem is to search the solution in what we call a joint-state space. The state space is constructed as the Cartesian product of the state spaces of the individual agents. It is typically searched using some heuristic forward search algorithm, such as A*. The performance of forward search algorithms hinges on low branching factor of the search space, which is in joint-state spaces often exponential in the number of agents. Suppose for example that an agent can move in four directions and that the problem involves six agents. Then, there is 46 = 4096 possible joint actions at each timestep! Clearly, the completeness of such an approach is traded for a prohibitive computational cost.\nRecently, Karaman and Frazzoli [1] introduced a novel any-time sampling-based motion planning algorithm that offers good scalability to high-dimensional environments, while at the same time it guarantees convergence to an optimal solution. In this paper, we introduce MA-RRT*, a novel sampling-based algorithm for cooperative pathfinding, the main contribution of this paper. The algorithm searches for the plan of agents\u2019 movements in their joint-state space, but replaces the A*-based heuristic search in the joint-state space by RRT*. We extensively evaluate the performance and solution quality produced by the algorithm and show that for sparsely populated large environments the sampling algorithm outperforms Standley and Korf\u2019s optimal anytime algorithm (OA) [2] in terms of runtime and success rate, while still maintaining reasonable quality of the solution."}, {"heading": "2. PROBLEM FORMULATION", "text": "To allow fair comparison with the OA algorithm, which is defined only for agents moving on graphs, we use the following definition of a cooperative pathfinding problem. Consider n agents operating in an Euclidean space. The motion model of the agent i is described by a corresponding motion graph denoted as GMi = (Wi,Mi). The starting positions of all agents are given as an ntuple (s1, . . . , sn), where si \u2208Wi is the starting waypoint of agent i. Similarly, (d1, . . . , dn) is an n-tuple of destination waypoints di \u2208 Wi of each agent. The task is to find a sequence of motion primitives, i.e., a path pi in the motion graph GMi for each agent i, such that start(pi) = si and end(pi) = di and the paths are separated, that is, \u2200j, k, t : j 6= k \u21d2 dist(pi[t], pj [t]) > dsep , with dsep being the required separation distance. As the solution quality metric we use the sum of times each of the agents spends outside his destination waypoint."}, {"heading": "3. THE ALGORITHM", "text": "The RRT* algorithm is designed for continuous state spaces in which it can efficiently find a path from a given start state to a given\nar X\niv :1\n30 2.\n28 28\nv1 [\ncs .R\nO ]\n1 2\nFe b\n20 13\ntarget region by incrementally building a tree that is rooted at the start state and spans towards randomly sampled states from some given state space. Once the tree first reaches the goal region, the algorithm can follow its edges backwards to obtain the first feasible path from the start state to the target region. However, even after the first solution is returned, the algorithm does not stop, but instead continues extending the tree by drawing new random samples, which leads to incremental discovery of new lower-cost paths.\nWe use identical approach to find the shortest path in a motion graph. The core difference is that in continuous version, two samples can be connected if they are mutually visible. In the graph version of RRT*, two samples can be connected if it is possible to find a valid path between them by heuristic-guided greedy search in the motion graph.\nThe multi-agent version of graph RRT* (MA-RRT*) is identical to the graph version of RRT*, except that it searches for a shortest path in a graph that represents the joint-state space of all agents. The returned solution is then a collision-free joint plan containing a path for each agent.\nThe performance of the algorithm on an average problem instance can be improved by biasing the sampling distribution to favor regions around optimal paths of the individual agents that are more likely to contain high quality solutions. We call this variant an informed-sampling MA-RRT*."}, {"heading": "4. EVALUATION", "text": "We compared the performance of the unbiased version of MARRT* (MA-RRT*) and informed-sampling MA-RRT* (isMA-RRT*) with A* search in joint-state space (JA) and optimal anytime algorithm (OA) in terms of scalability and solution quality. All three algorithms were implemented in Java in a common framework.\nWe evaluated the performance of the algorithms on the following set of synthetic problem instances. The agents move on a squareshaped grid-like motion graph, where the waypoints were placed on the grid having the step of 1 meter and the motion primitives were straight moves at the constant speed of 1 m/s connecting the vertices in the 4-neighborhood. Furthermore, a 1 second long waiting motion primitive was available at each waypoint. We randomly removed 10 percent of the vertices of the motion graph to represent obstacles. A unique start waypoint and unique destination waypoint was chosen randomly for each agent. Finally, for each such instance we checked whether all agents can reach their destinations to ensure that the instance admits a solution.\nThe set of tested problem instances contained instances that varied in the size of the grid and in the number of agents. We used the following values of the two parameters. Grid sizes: 10x10, 30x30, 50x50, 70x70, 90x90. Numbers of agents: 1, 2, 3, 4, 5, 6, 7, 8, 9, 10. The separation distance was set to a constant 0.8. The problem instance set contained 120 random instances (with random obstacles and random start and destination positions) for each combination of the grid size and the number of agents. Thus, in total, the experiment included 6000 different problem instances. Each of the algorithms was executed on every instance with the runtime limit of 5 seconds. The experiments were performed on HotSpot 1.6 64-bit Java VM running on AMD FX-8150 3.6 GHz CPU."}, {"heading": "4.1 Results", "text": "To convey how well the algorithms performed on the evaluation set of problem instances, we plot the performance curves (proposed in [2]) for each algorithm. We recorded the runtime to find the first valid solution to the problem instance for each algorithm. Then, we sorted the instances according to the runtime for each algorithm independently. The results are plotted in Figure 1. On the x-axis\nis the index of instance in the algorithm\u2019s sorted sequence, on the y-axis is the runtime the algorithm needed to find the first solution to that problem instance. It should be noted that the ordering of the instances is different for each algorithm. The x-position of the last point in the performance curve can be interpreted as the number of instances of the total 6000 instances the algorithm solved in the runtime limit of 5 seconds. We can see that JA resolved 21% of the instances, OA 38%, MA-RRT* 56% and isMA-RRT* 77 % of instances from our problem instance set.\nFigure 2 shows the comparison of relative solution quality for the anytime algorithms, JA is not plotted since it always returns optimal solutions. For all algorithms we show the quality of the first returned solution and the quality of the best solution found within the 5 seconds runtime limit. The suboptimality is measured only on a subset of instances for which either JA or OA returned provably optimal solution (in our case 2438 instances). The suboptimality measure is expressed in percentage points as follows:\nsuboptimality = (\ncost of returned solution cost of optimal solution\n\u2212 1 ) \u00b7 100."}, {"heading": "5. CONCLUSION", "text": "In this paper we proposed MA-RRT*, an anytime algorithm for solving cooperative pathfinding problems. Our experiments demonstrate the limits of the forward-search based approaches to cooperative pathfinding in large, but sparse environments. Our results show that these instances can be efficiently solved using one of our sampling-based algorithms for the price of a slight decrease in the solution quality.\n0 1000 2000 3000 4000 5000 6000\n0 20\n00 40\n00\ninstances\nru nt\nim e\n(m s)\nJA OA MA\u2212RRT* isMA\u2212RRT*\nFigure 1: First-solution performance curve\n\u25cf \u25cf \u25cf\n\u25cf \u25cf\n\u25cf\n\u25cf\u25cf\n\u25cf\u25cf\n\u25cf\n\u25cf\n\u25cf\n\u25cf \u25cf\n\u25cf\n\u25cf\n\u25cf\n\u25cf\n\u25cf\n\u25cf\n\u25cf\n\u25cf\n\u25cf\n\u25cf\n\u25cf\n\u25cf\n\u25cf\n\u25cf\n\u25cf\n\u25cf\n\u25cf\n\u25cf \u25cf\u25cf\n\u25cf\n\u25cf\n\u25cf \u25cf\n\u25cf\n\u25cf\n\u25cf\n\u25cf \u25cf\n\u25cf\u25cf\n\u25cf \u25cf\n\u25cf\n\u25cf\n\u25cf\n\u25cf \u25cf \u25cf\n\u25cf\n\u25cf\n\u25cf\n\u25cf\n\u25cf\n\u25cf\n\u25cf\n\u25cf \u25cf\n\u25cf\n\u25cf\n\u25cf\n\u25cf\n\u25cf\n\u25cf \u25cf\n\u25cf\n\u25cf\n\u25cf\n\u25cf\n\u25cf\n\u25cf\n\u25cf \u25cf\n\u25cf\u25cf \u25cf\u25cf \u25cf\u25cf \u25cf\n\u25cf\n\u25cf\n\u25cf\n\u25cf \u25cf\n\u25cf\n\u25cf\u25cf\n\u25cf\u25cf\u25cf \u25cf0 50\n10 0\n20 0\nS ub\nop tim\nal ity\n( ex\ntr a\n% )\nMA\u2212RRT 1st sol. MA\u2212RRT best sol. isMA\u2212RRT 1st sol. isMA\u2212RRT best sol. OA 1st sol.\nOA best sol.\nFigure 2: Solution quality"}, {"heading": "6. REFERENCES", "text": "[1] Karaman and Frazzoli. Sampling-based algorithms for\noptimal motion planning. International Journal of Robotics Research, 30(7):846\u2013894, June 2011.\n[2] Trevor Scott Standley and Richard E. Korf. Complete algorithms for cooperative pathfinding problems. In Toby Walsh, editor, IJCAI, pages 668\u2013673. IJCAI/AAAI, 2011."}], "references": [{"title": "Sampling-based algorithms for optimal motion planning", "author": ["Karaman", "Frazzoli"], "venue": "International Journal of Robotics Research,", "citeRegEx": "1", "shortCiteRegEx": "1", "year": 2011}, {"title": "Complete algorithms for cooperative pathfinding problems", "author": ["Trevor Scott Standley", "Richard E. Korf"], "venue": "In Toby Walsh, editor,", "citeRegEx": "2", "shortCiteRegEx": "2", "year": 2011}], "referenceMentions": [{"referenceID": 0, "context": "Recently, Karaman and Frazzoli [1] introduced a novel any-time sampling-based motion planning algorithm that offers good scalability to high-dimensional environments, while at the same time it guarantees convergence to an optimal solution.", "startOffset": 31, "endOffset": 34}, {"referenceID": 1, "context": "We extensively evaluate the performance and solution quality produced by the algorithm and show that for sparsely populated large environments the sampling algorithm outperforms Standley and Korf\u2019s optimal anytime algorithm (OA) [2] in terms of runtime and success rate, while still maintaining reasonable quality of the solution.", "startOffset": 229, "endOffset": 232}, {"referenceID": 1, "context": "1 Results To convey how well the algorithms performed on the evaluation set of problem instances, we plot the performance curves (proposed in [2]) for each algorithm.", "startOffset": 142, "endOffset": 145}], "year": 2013, "abstractText": "Cooperative pathfinding is a problem of finding a set of non-conflicting trajectories for a number of mobile agents. Its applications include planning for teams of mobile robots, such as autonomous aircrafts, cars, or underwater vehicles. The state-of-the-art algorithms for cooperative pathfinding typically rely on some heuristic forward-search pathfinding technique, where A* is often the algorithm of choice. Here, we propose MA-RRT*, a novel algorithm for multi-agent path planning that builds upon a recently proposed asymptotically-optimal sampling-based algorithm for finding single-agent shortest path called RRT*. We experimentally evaluate the performance of the algorithm and show that the sampling-based approach offers better scalability than the classical forward-search approach in relatively large, but sparse environments, which are typical in real-world applications such as multi-aircraft collision avoidance.", "creator": "LaTeX with hyperref package"}}}