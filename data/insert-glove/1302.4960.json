{"id": "1302.4960", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "20-Feb-2013", "title": "Reasoning, Metareasoning, and Mathematical Truth: Studies of Theorem Proving under Limited Resources", "abstract": "wreh In 22.85 earlier abella work, we introduced flexible jawng inference and decision - theoretic metareasoning to address fadia the trillium intractability phenylbutazone of normative notion inference. k-mount Here, rather than abbs pursuing zarian the radioman task workweeks of eyedrops computing sugg beliefs kitayev and actions with decision vahedi models stimlje composed 56.18 of impedes distinctions dayt about uncertain bencher events, we examine gui methods for zod inferring damallsvenskan beliefs moscato about spinster mathematical carisbo truth backbeat before an talisman automated 131.2 theorem prover completes windhorst a proof. safet We employ a Bayesian analysis quints to zorana update belief in contracted truth, parthenon given theorem - o'flaherty proving progress, and outscoring show papazian how decision - dank theoretic methods mobilize can be used end-to-end to 85-73 determine 143.7 the re-releasing value of continuing coatesville to castlemilk deliberate versus east taking 3,070 immediate action lechantre in virginianus time - mirko critical situations.", "histories": [["v1", "Wed, 20 Feb 2013 15:21:39 GMT  (312kb)", "http://arxiv.org/abs/1302.4960v1", "Appears in Proceedings of the Eleventh Conference on Uncertainty in Artificial Intelligence (UAI1995)"]], "COMMENTS": "Appears in Proceedings of the Eleventh Conference on Uncertainty in Artificial Intelligence (UAI1995)", "reviews": [], "SUBJECTS": "cs.AI", "authors": ["eric j horvitz", "adrian klein"], "accepted": false, "id": "1302.4960"}, "pdf": {"name": "1302.4960.pdf", "metadata": {"source": "CRF", "title": "Studies of Theorem Proving under Limited Resources", "authors": ["Eric Horvitz", "Adrian Klein"], "emails": ["horvitz@microsoft.com", "klein@proof.stanford.edu"], "sections": [{"heading": null, "text": "In earlier work, we introduced flexible infer ence and decision-theoretic metareasoning to address the intractability of normative infer ence. Here, rather than pursuing the task of computing beliefs and actions with decision models composed of distinctions about uncer tain events, we examine methods for inferring beliefs about mathematical truth before an automated theorem prover completes a proof. We employ a Bayesian analysis to update be lief in truth, given theorem-proving progress, and show how decision-theoretic methods can be used to determine the value of continuing to deliberate versus taking immediate action in time-critical situations.\n1 INTRODUCTION\nTheorem proving is frequently perceived as a logi cal, deterministic endeavor. However, uncertainty of ten plays a critical role in theorem proving and other mathematical pursuits. The mathematician George Polya emphasized the importance of plausible reason ing for guiding the intuitions and effort of mathemati cians. In particular, he discussed the important role of analogy and uncertainty during mathematical theo rem proving [Polya, 1954a, Polya, 1954b). Conjectures about mathematical truth often draw upon existing proofs of related concepts and the results of inductive reasoning. As an example, logical knowledge and in ductive evidence strongly bolstered the beliefs of many mathematicians about the truth of Fermat's last theo rem before the recently developed proof of the theorem became available [van der Poorten, 1995b]. van der Poorten has commented on the importance of induc tion and intuition in belief about mathematical truth with regard to conjectures about the quantity of reg ular primes [van der Poorten, 1995a):\n*Current address: Microsoft, Redmond, WA 98052\nBut even now, we still cannot prove that there are infinitely many regular primes. Sure we 'know' from experiment-extensive computation, and from heuristics-the feel ing in our stomachs ...\nWe will formalize aspects of plausible reasoning in mathematics with an analysis of uncertain beliefs dur ing theorem proving under limited computational re sources. Specifically, we present a Bayesian analysis of the truth of a propositional claim, based on informa tion about the size of the search space and progress towards a goal during theorem-proving. We show how decision-theoretic reasoning and metareasoning can be used to make decisions about the best actions to take, and about the duration of deliberation before taking action with a partial result. We characterize the ex pected value of computation for a theorem prover, al lowing decision-making systems to determine how long to perform inference in a time-critical setting. Before delving into theorem proving, we will review briefly earlier work on rational action under limited resources, that has taken advantage of the use of flexible in ference procedures and decision-theoretic metareason ing [Horvitz, 1987, Horvitz et al., 1989). The previous work targeted problems with the ideal control of infer ence and representation with belief networks and in fluence diagrams in time-critical contexts. This work extends decision-theoretic reasoning and metareason ing under limited resources by highlighting the salience of uncertainty in the realm of theorem proving.\n2 DECISION-THEORETIC METAREASONING\nWe are typically uncertain about the outcome of com plex computational processes. Nevertheless, we can often characterize the results of computation with ab stract descriptions of expected output. For example, we may be able to define attributes of quality and pre dict how these various dimensions will be refined with the allocation of resources. In reasoning about the quantity of time and memory to allocate to the refine-\nment of partial results, we must often explicitly con sider the uncertainty about the results of computation. The expected value of computation (EVC) is the dif ference between the expected utility of employing the current result immediately and the expected utility of the result obtained after allocating additional compu tational resources [Horvitz, 1988, Russell, 1990]. The net EVC (NEVC) is the difference in expected utility, including the cost associated with delayed action.\nFlexible computation procedures are algorithms that provide continuous refinement of attributes of a computed result, given increasing allocation of one or more classes of computational resources (see [Dean and Wellman, 1991] and [Horvitz, 1987] for re views of temporally flexible algorithms). Resources can include time and memory. Another desirable property of flexible methods for computing under varying resources is convergence on the ideal re sult with some finite or infinite quantity compu tational resources. This property allows reason ing systems to converge on ideal results with in creasing amounts of computation. Convergence can be important in making arguments about bounded optimality--optimization of problem solving and ac tion given the expected challenges and costs of compu tation (for general discussions of bounded optimality and rationality, see [Horvitz, 1987], [Doyle, 1990], and [Russell et al., 1993]). Dean and Boddy introduced the term anytime algorithms to describe flexible com putation for incrementally refining the quality of plans generated by a planner [Dean and Boddy, 1988]."}, {"heading": "Theorem Proving under Limited Resources 307", "text": "In brief, a flexible algorithm transforms a current prob lem instance I into a partial result 1r(I), consuming computational resource r. We often can decompose the comprehensive utility of a partial result into the inference-related costs, u;, and the object-level value, u0, of the result. The NEVC of allocating a quantity of resource r to a flexible strategy S; to refine a problem instance I is,\nNEVC(Si, I, r) r Uo(7r(I)) X p( 7r(I) IS;, I, r) }, (I)\n-uo(I)- Ui(r) (1)\nThe current problem instance I may be a partial re sult 1r0 (I), computed earlier by a flexible procedure with some prior allocation of resource. We may be uncertain about the multiple attributes or dimensions of value in a result, and about the utility functions U0 and Ui used to map object-level utility to attributes of partial results, and disutility to allocated resources. To handle such cases, we can generalize Equation 1 by summing over the uncertainty associated with utility assignments and uncertainty over different attributes of partial results.\nWe can employ EVC analyses to make decisions about the best flexible algorithms to apply and the length of time to apply the algorithms [Horvitz, 1988, Boddy and Dean, 1989]. Methods for handling such prototypical cost contexts as deadlines, uncertain deadlines, and general urgency are described in [Horvitz, 1988]. In general, real-time inference and information gathering for metareasoning must be tractable or compiled into tractable procedures through offline analysis [Horvitz, 1989]. Researchers typically have made greedy, myopic assumptions to keep metareasoning about ideal deliberation plans tractable.\n3 RELATED WORK ON BELIEFS AND LIMITED RESOURCES\nWe shall focus on methods for controlling delibera tion in a theorem prover by analyzing the dynamic changes in beliefs about truth with deliberation. In re lated work on computation under bounded resources, decision-theoretic methods have been used to reason about probability and action, and to determine ideal deliberation [Horvitz et al., 1989]. Research on the Protos project at Stanford focused specifically on the control of probabilistic and decision-theoretic infer ence in belief networks and influence diagrams via the use of tractable, approximate decision-theoretic metareasoning. The Protos system has served as an example of reflective decision-analytic reasoning decision-theoretic reasoning that includes the costs of reasoning in computing optimal actions [Good, 1952, Horvitz, 1990]. In this work, a partial result is a second-order probability distribution over future prob-\nabilities or utilities. Protos applies flexible prob abilistic inference to tighten the upper and lower bounds of probabilities that are required in time critical decision problems. Sample problems were drawn from emergency and intensive-care medicine [Horvitz and Rutledge, 1991]. The system continues to monitor the EVC of decision-theoretic inference based on the state of the decision problem and meta knowledge, obtained via analysis of performance of the inference algorithm, about the expected refinement of partial results with additional computation. When the net EVC becomes nonpositive, deliberation ceases and action is taken in the world. Figure 2 shows instru mentation output by Protos, including convergence of bounds on a probability with computation, time dependent changes in utilities and decision thresholds, and graphical explanation of the best decision.\nOther research on the development of flexible methods for computing beliefs under varying re sources includes work on anytime probabilistic logic [Frisch and Haddawy, 1995] and on flexible decision making with a probabilistic database [Pittarelli, 1994]. In these analyses, incremental-refinement methods are presented that allow the number of sentences about be liefs and action to be manipulated, inducing tradeoff's in precision and computation that provide opportuni ties for control.\n4 THEOREM-PROVING METHODOLOGIES\nLet us now delve into the realm of theorem proving under bounded resources. We shall apply methods\nanalogous to the previous work on beliefs and actions under bounded resources; specifically, we shall identify flexible procedures and partial results for refining be lief in mathematical truth and for controlling theorem proving deliberation. In the case of theorem proving, we are interested in whether a formula or a group of formulae (the conclusion) is implied by another set of formulae (the premises). Automated theorem provers compute the answer to such questions.\nAn infinite number of theorems can be deduced from the premises and logical tautologies. Thus, it is im practical to generate the conclusion from the premises through repeated application of valid rules of infer ence. An effective strategy is to show that a contra diction is implied by the conjunction of the premises, P, with the negation of the conclusion, -.C. If a con tradiction is found, then the conclusion must follow from the premises. If the premises themselves are in consistent, then any set of formulae will follow.\nGenerative approaches to theorem proving, such as resolution refutation, do not provide indications how close the algorithm is to termination. The size of the theorem set at any given stage does not give us use ful information about the likelihood that the set itself is consistent. However, other methods provide better handles into solution progress. We have studied a class of propositional theorem provers which implement the matrix method [Bibel, 1987]. The matrix method of theorem proving structures the task of checking the consistency of a set of statements as a search through a space of truth assignments. The matrix method has properties that make possible the gathering of infor mation about the expected distance to a proof's com pletion.\nThe matrix method works to prove inconsistency by searching for a truth assignment which satisfies the clauses in ( P 1\\ -.C). If the search for a truth as signment fails, then the conclusion is entailed by the premises. The process is as follows: First, the conjunc tion of all formulae in the set (P 1\\ -.C) is translated into conjunctive normal form. This results in a set of disjunctions or clauses, C1, C2, . \u2022 . , Cn, which are im plicitly conjoined. A path x, through this set of clauses, is a set of ground literals, \u00a31, ... , Ln, where each L; occurs in the disjunction C;. Thus, L;, 1 :::; i :::; n, is either a proposition P or its negation. A path is said to be open iff L; ::/= -.Lj, for all 1 :::; i, j :::; n. A path is closed iff L; = -.Lj for some i, j 1 :::; i, j :::; n. A truth assignment v can satisfy all literals in a path x iff x is open. Since the set of formulae ( P 1\\ -.C) is logically equivalent to the set of clauses C1, C2, . . . , Cn, a truth assignment exists that satisfies ( P 1\\ -.C) iff an open path exists through the clauses.\nThe search for an open path in the matrix method can be implemented as a depth-first search through a tree in which the literals of the first disjunct are the\nchildren of the root node, and all nodes at any given level have the literals of the next disjunct as their chil dren. The search down any given subpath terminates whenever a contradiction is found (i.e., when a syn tactic comparison shows that both a proposition and its negation occur on the current subpath), and all paths extending from this subpath are also discarded, since they will necessarily be contradictory as well. The conclusion must follow from the premises if no truth assignment can be found, equivalent to closing all paths. The matrix-method theorem-proving proce dure must consider a search space of paths bounded by the number of literals raised to the power of the number of clauses. For example, in a matrix with n clauses, where each is a disjunction of m literals, there are mn possible paths through the matrix.\n5 PROBABILITY AND PROOF\nWhat is the link between theorem proving and prob ability? Theorem proving with the matrix method in volves checking whether each of the 2k possible truth assignments for the set of literals appearing in the problem satisfies the members of (P 1\\ \u2022C). With matrix theorem proving, the search space that is tra versed in practice is not isomorphic to the space of possible valuations or models. However, there is a cor respondence between the syntactic search for an open path and the semantic search through a space of pos sible propositional truth assignments. Each subpath x through clauses C1, C2, ... , Cn, corresponds to the in tersection of the class of truth assignments v in which v(P) =: true if L; =: P for some 1 \ufffd i \ufffd n, with the class of truth assignments v' in which v'(P) =:false if L; = -,p for some 1 \ufffd i \ufffd n. Since the correspon dence between syntactic paths and possible truth as signments is one-to-many, a search through the former space will generally be completed more quickly than a truth-table style examination of the latter. Also, within a particular matrix, each path of a given length will contain roughly the same number of different liter als, and so will correspond to approximately the same number of truth assignments. Thus, the interpreta tion of the portion of the search space explored can be extended from the semantic space of truth assign ments to the syntactic domain of paths explored in the matrix method.\nDuring matrix theorem proving, if a contradiction is produced by adding a literal L; from a clause num bered nj to the current subpath, when that already contains an occurrence of \u2022L;, the number of paths of the total initial search space mn that have already been searched is incremented by an additional m(n-n1) paths; this is the number of complete paths contain ing this subpath. By recording the occurrences of such path closings, we can track the frequency of closings as a function of the portion of the total search space\nTheorem Proving under Limited Resources 309\nvisited and record probabilistic information about the search space explored before an open path is discov ered by the reasoner. We use such search information to compute the probability of truth before a proof is completed.\nAssume that w represents the metatheoretic claim that a conclusion follows from the cited premises. We wish to compute the probability that the matrix method will determine the truth of w, given information that some portion of total search space has been explored without discovery of an open path. We condition our analysis on the absence of a logical proof. We will use S to indicate the portion of the total search space that has been explored without finding a proof of w. We can compute the probability of w by employing Bayes' rule to relate the probability that w is true to evidence about the progress of search and the prior probability of truth,\np(Siw, \ufffd)p( wl\ufffd) (2)\np(Siw, Op(wl\ufffd) + p(SI\u2022w, \ufffd)p(\u2022wl\ufffd) where p( wiS, \ufffd) is the likelihood of the truth of the metatheoretic claim w, given that S of the search space has been explored without discovering an open path, and background (implicit) information about the sit uation ( The term p(Siw, \ufffd) is the probability of S given w is true, p(SI\u2022w, \ufffd) is the probability of S given w is false, and p( w I\ufffd) is the prior probability that w is true. The prior probability of w is based on experience with a set of queries to a theorem prover, conditioned on such information as the source, size, and structure of the input. The probability that w is false, p(\u2022wl\ufffd), is simply the complement of the prior probability of w, 1 - p(\u2022wlx).\nWe can simplify Equation 2 by noting that, when w is true, no open paths can be found, and the theorem prover will search the entire space before halting. Thus for all fractions of the search less than one, p(Siw, \ufffd) = 1. Now, we can express p(wiS, \ufffd) in terms of p(wl\ufffd) and p(SI\u00b7w, O,\np(wl\ufffd) p( wiS, \ufffd) = p( wl\ufffd) + p(SI\u2022w, \ufffd)[1- p( wl\ufffd)] (3) Thus, we can compute the truth of a proposition before a theorem prover halts if we know the prior probability of the truth of w and the probability that search will explore increasing portions of the total search space without finding a proof that w is false, given that w is indeed false.\nWhat can we say about the expected form of the probability distribution p(SI\u2022w, \ufffd)? In the absence of problem-specific information, we assert event equiva lence regarding the likelihood that each possible truth assignment for the set of literals appearing in the prob lem will satisfy the members of ( P 1\\ \u2022C). Event equiv alence implies that each of the 2k possible truth as signments is equally likely to be consistent with \u2022w.\n310 Horvitz and Klein\nAssume that each path in the search space is indepen dent of other paths and that there are () open paths in the matrix. The probability of not finding a proof of \u2022w after searching portion s of the total search space IS,\n(4)\nwhere mn is the total number of paths in the ma trix. In this paper, we shall not demonstrate the ex plicit use of such information as the expected number of open paths 0. Rather, we show how data about p(SI\u2022w, e) can be employed directly. However, in the general case, we can seek from data the probability dis tribution over the number of open paths as a function of such distinctions as the size of the space of truth as signments, conditioned on the nature and source of the problem instance. Factors, including the num ber of clauses, clause length, and size of alphabet can contribute to the number of open paths. We can ac count for uncertainty in the number of open paths by modifying Equation 4 to consider a probability distri bution, p(Oih .. . In,e), representing information about the number of open paths conditioned on problem instance attributes, I; .\nWe know that paths in a matrix are not independent; because of the branching structure of the paths in the matrix, paths can share a large subset of ancestors. Given a large number of paths, however, we can pose an argument for minimal dependency by substituting groups of paths for literals for single paths. We group together those paths that have a large percentage of literals in common, and assume, without additional information, that each of these weakly dependent sets of paths have an equal chance of containing an open path.\n6 EMPIRICAL STUDIES\nWe ran a large number of experiments and collected data on the relevance of the portion of search space explored without finding a proof to the likelihood that a proposition is true. Specifically, we collected infor mation on the prior probability of truth of w and the probability that a search would progress to portions of the search space given that w is false, as required for determining the truth of w with Equation 3.\n6.1 EXPERIMENTS\nIn the experiments, we generated a large set of propo sitional clauses as inputs to the theorem prover and it erated the matrix algorithm over each. We restricted the inputs to a fixed number of clauses and fix the numbers of literals in each disjunction. The occur rences of path closings were recorded as a function of\nthe proportion of the search space explored and the fraction of the total search space explored before an open path was discovered by the reasoner. We ran a large number of cases and used these multiple samples to determine the probability that a counterexample to the claim of entailment would be found with further computation as a function of the portion of the search space visited.\nThe propositional matrices for the studies were gen erated in a straightforward fashion: Each clause is restricted to the same number of literals, and each literal within a clause is generated randomly. A propositional symbol is selected from an alphabet of specified size, with the selection procedure be ing repeated until a symbol is found that is not already present in the current clause. This sym bol is then negated with a 0.5 probability. The use of such randomly generated propositional clauses as a testbed for performance-enhancing heuristics has been investigated by [Mitchell et al., 1992] and [Selman et al., 1 992]. For a fixed number of literals per clause, the ratio of the number of clauses m comprising the problem instance to the size a, of the propositional alphabet employed is influential in determining the dif ficulty that problem instances will pose to automated theorem-proving routines.\nIf there are a large number of clauses in relation to the number of propositions represented in the matrix, the matrix will tend to be trivially unsatisfiable; contra dictions within the matrix are so plentiful that very little processing work need be done to close all of its paths. Alternatively, if there are too few clauses, con tradictions will be so scarce as to make the location of an open path within the matrix a simple matter. In a study of varying difficulty of satisfiability problems, Mitchell et al. identify the settings likely to produce the most challenging problem instances as those which tend to generate an equal number of satisfiable and un satisfiable collections of clauses [Mitchell et al., 1 992]. In our trials, the fraction of unsatisfiable matrices gen erated ranged between 0.3-0.6.\n6.2 RESULTS: THEOREM-PROVING PROFILES\nData on theorem-proving behavior was collected by running the matrix method on 750 randomly gener ated propositional matrices, each containing 20 clauses composed of 3 literals apiece. The literals were gen erated from a 4-symbol propositional alphabet. We found that thirty percent of the matrices tested con tained no open paths whatsoever; thus, the prior prob ability of p( w I e) for matrices generated for the study is 0.3. Figure 3 shows the probability of finding an open path as a function of the portion of search space visited for cases where w was found to be false. The probability of not finding a path as a function of the\nspace searched, p(SI\u2022w,\ufffd) , is just the complement of the plotted values. As described earlier, a cumulative probability curve with a binomial structure would sug gest that the paths in the matrix, or suitable weakly dependent groups of paths, are equally likely to be open.\nWe can use the data gathered in these experiments to compute the probability of w before a proof is completed. As an example, assume that the theo rem prover has proceeded through forty percent of the search space. The data shows that p(SI\u2022w, \ufffd) = 0.2 when s = 0.4. Substituting this, and the prior value of truth, 0.3, into Equation 3 yields a probability of truth given the search, p( wiS, \ufffd) = 0.68.\n6.3 ANALYSIS OF HEURISTICS\nHeuristics have played a central role in research on au tomated theorem proving. We explored how we could use the Bayesian framework to probe the effectiveness of heuristics. We investigated the value and proba bilistic implications of applying a preording heuristic that reorders the literals within a clause based on the results of the inspection of the literals in the matrix. A detailed discussion of the heuristic is described in (Klein and Horvitz, 1994]. We performed experiments with a preording heuristic. The broken line graphed in Figure 3 shows the proba bility of an open path being found for the sorted case, for the same set of cases. The curves for the sorted and unsorted cases show significant differences. As in the example for the unordered case, let us assume that the search has proceeded through 0.4 of the search space. The data indicates that for the theorem prover using\nTheorem Proving under Limited Resources 311\nthe preorder heuristic p(Siw,\ufffd) = 0.08 when S = 0.4. Substituting this probability into Equation 3 yields a probability of truth given the search, p( wiS, \ufffd) = 0.84, in contrast to 0.68 for the unordered situation. In this case, the theorem prover employing the preorder heuristic and associated data would provide stronger belief in the truth of w, given an equivalent amount of search.\n7 ACTION BEFORE PROOF\nWe now move from the realm of belief about truth to action in the world. Assume that the expected value of an agent's action depends on the truth of a formula which we can prove via the matrix method. Making in ferences about the probability that an open path exists allows an agent using a propositional logic knowledge base to take action based on the partial results of in complete theorem-proving, rather than being forced to wait until the termination of the logical analysis. As in other applications of flexible computation methods, we move from a traditional ali-or-nothing analysis to one considering a spectrum of partial results.\n7.1 IMMEDIATE ACTION AT A DEADLINE\nAn agent employing a theorem prover should take ac tions that maximize its expected utility. To compute the expected value of different actions A; in terms of the likelihood of the truth of one or more propositional formulae, we must consider the utilities of outcomes u(A;, wj) , u(A;, \u2022Wj) , for all actions A; and formulae Wj, and select the action that maximizes the expected utility (EU). Let us assume that the EU of taking ac tion A; depends on the truth of multiple formulae, Wj, and that the formulae are mutually exclusive. In this case, the EU of taking action A; is\nEU(A;) LP(wjiS, \ufffd)u(A;, Wj) j\n(5)\nFor cases where the best action is determined by belief in the truth of a single formula w, the best action, A*, lS,\nA* arg max(p( wiS, \ufffd) ( u(A;, w) - u(A;, \u2022w)) A + u(A;, \u2022w) ] (6)\nFor situations where there are only two actions under consideration (e.g., A1=FIGHT, A2=FLIGHT) , we can summarize the best policy for action by considering the relationship of p( wiS, \ufffd) to a threshold probability, p*, the probability of truth in formula w where the two actions have the same expected utility,\np* = u(A2, \u2022w)- u(A1, \u2022w) (7) u(A2, \u2022w) -u(AI, \u2022w) + u(A1, w) -u(A2, w)\nIn such binary decision problems, action A1 is the best course of action if p( w/S, n is greater than p*; if it is less than the threshold probability, action A2 domi nates.\n7.2 IMMEDIATE ACTION VERSUS INFERENCE\nWe now introduce the expected value of computation for logical inference with the matrix method, NEVCt. This measure allows us to consider the tradeoff be tween the cost associated with delayed action and the promise of making a better decision with additional computation. Assume we have already searched por tion S of the search space s without discovering a proof. We wish to determine the value of searching an additional j paths.\nFigure 4 displays a decision tree for the problem of acting immediately versus delaying for additional de liberation. If a theorem prover is allowed to investigate x additional of paths in the matrix method, two out comes are possible: (1) the system will find a proof of --,w and will halt, or (2) the system will not halt. If the theorem prover does not halt, we update S to S', and revise our belief in the truth of w, p( w/S', \ufffd) , with Equation 3.\nUnfortunately, we may have to pay a penalty for the delay associated with search of additional paths. In time-critical situations, the utility of one or more out comes is dependent on the length of delay before action is taken. We can represent time-dependent utilities by extending the representation of the utility of an out come, employed in Equation 6, to include changes in the utility associated with delays t incurred before ac tion, u(A;, Wj, t).\nWe shall consider the expected utility of exploring an additional j paths without discovering a proof. We use p( w/S, j, \ufffd) to refer to the probability of w given that we search another j paths without finding a proof, af ter previously searching a portion S of the space. We use t(j) to refer to the amount of time required to search j paths. We first consider the value of acting immediately after searching the j paths without find ing a proof. We use U ( S, j) to refer to the expected utility of executing the best action after searching j additional paths without finding a proof. If we act immediately after searching j paths without finding a proof, the expected utility of the best action will be\nU(S, j) = max(p( w/S, j, \ufffd) ( u[A;, w, t(j) ] - u[A;, --,w, t(j)]) A + u(A;, --,w, t(j) ) ] (8)\nLet us first consider the NEVCz for the decision to continue to perform logical inference for a single ad ditional path. We must take into consideration the probability that the theorem prover will find the next path to be open and will halt, and the case where it does not halt. We use p(H/S, j, \ufffd) , to refer to the prob ability that the system will halt on the jth additional path explored, concluding then that w is false. The NEVCz for a single path is,\nNEVCt(S, 1) = p(H/S, 1, \ufffd)max u[A;, \u2022w, t(l) ] A + [1- p(H/S, 1, \ufffd) ]U(S, 1)- U(S, 0) (9)\nwhere U(S, 0) refers to the expected utility of imme diate action instead of undertaking additional search.\nGiven general temporal cost functions, a single-step analysis can fail to identify the possibility that there will be positive value in computing for longer periods of time. Thus, it may be useful to consider the NEVCt for searching multiple paths. A formulation of NEVCt for arbitrary numbers of future paths x, within the re maining search space, considers the probabilities that the system will halt at different times before all x re maining paths have been explored,\nNEVCt(S, x) = X\nLP(H/S, j, \ufffd) mlxu[A;, \u2022w, t(j) ] j=l\n+ [1-\ufffdp(HIS, j, e)] U(S, j) -U(S, O) (10) For a binary decision problem, the maximizations in dicated in the equation can be performed simply by checking to see if the probability p( w/S, \ufffd) is greater or less than p*.\nWe can acquire the probability distributions necessary to solve Equations 9 and 10 directly from the data col lected about the performance of the theorem prover as described in Section 5. However, we can also employ probability models that explain the relationships seen in the data, as we described with Equation 4. In par ticular, we can approximate the probability of halt ing on the jth new path searched. When w is true, the probability of halting on any of the j additional branches of the search before completing the search, p(Hiw,S,j,e), is zero; when w is true, the theorem prover will not halt until exhausting the entire space. Thus, we need only to consider the probability of halt ing for the case where w is false,\np(HIS, j, e)= p(Hi\u2022w, S, j, e)p(\u2022wiS, j, e) (11)\nIf we make similar assertions of independence as those assumed in formulating the probability model in Equa tion 4, the first term of Equation 11 can be approxi mated as,\n[ 0 ]j-2 0 p(HI\u2022w, S,j,e) \ufffd 1_ (j + 1) g 1- 1_ i (12) assuming we search j additional paths, leaving l paths of the total search space unexplored. The probability p( \u2022wiS, j, 0 can be computed with Bayes' theorem as described in Equation 3.\n8 OPPORTUNITIES IN FIRST-ORDER LOGIC\nWe have investigated theorem proving with a proposi tional language. Applications of theorem proving may require a more expressive first-order language (FOL). We can extend the matrix method to a domain of first-order clauses with ease. However, a first-order language introduces complications for the interpreta tion of the search space explored as the probability of truth. With FOL, it is difficult to deterministically analyze the size of the search space, and to determine or approximate the ratio of search space explored to remaining search space. Indeed, the size of the FOL search space is unstable as the space can continue to expand because of instantiation during the processing of a matrix. Difficulty with the a priori assessment of the size of the search space introduces difficulties with determining the fraction of the total search space explored, and with harnessing information about the progress through the space to compute the probability that a conclusion must follow from premises.\nWe believe the extension of decision-making methods to FOL will be a challenging and promising area re search area. Several methods may be employed to ex tract useful information about the probability of truth in first-order logic. These include the use of a prob abilistic analysis of the size of the search space, and\nTheorem Proving under Limited Resources 313\nportion of search space explored, conditioned on evi dence about the problem instance and on information gleaned during preprocessing and search. The prob abilistic and decision-theoretic analyses described in this paper can be extended with probability distribu tions over these quantities. Additional theoretical and empirical studies may reveal approaches to gaining ac cess to such probability distributions over the size of the search space size.\n9 SUMMARY\nWe reviewed related work on flexible computation and control of deliberation for computing beliefs and ac tions under bounded resources. We took a decision making perspective on theorem proving, focusing on the use of theorem-proving activity to guide decisions about additional deliberation and about actions in the world. We hope that this work provides a valuable conceptual bridge between theorem proving under lim ited computational resources and probabilistic reason ing. We foresee research on probabilistic methods for tackling problems with the analogous analysis of FOL theorem proving. In particular, probabilistic methods may prove useful for inducing the expected size of a search space generated during FOL theorem proving, and for harnessing information about the progress of a theorem proving system through the search space with continuing computation.\nAcknowledgments\nWe thank Jack Breese, Johann Dekleer, David Heck erman, Paul Lehner, Sheila Mcllraith, Olivier Raiman, and Dave Smith for useful comments and suggestions on this work.\nReferences\n[Bibel, 1987) Bibel, W. (1987). Automated Theorem Proving. Braunschweig: Vieweg, Reading, Mas sachusetts.\n[Boddy and Dean, 1989) Boddy, M. and Dean, T. ( 1989). Solving time-dependent planning problems. In Proceedings of the Eleventh IJCAI. AAAI/International Joint Conferences on Artificial Intelligence.\n[Dean and Boddy, 1988) Dean, T. and Boddy, M. (1988). An analysis of time-dependent planning. In Proceedings AAAI-88 Seventh National Confer ence on Artificial Intelligence, pages 49-54. Ameri can Association for Artificial Intelligence.\n[Dean and Wellman, 1991) Dean, T. and Wellman, M. (1991). Planning and Control, chapter 8.3 Tem porally Flexible Inference, pages 353-363. Morgan Kaufmann Publishers, San Mateo, California.\n314 Horvitz and Klein\n[Doyle, 1990] Doyle, J. (1990). Rationality and its roles in reasoning. In Proceedings of the Eigth Na tional Conference on Artificial Intelligence, pages 1093-1100. American Association for Artificial In telligence, AAAI Press I The MIT Press, Cam bridge, MA.\n[Frisch and Haddawy, 1995] Frisch, A. and Haddawy, P. (1995). Anytime deduction for probabilistic logic. Artificial Intelligence.\n[Good, 1952] Good, I. (1952). Rational decisions. J. R. Statist. Soc. B, 14:107-114.\n[Horvitz, 1987] Horvitz, E. (1987). Reasoning about beliefs and actions under computational resource constraints. In Proceedings of Third Workshop on Uncertainty in Artificial Intelligence, pages 429- 444, Seattle, Washington. American Association for Artificial Intelligence. Also in L. Kanal, T. Levitt, and J. Lemmer, ed., Uncertainty in Artificial Intel ligence 3, Elsevier, 1989, pps. 301-324.\n[Horvitz, 1988] Horvitz, E. (1988). Reasoning under varying and uncertain resource constraints. In Pro ceedings AAAI-88 Seventh National Conference on Artificial Intelligence, Minneapolis, MN, pages 111- 116. Morgan Kaufmann, San Mateo, CA.\n[Horvitz, 1989] Horvitz, E. (1989). Rational metar easoning and compilation for optimizing decisions under bounded resources. In Proceedings of Com putational Intelligence 89, Milan, Italy. Association for Computing Machinery. Available as Technical Report KSL-89-81 Computer Science, Stanford Uni versity, April 1989.\n[Horvitz, 1990] Horvitz, E. (1990). Computation and Action Under Bounded Resources. PhD thesis, Stan ford University.\n[Horvitz et al., 1989] Horvitz, E., Cooper, G., and Heckerman, D. (1989). Reflection and action un der scarce resources: Theoretical principles and em pirical study. In Proceedings of the Eleventh Inter national Joint Conference on Artificial Intelligence, Detroit, MI, pages 1121-1127. International Joint Conference on Artificial Intelligence.\n[Horvitz and Rutledge, 1991] Horvitz, E. and Rut ledge, G. (1991). Time-dependent utility and action under uncertainty. In Proceedings of Seventh Con ference on Uncertainty in Artificial Intelligence, Los Angeles, CA, pages 151-158. Morgan Kaufman, San Mateo, CA.\n[Klein and Horvitz, 1994] Klein, A. and Horvitz, E. ( 1994). Partial proofs and probability. In Proceed ings of the Fifth Workshop on Principles of Diag nosis, New Paltz, NY, pages 153-159. Principles of Diagnosis.\n[Mitchell et al., 1992] Mitchell, D. G., Selman, B., and Levesque, H. (1992). Hard and easy distribu tions of SAT problems. In Proceedings of the Tenth National Conference on Artificial Intelligence, pages 440-446. American Association for Artificial Intel ligence, AAAI Press I The MIT Press, Cambridge, MA.\n[Pittarelli, 1994] Pittarelli, M. (1994). Anytime deci sion making with imprecise probabilities. In Pro ceedings of Tenth Conference on Uncertainty in Ar tificial Intelligence, Seattle, WA, pages 470-477. Morgan Kaufmann, San Mateo CA.\n[Polya, 1954a] Polya, G. (1954a). Mathematics and Plausible Reasoning: Induction and analogy in mathematics, vol. 1. Princeton University Press, Princeton, New Jersey.\n[Polya, 1954b] Polya, G. (1954b). Mathematics and Plausible Reasoning: Patterns of Plausible Infer ence, vol. 2. Princeton University Press, Princeton, New Jersey.\n[Russell, 1990] Russell, S. (1990). Fine-grained decision-theoretic search control. In Proceedings of Sixth Conference on Uncertainty in Artificial In telligence, Cambridge, MA. Association for Uncer tainty in Artificial Intelligence, Mountain View, CA.\n[Russell et al., 1993] Russell, S., Subramanian, D., and Parr, R. ( 1993). Provable bounded optimal agents. In Proceedings of the Thirteenth Interna tional Joint Conference on Artificial Intelligence, Chambery, France, pages 338-344. International Joint Conference on Artificial Intelligence.\n[Selman et al., 1992] Selman, B., Levesque, H., and Mitchell, D. (1992). A new method for solving hard satisfiability problems. In Proceedings of the Tenth National Conference on Artificial Intelligence, pages 459-465. American Association for Artificial Intelli gence, AAAI Press, Cambridge, MA.\n[van der Poorten, 1995a] van der Poorten, A. (1995a). Notes on Fermat's Last Theorem. Wiley Inter science, New York.\n[van der Poorten, 1995b] van der Poorten, A. (1995b). Personal communication. Comments on strong be lief about truth of Fermat's last theorem before proof available."}], "references": [{"title": "An analysis of time-dependent planning", "author": ["Dean", "Boddy", "T. 1988) Dean", "M. Boddy"], "venue": "In Proceedings AAAI-88 Seventh National Confer\u00ad ence on Artificial Intelligence,", "citeRegEx": "Dean et al\\.,? \\Q1988\\E", "shortCiteRegEx": "Dean et al\\.", "year": 1988}, {"title": "Planning and Control, chapter 8.3 Tem\u00ad porally Flexible Inference, pages 353-363", "author": ["Dean", "Wellman", "T. 1991) Dean", "M. Wellman"], "venue": null, "citeRegEx": "Dean et al\\.,? \\Q1991\\E", "shortCiteRegEx": "Dean et al\\.", "year": 1991}, {"title": "Anytime deduction for probabilistic logic", "author": ["Frisch", "Haddawy", "A. 1995] Frisch", "P. Haddawy"], "venue": "Artificial Intelligence", "citeRegEx": "Frisch et al\\.,? \\Q1995\\E", "shortCiteRegEx": "Frisch et al\\.", "year": 1995}, {"title": "Reflection and action un\u00ad der scarce resources: Theoretical principles and em\u00ad pirical study", "author": ["Horvitz et al", "E. 1989] Horvitz", "G. Cooper", "D. Heckerman"], "venue": "In Proceedings of the Eleventh Inter\u00ad national Joint Conference on Artificial Intelligence,", "citeRegEx": "al. et al\\.,? \\Q1989\\E", "shortCiteRegEx": "al. et al\\.", "year": 1989}, {"title": "Time-dependent utility and action under uncertainty", "author": ["Horvitz", "Rutledge", "E. 1991] Horvitz", "G. Rut\u00ad ledge"], "venue": "In Proceedings of Seventh Con\u00ad ference on Uncertainty in Artificial Intelligence,", "citeRegEx": "Horvitz et al\\.,? \\Q1991\\E", "shortCiteRegEx": "Horvitz et al\\.", "year": 1991}, {"title": "Partial proofs and probability", "author": ["Klein", "Horvitz", "A. 1994] Klein", "E. Horvitz"], "venue": "In Proceed\u00ad ings of the Fifth Workshop on Principles of Diag\u00ad nosis,", "citeRegEx": "Klein et al\\.,? \\Q1994\\E", "shortCiteRegEx": "Klein et al\\.", "year": 1994}, {"title": "Hard and easy distribu\u00ad tions of SAT problems", "author": ["Mitchell et al", "D.G. 1992] Mitchell", "B. Selman", "H. Levesque"], "venue": "In Proceedings of the Tenth National Conference on Artificial Intelligence,", "citeRegEx": "al. et al\\.,? \\Q1992\\E", "shortCiteRegEx": "al. et al\\.", "year": 1992}, {"title": "A new method for solving hard satisfiability problems", "author": ["Selman et al", "B. 1992] Selman", "H. Levesque", "D. Mitchell"], "venue": "In Proceedings of the Tenth National Conference on Artificial Intelligence,", "citeRegEx": "al. et al\\.,? \\Q1992\\E", "shortCiteRegEx": "al. et al\\.", "year": 1992}, {"title": "Personal communication. Comments on strong be\u00ad lief about truth of Fermat's last theorem before proof available", "author": ["van der Poorten", "A. 1995b] van der Poorten"], "venue": null, "citeRegEx": "Poorten and Poorten,? \\Q1995\\E", "shortCiteRegEx": "Poorten and Poorten", "year": 1995}], "referenceMentions": [], "year": 2011, "abstractText": "In earlier work, we introduced flexible infer\u00ad ence and decision-theoretic metareasoning to address the intractability of normative infer\u00ad ence. Here, rather than pursuing the task of computing beliefs and actions with decision models composed of distinctions about uncer\u00ad tain events, we examine methods for inferring beliefs about mathematical truth before an automated theorem prover completes a proof. We employ a Bayesian analysis to update be\u00ad lief in truth, given theorem-proving progress, and show how decision-theoretic methods can be used to determine the value of continuing to deliberate versus taking immediate action in time-critical situations.", "creator": "pdftk 1.41 - www.pdftk.com"}}}