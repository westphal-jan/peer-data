{"id": "1303.5737", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "20-Mar-2013", "title": "Integrating Probabilistic Rules into Neural Networks: A Stochastic EM Learning Algorithm", "abstract": "thousands The politicking EM - algorithm is meegan a general terminologia procedure to get maximum likelihood sriprakash estimates if part oswaldtwistle of the striper observations vues on lare the tcisa variables of a network are missing. In elatior this paper a stochastic version of the algorithm uit is adapted to probabilistic acrimoniously neural 390-7707 networks kleptocratic describing the associative jawai dependency of 2,603 variables. outlive These networks have convirtio a polypill probability alveolo-palatal distribution, aerogel which is a lehrter special case of kathu the distribution civili generated ballarat by probabilistic technischen inference strapline networks. Hence screech both backbenches types ict of siamak networks gds can be compactification combined allowing to hocutt integrate cyclop\u00e6dia probabilistic giordano rules as freixo well as tamarac unspecified 1.216 associations ziri in a thyrocopa sound way. sompare The marley resulting thiomersal network may tema have sarazen a niederhoffer number tallied of interesting zolder features priaulx including gribbon cycles of medicean probabilistic rules, berardino hidden ' fets unobservable ' 51-48 variables, affiliates and door uncertain \u00e9cole and bhikkhus contradictory evidence.", "histories": [["v1", "Wed, 20 Mar 2013 15:32:18 GMT  (310kb)", "http://arxiv.org/abs/1303.5737v1", "Appears in Proceedings of the Seventh Conference on Uncertainty in Artificial Intelligence (UAI1991)"]], "COMMENTS": "Appears in Proceedings of the Seventh Conference on Uncertainty in Artificial Intelligence (UAI1991)", "reviews": [], "SUBJECTS": "cs.AI", "authors": ["gerhard paass"], "accepted": false, "id": "1303.5737"}, "pdf": {"name": "1303.5737.pdf", "metadata": {"source": "CRF", "title": "Integrating Probabilistic Rules into Neural Networks: A Stochastic EM Learning Algorithm", "authors": ["Gerhard Paass"], "emails": ["paass@icsi.berkeley.edu", "paass@gmdzi.gmd.de"], "sections": [{"heading": null, "text": "1 IN TRODUCTION\nProbabilistic inference networks (Pearl 1988) have been used to model uncertain causal relations be tween variables, for instance in a diagnostic sys tem. They consist of a number of rules each of which describes the probabilistic relation of few, typically two to five, variables. Each rule is as sumed to model some sort of 'weak' causal depen dency. Taken together these rules define the joint probability distribution of a large set of variables. Here we tacitly assume that according to the max imum entropy principle higher order interactions not affected by the rules are set to zero.\nThe rules should reflect theoretical or empirical knowledge about the corresponding domain. If, however, this knowledge is not available we may capture the probabilistic information in the data by an associative neural network (Anderson &\n'On leave from German National Research Institute for Computer Science (GMD), D-5205 St. Augustin; E-mail: paass@gmdzi.gmd.de\nRosenfeld 1988). Pairs of variables of such a net work are connected by weighted 'links' modelling their 'correlation'. Its representational power is based upon additional artificial 'hidden' variables used to approximate higher order interactions. The unkown parameters (weights) of a network are automatically adapted to the data by estima tion algorithms. Even complex dependencies can be approximated arbitrarily well if the number of hidden variables is sufficiently large (White 1989; Hertz et al. 1991, p.141ff).\nThe Boltzmann machine (Ackley et al. 1985) is a neural network which modifies its variables accord ing to a joint probability distribution. Together with the probabilistic inference network it forms a structure which is able to represent the proba bilistic rules as well as the associative data. An example of such a network describing the relation of discrete economic variables is shown in figure 1. All variables are discrete with the '+' meaning an increase of that quantity. The relation between some variables (Taxes+, Deficit+, Interest+, and Stocks+) is described by probabilistic rules based on theoretical considerations. To describe the re lation involving the remaining variables (Taxes+, Employ.+, Product.+, and Stocks+) an associa tive neural network with hidden variables Ht , . .. , H4 is assumed, as no specific functional relations are known.\nThe associative data and the probabilistic rules in general will not be compatible. To arrive at a sin gle joint distribution, we have to find some sort of compromise which is formed according to the relative reliability of the input information. The reliability of the information is described with a measurement distribution. The approach devel oped in this paper is able to combine conflicting information on probabilities and even may process networks with cycles.\nThe functional form of maximum entropy distri butions of discrete variables subject to constraints has been derived twenty years ago by Darroch and Ratcliff (1972). Paass (1989) proposed the integra tion of neural networks and probabilistic inference\nIntegrating Probabilistic Rules into Neural Networks: A Stochastic EM Learning Algorithm 265\n(Deficit+) ---\u00bb\u2022 (Interest -0\nFigure 1: Combined Network\nnetworks using a variant of the Boltzmann machine learning algorithm. Recently Hrycej (1990) dis cussed the relation between Gibbs sampling and probabilistic reasoning. His approach, however, imposes some restrictions, e.g. acyclic network structure, complete knowledge of all conditional probabilities (no truncation) , etc, which are not required in this paper.\nThe next section contains the basic definitions of probabilistic inference networks and the related Boltzmann machine. In section three the max imum likelihood estimation from conflicting evi dence is discussed. In section four a stochastic version of the EM-algorithm is used to determine the maximum likelihood estimate. The paper is concluded with a short discussion.\n2 PROBABILISTIC NETWORKS\nConsider a problem whose relevant features may completely be described in terms of k atomic propositions A1, . . . , Ak. Corresponding to each Ai, a random variable Xi is defined taking the val ues 1 if Ai holds and 0 otherwise. The variables are collected in a vector x := (x1, ... ,xk) whose 2k different values are called 'possible worlds' and form a set X. If B is the Boolean algebra generated from the Ai, each proposition B E B corresponds to the subset of Xn C X where B holds. To arrive at a simpler notation we write x E B instead of x E X B. The available information on the prob ability of the propositions is compiled into a joint probability distribution p : B--> [t, oo]. The prob ability of some proposition B E B is defined as p(B) := p(Xn) = LxEBp(x).\nThis setup is used for probabilistic inference net works as well as for associative neural networks. Therefore we can integrate both approaches using the common probability measure p(x). The struc ture of p(x) is assumed to be known in advance.\nLet us first consider a probabilistic inference net work where the expert's knowledge may be stated in terms of marginal probabilities, e.g. p(Cr) = qr, as well as 'probabilistic rules' which may be inter preted as restrictions on conditional probabilities, e.g. p(Cr I Br) = qr for propositions Cr, Br E B. These restrictions can be reformulated in terms of linear constraints of the form\nI:: br(x)p(x) = Cr r = 1, ... ,d ( 1) xEX\nFor marginal probabilities p( Cr) = qr the term br ( x) can be defined using the indicator function\n{ 1 if X E Cr br(x) := [Cr](x) := O th . o erw1se (2) and Cr := p(Cr)\u00b7 For conditional probabilities p( Cr I Br) = qr we set\nand Cr .- 0. If the constraints are not contradictory 1 , there exists a probability distribu tion p(x ), where all of them hold simultaneously.\nAs in general the number d of constraints is much lower than the number of all 2k elementary proba bilities p(x ), there is a large set P of different prob ability distributions, which simultaneously satisfy all constraints. Similar to (Cheeseman 1983) we se lect the distribution from P which maximizes the\n266 Paass\nentropy H(p) = - 2::.-ex p(x) logp(x) subject to the equality constraints (1), as for this distribution lowest 'interactions' between the variables result. It is unique and has the functional form (Darroch & Ratcliff 1972)\np (x) = z-1 exp (\ufffd.Xrbr(x)) (4)\nwith a multiplicative constant\nZ := 2::: exp (t Arbr(x)) rEX r=l\nwhich restricts the sum of probabilities to 1. The parameters Ar have to be determined in such a way that the constraints (1) hold.\nIf the parameters Ar are known, the equation ( 4) may be used to simulate the distribution p( x) by successively generating new values for the variables exploiting\np(x;=1 lx;) (5) 1 =\n1 + p (.X;o)/p (x;!) 1\n=\nwhere xi := (xt'. 0 . 'Xi-!, Xi+l' ... ' Xk) and X it := (x1, . . . , Xi-1, 1, Xi+l, ... , Xk) \u00b7 The terms br(.X;!) and br(.X;o) depend only on variables which are in volved in restriction r and there difference is zero if x; is not involved in that restriction. Then (5) shows that p(x;=1 I .X;) is only dependent on the vector of varibles different from x;, which simul taneously with x; are involved in some constraint (1). Such a structure is called a Markov random field (Kindermann & Snell 1980) and corresponds to a a nearest neighbor Gibbs potential (Paass 1989; Hrycej 1990). To generate values according to this distribution we may start with an arbitrary vector x, select components x; at random, and alter their values according to (5). The sequence of vectors evolving from this procedure will have the desired distribution.\nThe Boltzmann machine (Ackley et a!. 1985) is a probabilistic neural network where some pairs of variables x;.,xj., r = 1, . . . ,d, are connected by links with weights Ar E lR indicating the mutual dependency or 'correlation' of x;. and xi.\u00b7 Note that Ar = 0 if there is no direct dependency. Using\n(6)\nthe probability of a possible world x is defined by ( 4) (Aarts & Korst 1988, p.207). Hence the Boltzmann machine generates a distribution that has the same form as the maximum entropy dis tribution subject to the restriction of p (A;;\\Aj.), r = 1, ... , d, to some value. Therefore uncer tain reasoning in probabilistic inference networks\nas well as 'associative reasoning' in neural networks may be combined within one framework. In a neural network some of the variables are hidden units, for whom there are no observations avail able. These hidden units have no simple sym bolic interpretation. They are, however, capable to represent arbitrary probabilistic relations, whereas networks without hidden units may only represent linear dependencies. The representational capabil ities of neural networks are discussed by Hertz et al. (1991, p.l41ff).\n3 MAXIMUM LIKELIHOOD ESTIMATION\nThe structure of the network has to be fixed in advance. Accordingly we have to determine which variables directly interact - as indicated in the ex ample in figure 1. In addition we know the func tional form ( 4) of the probabilities except for the numerical parameters. For each probabilistic in ference rule there is a br (x)-term according to (1), while each bivariate link in an associative 'neural network' substructure corresponds to an appropri ate br(x)-term according to (6).\nThe probability values assigned to rules and es pecially the associative data may be subject to some error and in general are contradictory. There fore these data items, denoted by if.r, are assumed to originate from independent random samples Sr with nr elements generated according to the true distribution. If if.r corresponds to the probability of some proposition p ( Cr) then we do not know the values for all variables x;, but we only know whether Cr holds or not. The fraction of records where Cr holds is just our observed probability if.r\u00b7 Hence we have a missing data situation. We get the binomial distribution P (if.r I qr,>.) as the 'sam pling distribution' describing the deviation of the observed probability if.r from the theoretical value p ( Cr ). This deviatioi;l gets smaller with increas ing sample size nr. As our samples are imaginary2 we can select nr in such a way that, for instance, the true probability p ( Cr) is contained in a given interval [a, b] with a probability of, say, 0.9.\nIf if.r corresponds to a probabilistic rule p ( Cr I Br ), the sample Sr is generated in a twostep procedure. First a sample Sr of size Nr is selected from the complete distribution. Then all sample elements where Br does not hold are removed. For each element of the remaining sample Sr of size nr it is only reported whether Cr holds or not. As part of the population is ignored, Sr is called a truncated sample. The deviation between if.r and p ( Cr I Br) again is described by a binomial distribution where\n2In the case that real samples are available, eg. from a statistical survey or a measurement device, we may use them instead.\nIntegrating Probabilistic Rules into Neural Networks: A Stochastic EM Learning Algorithm 267\nnr can be selected to reflect the reliability of the value.\nData on the associative relation between variables also can be understood as an independent sam ple Sr of size nr covering a subvector y of visi ble variables. This time the sample is assumed to stem from real observations of the system in ques tion. There is no special constraint related to Sr as the stochastic relation between the y-va.riables are communicated by hidden variables not contained in y. To illustrate the situation consider the fol lowing example. Assume we have k = 5 variables x1, . . . , x5 and three pieces of information:\nS1: a sample with n1 = 20 elements on the marginal probability p(Ct) with Ct = {x I x1 =1} and an observed relative frequency iit = 0.8.\nS2: a sample with n2 = 10 elements on the condi tional probability p( c2 I B2) with c2 = {X I X4=l} and B2 = {x I Xt=l 1\\ X2=l} and an observed relative frequency if2 = 0.3.\nSa: a sample with na = 10 elements on the stochastic relation between the variables y = (x2, xa, x4 ) . To communicate this relation we have symmetric bivariate links between the hidden variable x5 and the visible variables X2, X3, X4.\nWe must relate these samples to the joint distri bution. While S1 and Sa are assumed to cover the joint distribution, the sample s2 is truncated to the subset where B2 is valid. Therefore we use the 'extended' sample S2 which contains also el ements where -,B2 holds. However, the number ii2 of these records is unknown. Indicating miss ing data items by '?' table 1 shows the resulting records in the samples. In the sample S2 we even do not know the sample size N2 := n2 + ii2, as part of the records are missing. We may pool to gether all these samples to a comprehensive sample S which in turn may be as a random sample from our distribution. In our example it is defined as S := (S1,S2,Sa). Note that there may exist sev eral samples corresponding to different associative sub-networks. Similar to the conditional probabil ities of rules these samples may be truncated, i.e. cover specific situations only.\nAssuming that all information about the parame ters of the distribution is contained in S and that all samples have been obtained independently, we may use the maximum likelihood approach ( cf. Paass 1988) to determine the optimal parameter A as the solution of\nII P(qr I qr,>.) = mtx II P(qr I qr,>.) (7) r r In (Paass 1989) the derivatives of this likelihood function with respect to the parameters Ar are calculated. Starting with some parameter values\nwe subsequently may use gradient techniques to determine the maximum. The resulting 'general ized Boltzmann machine learning algorithm' has the characteristic that for the current .\\-values spe cific probabilities have to be estimated by stochas tic simulation using (5). In addition a non-linear equation system has to be solved for each iteration if cycles are present in the network which involve probabilistic rules.\nThe Boltzmann machine is very computation in tensive. Nevertheless in the area of associative networks they are found to capture the under lying statistical relations in a very effective way. In a detailed comparison on a statistical decision task, Kohonen et al. (1988) found that the Boltz mann machine achieved considerably better accu racy than a backpropagation network. The choice of various process parameters is an active research field (Hertz et al. 1991, p.168ff) ."}, {"heading": "4 THE STOCHASTIC EM-ALGORITHM", "text": "As an alternative we consider a sample-based procedure to determine the parameters of p(x). In essence we reconstructs the missing items of the pooled sample S =: (xp), .. . , X(n)) described above, whose elements are denoted by X(i). This is just the approach of the stochastic EM-algorithm (Celeux & Diebolt 1988), which is a random ver sion of a general procedure for handling missing data in maximum likelihood problems (Dempster et al. 1977). This algorithm starts with some arbitrarya parameter vector ,\\ and iterates the fol lowing steps:\nE-step: Assume X(j) = (Y(i), Z(j)) is an arbitrary record of the comprehensive sample S and let Y(i) be the vector of actually observed values. Then for each Y(i) the value of Z(j) is ran domly generated according to the conditional distribution P>. (z(i) I Y(;)) given the values Y(i) and the current parameter A. In the case of truncated samples S; the expected value of the sample size ii; of the truncated portion is es timated. Hence all missing data items are re placed by imputed values.\nM-step: In this step a maximum likelihood estimation of the parameters ,\\ is performed using the im puted values as if they were actually observed. With the new ,\\ the E-step is performed again.\nThe procedure stops if the parameter vector A reaches a stationary point. In some sense the sam-\n3The starting parameters should be different from saddlepoints, as the procedure stops there. For associa tive data this means that the hidden variables should be dependent on the visible variables, i.e .\\r # 0.\n268 Paass\npie S can be understood as a parametrization of the complete distribution. By the law of large numbers the approximation of the distribution gets better if the sample size n is increased, for instance by duplicating each record in S sufficiently often. For n --> oo the distribution can be represented arbitrarily well.\nIt has been shown (Celeux & Diebolt 1988) that for n --> oo under rather general conditions the parameter \ufffd estimated by the stochastic EM algo rithm corresponds to a local minimum of the likeli hood function. Empirical evidence shows that the stochastic imputation step allows the algorithm to escape from local minima. The convergence prop erties of the usual EM-algorithm are discussed by Wu (1983).\nTo perform the stochastic E-step we first have to estimate the weights of trunctated records in trun cated samples. These weights simply are selected as the empirical fractions of records with the cor responding values in the current complete sample S. This gives the new sample sizes N; of the trun cated samples. Then we may use (5) together with ( 4) to generate new values stochastically accord ing to the current value of A. For each X(i) we start with the present values and randomly select a component of Z(i). Its value is randomly deter mined using (5). After a number of such modifica tions Z(i) fluctuates according to the distribution p(Z(i) I Y(i))\u00b7 The adaption to the new distribution will be particularly fast as the existing values are used as starting states and the difference between the conditional distributions usually will be small.\nFor the M-step we know that for each variable x; the conditional probabilities p(x; I x;) should fol low the relations (5) and (4). From the binomial\ndistribution we get the log-likelihood function n\ni=l n 1\n= :E :E ji(xi(j)=m I Xi(i)) j=l m=O\n(8)\n* log p(xi(j)=m I Xi(i)) where ji(xi(j)=l I Xi(j)) is the observed probabil ity in record X(i), i.e. has the value 0 or 1. The derivative of L; with respect to Ar is, using (5), given by\n8L;i [p(x;=ll xi)_ 1-p(x;=l I x;)] 8Ar p(x;=l 1 xi) 1- p(x;=l I x;)\n8p(x;=l 1 x;) * 8Ar\nWe have omitted the index (j) for simplic ity. Defining Xi! := (x;=l, x;) and R; := p(x;=O, x;)fp(x;=l, x;) we find from (5)\n8p(x;=l I x;) _ -\ufffd 8Ar (1 + R;)2\n(9)\nAs R; = exp (E\ufffd=l A,[br(x;o)- br(xw)J) we get\n\ufffd\ufffd = R;[br(x;o)- br(x;o)]\nNote that R; can be determined from (5) and ( 4) using the current parameters A,. According to the Hammersley-Clifford theorem (Besag 1974) the distribution p( x) is completely determined if we know the conditional distributions p(x; I x;), i = 1, . . . , k. Hence the estimation of the con ditional distributions from our sample completely determines the unkown parameters A. We evalu ate \ufffd for each x; and modify the current values of Ar according to L\ufffd=l \ufffd. The maximumum\nIntegrating Probabilistic Rules into Neural Networks: A Stochastic EM Learning Algorithm 269\nlikelihood estimates are developed under the as sumption that we have for each x; an independent version of the synthetic sample S. This can be generated by stochastic simulation. However, pre liminary experience shows that we may use a single sample for all variables.\nAn alternative approach uses (4) to express the log-likelihood of the pooled sample S\nn\nlogp(S) == \ufffd )ogp(x(i)) (10) j=l\nWe get the derivatives\n8logp(x(j)) _ b ( . ) _ 8log(Z) {)).r - r X(J) {)).r (11)\n81og Z 8>:;\"\n==\n==\n\ufffd \ufffd exp (\ufffd >.,b,(x)) br(x) exp (E\ufffd=l >.,b,(x)) L Z br(x) rEX L P-\\(x)br(x) rEX\nwhich is just the expected value of br(x) for the current >.. Hence the derivative with respect to Ar\n(12)\nis just the sum of differences between the mean value of br for the distribution with parameter ). and the actual values of br(xu!) for the elements of the sample. This is a simphfied version of the Boltzmann machine learning algorithm.\n5 D ISCUSSION\nSimilar to the Boltzmann machine the stochastic EM-algorithm involves a stochastic simulation of the variables. As only missing data items have to be imputed we have a 'clamped' simulation where the values of variables are used if they are known. In contrast to (Paass 1989) it is not necessary to solve a nonlinear equation system for each itera tion. Currently empirical investigations are car ried out to determine the relative computational efficiency of the stochastic EM-approach.\nThe algorithm developed in this paper may be used to incorporate probabilistic rules in a 'soft' way. We may start with a neural network containing only bivariate links (6) and introduce probabilistic rules into a joint sample simply as data as shown in\ntable 1. After the learning algorithm has adapted to the data it should be able reproduce the rules in an approximate way. But the network is only an approximation to the maximum entropy distribu tion ( 4) which results if the probabilistic rules are 'hardwired' into the network. The conditional in dependence assumptions implied by the structure of the rule network may be invalid to some degree. There is more research needed to judge the effect of such errors. The EM-algorithm allows to com pare the 'soft' with the 'hardwired' approach in a unified way.\nAcknowledgements\nThis work was supported in part by the German Federal Department of Research and Technology, grant ITW8900A7.\nReferences\nA arts, E., Karst, J. (1988). Simulated Annealing and Boltzmann Machines. Wiley, Chichester Ackley, D., Hinton, G.E., Sejnowski, T.J. (1985). A Learning Algorithm for the Boltzmann machine. Cognitive Science, Vol.9 pp.147-169 Anderson, J.A., Rosenfeld, E. (1988). Neurocom puting: Foundations of Research. MIT Press, Cambridge, Ma.\nBesag, J. (1974). Spatial Interaction and Statis tical Analysis of Lattice Systems. Journal of The Royal Statistical Society, Series B., p.192-236 Celeux, G., Diebolt, J. (1988). A Random Im putation Principle: The Stochastic EM Algorithm. Tech. Rep. No.901, INRIA, 78153 Le Chesnay, France Cheeseman, P. (1983). A Method of Computing Generalized Bayesian Probability Values for Ex pert Systems. Proc. IJCAI'83. Kaufmann, Los Altos, California. Darroch, J.N., Ratcliff, D. (1972). Generalized It erative Scaling for Log-Linear Models. The Annals of Mathematical Statistics, Vol.43, p.1470-1480 Dempster, A.P., Laird, N.M., Rubin, D.B. (1977). Maximum Likelihood from Incomplete Data via the EM algorithm (with discussion). Journal of the Royal Statistical Society, Vol.B-39, p.1-38 Hrycej, T. (1990). Gibbs Sampling in Bayesian Networks. Artificial Intelligence. Vol. 46, p.351363 Hertz, J ., Krogh, A., Palmer, R.G. (1991). In troduction to the Theory of Neural Computation. Addison Wesley, Redwood City. Kindermann, R., Snell, J.L. (1980). Markov Ran dom Fields and their Applications. American Math. Society, Providence, R.I.\nKohonen, Barna, G., Chrisley, R. (1988). Statis-\n270 Paass\ntical Pattern Recognition with Neural Networks: Benchmarking Studies. In proc. IEEE Interna tional Conference on Neural Networks (San Diego 1988), vol. I, p. 61-68. New York: IEEE.\nPaass, G. (1988). Probabilistic Logic. In: Smets, P., A. Mamdani, D.Dubois, H.Prade (eds.) Non Standard Logics for Automated Reasoning, Aca demic Press, London, p.213-252\nPaass, G. (1989). Structured Probabilistic Neural Networks. Proc. Neuro-Nimes '89 p.345-359 Pearl, J. (1988). Probabilistic Reasoning in Intelli gent Systems, Morgan Kaufmann, San Mateo, Cal. White, H. (1989). Some Asymptotic Results for Learning in Single Layer Feedforward Net work Models. J. American Statistical Association. Vol.84, p.1003-1013.\nWu, C.F. (1983). On the Convergence Properties of the EM algorithm. Annals of Statistics. Vol.ll, p.95-103."}], "references": [{"title": "Simulated Annealing and Boltzmann Machines", "author": ["E. A arts", "J. Karst"], "venue": "Wiley, Chichester", "citeRegEx": "arts and Karst,? 1988", "shortCiteRegEx": "arts and Karst", "year": 1988}, {"title": "A Learning Algorithm for the Boltzmann machine", "author": ["D. Ackley", "G.E. Hinton", "T.J. Sejnowski"], "venue": "Cognitive Science, Vol.9 pp.147-169 Anderson, J.A., Rosenfeld, E. (1988). Neurocom\u00ad puting: Foundations of Research. MIT Press,", "citeRegEx": "Ackley et al\\.,? 1985", "shortCiteRegEx": "Ackley et al\\.", "year": 1985}, {"title": "Spatial Interaction and Statis\u00ad tical Analysis of Lattice Systems", "author": ["J. Besag"], "venue": "Journal of The Royal Statistical Society, Series B., p.192-236 Celeux, G., Diebolt, J. (1988). A Random Im\u00ad putation Principle: The Stochastic EM Algorithm.", "citeRegEx": "Besag,? 1974", "shortCiteRegEx": "Besag", "year": 1974}, {"title": "A Method of Computing Generalized Bayesian Probability Values for Ex\u00ad pert Systems", "author": ["P. Cheeseman"], "venue": "Proc. IJCAI'83. Kaufmann, Los Altos, California.", "citeRegEx": "Cheeseman,? 1983", "shortCiteRegEx": "Cheeseman", "year": 1983}, {"title": "Generalized It\u00ad erative Scaling for Log-Linear Models", "author": ["J.N. Darroch", "D. Ratcliff"], "venue": "The Annals of Mathematical Statistics, Vol.43, p.1470-1480", "citeRegEx": "Darroch and Ratcliff,? 1972", "shortCiteRegEx": "Darroch and Ratcliff", "year": 1972}, {"title": "Maximum Likelihood from Incomplete Data via the EM algorithm (with discussion)", "author": ["A.P. Dempster", "N.M. Laird", "D.B. Rubin"], "venue": "Journal of the Royal Statistical Society, Vol.B-39, p.1-38", "citeRegEx": "Dempster et al\\.,? 1977", "shortCiteRegEx": "Dempster et al\\.", "year": 1977}, {"title": "Gibbs Sampling in Bayesian Networks", "author": ["T. Hrycej"], "venue": "Artificial Intelligence. Vol. 46, p.351363", "citeRegEx": "Hrycej,? 1990", "shortCiteRegEx": "Hrycej", "year": 1990}, {"title": "In\u00ad troduction to the Theory of Neural Computation", "author": ["A. Krogh", "R.G. Palmer"], "venue": null, "citeRegEx": "Krogh and Palmer,? \\Q1991\\E", "shortCiteRegEx": "Krogh and Palmer", "year": 1991}, {"title": "Markov Ran\u00ad dom Fields and their Applications", "author": ["R. Kindermann", "J.L. Snell"], "venue": "American", "citeRegEx": "Kindermann and Snell,? 1980", "shortCiteRegEx": "Kindermann and Snell", "year": 1980}, {"title": "Probabilistic Logic", "author": ["G. Paass"], "venue": "In: Smets, P., A. Mamdani, D.Dubois, H.Prade (eds.) Non\u00ad Standard Logics for Automated Reasoning, Aca\u00ad", "citeRegEx": "Paass,? 1988", "shortCiteRegEx": "Paass", "year": 1988}, {"title": "Structured Probabilistic Neural Networks", "author": ["G. Paass"], "venue": "Proc. Neuro-Nimes '89 p.345-359", "citeRegEx": "Paass,? 1989", "shortCiteRegEx": "Paass", "year": 1989}, {"title": "Probabilistic Reasoning in Intelli\u00ad gent Systems", "author": [], "venue": null, "citeRegEx": ".1988..,? \\Q1988\\E", "shortCiteRegEx": ".1988..", "year": 1988}, {"title": "Some Asymptotic Results for Learning in Single Layer Feedforward Net\u00ad work Models", "author": ["H. White"], "venue": "J. American Statistical Association. Vol.84, p.1003-1013.", "citeRegEx": "White,? 1989", "shortCiteRegEx": "White", "year": 1989}, {"title": "On the Convergence Properties of the EM algorithm", "author": ["C.F. Wu"], "venue": "Annals of Statistics. Vol.ll, p.95-103.", "citeRegEx": "Wu,? 1983", "shortCiteRegEx": "Wu", "year": 1983}], "referenceMentions": [{"referenceID": 1, "context": "The Boltzmann machine (Ackley et al. 1985) is a neural network which modifies its variables accord\u00ad ing to a joint probability distribution.", "startOffset": 22, "endOffset": 42}, {"referenceID": 4, "context": "The functional form of maximum entropy distri\u00ad butions of discrete variables subject to constraints has been derived twenty years ago by Darroch and Ratcliff (1972). Paass (1989) proposed the integra\u00ad tion of neural networks and probabilistic inference", "startOffset": 137, "endOffset": 165}, {"referenceID": 4, "context": "The functional form of maximum entropy distri\u00ad butions of discrete variables subject to constraints has been derived twenty years ago by Darroch and Ratcliff (1972). Paass (1989) proposed the integra\u00ad tion of neural networks and probabilistic inference", "startOffset": 137, "endOffset": 179}, {"referenceID": 6, "context": "Recently Hrycej (1990) dis\u00ad", "startOffset": 9, "endOffset": 23}, {"referenceID": 3, "context": "Similar to (Cheeseman 1983) we se\u00ad lect the distribution from P which maximizes the", "startOffset": 11, "endOffset": 27}, {"referenceID": 10, "context": "Such a structure is called a Markov random field (Kindermann & Snell 1980) and corresponds to a a nearest neighbor Gibbs potential (Paass 1989; Hrycej 1990).", "startOffset": 131, "endOffset": 156}, {"referenceID": 6, "context": "Such a structure is called a Markov random field (Kindermann & Snell 1980) and corresponds to a a nearest neighbor Gibbs potential (Paass 1989; Hrycej 1990).", "startOffset": 131, "endOffset": 156}, {"referenceID": 10, "context": "In (Paass 1989) the derivatives of this likelihood function with respect to the parameters Ar are calculated.", "startOffset": 3, "endOffset": 15}, {"referenceID": 11, "context": "(1988) found that the Boltz\u00ad mann machine achieved considerably better accu\u00ad racy than a backpropagation network.", "startOffset": 0, "endOffset": 7}, {"referenceID": 5, "context": "This is just the approach of the stochastic EM-algorithm (Celeux & Diebolt 1988), which is a random ver\u00ad sion of a general procedure for handling missing data in maximum likelihood problems (Dempster et al. 1977).", "startOffset": 190, "endOffset": 212}, {"referenceID": 11, "context": "It has been shown (Celeux & Diebolt 1988) that for n --> oo under rather general conditions the parameter \ufffd estimated by the stochastic EM algo\u00ad rithm corresponds to a local minimum of the likeli\u00ad hood function. Empirical evidence shows that the stochastic imputation step allows the algorithm to escape from local minima. The convergence prop\u00ad erties of the usual EM-algorithm are discussed by Wu (1983).", "startOffset": 35, "endOffset": 405}, {"referenceID": 2, "context": "According to the Hammersley-Clifford theorem (Besag 1974) the distribution p( x) is completely determined if we know the conditional distributions p(x; I x;), i = 1, .", "startOffset": 45, "endOffset": 57}, {"referenceID": 10, "context": "In contrast to (Paass 1989) it is not necessary to solve a nonlinear equation system for each itera\u00ad tion.", "startOffset": 15, "endOffset": 27}], "year": 2011, "abstractText": "The EM-algorithm is a general procedure to get maximum likelihood estimates if part of the observations on the variables of a network are missing. In this paper a stochastic version of the algorithm is adapted to probabilistic neural networks describing the associative dependency of variables. These networks have a proba\u00ad bility distribution, which is a special case of the distribution generated by proba\u00ad bilistic inference networks. Hence both types of networks can be combined al\u00ad lowing to integrate probabilistic rules as well as unspecified associations in a sound way. The resulting network may have a number of interesting features including cycles of probabilistic rules, hidden 'un\u00ad observable' variables, and uncertain and contradictory evidence.", "creator": "pdftk 1.41 - www.pdftk.com"}}}