{"id": "1401.4872", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "20-Jan-2014", "title": "Classification of IDS Alerts with Data Mining Techniques", "abstract": "A 2130gmt data suficiente mining kokonin technique deronjic to sozialistische reduce the amount of kecheng false huaping alerts yepsen within an 24.06 IDS 2,125 system hamot is orderings proposed. The new technique 36s achieves dozens an accuracy santos of 99% 514th compared tokyo-based to hajira 97% by the current systems.", "histories": [["v1", "Mon, 20 Jan 2014 11:58:23 GMT  (666kb)", "http://arxiv.org/abs/1401.4872v1", "2012 International Conference on Internet Study (NETs2012), Bangkok, Thailand"]], "COMMENTS": "2012 International Conference on Internet Study (NETs2012), Bangkok, Thailand", "reviews": [], "SUBJECTS": "cs.CR cs.DB cs.LG", "authors": ["hany nashat gabra", "ayman mohammad bahaa-eldin", "huda korashy"], "accepted": false, "id": "1401.4872"}, "pdf": {"name": "1401.4872.pdf", "metadata": {"source": "CRF", "title": "Classification of IDS Alerts with Data Mining Techniques", "authors": ["Hany Nashat Gabra", "Ayman M. Bahaa-Eldin"], "emails": ["hanynashat@hotmail.com", "ayman.bahaa@eng.asu.edu.eg", "hoda.korashy@eng.asu.edu.eg"], "sections": [{"heading": null, "text": "Intrusion detection systems (IDSs) have become a widely used measure for security, but we still have a problem on those systems results which includes many irrelevant alerts, so we will propose a data mining based method for classification to distinguish serious alerts and irrelevant one with the performance of 99.9 % in comparison with the other recent data mining methods which have reached the performance of 97%. Also we create a list of alerts sorted by alert\u2019s importance to minimize the human interventions.\nKeyword: Intrusion Detection, Data Mining, Frequent Pattern, Frequent Itemset, support\n1. INTRODUCTION\nAlthough the IDS is a security measure for network monitoring and protection but unfortunately the IDSs are known to generate large amounts of alerts, with many of them being either false positives or of low importance. Which is hard for human to find alerts that need more attention, in order to tackle this difficulty; we proposed an IDS alert classification and alert ranking method based on an enhanced data mining technique. An IDS sensor can generate thousands of alerts in a day [1, 2]. Furthermore, often vast majority of the alerts are false positives or of low importance [3,1]. As mentioned that it is usual to receive thousands of alerts from a single network IDS sensor per day, with more than 90% of the alerts being irrelevant [16, 20, 8] so an IDS alert log\u2019s analysis techniques are often used to distinguish the important IDS alerts from irrelevant events. Many approaches have been suggested like machine learning [4], time series modeling [8, 5], the use of the control charts [6], etc. During the last 10 years, data mining based methods have also been proposed in many researches papers [16, 20, 7, 3, 9, 10]. With these methods, IDS alert logs that recently logged are mined for knowledge that is used for the creation of event filtering for future IDS alerts.\nHowever, existing methods are inherently automated or semi-automated but they assume that a human expert interprets detected knowledge and creates event filtering and correlation rules by hand. In the proposed technique we classified the alerts based on a data mining technique that has been enhanced for the IDS systems to distinguish serious alerts and irrelevant one. The result showed that the performance has been enhanced as we reduced the number of alerts to 99.9 % in comparable with the performance of other recent techniques which have reduced the number of alerts by 74-97% [16, 2, 9, 10, 1].\n2. RELATED WORK\nData mining techniques first used for knowledge discovery from telecommunication event logs more than a decade ago [13]. In the context of IDS alerts mining, a number of techniques have been suggested. Clifton and Gengo [7] have investigated the detection of frequent alert sequences and enhanced by Ferenc [11], Walter A. Kosters and Wim Pijls [12], to use this knowledge for creating IDS alert filters. Long et al. [3] suggested a clustering algorithm for distinguishing Snort IDS true alerts from false positive alerts. Julisch and Dacier [16] also proposed a conceptual clustering technique for IDS alert logs as well, so that clusters correspond to alert descriptions, and a human experience can be used for developing filtering and correlation rules for future IDS alerts. Many of other approaches have been suggested like machine learning [4], time series modeling [8, 5], the use of the control charts [6], etc. During the last 10 years, data mining based methods have also been proposed in many researches papers [16, 20, 7, 3, 9, 10].\n3. THE ALERT CLASSIFIER\nA frequent pattern based outlier detection based method for discovering knowledge from the IDS alert logs and creating alert classifiers from this knowledge in a semi-automated manner has been used on our proposed technique. This method is motivated by the main drawbacks of previously proposed data mining approaches and its automation that considered mistakenly serous alerts as an irrelevant or fails positive. On 2009 Risto Vaarandi [1] proposed an automated technique and had created a main drawback as mentioned of classifying true attacks as a false positive. Some researchers have observed the that the most alerts are triggered by only a few signatures [1] and in [8] it is reported that 68% of the alerts were produced by five signatures, while according to [5] seven signatures produced 77% of the alerts. Also it has been noticed that if a signature has triggered many alerts over a longer periods of time, it is most properly will do so in the future. When we investigated routine alerts from IDS sensors, we found that they are either false positives or events of low importance. A prominent alert of low importance is related to MS Slammer Sapphire worm which infected many computers around the world in 2003. Despite vast majority of these computers were cleaned and patched, there are still infected nodes around that are constantly scanning the Internet for victims. Although this malicious network traffic triggers many alerts, they represent a very frequent and well-known attack that doesn\u2019t pose a threat to properly maintained systems. We believe that the identification of such routines and alerts ranking is important. First, it helps to save human effort that is spent for editing alert filters. Therefore, security analysts will have\nmore time for reviewing important alerts which don\u2019t match routine alert patterns and thus deserve closer investigation. Second, since most IDS alerts are routine events, there will be much less important alerts to investigate than in the original IDS log. Third, we improve the detection result reliability of the automated method that has been used by Risto Vaarandi [1, 21]. Risto Vaarandi used LogHound to employ a frequent itemset mining algorithm for discovering frequent patterns from event logs. We proposed a new technique in order to detect the true attacks directly by ranking all alerts according to Classification of IDS Alerts & Ranking using Data Mining Techniques their impotency and save human effort. The new outlier detection methodology have applied to rearrange the snort output according to the alert importance so security analysts will have more time for reviewing the important alerts first then to investigate the less important one. Outlier detection is a new data mining technique which has absorbed many attentions recently. It is able to identify abnormal data (called outlier) in large datasets. Frequent pattern-based outlier detection is presented by Zengyou He et al. in [19]. This method is built on the following truth: given a set of supermarket transactions, where each transaction is a set of literals (called items). Frequent itemsets (also called frequent patterns) are those combinations of items that have transaction support above predefined minimum support (support means percentage of transactions containing these itemsets). If a transaction contains many frequent itemsets, it means that this transaction is unlikely to be an outlier because it possesses the \u201ccommon features\u201d. Accordingly, by employing the Frequent pattern-based outlier detection based method the cost wasted for processing false positives will be reduced and the reaction to attacks will be more rapid.\n4. Mining Frequent Patterns\nMining frequent itemsets from a database has been solved largely by algorithms that are Apriori based and those that are pattern-tree growth techniques. Algorithms for mining of all existing techniques do not include generating frequent patterns for each transaction or by anther meaning do not show the records where they occurred with their transaction ids. For many applications, just producing the frequent patterns without linking them to the specific transactions they occurred in may not be adequate. None of the frequent itemset mining algorithms considers mining frequent patterns with their transactions.\nAssume a data set which contains alert records generated by an IDS system in Table 1 where the set of items I = {1, 2, 3, 4, 5} and the set of Alerts = {Alert1, Alert2, Alert3, Alert4}. Mining all alerts that have similar frequent itemset at minimum support of 50% would require generating frequent itemsets with the alerts in the format [< itemset > Alerts-list] that allows mining more informative large itemsets as: L = { [< 1 > Alert1Alert3], [< 2 > Alert 2 Alert 3 Alert 4], < 3 > Alert 1 Alert 2 Alert 3], [< 5 > Alert 2D3 Alert 4], [< 1, 2 > Alert 2 Alert 3 Alert 4],[< 1, 3 > Alert 1 Alert 3], [< 2, 3 > Alert 2 Alert 3], [< 2, 5 > Alert 2 Alert 3 Alert 5], [< 3, 5 > Alert 2 Alert 3], [< 2, 3, 5 > Alert 2 Alert 3]}. We proposed the AlertFp algorithm for mining frequent patterns with the Alerts where they occurred. Mining Fps with Alerts on an IDS log is an important goal of this algorithm where we are linking all frequent patterns to the data set records or alert\u2019s transactions where they came from. Then count the number of frequent patter founded on each transaction. Finally all transactions in the dataset re-sorted according to the number of the related frequent patters. AlertFp algorithm represents each frequent k-pattern as form < Fk1, Alert1k1, Alert2k1, . . . , Alertmk1>, where Fk1is the first frequent k-pattern, and Alertmk1 is the mth Alert of the first frequent k-pattern. For example, given Table1 and mini support of 50% (pattern exists on 50% of the whole alerts at least / 2 alerts at least), the list of frequent 1-itemsets is F1 ={< 1, Alert1,Alert3 >, < 2,Alert2, Alert3,Alert4 >, < 3, Alert1, Alert2, Alert3 >, < 5, Alert2, Alert3, Alert4 >}. This implies as well that the candidate 1-itemsets listed by this technique is in the same form as: C1 ={< P1, Alert11, Alert21, . . . , Alertm1 >}, where P1 is the first candidate 1-pattern, and Alertm1 is the mth Alert of the first candidate 1-pattern. For our example data set, the candidate 1-pattern is given as C1 ={< 1, Alert1,Alert3 >, < 2, Alert2, Alert3, Alert4 >, < 3, Alert1, Alert2, Alert3 >, < 4, Alert1 >, < 5, Alert2, Alert3, Alert4 >}. Thus, with this AlertFp technique, the data set is scanned only once to obtain the candidate 1- itemsets with a list of their Alerts. The Alerts of each candidate pattern is implemented. Then, the count of each candidate pattern\u2019s Alerts is equivalent to the support of the pattern. The pattern or the itemsets having support less than the mini support are excluded from the frequent 1- itemsetAlertFP leading to the itemset <4, Alert1> being deleted from the C1 list to get F1 as we predefined the mini support as 50%. AlertFp algorithm applies the Apriori function, which works on two components of the itemsets consisting of the itemset part and the alert part and obtaining higher order frequent itemsets for their supports. After applying the frequent pattern mining algorithm to past IDS alert logs (AlertFp), in order to discover patterns that describe redundant alerts. Alert weight is measured by calculating Frequent Pattern Outlier Factor (FPOF) for each alert\u2019s transaction.\nFPOP (t) = x t, FPS\u2211\nThe interpretation of the above formula is as follows [19]. If a transaction t contains more frequent patterns, its FPOF value will be big, which indicates that it is unlikely to be an outlier.\nIn contrast, transactions with small FPOF values are likely to be outliers or to be considered as an interesting alert to be investigated by the administrator. By using x t, FPS\u2211 s and re-order the IDS alerts by the simple FPOF for\nsimplicity. Accordingly, we will have the important alerts on the top of IDS log and irrelevant\nalerts will be pushed to the end of the log file.\nAlgorithm 1. (Alert:Computing Frequent Patterns with Alerts)\nAlgorithm AlertFp()\nInput: A list of k-items, Alert Set of k-Alerts, mini-support s.\nOutput: A list of frequent patterns Fps and the relative Alert.\nBegin\n1. Scan the Data Set once to compute\n2. Compute frequent pattern F1 from candidate k-itemsets\nC1 as F1 = {list of k itemset with Alertslist count \u2265 minsupport , Alert1counter}.\n3. For Fi < k i=1 m=0 Counter=0 do\nBegin\n3.1. If Fi \u20ac Alertmi then counter(m)++\n3.2. i = i+1, m=m+1\n3.3. Compute the next candidate set Ci+1 as F1\nEnd\n5. CASE STUDY\nSnort [22] is a widely used IDS sensor package that applies attack signatures for detecting\nsuspicious network traffic and can emit alerts as syslog messages. Here we will base our case\nstudy on the Snort standard attributes (figure1 )\nConsider the below Snort sample (figure 2). This sample will be used to simply clarify the idea\nWe employed the frequent itemset mining for discovering the frequent patterns from the sample\nIDS log, figure 3.depicts patterns detection from the above snort sample.\nFinally the alerts are simple sorted in ascending order according to their weight (simple FPOF) and top p% of them is put into the set of candidate true alerts. Definition 1 (Frequent Pattern Outlier Factor [19]) Let D = {t1,\u2026tn} be a set of n transactions. upport( ) denotes the ratio between the number of transactions that contain itemset X and the number of transactions in D. minisupport is a user defined threshold. It defines the minimal support of frequent itemset. And FPS(D,minisupport) is a set of frequent patterns mined from D with minisupport. Given a transaction t, its Frequent Pattern Outlier Factor (FPOF) is calculated. Finally the alerts are sorted in ascending order according to their weight and top p% of them is put into the set of candidate true alerts.\n6. IMPLEMENTATION AND PERFORMANCE\nIn this section, we describe our classifier implementation and experiments. In our setup, alerts sorted in a new separate log file for further review. Classifiers are rebuilt every midnight using the IDS sensor log data. Once the frequent pattern has been detected for, it will be used for further alert classification. This allows for the classifier to adapt to new routine alert patterns with a reasonable learning time. The Outlier Factor will be calculated for each transaction, then we will resort the transactions accordingly (figure 4).\nFigure5. attempted attacks from 108.1.38.84\nIn our experimental we have applied 5 artificial hacks from a specific source IP to be monitored on our result. Table 2 presents our experiment results on 22 June 2010 (with 28,670 records) that contains different 5 known attempted attacks (figure 5).\nThese results are comparable with the performance of other recent data mining methods which have reduced the number of alerts by 74-97% [16, 2, 9, 10, 1].\nAttack1: 9 59,231 916 ARE/BYTE/UNICODE 0 3 6/22/2010 9:09AM 1812014676 2148203529 6 null null Attack2: 9 25,747 748 FTP/CWD 38 2 6/22/2010 5:31PM 1812014676 2148203530 6 50,74121 Attack3: 9 340,939 991 WEB/MISC/Chunked 31 1 6/22/2010 3:20PM 1812014676 2148203529 6 50,249 80 Attack4: 9 340,950 882 WEB-CGI/cart32.exe/access 25 2 6/22/2010 3:21PM 1812014676 2148203529 6 50,708 80 Attack5: 9 1,529 541 FTP/CWD~attempt 34 2 6/22/2010 11:24AM 1812014676 2148203533 6 60,500 21\nDuring the experiments, we have measure the system reliability and accuracy for different support values / frequent itemsets founded these results are comparable with the original attempted attacks and its place on the output file.\nFigure6. mini support value vs. the 5 attacks in output\nFinally the security analysts will find the IDS logs sorted according to the relevant importance.\nFigure7. mini support value vs. founded frequent pattern\n7. OPEN ISSUES AND FUTURE WORK\nIn this paper, we have presented a novel data mining based IDS alert classification method and sorted for the security analysts according to the alert importance. Although our preliminary results are promising, one issue remains open \u2013 major changes in the arrival rate of routine alerts might be symptoms of large scale attacks, but are hard to detect. However, this is an inherent weakness of alert classification and sorting systems (e.g., see [8, 5, 6] for a related discussion). For the future work, we plan to research our classification method further, and study various statistical algorithms (e.g., time series analysis) for detecting unexpected fluctuations in the arrival rates of routine alerts.\n0\n20\n40\n60\n80\n100\n120\n140\n160\n0 5 10 15 20 25 30\nO u\ntp u\nt R\ne co\nrd s\nSupport Value\n0\n10000000\n20000000\n30000000\n40000000\n50000000\n0 5 10 15 20 25 30\nFr e\nq u\ne n\nt It\ne m\nse ts\nOutput Records\nREFERENCES\n[1] Risto Vaarandi \u201cReal-time classification of IDS alerts with data mining techniques,\u201d\nProceedings of the 2009 IEEE MILCOM.\n[2] J. Viinikka, H. Debar, L. M\u00e9, A. Lehikoinen, and M. Tarvainen,\u201cProcessing intrusion\ndetection alert aggregates with time series modeling\u201d, Information Fusion Journal, vol. 10(4),\n2009, pp. 312-324.\n[3] J. Long, D. Schwartz, and S. Stoecklin.\u201cDistinguishing False from True Alerts in Snort by\nData Mining Patterns of Alerts,\u201d in Proc. of 2006 SPIE Defense and Security Symposium, pp.\n62410B-1--62410B-10.\n[4] T. Pietraszek. \u201cUsing Adaptive Alert Classification to Reduce False Positives in Intrusion\nDetection,\u201d in Proc. of 2004 RAID Symposium, pp. 102-124.\n[5] J. Viinikka, H. Debar, L. M\u00e9, A. Lehikoinen, and M. Tarvainen. \u201cProcessing intrusion\ndetection alert aggregates with time series modeling,\u201d in Information Fusion Journal, 2009, to\nappear.\n[6] J. Viinikka and H. Debar. \u201cMonitoring IDS Background Noise Using EWMA Control Charts\nand Alert Information,\u201d in Proc. of 2004 RAID Symposium, pp. 166-187.\n[7] C. Clifton and G. Gengo. \u201cDeveloping Custom Intrusion Detection Filters Using Data\nMining,\u201d in Proc. of 2000 MILCOM Symposium, pp. 440-443.\n[8] J. Viinikka, H. Debar, L. M\u00e9, and R. S\u00e9guier. \u201cTime Series Modeling for IDS Alert\nManagement,\u201d in Proc. Of 2006 ACM Symposium on Information, Computer\nandCommunications Security, pp. 102-113.\n[9] S. O. Al-Mamory, H. Zhang, and A. R. Abbas. \u201cIDS Alarms Reduction Using Data Mining,\u201d\nin Proc. of 2008 IEEE World Congress on Computational Intelligence, pp. 3564-3570.\n[10] S. O. Al-Mamory and H. Zhang. \u201cIntrusion Detection Alarms Reduction Using Root Cause\nAnalysis and Clustering,\u201d in Computer Communications, vol.32(2), 2009, pp. 419-430.\n[11] Ferenc Bodon \u201cfast APRIORI implementation\u201d Informatics Laboratory, Computer and\nAutomation Research Institute, Hungarian Academy of ciences\u201d, IEEE ICDM Workshop on\nFrequent Itemset Mining Implementations.\n[12] Walter A. Kosters and Wim Pijls \u201cApriori, a depth-first implementation\u201d, volume 90 of\nCEUR Workshop Proceedings, CEUR-WS.org.\n[13] K. H\u00e4t\u00f6nen, M. Klemettinen, H. Mannila, P.Ronkainen, and H. Toivonen. \u201cKnowledge\nDiscovery from Telecommunication Network Alarm Databases,\u201d in Proc. of 1996 International\nConference on Data Engineering, pp. 115-122.\n[14] B. Goethals. \u201cSurvey on Frequent Pattern Mining,\u201d Technical Report, University of\nHelsinki.\n[15] M. J. Zaki and C.-J. Hsiao. \u201cCHARM: An Efficient Algorithm for Closed Itemset Mining,\u201d\nin Proc. of 2002 SIAM International Conference on Data Mining, pp. 457- 473.\n[16] K. Julisch and M. Dacier. \u201cMining intrusion detection alarms for actionable knowledge,\u201d in\nProc. of 2002 ACM SIGKDD International Conference on Knowledge Discovery and Data\nMining, pp. 366-375.\n[17] L. Ertoz, E. Eilertson, A. Lazarevic, et al, \u201cDetection of Novel Network Attacks Using Data\nMining\u201d, Proceedings of DMSEC 2003, IEEE Press, New York, pp. 1-10, 2003.\n[18] P. Dokas, L. Ertoz, V. Kumar, et al, \u201cData Mining for Network Intrusion Detection\u201d,\nProceedings of NSF Workshop on Next Generation Data Mining, AAAI/MIT Press, Cambridge,\npp. 21-30, 2002.\n[19] Z. He, X. u, J.Z. Huang, et al, \u201cFP-Outlier: Frequent Pattern Based Outlier Detection\u201d,\nComputer Science and Information System, 2(1), pp. 103-118, 2005.\n[20] K. Julisch. \u201cClustering Intrusion Detection Alarms to Support Root Cause Analysis,\u201d in\nACM Transactions on Information and System Security, vol. 6(4), 2003, pp. 443-471.\n[21] Risto Vaarandi \u201cMining Event Logs with SLCT and LogHound\u201d, Proceedings of\nINTELLCOMM 2004: 293-308.\n[22] Snort, http://www.snort.org/."}], "references": [{"title": "Real-time classification of IDS alerts with data mining techniques,", "author": ["Risto Vaarandi"], "venue": "Proceedings of the 2009 IEEE MILCOM", "citeRegEx": "1", "shortCiteRegEx": "1", "year": 2009}, {"title": "Tarvainen,\u201cProcessing intrusion detection alert aggregates with time series modeling", "author": ["J. Viinikka", "H. Debar", "L. M\u00e9", "A. Lehikoinen"], "venue": "Information Fusion Journal,", "citeRegEx": "2", "shortCiteRegEx": "2", "year": 2009}, {"title": "Stoecklin.\u201cDistinguishing False from True Alerts in Snort by Data Mining Patterns of Alerts,", "author": ["J. Long", "D. Schwartz"], "venue": "in Proc. of 2006 SPIE Defense and Security Symposium,", "citeRegEx": "3", "shortCiteRegEx": "3", "year": 2006}, {"title": "Using Adaptive Alert Classification to Reduce False Positives in Intrusion Detection", "author": ["T. Pietraszek"], "venue": "Proc. of 2004 RAID Symposium, pp. 102-124.", "citeRegEx": "4", "shortCiteRegEx": null, "year": 2004}, {"title": "Processing intrusion detection alert aggregates with time series modeling", "author": ["J. Viinikka", "H. Debar", "L. M\u00e9", "A. Lehikoinen", "M. Tarvainen"], "venue": "Information Fusion Journal, 2009, to appear.", "citeRegEx": "5", "shortCiteRegEx": null, "year": 2009}, {"title": "Monitoring IDS Background Noise Using EWMA Control Charts and Alert Information", "author": ["J. Viinikka", "H. Debar"], "venue": "Proc. of 2004 RAID Symposium, pp. 166-187.", "citeRegEx": "6", "shortCiteRegEx": null, "year": 2004}, {"title": "Developing Custom Intrusion Detection Filters Using Data Mining", "author": ["C. Clifton", "G. Gengo"], "venue": "Proc. of 2000 MILCOM Symposium, pp. 440-443.", "citeRegEx": "7", "shortCiteRegEx": null, "year": 2000}, {"title": "Time Series Modeling for IDS Alert Management", "author": ["J. Viinikka", "H. Debar", "L. M\u00e9", "R. S\u00e9guier"], "venue": "Proc. Of 2006 ACM Symposium on Information, Computer andCommunications Security, pp. 102-113.", "citeRegEx": "8", "shortCiteRegEx": null, "year": 2006}, {"title": "IDS Alarms Reduction Using Data Mining", "author": ["S.O. Al-Mamory", "H. Zhang", "A.R. Abbas"], "venue": "Proc. of 2008 IEEE World Congress on Computational Intelligence, pp. 3564-3570.", "citeRegEx": "9", "shortCiteRegEx": null, "year": 2008}, {"title": "Intrusion Detection Alarms Reduction Using Root Cause Analysis and Clustering", "author": ["S.O. Al-Mamory", "H. Zhang"], "venue": "Computer Communications, vol.32(2), 2009, pp. 419-430.", "citeRegEx": "10", "shortCiteRegEx": null, "year": 2009}, {"title": "Knowledge Discovery from Telecommunication Network Alarm Databases", "author": ["K. H\u00e4t\u00f6nen", "M. Klemettinen", "H. Mannila", "P.Ronkainen", "H. Toivonen"], "venue": "Proc. of 1996 International Conference on Data Engineering, pp. 115-122.", "citeRegEx": "13", "shortCiteRegEx": null, "year": 1996}, {"title": "Survey on Frequent Pattern Mining", "author": ["B. Goethals"], "venue": "Technical Report, University of Helsinki.", "citeRegEx": "14", "shortCiteRegEx": null, "year": 0}, {"title": "CHARM: An Efficient Algorithm for Closed Itemset Mining", "author": ["M.J. Zaki", "C.-J. Hsiao"], "venue": "Proc. of 2002 SIAM International Conference on Data Mining, pp. 457- 473.", "citeRegEx": "15", "shortCiteRegEx": null, "year": 2002}, {"title": "Mining intrusion detection alarms for actionable knowledge", "author": ["K. Julisch", "M. Dacier"], "venue": "Proc. of 2002 ACM SIGKDD International Conference on Knowledge Discovery and Data Mining, pp. 366-375.", "citeRegEx": "16", "shortCiteRegEx": null, "year": 2002}, {"title": "Detection of Novel Network Attacks Using Data Mining", "author": ["L. Ertoz", "E. Eilertson", "A. Lazarevic"], "venue": "Proceedings of DMSEC", "citeRegEx": "17", "shortCiteRegEx": "17", "year": 2003}, {"title": "Data Mining for Network Intrusion Detection", "author": ["P. Dokas", "L. Ertoz", "V. Kumar"], "venue": "Proceedings of NSF Workshop on Next Generation Data Mining,", "citeRegEx": "18", "shortCiteRegEx": "18", "year": 2002}, {"title": "FP-Outlier: Frequent Pattern Based Outlier Detection", "author": ["Z. He", "X. u", "J.Z. Huang"], "venue": "Computer Science and Information System,", "citeRegEx": "19", "shortCiteRegEx": "19", "year": 2005}, {"title": "Clustering Intrusion Detection Alarms to Support Root Cause Analysis", "author": ["K. Julisch"], "venue": "ACM Transactions on Information and System Security, vol. 6(4), 2003, pp. 443-471.", "citeRegEx": "20", "shortCiteRegEx": null, "year": 2003}, {"title": "Mining Event Logs with SLCT and LogHound", "author": ["Risto Vaarandi"], "venue": "Proceedings of INTELLCOMM", "citeRegEx": "21", "shortCiteRegEx": "21", "year": 2004}], "referenceMentions": [{"referenceID": 0, "context": "An IDS sensor can generate thousands of alerts in a day [1, 2].", "startOffset": 56, "endOffset": 62}, {"referenceID": 1, "context": "An IDS sensor can generate thousands of alerts in a day [1, 2].", "startOffset": 56, "endOffset": 62}, {"referenceID": 2, "context": "Furthermore, often vast majority of the alerts are false positives or of low importance [3,1].", "startOffset": 88, "endOffset": 93}, {"referenceID": 0, "context": "Furthermore, often vast majority of the alerts are false positives or of low importance [3,1].", "startOffset": 88, "endOffset": 93}, {"referenceID": 13, "context": "As mentioned that it is usual to receive thousands of alerts from a single network IDS sensor per day, with more than 90% of the alerts being irrelevant [16, 20, 8] so an IDS alert log\u2019s analysis techniques are often used to distinguish the important IDS alerts from irrelevant events.", "startOffset": 153, "endOffset": 164}, {"referenceID": 17, "context": "As mentioned that it is usual to receive thousands of alerts from a single network IDS sensor per day, with more than 90% of the alerts being irrelevant [16, 20, 8] so an IDS alert log\u2019s analysis techniques are often used to distinguish the important IDS alerts from irrelevant events.", "startOffset": 153, "endOffset": 164}, {"referenceID": 7, "context": "As mentioned that it is usual to receive thousands of alerts from a single network IDS sensor per day, with more than 90% of the alerts being irrelevant [16, 20, 8] so an IDS alert log\u2019s analysis techniques are often used to distinguish the important IDS alerts from irrelevant events.", "startOffset": 153, "endOffset": 164}, {"referenceID": 3, "context": "Many approaches have been suggested like machine learning [4], time series modeling [8, 5], the use of the control charts [6], etc.", "startOffset": 58, "endOffset": 61}, {"referenceID": 7, "context": "Many approaches have been suggested like machine learning [4], time series modeling [8, 5], the use of the control charts [6], etc.", "startOffset": 84, "endOffset": 90}, {"referenceID": 4, "context": "Many approaches have been suggested like machine learning [4], time series modeling [8, 5], the use of the control charts [6], etc.", "startOffset": 84, "endOffset": 90}, {"referenceID": 5, "context": "Many approaches have been suggested like machine learning [4], time series modeling [8, 5], the use of the control charts [6], etc.", "startOffset": 122, "endOffset": 125}, {"referenceID": 13, "context": "During the last 10 years, data mining based methods have also been proposed in many researches papers [16, 20, 7, 3, 9, 10].", "startOffset": 102, "endOffset": 123}, {"referenceID": 17, "context": "During the last 10 years, data mining based methods have also been proposed in many researches papers [16, 20, 7, 3, 9, 10].", "startOffset": 102, "endOffset": 123}, {"referenceID": 6, "context": "During the last 10 years, data mining based methods have also been proposed in many researches papers [16, 20, 7, 3, 9, 10].", "startOffset": 102, "endOffset": 123}, {"referenceID": 2, "context": "During the last 10 years, data mining based methods have also been proposed in many researches papers [16, 20, 7, 3, 9, 10].", "startOffset": 102, "endOffset": 123}, {"referenceID": 8, "context": "During the last 10 years, data mining based methods have also been proposed in many researches papers [16, 20, 7, 3, 9, 10].", "startOffset": 102, "endOffset": 123}, {"referenceID": 9, "context": "During the last 10 years, data mining based methods have also been proposed in many researches papers [16, 20, 7, 3, 9, 10].", "startOffset": 102, "endOffset": 123}, {"referenceID": 13, "context": "9 % in comparable with the performance of other recent techniques which have reduced the number of alerts by 74-97% [16, 2, 9, 10, 1].", "startOffset": 116, "endOffset": 133}, {"referenceID": 1, "context": "9 % in comparable with the performance of other recent techniques which have reduced the number of alerts by 74-97% [16, 2, 9, 10, 1].", "startOffset": 116, "endOffset": 133}, {"referenceID": 8, "context": "9 % in comparable with the performance of other recent techniques which have reduced the number of alerts by 74-97% [16, 2, 9, 10, 1].", "startOffset": 116, "endOffset": 133}, {"referenceID": 9, "context": "9 % in comparable with the performance of other recent techniques which have reduced the number of alerts by 74-97% [16, 2, 9, 10, 1].", "startOffset": 116, "endOffset": 133}, {"referenceID": 0, "context": "9 % in comparable with the performance of other recent techniques which have reduced the number of alerts by 74-97% [16, 2, 9, 10, 1].", "startOffset": 116, "endOffset": 133}, {"referenceID": 10, "context": "Data mining techniques first used for knowledge discovery from telecommunication event logs more than a decade ago [13].", "startOffset": 115, "endOffset": 119}, {"referenceID": 6, "context": "Clifton and Gengo [7] have investigated the detection of frequent alert sequences and enhanced by Ferenc [11], Walter A.", "startOffset": 18, "endOffset": 21}, {"referenceID": 2, "context": "[3] suggested a clustering algorithm for distinguishing Snort IDS true alerts from false positive alerts.", "startOffset": 0, "endOffset": 3}, {"referenceID": 13, "context": "Julisch and Dacier [16] also proposed a conceptual clustering technique for IDS alert logs as well, so that clusters correspond to alert descriptions, and a human experience can be used for developing filtering and correlation rules for future IDS alerts.", "startOffset": 19, "endOffset": 23}, {"referenceID": 3, "context": "Many of other approaches have been suggested like machine learning [4], time series modeling [8, 5], the use of the control charts [6], etc.", "startOffset": 67, "endOffset": 70}, {"referenceID": 7, "context": "Many of other approaches have been suggested like machine learning [4], time series modeling [8, 5], the use of the control charts [6], etc.", "startOffset": 93, "endOffset": 99}, {"referenceID": 4, "context": "Many of other approaches have been suggested like machine learning [4], time series modeling [8, 5], the use of the control charts [6], etc.", "startOffset": 93, "endOffset": 99}, {"referenceID": 5, "context": "Many of other approaches have been suggested like machine learning [4], time series modeling [8, 5], the use of the control charts [6], etc.", "startOffset": 131, "endOffset": 134}, {"referenceID": 13, "context": "During the last 10 years, data mining based methods have also been proposed in many researches papers [16, 20, 7, 3, 9, 10].", "startOffset": 102, "endOffset": 123}, {"referenceID": 17, "context": "During the last 10 years, data mining based methods have also been proposed in many researches papers [16, 20, 7, 3, 9, 10].", "startOffset": 102, "endOffset": 123}, {"referenceID": 6, "context": "During the last 10 years, data mining based methods have also been proposed in many researches papers [16, 20, 7, 3, 9, 10].", "startOffset": 102, "endOffset": 123}, {"referenceID": 2, "context": "During the last 10 years, data mining based methods have also been proposed in many researches papers [16, 20, 7, 3, 9, 10].", "startOffset": 102, "endOffset": 123}, {"referenceID": 8, "context": "During the last 10 years, data mining based methods have also been proposed in many researches papers [16, 20, 7, 3, 9, 10].", "startOffset": 102, "endOffset": 123}, {"referenceID": 9, "context": "During the last 10 years, data mining based methods have also been proposed in many researches papers [16, 20, 7, 3, 9, 10].", "startOffset": 102, "endOffset": 123}, {"referenceID": 0, "context": "On 2009 Risto Vaarandi [1] proposed an automated technique and had created a main drawback as mentioned of classifying true attacks as a false positive.", "startOffset": 23, "endOffset": 26}, {"referenceID": 0, "context": "Some researchers have observed the that the most alerts are triggered by only a few signatures [1] and in [8] it is reported that 68% of the alerts were produced by five signatures, while according to [5] seven signatures produced 77% of the alerts.", "startOffset": 95, "endOffset": 98}, {"referenceID": 7, "context": "Some researchers have observed the that the most alerts are triggered by only a few signatures [1] and in [8] it is reported that 68% of the alerts were produced by five signatures, while according to [5] seven signatures produced 77% of the alerts.", "startOffset": 106, "endOffset": 109}, {"referenceID": 4, "context": "Some researchers have observed the that the most alerts are triggered by only a few signatures [1] and in [8] it is reported that 68% of the alerts were produced by five signatures, while according to [5] seven signatures produced 77% of the alerts.", "startOffset": 201, "endOffset": 204}, {"referenceID": 0, "context": "Third, we improve the detection result reliability of the automated method that has been used by Risto Vaarandi [1, 21].", "startOffset": 112, "endOffset": 119}, {"referenceID": 18, "context": "Third, we improve the detection result reliability of the automated method that has been used by Risto Vaarandi [1, 21].", "startOffset": 112, "endOffset": 119}, {"referenceID": 16, "context": "in [19].", "startOffset": 3, "endOffset": 7}, {"referenceID": 16, "context": "The interpretation of the above formula is as follows [19].", "startOffset": 54, "endOffset": 58}, {"referenceID": 16, "context": "Definition 1 (Frequent Pattern Outlier Factor [19]) Let D = {t1,.", "startOffset": 46, "endOffset": 50}, {"referenceID": 13, "context": "These results are comparable with the performance of other recent data mining methods which have reduced the number of alerts by 74-97% [16, 2, 9, 10, 1].", "startOffset": 136, "endOffset": 153}, {"referenceID": 1, "context": "These results are comparable with the performance of other recent data mining methods which have reduced the number of alerts by 74-97% [16, 2, 9, 10, 1].", "startOffset": 136, "endOffset": 153}, {"referenceID": 8, "context": "These results are comparable with the performance of other recent data mining methods which have reduced the number of alerts by 74-97% [16, 2, 9, 10, 1].", "startOffset": 136, "endOffset": 153}, {"referenceID": 9, "context": "These results are comparable with the performance of other recent data mining methods which have reduced the number of alerts by 74-97% [16, 2, 9, 10, 1].", "startOffset": 136, "endOffset": 153}, {"referenceID": 0, "context": "These results are comparable with the performance of other recent data mining methods which have reduced the number of alerts by 74-97% [16, 2, 9, 10, 1].", "startOffset": 136, "endOffset": 153}, {"referenceID": 7, "context": ", see [8, 5, 6] for a related discussion).", "startOffset": 6, "endOffset": 15}, {"referenceID": 4, "context": ", see [8, 5, 6] for a related discussion).", "startOffset": 6, "endOffset": 15}, {"referenceID": 5, "context": ", see [8, 5, 6] for a related discussion).", "startOffset": 6, "endOffset": 15}], "year": 2012, "abstractText": "Intrusion detection systems (IDSs) have become a widely used measure for security, but we still have a problem on those systems results which includes many irrelevant alerts, so we will propose a data mining based method for classification to distinguish serious alerts and irrelevant one with the performance of 99.9 % in comparison with the other recent data mining methods which have reached the performance of 97%. Also we create a list of alerts sorted by alert\u2019s importance to minimize the human interventions. Keyword: Intrusion Detection, Data Mining, Frequent Pattern, Frequent Itemset, support", "creator": "Microsoft\u00ae Word 2010"}}}