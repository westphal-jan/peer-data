{"id": "1402.4283", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "18-Feb-2014", "title": "Discretization of Temporal Data: A Survey", "abstract": "In 43.04 real world, bankard the bazna huge qingke amount weybourne of writeth temporal civitates data pilchards is to gnomic be imperialist processed in limping many derangement application areas pails such gradual as 14-all scientific, financial, network monitoring, sensor data analysis. kashmoula Data mining techniques bitmaps are factually primarily oriented to pelham handle discrete blondie features. sozopol In the case of kubrat temporal data olivera the time plays undermined an generalizable important vyksa role on desir\u00e9e the niedere characteristics of data. To lollards consider this effect, dinton the nzsas data viaduc discretization metropolitanate techniques leste have to 4,600 consider the gtis time while processing yomiuri to resolve kracht the issue chazy by l.r. finding 3he the intervals yantai of co32 data which pander are more concise gupt and precise athenian with respect vanth to time. Here, buki this research is icca reviewing different oriental data discretization aspects techniques boonies used chodas in bacharuddin temporal data consults applications 48.4 according breydon to melt the conleth inclusion hertzler or exclusion of: bhairavi class ar-15 label, slowpoke temporal agnico order oviraptorids of sangams the dibakar data o\u2019neal and automaker handling warbled of stream data to nonprofessionals open the research 110.12 direction for temporal data discretization to improve the performance mbele of bonhomie data 79-71 mining technique.", "histories": [["v1", "Tue, 18 Feb 2014 10:44:01 GMT  (88kb)", "http://arxiv.org/abs/1402.4283v1", "4 pages, 1 Table"]], "COMMENTS": "4 pages, 1 Table", "reviews": [], "SUBJECTS": "cs.DB cs.LG", "authors": ["p chaudhari", "d p rana", "r g mehta", "n j mistry", "m m raghuwanshi"], "accepted": false, "id": "1402.4283"}, "pdf": {"name": "1402.4283.pdf", "metadata": {"source": "CRF", "title": "Discretization of Temporal Data: A Survey", "authors": ["P. Chaudhari", "D. P. Rana", "R. G. Mehta", "N. J. Mistry", "M. M. Raghuwanshi"], "emails": ["pratikshachaudhari29@gmail.com", "dpr@coed.svnit.ac.in", "rgm@coed.svnit.ac.in"], "sections": [{"heading": null, "text": "be processed in many application areas such as scientific, financial, network monitoring, sensor data analysis. Data mining techniques are primarily oriented to handle discrete features. In the case of temporal data the time plays an important role on the characteristics of data. To consider this effect, the data discretization techniques have to consider the time while processing to resolve the issue by finding the intervals of data which are more concise and precise with respect to time. Here, this research is reviewing different data discretization techniques used in temporal data applications according to the inclusion or exclusion of: class label, temporal order of the data and handling of stream data to open the research direction for temporal data discretization to improve the performance of data mining technique."}, {"heading": "Keywords\u2014 Temporal data, Discretization, Supervised, Incremental, Nonparametric", "text": "I. INTRODUCTION\nThe huge amount of data is to be processed in many application areas such as scientific, financial, network monitoring, sensor data analysis [1], [2]. Data mining is important to analyse huge amount of data and with time oriented data, data analysis can be done better and more naturally. Recently, the increasing usages of temporal data in various applications have got focus on research in the field of data mining. Temporal data can be easily obtained and available from scientific and financial applications like ECG, diabetes, daily weather data, sales information and stocks information. A time series is a collection of observations made chronologically. The characteristics of time series data includes: huge in size, high dimensions and updated continuously.\nMoreover temporal data have characteristics of numeric and continuous nature, which has to be always considered as a group instead of individual field. There are number of research is going on temporal data, to find similarity, to segment and to search, to reduce in dimension. Temporal discretization refers to the discretization of time series, as a preprocessing step in transforming the temporal data into timely intervals. An effective discretization method not only reduces the dimensionality of data and improve the efficiency of data mining and machine learning algorithm, but also make the knowledge extracted from the discretized dataset more compact, easy to understand and useful. Many data mining algorithms can benefit from a discrete representation of the original data set as the numbers of values for a feature are\nmany, but after the discretization, the number of discrete values is less compare to original number of values [1], [2].\nDiscretization has a number of advantages: Discrete features reduce memory usage and thus increase representation of the knowledge as data is simplified to understand and with this application of mining technique or knowledge retrieval methods become faster and perfect [2].\nThere are several ways by which discretization methods can be classified: Splitting versus Merging, Global versus Local, Supervised versus Unsupervised, Static versus Dynamic, and non-Incremental versus Incremental [2], [3], [4], [5].\n\u2022 The Splitting methods, is a top-down approach of discretization in which one start with an empty set of cut points and gradually divide the interval and subintervals to obtain the discretization. In contrast, the merging method is a bottom-up approach in which it considers all possible cut points and then eliminate these cut points by merging intervals.\n\u2022 Local methods produce partitions that are applied to localized regions of instance space. Global methods, on the other hand, use the entire instance space and form a mesh over the entire n-dimensional continuous instance space, where each feature is partitioned into regions independent of other attributes.\n\u2022 Unsupervised methods carry out discretization without the knowledge of class label, whereas the supervised methods utilize the class information to carry out the discretization.\n\u2022 Static discretization methods require some parameter indicating the maximum number of desired intervals to discretize a feature. Dynamic methods conduct a search through the space of possible k values for all features simultaneously.\n\u2022 Non-incremental methods consider only the available historical data values. But, with time, the data values that can be completely new are not considered. While in incremental methods they try to cover the new values also.\nHere, this research is discussing the different data discretization methods used for different temporal data applications that may have a) class label or no class labels, b) nature of continuous data or static data and c) considering the temporal order or not considering the temporal order.\nThe organization of rest of this research is as follows: Section 2 discusses the literature review of temporal static data discretization methods which is not considering the temporal order of the timely data and the other discretization methods which is considering the temporal order of the data\nunder the unsupervised and supervised discretization category followed by the comparative analysis of these discretization methods for defined parameters. Final Section 3 summarizes the research for the future scope.\nII. DISCRETIZATION\nMany data mining algorithms and tasks can benefit from a discrete representation of the original data set. Discrete representation is more comprehensive to human and can simplify, reduce computational costs and improve accuracy of many algorithms. Discretization is the process of transforming continuous space valued series X={x1,x2,...,xn} into a discrete valued series Y={y1,y2,...,yn}. Discretization can be performed recursively on an attribute. The main part of the discretization process is choosing the best cut points which split the continuous value range into discrete number of bins usually referred to as states.\nFrom the literature review, it is found that most of discretization methods which are used can be majorly categorized as unsupervised and supervised discretization. Here, this section is discussing discretization methods according to this category."}, {"heading": "A. Unsupervised Discretization", "text": "When in dataset class information is not available for time series, unsupervised methods are needed. Two common methods used in most of the applications are Equal Width Discretization (EWD) and Equal Frequency Discretization (EFD) [1]. Other than these are K-means Clustering [1], [3] SAX [6], Frequency Dynamic Interval Class (FDIC) [7], where methods: EWD, EFD and K-means clustering are static methods which are not considering temporal order of data.\n1) Equal Width Discretization (EWD): EWD is a simplest discretization method that divides the range of observed values for a feature into k equal sized bins, where k is a parameter provided by the user [4]. The process involves finding values as the minimum (Vmin) and maximum (Vmax). The interval is computed by dividing the range of observed values for the variable into k number of equally sized bins using the formula Interval=(Vmax-Vmin)/k, where k is a parameter supplied by the user and Boundaries = Vmin+( i * interval) for the i = 1...k-1 boundaries [3]. However, this method of discretization is sensitive to outliers that may drastically skew the range.\nThe limitations of this static, unsupervised and very simple method are: a) It is the parametric method as the required number of interval is needed from the user. b) It follows the characteristics of how data values are distributed as some intervals may contain much more data points than other and can produce overlapping.\n2) Equal Frequency Discretization: The equalfrequency algorithm determines the minimum and maximum values of the discretized attribute of n values, it sorts all values in increasing frequency order and then divides the sorted data values into k bins such that each interval approximately contains n/k data values with adjacent internal\nvalues. For equal frequency, many occurrences of a continuous value could cause the occurrences to be assigned into different bins that cause the problem of overlapping.\nThis method is advantageous and tries to overcome the limitations of the equal-width interval discretization by dividing the domain in intervals with the same distribution of data points. The problems with this static, unsupervised and parametric method is that it is not always possible to generate exactly k equal frequency intervals because it tries to place the data instance with identical value in the same interval.\nThe author Chaves has applied this method for image\nhistogram discretization [8].\n3) K-means Clustering: The K-means clustering method is widely used for temporal data discretization in number of applications as it helps to find natural groups and one of the data mining techniques [2], [3], [5]. The author Salvador used the K-means clustering to identify the number of states in a time series dynamically [9], the author Z. Liang et al. used this method to partition the values of the attributes like temperature, salinity, pH, etc. to detect the correlation between environmental factors and ecological events [10].\nIn K-means clustering, a Euclidean distance measure is a simple distance function used to cluster the data into k clusters which are represented by the centroids. The clustering algorithm begins with a random or more educated choice (more efficient due to the sensitivity of the clustering process to the initial selection) of clusters centroids. The second step is to assign each data point to the cluster that has the closest centroid. After every data point has been assigned, the k centroids are recalculated as the mean value of each cluster. Two steps are repeated until no data point is reassigned or the k centroids no longer change. The resulting clusters or centroids are used as the states of the discretization process.\nThis static method is advantageous than EWD and EFD methods as the data are grouped together as per their characteristics. But this can be the limitations also and other than this are: a) It is the parametric method, as the required number of interval value k is to be provided by the user. b) The number of intervals of discretization is dependent upon the given k value and seed value of cluster.\n4) Symbolic Aggregate Approximation (SAX): SAX is the advanced method especially designed for temporal data. The author Keogh et al. applied SAX discretization for improvement of pattern finding performance [11].\nThe SAX representation of a time series is given by the author Lin et al. in 2003 [6] to convert the piecewise aggregate approximation to symbols. The authors has achieved this by dividing the vertical y-axis into equi probable parts, which replaced by symbol. To do so, parameters like subsequence length and the number of symbols. SAX helps to reduce the dimensionality and lower bounds the distance between any two vectors in the SAX representation is smaller than, or equal to, the distance between these two vectors in the original space.\nBefore discretization, the author has removed distortions by normalizing each time series and that can follow the Gaussian\ndistribution. Then for the given number of segmentation, transform time series into partial aggregate approximation. And now breakpoints are decided so that they produce equalsized areas under the Gaussian curve using the breakpoint lookup table that helps to divide the amplitude values of the time series into required number of equi-probable regions. Then depending upon the breakpoint lying area symbols are provided to generate the complete symbol string. The advantages of this method are a) It is reducing dimensionality depending upon alphabet size. b) It is lower bounding the distance between any two vectors. The SAX method is suitable for most classic data mining tasks like classification and clustering.\nThe extended-SAX is proposed by the same author in 2007 [12] which included the min and max value into the consideration. Modification to SAX method, FAST-SAX is proposed by M. Fuad where each series in the database is represented by a first-degree polynomial, which is the approximating function for all the time series in the databases [13]. The distances between the time series and their approximating function are computed and stored instead of time series to perform faster than original SAX method.\n5) Frequency Dynamic Interval Class (FDIC): FDIC is advanced and novel approach of data discretization method which is dynamic in nature presented by A. M. Ahmed et al. [7]. The method consists of two phases. First is dynamic interval class and second is interval merging phase. A dynamic interval phase which tries to generate a number of intervals from data information itself, then generated width intervals by considering the intervals of frequency distribution of the pattern and distance of interval patterns and uses automatically computed threshold based on means distribution to determine the number and the length of intervals.\nThe second phase merging phase which begins with calculation of distance between known interval class and unknown class. In this phase unknown class intervals that have less distribution, are merged with the nearest point with satisfied minimum threshold. The SV-kNNC algorithm is used to determine the new cut point of unknown class interval. It is dependent on nearest known intervals which have more distribution on data. As a result, when discretization ends, numerical continuous attribute values are transformed into discrete ones based on the dataset characteristics.\nThis nonparametric and bottom up, method is more advantageous over other methods as the data are grouped together as per their characteristics and frequency of values. But only limitation of this method is it is not incremental."}, {"heading": "B. Supervised Discretization", "text": "There are numbers of supervised discretization methods based on entropy interested readers can check with [2], [3], [14] but here the methods based on clustering [15] and based on Class-Attribute Contingency Coefficient [16] are discussed as they are according to temporal data characteristics and also with class information.\n1) Clustering based Discretization: This method is taking the advantage of class label and natural grouping together. It is based on clustering, that discretizes the data with the knowledge of both classes and clusters [15]. In this method two clustering algorithms used \u2013 the K-means clustering approach with Euclidean distance metric as the similarity measure and the shared nearest neighbour (SNN) clustering algorithm. In the K-means clustering approach the number of clusters is kept approximately equal to the number of classes. Each data instance is assigned to a particular cluster and this is named as the \u2018pseudo-class\u2019.\nClustering provides the intrinsic grouping of the unlabeled data. Thus, the cluster id captures the interdependencies in the data. So, there are two class features, one provided with data, C, and the other, pseudo-class C\u2019. Then entropy based discretization applied to search for the partition of the value range of a continuous feature so as to minimize the uncertainty of the class variable conditioned on the discretized feature variable. This method results in two intervals and is applied recursively to each subsequent subinterval until the stopping criterion is met.\nThis method is advantageous because in discretization of continuous variables simultaneously using the class information and cluster based \u2018pseudo-class\u2019 information generally better than that based on the class information alone.\n2) Class Attribute Contingency Coefficient Discretization (CACC) Method: This is supervised and top-down discretization method based on Class-Attribute Contingency Coefficient by Lee et al. [14]. It calculates CACC value which is used in discretization of continuous data to measure the interdependence between variables.\nFor each attribute, CACC first finds the maximum and minimum of attributes and then forms a set of all values of each attribute in the ascending order. For all possible interval boundaries and all the midpoints of all the adjacent boundaries in the set are obtained and keeping the maximum CACC value and then partition this attribute accordingly into intervals. The CACC discretization method raise the quality of the generated discretization scheme by extending the idea of contingency coefficient and give better result as considers different attributes together than the consideration of individual attribute, which is the main characteristic of temporal data. But, major limitation is that it is not considering temporal order of data.\nFrom the study of various discretization methods, we derived the following analysis as described in Table 1 and we found that enough research work is done in the area of unsupervised discretization, but very less work is done in the supervised discretization together with incremental approach."}, {"heading": "III. SUMMARY AND FUTURE SCOPE", "text": "Discretization of data plays an important role in data preprocessing before applying a number of data mining algorithms on the real valued data sets. Here, briefly introduced the need of discretization with the idea and drawbacks of some methods under supervised or unsupervised\ncategory for the temporal data. Analysis has been given based on different issues of discretization which shows that still research area is open to consider some issues like nonparametric automatic discretization approach to consider continuous streaming data with the consideration of temporal order."}, {"heading": "Methods", "text": ""}], "references": [{"title": "A review on time series data mining", "author": ["T. Fu"], "venue": "Engineering Applications of Artificial Intelligence,", "citeRegEx": "2", "shortCiteRegEx": "2", "year": 2010}, {"title": "Comparative Analysis of Supervised and Unsupervised Discretization Techniques", "author": ["R. Dash", "R.L. Paramguru"], "venue": "International Journal of Advances in Science and Technology,", "citeRegEx": "3", "shortCiteRegEx": "3", "year": 2011}, {"title": "Supervised and unsupervised discretization of continuous features", "author": ["J. Dougherty", "R. Kohavi", "M. Sahami"], "venue": "International Conference on Machine Learning,", "citeRegEx": "4", "shortCiteRegEx": "4", "year": 1995}, {"title": "Discretization: An Enabling Technique", "author": ["H. Liu", "F. Hussain", "C.L. Tan"], "venue": "Data Mining and Knowledge Discovery,", "citeRegEx": "5", "shortCiteRegEx": "5", "year": 2002}, {"title": "A symbolic representation of time series, with implications for streaming algorithms", "author": ["J. Lin", "E. Keogh", "S. Lonardi", "B. Chiu"], "venue": "Proc. of the 8th ACM SIGMOD Workshop on Research Issues in Data Mining and Knowledge Discovery,", "citeRegEx": "6", "shortCiteRegEx": "6", "year": 2003}, {"title": "Dynamic data discretization technique based on frequency and K-Nearest Neighbour algorithm", "author": ["A.M. Ahmed", "A.A. Bakar", "A.R. Hamdan"], "venue": "Proceedings of the 2nd Conference on Data Mining and Optimization,", "citeRegEx": "7", "shortCiteRegEx": "7", "year": 2009}, {"title": "Gorriz, \u201cIntegrating discretization and association rule-based classification for Alzheimer\u2019s disease diagnosis", "author": ["R. Chaves", "J.M.J. Ramirez"], "venue": "Expert Systems with Applications,", "citeRegEx": "8", "shortCiteRegEx": "8", "year": 2013}, {"title": "Learning States and Rules for Time Series Anomaly Detection", "author": ["S. Salvador", "P. Chan", "J. Brodie"], "venue": "in Proc. of the 17th Intl. Flairs Conference,", "citeRegEx": "9", "shortCiteRegEx": "9", "year": 2004}, {"title": "Temporal Association Rule Mining Based On T-Apriori Algorithm and its Typical Application", "author": ["Z. Liang", "T. Xinming", "J. Wenliang"], "venue": "International Symposium on Spatial-Temporal Modeling Analysis,", "citeRegEx": "10", "shortCiteRegEx": "10", "year": 2005}, {"title": "Finding surprising patterns in a time series database in linear time and space", "author": ["E. Keogh", "S. Lonardi", "Y.C. Chiu"], "venue": "in Proc. of the Eighth ACM SIGKDD International Conference on Knowledge Discovery and DataMining,", "citeRegEx": "11", "shortCiteRegEx": "11", "year": 2002}, {"title": "Experiencing sax: a novel symbolic representation of time series", "author": ["J. Lin", "E.J. Keogh", "L. Wei", "S. Lonardi"], "venue": "Data Mining Knowledge Discovery,", "citeRegEx": "12", "shortCiteRegEx": "12", "year": 2007}, {"title": "Towards A Faster Symbolic Aggregate Approximation Method", "author": ["M. Fuad", "P. Marteau"], "venue": "Journal CoRR, Vol. abs/1301.5871,", "citeRegEx": "13", "shortCiteRegEx": "13", "year": 2013}, {"title": "Some methods for classification and analysis of multivariate observations", "author": ["J.B. MacQueen"], "venue": "Proceedings of the Fifth Symposium on Math,", "citeRegEx": "14", "shortCiteRegEx": "14", "year": 1967}, {"title": "A Clusteringbased discretization for supervised learning", "author": ["A. Gupta", "K.G. Mehrotra", "C. Mohan"], "venue": "Statistics and Probability,", "citeRegEx": "15", "shortCiteRegEx": "15", "year": 2010}, {"title": "A discretization algorithm based on Class-Attribute Contingency Coefficient", "author": ["C. Tsai", "C. Lee", "W. Yang"], "venue": "Information Sciences,", "citeRegEx": "16", "shortCiteRegEx": "16", "year": 2008}], "referenceMentions": [{"referenceID": 0, "context": "The huge amount of data is to be processed in many application areas such as scientific, financial, network monitoring, sensor data analysis [1], [2].", "startOffset": 146, "endOffset": 149}, {"referenceID": 0, "context": "Many data mining algorithms can benefit from a discrete representation of the original data set as the numbers of values for a feature are many, but after the discretization, the number of discrete values is less compare to original number of values [1], [2].", "startOffset": 255, "endOffset": 258}, {"referenceID": 0, "context": "Discretization has a number of advantages: Discrete features reduce memory usage and thus increase representation of the knowledge as data is simplified to understand and with this application of mining technique or knowledge retrieval methods become faster and perfect [2].", "startOffset": 270, "endOffset": 273}, {"referenceID": 0, "context": "There are several ways by which discretization methods can be classified: Splitting versus Merging, Global versus Local, Supervised versus Unsupervised, Static versus Dynamic, and non-Incremental versus Incremental [2], [3], [4], [5].", "startOffset": 215, "endOffset": 218}, {"referenceID": 1, "context": "There are several ways by which discretization methods can be classified: Splitting versus Merging, Global versus Local, Supervised versus Unsupervised, Static versus Dynamic, and non-Incremental versus Incremental [2], [3], [4], [5].", "startOffset": 220, "endOffset": 223}, {"referenceID": 2, "context": "There are several ways by which discretization methods can be classified: Splitting versus Merging, Global versus Local, Supervised versus Unsupervised, Static versus Dynamic, and non-Incremental versus Incremental [2], [3], [4], [5].", "startOffset": 225, "endOffset": 228}, {"referenceID": 3, "context": "There are several ways by which discretization methods can be classified: Splitting versus Merging, Global versus Local, Supervised versus Unsupervised, Static versus Dynamic, and non-Incremental versus Incremental [2], [3], [4], [5].", "startOffset": 230, "endOffset": 233}, {"referenceID": 1, "context": "Other than these are K-means Clustering [1], [3] SAX [6], Frequency Dynamic Interval Class (FDIC) [7], where methods: EWD, EFD and K-means clustering are static methods which are not considering temporal order of data.", "startOffset": 45, "endOffset": 48}, {"referenceID": 4, "context": "Other than these are K-means Clustering [1], [3] SAX [6], Frequency Dynamic Interval Class (FDIC) [7], where methods: EWD, EFD and K-means clustering are static methods which are not considering temporal order of data.", "startOffset": 53, "endOffset": 56}, {"referenceID": 5, "context": "Other than these are K-means Clustering [1], [3] SAX [6], Frequency Dynamic Interval Class (FDIC) [7], where methods: EWD, EFD and K-means clustering are static methods which are not considering temporal order of data.", "startOffset": 98, "endOffset": 101}, {"referenceID": 2, "context": "1) Equal Width Discretization (EWD): EWD is a simplest discretization method that divides the range of observed values for a feature into k equal sized bins, where k is a parameter provided by the user [4].", "startOffset": 202, "endOffset": 205}, {"referenceID": 1, "context": "k-1 boundaries [3].", "startOffset": 15, "endOffset": 18}, {"referenceID": 6, "context": "The author Chaves has applied this method for image histogram discretization [8].", "startOffset": 77, "endOffset": 80}, {"referenceID": 0, "context": "3) K-means Clustering: The K-means clustering method is widely used for temporal data discretization in number of applications as it helps to find natural groups and one of the data mining techniques [2], [3], [5].", "startOffset": 200, "endOffset": 203}, {"referenceID": 1, "context": "3) K-means Clustering: The K-means clustering method is widely used for temporal data discretization in number of applications as it helps to find natural groups and one of the data mining techniques [2], [3], [5].", "startOffset": 205, "endOffset": 208}, {"referenceID": 3, "context": "3) K-means Clustering: The K-means clustering method is widely used for temporal data discretization in number of applications as it helps to find natural groups and one of the data mining techniques [2], [3], [5].", "startOffset": 210, "endOffset": 213}, {"referenceID": 7, "context": "The author Salvador used the K-means clustering to identify the number of states in a time series dynamically [9], the author Z.", "startOffset": 110, "endOffset": 113}, {"referenceID": 8, "context": "to detect the correlation between environmental factors and ecological events [10].", "startOffset": 78, "endOffset": 82}, {"referenceID": 9, "context": "applied SAX discretization for improvement of pattern finding performance [11].", "startOffset": 74, "endOffset": 78}, {"referenceID": 4, "context": "in 2003 [6] to convert the piecewise aggregate approximation to symbols.", "startOffset": 8, "endOffset": 11}, {"referenceID": 10, "context": "The extended-SAX is proposed by the same author in 2007 [12] which included the min and max value into the consideration.", "startOffset": 56, "endOffset": 60}, {"referenceID": 11, "context": "Fuad where each series in the database is represented by a first-degree polynomial, which is the approximating function for all the time series in the databases [13].", "startOffset": 161, "endOffset": 165}, {"referenceID": 5, "context": "[7].", "startOffset": 0, "endOffset": 3}, {"referenceID": 0, "context": "There are numbers of supervised discretization methods based on entropy interested readers can check with [2], [3], [14] but here the methods based on clustering [15] and based on Class-Attribute Contingency Coefficient [16] are discussed as they are according to temporal data characteristics and also with class information.", "startOffset": 106, "endOffset": 109}, {"referenceID": 1, "context": "There are numbers of supervised discretization methods based on entropy interested readers can check with [2], [3], [14] but here the methods based on clustering [15] and based on Class-Attribute Contingency Coefficient [16] are discussed as they are according to temporal data characteristics and also with class information.", "startOffset": 111, "endOffset": 114}, {"referenceID": 12, "context": "There are numbers of supervised discretization methods based on entropy interested readers can check with [2], [3], [14] but here the methods based on clustering [15] and based on Class-Attribute Contingency Coefficient [16] are discussed as they are according to temporal data characteristics and also with class information.", "startOffset": 116, "endOffset": 120}, {"referenceID": 13, "context": "There are numbers of supervised discretization methods based on entropy interested readers can check with [2], [3], [14] but here the methods based on clustering [15] and based on Class-Attribute Contingency Coefficient [16] are discussed as they are according to temporal data characteristics and also with class information.", "startOffset": 162, "endOffset": 166}, {"referenceID": 14, "context": "There are numbers of supervised discretization methods based on entropy interested readers can check with [2], [3], [14] but here the methods based on clustering [15] and based on Class-Attribute Contingency Coefficient [16] are discussed as they are according to temporal data characteristics and also with class information.", "startOffset": 220, "endOffset": 224}, {"referenceID": 13, "context": "It is based on clustering, that discretizes the data with the knowledge of both classes and clusters [15].", "startOffset": 101, "endOffset": 105}, {"referenceID": 12, "context": "[14].", "startOffset": 0, "endOffset": 4}], "year": 2014, "abstractText": "In real world, the huge amount of temporal data is to be processed in many application areas such as scientific, financial, network monitoring, sensor data analysis. Data mining techniques are primarily oriented to handle discrete features. In the case of temporal data the time plays an important role on the characteristics of data. To consider this effect, the data discretization techniques have to consider the time while processing to resolve the issue by finding the intervals of data which are more concise and precise with respect to time. Here, this research is reviewing different data discretization techniques used in temporal data applications according to the inclusion or exclusion of: class label, temporal order of the data and handling of stream data to open the research direction for temporal data discretization to improve the performance of data mining", "creator": "PScript5.dll Version 5.2.2"}}}