{"id": "1405.4138", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "16-May-2014", "title": "Empirical Study of Artificial Fish Swarm Algorithm", "abstract": "Artificial engulfed fish swarm algorithm (AFSA) is streptaxidae one tacc of profit-making the bachi swarm intelligence reinspect optimization algorithms mu\u00f1eca that avia works based on population 31-24 and recoveries stochastic figueres search. financiamiento In stolichny order to achieve acceptable result, there are many km. parameters needs vishwas to duniya be leek adjusted in charla AFSA. Among recoil these br\u00edd parameters, visual and step are very brown-headed significant in view tientsin of the fact sheathed that 304.6 artificial yuganskneftegaz fish dhavernas basically pemberton move mamery based cale on parle these margolyes parameters. saggar In 2,243 standard AFSA, i1 these two elkie parameters shewan remain edu constant until the algorithm flip termination. spielvogel Large 13-9 values msimang of tischbein these parameters bringin increase protea the capability boisterously of algorithm 37.03 in tuburan global intoxicants search, overscheduling while ihs small batticaloa values improve 117.82 the 818-713-3785 local toclark search ability heitmann of the algorithm. mamitu In carwin this paper, sequestrated we empirically theoreticians study the kemp performance mccoubrey of the AFSA jagannath and different approaches to gambrel-roofed balance insas between local and codice global exploration broadstreet have been lanphier tested kabankalan based on the lovings adaptive shut modification kassites of oilman visual pcbs and step ryuki during amane algorithm execution. The paiboon proposed approaches have been evaluated enterbrain based on the viollet four junghyun well - valkenswaard known 1.555 benchmark functions. shongwe Experimental results show l'ain considerable positive mangione impact 117.19 on the performance of bosian AFSA.", "histories": [["v1", "Fri, 16 May 2014 12:02:42 GMT  (204kb)", "http://arxiv.org/abs/1405.4138v1", null]], "reviews": [], "SUBJECTS": "cs.AI", "authors": ["reza azizi"], "accepted": false, "id": "1405.4138"}, "pdf": {"name": "1405.4138.pdf", "metadata": {"source": "CRF", "title": null, "authors": ["Reza Azizi"], "emails": [], "sections": [{"heading": null, "text": "Reza Azizi, International Journal of Computing, Communications and Networking, 3(1), January \u2013 March 2014, 01-07\n ABSTRACT Artificial fish swarm algorithm (AFSA) is one of the swarm intelligence optimization algorithms that works based on population and stochastic search. In order to achieve acceptable result, there are many parameters needs to be adjusted in AFSA. Among these parameters, visual and step are very significant in view of the fact that artificial fish basically move based on these parameters. In standard AFSA, these two parameters remain constant until the algorithm termination. Large values of these parameters increase the capability of algorithm in global search, while small values improve the local search ability of the algorithm. In this paper, we empirically study the performance of the AFSA and different approaches to balance between local and global exploration have been tested based on the adaptive modification of visual and step during algorithm execution. The proposed approaches have been evaluated based on the four well-known benchmark functions. Experimental results show considerable positive impact on the performance of AFSA. Key words: Artificial intelligence, fish swarm algorithm, optimization."}, {"heading": "1. INTRODUCTION", "text": "Solving the NP-complete problems is one of the most challenging issues that computer scientists always faced with. Swarm intelligence algorithms have been significantly proved their capabilities in solving these problems. Particle Swarm Optimization (PSO) [1] and Ant Colony Optimization (ACO) [2] are two most well-known methods. These algorithms have some characteristics that make them suitable for solving NP-complete problems, like scalability, fault tolerance, consistency, higher speed, flexibility and parallelism. Artificial fish swarm algorithm (AFSA) [3], proposed by Li Xiao Lei in 2002, is a stochastic population-based algorithm motivated by intelligent collective behavior of fish groups in nature. AFSA has characteristics of non-sensitive initial artificial fish location, flexibility and fault tolerance. It has been applied on different problems including machine\nlearning [4,5,6], PID controlling [7], wireless sensor networks [8], image segmentation [9], data clustering [10,11] and scheduling [12]. AFSA did not gain much acceptance due to certain due to certain reasons. Among them high computational complexity, difficult implementation of the algorithm and the results not significantly better than similar algorithms can be noted here. In fact, algorithms such as PSO with less computational complexity are easier to implement and exploit. Furthermore, results obtained from different versions of PSO show better performances compare to standard AFSA. Contrary to what may appear, AFSA is not a version of PSO and differs significantly from PSO. One of the main differences between two algorithms is that particles in PSO move completely based on their past movements and experiences in the problem environment. However, artificial fish movements solely depend on their current positions and other members of the group situations. Hence, movements of the fish differ from particles. There are two important parameters in AFSA: visual and step. Artificial fish search the problem environment as large as their visual. Afterwards, they move towards the target based on the random value of the step in each iteration. In standard AFSA, initial values for these parameters have a great effect on the final result, because of the fact that these parameters remain constant and equal to the initial values until the algorithm terminates. If we select larger initial values for visual and step, artificial fish swarm move faster toward the global optimum and will be more capable of passing the local optimums. And selecting lower values for these parameters causes artificial fish to act better in local searching. In this paper, improved artificial fish swarm algorithm has been proposed with a new parameter, called movement weight. Movement weight can be used to adjust visual and step adaptively and consequently controls the movements of artificial fish towards the target. Moreover, using the movement weight considerably maintains equilibrium between global and local searches. Beforehand, parameter called inertia weight has been applied on particle swarm optimization (PSO) algorithm by Shi and Eberhart [13]. Inertia weight, which can be a positive constant number [13], or a positive linear or non-linear function [14], or others [15], significantly improved the performance of algorithm. Our proposed movement weight in\nReza Azizi Engineering Department, Bojnourd Branch, Islamic Azad University\nBojnourd, Iran Email: reza.azizi@bojnourdiau.ac.ir\nEmpirical Study of Artificial Fish Swarm Algorithm\nISSN 2319-2720 Volume 3, No.1, January \u2013 March 2014\nInternational Journal of Computing, Communications and Networking Available Online at http://warse.org/pdfs/2014/ijccn013120143.pdf\nAFSA plays a similar role as inertia weight in PSO. In this paper, different versions of movement weight have been investigated, including a positive constant weight, random and positive linear functions. Evaluating the applied adaptive movement weight on four well known benchmark functions shows considerable improvement in performance of the AFSA. Subsequent parts of this paper have been organized as follows: section 2 briefly introduces the standard AFSA, afterward, AFSA with variable visual and step will be described in section 3. Section 4 studies the experimental results and finally we conclude our work in the last section."}, {"heading": "2. ARTIFICIAL FISH SWARM ALGORITHM", "text": "In underwater world, fish can find areas with more food based on their individual or swarm search. Inspired by this characteristic, Artificial Fish (AF) model is represented by prey, free move, swarm, and follow behaviors. AF searches the problem space by those behaviors. The environment AF lives in, is the problem space. Objective function of AFSA is to find maximum food density. As Figure 1 shows, AF observes external concepts with its visual perception. Current position of AF is shown by vector X=(X1, X2, \u2026, Xn). The visual is equal to visibility domain of AF and Xv is an intended position in visual where the AF selects to move towards. If Xv has better food density than current position, AF moves one step towards Xv, which results in displacement of AF from X to Xnext. Otherwise, if the current position of AF is better than Xv, it selects another position in its visual. Food density in position X is the fitness value of the position and is shown with f(X). The step is equal to maximum length of the movement. The distance between two AFs which are placed in Xi and Xj is shown by (Euclidean distance) Dis(ij)=|| Xi-Xj ||. AF model consists of variables and functions. Variables are X (current AF position), step (maximum length step), visual (visibility domain), try-number (maximum attempts for finding better positions in visual), and crowd factor \u03b4 (0<\u03b4<1). Functions consist of prey, free move, swarm, and follow behaviors. In each iteration of the optimization process, AF looks for locations with better fitness values in problem space by performing one of these behaviors. We omit to explain details of artificial fish due to space limitation. Readers are referred to [3, 6, 7] for more information."}, {"heading": "3. ARTIFICIAL FISH SWARM ALGORITHM WITH", "text": "VARIABLE VISUAL AND STEP In AFSA, artificial fish search the problem environment in their visual based on the behaviors and then they move towards the target by a random value of their step. In standard AFSA, determination of the initial values of the step and visual essentially influence the final result. Values of these\nparameters remain constant and equal to the initial values during the algorithm execution. By having large initial values for these parameters, artificial fish swarm move faster towards the global optimum. That is, artificial fish are able to search larger environment around them and move with bigger step. Therefore, artificial fish are more capable in escaping from the local optimums under such circumstances. However, there are some deficiencies in large values of step and visual. Accuracy and steadiness of the algorithm decrease in such situation.\nIn fact, the algorithm acts better in global searches, but after approaching the global optimum, it is incapable of doing an appropriate local search because of the fact that the visual is larger than it must be. Therefore, by large value of the visual, positions with better fitness are unlikely to be found. Considering small values for these parameters make algorithm more steady and accurate, nevertheless, it causes the algorithm move towards the target more slowly and be incapable of escaping local optimums. Based on the above facts, in order to attain better results, larger initial values for visual and step must be selected and then gradually they must be adaptively reduced during the algorithm execution. As a result, fish move towards to the target quickly and are more capable of escaping local optimums. Afterwards, upon approaching global optimum, artificial fish can accurately investigate the environment by smaller visual and step. In order to control values of step and visual and balancing between global search and local search, we propose a parameter called Movement Weight (MW). MW can be a constant value smaller than one, positive linear or nonlinear function. In each iteration, visual and step values are given according to the following equations:\n1 ItrItr VisualMWVisual (1)\n1 ItrItr StepMWStep (2)\nWhere Itr is the current iteration of the algorithm. With the purpose of attaining better values for the visual and step based on the iteration number, different methods for calculating MW have been discussed in this study."}, {"heading": "3.1 Linear Movement Weight", "text": "In this method, MW is a positive function varies between a minimum and a maximum and calculated according to current iteration and final iteration number. In linear-decreasing MW [16], at the beginning of the algorithm, MW is equal to the maximum value. During the algorithm execution this amount linearly reduces to the minimum value based on the iteration number. MW in each iteration is calculated according to the Equation 3. In the linear-increasing MW [17], fist MW is set to the minimum value, then it increases linearly during the execution and finally it reaches maximum value. MW in the each iteration is given according to the Equation 4:\n MinMax Max Max MinItr MWMWItr\nItrItrMWMW \n(3)\n MinMax Max Max MaxItr MWMWItr\nItrItrMWMW \n(4)\nwhere Rand is a random value between 0 and 1 with normal distribution."}, {"heading": "3.2 Random Movement Weight", "text": "In random MW [18], MW is a random number between two values: minimum and maximum. In each iteration, Random value of MW is calculated based on the following equation:\n MinMaxMinItr MWMWRandMWMW  (5)"}, {"heading": "4. EXPERIMENTS AND ANALYSIS", "text": "Experiments are performed on four benchmark functions that are often used as measurement criteria of optimization algorithms in continuous and static spaces. Benchmark functions with their search space range and acceptable\nsolution are presented in Table 1 [15]. It should be noted that optimal value of all these function equals zero. Initial values for visual and step has been considered 40% and 25% of the range length of the fitness function variables respectively (For example range length of the fitness function variables in Ackly function is 64). Crowd factor is 0.5, maximum try-number is 10 and population number is 30. Determination of the MW plays a vital role in accuracy and quality of the final results. Small value of the MW may cause a sharp reduction in the amount of visual and step, which causes the artificial fish become stationary and blind before reaching the global optimum. In fact, artificial fish cannot effectively search the environment when the amount of visual is too small. This is also true about the step. Actually, when the artificial fish are not close to the global optimum and step value is too small, artificial fish cannot efficiently move inside the problem environment. Consequently, selecting a small MW value makes artificial fish stationary. Determination of MW depends on the type of the problem and the number of iterations. Table 2 shows the optimal values of the MW for 100, 200, 500, 1000, 1500 and 2000 iterations for the mentioned benchmark functions in 30-dimensional space. In all cases different constant values for the MW have been assumed and the best MW value for the different number of iterations has been obtained according to the results. Experiments for each iteration have been done on different values of MW = (0.72, 0.73, 0.74 ... 0.9, 0.91 ... 1.00, 1.01, 1.02). Algorithm has been run 50 times for the each iteration number, and average results for the Sphere, Ackley, Rosenbrock and Griewank functions have been shown in the Table 2.\nFigure 2 shows the average results of 50 times of algorithm execution for the best value of MW for each benchmark function in 1000 iterations. The best MW range and the best MW that generate acceptable results for Sphere, Ackly, Rosenbrock and Griewank for 1000 iterations have been depicted in Table 3. Experiments repeated 50 times and mean, best and standard deviation obtained from running standard AFSA, Constant Weight AFSA (CWAFSA), Random Weight AFSA (RWAFSA), Linear-Decreasing Weight AFSA (LDWAFSA), Linear-Increasing Weight AFSA (LIWAFSA) and global version of PSO (GPSO) [13] in 10, 20 and 30-dimensional spaces on Sphere, Ackly, Rosenbrock and Griewank have been summarized on Table 4. The lower bound and the upper bound values of the MW for RWAFSA, LIWAFSA and LDWAFS for each function have been selected based on the Acceptable Movement Weights Range column of the Table 3. MW value for CWAFSA for each function has been attained\nbased on the Best Movement Weight column of Table 3 as well. Inertia weight value, in GPSO, linearly decreases from 0.9 to 0.4 during the algorithm execution [15]. The population size is equal to 5 * D where D is the problem dimension. At last, parameters C1 and C2 have been set in the form of C1 = C2 = 2. As it can be seen from Table 4 and Figure 3, MW parameter can considerably improve the results in AFSA. Among different proposed algorithms in this paper, LIWAFSA reaches acceptable results, but with less performance than other algorithms. In LIWAFSA, values of visual and step parameters experience a sharp fall at the beginning of the algorithm, which makes artificial fish unable to search and move properly after a short period of time. Determination of the proper MW value in CWAFSA helps the algorithm reaching very acceptable results. Consequently in general, among the proposed algorithms, CWAFSA attain reasonable results if the MW has been chosen appropriately.\nLDWAFSA algorithm shows slow progress at the beginning of the algorithm execution, because at the beginning of the algorithm the value of MW remains near the maximum amount of weight and Visual and Step parameters witness a smooth decrease in value. After a while, MW becomes smaller and the visual and step values decrease with a higher rate rather than previous\niterations which leads in faster progress of the algorithm. In RWAFSA, the MW value is determined randomly which increase in diversity of the group movement and leads to uniform progress of the algorithm. On the whole, in different applications we can attain better results with defining the optimal weight for CWAFSA if it is possible.\nBut if it is impossible to determine optimal weight, one can use RWAFSA and LDWAFSA by determination of a suitable range of MW values. Finally according to the results, AFSA equipped with MW generates results analogous to PSO. As results show, in higher dimensions, modified AFSA acts even better than PSO with inertia weight."}, {"heading": "5. CONCLUSION", "text": "In this paper, we have applied a parameter called Movement Weight (MW) on the Artificial Fish Swarm Algorithm (AFSA). Experimental results reveal the positive impact of this parameter on the performance of AFSA. It can be easily seen that AFSA with an appropriate MW parameter can act better than standard AFSA. Moreover, time varying MW and a random MW result a significant improvement on the AFSA performance. Various simulations have been done to support the competence of the MW."}], "references": [{"title": "Particle Swarm Optimization", "author": ["J. Kennedy", "R.C. Eberhart"], "venue": "IEEE International Conference on Neural Network, pp. 1942\u20131948, Perth", "citeRegEx": "1", "shortCiteRegEx": null, "year": 1995}, {"title": "Ant Colony Optimization", "author": ["M. Dorigo", "M. Birattari", "T. Stutzle"], "venue": "IEEE Computational Intelligent Magazine, pp. 28\u201339,", "citeRegEx": "2", "shortCiteRegEx": null, "year": 2006}, {"title": "An Optimizing Method Based on Autonomous Animate: Fish Swarm Algorithm", "author": ["L.X. Li", "Z.J. Shao", "J.X. Qian"], "venue": "Proceeding of System Engineering Theory and Practice, pp. 32\u201338,", "citeRegEx": "3", "shortCiteRegEx": null, "year": 2002}, {"title": "A New Hybrid Algorithm for Optimization Based on Artificial Fish Swarm Algorithm and Cellular Learning Automata", "author": ["D. Yazdani", "S. Golyari", "M.R. Meybodi"], "venue": "5th International Symposium on Telecommunication (IST), pp. 932\u2013937, Tehran", "citeRegEx": "4", "shortCiteRegEx": null, "year": 2010}, {"title": "Fuzzy Adaptive Artificial Fish Swarm Algorithm", "author": ["D. Yazdani", "A.N. Toosi", "M.R. Meybodi"], "venue": "23th Australian Conference on Artificial Intelligent, pp. 334\u2013343, Adelaide", "citeRegEx": "5", "shortCiteRegEx": null, "year": 2010}, {"title": "Artificial Fish Swarm Algorithm for Function Optimization", "author": ["J. Hu", "Zeng. X.", "J. Xiao"], "venue": "International Conference on Information Engineering and Computer Science, pp. 1\u20134,", "citeRegEx": "6", "shortCiteRegEx": null, "year": 2010}, {"title": "The Optimization of PID Controller Parameters Based on an Improved Artificial Fish Swarm Algorithm", "author": ["Y. Luo", "W. Wei", "S.X. Wang"], "venue": "3rd International Workshop on Advanced Computational Intelligence, pp. 328\u2013332,", "citeRegEx": "7", "shortCiteRegEx": null, "year": 2010}, {"title": "A Hierarchical Routing Protocol Based on AFSO Algorithm for WSN", "author": ["X. Song", "C. Wang", "J. Wang", "B. Zhang"], "venue": "International Conference on Computer Design and Applications, pp. 635\u2013639,", "citeRegEx": "8", "shortCiteRegEx": null, "year": 2010}, {"title": "Method of Image Segmentation Based on Fuzzy C-means Clustering Algorithm and Artificial Fish Swarm  Reza Azizi, International Journal of Computing, Communications and Networking, 3(1), January \u2013 March 2014, 01-07 7  Algorithm", "author": ["C.X. Li", "Z. Ying", "S. JunTao", "S.J. Qing"], "venue": "International Conference on Intelligent Computing and Integrated Systems (ICISS), pp. 254\u2013257, Guilin", "citeRegEx": "9", "shortCiteRegEx": null, "year": 2010}, {"title": "A New Hybrid Approach for Data Clustering", "author": ["D. Yazdani", "S. Golyari", "M.R. Meybodi"], "venue": "5th International Symposium on Telecommunication (IST), Tehran", "citeRegEx": "10", "shortCiteRegEx": null, "year": 2010}, {"title": "A Clustering Algorithm Based on Artificial Fish School", "author": ["L. Xiao"], "venue": "2nd International Conference on Computer Engineering and Technology, pp. 766\u2014769,", "citeRegEx": "11", "shortCiteRegEx": null, "year": 2010}, {"title": "Scheduling Arrival Aircrafts on Multi-runway Based on an Improved Artificial Fish Swarm Algorithm", "author": ["D. Bing", "D. Wen"], "venue": "International Conference on Computational and Information Sciences, pp. 499\u2014502,", "citeRegEx": "12", "shortCiteRegEx": null, "year": 2010}, {"title": "A Modified Particle Swarm Optimization", "author": ["Y. Shi", "R.C. Eberhart"], "venue": "IEEE International Conference on Evolutionary Computation Proceedings, pp. 69\u201373, Anchorage", "citeRegEx": "13", "shortCiteRegEx": null, "year": 1998}, {"title": "Nonlinear Inertia Weight Variation for Dynamic Adaption in Particle Swarm Optimization", "author": ["A. Chatterjee", "P. Siarry"], "venue": "Computer and Operations Research, Elsevier Publishers, pp. 859\u2013871,", "citeRegEx": "14", "shortCiteRegEx": null, "year": 2006}, {"title": "Adaptive Particle Swarm Optimization", "author": ["Z.H. Zhan", "J. Zhang", "Y. Li", "Chung H.S.H."], "venue": "IEEE Transaction on System, Man and Cybernetics, Part B: Cybernetics, pp. 1362\u20131381,", "citeRegEx": "15", "shortCiteRegEx": null, "year": 2009}, {"title": "Comparing Inertia Weights and Constriction Factors in Particle Swarm Optimization", "author": ["R.C. Eberhart", "Y. Shi"], "venue": "2000 Congress on Evolutionary Computing, , pp. 84--89,", "citeRegEx": "16", "shortCiteRegEx": null, "year": 2000}, {"title": "Empirical Study of Particle Swarm Optimizer with an Increasing Inertia Weight", "author": ["Y. Zheng", "L. Ma", "L. Zhang", "J. Qian"], "venue": "IEEE Congress on Evolutionary Computation (CEC 03),", "citeRegEx": "17", "shortCiteRegEx": null, "year": 2003}, {"title": "Tracking and Optimizing Dynamic Systems with Particle Swarms", "author": ["R.C. Eberhart", "Y.H. Shi"], "venue": "Proceeding Congress on Evolutionary Computation,", "citeRegEx": "18", "shortCiteRegEx": null, "year": 2001}], "referenceMentions": [{"referenceID": 0, "context": "Particle Swarm Optimization (PSO) [1] and Ant Colony Optimization (ACO) [2] are two most well-known methods.", "startOffset": 34, "endOffset": 37}, {"referenceID": 1, "context": "Particle Swarm Optimization (PSO) [1] and Ant Colony Optimization (ACO) [2] are two most well-known methods.", "startOffset": 72, "endOffset": 75}, {"referenceID": 2, "context": "Artificial fish swarm algorithm (AFSA) [3], proposed by Li Xiao Lei in 2002, is a stochastic population-based algorithm motivated by intelligent collective behavior of fish groups in nature.", "startOffset": 39, "endOffset": 42}, {"referenceID": 3, "context": "It has been applied on different problems including machine learning [4,5,6], PID controlling [7], wireless sensor networks [8], image segmentation [9], data clustering [10,11] and scheduling [12].", "startOffset": 69, "endOffset": 76}, {"referenceID": 4, "context": "It has been applied on different problems including machine learning [4,5,6], PID controlling [7], wireless sensor networks [8], image segmentation [9], data clustering [10,11] and scheduling [12].", "startOffset": 69, "endOffset": 76}, {"referenceID": 5, "context": "It has been applied on different problems including machine learning [4,5,6], PID controlling [7], wireless sensor networks [8], image segmentation [9], data clustering [10,11] and scheduling [12].", "startOffset": 69, "endOffset": 76}, {"referenceID": 6, "context": "It has been applied on different problems including machine learning [4,5,6], PID controlling [7], wireless sensor networks [8], image segmentation [9], data clustering [10,11] and scheduling [12].", "startOffset": 94, "endOffset": 97}, {"referenceID": 7, "context": "It has been applied on different problems including machine learning [4,5,6], PID controlling [7], wireless sensor networks [8], image segmentation [9], data clustering [10,11] and scheduling [12].", "startOffset": 124, "endOffset": 127}, {"referenceID": 8, "context": "It has been applied on different problems including machine learning [4,5,6], PID controlling [7], wireless sensor networks [8], image segmentation [9], data clustering [10,11] and scheduling [12].", "startOffset": 148, "endOffset": 151}, {"referenceID": 9, "context": "It has been applied on different problems including machine learning [4,5,6], PID controlling [7], wireless sensor networks [8], image segmentation [9], data clustering [10,11] and scheduling [12].", "startOffset": 169, "endOffset": 176}, {"referenceID": 10, "context": "It has been applied on different problems including machine learning [4,5,6], PID controlling [7], wireless sensor networks [8], image segmentation [9], data clustering [10,11] and scheduling [12].", "startOffset": 169, "endOffset": 176}, {"referenceID": 11, "context": "It has been applied on different problems including machine learning [4,5,6], PID controlling [7], wireless sensor networks [8], image segmentation [9], data clustering [10,11] and scheduling [12].", "startOffset": 192, "endOffset": 196}, {"referenceID": 12, "context": "Beforehand, parameter called inertia weight has been applied on particle swarm optimization (PSO) algorithm by Shi and Eberhart [13].", "startOffset": 128, "endOffset": 132}, {"referenceID": 12, "context": "Inertia weight, which can be a positive constant number [13], or a positive linear or non-linear function [14], or others [15], significantly improved the performance of algorithm.", "startOffset": 56, "endOffset": 60}, {"referenceID": 13, "context": "Inertia weight, which can be a positive constant number [13], or a positive linear or non-linear function [14], or others [15], significantly improved the performance of algorithm.", "startOffset": 106, "endOffset": 110}, {"referenceID": 14, "context": "Inertia weight, which can be a positive constant number [13], or a positive linear or non-linear function [14], or others [15], significantly improved the performance of algorithm.", "startOffset": 122, "endOffset": 126}, {"referenceID": 2, "context": "Readers are referred to [3, 6, 7] for more information.", "startOffset": 24, "endOffset": 33}, {"referenceID": 5, "context": "Readers are referred to [3, 6, 7] for more information.", "startOffset": 24, "endOffset": 33}, {"referenceID": 6, "context": "Readers are referred to [3, 6, 7] for more information.", "startOffset": 24, "endOffset": 33}, {"referenceID": 15, "context": "In linear-decreasing MW [16], at the beginning of the algorithm, MW is equal to the maximum value.", "startOffset": 24, "endOffset": 28}, {"referenceID": 16, "context": "In the linear-increasing MW [17], fist MW is set to the minimum value, then it increases linearly during the execution and finally it reaches maximum value.", "startOffset": 28, "endOffset": 32}, {"referenceID": 17, "context": "In random MW [18], MW is a random number between two values: minimum and maximum.", "startOffset": 13, "endOffset": 17}, {"referenceID": 14, "context": "Benchmark functions with their search space range and acceptable solution are presented in Table 1 [15].", "startOffset": 99, "endOffset": 103}, {"referenceID": 9, "context": "i i i i x x x x f 1 2 2 2 1 2 1 100 ) ( 100 [-10,10]", "startOffset": 44, "endOffset": 52}, {"referenceID": 12, "context": "Experiments repeated 50 times and mean, best and standard deviation obtained from running standard AFSA, Constant Weight AFSA (CWAFSA), Random Weight AFSA (RWAFSA), Linear-Decreasing Weight AFSA (LDWAFSA), Linear-Increasing Weight AFSA (LIWAFSA) and global version of PSO (GPSO) [13] in 10, 20 and 30-dimensional spaces on Sphere, Ackly, Rosenbrock and Griewank have been summarized on Table 4.", "startOffset": 279, "endOffset": 283}, {"referenceID": 14, "context": "4 during the algorithm execution [15].", "startOffset": 33, "endOffset": 37}], "year": 2014, "abstractText": "Artificial fish swarm algorithm (AFSA) is one of the swarm intelligence optimization algorithms that works based on population and stochastic search. In order to achieve acceptable result, there are many parameters needs to be adjusted in AFSA. Among these parameters, visual and step are very significant in view of the fact that artificial fish basically move based on these parameters. In standard AFSA, these two parameters remain constant until the algorithm termination. Large values of these parameters increase the capability of algorithm in global search, while small values improve the local search ability of the algorithm. In this paper, we empirically study the performance of the AFSA and different approaches to balance between local and global exploration have been tested based on the adaptive modification of visual and step during algorithm execution. The proposed approaches have been evaluated based on the four well-known benchmark functions. Experimental results show considerable positive impact on the performance of AFSA.", "creator": null}}}