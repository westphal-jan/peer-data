{"id": "1406.6844", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "26-Jun-2014", "title": "FrameNet Resource Grammar Library for GF", "abstract": "meik In ngobeni this multi-candidate paper manoah we present an ongoing m\u00e9chain research blackmar investigating the possibility gialle and potential of integrating neo-geo frame mansilla semantics, humid particularly FrameNet, mohale in the scoutcraft Grammatical uelzen Framework (GF) scrivens application grammar tersely development. creditcards.com An 10-percentage important component of j\u00e1chymov GF is its Resource rumbustious Grammar Library (clementine RGL) that encapsulates the rakyat low - level krasno linguistic knowledge about generalov morphology vmo and keet syntax uncontrollably of rajanpur currently endothelial more than co-curator 20 languages sacri facilitating knapsacks rapid shchusev development sidefoot of multilingual applications. In the kashmula ideal foldy case, porting messan a 141.8 GF application selenide grammar kruszka to affairs a nyoun new kanebo language parliamentarism would only require bookrunners introducing the siew domain plasterk lexicon - plze\u0148-north translation iziane equivalents that rigaud are interlinked ugljanin via common u.s.-picked abstract jank terms. applying While it is guanzheng possible coltness for visions a volar highly patai restricted CNL, wandong developing sparkling and porting meningiomas a less leisa restricted hellacopters CNL capralos requires aeons above reteplase average pneumonias linguistic knowledge namorato about 9/12 the particular hiratsuka language, and above average giveaways GF experience. Specifying a lexicon is cattaro mostly straightforward in the kraul case of nouns (hamp incl. reformists multi - arkadin word 106-run units ), however, simpletons verbs are secretary-treasurer the most rm55 complex category (niram in kmpx terms of sahel both inflectional komsomolsk-on-amur paradigms vinces and nagori argument goldstream structure ), and tatar adding them plachkov to kechiche a GF application arkhangelsky grammar underworked is not a helaman straightforward task. In this paper we are focusing kbps on verbs, baalu investigating post-menopausal the published possibility of creating drd a qyntel multilingual kuznets FrameNet - based poortman GF wren-babbler library. We betterton propose algabid an off-seasons extension footbridge to the current RGL, nurturance allowing lulls GF marinelli application developers 115.3 to define inbee clauses mahla on the terespol semantic corbucci level, thus leaving 43.29 the benzopyrene language - center specific mannon syntactic redfoo mapping cuda to neyland this extension. multi-sensory We demonstrate our approach attentat by enlists reengineering oscar-winning the MOLTO santepheap Phrasebook farragher application 4,110 grammar.", "histories": [["v1", "Thu, 26 Jun 2014 11:14:44 GMT  (295kb)", "http://arxiv.org/abs/1406.6844v1", null]], "reviews": [], "SUBJECTS": "cs.CL", "authors": ["normunds gruzitis", "peteris paikens", "guntis barzdins"], "accepted": false, "id": "1406.6844"}, "pdf": {"name": "1406.6844.pdf", "metadata": {"source": "CRF", "title": "FrameNet Resource Grammar Library for GF", "authors": ["Normunds Gruzitis", "Peteris Paikens", "Guntis Barzdins"], "emails": ["guntis.barzdins}@lumii.lv"], "sections": [{"heading": null, "text": "Keywords: controlled natural language, frame semantics, FrameNet, multilinguality, Grammatical Framework"}, {"heading": "1 Introduction", "text": "Controlled natural languages (CNL) can be divided into two general types according to the formalist or the naturalist approach [1]. The formalist approach supports a deterministic, bidirectional mapping of CNL to a formal language like first-order logic (FOL) or, more commonly, to description logic, namely OWL (Web Ontology Language) [2], allowing the integration with existing tools for reasoning, consistency checking and model building. Although logic-based CNL provides a seemingly informal high-level means for knowledge representation, essentially it is still a formal language that is just as expressive as the corresponding formalism, and whose interpretation is deterministic (predictable). In contrast, in the naturalist approach possible ambiguities are decreased but not excluded, thus allowing for a wider coverage of NL\nand more informal applications, such as semantically precise machine translation within a CNL.\nIn other words, there are CNLs that have an underlying logic-based formalism defining the semantics of a text (e.g. Attempto Controlled English [3]), and there are CNLs that do not have an underlying logic-based formalism (e.g. MOLTO Phrasebook [4] for multilingual translation of touristic phrases). In the first case, the semantics of CNL statements is interpreted by both a human and a formal-logic reasoning machine. In the second case, the interpreter is primarily a human and possibly a domain-specific application that uses CNL, for example, for information retrieval from a predefined domain-specific database.\nGrammatical Framework (GF) [5] is a categorial grammar formalism and a toolkit for programming multilingual grammar applications. It is similar to definite clause grammars (DCG) in Prolog in that both support parsing and synthesis using the same (categorical) grammar definition. Besides the grammar formalism itself, an important part of GF is its Resource Grammar Library (RGL) [6] that encapsulates the low-level linguistic knowledge about morphology and syntax of currently more than 20 languages (the number is constantly growing). RGL facilitates rapid development and porting of application grammars in many parallel languages: all GF resource grammars implement the same syntactic interlingua (API) enabling automatic translation among languages via the abstract syntax trees. In particular, it has been shown that GF is a convenient framework for rapid and flexible implementation of multilingual CNLs \u2013 both those rooted in a formal language like the FOL-based Attempto Controlled English [7] and those rooted in a relatively informal language like standard touristic phrases [4].\nIn the ideal case, porting a GF application grammar to a new language or domain would only require introducing the domain lexicon \u2013 translation equivalents that are interlinked via common abstract terms. While it is possible for a highly restricted CNL, e.g. for authoring and verbalizing OWL ontologies (as implemented, for example, in [8]), developing and porting a less restricted CNL requires more linguistic knowledge about the particular language, and more experience in GF (particularly, in using RGL). Specifying a lexicon of nouns (incl. multi-word units) is mostly straightforward, however, specifying the lexicon of verbs is typically the most complex task in terms of both inflectional paradigms and argument structure, and may require specifying the whole clause (as in Phrasebook). Thus adding verbs to a GF application grammar\u2019s lexicon in a foreign language (or for a novice or less resourced GF developer even in his mother tongue) might not be a straightforward task and might present a stumbling block for potential GF multilingual application developers. Therefore in this paper we are focusing on verbs, investigating the possibility of creating a multilingual FrameNet-based GF resource grammar library.\nThe rest of the paper is organized as follows. In Section 2 we briefly re-capture the relevant architectural principles of FrameNet. In Section 3 we similarly re-capture some relevant GF application grammar development principles, demonstrating the current approach with a detailed example. Section 4 modifies the previous example, describing our solution for integrating FrameNet into GF application grammars.\nFinally we conclude with a brief discussion on the potential and benefits of the proposed FrameNet library for seamless multilingual CNL development."}, {"heading": "2 FrameNet", "text": "FrameNet [9] is a lexicographic database that describes word meanings based on the principles of frame semantics. The central idea of frame semantics is that word meanings must be described in relation to semantic frames [10]. Therefore, the frame and the lexical unit are the key components of FrameNet. A lexical unit in FrameNet terms is the combination of a lemma with a specific meaning \u2013 each separate meaning of a word represents a new lexical unit. In FrameNet, each lexical unit is related to a semantic frame that it is said to evoke a frame (see Figure 1 and Figure 2).\nThe semantic frame describes a certain situation and the participants of that situation that are likely to be mentioned in the sentences where the evoking lexical unit (referred to as frame target) appears. The semantic roles played by these participating entities are called frame elements (FE). FrameNet makes a differentiation between core frame elements and peripheral frame elements. In general, frame elements that are necessarily realized are core elements. Peripheral elements represent more general information such as time, manner, place, and purpose and are less specific to the frame. Nevertheless all FrameNet frame elements are local to individual frames. This avoids the commitment to a small set of universal roles, whose specification has turned out to be controversial in the past [11]. In order to account for actual similarities between frame elements in different frames FrameNet includes also a rich set of frame to frame and FE to FE relations.\nThe frame descriptions are coarse-grained and generalize over lexical variation. Therefore lexeme-specific information is contained within lexical unit entries that are more fine-grained and contain a definition of the lexical unit, the syntactic realizations of each frame element and the valence patterns. A sense of a lemma (word meaning) can evoke a frame, and thus form a lexical unit for this frame, if this sense is syntactically able to realize the core frame elements that instantiate a conceptually necessary component of a frame [12].\nIn Figure 2, a simplified (summarized) lexical entry of \u2018to live\u2019 (Residence) is given: information on non-core FEs is excluded (the rest is summed up); for each valence model only the most frequent realization pattern is given; valence models that contain multiple FEs of the same type are excluded; valence models that have appeared in the corpus only once are excluded; prepositional phrase patterns (PP) are not distinguished by particular prepositions.\nOur central point of interest in this paper is the multilingual dimension of FrameNet. A number of projects have investigated the use of English FrameNet frames for other languages, such as German (SALSA project [13]), Spanish [14], Japanese [15], and lately also for Thai, Chinese, Italian, French, Bulgarian, Hebrew [16]. A fundamental assumption of these projects is that English FrameNet frames can be largely re-used for the semantic analysis of other languages. This assumption rests on the nature of frames as coarse-grained semantic classes which refer to prototypical situations \u2013 to the extent that these situations agree across languages, frames should be applicable cross-linguistically. Also Boas [17] suggests the use of semantic frames as interlingual representation for multilingual lexicons.\nWhile FrameNet multilinguality is clearly a very attractive assumption, its empirical validation comes primarily from the German SALSA project, which has found that the vast majority of English FrameNet frames can be directly applied to the analysis of German \u2013 a language that is typologically close to English. Meanwhile, some frames have turned out not to be fully interlingual and three main cross-lingual divergence types were found:\n1. Ontological distinctions between similar frame elements. 2. Missing frame elements. 3. Differences in lexical realization patterns (e.g. German \u2018fahren\u2019 does not distin-\nguish between Operate_vehicle and Ride_vehicle frames).\nNevertheless this empirical evidence shows that most of FrameNet frames indeed are language independent and therefore provide an opportunity for use as a multilingual coarse-grained lexicon in GF, as described in Section 4. Although FrameNet addresses all parts-of-speech, its strength and focus is on verbs for which the best coverage is provided. This is largely because while noun-phrase multi-word units are\nextensively \u201cinvented\u201d to denote nominal concepts (especially in technical domains), phrasal verbs are more fixed, commonly reused (across domains) and are often captured in dictionaries of standard language. Since the advantage of valence structures is more obvious for verbs, in this paper we consider only FrameNet frames with verbal frame evoking lexical entries."}, {"heading": "3 GF Application Grammar Development: the Current Approach", "text": "GF facilitates reusability by splitting the grammar development in two levels:\n1. A general-purpose resource grammar covers a wide range of morphological paradigms and syntactic structures and as such is highly ambiguous. GF provides a Resource Grammar Library (RGL) [6] implementing a common API for more than 20 languages. 2. Domain specific application grammars reuse the RGL, defining semantic structures and the subset of natural language (syntax and lexicon) that is used within a particular CNL. Application grammars reduce or even eliminate ambiguities.\nDevelopment of a resource grammar requires in-depth GF knowledge and in-depth linguistic knowledge about the particular language. Once a resource grammar is provided, application grammars are built on top of it significantly reducing the linguistic knowledge prerequisites (a non-linguist native or fluent speaker should be sufficient), as well as he or she can be less experienced with GF.\nGF differentiates not only between general-purpose resource grammars and domain-specific application grammars, but also between abstract syntax and concrete syntax. The abstract syntax captures the semantically relevant structure of a CNL, defining grammatical categories and functions for building abstract syntax trees [5]. The concrete syntax defines the linearization of the CNL abstract syntax trees at the surface level for each language. Translation among languages (concrete syntaxes) is provided via abstract syntax1.\nWe will describe the current approach to the RGL-based GF application grammar development using the MOLTO Phrasebook application [4] for multilingual translation of touristic phrases as an example. Phrasebook is a CNL implemented in 15 languages and is aimed to be usable by anyone without prior training. It has 42 categories and 290 functions. The number of phrases it can generate is infinite, but on a reasonable level of tree depth 3, Phrasebook has nearly 500,000 abstract syntax trees [4]. We will consider only a small subset of the Phrasebook grammar \u2013 categories (cat) and functions or constructors (fun) that are used to build the abstract syntax trees for the following sample sentences, and to generate these sentences from the corresponding abstract trees2 as given in Figure 3. 1 Note that in GF there is no concept of a language pair or a translation direction. Also there is no common semantic interlingua. Instead there are many application specific (i.e., CNL and domain specific) interlinguas. 2 The provided abstract syntax trees are slightly simplified regarding the pronouns \u2013 their gender, number and politeness features \u2013 to avoid multiple variants.\nIn the next section we will modify the English implementation of the Phrasebook grammar by means of the proposed FrameNet-based resource grammar, acquiring a simpler English Phrasebook (PhrasebookEng) implementation as the result, while preserving the same functionality. However, we will not make any changes neither in the Phrasebook functor (the common incomplete concrete syntax), nor in the abstract syntax, i.e., we will not impose any special requirements on application grammar design.\nA fragment of the incomplete concrete syntax (aka functor) of Phrasebook is given in Figure 5. This is a technical intermediate layer between the abstract syntax and its implementation in concrete syntaxes. It defines language-independent syntactic categories and structures (e.g. PSentence, SProp, PropAction) that are common to all (or most) languages. Thus the concrete syntax of a particular language has to specify only language-dependent structures and the lexicon (e.g. AWant, Good, Pizza).\nThe predication patterns (Action) with verbs at the centre are perhaps the most complex functions in Phrasebook (from the implementation point of view). Note that these actions are of type Cl (clause): this will be the gluing point for the integration of\nVerbs, in general, are at the centre of a sentence, both syntactically and semantically. They have the most complex inflectional paradigms (at least in inflective languages). The syntactic and semantic valence of a verb is defined via its argument and modifier structure. This inevitably requires solid linguistic knowledge.\nRGL differentiates among V (intransitive), V2 (transitive) and V3 (ditransitive) verbs, as well as some more specific types of verbs with syntactically fixed argument structure. The syntactic valence patterns for the predefined verb types are fixed when defining a verb in the application lexicon; these patterns do not depend on the argument (i.e. the case or preposition of the argument does not depend on a particular NP). Other valences are specified while constructing a verb phrase \u2013 as adverbial modifiers (Adv); their syntactic patterns are specified by the application developer for each target language, depending on the semantic role of the argument and syntactic properties of the language.\nIf compared to nouns, there are much less verbs and they are more ambiguous (see WordNet statistics3, for example), thus verbs are also more reusable linguistic units than nouns. This suggests that a reusable lexicon of verbs would be helpful for GF application developers. However, this requires not only a dictionary, but also additional information about the basic syntactic valences for the direct and indirect objects. Even more helpful would be a multilingual resource grammar of verb valences. 3 http://wordnet.princeton.edu/wordnet/man/wnstats.7WN.html\nThere is a small, limited multilingual lexicon provided by the RGL, but it does not provide systematic means for scaling and expanding beyond the V-, V2- and V3-like valences. The basic lexicon also does not support polysemous verbs \u2013 valences often are different for various meanings of the same verb, and vice versa.\nAn impression of the syntactic coverage of the GF Resource Grammar Library can be obtained from its API documentation4. Figure 7 illustrates some of the constructors for clauses, verb phrases, noun phrases, common nouns, and adverbial modifiers that are referred in Figure 5 and Figure 6. For instance, Figure 7 illustrates that a clause can be built from a subject noun phrase with a verb and appropriate arguments. In general, a clause can be built from a subject noun phrase and a verb phrase.\nIn order to use the proposed FrameNet library (in addition to the Resource Grammar API), the application grammar developer will have to consult the FrameNet API as presented in the next section."}, {"heading": "4 Our FrameNet-Based Approach", "text": "The current split of functionality between the application and the common libraries expects applications to define the domain specific knowledge in all languages by using specific verbs and defining their syntactic valences in each target language.\nOur proposal is to raise the abstraction level for the common GF clause construction API from the current syntactic definition to a more semantic one. As we discussed in Section 2, the research on frame semantics suggests that an exhaustive cross-domain linguistic model of semantic frames and roles is possible, and it has been implemented for multiple languages. We believe that it is possible and reasonable to facilitate the development of multilingual application grammars in GF by referencing a common API of semantic frames that provide language-specific linearization for whole clauses or verb phrases (VP), and can optionally provide a default choice of a lexical unit that evokes the frame and default syntactic valence patterns. 4 http://www.grammaticalframework.org/lib/doc/synopsis.html\nIn particular, we envision a resource grammar library that is built on top of the current RGL offering each of the FrameNet\u2019s semantic frames as a function that builds a clause from given parameters: fillers of the core elements of that frame, and an optional list of elements filling the peripheral roles. The FrameNet API would be implemented semi-automatically by generating GF code from FrameNet data providing a set of overloaded functions for each frame \u2013 mapping the frame (its elements) to the default or specific syntactic realization (linearization). Our observation is that, in the current approach to GF application development, a miniature ad-hoc \u2018framenet\u2019 is actually implemented for each application. Moreover, it is often \u2018reused\u2019 in a copypaste-edit manner from previous applications or from concrete syntaxes of other languages that implement the same application. We would like to promote systematic means for reusing this language-specific knowledge via common languageindependent frames.\nThe following simplified assumptions underlie the default behaviour of our approach (the default behaviour can be overridden for specific syntactic patterns and lexical units \u2013 see systematic \u201cexceptions\u201d illustrated below):\n1. For each frame element there is a typical syntactic pattern that is used in most cases \u2013 independently of the verb that evokes the frame. I.e., both semantic and syntactic valences can be defined at the frame level.\n1.1. There is a common syntactic realization of a frame (a clause or a verb phrase) that is reused by most verbs that evoke the frame.\n2. It is possible to specify a default lexical unit (the most general and/or the most frequently used verb) that evokes the frame, so that it can be used in the linearization (translation) of the frame, if no specific verb is provided.\n3. In the CNL settings, it is often sufficient that only core semantic valences (core frame elements according to FrameNet) are available.\nThese assumptions, of course, do not hold in general, but they help us to keep the presentation of our approach simpler. Even then we cannot fully isolate the application developer from providing some language-specific features. For example, the Phrasebook application in English (and similarly in Russian) needs to distinguish between locations that are \u201cat place\u201d or \u201cin place\u201d \u2013 the preposition does not depend on the frame and not even on the specific verb, but on the particular noun (the filler of a frame element). In contrast to the highly analytical English, in many languages it might be necessary to customize the realization of the whole clause, depending on the verb. For example, in Latvian (and similarly in Russian, Italian and German) there are verbs (systematic \u201cexceptions\u201d) that instead of the subject in the nominative case and the object in the accusative case require the subject in the dative case and the object in the nominative case5 (see Figure 8). In the actual implementation of the FrameNet RGL, such agreement variations have to be handled by alternative verb-specific clauses implemented in the frame functions.\n5 Here we use the term \u2018case\u2019 in a broad sense: in Italian, for example, there are no cases for nouns; cases are expressed by prepositions, pronouns and implicitly by word order.\nAs in the case of the syntactic RGL, the proposed semantic resource grammars of the FrameNet library will also be ambiguous as such: the same verb can evoke different frames, and the same frame might be evoked by contradicting verbs (e.g. both \u2018to love\u2019 and \u2018to hate\u2019 evoke the same Experiencer_focus frame). However, the intuition is that the developer of a domain-specific CNL will reduce or eliminate the semantic ambiguity by avoiding ambiguous mappings between lexical units and frames, by specifying concrete verb lexemes instead of relying on the default ones etc. \u2013 analogically as it is currently done at the syntactic level.\nTo illustrate the use of the FrameNet API, we provide a sample re-implementation of some clause-building functions from the MOLTO Phrasebook application (see Figure 9) in contrast to the current PhrasebookEng implementation of the same functions as shown earlier in Figure 6.\nAs seen in Figure 9, the application grammar developer still has to provide the domain-specific knowledge that the application requires, and some simple constructors of the GF RGL are still used, but the code is more intelligible and \u2018flat\u2019 \u2013 it is not specified how the parameters (frame elements) are glued together to build up verb phrases and clauses6. The proposed API refers to the semantic roles only: if the user specifies, for example, the resident of the Residence frame (ALive action in Phrasebook), the FrameNet library maps it to the relevant syntactic role (subject in this case). Thus the verb and clause building part of application grammars such as Phrasebook is in essence reduced to mapping domain-specific concepts to the appropriate general FrameNet frames, and to specifying the omitted core frame elements, if any (NIL7).\nIn multilingual applications, there is a general issue of selecting lexical units \u2013 translation equivalents. For example, for the Residence frame, there are many possible verbs that describe the same situation with various semantic nuances (e.g. \u2018to camp\u2019, \u2018to dwell\u2019, \u2018to live\u2019, \u2018to stay\u2019; see Figure 1). If these differences are relevant to the application domain, then a particular lexical unit can be explicitly specified. If the differences are not considered important for a particular use-case or concept, the preferred lexical unit for the chosen frame can be omitted, resulting in a robust system that would use a default verb (e.g. \u2018to live\u2019) when generating a text, and that would allow all frame-relevant verbs in parsing.\nAn advantage of this approach is the ability to build robust multilingual CNL applications without expertise in all covered languages. The benefit of using GF is that it would be possible to port such applications to other languages without going into details of their grammars \u2013 as they are already implemented in the common RGL. Furthermore, it is possible to omit the details about how the semantic roles are mapped to syntactic elements, as the same semantic element may be expressed by different syntactic means when translating the same clause to another language.\nThe API of the proposed FrameNet RGL is illustrated in Figure 10 (similarly as the API of GF RGL in Figure 7). The function names match the FrameNet frame names, thus the API can be automatically documented by FrameNet data providing definitions and examples for each frame (function) and each frame element (argument of the function).\nAlthough currently we have handcrafted the code of the sample FrameNet library, we have done it systematically using the actual FrameNet data that is well structured and includes statistics from a FrameNet-annotated corpus. This has given confidence that FrameNet data can be used to automatically generate both the abstract syntax of the FrameNet API and its implementation for English and other languages using the current GF RGL syntactic categories and constructors, and properly addressing verbspecific valence patterns.\n6 Note that the implementation of the AWantGo function is not \u2018flat\u2019 \u2013 there are nested frames. I.e., it might be necessary to specify the semantic tree structure, but not the syntactic structure. 7 We have not specified the implementation of NIL arguments yet, but this is only a technical mater.\nWe have performed some initial experiments on automatic GF code generation from FrameNet data, but the development of a more elaborated convertor is pending. Nevertheless, there are only about 1000 frames in FrameNet, therefore the generated code can also be manually debugged and improved afterwards.\nThe manually generated code for several FrameNet frames, as shown in Figure 11, implements the features in a very similar manner as the Phrasebook application shown earlier in Figure 6 \u2013 which is to be expected, as it needs to realize similar syntactic structures with the same GF resources. However, a major difference is that this code would be reusable for multiple applications, and it could cover larger domains in a scalable way.\nThere are still some technical issues that need to be addressed, such as a more convenient way for specifying omitted core frame elements, but we believe that these are minor challenges. A particular concern is common peripheral semantic roles such as Time, Place and Manner that are encountered in nearly all frames (if they are not among the core roles for that frame). Again, the current Resource Grammar API deals with them on a syntactic level \u2013 providing means to attach various adverbial modifiers. We propose adding them as a (possibly empty) list of peripheral parameters, allowing the language-specific API implementation to handle the word order changes as needed."}, {"heading": "5 Discussion and Future Work", "text": "Currently the GF toolset provides a reusable syntactic framework for the development of multilingual domain-specific CNLs. When one acquires a solid understanding of the RGL structure and design principles, and gets used to the RGL-based application grammar design patterns, it is a rather rapid development to provide a concrete syntax for a language he or she knows well8. However, the process still might not be straightforward, especially when porting a third-party application, as it might not be enough to look at the code of e.g. English implementation to (immediately) understand the intended meaning of a specific abstract word or clause to provide an appropriate translation. In addition, different application grammars that cover related domains will more or less overlap, so that the same structures are re-implemented for each application.\nIn the current approach, GF application grammar developers essentially provide a miniature domain-specific framenet for each application. We make a case for basing application development on a common, reusable semantic framework, and argue that it is reasonably possible to develop such a framework by leveraging the existing FrameNet data. Working on the semantic level requires specific knowledge and training as well9, but the resulting systems are more generic and easier to reuse across languages and across applications and domains.\nThe proposed approach is aimed to lower the entrance barrier of the GF application grammar development by moving it from the language-specific syntactic level towards the language-independent semantic level. The long-term goal is to facilitate the development of multilingual applications by providing robust means for automatic alignment of translation equivalents (particularly verbs), and by reducing syntactic and lexical ambiguities that appear in the parsing and generation of less restricted CNLs. GF has been chosen as an advanced and well-resourced framework for this purpose, but the proposed general principle could be applied also to other grammar formalisms.\nThe main limitations of the proposed approach to some extent are related to the limitations of FrameNet, particularly its coverage (in terms of lexical units). Furthermore, the coverage might differ among languages. The list of the lexical units for each frame could be extended via WordNet, as it has been shown by Johansson and Nugues [18], however then we would have to fall back to the frame-specific (vs. verbspecific) valence patterns. Another limitation is that even the most frequently used verb-specific valence patterns might not be appropriate in specific cases.\nAlthough we have tested our proposal only on the English FrameNet data and English Phrasebook grammar, considering other languages only theoretically, we believe that in overall this would ease the multilingual GF application development, and that\n8 The experience of the MOLTO team shows that adding a new language to Phrasebook takes 1.5 days on average. 9 GF developers would have to explore and consult the docummentation of FrameNet data (https://framenet.icsi.berkeley.edu/fndrupal/framenet_data) while designing or porting an application grammar.\nthe limitations can be overcome by using the RGL syntactic structures directly where necessary. By relying on the default syntactic realization and the default lexical units, one can quickly obtain the first working version of a multilingual aplication for further testing and tuning. In fact, the default behaviour can be specified already in the functor that defines the common language-independent structures of an application grammar.\nApart from the development of the GF code generation facility from FrameNet data and apart from a wider evaluation taking into account both more languages and more applications, future work is also to investigate the possibilities for semiautomatic multilinguality by choosing the most appropriate lexical units automatically, and by aligning lexical units (translation equivalents) among different languages.\nAn additional direction for future work is the application of this semantic layer to relatively unrestricted natural language \u2013 in line with the naturalist approach [1]. Angelov [19] has demonstrated the potential of the current GF Resource Grammar Library in statistical parsing of unrestricted texts (using weights extracted from a treebank). FrameNet data would provide additional means in disambiguation and would provide mapping of parse results to semantic categories. Also Barzdins [20] has addressed bridging the gap between the CNL and full natural language through use of FrameNet on the discourse level. Integration with frame semantics thus provides additional means towards semantic parsing of less controlled text."}, {"heading": "Acknowledgments", "text": "This work has been supported by the European Regional Development Fund under the project No. 2011/0009/2DP/2.1.1.1.0/10/APIA/VIAA/112. The authors would like to thank the reviewers for the detailed comments and constructive criticism."}], "references": [{"title": "Naturalness vs. Predictability: A Key Debate in Controlled Languages", "author": ["P. Clark", "W.R. Murray", "P. Harrison", "J. Thompson"], "venue": "Revised papers of the Workshop on Controlled Natural Language (CNL 2009), LNCS/LNAI,", "citeRegEx": "1", "shortCiteRegEx": "1", "year": 2010}, {"title": "A Comparison of three Controlled Natural Languages for OWL", "author": ["R. Schwitter", "K. Kaljurand", "A. Cregan", "C. Dolbear", "G. Hart"], "venue": "Proceedings of the 4th International Workshop on OWL Experiences and Directions (OWLED), CEUR,", "citeRegEx": "2", "shortCiteRegEx": "2", "year": 2008}, {"title": "Attempto Controlled English for Knowledge Representation", "author": ["N.E. Fuchs", "K. Kaljurand", "T. Kuhn"], "venue": "Proceedings of the 4th International Reasoning Web Summer School, LNCS,", "citeRegEx": "3", "shortCiteRegEx": "3", "year": 2008}, {"title": "Controlled Language for Everyday Use: the MOLTO Phrasebook", "author": ["A. Ranta", "R. Enache", "G. D\u00e9trez"], "venue": "Proceedings of the 2nd Workshop on Controlled Natural Language (CNL 2010), LNCS/LNAI,", "citeRegEx": "4", "shortCiteRegEx": "4", "year": 2012}, {"title": "Grammatical Framework: Programming with Multilingual Grammars", "author": ["A. Ranta"], "venue": "CSLI Publications,", "citeRegEx": "5", "shortCiteRegEx": "5", "year": 2011}, {"title": "The GF Resource Grammar Library", "author": ["A. Ranta"], "venue": "Linguistic Issues in Language Technology,", "citeRegEx": "6", "shortCiteRegEx": "6", "year": 2009}, {"title": "Implementing controlled languages in GF", "author": ["K. Angelov", "A. Ranta"], "venue": "Revised papers of the Workshop on Controlled Natural Language (CNL 2009), LNCS/LNAI,", "citeRegEx": "7", "shortCiteRegEx": "7", "year": 2010}, {"title": "Towards a More Natural Multilingual Controlled Language Interface to OWL", "author": ["N. Gruzitis", "G. Barzdins"], "venue": "Proceedings of the 9th International Conference on Computational Semantics (IWCS),", "citeRegEx": "8", "shortCiteRegEx": "8", "year": 2011}, {"title": "The Berkeley FrameNet project", "author": ["C.F. Baker", "C.J. Fillmore", "J.B. Lowe"], "venue": "Proceedings of the COLING-ACL, Montreal,", "citeRegEx": "9", "shortCiteRegEx": "9", "year": 1998}, {"title": "Background to FrameNet", "author": ["C.J. Fillmore", "C.R. Johnson", "M.R.L. Petruck"], "venue": "In: International Journal of Lexicography,", "citeRegEx": "10", "shortCiteRegEx": "10", "year": 2003}, {"title": "Using FrameNet for the semantic analysis of German: Annotation, representation, and automation", "author": ["A. Burchardt", "K. Erk", "A. Frank", "A. Kowalski", "S. Pado", "M. Pinkal"], "venue": "Multilingual FrameNets in Computational Lexicography: Methods and Applications, Mouton de Gruyter, Berlin,", "citeRegEx": "11", "shortCiteRegEx": "11", "year": 2009}, {"title": "The SALSA corpus: a German corpus resource for lexical semantics", "author": ["A. Burchardt", "K. Erk", "A. Frank", "A. Kowalski", "S. Pado", "M. Pinkal"], "venue": "Proceedings of the 5th International Conference on Language Resources and Evaluation,", "citeRegEx": "13", "shortCiteRegEx": "13", "year": 2006}, {"title": "Spanish FrameNet: A frame-semantic analysis of the Spanish lexicon", "author": ["C. Subirats"], "venue": "Mouton de Gruyter, Berlin,", "citeRegEx": "14", "shortCiteRegEx": "14", "year": 2009}, {"title": "The Japanese FrameNet Project: An Introduction", "author": ["O. Kyoko", "S. Fujii", "S. Ishizaki", "T. Ohori", "H. Saito", "R. Suzuki"], "venue": "Proceedings of the Workshop on Building Lexical Resources from Semantically Annotated Corpora (at LREC),", "citeRegEx": "15", "shortCiteRegEx": "15", "year": 2004}, {"title": "Thai FrameNet Construction and Tools", "author": ["D. Leenoi", "S. Jumpathong", "P. Porkaew", "T. Supnithi"], "venue": "In: International Journal on Asian Language Processing,", "citeRegEx": "16", "shortCiteRegEx": "16", "year": 2011}, {"title": "Semantic frames as interlingual representations for multilingual lexical databases", "author": ["H.C. Boas"], "venue": "In: International Journal of Lexicography,", "citeRegEx": "17", "shortCiteRegEx": "17", "year": 2005}, {"title": "Using WordNet to Extend FrameNet Coverage", "author": ["R. Johansson", "P. Nugues"], "venue": "Proceedings of the Workshop on Building Frame Semantics Resources for Scandinavian and Baltic Languages (at NODALIDA),", "citeRegEx": "18", "shortCiteRegEx": "18", "year": 2007}, {"title": "The Mechanics of the Grammatical Framework", "author": ["K. Angelov"], "venue": "PhD Thesis, Chalmers University of Technology and University of Gothenburg,", "citeRegEx": "19", "shortCiteRegEx": "19", "year": 2011}, {"title": "When FrameNet meets a Controlled Natural Language", "author": ["G. Barzdins"], "venue": "Proceedings of the 18th Nordic Conference on Computational Linguistics (NODALIDA),", "citeRegEx": "20", "shortCiteRegEx": "20", "year": 2011}], "referenceMentions": [{"referenceID": 0, "context": "Controlled natural languages (CNL) can be divided into two general types according to the formalist or the naturalist approach [1].", "startOffset": 127, "endOffset": 130}, {"referenceID": 1, "context": "The formalist approach supports a deterministic, bidirectional mapping of CNL to a formal language like first-order logic (FOL) or, more commonly, to description logic, namely OWL (Web Ontology Language) [2], allowing the integration with existing tools for reasoning, consistency checking and model building.", "startOffset": 204, "endOffset": 207}, {"referenceID": 2, "context": "Attempto Controlled English [3]), and there are CNLs that do not have an underlying logic-based formalism (e.", "startOffset": 28, "endOffset": 31}, {"referenceID": 3, "context": "MOLTO Phrasebook [4] for multilingual translation of touristic phrases).", "startOffset": 17, "endOffset": 20}, {"referenceID": 4, "context": "Grammatical Framework (GF) [5] is a categorial grammar formalism and a toolkit for programming multilingual grammar applications.", "startOffset": 27, "endOffset": 30}, {"referenceID": 5, "context": "Besides the grammar formalism itself, an important part of GF is its Resource Grammar Library (RGL) [6] that encapsulates the low-level linguistic knowledge about morphology and syntax of currently more than 20 languages (the number is constantly growing).", "startOffset": 100, "endOffset": 103}, {"referenceID": 6, "context": "In particular, it has been shown that GF is a convenient framework for rapid and flexible implementation of multilingual CNLs \u2013 both those rooted in a formal language like the FOL-based Attempto Controlled English [7] and those rooted in a relatively informal language like standard touristic phrases [4].", "startOffset": 214, "endOffset": 217}, {"referenceID": 3, "context": "In particular, it has been shown that GF is a convenient framework for rapid and flexible implementation of multilingual CNLs \u2013 both those rooted in a formal language like the FOL-based Attempto Controlled English [7] and those rooted in a relatively informal language like standard touristic phrases [4].", "startOffset": 301, "endOffset": 304}, {"referenceID": 7, "context": "for authoring and verbalizing OWL ontologies (as implemented, for example, in [8]), developing and porting a less restricted CNL requires more linguistic knowledge about the particular language, and more experience in GF (particularly, in using RGL).", "startOffset": 78, "endOffset": 81}, {"referenceID": 8, "context": "FrameNet [9] is a lexicographic database that describes word meanings based on the principles of frame semantics.", "startOffset": 9, "endOffset": 12}, {"referenceID": 9, "context": "The central idea of frame semantics is that word meanings must be described in relation to semantic frames [10].", "startOffset": 107, "endOffset": 111}, {"referenceID": 10, "context": "This avoids the commitment to a small set of universal roles, whose specification has turned out to be controversial in the past [11].", "startOffset": 129, "endOffset": 133}, {"referenceID": 11, "context": "A number of projects have investigated the use of English FrameNet frames for other languages, such as German (SALSA project [13]), Spanish [14], Japanese [15], and lately also for Thai, Chinese, Italian, French, Bulgarian, Hebrew [16].", "startOffset": 125, "endOffset": 129}, {"referenceID": 12, "context": "A number of projects have investigated the use of English FrameNet frames for other languages, such as German (SALSA project [13]), Spanish [14], Japanese [15], and lately also for Thai, Chinese, Italian, French, Bulgarian, Hebrew [16].", "startOffset": 140, "endOffset": 144}, {"referenceID": 13, "context": "A number of projects have investigated the use of English FrameNet frames for other languages, such as German (SALSA project [13]), Spanish [14], Japanese [15], and lately also for Thai, Chinese, Italian, French, Bulgarian, Hebrew [16].", "startOffset": 155, "endOffset": 159}, {"referenceID": 14, "context": "A number of projects have investigated the use of English FrameNet frames for other languages, such as German (SALSA project [13]), Spanish [14], Japanese [15], and lately also for Thai, Chinese, Italian, French, Bulgarian, Hebrew [16].", "startOffset": 231, "endOffset": 235}, {"referenceID": 15, "context": "Also Boas [17] suggests the use of semantic frames as interlingual representation for multilingual lexicons.", "startOffset": 10, "endOffset": 14}, {"referenceID": 5, "context": "GF provides a Resource Grammar Library (RGL) [6] implementing a common API for more than 20 languages.", "startOffset": 45, "endOffset": 48}, {"referenceID": 4, "context": "The abstract syntax captures the semantically relevant structure of a CNL, defining grammatical categories and functions for building abstract syntax trees [5].", "startOffset": 156, "endOffset": 159}, {"referenceID": 3, "context": "We will describe the current approach to the RGL-based GF application grammar development using the MOLTO Phrasebook application [4] for multilingual translation of touristic phrases as an example.", "startOffset": 129, "endOffset": 132}, {"referenceID": 3, "context": "The number of phrases it can generate is infinite, but on a reasonable level of tree depth 3, Phrasebook has nearly 500,000 abstract syntax trees [4].", "startOffset": 146, "endOffset": 149}, {"referenceID": 16, "context": "The list of the lexical units for each frame could be extended via WordNet, as it has been shown by Johansson and Nugues [18], however then we would have to fall back to the frame-specific (vs.", "startOffset": 121, "endOffset": 125}, {"referenceID": 0, "context": "An additional direction for future work is the application of this semantic layer to relatively unrestricted natural language \u2013 in line with the naturalist approach [1].", "startOffset": 165, "endOffset": 168}, {"referenceID": 17, "context": "Angelov [19] has demonstrated the potential of the current GF Resource Grammar Library in statistical parsing of unrestricted texts (using weights extracted from a treebank).", "startOffset": 8, "endOffset": 12}, {"referenceID": 18, "context": "Also Barzdins [20] has addressed bridging the gap between the CNL and full natural language through use of FrameNet on the discourse level.", "startOffset": 14, "endOffset": 18}], "year": 2012, "abstractText": "In this paper we present an ongoing research investigating the possibility and potential of integrating frame semantics, particularly FrameNet, in the Grammatical Framework (GF) application grammar development. An important component of GF is its Resource Grammar Library (RGL) that encapsulates the low-level linguistic knowledge about morphology and syntax of currently more than 20 languages facilitating rapid development of multilingual applications. In the ideal case, porting a GF application grammar to a new language would only require introducing the domain lexicon \u2013 translation equivalents that are interlinked via common abstract terms. While it is possible for a highly restricted CNL, developing and porting a less restricted CNL requires above average linguistic knowledge about the particular language, and above average GF experience. Specifying a lexicon is mostly straightforward in the case of nouns (incl. multi-word units), however, verbs are the most complex category (in terms of both inflectional paradigms and argument structure), and adding them to a GF application grammar is not a straightforward task. In this paper we are focusing on verbs, investigating the possibility of creating a multilingual FrameNet-based GF library. We propose an extension to the current RGL, allowing GF application developers to define clauses on the semantic level, thus leaving the language-specific syntactic mapping to this extension. We demonstrate our approach by reengineering the MOLTO Phrasebook application grammar.", "creator": "Microsoft Word"}}}