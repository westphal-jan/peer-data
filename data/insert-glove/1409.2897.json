{"id": "1409.2897", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "9-Sep-2014", "title": "Co-adaptation in a Handwriting Recognition System", "abstract": "Handwriting is 76.52 a policias natural mayall and http://www.usgs.gov versatile witthaus method disarms for human - burla computer viennois interaction, especially eckelberry on small mobile devices such 3-2 as 81.28 smart 74.2 phones. However, as handwriting asfur varies significantly from twin-boom person togi to person, it is populi difficult to c\u00e2mara design 91.03 handwriting vel recognizers 12-state that perform moriwaki well rajni for peformances all pecaut users. A reducibility natural gosei solution kombi is orpington to neoliberals use machine callea learning repaid to 4.695 adapt the leaflets recognizer to the alinea user. lorente One complicating factor colquhoun is that, wpix as the computer bayville adapts craigleith to the user, medievalist the user ki-moon also belts adapts to sujawal the computer and flintshire probably changes birthplace their handwriting. This khryapa paper investigates rentap the chernovol dynamics of 73-68 co - kunitake adaptation, \u017cytno a 12-16 process in sachet which culminate both the computer and reedsport the user wasmuth are resit adapting their alswang behaviors in order branchlets to millgrove improve aahed the speed and accuracy dugong of the communication pays-bas through handwriting. moher We devised autosports an information - theoretic miskito framework for 4-month quantifying mallender the royalists efficiency sukhteh of a capodimonte handwriting system kennaway where the system hegar includes tortona both gorakhpur the agrilife user and stansell the duleep computer. Using f-117 this framework, we reallocating analyzed data stickers collected yamama from europe-1 an felda adaptive handwriting recognition system bsd and sunil characterized samardzic the impact worts of machine stepparent adaptation and of human tradedoubler adaptation. We pattengill found that 32.41 both barrow machine calcitriol adaptation and human adaptation barzun have 49-21 significant gae impact on lomo the input debelle rate sufi and tomatillos must be gaylords considered together in order .319 to improve 248.1 the efficiency of seipel the arh system as typ a whole.", "histories": [["v1", "Tue, 9 Sep 2014 21:06:14 GMT  (205kb,D)", "http://arxiv.org/abs/1409.2897v1", null]], "reviews": [], "SUBJECTS": "cs.HC cs.AI", "authors": ["sunsern cheamanunkul", "yoav freund"], "accepted": false, "id": "1409.2897"}, "pdf": {"name": "1409.2897.pdf", "metadata": {"source": "CRF", "title": "Co-adaptation in a Handwriting Recognition System", "authors": ["Sunsern Cheamanunkul", "Yoav Freund"], "emails": ["scheaman@eng.ucsd.edu", "yfreund@eng.ucsd.edu"], "sections": [{"heading": "Author Keywords", "text": "Co-adaptation; handwriting recognition; communication channel;"}, {"heading": "INTRODUCTION", "text": "Handwriting is a natural and versatile method for humancomputer interaction, especially on small mobile devices such as smart phones. As handwriting varies significantly from person to person, it is difficult to design a handwriting recognition system that performs well for all users. Modern handwriting recognizers resort to machine learning techniques to adapt and specialize their handwriting models to each individual user. As the recognizer adapts to the human user, the user is likely to adapt to the system as well. We call this situation \u201cco-adaptation\u201d where both human and computer adapts to each other simultaneously.\nIn general, co-adaptation can manifest in any adaptive system. Designing a system that co-adapts with the users is a challenging problem on its own [1, 2, 3]. Our goal in this paper is not to address those challenges, but rather to focus on characterizing the impact of machine adaptation and of human adaptation in the context of handwriting recognition. We believe that this study will provide us with useful insights towards designing a more efficient adaptive handwriting recognition system.\nIn order to evaluate performance of a handwriting recognition system under co-adaptation, we introduce a framework based on the idea of Shannon\u2019s communication channel [4] that considers both the user and the handwriting recognizer in a single system. Under this framework, we define the notion of \u201cchannel rate\u201d that measures the amount of information successfully transfered from the user to the computer.\nTo quantify the effect of machine adaptation and of user adaptation empirically, we developed a handwriting recognition system that is capable of adapting to the handwriting of each individual user over time. We collected usage data from 15 different users and performed an analysis of the channel rate.\nThe paper is organized as follows. First, in Section , we present the information-theoretic framework for quantifying the efficiency of a handwriting system where the system includes both the user and the computer. Next, in Section , we describe our adaptive handwriting recognition algorithm that we developed for our experiment. Then, in Section , we describe the experiment and present the results in terms of the performance measures derived from the proposed framework. Finally, we draw some conclusions in Section ."}, {"heading": "HANDWRITING RECOGNITION AS A COMMUNICATION CHANNEL", "text": "Unlike typing, which transmits information to the computer at discrete time points, handwriting continuously transmits\nar X\niv :1\n40 9.\n28 97\nv1 [\ncs .H\nC ]\n9 S\nep 2\n01 4\ninformation as the writer creates the trajectory. Traditionally, handwriting data is analyzed one \u201cunit\u201d at a time where \u201cunit\u201d can be a stroke, a character, a word or even a sentence. In this work, we propose an alternative analysis where the data is analyzed in fixed intervals of time. We consider the process of writing as a process through which the intended letter is disambiguated from the other possible letters.\nWe formalize this process using the concept of communication channel [4]. Let E denote the set of all possible input. Technically, the set E can be a set of sentences, a set of words, or a set of characters. Without loss of generality, in this work, we assume that E is a set of 26 English characters. We also ignore dependencies between characters due to the language model and due to the co-articulation effects between neighboring handwritten characters.\nAs shown in Figure 1, the channel is comprised of two separate processes. First, the handwriting process is the process of which the user translates an intent M \u2208 E into a series of hand movements which is sampled at some rate to create a discrete time trajectory: W1:T = [(x1, y1), . . . , (xT , yT )]. In other words, this process encodes the intent M into a trajectory W1:T . Let W denote the entire trajectory vector. The distribution P (W |M) denotes the variability of the encoding process. The second process is the recognition process that decodes the handwriting trajectory back into the original intent. For each time step t where 1 \u2264 t \u2264 T , the process maps a trajectory W1:t to a distribution over E , denoted by Qt. Let Tfinal and Qfinal denote the final writing duration and the posterior distribution when the user finishes writing the trajectory. According to the theory of channel capacity, the information transmitted through the channel can be quantified by the mutual information between the input M and the decoding posterior Qfinal, denoted by I(M ;Qfinal). We define the mean posterior of Qfinal conditioned on M and the average posterior distribution as follows.\nP (Qfinal|M) = \u222b\nW\u223cP (W |M)\nP (Qfinal|W )P (W |M)\nP (Qfinal) = \u2211 m\u2208E P (M = m)P (Qfinal|M = m)\nGiven these two expressions, we define the mutual information between the character M and the decoding Qfinal as\nI(M ;Qfinal) = H(Qfinal)\u2212 \u2211 m\u2208E P (M = m)H(Qfinal|M = m)\nwhere the entropy of Qfinal is defined as H(Qfinal) = \u2212 \u2211 m\u2208E P (Qfinal = m) log2 P (Qfinal = m)\nNext, we can define the channel rate in terms of the mutual information and expected writing duration as\nRMI = I(M ;Qfinal) E [Tfinal]\n(1)\nHowever, the channel rate RMI is not suitable for practical implementation for two reasons. First, the estimation of H(Qfinal|M) requires an extensive amount of data. Secondly, suppose the original intent is m, RMI yields a high value as long as P (Qfinal|M = m) concentrates any single intent n even when n 6= m. Thus, we propose an alternative measure to the RMI based on the idea of log loss, called RLL. We define RLL to be\nRLL =\nH(Qfinal)\u2212 \u2211 m\u2208E P (M = m)(\u2212 log2 P (Qfinal = m|M = m))\nE[Tfinal] (2)\nThe relationship between RMI and RLL is worth noting. When (\u2212 log2 P (Qfinal = m|M = m)) is small then the conditional entropy H(Qfinal|M) is also small. As a result, the mutual information I(M ;Qfinal) will be close to its maximal possible value of H(Qfinal). In other words, the log loss term (\u2212 log2 P (Qfinal = m|M = m)) provides an upper bound for the conditional entropy H(Qfinal|M) up to some constant factor. For the remaining of this paper, when we refer to the channel rate, we strictly refer to RLL.\nIntuitively, the channel rate is a measure that quantifies both accuracy and speed of a handwriting recognition channel at the same time. Handwriting, as well as many other motor control tasks, obeys the speed-accuracy tradeoff [5]. It is not sufficient to quantify the efficiency of a handwriting recognition system by its recognition accuracy alone. For example, a system that requires the user to write each character in a specialized form may attain a very high recognition accuracy, but it would require the user more time and effort to use. Such system might not be as efficient as a system that makes more errors but allows the user to write freely. This leads us to believe that the channel rate is a suitable measure that any handwriting recognition system should aim to maximize. In a sense, maximizing the channel rate is equivalent to finding a balance between maximizing the recognition accuracy and minimizing the writing time and effort of the user.\nBased on this framework, it follows that the channel rate can be improved by a combination of human learning and machine learning, which corresponds to improving the handwriting process and the recognition process respectively. Ideally, Qfinal will always be concentrated on the original intent M . This would mean that the channel is perfect and works without error. However, in real-world scenarios, errors will occur. One source of errors comes from mistakes made in the recognition process. These recognition errors can be reduced using training data and machine learning. The harder problem is when there is a significant overlap between P (W |M) for different intents. In this situation, we will need to rely on the user to make their handwriting less ambiguous. Although the effect of human learning is always present, we believe that it can be enhanced by giving useful feedback to the user in the form of guidance or lessons."}, {"heading": "ADAPTIVE RECOGNITION ALGORITHM", "text": "We developed an adaptive handwriting recognition algorithm that, for every time step t, maps a partial handwriting trajectory W1:t to a posterior distribution over E , denoted byQfinal. By realizing that the effect of user adaptation is likely to be\npresent, we designed our recognition algorithm so that it can adapt not only to each individual user, but also to the changes of the handwriting trajectory distribution P (W |M) unique to each user over time. The idea of specializing and adapting the recognizer for each user has been studied and shown to be effective in reducing the error rate [6, 7, 8].\nAt a high-level, our adaptive recognition system can be outlined as follows. For each user, the system creates and maintains one or more character models for each character in E . We refer to each of such models as a prototype. Each prototype is basically a representative handwriting instance from the user. Technically, the prototypes can be viewed as left-toright hidden Markov models with Gaussian observation [9]. Let Pu denote the set of prototypes for a user u. The adaptivity of our system comes directly from the fact that Pu is modified over time. In the decoding process, given a handwriting trajectory and a set of prototypes Pu, the system computes a posterior distribution Qfinal and, when a single prediction is needed, the element with the maximum likelihood is predicted.\nFeature vectors and distance function In addition to the x- and y-coordinate, each handwriting trajectory is supplemented with writing direction information. Specifically, each handwriting instance is represented by a sequence of feature vectors \u3008f1, . . . , fT \u3009 where fi = (xi, yi, dxi, dyi). (xi, yi) denotes the normalized touchscreen coordinate and (dxi, dyi) = ( xi\u2212xi\u22121 z , yi\u2212yi\u22121 z ), z =\u221a\n(xi \u2212 xi\u22121)2 + (yi \u2212 yi\u22121)2 denotes the writing direction. To measure the similarity between two handwriting instances, we use dynamic time warping (DTW) distance [10] as the distance function in our algorithm. The DTW distance is commonly used for variable-length data such as handwriting and speech. The calculation can be done efficiently using dynamic programming."}, {"heading": "Initial adaptation", "text": "The initial adaptation is critical for any intelligent system. It is unquestionable that the performance of any well-behaved intelligent system increases as the system learns more about the user. If the initial adaptation is poor, the users might get\nfrustrated with the system and stop using it even before it can fully adapt to them.\nWe address the problem of initial adaptation by sharing data across different users. Typically, people do have similar handwriting especially when they share the same educational culture. The process of the initial adaptation can be described as follows. In the very first interaction with the user u, our system has no information about the user and, therefore, assign a set of typical prototypes which has been trained using data from multiple users in the past. Specifically, the typical prototypes are the centroids of the clusters returned by running a clustering algorithm (k-means) on a set of training handwriting instances. We refer to this set of prototypes as P0. After the first interaction, the system creates a new set of prototypes P(u,1) by recomputing the centroids of the clusters after adding the examples from the user to the pool with significantly higher weights than the rest.\nAdapting the prototypes over time After collecting a few examples of the user\u2019s handwriting, the system again performs the weighted clustering algorithm on the data to generate a new set of prototypes P(u,i+1). In this stage, only examples from the user and previous prototypes are considered. This adaptation process happens after 3-5 new examples are acquired.\nTo improve real-time performance, we need to keep the lengths (number of states) of the prototypes as small as possible. After the new prototypes are chosen, the system performs an additional step to shorten the length of each prototype. This pruning process is similar in spirit to removing and merging unnecessary hidden states in an HMM. The basic idea is to remove unwanted states while maintaining the same recognition power using a variant of forward-backward algorithm [11]. Figure 2 shows the hidden states before and after the reduction step."}, {"heading": "Decoding", "text": "Our decoding algorithm is based on the standard Bayesian inference. Namely, given a trajectory W1:T and the current set of prototypes Pu, the algorithm computes the distance from W1:t to each of the prototypes in Pu for all 1 \u2264 t \u2264 T . The distances are then transformed into a probability distribution\nQt. We use e\u2212x as the transfer function. When a single prediction is expected, the algorithm simply returns the prediction with the maximum likelihood."}, {"heading": "EXPERIMENT", "text": "The main objective of our experiment is to determine and quantify the effect of machine adaptation and of human adaptation when the users interact with the system over some period of time. We implemented the handwriting recognition system described in Section as an application on Apple iOS platform. The application was presented to the users as a writing game. In each session, each participant was presented with a random permutation of the 26 lowercase English alphabets i.e. E = [a . . . z] and P (M) is uniform. The objective of the game was to write the presented characters as quickly as possible and, more importantly, the handwritten characters should be recognizable by the system. A score, which is the average channel rate of the session, was given to the user right after each session to reflect the performance of the session. There were 15 participants in this experiment. We asked them to play our game for at least 20 sessions over multiple days in his/her own pace. We did not control past experience of the participants. Some of them had more experience with touch screens than others.\nThe experiment was set up to demonstrate a condition called co-adaptation where both the user and the computer were allowed to adapt together. We denote this condition Radapt. To investigate the effect of co-adaptation, we create a controlled condition called Rfixed where the computer was not allowed to adapt with the user. In other words, we ran a simulation to figure out what the channel rates would have been if the prototype sets were never changed from P0. Ideally, it would be more preferable to have Rfixed determined by another control group where the prototypes were kept fixed and never changed. However, the results from the simulated condition can be seen as a lower bound on the amount of the\nimprovement attributable to human learning and, therefore, it is sufficient to demonstrate our point."}, {"heading": "RESULTS AND DISCUSSION", "text": "The average channel rates per session of the two conditions Radapt and Rfixed are shown in Figure 3a and Figure 3b respectively. In both conditions, the results show increases of the channel rate over time where the improvement in the early sessions seems to be larger than in the later sessions. Figure 3c shows the difference of Radapt and Rfixed which corresponds to the channel rate of the system when we ignore the effect of user adaptation. From the result, we observe that the impact of machine adaptation tapers off after 10 sessions.\nAlthough the prototype set was not changing in Rfixed, we observe that channel rate increases over the sessions. To quantify our confidence to this increase, we perform the paired\nt-test to compare the difference between the average channel rate in the first 5 sessions and in the last 5 sessions. We find that the difference is statistically significant with p-value \u00a1 0.0011. This suggests that the users improve the handwriting on their own even without machine adaptation. In other words, the effect of user adaptation is indeed significant.\nFurthermore, Figure 4a and Figure 4b reveal that the major contribution of user adaptation comes from the fact that the users write faster in the last 5 sessions compared to the first 5 sessions (p < 0.0001), and not because of the system received more information from the user (p = 0.9723). This result is as expected according to the law of practice [12].\nWe also perform per-user analysis of the channel rate. In Figure 5a, we compare Radapt and Rfixed for each user. We find that the channel rate of Radapt is significantly higher than that of Rfixed with p < 0.0006. This result confirms that the machine adaptation helps improving the overall channel rate. In addition, we calculate the theoretical maximum of the channel rate under the assumption of the perfect recognition, denoted by Rideal. The maximum rates are given by H(Qfinal)/E [Tfinal] and we approximated H(Qfinal) = log2(26).\nIn the case of perfect recognition, a simple way to increase the channel rate is to expand the character set E to incluse more symbols. However, in reality, doing so can lead to a recognition error rate which impairs the channel rate. An interesting\nfuture direction is to design a character set that would maximize the channel rate. Figure 5b reveals the efficiency of each letter for our handwriting channel. Characters with complex stokes, such as \u2019q\u2019, \u2019g\u2019,\u2019k\u2019, are not as efficient as characters with simple strokes such as \u2019c\u2019 ,\u2019o\u2019, \u2019l\u2019. While this finding is not surprising, it implies that, for a handwriting system to be truly efficient, it must allow the user to write in a less complex style while not losing recognition accuracy. How to exactly design such system is still an open problem and requires a more elaborate study."}, {"heading": "CONCLUSIONS", "text": "We presented a information-theoretic framework for quantifying the information rate of a system that combines a human writer with a handwriting recognition system. Using the notion of channel rate, we investigated the impact of machine adaptation and human adaptation in an adaptive handwriting recognition system. We analyzed data collected from a small deployment of our adaptive handwriting recognition system and concluded that both machine adaptation human adaptation have significant impact on the channel rate. This result led us to believe that, for a handwriting recognition system to achieve the maximum channel rate, both machine adaptation and human adaptation are required and must be present together. Specifically, such system should be able to adapt to the user and, at the same time, allow the users to write or scribble using simple hand movement as improving writing\nspeed is crucial for attaining a higher channel rate. Additionally, the system should have a mechanism to giving feedback to the user when their handwriting cannot be recognized."}], "references": [{"title": "Steps to take before intelligent user interfaces become real, Interacting with computers", "author": ["K. H\u00f6\u00f6k"], "venue": null, "citeRegEx": "1", "shortCiteRegEx": "1", "year": 2000}, {"title": "Assessing demand for intelligibility in context-aware applications", "author": ["B.Y. Lim", "A.K. Dey"], "venue": "Proceedings of the 11th international conference on Ubiquitous computing - Ubicomp", "citeRegEx": "3", "shortCiteRegEx": "3", "year": 2009}, {"title": "The information capacity of the human motor system in controlling the amplitude of movement", "author": ["P.M. Fitts"], "venue": "Journal of Experimental Psychology", "citeRegEx": "5", "shortCiteRegEx": "5", "year": 1954}, {"title": "Writer adaptation for online handwriting recognition, Pattern Analysis and Machine Intelligence, IEEE Transactions on", "author": ["S.D. Connell", "A.K. Jain"], "venue": null, "citeRegEx": "6", "shortCiteRegEx": "6", "year": 2002}, {"title": "Writer adaptation for on-line handwritten character recognition", "author": ["N. Matic", "I. Guyon", "J. Denker", "V. Vapnik"], "venue": "in: Proceedings of the Second International Conference on Document Analysis and Recognition (ICDAR \u201993),", "citeRegEx": "7", "shortCiteRegEx": "7", "year": 1993}, {"title": "Personalized handwriting recognition via biased regularization", "author": ["W. Kienzle", "K. Chellapilla"], "venue": "in: Proceedings of the 23rd International Conference on Machine Learning (ICML \u201906),", "citeRegEx": "8", "shortCiteRegEx": "8", "year": 2006}, {"title": "Markov Models for Handwriting Recognition, SpringerBriefs in Computer", "author": ["T. Pl\u00f6tz", "G. a. Fink"], "venue": null, "citeRegEx": "9", "shortCiteRegEx": "9", "year": 2011}, {"title": "Fundamentals of Speech Recognition, Vol. 103 of Prentice Hall signal processing series", "author": ["L. Rabiner", "B.-H. Juang"], "venue": null, "citeRegEx": "10", "shortCiteRegEx": "10", "year": 1993}, {"title": "A Gentle Tutorial of the EM Algorithm and its Application to Parameter Estimation for Gaussian Mixture and Hidden Markov Models, Tech", "author": ["J. Bilmes"], "venue": null, "citeRegEx": "11", "shortCiteRegEx": "11", "year": 1997}, {"title": "Mechanisms of skill acquisition and the law of practice", "author": ["A. Newell", "P.S. Rosenbloom"], "venue": "Cognitive skills and their acquisition,", "citeRegEx": "12", "shortCiteRegEx": "12", "year": 1981}], "referenceMentions": [{"referenceID": 0, "context": "Designing a system that co-adapts with the users is a challenging problem on its own [1, 2, 3].", "startOffset": 85, "endOffset": 94}, {"referenceID": 1, "context": "Designing a system that co-adapts with the users is a challenging problem on its own [1, 2, 3].", "startOffset": 85, "endOffset": 94}, {"referenceID": 2, "context": "Handwriting, as well as many other motor control tasks, obeys the speed-accuracy tradeoff [5].", "startOffset": 90, "endOffset": 93}, {"referenceID": 3, "context": "The idea of specializing and adapting the recognizer for each user has been studied and shown to be effective in reducing the error rate [6, 7, 8].", "startOffset": 137, "endOffset": 146}, {"referenceID": 4, "context": "The idea of specializing and adapting the recognizer for each user has been studied and shown to be effective in reducing the error rate [6, 7, 8].", "startOffset": 137, "endOffset": 146}, {"referenceID": 5, "context": "The idea of specializing and adapting the recognizer for each user has been studied and shown to be effective in reducing the error rate [6, 7, 8].", "startOffset": 137, "endOffset": 146}, {"referenceID": 6, "context": "Technically, the prototypes can be viewed as left-toright hidden Markov models with Gaussian observation [9].", "startOffset": 105, "endOffset": 108}, {"referenceID": 7, "context": "To measure the similarity between two handwriting instances, we use dynamic time warping (DTW) distance [10] as the distance function in our algorithm.", "startOffset": 104, "endOffset": 108}, {"referenceID": 8, "context": "The basic idea is to remove unwanted states while maintaining the same recognition power using a variant of forward-backward algorithm [11].", "startOffset": 135, "endOffset": 139}, {"referenceID": 9, "context": "This result is as expected according to the law of practice [12].", "startOffset": 60, "endOffset": 64}], "year": 2014, "abstractText": "Handwriting is a natural and versatile method for humancomputer interaction, especially on small mobile devices such as smart phones. However, as handwriting varies significantly from person to person, it is difficult to design handwriting recognizers that perform well for all users. A natural solution is to use machine learning to adapt the recognizer to the user. One complicating factor is that, as the computer adapts to the user, the user also adapts to the computer and probably changes their handwriting. This paper investigates the dynamics of co-adaptation, a process in which both the computer and the user are adapting their behaviors in order to improve the speed and accuracy of the communication through handwriting. We devised an information-theoretic framework for quantifying the efficiency of a handwriting system where the system includes both the user and the computer. Using this framework, we analyzed data collected from an adaptive handwriting recognition system and characterized the impact of machine adaptation and of human adaptation. We found that both machine adaptation and human adaptation have significant impact on the input rate and must be considered together in order to improve the efficiency of the system as a whole.", "creator": "LaTeX with hyperref package"}}}