{"id": "1505.06531", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "25-May-2015", "title": "Affine and Regional Dynamic Time Warpng", "abstract": "Pointwise matches between two time series are gelati of dongara great importance syllabus in aico time series analysis, and dynamic kasym time igniter warping (DTW) is filic known home-school to provide agnetha generally reasonable low-budget matches. geostrophic There itsukushima are kabera situations 1918-1920 where all-digital time stavridis series alignment should be stoplight invariant to unrewarding scaling and offset in eidc amplitude perrotta or where local regions jka of walden the considered 4-37 time formula series favouring should uthup be ballymore strongly holdover reflected geoghegan in pointwise matches. nehi Two different variants long-course of mineral DTW, affine DTW (convict ADTW) dobek and powar regional communism DTW (astrocytes RDTW ), are hsv proposed to handle scaling 206.9 and offset calveley in amplitude 80-million and r\u00edas provide regional emphasis 3,846 respectively. phytoliths Furthermore, viorst ADTW overmyer and teruo RDTW matrimony can sagemiller be walloon combined 60611 in two pints different sezgin ways to generate alignments that pablito incorporate bekar advantages from both methods, pinstriped where the affine westerns model gollner can be evil-doers applied either 34.22 globally aricha to t.stewart the mineirao entire tumkur time series or naiburg locally to airmobile each hatchings region. socon The organise proposed alignment yreka methods wijdenbosch outperform grousset DTW on wiredu specific schoolers simulated datasets, 19.31 and royko one - 73.19 nearest - dubious neighbor classifiers pfieffer using their fedexforum associated rhatigan difference measures anisfeld are gurcharan competitive with elshani the 2,221 difference measures associated ramtron with kushti state - rodenbach of - the - 40million art alignment \u00bb methods on dodik real datasets.", "histories": [["v1", "Mon, 25 May 2015 03:23:31 GMT  (546kb,D)", "http://arxiv.org/abs/1505.06531v1", null]], "reviews": [], "SUBJECTS": "cs.CV cs.CE cs.LG", "authors": ["tsu-wei chen", "meena abdelmaseeh", "daniel stashuk"], "accepted": false, "id": "1505.06531"}, "pdf": {"name": "1505.06531.pdf", "metadata": {"source": "CRF", "title": "Affine and Regional Dynamic Time Warping", "authors": ["Tsu-Wei Chen", "Meena Abdelmaseeh", "Daniel Stashuk"], "emails": [], "sections": [{"heading": null, "text": "Index Terms\u2014Pattern recognition, time series, algorithms, alignment, similarity measures.\nF"}, {"heading": "1 INTRODUCTION", "text": "A time series is a sequence of values that are typicallyarranged in a chronological order, and data of such form is abundant in everyday life. Discovery of a set of matches between points in two time series can be tremendously useful for analysis. If point a in time series s is of high interest, researchers may also be interested in finding the point that best matches point a in another time series t. Points of interest include hints of financial meltdown from stock market prices, regulatory genes from gene expression data and earthquake activities from seismic data.\nDynamic time warping (DTW) is a method that matches points in two time series based on the assumption that nonlinear temporal variations exist. Figure 1 illustrates a purely vertical alignment (an alignment is defined to be a set of matches) and the DTW alignment of two time series subject to non-linear temporal variations, where a match between two points from different time series is illustrated by connecting the two points with a line. The DTW alignment is much more visually consistent. This work focuses on DTW, because it is a widely known method for aligning two time series that has enjoyed success in many domains. In addition, a comprehensive survey demonstrated that DTW outperforms many other methods across many applications [1]. However, DTW can produce pathological alignments, which are identified based on a context wherein the identifier has a particular model in mind. As a result, there has been a large influx of methods based on DTW to realize particular models for obtaining better alignments under specific contexts [2].\nIn this work, two alignment methods that add specific models to DTW are proposed: affine DTW (ADTW) and regional DTW (RDTW). ADTW models one time series as an amplitude-scaled and offset-biased version of another\n\u2022 T. Chen, M. Abdelmaseeh and D. Stashuk are with the Department of Systems Design Engineering, University of Waterloo, Waterloo, Canada.\ntime series during alignment. It tries to find the best scaling, offset and alignment simultaneously. Numerous types of time series fall under this affine model. For example, temperature and humidity data can be subject to different scalings, offsets and temporal variations depending on the geographic location and environment. An unintuitive alignment produced by DTW for two temperature time series subject to scaling, offset and temporal variation is illustrated in Figure 2A, where DTW matches a large number of points in one time series to the peak in another time series. While normalizing s and t before applying DTW can alleviate this undesired behavior to some extent, ADTW nonetheless provides the most visually consistent alignment (see Figure 2B and C). ADTW is a simplified version of the method proposed in [3], where scaling, offset, rotation, and shear/squeeze mappings are imposed on images when applying DTW. ADTW only models scaling and offset, so its alignment will not be confused by modeling of rotation and shear/squeeze mappings for time series that cannot undergo such transformations.\nScenarios may arise where there are local regions in a time series reflective of components of interest, so they should be emphasized to find a more desirable alignment between two time series. Regional DTW (RDTW) is proposed to accommodate this scenario by substituting the pointwise distance in DTW with a regional distance. Many types of time series contain components of interest that should be focused on. For example, a motor unit potential (MUP) is the ensemble summation of several muscle fiber potentials (MFPs), and their analysis is crucial to determining the\nar X\niv :1\n50 5.\n06 53\n1v 1\n[ cs\n.C V\n] 2\n5 M\nay 2\n01 5\n2\ncharacteristics of the MUP. In Figure 3, each MUP (time series s and t respectively) is the ensemble summation of two MFPs. Each MFP can be shifted in time by a different amount and can thus be subject to different degrees of overlap. DTW produces a bad alignment where a large portion of the leftmost MFP in t is matched to the rightmost MFP in s (see Figure 3B). In contrast, RDTW aligns the constituent MFP contributions in a more desirable manner (see Figure 3C).\nADTW and RDTW can be combined to include both affine modeling and emphasis on local regions. Two different ways of combining ADTW and RDTW (one in a global manner and one in a local manner) are proposed. Globalaffine RDTW (GARDTW) models one time series as a scaled and offset version of another time series when aligning them with regional emphasis. For example, the amount of rainfall over time is subject to different scalings, offsets and temporal variations across different locations. In the analysis of this rainfall data, placing an emphasis on sections with short but heavy amounts of rainfall can be useful in predicting such behaviors. The preference for this example is to emphasize on matching components reflective of short but heavy amounts of rainfall within two time series that can undergo scaling, offset and temporal variation. Localaffine RDTW (LARDTW) emphasizes on regions when performing an alignment, where each region in one time series is modeled as a scaled and offset version of the respective matched region in another time series. Revisiting the MUP example, the same MFP can have different scalings caused by slight electrode movement. The objective in this example is to correctly align the MFPs that can undergo different scalings within two MUPs.\nThe rest of this paper is organized as follows. Section 2 provides a review for the technical details of DTW, and the proposed methods of ADTW, RDTW, GARDTW and\nLARDTW are described in detail. Section 3 covers evaluations of the alignments and difference measures generated by the proposed methods. Finally, Section 4 concludes this paper. All figures and results in this paper can be easily reproduced using the publicly available code at [4]."}, {"heading": "2 ALIGNMENT METHODOLOGY", "text": ""}, {"heading": "2.1 Notation", "text": "Let s = (s1, s2, ..., sn) \u2208 Rn and t = (t1, t2, ..., tm) \u2208 Rm be two time series of interest. Also, let p represent a sequence of matched points between s and t, where\np = {p(1) = (a1, b1), p(2) = (a2, b2), ..., p(|p|) = (a|p|, b|p|)}\nand (ak, bk) \u2208 Z2>0 means that point sak is matched to point tbk . In addition, let d be a difference measure between two points, and d is assumed to be the squared difference unless mentioned otherwise."}, {"heading": "2.2 DTW Review", "text": "DTW is a method that matches points in two time series that are subject to non-linear temporal variations. For a pair of time series s and t, DTW searches for an optimal alignment p\u2217 among all possible alignments p \u2208 P such that\nD(s, t, p) = |p|\u2211 k=1 d(sak , tbk)\nis minimized subject to the following constraints:\n\u2022 Boundary: p(1) = (1, 1) and p(|p|) = (n,m). \u2022 Monotonicity: If p(k) = (a, b) and p(k + 1) = (c, d),\nthen c \u2265 a and d \u2265 b \u2200k. \u2022 Step Size: If p(k) = (a, b) and p(k + 1) = (c, d), then\nc\u2212 a \u2264 1 and d\u2212 b \u2264 1 \u2200k.\nFor simplicity, the boundary, monotonicity and step size constraints will be jointly referred to as the DTW constraints. D(s, t, p\u2217) will also be referred to as the DTW difference measure.\nDynamic programming is effective in reducing the time complexity for finding the optimal alignment p\u2217 to this constrained optimization problem, because p\u2217 has optimal substructures and there are overlapping subproblems. A solution can be formulated using these properties. Let p\u2217(a,b) be the optimal alignment for (s1, s2, ..., sa) and (t1, t2, ..., tb) subject to the DTW constraints. First, a table of D(s, t, p\u2217(i,j)) values is constructed for all 1 \u2264 i \u2264 n and 1 \u2264 j \u2264 m where i is the row position and j is the column position. This table is referred to as the DTW table, and p\u2217 can be found after building this table. The DTW table can be updated starting from the first row (i = 1) from left to right (j = 1 to j = m), and then the next row (i = 2) can be filled from left to right\n3 as well until the nth row is reached. The update formula is as follows:\nD(s, t, p\u2217(a,b)) = d(sa, tb) + min(D(s, t, p \u2217 (a\u22121,b\u22121)),\nD(s, t, p\u2217(a,b\u22121)), D(s, t, p \u2217 (a\u22121,b)))\n(1)\nAfter constructing the DTW table, a backtracking procedure can be applied on the DTW table starting from D(s, t, p\u2217(n,m)) to generate the optimal alignment p \u2217.\nAdditional constraints can be placed on alignments to 1) eliminate pathological alignments, and 2) reduce time and space complexity. A well-known constraint is the SakoeChiba band, where si can only be matched to points from the set {ti\u2212wq , ti\u2212wq+1, ..., ti, ..., ti+wq\u22121, ti+wq} and wq \u2208 Z\u22650. The width of the band wb is given by wb = 1+2wq , and it is recommended to be tuned based on specific problems [5].\nFor simplicity of complexity analysis, let us assume that n = m. Since the update formula in Equation 1 for filling each element in the DTW table is O(1) in time, filling the entire table requires a time complexity of O(wbn) under the Sakoe-Chiba band. The space complexity for constructing the DTW table is O(wbn) as well. The longest path that can be obtained from backtracking is 2n \u2212 1, so backtracking is O(n) in time and space. Hence, the total time and space complexities for finding the optimal alignment p\u2217 are O(wbn)."}, {"heading": "2.3 Affine DTW", "text": "Affine DTW (ADTW) increments DTW to allow arbitrary scaling and offset in amplitude between two time series subject to temporal variations. In ADTW, s is assumed to be a scaled and offset version of t with temporal variations. In more formal terms, the goal is to find a path p\u2217, scaling c\u2217 \u2208 R and offset e\u2217 \u2208 R that minimize\nDA(s, t, p, c, e) = |p|\u2211 k=1 d(sak , ctbk + e)\nsubject to the DTW constraints. For brevity, DA(s, t, p, c, e) subject to the DTW constraints will be referred to as DA(s, t, p, c, e)constr.. This formulation aims to optimize for a global minimum in DA(s, t, p, c, e)constr. with respect to p, c and e simultaneously, which is different from finding the scaling and offset first prior to applying DTW to obtain an alignment.\nFinding (p\u2217, c\u2217, e\u2217) is too computationally expensive because dynamic programming can no longer be applied, so hard expectation-maximization (EM) is used to find a suboptimal solution (pl, cl, el) in Algorithm 1. Hard EM guarantees that DA(s, t, plv+1, c l v+1, e l v+1)constr. \u2264 DA(s, t, p l v, c l v, e l v)constr., and it converges to a local optimum at a linear rate when certain conditions are fulfilled [6].\nAlgorithm 1 ADTW\n1: pl, cl, el, cl0 \u2190 1, el0 \u2190 0, DA,prev \u2190\u221e, v \u2190 1 2: while 1 do 3: plv \u2190 argmin\np DA(s, t, p, c\nl v\u22121, e l v\u22121)constr.\n4: (clv, e l v)\u2190 argmin\nc,e DA(s, t, p\nl v, c, e)constr.\n5: if DA,prev \u2212DA(s, t, pl, cl, el) < Dstop then 6: pl \u2190 plv, cl \u2190 clv, el \u2190 elv 7: break 8: v \u2190 v + 1\nIn Algorithm 1, plv is obtained by applying DTW on s and clv\u22121t+ e l v\u22121, and (c l v, e l v) are computed with the following equations after setting p = plv :\nclv =\n\u2211|p| k=1 saktbk \u2212 1 |p| ( \u2211|p| k=1 sak)( \u2211|p| k=1 tbk)\u2211|p|\nk=1 t 2 bk \u2212 1|p| ( \u2211|p| k=1 tbk) 2 (2)\nelv = 1\n|p| |p|\u2211 k=1 (sak \u2212 clvtbk) (3)\nThe above equations can be derived in a manner similar to linear least squares. The scaling clv can be constrained to exist between cmin and cmax to avoid improbable scalings. In addition, DA(s, t, pl, cl, el) will be referred to as the ADTW difference measure. Note that a more general version of ADTW where each prespecified subset of points has its own scaling and offset can be solved in a similar way.\nAssuming n = m, each iteration in Algorithm 1 takes O(wbn) time and space to run DTW to obtain plv . Looking at Equation 2 and 3, computing (clv, e l v) is O(n) in time and O(1) in space. Hence, ADTW is O(ncwbn) in time and O(wbn) in space, where nc is the number of iterations for convergence."}, {"heading": "2.4 Regional DTW", "text": "Regional DTW (RDTW) modifies DTW to place more weight in a region of points potentially representative of a component of interest in a time series. This is accomplished by substituting the pointwise distance measure d with a distance dr that measures the difference between points in a region. Let wr = 1 + 2wh \u2208 Z\u22651 be the region width to consider. Then, RDTW finds an alignment p\u2217 that minimizes\nDR(s, t, p, wh) = |p|\u2211 k=1 dr(sak , tbk , wh)\nsubject to the DTW constraints, where\ndr(sa, tb, wh) = 1\nwa,b wh\u2211 w=\u2212wh\n1\u2264a+w\u2264n 1\u2264b+w\u2264m\nd(sa+w, tb+w)\nand wa,b is the number of distances added in the above summation. Dynamic programming can be utilized in the\n4 same manner as DTW, where the update formula is as follows:\nDR(s, t, p \u2217 (a,b), wh)\n= dr(sa, tb, wh) + min(DR(s, t, p\u2217(a\u22121,b\u22121), wh),\nDR(s, t, p \u2217 (a,b\u22121), wh), DR(s, t, p \u2217 (a\u22121,b), wh)) (4)\nThe same DTW techniques can be used to construct the RDTW table and obtain the optimal alignment p\u2217. DR(s, t, p\n\u2217, wh) is referred to as the RDTW difference measure.\nAssuming n = m, the RDTW table requires O(wbn) elements to be filled with the update formula. It turns out that most elements in the RDTW table can be updated with a time complexity of O(1) instead of O(wr) using the following observation:\ndr(sa, tb, wh) = 1\nwa,b [\u2212d(sa\u2212wh\u22121, tb\u2212wh\u22121)+\nwa\u22121,b\u22121dr(sa\u22121, tb\u22121, wh) + d(sa+wh , tb+wh)]\nThis observation is only applicable when sa\u22121 and tb\u22121 exist, which corresponds to wb(n\u22121) elements. The remaining wb elements take O(wr) time, so the total time complexity is O(wb(n\u2212 1)) +O(wbwr) = O(wbn) because wr \u2264 n. The total space complexity is also O(wbn).\nSo far, the effects of the region width wr have not been discussed, which is crucial to achieving good results. RDTW with different wr\u2019s is applied to the same MUP alignment example from the introduction in Figure 4. Highly variable alignments are observed across the different widths, and the alignment is most reasonable when whn = 0.05. Setting wh by searching for the value that offers the best result based on a target evaluation criterion is proposed."}, {"heading": "2.5 Global-Affine RDTW", "text": "In global-affine RDTW (GARDTW), one time series is modeled as the scaled and offset version of another time series when aligning them with regional emphasis. Formally, the goal is to find a path p\u2217, scaling c\u2217 and offset e\u2217 that minimize\nDG(s, t, p, c, e, wh) = |p|\u2211 k=1 dg(sak , tbk , c, e, wh)\nsubject to the DTW constraints, and\ndg(sak , tbk , c, e, wh)\n= 1\nwak,bk\nwh\u2211 w=\u2212wh\nw:1\u2264ak+w\u2264n w:1\u2264bk+w\u2264m\nd(sak+w, ctbk+w + e)\nDG(s, t, p, c, e, wh) subject to the DTW constraints will be referred to as DG(s, t, p, c, e, wh)constr.. Similar to ADTW, finding (p\u2217, c\u2217, e\u2217) is not computationally feasible, and instead a suboptimal solution (pg, cg, eg) using hard EM is sought in Algorithm 2. pgv is obtained by applying RDTW on s and cgv\u22121t+ e g v\u22121, and (c g v, e g v) is computed with equations in Appendix A. These equations can be derived by proving convexity of DG and setting its derivative with respect to c and e to zero. DG(s, t, pg, cg, eg, wh) will be referred to as the GARDTW difference measure. From Algorithm 2 and assuming n = m, GARDTW is O(ncwbn) in time and O(wbn) in space, where nc is the number of iterations to convergence. Similar to ADTW, the scaling cgv can be constrained to exist between cmin and cmax to avoid improbable scalings.\nAlgorithm 2 GARDTW\n1: pg, cg, eg, cg0 \u2190 1, e g 0 \u2190 0, DG,prev \u2190\u221e, v \u2190 1 2: while 1 do 3: pgv \u2190 argmin\np DG(s, t, p, c\ng v\u22121, e g v\u22121, wh)constr.\n4: (cgv, e g v)\u2190 argmin\nc,e DG(s, t, p\ng v, c, e, wh)constr.\n5: if DG,prev \u2212DG(s, t, pg, cg, eg) < Dstop then 6: pg \u2190 pgv, cg \u2190 cgv, eg \u2190 egv 7: break 8: v \u2190 v + 1\nGARDTW is illustrated in Figure 5, and it provides a better alignment than ADTW and RDTW by modeling both scaling and regional emphasis."}, {"heading": "2.6 Local-Affine RDTW", "text": "In local-affine RDTW (LARDTW), the region surrounding each point is assumed to be a scaled and offset version of another region surrounding the corresponding matched point. Formally, LARDTW finds an alignment p\u2217 that minimizes\nDL(s, t, p, wh) = |p|\u2211 k=1 dl(sak , tbk , wh)\nsubject to the DTW constraints, where\ndl(sa, tb, wh) = 1\nwa,b min ca,b,ea,b wh\u2211 w=\u2212wh\n1\u2264a+w\u2264n 1\u2264b+w\u2264m\nd(sa+w, t \u2032 b+w)\nand t\u2032b+w = ca,btb+w + ea,b. DL(s, t, p \u2217, wh) is referred to as the LARDTW difference measure.\n5 The minimizing (c\u2217a,b, e \u2217 a,b) can be obtained using the following equations for each pair of matched points (sa, tb):\nc\u2217a,b = \u03c1a,b \u2212 1wa,b\u03c6a,b\u03c4a,b \u03b3a,b \u2212 1wa,b \u03c4 2 a,b , e\u2217a,b = 1 wa,b (\u03c6a,b \u2212 c\u2217a,b\u03c4a,b)\nwhere\n\u03c1a,b = wh\u2211\nw=\u2212wh 1\u2264a+w\u2264n 1\u2264b+w\u2264m\nsa+wtb+w\n\u03c6a,b = wh\u2211\nw=\u2212wh 1\u2264a+w\u2264n 1\u2264b+w\u2264m\nsa+w, \u03c4a,b = wh\u2211\nw=\u2212wh 1\u2264a+w\u2264n 1\u2264b+w\u2264m\ntb+w\n\u03b7a,b = wh\u2211\nw=\u2212wh 1\u2264a+w\u2264n 1\u2264b+w\u2264m\ns2a+w, \u03b3a,b = wh\u2211\nw=\u2212wh 1\u2264a+w\u2264n 1\u2264b+w\u2264m\nt2b+w\nSimilar to ADTW, the scaling ca,b can be constrained to exist between cmin and cmax to avoid improbable scalings. Dynamic programming can again be utilized in the same manner as DTW, where the update formula for constructing the LARDTW table is as follows:\nDL(s, t, p \u2217 (a,b), wh)\n= dl(sa, tb, wh) + min(DL(s, t, p\u2217(a\u22121,b\u22121), wh),\nDL(s, t, p \u2217 (a,b\u22121), wh), DL(s, t, p \u2217 (a\u22121,b), wh))\nThe same backtracking technique used for DTW is applied to the LARDTW table to obtain p\u2217. LARDTW is illustrated in Figure 6 where its alignment is visually more appropriate than that of both ADTW and RDTW, and this result is attributed to LARDTW\u2019s ability to model different scalings for different regions.\nAssuming n = m, the LARDTW table requires O(wbn) elements to be filled with the update formula. Most elements in the LARDTW table can be updated with a time complexity of O(1) instead of O(wr) using the following observations:\n\u03c1a,b = \u03c1a\u22121,b\u22121 + sa+whtb+wh \u2212 sa\u2212wh\u22121tb\u2212wh\u22121 and (\u03b3a,b, \u03c4a,b, \u03c6a,b, \u03b7a,b) can be updated in a similar manner when a, b > 1. Thus, (ca,b, ea,b) can be updated inO(1) time. Furthermore,\ndl(sa, tb, wh) = 1\nwa,b [\u03b7a,b \u2212 2c\u2217a,b\u03c1a,b\u2212\n2e\u2217a,b\u03c6a,b + (c \u2217 a,b) 2\u03b3a,b + 2c \u2217 a,be \u2217 a,b\u03c4a,b + wa,b(e \u2217 a,b) 2]\nso dl(sa, tb, wh) can be updated in O(1) time when a, b > 1. The time and space complexities for LARDTW are hence analyzed to be O(wbn)."}, {"heading": "3 EVALUATION AND DISCUSSION", "text": ""}, {"heading": "3.1 Parameter Values of the Proposed Methods", "text": "The proposed methods of ADTW, RDTW, GARDTW and LARDTW introduce additional parameters to DTW\u2019s bandwidth parameter wb. What these parameters are set to or how they are set for evaluation are detailed in Table 1, and these parameters are described below. Recall that the SakoeChiba bandwidth wb is 1+2wq , and n is the typical length of a time series in the evaluated dataset. As a result, wqn reflects the bandwidth wb. Similarly, the region width wr is 1+2wh, so whn reflects the region width wr used by RDTW and methods that augment it. Dstop is a parameter related to the stopping condition for the ADTW and GARDTW algorithms shown in Algorithm 1 and 2. (cmin, cmax) exists to avoid improbable scalings for ADTW, GARDTW and LARDTW. Note that each of these parameters has been defined in the previous sections. Unless mentioned otherwise, for all completed evaluations, parameter values for DTW and our proposed methods were set as reported in Table 1."}, {"heading": "3.2 Alignment Evaluation", "text": "The alignments produced by the proposed methods were evaluated by comparing them with true alignments generated through simulations. Two different alignment simulation and evaluation approaches are explored. For global affine simulation, simulated temporal variations, scalings and offsets of real time series were imposed. For componentbased simulation, varying widths and scalings were imposed on simulated components, and these components were superimposed with varying temporal offsets to create a set of time series for alignment evaluation."}, {"heading": "3.2.1 Global Affine Simulation", "text": "For global affine simulation, given a real time series s, a temporal variant of s, \u03c8 = (\u03c81, ..., \u03c8z), was created by defining a warping function \u03c9 = (\u03c9(1), ..., \u03c9(z)) where \u03c9(i) \u2208 {1, ..., n}, and setting \u03c8i = s\u03c9(i). The sequence \u03c9 was constrained to be monotonic to maintain a similar structure in \u03c8, and it was modeled as a random sequence in the following manner:\n\u03c9(i+ 1) =  \u03c9(i) + 1 with probability Pmatch \u03c9(i) + 2 with probability Pdelete \u03c9(i) with probability Pinsert\nwhere Pmatch + Pdelete + Pinsert = 1, \u03c9(1) = 1, and this sequence ends when \u03c9(z + 1) > n. The true alignment pt = {(at1, bt1), ..., (atm, btm)} between s and \u03c8 can be constructed with (atj , b t j) = (\u03c9(j), j). Interpolation of \u03c8 was completed to have the same length as s and pt was modified accordingly for ease of evaluation. Additional scalings and offsets were imposed on \u00b5 = c\u0304\u03c8 + e\u0304, where c\u0304 and e\u0304 were uniformly distributed with [c\u0304min, c\u0304max] and [e\u0304min, e\u0304max] respectively. Gaussian white noise with a standard deviation of \u03c3noise was also imposed. A slight variant of the measure introduced in [7] was used to evaluate an alignment p on s\n6\nand t \u223c N(\u00b5, \u03c3noiseIn), where In is an identity matrix. The variant is as follows:\nMg(pt, p) = 1\n1 2n(n\u2212 1) n\u2211 i=1 \u2211 btj :a t j=i min bl:al=i |btj \u2212 bl|\nwhere better alignments have lower Mg values.\nGlobal affine simulations were based on 3 datasets taken from [8]. These datasets include the number of deaths across different ages in 1 year, the position of the lower lip when saying a certain word, and the temperature across 365 days. All aforementioned datasets are subject to temporal variations, scalings and offsets. For evaluation, 10 time series were taken from each dataset, and 10 time-distorted and affine versions were created for each time series. Let \u03c3 be the standard deviation of all time series in a specific dataset. Then, Pmatch = 0.6, Pdelete = Pinsert = 0.2, c\u0304min = cmin = 0.2, c\u0304max = cmax = 5, e\u0304min = \u2212\u03c3, e\u0304max = \u03c3 and \u03c3noise = nl\u03c3, where nl is defined to be the noise level. An alignment measure Mg was obtained for each alignment method and it was averaged within each dataset to get a dataset score. To obtain an appropriate bandwidth and region width, wqn and wh n were tuned according to Table 1 based on the dataset score. The 3 dataset scores were then averaged to obtain Mavgg .\nMavgg values with different methods and noise levels are plotted in Figure 7. When the noise level is low, ADTW outperforms other methods because it accounts for temporal variations, global scalings and global offsets simultaneously without regional emphasis. GARDTW is second behind ADTW when the noise level is low, but it starts to outperform ADTW as the noise level increases because regional emphasis can have an averaging effect in terms of the alignment."}, {"heading": "3.2.2 Component-Based Simulation", "text": "Each time series was comprised of the superposition of different components with varying widths and scalings at\ndifferent locations for component-based simulation. Let s and t be two simulated component-based time series of length n. Also, let nc be the number of components within a time series. Then, s and t were simulated as follows:\ns = nc\u2211 j=1 a (s) j \u03c6(i (s) j , w (s) j , zj), t = nc\u2211 j=1 a (t) j \u03c6(i (t) j , w (t) j , zj)\nwhere \u03c6(i, w, z) is a component of type z centered at location i with width w, and a is the associated scaling factor. Different component types are associated with different windows commonly used in spectral analysis, where z = 1, 2, 3, 4 denote a Parzen, rectangular, triangular, and flat top weighted window respectively. zj and (w (s) j , w (t) j ) were all generated from discrete uniform distributions with parameters (zmin, zmax) = (1, 4) and (wmin, wmax) = ( n2nc , n nc ). (i (s) j , i (t) j ) were also generated from a discrete uniform distribution with parameters (imin, imax) = (1, n), albeit with an additional constraint that the chronological order of components in s is the same in t. In other words, it was assumed that correct alignments can only proceed forward in time as dictated by DTW\u2019s monotonicity constraint. In addition, (a(s)j , a (t) j ) were generated from a folded normal distribution with parameters (\u00b5a = 1, \u03c32a).\nTo produce a true alignment, only points associated with components were considered. The true alignment pt = {(at1, bt1), ..., (atn, btn)} between s and t can be broken down into two parts: non-overlapping and overlapping. For sections that do not have any overlap of components, obtaining the true alignment is straightforward because it is exactly known how to match one component in s to the corresponding component in t during synthesis of the component-based time series. However, confusion arises when component overlap exists, and it was decided to map an overlapped point to the component whose center is closest to the overlapped point, because all simulated components were symmetric and clearly identifiable close to the center. The component-based evaluation measure Mc is a slight variation of the measure Mg used for global affine simulation:\nMc(pt, p) = 1\n1 2n(n\u2212 1) \u2211 \u2200i belonging\nto a component\n\u2211 btj :a t j=i min bl:al=i |btj \u2212 bl|\nThe evaluated Mc values were averaged across 100 simulated pairs of s and t where n = 400 and nc = 4, and the resulting Mavgc scores are displayed for each alignment method across different \u03c3a values in Figure 8. For this experiment, wq n = 0.5 and wh n were tuned according to Table 1 based on Mavgc . It can be observed that methods based on RDTW consistently outperformed DTW and ADTW, because RDTW has a regional emphasis. Furthermore, as the same component is subject to higher variations in amplitude, LARDTW\n7 outperforms other methods by larger amounts because each region potentially reflective of a component can be scaled differently in LARDTW."}, {"heading": "3.3 Difference Measure Evaluation", "text": "The difference measures associated with the proposed alignment methods were evaluated on 44 datasets from the UCR time series database [9] using the one-nearest-neighbor (1-NN) error rate. To obtain an appropriate bandwidth and region width for each method (DTW, ADTW, RDTW, GARDTW and LARDTW) and dataset for testing, wqn and wh n were tuned according to Table 1 based on the 2-fold stratified cross-validation error rate on the training set.\nDTW is compared against the proposed difference measures using the 1-NN error rate in Figure 9, and clear improvements can be observed for the proposed measures on specific datasets. It is unsurprising that DTW outperformed the proposed measures on certain datasets, because there are datasets (e.g. SyntheticControl) where scaling/offset differences and global trends (exact opposites of affine and regional properties) are important for discrimination.\nThe win-loss ratios of 1-NN with proposed difference measures against other state-of-the-art elastic difference measures are presented in Table 2, where a tie contributes 0.5 to\nboth the number of wins and the number of losses. We call these compared difference measures elastic because distinct alignments with different properties are also generated in the process of computing these difference measures. It is not unreasonable to expect that the classification performance of the respective difference measures can reflect the quality of their respective alignments. The compared state-of-the-art elastic difference measures include weighted DTW (WDTW) [10], derivative DTW (DDTW) [7], weighted derivative DTW (WDDTW) [10], longest common subsequence (LCSS) [11], move-split-merge (MSM) [12], time warp edit (TWE) [13] and edit distance with real penalty (ERP) [14]. The evaluated results of these compared elastic difference measures on the UCR database were taken from [15], and there are 43 datasets that overlap with the evaluation of our proposed methods. Table 2 shows that the RDTW and GARDTW difference measures outperformed DTW with greater than 2 win-loss ratios. While ADTW and LARDTW do not seem to offer particular advantages over DTW from a win-loss ratio perspective, we will later demonstrate that they offer specialized advantages among the compared difference measures. Furthermore, 1-NN with the proposed difference measures is also competitive with the state-of-the-art elastic difference measures as demonstrated by the associated winloss ratios.\nAmong the 43 overlapping datasets evaluated by all compared elastic difference measures, DTW, ADTW, RDTW, GARDTW, LARDTW, WDTW, DDTW, WDDTW, LCSS, MSM, TWE and ERP are each best for 4, 3, 2, 3, 8, 4, 3, 6, 2, 5, 2 and 1 datasets respectively. This suggests that specialized advantages exist for each proposed difference measure on specific datasets even among current state-ofthe-art elastic difference measures. To reiterate, among all evaluated measures and datasets in Table 2, ADTW was found to be best for 3 datasets, RDTW was found to be best for 2 datasets, GARDTW was found to be best for 3 datasets, and LARDTW was found to be best for 8 datasets among the 43 datasets. An ensemble classifier based on the compared elastic difference measures (WDTW, DDTW, WDDTW, LCSS, MSM, TWE and ERP) has been demonstrated to be the most accurate time series classifier ever proposed in the data mining literature [15]. Considering that our proposed difference measures are best for 16 out of the 43 evaluated datasets among the compared elastic difference measures, it is not unreasonable to expect even better results from incorporating our proposed difference measures into the aforementioned ensemble classifier.\nThe average performance rankings for 1-NN for the proposed difference measures and the compared elastic difference measures are illustrated in Figure 10, where a lower rank corresponds to a more accurate classifier. In this scenario, a total of 12 different elastic difference measures were compared. For each dataset, each compared difference measure was given a rank from 1 to 12 based on its associated 1-NN error rate. Finally, for each method, the computed ranks across the 43 UCR datasets were averaged to produce the aforementioned average performance ranking. RDTW and GARDTW clearly have lower average ranks than all other methods. However, it should also be noted that there is no significant statistical difference between any of our\n8\nproposed methods and most of the compared elastic difference measures based on the Friedman rank test as described in [16]. In Figure 10, two elastic difference measures are significantly different in rank based on the associated 1-NN error rate if the absolute difference of their average ranks exceeds the critical difference of 2.356."}, {"heading": "3.4 ADTW vs Normalization Before DTW", "text": "The difference between ADTW and normalization before DTW might not be clear thus far. Normalization before DTW finds the scaling and offset regardless of the alignment, whereas ADTW considers the alignment to find an appropriate scaling and offset in an iterative manner and updates the alignment accordingly. In Figure 11A, ADTW and normalization before DTW are compared across different warping probabilities Pw = 2Pdelete = 2Pinsert based on the global affine simulation (described in Section 3.1.1), where ADTW outperforms normalization before DTW by larger amounts as the warping level increases. The difference between their output alignments is also illustrated in Figure 11B and C, and ADTW\u2019s alignment is closer to the true one. We are by no means claiming that ADTW is better than normalization before DTW in general, especially since there is no evidence that ADTW-based classification is better than using DTW for classification based on the win-loss ratios for real datasets in Table 2. However, what we do want to point out is that ADTW can offer distinctly different alignments from normalization before DTW, because ADTW has the unique property where the alignment, scaling and offset are all dependent on each other. This property might be useful when large amounts of warpings occur, as suggested in\nFigure 11. It is also important to note that ADTW motivated the development of GARDTW and LARDTW."}, {"heading": "3.5 Analysis of Region Width", "text": "Figure 4 demonstrates that region width can be a crucial parameter for RDTW. Figure 12 demonstrates the sensitivity of the 1-NN classification accuracy to the region width for the UCR datasets studied. From Figure 12 it can be seen that the 1-NN RDTW classification accuracy is very sensitive to the region width for some datasets, whereas it is not sensitive to the region width for other datasets. Furthermore, the tuned region width is not arbitrary. In [17], FastShapelet provided the lowest error rate ever recorded for the ECGFiveDays dataset by extracting a subsequence (delayed t-wave) confirmed to be discriminative by a medical expert. Interestingly, the tuned region width for RDTW is roughly equal to the length of this subsequence, and LARDTW offers an even better error rate of 0 by appropriately handling the wandering baseline. In [18], time series extracted from leaf images were presented as a motivating example for a complexity-invariant measure. Associated complexities manifest locally, and the tuned region width for such time series (e.g. the OSULeaf dataset) is small, thereby emphasizing these local differences. In this work, 1- NN using LARDTW with a small region width outperforms the complexity-invariant measure for such data."}, {"heading": "3.6 Actual Runtime Comparison", "text": "In the previous Alignment Methodology section, the runtime complexity of DTW, ADTW, RDTW, GARDTW and LARDTW has been discussed. DTW, RDTW and LARDTW\n9\nshare the time complexity of O(wbn), whereas ADTW and GARDTW share the time complexity of O(ncwbn). Recall that wb is the Sakoe-Chiba bandwidth, nc is the number of iterations required for convergence for the ADTW and GARDTW algorithms and n is the length of the time series to find an alignment for.\nIn Figure 13, the average time taken to produce an alignment for each proposed method (ADTW, RDTW, GARDTW and LARDTW) is compared against DTW. Each point in Figure 13 denotes a dataset from the UCR database. Note that each dataset from the UCR database has a fixed length. The average pairwise alignment times were calculated by randomly selecting 20 time series from each UCR dataset for 10 computations. The parameter values used in this experiment largely follows Table 1, with wqn and wh n being the exceptions. wqn and wh n are both set to 0.2, because most of the wqn and wh n values tuned on the training sets of the UCR database based on the 1-NN error rate do not exceed 0.2.\nIn Figure 13, we can observe that RDTW has almost identical actual computation time to DTW, but ADTW, GARDTW and LARDTW are visibly slower than DTW. The actual alignment times for LARDTW and DTW does not differ by more than a constant multiple of 0.5. Both ADTW and GARDTW can be dramatically slower than DTW with more than 5-fold difference for larger datasets because more iterations are required for convergence (reflected in nc). This set of results suggest that ADTW and GARDTW have high relative computation costs when applied to larger datasets, whereas RDTW and LARDTW have computation times comparable to DTW for larger datasets. Nonetheless, ADTW and GARDTW could offer specific advantages for smaller datasets."}, {"heading": "4 CONCLUSION", "text": "ADTW, RDTW, GARDTW and LARDTW are alignment methods whose models include affine invariance and regional emphasis. If they are applied to problems whose underlying models are similar to the models behind the methods, the proposed DTW variants are expected to provide performance gains as demonstrated in this work on simulated models and real datasets.\nFig. 13: Actual time taken to compute the proposed difference measures against DTW on the UCR database. The average pairwise alignment times were calculated by randomly selecting 20 time series from each UCR dataset for 10 computations."}, {"heading": "APPENDIX A GARDTW AFFINE EQUATIONS", "text": "Setting p = pgv , then\ncgv = \u03c1\u2212 1|p|\u03c4\u03c6 \u03b3 \u2212 1|p|\u03c42 , egv = 1 |p| (\u03c6\u2212 cgv\u03c4) (5)\nwhere\n\u03c1 = |p|\u2211 k=1 1 wak,bk wh\u2211 w=\u2212wh\n1\u2264ak+w\u2264n 1\u2264bk+w\u2264m\nsak+wtbk+w\n\u03b3 = |p|\u2211 k=1 1 wak,bk wh\u2211 w=\u2212wh\n1\u2264ak+w\u2264n 1\u2264bk+w\u2264m\nt2bk+w\n\u03c4 = |p|\u2211 k=1 1 wak,bk wh\u2211 w=\u2212wh\n1\u2264ak+w\u2264n 1\u2264bk+w\u2264m\ntbk+w\n\u03c6 = |p|\u2211 k=1 1 wak,bk wh\u2211 w=\u2212wh\n1\u2264ak+w\u2264n 1\u2264bk+w\u2264m\nsak+w"}], "references": [{"title": "Querying and mining of time series data: experimental comparison of representations and distance measures", "author": ["H. Ding", "G. Trajcevski", "P. Scheuermann", "X. Wang", "E. Keogh"], "venue": "VLDB, vol. 1, no. 2, pp. 1542\u20131552, 2008.", "citeRegEx": "1", "shortCiteRegEx": null, "year": 2008}, {"title": "A review on time series data mining", "author": ["T. Fu"], "venue": "Elsevier EAAI, vol. 24, no. 1, pp. 164\u2013181, 2011.", "citeRegEx": "2", "shortCiteRegEx": null, "year": 2011}, {"title": "Affine invariant dynamic time warping and its application to online rotated handwriting recognition", "author": ["Y. Qiao", "M. Yasuhara"], "venue": "ICPR, vol. 2, pp. 905\u2013908, 2006.  10", "citeRegEx": "3", "shortCiteRegEx": null, "year": 2006}, {"title": "Everything you know about dynamic time warping is wrong", "author": ["C.A. Ratanamahatana", "E. Keogh"], "venue": "Workshop on MTSD, pp. 22\u2013 25, 2004.", "citeRegEx": "5", "shortCiteRegEx": null, "year": 2004}, {"title": "A classification EM algorithm for clustering and two stochastic versions", "author": ["G. Celeux", "G. Govaert"], "venue": "CSDA, vol. 14, no. 3, pp. 315\u2013332, 1992.", "citeRegEx": "6", "shortCiteRegEx": null, "year": 1992}, {"title": "Derivative dynamic time warping", "author": ["E.J. Keogh", "M.J. Pazzani"], "venue": "SIAM SDM, vol. 1, pp. 5\u20137, 2001.", "citeRegEx": "7", "shortCiteRegEx": null, "year": 2001}, {"title": "Functional data analysis with R and MATLAB", "author": ["S. Graves", "G. Hooker", "J. Ramsay"], "venue": "2009.", "citeRegEx": "8", "shortCiteRegEx": null, "year": 2009}, {"title": "Weighted dynamic time warping for time series classification", "author": ["Y.-S. Jeong", "M.K. Jeong", "O.A. Omitaomu"], "venue": "Pattern Recognition, vol. 44, no. 9, pp. 2231\u20132240, 2011.", "citeRegEx": "10", "shortCiteRegEx": null, "year": 2011}, {"title": "The move-split-merge metric for time series", "author": ["A. Stefan", "V. Athitsos", "G. Das"], "venue": "IEEE Transactions on Knowledge and Data Engineering, vol. 25, no. 6, pp. 1425\u20131438, 2013.", "citeRegEx": "12", "shortCiteRegEx": null, "year": 2013}, {"title": "Time warp edit distance with stiffness adjustment for time series matching", "author": ["P.-F. Marteau"], "venue": "Pattern Analysis and Machine Intelligence, IEEE Transactions on, vol. 31, no. 2, pp. 306\u2013318, 2009.", "citeRegEx": "13", "shortCiteRegEx": null, "year": 2009}, {"title": "On the marriage of lp-norms and edit distance", "author": ["L. Chen", "R. Ng"], "venue": "Proceedings of the Thirtieth international conference on Very large data bases-Volume 30, pp. 792\u2013803, VLDB Endowment, 2004.", "citeRegEx": "14", "shortCiteRegEx": null, "year": 2004}, {"title": "Time series classification with ensembles of elastic distance measures", "author": ["J. Lines", "A. Bagnall"], "venue": "Data Mining and Knowledge Discovery, pp. 1\u201328, 2014.", "citeRegEx": "15", "shortCiteRegEx": null, "year": 2014}, {"title": "Statistical comparisons of classifiers over multiple data sets", "author": ["J. Dem\u0161ar"], "venue": "The Journal of Machine Learning Research, vol. 7, pp. 1\u201330, 2006.", "citeRegEx": "16", "shortCiteRegEx": null, "year": 2006}, {"title": "Fast shapelets: A scalable algorithm for discovering time series shapelets", "author": ["T. Rakthanmanon", "E. Keogh"], "venue": "SIAM SDM, vol. 13, 2013.", "citeRegEx": "17", "shortCiteRegEx": null, "year": 2013}, {"title": "A complexity-invariant distance measure for time series", "author": ["G. Batista", "X. Wang", "E. Keogh"], "venue": "SIAM SDM, vol. 11, pp. 699\u2013710, 2011.", "citeRegEx": "18", "shortCiteRegEx": null, "year": 2011}], "referenceMentions": [{"referenceID": 0, "context": "In addition, a comprehensive survey demonstrated that DTW outperforms many other methods across many applications [1].", "startOffset": 114, "endOffset": 117}, {"referenceID": 1, "context": "As a result, there has been a large influx of methods based on DTW to realize particular models for obtaining better alignments under specific contexts [2].", "startOffset": 152, "endOffset": 155}, {"referenceID": 2, "context": "ADTW is a simplified version of the method proposed in [3], where scaling, offset, rotation, and shear/squeeze mappings are imposed on images when applying DTW.", "startOffset": 55, "endOffset": 58}, {"referenceID": 3, "context": "The width of the band wb is given by wb = 1+2wq , and it is recommended to be tuned based on specific problems [5].", "startOffset": 111, "endOffset": 114}, {"referenceID": 4, "context": ", and it converges to a local optimum at a linear rate when certain conditions are fulfilled [6].", "startOffset": 93, "endOffset": 96}, {"referenceID": 5, "context": "A slight variant of the measure introduced in [7] was used to evaluate an alignment p on s", "startOffset": 46, "endOffset": 49}, {"referenceID": 6, "context": "Global affine simulations were based on 3 datasets taken from [8].", "startOffset": 62, "endOffset": 65}, {"referenceID": 7, "context": "The compared state-of-the-art elastic difference measures include weighted DTW (WDTW) [10], derivative DTW (DDTW) [7], weighted derivative DTW (WDDTW) [10], longest common subsequence (LCSS) [11], move-split-merge (MSM) [12], time warp edit (TWE) [13] and edit distance with real penalty (ERP) [14].", "startOffset": 86, "endOffset": 90}, {"referenceID": 5, "context": "The compared state-of-the-art elastic difference measures include weighted DTW (WDTW) [10], derivative DTW (DDTW) [7], weighted derivative DTW (WDDTW) [10], longest common subsequence (LCSS) [11], move-split-merge (MSM) [12], time warp edit (TWE) [13] and edit distance with real penalty (ERP) [14].", "startOffset": 114, "endOffset": 117}, {"referenceID": 7, "context": "The compared state-of-the-art elastic difference measures include weighted DTW (WDTW) [10], derivative DTW (DDTW) [7], weighted derivative DTW (WDDTW) [10], longest common subsequence (LCSS) [11], move-split-merge (MSM) [12], time warp edit (TWE) [13] and edit distance with real penalty (ERP) [14].", "startOffset": 151, "endOffset": 155}, {"referenceID": 8, "context": "The compared state-of-the-art elastic difference measures include weighted DTW (WDTW) [10], derivative DTW (DDTW) [7], weighted derivative DTW (WDDTW) [10], longest common subsequence (LCSS) [11], move-split-merge (MSM) [12], time warp edit (TWE) [13] and edit distance with real penalty (ERP) [14].", "startOffset": 220, "endOffset": 224}, {"referenceID": 9, "context": "The compared state-of-the-art elastic difference measures include weighted DTW (WDTW) [10], derivative DTW (DDTW) [7], weighted derivative DTW (WDDTW) [10], longest common subsequence (LCSS) [11], move-split-merge (MSM) [12], time warp edit (TWE) [13] and edit distance with real penalty (ERP) [14].", "startOffset": 247, "endOffset": 251}, {"referenceID": 10, "context": "The compared state-of-the-art elastic difference measures include weighted DTW (WDTW) [10], derivative DTW (DDTW) [7], weighted derivative DTW (WDDTW) [10], longest common subsequence (LCSS) [11], move-split-merge (MSM) [12], time warp edit (TWE) [13] and edit distance with real penalty (ERP) [14].", "startOffset": 294, "endOffset": 298}, {"referenceID": 11, "context": "The evaluated results of these compared elastic difference measures on the UCR database were taken from [15], and there are 43 datasets that overlap with the evaluation of our proposed methods.", "startOffset": 104, "endOffset": 108}, {"referenceID": 11, "context": "An ensemble classifier based on the compared elastic difference measures (WDTW, DDTW, WDDTW, LCSS, MSM, TWE and ERP) has been demonstrated to be the most accurate time series classifier ever proposed in the data mining literature [15].", "startOffset": 230, "endOffset": 234}, {"referenceID": 12, "context": "proposed methods and most of the compared elastic difference measures based on the Friedman rank test as described in [16].", "startOffset": 118, "endOffset": 122}, {"referenceID": 13, "context": "In [17], FastShapelet provided the lowest error rate ever recorded for the ECGFiveDays dataset by extracting a subsequence (delayed t-wave) confirmed to be discriminative by a medical expert.", "startOffset": 3, "endOffset": 7}, {"referenceID": 14, "context": "In [18], time series extracted from leaf images were presented as a motivating example for a complexity-invariant measure.", "startOffset": 3, "endOffset": 7}], "year": 2015, "abstractText": "Pointwise matches between two time series are of great importance in time series analysis, and dynamic time warping (DTW) is known to provide generally reasonable matches. There are situations where time series alignment should be invariant to scaling and offset in amplitude or where local regions of the considered time series should be strongly reflected in pointwise matches. Two different variants of DTW, affine DTW (ADTW) and regional DTW (RDTW), are proposed to handle scaling and offset in amplitude and provide regional emphasis respectively. Furthermore, ADTW and RDTW can be combined in two different ways to generate alignments that incorporate advantages from both methods, where the affine model can be applied either globally to the entire time series or locally to each region. The proposed alignment methods outperform DTW on specific simulated datasets, and one-nearest-neighbor classifiers using their associated difference measures are competitive with the difference measures associated with state-of-the-art alignment methods on real datasets.", "creator": "LaTeX with hyperref package"}}}