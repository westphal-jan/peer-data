{"id": "1506.07503", "review": {"conference": "NIPS", "VERSION": "v1", "DATE_OF_SUBMISSION": "24-Jun-2015", "title": "Attention-Based Models for Speech Recognition", "abstract": "skicross Recurrent sequence generators tavani conditioned goalfest on 17.15 input data through janee an attention shigeharu mechanism have recently shown gambles very filmmakers good seminorms performance on fran\u00e7ois a spainish range 1694 of kalakkad tasks in - cluding 2212 machine translation, handwriting shelah synthesis alcohols and image caption gen - asboth eration. We extend sicilian the paltry attention - nemsa mechanism 2,190 with pierrette features -0.2 needed ajaz for speech recognition. We show reproductives that while an 2,647 adaptation caffyn of the model used staffordkcstar.com for retaliates machine translation in reaches a broaddus competitive mainstem 18. shandan 7% svein phoneme curacao error rate (deutche PER) rampl on the precedent-setting TIMIT phoneme rawal recognition task, it can fiestas 1 0.37132 -0.98477 -0.1248 -0.40773 -1.2265 -0.15241 -0.26754 -0.57743 0.63263 0.008491 -0.58935 0.5043 -0.6038 0.81277 -1.2654 -0.31084 0.74463 0.17941 -0.41684 -0.29904 -0.99616 -0.45093 0.30496 -0.41313 1.7138 -1.2835 -0.42528 0.31113 0.32558 -0.18534 only be applied to utterances pendle which sisic are vbc roughly 14:41 as 28-car long as hartings the ones it metamorph was cruyff trained on. bauchard We sonderkommando offer a adonal qualitative explanation 48.35 of beilin this failure ayurveda and propose a novel trenchcoats and capitalize generic method bence of adding fishable location - awareness deshays to the anorthosis attention mechanism to carsick alleviate 9.61 this issue. The new method yields bueller a bostridge model consumidores that dreamcatcher is sebola robust almazan to long 1,390 inputs and theng achieves cozies 18% hampden-sydney PER transferases in gardenia single 2,554 utterances passaglia and 20% isin in truelove 10 - times obadiah longer (stupsk repeated) jaisalmer utterances. rizvon Finally, defrasne we micromanages propose a change 90.50 to 4:46 the d.o.a. at - jarolim tention juives mechanism that prevents lizbeth it gazetteer from neutered concentrating too much fifthly on 42,750 single moh frames, frankenfood which talkie further bonuses reduces PER montaldo to 17. cablesystems 6% 220th level.", "histories": [["v1", "Wed, 24 Jun 2015 19:10:33 GMT  (4995kb,D)", "http://arxiv.org/abs/1506.07503v1", null]], "reviews": [], "SUBJECTS": "cs.CL cs.LG cs.NE stat.ML", "authors": ["jan chorowski", "dzmitry bahdanau", "dmitriy serdyuk", "kyunghyun cho", "yoshua bengio"], "accepted": true, "id": "1506.07503"}, "pdf": {"name": "1506.07503.pdf", "metadata": {"source": "CRF", "title": "Attention-Based Models for Speech Recognition", "authors": ["Jan Chorowski", "Dzmitry Bahdanau"], "emails": ["jan.chorowski@ii.uni.wroc.pl"], "sections": [{"heading": "1 Introduction", "text": "Recently, attention-based recurrent networks have been successfully applied to a wide variety of tasks, such as handwriting synthesis [1], machine translation [2], image caption generation [3] and visual object classification [4].1 Such models iteratively process their input by selecting relevant content at every step. This basic idea significantly extends the applicability range of end-to-end training methods, for instance, making it possible to construct networks with external memory [6, 7].\nWe introduce extensions to attention-based recurrent networks that make them applicable to speech recognition. Learning to recognize speech can be viewed as learning to generate a sequence (transcription) given another sequence (speech). From this perspective it is similar to machine translation and handwriting synthesis tasks, for which attention-based methods have been found suitable [2, 1]. However, compared to machine translation, speech recognition principally differs by requesting much longer input sequences (thousands of frames instead of dozens of words), which introduces a challenge of distinguishing similar speech fragments2 in a single utterance. It is also different from handwriting synthesis, since the input sequence is much noisier and does not have as clear structure. For these reasons speech recognition is an interesting testbed for developing new attention-based architectures capable of processing long and noisy inputs.\nApplication of attention-based models to speech recognition is also an important step toward building fully end-to-end trainable speech recognition systems, which is an active area of research. The\n1An early version of this work was presented at the NIPS 2014 Deep Learning Workshop [5]. 2Explained in more detail in Sec. 2.1.\nar X\niv :1\n50 6.\n07 50\n3v 1\n[ cs\n.C L\n] 2\n4 Ju\ndominant approach is still based on hybrid systems consisting of a deep neural acoustic model, a triphone HMM model and an n-gram language model [8, 9]. This requires dictionaries of hand-crafted pronunciation and phoneme lexicons, and a multi-stage training procedure to make the components work together. Excellent results by an HMM-less recognizer have recently been reported, with the system consisting of a CTC-trained neural network and a language model [10]. Still, the language model was added only at the last stage in that work, thus leaving open a question of how much an acoustic model can benefit from being aware of a language model during training.\nIn this paper, we evaluate attention-based models on a phoneme recognition task using the widelyused TIMIT dataset. At each time step in generating an output sequence (phonemes), an attention mechanism selects or weighs the signals produced by a trained feature extraction mechanism at potentially all of the time steps in the input sequence (speech frames). The weighted feature vector then helps to condition the generation of the next element of the output sequence. Since the utterances in this dataset are rather short (mostly under 5 seconds), we measure the ability of the considered models in recognizing much longer utterances which were created by artificially concatenating the existing utterances.\nWe start with a model proposed in [2] for the machine translation task as the baseline. This model seems entirely vulnerable to the issue of similar speech fragments but despite our expectations it was competitive on the original test set, reaching 18.7% phoneme error rate (PER). However, its performance degraded quickly with longer, concatenated utterances. We provide evidence that this model adapted to track the absolute location in the input sequence of the content it is recognizing, a strategy feasible for short utterances from the original test set but inherently unscalable.\nIn order to circumvent this undesired behavior, in this paper, we propose to modify the attention mechanism such that it explicitly takes into account both (a) the location of the focus from the previous step, as in [6] and (b) the features of the input sequence, as in [2]. This is achieved by adding as inputs to the attention mechanism auxiliary convolutional features which are extracted by convolving the attention weights from the previous step with trainable filters. We show that a model with such convolutional features performs significantly better on the considered task (18.0% PER). More importantly, the model with convolutional features robustly recognized utterances many times longer than the ones from the training set, always staying below 20% PER.\nTherefore, the contribution of this work is three-fold. For one, we present a novel purely neural speech recognition architecture based on an attention mechanism, whose performance is comparable to that of the conventional approaches on the TIMIT dataset. Moreover, we propose a generic method of adding location awareness to the attention mechanism. Finally, we introduce a modification of the attention mechanism to avoid concentrating the attention on a single frame, and thus avoid obtaining less \u201ceffective training examples\u201d, bringing the PER down to 17.6%."}, {"heading": "2 Attention-Based Model for Speech Recognition", "text": ""}, {"heading": "2.1 General Framework", "text": "An attention-based recurrent sequence generator (ARSG) is a recurrent neural network that stochastically generates an output sequence (y1, . . . , yT ) from an input x. In practice, x is often processed by an encoder which outputs a sequential input representation h = (h1, . . . , hL) more suitable for the attention mechanism to work with.\nIn the context of this work, the output y is a sequence of phonemes, and the input x = (x1, . . . , xL\u2032) is a sequence of feature vectors. Each feature vector is extracted from a small overlapping window of audio frames. The encoder is implemented as a deep bidirectional recurrent network (BiRNN), to form a sequential representation h of length L = L\u2032.\nAt the i-th step an ARSG generates an output yi by focusing on the relevant elements of h:\n\u03b1i = Attend(si\u22121, \u03b1i\u22121, h) (1)\ngi = L\u2211 j=1 \u03b1i,jhj (2)\nyi \u223c Generate(si\u22121, gi), (3)\nwhere si\u22121 is the (i \u2212 1)-th state of the recurrent neural network to which we refer as the generator, \u03b1i \u2208 RL is a vector of the attention weights, also often called the alignment [2]. Using the terminology from [4], we call gi a glimpse. The step is completed by computing a new generator state:\nsi = Recurrency(si\u22121, gi, yi) (4)\nLong short-term memory units (LSTM, [11]) and gated recurrent units (GRU, [12]) are typically used as a recurrent activation, to which we refer as a recurrency. The process is graphically illustrated in Fig. 1.\nInspired by [6] we distinguish between location-based, content-based and hybrid attention mechanisms. Attend in Eq. (1) describes the most generic, hybrid attention. If the term \u03b1i\u22121 is dropped from Attend arguments, i.e., \u03b1i = Attend(si\u22121, h), we call it content-based (see, e.g., [2] or [3]). In this case, Attend is often implemented by scoring each element in h separately and normalizing the scores:\nei,j = Score(si\u22121, hj), (5)\n\u03b1i,j = exp(ei,j)\n/ L\u2211\nj=1\nexp(ei,j) . (6)\nThe main limitation of such scheme is that identical or very similar elements of h are scored equally regardless of their position in the sequence. This is the issue of \u201csimilar speech fragments\u201d raised above. Often this issue is partially alleviated by an encoder such as e.g. a BiRNN [2] or a deep convolutional network [3] that encode contextual information into every element of h . However, capacity of h elements is always limited, and thus disambiguation by context is only possible to a limited extent.\nAlternatively, a location-based attention mechanism computes the alignment from the generator state and the previous alignment only such that \u03b1i = Attend(si\u22121, \u03b1i\u22121). For instance, Graves [1] used the location-based attention mechanism using a Gaussian mixture model in his handwriting synthesis model. In the case of speech recognition, this type of location-based attention mechanism would have to predict the distance between consequent phonemes using si\u22121 only, which we expect to be hard due to large variance of this quantity.\nFor these limitations associated with both content-based and location-based mechanisms, we argue that a hybrid attention mechanism is a natural candidate for speech recognition. Informally, we would like an attention model that uses the previous alignment \u03b1i\u22121 to select a short list of elements from h, from which the content-based attention, in Eqs. (5)\u2013(6), will select the relevant ones without confusion."}, {"heading": "2.2 Proposed Model: ARSG with Convolutional Features", "text": "We start from the ARSG-based model with the content-based attention mechanism proposed in [2]. This model can be described by Eqs. (5)\u2013(6), where\nei,j = w > tanh(Wsi\u22121 + V hj + b). (7)\nw and b are vectors, W and V are matrices.\nWe extend this content-based attention mechanism of the original model to be location-aware by making it take into account the alignment produced at the previous step. First, we extract k vectors fi,j \u2208 Rk for every position j of the previous alignment \u03b1i\u22121 by convolving it with a matrix F \u2208 Rk\u00d7r:\nfi = F \u2217 \u03b1i\u22121. (8)\nThese additional vectors fi,j are then used by the scoring mechanism ei,j :\nei,j = w > tanh(Wsi\u22121 + V hj + Ufi,j + b) (9)"}, {"heading": "2.3 Score Normalization: Sharpening and Smoothing", "text": "There are three potential issues with the normalization in Eq. (6).\nFirst, when the input sequence h is long, the glimpse gi is likely to contain noisy information from many irrelevant feature vectors hj , as the normalized scores \u03b1i,j are all positive and sum to 1. This makes it difficult for the proposed ARSG to focus clearly on a few relevant frames at each time i. Second, the attention mechanism is required to consider all the L frames each time it decodes a single output yi while decoding the output of length T , leading to a computational complexity of O(LT ). This may easily become prohibitively expensive, when input utterances are long (and issue that is less serious for machine translation, because in that case the input sequence is made of words, not of 20ms acoustic frames).\nThe other side of the coin is that the use of softmax normalization in Eq. (6) prefers to mostly focus on only a single feature vector hj . This prevents the model from aggregating multiple top-scored frames to form a glimpse gi.\nSharpening There is a straightforward way to address the first issue of a noisy glimpse by \u201csharpening\u201d the scores \u03b1i,j . One way to sharpen the weights is to introduce an inverse temperature \u03b2 > 1 to the softmax function such that\nai,j = exp(\u03b2ei,j)\n/ L\u2211\nj=1\nexp(\u03b2ei,j) ,\nor to keep only the top-k frames according to the scores and re-normalize them. These sharpening methods, however, still requires us to compute the score of every frame each time (O(LT )), and they worsen the second issue, of overly narrow focus.\nWe also propose and investigate a windowing technique. At each time i, the attention mechanism considers only a subsequence h\u0303 = (hpi\u2212w, . . . , hpi+w\u22121) of the whole sequence h, wherew L is the predefined window width and pi is the median of the alignment \u03b1i\u22121. The scores for hj /\u2208 h\u0303 are not computed, resulting in a lower complexity of O(L + T ). This windowing technique is similar to taking the top-k frames, and similarly, has the effect of sharpening.\nThe proposed sharpening based on windowing can be used both during training and evaluation. Later, in the experiments, we only consider the case where it is used during evaluation.\nSmoothing We observed that the proposed sharpening methods indeed helped with long utterances. However, all of them, and especially selecting the frame with the highest score, negatively affected the model\u2019s performance on the standard development set which mostly consists of short utterances. This observations let us hypothesize that it is helpful for the model to aggregate selections from multiple top-scored frames. In a sense this brings more diversity, i.e., more effective training examples, to the output part of the model, as more input locations are considered. To facilitate this effect, we replace the unbounded exponential function of the softmax function in Eq. (6) with the bounded logistic sigmoid \u03c3 such that\nai,j = \u03c3(ei,j)\n/ L\u2211\nj=1\n\u03c3(ei,j) .\nThis has the effect of smoothing the focus found by the attention mechanism."}, {"heading": "3 Related Work", "text": "Speech recognizers based on the connectionist temporal classification (CTC, [13]) and its extension, RNN Transducer [14], are the closest to the ARSG model considered in this paper. They follow earlier work on end-to-end trainable deep learning over sequences with gradient signals flowing through the alignment process [15]. They have been shown to perform well on the phoneme recognition task [16]. Furthermore, the CTC was recently found to be able to directly transcribe text from speech without any intermediate phonetic representation [17].\nThe considered ARSG is different from both the CTC and RNN Transducer in two ways. First, whereas the attention mechanism deterministically aligns the input and the output sequences, the CTC and RNN Transducer treat the alignment as a latent random variable over which MAP (maximum a posteriori) inference is performed. This deterministic nature of the ARSG\u2019s alignment mechanism allows beam search procedure to be simpler. Furthermore, we empirically observe that a much smaller beam width can be used with the deterministic mechanism, which allows faster decoding (see Sec. 4.2 and Fig. 2). Second, the alignment mechanism of both the CTC and RNN Transducer is constrained to be \u201cmonotonic\u201d to keep marginalization of the alignment tractable. On the other hand, the proposed attention mechanism can result in non-monotonic alignment, which makes it suitable for a larger variety of tasks other than speech recognition.\nA hybrid attention model using a convolution operation was also proposed in [6] for neural Turing machines (NTM). At each time step, the NTM computes content-based attention weights which are then convolved with a predicted shifting distribution. Unlike the NTM\u2019s approach, the hybrid mechanism proposed here lets learning figure out how the content-based and location-based addressing be combined by a deep, parametric function (see Eq. (9).)\nSukhbaatar et al. [18] describes a similar hybrid attention mechanism, where location embeddings are used as input to the attention model. This approach has an important disadvantage that the model cannot work with an input sequence longer than those seen during training. Our approach, on the other hand, works well on sequences many times longer than those seen during training (see Sec. 5.)"}, {"heading": "4 Experimental Setup", "text": "We closely followed the procedure in [16]. All experiments were performed on the TIMIT corpus [19]. We used the train-dev-test split from the Kaldi [20] TIMIT s5 recipe. We trained on the standard 462 speaker set with all SA utterances removed and used the 50 speaker dev set for early stopping. We tested on the 24 speaker core test set. All networks were trained on 40 mel-scale filterbank features together with the energy in each frame, and first and second temporal differences, yielding in total 123 features per frame. Each feature was rescaled to have zero mean and unit variance over the training set. Networks were trained on the full 61-phone set extended with an extra \u201cend-of-sequence\u201d token that was appended to each target sequence. Similarly, we appended an all-zero frame at the end of each input sequence to indicate the end of the utterance. Decoding was performed using the 61+1 phoneme set, while scoring was done on the 39 phoneme set."}, {"heading": "4.1 Training Procedure", "text": "One property of ARSG models is that different subsets of parameters are reused different number of times; L times for those of the encoder, LT for the attention weights and T times for all the other\nFDHC0_SX209: Michael colored the bedroom wall with crayons.\nparameters of the ARSG. This makes the scales of derivatives w.r.t. parameters vary significantly, and we handle it by using an adaptive learning rate algorithm, AdaDelta [21] which has two hyperparameters and \u03c1. All the weight matrices were initialized from a normal Gaussian distribution with its standard deviation set to 0.01. Recurrent weights were furthermore orthogonalized.\nAs TIMIT is a relatively small dataset, proper regularization is crucial. We used the adaptive weight noise as a main regularizer [22]. We first trained our models with a column norm constraint [23] with the maximum norm 1 until the lowest development negative log-likelihood is achieved.3 During this time, and \u03c1 are set to 10\u22128 and 0.95, respectively. At this point, we began using the adaptive weight noise, and scaled down the model complexity cost LC by a factor of 10, while disabling the column norm constraints. Once the new lowest development log-likelihood was reached, we fine-tuned the model with a smaller = 10\u221210, until we did not observe the improvement in the development phoneme error rate (PER) for 100K weight updates. Batch size 1 was used throughout the training."}, {"heading": "4.2 Details of Evaluated Models", "text": "We evaluated the ARSGs with different attention mechanisms. The encoder was a 3-layer BiRNN with 256 GRU units in each direction, and the activations of the 512 top-layer units were used as the representation h. The generator had a single recurrent layer of 256 GRU units. Generate in Eq. (3) had a hidden layer of 64 maxout units. The initial states of both the encoder and generator were treated as additional parameters.\nOur baseline model is the one with a purely content-based attention mechanism (See Eqs. (5)\u2013(7).) The scoring network in Eq. (7) had 512 hidden units. The other two models use the convolutional features in Eq. (8) with k = 10 and r = 201. One of them uses the smoothing from Sec. 2.3.\nDecoding Procedure A left-to-right beam search over phoneme sequences was used during decoding [24]. Beam search was stopped when the \u201cend-of-sequence\u201d token \u3008eos\u3009 was emitted. We started with a beam width of 10, increasing it up to 40 when the network failed to produce \u3008eos\u3009with the narrower beam. As shown in Fig. 2, decoding with a wider beam gives little-to-none benefit."}, {"heading": "5 Results", "text": "All the models achieved competitive PERs (see Table 1). With the convolutional features, we see 3.7% relative improvement over the baseline and further 5.9% with the smoothing.\nTo our surprise (see Sec. 2.1.), the baseline model learned to align properly. An alignment produced by the baseline model on a sequence with repeated phonemes (utterance FDHC0 SX209) is presented in Fig. 3 which demonstrates that the baseline model is not confused by short-range repetitions. We can also see from the figure that it prefers to select frames that are near the beginning or\n3 Applying the weight noise from the beginning of training caused severe underfitting.\neven slightly before the phoneme location provided as a part of the dataset. The alignments produced by the other models were very similar visually."}, {"heading": "5.1 Forced Alignment of Long Utterances", "text": "The good performance of the baseline model led us to the question of how it distinguishes between repetitions of similar phoneme sequences and how reliably it decodes longer sequences with more repetitions. We created two datasets of long utterances; one by repeating each test utterance, and the other by concatenating randomly chosen utterances. In both cases, the waveforms were cross-faded with a 0.05s silence inserted as the \u201cpau\u201d phone. We concatenated up to 15 utterances.\nFirst, we checked the forced alignment with these longer utterances by forcing the generator to emit the correct phonemes. Each alignment was considered correct if 90% of the alignment weight lies inside the ground-truth phoneme window extended by 20 frames on each side. Under this definition, all phones but the \u3008eos\u3009 shown in Fig. 3 are properly aligned. The first column of Fig. 4 shows the number of correctly aligned frames w.r.t. the utterance length (in frames) for some of the considered models. One can see that the baseline model was able to decode sequences up to about 120 phones when a single utterance was repeated, and up to about 150 phones when different utterances were concatenated. Even when it failed, it correctly aligned about 50 phones. On the other hand, the model with the hybrid attention mechanism with convolutional features was able to align sequences up to 200 phones long. However, once it began to fail, the model was not able to align almost all phones. The model with the smoothing behaved similarly to the one with convolutional features only.\nWe examined failed alignments to understand these two different modes of failure. Some of the examples are shown in the Supplementary Materials.\nWe found that the baseline model properly aligns about 40 first phones, then makes a jump to the end of the recording and cycles over the last 10 phones. This behavior suggests that it learned to track its approximate location in the source sequence. However, the tracking capability is limited to the lengths observed during training. Once the tracker saturates, it jumps to the end of the recording.\nIn contrast, when the location-aware network failed it just stopped aligning \u2013 no particular frames were selected for each phone. We attribute this behavior to the issue of noisy glimpse discussed in Sec. 2.3. With a long utterance there are many irrelevant frames negatively affecting the weight assigned to the correct frames. In line with this conjecture, the location-aware network works slightly better on the repetition of the same utterance, where all frames are somehow relevant, than on the concatenation of different utterances, where each misaligned frame is irrelevant.\nTo gain more insight we applied the alignment sharpening schemes described in Sec. 2.3. In the remaining columns of Fig. 4, we see that the sharpening methods help the location-aware network to find proper alignments, while they show little effect on the baseline network. The windowing technique helps both the baseline and location-aware networks, with the location-aware network properly aligning nearly all sequences.\nDuring visual inspection, we noticed that in the middle of very long utterances the baseline model was confused by repetitions of similar content within the window, and that such confusions did not happen in the beginning. This supports our conjecture above."}, {"heading": "5.2 Decoding Long Utterances", "text": "We evaluated the models on long sequences. Each model was decoded using the alignment sharpening techniques that helped to obtain proper forced alignments. The results are presented in Fig. 5. The baseline model fails to decode long utterances, even when a narrow window is used to constrain the alignments it produces. The two other location-aware networks are able to decode utterances formed by concatenating up to 11 test utterances. Better results were obtained with a wider window, presumably because it resembles more the training conditions when at each step the attention mechanism was seeing the whole input sequence. With the wide window, both of the networks scored about 20% PER on the long utterances, indicating that the proposed location-aware attention mechanism can scale to sequences much longer than those in the training set with only minor modifications required at the decoding stage."}, {"heading": "6 Conclusions", "text": "We proposed and evaluated a novel end-to-end trainable speech recognition architecture based on a hybrid attention mechanism which combines both content and location information in order to select the next position in the input sequence for decoding. One desirable property of the proposed model is that it can recognize utterances much longer than the ones it was trained on. In the future, we expect this model to be used to directly recognize text from speech [10, 17], in which case it may become important to incorporate a monolingual language model to the ARSG architecture [26].\nThis work has contributed two novel ideas for attention mechanisms: a better normalization approach yielding smoother alignments and a generic principle for extracting and using features from the previous alignments. Both of these can potentially be applied beyond speech recognition. For instance, the proposed attention can be used without modification in neural Turing machines, or by using 2\u2013D convolution instead of 1\u2013D, for improving image caption generation [3]."}, {"heading": "Acknowledgments", "text": "All experiments were conducted using Theano [27, 28], PyLearn2 [29], and Blocks [30] libraries.\nThe authors would like to acknowledge the support of the following agencies for research funding and computing support: National Science Center (Poland), NSERC, Calcul Que\u0301bec, Compute Canada, the Canada Research Chairs and CIFAR. Bahdanau also thanks Planet Intelligent Systems GmbH and Yandex."}, {"heading": "B Detailed results of experiments", "text": ""}], "references": [{"title": "Generating sequences with recurrent neural networks", "author": ["Alex Graves"], "venue": null, "citeRegEx": "1", "shortCiteRegEx": "1", "year": 2013}, {"title": "Neural machine translation by jointly learning to align and translate", "author": ["Dzmitry Bahdanau", "Kyunghyun Cho", "Yoshua Bengio"], "venue": null, "citeRegEx": "2", "shortCiteRegEx": "2", "year": 2014}, {"title": "Show, attend and tell: Neural image caption generation with visual attention", "author": ["Kelvin Xu", "Jimmy Ba", "Ryan Kiros", "Kyunghyun Cho", "Aaron Courville", "Ruslan Salakhutdinov", "Richard Zemel", "Yoshua Bengio"], "venue": null, "citeRegEx": "3", "shortCiteRegEx": "3", "year": 2015}, {"title": "Recurrent models of visual attention", "author": ["Volodymyr Mnih", "Nicolas Heess", "Alex Graves"], "venue": "In Advances in Neural Information Processing Systems,", "citeRegEx": "4", "shortCiteRegEx": "4", "year": 2014}, {"title": "End-to-end continuous speech recognition using attention-based recurrent NN: First results", "author": ["Jan Chorowski", "Dzmitry Bahdanau", "Kyunghyun Cho", "Yoshua Bengio"], "venue": null, "citeRegEx": "5", "shortCiteRegEx": "5", "year": 2014}, {"title": "The application of hidden markov models in speech recognition", "author": ["Mark Gales", "Steve Young"], "venue": "Found. Trends Signal Process.,", "citeRegEx": "8", "shortCiteRegEx": "8", "year": 2007}, {"title": "Deep neural networks for acoustic modeling in speech recognition: The shared views of four research groups", "author": ["G. Hinton", "Li Deng", "Dong Yu", "G.E. Dahl", "A Mohamed", "N. Jaitly", "A Senior", "V. Vanhoucke", "P. Nguyen", "T.N. Sainath", "B. Kingsbury"], "venue": "IEEE Signal Processing Magazine,", "citeRegEx": "9", "shortCiteRegEx": "9", "year": 2012}, {"title": "Deepspeech: Scaling up end-to-end speech recognition", "author": ["Awni Hannun", "Carl Case", "Jared Casper", "Bryan Catanzaro", "Greg Diamos", "Erich Elsen", "Ryan Prenger", "Sanjeev Satheesh", "Shubho Sengupta", "Adam Coates"], "venue": "arXiv preprint arXiv:1412.5567,", "citeRegEx": "10", "shortCiteRegEx": "10", "year": 2014}, {"title": "Long short-term memory", "author": ["S. Hochreiter", "J. Schmidhuber"], "venue": "Neural. Comput.,", "citeRegEx": "11", "shortCiteRegEx": "11", "year": 1997}, {"title": "Learning phrase representations using RNN encoder-decoder for statistical machine translation", "author": ["Kyunghyun Cho", "Bart van Merrienboer", "Caglar Gulcehre", "Fethi Bougares", "Holger Schwenk", "Yoshua Bengio"], "venue": "In EMNLP 2014,", "citeRegEx": "12", "shortCiteRegEx": "12", "year": 2014}, {"title": "Connectionist temporal classification: Labelling unsegmented sequence data with recurrent neural networks", "author": ["Alex Graves", "Santiago Fern\u00e1ndez", "Faustino Gomez", "J\u00fcrgen Schmidhuber"], "venue": "In ICML-06,", "citeRegEx": "13", "shortCiteRegEx": "13", "year": 2006}, {"title": "Sequence transduction with recurrent neural networks", "author": ["Alex Graves"], "venue": "In ICML-12,", "citeRegEx": "14", "shortCiteRegEx": "14", "year": 2012}, {"title": "Gradient based learning applied to document recognition", "author": ["Y. LeCun", "L. Bottou", "Y. Bengio", "P. Haffner"], "venue": "Proc. IEEE,", "citeRegEx": "15", "shortCiteRegEx": "15", "year": 1998}, {"title": "Speech recognition with deep recurrent neural networks", "author": ["Alex Graves", "Abdel-rahman Mohamed", "Geoffrey Hinton"], "venue": null, "citeRegEx": "16", "shortCiteRegEx": "16", "year": 2013}, {"title": "Towards end-to-end speech recognition with recurrent neural networks", "author": ["Alex Graves", "Navdeep Jaitly"], "venue": "In ICML-14,", "citeRegEx": "17", "shortCiteRegEx": "17", "year": 2014}, {"title": "Weakly supervised memory networks", "author": ["Sainbayar Sukhbaatar", "Arthur Szlam", "Jason Weston", "Rob Fergus"], "venue": "arXiv preprint arXiv:1503.08895,", "citeRegEx": "18", "shortCiteRegEx": "18", "year": 2015}, {"title": "DARPA TIMIT acoustic phonetic continuous speech", "author": ["J.S. Garofolo", "L.F. Lamel", "W.M. Fisher", "J.G. Fiscus", "D.S. Pallett", "N.L. Dahlgren"], "venue": null, "citeRegEx": "19", "shortCiteRegEx": "19", "year": 1993}, {"title": "The kaldi speech recognition toolkit", "author": ["Daniel Povey", "Arnab Ghoshal", "Gilles Boulianne", "Lukas Burget", "Ondrej Glembek", "Nagendra Goel", "Mirko Hannemann", "Petr Motlicek", "Yanmin Qian", "Petr Schwarz", "others"], "venue": "In Proc. ASRU,", "citeRegEx": "20", "shortCiteRegEx": "20", "year": 2011}, {"title": "ADADELTA: An adaptive learning rate method", "author": ["Matthew D Zeiler"], "venue": null, "citeRegEx": "21", "shortCiteRegEx": "21", "year": 2012}, {"title": "Practical variational inference for neural networks", "author": ["Alex Graves"], "venue": "Advances in Neural Information Processing Systems", "citeRegEx": "22", "shortCiteRegEx": "22", "year": 2011}, {"title": "Improving neural networks by preventing co-adaptation of feature detectors", "author": ["Geoffrey E Hinton", "Nitish Srivastava", "Alex Krizhevsky", "Ilya Sutskever", "Ruslan R Salakhutdinov"], "venue": "arXiv preprint arXiv:1207.0580,", "citeRegEx": "23", "shortCiteRegEx": "23", "year": 2012}, {"title": "Sequence to sequence learning with neural networks", "author": ["Ilya Sutskever", "Oriol Vinyals", "Quoc V. Le"], "venue": "arXiv preprint arXiv:1409.3215,", "citeRegEx": "24", "shortCiteRegEx": "24", "year": 2014}, {"title": "Combining time-and frequency-domain convolution in convolutional neural network-based phone recognition", "author": ["L\u00e1szl\u00f3 T\u00f3th"], "venue": null, "citeRegEx": "25", "shortCiteRegEx": "25", "year": 2014}, {"title": "On using monolingual corpora in neural machine translation", "author": ["Caglar Gulcehre", "Orhan Firat", "Kelvin Xu", "Kyunghyun Cho", "Loic Barrault", "Huei-Chi Lin", "Fethi Bougares", "Holger Schwenk", "Yoshua Bengio"], "venue": "arXiv preprint arXiv:1503.03535,", "citeRegEx": "26", "shortCiteRegEx": "26", "year": 2015}, {"title": "Theano: a CPU and GPU math expression compiler", "author": ["James Bergstra", "Olivier Breuleux", "Fr\u00e9d\u00e9ric Bastien", "Pascal Lamblin", "Razvan Pascanu", "Guillaume Desjardins", "Joseph Turian", "David Warde-Farley", "Yoshua Bengio"], "venue": "In Proceedings of the Python for Scientific Computing Conference (SciPy),", "citeRegEx": "27", "shortCiteRegEx": "27", "year": 2010}, {"title": "Theano: new features and speed improvements", "author": ["Fr\u00e9d\u00e9ric Bastien", "Pascal Lamblin", "Razvan Pascanu", "James Bergstra", "Ian J. Goodfellow", "Arnaud Bergeron", "Nicolas Bouchard", "Yoshua Bengio"], "venue": "Deep Learning and Unsupervised Feature Learning NIPS 2012 Workshop,", "citeRegEx": "28", "shortCiteRegEx": "28", "year": 2012}, {"title": "Pylearn2: a machine learning research", "author": ["Ian J. Goodfellow", "David Warde-Farley", "Pascal Lamblin", "Vincent Dumoulin", "Mehdi Mirza", "Razvan Pascanu", "James Bergstra", "Fr\u00e9d\u00e9ric Bastien", "Yoshua Bengio"], "venue": "library. arXiv preprint arXiv:1308.4214,", "citeRegEx": "29", "shortCiteRegEx": "29", "year": 2013}], "referenceMentions": [{"referenceID": 0, "context": "Recurrent sequence generators conditioned on input data through an attention mechanism have recently shown very good performance on a range of tasks including machine translation, handwriting synthesis [1, 2] and image caption generation [3].", "startOffset": 202, "endOffset": 208}, {"referenceID": 1, "context": "Recurrent sequence generators conditioned on input data through an attention mechanism have recently shown very good performance on a range of tasks including machine translation, handwriting synthesis [1, 2] and image caption generation [3].", "startOffset": 202, "endOffset": 208}, {"referenceID": 2, "context": "Recurrent sequence generators conditioned on input data through an attention mechanism have recently shown very good performance on a range of tasks including machine translation, handwriting synthesis [1, 2] and image caption generation [3].", "startOffset": 238, "endOffset": 241}, {"referenceID": 1, "context": "We show that while an adaptation of the model used for machine translation in [2] reaches a competitive 18.", "startOffset": 78, "endOffset": 81}, {"referenceID": 0, "context": "Recently, attention-based recurrent networks have been successfully applied to a wide variety of tasks, such as handwriting synthesis [1], machine translation [2], image caption generation [3] and visual object classification [4].", "startOffset": 134, "endOffset": 137}, {"referenceID": 1, "context": "Recently, attention-based recurrent networks have been successfully applied to a wide variety of tasks, such as handwriting synthesis [1], machine translation [2], image caption generation [3] and visual object classification [4].", "startOffset": 159, "endOffset": 162}, {"referenceID": 2, "context": "Recently, attention-based recurrent networks have been successfully applied to a wide variety of tasks, such as handwriting synthesis [1], machine translation [2], image caption generation [3] and visual object classification [4].", "startOffset": 189, "endOffset": 192}, {"referenceID": 3, "context": "Recently, attention-based recurrent networks have been successfully applied to a wide variety of tasks, such as handwriting synthesis [1], machine translation [2], image caption generation [3] and visual object classification [4].", "startOffset": 226, "endOffset": 229}, {"referenceID": 1, "context": "From this perspective it is similar to machine translation and handwriting synthesis tasks, for which attention-based methods have been found suitable [2, 1].", "startOffset": 151, "endOffset": 157}, {"referenceID": 0, "context": "From this perspective it is similar to machine translation and handwriting synthesis tasks, for which attention-based methods have been found suitable [2, 1].", "startOffset": 151, "endOffset": 157}, {"referenceID": 4, "context": "The An early version of this work was presented at the NIPS 2014 Deep Learning Workshop [5].", "startOffset": 88, "endOffset": 91}, {"referenceID": 5, "context": "dominant approach is still based on hybrid systems consisting of a deep neural acoustic model, a triphone HMM model and an n-gram language model [8, 9].", "startOffset": 145, "endOffset": 151}, {"referenceID": 6, "context": "dominant approach is still based on hybrid systems consisting of a deep neural acoustic model, a triphone HMM model and an n-gram language model [8, 9].", "startOffset": 145, "endOffset": 151}, {"referenceID": 7, "context": "Excellent results by an HMM-less recognizer have recently been reported, with the system consisting of a CTC-trained neural network and a language model [10].", "startOffset": 153, "endOffset": 157}, {"referenceID": 1, "context": "We start with a model proposed in [2] for the machine translation task as the baseline.", "startOffset": 34, "endOffset": 37}, {"referenceID": 1, "context": "In order to circumvent this undesired behavior, in this paper, we propose to modify the attention mechanism such that it explicitly takes into account both (a) the location of the focus from the previous step, as in [6] and (b) the features of the input sequence, as in [2].", "startOffset": 270, "endOffset": 273}, {"referenceID": 1, "context": "where si\u22121 is the (i \u2212 1)-th state of the recurrent neural network to which we refer as the generator, \u03b1i \u2208 R is a vector of the attention weights, also often called the alignment [2].", "startOffset": 180, "endOffset": 183}, {"referenceID": 3, "context": "Using the terminology from [4], we call gi a glimpse.", "startOffset": 27, "endOffset": 30}, {"referenceID": 8, "context": "The step is completed by computing a new generator state: si = Recurrency(si\u22121, gi, yi) (4) Long short-term memory units (LSTM, [11]) and gated recurrent units (GRU, [12]) are typically used as a recurrent activation, to which we refer as a recurrency.", "startOffset": 128, "endOffset": 132}, {"referenceID": 9, "context": "The step is completed by computing a new generator state: si = Recurrency(si\u22121, gi, yi) (4) Long short-term memory units (LSTM, [11]) and gated recurrent units (GRU, [12]) are typically used as a recurrent activation, to which we refer as a recurrency.", "startOffset": 166, "endOffset": 170}, {"referenceID": 1, "context": ", [2] or [3]).", "startOffset": 2, "endOffset": 5}, {"referenceID": 2, "context": ", [2] or [3]).", "startOffset": 9, "endOffset": 12}, {"referenceID": 1, "context": "a BiRNN [2] or a deep convolutional network [3] that encode contextual information into every element of h .", "startOffset": 8, "endOffset": 11}, {"referenceID": 2, "context": "a BiRNN [2] or a deep convolutional network [3] that encode contextual information into every element of h .", "startOffset": 44, "endOffset": 47}, {"referenceID": 0, "context": "For instance, Graves [1] used the location-based attention mechanism using a Gaussian mixture model in his handwriting synthesis model.", "startOffset": 21, "endOffset": 24}, {"referenceID": 1, "context": "2 Proposed Model: ARSG with Convolutional Features We start from the ARSG-based model with the content-based attention mechanism proposed in [2].", "startOffset": 141, "endOffset": 144}, {"referenceID": 10, "context": "Speech recognizers based on the connectionist temporal classification (CTC, [13]) and its extension, RNN Transducer [14], are the closest to the ARSG model considered in this paper.", "startOffset": 76, "endOffset": 80}, {"referenceID": 11, "context": "Speech recognizers based on the connectionist temporal classification (CTC, [13]) and its extension, RNN Transducer [14], are the closest to the ARSG model considered in this paper.", "startOffset": 116, "endOffset": 120}, {"referenceID": 12, "context": "They follow earlier work on end-to-end trainable deep learning over sequences with gradient signals flowing through the alignment process [15].", "startOffset": 138, "endOffset": 142}, {"referenceID": 13, "context": "They have been shown to perform well on the phoneme recognition task [16].", "startOffset": 69, "endOffset": 73}, {"referenceID": 14, "context": "Furthermore, the CTC was recently found to be able to directly transcribe text from speech without any intermediate phonetic representation [17].", "startOffset": 140, "endOffset": 144}, {"referenceID": 15, "context": "[18] describes a similar hybrid attention mechanism, where location embeddings are used as input to the attention model.", "startOffset": 0, "endOffset": 4}, {"referenceID": 13, "context": "We closely followed the procedure in [16].", "startOffset": 37, "endOffset": 41}, {"referenceID": 16, "context": "All experiments were performed on the TIMIT corpus [19].", "startOffset": 51, "endOffset": 55}, {"referenceID": 17, "context": "We used the train-dev-test split from the Kaldi [20] TIMIT s5 recipe.", "startOffset": 48, "endOffset": 52}, {"referenceID": 18, "context": "parameters vary significantly, and we handle it by using an adaptive learning rate algorithm, AdaDelta [21] which has two hyperparameters and \u03c1.", "startOffset": 103, "endOffset": 107}, {"referenceID": 19, "context": "We used the adaptive weight noise as a main regularizer [22].", "startOffset": 56, "endOffset": 60}, {"referenceID": 20, "context": "We first trained our models with a column norm constraint [23] with the maximum norm 1 until the lowest development negative log-likelihood is achieved.", "startOffset": 58, "endOffset": 62}, {"referenceID": 21, "context": "Decoding Procedure A left-to-right beam search over phoneme sequences was used during decoding [24].", "startOffset": 95, "endOffset": 99}, {"referenceID": 13, "context": "6% RNN Transducer [16] N/A 17.", "startOffset": 18, "endOffset": 22}, {"referenceID": 22, "context": "7% HMM over Time and Frequency Convolutional Net [25] 13.", "startOffset": 49, "endOffset": 53}, {"referenceID": 7, "context": "In the future, we expect this model to be used to directly recognize text from speech [10, 17], in which case it may become important to incorporate a monolingual language model to the ARSG architecture [26].", "startOffset": 86, "endOffset": 94}, {"referenceID": 14, "context": "In the future, we expect this model to be used to directly recognize text from speech [10, 17], in which case it may become important to incorporate a monolingual language model to the ARSG architecture [26].", "startOffset": 86, "endOffset": 94}, {"referenceID": 23, "context": "In the future, we expect this model to be used to directly recognize text from speech [10, 17], in which case it may become important to incorporate a monolingual language model to the ARSG architecture [26].", "startOffset": 203, "endOffset": 207}, {"referenceID": 2, "context": "For instance, the proposed attention can be used without modification in neural Turing machines, or by using 2\u2013D convolution instead of 1\u2013D, for improving image caption generation [3].", "startOffset": 180, "endOffset": 183}], "year": 2015, "abstractText": "Recurrent sequence generators conditioned on input data through an attention mechanism have recently shown very good performance on a range of tasks including machine translation, handwriting synthesis [1, 2] and image caption generation [3]. We extend the attention-mechanism with features needed for speech recognition. We show that while an adaptation of the model used for machine translation in [2] reaches a competitive 18.7% phoneme error rate (PER) on the TIMIT phoneme recognition task, it can only be applied to utterances which are roughly as long as the ones it was trained on. We offer a qualitative explanation of this failure and propose a novel and generic method of adding location-awareness to the attention mechanism to alleviate this issue. The new method yields a model that is robust to long inputs and achieves 18% PER in single utterances and 20% in 10-times longer (repeated) utterances. Finally, we propose a change to the attention mechanism that prevents it from concentrating too much on single frames, which further reduces PER to 17.6% level.", "creator": "LaTeX with hyperref package"}}}