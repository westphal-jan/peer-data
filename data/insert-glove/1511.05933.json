{"id": "1511.05933", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "18-Nov-2015", "title": "Seeding K-Means using Method of Moments", "abstract": "K - aim\u00e9 means slowinski is zlotnikov one 414th of rehz the most imported widely up-and-down used algorithms for take-up clustering in Data rtl2 Mining applications, polybutylene which hybridisation attempts to minimize the sum reman of square loomis of dulaimi Euclidean theatergoers distance of vasta the points in light-blue the wili clusters pitty from delph the szigeti respective means zang of voser the non-science clusters. The simplicity 173.2 and mobis scalability lurching of K - means makes silpat it kitschy very tourte appealing. usa-77 However, K - s\u0101d\u0101t means suffers from local eleutherius minima problem, kotoryu and comes with bfw no guarantee rypien to himalayan converge innkeeper to the optimal cost. benussi K - shravasti means + + stromer tries kavitha to brani\u010devo address kress the ahanta problem by seeding the means using a kendi distance padavan based pannalal sampling down scheme. However, cendant seeding sister-ship the clergyman means espanyol in djindjic K - means + + needs O (K) passes pbms through 1.3178 the entire dulaimy dataset, which 11.97 could a-road be very costly in tonsure large 2-13 amount unpretty of humidification dataset. non-physician Here j\u016brmala we diffuses propose tailored a dostoyevsky method bende of seeding initial means based 200-point on ufe higher order teks moments authorizes of saralee the data, which 543-member takes O (1) 12.07 passes through moraz\u00e1n the dasrath entire dataset to extract exxon the \u00farsula initial set m.arch of talcott means. Our method yields gillmor competitive charities performance heliosphere with respect sprinzak to dourdan all moroso the cegielski existing K - blagojevich means nirina algorithms, serres whilst guelowar avoiding nakashima the expensive webmail mean selection steps 3143 of K - 51.80 means + + goti and gru other heuristics. We demonstrate the dry-cleaning performance kilobit of budisa our highest-charting algorithm ne\u00f3gain in comparison guaynabo with the electrochemical existing mcdonaldland algorithms 0.92 on cutrer various perak benchmark datasets.", "histories": [["v1", "Wed, 18 Nov 2015 20:26:42 GMT  (312kb,D)", "http://arxiv.org/abs/1511.05933v1", "arXiv admin note: text overlap witharXiv:1511.00792"], ["v2", "Sat, 21 Nov 2015 21:54:01 GMT  (575kb,D)", "http://arxiv.org/abs/1511.05933v2", "arXiv admin note: text overlap witharXiv:1511.00792"], ["v3", "Thu, 4 Feb 2016 10:21:55 GMT  (422kb,D)", "http://arxiv.org/abs/1511.05933v3", null], ["v4", "Thu, 3 Mar 2016 17:40:02 GMT  (422kb,D)", "http://arxiv.org/abs/1511.05933v4", null], ["v5", "Thu, 21 Apr 2016 21:50:39 GMT  (459kb,D)", "http://arxiv.org/abs/1511.05933v5", null], ["v6", "Fri, 3 Jun 2016 17:50:10 GMT  (532kb,D)", "http://arxiv.org/abs/1511.05933v6", null], ["v7", "Mon, 12 Sep 2016 22:33:06 GMT  (532kb,D)", "http://arxiv.org/abs/1511.05933v7", null], ["v8", "Mon, 31 Oct 2016 15:59:13 GMT  (0kb,I)", "http://arxiv.org/abs/1511.05933v8", "Paper contained an error in Equation 5 and 7"]], "COMMENTS": "arXiv admin note: text overlap witharXiv:1511.00792", "reviews": [], "SUBJECTS": "cs.LG", "authors": ["sayantan dasgupta"], "accepted": false, "id": "1511.05933"}, "pdf": {"name": "1511.05933.pdf", "metadata": {"source": "CRF", "title": null, "authors": ["Sayantan Dasgupta"], "emails": ["sayantad@uci.edu"], "sections": [{"heading": "1 INTRODUCTION", "text": "K-means has been used over a wide range of Data Mining Applications for years. It is the most common algorithm for extracting clusters from datasets containing real attributes. In recent times it has also been used for feature extraction purpose, which is further used for classification using Neural Networks in Coates et al. (2011). K-means is an NP hard problem even for K = 2 (Aloise et al. (2009)), and only heuristic solutions exist. Perhaps the most common of such heuristics is the Lloyd\u2019s algorithm, which uses an EM style approach; it first assigns the points to different clusters according to their distance from the means of the clusters, and then updates the cluster means by averaging out the points in each cluster. The algorithm uses a random initialization, and comes with no guarantee to reach the global minima. The K-means++ in Arthur & Vassilvitskii (2007) addresses the problem by using an initial seeding of the means, and converges within O (logK) of the global optima. However, for most practical purposes, a bound of O (logK) might be too high. Moreover, the algorithm uses K passes through the entire dataset to seed the means; this makes it very expensive for large amount of data. K-means|| in Bahmani et al. (2012) suggests a method to oversample the means during every pass to reduce the number of passes in the seeding phase. The oversampling strategy also improves accuracy in case there are outliers present in the dataset, by reducing susceptibility of the seeding means to outliers. Nevertheless, both the algorithms are essentially heuristic in nature, and the extracted means as well as the final costs vary a lot over different runs. There are other variants of K-means algorithm, such as Ailon et al. (2009) and Shindler et al. (2011). Most of these algorithms build on K-means++ and aim to reduce the computational burden, rather than improving accuracy. Hence, we limit our discussion on K-means++ and K-means||. There have been recent developments on clustering algorithms based on Method of Moments (MoM), also referred to as Spectral Methods in the literature. Unlike traditional clustering algorithms which rely on EM or similar algorithms to maximize the likelihood of the data, MoM tries to learn the parameters from the higher order moments of the data. The method can be proven to be globally convergent using PAC style proof (see Anandkumar et al. (2014)), and has been successfully applied for Hidden Markov Model in Hsu et al. (2012) and Song et al. (2010), for Topic\nar X\niv :1\n51 1.\n05 93\n3v 1\n[ cs\n.L G\n] 1\n8 N\nov 2\n01 5\nAlgorithm 1 K-means++\nInput: A set of points X \u2286 RD and K Output: A set C \u2286 RD containing K centres Choose the first centre c1 uniformly at random from X , C \u2190 c1 for k = 2 to K do\nSample a point x from X with the probability px = D(x)2\u2211 x\u2208X D(x)\n2 , where D(x) = minc\u2208C ||x\u2212 c|| C \u2190 C \u222a x\nend for return C\nModeling in Anandkumar et al. (2012), for various Natural Language Processing applications in Cohen et al. (2014), Dhillon et al. (2012), for Mixtures of Gaussian in Hsu & Kakade (2013) and for Spectral Experts of Linear Regression in Tejasvi Chaganty & Liang (2013).\nHere we propose a probabilistic K-means algorithm based on Method of Moments. We show the derivation of the probabilistic K-means algorithm, and show its performance in comparison with other existing algorithms for various datasets."}, {"heading": "2 PROBLEM FORMULATION", "text": "Given a dataset X \u2286 RD , K-means algorithm tries to find a set C \u2286 RD of K centres (K > 0) which optimizes the following cost function:\n\u03c6(C) = \u2211 x\u2208X min c\u2208C ||x\u2212 c||2 (1)\nThe algorithm is usually started with a random initialization, but fails to converge to global minima of the objective. K-means++ tries to alleviate the problem using an initial mean seeding, as described in Algorithm 1. K-means|| (described as Algorithm 2) introduces a method to reduce the number of passes during the seeding phase, by oversampling seeding points during each pass. In our algorithm, we propose a probabilistic method to extract the means of the cluster based on the covariance and third order central moment of the data, which we outline in this section. It should be noted that our approach is different than the computation of spherical Gaussians using Hsu & Kakade (2013); we do not need to estimate any variance term in order to compute the cluster means unlike Hsu & Kakade (2013); we compute the means solely through tensor factorization. Further, we do not try to find a non-parametric version of K-means unlike Kulis & Jordan (2011); although our model is probabilistic, we assume a fixed value of K."}, {"heading": "2.1 METHOD OF MOMENTS", "text": "Here we formulate a generative model for K-means, where we select a cluster h randomly based on the probability P [h = k] = \u03c0k, k \u2208 1 . . .K, and choose a data point in the vicinity of the mean of the cluster.\nh \u223c Discrete(\u03c0) \u03b5 \u223c Eh, where E[Eh] = \u00b5h (2)\nx = \u00b5X + \u03b5\nwhere, \u00b5X = E[X], and can be estimated as the mean of the entire dataset. Eh is the p.d.f of hth cluster of the centred data, i.e., Ek = p[X \u2212 \u00b5X |h = k], and \u00b5h \u2208 RD is the mean of the hth cluster of the centred data, i.e. \u00b5k = E[Ek] = E[X \u2212 \u00b5X |h = k],\u2200k \u2208 1 . . .K . We assume that p[X \u2212 \u00b5X |h] are conditionally independent given h. We do not assume p[X \u2212 \u00b5X |h] to follow any particular distribution; rather, we derive our equations using a generic form.\nAlgorithm 2 K-means||\nInput: A set of points X \u2286 RD, number of clusters K, oversampling factor l Output: A set C \u2286 RD containing K centres C \u2190sample a point c uniformly at random from X \u03c8(X)\u2190 \u2211 x\u2208X ||x\u2212 c|| 2 for O (log\u03c8(X)) times do C \u2032 \u2190sample each point x from X with the probability px = l\u00b7D(x)\n2\u2211 x\u2208X D(x)\n2 , where D(x) = minc\u2208C ||x\u2212 c|| Assign C \u2190 C \u222a C \u2032\nend for For x \u2208 C, set wx to be the number of points in X closer to x than any other point in C return K cluster means from weighted clustering of C with the weights wx\nFollowing the generative model in Equation 2, the expectation of the centred data takes the form,\nM1 = E[X \u2212 \u00b5X ] = Eh[E[X \u2212 \u00b5h|h]] = K\u2211 k=1 \u03c0k\u00b5k = 0 (3)\nIf xi, xj are any two instances in X , then the covariance matrix M2 can be expressed as,\nM2\n= E[(X \u2212 \u00b5X)(X \u2212 \u00b5X)>] = Eh[E[(xi \u2212 \u00b5X)(xj \u2212 \u00b5X)>|h]]\n= K\u2211 k=1 (\u222b xi \u222b xj (xi \u2212 \u00b5X)(xj \u2212 \u00b5X)>P [xi \u2212 \u00b5X , xj \u2212 \u00b5X |h = k]dxidxj ) P [h = k] (4)\n= K\u2211 k=1 (\u222b xi (xi \u2212 \u00b5X)P [xi \u2212 \u00b5X |h = k] \u222b xj (xj \u2212 \u00b5X)>[xj \u2212 \u00b5X |h = k]dxidxj ) P [h = k]\n= K\u2211 k=1 \u03c0k\u00b5k\u00b5 > k\nSimilarly, for any three elements xi, xj , xl \u2208 X , the third order central moment can be expressed as,\nM3 = E[(X \u2212 \u00b5X)\u2297 (X \u2212 \u00b5X)\u2297 (X \u2212 \u00b5X)] = Eh[E[(xi \u2212 \u00b5X)\u2297 (xj \u2212 \u00b5X)\u2297 (xl \u2212 \u00b5X)|h]]\n= K\u2211 k=1 \u03c0k\u00b5k \u2297 \u00b5k \u2297 \u00b5k (5)\nThe aim of our algorithm is to retrieve the cluster means {\u00b5k}Kk=1 from the covariance M2 and third order momentM3. We first compute a matrixW of rankK to whitenM2, such thatW>M2W = I . This is similar to whitening in Independent Component Analysis (ICA), and is usually done through singular value decomposition. Let us note that, upon whitening, M2 takes the form:\nW>M2W = W > ( K\u2211 k=1 \u03c0k\u00b5k\u00b5 > k ) W = K\u2211 k=1 (\u221a \u03c0kW >\u00b5k ) (\u221a \u03c0kW >\u00b5k )> = K\u2211 k=1 \u00b5\u0303k\u00b5\u0303 > k = I\n(6)\nAlgorithm 3 Method of Moments for K-means\nInput: X \u2286 RD, Number of Clusters K Output: {\u00b5k}Kk=1 and {\u03c0k}Kk=1\n1. Compute X\u0303 = X \u2212 \u00b5X~1>N 2. Compute the Singular Value Decomposition of X\u0303> as X\u0303> = U\u03a3V . 3. Compute the whitening matrix as W = U\u03a3\u22121. 4. Compute M\u03033 \u2208 RK\u00d7K\u00d7K as a Tucker product of X\u0303W as M\u03033 = IN\u00d7N\u00d7N (X\u0303W, X\u0303W, X\u0303W ) 5. Compute eigenvalues {\u03bbk}Kk=1 and eigenvectors {vk}Kk=1 of M\u03033 through power iteration followed by deflation (Algorithm 4)\n6. Estimate \u00b5k = \u03bbk ( W> )\u2020 vk, where ( W> )\u2020 = W (W>W )\n\u22121 , and \u03c0k = \u03bb\u22122k , \u2200k \u2208 1, 2 . . .K\nreturn {\u00b5k}Kk=1 and {\u03c0k}Kk=1\nHence \u00b5\u0303k = \u221a \u03c0kW\n>\u00b5k are orthonormal vectors. Multiplying M3 by W across all three dimensions, we get\nM\u03033 = M3(W,W,W ) = K\u2211 k=1 \u03c0k(W >\u00b5k)\u2297 (W>\u00b5k)\u2297 (W>\u00b5k) = K\u2211 k=1 1 \u221a \u03c0k \u00b5\u0303k \u2297 \u00b5\u0303k \u2297 \u00b5\u0303k (7)\nHence upon the eigen-decomposition of M\u03033, the robust eigenvectors will be \u00b5\u0303k, whereas the eigenvalues will be 1/\n\u221a \u03c0k. The means {\u00b5k}Kk=1 can be retrieved from {\u00b5\u0303k}Kk=1 as, \u00b5k = 1\u221a\u03c0k\n( W> )\u2020 \u00b5\u0303k.\nThe final cluster means of the data (non-centered) can be further computed as \u00b5X + \u00b5k,\u2200k = 1 . . .K.\nThe size ofM2 andM3 areD2 andD3 respectively. These quantities can grow and outstrip memory as D increase. In practice, we do not need to compute any of them. The eigenvalue decomposition M2 is equivalent to the singular value decomposition of X\u0303>, where X\u0303 = X \u2212 \u00b5X~1>N , with the eigenvectors of M2 corresponding to the left singular vectors of X\u0303>, and the eigenvalues of M2 being the square of the singular values of X\u0303>. Therefore, the Whitening Matrix can also be computed through a singular value decomposition of X\u0303>.\nSimilarly, M\u03033 can be computed without explicitly computing M3 as a Tucker product of X\u0303W ,\nM\u03033 = IN\u00d7N\u00d7N (X\u0303W, X\u0303W, X\u0303W ) (8)\nThe overall algorithm of extracting the means is described in 3. We adopt the tensor factorization from Anandkumar et al. (2014), which computes the eigen-vectors of the tensor M\u03033 through power iteration followed by deflation, as described as Algorithm 4. The term T (\u00b7, \u03b8, \u03b8) \u2208 RK is the product of the tensor T \u2208 RK\u00d7K\u00d7K with the vector \u03b8 \u2208 RK along any two axes. The space complexity of the overall algorithm is O(K3 + DK), whereas time complexity is O((N + D)K3 + NDK) excluding the tensor factorization step. Since the space complexity is independent of the number of instances in X , the algorithm has the capability to scale to a large amount of data. Method of Moments is proven to be globally convergent ( please see Anandkumar et al. (2014) for proof).\nIf the estimated value of M\u03033 from training sample, denoted as \u02c6\u0303M3, varies from the actual M\u03033 of the population in a way such that \u2225\u2225\u2225 \u02c6\u0303M3 \u2212 M\u03033\u2225\u2225\u2225 < for some > 0, then the complexity of the tensor\nfactorization (Algorithm 4) is O(k5+\u03b4(log(k) + loglog(1/ )), where \u03b4 is a small positive number, with 0 < \u03b4 1 (Please refer to (Anandkumar et al., 2014) for a detailed derivation). In practice, the tensor factorization is less time intensive than K-Means iterations through the large datasets."}, {"heading": "2.2 UNIQUENESS OF THE MEANS", "text": "The extracted means \u00b5k = 1\u221a\u03c0k ( W> )\u2020 \u00b5\u0303k consist of three terms, W , \u03c0k and \u00b5\u0303k; \u03c0k and \u00b5\u0303k\u2019s are the eigenvalues and eigenvectors of the tensor M\u03033 = M3(W,W,W ), and hence they also depend\nAlgorithm 4 Power Iteration for Eigen-decomposition of a Third Order Symmetric Tensor\nInput: Symmetric Tensor T \u2208 RK\u00d7K\u00d7K , Number of Iterations L,N and tolerance Output: The set of eigenvalues {\u03bbk}Kk=1 and eigenvectors {vk}Kk=1 of T for k = 1 to K do\nfor \u03c4 = 1 to L do Initialize \u03b8(\u03c4)0 at random from a unit sphere in RK for t = 1 to N do\n\u03b8 (\u03c4) t \u2190\nT ( \u00b7,\u03b8(\u03c4)t\u22121,\u03b8 (\u03c4) t\u22121 ) \u2225\u2225\u2225T(\u00b7,\u03b8(\u03c4)t\u22121,\u03b8(\u03c4)t\u22121)\u2225\u2225\u2225\nend for end for Assign \u03c4\u2217 = argmax\u03c4\u2208LT ( \u03b8 (\u03c4) N , \u03b8 (\u03c4) N , \u03b8 (\u03c4) N ) Assign \u03b80 = \u03b8 (\u03c4\u2217) N , t = 1 repeat \u03b8t \u2190 T (\u00b7,\u03b8t\u22121,\u03b8t\u22121)\u2016T (\u00b7,\u03b8t\u22121,\u03b8t\u22121)\u2016 until \u2016\u03b8t \u2212 \u03b8t\u22121\u2016 < Assign vk \u2190 \u03b8t, \u03bbk \u2190 T (.,\u03b8t,\u03b8t)\u2016T (.,\u03b8t,\u03b8t)\u2016 Deflate the tensor as T \u2190 T \u2212 \u03bbk(vk \u2297 vk \u2297 vk)\nend for\non W . The whitening matrix W is unique only upto a factor of Q \u2208 RK\u00d7K , such that Q>Q = I . Let us imagine the whitening matrix W whitens M2, then any matrix W \u2032 = WQ also whitens M2, since\nW \u2032>M2W \u2032 = Q> ( W>M2W ) Q = Q>Q = I (9)\nNow, let us assume that we obtain the matrix W \u2032 as the whitening matrix, then similar to Equation 6,\nW \u2032>M2W \u2032 = Q>W> ( K\u2211 k=1 \u03c0k\u00b5k\u00b5 > k ) WQ = K\u2211 k=1 (\u221a \u03c0kQ >W>\u00b5k ) (\u221a \u03c0kQ >W>\u00b5k )> =\nK\u2211 k=1 \u00b5\u0303\u2032k\u00b5\u0303 \u2032> k = I\n(10)\nHence the new orthonormal vectors are \u00b5\u0303\u2032k, which vary from \u00b5\u0303k by a factor of Q >. Furthermore,\nM\u0303 \u20323 = M3(WQ,WQ,WQ) = K\u2211 k=1 \u03c0k(Q >W>\u00b5k)\u2297 (Q>W>\u00b5k)\u2297 (Q>W>\u00b5k)\n= K\u2211 k=1 1 \u221a \u03c0k \u00b5\u0303\u2032k \u2297 \u00b5\u0303\u2032k \u2297 \u00b5\u0303\u2032k\n(11)\nHence, the eigenvalues of M\u0303 \u20323 remain the same as those of M\u03033, whereas the eigenvectors change to \u00b5\u0303\u2032k = Q >\u00b5\u0303k. {\u00b5k}Kk=1 can be computed back from {\u00b5\u0303\u2032k}Kk=1 as,\n\u00b5k = 1 \u221a \u03c0k\n( W \u2032> )\u2020 \u00b5\u0303\u2032k =\n1 \u221a \u03c0k W \u2032(W \u2032>W \u2032)\u22121\u00b5\u0303\u2032k (12)\nTherefore,\n\u00b5k = 1 \u221a \u03c0k WQ(Q>W>WQ)\u22121Q>\u00b5\u0303k = 1 \u221a \u03c0k WQQ\u22121(W>W )\u22121Q\u2212>Q>\u00b5\u0303k\n= 1 \u221a \u03c0k W (W>W )\u22121\u00b5\u0303k = 1 \u221a \u03c0k\n( W> )\u2020 \u00b5\u0303k\n(13)\nHence, {\u00b5k}Kk=1 are invariant of Q, and are unique as long as the eigenvector decomposition of the tensor M\u03033 is robust enough to produce unique eigenvectors. Any matrix W that can whiten M2 is sufficient for extracting the means."}, {"heading": "3 EXPERIMENTAL RESULTS", "text": "We demonstrate the performance of our algorithm on a synthetic dataset first, and then on a few real datasets. We choose real datasets with known cluster labels; this enables us to evaluate the clustering performance in terms of Normalized mutual information (NMI) along with the final cost. NMI is a more accurate indicator of how well an algorithm can identify the clusters than the final cost Kulis & Jordan (2011), and the median NMI for all the datasets are listed in Table 1. We show the variation of final cost, NMI and execution times for multiple executions for every dataset.\nWe we carry our experiments out on Unix Platform on a single machine with Intel i5 Processor (2.4GHz) and 8GB memory. For K-means||, we use r = 5 and l = 2K, since these settings usually give the best results as described in Bahmani et al. (2012). For each method of initialization, we run the K-means iterations until \u03c6t\u22121(C)\u2212 \u03c6t(C) < 10\u22123\u03c6t\u22121(C), where \u03c6t(C) is the cost defined in Equation 1 at iteration t.\nMoM produces very competitive NMI compared to the rest of the methods. Its results are distinctly better than the rest for MNIST and Yale-B datasets. Even when K-Means++ or K-Means|| produces the best NMI, the NMI of MoM is very close to the best. MoM also takes the less time to complete than K-Means++ or K-Means|| (Table 2). Although K-Means takes less time than MoM, the NMI of K-Means is always lower than that of MoM.\n3.1 Synthetic GMM Dataset: We generate 5000 points from 10 component Gaussian Mixture with dimension D = 20 and with \u03c3 = 1 along each dimension. The variation in final costs, NMI and the number of iterations through the data by each algorithm is shown in Figure 1. The Method of Moments yields the highest NMI in a very competitive execution time.\n3.2 ISOLET Dataset: We perform our experiments on dataset from UCI Repository, consisting of features for spoken word recognition from 26 groups of speakers; around 7800 data instances with each instance containing 617 features. Both the Method of Moments and K-means++ achieve\nthe lowest cost and highest NMI, but Method of Moments takes less time K-means++ (Figure 2)\n3.3 Human Activities and Postural Transitions (HAPT) Dataset: We perform our experiments on the training set of Smartphone-Based Recognition of Human Activities and Postural Transitions Dataset from UCI Repository used in Reyes-Ortiz et al. (2015). The training set consists of 7767 instances with each instance containing 561 attributes corresponding to 12 distinct activities and postures. Similar to the case of ISOLET, both MoM and K-means++ achieve the lowest cost and highest NMI, but MoM less time. The performance metrics are shown in Figure 3.\n3.4 MNIST Dataset: MNIST dataset consists of handwritten digits of 28\u00d7 28 pixels resolution. We extract the means out of the training set consisting of 50,000 instances. The variation in the performance metrics of each algorithm is shown in Figure 4 for 20 executions. Method of Moments gives slightly better NMI than other algorithms, while it takes significantly less time than K-Means++ or K-Means||.\n3.5 Yale-B Dataset: We perform our experiments on Yale-B face recognition dataset consisting of 2414 images of faces of 38 subjects, with each image of the size 192\u00d7168 pixels. MoM distinctly outperforms the other algorithms, both in terms of NMI and execution time. The performance metrics are shown in Figure 5.\n3.6 CIFAR Dataset: Each of CIFAR-10 and CIFAR-100 datasets consist of 50,000 coloured images each with each instance having 3072 pixel values; the images belonging to 10 and 100 classes respectively. The variation in the final costs, NMI and the number of iterations through the data for CIFAR-10 is shown in Figure 6, while that for CIFAR-100 is shown in Figure 7.\n3.7 Caltech-101 Dataset: We perform our experiments on Caltech-101 image recognition dataset consisting of 5000 coloured images of 102 different objects. We convert each image to the of size 32\u00d732 pixels. K-means|| gives the best NMI on Caltech dataset, but takes a much higher execution time. MoM performs slightly worse but takes around one-third the time of K-Means|| (Performance Metrics in Figure 8)"}, {"heading": "4 CONCLUSION AND FURTHER EXTENSION", "text": "Here we present a probabilistic K-means algorithm based on factorization of higher order moments of the data. The existing algorithms are heuristic in nature, whereas here we introduce a probabilistic interpretation of K-means algorithm based on latent variables. Our model is very similar to the Latent Dirichlet Allocation using Method of Moments presented in Anandkumar et al. (2012), where the pair-wise and triple-wise probabilities replace the covariance and third order moment. Latent variable models can achieve accurate clustering of any dataset, and are used in a wide range of applications such as statistical mixture models and Latent Dirichlet Allocation. However, these algorithms assume that the clusters are generated from a particular probability distribution. Kmeans, on the other hand, imposes no such assumption, and is a much more versatile algorithm for clustering real datasets. Here, we show how the latent variable model can be incorporated in K-means without assuming the clusters to follow any particular distribution.\nWe establish the competitive performance of our model through various experiments. Method of Moments requires O (1) passes through the entire dataset to compute the second and third order moments to extract the initial means, and is therefore very suitable for Large Scale datasets. In practice, it will require only one or two passes to extract the moments. Also, Method of Moments takes less number of K-means or LLoyd\u2019s iterations to converge after the mean initialization, and is therefore usually computationally inexpensive than K-Means++ or K-Means||. The only limitation of our algorithm is the requirement D > K. This can be easily overcome by synthesizing new features to increase the dimension of the training dataset. However, we keep such experiments out of the scope of this paper.\n0\n0.2\n0.4\n0.6\n0.8\n1\nK\u2212Means K\u2212Means++K\u2212Means|| MoM\n(a) NMI\n1\n1.2\n1.4\n1.6\n1.8\n2\nx 105\nK\u2212Means K\u2212Means++K\u2212Means|| MoM\n(b) Final Cost\n0\n1\n2\n3\n4\n5\nK\u2212Means K\u2212Means++K\u2212Means|| MoM\n(c) Time (sec)\nFigure 1: Performance metrics of K-means, Kmeans++, K-means|| and MoM followed by K-means respectively on Synthetic GMM Dataset for K=10 over 20 executions.\n0.45\n0.5\n0.55\n0.6\n0.65\n0.7\n0.75\nK\u2212Means K\u2212Means++K\u2212Means|| MoM\n(a) NMI\n4.5\n5\n5.5\n6\n6.5x 10 5\nK\u2212Means K\u2212Means++K\u2212Means|| MoM\n(b) Final Cost\n20\n40\n60\n80\n100\n120\n140\nK\u2212Means K\u2212Means++K\u2212Means|| MoM\n(c) Time (sec)\nFigure 2: Performance metrics of K-means, Kmeans++, K-means|| and MoM followed by K-means respectively on ISOLET Dataset for K=26 over 20 executions\n0\n0.1\n0.2\n0.3\n0.4\n0.5\n0.6\n0.7\nK\u2212Means K\u2212Means++K\u2212Means|| MoM\n(a) NMI\n1.5\n2\n2.5\n3\n3.5\n4 x 105\nK\u2212Means K\u2212Means++K\u2212Means|| MoM\n(b) Final Cost\n10\n20\n30\n40\n50\nK\u2212Means K\u2212Means++K\u2212Means|| MoM\n(c) Time (sec)\nFigure 3: Performance metrics of K-means, Kmeans++, K-means|| and MoM followed by K-means respectively on HAPT dataset for K=12 over 20 executions\n0.42\n0.44\n0.46\n0.48\n0.5\n0.52\nK\u2212Means K\u2212Means++K\u2212Means|| MoM\n(a) NMI\n1.53\n1.535\n1.54\n1.545\n1.55\n1.555\n1.56\n1.565\nx 1011\nK\u2212MeansK\u2212Means++K\u2212Means|| MoM\n(b) Final Cost\n100\n200\n300\n400\n500\nK\u2212Means K\u2212Means++K\u2212Means|| MoM\n(c) Time (sec)\nFigure 4: Performance metrics of K-means, Kmeans++, K-means|| and MoM followed by K-means respectively on MNIST dataset for K=10 over 20 executions"}], "references": [{"title": "Streaming k-means approximation", "author": ["Ailon", "Nir", "Jaiswal", "Ragesh", "Monteleoni", "Claire"], "venue": "In Advances in Neural Information Processing Systems, pp", "citeRegEx": "Ailon et al\\.,? \\Q2009\\E", "shortCiteRegEx": "Ailon et al\\.", "year": 2009}, {"title": "Np-hardness of euclidean sum-of-squares clustering", "author": ["Aloise", "Daniel", "Deshpande", "Amit", "Hansen", "Pierre", "Popat", "Preyas"], "venue": "Machine Learning,", "citeRegEx": "Aloise et al\\.,? \\Q2009\\E", "shortCiteRegEx": "Aloise et al\\.", "year": 2009}, {"title": "A spectral algorithm for latent dirichlet allocation", "author": ["Anandkumar", "Anima", "Liu", "Yi-kai", "Hsu", "Daniel J", "Foster", "Dean P", "Kakade", "Sham M"], "venue": "In Advances in Neural Information Processing Systems,", "citeRegEx": "Anandkumar et al\\.,? \\Q2012\\E", "shortCiteRegEx": "Anandkumar et al\\.", "year": 2012}, {"title": "Tensor decompositions for learning latent variable models", "author": ["Anandkumar", "Animashree", "Ge", "Rong", "Hsu", "Daniel", "Kakade", "Sham M", "Telgarsky", "Matus"], "venue": "The Journal of Machine Learning Research,", "citeRegEx": "Anandkumar et al\\.,? \\Q2014\\E", "shortCiteRegEx": "Anandkumar et al\\.", "year": 2014}, {"title": "k-means++: The advantages of careful seeding", "author": ["Arthur", "David", "Vassilvitskii", "Sergei"], "venue": "In Proceedings of the eighteenth annual ACM-SIAM symposium on Discrete algorithms,", "citeRegEx": "Arthur et al\\.,? \\Q2007\\E", "shortCiteRegEx": "Arthur et al\\.", "year": 2007}, {"title": "Scalable k-means++", "author": ["Bahmani", "Bahman", "Moseley", "Benjamin", "Vattani", "Andrea", "Kumar", "Ravi", "Vassilvitskii", "Sergei"], "venue": "Proceedings of the VLDB Endowment,", "citeRegEx": "Bahmani et al\\.,? \\Q2012\\E", "shortCiteRegEx": "Bahmani et al\\.", "year": 2012}, {"title": "An analysis of single-layer networks in unsupervised feature learning", "author": ["Coates", "Adam", "Ng", "Andrew Y", "Lee", "Honglak"], "venue": "In International conference on artificial intelligence and statistics,", "citeRegEx": "Coates et al\\.,? \\Q2011\\E", "shortCiteRegEx": "Coates et al\\.", "year": 2011}, {"title": "Spectral learning of latentvariable pcfgs: Algorithms and sample complexity", "author": ["Cohen", "Shay B", "Stratos", "Karl", "Collins", "Michael", "Foster", "Dean P", "Ungar", "Lyle"], "venue": "The Journal of Machine Learning Research,", "citeRegEx": "Cohen et al\\.,? \\Q2014\\E", "shortCiteRegEx": "Cohen et al\\.", "year": 2014}, {"title": "Spectral dependency parsing with latent variables. In Proceedings of the 2012 joint conference on empirical methods in natural language processing and computational natural language learning, pp. 205\u2013213", "author": ["Dhillon", "Paramveer S", "Rodu", "Jordan", "Collins", "Michael", "Foster", "Dean P", "Ungar", "Lyle H"], "venue": "Association for Computational Linguistics,", "citeRegEx": "Dhillon et al\\.,? \\Q2012\\E", "shortCiteRegEx": "Dhillon et al\\.", "year": 2012}, {"title": "Learning mixtures of spherical gaussians: Moment methods and spectral decompositions", "author": ["Hsu", "Daniel", "Kakade", "Sham M"], "venue": "In Proceedings of the 4th Conference on Innovations in Theoretical Computer Science,", "citeRegEx": "Hsu et al\\.,? \\Q2013\\E", "shortCiteRegEx": "Hsu et al\\.", "year": 2013}, {"title": "A spectral algorithm for learning hidden markov models", "author": ["Hsu", "Daniel", "Kakade", "Sham M", "Zhang", "Tong"], "venue": "Journal of Computer and System Sciences,", "citeRegEx": "Hsu et al\\.,? \\Q2012\\E", "shortCiteRegEx": "Hsu et al\\.", "year": 2012}, {"title": "Shifted power method for computing tensor eigenpairs", "author": ["Kolda", "Tamara G", "Mayo", "Jackson R"], "venue": "SIAM Journal on Matrix Analysis and Applications,", "citeRegEx": "Kolda et al\\.,? \\Q2011\\E", "shortCiteRegEx": "Kolda et al\\.", "year": 2011}, {"title": "Revisiting k-means: New algorithms via bayesian nonparametrics", "author": ["Kulis", "Brian", "Jordan", "Michael I"], "venue": "arXiv preprint arXiv:1111.0352,", "citeRegEx": "Kulis et al\\.,? \\Q2011\\E", "shortCiteRegEx": "Kulis et al\\.", "year": 2011}, {"title": "Transition-aware human activity recognition using smartphones", "author": ["Reyes-Ortiz", "Jorge-L", "Oneto", "Luca", "Sam\u00e0", "Albert", "Parra", "Xavier", "Anguita", "Davide"], "venue": null, "citeRegEx": "Reyes.Ortiz et al\\.,? \\Q2015\\E", "shortCiteRegEx": "Reyes.Ortiz et al\\.", "year": 2015}, {"title": "Fast and accurate k-means for large datasets. In Advances in neural information processing", "author": ["Shindler", "Michael", "Wong", "Alex", "Meyerson", "Adam W"], "venue": null, "citeRegEx": "Shindler et al\\.,? \\Q2011\\E", "shortCiteRegEx": "Shindler et al\\.", "year": 2011}, {"title": "Hilbert space embeddings of hidden markov models", "author": ["Song", "Le", "Boots", "Byron", "Siddiqi", "Sajid M", "Gordon", "Geoffrey J", "Smola", "Alex J"], "venue": "In Proceedings of the 27th international conference on machine learning", "citeRegEx": "Song et al\\.,? \\Q2010\\E", "shortCiteRegEx": "Song et al\\.", "year": 2010}, {"title": "Spectral experts for estimating mixtures of linear regressions", "author": ["Tejasvi Chaganty", "Arun", "Liang", "Percy"], "venue": "In Proceedings of The 30th International Conference on Machine Learning,", "citeRegEx": "Chaganty et al\\.,? \\Q2013\\E", "shortCiteRegEx": "Chaganty et al\\.", "year": 2013}], "referenceMentions": [{"referenceID": 1, "context": "In recent times it has also been used for feature extraction purpose, which is further used for classification using Neural Networks in Coates et al. (2011). K-means is an NP hard problem even for K = 2 (Aloise et al.", "startOffset": 136, "endOffset": 157}, {"referenceID": 0, "context": "K-means is an NP hard problem even for K = 2 (Aloise et al. (2009)), and only heuristic solutions exist.", "startOffset": 46, "endOffset": 67}, {"referenceID": 0, "context": "K-means is an NP hard problem even for K = 2 (Aloise et al. (2009)), and only heuristic solutions exist. Perhaps the most common of such heuristics is the Lloyd\u2019s algorithm, which uses an EM style approach; it first assigns the points to different clusters according to their distance from the means of the clusters, and then updates the cluster means by averaging out the points in each cluster. The algorithm uses a random initialization, and comes with no guarantee to reach the global minima. The K-means++ in Arthur & Vassilvitskii (2007) addresses the problem by using an initial seeding of the means, and converges within O (logK) of the global optima.", "startOffset": 46, "endOffset": 544}, {"referenceID": 0, "context": "K-means is an NP hard problem even for K = 2 (Aloise et al. (2009)), and only heuristic solutions exist. Perhaps the most common of such heuristics is the Lloyd\u2019s algorithm, which uses an EM style approach; it first assigns the points to different clusters according to their distance from the means of the clusters, and then updates the cluster means by averaging out the points in each cluster. The algorithm uses a random initialization, and comes with no guarantee to reach the global minima. The K-means++ in Arthur & Vassilvitskii (2007) addresses the problem by using an initial seeding of the means, and converges within O (logK) of the global optima. However, for most practical purposes, a bound of O (logK) might be too high. Moreover, the algorithm uses K passes through the entire dataset to seed the means; this makes it very expensive for large amount of data. K-means|| in Bahmani et al. (2012) suggests a method to oversample the means during every pass to reduce the number of passes in the seeding phase.", "startOffset": 46, "endOffset": 911}, {"referenceID": 0, "context": "There are other variants of K-means algorithm, such as Ailon et al. (2009) and Shindler et al.", "startOffset": 55, "endOffset": 75}, {"referenceID": 0, "context": "There are other variants of K-means algorithm, such as Ailon et al. (2009) and Shindler et al. (2011). Most of these algorithms build on K-means++ and aim to reduce the computational burden, rather than improving accuracy.", "startOffset": 55, "endOffset": 102}, {"referenceID": 0, "context": "There are other variants of K-means algorithm, such as Ailon et al. (2009) and Shindler et al. (2011). Most of these algorithms build on K-means++ and aim to reduce the computational burden, rather than improving accuracy. Hence, we limit our discussion on K-means++ and K-means||. There have been recent developments on clustering algorithms based on Method of Moments (MoM), also referred to as Spectral Methods in the literature. Unlike traditional clustering algorithms which rely on EM or similar algorithms to maximize the likelihood of the data, MoM tries to learn the parameters from the higher order moments of the data. The method can be proven to be globally convergent using PAC style proof (see Anandkumar et al. (2014)), and has been successfully applied for Hidden Markov Model in Hsu et al.", "startOffset": 55, "endOffset": 733}, {"referenceID": 0, "context": "There are other variants of K-means algorithm, such as Ailon et al. (2009) and Shindler et al. (2011). Most of these algorithms build on K-means++ and aim to reduce the computational burden, rather than improving accuracy. Hence, we limit our discussion on K-means++ and K-means||. There have been recent developments on clustering algorithms based on Method of Moments (MoM), also referred to as Spectral Methods in the literature. Unlike traditional clustering algorithms which rely on EM or similar algorithms to maximize the likelihood of the data, MoM tries to learn the parameters from the higher order moments of the data. The method can be proven to be globally convergent using PAC style proof (see Anandkumar et al. (2014)), and has been successfully applied for Hidden Markov Model in Hsu et al. (2012) and Song et al.", "startOffset": 55, "endOffset": 814}, {"referenceID": 0, "context": "There are other variants of K-means algorithm, such as Ailon et al. (2009) and Shindler et al. (2011). Most of these algorithms build on K-means++ and aim to reduce the computational burden, rather than improving accuracy. Hence, we limit our discussion on K-means++ and K-means||. There have been recent developments on clustering algorithms based on Method of Moments (MoM), also referred to as Spectral Methods in the literature. Unlike traditional clustering algorithms which rely on EM or similar algorithms to maximize the likelihood of the data, MoM tries to learn the parameters from the higher order moments of the data. The method can be proven to be globally convergent using PAC style proof (see Anandkumar et al. (2014)), and has been successfully applied for Hidden Markov Model in Hsu et al. (2012) and Song et al. (2010), for Topic", "startOffset": 55, "endOffset": 837}, {"referenceID": 2, "context": "Modeling in Anandkumar et al. (2012), for various Natural Language Processing applications in Cohen et al.", "startOffset": 12, "endOffset": 37}, {"referenceID": 2, "context": "Modeling in Anandkumar et al. (2012), for various Natural Language Processing applications in Cohen et al. (2014), Dhillon et al.", "startOffset": 12, "endOffset": 114}, {"referenceID": 2, "context": "Modeling in Anandkumar et al. (2012), for various Natural Language Processing applications in Cohen et al. (2014), Dhillon et al. (2012), for Mixtures of Gaussian in Hsu & Kakade (2013) and for Spectral Experts of Linear Regression in Tejasvi Chaganty & Liang (2013).", "startOffset": 12, "endOffset": 137}, {"referenceID": 2, "context": "Modeling in Anandkumar et al. (2012), for various Natural Language Processing applications in Cohen et al. (2014), Dhillon et al. (2012), for Mixtures of Gaussian in Hsu & Kakade (2013) and for Spectral Experts of Linear Regression in Tejasvi Chaganty & Liang (2013).", "startOffset": 12, "endOffset": 186}, {"referenceID": 2, "context": "Modeling in Anandkumar et al. (2012), for various Natural Language Processing applications in Cohen et al. (2014), Dhillon et al. (2012), for Mixtures of Gaussian in Hsu & Kakade (2013) and for Spectral Experts of Linear Regression in Tejasvi Chaganty & Liang (2013). Here we propose a probabilistic K-means algorithm based on Method of Moments.", "startOffset": 12, "endOffset": 267}, {"referenceID": 3, "context": "If the estimated value of M\u03033 from training sample, denoted as \u02c6\u0303 M3, varies from the actual M\u03033 of the population in a way such that \u2225\u2225\u2225 \u02c6\u0303 M3 \u2212 M\u03033\u2225\u2225\u2225 < for some > 0, then the complexity of the tensor factorization (Algorithm 4) is O(k(log(k) + loglog(1/ )), where \u03b4 is a small positive number, with 0 < \u03b4 1 (Please refer to (Anandkumar et al., 2014) for a detailed derivation).", "startOffset": 327, "endOffset": 352}, {"referenceID": 2, "context": "We adopt the tensor factorization from Anandkumar et al. (2014), which computes the eigen-vectors of the tensor M\u03033 through power iteration followed by deflation, as described as Algorithm 4.", "startOffset": 39, "endOffset": 64}, {"referenceID": 2, "context": "We adopt the tensor factorization from Anandkumar et al. (2014), which computes the eigen-vectors of the tensor M\u03033 through power iteration followed by deflation, as described as Algorithm 4. The term T (\u00b7, \u03b8, \u03b8) \u2208 R is the product of the tensor T \u2208 RK\u00d7K\u00d7K with the vector \u03b8 \u2208 R along any two axes. The space complexity of the overall algorithm is O(K + DK), whereas time complexity is O((N + D)K + NDK) excluding the tensor factorization step. Since the space complexity is independent of the number of instances in X , the algorithm has the capability to scale to a large amount of data. Method of Moments is proven to be globally convergent ( please see Anandkumar et al. (2014) for proof).", "startOffset": 39, "endOffset": 682}, {"referenceID": 5, "context": "For K-means||, we use r = 5 and l = 2K, since these settings usually give the best results as described in Bahmani et al. (2012). For each method of initialization, we run the K-means iterations until \u03c6t\u22121(C)\u2212 \u03c6(C) < 10\u22123\u03c6t\u22121(C), where \u03c6(C) is the cost defined in Equation 1 at iteration t.", "startOffset": 107, "endOffset": 129}, {"referenceID": 11, "context": "3 Human Activities and Postural Transitions (HAPT) Dataset: We perform our experiments on the training set of Smartphone-Based Recognition of Human Activities and Postural Transitions Dataset from UCI Repository used in Reyes-Ortiz et al. (2015). The training set consists of 7767 instances with each instance containing 561 attributes corresponding to 12 distinct activities and postures.", "startOffset": 220, "endOffset": 246}, {"referenceID": 2, "context": "Our model is very similar to the Latent Dirichlet Allocation using Method of Moments presented in Anandkumar et al. (2012), where the pair-wise and triple-wise probabilities replace the covariance and third order moment.", "startOffset": 98, "endOffset": 123}], "year": 2017, "abstractText": "K-means is one of the most widely used algorithms for clustering in Data Mining applications, which attempts to minimize the sum of square of Euclidean distance of the points in the clusters from the respective means of the clusters. The simplicity and scalability of K-means makes it very appealing. However, K-means suffers from local minima problem, and comes with no guarantee to converge to the optimal cost. K-means++ tries to address the problem by seeding the means using a distance based sampling scheme. However, seeding the means in K-means++ needsO (K) passes through the entire dataset, which could be very costly in large amount of dataset. Here we propose a method of seeding initial means based on higher order moments of the data, which takes O (1) passes through the entire dataset to extract the initial set of means. Our method yields competitive performance with respect to all the existing K-means algorithms, whilst avoiding the expensive mean selection steps of K-means++ and other heuristics. We demonstrate the performance of our algorithm in comparison with the existing algorithms on various benchmark datasets.", "creator": "LaTeX with hyperref package"}}}