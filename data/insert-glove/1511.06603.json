{"id": "1511.06603", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "20-Nov-2015", "title": "Exponential Natural Particle Filter", "abstract": "arvon Particle rumbia Filter algorithm (PF) emiliana suffers clementson from some problems essenes such huske as the loss of tirados particle immunotherapy diversity, 1362 the alcindor need merszei for large number sh\u016br of particles, and momentary the forwardly costly pickering selection of the 8-part importance carysfort density functions. In this visions paper, 117.89 a eyn novel lorine Exponential Natural Particle atout Filter (xNPF) is introduced miklosko to solve the parraguez above problems. dilbert In this abernethy approach, a state apne transitional psyop probability 1819 with cedia the lachky use west-east of natural eco-costs gradient frugivore learning is nagalingam proposed which stinchfield balances exploration and koltsovo exploitation fulbeck more nesterenko robustly. paneth The m-5 results adjournment show that micronet xNPF converges goromonzi much khvoresh closer to wends the shwin true target beglitis states than dominator the other adams-on\u00eds state polarise of the art sigarms particle filter.", "histories": [["v1", "Fri, 20 Nov 2015 14:08:33 GMT  (846kb)", "http://arxiv.org/abs/1511.06603v1", null]], "reviews": [], "SUBJECTS": "cs.LG cs.NE cs.RO", "authors": ["ghazal zand", "mojtaba taherkhani", "reza safabakhsh"], "accepted": false, "id": "1511.06603"}, "pdf": {"name": "1511.06603.pdf", "metadata": {"source": "CRF", "title": "Exponential Natural Particle Filter", "authors": ["Ghazal Zand", "Mojtaba Taherkhani", "Reza Safabakhsh"], "emails": ["}@aut.ac.ir"], "sections": [{"heading": null, "text": "Introduction\nThe states of a system provide a complete representation of the system\u2019s internal condition and status (Yin and Zhu 2015); hence obtaining the system states is very important for many problems such as process monitoring (Gao and Ding 2007; Gao and Ho 2006), localization (Lu 2014; Yang 2014), robot navigation (Atia et al. 2010; Hiremath et al. 2014), single or multi object tracking (Bae and Yoon 2014; Fan, Ji, and Zhang 2015; Mihaylova 2014; Nannuru and Coates 2013; Zhang 2015; Zhao 2013), lane detection (Shin, Tao, and Klette 2014) and so on. These problems require estimation of the state of a dynamical system by using a sequence of noisy measurements made on the system. Solving these problems is the goal of state estimation algorithms. Bayesian sequential estimation is the basis for the most of the state estimation methods. In a Bayesian framework, the aim is thus to compute the posterior distribution p(Xt|Z1:t), where Z1:t is the noisy observation set from time 1 to t and Xt is the global state vector at time t.\nThe Particle Filter algorithm (PF) is a Bayesian sequential estimation method whose fundamental idea is to approximate p(Xt|Z1:t) with a set of particles with associated weights. The PF is designed for a hidden Markov Model, in which the observation processes are related to the state processes, as shown in Figure 1.\np(Xt|Xt-1) is the state transition probability and p(Zt|Xt) is the observation probability by given state.\nTo briefly review generic PFs, let\u2019s consider the General\nform of discrete-time nonlinear dynamical systems as\nXt+1=f(Xt,Qt)"}, {"heading": "Zt=h(Xt,Et)", "text": "where, Qt and Et denote process noise and observation noise at time t, f and h are nonlinear functions of the system. The noise signals are assumed to be independent and with known Probability Density Function (PDF). The posterior density is calculated as\np (Xt|Z1:t)=k.p (Zt|Xt) \u222b p (Xt|Xt-1).p (Xt-1|Z1:t-1)dXk-1\nThe integral in (2) can be approximated with N independent weighted particles by using Monte-Carlo sampling. It starts with assuming that there is a weighted sample representation for the posterior p(Xt-1|Z1:t-1) at the previous time step.\nSt-1={(xt-1 (i) , wt-1 (i));1,\u2026,N}\n(1)\n(2)\n(3)\nwhere, wt-1 (i) and xt-1 (i) denote the weight and the state of particle i at time t-1. By using this set to carry out Monte-Carlo integration, the integral in (2) is approximated as:\n\u222b p (Xt|Xt-1).p (Xt-1|Z1:t-1)dXk-1 \u2248 \u2211 wt-1 (i) p (Xt|xt-1 (i) )\ni\nThen, the posterior density is calculated by re-weighting the particles as:\nwt (i)\u221d\np (zt|xt (i))p (xt (i)|xt-1 (i))\nq (xt (i)|xt-1 (i) ,Z1:t)\nwt-1 (i)\nWhere q(xt (i)| xt-1 (i) ,Zt) is a proposal density function to estimate the particles\u2019 positions. The algorithms mostly use p (xt (i) |xt-1 (i) ) as the proposal density function.\nAfter computing the weights, particles need to be resampled independently N times, with replacement, from\nthe obtained distribution. Resampling is performed to avoid degeneracy in the particle filter. In the resampling phase, particles with low importance are removed and replaced with more probable new particles. The diagram of Figure 2\n(Smith et al. 2013) shows the mentioned iteration of the PF.\nThe PF algorithm performs relatively better than other nonlinear filtering methods; but it still face some problems: (a) the importance density functions selection (Fan et al. 2015; Zuo et al. 2013). (b) the loss of particle diversity (Fan et al. 2015). (c) the need for large number of particles (Ades and Van Leeuwen 2013).\nThe objective of this paper is to design a new PF which tries to solve the above mentioned problems. In the proposed method, called Exponential Natural Particle Filter (xNPF), particles are classified into two classes. The particles of the first class aim to retain the diversity (as the Exploration stage) by using original state transition probability; whereas the particles of the second class try to search locally (as the Exploitation stage) by using the proposed state transition probability. In addition, the proposed PF does not need a large number of particles. The reason is that unlike the standard PF, in which a few of particles have a significant weight and the rest of them have a negligible weigh, in the proposed method the majority of particles contribute significant information to the posterior probability.\nThe rest of this paper is organized as follows. The second section provides a review of different PFs. In this section, PF algorithms are classified based on addressing the mentioned problems. In the third section, a novel particle filter is proposed and explained in detail. The experimental results are discussed in the fourth section, and the last section concludes the paper."}, {"heading": "Related Works", "text": "Since the introduction of PF(N. J. Gordon, Salmond, and Smith 1993), many intelligent search and optimization methods have been incorporated into PF to enhance the performance of the classic PF. For example, Bin et al. (Bin 2013) proposed a localization algorithm called PSO-PF algorithm based on particle swarm optimization. By propagating the particles using the PSO method, their algorithm eliminates the phenomenon of loss of particles\u2019 diversity.\nIn (Szczuko 2014), a Hybrid genetic-APF method is presented in which a genetic algorithm is combined with annealed PF for human body pose estimation. In these algorithms, particles share more information that causes locating in the most probable areas. In (Park et al. 2009; Yin and Zhu 2015), the genetic operators are designed to further improve the particle diversity while avoiding the premature convergence, since the misleading state estimating problem in general PF is mainly caused by the poverty of particle diversity.\nKalami and Khaloozadeh tried to solve the misleading state estimating problem by converting the nonlinear state estimation problem to a multi-objective optimization problem and proposed non-dominated Genetic Filter based on the genetic algorithm and PF (Kalami Heris and Khaloozadeh 2014).\nRecently, Fan et al. proposed an Iterative PF (IPF) which converges to true target state more closely by sampling the particles iteratively with the search scope contracted (Fan et al. 2015). IPF is motivated by the success of both increasing the sampling density and simulated annealing.\nAs mentioned before, the limitation of the number of particles that can be used, is one of the most serious issues in the particle filtering problem. To overcome this problem, BoxPF (Gning, Ristic, and Mihaylova 2012; Gning et al. 2013) addresses the concept of box particle that can make sampling from coarse to fine, improving the sampling efficiency. The purpose of this method is to reduce the number of random samples required by the standard particle filter. Ades et al. proposed a PF which uses the proposal density to ensure that all particles end up in the high-probability region of the posterior pdf (Ades and Van Leeuwen 2013). This gives rise to the possibility of nonlinear data assimilation in large-dimensional systems.\nAlso, in (Ades and Van Leeuwen 2015), a fully nonlinear equivalent weights PF is presented to avoid the need for a\n(4)\n(5)\n(6)\nlarge numbers of particles by replacing the standard model transition density with two different proposal transition densities. The first one is used to relax all particles towards the high-probability regions of the state space as defined by the observations. The second one is then used to ensure that the majority of particles have equivalent weights at the observation time.\nYoon et al. describe a vision-based system for tracking objects based on fuzzy PF algorithm in which the states are estimated using a fuzzy expected value operator (Yoon, Cheon, and Park 2013). This fuzzy PF algorithm is proposed to overcome problems from the occurrence of the unexpected improper variances due to several causes (e.g. process noises, or observation noises).\nFinally, in the last decades many famous modifications have been introduced in the PF, such as the Bootstrap Particle Filter (BPF), the Auxiliary Particle Filter (APF), the Regularized Particle Filter (RPF), the Unscented Particle Filter (UPF), and the Gaussian Particle Filter (GPF)(Arulampalam et al. 2002; N. Gordon, Ristic, and Arulampalam 2004; N. J. Gordon et al. 1993; Kotecha and Djuri\u0107 2003)."}, {"heading": "Exponential Natural Particle Filter", "text": "The PF algorithm proposed in this paper, which is called the Exponential Natural Particle Filter (xNPF), is inspired by the following idea.\nThe appropriate selection of the proposal density function can increase the sampling density to close to the true state, so that the particles can be used sufficiently. Thus, it can meet the same precision requirements with fewer particles. On the other hand, increasing the sampling density in a small region leads to the loss of diversity. So, the particles cannot search the environment properly. In the xNPF, particles are classified into two classes A and B. The particles of class A try to retain the diversity (exploration) by using original state transition probability, and the particles of class B try to search locally (exploitation) by using the proposed state transition probability. To classify particles, a partitioning parameter (\u03c0partition) \u03f5 [0,1] is considered.\nThis parameter randomly partitions all particles into class\nA and class B, in which the cardinalities are defined with\n|A|=\u2308\u03c0partition*N\u2309 |B|=N-|A|\nwhere \u2308x\u2309 indicates the smallest integer which is greater than or equal to x (ceiling of x ).\nThe idea of using natural gradient learning has been proposed in Exponential Natural Evolution Strategy (xNES). To propose the state transition probability for class B, xNES is used which iteratively updates the probability distribution by using an estimated gradient on its distribution parameters (Glasmachers et al. 2010). These updates continue until T iteration. This estimation of distribution algorithm presents\nan exponential parametrization of the search distribution. It guarantees invariance, while at the same time provides an elegant and efficient way of computing the natural gradient without the need for the explicit Fisher information.\nIn this paper by selecting a large value for the step size which is used in the original transitional probability, diversity of the particles of class A is retained while the exploration is improved. On the other hand, by using an estimated gradient, the proposed transitional probability for class B improves local search ability of the particles. Thus, the balance between global and local search is gained.\nUsing the above idea, the proposal density function for\nestimating the particles\u2019 positions is defined as\nq(xt (I)\n)= { p(xt\n(i) |xt-1 (i) ) i\u03f5A\nq xNES (xt (i) |xt-1 (i) , mt-1, \ud835\udf48t-1 2 , \ud835\udc6at-1) i\u03f5B\nwhere qxNES(.|.) is the proposed state transition probability which is computed by xNES; mt-1, \u03c3t-1 and Ct-1 are the mean value, step size, and covariance matrix returned by xNES at the end of the Tth iteration.\nAccording to the (6), the primary probabilites of classes\nA and B are calculated as\nPr{i\u03f5A} =1-\u03c0partition\nPr{i\u03f5B} =\u03c0partition\nHence, (7) can be written in compact form as\nq(xt (i) | xt-1 (i) ,Zt) = \u03c0partition qxNES (xt (i) |xt-1 (i) ,m t-1 ,\u03c3t-1 2 Ct-1)\n+ (1-\u03c0partition)p(xt (i) |xt-1 (i) )\nAccording to (5) and (7), the rule of updating weights in xNPF is given by\nwt (i)\u221d\np(zt|xt (i) ) p(xt (i) |xt-1 (i) )\n\u03c0partitionqxNES(xt (i) |x t-1 (i) ,m t-1 ,\u03c3t-1 2 Ct-1)+(1-\u03c0partition)p(xt (i) |x t-1 (i) )\nwt-1 (i)\nThe resampling method in the standard PF is known as the Roulette Wheel Selection (RW) rule in the field of evolutionary computation. Methods like RW may have a bad performance when a particle has a high weight in comparison with other particles. In RW, the most highly weighted particle may saturate the candidate space, and this leads to more loss of particles\u2019 diversity.\nFor the resampling step of xNPF, the Stochastic Universal Sampling (SUS) (De Falco et al. 2012) algorithm is used. This algorithm does not have the mentioned problem. SUS uses a single random value to sample all of the particles by choosing them at evenly spaced intervals. This gives weaker particles a chance to be chosen and thus reduces the unfair nature of fitness-proportional selection methods. The other parts of xNPF are the same as these in the standard particle\n(7)\n(8)\n(9)\n(10)\n(6)\nfilter. The overall structure of the xNPF algorithm is shown in Figure3."}, {"heading": "Experiments", "text": "The efficiency of the xNPF is demonstrated by applying it to the problem of state estimation of the HIV infection model (Hartmann, Vinga, and Lemos 2012) assuming parametric uncertainty. To mathematically model the Human Immunodeficiency Virus (HIV), the three-dimensional basic infection model is considered. The model is given as\nT\u0307=s - dT - \u03b2(t)Tv\nT\u0307 * = \u03b2(t)Tv - \u03beT*\nv\u0307 = kT* - cv\nwhere T is the concentration of healthy CD4+ T-cells, T* is the concentration of HIV-infected CD4+ T-cells, and v is the free virus particles. The six parameters can be written in a vector form as \u03b8=(s, d, \u03b2, \u03be, k, c), where all components have biological significance.\nIn a nutshell, (11) can be interpreted as follows. Healthy CD4+ T cells, which have an average life span of 1/d days, are produced at a constant rate s. These cells can get infected by free virus particles. The infection is modeled using a simple mass-action type term, with a time-varying parameter \u03b2. Infected cells may have a different life span (1/\u03be) than healthy cells, which means in general \u03be \u2260d. Finally, free virus particles are produced in infected cells, and released at a rate k, having an average life span of 1/c. Figure 4 presents the mentioned HIV infection model.\nIn this paper, the numerical values for the parameters of model (11) are selected as follows (Hartmann et al. 2012): \u03b8=(368.94, 0.46, 7.26e-06, 2.16, 1317.4, 3.6). Simulation time is set to 190 days and a 25 days periodic input is applied to the system which results in the parameter \u03b2=3.63e-04. The measurement equation related to system is given by\nZt= [ 1 1 0\n0 0 1 ] [\nTt Tt * vt ] + [ e1,t e2,t ]\nwhere e1,t ~ N(0, \u03c31 2) and e2,t ~ N(0, \u03c32 2) are independent zeromean Gaussian noises. In this paper, it is assumed that \u03c31 2 =0.05 and \u03c32 2=1.\nIn the first subsection, the effect of varying the number of particles and the partitioning parameter will be analyzed. In the second subsection, the performance of the xNPF is compared with some particle filter variants. The performance measure used to investigate the effectiveness of strategies is the RMSE.\nThe default parameters for xNPF, such as the simulation time, the maximum number of xNES iterations, the number of particles, partitioning parameter and the step size of the original transitional probability are given in Table 1. The results of all experiments are averaged over 30 independent runs.\ncells are infected by virus with rate \u03b2. Target T cells are assumed to be produced at rate s and to die at rate d per cell.\nInfected cells T*, which produce new virions at rate k, and\ndie at rate \u03be per cell (Perelson 2002).\n(12)\n(11)\nThe number of particles and partitioning parame-\nter\nTo investigate the effect of increasing the number of particles on the performance of the proposed method, various values of N are applied to the HIV infection model. For this experiment xNPF is run for different values of N and the default values of other parameters as in Table 1. Figure 5(a) shows the occurrence probability of the normalized weight versus the number of particles. Figure 5(b) and Figure 5(c) show the RMSE versus the number of particles.\nThe problem in the standard PF is that the majority of the particles are far from observation; thus only a few of them have a significant weight and the rest have negligible weights. Then to achieve a satisfactory performance, the PF algorithm turns out to require a massive number of particles, which induces high computational complexity. Figure 5(a) shows that with the proposed density function, the particles are more likely to get closer to the true states and get better weights. Thus the method avoids blind sampling, by which the majority of the particles contribute significant information to the probability of the system state given the observation.\nBy avoiding blind sampling, increasing the number of particles has no significant effect on bringing the approximation error down. Figure 5(b) and 5(c) show the mentioned result. Observing the graph closely, the obtained RMSE values of xNPF with the number of particles within the range of [25, 200] are similar. However, for comparing with other PF variants, N is considered equal to 25. Changes of the error value within the range of [5, 25] is quite natural since there is a small number of particles and xNPF cannot search the environment properly.\nTo study the effect of the partitioning parameter on the performance of xNPF, various configurations of the partitioning parameter are used. For this reason, xNPF is run for different values of \u03c0partition and the default values for other parameters as in Table 1. Performances of different configurations are summarized in Figure 6. If the \u03c0partition assumes a small value, the number of particles in class B are increased. Thus the position of most of the particles is adjusted by gradient learning. To put it another way, these particles search locally (as the exploitation stage). Conversely, if the parameter assumes a large value, the number of particles in class A are increased. Thus the positions of the majority of the particles are adjusted in the\nsame way as in the standard PF. These particles search globally (as the exploration stage) proportional to the value of the step size of p(Xt|Xt-1).\nTo have a successful search, an optimal balance between the exploration and exploitation must be found. If the particles only exploit, they will not be able to cover the drastic changes in the sequent system states. As a result, it will be more likely to predict the system state unsuccessfully. In addition, when the observation model causes many local optima, the error of the system state prediction gradually increases. Gradient learning causes the particles get stuck in these local optima. If the particles only explore, they can follow the system state, but their prediction of the system state will not be very accurate. Thus the error values increase. Hence, some of the particles should be searching globally, so that they can follow the system states even in drastic changes. Furthermore, there should be other particles searching locally, so that they can predict the system state more accurately.\nFigure 6(a) indicates that by increasing the value of \u03c0partition, the changes in the prediction of state T+T* is slight. In other words, state T+T* is easily predictable during the simulation, but state v is not. The graph in Figure 6(b) shows that by increasing the value of \u03c0partition, although the particles are able to follow the system state, the error increases because the particles are not able to predict the system state very accurately. In addition, since the sequent state v does not have drastic change, the small values for the \u03c0partition are good results. With the \u03c0partition within the range of [0.05, 0.3],\nerror values are almost the same. However, to bring about a balance between the local and global search, \u03c0partition equal to 0.3 is considered. In such a situation, some of the particles search globally, whilst the rest of them make the prediction of the system states more accurately by gradient learning.\nComparison with other algorithms\nFrom all strategies introduced in the previous sections, five strategies are adopted in this study for comparisons: Annealed PF (APF)(Szczuko 2014), Bootstrap PF (BPF) (N. J. Gordon et al. 1993), iterative PF (IPF) (Fan et al. 2015), equivalent weight PF (Ades and Van Leeuwen 2015), and intelligent PF (Yin and Zhu 2015).\nBased on our previous experiments, xNPF is run with N=25, \u03c0partition=0.3 and the default values for other parameters as in Table 1. The other algorithms are run with N equal to 100 and their other parameters are set based on the recommended values in their corresponding references.\nFor a better comparison of the results, Table 2 lists the mean and standard deviation of the RMSE and the number of particles\u2019 re-weighting found by each method. The bold number indicates the best solution according to a t-test with a significance level of 5%. Considering the same number of particles for all of the selected methods is not good for comparing the results properly. The methods may have some heuristic operators themselves, by which p(Xt|Xt-1) is calculated during several evaluations (going through reweighting step). Thus, the number of re-weighing is used for comparing RMSE values.\nResults indicate that all of the methods have the same RMSE in prediction of the state T+T*. The RMSE values of IPF, Equivalent weight PF and xNPF were better than the other methods in the prediction of state v. But the re-weighing number of xNPF is much lesser than IPF and Equivalent weight PF. Thus, xNPF is generally more successful. This method uses two classes of particles for exploration and exploitation. As a result, it can follow the system states even in sequentially drastic changes and can converge to the system states more accurately."}, {"heading": "Conclusions", "text": "In this paper, the exponential natural particle filter has been introduced. With the proposed density function, this modification of the PF algorithm is able to efficiently converge to the true state. In this approach, a state transitional probability with the use of natural gradient learning is proposed which balances exploration and exploitation more robustly. PF with the proposed density function does not need a large number of particles and it retains particles\u2019 diversity in a course of run.\nExperiments were designed in terms of comparing the solution accuracy and investigating the effect of increasing the number of particles and partitioning parameter on the performance of xNPF. The results clearly show the superiority of the xNPF over other novel methods. This method shows good experimental results due to using the proposed density function. It is possible to use an asymmetrical distribution as the proposal density function to consider the direction of the system states changes in the next states predictions."}], "references": [{"title": "An exploration of the equivalent weights particle filter", "author": ["M. Ades", "P. Van Leeuwen"], "venue": "Quarterly Journal of the Royal Meteorological Society 139(672): 820-840.", "citeRegEx": "Ades and Leeuwen,? 2013", "shortCiteRegEx": "Ades and Leeuwen", "year": 2013}, {"title": "The equivalent-weights particle filter in a high-dimensional system", "author": ["M. Ades", "P. Van Leeuwen"], "venue": "Quarterly Journal of the Royal Meteorological Society 141(687): 484-503.", "citeRegEx": "Ades and Leeuwen,? 2015", "shortCiteRegEx": "Ades and Leeuwen", "year": 2015}, {"title": "A tutorial on particle filters for online nonlinear/non-Gaussian Bayesian tracking", "author": ["M.S. Arulampalam", "S. Maskell", "N. Gordon", "T. Clapp"], "venue": "IEEE Transactions on Signal Processing 50(2): 174-188.", "citeRegEx": "Arulampalam et al\\.,? 2002", "shortCiteRegEx": "Arulampalam et al\\.", "year": 2002}, {"title": "Real-time implementation of mixture particle filter for 3D RISS/GPS integrated navigation solution", "author": ["M.M. Atia", "J. Georgy", "M. Korenberg", "A. Noureldin"], "venue": "Electronics letters 46(15): 1083-1084.", "citeRegEx": "Atia et al\\.,? 2010", "shortCiteRegEx": "Atia et al\\.", "year": 2010}, {"title": "Robust online multiobject tracking with data association and track management", "author": ["S.-H. Bae", "K. Yoon"], "venue": "IEEE Transactions on Image Processing 23(7): 2820-2833.", "citeRegEx": "Bae and Yoon,? 2014", "shortCiteRegEx": "Bae and Yoon", "year": 2014}, {"title": "Particle swarm optimization-based particle filter for cooperative localization in wireless networks, 1-6", "author": ["L. Bin", "N. Wu", "H. Wang", "D. Shi", "W. Yuan", "J. Kuang"], "venue": "International Conference on Wireless Communications & Signal Processing (WCSP), Hangzhou.", "citeRegEx": "Bin et al\\.,? 2013", "shortCiteRegEx": "Bin et al\\.", "year": 2013}, {"title": "Biological invasion\u2013inspired migration in distributed evolutionary algorithms", "author": ["I. De Falco", "A. Della Cioppa", "D. Maisto", "U. Scafuri", "E. Tarantino"], "venue": "Information Sciences 207: 50-", "citeRegEx": "Falco et al\\.,? 2012", "shortCiteRegEx": "Falco et al\\.", "year": 2012}, {"title": "Iterative particle filter for Visual tracking", "author": ["Z. Fan", "H. Ji", "Y. Zhang"], "venue": "Signal Processing: Image Communication 36: 140-153.", "citeRegEx": "Fan et al\\.,? 2015", "shortCiteRegEx": "Fan et al\\.", "year": 2015}, {"title": "Actuator fault robust estimation and fault-tolerant control for a class of nonlinear descriptor systems", "author": ["Z. Gao", "S.X. Ding"], "venue": "Automatica 43(5): 912-920.", "citeRegEx": "Gao and Ding,? 2007", "shortCiteRegEx": "Gao and Ding", "year": 2007}, {"title": "State/noise estimator for descriptor systems with application to sensor fault diagnosis", "author": ["Z. Gao", "D.W. Ho"], "venue": "IEEE Transactions on Signal Processing 54(4): 1316-1326.", "citeRegEx": "Gao and Ho,? 2006", "shortCiteRegEx": "Gao and Ho", "year": 2006}, {"title": "Exponential natural evolution strategies, 393-400", "author": ["T. Glasmachers", "T. Schaul", "S. Yi", "D. Wierstra", "r. Schmidhuber"], "venue": "In The 12th annual conference on Genetic and evolutionary computation,", "citeRegEx": "Glasmachers et al\\.,? \\Q2010\\E", "shortCiteRegEx": "Glasmachers et al\\.", "year": 2010}, {"title": "Bernoulli particle/box-particle filters for detection and tracking in the presence of triple measurement uncertainty", "author": ["A. Gning", "B. Ristic", "L. Mihaylova"], "venue": "IEEE Transactions on Signal Processing 60(5): 2138-2151.", "citeRegEx": "Gning et al\\.,? 2012", "shortCiteRegEx": "Gning et al\\.", "year": 2012}, {"title": "An introduction to box particle filtering", "author": ["A. Gning", "B. Ristic", "L. Mihaylova", "F. Abdallah"], "venue": "IEEE Signal Processing,", "citeRegEx": "Gning et al\\.,? \\Q2013\\E", "shortCiteRegEx": "Gning et al\\.", "year": 2013}, {"title": "Beyond the kalman filter: Particle filters for tracking applications", "author": ["N. Gordon", "B. Ristic", "S. Arulampalam"], "venue": "Artech House, London.", "citeRegEx": "Gordon et al\\.,? 2004", "shortCiteRegEx": "Gordon et al\\.", "year": 2004}, {"title": "Novel approach to nonlinear/non-Gaussian Bayesian state estimation, 107-113", "author": ["N.J. Gordon", "D.J. Salmond", "A.F. Smith"], "venue": "IEE Proceedings F (Radar and Signal Processing).", "citeRegEx": "Gordon et al\\.,? 1993", "shortCiteRegEx": "Gordon et al\\.", "year": 1993}, {"title": "Online bayesian time-varying parameter estimation of hiv-1 time-series, 12941299", "author": ["A. Hartmann", "S. Vinga", "J.M. Lemos"], "venue": "16th IFAC Symposium on System Identification, Belgium.", "citeRegEx": "Hartmann et al\\.,? 2012", "shortCiteRegEx": "Hartmann et al\\.", "year": 2012}, {"title": "Laser range finder model for autonomous navigation of a robot in a maize field using a particle filter", "author": ["S.A. Hiremath", "G.W. Van Der Heijden", "F.K. Van Evert", "A. Stein", "C.J. Ter Braak"], "venue": "Computers and Electronics in Agriculture 100: 41-50.", "citeRegEx": "Hiremath et al\\.,? 2014", "shortCiteRegEx": "Hiremath et al\\.", "year": 2014}, {"title": "Non-dominated sorting genetic filter a multi-objective evolutionary particle filter, 1-6", "author": ["S.M. Kalami Heris", "H. Khaloozadeh"], "venue": "Iranian Conference on Intelligent Systems (ICIS), Bam.", "citeRegEx": "Heris and Khaloozadeh,? 2014", "shortCiteRegEx": "Heris and Khaloozadeh", "year": 2014}, {"title": "Gaussian particle filtering", "author": ["J.H. Kotecha", "P.M. Djuri\u0107"], "venue": "IEEE Transactions on Signal Processing 51(10): 2592-2601.", "citeRegEx": "Kotecha and Djuri\u0107,? 2003", "shortCiteRegEx": "Kotecha and Djuri\u0107", "year": 2003}, {"title": "Lane marking based vehicle localization using particle filter and multikernel estimation, 601-606", "author": ["W. Lu", "E. Seignez", "F.S. Rodriguez", "R. Reynaud."], "venue": "13th International Conference on Control Automation Robotics & Vision (ICARCV), Singapore.", "citeRegEx": "Lu et al\\.,? 2014", "shortCiteRegEx": "Lu et al\\.", "year": 2014}, {"title": "Overview of Bayesian sequential Monte Carlo methods for group and extended object tracking", "author": ["L. Mihaylova", "A. Y Carmi", "F. Septier", "Amadou Gning."], "venue": "Digital Signal Processing 25: 1-16.", "citeRegEx": "Mihaylova et al\\.,? 2014", "shortCiteRegEx": "Mihaylova et al\\.", "year": 2014}, {"title": "Particle filter implementation of the multi-Bernoulli filter for superpositional sensors, 368-371", "author": ["S. Nannuru", "M. Coates"], "venue": null, "citeRegEx": "Nannuru and Coates,? \\Q2013\\E", "shortCiteRegEx": "Nannuru and Coates", "year": 2013}, {"title": "A new evolutionary particle filter for the prevention of sample impoverishment", "author": ["S. Park", "J.P. Hwang", "E. Kim", "H.-J. Kang"], "venue": "IEEE Transactions on Evolutionary Computation 13(4): 801-809.", "citeRegEx": "Park et al\\.,? 2009", "shortCiteRegEx": "Park et al\\.", "year": 2009}, {"title": "Modelling viral and immune system dynamics", "author": ["A.S. Perelson"], "venue": "Nat Rev Immunol 2(1): 28-36.", "citeRegEx": "Perelson,? 2002", "shortCiteRegEx": "Perelson", "year": 2002}, {"title": "A superparticle filter for lane detection", "author": ["B.-S. Shin", "J. Tao", "R. Klette"], "venue": "Pattern Recognition 48(11): 3333\u20133345.", "citeRegEx": "Shin et al\\.,? 2014", "shortCiteRegEx": "Shin et al\\.", "year": 2014}, {"title": "Sequential Monte Carlo methods in practice: Springer Science & Business Media", "author": ["A. Smith", "A. Doucet", "N. de Freitas", "N. Gordon"], "venue": null, "citeRegEx": "Smith et al\\.,? \\Q2013\\E", "shortCiteRegEx": "Smith et al\\.", "year": 2013}, {"title": "Genetic programming extension to APF-based monocular human body pose estimation", "author": ["P. Szczuko"], "venue": "Multimedia Tools and Applications 68(1): 177-192.", "citeRegEx": "Szczuko,? 2014", "shortCiteRegEx": "Szczuko", "year": 2014}, {"title": "Efficient Particle Filter Localization Algorithm in Dense Passive RFID Tag Environment", "author": ["P. Yang", "W. Wu."], "venue": "IEEE Transactions on Industrial Electronics 61(10): 5641-5651.", "citeRegEx": "Yang and Wu.,? 2014", "shortCiteRegEx": "Yang and Wu.", "year": 2014}, {"title": "Intelligent particle filter and its application on fault detection of nonlinear system", "author": ["S. Yin", "X. Zhu"], "venue": "IEEE Transactions on Industrial Electronics 62(6): 3852 - 3861.", "citeRegEx": "Yin and Zhu,? 2015", "shortCiteRegEx": "Yin and Zhu", "year": 2015}, {"title": "Object tracking from image sequences using adaptive models in fuzzy particle filter", "author": ["C. Yoon", "M. Cheon", "M. Park"], "venue": "Information Sciences 253: 74-99.", "citeRegEx": "Yoon et al\\.,? 2013", "shortCiteRegEx": "Yoon et al\\.", "year": 2013}, {"title": "Multi-target tracking by learning local-to-global trajectory models", "author": ["S. Zhang", "J. A Wang", "Z. A Wang", "Y. A Gong", "Y. Liu."], "venue": "Pattern Recognition 48(2): 580-590.", "citeRegEx": "Zhang et al\\.,? 2015", "shortCiteRegEx": "Zhang et al\\.", "year": 2015}, {"title": "Object tracking based on particle filter with discriminative features", "author": ["Y. Zhao", "H. A Pei."], "venue": "Journal of Control Theory and Applications 11(1): 42-53.", "citeRegEx": "Zhao and Pei.,? 2013", "shortCiteRegEx": "Zhao and Pei.", "year": 2013}, {"title": "Particle filter with multimode sampling strategy", "author": ["J. Zuo", "Y. Liang", "Y. Zhang", "Q. Pan"], "venue": "Signal Processing 93(11): 31923201.", "citeRegEx": "Zuo et al\\.,? 2013", "shortCiteRegEx": "Zuo et al\\.", "year": 2013}], "referenceMentions": [{"referenceID": 28, "context": "The states of a system provide a complete representation of the system\u2019s internal condition and status (Yin and Zhu 2015); hence obtaining the system states is very important for many problems such as process monitoring (Gao and Ding 2007; Gao and Ho 2006), localization (Lu 2014; Yang 2014), robot navigation (Atia et al.", "startOffset": 103, "endOffset": 121}, {"referenceID": 8, "context": "The states of a system provide a complete representation of the system\u2019s internal condition and status (Yin and Zhu 2015); hence obtaining the system states is very important for many problems such as process monitoring (Gao and Ding 2007; Gao and Ho 2006), localization (Lu 2014; Yang 2014), robot navigation (Atia et al.", "startOffset": 220, "endOffset": 256}, {"referenceID": 9, "context": "The states of a system provide a complete representation of the system\u2019s internal condition and status (Yin and Zhu 2015); hence obtaining the system states is very important for many problems such as process monitoring (Gao and Ding 2007; Gao and Ho 2006), localization (Lu 2014; Yang 2014), robot navigation (Atia et al.", "startOffset": 220, "endOffset": 256}, {"referenceID": 3, "context": "The states of a system provide a complete representation of the system\u2019s internal condition and status (Yin and Zhu 2015); hence obtaining the system states is very important for many problems such as process monitoring (Gao and Ding 2007; Gao and Ho 2006), localization (Lu 2014; Yang 2014), robot navigation (Atia et al. 2010; Hiremath et al. 2014), single or multi object tracking (Bae and Yoon 2014; Fan, Ji, and Zhang 2015; Mihaylova 2014; Nannuru and Coates 2013; Zhang 2015; Zhao 2013), lane detection (Shin, Tao, and Klette 2014) and so on.", "startOffset": 310, "endOffset": 350}, {"referenceID": 16, "context": "The states of a system provide a complete representation of the system\u2019s internal condition and status (Yin and Zhu 2015); hence obtaining the system states is very important for many problems such as process monitoring (Gao and Ding 2007; Gao and Ho 2006), localization (Lu 2014; Yang 2014), robot navigation (Atia et al. 2010; Hiremath et al. 2014), single or multi object tracking (Bae and Yoon 2014; Fan, Ji, and Zhang 2015; Mihaylova 2014; Nannuru and Coates 2013; Zhang 2015; Zhao 2013), lane detection (Shin, Tao, and Klette 2014) and so on.", "startOffset": 310, "endOffset": 350}, {"referenceID": 4, "context": "2014), single or multi object tracking (Bae and Yoon 2014; Fan, Ji, and Zhang 2015; Mihaylova 2014; Nannuru and Coates 2013; Zhang 2015; Zhao 2013), lane detection (Shin, Tao, and Klette 2014) and so on.", "startOffset": 39, "endOffset": 147}, {"referenceID": 21, "context": "2014), single or multi object tracking (Bae and Yoon 2014; Fan, Ji, and Zhang 2015; Mihaylova 2014; Nannuru and Coates 2013; Zhang 2015; Zhao 2013), lane detection (Shin, Tao, and Klette 2014) and so on.", "startOffset": 39, "endOffset": 147}, {"referenceID": 25, "context": "(Smith et al. 2013) shows the mentioned iteration of the PF.", "startOffset": 0, "endOffset": 19}, {"referenceID": 7, "context": "The PF algorithm performs relatively better than other nonlinear filtering methods; but it still face some problems: (a) the importance density functions selection (Fan et al. 2015; Zuo et al. 2013).", "startOffset": 164, "endOffset": 198}, {"referenceID": 32, "context": "The PF algorithm performs relatively better than other nonlinear filtering methods; but it still face some problems: (a) the importance density functions selection (Fan et al. 2015; Zuo et al. 2013).", "startOffset": 164, "endOffset": 198}, {"referenceID": 7, "context": "(b) the loss of particle diversity (Fan et al. 2015).", "startOffset": 35, "endOffset": 52}, {"referenceID": 26, "context": "In (Szczuko 2014), a Hybrid genetic-APF method is presented in which a genetic algorithm is combined with annealed PF for human body pose estimation.", "startOffset": 3, "endOffset": 17}, {"referenceID": 22, "context": "In (Park et al. 2009; Yin and Zhu 2015), the genetic operators are designed to further improve the particle diversity while avoiding the premature convergence, since the misleading state estimating problem in general PF is mainly caused by the poverty of particle diversity.", "startOffset": 3, "endOffset": 39}, {"referenceID": 28, "context": "In (Park et al. 2009; Yin and Zhu 2015), the genetic operators are designed to further improve the particle diversity while avoiding the premature convergence, since the misleading state estimating problem in general PF is mainly caused by the poverty of particle diversity.", "startOffset": 3, "endOffset": 39}, {"referenceID": 7, "context": "proposed an Iterative PF (IPF) which converges to true target state more closely by sampling the particles iteratively with the search scope contracted (Fan et al. 2015).", "startOffset": 152, "endOffset": 169}, {"referenceID": 12, "context": "To overcome this problem, BoxPF (Gning, Ristic, and Mihaylova 2012; Gning et al. 2013) addresses the concept of box particle that can make sampling from coarse to fine, improving the sampling efficiency.", "startOffset": 32, "endOffset": 86}, {"referenceID": 25, "context": "(Smith et al. 2013) (4)", "startOffset": 0, "endOffset": 19}, {"referenceID": 2, "context": "Finally, in the last decades many famous modifications have been introduced in the PF, such as the Bootstrap Particle Filter (BPF), the Auxiliary Particle Filter (APF), the Regularized Particle Filter (RPF), the Unscented Particle Filter (UPF), and the Gaussian Particle Filter (GPF)(Arulampalam et al. 2002; N. Gordon, Ristic, and Arulampalam 2004; N. J. Gordon et al. 1993; Kotecha and Djuri\u0107 2003).", "startOffset": 283, "endOffset": 400}, {"referenceID": 18, "context": "Finally, in the last decades many famous modifications have been introduced in the PF, such as the Bootstrap Particle Filter (BPF), the Auxiliary Particle Filter (APF), the Regularized Particle Filter (RPF), the Unscented Particle Filter (UPF), and the Gaussian Particle Filter (GPF)(Arulampalam et al. 2002; N. Gordon, Ristic, and Arulampalam 2004; N. J. Gordon et al. 1993; Kotecha and Djuri\u0107 2003).", "startOffset": 283, "endOffset": 400}, {"referenceID": 10, "context": "To propose the state transition probability for class B, xNES is used which iteratively updates the probability distribution by using an estimated gradient on its distribution parameters (Glasmachers et al. 2010).", "startOffset": 187, "endOffset": 212}, {"referenceID": 15, "context": "In this paper, the numerical values for the parameters of model (11) are selected as follows (Hartmann et al. 2012): \u03b8=(368.", "startOffset": 93, "endOffset": 115}, {"referenceID": 23, "context": "die at rate \u03be per cell (Perelson 2002).", "startOffset": 23, "endOffset": 38}, {"referenceID": 26, "context": "From all strategies introduced in the previous sections, five strategies are adopted in this study for comparisons: Annealed PF (APF)(Szczuko 2014), Bootstrap PF (BPF) (N.", "startOffset": 133, "endOffset": 147}, {"referenceID": 7, "context": "1993), iterative PF (IPF) (Fan et al. 2015), equivalent weight PF (Ades and Van Leeuwen 2015), and intelligent PF (Yin and Zhu 2015).", "startOffset": 26, "endOffset": 43}, {"referenceID": 28, "context": "2015), equivalent weight PF (Ades and Van Leeuwen 2015), and intelligent PF (Yin and Zhu 2015).", "startOffset": 76, "endOffset": 94}], "year": 2015, "abstractText": "Particle Filter (PF) is the most widely used Bayesian sequential estimation method for obtaining hidden states of nonlinear dynamic systems. However, it still suffers from certain problems such as the loss of particle diversity, the need for large number of particles, and the costly selection of the importance density functions. In this paper, a novel PF called Exponential Natural Particle Filter (xNPF) is introduced to solve the above problems. In this approach, a state transitional probability with the use of natural gradient learning is proposed which balances exploration and exploitation more robustly. PF with the proposed density function does not need a large number of particles and it retains particles\u2019 diversity in a course of run. The proposed system is evaluated in a time-varying parameter estimation problem on a dynamic model of HIV virus immune response. This model is used to show the performance of the xNPF in comparison with several state of the art particle filter variants such as Annealed PF, Bootstrap PF, iterative PF, equivalent weight PF, and intelligent PF. The results show that xNPF converges much closer to the true target states than the other methods.", "creator": "Microsoft\u00ae Word 2013"}}}