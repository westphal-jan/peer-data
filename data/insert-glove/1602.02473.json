{"id": "1602.02473", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "8-Feb-2016", "title": "Particle Swarm Optimized Power Consumption of Trilateration", "abstract": "wometco Trilateration - based localization (valadares TBL) has mollified become rageh a jozias corner stone of luxeuil modern yako technology. This study 10-yards formulates the browbeat concern fairey on segara how wireless shortz sensor opacity networks 2410 can take advantage vocalion of galet the computational intelligent techniques vankleek using both taunsa single - intra-school and seraikis multi - objective centricity particle ,620 swarm optimization (peskowitz PSO) with an catamount overall aim hillgruber of concurrently minimizing the required time for devoutly localization, itv1 minimizing energy mettur consumed during schwantner localization, 893-8801 and maximizing the number wounded of nodes 1985-86 fully d'ille localized lock-down through the adjustment bajamal of gnomon wireless sensor hartnell transmission bolter ranges umeh while zis using j\u012bn TBL lemonnier process. A parameter - dawod study 16.35 of bossem the applied PSO zipser variants yasay is chf performed, dignam leading to results 55-gallon that droz show chouteau algorithmic improvements neutrality of leidseplein up to 32% excel in arm-based the litterateur evaluated kr\u00f3lewska objectives.", "histories": [["v1", "Mon, 8 Feb 2016 06:27:20 GMT  (5140kb)", "http://arxiv.org/abs/1602.02473v1", "19 Pages, 13 Figures, 10 Tables, Journal"]], "COMMENTS": "19 Pages, 13 Figures, 10 Tables, Journal", "reviews": [], "SUBJECTS": "cs.NI cs.AI", "authors": ["hussein s al-olimat", "robert c green ii", "mansoor alam", "vijay devabhaktuni", "wei cheng"], "accepted": false, "id": "1602.02473"}, "pdf": {"name": "1602.02473.pdf", "metadata": {"source": "CRF", "title": "PARTICLE SWARM OPTIMIZED POWER CONSUMPTION OF TRILATERATION", "authors": ["Hussein S. Al-Olimat", "Robert C. Green II", "Mansoor Alam", "Vijay Devabhaktuni", "Wei Cheng"], "emails": [], "sections": [{"heading": null, "text": "DOI:10.5121/ijfcst.2014.4401 1\nTrilateration-based localization (TBL) and Multilateration-based localization (MBL) techniques are among the well-known and most used methods for localization. In this study, the various performance aspects of the TBL algorithm are examined through the application of single and multi-objective variants of particle swarm optimization (PSO). We implemented three version of PSO in this study to allow nodes to vary the transmission power level when broadcasting messages during localization. Trade-offs between multiple objectives \u2014 the number of transmitted messages, number of localized nodes, power consumption and the time needed to localize as many nodes as possible \u2014 are studied. However, for the sake of demonstrating the applicability of our methods, ranging and location estimations were both assumed as being correctly calculated with minimal errors, which means that this study do not really discuss the localization accuracy or signal noises. Instead, the methods of this study try to allow WSNs to reduce the overall power consumption of the localization process without affecting the localization time or localizability (i.e. the number of localized nodes). So the meta-heuristic methods implemented in this paper allow one to find optimal and balanced solutions in terms of energy consumption by minimizing the number of messages sent and localization time while trying not to negatively affect the localizability. The paper present the results of three implemented versions of the particle swarm optimization and clearly show the performance of them while trying to optimize the WSN work. Additionally, it provides a complete parameter study that was formulated to enhance the performance of the multi-objective PSO (MOPSO). The key novelty of this paper is the optimization of the power consumption of the whole network without the need to cluster or build any small sensor islands such as in [9] or in [5]. This study takes advantage of the functionalities of toady\u2019s WSNs nodes to enhance the performance of the whole network, the ZigBee technology of transceivers in wireless nodes made that possible by allowing us to use multiple transmission power levels, where the different variants of PSO were used to programmically change the transmission level after the evaluation of the designed fitness functions. The next 4 sections contain the necessary background regarding WSNs, localization, power consumption, and PSO algorithm. Additionally, a complete parameter study and set of evaluations are also provided to examine the designed methods."}, {"heading": "2. BACKGROUND", "text": "For this study, it is important to have an understanding of the basic form and function of WSNs, including potential issues regarding power consumption, as well as a clear understanding of the applied metaheuristic algorithm \u2014 PSO."}, {"heading": "2.1. Power Consumption in WSNs", "text": "Wireless sensor nodes often use solar cells to extend the batteries life in order to allow nodes to run for longer times. Other methods of extending battery life are the intelligent slowing of power consumption through a reduction in listening time [10], increasing the sleep time [11], or modifying sampling rates [12]. Another method of accomplishing power reduction is the use of multiple transmission ranges as is seen in the well-known CC2420 ZigBee RF transceiver [13, 14]. CC2420 allow nodes to transmit messages using eight discrete output power levels, as discussed in section 28 of the transceiver data sheet [15].\nPrevious studies took the advantage of such functionalities and tried to optimize the power consumption by varying the output power as in [16], where the output power of nodes were varied based on the distance between the communicated nodes after sharing the information using RTS/CTS (Request to Send / Clear to Send) mechanism. Additionally, in [17] a localization protocol was proposed to optimize the power consumption after clustering nodes based on the used power levels. In most of the simulations and studies done in literature, they tried to change the power level sequentially while observing the effect of using different power levels, or assign power levels to nodes randomly. The two excellent previous references inspired us to use computational intelligence to vary the output power levels in order to find more stable and balanced solutions while actually being able to optimize the power consumption of WSNs.\nTable 6.1 of the CC2420 data sheet list the five different modes in which the transceiver consumes different amount of power, the five modes are: Voltage regulator off (OFF); Power Down mode (PD); Idle mode (IDLE); Receive mode; and finally, the Transmit mode. In this study, however, we try to minimize the transmit power through minimizing the number of transmitted messages and minimize the average output power levels used by nodes. Depending on the localization protocol, all of the other modes including the transmit mode will be affected by the steps and behaviour of the localization procedure. For example, longer localization time means more power consumption due to the power consumed while in the idle mode. In order to make our methods as much protocol independent as we can and allow the methods to be used with any localization protocol, the methods will only optimized the Transmit mode of transceivers.\nThe Atmel AT86RF230 transceiver, as the CC2420, allow varying the output power not only between 8 levels, but between 16 discrete levels ranging from 3 dBm to 17.2 dBm [18]. Having more output power levels allow us to have minimum length of intervals than what the CC2420 can provide. In order to observe the effect of having multi output power levels, we designed three different PSO versions. The first two of them are binary PSO, single and multi-objective, where they were designed to vary the output power between three discrete levels only. On the other hand, the continuous multi-objective version was implemented to show the extreme case where we have infinite power levels; even though it is not possible by modern transceivers, in order to show how much optimization can actually be achieved having more power levels in hand. Next, we will discuss how we calculated the power consumption while nodes are in Transmit mode and using the discrete or the continuous output power levels."}, {"heading": "2.1.1. Discrete Power Ranges", "text": "In this particular method transceivers were assumed to have three different power levels and wave length of each power level has been calculated. The allowable ranges were calculated based on work done by [14] as in (1) and (2), where is the range in meters, is the sender transmit power in dBm, is the fade margin in dB, is the receiver sensitivity in dBm, is the signal frequency in MHz, and is the pass-loss exponent.\nThree power levels were chosen to represent the minimum, medium, and maximum possible output power levels. The first power level transmit with -3 dBm ( ) transmission power.\nThe second power level as the medium range power level with 1 dBm ( ), and the third power level as the maximum power level with 5 dBm ( ). The rest of the variables in the previous equations are taken from [14] where dBm, dBm, MHz and . The three used power levels allowed transmission to a maximum range of: ; ; and meters, for the maximum, medium and minimum power levels, respectively. Transmission ranges are assumed to be perfect circles where the sender node is the center of the circle and the calculated distance is the radius of the circle. Also, knowing the transmission distance ( ) allows the determination of which nodes can communicate directly through a 1-hop connection."}, {"heading": "2.1.2. Continuous Transmission Ranges", "text": "In this method it is assumed that the maximum range a ZigBee transceiver can reach is 132 meters and the minimum is 60 meters. As in the discrete method before, the energy consumption is calculated based on [14], but in this method the transmission range varies continually, as in (3) and (4), rather than the power range before. Finally, (4) is used to convert the power consumption\nfrom to ."}, {"heading": "2.2. WSNs and Localization", "text": "A typical WSN consists of sensor nodes scattered among a field of meters. Each node has a transmission range of and may or may not be equipped with various sensors such as temperature or humidity sensors, or radios such as GPS. Each node also holds a state of being localized, i.e. aware of its own position in the global or local positioning system, or unlocalized, i.e. not aware of its own position in space. Each node in the WSN can eventually be localized with the help of three already localized neighbor nodes that a node can communicate with over 1- hop connections (thoroughly discussed and proved in [19]). Two nodes are said to have a 1-hop connection if the distance between them is less than or equal to the transmission range, . The localization procedure is the step that precedes actual network transmissions which, in the long run, will help in data forwarding and routing procedures between nodes in the network [20]. RSSI is widely used in localization protocols for ranging and position estimation, therefore, a study by Chen and Terzis [21] was made to calibrate the raw RSSI values from transceivers in order to allow better distance estimations when using RSSI values of the received messages. The study took advantage of the multiple discrete output power levels of the transceivers to send messages between nodes which put the applicability of using multiple power levels and the RSSI under the test. On the other hand, according to a study by [10], the increase of the output power do not necessarily increase the distance a message can reach. But, a recent study conducted by [22] showed stability in the RSSI values and reliable range measurements while using external antennas on Z1 motes. In this study, the TBL method is used to allow the unlocalized nodes (known as: blind nodes) to localize themselves based on the difference in distance between them and the already localized\nneighbor nodes [23]. As an example of this process, Fig. 1 shows two steps of a simple localization process. The process starts by flooding information from the already localized nodes,\nin this case , and where all nodes transmit using 132 meters transmission range which consumes 3.14 per message sent, as calculated using (3) and (4). Step 1 of this localization process ends after flooding from the three nodes, where each of them broadcast one message that includes its global position within the plane. The distance between all nodes can then be calculated from the RSS of the received messages. In this process and as a kind of relaxation to the problem, the events of broadcasting from senders and receiving by receivers were assumed to cost one unit of time, ignoring, for example, the possibility of collisions or retransmissions. Instead, each unit of time represent a step in the localization procedure where the units of time can later be mapped to actual localization scenarios using different protocols. The Transmit mode power consumption of the three nodes after step-1 is: , the complete details are listed in Table 1. By the end of Step-1, the broadcast messages are able to reach the three non-localized nodes, but only two of them was be able to localized themselves after receiving three messages. Nodes and are now considered localized after estimating their positions and, as all localized nodes, will contribute in step-2 of the localization process to help the other blind nodes. Meanwhile, node will keep waiting to receive two other messages to be able to localize itself.\nIn Step-2 of this localization process, nodes and broadcast, but none of their messages reach node which terminates the localization process since no new blind nodes were able to localize themselves. Nodes , and are now finished participating in the localization process and will not broadcast again. The process will terminate after two time steps where, in this case, the nodes consumed 9.42 in Step-1 and 6.28 in Step-2 ( nodes = ), leading to a cumulative power consumption of 15.7 . It is clear that node is very close to both and , which are the only blind nodes it can reach using the maximum transmission range, meaning that these nodes can minimize their power consumption by using a different, yet smaller, output power levels. The second method shown in Fig. 2 will allow each node to broadcast using a different power range, allowing each node to\nvary the reach distance of their messages. As listed in Tables 3 and 4, of the two steps of the localization, nodes and transmit using 132, 63.2, 91 and 83.4 meter transmission ranges respectively. Here, the transmission ranges were chosen randomly for the sake of demonstrating the multi-power level method, later, PSO will be the one choosing the different power levels leading to different transmission ranges. The localization process, in this case, was not able to finish after two units of time as the previous example. Instead, it needs an extra one unit of time after to allow the new localized node in Step2 ( ) to broadcast. Assuming that node broadcasts using the maximum power range, the overall power consumption would be: Step-1 power consumption (3.14 + 0.5 + 1.24) ; Step 2 power consumption (1 ); and Step 3 power consumption (3.14 ), which is equal to 9.02 . Thus, the main distinction between the outcomes of the two methods is the localization time and the power consumption. The second method was able to minimize the power consumption by 6.68 while extending the localization time by adding an additional one unit of time or an extra step.\nFrom the two examples it can be clearly seen that there is a trade-off between consuming more power while minimizing localization time and consuming less power but maximizing the localization time. This demonstrates the need to find better solutions by balancing the competing goals of maximizing the number of localized nodes (i.e. increase localizability), minimizing the overall power consumption (i.e. minimizing the output power levels and number of broadcast messages), and minimizing the localization time (i.e. minimizing localization steps). Consequently, the three PSO methods were designed to solve such problem and intelligently find better solutions."}, {"heading": "2.3. Particle Swarm Optimization (PSO)", "text": "PSO is a population-based search algorithm inspired by bird flocking and fish schooling, where each particle learns from its neighbors and itself during the time it travels in space. The original\nsingle objective PSO (SOPSO) was first introduced by Kennedy and Eberhart in 1995 and operates over a continuous space [24]. Later, in 1997 a discrete, binary version of the algorithm was presented also by Kennedy and Eberhart to operate on discrete binary variables [25]. PSO was extended by Moore et al., as the first recorded attempt, to use PSO in a multi-objective problem (MOP) [26]. Later in 2002 multi-objective PSO (MOPSO) was introduced by [27] as an effective algorithm to solve MOPs. All versions of PSO algorithm start by creating a number of particles to form a swarm that travels in the problem space searching for an optimum solution. An objective function should be defined to examine every solution found by each particle throughout the traveling time. A particle in this method is considered as a position in D-dimensional space, where each element can take a continuous value between a fixed upper and lower bounds. Additionally, each particle has a Ddimensional velocity, where each element also can take a bounded continuous value. Alternately, the elements of the positions matrix of the binary PSO can take the binary value of 0 or 1, where the value of each element of the velocity matrix is in the range [0, 1]. The individuals in PSO are a group of particles that move through a search space with a given velocity. At each iteration the velocity and position of each particle is stochastically updated by combining the particle\u2019s current solution, the particle\u2019s personal best solution or , and the global best solution or over all particles (in MOPSO the procedure of choosing the best global is different, see the differences between SOPSO and MOPSO in the next pages). The required mathematics operating over a continuous space is listed in (5) to (9) where is the inertial constant, and represent cognitive and social constants that are usually , and and are random numbers. and are the minimum and maximum transmission ranges respectively, and is a random number between 0 and . (5) to (7) are used to update the velocity of the component of particle , where (8) and (9) are used to update the position of that same component.\nPrevious equations indicate that the velocity of neighbors and the current velocity of the particle itself will contribute in deciding the next position of the particle. In order for a particle to keep up with the other particles during the search of a solution, each particle adapts to the velocity of the swarm as a whole by learning from itself and its neighbor particles. Additionally, to improve the\nperformance of the SOPSO, the inertia weight ( ) in (5) can be modified dynamically (instead of a constant value) using mechanisms such as the simulated annealing to increase the probability of finding a near-optimal solution in fewer iterations and computing time. Multi-objective Problems (MOPs) are known to have many contradictory objectives where enhancing the result of one objective will have a negative impact on the other objectives involved. MOPSO attempts to effectively find a solution or a set of solutions that ensure a balance between all the involved objectives as is thoroughly discussed in [28-36]. The main differences between the SOPSO and the MOPSO algorithms are:\n1. MOPSO does not have a single global best solution, the of the SOPSO in (5), that all particles learn from when they update their velocities in each iteration. Instead, MOPSO will have an archive of particles called leaders, where each leader is a potential solution of the problem. So instead of having only one global best solution the MOPSO will keep track of different solutions and use them randomly to lead other particles to update their velocities in each iteration using (5); 2. Dominance comparators are also implemented inside the MOPSO to help in finding a set of optimal solutions [37]; 3. To avoid filling up the leaders archive, a crowding distance based on the non-dominated sorting genetic algorithm-II (NSGA-II) is used to decide which particles must remain in the archive [38, 39]; and 4. A mutation operator is applied to a portion of the swarm to improve the exploration and search ability and to avoid premature convergence [34, 35, 37]. Using the mutation method allowed us to give up using a simulated annealing method used to enhance the SOPSO performance by dynamically varying the inertia weight value."}, {"heading": "3. PROPOSED APPROACH", "text": "The method proposed in this study involves the use of single- and multi-objective PSO to choose the appropriate, discrete or continuous output power levels for each wireless sensor node, in order to optimize various single or combinations of objectives including localization time, messages sent during localization, and power consumed. Appropriately, the remainder of this section will examine the use of the previously discussed three discrete power ranges and the continuous transmission ranges in the variants of the designed PSO."}, {"heading": "3.1. PSO Formulation", "text": "In order to implement PSO, multiple objective functions as well as a problem specific representation are defined in the following sections. Three variants of PSO are presented including 1) A binary single objective PSO, 2) A binary multi-objective PSO, and 3) A continuous multi-objective PSO."}, {"heading": "3.1.1. Objective Functions", "text": "As previously mentioned, the SOPSO and MOPSO algorithms are used in order to intelligently adjust the various discrete power ranges or the continuous transmission ranges of each sensor node. Accordingly, a representation consisting of N dimensions is used in order to represent each sensor that is deployed in the field. Furthermore, the objective functions for messages sent, time required for localization, power consumption, and number of nodes localized are calculated as follows:\n1. Messages sent: Depending on the localization procedure and communication mechanism between nodes, the number of messages sent back and forth between nodes will vary. However, in this study we assume that each already localized node will broadcast once in order to help other non-localized nodes achieve localization. Thus, the number of sent messages depends on the number of localized nodes. 2. Time required: In the proposed method, one unit of time is equivalent to one step in which sender nodes broadcast their locations and receivers receive the information. The step ends by running the location estimation using TBL method for each blind node that receives at least three messages from three different localized nodes. The localization procedure is going to terminate when no any new blind node was able to localize itself by the end of each step. 3. Power consumption: The variance in this objective mainly comes from the use of discrete and continuous transmission ranges, leading to various levels of power consumption. The power consumption is measured based on the power level or the transmission range each node uses to broadcast its message. Accordingly, the power consumption is the sum of each node\u2019s power consumption as chosen by PSO.\n4. Number of nodes: Choosing which power range a node will use to transmit messages or the transmission range of each node plays a significant role in the number of localized nodes. Through use of this objective, the proposed method maximizes the number of nodes capable of localizing using the least amount of consumed power, which means the least average transmission ranges of all nodes."}, {"heading": "3.1.2. Binary PSO Representation", "text": "In all versions of PSO, each particle represents a potential solution of the localization problem. The variant of binary PSO (the single and multi-objective implementations) used in this study creates a random positions matrix where each element in the matrix takes the value of 0 or 1. Each row of the matrix represents a single node and consists of three columns corresponding to the min, mid, and max power ranges. An example of the matrix is shown in Table 5. In this particular example, nodes 1, 2, and 3 are assigned the mid, min, and max power ranges. The velocity matrix of each particle also look like the positions matrix but with continuous values ranges between 0 and 1."}, {"heading": "3.1.3. Continuous PSO Representation", "text": "The variant of continuous MOPSO used in this study creates a random positions matrix where each element in the matrix takes a value between 60 to 132 meters (instead of a binary value) where each row of the matrix represents a single node\u2019s transmission range. An example of the matrix is shown in Table 6. In this particular example, nodes 1, 2, and 3 are assigned 83.4, 63.2 and 91.0 meters as the transmission ranges. The velocity matrix of each particle will also look like the positions matrix but with values between \u03b4, calculated by (6), and the minimum transmission range value chosen ( ), which is 60."}, {"heading": "3.2. MOPSO", "text": "As discussed previously, the problem presented in this study is a multi-objective problem (MOP) and in order to accommodate these objectives, a PSO method capable of handling MOPs was implemented in order to find the trade-off between the contradicted objectives and to find a set of optimal solutions instead of finding only a single solution. Algorithm 1 shows the pseudo-code of the two implemented MOPSO versions. The algorithm starts by initializing the swarm, in Line 2, where the positions and velocities matrices are initialized and the fitness values are calculated for all particles. In Line 3, the leaders archive is initialized from the swarm particles, but a series of checks must take place before adding a solution to the archive. A modified version of the implemented dominance and equality comparators of SMPSO [38] and OMOPSO [39] in JMetal [40] are used to make sure that no dominated solution is added to the archive. However, to calculate the crowding distances of leaders (Line 4), the exact JMetal method is used. The swarm begins traveling in the problem space to find optimal solutions between Line 5 and Line 18. In Line 8, two leaders are chosen from the archive randomly and the crowding distance comparator compares the two leaders where the higher crowding distance will be chosen to assure diversity. Line 9 and 11 update the velocities and positions of each particle using (5) and (8), respectively. In Line 12, a boundary mutation is implemented to mutate a portion of the swarm population. The flooding procedure and the localization process starts in Line 13 to measure the fitness of each particle\u2019s solution. In Line 14, the memory of the particle is updated to set the best fitness of the particle as the current fitness if it was considered as a better position by the comparators. Line 15 adds new particles to the leaders archive in the case that quality solutions are found. Finally, Line 16 does the same job as Line 4. All the initialization values of all parameters are described in the Parameter Study section."}, {"heading": "4. SIMULATIONS AND RESULTS", "text": ""}, {"heading": "4.1. Implementation", "text": "anchor or blind node, in addition to the X and Y coordinates of the anchor nodes are saved. For this study a random WSN topology file containing 240 nodes, 40 of which are anchor nodes, are scattered among a field of 1000 \u2a2f 1000 meters. In Step-3, one of the three proposed PSO versions is used.Step-4 and Step-5 is part of the fitness function where each particle\u2019s solution is examined by flooding the network and using the TBL localization method."}, {"heading": "4.2. Baseline Results", "text": "Initially, the WSN topology was examined three times using statically chosen power ranges. The networks created using these initial configurations are shown in Fig. 3 where anchor nodes are the red dots, normal nodes are the black dots, and the lines between nodes represents the 1-hop connection based on the chosen communication range. As is listed in Table 7, the first run used only minimum power ranges for all the 240 nodes (Fig. 3-a) which allowed each node to transmit to a distance up to 63.28 meters. The localization procedure consumed 20.55 mW, which is the cost of transmitting 41 messages from the 40 anchors and the only one localized node by the anchors over 480 units of time. The second run used only medium range transmission (Fig. 3-b) which allowed each node to transmit to a distance up to 91.47 meters. After flooding, 96 nodes were localized with the help of the 40 anchor nodes and the localized nodes during 1,200 units of time through 136 messages which consumed 171.21 mW. In the last run (Fig. 3-c) all 200 nodes were localized where all nodes used the maximum power range during 960 units of time. The localization procedure consumed 758.95 mW of power when using the maximum power range where each node was able to transmit to a distance up to 132.22 meters.\nFrom these baseline scenarios, it is clearly shown that using only one kind of power range may cause a large reduction in the number of localized nodes or consume excess energy to localize more nodes. The solution found by using the maximum allowed transmission is considered as the best solution in terms of the localization time and number of localized nodes. Yet, for power consumption, the solution using maximum transmission range is considered to be very poor. Note that in this baseline scenario and in the non-continuous versions of PSO the maximum allowed transmission range is 132.22 meters while in the continuous version the maximum is 132 meters."}, {"heading": "4.3. SOPSO", "text": "Driven by the baseline solutions, SOPSO was used to explore the potential methods of improving the solutions to the presented problem. Accordingly, SOPSO was applied using each objective function previously discussed. The values of the SOPSO parameters are listed in Table 8, where a version of the random inertia weight proposed by [41] was implemented to make sure that PSO will not stuck in the local optima and improve the exploration ability by using a version of the simulated annealing method.\nFig. 4 shows 50 trials of simulating the WSN topology chosen, where the objective function was to maximize the number of the localized nodes only. In this scenario, the number of non-localized nodes ranged from 0 to 10 nodes, which means that the worst solution PSO was able to find was 5% worse in terms of the number of localized nodes. However, the power consumption was also reduced in addition to increasing the number of nodes localized. Yet, since the main focus of the trials was to maximize the number of localized nodes, the total time required for localization was worse, by 50% to 225%.\nAn obvious conclusion would be that whenever the larger power ranges are used, the overall power consumption will increase. Additionally, increasing the power ranges may increase the number of localized nodes. Fig. 5 suggests that a tremendous decrease in the number of lower power ranges used will aid in decreasing the localization time, representing a clear trade-off between these two objectives."}, {"heading": "4.4. MOPSO Results", "text": ""}, {"heading": "4.4.1. Binary MOPSO", "text": "MOPSO was used to overcome the low quality of solutions found by SOPSO when minimizing the time needed for localization as well as power consumption while maximizing the number of localized nodes. The values of the MOPSO parameters are listed in Table 9, where a binary mutation method was implemented and a Fixed Inertia Weight (FIW) was chosen based on experiments discussed in the parameter study section 4.5. The method was able to find a balance between all competing objectives and give solutions that outperforms the baseline and the SOPSO methods as detailed in Fig. 6, where the results of 50 trials are shown. It was able to find a balance between all of the competing objectives and, in some cases, it outperformed the two previous methods at all levels, (i.e. localizing all nodes during the shortest time possible and with power consumption less than any other solutions found by the methods before).\nDuring the 50 trials, 115 different, yet optimal, solutions were found. Of these, 28 outperformed the baseline in terms of power consumption while maintaining the same time and number of localized nodes. The total power consumption ranged from 4% to 21% lower than the baseline measurements. In the best case, the MOPSO method improved power consumption by 29%, but was only capable of localizing 145 nodes \u2014 a clear trade-off."}, {"heading": "4.4.2. Continuous MOPSO", "text": "The main point of implementing this method was to enhance the quality of the solutions found by the binary MOPSO by using a continuous transmission range instead of 3 discrete levels. The values of the parameters used in the method are listed in Table 9, the values was chosen after a parameter study explained in Section 4.5. The method was able to find a balance between all\ncompeting objectives and give solutions that outperforms the other implementations as detailed in\nTable 10 and shown in Fig. 7.\nDuring the 50 trials, 57 different, yet optimal, solutions were found. Of these, 53% outperformed the baseline in terms of power consumption while maintaining the same time and number of localized nodes (i.e localizing all nodes in 960 units of time). The total power consumption ranged from 24% to 32% lower than the baseline solutions. Fig. 8 shows how the continuous MOPSO outperforms the binary MOPSO method in terms of the average localization time which was decreased by up to 12.29%. Finally, the average number of localized nodes was worse by up to 0.72%. An important observation to mention here is that the binary MOPSO tends to find more diverse solutions where some of solutions are of low quality, while the continuous version was able to find a set of more quality/balanced results, resulting in a lesser average number of localized nodes. The continuous MOPSO method tried to optimize the three other objectives by only making one of the objectives worse by as minimum as 0.72% which is reasonable in multiobjective problems. The best solutions found by the two methods were when localizing all the nodes in less time and less power consumption. The best binary method solution consumed 600.97 mW to localize all the nodes in the shortest time, while the continuous method was able to minimize that by around 14% when the best solution was able to localized all the nodes with the same time by consuming only 517.73 mW. This clearly shows the advantage of using continuous transmission ranges instead of discrete ones."}, {"heading": "4.5. Parameter Study", "text": "Parameter studies, in general, are concerned with tuning the values of the elements that are involved in finding a solution. PSO is no exception and as was mentioned previously, PSO has many constant parameters that affect the global and local navigation abilities which in return affect the speed and direction of the particle. This study is based on the implemented continuous MOPSO method.\nTo achieve faster convergence and performance stability when executing the algorithm, a series of experiments was run while varying the value of 6 key parameters. Each time an experiment was run, the value of only one of the parameters was changed while not changing the values of the others. Additionally, each time a value changed, the algorithm was executed 50 times and the average results were calculated. The values of each experiment were then collected to measure the behavior of the algorithm where we generally measured the quality of the solution by comparing the average values of the 4 main objectives across all experiments. The results show a clear trade-off between the competing objectives so the values of each parameter was carefully chosen based on the quality and stability of solutions. Below is a list of the parameters with the results of each experiment:\n1. Number of Particles and PSO iterations: As shown in Fig. 9, seven different combinations of the number of particles and iterations were used with the values varied from 5 to 200. Normally, we expect more improvement when increasing the value of the two parameters, and worse solutions when decreasing them. After comparing the average values of the solutions, it was found that using a swarm larger than 100 particles and running the PSO for more than 100 iterations will not improve the quality of the solutions. Additionally, using smaller swarms with lesser number of iterations negatively affected the quality of the solutions.\nThe values of the two parameters were set to 50 iterations and 50 particles due to\nthe fact that when using this combination, a better stability than the other combinations was achieved, with standard deviation measured as up to 60% better than the (5,5) experiment, for example. Also, localizability was given the priority when measuring the quality of the solution, so the greatest average of localized nodes was chosen, but without affecting the other objectives. So, for example, (50, 50) was chosen over (20, 20) for the fact that in (50, 50) more nodes were localized in the same units, but with slightly more power \u2014 a reasonable result.\n2. Minimum and Maximum transmission ranges: Transmission ranges are the most\nimportant parameter in this study as the focus was to minimize the average transmission ranges used by all nodes. ZigBee was designed to transmit data on no lower than -3 dBm which means the shortest transmission range of ZigBee is 62.68 meters and, thus, 64 was chosen as the lowest transmission power. For the maximum transmission ranges, it was found that using greater transmission ranges was able to maximize localizability, and if all nodes are localizable the algorithm is able to localize all of them a majority of the time. On the other hand, using smaller transmission ranges consume less power but gives poor results. Where In some cases the algorithm was not able to localize any node, as shown in Fig. 10.\nUsing large or small transmission ranges play a significant role in finding quality results. Generally, PSO will pick the values of the transmission ranges of each node from a continuous interval where the upper and lower bounds are the maximum and minimum ranges. We varied the upper bound from 64 to 132 meters while maintaining the same lower bound as 64 meters. Using maximum power ranges as 119-132 increased the average number of localized nodes from 412% to 418% more, i.e from 0 to as maximum as 233.9 of the 240 nodes. Obviously the time and energy consumption increased due to the fact we were able to localized more nodes. For range, values of 132 and 125 meters were found to be the best values, but 132 was chosen as the maximum transmission range because priority was given to the number of localized nodes which slightly increased the power consumption but was able to decrease the localization time and increase the number of localized nodes.\n3. Mutation operator: The boundary mutation is used to avoid premature convergence by improving the search ability of the swarm. This method was adjusted by changing the mutation percentage in addition to the value of mutation. The mutation percentage was first varied from 0 to 30% during 7 experiments as shown in Fig. 11, then the mutation value was swapped between the chosen minimum and maximum transmission as shown in Fig. 12.\npercentage the power consumption was found to be less without really affecting the number of localized nodes. However, reducing the power consumption when using the minimum transmission range increased the localization time but reduced the power consumption around 13%. We chose the minimum transmission range as the mutation value to prevent the MOPSO of using larger transmission ranges in order to minimize the power consumption as much as we can.\n4. PSO local weight ( ) and global weight ( ): The two parameters are used in (5) in updating the velocity matrix to optimize the behavior of particles. Based on a study by Eberhart and Shi [42] that compared inertia weights and constriction factors in particle swarm optimization, the values of the acceleration coefficients, and in (5), were set to 1.49445. This was found to have better influence on the performance of PSO and was thus used.\n5. Inertia weight ( ): It is one of the most important adjustable parameters in PSO. value can impact the overall performance of the algorithm in finding a potential optimal solution in less computing time. In the proposed method a fixed inertia weight (FIW) value of is used as stated in (5). It is a fixed constant that is defined before running the algorithm. The value of it was varied from 0.1 to 1 as shown in Fig. 15 and used in many studies [41-45]. was set to 0.1, instead of the other relatively good choice 0.5. The value of 0.1 was chosen for the fact that it showed more stable results (up to 21.5% less standard deviation than the 0.5 level). Additionally, a value of 0.1 localized 0.7% more nodes than the 0.5, but increased the power and time by 2.3% and 0.75% respectively."}, {"heading": "6. CONCLUSIONS AND FUTURE WORK", "text": "This paper has presented single-objective and multi-objective PSO-based solutions for the power consumption of WSN during trilateration-based localization. The overall performance of the TBL algorithm was evaluated and improved through the simultaneous optimization of various objective functions. Results clearly show that the use of SOPSO and MOPSO to optimize the TBL algorithm in terms of power consumption is effective, providing improvements up to 32% only on the Transmit mode of transceivers. Also, as shown by the study, using single global output power is less stable in localizing nodes than using multiple levels and using the maximum possible output level is not cost effective solution to the stability of localization, therefore, PSO was found to solve the problem without negatively affect the TBL work in terms of localizability in particular. However, our study can be mapped to real test beds using techniques such as the component based localization, nodes clustering, and RTS/CTS methods, in addition to many others, as suggest by [7, 8, 17].\nThe work conducted in this study will be used in future implementations of different localization protocols using Contiki-OS and real world motes such as the Z1 mote. The results of such more realistic simulations and implementations will allow us to verify the performance and quality of solutions achieved by this study."}, {"heading": "ACKNOWLEDGEMENTS", "text": "This material is based upon work supported in part by the National Science Foundation under Grant No. CNS-1248381."}], "references": [{"title": "A survey on localization for mobile wireless sensor networks,\" in Proceedings of the 2Nd International Conference on Mobile Entity Localization and Tracking in GPS-less Environments, ser. MELT'09", "author": ["I. Amundson", "X.D. Koutsoukos"], "venue": "Berlin, Heidelberg: Springer-Verlag,", "citeRegEx": "1", "shortCiteRegEx": "1", "year": 2009}, {"title": "Novel Iterative Multilateral Localization Algorithm for Wireless Sensor Networks,", "author": ["S. Zhang", "G. Li", "W. Wei", "B. Yang", "\\A"], "venue": "Journal of Networks,", "citeRegEx": "2", "shortCiteRegEx": "2", "year": 2010}, {"title": "Bio-inspired node localization in wireless sensor networks,", "author": ["R. Kulkarni"], "venue": "IEEE International Conference on Systems, Man, and Cybernetics, no. October,", "citeRegEx": "3", "shortCiteRegEx": "3", "year": 2009}, {"title": "Meta-heuristic range based node localization algorithm for Wireless Sensor", "author": ["A. Kumar", "A. Khosla", "J.S. Saini", "S. Singh"], "venue": "Networks,\" 2012 International Conference on Localization and GNSS,", "citeRegEx": "4", "shortCiteRegEx": "4", "year": 2012}, {"title": "and M", "author": ["W. Cheng", "N. Zhang"], "venue": "Song, \\Time-bounded essential localization for wireless sensor networks,\" IEEE Transactions on Networking, pp. 1-14", "citeRegEx": "5", "shortCiteRegEx": null, "year": 2010}, {"title": "Fine-grained localization in sensor and ad-hoc networks,\" Ph.D. dissertation, New Haven, CT, USA, 2006, aAI3243632", "author": ["D.K. Goldenberg"], "venue": "International Journal in Foundations of Computer Science & Technology (IJFCST),", "citeRegEx": "6", "shortCiteRegEx": "6", "year": 2014}, {"title": "a", "author": ["D.K. Goldenberg", "P. Bihler", "Y.R. Yang", "M. Cao", "J. Fang"], "venue": "S. Morse, and B. D. O. Anderson, \\Localization in sparse networks using sweeps,\" Proceedings of the 12 annual international conference on Mobile computing and networking \u2013 MobiCom'06, p. 110", "citeRegEx": "7", "shortCiteRegEx": null, "year": 2006}, {"title": "Component-Based Localization in Sparse Wireless Networks,", "author": ["X. Wang", "J. Luo", "Y. Liu", "S. Li", "D. Dong"], "venue": "IEEE/ACM Transactions on Networking,", "citeRegEx": "8", "shortCiteRegEx": "8", "year": 2011}, {"title": "Wireless Sensor Networks and Energy E_ciency", "author": ["H. Ali", "W. Shahzad", "F.A. Khan"], "venue": "IGI Global,", "citeRegEx": "9", "shortCiteRegEx": "9", "year": 2012}, {"title": "Discrete Radio Power Level Consumption Model in Wireless Sensor", "author": ["M. Mallinson", "P. Drane", "S. Hussain"], "venue": "IEEE Internatonal Conference on Mobile Adhoc and Sensor Systems,", "citeRegEx": "10", "shortCiteRegEx": "10", "year": 2007}, {"title": "and R", "author": ["J. Robles", "S. Tromer", "M. Quiroga"], "venue": "Lehnert, \\A low-power scheme for localization in wireless sensor networks,\" International Federation for Information Processing, pp. 259-262", "citeRegEx": "11", "shortCiteRegEx": null, "year": 2010}, {"title": "and J", "author": ["M. Bhuiyan", "G. Wang", "J. Cao"], "venue": "Wu, \\Energy and Bandwidth-E_cient Wireless Sensor Networks for Monitoring High-Frequency Events,\" Proc. of IEEE SECON", "citeRegEx": "12", "shortCiteRegEx": null, "year": 2013}, {"title": "Everywhere, \\Wirelessly Connecting Everywhere,", "author": ["C. W"], "venue": "Wireless Connectivity, no", "citeRegEx": "13", "shortCiteRegEx": "13", "year": 2013}, {"title": "ZigBee wireless networks and transceivers", "author": ["S. Farahani"], "venue": "Elsevier", "citeRegEx": "14", "shortCiteRegEx": null, "year": 2011}, {"title": "Inc, \\CC2420 2.4 GHz IEEE 802.15.4 / ZigBee-ready RF Transceiver Applications,\" Texas Instruments Inc, Dallas, Texas, USA", "author": ["I. T"], "venue": null, "citeRegEx": "15", "shortCiteRegEx": "15", "year": 2014}, {"title": "Power Adaptive Localization Algorithm for Wireless Sensor Networks Using Particle Filter,", "author": ["M.-H. Meng"], "venue": "IEEE Transactions on Vehicular Technology,", "citeRegEx": "16", "shortCiteRegEx": "16", "year": 2009}, {"title": "Clustering algorithm in wireless sensor networks using transmit power control and soft computing,\" in Intelligent Control and Automation, ser", "author": ["K.-B. Chang", "Y.-B. Kong", "G.-T. Park"], "venue": "Lecture Notes in Control and Information Sciences,", "citeRegEx": "17", "shortCiteRegEx": "17", "year": 2006}, {"title": "and H", "author": ["Z. Hu", "D. Gu", "Z. Song"], "venue": "Li, \\Localization in wireless sensor networks using a mobile anchor node,\" in Advanced Intelligent Mechatronics", "citeRegEx": "20", "shortCiteRegEx": null, "year": 2008}, {"title": "Ant Colony Optimization Approach to a Grid Workow Scheduling Problem With Various QoS Requirements,", "author": ["W.-n. Chen", "J. Zhang", "\\An"], "venue": "IEEE TRANSACTIONS ON SYSTEMS, MAN, AND CYBERNATICS,", "citeRegEx": "21", "shortCiteRegEx": "21", "year": 2009}, {"title": "K", "author": ["M.-P. Uwase", "N. Long", "J. Tiberghien"], "venue": "Steenhaut, and J.-M. Dricot, \\Poster abstract: Outdoors range measurements with zolertia z1 motes and contiki,\" in Real-World Wireless Sensor Networks, ser. Lecture Notes in Electrical Engineering, K. Langendoen, W. Hu, F. Ferrari, M. Zimmerling, and L. Mottola, Eds. Springer International Publishing", "citeRegEx": "22", "shortCiteRegEx": null, "year": 2014}, {"title": "Localization in wireless sensor networks,", "author": ["Francisco Sant"], "venue": "ACM Journal,", "citeRegEx": "23", "shortCiteRegEx": "23", "year": 2008}, {"title": "Particle swarm optimization,", "author": ["J. Kennedy", "R. Eberhart"], "venue": "Proceedings of ICNN'95 - International Conference on Neural Networks,", "citeRegEx": "24", "shortCiteRegEx": "24", "year": 1995}, {"title": "A DISCRETE BINARY VERSION OF THE PARTICLE SWARM ALGORITHM,", "author": ["J. Kennedy", "R.C. Eberhart"], "venue": "IEEE international conference on Systems, Man, and Cybernetics,", "citeRegEx": "25", "shortCiteRegEx": "25", "year": 1997}, {"title": "Application of particle swarm to multiobjective optimization,\" Department of Computer Science and Software Engineering Department, Auburn University, pp", "author": ["J. Moore", "R. Chapman"], "venue": null, "citeRegEx": "26", "shortCiteRegEx": "26", "year": 1999}, {"title": "Particle swarm optimization method in multiobjective problems,", "author": ["K.E. Parsopoulos", "M.N. Vrahatis"], "venue": "Proceedings of the 2002 ACM symposium on Applied computing - SAC '02,", "citeRegEx": "27", "shortCiteRegEx": "27", "year": 2002}, {"title": "Reyes-Sierra, \\Multi-Objective Particle Swarm Optimizers: A Survey of the State-of-the-Art,", "author": ["M.C. a. Coello Coello"], "venue": "International Journal of Computational Intelligence Research,", "citeRegEx": "28", "shortCiteRegEx": "28", "year": 2006}, {"title": "Particle swarm optimization with preference order ranking for multi-objective optimization,", "author": ["Y. Wang", "Y. Yang"], "venue": "Information Sciences,", "citeRegEx": "29", "shortCiteRegEx": "29", "year": 2009}, {"title": "Dynamic Particle Swarm Optimization to Solve Multi-objective Optimization Problem,", "author": ["H.S. Urade", "R. Patel"], "venue": "Procedia Technology,", "citeRegEx": "30", "shortCiteRegEx": "30", "year": 2012}, {"title": "An improved multiobjective particle swarm optimizer for multi-objective problems,", "author": ["S.-J. Tsai", "T.-Y. Sun", "C.-C. Liu", "S.-T. Hsieh", "W.-C. Wu", "S.-Y. Chiu"], "venue": "Expert Systems with Applications,", "citeRegEx": "31", "shortCiteRegEx": "31", "year": 2010}, {"title": "A particle swarm optimization for multi-objective shop scheduling,", "author": ["D.Y. Sha", "H. Hung Lin"], "venue": "The International Journal of Advanced Manufacturing Technology,", "citeRegEx": "32", "shortCiteRegEx": "32", "year": 2009}, {"title": "Multi-objective rule mining using a chaotic particle swarm optimization algorithm,", "author": ["B. Alatas", "E. Akin"], "venue": "Knowledge-Based Systems,", "citeRegEx": "33", "shortCiteRegEx": "33", "year": 2009}, {"title": "and Z", "author": ["S. Pang", "H. Zou", "W. Yang"], "venue": "Wang, \\An Adaptive Mutated Multi-objective Particle Swarm Optimization with an Entropy-based Density Assessment Scheme,\" Information & Computational Science, vol. 4, pp. 1065-1074", "citeRegEx": "34", "shortCiteRegEx": null, "year": 2013}, {"title": "and M", "author": ["L. Wang", "W. Ye", "X. Fu"], "venue": "Menhas, \\A modi_ed multi-objective binary particle swarm optimization algorithm,\" Advances in Swarm Intelligence, pp. 41-48", "citeRegEx": "35", "shortCiteRegEx": null, "year": 2011}, {"title": "Multiobjective optimization using dynamic neighbourhood particle swarm optimization,", "author": ["R. Eberhart"], "venue": "Proceedings of the 2002 Congress on Evolutionary Computation. CEC'02 (Cat. No.02TH8600),", "citeRegEx": "36", "shortCiteRegEx": "36", "year": 2002}, {"title": "Handling multiple objectives with particle swarm optimization,", "author": ["C.A. Coello", "G.T. Pulido", "M.S. Lechuga"], "venue": "Trans. Evol. Comp,", "citeRegEx": "37", "shortCiteRegEx": "37", "year": 2004}, {"title": "SMPSO: A new PSObased metaheuristic for multi-objective optimization,\" 2009", "author": ["a.J. Nebro", "J. Durillo", "J. Garcia-Nieto", "C. Coello Coello", "F. Luna", "E. Alba"], "venue": "IEEE Symposium on Computational Intelligence in Milti-Criteria Decision-Making,", "citeRegEx": "38", "shortCiteRegEx": "38", "year": 2009}, {"title": "Improving PSO-Based multi-objective optimization using crowding", "author": ["M. Sierra", "C. Coello"], "venue": "mutation and -dominance,\" Evolutionary Multi-Criterion Optimization", "citeRegEx": "39", "shortCiteRegEx": null, "year": 2005}, {"title": "jMetal: A Java framework for multi-objective optimization,", "author": ["J.J. Durillo", "A.J. Nebro"], "venue": "Advances in Engineering Software,", "citeRegEx": "40", "shortCiteRegEx": "40", "year": 2011}, {"title": "and D", "author": ["L. Chong-min", "G. Yue-lin"], "venue": "Yu-hong, \\A New Particle Swarm Optimization Algorithm with Random Inertia Weight and Evolution Strategy,\" Journal of Communication and Computer, vol. 5, no. 11, pp. 42-48", "citeRegEx": "41", "shortCiteRegEx": null, "year": 2008}, {"title": "Comparing inertia weights and constriction factors in particle swarm optimization,", "author": ["R. Eberhart", "Y. Shi"], "venue": "Proceedings of the 2000 Congress on Evolutionary Computation. CEC00 (Cat. No.00TH8512),", "citeRegEx": "42", "shortCiteRegEx": "42", "year": 2000}, {"title": "Multiprocessor scheduling using hybrid particle swarm optimization with dynamically varying inertia,", "author": ["S. Sivanandam", "P. Visalakshi"], "venue": "International Journal of Computer Science & Applications,", "citeRegEx": "43", "shortCiteRegEx": "43", "year": 2007}, {"title": "Application of globally adaptive inertia weight pso to lennard jones problem,\" in Proceedings of the International Conference on Soft Computing for Problem Solving (SocProS 2011", "author": ["K. Deep", "Madhuri"], "venue": "December 20-22,", "citeRegEx": "44", "shortCiteRegEx": "44", "year": 2011}, {"title": "Adaptive Approach for Modifying Inertia Weight using Particle Swarm Optimisation,", "author": ["R. Ojha", "M. Das", "\\An"], "venue": "IJCSI International Journal of Computer Science Issues,", "citeRegEx": "45", "shortCiteRegEx": "45", "year": 2012}], "referenceMentions": [{"referenceID": 0, "context": "Wireless sensor nodes in WSNs may be positioned permanently or dynamically in a field depending on the localization protocol and nodes functionalities as thoroughly discussed in [1].", "startOffset": 178, "endOffset": 181}, {"referenceID": 1, "context": "To solve problems of localization accuracy and increase the number of localized nodes in a time critical localization scenarios, meta-heuristic solutions and novel range-based iterative localization algorithms have previously been proposed in [2\u20136].", "startOffset": 243, "endOffset": 248}, {"referenceID": 2, "context": "To solve problems of localization accuracy and increase the number of localized nodes in a time critical localization scenarios, meta-heuristic solutions and novel range-based iterative localization algorithms have previously been proposed in [2\u20136].", "startOffset": 243, "endOffset": 248}, {"referenceID": 3, "context": "To solve problems of localization accuracy and increase the number of localized nodes in a time critical localization scenarios, meta-heuristic solutions and novel range-based iterative localization algorithms have previously been proposed in [2\u20136].", "startOffset": 243, "endOffset": 248}, {"referenceID": 4, "context": "To solve problems of localization accuracy and increase the number of localized nodes in a time critical localization scenarios, meta-heuristic solutions and novel range-based iterative localization algorithms have previously been proposed in [2\u20136].", "startOffset": 243, "endOffset": 248}, {"referenceID": 5, "context": "To solve problems of localization accuracy and increase the number of localized nodes in a time critical localization scenarios, meta-heuristic solutions and novel range-based iterative localization algorithms have previously been proposed in [2\u20136].", "startOffset": 243, "endOffset": 248}, {"referenceID": 6, "context": "Additionally, to allow mapping localization solutions into real world scenarios relaxations to the localization problem regarding the nodes ordering, anchor nodes distribution, or global information sharing were also discussed in [7, 8].", "startOffset": 230, "endOffset": 236}, {"referenceID": 7, "context": "Additionally, to allow mapping localization solutions into real world scenarios relaxations to the localization problem regarding the nodes ordering, anchor nodes distribution, or global information sharing were also discussed in [7, 8].", "startOffset": 230, "endOffset": 236}, {"referenceID": 8, "context": "The key novelty of this paper is the optimization of the power consumption of the whole network without the need to cluster or build any small sensor islands such as in [9] or in [5].", "startOffset": 169, "endOffset": 172}, {"referenceID": 4, "context": "The key novelty of this paper is the optimization of the power consumption of the whole network without the need to cluster or build any small sensor islands such as in [9] or in [5].", "startOffset": 179, "endOffset": 182}, {"referenceID": 9, "context": "Other methods of extending battery life are the intelligent slowing of power consumption through a reduction in listening time [10], increasing the sleep time [11], or modifying sampling rates [12].", "startOffset": 127, "endOffset": 131}, {"referenceID": 10, "context": "Other methods of extending battery life are the intelligent slowing of power consumption through a reduction in listening time [10], increasing the sleep time [11], or modifying sampling rates [12].", "startOffset": 159, "endOffset": 163}, {"referenceID": 11, "context": "Other methods of extending battery life are the intelligent slowing of power consumption through a reduction in listening time [10], increasing the sleep time [11], or modifying sampling rates [12].", "startOffset": 193, "endOffset": 197}, {"referenceID": 12, "context": "Another method of accomplishing power reduction is the use of multiple transmission ranges as is seen in the well-known CC2420 ZigBee RF transceiver [13, 14].", "startOffset": 149, "endOffset": 157}, {"referenceID": 13, "context": "Another method of accomplishing power reduction is the use of multiple transmission ranges as is seen in the well-known CC2420 ZigBee RF transceiver [13, 14].", "startOffset": 149, "endOffset": 157}, {"referenceID": 14, "context": "CC2420 allow nodes to transmit messages using eight discrete output power levels, as discussed in section 28 of the transceiver data sheet [15].", "startOffset": 139, "endOffset": 143}, {"referenceID": 15, "context": "3 Previous studies took the advantage of such functionalities and tried to optimize the power consumption by varying the output power as in [16], where the output power of nodes were varied based on the distance between the communicated nodes after sharing the information using RTS/CTS (Request to Send / Clear to Send) mechanism.", "startOffset": 140, "endOffset": 144}, {"referenceID": 16, "context": "Additionally, in [17] a localization protocol was proposed to optimize the power consumption after clustering nodes based on the used power levels.", "startOffset": 17, "endOffset": 21}, {"referenceID": 13, "context": "work done by [14] as in (1) and (2), where is the range in meters, is the sender transmit", "startOffset": 13, "endOffset": 17}, {"referenceID": 13, "context": "The rest of the variables in the previous equations are taken from [14] where dBm, dBm, MHz", "startOffset": 67, "endOffset": 71}, {"referenceID": 13, "context": "As in the discrete method before, the energy consumption is calculated based on [14], but in this method the transmission range varies continually, as in (3) and (4), rather than the power range before.", "startOffset": 80, "endOffset": 84}, {"referenceID": 17, "context": "The localization procedure is the step that precedes actual network transmissions which, in the long run, will help in data forwarding and routing procedures between nodes in the network [20].", "startOffset": 187, "endOffset": 191}, {"referenceID": 18, "context": "RSSI is widely used in localization protocols for ranging and position estimation, therefore, a study by Chen and Terzis [21] was made to calibrate the raw RSSI values from transceivers in order to allow better distance estimations when using RSSI values of the received messages.", "startOffset": 121, "endOffset": 125}, {"referenceID": 9, "context": "On the other hand, according to a study by [10], the increase of the output power do not necessarily increase the distance a message can reach.", "startOffset": 43, "endOffset": 47}, {"referenceID": 19, "context": "But, a recent study conducted by [22] showed stability in the RSSI values and reliable range measurements while using external antennas on Z1 motes.", "startOffset": 33, "endOffset": 37}, {"referenceID": 20, "context": "5 neighbor nodes [23].", "startOffset": 17, "endOffset": 21}, {"referenceID": 21, "context": "7 single objective PSO (SOPSO) was first introduced by Kennedy and Eberhart in 1995 and operates over a continuous space [24].", "startOffset": 121, "endOffset": 125}, {"referenceID": 22, "context": "Later, in 1997 a discrete, binary version of the algorithm was presented also by Kennedy and Eberhart to operate on discrete binary variables [25].", "startOffset": 142, "endOffset": 146}, {"referenceID": 23, "context": ", as the first recorded attempt, to use PSO in a multi-objective problem (MOP) [26].", "startOffset": 79, "endOffset": 83}, {"referenceID": 24, "context": "Later in 2002 multi-objective PSO (MOPSO) was introduced by [27] as an effective algorithm to solve MOPs.", "startOffset": 60, "endOffset": 64}, {"referenceID": 0, "context": "Alternately, the elements of the positions matrix of the binary PSO can take the binary value of 0 or 1, where the value of each element of the velocity matrix is in the range [0, 1].", "startOffset": 176, "endOffset": 182}, {"referenceID": 25, "context": "MOPSO attempts to effectively find a solution or a set of solutions that ensure a balance between all the involved objectives as is thoroughly discussed in [28-36].", "startOffset": 156, "endOffset": 163}, {"referenceID": 26, "context": "MOPSO attempts to effectively find a solution or a set of solutions that ensure a balance between all the involved objectives as is thoroughly discussed in [28-36].", "startOffset": 156, "endOffset": 163}, {"referenceID": 27, "context": "MOPSO attempts to effectively find a solution or a set of solutions that ensure a balance between all the involved objectives as is thoroughly discussed in [28-36].", "startOffset": 156, "endOffset": 163}, {"referenceID": 28, "context": "MOPSO attempts to effectively find a solution or a set of solutions that ensure a balance between all the involved objectives as is thoroughly discussed in [28-36].", "startOffset": 156, "endOffset": 163}, {"referenceID": 29, "context": "MOPSO attempts to effectively find a solution or a set of solutions that ensure a balance between all the involved objectives as is thoroughly discussed in [28-36].", "startOffset": 156, "endOffset": 163}, {"referenceID": 30, "context": "MOPSO attempts to effectively find a solution or a set of solutions that ensure a balance between all the involved objectives as is thoroughly discussed in [28-36].", "startOffset": 156, "endOffset": 163}, {"referenceID": 31, "context": "MOPSO attempts to effectively find a solution or a set of solutions that ensure a balance between all the involved objectives as is thoroughly discussed in [28-36].", "startOffset": 156, "endOffset": 163}, {"referenceID": 32, "context": "MOPSO attempts to effectively find a solution or a set of solutions that ensure a balance between all the involved objectives as is thoroughly discussed in [28-36].", "startOffset": 156, "endOffset": 163}, {"referenceID": 33, "context": "MOPSO attempts to effectively find a solution or a set of solutions that ensure a balance between all the involved objectives as is thoroughly discussed in [28-36].", "startOffset": 156, "endOffset": 163}, {"referenceID": 34, "context": "Dominance comparators are also implemented inside the MOPSO to help in finding a set of optimal solutions [37]; 3.", "startOffset": 106, "endOffset": 110}, {"referenceID": 35, "context": "To avoid filling up the leaders archive, a crowding distance based on the non-dominated sorting genetic algorithm-II (NSGA-II) is used to decide which particles must remain in the archive [38, 39]; and 4.", "startOffset": 188, "endOffset": 196}, {"referenceID": 36, "context": "To avoid filling up the leaders archive, a crowding distance based on the non-dominated sorting genetic algorithm-II (NSGA-II) is used to decide which particles must remain in the archive [38, 39]; and 4.", "startOffset": 188, "endOffset": 196}, {"referenceID": 31, "context": "A mutation operator is applied to a portion of the swarm to improve the exploration and search ability and to avoid premature convergence [34, 35, 37].", "startOffset": 138, "endOffset": 150}, {"referenceID": 32, "context": "A mutation operator is applied to a portion of the swarm to improve the exploration and search ability and to avoid premature convergence [34, 35, 37].", "startOffset": 138, "endOffset": 150}, {"referenceID": 34, "context": "A mutation operator is applied to a portion of the swarm to improve the exploration and search ability and to avoid premature convergence [34, 35, 37].", "startOffset": 138, "endOffset": 150}, {"referenceID": 35, "context": "A modified version of the implemented dominance and equality comparators of SMPSO [38] and OMOPSO [39] in JMetal [40] are used to make sure that no dominated solution is added to the archive.", "startOffset": 82, "endOffset": 86}, {"referenceID": 36, "context": "A modified version of the implemented dominance and equality comparators of SMPSO [38] and OMOPSO [39] in JMetal [40] are used to make sure that no dominated solution is added to the archive.", "startOffset": 98, "endOffset": 102}, {"referenceID": 37, "context": "A modified version of the implemented dominance and equality comparators of SMPSO [38] and OMOPSO [39] in JMetal [40] are used to make sure that no dominated solution is added to the archive.", "startOffset": 113, "endOffset": 117}, {"referenceID": 38, "context": "The values of the SOPSO parameters are listed in Table 8, where a version of the random inertia weight proposed by [41] was implemented to make sure that PSO will not stuck in the local optima and improve the exploration ability by using a version of the simulated annealing method.", "startOffset": 115, "endOffset": 119}, {"referenceID": 39, "context": "Based on a study by Eberhart and Shi [42] that compared inertia weights and constriction factors in particle swarm optimization, the values of the acceleration coefficients, and in (5), were set to 1.", "startOffset": 37, "endOffset": 41}, {"referenceID": 38, "context": "15 and used in many studies [41-45].", "startOffset": 28, "endOffset": 35}, {"referenceID": 39, "context": "15 and used in many studies [41-45].", "startOffset": 28, "endOffset": 35}, {"referenceID": 40, "context": "15 and used in many studies [41-45].", "startOffset": 28, "endOffset": 35}, {"referenceID": 41, "context": "15 and used in many studies [41-45].", "startOffset": 28, "endOffset": 35}, {"referenceID": 42, "context": "15 and used in many studies [41-45].", "startOffset": 28, "endOffset": 35}, {"referenceID": 6, "context": "However, our study can be mapped to real test beds using techniques such as the component based localization, nodes clustering, and RTS/CTS methods, in addition to many others, as suggest by [7, 8, 17].", "startOffset": 191, "endOffset": 201}, {"referenceID": 7, "context": "However, our study can be mapped to real test beds using techniques such as the component based localization, nodes clustering, and RTS/CTS methods, in addition to many others, as suggest by [7, 8, 17].", "startOffset": 191, "endOffset": 201}, {"referenceID": 16, "context": "However, our study can be mapped to real test beds using techniques such as the component based localization, nodes clustering, and RTS/CTS methods, in addition to many others, as suggest by [7, 8, 17].", "startOffset": 191, "endOffset": 201}], "year": 2014, "abstractText": "Trilateration-based localization (TBL) has become a corner stone of modern technology. This study formulates the concern on how wireless sensor networks can take advantage of the computational intelligent techniques using both singleand multi-objective particle swarm optimization (PSO) with an overall aim of concurrently minimizing the required time for localization, minimizing energy consumed during localization, and maximizing the number of nodes fully localized through the adjustment of wireless sensor transmission ranges while using TBL process. A parameter-study of the applied PSO variants is performed, leading to results that show algorithmic improvements of up to 32% in the evaluated objectives.", "creator": null}}}