{"id": "1602.03606", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "11-Feb-2016", "title": "Variations of the Similarity Function of TextRank for Automated Summarization", "abstract": "This article presents erguven new o'higgins alternatives to grann the similarity saidy function for kua the 101.74 TextRank cosson algorithm for automatic neglected summarization of hatherleigh texts. planoise We 29.47 describe the audoen generalities of the algorithm and the different bashaw functions ajok we kittyhawk propose. f\u00eate Some of these variants achieve a buoys significative agosti improvement viesca using rotherfield the friedrich-wilhelms-universit\u00e4t same xuwen metrics and piseyev dataset as selloffs the tsunekazu original 19-29 publication.", "histories": [["v1", "Thu, 11 Feb 2016 02:39:21 GMT  (43kb,D)", "http://arxiv.org/abs/1602.03606v1", "8 pages, 2 figures. Presented at the Argentine Symposium on Artificial Intelligence (ASAI) 2015 - 44 JAIIO (September 2015)"]], "COMMENTS": "8 pages, 2 figures. Presented at the Argentine Symposium on Artificial Intelligence (ASAI) 2015 - 44 JAIIO (September 2015)", "reviews": [], "SUBJECTS": "cs.CL cs.IR", "authors": ["federico barrios", "federico l\\'opez", "luis argerich", "rosa wachenchauzer"], "accepted": false, "id": "1602.03606"}, "pdf": {"name": "1602.03606.pdf", "metadata": {"source": "CRF", "title": "Variations of the Similarity Function of TextRank for Automated Summarization", "authors": ["Federico Barrios", "Federico L\u00f3pez", "Luis Argerich", "Rosita Wachenchauzer"], "emails": ["fbarrios@fi.uba.ar", "fjlopez@fi.uba.ar"], "sections": [{"heading": null, "text": "Keywords: TextRank variations, automated summarization, Information Retrieval ranking functions"}, {"heading": "1 Introduction", "text": "In the field of natural language processing, an extractive summarization task can be described as the selection of the most important sentences in a document. Using different levels of compression, a summarized version of the document of arbitrary length can be obtained.\nTextRank is a graph-based extractive summarization algorithm. It is domain and language independent since it does not require deep linguistic knowledge, nor domain or language specific annotated corpora [16]. These features makes the algorithm widely used: it performs well summarizing structured text like news articles, but it has also shown good results in other usages such as summarizing meeting transcriptions [8] and assessing web content credibility [1].\nIn this article we present different proposals for the construction of the graph and report the results obtained with them.\nThe first sections of this article describe previous work in the area and an overview of the TextRank algorithm. Then we present the variations and describe the different metrics and dataset used for the evaluation. Finally we report the results obtained using the proposed changes."}, {"heading": "2 Previous work", "text": "The field of automated summarization has attracted interest since the late 50\u2019s [14]. Traditional methods for text summarization analyze the frequency of words or sentences in the first paragraphs of the text to identify the most important\nar X\niv :1\n60 2.\n03 60\n6v 1\n[ cs\n.C L\n] 1\n1 Fe\nb 20\nlexical elements. The mainstream research in this field emphasizes extractive approaches to summarization using statistical methods [4]. Several statistical models have been developed based on training corpora to combine different heuristics using keywords, position and length of sentences, word frequency or titles [13].\nOther methods are based in the representation of the text as a graph. The graph-based ranking approaches consider the intrinsic structure of the texts instead of treating texts as simple aggregations of terms. Thus it is able to capture and express richer information in determining important concepts [19].\nThe selected text fragments to use in the graph construction can be phrases [6], sentences [14], or paragraphs [18]. Currently, many successful systems adopt the sentences considering the tradeoff between content richness and grammar correctness. According to these approach the most important sentences are the most connected ones in the graph and are used for building a final summary [2]. To identify relations between sentences (edges for the graph) there are several measures: overlapping words, cosine distance and query-sensitive similarity. Also, some authors have proposed combinations of the previous with supervised learning functions [19].\nThese algorithms use different information retrieval techniques to determine the most important sentences (vertices) and build the summary [23]. The TextRank algorithm developed by Mihalcea and Tarau [17] and the LexRank algorithm by Erkan and Radev [7] are based in ranking the lexical units of the text (sentences or words) using variations of PageRank [20]. Other graph-based ranking algorithms such as HITS [11] or Positional Function [10] may be also applied."}, {"heading": "3 TextRank", "text": ""}, {"heading": "3.1 Description", "text": "TextRank is an unsupervised algorithm for the automated summarization of texts that can also be used to obtain the most important keywords in a document. It was introduced by Rada Mihalcea and Paul Tarau in [17].\nThe algorithm applies a variation of PageRank [20] over a graph constructed specifically for the task of summarization. This produces a ranking of the elements in the graph: the most important elements are the ones that better describe the text. This approach allows TextRank to build summaries without the need of a training corpus or labeling and allows the use of the algorithm with different languages."}, {"heading": "3.2 Text as a Graph", "text": "For the task of automated summarization, TextRank models any document as a graph using sentences as nodes [3]. A function to compute the similarity of sentences is needed to build edges in between. This function is used to weight the graph edges, the higher the similarity between sentences the more important\nthe edge between them will be in the graph. In the domain of a Random Walker, as used frequently in PageRank [20], we can say that we are more likely to go from one sentence to another if they are very similar.\nTextRank determines the relation of similarity between two sentences based on the content that both share. This overlap is calculated simply as the number of common lexical tokens between them, divided by the lenght of each to avoid promoting long sentences.\nThe function featured in the original algorithm can be formalized as:\nDefinition 1. Given Si, Sj two sentences represented by a set of n words that in Si are represented as Si = w i 1, w i 2, ..., w i n. The similarity function for Si, Sj can be defined as:\nSim(Si, Sj) = |{wk|wk \u2208 Si&wk \u2208 Sj}|\nlog(|Si|) + log(|Sj |) (1)\nThe result of this process is a dense graph representing the document. From this graph, PageRank is used to compute the importance of each vertex. The most significative sentences are selected and presented in the same order as they appear in the document as the summary."}, {"heading": "4 Experiments", "text": ""}, {"heading": "4.1 Our Variations", "text": "This section will describe the different modifications that we propose over the original TextRank algorithm. These ideas are based in changing the way in which distances between sentences are computed to weight the edges of the graph used for PageRank. These similarity measures are orthogonal to the TextRank model, thus they can be easily integrated into the algorithm. We found some of these variations to produce significative improvements over the original algorithm.\nLongest Common Substring From two sentences we identify the longest common substring and report the similarity to be its length [9].\nCosine Distance The cosine similarity is a metric widely used to compare texts represented as vectors. We used a classical TF-IDF model to represent the documents as vectors and computed the cosine between vectors as a measure of similarity. Since the vectors are defined to be positive, the cosine results in values in the range [0,1] where a value of 1 represents identical vectors and 0 represents orthogonal vectors [24].\nBM25 BM25 / Okapi-BM25 is a ranking function widely used as the state of the art for Information Retrieval tasks. BM25 is a variation of the TF-IDF model using a probabilistic model [22].\nDefinition 2. Given two sentences R, S, BM25 is defined as:\nBM25(R,S) = n\u2211 i=1 IDF (si) \u00b7 f(si, R) \u00b7 (k1 + 1) f(si, R) + k1 \u00b7 (1\u2212 b + b \u00b7 |R|avgDL ) (2)\nwhere k and b are parameters. We used k = 1.2 and b = 0.75. avgDL is the average length of the sentences in our collection.\nThis function definition implies that if a word appears in more than half the documents of the collection, it will have a negative value. Since this can cause problems in the next stage of the algorithm, we used the following correction formula:\nIDF (si) = { log(N \u2212 n(si) + 0.5)\u2212 log(n(si) + 0.5) if n(si) > N/2 \u03b5 \u00b7 avgIDF if n(si) \u2264 N/2\n(3)\nwhere \u03b5 takes a value between 0.5 and 0.30 and avgIDF is the average IDF for all terms. Other corrective strategies were also tested, setting \u03b5 = 0 and using simpler modifications of the classic IDF formula.\nWe also used BM25+, a variation of BM25 that changes the way long documents are penalized [15]."}, {"heading": "4.2 Evaluation", "text": "For testing the proposed variations, we used the database of the 2002 Document Understanding Conference (DUC) [5]. The corpus has 567 documents that are summarized to 20% of their size, and is the same corpus used in [17].\nTo evaluate results we used version 1.5.5 of the ROUGE package [12]. The configuration settings were the same as those in DUC, where ROUGE-1, ROUGE2 and ROUGE-SU4 were used as metrics, using a confidence level of 95% and applying stemming. The final result is an average of these three scores.\nTo check the correct behaviour of our test suite we implemented the reference method used in [17], which extracts the first sentences of each document. We found the resulting scores of the original algorithm to be identical to those reported in [17]: a 2.3% improvement over the baseline."}, {"heading": "4.3 Results", "text": "We tested LCS, Cosine Sim, BM25 and BM25+ as different ways to weight the edges for the TextRank graph. The best results were obtained using BM25 and BM25+ with the corrective formula shown in equation 3. We achieved\nan improvement of 2.92% above the original TextRank result using BM25 and \u03b5 = 0.25. The following chart shows the results obtained for the different variations we proposed.\nThe result of Cosine Similarity was also satisfactory with a 2.54% improvement over the original method. The LCS variation also performed better than the original TextRank algorithm with 1.40% total improvement.\nThe performance in time was also improved. We could process the 567 documents from the DUC2002 database in 84% of the time needed in the original version."}, {"heading": "5 Reference Implementation and Gensim Contribution", "text": "A reference implementation of our proposals was coded as a Python module3 and can be obtained for testing and to reproduce results.\nWe also contributed the BM25-TextRank algorithm to the Gensim project4\n[21]."}, {"heading": "6 Conclusions", "text": "This work presented three different variations to the TextRank algorithm for automatic summarization. The three alternatives improved significantly the results of the algorithm using the same test configuration as in the original publication. Given that TextRank performs 2.84% over the baseline, our improvement of 2.92% over the TextRank score is an important result.\nThe combination of TextRank with modern Information Retrieval ranking functions such as BM25 and BM25+ creates a robust method for automatic summarization that performs better than the standard techniques used previously.\nBased on these results we suggest the use of BM25 along with TextRank for the task of unsupervised automatic summarization of texts. The results obtained and the examples analyzed show that this variation is better than the original TextRank algorithm without a performance penalty."}], "references": [{"title": "Application of textrank algorithm for credibility assessment", "author": ["B. Balcerzak", "W. Jaworski", "A. Wierzbicki"], "venue": "Proceedings of the 2014 IEEE/WIC/ACM International Joint Conferences on Web Intelligence (WI) and Intelligent Agent Technologies (IAT) - Volume", "citeRegEx": "1", "shortCiteRegEx": "1", "year": 2014}, {"title": "Sentence fusion for multidocument news summarization", "author": ["R. Barzilay", "K. McKeown"], "venue": "Computational Linguistics 31(3),", "citeRegEx": "2", "shortCiteRegEx": "2", "year": 2005}, {"title": "Introduction to Information Retrieval", "author": ["Christopher D. Manning", "H.S. Prabhakar Raghavan"], "venue": "Cambridge University Press", "citeRegEx": "3", "shortCiteRegEx": null, "year": 2008}, {"title": "A survey on automatic text summarization", "author": ["D. Das", "A.F.T. Martins"], "venue": "Tech. rep., Carnegie Mellon University, Language Technologies Institute", "citeRegEx": "4", "shortCiteRegEx": null, "year": 2007}, {"title": "Using lexical chains for keyword extraction", "author": ["G. Ercan", "I. Cicekli"], "venue": "Inf. Process. Manage", "citeRegEx": "6", "shortCiteRegEx": "6", "year": 2007}, {"title": "Lexrank: Graph-based lexical centrality as salience in text summarization", "author": ["G. Erkan", "D.R. Radev"], "venue": "J. Artif. Intell. Res. (JAIR) 22,", "citeRegEx": "7", "shortCiteRegEx": "7", "year": 2004}, {"title": "Clusterrank: a graph based method for meeting summarization", "author": ["N. Garg", "B. Favre", "K. Riedhammer", "D. Hakkani-T\u00fcr"], "venue": "INTERSPEECH", "citeRegEx": "8", "shortCiteRegEx": "8", "year": 2009}, {"title": "Algorithms on Strings, Trees, and Sequences: Computer Science and Computational Biology", "author": ["D. Gusfield"], "venue": "Cambridge University Press, New York, NY, USA", "citeRegEx": "9", "shortCiteRegEx": null, "year": 1997}, {"title": "Measuring the power of nodes in digraphs", "author": ["P.J.J. Herings", "G. van der Laan", "D. Talman"], "venue": "Research Memorandum 007,", "citeRegEx": "10", "shortCiteRegEx": "10", "year": 2001}, {"title": "Authoritative sources in a hyperlinked environment", "author": ["J.M. Kleinberg"], "venue": "J. ACM 46(5),", "citeRegEx": "11", "shortCiteRegEx": "11", "year": 1999}, {"title": "Rouge: a package for automatic evaluation of summaries", "author": ["C.Y. Lin"], "venue": "Proceedings of the Workshop on Text Summarization Branches Out (WAS 2004), Barcelona, Spain", "citeRegEx": "12", "shortCiteRegEx": null, "year": 2004}, {"title": "Identifying topics by position", "author": ["C.Y. Lin", "E.H. Hovy"], "venue": "Proceedings of 5th Conference on Applied Natural Language Processing. Washington D.C.", "citeRegEx": "13", "shortCiteRegEx": null, "year": 1997}, {"title": "The automatic creation of literature abstracts", "author": ["H.P. Luhn"], "venue": "IBM J. Res. Dev", "citeRegEx": "14", "shortCiteRegEx": "14", "year": 1958}, {"title": "Lower-bounding term frequency normalization", "author": ["Y. Lv", "C. Zhai"], "venue": "Proceedings of the 20th ACM Conference on Information and Knowledge Management, CIKM 2011, Glasgow, United Kingdom, October 24-28, 2011. pp. 7\u201316", "citeRegEx": "15", "shortCiteRegEx": null, "year": 2011}, {"title": "Graph-based ranking algorithms for sentence extraction, applied to text summarization", "author": ["R. Mihalcea"], "venue": "Proceedings of the ACL 2004 on Interactive Poster and Demonstration Sessions. ACLdemo \u201904,", "citeRegEx": "16", "shortCiteRegEx": "16", "year": 2004}, {"title": "Textrank: Bringing order into texts", "author": ["R. Mihalcea", "P. Tarau"], "venue": "Lin, D., Wu, D. (eds.) Proceedings of EMNLP 2004. pp. 404\u2013411. Association for Computational Linguistics, Barcelona, Spain", "citeRegEx": "17", "shortCiteRegEx": null, "year": 2004}, {"title": "Automatic text summarization by paragraph extraction", "author": ["M. Mitrat", "A. Singhal", "C. Buckleytt"], "venue": "Intelligent Scalable Text Summarization. pp", "citeRegEx": "18", "shortCiteRegEx": "18", "year": 1997}, {"title": "Learning similarity functions in graphbased document summarization", "author": ["Y. Ouyang", "W. Li", "F. Wei", "Q. Lu"], "venue": "Lecture Notes in Computer Science,", "citeRegEx": "19", "shortCiteRegEx": "19", "year": 2009}, {"title": "The pagerank citation ranking: Bringing order to the web", "author": ["L. Page", "S. Brin", "R. Motwani", "T. Winograd"], "venue": "Proceedings of the 7th International World Wide Web Conference", "citeRegEx": "20", "shortCiteRegEx": "20", "year": 1998}, {"title": "Software Framework for Topic Modelling with Large Corpora", "author": ["R. \u0158eh\u030au\u0159ek", "P. Sojka"], "venue": "Proceedings of the LREC 2010 Workshop on New Challenges for NLP Frameworks", "citeRegEx": "21", "shortCiteRegEx": "21", "year": 2010}, {"title": "Okapi at TREC-3", "author": ["S. Robertson", "S. Walker", "S. Jones", "M. Hancock-Beaulieu", "M. Gatford"], "venue": "Proceedings of The Third Text REtrieval Conference,", "citeRegEx": "22", "shortCiteRegEx": "22", "year": 1994}, {"title": "Automatic text structuring and summarization", "author": ["G. Salton", "A. Singhal", "M. Mitra", "C. Buckley"], "venue": "Information Processing and Management 33(2), 193 \u2013 207", "citeRegEx": "23", "shortCiteRegEx": null, "year": 1997}, {"title": "Modern information retrieval: A brief overview", "author": ["A. Singhal"], "venue": "Bulletin of the IEEE Computer Society Technical Committee on Data Engineering", "citeRegEx": "24", "shortCiteRegEx": "24", "year": 2001}], "referenceMentions": [{"referenceID": 14, "context": "It is domain and language independent since it does not require deep linguistic knowledge, nor domain or language specific annotated corpora [16].", "startOffset": 141, "endOffset": 145}, {"referenceID": 6, "context": "These features makes the algorithm widely used: it performs well summarizing structured text like news articles, but it has also shown good results in other usages such as summarizing meeting transcriptions [8] and assessing web content credibility [1].", "startOffset": 207, "endOffset": 210}, {"referenceID": 0, "context": "These features makes the algorithm widely used: it performs well summarizing structured text like news articles, but it has also shown good results in other usages such as summarizing meeting transcriptions [8] and assessing web content credibility [1].", "startOffset": 249, "endOffset": 252}, {"referenceID": 12, "context": "The field of automated summarization has attracted interest since the late 50\u2019s [14].", "startOffset": 80, "endOffset": 84}, {"referenceID": 3, "context": "The mainstream research in this field emphasizes extractive approaches to summarization using statistical methods [4].", "startOffset": 114, "endOffset": 117}, {"referenceID": 11, "context": "Several statistical models have been developed based on training corpora to combine different heuristics using keywords, position and length of sentences, word frequency or titles [13].", "startOffset": 180, "endOffset": 184}, {"referenceID": 17, "context": "Thus it is able to capture and express richer information in determining important concepts [19].", "startOffset": 92, "endOffset": 96}, {"referenceID": 4, "context": "The selected text fragments to use in the graph construction can be phrases [6], sentences [14], or paragraphs [18].", "startOffset": 76, "endOffset": 79}, {"referenceID": 12, "context": "The selected text fragments to use in the graph construction can be phrases [6], sentences [14], or paragraphs [18].", "startOffset": 91, "endOffset": 95}, {"referenceID": 16, "context": "The selected text fragments to use in the graph construction can be phrases [6], sentences [14], or paragraphs [18].", "startOffset": 111, "endOffset": 115}, {"referenceID": 1, "context": "According to these approach the most important sentences are the most connected ones in the graph and are used for building a final summary [2].", "startOffset": 140, "endOffset": 143}, {"referenceID": 17, "context": "Also, some authors have proposed combinations of the previous with supervised learning functions [19].", "startOffset": 97, "endOffset": 101}, {"referenceID": 21, "context": "These algorithms use different information retrieval techniques to determine the most important sentences (vertices) and build the summary [23].", "startOffset": 139, "endOffset": 143}, {"referenceID": 15, "context": "The TextRank algorithm developed by Mihalcea and Tarau [17] and the LexRank algorithm by Erkan and Radev [7] are based in ranking the lexical units of the text (sentences or words) using variations of PageRank [20].", "startOffset": 55, "endOffset": 59}, {"referenceID": 5, "context": "The TextRank algorithm developed by Mihalcea and Tarau [17] and the LexRank algorithm by Erkan and Radev [7] are based in ranking the lexical units of the text (sentences or words) using variations of PageRank [20].", "startOffset": 105, "endOffset": 108}, {"referenceID": 18, "context": "The TextRank algorithm developed by Mihalcea and Tarau [17] and the LexRank algorithm by Erkan and Radev [7] are based in ranking the lexical units of the text (sentences or words) using variations of PageRank [20].", "startOffset": 210, "endOffset": 214}, {"referenceID": 9, "context": "Other graph-based ranking algorithms such as HITS [11] or Positional Function [10] may be also applied.", "startOffset": 50, "endOffset": 54}, {"referenceID": 8, "context": "Other graph-based ranking algorithms such as HITS [11] or Positional Function [10] may be also applied.", "startOffset": 78, "endOffset": 82}, {"referenceID": 15, "context": "It was introduced by Rada Mihalcea and Paul Tarau in [17].", "startOffset": 53, "endOffset": 57}, {"referenceID": 18, "context": "The algorithm applies a variation of PageRank [20] over a graph constructed specifically for the task of summarization.", "startOffset": 46, "endOffset": 50}, {"referenceID": 2, "context": "For the task of automated summarization, TextRank models any document as a graph using sentences as nodes [3].", "startOffset": 106, "endOffset": 109}, {"referenceID": 18, "context": "In the domain of a Random Walker, as used frequently in PageRank [20], we can say that we are more likely to go from one sentence to another if they are very similar.", "startOffset": 65, "endOffset": 69}, {"referenceID": 7, "context": "Longest Common Substring From two sentences we identify the longest common substring and report the similarity to be its length [9].", "startOffset": 128, "endOffset": 131}, {"referenceID": 0, "context": "Since the vectors are defined to be positive, the cosine results in values in the range [0,1] where a value of 1 represents identical vectors and 0 represents orthogonal vectors [24].", "startOffset": 88, "endOffset": 93}, {"referenceID": 22, "context": "Since the vectors are defined to be positive, the cosine results in values in the range [0,1] where a value of 1 represents identical vectors and 0 represents orthogonal vectors [24].", "startOffset": 178, "endOffset": 182}, {"referenceID": 20, "context": "BM25 is a variation of the TF-IDF model using a probabilistic model [22].", "startOffset": 68, "endOffset": 72}, {"referenceID": 13, "context": "We also used BM25+, a variation of BM25 that changes the way long documents are penalized [15].", "startOffset": 90, "endOffset": 94}, {"referenceID": 15, "context": "The corpus has 567 documents that are summarized to 20% of their size, and is the same corpus used in [17].", "startOffset": 102, "endOffset": 106}, {"referenceID": 10, "context": "5 of the ROUGE package [12].", "startOffset": 23, "endOffset": 27}, {"referenceID": 15, "context": "To check the correct behaviour of our test suite we implemented the reference method used in [17], which extracts the first sentences of each document.", "startOffset": 93, "endOffset": 97}, {"referenceID": 15, "context": "We found the resulting scores of the original algorithm to be identical to those reported in [17]: a 2.", "startOffset": 93, "endOffset": 97}, {"referenceID": 19, "context": "We also contributed the BM25-TextRank algorithm to the Gensim project [21].", "startOffset": 70, "endOffset": 74}], "year": 2016, "abstractText": "This article presents new alternatives to the similarity function for the TextRank algorithm for automated summarization of texts. We describe the generalities of the algorithm and the different functions we propose. Some of these variants achieve a significative improvement using the same metrics and dataset as the original publication.", "creator": "LaTeX with hyperref package"}}}