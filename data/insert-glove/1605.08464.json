{"id": "1605.08464", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "26-May-2016", "title": "Low-Cost Scene Modeling using a Density Function Improves Segmentation Performance", "abstract": "pinkel We ghostwrote propose a vaunted low delaune cost in-house and effective way zlobin to yining combine spokeswomen a showscan free simulation bioethical software cnam and golems free fibrocystic CAD hanarotelecom models agoos for neo-classical modeling blanche human - object bivalve interaction mubi in order imputation to hatless improve pentoxide human & skipping amp; kosi\u0144ski object hairston segmentation. ruc It orler is sapio intended hoima for blumberg research branagh scenarios related flaps to safe human - replacements robot collaboration (extroverted SHRC) and interaction (SHRI) in lobognon the thornham industrial firming domain. assertiveness The ombres task of joras human saether and chained object church modeling ferriola has candlewood been broadstone used for 8-of-11 detecting jesuit-run activity, and for cheapen inferring and predicting actions, different fastpitch from those works, monts we do grunting human and object inserm modeling in deposit-taking order kreegel to wlaj learn interactions aoshima in RGB - mason-dixon D viewings data for biw improving segmentation. For fts this purpose, arrighi we tsuno define shimono a 3,084 novel density katti function conacyt to model a three splashier dimensional (3D) scene mbusa in tpo a virtual passyunk environment (frescas VREP ). bracknell This density function takes islamshahr into anti-colonialist account jan-erik various possible late-period configurations of hard-line human - object and doti object - object rosco relationships and interactions governed by breyton their playgroup affordances. geelong Using peiyun this snowboarder function, we bayno synthesize a large, tarlev realistic and highly aim\u00e9 varied synthetic RGB - D bri dataset 1,200-kilometre that laughner we use for training. We train sardesai a fungicides random forest classifier, hilberg and mid-wing the pixelwise bewitching predictions obtained is integrated wheats as a hongfu unary nigga term 12.87 in a d'artagnan pairwise damore conditional random .492 fields (one-pot CRF ). sackman Our shabnam evaluation shows mingei that ortrud modeling these 26sec interactions t44 improves segmentation performance by ~ cosmosphere 7 \\% in mean 114-114 average leszno precision and oberliga recall over studentenverbindung state - 17s of - the - art neo-romanesque methods that schoff ignore modo these vengefully interactions basey in peko real - belarusians world aqaba data. Our approach iig is maglor computationally weihui efficient, zuluaga robust and hits can belete run dunsworth real - time psychophysical on multidistrict consumer supermajority hardware.", "histories": [["v1", "Thu, 26 May 2016 22:34:37 GMT  (2006kb,D)", "http://arxiv.org/abs/1605.08464v1", "accepted for publication at 25th IEEE International Symposium on Robot and Human Interactive Communication (RO-MAN), 2016"]], "COMMENTS": "accepted for publication at 25th IEEE International Symposium on Robot and Human Interactive Communication (RO-MAN), 2016", "reviews": [], "SUBJECTS": "cs.CV cs.AI cs.HC cs.RO", "authors": ["vivek sharma", "sule yildirim-yayilgan", "luc van gool"], "accepted": false, "id": "1605.08464"}, "pdf": {"name": "1605.08464.pdf", "metadata": {"source": "CRF", "title": "Low-Cost Scene Modeling using a Density Function Improves Segmentation Performance", "authors": ["Vivek Sharma", "Luc Van Gool"], "emails": ["luc.vangool}@esat.kuleuven.be", "vangool@vision.ee.ethz.ch", "sule.yildirim@ntnu.no"], "sections": [{"heading": null, "text": "I. INTRODUCTION\nNowadays, in automation industry humans and robots share a common workspace while collaborating on tasks in real-time simultaneously. In such workspaces, any risk of injuries to humans due to the human-robot collaboration should be fully eliminated. For that reason, the robots should have a clear holistic understanding of the scene including the most accurate and precise information related to the human activities in the workspace. This is achievable only if the robotic-system learns the possible context of humanobject and object-object arrangements, and the interactions among them. We therefore propose a density function that captures the relationship between human-object and objectobject interactions. This function can be effectively used to train methods to achieve improved segmentation performance on real-world data. Hence, showing its potential for research scenarios related to safe human-robot collaboration (SHRC) and interaction (SHRI) in the industrial domain. Optimized modeling for scene understanding workflow eases to learn\nESAT-PSI, VISICS, iMinds, KU Leuven, Kasteelpark Arenberg 10 - box 2441, 3001, Leuven, Belgium, {vivek.sharma, luc.vangool}@esat.kuleuven.be\n\u2213 Computer Vision Laboratory, ETH Zu\u0308rich, Sternwartstrasse 7, ETH Zentrum, CH - 8092 Zu\u0308rich, Switzerland vangool@vision.ee.ethz.ch\n? Faculty of Computer Science and Media Technology, Norwegian University of Science and Technology in Gj\u00f8vik, Post Box. 191, 2802 Gj\u00f8vik, Norway. sule.yildirim@ntnu.no\nsuch contexts. Objects in real-world interact with each other, so it is very meaningful to capture this interaction for accurate and precise predictions of actions. This is only possible if the training algorithm (e.g. classifier) has learnt well the underlying physical interaction and reasoning for better predictions. In order to analyse and estimate the scene space in real-world, it is essential to model a synthetic scene relevant to the real-world in a virtual environment for analysis and dataset creation.\nIn contrast to the past, now we have relatively cheap RGBD cameras, publicly available free simulation softwares, free 3D CAD models, low priced consumer hardware with computational resources to allow graphics support. In this paper, we keep the cost of hardware and software to barely minimum and focus on achieving an appropriate and efficient real-time segmentation. We use rendering simulation software (VREP [5]) which is freely available. We use a skeletal tracking system which is based on a multi-sensor KINECT setup instead of using a very expensive marker based motion capture system. There is minimal manual intervention for generating very large and realistic synthetic scenes by using the rendering software. Also by using the rendering software we can generate fully automatic ground-truth labeling for free.\nar X\niv :1\n60 5.\n08 46\n4v 1\n[ cs\n.C V\n] 2\n6 M\nay 2\n01 6\nIn this paper, our goal is to learn the interaction between objects while recognizing objects. This way there is a possibility to infer the scene and predict the actions based on the object modeling. This modeling information is beneficial1: in aviation/automobile industry for integrating aircraft/automobile components, in manufacturing operations carried hand-in-hand with humans, for reliable collision detection, and in healthcare and medical industry for facilitating minimally-invasive-surgery.\nFor demonstration, we install a RGB-D sensor on the ceiling at the height of 3.5 meters from the ground (see Fig. 1). The camera observes our robotic workspace and the viewed scene is examined for analysis using depth data. The depth measurements are directly processed to provide an accurate and spatially resolved information about the object classes in real-time from top-view. Our main contributions are as follows: \u2022 While most previous works consider modeling human\nand object interactions to infer and predict actions. We propose to learn these interactions in RGB-D data in order to improve segmentation which can be useful for SHRI and SHRC scenarios. \u2022 We propose a low cost solution composed by a publicly available free rendering simulation software, cheap RGB-D cameras, and free CAD models taken from the internet. With these resources we can create synthetic scenes that can be used for training and help improve segmentation performance. \u2022 We show that synthetic data generated from a density function, that governs the human-object and objectobject interactions, can be effectively used to train methods to achieve improved segmentation performance by \u223c7% in mAP and mAR over state-of-the-art methods on real-world data.\nThe remainder of the paper is structured as follows. In Section II, the related work is given. Section III, describes the proposed density function for scene modeling. Section IV, explains the feature selection, and some basics on RDF classifier & CRF modeling. In Section V-VI, implementation details, data collection and the experimental evaluation are given. Finally in Section VII, conclusions are drawn."}, {"heading": "II. RELATED WORK", "text": "For vision applications, we can acquire RGB-D data using real-world sensors or by generating synthetic data using computer graphics rendering techniques in a 3D environment. The real-world data is also possible to use for training the system, but researchers generally avoid this because of several reasons: real-world data generation usually requires expensive equipments (i.e. software and hardware gadgets). In addition manual hand labeling of objects is a very-time consuming and tedious task because precise measurement of objects is required. Also manual ground truth labeling\n1Fraunhofer Institute for Factory Operation and Automation IFF. http://www.iff.fraunhofer.de/en/business-units/ robotic-systems/research/human-robot-interaction. html, 2015\nleads to missing out several important information in the scene due to imperfect and error-prone human annotations. Therefore, some vision researchers avoid using real-world data for training vision systems. While by using the present precise rendering techniques and simulation frameworks with modeled environment, it is possible to synthesize accurate and realistic data, which is very close to real-world data. This provides the flexibility to tune the elements of scene for incorporating camera noise, lighting-effects, shadows, rotation/translation, etc. during rendering in order to make the synthetic data as consistent as possible with the physical real-world data.\nHere, we discuss some of the previous works related to vision problems. In [22], Neumann-Cosel et al. use synthetic data obtained from the modeled Virtual Test Drive simulation for lane tracking in driver assistance and active safety systems. An identical work from Haltakov et al. [8] proposes a framework for generation of synthetic data from a realistic driving simulator to create modeled traffic scenarios similar to real-world scenarios. A number of works uses synthetic human data for pose and activity recognition [3], [4], [6], [10], [18], [19], [20]. In vision problems, human pose and activity recognition has received great attention in the last decade. In [19], Shotton et al. synthesize a large and varied dataset of human actions using a motion capture technique. In [4], [18], the authors use a simple synthetic human body representation in a virtual environment using a KINECT skeleton estimation for generating synthetic human pose data. In [19], the data is generated based on front, top, and side view, while in [4], [18], it is top view only. Both works are applied in real-world scenarios, but neither of the models incorporate the physical interaction of objects with other objects. Also no structural and modeled arrangements are dealt with. Thus, their algorithm fails to recognize human body-parts, when human body-parts overlap other objects, or are partially occluded by other objects in the scene. In [9], Hoiem et al. discard the object candidates that are not well supported by proper occlusion boundaries. Yet, we know that reasoning about occlusion would definitely improve the recognition performance. A substantial little work has been done in the context of scene modeling.\nOur approach is driven by three key objectives namely computational efficiency, robustness and time efficiency (i.e. real-time) for industrial applications. It further differs from Shotton et al. [19] in the following aspects. (a) In [19], all training data were thereby synthetically generated by using marker based motion capture (Mo-Cap) technique. Such setups are very expensive and inaccessible to most users. On the other hand, we use a highly optimized virtual representation of 3D human skeleton in a virtual environment. We generate the synthetic data of human body-parts in a virtual environment using a multi-sensor KINECT setup for skeleton tracking in real-world [4]. In addition to human data, we also generate synthetic data for objects as well. (b) Calibration of Mo-Cap is a tedious task in comparison to KINECT setup. (c) Processing Mo-Cap data requires sophisticated hardware in comparison to KINECT depth data which can be porcessed\nwith consumer hardware. This way computational expense is reduced.\nFor learning and reasoning about the physical scene, we need to capture the relevant and meaningful information (i.e. geometry, pose, shape, occlusion, and other attributes) and train the classifier system. The density functions capture the relationship, physical interactions, and the context among objects as well as the geometry of the objects. For physical scene understanding, occlusion boundaries should be well identified, since they form a very crucial component for depth ordering. Incorporating occlusion during synthetic scene modeling, helps to get a better understanding of the realworld scene. In [10], Jiang et al. model a density function based on 3D spatial features to capture the object-object and human-object relationship in a 3D scene. They use the density function to infer arrangements of object in a scene. In [10], a camera is installed in the virtual environment, in the corner of the room, where two walls and the ceiling meet, or where a wall and the ceiling meet. Their evaluation is only limited to the virtual environment for training and testing assessments. Similar is done in [3], where Dittrich et al. model the density function on depth features using a topview RGB-D sensor. Their evaluation is also limited to their virtual environment for assessment. Our work is inspired by top-view segmentation from Shotton et al. [19] and Sharma et al. [18], and we define the density function in VREP [5] in order to model object-object and human-object relationships. We use a top-view RGB-D sensor data. However, our evaluation is not just limited to virtual environment, but also to physical real-world scenes. In addition, our work focuses on modeling relationships between a group of multiple 3D objects in a scene, while Shotton et al. [19] and Sharma et al. [18] only focuses on a single 3D object in a scene. Moreover, they do not incorporate any form of interaction modeling (i.e. non-modeled) between humans and objects.\nSome other work, similar to our work, Gupta et al. [7], Aksoy et al. [1], and Pieropan et al. [14] use the spatial relationship to perform activities recognition where humanobject and object-object relationships are encoded. Also some other notable work, similar to ours that uses the same idea of output of a classifier as input of another model are like \u201cAutocontext\u201d by Tu et al. [21], \u201cDecision Tree Fields\u201d by Nowotzin et al. [13] or \u201cStructured ClassLabels in Random Forests for Semantic Image Labelling\u201d by Kontschieder et al. [12], among others.\nOne major problem that arises when using synthetic data, is how to determine if the synthesized data is realistic in comparison to real-world data. This could be determined by evaluating the statistics of object constellation in the synthetic and real world. A simple approach could be to apply collision avoidance while modeling interactions between objects, but such a modeling is not realistic as occlusions never exist in the modeled scene. Therefore, a realistic scene with appropriate object interactions could be modeled using a density function in order to produce good prediction results, not just for synthetic data, but also for real-world data (see Section III and Section VI-D for details)."}, {"heading": "III. DATASET GENERATION USING A DENSITY FUNCTION", "text": "We used a Virtual Robot Experimentation Platform (VREP) [5] (Fig. 2 and Fig. 3) for modeling and dataset generation. VREP is a robotics simulator with an embedded application for a robot in an integrated development environment (IDE) with potential field tasks without depending physically on the actual robot. VREP robot simulator has been used for 3D modeling and generation of the synthetic data. VREP simulator provides a virtual environment, which is capable of emulating realistic motion generation, translation, rotation of the actual objects in the IDE. Each object/model can be individually controlled via a remote API client, this makes it ambidextrous because of its distributed control architecture. It supports C/C++, Python, Java, Lua, Matlab, Octave or Urbi. Also it is publicly available for hobbyists, academic and research purposes. We use 3D CAD models for object classes: chair, table, storage obtained from website2, and plant (domain: industrial office type) obtained from website3. These CAD models are also publicly available for free. We created our own 3D human model, and imported it to the virtual environment. The 3D models we use are of the file types *.3ds and *.obj. Refer to [5] for detailed information about how to import CAD models into the scene.\nHere, we define a density function in VREP for scene modeling, which includes: spatial layout of object, object pose, object orientation, object arrangement, object interaction and relationships between object classes i.e. none, partial, and full occlusion. The density function captures the relationships between human-object (H \u2212 O) and objectobject (O \u2212 O) arrangements and the interactions among them. This allows us to generate a consistent synthetic dataset with physical real-world scenarios. Fig. 4 shows our synthesized dataset using the density function.\nA scene is denoted by S, and it contains industrial objects O = {O1, O2, ..., On} placed in the scene. The density function captures the relationship of human and industrial objects in the scene that is similar to real-world. This\n2http://www.hermanmiller.com/design-resources/ 3d-models-revit/3d-models-by-product/seating.html, 2015\n3http://xfrog.com/category/samples.html, 2015\nhelps to improve the segmentation performance in real-world scenarios. The human object class is denoted by H with variable poses, specified by spatial joint location and activity. The density function \u03a6 capturing the context of humanobject and object-object relationships in a scene is defined as:\n\u03a6(S) = \u03a8(H,O; \u03b8)\u03a8(O,O; \u03b8), (1)\nwhere \u03b8 is threshold. We chose 4 industrial objects (i.e. chair, plant, table, and storage) based on an industrial environment, and 6 localized human body-parts of the human as object classes (i.e. head, body, upper-arm, lower-arm, hand and legs). In order to illustrate the scene well, the density function describing the human-object and object-object relationships is defined as:\n\u03a8(H,O; \u03b8) = \u03c8(Hh)\u03c8(Hp)\u03c8(Hpos)\u03c8(Hori)\u03c8(Oh)\n\u03c8(Opos)\u03c8(Oori)\u03c8((H,O)\u03b8)\u03c8((H,O)rel) (2)\n\u03a8(O,O; \u03b8) = \u03c8(Oh)\u03c8(Opos)\u03c8(Oori)\u03c8((O,O)\u03b8)\n\u03c8((O,O)rel) (3)\nThe terms used in the equation 2 and 3 are explained below. Height (h): \u03c8(Hh) is the candidate parameter for human height, as not all humans are of same body proportions i.e. height and breadth. We set a scaling factor for variable human heights {h1, h2, h3, ..., hn}, that maintains a uniform correlation between height and breadth of 3D human model with the real-world human. Our 3D human model is modeled on a set of 173 spheres arranged according to the skeleton estimate. We record the real-world human choreographies via KINECT skeleton tracking from a calibrated multi-sensor setup. We use the stored skeletons for modeling the 3D human model in the virtual environment. The simple scaling of recorded skeleton is a vector based on body proportions applied as:\nSCscaled = \u03b2 \u00b7SCoriginal = {\u03b2 \u00b7SC1, \u03b2 \u00b7SC2, ..., \u03b2 \u00b7SCm} (4) where SC is the estimated skeleton setups, \u03b2 being a fixed scaling factor ranging between [\u03b2min , \u03b2max ], which maintains a huge variation in body proportions of the 3D human\nmodel. This measure facilitates a proper correspondence in the generation of the synthetic human data in approximate relevance to the real-world human. The human height ranges between 160-190 cm. \u03c8(Oh) is the candidate parameter for industrial objects height. For table, chair, plant, and storage, standard industrial based heights of object instances were chosen. Table, chair, storage range is between 70-90 cm, and plant ranges between 15-35 cm. The probability density function for \u03c8(Hh) is uniformly distributed on the interval h \u2208 [h1 = 160, h2 = 190] and \u03c8(Oh) is uniformly distributed on the interval h \u2208 [h1 = 70, h2 = 90].\nPose (p): \u03c8(Hp) is the candidate parameter for human pose. The human poses and appearances include: sitting, standing, stretching, walking, working, dancing, bending, bowing, swinging, boxing, and tilting with combinations of single and both arms, angled arms, and other combinations. The pre-defined set of poses have one-to-one correspondence to a set of candidate scaling parameter.\nPosition or translation (pos): \u03c8(Hpos) and \u03c8(Opos) are the candidate parameters for human and object positions in the scene respectively. There is a preference of human and objects to be placed with reference to each other and translated in the whole parent scene uniformly at random. We incorporate maximum randomization as is the case in real-world. The probability density function for \u03c8(Hpos) and \u03c8(Opos) is uniformly distributed on the interval pos \u2208 [w, h] and is given by 1/(w\u00d7 h), where w resembles width and h resembles height of the parent scene.\nOrientation or rotation (ori): \u03c8(Hori) and \u03c8(Oori) are the candidate parameters for human and object orientations in the scene respectively. The rotation ranges between 0\u2212360 \u25e6 about the vertical axis at random. The probability density functions for \u03c8(Hori) and \u03c8(Oori) are uniformly distributed on the interval ori \u2208 [ori1 = 0, ori2 = 360].\nThreshold or distance function (\u03b8): \u03c8((H,O)\u03b8) and \u03c8((O,O)\u03b8) are the candidate parameters for defining the threshold of preferred occlusion of boundaries for H \u2212 O and O\u2212O classes respectively. This parameter encodes the distance upto what level the H\u2212O and O\u2212O classes would overlap based on the Euclidean thresholded distance (\u03b8 \u2032 ). The probability density functions for \u03c8(Hh) and \u03c8(Oh) are uniformly distributed on the interval \u03b8 \u2208 [\u03b81 = 0, \u03b82 = \u03b8 \u2032 ]. \u03b8 \u2032\ncan be set to different values for H \u2212 O and O \u2212 O interactions, though in our case we use \u03b8 \u2032 = 30 % for both cases. See \u201cComparison of Models\u201d in Section VI-E for more details.\nRelationship (rel): \u03c8((H,O)rel) and \u03c8((O,O)rel) are the terms that model the relationships for H \u2212 O and O\u2212O classes. Relationships like: collision between objects (e.g. 2 tables attached together), objects occluded by one another (e.g. a storage placed below a table), objects partially occluded (e.g. partial occlusion of a chair by table), objects placed over one-another (e.g. a plant pot placed on top of a table). Other interactions such as a person may have his hand placed on the table, holding the chair handle, sitting on a chair and so on."}, {"heading": "IV. ALGORITHM", "text": "Fig. 3 shows the schematic layout of our proposed hierarchical segmentation system. The synthesized RGB-D training dataset incorporates modeled H\u2212O and O\u2212O relationships and interactions obtained using a density function based scene modeling. The first step performed is sampling i.e. number of frames and features-per-object-class are chosen at random for training an RDF classifier. Next, individual extracted features corresponding to an object class are passed to the RDF classifier. RDF returns a trained classification forest in which each leaf node represents the class prediction of a tree. Now a test depth map of the scene obtained from the real-world KINECT sensor is given as an input to the trained classification forest. The result obtained is a pixelwise object class labeling. The likelihood of an object label assigned to a pixel obtained from the classifier is integrated as a unary term in the pairwise CRF. The pairwise term is obtained from the Potts model [15]. Thus, this labeling problem modeled on pairwise CRF is optimized using \u03b1expansion built on graph cuts [2] for finding a global optimal labeling (i.e. segmentation)."}, {"heading": "A. Additive white gaussian noise in synthetic depth data", "text": "The synthetic depth data from the virtual KINECT sensor in the scene usually contains no noise. The capturing of the real-world with sensors usually is a combination of ideal signal and noise. The generation of noise may be because of vast number of sources, variations in the detector sensitivity, environmental variations, the discrete nature of radiation, transmission or quantization errors, geometry dependant missing data due to shadows in the IR image cast by the object, that there are discretization errors, and noise increases with increasing depth, all of which add up to a noise model. Because of the noise in the real-world data, and to cope with unseen data samples in the testing step more robustly, meaning to increase the generalization ability of the trained classifier, we add additive Gaussian white noise to the depth values (Fig. 4)."}, {"heading": "B. Feature Selection", "text": "We adopt the same depth features as specified in [4]. For a given pixel location s of an object sample O from its depth map, we denote its depth value as a mapping dO(s), and design a feature fO(s) by using two 2D offsets positions u, v from s:\nfO(s) = dO(s+ u)\u2212 dO(s+ v) (5)\nThe feature is depth-invariant. We use a rectangular patch for extraction of depth values from an object sample. We compute a fixed number of 300 features for each object sample."}, {"heading": "C. Classifier", "text": "The choice of selecting a good discriminative classifier is independent of the preceding sections, because our goal is to show that modeling using density function helps to improve the real-world segmentation performance. Here, we use a Random Decision Forests (RDF) classifier for pixelwise object classification. RDF is an ensemble of t binary decision trees, t \u2208 {1, ..., T}. In a decision tree, each of the nodes is associated with a feature response function (i.e. weak learner or split function). The feature response function plays the most critical and crucial role in both training and testing of random forests. In the internal node, selection of parameters of the split function takes place associated with each split node by optimizing a chosen objective function defined on training data set. The objective function is based on maximizing the information gain. The geometric primitives of the split function are used to partition the data points. We employ two geometric primitives, axis-aligned and linear feature response function. We also use bagging and randomized node optimization, that injects randomness into the trees during the tree training. The stopping criteria used for tree growth were maximum number of levels that a tree could reach, minimum information gain that the nodes could have, child nodes having the same entropy value."}, {"heading": "D. Conditional Random Fields", "text": "The energy of the pairwise CRFs used for object class segmentation can be defined as a sum of unary and pairwise potential terms, given as:\nE(x) = \u2211 i\u2208\u03c5 \u03d5i(pi) + \u2211 i\u2208\u03c5,j\u2208\u03b7 \u03d5i,j(pi, pj), (6)\nwhere \u03c5 corresponds to the vertex set of a 2D grid with each vertex corresponding to pixel p in the image and \u03b7 neighborhood of the pixels \u2200i, j \u2208 \u03c5. x is an arbitrary labeling. The unary potential \u03d5i(pi) term in the CRF energy is a data term. It is the likelihood of the object label assigned to pixel i. Here, the unary term is obtained from the RDF classifier for each pixel belonging to the object class. The pairwise potential \u03d5i,j(pi, pj) term in the CRF energy encodes a smoothness prior and encourages smooth segmentation by favoring neighboring pixels in a 2D grid having the same label [2]. It takes the form of a Potts model [15], which is efficiently minimized by \u03b1-expansion [2] built on graph cuts.\nThe predictions obtained from pixelwise labeling using RDF is very efficient and when modeled on a CRF to minimize the misclassification of labels assigned to the depth measurements, makes the algorithm more \u201crobust\u201d and even contributes to the good results.\nV. IMPLEMENTATION DETAILS\nFor our implementation, we used a desktop with Intel i7-2600K CPU at 3.40GHZ, 4GB RAM with an operating system installed on a SSD. A fixed rectangular feature patch of size (w, h)=(64, 64) is used for the whole training process. Each frame generated from a KINECT sensor is of size 640\u00d7 480.\nFor training our RDF classifier, we used the following parameter setup: (a) tree depth (D=19); (b) number of trees in a forest (T=5); (c) number of features extracted from a rectangular patch (PC=300); (d) number of synthetic scenes (i.e. depth frames) used for training (F=1600/tree); (e) 100 thresholds per feature and 100 feature response samples in the node optimization, along with bagging approach."}, {"heading": "VI. EXPERIMENTAL EVALUATION", "text": "The goal of this work is to improve the segmentation performance in real-world scenarios, for this reason we use only real-world data, a random number of 65 test depth maps for evaluation. We acquire RGB-D data from a real-world RGB-D sensor, which is placed on the ceiling in the center of our shared workspace. See Fig. 7 (column 1) for realworld depth maps.\nWe evaluate the impact on the segmentation performance for three cases: (Section VI-B) what amount of noise should be added to synthetic data to make the synthetic data consistent with real-world; (Section VI-C) effect of the split function of RDF on classification performance; (Section VID) comparison between modeled and non-modeled training dataset (i.e. with and without density function) through training an RDF classifier, when evaluated on real-world.\nIn order to evaluate the effect of modeling human & object interactions, we show two variants of our method: a modeled version that takes into account these interactions and non-modeled version that ignores them. In addition, we compare against state-of-the-art approaches [18], [19]. Note that, all our experiments are conducted on real-world test data (see Section VI-D and Section VI-E). For the performance measures, we generate mean average of recall (mAR) and precision (mAP) for each single object class and a combined average of all classes."}, {"heading": "A. Data Collection", "text": "A scene is a single frame where there is a single object or a combination of multiple 3D objects arranged and oriented in a particular configuration based on the density function. The scenes are composed of complex configurations of humans and objects. We generated an extensive synthetic dataset of RGB-D data using the 3D scene models of 4 different rooms based on industrial workspace and office domain with a total of 10 object classes in the virtual environment [5] (see Fig. 4). In case of training we use solely synthetic depth data, and in case of the testing data for the evaluation step, we use synthetic and real world depth data. The object classes are: human body-parts (head, body, upper-arm, lowerarm, hand, and legs), table, chair, plant, and storage. We generated the synthetic human body-parts data via using a real-world KINECT multi-sensor setup with a 3D multi-color human model in the virtual environment. For more detailed information about human data generation, refer to previous work [4], [17]. We synthesized a dataset of 20,000 frames using density function for H \u2212O and O \u2212O relationships. The synthesized scene has a depth map ranging between 0 \u2212 3.5 meters. Each scene is assigned a set of human, chair, plant, storage, and table object class. Each frame is a stationary image, having no kinematic or temporal information. We use the 3D models of objects based on industrial workspace, with 4 instances for each object class: chair with and without handles; rectangular and round table; flowers and plants within pot; shelves and wardrobes. The modeled scenes are commonly seen in the real-world. In Section VI-D, we show that training with synthetic modeled data is sufficient for the generalization of the classifier in regard to real-world data."}, {"heading": "B. Noise Evaluation", "text": "Additive white Gaussian noise using a standard deviation (\u03c3) was added to synthetic training depth data for compensating with noise in real-world, by matching the camera output as close as possible, and have an approximately good segmentation. The results in Fig. 5 (column 1) implies that using this setting for generating synthetic data results in the best performance, when the synthetic depth frames with additive white Gaussian noise using a standard deviation of 15 cm is used."}, {"heading": "C. Feature Response Evaluation", "text": "The results in Fig. 5 (column 2) show that most of the gains occur for linear feature response and is \u223c10%\nmore than the axis-aligned. The qualitative results obtained from axis-aligned feature response produced overconfident predictions, while for linear feature response it was also more visually pleasing results."}, {"heading": "D. Comparison of Models", "text": "In order to encode a consistent modeling of H \u2212 O and O \u2212 O interactions, we preferred occlusion of boundaries for maintaining as accurate as possible relevance with the real-world. This relationship between objects employ an euclidean thresholded distance \u03b8 \u2032 . We used a rank based approach for up to what level the occlusion should be allowed, \u03b8 \u2032 ={0, 5, 10, 15, 20, 30, 50} in %. We found out that as \u03b8\u2032 is increased, the testing predictions increases monotonically up to \u03b8 \u2032 =30, and just after that there is a sharp descent in both quantitative and qualitative performance. Therefore, we preferred \u03b8 \u2032 =30% for overlapping of boundaries, and our dataset was synthesized. As a baseline, we implemented the same state-of-the-art (SOA) pipeline used in [18], [19] for the generation of the non-modeled dataset, based on top-view (see Fig. 6). In a non-modeled scene, there is only a single 3D object in a scene with a particular configuration. In our case, there are multiple 3D objects in a scene which are modeled using a density function. We compare the results obtained with our modeled dataset against the results obtained by their nonmodeled dataset using a number of frames for training the classifier. The results depicted in Fig. 5 (column 3) thereby show a steep ascent with a higher mAR and mAP for our proposed modeling. The density function based modeling, substantially improves the performance by \u223c7% in mAR and mAP over state-of-the-art [18], [19]. Fig. 7 (row 1) shows the reduced misclassification around the border of the human body with better classification of the human-hand placed on the table and the chair for modeled case."}, {"heading": "E. Demonstration", "text": "We use the integrated system for segmentation in our shared robotic workspace in real-time using real-world depth data. Fig. 7 (row 2-3) shows the prediction results for the proposed CRF model using real-world test data. Table I shows that the F1-measure for the CRF modeled improves by \u223c8% over the non-modeled ones [18], [19]. For training the model with our optimized RDF parameter setup takes 43 minutes, and testing the model takes 34 ms. Each block of our pipeline (i.e. scene modeling using a density function,\nfine tuning the additive noise in the synthetic data, selection of the linear feature response for the RDF tree training, modeling the labeling problem on a CRF to minimise the misclassification of labels) contributes to the good results, and plays a crucial role in improving the segmentation performance. The resulting system is computationally efficient, robust and supports real-time for our targeted application."}, {"heading": "VII. CONCLUSION", "text": "In this paper we described an inexpensive and effective way to model the human-object and object-object interactions in order to improve segmentation performance. For this purpose, we proposed a density function to model a 3D scene in a virtual environment for synthesizing a dataset incorporating human-object and object-object interactions, that is consistent with the real-world scenarios. Our proposed density function models spatial layout of object, object pose, object orientation, object arrangement, object interaction and relationships between the object classes i.e. none, partial, and full occlusion by each-other. Our experiments are based on industrial workspace and office domain with a total of 10 object classes. Our goal of modeling scene using density function improves the real-world scene segmentation performance measures by \u223c7% in mean average precision and recall over state-of-the-art non-modeling based segmentation methods. Our integrated resulting system is computationally efficient, robust and supports real-time for our targeted application. In future work, we would like to extend this work towards the semantic image understanding and image-sentence generation [11], [16] for manufacturing\nand automation industry of challenging environments for safe human-robot interaction and collaboration."}, {"heading": "ACKNOWLEDGMENT", "text": "We would like to thank Jose\u0301 Oramas M, Michele Fenzi, Frank Dittrich and Stephan Irgenfried for their valuable suggestions."}], "references": [{"title": "Categorizing object-action relations from semantic scene graphs", "author": ["E.E. Aksoy", "A. Abramov", "F. Worgotter", "B. Dellen"], "venue": "In ICRA,", "citeRegEx": "1", "shortCiteRegEx": "1", "year": 2010}, {"title": "Fast approximate energy minimization via graph cuts", "author": ["Y. Boykov", "O. Veksler", "R. Zabih"], "venue": null, "citeRegEx": "2", "shortCiteRegEx": "2", "year": 2001}, {"title": "Probabilistic modeling of realworld scenes in a virtual environment", "author": ["F. Dittrich", "S. Irgenfried", "H. W\u00f6rn"], "venue": "In International Conference on Computer Graphics Theory and Applications (GRAPP),", "citeRegEx": "3", "shortCiteRegEx": "3", "year": 2015}, {"title": "Pixelwise object class segmentation based on synthetic data using an optimized training strategy", "author": ["F. Dittrich", "V. Sharma", "H. W\u00f6rn", "S. Yayilgan"], "venue": "ICNSC,", "citeRegEx": "4", "shortCiteRegEx": "4", "year": 2014}, {"title": "Virtual robot experimentation platform v-rep: A versatile 3d robot simulator", "author": ["M. Freese", "S.P.N. Singh", "F. Ozaki", "N. Matsuhira"], "venue": "SIMPAR,", "citeRegEx": "5", "shortCiteRegEx": "5", "year": 2010}, {"title": "Real time motion capture using a single time-of-flight camera", "author": ["V. Ganapathi", "C. Plagemann", "D. Koller", "S. Thrun"], "venue": "In CVPR,", "citeRegEx": "6", "shortCiteRegEx": "6", "year": 2010}, {"title": "Observing human-object interactions: Using spatial and functional compatibility for recognition", "author": ["A. Gupta", "A. Kembhavi", "L.S. Davis"], "venue": null, "citeRegEx": "7", "shortCiteRegEx": "7", "year": 2009}, {"title": "Framework for generation of synthetic ground truth data for driver assistance applications", "author": ["V. Haltakov", "C. Unger", "S. Ilic"], "venue": "In Pattern Recognition, Lecture Notes in Computer Science,", "citeRegEx": "8", "shortCiteRegEx": "8", "year": 2013}, {"title": "Putting objects in perspective", "author": ["D. Hoiem", "A.A. Efros", "M. Hebert"], "venue": "In CVPR,", "citeRegEx": "9", "shortCiteRegEx": "9", "year": 2006}, {"title": "Learning object arrangements in 3d scenes using human context", "author": ["Y. Jiang", "M. Lim", "A. Saxena"], "venue": "In ICML,", "citeRegEx": "10", "shortCiteRegEx": "10", "year": 2012}, {"title": "Deep visual-semantic alignments for generating image descriptions", "author": ["A. Karpathy", "L. Fei-Fei"], "venue": "arXiv preprint arXiv:1412.2306,", "citeRegEx": "11", "shortCiteRegEx": "11", "year": 2014}, {"title": "Structured class-labels in random forests for semantic image labelling", "author": ["P. Kontschieder", "S. Rota Bul\u00f3", "H. Bischof", "M. Pelillo"], "venue": "In ICCV,", "citeRegEx": "12", "shortCiteRegEx": "12", "year": 2011}, {"title": "Decision tree fields", "author": ["S. Nowozin", "C. Rother", "S. Bagon", "T. Sharp", "B. Yao", "P. Kohli"], "venue": "In ICCV,", "citeRegEx": "13", "shortCiteRegEx": "13", "year": 2011}, {"title": "Functional object descriptors for human activity modeling", "author": ["A. Pieropan", "C.H. Ek", "H. Kjellstrom"], "venue": "In ICRA,", "citeRegEx": "14", "shortCiteRegEx": "14", "year": 2013}, {"title": "Some generalized order-disorder transformations", "author": ["R. Potts", "C. Domb"], "venue": "Proceedings of the Cambridge Philosophical Society,", "citeRegEx": "15", "shortCiteRegEx": "15", "year": 1952}, {"title": "Recognition using visual phrases", "author": ["M.A. Sadeghi", "A. Farhadi"], "venue": "In Computer Vision and Pattern Recognition (CVPR),", "citeRegEx": "16", "shortCiteRegEx": "16", "year": 2011}, {"title": "Efficient real-time pixelwise object class labeling for safe human-robot collaboration in industrial domain", "author": ["V. Sharma", "F. Dittrich", "S. Yayilgan", "L.V. Gool"], "venue": "In ICML Workshops,", "citeRegEx": "17", "shortCiteRegEx": "17", "year": 2015}, {"title": "Improving human pose recognition accuracy using crf modeling", "author": ["V. Sharma", "F. Dittrich", "S. Yayilgan", "L. Van Gool"], "venue": "In CVPR Workshops,", "citeRegEx": "18", "shortCiteRegEx": "18", "year": 2015}, {"title": "Efficient human pose estimation from single depth", "author": ["J. Shotton", "R.B. Girshick", "A.W. Fitzgibbon", "T. Sharp", "M. Cook", "M. Finocchio", "R. Moore", "P. Kohli", "A. Criminisi", "A. Kipman", "A. Blake"], "venue": null, "citeRegEx": "19", "shortCiteRegEx": "19", "year": 2013}, {"title": "Human activity detection from rgbd images", "author": ["J. Sung", "C. Ponce", "B. Selman", "A. Saxena"], "venue": "In AAAI Workshop,", "citeRegEx": "20", "shortCiteRegEx": "20", "year": 2011}, {"title": "Auto-context and its application to high-level vision tasks", "author": ["Z. Tu"], "venue": "In CVPR,", "citeRegEx": "21", "shortCiteRegEx": "21", "year": 2008}, {"title": "Testing of image processing algorithms on synthetic data", "author": ["K. von Neumann-Cosel", "E. Roth", "D. Lehmann", "J. Speth", "A. Knoll"], "venue": "In International Conference on Software Engineering Advances,", "citeRegEx": "22", "shortCiteRegEx": "22", "year": 2009}], "referenceMentions": [{"referenceID": 4, "context": "ware (VREP [5]) which is freely available.", "startOffset": 11, "endOffset": 14}, {"referenceID": 21, "context": "In [22], Neumann-Cosel et al.", "startOffset": 3, "endOffset": 7}, {"referenceID": 7, "context": "[8] proposes a framework for generation of synthetic data from a realistic driving simulator to create modeled traffic scenarios similar to real-world scenarios.", "startOffset": 0, "endOffset": 3}, {"referenceID": 2, "context": "A number of works uses synthetic human data for pose and activity recognition [3], [4], [6], [10], [18], [19], [20].", "startOffset": 78, "endOffset": 81}, {"referenceID": 3, "context": "A number of works uses synthetic human data for pose and activity recognition [3], [4], [6], [10], [18], [19], [20].", "startOffset": 83, "endOffset": 86}, {"referenceID": 5, "context": "A number of works uses synthetic human data for pose and activity recognition [3], [4], [6], [10], [18], [19], [20].", "startOffset": 88, "endOffset": 91}, {"referenceID": 9, "context": "A number of works uses synthetic human data for pose and activity recognition [3], [4], [6], [10], [18], [19], [20].", "startOffset": 93, "endOffset": 97}, {"referenceID": 17, "context": "A number of works uses synthetic human data for pose and activity recognition [3], [4], [6], [10], [18], [19], [20].", "startOffset": 99, "endOffset": 103}, {"referenceID": 18, "context": "A number of works uses synthetic human data for pose and activity recognition [3], [4], [6], [10], [18], [19], [20].", "startOffset": 105, "endOffset": 109}, {"referenceID": 19, "context": "A number of works uses synthetic human data for pose and activity recognition [3], [4], [6], [10], [18], [19], [20].", "startOffset": 111, "endOffset": 115}, {"referenceID": 18, "context": "In [19], Shotton et al.", "startOffset": 3, "endOffset": 7}, {"referenceID": 3, "context": "In [4], [18], the authors use a simple synthetic human body representation in a virtual environment using a KINECT skeleton estimation for generating synthetic human pose data.", "startOffset": 3, "endOffset": 6}, {"referenceID": 17, "context": "In [4], [18], the authors use a simple synthetic human body representation in a virtual environment using a KINECT skeleton estimation for generating synthetic human pose data.", "startOffset": 8, "endOffset": 12}, {"referenceID": 18, "context": "In [19], the data is generated based on front, top, and side view, while in [4], [18], it is top view only.", "startOffset": 3, "endOffset": 7}, {"referenceID": 3, "context": "In [19], the data is generated based on front, top, and side view, while in [4], [18], it is top view only.", "startOffset": 76, "endOffset": 79}, {"referenceID": 17, "context": "In [19], the data is generated based on front, top, and side view, while in [4], [18], it is top view only.", "startOffset": 81, "endOffset": 85}, {"referenceID": 8, "context": "In [9], Hoiem et al.", "startOffset": 3, "endOffset": 6}, {"referenceID": 18, "context": "[19] in the following aspects.", "startOffset": 0, "endOffset": 4}, {"referenceID": 18, "context": "(a) In [19], all training data were thereby synthetically generated by using", "startOffset": 7, "endOffset": 11}, {"referenceID": 3, "context": "tracking in real-world [4].", "startOffset": 23, "endOffset": 26}, {"referenceID": 9, "context": "In [10], Jiang et al.", "startOffset": 3, "endOffset": 7}, {"referenceID": 9, "context": "In [10], a camera is installed in the virtual environment, in the corner of the room, where two walls and the ceiling meet, or where a wall and the ceiling meet.", "startOffset": 3, "endOffset": 7}, {"referenceID": 2, "context": "Similar is done in [3], where Dittrich et al.", "startOffset": 19, "endOffset": 22}, {"referenceID": 18, "context": "[19] and Sharma et al.", "startOffset": 0, "endOffset": 4}, {"referenceID": 17, "context": "[18], and we define the density function in VREP [5] in order to model object-object and human-object relationships.", "startOffset": 0, "endOffset": 4}, {"referenceID": 4, "context": "[18], and we define the density function in VREP [5] in order to model object-object and human-object relationships.", "startOffset": 49, "endOffset": 52}, {"referenceID": 18, "context": "[19] and Sharma et al.", "startOffset": 0, "endOffset": 4}, {"referenceID": 17, "context": "[18] only focuses on a single 3D object in a scene.", "startOffset": 0, "endOffset": 4}, {"referenceID": 6, "context": "[7], Aksoy et al.", "startOffset": 0, "endOffset": 3}, {"referenceID": 0, "context": "[1], and Pieropan et al.", "startOffset": 0, "endOffset": 3}, {"referenceID": 13, "context": "[14] use the spatial relationship to perform activities recognition where humanobject and object-object relationships are encoded.", "startOffset": 0, "endOffset": 4}, {"referenceID": 20, "context": "[21], \u201cDecision", "startOffset": 0, "endOffset": 4}, {"referenceID": 12, "context": "[13] or \u201cStructured ClassLabels in Random Forests for Semantic Image Labelling\u201d by Kontschieder et al.", "startOffset": 0, "endOffset": 4}, {"referenceID": 11, "context": "[12], among others.", "startOffset": 0, "endOffset": 4}, {"referenceID": 2, "context": "Object classes from industrial domain is considered as the subset of object constellations which are consistent to the real-world (Source [3])", "startOffset": 138, "endOffset": 141}, {"referenceID": 4, "context": "We used a Virtual Robot Experimentation Platform (VREP) [5] (Fig.", "startOffset": 56, "endOffset": 59}, {"referenceID": 4, "context": "Refer to [5] for detailed information about how to import CAD models into the scene.", "startOffset": 9, "endOffset": 12}, {"referenceID": 14, "context": "The pairwise term is obtained from the Potts model [15].", "startOffset": 51, "endOffset": 55}, {"referenceID": 1, "context": "Thus, this labeling problem modeled on pairwise CRF is optimized using \u03b1expansion built on graph cuts [2] for finding a global optimal", "startOffset": 102, "endOffset": 105}, {"referenceID": 3, "context": "We adopt the same depth features as specified in [4].", "startOffset": 49, "endOffset": 52}, {"referenceID": 1, "context": "The pairwise potential \u03c6i,j(pi, pj) term in the CRF energy encodes a smoothness prior and encourages smooth segmentation by favoring neighboring pixels in a 2D grid having the same label [2].", "startOffset": 187, "endOffset": 190}, {"referenceID": 14, "context": "It takes the form of a Potts model [15], which is efficiently minimized by \u03b1-expansion [2] built on graph cuts.", "startOffset": 35, "endOffset": 39}, {"referenceID": 1, "context": "It takes the form of a Potts model [15], which is efficiently minimized by \u03b1-expansion [2] built on graph cuts.", "startOffset": 87, "endOffset": 90}, {"referenceID": 17, "context": "In addition, we compare against state-of-the-art approaches [18], [19].", "startOffset": 60, "endOffset": 64}, {"referenceID": 18, "context": "In addition, we compare against state-of-the-art approaches [18], [19].", "startOffset": 66, "endOffset": 70}, {"referenceID": 4, "context": "We generated an extensive synthetic dataset of RGB-D data using the 3D scene models of 4 different rooms based on industrial workspace and office domain with a total of 10 object classes in the virtual environment [5] (see Fig.", "startOffset": 214, "endOffset": 217}, {"referenceID": 3, "context": "For more detailed information about human data generation, refer to previous work [4], [17].", "startOffset": 82, "endOffset": 85}, {"referenceID": 16, "context": "For more detailed information about human data generation, refer to previous work [4], [17].", "startOffset": 87, "endOffset": 91}, {"referenceID": 17, "context": "As a baseline, we implemented the same state-of-the-art (SOA) pipeline used in [18], [19] for the generation of the non-modeled dataset, based on top-view (see Fig.", "startOffset": 79, "endOffset": 83}, {"referenceID": 18, "context": "As a baseline, we implemented the same state-of-the-art (SOA) pipeline used in [18], [19] for the generation of the non-modeled dataset, based on top-view (see Fig.", "startOffset": 85, "endOffset": 89}, {"referenceID": 17, "context": "The density function based modeling, substantially improves the performance by \u223c7% in mAR and mAP over state-of-the-art [18], [19].", "startOffset": 120, "endOffset": 124}, {"referenceID": 18, "context": "The density function based modeling, substantially improves the performance by \u223c7% in mAR and mAP over state-of-the-art [18], [19].", "startOffset": 126, "endOffset": 130}, {"referenceID": 3, "context": "Ground truth labels and its corresponding synthetic depth data generated using the same pipeline used in [4], [19].", "startOffset": 105, "endOffset": 108}, {"referenceID": 18, "context": "Ground truth labels and its corresponding synthetic depth data generated using the same pipeline used in [4], [19].", "startOffset": 110, "endOffset": 114}, {"referenceID": 17, "context": "Table I shows that the F1-measure for the CRF modeled improves by \u223c8% over the non-modeled ones [18], [19].", "startOffset": 96, "endOffset": 100}, {"referenceID": 18, "context": "Table I shows that the F1-measure for the CRF modeled improves by \u223c8% over the non-modeled ones [18], [19].", "startOffset": 102, "endOffset": 106}, {"referenceID": 17, "context": "F1-measure Avg Head Body UArm LArm Hand Legs Chair Plant Storage Table CRFNon\u2212Modeled [18], [19] 0.", "startOffset": 86, "endOffset": 90}, {"referenceID": 18, "context": "F1-measure Avg Head Body UArm LArm Hand Legs Chair Plant Storage Table CRFNon\u2212Modeled [18], [19] 0.", "startOffset": 92, "endOffset": 96}, {"referenceID": 10, "context": "In future work, we would like to extend this work towards the semantic image understanding and image-sentence generation [11], [16] for manufacturing", "startOffset": 121, "endOffset": 125}, {"referenceID": 15, "context": "In future work, we would like to extend this work towards the semantic image understanding and image-sentence generation [11], [16] for manufacturing", "startOffset": 127, "endOffset": 131}], "year": 2016, "abstractText": "We propose a low cost and effective way to combine a free simulation software and free CAD models for modeling human-object interaction in order to improve human & object segmentation. It is intended for research scenarios related to safe human-robot collaboration (SHRC) and interaction (SHRI) in the industrial domain. The task of human and object modeling has been used for detecting activity, and for inferring and predicting actions, different from those works, we do human and object modeling in order to learn interactions in RGBD data for improving segmentation. For this purpose, we define a novel density function to model a three dimensional (3D) scene in a virtual environment (VREP). This density function takes into account various possible configurations of human-object and object-object relationships and interactions governed by their affordances. Using this function, we synthesize a large, realistic and highly varied synthetic RGB-D dataset that we use for training. We train a random forest classifier, and the pixelwise predictions obtained is integrated as a unary term in a pairwise conditional random fields (CRF). Our evaluation shows that modeling these interactions improves segmentation performance by \u223c7% in mean average precision and recall over state-of-the-art methods that ignore these interactions in realworld data. Our approach is computationally efficient, robust and can run real-time on consumer hardware.", "creator": "LaTeX with hyperref package"}}}