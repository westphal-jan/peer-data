{"id": "1606.01623", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "6-Jun-2016", "title": "Position-Indexed Formulations for Kidney Exchange", "abstract": "A tindale kidney exchange is an evacuating organized rodange barter caddis market padawan where dereliction patients hunkin in hankies need of a kidney swap willing krawitz but incompatible donors. Determining an optimal darkwave set yandle of illgner exchanges chirinos is theoretically faubel and empirically z-wave hard. dinorscio Traditionally, fshinzawa@globe.com exchanges perphenazine took vacante place one-game in lasiocampidae cycles, hardcovers with each participating patient - ayllon donor pair both cumulant giving and atmar receiving husting a kidney. schlachter The recent 5,669 introduction musliu of bm&f chains, hapsburgs where a donor without vertical-lift a fastidiously paired menstruation patient lins triggers a sequence laidler of timbiriche donations educative without saawariya requiring a birkenau kidney wok in enemy return, increased the luek efficacy 1657 of warioware fielded 84-85 kidney exchanges - - - nonguests while pinit also dramatically raising the gamberini empirical patee computational alport hardness of clearing the eesti market in practice. 17.72 While 3.0-3 chains rached can financiers be charreyre quite long, unbounded - mccloud length chains are not desirable: stupsk planned rekar donations nt1 can fail bundibugyo before hakk\u00e2ri transplant for a variety zoc of reasons, and paloverde the failure of triticeae a single berggren donation causes suret the bizinsidersfgate.com rest litvinova of that 6.26 chain boucar to fail, nsg so baldoni parallel shorter ab-soul chains are volendam better 3,338 in o\u2019connor practice.", "histories": [["v1", "Mon, 6 Jun 2016 06:16:36 GMT  (2675kb,D)", "https://arxiv.org/abs/1606.01623v1", "Full version of paper to appear at the ACM Conference on Economics and Computation (EC-16)"], ["v2", "Fri, 10 Jun 2016 22:39:37 GMT  (2683kb,D)", "http://arxiv.org/abs/1606.01623v2", "Appeared at the ACM Conference on Economics and Computation (EC-16)"]], "COMMENTS": "Full version of paper to appear at the ACM Conference on Economics and Computation (EC-16)", "reviews": [], "SUBJECTS": "cs.DS cs.AI", "authors": ["john p dickerson", "david f manlove", "benjamin plaut", "tuomas sandholm", "james trimble"], "accepted": false, "id": "1606.01623"}, "pdf": {"name": "1606.01623.pdf", "metadata": {"source": "CRF", "title": "Position-Indexed Formulations for Kidney Exchange", "authors": ["JOHN P. DICKERSON", "DAVID F. MANLOVE", "BENJAMIN PLAUT", "TUOMAS SANDHOLM"], "emails": [], "sections": [{"heading": "Position-Indexed Formulations for Kidney Exchange", "text": "JOHN P. DICKERSON, Carnegie Mellon University DAVID F. MANLOVE, University of Glasgow BENJAMIN PLAUT, Carnegie Mellon University TUOMAS SANDHOLM, Carnegie Mellon University JAMES TRIMBLE, University of Glasgow\nA kidney exchange is an organized barter market where patients in need of a kidney swap willing but incompatible donors. Determining an optimal set of exchanges is theoretically and empirically hard. Traditionally, exchanges took place in cycles, with each participating patient-donor pair both giving and receiving a kidney. The recent introduction of chains, where a donor without a paired patient triggers a sequence of donations without requiring a kidney in return, increased the efficacy of fielded kidney exchanges\u2014while also dramatically raising the empirical computational hardness of clearing the market in practice. While chains can be quite long, unbounded-length chains are not desirable: planned donations can fail before transplant for a variety of reasons, and the failure of a single donation causes the rest of that chain to fail, so parallel shorter chains are better in practice.\nIn this paper, we address the tractable clearing of kidney exchanges with short cycles and chains that are long but bounded. This corresponds to the practice at most modern fielded kidney exchanges. We introduce three new integer programming formulations, two of which are compact. Furthermore, one of these models has a linear programming relaxation that is exactly as tight as the previous tightest formulation (which was not compact) for instances in which each donor has a paired patient. On real data from the UNOS nationwide exchange in the United States and the NLDKSS nationwide exchange in the United Kingdom, as well as on generated realistic large-scale data, we show that our new models are competitive with all existing solvers\u2014in many cases outperforming all other solvers by orders of magnitude.\nFinally, we note that our position-indexed chain-edge formulation can be modified in a straightforward way to take post-match edge failure into account, under the restriction that edges have equal probabilities of failure. Post-match edge failure is a primary source of inefficiency in presently-fielded kidney exchanges. We show how to implement such failure-aware matching in our model, and also extend the state-of-the-art general branch-and-price-based non-compact formulation for the failure-aware problem to run its pricing problem in polynomial time.\nAdditional Key Words and Phrases: Kidney exchange; matching markets; stochastic matching; integer programming; branch and price"}, {"heading": "1. INTRODUCTION", "text": "Transplantation is the most effective treatment for kidney failure, yet transplant waiting lists have grown rapidly in many countries. In the United States alone, the kidney transplant waiting list grew from 58,000 people in 2004 to 99,000 people in 2014 [Hart et al. 2016]. In order to increase the supply of kidneys for transplant, kidney exchange schemes now operate in several countries, including the United States, United Kingdom, Netherlands, and South Korea.\nA kidney exchange [Rapaport 1986; Roth et al. 2004] is a centrally-administered barter exchange market for kidneys. If a patient with end-stage renal disease has a\nWork supported by NSF grants IIS-1320620 and IIS-1546752, ARO grant W911NF-16-1-0061, Facebook and Siebel fellowships, and by XSEDE through the Pittsburgh Supercomputing Center (Dickerson / Plaut / Sandholm), and by EPSRC grants EP/K010042/1, EP/K503903/1 and EP/N508792/1 (Manlove / Trimble). Authors\u2019 addresses: J.P. Dickerson, B. Plaut, and T. Sandholm, Computer Science Department, Carnegie Mellon University; email: {dickerson,sandholm}@cs.cmu.edu, bplaut@stanford.edu; D.F. Manlove and J. Trimble, School of Computing Science, University of Glasgow; email: david.manlove@glasgow.ac.uk, james. trimble@yahoo.co.uk.\n.\nar X\niv :1\n60 6.\n01 62\n3v 2\n[ cs\n.D S]\n1 0\nJu n\n20 16"}, {"heading": "A:2 J.P. Dickerson, D.F. Manlove, B. Plaut, T. Sandholm and J. Trimble", "text": "friend or family member who is willing to donate a kidney to him, but unable to do so due to blood- or tissue-type incompatibility, the patient may enter the exchange in the hope of exchanging his donor with the donor of another participating patient. Threeway exchanges are also possible, but most schemes do not carry out four-way or longer exchanges due to the requirement that transplants be carried out simultaneously, and the risk that one of the participants may need to withdraw, in which case the cycle does not go to execution and the pairs go back into the kidney exchange pool.\nThe scheme administrator carries out periodic \u201cmatch runs\u201d in which exchanges are selected in order to maximize the number of planned transplants, or a similar goal\u2014 perhaps prioritizing pediatric patients, or to those who have been waiting the longest.\nA more recent development has been the introduction of non-directed donors (NDDs) to kidney exchange schemes [Montgomery et al. 2006; Roth et al. 2006]. An NDD enters the scheme with the intention of donating a kidney, but without a paired recipient. Such a donor initiates a chain, in which the paired donor of each patient who receives a kidney donates a kidney to the next patient. In contrast to cyclic exchanges, chains can be carried out non-simultaneously, since patients later in the chain are not waiting to be \u201crepaid\u201d for a donation that has already been made. In practice, it is desirable to impose a cap on chain length, since there is an increasing chance that the final exchanges planned for a chain will not proceed as the chain length is increased (due to various reasons such as pre-transplant crossmatch incompatibility, death of a recipient before transplant, the recipient receiving a deceased-donor kidney, and so on).\nIn many fielded kidney exchanges, an optimal solution is found by using an integer programming (IP) solver to find a set of disjoint cyclic exchanges and chains that maximizes some scoring function. This approach has been tractable so far; Manlove and O\u2019Malley [2015] report that each instance up to October 2014 in the United Kingdom\u2019s National Living Donor Kidney Sharing Schemes (NLDKSS)\u2014one of the largest kidney exchange schemes\u2014could be solved in under a second, with similar results using stateof-the-art solvers at other large exchanges in the US [Anderson et al. 2015; Plaut et al. 2016a] and the Netherlands [Glorie et al. 2014]. However, there is an urgent need for faster kidney exchange algorithms, for three reasons: \u2014 Schemes have recently increased chain-length caps, and we expect further increases\nas more schemes evolve towards using nonsimultaneous extended altruistic donor (NEAD) chains [Rees et al. 2009], which can extend across dozens of transplants. \u2014 Opportunities exist for cross-border schemes, which will greatly increase the size of the problem to be solved; indeed, collaborations have already occurred between, for example, the USA and Greece, and between Portugal and Spain. \u2014 The run time for kidney exchange algorithms depends on the problem instance, and is difficult to predict. It is desirable to have improved algorithms to insure against the possibility that future instances will be intractable for current solvers. With that motivation, this paper presents new scalable integer-programming-based\napproaches to optimally clearing large kidney exchange schemes, including two models which can comfortably handle chain caps greater than 10."}, {"heading": "1.1. Prior research", "text": "Substantial prior research helped grow kidney exchange from a thought experiment to its present increasingly-ubiquitous state. We briefly overview the literature from economics, computer science, and operations research.\nTheoretical basis for kidney exchange. Roth et al. [2004; 2005; 2007] set the groundwork for large-scale organized kidney exchange. These papers explored what efficient matchings in a steady-state kidney exchange would look like; extensions by Ashlagi et al. [2012], Ashlagi and Roth [2014], and Ding et al. [2015] address shortcomings"}, {"heading": "Position-Indexed Formulations for Kidney Exchange A:3", "text": "in those theoretical models that appeared as kidney exchange became reality. Gametheoretic models of kidney exchange, where transplant centers are viewed as agents with a private type consisting of their internal pools, were presented and explored by Ashlagi and Roth [2014], Toulis and Parkes [2015], and Ashlagi et al. [2015]. Various forms of dynamism, like uncertainty over the possible future vertices in the pool [U\u0308nver 2010; Ashlagi et al. 2013; Akbarpour et al. 2014] or uncertainty over the existence of particular edges [Blum et al. 2013; Dickerson et al. 2013; Blum et al. 2015] have been explored from both an economic and algorithmic efficiency point of view.\nPractical approaches to the kidney exchange clearing problem. The two fundamental IP models for kidney exchange are the cycle formulation, which includes one binary decision variable for each feasible cycle or chain, and the edge formulation, which includes one decision variable for each compatible pair of agents [Abraham et al. 2007; Roth et al. 2007]. In the cycle formulation, the number of constraints is sublinear in the input size, but the number of variables is exponential. In the edge formulation, the number of variables is linear but the number of constraints is exponential. Optimally solving these models has been an ongoing challenge for the past decade.\nConstantino et al. [2013] introduced the first two compact IP formulations for kidney exchange, where compact means that the counts of variables and constraints are polynomial in the size of the input. Their extended edge formulation was shown empirically to be effective in finding the optimal solution where the cycle-length cap is greater than 3, particularly on dense graphs. However, each of the compact formulations introduced by Constantino et al. has a weaker linear program (LP) relaxation than the cycle formulation, even in the absence of NDDs.\nThe EE-MTZ model [Mak-Hau 2015], another compact formulation, uses the variables and constraints of the extended edge formulation to model cycles and a variant of the Miller-Tucker-Zemlin model for the traveling salesman problem to model chains. The same paper introduces the exponentially-sized SPLIT-MTZ model, which adds redundant constraints to the edge formulation in order to tighten the LP relaxation.\nA number of kidney exchange algorithms use the cycle formulation with branch and price [Barnhart et al. 1998] to avoid the need to hold an exponential number of variables in memory [Abraham et al. 2007; Dickerson et al. 2013; Glorie et al. 2014; Klimentova et al. 2014; Plaut et al. 2016a]. These have been the fastest algorithms to date for the kidney exchange problem.\nAn alternative approach to avoiding the cost of keeping the entire model in memory has been constraint generation, using variants of the edge formulation [Abraham et al. 2007]. Anderson et al. [2015] describe an approach based on an algorithm for the prize-collecting traveling salesman problem. This algorithm is particularly effective for solving instances where the cycle-length cap is 3 and there is no cap on the length of chains, but it is outperformed by branch-and-price-based approaches if a finite chain-length cap is used [Plaut et al. 2016a].\nAlternative objectives for the kidney exchange problem include maximizing the expected number of transplants subject to post-match arc and vertex failures [Dickerson et al. 2013; Pedroso 2014; Alvelos et al. 2015]. Some fielded exchanges use lexicographic optimisation of a hierarchy of objectives [Glorie et al. 2014; Manlove and O\u2019Malley 2015]; we note that our models can be augmented to support this class of objective function."}, {"heading": "1.2. Our contribution", "text": "This paper introduces three integer program formulations for the kidney exchange problem, two of which are compact. Model size (i.e., memory footprint) often constrains today\u2019s kidney exchange solvers; critically, our models are typically much smaller than"}, {"heading": "A:4 J.P. Dickerson, D.F. Manlove, B. Plaut, T. Sandholm and J. Trimble", "text": "the state of the art while managing to maintain tight linear program relaxations (LPRs)\u2014which in practice is quite important to proving optimality quickly.\nIn Section 3, we introduce the position-indexed edge formulation (PIEF), a model for the kidney exchange problem with only cycles that is substantially smaller than, yet has an LPR equivalent to, the model with the tightest LPR for the cycles-only version of the problem [Abraham et al. 2007; Roth et al. 2007]. Section 3 presents the positionindexed chain-edge formulation (PICEF) which compactly brings chains into the model via a polynomial number of decision variables; the number of cycle decision variables is exponential in just the maximum cycle length (which is typically only 3 or 4 in fielded exchanges). To address that latter exponential reliance on the cycle length, we also present a branch-and-price-based implementation of PICEF. Finally, in Appendix C we present the hybrid position-indexed edge formulation (HPIEF), which combines PIEF and PICEF to yield a compact formulation.\nThroughout, we prove new results regarding the tightness of the LPRs of our models relative to the current state of the art. The tightness of these relaxations hints that our formulations will be competitive in practice; toward that end, we provide extensive experimental evidence that they are. In particular, we show that at least one of PICEF and HPIEF is faster than the best solver from all those provably-optimal solvers contributed in earlier papers that we evaluated in 96.41% of instances considered, with the speed-ups being most evident for larger instance sizes and larger chain caps. In Section 6, we use real and generated data from two nationwide kidney exchange programs\u2014one in the UK, and one in the US\u2014to compare our formulations against other competitive solvers [Abraham et al. 2007; Klimentova et al. 2014; Anderson et al. 2015; Plaut et al. 2016a]. Our new formulations are on par or faster than all other solvers, outperforming all other solvers by orders of magnitude on many problem instances.\nFinally, we demonstrate that our PICEF formulation can be adapted straightforwardly to the so-called failure-aware model where arcs probabilistically fail after algorithmic match but before transplantation, and we show how to adapt a recent (noncompact) branch-and-price-based formulation due to Dickerson et al. [2013] to perform pricing in polynomial time (Section 6)."}, {"heading": "2. PRELIMINARIES", "text": "Given a pool consisting of patient-donor pairs and non-directed donors (NDDs), we model the kidney exchange problem using a directed graph D = (V,A). The set of vertices V = {1, . . . , |V |} is partitioned into N = {1, . . . , |N |} representing the NDDs and P = {|N |+ 1, . . . , |N |+ |P |} representing the patient-donor pairs.\nFor each i \u2208 N and each j \u2208 P , A contains the arc (i, j) if and only if NDD i is compatible with patient j. For each i \u2208 P and each j \u2208 P \\{i}, A contains the arc (i, j) if and only if the paired donor1 of patient i is compatible with patient j. Each arc (i, j) \u2208 A has a weight wij \u2208 R+ representing the priority that the scheme administrator gives to that transplant. If the objective is to maximize the number of transplants, each arc has unit weight; most fielded exchanges use weights to encode various prioritization schemes and other value judgments about potential transplants.\nSince NDDs do not have paired patients, each vertex representing an NDD has no incoming arcs. Moreover, we assume that no patient is compatible with her own paired donor, and therefore that the digraph has no loops. (The IP models introduced in this\n1In this paper, we assume that each patient has a single paired donor. In practice, a patient may have multiple donors; this can be modeled by regarding such a patient i\u2019s vertex in D as representing i and all of her paired donors; an arc (i, j) in D then represents compatibility between at least one of i\u2019s donors and patient j. Our model can also handle patients with no paired donor by drawing a vertex with no out edges.\nPosition-Indexed Formulations for Kidney Exchange A:5\npaper can trivially be adapted to the case where loops exist by adding a binary variable for each loop and modifying the objective and capacity constraints accordingly.)\nWe use the term chain to refer to a path in the digraph initiated by an NDD vertex, and cycle to refer to a cycle in the directed graph (which must involve only vertices in P , since vertices in N have no incoming arcs). The weight wc of each cycle or chain c is defined as the sum of its arc weights.\nGiven a maximum cycle size K and a maximum chain length L, the kidney exchange problem is an optimization problem where the objective is to select a vertex-disjoint packing in D of cycles of size up to K and chains of length up to L that has maximum weight. The problem is NP-hard for realistic parameterizations of K and L [Abraham et al. 2007; Biro\u0301 et al. 2009]. In practice, K is kept low due to the logistical constraint of scheduling all transplants simultaneously. At both the United Network for Organ Sharing (UNOS) US-wide exchange and the UK\u2019s NLDKSS, K = 3. The chain cap L is typically longer due to chains being executed non-simultaneously; yet, typically L 6= \u221e due to potential matches failing before transplantation. This paper addresses the realistic setting of small cycle cap K and large\u2014but finite\u2014chain cap L.\nFigure 1 shows a problem instance with |N | = 2 and |P | = 5. If each arc has unit weight and K = L = 3, then the bold arcs show an optimal solution: cycle ((3, 4), (4, 5), (5, 3)) and chain ((1, 7), (7, 6)), with a total weight of 5."}, {"heading": "3. PIEF: POSITION-INDEXED EDGE FORMULATION", "text": ""}, {"heading": "3.1. Description of the model", "text": "In this section, we present our first of three new IP formulations, the position-indexed edge formulation (PIEF). PIEF is a natural extension of the extended edge formulation (EEF) of Constantino et al. [2013]. For this formulation, we assume that the problem instance contains no NDDs; HPIEF (the hybrid PIEF) in Appendix C is a compact generalisation of this formulation which can be used for instances with NDDs.\nThe PIEF, like the EEF, uses copies of the underlying compatibility digraph D. For each vertex l \u2208 V , let Dl = (V l, Al) be the subgraph of D induced by {i \u2208 V : i \u2265 l}. The PIEF ensures that at most one cycle is selected in each copy, and that a cycle selected in graph copy Dl must contain vertex l.\nThe first directed graph in Figure 2 is an instance with four patients which we will use as an example in this section. The figure shows graph copies D1 (= D), D2, and D3. The remaining graph copy, D4 = ({4}, {}), contains no arcs and is not shown."}, {"heading": "A:6 J.P. Dickerson, D.F. Manlove, B. Plaut, T. Sandholm and J. Trimble", "text": "The main innovation of the PIEF formulation is the use of arc positions to index variables; the position of an arc in a cycle is defined as follows. Let c = (a1, . . . , a|c|) be a cycle represented as a list of arcs in A. Further, assume that we use the unique representation of c such that a1 leaves the lowest-numbered vertex involved in the cycle. For 1 \u2264 i \u2264 |c|, we say that ai has position i.\nWe define K(i, j, l), the set of positions at which arc (i, j) is permitted to be selected in a cycle in graph copy Dl. For i, j, l \u2208 V such that (i, j) \u2208 Al, let\nK(i, j, l) =  {1} i = l {2, . . . ,K \u2212 1} i, j > l {2, . . . ,K} j = l.\nThus, an arc may be selected at position 1 in graph copy l if and only if it leaves vertex l, and any arc selected at position K in graph copy l must enter l.\nNow, create a set of binary decision variables as follows. For i, j, l \u2208 P such that (i, j) \u2208 Al, create variable xlijk for each k \u2208 K(i, j, l). Variable xlijk takes the value 1 if and only if arc (i, j) is selected at position k of a cycle in graph copy Dl. Returning to our example instance and letting K = 3, we give x1342 as an example of a variable in the model; this represents the arc (3, 4) being used in position 2 of a cycle in graph copy 1. In full, the set of variables created for this instance is x1121, x1212, x1213, x1232, x1342, x1412, x1413, x1422, x1432 (in graph copy D1), x2231, x2342, x2422, x2423, x2432 (in graph copy D2), x3341, x3432, and x3433 (in graph copy D3).\nThe following integer program finds the optimal cycle packing.\nmax \u2211 l\u2208V \u2211 (i,j)\u2208Al \u2211 k\u2208K(i,j,l) wijx l ijk (1a)\ns.t. \u2211 l\u2208V \u2211 j:(j,i)\u2208Al \u2211 k\u2208K(j,i,l) xljik \u2264 1 i \u2208 V (1b)\n\u2211 j:(j,i)\u2208Al\u2227 k\u2208K(j,i,l) xljik = \u2211 j:(i,j)\u2208Al\u2227 k+1\u2208K(i,j,l) xli,j,k+1\nl \u2208 V, i \u2208 {l + 1, . . . , n}, k \u2208 {1, . . . ,K \u2212 1}\n(1c)\nxlijk \u2208 {0, 1} l \u2208 V, (i, j) \u2208 Al, k \u2208 K(i, j, l) (1d)\nThe objective (1a) is to maximize the weighted sum of selected arcs. Constraint (1b) is the capacity constraint for vertices: for each vertex i \u2208 V , there must be at most one selected arc whose target is i. Constraint (1c) is the flow conservation constraint. For each graph copy Dl, each vertex i in Dl except the lowest-numbered vertex, and each arc position k < K, the number of selected arcs at position k with target i is equal to the number of selected arcs at position k + 1 with source i. Constraint (1d) ensures that no fractional solutions are selected. Theorem A.3 in Section A.1 establishes the correctness of the PIEF model.\nWe note that PIEF is not the first IP model for a directed-graph program to use position-indexed variables; Vajda [1961] uses position-indexed variables for subtour elimination in a model for the travelling salesman problem (TSP). Vajda\u2019s model is substantially different from the PIEF; most notably, graph copies are not required for Vajda\u2019s model because any TSP solution contains exactly one cycle.\nPosition-Indexed Formulations for Kidney Exchange A:7"}, {"heading": "3.2. Further reducing the size of the basic PIEF model", "text": "We now present methods for reducing the size of the PIEF model while maintaining provable optimality. These reductions are performed as a polynomial-time preprocess (prior to solving the NP-hard kidney exchange clearing problem), and thus may result in practical run time improvements.\n3.2.1. Basic reduced PIEF. In typical problem instances, there are many (i, j, k, l) tuples such that xlijk takes the value zero in any assignment that satisfies constraints (1b)(1d). For example, suppose that K = 4 and that Figure 3 is graph copy D1. Arc (6, 7) cannot be chosen at position 3 of a cycle, since the arc only appears in one cycle and it is at position 2 of that cycle. Hence, if we could eliminate variable x1673 from the integer program it would not change the optimal solution. Similarly, all variables for the arc (3, 4) within this graph copy could be eliminated, since this arc does not appear in any cycle of length less than 5.\nFollowing the approach used by Constantino et al. [2013] for the extended edge formulation, we eliminate variables as follows. For i, j \u2208 V l, let dlij be the length of the shortest path in terms of arcs from i to j in Dl. For (i, j) \u2208 Al, let\nKred(i, j, l) = {k : 1 \u2264 k \u2264 K \u2227 dlli < k \u2227 dljl \u2264 (K \u2212 k)}.\nFor any k /\u2208 Kred(i, j, l), no cycle in graph copy Dl of length less than or equal to K contains (i, j) at position k, since either there is no sufficiently short path from l to i or there is no sufficiently short path from j to l. Note that Kred(i, j, l) \u2286 K(i, j, l). We can substitute Kred(i, j, l) for K(i, j, l) in (1a)-(1d), yielding a smaller integer program\u2014 PIEF-reduced (PIEFR)\u2014with the same optimal solution.\n3.2.2. Elimination of variables at position 1 andK: the PIEFR2 formulation. In the PIEFR model with K \u2265 3, variables at position 1 are redundant, since xllj1 = 1 if and only if xlji2 = 1 for some i. Similarly, variables at position K are redundant; xljlK = 1 if and only if xlij(K\u22121) = 1 for some i. We can eliminate variables at positions 1 and K from PIEFR as follows. Define a modified weight function w\u2032: for all i, j, l \u2208 P such that (i, j) \u2208 Al and all k \u2208 {2, . . . ,K \u2212 1}, let\nw\u2032(i, j, k, l) =  wij + wli k = 2\nwij + wjl k = K \u2212 1 wij otherwise.\nWith this weight function, a selected arc (i, j) at position 2 of a cycle inDl contributes to the objective value its own weight plus the weight of the implicitly selected arc (l, i). An arc (i, j) at position K\u22121 of a cycle in Dl contributes its own weight plus the weight of of the implicitly selected arc (j, l).\nFor i, j, l \u2208 P such that (i, j) \u2208 Al, define the restricted set of permitted arc positions:"}, {"heading": "A:8 J.P. Dickerson, D.F. Manlove, B. Plaut, T. Sandholm and J. Trimble", "text": "Kred2(i, j, l) = Kred(i, j, l) \\ {1,K}. For i, j, l \u2208 P such that (i, j) \u2208 Al, and for each k \u2208 Kred2(i, j, l), create a binary\nvariable xlijk . The following IP, denoted PIEFR 2 (PIEF reduced twice), is solved.\nmax \u2211 l\u2208V \u2211 (i,j)\u2208Al \u2211 k\u2208Kred2 (i,j,l) w\u2032(i, j, k, l)xlijk subject to (2a)\n\u2211 l\u2208V  \u2211 j:(j,i)\u2208Al \u2211 k\u2208Kred 2 (j,i,l) xljik + \u2211\nj:(i,j)\u2208Al\u2227 2\u2208Kred 2 (i,j,l)\nxlij2 + \u2211\nh,j:j 6=i\u2227 (h,j)\u2208Ai\u2227\nK\u22121\u2208Kred 2 (h,j,i)\nxihj(K\u22121) \u2264 1 i \u2208 V (2b)\n\u2211 j:(j,i)\u2208Al\u2227 k\u2208Kred 2 (j,i,l) xljik = \u2211 j:(i,j)\u2208Al\u2227 k+1\u2208Kred 2 (i,j,l) xli,j,k+1 l \u2208 V, i \u2208 {l + 1, . . . , n}, k \u2208 {2, . . . ,K \u2212 2} (2c)\nxlijk \u2208 {0, 1} l \u2208 V, (i, j) \u2208 Al, k \u2208 Kred2(i, j, l)\n(2d)\nThe constraints of PIEFR2 differ from those of PIEFR (1b-1d) in the following two respects. First, the second term in parentheses in the PIEFR2 capacity constraint for vertex i (2b) ensures that any selected arc (i, j) at position 2 of a cycle in Dl counts towards the capacity for i, since it is implicit that the arc (l, i) is also chosen. The final term on the left-hand side of constraint (2b) serves the same function for selected arcs at position K \u2212 1, since an arc at position K is implicitly chosen. Second, the flow conservation constraint (2c) is not required for k \u2208 {1,K \u2212 1}, since arcs at positions 1 and K are not modelled explicitly in PIEFR2.\n3.2.3. Vertex-ordering heuristic. We can reduce the number of variables in the reduced PIEF model by carefully choosing the order of vertex labels in the digraph D. We have found that relabelling the vertices in descending order of total degree is an effective heuristic to this end. To estimate the effect of this ordering heuristic on model size, we generated the PIEFR2 model for each of the ten PrefLib instances [Mattei and Walsh 2013] with 256 vertices and no NDDs. The heuristic reduced the variable count by a mean of 38 percent, and reduced the constraint count by a mean of 60 percent."}, {"heading": "3.3. PIEF has a tight LPR", "text": "We now compare the LPR bound of PIEF to those of other popular IP models. The tightness of an LPR is typically viewed as a proxy for how well an IP model will perform in practice, due to the important role the relaxation plays in modern branch-andbound-based tree search. In this section, we compare the LPR of PIEF against the IP formulation with the tightest LPR, the cycle formulation. While the number of decision variables in the cycle formulation model is exponential in the cycle cap K, PIEF maintains an LPR that is just as tight, but has far fewer variables if K > 3.\n3.3.1. Cycle formulation. We begin by reviewing the cycle formulation due to Abraham et al. [2007] and Roth et al. [2007], and note that the formulation is equivalent to that due to Anderson et al. [2015] if chains are disallowed. In the cycle formulation, a"}, {"heading": "Position-Indexed Formulations for Kidney Exchange A:9", "text": "binary variable zc is used for each feasible cycle or chain c to represent whether it is selected in the solution. For each vertex v, there is a constraint to ensure that v is in at most selected cycle or chain. Let C be the set of cycles in D of length at most K and let C\u2032 be the set of NDD-initiated chains in D of length at most L. The model to be solved is as follows.\nmax \u2211\nc\u2208C\u222aC\u2032 wczc (3a)\ns.t. \u2211\nc\u2208C\u222aC\u2032:i appears in c\nzc \u2264 1 i : 1 \u2264 i \u2264 |V | (3b)\nzc \u2208 {0, 1} c \u2208 C \u222a C\u2032 (3c) Constraints (3b) ensure that the selected cycles and chains are vertex disjoint.\n3.3.2. LPR of PIEF. We now show that the LPR of PIEF is exactly as tight as that of the cycle formulation. Formally, ifA andB are two IP formulations for the kidney exchange problem, we write that A weakly dominates B, denoted ZA ZB , if for every problem instance, the LPR objective value under A is no greater than the LPR objective value under B. Further, we say that A strictly dominates B, denoted ZA \u227a ZB , if ZA ZB and for some problem instance, the LPR objective value under A is strictly smaller than the LPR objective value under B. Finally, we write ZA = ZB if ZA ZB and ZB ZA.\nTHEOREM 3.1. ZCF = ZPIEF (without chains)."}, {"heading": "4. PICEF: POSITION-INDEXED CHAIN-EDGE FORMULATION", "text": ""}, {"heading": "4.1. Description of the model", "text": "Our second new IP formulation, PICEF, uses a variant of PIEF for chains, and\u2014like the cycle formulation\u2014uses one binary variable for each cycle. The idea of using variables for arcs in chains and a variable for each cycle was introduced in the PC-TSPbased algorithm of Anderson et al. [2015]. The innovation in our IP model is the use of position indices on arc variables, which results in polynomial counts of constraints and arc-variables; this is in contrast to the exponential number of constraints in the PC-TSP-based model.\nUnlike PIEF, PICEF does not require copies of D. Intuitively, this is because a chain is a simpler structure than a cycle, with no requirement for a final arc back to the initial vertex.\nWe define K\u2032(i, j), the set of possible positions at which arc (i, j) may occur in a chain in the digraph D. For i, j \u2208 V such that (i, j) \u2208 A,\nK\u2032(i, j) = {{1} i \u2208 N {2, . . . , L} i \u2208 P .\nThus, any arc leaving an NDD can only be in position 1 of a chain, and any arc leaving a patient vertex may be in any position up to the cycle-length cap L, except 1.\nFor each (i, j) \u2208 A and each k \u2208 K\u2032(i, j), create variable yijk, which takes value 1 if and only if arc (i, j) is selected at position k of some chain. For each cycle c in D of length up to K, define a binary variable zc to indicate whether c is used in a packing.\nFor example, consider the instance in Figure 4, in which |N | = 2 and |P | = 4. Suppose that K = 3 and L = 4, and suppose further that each arc has unit weight. The IP model includes variables y131, y141, and y241, corresponding to arcs leaving NDDs. For each k \u2208 2, 3, 4, the model includes variables y34k, y45k, y56k, y64k, and y65k, corresponding to arcs between donor-patient pairs at position k of a chain. Finally, the model includes zc variables for the cycles ((4, 5), (5, 6), (6, 4)) and ((5, 6), (6, 5)).\nA:10 J.P. Dickerson, D.F. Manlove, B. Plaut, T. Sandholm and J. Trimble\n1\n2\n3 4\n5\n6\nInequality (4b) is the capacity constraint for patients: each patient vertex is involved in at most one chosen cycle or incoming arc of a chain. Inequality (4c) is the capacity constraint for NDDs: each NDD vertex is involved in at most one chosen outgoing arc. The flow inequality (4d) ensures that patient-donor pair vertex i has an outgoing arc at position k + 1 of a selected chain only if i has an incoming arc at position k; we use an inequality rather than an equality since the final vertex of a chain will have an incoming arc but no outgoing arc. Theorem B.4 in Section B.1 establishes the correctness of the PICEF model.\nWe now give an example of each of the inequalities (4b\u20134d) for the instance in Figure 4. For i = 4, the capacity constraint (4b) ensures that y141 + y241 + y342 + y343 + y344 + z((4,5),(5,6),(6,4)) \u2264 1. For i = 1, the NDD capacity constraint (4c) ensures that y131 + y141 \u2264 1. For i = 5 and k = 2, the chain flow constraint (4d) ensures that z452 + z652 \u2265 z563; that is, the outgoing arc (5, 6) can only be selected at position 3 of a chain if an incoming arc to vertex 5 is selected at position 2 of a chain.\nIn our example in Figure 4, the optimal objective value is 4. One satisfying assignment that gives this objective value is y131 = y342 = z((5,6),(6,5)) = 1, with all other variables equal to zero."}, {"heading": "4.2. Practical implementation of the PICEF model", "text": "We now discuss methods for the practical implementation of PICEF, first by reducing the number of decision variables via a polynomial-time preprocess, and second by tackling the large number of decision variables for cyclic exchanges via a branch-andprice-based transformation of the model.\n4.2.1. Reduced PICEF. We can reduce the PICEF model using a similar approach to the PIEF reduction in Subsection 3.2.1. For i \u2208 P , let d(i) be length of the shortest path in terms of arcs from some j \u2208 N to i. Since any outgoing arc from i cannot appear at position less than d(i) + 1 in a chain, we can replace K\u2032 in PICEF with Kred, defined as follows:"}, {"heading": "Position-Indexed Formulations for Kidney Exchange A:11", "text": "Kred(i, j) = {{1} i \u2208 N {d(i) + 1, . . . , L} i \u2208 P.\n4.2.2. A branch and price implementation of PICEF. We now discuss a method for scaling PICEF to graphs with high cycle caps, or large graphs with many cycles; this method maintains the full set of arc decision variables, but only incrementally considers those corresponding to cycles.\nFormally, for V = P \u222aN , the number of cycles of length at most K is O(|P |K), making explicit representation and enumeration of all cycles infeasible for large enough instances. With one decision variable per cycle, Abraham et al. [2007] could not even write the full integer program in memory for instances as small as 1000 pairs.\nBranch and price is a method where only a subset of the decision variables are kept in memory, and columns (in the case of PICEF, only those corresponding to cycle variables) are slowly added until correctness is proven at each node in a branch-and-bound search tree. If necessary, superfluous columns can also be removed from the model, in order to prevent its size from exceeding memory.\nThe following process occurs at each node in the search tree: first, the LP relaxation of the current model (which may contain only a small number of cycles) is solved. The next step is to generate positive price cycles: cycles that have the potential to improve the objective value if included in the model.\nThe price of a cycle c is given by \u2211\n(i,j)\u2208c(wij\u2212\u03b4i), where \u03b4i is the dual value of vertex i. While there exist any positive price cycles at a node in the search tree, optimality of the reduced LP has not yet been proved at that node. The pricing problem is to bring at least one new positive price cycle into the model, or prove that none exist. Multiple methods exist for solving the pricing problem in kidney exchange [Abraham et al. 2007; Glorie et al. 2014; Mak-Hau 2015; Plaut et al. 2016a]; in our experimental section, we use the cycle pricer of Glorie et al. [2014] with the bugfix of Plaut et al. [2016a].\nOnce no more positive price cycles exist, the reduced LP at a specific node is guaranteed to be optimal. However, it may not be integral: in this case, branching occurs, as in standard brand-and-bound tree search. In our experiments, we explore branches in depth-first-order unless optimality is proven at all nodes in the search tree."}, {"heading": "4.3. The LPR of PICEF is not as tight", "text": "As an analogue to Section 3, we now compare the LPR of PICEF against the cycle formulation LPR. Unlike in the PIEF case, where Theorem 3.1 showed an equivalence between the two models\u2019 relaxations, we show that PICEF\u2019s relaxation can be looser than that of the cycle formulation. Theorem 4.1 gives a simple construction showing this, while Theorem 4.2 presents a family of graphs on which PICEF\u2019s LPR is arbitrarily worse than that of the cycle formulation. The proofs of both of these results are contained in Section B.2.\nTHEOREM 4.1. ZCF \u227a ZPICEF (with chains). Indeed, Theorem 4.2 shows that the ratio between the optimum objective value for\nthe relaxations of PICEF and the cycle formulation can be made arbitrarily large.\nTHEOREM 4.2. Let z \u2208 R+ be given. There exists a problem instance for which ZPICEF/ZCF > z, where ZPICEF is the objective value of the LPR of PICEF and ZCF is the objective value of the LPR of the cycle formulation.\nWhile the results of Theorems 4.1 and 4.2 may be disheartening, in the following section, we give experimental evidence that PICEF (as well as its branch-and-pricebased interpretation) perform extremely competitively on real and generated data."}, {"heading": "A:12 J.P. Dickerson, D.F. Manlove, B. Plaut, T. Sandholm and J. Trimble", "text": ""}, {"heading": "5. EXPERIMENTAL COMPARISON OF STATE-OF-THE-ART KIDNEY EXCHANGE SOLVERS", "text": "In this section, we compare implementations of our new models against existing state of the art kidney exchange solvers. To ensure a fair comparison, we received code from the author of each solver that is not introduced in this paper. We compare run times of the following state-of-the-art solvers: \u2014 BNP-DFS, the original branch-and-price-based cycle formulation solver due\nto Abraham et al. [2007]; \u2014 BNP-POLY, a branch-and-price-based cycle formulation solver with pricing due\nto Glorie et al. [2014] and Plaut et al. [2016a];2 \u2014 CG-TSP, a recent IP formulation based on a model for the prize-collecting traveling\nsalesman problem, with constraint generation [Anderson et al. 2015]; \u2014 PICEF, the model from Section 4 of this paper; \u2014 BNP-PICEF, a branch and price version of the PICEF model, as presented in Sec-\ntion 4.2.2 of this paper; \u2014 HPIEF, the Hybrid PIEF model from Appendix C of this paper (which reduces to\nPIEF for L = 0); and \u2014 BNP-DCD, a branch-and-price algorithm using the Disaggregated Cycle Decompo-\nsition model, which is related to both the cycle formulation and the extended edge formulation [Klimentova et al. 2014]. A cycle-length cap of 3 and a time limit of 3600 seconds was imposed on each run. When a timeout occurred, we counted the run-time as 3600 seconds. We test on two types of data: real and generated. Section 5.1 shows run time results on real match runs, including 286 runs from the UNOS US-wide exchange, which now contains 143 transplant centers, and 17 runs from the NLDKSS UK-wide exchange, which uses 24 transplant centers. Section 5.2 increases the size and varies other traits of the compatibility graphs via a realistic generator seeded by the real UNOS data. We find that PICEF and HPIEF substantially outperform all other models."}, {"heading": "5.1. Real match runs from the UK- and US-wide exchanges", "text": "We now present results on real match run data from two fielded nationwide kidney exchanges: The United Network for Organ Sharing (UNOS) US-wide kidney exchange where the decisions are made by algorithms and software from Prof. Sandholm\u2019s group, and the UK kidney exchange (NLDKSS) where the decisions are made by algorithms and software from Dr. Manlove\u2019s group.3 The UNOS instances used include all the match runs starting from the beginning of the exchange in October 2010 to January 2016. The exchange has grown significantly during that time and chains have been incorporated. The match cadence has increased from once a month to twice a week; that keeps the number of altruists relatively small. On average, these instances have |N | = 2, |P | = 231, and |A| = 5021. The NLDKSS instances cover the 17 quarterly match runs during the period January 2012\u2013January 2016. On average, these instances have |N | = 7, |P | = 201, and |A| = 3272.\nFigure 5 shows mean run times across all match runs for both exchanges; Appendix E gives additional statistics like minimum and maximum run times, as well as their standard deviations. Immediately obvious is that the non-compact\n2Recently, Plaut et al. [2016b] showed a correctness bug in both implementations of the BNP-POLY-style solvers due to Glorie et al. [2014] and Plaut et al. [2016a]; for posterity, we still include these run times. Furthermore, we note that the objective values returned by BNP-POLY always equaled that of the other provably-correct solvers on all of our test instances. 3Due to privacy constraints on sharing real healthcare data, the UNOS and NLDKSS experimental runs were necessarily performed on different computers\u2014one in the US and one in the UK. All runs within a figure were performed on the same machine, so relative comparisons of solvers within a figure are accurate."}, {"heading": "Position-Indexed Formulations for Kidney Exchange A:13", "text": "formulations\u2014BNP-DFS and CG-TSP\u2014tend to scale poorly compared to our newer formulations. Interestingly, BNP-PICEF tends to perform worse than the base PICEF and HPIEF; we hypothesize that this is because branch-and-price-based methods are necessarily more \u201cheavyweight\u201d than standard IP techniques, and the small size of presently-fielded kidney exchange pools may not yet warrant this more advanced technique. Perhaps most critically, both PICEF and HPIEF clear real match runs in both exchanges within seconds.\nIn the NLDKSS results, the wide fluctuation in mean run time as the chain cap is varied can be explained by the small sample size of available NLDKSS instances, and the fact that the algorithms other than HPIEF and PICEF occasionally timed out at one hour. By contrast, each of the HPIEF and PICEF runs on NLDKSS instances took less than five seconds to complete. We also note that the LP relaxation of PICEF and HPIEF are very tight in practice; the LPR bound equaled the IP optimum for 614 of the 663 runs carried out on NLDKSS data.\nWe remark that the BNP-DCD model due to Klimentova et al. [2014] was run on all NLDKSS instances where the chain cap L was equal to 0. Larger values of L could not be tested since the current implementation of the model in our possession does not accept NDDs in the input. However for the case that L = 0 the BNP-DCD model was the fastest for all NLDKSS instances.\nFinally we note that the solver of Glorie et al. [2014] was executed on the NLDKSS instances with a chain cap of L, for 0 \u2264 L \u2264 4. It was found that on average the execution time was 8.9 times slower than the fastest solver from among all the others executed on these instances as detailed at the beginning of Section 5. PICEF was the fastest solver on 40% of occasions."}, {"heading": "5.2. Scaling experiments on realistic generated UNOS kidney exchange graphs", "text": "As motivated earlier in the paper, it is expected that kidney exchange pools will grow in size as (a) the idea of kidney exchange becomes more commonplace, and barriers to entry continue to drop, as well as (b) organized large-scale international exchanges manifest. Toward that end, in this section, we test solvers on generated compatibility graphs from a realistic simulator seeded by all historical UNOS data; the generator samples patient-donor pairs and NDDs with replacement, and draws arcs in the compatibility graph in accordance with UNOS\u2019 internal arc creation rules.\nFigure 6 gives results for increasing numbers of patient-donor pairs (each column), as well as increasing numbers of non-directed donors as a percentage of the number"}, {"heading": "A:14 J.P. Dickerson, D.F. Manlove, B. Plaut, T. Sandholm and J. Trimble", "text": "of patient-donor pairs (each row). As expected, as the number of patient-donor pairs increases, so too do run times for all solvers. Still, in each of the experiments, for each chain cap, both PICEF and HPIEF are on par or (typically) much faster\u2014sometimes by orders of magnitude compared to other solvers. Appendix E gives these results in tabular form, including other statistics\u2014minimum and maximum run times, as well as their standard deviations\u2014that were not possible to show in Figure 6.\n2 3 4 5 6 7 8 9 10 11 12\nChain length cap\n0\n600\n1200\n1800\n2400\n3000\n3600\nM ea\nn tim\ne (s\n)\n|P | = 300, |N | = 3 BNP-DFS HPIEF PICEF BNP-PICEF BNP-POLY CG-TSP\n2 3 4 5 6 7 8 9 10 11 12\nChain length cap\n|P | = 500, |N | = 5\nBNP-DFS HPIEF PICEF BNP-PICEF BNP-POLY CG-TSP\n2 3 4 5 6 7 8 9 10 11 12\nChain length cap\n|P | = 700, |N | = 7 HPIEF PICEF BNP-PICEF BNP-POLY\n2 3 4 5 6 7 8 9 10 11 12\nChain length cap\n0\n600\n1200\n1800\n2400\n3000\n3600\nM ea\nn tim\ne (s\n)\n|P | = 300, |N | = 6\n2 3 4 5 6 7 8 9 10 11 12\nChain length cap\n|P | = 500, |N | = 10\n2 3 4 5 6 7 8 9 10 11 12\nChain length cap\n|P | = 700, |N | = 14\n2 3 4 5 6 7 8 9 10 11 12\nChain length cap\n0\n600\n1200\n1800\n2400\n3000\n3600\nM ea\nn tim\ne (s\n)\n|P | = 300, |N | = 15\n2 3 4 5 6 7 8 9 10 11 12\nChain length cap\n|P | = 500, |N | = 25\n2 3 4 5 6 7 8 9 10 11 12\nChain length cap\n|P | = 700, |N | = 35\n2 3 4 5 6 7 8 9 10 11 12\nChain length cap\n0\n600\n1200\n1800\n2400\n3000\n3600\nM ea\nn tim\ne (s\n)\n|P | = 300, |N | = 75\n2 3 4 5 6 7 8 9 10 11 12\nChain length cap\n|P | = 500, |N | = 125\n2 3 4 5 6 7 8 9 10 11 12\nChain length cap\n|P | = 700, |N | = 175\nFig. 6. Mean run time as the number of patient-donor pairs |P | \u2208 {300, 500, 700} increases (left to right), as the percentage of NDDs in the pool increases |N | = {1%, 2%, 5%, 25%} of |P | (top to bottom), for varying finite chain caps.\nIn addition to their increased scalability, we note two additional benefits of the PICEF and HPIEF models proposed in this paper: reduced variance in run time, and relative ease of implementation when compared to other state-of-the-art solution techniques. In both the real and simulated experimental results, we find that the run"}, {"heading": "Position-Indexed Formulations for Kidney Exchange A:15", "text": "time of both the PICEF and HPIEF formulations is substantially less variable than the branch-and-price-based and constraint-generation-based IP solvers. While the underlying problem being solved is NP-hard, and thus will always present worst-case instances that take substantially longer than is typical to solve, the increased predictability of the run time of these models relative to other state-of-the-art solutions\u2014 including those that are presently fielded\u2014is attractive. Second, we note that significant engineering effort is involved in the creation of custom branch-and-price and constraint-generation-based codes, while both PICEF and HPIEF are implemented with relative ease, relying on only a single call to a black box IP solver."}, {"heading": "6. FAILURE-AWARE KIDNEY EXCHANGE", "text": "Real-world exchanges all suffer to varying degrees from \u201clast-minute\u201d failures, where an algorithmic match or set of matches fails to move to transplantation. This can occur for a variety of reasons, including more extensive medical testing performed before a surgery, a patient or donor becoming too sick to participate, or a patient receiving an organ from another exchange or from the deceased donor waiting list.\nTo address these post-match arc failures, Dickerson et al. [2013] augments the standard model of kidney exchange to include a success probability p for each arc in the graph. They show how to solve this model using branch and price, where the pricing problem is solved in time exponential in the chain and cycle cap. Prior compact formulations\u2014and, indeed, prior \u201cedge formulations\u201d like those due to Abraham et al. [2007], Constantino et al. [2013], and Anderson et al. [2015]\u2014are not expressive enough to allow for generalization to this model. Intuitively, while a single arc failure prevents an entire cycle from executing, chains are capable of incremental execution, yielding utility from the NDD to the first arc failure. Thus, the expected utility gained from an arc in a chain is dependent on where in the chain that arc is located, which is not expressed in those models."}, {"heading": "6.1. PICEF for failure-aware matching", "text": "With only minor modification, PICEF allows for implementation of failure-aware kidney exchange, under the restriction that each arc is assumed to succeed with equal probability p. While this assumption of equal probabilities is likely not true in practice, Dickerson et al. [2013] motivate why a fielded implementation of this model would potentially choose to equalize all failure probabilities: namely, so that already-sick patients\u2014who will likely have higher failure rates\u2014are not further marginalized by this model. Thus, given a single success probability p, we can adjust the PICEF objective function to return the maximum expected weight matching as follows:\nmax \u2211\n(i,j)\u2208A \u2211 k\u2208K\u2032(i,j) pkwijyijk + \u2211 c\u2208C p|c|wczc (5a)\nObjective (5a) is split into two parts: the utility received from arcs in chains, and the utility received from cycles. For the latter, a cycle c of size |c| has probability p|c| of executing; otherwise, it yields zero utility. For the former, if an arc is used at position k in a chain, then it yields a pk fraction of its original weight\u2014that is, the probability that the underlying chain will execute at least through its first k arcs."}, {"heading": "6.2. Failure-aware polynomial pricing for cycles", "text": "The initial failure-aware branch-and-price work by Dickerson et al. [2013] generalized the pricing strategy of Abraham et al. [2007], and thus suffered from a pricing problem that ran in time exponential in cycle and chain cap. Glorie et al. [2014] and Plaut et al. [2016a] discussed polynomial pricing algorithms for cycles\u2014but not chains [Plaut et al."}, {"heading": "A:16 J.P. Dickerson, D.F. Manlove, B. Plaut, T. Sandholm and J. Trimble", "text": "Algorithm 1 Polynomial-time failure-aware pricing for cycles. 1: function GETDISCOUNTEDPOSITIVEPRICECYCLES(D = (V,A),K, p, w, \u03b4) 2: C \u2190 \u2205 3: for each k = 2...K do . Consider all possible cycle lengths 4: wk(i, j)\u2190 \u03b4j \u2212 pkwij \u2200(i, j) \u2208 A . Reduction of Glorie et al. [2014] 5: C \u2190 C \u222a GETNEGATIVECYCLES(D, k,wk) 6: return C\n2016b]\u2014in the deterministic case. Using the algorithm of Plaut et al. [2016a] as a subroutine, we present an algorithm which solves the failure-aware, or discounted, pricing problem for cycles in polynomial time, under the restriction that all arcs have equal success probability p.\nIn the deterministic setting, the price of a cycle c is \u2211 (i,j)\u2208c wij\u2212 \u2211 j\u2208c \u03b4j , where wij is the weight of arc (i, j), and \u03b4j is the dual value of vertex j in the LP. Glorie et al. [2014] show how the arc weights and dual values can be collapsed into just arc weights, and reduce the deterministic pricing problem to finding negative-weight cycles of length at most K in a directed graph. In this section, we use \u201clength\u201d to denote the number of vertices in a cycle, not its weight.\nThe discounted price of a cycle is p|c| \u2211 (i,j)\u2208c wij \u2212 \u2211 j\u2208c \u03b4j . Since the utility of an arc now depends on what cycle it ends up in, we cannot collapse arc weights and dual values without knowing the length of the cycle containing it.\nWith this motivation, we augment the algorithm to run O(K) iterations for each source vertex: one for each possible final cycle length. On each iteration, we know exactly how much arc weights will be worth in the final cycle, so we can reduce the discounted pricing problem to the deterministic pricing problem.\nPseudocode for the failure-aware cycle pricing algorithm is given by GETDISCOUNTEDPOSITIVEPRICECYCLES. Let w and \u03b4 be the arc weights and dual values respectively in the original graph. The function GETNEGATIVECYCLES is the deterministic pricing algorithm due to Plaut et al. [2016a] which returns at least one negative cycle of length at most K, or shows that none exist.\nThe algorithm of Plaut et al. [2016a] has complexity O(|V ||A|K2). Considering all K \u2212 1 possible cycle lengths brings the complexity of our algorithm to O(|V ||A|K3).\nTHEOREM 6.1. If there is a discounted positive price cycle in the graph, Algorithm 1 will return at least one discounted positive price cycle."}, {"heading": "7. CONCLUSIONS & FUTURE RESEARCH", "text": "In this paper, we addressed the tractable clearing of kidney exchanges with short cycles and long, but bounded, chains. This is motivated by kidney exchange practice, where chains are often long but bounded in length due to post-match arc failure. We introduced three IP formulations, two of which are compact, and favorably compared their LPRs to a state-of-the-art formulation with a tight relaxation. Then, on real data from the UNOS US nationwide exchange and the NLDKSS United Kingdom nationwide exchange, as well as on generated data, we showed that our new models outperform all other solvers on realistically-parameterized kidney exchange problems\u2013often dramatically. We also explored practical extensions of our models, such as the use of branch and price for additional scalability, and an extension to the failure-aware kidney exchange case that more accurately mimics reality.\nBeyond the immediate importance of more scalable static kidney exchange solvers for use in fielded exchanges, solvers like the ones presented in this paper are of practical importance in more advanced\u2014and as yet unfielded\u2014approaches to clearing kid-"}, {"heading": "Position-Indexed Formulations for Kidney Exchange A:17", "text": "ney exchange. In reality, patients and donors arrive to and depart from the exchange dynamically over time [U\u0308nver 2010]. Approaches to clearing dynamic kidney exchange often rely on solving the static problem many times [Awasthi and Sandholm 2009; Dickerson et al. 2012; Anderson 2014; Dickerson and Sandholm 2015; Glorie et al. 2015]; thus, faster static solvers result in better dynamic exchange solutions. Use of the techniques in this paper\u2014or adaptations thereof\u2014as subsolvers is of interest.\nFrom a theoretical point of view, extending the comparison of LPRs to a complete ordering of all LPRs amongst models of kidney exchange\u2014especially for different parameterizations of the underlying model, like the inclusion of chains or arc failures\u2014 would give insight as to which solver is best suited for an exchange running under a specific set of business constraints."}, {"heading": "ACKNOWLEDGMENTS", "text": "The authors would like to thank Ross Anderson, Kristiaan Glorie, Xenia Klimentova, Nicolau Santos, and Ana Viana for valuable discussions regarding this work and for making available their kidney exchange software for the purposes of conducting our experimental evaluation."}, {"heading": "A:18 J.P. Dickerson, D.F. Manlove, B. Plaut, T. Sandholm and J. Trimble", "text": "John P. Dickerson, Ariel D. Procaccia, and Tuomas Sandholm. 2012. Dynamic Matching via Weighted Myopia with Application to Kidney Exchange. In AAAI Conference on Artificial Intelligence (AAAI). 1340\u2013 1346.\nJohn P. Dickerson, Ariel D. Procaccia, and Tuomas Sandholm. 2013. Failure-Aware Kidney Exchange. In Proceedings of the ACM Conference on Electronic Commerce (EC). 323\u2013340.\nJohn P. Dickerson and Tuomas Sandholm. 2015. FutureMatch: Combining Human Value Judgments and Machine Learning to Match in Dynamic Environments. In AAAI Conference on Artificial Intelligence (AAAI). 622\u2013628.\nYichuan Ding, Dongdong Ge, Simai He, and Christopher Ryan. 2015. A non-asymptotic approach to analyzing kidney exchange graphs. In Proceedings of the ACM Conference on Economics and Computation (EC). 257\u2013258.\nKristiaan Glorie, Margarida Carvalho, Miguel Constantino, Paul Bouman, and Ana Viana. 2015. Robust Models for the Kidney Exchange Problem. (2015). Working paper.\nKristiaan M. Glorie, J. Joris van de Klundert, and Albert P. M. Wagelmans. 2014. Kidney Exchange with Long Chains: An Efficient Pricing Algorithm for Clearing Barter Exchanges with Branch-and-Price. Manufacturing & Service Operations Management (MSOM) 16, 4 (2014), 498\u2013512.\nA. Hart, J. M. Smith, M. A. Skeans, S. K. Gustafson, D. E. Stewart, W. S. Cherikh, J. L. Wainright, G. Boyle, J. J. Snyder, B. L. Kasiske, and A. K. Israni. 2016. Kidney. American Journal of Transplantation (Special Issue: OPTN/SRTR Annual Data Report 2014) 16, Issue Supplement S2 (2016), 11\u201346.\nXenia Klimentova, Filipe Alvelos, and Ana Viana. 2014. A New Branch-and-Price Approach for the Kidney Exchange Problem. In Computational Science and Its Applications (ICCSA-2014). Springer, 237\u2013252.\nVicky Mak-Hau. 2015. On the kidney exchange problem: cardinality constrained cycle and chain problems on directed graphs: a survey of integer programming approaches. Journal of Combinatorial Optimization (2015), 1\u201325.\nDavid Manlove and Gregg O\u2019Malley. 2015. Paired and Altruistic Kidney Donation in the UK: Algorithms and Experimentation. ACM Journal of Experimental Algorithmics 19, 1 (2015).\nNicholas Mattei and Toby Walsh. 2013. Preflib: A library for preferences. In Algorithmic Decision Theory. Lecture Notes in Computer Science, Vol. 8176. Springer, 259\u2013270.\nRobert Montgomery, Sommer Gentry, William H Marks, Daniel S Warren, Janet Hiller, Julie Houp, Andrea A Zachary, J Keith Melancon, Warren R Maley, Hamid Rabb, Christopher Simpkins, and Dorry L Segev. 2006. Domino paired kidney donation: a strategy to make best use of live non-directed donation. The Lancet 368, 9533 (2006), 419\u2013421.\nJoa\u0303o Pedro Pedroso. 2014. Maximizing Expectation on Vertex-Disjoint Cycle Packing. In Computational Science and Its Applications (ICCSA-2014). Springer, 32\u201346.\nBenjamin Plaut, John P. Dickerson, and Tuomas Sandholm. 2016a. Fast Optimal Clearing of Capped-Chain Barter Exchanges. In AAAI Conference on Artificial Intelligence (AAAI). 601\u2013607.\nBenjamin Plaut, John P. Dickerson, and Tuomas Sandholm. 2016b. Hardness of the Pricing Problem for Chains in Barter Exchanges. CoRR abs/1606.00117 (2016).\nF. T. Rapaport. 1986. The case for a living emotionally related international kidney donor exchange registry. Transplantation Proceedings 18 (1986), 5\u20139.\nMichael Rees, Jonathan Kopke, Ronald Pelletier, Dorry Segev, Matthew Rutter, Alfredo Fabrega, Jeffrey Rogers, Oleh Pankewycz, Janet Hiller, Alvin Roth, Tuomas Sandholm, Utku U\u0308nver, and Robert Montgomery. 2009. A Nonsimultaneous, Extended, Altruistic-Donor Chain. New England Journal of Medicine 360, 11 (2009), 1096\u20131101.\nAlvin Roth, Tayfun So\u0308nmez, and Utku U\u0308nver. 2004. Kidney exchange. Quarterly Journal of Economics 119, 2 (2004), 457\u2013488.\nAlvin Roth, Tayfun So\u0308nmez, and Utku U\u0308nver. 2005. Pairwise Kidney Exchange. Journal of Economic Theory 125, 2 (2005), 151\u2013188.\nAlvin Roth, Tayfun So\u0308nmez, and Utku U\u0308nver. 2007. Efficient kidney exchange: Coincidence of wants in a market with compatibility-based preferences. American Economic Review 97 (2007), 828\u2013851.\nAlvin Roth, Tayfun So\u0308nmez, Utku U\u0308nver, Frank Delmonico, and Susan L. Saidman. 2006. Utilizing list exchange and nondirected donation through \u2018chain\u2019 paired kidney donations. American Journal of Transplantation 6 (2006), 2694\u20132705.\nPanos Toulis and David C. Parkes. 2015. Design and analysis of multi-hospital kidney exchange mechanisms using random graphs. Games and Economic Behavior 91, 0 (2015), 360\u2013382.\nUtku U\u0308nver. 2010. Dynamic kidney exchange. Review of Economic Studies 77, 1 (2010), 372\u2013414. Steven Vajda. 1961. Mathematical Programming. Addison-Wesley."}, {"heading": "Online Appendix to: Position-Indexed Formulations for Kidney Exchange", "text": "JOHN P. DICKERSON, Carnegie Mellon University DAVID F. MANLOVE, University of Glasgow BENJAMIN PLAUT, Carnegie Mellon University TUOMAS SANDHOLM, Carnegie Mellon University JAMES TRIMBLE, University of Glasgow"}, {"heading": "A. ADDITIONAL PROOFS FOR THE PIEF MODEL", "text": "We now provide additional theoretical results pertaining to the position-indexed edge formulation (PIEF) model, and proofs to theoretical results stated in the main paper.\nA.1. Validity of the PIEF model LEMMA A.1. Any assignment of values to the xlijk that respects the PIEF constraints yields a vertex-disjoint set of cycles of length no greater than K.\nPROOF. We show this by demonstrating that in each graph copy, the set of selected edges is either empty, or composes a single cycle of length no greater than K.\nLet l \u2208 P be given such that at least one edge is selected in graph copy Dl, and let kmax be the highest position k such that xlijk = 1 for some i, j. Any selected edge (i, j) at position kmax in graph copy Dl must point to l, as otherwise the flow conservation constraint (1c) would be violated at vertex j. Furthermore, there must be no more than one edge selected at position kmax in graph copy Dl, as otherwise the capacity constraint (1c) for vertex l would be violated.\nThe flow conservation constraints (1b) ensure that we can follow a path backwards from the selected edge at position kmax to a selected edge at position 1, and also that at most one edge is selected at each position. Since the edge at position 1 must start at vertex l by the construction of K(i, j, l), we have shown that graph copy Dl contains a selected cycle beginning and ending at l, and that this graph copy does not contain any other selected edges.\nConstraint (1b) ensures that the vertex-disjointness condition is satisfied.\nLEMMA A.2. For any vertex-disjoint set of cycles of length no greater than K, there is an assignment of values to the xlijk respecting the PIEF constraints.\nPROOF. This assignment can be constructed trivially.\nTHEOREM A.3. The PIEF model yields an optimal solution to the kidney exchange problem."}, {"heading": "A.2. Proofs for the LPR of PIEF", "text": "The following lemma is used in the proof of Theorem 3.1, and its proof is included here for completeness.\nLEMMA A.4. Let a sequence of arcs W = (a1, . . . , a|W |) in a directed graph D be given, such that W is a closed walk\u2014that is, the target vertex of each arc is the source vertex of the following arc, and the sequence starts and ends at the same vertex. (It is permitted for an arc to appear more than once in W .) Let X be the multiset {a1, . . . , a|W |}. Then we can partition X into C = {c1, . . . , c|C|}, where each ci \u2208 C is a set of arcs that form a cycle in D.\nACM Journal Name, Vol. V, No. N, Article A, Publication date: January YYYY."}, {"heading": "App\u20132 J.P. Dickerson, D.F. Manlove, B. Plaut, T. Sandholm and J. Trimble", "text": "PROOF. The following algorithm can be used to construct the set C.\n(1) Let C = {}. (2) For each i \u2208 {1, . . . , |W |}, let si be the source vertex of ai. (3) If the sequence (si)1\u2264i\u2264|W | contains no repeated vertices, then W must be a cycle;\ngo to step 5. (4) Choose i, j \u2208 {1, . . . , |W |} with i < j, such that si = sj and all the sk are distinct for\ni \u2264 k < j. The arcs (ak)i\u2264k<j form a cycle; remove these from W and add the set of removed arcs to C. (Observe that W remains a closed walk). Re-index the arcs in the new, shorter W as 1, . . . , |W |. Return to step 2.\n(5) Add {a : a appears in W} to C and terminate.\nTHEOREM 3.1. ZCF = ZPIEF (without chains).\nPROOF. ZCF ZPIEF . Let (z\u2217c )c\u2208C be an optimal solution to the LPR of the cycle formulation, with objective value ZCF . We will construct a solution to the LPR of PIEF whose objective value is also ZCF . We translate the z\u2217c into an assignment of values to the xlijk in a natural way, as follows. For each c \u2208 C, let l be the index of the lowest-numbered vertex appearing in c. Number the positions of arcs of c in order as {1, . . . , |c|}, beginning with the arc leaving l.\nFor each vertex l \u2208 V , each arc (i, j) \u2208 Al, and each position k \u2208 K(i, j, l), let C(i, j, k, l) be the set of cycles in C whose lowest-numbered vertex is l and which contain (i, j) at position k. Let\nxlijk = \u2211\nc\u2208C(i,j,k,l)\nz\u2217c .\nThis construction yields a solution which satisfies the PIEF constraints and has objective value ZCF . ZPIEF ZCF . Let an optimal solution (xlijk) to the LPR of PIEF be given, with objective value ZPIEF . Our strategy is to begin by assigning zero to each cycle formulation variable zc(c \u2208 C), and to make a series of decreases in PIEF variables and corresponding increases in cycle formulation variables, ending when all of the PIEF variables are set to zero. We maintain three invariants after each such step. First, the sum of the PIEF and cycle formulation objective values remains ZPIEF . Second, the constraints of the relaxed PIEF are satisfied. Third, the following vertex capacity constraint\u2014which combines the capacity constraints from the PIEF and the cycle formulation\u2014is satisfied for each vertex.\u2211\nl\u2208V \u2211 i:(i,j)\u2208Al \u2211 k\u2208K(i,j,l) xlijk + \u2211 c:j\u2208c zc \u2264 1 j \u2208 P\nIf any of the PIEF variables takes a non-zero value, then we can select i1, i2, l such that i1 = l and xli1i21 > 0. By the PIEF flow conservation constraints (1c), we can select a closed walk W = ((i1, i2), (i2, i3), . . . , (ik\u2032\u22121, ik\u2032)) of at most K arcs in Dl such that xlikik+1k > 0 for 1 \u2264 k < k\u2032, and such that i1 = ik\u2032 . Let xmin be the smallest non-zero value taken by any of the xlikik+1k.\nBy Lemma A.4, the set of arc positions {1, . . . , k\u2032\u2212 1} can be decomposed into a set of sets C, such that for each c \u2208 C we have that the arcs {ak : k \u2208 c} can be arranged to form a cycle; we denote this as cyc(c). For each c \u2208 C, we subtract xmin from xlikik+1k for each k \u2208 c, and we add xmin to zcyc(c). This transformation strictly decreases the count"}, {"heading": "Position-Indexed Formulations for Kidney Exchange App\u20133", "text": "of xlijk variables that take a non-zero value. By repeatedly carrying out this step, we will reach a point where all of the xlijk variables take the value zero, and where the zc variables respect the cycle formulation constraints and give objective value ZPIEF ."}, {"heading": "B. ADDITIONAL PROOFS FOR THE PICEF MODEL", "text": "We now provide additional theoretical results pertaining to the position-indexed chainedge formulation (PICEF) model, and proofs to theoretical results stated in the main paper.\nB.1. Validity of the PICEF model LEMMA B.1. Any assignment of values to the yijk that respects constraints (4c) and (4d) and such that \u2211 j:(j,i)\u2208A \u2211 k\u2208K(j,i) yjik \u2264 1 (6)\nfor all i \u2208 P , yields a vertex-disjoint set chains of length no greater than L. PROOF. We say that arc (i, j) is selected at position k if and only if zijk = 1. Our proof has three parts. We first give a procedure to construct a set S of chains of length no greater than L, where each chain in S consists only of selected edges. We then show that these chains are vertex-disjoint, and that any selected edge appears in some chain in S.\nBy constraint (4c), each i \u2208 N has at most one selected outgoing arc. For each i \u2208 N that has an outgoing arc (i, j1), we begin to construct chain c by letting c = ((i, j1))\u2014 a sequence containing one edge. Vertex j1 has at most one selected outgoing arc at position 2, by constraint (4d). If such an arc (j1, j2) exists, we add it to our chain. We continue to add edges (j2, j3), (j3, j4), . . . , until we reach k such that a selected edge from jk at position k + 1 does not exist. The chain c will therefore be a path of selected edges at positions 1, . . . , |c|, where the length of c can be no greater than L since no variable in the model has position greater than L. Add the chain c to S.\nBy constraint (4c), no vertex in N can appear in two chains in S. By constraint (4b), the same is true for vertices in P . Hence, the chains in S are vertex disjoint.\nTo complete the proof, we show that any selected edge must be part of one of these chains in S. Let a variable zijk taking the value 1 be given. By applying constraint (4d) repeatedly, we can see that there must exist be a path of length k from an NDD h to j, containing only selected edges. Let c \u2208 S be the chain starting at h. Since no vertex in c has two selected outgoing arcs, there must must exist a unique path of length k from h, and (i, j) must therefore be the kth edge of c.\nLEMMA B.2. Any assignment of values to the yijk and zc that respects the PICEF constraints yields a vertex-disjoint set cycles of length no greater than K and chains no greater than L.\nPROOF. We call a cycle c such that zc = 1 a selected cycle, and an arc (i, j) such that zijk = 1 for some k a selected arc.\nBy (4b), the selected cycles are vertex disjoint. By Lemma B.1 the selected arcs compose a set of vertex-disjoint chains, each of which has length bounded by L (The conditions of the lemma are satisfied since constraint (4b) implies (6)).\nIt remains to show that no selected cycle shares a vertex with a selected arc. Suppose, to the contrary, that some selected cycle c shares vertex i \u2208 P with a selected arc a. Vertex i cannot be the target of a, since constraint (4b) would be violated if i appears both in selected cycle c and as the target of selected arc a. Hence a = (i, j) for some"}, {"heading": "App\u20134 J.P. Dickerson, D.F. Manlove, B. Plaut, T. Sandholm and J. Trimble", "text": "j \u2208 P . By constraint (4d), i must be the target of another selected arc, a\u2032. Therefore, i appears in c and is the target of a\u2032, violating constraint (4b).\nLEMMA B.3. For any valid set of vertex-disjoint cycles and chains, there is an assignment of values to the yijk and zc respecting the PICEF constraints.\nPROOF. This assignment can be constructed trivially.\nTHEOREM B.4. The PICEF model yields an optimal solution to the kidney exchange problem."}, {"heading": "B.2. Proofs for the LPR of PICEF", "text": "THEOREM 4.1. ZCF \u227a ZPICEF (with chains). PROOF. ZCF ZPICEF . Consider an optimal solution to the LPR of the cycle formulation. We show how to construct an equivalent (optimal) solution to the LPR of PICEF. For c \u2208 C, we transfer the value of zc directly from the cycle formulation solution to the PICEF solution. For each (i, j) \u2208 A and each k \u2208 K\u2032(i, j), let\nyijk = \u2211\n(i,j) appears at position k of c\nzc.\nThis solution has the same objective value as the cycle formulation solution, and satisfies the constraints of the LPR of PICEF. ZCF \u227a ZPICEF . Figure 7 shows a graph for which ZPICEF is strictly greater (i.e., worse) than ZCF . Let K = 2 and L = 4. In this instance, N = {1} and P = {2, . . . , 7}. In the cycle formulation, this instance has no admissible cycles, and the only admissible chains are 1 \u2192 2 \u2192 3 \u2192 4, 1 \u2192 5 \u2192 6 \u2192 7, and their prefixes. Since the longest chain has length 3 and any the sum of chain-variables containing vertex 1 may not exceed 1, we can see that the optimal objective value to the LPR of the cycle formulation is 3.\nWe can achieve an objective value of 7/2 to the LPR of PICEF, by letting y121 = y232 = y343 = y151 = y562 = y673 = y754 = 1/2.\nTHEOREM 4.2. Let z \u2208 R+ be given. There exists a problem instance for which ZPICEF/ZCF > z, where ZPICEF is the objective value of the LPR of PICEF and ZCF is the objective value of the LPR of the cycle formulation.\nPROOF. We give a family of graphs, parameterised by K and L, for which ZPICEF is strictly greater than ZCF . Given a constant cycle cap of K and a chain cap of L (which can effectively be infinite, if L = |V |), the graphs are constructed as follows. For i \u2208 [L\u2212K\u22121], create a cycle \u3008vi1, vi2, . . . , viK+1\u3009 such that vi+11 = vi2 for each i \u2208 [1, L\u2212K\u22122]; the cycle is otherwise disjoint from the rest of the graph. Connect a single altruist a to v11 ; the altruist is otherwise disjoint from the rest of the graph. Figure 8 visualizes the constructed graph.\nThe maximum cardinality disjoint packing of cycles of length at mostK and chains of length at most L is the unique chain (a, v11 , v21 , . . . , v L\u2212K\u22121 1 , v L\u2212K\u22121 2 , . . . , v L\u2212K\u22121 K+1 ). Thus,\nPosition-Indexed Formulations for Kidney Exchange App\u20135\nOPT = L, where OPT is the optimal objective value to the integer program. Indeed, there are no legal cycles of length at most K in the graph, and at most one chain can be in any feasible solution due to the shared altruist a, so the (unique, by construction) longest chain is optimal.\nThe LPR of the PICEF representation of this instance will assign weight of 1/2 to each edge in the graph, for a total objective of ZPICEF = 1/2 + (L+K \u2212 1)(K+12 ).\nThe LPR of the cycle formulation representation will create variables for each feasible cycle and chain in the graph. There are no feasible cycles in the graph. All chains in the graph share the edge (a, v11); thus all chains intersect and all chains contain a. Thus, the sole binding constraint in the LPR of the cycle formulation is that the altruist node a appears in at most one chain. For chain decision variables xc \u2208 [0, 1], this problem can be rewritten as\nmax \u2211 c |c|xc subject to \u2211 c xc \u2264 1\nThis constraint matrix is totally unimodular, and thus the LP optimum is integral (and is the IP optimum, or ZCF = OPT = L).\nThe ratio of ZPICEF to ZCF is thus\n1\n2L +\n( 1 +\nK \u2212 1 L\n)( K + 1\n2\n)\nwhich can be made arbitrarily large by increasing K."}, {"heading": "C. HYBRID FORMULATION C.1. Description of the HPIEF model", "text": "In this section, we present a compact generalization of the PIEF model to kidney exchange graphs with non-directed donors. This stands in contrast to the the PICEF formulation, which has polynomial counts of constraints and edge variables, but an exponential number of cycle variables. By replacing the cycle variables in PICEF with the variables from PIEF and modifying the constraints accordingly, we can create a compact formulation, the hybrid PIEF (HPIEF). Let the variables xlijl and the index set K(i, j, l) be defined as in PIEF. Let the variables yijk and the index set K(i, j) be defined as in PICEF. The HPIEF integer program is as follows.\nApp\u20136 J.P. Dickerson, D.F. Manlove, B. Plaut, T. Sandholm and J. Trimble\nmax \u2211 l\u2208P \u2211 (i,j)\u2208Al \u2211 k\u2208K(i,j,l) wijx l ijk + \u2211 (i,j)\u2208A \u2211 k\u2208K(i,j) wijyijk (7a)\ns.t. \u2211 l\u2208P \u2211 j:(j,i)\u2208Al \u2211 k\u2208K(j,i,l) xljik + \u2211 j:(j,i)\u2208A \u2211 k\u2208K(j,i) yjik \u2264 1 i \u2208 P (7b)\nConstraints (1c), (4c), and (4d)\nxlijk \u2208 {0, 1} l \u2208 P, (i, j) \u2208 Al,\nk \u2208 K(i, j, l) (7c)\nyijk \u2208 {0, 1} (i, j) \u2208 A, k \u2208 K(i, j) (7d) Inequalities (7b) and (4c) are the capacity constraints for patients and NDDs respectively. The reductions described in Subsections 3.2.1 and 3.2.2 can also be applied to the xlijk in HPIEF.\nC.2. Validity of the HPIEF model LEMMA C.1. Any assignment of values to the xlijk and yijk that respects the HPIEF constraints yields a vertex-disjoint set cycles of length no greater than K and chains no greater than L.\nPROOF. (Sketch.) Clearly, if the HPIEF constraints are satisfied then the PIEF constraints (1b-1d) are satisfied also. Therefore, by Theorem A.1, the edges selected by the xlijk form a vertex-disjoint set of cycles of length no greater than K.\nBy Lemma B.1, the selected arcs compose a set of vertex-disjoint chains, each of which has length bounded by L.\nIt remains to show that the selected cycles and chains are vertex-disjoint. This can be showed straightforwardly, along similar lines to the proof for Theorem B.2.\nLEMMA C.2. For any valid set of vertex-disjoint cycles and chains, there is an assignment of values to the xlijk and yijk respecting the HPIEF constraints.\nPROOF. This assignment can be constructed trivially.\nTHEOREM C.3. The HPIEF model yields an optimal solution to the kidney exchange problem."}, {"heading": "C.3. LPR comparison of HPIEF and PICEF", "text": "THEOREM C.4. ZHPIEF = ZPICEF The proof is similar to the proof for Theorem 3.1, and is therefore omitted."}, {"heading": "D. ADDITIONAL BACKGROUND AND PROOFS FOR FAILURE-AWARE THE PICEF MODEL", "text": "In this section, we provide a proof of correctness of Algorithm 1\u2014which implements polynomial-time pricing of cycles for branch and price in the augmented failure-aware PICEF model\u2014and discuss by way of counterexample why the basic deterministic polynomial-time cycle pricing algorithms of Glorie et al. [2014] and Plaut et al. [2016a] cannot be directly used for this case."}, {"heading": "D.1. Proof of Theorem 6.1", "text": "THEOREM 6.1. If there is a discounted positive price cycle in the graph, Algorithm 1 will return at least one discounted positive price cycle."}, {"heading": "Position-Indexed Formulations for Kidney Exchange App\u20137", "text": "PROOF. Let c = \u3008v1, v2, . . . , vn\u3009 be a discounted positive price cycle. Then pn \u2211 (i,j)\u2208c wij \u2212 \u2211 j\u2208c \u03b4j > 0. Therefore \u2211 j\u2208c \u03b4j \u2212 pn \u2211 (i,j)\u2208c wij < 0. Then by definition\nof wk, we have \u2211 (i,j)\u2208c(\u03b4j \u2212 pnwij) = \u2211\n(i,j)\u2208c wn(i, j) < 0. This implies that c is a negative cycle in D on the k = n iteration of Algorithm 1. By the correctness of GETNEGATIVECYCLES, if there is a negative cycle in the graph, GETNEGATIVECYCLES(D,n,wn) will return at least one negative cycle of length at most n.\nLet c\u2032 be a returned cycle. Since c\u2032 is negative in D on the k = n iteration, we have\u2211 j\u2208c\u2032 \u03b4j \u2212 pn \u2211 (i,j)\u2208c\u2032 wij < 0. Therefore p n \u2211 (i,j)\u2208c\u2032 wij \u2212 \u2211 j\u2208c\u2032 \u03b4j > 0.\nSince |c\u2032| \u2264 n by the correctness of GETNEGATIVECYCLES, we have p|c\u2032| \u2265 pn. Because all arc weights in the original graph are nonnegative, \u2211 (i,j)\u2208c\u2032 wij \u2265 0. Therefore\np|c \u2032|\u2211 (i,j)\u2208c\u2032 wij \u2265 pn \u2211 (i,j)\u2208c\u2032 wij . Then p |c\u2032|\u2211 (i,j)\u2208c\u2032 wij \u2212 \u2211 j\u2208c\u2032 \u03b4j \u2265 pn \u2211 (i,j)\u2208c\u2032 wij \u2212\u2211\nj\u2208c\u2032 \u03b4j > 0, so c \u2032 is indeed discounted positive price. Therefore Algorithm 1 returns at least one discounted positive price cycle.\nD.2. Insufficiency of previous algorithms for the failure-aware pricing problem The pricing problem in the deterministic context, where post-match failures are not considered, is known to be solvable in polynomial time for cycles [Glorie et al. 2014; Plaut et al. 2016a] but not chains [Plaut et al. 2016b]. In Section 6.2, we presented Algorithm 1, a polynomial-time algorithm for the pricing problem for cycles in the failure-aware context, for uniform success probability. In this section, we show how the basic algorithm for the deterministic pricing problem is not sufficient for the failureaware context.\nThe algorithm for the deterministic setting initiates a Bellman-Ford style search to find negative cycles. Bellman-Ford is run P times: on each iteration a different vertex representing a donor-patient pair is the source. After Bellman-Ford has been run from the source s for K \u2212 1 steps, suppose there is a path \u03c1 from s to some vertex v with weight w(\u03c1), and there is an arc from v back to s with weight wvs. If w(\u03c1) + wvs < 0, then \u03c1 \u222a (v, s) is a negative cycle [Glorie et al. 2014; Plaut et al. 2016a].\nFor consistency, in this section we discuss finding discounted negative price cycles, which is trivially equivalent to finding discounted positive price cycles by reversing the signs on all arc weights and dual values. Therefore, we are looking for cycles c satisfying \u2211 j\u2208c \u03b4j \u2212 pn \u2211 (i,j)\u2208c wij < 0.\nConsider a straightforward modification to the algorithm from the deterministic setting, where each path now separately remembers its accumulated sum of dual values, sum of arc weights, and length. All of these can be easily recorded during the BellmanFord update step without altering the algorithm\u2019s complexity.\nThe issue arises when comparing paths. Figure 9 gives an example of this. Consider running Bellman-Ford with s as the source and K = 3. The path (s, v2, v3) is preferable to (s, v1, v3), since we will end with the 3-cycle \u3008s, v2, v3\u3009 which has weight p3(\u2212\u03b7p3 ) + \u03b7 \u2212 1 = \u22121. However, suppose K = 4, and we removed the arc (v3, s). Then \u3008s, v2, v3\u3009 is no longer a cycle, and the path (s, v1, v3, v4) will have weight p4( \u03b7p3 \u2212 1) + \u03b7 \u2212 1 = \u03b7 \u2212 p\u03b7 \u2212 p4 \u2212 1 > 0, assuming \u03b7 is large and p is not close to 1. However, the path (s, v1, v3, v4) would lead to a discounted negative cycle with weight \u2212p4. The algorithm from the deterministic setting cannot compare two paths without knowing the final cycle length.\nApp\u20138 J.P. Dickerson, D.F. Manlove, B. Plaut, T. Sandholm and J. Trimble"}, {"heading": "E. TABULATED EXPERIMENTAL RESULTS", "text": "In this section, we restate the experimental results shown in Figures 5 and 6 of Section 5 in the body of the paper, but now including statistics that were not possible to show in that figure.\nA pp\u20139\nA pp\u201310\nA pp\u201311\nA pp\u201312\nA pp\u201313\nA pp\u201314\nA pp\u201315\nA pp\u201316\nA pp\u201317\nA pp\u201318\nA pp\u201319\nA pp\u201320\nA pp\u201321\nA pp\u201322"}], "references": [{"title": "Clearing Algorithms for Barter Exchange Markets: Enabling Nationwide Kidney Exchanges", "author": ["David Abraham", "Avrim Blum", "Tuomas Sandholm."], "venue": "Proceedings of the ACM Conference on Electronic Commerce (EC). 295\u2013304.", "citeRegEx": "Abraham et al\\.,? 2007", "shortCiteRegEx": "Abraham et al\\.", "year": 2007}, {"title": "Dynamic Matching Market Design", "author": ["Mohammad Akbarpour", "Shengwu Li", "Shayan Oveis Gharan."], "venue": "Proceedings of the ACM Conference on Economics and Computation (EC). 355.", "citeRegEx": "Akbarpour et al\\.,? 2014", "shortCiteRegEx": "Akbarpour et al\\.", "year": 2014}, {"title": "A compact formulation for maximizing the expected number of transplants in kidney exchange programs", "author": ["Filipe Alvelos", "Xenia Klimentova", "Abdur Rais", "Ana Viana."], "venue": "Journal of Physics: Conference Series, Vol. 616. IOP Publishing.", "citeRegEx": "Alvelos et al\\.,? 2015", "shortCiteRegEx": "Alvelos et al\\.", "year": 2015}, {"title": "Stochastic models and data driven simulations for healthcare operations", "author": ["Ross Anderson."], "venue": "Ph.D. Dissertation. Massachusetts Institute of Technology.", "citeRegEx": "Anderson.,? 2014", "shortCiteRegEx": "Anderson.", "year": 2014}, {"title": "Finding long chains in kidney exchange using the traveling salesman problem", "author": ["Ross Anderson", "Itai Ashlagi", "David Gamarnik", "Alvin E Roth."], "venue": "Proceedings of the National Academy of Sciences 112, 3 (2015), 663\u2013668.", "citeRegEx": "Anderson et al\\.,? 2015", "shortCiteRegEx": "Anderson et al\\.", "year": 2015}, {"title": "Mix and Match: A strategyproof mechanism for multi-hospital kidney exchange", "author": ["Itai Ashlagi", "Felix Fischer", "Ian A Kash", "Ariel D Procaccia."], "venue": "Games and Economic Behavior 91 (2015), 284\u2013296.", "citeRegEx": "Ashlagi et al\\.,? 2015", "shortCiteRegEx": "Ashlagi et al\\.", "year": 2015}, {"title": "The Need for (long) Chains in Kidney Exchange", "author": ["Itai Ashlagi", "David Gamarnik", "Michael Rees", "Alvin E. Roth."], "venue": "NBER Working Paper No. 18202. (July 2012).", "citeRegEx": "Ashlagi et al\\.,? 2012", "shortCiteRegEx": "Ashlagi et al\\.", "year": 2012}, {"title": "Kidney Exchange in Dynamic Sparse Heterogenous Pools", "author": ["Itai Ashlagi", "Patrick Jaillet", "Vahideh H. Manshadi."], "venue": "Proceedings of the ACM Conference on Electronic Commerce (EC). 25\u201326.", "citeRegEx": "Ashlagi et al\\.,? 2013", "shortCiteRegEx": "Ashlagi et al\\.", "year": 2013}, {"title": "Free riding and participation in large scale, multi-hospital kidney exchange", "author": ["Itai Ashlagi", "Alvin E Roth."], "venue": "Theoretical Economics 9, 3 (2014), 817\u2013863.", "citeRegEx": "Ashlagi and Roth.,? 2014", "shortCiteRegEx": "Ashlagi and Roth.", "year": 2014}, {"title": "Online Stochastic Optimization in the Large: Application to Kidney Exchange", "author": ["Pranjal Awasthi", "Tuomas Sandholm."], "venue": "Proceedings of the 21st International Joint Conference on Artificial Intelligence (IJCAI). 405\u2013411.", "citeRegEx": "Awasthi and Sandholm.,? 2009", "shortCiteRegEx": "Awasthi and Sandholm.", "year": 2009}, {"title": "Branch-and-price: column generation for solving huge integer programs", "author": ["Cynthia Barnhart", "Ellis Johnson", "George Nemhauser", "Martin Savelsbergh", "Pamela Vance."], "venue": "Operations Research 46 (1998), 316\u2013329.", "citeRegEx": "Barnhart et al\\.,? 1998", "shortCiteRegEx": "Barnhart et al\\.", "year": 1998}, {"title": "Maximum weight cycle packing in directed graphs, with application to kidney exchange programs", "author": ["P\u00e9ter Bir\u00f3", "David F Manlove", "Romeo Rizzi."], "venue": "Discrete Mathematics, Algorithms and Applications 1, 04 (2009), 499\u2013517.", "citeRegEx": "Bir\u00f3 et al\\.,? 2009", "shortCiteRegEx": "Bir\u00f3 et al\\.", "year": 2009}, {"title": "Ignorance is Almost Bliss: Near-Optimal Stochastic Matching with Few Queries", "author": ["Avrim Blum", "John P. Dickerson", "Nika Haghtalab", "Ariel D. Procaccia", "Tuomas Sandholm", "Ankit Sharma."], "venue": "Proceedings of the ACM Conference on Economics and Computation (EC). 325\u2013342.", "citeRegEx": "Blum et al\\.,? 2015", "shortCiteRegEx": "Blum et al\\.", "year": 2015}, {"title": "Harnessing the Power of Two Crossmatches", "author": ["Avrim Blum", "Anupam Gupta", "Ariel D. Procaccia", "Ankit Sharma."], "venue": "Proceedings of the ACM Conference on Electronic Commerce (EC). 123\u2013140.", "citeRegEx": "Blum et al\\.,? 2013", "shortCiteRegEx": "Blum et al\\.", "year": 2013}, {"title": "New insights on integerprogramming models for the kidney exchange problem", "author": ["Miguel Constantino", "Xenia Klimentova", "Ana Viana", "Abdur Rais."], "venue": "European Journal of Operational Research 231, 1 (2013), 57\u201368.", "citeRegEx": "Constantino et al\\.,? 2013", "shortCiteRegEx": "Constantino et al\\.", "year": 2013}, {"title": "Dynamic Matching via Weighted Myopia with Application to Kidney Exchange", "author": ["John P. Dickerson", "Ariel D. Procaccia", "Tuomas Sandholm."], "venue": "AAAI Conference on Artificial Intelligence (AAAI). 1340\u2013 1346.", "citeRegEx": "Dickerson et al\\.,? 2012", "shortCiteRegEx": "Dickerson et al\\.", "year": 2012}, {"title": "Failure-Aware Kidney Exchange", "author": ["John P. Dickerson", "Ariel D. Procaccia", "Tuomas Sandholm."], "venue": "Proceedings of the ACM Conference on Electronic Commerce (EC). 323\u2013340.", "citeRegEx": "Dickerson et al\\.,? 2013", "shortCiteRegEx": "Dickerson et al\\.", "year": 2013}, {"title": "FutureMatch: Combining Human Value Judgments and Machine Learning to Match in Dynamic Environments", "author": ["John P. Dickerson", "Tuomas Sandholm."], "venue": "AAAI Conference on Artificial Intelligence (AAAI). 622\u2013628.", "citeRegEx": "Dickerson and Sandholm.,? 2015", "shortCiteRegEx": "Dickerson and Sandholm.", "year": 2015}, {"title": "A non-asymptotic approach to analyzing kidney exchange graphs", "author": ["Yichuan Ding", "Dongdong Ge", "Simai He", "Christopher Ryan."], "venue": "Proceedings of the ACM Conference on Economics and Computation (EC). 257\u2013258.", "citeRegEx": "Ding et al\\.,? 2015", "shortCiteRegEx": "Ding et al\\.", "year": 2015}, {"title": "Robust Models for the Kidney Exchange Problem", "author": ["Kristiaan Glorie", "Margarida Carvalho", "Miguel Constantino", "Paul Bouman", "Ana Viana."], "venue": "(2015). Working paper.", "citeRegEx": "Glorie et al\\.,? 2015", "shortCiteRegEx": "Glorie et al\\.", "year": 2015}, {"title": "Kidney Exchange with Long Chains: An Efficient Pricing Algorithm for Clearing Barter Exchanges with Branch-and-Price", "author": ["Kristiaan M. Glorie", "J. Joris van de Klundert", "Albert P.M. Wagelmans."], "venue": "Manufacturing & Service Operations Management (MSOM) 16, 4 (2014), 498\u2013512.", "citeRegEx": "Glorie et al\\.,? 2014", "shortCiteRegEx": "Glorie et al\\.", "year": 2014}, {"title": "Kidney", "author": ["A. Hart", "J.M. Smith", "M.A. Skeans", "S.K. Gustafson", "D.E. Stewart", "W.S. Cherikh", "J.L. Wainright", "G. Boyle", "J.J. Snyder", "B.L. Kasiske", "A.K. Israni."], "venue": "American Journal of Transplantation (Special Issue: OPTN/SRTR Annual Data Report 2014) 16, Issue Supplement S2 (2016), 11\u201346.", "citeRegEx": "Hart et al\\.,? 2016", "shortCiteRegEx": "Hart et al\\.", "year": 2016}, {"title": "A New Branch-and-Price Approach for the Kidney Exchange Problem", "author": ["Xenia Klimentova", "Filipe Alvelos", "Ana Viana."], "venue": "Computational Science and Its Applications (ICCSA-2014). Springer, 237\u2013252.", "citeRegEx": "Klimentova et al\\.,? 2014", "shortCiteRegEx": "Klimentova et al\\.", "year": 2014}, {"title": "On the kidney exchange problem: cardinality constrained cycle and chain problems on directed graphs: a survey of integer programming approaches", "author": ["Vicky Mak-Hau."], "venue": "Journal of Combinatorial Optimization (2015), 1\u201325.", "citeRegEx": "Mak.Hau.,? 2015", "shortCiteRegEx": "Mak.Hau.", "year": 2015}, {"title": "Paired and Altruistic Kidney Donation in the UK: Algorithms and Experimentation", "author": ["David Manlove", "Gregg O\u2019Malley"], "venue": "ACM Journal of Experimental Algorithmics 19,", "citeRegEx": "Manlove and O.Malley.,? \\Q2015\\E", "shortCiteRegEx": "Manlove and O.Malley.", "year": 2015}, {"title": "Preflib: A library for preferences", "author": ["Nicholas Mattei", "Toby Walsh."], "venue": "Algorithmic Decision Theory. Lecture Notes in Computer Science, Vol. 8176. Springer, 259\u2013270.", "citeRegEx": "Mattei and Walsh.,? 2013", "shortCiteRegEx": "Mattei and Walsh.", "year": 2013}, {"title": "Domino paired kidney donation: a strategy to make best use of live non-directed donation", "author": ["Robert Montgomery", "Sommer Gentry", "William H Marks", "Daniel S Warren", "Janet Hiller", "Julie Houp", "Andrea A Zachary", "J Keith Melancon", "Warren R Maley", "Hamid Rabb", "Christopher Simpkins", "Dorry L Segev."], "venue": "The Lancet 368, 9533 (2006), 419\u2013421.", "citeRegEx": "Montgomery et al\\.,? 2006", "shortCiteRegEx": "Montgomery et al\\.", "year": 2006}, {"title": "Maximizing Expectation on Vertex-Disjoint Cycle Packing", "author": ["Jo\u00e3o Pedro Pedroso."], "venue": "Computational Science and Its Applications (ICCSA-2014). Springer, 32\u201346.", "citeRegEx": "Pedroso.,? 2014", "shortCiteRegEx": "Pedroso.", "year": 2014}, {"title": "Fast Optimal Clearing of Capped-Chain Barter Exchanges", "author": ["Benjamin Plaut", "John P. Dickerson", "Tuomas Sandholm."], "venue": "AAAI Conference on Artificial Intelligence (AAAI). 601\u2013607.", "citeRegEx": "Plaut et al\\.,? 2016a", "shortCiteRegEx": "Plaut et al\\.", "year": 2016}, {"title": "Hardness of the Pricing Problem for Chains in Barter Exchanges", "author": ["Benjamin Plaut", "John P. Dickerson", "Tuomas Sandholm."], "venue": "CoRR abs/1606.00117 (2016).", "citeRegEx": "Plaut et al\\.,? 2016b", "shortCiteRegEx": "Plaut et al\\.", "year": 2016}, {"title": "The case for a living emotionally related international kidney donor exchange registry", "author": ["F.T. Rapaport."], "venue": "Transplantation Proceedings 18 (1986), 5\u20139.", "citeRegEx": "Rapaport.,? 1986", "shortCiteRegEx": "Rapaport.", "year": 1986}, {"title": "A Nonsimultaneous, Extended, Altruistic-Donor Chain", "author": ["Michael Rees", "Jonathan Kopke", "Ronald Pelletier", "Dorry Segev", "Matthew Rutter", "Alfredo Fabrega", "Jeffrey Rogers", "Oleh Pankewycz", "Janet Hiller", "Alvin Roth", "Tuomas Sandholm", "Utku \u00dcnver", "Robert Montgomery."], "venue": "New England Journal of Medicine 360, 11 (2009), 1096\u20131101.", "citeRegEx": "Rees et al\\.,? 2009", "shortCiteRegEx": "Rees et al\\.", "year": 2009}, {"title": "Kidney exchange", "author": ["Alvin Roth", "Tayfun S\u00f6nmez", "Utku \u00dcnver."], "venue": "Quarterly Journal of Economics 119, 2 (2004), 457\u2013488.", "citeRegEx": "Roth et al\\.,? 2004", "shortCiteRegEx": "Roth et al\\.", "year": 2004}, {"title": "Pairwise Kidney Exchange", "author": ["Alvin Roth", "Tayfun S\u00f6nmez", "Utku \u00dcnver."], "venue": "Journal of Economic Theory 125, 2 (2005), 151\u2013188.", "citeRegEx": "Roth et al\\.,? 2005", "shortCiteRegEx": "Roth et al\\.", "year": 2005}, {"title": "Efficient kidney exchange: Coincidence of wants in a market with compatibility-based preferences", "author": ["Alvin Roth", "Tayfun S\u00f6nmez", "Utku \u00dcnver."], "venue": "American Economic Review 97 (2007), 828\u2013851.", "citeRegEx": "Roth et al\\.,? 2007", "shortCiteRegEx": "Roth et al\\.", "year": 2007}, {"title": "Utilizing list exchange and nondirected donation through \u2018chain\u2019 paired kidney donations", "author": ["Alvin Roth", "Tayfun S\u00f6nmez", "Utku \u00dcnver", "Frank Delmonico", "Susan L. Saidman."], "venue": "American Journal of Transplantation 6 (2006), 2694\u20132705.", "citeRegEx": "Roth et al\\.,? 2006", "shortCiteRegEx": "Roth et al\\.", "year": 2006}, {"title": "Design and analysis of multi-hospital kidney exchange mechanisms using random graphs", "author": ["Panos Toulis", "David C. Parkes."], "venue": "Games and Economic Behavior 91, 0 (2015), 360\u2013382.", "citeRegEx": "Toulis and Parkes.,? 2015", "shortCiteRegEx": "Toulis and Parkes.", "year": 2015}, {"title": "Dynamic kidney exchange", "author": ["Utku \u00dcnver."], "venue": "Review of Economic Studies 77, 1 (2010), 372\u2013414.", "citeRegEx": "\u00dcnver.,? 2010", "shortCiteRegEx": "\u00dcnver.", "year": 2010}, {"title": "Mathematical Programming", "author": ["Steven Vajda."], "venue": "Addison-Wesley.", "citeRegEx": "Vajda.,? 1961", "shortCiteRegEx": "Vajda.", "year": 1961}, {"title": "FAILURE-AWARE THE PICEF MODEL In this section, we provide a proof of correctness of Algorithm 1\u2014which implements polynomial-time pricing of cycles for branch and price in the augmented failure-aware PICEF model\u2014and discuss by way of counterexample why the basic deterministic polynomial-time cycle pricing algorithms of Glorie et al", "author": ["Plaut"], "venue": null, "citeRegEx": "Plaut,? \\Q2016\\E", "shortCiteRegEx": "Plaut", "year": 2016}, {"title": "2016a] but not chains [Plaut et al. 2016b", "author": ["Plaut"], "venue": null, "citeRegEx": "Plaut,? \\Q2016\\E", "shortCiteRegEx": "Plaut", "year": 2016}], "referenceMentions": [{"referenceID": 21, "context": "In the United States alone, the kidney transplant waiting list grew from 58,000 people in 2004 to 99,000 people in 2014 [Hart et al. 2016].", "startOffset": 120, "endOffset": 138}, {"referenceID": 32, "context": "A kidney exchange [Rapaport 1986; Roth et al. 2004] is a centrally-administered barter exchange market for kidneys.", "startOffset": 18, "endOffset": 51}, {"referenceID": 26, "context": "A more recent development has been the introduction of non-directed donors (NDDs) to kidney exchange schemes [Montgomery et al. 2006; Roth et al. 2006].", "startOffset": 109, "endOffset": 151}, {"referenceID": 35, "context": "A more recent development has been the introduction of non-directed donors (NDDs) to kidney exchange schemes [Montgomery et al. 2006; Roth et al. 2006].", "startOffset": 109, "endOffset": 151}, {"referenceID": 4, "context": "This approach has been tractable so far; Manlove and O\u2019Malley [2015] report that each instance up to October 2014 in the United Kingdom\u2019s National Living Donor Kidney Sharing Schemes (NLDKSS)\u2014one of the largest kidney exchange schemes\u2014could be solved in under a second, with similar results using stateof-the-art solvers at other large exchanges in the US [Anderson et al. 2015; Plaut et al. 2016a] and the Netherlands [Glorie et al.", "startOffset": 356, "endOffset": 398}, {"referenceID": 28, "context": "This approach has been tractable so far; Manlove and O\u2019Malley [2015] report that each instance up to October 2014 in the United Kingdom\u2019s National Living Donor Kidney Sharing Schemes (NLDKSS)\u2014one of the largest kidney exchange schemes\u2014could be solved in under a second, with similar results using stateof-the-art solvers at other large exchanges in the US [Anderson et al. 2015; Plaut et al. 2016a] and the Netherlands [Glorie et al.", "startOffset": 356, "endOffset": 398}, {"referenceID": 20, "context": "2016a] and the Netherlands [Glorie et al. 2014].", "startOffset": 27, "endOffset": 47}, {"referenceID": 31, "context": "However, there is an urgent need for faster kidney exchange algorithms, for three reasons: \u2014 Schemes have recently increased chain-length caps, and we expect further increases as more schemes evolve towards using nonsimultaneous extended altruistic donor (NEAD) chains [Rees et al. 2009], which can extend across dozens of transplants.", "startOffset": 269, "endOffset": 287}, {"referenceID": 20, "context": "This approach has been tractable so far; Manlove and O\u2019Malley [2015] report that each instance up to October 2014 in the United Kingdom\u2019s National Living Donor Kidney Sharing Schemes (NLDKSS)\u2014one of the largest kidney exchange schemes\u2014could be solved in under a second, with similar results using stateof-the-art solvers at other large exchanges in the US [Anderson et al.", "startOffset": 41, "endOffset": 69}, {"referenceID": 5, "context": "These papers explored what efficient matchings in a steady-state kidney exchange would look like; extensions by Ashlagi et al. [2012], Ashlagi and Roth [2014], and Ding et al.", "startOffset": 112, "endOffset": 134}, {"referenceID": 5, "context": "These papers explored what efficient matchings in a steady-state kidney exchange would look like; extensions by Ashlagi et al. [2012], Ashlagi and Roth [2014], and Ding et al.", "startOffset": 112, "endOffset": 159}, {"referenceID": 5, "context": "These papers explored what efficient matchings in a steady-state kidney exchange would look like; extensions by Ashlagi et al. [2012], Ashlagi and Roth [2014], and Ding et al. [2015] address shortcomings", "startOffset": 112, "endOffset": 183}, {"referenceID": 7, "context": "Various forms of dynamism, like uncertainty over the possible future vertices in the pool [\u00dcnver 2010; Ashlagi et al. 2013; Akbarpour et al. 2014] or uncertainty over the existence of particular edges [Blum et al.", "startOffset": 90, "endOffset": 146}, {"referenceID": 1, "context": "Various forms of dynamism, like uncertainty over the possible future vertices in the pool [\u00dcnver 2010; Ashlagi et al. 2013; Akbarpour et al. 2014] or uncertainty over the existence of particular edges [Blum et al.", "startOffset": 90, "endOffset": 146}, {"referenceID": 13, "context": "2014] or uncertainty over the existence of particular edges [Blum et al. 2013; Dickerson et al. 2013; Blum et al. 2015] have been explored from both an economic and algorithmic efficiency point of view.", "startOffset": 60, "endOffset": 119}, {"referenceID": 16, "context": "2014] or uncertainty over the existence of particular edges [Blum et al. 2013; Dickerson et al. 2013; Blum et al. 2015] have been explored from both an economic and algorithmic efficiency point of view.", "startOffset": 60, "endOffset": 119}, {"referenceID": 12, "context": "2014] or uncertainty over the existence of particular edges [Blum et al. 2013; Dickerson et al. 2013; Blum et al. 2015] have been explored from both an economic and algorithmic efficiency point of view.", "startOffset": 60, "endOffset": 119}, {"referenceID": 4, "context": "Gametheoretic models of kidney exchange, where transplant centers are viewed as agents with a private type consisting of their internal pools, were presented and explored by Ashlagi and Roth [2014], Toulis and Parkes [2015], and Ashlagi et al.", "startOffset": 174, "endOffset": 198}, {"referenceID": 4, "context": "Gametheoretic models of kidney exchange, where transplant centers are viewed as agents with a private type consisting of their internal pools, were presented and explored by Ashlagi and Roth [2014], Toulis and Parkes [2015], and Ashlagi et al.", "startOffset": 174, "endOffset": 224}, {"referenceID": 4, "context": "Gametheoretic models of kidney exchange, where transplant centers are viewed as agents with a private type consisting of their internal pools, were presented and explored by Ashlagi and Roth [2014], Toulis and Parkes [2015], and Ashlagi et al. [2015]. Various forms of dynamism, like uncertainty over the possible future vertices in the pool [\u00dcnver 2010; Ashlagi et al.", "startOffset": 229, "endOffset": 251}, {"referenceID": 0, "context": "The two fundamental IP models for kidney exchange are the cycle formulation, which includes one binary decision variable for each feasible cycle or chain, and the edge formulation, which includes one decision variable for each compatible pair of agents [Abraham et al. 2007; Roth et al. 2007].", "startOffset": 253, "endOffset": 292}, {"referenceID": 34, "context": "The two fundamental IP models for kidney exchange are the cycle formulation, which includes one binary decision variable for each feasible cycle or chain, and the edge formulation, which includes one decision variable for each compatible pair of agents [Abraham et al. 2007; Roth et al. 2007].", "startOffset": 253, "endOffset": 292}, {"referenceID": 10, "context": "A number of kidney exchange algorithms use the cycle formulation with branch and price [Barnhart et al. 1998] to avoid the need to hold an exponential number of variables in memory [Abraham et al.", "startOffset": 87, "endOffset": 109}, {"referenceID": 0, "context": "1998] to avoid the need to hold an exponential number of variables in memory [Abraham et al. 2007; Dickerson et al. 2013; Glorie et al. 2014; Klimentova et al. 2014; Plaut et al. 2016a].", "startOffset": 77, "endOffset": 185}, {"referenceID": 16, "context": "1998] to avoid the need to hold an exponential number of variables in memory [Abraham et al. 2007; Dickerson et al. 2013; Glorie et al. 2014; Klimentova et al. 2014; Plaut et al. 2016a].", "startOffset": 77, "endOffset": 185}, {"referenceID": 20, "context": "1998] to avoid the need to hold an exponential number of variables in memory [Abraham et al. 2007; Dickerson et al. 2013; Glorie et al. 2014; Klimentova et al. 2014; Plaut et al. 2016a].", "startOffset": 77, "endOffset": 185}, {"referenceID": 22, "context": "1998] to avoid the need to hold an exponential number of variables in memory [Abraham et al. 2007; Dickerson et al. 2013; Glorie et al. 2014; Klimentova et al. 2014; Plaut et al. 2016a].", "startOffset": 77, "endOffset": 185}, {"referenceID": 28, "context": "1998] to avoid the need to hold an exponential number of variables in memory [Abraham et al. 2007; Dickerson et al. 2013; Glorie et al. 2014; Klimentova et al. 2014; Plaut et al. 2016a].", "startOffset": 77, "endOffset": 185}, {"referenceID": 0, "context": "An alternative approach to avoiding the cost of keeping the entire model in memory has been constraint generation, using variants of the edge formulation [Abraham et al. 2007].", "startOffset": 154, "endOffset": 175}, {"referenceID": 28, "context": "This algorithm is particularly effective for solving instances where the cycle-length cap is 3 and there is no cap on the length of chains, but it is outperformed by branch-and-price-based approaches if a finite chain-length cap is used [Plaut et al. 2016a].", "startOffset": 237, "endOffset": 257}, {"referenceID": 16, "context": "Alternative objectives for the kidney exchange problem include maximizing the expected number of transplants subject to post-match arc and vertex failures [Dickerson et al. 2013; Pedroso 2014; Alvelos et al. 2015].", "startOffset": 155, "endOffset": 213}, {"referenceID": 2, "context": "Alternative objectives for the kidney exchange problem include maximizing the expected number of transplants subject to post-match arc and vertex failures [Dickerson et al. 2013; Pedroso 2014; Alvelos et al. 2015].", "startOffset": 155, "endOffset": 213}, {"referenceID": 20, "context": "Some fielded exchanges use lexicographic optimisation of a hierarchy of objectives [Glorie et al. 2014; Manlove and O\u2019Malley 2015]; we note that our models can be augmented to support this class of objective function.", "startOffset": 83, "endOffset": 130}, {"referenceID": 0, "context": "The two fundamental IP models for kidney exchange are the cycle formulation, which includes one binary decision variable for each feasible cycle or chain, and the edge formulation, which includes one decision variable for each compatible pair of agents [Abraham et al. 2007; Roth et al. 2007]. In the cycle formulation, the number of constraints is sublinear in the input size, but the number of variables is exponential. In the edge formulation, the number of variables is linear but the number of constraints is exponential. Optimally solving these models has been an ongoing challenge for the past decade. Constantino et al. [2013] introduced the first two compact IP formulations for kidney exchange, where compact means that the counts of variables and constraints are polynomial in the size of the input.", "startOffset": 254, "endOffset": 635}, {"referenceID": 0, "context": "The two fundamental IP models for kidney exchange are the cycle formulation, which includes one binary decision variable for each feasible cycle or chain, and the edge formulation, which includes one decision variable for each compatible pair of agents [Abraham et al. 2007; Roth et al. 2007]. In the cycle formulation, the number of constraints is sublinear in the input size, but the number of variables is exponential. In the edge formulation, the number of variables is linear but the number of constraints is exponential. Optimally solving these models has been an ongoing challenge for the past decade. Constantino et al. [2013] introduced the first two compact IP formulations for kidney exchange, where compact means that the counts of variables and constraints are polynomial in the size of the input. Their extended edge formulation was shown empirically to be effective in finding the optimal solution where the cycle-length cap is greater than 3, particularly on dense graphs. However, each of the compact formulations introduced by Constantino et al. has a weaker linear program (LP) relaxation than the cycle formulation, even in the absence of NDDs. The EE-MTZ model [Mak-Hau 2015], another compact formulation, uses the variables and constraints of the extended edge formulation to model cycles and a variant of the Miller-Tucker-Zemlin model for the traveling salesman problem to model chains. The same paper introduces the exponentially-sized SPLIT-MTZ model, which adds redundant constraints to the edge formulation in order to tighten the LP relaxation. A number of kidney exchange algorithms use the cycle formulation with branch and price [Barnhart et al. 1998] to avoid the need to hold an exponential number of variables in memory [Abraham et al. 2007; Dickerson et al. 2013; Glorie et al. 2014; Klimentova et al. 2014; Plaut et al. 2016a]. These have been the fastest algorithms to date for the kidney exchange problem. An alternative approach to avoiding the cost of keeping the entire model in memory has been constraint generation, using variants of the edge formulation [Abraham et al. 2007]. Anderson et al. [2015] describe an approach based on an algorithm for the prize-collecting traveling salesman problem.", "startOffset": 254, "endOffset": 2145}, {"referenceID": 0, "context": "In Section 3, we introduce the position-indexed edge formulation (PIEF), a model for the kidney exchange problem with only cycles that is substantially smaller than, yet has an LPR equivalent to, the model with the tightest LPR for the cycles-only version of the problem [Abraham et al. 2007; Roth et al. 2007].", "startOffset": 271, "endOffset": 310}, {"referenceID": 34, "context": "In Section 3, we introduce the position-indexed edge formulation (PIEF), a model for the kidney exchange problem with only cycles that is substantially smaller than, yet has an LPR equivalent to, the model with the tightest LPR for the cycles-only version of the problem [Abraham et al. 2007; Roth et al. 2007].", "startOffset": 271, "endOffset": 310}, {"referenceID": 0, "context": "In Section 6, we use real and generated data from two nationwide kidney exchange programs\u2014one in the UK, and one in the US\u2014to compare our formulations against other competitive solvers [Abraham et al. 2007; Klimentova et al. 2014; Anderson et al. 2015; Plaut et al. 2016a].", "startOffset": 185, "endOffset": 272}, {"referenceID": 22, "context": "In Section 6, we use real and generated data from two nationwide kidney exchange programs\u2014one in the UK, and one in the US\u2014to compare our formulations against other competitive solvers [Abraham et al. 2007; Klimentova et al. 2014; Anderson et al. 2015; Plaut et al. 2016a].", "startOffset": 185, "endOffset": 272}, {"referenceID": 4, "context": "In Section 6, we use real and generated data from two nationwide kidney exchange programs\u2014one in the UK, and one in the US\u2014to compare our formulations against other competitive solvers [Abraham et al. 2007; Klimentova et al. 2014; Anderson et al. 2015; Plaut et al. 2016a].", "startOffset": 185, "endOffset": 272}, {"referenceID": 28, "context": "In Section 6, we use real and generated data from two nationwide kidney exchange programs\u2014one in the UK, and one in the US\u2014to compare our formulations against other competitive solvers [Abraham et al. 2007; Klimentova et al. 2014; Anderson et al. 2015; Plaut et al. 2016a].", "startOffset": 185, "endOffset": 272}, {"referenceID": 0, "context": "In Section 3, we introduce the position-indexed edge formulation (PIEF), a model for the kidney exchange problem with only cycles that is substantially smaller than, yet has an LPR equivalent to, the model with the tightest LPR for the cycles-only version of the problem [Abraham et al. 2007; Roth et al. 2007]. Section 3 presents the positionindexed chain-edge formulation (PICEF) which compactly brings chains into the model via a polynomial number of decision variables; the number of cycle decision variables is exponential in just the maximum cycle length (which is typically only 3 or 4 in fielded exchanges). To address that latter exponential reliance on the cycle length, we also present a branch-and-price-based implementation of PICEF. Finally, in Appendix C we present the hybrid position-indexed edge formulation (HPIEF), which combines PIEF and PICEF to yield a compact formulation. Throughout, we prove new results regarding the tightness of the LPRs of our models relative to the current state of the art. The tightness of these relaxations hints that our formulations will be competitive in practice; toward that end, we provide extensive experimental evidence that they are. In particular, we show that at least one of PICEF and HPIEF is faster than the best solver from all those provably-optimal solvers contributed in earlier papers that we evaluated in 96.41% of instances considered, with the speed-ups being most evident for larger instance sizes and larger chain caps. In Section 6, we use real and generated data from two nationwide kidney exchange programs\u2014one in the UK, and one in the US\u2014to compare our formulations against other competitive solvers [Abraham et al. 2007; Klimentova et al. 2014; Anderson et al. 2015; Plaut et al. 2016a]. Our new formulations are on par or faster than all other solvers, outperforming all other solvers by orders of magnitude on many problem instances. Finally, we demonstrate that our PICEF formulation can be adapted straightforwardly to the so-called failure-aware model where arcs probabilistically fail after algorithmic match but before transplantation, and we show how to adapt a recent (noncompact) branch-and-price-based formulation due to Dickerson et al. [2013] to perform pricing in polynomial time (Section 6).", "startOffset": 272, "endOffset": 2236}, {"referenceID": 0, "context": "The problem is NP-hard for realistic parameterizations of K and L [Abraham et al. 2007; Bir\u00f3 et al. 2009].", "startOffset": 66, "endOffset": 105}, {"referenceID": 11, "context": "The problem is NP-hard for realistic parameterizations of K and L [Abraham et al. 2007; Bir\u00f3 et al. 2009].", "startOffset": 66, "endOffset": 105}, {"referenceID": 14, "context": "PIEF is a natural extension of the extended edge formulation (EEF) of Constantino et al. [2013]. For this formulation, we assume that the problem instance contains no NDDs; HPIEF (the hybrid PIEF) in Appendix C is a compact generalisation of this formulation which can be used for instances with NDDs.", "startOffset": 70, "endOffset": 96}, {"referenceID": 38, "context": "We note that PIEF is not the first IP model for a directed-graph program to use position-indexed variables; Vajda [1961] uses position-indexed variables for subtour elimination in a model for the travelling salesman problem (TSP).", "startOffset": 108, "endOffset": 121}, {"referenceID": 14, "context": "Following the approach used by Constantino et al. [2013] for the extended edge formulation, we eliminate variables as follows.", "startOffset": 31, "endOffset": 57}, {"referenceID": 0, "context": "We begin by reviewing the cycle formulation due to Abraham et al. [2007] and Roth et al.", "startOffset": 51, "endOffset": 73}, {"referenceID": 0, "context": "We begin by reviewing the cycle formulation due to Abraham et al. [2007] and Roth et al. [2007], and note that the formulation is equivalent to that due to Anderson et al.", "startOffset": 51, "endOffset": 96}, {"referenceID": 0, "context": "We begin by reviewing the cycle formulation due to Abraham et al. [2007] and Roth et al. [2007], and note that the formulation is equivalent to that due to Anderson et al. [2015] if chains are disallowed.", "startOffset": 51, "endOffset": 179}, {"referenceID": 3, "context": "The idea of using variables for arcs in chains and a variable for each cycle was introduced in the PC-TSPbased algorithm of Anderson et al. [2015]. The innovation in our IP model is the use of position indices on arc variables, which results in polynomial counts of constraints and arc-variables; this is in contrast to the exponential number of constraints in the PC-TSP-based model.", "startOffset": 124, "endOffset": 147}, {"referenceID": 0, "context": "Multiple methods exist for solving the pricing problem in kidney exchange [Abraham et al. 2007; Glorie et al. 2014; Mak-Hau 2015; Plaut et al. 2016a]; in our experimental section, we use the cycle pricer of Glorie et al.", "startOffset": 74, "endOffset": 149}, {"referenceID": 20, "context": "Multiple methods exist for solving the pricing problem in kidney exchange [Abraham et al. 2007; Glorie et al. 2014; Mak-Hau 2015; Plaut et al. 2016a]; in our experimental section, we use the cycle pricer of Glorie et al.", "startOffset": 74, "endOffset": 149}, {"referenceID": 28, "context": "Multiple methods exist for solving the pricing problem in kidney exchange [Abraham et al. 2007; Glorie et al. 2014; Mak-Hau 2015; Plaut et al. 2016a]; in our experimental section, we use the cycle pricer of Glorie et al.", "startOffset": 74, "endOffset": 149}, {"referenceID": 0, "context": "With one decision variable per cycle, Abraham et al. [2007] could not even write the full integer program in memory for instances as small as 1000 pairs.", "startOffset": 38, "endOffset": 60}, {"referenceID": 0, "context": "With one decision variable per cycle, Abraham et al. [2007] could not even write the full integer program in memory for instances as small as 1000 pairs. Branch and price is a method where only a subset of the decision variables are kept in memory, and columns (in the case of PICEF, only those corresponding to cycle variables) are slowly added until correctness is proven at each node in a branch-and-bound search tree. If necessary, superfluous columns can also be removed from the model, in order to prevent its size from exceeding memory. The following process occurs at each node in the search tree: first, the LP relaxation of the current model (which may contain only a small number of cycles) is solved. The next step is to generate positive price cycles: cycles that have the potential to improve the objective value if included in the model. The price of a cycle c is given by \u2211 (i,j)\u2208c(wij\u2212\u03b4i), where \u03b4i is the dual value of vertex i. While there exist any positive price cycles at a node in the search tree, optimality of the reduced LP has not yet been proved at that node. The pricing problem is to bring at least one new positive price cycle into the model, or prove that none exist. Multiple methods exist for solving the pricing problem in kidney exchange [Abraham et al. 2007; Glorie et al. 2014; Mak-Hau 2015; Plaut et al. 2016a]; in our experimental section, we use the cycle pricer of Glorie et al. [2014] with the bugfix of Plaut et al.", "startOffset": 38, "endOffset": 1428}, {"referenceID": 0, "context": "With one decision variable per cycle, Abraham et al. [2007] could not even write the full integer program in memory for instances as small as 1000 pairs. Branch and price is a method where only a subset of the decision variables are kept in memory, and columns (in the case of PICEF, only those corresponding to cycle variables) are slowly added until correctness is proven at each node in a branch-and-bound search tree. If necessary, superfluous columns can also be removed from the model, in order to prevent its size from exceeding memory. The following process occurs at each node in the search tree: first, the LP relaxation of the current model (which may contain only a small number of cycles) is solved. The next step is to generate positive price cycles: cycles that have the potential to improve the objective value if included in the model. The price of a cycle c is given by \u2211 (i,j)\u2208c(wij\u2212\u03b4i), where \u03b4i is the dual value of vertex i. While there exist any positive price cycles at a node in the search tree, optimality of the reduced LP has not yet been proved at that node. The pricing problem is to bring at least one new positive price cycle into the model, or prove that none exist. Multiple methods exist for solving the pricing problem in kidney exchange [Abraham et al. 2007; Glorie et al. 2014; Mak-Hau 2015; Plaut et al. 2016a]; in our experimental section, we use the cycle pricer of Glorie et al. [2014] with the bugfix of Plaut et al. [2016a]. Once no more positive price cycles exist, the reduced LP at a specific node is guaranteed to be optimal.", "startOffset": 38, "endOffset": 1468}, {"referenceID": 4, "context": "[2016a];2 \u2014 CG-TSP, a recent IP formulation based on a model for the prize-collecting traveling salesman problem, with constraint generation [Anderson et al. 2015]; \u2014 PICEF, the model from Section 4 of this paper; \u2014 BNP-PICEF, a branch and price version of the PICEF model, as presented in Section 4.", "startOffset": 141, "endOffset": 163}, {"referenceID": 22, "context": "2 of this paper; \u2014 HPIEF, the Hybrid PIEF model from Appendix C of this paper (which reduces to PIEF for L = 0); and \u2014 BNP-DCD, a branch-and-price algorithm using the Disaggregated Cycle Decomposition model, which is related to both the cycle formulation and the extended edge formulation [Klimentova et al. 2014].", "startOffset": 289, "endOffset": 313}, {"referenceID": 0, "context": "We compare run times of the following state-of-the-art solvers: \u2014 BNP-DFS, the original branch-and-price-based cycle formulation solver due to Abraham et al. [2007]; \u2014 BNP-POLY, a branch-and-price-based cycle formulation solver with pricing due to Glorie et al.", "startOffset": 143, "endOffset": 165}, {"referenceID": 0, "context": "We compare run times of the following state-of-the-art solvers: \u2014 BNP-DFS, the original branch-and-price-based cycle formulation solver due to Abraham et al. [2007]; \u2014 BNP-POLY, a branch-and-price-based cycle formulation solver with pricing due to Glorie et al. [2014] and Plaut et al.", "startOffset": 143, "endOffset": 269}, {"referenceID": 0, "context": "We compare run times of the following state-of-the-art solvers: \u2014 BNP-DFS, the original branch-and-price-based cycle formulation solver due to Abraham et al. [2007]; \u2014 BNP-POLY, a branch-and-price-based cycle formulation solver with pricing due to Glorie et al. [2014] and Plaut et al. [2016a];2 \u2014 CG-TSP, a recent IP formulation based on a model for the prize-collecting traveling salesman problem, with constraint generation [Anderson et al.", "startOffset": 143, "endOffset": 294}, {"referenceID": 26, "context": "2Recently, Plaut et al. [2016b] showed a correctness bug in both implementations of the BNP-POLY-style solvers due to Glorie et al.", "startOffset": 11, "endOffset": 32}, {"referenceID": 19, "context": "[2016b] showed a correctness bug in both implementations of the BNP-POLY-style solvers due to Glorie et al. [2014] and Plaut et al.", "startOffset": 94, "endOffset": 115}, {"referenceID": 19, "context": "[2016b] showed a correctness bug in both implementations of the BNP-POLY-style solvers due to Glorie et al. [2014] and Plaut et al. [2016a]; for posterity, we still include these run times.", "startOffset": 94, "endOffset": 140}, {"referenceID": 20, "context": "We remark that the BNP-DCD model due to Klimentova et al. [2014] was run on all NLDKSS instances where the chain cap L was equal to 0.", "startOffset": 40, "endOffset": 65}, {"referenceID": 19, "context": "Finally we note that the solver of Glorie et al. [2014] was executed on the NLDKSS instances with a chain cap of L, for 0 \u2264 L \u2264 4.", "startOffset": 35, "endOffset": 56}, {"referenceID": 11, "context": "To address these post-match arc failures, Dickerson et al. [2013] augments the standard model of kidney exchange to include a success probability p for each arc in the graph.", "startOffset": 42, "endOffset": 66}, {"referenceID": 0, "context": "Prior compact formulations\u2014and, indeed, prior \u201cedge formulations\u201d like those due to Abraham et al. [2007], Constantino et al.", "startOffset": 84, "endOffset": 106}, {"referenceID": 0, "context": "Prior compact formulations\u2014and, indeed, prior \u201cedge formulations\u201d like those due to Abraham et al. [2007], Constantino et al. [2013], and Anderson et al.", "startOffset": 84, "endOffset": 133}, {"referenceID": 0, "context": "Prior compact formulations\u2014and, indeed, prior \u201cedge formulations\u201d like those due to Abraham et al. [2007], Constantino et al. [2013], and Anderson et al. [2015]\u2014are not expressive enough to allow for generalization to this model.", "startOffset": 84, "endOffset": 161}, {"referenceID": 15, "context": "While this assumption of equal probabilities is likely not true in practice, Dickerson et al. [2013] motivate why a fielded implementation of this model would potentially choose to equalize all failure probabilities: namely, so that already-sick patients\u2014who will likely have higher failure rates\u2014are not further marginalized by this model.", "startOffset": 77, "endOffset": 101}, {"referenceID": 14, "context": "Failure-aware polynomial pricing for cycles The initial failure-aware branch-and-price work by Dickerson et al. [2013] generalized the pricing strategy of Abraham et al.", "startOffset": 95, "endOffset": 119}, {"referenceID": 0, "context": "[2013] generalized the pricing strategy of Abraham et al. [2007], and thus suffered from a pricing problem that ran in time exponential in cycle and chain cap.", "startOffset": 43, "endOffset": 65}, {"referenceID": 0, "context": "[2013] generalized the pricing strategy of Abraham et al. [2007], and thus suffered from a pricing problem that ran in time exponential in cycle and chain cap. Glorie et al. [2014] and Plaut et al.", "startOffset": 43, "endOffset": 181}, {"referenceID": 0, "context": "[2013] generalized the pricing strategy of Abraham et al. [2007], and thus suffered from a pricing problem that ran in time exponential in cycle and chain cap. Glorie et al. [2014] and Plaut et al. [2016a] discussed polynomial pricing algorithms for cycles\u2014but not chains [Plaut et al.", "startOffset": 43, "endOffset": 206}, {"referenceID": 19, "context": "Reduction of Glorie et al. [2014] 5: C \u2190 C \u222a GETNEGATIVECYCLES(D, k,wk) 6: return C", "startOffset": 13, "endOffset": 34}, {"referenceID": 26, "context": "Using the algorithm of Plaut et al. [2016a] as a subroutine, we present an algorithm which solves the failure-aware, or discounted, pricing problem for cycles in polynomial time, under the restriction that all arcs have equal success probability p.", "startOffset": 23, "endOffset": 44}, {"referenceID": 19, "context": "Glorie et al. [2014] show how the arc weights and dual values can be collapsed into just arc weights, and reduce the deterministic pricing problem to finding negative-weight cycles of length at most K in a directed graph.", "startOffset": 0, "endOffset": 21}, {"referenceID": 19, "context": "Glorie et al. [2014] show how the arc weights and dual values can be collapsed into just arc weights, and reduce the deterministic pricing problem to finding negative-weight cycles of length at most K in a directed graph. In this section, we use \u201clength\u201d to denote the number of vertices in a cycle, not its weight. The discounted price of a cycle is p|c| \u2211 (i,j)\u2208c wij \u2212 \u2211 j\u2208c \u03b4j . Since the utility of an arc now depends on what cycle it ends up in, we cannot collapse arc weights and dual values without knowing the length of the cycle containing it. With this motivation, we augment the algorithm to run O(K) iterations for each source vertex: one for each possible final cycle length. On each iteration, we know exactly how much arc weights will be worth in the final cycle, so we can reduce the discounted pricing problem to the deterministic pricing problem. Pseudocode for the failure-aware cycle pricing algorithm is given by GETDISCOUNTEDPOSITIVEPRICECYCLES. Let w and \u03b4 be the arc weights and dual values respectively in the original graph. The function GETNEGATIVECYCLES is the deterministic pricing algorithm due to Plaut et al. [2016a] which returns at least one negative cycle of length at most K, or shows that none exist.", "startOffset": 0, "endOffset": 1150}, {"referenceID": 19, "context": "Glorie et al. [2014] show how the arc weights and dual values can be collapsed into just arc weights, and reduce the deterministic pricing problem to finding negative-weight cycles of length at most K in a directed graph. In this section, we use \u201clength\u201d to denote the number of vertices in a cycle, not its weight. The discounted price of a cycle is p|c| \u2211 (i,j)\u2208c wij \u2212 \u2211 j\u2208c \u03b4j . Since the utility of an arc now depends on what cycle it ends up in, we cannot collapse arc weights and dual values without knowing the length of the cycle containing it. With this motivation, we augment the algorithm to run O(K) iterations for each source vertex: one for each possible final cycle length. On each iteration, we know exactly how much arc weights will be worth in the final cycle, so we can reduce the discounted pricing problem to the deterministic pricing problem. Pseudocode for the failure-aware cycle pricing algorithm is given by GETDISCOUNTEDPOSITIVEPRICECYCLES. Let w and \u03b4 be the arc weights and dual values respectively in the original graph. The function GETNEGATIVECYCLES is the deterministic pricing algorithm due to Plaut et al. [2016a] which returns at least one negative cycle of length at most K, or shows that none exist. The algorithm of Plaut et al. [2016a] has complexity O(|V ||A|K2).", "startOffset": 0, "endOffset": 1277}, {"referenceID": 15, "context": "Approaches to clearing dynamic kidney exchange often rely on solving the static problem many times [Awasthi and Sandholm 2009; Dickerson et al. 2012; Anderson 2014; Dickerson and Sandholm 2015; Glorie et al. 2015]; thus, faster static solvers result in better dynamic exchange solutions.", "startOffset": 99, "endOffset": 213}, {"referenceID": 19, "context": "Approaches to clearing dynamic kidney exchange often rely on solving the static problem many times [Awasthi and Sandholm 2009; Dickerson et al. 2012; Anderson 2014; Dickerson and Sandholm 2015; Glorie et al. 2015]; thus, faster static solvers result in better dynamic exchange solutions.", "startOffset": 99, "endOffset": 213}], "year": 2016, "abstractText": "A kidney exchange is an organized barter market where patients in need of a kidney swap willing but incompatible donors. Determining an optimal set of exchanges is theoretically and empirically hard. Traditionally, exchanges took place in cycles, with each participating patient-donor pair both giving and receiving a kidney. The recent introduction of chains, where a donor without a paired patient triggers a sequence of donations without requiring a kidney in return, increased the efficacy of fielded kidney exchanges\u2014while also dramatically raising the empirical computational hardness of clearing the market in practice. While chains can be quite long, unbounded-length chains are not desirable: planned donations can fail before transplant for a variety of reasons, and the failure of a single donation causes the rest of that chain to fail, so parallel shorter chains are better in practice. In this paper, we address the tractable clearing of kidney exchanges with short cycles and chains that are long but bounded. This corresponds to the practice at most modern fielded kidney exchanges. We introduce three new integer programming formulations, two of which are compact. Furthermore, one of these models has a linear programming relaxation that is exactly as tight as the previous tightest formulation (which was not compact) for instances in which each donor has a paired patient. On real data from the UNOS nationwide exchange in the United States and the NLDKSS nationwide exchange in the United Kingdom, as well as on generated realistic large-scale data, we show that our new models are competitive with all existing solvers\u2014in many cases outperforming all other solvers by orders of magnitude. Finally, we note that our position-indexed chain-edge formulation can be modified in a straightforward way to take post-match edge failure into account, under the restriction that edges have equal probabilities of failure. Post-match edge failure is a primary source of inefficiency in presently-fielded kidney exchanges. We show how to implement such failure-aware matching in our model, and also extend the state-of-the-art general branch-and-price-based non-compact formulation for the failure-aware problem to run its pricing problem in polynomial time.", "creator": "TeX"}}}