{"id": "1606.03137", "review": {"conference": "NIPS", "VERSION": "v1", "DATE_OF_SUBMISSION": "9-Jun-2016", "title": "Cooperative Inverse Reinforcement Learning", "abstract": "gadara For brimsdown an reservoirs autonomous eakins system to truesports be helpful dolittle to hryvnya humans space-themed and 51-run to pose brimsek no unwarranted risks, it needs to align now-vanished its values with kambewa those of holtzhausen the humans sayles in its rackard environment in jiancheng such coon a way that its watcha actions contribute ryabkov to the maximization of value for wendt the humans. We sebadoh propose saifudin a leia formal definition of the mahtomedi value scuttling alignment problem as {\\ em cooperative thanon inverse akakpo reinforcement learning} (CIRL ). klce A CIRL takover problem renunciations is wadiyar a josten cooperative, jaleo partial - information game with two 52.49 agents, louiseville human fieldworks and robot; syndicalist both rak are pimlico rewarded according kwakye to rm39 the human ' singapore s kodro reward orlofsky function, but caringbah the robot beck does not zurufi initially jo\u017ee know bosie what this deneriaz is. tadhg In contrast jemaa to putilov classical oxlee IRL, where the human is trestles assumed laroussi to cut-out act aiken optimally in stewart-haas isolation, barnstormers optimal CIRL solutions proto-uralic produce behaviors 218.6 such implantable as adroitness active teaching, active learning, broinowski and behzad communicative 380,000-dollar actions boruc that qantum are 1775 more nocenti effective in periglacial achieving value alignment. 2,010 We 6210 show 48-13 that computing all-natural optimal joint ivanko policies couriered in CIRL bear-like games railey can be 66-66 reduced strage to solving pellington a noema POMDP, burlando prove that appaloosas optimality mexique in isolation warnecke is xiuli suboptimal nocht in \u010dorba CIRL, and derive nrdc an approximate whistle CIRL kitted algorithm.", "histories": [["v1", "Thu, 9 Jun 2016 22:39:54 GMT  (223kb,D)", "http://arxiv.org/abs/1606.03137v1", null], ["v2", "Tue, 5 Jul 2016 18:25:07 GMT  (220kb,D)", "http://arxiv.org/abs/1606.03137v2", null], ["v3", "Sat, 12 Nov 2016 20:33:43 GMT  (579kb,D)", "http://arxiv.org/abs/1606.03137v3", null]], "reviews": [], "SUBJECTS": "cs.AI", "authors": ["dylan hadfield-menell", "stuart j russell", "pieter abbeel", "anca d dragan"], "accepted": true, "id": "1606.03137"}, "pdf": {"name": "1606.03137.pdf", "metadata": {"source": "CRF", "title": "Cooperative Inverse Reinforcement Learning", "authors": ["Dylan Hadfield-Menell", "Anca Dragan", "Pieter Abbeel", "Stuart Russell"], "emails": [], "sections": [{"heading": "1 Introduction", "text": "\u201cIf we use, to achieve our purposes, a mechanical agency with whose operation we cannot interfere effectively . . . we had better be quite sure that the purpose put into the machine is the purpose which we really desire.\u201d So wrote Norbert Wiener (1960) in one of the earliest explanations of the problems that arise when autonomous systems operate with objectives that differ from those of humans. This value alignment problem is not trivial to solve. Humans are prone to mis-stating their objectives, which can lead to unexpected implementations, as King Midas found out. Russell & Norvig (2010) give the example of specifying a reward function for a vacuum robot: if we reward the action of cleaning up dirt, which seems reasonable, the robot repeatedly dumps and cleans up the same dirt to maximize its reward. A solution to the value alignment problem has long-term implications for the future of AI and its relationship to humanity (Bostrom, 2014) and short-term utility for the design of usable AI systems. Giving robots the right objectives and enabling them to make the right trade-offs is crucial for self-driving cars, personal assistants, and human\u2013robot interaction more broadly. Value alignment problems are not unique to artificial systems. Economic systems often involve multiple agents with distinct objectives (e.g., employees and employers) and for whom incentive schemes (e.g., wages) must be designed. Kerr (1975) explains several examples of value misalignment in this context. Our work has strong connections with the principal\u2013agent problem from economics; we give a brief overview in Section 2. The field of inverse reinforcement learning or IRL (Russell, 1998; Ng & Russell, 2000; Abbeel & Ng, 2004) is certainly relevant to the value alignment problem. An IRL algorithm infers the reward function of an agent from observations of the agent\u2019s behavior, which is assumed to be optimal (or approximately so). One might imagine that IRL provides a simple solution to the value alignment problem: the robot observes human behavior, learns the human reward function, and behaves according to that function. This simple idea has two flaws. The first flaw is obvious: human behavior (especially in the morning) often conveys a desire for coffee, and the robot can learn this, but we don\u2019t want the robot to want coffee! This flaw is easily fixed: we need to formulate the value ar X iv :1 60 6.\n03 13\n7v 1\n[ cs\n.A I]\n9 J\nun 2\n01 6\nalignment problem so that the robot always has the fixed objective of optimizing reward for the human, and becomes better able to do so as it learns what the human reward function is. The second flaw is less obvious, and less easy to fix. The human has an interest in ensuring that value alignment occurs as quickly and accurately as possible, so that the robot can be maximally useful and avoid potentially disastrous mistakes. Yet acting optimally in coffee acquisition while leaving the robot as a passive observer may not be the best way to achieve value alignment. Instead, the human should perhaps explain the steps in coffee preparation and show the robot where the backup coffee supplies are kept and what do if the coffee pot is left on the heating plate too long, while the robot might ask what the button with the puffy steam symbol is for and try its hand at coffee making with guidance from the human, even if the first results are undrinkable. None of these things fit in with the standard IRL framework. Cooperative inverse reinforcement learning. We propose, therefore, that value alignment should be formulated as a cooperative and interactive reward maximization process. More precisely, we define a cooperative inverse reinforcement learning (CIRL) problem as a two-player game of partial information, in which the \u201chuman\u201d, H, knows the reward function (represented by a generalized parameter \u03b8), while the \u201crobot\u201d, R, does not; the robot\u2019s payoff is exactly the human\u2019s actual reward. Optimal solutions to this game maximize human reward; we show that solutions may involve active instruction by the human and active learning by the robot. Reduction to POMDP and Sufficient Statistics. As one might expect, the structure of CIRL games is such that they admit more efficient solution algorithms than are possible for general partialinformation games. Let (\u03c0H, \u03c0R) be a pair of policies for human and robot, each depending, in general, on the complete history of observations and actions. A policy pair yields an expected sum of rewards for each player and is a Nash equilibrium if neither actor has an incentive to deviate. In CIRL, the reward function is shared so there is well-defined optimal Nash equilibrium that maximizes value.1 In Section 3 we reduce the problem of computing an optimal policy pair to the solution of a (single-agent) POMDP, and hence show that the robot\u2019s posterior over \u03b8 is a sufficient statistic, in the sense that there are optimal policy pairs in which the robot\u2019s behavior depends only on this statistic. Moreover, the complexity of solving the POMDP is exponentially lower than the NEXP-hard bound that (Bernstein et al., 2000) obtains for the natural reduction of the problem to a general Dec-POMDP. Apprenticeship Learning and Suboptimality of IRL-Like Solutions. In Section 3.3 we model apprenticeship learning (Abbeel & Ng, 2004) as a two-phase CIRL game. In the first phase, the learning phase, both H and R can take actions and this lets R learn about \u03b8. In the second phase, the deployment phase, R uses what it learned to maximize reward (without supervision from H). We show that classic IRL falls out as the best-response policy for the robot under the assumption that the human\u2019s policy is \u201cdemonstration by expert\u201d (DBE), i.e., acting optimally in isolation as if no robot exists. But we show also that this DBE/IRL policy pair is not, in general, a Nash equilibrium: even if the human knows the robot is running an IRL algorithm, demonstrating expert behavior is not the best way to teach that algorithm.\nApproximate Algorithm for CIRL. We introduce a graph search algorithm that approximately computes H\u2019s best response when R is running IRL and rewards are linear in \u03b8 and state features. Section 4 compares this best-response policy with the DBE policy in a grid-world example and provides empirical confirmation that the best-response policy, which turns out to \u201cteach\u201d R about the value landscape of the problem, is better than DBE. Thus, designers of apprenticeship learning systems should expect that users will violate the assumption of expert demonstrations in order to better communicate reward."}, {"heading": "2 Related Work", "text": "Our proposed model shares aspects with a variety of existing models. We divide the related work into three categories: inverse reinforcement learning, optimal teaching, and principal\u2013agent models.\nInverse Reinforcement Learning. Ng & Russell (2000) define inverse reinforcement learning (IRL) as follows: \u201cGiven measurements of an [actor]\u2019s behavior over time. . . . Determine the reward function being optimized.\u201d The key assumption IRL makes is that the observed behavior is optimal in the sense that the observed trajectory maximizes the sum of rewards. We call this the demonstration-by-expert (DBE) assumption. One of our contributions is to prove that this may be\n1A coordination problem arises if there are multiple optimal policy pairs; we defer this issue to future work.\nNg & Russell (2000), Abbeel & Ng (2004), and Ratliff et al. (2006) compute constraints that characterize the set of reward functions so that the observed behavior maximizes reward. In general, there will be many reward functions consistent with this constraint. They use a max-margin heuristic to select a single reward function from this set as their estimate. In CIRL, the constraints they compute characterize R\u2019s belief about \u03b8 under the DBE assumption. Ramachandran & Amir (2007) and Ziebart et al. (2008) consider the case where \u03c0H is \u201cnoisily expert,\u201d i.e., \u03c0His a Boltzmann distribution where actions or trajectories are selected in proportion to the exponent of their value. Ramachandran & Amir (2007) adopt a Bayesian approach and place an explicit prior on rewards. Ziebart et al. (2008) places a prior on reward functions indirectly by assuming a uniform prior over trajectories. In our model, these assumptions are variations of DBE and both implement state estimation for a best response to the appropriate fixed H. Natarajan et al. (2010) introduce an extension to IRL where R observes multiple actors that cooperate to maximize a common reward function. This is a different type of cooperation than we consider, as the reward function is common knowledge and R is a passive observer. Waugh et al. (2011) and Kuleshov & Schrijvers (2015) consider the problem of inferring payoffs from observed behavior in a general (i.e., non-cooperative) game given observed behavior. It would be interesting to consider an analogous extension to CIRL, akin to mechanism design, in which R tries to maximize collective utility for a group of Hs that may have competing objectives. Fern et al. (2014) consider a hidden-goal MDP, a special case of a POMDP where the goal is an unobserved part of the state. This can be considered a special case of CIRL, where \u03b8 encodes a particular goal state. The frameworks share the idea that R helps H. The key difference between the models lies in the treatment of the human (the agent in their terminology). Fern et al. (2014) model the human as part of the environment. In contrast, we treat H as an actor in a decision problem that both actors collectively solve. This is crucial to modeling the human\u2019s incentive to teach.\nOptimal Teaching. Because CIRL incentivizes the human to teach, as opposed to maximizing reward in isolation, our work is related to optimal teaching: finding examples that optimally train a learner (Balbach & Zeugmann, 2009; Goldman et al., 1993; Goldman & Kearns, 1995). The key difference is that efficient learning is the objective of optimal teaching, while it emerges as a property of optimal equilibrium behavior in CIRL. Cakmak & Lopes (2012) consider an application of optimal teaching where the goal is to teach the learner the reward function for an MDP. The teacher gets to pick initial states from which an expert executes the reward-maximizing trajectory. The learner uses IRL to infer the reward function, and the teacher picks initial states to minimize the learner\u2019s uncertainty. In CIRL, this approach can be characterized as an approximate algorithm for a highly restricted H that greedily minimizes the entropy of R\u2019s belief.\nBeyond teaching, several models focus on taking actions that convey some underlying state, not necessarily a reward function. Examples include finding a motion that best communicates an agent\u2019s intention (Dragan & Srinivasa, 2013), or finding a natural language utterance that best communicates a particular grounding (Golland et al., 2010). All of these approaches model the observer\u2019s inference process and compute actions (motion or speech) that maximize the probability an observer infers the correct hypothesis or goal. Our approximate solution to CIRL is analogous to these approaches, in that we compute actions that are informative of the correct reward function.\nPrincipal\u2013agent models. Value alignment problems are not intrinsic to artificial agents. Kerr (1975) describes a wide variety of misaligned incentives in the aptly titled \u201cOn the folly of rewarding A, while hoping for B.\u201d In economics, this is known as the principal\u2013agent problem: the principal (e.g., the employer) specifies incentives so that an agent (e.g., the employee) maximizes the principal\u2019s profit (Jensen & Meckling, 1976). Principal\u2013agent models study the problem of generating appropriate incentives in a non-cooperative setting with asymmetric information. In this setting, misalignment arises because the agents that economists model are people and intrinsically have their own desires. In AI, misalignment arises entirely from the information asymmetry between the principal and the agent; if we could characterize the correct reward function, we could program it into an artificial agent. Gibbons (1998) provides a useful survey of principal\u2013agent models and their applications. Holmstrom & Milgrom (1987) gives structural results on optimal incentive schemes in linear principal\u2013agent models. From the perspective of AI research, one of the most interesting lines of research in this literature studies the impacts of distorted incentives. Holmstrom & Milgrom (1991) develop a multi-task model where some tasks are more easily measured and rewarded than others. The key result shows that incentives for the more precisely measured tasks should be reduced to avoid diverting too much effort from poorly measured tasks."}, {"heading": "3 Cooperative Inverse Reinforcement Learning", "text": "This section formulates CIRL as a two-player Markov game with identical payoffs, proves that the problem of computing an optimal equilibrium for a CIRL game is lower complexity than the n\u00e4ive bound from Dec-POMDP\u2019s suggests, and characterizes apprenticeship learning as a subclass of CIRL games."}, {"heading": "3.1 CIRL Formulation", "text": "Definition 1. A cooperative inverse reinforcement learning (CIRL) game M is a two-player Markov game with identical payoffs between a human or principal, H, and a robot or agent, R. The game is described by a tuple,\nM = \u3008S, {AH,AR}, T (\u00b7|\u00b7, \u00b7, \u00b7), {\u0398, R(\u00b7, \u00b7, \u00b7; \u00b7)}, P0(\u00b7, \u00b7), \u03b3\u3009, (1)\nwith the following definitions: S a set of world states: s \u2208 S. AH a set of actions for H: aH \u2208 AH. AR a set of actions for R: aR \u2208 AR. T (\u00b7|\u00b7, \u00b7, \u00b7) a conditional distribution on the next world state, given previous state and action for\nboth agents: T (s\u2032|s, aH, aR). \u0398 a set of possible static reward parameters, only observed by H: \u03b8 \u2208 \u0398. R(\u00b7, \u00b7, \u00b7; \u00b7) a parameterized reward function that maps world states, joint actions, and reward\nparameters to real numbers. R : S \u00d7AH \u00d7AR \u00d7\u0398\u2192 R. P0(\u00b7, \u00b7) a distribution over the initial state, represented as tuples: P0(s0, \u03b8) \u03b3 a discount factor: \u03b3 \u2208 [0, 1].\nWe write the reward for a state\u2013parameter pair as R(s, aH, aR; \u03b8) to distinguish the static reward parameters \u03b8 from the changing world state s. The game proceeds as follows. First, the initial state, a tuple (s, \u03b8), is sampled from P0. H observes \u03b8. This parameter represents the human\u2019s internal reward function. This observation models that only the human knows the reward function, while both actors know a prior distribution over possible reward functions. At each timestep t, H and R observe the current state st and select their actions aHt , a R t . Both actors receive reward rt = R(st, aHt , a R t ; \u03b8) and observe each other\u2019s action selection. A\nstate for the next timestep is sampled from the transition distribution, st+1 \u223c PT (s\u2032|st, aHt , aRt ), and the process repeats. Behavior in a CIRL game is defined by a pair of policies, (\u03c0H, \u03c0R), that determine action selection for H and R respectively. In general, these policies can be arbitrary functions of their observation histories; \u03c0H : [ AH \u00d7AR \u00d7 S\n]\u2217 \u00d7\u0398\u2192 AH, \u03c0R : [AH \u00d7AR \u00d7 S]\u2217 \u2192 AR. The optimal joint policy is the policy that maximizes value. The value of a state is the expected sum of discounted rewards under the initial distribution of reward parameters and world states.\nRemark 1. A key property of CIRL is that the human and the robot get rewards determined by the same reward function. This incentivizes the human to teach and the robot to learn without explicitly encoding these as objectives of the actors."}, {"heading": "3.2 Structural Results for Optimal Equilibrium Computation", "text": "The analogue in CIRL to computing an optimal policy for an MDP is the problem of computing an optimal policy pair. This is a pair of policies that maximizes the expected sum of discounted rewards. This is not the same as \u2018solving\u2019 a CIRL game, as a real world implementation of a CIRL agent must account for coordination problems and strategic uncertainty (Boutilier, 1999). The optimal policy pair represents the best H and R can do if they can coordinate perfectly before H observes \u03b8. Computing an optimal joint policy for a cooperative game is the solution to a decentralizedpartially observed Markov decision process (Dec-POMDP). Unfortunately, Dec-POMDPs are NEXPcomplete (Bernstein et al., 2000) so general Dec-POMDP algorithms have a computational complexity that is doubly exponential. Fortunately, CIRL games have special structure that makes optimal equilibrium computation more efficient. Nayyar et al. (2013) shows that a Dec-POMDP can be reduced to a coordination-POMDP. The actor in this POMDP is a coordinator that observes all common observations and specifies a policy for each actor. These policies map each actor\u2019s private information to an action. The structure of a CIRL game implies that the private information is limited to H\u2019s initial observation of \u03b8. This allows the reduction to a coordination-POMDP to preserve the size of the (hidden) state space, making the problem easier.\nTheorem 1. Let M be an arbitrary CIRL game with state space S and reward space \u0398. There exists a (single-actor) POMDP MC with (hidden) state space SC such that |SC| = |S| \u00b7 |\u0398| and, for any policy pair in M , there is a policy in MC that achieves the same sum of discounted rewards.\nProof. See supplementary material.\nThis reduction lets us show that R\u2019s belief about \u03b8 is a sufficient statistic for optimal behavior.\nCorollary 1. Let M be a CIRL game. There exist optimal policies (\u03c0H\u2217, \u03c0R\u2217) that only depend on the current state and R\u2019s belief.\n\u03c0H \u2217 : S \u00d7\u2206\u0398 \u00d7\u0398\u2192 AH, \u03c0R \u2217 : S \u00d7\u2206\u0398 \u2192 AR.\nProof. See supplementary material.\nRemark 2. In a general Dec-POMDP, the hidden state for the coordinator-POMDP includes each actor\u2019s history of observations. In CIRL, \u03b8 is the only private information so we get an exponential decrease in the complexity of the reduced problem. This allows one to apply general POMDP algorithms to compute optimal joint policies in CIRL.\nIt is important to note that the reduced problem may still be very challenging. POMDPs are difficult in their own right and the reduced problem still has a much larger action space. That being said, this reduction is still useful in that it characterizes optimal joint policy computation for CIRL as significantly easier than Dec-POMDPs. Furthermore, this theorem can be used to justify approximate methods (e.g., iterated best response) that only depend on R\u2019s belief state."}, {"heading": "3.3 A Formal Model of Apprenticeship Learning", "text": "A common paradigm for robot learning from humans is apprenticeship learning. In this paradigm, a human gives demonstrations to a robot of a sample task and the robot is asked to imitate it in a subsequent task. In what follows, we formulate apprenticeship learning as turn-based CIRL with a\nlearning phase and a deployment phase. We characterize IRL as the best response to a demonstrationby-expert policy for H. We also show that this policy is, in general, not an equilibrium policy and so IRL is generally a suboptimal approach to apprenticeship learning. Definition 2. (ACIRL) An apprenticeship cooperative inverse reinforcement learning (ACIRL) game is a turn-based CIRL game with two phases: a learning phase where the human and the robot take turns acting, and a deployment phase, where the robot acts independently.\nExample. Consider an example apprenticeship task where R needs to help H make office supplies. H and R can make paperclips and staples and the unobserved \u03b8 describe H\u2019s preference for paperclips vs staples. We model the problem as an ACIRL game in which the learning and deployment phase each consist of an individual action. The world state in this problem is a tuple (ps, qs, t) where ps and qs respectively represent the number of paperclips and staples H owns. t is the round number. An action is a tuple (pa, qa) that produces pa paperclips and qa staples. The human can make 2 items total: AH = {(0, 2), (1, 1), (2, 0)}. The robot has different capabilities. It can make 50 units of each item or it can choose to make 90 of a single item: AR = {(0, 90), (50, 50), (90, 0)}. We let \u0398 = [0, 1] and define R so that \u03b8 indicates the relative preference between paperclips and staples:R(s, (pa, qa); \u03b8) = \u03b8pa + (1 \u2212 \u03b8)qa. R\u2019s action is ignored when t = 0 and H\u2019s is ignored when t = 1. At t = 2, the game is over, so the game transitions to a sink state, (0, 0, 2).\nDeployment phase \u2014 maximize mean reward estimate. It is simplest to analyze the deployment phase first. R is the only actor in this phase so it get no more observations of its reward. We have shown that R\u2019s belief about \u03b8 is a sufficient statistic for the optimal policy. This belief about \u03b8 induces a distribution over MDPs. A straightforward extension of a result due to Ramachandran & Amir (2007) shows that R\u2019s optimal deployment policy maximizes reward for the mean reward function. Theorem 2. Let M be an ACIRL game. In the deployment phase, the optimal policy for R maximizes reward in the MDP induced by the mean \u03b8 from R\u2019s belief.\nProof. See supplementary material.\nIn our example, suppose that \u03c0H selects (0, 2) if \u03b8 \u2208 [0, 13 ), (1, 1) if \u03b8 \u2208 [ 1 3 , 2 3 ] and (2, 0) otherwise. R begins with a uniform prior on \u03b8 so observing, e.g., aH = (0, 2) leads to a posterior distribution that is uniform on [0, 13 ). Theorem 2 shows that the optimal action maximizes reward for the mean \u03b8 so an optimal R behaves as though \u03b8 = 16 during the deployment phase.\nLearning phase \u2014 expert demonstrations are not optimal. A wide variety of apprenticeship learning approaches assume that demonstrations are given by an expert. We say that H satisfies the demonstration-by-expert (DBE) assumption in ACIRL if she greedily maximizes immediate reward on her turn. This is an \u2018expert\u2019 demonstration because it demonstrates a reward maximizing action but does not account for that action\u2019s impact on R\u2019s belief. We use E to represent actors that satisfy this assumption and \u03c0E to represent the corresponding policy. Theorem 2 enables us to characterize the best response for R under the DBE assumption in ACIRL: use IRL to compute the posterior over \u03b8 during the learning phase and then act to maximize reward under the mean \u03b8 in the deployment phase. Note that this does not define R\u2019s behavior during learning, just its belief. CIRL also gives us the ability to analyze the DBE assumption itself. In particular, we can show that \u03c0E is not a component of an equilibrium joint policy. Theorem 3. Suppose that \u03c0R = br(\u03c0E). There exist ACIRL games where the best-response for H to \u03c0R violates the expert demonstrator assumption. In other words br(br(\u03c0E)) 6= \u03c0E.\nProof. See supplementary material.\nThe supplementary material proves this theorem by computing the optimal equilibrium for our example. In that equilibrium, H selects (1, 1) if \u03b8 \u2208 [ 4192 , 51 92 ]. In contrast, \u03c0\nE only chooses (1, 1) if \u03b8 = 0.5. The change arises because there are situations (e.g., \u03b8 = 0.49) where the immediate loss of reward to H is worth the improvement in R\u2019s estimate of \u03b8. Remark 3. We should expect experienced users of apprenticeship learning systems to present demonstrations optimized for fast learning rather than demonstrations that maximize reward.\nImportantly, the demonstrator is incentivized to deviate from R\u2019s assumptions. This has implications for the design and analysis of apprenticeship systems in robotics. Inaccurate assumptions about user behavior are notorious for leading to bugs in software systems (see, e.g., Leveson & Turner (1993))."}, {"heading": "3.4 Approximate Best Response to Feature Matching", "text": "Now, we consider the problem of computing H\u2019s best response when R uses IRL as a state estimator. For our toy example, we computed equilibria exhaustively, for realistic problems we need a more efficient approach. Section 3.2 shows that this can be reduced to an POMDP where the state is a tuple of world state, reward parameters, and R\u2019s belief. While this is easier than solving a general Dec-POMDP, it is a computational challenge. If we restrict our attention to the case of linear reward functions2 we can develop an efficient approximate algorithm to compute a best response. Specifically, we consider the case where the reward for a state (s, \u03b8) is defined as a linear combination of state features for some feature function \u03c6 : R(s, aH, aR; \u03b8) = \u03c6(s)>\u03b8. Standard results from the IRL literature show that policies with the same expected feature counts have the same value (Abbeel & Ng, 2004). Combined with Theorem 2, this implies that the optimal \u03c0R under the DBE assumption computes a policy that matches the observed feature counts from the learning phase. This suggests a simple approximation scheme. To compute a demonstration trajectory \u03c4H, first compute the feature counts R would observe in expectation from the true \u03b8 and then select actions that maximize similarity to these target features. If \u03c6\u03b8 are the expected feature counts induced by \u03b8 then this scheme amounts to the following decision rule:\n\u03c4H \u2190 argmax \u03c4 \u03c6(\u03c4)>\u03b8 \u2212 \u03b7||\u03c6\u03b8 \u2212 \u03c6(\u03c4)||2. (2)\nThis rule selects a trajectory that trades off between the sum of rewards \u03c6(\u03c4)>\u03b8 and the feature dissimilarity ||\u03c6\u03b8 \u2212 \u03c6(\u03c4)||2. Note that this is generally distinct from the action selected by the demonstration-by-expert policy. The goal is to match the expected sum of features under a distribution of trajectories with the sum of features from a single trajectory. The correct measure of feature similarity is regret: the difference between the reward R would collect if it knew the true \u03b8 and the reward R actually collects using the inferred \u03b8. Computing this similarity is expensive, so we use an `2 norm as a proxy measure for our experiments."}, {"heading": "4 Experiments", "text": "In this section, we present a learning experiment for 2D mobile robot navigation. We compare the approximation from Section 3.4 to IRL. Specifically, we examine the case where R is implemented with IRL and measure the value of different policies for H: expert, which matches the IRL assumption, and best-responder, which computes the best response to IRL."}, {"heading": "4.1 Cooperative Learning for Mobile Robot Navigation", "text": "Our experimental domain is a 2D navigation problem on a discrete grid. In the learning phase of the game, H teleoperates a trajectory while R observes. In the deployment phase, R controls the robot and attempts to maximize reward. We use a finite horizon H , and let the first H2 timesteps be the learning phase. There are N\u03c6 state features defined as radial basis functions where the centers are common knowledge. Rewards are linear in these features and \u03b8. The initial world state is in the middle of the map. We use a uniform distribution on [\u22121, 1]N\u03c6 for the prior on \u03b8. Actions move in one of the four cardinal directions {N,S,E,W} and there is an additional no-op \u2205 that each actor executes deterministically on the other agent\u2019s turn. Figure 1 shows an example comparison between demonstration-by-expert and the approximate best response policy in Section 3.4. The leftmost image is the ground truth reward function. Next to it are demonstration trajectories produce by these two policies. Each path is superimposed on the maximum a-posteriori reward function the robot infers from the demonstration. We can see that the demonstration-by-expert policy immediately goes to the highest reward and stays there. In contrast, the best response policy moves to both areas of high reward. The robot reward function the robot infers from the best response demonstration is much more representative of the true reward function, when compared with the reward function it infers from demonstration-by-expert."}, {"heading": "4.2 Demonstration-by-Expert vs Best Responder", "text": "Hypothesis. When R plays an IRL algorithm that matches features, H prefers the best response policy from Section 3.4 to \u03c0E: the best response policy will significantly outperform the demonstrationby-expert policy.\n2where linearity is with respect to \u03b8.\nManipulated Variables. Our experiment consists of 2 factors: H-policy and num-features. We make the assumption that R uses an IRL algorithm to compute its estimate of \u03b8 during learning and maximizes reward under this estimate during deployment. We use Maximum-Entropy IRL (Ziebart et al., 2008) to implement R\u2019s policy. H-policy varies H\u2019s strategy \u03c0Hand has two levels: demonstration-by-expert and best-responder. In the demonstration-by-expert level H adheres to the DBE assumption and maximizes reward during the demonstration. In the best-responder level H uses the approximate algorithm from Section 3.4 to compute an (approximate) best response to \u03c0R. The trade-off between reward and communication \u03b7 is set by cross-validation before the game begins. The num-features factor varies the dimensionality of \u03c6. We consider two levels for this factor: 3 features and 10 features. We do this to test whether and how the difference between experts and best-responders is affected by dimensionality. We use a factorial design across these factors. This leads to 4 distinct conditions. We test each condition against a random sample of N = 500 different reward parameters. We use a within-subjects design with respect to the the H-policy factor so the same reward parameters are tested for both levels. We use a between-subjects design for the num-features factor. Dependent Measures. We use the regret with respect to a fully-observed setting where the robot knows the ground truth \u03b8 as a measure of performance. We let \u03b8\u0302 be the robot\u2019s estimate of the reward parameters and let \u03b8GT be the ground truth reward parameters. The primary measure is the sub-optimality of robot\u2019s policy reward: the difference between the value of the policy that maximizes \u03b8\u0302 and the value of the policy that maximizes \u03b8GT . We also use two secondary measures. The first is the KL-divergence between the maximum-entropy trajectory distribution induced by \u03b8\u0302 and the maximum-entropy trajectory distribution induced by \u03b8. Finally, we use the `2-norm between the vector or rewards defined by \u03b8\u0302 and the vector induced by \u03b8. Results. Table 1 shows the dependent measures from our experiment. We are able to confirm our hypothesis that the demonstration-by-expert level of the H-policy factor results has substantially higher regret than the best-response policy. The size of the gap is especially large when numfeatures=10. This is because \u0398 is higher-dimensional so an instructive trajectory is more informative. One particularly interesting observation is that even when R\u2019s inferred reward function is inaccurate the best-response policy still results in low regret with respect to the value of the policy pair."}, {"heading": "5 Conclusion and Future Work", "text": "In this work, we presented a game-theoretic model for cooperative learning, CIRL. Key to this model is that the robot knows that it is in a shared environment and is attempting to maximize the human\u2019s reward (as opposed to estimating the human\u2019s reward function and adopting it as its own). This leads to cooperative learning behavior and provides a framework in which to design HRI algorithms and analyze the incentives of both actors in a learning environment. We reduced the problem of computing an optimal policy pair to solving a POMDP. This is a useful theoretical tool and can be used to design new algorithms, but it is clear that optimal policy pairs are only part of the story. In particular, when it performs a centralized computation, the reduction assumes that we can effectively program both actors to follow a set coordination policy. This may not be feasible in reality, although it may nonetheless be helpful in training humans to be better teachers. An important avenue for future research will be to consider the problem of equilibrium acquisition: the process by which two independent actors arrive at an equilibrium pair of policies. Returning to Wiener\u2019s warning, we believe that the best solution is not to put a specific purpose into the machine at all, but instead to design machines that provably converge to the right purpose as they go along."}, {"heading": "6 Appendix: Supplementary Material", "text": "This section contains supplementary material and proofs for paper. Some parts of the main text are repeated for completeness."}, {"heading": "6.1 CIRL Formulation", "text": "Definition 3. A cooperative inverse reinforcement learning (CIRL) game M is a two-player Markov game with identical payoffs between a human or principal, H, and a robot or agent, R. The game is described by a tuple,\nM = \u3008S, {AH,AR}, T (\u00b7|\u00b7, \u00b7, \u00b7), {\u0398, R(\u00b7, \u00b7, \u00b7; \u00b7)}, P0(\u00b7, \u00b7), \u03b3\u3009, (3) with the following definitions:\nS a set of world states: s \u2208 S. AH a set of actions for H: aH \u2208 AH. AR a set of actions for R: aR \u2208 AR. T (\u00b7|\u00b7, \u00b7, \u00b7) a conditional distribution on the next world state, given previous state and action for\nboth agents: T (s\u2032|s, aH, aR). \u0398 a set of possible static reward parameters, only observed by H: \u03b8 \u2208 \u0398. R(\u00b7, \u00b7, \u00b7; \u00b7) a parameterized reward function that maps world states, joint actions, and reward\nparameters to real numbers. R : S \u00d7AH \u00d7AR \u00d7\u0398\u2192 R. P0(\u00b7, \u00b7) a distribution over the initial state, represented as tuples: P0(s0, \u03b8) \u03b3 a discount factor: \u03b3 \u2208 [0, 1].\nWe write the reward for a state\u2013parameter pair as R(s, aH, aR; \u03b8) to distinguish the static reward parameters \u03b8 from the changing world state s. The game proceeds as follows. First, the initial state, a tuple (s, \u03b8), is sampled from P0. H observes \u03b8. This parameter represents the human\u2019s internal reward function. This observation models that only the human knows the reward function, while both agents know a prior distribution over possible reward functions. At each timestep t, H and R observe the current state st and select their actions aHt , a R t . Both actors receive reward rt = R(st, aHt , a R t ; \u03b8) and observe each other\u2019s action selection. A state for the next timestep is sampled from the transition distribution, st+1 \u223c PT (s\u2032|st, aHt , aRt ), and the process repeats. Behavior in a CIRL game is defined by a pair of policies, (\u03c0H, \u03c0R), that determine action selection for H and R respectively. In general, these policies can be arbitrary functions of their observation histories; \u03c0H : [ AH \u00d7AR \u00d7 S\n]\u2217 \u00d7\u0398\u2192 AH, \u03c0R : [AH \u00d7AR \u00d7 S]\u2217 \u2192 AR. The optimal joint policy is the policy that maximizes value. The value of a state is the expected sum of discounted rewards under the initial distribution of reward parameters and world states. Definition 4. LetM be a CIRL problem between H and R. We define the corresponding coordination POMDP MC as a POMDP where the single actor is a coordinator C. States are tuples of world state and reward parameters: Sc = S \u00d7\u0398. The intial state distribution places the same distribution on S \u00d7\u0398 as P0. C\u2019s actions are tuples (\u03b4H, aR) that specify an action for R and a decision rule for H that maps its private information (\u03b8) to an action \u03b4H : \u0398 \u2192 AH. C observes H\u2019s action and the world state. Transitions are defined analogously to those in M . Theorem 1. Let M = \u3008S, {AH,AR}, T (\u00b7|\u00b7, \u00b7, \u00b7), {\u0398, R(\u00b7, \u00b7, \u00b7; \u00b7)}, P0(\u00b7, \u00b7), \u03b3\u3009 any CIRL problem. Let MC be the associated coordination POMDP. For any strategy pair (\u03c0H, \u03c0R) for M there is an equivalent coordinator policy \u03c0C.\nProof. The second component of C\u2019s action is an action for R. R has no private observations, so clearly C can simulate any \u03c0R. R can also simulate C and compute the appropriate action. Turning to H, it is clear that H can simulate \u03c0C and execute the corresponding \u03b4H. To see that C can produce an equivalent \u03c0C for any \u03c0H, let h be the action history for H. \u03c0C can choose the following decision rule \u03b4H(\u03b8) = \u03c0H(\u03b8;h) to produce the same behavior.\nCorollary 1. Let M be a CIRL game. There exist optimal policies (\u03c0H\u2217, \u03c0R\u2217) that only depend on the current state and R\u2019s belief.\n\u03c0H \u2217 : S \u00d7\u2206\u0398 \u00d7\u0398\u2192 AH, \u03c0R \u2217 : S \u00d7\u2206\u0398 \u2192 AR.\nProof. Smallwood & Sondik (1973) showed that an optimal policy in a POMDP only depends on the belief state. R\u2019s belief uniquely determines the belief for C. From this, an appeal to Theorem 1 shows the result."}, {"heading": "6.2 Apprenticeship CIRL", "text": "Example. Consider an example apprenticeship task where R needs to help H make office supplies. H and R can make paperclips and staples and the unobserved \u03b8 describe H\u2019s preference for paperclips vs staples. We model the problem as an ACIRL in which the learning and deployment phase each consist of an individual action. The world state in this problem is a tuple (ps, qs, t) where ps and qs respectively represent the number of paperclips and staples H owns. t is the round number. An action is a tuple (pa, qa) that produces pa paperclips and qa staples. The human can make 2 items total: AH = {(0, 2), (1, 1), (2, 0)}. The robot has different capabilities. It can make 50 units of each item or it can choose to make 90 of a single item: AR = {(0, 90), (50, 50), (90, 0)}. We let \u0398 = [0, 1] and define R so that \u03b8 indicates the relative preference between paperclips and staples:R(s, (pa, qq); \u03b8) = \u03b8pa + (1 \u2212 \u03b8)qa. R\u2019s action is ignored when t = 0 and H\u2019s is ignored when t = 1. At t = 2, the game is over, so we transition to a sink state, (0, 0, 2). Initially, there are no paperclips or staples and we use a uniform prior on \u03b8. H only acts in the initial state, so \u03c0Hcan be entirely describe by a single decision rule \u03b4H : [0, 1]\u2192 AH. R only observes one action from H and so the reachable beliefs are in one-to-one correspondence with H\u2019s actions. This lets us characterize R\u2019s policy as \u03c0R : AH \u2192 AR. Theorem 2. Let M be an ACIRL game. In the deployment phase, the optimal policy for R maximizes reward in the MDP induced by the mean \u03b8.\nProof. If R never observes another action from H, then there are no common observations so the coordination POMDP has no observations. The unobserved component of the state is static, so this distribution does not change over time. This reduces the problem to solving an MDP under a fixed distribution over reward functions so Theorem 3 from Ramachandran & Amir (2007) shows the result.\nThe DBE assumption in our example assumes that H maximize reward in the first round. Let \u03b8 = 0.49. H maximizes reward and chooses to make 0 paperclips and 2 staples. R observes this and updates its belief (using \u03b4E to define the observation distribution). In this case, we get bR = Unif([0, 0.5)). Given this belief, R\u2019s maximizes expected reward and chooses to make 0 paperclips and 90 staples. Thus, the expert decision rule \u03b4E and its best response br(\u03b4E) are defined by\n\u03b4E(\u03b8) = { (0, 2) \u03b8 < 0.5 (1, 1) \u03b8 = 0.5 (2, 0) \u03b8 > 0.5 , and br(\u03b4E)(aH) =  (0, 90) a H = (0, 2) (50, 50) aH = (1, 1) (90, 0) aH = (2, 0) . (4)\nNote that when \u03b8 = 0.49 H would prefer R to choose (50, 50). H is willing to forgo immediate reward during the demonstration to communicate this to R: the best response chooses (1, 1) when \u03b8 = 0.49. This leads to the following result. Theorem 3. Suppose that \u03c0R = br(\u03c0E). There exist ACIRL games where the best-response for H to \u03c0R violates the expert demonstrator assumption. In other words br(br(\u03c0E)) 6= \u03c0E.\nProof. Our office supply example gives a counter example that shows the theorem. When H accounts for R\u2019s actions under br(\u03b4E), H is faced with a choice between 0 paperclips and 92 staples, 51 of each, or 92 paperclips and 0 staples. It is straightforward to show that the optimal decision rule is given by\n\u03b4H(\u03b8) =  (0, 2) \u03b8 < 4192 (1, 1) 4192 \u2264 \u03b8 \u2264 51 92\n(2, 0) \u03b8 > 5192\n.\nThis is distinct from Equation 4 so we conclude the result."}], "references": [{"title": "Apprenticeship learning via inverse reinforcement learning", "author": ["P Abbeel", "A. Ng"], "venue": "In ICML,", "citeRegEx": "Abbeel and Ng,? \\Q2004\\E", "shortCiteRegEx": "Abbeel and Ng", "year": 2004}, {"title": "Recent developments in algorithmic teaching", "author": ["F Balbach", "T. Zeugmann"], "venue": "In Language and Automata Theory and Applications. Springer,", "citeRegEx": "Balbach and Zeugmann,? \\Q2009\\E", "shortCiteRegEx": "Balbach and Zeugmann", "year": 2009}, {"title": "The complexity of decentralized control of Markov decision processes", "author": ["D Bernstein", "S Zilberstein", "N. Immerman"], "venue": "In UAI,", "citeRegEx": "Bernstein et al\\.,? \\Q2000\\E", "shortCiteRegEx": "Bernstein et al\\.", "year": 2000}, {"title": "Superintelligence: Paths, dangers, strategies", "author": ["N. Bostrom"], "venue": null, "citeRegEx": "Bostrom,? \\Q2014\\E", "shortCiteRegEx": "Bostrom", "year": 2014}, {"title": "Sequential optimality and coordination in multiagent systems", "author": ["Boutilier", "Craig"], "venue": "In IJCAI,", "citeRegEx": "Boutilier and Craig.,? \\Q1999\\E", "shortCiteRegEx": "Boutilier and Craig.", "year": 1999}, {"title": "Algorithmic and human teaching of sequential decision tasks", "author": ["M Cakmak", "M. Lopes"], "venue": "In AAAI,", "citeRegEx": "Cakmak and Lopes,? \\Q2012\\E", "shortCiteRegEx": "Cakmak and Lopes", "year": 2012}, {"title": "Generating legible motion", "author": ["A Dragan", "S. Srinivasa"], "venue": "In Robotics: Science and Systems,", "citeRegEx": "Dragan and Srinivasa,? \\Q2013\\E", "shortCiteRegEx": "Dragan and Srinivasa", "year": 2013}, {"title": "Incentives in organizations", "author": ["R. Gibbons"], "venue": "Technical report, National Bureau of Economic Research,", "citeRegEx": "Gibbons,? \\Q1998\\E", "shortCiteRegEx": "Gibbons", "year": 1998}, {"title": "On the complexity of teaching", "author": ["S Goldman", "M. Kearns"], "venue": "Journal of Computer and System Sciences,", "citeRegEx": "Goldman and Kearns,? \\Q1995\\E", "shortCiteRegEx": "Goldman and Kearns", "year": 1995}, {"title": "Learning binary relations and total orders", "author": ["S Goldman", "R Rivest", "R. Schapire"], "venue": "SIAM Journal on Computing,", "citeRegEx": "Goldman et al\\.,? \\Q1993\\E", "shortCiteRegEx": "Goldman et al\\.", "year": 1993}, {"title": "A game-theoretic approach to generating spatial descriptions", "author": ["D Golland", "P Liang", "D. Klein"], "venue": "In EMNLP, pp", "citeRegEx": "Golland et al\\.,? \\Q2010\\E", "shortCiteRegEx": "Golland et al\\.", "year": 2010}, {"title": "Aggregation and linearity in the provision of intertemporal incentives", "author": ["B Holmstrom", "P. Milgrom"], "venue": null, "citeRegEx": "Holmstrom and Milgrom,? \\Q1987\\E", "shortCiteRegEx": "Holmstrom and Milgrom", "year": 1987}, {"title": "Multitask principal-agent analyses: Incentive contracts, asset ownership, and job design", "author": ["B Holmstrom", "P. Milgrom"], "venue": "Journal of Law, Economics, & Organization,", "citeRegEx": "Holmstrom and Milgrom,? \\Q1991\\E", "shortCiteRegEx": "Holmstrom and Milgrom", "year": 1991}, {"title": "Theory of the firm: Managerial behavior, agency costs and ownership structure", "author": ["M Jensen", "W. Meckling"], "venue": "Journal of Financial Economics,", "citeRegEx": "Jensen and Meckling,? \\Q1976\\E", "shortCiteRegEx": "Jensen and Meckling", "year": 1976}, {"title": "On the folly of rewarding A, while hoping for B", "author": ["S. Kerr"], "venue": "Academy of Management Journal,", "citeRegEx": "Kerr,? \\Q1975\\E", "shortCiteRegEx": "Kerr", "year": 1975}, {"title": "Inverse game theory", "author": ["V Kuleshov", "O. Schrijvers"], "venue": "Web and Internet Economics,", "citeRegEx": "Kuleshov and Schrijvers,? \\Q2015\\E", "shortCiteRegEx": "Kuleshov and Schrijvers", "year": 2015}, {"title": "An investigation of the Therac-25 accidents", "author": ["N Leveson", "C. Turner"], "venue": "IEEE Computer,", "citeRegEx": "Leveson and Turner,? \\Q1993\\E", "shortCiteRegEx": "Leveson and Turner", "year": 1993}, {"title": "Multi-agent inverse reinforcement learning", "author": ["S Natarajan", "G Kunapuli", "K Judah", "P Tadepalli", "Kersting", "J. Kand Shavlik"], "venue": "In Int\u2019l Conference on Machine Learning and Applications,", "citeRegEx": "Natarajan et al\\.,? \\Q2010\\E", "shortCiteRegEx": "Natarajan et al\\.", "year": 2010}, {"title": "Decentralized stochastic control with partial history sharing: A common information approach", "author": ["A Nayyar", "A Mahajan", "D. Teneketzis"], "venue": "IEEE Transactions on Automatic Control,", "citeRegEx": "Nayyar et al\\.,? \\Q2013\\E", "shortCiteRegEx": "Nayyar et al\\.", "year": 2013}, {"title": "Algorithms for inverse reinforcement learning", "author": ["A Ng", "S. Russell"], "venue": "In ICML,", "citeRegEx": "Ng and Russell,? \\Q2000\\E", "shortCiteRegEx": "Ng and Russell", "year": 2000}, {"title": "Bayesian inverse reinforcement learning", "author": ["D Ramachandran", "E. Amir"], "venue": "In IJCAI,", "citeRegEx": "Ramachandran and Amir,? \\Q2007\\E", "shortCiteRegEx": "Ramachandran and Amir", "year": 2007}, {"title": "Maximum margin planning", "author": ["N Ratliff", "J Bagnell", "M. Zinkevich"], "venue": "In ICML,", "citeRegEx": "Ratliff et al\\.,? \\Q2006\\E", "shortCiteRegEx": "Ratliff et al\\.", "year": 2006}, {"title": "Learning agents for uncertain environments (extended abstract)", "author": ["Russell", "Stuart J"], "venue": "In COLT,", "citeRegEx": "Russell and J.,? \\Q1998\\E", "shortCiteRegEx": "Russell and J.", "year": 1998}, {"title": "The optimal control of partially observable Markov processes over a finite horizon", "author": ["R Smallwood", "E. Sondik"], "venue": "Operations Research,", "citeRegEx": "Smallwood and Sondik,? \\Q1973\\E", "shortCiteRegEx": "Smallwood and Sondik", "year": 1973}, {"title": "Computational rationalization: The inverse equilibrium problem", "author": ["K Waugh", "B Ziebart", "J. Bagnell"], "venue": "In ICML,", "citeRegEx": "Waugh et al\\.,? \\Q2011\\E", "shortCiteRegEx": "Waugh et al\\.", "year": 2011}, {"title": "Some moral and technical consequences of automation", "author": ["N. Wiener"], "venue": "Science, 131,", "citeRegEx": "Wiener,? \\Q1960\\E", "shortCiteRegEx": "Wiener", "year": 1960}, {"title": "Maximum entropy inverse reinforcement learning", "author": ["B Ziebart", "A Maas", "J Bagnell", "A. Dey"], "venue": "In AAAI,", "citeRegEx": "Ziebart et al\\.,? \\Q2008\\E", "shortCiteRegEx": "Ziebart et al\\.", "year": 2008}], "referenceMentions": [{"referenceID": 25, "context": "\u201d So wrote Norbert Wiener (1960) in one of the earliest explanations of the problems that arise when autonomous systems operate with objectives that differ from those of humans.", "startOffset": 19, "endOffset": 33}, {"referenceID": 25, "context": "\u201d So wrote Norbert Wiener (1960) in one of the earliest explanations of the problems that arise when autonomous systems operate with objectives that differ from those of humans. This value alignment problem is not trivial to solve. Humans are prone to mis-stating their objectives, which can lead to unexpected implementations, as King Midas found out. Russell & Norvig (2010) give the example of specifying a reward function for a vacuum robot: if we reward the action of cleaning up dirt, which seems reasonable, the robot repeatedly dumps and cleans up the same dirt to maximize its reward.", "startOffset": 19, "endOffset": 377}, {"referenceID": 3, "context": "A solution to the value alignment problem has long-term implications for the future of AI and its relationship to humanity (Bostrom, 2014) and short-term utility for the design of usable AI systems.", "startOffset": 123, "endOffset": 138}, {"referenceID": 3, "context": "A solution to the value alignment problem has long-term implications for the future of AI and its relationship to humanity (Bostrom, 2014) and short-term utility for the design of usable AI systems. Giving robots the right objectives and enabling them to make the right trade-offs is crucial for self-driving cars, personal assistants, and human\u2013robot interaction more broadly. Value alignment problems are not unique to artificial systems. Economic systems often involve multiple agents with distinct objectives (e.g., employees and employers) and for whom incentive schemes (e.g., wages) must be designed. Kerr (1975) explains several examples of value misalignment in this context.", "startOffset": 124, "endOffset": 620}, {"referenceID": 2, "context": "Moreover, the complexity of solving the POMDP is exponentially lower than the NEXP-hard bound that (Bernstein et al., 2000) obtains for the natural reduction of the problem to a general Dec-POMDP.", "startOffset": 99, "endOffset": 123}, {"referenceID": 20, "context": "Ng & Russell (2000), Abbeel & Ng (2004), and Ratliff et al. (2006) compute constraints that characterize the set of reward functions so that the observed behavior maximizes reward.", "startOffset": 45, "endOffset": 67}, {"referenceID": 20, "context": "Ng & Russell (2000), Abbeel & Ng (2004), and Ratliff et al. (2006) compute constraints that characterize the set of reward functions so that the observed behavior maximizes reward. In general, there will be many reward functions consistent with this constraint. They use a max-margin heuristic to select a single reward function from this set as their estimate. In CIRL, the constraints they compute characterize R\u2019s belief about \u03b8 under the DBE assumption. Ramachandran & Amir (2007) and Ziebart et al.", "startOffset": 45, "endOffset": 485}, {"referenceID": 20, "context": "Ng & Russell (2000), Abbeel & Ng (2004), and Ratliff et al. (2006) compute constraints that characterize the set of reward functions so that the observed behavior maximizes reward. In general, there will be many reward functions consistent with this constraint. They use a max-margin heuristic to select a single reward function from this set as their estimate. In CIRL, the constraints they compute characterize R\u2019s belief about \u03b8 under the DBE assumption. Ramachandran & Amir (2007) and Ziebart et al. (2008) consider the case where \u03c0 is \u201cnoisily expert,\u201d i.", "startOffset": 45, "endOffset": 511}, {"referenceID": 20, "context": "Ng & Russell (2000), Abbeel & Ng (2004), and Ratliff et al. (2006) compute constraints that characterize the set of reward functions so that the observed behavior maximizes reward. In general, there will be many reward functions consistent with this constraint. They use a max-margin heuristic to select a single reward function from this set as their estimate. In CIRL, the constraints they compute characterize R\u2019s belief about \u03b8 under the DBE assumption. Ramachandran & Amir (2007) and Ziebart et al. (2008) consider the case where \u03c0 is \u201cnoisily expert,\u201d i.e., \u03c0is a Boltzmann distribution where actions or trajectories are selected in proportion to the exponent of their value. Ramachandran & Amir (2007) adopt a Bayesian approach and place an explicit prior on rewards.", "startOffset": 45, "endOffset": 709}, {"referenceID": 20, "context": "Ng & Russell (2000), Abbeel & Ng (2004), and Ratliff et al. (2006) compute constraints that characterize the set of reward functions so that the observed behavior maximizes reward. In general, there will be many reward functions consistent with this constraint. They use a max-margin heuristic to select a single reward function from this set as their estimate. In CIRL, the constraints they compute characterize R\u2019s belief about \u03b8 under the DBE assumption. Ramachandran & Amir (2007) and Ziebart et al. (2008) consider the case where \u03c0 is \u201cnoisily expert,\u201d i.e., \u03c0is a Boltzmann distribution where actions or trajectories are selected in proportion to the exponent of their value. Ramachandran & Amir (2007) adopt a Bayesian approach and place an explicit prior on rewards. Ziebart et al. (2008) places a prior on reward functions indirectly by assuming a uniform prior over trajectories.", "startOffset": 45, "endOffset": 797}, {"referenceID": 17, "context": "Natarajan et al. (2010) introduce an extension to IRL where R observes multiple actors that cooperate to maximize a common reward function.", "startOffset": 0, "endOffset": 24}, {"referenceID": 17, "context": "Natarajan et al. (2010) introduce an extension to IRL where R observes multiple actors that cooperate to maximize a common reward function. This is a different type of cooperation than we consider, as the reward function is common knowledge and R is a passive observer. Waugh et al. (2011) and Kuleshov & Schrijvers (2015) consider the problem of inferring payoffs from observed behavior in a general (i.", "startOffset": 0, "endOffset": 290}, {"referenceID": 17, "context": "Natarajan et al. (2010) introduce an extension to IRL where R observes multiple actors that cooperate to maximize a common reward function. This is a different type of cooperation than we consider, as the reward function is common knowledge and R is a passive observer. Waugh et al. (2011) and Kuleshov & Schrijvers (2015) consider the problem of inferring payoffs from observed behavior in a general (i.", "startOffset": 0, "endOffset": 323}, {"referenceID": 9, "context": "Because CIRL incentivizes the human to teach, as opposed to maximizing reward in isolation, our work is related to optimal teaching: finding examples that optimally train a learner (Balbach & Zeugmann, 2009; Goldman et al., 1993; Goldman & Kearns, 1995).", "startOffset": 181, "endOffset": 253}, {"referenceID": 10, "context": "Examples include finding a motion that best communicates an agent\u2019s intention (Dragan & Srinivasa, 2013), or finding a natural language utterance that best communicates a particular grounding (Golland et al., 2010).", "startOffset": 192, "endOffset": 214}, {"referenceID": 13, "context": "Kerr (1975) describes a wide variety of misaligned incentives in the aptly titled \u201cOn the folly of rewarding A, while hoping for B.", "startOffset": 0, "endOffset": 12}, {"referenceID": 7, "context": "Gibbons (1998) provides a useful survey of principal\u2013agent models and their applications.", "startOffset": 0, "endOffset": 15}, {"referenceID": 7, "context": "Gibbons (1998) provides a useful survey of principal\u2013agent models and their applications. Holmstrom & Milgrom (1987) gives structural results on optimal incentive schemes in linear principal\u2013agent models.", "startOffset": 0, "endOffset": 117}, {"referenceID": 7, "context": "Gibbons (1998) provides a useful survey of principal\u2013agent models and their applications. Holmstrom & Milgrom (1987) gives structural results on optimal incentive schemes in linear principal\u2013agent models. From the perspective of AI research, one of the most interesting lines of research in this literature studies the impacts of distorted incentives. Holmstrom & Milgrom (1991) develop a multi-task model where some tasks are more easily measured and rewarded than others.", "startOffset": 0, "endOffset": 379}, {"referenceID": 2, "context": "Unfortunately, Dec-POMDPs are NEXPcomplete (Bernstein et al., 2000) so general Dec-POMDP algorithms have a computational complexity that is doubly exponential.", "startOffset": 43, "endOffset": 67}, {"referenceID": 2, "context": "Unfortunately, Dec-POMDPs are NEXPcomplete (Bernstein et al., 2000) so general Dec-POMDP algorithms have a computational complexity that is doubly exponential. Fortunately, CIRL games have special structure that makes optimal equilibrium computation more efficient. Nayyar et al. (2013) shows that a Dec-POMDP can be reduced to a coordination-POMDP.", "startOffset": 44, "endOffset": 287}, {"referenceID": 26, "context": "We use Maximum-Entropy IRL (Ziebart et al., 2008) to implement R\u2019s policy.", "startOffset": 27, "endOffset": 49}], "year": 2017, "abstractText": "For an autonomous system to be helpful to humans and to pose no unwarranted risks, it needs to align its values with those of the humans in its environment in such a way that its actions contribute to the maximization of value for the humans. We propose a formal definition of the value alignment problem as cooperative inverse reinforcement learning (CIRL). A CIRL problem is a cooperative, partialinformation game with two agents, human and robot; both are rewarded according to the human\u2019s reward function, but the robot does not initially know what this is. In contrast to classical IRL, where the human is assumed to act optimally in isolation, optimal CIRL solutions produce behaviors such as active teaching, active learning, and communicative actions that are more effective in achieving value alignment. We show that computing optimal joint policies in CIRL games can be reduced to solving a POMDP, prove that optimality in isolation is suboptimal in CIRL, and derive an approximate CIRL algorithm.", "creator": "LaTeX with hyperref package"}}}