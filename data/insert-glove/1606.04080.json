{"id": "1606.04080", "review": {"conference": "NIPS", "VERSION": "v1", "DATE_OF_SUBMISSION": "13-Jun-2016", "title": "Matching Networks for One Shot Learning", "abstract": "ganpati Learning drillia from janklow a 2,216 few challoner examples strelow remains telefonia a ol\u00edmpic key challenge in gayathri machine learning. satsita Despite hauler recent advances gabrieli in deusen important domains suffolk such perinatal as vision and language, hedorah the fufeng standard supervised deep learning 44.77 paradigm epicormic does gabre not offer a geewax satisfactory solution for consultants learning new xiaoyan concepts rapidly peulvast from little data. chad In screechy this 35,600 work, khursheed we employ petion ideas dbag from metric learning stonecutter based taken on cumbers deep neural hpd features and from recent sheikha advances that augment neural networks uncured with dhanush external 5-of-6 memories. montrone Our groenewald framework monilifera learns pantin a insar network deviating that maps a small mayreder labelled demers support ardclough set m1a2 and organda an misogynists unlabelled example http://www.imf.org to indologist its comprises label, obviating huskies the caiu need chamberlain for sadirov fine - kamba tuning nurhayati to mailboat adapt interprets to new class types. mumengi We andante then define bhau one - shot fratelli learning problems kitab on lingshan vision (downplay using Omniglot, mosrite ImageNet) masterkova and beddall language gasp\u00e9 tasks. Our algorithm improves mamsurov one - shot accuracy cloe on ImageNet from 87. 6% leuchars to 93. systematists 2% shvartsman and oyl from dunkers 88. mohmed 0% to pcpa 93. 8% on Omniglot 2,740 compared subcontinent to competing approaches. zavvi We shoddy also demonstrate the astrogeology usefulness jokesters of the hitchcockian same model driffield on ijmuiden language modeling by saddlebags introducing a one - souham shot nihoul task 48-47 on the Penn Treebank.", "histories": [["v1", "Mon, 13 Jun 2016 19:34:22 GMT  (2522kb,D)", "http://arxiv.org/abs/1606.04080v1", null]], "reviews": [], "SUBJECTS": "cs.LG stat.ML", "authors": ["oriol vinyals", "charles blundell", "tim lillicrap", "koray kavukcuoglu", "daan wierstra"], "accepted": true, "id": "1606.04080"}, "pdf": {"name": "1606.04080.pdf", "metadata": {"source": "CRF", "title": "Matching Networks for One Shot Learning", "authors": ["Oriol Vinyals", "Charles Blundell"], "emails": ["vinyals@google.com", "cblundell@google.com", "countzero@google.com", "korayk@google.com", "wierstra@google.com"], "sections": [{"heading": "1 Introduction", "text": "Humans learn new concepts with very little supervision \u2013 e.g. a child can generalize the concept of \u201cgiraffe\u201d from a single picture in a book \u2013 yet our best deep learning systems need hundreds or thousands of examples. This motivates the setting we are interested in: \u201cone-shot\u201d learning, which consists of learning a class from a single labelled example.\nDeep learning has made major advances in areas such as speech [7], vision [13] and language [16], but is notorious for requiring large datasets. Data augmentation and regularization techniques alleviate overfitting in low data regimes, but do not solve it. Furthermore, learning is still slow and based on large datasets, requiring many weight updates using stochastic gradient descent. This, in our view, is mostly due to the parametric aspect of the model, in which training examples need to be slowly learnt by the model into its parameters.\nIn contrast, many non-parametric models allow novel examples to be rapidly assimilated, whilst not suffering from catastrophic forgetting. Some models in this family (e.g., nearest neighbors) do not require any training but performance depends on the chosen metric [1]. Previous work on metric learning in non-parametric setups [18] has been influential on our model, and we aim to incorporate the best characteristics from both parametric and non-parametric models \u2013 namely, rapid acquisition of new examples while providing excellent generalisation from common examples.\nThe novelty of our work is twofold: at the modeling level, and at the training procedure. We propose Matching Nets (MN), a neural network which uses recent advances in attention and memory that enable rapid learning. Secondly, our training procedure is based on a simple machine learning principle: test and train conditions must match. Thus to train our network to do rapid learning, we\nar X\niv :1\n60 6.\n04 08\n0v 1\n[ cs\n.L G\n] 1\n3 Ju\ntrain it by showing only a few examples per class, switching the task from minibatch to minibatch, much like how it will be tested when presented with a few examples of a new task.\nBesides our contributions in defining a model and training criterion amenable for one-shot learning, we contribute by the definition of tasks that can be used to benchmark other approaches on both ImageNet and small scale language modeling. We hope that our results will encourage others to work on this challenging problem.\nWe organized the paper by first defining and explaining our model whilst linking its several components to related work. Then in the following section we briefly elaborate on some of the related work to the task and our model. In Section 4 we describe both our general setup and the experiments we performed, demonstrating strong results on one-shot learning on a variety of tasks and setups."}, {"heading": "2 Model", "text": "Our non-parametric approach to solving one-shot learning is based on two components which we describe in the following subsections. First, our model architecture follows recent advances in neural networks augmented with memory (as discussed in Section 3). Given a (small) support set S, our model defines a function cS (or classifier) for each S, i.e. a mapping S \u2192 cS(.). Second, we employ a training strategy which is tailored for one-shot learning from the support set S."}, {"heading": "2.1 Model Architecture", "text": "In recent years, many groups have investigated ways to augment neural network architectures with external memories and other components that make them more \u201ccomputer-like\u201d. We draw inspiration from models such as sequence to sequence (seq2seq) with attention [2], memory networks [29] and pointer networks [27].\nIn all these models, a neural attention mechanism, often fully differentiable, is defined to access (or read) a memory matrix which stores useful information to solve the task at hand. Typical uses of this include machine translation, speech recognition, or question answering. More generally, these architectures model P (B|A) where A and/or B can be a sequence (like in seq2seq models), or, more interestingly for us, a set [26].\nOur contribution is to cast the problem of one-shot learning within the set-to-set framework [26]. The key point is that when trained, Matching Networks are able to produce sensible test labels for unobserved classes without any changes to the network. More precisely, we wish to map from a (small) support set of k examples of image-label pairs S = {(xi, yi)}ki=1 to a classifier cS(x\u0302) which, given a test example x\u0302, defines a probability distribution over outputs y\u0302. We define the mapping S \u2192 cS(x\u0302) to be P (y\u0302|x\u0302, S) where P is parameterised by a neural network. Thus, when given a\nnew support set of examples S\u2032 from which to one-shot learn, we simply use the parametric neural network defined by P to make predictions about the appropriate label y\u0302 for each test example x\u0302: P (y\u0302|x\u0302, S\u2032). In general, our predicted output class for a given input unseen example x\u0302 and a support set S becomes argmaxy P (y|x\u0302, S). Our model in its simplest form computes y\u0302 as follows:\ny\u0302 = k\u2211 i=1 a(x\u0302, xi)yi (1)\nwhere xi, yi are the samples and labels from the support set S = {(xi, yi)}ki=1, and a is an attention mechanism which we discuss below. Note that eq. 1 essentially describes the output for a new class as a linear combination of the labels in the support set. Where the attention mechanism a is a kernel on X \u00d7X , then (1) is akin to a kernel density estimator. Where the attention mechanism is zero for the b furthest xi from x\u0302 according to some distance metric and an appropriate constant otherwise, then (1) is equivalent to \u2018k \u2212 b\u2019-nearest neighbours (although this requires an extension to the attention mechanism that we describe in Section 2.1.2). Thus (1) subsumes both KDE and kNN methods. Another view of (1) is where a acts as an attention mechanism and the yi act as memories bound to the corresponding xi. In this case we can understand this as a particular kind of associative memory where, given an input, we \u201cpoint\u201d to the corresponding example in the support set, retrieving its label. However, unlike other attentional memory mechanisms [2], (1) is non-parametric in nature: as the support set size grows, so does the memory used. Hence the functional form defined by the classifier cS(x\u0302) is very flexible and can adapt easily to any new support set."}, {"heading": "2.1.1 The Attention Kernel", "text": "Equation 1 relies on choosing a(., .), the attention mechanism, which fully specifies the classifier. The simplest form that this takes (and which has very tight relationships with common attention models and kernel functions) is to use the softmax over the cosine distance c, i.e., a(x\u0302, xi) = e c(f(x\u0302),g(xi))/ \u2211k j=1 e\nc(f(x\u0302),g(xj)) with embedding functions f and g being appropriate neural networks (potentially with f = g) to embed x\u0302 and xi. In our experiments we shall see examples where f and g are parameterised variously as deep convolutional networks for image tasks (as in VGG[22] or Inception[24]) or a simple form word embedding for language tasks (see Section 4).\nWe note that, though related to metric learning, the classifier defined by Equation 1 is discriminative. For a given support set S and sample to classify x\u0302, it is enough for x\u0302 to be sufficiently aligned with pairs (x\u2032, y\u2032) \u2208 S such that y\u2032 = y and misaligned with the rest. This kind of loss is also related to methods such as Neighborhood Component Analysis (NCA) [18], triplet loss [9] or large margin nearest neighbor [28].\nHowever, the objective that we are trying to optimize is precisely aligned with multi-way, one-shot classification, and thus we expect it to perform better than its counterparts. Additionally, the loss is simple and differentiable so that one can find the optimal parameters in an \u201cend-to-end\u201d fashion."}, {"heading": "2.1.2 Full Context Embeddings", "text": "The main novelty of our model lies in reinterpreting a well studied framework (neural networks with external memories) to do one-shot learning. Closely related to metric learning, the embedding functions f and g act as a lift to feature space X to achieve maximum accuracy through the classification function described in eq. 1.\nDespite the fact that the classification strategy is fully conditioned on the whole support set through P (.|x\u0302, S), the embeddings on which we apply the cosine similarity to \u201cattend\u201d, \u201cpoint\u201d or simply compute the nearest neighbor are myopic in the sense that each element xi gets embedded by g(xi) independently of other elements in the support set S. Furthermore, S should be able to modify how we embed the test image x\u0302 through f .\nWe propose embedding the elements of the set through a function which takes as input the full set S in addition to xi, i.e. g becomes g(xi, S). Thus, as a function of the whole support set S, g can modify how to embed xi. This could be useful when some element xj is very close to xi, in which\ncase it may be beneficial to change the function with which we embed xi \u2013 some evidence of this is discussed in Section 4. We use a bidirectional Long-Short Term Memory (LSTM) [8] to encode xi in the context of the support set S, considered as a sequence (see appendix for a more precise definition).\nThe second issue can be fixed via an LSTM with read-attention over the whole set S, whose inputs are equal to x: f(x\u0302, S) = attLSTM(f \u2032(x\u0302), g(S),K) where f \u2032(x\u0302) are the features (e.g., derived from a CNN) which are input to the LSTM (constant at each time step). K is the fixed number of unrolling steps of the LSTM, and g(S) is the set over which we attend, embedded with g. This allows for the model to potentially ignore some elements in the support set S, and adds \u201cdepth\u201d to the computation of attention (see appendix for more details)."}, {"heading": "2.2 Training Strategy", "text": "In the previous subsection we described Matching Networks which map a support set to a classification function, S \u2192 c(x\u0302). We achieve this via a modification of the set-to-set paradigm augmented with attention, with the resulting mapping being of the form P\u03b8(.|x\u0302, S), noting that \u03b8 are the parameters of the model (i.e. of the embedding functions f and g described previously).\nThe training procedure has to be chosen carefully so as to match inference at test time. Our model has to perform well with support sets S\u2032 which contain classes never seen during training.\nMore specifically, let us define a task T as distribution over possible label sets L. Typically we consider T to uniformly weight all data sets of up to a few unique classes (e.g., 5), with a few examples per class (e.g., up to 5). In this case, a label set L sampled from a task T , L \u223c T , will typically have 5 to 25 examples.\nTo form an \u201cepisode\u201d to compute gradients and update our model, we first sample L from T (e.g., L could be the label set {cats, dogs}). We then use L to sample the support set S and a batch B (i.e., both S and B are labelled examples of cats and dogs). The Matching Net is then trained to minimise the error predicting the labels in the batch B conditioned on the support set S. This is a form of meta-learning since the training procedure explicitly learns to learn from a given support set to minimise a loss over a batch. More precisely, the Matching Nets training objective is as follows:\n\u03b8 = argmax \u03b8 EL\u223cT ES\u223cL,B\u223cL  \u2211 (x,y)\u2208B logP\u03b8 (y|x, S)  . (2) Training \u03b8 with eq. 2 yields a model which works well when sampling S\u2032 \u223c T \u2032 from a different distribution of novel labels. Crucially, our model does not need any fine tuning on the classes it has never seen due to its non-parametric nature. Obviously, as T \u2032 diverges far from the T from which we sampled to learn \u03b8, the model will not work \u2013 we belabor this point further in Section 4.1.2."}, {"heading": "3 Related Work", "text": ""}, {"heading": "3.1 Memory Augmented Neural Networks", "text": "A recent surge of models which go beyond \u201cstatic\u201d classification of fixed vectors onto their classes has reshaped current research and industrial applications alike. This is most notable in the massive adoption of LSTMs [8] in a variety of tasks such as speech [7], translation [23, 2] or learning programs [4, 27]. A key component which allowed for more expressive models was the introduction of \u201ccontent\u201d based attention in [2], and \u201ccomputer-like\u201d architectures such as the Neural Turing Machine [4] or Memory Networks [29]. Our work takes the metalearning paradigm of [21], where an LSTM learnt to learn quickly from data presented sequentially, but we treat the data as a set. The one-shot learning task we defined on the Penn Treebank [15] relates to evaluation techniques and models presented in [6], and we discuss this in Section 4."}, {"heading": "3.2 Metric Learning", "text": "As discussed in Section 2, there are many links between content based attention, kernel based nearest neighbor and metric learning [1]. The most relevant work is Neighborhood Component Analysis\n(NCA) [18], and the follow up non-linear version [20]. The loss is very similar to ours, except we use the whole support set S instead of pair-wise comparisons which is more amenable to one-shot learning. Follow-up work in the form of deep convolutional siamese [11] networks included much more powerful non-linear mappings. Other losses which include the notion of a set (but use less powerful metrics) were proposed in [28].\nLastly, the work in one-shot learning in [14] was inspirational and also provided us with the invaluable Omniglot dataset \u2013 referred to as the \u201ctranspose\u201d of MNIST. Other works used zero-shot learning on ImageNet, e.g. [17]. However, there is not much one-shot literature on ImageNet, which we hope to amend via our benchmark and task definitions in the following section."}, {"heading": "4 Experiments", "text": "In this section we describe the results of many experiments, comparing our Matching Networks model against strong baselines. All of our experiments revolve around the same basic task: an N -way k-shot learning task. Each method is providing with a set of k labelled examples from each of N classes that have not previously been trained upon. The task is then to classify a disjoint batch of unlabelled examples into one of these N classes. Thus random performance on this task stands at 1/N . We compared a number of alternative models, as baselines, to Matching Networks.\nLet us introduce some notation. L\u2032 denotes the held-out subset of labels which we only use for one-shot. Thus, unless otherwise specified, training is always on 6=L\u2032, and test in one-shot mode on L\u2032.\nWe ran one-shot experiments on three data sets: two image classification sets (Omniglot [14] and ImageNet [19, ILSVRC-2012]) and one language modeling (Penn Treebank). The experiments on the three data sets comprise a diverse set of qualities in terms of complexity, sizes, and modalities."}, {"heading": "4.1 Image Classification Results", "text": "For vision problems, we considered four kinds of baselines: matching on raw pixels, matching on discriminative features from a state-of-the-art classifier (Baseline Classifier), MANN [21], and our reimplementation of the Convolutional Siamese Net [11]. The baseline classifier was trained to classify an image into one of the original classes present in the training data set, but excluding the N classes so as not to give it an unfair advantage (i.e., trained to classify classes in 6=L\u2032). We then took this network and used the features from the last layer (before the softmax) for nearest neighbour matching, a strategy commonly used in computer vision [3] which has achieved excellent results across many tasks. Following [11], the convolutional siamese nets were trained on a same-or-different task of the original training data set and then the last layer was used for nearest neighbour matching.\nWe also tried further fine tuning the features using only the support set S\u2032 sampled from L\u2032. This yields massive overfitting, but given that our networks are highly regularized, can yield extra gains. Note that, even when fine tuning, the setup is still one-shot, as only a single example per class from L\u2032 is used."}, {"heading": "4.1.1 Omniglot", "text": "Omniglot [14] consists of 1623 characters from 50 different alphabets. Each of these was hand drawn by 20 different people. The large number of classes (characters) with relatively few data per class (20), makes this an ideal data set for testing small-scale one-shot classification. The N -way Omniglot task setup is as follows: pick N unseen character classes, independent of alphabet, as L. Provide the model with one drawing of each of the N characters as S \u223c L and a batch B \u223c L. Following [21], we augmented the data set with random rotations by multiples of 90 degrees and used 1200 characters for training, and the remaining character classes for evaluation.\nWe used a simple yet powerful CNN as the embedding function \u2013 consisting of a stack of modules, each of which is a 3 \u00d7 3 convolution with 64 filters followed by batch normalization [10], a Relu non-linearity and 2\u00d7 2 max-pooling. We resized all the images to 28\u00d7 28 so that, when we stack 4 modules, the resulting feature map is 1\u00d7 1\u00d7 64, resulting in our embedding function f(x). A fully connected layer followed by a softmax non-linearity is used to define the Baseline Classifier.\nResults comparing the baselines to our model on Omniglot are shown in Table 1. For both 1-shot and 5-shot, 5-way and 20-way, our model outperforms the baselines. There are no major surprises in these results: using more examples for k-shot classification helps all models, and 5-way is easier than 20-way. We note that the Baseline Classifier improves a bit when fine tuning on S\u2032, and using cosine distance versus training a small softmax from the small training set (thus requiring fine tuning) also performs well. Siamese nets fare well versus our Matching Nets when using 5 examples per class, but their performance degrades rapidly in one-shot. Fully Conditional Embeddings (FCE) did not seem to help much and were left out of the table due to space constraints.\nLike the authors in [11], we also test our method trained on Omniglot on a completely disjoint task \u2013 one-shot, 10 way MNIST classification. The Baseline Classifier does about 63% accuracy whereas (as reported in their paper) the Siamese Nets do 70%. Our model achieves 72%."}, {"heading": "4.1.2 ImageNet", "text": "Our experiments followed the same setup as Omniglot for testing, but we considered a rand and a dogs (harder) setup. In the rand setup, we removed 118 labels at random from the training set, then tested only on these 118 classes (which we denote as Lrand). For the dogs setup, we removed all classes in ImageNet descended from dogs (totalling 118) and trained on all non-dog classes, then tested on dog classes (Ldogs). ImageNet is a notoriously large data set which can be quite a feat of engineering and infrastructure to run experiments upon it, requiring many resources. Thus, as well as using the full ImageNet data set, we devised a new data set \u2013 miniImageNet \u2013 consisting of 60, 000 colour images of size 84 \u00d7 84 with 100 classes, each having 600 examples. This dataset is more complex than CIFAR10 [12], but fits in memory on modern machines, making it very convenient for rapid prototyping and experimentation. We used 80 classes for training and tested on the remaining 20 classes. In total, thus, we have randImageNet, dogsImageNet, and miniImageNet.\nThe results of the miniImageNet experiments are shown in Table 2. As with Omniglot, Matching Networks outperform the baselines. However, miniImageNet is a much harder task than Omniglot which allowed us to evaluate Full Contextual Embeddings (FCE) sensibly (on Omniglot it made no difference). As we an see, FCE improves the performance of Matching Networks, with and without fine tuning, typically improving performance by around two percentage points.\nNext we turned to experiments based upon full size, full scale ImageNet. Our baseline classifier for this data set was Inception [25] trained to classify on all classes except those in the test set of classes (for randImageNet) or those concerning dogs (for dogsImageNet). We also compared to features from an Inception Oracle classifier trained on all classes in ImageNet, as an upper bound. Our Baseline Classifier is one of the strongest published ImageNet models at 79% top-1 accuracy on the standard ImageNet validation set. Instead of training Matching Networks from scratch on these large tasks, we initialised their feature extractors f and g with the parameters from the Inception classifier (pretrained on the appropriate subset of the data) and then further trained the resulting network on random 5-way 1-shot tasks from the training data set, incorporating Full Context Embeddings and our Matching Networks and training strategy.\nThe results of the randImageNet and dogsImageNet experiments are shown in Table 3. The Inception Oracle (trained on all classes) performs almost perfectly when restricted to 5 classes only, which is not too surprising given its impressive top-1 accuracy. When trained solely on 6=Lrand, Matching Nets improve upon Inception by almost 6% when tested on Lrand, halving the errors. Figure 2 shows two instances of 5-way one-shot learning, where Inception fails. Looking at all the errors, Inception appears to sometimes prefer an image above all others (these images tend to be cluttered like the example in the second column, or more constant in color). Matching Nets, on the other hand, manage to recover from these outliers that sometimes appear in the support set S\u2032.\nMatching Nets manage to improve upon Inception on the complementary subset 6=Ldogs (although this setup is not one-shot, as the feature extraction has been trained on these labels). However, on the much more challenging Ldogs subset, our model degrades by 1%. We hypothesize this to the fact that the sampled set during training, S, comes from a random distribution of labels (from 6=Ldogs), whereas the testing support set S\u2032 from Ldogs contains similar classes, more akin to fine grained classification. Thus, we believe that if we adapted our training strategy to samples S from fine grained sets of labels instead of sampling uniformly from the leafs of the ImageNet class tree, improvements could be attained. We leave this as future work."}, {"heading": "4.1.3 One-Shot Language Modeling", "text": "We also introduce a new one-shot language task which is analogous to those examined for images. The task is as follows: given a query sentence with a missing word in it, and a support set of sentences which each have a missing word and a corresponding 1-hot label, choose the label from the support\nset that best matches the query sentence. Here we show a single example, though note that the words on the right are not provided and the labels for the set are given as 1-hot-of-5 vectors. 1. an experimental vaccine can alter the immune response of people infected with the aids virus a <blank_token> u.s. scientist said. prominent\n2. the show one of five new nbc <blank_token> is the second casualty of the three networks so far this fall.\nseries\n3. however since eastern first filed for chapter N protection march N it has consistently promised to pay creditors N cents on the <blank_token>. dollar 4. we had a lot of people who threw in the <blank_token> today said <unk> ellis a partner in benjamin jacobson & sons a specialist in trading ual stock on the big board. towel 5. it\u2019s not easy to roll out something that <blank_token> and make it pay mr. jacob says. comprehensive Query: in late new york trading yesterday the <blank_token> was quoted at N marks down from N marks late friday and at N yen down from N yen late friday. dollar\nSentences were taken from the Penn Treebank dataset [15]. On each trial, we make sure that the set and batch are populated with sentences that are non-overlapping. This means that we do not use words with very low frequency counts; e.g. if there is only a single sentence for a given word we do not use this data since the sentence would need to be in both the set and the batch. As with the image tasks, each trial consisted of a 5 way choice between the classes available in the set. We used a batch size of 20 throughout the sentence matching task (SMT) and varied the set size across k=1,2,3. We ensured that the same number of sentences were available for each class in the set.\nWe split the words into a randomly sampled 9000 for training and 1000 for testing. As well, we trained and tested using sentences taken from the standard PTB training set and tested with sentences from the standard test set. Thus, neither the words nor the sentences used during test time had been seen during training.\nWe compared our one-shot matching model to an oracle LSTM language model (LSTM-LM) [30] trained on all the words. In this setup, the LSTM has an unfair advantage as it is not doing one-shot learning but seeing all the data \u2013 thus, this should be taken as an upper bound. To do so, we examined a similar setup wherein a sentence was presented to the model with a single word filled in with 5 different possible words (including the correct answer). For each of these 5 sentences the model gave a log-likelihood and the max of these was taken to be the choice of the model.\nAs with the other 5 way choice tasks, chance performance on this task was 20%. The LSTM language model oracle achieved an upper bound of 72.8% accuracy on the test set. Matching Networks with a simple encoding model achieve 32.4%, 36.1%, 38.2% accuracy on the task with k = 1, 2, 3 examples in the set, respectively. Future work should explore combining parametric models such as an LSTM-LM with non-parametric components such as the Matching Networks explored here.\nTwo related tasks are the CNN QA test of entity prediction from news articles [5], and the Children\u2019s Book Test (CBT) [6]. In the CBT for example, a sequence of sentences from a book are provided as context. In the final sentence one of the words, which has appeared in a previous sentence, is missing. The task is to choose the correct word to fill in this blank from a small set of words given as possible answers, all of which occur in the preceding sentences. In our sentence matching task the sentences provided in the set are randomly drawn from the PTB corpus and are related to the sentences in the query batch only by the fact that they share a word. In contrast to CBT and CNN dataset, they provide only a generic rather than specific sequential context."}, {"heading": "5 Conclusion", "text": "In this paper we introduced Matching Networks, a new neural architecture that, by way of its corresponding training regime, is capable of state-of-the-art performance on a variety of one-shot classification tasks. There are a few key insights in this work. Firstly, one-shot learning is much easier if you train the network to do one-shot learning. Secondly, non-parametric structures in a neural network make it easier for networks to remember and adapt to new training sets in the same tasks. Combining these observations together yields Matching Networks. Further, we have defined new one-shot tasks on ImageNet, a reduced version of ImageNet (for rapid experimentation), and a language modeling task. An obvious drawback of our model is the fact that, as the support set S grows in size, the computation for each gradient update becomes more expensive. Although there are sparse and sampling-based methods to alleviate this, much of our future efforts will concentrate around this limitation. Further, as exemplified in the ImageNet dogs subtask, when the label distribution has obvious biases (such as being fine grained), our model suffers. We feel this is an area with exciting challenges which we hope to keep improving in future work."}, {"heading": "Acknowledgements", "text": "We would like to thank Nal Kalchbrenner for brainstorming around the design of the function g, and Sander Dieleman and Sergio Guadarrama for their help setting up ImageNet. We would also like thank Simon Osindero for useful discussions around the tasks discussed in this paper, and Theophane Weber and Remi Munos for following some early developments. Karen Simonyan and David Silver helped with the manuscript, as well as many at Google DeepMind. Thanks also to Geoff Hinton and Alex Toshev for discussions about our results."}, {"heading": "A Model Description", "text": "In this section we fully specify the models which condition the embedding functions f and g on the whole support set S. Much previous work has fully described similar mechanisms, which is why we left the precise details for this appendix.\nA.1 The Fully Conditional Embedding f\nAs described in section 2.1.2, the embedding function for an example x\u0302 in the batch B is as follows:\nf(x\u0302, S) = attLSTM(f \u2032(x\u0302), g(S),K) where f \u2032 is a neural network (e.g., VGG or Inception, as described in the main text). We define K to be the number of \u201cprocessing\u201d steps following work from [26] from their \u201cProcess\u201d block. g(S) represents the embedding function g applied to each element xi from the set S.\nThus, the state after k processing steps is as follows:\nh\u0302k, ck = LSTM(f \u2032(x\u0302), [hk\u22121, rk\u22121], ck\u22121) (3)\nhk = h\u0302k + f \u2032(x\u0302) (4)\nrk\u22121 = |S|\u2211 i=1 a(hk\u22121, g(xi))g(xi) (5)\na(hk\u22121, g(xi)) = softmax(hTk\u22121g(xi)) (6)\nnoting that LSTM(x, h, c) follows the same LSTM implementation defined in [23] with x the input, h the output (i.e., cell after the output gate), and c the cell. a is commonly referred to as \u201ccontent\u201d based attention, and the softmax in eq. 6 normalizes w.r.t. g(xi). The read-out rk\u22121 from g(S) is concatenated to hk\u22121. Since we do K steps of \u201creads\u201d, attLSTM(f \u2032(x\u0302), g(S),K) = hK where hk is as described in eq. 3.\nA.2 The Fully Conditional Embedding g\nIn section 2.1.2 we described the encoding function for the elements in the support set S, g(xi, S), as a bidirectional LSTM. More precisely, let g\u2032(xi) be a neural network (similar to f \u2032 above, e.g. a VGG or Inception model). Then we define g(xi, S) = ~hi + ~hi + g\u2032(xi) with:\n~hi,~ci = LSTM(g\u2032(xi),~hi\u22121,~ci\u22121) ~hi, ~ci = LSTM(g\u2032(xi), ~hi+1, ~ci+1)\nwhere, as in above, LSTM(x, h, c) follows the same LSTM implementation defined in [23] with x the input, h the output (i.e., cell after the output gate), and c the cell. Note that the recursion for ~h starts from i = |S|. As in eq. 3, we add a skip connection between input and outputs.\nB ImageNet Class Splits\nHere we define the two class splits used in our full ImageNet experiments \u2013 these classes were excluded for training during our one-shot experiments described in section 4.1.2.\nLrand = n01498041, n01537544, n01580077, n01592084, n01632777, n01644373, n01665541, n01675722, n01688243, n01729977, n01775062, n01818515, n01843383, n01883070, n01950731, n02002724, n02013706, n02092339, n02093256, n02095314, n02097130, n02097298,\nn02098413, n02101388, n02106382, n02108089, n02110063, n02111129, n02111500, n02112350, n02115913, n02117135, n02120505, n02123045, n02125311, n02134084, n02167151, n02190166, n02206856, n02231487, n02256656, n02398521, n02480855, n02481823, n02490219, n02607072, n02666196, n02672831, n02704792, n02708093, n02814533, n02817516, n02840245, n02843684, n02870880, n02877765, n02966193, n03016953, n03017168, n03026506, n03047690, n03095699, n03134739, n03179701, n03255030, n03388183, n03394916, n03424325, n03467068, n03476684, n03483316, n03627232, n03658185, n03710193, n03721384, n03733131, n03785016, n03786901, n03792972, n03794056, n03832673, n03843555, n03877472, n03899768, n03930313, n03935335, n03954731, n03995372, n04004767, n04037443, n04065272, n04069434, n04090263, n04118538, n04120489, n04141975, n04152593, n04154565, n04204347, n04208210, n04209133, n04258138, n04311004, n04326547, n04367480, n04447861, n04483307, n04522168, n04548280, n04554684, n04597913, n04612504, n07695742, n07697313, n07697537, n07716906, n12998815, n13133613\nLdogs =\nn02085620, n02085782, n02085936, n02086079, n02086240, n02086646, n02086910, n02087046, n02087394, n02088094, n02088238, n02088364, n02088466, n02088632, n02089078, n02089867, n02089973, n02090379, n02090622, n02090721, n02091032, n02091134, n02091244, n02091467, n02091635, n02091831, n02092002, n02092339, n02093256, n02093428, n02093647, n02093754, n02093859, n02093991, n02094114, n02094258, n02094433, n02095314, n02095570, n02095889, n02096051, n02096177, n02096294, n02096437, n02096585, n02097047, n02097130, n02097209, n02097298, n02097474, n02097658, n02098105, n02098286, n02098413, n02099267, n02099429, n02099601, n02099712, n02099849, n02100236, n02100583, n02100735, n02100877, n02101006, n02101388, n02101556, n02102040, n02102177, n02102318, n02102480, n02102973, n02104029, n02104365, n02105056, n02105162, n02105251, n02105412, n02105505, n02105641, n02105855, n02106030, n02106166, n02106382, n02106550, n02106662, n02107142, n02107312, n02107574, n02107683, n02107908, n02108000, n02108089, n02108422, n02108551, n02108915, n02109047, n02109525, n02109961, n02110063, n02110185, n02110341, n02110627, n02110806, n02110958, n02111129, n02111277, n02111500, n02111889, n02112018, n02112137, n02112350, n02112706, n02113023, n02113186, n02113624, n02113712, n02113799, n02113978"}, {"heading": "C PTB Class Splits", "text": "Here we define the two class splits used in our PTB experiments \u2013 these classes were excluded for training during our one-shot language experiments described in section 4.1.3.\nLrand =\n\u2019s, 12-year, 190.58-point, 1930s, 26-week, a.c., abortion, absorbed, accelerating, acceptable, accords, accusations, achieve, acquires, actively, adapted, addition, adequate, admitting, adopt, adopted, adopting, advised, advisers, advises, advising, aer, affidavits, afternoon, ag, aged, ages, agreements, airport, akzo, alaska, alcohol, alert, alliance, allied-signal, ally, altman, ambrosiano, american, amgen, amount, amounts, an, andy, angry, animals, annuities, antitrust, anybody, anyway, appointed, approaching, approvals, arabs, arafat, arbitration, argentina, arranged, arrest, artists, assembled, associations, assume, assumptions, atoms, attitudes, audio, authorities, authority, away, balls, bally, banknote, banks, banning, barely, barred, barriers, bass, battery, baum, bears, bell, belt, best, best-known, billion, binge, blamed, blanket, bloc, block, blocking, boat, bodies, boesel, bolstered, bonuses, boston, bowed, boys, bozell, bradstreet, brains, breakers, breaks, briefly, brink, brisk, broad-based, broken, bronx, brother, bsn, built, buried, burmah, burned, bursts, bush, businessland, businessman, buys, calculate, calculated, caltrans, campbell, candlestick, capitalism, captured, careers, carpeting, carried, carry-forward, casting, castle, catholic, caught, ceiling, cells, centuries, chair, chairs, challenged, chances, chandler, characters, charts, cheating, checks, cherry, chiron, cie, cie., cincinnati, circuit, civic, clara, classroom, cleanair, climate, closer, cms, cnw, coast, coats, cocom, cold, collected, comes, commercial, commerzbank, commissioned, committed, commute, complains, completing, computer, confirm, confiscated, confronted, conn, conn., consisting, consortium, constitute, consultant, consumer, consumers, contemporary, contra, contraceptive, contributing, convinced, cost-cutting, count, counterparts, counties, courses, cover, cracks, craft, crane, create, creating, crossing, crumbling, crusade, crusaders, cubic, curtail, curve, cushion, cut, cynthia, dairy, dam, david, davis, day, deal, dealerships, debentures, debut, deceptive, decided, decision, decisions, deck, defended, defenders, defenses, definitely, delivering, della, demonstrated, department, departure, depress, designated, desk, desktop, detailing, devaluation, develops, devoe, di, dialogue, dictator, die, diesel, differ, digs, diluted, diminished, direct-mail, disappointing, discount, discrepancies, discuss, disease, disney, disruption, distributed, distributor, dive, diversified, divided, dividends, dodge, doing, domestic, dominant, domination, double-a, downgraded, downgrading, downtown, drives, drought, drunk, dunkin, earn, earthquakes, edisto, editions, educate, eggs, elaborate, elite, embarrassing, emerges, emerging, emigration, employers, empty, enactment, encourages, endorsement, enemies, engelken, enhanced, entertaining, enthusiastic, epicenter, equipped, era, erosion, esselte, est, ethical, ethiopia, eurodollar, events, everyone, exchanges, exciting, exclusively, executed, executing, executive, executives, exempt, expertise, explicit, explosion, expressed, expression, extending, extraordinary, faculty, failed, failure, fallout, faltered, fanfare, fare, farm, fast-growing, fasteners, fastest, fax, fazio, february, federated, fee, field, fifth, fighting, filipino, film, final, financiers, finished, finland, firmed, fiscal, fits, fitzwater, five-cent, fixed-income, fla, flamboyant, fleets, fleming, fletcher, flight, flights, flowers, focus, folk, following, foot, forecasting, found, fox, fray, freeway, freeways, freeze, frequency, freshman, fromstein, frustrating, fur, galileo, game, gandhi, garbage, gathered, gave, gear, gene, generale, genuine, gerard, giant, girl, gloomy, goes, golden, goodman, gov., governing, government-owned, governor, grave, greenhouse, gridlock, grim, guerrilla, guild, gun, h&r, half-hour, handicapped, handy, hanging, happening, happy, harold, haunts, headed, heating, heavier, heavily, hedges, heights, heller, helping, helps, hepatitis, hess, high-definition, high-technology, hiring, hoffman, hold, hole, homeless, honduras, hooker, horizon, hot-dipped, houses, how, hubbard, hurricane, hydro-quebec, hyman, idaho, ill, illness, illustrated, immune, impeachment, implicit, impose, impression, impressive, increase, incredible, incurred, indexing, indiana, indicates, indications, influences, influx, inherent, inquiry, intensive, intentions, internationally, involves, irish, ironically, isler, itel, itt, j., jackson, jaguar, jazz, jefferson, jittery, jolted, july, jump, jury, justifies, karen, kean, keating, kent, kgb, khan, killing, knocked, knocking, koch, l.j., labs, lasts, lately, latest, lawrence, league, lean, least, leave, legitimacy, lehman, leisure, lend, leo, life, lighter, lights, linda, line, literature, live, living, longstanding, looking, looks, loral, lord, lose, lotus, louisville, lower, ltd., luis, lumpur, made, madrid, malcolm, male, manage, management, manic, manville, marcos, marked, market-makers, market-share, markets, mary, mass-market, mayor, mccormick, mcdonald, md., measured, member, members, memorandum, merabank, mercury, merely, merged, mergers, message, mich., mile, millions, mining, ministers, ministry, minorities, minutes, missile, mission, mitterrand, modified, monitor, months, moody, moore, mothers, motorola, movie, mr., much, multibillion-dollar, multiples, mundane, municipalities, muscle, mutual, mutual-fund, named, names, namibia, nashua, nathan, ncr, near-term, nec, necessary, necessity, negligence, negotiating, negotiation, nervousness, newcomers, newspaper, nice, noise, northrop, norton, nose, nothing, noticed, notification, notified, notwithstanding, november, nurses, nutritional, observed, oddly, off, offerings, official, oh, oklahoma, oldest, olympic, ones, opening, opera, optical, optimistic, or, original, orthodox, ortiz, ousted, outfit, outlook, outside, oversees, owen, oy, pachinko, packaged, painted, park, parker, part, particular, partly, patrick, patterson, payable, pc, peace, peaked, peddling, pegged, pepsico, perception, perfect, perfectly, pfizer, pharmaceutical, phelan, philippine, philippines, phony, photographic, physicians, picking, pigs, pittsburgh, place, plagued, plan, planes, planet, pleasure, poles, pool, portable, portfolio, ports, post-crash, pound, poured, poverty, precedent, preclude, pregnant, prescribed, presents, pretty, priced, privileges, procurement, products, profit-taking, projections, prominent, promise, promotional, prompted, proper, proponents,\npropose, prosecuted, protein, prototype, prove, proved, published, publisher, pull, pulled, pumped, pumping, pushing, quebec, quickview, quist, quite, radical, radio, rain, ranging, rank, rebates, rebel, rebound, rebuild, recent, recital, recognizes, recognizing, recorded, recorders, reduce, reduced, refinery, refrigerators, registered, regret, reinvest, rejected, rejecting, rejection, relations, relatively, relying, remark, remics, reorganization, repaired, repeatedly, reports, represent, repurchase, resembles, reserved, resisted, resolved, resort, rest, restraints, restrictions, restructured, restructuring, result, rican, right, ring, rise, robbed, robinson, robots, robust, roh, role, rolled, rose, rothschild, rough, royal, ruled, rushing, s.c, sale, salesmen, salespeople, salmonella, salvage, saul, says, scheduled, school, schwarz, seagram, second, sector, securities, seek, segment, seismic, seldom, selected, semel, sending, sentences, sentencing, session, settlement, seventh, shed, shell, sheraton, shifting, shocks, short, showed, shy, sigh, sights, signals, sir, site, sites, sitting, skinner, slashed, snapped, so-called, soldiers, solely, solo, somehow, sotheby, speak, specialist, specialize, specializing, specifically, specifications, speculate, speculated, spencer, sperry, spreading, spur, stake, standardized, standing, statistics, steady, stemmed, stern, stevens, stock-index, stockholm, straight, strategists, stream, strength, stress-related, strict, subscriber, suggestions, surplus, surprise, surprises, surrounding, syrian, taiwanese, tall, tap, tapped, task, taxation, taxed, tci, technicians, televised, temptation, testing, texans, theatre, third, this, thomas, those, thoughts, thriving, tickets, ties, tiger, tighter, tire, tisch, together, torontobased, toshiba, towers, toxin, traditional, trains, transit, trap, treated, trecker, tribune, trigger, triggering, trillion, tube, tune, turn, turnaround, typically, u.k., u.n., uncertain, underlying, underwear, underwrite, underwriter, underwriting, undo, unfortunately, unidentified, unilab, unisys, unit, unknown, unlawful, unless, unused, upheld, upon, upside, urge, usia, uv-b, valid, van, vendors, very, victim, vienna, violations, virginia, vision, visit, voluntary, w., wade, wait, wanting, ward, warner, wars, wary, wash., wealthy, wednesday, when-issued, whether, white-collar, wholly, widening, will, willingness, wilmington, win, winnebago, winners, wish, wolf, words, work, working, worse, would, yard, yards, yearly, yielding, youth, z, zones"}], "references": [{"title": "Locally weighted learning", "author": ["C Atkeson", "A Moore", "S Schaal"], "venue": "Artificial Intelligence Review", "citeRegEx": "1", "shortCiteRegEx": null, "year": 1997}, {"title": "Neural machine translation by jointly learning to align and translate", "author": ["D Bahdanau", "K Cho", "Y Bengio"], "venue": "ICLR", "citeRegEx": "2", "shortCiteRegEx": null, "year": 2014}, {"title": "Decaf: A deep convolutional activation feature for generic visual recognition", "author": ["J Donahue", "Y Jia", "O Vinyals", "J Hoffman", "N Zhang", "E Tzeng", "T Darrell"], "venue": "ICML", "citeRegEx": "3", "shortCiteRegEx": null, "year": 2014}, {"title": "Neural turing machines", "author": ["A Graves", "G Wayne", "I Danihelka"], "venue": "arXiv preprint arXiv:1410.5401", "citeRegEx": "4", "shortCiteRegEx": null, "year": 2014}, {"title": "Teaching machines to read and comprehend", "author": ["K Hermann", "T Kocisky", "E Grefenstette", "L Espeholt", "W Kay", "M Suleyman", "P Blunsom"], "venue": "NIPS", "citeRegEx": "5", "shortCiteRegEx": null, "year": 2015}, {"title": "The goldilocks principle: Reading children\u2019s books with explicit memory representations", "author": ["F Hill", "A Bordes", "S Chopra", "J Weston"], "venue": "arXiv preprint arXiv:1511.02301", "citeRegEx": "6", "shortCiteRegEx": null, "year": 2015}, {"title": "Deep neural networks for acoustic modeling in speech recognition: The shared views of four research groups", "author": ["G Hinton"], "venue": "Signal Processing Magazine,", "citeRegEx": "7", "shortCiteRegEx": "7", "year": 2012}, {"title": "Long short-term memory", "author": ["S Hochreiter", "J Schmidhuber"], "venue": "Neural computation", "citeRegEx": "8", "shortCiteRegEx": null, "year": 1997}, {"title": "Deep metric learning using triplet network", "author": ["E Hoffer", "N Ailon"], "venue": "Similarity-Based Pattern Recognition", "citeRegEx": "9", "shortCiteRegEx": null, "year": 2015}, {"title": "Batch normalization: Accelerating deep network training by reducing internal covariate shift", "author": ["S Ioffe", "C Szegedy"], "venue": "arXiv preprint arXiv:1502.03167", "citeRegEx": "10", "shortCiteRegEx": null, "year": 2015}, {"title": "Siamese neural networks for one-shot image recognition", "author": ["G Koch", "R Zemel", "R Salakhutdinov"], "venue": "ICML Deep Learning workshop", "citeRegEx": "11", "shortCiteRegEx": null, "year": 2015}, {"title": "Convolutional deep belief networks on cifar-10", "author": ["A Krizhevsky", "G Hinton"], "venue": "Unpublished", "citeRegEx": "12", "shortCiteRegEx": null, "year": 2010}, {"title": "Imagenet classification with deep convolutional neural networks", "author": ["A Krizhevsky", "I Sutskever", "G Hinton"], "venue": "NIPS", "citeRegEx": "13", "shortCiteRegEx": null, "year": 2012}, {"title": "One shot learning of simple visual concepts", "author": ["BM Lake", "R Salakhutdinov", "J Gross", "J Tenenbaum"], "venue": "CogSci", "citeRegEx": "14", "shortCiteRegEx": null, "year": 2011}, {"title": "Building a large annotated corpus of english: The penn treebank", "author": ["MP Marcus", "MA Marcinkiewicz", "B Santorini"], "venue": "Computational linguistics", "citeRegEx": "15", "shortCiteRegEx": null, "year": 1993}, {"title": "Recurrent neural network based language model", "author": ["T Mikolov", "M Karafi\u00e1t", "L Burget", "J Cernock\u1ef3", "S Khudanpur"], "venue": "INTERSPEECH", "citeRegEx": "16", "shortCiteRegEx": null, "year": 2010}, {"title": "Zero-shot learning by convex combination of semantic embeddings", "author": ["M Norouzi", "T Mikolov", "S Bengio", "Y Singer", "J Shlens", "A Frome", "G Corrado", "J Dean"], "venue": "arXiv preprint arXiv:1312.5650", "citeRegEx": "17", "shortCiteRegEx": null, "year": 2013}, {"title": "Neighbourhood component analysis", "author": ["S Roweis", "G Hinton", "R Salakhutdinov"], "venue": "NIPS", "citeRegEx": "18", "shortCiteRegEx": null, "year": 2004}, {"title": "ImageNet Large Scale Visual Recognition Challenge", "author": ["O Russakovsky", "J Deng", "H Su", "J Krause", "S Satheesh", "S Ma", "Z Huang", "A Karpathy", "A Khosla", "M Bernstein", "A Berg", "L Fei-Fei"], "venue": "IJCV", "citeRegEx": "19", "shortCiteRegEx": null, "year": 2015}, {"title": "Learning a nonlinear embedding by preserving class neighbourhood structure", "author": ["R Salakhutdinov", "G Hinton"], "venue": "AISTATS", "citeRegEx": "20", "shortCiteRegEx": null, "year": 2007}, {"title": "Meta-learning with memory-augmented neural networks", "author": ["A Santoro", "S Bartunov", "M Botvinick", "D Wierstra", "T Lillicrap"], "venue": "ICML", "citeRegEx": "21", "shortCiteRegEx": null, "year": 2016}, {"title": "Very deep convolutional networks for large-scale image recognition", "author": ["K Simonyan", "A Zisserman"], "venue": "arXiv preprint arXiv:1409.1556", "citeRegEx": "22", "shortCiteRegEx": null, "year": 2014}, {"title": "Sequence to sequence learning with neural networks", "author": ["I Sutskever", "O Vinyals", "QV Le"], "venue": "NIPS", "citeRegEx": "23", "shortCiteRegEx": null, "year": 2014}, {"title": "Going deeper with convolutions", "author": ["C Szegedy", "W Liu", "Y Jia", "P Sermanet", "S Reed", "D Anguelov", "D Erhan", "V Vanhoucke", "A Rabinovich"], "venue": "CVPR", "citeRegEx": "24", "shortCiteRegEx": null, "year": 2015}, {"title": "Rethinking the inception architecture for computer vision", "author": ["C Szegedy", "V Vanhoucke", "S Ioffe", "J Shlens", "Z Wojna"], "venue": "arXiv preprint arXiv:1512.00567", "citeRegEx": "25", "shortCiteRegEx": null, "year": 2015}, {"title": "Order matters: Sequence to sequence for sets", "author": ["O Vinyals", "S Bengio", "M Kudlur"], "venue": "arXiv preprint arXiv:1511.06391", "citeRegEx": "26", "shortCiteRegEx": null, "year": 2015}, {"title": "Pointer networks", "author": ["O Vinyals", "M Fortunato", "N Jaitly"], "venue": "NIPS", "citeRegEx": "27", "shortCiteRegEx": null, "year": 2015}, {"title": "Distance metric learning for large margin nearest neighbor classification", "author": ["K Weinberger", "L Saul"], "venue": "JMLR", "citeRegEx": "28", "shortCiteRegEx": null, "year": 2009}, {"title": "Memory networks", "author": ["J Weston", "S Chopra", "A Bordes"], "venue": "ICLR", "citeRegEx": "29", "shortCiteRegEx": null, "year": 2014}, {"title": "Recurrent neural network regularization", "author": ["W Zaremba", "I Sutskever", "O Vinyals"], "venue": "arXiv preprint arXiv:1409.2329", "citeRegEx": "30", "shortCiteRegEx": null, "year": 2014}], "referenceMentions": [{"referenceID": 6, "context": "Deep learning has made major advances in areas such as speech [7], vision [13] and language [16], but is notorious for requiring large datasets.", "startOffset": 62, "endOffset": 65}, {"referenceID": 12, "context": "Deep learning has made major advances in areas such as speech [7], vision [13] and language [16], but is notorious for requiring large datasets.", "startOffset": 74, "endOffset": 78}, {"referenceID": 15, "context": "Deep learning has made major advances in areas such as speech [7], vision [13] and language [16], but is notorious for requiring large datasets.", "startOffset": 92, "endOffset": 96}, {"referenceID": 0, "context": ", nearest neighbors) do not require any training but performance depends on the chosen metric [1].", "startOffset": 94, "endOffset": 97}, {"referenceID": 17, "context": "Previous work on metric learning in non-parametric setups [18] has been influential on our model, and we aim to incorporate the best characteristics from both parametric and non-parametric models \u2013 namely, rapid acquisition of new examples while providing excellent generalisation from common examples.", "startOffset": 58, "endOffset": 62}, {"referenceID": 1, "context": "We draw inspiration from models such as sequence to sequence (seq2seq) with attention [2], memory networks [29] and pointer networks [27].", "startOffset": 86, "endOffset": 89}, {"referenceID": 28, "context": "We draw inspiration from models such as sequence to sequence (seq2seq) with attention [2], memory networks [29] and pointer networks [27].", "startOffset": 107, "endOffset": 111}, {"referenceID": 26, "context": "We draw inspiration from models such as sequence to sequence (seq2seq) with attention [2], memory networks [29] and pointer networks [27].", "startOffset": 133, "endOffset": 137}, {"referenceID": 25, "context": "More generally, these architectures model P (B|A) where A and/or B can be a sequence (like in seq2seq models), or, more interestingly for us, a set [26].", "startOffset": 148, "endOffset": 152}, {"referenceID": 25, "context": "Our contribution is to cast the problem of one-shot learning within the set-to-set framework [26].", "startOffset": 93, "endOffset": 97}, {"referenceID": 1, "context": "However, unlike other attentional memory mechanisms [2], (1) is non-parametric in nature: as the support set size grows, so does the memory used.", "startOffset": 52, "endOffset": 55}, {"referenceID": 21, "context": "In our experiments we shall see examples where f and g are parameterised variously as deep convolutional networks for image tasks (as in VGG[22] or Inception[24]) or a simple form word embedding for language tasks (see Section 4).", "startOffset": 140, "endOffset": 144}, {"referenceID": 23, "context": "In our experiments we shall see examples where f and g are parameterised variously as deep convolutional networks for image tasks (as in VGG[22] or Inception[24]) or a simple form word embedding for language tasks (see Section 4).", "startOffset": 157, "endOffset": 161}, {"referenceID": 17, "context": "This kind of loss is also related to methods such as Neighborhood Component Analysis (NCA) [18], triplet loss [9] or large margin nearest neighbor [28].", "startOffset": 91, "endOffset": 95}, {"referenceID": 8, "context": "This kind of loss is also related to methods such as Neighborhood Component Analysis (NCA) [18], triplet loss [9] or large margin nearest neighbor [28].", "startOffset": 110, "endOffset": 113}, {"referenceID": 27, "context": "This kind of loss is also related to methods such as Neighborhood Component Analysis (NCA) [18], triplet loss [9] or large margin nearest neighbor [28].", "startOffset": 147, "endOffset": 151}, {"referenceID": 7, "context": "We use a bidirectional Long-Short Term Memory (LSTM) [8] to encode xi in the context of the support set S, considered as a sequence (see appendix for a more precise definition).", "startOffset": 53, "endOffset": 56}, {"referenceID": 7, "context": "This is most notable in the massive adoption of LSTMs [8] in a variety of tasks such as speech [7], translation [23, 2] or learning programs [4, 27].", "startOffset": 54, "endOffset": 57}, {"referenceID": 6, "context": "This is most notable in the massive adoption of LSTMs [8] in a variety of tasks such as speech [7], translation [23, 2] or learning programs [4, 27].", "startOffset": 95, "endOffset": 98}, {"referenceID": 22, "context": "This is most notable in the massive adoption of LSTMs [8] in a variety of tasks such as speech [7], translation [23, 2] or learning programs [4, 27].", "startOffset": 112, "endOffset": 119}, {"referenceID": 1, "context": "This is most notable in the massive adoption of LSTMs [8] in a variety of tasks such as speech [7], translation [23, 2] or learning programs [4, 27].", "startOffset": 112, "endOffset": 119}, {"referenceID": 3, "context": "This is most notable in the massive adoption of LSTMs [8] in a variety of tasks such as speech [7], translation [23, 2] or learning programs [4, 27].", "startOffset": 141, "endOffset": 148}, {"referenceID": 26, "context": "This is most notable in the massive adoption of LSTMs [8] in a variety of tasks such as speech [7], translation [23, 2] or learning programs [4, 27].", "startOffset": 141, "endOffset": 148}, {"referenceID": 1, "context": "A key component which allowed for more expressive models was the introduction of \u201ccontent\u201d based attention in [2], and \u201ccomputer-like\u201d architectures such as the Neural Turing Machine [4] or Memory Networks [29].", "startOffset": 110, "endOffset": 113}, {"referenceID": 3, "context": "A key component which allowed for more expressive models was the introduction of \u201ccontent\u201d based attention in [2], and \u201ccomputer-like\u201d architectures such as the Neural Turing Machine [4] or Memory Networks [29].", "startOffset": 183, "endOffset": 186}, {"referenceID": 28, "context": "A key component which allowed for more expressive models was the introduction of \u201ccontent\u201d based attention in [2], and \u201ccomputer-like\u201d architectures such as the Neural Turing Machine [4] or Memory Networks [29].", "startOffset": 206, "endOffset": 210}, {"referenceID": 20, "context": "Our work takes the metalearning paradigm of [21], where an LSTM learnt to learn quickly from data presented sequentially, but we treat the data as a set.", "startOffset": 44, "endOffset": 48}, {"referenceID": 14, "context": "The one-shot learning task we defined on the Penn Treebank [15] relates to evaluation techniques and models presented in [6], and we discuss this in Section 4.", "startOffset": 59, "endOffset": 63}, {"referenceID": 5, "context": "The one-shot learning task we defined on the Penn Treebank [15] relates to evaluation techniques and models presented in [6], and we discuss this in Section 4.", "startOffset": 121, "endOffset": 124}, {"referenceID": 0, "context": "As discussed in Section 2, there are many links between content based attention, kernel based nearest neighbor and metric learning [1].", "startOffset": 131, "endOffset": 134}, {"referenceID": 17, "context": "(NCA) [18], and the follow up non-linear version [20].", "startOffset": 6, "endOffset": 10}, {"referenceID": 19, "context": "(NCA) [18], and the follow up non-linear version [20].", "startOffset": 49, "endOffset": 53}, {"referenceID": 10, "context": "Follow-up work in the form of deep convolutional siamese [11] networks included much more powerful non-linear mappings.", "startOffset": 57, "endOffset": 61}, {"referenceID": 27, "context": "Other losses which include the notion of a set (but use less powerful metrics) were proposed in [28].", "startOffset": 96, "endOffset": 100}, {"referenceID": 13, "context": "Lastly, the work in one-shot learning in [14] was inspirational and also provided us with the invaluable Omniglot dataset \u2013 referred to as the \u201ctranspose\u201d of MNIST.", "startOffset": 41, "endOffset": 45}, {"referenceID": 16, "context": "[17].", "startOffset": 0, "endOffset": 4}, {"referenceID": 13, "context": "We ran one-shot experiments on three data sets: two image classification sets (Omniglot [14] and ImageNet [19, ILSVRC-2012]) and one language modeling (Penn Treebank).", "startOffset": 88, "endOffset": 92}, {"referenceID": 20, "context": "For vision problems, we considered four kinds of baselines: matching on raw pixels, matching on discriminative features from a state-of-the-art classifier (Baseline Classifier), MANN [21], and our reimplementation of the Convolutional Siamese Net [11].", "startOffset": 183, "endOffset": 187}, {"referenceID": 10, "context": "For vision problems, we considered four kinds of baselines: matching on raw pixels, matching on discriminative features from a state-of-the-art classifier (Baseline Classifier), MANN [21], and our reimplementation of the Convolutional Siamese Net [11].", "startOffset": 247, "endOffset": 251}, {"referenceID": 2, "context": "We then took this network and used the features from the last layer (before the softmax) for nearest neighbour matching, a strategy commonly used in computer vision [3] which has achieved excellent results across many tasks.", "startOffset": 165, "endOffset": 168}, {"referenceID": 10, "context": "Following [11], the convolutional siamese nets were trained on a same-or-different task of the original training data set and then the last layer was used for nearest neighbour matching.", "startOffset": 10, "endOffset": 14}, {"referenceID": 20, "context": "MANN (NO CONV) [21] Cosine N 82.", "startOffset": 15, "endOffset": 19}, {"referenceID": 10, "context": "9% \u2013 \u2013 CONVOLUTIONAL SIAMESE NET [11] Cosine N 96.", "startOffset": 33, "endOffset": 37}, {"referenceID": 10, "context": "5% CONVOLUTIONAL SIAMESE NET [11] Cosine Y 97.", "startOffset": 29, "endOffset": 33}, {"referenceID": 13, "context": "Omniglot [14] consists of 1623 characters from 50 different alphabets.", "startOffset": 9, "endOffset": 13}, {"referenceID": 20, "context": "Following [21], we augmented the data set with random rotations by multiples of 90 degrees and used 1200 characters for training, and the remaining character classes for evaluation.", "startOffset": 10, "endOffset": 14}, {"referenceID": 9, "context": "We used a simple yet powerful CNN as the embedding function \u2013 consisting of a stack of modules, each of which is a 3 \u00d7 3 convolution with 64 filters followed by batch normalization [10], a Relu non-linearity and 2\u00d7 2 max-pooling.", "startOffset": 181, "endOffset": 185}, {"referenceID": 10, "context": "Like the authors in [11], we also test our method trained on Omniglot on a completely disjoint task \u2013 one-shot, 10 way MNIST classification.", "startOffset": 20, "endOffset": 24}, {"referenceID": 11, "context": "This dataset is more complex than CIFAR10 [12], but fits in memory on modern machines, making it very convenient for rapid prototyping and experimentation.", "startOffset": 42, "endOffset": 46}, {"referenceID": 24, "context": "Our baseline classifier for this data set was Inception [25] trained to classify on all classes except those in the test set of classes (for randImageNet) or those concerning dogs (for dogsImageNet).", "startOffset": 56, "endOffset": 60}, {"referenceID": 14, "context": "Sentences were taken from the Penn Treebank dataset [15].", "startOffset": 52, "endOffset": 56}, {"referenceID": 29, "context": "We compared our one-shot matching model to an oracle LSTM language model (LSTM-LM) [30] trained on all the words.", "startOffset": 83, "endOffset": 87}, {"referenceID": 4, "context": "Two related tasks are the CNN QA test of entity prediction from news articles [5], and the Children\u2019s Book Test (CBT) [6].", "startOffset": 78, "endOffset": 81}, {"referenceID": 5, "context": "Two related tasks are the CNN QA test of entity prediction from news articles [5], and the Children\u2019s Book Test (CBT) [6].", "startOffset": 118, "endOffset": 121}], "year": 2016, "abstractText": "Learning from a few examples remains a key challenge in machine learning. Despite recent advances in important domains such as vision and language, the standard supervised deep learning paradigm does not offer a satisfactory solution for learning new concepts rapidly from little data. In this work, we employ ideas from metric learning based on deep neural features and from recent advances that augment neural networks with external memories. Our framework learns a network that maps a small labelled support set and an unlabelled example to its label, obviating the need for fine-tuning to adapt to new class types. We then define one-shot learning problems on vision (using Omniglot, ImageNet) and language tasks. Our algorithm improves one-shot accuracy on ImageNet from 87.6% to 93.2% and from 88.0% to 93.8% on Omniglot compared to competing approaches. We also demonstrate the usefulness of the same model on language modeling by introducing a one-shot task on the Penn Treebank.", "creator": "LaTeX with hyperref package"}}}