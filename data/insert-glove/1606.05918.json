{"id": "1606.05918", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "19-Jun-2016", "title": "Slack and Margin Rescaling as Convex Extensions of Supermodular Functions", "abstract": "down-and-out Slack chibougamau and communiqu\u00e9s margin min rescaling are megna variants 3-bedroom of the sembilan structured output SVM. They aitch define convex edibility surrogates to task 50.94 specific demisch loss functions, which, when specialized to non - additive icelanders loss sankha functions for inaccessible multi - label exclamation problems, renqing yield extensions second-stage to 49.57 increasing x-rated set obelisks functions. syria-lebanon We demonstrate sakht in 2na this dabul paper lathbury that we may iscm use phenoms these magaliesburg concepts to define mahasweta polynomial isett time convex shea-porter extensions koehler of 98.48 arbitrary flin supermodular functions. We amboise further guoyuan show 52.19 that privatizes slack and margin rescaling can cleander be husayn interpreted awaiting as dominating oastler convex extensions schellekens over multiplicative and checkered additive autodata families, schjoldager and that fitr margin tecmo rescaling is strictly dominated nishad by slack rescaling. francie However, wornum we montagut also demonstrate flekkefjord that, while the chocho function reddish value michizane and gradient salpeter for margin rescaling can be st.thomas computed in bradie polynomial wrangel time, mdiv the harda same meirav for 8.49 slack rescaling kaliko corresponds gaushala to crape a non - supermodular maximization levanti problem.", "histories": [["v1", "Sun, 19 Jun 2016 22:17:05 GMT  (881kb,D)", "http://arxiv.org/abs/1606.05918v1", null], ["v2", "Thu, 10 Aug 2017 08:46:02 GMT  (900kb,D)", "http://arxiv.org/abs/1606.05918v2", "v2 corrects a bug in the maths of v1"]], "reviews": [], "SUBJECTS": "cs.LG cs.DM", "authors": ["matthew b blaschko"], "accepted": false, "id": "1606.05918"}, "pdf": {"name": "1606.05918.pdf", "metadata": {"source": "CRF", "title": "Slack and Margin Rescaling as Convex Extensions of Supermodular Functions", "authors": ["Matthew B. Blaschko"], "emails": ["matthew.blaschko@esat.kuleuven.be"], "sections": [{"heading": null, "text": "Slack and margin rescaling are variants of the structured output SVM. They define convex surrogates to task specific loss functions, which, when specialized to nonadditive loss functions for multi-label problems, yield extensions to increasing set functions. We demonstrate in this paper that we may use these concepts to define polynomial time convex extensions of arbitrary supermodular functions. We further show that slack and margin rescaling can be interpreted as dominating convex extensions over multiplicative and additive families, and that margin rescaling is strictly dominated by slack rescaling. However, we also demonstrate that, while the function value and gradient for margin rescaling can be computed in polynomial time, the same for slack rescaling corresponds to a non-supermodular maximization problem."}, {"heading": "1 Introduction", "text": "It is known that submodular minimization is strongly polynomial time solvable while non-submodular minimization is NP-hard even to find an O(n1\u2212\u03b5) approximation. However, NP-hardness is a worst case analysis over a set of problems. We therefore take a more refined view and seek to characterize a class of piecewise-linear convex extensions of set functions that minimizes (within a certain class) the probability of a non-integral solution to the corresponding LP relaxation when problem instances are sampled from a given distribution. We do so through the notion of a dominating convex extension, i.e. one that is closer to the convex closure at all points within the unit cube.\nIn this work, we explore analogous strategies analogous to margin and slack rescaling in structured output support vector machines [8] for set function minimization in general, and substantially advance the theory of supermodular set function minimization. In particular, we advance the theory of convex extensions of supermodular extensions by showing an explicit form for the closest convex extension to the convex closure within a specific multiplicative family (Proposition 6). We further show that this multiplicative family dominates a related polynomial time computable additive family (i.e. that the closed form extension shown previously is closer to the convex closure than any member of this additive family) (Proposition 11). Subsequently, we prove that computation of an extension operator derived from a modular upper bound on submodular functions introduced by Jegelka & Bilmes does not correspond with a supermodular maximization (Proposition 15). This in general suggests a tradeoff between the tightness of the extension and the tractability of its computation, with only margin rescaling demonstrated to be polynomial time computable despite being dominated by slack rescaling. A summary of key theoretical results is given in Table 1. We may additionally summarize key theoretical contributions through a partial ordering over (convex) extensions of set\nar X\niv :1\n60 6.\n05 91\n8v 1\n[ cs\n.L G\n] 1\n9 Ju\nfunctions considered in this paper using the notion of restricted operator inequality (Definition 5):\nS1 \u2264+ S+ \u2264G+S \u2264G C \u2264 V (1) M\u03b3 \u2264GS (2)\nin which V denotes the (non-convex) multi-linear extension due to Vondr\u00e1k [9] (Appendix B).\nRemark 1. If a fixed finite set of poly-time convex extensions does not have a total ordering, the maximum of these extensions is a poly-time convex extension that dominates them all."}, {"heading": "1.1 Related Work", "text": "Supermodular minimization (submodular maximization) has been widely studied both in the context of relaxations as well as for fully combinatorial approximation algorithms [5]. Notable contributions include the multilinear extension [9, 10] (mentioned above and in Appendix B), which, although non-convex, has been used in an approximate minimization framework.\nA large amount of work has been done on relaxations approximate energy minimization in the context of random field models with low maximal clique size [6], including roof duality [4], or by making additional assumptions on the structure of the graph such as balancedness [11].\nThe connection between the structured output SVM [8] and convex extensions of set functions seems to be due to [12]. The comparative difficulty of optimizing slack rescaling vs. margin rescaling is known, and an interesting approach to the optimization of slack rescaling via multiple margin rescaling operations can be found in [1]."}, {"heading": "2 Mathematical Preliminaries", "text": "Definition 1 (Set function). A set function ` is a mapping from the power set of a base set V to the reals:\n` : P(V ) 7\u2192 R. (3)\nWe will assume w.l.o.g. that `(\u2205) = 0 for all set functions in the sequel. Definition 2 (Extension). An extension of a set function is an operator that yields a continuous function over the p-dimensional unit cube (where p = |V |) such that the function value on each vertex x of the unit cube is equal to `(A) for A such that xi = 1 \u21d0\u21d2 i \u2208 A. Definition 3 (Submodular set function). A set function f is said to be submodular if for all A \u2286 B \u2282 V and x \u2208 V \\B,\nf(A \u222a {x})\u2212 f(A) \u2265 f(B \u222a {x})\u2212 f(B). (4)\nA set function is said to be supermodular if its negative is submodular, and a function is said to be modular if it is both submodular and supermodular. We denote the set of all submodular functions S , the set of all supermodular functions G := {g| \u2212 g \u2208 S}, and G+ := {g|g(S) \u2265 0, \u2200S \u2286 V } \u2229 G denotes the set of all non-negative supermodular functions. Additional properties of submodular functions can be found in [2].\nLemma 1. Any g \u2208 G such that g({x}) \u2265 0, \u2200x \u2208 V is an increasing function, i.e. g(A \u222a {x}) \u2265 g(A), \u2200A \u2282 V, x \u2208 V \\A.\nProof. We have that g(\u2205) = 0 and g({x}) \u2265 0, \u2200x \u2208 V by assumption. From the supermodularity of g, \u2200A \u2282 V, x \u2208 V \\A,\ng(A) + \u22650\ufe37 \ufe38\ufe38 \ufe37 g({x}) \u2264g(A \u222a {x}) + =0\ufe37 \ufe38\ufe38 \ufe37 g(A \u2229 {x}) (5)\n=\u21d2 g(A) \u2264g(A \u222a {x}) (6)\nCorollary 1. Any g \u2208 G+ is an increasing function. Definition 4 (Convex closure). The convex closure of a set function C` is defined for all x \u2208 [0, 1]|V | as\nC`(x) := min \u03b1\u2208R2|V | \u2211 A\u2286V \u03b1A`(A), s.t. \u2211 A\u2286V \u03b1A1A = x, \u2211 A\u2286V \u03b1A = 1, \u03b1A \u2265 0 \u2200A \u2286 V. (7)\nIn general, the convex closure is not polynomial time solvable, with the notable exception of the Lov\u00e1sz extension [2, 7]. Definition 5 (Restricted operator inequality). For two convex extensions A and B, we write A < B (analogously A \u2264 B) if A`(x) < B`(x) \u2200`, x \u2208 [0, 1]p. We may subscript the inequality sign with a class of set functions (e.g. B \u2264S L) if the inequality holds for all set functions in that class. Proposition 1 (Transitivity of restricted operator inequality). For two function sets A and B and three operators F, G, and H,\nF \u2264A G \u2264B H =\u21d2 F \u2264A\u2229B H. (8)\nProposition 2. B \u2264 C for all convex extensions B.\nProof. Assume that there exists some convex extension B` such that B`(x) > C`(x) for some x in the p-dimensional unit cube. If we map all A \u2286 V to vertices of the p-dimensional unit cube, and identify ` with 2p distinct points in {0, 1}p \u00d7 R, then the convex closure is the lower hull of these points taken with respect to the dimension corresponding to the function value. As each of the 2p points corresponding to the function are vertices of this lower hull, any B` that has a point greater than a corresponding point of C` is not a lower hull and cannot contain all of these vertices, which contradicts the definition of a set function extension.\nOne of the key applications of set function extensions is their application to (approximate) minimization of set functions through LP relaxations. In Proposition 3 we formalize the unsurprising but important result that dominating convex extensions result in integral solutions to LP relaxations with higher probability. For some set S \u2286 Rd, we denote int(S) := [S \u2229 {0, 1}d 6= \u2205], where we have used Iverson bracket notation on the rhs of the definition. Proposition 3. For two operators that yield convex extensions for all set functions ` \u2208 A, F \u2264A G \u2264A C, and for all distributions p : A 7\u2192 R+,\nE`\u223cp { int ( arg min\nx\u2208[0,1]|V | F`(x)\n)} \u2264 E`\u223cp { int ( arg min\nx\u2208[0,1]|V | G`(x)\n)} , (9)\nwhere arg min is defined as a map to the set of minimizers of an expression.\nProof. It is sufficient to demonstrate that( arg min\nx\u2208[0,1]|V | F`(x)\n) \u2229 {0, 1}|V | = \u2205 \u21d0= ( arg min\nx\u2208[0,1]|V | G`(x)\n) \u2229 {0, 1}|V | = \u2205. (10)\nDenote x\u2217 an (integral) optimum of arg minx\u2208[0,1]|V | C`(x), As C`(x) is total dual integral, we have that C`(x\u2217) = minA\u2286V `(A). If `(x\u2217) = G`(x\u2217) 6= minx\u2208[0,1]|V | G`(x), there must be a negative directional gradient \u2207vG`(x\u2217) for some v \u2208 R|V | pointing into the unit cube from x\u2217. From the definition of set function extensions and the fact that F \u2264A G, we have that 0 > \u2207vG`(x\u2217) \u2265 \u2207vF`(x\u2217) and therefore x\u2217 /\u2208 arg minx\u2208[0,1]|V | F`(x)."}, {"heading": "3 Slack and margin rescaling", "text": ""}, {"heading": "3.1 Slack rescaling", "text": "Definition 6 (Slack rescaling for increasing set functions [8, 12, 13]). For an increasing set function `,\nS1`(x) = max A\u2286V `(A)\n( 1\u2212 2|A|+ 2\n\u2211 i\u2208A xi\n) . (11)\nThe derivation of this extension from the related convex surrogate is shown in Appendix A. We note that the factor 2 in the above definition is an artifact of the origin of the extension as a convex surrogate. We show below that we may instead use a tighter variant in the sense that S1 \u2264+ S+, where \u2264+ denotes the inequality holds for all increasing functions. Definition 7 (A tighter slack rescaling variant for increasing set functions). For an increasing set function `,\nS+`(x) = max A\u2286V `(A)\n( 1\u2212 |A|+\n\u2211 i\u2208A xi\n) . (12)\nProposition 4. Computation of S+`(x) corresponds to a non-supermodular maximization problem for x \u2208 [0, 1]|V | and supermodular increasing `.\nThe proof is given in Appendix D. Proposition 5. Definition 7 yields a convex extension for all increasing `.\nProof. Equation (12) is convex: The r.h.s. is a maximum over linear functions of x, and is therefore convex in x.\nEquation (12) is an extension: We will use the notation set : {0, 1}|V | 7\u2192 P(V ) to denote the set associated with an indicator vector. We must have that S+`(x) = `(A) whenever x \u2208 {0, 1}|V | and set(x) = A. For set(x) = A we have that\n`(A) 1\u2212 |A|+ =|A|\ufe37 \ufe38\ufe38 \ufe37\u2211 i\u2208A xi  = `(A). (13) We now must show that when set(x) = A\n`(A) \u2265 `(B) ( 1\u2212 |B|+\n\u2211 i\u2208B xi\n) = `(B) (1\u2212 |B|+ |A \u2229B|) . (14)\nFor any B * A: \u22650\ufe37\ufe38\ufe38\ufe37 `(B) \u22640\ufe37 \ufe38\ufe38 \ufe37 (1\u2212 |B|+ |A \u2229B|) \u2264 0 \u2264 `(A), (15)\nand for any B \u2286 A \u2264`(A)\ufe37\ufe38\ufe38\ufe37 `(B) =1\ufe37 \ufe38\ufe38 \ufe37 (1\u2212 |B|+ |A \u2229B|) \u2264 `(A). (16)\nAn example of the convex extension achieved with Definition 7 applied to the set function `(\u2205) = 0, `({a}) = 0.5, `({b}) = 1.5, `({a, b}) = 4 is shown in Figure 1. We can see that Definition 7 is an instance of a general strategy for multiplicative extensions of increasing functions:\nB`(x) = max A\u2286V\n`(A) \u00b7 h\u00d7(x,A) (17)\nwhere h\u00d7 : [0, 1]|V | \u00d7 P(V ) 7\u2192 R is a function convex in x. We require h\u00d7(x,A) \u2264 `(set(x))`(A) for integral x and all A in order to ensure that `(A)h\u00d7(x,A) \u2264 `(set(x)), which is the general form of the inequality in Equation (14). This strategy is quite general if h\u00d7 can have a dependency on ` as the convex closure is recovered simply by setting h\u00d7(x,A) = C`(x) `(A) ; In Proposition 6 we will limit ourselves to h\u00d7 that have no explicit dependency on ` beyond that it is an increasing function. For increasing `, `(set(x))`(A) is bounded below by 1 for all A \u2286 set(x) and is bounded below by 0 for all A * set(x). If we additionally assume that ` \u2208 G+, these bounds remain unchanged. If we take these bounds with respect to all increasing `, or indeed all g \u2208 G+, the bounds are sharp. Proposition 6. h\u00d7(x,A) = ( 1\u2212 |A|+ \u2211 i\u2208A xi ) +\nis the largest possible convex function over the unit cube satisfying the constraints that for integral x, h\u00d7(x,A) \u2264 1 \u2200A \u2286 set(x), h\u00d7(x,A) \u2264 0 \u2200A * set(x), and h\u00d7(x, set(x)) = 1, where (\u00b7)+ = max(0, \u00b7).\nProof. Each constraint is an equality constraint or an upper bound, and the values of the function are constrained only at the vertices of the unit cube, so the maximum convex function satisfying the bounds must be the lower hull of the constraint points, that is h\u00d7(x,A) = C[A \u2286 \u00b7](x), where we have employed Iverson bracket notation in our definition of the set function to which we apply C:\nC[A \u2286 \u00b7](x) = min \u03b1\u2208R2|V | \u2211 B\u2286V \u03b1B [A \u2286 B] = min \u03b1\u2208R2|V | \u2211 B\u2287A \u03b1B (18)\ns.t. \u2211 B\u2286V \u03b1B1B = x, \u2211 B\u2286V \u03b1B = 1, \u03b1B \u2265 0 \u2200B. (19)\nFor all |V | \u2208 Z+ and A \u2286 V , we have that C[A \u2286 \u00b7](x) = 0, \u2200x \u2208 conv ( {y \u2208 {0, 1}|V || set(y) + A} ) . (20)\nFor x \u2208 conv ( {y \u2208 {0, 1}|V || set(y) \u2287 A \u2228 \u2203i \u2208 V, set(y) \u222a {i} \u2287 A} ) , we must have a linear\nfunction that interpolates between 0 at all integral points x such that set(x) + A and 1 at points such that set(x) \u2287 A. This linear function is exactly 1\u2212 |A|+ \u2211 i\u2208A xi.\nIn practice, we do not need to threshold h\u00d7 at zero (i.e. we do not need to apply the (\u00b7)+ operation above) as this is redundant with the maximization in Equation (17) being achieved by A = \u2205. Remark 2. The constraints in Proposition 6 are necessary and sufficient conditions on h for this multiplicative family to yield a convex extension for all increasing `. They are also necessary and sufficient to yield a convex extension for all g \u2208 G+.\nCorollary 2 (S+ dominates the multiplicative family of extensions). For all B that can be written as in Equation (17) and h having no oracle access to `,\nB \u2264+ S+. (21) Definition 8 (m g). For a set function g, we may construct a modular function m such that\nm({x}) = g({x}), \u2200x \u2208 V, (22) and denote this function m g.\nFor non-increasing supermodular g, we may extend the definition of slack rescaling as follows: Definition 9 (Slack rescaling for all supermodular g). Assume g \u2208 G. For a modular function m, we will denote vec(m) \u2208 R|V | the vectorization of m, and we define\nSg(x) = \u3008vec(m g), x\u3009+ max A\u2286V (g(A)\u2212m g(A))\n( 1\u2212 |A|+\n\u2211 i\u2208A xi\n) . (23)\nExamples of the convex extension achieved by Definition 9 are given in Figure 2. We now show that not only does S yield an extension for non-increasing supermodular functions, it yields a tighter extension for increasing supermodular functions: Proposition 7. S+ \u2264G+ S.\nProof. For g \u2208 G+,\nSg(x)\u2212 S+g(x) = max A\u2286V\n( \u3008vec(m g), x\u3009+ (g(A)\u2212m g(A)) ( 1\u2212 |A|+\n\u2211 i\u2208A xi\n)) (24)\n\u2212max A\u2286V g(A)\n( 1\u2212 |A|+\n\u2211 i\u2208A xi\n) .\nTo show that this difference is greater than zero, we will demonstrate that the difference of each element indexed by A \u2286 0 is greater than zero.\n\u3008vec(m g), x\u3009+ (g(A)\u2212m g(A)) ( 1\u2212 |A|+\n\u2211 i\u2208A xi\n) \u2212 g(A) ( 1\u2212 |A|+\n\u2211 i\u2208A xi\n)\n= \u2211 i\u2208V g({i})xi \u2212 \u2211 i\u2208A g({i}) 1 +\u2211 j\u2208A (xj \u2212 1)  (25) = \u2211 i\u2208V g({i})xi \u2212 \u2211 i\u2208A g({i}) + \u2211 i\u2208A (1\u2212 xi)g({i}) (26)\n+ =\u03be\u22650\ufe37 \ufe38\ufe38 \ufe37\u2211 i\u2208A \u2211 j\u2208A g({i})(1\u2212 xj)\u2212 \u2211 i\u2208A (1\u2212 xi)g({i})\n= \u2211 i\u2208V \\A g({i})xi + \u03be \u2265 0 (27)"}, {"heading": "3.2 Margin rescaling", "text": "We may similarly define the following convex extension based on margin rescaling: Definition 10 (Margin rescaling for supermodular g [8, 12, 13]).\nMg(x) := \u3008vec(m), x\u3009+ max A\u2286V g(A)\u2212m(A)\u2212 |A|+ \u2211 i\u2208A xi. (28)\nAnalogous to the development of S from S1, we have removed a factor of 2. It has been demonstrated that up to a strictly positive scale factor, margin rescaling yields an extension in the convex surrogate loss setting [12, Proposition 2]. We prove this next and in doing so show necessary and sufficient conditions on the scaling of the loss function for M to yield an extension. Proposition 8 (Proposition 2 of [12]). For every increasing function `, there exists a scalar \u03b3 > 0 such that \u03b3\u22121M(\u03b3`) is an extension of `. We will denote M\u03b3 := \u03b3\u22121M(\u03b3 \u00b7) for short.\nProof. Wlog, we may assume that `({i}) = 0, \u2200i \u2208 V . For M\u03b3 to yield an extension, we need that for all A,B \u2286 V , set(x) = A,\n\u03b3g(A) \u2265 \u03b3g(B)\u2212 |B|+ \u2211 i\u2208B xi = \u03b3g(B)\u2212 |B|+ |A \u2229B|. (29)\n\u03b3(g(A)\u2212 g(B)) + |B| \u2212 |A \u2229B| \u2265 0 (30)\n\u21d0\u21d2 \u03b3 \u2264 |B| \u2212 |A \u2229B| g(B)\u2212 g(A) \u2200(A,B) s.t. g(A) < g(B) (31)\nwhere the restriction to g(A) < g(B) is due to the fact that g(B) < g(A) reverses the direction of the inequality as we multiply both sides by 1g(B)\u2212g(A) . As g is increasing, we cannot simultaneously have that |A \u2229 B| = |B| and g(A) < g(B) so the numerator is strictly positive and the ratio is therefore strictly positive.\nProposition 9. For 0 < \u03b31 < \u03b32 both satisfying the conditions in Equation (31), M\u03b31 \u2264+ M\u03b32 .\nProof. Wlog, we will assume that g \u2208 G+ and ignore the modular transformation in Definition 10.\n0 \u2264 1 \u03b32 max A\u2286V\n( \u03b32g(A)\u2212 |A|+\n\u2211 i\u2208A xi ) \u2212 1 \u03b31 max A\u2286V ( \u03b31g(A)\u2212 |A|+ \u2211 i\u2208A xi ) (32)\n\u21d0= 0 \u2264 1 \u03b32\n( \u03b32g(A)\u2212 |A|+\n\u2211 i\u2208A xi ) \u2212 1 \u03b31 ( \u03b31g(A)\u2212 |A|+ \u2211 i\u2208A xi ) (33)\n=\n( 1\n\u03b32 \u2212 1 \u03b31 ) \ufe38 \ufe37\ufe37 \ufe38\n<0\n( \u2212|A|+\n\u2211 i\u2208A xi ) \ufe38 \ufe37\ufe37 \ufe38\n\u22640\n(34)\nWe next demonstrate that margin rescaling is dominated by slack rescaling, and the latter is therefore closer to the convex closure. Proposition 10. M\u03b3 \u2264G S, for all \u03b3 satisfying Equation (31).\nProof. For g \u2208 G+ and \u03b3 satifying Equation (31),\n0 \u2264Sg(x)\u2212M\u03b3g(x) (35)\n\u21d0= 0 \u2264 ( g(A)\u2212 g(A)|A|+ g(A)\n\u2211 i\u2208A xi\n) \u2212 ( g(A)\u2212 1\n\u03b3 |A|+ 1 \u03b3 \u2211 i\u2208A xi\n) (36)\n=\n( 1\n\u03b3 \u2212 g(A)\n) \u22650\ufe37 \ufe38\ufe38 \ufe37( |A| \u2212\n\u2211 i\u2208A xi\n) . (37)\nFrom Equation (31),\n1 \u03b3 \u2265 g(A)\u2212 g(B) |A| \u2212 |A \u2229B| \u2265 g(A) (38)\nfor some B \u2282 A. The second inequality follows as the numerator is less than or equal to g(A) as g is increasing and the denominator is at least 1. The desired result follows.\nAs in Equation (17), we may view margin rescaling as a special case of an additive strategy for computing convex extensions in which\nB`(x) = 1\n\u03b3 max A\u2286V \u03b3`(A) + h+(x,A) (39)\nwhere as in Equation (17), h+ is some convex function. We have seen from Proposition 8 that \u03b3 is necessary to guarantee that the operator yields an extension for members of this family. We again restrict ourselves to h+ that do not have access to ` except the assumption that it is an increasing function satisfying some scaling constraints that we may enforce by setting \u03b3 as a function of `. Allowing \u03b3 to depend on ` in a way that may require an exponential number of oracle accesses to ` to compute is extremely generous, but we will see in Proposition 11 that even with this degree of freedom the optimal multiplicative extension dominates all additive extensions. Proposition 11. Slack rescaling, which is the dominating member of the multiplicative family of extensions following Equation (17) (Corollary 2), dominates the family of additive extensions following Equation (39), where h+(x,A) has no oracle access to `.\nProof. For Equation (39) to yield an extension, we require that \u03b3`(A) + h+(x,A) \u2265 \u03b3`(set(x)) for integral x \u2208 [0, 1]|V |, which is satisfied for h+(x,A) \u2265 \u03b3(`(set(x))\u2212 `(A)). For increasing `, \u03b3(`(set(x))\u2212 `(A)) is bounded below by 0 for all A \u2286 set(x), and for A * set(x) we have from Equation (29) that \u03b3(`(set(x))\u2212`(A)) \u2265 \u2212|A|+| set(x)\u2229A|. These yield a set of constraints similar to those in Proposition 6 but shifted downwards by one, and without thresholding to zero. In Proposition 6 the maximal convex function satisfying the constraints had the form ( 1\u2212 |A|+ \u2211 i\u2208A xi ) +\n, and we may conclude that the optimal function for the additive family of extensions is achieved by h+(x,A) = \u2212|A|+ \u2211 i\u2208A xi.\nThis indicates that M\u03b3` with maximal \u03b3 satisfying Equation (31) (Proposition 9) is the additive convex extension closest to the convex closure of `. From Proposition 10, M\u03b3 is dominated by S+ for all \u03b3 such that M\u03b3 yields an extension."}, {"heading": "4 Conclusions", "text": "In this work, we have formally analyzed slack and margin rescaling as convex extensions of supermodular set functions. Although they were originally developed for empirical risk minimization of (increasing) functions, we show that supermodularity can be exploited to first transform a set function into an increasing function with a linear number of accesses to the loss function. We have\nshown that, while slack rescaling dominates margin rescaling in the sense that it is strictly closer to the convex closure, computation of slack rescaling for a supermodular function corresponds to a non-supermodular maximization problem. Margin rescaling, by contrast, remains tractable. We have further shown that margin and slack rescaling correspond to optimal additive and multiplicative extensions, respectively, given a computational budget of one oracle access to the loss function."}, {"heading": "Acknowledgments", "text": "This work is funded by Internal Funds KU Leuven, FP7-MC-CIG 334380, and the Research Foundation - Flanders (FWO) through project number G0A2716N."}, {"heading": "A Slack and Margin Rescaling", "text": "In this section, we show how we arrive at Definition 6 and Definition 10 from slack and margin rescaling [12, Equations (13) and (12)]. Slack and margin rescaling were introduced in the context of convex surrogate loss functions, and so the notation is defined with respect to a loss function \u2206(\u00b7, \u00b7) that compares a correct ground truth labeling y \u2208 {\u22121, 1}p with a (potentially incorrect) prediction\ny\u0303 \u2208 {\u22121, 1}p. We identify this function with a set function, where the input is the set of entries for which y and y\u0303 differ [12, Equation (6)]. The convex surrogate is defined with respect to axes gj \u00b7 yj , where g \u2208 Rp is a vector of predictions. To translate from coordinates for a convex surrogate loss function to those for an extension of a set function, we must take the mapping xj = 1\u2212gj \u00b7yj (where xj is this paper\u2019s notation). From the definition of the slack rescaling operator [12, Equation (13)]:\nmax y\u0303\u2208Y \u2206(y, y\u0303) (1 + \u3008g, y\u0303\u3009 \u2212 \u3008g, y\u3009) = max A\u2286V `(A) 1 +\u2211 i\u2208A gi =\u2212yi\ufe37\ufe38\ufe38\ufe37 y\u0303i + \u2211 j\u2208V \\A gj =yj\ufe37\ufe38\ufe38\ufe37 y\u0303j \u2212 \u2211 k\u2208V gkyk  (40)\n= max A\u2286V `(A) 1\u2212\u2211 i\u2208A (1\u2212 xi) + \u2211 j\u2208V \\A (1\u2212 xj)\u2212 \u2211 k\u2208V (1\u2212 xk)  (41)\n= max A\u2286V `(A)\n( 1\u2212 2\n\u2211 i\u2208A (1\u2212 xi) ) = max A\u2286V `(A) ( 1\u2212 2|A|+ 2 \u2211 i\u2208A xi ) .\n(42)\nThe derivation for margin rescaling is analogous."}, {"heading": "B Multi-linear Extension", "text": "The multi-linear extension is due to Vondr\u00e1k [9].\nDefinition 11 (Multi-linear extension [9]). V`(x) := \u2211 A\u2286V `(A) \u220f i\u2208A xi \u220f j\u2208V \\A (1\u2212 xj) (43)\nWe note that V does not yield a convex extension in general, which is implied by Proposition 2, the fact that V 6= C, and the following proposition: Proposition 12.\nC \u2264 V. (44)\nProof. We can see that the definition of V is an expectation over Boolean random variables of the function value of ` for the sets defined by those random variables. Consequently the multi-linear extension lies entirely within the convex hull of the points defined in the proof of Proposition 2, and the values of the multi-linear extension must therefore be pointwise greater than the values of the lower hull, which is equivalent to the convex closure."}, {"heading": "C Extensions through modular upper bounds on submodular functions", "text": "In this section, we show that a known and frequently employed modular upper bound on submodular functions [3] does in fact define a convex extension to a supermodular function, but that computation of the extension does not correspond to a supermodular maximization in general.\nDefinition 12 (Modular upper bound to a submodular function (Lemma 1 [3])). For a submodular function f and an arbitrary B \u2286 V , define the modular function\njB,f (A) := f(B) + \u2211 i\u2208A\\B (f(B \u222a {i})\u2212 f(B))\u2212 \u2211 i\u2208B\\A (f(V )\u2212 f(V \\ {i})) . (45)\nLemma 2. For all f \u2208 S and all A \u2286 V\njA,f (A) = f(A). (46)\nProof.\njA,f (A) := f(A) + =0\ufe37 \ufe38\ufe38 \ufe37\u2211 i\u2208A\\A (f(A \u222a {i})\u2212 f(A))\u2212 =0\ufe37 \ufe38\ufe38 \ufe37\u2211 i\u2208A\\A (f(V )\u2212 f(V \\ {i})) . (47)\nProposition 13. For modular m, jB,f+m(A) = jB,f (A) +m(A)\nProof. jB,f+m(A) =f(B) +m(B) + \u2211 i\u2208A\\B (f(B \u222a {i}) +m(B \u222a {i})\u2212 f(B)\u2212m(B))\n\u2212 \u2211 i\u2208B\\A (f(V ) +m(V )\u2212 f(V \\ {i})\u2212m(V \\ {i})) (48)\n=jB,f (A) + =m(B\u2229A)\ufe37 \ufe38\ufe38 \ufe37 m(B)\u2212m(B \\A) +m(A \\B) = jB,f (A) +m(A) (49)\nAs this provides an upper bound to any submodular function, we may also use it to provide a lower bound to a supermodular function by taking \u2212jB,\u2212g(\u00b7). We may now define a convex extension based on this modular lower bound.\nProposition 14. Given g \u2208 G,\nJg = max B\u2286V\nC (\u2212jB,\u2212g(\u00b7)) (50)\nis a convex extension.\nProof. Convexity is immediate as Cm is linear for any modular m.\nJg(x) = g(A) for all set(x) = A: From Lemma 2, it suffices to show that jB,f (A) \u2265 jA,f (A) = f(A) for all B \u2286 V , which is immediatly true as jB,f upper bounds f for all B. Taking the negative along with the fact that g \u2265 g\u0303 =\u21d2 Cg \u2265 Cg\u0303 yields the desired result for supermodular functions.\nProposition 15. For x \u2208 [0, 1]|V | and g \u2208 G, maxB\u2286V C (\u2212jB,\u2212g(\u00b7)) is not guaranteed to be a supermodular maximization problem.\nProof. The convex closure of a modular function is linear time computable. As we are showing the result for arbitrary g \u2208 G, the only relevant fact about \u2212g is that it is submodular. The maximization in Equation (50) is supermodular if for all f \u2208 S, \u2200A \u2286 B \u2282 V , k \u2208 V \\B,\n\u2212C ( jf,B\u222a{k}(\u00b7) ) (x) + C (jf,B(\u00b7)) (x) \u2265 \u2212C ( jf,A\u222a{k}(\u00b7) ) (x) + C (jf,A(\u00b7)) (x), (51)\nwhere we make use of the fact that C(\u2212m) = \u2212Cm for modular m. For any B C (jB,f (\u00b7)) (x) = f(B) + \u2211\ni\u2208V \\B xi (f(B \u222a {i})\u2212 f(B))\u2212 \u2211 i\u2208B (1\u2212 xi) (f(V )\u2212 f(V \\ {i})) .\n(52)\nA numerical counterexample to this corresponding to a supermodular maximization is g(A) = 0,\u2200A \u2208 P(V ) \\ {V, V \\ {a}}, g(V ) = 1, g(V \\ {a}) = 13 , and xi = 2 3 ,\u2200i. In this setting, maximizing Equation (52) w.r.t. B is neither submodular nor supermodular."}, {"heading": "D Proof of Proposition 4", "text": "Proof. To show that the optimization is not in general a supermodular maximization, we may consider the following counterexample: V = {a, b}, `(\u2205) = `({a}) = `({b}) = 0, `({a, b}) = \u03b5. For \u03b5 > 0 this is strictly supermodular. Denote\n\u02dc\u0300(A) := `(A) ( 1\u2212 |A|+\n\u2211 i\u2208A xi\n) (53)\nFor x = 0, we have that \u02dc\u0300(\u2205) = \u02dc\u0300({a}) = \u02dc\u0300({b}) = 0 and \u02dc\u0300({a, b}) = \u03b5(1\u2212 2 + 0) = \u2212\u03b5, but this indicates that ` = \u2212\u02dc\u0300and they cannot both be supermodular."}], "references": [], "referenceMentions": [], "year": 2017, "abstractText": "Slack and margin rescaling are variants of the structured output SVM. They define<lb>convex surrogates to task specific loss functions, which, when specialized to non-<lb>additive loss functions for multi-label problems, yield extensions to increasing set<lb>functions. We demonstrate in this paper that we may use these concepts to define<lb>polynomial time convex extensions of arbitrary supermodular functions. We further<lb>show that slack and margin rescaling can be interpreted as dominating convex<lb>extensions over multiplicative and additive families, and that margin rescaling is<lb>strictly dominated by slack rescaling. However, we also demonstrate that, while the<lb>function value and gradient for margin rescaling can be computed in polynomial<lb>time, the same for slack rescaling corresponds to a non-supermodular maximization<lb>problem.", "creator": "TeX"}}}