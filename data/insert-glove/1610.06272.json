{"id": "1610.06272", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "20-Oct-2016", "title": "Lexicon Integrated CNN Models with Attention for Sentiment Analysis", "abstract": "mandates With the advent estepona of frontally word embeddings, lexicons wolfberries are habsudova no surrency longer fully utilized 117.65 for barricades sentiment liji analysis although they still chabrier provide aylestone important features rosano in finnmark the traditional aminabad setting. nitpick This xai paper publications introduces a mulgan novel approach maylin to sentiment physikalische analysis doku that vellis integrates inhalable lexicon embeddings zuhl and holimont an benefices attention vassalage mechanism into Convolutional Neural Networks. Our 94.23 approach maixner performs separate 92-87 convolutions akra for benning word and lexicon embeddings and funkin provides a global free-flying view of oats the non-english-speaking document iisalmi using rubout attention. iconic Our models paska are experimented on roseneath both trans-mississippi the SemEval ' 56-1 16 Task 4 retta dataset and the Stanford kleeman Sentiment Treebank, ghori and show comparative fcfa or b\u00e9chamel better results against the existing state - of - hristo the - sensacion art systems. Our shambhala analysis shows that lexicon embeddings yanis allow j\u014di to build chemistry.com high - elliotts performing bounciness models rochlitz with much jamerson smaller taranga word saepo embeddings, 19-nation and barnea the sealevel attention mechanism gabros effectively kurmi dims baymen out unwind noisy shahrbaraz words for sentiment jairus analysis.", "histories": [["v1", "Thu, 20 Oct 2016 03:10:57 GMT  (1899kb,D)", "http://arxiv.org/abs/1610.06272v1", null], ["v2", "Tue, 22 Aug 2017 21:21:30 GMT  (2144kb,D)", "http://arxiv.org/abs/1610.06272v2", "In Proceedings of the EMNLP Workshop on Computational Approaches to Subjectivity, Sentiment and Social Media Analysis, of WASSA'17, 2017"]], "reviews": [], "SUBJECTS": "cs.CL", "authors": ["bonggun shin", "timothy lee", "jinho d choi"], "accepted": false, "id": "1610.06272"}, "pdf": {"name": "1610.06272.pdf", "metadata": {"source": "CRF", "title": "Lexicon Integrated CNN Models with Attention for Sentiment Analysis", "authors": ["Bonggun Shin", "Timothy Lee", "Jinho D. Choi"], "emails": ["bonggun.shin@emory.edu", "timothy.lee@emory.edu", "jinho.choi@emory.edu"], "sections": [{"heading": "1 Introduction", "text": "Sentiment analysis is a task of identifying sentiment polarities expressed in documents, typically positive, neutral, or negative. Although the task of sentiment analysis has been well-explored (Mullen and Collier, 2004; Pang and Lee, 2005; Wilson et al., 2005), it is still very challenging due to the complexity of extracting human emotion from raw text. The recent advance of deep learning has definitely elevated the performance of this task (Socher et al., 2013; Kim, 2014; Yin and Schu\u0308tze, 2015) although there is much more room to improve.\nIn the traditional setting where statistical models are based on sparse features, lexicons consisting of words and their sentiment scores are shown to be highly effective for sentiment analysis because\nthey provide features that may not be captured from training data (Hu and Liu, 2004; Kim and Hovy, 2004; Ding et al., 2008; Taboada et al., 2011). However, since the appearance of word embeddings, the use of lexicons is getting faded away because word embeddings are believed to capture the sentiment aspects of those words. This brought us two important questions:\n\u2022 Can lexicons be still useful for sentiment analysis when coupled with word embeddings?\n\u2022 If yes, what is the most effective way of incorporating lexicons with word embeddings?\nTo answer these questions, we first construct lexicon embeddings that are specifically designed for sentiment analysis and integrate them into the existing Convolutional Neural Network (CNN) model similar to Kim (2014). Three ways of lexicon integration to the CNN model are proposed, which show distinctive characteristics for different genres (Section 3.2). We then incorporate an efficient attention mechanism to our CNN models, which provides a global view of the document by emphasizing (or de-emphasizing) important words and lexicons (Section 3.3). Our models using lexicon embeddings are evaluated on two well-known datasets, the SemEval\u201916 dataset and the Stanford Sentiment Treebank, and show state-of-the-art results on both datasets (Section 4). To the best of our knowledge, this is the first time that lexicon embeddings are introduced for sentiment analysis.1"}, {"heading": "2 Related Work", "text": "The first attempt of sentiment analysis on text was initiated by Pang et al. (2002) who pioneered this field by using bag-of-word features. This work mostly hinged on feature engineering; since then, 1All our resources are publicly available : anonymous_url\nar X\niv :1\n61 0.\n06 27\n2v 1\n[ cs\n.C L\n] 2\n0 O\nct 2\n01 6\nmany kinds of feature learning methods had been introduced to increase the performance (Pang and Lee, 2008; Liu, 2012; Gimpel et al., 2011; Feldman, 2013; Mohammad et al., 2013b). Aside from pure machine learning approaches, lexicon based approaches had been another trend, which relied on the manual or algorithmic creation of word sentiment scores (Hu and Liu, 2004; Kim and Hovy, 2004; Ding et al., 2008; Taboada et al., 2011).\nSince the emergence of the Convolutional Neural Networks (CNN; Collobert et al. (2011)), conventional methods have become gradually obsolete because of the outstanding performance from the CNN variants. CNN based models are distinguished from earlier methods because they do not rely on laborious feature engineering. The first success of CNN in sentiment analysis was triggered by document classification research (Kim, 2014), where CNN showed state-of-the-art results in numerous document classification datasets. This success has engendered an upsurge in deep neural network research for sentiment analysis. Various modified models have been proposed in the literature. One of the famous deep learning methods that models a document is the generalized phrase proposed by Yin and Schu\u0308tze (2014), which represents a sentence using element-wise addition, multiplication, or recursive auto-encoder.\nEndeavors to capture n-gram information bore fruits with CNN, max pooling, and softmax (Collobert et al., 2011; Kim, 2014), which is regarded as the standard methods of the document classification problem these days. Kalchbrenner et al. (2014a) extended this standard CNN model with dynamic k-max pooling, which served as an input layer to another stacked convolution layer. Multichannel CNN methods (Kim, 2014; Yin and Schu\u0308tze, 2015) are another branch of CNN, where assorted embeddings are considered together when convolving the input. Unlike Kim (2014)\u2019s model that relies on a single type of embedding with different mutability characteristics of the weights of embedding layer, Yin and Schu\u0308tze (2015) incorporates diverse sort of embedding types using multichannel CNN.\nTwo notable pioneers in using lexicon for sentiment analysis are Mohammad and Kiritchenko, who usedautomatically generated scores with other manually generated sentiment lexicon scores to achieved the state-of-the-art result in SemEval2013 Twitter sentiment analysis task (Mohammad et al., 2013a; Kalchbrenner et al., 2014b). In gen-\neral domain, Liu generated a user review lexicon that showed promising result in capturing sentiment in customer product reviews (Hu and Liu, 2004).\nAttention based methods have been successful in many application domains, such as image classification (Stollenga et al., 2014), image caption generation (Xu et al., 2015), machine translation (Cho et al., 2014; Bahdanau et al., 2014; Luong et al., 2015), and question answering (Shih et al., 2016; Chen et al., 2015; Yang et al., 2016). However, in the field of sentiment analysis, the attention is applied to only aspect-based sentiment classification (Yanase et al., 2016). To the best knowledge of ours, there is no attention-based model for a general sentiment analysis task."}, {"heading": "3 Approach", "text": "The models proposed here are based on a convolutional architecture and use naive concatenation (Section 3.2.1), multichannel (Section 3.2.2), separate convolution (Section 3.2.3), and embedding attention (Section 3.3) for the integration of lexicon embeddings to CNN."}, {"heading": "3.1 Baseline", "text": "Our baseline approach is a one-layer CNN model using pre-trained word embeddings, which is a minor modification of the CNN model introduced by Kim (2014). Let s \u2208 Rn\u00d7d be a matrix representing the input document, where n is the number of words, d is the dimension of the word embeddings, and each row corresponds to the word embedding, wi \u2208 Rd, where wi indicates the i\u2019th word in the document. This document matrix s is fed into the convolutional layer and convolved by the weights c \u2208 Rl\u00d7d, where l is the length of the filter.\nThe convolutional layer can take m-number of filters of the length l. Each convolution produces a vector vc \u2208 Rn\u2212l+1, where elements in vc convey the l-gram features across the document. The max pooling layer selects the most salient features from each of the m vectors produced by the filters. As a result, the output of this max pooling layer is a vector vm \u2208 R(n\u2212l+1)\u00d7m. The selected features are passed onto the softmax layer, which is optimized for the score of each sentiment class label."}, {"heading": "3.2 Lexicon Integration", "text": "Lexicon embeddings are derived by taking scores from multiple sources of lexicon datasets. Each\nlexicon dataset consists of key-value pairs, where the key is a word and the value is a list of sentiment scores for that word (e.g., probabilities of the word in positive, neutral, and negative contexts). These scores range between \u22121 and 1, where \u22121 and 1 being the most negative and positive, respectively. However, some lexicons contain non-probabilistic scores (e.g., frequency counts of the word in sentimental contexts), which are normalized to [\u22121, 1].\nFor each word w \u2208 W , where W is the union of all words in the lexicon datasets, a lexicon embedding is constructed by concatenating all the scores among the datasets with respect to w. If w does not appear in certain datasets, 0 values are assigned in place. The resulting embedding is in the form of a vector v \u2208 Re, where e is the total number of scores across all lexicon datasets. The following subsections propose three methods for lexicon integration to the baseline CNN model (Section 3.1), which depict different characteristics depending on the peculiarities of each domain."}, {"heading": "3.2.1 Naive Concatenation", "text": "The simplest way of blending a lexicon embedding into its corresponding word embedding is to append it to the end of the word embedding (Figure 1(a)). In a formal notation, the document matrix becomes s \u2208 Rn\u00d7(d+e). The subsequent process is the same as the baseline approach."}, {"heading": "3.2.2 Multichannel", "text": "Inspired by Yin and Schu\u0308tze (2015) who integrated several kinds of word embeddings using multichannel CNN, lexicon embeddings in this approach are represented in another channel along with the word embedding channel where both channels are convolved together (Figure 1(b)). Since the dimension of lexicon embeddings is considerably smaller than that of word embeddings (i.e., d e), zeros are padded to the lexicon embeddings so their dimensions match (i.e., d = e). The identical shape of these two channels allows multichannel convolution to the input document."}, {"heading": "3.2.3 Separate Convolution", "text": "Another way of adding lexicon embeddings to the CNN model is to process a separate convolution for them (Figure 1(c)). In this case, two individual convolutions are applied to word embeddings and lexicon embeddings. The max pooled output features from each convolution are then merged together to form an input vector to the softmax layer. Formally, let lw, lx be the filter lengths for word embeddings and lexicon embeddings, respectively. Let mw and mx be the numbers of filters for word embeddings and lexicon embeddings, respectively. The resulting penultimate layer includes max pooled features from word embeddings and lexicon embeddings of size [(n\u2212 lw + 1)\u00d7mw] + [(n\u2212 lx + 1)\u00d7mx]."}, {"heading": "3.3 Embedding Attention", "text": "Section 3.2 describes how lexicon embeddings can be incorporated into the CNN model in Section 3.1. Each CNN model uses several filters with different lengths; given the filter length l, the convolution considers l-gram features. However, these l-gram features account only for local views, not the global view of the document, which is necessary for several transitional cases such as negation in sentiment analysis (Socher et al., 2012). To ameliorate this issue, we introduce the embedding attention vector (EAV), which transforms the document matrix in each embedding space into a vector. For example, the EAV in the word embedding space is calculated\nas a weighted sum of each column in the document matrix s \u2208 Rn\u00d7d, which yields a vector v \u2208 Rd. For each document, two EAVs can be derived, one from the document matrix consisting of word embeddings and the other from the one consisting of lexicon embeddings. All embeddings in the document matrix are used to create the EAV through multiple convolutions and max pooling as follows:\n1. Apply m-number of convolutions with the filter length 1 to the document matrix s \u2208 Rn\u00d7d. For lexicon embeddings, the document matrix has a dimension of Rn\u00d7e.\n2. Aggregate all convolution outputs to form an attention matrix sa \u2208 Rn\u00d7m, where n is the number of words in the document, and m is the number of filters whose length is 1.\n3. Execute max pooling for each row of the attention matrix sa, which generates the attention vector va \u2208 Rn (Figure 2(a)).\n4. Transpose the document matrix s such that sT \u2208 Rd\u00d7n, and multiply it with the attention\nvector va \u2208 Rn, which generates the embedding attention vector ve \u2208 Rd (Figure 2(b)).\nThe resulting EAVs are appended to the penultimate layer to serve as additional information for the softmax layer. For our experiments, EAVs are generated from both word and lexicon embedding spaces for all of the three lexicon integration methods in Section 3.2."}, {"heading": "4 Experiments", "text": ""}, {"heading": "4.1 Corpora", "text": ""}, {"heading": "4.1.1 SemEval-2016 Task 4", "text": "All models are evaluated on the micro-blog dataset distributed by the SemEval\u201916 Task 4a (Nakov et al., 2016). The dataset is gleaned from tweets with annotation of three sentiment classes: positive, neutral, and negative. The publicly available dataset contains only tweet IDs and their sentiment polarities; the actual tweet texts are not included in this dataset due to the copyright restrictions. Although the download script provided by SemEval\u201916 gives a way of accessing the actual texts on the web, a portion of tweets is no longer accessible. To compensate this loss, the dataset also includes tweet instances from the SemEval\u201913 task.\nTable 1 shows the statistics of the training, development, and evaluation sets (TRN/DEV/TST). The classification results are evaluated by averaging the F1-scores of positive and negative sentiments as suggested by the SemEval\u201916 Task 4a."}, {"heading": "4.1.2 Stanford Sentiment Treebank", "text": "Another dataset consisting of movie reviews from Rotten Tomatoes is used for evaluating the robustness of our models across different genres. This dataset, called the Stanford Sentiment Treebank, was originally collected by Pang and Lee (2005) and later extended by Socher et al. (2013). The sentiment annotation in this dataset is categorized into five classes: very positive, positive, neutral, negative, and very negative. Following the previous work (Kim, 2014), the results are evaluated by the conventional classification accuracy."}, {"heading": "4.2 Embedding Construction", "text": ""}, {"heading": "4.2.1 Word Embeddings", "text": "To best capture the word semantics in each genre, different corpora are used to train word embeddings for the SemEval\u201916 (S16) and the Stanford Sentiment Treebank (SST) datasets. For S16, word embeddings are trained on tweets collected by the Archive Team,2 consisting of 3.67M word types. For SST, word embeddings are trained on the Amazon Review dataset,3 containing 2.67M word types.\nAll documents are pre-tokenized by the opensource toolkit, NLP4J.4 The word embeddings are trained by the original implementation of word2vec from Google using skip-gram and negative sampling.5 No explicit hyper-parameter tuning is performed. For each genre, four sets of embeddings with different dimensions (50, 100, 200, 400) are trained to observe the impact of the embedding size on each approach."}, {"heading": "4.2.2 Lexicon Embeddings", "text": "Six types of sentiment lexicons are used to build lexicon embeddings for our experiments:\n\u2022 National Research Council Canada (NRC) Hashtag Affirmative and Negated Context Sentiment Lexicon (Kiritchenko et al., 2014).\n\u2022 NRC Hashtag Sentiment Lexicon (Mohammad et al., 2013a).\n\u2022 NRC Sentiment140 Lexicon (Kiritchenko et al., 2014).\n\u2022 Sentiment140 Lexicon (Mohammad et al., 2013a).\n\u2022 MaxDiff Twitter Sentiment Lexicon (Kiritchenko et al., 2014).\n\u2022 Bing Liu Opinion Lexicon (Hu and Liu, 2004).\n2archive.org/details/twitterstream 3snap.stanford.edu/data/web-Amazon.html 4github.com/emorynlp/nlp4j 5code.google.com/p/word2vec\nAll lexicons include sentiment scores; some lexicons contain information about the frequency of positive and negative sentiment polarity associated with each word.\nWhen creating lexicon embeddings, the narrow coverage of vocabulary in lexicons often raises missing scores. If a given word is missing in a specific lexicon, neutral scores of 0 are substituted. Table 3 shows the word type coverage of our word and lexicon embeddings for each dataset. The lexicon embeddings show relatively poor coverage; nevertheless, our experiments show that these lexicon embeddings help sentiment classification in various ways (Section 4.3)."}, {"heading": "4.3 Evaluation", "text": "Seven models are evaluated to show the effectiveness of lexicon embeddings to sentiment analysis: baseline (Section 3.1), naive concatenation (NC; Section 3.2.1), multichannel (MC; Section 3.2.2), separate convolution (SC; Section 3.2.3), and the three integration approaches with embedding attention (\u2217-EAV; Section 3.3). The comparisons of our proposed models to the previous state-of-theart approaches are outlined in Table 4.2.2. For all experiments, the fixed random seed of 1 is used to avoid performance boost from different randomness (see Section 4.4.1 for more discussions). The following configuration are used for all models:\n\u2022 Filter size = (2, 3, 4, 5) for both word and lexicon embeddings.\n\u2022 Number of filters = (64 and 9) for word and lexicon embeddings, respectively.\n\u2022 Number of filters = (50 and 20) for constructing embedding attention vectors in word and lexicon embedding spaces, respectively.\nIt is worth mentioning that the performance of our baseline models improved quite a bit when the training corpora for word embeddings and sentiment analysis were tokenized coherently. Unlike several other work, we used the identical tokenization\ntool, NLP4J, to preprocess all corpora, which gave considerable boost in performance. Comparing the baseline to SC, lexicon embeddings significantly improved accuracy for S16, about 2%, surpassing the previous state-of-the-art result achieved by Deriu et al. (2016). However, SC did not show much improvement for SST where the baseline was already performing well.\nComparing these lexicon integrated models with the ones with embedding attention vectors (\u2217-EAV), EAV did not help much for S16 but significantly improved the performance for SST, achieving the state-of-the-art result of 48.8% for a single-layer CNN model. The accuracy achieved by our best model is still 0.8% lower than the state-of-the-art result achieved by Yin and Schu\u0308tze (2015); however, considering their model uses five embedding channels and dual-layer convolutions whereas our model uses a single channel and a single-layer convolution, in other words, our model is much more compact, this is very promising. These results suggest that lexicon embeddings coupled with the embedding attention vectors allow to build robust sentiment analysis models.\nFigure 3 illustrates the robustness of our lexicon integrated models with respect to the size of word embeddings. Our baseline produces inconsistent and unstable results as different sizes of word embeddings are used. Furthermore, a larger size of word embeddings tends to significantly outperform a smaller size of word embeddings. Such tendency is reduced with the incorporation of lexicon embeddings. While the standard deviations for the accuracies achieved by the baseline using different sizes of word embeddings are 0.8491 and 1.1909 for S16 and SST, respectively, they are reduced to 0.4208 and 0.5764 respectively for lexicon integrated models. Furthermore, the accuracy achieved by the lexicon integrated model using the word embedding size 50 is higher or equal to the highest accuracy achieved by the baseline using the word embedding size 200, which implies that it is possible to build more compact models using lexicon embeddings without compromising accuracy."}, {"heading": "4.4 Analysis", "text": ""}, {"heading": "4.4.1 Randomness in Deep Learning", "text": "We observed that the usage of different random seeds when training the CNN models could change the behavior of models, sometimes by more than 1%. This is due to the randomness associated with\ndeep learning, such as the random shuffling the datasets, initialization of the weights and drop-out rate of a tensor. To reduce the impact of random seed on our result and capture the general characteristic of the model, we performed a group analysis by training each model with 10 different random seeds as shown in Figure 4."}, {"heading": "4.4.2 S16: SemEval\u201916 Task 4", "text": "For S16, the lexicon integration reduces the variances, and the introducing embedding attention vectors pushes the accuracy even higher than the models without it across different random seeds. Another notable observation of the models is that although multichannel method underperforms when fixed to one random seed as seen in Table 4.2.2, it produces a competitive output in the group analysis setting. Such low performance of the multichannel method with fixed random seed is probably attributed to the well know problem of optimization,\ntrapping in local optima."}, {"heading": "4.4.3 SST: Stanford Sentiment Treebank", "text": "The problem conditions are different for SST. Since the dataset for lexicon embeddings comes from Twitter, it shows less vocabulary coverage on SST than that of S16 as shown in the right columns of Table 3. On the contrary, the coverage of word embeddings on SST is notably high at around 98%, while only around 70% for S16 (left columns of Table 3). These conditions are well reflected in the group analysis of the model in SST. Since word embeddings themselves are sufficient enough to cover majority of words, the model variance is relatively small compared to S16. Although we hypothesized that adding a lexicon might decrease the performance of SST task because many lexicons are from tweets, our models successfully adopt exogenous features and the accuracy is increased."}, {"heading": "4.4.4 Learning Speed", "text": "Another advantage of the proposed model, PC-EAV, is that it accelerates the learning speed (Figure 6). High F1 score can be achieved in the earlier step, if lexicon information is incorporated along with EAV. This statement is general behavior because the learning curves in Figure Figure 6 are the result of averaging ten different learning attempts with different random seeds."}, {"heading": "4.4.5 Attention", "text": "EAV enabled models outperform non EAV models and we provide compelling explanatory information of the model. As observed in Figure 5 all negative words get higher weights (dart reds), while non-sentimental words such as stop words are not emphasized (greens and light blues). Our visual explanations are especially desirable for neural network based models because they provide an in-depth view on why the models perform well."}, {"heading": "5 Conclusion", "text": "This paper proposes several approaches that effectively integrate lexicon embeddings and an attention mechanism to a well-explored deep learning framework, Convolutional Neural Networks, for sentiment analysis. Our experiments show that lexicon integration can improve accuracy, stability, and efficiency of the traditional CNN model. Multiple training results with different random seeds show the generalization of the effectiveness of using lexicon embeddings and embedding attention vectors. The training curve comparison further shows another benefit of this integration for more robust learning. The attention heatmap analysis confirms that embedding attention vectors endow CNN models with explanatory features, which gives good understanding of how the CNN models work.\nMuch more future work is left. The proposed attention models are applied to each single word. However, focusing on multiple words could give more promising information. Application of the attention mechanism to multiple words at the same time is a possible direction. Majority of the lexicons in this work are from tweet dataset. More lexicon dataset from general could be used to improve the coverage of our system. We focused on a simple and yet well performing system. In order to maximize the score, ensemble of multi layer CNN models could be applied."}, {"heading": "Acknowledgments", "text": "We gratefully acknowledge the support of the University Research Committee Award, and the Infosys Research Enhancement Grant. Any contents expressed in this material are those of the authors and do not necessarily reflect the views of these awards and grants. We thank Jung-Hyun Kang for producing most of the figures."}], "references": [{"title": "Neural machine translation by jointly learning to align and translate", "author": ["Dzmitry Bahdanau", "Kyunghyun Cho", "Yoshua Bengio."], "venue": "ICLR.", "citeRegEx": "Bahdanau et al\\.,? 2014", "shortCiteRegEx": "Bahdanau et al\\.", "year": 2014}, {"title": "Abccnn: An attention based convolutional neural network for visual question answering", "author": ["Kan Chen", "Jiang Wang", "Liang-Chieh Chen", "Haoyuan Gao", "Wei Xu", "Ram Nevatia."], "venue": "arXiv preprint arXiv:1511.05960.", "citeRegEx": "Chen et al\\.,? 2015", "shortCiteRegEx": "Chen et al\\.", "year": 2015}, {"title": "Learning phrase representations using rnn encoder-decoder for statistical machine translation. EMNLP", "author": ["EAV. Schwenk", "Yoshua Bengio"], "venue": null, "citeRegEx": "Schwenk and Bengio.,? \\Q2014\\E", "shortCiteRegEx": "Schwenk and Bengio.", "year": 2014}, {"title": "Natural language processing (almost) from scratch", "author": ["Ronan Collobert", "Jason Weston", "L\u00e9on Bottou", "Michael Karlen", "Koray Kavukcuoglu", "Pavel Kuksa."], "venue": "Journal of Machine Learning Research, 12(Aug):2493\u20132537.", "citeRegEx": "Collobert et al\\.,? 2011", "shortCiteRegEx": "Collobert et al\\.", "year": 2011}, {"title": "Swisscheese at semeval-2016 task 4: Sentiment classification using an ensemble of convolutional neural networks with distant supervision", "author": ["Jan Deriu", "Maurice Gonzenbach", "Fatih Uzdilli", "Aurelien Lucchi", "Valeria De Luca", "Martin Jaggi."], "venue": "Pro-", "citeRegEx": "Deriu et al\\.,? 2016", "shortCiteRegEx": "Deriu et al\\.", "year": 2016}, {"title": "A holistic lexicon-based approach to opinion mining", "author": ["Xiaowen Ding", "Bing Liu", "Philip S Yu."], "venue": "Proceedings of the 2008 international conference on web search and data mining, pages 231\u2013240. ACM.", "citeRegEx": "Ding et al\\.,? 2008", "shortCiteRegEx": "Ding et al\\.", "year": 2008}, {"title": "Techniques and applications for sentiment analysis", "author": ["Ronen Feldman."], "venue": "Communications of the ACM, 56(4):82\u201389.", "citeRegEx": "Feldman.,? 2013", "shortCiteRegEx": "Feldman.", "year": 2013}, {"title": "Part-of-speech tagging for twitter: Annotation", "author": ["Kevin Gimpel", "Nathan Schneider", "Brendan O\u2019Connor", "Dipanjan Das", "Daniel Mills", "Jacob Eisenstein", "Michael Heilman", "Dani Yogatama", "Jeffrey Flanigan", "Noah A Smith"], "venue": null, "citeRegEx": "Gimpel et al\\.,? \\Q2011\\E", "shortCiteRegEx": "Gimpel et al\\.", "year": 2011}, {"title": "Mining and summarizing customer reviews", "author": ["Minqing Hu", "Bing Liu."], "venue": "Proceedings of the tenth ACM SIGKDD international conference on Knowledge discovery and data mining, pages 168\u2013177. ACM.", "citeRegEx": "Hu and Liu.,? 2004", "shortCiteRegEx": "Hu and Liu.", "year": 2004}, {"title": "A convolutional neural network for modelling sentences", "author": ["Nal Kalchbrenner", "Edward Grefenstette", "Phil Blunsom."], "venue": "arXiv preprint arXiv:1404.2188.", "citeRegEx": "Kalchbrenner et al\\.,? 2014a", "shortCiteRegEx": "Kalchbrenner et al\\.", "year": 2014}, {"title": "A convolutional neural network for modelling sentences", "author": ["Nal Kalchbrenner", "Edward Grefenstette", "Phil Blunsom."], "venue": "Proceedings of the 52nd Annual Meeting of the Association for Computational Linguistics (Volume 1: Long Papers), pages 655\u2013", "citeRegEx": "Kalchbrenner et al\\.,? 2014b", "shortCiteRegEx": "Kalchbrenner et al\\.", "year": 2014}, {"title": "Determining the sentiment of opinions", "author": ["Soo-Min Kim", "Eduard Hovy."], "venue": "Proceedings of the 20th international conference on Computational Linguistics, page 1367. Association for Computational Linguistics.", "citeRegEx": "Kim and Hovy.,? 2004", "shortCiteRegEx": "Kim and Hovy.", "year": 2004}, {"title": "Convolutional neural networks for sentence classification", "author": ["Yoon Kim."], "venue": "arXiv preprint arXiv:1408.5882.", "citeRegEx": "Kim.,? 2014", "shortCiteRegEx": "Kim.", "year": 2014}, {"title": "Sentiment analysis of short informal texts", "author": ["Svetlana Kiritchenko", "Xiaodan Zhu", "Saif M Mohammad."], "venue": "Journal of Artificial Intelligence Research, 50:723\u2013762.", "citeRegEx": "Kiritchenko et al\\.,? 2014", "shortCiteRegEx": "Kiritchenko et al\\.", "year": 2014}, {"title": "Distributed representations of sentences and documents", "author": ["Quoc V. Le", "Tomas Mikolov."], "venue": "Proceedings of the 31th International Conference on Machine Learning, ICML 2014, Beijing, China, 2126 June 2014, pages 1188\u20131196.", "citeRegEx": "Le and Mikolov.,? 2014", "shortCiteRegEx": "Le and Mikolov.", "year": 2014}, {"title": "Sentiment analysis and opinion mining", "author": ["Bing Liu."], "venue": "Synthesis lectures on human language technologies, 5(1):1\u2013167.", "citeRegEx": "Liu.,? 2012", "shortCiteRegEx": "Liu.", "year": 2012}, {"title": "Effective approaches to attentionbased neural machine translation", "author": ["Minh-Thang Luong", "Hieu Pham", "Christopher D Manning."], "venue": "EMNLP.", "citeRegEx": "Luong et al\\.,? 2015", "shortCiteRegEx": "Luong et al\\.", "year": 2015}, {"title": "Nrc-canada: Building the state-of-theart in sentiment analysis of tweets", "author": ["Saif Mohammad", "Svetlana Kiritchenko", "Xiaodan Zhu."], "venue": "Proceedings of the seventh international workshop on Semantic Evaluation Exercises (SemEval-2013), Atlanta,", "citeRegEx": "Mohammad et al\\.,? 2013a", "shortCiteRegEx": "Mohammad et al\\.", "year": 2013}, {"title": "Nrc-canada: Building the stateof-the-art in sentiment analysis of tweets", "author": ["Saif M Mohammad", "Svetlana Kiritchenko", "Xiaodan Zhu."], "venue": "arXiv preprint arXiv:1308.6242.", "citeRegEx": "Mohammad et al\\.,? 2013b", "shortCiteRegEx": "Mohammad et al\\.", "year": 2013}, {"title": "Sentiment analysis using support vector machines with diverse information sources", "author": ["Tony Mullen", "Nigel Collier."], "venue": "EMNLP, volume 4, pages 412\u2013 418.", "citeRegEx": "Mullen and Collier.,? 2004", "shortCiteRegEx": "Mullen and Collier.", "year": 2004}, {"title": "Semeval2016 task 4: Sentiment analysis in twitter", "author": ["Preslav Nakov", "Alan Ritter", "Sara Rosenthal", "Fabrizio Sebastiani", "Veselin Stoyanov."], "venue": "Proceedings of the 10th International Workshop on Semantic Evaluation (SemEval-2016), pages 1\u201318,", "citeRegEx": "Nakov et al\\.,? 2016", "shortCiteRegEx": "Nakov et al\\.", "year": 2016}, {"title": "Seeing stars: Exploiting class relationships for sentiment categorization with respect to rating scales", "author": ["Bo Pang", "Lillian Lee."], "venue": "Proceedings of the 43rd Annual Meeting on Association for Computational Linguistics, pages 115\u2013124. Association for", "citeRegEx": "Pang and Lee.,? 2005", "shortCiteRegEx": "Pang and Lee.", "year": 2005}, {"title": "Opinion mining and sentiment analysis", "author": ["Bo Pang", "Lillian Lee."], "venue": "Foundations and trends in information retrieval, 2(1-2):1\u2013135.", "citeRegEx": "Pang and Lee.,? 2008", "shortCiteRegEx": "Pang and Lee.", "year": 2008}, {"title": "Thumbs up?: sentiment classification using machine learning techniques", "author": ["Bo Pang", "Lillian Lee", "Shivakumar Vaithyanathan."], "venue": "Proceedings of the ACL-02 conference on Empirical methods in natural language processing-Volume 10, pages 79\u201386. Asso-", "citeRegEx": "Pang et al\\.,? 2002", "shortCiteRegEx": "Pang et al\\.", "year": 2002}, {"title": "Sensei-lif at semeval-2016 task 4: Polarity embedding fusion for robust sentiment analysis", "author": ["Mickael Rouvier", "Benoit Favre."], "venue": "Proceedings of the 10th International Workshop on Semantic Evaluation (SemEval-2016), pages 202\u2013208, San Diego,", "citeRegEx": "Rouvier and Favre.,? 2016", "shortCiteRegEx": "Rouvier and Favre.", "year": 2016}, {"title": "Where to look: Focus regions for visual question answering", "author": ["Kevin J Shih", "Saurabh Singh", "Derek Hoiem."], "venue": "CVPR.", "citeRegEx": "Shih et al\\.,? 2016", "shortCiteRegEx": "Shih et al\\.", "year": 2016}, {"title": "Semantic compositionality through recursive matrix-vector spaces", "author": ["Richard Socher", "Brody Huval", "Christopher D Manning", "Andrew Y Ng."], "venue": "Proceedings of the 2012 Joint Conference on Empirical Methods in Natural Language Processing and Com-", "citeRegEx": "Socher et al\\.,? 2012", "shortCiteRegEx": "Socher et al\\.", "year": 2012}, {"title": "Recursive deep models for semantic compositionality over a sentiment treebank", "author": ["Richard Socher", "Alex Perelygin", "Jean Y Wu", "Jason Chuang", "Christopher D Manning", "Andrew Y Ng", "Christopher Potts."], "venue": "Proceedings of the conference on", "citeRegEx": "Socher et al\\.,? 2013", "shortCiteRegEx": "Socher et al\\.", "year": 2013}, {"title": "Deep networks with internal selective attention through feedback connections", "author": ["Marijn F Stollenga", "Jonathan Masci", "Faustino Gomez", "J\u00fcrgen Schmidhuber."], "venue": "Advances in Neural Information Processing Systems, pages 3545\u20133553.", "citeRegEx": "Stollenga et al\\.,? 2014", "shortCiteRegEx": "Stollenga et al\\.", "year": 2014}, {"title": "Lexiconbased methods for sentiment analysis", "author": ["Maite Taboada", "Julian Brooke", "Milan Tofiloski", "Kimberly Voll", "Manfred Stede."], "venue": "Computational linguistics, 37(2):267\u2013307.", "citeRegEx": "Taboada et al\\.,? 2011", "shortCiteRegEx": "Taboada et al\\.", "year": 2011}, {"title": "Recognizing contextual polarity in phraselevel sentiment analysis", "author": ["Theresa Wilson", "Janyce Wiebe", "Paul Hoffmann."], "venue": "Proceedings of the conference on human language technology and empirical methods in natural language processing, pages", "citeRegEx": "Wilson et al\\.,? 2005", "shortCiteRegEx": "Wilson et al\\.", "year": 2005}, {"title": "Show, attend and tell: Neural image caption generation with visual attention", "author": ["Kelvin Xu", "Jimmy Ba", "Ryan Kiros", "Kyunghyun Cho", "Aaron Courville", "Ruslan Salakhutdinov", "Richard S Zemel", "Yoshua Bengio."], "venue": "International Conference for Ma-", "citeRegEx": "Xu et al\\.,? 2015", "shortCiteRegEx": "Xu et al\\.", "year": 2015}, {"title": "bunji at semeval-2016 task 5: Neural and syntactic models of entity-attribute relationship for aspect-based sentiment analysis", "author": ["Toshihiko Yanase", "Kohsuke Yanai", "Misa Sato", "Toshinori Miyoshi", "Yoshiki Niwa."], "venue": "Proceedings of SemEval, pages 289\u2013", "citeRegEx": "Yanase et al\\.,? 2016", "shortCiteRegEx": "Yanase et al\\.", "year": 2016}, {"title": "Stacked attention networks for image question answering", "author": ["Zichao Yang", "Xiaodong He", "Jianfeng Gao", "Li Deng", "Alex Smola."], "venue": "CVPR.", "citeRegEx": "Yang et al\\.,? 2016", "shortCiteRegEx": "Yang et al\\.", "year": 2016}, {"title": "An exploration of embeddings for generalized phrases", "author": ["Wenpeng Yin", "Hinrich Sch\u00fctze."], "venue": "ACL (Student Research Workshop), pages 41\u201347.", "citeRegEx": "Yin and Sch\u00fctze.,? 2014", "shortCiteRegEx": "Yin and Sch\u00fctze.", "year": 2014}, {"title": "Multichannel variable-size convolution for sentence classification", "author": ["Wenpeng Yin", "Hinrich Sch\u00fctze."], "venue": "Proceedings of the Nineteenth Conference on Computational Natural Language Learning, pages 204\u2013214, Beijing, China, July. Association for", "citeRegEx": "Yin and Sch\u00fctze.,? 2015", "shortCiteRegEx": "Yin and Sch\u00fctze.", "year": 2015}, {"title": "Evaluation set results of the proposed models in comparison to the state-of-the-art approaches. Deriu et al. (2016): the first place for the SemEval\u201916 task 4a using an ensemble of two CNN models. Rouvier and Favre (2016): the second place for the SemEval\u201916 task 4a using various embeddings in CNN", "author": ["Kalchbrenner"], "venue": null, "citeRegEx": "49", "shortCiteRegEx": "49", "year": 2014}], "referenceMentions": [{"referenceID": 19, "context": "Although the task of sentiment analysis has been well-explored (Mullen and Collier, 2004; Pang and Lee, 2005; Wilson et al., 2005), it is still very challenging due to the complexity of extracting human emotion from raw text.", "startOffset": 63, "endOffset": 130}, {"referenceID": 21, "context": "Although the task of sentiment analysis has been well-explored (Mullen and Collier, 2004; Pang and Lee, 2005; Wilson et al., 2005), it is still very challenging due to the complexity of extracting human emotion from raw text.", "startOffset": 63, "endOffset": 130}, {"referenceID": 30, "context": "Although the task of sentiment analysis has been well-explored (Mullen and Collier, 2004; Pang and Lee, 2005; Wilson et al., 2005), it is still very challenging due to the complexity of extracting human emotion from raw text.", "startOffset": 63, "endOffset": 130}, {"referenceID": 27, "context": "The recent advance of deep learning has definitely elevated the performance of this task (Socher et al., 2013; Kim, 2014; Yin and Sch\u00fctze, 2015) although there is much more room to improve.", "startOffset": 89, "endOffset": 144}, {"referenceID": 12, "context": "The recent advance of deep learning has definitely elevated the performance of this task (Socher et al., 2013; Kim, 2014; Yin and Sch\u00fctze, 2015) although there is much more room to improve.", "startOffset": 89, "endOffset": 144}, {"referenceID": 35, "context": "The recent advance of deep learning has definitely elevated the performance of this task (Socher et al., 2013; Kim, 2014; Yin and Sch\u00fctze, 2015) although there is much more room to improve.", "startOffset": 89, "endOffset": 144}, {"referenceID": 8, "context": "In the traditional setting where statistical models are based on sparse features, lexicons consisting of words and their sentiment scores are shown to be highly effective for sentiment analysis because they provide features that may not be captured from training data (Hu and Liu, 2004; Kim and Hovy, 2004; Ding et al., 2008; Taboada et al., 2011).", "startOffset": 268, "endOffset": 347}, {"referenceID": 11, "context": "In the traditional setting where statistical models are based on sparse features, lexicons consisting of words and their sentiment scores are shown to be highly effective for sentiment analysis because they provide features that may not be captured from training data (Hu and Liu, 2004; Kim and Hovy, 2004; Ding et al., 2008; Taboada et al., 2011).", "startOffset": 268, "endOffset": 347}, {"referenceID": 5, "context": "In the traditional setting where statistical models are based on sparse features, lexicons consisting of words and their sentiment scores are shown to be highly effective for sentiment analysis because they provide features that may not be captured from training data (Hu and Liu, 2004; Kim and Hovy, 2004; Ding et al., 2008; Taboada et al., 2011).", "startOffset": 268, "endOffset": 347}, {"referenceID": 29, "context": "In the traditional setting where statistical models are based on sparse features, lexicons consisting of words and their sentiment scores are shown to be highly effective for sentiment analysis because they provide features that may not be captured from training data (Hu and Liu, 2004; Kim and Hovy, 2004; Ding et al., 2008; Taboada et al., 2011).", "startOffset": 268, "endOffset": 347}, {"referenceID": 12, "context": "similar to Kim (2014). Three ways of lexicon integration to the CNN model are proposed, which show distinctive characteristics for different genres (Section 3.", "startOffset": 11, "endOffset": 22}, {"referenceID": 23, "context": "The first attempt of sentiment analysis on text was initiated by Pang et al. (2002) who pioneered this field by using bag-of-word features.", "startOffset": 65, "endOffset": 84}, {"referenceID": 22, "context": "many kinds of feature learning methods had been introduced to increase the performance (Pang and Lee, 2008; Liu, 2012; Gimpel et al., 2011; Feldman, 2013; Mohammad et al., 2013b).", "startOffset": 87, "endOffset": 178}, {"referenceID": 15, "context": "many kinds of feature learning methods had been introduced to increase the performance (Pang and Lee, 2008; Liu, 2012; Gimpel et al., 2011; Feldman, 2013; Mohammad et al., 2013b).", "startOffset": 87, "endOffset": 178}, {"referenceID": 7, "context": "many kinds of feature learning methods had been introduced to increase the performance (Pang and Lee, 2008; Liu, 2012; Gimpel et al., 2011; Feldman, 2013; Mohammad et al., 2013b).", "startOffset": 87, "endOffset": 178}, {"referenceID": 6, "context": "many kinds of feature learning methods had been introduced to increase the performance (Pang and Lee, 2008; Liu, 2012; Gimpel et al., 2011; Feldman, 2013; Mohammad et al., 2013b).", "startOffset": 87, "endOffset": 178}, {"referenceID": 18, "context": "many kinds of feature learning methods had been introduced to increase the performance (Pang and Lee, 2008; Liu, 2012; Gimpel et al., 2011; Feldman, 2013; Mohammad et al., 2013b).", "startOffset": 87, "endOffset": 178}, {"referenceID": 8, "context": "Aside from pure machine learning approaches, lexicon based approaches had been another trend, which relied on the manual or algorithmic creation of word sentiment scores (Hu and Liu, 2004; Kim and Hovy, 2004; Ding et al., 2008; Taboada et al., 2011).", "startOffset": 170, "endOffset": 249}, {"referenceID": 11, "context": "Aside from pure machine learning approaches, lexicon based approaches had been another trend, which relied on the manual or algorithmic creation of word sentiment scores (Hu and Liu, 2004; Kim and Hovy, 2004; Ding et al., 2008; Taboada et al., 2011).", "startOffset": 170, "endOffset": 249}, {"referenceID": 5, "context": "Aside from pure machine learning approaches, lexicon based approaches had been another trend, which relied on the manual or algorithmic creation of word sentiment scores (Hu and Liu, 2004; Kim and Hovy, 2004; Ding et al., 2008; Taboada et al., 2011).", "startOffset": 170, "endOffset": 249}, {"referenceID": 29, "context": "Aside from pure machine learning approaches, lexicon based approaches had been another trend, which relied on the manual or algorithmic creation of word sentiment scores (Hu and Liu, 2004; Kim and Hovy, 2004; Ding et al., 2008; Taboada et al., 2011).", "startOffset": 170, "endOffset": 249}, {"referenceID": 12, "context": "The first success of CNN in sentiment analysis was triggered by document classification research (Kim, 2014), where CNN showed state-of-the-art results in numerous document classification datasets.", "startOffset": 97, "endOffset": 108}, {"referenceID": 3, "context": "Since the emergence of the Convolutional Neural Networks (CNN; Collobert et al. (2011)), conventional methods have become gradually obsolete because of the outstanding performance from the CNN variants.", "startOffset": 63, "endOffset": 87}, {"referenceID": 3, "context": "Since the emergence of the Convolutional Neural Networks (CNN; Collobert et al. (2011)), conventional methods have become gradually obsolete because of the outstanding performance from the CNN variants. CNN based models are distinguished from earlier methods because they do not rely on laborious feature engineering. The first success of CNN in sentiment analysis was triggered by document classification research (Kim, 2014), where CNN showed state-of-the-art results in numerous document classification datasets. This success has engendered an upsurge in deep neural network research for sentiment analysis. Various modified models have been proposed in the literature. One of the famous deep learning methods that models a document is the generalized phrase proposed by Yin and Sch\u00fctze (2014), which represents a sentence using element-wise addition, multiplication, or recursive auto-encoder.", "startOffset": 63, "endOffset": 797}, {"referenceID": 3, "context": "Endeavors to capture n-gram information bore fruits with CNN, max pooling, and softmax (Collobert et al., 2011; Kim, 2014), which is regarded as the standard methods of the document classification problem these days.", "startOffset": 87, "endOffset": 122}, {"referenceID": 12, "context": "Endeavors to capture n-gram information bore fruits with CNN, max pooling, and softmax (Collobert et al., 2011; Kim, 2014), which is regarded as the standard methods of the document classification problem these days.", "startOffset": 87, "endOffset": 122}, {"referenceID": 3, "context": "Endeavors to capture n-gram information bore fruits with CNN, max pooling, and softmax (Collobert et al., 2011; Kim, 2014), which is regarded as the standard methods of the document classification problem these days. Kalchbrenner et al. (2014a)", "startOffset": 88, "endOffset": 245}, {"referenceID": 12, "context": "Multichannel CNN methods (Kim, 2014; Yin and Sch\u00fctze, 2015) are another branch of CNN, where assorted embeddings are considered together when convolving the input.", "startOffset": 25, "endOffset": 59}, {"referenceID": 35, "context": "Multichannel CNN methods (Kim, 2014; Yin and Sch\u00fctze, 2015) are another branch of CNN, where assorted embeddings are considered together when convolving the input.", "startOffset": 25, "endOffset": 59}, {"referenceID": 12, "context": "Multichannel CNN methods (Kim, 2014; Yin and Sch\u00fctze, 2015) are another branch of CNN, where assorted embeddings are considered together when convolving the input. Unlike Kim (2014)\u2019s model that relies on a single type of embedding with different mutability characteristics of the weights of embedding layer, Yin and Sch\u00fctze (2015) incorporates diverse sort of embedding types using multichannel CNN.", "startOffset": 26, "endOffset": 182}, {"referenceID": 12, "context": "Multichannel CNN methods (Kim, 2014; Yin and Sch\u00fctze, 2015) are another branch of CNN, where assorted embeddings are considered together when convolving the input. Unlike Kim (2014)\u2019s model that relies on a single type of embedding with different mutability characteristics of the weights of embedding layer, Yin and Sch\u00fctze (2015) incorporates diverse sort of embedding types using multichannel CNN.", "startOffset": 26, "endOffset": 332}, {"referenceID": 17, "context": "Two notable pioneers in using lexicon for sentiment analysis are Mohammad and Kiritchenko, who usedautomatically generated scores with other manually generated sentiment lexicon scores to achieved the state-of-the-art result in SemEval2013 Twitter sentiment analysis task (Mohammad et al., 2013a; Kalchbrenner et al., 2014b).", "startOffset": 272, "endOffset": 324}, {"referenceID": 10, "context": "Two notable pioneers in using lexicon for sentiment analysis are Mohammad and Kiritchenko, who usedautomatically generated scores with other manually generated sentiment lexicon scores to achieved the state-of-the-art result in SemEval2013 Twitter sentiment analysis task (Mohammad et al., 2013a; Kalchbrenner et al., 2014b).", "startOffset": 272, "endOffset": 324}, {"referenceID": 8, "context": "In general domain, Liu generated a user review lexicon that showed promising result in capturing sentiment in customer product reviews (Hu and Liu, 2004).", "startOffset": 135, "endOffset": 153}, {"referenceID": 28, "context": "Attention based methods have been successful in many application domains, such as image classification (Stollenga et al., 2014), image caption generation (Xu et al.", "startOffset": 103, "endOffset": 127}, {"referenceID": 31, "context": ", 2014), image caption generation (Xu et al., 2015), machine translation (Cho et al.", "startOffset": 34, "endOffset": 51}, {"referenceID": 0, "context": ", 2015), machine translation (Cho et al., 2014; Bahdanau et al., 2014; Luong et al., 2015), and question answering (Shih et al.", "startOffset": 29, "endOffset": 90}, {"referenceID": 16, "context": ", 2015), machine translation (Cho et al., 2014; Bahdanau et al., 2014; Luong et al., 2015), and question answering (Shih et al.", "startOffset": 29, "endOffset": 90}, {"referenceID": 25, "context": ", 2015), and question answering (Shih et al., 2016; Chen et al., 2015; Yang et al., 2016).", "startOffset": 32, "endOffset": 89}, {"referenceID": 1, "context": ", 2015), and question answering (Shih et al., 2016; Chen et al., 2015; Yang et al., 2016).", "startOffset": 32, "endOffset": 89}, {"referenceID": 33, "context": ", 2015), and question answering (Shih et al., 2016; Chen et al., 2015; Yang et al., 2016).", "startOffset": 32, "endOffset": 89}, {"referenceID": 32, "context": "However, in the field of sentiment analysis, the attention is applied to only aspect-based sentiment classification (Yanase et al., 2016).", "startOffset": 116, "endOffset": 137}, {"referenceID": 12, "context": "Our baseline approach is a one-layer CNN model using pre-trained word embeddings, which is a minor modification of the CNN model introduced by Kim (2014). Let s \u2208 Rn\u00d7d be a matrix representing the input document, where n is the number of words, d is the dimension of the word embeddings, and each row corresponds to the word embedding, wi \u2208 Rd, where wi indicates the i\u2019th word in the document.", "startOffset": 143, "endOffset": 154}, {"referenceID": 34, "context": "Inspired by Yin and Sch\u00fctze (2015) who integrated several kinds of word embeddings using multichannel CNN, lexicon embeddings in this approach are represented in another channel along with the word embedding channel where both channels are con-", "startOffset": 12, "endOffset": 35}, {"referenceID": 26, "context": "However, these l-gram features account only for local views, not the global view of the document, which is necessary for several transitional cases such as negation in sentiment analysis (Socher et al., 2012).", "startOffset": 187, "endOffset": 208}, {"referenceID": 20, "context": "All models are evaluated on the micro-blog dataset distributed by the SemEval\u201916 Task 4a (Nakov et al., 2016).", "startOffset": 89, "endOffset": 109}, {"referenceID": 12, "context": "Following the previous work (Kim, 2014), the results are evaluated by the conventional classification accuracy.", "startOffset": 28, "endOffset": 39}, {"referenceID": 20, "context": "This dataset, called the Stanford Sentiment Treebank, was originally collected by Pang and Lee (2005) and later extended by Socher et al.", "startOffset": 82, "endOffset": 102}, {"referenceID": 20, "context": "This dataset, called the Stanford Sentiment Treebank, was originally collected by Pang and Lee (2005) and later extended by Socher et al. (2013). The sentiment annotation in this dataset is categorized into five classes: very positive, positive, neutral, negative, and very negative.", "startOffset": 82, "endOffset": 145}, {"referenceID": 13, "context": "\u2022 National Research Council Canada (NRC) Hashtag Affirmative and Negated Context Sentiment Lexicon (Kiritchenko et al., 2014).", "startOffset": 99, "endOffset": 125}, {"referenceID": 17, "context": "\u2022 NRC Hashtag Sentiment Lexicon (Mohammad et al., 2013a).", "startOffset": 32, "endOffset": 56}, {"referenceID": 13, "context": "\u2022 NRC Sentiment140 Lexicon (Kiritchenko et al., 2014).", "startOffset": 27, "endOffset": 53}, {"referenceID": 17, "context": "\u2022 Sentiment140 Lexicon (Mohammad et al., 2013a).", "startOffset": 23, "endOffset": 47}, {"referenceID": 13, "context": "\u2022 MaxDiff Twitter Sentiment Lexicon (Kiritchenko et al., 2014).", "startOffset": 36, "endOffset": 62}, {"referenceID": 8, "context": "\u2022 Bing Liu Opinion Lexicon (Hu and Liu, 2004).", "startOffset": 27, "endOffset": 45}, {"referenceID": 4, "context": "Comparing the baseline to SC, lexicon embeddings significantly improved accuracy for S16, about 2%, surpassing the previous state-of-the-art result achieved by Deriu et al. (2016). However, SC did not show much improvement for SST where the baseline was already performing well.", "startOffset": 160, "endOffset": 180}, {"referenceID": 34, "context": "8% lower than the state-of-the-art result achieved by Yin and Sch\u00fctze (2015); however, considering their model uses five embedding channels and dual-layer convolutions whereas our model uses a single channel and a single-layer convolution, in other words, our model is much more compact, this is very promising.", "startOffset": 54, "endOffset": 77}], "year": 2016, "abstractText": "With the advent of word embeddings, lexicons are no longer fully utilized for sentiment analysis although they still provide important features in the traditional setting. This paper introduces a novel approach to sentiment analysis that integrates lexicon embeddings and an attention mechanism into Convolutional Neural Networks. Our approach performs separate convolutions for word and lexicon embeddings and provides a global view of the document using attention. Our models are experimented on both the SemEval\u201916 Task 4 dataset and the Stanford Sentiment Treebank, and show comparative or better results against the existing state-of-the-art systems. Our analysis shows that lexicon embeddings allow to build high-performing models with much smaller word embeddings, and the attention mechanism effectively dims out noisy words for sentiment analysis.", "creator": "TeX"}}}