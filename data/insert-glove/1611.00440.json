{"id": "1611.00440", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "2-Nov-2016", "title": "And the Winner is ...: Bayesian Twitter-based Prediction on 2016 U.S. Presidential Election", "abstract": "doyle This underdressed paper drabble describes a lieberman Naive - jindo Bayesian 1.5125 predictive leegin model insectivore for 2016 frumin U. S. ooo Presidential Election based on Twitter data. waziriya We use 33, sterol 708 pied-piping tweets gathered dlee since anns December 16, wolfgang 2015 until February saltimbocca 29, crothers 2016. elvia We maarek introduce rkk a gerbera simpler etheric data pasajero preprocessing method bobigny to label the clare data and train the brasileiras model. The 16-16 model achieves 95. 8% accuracy on launders 10 - fold cross pogy validation ezzeddin and chouteau predicts Ted kemah Cruz and 60-vote Bernie revue Sanders starkly as hobbles Republican lock-on and Democratic swilly nominee krutzler respectively. It helm achieves lemmas a n'dre comparable 12.94 result siphon to those in 2758 its istar competitor plos methods.", "histories": [["v1", "Wed, 2 Nov 2016 01:45:28 GMT  (126kb,D)", "http://arxiv.org/abs/1611.00440v1", "This is the non-final version of the paper. The final version is published in the IC3INA 2016 Conference (3-5 Oct. 2016,this http URL). All citation should be directed to the final version"]], "COMMENTS": "This is the non-final version of the paper. The final version is published in the IC3INA 2016 Conference (3-5 Oct. 2016,this http URL). All citation should be directed to the final version", "reviews": [], "SUBJECTS": "cs.IR cs.CL cs.SI", "authors": ["elvyna tunggawan", "yustinus eko soelistio"], "accepted": false, "id": "1611.00440"}, "pdf": {"name": "1611.00440.pdf", "metadata": {"source": "CRF", "title": "And the Winner is ...: Bayesian Twitter-based Prediction on 2016 U.S. Presidential Election", "authors": ["Elvyna Tunggawan"], "emails": ["thoeng.elvyna@student.umn.ac.id", "yustinus.eko@umn.ac.id"], "sections": [{"heading": null, "text": "I. INTRODUCTION\nPresidential election is an important moment for every country, including the United States. Their economic policies, which are set by the government, affect the economy of other countries [1]. On 2016 U.S. Presidential Election, Republican and Democratic candidates use Twitter as their campaign media. Previous researches have predicted the outcome of U.S. presidential election using Twitter [2], [3], [4], [5]. Some of them proved that Twitter data can complement or even predict the poll results. This follows the increasing improvement in the text mining researches [7], [8], [11], [12], [13].\nSome of the most recent studies are [4], [3], [2], [9]. Below we discuss these three recent studies and explain how our study relates to theirs. The first study is done by [4], which analyzed the sentiment on 2008 U.S. Presidential Candidates by calculating sentiment ratio using moving average. They counted the sentiment value for Obama and McCain based on number of the positive and negative words stated on each tweet. The tweets were gathered during 2008-2009, whereas the positive and negative words were acquired from OpinionFinder. They found that the comparison between sentiment on tweets and polls were complex since people might choose \u201dObama\u201d, \u201dMcCain\u201d, \u201dhave not decided\u201d, \u201dnot going to vote\u201d, or any independent candidate on the polls.\nThe second study predicted the outcome of 2012 U.S. Presidential Election polls using Naive Bayesian models [3]. They collected over 32 million tweets from September 29 until November 16, 2012. They used Tweepy and set keywords for each candidate to collect the tweets, such as mitt romney, barack obama, us election. The collected tweets passed some preprocessing stages: (1) URL, mentions, hashtags, RT, and stop words removal; (2) tokenization; and (3) additional not for negation. They analyzed 10,000 randomly selected tweets\nwhich only contain a candidate name. The analysis results were compared to Huffington Post\u2019s polls and they found that Obama\u2019s popularity on Twitter represented the polls result. This research didn\u2019t use tweets with two or more candidate names since it requires more complex preprocessing methods.\nThe third study built a system for real-time sentiment analysis on 2012 U.S. Presidential Election to show public opinion about each candidate on Twitter [2]. They collected tweets for each candidates using Gnip Power Track since October 12, 2012 and tokenized them. The tweets were labeled by around 800 turkers on Amazon Mechanical Turk (AMT). They trained a Naive Bayes Classifier using 17,000 tweets which consists of 4 classes: (1) positive; (2) negative; (3) neutral; and (4) unsure. It achieved 59% accuracy, which is the best performance achieved in the three recent studies. They visualized the sentiment on a dashboard and calculated the trending words using TF-IDF.\nAs far as we know, there is not any research about prediction on 2016 U.S. Presidential Election yet. Previous researches either set the sentiment of a tweet directly based on a subjectivity lexicon [4] or preprocessed the tweet using a complex preprocessing method [2], [3]. [3] not only removed URLs, mentions, retweets, hashtags, numbers and stop words; but also tokenized the tweets and added not on negative words. [2] tokenized the tweets and separated URLs, emoticons, phone numbers, HTML tags, mentions, hashtags, fraction or decimals, and symbol or Unicode character repetition. This research analyzes sentiment on tweets about 2016 U.S. Presidential candidates. We will build a Naive Bayesian predictive model for each candidate and compare the prediction with RealClearPolitics.com. We expect to have a correct prediction on the leading candidates for Democratic and Republican Party. We prove that using a simpler preprocessing method can still have comparable performance to the best performing recent study [2].\nWe explain our data preparation methods in the next section. It is followed by our research methodology in Section III. We present our results in Section IV, which is followed by discussion and conclusion in Section V and VI.\nar X\niv :1\n61 1.\n00 44\n0v 1\n[ cs\n.I R\n] 2\nN ov\n2 01\n6"}, {"heading": "II. DATA PREPARATION", "text": ""}, {"heading": "A. Data Collection", "text": "We gathered 371,264 tweets using Twitter Streaming API on Tweepy [3] since December 16, 2015 until February 29, 2016. We use #Election2016 as the search keyword since it is the official hashtag used during 2016 U.S. Presidential Election cycle and it covers conversations about all candidates. We separate the tweets per period, which is seven days. Figure 1 shows tweets frequency distribution, with the average of 37,126.4 tweets per period and standard deviation 27,823.82 tweets. Data collection from January 20 to January 26, 2016 are limited due to resource limitation. The data are saved as JSON files.\nEach line of the JSON files represents a tweet, which consists of 26 main attributes, such as created at, ID, text, retweet count, and lang. We only use the contents of created at and text attributes since this research focuses on the sentiment toward the candidates in a particular time, not including the geographic location and other information. The collected tweets are mainly written in English. We publish the raw and preprocessed tweets upon request for future use. The data are available for research use by email."}, {"heading": "B. Data Preprocessing", "text": "We preprocess the data by: (1) removing URLs and pictures, also (2) by filtering tweets which have candidates\u2019 name. Hashtags, mentions, and retweets are not removed in order to maintain the original meaning of a tweet. We only save tweets which have passed the two requirements such as in Table 1. The first example shows no change in the tweet\u2019s content, since there isn\u2019t any URLs or pictures, and it contains a candidate\u2019s name: Bernie Sanders. The second example shows a removed tweet, which doesn\u2019t contain any candidates\u2019 name. The preprocessing stage changes the third tweet\u2019s contents. It removes the URLs and still keeps the tweet because it contains \u201dHillary Clinton\u201d and \u201dDonald Trump\u201d. The preprocessing stage removes 41% of the data (Figure 2)."}, {"heading": "C. Data Labeling", "text": "The preprocessed tweets are labeled manually by 11 annotators who understand English. All annotators are given either\ngrade as part of their coursework or souvenirs for their work. The given label consists of the intended candidate and the sentiment. The annotators interpret the tweet and decide whom the tweet relates to. If they think the tweets does not relate to particular candidate nor understand the content, they can choose \u201dnot clear\u201d as the label. Otherwise, they can relate it to one candidate and label it as positive or negative. We divide the tweets and annotators into three groups (Table II). They label as many tweets as they can since January 24 until April 16, 2016.\nThe validity of the label is determined by means of majority rule [6]. Each tweet is distributed to three or five annotators and it is valid when there is a label which occurs the most. As the final data preparation step, we remove all \u201dnot clear\u201d labeled tweets. Figure 3 shows the distribution of tweet labels. Most tweets are related to Bernie Sanders, Donald Trump, and Hillary Clinton."}, {"heading": "III. METHODOLOGY", "text": "The presidential nominees are predicted by finding candidates with the most predicted positive sentiment. The sentiments are predicted using Bayesian model. This section\nTABLE II TWEETS DISTRIBUTION ON LABELING STAGE\nTweet Period Number of Annotators\nDecember 16,2015-January 19, 2016 5\nJanuary 27-February 2, 2016 3\nFebruary 3-9, 2016 3\nFig. 3. Sentiment Distribution by Candidates\ndescribes: (1) the model training, (2) model accuracy test, and (3) prediction accuracy test."}, {"heading": "A. Model Training", "text": "Our models are trained using Naive Bayes Classifier. We have one model representing each candidate, consequently we have 15 trained models. We use nltk.classify module on Natural Language Toolkit library on Python. We use the labeled data gathered since December 16, 2015 until February 2, 2016 as training data to our models. The rest of our labeled data will be used to evaluate the models."}, {"heading": "B. Model Accuracy Test", "text": "Our models\u2019 accuracy is tested using 10-fold cross validation. Model validation is done using scikit-learn library. The accuracy is calculated by checking the confusion matrix [14], [15] and its F1 score [16].\nOn some folds, the models predict the sentiment in extreme value (i.e. only have positive or negative outcomes). Due to these cases, we can not calculate F1 score of Chris Christie\u2019s model. The average accuracy and F1 score are 95.8% and 0.96 respectively.\nF1 score only measures how well the model works on predicting positive sentiment, so we propose a modified F1 score (\u223c F1) by reversing the formula. \u223c F1 score shows how well the model predicts negative sentiment.\n\u223c F1 = 2\u00d7 TN TN+FN \u00d7 TN TN+FP TN\nTN+FN + TN TN+FP\n(1)"}, {"heading": "C. Prediction Accuracy Test", "text": "The models use tweets gathered from February 3 until 9, 2016 as the prediction input. The prediction follows two\nsteps: (1) we calculate the positive sentiment from tweets and consider the number of positive sentiment as the likelihood of a candidate to be the nominee, and (2) we sort the candidates by number of their positive sentiment. The ranks are compared to the poll results on RealClearPolitics.com. We calculate the error rate (E) by dividing the difference of the poll rank with our predicted rank with number of candidates (ei).\nei = |Poi \u2212 Prei| (2)\nE = \u2211n i ei n\n(3)\nwhere 1 \u2264 i \u2264 n and n equals the number of candidates. Po and Pre are the poll and prediction ranks associated with RealClearPolitics.com and the model respectively."}, {"heading": "IV. RESULTS", "text": ""}, {"heading": "A. Model Accuracy Test", "text": "The models show good accuracy and F1 score (Table III). It shows that the model can predict the test data almost perfectly (95.8%) with slightly better result on positive sentiment than negative ones, which can be seen by the larger value of F1 than \u223c F1.\nThe test results do not show exact effect of training data and the model accuracy. Models with smaller number of training data (e.g. Huckabee\u2019s, Santorum\u2019s) achieve higher accuracy than models with larger number of training data (e.g. Trump\u2019s, Clinton\u2019s), while the lowest accuracy is achieved by Kasich\u2019s, which is trained with small number of training data. The undefined value of F1 and \u223c F1 scores on Christie\u2019s, Gilmore\u2019s, and Santorum\u2019s model shows extreme predictions on these models."}, {"heading": "B. Prediction Accuracy Test", "text": "We use tweets on February 3-9, 2016 as the input to our models, regarding to the specified candidate. We rank the prediction result by sorting the number of positive predictions on each candidate. On Democratic Party, Bernie Sanders leads the rank with 3,335 tweets, followed by Martin O\u2019Malley (14 tweets) and Hillary Clinton (none). The prediction ranks on Republican Party are (1) Ted Cruz (1,432 tweets), (2) Marco Rubio (1,239 tweets), (3) Rand Paul (645 tweets), (4) Rick Santorum (186 tweets), (5) John Kasich (133 tweets), (6) Carly Fiorina (88 tweets), (7) Mike Huckabee (11 tweets), and (8) Jim Gilmore (5 tweets). The other Republican candidates do not have any positive prediction, so we place them at the bottom rank.\nOur model prediction ranks from 1 to 9 and it differs from the poll\u2019s (rank 1 to 8). Before we do the comparison, we adjust the prediction ranks in order to make an equal range. We move Jeb Bush, Ben Carson, Chris Christie, and Donald Trump, who are formerly on the 9th rank, to the 8th rank. We compare the prediction ranks with the poll and calculate the error rate. Our model gets 1.33 error of 2 remaining Democratic candidates, which we consider not good. Our model performs better on predicting Republican candidates, which achieves 1.67 error of 7 remaining candidates (see Table IV and V).\nOverall prediction accuracy can be calculated by subtracting one with the average result of error rate division on each party by number of its remaining candidates. We achieve\n0.548 prediction accuracy, which is not good enough[2]. The model accuracy is mainly affected by the large error rate on Democratic candidates (1.33 from 2 candidates)."}, {"heading": "V. DISCUSSION", "text": "Using simple preprocessed data, our Naive Bayesian model successfully achieves 95.8% accuracy on 10-fold cross validation and gets 54.8% accuracy on predicting the poll result. The model predicts Ted Cruz and Bernie Sanders as the nominee of Republican and Democratic Party respectively. Based on the positive predictions, it predicts that Bernie Sanders will be elected as the 2016 U.S. President.\nAlthough it has 95.8% accuracy during the model test, the model\u2019s prediction does not represent the poll. Table III shows that model\u2019s accuracy is not dependent of its number of training data. Model with less training data (e.g. Mike Huckabee\u2019s) can perform perfectly during the model test and only misses a rank on the prediction, whereas model with more training data (e.g. Donald Trump\u2019s) can have worse performance.\nTo see how the model accuracy is affected by number of training data, we train more models for each candidate using n first tweets and use them to predict the next 4000 tweets\u2019 sentiment (see Figure 4). Bernie Sanders\u2019 and Donald Trump\u2019s models have the most consistent accuracy on predicting the sentiment. Models with less training data (e.g. Martin O\u2019Malley, Jim Gilmore, Mike Huckabee) tend to have fluctuating accuracy. The models which are trained using 1,000 first tweets have 55.85% of average accuracy and 26.49% of standard deviation, whereas the models which are trained using 33,000 first tweets have slightly different accuracy: 65.75% of average accuracy and 27.79% of standard deviation. This shows that the number of training data does not affect the overall model accuracy.\nOur model might not represent the poll, but the election is still ongoing and we do not know which candidate will become the next U.S. President. Hence, there is possibility that the predicted nominees become the next U.S. President. Otherwise, Twitter might not be used to predict the actual polls [10]."}, {"heading": "VI. CONCLUSION", "text": "We built Naive Bayesian predictive models for 2016 U.S. Presidential Election. We use the official hashtag and simple preprocessing method to prepare the data without modifying its meaning. Our model achieves 95.8% accuracy during the model test and predicts the poll with 54.8% accuracy. The model predicts that Bernie Sanders and Ted Cruz will become the nominees of Democratic and Republican Party respectively, and the election will be won by Bernie Sanders."}], "references": [{"title": "US Election Note: Economic Policy after 2012, Americas", "author": ["Stokes", "Bruce"], "venue": "Programme AMP PP,", "citeRegEx": "1", "shortCiteRegEx": "1", "year": 2012}, {"title": "The Predictive Power of Social Media: On the Predictability of U.S", "author": ["Kazem Jahanbakhsh", "Yumi Moon"], "venue": "Presidential Elections using Twitter,", "citeRegEx": "3", "shortCiteRegEx": "3", "year": 2014}, {"title": "From Tweets to Polls: Linking Text Sentiment to Public Opinion Time Series", "author": ["O\u2019Connor", "Brendan"], "venue": "International AAAI Conference on Weblogs and Social Media,", "citeRegEx": "4", "shortCiteRegEx": "4", "year": 2010}, {"title": "Predicting US Primary Elections with Twitter", "author": ["Shi", "Lei"], "venue": null, "citeRegEx": "5", "shortCiteRegEx": "5", "year": 2012}, {"title": "On the Robustness of Majority Rule", "author": ["Partha Dasgupta", "Eric Maskin"], "venue": "Journal of the European Economic Association,", "citeRegEx": "6", "shortCiteRegEx": "6", "year": 2008}, {"title": "Simple Text Mining for Sentiment Analysis of Political Figure using Naive Bayes Classifier Method", "author": ["Yustinus E. Soelistio", "Martinus R.S. Surendra"], "venue": "The Proceedings of The 7th ICTS,", "citeRegEx": "7", "shortCiteRegEx": "7", "year": 2013}, {"title": "On Using Twitter to Monitor Political Sentiment and Predict Election Results", "author": ["Adam Bermingham", "Alan F. Smeaton"], "venue": "Proceedings of the Workshop on Sentiment Analysis where AI meets Psychology (SAAIP),", "citeRegEx": "8", "shortCiteRegEx": "8", "year": 2011}, {"title": "Analyzing Twitter Sentiment of the 2016", "author": ["Chin", "Delenn"], "venue": "Presidential Candidates,", "citeRegEx": "9", "shortCiteRegEx": "9", "year": 2015}, {"title": "Limits of Electoral Predictions using Twitter", "author": ["Gayo-Avello", "Daniel"], "venue": "Proceedings of the Fifth International AAAI Conference on Weblogs and Social Media,", "citeRegEx": "10", "shortCiteRegEx": "10", "year": 2011}, {"title": "SWASH: A Naive Bayes Classifier for Tweet Sentiment Identification", "author": ["Talbot", "Ruth"], "venue": "Proceedings of the 9th International Workshop on Semantic Evaluation,", "citeRegEx": "11", "shortCiteRegEx": "11", "year": 2015}, {"title": "Citius: A Naive-Bayes Strategy for Sentiment Analysis on English Tweets", "author": ["Pablo Gamallo", "Marcos Garcia"], "venue": "Proceedings of the 8th International Workshop on Semantic Evaluation,", "citeRegEx": "12", "shortCiteRegEx": "12", "year": 2014}, {"title": "Sentiment Analysis of Political Tweets: Towards an Accurate Classifier", "author": ["Bakliwal", "Akhsat"], "venue": "Proceedings of the Workshop on Language in Social Media,", "citeRegEx": "13", "shortCiteRegEx": "13", "year": 2013}, {"title": "Data Mining Concepts and Techniques 2nd Edition", "author": ["Jiawei Han", "Micheline Kamber"], "venue": null, "citeRegEx": "15", "shortCiteRegEx": "15", "year": 2006}, {"title": "Data Mining: Practical Machine Learning Tools and Techniques Third Edition", "author": ["Witten", "Ian H"], "venue": null, "citeRegEx": "16", "shortCiteRegEx": "16", "year": 2011}], "referenceMentions": [{"referenceID": 0, "context": "Their economic policies, which are set by the government, affect the economy of other countries [1].", "startOffset": 96, "endOffset": 99}, {"referenceID": 1, "context": "presidential election using Twitter [2], [3], [4], [5].", "startOffset": 41, "endOffset": 44}, {"referenceID": 2, "context": "presidential election using Twitter [2], [3], [4], [5].", "startOffset": 46, "endOffset": 49}, {"referenceID": 3, "context": "presidential election using Twitter [2], [3], [4], [5].", "startOffset": 51, "endOffset": 54}, {"referenceID": 5, "context": "This follows the increasing improvement in the text mining researches [7], [8], [11], [12], [13].", "startOffset": 70, "endOffset": 73}, {"referenceID": 6, "context": "This follows the increasing improvement in the text mining researches [7], [8], [11], [12], [13].", "startOffset": 75, "endOffset": 78}, {"referenceID": 9, "context": "This follows the increasing improvement in the text mining researches [7], [8], [11], [12], [13].", "startOffset": 80, "endOffset": 84}, {"referenceID": 10, "context": "This follows the increasing improvement in the text mining researches [7], [8], [11], [12], [13].", "startOffset": 86, "endOffset": 90}, {"referenceID": 11, "context": "This follows the increasing improvement in the text mining researches [7], [8], [11], [12], [13].", "startOffset": 92, "endOffset": 96}, {"referenceID": 2, "context": "Some of the most recent studies are [4], [3], [2], [9].", "startOffset": 36, "endOffset": 39}, {"referenceID": 1, "context": "Some of the most recent studies are [4], [3], [2], [9].", "startOffset": 41, "endOffset": 44}, {"referenceID": 7, "context": "Some of the most recent studies are [4], [3], [2], [9].", "startOffset": 51, "endOffset": 54}, {"referenceID": 2, "context": "The first study is done by [4], which analyzed the sentiment on 2008 U.", "startOffset": 27, "endOffset": 30}, {"referenceID": 1, "context": "Presidential Election polls using Naive Bayesian models [3].", "startOffset": 56, "endOffset": 59}, {"referenceID": 2, "context": "Previous researches either set the sentiment of a tweet directly based on a subjectivity lexicon [4] or preprocessed the tweet using a complex preprocessing method [2], [3].", "startOffset": 97, "endOffset": 100}, {"referenceID": 1, "context": "Previous researches either set the sentiment of a tweet directly based on a subjectivity lexicon [4] or preprocessed the tweet using a complex preprocessing method [2], [3].", "startOffset": 169, "endOffset": 172}, {"referenceID": 1, "context": "[3] not only removed URLs, mentions, retweets, hashtags, numbers and stop words; but also tokenized the tweets and added not on negative words.", "startOffset": 0, "endOffset": 3}, {"referenceID": 1, "context": "We gathered 371,264 tweets using Twitter Streaming API on Tweepy [3] since December 16, 2015 until February 29, 2016.", "startOffset": 65, "endOffset": 68}, {"referenceID": 4, "context": "The validity of the label is determined by means of majority rule [6].", "startOffset": 66, "endOffset": 69}, {"referenceID": 12, "context": "The accuracy is calculated by checking the confusion matrix [14], [15] and its F1 score [16].", "startOffset": 66, "endOffset": 70}, {"referenceID": 13, "context": "The accuracy is calculated by checking the confusion matrix [14], [15] and its F1 score [16].", "startOffset": 88, "endOffset": 92}, {"referenceID": 8, "context": "Otherwise, Twitter might not be used to predict the actual polls [10].", "startOffset": 65, "endOffset": 69}], "year": 2016, "abstractText": "This paper describes a Naive-Bayesian predictive model for 2016 U.S. Presidential Election based on Twitter data. We use 33,708 tweets gathered since December 16, 2015 until February 29, 2016. We introduce a simpler data preprocessing method to label the data and train the model. The model achieves 95.8% accuracy on 10-fold cross validation and predicts Ted Cruz and Bernie Sanders as Republican and Democratic nominee respectively. It achieves a comparable result to those in its competitor methods.", "creator": "LaTeX with hyperref package"}}}