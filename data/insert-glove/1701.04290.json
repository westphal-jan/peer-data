{"id": "1701.04290", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "16-Jan-2017", "title": "Machine Translation Approaches and Survey for Indian Languages", "abstract": "7,680 In simmers this study, we present an euro501 analysis jian-10 regarding bossem the performance urizen of the silver-gilt state - of - 40-fold art 10-dollar Phrase - ubell based Statistical Machine niggling Translation (glanbrook SMT) on m.d.s multiple Indian saslong languages. We warney report ipic baseline systems on 5,590 several language townscape pairs. The sifang motivation lums of madhav this study popularize is tampubolon to promote \u00f6zel the 2.14-meter development of 13-song SMT sholapur and linguistic lzma resources wilber for krieble these language zigs pairs, 1.5465 as the current kathmandu state - lalane of - the - art tribuni is namazov quite b-26 bleak gokarna due habitats to thuh sparse data parbatipur resources. hobbs The feldafing success serotyping of an SMT bhagwat system is cavalli-sforza contingent on lunge the availability caeiro of a large parallel corpus. snavely Such blindfolds data takatori is gloominess necessary mammen to jetton reliably queensland estimate sihor translation bawi probabilities. We report kahlo the performance of everding baseline tomislavgrad systems gynoid translating from Indian pinfield languages (gerda Bengali, Guajarati, Hindi, 220-pound Malayalam, sachdev Punjabi, Tamil, Telugu beauregard and duncans Urdu) batterings into English with average mirabelli 10% european-americans accurate results for pleasant all averse the proximately language 368.5 pairs.", "histories": [["v1", "Mon, 16 Jan 2017 13:55:01 GMT  (462kb)", "http://arxiv.org/abs/1701.04290v1", null]], "reviews": [], "SUBJECTS": "cs.CL", "authors": ["nadeem jadoon khan", "waqas anwar", "nadir durrani"], "accepted": false, "id": "1701.04290"}, "pdf": {"name": "1701.04290.pdf", "metadata": {"source": "CRF", "title": "Machine Translation Approaches and Survey for Indian Languages", "authors": ["Nadeem Jadoon Khan", "Waqas Anwar", "Nadir Durrani"], "emails": [], "sections": [{"heading": null, "text": "based Statistical Machine Translation (SMT) on multiple Indian languages. We report baseline systems on several language pairs. The motivation of this study is to promote the development of SMT and linguistic resources for these language pairs, as the current state-of-the-art is quite bleak due to sparse data resources. The success of an SMT system is contingent on the availability of a large parallel corpus. Such data is necessary to reliably estimate translation probabilities. We report the performance of baseline systems translating from Indian languages (Bengali, Guajarati, Hindi, Malayalam, Punjabi, Tamil, Telugu and Urdu) into English with average 10% accurate results for all the language pairs.\nKeywords: Statistical Machine Translation (SMT), Parallel Corpus, Natural Language Processing (NLP), Phrase-based Translation"}, {"heading": "1. Introduction", "text": "In this section, a brief background of Machine Translation is given. An overview of Machine Translation (MT) approaches is also discussed with the SMT approach being used to carry out this work. Indian languages that we selected for this work are also discussed briefly.\n1.1. Machine Translation\nMachine Translation (MT) can be defined as an automated system that analyses text from a Source Language (SL), applies some computation on that input and produces equivalent text in a required target language (TL) ideally without any kind of human intervention. It is one of the most interesting and the hardest problem in the field of NLP (Koehn, 2010). The two challenges in machine translation are adequacy and fluency. The former is to develop a system that adequately represents the ideas expressed in the source language into the target language. The latter is to represent those ideas grammatically. The common approaches to machine translation are the rule-based approach and corpus-based approach. In the rule-based approach, the text in the source language is analyzed using various tools such as: a morphological parser and analyser and then transformed into an intermediate representation. A set of rules are used to generate the text in target language of this intermediate representation. A large number of rules are necessary to capture the phenomena of natural language. These rules transfer the grammatical structure of the source language into target language. As the number of rules increases, the system become more complicated (Islam et al., 2010) and slow to translate. Formulation of a large number of rules is a tedious process and requires years of effort and linguistic analysis. In another approach, large parallel and monolingual corpora are used as source of knowledge. This approach can be further divided into statistical approach and example-based approach. In the statistical approaches, target text is generated and scored through a statistical model, the parameters of which are learned from parallel corpus. Here, MT is also seen as a decision problem, a better target language phrase\nid is decided from the given source language. Bayes rule and statistical decision theory are used to solve this decision problem. Statistical decision theory and Bayesian decision rules are used to minimize errors of decision. SMT (Koehn, 2010) gives better results if additional training data are available.\nSMT is superior to rule-based and example-based systems in that it does not require human interpenetration and can build a translation system in an unsupervised manner directly from the training data. With the rapid proliferation of internet and increasing availability of data, SMT is currently the most popular and prevalent paradigm. SMT can be represented by different models and a basic architecture of simple SMT system model is shown in Figure 1. An arrow from Translation model to Language model shows that the Language model contains the target side corpora as well. The arrow from Language model to Translation text shows that the fluency of the translation depends upon the quality of Language Model. In this study we use Phrase-based SMT model and an overview of this model is given in next section.\n1.1.1.Phrase-based Model\nIn our experiment, we have used the Phrase-based SMT Models (Koehn et al., 2003; Och & Ney, 2004) and evaluated their performance on the morphologically rich Indian languages. Phrase-based models are used to translate phrases of one or more words as atomic units (Koehn, 2010). These models divide the input sentence into phrases, produce the target phrases and at the end reordering of these phrases is done. Phrase-based models memorize local dependencies such as short reordering, idiomatic collocations, insertions and deletions. Phrase-based models are based on the noisy channel model introduced by (Shannon, 1948) in the information theory. Given a source sentence F, the objective is to find a target sentence E, which maximizes the likelihood of two components, the translation (or adequacy) and the language (or fluency model).\nEvery sentence F is an arrangement of words symbolized as = f1\u2026fj\u2026.fJ is decoded into a sentence E of\ntarget language, and symbolized as = e1\u2026ei\u2026eI. The objective is to find a target sentence that maximizes the model:\n\u00ea = argmax P ( | ) (1)\nFor decoding sentence into sentence , we require to calculate P ( |\n), the translation model\nprobability. Using Bayes theorem we can decompose the above equation as:\nP ( |\n) =\n( | ). ( )\n( )\n(2)\nSubsequently our goal is to get the most out of general probable translation hypotheses for the specified\nsource sentence . Equation 2 will be computed for every sentence in Language E. But P (\n) is not\nmodified for every translation hypothesis. Therefore we can neglect the denominator P ( ) from the\nEquation 2.\n\u00ea = argmax P ( | ) . P ( ) (3)\nThe model of the likelihood distributed for the first term in Equation 3 (P ( |\n)), probability of\ntranslation (f,e)) is called Translation Model, and the distribution of P ( ) is called the Language Model.\n1.2. Language Selection\nWe selected 8 commonly spoken languages in the sub-continent, parallel corpus of which was available to test.\nBengali (Bangla) : Bengali is the national language of Bangladesh and one of the officially spoken languages of India. More than 21 million people speak Bengali either as their first or second language (Britannica, 2014). There are roughly 10 million native speakers of Bengali in Bangladesh and around 85 million in India in the states like west Bengal, Assam and Tripura. Bengali is also known as Bangla and it is associated with Indo-Iranian family. Like most languages it is also written from left to right. Its sentence structure is similar to English i.e. SOV (Subject Object Verb). All letters are written in same case and there are no capital letters. The source of its punctuation is English language of 19th century.\nGujarati: It is a member of Indo-Aryan branch of languages. 46 million people in the Indian state of Gujarat speak Guajarati (Britannica, 2014). Evolution of Gujarati language took place in 12th century. Gujarati declension is considerably complicated. It contains 3 genders masculine, feminine, and neuter and 2 numbers singular and plural. For nouns it has three cases nominative, oblique and agentive locative. It is written from left to right with writing style SOV.\nHindi: It is the national and official language of India. 425 million people speak Hindi as their first language while more than 12 million people as their second (Britannica, 2014). Outside India, some communities in South Africa, Mauritius, Bangladesh, Yemen, and Uganda also communicate in Hindi language. Hindi is a-member of the-Indo-Aryan-group within the Indo-Iranian-branch of the-IndoEuropean-language family. Like in Persian, Hindi adjectives do not change as a result of number change in noun. Its preposition is similar to English. Unlike others Sanskrit based languages like Guajarati it has only two genders i.e. masculine and feminine. Case marking in Hindi is simple due to Persian influence and reduces it to direct form and an oblique form. Case relations are shown postpositions. Like many languages it is also written from left to right but its writing style is SOV. Modern standard Hindi evolved from the interaction of Muslim from Afghanistan, Iran, Turkey, Central Asia, and elsewhere. Due to Persian influence Hindi borrowed some part of vocabulary from Persian language such as dresses (e.g. \u06c1\u0645\u0627\u062c\u0627\u067e ,pajama, (Trouser); \u060c\u0631 \u062f\u0627\u0686 chadar (Sheet), cuisine (e.g. \u06c1\u0645\u0631\u0648\u0642,korma; \u0628\u0627\u0628\u06a9,kebab), cosmetics\n(e.g. \u0646\u0628\u0627\u0635, sabun (soap); \u0627\u0646\u062d,hina, hen-na), furniture (e.g., \u06cc\u0633\u0631\u06a9, kursi (chair); \u0632\u064a\u0645,maiz (table)), construction (e.g., \u0631\u0627\u0648\u064a\u062f (wall)). A large number of adjectives and their nominal derivatives(e.g.,-abad-inhabitedand-abadi-population), and a wide range of other items and concepts are so much a part of the Hindi language that purists of the post-independence period have been unsuccessful in purging them. While borrowing Persian and Arabic words, Hindi also borrowed-phonemes, such as /f/ and /z/, though these were sometimes replaced by /ph/ and /j/. For instance, Hindi renders the word for force as either-zor-or-jor-and the word for sight as-nazaror-najar. In most cases the sounds /g/ and /x/ were replaced by /k/ and /kh/, respectively. Contact with theEnglish language-has also enriched Hindi. Many English words, such as-button,-pencil,-petrol, and college-are fully assimilated in the Hindi lexicon.\nMalayalam: Malayalam is also a widely spoken language in India, mainly in the state of Kerala where it is an official language. In Tamil Nadu and Karnataka, few societies communicate in Malayalam language. It belongs to South Dravidian which is sub part of Dravidian language. Around 35 million people speak this language (Britannica, 2014).There exist different slangs between social caste lines which causes diglossia i.e. difference between formal, literary and colloquial forms of speech. Like other Dravidian languages it also has a series of retroflex constants (/\u1e0d/, /\u1e47/, and /\u1e6d/) pronounce by touching the tip of tongue to the roof of the mouth. Its writing style is SOV and has nominative accusative case marking pattern. It has three genders i.e. masculine, feminine and neuter. Inflection is generally marked via suffixation. Unlike other Dravidian languages, Malayalam inflects its finite verb only for tense\u2014not for person, number, or gender.\nPunjabi (Panjabi): It is a member of the-Indo-Aryan-subdivision of the-Indo-European language-family. More than 10 million people speak this language (Britannica, 2014) in the domain that was discordant between Pakistan and India during cleave. This language is officially added in Indian constitution. Some small societies in UAE, UK, USA, Canada, South Africa and Malaysia speak Punjabi. It is of two miscellanies; one is western which is known as Lahnda and second is eastern known as Gurmukhi. There are two ways to write Punjabi, one is by Perso-Arabic script and other is by Gurmukhi alphabets which were conceived by Sikh Guru Angad (1539-52) rules for scriptural use. Its writing style is SOV and written from left to right (Gurmukhi) and right to left (Perso-Arabic).\nTamil: Tamil is the member of Dravidian language and is the official language of the Tamil Nadu state. It is also the official language in Sri Lanka and Singapore and is also spoken by many people is Malaysia, Mauritius, Fiji and South Africa. In 2004, it was declared as classical language of India which means it met three criteria its origins are ancient; it has an independent tradition; and it possesses a considerable body of ancient literature. Around 66 million people speak Tamil language (Britannica, 2014). Three times, changes occurred in grammatical and lexical form of this language, Old Tamil (from about 450 BCE to 700 CE), Middle Tamil (700 CE 1600 CE), and Modern Tamil (from 160 CE onwards). Its writing system developed from Brahmi script. Over the time its letters changed shapes until 16th century CE when printing was introduced and its shape stabilized. The major addition to the alphabet was the incorporation of Grantha-letters to write unassimilated Sanskrit words, although a few letters with irregular shapes were standardized during the modern period. . A script known as Vatteluttu (Round Script) is also in common use. With time, changes in the way of speaking this language occurred. Tamil language spoken in India is different from that which is spoken in Sri Lanka. Variation takes place in different regions. Within-Tamil Nadu-there are phonological differences between the northern, western, and southern speech.\nTelugu: Telugu is one of the most spoken languages among the Dravidian language family. In south eastern part of India, people communicate in this language. In Andhra Pradesh it is the official language. Worldwide, 75 million people speak Telugu language (Britannica, 2014). The oldest material belonging\nto this language is of 575 CE. The Telugu script is used for writing Telugu, which is derived from Calukya Dynasty. Telugu is written from left to right. Visually, it differs from many of the North Indian scripts in that the letters have a rounded base.\nUrdu is also a member of the Indo-Aryan group within the Indo-European family of languages. Urdu is the national language of Pakistan while it is officially recognized language in Indian constitution as well. More than 100 million people (Britannica, 2014) within Pakistan and India speak in Urdu. Apart from these two nations Urdu is also spoken by the immigrants and in small societies in UK, USA and UAE. Urdu and Hindi are bilaterally audible. This language developed and stemmed from Indian subcontinent therefore it is similar to Hindi. Due to similarity in phonics and grammar they seem like one language but there sources are different. Urdu is lent from Arabic and Persian while Hindi is borrowed from Sanskrit that is why they are treated as maverick languages. There is a huge difference in their writing style. Urdu script is an altered and revised form of Perso-Arabic scripts while Hindi script is a modified form of Devanagari script. Urdu and Hindi sound similar except few variations in short vowel allophones. Urdu withholds a full set of aspirated stops. It is the property of both Indo Aryan as well as retroflex stops. Urdu does not retain the complete range of Perso-Arabic consonants, despite its heavy borrowing from that tradition. The largest number of sounds retained is among the spirants; a group of sounds uttered with a friction of breath against some part of the oral passage, in this case /f/, /z/, /zh/, /x/, and /g/. One sound in the stops category, the glottal /q/, has also been retained from Perso-Arabic. Grammatically Hindi and Urdu are same. Major difference between these two is Urdu is written from right to left while Hindi is written from left to right. Style of Urdu writing is SOV and exhibit split ergative behaviour. In Urdu, Perso Arabic prefixes and suffixes are more than Hindi. examples include the prefixes dar- \u2018in,\u2019 ba-/baa-\n\u2018with,\u2019 be-/bila-/la- \u2018without,\u2019 and bad- \u2018ill, miss\u2019 and the suffixes -dar \u2018holder,\u2019 -saz \u2018maker\u2019 (as\nin zinsaz \u2018harness maker\u2019), -khor \u2018eater\u2019 (as in muftkhor \u2018free eater\u2019), and -posh \u2018cover\u2019 (as in mez posh \u2018table cover\u2019)."}, {"heading": "1.3. Related Work", "text": "Initial research has been done to translate Indian languages, mostly focusing Hindi and Bengali. However, most of the focus is still rule-based because of the unavailability of parallel data to build SMT systems for these languages. (Dasgupta et al., 2004) proposed an approach for English to Bangla MT that uses syntactic transfer of English sentences to Bangla with optimal time complexity. In generation stage of the phrases they used a dictionary to identify subject, object and also other entities like person, number and generate target sentences. (Naskar et al., 2006) presented an example-based machine translation system for English to Bangla. Their work identifies the phrases in the input through a shallow analysis, retrieves the target phrases using the example-based approach and finally combines the target phrases using some heuristics based on the phrase reordering rules from Bangla. They also discussed some syntactic issues between English and Bangla. (Anwar et al., 2009) proposed a method to analyze syntactically Bangla sentence using context sensitive grammar rules which accepts almost all types of Bangla sentences including simple, complex and compound sentences and then interpret input Bangla sentence to English using a NLP conversion unit. The grammar rules employed in the system allow parsing five categories of sentences according to Bangla intonation. The system is based on analyzing an input sentence and converting into a structural representation (SR). Once an SR is created for a particular sentence it is then converted to corresponding English sentence by NLP conversion unit. For conversion, the NLP conversion utilizes the corpus. (Islam et al., 2010) proposed a phrase-based Statistical Machine Translation (SMT) system that translates English sentences to Bengali. They added a transliteration module to handle OOV words. A preposition handling module is also incorporated to deal with systematic grammatical differences between English and Bangla. To measure the performance of their system, they used BLEU, NIST and TER scores. (Durrani et al., 2010) also made use of transliteration to aid translation between Hindi and Urdu which are closely related languages. (Roy &\nPopowich, 2009) applied three reordering techniques namely lexicalized, manual and automatic reordering to the source and language in a Bangla English SMT system. (Singh et al., 2012) presented a Phrase based model approach to English-Hindi translation. In their work they discussed the simple implementation of default phrase-based model for SMT for English to Hindi and also give an overview of different Machine translation applications that are in use nowadays. (Sharma et.al. 2011) presented English to Hindi SMT system using phrase-based model approach. They used human evaluation metrics as their evaluation measures. These evaluations cost higher than the already available automatic evaluation metrics. (Yamada & Knight, 2001) used methods based on tree to string mappings where source language sentences are first parsed and later operations on each node. (Eisner, 2003) presented issues of working with isomorphic trees and presented a new approach of nonisomorphic tree-to-tree mapping translation model using synchronous tree substitution grammar (STSG). (Li et al., 2005) first gave idea of using maximum entropy model based on source language parse trees to get n-best syntactic reordering\u2019s of each sentence which was further extended to use of lattices. (Bisazza & Federico 2010) further explored lattice-based reordering techniques for Arabic-English; they used shallow syntax chunking of the source language to move clause-initial verbs up to the maximum of 6 chunks where each verb\u2019s placement is encoded as separate path in lattice and each path is associated with a feature weight used by the decoder. (Jawad et al., 2010) presented complete study work for English to Urdu MT that uses factored based MT. In their work they discussed the complete divergence between two languages. Vocabulary difference between Urdu and English has been discussed. In their work they showed importance of factored based models when we got information about the morphology of both source and targeted language. (Khan, et al., 2013) presented baseline SMT system for English to Urdu translation using Hierarchical Model given by (Chiang, et al., 2005) They also made a comparison of simple default phrase-based model with the hierarchical model and showed the performance of simple phrase-based is much better for such local language like Urdu then the hierarchical phrase-based approach to SMT. (Singh et al., 2008) presented a Punjabi to Hindi Machine Translation System. The purposed system for Punjabi to Hindi translation has been implemented with various research techniques based on Direct MT architecture and language corpus. The output is evaluated in order to get the suitability of the system for the Punjabi Hindi language pair. A lot of work is being carried out using Neural Networks technology in the field of MT which is being a good approach nowadays. Neural Machine Translation is a newly proposed approach in MT. The main drawback using the approach is it requires relatively large amount of training corpus as compared to SMT. (Khalilov, et al., 2008) estimated a continuous space language model with a neural network in an Italian to English MT system. (Bahdanau,et al., 2014) presented a Neural Machine Translation by joint learning to align and translate. In our work we used Phrase-based SMT models and evaluated their performance on the morphologically rich Indian languages."}, {"heading": "2. Evaluation", "text": "In this section, we discuss different datasets used in our experiments followed by discussion on training, tuning and testing of different model components and lastly results and related discussion."}, {"heading": "2.1. Dataset", "text": "For this work, parallel corpora from diverse domains were collected for all the selected languages. For the bilingual corpus collection our first motive was to collect data from diverse domains to get better translation quality and a wide range vocabulary. For this purpose the corpus we selected to use in our work is EMILLE (Enabling Minority Language Engineering). EMILLE is a 63 million word corpus of Indic languages (Baker, et al., LREC 2002) which is distributed by the European Language Resources Association (ELRA). EMILLE contains data from six different categories: consumer, education, health, housing, legal and social documents. This data is based on the information leaflets provided by the UK government and various local authorities. We used 72 parallel files in total for each of our source language with each filename consisting of language code, text type (written or spoken), genre and\nsubcategory, connected with hyphen character. The data is encoded in full 2-byte Unicode format and marked up in SGML format. We used EMILLE corpus that is becoming a standard data repository for languages of this region. The parallel corpus consists of 200000 words of text in English and its accompanying translations in Hindi, Bengali, Punjabi, Gujarati and Urdu. Its bilingual resources consists of approximately 13000 sentences for all the available languages from which we were able to sentence-aligned and extract over 8000 sentence for all languages pairing with English using the sentence alignment algorithm given by (Moore., 2002). Some experiments with Multi-Indic parallel corpus (Post, et al. 2012) were also done.\nIn any SMT development project, development of parallel corpus is the most complicated task. In our work we have used EMILLE corpus which is quite noisy. Filtering and cleaning is requires before use. Cleaning of the corpus to extract aligned parallel sentences pair is the first step for development of any SMT system. Details about number of parallel sentences that were extracted for each pair are given in Table 1 and Table 2.\nA sufficiently large English language monolingual corpus is collected for this work. This monolingual corpus is used to build the language model that is used by the decoder to select the most affluent translation from several possible translation options. In this study we also tried to gather sufficiently large monolingual data from as many different available online resources as possible like Europarl (Koehn, 2005). The next step is to train the language model on the corpus that is suitable to the domain. To fulfil this need, data from diverse domains is collected. The main categories of the collected data are News, Religion, Health, Literature, Science, and Education. The WMT 08 News Commentary dataset is used as\nthe main entity for monolingual data, the target side of the parallel corpora is also added to the monolingual data. The monolingual corpora collected for this study have around 60 million tokens distributed in nearly 2 million sentences. These figures cumulatively present the number of tokens in all the domains whose data is used to build the language model. It includes monolingual data of the target languages of all parallel corpora collected for this study. We also trained state-of-the-art phrase-based systems using the Multi-Indic parallel data that has been recently made available. It contains parallel data for six languages namely Bengali, Hindi, Malayalam, Tamil, Telugu and Urdu. The number of segments used for training, tuning and testing of different language pairs are shown in Table 3."}, {"heading": "2.2. Experimental Setup", "text": "For EMILLE corpus we performed k-fold cross validation method for sampling of the corpus for all language pairs. Here k=5 was selected by taking 4/5 of the total corpus as training and 1/5 as tuning and test set for experiment on all folds. Each fold comprises over 800 segments for tuning and same number of sentences for testing along with above 6500 segments for training for all source languages except Hindi. For Hindi we got above 9000 segments in total. Above 7000 selected for training and about 950 sentences for tuning and testing of Hindi to English translation system. All these statistics can be seen clearly in Table 1. The first step in our work is sampling of data. Next, training, tuning and test sets are tokenized for all folds. Finally, all datasets are converted to lowercase. This process is repeated for all language pairs using scripts provided by Moses (Koehn et al. 2007) decoder. The lowercase training data is used for word alignment.\nBaseline Settings: We trained a Moses system (Koehn et al., 2007) with the following features: a maximum sentence length of 80, GDFA symmetrization of GIZA++ alignments (Och & Ney, 2003), an interpolated Kneser-Ney smoothed 5-gram language model with SRILM (Stolcke, 2002) used at runtime, a 5-gram OSM (Durrani et al., 2013), msd-bidirectional-fe lexicalized reordering, sparse lexical and domain features (Hasler et al., 2012), a distortion limit of 6, 100-best translation options, MBR decoding (Kumar & Byrne, 2004), Cube Pruning (Huang & Chiang, 2007) with a stack-size of 1000 during tuning and 5000 during test, and the no-reordering-over punctuation heuristic. We tuned with the k-best batch MIRA algorithm (Cherry & Foster, 2012). Language Model is built on the available monolingual English corpus. This language model is implemented as an n-gram model using the SRILM (Stolcke, 2002) toolkit. For all the experiments in all languages, the same language model is used for all folds of the source languages as translation is being performed from South Asian into English. For Multi-Indic experiments, we trained the language model using the monolingual WMT-13 data which is built from 148M English sentences."}, {"heading": "2.3. Results", "text": "As the languages used in this work are sparse-resourced, we achieved relatively lower scores for BLEU (Papineni, 2002), we have achieved BLEU score with a mean of 0.12 and a Standard deviation of 0.06 on the given test sets using the 5-fold cross validation method. Table 4 presents the results of experiments for all language pairs. The results are composed of BLEU and NIST score evaluated over the test corpora and also the UNK (OOV Words) Count over that test corpus for all the selected language pairs. The subsequent subsections present evaluation results for all language pairs for both seen i.e. data taken from the training set and the unseen i.e. actual testing data."}, {"heading": "Bangla-English:", "text": "For Bengali-English language pair, we achieved decent BLEU scores with a mean of X= 0.118 and a Standard deviation \u03c3 = 0.043 on unseen data and X= 0.364 with a Standard deviation \u03c3 = 0.018 on seen data. For NIST we got, X= 3.786 and a Standard deviation \u03c3 = 0.522 on unseen data and X= 7.878 with a Standard deviation \u03c3 = 0.328 on seen data.\nWhen counting the unknown words in translation of our SMT system we achieved X= 610 and a Standard deviation \u03c3 = 59 on unseen data and X= 130 with Standard deviation \u03c3 = 8 on seen data. An example of translation output from the trained system is given below. The example is composed of Source segment with its reference translation from test corpus. A segmented output of translation output is also given."}, {"heading": "Example:", "text": "Source: \u25cc \u25cc \u25cc \u25cc \u25cc \u25cc \u25cc\nReference: department of the environment transport and the regions\nOutput: the department of |0-5| the environment |6-9| transport |10-16| and the regions |17-22|\nThe indexes in the output represent which source words produced this output for example, \u201cthe department of\u201d was produced by a source phrase containing source words indexed between 0 and 5.\nS.No Input Phrase Reference Phrase 1 \u25cc \u25cc the department of 2 \u25cc of the environment 3 \u25cc \u25cc Transport 4 \u25cc and the regions\nTable 5 presents input phrases along with corresponding reference phrases for the example mentioned above. A clear difference can be observed between the reference translation and the one achieved from the developed system. The translation output is segmented into different phrases and decoder fetches the translation from the developed phrase table. The reordering model also gave poor result for such small amount of data.\nIn output the first six words of source are translated to \u201cThe department of\u201d then next three to \u201cthe environment\u201d then next five to just a single output \u201ctransport\u201d and so on. Here it can be noted that how sparseness affect the output, the phrase table contains only one single output word for five input words. Table 6 shows the actual BLEU, NIST score for all the folds along with the OOV words count."}, {"heading": "Gujarati-English:", "text": "For this pair, again we got decent BLEU scores as compared to our small amount of training corpus with a mean of X= 0.119 and a Standard deviation \u03c3 = 0.059 on unseen data and X= 0.403 and a Standard deviation \u03c3 = 0.012 on seen data. For NIST we got, X= 3.674 and a Standard deviation \u03c3 = 0.701 on unseen data and X= 8.136 and a Standard deviation \u03c3 = 0.153 on seen training corpus. When counting the unknown words in translation of our SMT system we achieved X= 678 and a Standard deviation \u03c3 = 77 on unseen data and X= 117 and a Standard deviation \u03c3 = 16 on seen data. An example of translation output from the trained system is given below. The example is composed of Source segment with its reference translation from test corpus. A segmented output of translation output is also given."}, {"heading": "Example:", "text": "Source: \u0a85 \u0a95\u0ac1 \u0aac\u0ac7\u0abf\u0aa8 \u0aab\u0a9f\u0acb \u0aae\u0abe\u0a9f \u0aa4\u0aae\u0ac7 \u0aa8\u0ac7\u0ab6\u0aa8\u0ab2 \u0a87\u0aa8\u0ab6 \u25cc\u0acd \u0aaf\u0acb\u0ab0\u0aa8 \u25cc\u0acd \u0ab6\u0a95\u0acb\u0aa8 \u25cc\u0acd \u0a9f \u25cc\u0acd \u0ab0 \u0aac \u25cc\u0acd \u0ab6\u0ac1\u0aa8\u0acb \u0aad\u0ab0 \u0ab2\u0abe \u0a82\u0ab9\u0acb\u0ab5\u0abe \u0a82\u0a9c \u0a9c\u0acb\u0a87\u0a8f\n\u0a85\u0aa5\u0ab5\u0abe \u0a8f\"\u0ac1 \u0a82\u0aae\u0abe\u0aa8\u0ac0 \u0ab2\u0ac7\u0ab5\u0abe\u0aae\u0abe \u0a82\u0a86\u0ab5\u0ab6\u0ac7 \u0a95 \u0aa4\u0aae\u0ac7 \u0aa4\u0ac7 \u0aad\u0ab0 \u0ab2\u0abe \u0a82\u0a9b\u0ac7 .\nReference: for some benefits you must have paid or be treated as having paid no contributions.\nOutput: for some benefits you |0-4| \u0a87\u0aa8\u0ab6 |5-5| your |8-9| no |6-7| contributions |10-16| must |19-20| have paid |17-18| or |21-21| be |22-22| taken |24-24| to\nTable 5 : Bangla-English Phrase table for given example\nS.No Input Phrase Reference Phrase 1 \u0a85 \u0a95\u0ac1 \u0aac\u0abf\u0ac7\u0aa8 \u0aab\u0a9f\u0acb \u0aae\u0abe\u0a9f \u0aa4\u0aae \u0ac7\u0aa8\u0ab6\u0ac7\u0aa8\u0ab2 for some benefits you\n2 \u0a87\u0aa8\u0ab6 NULL\n3 \u0aaf\u0acb\u0ab0\u0aa8 No\n4 \u0ab6\u0a95\u0acb\u0aa8 Your\n5 \u0a9f \u25cc\u0acd \u0ab0 \u0aac \u25cc\u0acd \u0ab6\u0ac1\u0aa8\u0acb Contributions\n6 \u0aad\u0ab0 \u0ab2\u0abe \u0a82\u0ab9\u0acb\u0ab5\u0abe \u0a82 have to have paid\n7 \u0a9c \u0a9c\u0acb\u0a87\u0a8f Must\n8 \u0a85\u0aa5\u0ab5\u0abe Or\n9 \u0aae\u0abe\u0aa8\u0ac0 \u0ab2\u0ac7\u0ab5\u0abe\u0aae\u0abe \u0a82\u0a86\u0ab5\u0ab6\u0ac7 be deemed to have ceased\nTable 7 presents input phrases along with corresponding reference phrases for the example mentioned above. A clear difference can be observed between the reference translation and the one achieved from the developed system. The translation output is segmented into different phrases and decoder fetches the translation from the developed phrase table. The reordering model also gave poor result for such small amount of data. In output the first four words of source are translated to \u201cfor some benefits you\u201d then next word could not be translated by the decoder so it becomes an OOV in our translation output. From the phrase table it is seen that many source words translated to just single target output. This is also because of poor tokenization for regional languages as there is no standardized tokenizer available for these languages. Table 8 shows the actual BLEU, NIST score for all the folds along with the OOV words count.\nHindi-English: The results of Hindi to English translation are given in Table 10. The corpora used for Hindi-English language pair was the most domain-relevant and the biggest in size. It resulted in significantly better translation as compare to other language pairs. Hence, it can be concluded that the size and relevance of parallel language corpus have a direct relationship with the quality of translation. For this pair, again we got decent BLEU scores with a mean of X= 0.115 and a Standard deviation \u03c3 = 0.068 on unseen data and X= 0.352 and a Standard deviation \u03c3 = 0.025 on seen data. For NIST we got, X= 3.779 and a Standard deviation \u03c3 = 0.804 on unseen data and X= 7.634 and a Standard deviation \u03c3 = 0.437 on seen data. When counting the unknown words in translation of our SMT system we achieved X= 672 and a Standard deviation \u03c3 = 90 on unseen data and X= 150 and a Standard deviation \u03c3 = 10 on seen data. Translation\noutput of our developed system is given below in example.\nTable 7 : Gujarati-English Phrase table for given example"}, {"heading": "Example:", "text": "Source: \u0909\u0928\u0938\u0947 \u0938\u092e\u0902\u092a\u0930 \u25cc\u094d \u0915\u0947 \u0932\u090f \u092a\u0924 \u0947\u0935 \u091f\u0947\u0932 \u092b\u094b\u0928 \u0928\u0902\u092c\u0930 \u0928\u0940\u091a \u0947 \u0926\u090f \u0939 \u25cc\u0903\nReference: contact addresses and telephone numbers are as follows:\nOutput: on |0-0| the |2-3| \u0938\u092e\u092a\u0902\u0930 |1-1| for |4-5| addresses |6-6| and |7-7| telephone |8-8| helpline |9-9| below\n|10-10| \u0926\u090f |11-11| : |12-12|\nS.No Input Phrase Reference Phrase 1 \u0909\u0928\u0938 \u0947 On 2 \u0915 \u0915\u0947 The 3 \u0938\u092e\u0902\u092a\u0930 NULL 4 \u0915\u0947 \u093f\u0932\u090f For 5 \u091f\u0947\u0932\u0940\u092b\u094b\u0928 Telephone 6 \u092a\u0924\u0947 \u0935 Addresses 7 \u0928\u0940\u091a\u0947 \u093f\u0926\u090f Of the following 6 \u0939 \u25cc\u0903 : 7 \u0928\u0902\u092c\u0930 Helpline\nTable 7 presents input phrases along with corresponding reference phrases for the example mentioned above. A clear difference can be observed between the reference translation and the one achieved from the developed system. The translation output is segmented into different phrases and decoder fetches the translation from the developed phrase table. The reordering model also gave poor result for such small amount of data.\nIn output the first word of source is translated to \u201con\u201d then next two words were translated as \"the\" then again NULL token so it becomes an OOV in our translation output. From the phrase table it is seen that many source words are translated to just single target output. This is also because of poor tokenization for regional languages as there is no standardized tokenizer available for these languages. Table 10 shows the actual BLEU, NIST score for all the folds along with the OOV words count.\nFor this pair, again we got decent BLEU scores with a mean of X= 0.15 and a Standard deviation \u03c3 = 0.09 on unseen data and X= 0.385 and a Standard deviation \u03c3 = 0.053 on seen data.\nTable 9: Hindi-English Phrase table for given example\nFor NIST we got, X= 4.185 and a Standard deviation \u03c3 = 1.158 on unseen data and X= 7.754 and a Standard deviation \u03c3 = 0.242 on seen data with relatively small amount of training parallel corpus. When counting the unknown words in translation of our SMT system we achieved X= 591 and a Standard deviation \u03c3 = 110 on unseen data and X= 98 and a Standard deviation \u03c3 = 13 on seen data. The example given below composed of the input source with its reference from the parallel corpus and also the translation output from the developed system.\nExample:\nSource: \u0a2a\u0a3f\u0a39\u0a32 \u0a07\u0a39 \u0a2a\u0a24\u0a3e \u0a15\u0a30\u0a4b \u0a3f\u0a15 \u0a24\u0a41\u0a39\u0a3e\u0a28\u0a70\u0a42 \u0a3f\u0a15\u0a39\u0a5c\u0a47 \u0a2c\u0a28\u0a48\u0a40\u0a3f\u0a5e\u0a1f \u0a3f\u0a2e\u0a32 \u0a38\u0a15\u0a26 \u0a47\u0a39\u0a28 \u0964\nReference: check first what benefit or benefits you may be able to get. Output: check first |0-3| what |6-6| benefits |7-7| that |4-4| you |5-5| can get . |8-11|\nAll the segments/phrases of source input are given in above phrase table of Table 11. We can find a number of differences between the reference and the translation output of the developed system. The translation output is segmented into different phrases and decoder fetches the translation from the developed phrase table. The reordering model also gave poor result for such small amount of data.\nIn output the first three words of source are translated to \u201ccheck first\u201d then all other words were translated to single words in output even the last phrase of over two to four words also translated to single word. From the phrase table it is seen that many source words translated to just single target output. This is also because of poor tokenization in pre-processing for regional languages as there is no standardized tokenizer available for these languages. In Table 12 we present actual BLEU, NIST score for all the folds along with the OOV word count."}, {"heading": "Urdu-English", "text": "For this language pair, we got BLEU scores with a mean of X= 0.14 and a Standard deviation \u03c3 = 0.038 on unseen data and X= 0.371 and a Standard deviation \u03c3 = 0.027 on seen data. For NIST we got, X= 4.26\nand a Standard deviation \u03c3 = 0.535 on unseen data and X= 7.54 and a Standard deviation \u03c3 = 0.53 on seen data with very small amount of training parallel corpus. When counting the unknown words in translation of our SMT system we come up with X= 550 and a Standard deviation \u03c3 = 45 on unseen data and X= 117 and a Standard deviation \u03c3 = 12 on seen data. The example given below shows the different kind of problems that are occurred in getting translation output from the developed system.\nExample:\nSource: .20 \u0631\u062a\u06c1\u0628\u06cc \u06a9\u06cc \u064a\u06c1 \u062a\u0627\u0628\u064a\u06ba \u0627\u064a\u06a9 \u06c1 \u0627\u062f\u062a\u0628\u0627 \u0647\u062f\u0645\u0639\u064a\u06ba \u06d4 Reference: 20. These improvements are a good start.\nOutput: 20. |0-0| the |1-2| these |3-3| things to |4-4| start |7-7| a |5-5| quality |6-6| . |8-9| |||\nIn output the first word of source and target is same so decoder did nothing with it and its segment from phrase table will be NULL. The next word got totally different output in translation output as compared to the phrase table entry of Table 13. The two source words are translated to four word phrase in phrase table but in our translated output we got just a single output translation. This is because of the n-best translation phrase for a single phrase input. Next we can see the reordering again poorly managed by the baseline phrase based model.\nAll this discussion with given output example lead us to a bottom line conclusion that if we manage to get a good tokenizer and more corpora for all the selected regional languages, it will lead us to decent BLEU scores and fluent translations. Table 14 shows the actual BLEU, NIST score for all the folds along with the OOV word count.\nMulti-Indic Corpus\nThe results from running state-of-the-art baseline systems on multi-Indic corpus are shown in Table 15 below. For these experiments, we additionally transliterated OOV words following the unsupervised postdecoding transliteration method as described in (Durrani et al., 2014).\nIncreasing data can improve BLEU scores in all the language pairs we reported. However, the data available for Indian languages is still not enough to reliably estimate translation and reordering models. We can see clearly from Table 2 the vocabulary size is not good enough in numbers for training of the SMT system and it is creating data sparsity issue. More data is required to produce better translations. Translation quality can also be improved by studying the similarities between these languages. Data sparsity can be overcome by using methods of triangulation (Cohen and Lapata, 2007) & (Bertoldi et. al, 2008) and transliteration (Durrani et. al, 2010) which have been shown to be useful for closely related languages."}, {"heading": "3. Future Work & Conclusion", "text": "The developed SMT system takes the Indian language sentences as input and it generates corresponding closest translation in English. The translation of over 800 sentences was evaluated using automatic evaluation metric i.e. BLEU evaluation. Average BLEU score of 10% to 20% was reported for all the languages. From these low BLEU scores it may be concluded that the quality of translation is directly dependent on the scope and quality of parallel language corpora. In this work we introduced all the less explored language from India pairing with English. As all the eight Indian Languages used in this work exhibit rich morphology thus resulting in sparse estimates which causes poor translation quality, therefore our results are not as good as the ones reported for the European languages (Koehn et al., 2005) for which parallel and monolingual data is abundantly available. In this work we employee Phrase-based model for training and used MERT for tuning our system. We carried out a set of experiments by choosing the training, tuning and test sets from parallel corpus using the fivefold cross validation method to make up the fact that we had only a small amount of parallel data. We found that each of our source Indian language got so much divergence when translating into English and that is why there is significant difference in obtained MT evaluation scores on seen corpus and on unseen test sets. In future, we will study SMT by applying other different approaches to develop good language models and also the training model for all the South Asian languages whose more parallel corpus is available at the moment or may be available in nearer future. We also intend to perform a deep manual qualitative analysis on the MT output for all the language pairs we used for experimenting to compare our MT evaluation results for both the seen and unseen datasets as there are unknown words occurring in translation of seen test sets."}], "references": [], "referenceMentions": [], "year": 2017, "abstractText": "In this study, we present an analysis regarding the performance of the state-of-art Phrasebased Statistical Machine Translation (SMT) on multiple Indian languages. We report baseline systems on several language pairs. The motivation of this study is to promote the development of SMT and linguistic resources for these language pairs, as the current state-of-the-art is quite bleak due to sparse data resources. The success of an SMT system is contingent on the availability of a large parallel corpus. Such data is necessary to reliably estimate translation probabilities. We report the performance of baseline systems translating from Indian languages (Bengali, Guajarati, Hindi, Malayalam, Punjabi, Tamil, Telugu and Urdu) into English with average 10% accurate results for all the language pairs.", "creator": "PScript5.dll Version 5.2.2"}}}