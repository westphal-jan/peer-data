{"id": "1702.05710", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "19-Feb-2017", "title": "Polynomial Time Efficient Construction Heuristics for Vertex Separation Minimization Problem", "abstract": "thinus Vertex Separation Minimization Problem (VSMP) consists ibragim of birdbaths finding citius a agatsuma layout aboutrika of a casiano graph akufo G = (3-0-15-0 V, orc E) which shoutout minimizes the glutinous maximum vertex cut or separation bafia of a layout. It is phosphorylated an 69.17 NP - travellers complete problem \u017celechlinek in general for pc-8801 which metaheuristic americium-241 techniques can be shakehand applied to find near optimal solution. langoliers VSMP mile-wide has indignation applications in VLSI design, graph oclc/worldcat drawing eu-3 and computer stephon language compiler design. unreformed VSMP five-point is taggants polynomially impersonates solvable 82.66 for grids, interpromotional trees, permutation graphs and alciato cographs. Construction heuristics nscb play kroner a very ferrum important role cacac in jpa the yoshishige metaheuristic pleural techniques ground-attack as polystar they are responsible omino for hairsplitting generating evey initial bayadere solutions which lead dimitrios to e-sahabah fast convergence. maraj In this kfarshuba paper, we unhealthful have proposed three lancashire construction graysville heuristics 87.6 H1, press.org H2 and H3 and bennitt performed 100-kilometer experiments const on 93.30 Grids, Small pollokshaws graphs, manzana Trees and n\u00f3gr\u00e1d Harwell snowmobilers Boeing tabet graphs, buseck totaling wenfu 248 instances cricetidae of shiota graphs. melching Experiments reveal that H1, institutet H2 and assocham H3 40-cent are marot able winkeljohn to hpl achieve dream-quest best itched results wistow for coolpix 88. 71% , 43. 5% rajcevic and druse 37. 138.0 1% adjective of grewia the verily total juventud instances continis respectively hankers while the oddy best construction curtailment heuristic indosat in fenceposts the windpump literature cryonics achieves dalbar the arcserve best gantcher solution 34-29 for soinam 39. 9% of privilegio the total instances. nlds We co-owned have also intercom compared the results with the 4-to-3 state - allday of - celtique the - art 8-under metaheuristic lapasset GVNS demi-god and angoor observed altheim that the big-league proposed construction heuristics improves the results lura for hampstead some highest-ranking of astemirov the grubacic input confindustria instances. It nsb was knock-on found that GVNS tapai obtained best results scopa for dumai 82. 9% tremper instances 103.1 of all mccosky input instances and the italian-canadian heuristic bipartite H1 rieman obtained extracted best sannikov results piculet for tangguh 82. 3% of all m\u00e9lodie input humanity instances.", "histories": [["v1", "Sun, 19 Feb 2017 07:19:52 GMT  (16kb,D)", "http://arxiv.org/abs/1702.05710v1", "The paper will appear in the proceedings of International Conference on Current Trends in Graph Theory and Computation which will be published in Electronic Notes on Discrete Mathematics (ENDM)"]], "COMMENTS": "The paper will appear in the proceedings of International Conference on Current Trends in Graph Theory and Computation which will be published in Electronic Notes on Discrete Mathematics (ENDM)", "reviews": [], "SUBJECTS": "cs.DS cs.AI", "authors": ["pallavi jain", "gur saran", "kamal srivastava"], "accepted": false, "id": "1702.05710"}, "pdf": {"name": "1702.05710.pdf", "metadata": {"source": "CRF", "title": "Polynomial Time Efficient Construction Heuristics for Vertex Separation Minimization Problem", "authors": ["Pallavi Jain", "Gur Saran", "Kamal Srivastava"], "emails": [], "sections": [{"heading": "1 Introduction", "text": "Graph layout problems are a class of combinatorial optimization problems whose goal is to find a layout of an input graph G to optimize a certain objective function. A linear layout or layout of an undirected graph G = (V,E), where |V | = n is the bijective function \u03d5 : V \u2192 [n] = {1, 2, . . . ,n}. Set of all layouts is denoted by \u03a6(G). A Region in layout is defined as the area between two consecutive vertices in the layout. Vertex Separation minimization problem (VSMP) is to find a layout \u03d5\u2217 \u2208 \u03a6(G) of a graph G = (V,E) which minimizes the vertex separation (VS ) where V S = maxi\u2208[|V |] \u03b4(i, \u03d5,G) for a layout \u03d5 where, \u03b4(i, \u03d5,G) = |u \u2208 L(i, \u03d5,G) : \u2203v \u2208 R(i, \u03d5,G) \u2227 (u, v) \u2208 E(G)|, L(i, \u03d5,G) = {u \u2208 V : \u03d5(u) \u2264 i} and R(i, \u03d5,G) = {u \u2208 V : \u03d5(u) > i} [1, 4]. VSMP is NP-complete in general and has applications in VLSI design, graph drawing and computer language compiler design [2].\nFurther, in this paper, a vertex identifier corresponds to the vertices of graphs which are assumed to be the natural numbers 1,. . . ,n. For a vertex u \u2208 V (G), neighbourhood of u in G, N(u) = {v \u2208 V (G) : (u, v) \u2208 E(G)} and degree of u in G, dG(u) = |v \u2208 V (G) : (u, v) \u2208 E(G)|. Fig. 1(b) represents a linear layout of Fig. 1(a). VS for this layout \u03d5 of G is 3. VSMP is polynomially solvable for grids, trees, permutation graphs and cographs [1, 4]. This problem has been explored using metaheuristics namely, variable neighbourhood search by [2, 5]\n\u2217Department of Mathematics, Dayalbagh Educational Insitute, Agra, India pallavijain.t.cms@gmail.com \u2020Department of Mathematics, Dayalbagh Educational Insitute, Agra, India gursaran@dei.ac.in \u2021Department of Mathematics, Dayalbagh Educational Insitute, Agra, India kamal.sri@dei.ac.in\nar X\niv :1\n70 2.\n05 71\n0v 1\n[ cs\n.D S]\n1 9\nFe b\n20 17\nin which they have proposed construction heuristics to generate an initial solution. Noberto et al. [3] highlight the importance of construction heuristics in metaheuristics. They have proposed eight construction heuristics and have compared all the construction heuristics. In this paper, we have proposed three construction heuristics H 1, H 2, H 3. An experiment has been performed to compare all the construction heuristics on the test instances of Grids, Small graphs, Trees and Harwell Boeing graphs, totaling 248 instances of graphs. Experiments reveal that H 1, H 2 and H 3 are able to achieve best results for 87.9%, 43.5% and 37.1% of the total instances respectively, while the best construction heuristic in the literature achieves the best solution for 39.9% of the total instances. We have also compared the results of H 1 with the state-of-the-art metaheuristic general variable neighbourhood search (GVNS) [5] and observed that the proposed construction heuristics improves the results for some of the input instances. It was also observed that GVNS obtains best results for 82.9% instances of all input instances while the heuristic H 1 obtained best results for 82.3% instances of all input instances. Further, in this paper Section 2 presents the construction heuristics proposed in this paper followed by computational experiments to show the efficiency of heuristics in Section 3."}, {"heading": "2 Construction Heuristics", "text": "In this section, three construction heuristics have been proposed. These heuristics construct a layout by iteratively adding vertices to an initially empty layout. In each iteration, heuristic H 1 tries to place a vertex u in the partial layout which minimizes its contribution as well as the contribution of vertices which are already placed in the partial layout. Motivation behind H 2 and H 3 is that if adjacent vertices are closely placed then they contribute to fewer regions. Further, in order to minimize the number of regions to which a vertex contributes, vertices of smaller degree are placed first in the partial layout. In the following sections, we describe the three construction heuristics which are essentially greedy methods."}, {"heading": "2.1 Heuristic H 1", "text": "This procedure is outlined in Algorithm 1. Let layout be the (partial) layout under construction. The set unvisited is the set of vertices of graph G which are not in layout.\nThe time complexity of H 1 is O(n2 \u00b7\u2206(G))."}, {"heading": "2.2 Heuristic H 2", "text": "Algorithm 2 presents heuristic H 2. Time complexity of Heuristic H 2 is O(n2 \u00b7 log n).\nStep 1: unvisited = {1, . . . , n} Step 2: Select a vertex v \u2208 unvisited such that dG(v) is least Step 3: layout = (v) Step 4: unvisited = unvisited \\ {v} Step 5: while |layout| 6= n Step 6: S = {v \u2208 layout : v is adjacent to least number of vertices in unvisited} Step 7: P = {w \u2208 unvisited : w is adjacent to largest number of vertices in S} Step 8: Q = {u \u2208 P : u is adjacent to least number of vertices in unvisited} Step 9: Select v \u2208 Q randomly Step 10: layout = (layout, v) Step 11: unvisited = unvisited \\ {v} Step 12: endwhile\nFigure 2: Algorithm1: Heuristic H 1"}, {"heading": "2.3 Heuristic H 3", "text": "This Heuristic is similar to H 2, but as opposed to the selection in Step 9 of Heuristic H 2, preference is given to a vertex v in the partially constructed layout with least \u03d5(v). Time complexity of H 3 is same as H 2."}, {"heading": "3 Computational Experiments", "text": "In this section we present the computational experiments that were performed to test the effectiveness of the proposed construction heuristics. The code was implemented in Matlab 7.0 and all the experiments were conducted on an Intel i3 based system with 4 GB RAM. The experiment to compare the construction heuristics was performed on the four sets of instances previously used for this problem [3]. The test set includes Small, Harwell-Boeing (HB) graphs, Grids and Trees. Since GVNS was tested on Harwell-Boeing (HB) graphs, Grids and Trees in the literature, therefore, construction heuristic H 1 and GVNS are compared on these instances only. The order of graph ranges from 9 to 2916. For each heuristic H 1, H 2 and H 3, 30 runs were carried out and the best value of vertex separation was recorded."}, {"heading": "3.1 Comparison between Construction Heuristics", "text": "In this section the proposed construction heuristics are compared with those available in the literature. Random represents randomly generated solution. C 1 and C 2 are the construction heuristics proposed in [2] and HA1, HA2, HA3, HA4, HN 1, HN 2, HN 3 and HN 4 have been proposed in [3]. Heuristics H 1, H 2 and H 3 have been presented in this paper. Table 1 presents the average vertex separation for different construction heuristics. The average vertex separation over all the instances are given in the last column \u2032Average\u2032. Results show that H 1 outperforms all the heuristics. Table 2 presents number of best solution achieved using each heuristic. In the table, the last column \u2032Sum\u2032 represents the total number of instances for which heuristic achieves the best value. Number in bold indicates that the value is best in that column. Heuristic H 1 achieves best result for 220 instances out of 248 instances which is equal to 88.71% of the total instances. Similarly, H 2 and H 3 achieve best results for 43.55% and 37.1% instances of total\nStep 1: u = minimium degree vertex of a graph G Step 2: unvisited = V \\ {u} Step 3: layout = (u)\nStep 4: S = sort N(u) in ascending order of the degrees\nStep 5: layout = (layout, S) Step 6: unvisited = unvisited \\ S Step 7: while |layout| 6= |V (G)| Step 8: degree = {degreew = |N(w) \\ layout| : w \u2208 V (G)} Step 9: select a vertex v such that degreev is least but non-zero Step 10: if v /\u2208 layout Step 11: layout = (layout, v) Step 12: unvisited = unvisited \\ v Step 13: endif Step 14: S = N(v) \\ layout Step 15: S\u2032 = sort S according to their values in degree in ascending order Step 16: layout = (layout, S\u2032) Step 17: unvisited = unvisited \\ S\u2032\nFigure 3: Algorithm2: Heuristic H 2\ninstances. Among the existing heuristics, a maximum of 39.92% of the total instances best solutions are obtained by HN 1."}, {"heading": "3.2 Comparison between H 1 and GVNS", "text": "In this section, the best performing construction heuristic H 1 is compared with the metaheuristic General Variable Neighbouhood Strategy (GVNS) [5]. Average vertex separation obtained by GVNS and H 1 are listed in Table 3. Numbers in bold are the minimum in that column. Results show that for Trees, H 1 performs better while performance of GVNS on HB instance is good. When the average is considered over all the instances, performance of GVNS and H 1 is comparable. Table 4 presents the number of best solutions achieved using each heuristic. For grids, GVNS and H 1 both are able to obtain optimal results. For trees, GVNS obtained optimal results for 40 instances out of 50 while H 1 obtained optimal results for all the tree instances. In case of HB instances, GVNS obtained best results for 44 instances out of 62 while H 1 was able to obtain optimal results for 33 instances only. When all the graphs are considered GVNS obtained best results in 136 cases out of 164 which is equal to 82.9% of all input instances while H 1 obtained optimal results in 135 cases which is equal to 82.3% of all input instances."}, {"heading": "4 Conclusion", "text": "In this paper, we have proposed three polynomial time construction heuristics and compared with other construction heuristics. It was observed that these construction heuristics outperform other construction heuristics given in literature. The best performing construction heuristic H 1 was also compared with the state-of-the-art metaheuristic GVNS. This construction heuristic achieves best results in larger number of cases than GVNS. Since a good initial population is\nexpected to converge faster to a near optimal/optimal solution, therefore, initial solutions generated using this construction heuristic in any metaheuristic will lead to high quality solutions."}], "references": [{"title": "Sanchez-Oro, Variable Neighborhood Search for the Vertex Separation Problem", "author": ["Duarte A", "L.F. Escudero", "R. Marti", "N. Mladenovic", "J.J.J. Pantrigo"], "venue": "Computers and Operations Research", "citeRegEx": "2", "shortCiteRegEx": "2", "year": 2012}, {"title": "Comparative Study on Costructive Heuristics for the Vertex Separation Problem, Design of Intelligent Systems Based on Fuzzy Logic, Neural Networks and Nature-Inspired Optimization", "author": ["Garcia N. C", "H.J.F. Huacuja", "J.A.M. Flores", "R.A.P. Rangel", "J.J.G. Barbosa", "J.M.C. Valadez"], "venue": null, "citeRegEx": "3", "shortCiteRegEx": "3", "year": 2015}, {"title": "Addenda to the Survey of Layout Problems, Bulletin of the EATCS", "author": ["J. Petit"], "venue": null, "citeRegEx": "4", "shortCiteRegEx": "4", "year": 2011}, {"title": "Combining intensification and diversification strategies in VNS. An application to the Vertex Separation Problem", "author": ["Sanchez-Oro J", "J.J. Pantrigo", "A. Duarte"], "venue": "Computers and Operations Research", "citeRegEx": "5", "shortCiteRegEx": "5", "year": 2014}], "referenceMentions": [{"referenceID": 2, "context": "Vertex Separation minimization problem (VSMP) is to find a layout \u03c6\u2217 \u2208 \u03a6(G) of a graph G = (V,E) which minimizes the vertex separation (VS ) where V S = maxi\u2208[|V |] \u03b4(i, \u03c6,G) for a layout \u03c6 where, \u03b4(i, \u03c6,G) = |u \u2208 L(i, \u03c6,G) : \u2203v \u2208 R(i, \u03c6,G) \u2227 (u, v) \u2208 E(G)|, L(i, \u03c6,G) = {u \u2208 V : \u03c6(u) \u2264 i} and R(i, \u03c6,G) = {u \u2208 V : \u03c6(u) > i} [1, 4].", "startOffset": 325, "endOffset": 331}, {"referenceID": 0, "context": "VSMP is NP-complete in general and has applications in VLSI design, graph drawing and computer language compiler design [2].", "startOffset": 120, "endOffset": 123}, {"referenceID": 2, "context": "VSMP is polynomially solvable for grids, trees, permutation graphs and cographs [1, 4].", "startOffset": 80, "endOffset": 86}, {"referenceID": 0, "context": "This problem has been explored using metaheuristics namely, variable neighbourhood search by [2, 5]", "startOffset": 93, "endOffset": 99}, {"referenceID": 3, "context": "This problem has been explored using metaheuristics namely, variable neighbourhood search by [2, 5]", "startOffset": 93, "endOffset": 99}, {"referenceID": 1, "context": "[3] highlight the importance of construction heuristics in metaheuristics.", "startOffset": 0, "endOffset": 3}, {"referenceID": 3, "context": "We have also compared the results of H 1 with the state-of-the-art metaheuristic general variable neighbourhood search (GVNS) [5] and observed that the proposed construction heuristics improves the results for some of the input instances.", "startOffset": 126, "endOffset": 129}, {"referenceID": 1, "context": "The experiment to compare the construction heuristics was performed on the four sets of instances previously used for this problem [3].", "startOffset": 131, "endOffset": 134}, {"referenceID": 0, "context": "C 1 and C 2 are the construction heuristics proposed in [2] and HA1, HA2, HA3, HA4, HN 1, HN 2, HN 3 and HN 4 have been proposed in [3].", "startOffset": 56, "endOffset": 59}, {"referenceID": 1, "context": "C 1 and C 2 are the construction heuristics proposed in [2] and HA1, HA2, HA3, HA4, HN 1, HN 2, HN 3 and HN 4 have been proposed in [3].", "startOffset": 132, "endOffset": 135}, {"referenceID": 3, "context": "In this section, the best performing construction heuristic H 1 is compared with the metaheuristic General Variable Neighbouhood Strategy (GVNS) [5].", "startOffset": 145, "endOffset": 148}, {"referenceID": 3, "context": "Table 3: Average vertex separation for GVNS [5] and H 1 Heuristics Grid(52) Tree(50) HB(62) Average GVNS 28.", "startOffset": 44, "endOffset": 47}], "year": 2017, "abstractText": "Vertex Separation Minimization Problem (VSMP) consists of finding a layout of a graph G = (V,E) which minimizes the maximum vertex cut or separation of a layout. It is an NPcomplete problem in general for which metaheuristic techniques can be applied to find near optimal solution. VSMP has applications in VLSI design, graph drawing and computer language compiler design. VSMP is polynomially solvable for grids, trees, permutation graphs and cographs. Construction heuristics play a very important role in the metaheuristic techniques as they are responsible for generating initial solutions which lead to fast convergence. In this paper, we have proposed three construction heuristics H 1, H 2 and H 3 and performed experiments on Grids, Small graphs, Trees and Harwell Boeing graphs, totaling 248 instances of graphs. Experiments reveal that H 1, H 2 and H 3 are able to achieve best results for 88.71%, 43.5% and 37.1% of the total instances respectively while the best construction heuristic in the literature achieves the best solution for 39.9% of the total instances. We have also compared the results with the state-of-the-art metaheuristic GVNS and observed that the proposed construction heuristics improves the results for some of the input instances. It was found that GVNS obtained best results for 82.9% instances of all input instances and the heuristic H 1 obtained best results for 82.3% of all input instances.", "creator": "LaTeX with hyperref package"}}}