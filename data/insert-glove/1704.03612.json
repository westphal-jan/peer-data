{"id": "1704.03612", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "12-Apr-2017", "title": "Finding Modes by Probabilistic Hypergraphs Shifting", "abstract": "In advises this naxalism paper, bussa we develop breeziness a novel paradigm, namely dexin hypergraph bagai shift, l.e.g.i.o.n. to find sulthan robust rt graph buttresses modes bechke by probabilistic voting strategy, military-grade which pinnipeds are karantina semantically debo sound argishti besides the self - 2,015-megawatt cohesiveness anti-white requirement in forming graph airedale modes. tomos Unlike sourcing the northcliffe existing skilbeck techniques to seek graph modes ms&lr by 3105 shifting vertices nomis based erkin on pair - chigi wise lacresha edges (i. e, erving an glanford edge ikim with $ kanode 2 $ 300-member ends ), 3-for-5 our jasons paradigm is 2009-12 based harari on 24.25 shifting utut high - glorify order edges (hyperedges) qucha to heraclides deliver 178.9 graph modes. pollex Specifically, aqu\u00ed we convert the 1-19 problem of deimel seeking dillen graph modes 20b as the taiwan-based problem of seeking maximizers of cuneiform a luepnitz novel matrix objective par-5 function cawsand with putrid the aim adobo to generate good half-space graph trachsel modes based on aidil sifting baillie edges in j\u00f3zef hypergraphs. As proto-celtic a deuterocanonical result, the generated graph modes based on dense subhypergraphs may dimartino more accurately rem capture tohoshinki the gabapentin object semantics besides the u$ self - knop cohesiveness breakstone requirement. acidulated We dass also formally prove mischaracterization that & our technique is folbre always biedenharn convergent. filipino-american Extensive riverfront empirical studies 1985-89 on wisn synthetic 2,557 and real danareksa world aalam data sets protostars are conducted on clustering lrdg and graph stok matching. precession They ophiusa demonstrate that fleener our techniques significantly 967,000 outperform kawkab the tekirdag existing \u0111ura\u0111 techniques.", "histories": [["v1", "Wed, 12 Apr 2017 04:02:04 GMT  (675kb)", "http://arxiv.org/abs/1704.03612v1", "Fixing some minor issues in PAKDD 2014"]], "COMMENTS": "Fixing some minor issues in PAKDD 2014", "reviews": [], "SUBJECTS": "cs.AI", "authors": ["yang wang", "lin wu"], "accepted": false, "id": "1704.03612"}, "pdf": {"name": "1704.03612.pdf", "metadata": {"source": "CRF", "title": "Finding Modes by Probabilistic Hypergraphs Shifting", "authors": ["Yang Wang", "Lin Wu"], "emails": ["wangy@cse.unsw.edu.au", "lin.wu@uq.edu.au"], "sections": [{"heading": null, "text": "ar X\niv :1\n70 4.\n03 61\n2v 1\n[ cs\n.A I]\n1 2\nA pr\n2 01\nKey words: Hypergraphs, Mode Seeking, Probabilistic Voting"}, {"heading": "1 Introduction", "text": "Seeking graph based modes is of great importance to many applications in machine learning literature, e.g., image segmentation [9], feature matching [3]. In order to find the good modes of graphs, Pavan et al. [16] converted the problem of mode seeking into the problem of discovering dense subgraphs, and proposed a constrained optimization function for this purpose. Liu et al. [14] proposed another method, namely graph shift. It generalized the idea of non-parametric data points shift paradigms (i.e., Mean Shift [4] and Medoid Shift [17\u201319] to graph shift for graph mode seeking). An iterative method is developed to get the local maximizers, of a constrained objective function, as the good modes of graphs. While the graph (vertices) shift paradigm may deliver good results in many cases for graph mode seeking, we observe the following limits. Firstly, the graph modes generated based on shifting vertices only involve the information of pair-wise edges between vertices. As a result, the generated graphs modes may not always be able to precisely capture the overall semantics of objects.\n2 Yang Wang, Lin Wu\nSecondly, the graph shift algorithm is still not strongly robust to the existence of a large number of outliers. Besides, no theoretical studies are conducted to show the convergence of iteration of shifting.\nOur Approach: Observing the above limits, we propose a novel paradigm, namely hypergraph shift, aimed at generating graph modes with high order information. Different from graph shift paradigms that only shift vertices of graphs based on pair-wise edges, our technique shifts high order edges (hyperedges in hypergraphs). Our technique consists of three key phases, 1) mode seeking (section 4.1) on subhypergraphs, 2) probabilistic voting (section 4.2) to determine a set of hyperedges to be expanded in mode seeking, and 3) iteratively perform the above two stages until convergence.\nBy these three phases, our approach may accurately capture the overall semantics of objects. Fig. 1 illustrates an example where the result of our approach for hypergraph shift can precisely capture the the scene of a person riding on a bicycle. Nevertheless, the result performed by graph shift method in [14] fails to capture the whole scene; instead, by only focusing on the requirement of self-cohesiveness, three graph modes are generated.\nContributions: To the best of our knowledge, this is the first work based on shifting hyperedges to conduct graph mode seeking. Our contributions may be summarized as follows. (1) We specify the similarities on hyperedges, followed by an objective function for mode seeking on hypergraphs. (2) An effective hypergraph shift paradigm is proposed. Theoretical analysis for hypergraph shift is also provided to guarantee its convergence. The proposed algorithm is naturally robust to outliers by expanding modes via the probabilistic voting strategy. (3) Extensive experiments are conducted to verify the effectiveness of our techniques over both synthetic and real-world datasets.\nRoadmap: We structure our paper as follows: The preliminaries regarding hypergraph are introduced in section 2, followed by our technique for hypergraph shift in sections 3 and 4. Experimental studies are performed in section 5, and we conclude this paper in section 6."}, {"heading": "2 Probabilistic Hypergraph Notations", "text": "Different from simple graph, each edge of hypergraph (known as hyperedge) can connect more than two vertices. Formally, we denote a weighted hypergraph as G = (V , E ,W), with vertex set as V = {v1, v2, . . . , v|V|}, hyperedge set as E = {e1, e2, . . . , e|E|}, and W = {w(e1), w(e2), \u00b7 \u00b7 \u00b7, w(e|E|)}, where w(ei) is the\n3 weight of ei. The relationship between the hyperedges and vertices is defined by incidence matrix H \u2208 R|V|\u00d7|E|. Instead of assigning a vertex vi to a hyperedge ej with a binary decision, we establish the values probabilistically [5, 8]. Specifically, we define the entry hvi,ej of H as Eq. (1).\nhvi,ej =\n{\np(vi|ej), if vi \u2208 ej ; 0, otherwise.\n(1)\nwhere p(vi|ej) describes the likelihood that a vertex vi is connected to hyperedge ej . Then we define a diagonal matrix De regarding the degree of all hyperedges, with De(i, i) = \u03b4(ei) = \u2211\nv\u2208V hv,ei , and a diagonal matrix Dv regarding the degree of all vertices, with Dv(i, i) = \u2211\ne\u2208E hvi,ew(e). Based on that, to describe the similarity between hyperedges, we define a novel hyperedge-adjacency matrix M \u2208 R|E|\u00d7|E| in the context of hypergraph. Specifically, we have\nM(i, j) =\n{\nw(ei) |ei\u2229ej | \u03b4(ei) + w(ej) |ei\u2229ej | \u03b4(ej) i 6= j 0, otherwise (2)\nExample 1. Consider the case in Fig.2, for e2 and e3, the only common vertex is v2, then, we have |e2 \u2229 e3|=1, and the affinity value between e2 and e3 is M(2, 3) = w(e2) \u00b7 1 2 + w(e3) \u00b7 1 2 = w(e2)+w(e3) 2 .\nNow, we describe the modes of hypergraph."}, {"heading": "3 Modes of Hypergraph", "text": "We consider the mode of a hypergraph as a dense subhypergraph consisting of hyperedges with high self-compactness. We first define the hypergraph density, then formulate the modes of a hypergraph, which leads to our hypergraph shift algorithm in section 4.\nHypergraph Density. We describe hypergraph G with n hyperedges by probabilistic coordinates fashion as p \u2208 \u2206n, where \u2206n = {p|p \u2265 0, |p|1 =\n4 Yang Wang, Lin Wu\n1}, |p|1 is the L1 norm of vector p, and p = {p1,p2, . . . ,pn}. Specifically, pi indicates the probability of ei contained by the probabilistic cluster of G. Then the affinity value between any pair-wise x \u2208 \u2206n and y \u2208 \u2206n is defined as m(x,y) = \u2211\ni,j M(i, j)xiyj = x TMy. The hypergraph density or self-\ncohesiveness of G, is defined as Eq. (3).\nF(p) = pTMp. (3)\nIntuitively, hypergraph density can be interpreted by the following principle. Suppose hyperedge set E is mapped to I = {im|m = 1, . . . , |E|}, which is the representation in a specific feature space regarding all hyperedges in E , where we define a kernel function K : I\u00d7 I \u2192 R. Specifically, K(im, in) = M(m,n). Thus, the probabilistic coordinate p can be interpreted to be a probability distribution, that is, the probability of im occurring in a specific subhypergraph is pm. Assume that the distribution is sampled N times, then the number of data im is Npm. For im, the density is d(im) = \u2211 n NpmK(m,n)\nN , then we have the average density of the data set:\nd =\n\u2211 m Npmd(im)\nN =\n\u2211\nm6=n\npmK(im, in)pn = p T Mp (4)\nDefinition 1. (Hypergraph Mode) The mode of a hypergraph G is represented as a dense subhypergraph that locally maximizes the Eq. (3).\nGiven a vector p \u2208 \u2206n, the support of p is defined as the set of indices corresponding to its nonzero components: \u03b8(p) = {i \u2208 |E| : pi 6= 0}. Thus, its corresponding subhypergraph is G\u03b8(p), composed of all vertices whose indices are in \u03b8(p). If p\u2217 is a local maximizer i.e., the mode of F(p), then G\u03b8(p\u2217) is a dense subhypergraph. Hence, the problem of mode seeking on a hypergraph is equivalent to maximizing the density measure function F(p), which is taken as the criterion to evaluate the goodness of any subhypergraph.\nTo find the modes, i.e., the local maximizers of Eq. (3), we classify it into the standard quadratic program (StQP) [16, 1]:\nmaxF(p), s.t.p \u2208 \u2206n, (5)\nAccording to [16, 1], a local maximizer p\u2217 meets the Karush-Kuhn-Tucker(KKT) condition. In particular, there exist n + 1 real Lagrange multipliers \u00b5i > 0(1 \u2264 i \u2264 n) and \u03bb, such that:\n(Mp)i \u2212 \u03bb+ \u00b5i = 0 (6)\nfor all i = 1, . . . , n, and \u2211n i=1 p \u2217 i\u00b5i = 0. Since p \u2217 and \u00b5i are nonnegative, it indicates that i \u2208 \u03b8(p\u2217) implies \u00b5i = 0. Thus, the KKT condition can be rewritten as:\n(Mp\u2217)i\n{\n= \u03bb, i \u2208 \u03b8(p\u2217); 6 \u03bb, otherwise.\n(7)\nwhere (Mp\u2217)i is the affinity value between p \u2217 and ei.\n5"}, {"heading": "4 Hypergraph Shift Algorithm", "text": "Commonly the hypergraph can be very large, a natural question is how to perform modes seeking on a large hypergraph? To answer this question, we perform mode seeking on subhypergraph, and determine whether it is the mode of the hypergraph. If not, we shift to a new subhypergraph by expanding the neighbor hyperedges of the current mode to perform mode seeking. Prior to that, we study the circumstances that determine whether the mode of a subhypergraph is the mode of that hypergraph.\nAssume p\u2217S is the mode of subhypergraph S containing m = |\u03b8(p \u2217 S)| hyperedges, then we expand the m dimensional p\u2217S to |E| dimensional p \u2217 by filling zeros into the components, whose indices are in the set of G\u2212S. Based on that, Theorem 1 is presented to determine whether p\u2217S is the mode of hypergraph G.\nTheorem 1. A mode p\u2217S of the subgraph S is also the mode of hypergraph G if and only if for all hyperedge ej, m(p\n\u2217, Ij) 6 F(p\u2217) = FS(p\u2217S), j \u2208 G \u2212 S, where p\u2217 is computed from p\u2217S by filling zeros to the elements whose indices are in G\u2212S and Ij is the vector containing only hyperedge ei where its i-th element is 1 with others 0. Proof. Straightforwardly, \u03b8(p\u2217) = \u03b8(p\u2217S), F(p \u2217) = FS(p\u2217S). Due to m(p\n\u2217, Ij) 6 F(p\u2217) = FS(p\u2217S) = \u03bb, \u2200j \u2208 G\u2212 S, p\n\u2217 is the mode of hypergraph G. Otherwise if m(p\u2217, Ij) > F(p\u2217) = \u03bb, which indicates that p\u2217 violates the KKT condition, thus it is not the mode of G.\nNext, we introduce our hypergraph shift algorithm, which consists of two steps: The first step performs mode seeking on an initial subhypergraph. If the mode obtained in the first step is not the mode of that hypergraph, it shifts to a larger subhypergraph by expanding the support of the current mode to its neighbor hyperedges using the technique, namely probabilistic voting. The above steps alternatively proceed until the mode of hypergraph is obtained."}, {"heading": "4.1 Higher-order Mode Seeking", "text": "Given an initialization of p(0), we find solutions of Eq. (5) by using the replicator dynamics, which is a class of continuous and discrete-time dynamical systems arising in evolutionary game theory [28]. In our setting, we use the following form:\npi(t+ 1) = pi(t) (M \u00b7 p(t))i p(t)TMp(t) , i = 1, . . . , |E| (8)\nIt can be seen that the simplex \u2206n is invariant under these dynamics, which means that every trajectory starting in \u2206n will remain in \u2206n for all future times. Furthermore, according to [28], the objective function of Eq. (3) strictly increases along any nonconstant trajectory of Eq. (8), and its asymptotically stable points are in one-to-one with local solutions of Eq. (5).\n6 Yang Wang, Lin Wu"}, {"heading": "4.2 Probabilistic Voting", "text": "We propose to find the dominant seeds of the subhypergraph, from which we perform hypergraph shift algorithm. Before presenting the formal definition of dominant seeds, we start with the intuitive idea that the assignment of hyperedge-weights induces an assignment of weights on the hyperedges. Therefore, the average weighted degree of a hyperedge ek from subhypergraph S is defined as:\ngS(ek) = 1\n|S|\n\u2211\nej\u2208S\nM(k, j) (9)\nNote that gek(ek) = 0 for any ek \u2208 S. Moreover, if ej * S, we have:\n\u03c8S(ei, ej) = M(i, j)\u2212 gS(ei) (10)\nIntuitively, \u03c8S(ei, ej) measures the relative closeness between ej and ei with respect to the average closeness between ei and its neighbors in S.\nLet S \u2286 E be a nonempty subset of hyperedges, and ei \u2208 S. The weight of ei is given as\nwS(ei) =\n{\n1, if |S| =1; \u2211\nej\u2208S\u2212{ei}\n\u03c8S\u2212{ei}(ej , ei)wS\u2212{ei}(ej), otherwise. (11)\nwS(ei) measures the overall closeness between hyperedge ei and other hyperedges of S \u2212{ei}. Moreover, the total weight of S is defined as W (S) = \u2211\nei\u2208S wS(ei).\nFinally, we formally define the dominant seed of subhypergraph S as follows.\nDefinition 2. (Dominant Seed) The dominant seed of a subhypergraph S is the subset of hyperedges with higher closeness than others.\nBesides, the closeness of the dominant seed is evaluated as follows:\np(ei|S) =\n{\nwS(ei) W (S) , if ei \u2208 S\n0, otherwise. (12)\nWe utilize dominat seeds to expand the current subhypergraph, which is named probabilistic voting that works by the following priciple. To expand S to a\n7 new subhypergraph, we decrease the possibility of the hyperedges in the current mode, while increase the possibility of hyperegdes with large rewards not belonging to the current mode. As a result, the possibility of hyperedges that are neighborhoods of the hyperedges in S with the large value of p(ei|S) is increased. We present an example in Fig.3 to illustrate that.\nParticularly, we calculate the shifting vector \u2206p, such that F(p\u2217 + \u2206p) > F(p\u2217). According to Theorem 1, there exist some hyperedges ei, such that m(p\u2217, Ii) > F(p\u2217), i \u2208 G \u2212 S. We define a direction vector h as hi = p\u2217i \u2212 1 if i \u2208 \u03b8(p\u2217), otherwise, hi = max{ \u2211\nej\u2229ei 6=\u2205 p(ej |S)(m(p\u2217, Ii)\u2212F(p\u2217)), 0}. The\nabove definition of hi for i \u2208 \u03b8(p \u2217), decreases the possibility of ei in the current mode. However, we try to preserve the dominant seeds with a larger value of p\u2217i \u2212 1, and increase the possibility of the hyperedges ej \u2208 G \u2212 S that are the neighborhoods of dominant seeds of the current mode.\nAssume F(h) = \u03b7, then we have: Q(c) = F(p\u2217 + ch)\u2212F(p\u2217) (13)\n= \u03b7c2 + 2c(p\u2217)TMh\nWe want to maximize Eq. (13), which is the quadratic function of c. Since \u2206 = 4(p\u2217Mh)2 > 0, if \u03b7 < 0, then we have c = p \u2217 Mh \u03bb . Otherwise, for i \u2208 \u03b8(p\u2217), we have p\u2217i+c(p \u2217 i\u22121) \u2265 0, then c \u2264 mini{ p\u2217i 1\u2212p\u2217\ni\n}. Thus, c\u22c6 = min{ p \u2217Mh \u03bb ,mini{ p\u2217i\n1\u2212p\u2217 i\n},\nand \u2206p = c\u22c6h, which is the expansion vector. We summarize the procedure of hypergraph shift in Algorithm 1.\nAlgorithm 1: Hypergraph Shift Algorithm.\nInput: The hyperedge-adjacency matrix M of hypergraph G, the start vector p (a cluster of hyperedges). Output: The mode of hypergraph G. while p is not the mode of G do\nEvolve p towards the mode of subhypergraph G\u03b8(p) by Eq. (8); if p is not the mode of hypergrah G then\nExpand p by using expansion vector \u2206p; Update p by mode seeking;\nelse\nreturn;\nOne may wonder whether Algorithm 1 converges, we answer this question in theorem 2.\nTheorem 2. Algorithm 1 is convergent. Proof. The mode sequence set {(p\u2217)(t)}\u221et=1 \u2282 U generated by Algorithm 1 is compact. We construct \u2212F(p), which is a continuous and strict decreasing function over the trajactory of sequence set. Assume the solution set is \u0393 , then the mode sequence generated by Algorithm 1 is closed on U\u2212\u0393 . The above three conclusions are identical to the convergence conditions of Zangwill convergence theorem [30].\n8 Yang Wang, Lin Wu"}, {"heading": "5 Experimental Evaluations", "text": "In this section, we conduct extensive experiments to evaluate the performance of hypergraph shift. Specific experimental setting are elaborated in each experiment.\nCompetitors.We compare our algorithm against a few closely related methods, which are introduced as follows.\nFor clustering evaluations, we consider the following competitors:\n\u2013 The method proposed by Liu et al. in [13], denote by Liu et al. in follows. \u2013 The approach presented by Bulo et al. in [2], denote by Bulo et al. in follows. \u2013 Efficient hypergraph clustering [12] (EHC) aims to handle the higher-order\nrelationships among data points and seek clusters by iteratively updating the cluster membership for all nodes in parallel, and converges relatively fast.\nFor graph matching, we compare our method to the state-of-the-arts below:\n\u2013 Graph shift (GS). \u2013 Two hypergraph matching methods (TM) [6] and (PM) [31]. \u2013 SC+IPFP. The algorithm of spectral clustering [10] (SC), enhanced by the\ntechnique of integer projected fixed point [11], namely SC+IPFP is an effective method in graph matching. Thus, it is suitable to compare our method against SC+IPFP in terms of graph matching."}, {"heading": "5.1 Clustering Analysis", "text": "Consider that hypergraph shift is a natural clustering tool, and all the hyperedges shifting towards the same mode should belong to a cluster. To evaluate the clustering performance, we compare HS against Liu et al. , Bulo et al. and EHC over the data set of five crescents, as shown in Fig.4.\nWe performed extensive tests including clustering accuracy and noise robustness on five crescents gradually decreasing sampling density from 1200 pts\nto 100 pts. We used the standard clustering metric, normalized mutual information (NMI). The NMI accuracy are computed for each method in Fig.5 (a), with respect to decreasing sample points and increasing outliers. It shows that hypergraph shift has the best performance even in sparse data, whereas EHC quickly degenerates from 600 pts. The accuracies of methods in Liu et al. and Bulo et al. are inferior to EHC, which is consistent to the results in [12]. To test the robustness against noises, we add Gaussian noise \u01eb, such that \u01eb \u223c N (0, 4), in accordance with [14], to the five crescents samples, and re-compute the NMI values. As illustrated in Fig.5 (b), the three baselines of Liu et al. , Bulo et al. and EHC drop faster than hypergraph shift. This is because the eigenvectors required by Liu et al. are affected by all weights, no matter they are deteriorated or not; EHC is better than Liu et al. and Bulo et al. , however, it performs clustering by only considering the strength of affinity relationship within a hyperedge, which is not as robust against noises as the mode with high-order constraints; Hypergraph shift, in contrast, can find a dense high-order subhypergraph, which is more robust to noises.\nWe are interested in another important aspect: speed of convergence, under varying number of data points. In Fig.6, we present the evaluation of the computational cost of the four methods with varying number of data points. Fig.6 (a) shows the average computational time per iteration of each method against the number of samples. We can see that the computation time per step for each method varies almost linearly with the number of data points. As expected, the least expensive method per step is Liu et al. , which performs update in sequence. And our method proceeds with expansion and dropping strategy, in the expense of more time. However, the drawback of Liu et al. is its large iterations to convergence. In contrast, both ours and EHC are relatively stable w.r.t. the number of samples. Our method converges very fast, requiring on average 10 iterations. This figure experimentally show that our method, by taking larger steps towards a maximum, has significantly better speed of convergence with slightly better accuracy.\n10 Yang Wang, Lin Wu"}, {"heading": "5.2 Graph Matching", "text": "In this part, we present some experiments on graph matching problems. We will show that this graph matching problem is identical to mode seeking on a graph with certain amount of noises and outliers. Following the experiment setup of [14], the equivalence of graph matching problem to mode seeking can be described as follows. Suppose there are two sets of feature points, P and Q, from two images. For each point p \u2208 P , we can find some similar points q \u2208 Q, based on local features. Each pair of (p, q) is a possible correspondence and all such pairs form the correspondence set C = {(p, q)|p \u2208 P, q \u2208 Q}. Then a graph G is constructed based on C with each vertex of G representing a pair in C. Edge e(vi, vj) connecting vi and vj reflects the relation between correspondence ci and cj . Due to space limitations, we refer the interested readers to [14] for details. Afterwards, the hyperedge construction and weight calculation are conducted according to our technique section. We use the PASCAL 2012 [7] database as benchmark in this evaluation. The experiments are difficult due to the large number of outliers, that are, large amount of vertices and most of them represent incorrect correspondence, and also due to the large intra-category variations in shape present in PASCAL 2012 itself. Under each category, we randomly select two images as a pair and calculate the matching rate by each method. We run 50 times on each category and the averaged results are report in Table 1. The final matching rate is averaged over rate values of all categories.\nWe also conducted shape matching [15] on the affinity data on the database from ShapeMatcher1, which contains 21 objects with 128 views for each object. A few examples of dog\u2019s shape are shown in Fig.7. For each shape, we compute the matching score as the affinity value using the shape matching method [15], thus obtain a 2688\u00d72688 affinity matrix. We compare our method with EHC and GS. The results are shown in Table 2. Both GS and HS can specify the number\n1http://www.cs.toronto.edu/ dmac/ShapeMatcher/index.html\n11\nof objects, however, HS outperforms GS in terms of precision due to the fact that HS considers high-order relationship among vertices rather than pair-wise relation."}, {"heading": "6 Conclusion", "text": "In this paper, we propose a novel hypergraph shift algorithm aimed at finding the robust graph modes by probabilistic voting strategy, which are semantically sound besides the self-cohesiveness. Experimental studies show that our paradigm outperforms the state-of-the-art clustering and matching approaches observed from both synthetic and real-world data sets. Future work would like to incorporate the multi-view features [26],[21],[23],[25], [27],[20],[24],[29] or highlevel deep representations [22] for improvement."}], "references": [{"title": "Branch-and-bound approahces to standard quadratic optimization problems", "author": ["I.M. Bomze"], "venue": "Journal of Global Optimization,", "citeRegEx": "1", "shortCiteRegEx": "1", "year": 2002}, {"title": "Pellilo. A game-theoretic approach to hypergraph clustering", "author": ["M.S. Bulo"], "venue": "In NIPS,", "citeRegEx": "2", "shortCiteRegEx": "2", "year": 2009}, {"title": "Progressive graph matching: making a move of graphs via probabilistic voting", "author": ["M. Cho", "K.M. Lee"], "venue": "In CVPR,", "citeRegEx": "3", "shortCiteRegEx": "3", "year": 2012}, {"title": "Mean shift: A robust approach toward feature space analysis", "author": ["D. Comaniciu", "P. Meer"], "venue": "TPAMI, 24(5):603\u2013619,", "citeRegEx": "4", "shortCiteRegEx": "4", "year": 2002}, {"title": "Interactive image segmentation using probabilistic hypergraphs", "author": ["L. Ding", "A. Yilmaz"], "venue": "Pattern Recognition,", "citeRegEx": "5", "shortCiteRegEx": "5", "year": 2010}, {"title": "A tensor-based algorithm for high-order graph matching", "author": ["O. Duchenme", "F. Bach", "I. Kweon", "J. Ponce"], "venue": "In CVPR,", "citeRegEx": "6", "shortCiteRegEx": "6", "year": 2009}, {"title": "The PASCAL Visual Object Classes Challenge 2012", "author": ["M. Everingham", "L. Van Gool", "C.K.I. Williams", "J. Winn", "A. Zisserman"], "venue": null, "citeRegEx": "7", "shortCiteRegEx": "7", "year": 2012}, {"title": "Image retrieval via probabilistic hypergraph ranking", "author": ["Y. Huang", "Q. Liu", "S. Zhang", "D.N. Metaxas"], "venue": "In CVPR,", "citeRegEx": "8", "shortCiteRegEx": "8", "year": 2010}, {"title": "Higher-order correlation clustering for image segmentation", "author": ["S. Kim", "S. Nowozin", "P. Kohli", "C.D. Yoo"], "venue": "In NIPS,", "citeRegEx": "9", "shortCiteRegEx": "9", "year": 2011}, {"title": "A spectral technique for correspondence problems using pairwise constraints", "author": ["M. Leoradeanu", "M. Hebert"], "venue": "In ICCV,", "citeRegEx": "10", "shortCiteRegEx": "10", "year": 2005}, {"title": "Integer projected fixed point for graph matching and map inference", "author": ["M. Leordeanu", "M. Hebert", "R. Sukthankar"], "venue": "In NIPS,", "citeRegEx": "11", "shortCiteRegEx": "11", "year": 2009}, {"title": "Efficient hypergraph clustering", "author": ["M. Leordeanu", "C. Sminchisescu"], "venue": "In AISTATS,", "citeRegEx": "12", "shortCiteRegEx": "12", "year": 2012}, {"title": "Robust clustering as ensembles of affinity relations", "author": ["H. Liu", "L. Latecki", "S. Yan"], "venue": "In NIPS,", "citeRegEx": "13", "shortCiteRegEx": "13", "year": 2010}, {"title": "Robust graph mode seeking by graph shift", "author": ["H. Liu", "S. Yan"], "venue": "In ICML,", "citeRegEx": "14", "shortCiteRegEx": "14", "year": 2010}, {"title": "From skeletons to bone graphs: medial abstrations for object recognition", "author": ["D. Macrini", "K. Siddiqi", "S. Dickinson"], "venue": "In CVPR,", "citeRegEx": "15", "shortCiteRegEx": "15", "year": 2008}, {"title": "Dominant sets and pairwise clustering", "author": ["M. Pavan", "M. Pelillo"], "venue": "TPAMI, 29(1):167\u2013171,", "citeRegEx": "16", "shortCiteRegEx": "16", "year": 2007}, {"title": "Mode seeking by medoidshifts", "author": ["Y. Sheikh", "E.A. Khan", "T. Kanade"], "venue": "In ICCV,", "citeRegEx": "17", "shortCiteRegEx": "17", "year": 2007}, {"title": "Geometric median-shift over riemannian manifolds", "author": ["Y. Wang", "X. Huang"], "venue": "In PRICAI,", "citeRegEx": "18", "shortCiteRegEx": "18", "year": 2010}, {"title": "Clustering via geometric median shift over riemannian manifolds", "author": ["Y. Wang", "X. Huang", "L. Wu"], "venue": "Information Science,", "citeRegEx": "19", "shortCiteRegEx": "19", "year": 2013}, {"title": "Shifting multi-hypergraphs via collaborative probabilistic voting", "author": ["Y. Wang", "X. Lin", "L. Wu", "Q. Zhang", "W. Zhang"], "venue": "Knowl. Inf. Syst,", "citeRegEx": "20", "shortCiteRegEx": "20", "year": 2016}, {"title": "Effective multi-query expansions: Robust landmark retrieval", "author": ["Y. Wang", "X. Lin", "L. Wu", "W. Zhang"], "venue": "In ACM Multimedia,", "citeRegEx": "21", "shortCiteRegEx": "21", "year": 2015}, {"title": "Effective multi-query expansions: Collaborative deep networks for robust landmark retrieval", "author": ["Y. Wang", "X. Lin", "L. Wu", "W. Zhang"], "venue": "IEEE Trans. Image Processing,", "citeRegEx": "22", "shortCiteRegEx": "22", "year": 2017}, {"title": "Lbmch: Learning bridging mapping for cross-modal hashing", "author": ["Y. Wang", "X. Lin", "L. Wu", "W. Zhang", "Q. Zhang"], "venue": "In ACM SIGIR,", "citeRegEx": "23", "shortCiteRegEx": "23", "year": 2015}, {"title": "Robust subspace clustering for multi-view data by exploiting correlation consensus", "author": ["Y. Wang", "X. Lin", "L. Wu", "W. Zhang", "Q. Zhang", "X. Huang"], "venue": "IEEE Trans. Image Processing,", "citeRegEx": "24", "shortCiteRegEx": "24", "year": 2015}, {"title": "Towards metric fusion on multi-view data: a cross-view based graph random walk approach", "author": ["Y. Wang", "X. Lin", "Q. Zhang"], "venue": "In ACM CIKM,", "citeRegEx": "25", "shortCiteRegEx": "25", "year": 2013}, {"title": "Iterative views agreement: An iterative low-rank based structured optimization method to multi-view spectral clustering", "author": ["Y. Wang", "W. Zhang", "L. Wu", "X. Lin", "M. Fang", "S. Pan"], "venue": "In IJCAI,", "citeRegEx": "26", "shortCiteRegEx": "26", "year": 2016}, {"title": "Unsupervised metric fusion over multiview data by graph random walk-based cross-view diffusion", "author": ["Y. Wang", "W. Zhang", "L. Wu", "X. Lin", "X. Zhao"], "venue": "IEEE Trans. Neural Netw. Learning Syst,", "citeRegEx": "27", "shortCiteRegEx": "27", "year": 2017}, {"title": "Evolutionary game theory", "author": ["J.W. Weibull"], "venue": null, "citeRegEx": "28", "shortCiteRegEx": "28", "year": 1995}, {"title": "Robust hashing for multi-view data: Jointly learning lowrank kernelized similarity consensus and hash functions", "author": ["L. Wu", "Y. Wang"], "venue": "Image Vision Comput,", "citeRegEx": "29", "shortCiteRegEx": "29", "year": 2017}, {"title": "Nonlinear programming: a unified approach", "author": ["W. Zangwill"], "venue": null, "citeRegEx": "30", "shortCiteRegEx": "30", "year": 1969}, {"title": "Probabilistic graph and hypergraph matching", "author": ["R. Zass", "A. Shashua"], "venue": "In CVPR,", "citeRegEx": "31", "shortCiteRegEx": "31", "year": 2008}], "referenceMentions": [{"referenceID": 8, "context": ", image segmentation [9], feature matching [3].", "startOffset": 21, "endOffset": 24}, {"referenceID": 2, "context": ", image segmentation [9], feature matching [3].", "startOffset": 43, "endOffset": 46}, {"referenceID": 15, "context": "[16] converted the problem of mode seeking into the problem of discovering dense subgraphs, and proposed a constrained optimization function for this purpose.", "startOffset": 0, "endOffset": 4}, {"referenceID": 13, "context": "[14] proposed another method, namely graph shift.", "startOffset": 0, "endOffset": 4}, {"referenceID": 3, "context": ", Mean Shift [4] and Medoid Shift [17\u201319] to graph shift for graph mode seeking).", "startOffset": 13, "endOffset": 16}, {"referenceID": 16, "context": ", Mean Shift [4] and Medoid Shift [17\u201319] to graph shift for graph mode seeking).", "startOffset": 34, "endOffset": 41}, {"referenceID": 17, "context": ", Mean Shift [4] and Medoid Shift [17\u201319] to graph shift for graph mode seeking).", "startOffset": 34, "endOffset": 41}, {"referenceID": 18, "context": ", Mean Shift [4] and Medoid Shift [17\u201319] to graph shift for graph mode seeking).", "startOffset": 34, "endOffset": 41}, {"referenceID": 13, "context": "Nevertheless, the result performed by graph shift method in [14] fails to capture the whole scene; instead, by only focusing on the requirement of self-cohesiveness, three graph modes are generated.", "startOffset": 60, "endOffset": 64}, {"referenceID": 4, "context": "Instead of assigning a vertex vi to a hyperedge ej with a binary decision, we establish the values probabilistically [5, 8].", "startOffset": 117, "endOffset": 123}, {"referenceID": 7, "context": "Instead of assigning a vertex vi to a hyperedge ej with a binary decision, we establish the values probabilistically [5, 8].", "startOffset": 117, "endOffset": 123}, {"referenceID": 15, "context": "(3), we classify it into the standard quadratic program (StQP) [16, 1]:", "startOffset": 63, "endOffset": 70}, {"referenceID": 0, "context": "(3), we classify it into the standard quadratic program (StQP) [16, 1]:", "startOffset": 63, "endOffset": 70}, {"referenceID": 15, "context": "According to [16, 1], a local maximizer p meets the Karush-Kuhn-Tucker(KKT) condition.", "startOffset": 13, "endOffset": 20}, {"referenceID": 0, "context": "According to [16, 1], a local maximizer p meets the Karush-Kuhn-Tucker(KKT) condition.", "startOffset": 13, "endOffset": 20}, {"referenceID": 27, "context": "(5) by using the replicator dynamics, which is a class of continuous and discrete-time dynamical systems arising in evolutionary game theory [28].", "startOffset": 141, "endOffset": 145}, {"referenceID": 27, "context": "Furthermore, according to [28], the objective function of Eq.", "startOffset": 26, "endOffset": 30}, {"referenceID": 29, "context": "The above three conclusions are identical to the convergence conditions of Zangwill convergence theorem [30].", "startOffset": 104, "endOffset": 108}, {"referenceID": 12, "context": "in [13], denote by Liu et al.", "startOffset": 3, "endOffset": 7}, {"referenceID": 1, "context": "in [2], denote by Bulo et al.", "startOffset": 3, "endOffset": 6}, {"referenceID": 11, "context": "\u2013 Efficient hypergraph clustering [12] (EHC) aims to handle the higher-order relationships among data points and seek clusters by iteratively updating the cluster membership for all nodes in parallel, and converges relatively fast.", "startOffset": 34, "endOffset": 38}, {"referenceID": 5, "context": "\u2013 Two hypergraph matching methods (TM) [6] and (PM) [31].", "startOffset": 39, "endOffset": 42}, {"referenceID": 30, "context": "\u2013 Two hypergraph matching methods (TM) [6] and (PM) [31].", "startOffset": 52, "endOffset": 56}, {"referenceID": 9, "context": "The algorithm of spectral clustering [10] (SC), enhanced by the technique of integer projected fixed point [11], namely SC+IPFP is an effective method in graph matching.", "startOffset": 37, "endOffset": 41}, {"referenceID": 10, "context": "The algorithm of spectral clustering [10] (SC), enhanced by the technique of integer projected fixed point [11], namely SC+IPFP is an effective method in graph matching.", "startOffset": 107, "endOffset": 111}, {"referenceID": 11, "context": "are inferior to EHC, which is consistent to the results in [12].", "startOffset": 59, "endOffset": 63}, {"referenceID": 13, "context": "To test the robustness against noises, we add Gaussian noise \u01eb, such that \u01eb \u223c N (0, 4), in accordance with [14], to the five crescents samples, and re-compute the NMI values.", "startOffset": 107, "endOffset": 111}, {"referenceID": 13, "context": "Following the experiment setup of [14], the equivalence of graph matching problem to mode seeking can be described as follows.", "startOffset": 34, "endOffset": 38}, {"referenceID": 13, "context": "Due to space limitations, we refer the interested readers to [14] for details.", "startOffset": 61, "endOffset": 65}, {"referenceID": 6, "context": "We use the PASCAL 2012 [7] database as benchmark in this evaluation.", "startOffset": 23, "endOffset": 26}, {"referenceID": 14, "context": "We also conducted shape matching [15] on the affinity data on the database from ShapeMatcher, which contains 21 objects with 128 views for each object.", "startOffset": 33, "endOffset": 37}, {"referenceID": 14, "context": "For each shape, we compute the matching score as the affinity value using the shape matching method [15], thus obtain a 2688\u00d72688 affinity matrix.", "startOffset": 100, "endOffset": 104}, {"referenceID": 25, "context": "Future work would like to incorporate the multi-view features [26],[21],[23],[25], [27],[20],[24],[29] or highlevel deep representations [22] for improvement.", "startOffset": 62, "endOffset": 66}, {"referenceID": 20, "context": "Future work would like to incorporate the multi-view features [26],[21],[23],[25], [27],[20],[24],[29] or highlevel deep representations [22] for improvement.", "startOffset": 67, "endOffset": 71}, {"referenceID": 22, "context": "Future work would like to incorporate the multi-view features [26],[21],[23],[25], [27],[20],[24],[29] or highlevel deep representations [22] for improvement.", "startOffset": 72, "endOffset": 76}, {"referenceID": 24, "context": "Future work would like to incorporate the multi-view features [26],[21],[23],[25], [27],[20],[24],[29] or highlevel deep representations [22] for improvement.", "startOffset": 77, "endOffset": 81}, {"referenceID": 26, "context": "Future work would like to incorporate the multi-view features [26],[21],[23],[25], [27],[20],[24],[29] or highlevel deep representations [22] for improvement.", "startOffset": 83, "endOffset": 87}, {"referenceID": 19, "context": "Future work would like to incorporate the multi-view features [26],[21],[23],[25], [27],[20],[24],[29] or highlevel deep representations [22] for improvement.", "startOffset": 88, "endOffset": 92}, {"referenceID": 23, "context": "Future work would like to incorporate the multi-view features [26],[21],[23],[25], [27],[20],[24],[29] or highlevel deep representations [22] for improvement.", "startOffset": 93, "endOffset": 97}, {"referenceID": 28, "context": "Future work would like to incorporate the multi-view features [26],[21],[23],[25], [27],[20],[24],[29] or highlevel deep representations [22] for improvement.", "startOffset": 98, "endOffset": 102}, {"referenceID": 21, "context": "Future work would like to incorporate the multi-view features [26],[21],[23],[25], [27],[20],[24],[29] or highlevel deep representations [22] for improvement.", "startOffset": 137, "endOffset": 141}], "year": 2013, "abstractText": "In this paper, we develop a novel paradigm, namely hypergraph shift, to find robust graph modes by probabilistic voting strategy, which are semantically sound besides the self-cohesiveness requirement in forming graph modes. Unlike the existing techniques to seek graph modes by shifting vertices based on pair-wise edges (i.e, an edge with 2 ends), our paradigm is based on shifting high-order edges (hyperedges) to deliver graph modes. Specifically, we convert the problem of seeking graph modes as the problem of seeking maximizers of a novel objective function with the aim to generate good graph modes based on sifting edges in hypergraphs. As a result, the generated graph modes based on dense subhypergraphs may more accurately capture the object semantics besides the self-cohesiveness requirement. We also formally prove that our technique is always convergent. Extensive empirical studies on synthetic and real world data sets are conducted on clustering and graph matching. They demonstrate that our techniques significantly outperform the existing techniques.", "creator": "gnuplot 4.6 patchlevel 0"}}}