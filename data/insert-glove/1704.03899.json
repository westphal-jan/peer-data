{"id": "1704.03899", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "12-Apr-2017", "title": "Deep Reinforcement Learning-based Image Captioning with Embedding Reward", "abstract": "zns Image holtzbergs captioning is mortality a disgust challenging tartu problem treelike owing groeneveld to kurakin the lapithos complexity in kharazzi understanding the vima image decarlo content and diverse ways of describing it persa in natural language. aldabra Recent rampaged advances manipuri in jinnah deep gullett neural talty networks have mohammad substantially improved the performance rm11 of 3,817 this e-ulema task. scorpii Most e.g. state - widmark of - nonroster the - art serenely approaches lanzhou follow an highgate encoder - codice decoder framework, which kalpokas generates captions revitalised using a sequential recurrent prediction complements model. jalazoun However, in this electrocution paper, dangereuses we introduce a novel decision - firstgroup making mondeo framework for imangali image doke captioning. photofinishing We devinsky utilize 1448 a \" policy network \" and a \" neurotoxic value peruse network \" to denni collaboratively crohm\u0103lniceanu generate tattle captions. The policy mulsanne network serves debrito as gauch a manolos local tenneco guidance arber by then-partner providing kanayama the confidence of predicting the 2-part next word according to hotjobs the current state. vasili Additionally, rasyid the value network serves as manias a global and bonavita lookahead guidance by evaluating all possible extensions processor of uladh the 3-disc current state. In collectivisation essence, montagna it tintic adjusts alcindo the skycargo goal jingui of nonjudicial predicting the correct words druidism towards alii the 64.76 goal of generating mbalax captions similar coddle to sundar the servals ground 18-14 truth captions. ntags We freestone train unaccustomed both networks yokouchi using swamplands an jarett actor - .741 critic giner reinforcement manius learning atikamekw model, with 84-million a flyers novel bogaards reward g14 defined 9:02 by visual - semantic wharram embedding. Extensive experiments and karateka analyses on the traum Microsoft prestigiacomo COCO ksat dataset joghatai show veillon that filipa the mid-ulster proposed wlfd framework catatonia outperforms q\u0101sem state - of - the - art lianas approaches degress across rathchaprasong different arbitrageurs evaluation metrics.", "histories": [["v1", "Wed, 12 Apr 2017 18:55:03 GMT  (5922kb,D)", "http://arxiv.org/abs/1704.03899v1", null]], "reviews": [], "SUBJECTS": "cs.CV cs.AI", "authors": ["zhou ren", "xiaoyu wang", "ning zhang", "xutao lv", "li-jia li"], "accepted": false, "id": "1704.03899"}, "pdf": {"name": "1704.03899.pdf", "metadata": {"source": "CRF", "title": "Deep Reinforcement Learning-based Image Captioning with Embedding Reward", "authors": ["Zhou Ren", "Xiaoyu Wang", "Ning Zhang", "Xutao Lv", "Li-Jia Li"], "emails": ["xutao.lv}@snap.com", "lijiali@cs.stanford.edu"], "sections": [{"heading": "1. Introduction", "text": "Image captioning, the task of automatically describing the content of an image with natural language, has attracted increasingly interests in computer vision. It is interesting because it aims at endowing machines with one of the core human intelligence to understand the huge amount of visual information and to express it in natural language.\nRecent state-of-the-art approaches [3, 44, 30, 17, 7, 46, 15, 48, 43] follow an encoder-decoder framework to generate captions for the images. They generally employ convolutional neural networks to encode the visual information and utilize recurrent neural networks to decode that infor-\n\u2217This work was done when the author was at Snap Inc.\nmation to coherent sentences. During training and inference, they try to maximize the probability of the next word based on recurrent hidden state.\nIn this paper, we introduce a novel decision-making framework for image captioning. Instead of learning a sequential recurrent model to greedily look for the next correct word, we utilize a \u201cpolicy network\u201d and a \u201cvalue network\u201d to jointly determine the next best word at each time step. The policy network, which provides the confidence of predicting the next word according to current state, serves as a local guidance. The value network, that evaluates the reward value of all possible extensions of the current state, serves as a global and lookahead guidance. Such value network adjusts the goal of predicting the correct words towards the goal of generating captions that are similar to ground truth captions. Our framework is able to include the good words that are with low probability to be drawn by using the policy network alone. Figure 1 shows an example to illustrate the proposed framework. The word holding is not among the top choices of our policy network at current\n1\nar X\niv :1\n70 4.\n03 89\n9v 1\n[ cs\n.C V\n] 1\n2 A\npr 2\n01 7\nstep. But our value network goes forward for one step to the state supposing holding is generated and evaluates how good such state is for the goal of generating a good caption in the end. The two networks complement each other and are able to choose the word holding.\nTo learn the policy and value networks, we use deep reinforcement learning with embedding reward. We begin by pretraining a policy network using standard supervised learning with cross entropy loss, and by pretraining a value network with mean squared loss. Then, we improve the policy and value networks by deep reinforcement learning. Reinforcement learning has been widely used in gaming [38], control theory [32], etc. The problems in control or gaming have concrete targets to optimize by nature, whereas defining an appropriate optimization goal is nontrivial for image captioning. In this paper, we propose to train using an actor-critic model [21] with reward driven by visualsemantic embedding [11, 19, 36, 37]. Visual-semantic embedding, which provides a measure of similarity between images and sentences, can measure the correctness of generated captions and serve as a reasonable global target to optimize for image captioning in reinforcement learning.\nWe conduct detailed analyses on our framework to understand its merits and properties. Extensive experiments on the Microsoft COCO dataset [29] show that the proposed method outperforms state-of-the-art approaches consistently across different evaluation metrics, including BLEU [34], Meteor [25], Rouge [28] and CIDEr [42]. The contributions of this paper are summarized as follows:\n\u2022 We present a novel decision-making framework for image captioning utilizing a policy network and a value network. Our method achieves state-of-the-art performance on the MS COCO dataset. To our best knowledge, this is the first work that applies decisionmaking framework to image captioning.\n\u2022 To learn our policy and value networks, we introduce an actor-critic reinforcement learning algorithm driven by visual-semantic embedding. Our experiments suggest that the supervision from embedding generalizes well across different evaluation metrics."}, {"heading": "2. Related Work", "text": ""}, {"heading": "2.1. Image captioning", "text": "Many image captioning approaches have been proposed in the literature. Early approaches tackled this problem using bottom-up paradigm [10, 23, 27, 47, 24, 8, 26, 9], which first generated descriptive words of an image by object recognition and attribute prediction, and then combined them by language models. Recently, inspired by the successful use of neural networks in machine translation [4], the encoder-decoder framework [3, 44, 30, 17, 7, 46, 15, 48, 43] has been brought to image captioning. Researchers\nadopted such framework because \u201ctranslating\u201d an image to a sentence was analogous to the task in machine translation. Approaches following this framework generally encoded an image as a single feature vector by convolutional neural networks [22, 6, 39, 41], and then fed such vector into recurrent neural networks [14, 5] to generate captions. On top of it, various modeling strategies have been developed. Karpathy and Fei-Fei [17], Fang et al. [9] presented methods to enhance their models by detecting objects in images. To mimic the visual system of humans [20], spatial attention [46] and semantic attention [48] were proposed to direct the model to attend to the meaningful fine details. Dense captioning [16] was proposed to handle the localization and captioning tasks simultaneously. Ranzato et al. [35] proposed a sequence-level training algorithm.\nDuring inference, most state-of-the-art methods employ a common decoder mechanism using greedy search or beam search. Words are sequentially drawn according to local confidence. Since they always predict the words with top local confidence, such mechanism can miss good words at early steps which may lead to bad captions. In contrast, in addition to the local guidance, our method also utilizes a global and lookahead guidance to compensate such errors."}, {"heading": "2.2. Decision-making", "text": "Decision-making is the core problem in computer gaming [38], control theory [32], navigation and path planning [49], etc. In those problems, there exist agents that interact with the environment, execute a series of actions, and aim to fulfill some pre-defined goals. Reinforcement learning [45, 21, 40, 31], known as \u201ca machine learning technique concerning how software agent ought to take actions in an environment so as to maximize some notion of cumulative reward\u201d, is well suited for the task of decisionmaking. Recently, professional-level computer Go program was designed by Silver et al. [38] using deep neural networks and Monte Carlo Tree Search. Human-level gaming control [32] was achieved through deep Q-learning. A visual navigation system [49] was proposed recently based on actor-critic reinforcement learning model.\nDecision-making framework has not been applied to image captioning. One previous work in text generation [35] has used REINFORCE [45] to train its model by directly optimizing a user-specified evaluation metric. Such metricdriven approach [35] is hard to generalize to other metrics. To perform well across different metrics, it needs to be re-trained for each one in isolation. In this paper, we propose a training method using actor-critic reinforcement learning [21] driven by visual-semantic embedding [11, 19], which performs well across different evaluation metrics without re-training. Our approach shows significant performance improvement over [35]. Moreover, we use a decision-making framework to generate captions, while [35] follows the existing encoder-decoder framework."}, {"heading": "3. Deep Reinforcement Learning-based Image", "text": "Captioning\nIn this section, we first define our formulation for deep reinforcement learning-based image captioning and propose a novel reward function defined by visual-semantic embedding. Then we introduce our training procedure as well as our inference mechanism."}, {"heading": "3.1. Problem formulation", "text": "We formulate image captioning as a decision-making process. In decision-making, there is an agent that interacts with the environment, and executes a series of actions, so as to optimize a goal. In image captioning, the goal is, given an image I, to generate a sentence S = {w1, w2, ..., wT } which correctly describes the image content, where wi is a word in sentence S and T is the length. Our model, including the policy network p\u03c0 and value network v\u03b8, can be viewed as the agent; the environment is the given image I and the words predicted so far {w1, ..., wt}; and an action is to predict the next word wt+1."}, {"heading": "3.1.1 State and action space", "text": "A decision-making process consists of a series of actions. After each action a, a state s is observed. In our problem, state st at time step t consists of the image I and the words predicted until t, {w1, ..., wt}. The action space is the dictionary Y that the words are drawn from, i.e., at \u2282 Y ."}, {"heading": "3.1.2 Policy network", "text": "The policy network p\u03c0 provides the probability for the agent to take actions at each state, p\u03c0(at|st), where the current state st = {I, w1, ..., wt} and action at = wt+1. In this paper, we use a Convolutional Neural Network (CNN) and a Recurrent Neural Network (RNN) to construct our policy network, denoted as CNNp and RNNp. It is similar to the basic image captioning model [44] used in the encoderdecoder framework. As shown in Figure 2, firstly we use CNNp to encode the visual information of image I. The visual information is then fed into the initial input node x0 \u2208 Rn of RNNp. As the hidden state ht \u2208 Rm of RNNp evolves over time t, the policy at each time step to take an\naction at is provided. The generated word wt at t will be fed back into RNNp in the next time step as the network input xt+1, which drives the RNNp state transition from ht to ht+1. Specifically, the main working flow of p\u03c0 is governed by the following equations:\nx0 = W x,vCNNp(I) (1)\nht = RNNp(ht\u22121,xt) (2) xt = \u03c6(wt\u22121), t > 0 (3) p\u03c0(at|st) = \u03d5(ht) (4)\nwhere W x,v is the weight of the linear embedding model of visual information, \u03c6 and \u03d5 denote the input and output models of RNNp."}, {"heading": "3.1.3 Value network", "text": "Before we introduce our value network v\u03b8, we first define the value function vp of a policy p. vp is defined as the prediction of the total reward r (will be defined later in Section 3.2) from the observed state st, assuming the decisionmaking process is following a policy p, i.e.,\nvp(s) = E[r|st = s, at...T \u223c p] (5)\nWe approximate the value function using a value network, v\u03b8(s) \u2248 vp(s). It serves as an evaluation of state st = {I, w1, ..., wt}. As shown in Figure 3, our value network is comprised of a CNN, a RNN, and a Multilayer Perceptron (MLP), denoted as CNNv , RNNv and MLPv . Our value network takes the raw image and sentence inputs. CNNv is utilized to encode the visual information of I, RNNv is designed to encode the semantic information of a partially generated sentence {w1, ..., wt}. All the components are trained simultaneously to regress the scalar reward from st. We investigate our value network architecture in Section 4.4."}, {"heading": "3.2. Reward defined by visual-semantic embedding", "text": "In our decision-making framework, it is important to define a concrete and reasonable optimization goal, i.e., the reward for reinforcement learning. We propose to utilize visual-semantic embedding similarities as the reward.\nVisual-semantic embedding has been successfully applied to image classification [11, 37], retrieval [19, 36, 33], etc. Our embedding model is comprised of a CNN, a RNN and a linear mapping layer, denoted as CNNe, RNNe and fe. By learning the mapping of images and sentences into one semantic embedding space, it provides a measure of similarity between images and sentences. Given a sentence S, its embedding feature is represented using the last hidden state of RNNe, i.e., h\u2032T (S). Let v denote the feature vector of image I extracted by CNNe, and fe(\u00b7) is the mapping function from image features to the embedding space. We train the embedding model using the same image-sentence pairs as in image captioning. We fix the CNNe weight, and learn the RNNe weights as well as fe(\u00b7) using a bidirectional ranking loss defined as follows: Le= \u2211 v \u2211 S\u2212 max(0, \u03b2\u2212fe(v) \u00b7 h\u2032T (S)+fe(v) \u00b7 h\u2032T (S\u2212))\n+ \u2211 S \u2211 v\u2212 max(0, \u03b2\u2212h\u2032T (S) \u00b7 fe(v)+h\u2032T (S) \u00b7 fe(v\u2212)) (6)\nwhere \u03b2 is the margin cross-validated, every (v, S) are a ground truth image-sentence pair, S\u2212 denotes a negative description for the image corresponding to v, and vice-versa with v\u2212.\nGiven an image with feature v\u2217, we define the reward of a generated sentence S\u0302 to be the embedding similarity between S\u0302 and v\u2217:\nr = fe(v \u2217) \u00b7 h\u2032T (S\u0302) \u2016fe(v\u2217)\u2016\u2016h\u2032T (S\u0302)\u2016\n(7)"}, {"heading": "3.3. Training using deep reinforcement learning", "text": "Following [38], we learn p\u03c0 and v\u03b8 in two steps. In the first step, we train the policy network p\u03c0 using standard supervised learning with cross entropy loss, where the loss function is defined as Lp\u2032 = \u2212log p(w1, ..., wT |I;\u03c0) = \u2212\u2211Tt=1 log p\u03c0(at|st). And we train the value network by minimizing the mean squared loss, ||v\u03b8(si) \u2212 r||2 where r is the final reward of the generated sentence and si denotes a randomly selected state in the generating process. For one generated sentence, successive states are strongly correlated, differing by just one word, but the regression target is shared for each entire captioning process. Thus, we randomly sample one single state from each distinct sentence, to prevent overfitting.\nIn the second step, we train p\u03c0 and v\u03b8 jointly using deep reinforcement learning (RL). The parameters of our agent\nare represented by \u0398 = {\u03c0, \u03b8}, and we learn \u0398 by maximizing the total reward the agent can expect when interacting with the environment: J(\u0398) = Es1...T\u223cp\u03c0 ( \u2211T t=1 rt). As rt = 0 \u2200 0 < t < T and rT = r, J(\u0398) = Es1...T\u223cp\u03c0 (r). Maximizing J exactly is non-trivial since it involves an expectation over the high-dimensional interaction sequences which may involve unknown environment dynamics in turn. Viewing the problem as a partially observable Markov decision process, however, allows us to bring techniques from the RL literature to bear: As shown in [45, 40, 31], a sample approximation to the gradient is:\n\u2207\u03c0J \u2248 T\u2211 t=1 \u2207\u03c0log p\u03c0(at|st) (r \u2212 v\u03b8(st)) (8) \u2207\u03b8J = \u2207\u03b8v\u03b8(st) (r \u2212 v\u03b8(st)) (9)\nHere the value network v\u03b8 serves as a moving baseline. The subtraction with the evaluation of value network leads to a much lower variance estimate of the policy gradient. The quantity r \u2212 v\u03b8(st) used to scale the gradient can be seen as an estimate of the advantage of action at in state st. This approach can be viewed as an actor-critic architecture where the policy p\u03c0 is the actor and v\u03b8 is the critic.\nHowever, reinforcement learning in image captioning is hard to train, because of the large action space comparing to other decision-making problems. The action space of image captioning is in the order of 103 which equals the vocabulary size, while that of visual navigation in [49] is only 4, which indicates four directions to go. To handle this problem, we follow [35] to apply curriculum learning [1] to train our actor-critic model. In order to gradually teach the model to produce stable sentences, we provide training samples with gradually more difficulty: iteratively we fix the first (T \u2212 i \u00d7\u2206) words with cross entropy loss and let the actor-critic model train with the remaining i\u00d7\u2206 words, for i = 1, 2, ..., until reinforcement learning is used to train the whole sentence. Please refer to [35] for details."}, {"heading": "3.4. Lookahead inference with policy network and", "text": "value network\nOne of the key contributions of the proposed decisionmaking framework over existing framework lies in the inference mechanism. For decision-making problems, the inference is guided by a local guidance and a global guidance, e.g., AlphaGo [38] utilized MCTS to combine both guidances. For image captioning, we propose a novel lookahead inference mechanism that combines the local guidance of policy network and the global guidance of value network. The learned value network provides a lookahead evaluation for each decision, which can complement the policy network and collaboratively generate captions.\nBeam Search (BS) is the most prevalent method for decoding in existing image captioning approaches, which\nstores the top-B highly scoring candidates at each time step. Here B is the beam width. Let us denote the set of B sequences held by BS at time t as Wdte = {w1,dte, ...,wB,dte}, where each sequence are the generated words until then, wb,dte = {wb,1, ..., wb,t}. At each time step t, BS considers all possible single word extensions of these beams, given by the setWt+1 = Wdte \u00d7 Y , and selects the top-B most scoring extensions as the new beam sequences Wdt+1e:\nWdt+1e= argtopB wb,dt+1e\u2208Wt+1 S(wb,dt+1e), s.t. wi,dt+1e 6=wj,dt+1e\nwhere operator argtopB denotes the obtaining top-B operation that is implemented by sorting the B \u00d7 |Y| members of Wt+1, and S(\u00b7) denotes the scoring function of a generated sequence. In existing BS of image captioning, S(\u00b7) is the log-probability of the generated sequence. However, such scoring function may miss good captions because it assumes that the log-probability of every word in a good caption must be among top choices. This is not necessarily true. Analogously, in AlphaGo not every move is with top probability. It is beneficial to sometimes allow some actions with low probability to be selected as long as the final reward is optimized.\nTo this end, we propose a lookahead inference that combines the policy network and value network to consider all options in Wt+1. It executes each action by taking both the current policy and the lookahead reward evaluation into consideration, i.e.,\nS(wb,dt+1e) = S({wb,dte, wb,t+1}) (10) = S(wb,dte) + \u03bb log p\u03c0(at|st) + (1\u2212 \u03bb) v\u03b8({st, wb,t+1})\nwhere S(wb,dt+1e) is the score of extending the current sequence wb,dte with a wordwb,t+1, log p\u03c0(at|st) denotes the confidence of policy network to predictwb,t+1 as extension, and v\u03b8({st, wb,t+1}) denotes the evaluation of value network for the state supposingwb,t+1 is generated. 0 \u2264 \u03bb \u2264 1 is a hyperparameter combining policy and value network that we will analyze experimentally in Section 4.5."}, {"heading": "4. Experiments", "text": "In this section, we perform extensive experiments to evaluate the proposed framework. All the reported results are computed using Microsoft COCO caption evaluation tool [2], including the metrics BLEU, Meteor, Rouge-L and CIDEr, which are commonly used together for fair and thorough performance measure. Firstly, we discuss the dataset and implementation details. Then we compare the proposed method with state-of-the-art approaches on image captioning. Finally, we conduct detailed analyses on our method."}, {"heading": "4.1. Dataset and implementation details", "text": "Dataset We evaluate our method on the widely used MS COCO dataset [29] for the image captioning task. For fair comparison, we adopt the commonly used splits proposed in [17], which use 82,783 images for training, 5,000 images for validation, and 5,000 images for testing. Each image is given at least five captions by different AMT workers. We follow [17] to preprocess the captions (i.e. building dictionaries, tokenizing the captions).\nNetwork architecture As shown in Figure 2 and 3, our policy network, value network both contain a CNN and a RNN. We adopt the same CNN and RNN architectures for them, but train them independently. We use VGG-16 [39] as our CNN architecture and LSTM [14] as our RNN architecture. The input node dimension and the hidden state dimension of LSTM are both set to be 512, i.e., m = n = 512. There are many CNN, RNN architectures in the literature, e.g., ResNet [12], GRU [5], etc. Some of them have reported better performance than the ones we use. We do not use the latest architecture for fair comparison with existing methods. In our value network, we use a three-layer MLP that regresses to a scalar reward value, with a 1024-dim and a 512-dim hidden layers in between. In Figure 3, a state st is represented by concatenating the visual and semantic features. The visual feature is a 512-dim embedded feature, mapped from the 4096-dim CNNv output. The semantic feature is the 512-dim hidden state of RNNv at the last time step. Thus, the dimension of st is 1024.\nVisual-semantic embedding Visual-semantic embedding can measure the similarity between images and sentences by mapping them to the same space. We followed [19] to use VGG-16 [39] as CNNe and GRU [5] as RNNe. The image feature v in Equation 6 is extracted from the last 4096-dim layer of VGG-16. The input node dimension and the hidden state dimension of GRU are set as 300 and 1024. fe(\u00b7) is a 4096\u00d71024 linear mapping layer. The margin \u03b2 in Equation 6 is set as 0.2.\nTraining details In training, we use Adam [18] algorithm to do model updating. It is worth noting that, other than using the pretrained VGG-16 model, we only use the images and captions provided in the dataset to train our networks and embedding, without any external data. We set \u2206 in curriculum learning as 2. In testing, a caption is formed by drawing words sequentially until a special end token is reached, using the proposed lookahead inference mechanism. We do not use ensemble of models."}, {"heading": "4.2. Comparing with state-of-the-art methods", "text": "In Table 1, we provide a summary of the results of our method and existing methods. We obtain state-of-theart performance on MS COCO in most evaluation metrics. Note that Semantic ATT [48] utilized rich extra data from social media to train their visual attribute predictor, and\nDCC [13] utilized external data to prove its unique transfer capacity. It makes their results incomparable to other methods that do not use extra training data. Surprisingly, even without external training data, our method outperforms [48, 13]. Comparing to methods other than [48, 13], our approach shows significant improvements in all the metrics except Bleu-1 in which our method ranks the second. Bleu1 is related to single word accuracy, the performance gap of Bleu-1 between our method and [46] may be due to different preprocessing for word vocabularies. MIXER [35] is a metric-driven trained method. A model trained with Bleu-4 using [35] is hard to generalize to other metrics. Our embedding-driven decision-making approach performs well in all metrics. Especially, considering our policy network shown in Figure 2 is based on a mechanism similar to the very basic image captioning model similar to Google NIC [44], such significant improvement over [44] validates the effectiveness of the proposed decision-making framework that utilizes both policy and value networks. Moreover, the proposed framework is modular w.r.t. the network design. Other powerful mechanisms such as spatial attention, semantic attention can be directly integrated into our policy network and further improve our performance.\nSince the proposed embedding-driven decision-making framework is very different from existing methods, we want to perform insightful analyses and answer the following questions: 1) How powerful is embedding? Is the performance gain more because of the framework or embedding\nalone? 2) How important is lookahead inference? 3) How important is reinforcement learning in the framework? 4) Why the value network is designed as in Figure 3? 5) How sensitive is the method to hyperparameter \u03bb and beam size? To answer those questions, we conduct detailed analyses in the following three sections."}, {"heading": "4.3. How much each component contributes?", "text": "In this section, we answer questions 1) 2) 3) above. As discussed in Section 3.3, we train our policy and value networks in two steps: pretraining and then reinforcement learning. We name the initial policy network pretrained with supervised learning as (SL). We name the initial value network pretrained with mean squared loss as (RawVN). The SL model can be served as our baseline, which does not use value network or lookahead inference. To evaluate the impact of embedding, we incorporate SL with embedding as follows: in the last step of beam search of SL, when a beam of candidate captions are generated, we rank those candidates according to their embedding similarities with the test image other than their log-probabilities, and finally output the one with highest embedding score. This baseline is named as (SL-Embed). To validate the contribution of lookahead inference and reinforcement learning, we construct a baseline that use SL and RawVN with the proposed lookahead inference, which is named as (SL-RawVN). Finally our full model is named as (Full-model).\nAccording to the results of those variants of our method\nGT: a painting of fruit and a candle with a vase\nOurs: a painting of a vase sitting on a table\nSL: a table with a vase and flowers on it\nGT: the plane is parked at the gate at the airport terminal\nOurs: a white airplane parked at an airport terminal\nSL: a passenger train that is pulling into a station\nGT: a small dog eating a plate of broccoli\nOurs: a dog that is eating some food on a table\nSL: a dog that is sitting on a table\nGT: people are standing outside in a busy city street\nOurs: a group of people that are standing in the street\nSL: a group of young people playing a game of basketball\nGT: a couple of kids walking with umbrellas in their hands\nOurs: a couple of people walking down a street holding umbrellas\nSL: a couple of people that are walking in the snow\nGT: a man on a bicycle riding next to a train\nOurs: a train on a track near a building\nGT: the man are driving side by side on their motorcycles\nOurs: a man riding on the back of a motorcycle\nGT: a man holding a snowboard next to a man in scary costume\nOurs: a woman sitting on a ledge holding a snowboard\nSL: a woman standing in a living room holding a wii controller\nFigure 4. Qualitative results of our method and the supervised learning (SL) baseline. In the first three columns, our method generates better captions than SL. We show two failure cases in the last column. GT stands for ground truth caption.\nshown in Table 2, we can answer the questions 1)-3) above: 1. Using embedding alone, SL-Embed performs slightly\nbetter than the SL baseline. However, the gap between SL-Embed and Full-model is very big. Therefore, we conclude that using embedding alone is not powerful. The proposed embedding-driven decision-making framework is the merit of our method. 2. By using lookahead inference, SL-RawVN is much better than the SL baseline. This validates the importance of the proposed lookahead inference that utilizes both local and global guidance. 3. After reinforcement learning, our Full-model performs better than the SL-RawVN. This validates the importance of using embedding-driven actor-critic learning for model training.\nWe show some qualitative captioning results of our method and the SL baseline in Figure 4. GT stands for ground truth caption. In the first three columns, we compare our method and SL baseline. As we see, our method is better at recognizing key objects that are easily missed by SL, e.g., the snowboard and umbrellas in the first column images. Besides, our method can reduce the chance of generating incorrect word and accumulating errors, e.g., we generate the word eating other than sitting for the image in the lower second column. Moreover, thanks to the global guidance, our method is better at generating correct captions at global level, e.g., we can recognize the airplane\nand painting for the images in the third column. Finally, we show two failure cases of our method in the last column, in which cases we fail to understand some important visual contents that only take small portions of the images. This may be due to our policy network architecture. Adding more detailed visual modeling techniques such as detection and attention can alleviate such problem in the future."}, {"heading": "4.4. Value network architecture analysis", "text": "In this paper we propose a novel framework that involves value network, whose architecture is worth looking into. As in Figure 3, we use CNNv and RNNv to extract visual and semantic information from the raw image and sentence inputs. Since the hidden state in policy network at each time step is a representation of each state as well, a natural question is \u201ccan we directly utilize the policy hidden state?\u201d. To answer this question, we construct two variants of our value network: the first one, named as (hid-VN), is comprised of a MLPv on top of the policy hidden state of RNNp; the second variant, (hid-Im-VN), is comprised of a MLPv on top of the concatenation of the policy hidden state of RNNp and the visual input x0 of policy RNNp. The results are shown in Table 2. As we see, both variants that utilize policy hidden state do not work well, comparing to our Full-model. The problem of the policy hidden state is that it compresses and also loses lots of information. Thus, it is reasonable and better to train independent CNN, RNN for value network it-\nself with raw image and sentence inputs, as in Figure 3."}, {"heading": "4.5. Parameter sensitivity analysis", "text": "There are two major hyperparameters in our method, \u03bb in Equation 10 and the beam size. In this section, we analyze their sensitivity to answer question 5) above.\nIn Table 3, we show the evaluation of \u03bb\u2019s impact on our method. As in Equation 10, \u03bb is a hyperparameter combining policy and value networks in lookahead inference, 0 \u2264 \u03bb \u2264 1. \u03bb = 0 means we only use value network to guide our lookahead inference; while \u03bb = 1 means we only use policy network, which is identical to beam search. As shown in Table 3, the best performance is when \u03bb = 0.4. As \u03bb goes down from 0.4 to 0 or goes up from 0.4 to 1, overall the performance drops monotonically. This validates the importance of both networks; we should not emphasize too much on either network in lookahead inference. Besides, \u03bb = 0 performs much worse than \u03bb = 1. This is because policy network provides local guidance, which is very important in sequential prediction. Thus, in lookahead inference, it is too weak if we only use global guidance, i.e. value network in our approach.\nIn Table 4, we provide the evaluation of different beam sizes\u2019 impact on SL baseline and our full model. As discovered in previous work such as [17], the image captioning performance becomes worse as the beam size gets larger. We validate such discovery for existing encoder-decoder framework. As shown in the upper half of Table 4, we test our SL baseline with 5 different beam sizes from 5 to 100.\nNote that SL is based on beam search, which follows the encoder-decoder framework as most existing approaches. As we see, the impact of beam size on SL is relatively big. It\u2019s mainly because that as we increase the beam size, bad word candidates are more likely to be drawn into the beam, since the confidence provided by the sequential word generator is only consider local information.\nOn the other hand, as shown in the lower part of Table 4, our method is less sensitive to beam sizes. The performance variations between different beam sizes are fairly small. We argue that this is because of the proposed lookahead inference that considers both policy and value networks. With local and global guidances, our framework is more robust and stable to policy mistakes."}, {"heading": "5. Conclusion", "text": "In this work, we present a novel decision-making framework for image captioning, which achieves state-of-the-art performance on standard benchmark. Different from previous encoder-decoder framework, our method utilizes a policy network and a value network to generate captions. The policy network serves as a local guidance and the value network serves as a global and lookahead guidance. To learn both networks, we use an actor-critic reinforcement learning approach with novel visual-semantic embedding rewards. We conduct detailed analyses on our framework to understand its merits and properties. Our future works include improving network architectures and investigating the reward design by considering other embedding measures."}], "references": [{"title": "Curriculum learning", "author": ["Y. Bengio", "J. Louradour", "R. Collobert", "J. Weston"], "venue": "ICML,", "citeRegEx": "1", "shortCiteRegEx": null, "year": 2009}, {"title": "Microsoft coco captions: Data collection and evaluation server", "author": ["X. Chen", "H. Fang", "T.-Y. Lin", "R. Vedantam", "S. Gupta", "P. Dollar", "C.L. Zitnick"], "venue": "arXiv:1504.00325,", "citeRegEx": "2", "shortCiteRegEx": null, "year": 2015}, {"title": "Mind\u2019s eye: A recurrent visual representation for image caption generation", "author": ["X. Chen", "C.L. Zitnick"], "venue": "CVPR,", "citeRegEx": "3", "shortCiteRegEx": null, "year": 2015}, {"title": "Learning phrase representations using rnn encoderdecoder for statistical machine translation", "author": ["K. Cho", "B. van Merrienboer", "C. Gulcehre", "F. Bougares", "H. Schwenk", "Y. Bengio"], "venue": "In EMNLP,", "citeRegEx": "4", "shortCiteRegEx": "4", "year": 2014}, {"title": "Empirical evaluation of gated recurrent neural networks on sequence modeling", "author": ["J. Chung", "C. Gulcehre", "K. Cho", "Y. Bengio"], "venue": "arXiv:1412.3555,", "citeRegEx": "5", "shortCiteRegEx": null, "year": 2014}, {"title": "Imagenet: a large-scale hierachical image database", "author": ["J. Deng", "W. Dong", "R. Socher", "L. Li", "K. Li", "L. Fei-Fei"], "venue": "CVPR,", "citeRegEx": "6", "shortCiteRegEx": null, "year": 2009}, {"title": "Long-term recurrent convolutional networks for visual recognition and description", "author": ["J. Donahue", "L.A. Hendricks", "S. Guadarrama", "M. Rohrbach", "S. Venugopalan", "K. Saenko", "T. Darrell"], "venue": "CVPR,", "citeRegEx": "7", "shortCiteRegEx": null, "year": 2015}, {"title": "Image description using visual dependency representations", "author": ["D. Elliott", "F. Keller"], "venue": "EMNLP,", "citeRegEx": "8", "shortCiteRegEx": null, "year": 2013}, {"title": "From from captions to visual concepts and back", "author": ["H. Fang", "S. Gupta", "F. Iandola", "R.K. Srivastava", "L. Deng", "P. Dollar", "J. Gao", "X. He", "M. Mitchell", "J.C. Platt", "C.L. Zitnick", "G. Zweig"], "venue": "CVPR,", "citeRegEx": "9", "shortCiteRegEx": null, "year": 2015}, {"title": "Every picture tells a story: Generating sentences from images", "author": ["A. Farhadi", "M. Hejrati", "M.A. Sadeghi", "P. Young", "C. Rashtchian", "J. Hockenmaier", "D. Forsyth"], "venue": "ECCV,", "citeRegEx": "10", "shortCiteRegEx": null, "year": 2010}, {"title": "Devise: A deep visual-semantic embedding model", "author": ["A. Frome", "G. Corrado", "J. Shlens", "S. Bengio", "J. Dean", "M. Ranzato", "T. Mikolov"], "venue": "NIPS,", "citeRegEx": "11", "shortCiteRegEx": null, "year": 2013}, {"title": "Deep residual learning for image recognition", "author": ["K. He", "X. Zhang", "S. Ren", "J. Sun"], "venue": "CVPR,", "citeRegEx": "12", "shortCiteRegEx": null, "year": 2016}, {"title": "Deep compositional captioning: Describing novel object categories without paired training data", "author": ["L.A. Hendricks", "S. Venugopalan", "M. Rohrbach", "R. Mooney", "K. Saenko", "T. Darrell"], "venue": "CVPR,", "citeRegEx": "13", "shortCiteRegEx": null, "year": 2016}, {"title": "Long short-term memory", "author": ["S. Hochreiter", "J. Schmidhuber"], "venue": "Neural Computation, 9:1735\u20131780,", "citeRegEx": "14", "shortCiteRegEx": null, "year": 1997}, {"title": "Guiding the longshort term memory model for image caption generation", "author": ["X. Jia", "E. Gavves", "B. Fernando", "T. Tuytelaars"], "venue": "ICCV,", "citeRegEx": "15", "shortCiteRegEx": null, "year": 2015}, {"title": "Densecap: Fully convolutional localization networks for dense captioning", "author": ["J. Johnson", "A. Karpathy", "L. Fei-Fei"], "venue": "CVPR,", "citeRegEx": "16", "shortCiteRegEx": null, "year": 2016}, {"title": "Deep visual-semantic alignments for generating image descriptions", "author": ["A. Karpathy", "L. Fei-Fei"], "venue": "CVPR,", "citeRegEx": "17", "shortCiteRegEx": null, "year": 2015}, {"title": "Adam: A method for stochastic optimization", "author": ["D. Kingma", "J. Ba"], "venue": "ICLR,", "citeRegEx": "18", "shortCiteRegEx": null, "year": 2015}, {"title": "Unifying visualsemantic embeddings with multimodal neural language models", "author": ["R. Kiros", "R. Salakhutdinov", "R.S. Zemel"], "venue": "TACL,", "citeRegEx": "19", "shortCiteRegEx": null, "year": 2015}, {"title": "Shifts in selective visual attention: towards the underlying neural circuitry", "author": ["C. Koch", "S. Ullman"], "venue": "Matters of intelligence, pages 115\u2013 141,", "citeRegEx": "20", "shortCiteRegEx": null, "year": 1987}, {"title": "Actor-critic algorithms", "author": ["V. Konda", "J. Tsitsiklis"], "venue": "NIPS,", "citeRegEx": "21", "shortCiteRegEx": null, "year": 1999}, {"title": "Imagenet classification with deep convolutional neural networks", "author": ["A. Krizhevsky", "I. Sutskever", "G. Hinton"], "venue": "NIPS,", "citeRegEx": "22", "shortCiteRegEx": null, "year": 2012}, {"title": "Baby talk: Understanding and generating image descriptions", "author": ["G. Kulkarni", "V. Premraj", "S. Dhar", "S. Li", "Y. Choi", "A.C. Berg", "T.L. Berg"], "venue": "CVPR,", "citeRegEx": "23", "shortCiteRegEx": null, "year": 2011}, {"title": "Collective generation of natural image descriptions", "author": ["P. Kuznetsova", "V. Ordonez", "A.C. Berg", "T.L. Berg", "Y. Choi"], "venue": "ACL,", "citeRegEx": "24", "shortCiteRegEx": null, "year": 2012}, {"title": "The meteor metric for automatic evaluation of machine translation", "author": ["A. Lavie", "M. Denkowski"], "venue": "Machine Translation,", "citeRegEx": "25", "shortCiteRegEx": null, "year": 2010}, {"title": "Simple image description generator via a linear phrase-based approach", "author": ["R. Lebret", "P.O. Pinheiro", "R. Collobert"], "venue": "ICLR,", "citeRegEx": "26", "shortCiteRegEx": null, "year": 2015}, {"title": "Composing simple image descriptions using web-scale n-grams", "author": ["S. Li", "G. Kulkarni", "T.L. Berg", "A.C. Berg", "Y. Choi"], "venue": "CoNLL,", "citeRegEx": "27", "shortCiteRegEx": null, "year": 2011}, {"title": "Rouge: A package for automatic evaluation of summaries", "author": ["C.-Y. Lin"], "venue": "WAS,", "citeRegEx": "28", "shortCiteRegEx": null, "year": 2004}, {"title": "Microsoft coco: Common objects in context", "author": ["T.-Y. Lin", "M. Maire", "S. Belongie", "L. Bourdev", "R. Girshick", "J. Hays", "P. Perona", "D. Ramanan", "C.L. Zitnick", "P. Dollar"], "venue": "ECCV,", "citeRegEx": "29", "shortCiteRegEx": null, "year": 2014}, {"title": "Deep captioning with multimodal recurrent neural networks", "author": ["J. Mao", "W. Xu", "Y. Yang", "J. Wang", "A. Yuille"], "venue": "ICLR,", "citeRegEx": "30", "shortCiteRegEx": null, "year": 2015}, {"title": "Asynchronous methods for deep reinforcement learning", "author": ["V. Mnih", "A.P. Badia", "M. Mirza", "A. Graves", "T.P. Lillicrap", "T. Harley", "D. Silver", "K. Kavukcuoglu"], "venue": "ICML,", "citeRegEx": "31", "shortCiteRegEx": null, "year": 2016}, {"title": "Human-level control through deep reinforcement learning", "author": ["V. Mnih", "K. Kavukcuoglu", "D. Silver", "A. Rusu", "J. Veness", "M.G. Bellemare", "A. Graves", "M. Riedmiller", "A. Fidjeland", "G. Ostrovski", "S. Petersen", "C. Beattie", "A. Sadik", "I. Antonoglou", "H. King", "D. Kumaran", "D. Wierstra", "S. Legg", "D. Hassabis"], "venue": "Nature, 518:529\u2013533,", "citeRegEx": "32", "shortCiteRegEx": null, "year": 2015}, {"title": "Jointly modeling embedding and translation to bridge video and language", "author": ["Y. Pan", "T. Mei", "T. Yao", "H. Li", "Y. Rui"], "venue": "CVPR,", "citeRegEx": "33", "shortCiteRegEx": null, "year": 2016}, {"title": "Bleu: a method for automatic evaluation of machine translation", "author": ["K. Papineni", "S. Roukos", "T. Ward", "W.J. Zhu"], "venue": "ACL,", "citeRegEx": "34", "shortCiteRegEx": null, "year": 2002}, {"title": "Sequence level training with recurrent neural networks", "author": ["M. Ranzato", "S. Chopra", "M. Auli", "W. Zaremba"], "venue": "ICLR,", "citeRegEx": "35", "shortCiteRegEx": null, "year": 2016}, {"title": "Multi-instance visualsemantic embedding", "author": ["Z. Ren", "H. Jin", "Z. Lin", "C. Fang", "A. Yuille"], "venue": "arXiv:1512.06963,", "citeRegEx": "36", "shortCiteRegEx": null, "year": 2015}, {"title": "Joint image-text representation by gaussian visual-semantic embedding", "author": ["Z. Ren", "H. Jin", "Z. Lin", "C. Fang", "A. Yuille"], "venue": "ACM Multimedia,", "citeRegEx": "37", "shortCiteRegEx": null, "year": 2016}, {"title": "Mastering the game of go with deep neural networks and tree search", "author": ["D. Silver", "A. Huang", "C.J. Maddison", "A. Guez", "L. Sifre", "G. van den Driessche", "J. Schrittwieser", "I. Antonoglou", "V. Panneershelvam", "M. Lanctot", "S. Dieleman", "D. Grewe", "J. Nham", "N. Kalchbrenner", "I. Sutskever", "T. Lillicrap", "M. Leach", "K. Kavukcuoglu", "T. Graepel", "D. Hassabis"], "venue": null, "citeRegEx": "38", "shortCiteRegEx": "38", "year": 2016}, {"title": "Very deep convolutional networks for large-scale image recognition", "author": ["K. Simonyan", "A. Zisserman"], "venue": "ICLR,", "citeRegEx": "39", "shortCiteRegEx": null, "year": 2015}, {"title": "Policy gradient methods for reinforcement learning with function approximation", "author": ["R.S. Sutton", "D. McAllester", "S. Singh", "Y. Mansour"], "venue": "NIPS,", "citeRegEx": "40", "shortCiteRegEx": null, "year": 2000}, {"title": "Going deeper with convolutions", "author": ["C. Szegedy", "W. Liu", "Y. Jia", "P. Sermanet", "S. Reed", "D. Anguelov", "D. Erhan", "V. Vanhoucke", "A. Rabinovich"], "venue": "CVPR,", "citeRegEx": "41", "shortCiteRegEx": null, "year": 2015}, {"title": "Cider: Consensus-based image description evaluation", "author": ["R. Vedantam", "C.L. Zitnick", "D. Parikh"], "venue": "CVPR,", "citeRegEx": "42", "shortCiteRegEx": null, "year": 2015}, {"title": "Diverse beam search: Decoding diverse solutions from neural sequence models", "author": ["A. Vijayakumar", "M. Cogswell", "R.R. Selvaraju", "Q. Sun", "S. Lee", "D. Crandall", "D. Batra"], "venue": "arXiv:1610.02424,", "citeRegEx": "43", "shortCiteRegEx": null, "year": 2016}, {"title": "Show and tell: A neural image caption generator", "author": ["O. Vinyals", "A. Toshev", "S. Bengio", "D. Erhan"], "venue": "CVPR,", "citeRegEx": "44", "shortCiteRegEx": null, "year": 2015}, {"title": "simple statistical gradient-following algorithms for connectionist reinforcement learning", "author": ["R. Williams"], "venue": "Machine Learning, 8:229\u2013256,", "citeRegEx": "45", "shortCiteRegEx": null, "year": 1992}, {"title": "Show, attend and tell: Neural image caption generation with visual attention", "author": ["K. Xu", "J.L. Ba", "R. Kiros", "K. Cho", "A. Courville", "R. Salakhutdinov", "R.S. Zemel", "Y. Bengio"], "venue": "ICML,", "citeRegEx": "46", "shortCiteRegEx": null, "year": 2015}, {"title": "Corpus-guided sentence generation of natural images", "author": ["Y. Yang", "C.L. Teo", "H. Daume III", "Y. Aloimonos"], "venue": "EMNLP,", "citeRegEx": "47", "shortCiteRegEx": null, "year": 2011}, {"title": "Image captioning with semantic attention", "author": ["Q. You", "H. Jin", "Z. Wang", "C. Fang", "J. Luo"], "venue": "CVPR,", "citeRegEx": "48", "shortCiteRegEx": null, "year": 2016}, {"title": "Target-driven visual navigation in indoor scenes using deep reinforcement learning", "author": ["Y. Zhu", "R. Mottaghi", "E. Kolve", "J.J. Lim", "A. Gupta"], "venue": "arXiv:1609.05143,", "citeRegEx": "49", "shortCiteRegEx": null, "year": 2016}], "referenceMentions": [{"referenceID": 2, "context": "Recent state-of-the-art approaches [3, 44, 30, 17, 7, 46, 15, 48, 43] follow an encoder-decoder framework to generate captions for the images.", "startOffset": 35, "endOffset": 69}, {"referenceID": 43, "context": "Recent state-of-the-art approaches [3, 44, 30, 17, 7, 46, 15, 48, 43] follow an encoder-decoder framework to generate captions for the images.", "startOffset": 35, "endOffset": 69}, {"referenceID": 29, "context": "Recent state-of-the-art approaches [3, 44, 30, 17, 7, 46, 15, 48, 43] follow an encoder-decoder framework to generate captions for the images.", "startOffset": 35, "endOffset": 69}, {"referenceID": 16, "context": "Recent state-of-the-art approaches [3, 44, 30, 17, 7, 46, 15, 48, 43] follow an encoder-decoder framework to generate captions for the images.", "startOffset": 35, "endOffset": 69}, {"referenceID": 6, "context": "Recent state-of-the-art approaches [3, 44, 30, 17, 7, 46, 15, 48, 43] follow an encoder-decoder framework to generate captions for the images.", "startOffset": 35, "endOffset": 69}, {"referenceID": 45, "context": "Recent state-of-the-art approaches [3, 44, 30, 17, 7, 46, 15, 48, 43] follow an encoder-decoder framework to generate captions for the images.", "startOffset": 35, "endOffset": 69}, {"referenceID": 14, "context": "Recent state-of-the-art approaches [3, 44, 30, 17, 7, 46, 15, 48, 43] follow an encoder-decoder framework to generate captions for the images.", "startOffset": 35, "endOffset": 69}, {"referenceID": 47, "context": "Recent state-of-the-art approaches [3, 44, 30, 17, 7, 46, 15, 48, 43] follow an encoder-decoder framework to generate captions for the images.", "startOffset": 35, "endOffset": 69}, {"referenceID": 42, "context": "Recent state-of-the-art approaches [3, 44, 30, 17, 7, 46, 15, 48, 43] follow an encoder-decoder framework to generate captions for the images.", "startOffset": 35, "endOffset": 69}, {"referenceID": 37, "context": "Reinforcement learning has been widely used in gaming [38], control theory [32], etc.", "startOffset": 54, "endOffset": 58}, {"referenceID": 31, "context": "Reinforcement learning has been widely used in gaming [38], control theory [32], etc.", "startOffset": 75, "endOffset": 79}, {"referenceID": 20, "context": "In this paper, we propose to train using an actor-critic model [21] with reward driven by visualsemantic embedding [11, 19, 36, 37].", "startOffset": 63, "endOffset": 67}, {"referenceID": 10, "context": "In this paper, we propose to train using an actor-critic model [21] with reward driven by visualsemantic embedding [11, 19, 36, 37].", "startOffset": 115, "endOffset": 131}, {"referenceID": 18, "context": "In this paper, we propose to train using an actor-critic model [21] with reward driven by visualsemantic embedding [11, 19, 36, 37].", "startOffset": 115, "endOffset": 131}, {"referenceID": 35, "context": "In this paper, we propose to train using an actor-critic model [21] with reward driven by visualsemantic embedding [11, 19, 36, 37].", "startOffset": 115, "endOffset": 131}, {"referenceID": 36, "context": "In this paper, we propose to train using an actor-critic model [21] with reward driven by visualsemantic embedding [11, 19, 36, 37].", "startOffset": 115, "endOffset": 131}, {"referenceID": 28, "context": "Extensive experiments on the Microsoft COCO dataset [29] show that the proposed method outperforms state-of-the-art approaches consistently across different evaluation metrics, including BLEU [34], Meteor [25], Rouge [28] and CIDEr [42].", "startOffset": 52, "endOffset": 56}, {"referenceID": 33, "context": "Extensive experiments on the Microsoft COCO dataset [29] show that the proposed method outperforms state-of-the-art approaches consistently across different evaluation metrics, including BLEU [34], Meteor [25], Rouge [28] and CIDEr [42].", "startOffset": 192, "endOffset": 196}, {"referenceID": 24, "context": "Extensive experiments on the Microsoft COCO dataset [29] show that the proposed method outperforms state-of-the-art approaches consistently across different evaluation metrics, including BLEU [34], Meteor [25], Rouge [28] and CIDEr [42].", "startOffset": 205, "endOffset": 209}, {"referenceID": 27, "context": "Extensive experiments on the Microsoft COCO dataset [29] show that the proposed method outperforms state-of-the-art approaches consistently across different evaluation metrics, including BLEU [34], Meteor [25], Rouge [28] and CIDEr [42].", "startOffset": 217, "endOffset": 221}, {"referenceID": 41, "context": "Extensive experiments on the Microsoft COCO dataset [29] show that the proposed method outperforms state-of-the-art approaches consistently across different evaluation metrics, including BLEU [34], Meteor [25], Rouge [28] and CIDEr [42].", "startOffset": 232, "endOffset": 236}, {"referenceID": 9, "context": "Early approaches tackled this problem using bottom-up paradigm [10, 23, 27, 47, 24, 8, 26, 9], which first generated descriptive words of an image by object recognition and attribute prediction, and then combined them by language models.", "startOffset": 63, "endOffset": 93}, {"referenceID": 22, "context": "Early approaches tackled this problem using bottom-up paradigm [10, 23, 27, 47, 24, 8, 26, 9], which first generated descriptive words of an image by object recognition and attribute prediction, and then combined them by language models.", "startOffset": 63, "endOffset": 93}, {"referenceID": 26, "context": "Early approaches tackled this problem using bottom-up paradigm [10, 23, 27, 47, 24, 8, 26, 9], which first generated descriptive words of an image by object recognition and attribute prediction, and then combined them by language models.", "startOffset": 63, "endOffset": 93}, {"referenceID": 46, "context": "Early approaches tackled this problem using bottom-up paradigm [10, 23, 27, 47, 24, 8, 26, 9], which first generated descriptive words of an image by object recognition and attribute prediction, and then combined them by language models.", "startOffset": 63, "endOffset": 93}, {"referenceID": 23, "context": "Early approaches tackled this problem using bottom-up paradigm [10, 23, 27, 47, 24, 8, 26, 9], which first generated descriptive words of an image by object recognition and attribute prediction, and then combined them by language models.", "startOffset": 63, "endOffset": 93}, {"referenceID": 7, "context": "Early approaches tackled this problem using bottom-up paradigm [10, 23, 27, 47, 24, 8, 26, 9], which first generated descriptive words of an image by object recognition and attribute prediction, and then combined them by language models.", "startOffset": 63, "endOffset": 93}, {"referenceID": 25, "context": "Early approaches tackled this problem using bottom-up paradigm [10, 23, 27, 47, 24, 8, 26, 9], which first generated descriptive words of an image by object recognition and attribute prediction, and then combined them by language models.", "startOffset": 63, "endOffset": 93}, {"referenceID": 8, "context": "Early approaches tackled this problem using bottom-up paradigm [10, 23, 27, 47, 24, 8, 26, 9], which first generated descriptive words of an image by object recognition and attribute prediction, and then combined them by language models.", "startOffset": 63, "endOffset": 93}, {"referenceID": 3, "context": "Recently, inspired by the successful use of neural networks in machine translation [4], the encoder-decoder framework [3, 44, 30, 17, 7, 46, 15, 48, 43] has been brought to image captioning.", "startOffset": 83, "endOffset": 86}, {"referenceID": 2, "context": "Recently, inspired by the successful use of neural networks in machine translation [4], the encoder-decoder framework [3, 44, 30, 17, 7, 46, 15, 48, 43] has been brought to image captioning.", "startOffset": 118, "endOffset": 152}, {"referenceID": 43, "context": "Recently, inspired by the successful use of neural networks in machine translation [4], the encoder-decoder framework [3, 44, 30, 17, 7, 46, 15, 48, 43] has been brought to image captioning.", "startOffset": 118, "endOffset": 152}, {"referenceID": 29, "context": "Recently, inspired by the successful use of neural networks in machine translation [4], the encoder-decoder framework [3, 44, 30, 17, 7, 46, 15, 48, 43] has been brought to image captioning.", "startOffset": 118, "endOffset": 152}, {"referenceID": 16, "context": "Recently, inspired by the successful use of neural networks in machine translation [4], the encoder-decoder framework [3, 44, 30, 17, 7, 46, 15, 48, 43] has been brought to image captioning.", "startOffset": 118, "endOffset": 152}, {"referenceID": 6, "context": "Recently, inspired by the successful use of neural networks in machine translation [4], the encoder-decoder framework [3, 44, 30, 17, 7, 46, 15, 48, 43] has been brought to image captioning.", "startOffset": 118, "endOffset": 152}, {"referenceID": 45, "context": "Recently, inspired by the successful use of neural networks in machine translation [4], the encoder-decoder framework [3, 44, 30, 17, 7, 46, 15, 48, 43] has been brought to image captioning.", "startOffset": 118, "endOffset": 152}, {"referenceID": 14, "context": "Recently, inspired by the successful use of neural networks in machine translation [4], the encoder-decoder framework [3, 44, 30, 17, 7, 46, 15, 48, 43] has been brought to image captioning.", "startOffset": 118, "endOffset": 152}, {"referenceID": 47, "context": "Recently, inspired by the successful use of neural networks in machine translation [4], the encoder-decoder framework [3, 44, 30, 17, 7, 46, 15, 48, 43] has been brought to image captioning.", "startOffset": 118, "endOffset": 152}, {"referenceID": 42, "context": "Recently, inspired by the successful use of neural networks in machine translation [4], the encoder-decoder framework [3, 44, 30, 17, 7, 46, 15, 48, 43] has been brought to image captioning.", "startOffset": 118, "endOffset": 152}, {"referenceID": 21, "context": "Approaches following this framework generally encoded an image as a single feature vector by convolutional neural networks [22, 6, 39, 41], and then fed such vector into recurrent neural networks [14, 5] to generate captions.", "startOffset": 123, "endOffset": 138}, {"referenceID": 5, "context": "Approaches following this framework generally encoded an image as a single feature vector by convolutional neural networks [22, 6, 39, 41], and then fed such vector into recurrent neural networks [14, 5] to generate captions.", "startOffset": 123, "endOffset": 138}, {"referenceID": 38, "context": "Approaches following this framework generally encoded an image as a single feature vector by convolutional neural networks [22, 6, 39, 41], and then fed such vector into recurrent neural networks [14, 5] to generate captions.", "startOffset": 123, "endOffset": 138}, {"referenceID": 40, "context": "Approaches following this framework generally encoded an image as a single feature vector by convolutional neural networks [22, 6, 39, 41], and then fed such vector into recurrent neural networks [14, 5] to generate captions.", "startOffset": 123, "endOffset": 138}, {"referenceID": 13, "context": "Approaches following this framework generally encoded an image as a single feature vector by convolutional neural networks [22, 6, 39, 41], and then fed such vector into recurrent neural networks [14, 5] to generate captions.", "startOffset": 196, "endOffset": 203}, {"referenceID": 4, "context": "Approaches following this framework generally encoded an image as a single feature vector by convolutional neural networks [22, 6, 39, 41], and then fed such vector into recurrent neural networks [14, 5] to generate captions.", "startOffset": 196, "endOffset": 203}, {"referenceID": 16, "context": "Karpathy and Fei-Fei [17], Fang et al.", "startOffset": 21, "endOffset": 25}, {"referenceID": 8, "context": "[9] presented methods to enhance their models by detecting objects in images.", "startOffset": 0, "endOffset": 3}, {"referenceID": 19, "context": "To mimic the visual system of humans [20], spatial attention [46] and semantic attention [48] were proposed to direct the model to attend to the meaningful fine details.", "startOffset": 37, "endOffset": 41}, {"referenceID": 45, "context": "To mimic the visual system of humans [20], spatial attention [46] and semantic attention [48] were proposed to direct the model to attend to the meaningful fine details.", "startOffset": 61, "endOffset": 65}, {"referenceID": 47, "context": "To mimic the visual system of humans [20], spatial attention [46] and semantic attention [48] were proposed to direct the model to attend to the meaningful fine details.", "startOffset": 89, "endOffset": 93}, {"referenceID": 15, "context": "Dense captioning [16] was proposed to handle the localization and captioning tasks simultaneously.", "startOffset": 17, "endOffset": 21}, {"referenceID": 34, "context": "[35] proposed a sequence-level training algorithm.", "startOffset": 0, "endOffset": 4}, {"referenceID": 37, "context": "Decision-making is the core problem in computer gaming [38], control theory [32], navigation and path planning [49], etc.", "startOffset": 55, "endOffset": 59}, {"referenceID": 31, "context": "Decision-making is the core problem in computer gaming [38], control theory [32], navigation and path planning [49], etc.", "startOffset": 76, "endOffset": 80}, {"referenceID": 48, "context": "Decision-making is the core problem in computer gaming [38], control theory [32], navigation and path planning [49], etc.", "startOffset": 111, "endOffset": 115}, {"referenceID": 44, "context": "Reinforcement learning [45, 21, 40, 31], known as \u201ca machine learning technique concerning how software agent ought to take actions in an environment so as to maximize some notion of cumulative reward\u201d, is well suited for the task of decisionmaking.", "startOffset": 23, "endOffset": 39}, {"referenceID": 20, "context": "Reinforcement learning [45, 21, 40, 31], known as \u201ca machine learning technique concerning how software agent ought to take actions in an environment so as to maximize some notion of cumulative reward\u201d, is well suited for the task of decisionmaking.", "startOffset": 23, "endOffset": 39}, {"referenceID": 39, "context": "Reinforcement learning [45, 21, 40, 31], known as \u201ca machine learning technique concerning how software agent ought to take actions in an environment so as to maximize some notion of cumulative reward\u201d, is well suited for the task of decisionmaking.", "startOffset": 23, "endOffset": 39}, {"referenceID": 30, "context": "Reinforcement learning [45, 21, 40, 31], known as \u201ca machine learning technique concerning how software agent ought to take actions in an environment so as to maximize some notion of cumulative reward\u201d, is well suited for the task of decisionmaking.", "startOffset": 23, "endOffset": 39}, {"referenceID": 37, "context": "[38] using deep neural networks and Monte Carlo Tree Search.", "startOffset": 0, "endOffset": 4}, {"referenceID": 31, "context": "Human-level gaming control [32] was achieved through deep Q-learning.", "startOffset": 27, "endOffset": 31}, {"referenceID": 48, "context": "A visual navigation system [49] was proposed recently based on actor-critic reinforcement learning model.", "startOffset": 27, "endOffset": 31}, {"referenceID": 34, "context": "One previous work in text generation [35] has used REINFORCE [45] to train its model by directly optimizing a user-specified evaluation metric.", "startOffset": 37, "endOffset": 41}, {"referenceID": 44, "context": "One previous work in text generation [35] has used REINFORCE [45] to train its model by directly optimizing a user-specified evaluation metric.", "startOffset": 61, "endOffset": 65}, {"referenceID": 34, "context": "Such metricdriven approach [35] is hard to generalize to other metrics.", "startOffset": 27, "endOffset": 31}, {"referenceID": 20, "context": "In this paper, we propose a training method using actor-critic reinforcement learning [21] driven by visual-semantic embedding [11, 19], which performs well across different evaluation metrics without re-training.", "startOffset": 86, "endOffset": 90}, {"referenceID": 10, "context": "In this paper, we propose a training method using actor-critic reinforcement learning [21] driven by visual-semantic embedding [11, 19], which performs well across different evaluation metrics without re-training.", "startOffset": 127, "endOffset": 135}, {"referenceID": 18, "context": "In this paper, we propose a training method using actor-critic reinforcement learning [21] driven by visual-semantic embedding [11, 19], which performs well across different evaluation metrics without re-training.", "startOffset": 127, "endOffset": 135}, {"referenceID": 34, "context": "Our approach shows significant performance improvement over [35].", "startOffset": 60, "endOffset": 64}, {"referenceID": 34, "context": "Moreover, we use a decision-making framework to generate captions, while [35] follows the existing encoder-decoder framework.", "startOffset": 73, "endOffset": 77}, {"referenceID": 43, "context": "It is similar to the basic image captioning model [44] used in the encoderdecoder framework.", "startOffset": 50, "endOffset": 54}, {"referenceID": 10, "context": "Visual-semantic embedding has been successfully applied to image classification [11, 37], retrieval [19, 36, 33], etc.", "startOffset": 80, "endOffset": 88}, {"referenceID": 36, "context": "Visual-semantic embedding has been successfully applied to image classification [11, 37], retrieval [19, 36, 33], etc.", "startOffset": 80, "endOffset": 88}, {"referenceID": 18, "context": "Visual-semantic embedding has been successfully applied to image classification [11, 37], retrieval [19, 36, 33], etc.", "startOffset": 100, "endOffset": 112}, {"referenceID": 35, "context": "Visual-semantic embedding has been successfully applied to image classification [11, 37], retrieval [19, 36, 33], etc.", "startOffset": 100, "endOffset": 112}, {"referenceID": 32, "context": "Visual-semantic embedding has been successfully applied to image classification [11, 37], retrieval [19, 36, 33], etc.", "startOffset": 100, "endOffset": 112}, {"referenceID": 37, "context": "Following [38], we learn p\u03c0 and v\u03b8 in two steps.", "startOffset": 10, "endOffset": 14}, {"referenceID": 44, "context": "Viewing the problem as a partially observable Markov decision process, however, allows us to bring techniques from the RL literature to bear: As shown in [45, 40, 31], a sample approximation to the gradient is:", "startOffset": 154, "endOffset": 166}, {"referenceID": 39, "context": "Viewing the problem as a partially observable Markov decision process, however, allows us to bring techniques from the RL literature to bear: As shown in [45, 40, 31], a sample approximation to the gradient is:", "startOffset": 154, "endOffset": 166}, {"referenceID": 30, "context": "Viewing the problem as a partially observable Markov decision process, however, allows us to bring techniques from the RL literature to bear: As shown in [45, 40, 31], a sample approximation to the gradient is:", "startOffset": 154, "endOffset": 166}, {"referenceID": 48, "context": "The action space of image captioning is in the order of 10 which equals the vocabulary size, while that of visual navigation in [49] is only 4, which indicates four directions to go.", "startOffset": 128, "endOffset": 132}, {"referenceID": 34, "context": "To handle this problem, we follow [35] to apply curriculum learning [1] to train our actor-critic model.", "startOffset": 34, "endOffset": 38}, {"referenceID": 0, "context": "To handle this problem, we follow [35] to apply curriculum learning [1] to train our actor-critic model.", "startOffset": 68, "endOffset": 71}, {"referenceID": 34, "context": "Please refer to [35] for details.", "startOffset": 16, "endOffset": 20}, {"referenceID": 37, "context": ", AlphaGo [38] utilized MCTS to combine both guidances.", "startOffset": 10, "endOffset": 14}, {"referenceID": 1, "context": "All the reported results are computed using Microsoft COCO caption evaluation tool [2], including the metrics BLEU, Meteor, Rouge-L and CIDEr, which are commonly used together for fair and thorough performance measure.", "startOffset": 83, "endOffset": 86}, {"referenceID": 28, "context": "Dataset We evaluate our method on the widely used MS COCO dataset [29] for the image captioning task.", "startOffset": 66, "endOffset": 70}, {"referenceID": 16, "context": "For fair comparison, we adopt the commonly used splits proposed in [17], which use 82,783 images for training, 5,000 images for validation, and 5,000 images for testing.", "startOffset": 67, "endOffset": 71}, {"referenceID": 16, "context": "We follow [17] to preprocess the captions (i.", "startOffset": 10, "endOffset": 14}, {"referenceID": 38, "context": "We use VGG-16 [39] as our CNN architecture and LSTM [14] as our RNN architecture.", "startOffset": 14, "endOffset": 18}, {"referenceID": 13, "context": "We use VGG-16 [39] as our CNN architecture and LSTM [14] as our RNN architecture.", "startOffset": 52, "endOffset": 56}, {"referenceID": 11, "context": ", ResNet [12], GRU [5], etc.", "startOffset": 9, "endOffset": 13}, {"referenceID": 4, "context": ", ResNet [12], GRU [5], etc.", "startOffset": 19, "endOffset": 22}, {"referenceID": 18, "context": "We followed [19] to use VGG-16 [39] as CNNe and GRU [5] as RNNe.", "startOffset": 12, "endOffset": 16}, {"referenceID": 38, "context": "We followed [19] to use VGG-16 [39] as CNNe and GRU [5] as RNNe.", "startOffset": 31, "endOffset": 35}, {"referenceID": 4, "context": "We followed [19] to use VGG-16 [39] as CNNe and GRU [5] as RNNe.", "startOffset": 52, "endOffset": 55}, {"referenceID": 17, "context": "Training details In training, we use Adam [18] algorithm to do model updating.", "startOffset": 42, "endOffset": 46}, {"referenceID": 47, "context": "Note that Semantic ATT [48] utilized rich extra data from social media to train their visual attribute predictor, and", "startOffset": 23, "endOffset": 27}, {"referenceID": 43, "context": "Methods Bleu-1 Bleu-2 Bleu-3 Bleu-4 METEOR Rouge-L CIDEr Google NIC [44] 0.", "startOffset": 68, "endOffset": 72}, {"referenceID": 29, "context": "m-RNN [30] 0.", "startOffset": 6, "endOffset": 10}, {"referenceID": 16, "context": "BRNN [17] 0.", "startOffset": 5, "endOffset": 9}, {"referenceID": 6, "context": "LRCN [7] 0.", "startOffset": 5, "endOffset": 8}, {"referenceID": 2, "context": "MSR/CMU [3] \u2212 \u2212 \u2212 0.", "startOffset": 8, "endOffset": 11}, {"referenceID": 45, "context": "204 \u2212 \u2212 Spatial ATT [46] 0.", "startOffset": 20, "endOffset": 24}, {"referenceID": 14, "context": "gLSTM [15] 0.", "startOffset": 6, "endOffset": 10}, {"referenceID": 34, "context": "MIXER [35] \u2212 \u2212 \u2212 0.", "startOffset": 6, "endOffset": 10}, {"referenceID": 47, "context": "29 \u2212 \u2212 \u2212 Semantic ATT [48] \u2217 0.", "startOffset": 22, "endOffset": 26}, {"referenceID": 12, "context": "243 \u2212 \u2212 DCC [13] \u2217 0.", "startOffset": 12, "endOffset": 16}, {"referenceID": 12, "context": "DCC [13] utilized external data to prove its unique transfer capacity.", "startOffset": 4, "endOffset": 8}, {"referenceID": 47, "context": "Surprisingly, even without external training data, our method outperforms [48, 13].", "startOffset": 74, "endOffset": 82}, {"referenceID": 12, "context": "Surprisingly, even without external training data, our method outperforms [48, 13].", "startOffset": 74, "endOffset": 82}, {"referenceID": 47, "context": "Comparing to methods other than [48, 13], our approach shows significant improvements in all the metrics except Bleu-1 in which our method ranks the second.", "startOffset": 32, "endOffset": 40}, {"referenceID": 12, "context": "Comparing to methods other than [48, 13], our approach shows significant improvements in all the metrics except Bleu-1 in which our method ranks the second.", "startOffset": 32, "endOffset": 40}, {"referenceID": 45, "context": "Bleu1 is related to single word accuracy, the performance gap of Bleu-1 between our method and [46] may be due to different preprocessing for word vocabularies.", "startOffset": 95, "endOffset": 99}, {"referenceID": 34, "context": "MIXER [35] is a metric-driven trained method.", "startOffset": 6, "endOffset": 10}, {"referenceID": 34, "context": "A model trained with Bleu-4 using [35] is hard to generalize to other metrics.", "startOffset": 34, "endOffset": 38}, {"referenceID": 43, "context": "Especially, considering our policy network shown in Figure 2 is based on a mechanism similar to the very basic image captioning model similar to Google NIC [44], such significant improvement over [44] validates the effectiveness of the proposed decision-making framework that utilizes both policy and value networks.", "startOffset": 156, "endOffset": 160}, {"referenceID": 43, "context": "Especially, considering our policy network shown in Figure 2 is based on a mechanism similar to the very basic image captioning model similar to Google NIC [44], such significant improvement over [44] validates the effectiveness of the proposed decision-making framework that utilizes both policy and value networks.", "startOffset": 196, "endOffset": 200}, {"referenceID": 16, "context": "As discovered in previous work such as [17], the image captioning performance becomes worse as the beam size gets larger.", "startOffset": 39, "endOffset": 43}], "year": 2017, "abstractText": "Image captioning is a challenging problem owing to the complexity in understanding the image content and diverse ways of describing it in natural language. Recent advances in deep neural networks have substantially improved the performance of this task. Most state-of-the-art approaches follow an encoder-decoder framework, which generates captions using a sequential recurrent prediction model. However, in this paper, we introduce a novel decision-making framework for image captioning. We utilize a \u201cpolicy network\u201d and a \u201cvalue network\u201d to collaboratively generate captions. The policy network serves as a local guidance by providing the confidence of predicting the next word according to the current state. Additionally, the value network serves as a global and lookahead guidance by evaluating all possible extensions of the current state. In essence, it adjusts the goal of predicting the correct words towards the goal of generating captions similar to the ground truth captions. We train both networks using an actor-critic reinforcement learning model, with a novel reward defined by visual-semantic embedding. Extensive experiments and analyses on the Microsoft COCO dataset show that the proposed framework outperforms state-ofthe-art approaches across different evaluation metrics.", "creator": "LaTeX with hyperref package"}}}