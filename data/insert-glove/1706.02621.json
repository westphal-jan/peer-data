{"id": "1706.02621", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "26-May-2017", "title": "Design and Implementation of Modified Fuzzy based CPU Scheduling Algorithm", "abstract": "holsapple CPU polverini Scheduling is 25.98 the sch\u00f6neberg base winter of nearside multiprogramming. wongwanich Scheduling is lisson a process ruis which decides alquist order telerecordings of awas task rowboats from burlin a set of multiple bundestag tasks 102-page that -39 are ready laetare to execute. There bangers are rusnok number leverton of CPU scheduling kraftwerke algorithms available, 1409 but qso it solidago is pancyprian very difficult chizuru task to ijaw decide hatcheries which one is myrtus better. This lanchester paper discusses the design 92.70 and implementation of modified fuzzy http://travel.state.gov based CPU three-legged scheduling 98.15 algorithm. furies This paper 63.25 present 1.058 a new set of fuzzy ceka rules. oxaliplatin It demonstrates blissed that scheduling m.c.a. done with 8,850 new priority improves cuckolded average waiting time and bookstall average turnaround monegro time.", "histories": [["v1", "Fri, 26 May 2017 16:39:55 GMT  (569kb)", "http://arxiv.org/abs/1706.02621v1", "6 Pages"]], "COMMENTS": "6 Pages", "reviews": [], "SUBJECTS": "cs.OS cs.AI", "authors": ["rajani kumari", "vivek kumar sharma", "sandeep kumar"], "accepted": false, "id": "1706.02621"}, "pdf": {"name": "1706.02621.pdf", "metadata": {"source": "META", "title": "Design and Implementation of Modified Fuzzy based CPU Scheduling Algorithm", "authors": ["Rajani Kumari", "Vivek Kumar Sharma", "Sandeep Kumar"], "emails": [], "sections": [{"heading": null, "text": "is a process which decides order of task from a set of multiple tasks that are ready to execute. There are number of CPU scheduling algorithms available, but it is very difficult task to decide which one is better. This paper discusses the design and implementation of modified fuzzy based CPU scheduling algorithm. This paper present a new set of fuzzy rules. It demonstrates that scheduling done with new priority improves average waiting time and average turnaround time."}, {"heading": "General Terms", "text": "Algorithms, CPU scheduling."}, {"heading": "Keywords", "text": "Fuzzy logic, Operating System, Priority, Scheduling Algorithms, Turnaround Time, Waiting Time."}, {"heading": "1. INTRODUCTION", "text": "Scheduling is a method by which thread or process are granted access to computer resources. Operating system is responsible for scheduling a process. Scheduling becomes necessary and important task when we have more than one ready to execute job. Scheduling optimize use of resources. Criteria for choosing best scheduling algorithm vary according nature or preferences of task. Five basic features to decide best scheduling algorithm are as follow [1, 2]:\n Utilization of CPU time\n Throughput\n Turnaround Time\n Waiting Time\n Response time\nThis paper considers only average waiting time and average turnaround time for the purpose of performance comparison. The organization of rest of paper is as follow: In section 2, we introduce three scheduling techniques named SJF, Priority scheduling and Fuzzy based priority scheduling. Next section proposes a modified fuzzy based scheduling algorithm and set of fuzzy rules. Section 4 gives results based on some case studies. Here one case study taken from paper presented by Kadhim, Shatha J., and Kasim M. Al-Aubidy in [1]. Finally conclude the result in section 5."}, {"heading": "2. SCHEDULING TECHNIQUES", "text": "Scheduling algorithms [3, 4] can be classified in different categories as per their applications. Like:\nPreemptive/ Non-preemptive Techniques \u2013 In case of preemptive scheduling algorithm, scheduler can stop/postpone execution of any task. But in case of non-preemptive algorithms it is not possible till job completion or running job voluntarily give up resources [2, 3].\nStatic /Dynamic priority scheduling \u2013 Static priority do not change, but dynamic priority can be modified.\nThis paper considers three scheduling algorithms Shortest Job First, Priority Scheduling and Fuzzy based CPU scheduling.\nShortest Job First (SJF) Scheduling Algorithm: This algorithm schedules jobs according to their execution time, job with lowest execution time scheduled first and job with largest execution time scheduled last. This is a nonpreemptive algorithm. Its variant known as shortest remaining time is preemptive. This algorithm reduces average waiting time. Shortest job first can be effectively used in case of interactive processes that usually follow a pattern of alternating between looking ahead to a command and execution of it. If the execution time of a method is considered a separate \"job\", past behavior will indicate that method to run next, supported based on estimate of its time period [2, 3, 5].\nPriority Scheduling Algorithm: The Operating System decides priority to each method, and therefore the scheduler arranges the processes within the ready queue so as of their priority. Processes with low priority may be interrupted when incoming process has high priority. There is a number of variant of priority scheduling; SJF is also a special case of priority scheduling. This algorithm sometimes face problem of infinite blocking and starvation, this problem can be removed by aging technique [2, 3].\nFuzzy based scheduling: Fuzzy based scheduling algorithm proposed by Kadhim, Shatha J., and Kasim M. Al-Aubidy in [1]. This algorithm takes input both job priority and execution time and decides new priority using some fuzzy rules. This algorithm uses some linguistic variables for priority given by system, new computed priority and execution time. Performance of this algorithm compared with SJF and classical priority scheduling methods [1]."}, {"heading": "3. FUZZY LOGIC", "text": "Fuzzy logic is a style of multi-valued logic. It deals with approximation rather than exactness. In contrast to classical sets (Classical set takes true or false values) fuzzy logic variables (also known as linguistic variable) can have a truth value that ranges in interval between 0 and 1. Fuzzy logic has been prolonged to grasp the concept of fractional truth, where the truth value may range between completely true and completely false. Moreover, when linguistic variables are practiced, these degrees may be determined by specific methods [6].\nIn recent years the application of fuzzy systems in real world issues is increasing due to the actual fact that fuzzy systems will affect linguistic knowledge beside the numerical knowledge. Now a day an outsized range of researchers are shifting towards fuzzy logic. Fuzzy logic has shown itself to be a strong design and analysis methodology in control theory, enabling the implementation of advanced knowledgebased control methods for complicated dynamic systems like those rising applications for systems and artificial biology. TA Hiwarkar et al. list a wide range of applications of fuzzy logic in [6]. K.A. Verma in [7] discussed type-1 fuzzy system and origin of type-2 fuzzy systems and theories and application fields of engineering, finance and medical domains. Xia Feng et al. [8] designed scheduler for embedded control system using fuzzy logic based feedback. A priority scheduler has been developed for mobile ad hoc networks by C. Gomathy et al. in [9]. Rajani Kumari et al. discussed air conditioning system with fuzzy logic [10]. A. Saleh proposed a gridscheduling algorithm on fuzzy matchmaking approach [11].\nFuzzy logic based algorithms are getting more popularity now a day as Reza salami et al. developed an efficient task scheduling algorithm for computational grids using NSGA II with fuzzy variance based crossover [12]. In this algorithm two functions are defined to generate two inputs for fuzzy based system. Variance of costs and presence of resource in scheduling are used to specify probability of crossover. It provides better solution in less number of iterations. H. Chuan et al. discussed fuzzy job shop scheduling problem based in interval number theory [13]. S. Mandloi et al. gives new idea based on ant colony optimization with genetic parameter selection for job scheduling in computational grid [14]. Fuzzy based scheduling algorithms implemented in cloud also. C. Yi Chun et al. proposed a fuzzy based dynamic load decision making scheme in cloud computing [15]."}, {"heading": "4. PROPOSED ALGORITHM", "text": "This scheduling deal with some fuzzy rules and these rules are based on assigned priority and execution time. This work is proposed to compute the New Priority (NP) for all tasks using pre priority and execution time with the help of Mamdani type inference [16].\nThis paper use suitable linguistic variables as input and output for compute a crisp value for new priority. Pre Priority (PP) measured as Very Low, Low, Medium, High and Very High. Execution Time (ET) measured as Very Small, Small, Medium, Long and Very Long. New Priority (NP) measured as Very Low, Low, Medium, High and Very High. The proposed scheduling is a collection of linguistic fuzzy rules which describe the relationship between defined input variables (PP and ET) and output (NP).\nTable contains 25 rules which are based on IF THEN statement such as: -\nIF PP is High and ET is Small THEN NP is High\nThese rules compute the crisp value using centroid Defuzzification method of Mamdani inference in MATLAB that represents the NP of each task.\nFor example: - If Priority is 5 and Execution Time is 20 Then New Priority is 3.81\nAfter assigning new priority, execution is start according to assigned priority and arrival time. Firstly find out the entire tasks which have minimum arrival time (0 sec) and execute the task which has higher priority from them till next task will enter in queue. Whenever a new task will enter again check the priority of entered task and execute the higher priority task till next tasks will enter and so on. After entering all tasks in queue execute remaining task as per higher to lower priority.\nALGORITHM 1: Fuzzy based CPU scheduling\n1.) Initialize n processes with their Execution Time, Priority and Arrival Time. 2.) Compute New Priority (NP) using fuzzy rules with the help of Execution Time and Priority. 3.) Apply sorting method on arrival time to arrange in ascending order.\nfor (i=1; i<n; i++) { for (j=1; j<n-i; j++) if (ATnj>ATnj+1) swap\n4.) Compute the frequency of same arrival time and store in x variable.\nz=1, AT = ATni, x=1 for (i=z; a<=n; i++)\nif (ATni == ATni+1) AT = ATni, x=x+1, z=z+1 Else AT1 =AT ni+1, z=z+1\nBreak\n5.) Compare New Priority of all the process which is having arrival time 0 and find Highest Priority (HP).\nHP= NPni for (i=1; i<=x; i++) x is frequency of arrival time 0. if (NPni < NPni+1)\nHP = NPni+1 Execute the process which has Highest Priority.\n6.) Execute this process until new process will not enter in queue.\nfor (i=1; i<AT1-AT; i++) Execute P\n7.) Whenever new process is enter, break execution of this process and then again find highest priority among all\nentered processes.\n8.) After entering all processes in queue apply sorting method on New Priority to arrange in ascending order. 9.) Execute all processes as per assigned priority.\nIt is very clear that the proposed fuzzy based algorithm obtain better result rather than another scheduling algorithm. It reduces the average waiting time and average turnaround time."}, {"heading": "5. RESULT AND PERFORMANCE OF MODIFIED FUZZY BASED SCHEDULING", "text": "To evaluate the performance and applicability of fuzzy based scheduling algorithm, we have taken different case studies and compare some scheduling algorithms such as SFJ, Priority algorithm, Fuzzy based CPU scheduling algorithm and proposed fuzzy based scheduling algorithm. Case study 1 taken from [1] and case study 2 is an independent example. Table 2 contains a case study with five different processes with different execution time and priority. It is assumed that all process available at time 0.\n1) Gantt chart for Priority Scheduling:\nP1 P2 P4 P5 P3\n0 3 27 36 44 50\nAverage Waiting Time: 22 Average Turn Around Time: 32\n2) Gantt chart for SJF Scheduling:\nP1 P3 P5 P4 P2 0 3 9 17 26 50 Average Waiting Time: 11.0 Average Turn Around Time: 21.0\n3) Gantt chart for Priority using Fuzzy based CPU Scheduling:\nP1 P4 P5 P3 P2\n0 3 12 20 26 50\nAverage Waiting Time: 12.2 Average Turn Around Time: 22.2\n4) Gantt chart for New Priority Scheduling:\nP1 P3 P4 P5 P2 0 3 9 18 26 50 Average Waiting Time: 11.2\nAverage Turn Around Time: 21.2\nComparison of proposed algorithm with SJF, Priority scheduling and fuzzy based priority scheduling based on case study-1(Without Arrival Time) outlined in Fig. 5. It is clear from results that new priority algorithm outperform almost all existing algorithms.\nTable 3 again contains a case study with five different processes with different execution time and priority. Now each process assigned arrival time."}, {"heading": "Fuzzy based", "text": ""}, {"heading": "Arrival Time 2 1 2 1 0", "text": ""}, {"heading": "Execution time 3 24 6 9 8", "text": ""}, {"heading": "Processes P1 P2 P3 P4 P5", "text": "Comparison of proposed algorithm with SJF, Priority scheduling and fuzzy based priority scheduling based on case study-1(With Arrival Time) shown in Fig. 6. It demonstrates that proposed algorithm outperform mostly existing algorithms.\nTable 4 contains an independent case study with eight different processes with different execution time and priority. Each process assigned arrival time.\n3) Gantt chart for New Priority Scheduling:\nAverage Waiting Time: 25.5\nAverage Turn Around Time: 36.75\nComparative analysis of proposed algorithm with SJF, Priority scheduling and fuzzy based priority scheduling based on case study-2 shown in Fig. 7. It is outlined that proposed algorithm outperform priority scheduling and a little bit less than SJF algorithms."}, {"heading": "6. CONCLUSIONS", "text": "The proposed fuzzy based scheduling algorithm is an efficient scheduling algorithm that is obtained batter result rather than other algorithm. Figure 5 and 6 shows the comparison between SJF, Priority scheduling algorithm, Fuzzy based CPU scheduling algorithm and proposed new fuzzy based scheduling algorithm. The average waiting time and average turnaround time of proposed fuzzy based algorithm is much better than the Priority algorithm, Fuzzy based CPU scheduling algorithm and closer to obtain by SJF algorithm, but SJF algorithm doesn\u2019t deal with task priority. Figure 7 shows the comparison between SJF, Fuzzy based CPU scheduling algorithm and proposed new fuzzy based scheduling algorithm. Results prove that algorithm proposed in this paper is much better than existing algorithms."}, {"heading": "7. REFERENCES", "text": "[1] Kadhim, Shatha J., and Kasim M. Al-Aubidy. \"Design\nand Evaluation of a Fuzzy-Based CPU Scheduling Algorithm\" Information Processing and Management (2010): 45-52.\n[2] Tanenbaum, A. S. (2008). Modern Operating Systems (3rd ed.). Pearson Education, Inc. p. 156. ISBN 0-13-\n600663-9.\n[3] Stallings, W.: Operating Systems Internals and Design Principles, 5th edn. Prentice-Hall, Englewood Cliffs\n(2004)"}, {"heading": "Processes P1 P2 P3 P4 P5 P6 P7 P8", "text": ""}, {"heading": "Arrival", "text": ""}, {"heading": "New", "text": "P2 P4 P2 P5 P3 P8 P1 P6 P7\n6\n[4] Blazewicz, J., Ecker, K.H., Pesch, E., Schmidt, G., Weglarz, J.: Scheduling Computer and Manufacturing\nProcesses. Springer, Berlin (2001)\n[5] Shahzad, B., Afzal, M.T.: Optimized Solution to Shortest Job First by Eliminating the Starvation. In: The 6th\nJordanian Inr. Electri cal and Electronics Eng. Conference (JIEEEC 2006), Jordan (2006).\n[6] Hiwarkar, Tryambak A., and R. Sridhar Iyer. \"New Applications of Soft Computing, Artificial Intelligence,\nFuzzy Logic & Genetic Algorithm in Bioinformatics.\" (2013).\n[7] Varma, K. Ajay, D. K. Mohanta, and M. J. B. Reddy. \"Applications of type-2 fuzzy logic in power systems: A\nliterature survey.\" Environment and Electrical Engineering (EEEIC), 2013 12th International Conference on. IEEE, 2013.\n[8] Xia, Feng, et al. \"Fuzzy logic based feedback scheduler for embedded control systems.\" Advances in Intelligent\nComputing. Springer Berlin Heidelberg, 2005. 453-462.\n[9] Gomathy, C., and S. Shanmugavel. \"An efficient fuzzy based priority scheduler for mobile ad hoc networks and\nperformance analysis for various mobility models.\" Wireless Communications and Networking Conference, 2004. WCNC. 2004 IEEE. Vol. 2. IEEE, 2004.\n[10] Rajani Kumari et al.,\u201cAir Conditioning System with Fuzzy Logic and Neuro-fuzzy Algorithm\u201d, Advances in\nIntelligent Systems and Computing, Springer, Vol. 236, ISBN 978-81-322-1601-8.(2013)\n[11] Saleh, Ahmed I. \"An efficient grid-scheduling strategy based on a fuzzy matchmaking approach.\" Soft\nComputing 17.3 (2013): 467-487.\n[12] Salimi, Reza, Navid Bazrkar, and Mostafa Nemati. \"Task Scheduling for Computational Grids Using NSGA II\nwith Fuzzy Variance Based Crossover.\" Advances in Computing 3, no. 2 (2013): 22-29.\n[13] He, Chuan, Dishan Qiu, and Hao Guo. \"Solving Fuzzy Job Shop Scheduling Problem Based on Interval Number\nTheory.\" In Proceedings of the 2012 International Conference on Information Technology and Software Engineering, pp. 393-401. Springer Berlin Heidelberg, 2013.\n[14] Mandloi, Saurabh, and Hitesh Gupta. \"Adaptive job Scheduling for Computational Grid based on Ant Colony\nOptimization with Genetic Parameter Selection.\" International Journal (2013).\n[15] Chang, Yi Chun, and Yao Tien Wang. \"A Fuzzy-Based Dynamic Load Decision Making Scheme in Cloud\nComputing.\" Advanced Materials Research 718 (2013): 2191-2196.\n[16] Yen, John, and Reza Langari. Fuzzy logic: intelligence, control, and information. Prentice-Hall, Inc., 1998.\nIJCATM : www.ijcaonline.org"}], "references": [{"title": "Design and Evaluation of a Fuzzy-Based CPU Scheduling Algorithm", "author": ["Kadhim", "Shatha J", "Kasim M. Al-Aubidy"], "venue": "Information Processing and Management", "citeRegEx": "1", "shortCiteRegEx": "1", "year": 2010}, {"title": "Execution time 18 5 7 2 9 20 12 15 Arrival Time 4 0 2 2 0 2 0 4 Priority 5 6 3 7 4 8 2 9 New Priority", "author": ["W. Stallings"], "venue": "Operating Systems Internals and Design Principles,", "citeRegEx": "3", "shortCiteRegEx": "3", "year": 2013}, {"title": "Scheduling Computer and Manufacturing Processes", "author": ["J. Blazewicz", "K.H. Ecker", "E. Pesch", "G. Schmidt", "J. Weglarz"], "venue": null, "citeRegEx": "4", "shortCiteRegEx": "4", "year": 2001}, {"title": "Optimized Solution to Shortest Job First by Eliminating the Starvation", "author": ["B. Shahzad", "M.T. Afzal"], "venue": "The 6th Jordanian Inr. Electri cal and Electronics Eng. Conference (JIEEEC", "citeRegEx": "5", "shortCiteRegEx": "5", "year": 2006}, {"title": "New Applications of Soft Computing, Artificial Intelligence, Fuzzy Logic & Genetic Algorithm", "author": ["Hiwarkar", "Tryambak A", "R. Sridhar Iyer"], "venue": null, "citeRegEx": "6", "shortCiteRegEx": "6", "year": 2013}, {"title": "Applications of type-2 fuzzy logic in power systems: A literature survey.\" Environment and Electrical Engineering (EEEIC)", "author": ["Varma", "K. Ajay", "D.K. Mohanta", "M.J.B. Reddy"], "venue": null, "citeRegEx": "7", "shortCiteRegEx": "7", "year": 2013}, {"title": "Fuzzy logic based feedback scheduler for embedded control systems.\" Advances in Intelligent Computing", "author": ["Xia", "Feng"], "venue": null, "citeRegEx": "8", "shortCiteRegEx": "8", "year": 2005}, {"title": "An efficient fuzzy based priority scheduler for mobile ad hoc networks and performance analysis for various mobility models.", "author": ["C. Gomathy", "S. Shanmugavel"], "venue": "Wireless Communications and Networking Conference,", "citeRegEx": "9", "shortCiteRegEx": "9", "year": 2004}, {"title": "An efficient grid-scheduling strategy based on a fuzzy matchmaking approach.", "author": ["Saleh", "Ahmed I"], "venue": "Soft Computing", "citeRegEx": "11", "shortCiteRegEx": "11", "year": 2013}, {"title": "Task Scheduling for Computational Grids Using NSGA II with Fuzzy Variance Based Crossover.\" Advances in Computing", "author": ["Salimi", "Reza", "Navid Bazrkar", "Mostafa Nemati"], "venue": null, "citeRegEx": "12", "shortCiteRegEx": "12", "year": 2013}, {"title": "Solving Fuzzy Job Shop Scheduling Problem Based on Interval Number Theory.", "author": ["He", "Chuan", "Dishan Qiu", "Hao Guo"], "venue": "In Proceedings of the 2012 International Conference on Information Technology and Software Engineering,", "citeRegEx": "13", "shortCiteRegEx": "13", "year": 2013}, {"title": "Adaptive job Scheduling for Computational Grid based on Ant Colony Optimization with Genetic Parameter Selection.", "author": ["Mandloi", "Saurabh", "Hitesh Gupta"], "venue": null, "citeRegEx": "14", "shortCiteRegEx": "14", "year": 2013}, {"title": "A Fuzzy-Based Dynamic Load Decision Making Scheme in Cloud Computing.", "author": ["Chang", "Yi Chun", "Yao Tien Wang"], "venue": "Advanced Materials Research", "citeRegEx": "15", "shortCiteRegEx": "15", "year": 2013}, {"title": "Fuzzy logic: intelligence, control, and information", "author": ["Yen", "John", "Reza Langari"], "venue": "Prentice-Hall, Inc.,", "citeRegEx": "16", "shortCiteRegEx": "16", "year": 1998}], "referenceMentions": [{"referenceID": 0, "context": "Five basic features to decide best scheduling algorithm are as follow [1, 2]:", "startOffset": 70, "endOffset": 76}, {"referenceID": 0, "context": "Al-Aubidy in [1].", "startOffset": 13, "endOffset": 16}, {"referenceID": 1, "context": "SCHEDULING TECHNIQUES Scheduling algorithms [3, 4] can be classified in different categories as per their applications.", "startOffset": 44, "endOffset": 50}, {"referenceID": 2, "context": "SCHEDULING TECHNIQUES Scheduling algorithms [3, 4] can be classified in different categories as per their applications.", "startOffset": 44, "endOffset": 50}, {"referenceID": 1, "context": "But in case of non-preemptive algorithms it is not possible till job completion or running job voluntarily give up resources [2, 3].", "startOffset": 125, "endOffset": 131}, {"referenceID": 1, "context": "If the execution time of a method is considered a separate \"job\", past behavior will indicate that method to run next, supported based on estimate of its time period [2, 3, 5].", "startOffset": 166, "endOffset": 175}, {"referenceID": 3, "context": "If the execution time of a method is considered a separate \"job\", past behavior will indicate that method to run next, supported based on estimate of its time period [2, 3, 5].", "startOffset": 166, "endOffset": 175}, {"referenceID": 1, "context": "This algorithm sometimes face problem of infinite blocking and starvation, this problem can be removed by aging technique [2, 3].", "startOffset": 122, "endOffset": 128}, {"referenceID": 0, "context": "Al-Aubidy in [1].", "startOffset": 13, "endOffset": 16}, {"referenceID": 0, "context": "Performance of this algorithm compared with SJF and classical priority scheduling methods [1].", "startOffset": 90, "endOffset": 93}, {"referenceID": 4, "context": "Moreover, when linguistic variables are practiced, these degrees may be determined by specific methods [6].", "startOffset": 103, "endOffset": 106}, {"referenceID": 4, "context": "list a wide range of applications of fuzzy logic in [6].", "startOffset": 52, "endOffset": 55}, {"referenceID": 5, "context": "Verma in [7] discussed type-1 fuzzy system and origin of type-2 fuzzy systems and theories and application fields of engineering, finance and medical domains.", "startOffset": 9, "endOffset": 12}, {"referenceID": 6, "context": "[8] designed scheduler for embedded control system using fuzzy logic based feedback.", "startOffset": 0, "endOffset": 3}, {"referenceID": 7, "context": "in [9].", "startOffset": 3, "endOffset": 6}, {"referenceID": 8, "context": "Saleh proposed a gridscheduling algorithm on fuzzy matchmaking approach [11].", "startOffset": 72, "endOffset": 76}, {"referenceID": 9, "context": "developed an efficient task scheduling algorithm for computational grids using NSGA II with fuzzy variance based crossover [12].", "startOffset": 123, "endOffset": 127}, {"referenceID": 10, "context": "discussed fuzzy job shop scheduling problem based in interval number theory [13].", "startOffset": 76, "endOffset": 80}, {"referenceID": 11, "context": "gives new idea based on ant colony optimization with genetic parameter selection for job scheduling in computational grid [14].", "startOffset": 122, "endOffset": 126}, {"referenceID": 12, "context": "proposed a fuzzy based dynamic load decision making scheme in cloud computing [15].", "startOffset": 78, "endOffset": 82}, {"referenceID": 13, "context": "This work is proposed to compute the New Priority (NP) for all tasks using pre priority and execution time with the help of Mamdani type inference [16].", "startOffset": 147, "endOffset": 151}, {"referenceID": 0, "context": "Case study 1 taken from [1] and case study 2 is an independent example.", "startOffset": 24, "endOffset": 27}], "year": 2013, "abstractText": "CPU Scheduling is the base of multiprogramming. Scheduling is a process which decides order of task from a set of multiple tasks that are ready to execute. There are number of CPU scheduling algorithms available, but it is very difficult task to decide which one is better. This paper discusses the design and implementation of modified fuzzy based CPU scheduling algorithm. This paper present a new set of fuzzy rules. It demonstrates that scheduling done with new priority improves average waiting time and average turnaround time. General Terms Algorithms, CPU scheduling.", "creator": "Microsoft\u00ae Office Word 2007"}}}