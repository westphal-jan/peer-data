{"id": "1706.02901", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "7-Jun-2017", "title": "Characterizing Types of Convolution in Deep Convolutional Recurrent Neural Networks for Robust Speech Emotion Recognition", "abstract": "hezbullah Deep homecomings convolutional dornan neural networks oschatz are pyracantha being actively investigated in a 12-and wide west-northwestward range caldara of run-length speech and mveverka audio processing frenemies applications doby including speech recognition, dxr audio superwoman event detection werling and computational kamadhenu paralinguistics, karaims owing 1.062 to their ability vanette to 6-feet-4 reduce mortal factors of v\u00e1h variations, such as speaker and nichelle environment information in hazlet signals, for speech ashurnasirpal recognition. However, studies have lupine suggested drigo to flippin favor a certain pipp type victorianism of grushin convolutional operations when grinderman building a deep transient convolutional waqa neural network for speech techno-thriller applications although betim there has been thomae promising sidex results baru using acedera different types 7,860 of zender convolutional operations. salivate In short-tailed this 249.2 work, 122-run we 11.58 study residentially four 692 types 63.1 of jenelle convolutional relativizer operations flagellants on mardi different hifi input features bci for mohamedi speech 1350s emotion recognition sandiford in order sincelejo to 37-acre derive a comprehensive understanding. Since affective behavioral investigate information tellabs has sathyamangalam been shown 1,047 to omaruru reflect rulebooks temporally varying of gwaii mental state and mihailo convolutional zehle operation undereducated are applied nonwoven locally in multi-national time, all deep foskett neural mystere networks share 173.9 a deep yazoo recurrent kuniyoshi sub - 121-year network architecture for tohir further temporal modeling. carbides We winmill present detailed quantitative censorious module - backpedal wise 2-0-11-0 performance siamang analysis to helpe gain isolina insights into information flows macierewicz within meshach the gilardino proposed architectures. druglords In particular, folksy we feist demonstrate ryck the chamounix interplay yaogan of charlemont affective information and schwartzenberg the neighing other irrelevant medecin information intensifying during the progression from inconspicua one module to balanian another. Finally we show that all of 47-31 our deep neural ta networks hobnobbing provide mamboundou state - tipples of - notosusanto the - mont. art performance on the eNTERFACE ' caeciliidae 05 corpus.", "histories": [["v1", "Wed, 7 Jun 2017 15:17:21 GMT  (2024kb)", "http://arxiv.org/abs/1706.02901v1", "Submitted to IEEE transaction"]], "COMMENTS": "Submitted to IEEE transaction", "reviews": [], "SUBJECTS": "cs.LG cs.CL cs.MM cs.SD", "authors": ["che-wei huang", "shrikanth s narayanan"], "accepted": false, "id": "1706.02901"}, "pdf": {"name": "1706.02901.pdf", "metadata": {"source": "CRF", "title": "Characterizing Types of Convolution in Deep Convolutional Recurrent Neural Networks for Robust Speech Emotion Recognition", "authors": ["Che-Wei Huang"], "emails": [], "sections": [{"heading": null, "text": "ar X\niv :1\n70 6.\n02 90\n1v 1\n[ cs\n.L G\n] 7\nJ un\n2 01\n7 SUBMITTED TO THE IEEE TRANSACTIONS 1\napplications including speech recognition, audio event detection and computational paralinguistics, owing to their ability to reduce factors of variations, such as speaker and environment information in signals, for speech recognition. However, studies have suggested to favor a certain type of convolutional operations when building a deep convolutional neural network for speech applications although there has been promising results using different types of convolutional operations. In this work, we study four types of convolutional operations on different input features for speech emotion recognition in order to derive a comprehensive understanding. Since affective behavioral information has been shown to reflect temporally varying of mental state and convolutional operation are applied locally in time, all deep neural networks share a deep recurrent sub-network architecture for further temporal modeling. We present detailed quantitative module-wise performance analysis to gain insights into information flows within the proposed architectures. In particular, we demonstrate the interplay of affective information and the other irrelevant information during the progression from one module to another. Finally we show that all of our deep neural networks provide state-of-the-art performance on the eNTERFACE\u201905 corpus.\nIndex Terms\u2014Deep Convolutional Recurrent Neural Networks, Affective Computing, Speech Emotion Recognition, Spectral Convolution, Temporal Convolution, Spectral-Temporal Convolution, Full-Spectrum Temporal Convolution\n\u2726"}, {"heading": "1 INTRODUCTION", "text": "EMotion plays a fundamental role in our daily lives foreffective communication, which underlies the abilities of humans to interact, collaborate, empathize and even compete with others. Researchers have been working on understanding human emotion, or in general human behaviors [1], for years from both psychological and computational perspectives for several reasons including because it serves as a lens to observe the dynamics of one\u2019s internal mental state. Moreover, with the advent of artificially intelligent agents, it is hardly an overstatement to stress the importance of emotion recognition in supporting natural and engaging human-machine interaction.\nHuman behavioral cues often mix and manifest multiple sources of information together. To robustly recover affective information from multiplexed behavioral cues renders emotion recognition a challenging task. For example, speech contains not only linguistic content of what is said but also attributes of the speaker such as identity, gender and age, speaking style, and language background as well as information about the environment and context. All of these factors are entangled and transmitted through a single channel during speech articulation. Speech emotion recognition, therefore, involves the inverse process of disentangling these signals and identifying affective information.\nA multitude of studies on the subject of emotion recognition have discovered a number of emotion-related pa-\n\u2022 The authors are with the Department of Electrical Engineering and Signal and Image Processing Institute (SAIL), University of Southern California, Los Angeles, CA 90089 USA E-mail: cheweihu@usc.edu; shri@sipi.usc.edu \u2022 This work is supported by NSF.\nrameters based on prior knowledge of psychology, speech science, vision science and through signal processing and machine learning approaches. The commonly used features include pitch, log-Mel filterbank energies (log-Mels), Melfrequency cepstral coefficients (MFCCs) and perceptual linear prediction in the acoustic modality, and Haar, local binary pattern, histogram of oriented gradients and scaleinvariant feature transform in visual modality. A variety of classifiers based on these features have been reported to perform well. In particular, an extensive feature set consisting of thousands of hand-engineered parameters has been recommended in the past few INTERSPEECH challenges [2], and in a recent meta research review article [3].\nIn addition to hand-crafted feature engineering, deep learning [4], [5], [6] provides an alternative approach to formulate appropriate features for the task at hand. In the last few years, convolutional neural networks (CNNs) [7], [8], [9], [10], [11] have demonstrated outstanding performances in various applications including image recognition, object detection, and recently speech acoustic modeling. Compared to hand-crafted features, a CNN that learns from a large number of training samples via a deep architecture can capture a higher-level representation for the taskspecific knowledge distilled from annotated data. In the area of speech emotion recognition, several researchers have investigated the effectiveness of CNNs into automatically learning affective information from signal data [12], [13], [14], [15].\nInformation encoded in speech signals is inherently sequential. Moreover, psychological studies have shown that affective information involves a slow temporal evolution of mental states [16]. Based on this observation, previous\nstudies have also investigated the use of architectures that explicitly model the temporal dynamics, such as hidden Markov models (HMM) [17] or recurrent neural networks (RNN) [18], [19], [20] for recognizing human emotion in speech.\nFurthermore, there is a growing trend in combining CNN and RNN into one architecture and to train the entire model in an end-to-end fashion. The motivation behind a holistic training is derived from the need to avoid greedily enforcing the distribution of intermediate layers to approximate that of labels, which is believed to maximally exploit the advantage of deep learning over traditional learning methods and would lead to an improved performance. For example, Sainath et al. proposed an architecture, called the Convolutional Long Short-Term Memory Deep Neural Networks (CLDNN) model, made up of a few convolutional layers, long short-term memory gated (LSTM) RNN layers and fully connected (FC) layers in the respective order. They trained CLDNNs on the log-Mel filterbank energies [21] and on the raw waveform speech signal [22] for speech recognition, and showed that both CLDNN models outperform CNN and LSTM alone or combined. Likewise, Huang et al. [23] and Lim et al. [24] reported CLDNN-based speech emotion recognition experiments, on log-Mels and spectrograms respectively, using similar benchmark settings to highlight the superior performance resulting from an endto-end training.\nIn this work, we extend our previous work in [23] to characterize four types of convolutional operations in a CLDNN for speech emotion recognition. We use log-Mels and MFCCs as input to the proposed models depending on their spectral-temporal correlation. In particular, we compare spectral decorrelation power between one type of the convolutional operations and the discrete cosine transformation (DCT), under both clean and noisy conditions. In addition, we quantitatively and visually analyze modules in the proposed CLDNN-based models in order to gain insights into the information flows within the models.\nThe outline of this paper is as follows. Section 2 reviews previous related work. Section 3 presents the architecture of the proposed models and Section 4 describes three competitive baseline models. Section 5 introduces the corpus and data augmentation procedure. Section 6 details the experimental settings and the results are interpreted in Section 7. Section 8 concludes this paper."}, {"heading": "2 RELATED WORK", "text": "Before the present era of deep learning, speech emotion recognition systems prevalently relied on a two-stage training approach, where feature engineering and classifier training were performed separately. Commonly used handcrafted features include pitch, MFCC, log-Mels and the recommended feature sets from the INTERSPEECH challenges. Support vector machine (SVM) and extreme learning machine (ELM) were two of the most competitive classifiers. For the ease to compare models, Eyben et al. [3] summarized the performances by a SVM trained on the INTERSPEECH challenge feature sets over several public corpora. Yan et al. [25] recently proposed a sparse kernel reduced-rank regression for bimodal emotion recognition (SKRRR) from\nfacial expressions and speech, which has achieved one of the state-of-the-art performances on the eNTERFACE\u201905 [26] corpus.\nHan et al. [27] employed a multilayer perceptron (MLP) to learn from spliced data frames and took statistics of aggregated frame posteriors as utterance-level features. An MLP-ELM supervised by these utterance features and the corresponding labels has been shown to outperform the MLP-SVM model.\nIt has been known that emotion involves temporal variations of mental state. To exploit this fact, Wo\u0308llmer et al. [18] and Metallinou et al. [19] conducted experiments at the conversation-level to show that human emotion depends on the context of a long-term temporal relationship using HMM and Bi-directional LSTM (BLSTM). Lee et al. [20] posed speech emotion recognition at the utterance level as a sequence learning problem and trained an LSTM with a connectionist temporal classification objective to align voiced frames with emotion activation.\nDeep CNNmodels were initially applied to computer vision related tasks and have achievedmany ground-breaking results [7], [8], [9], [10], [11]. Recently, researchers have started to consider their use in the acoustic domain, including speech recognition [21], [22], [28], [29], [30], audio event detection [31], [32] and speech emotion recognition [12], [13]. Abdel-Hamid et al. [28] concluded that one of the advantages in using CNNs to learn from less processed features such as raw waveforms, spectrograms and log-Mels is their ability to reduce spectral variation, including speaker and environmental variabilities; this capability is attributed to structures such as local connectivity, weight sharing, and pooling. When training a CNN model for speech emotion recognition, Mao et al. [12] proposed to learn the filters in a CNN on spectrally whitened spectrograms. The learning, however, is carried out by a sparse auto-encoder in an unsupervised fashion. Anand et al. [13] benchmarked two types of convolutional operations in their CNN-based speech emotion recognition systems: the spectral-temporally convolutional operation and the full-spectrum temporally convolutional operation. Their results showed the full-spectrum temporal convolution is more favorable for speech emotion recognition. They also reported the performance of an LSTM trained on the raw spectrograms.\nRecently, Sainath et al. proposed the CLDNN architecture for speech recognition based on the log-Mels [21] and the raw waveform signal [22], in which both models have been shown to more competitive than a LSTM and a CNN model alone or combined. They also demonstrated that with a sufficient amount of training data (roughly 2, 000 hours), a CLDNN trained on the raw waveform signal can match the one trained on the log-Mels. Moreover, they found the raw waveform and the log-Mels in fact provide complementary information. Based on the CLDNN architecture, Trigeorgis et al. [33] published a model using the raw waveform signal for continuous emotion tracking. Huang et al. [23] trained a CLDNN model on the log-Mels for speech emotion recognition and quantitatively analyzed the difference in spectrally decorrelating power between the discrete cosine transformation and the convolutional operation. Lim et al. [24] repeated the comparison between CNN, LSTM and CLDNN for speech emotion recognition using spectrograms. Ma\net al. [34] applied the CLDNN architecture to classifying depression based on the log-Mels and spectrograms. They employed the full-spectrum temporally convolutional operation on the log-Mels but the temporally-only convolutional operation on the spectrograms.\nOn the multi-modal side, Zhang et al. [14] fine-tuned the AlexNet on spectrograms and images, separately, for audio-visual emotion recognition but only applied timeaveraging for temporal pooling. Tzirakis et al. [35] extended the uni-modal work in [33] to make use of visual cues. They fine-tuned the pre-trained ResNet model [11] for facial expression recognition and then re-trained the concatenated bimodal network with the LSTM layers re-initialized again.\nWe intend to extend our work in [23] to study four types of convolutional operations for speech emotion recognition. Our contributions are multi-fold. First of all, we consider all commonly used convolutional operations for offering a comprehensive understanding, including two types covered in [13]. Second, unlike previous studies [13], [36] that increased training corpus size internally, we perform data augmentation with a noise corpus. As a result, we evaluate the proposed models under both clean and noisy conditions to quantitatively measure the influence of noise on different types of convolutional operations. To the best of our knowledge, we are the first to study noise influence on types of convolutional operations. Furthermore, we carry out module-wise evaluation and visualization to analyze the information flows of different factors encoded in speech and their interplay along the depth of an architecture.\nThis work is similar to Anand et al. [13] because we both report the benchmarking of convolutional types. However, in addition to the novelty aforementioned, we train our models in an end-to-end fashion on log-Mels and MFCCs depending on their locally spectral-temporal correlation. Moreover, we keep the testing partition speakerindependent of the training parition. Ma et al. [34] also experimented with two types of convolutional operations but they applied them to different features. As a result, it is difficult to draw a fair conclusion from the comparison. This work is also similar to Trigeorgis et al. [33], Lim et al. [24] and Huang et al. [23], where all adopt the CLDNN architecture for speech emotion recognition/tracking but the underlying features and the intended goals are different."}, {"heading": "3 DEEP CONVOLUTIONAL RECURRENT MODELS", "text": "In this section we describe the proposed deep convolutional recurrent networks and details of structurally different convolutional operations on the log-Mels and the MFCCs. Fig. 1 illustrates the overview of the models we design for speech emotion recognition. In the upper left part of Fig. 1, we define four types of convolutional operations depending on the shape of their feature maps. By dividing the convolutional operations into four types, we expect to understand their differences for a finer analysis after they have been optimized to learn from the spectral-temporal signals; in the upper right part of Fig. 1, we depict a deep recurrent neural network, called the LDNN model, as the common sub-network architecture for every model. As a convolutional layer is applied locally in time, the LDNN model is supposed to model the long-term temporal\nrelationship within an utterance; in the bottom part of Fig. 1, all models are presented for a comprehensive study to understand the role a convolutional layer plays in learning the affective information in speech. For each model, we only consider spectral-temporal features as its input. Specifically, an emotional utterance u is represented by a sequence of spectral features {xut }. These spectral features can either be the log-Mels or the MFCCs depending on the application scenario. Overall, we present eight models based on the combinations of the factors including the input features (the log-Mels or the MFCCs) and the type of convolutional operations (spectral only, temporal only, spectral-temporal or full-spectrum temporal). In the following subsections, we give a brief review of the convolutional and recurrent neural layers and introduce corresponding notations."}, {"heading": "3.1 Types of Convolutional Operations", "text": "A convolutional neural layer Conv that receives an input tensor X \u2208 RC\u00d7H 0 \u00d7W 0 consists of a convolutional function F\u03ba : R C\u00d7H0\u00d7W 0 7\u2192 RK\u00d7H 1 \u00d7W 1 , an activation function \u03c3 and an optional pooling function F\u03c0 : R K\u00d7H1\u00d7W 1 7\u2192 R K\u00d7H2\u00d7W 2 . The convolutional function F\u03ba is defined by K feature maps (hk,bk) \u2208 R C\u00d7h\u00d7w \u00d7RH 1 \u00d7W 1 of shape h\u00d7w, where the kijth component of F\u03ba(X) is given as\nF\u03ba(X)kij , hk \u2217X hw ij + bkij\n= C\u22121 \u2211\nc=0\nh\u22121 \u2211\n\u00b5=0\nw\u22121 \u2211\n\u03bd=0\nXij [c, \u00b5, \u03bd]hk[c, \u00b5, \u03bd] + bkij ,(1)\nin which Xij [c, \u00b5, \u03bd] = X[c, i \u00b7 s\u03ba + \u00b5, j \u00b7 t\u03ba + \u03bd]. Likewise, it is straight-forward to formulate the pooling function F\u03c0 acting on an input Y \u2208 R K\u00d7H1\u00d7W 1 through a filter of shape m\u00d7 n by the component-wise definition:\nF\u03c0(Y)kij , \u03c0 ( Ymnkij ) , (2)\nwhere Ymnkij \u2208 R m\u00d7n is a sub-tensor of Y lying on the kth slice of Y with its first entry aligned to Y[k, i \u00b7 s\u03c0, j \u00b7 t\u03c0], and \u03c0 is the pooling operation, usually the max or the mean functions. In Eqs. (1) and (2), s\u03ba, t\u03ba, s\u03c0 and t\u03c0 are the strides, i.e. the amount of shift, of the filters in the convolutional or the pooling operations in their respective directions.\nTypical choices of the activation functions include the sigmoid function \u03c3(x) = 1\n1+exp(\u2212x) , the hyperbolic tangent\nfunction \u03c3(x) = tanh(x) and the rectified linear unit (ReLU) \u03c3(x) = max(0, x).\nConcisely, a convolutional neural layer can be summarized as a function composition\nConv , F\u03c0 \u25e6 (\u03c3 \u2299 F\u03ba), (3)\nwhere \u2299 denotes the element-wise application. In this work, we concentrate entirely on the convolution function F\u03ba and adjust the pooling function F\u03c0 accordingly. In particular, we are interested in the relationship between the acoustic emotional pattern learnt by the model and the shape of the filter hk in feature maps. To this end, we divide the shapes of the filters hk into four categories to highlight their structural differences: the full-spectrum temporally (FST-Conv), the spectral-temporally (ST-Conv),\nthe temporally only (T-Conv) and the spectrally only (SConv) convolutional operations. In what follows, we mathematically define each category.\nFST-Conv: First of all, we consider filters of shape M \u00d7 w for w \u2265 2, where M denotes the number of spectral bands and w specifies the width on the temporal axis. Since this type of filters covers the entire spectrum, they convolve with the input tensor only in the temporal direction and as a result the pooling function can only perform temporal pooling.\nST-Conv: A ST-Conv layer contains filters of shape h \u00d7 w, where 2 \u2264 h \u2264 M \u2212 1 and w \u2265 2. This type of filters observes local spectral-temporal information at a\ntime and is free to convolve with the input tensor in both directions. Accordingly, the pooling function also operates on the convolved tensor through a two-dimensional filter.\nT-Conv: A T-Conv layer is similar to a FST-Conv layer except that the filters in a T-Conv layer has a shape of 1\u00d7w for w \u2265 2. These filters convolve with the input tensor along the temporal direction from one frequency band to another and ignore spectrally contextual information. The pooling function acts on the convolved tensor along the temporal direction correspondingly.\nS-Conv: A spectrally only convolutional neural layer consists of filters of shape h \u00d7 1, where h \u2265 1 and the pooling function down-samples the convolved tensor along\nthe spectral direction. Note that the S-Conv type is closely related to the traditional signal processing techniques; for example, DCT transformation from log-Mels to MFCCs belongs to this category when h = M except that the filters in DCT are mathematically pre-defined; see Sec. 4.3 for more details.\nFor each type of the convolutional operations, we employ a stride of 1. Since our focus is on the convolutional operations, we employ a fixed pooling size of 3 and a fixed stride of 2 in their respective direction(s) of convolution. Table 1 summarizes the parameters for all Conv layers."}, {"heading": "3.2 Deep Recurrent Neural Network", "text": "Suppose the input is a sequence of vectors {xt}. The Elman type simple recurrent neural network RNN [37] is defined through the following equations:\nht = \u03c3h ( Uhxxt +U hhht\u22121 + uh )\n(4)\nyt = \u03c3y ( Uyhht + uy ) , (5)\nwhere ht as an non-linear recurrent transformation of all past history {xs} t s=1 represents the system memory at time t, (Uba,ub) is an affine mapping from a space of type a to one of type b, and \u03c3c is the activation function for type c. Here x, h and y denote the input, hidden and output vectors, respectively. However, training a simple RNN with the back-propagation algorithm may cause the issues of gradient vanishing or explosion. Although heuristic techniques such as gradient clipping can alleviate the issue of gradient explosion, the gradient vanishing problem is mitigated by an enhanced architecture: the LSTM architecture [6].\nAn LSTM is able to decide when to read from the input, to forget the memory or to write an output by controlling a gating mechanism. By definition an LSTM learns the following internal controlling functions:\ni = \u03c3i ( Uixxt +U isst\u22121 + ui )\n(6)\nf = \u03c3f ( Ufxxt +U fsst\u22121 + uf )\n(7)\no = \u03c3o (U oxxt +U osst\u22121 + uo) (8) g = tanh (Ugxxt +U gsst\u22121 + ug) (9)\nct = ct\u22121 \u2299 f + g\u2299 i (10)\nst = tanh (ct)\u2299 o (11)\nwhere i, f , o, g, c and s represent the input, forget, output, gate, cell and output vectors, respectively. In particular, the change from non-linear multiplicative recurrence in Eq. (4) to linear additive recurrence in Eq. (10) theoretically\nprevents gradients from vanishing during back-propagating the error through time. Moreover, studies have found that a BLSTM layer can further improve upon a unidirectional LSTM in applications such as speech recognition [38], translation [39] and emotion recognition [18], [19] as it fuses information from the past and the future.\nSuppose an LSTM : RD1\u00d7T 7\u2192 RD2\u00d7T takes in a sequence {xt} T t=1 and returns {y f t } T t=1, and another LSTM : R D1\u00d7T 7\u2192 RD2\u00d7T takes in a reversed sequence {xT+1\u2212t} T t=1 and returns {ybt} T t=1. A BLSTM : R\nD1\u00d7T \u00d7 RD1\u00d7T 7\u2192 R (2\u2217D2)\u00d7T , which is made of two LSTMs, runs on two sequences {xt} T t=1 and {xT+1\u2212t} T t=1 and gives another sequence {zt} T t=1, where zt = [y f t ;y b t ] is the concatenation of y f t and y b t ."}, {"heading": "3.3 CLDNN-based Models", "text": "Before defining a variety of CLDNN-based models, we introduce a shared sub-network architecture among them. The sub-network contains one BLSTM layer followed by four fully connected feed-forward layers. Each direction of the BLSTM layer has 128 cells so the BLSTM outputs a sequence of vectors in R256. We take a mean pooling over the output of the BLSTM layer to obtain the utterance representation c rather than using the output vector at the last time step. A dropout mechanism [40] of probability 0.2 is fixed and applied to the representation c to regularize the learning process. These four FC layers have their own size of 128, 32, 32, N , respectively, where N denotes the number of emotion classes, in which the first three FC layers are activated by the ReLU and the last one by the softmax function for classification. This architecture based on (B)LSTM and FC layers is conveniently called an LDNN model [21]. Note that we employ a BLSTM layer instead of an LSTM layer as in [21] because it has been shown that the ability of a BLSTM to integrate future information into representation learning is beneficial to emotion recognition.\nIn the bottom of the LDNN sub-network, there are two Conv layers. Each Conv layer has 32 feature maps and each of them is activated by the ReLU. Formally, we define XCLDNN model to be an LDNN sub-network architecture specified above on top of two X-Conv layers, where X \u2208 {S,T, ST, FST}.\nA Conv layer is often said to be local because its feature maps when being computed at a local region on the input tensor depend only on the entries that the feature maps currently overlap with. As a result, we expect the input tensor to preserve locality in both spectral and temporal directions in general. However, due to the aforementioned structural differences, it is reasonable to relax this expectation a little bit accordingly. For example, a ST-Conv certainly requires its input tensor to maintain spectral-temporal correlation locally while a (FS)T-Conv and a S-Conv only need such locality preservation in the temporal or spectral direction, respectively. Taking this issue into consideration, in this work, we apply all four types of the Conv layer to the log-Mels and denote the corresponding CLDNN-based models as X-CLDNN (log-Mels) for X \u2208 {S,T, ST, FST}. On the other hand, because the discrete cosine transformation decorrelates the spectral energies, theMFCCs may not maintain locality in the spectral domain. Therefore, we apply\nonly temporal convolutional operations to the MFCCs and denote these CLDNN-based models as X-CLDNN (MFCCs) for X \u2208 {T, FST}."}, {"heading": "4 BASELINE MODELS", "text": "We evaluate our CLDNN-based models for understanding the convolutional operations by comparing with three baseline models on a speech emotion recognition task. First of the baseline models uses the low-level descriptors and their statistical functionals within an utterance to train a support vector machine. The other two of the baseline models are based on the BLSTM recurrent neural networks and take the log-Mels and the MFCCs features as its input, respectively."}, {"heading": "4.1 Support vector machine with the Low-Level Descriptors and Their Statistical Functionals", "text": "Many speech scientific studies have empirically found emotion correlating parameters, also known as the low-level descriptors (LLDs), along different aspects of phonation and articulation in speech, such as speech rate in the time domain, fundamental frequency or formant frequency in the frequency domain, intensity or energy in the amplitude domain, or relative energy in different frequency bands in the spectral energy domain. Furthermore, statistical functionals of an entire emotional utterance are derived from the LLDs to obtain global information, complementary to local information captured by frame-level LLDs. Popular selections of these parameters for developingmachine learning algorithms in practical applications often amount to several thousands of features. For example, in the INTERSPEECH 2013 computational paralinguistics challenge, the recommended feature set contains 6, 373 parameters of the LLDs and statistical functionals altogether [2]. Fortunately, researchers have identified the support vector machine as one of the most effective machine learners for using these hand-crafted high-dimensional features [3].\nTo make our work comparable to the published results, we set up the first baseline model similar to the evaluation experiments conducted in [3]. We use the openSMILE toolkit [41] to extract the acoustic feature sets for INTERSPEECH Challenges from 2009 to 2013 , including Emotion Challenge (EC, 384 parameters), Paralinguistic Challenge (PC, 1582 parameters), Speaker State Challenge (SSC, 4368 parameters), Speaker Trait Challenge (STC, 5757 parameters) and Computational Paralinguistic ChallengE (ComParE, 6373 parameters). On each of these feature sets, we train a SVM for speech emotion recognition."}, {"heading": "4.2 LDNN with the log-Mels", "text": "As suggested by previous studies [17], [18], [19], [20], explicit temporal modeling is beneficial for speech emotion recognition, in which a recurrent neural network is a better choice than a hidden Markov model for its outstanding ability to model longer-term temporal relationship. Meanwhile, in order to build a competitive as well as compatible baseline model with respect to the CLDNN-based model, we take the LDNN architecture defined in Sec. 3.3 as our second baseline model. In particular, we use the log-Mels as the input to the LDNN model as the \u201draw\u201d feature set\nwithout temporal or spectral convolutional operations. We denote this model as the LDNN (log-Mels)."}, {"heading": "4.3 LDNN with the MFCCs", "text": "MFCCs are related to log-Mels via a mathematical construct: the discrete cosine transformation (DCT). Specifically, the relationship is defined as the following:\nMFCC[k] = M\u22121 \u2211\nm=0\nlog-Mel[m] cos\n(\nk\u03c0\nM\n(\nm+ 1\n2\n))\n, (12)\nwhere MFCC[k] and log-Mel[m] are the kth and the mth coefficients of MFCCs and log-Mels, respectively, and M is the number of the Mel-scaled filter banks.\nWe can easily convert Eq. (12) into a convolutional operation along the spectral direction, in which scenario all feature maps are thus tensors of shape M \u00d7 1. For the kth feature map hk, its mth component\nhk[m] = cos\n(\nk\u03c0\nM\n(\nm+ 1\n2\n))\n(13)\nis pre-defined mathematically based on the prior knowledge of signal processing, rather than task-specifically learnt from training samples. With this development, Eq. (12) can be succinctly summarized as\nMFCC , DCT-Conv (log-Mel) , (14)\nwhere DCT-Conv represents the mathematically pre-defined spectrally only convolutional layer transforming log-Mels into MFCCs. Note that the properties of a conventional convolutional layer, such as the pooling function and the non-linear activation function are missing in this special configuration of a convolutional layer. In fact, there is no convolutional operation per se. Nevertheless, the purpose for this identification of DCT as a convolutional operation is to encapsulate this spectral modeling into the language of convolutional operations, to help us focus on the difference among various convolutional operations and mostly to contrast DCT with the S-Conv layer.\nOur third baseline model is an LDNNmodel which takes the MFCCs as its input. Similarly, we denote this model as the LDNN (MFCCs). By comparing the the performances of the LDNN (MFCCs) and the S-CLDNN (log-Mels), we are able to quantitatively demonstrate the advantages of the S-Conv layer over the DCT-CNN layer."}, {"heading": "5 DATABASES DESCRIPTION", "text": ""}, {"heading": "5.1 The Clean Set", "text": "We use the eNTERFACE\u201905 emotion database [26], which is a publicly-available multi-modal corpus of elicited emotional utterances, to evaluate the performance of our proposed models. Although the entire database contains speech, facial expression and text, in this work we only conduct experiments on the audio modality. This database includes 42 subjects from 14 various countries, in which 34 of them were male and 8 were female. Each subject was asked to listen carefully to 6 short stories, and each of them was designed to elicit a particular emotion from among the 6 archetypal emotions defined by Ekman et al. [42]. The subjects then reacted to each of the scenarios to\nexpress their emotion according to a proposed script in English. Each subject was asked to speak five utterances per emotion class for 6 emotion classes (anger, disgust, fear, happiness, sadness, and surprise). For each recorded emotional utterance, there is one corresponding global label describing the affective information conveyed by the whole utterance. The resulting corpus, however, is slightly unbalanced in the emotion class distribution because the subject 23 has only two utterances portraying happiness, so the total number of emotional utterances in this corpus is 1, 257. We call the set of these 1, 257 utterances the clean set. The average length of utterances is around 2.78 seconds, and the total duration of the clean set amounts to roughly 0.97 hour. We believe it is the moderate number of speakers and a variety of their cultural backgrounds that render it one of the most popular corpora for benchmarking speech emotion recognition models."}, {"heading": "5.2 The Noisy Set", "text": "Deep neural networks have a well-known reputation of being data-hungry. Despite the aforementioned diversity, it is not data-efficient enough to train a deep neural network as big as a CLDNN on the clean set alone for it would potentially incur a high risk of over-fitting. Various techniques have been proposed to implicitly or explicitly regularize the training process of deep neural networks in order to prevent over-fitting as well as to improve the generalization performance, such as dropout [40], early-stopping [43], data augmentation [36], transfer learning [15] and the recent group convolution approach [44], [45]. In addition to the dropout mechanism and the early-stopping strategy, we also adopt the data augmentation approach to artificially increase the number of our data samples for the purpose of implicit regularization. To be precise, we aggressively mix samples from the clean set with samples from another publicly-available database, called the MUSAN corpus [46], for a few randomly chosen levels of signal-to-noise ratio (SNR).\nThe MUSAN corpus consists of three portions: music, speech and noise. As speech and music may inherently convey affective information, mixing samples from these two portions with clean emotional utterances would unnecessarily complicate the learning process and would possibly result in a suboptimal system due to a mixture of inconsistent emotion types. Therefore, to avoid adding confounding factors to clean emotional utterances, we only use the noise portion in the MUSAN corpus for data augmentation. The noise portion contains 929 samples of assorted noise types, including technical noises, such as Dual-tone multifrequency (DTMF) tones, dialtones, fax machine noises, and ambient sounds, such as car idling, thunder, wind, footsteps, paper rustling, rain, animal noises, and so on so forth. The total duration of the noise portion is about 6 hours. We generate artificially corrupted data based on the clean set using the following recipe. For each clean utterance, 20 noise samples are uniformly selected from the noise portion and 3 levels of the SNR are uniformly chosen from the interval [\u221210, 15]. Mixing the clean utterance with the 60 combinations of the 20 noise samples and 3 SNR levels augments the clean set by a factor of 61. Note that randomly\nselecting samples from the noise portion gives an advantage over simply using a fixed subset of the noise portion. Due to the stochasticity, the probability of choosing the same set of 20 noise samples is on the order of one out of 7 \u00d7 1040 \u223c C92920 , which is almost impossible. By carefully eliminating potential artificial patterns, we hope the deep neural networks could concisely capture the true underlying acoustic emotion prototypes.\nWe call this set of the resulting 75, 420 noisy utterances the noisy set, as opposed to the clean set defined above. The total duration of the noisy set is about 58.25 hours. In the following sections, when referring to the clean condition, we mean the experiments are conducted on the clean set; on the other hand, when referring to the noisy condition, we mean they are conducted on the union of the noisy and the clean sets. Moreover, we further randomly divide the set of subjects into training, validation and testing (TVT) partitions under the percentage constraint of 70:10:20, respectively, for experimental convenience. Partitioning the subject set, instead of the utterance set, allows us to maintain speaker independence across all experiments."}, {"heading": "6 SPEECH EMOTION RECOGNITION EXPERIMENTS", "text": "In this section, we evaluate the proposed models with the following experiments:\n1) Baseline models\na) SVM with openSMILE features b) LDNN (MFCCs) c) LDNN (log-Mels)\n2) CLDNN-based models\na) T-CLDNN (MFCCs) b) FST-CLDNN (MFCCs) c) T-CLDNN (log-Mels) d) S-CLDNN (log-Mels) e) ST-CLDNN (log-Mels) f) FST-CLDNN (log-Mels)\nThe purposes of these experiments are multi-fold. The comparison between the baseline models and the CLDNN-based models aims to demonstrate the effectiveness of the convolutional operations in learning the affective information. Within the category of CLDNN-based models, the goal is to quantify the difference between types of convolutional operations."}, {"heading": "6.1 SVM with openSMILE features", "text": "For the first set of baseline experiments, we employ two evaluation strategies. In the first one, we perform a leaveone-subject-out (LOSO) cross validation. Since we train our deep neural network models using the TVT partitions, the second strategy evaluates the performances of SVM classifiers on the TVT partitions for a fair comparison. In addition, we also take the regular pre-processing procedures, including speaker standardization for removing speaker characteristics and class weighting for slight class imbalance. We conduct the baseline experiments using SVM classifiers trained on the acoustic feature sets in the past INTERSPEECH challenges. The SVM classifiers are trained\non these hand-crafted high-dimensional features using the Scikit-Learn machine learning toolkit [47] with linear, polynomial and radial basis function (RBF) kernels. All of SVM experiments are conducted under the clean condition."}, {"heading": "6.2 CLDNN-based Models with the MFCCs and the logMels", "text": "To begin with, we extract the log-Mels and the MFCCs using the KALDI toolkit [48] with a window size of 25 ms and a window shift of 10 ms. In both cases, the number of Mel-frequency filterbanks is chosen to be 40. It has been shown [3] that due to the strong energy compaction property of the discrete cosine transformation, the lower order MFCCs are more important for affective and paralinguistic analysis, while the higher order MFCCs are more related to the phonetic content understanding. In fact, the INTERSPEECH challenges feature sets contain the first 12- 14 orders of MFCCs; however, the Geneva Minimalistic Acoustic Parameter Set (GeMAPS) [3] recommends the use of only the first 4 orders of the MFCCs. In this work, we keep the conventional first 13 coefficients when computing the MFCCs. After feature extraction, we splice the raw logMels and raw MFCCs with a context of 10 frames in the left and 5 frames in the right. At this point, each spliced log-Mel or spliced MFCC xt lives in R\n40\u00d716 or R13\u00d716, respectively. An emotional utterance is now represented as a sequence of spliced spectral vectors {xt}. We train the LDNN (logMels) and the LDNN (MFCCs) as depicted in Fig. 1 with their corresponding inputs.\nIn order to accommodate the inputs to various CLDNN models in Fig. 1, we further reshape each xt to a matrix Xt with the shape of 40 \u00d7 16 or 13 \u00d7 16. We train the X-CLDNN (log-Mels) and X-CLDNN (MFCCs) on the emotional utterances {Xut } for each training utterance u and for X \u2208 {S,T, ST, FST}. The ranges of the tunable parameters for the convolutional layers are summarized in Table 2, where as shown we focus mostly on the first Conv layer. We exhaust all of the parameter combinations for the S-Conv, T-Conv and FST-Conv types when tuning the architectural parameters. Note that, however, the search space of the optimal parameter set for the ST-Conv is rather huge. Therefore, instead of exploring all of the combinations aimlessly, we limit our attention to the combinations of top k parameters from the S-Conv and T-Conv.\nWe use the Keras library [49] on top of the Theano [50] backend to specify the network architectures and execute the learning processes on an NVIDIA K40 Kepler GPU. The weights of all deep neural network models are\nlearnt by minimizing the cross-entropy objective through the Adam method [51] to adjust the parameters in the stochastic optimization with an initial learning rate being 0.001. The size of mini-batch is fixed to 10 due to the capacity of the GPU memory as well as the pursuit for a better generalizing power [52]. An early-stopping strategy [43] with the patience of 3 epochs is employed to avoid over-training. We train all deep neural network models with the emotional utterances in the training partition under the noisy condition; we perform parameter tuning on the validation partition, and the most competitive model on the validation partition under the noisy (clean) condition is tested under the noisy (clean) condition, respectively."}, {"heading": "7 EXPERIMENTAL RESULTS", "text": "We present our experimental results for speech emotion recognition in this section. Even though the class imbalance in the corpus is insignificant, throughout the entire section, we use the un-weighted accuracy (UA) as the performance metric to avoid being biased to the larger classes."}, {"heading": "7.1 SVM with openSMILE features", "text": "Table 3 summarizes the results of using SVM classifiers to identify the emotion class of an emotional utterance with one of the 6 archetypal emotions. Based on the LOSO evaluation strategy, a SVMwith the STC feature set gives the best baseline performance, while under the TVT evaluation strategy, a SVM with the ComParE feature set stands out among other feature sets. It is clear from these results that a SVM learns better from higher-dimensional feature sets such as the ComParE and the STC sets, which is also a consistent phenomenon observed in [3]. Yan et al. [25] recently published a baseline result on the eNTERFACE\u201905 corpus using the PC feature set. They trained a SVM classifier on the PC feature set with a speaker-dependent five-fold cross validation evaluation strategy as one of their baseline models. Their baseline work is comparable to ours, and is included in the Table 3 as well."}, {"heading": "7.2 LDNN with the MFCCs and the log-Mels", "text": "We present the results of the LDNN-based models in Table 4. Under the noisy condition, the LDNN (MFCCs) and the LDNN (log-Mels) models are able to accurately classify 75.51% and 78.87% of the testing samples, respectively. Under the clean condition, they give a performance of 88.33% and 90.42%, respectively. One can easily observe\nthat there is a gap of 3.36% and 2.09%, respectively, between LDNN (MFCCs) and LDNN (log-Mels) under each condition. Since MFCCs are DCT transformed log-Mels, it implies that DCT may have removed a certain amount of affective information when transforming the log-Mels into the MFCCs. The widened gap under the noisy condition also suggests MFCCs are more sensitive to noise compared to log-Mels, which renders learning from MFCCs a more challenging task. Nevertheless, both LDNN models achieve promising results comparable to that by one of the stateof-the-art models on the eNTERFACE\u201905 corpus, the sparse kernel reduced rank regression (SKRRR) [25]."}, {"heading": "7.3 CLDNN with the MFCCs and the log-Mels", "text": "Finally, Table 4 also presents the effectiveness of the CLDNN-based models for classifying emotional utterances into one of the 6 archetypal emotions. First of all, notice that with the CNN layers all CLDNN-based models improve upon their LDNN-based counterparts under both noisy and clean conditions, except that the T-CLDNN (MFCCs) results in a slightly inferior performance under the clean condition. Since MFCCs are rather sensitive to noise, it is likely that the T-Conv layers are mainly optimized to reduce prominent variations due to the artificial noise while neglecting other subtle factors of variation such as speaker or gender. Yet, the result from the FST-CLDNN (MFCCs) also suggests that the MFCCs still contain a reasonable amount of affective information which is learnable by a suitable architecture.\nAmong the X-CLDNN (log-Mels) models, the order of performances from high to low is the FST-CLDNN (logMels), the ST-CLDNN (log-Mels), the T-CLDNN (log-Mels) and the S-CLDNN (log-Mels). The fact that the FST-Conv outperforms the ST-Conv is consistent with the conclusion from [13]. However, the margin is not as significant when there is an LDNN sub-network to help with temporal modeling. It has been reported that the S-Conv layer in a S-CLDNN (log-Mels) would degrade the performance for speech recognition under a moderately noisy condition [53]. The authors attributed this deterioration to the noiseenhanced difficulty for local filters to make decision when learning to capture translational invariance. This attribution seems valid when we contrast the FST-Conv with the other three types. Actually, if we take a closer look, we can easily\ndiscover that there is a varying degree of enhanced difficulty to the type of convolutional operations, in which the S-Conv suffers from noise the most, followed by the T-Conv and the ST-Conv to a roughly equivalent degree and finally the FST-Conv the least. Even though we validate on the clean validating partition for selecting the model to be tested on the clean testing partition, the performances under the clean condition demonstrate a similar trend influenced by noise since we carried out the training process under the noisy condition.\nOne of our goals is to benchmark the strength of the S-Conv and the discrete cosine transformation for spectral modeling. Specifically, the fair comparison should be between the LDNN (MFCCs) and the S-CLDNN (log-Mels) where the DCT-CNN and the S-Conv layers, respectively, act on the spliced log-Mels along the spectral direction, and both of them have an LDNN sub-network for further temporal modeling. Despite the negative impact on the SConv layer by noise, it is interesting to observe a stark performance gap between them under the noisy condition. Even under the clean condition, the S-CLDNN (log-Mels) still has a leading margin by more than 3%. Due to its task independence, DCT is not particularly designed to decorrelate the affective information from the other factors. Moreover, since the DCT-CNN layer is shallow and structurally simple, the S-Conv layer has an advantage over DCT as it is deeper and thus better at disentangling the underlying factors of variations [54], [55], [56]. This strength is manifested the most especially when it comes to the noise-related factors. Given that the MFCCs still carry a reasonable amount of affective information, these significant differences in performance between the S-Conv and DCT can be best explained by the inability of DCT to adequately disentangle the affective information from other irrelevant factors of variations.\nLast but not the least, we notice that temporally convolutional operations and temporally recurrent operations are learning complimentary information. For instance, the LDNN (log-Mels) models the evolution of affective information through temporal recurrence alone, while the FSTCLDNN (log-Mels) does so by fitting itself to the dynamics via temporal convolution and then temporal recurrence, which improves upon the LDNN (log-Mels) and results in a more competitive system."}, {"heading": "7.4 Module-wise evaluations", "text": "We have so far analyzed the proposed models from an endto-end perspective and observed interesting phenomena. Although this kind of external analysis has distilled certain working knowledge, what we are equally interested in is the internal mechanism within these models. Along these lines, a key step is to track the flow of relevant information using techniques such as information regularizer [57] or layer-wise evaluation [23], [58]. In this work, we take the second approach due to its simplicity. To make it clear, we only evaluate the intermediate representations at the module level, where by module we mean the CNN module (two Conv layers), the BLSTM module (a BLSTM layer) and the multi-layer perceptron (MLP) module (four FC layers) that make up a CLDNN model.\nTo begin with, we take the trained CLDNN-based model as the feature extractors and the activated responses of each layer as the discriminative features. For each CLDNN model, we only keep the extraction from the output layer of each module. In addition, the raw spectral-temporal features are presented to serve as the lower bound. A mean pooling over the temporal direction is applied to the raw features, the output of the CNN module and the output of the BLSTM module to form an utterance representation for each of them. In order to quantify the improvement of the representations for speech emotion recognition achieved by each module, we train a SVM classifier on the utterance representation from the output of each module as well as the raw features. The experiment setting is similar to the SVM baseline, where only the clean set is used and the evaluation is based on the TVT strategy.\nQuantitative Analysis\nTable 5 summarizes the results of the module-wise evaluation. As shown in the second column, even though the training and the testing are carried out under the clean condition, the discrete cosine transformation degrades the performance once again. Nevertheless, most of the CNN modules have helped to lift the discriminative power to around 55% regardless of the raw features except for a particularly under-performing model, the S-CLDNN (logMels), which based on the previous analysis is known to suffer from noise drastically. One can easily observe that each type of the Conv layers is learning a different representation and hence results in different levels of discriminative power.\nIt is interesting to note that the SVMs trained on the activations of the CNN module in the {T,ST}-CLDNN (logMels) give a better accuracy than that based on the FSTCLDNN (log-Mels), but from a holistic perspective the FSTConv based system is the most robust one. This may reflect one of the biggest advantages of the end-to-end training approach over the traditional layer-wise approach, which works on feature engineering and classifier training separately; i.e. a greedy layer-wise training that forces the distribution of an intermediate layer to prematurely approximate the distribution of the label is likely to result in a suboptimal system.\nGoing deeper into the networks, we can see most of the BLSTM modules have further improved the discriminative power to the level of 88-89% except for the T-CLDNN (logMels). In fact, as we take a closer look at the T-CLDNN (MFCCs) and the T-CLDNN (log-Mels), we find that they\nboth attain one of their optimal forms of affective representation at the output of the BLSTM module. Instead of implying their MLP modules have done nothing based on the constant performance, it may suggest that their MLP modules are integrating out irrelevant information while maintaining the optimal representation. Finally, in the other CLDNN models, the MLP modules further refine the representation to make the prediction an easier task. To sum up, in terms of the UA, the contributions from the CNNmodule, the BLSTM module and the MLP module are 27.43\u00b15.18%, 35.63\u00b1 3.61% and 2.85\u00b1 2.32%, respectively.\nVisualization\nIn addition to the quantitative analysis of each module, we also present the visualization of the representations to gain intuition toward the internal working mechanism. In order to demonstrate the interplay between the modules and the other irrelevant information, we take into consideration two other types of information which along with the affective information are embedded in the original utterances at the same time; that is, the gender and speaker information. For every representation extracted from each module, we assign three labels to it, including the gender of the speaker (female, male), the serial number of the speaker (sN, where 1 \u2264 N \u2264 42) and the emotional class (ang for anger, dis for disgust, fea for fear, hap for happiness, sad for sadness, and sur for surprise). On the clean training partition, a linear discriminant analysis (LDA) is applied to the representations and projects them onto the space spanned by the first min(N \u2212 1, 2) components, where N stands for the number of classes. Each LDA is carried out with respect to these three labels separately and a class prior is employed to match the number of samples in each class. Moreover, we also compute the intra-cluster and inter-cluster inertia [59], [60] on the extracted representations for each label using the following definitions\n\u03c9i = 1\n|C|\n\u2211\nc\u2208C\n1\n|c|\n\u2211\ns\u2208c\n\u2016pc \u2212 ps\u2016 2, (15)\n\u03c9o = 1\n|C|2 \u2212 |C|\n\u2211\nc\u2208C\n\u2211\nc\u2032\u2208C\u2212c\n\u2016pc\u2032 \u2212 pc\u2016 2, (16)\nwhere C is the training set, c is the subset of C containing only a specific class, pc is the arithmetic center of c, ps is the member of c and \u2016\u00b7\u2016 is the Euclidean distance. Note that the vectors p are the original representations rather than the LDA projections. One may expect to have a small intra-cluster inertia and a large inter-cluster inertia when assessing the quality of a good clustering; in other words, the following ratio measures the quality of a clustering\n\u03c1 = \u03c9i/\u03c9o, (17)\nwhere the smaller the value of \u03c1 the better a clustering. Fig. 2 shows an example of the visualization for the modules in the T-CLDNN (log-Mels). The first, second and third rows correspond to the affective, speaker and gender information, while the first, second and third columns denote the output of the CNN, the BLSTM and the MLP modules, respectively. In each subplot, every dot indicates an utterance, where utterances within the same class are\npainted with the same color and their centers of classes are marked with according labels such as hap, s07 and female. The title of each subplot is the \u03c1 value for the distributions in the subplot.\nBased on the visualization or the \u03c1 values in the first row, it is clear that the CLDNN model is gradually learning to discriminate different affective patterns. Out of the six emotion classes, anger consistently seems to be the most prominent class across different architectures, and sadness is ranked the second. The progressively improving separability in the first row confirms our quantitative analysis results as well.\nOn the other hand, the speaker and the gender information are rather salient at the beginning of the architecture. As the forward propagation proceeds, these two types of information are getting filtered out incrementally. Note that the LDA projections on the second and the third rows are computed on the raw extracted representations with their respective labels, i.e. speaker and gender labels, and yet the deteriorating separability is apparently evident from the scatter plots and the increasing trend of \u03c1.\nBased on the results of the quantitative analysis, we thought it is the BLSTM module that discards most amount of irrelevant information compared to the other modules.\nHowever, contrary to our initial expectation, it is the MLP module that excessively degrades the separability among speaker or gender classes. For instance, even at the output of the BLSTM module, the model still keeps a fair amount of gender information (Fig. 2h) but at the output of the MLP module the centers of the male and the female utterances are practically overlapping each other (Fig. 2i). Previous studies have shown that the higher-level representation of a deep neural networks could better disentangle the underlying factors of variations embedded in the input signals [54], [55], [56]. This visualization suggests that the CNN and the BLSTM modules are mostly playing a role to lift the input tensor into a high-dimensional manifold, a role similar to the kernel method, for disentangling the affective factor from the others, and consequently the MLP module is mainly responsible for integrating out the other factors of variations in order to optimize the corresponding objective function. In addition, this observation also vividly explains the working mechanism of multi-tasking learning that learns multiple related tasks jointly by sharing a common sub-network in the front, and of transfer learning approach that freezes the underlying layers in a pre-trained model and re-learns or fine-tunes the top few, often fully-connected, layers.\nThe progression from the second column to the third\ncolumn corroborates our working hypothesis in the quantitative analysis about the T-CLDNN models as well. Instead of doing nothing, the MLP module in the T-CLDNN model is refining the representations while keeping the affective information.\nFor the visualization of all CLDNN-based models, please refer to Appendix A."}, {"heading": "8 CONCLUSION", "text": "We report the benchmarking of four types of convolutional operations in deep convolutional recurrent neural networks for speech emotion recognition, including the spectrally only, the temporally only, the spectral-temporally, and the full-spectrum temporal convolutional operations. We found these types suffer from noise to a varying degree, in which noise negatively influences the S-Conv the most, followed by the T-Conv and the ST-Conv, and the FST-Conv the least. Under both conditions, the FST-Conv outperforms all of the other three types, and one of the state-of-the-art models under the clean condition.\nEven though the S-Conv is the weakest type, the comparison between the S-CLDNN (log-Mels) and the LDNN (MFCCs) shows a significant performance gap between them, which can mostly be attributed to the difference between the S-Conv and the discrete cosine transformation. On the other hand, the FST-CLDNN (MFCCs) is still able to achieve a reasonably good accuracy. These two experiments suggest that although DCT may discard certain amount of affective information, the loss does not entirely account for the performance gap. However, we may link the mediocre performance of the LDNN (MFCCs) to the inability of DCT to adequately disentangle the affective information from other correlated irrelevant factors of variations such as speaker and gender differences and those caused by noise. Based on previous studies of deep neural networks, it is likely the shallow and structurally simple architecture of the DCT-DNN and its task-independent nature leads to such incapability of DCT.\nMeanwhile, we also found that the temporal convolution and the temporal recurrence are able to learn complementary information, and the combination of both results in a robust model such as the FST-CLDNN. Nevertheless, we only consider the architecture of a CNN module followed by a BLSTM module. It would be interesting to see if an architecture of a BLSTM module followed by a CNN module would make any difference.\nIn order to understand the internal mechanism within a CLDNN model, we quantitatively analyzed the modulewise discriminative power by training a SVM on the extracted activations from the output of modules. The reported accuracy can be viewed as an approximatedmeasure of quality in the sense of readiness to exploit the affective information. From the results in Table 5, we found the CNN module, the BLSTM module and the MLP module contribute a refinement of 27.43\u00b15.18%, 35.63\u00b13.61% and 2.85\u00b1 2.32% to the quality, respectively. This ranking is not surprising as studies from psychology [16] or computational paralinguistics [17], [18], [19], [20] all point out emotion is characterized by temporally dependent dynamics. Nevertheless, our findings have shown that the CNN module\nis capable of significantly enhancing the separability for emotional classes compared to raw features, particularly when under a noisy condition.\nIn addition, we visualize three types of information along the depth of the proposed models, including the affective, speaker and gender information. From the visualization, we observe that the model is progressively learning to discriminate different emotional patterns, in which anger and sadness are two of the most prominent emotional classes across all models. What\u2019s more interesting is that other irrelevant factors of variations are integrated out at a varying rate from one module to another. Specifically, the CNN and the BLSTMmodules still keep a moderate portion of the gender and speaker information but in the end the MLPmodule refines the learnt representations by drastically reducing other type of variations."}, {"heading": "APPENDIX A", "text": "VISUALIZATION OF ALL MODELS"}], "references": [], "referenceMentions": [], "year": 2017, "abstractText": "Deep convolutional neural networks are being actively investigated in a wide range of speech and audio processing applications including speech recognition, audio event detection and computational paralinguistics, owing to their ability to reduce factors of variations, such as speaker and environment information in signals, for speech recognition. However, studies have suggested to favor a certain type of convolutional operations when building a deep convolutional neural network for speech applications although there has been promising results using different types of convolutional operations. In this work, we study four types of convolutional operations on different input features for speech emotion recognition in order to derive a comprehensive understanding. Since affective behavioral information has been shown to reflect temporally varying of mental state and convolutional operation are applied locally in time, all deep neural networks share a deep recurrent sub-network architecture for further temporal modeling. We present detailed quantitative module-wise performance analysis to gain insights into information flows within the proposed architectures. In particular, we demonstrate the interplay of affective information and the other irrelevant information during the progression from one module to another. Finally we show that all of our deep neural networks provide state-of-the-art performance on the eNTERFACE\u201905 corpus.", "creator": "LaTeX with hyperref package"}}}