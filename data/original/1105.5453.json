{"id": "1105.5453", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "27-May-2011", "title": "Complexity of Prioritized Default Logics", "abstract": "In default reasoning, usually not all possible ways of resolving conflicts between default rules are acceptable. Criteria expressing acceptable ways of resolving the conflicts may be hardwired in the inference mechanism, for example specificity in inheritance reasoning can be handled this way, or they may be given abstractly as an ordering on the default rules. In this article we investigate formalizations of the latter approach in Reiter's default logic. Our goal is to analyze and compare the computational properties of three such formalizations in terms of their computational complexity: the prioritized default logics of Baader and Hollunder, and Brewka, and a prioritized default logic that is based on lexicographic comparison. The analysis locates the propositional variants of these logics on the second and third levels of the polynomial hierarchy, and identifies the boundary between tractable and intractable inference for restricted classes of prioritized default theories.", "histories": [["v1", "Fri, 27 May 2011 01:50:12 GMT  (160kb)", "http://arxiv.org/abs/1105.5453v1", null]], "reviews": [], "SUBJECTS": "cs.AI", "authors": ["j rintanen"], "accepted": false, "id": "1105.5453"}, "pdf": {"name": "1105.5453.pdf", "metadata": {"source": "CRF", "title": null, "authors": ["Jussi Rintanen"], "emails": ["rintanen@informatik.uni-ulm.de"], "sections": [{"heading": null, "text": "In default reasoning, usually not all possible ways of resolving con icts between default rules are acceptable. Criteria expressing acceptable ways of resolving the con icts may be hardwired in the inference mechanism, for example speci city in inheritance reasoning can be handled this way, or they may be given abstractly as an ordering on the default rules. In this article we investigate formalizations of the latter approach in Reiter's default logic. Our goal is to analyze and compare the computational properties of three such formalizations in terms of their computational complexity: the prioritized default logics of Baader and Hollunder, and Brewka, and a prioritized default logic that is based on lexicographic comparison. The analysis locates the propositional variants of these logics on the second and third levels of the polynomial hierarchy, and identi es the boundary between tractable and intractable inference for restricted classes of prioritized default theories."}, {"heading": "1. Introduction", "text": "Nonmonotonic logics and related systems for nonmonotonic and default reasoning (Reiter, 1980; Moore, 1985; McCarthy, 1980) were developed for representing knowledge and forms of reasoning that are not conveniently expressible in monotonic logics, like the rst-order predicate logic or propositional logics. In nonmonotonic logics inferences can be made on the basis of what cannot be inferred from a set of facts. When extending this set, some of the inferences may become invalid, and hence the set of inferable facts does not monotonically increase. For example, in the kind of reasoning expressed as inheritance networks (Horty, 1994), one network link may say that priests imbibe non-alcoholic beverages only. This is, in the absence of contrary information, a su cient reason to conclude that a certain priest will not drink vodka. Without contradiction, information stating that the priest does drink vodka can be added, which retracts the previous conclusion.\nThe need to incorporate priority information to nonmonotonic logics (Lifschitz, 1985; Brewka, 1989; Ge ner & Pearl, 1992; Ryan, 1992; Brewka, 1994; Baader & Hollunder, 1995) stems from the possibility that two default rules are in con ict. One source of such priority information is the speci city of defaults. When one rule says that priests usually do not drink and another says that men usually do, inferences concerning male priests should be based on the rst one because it is more speci c, as male priests are a small subset of men. Speci city as a basis for resolving con icts between defaults has been investigated in the framework of path-based inheritance theories (Horty, 1994). In general, however, priorities may come from di erent sources, and therefore it is justi ed to investigate nonmonotonic reasoning with an abstract notion of priorities as orderings on defaults. In this\nc\n1998 AI Access Foundation and Morgan Kaufmann Publishers. All rights reserved.\nsetting the problem is to de ne what are the correct inferences in the presence of priorities. There have been many proposals of di ering generality. Preferred subtheories (Brewka, 1989) and ordered theory presentations (Ryan, 1992) do not have as general a notion of defaults as Reiter's default logic, and they can both be translated to prerequisite-free normal default theories of a prioritized default logic (Rintanen, 1999). Also the de nitions of model minimization in conditional entailment (Ge ner & Pearl, 1992) and in prioritized circumscription (Lifschitz, 1985) do not directly support defaults with prerequisites.\nIn this work we concentrate on Brewka's (1994) and Baader and Hollunder's (1995) proposals for incorporating priorities to default logic, as well as a proposal that uses lexicographic comparison (Rintanen, 1999). These three proposals address default reasoning with defaults that have prerequisites. Like earlier work on complexity of nonmonotonic logics (Kautz & Selman, 1991; Stillman, 1990; Gottlob, 1992), the purpose of our investigation is to point out fundamental di erences and similarities between these logics, characterized by polynomial time translatability between their decision problems, and to identify restricted classes of default theories where reasoning is tractable. The rst kind of results are useful for example when developing theorem-proving techniques for the logics in question. The inexistence of polynomial time translations between two decision problems indicates that the techniques needed are likely to be di erent: it is not feasible to solve one decision problem by simply translating it to the other. Also, if polynomial time translations exist and they turn out to be simple, there is often no reason to treat the decision problems separately. The second kind of results, identi cation of tractable cases, directly give e cient, that is polynomial time, decision procedures for prioritized reasoning in special cases. The utility of these algorithms depends on the application at hand. In many cases the restrictions that lead to polynomial time decision procedures are too severe to make the procedures practically useful. Even though nonmonotonic reasoning usually cannot be performed in polynomial time, new developments in implementation techniques have made it possible to solve problems that previously were too di cult (Niemel a & Simons, 1996). Hence there are some prospects of making nonmonotonic reasoning practically useful, which makes the problem of introducing priority information in nonmonotonic reasoning more acute. This paper can be seen as giving guidelines in that direction.\nThe decision problems of propositional default logic are located on the second level of the polynomial hierarchy (Gottlob, 1992), and hence they do not belong to the classes NP or co-NP unless the polynomial hierarchy collapses to its rst level. The proof of this result suggests that reasoning in default logic cannot be performed in polynomial time simply by restricting the formulae in default theories to a tractable subclass of propositional logic like 2-literal clauses (Even, Itai, & Shamir, 1976) or Horn clauses (Dowling & Gallier, 1984). This fact can be seen as a consequence of the possibility of con icting defaults. A con ict between defaults gives rise to multiple extensions because a case analysis on alternative ways of resolving the con ict is required. For a default theory of size n, the number of con icts may be proportional to n, and each con ict may double the number of extensions. Hence the number of extensions can be proportional to 2 n . Priorities in many cases uniquely determine how a con ict between defaults is resolved, and hence the case analyses that lead to an exponential number of extensions can be avoided. This gives rise to the question whether priorities would in some cases produce a computational advantage in the sense that the decision problems could be solved more e ciently than in the unprioritized case.\nTo investigate these questions we consider three de nitions of priorities in the framework of Reiter's default logic.\nFirst we analyze the computational complexity of two closely related prioritized default logics (Brewka, 1994; Baader & Hollunder, 1995). These logics are based on the semiconstructive de nition of extensions of default logic (Reiter, 1980): the priorities control the construction of extensions, ruling out those that do not respect the priorities. In the general case the complexity of the decision problems of these logics equals the complexity of those of Reiter's default logic, being complete for the second level of the polynomial hierarchy. When the priorities are a total ordering on the defaults, the complexity decreases by one level, leading to many tractable cases when the propositional reasoning involved is tractable, for example with Horn clauses or 2-literal clauses. With arbitrary strict partial orders there is no similar decrease.\nWe continue by analyzing a prioritized default logic that is based on comparing the Reiter extensions of a default theory by lexicographic comparison (Rintanen, 1999). The decision problem of this logic is harder than the decision problems of Reiter's default logic, assuming that the polynomial hierarchy does not collapse. For default theories with a total priority relation some syntactically restricted classes are easier than the corresponding unprioritized ones, but in general even total priorities do not reduce the complexity of the decision problems. For partial priorities tractability can be achieved only with extreme syntactic restrictions, the complexity being the same as with the prioritized default logics by Brewka and by Baader and Hollunder."}, {"heading": "2. Preliminaries on Computational Complexity", "text": "In this section we introduce some basic concepts in computational complexity. For details see (Balc azar, D az, & Gabarr o, 1995). The complexity class P consists of decision problems that are solvable in polynomial time by a deterministic Turing machine. NP is the class of decision problems that are solvable in polynomial time by a nondeterministic Turing machine. The class co-NP consists of problems the complements of which are in NP. In general, the class co-C consists of problems the complements of which are in the class C. The polynomial hierarchy PH is an in nite hierarchy of complexity classes p\ni\n,\np i and p i\nfor all i 0 that is de ned by using oracle Turing machines as follows.\np 0 = P\np 0 = P\np 0 = P\np i+1 = NP\np i\np i+1 = cop i+1\np i+1 = P\np i\nC\nC\n2\n1\ndenotes the class of problems that is de ned like the class C\n1\nexcept that oracle Turing\nmachines that use an oracle for a problem in C\n2\nare used instead of Turing machines without\nsuch an oracle. Oracle Turing machines with an oracle for a problem B are like ordinary Turing machines except that they may perform tests for membership in B with constant cost. A problem L is Turing reducible to a problem L 0 if there is an oracle Turing machine with an oracle for L 0 that solves L. The problem is Turing reducible in polynomial time if the oracle Turing machine solves L with a polynomial number of execution steps. A problem L is C-hard for a complexity class C if all problems in C are polynomial time many-one reducible to it; that is, for all problems L 0 2 C there is a function f\nL\n0\nthat can be computed\nin polynomial time on the size of its input and f\nL\n0\n(x) 2 L if and only if x 2 L\n0\n. We say\nthat the function f\nL\n0\nis a translation from L\n0\nto L. A problem is C-complete if it belongs\nto the class C and is C-hard."}, {"heading": "3. Preliminaries on Default Logic", "text": "Default logic is one of the main formalizations of nonmonotonic reasoning (Reiter, 1980). A default theory = hD;W i consists of a set of default rules :\n1\n; : : : ;\nn\n= where (the\nprecondition), (the conclusion) and\ni\n; i 2 f1; : : : ; ng (the justi cations) are formulae of\nthe classical propositional logic, and a set W of objective facts that also are formulae of the classical propositional logic. A default rule :\n1\n; : : : ;\nn\n= can be used for inferring the\nfact if has been derived, and none of the formulae :\n1\n; : : : ;:\nn\ncan be derived. As\nderivability and underivability are mutually dependent, there is circularity in the de nition of what is derivable in default logic. Unlike in monotonic logics, where the consequences of a set of formulae is de ned as the formulae that can be derived by using the axioms of the logic and the inference rules, the conclusions of a default theory = hD;W i are de ned as xpoints of a nonmonotonic operator. The operator may have several xpoints, none of which is the least xpoint, and di erent xpoints can be seen as a result of applying di erent mutually incompatible sets of default rules. The xpoints of the operator for a default theory are the extensions of the default theory.\nInformally, the construction of each extension of a default theory starts from the objective facts W , and proceeds by adding conclusions of default rules the preconditions of which have already been derived, and the justi cations of which have not been and will not later be contradicted. The construction ends when no more defaults can be applied.\nExample 3.1 De ne = hD;W i by\nD =\npriest : :drinks-vodka\n:drinks-vodka\n;\nman : drinks-vodka\ndrinks-vodka\n;\npriest : man\nman\n; and\nW = fpriestg:\nA default : = can be interpreted as saying that an individual who has property , can be assumed to also have the property if this is consistent with what else is known. The default theory has two extensions, E = Cn(fpriest;man;:drinks-vodkag) and E 0 = Cn(fpriest;man; drinks-vodkag), that represent the two possibilities of resolving the con ict between the rst two defaults in D. The extension E corresponds to the choice to apply the rst default, and the extension E 0 to the choice to apply the second. 2\nThe xpoint de nition of extensions is given next. The language of the propositional logic is denoted by L. The closure of a set of formulae S under logical consequence is Cn(S) = f 2 LjS j= g. The set f :\n1\n; : : : ;\nn\n= jn 0; f ;\n1\n; : : : ;\nn\n; g Lg of default\nrules is denoted by D. The size of a default theory hD;W i is the sum of the lengths of the formulae in W and in defaults in D. A default theory is nite if D and W are nite.\nDe nition 3.1 (Reiter, 1980) Let = hD;W i be a default theory. For any set of formulae S L, let (S) be the smallest set such that W (S), Cn( (S)) = (S), and if\n:\n1\n; : : : ;\nn\n= 2 D and 2 (S) and f:\n1\n; : : : ;:\nn\ng \\ S = ;, then 2 (S). A set of\nformulae E L is an extension for if and only if (E) = E.\nMore procedural is the semiconstructive de nition, so called because it suggests a non-\ndeterministic procedure for computing extensions.\nTheorem 3.2 (Reiter, 1980) Let E L be a set of formulae, and let = hD;W i be a default theory. De ne E\n0\n= W and for all i 0, E\ni+1\n= Cn(E\ni\n) [ f j :\n1\n; : : : ;\nn\n= 2\nD; 2 E\ni\n; f:\n1\n; : : : ;:\nn\ng\\E = ;g. Then E is an extension of if and only if E =\nS\ni 0\nE\ni\n:\nThe set of generating defaults of an extension identi es the extension uniquely, and is\nof nite size whenever the number of defaults is nite.\nDe nition 3.3 (Reiter, 1980) Suppose = hD;W i is a default theory and E is an extension of . The set of generating defaults of E with respect to is\nGD(E; ) =\n:\n1\n; : : : ;\nn\n2 D\n2 E and f:\n1\n; : : : ;:\nn\ng \\E = ; :\nTheorem 3.4 (Reiter, 1980) Suppose E is an extension of a default theory = hD;W i. Then E = Cn(W [ f j :\n1\n; : : : ;\nn\n= 2 GD(E; )g).\nThe standard consequence relations of default logic are cautious reasoning j=\nc\nand brave\nreasoning j=\nb\n.\nDe nition 3.5 Let = hD;W i be a default theory and 2 L a formula. Then j=\nc\nif and only if 2 E for all extensions E of , and j=\nb\nif and only if 2 E for some\nextension E of .\nThe following terminology is used in referring to default rules of certain syntactic forms.\nDefaults of the form : = , : ^ = , >:\n1\n; : : : ;\nn\n= are respectively normal, seminormal,\nand prerequisite-free. The symbol > denotes a valid formula. Prerequisite-free defaults are often written without prerequisites as :\n1\n; : : : ;\nn\n= . We shall sometimes denote sequences\n1\n; : : : ;\nn\nof justi cations by ;\n0\n;\n1\nand so on.\nNot all seminormal default theories have extensions, but all ordered default theories do. In some cases, a decision problem for a class of default theories is intractable, but for the subclass in which the default theories are ordered, it is tractable (Kautz & Selman, 1991). In later sections we analyze the complexity of decision problems both with and without the orderedness condition.\nDe nition 3.6 (Etherington, 1987) Let = hD;W i be a seminormal default theory. Without loss of generality assume that all formulae are in clausal form. The relations and are de ned as follows.\n1. If 2 W , then =\n1\n_ _\nn\nfor some n 1. For all\ni\n;\nj\n2 f\n1\n; : : : ;\nn\ng such\nthat\ni\n6=\nj\n, let :\ni\nj\n.\n2. If 2 D, then = : ^ = . Let A, B and G be the sets of literals of the clausal\nforms of , and , respectively.\n(a) If\ni\n2 A and\nj\n2 B, let\ni\nj\n.\n(b) If\ni\n2 G and\nj\n2 B, let :\ni\nj\n.\n(c) Also, =\n1\n^ ^\nm\nfor some m 1. For each i m,\ni\n=\ni;1\n_ _\ni;m\ni\nwhere\nm\ni\n1. Thus if\ni;j\n;\ni;k\n2 f\n1;1\n; ;\nm;m\nm\ng and\ni;j\n6=\ni;k\n, let :\ni;j\ni;k\n.\n3. The following transitivity relations hold for and .\n(a) If and , then .\n(b) If and , then .\n(c) If and or and , then .\nThe default theory is ordered if and only if for no .\nAccording to Theorem 1 in (Etherington, 1987), ordered default theories, like normal default theories and unlike seminormal default theories in general, have at least one extension."}, {"heading": "4. Prioritized Default Logics by Brewka and by Baader and Hollunder", "text": "Priorities in default logic have been investigated by Baader and Hollunder (1995) and Brewka (1994). They view priorities as information that selects which defaults are applied next when constructing an extension. Priorities are strict partial orders, that is, transitive and asymmetric relations P on the defaults. If P 0 , then the application of is more desirable than the application of 0 , and the default is more signi cant or has a higher priority. Brewka, as well as Baader and Hollunder, give a de nition of preferred extensions by modifying the semiconstructive de nition of extensions (Theorem 3.2.) The construction of an extension starts from the set W of objective facts, and proceeds in stages by repeatedly applying the highest priority applicable defaults. In this section we analyze the complexity of the associated decision problems.\nDe nition 4.1 A default : = is active in E L if E j= and E 6j= : and E 6j= .\nDe nition 4.2 (Baader and Hollunder, 1995) Let hD;W i be a default theory and P a strict partial order on D. Let E L be a set of formulae. De ne for all i 0,\nE\n0\n= W\nE\ni+1\n= E\ni\n[\n:\n2 D;E\ni\nj= ;E 6j= : ; no P\n:\nis active in E\ni\n:\nThen E is a P-preferred\nBH\nextension of hD;W i if and only if E =\nS\ni 0\nCn(E\ni\n).\nBrewka's de nition is syntactically similar. We have expressed it in a way that highlights the di erences to Baader and Hollunder's de nition. The main di erence is that the construction of a preferred extension proceeds by applying defaults in an order speci ed by some strict total order that extends the priorities. Furthermore, Brewka gives his de nition for normal default theories only, and the consistency of justi cations is tested against the sets E\ni\ninstead of the set E.\nDe nition 4.3 (Brewka, 1994) Let hD;W i be a normal default theory and P a strict partial order on D. Then E L is a P-preferred B extension of hD;W i if there is a strict total order T on D such that P T and E = S\ni 0\nCn(E\ni\n) where for all i 0,\nE\n0\n= W\nE\ni+1\n= E\ni\n[\n:\n2 D;E\ni\nj= ;E\ni\n6j= : ; no T\n:\nis active in E\ni\n:\nWe say that E is generated by T .\nThe purpose of both of these de nitions of preferred extensions is to introduce a mechanism for resolving con icts between defaults on the basis of the priorities. Di erent extensions represent di erent ways of resolving the con icts. The preferred extensions are a subset of all extensions of a default theory.\nExample 4.1 Let = hD;W i be a default theory and P a strict partial order on D, where\nD =\npriest : :like-rock-n-roll\n:like-rock-n-roll\n;\nman : like-rock-n-roll\nlike-rock-n-roll\n;\npriest : man\nman\n;\nW = fpriestg; and\nP =\npriest : :like-rock-n-roll\n:like-rock-n-roll\n;\nman : like-rock-n-roll\nlike-rock-n-roll\n:\nThe priorities P state that when reasoning about male priests, information speci c to priests should override information concerning men in general. Of the extensions E = Cn(fpriest;man;:like-rock-n-rollg) and E 0 = Cn(fpriest;man; like-rock-n-rollg) only E is P-preferred B and P-preferred BH . In the Baader and Hollunder de nition it is obtained as E = S\ni 0\nCn(E\ni\n) where E\n0\n= fpriestg; E\n1\n= fpriest;man;:like-rock-n-rollg and E\ni\n= E\n1\nfor all i 2. In this extension, the con ict between the rst two defaults is resolved in favor of the rst one. 2\nThe de nitions are not equivalent, as demonstrated by the following example given by Baader and Hollunder (1995). Baader and Hollunder also show that some extensions are preferred BH but not preferred B .\nExample 4.2 Let D = f:a=a; :b=b; b:c=c; a::c=:cg and P = fhb:c=c; a::c=:cig. The extension E = Cn(fa; b;:cg) is P-preferred B but not P-preferred BH . The extension E cannot be obtained with the Baader and Hollunder de nition. For E 0 = Cn(fa; b; cg) the Baader and Hollunder de nition produces the sets E 0\n0\n= ;, E\n0 1 = fa; bg, E 0 2 = fa; b; cg and E 0\ni\n= E\n0 2\nfor all i 3, and the unique P-preferred\nBH\nextension is E\n0\n=\nS\ni 0\nE\n0 i . In Brewka's de -\nnition we can bypass the higher priority default b:c=c by using a total ordering where :b=b follows :a=a and a::c=:c. This way we obtain the sets E\n0\n= ;, E\n1\n= fag, E\n2\n= fa;:cg,\nE\n3\n= fa;:c; bg and E\ni\n= E\n3\nfor all i 4. 2\nConsequence relations that correspond to cautious reasoning in Reiter's default logic are\nde ned as follows.\nDe nition 4.4 The consequence relations j=\nB\nand j=\nBH\nare de ned by j=\nB P\nif and\nonly if the formula is in all P-preferred\nB\nextensions of , and j=\nBH P if and only if\nthe formula is in all P-preferred\nBH\nextensions of .\nLemma 4.5 Let hD;W i be a normal default theory and T a strict total order on D. Then for all E L, E is a T -preferred B extension of hD;W i if and only if E is a T -preferred BH extension of hD;W i.\nProof: If W is inconsistent, then the inconsistent extension L is the unique T -preferred\nB\nand T -preferred\nBH\nextension of . So assume W is consistent. ()) Assume that E is\na T -preferred\nB\nextension of hD;W i. By de nition E =\nS\ni 0\nCn(E\ni\n), where E\ni\nare as in\nDe nition 4.3. Let E\n0 i ; i 0 be the sets E i in De nition 4.2. We show that E i = E 0 i for all\ni 0, and hence E =\nS\ni 0\nCn(E\n0 i ) is a T -preferred BH extension of . Induction hypothesis:\nE\ni\n= E\n0 i . Base case i = 0: Immediate. Inductive case i 1: Assume that for : = 2 D,\nE\ni 1\nj= , E\ni 1\n6j= : and no T : = is active in E\ni 1\n. Hence 2 E\ni\n. By the induction\nhypothesis E\n0 i 1 j= and no T : = is active in E 0 i 1 . To show 2 E 0 i it remains to show\nthat E 6j= : . Because E is consistent and E\ni\nE and 2 E\ni\n, E 6j= : . Hence 2 E\n0 i\nand E\ni\nE\n0 i . Proof of E 0 i\nE\ni\nis similar. It su ces to point out that E 6j= : implies\nE\ni 1\n6j= : simply because E\ni 1\nE.\n(() Let E be a T -preferred\nBH\nextension of hD;W i. Hence E =\nS\ni 0\nCn(E\n0 i ), where\nE\n0 i ; i 0 are the sets in De nition 4.2. Let E i ; i 0 be the sets in De nition 4.3. We\nshow by induction that E =\nS\ni 0\nE\ni\n. Induction hypothesis: E\ni\n= E\n0 i . Base case i = 0:\nImmediate. Inductive case i 1: Assume that for : = 2 D, E\n0 i 1 j= , E 6j= : and\nno T : = is active in E\n0 i 1 . Hence 2 E 0 i . By the induction hypothesis E i 1 j=\nand no T : = is active in E\ni 1\n. To show 2 E\ni\nit remains to show that E\ni 1\n6j= : .\nBecause E\n0 i 1\nE and E 6j= : , E\n0 i 1 6j= : . By the induction hypothesis E i 1 = E 0 i 1 .\nHence E\ni 1\n6j= : . Therefore E\n0 i\nE\ni\n. Proof of E\ni\nE\n0 i proceeds similarly. Assume\nthat for : = 2 D, E\ni 1\nj= , E\ni 1\n6j= : and no T : = is active in E\ni 1\n. By the\ninduction hypothesis E\n0 i 1 j= and no T : = is active in E 0 i 1 . It remains to show that\nE 6j= : . So assume E j= : . Because : = is the T -least active default and E j= : , E 0\ni\n= E\n0 i 1 , and further E 0 j = E 0 i 1 for all j i. Therefore E = Cn(E 0 i 1 ). This leads to\na contradiction with the assumption E j= : and the fact E\n0 i 1 66j= : obtained with the\ninduction hypothesis. Therefore the assumption is false, and E 6j= : . Therefore 2 E\n0 i\nand E\ni\nE\n0 i . 2"}, {"heading": "4.1 Complexity in the General Case", "text": "With no restrictions on the form of defaults, both the Brewka and the Baader and Hollunder prioritized default logics are complete for the second level of the polynomial hierarchy. This means that there are polynomial time translations between cautious reasoning in Reiter's default logic and the prioritized versions of cautious reasoning in both of these logics.\nTheorem 4.6 Testing j=\nB P for normal default theories , strict partial orders P and\nformulae is\np 2 -complete.\nProof: The\np 2 -hardness is because with an empty priority relation Brewka's logic coincides\nwith Reiter's default logic (Proposition 6 in (Brewka, 1994)), which is\np 2 -hard even with\nthe restriction to normal defaults (Gottlob, 1992). We show that the complement of the problem is in p\n2\n, which directly implies that the problem is in\np 2 . The complementary\nproblem is the existence of a P-preferred\nB\nextension E such that 62 E. The guessing of\na strict total order T that generates an extension E such that 62 E can be done by a nondeterministic Turing machine in a polynomial number of steps: guess T , and guess the conclusions of generating defaults of E. The veri cation that E ful lls Brewka's de nition takes a polynomial number of steps with an NP oracle for propositional satis ability. 2\nTheorem 4.7 Testing j=\nBH P for default theories , strict partial orders P and formulae\nis\np 2 -complete.\nProof: Like the proof of the previous theorem except that no strict total orders need to be guessed. 2"}, {"heading": "4.2 Complexity in Syntactically Restricted Cases", "text": "In this section we investigate the complexity of the prioritized default logics in syntactically restricted cases. This subject is related to the research on the boundary between tractability and intractability of default logic without priorities by Kautz and Selman (1991) and Stillman (1990). First we analyze the case in which the priorities are strict total orders. Then we complete the complexity analysis by extending the results to arbitrary strict partial orders.\nKautz and Selman analyze the complexity of determining the existence of extensions, cautious reasoning, and brave reasoning for default theories with defaults of the form listed in Table 1 (excluding the prerequisite-free classes) and with objective parts that are sets of literals. In Table 1, the letters a; b; c { possibly subscripted { denote literals, and the\nletters p; q; r denote propositional variables. Stillman considers only the problem of brave reasoning, but considers a wider range of classes. He analyzes default theories the objective parts of which are sets of Horn clauses or sets of 2-literal clauses, and also the case where defaults are prerequisite-free. 1 The most general tractable classes in default logic without priorities are the following.\nIf the objective partW may contain Horn clauses, none of the restrictions on the form of default rules is su cient for achieving tractability in brave reasoning (Stillman, 1990). Cautious reasoning has not been investigated.\nIfW consists of 2-literal clauses, brave reasoning for the prerequisite-free normal class is tractable (Stillman, 1990). Cautious reasoning has not been investigated.\nIf W consists of literals, brave reasoning for the prerequisite-free normal class and the Horn class are tractable (Kautz & Selman, 1991; Stillman, 1990). Cautious reasoning is tractable for the normal unary class (Kautz & Selman, 1991). Cautious reasoning for the prerequisite-free classes has not been investigated.\nWe present a similar analysis for the same classes of prioritized default logics starting with the case where priorities totally order the defaults. We present for each class either a polynomial time decision procedure, or an NP-hardness or a co-NP-hardness result."}, {"heading": "4.2.1 Summary", "text": "Because of the constructive nature of the de nitions of preferred extensions in the prioritized default logics by Brewka and by Baader and Hollunder, constructing the unique preferred extensions of default theories with total priorities is tractable whenever the logical consequence tests in propositional logic are tractable (Theorem 4.8.) This is because there is always a unique default that is applied next, and this default cannot be defeated by any default applied later. So with total priorities, these prioritized default logics are computationally much easier than Reiter's default logic.\nFor unrestricted priorities, Table 2 summarizes the complexity of j=\nB\nand j=\nBH\nwith\nvarious syntactic restrictions. As Brewka does not consider non-normal default theories, complexity results on seminormal classes concern the consequence relation j= BH only. In cases where Reiter's default logic is tractable and a prioritized default logic is not, or vice versa, the complexity characterization is set in boldface.\nTable 3 gives references to the theorems and corollaries where the results are stated. We use the notation n to indicate that the intractability of the class is directly implied by the intractability of the subclass n in the same column, and the notation n to indicate that the tractability is implied by the tractability of the superclass n in the same column. When the complexity is directly implied by the complexity of an unprioritized class of default theories investigated by Kautz and Selman (1991) we indicate this by K&S.\n1. Stillman's de nition of prerequisite-free unary and prerequisite-free ordered unary classes includes only\ndefault rules of the forms ::q=:q and :p^:q=p. We, however, consider also default rules of the form :p=p in order to have a closer correspondence with the Kautz and Selman de nition of unary classes. This change does not sacri ce generality, as the default :p=p works like :p ^ :q=p whenever q does not occur elsewhere in the default theory.\nWhen looking at Table 2 it is slightly surprising that the favorable computational properties in the totally ordered case are in no way re ected in the complexity of reasoning with arbitrary priorities. With arbitrary priorities, for almost all classes of default theories in the Kautz-Selman-Stillman hierarchy the complexity is the same as the complexity of Reiter's default logic and the lexicographic prioritized default logic that is discussed in Section 5."}, {"heading": "4.2.2 Tractable Classes", "text": "The following theorem shows that with the restriction to priorities that totally order the defaults, both the Baader and Hollunder and the Brewka de nition of preferred extensions yield an e cient decision procedure for the respective prioritized default logic.\nTheorem 4.8 Let hD;W i be a nite default theory and T a strict total order on D. The unique T -preferred BH extension (if preferred BH extensions exist) of hD;W i can be computed in polynomial time if all the membership tests in Cn(E\ni\n) in the de nition of E are for a\npolynomial time subset of the propositional logic.\nProof: Unlike the de nition of preferred\nB\nextensions, the de nition of preferred\nBH\nexten-\nsions does not directly yield a polynomial time decision procedure for total priorities and tractable classical reasoning. This is because the test that the justi cations of defaults to be applied do not belong to the extension being constructed cannot be performed before the extension is fully known. However, if a simple test for justi cations of defaults is added, the algorithm that works with preferred B extensions works also with preferred BH extensions. Compute sets E 0\ni\nas follows.\nE\n0 0 = W\nE\n0 i+1 = E 0 i [\n:\n2 D;E\n0 i j= ;E 0 i 6j= : ; no T\n:\nis active in E\n0 i\nIf E\n0 i j= : for some : = 2 D such that for some j < i, E 0 j j= ;E 0 j 6j= : and no T : =\nis active in E\n0 j , then the algorithm returns false. If E 0 i = E 0 i+1 for some i 0, then return\nCn(E\n0 i ) =\nS\nj2f0;:::;ig\nCn(E\n0 j ) and de ne E 0 j = E 0 i for all j > i.\nLet E be a T -preferred\nBH\nextension of hD;W i. Hence E =\nS\ni 0\nCn(E\ni\n), where E\ni\n; i 0\nare the sets in De nition 4.2. We show by induction that E =\nS\ni 0\nE\n0 i and that the value\nfalse is not returned. Induction hypothesis: E\n0 i = E i . Base case i = 0: Immediate. Inductive\ncase i 1: We rst show that E\ni\nE\n0 i . Assume that for : = 2 D, E i 1 j= , E 6j= :\nand no T : = is active in E\ni 1\n. Hence 2 E\ni\n. By the induction hypothesis E\n0 i 1 j=\nand no T : = is active in E\n0 i 1 . To show 2 E 0 i it remains to show that E 0 i 1 6j= : .\nBecause E\ni 1\nE and E 6j= : , E\ni 1\n6j= : . By the induction hypothesis E\n0 i 1 = E i 1 .\nHence E\n0 i 1 6j= : . Therefore 2 E 0 i and E i\nE\n0 i . Proof of E 0 i\nE\ni\nproceeds similarly.\nAssume that for : = 2 D, E\n0 i 1 j= , E 0 i 1 6j= : and no T : = is active in E 0 i 1 . By\nthe induction hypothesis E\ni 1\nj= and no T : = is active in E\ni 1\n. It remains to show\nthat E 6j= : . So assume E j= : . Because : = is the T -least default and E j= : , E\ni\n= E\ni 1\n, and further E\nj\n= E\ni 1\nfor all j i. Therefore E = Cn(E\ni 1\n). This leads to\na contradiction with the assumption E j= : and the fact E\ni 1\n66j= : obtained with the\ninduction hypothesis. Therefore the assumption is false, and E 6j= : . Therefore 2 E\ni\nand E\n0 i\nE\ni\n. That the algorithm does not return false goes similarly. Assume that for\nsome : = 2 D, E\n0 i j= : and for some j < i, E 0 j j= and no T : = is active in E 0 j .\nWe have to show that E\n0 j 6j= : . This is implied by the fact E 6j= : shown above because\nE\n0 j\nE.\nAssume that the algorithm yields E =\nS\ni 0\nCn(E\n0 i ). We claim that E is a P-preferred BH\nextension of hD;W i. Because the algorithm did not return false and E =\nS\ni 0\nCn(E\n0 i ),\nPROCEDURE decide(l;D;W )\nIF W j= l THEN RETURN true; IF l 2W THEN RETURN false; IF :l=l 62 D THEN RETURN false; IF :l=l 62 D THEN RETURN true; IF :l=lP:l=l THEN RETURN true; RETURN false\nEND\nW is a set of Horn clauses or 2-literal clauses, P is a strict total order on D, and is a literal, can be done in polynomial time.\nCorollary 4.10 Testing hD;W i j=\nB P for disjunction-free normal default theories hD;W i,\nwhere W is a set of Horn clauses or 2-literal clauses, P is a strict total order on D, and is a literal, can be done in polynomial time.\nProof: Brewka gives a de nition of preferred extensions for normal default theories only. By Lemma 4.5 the preferred extensions in this case coincide with the Baader and Hollunder preferred extensions whenever the priorities are a strict total order. 2\nFor unrestricted priorities the class of prerequisite-free normal unary default theories is\ntractable. The remaining classes in the hierarchy are intractable.\nTheorem 4.11 For literals l and prerequisite-free normal unary theories hD;W i where W is a set of literals, testing hD;W i j= BH\nP\nl and hD;W i j=\nB P l can be done in polynomial time.\nProof: The algorithm in Figure 1 tests hD;W i j=\nB P l and hD;W i j= BH P l. The correctness\nof the algorithm for j=\nBH P is as follows. For j= B P the proof is similar. We analyze the if-\nstatements in sequence. In each case we may use the negations of the assumptions of the previous cases.\n1. Assume that W j= l. Now l is in all P-preferred\nBH\nextensions E of because by\nde nition W E. Hence it is correct to return true. 2. Assume that l 2 W . Because W is consistent (as W 6j= l), all extensions are consistent, and no extension contains l. Hence it is correct to return false. 3. Assume that :l=l 62 D. Because l 62 W and all extensions are consistent, no extension contains l. Hence it is correct to return false. 4. Assume that :l=l 62 D. Because l 62W , no extension contains l, and hence :l=l is applied in all extensions,\nand l is in all extensions. Hence it is correct to return true. 5. Assume that :l=lP:l=l. Assume that there is a preferred BH extension E such that l 2 E. Now l 2 E\ni\nnE\ni 1\nfor some\ni. Hence l 62 E\ni 1\nand :l=l is not active in E\ni 1\n. Hence :l 2 E\ni 1\n, which however contradicts\nthe fact that l 62 E\ni 1\n. Hence l in no P-preferred\nBH\nextension of , and j=\nBH P l. Hence\nit is correct to return true. 6. In the remaining case not :l=lP:l=l. If :l=lP:l=l, then by an argument similar to the previous case all P-preferred BH extensions { by assumption there is at least one { contain l, and hence it is correct to return false. If neither :l=lP:l=l nor :l=lP:l=l, then by symmetry there is an extension not containing l, and hence it is correct to return false.\nTherefore the algorithm returns true if and only if l is in all P-preferred\nBH\nextensions\nof . The algorithm obviously runs in polynomial time. 2"}, {"heading": "4.2.3 Intractable Classes", "text": "Intractability of all remaining classes except the normal unary class is directly implied by the intractability of the same classes in Reiter's default logic, as shown by Kautz and Selman (1991) and Theorems 4.12, 4.13 and 4.14.\nStillman (1990) analyzes the complexity of prerequisite-free default theories, and claims that brave reasoning for the prerequisite-free normal class with 2-literal clauses is solvable in polynomial time. However, he does not analyze the complexity of cautious reasoning. It turns out that even with the restriction to prerequisite-free normal defaults with propositional variables in justi cations and conclusions, reasoning is intractable.\nTheorem 4.12 Testing hD;W i j=\nc\nl for literals l and prerequisite-free positive normal\nunary default theories with objective parts that consist of 2-literal Horn clauses, is co-NPhard.\nProof: We give a many-one reduction from propositional satis ability to the complement of the problem. Let C be a set of clauses and P the set of propositional variables that occur in C. Let N be an injective function that maps each clause c 2 C to a propositional variable n = N(c) such that n 62 P . Let\nD =\n: p\n0\np\n0\np 2 P [\n: p\n00\np\n00\np 2 P [\n: n\nn\nc 2 C;n = N(c) ; and\nW = fp\n0\n!pjp 2 Pg [ fp\n00\n!:pjp 2 Pg\n[fp!:njp 2 c 2 C;n = N(c)g [ f:p!:nj:p 2 c 2 C;n = N(c)g\n[fn! falsejc 2 C;n = N(c)g:\nWe claim that hD;W i 6j=\nc\nfalse if and only if C is satis able.\nAssume that C is satis able; that is, there is a model M such that M j= C. We show\nthat there is an extension of hD;W i that does not contain false. Let E = Cn(fp\n0\njp 2\nP;M j= pg[fp\n00\njp 2 P;M 6j= pg[W ). To show that E is an extension of hD;W i, it su ces\nto show that E is consistent and for all : = 2 D, : 2 E if and only if 62 E. Let M\n0\nbe a model such that for all p 2 P , M\n0\nj= p i M j= p, M\n0\nj= p\n0\ni M j= p, and M\n0\nj= p\n00\ni M 6j= p, and M\n0\n6j= n for all n such that n = N(c) for some c 2 C. It is straightforward\nto show that M\n0\nj= E, and E is therefore consistent. Take any : = 2 D. Assume that\n: 2 E. Because E is consistent, 62 E. Assume that 62 E. If = p\n0\n, then by de nition\np\n00\n2 E, and as fp\n00\n!:p; p\n0\n! pg E, :p\n0\n2 E. Similarly for = p\n00\n. If = n such that\nn = N(c) for some c 2 C, then because M j= c, there is disjunct l 2 fp;:pg of c such that M j= l, and hence by de nition l 2 E, and as l!:n 2 E, :n 2 E. Therefore E is an extension of hD;W i.\nAssume that hD;W i 6j=\nc\nfalse; that is, there is an extension E of hD;W i such that\nfalse 62 E. Let M be a model such that for all p 2 P , M j= p i p 2 E. We show that M j= C, and hence C is satis able. Because false 62 E and n! false 2 E for all n such that n = N(c) for some c 2 C, n 2 E for no n such that n = N(c) for some c 2 C. Because :n=n 2 D for all such n, :n 2 E for all such n, which means that for every clause in C, one of its disjuncts is in E. By de nition this disjunct is true in M . Hence every clause in C is true in M . 2\nAn alternative way of obtaining the intractability of cautious reasoning for all classes with a Horn objective part is to apply Theorem 8.2 in (Kautz & Selman, 1991) { that reduces brave reasoning to cautious reasoning by adding a default :l=l { and the intractability result for brave reasoning in Horn classes (Stillman, 1990). This is not applicable to the 2-literal case because in it brave reasoning is tractable.\nTheorem 4.13 Testing hD; ;i j=\nc\nl for literals l and sets D of prerequisite-free normal\ndefaults with conclusions that are conjunctions of literals, is co-NP-hard.\nProof: Let C be a set of clauses. We show that there is a default theory hD; ;i such that hD; ;i 6j=\nc\nfalse if and only if C is satis able. Let P be the set of propositional variables that\noccur in C. Let N be an injective function that maps each clause c 2 C to a propositional variable n = N(c) such that n 62 P . De ne the set of defaults D as follows.\nD =\n: l ^ n\nl ^ n\nc 2 C; l 2 c; n = N(c) [\n: :n ^ false\n:n ^ false\nc 2 C;n = N(c)\nAssume that C is satis able. Let M be a model such that M j= C. Let\nE\n0\n= Cn(fl ^ njc 2 C; l 2 c; n = N(c);M j= lg):\nObviously E\n0\nis consistent and it does not contain false.\n2\nClearly E\n0\nis an extension of\nhf:l ^ n=l ^ n 2 Djc 2 C; l 2 c; n = N(c); l ^ n 2 E\n0\ng; ;i. By Theorem 3.2 in (Reiter, 1980)\nthere is an extension E of hD; ;i such that E\n0\nE. Because n 2 E\n0\nE for all n = N(c)\nwith c 2 C, false 62 E.\nAssume that there is an extension E of hD; ;i such that false 62 E. Let M be a model such that for all propositional variables p, M j= p if and only if p 2 E. Because false 62 E, ::n ^ false=:n ^ false 2 GD(E; hD; ;i) for no n = N(c); c 2 C. Take any c 2 C. Now n = N(c) 2 E and hence :l ^ n=l ^ n 2 GD(E; hD; ;i) for some l 2 c. Hence l ^ n 2 E and M j= c. Because this holds for all c 2 C, nally M j= C. 2\n2. E\n0\nis not necessarily an extension of hD; ;i. Consider the satis able formula a _ b the clausal form of\nwhich is C = ffa; bgg, and the model M that assigns true to a and false to b. Now E\n0\n= Cn(fa ^ ng).\nHowever, there is the set E = Cn(fa ^ n; b ^ ng) that extends E\n0\nand is an extension of hD; ;i.\nTheorem 4.14 Testing hD; ;i j=\nc\nl for literals l and sets D of prerequisite-free ordered\nunary defaults is co-NP-hard.\nProof: Proof is by many-one reduction from propositional satis ability to testing hD; ;i 6j=\nc\nl.\nLet C be any set of clauses, and let P be the set of propositional variables occurring in C. Let N be an injective function that maps each clause c 2 C to a propositional variable n = N(c) such that n 62 P . Let\nD =\n: p\np\np 2 P [\n: :p\n:p\np 2 P [\n: p\n0\n^ :p\np\n0\np 2 P\n[\n: n ^ :p\nn\nc 2 C;n = N(c);:p 2 c\n[\n: n ^ :p\n0\nn\nc 2 C;n = N(c); p 2 c [\n: false ^ :n\nfalse\nc 2 C;n = N(c) :\nThe orderedness condition is ful lled because the relation (P fN(c)jc 2 Cg)[(fp\n0\njp 2\nPg fN(c)jc 2 Cg) [ (fN(c)jc 2 Cg ffalseg) [ (P fp\n0\njp 2 Pg) is irre exive.\nWe claim that C is satis able if and only if hD; ;i 6j=\nc\nfalse. Assume that C is satis able;\nthat is, there is a model M such that M j= C. We construct an extension E of hD; ;i such that false 62 E. Let\nA =\n: p\np\np 2 P;M j= p [\n: :p\n:p\np 2 P;M 6j= p\n[\n: p\n0\n^ :p\np\n0\np 2 P;M 6j= p\n[\n: n ^ :p\nn\nc 2 C;n = N(c);:p 2 c;M 6j= p\n[\n: n ^ :p\n0\nn\nc 2 C;n = N(c); p 2 c;M j= p :\nDe ne E = Cn(f j: = 2 Ag). To verify that E is an extension of hD; ;i it su ces to check that for every : = 2 A, : 62 E, and for every : = 2 DnA, : 2 E, and this is straightforward. Hence hD; ;i 6j=\nc\nfalse.\nAssume that hD; ;i 6j=\nc\nfalse; that is, there is an extension E of hD; ;i such that false 62 E.\nLet M be a model such that for all propositional variables p, M j= p if and only if p 2 E. We show that M j= C. Because false 62 E, :false ^ :n=false 62 GD(E; ) for all n such that n = N(c) for some c 2 C. Hence n 2 E for all such n. Hence for every n, there is :n ^ :p=n 2 GD(E; ) or :n ^ :p 0 =n 2 GD(E; ). Hence for every clause l\n1\n_ _ l\nn\n2 C,\np 62 E for some :p 2 fl\n1\n; : : : ; l\nn\ng, or p\n0\n62 E for some p 2 fl\n1\n; : : : ; l\nn\ng. In the rst case by\nde nition M j= :p. In the second case p 2 E and hence by de nition M j= p. Hence every clause in C is true in M , and C is satis able. 2\nBen-Eliyahu and Dechter (1996) show that testing j=\nc\nfor a class of default theories that\nsubsumes all classes in the Kautz and Selman and Stillman hierarchy that have a 2-literal objective part is co-NP-complete. Hence the problems in Theorems 4.12, 4.13 and 4.14 are in co-NP, and consequently co-NP-complete. The Ben-Eliyahu and Dechter result, however, has no direct implications on the complexity of the prioritized versions of these problems.\nTheorem 4.15 Both testing j=\nB P l and j= BH P l for normal unary default theories ,\nstrict partial orders P and literals l, is co-NP-hard.\nProof: We give the proof for preferred\nB\nextensions only. The proof for preferred\nBH\nexten-\nsions is similar. The proof is by reduction from propositional satis ability to the complement of the problem. Let C = fc\n1\n; : : : ; c\nm\ng be a set of propositional clauses and P the set of\npropositional variables occurring in C. Let N be an injective function that maps each clause c 2 C to a propositional variable n = N(c) such that n 62 P . De ne the default theory\n= hD; ;i and priorities P on D as follows.\nD\n1\n=\n: p\np\np 2 P [\n: :p\n:p\np 2 P\nD\n2\n=\n: p\n0\np\n0\np 2 P [\np : :p\n0\n:p\n0\np 2 P\nD\n3\n=\np : n\nn\np 2 c 2 C;n = N(c) [\np\n0\n: n\nn\n:p 2 c 2 C;n = N(c)\n[\n: n\n0\nn\n0\nc 2 C;n = N(c) [\nn : :n\n0\n:n\n0\nc 2 C;n = N(c)\n[\nn\n0\n: false\nfalse\nc 2 C;n = N(c)\nD = D\n1\n[D\n2\n[D\n3\nP =\np : :p\n0\n:p\n0\n;\n: p\n0\np\n0\np 2 P [ (D\n1\n(D\n2\n[D\n3\n))\nPriorities are needed to guarantee that p 2 E if and only if p\n0\n62 E, and total priorities\ncannot be used because we cannot restrict to those models that correspond to preferred extensions (with respect to some ordering on the variables), as they are not necessarily models of C even if C is satis able. The default theory is depicted in Figure 2. Defaults p:q=q are shown as arrows p! q, and defaults p::q=:q as broken arrows p 6! q. Only some of defaults p:n=n and p 0 :n=n for propositions p 2 P and n; n = N(c) for c 2 C, are in D,\nand therefore they are shown as dashed arrows. We claim that C is satis able if and only if there is a P-preferred B extension of that does not contain false.\nAssume that C is satis able; that is, there is a model M such that M j= C. We show\nthat there is a P-preferred\nB\nextension E of such that false 62 E. Let E = Cn(fp 2\nP jM j= pg [ fp\n0\njp 2 P;M 6j= pg [ f:pjp 2 P;M 6j= pg [ f:p\n0\njp 2 P;M j= pg [ fnjc 2 C;n =\nN(c)g [ f:n\n0\njc 2 C;n = N(c)g). Let T be a strict total order on D such that P T and\nfor all p 2 P , :p=pT ::p=:p if M j= p and ::p=:pT :p=p otherwise, and n::n\n0\n=:n\n0\nT :n=n for\nall c 2 C, n = N(c). It is straightforward to verify that E is a P-preferred\nB\nextension of\ngenerated by T . Clearly false 62 E.\nAssume that E is a P-preferred\nB\nextension such that false 62 E. Let M be a model such\nthat for all p 2 P , M j= p if and only if p 2 E. Because false 62 E, no default n\n0\n:false=false\nis applied in E, where n = N(c) for some c 2 C. Therefore n\n0\n62 E for all n = N(c) such\nthat c 2 C. Therefore :n\n0\n2 E and n 2 E for all such n. Hence a disjunct p is in E or\np\n0\nis in E for a disjunct :p for every c 2 C. In the rst case by de nition of M , M j= c.\nIn the second case p 62 E, because otherwise :p\n0\nwould be in E as p::p\n0\n=:p\n0\nP:p\n0\n=p\n0\n. Hence\nM j= :p and M j= c. Because this holds for all c 2 C, nally M j= C. 2"}, {"heading": "5. Lexicographic Prioritized Default Logic", "text": "A de nition of prioritized default logic is used by Rintanen (1999). This de nition is based on an earlier one for autoepistemic logic (Rintanen, 1994). The priority mechanism uses lexicographic comparison and the preferred extensions in this approach do not in general coincide with the preferred extensions in the prioritized default logics discussed in Section 4. Lexicographic comparison has earlier been used in the context of nonmonotonic reasoning by several researchers (Lifschitz, 1985; Ge ner & Pearl, 1992; Ryan, 1992). Comparing two extensions is based on whether the defaults are generating defaults of the extensions, that is, whether their prerequisites belong to the extension and the negations of the justi cations do not belong to the extension. We say that a generating default of an extension is applied in the extension.\nDe nition 5.1 (Application) A default :\n1\n; : : : ;\nn\n= is applied in E L if E j=\nand f:\n1\n; : : : ;:\nn\ng \\ Cn(E) = ;. This is denoted by appl( :\n1\n; : : : ;\nn\n= ;E).\nWe abbreviate appl( ; E) and not appl( ; E\n0\n) by the notation appl( ; E;E\n0\n).\nDe nition 5.2 (Preferredness) Let = hD;W i be a default theory and P a strict partial order on D. Let E be an extension of . Then E is a P-preferred L extension of if there is a strict total order T on D such that P T and for all extensions E 0 of and\n2 D,\nappl( ; E\n0\n; E) implies that for some 2 D; T and appl( ; E;E\n0\n):\nSuch a strict total order is a ;P-ordering for E.\nOur investigation on lexicographic prioritization in default reasoning was motivated by earlier work on the topic (Tan & Treur, 1992; Baader & Hollunder, 1995). These de nitions of priorities for default logic are procedural, as they are given as extensions of (nondeterministic) decision procedures for default logic. This procedural nature of prioritization is\nsensitive to the lengths of sequences of defaults involved in deriving certain facts: among two con icting defaults the one with the lower priority may become applied solely because the sequence of defaults needed for deriving its prerequisite is shorter (Brewka & Eiter, 1998). Approaches to prioritizing defaults that are based on lexicographic comparison (Lifschitz, 1985; Brewka, 1989; Ge ner & Pearl, 1992; Ryan, 1992) do not exhibit that kind of behavior.\nLexicographic comparison has properties that are favorable from the point of view of knowledge representation. Extensions of a default theory are possible interpretations of the default theory, representing di erent ways of resolving the con icts between default rules. Priorities express the plausibility of di erent ways of resolving the con icts, and consequently act as an implicit representation of preferences between the extensions. One useful property of lexicographic comparison is that every nite default theory has at least one preferred extension whenever it has at least one Reiter extension. It does not seem plausible that the priorities could contain information that indicates that none of the extensions is a plausible meaning of the default theory. Another useful property is that every extension of a default theory is a P-preferred L extension for a suitably chosen P. In other words, the way priorities are used in ranking the extensions should not per se rule out the possibility that a certain extension is preferred or that it is the unique preferred extension.\nA distinguishing di erence between the lexicographic prioritized default logic and other work on priorities in default logic is that the highest priority default { if there is one { is applied in all preferred L extensions if there is an extension where it is applied. Preferred B and preferred BH extensions do not always apply the applicable highest priority defaults.\nExample 5.1 (Brewka, 1994) Consider the default theory = hD;W i where W = fag and D = fb:c=c; a::c=:c; a:b=bg. De ne the relation\nP =\nb : c\nc\n;\na : :c\n:c\n;\na : :c\n:c\n;\na : b\nb\n;\nb : c\nc\n;\na : b\nb\n:\nAccording to De nitions 4.2 and 4.3 the sets E\ni\nare as follows, and the unique P-preferred\nB\nand P-preferred\nBH\nextension of is E =\nS\ni 1\nCn(E\ni\n).\nE\n0\n= fag\nE\n1\n= fa;:cg\nE\n2\n= fa;:c; bg\nE\ni\n= E\n2\nfor all i 3\nIn other words, initially the highest priority default b:c=c is not applicable, and hence the second default a::c=:c is applied, and :c is obtained. The highest priority default is still not applicable, and hence the third default a:b=b is applied, and b is obtained. Now b:c=c were applicable if the contradicting default a::c=:c would not have been applied rst. 2\nThe application of the highest priority default { whenever possible { would seem a useful declarative property for nonmonotonic reasoning with priorities. The satisfaction of this property leads to lexicographic prioritization. Also, the behavior of lexicographic prioritized default logic is more consistent for default theories with normal defaults : =\nand closely related default theories with prerequisite-free normal defaults : ! = ! . The latter defaults allow reasoning by contraposition with the implications, and the former do not, but otherwise they represent related patterns of reasoning. The logics by Brewka and by Baader and Hollunder order extensions lexicographically for the latter kind of default theories, but not for the former.\nDe nition 5.3 The consequence relation j=\nL\nis de ned by j=\nL P\nif and only if the\nformula is in all P-preferred\nL\nextensions of .\nExample 5.2 Let hD;W i be a default theory where D = fp:q=q; p::r=:r; q:r=rg andW = fpg. Let P = fhp::r=:r; q:r=rig be a strict partial order on D. The default theory has two extensions, E\n1\n= Cn(fp; q;:rg) where the defaults p::r=:r and p:q=q are applied, and\nE\n2\n= Cn(fp; q; rg) where p:q=q and q:r=r are applied. These extensions and all strict total orders T on D such that P T are depicted below. The most signi cant defaults are the lowest. The symbol signi es that the default is applied and that it is not applied.\nE\n1\nE\n2\np : q\nq\nq : r\nr\np : :r\n:r\nE\n1\nE\n2\nq : r\nr\np : q\nq\np : :r\n:r\nE\n1\nE\n2\nq : r\nr\np : :r\n:r\np : q\nq\nThe extension E\n1\nis a P-preferred\nL\nextension because the leftmost strict total order\nT\n1\nis a ;P-ordering for E\n1\n: q:r=r is the only default such that appl( ; E\n2\n; E\n1\n), and\nappl(p::r=:r;E\n1\n; E\n2\n) and p::r=:rT\n1\nq:r=r. The extension E\n2\nis not a P-preferred\nL\nexten-\nsion because none of the three strict total orders T\n1\n;T\n2\n;T\n3\nis a ;P-ordering for E\n2\n: for all\ni 2 f1; 2; 3g, there is the default p::r=:r such that appl(p::r=:r;E\n1\n; E\n2\n) and there is no\ndefault such that T\ni\np::r=:r and appl( ; E\n2\n; E\n1\n). 2\nLemma 5.4 Let = hD;W i be a default theory where D is nite, and let P be a strict total order on D. Let have at least one extension. Then there is exactly one P-preferred L extension of .\nProof: We show that there is an extension E of such that P is the ;P-ordering for E. Let\n1\n; : : : ;\nn\nbe the ordering P of D. De ne D\ni\n= f\n1\n; : : : ;\ni\ng for all i 2 f0; : : : ; ng. De ne\nfor all i 2 f1; : : : ; n 1g,\nX\n0\n= fE LjE is an extension of g; and\nX\ni+1\n=\n(\nfE 2 X\ni\njappl(\ni+1\n; E)g if appl(\ni+1\n; E) for some E 2 X\ni\n;\nX\ni\notherwise.\nInduction hypothesis: For j 2 f0; : : : ; ig, (1) the set X\nj\nis non-empty, (2) for all E 2 X\nj\nand\nE\n0\n2 X\nj\nand 2 D\nj\n, appl( ; E) i appl( ; E\n0\n), and (3) for all E 2 X\nj\nand E\n0\n2 X\n0\nnX\nj\nthere\nis 2 D\nj\nsuch that appl( ; E;E\n0\n) and there is no\n0\n2 D such that\n0\nP and appl(\n0\n; E\n0\n; E).\nThe proofs of both the base case and the inductive case are straightforward. The claim of the lemma is obtained from the facts established in the induction proof as\nfollows. By (1) the set X\nn\nis non-empty. By (2) and Theorems 2.4 and 2.5 in (Reiter, 1980)\nPROCEDURE extension(D;W;E);\nE\n0\n:= W ; REPEAT\nE\n00\n:= E\n0\n;\nFOR EACH :\n1\n; : : : ;\nn\n= 2 D DO\nIF hE\n0\n; i 2 CN and hE;: i 62 CN for all 2 f\n1\n; : : : ;\nn\ng\nTHEN E\n0\n:= E\n0\n[ f g\nEND\nUNTIL E\n0\n= E\n00\n;\nIF hE; i 2 CN for all 2 E\n0\nand hE\n0\n; i 2 CN for all 2 E\nTHEN RETURN true ELSE RETURN false\nEND"}, {"heading": "5.1 Complexity in the General Case", "text": "The language that corresponds to the consequence relation j= of the classical propositional logic is denoted by CN and is de ned as the set of pairs h ; i 2 2 L L such that j= . Some of the complexity results use the procedure in Figure 3 that is directly based on the semiconstructive de nition of extensions given in Theorem 3.2.\nLemma 5.5 For the procedure in Figure 3, the call extension(D;W;E) returns true if and only if Cn(E) is an extension of the default theory hD;W i. Excluding the tests of membership in CN the procedure runs in polynomial time on the size of hD;W i.\nOur decision procedure for the lexicographic prioritized default logic is based on a reduction to the language ENC, which in turn is reducible to CN in nondeterministic polynomial time. There are three kinds of questions ENC can answer: is the logical closure of a set of formulae an extension of a default theory, is a strict total order a ;P-ordering for an extension, and is a formula a logical consequence of a set of formulae. The language ENC f0; 1; 2g 2 D 2 L 2 L (2 D D [ L) is de ned as the set of quintuples\nh0;D;W;E; T i where D is a set of defaults, W L is a set of formulae, and Cn(E) is an extension of hD;W i,\nPROCEDURE ENC(n;D;W;E; T );\nh1;D;W;E; T i where D is a set of defaults, W L is a set of formulae, E is a set of formulae, T is a strict total order on D, and T is not a hD;W i;T -ordering for Cn(E), and\nh2;D;W;E; i where hE; i 2 CN.\nLemma 5.6 ENC is Turing reducible to CN in nondeterministic polynomial time.\nProof: The language ENC is accepted by a nondeterministic Turing machine given as the procedure in Figure 4. The executions of the procedure have a polynomial length. 2\nTheorem 5.7 The complement of the problem of testing whether a formula belongs to all preferred L extensions of a default theory is Turing reducible to ENC in nondeterministic polynomial time.\nPROCEDURE co-cautious(D;W;P; );\nProof: The question is answered by a Turing machine described by the procedure in Figure 5. The Turing machine uses an oracle for the language ENC. First the machine guesses a candidate extension Cn(E [W ) of hD;W i and a strict total order T on D that extends the relation P. Then the machine veri es that Cn(E [ W ) is in fact an extension (the\nrst consultation of the oracle for ENC), that T is a hD;W i;P-ordering for Cn(E [W ) (the second consultation), and that 62 Cn(E [W ) (the third consultation.) If all these veri cations succeed, the Turing machine accepts. Because the guesses of E and T are nondeterministic, the machine accepts whenever there is an extension that contains and has a hD;W i;P-ordering.\nThe only parts of the procedure that do not run in constant time are the nondeterministic guessing of the set E, guessing of a strict total order T , and verifying that it extends P. Because the sizes of E and T are polynomial in hD;W i, the number of steps needed to guess them is polynomial in hD;W i. Veri cation of P T takes polynomial time. 2\nWe give an upper and a lower bound for the location of the decision problem in the polynomial hierarchy. Because ENC is Turing reducible to CN in nondeterministic polynomial time, the following lemma is immediate.\nLemma 5.8 The language ENC is in\np 2 .\nBy Theorem 5.7 we get an upper bound for the location of the decision problem in the polynomial hierarchy. The result is immediate by the de nition of the polynomial hierarchy.\nTheorem 5.9 The problem of whether a formula belongs to all preferred\nL\nextensions of a\ndefault theory is in\np 3 .\nNext we show that the decision problem is\np 3 -hard, thereby obtaining a lower bound on\nthe location in the polynomial hierarchy. This result is based on a theorem by Krentel (1992) that identi es p\nk\n-complete problems for k 1. The theorem concerns lexicographically\nmaximal valuations of quanti ed Boolean formulae, and for the pre x 98 it is as follows.\nTheorem 5.10 (Krentel, 1992) The problem of computing a given component of X\n1\nis\np 3 -complete, where X 1 is de ned as follows.\nMaximum 2-quantified formula Instance: Boolean formula C[X 1 ;X 2 ] where X i is an abbreviation for an n-tuple of Boolean variables that corresponds to a valuation of x i\n1\n; : : : ; x\ni n .\nOutput: Lexicographically maximal X\n1\n2 f0; 1g\nn\nthat satis es\n9X\n1\n8X\n2\n(C[X\n1\n;X\n2\n] = 1):\nThe following lemma points out a connection between quanti ed Boolean formulae with a universal quanti er as the outermost quanti er and the logical consequence relation in propositional logic.\nLemma 5.11 Let X be a set containing exactly one of x and :x for every x 2 fx\n1 1 ; : : : ; x 1 n g.\nLet X\n1\n= hx\n01 1 ; : : : ; x 01 n i where x 01\ni\n= 1 if x\n1 i 2 X and x 01 i = 0 otherwise. Then X 1 satis es\n8X\n2\n(C[X\n1\n;X\n2\n]) if and only if X j= C[X\n1\n;X\n2\n].\nProof: Assume that X\n1\nsatis es 8X\n2\n(C[X\n1\n;X\n2\n]). Hence for the choice of truth values for\nx\n1 1 ; : : : ; x 1 n indicated by X 1 and any choice of truth values for x 2 1 ; : : : ; x 2 n , C[X 1 ;X 2 ] is true. Now let M be any model such that M j= X. Hence M assigns the same truth values to x 1\n1\n; : : : ; x\n1 n as X 1 . Now M j= C[X 1 ;X 2 ], and by the de nition of logical consequence\nX j= C[X\n1\n;X\n2\n].\nAssume that X j= C[X\n1\n;X\n2\n]. Hence for all modelsM such that M j= X andM assigns\nany truth-values to x\n2 1 ; : : : ; x 2 n , M j= C[X 1 ;X 2 ]. By de nition of quanti ed Boolean formu-\nlae, for X\n1\nand any X\n2\nthe formula C[X\n1\n;X\n2\n] is true, that is, X\n1\nsatis es 8X\n2\n(C[X\n1\n;X\n2\n]).\n2\nThe proof of the next lemma uses the same translation of quanti ed Boolean formulae to\ndefault theories as Gottlob's proof of\np 2 -hardness of cautious reasoning in Reiter's default\nlogic (Gottlob, 1992).\nLemma 5.12 Computing a given component of X\n1\nin Maximum 2-quantified formula\nis polynomial time many-one reducible to the problem of testing whether a formula belongs to all T -preferred L extensions of a default theory for strict total orders T .\nProof: We construct a default theory = hD; ;i and de ne a strict partial order P on D so that the kth component ofX 1 is 1 if and only if j= L\nP\nx\n1 k . The value of a given component of\nX\n1\ninMaximum 2-quantified formula is de ned only if 9X\n1\n8X\n2\n(C[X\n1\n;X\n2\n]) is satis -\nable, so assume it is. Let a be a propositional variable that is not in fx\n1 1 ; : : : ; x 1 n ; x 2 1 ; : : : ; x 2 n g.\nDe ne\nD =\n(\n: x\n1 1\nx\n1 1\n;\n: :x\n1 1\n:x\n1 1\n; : : : ;\n: x\n1 n\nx\n1 n\n;\n: :x\n1 n\n:x\n1 n\n;\nC[X\n1\n;X\n2\n] : a\na\n)\n; and\nP =\n(\nC[X\n1\n;X\n2\n] : a\na\n)\nDn\n(\nC[X\n1\n;X\n2\n] : a\na\n)!\n[\n(*\n: x\n1 i\nx\n1 i\n;\n: x\n1 j\nx\n1 j\n+\n1 i < j n\n)\n[\n(\n: x\n1 1\nx\n1 1\n; : : : ;\n: x\n1 n\nx\n1 n\n) (\n: :x\n1 1\n:x\n1 1\n; : : : ;\n: :x\n1 n\n:x\n1 n\n)\n:\nLet T be any strict total order on D that extends P. The sizes of the default theory hD; ;i and the strict total order T are linearly proportional to the size of C[X 1 ;X 2 ], and they can be constructed in polynomial time.\nFirst we show that for each extension E of hD; ;i that contains a there is X\n1\nsuch that\nX\n1\nsatis es 8X\n2\n(C[X\n1\n;X\n2\n]) and for all i 2 f1; : : : ; ng, p\ni\n(X\n1\n) = 1 i x\n1 i 2 E (the function\np\ni\nselects the ith element of an n-tuple.) Let E be an extension of hD; ;i and a 2 E.\nBecause defaults in D are normal, E is consistent. Hence appl(C[X\n1\n;X\n2\n]:a=a;E) because\nthe only default where a occurs in the conclusion is C[X\n1\n;X\n2\n]:a=a. Hence C[X\n1\n;X\n2\n] 2 E;\nthat is, C[X\n1\n;X\n2\n] is a logical consequence of the conclusions of generating defaults of E.\nBecause a does not occur in C[X\n1\n;X\n2\n], X j= C[X\n1\n;X\n2\n] for X = E\\fx\n1 1 ;:x 1 1 ; : : : ; x 1 n ;:x 1 n g.\nBy Lemma 5.11 X\n1\n, de ned as p\ni\n(X\n1\n) = 1 if x\n1 i 2 X and p i (X 1 ) = 0 otherwise, satis es\n8X\n2\n(C[X\n1\n;X\n2\n]).\nThen we show that for each X\n1\nthat satis es 8X\n2\n(C[X\n1\n;X\n2\n]), there is an extension\nE of hD; ;i such that a 2 E and p\ni\n(X\n1\n) = 1 i x\n1 i 2 E. Assume that X 1 satis es\n8X\n2\n(C[X\n1\n;X\n2\n]). Let X = fx\n1 i jp i (X 1 ) = 1; 1 i ng [ f:x 1 i jp i (X 1 ) = 0; 1 i ng.\nIt is straightforward to verify that E is an extension of hD; ;i. Because the extension E is consistent, appl(C[X 1 ;X 2 ]:a=a;E). Because C[X 1 ;X 2 ]:a=a is the P-least default in D, all T -preferred L extensions apply C[X 1 ;X 2 ]:a=a.\nThe counterpart of the T -preferred\nL\nextension is the lexicographically maximal X\n1\n,\nand vice versa. This is by the construction of T , where the defaults :x\n1 1 =x 1 1 ; : : : ; :x 1 n =x 1 n\nare ordered as :x\n1 i =x 1 i T :x 1 j =x 1 j whenever i < j. Therefore p i (X 1 ) = 1 for the maximal X 1\nsatisfying 8X\n2\n(C[X\n1\n;X\n2\n]) i x\n1 i belongs to the T -preferred L extension of hD; ;i. 2\nNotice that Lemma 5.12 cannot be reconstructed in the prioritized default logics by Brewka and by Baader and Hollunder because the construction is based on a highest priority default that becomes applicable only after a number of lower priority defaults have been applied, and in these cases those logics do not work like the lexicographic prioritized default logic. While testing j= L\nT\nfor strict total orders T is higher in the polynomial hierarchy than\ncautious reasoning in unprioritized default logic, testing j=\nB T and j= BH T is one level lower.\nTheorem 5.13 For default theories = hD;W i, strict total orders T on D, and formulae\n, the problem of testing j=\nL T is\np 3 -hard.\nProof: All problems in\np 3 are polynomial time many-one reducible to Maximum 2-\nquantified formula, which by Lemma 5.12 is polynomial time many-one reducible to our problem. 2\nTesting j=\nL T for strict total orders T is in\np 3 . The proof of this fact is based on computing\nthe unique preferred extensions step by step, at each step determining whether there is an extension in which one of the defaults is applied in addition to those defaults which we have already committed to.\nLemma 5.14 For the procedure in Figure 6, the call exists(D;W;A) returns true if and only if there is an extension E of hD;W i such that appl( ; E) for all 2 A. The procedure runs in nondeterministic polynomial time given an NP oracle for CN.\nProof: First the procedure guesses a set of conclusions G that possibly are the conclusions of the generating defaults of the possible extension Cn(G[W ). The call to extension(D;W;E)\nPROCEDURE exists(D,W ,A);\nwith E = G [W tests if this is indeed the case (Lemma 5.5.) Next the procedure tests whether defaults in A are applied in Cn(G [W ), and returns true if and only if this is the case. Because the procedure represents a nondeterministic Turing machine, the procedure returns true if and only if it is possible to guess G so that Cn(G [ W ) is an extension where members of A is applied. Hence exists(D;W;A) returns true if and only if there is an extension E of hD;W i such that appl( ; E) for all 2 A.\nThe procedure runs in non-deterministic polynomial time and uses an NP oracle for\npropositional satis ability. Hence the problem solved by it is in\np 2 . 2\nTheorem 5.15 For default theories = hD;W i, formulae , and strict total orders T on D, the problem of testing j= L\nT\nis in\np 3 .\nProof: We give a decision procedure for the problem that runs in deterministic polynomial time and uses an oracle for a problem that belongs to p\n2\n. This demonstrates that the\nproblem is in\np 3 . The procedure decide is given in Figure 7 and the p 2 oracle procedure\nexists is given in Figure 6 and its correctness is stated in Lemma 5.14. The correctness of the procedure decide is as follows. Let hD;W i be a nite default theory with jDj = n, T a strict total order on D, and a formula. Assume that hD;W i has no extensions. In this case the rst statement in the procedure decide returns true which is correct because trivially belongs to all extensions of hD;W i. Assume that hD;W i has at least one extension. The\ncorrectness proof in this case proceeds by induction on i 2 f1; : : : ; ng. The value of the program variable A after the ith iteration is denoted by A\ni\n. Let\n1\n; : : : ;\nn\nbe the ordering\nT . Because T is a strict total order on D, by Lemma 5.4 there is exactly one T -preferred\nL\nextension E of hD;W i.\nInduction hypothesis: for all j 2 f1; : : : ; ig, appl(\nj\n; E) if and only if\nj\n2 A\ni\n.\nBase case i = 0: Now A\n0\n= ; and f1; : : : ; ig = ;. Hence the hypothesis is true.\nInductive case i 1: We analyze the value b returned by exists(D;W;A\ni 1\n[ f\ni\ng) by\ncases. Assume that b = true. Hence A\ni\n= A\ni 1\n[ f\ni\ng. By the correctness of the procedure\nexists, there is an extension E\n0\nsuch that appl( ; E\n0\n) for all 2 A\ni 1\n[ f\ni\ng. Assume that\nE is not such an extension. Hence appl(\ni\n; E\n0\n; E). By induction hypothesis appl(\nj\n; E)\ni\nj\n2 A\ni 1\nfor all j 2 f1; : : : ; i 1g. Now because appl( ; E) implies appl( ; E\n0\n) for all\nT\ni\nthere are no\n00\nT\ni\nsuch that appl(\n00\n; E;E\n0\n). Hence E could not be T -preferred\nL\n,\nand the assumption that not appl(\ni\n; E) was wrong. Assume that b = false. As there is no\nextension E\n0\nsuch that appl( ; E\n0\n) for all 2 A\ni 1\n[ f\ni\ng, and appl( ; E) for all 2 A\ni 1\n,\nnot appl(\ni\n; E). Now A\ni\n= A\ni 1\n, and the induction hypothesis is ful lled. This nishes the\ninduction proof.\nNow A\nn\nis the set of generating defaults of the unique T -preferred\nL\nextension E of\nhD;W i. The execution of the program continues at the last statement of the procedure. By Theorem 3.4 E = Cn(W [ f j : = 2 A\nn\ng). Hence 2 E if and only if W [ f j : = 2\nA\nn\ng j= . 2\nCorollary 5.16 For default theories = hD;W i, strict total orders P on D, and formulae\n, the problem of testing j=\nL P is\np 3 -complete.\nProof: Directly by Theorems 5.13 and 5.15. 2\nFor the problem of membership of formulae all preferred extensions of a default theory\nwithout the restriction to total priorities, the membership in\np 3 as well as its p 3 -hardness\nremain open."}, {"heading": "5.2 Complexity in Syntactically Restricted Cases", "text": "As in Section 4.2, we analyze the complexity of the consequence relation of the lexicographic prioritized default logic under syntactic restrictions."}, {"heading": "5.2.1 Summary", "text": "The results on the boundary between tractability and intractability for j=\nL P with strict total\norders P are summarized in Table 4. In cases where the complexity of the lexicographic prioritized default logic di ers from Reiter's default logic, the complexity is set in boldface. Table 5 indicates where the proofs of the complexity results can be found. The impact of priorities on the complexity of the decision problems is strongest in the prerequisite-free normal classes. When the default rules in these classes are totally ordered, the unique preferred extensions can be easily found by applying the default rules in the given order. A more complicated polynomial time decision procedure exists for Horn defaults with 1-literal objective facts (Theorem 5.22). For this class, the existence of an extension that applies a given set of defaults can be determined in polynomial time, and this together with the\nstepwise construction of preferred extensions given as the procedure in Figure 7 yields a fast decision procedure."}, {"heading": "5.2.2 Intractable Classes with Total Priorities", "text": "The next theorems are based on reductions from intractable problems of brave reasoning in Reiter's default logic to prioritized default logic with total priorities.\nTheorem 5.17 Let F be a class of formulae and C a class of nite default theories such that\nif hD;W i 2 C, then hD [ f :p=pg;W i 2 C where 2 F and p is a propositional variable that does not occur in D or W , and\neach member of C has at least one extension.\nThe problem of testing j=\nb\nfor 2 C and 2 F is polynomial time many-one reducible\nto the problem of testing\n0\nj=\nL P p where 0 2 C, p is a propositional variable, and P is a\nstrict total order on defaults in\n0\n.\nProof: Let hD;W i 2 C be a default theory, 2 F a formula, and k a propositional variable that does not occur in hD;W i or . Let P be any strict partial order on D [ f :k=kg such that :k=k is the P-least element. We claim that hD;W i j=\nb\nif and only if hD [\nf :k=kg;W i j=\nL P k. This is directly because the highest priority default is applied in all\npreferred\nL\nextensions if it is possible to apply it, and k belongs to those extensions if and\nonly if belongs to them. 2\nAs a corollary, together with a theorem that shows the intractability of brave reasoning of the class in Reiter's default logic (Kautz & Selman, 1991), we obtain the following result.\nCorollary 5.18 Testing hD;W i j=\nL P l for strict total orders P, literals l, and disjunction-\nfree normal default theories hD;W i where W is a set of literals, is NP-hard.\nTheorem 5.19 Let C be a class of nite default theories such that the conclusion of each default is a literal and each member of C has at least one extension. The problem of testing\nj=\nb\nl for 2 C and literals l is polynomial time many-one reducible to the problem of\ntesting j=\nL T l where T is a strict total order on defaults in .\nProof: Let = hD;W i be a default theory in C. We reduce testing j=\nb\nl to j=\nL T l as\nfollows. Let D\n0\nbe the set of defaults with l as the conclusion. Let T be a strict total order\non D such that D\n0\n(DnD\n0\n) T . We claim that j=\nb\nl if and only if j=\nL T l.\nAssume that 6j=\nb\nl. Because by assumption there is at least one extension of , by\nLemma 5.4 there is exactly one T -preferred\nL\nextension E of . Clearly l 62 E. Therefore\n6j=\nL T l.\nAssume that j=\nb\nl. Then there is an extension E of such that l 2 E. If W j= l,\nthen clearly j=\nL T l. Assume that W 6j= l. Now appl( ; E) for some 2 D 0 . Assume that\nE\n0\nis an extension of such that l 62 E. Now appl( ; E;E\n0\n). As\n0\n2 D\n0\nfor all\n0\nT and\nnot appl(\n0\n; E\n0\n) for all\n0\n2 D\n0\n, there is no\n0\nT such that appl(\n0\n; E\n0\n; E). Hence E\n0\nis not\nT -preferred\nL\n. Therefore l belongs to all T -preferred\nL\nextensions of and j=\nL T l. 2\nThe following corollary is obtained with the intractability results of brave reasoning by\nKautz and Selman (1991) and Stillman (1990) for the classes mentioned.\nCorollary 5.20 Testing hD;W i j=\nL P l for strict total orders P and literals l in any of the\nclasses of default theories below is NP-hard.\nD W normal unary Horn clauses normal unary 2-literal clauses ordered unary literals prerequisite-free ordered unary literals"}, {"heading": "5.2.3 Tractable Classes", "text": "Next we give a restricted tractable class of prioritized default theories for which the unique P-preferred L extensions can be computed by using P as the order in which the application of defaults is attempted. Exhaustive search is avoided because there is no need to retract a decision to apply a default. The theorem is given in a general form for any tractable subset of classical propositional logic, like Horn clauses, 2-literal clauses, or 1-literal clauses. The theorem and the algorithm are part of the folklore of nonmonotonic reasoning.\nTheorem 5.21 Let F be a class of formulae such that satis ability testing for S F takes polynomial time in the size of S. Let C be a class of default theories hD;W i such that D = f: = j 2 Fg for some nite set F F and W F is nite. Then for 2 C, 2 F , and strict total orders P on the defaults in , the problem of testing j= L\nP\n: is solvable\nin polynomial time on the size of D [W [ f: g.\nProof: By Lemma 5.4 there is at most one P-preferred\nL\nextension for each member of C,\nand because the defaults in members of C are normal, there is at least one extension for each member of C by Theorem 3.1 in (Reiter, 1980). Therefore there is exactly one P-preferred L extension for each member of C. A decision procedure for the class of default theories stated in the theorem is given in Figure 8. The procedure computes a set E that consists ofW and the conclusions of the generating defaults of the extension Cn(E) of hD;W i, and returns true if and only if E j= .\nLet :\n1\n=\n1\n; : : : ; :\nn\n=\nn\nbe the ordering P of defaults in D. If W is inconsistent the\nprocedure returns true. In this case Cn(W ) = L is the only extension of hD;W i which agrees with the statement of the lemma. Otherwise extensions of hD;W i are consistent. De ne D\ni\n= f:\n1\n=\n1\n; : : : ; :\ni\n=\ni\ng and\ni\n= f\n1\n; : : : ;\ni\ng for all i 2 f0; : : : ; ng. The correctness\nproof is by induction on i and we obtain the P-preferredness\nL\nof Cn(E) as the case i = n.\nInduction hypothesis: for all j 2 f0; : : : ; ig, ifW is consistent, E\nj\nis a maximal consistent\nsubset of\nj\n[W such that W E\nj\n, and Cn(E\ni\n) is a P \\ (D\ni\nD\ni\n)-preferred\nL\nextension\nof hD\ni\n;W i.\nThe induction proof is straightforward. That the procedure runs in polynomial time on the size of hD;W i is also obvious. Thus any polynomial time subset C of classical propositional logic produces a tractable class of default theories. 2\nWithout priorities reasoning with prerequisite-free normal default rules and Horn clauses is NP-complete (Stillman, 1990). For normal defaults, tractability can be obtained also for defaults with prerequisites if suitable restrictions are imposed on the prerequisites, conclusions, and the objective parts of the default theories. Next we present such a class that is neither subsumed by nor subsumes the tractable prerequisite-free classes. The idea behind\nPROCEDURE decide(D;W;P; )\nthe result is the same as the one used in the proof of Theorem 5.15. Corollary 5.18 indicates that the result cannot be generalized (assuming P6=NP) to any of the classes higher in the Kautz and Selman hierarchy.\nTheorem 5.22 Let C be the class of Horn default theories hD;W i where W is a nite set of literals and defaults in D are of the form p\n1\n^ ^p\nn\n:l=l where l is a literal and p\n1\n; : : : ; p\nn\nare propositional variables. For 2 C, negated Horn clauses , and strict total orders P on the defaults in , the problem of testing j= L\nP\n: is solvable in polynomial time on the\nsize of D [W [ f: g.\nProof: The body of the decision procedure is given in Figure 7 and its correctness proof is included in the proof of Theorem 5.15. Here we use the subprocedure exists in Figure 9. The procedure exists runs in polynomial time on the size of D [W [ A because the number of iterations in the repeat-until loop is at most jD 0 j jDj and logical consequence tests with propositional Horn clauses can be performed in polynomial time. Next we prove that the procedure exists called with arguments (D;W;A) returns true if and only if there is an extension E of = hD;W i such that A GD(E; ). The correctness proof and the algorithm are based on the idea that to derive the prerequisites of defaults in A, defaults in DnA with a negative conclusion are not needed.\nFirst we show that exists returns true if and only if there is an extension E\n0\nof\n0\n=\nhD\n0\n;W i such that A GD(E\n0\n;\n0\n), where D\n0\n= A [ f :p=p 2 Dj:p 62 W;\n0\n::p=:p 62\nA; p is atomicg. If W [ f j : = 2 Ag is inconsistent and A 6= ;, then there are no extensions that apply A, and hence it is correct to return false. So assume W [f j : = 2 Ag is consistent. Now the set U = W [ f j : = 2 D 0 g is consistent by de nition of D 0 . Any extension E 0 of 0 satis es E 0 Cn(U), and because all defaults in D 0 are normal, no negation of a justi cation of a default in D 0 is in Cn(U). Therefore exactly those defaults are applied in extensions of 0 for which the prerequisite is derivable. It is straightforward to show that the procedure computes the union E of W and the set of conclusions of the unique such set of defaults, and hence Cn(E) is the unique extension of 0 . Finally, the procedure returns false if and only if 62 E for some : = 2 A. This is equivalent to the fact that 62 GD(E; 0 ) for some 2 A, and hence A 6 GD(E; 0 ).\nPROCEDURE exists(D;W;A)\nThen we show that there is an extension E\n0\nof\n0\nsuch that A GD(E\n0\n;\n0\n) if and only\nif there is an extension E of such that A GD(E; ). The \\only if\" direction directly follows from Theorem 3.2 in (Reiter, 1980) because D 0 D and D is normal. Assume that there is an extension E of such that A GD(E; ). It is straightforward to show that E is an extension of hGD(E; );W i. Next we remove defaults with negative conclusions that are in D but not in A: an induction proof with Theorem 3.2 and the induction hypothesis E 00\ni\n= Cn(E\ni\n\\ (f j : = 2 Ag[fpj :p=p 2 GD(E; ); p is atomicg[W )) shows\nthat E\n00\n= Cn(f j : = 2 Ag [ fp 2 Ej :p=p 2 D; p is atomicg [W ) is an extension of\nhGD(E; ) \\ D\n0\n;W i and A GD(E\n00\n; hGD(E; ) \\ D\n0\n;W i). By Theorem 3.2 in (Reiter,\n1980), there is an extension E\n0\nof\n0\nsuch that A GD(E\n0\n;\n0\n).\nTherefore the procedure returns true if and only if there is an extension E of hD;W i such that A GD(E; ). 2\nThe tractability result is related to the tractability of brave reasoning of the same class\nas shown by Lemma 6.4 in (Kautz & Selman, 1991)."}, {"heading": "5.2.4 Results for Arbitrary Priorities", "text": "The previous section restricts to the special case where priorities are a strict total ordering on the defaults. However, for instance in representing inheritance networks, two defaults sometimes need to have an equal (or incomparable) priority. Hence the possibility of tractable inference with less restricted priorities is of interest. The complexity results for unrestricted priorities are summarized in Table 6. Like in earlier sections, references to theorems are given in Table 7. The results in the previous sections as well as results on the complexity of cautious reasoning (Kautz & Selman, 1991) directly imply the intractability of many classes of reasoning with arbitrary priorities, because the former two are a special case of the latter. Classes of default theories for which the tractability question remains open are the prerequisite-free normal classes and the normal unary class with literals. For prerequisite-free normal unary theories with 1-literal clauses reasoning is tractable, but the remaining classes are su ciently expressive to encode propositional satis ability. It\nturns out that the tractability of lexicographic prioritized default logic coincides with the tractability of Reiter's default logic for all but one class. There may still be di erences in the complexity of the intractable classes, for example Reiter's default logic could be in co-NP and lexicographic prioritized default logic could be p\n2\n-hard. We have not analyzed\nthe intractable classes in more detail.\nTheorem 5.23 Let C be the class of default theories = hD;W i where W is a set of literals and D consists of defaults of the form :l=l where l is a literal. Let P be a strict partial order on D and let l be a literal. Testing j= L\nP\nl can be done in polynomial time on\nthe size of and P and l.\nProof: The algorithm in Figure 1 tests hD;W i j=\nL P l. The correctness of the algorithm is as\nfollows. We analyze the if-statements in sequence. In each case we may use the negations of the assumptions of the previous cases. For the rst four statements the proof is like the proof of Theorem 4.11 as no priorities are involved. 5. Assume that :l=lP:l=l. Now :l=lT :l=l for all strict total orders T such that P T . We obtain the unique extension with the\n;P-ordering T by the algorithm given in Figure 8 and proven correct in Theorem 5.21.\nObviously, l is in that extension, and consequently in all P-preferred\nL\nextensions. Hence\nit is correct to return true. 6. In the remaining case not :l=lP:l=l. Hence there is a strict total ordering on D such that P T and :l=lT :l=l. An argument similar to the one in the previous case shows that there is a P-preferred L extension with the ;P-ordering T that contains l and therefore does not contain l. Hence it is correct to return false.\nTherefore the algorithm returns true if and only if l is in all P-preferred\nL\nextensions of\n. Clearly, the algorithm runs in polynomial time. 2\nWithout priorities, cautious and brave reasoning for normal unary theories and 1-literal clauses is tractable (Kautz & Selman, 1991). We show that priorities increase the expressivity su ciently to make this class intractable.\nTheorem 5.24 The problem of testing whether a literal l belongs to all P-preferred\nL\nex-\ntensions of , where is a normal unary default theory and P is a strict partial order on defaults in , is co-NP-hard.\nProof: The proof is by reduction from propositional satis ability to the complement of the problem. Let C = fc\n1\n; : : : ; c\nm\ng be a set of propositional clauses and P the set of\npropositional variables occurring in C. Let N be an injective function that maps each clause c 2 C to a propositional variable n = N(c) such that n 62 P . De ne the default theory = hD; ;i and priorities on D as in the proof of Theorem 4.15. We claim that the set of clauses C is satis able if and only if 6j= L\nP\nfalse; that is, there is a P-preferred\nL\nextension of that does not contain false. In the proof we refer to the consistency of extensions of hD;W i which is by the consistency of W and the fact that defaults in D have justi cations (Corollary 2.2 by Reiter (1980)).\n()) Assume that there is a model M such that M j= C. We show that there is a\nP-preferred\nL\nextension E of such that false 62 E. Let E = Cn(fp 2 P jM j= pg [ fp\n0\njp 2\nP;M 6j= pg [ f:pjp 2 P;M 6j= pg [ f:p\n0\njp 2 P;M j= pg [ fnjc 2 C;n = N(c)g [ f:n\n0\njc 2\nC;n = N(c)g). It is straightforward to verify that E is an extension of hD; ;i. Let T be any strict total order on D such that P T and for all f ; 0 g D\n1\nand all f ;\n0\ng D\n3\n,\nT\n0\nif appl( ; E) and not appl(\n0\n; E). We show that T is a hD; ;i;P-ordering for E. Let\nE\n0\nbe any extension of hD; ;i such that there is 2 D such that appl( ; E\n0\n; E). We show\nthat there is\n0\n2 D such that appl(\n0\n; E;E\n0\n).\nAssume that 2 D\n1\n. Now = :l=l for some literal l and l 2 E\n0\nand l 2 E. Because E\n0\nis consistent, l 62 E\n0\n. Hence appl(:l=l; E;E\n0\n). By de nition :l=lT :l=l.\nAssume that 2 D\n2\nand = :p\n0\n=p\n0\nfor some p 2 P . Now by de nition p 2 E and\nappl(p::p\n0\n=:p\n0\n; E). Because E\n0\nis consistent, :p\n0\n62 E\n0\nand hence appl(p::p\n0\n=:p\n0\n; E;E\n0\n).\nBy de nition p::p\n0\n=:p\n0\nP:p\n0\n=p\n0\n.\nAssume that 2 D\n2\nand = p::p\n0\n=:p\n0\nfor some p 2 P . Because p 2 E\n0\n, appl(:p=p;E\n0\n).\nBecause not appl(p::p\n0\n=:p\n0\n; E) by de nition p 62 E, and hence not appl(:p=p;E). Hence\n:p 2 E and appl(::p=:p;E). Because E is consistent, :p 62 E and appl(::p=:p;E;E\n0\n).\nBy de nition ::p=:pPp::p\n0\n=:p\n0\n.\nAssume that = p:n=n. Clearly p 62 E, appl(::p=:p;E;E\n0\n) and ::p=:pT p:n=n. Proof\nfor = p\n0\n:n=n is similar.\nAssume that = :n\n0\n=n\n0\n. Hence appl(n::n\n0\n=:n\n0\n; E;E\n0\n). By de nition n::n\n0\n=:n\n0\nT :n\n0\n=n\n0\n.\nProof for = n::n\n0\n=:n\n0\nis similar.\nAssume that = n\n0\n:false=false. Hence appl(:n\n0\n=n\n0\n; E\n0\n; E) and appl(::n\n0\n=:n\n0\n; E;E\n0\n). By\nde nition ::n\n0\n=:n\n0\nT n:false=false.\nThis exhausts all 2 D. Therefore T is a hD; ;i;P-ordering for E and E is a P-\npreferred\nL\nextension of hD; ;i.\n(() Assume that E is a P-preferred\nL\nextension of such that false 62 E. We show\nthat there is a model M such that M j= C. De ne the model as M j= p i p 2 E, for all p 2 P . Let c = fl\n1\n; : : : ; l\nn\ng be any clause in C. We show that M j= c. Let n = N(c).\nBecause false 62 E, not appl(n\n0\n:false=false; E). Because :false is not in any conclusion of\na default in D, n\n0\n62 E. Because not appl(:n\n0\n=n\n0\n; E), :n\n0\n2 E. Hence appl(n::n\n0\n=:n\n0\n; E).\nHence n 2 E. Because E is consistent, appl(q:n=n;E) for some q 2 fp; p\n0\ng where p 2 c or\n:p 2 c. If q = p, then p\n0\n62 E because of the following. Assume that p\n0\n2 E. Let E\n12\n=\nCn(E \\ (P [ f:pjp 2 Pg [ fp\n0\njp 2 Pg [ f:p\n0\njp 2 Pg)nfp\n0\ng [ f:p\n0\ng). It is easy to show that\nE\n12\nis an extension of hD\n1\n[D\n2\n; ;i. By Theorem 3.2 in (Reiter, 1980) there is an extension\nE\n0\nof hD; ;i such that GD(E\n12\n; hD\n1\n[D\n2\n; ;i) GD(E\n0\n; hD; ;i). Now appl(p::p\n0\n=:p\n0\n; E\n0\n; E)\nand there is no 2 D such that appl( ; E;E\n0\n) and T p::p\n0\n=:p\n0\nfor some strict total order\nT such that P T . This contradicts the P-preferredness\nL\nof E, and hence it must be the\ncase that p\n0\n62 E. Hence by de nition M j= p. If q = p\n0\n, then clearly p\n0\n2 E. Hence by\nde nition M j= :p. Therefore M j= c. Because this holds for any clause c 2 C, M j= C. 2"}, {"heading": "6. Related Work on Prioritized Default Reasoning", "text": "Marek and Truszczy nski (1993) introduce a prioritized default logic that is similar to Brewka's (1994) logic. The existence of preferred extensions is not guaranteed in general, but for normal defaults it is. We believe that for normal default theories, the complexity of the Marek and Truszczy nski logic coincides with the complexity of Brewka's logic. Delgrande and Schaub (1997) present a translation from prioritized default theories to unprioritized default theories, so that the extensions of the resulting theories obey the priorities. Their translation can be performed in polynomial time. Buccafurri et al. (1998) present a knowledge representation language that extends logic programs with priorities, classical negation, and disjunction. They claim that brave reasoning for their language is in general\np 2 -complete and without disjunction and classical negation it is polynomial time.\nBrewka and Eiter (1998) present the notion of preferred answer sets for extended logic programs. Their de nition diverges from earlier work in that even with a total ordering on the rules there may be more than one preferred answer set, and preferred answer sets\ndo not always exists for a given program even if answer sets do. Brewka and Eiter show that testing the membership of a literal in all preferred answer sets of a program is coNP-hard when the rules are totally ordered. Their motivation for introducing preferred answer sets is that earlier accounts of priorities in logic programs and in default logic do not ful ll two principles identi ed by them. Principle I is violated by the prioritized default logics that are based on the semiconstructive de nition of extensions (Baader & Hollunder, 1995; Brewka, 1994; Marek & Truszczy nski, 1993), but not by the lexicographic prioritized default logic discussed in Section 5. Principle II can be paraphrased as follows. Let E be a P-preferred extension of hD;W i and : = a default such that 62 E. Then E is a P 0 -preferred extension of hD [ f : = g;W i for all P 0 such that P 0 \\ (D D) = P. Brewka and Eiter show that the prioritized default logic investigated in Section 5 violates this principle. However, Principle II is not violated by a closely related prioritized default logic that replaces application with non-defeat (Rintanen, 1999). A default : = is defeated in E if E j= ^ : . Therefore it is not in general the case that lexicographic de nitions of preferredness would violate Principle II. However, we believe that Brewka and Eiter would nevertheless nd this de nition of preferred extensions counterintuitive.\nExample 6.1 Let D = fa:b=b; :a=a; ::a=:ag and W = f:bg. Let T be a strict total order on D such that a:b=bT :a=a and :a=aT ::a=:a. The default theory hD;W i has two extensions, E\n1\n= Cn(fa;:bg) and E\n2\n= Cn(f:a;:bg). The extension E\n1\ndefeats a:b=b and\n::a=:a, and E\n2\ndefeats :a=a. Because E\n1\ndefeats the highest priority default a:b=b and E\n2\ndoes not, only E\n2\nis a T -preferred extension of hD;W i. 2\nWe believe that in this example, Brewka and Eiter would want E\n1\nto be the only T -\npreferred extension because the only con ict is between :a=a and ::a=:a, and the priority of :a=a is higher. It seems that the question at hand is the meaning of priorities in cases where defaults that are less directly derivable have a higher or equal priority. Lexicographic comparison gives one meaning, a very natural one in our opinion, but Brewka and Eiter seem to want to ignore the higher priority. Instead of addressing Brewka and Eiter's concern by devising new de nitions of preferred extensions, it could be addressed by not using priorities that produce unintended results. If a restriction to defaults with literal prerequisites and conclusions is made, this could be done simply by requiring that l:m=nPl 0 :m 0 =n 0 whenever n = l 0 . Priorities used in translating inheritance networks to prioritized default logic ful ll this requirement (Rintanen, 1999)."}, {"heading": "7. Conclusions", "text": "We have presented a thorough analysis of the complexity of three versions of prioritized default logic, giving results that place these logics in the polynomial hierarchy, and analyzing the question of intractability versus tractability for syntactically restricted classes of default theories.\nThe main results place the propositional variants of three general formalizations of prioritized default reasoning, the logics by Brewka (1994) and Baader and Hollunder (1995) that are based on the semiconstructive de nition of extensions, and a formalization that is based on lexicographic comparison, on the lower levels of the polynomial hierarchy. As the\nrst two formalizations closely resemble each other, it is not surprising that polynomial time\ntranslations between the decision problems of these two formalizations exist. There are also polynomial time translations to and from Reiter's default logic. The third formalization, that uses lexicographic comparison to select the preferred extensions, is not reducible to Reiter's default logic in polynomial time (under the standard complexity-theoretic assumptions.)\nAn analysis of the complexity of the decision problems in syntactically restricted cases, following earlier work by Kautz and Selman (1991) and Stillman (1990), identi es the e ect of priorities on the boundary between tractability and intractability in the prioritized versions of the decision problems. With priorities that totally order the defaults and classical propositional reasoning that is tractable, for example with Horn clauses or 2-literal clauses, reasoning in Brewka's and in Baader and Hollunder's logics is polynomial time. For the formalization of prioritized default reasoning that uses lexicographic comparison, the same assumptions yield tractable reasoning only for the so-called Horn defaults and background theories without disjunction, as well as normal defaults without prerequisites and disjunction. When arbitrary priorities are allowed, in all three logics reasoning is tractable only when defaults are of the form :l=l for literals l and the background theories are sets of literals."}, {"heading": "Acknowledgements", "text": "This research was mainly carried out at the Helsinki University of Technology and nished at the University of Ulm while funded by the SFB 527 of the Deutsche Forschungsgemeinschaft. We gratefully acknowledge the generous support of the Finnish Cultural Foundation and the Finnish Academy of Science and Letters that helped completing this work.\nWe thank the four anonymous reviewers for pointing out some errors and for advice on restructuring the article and on including references to related work in Section 6. Holger Pfeifer provided valuable assistance in proof-reading."}], "references": [{"title": "Structural Complexity I", "author": ["J.L. azar", "I. D az"], "venue": "Gabarr o, J", "citeRegEx": "azar and az,? \\Q1995\\E", "shortCiteRegEx": "azar and az", "year": 1995}, {"title": "Default reasoning using classical logic", "author": ["R. Ben-Eliyahu", "R. Dechter"], "venue": "Arti cial Intelligence,", "citeRegEx": "Ben.Eliyahu and Dechter,? \\Q1996\\E", "shortCiteRegEx": "Ben.Eliyahu and Dechter", "year": 1996}, {"title": "Preferred subtheories: an extended logical framework for default reasoning", "author": ["G. Brewka"], "venue": "Proceedings of the 11th International Joint Conference on Arti cial Intelligence, pp. 1043{1048 Detroit. Morgan Kaufmann Publishers.", "citeRegEx": "Brewka,? 1989", "shortCiteRegEx": "Brewka", "year": 1989}, {"title": "Adding priorities and speci city to default logic", "author": ["G. Brewka"], "venue": "MacNish, C., Pearce, D., & Moniz Pereira, L. (Eds.), Logic in Arti cial Intelligence: Proceedings of the 4th 459", "citeRegEx": "Brewka,? 1994", "shortCiteRegEx": "Brewka", "year": 1994}, {"title": "Preferred answer sets for extended logic programs", "author": ["G. Brewka", "T. Eiter"], "venue": "Principles of Knowledge Representation and Reasoning: Proceedings of the Sixth International Conference (KR", "citeRegEx": "Brewka and Eiter,? \\Q1998\\E", "shortCiteRegEx": "Brewka and Eiter", "year": 1998}, {"title": "Disjunctive ordered logic: semantics and expressiveness", "author": ["F. Buccafurri", "N. Leone", "P. Rullo"], "venue": "Principles of Knowledge Representation and Reasoning: Proceedings of the Sixth International Conference (KR", "citeRegEx": "Buccafurri et al\\.,? \\Q1998\\E", "shortCiteRegEx": "Buccafurri et al\\.", "year": 1998}, {"title": "Compiling reasoning with and about preferences into default logic", "author": ["J.P. Delgrande", "T.H. Schaub"], "venue": "In Proceedings of the 15th International Joint Conference on Arti cial Intelligence,", "citeRegEx": "Delgrande and Schaub,? \\Q1997\\E", "shortCiteRegEx": "Delgrande and Schaub", "year": 1997}, {"title": "Linear-time algorithms for testing the satis ability of propositional Horn formulae", "author": ["W.F. Dowling", "J.H. Gallier"], "venue": "Journal of Logic Programming,", "citeRegEx": "Dowling and Gallier,? \\Q1984\\E", "shortCiteRegEx": "Dowling and Gallier", "year": 1984}, {"title": "Formalizing nonmonotonic reasoning systems", "author": ["D.W. Etherington"], "venue": "Arti cial Intelligence, 31 (1), 41{85. Errata in volume 34(3), page 395.", "citeRegEx": "Etherington,? 1987", "shortCiteRegEx": "Etherington", "year": 1987}, {"title": "On the complexity of timetable and multicommodity ow problems", "author": ["S. Even", "A. Itai", "A. Shamir"], "venue": "SIAM Journal of Computing,", "citeRegEx": "Even et al\\.,? \\Q1976\\E", "shortCiteRegEx": "Even et al\\.", "year": 1976}, {"title": "Conditional entailment: bridging two approaches to default reasoning", "author": ["H. Ge ner", "J. Pearl"], "venue": "Arti cial Intelligence,", "citeRegEx": "ner and Pearl,? \\Q1992\\E", "shortCiteRegEx": "ner and Pearl", "year": 1992}, {"title": "Complexity results for nonmonotonic logics", "author": ["G. Gottlob"], "venue": "Journal of Logic and Computation, 2 (3), 397{425.", "citeRegEx": "Gottlob,? 1992", "shortCiteRegEx": "Gottlob", "year": 1992}, {"title": "Some direct theories of nonmonotonic inheritance", "author": ["J.F. Horty"], "venue": "Gabbay, D. M., Hogger, C. J., & Robinson, J. A. (Eds.), Handbook of Logic in Arti cial Intelligence and Logic Programming: Nonmonotonic Reasoning and Uncertain Reasoning, Vol. 3, pp. 111{187. Clarendon Press, Oxford.", "citeRegEx": "Horty,? 1994", "shortCiteRegEx": "Horty", "year": 1994}, {"title": "Hard problems for simple default theories", "author": ["H. Kautz", "B. Selman"], "venue": "Arti cial Intelligence,", "citeRegEx": "Kautz and Selman,? \\Q1991\\E", "shortCiteRegEx": "Kautz and Selman", "year": 1991}, {"title": "Generalizations of Opt P to the polynomial hierarchy", "author": ["M.W. Krentel"], "venue": "Theoretical Computer Science, 97 (2), 183{198.", "citeRegEx": "Krentel,? 1992", "shortCiteRegEx": "Krentel", "year": 1992}, {"title": "Computing circumscription", "author": ["V. Lifschitz"], "venue": "Joshi, A. (Ed.), Proceedings of the 9th International Joint Conference on Arti cial Intelligence, pp. 121{127 Los Angeles. Morgan Kaufmann Publishers.", "citeRegEx": "Lifschitz,? 1985", "shortCiteRegEx": "Lifschitz", "year": 1985}, {"title": "Nonmonotonic Logic: Context-Dependent Reasoning", "author": ["M. nski"], "venue": null, "citeRegEx": "nski,? \\Q1993\\E", "shortCiteRegEx": "nski", "year": 1993}, {"title": "Circumscription { a form of non-monotonic reasoning", "author": ["J. Complexity of Prioritized Default Logics McCarthy"], "venue": "Arti cial", "citeRegEx": "McCarthy,? 1980", "shortCiteRegEx": "McCarthy", "year": 1980}, {"title": "E cient implementation of the well-founded and stable model semantics", "author": ["I. a", "P. Simons"], "venue": "Proceedings of the 1996 Joint International Conference and Symposium on Logic Programming,", "citeRegEx": "a and Simons,? \\Q1996\\E", "shortCiteRegEx": "a and Simons", "year": 1996}, {"title": "A logic for default reasoning", "author": ["R. Reiter"], "venue": "Arti cial Intelligence, 13 (1-2), 81{132.", "citeRegEx": "Reiter,? 1980", "shortCiteRegEx": "Reiter", "year": 1980}, {"title": "Prioritized autoepistemic logic", "author": ["J. Rintanen"], "venue": "MacNish, C., Pearce, D., & Moniz Pereira, L. (Eds.), Logic in Arti cial Intelligence: Proceedings of the 4th European Workshop JELIA'94, No. 838 in Lecture Notes in Arti cial Intelligence, pp. 232{246 York, England. Springer-Verlag.", "citeRegEx": "Rintanen,? 1994", "shortCiteRegEx": "Rintanen", "year": 1994}, {"title": "Lexicographic priorities in default logic", "author": ["J. Rintanen"], "venue": "Arti cial Intelligence, 106 (2), 221{265.", "citeRegEx": "Rintanen,? 1999", "shortCiteRegEx": "Rintanen", "year": 1999}, {"title": "Representing defaults as sentences with reduced priority", "author": ["M. Ryan"], "venue": "Nebel, B., Rich, C., & Swartout, W. (Eds.), Proceedings of the 3rd International Conference on Principles of Knowledge Representation and Reasoning, pp. 649{660 Cambridge, Massachusetts. Morgan Kaufmann Publishers.", "citeRegEx": "Ryan,? 1992", "shortCiteRegEx": "Ryan", "year": 1992}, {"title": "It is not my default: the complexity of reasoning in default logic", "author": ["J. Stillman"], "venue": "Proceedings of the 8th National Conference on Arti cial Intelligence, pp. 571{578 Boston, Massachusetts. Morgan Kaufmann Publishers.", "citeRegEx": "Stillman,? 1990", "shortCiteRegEx": "Stillman", "year": 1990}, {"title": "Constructive default logic and the control of defeasible reasoning", "author": ["Y.H. Tan", "J. Treur"], "venue": "Proceedings of the 10th European Conference on Arti cial Intelligence,", "citeRegEx": "Tan and Treur,? \\Q1992\\E", "shortCiteRegEx": "Tan and Treur", "year": 1992}], "referenceMentions": [{"referenceID": 19, "context": "Nonmonotonic logics and related systems for nonmonotonic and default reasoning (Reiter, 1980; Moore, 1985; McCarthy, 1980) were developed for representing knowledge and forms of reasoning that are not conveniently expressible in monotonic logics, like the rst-order predicate logic or propositional logics.", "startOffset": 79, "endOffset": 122}, {"referenceID": 17, "context": "Nonmonotonic logics and related systems for nonmonotonic and default reasoning (Reiter, 1980; Moore, 1985; McCarthy, 1980) were developed for representing knowledge and forms of reasoning that are not conveniently expressible in monotonic logics, like the rst-order predicate logic or propositional logics.", "startOffset": 79, "endOffset": 122}, {"referenceID": 12, "context": "For example, in the kind of reasoning expressed as inheritance networks (Horty, 1994), one network link may say that priests imbibe non-alcoholic beverages only.", "startOffset": 72, "endOffset": 85}, {"referenceID": 15, "context": "The need to incorporate priority information to nonmonotonic logics (Lifschitz, 1985; Brewka, 1989; Ge ner & Pearl, 1992; Ryan, 1992; Brewka, 1994; Baader & Hollunder, 1995) stems from the possibility that two default rules are in con ict.", "startOffset": 68, "endOffset": 173}, {"referenceID": 2, "context": "The need to incorporate priority information to nonmonotonic logics (Lifschitz, 1985; Brewka, 1989; Ge ner & Pearl, 1992; Ryan, 1992; Brewka, 1994; Baader & Hollunder, 1995) stems from the possibility that two default rules are in con ict.", "startOffset": 68, "endOffset": 173}, {"referenceID": 22, "context": "The need to incorporate priority information to nonmonotonic logics (Lifschitz, 1985; Brewka, 1989; Ge ner & Pearl, 1992; Ryan, 1992; Brewka, 1994; Baader & Hollunder, 1995) stems from the possibility that two default rules are in con ict.", "startOffset": 68, "endOffset": 173}, {"referenceID": 3, "context": "The need to incorporate priority information to nonmonotonic logics (Lifschitz, 1985; Brewka, 1989; Ge ner & Pearl, 1992; Ryan, 1992; Brewka, 1994; Baader & Hollunder, 1995) stems from the possibility that two default rules are in con ict.", "startOffset": 68, "endOffset": 173}, {"referenceID": 12, "context": "Speci city as a basis for resolving con icts between defaults has been investigated in the framework of path-based inheritance theories (Horty, 1994).", "startOffset": 136, "endOffset": 149}, {"referenceID": 2, "context": "Preferred subtheories (Brewka, 1989) and ordered theory presentations (Ryan, 1992) do not have as general a notion of defaults as Reiter's default logic, and they can both be translated to prerequisite-free normal default theories of a prioritized default logic (Rintanen, 1999).", "startOffset": 22, "endOffset": 36}, {"referenceID": 22, "context": "Preferred subtheories (Brewka, 1989) and ordered theory presentations (Ryan, 1992) do not have as general a notion of defaults as Reiter's default logic, and they can both be translated to prerequisite-free normal default theories of a prioritized default logic (Rintanen, 1999).", "startOffset": 70, "endOffset": 82}, {"referenceID": 21, "context": "Preferred subtheories (Brewka, 1989) and ordered theory presentations (Ryan, 1992) do not have as general a notion of defaults as Reiter's default logic, and they can both be translated to prerequisite-free normal default theories of a prioritized default logic (Rintanen, 1999).", "startOffset": 262, "endOffset": 278}, {"referenceID": 15, "context": "Also the de nitions of model minimization in conditional entailment (Ge ner & Pearl, 1992) and in prioritized circumscription (Lifschitz, 1985) do not directly support defaults with prerequisites.", "startOffset": 126, "endOffset": 143}, {"referenceID": 21, "context": "In this work we concentrate on Brewka's (1994) and Baader and Hollunder's (1995) proposals for incorporating priorities to default logic, as well as a proposal that uses lexicographic comparison (Rintanen, 1999).", "startOffset": 195, "endOffset": 211}, {"referenceID": 23, "context": "Like earlier work on complexity of nonmonotonic logics (Kautz & Selman, 1991; Stillman, 1990; Gottlob, 1992), the purpose of our investigation is to point out fundamental di erences and similarities between these logics, characterized by polynomial time translatability between their decision problems, and to identify restricted classes of default theories where reasoning is tractable.", "startOffset": 55, "endOffset": 108}, {"referenceID": 11, "context": "Like earlier work on complexity of nonmonotonic logics (Kautz & Selman, 1991; Stillman, 1990; Gottlob, 1992), the purpose of our investigation is to point out fundamental di erences and similarities between these logics, characterized by polynomial time translatability between their decision problems, and to identify restricted classes of default theories where reasoning is tractable.", "startOffset": 55, "endOffset": 108}, {"referenceID": 2, "context": "In this work we concentrate on Brewka's (1994) and Baader and Hollunder's (1995) proposals for incorporating priorities to default logic, as well as a proposal that uses lexicographic comparison (Rintanen, 1999).", "startOffset": 31, "endOffset": 47}, {"referenceID": 2, "context": "In this work we concentrate on Brewka's (1994) and Baader and Hollunder's (1995) proposals for incorporating priorities to default logic, as well as a proposal that uses lexicographic comparison (Rintanen, 1999).", "startOffset": 31, "endOffset": 81}, {"referenceID": 11, "context": "The decision problems of propositional default logic are located on the second level of the polynomial hierarchy (Gottlob, 1992), and hence they do not belong to the classes NP or co-NP unless the polynomial hierarchy collapses to its rst level.", "startOffset": 113, "endOffset": 128}, {"referenceID": 3, "context": "First we analyze the computational complexity of two closely related prioritized default logics (Brewka, 1994; Baader & Hollunder, 1995).", "startOffset": 96, "endOffset": 136}, {"referenceID": 19, "context": "These logics are based on the semiconstructive de nition of extensions of default logic (Reiter, 1980): the priorities control the construction of extensions, ruling out those that do not respect the priorities.", "startOffset": 88, "endOffset": 102}, {"referenceID": 21, "context": "We continue by analyzing a prioritized default logic that is based on comparing the Reiter extensions of a default theory by lexicographic comparison (Rintanen, 1999).", "startOffset": 150, "endOffset": 166}, {"referenceID": 19, "context": "Default logic is one of the main formalizations of nonmonotonic reasoning (Reiter, 1980).", "startOffset": 74, "endOffset": 88}, {"referenceID": 19, "context": "1 (Reiter, 1980) Let = hD;W i be a default theory.", "startOffset": 2, "endOffset": 16}, {"referenceID": 19, "context": "2 (Reiter, 1980) Let E L be a set of formulae, and let = hD;W i be a default theory.", "startOffset": 2, "endOffset": 16}, {"referenceID": 19, "context": "3 (Reiter, 1980) Suppose = hD;W i is a default theory and E is an extension of .", "startOffset": 2, "endOffset": 16}, {"referenceID": 19, "context": "4 (Reiter, 1980) Suppose E is an extension of a default theory = hD;W i.", "startOffset": 2, "endOffset": 16}, {"referenceID": 8, "context": "6 (Etherington, 1987) Let = hD;W i be a seminormal default theory.", "startOffset": 2, "endOffset": 21}, {"referenceID": 8, "context": "According to Theorem 1 in (Etherington, 1987), ordered default theories, like normal default theories and unlike seminormal default theories in general, have at least one extension.", "startOffset": 26, "endOffset": 45}, {"referenceID": 2, "context": "Priorities in default logic have been investigated by Baader and Hollunder (1995) and Brewka (1994). They view priorities as information that selects which defaults are applied next when constructing an extension.", "startOffset": 86, "endOffset": 100}, {"referenceID": 3, "context": "3 (Brewka, 1994) Let hD;W i be a normal default theory and P a strict partial order on D.", "startOffset": 2, "endOffset": 16}, {"referenceID": 3, "context": "Proof: The p 2 -hardness is because with an empty priority relation Brewka's logic coincides with Reiter's default logic (Proposition 6 in (Brewka, 1994)), which is p 2 -hard even with", "startOffset": 139, "endOffset": 153}, {"referenceID": 11, "context": "the restriction to normal defaults (Gottlob, 1992).", "startOffset": 35, "endOffset": 50}, {"referenceID": 13, "context": "This subject is related to the research on the boundary between tractability and intractability of default logic without priorities by Kautz and Selman (1991) and Stillman (1990).", "startOffset": 135, "endOffset": 159}, {"referenceID": 13, "context": "This subject is related to the research on the boundary between tractability and intractability of default logic without priorities by Kautz and Selman (1991) and Stillman (1990). First we analyze the case in which the priorities are strict total orders.", "startOffset": 135, "endOffset": 179}, {"referenceID": 23, "context": "If the objective partW may contain Horn clauses, none of the restrictions on the form of default rules is su cient for achieving tractability in brave reasoning (Stillman, 1990).", "startOffset": 161, "endOffset": 177}, {"referenceID": 23, "context": "IfW consists of 2-literal clauses, brave reasoning for the prerequisite-free normal class is tractable (Stillman, 1990).", "startOffset": 103, "endOffset": 119}, {"referenceID": 23, "context": "If W consists of literals, brave reasoning for the prerequisite-free normal class and the Horn class are tractable (Kautz & Selman, 1991; Stillman, 1990).", "startOffset": 115, "endOffset": 153}, {"referenceID": 13, "context": "When the complexity is directly implied by the complexity of an unprioritized class of default theories investigated by Kautz and Selman (1991) we indicate this by K&S.", "startOffset": 120, "endOffset": 144}, {"referenceID": 13, "context": "Intractability of all remaining classes except the normal unary class is directly implied by the intractability of the same classes in Reiter's default logic, as shown by Kautz and Selman (1991) and Theorems 4.", "startOffset": 171, "endOffset": 195}, {"referenceID": 13, "context": "Intractability of all remaining classes except the normal unary class is directly implied by the intractability of the same classes in Reiter's default logic, as shown by Kautz and Selman (1991) and Theorems 4.12, 4.13 and 4.14. Stillman (1990) analyzes the complexity of prerequisite-free default theories, and claims that brave reasoning for the prerequisite-free normal class with 2-literal clauses is solvable in polynomial time.", "startOffset": 171, "endOffset": 245}, {"referenceID": 23, "context": "2 in (Kautz & Selman, 1991) { that reduces brave reasoning to cautious reasoning by adding a default :l=l { and the intractability result for brave reasoning in Horn classes (Stillman, 1990).", "startOffset": 174, "endOffset": 190}, {"referenceID": 19, "context": "2 in (Reiter, 1980) there is an extension E of hD; ;i such that E 0 E.", "startOffset": 5, "endOffset": 19}, {"referenceID": 20, "context": "This de nition is based on an earlier one for autoepistemic logic (Rintanen, 1994).", "startOffset": 66, "endOffset": 82}, {"referenceID": 15, "context": "Lexicographic comparison has earlier been used in the context of nonmonotonic reasoning by several researchers (Lifschitz, 1985; Ge ner & Pearl, 1992; Ryan, 1992).", "startOffset": 111, "endOffset": 162}, {"referenceID": 22, "context": "Lexicographic comparison has earlier been used in the context of nonmonotonic reasoning by several researchers (Lifschitz, 1985; Ge ner & Pearl, 1992; Ryan, 1992).", "startOffset": 111, "endOffset": 162}, {"referenceID": 19, "context": "A de nition of prioritized default logic is used by Rintanen (1999). This de nition is based on an earlier one for autoepistemic logic (Rintanen, 1994).", "startOffset": 52, "endOffset": 68}, {"referenceID": 15, "context": "Approaches to prioritizing defaults that are based on lexicographic comparison (Lifschitz, 1985; Brewka, 1989; Ge ner & Pearl, 1992; Ryan, 1992) do not exhibit that kind of behavior.", "startOffset": 79, "endOffset": 144}, {"referenceID": 2, "context": "Approaches to prioritizing defaults that are based on lexicographic comparison (Lifschitz, 1985; Brewka, 1989; Ge ner & Pearl, 1992; Ryan, 1992) do not exhibit that kind of behavior.", "startOffset": 79, "endOffset": 144}, {"referenceID": 22, "context": "Approaches to prioritizing defaults that are based on lexicographic comparison (Lifschitz, 1985; Brewka, 1989; Ge ner & Pearl, 1992; Ryan, 1992) do not exhibit that kind of behavior.", "startOffset": 79, "endOffset": 144}, {"referenceID": 3, "context": "1 (Brewka, 1994) Consider the default theory = hD;W i where W = fag and D = fb:c=c; a::c=:c; a:b=bg.", "startOffset": 2, "endOffset": 16}, {"referenceID": 19, "context": "5 in (Reiter, 1980)", "startOffset": 5, "endOffset": 19}, {"referenceID": 14, "context": "This result is based on a theorem by Krentel (1992)", "startOffset": 37, "endOffset": 52}, {"referenceID": 14, "context": "10 (Krentel, 1992) The problem of computing a given component of X 1 is p 3 -complete, where X 1 is de ned as follows.", "startOffset": 3, "endOffset": 18}, {"referenceID": 11, "context": "The proof of the next lemma uses the same translation of quanti ed Boolean formulae to default theories as Gottlob's proof of p 2 -hardness of cautious reasoning in Reiter's default logic (Gottlob, 1992).", "startOffset": 188, "endOffset": 203}, {"referenceID": 13, "context": "The following corollary is obtained with the intractability results of brave reasoning by Kautz and Selman (1991) and Stillman (1990) for the classes mentioned.", "startOffset": 90, "endOffset": 114}, {"referenceID": 13, "context": "The following corollary is obtained with the intractability results of brave reasoning by Kautz and Selman (1991) and Stillman (1990) for the classes mentioned.", "startOffset": 90, "endOffset": 134}, {"referenceID": 19, "context": "1 in (Reiter, 1980).", "startOffset": 5, "endOffset": 19}, {"referenceID": 23, "context": "Without priorities reasoning with prerequisite-free normal default rules and Horn clauses is NP-complete (Stillman, 1990).", "startOffset": 105, "endOffset": 121}, {"referenceID": 19, "context": "2 in (Reiter, 1980) because D 0 D and D is normal.", "startOffset": 5, "endOffset": 19}, {"referenceID": 19, "context": "2 in (Reiter, 1980), there is an extension E 0 of 0 such that A GD(E 0 ; 0 ).", "startOffset": 5, "endOffset": 19}, {"referenceID": 19, "context": "2 by Reiter (1980)).", "startOffset": 5, "endOffset": 19}, {"referenceID": 19, "context": "2 in (Reiter, 1980) there is an extension E 0 of hD; ;i such that GD(E 12 ; hD 1 [D 2 ; ;i) GD(E 0 ; hD; ;i).", "startOffset": 5, "endOffset": 19}, {"referenceID": 13, "context": "Marek and Truszczy nski (1993) introduce a prioritized default logic that is similar to Brewka's (1994) logic.", "startOffset": 19, "endOffset": 31}, {"referenceID": 2, "context": "Marek and Truszczy nski (1993) introduce a prioritized default logic that is similar to Brewka's (1994) logic.", "startOffset": 88, "endOffset": 104}, {"referenceID": 2, "context": "Marek and Truszczy nski (1993) introduce a prioritized default logic that is similar to Brewka's (1994) logic. The existence of preferred extensions is not guaranteed in general, but for normal defaults it is. We believe that for normal default theories, the complexity of the Marek and Truszczy nski logic coincides with the complexity of Brewka's logic. Delgrande and Schaub (1997) present a translation from prioritized default theories to unprioritized default theories, so that the extensions of the resulting theories obey the priorities.", "startOffset": 88, "endOffset": 384}, {"referenceID": 5, "context": "Buccafurri et al. (1998) present a knowledge representation language that extends logic programs with priorities, classical", "startOffset": 0, "endOffset": 25}, {"referenceID": 2, "context": "Brewka and Eiter (1998) present the notion of preferred answer sets for extended logic programs.", "startOffset": 0, "endOffset": 24}, {"referenceID": 3, "context": "Principle I is violated by the prioritized default logics that are based on the semiconstructive de nition of extensions (Baader & Hollunder, 1995; Brewka, 1994; Marek & Truszczy nski, 1993), but not by the lexicographic prioritized default logic discussed in Section 5.", "startOffset": 121, "endOffset": 190}, {"referenceID": 21, "context": "However, Principle II is not violated by a closely related prioritized default logic that replaces application with non-defeat (Rintanen, 1999).", "startOffset": 127, "endOffset": 143}, {"referenceID": 21, "context": "Priorities used in translating inheritance networks to prioritized default logic ful ll this requirement (Rintanen, 1999).", "startOffset": 105, "endOffset": 121}, {"referenceID": 2, "context": "The main results place the propositional variants of three general formalizations of prioritized default reasoning, the logics by Brewka (1994) and Baader and Hollunder (1995) that are based on the semiconstructive de nition of extensions, and a formalization that is", "startOffset": 130, "endOffset": 144}, {"referenceID": 2, "context": "The main results place the propositional variants of three general formalizations of prioritized default reasoning, the logics by Brewka (1994) and Baader and Hollunder (1995) that are based on the semiconstructive de nition of extensions, and a formalization that is", "startOffset": 130, "endOffset": 176}, {"referenceID": 11, "context": "An analysis of the complexity of the decision problems in syntactically restricted cases, following earlier work by Kautz and Selman (1991) and Stillman (1990), identi es the e ect of priorities on the boundary between tractability and intractability in the prioritized versions of the decision problems.", "startOffset": 116, "endOffset": 140}, {"referenceID": 11, "context": "An analysis of the complexity of the decision problems in syntactically restricted cases, following earlier work by Kautz and Selman (1991) and Stillman (1990), identi es the e ect of priorities on the boundary between tractability and intractability in the prioritized versions of the decision problems.", "startOffset": 116, "endOffset": 160}], "year": 2013, "abstractText": "In default reasoning, usually not all possible ways of resolving con icts between default rules are acceptable. Criteria expressing acceptable ways of resolving the con icts may be hardwired in the inference mechanism, for example speci city in inheritance reasoning can be handled this way, or they may be given abstractly as an ordering on the default rules. In this article we investigate formalizations of the latter approach in Reiter's default logic. Our goal is to analyze and compare the computational properties of three such formalizations in terms of their computational complexity: the prioritized default logics of Baader and Hollunder, and Brewka, and a prioritized default logic that is based on lexicographic comparison. The analysis locates the propositional variants of these logics on the second and third levels of the polynomial hierarchy, and identi es the boundary between tractable and intractable inference for restricted classes of prioritized default theories.", "creator": "dvipsk 5.58f Copyright 1986, 1994 Radical Eye Software"}}}