{"id": "1105.5458", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "27-May-2011", "title": "Cooperation between Top-Down and Bottom-Up Theorem Provers", "abstract": "Top-down and bottom-up theorem proving approaches each have specific advantages and disadvantages. Bottom-up provers profit from strong redundancy control but suffer from the lack of goal-orientation, whereas top-down provers are goal-oriented but often have weak calculi when their proof lengths are considered. In order to integrate both approaches, we try to achieve cooperation between a top-down and a bottom-up prover in two different ways: The first technique aims at supporting a bottom-up with a top-down prover. A top-down prover generates subgoal clauses, they are then processed by a bottom-up prover. The second technique deals with the use of bottom-up generated lemmas in a top-down prover. We apply our concept to the areas of model elimination and superposition. We discuss the ability of our techniques to shorten proofs as well as to reorder the search space in an appropriate manner. Furthermore, in order to identify subgoal clauses and lemmas which are actually relevant for the proof task, we develop methods for a relevancy-based filtering. Experiments with the provers SETHEO and SPASS performed in the problem library TPTP reveal the high potential of our cooperation approaches.", "histories": [["v1", "Fri, 27 May 2011 01:52:28 GMT  (99kb)", "http://arxiv.org/abs/1105.5458v1", null]], "reviews": [], "SUBJECTS": "cs.AI", "authors": ["m fuchs", "d fuchs"], "accepted": false, "id": "1105.5458"}, "pdf": {"name": "1105.5458.pdf", "metadata": {"source": "CRF", "title": null, "authors": ["Dirk Fu"], "emails": [], "sections": [{"heading": null, "text": "Fu hs & Fu hs BUC CTD C\nTD\nBU BU TDFigure 1: Cooperation between a top-down and a bottom-up proveris that in general they are rather long. In fa t, CTC is among the weakest al uli when thelengths of existing proofs are onsidered. Therefore, Letz et al. (1994) proposed extensionsof CTC whi h are based on a ontrolled integration of the ut rule. These extensions analso be seen as restri ted lemma me hanisms. A further problem is that often during thesear h tableaux with the same or subsumed subgoals o ur repeatedly. There are someextensions of the al ulus proposed to over ome su h problems. E.g., by Letz et al. (1994)a restri ted subsumption on ept and by Astra han and Sti kel (1992) a hing te hniqueshave been introdu ed.2.2 A hieving Cooperation by Prepro essing and Input AugmentationOur approa h of integrating top-down and bottom-up provers by ooperation is hara -terized by prepro essing and input augmentation. Hen eforth, let C be the initial lauseset whose in onsisten y should be shown. In the prepro essing phase the bottom-up su-perposition prover generates a set of lauses CBU su h that C j= CBU . Analogously, weextra t from a ertain number of proof attempts of the ME prover a lause set CTD su hthat C j= CTD. Then, the input set C of the superposition prover is augmented by CTD,and the input of the ME prover with CBU . After that both provers an pro eed to work inparallel. Figure 1 displays this kind of ooperation that is essentially based on a sequential on atenation of both provers. The approa h an be seen as a spe i instantiation of thegeneral ooperation approa h TECHS (Denzinger & Fu hs, 1998).Sin e the superposition prover works on a sear h state whi h ontains a set of lauses,it is very easy to generate a set of valid lauses in a prepro essing phase. A very simplemethod is to perform a xed number i of a tivation steps and to generate the lause sets FA;iand FP;i of a tive and passive lauses. Then, we sele t all fa ts, i.e. positive unit lauses,from FA;i. Sin e the inferen es of a superposition-based prover are sound, it produ esonly logi onsequen es of C. As we shall explain in Se tion 4 in more detail, it is notsensible to add all generated positive units to the input of the top-down prover, i.e. to setCBU = fC : C is a fa t; C 2 FA;ig. However, it is wise to sele t only some units with afun tion 'BU , i.e. CBU = 'BU(fC : C is a fa t; C 2 FA;ig).Be ause onne tion tableau-based provers have a sear h state whi h ontains dedu tions(tableaux) instead of lauses, it is at rst sight not obvious how to extra t valid lausesfrom su h a sear h state whi h will be well-suited for a superposition-based prover. A174\nCooperation between Top-Down and Bottom-Up Theorem Provers g(b) = f(h(b))\ntransitivity \"=\"\ng(b) = f(f(b)) f(f(b)) = f(h(b))\nf(b) = h(b)\nsymmetry \"=\" congruence \"=\"\nf(f(b)) = g(b)\nf(f(b)) = g(b)\naxiom\nh(b) = f(b)\nh(b) = f(b)\nsymmetry \"=\"\naxiomFigure 4: Simulating a superposition step with MEOur riterion aims mainly at ex luding lemmas that are appli able in too many ases andhen e introdu e too many solutions of subgoals that do not lead to a refutation of the in-put lauses. In ontrast to expanding inferen es we rate ontra tion inferen es positively.Indeed, ME provers do not have ontra ting inferen es. But as shown by Letz et al. (1992),subsumption an partly be simulated by subsumption onstraints. Hen e, lauses that areable to ontra t many other lauses an support sear h pruning te hniques.4.3.3 Derivation-Based Sele tionThe se ond lter fun tion 'DBU tries to sele t fa ts that are able to lose subgoals that arevery hard to solve with a onne tion-tableau-based prover. In order to estimate this, we onsider the derivation history of a fa t. We employ this lter fun tion only if equality isinvolved in a problem.Example 4.1 Let ff(f(x)) = g(x)g and fh(b) = f(b)g be axioms. Then, the lausefg(b) = f(h(b))g an be derived by one superposition step. However, if :g(b) = f(h(b)) isa subgoal of an ME proof, its proof is more ompli ated (see Figure 4).In general, if the superposition step is performed at a position p and jpj denotes thedepth of the position (above jpj = 1), then at most jpj + 5 inferen es are needed in orderto prove the result of su h a superposition step. The proof ne essitates at most a depth ofjpj+ 3.This example shows that the simulation of the spe i equational operations of a su-perposition prover ne essitates a high depth as well as inferen e resour e in an ME prover.That is, lemmas derived by many superposition steps are able to lose subgoals that annotbe solved by an ME prover within small resour es. Hen e, if su h lemmas are appli ablelarge resour e redu tions possibly o ur for depth or inferen e oriented bounds. The judg-ment fun tion DBU employs this riterion. Again, the lter fun tion 'DBU sele ts fa ts withthe highest value regarding this judgment fun tion.187"}], "references": [], "referenceMentions": [], "year": 2011, "abstractText": null, "creator": "dvips(k) 5.85 Copyright 1999 Radical Eye Software"}}}