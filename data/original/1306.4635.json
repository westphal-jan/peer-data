{"id": "1306.4635", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "19-Jun-2013", "title": "Towards Multistage Design of Modular Systems", "abstract": "The paper describes multistage design of composite (modular) systems (i.e., design of a system trajectory). This design process consists of the following: (i) definition of a set of time/logical points; (ii) modular design of the system for each time/logical point (e.g., on the basis of combinatorial synthesis as hierarchical morphological design or multiple choice problem) to obtain several system solutions; (iii) selection of the system solution for each time/logical point while taking into account their quality and the quality of compatibility between neighbor selected system solutions (here, combinatorial synthesis is used as well). Mainly, the examined time/logical points are based on a time chain. In addition, two complicated cases are considered: (a) the examined logical points are based on a tree-like structure, (b) the examined logical points are based on a digraph. Numerical examples illustrate the approach.", "histories": [["v1", "Wed, 19 Jun 2013 18:07:54 GMT  (25kb)", "http://arxiv.org/abs/1306.4635v1", "13 pages, 25 figures, 14 tables"]], "COMMENTS": "13 pages, 25 figures, 14 tables", "reviews": [], "SUBJECTS": "cs.AI cs.SY", "authors": ["mark sh levin"], "accepted": false, "id": "1306.4635"}, "pdf": {"name": "1306.4635.pdf", "metadata": {"source": "CRF", "title": null, "authors": [], "emails": [], "sections": [{"heading": null, "text": "ar X\niv :1\n30 6.\n46 35\nv1 [\ncs .A\nI] 1\n9 Ju\nn 20\n13\nTowards Multistage Design of Modular Systems\nMark Sh. Levin \u2217\nThe paper describes multistage design of composite (modular) systems (i.e., design of a system trajectory). This design process consists of the following: (i) definition of a set of time/logical points; (ii) modular design of the system for each time/logical point (e.g., on the basis of combinatorial synthesis as hierarchical morphological design or multiple choice problem) to obtain several system solutions; (iii) selection of the system solution for each time/logical point while taking into account their quality and the quality of compatibility between neighbor selected system solutions (here, combinatorial synthesis is used as well). Mainly, the examined time/logical points are based on a time chain. In addition, two complicated cases are considered: (a) the examined logical points are based on a tree-like structure, (b) the examined logical points are based on a digraph. Numerical examples illustrate the approach.\nKeywords: modular systems, systems design, engineering frameworks, combinatorial synthesis, heuristics\n1. Introduction\nIn recent decades, the significance of modular (multi-component) systems has been increased (e.g., [1,3, 5,9,11,12,13,15,19,21,22]). This paper addresses procedures for multistage design of hierarchical modular systems. As a result, a system trajectory can be obtained. It is assumed the following: the considered hierarchical modular system can be represented as a morphological structure: tree-like system structure, design alternatives (DAs) for leaf nodes of the structure, estimates of DAs and their compatibility (e.g., [12,13,15,18]). In addition, it is necessary to consider a top-level structure/network (i.e., a set of elements as time/logical points/states and a structure over the elements), including the following four basic types of the structure: (a) chain, (b) tree, (c) acyclic directed graph (digraph), and (d) general digraph. Thus, a two-level model is examined (Fig. 1): (1) top-level network/graph G = (H,V ), where H corresponds to a set of node (time/logical points or states), V corresponds to a set of arcs; (2) morphological structure for each node \u00b5 \u2208 H : \u039b\u00b5.\n\u271b \u271a \u2718 \u2719Top-level network of over nodes G = (H,V ),each node corresponds to a time/logical point/state\nTable 1 contains a brief description of the basic considered frameworks/problems. Generally, this kind of the design process consists of the following: (i) definition of a set of time/logical points; (ii) definition of the structure over the points above (i.e., chain, tree, digraph); (iii) modular design of the system for each point (e.g., on the basis of combinatorial synthesis as multiple choice problem or hierarchical morphological design) to obtain several system solutions; (iv) selection of the system solution for each point while taking into account their quality and the quality of compatibility between neighbor selected system solutions (here, combinatorial synthesis is used as well).\n\u2217Mark Sh. Levin: http://www.mslevin.iitp.ru; email: mslevin@acm.org\n2 Mainly, a chain of time points is considered in the above-mentioned design scheme. In addition, two complicated cases are considered: (a) the examined logical/time points are based on a tree-like structure, (b) the examined logical/time points are based on a digraph. Numerical examples illustrate the approach. An illustration for using the approach to multiple domain problems is presented.\nGenerally, combinatorial synthesis of modular systems can be based on multiple choice problem or hierarchical multicriteria morphological design (HMMD) approach (e.g., [12,13,15,16]. Here, HMMD is used. In HMMD approach, the resultant solution is composed from design alternatives (DAs) for system parts/components while taking into account quality if their interconnection (IC). In the basic version of HMMD, the following ordinal scales are used: (1) ordinal scale for quality of system components (or priority) (\u03b9 = 1, l; 1 corresponds to the best one); (2) scale for system quality while taking into account system components ordinal estimates and ordinal compatibility estimates between the system components (w = 0, \u03bd; \u03bd corresponds to the best level).\nFor the system consisting of m parts/components, a discrete space (poset, lattice) of the system quality (excellence) on the basis of the following vector is used: N(S) = (w(S);n(S)), where w(S) is the minimum of pairwise compatibility between DAs which correspond to different system components, n(S) = (\u03b71, ..., \u03b7r, ..., \u03b7k), where \u03b7r is the number of DAs of the rth quality in S ( \u2211k r=1 nr = m). The optimization problem is: max N(S), max w(S), w(S) \u2265 0.\n3 3. General Schemes\nThe solving two-level framework for multistage design or design of system trajectory is the following (Fig. 2) (e.g., [12,13]):\nPhase 0. Generation of general structure of the design problem: 0.1. generation of time/logical points, 0.2. generation the top-level network over the time/logical points (e.g., chain, tree, digraph), 0.3. formulation of combinatorial synthesis subproblem for each time/logical point (i.e.,system morphological model: tree-like model, design alternatives (DAs) for leaf nodes, criteria for assessment of the DAs, estimates for DAs and their compatibility). Phase 1. Hierarchical system design for each time/logical point (combinatorial synthesis on the basis of HMMD or multiple choice problem) to get a set of Pareto-efficient solutions. Phase 2. Design of a system trajectory as a combination of results (i.e., solutions for the time/logical points) obtained at the previous phase. Here combinatorial synthesis (i.e., HMMD or multiple choice problem) is used as well. The resultant system trajectory can be as follows: (a) chain of solutions for time points (i.e., series or parallel-series trajectory), (b) tree of solutions (i.e., a system solution for each tree node), and (c) digraph of the system solutions (i.e., a system solution for each digraph node).\nResultant system trajectory from k solutions (as chain)\u271e\u271d \u260e\u2706 \u2732 ... \u2718\u2718\u2718\u273f\u271e\u271d \u260e\u2706 \u2732 ... \u2732\u271e\u271d \u260e\u2706\nIn Fig. 2, the following local system solutions are depicted: (a) stage 1: S11 , S 1 2 , S 1 3 ; (b) stage i: S 2 1 , S 2 2 ;\n(c) stage k: Sk 1 , Sk 2 , Sk 3 , Sk 4 . Thus, system trajectory (chain) is: \u03b1 =< S1 2 \u22c6 ... \u22c6 Si 1 \u22c6 ... \u22c6 Sk 2 >. An illustrative example for three-stage trajectory design is presented in Fig. 3, an example of the system trajectory (chain) is: \u03b2 =< S\u03c41\n2 \u22c6 S\u03c42 3 \u22c6 S\u03c43 1 >.\nFig. 3. Illustrative example of three-stage system trajectory (a) stage 1 (\u03c41)\nA3\nA2\nA1\nB3\nB2 B1 C2 C1 A B C\u2709 \u2709 \u2709 \u275er\u275er\u275er\u275er \u275er\u275er\u275er \u275er\n\u2708 S\u03c41 1 = A1 \u22c6 B1 \u22c6 C1\u261b\u2721 \u271f\u2720\u274d\u274d\u274d\u2765S\u03c412 = A1 \u22c6 B1 \u22c6 C2S\u03c41 3 = A3 \u22c6 B2 \u22c6 C2\n\u21d2\n(b) stage 2 (\u03c42)\nA2\nA1\nB3\nB2 C2\nC1 A B C\u2709 \u2709 \u2709\u275er\u275er\u275er\u275er\u275er \u275er\n\u2708 S\u03c42 1 = A1 \u22c6 B3 \u22c6 C1 S\u03c42 2 = A2 \u22c6 B2 \u22c6 C2\u261b\u2721 \u271f\u2720 \u2712S\u03c423 = A2 \u22c6 B3 \u22c6 C1 \u21d2\n(c) stage 3 (\u03c43)\nA3\nA2 B2\nB1\nC3\nC2 A B C\u2709 \u2709 \u2709 \u275er\u275er \u275er\u275er\u275er\u275er\n\u2708 \u261b\u2721 \u271f\u2720S\u03c431 = A2 \u22c6 B2 \u22c6 C3 S\u03c43 2 = A2 \u22c6 B2 \u22c6 C2 S\u03c43 3 = A3 \u22c6 B2 \u22c6 C2\nIn Fig. 4, an illustration for tree-based system trajectory design is presented: (i) eight logical points: {\u00b50, \u00b51, \u00b52, \u00b53, \u00b54, \u00b55, \u00b56, \u00b57}, (ii) eight corresponding morphological structures: {\u039b\u00b50 ,\u039b\u00b51 ,\u039b\u00b52 ,\u039b\u00b53 ,\u039b\u00b54 ,\u039b\u00b55 ,\u039b\u00b56 ,\u039b\u00b57}. Here, the following solutions are depicted: (a) point \u00b50: S \u00b50 1 , S \u00b50 2 ; (b) point \u00b51: S \u00b51 1 , S \u00b51 2 , S \u00b51 3 ; (c) point\n\u00b52: S \u00b52 1 , S \u00b52 2 ; (d) point \u00b53: S \u00b53 1 , S \u00b53 2 , S \u00b53 3 ; (e) point \u00b54: S \u00b54 1 , S \u00b54 2 , S \u00b54 3 ; (f) point \u00b55: S \u00b55 1 , S \u00b55 2 , S \u00b55 3 ; (h) point\n4 \u00b56: S \u00b56 1 , S \u00b56 2 , S \u00b56 3 ; (i) point \u00b57: S \u00b56 1 , S \u00b56 2 . Thus, system trajectory (tree) consists of the following local solutions: \u03b3 = {S\u00b50 1 , S \u00b51 1 , S \u00b52 2 , S \u00b53 1 , S \u00b54 3 , S \u00b55 1 , S \u00b56 2 , S \u00b57 1 }. Clearly, the structure of the system trajectory \u03b3 corresponds to the initial tree (Fig. 5).\nFig. 4. Illustration for tree based system trajectory (a) top-level network (tree)\n\u270e\u270d \u261e\u270c\u261b\u2721 \u271f\u2720\u00b50 \u2745 \u2745\u2758 \u2712\n\u270e\u270d \u261e\u270c\u261b\u2721 \u271f\u2720\u00b51 \u2732\u2711 \u2711\u2711\u2738 \u270e\u270d \u261e\u270c\u261b\u2721 \u271f\u2720\u00b52\n\u270e\u270d \u261e\u270c\u261b\u2721 \u271f\u2720\u00b53 \u270e\u270d \u261e\u270c\u261b\u2721 \u271f\u2720\u00b54 \u2732\u2711\n\u2711\u2711\u2738\u2701 \u2701 \u2701 \u2701 \u271f\u272f \u270e\u270d \u261e\u270c\u261b\u2721 \u271f\u2720\u00b55 \u270e\u270d \u261e\u270c\u261b\u2721 \u271f\u2720\u00b56 \u270e\u270d \u261e\u270c\u261b\u2721 \u271f\u2720\u00b57\n(b) system trajectory\n\u2704\u2702 \u2701s \u2711 \u2711\u2738\n\u2745 \u2745 \u2745 \u25d7 \u25d7s \u2721 \u2721 \u274f \u274f \u039b\u00b50 \u2704\u2702 \u2701s \u2732\u271a\u271a\u271a \u271a \u271a\u2743\n\u2721 \u2721 \u274f \u274f \u039b\u00b51\n\u2704\u2702 \u2701s \u2721 \u2721 \u274f \u274f \u039b\u00b52\n\u2704\u2702 \u2701s \u2721 \u2721 \u274f \u274f \u039b\u00b53\n\u2704\u2702 \u2701s \u2732\u271a\u271a\u271a \u271a \u271a\u2743 \u2702 \u2702 \u2702 \u2702 \u2702 \u2702\u2702 \u271f\u271f\n\u271f\u272f\n\u2721 \u2721 \u274f \u274f \u039b\u00b54\n\u2704\u2702 \u2701s \u2721 \u2721 \u274f \u274f \u039b\u00b55\n\u2704\u2702 \u2701 s \u2721 \u2721 \u274f \u274f \u039b\u00b56\n\u2704\u2702 \u2701 s \u2721 \u2721 \u274f \u274f \u039b\u00b57\nFig. 5. Example of tree-like trajectory\n\u270e\u270d \u261e\u270cS\u00b501 \u2745 \u2745\u2758 \u2712\n\u270e\u270d \u261e\u270cS\u00b511 \u2732\u2711 \u2711\u2711\u2738 \u270e\u270d \u261e\u270cS\u00b522\n\u270e\u270d \u261e\u270cS\u00b531 \u270e\u270d \u261e\u270cS\u00b543 \u2732\u2711\n\u2711\u2711\u2738\u2701 \u2701 \u2701 \u2701 \u271f\u272f \u270e\u270d \u261e\u270cS\u00b551 \u270e\u270d \u261e\u270cS\u00b562\n\u270e\u270d \u261e\u270cS\u00b571\nIn the case of tree-based system trajectories, it is reasonable to use additional nodes (as \u2019analysis/decision\u2019 points) for an analysis of the implementation results and selection of the next direction. Fig. 6 depicts an example of this kind of the extended tree-like network with corresponding additional \u2019analysis/decision\u2019 points: a0, a1, a4. Here, the resultant system trajectory is a chain (from the root to a leaf node), for example (for Fig. 6): \u03b3\u2032 =< S\u00b50 \u22c6 S\u00b54 \u22c6 S\u00b55 >.\nFig. 6. Tree-like network with \u2019analysis\u2019 nodes\n\u271b \u271a\n\u2718 \u2719 \u270e\u270d \u261e\u270c\u261b\u2721 \u271f\u2720\u00b50 \u2732\u270e\u270d \u261e\u270c\u261b\u2721 \u271f\u2720\u271e\u271d \u260e\u2706a0 \u2712 \u2745\u2758\n\u271b \u271a\n\u2718 \u2719 \u270e\u270d \u261e\u270c\u261b\u2721 \u271f\u2720\u00b51 \u2732\u270e\u270d \u261e\u270c\u261b\u2721 \u271f\u2720\u271e\u271d \u260e\u2706a1 \u270f \u270f\u2736 PPq \u270e\u270d \u261e\u270c\u261b\u2721 \u271f\u2720\u00b52 \u270e\u270d \u261e\u270c\u261b\u2721 \u271f\u2720\u00b53\n\u271b \u271a\n\u2718 \u2719 \u270e\u270d \u261e\u270c\u261b\u2721 \u271f\u2720\u00b54 \u2732\u270e\u270d \u261e\u270c\u261b\u2721 \u271f\u2720\u271e\u271d \u260e\u2706a4 \u270f \u270f\u2736 PPq\n\u2702 \u2702 \u271f\u271f\u272f \u270e\u270d \u261e\u270c\u261b\u2721 \u271f\u2720\u00b55 \u270e\u270d \u261e\u270c\u261b\u2721 \u271f\u2720\u00b56 \u270e\u270d \u261e\u270c\u261b\u2721 \u271f\u2720\u00b57\n5 Fig. 7 depicts an example of digraph with corresponding system trajectories. Here, the following situations (problems) can be examined: (i) design of a route (e.g., series as a chain-route, series-parallel route, tree-like route) on the basis of the initial digraph; (ii) design of a spanning tree for the initial digraph and study of the previous problem for tree-like network (including usage of the additional \u2019analysis\u2019 nodes). Illustrative examples of routes are (Fig. 7): (a) chain-route (series): < S\u00b54\n2 \u22c6 S \u00b57 3 \u22c6 S \u00b58 2\n>, (b) tree-like route on the basis of seven solutions: {S\u00b54\n2 , S \u00b55 1 , S \u00b56 1 , S \u00b58 2 , S \u00b51 1 , S \u00b52 2 , S \u00b53 1 }, and (c) series-parallel route on\nthe basis of four solutions: {S\u00b54 2 , S \u00b55 1 , S \u00b57 3 , S \u00b58 2 },\nFig. 7. Illustration for digraph based system trajectory (a) top-level network (digraph)\n\u270e\u270d \u261e\u270c\u261b\u2721 \u271f\u2720\u00b50 \u2732\u2721 \u2721 \u2721 \u2721\u2721\u2723\n\u270e\u270d \u261e\u270c\u261b\u2721 \u271f\u2720\u00b54 \u2732 \u274f \u274f \u274f \u274f\u274f\u276b \u2711 \u2711\u2711\u2738\n\u270e\u270d \u261e\u270c\u261b\u2721 \u271f\u2720\u00b51 \u2732\u2711 \u2711\u2711\u2738 \u270e\u270d \u261e\u270c\u261b\u2721 \u271f\u2720\u00b52\n\u270e\u270d \u261e\u270c\u261b\u2721 \u271f\u2720\u00b53 \u270e\u270d \u261e\u270c\u261b\u2721 \u271f\u2720\u00b55 \u2732\u2711 \u2711\u2711\u2738\n\u270e\u270d \u261e\u270c\u261b\u2721 \u271f\u2720\u00b57 \u2732 \u270e\u270d \u261e\u270c\u261b\u2721 \u271f\u2720\u00b56 \u270e\u270d \u261e\u270c\u261b\u2721 \u271f\u2720\u00b58\n(b) system trajectory\n\u2702 \u2702 \u2702 \u2702 \u2702 \u2702 \u271f\u271f\u272f\n\u2704\u2702 \u2701s \u2732 \u2721 \u2721 \u274f \u274f \u039b\u00b50\n\u2745\u2745 \u2747 \u2747 \u2747 \u2747 \u2747 \u2747\u274d\u274d\u2765\n\u271f\u271f\u272f\u2704\u2702 \u2701s \u2732 \u2721 \u2721 \u274f \u274f \u039b\u00b54\n\u2704\u2702 \u2701s \u2732\u271a\u271a\u271a \u271a \u271a\u2743\n\u2721 \u2721 \u274f \u274f \u039b\u00b51\n\u2704\u2702 \u2701s \u2721 \u2721 \u274f \u274f \u039b\u00b52\n\u2704\u2702 \u2701s \u2721 \u2721 \u274f \u274f \u039b\u00b53\n\u2704\u2702 \u2701s \u2732\u271a\u271a\u271a \u271a \u271a\u2743 \u2721 \u2721 \u274f \u274f \u039b\u00b55\n\u2704\u2702 \u2701s \u2732 \u2721 \u2721 \u274f \u274f\n\u039b\u00b57 \u2704\u2702 \u2701s \u2721 \u2721 \u274f \u274f \u039b\u00b56\n\u2704\u2702 \u2701s \u2721 \u2721 \u274f \u274f \u039b\u00b58\nThe initial top-level network (Fig. 7a) can be approximate by a simple spanning structure: (a) chain (Fig. 8a), (b) spanning (approximate) tree (Fig. 8b), (c) spanning simplified network (Fig. 8c).\n\u270e\u270d \u261e\u270c\u261b\u2721 \u271f\u2720\u00b54 \u2746 \u2746 \u2746 \u2746\u276f\u270e\u270d \u261e\u270c\u261b\u2721 \u271f\u2720\u00b51 \u2712 \u270e\u270d \u261e\u270c\u261b\u2721 \u271f\u2720\u00b53 (b) approximate tree \u270e\u270d \u261e\u270c\u261b\u2721 \u271f\u2720\u00b54 \u2732 \u2747 \u2747 \u2747 \u2747\u2747\u25c6 \u2712 \u270e\u270d \u261e\u270c\u261b\u2721 \u271f\u2720\u00b51 \u2732\u2721 \u2721\u2723 \u270e\u270d \u261e\u270c\u261b\u2721 \u271f\u2720\u00b52 \u270e\u270d \u261e\u270c\u261b\u2721 \u271f\u2720\u00b53 \u270e\u270d \u261e\u270c\u261b\u2721 \u271f\u2720\u00b55 \u2732\u2721 \u2721\u2723\n\u270e\u270d \u261e\u270c\u261b\u2721 \u271f\u2720\u00b57 \u270e\u270d \u261e\u270c\u261b\u2721 \u271f\u2720\u00b56 \u270e\u270d \u261e\u270c\u261b\u2721 \u271f\u2720\u00b58\n(c) simplified network\n\u270e\u270d \u261e\u270c\u261b\u2721 \u271f\u2720\u00b50 \u2732\u2702 \u2702 \u2702 \u2702\u2702\u270d\n\u270e\u270d \u261e\u270c\u261b\u2721 \u271f\u2720\u00b54 \u2732\u2721 \u2721\u2723\n\u270e\u270d \u261e\u270c\u261b\u2721 \u271f\u2720\u00b51 \u2732\u2721 \u2721\u2723 \u270e\u270d \u261e\u270c\u261b\u2721 \u271f\u2720\u00b52 \u270e\u270d \u261e\u270c\u261b\u2721 \u271f\u2720\u00b53\n\u270e\u270d \u261e\u270c\u261b\u2721 \u271f\u2720\u00b55 \u2732 \u270e\u270d \u261e\u270c\u261b\u2721 \u271f\u2720\u00b57 \u2732\u270e\u270d \u261e\u270c\u261b\u2721 \u271f\u2720\u00b56 \u270e\u270d \u261e\u270c\u261b\u2721 \u271f\u2720\u00b58\nHere, the basic version of HMMD approach is used (e.g., [12,13,15]). The example is an illustrative one (expert judgment). A general examined tree-like structure for the start-up team is:\n0. Tree-like structure S = L \u22c6 R \u22c6 E \u22c6M : 1. Creator or leader of the project L: none L0, creator (part-time participation, consulting) L1, creator (full-time participation) L2. 2. Researcher R: none R0, researcher (part time participation, consulting) R1, researcher (full-time participation) R2, two researchers R3 = R1&R2. 3. Engineer E: none E0, researcher (part time participation, consulting) E1, researcher (full-time participation) E2, two engineers E3 = E1&E2. 4. Manager M : none M0, manager (part time participation, consulting) M1, manager (full-time participation) M2.\n6 This structure is analyzed for the following four stages:\nStage 0 (t = \u03c40) (Fig. 9, priorities of DAs are shown in parentheses; Table 2): creation of the basic idea for a new product/system, preparation of the project proposal.\nStage 1 (t = \u03c41) (Fig. 10, priorities of DAs are shown in parentheses; Table 3): design of a system prototype, preparation of research materials as papers, presentation at conference, preparation of a patent, searching for investors.\nStage 2 (t = \u03c42) (Fig. 11, priorities of DAs are shown in parentheses; Table 4): design of a preliminary system version, analysis of the markets, preparation of business plan(s), searching for investors.\nStage 3 (t = \u03c43) (Fig. 12, priorities of DAs are shown in parentheses; Table 5): design of a system version, searching for applied domains, marketing, customization.\nTable 2. Compatibility (\u03c40)\nL1 L2 R0 R1 R2 E0 E1 E2\nR0 R1 R2 E0 E1 E2 M0 M1\n1 2 1 3 3 2 3 2 1 3 2 3 3 2 3 2\n3 3 2 3 1 3 3 1 3 3 3 3 1 3 2\n3 3 3 3 3 2\nThe resultant composite Pareto-efficient DA is the following (Fig. 13): S\u03c40 1 = L2 \u22c6 R1 \u22c6 E0 \u22c6 M0, N(S \u03c40 1 ) = (3; 4, 0, 0).\nFig. 10. Structure of team (\u03c41)\nL2(1) R1(1) R2(2) R3(3) E1(2) E2(1) E3(3) M0(1) M1(2)\n\u2709 \u2709 \u2709 \u2709L R E M \u2707S\u03c41 = L \u22c6 R \u22c6 E \u22c6M S\u03c41 1 = L2 \u22c6 R1 \u22c6 E2 \u22c6 M0 S\u03c41 2 = L2 \u22c6 R1 \u22c6 E1 \u22c6 M0\nTable 3. Compatibility (\u03c41)\nL2 R1 R2 R3 E1 E2 E3\nR1 R2 R3 E1 E2 E3 M0 M1\n3 2 2 3 3 1 3 1 3 2 2 3 1 2 2 1 3 3 1 2 3 2 2\n3 3 3 2 3 2\nThe resultant composite Pareto-efficient DAs are the following (Fig. 13): (a) S\u03c41\n1 = L2 \u22c6 R1 \u22c6 E2 \u22c6 M0, N(S \u03c41 1 ) = (2; 4, 0, 0);\n(b) S\u03c41 2 = L2 \u22c6 R1 \u22c6 E1 \u22c6 M0, N(S \u03c41 2 ) = (3; 3, 1, 0).\nL2(1) R2(1) R3(2) E2(2) E3(1) M1(1) M2(2)\n\u2709 \u2709 \u2709 \u2709L R E M \u2707S\u03c42 = L \u22c6 R \u22c6 E \u22c6M S\u03c42 1 = L2 \u22c6 R2 \u22c6 E3 \u22c6 M1\nTable 4. Compatibility (\u03c42)\nL2 R2 R3 E2 E3\nR2 R3 E2 E3 M1 M2\n3 2 2 3 3 2 2 3 3 2 2 3 3 2\n2 2\n7\nTable 5. Compatibility (\u03c43)\nL1 L2 R1 R2 R3 E1 E2 E3 R1 R2 R3 E1 E2 E3 M2 2 2 2 2 3 3 3 2 3 2 2 3 3 3 3 2 3 2 3 3 3 3 3 3 2 3 2 3 3\nThe resultant composite Pareto-efficient DAs are the following (Fig. 13): (a) S\u03c43\n1 = L1 \u22c6 R2 \u22c6 E3 \u22c6 M2, N(S \u03c43 1 ) = (2; 4, 0, 0);\n(b) S\u03c43 2 = L2 \u22c6 R2 \u22c6 E3 \u22c6 M2, N(S \u03c43 2 ) = (3; 3, 1, 0).\nTable 6 contains compatibility estimates for the obtained local solutions. It is assumed local solutions have the same priorities (i.e., 1). Thus, the final four-stage Pareto-efficient trajectory is (Fig. 14): \u03b1team =< S\u03c40\n1 \u22c6 S\u03c41 2 \u22c6 S\u03c42 1 \u22c6 S\u03c43 1 >, N(\u03b1team) = (3; 4, 0, 0).\nFig. 13. Poset of system quality\n\u2713 \u2713 \u2713 \u2713 \u2713 \u2713\n\u2759 \u2759 \u2759 \u2759 \u2759 \u2759\n\u2713 \u2713 \u2713 \u2713 \u2713 \u2713\n\u2759 \u2759 \u2759 \u2759 \u2759 \u2759\n\u2713 \u2713 \u2713 \u2713 \u2713 \u2713\n\u2759 \u2759 \u2759 \u2759 \u2759 \u2759\nt N(S\u03c41\n2 ), N(S\u03c43 2 )\ntN(S\u03c411 ), N(S\u03c431 ) r\u2763Idealpoint N(S \u03c40 1 ), N(S\u03c42 1 )\nw = 1\nw = 2\nw = 3\n\u261b\u2721 \u271f\u2720S\u03c401\u2717\u2716 \u2714 \u2715\u274d\u274d\u274d\u2765 \u261b\u2721 \u271f\u2720S \u03c41 1 S\u03c41 2 \u2717 \u2716 \u2714 \u2715\u271f\u271f\u271f\u272f \u261b\u2721 \u271f\u2720S\u03c421\u2717\u2716 \u2714 \u2715 \u2732 \u261b\u2721 \u271f\u2720S\u03c431 S\u03c43 2 \u2717 \u2716 \u2714 \u2715\n4.2. Tree-like Trajectory for Medical Treatment\nHere, multi-stage design for medical treatment is examined. The example is based on the following: (i) basic tree-like structure for medical treatment for children asthma from [20] (a simplified version); (ii) top-level network as a decision tree (Fig. 6); (iii) modified tree-like structure of medical treatment for each node of the decision tree. The considered tree-like trajectory for medical treatment with \u2019analysis/decision\u2019 nodes is depicted in\nFig. 15. Each node of the trajectory is based on a simplified hierarchical structure of medical treatment for children asthma that has been suggested in [20].\nThus, the examined structure of the basic composite medical plan is the following (priorities of DAs are shown in parentheses) (Fig. 16):\n8\nFig. 15. Decision-tree for medical treatment\n\u271b \u271a \u2718 \u2719 \u270e\u270d \u261e\u270c\u261b\u2721 \u271f\u2720\u00b50 \u2732\u270e\u270d \u261e\u270c\u261b\u2721 \u271f\u2720\u271e\u271d \u260e\u2706a0 \u2712 \u2745\u2758 \u271b \u271a \u2718 \u2719 \u270e\u270d \u261e\u270c\u261b\u2721 \u271f\u2720\u00b51 \u2732\u270e\u270d \u261e\u270c\u261b\u2721 \u271f\u2720\u271e\u271d \u260e\u2706a1 \u270f \u270f\u2736 PPq \u270e\u270d \u261e\u270c\u261b\u2721 \u271f\u2720\u00b52 \u270e\u270d \u261e\u270c\u261b\u2721 \u271f\u2720\u00b53 \u271b \u271a \u2718 \u2719 \u270e\u270d \u261e\u270c\u261b\u2721 \u271f\u2720\u00b54 \u2732\u270e\u270d \u261e\u270c\u261b\u2721 \u271f\u2720\u271e\u271d \u260e\u2706a4 \u270f \u270f\u2736 PPq \u270e\u270d \u261e\u270c\u261b\u2721 \u271f\u2720\u00b55 \u270e\u270d \u261e\u270c\u261b\u2721 \u271f\u2720\u00b56\nFig. 16. Hierarchical model of medical treatment plan [13,20]\n\u2707S\u00b50 = X \u22c6 Y \u22c6 Z S \u00b50 1\n= X3 \u22c6 Y1 \u22c6 Z1 S \u00b50 2\n= X3 \u22c6 Y1 \u22c6 Z2\u2709X = J \u22c6M X1 = J1 \u22c6 M2 X2 = J2 \u22c6 M2 X3 = J8 \u22c6 M2 \u2709Y = P \u22c6 H \u22c6 G Y1 = P1 \u22c6 H8 \u22c6 G1(1) \u2709Z = O \u22c6 K Z1 = O2 \u22c6 K1 Z2 = O3 \u22c6 K1\nr J J0(2) J1(1) J2(1) J3(2) J4(2) J5(2) J6(2) J7(3) J8(1)\nrM M0(2) M1(3) M2(1) M3(3) M4(3)\nr P P0(3) P1(2)\nr H H0(3) H1(2) H2(2) H3(2) H4(2) H5(2) H6(2) H7(2) H8 = H1&H4&H5&H7(1) rG G0(4) G1(1) r O O0(3) O1(2) O2(1) O3(1) O4(2) O5(2) O6(2) O7 = O2&O4(2) O8 = O3&O5(2) rK K0(2) K1(1) K2(3) K3(3) K4(3) K5(3)\n0. Medical plan S = X \u22c6 Y \u22c6 Z. 1. Basic treatment X = J \u22c6M : 1.1. Physical therapy J : none J0(2), massage J1(2), inhalation J2(2), sauna J3(3), reflexological therapy J4(3), laser-therapy J5(3), massage for special centers/points J6(3), reflexological therapy for special centers J7(4), halo-cameras or salt mines J8(2).\n1.2. Drug treatment M : none M0(2), vitamins M1(3), sodium chromoglycate (one month and two times in a year)M2(2), sodium chromoglycate (two months)M3(3), sodium chromoglycate (three months) M4(3).\n2. Psychological and ecological environment Y = P \u22c6 H \u22c6 G: 2.1. Psychological climate P : none P0(3), consulting of a psychologist P1(2). 2.2. Home ecological environment H : none H0(3), water cleaning H1(1), to clean a book dust H2(2), to take away cotton wool things (blanket, pillow, mattress) H3(1), to take away carpets H4(1), to exclude contacts with home animals H5(2), to destroy cockroach environment H6(2), to take away flowers H7(1), aggregated alternative H8 = H1&H4&H5&H7(1).\n2.2. General ecological environment G: none G0(4), improving the area of the residence G1(1). 3. Mode, rest and relaxation Z = O \u22c6 K: 3.1. Mode O: none O0(3), relaxation at the noon O1(1), special physical actions (drainage, expectoration) O2(1), sport (running, skiing, swimming) O3(1), comfort shower-bath O4(1), cold shower-bath O5(2), the exclude electronic gamesO6(2), aggregated alternativeO7 = O2&O4(2), aggregated alternative O8 = O3&O5(2).\n3.2. Relaxation/rest K: none K0(2), a rest at forest-like environment K1(2), a rest near see K2(3), a rest at mountains K3(4), special camps K4(3), treatment in salt mines K5(3).\nIn Fig. 16, the hierarchy (i.e., morphological structure) corresponds to logical point \u00b50 (Fig. 15).\n9 Estimates of compatibility for DAs are presented in Table 7, Table 8, and Table 9 [13,20] (as simplified version, for all logical points {\u00b50, \u00b51, \u00b52, \u00b53, \u00b54, \u00b55, \u00b56}). Estimates of compatibility for DAs at the higher hierarchical level are presented in Table 10 (\u00b50). Table 11 contains descriptions of logical points including references to corresponding morphological structures (Fig. 17, Fig. 18, Fig. 19, and Fig. 20). For point \u00b50 (Fig. 16), the resultant composite Pareto-efficient DAs are: (1) local Pareto-efficient solutions for subsystem X : X1 = J1 \u22c6 M2, N(X1) = (3; 2, 0); X2 = J2 \u22c6 M2, N(X2) = (3; 2, 0); X3 = J8 \u22c6 M2, N(X3) = (3; 2, 0); (2) local Pareto-efficient solutions for subsystem Y : Y1 = P1 \u22c6 H8 \u22c6 G1, N(Y1) = (3; 2, 1, 0); (3) local Pareto-efficient solutions for subsystem Z: Z1 = O1 \u22c6K2, N(Z1) = (3; 2, 0, 0); Z2 = O2 \u22c6K2, N(Z2) = (3; 2, 0, 0). (4) final composite Pareto-efficient DAs for system S: (a) S\u00b50\n1 = X3 \u22c6 Y1 \u22c6 Z1, (b) S \u00b50 2\n= X3 \u22c6 Y1 \u22c6 Z2. For point \u00b51 (Fig. 17), the resultant composite Pareto-efficient DA is: S \u00b51 1 = P1 \u22c6H8 \u22c6 G1, N(S \u00b51 1 ) =\n(3; 3, 0, 0). For point \u00b52 (Fig. 18, and for \u00b55), the resultant composite Pareto-efficient DAs are: (a) S \u00b52 1\n= O7\u22c6K1, N(S\u00b52\n1 ) = (3; 1, 1, 0); (b) S\u00b52 2 = O8 \u22c6 K1, N(S \u00b52 2 ) = (3; 1, 1, 0).\nFor point \u00b53 (Fig. 19), the resultant composite Pareto-efficient DAs are: (a) S \u00b53 1 = J1, (b) S \u00b53 2\n= J2, (c) S\u00b53\n3 = J8.\nFor point \u00b54 (Fig. 20, and for \u00b56), the resultant composite Pareto-efficient DAs are: (a) S \u00b54 1\n= J1\u22c6M1, N(S\u00b52\n1 ) = (3; 2, 0); (b) S\u00b54 2 = J2 \u22c6 M1, N(S \u00b52 2 ) = (3; 2, 0); (c) S\u00b54 3 = J8 \u22c6 M1, N(S \u00b52 3 ) = (2; 2, 0).\nTable 12 contains descriptions of \u2019analysis/decision\u2019 points. An example of the final tree solution is presented in Fig. 21.\nTable 7. Compatibility\nJ0 J1 J2 J3 J4 J5 J6 J7 J8\nM0 M1 M2 M3 M4\n0 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 2 2 3 3 3 2 2 3 3 3 2 2 3 3 3 3 3 3 3 3 3 3 3 2 2 2 2\nTable 8. Compatibility\nO0 O1 O2 O3 O4 O5 O6 O7 O8\nK0 K1 K2 K3 K4 K5\n0 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 2 3 3 3 3 3 3 3 3 2 2 2 2 2 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3\nTable 9. Compatibility\nP0 P1 G0 G1\nG0 G1 H0 H1 H2 H3 H4 H5 H6 H7 H8\n0 3 0 3 3 2 3 2 3 3 3 3 3 2 3 3 2 3 2 3 3 3\n0 3 3 2 3 2 3 3 3 2 3 3 2 3 2 3 3 3\nTable 10. Compatibility\nX1 X2 X3 Y1\nY1 Z1 Z2\n3 2 2 2 2 2 3 3 3\n3 3\nFig. 17. Treatment for point \u00b51\n\u2709S\u00b51 = P \u22c6 H \u22c6 G S \u00b51 1 = P1 \u22c6 H8 \u22c6 G1\nr P P0(3) P1(2)\nr H H0(3) H2(2) H3(2) H6(2) H8(1) rG G0(4) G1(1)\nFig. 18. Treatment for point \u00b52\n\u2709S\u00b52 = O \u22c6 K S \u00b52 1\n= O7 \u22c6 K1 S \u00b52 2\n= O8 \u22c6 K1r O O7 = O2&O4(2) O8 = O3&O5(2) rK K1(1) K2(3) K3(3) K4(3)\nTable 11. Logical points\nLogical point\nDescription\n\u00b50 Basic (fool) treatment (Fig. 16) \u00b51 Treatment by environment (Fig. 17) \u00b52 Additional treatment by relaxation (Fig. 18) \u00b53 Additional physical therapy (Fig. 19) \u00b54 Additional physical therapy and drug treatment (Fig. 20) \u00b55 Additional treatment by environment (Fig. 18) \u00b56 Additional physical therapy and drug treatment (Fig. 20)\nTable 12. \u2019Analysis/decision\u2019 points\n\u2019Analysis/ decision\u2019 point Description a0 (i) good results, go to \u00b51 (ii) not sufficient results, go to \u00b54 a1 (i) good results, go to \u00b52 (ii) not sufficient results, go to \u00b53 a4 (i) good results, go to \u00b55 (ii) not sufficient results, go to \u00b56\nFig. 21. Resultant tree-like trajectory\n\u270e\u270d \u261e\u270cS\u00b501 \u2745 \u2745\u2758 \u2712\n\u270e\u270d \u261e\u270cS\u00b511 \u2732\u2711 \u2711\u2711\u2738 \u270e\u270d \u261e\u270cS\u00b522\n\u270e\u270d \u261e\u270cS\u00b531 \u270e\u270d \u261e\u270cS\u00b543 \u2732\u2711\n\u2711\u2711\u2738 \u270e\u270d \u261e\u270cS\u00b552 = S\u00b522 \u270e\u270d \u261e\u270cS\u00b563 = S\u00b543\n4.3. Simplified Example over Directed Graph\nHere, a simplified example based on directed graph for top-level network is presented. This is a transformation of the example from previous section: medical treatment. Table 13 and Table 14 contains descriptions of logical points and \u2019analysis/decision\u2019 points. The same morphological structures of the treatment plans are examined. The decision tree from Fig. 15 is transformed into a general graph (with feedbacks): Fig. 22. In Fig. 23, an example of a preliminary solution graph is presented (e.g., for a certain patient).\n11\nTable 13. Logical points\nLogical point\nDescription\n\u00b50 Basic (fool) treatment (Fig. 16) \u00b51 Treatment by environment (Fig. 17) \u00b52 Additional treatment by relaxation (Fig. 18) \u00b53 Additional physical therapy (Fig. 19) \u00b54 Additional physical therapy and drug treatment (Fig. 20)\nTable 14. \u2019Analysis/decision\u2019 points\n\u2019Analysis/ decision\u2019 point\nDescription\na0 (i) good results, go to \u00b51 (ii) not sufficient results,\ngo to \u00b54\na1 (i) good results, go to \u00b52 (ii) not sufficient results,\ngo to \u00b53\na4 (i) good results, go to \u00b52 (ii) medium level of\nresults, go to \u00b51 (ii) not sufficient results,\ngo to \u00b50\nFig. 22. Example of general graph\n\u271b \u271a\n\u2718 \u2719 \u270e\u270d \u261e\u270c\u261b\u2721 \u271f\u2720\u00b50 \u2732\u270e\u270d \u261e\u270c\u261b\u2721 \u271f\u2720\u271e\u271d \u260e\u2706a0 \u2712 \u2745\u2758\n\u271b \u271a\n\u2718 \u2719 \u270e\u270d \u261e\u270c\u261b\u2721 \u271f\u2720\u00b51 \u2732\u270e\u270d \u261e\u270c\u261b\u2721 \u271f\u2720\u271e\u271d \u260e\u2706a1 \u270f \u270f\u2736 PPq \u270e\u270d \u261e\u270c\u261b\u2721 \u271f\u2720\u00b52 \u270e\u270d \u261e\u270c\u261b\u2721 \u271f\u2720\u00b53\n\u271b \u271a\n\u2718 \u2719 \u270e\u270d \u261e\u270c\u261b\u2721 \u271f\u2720\u00b54 \u2732\u270e\u270d \u261e\u270c\u261b\u2721 \u271f\u2720\u271e\u271d \u260e\u2706a4 \u274d \u2744\n\u2720\n\u2747 \u2747 \u2747 \u2747 \u2747\u2747\u25c6\nFig. 23. Example of solution graph\n\u271b \u271a\n\u2718 \u2719 \u270e\u270d \u261e\u270cS\u00b502 \u2732\u270e\u270d \u261e\u270c\u261b\u2721 \u271f\u2720\u271e\u271d \u260e\u2706a0 \u2712\n\u2745\u2758 \u271b \u271a\n\u2718 \u2719 \u270e\u270d \u261e\u270cS\u00b511 \u2732\u270e\u270d \u261e\u270c\u261b\u2721 \u271f\u2720\u271e\u271d \u260e\u2706a1 \u270f \u270f\u2736 PPq \u270e\u270d \u261e\u270cS\u00b522 \u270e\u270d \u261e\u270cS\u00b533\n\u271b \u271a\n\u2718 \u2719 \u270e\u270d \u261e\u270cS\u00b542 \u2732\u270e\u270d \u261e\u270c\u261b\u2721 \u271f\u2720\u271e\u271d \u260e\u2706a4 \u274d \u2744\n\u2720\n\u2747 \u2747 \u2747 \u2747 \u2747\u2747\u25c6\n4.4. On Multiple Domain Problems\nThe multistage strategies can be considered for various domains: system design, system testing, medical treatment, medical diagnosis. Fig. 24 illustrates a multistage trajectory for multistage diagnosis or system testing: (i) points {\u03b80, \u03b81, ..., \u03b8k} correspond to diagnosis/testing, (ii) points {a0, a1, ..., ak} correspond to analysis/decision, and (iii) morphological structures for test points are: {\u039b\u03b80 ,\u039b\u03b81, ...,\u039b\u03b8k}. On the other hand, it may be reasonable to examine multistage trajectories for two domains (Fig. 25): (a) system testing, (b) system design. Here, the following notations are used: (i) points {\u03b81, \u03b82, ..., \u03b8k} correspond to system testing/diagnosis, (ii) points {a0, a1, ..., ak} correspond to analysis/decision, (iii) points {\u03be1, \u03be2, ..., \u03beq} correspond to system design/redesign, (iv) morphological structures for test points are: {\u039b\u03b80,\u039b\u03b81 , ...,\u039b\u03b8k}, and (v) morphological structures for design/redesign points are: {\u039b\u03be0 ,\u039b\u03be1 , ...,\u039b\u03beq}.\nThus, the combined multistage strategy involves two parts: (a) multistage strategy for system testing and (b) multistage strategy for system improvement/redesign. Note, two-domain problem can correspond to the following domains: system utilization and system maintenance. Evidently, parts for different domains can have more complicated forms (i.e., over digraph).\n5. Conclusion\nThe paper describes multistage design for a composite (modular) system (i.e., design of system trajectories). In the complicated situations, the multistage design is extended for graph-based design structures. Composition of the graph-based design structures lead to prospective multi-domain problems, for example: (a) system testing/diagnosis and system improvement/redesign, (b) medical diagnosis and medical treatment, (c) system utilization and system maintenance. It is necessary to note, the described approach is close to finite-state machines or state transition diagrams (e.g., [4,6,7,8,10,23]). On the other hand, it is interesting to consider a similarity of the described approach and dynamic decision making methods (e.g., [2]).\nIn the future, it may be reasonable to consider the following research directions: (1) examination of various real-world applications (e.g., medical diagnosis and medical treatment, communication networks); (2) study and usage of multistage system trajectories for multiple domains problems (e.g., system testing, system maintenance, system utilization, system improvement/redesign) including inter-domains interconnection;\n(3) special study of formal models for \u2019analysis/decision\u2019 points (states); (4) taking into account uncertainty and extension of the described approach; (5) examination of a dynamic described approach while taking into account changes of external requirements; (6) design of a special computer environment; and (7) usage of the described system approaches in education (computer science, engineering, applied mathematics, management).\nREFERENCES\n1. C.Y. Baldwin, K.B. Clark, Design Rules: The Power of Modularity. MIT Press, Cambridge, Mass., 2000. 2. P.C.G. Da Costa, D.M. Buede, Dynamic decision making: a comparison of approaches. J. of MultiCriteria Decision Analysis, 9(6) (2000) 243\u2013262. 3. J.B. Dahmus, J.P. Gonzalez-Zugasti, K.N. Otto, Modular product architecture. Design Studies, 22(5) (2001) 409\u2013424. 4. D. Drusinsky, Modeling and Verification Using UML Statecharts. Elsevier, Amsterdam, 2006. 5. R. Garud, A. Kumaraswamy, R. Langlois (Eds.) Managing in the Age of Modularity: Architecture,\nNetworks, and Organizations. J.Wiley& Sons, New York, 2009. 6. D. Harel, STATECHARTS: A visual formalism for complex systems. Science of Computer Program-\nming, 8(3) (1987) 231\u2013274.\n13\n7. D. Harel, M. Politi, Modeling Reactive Systems with Statecharts: The STATEMATE Approach. McGraw-Hill, New York, 1998. 8. J. Hopcroft, J. Ullman, Introduction to Automata Theory, Languages, and Computation. Addison Wesley, Reading, MA, 1979. 9. C.C. Huang, A. Kusiak, Modularity in design of products and systems. IEEE Trans. SMC - Part A, 28(10) (1998) 66\u201377. 10. R.J.K. Jacob, Using formal specification in the design of a human-computer interface. Commun. of the ACM, 26(4) (1983) 259\u2013264. 11. A. Jose, M. Tollenaere, Modular and platform methods for product family design: literature analysis. J. of Intelligent Manufacturing, 16(3) (2005) 371\u2013390. 12. M.Sh. Levin, Combinatorial Engineering of Decomposbale Systems. Kluwer Academic Publishers, Boston, 1998. 13. M.Sh. Levin, Composite Systems Decisions. Springer, London, 2006. 14. M.Sh. Levin, Towards configuration of applied Web-based information system. Electronic preprint,\n13 pp., Aug. 31, 2011. http://arxiv.org/abs/3108.3865 [cs.SE] 15. M.Sh. Levin, Morphological methods for design of modular systems (a survey). Electronic preprint.\n20 pp., Jan. 9, 2012. http://arxiv.org/abs/1201.1712 [cs.SE] 16. M.Sh. Levin, Multiset estimates and combinatorial synthesis. Electronic preprint. 30 pp., May 9,\n2012. http://arxiv.org/abs/1205.2046 [cs.SY] 17. M.Sh. Levin, Composite strategy for multicriteria ranking/sorting (methodological issues, examples).\nElectronic preprint. 24 pp., Nov. 9, 2012. http://arxiv.org/abs/1211.2245 [math.OC] 18. M.Sh. Levin, Towards design of system hierarchy (research survey). Electronic preprint. 36 pp., Dec.\n7, 2012. http://arxiv.org/abs/1212.1735 [math.OC] 19. M.Sh. Levin, Note on combinatorial engineering frameworks for hierarchical modular systems. Elec-\ntronic preprint. 11 pp., Mar. 29, 2013. http://arxiv.org/abs/1304.0030 [math.OC] 20. M.Sh. Levin, L.V. Sokolova, Hierarchical combinatorial planning of medical treatment. Computer\nMethods and Programs in Biomedicine, 73(1) (2004) 3\u201311. 21. K. Ulrich, Fundamentals of product modularity. In: S. Dasu et al. (Eds.) Management of Design,\nSpringer, New York, 219\u2013231, 1994. 22. C.A. Voss, J. Hsuan, Service architecture and modularity. Decision Sciences 40(3) (2009) 541\u2013569. 23. A.I. Wassesrman, Extending state transition diagrams for the specification of human-computer sys-\ntems. IEEE Trans. of Software Engineering, 11(8) (1985) 699\u2013713."}], "references": [{"title": "Design Rules: The Power of Modularity", "author": ["C.Y. Baldwin", "K.B. Clark"], "venue": null, "citeRegEx": "1", "shortCiteRegEx": "1", "year": 2000}, {"title": "Buede, Dynamic decision making: a comparison of approaches", "author": ["D.M.P.C.G. Da Costa"], "venue": "J. of MultiCriteria Decision Analysis,", "citeRegEx": "2", "shortCiteRegEx": "2", "year": 2000}, {"title": "Modular product architecture", "author": ["J.B. Dahmus", "J.P. Gonzalez-Zugasti", "K.N. Otto"], "venue": "Design Studies,", "citeRegEx": "3", "shortCiteRegEx": "3", "year": 2001}, {"title": "Modeling and Verification Using UML Statecharts", "author": ["D. Drusinsky"], "venue": null, "citeRegEx": "4", "shortCiteRegEx": "4", "year": 2006}, {"title": "Managing in the Age of Modularity: Architecture, Networks, and Organizations", "author": ["R. Garud", "A. Kumaraswamy", "R. Langlois (Eds"], "venue": null, "citeRegEx": "5", "shortCiteRegEx": "5", "year": 2009}, {"title": "STATECHARTS: A visual formalism for complex systems", "author": ["D. Harel"], "venue": "Science of Computer Programming,", "citeRegEx": "6", "shortCiteRegEx": "6", "year": 1987}, {"title": "Modeling Reactive Systems with Statecharts: The STATEMATE Approach", "author": ["D. Harel", "M. Politi"], "venue": null, "citeRegEx": "7", "shortCiteRegEx": "7", "year": 1998}, {"title": "Introduction to Automata Theory, Languages, and Computation", "author": ["J. Hopcroft", "J. Ullman"], "venue": null, "citeRegEx": "8", "shortCiteRegEx": "8", "year": 1979}, {"title": "Modularity in design of products and systems", "author": ["C.C. Huang", "A. Kusiak"], "venue": "IEEE Trans. SMC - Part A,", "citeRegEx": "9", "shortCiteRegEx": "9", "year": 1998}, {"title": "Using formal specification in the design of a human-computer interface", "author": ["R.J.K. Jacob"], "venue": "Commun. of the ACM,", "citeRegEx": "10", "shortCiteRegEx": "10", "year": 1983}, {"title": "Modular and platform methods for product family design: literature analysis", "author": ["A. Jose", "M. Tollenaere"], "venue": "J. of Intelligent Manufacturing,", "citeRegEx": "11", "shortCiteRegEx": "11", "year": 2005}, {"title": "Combinatorial Engineering of Decomposbale Systems", "author": ["M.Sh. Levin"], "venue": null, "citeRegEx": "12", "shortCiteRegEx": "12", "year": 1998}, {"title": "Composite Systems Decisions", "author": ["M.Sh. Levin"], "venue": null, "citeRegEx": "13", "shortCiteRegEx": "13", "year": 2006}, {"title": "Towards configuration of applied Web-based information system", "author": ["M.Sh. Levin"], "venue": "Electronic preprint,", "citeRegEx": "14", "shortCiteRegEx": "14", "year": 2011}, {"title": "Morphological methods for design of modular systems (a survey)", "author": ["M.Sh. Levin"], "venue": "Electronic preprint", "citeRegEx": "15", "shortCiteRegEx": "15", "year": 2012}, {"title": "Multiset estimates and combinatorial synthesis", "author": ["M.Sh. Levin"], "venue": "Electronic preprint. 30 pp., May", "citeRegEx": "16", "shortCiteRegEx": "16", "year": 2012}, {"title": "Composite strategy for multicriteria ranking/sorting (methodological issues, examples)", "author": ["M.Sh. Levin"], "venue": "Electronic preprint", "citeRegEx": "17", "shortCiteRegEx": "17", "year": 2012}, {"title": "Towards design of system hierarchy (research survey)", "author": ["M.Sh. Levin"], "venue": "Electronic preprint", "citeRegEx": "18", "shortCiteRegEx": "18", "year": 2012}, {"title": "Note on combinatorial engineering frameworks for hierarchical modular systems", "author": ["M.Sh. Levin"], "venue": "Electronic preprint. 11 pp., Mar", "citeRegEx": "19", "shortCiteRegEx": "19", "year": 2013}, {"title": "Hierarchical combinatorial planning of medical treatment", "author": ["M.Sh. Levin", "L.V. Sokolova"], "venue": "Computer Methods and Programs in Biomedicine,", "citeRegEx": "20", "shortCiteRegEx": "20", "year": 2004}, {"title": "Fundamentals of product modularity", "author": ["K. Ulrich"], "venue": "In: S. Dasu et al. (Eds.) Management of Design, Springer, New York,", "citeRegEx": "21", "shortCiteRegEx": "21", "year": 1994}, {"title": "Service architecture and modularity", "author": ["C.A. Voss", "J. Hsuan"], "venue": "Decision Sciences", "citeRegEx": "22", "shortCiteRegEx": "22", "year": 2009}, {"title": "Extending state transition diagrams for the specification of human-computer systems", "author": ["A.I. Wassesrman"], "venue": "IEEE Trans. of Software Engineering,", "citeRegEx": "23", "shortCiteRegEx": "23", "year": 1985}], "referenceMentions": [{"referenceID": 0, "context": ", [1,3, 5,9,11,12,13,15,19,21,22]).", "startOffset": 2, "endOffset": 33}, {"referenceID": 2, "context": ", [1,3, 5,9,11,12,13,15,19,21,22]).", "startOffset": 2, "endOffset": 33}, {"referenceID": 4, "context": ", [1,3, 5,9,11,12,13,15,19,21,22]).", "startOffset": 2, "endOffset": 33}, {"referenceID": 8, "context": ", [1,3, 5,9,11,12,13,15,19,21,22]).", "startOffset": 2, "endOffset": 33}, {"referenceID": 10, "context": ", [1,3, 5,9,11,12,13,15,19,21,22]).", "startOffset": 2, "endOffset": 33}, {"referenceID": 11, "context": ", [1,3, 5,9,11,12,13,15,19,21,22]).", "startOffset": 2, "endOffset": 33}, {"referenceID": 12, "context": ", [1,3, 5,9,11,12,13,15,19,21,22]).", "startOffset": 2, "endOffset": 33}, {"referenceID": 14, "context": ", [1,3, 5,9,11,12,13,15,19,21,22]).", "startOffset": 2, "endOffset": 33}, {"referenceID": 18, "context": ", [1,3, 5,9,11,12,13,15,19,21,22]).", "startOffset": 2, "endOffset": 33}, {"referenceID": 20, "context": ", [1,3, 5,9,11,12,13,15,19,21,22]).", "startOffset": 2, "endOffset": 33}, {"referenceID": 21, "context": ", [1,3, 5,9,11,12,13,15,19,21,22]).", "startOffset": 2, "endOffset": 33}, {"referenceID": 11, "context": ", [12,13,15,18]).", "startOffset": 2, "endOffset": 15}, {"referenceID": 12, "context": ", [12,13,15,18]).", "startOffset": 2, "endOffset": 15}, {"referenceID": 14, "context": ", [12,13,15,18]).", "startOffset": 2, "endOffset": 15}, {"referenceID": 17, "context": ", [12,13,15,18]).", "startOffset": 2, "endOffset": 15}, {"referenceID": 11, "context": "Series and parallelseries strategies for ranking/sorting [12,17] 2.", "startOffset": 57, "endOffset": 64}, {"referenceID": 16, "context": "Series and parallelseries strategies for ranking/sorting [12,17] 2.", "startOffset": 57, "endOffset": 64}, {"referenceID": 13, "context": "Series strategy for Web-based system (provider) [14] 3.", "startOffset": 48, "endOffset": 52}, {"referenceID": 11, "context": ", [12,13,15,16].", "startOffset": 2, "endOffset": 15}, {"referenceID": 12, "context": ", [12,13,15,16].", "startOffset": 2, "endOffset": 15}, {"referenceID": 14, "context": ", [12,13,15,16].", "startOffset": 2, "endOffset": 15}, {"referenceID": 15, "context": ", [12,13,15,16].", "startOffset": 2, "endOffset": 15}, {"referenceID": 11, "context": ", [12,13]):", "startOffset": 2, "endOffset": 9}, {"referenceID": 12, "context": ", [12,13]):", "startOffset": 2, "endOffset": 9}, {"referenceID": 11, "context": ", [12,13,15]).", "startOffset": 2, "endOffset": 12}, {"referenceID": 12, "context": ", [12,13,15]).", "startOffset": 2, "endOffset": 12}, {"referenceID": 14, "context": ", [12,13,15]).", "startOffset": 2, "endOffset": 12}, {"referenceID": 19, "context": "The example is based on the following: (i) basic tree-like structure for medical treatment for children asthma from [20] (a simplified version); (ii) top-level network as a decision tree (Fig.", "startOffset": 116, "endOffset": 120}, {"referenceID": 19, "context": "Each node of the trajectory is based on a simplified hierarchical structure of medical treatment for children asthma that has been suggested in [20].", "startOffset": 144, "endOffset": 148}, {"referenceID": 12, "context": "Hierarchical model of medical treatment plan [13,20] \u2707S\u03bc0 = X \u22c6 Y \u22c6 Z S \u03bc0 1 = X3 \u22c6 Y1 \u22c6 Z1 S \u03bc0 2 = X3 \u22c6 Y1 \u22c6 Z2 \u2709X = J \u22c6M X1 = J1 \u22c6 M2 X2 = J2 \u22c6 M2 X3 = J8 \u22c6 M2 \u2709Y = P \u22c6 H \u22c6 G Y1 = P1 \u22c6 H8 \u22c6 G1(1) \u2709Z = O \u22c6 K Z1 = O2 \u22c6 K1 Z2 = O3 \u22c6 K1", "startOffset": 45, "endOffset": 52}, {"referenceID": 19, "context": "Hierarchical model of medical treatment plan [13,20] \u2707S\u03bc0 = X \u22c6 Y \u22c6 Z S \u03bc0 1 = X3 \u22c6 Y1 \u22c6 Z1 S \u03bc0 2 = X3 \u22c6 Y1 \u22c6 Z2 \u2709X = J \u22c6M X1 = J1 \u22c6 M2 X2 = J2 \u22c6 M2 X3 = J8 \u22c6 M2 \u2709Y = P \u22c6 H \u22c6 G Y1 = P1 \u22c6 H8 \u22c6 G1(1) \u2709Z = O \u22c6 K Z1 = O2 \u22c6 K1 Z2 = O3 \u22c6 K1", "startOffset": 45, "endOffset": 52}, {"referenceID": 12, "context": "Estimates of compatibility for DAs are presented in Table 7, Table 8, and Table 9 [13,20] (as simplified version, for all logical points {\u03bc0, \u03bc1, \u03bc2, \u03bc3, \u03bc4, \u03bc5, \u03bc6}).", "startOffset": 82, "endOffset": 89}, {"referenceID": 19, "context": "Estimates of compatibility for DAs are presented in Table 7, Table 8, and Table 9 [13,20] (as simplified version, for all logical points {\u03bc0, \u03bc1, \u03bc2, \u03bc3, \u03bc4, \u03bc5, \u03bc6}).", "startOffset": 82, "endOffset": 89}, {"referenceID": 3, "context": ", [4,6,7,8,10,23]).", "startOffset": 2, "endOffset": 17}, {"referenceID": 5, "context": ", [4,6,7,8,10,23]).", "startOffset": 2, "endOffset": 17}, {"referenceID": 6, "context": ", [4,6,7,8,10,23]).", "startOffset": 2, "endOffset": 17}, {"referenceID": 7, "context": ", [4,6,7,8,10,23]).", "startOffset": 2, "endOffset": 17}, {"referenceID": 9, "context": ", [4,6,7,8,10,23]).", "startOffset": 2, "endOffset": 17}, {"referenceID": 22, "context": ", [4,6,7,8,10,23]).", "startOffset": 2, "endOffset": 17}, {"referenceID": 1, "context": ", [2]).", "startOffset": 2, "endOffset": 5}], "year": 2013, "abstractText": "The paper describes multistage design of composite (modular) systems (i.e., design of a system trajectory). This design process consists of the following: (i) definition of a set of time/logical points; (ii) modular design of the system for each time/logical point (e.g., on the basis of combinatorial synthesis as hierarchical morphological design or multiple choice problem) to obtain several system solutions; (iii) selection of the system solution for each time/logical point while taking into account their quality and the quality of compatibility between neighbor selected system solutions (here, combinatorial synthesis is used as well). Mainly, the examined time/logical points are based on a time chain. In addition, two complicated cases are considered: (a) the examined logical points are based on a tree-like structure, (b) the examined logical points are based on a digraph. Numerical examples illustrate the approach.", "creator": "LaTeX with hyperref package"}}}