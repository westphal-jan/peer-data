{"id": "1401.4593", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "18-Jan-2014", "title": "Location-Based Reasoning about Complex Multi-Agent Behavior", "abstract": "Recent research has shown that surprisingly rich models of human activity can be learned from GPS (positional) data. However, most effort to date has concentrated on modeling single individuals or statistical properties of groups of people. Moreover, prior work focused solely on modeling actual successful executions (and not failed or attempted executions) of the activities of interest. We, in contrast, take on the task of understanding human interactions, attempted interactions, and intentions from noisy sensor data in a fully relational multi-agent setting. We use a real-world game of capture the flag to illustrate our approach in a well-defined domain that involves many distinct cooperative and competitive joint activities. We model the domain using Markov logic, a statistical-relational language, and learn a theory that jointly denoises the data and infers occurrences of high-level activities, such as a player capturing an enemy. Our unified model combines constraints imposed by the geometry of the game area, the motion model of the players, and by the rules and dynamics of the game in a probabilistically and logically sound fashion. We show that while it may be impossible to directly detect a multi-agent activity due to sensor noise or malfunction, the occurrence of the activity can still be inferred by considering both its impact on the future behaviors of the people involved as well as the events that could have preceded it. Further, we show that given a model of successfully performed multi-agent activities, along with a set of examples of failed attempts at the same activities, our system automatically learns an augmented model that is capable of recognizing success and failure, as well as goals of peoples actions with high accuracy. We compare our approach with other alternatives and show that our unified model, which takes into account not only relationships among individual players, but also relationships among activities over the entire length of a game, although more computationally costly, is significantly more accurate. Finally, we demonstrate that explicitly modeling unsuccessful attempts boosts performance on other important recognition tasks.", "histories": [["v1", "Sat, 18 Jan 2014 21:04:39 GMT  (2211kb)", "http://arxiv.org/abs/1401.4593v1", null]], "reviews": [], "SUBJECTS": "cs.MA cs.AI", "authors": ["adam sadilek", "henry kautz"], "accepted": false, "id": "1401.4593"}, "pdf": {"name": "1401.4593.pdf", "metadata": {"source": "CRF", "title": "Location-Based Reasoning about Complex Multi-Agent Behavior", "authors": ["Adam Sadilek", "Henry Kautz"], "emails": ["SADILEK@CS.ROCHESTER.EDU", "KAUTZ@CS.ROCHESTER.EDU"], "sections": [{"heading": null, "text": "GPS (positional) data. However, most effort to date has concentrated on modeling single individuals or statistical properties of groups of people. Moreover, prior work focused solely on modeling actual successful executions (and not failed or attempted executions) of the activities of interest. We, in contrast, take on the task of understanding human interactions, attempted interactions, and intentions from noisy sensor data in a fully relational multi-agent setting. We use a real-world game of capture the flag to illustrate our approach in a well-defined domain that involves many distinct cooperative and competitive joint activities. We model the domain using Markov logic, a statistical-relational language, and learn a theory that jointly denoises the data and infers occurrences of high-level activities, such as a player capturing an enemy. Our unified model combines constraints imposed by the geometry of the game area, the motion model of the players, and by the rules and dynamics of the game in a probabilistically and logically sound fashion. We show that while it may be impossible to directly detect a multi-agent activity due to sensor noise or malfunction, the occurrence of the activity can still be inferred by considering both its impact on the future behaviors of the people involved as well as the events that could have preceded it. Further, we show that given a model of successfully performed multi-agent activities, along with a set of examples of failed attempts at the same activities, our system automatically learns an augmented model that is capable of recognizing success and failure, as well as goals of people\u2019s actions with high accuracy. We compare our approach with other alternatives and show that our unified model, which takes into account not only relationships among individual players, but also relationships among activities over the entire length of a game, although more computationally costly, is significantly more accurate. Finally, we demonstrate that explicitly modeling unsuccessful attempts boosts performance on other important recognition tasks."}, {"heading": "1. Introduction", "text": "Our society is founded on the interplay of human relationships and interactions. Since every person is tightly embedded in our social structure, the vast majority of human behavior can be fully understood only in the context of the actions of others. Thus, not surprisingly, more and more evidence shows that when we want to model behavior of a person, the single best predictor is often the behavior of people in her social network. For instance, behavioral patterns of people taking taxis, rating movies, choosing a cell phone provider, or sharing music are best explained and predicted by the habits of related people, rather than by all the \u201csingle person\u201d attributes such as age, race, or education (Bell, Koren, & Volinsky, 2007; Pentland, 2008).\nIn contrast to these observations, most research effort on activity recognition to date has concentrated on modeling single individuals (Bui, 2003; Liao, Fox, & Kautz, 2004, 2005), or statistical properties of aggregate groups of individuals (Abowd, Atkeson, Hong, Long, Kooper, & Pinkerton, 1997; Horvitz, Apacible, Sarin, & Liao, 2005), or combinations of both (Eagle & Pentland, 2006).\nc\u00a92012 AI Access Foundation. All rights reserved.\nNotable exceptions to this \u201cisolated individuals\u201d approach includes the work of Kamar and Horvitz (2009) and Gupta, Srinivasan, Shi, and Davis (2009), where simple relationships among people are just starting to be explicitly considered and leveraged. For instance, Eagle and Pentland (2006) elegantly model the location of individuals from multi-modal sensory data, but their approach is oblivious to the explicit effects of one\u2019s friends, relatives, etc. on one\u2019s behavior. The isolated individuals approximations are often made for the sake of tractability and representational convenience. While considering individuals independently of each other is sufficient for some constrained tasks, in many interesting domains it discards a wealth of important information or results in an inefficient and unnatural data representation. On the other hand, decomposing a domain into a set of entities (representing for instance people, objects in their environment, or activities) that are linked by various relationships (e.g., is-a, has-a, is-involved-in) is a natural and clear way of representing data.\nTo address the shortcomings of nonrelational behavior modeling, we introduce the capture the flag domain (described below), and argue for a statistical-relational approach to learning models of multi-agent behavior from raw GPS data. The CTF dataset is on one hand quite complex and recorded by real-world sensors, but at the same time it is well-defined (as per the rules of the game), thereby allowing for an unambiguous evaluation of the results.\nBeing able to recognize people\u2019s activities and reason about their behavior is a necessary precondition for having intelligent and helpful machines that are aware of \u201cwhat is going on\u201d in the human-machine as well as human-human relationships. There are many exciting practical applications of activity recognition that have the potential to fundamentally change people\u2019s lives. For example, cognitive assistants that help people and teams be more productive, or provide support to (groups of) disabled individuals, or efficiently summarize a long complex event to a busy person without leaving out essential information. Other important applications include intelligent navigation, security (physical as well as digital), human-computer interaction, and crowdsourcing. All these applications and a myriad of others build on top of multi-agent activity recognition and therefore require it as a necessary stepping stone. Furthermore, as a consequence of the anthropocentrism of our technology, modeling human behavior plays\u2014perhaps surprisingly\u2014a significant role even in applications that do not directly involve people (e.g., unmanned space probes).\nFurthermore, reasoning about human intentions is an essential element of activity recognition, since if we can recognize what a person (or a group of people) wants to do, we can proactively try to help them (or\u2014in adversarial situations\u2014hinder them). Intent is notoriously problematic to quantify (e.g., Baldwin & Baird, 2001), but we show that in the capture the flag domain, the notion is naturally captured in the process of learning the structure of failed activities. We all know perhaps too well that a successful action is often preceded\u2014and unfortunately sometimes also followed\u2014by multiple failed attempts. Therefore, reasoning about attempts typically entails high practical utility, but not just for their relatively high frequency. Consider, for example, a task of real-time analysis of a security video system. There, detecting that a person or a group of people (again, relations) intend to steal something is much more important and useful than recognizing that a theft has taken (or even is taking) place, because then it is certainly too late to entirely prevent the incident, and it may also be too late or harder to merely stop it. We believe that recognition of attempts in people\u2019s activities is a severely underrepresented topic in artificial intelligence that needs to be explored more since it opens a new realm of interesting possibilities.\nBefore we delve into the details of our approach in Sections 5 and 6, we briefly introduce the CTF dataset (Section 2), highlight the main contributions of our work (Section 3), and review\nbackground material (Section 4). We discuss related work, conclude, and outline future work in Sections 7, 8 and 9 respectively.\nThis paper incorporates and extends our previous work (Sadilek & Kautz, 2010a, 2010b)."}, {"heading": "2. Capture The Flag Domain", "text": "Imagine two teams\u2014seven players each\u2014playing capture the flag (CTF) on a university campus, where each player carries a consumer-grade global positioning system (GPS) that logs its location (plus noise) every second (see Figure 1). The primary goal is to enter the opponent\u2019s flag area. Players can be captured only while on enemy territory by being tagged by the enemy. Upon being captured, they must remain in place until freed (tagged by a teammate) or the game ends. The games involve many competitive and cooperative activities, but here we focus on (both successful and attempted) capturing and freeing. Visualization of the games is available from the first author\u2019s website.\nWe collected four games of CTF on a portion of the University of Rochester campus (about 23 acres) with Columbus V-900 GPS loggers (one per player) with 1 GB memory card each that were set to a sampling rate of 1 Hz. The durations of the games ranged approximately from 4 to 15 minutes.\nOur work is not primarily motivated by the problem of annotating strategy games, although there are obvious applications of our results to sports and combat situations. We are, more generally, exploring relational learning and inference methods for recognizing multi-agent activities from location data. We accept the fact that the GPS data at our disposal is inherently unreliable and ambiguous for any one individual. We therefore focus on methods that jointly and simultaneously localize and recognize the high-level activities of groups of individuals.\nAlthough the CTF domain doesn\u2019t capture all the intricacies of life, it contains many complex, interesting, and yet well-defined (multi-agent) activities. Moreover, it is based on extensive real-world GPS data (total of 40,000+ data points). Thus most of the problems that we are addressing here clearly have direct analogs in everyday-life situations that ubiquitous computing needs to address\u2014imagine people going about their daily lives in a city instead of CTF players, and their own smart phones instead of GPS loggers.\nOne of the main challenges we have to overcome if we are to successfully model CTF is the severe noise present in the data. Accuracy of the GPS data varies from 1 to more than 10 meters. In open areas, readings are typically off by 3 meters, but the discrepancy is much higher in locations with tall buildings (which are present within the game area) or other obstructions. Compare the scale of the error with the granularity of the activities we concern ourselves with: both capturing and freeing involves players that are within reaching distance (less than 1 meter) apart. Therefore, the signal to noise ratio in this domain is daunting.\nThe error has a systematic component as well as a significant stochastic component. Errors between devices are poorly correlated, because subtle differences between players, such as the angle at which the device sits in the player\u2019s pocket, can dramatically affect accuracy. Moreover, since we consider multi-agent scenarios, the errors in individual players\u2019 readings can add up, thereby creating a large discrepancy between the reality and the recorded dataset. Because players can move freely through open areas, we cannot reduce the data error by assuming that the players move along road or walkways, as is done in much work on GPS-based activity recognition (e.g., Liao et al., 2004). Finally, traditional techniques for denoising GPS data, such as Kalman filtering, are\nhttp://www.cs.rochester.edu/u/sadilek/\nof little help, due to the low data rate (1 sample per second) relative to the small amount of time required for a player to completely change her speed or direction.\nIf we are to reliably recognize events that happen in these games in the presence of such severe noise, we need to consider not only each player, but also the relationships among them and their actions over extended periods of time (possibly the whole length of the game). Consider a concrete task of inferring the individual and joint activities and intentions of the CTF players from their GPS traces. For example, suppose the GPS data shows player A running toward a stationary teammate B, then moving away. What occurred? Possibly player A has just \u201cfreed\u201d player B, but GPS error has hidden the fact that player A actually reached B. Another possibility is that player A had the intention of freeing player B, but was scared off by an opponent at the last second. Yet another possibility is that no freeing occurred nor was even intended, because player B had not been previously captured.\nUnderstanding a game thus consists of inferring a complex set of interactions among the various players as well as the players\u2019 intentions. The conclusions drawn about what occurs at one point in time affect and are affected by inferences about past and future events. In the example just given, recognizing that player B is moving in the future reinforces the conclusion that player A is freeing player B, while failing to recognize a past event of player B being captured decreases confidence in that conclusion. The game of CTF also illustrates that understanding a situation is as much or more about recognizing attempts and intentions as about recognizing successfully executed actions. For example, in course of a 15 minute game, only a handful of capture or freeing events occur. However, there are dozens of cases where one player unsuccessfully tries to capture an opponent or to free a teammate. A description of a game that was restricted to what actually occurred would be only a pale reflection of the original.\nAs a concrete example, consider a real game situation illustrated in Figure 2. There we see three snapshots of a game projected over a map of the campus before any modification of the GPS data. The game time is shown on each snapshot. Players D, F, and G are allies and are currently on their home territory near their flag, whereas players L and M are their enemies. In the first snapshot, players L and M head for the opponent\u2019s flag but then\u2014in the second frame\u2014they are intercepted by G. At this point it is unclear what is happening because of the substantial error in the GPS data\u2014\nthe three players appear to be very close to each other, but in actuality they could have been 20 or more meters apart. However, once we see the third snapshot (note that tens of seconds have passed) we realize that player G actually captured only player M and didn\u2019t capture L since G is evidently still chasing L. The fact that player M remains stationary coupled with the fact that neither D nor F attempt to capture him suggests that M has indeed been captured. We show that it is possible to infer occurrences of capturing events even for complex situations like these whereas limited approaches largely fail. However, we need to be able to recognize not just individual events, we also need to discover new activities, identify their respective goals, and distinguish between events based on whether their outcomes are favorable or negative. For instance, in the second frame, player G tries to capture both L and M. Although he succeeded in the former case, he failed in the latter.\nMany different kinds of cooperative and competitive multi-agent activities occur in the games. The lowest-level joint activities are based on location and movement, and include \u201capproaching\u201d and \u201cbeing at the same location.\u201d Note, that noise in the GPS data often makes it difficult or impossible to directly detect these simple activities. At the next level come competitive multi-agent activities including capturing and attacking; cooperative activities include freeing; and there are activities, such as chasing and guarding, that may belong to either category or to both categories. There are also more abstract tactical activities, such as making a sacrifice, and overall strategies, such as playing defensively. In this paper, we concentrate on activities at the first two levels."}, {"heading": "3. Our Contributions", "text": "The main contributions of this paper are as follows. We first present a novel method that simultaneously denoises positional data and learns a model of multi-agent activities that occur there. We subsequently evaluate the model on the CTF dataset and show that it achieves high accuracy in recognizing complex game events.\nHowever, creating a model by manually writing down new rules or editing existing axioms is laborious and prone to introduction of errors or unnecessarily complex theories. Thus, we would like to automate this process by learning (or inducing) new axioms from training data. For people, it is much easier to provide or validate concrete examples than to directly modify a model. This leads us to our second contribution: We show how to automatically augment a preexisting model of (joint) activities so that it is capable of not only recognizing successful actions, but also identifies failed attempts at the same types of activities. This line of work also demonstrates that explicitly modeling attempted interactions in a unified way improves overall model performance.\nAs our third contribution, we demonstrate that the difference (discussed below) between the newly learned definitions of a failed activity and the original definition of the corresponding successful activity directly corresponds to the goal of the given activity. For instance, as per the rules of the capture the flag game, a captured player cannot move until freed. When our system induces the definition of failed capture, the new theory does not contain such a constraint on the movement of the almost-captured player, thereby allowing him to move freely."}, {"heading": "4. Background", "text": "The cores of our models described below are implemented in Markov logic (ML), a statisticalrelational language. In this section, we provide a brief overview of ML, which extends finite firstorder logic (FOL) to a probabilistic setting. For a more detailed (and excellent) treatment of FOL,\nML, and inductive logic programming see the work of Shoenfield (1967), Domingos, Kok, Lowd, Poon, Richardson, and Singla (2008), and De Raedt and Kersting (2008), respectively.\nIn order to compare the Markov logic based models to alternative approaches, we consider a dynamic Bayesian network (DBN) model in the experiments below as one of our baselines. We therefore review relevant aspects of DBNs in this section as well."}, {"heading": "4.1 Markov Logic", "text": "Given the inherent uncertainty involved in reasoning about real-world activities as observed through noisy sensor readings, we looked for a methodology that would provide an elegant combination of probabilistic reasoning with the expressive, relatively natural, and compact but unfortunately strictly true or false formulas of first-order logic. And that is exactly what Markov logic provides and thus allows us to elegantly model complex finite relational non-i.i.d. domains. A Markov logic network (MLN) consists of a set of constants C and of a set of pairs \u3008Fi, wi\u3009 such that each FOL formula Fi has a weight wi \u2208 R associated with it. Optionally, each weight can be further scaled by a real-valued function of a subset of the variables that appear in the corresponding formula. Markov logic networks that contain such functions are called hybrid MLNs (Wang & Domingos, 2008).\nA MLN can be viewed as a template for a Markov network (MN) as follows: the MN contains one node for each possible ground atom of MLN. The value of the node is 0 if the corresponding atom is false and 1 otherwise. Two nodes are connected by an edge if the corresponding atoms appear in the same formula. Thus, the MN has a distinct clique corresponding to each grounding of each formula. By Fgji we denote the j-th grounding of formula Fi. The MN has a feature value fi,j for each Fgji such that\nfi,j = { 1 if Fgji is true 0 otherwise\nEach weight wi intuitively represents the relative \u201cimportance\u201d of satisfying (or violating, if the weight is negative) the corresponding formula Fi. More formally, the weight scales the difference in log-probability between a world that satisfies n groundings of the corresponding formula and one that results in m true groundings of the formula, all else being equal (cf. Equation 1). Thus the problem of satisfiability is relaxed in MLNs. We no longer search for a satisfying truth assignment as in traditional FOL. Instead, we are looking for a truth assignment that maximizes the sum of the weights of all satisfied formulas.\nThe weights can be either specified by the knowledge base engineer or, as in our approach, learned from training data. That is, we provide the learning algorithm with labeled capture instances and pairs of raw and corresponding denoised trajectories along with labeled instances of game events and it finds an optimal set of weights that maximize the likelihood of the training data. Weight learning can be done in either generative or discriminative fashion. Generative training maximizes the joint probability of observed (evidence) as well as hidden (query) predicates, whereas discriminative learning directly maximizes the conditional likelihood of the hidden predicates given the observed predicates. Since prior work demonstrated that Markov network models learned discriminatively consistently outperform their generatively trained counterparts (Singla & Domingos, 2005), we focus on discriminative learning in our activity recognition domain.\nOnce the knowledge base with weights has been specified, we can ask questions about the state of hidden atoms given the state of the observed atoms. Let X be a vector of random variables (one random variable for each possible ground atom in the MN) and let \u03c7 be the set of all possible\ninstantiations of X . Then, each x \u2208 \u03c7 represents a possible world. If (\u2200x \u2208 \u03c7)[Pr(X = x) > 0] holds, the probability distribution over these worlds is defined by\nPr(X = x) = 1\nZ exp (\u2211 i wini ( x{i} )) (1)\nwhere ni(x{i}) is the number of true groundings of i-th formula with wi as its weight in a world x and\nZ = \u2211 x\u2208\u03c7 exp (\u2211 i wini ( x{i} )) (2)\nEquation 1 can be viewed as assigning a \u201cscore\u201d to each possible world and dividing each score by the sum of all scores over all possible worlds (the constant Z) in order to normalize.\nMaximum a posteriori (MAP) inference in Markov logic given the state of the observed atoms reduces to finding a truth assignment for the hidden atoms such that the weighed sum of satisfied clauses is maximal. Even though this problem is in general #P-complete, we achieve reasonable run times by applying Cutting Plane MAP Inference (CPI) (Riedel, 2008). CPI can be thought of as a meta solver that incrementally grounds a Markov logic network, at each step creating a Markov network that is subsequently solved by any applicable method\u2014such as MaxWalkSAT or via a reduction to an integer linear program. CPI refines the current solution by searching for additional groundings that could contribute to the objective function.\nUp to this point, we have focused on first-order Markov logic. In first-order ML, each variable ranges over objects present the domain (e.g., apples, players, or cars). On the other hand, in finite second-order Markov logic, we variabilize not only objects but also predicates (relations) themselves (Kok & Domingos, 2007). Our CTF model contains a predicate variable for each type of activity. For example, we have one variable captureType whose domain is {capturing, failedCapturing} and analogously for freeing events. When grounding the second-order ML, we ground all predicate variables as well as object variables. There has also been preliminary work on generalizing ML to be well-defined over infinite domains, which would indeed give it the full power of FOL (Singla & Domingos, 2007).\nImplementations of Markov logic include Alchemy1 and theBeast2. Our experiments used a modified version of theBeast."}, {"heading": "4.2 Dynamic Bayesian Networks", "text": "A Bayesian network (BN) is a directed probabilistic graphical model (Jordan, 1998). Nodes in the graph represent random variables and edges represent conditional dependencies (cf. Figure 4). For a BN with n nodes, the joint probability distribution is given by\nPr(X1, . . . , Xn) = n\u220f i=1 Pr ( Xi|Pa(Xi) ) , (3)\n1. http://alchemy.cs.washington.edu/ 2. http://code.google.com/p/theBeast/\nwhere Pa(Xi) denotes the parents of node Xi. In a typical setting, a subset of the random variables is observed (we know their actual values), while the others are hidden and their values need to be inferred.\nA dynamic Bayesian network (DBN) is a BN that models sequential data. A DBN is composed of slices\u2014in our case each slice represents a one second time interval. In order to specify a DBN, we either write down or learn intra- and inter-slice conditional probability distributions (CPDs). The intra-slice CPDs typically constitute the observation model while the inter-slice CPDs model transitions between hidden states. For an extensive treatment of DBNs, see the work of Murphy (2002).\nThere are a number of parameter learning and inference techniques for DBNs. To match the Markov logic-based framework, in the experiments with the DBN model presented below, we focus on a supervised learning scenario, where the hidden labels are known at training time and therefore a maximum likelihood estimate can be calculated directly.\nWe find a set of parameters (discrete probability distributions) \u03b8 that maximize the log-likelihood of the training data. This is achieved by optimizing the following objective function.\n\u03b8? = argmax \u03b8\nlog ( Pr ( x1:t, y1:t|\u03b8) ) , (4)\nwhere x1:t and y1:t represent the sequence of observed and hidden values, respectively, between times 1 and t, and \u03b8? is the set of optimal model parameters. In our implementation, we represent probabilities and likelihoods with their log-counterparts to avoid arithmetic underflow.\nAt testing time, we are interested in the most likely explanation of the observed data. That is, we want to calculate the most likely assignment of states to all the hidden nodes (i.e., Viterbi decoding of the DBN) given by\ny?1:t = argmax y1:t\nlog ( Pr(y1:t|x1:t) ) , (5)\nwhere Pr(y1:t|x1:t) is the conditional probability of a sequence of hidden states y1:t given a concrete sequence of observations x1:t between times 1 and t. We calculate the Viterbi decoding efficiently using dynamic programming (Jordan, 1998)."}, {"heading": "5. Methodology", "text": "In this section, we describe the three major components of our approach. In short, we first manually construct a model of captures and freeings in CTF and optimize its parameters in a supervised learning framework (Section 5.1). This constitutes our \u201cseed\u201d theory that is used for denoising raw location data and recognition of successful multi-agent activities. We then show, in Section 5.2, how to automatically extend the seed theory by inducing the structure and learning the importance of failed captures and freeings as well as the relationships to their successful counterparts. Finally, in Section 5.3, we use the augmented theory to recognize this richer set of multi-agent activities\u2014both successful and failed attempts\u2014and extract the goals of the activities.\nSpecifically, we investigate the following four research questions:\nQ1. Can we reliably recognize complex multi-agent activities in the CTF dataset even in the presence of severe noise?\nQ2. Can models of attempted activities be automatically learned by leveraging existing models of successfully performed actions?\nQ3. Does modeling both success and failure allow us to infer the respective goals of the activities?\nQ4. Does modeling failed attempts of activities improve the performance on recognizing the activities themselves?\nWe now elaborate on each of the three components of our system in turn, and subsequently discuss, in light of the experimental results and lessons learned, our answers to the above research questions."}, {"heading": "5.1 Recognition of Successful Activities", "text": "In this section, we present our unified framework for intelligent relational denoising of the raw GPS data while simultaneously labeling instances of a player being captured by an enemy or freed by an ally. Both the denoising and the labeling are cast as a learning and inference problem in Markov logic. By denoising, we mean modifying the raw GPS trajectories of the players such that the final trajectories satisfy constraints imposed by the geometry of the game area, the motion model of the players, as well as by the rules and the dynamics of the game. In this paper, we refer to this trajectory modification as \u201csnapping\u201d since we tile the game area with 3 by 3 meter cells and snap each raw GPS reading to an appropriate cell. By creating cells only in unobstructed space, we ensure the final trajectory is consistent with the map of the area.\nWe begin by modeling the domain via a Markov logic theory, where we write the logical formulas that express the structure of the model by hand, and learn an optimal set of weights on the formulas from training data in a supervised discriminative fashion (details on the experimental setup are in Section 6). In the following two subsections, we will show how to augment this seed Markov logic theory to recognize a richer set of events and extract the goals of players\u2019 multi-agent activities.\nIn order to perform data denoising and recognition of successful capturing and freeing, we model the game as weighted formulas in Markov logic. Some of the formulas are \u201chard,\u201d in the sense that we are only interested in solutions that satisfy all of them. Hard formulas capture basic physical constraints (e.g., a player is only at one location at a time) and inviolable rules of the game (e.g., a captured player must stand still until freed or the game ends).3 The rest of the formulas are \u201csoft,\u201d meaning there is a finite weight associated with each one. Some of the soft constraints correspond to a traditional low-level data filter, expressing preferences for smooth trajectories that are close to the raw GPS readings. Other soft constraints capture high-level constraints concerning when individual and multi-agent activities are likely to occur. For example, a soft constraint states that if a player encounters an enemy on the enemy\u2019s territory, the player is likely to be captured. The exact weights on the soft constraints are learned from labeled data, as described below.\nWe distinguish two types of atoms in our models: observed (e.g., GPS(P1, 4, 43.13\u25e6, \u221277.71\u25e6) and hidden (e.g., freeing(P1, P8, 6)). The observed predicates in the CTF domain are: GPS, enemies, adjacent, onHomeTer, and onEnemyTer;4 whereas capturing, freeing, isCaptured, isFree, samePlace, and snap are hidden. Additionally, the set of hidden predicates is expanded by the structure learning algorithm described below (see Table 1 for predicate semantics). In the training phase,\n3. Cheating did not occur in our CTF games, but in principle could be accommodated by making the rules highlyweighted soft constraints rather than hard constraints. 4. While the noise in the GPS data introduces some ambiguity to the last two observed predicates, we can still reliably generate them since the road that marks the boundary between territories constitutes a neutral zone.\nHard Rules:\nH1. Each raw GPS reading is snapped to exactly one cell.\nH2. (a) When player a frees player b, then both involved players must be snapped to a common cell at that time.\n(b) A player can only be freed by a free ally.\n(c) A player can be freed only when he or she is currently captured.\n(d) Immediately after a freeing event, the freed player transitions to a free state.\n(e) A player can only be freed while on enemy territory.\nH3. (a) When player a captures player b, then both involved players must be snapped to a common cell at that time.\n(b) A player can only be captured by a free enemy.\n(c) A player can be captured only if he or she is currently free.\n(d) Immediately after a capture event, the captured player transitions to a captured state.\n(e) A player can be captured only when standing on enemy territory.\nH4. All players are free at the beginning of the game.\nH5. At any given time, a player is either captured or free but not both.\nH6. A player transitions from a captured state to a free state only via a freeing event.\nH7. A player transitions from a free state to a captured state only via a capture event.\nH8. If a player is captured then he or she must remain in the same location.\nSoft Rules:\nS1. Minimize the distance between the raw GPS reading and the snapped-to cell.\nS2. Minimize projection variance, i.e., two consecutive \u201csnappings\u201d should be generally correlated.\nS3. Maximize smoothness (both in terms of space and time) of the final player trajectories.\nS4. If players a and b are enemies, a is on enemy territory and b is not, b is not captured already, and they are close to each other, then a probably captures b.\nS5. If players a and b are allies, both are on enemy territory, b is currently captured and a is not, and they are close to each other, then a probably frees b.\nS6. Capture events are generally rare, i.e., there are typically only a few captures within a game.\nS7. Freeing events are also generally rare.\nFigure 3: Descriptions of the hard and soft rules for capture the flag.\nour learning algorithm has access to the known truth assignment to all atoms. In the testing phase, it can still access the state of the observed atoms, but it has to infer the assignment to the hidden atoms.\nFigure 3 gives an English description of our hard and soft rules for the low-level movement and player interactions within capture the flag. Corresponding formulas in the language of ML are shown in Figures 5 and 6.\nWe compare our unified approach with four alternative models. The first two models (baseline and baseline with states) are purely deterministic and they separate the denoising of the GPS data and the labeling of game events. We implemented both of them in Perl. They do not involve any training phase. The third alternative model is a dynamic Bayesian network shown in Figure 4. Finally, we have two models cast in Markov logic: the two-step ML model and the unified ML model itself. The unified model handles the denoising and labeling in a joint fashion, whereas the two-step approach first performs snapping given the geometric constraints and subsequently labels instances of capturing and freeing. The latter three models are evaluated using four-fold crossvalidation where in order to test on a given game, we first train a model on the other three games.\nAll of our models can access the following observed data: raw GPS position of each player at any time and indication whether they are on enemy or home territory, location of each 3 by 3 meter cell, cell adjacency, and list of pairs of players that are enemies. We tested all five models on the same observed data. The following describes each model in more detail.\n\u2022 Baseline Model (B) This model has two separate stages. First we snap each reading to the nearest cell and afterward we label the instances of player a capturing player b. The labeling rule is simple:\nwe loop over the whole discretized (via snapping) data set and output capturing(a, b, t) every time we encounter a pair of players a and b such that they were snapped (in the first step) to either the same cell or to two mutually adjacent cells at time t, they are enemies, and a is on its home territory while b is not. Freeing recognition is not considered in this simple model since we need to have a notion of persisting player states (captured or free) in order to model freeing in a meaningful way.\n\u2022 Baseline Model with States (B+S) This second model builds on top of the previous one by introducing a notion that play-\ners have states. If player a captures player b at time t, b enters a captured state (in logic, isCaptured(b, t + 1)). Then b remains in captured state until he moves (is snapped to a different cell at a later time) or the game ends. As per rules of CTF, a player who is in captured state cannot be captured again.\nThus, this model works just like the previous one except whenever it is about to label a capturing event, it checks the states of the involved players and outputs capturing(a, b, t) only if both a and b are not in captured state.\nFreeing recognition is implemented in an analogous way to capturing recognition. Namely, every time a captured player b is about to transition to a free state, we check if b has a free teammate a nearby (again, within the adjacent cells). If that is the case, we output freeing(a, b, t).\n\u2022 Dynamic Bayesian Network Model (DBN) The dynamic Bayesian network model can be viewed as a probabilistic generalization of the above baseline model with states. The structure of the DBN model for one player is shown in Figure 4. In each time slice, we have one hidden node and four observed nodes, all of which represent binary random variables. We want to infer the most likely state S for each player at any given time t over the course of a game. The state is either free or captured and is hidden at testing time. There are four observed random variables per time step that model player\u2019s motion (M ), presence or absence of at least one enemy (EN ) and ally (AN ) player nearby, and finally player\u2019s location on either home or enemy territory (ET ). Each player is modeled by a separate DBN. Therefore, there are fourteen instantiated DBNs for each game, but within any one game, all the DBNs share the same set of parameters.\nNote that the DBN model does not perform any GPS trajectory denoising itself. To make a fair comparison with the Markov logic models, we use the denoising component of the Markov logic theory using only constraints H1 and S1\u2013S3 (in Figure 3). This produces a denoised discretization of the data that is subsequently fed into the DBN model. The random variables within the DBN that capture the notion of player \u201cmovement\u201d and players being \u201cnearby\u201d one another is defined on the occupancy grid of the game area, just like in the two deterministic baseline models. Namely, a player is said to be moving between time t and t + 1 when he or she is snapped to two different nonadjacent cells at those times. Similarly, two players are nearby if they are snapped either to the same cell or to two adjacent cells.\n\u2022 Two-Step ML Model (2SML) In the two-step approach, we have two separate theories in Markov logic. The first theory is used to perform a preliminary snapping of each of the player trajectories individually us-\nSt\nMt\nSt+1\nETt+1 ENt+1 ANt+1ETt ENt ANt\nMt+1\n. . .. . .\nThe presence of functions d1 through d3 renders formulas S1\u2013S3 hybrid formulas. This means that at inference time, the instantiated logical part of each formula evaluates to either 1 (true) or 0 (false), which is in turn multiplied by the product of the corresponding function value and the formula weight.\nWe will see how we train, test, and evaluate these four models, and how they perform on the multi-agent activity recognition task in Section 6. Next, we turn to our supervised learning method for augmenting the unified ML model in order to recognize both successful and failed attempts at multi-agent activities.\nHard formulas:\n\u2200a, t \u2203c : snap(a, c, t) (H1) \u2200a, c, c\u2032, t : (snap(a, c, t) \u2227 c 6= c\u2032)\u21d2 \u00acsnap(a, c\u2032, t)\n\u2200a1, a2, t : freeing(a1, a2, t)\u21d2 ( samePlace(a1, a2, t) \u2227 isFree(a1, t)\u2227 (H2) \u00acenemies(a1, a2) \u2227 isCaptured(a2, t) \u2227 isFree(a2, t+ 1)\u2227 onEnemyTer(a1, t) \u2227 onEnemyTer(a2, t) )\n\u2200a1, a2, t : capturing(a1, a2, t)\u21d2 ( samePlace(a1, a2, t) \u2227 isFree(a1, t)\u2227 (H3)\nenemies(a1, a2) \u2227 isFree(a2, t) \u2227 isCaptured(a2, t+ 1)\u2227 onHomeTer(a1, t) \u2227 onEnemyTer(a2, t)\n)\n\u2200a1, a2, t : samePlace(a1, a2, t)\u21d2 ( \u2203c1, c2 : snap(a1, c1, t) \u2227 snap(a2, c2, t) \u2227 adjacent(c1, c2) ) \u2200a, t : (t = 0)\u21d2 isFree(a, t) (H4)\n\u2200a, t : isCaptured(a, t)\u2295 isFree(a, t) (H5)\n\u2200a, t : (isFree(a, t) \u2227 isCaptured(a, t+ 1))\u21d2 (\u2203=1a1 : capturing(a1, a, t)) (H6)\n\u2200a, t : (isCaptured(a, t) \u2227 isFree(a, t+ 1))\u21d2 (\u2203=1a1 : freeing(a1, a, t)) (H7)\n\u2200a, t, c : (isCaptured(a, t) \u2227 isCaptured(a, t+ 1) \u2227 snap(a, c, t))\u21d2 snap(a, c, t+ 1) (H8)\nFigure 5: Our hard formulas in Markov logic. See corresponding rules in Figure 3 for an English description and Table 1 for explanation of the predicates. In our implementation, the actual rules are written in the syntax used by theBeast, a Markov logic toolkit. (\u2203=1 denotes unique existential quantification, \u2295 designates exclusive or.)"}, {"heading": "5.2 Learning Models of Failed Attempts", "text": "In the work described above, we manually designed the structure of a Markov logic network that models the capture the flag domain and allows us to jointly denoise the raw GPS data and recognize\nSoft formulas:\n\u2200a, c, t : [ snap(a, c, t) ] \u00b7 d1(a, c, t) \u00b7 wp (S1)\n\u2200a,c1, c2, t : [ snap(a, c1, t) \u2227 snap(a, c2, t+ 1) ] \u00b7 d2(a, c1, c2, t) \u00b7 ws (S2)\n\u2200a,c1, c2, c3, t : [ snap(a, c1, t) \u2227 snap(a, c2, t+ 1) \u2227 snap(a, c3, t+ 2) ] \u00b7 d3(a, c1, c2, c3, t) \u00b7 wt (S3)\n\u2200a1, a2, t : [(enemies(a1, a2) \u2227 onHomeTer(a1, t)\u2227 (S4) onEnemyTer(a2, t) \u2227 isFree(a2, t)\u2227 samePlace(a1, a2, t))\u21d2 capturing(a1, a2, t)] \u00b7 wc\n\u2200a1, a2, t : [(\u00acenemies(a1, a2) \u2227 onEnemyTer(a1, t)\u2227 (S5) onEnemyTer(a2, t) \u2227 samePlace(a1, a2, t) \u2227 isFree(a1, t) \u2227 isCaptured(a2, t))\u21d2 freeing(a1, a2, t)] \u00b7 wf\n\u2200a, c, t : [ capturing(a, c, t) ] \u00b7 wcb (S6)\n\u2200a, c, t : [freeing(a, c, t)] \u00b7 wfb (S7)\ninstances of actual capturing and freeing. Now we show how to automatically\u2014in a supervised learning setting\u2014extend this theory to encompass and correctly label not only successful actions, but also failed attempts at those interactions. That is, given the raw GPS data that represent the CTF games, we want our new model to label instances where player a captures (or frees) player b as successful captures (successful frees) and instances where player a almost captures (or frees) player b as failed captures (failed frees). For example, by \u201cfailed capturing\u201d we mean an instance of players\u2019 interactions where\u2014up to a point\u2014it appeared that a is capturing b, but when we carefully consider the events that (potentially) preceded it as well as the impacts of the supposed capture on the future unfolding of the game, we conclude that it is a false alarm and no capture actually occurred. In other words, the conditions for a capture were right, but later on, there was a pivotal moment that foiled the capturing agent\u2019s attempt.\nFor both activities (capturing and freeing), our model jointly finds an optimal separation between success and failure. Note that since we cast our model in second-order Markov logic, we do not learn, e.g., an isolated rule that separates successful freeing from a failed attempt at freeing. Rather\u2014since capturing and freeing events (both actual and failed) are related and thus labeling an activity as, say, \u201csuccessful capturing\u201d has far-reaching impact on our past, present, and future\nlabeling\u2014we learn the separations in a joint and unified way. Namely, both the structure (logical form) and importance (weight) of each formula in our theory is considered with all its consequences and influence on other axioms in the theory. Our system thus finds an optimal balance between success and failure in capturing and freeing activities with respect to the training data."}, {"heading": "5.2.1 THE THEORY AUGMENTATION ALGORITHM", "text": "In what follows, we will describe our Markov logic theory augmentation algorithm (Algorithm 1). For clarity, we will explain how it works in concrete context of the ML models of capture the flag we discussed in previous sections. However, the underlying assumption that successful actions are in many ways similar to their failed counterparts, and that minor\u2014but crucial\u2014deviations cause the failure to occur, often hold beyond capture the flag. Therefore, the same algorithm is applicable to other domains with different activities, as long as they are modeled in Markov logic.\nAlgorithm 1 : Extend a ML theory to model successful as well as failed activities. Input: A: set of activities MS : ML theory that models successful instances of activities in A S: set of examples of successful activities F : set of examples of failed activities Output: MS+F : augmented ML model with learned weights that models both successful and attempted activities in A I: intended goals of the activities\n1: M2S \u21d0 liftToSecondOrderML(MS , A) 2: M\u2032S \u21d0 instantiate(M2S , A) 3: I \u21d0 findIncompatibleFormulas(F ,M\u2032S) 4: MS+F \u21d0M\u2032S \\I 5: MS+F \u21d0 learnWeights(S, F ,MS+F ) 6: MS+F \u21d0 removeZeroWeightedFormulas(MS+F ) 7: returnMS+F , I\nAt a high-level, the augmentation algorithm belongs to the family of structure learning methods. Starting with a seed model of successful actions, it searches for new formulas that can be added to the seed theory in order to jointly model both successfully and unsuccessfully carried out actions. The declarative language bias\u2014essentially rules for exploring the hypothesis space of candidate structures\u2014is defined implicitly by the notion that for any given activity, the structure of unsuccessful attempts is similar to the successful attempts. Therefore, the augmentation algoritm goes through an \u201cinflation\u201d stage, where formulas in the seed theory are generalized, followed by a refinement stage, where superfluous and incompatible formulas in the inflated model are pruned away. The refinement step also optimizes the weights within the newly induced theory. We will now discuss this process in more detail.\nThe input of our theory augmentation algorithm consists of an initial first-order ML theoryMS that models successful capturing and freeing (such as the unified ML model defined in Section 5.1 that contains formulas shown in Figures 5 and 6), a set of activities of interest A, and a set of examples of successful (S) as well as failed (F ) captures and frees. MS does not need to have weights for its soft formulas specified. In case they are missing, we will learn them from scratch in\nthe final steps of the augmentation algorithm. If the weights are specified, the final weight learning step for MS+F can leverage them to estimate the initial weight values. A can be specified as a set of predicate names, e.g., {capturing, freeing}. Each example in sets S and F describes a game segment and constitutes a truth assignment to the appropriate literals instantiated fromMS . Table 2 shows two toy examples of sets S and F for three time steps. Since the goal is to learn a model of failed (and successful) attempts in a supervised way, the example game segment in F contain activities labeled with predicates failedCapturing() and failedFreeing().\nIfMS contains hybrid formulas (such our formulas S1\u2013S3 in Figure 6), the appropriate function definitions are provided as part of S and F as well. Each definition consists of implicit mapping from input arguments to function values. For instance, function d1 in formula S1 quantifies the L2 distance between the agent a and cell c at time t in the projected Mercator space: d1(a, c, t) =\u221a\n(a.gpsXt \u2212 c.gpsX)2 + (a.gpsYt \u2212 c.gpsY )2. Our system goes through the following process in order to induce a new theory MS+F that augmentsMS with a definition of failed attempts for each activity already defined inMS . First we liftMS to second-order Markov logic by variabilizing all predicates that correspond to the activities of interest (step 1 of Algorithm 1). This yields a lifted theory M2S . More concretely, in order to apply this technique in our domain, we introduce new predicate variables captureType (whose domain is {capturing, failedCapturing}), freeType (over {freeing, failedFreeing}), and stateType (over {isCaptured, isFailedCaptured, isFree, isFailedFree}). For instance, variabilizing a first-order ML formula freeing(a, b, t) \u21d2 \u00acenemies(a, b) yields a second-order ML formula freeType(a, b, t) \u21d2 \u00acenemies(a, b) (note that freeType is now a variable). Instantiating back to first-order yields two formulas: freeing(a, b, t) \u21d2 \u00acenemies(a, b) and failedFreeing(a, b, t) \u21d2 \u00acenemies(a, b).\nAs far as agents\u2019 behavior is concerned, in the CTF domain, isCaptured is equivalent to isFailedFree, and isFree is equivalent to isFailedCaptured. As we will soon see, the theory augmentation process learns these equivalence classes and other relationships between states from training examples by expanding and subsequently refining formula H5 in Figure 5. While we could work with only the isCaptured predicate and its negation to represent agents\u2019 states, we feel that having explicit failure states makes our discussion clearer. Furthermore, future work will need to address hierarchies of activities, including their failures. In that context, a representation of explicit failure states may not only be convenient, but may be necessary.\nNext, we instantiate all predicate variables inM2S to produce a new first-order ML theoryM\u2032S that contains the original theoryMS in its entirety plus new formulas that correspond to failed captures and frees (step 2). Since events that are, e.g., near-captures appear similar to actual successful captures, our hypothesis is that we do not need to drastically modify the original \u201csuccessful\u201d formulas in order to model the failed activities as well. In practice, the above process of lifting and instantiating indeed results in a good seed theory. While we could emulate the lifting and grounding steps with a scheme of copying formulas and renaming predicates in the duplicates appropriately, we cast our approach in principled second-order Markov logic, which ties our work more closely to previous research and results in a more extensible framework. Specifically, second-order Markov logic has been successfully used in deep transfer learning (Davis & Domingos, 2009) and predicate invention (Kok & Domingos, 2007). Therefore, an interesting direction of future work is to combine our theory augmentation and refinement with transfer and inductive learning\u2014operating in second-order ML\u2014to jointly induce models of failed attempts of different activities in different domains, while starting with a single model of only successful activities in the source domain.\nTypical structure learning and inductive logic programming techniques start with an initial (perhaps empty) theory and iteratively grow and refine it in order to find a form that fits the training data well. In order to avoid searching the generally huge space of hypotheses, a declarative bias is either specified by hand or mined from the data. The declarative bias then restricts the set of possible refinements of the formulas that the search algorithm can apply. Common restrictions include limiting formula length, and adding a new predicate to a formula only when it shares at least one variable with some predicate already present in the formula. On the other hand, in our approach, we first generate our seed theory by instantiating all the activity-related predicate variables. To put it into\ncontext of structure learning, we expand the input model in order to generate a large seed theory, and then apply bottom-up (data-driven) learning to prune the seed theory, whereby the training data guides our search for formulas to remove as well as for an optimal set of weights on the remaining formulas. We conjecture that any failed attempt at an activity always violates at least one constraint that holds for successful executions of the activity. The experiments below support this conjecture.\nThe pruning is done in steps 3 and 4 of Algorithm 1. The function findIncompatibleFormulas(F , M\u2032S) returns a set of hard formulas inM\u2032S that are incompatible with the set of examples of failed interactions F . We say that a formula c is compatible with respect to a set of examples F if F logically entails c (F |= c). Conversely, if F does not entail c, we say that c is incompatible w.r.t. F . We explain how to find incompatible formulas in the next section.\nIn step 4 of Algorithm 1, we simply remove all incompatible formulas (I) from the theory. At this point, we have ourMS+F model, where hard formulas are guaranteed logically consistent with the examples of failed activities (because we removed the incompatible hard formulas), as well as with the successful activities (because they were logically consistent to start with). However, the soft formulas inMS+F are missing properly updated weights (in Markov logic, the weight of each hard formula is simply set to +\u221e). Therefore, we run Markov logic weight learning using theBeast package (step 5).\nRecall that theBeast implements the cutting plane meta solving scheme for inference in Markov logic, where the ground ML network is reduced to an integer linear program that is subsequently solved by the LpSolve ILP solver. We chose this approach as opposed to, e.g., MaxWalkSAT that may find a solution that is merely locally optimal, since the resulting run times are still relatively short (under an hour even for training and testing even the most complex model). Weights are learned discriminatively, where we directly model the posterior conditional probability of the hidden predicates given the observed predicates. We set theBeast to optimize the weights of the soft formulas via supervised on-line learning using margin infused relaxed algorithm (MIRA) for weight updates while the loss function is computed from the number of false positives and false negatives over the hidden atoms. Note that if any of the soft formulas are truly irrelevant with respect to the training examples, they are not picked out by the findIncompatibleFormulas() function, but their weights are set to zero (or very close to zero) in the weight learning step (line 5 in Algorithm 1). These zero-weighted formulas are subsequently removed in the following step. Note that the weight learning process does not need to experience a \u201ccold\u201d start, as an initial setting of weights can be inherited from the input theoryMS .\nFinally, we return the learned theoryMS+F , whose formulas are optimally weighted with respect to all training examples. In the Experiments and Results section below, we will useMS+F to recognize both successful and failed activities. Algorithm 1 also returns the incompatible hard formulas I. We will see how I is used to extract the intended goal of the activities in the Section 5.3, but first, let us discuss step 3 of Algorithm 1 in more detail."}, {"heading": "5.2.2 CONSISTENCY CHECK: FINDING INCOMPATIBLE FORMULAS", "text": "Now we turn to our method for finding incompatible formulas (summarized in Algorithm 2). Since our method leverages satisfiability testing to determine consistency between candidate theories and possible worlds (examples),6 Algorithm 2 can be viewed as an instance of learning from interpretations\u2014a learning setting in the inductive logic programming literature (De Raedt, 2008).\n6. This is often referred to as the covers relation in inductive logic programming.\nAlgorithm 2 (findIncompatibleFormulas). Find formulas in a ML theory that are logically inconsistent with examples of execution of failed activities. Input: F : a set of examples of failed activities T : unrefined ML theory of successful and failed activities Output: smallest set of formulas that appear in T and are unsatisfiable in the worlds in F\n1: O \u21d0 extractObjects(F ) 2: Thard \u21d0 T \\ Tsoft 3: integer n\u21d0 0 4: boolean result\u21d0 false 5: while result == false do 6: T c \u21d0 Thard 7: remove a new n-tuple of formulas from T c 8: if for the current n, all n-tuples have been tested then 9: n\u21d0 n+ 1\n10: end if 11: result\u21d0 testSAT(F , T c, O) 12: end while 13: return Thard \\ T c\nAs input, we take a set of examples of failed activities F and a seed theory T (e.g., produced in step 2 of Algorithm 1). The output is the smallest set of hard formulas that appear in T and are logically inconsistent with F . The algorithm first extracts the set of all objects O that appear in F (step 1 in Algorithm 2), while keeping track of the type of each object. For example, suppose there are only two example worlds in F shown in Table 3. Then extractObjects(F ) returns {P1, P2, P7, P8, C3, C5, 1, 2}.\nIn step 2, we limit ourselves to only hard formulas when testing compatibility. We do so since we can prove incompatibility only for hard formulas. Soft constraints can be violated many times in the data and yet we may not want to eliminate them. Instead, we want to merely adjust their weights, which is exactly what we do in our approach. Therefore, Thard contains only hard formulas that appear in T . Next, on lines 5 through 12, we check if the entire unmodified Thard is compatible (since for n = 0, we do not remove any formulas). If it is compatible, we return an empty set indicating that all the hard formulas in the original seed theory T are compatible with the examples. If we detect incompatibility, we will need to remove some, and perhaps even all, hard formulas in order to arrive at a logically consistent theory. Therefore, we incrementally start removing n-tuples of formulas. That is, in the subsequent |Thard| iterations of the while loop, we determine if we can\nrestore consistency by removing any one of the hard formulas in Thard. If we can, we return the set Thard \\ fi, where fi is the identified and removed incompatible formula. If consistency cannot be restored by removing a single formula, we in turn begin considering pairs of formulas (n = 2), triples (n = 3), etc. until we find a pruned theory T c that is consistent with all examples.\nIn general, we do need to consider n-tuples of formulas, rather than testing each formula in isolation. This is due to disjunctive formulas in conjunction with an possibly incomplete truth assignment in the training data. Consider the following theory in propositional logic:\nf1 = \u00aca \u2228 b f2 = \u00acb \u2228 c\nData: a \u2227 \u00acc\n(Following the closed-world assumption, the negated atom c would actually not appear in the training data, but we explicitly include it in this example for clarity.) While f1 and f2 are each individually consistent with the data, f1 \u2227 f2 is inconsistent with the data. More complicated examples can be constructed, where every group of k formulas is inconsistent with the data, even though the individual formulas are. In a special case where the truth values of all atoms in the training examples are known, the formulas can be tested for consistency individually, which reduces the original exponential number of iterations Algorithm 2 executes, in the worst case, to a linear complexity. An interesting direction for future work is to explore applications of logical methods to lower the computational cost for the general case of partially observed data.\nWe also note that some hard formulas model physical constraints or inviolable rules of capture the flag, and therefore hold universally. Appropriately, these formulas are not eliminated by Algorithm 2. As an example, consider formula H1 in Figure 5, which asserts that each player occupies exactly one cell at any given time. This formula is satisfied in games that include both successful and failed activities. On the other hand, consider formula H8 in the same figure. It contains a captured player to the cell he was captured in (following the \u201ccaptured players cannot move\u201d rule of CTF). While this holds for successful capturing events, it does not necessarily hold for failed attempts at capturing. Therefore, when rule H8 is expanded via second-order ML, only some of the derived formulas are going to be consistent with the observations.\nSpecifically, the candidate formula in Equation 6 will be pruned away, as it is inconsistent with the training examples, i.e., players that were only nearly captured continue to be free to move about. However, the remaining three variants of formula H8 will not be pruned away. Equation 7 will always evaluate to true, since if someone attempts to re-capture an already captured player a, a does indeed remain stationary. Similarly, Equation 8 is also consistent with all the example CTF games because if there is a failed attempt at capture immediately followed by a successful capture, the captured player does remain in place from time t onward. Finally, Equation 9 is compatible as well, since it is the original formula H8 that is consistent with the observations.\n\u2200a, t, c : ( isFailedCaptured(a, t) \u2227 isFailedCaptured(a, t+ 1) \u2227 snap(a, c, t) ) \u21d2 snap(a, c, t+ 1)\n(6)\n\u2200a, t, c : ( isCaptured(a, t) \u2227 isFailedCaptured(a, t+ 1) \u2227 snap(a, c, t) ) \u21d2 snap(a, c, t+ 1) (7)\n\u2200a, t, c : ( isFailedCaptured(a, t) \u2227 isCaptured(a, t+ 1) \u2227 snap(a, c, t) ) \u21d2 snap(a, c, t+ 1) (8)\n\u2200a, t, c : ( isCaptured(a, t) \u2227 isCaptured(a, t+ 1) \u2227 snap(a, c, t) ) \u21d2 snap(a, c, t+ 1) (9)\nThe function testSAT() (line 11 in Algorithm 2) checks whether a given candidate theory T c is compatible with the examples F by the following process. First, we ground T c using the objects in O, thereby creating a ground theory G. For example, if T c = {p(x) \u21d2 q(x)} and O = {B,W}, the grounding would be G = {p(B) \u21d2 q(B), p(W ) \u21d2 q(W )}. Then we check if G \u222a Fhidden is satisfiable using the miniSAT solver, where Fhidden is simply the set of hidden atoms that appear in F . Intuitively, this corresponds to testing whether we can \u201cplug in\u201d the worlds in F into T c while satisfying all the hard constraints. Though satisfiability is an NP-complete problem, in practice testSAT() completes within tenths of a second even for the largest problems in our CTF domain.\nFor instance, suppose Fhidden = {p(B),\u00acq(B)}. Then we test satisfiability of the formula( p(B)\u21d2 q(B) ) \u2227 ( p(W )\u21d2 q(W ) ) \u2227 p(B) \u2227 \u00acq(B).\nIn this case we cannot satisfy it since we are forced to set p(B) to true and q(B) to false, which renders the first clause\u2014and therefore the whole formula\u2014false.\nAn alternative approach to pruning formulas via satisfiability testing, as we have just described, would be to treat both types of formulas (hard and soft) in the inflated theoryM\u2032S as strictly soft formulas and learning a weight for each formula from examples of both successful and failed game events. However, this introduces several complications that negatively impact the system\u2019s performance as well as model clarity. First, the number of formulas in the inflated theory can be exponentially larger than in the seed theory. While the instantiation of the second-order ML representation can be quantified to limit this expansion, we still have worst-case exponential blow-up. By treating all formulas as soft ones, we now need to potentially learn many more weights. This is especially problematic for activities that occur rarely, as we may not have enough training data to properly learn those weights. Eliminating the hard candidate formulas by proving them inconsistent dramatically reduces the number of parameters we have to model. While satisfiability testing is NP-complete, weight learning in Markov logic entails running inference multiple times, which is itself a #P-complete problem.\nThe second reason for distinguishing between soft and hard formulas is the resulting clarity and elegance of the final learned modelMS+F . Even in situations when we have enough training data to properly learn a large number of weights, we run into overfitting problems, where neither the structure nor the parameters of the model represent the domain in a natural way. Our experiments have shown that if we skip the pruning stage (steps 3 and 4 in Algorithm 1), the model\u2019s recognition performance does not differ from that of a pruned model in a significant way (p-value of 0.45). However, we end up with a large number of soft formulas with a mixture of positive and negative weights that the learning algorithm carefully tuned and balanced to fit the training data. They however bear little relationship to the concepts in the underlying domain. Not only does this make it very hard for a human expert to analyze the model, but it makes it even harder to modify the model.\nFor these reasons, softening all hard formulas is, in general, infeasible. An interesting direction of future work will be to identify a small amount of key inconsistent hard formulas to soften, while eliminating the rest of the inconsistent hard formulas. This however entails searching in a large space of candidate subsets of softened formulas, where each iteration requires expensive re-learning of all weights.\nNote that Algorithm 2 terminates as soon as it finds a compatible theory that requires the smallest number of formula-removals. We also experimented with an active learning component to our system, where we modify Algorithms 1 and 2 such that they present several possible refinements of the theory to the user who then selects the one that looks best. The proposed modifications are shown both at the ML theory level with modified sections (formulas) highlighted as well as at the data level where the program shows the inferred consequences of those modifications. For each candidate modification, the corresponding consequences are displayed as a collection of animations where each animation shows what the results of activity recognition would be if we committed to that particular candidate theory. Note that even people who do not have background in ML can interact with such a system since the visualization is easy to understand. Interestingly, in the case of captures and frees, the least modified theory that the \u201coff-line\u201d version of the algorithm finds is also the best one and therefore there is no need to query the user. One can view this as a differential variant of Occam\u2019s razor. However, for different activities or other domains, the active learning approach may be worth revisiting and we leave its exploration for future work.\nFinally, general structure learning techniques from statistical-relational AI and from inductive logic programming are not applicable as a substitute for our theory augmentation algorithm for several reasons. The main reason is that, for efficiency reasons, existing techniques in the literature typically operate over a very restricted set of formula templates. That is, they consider only Horn clauses, or only formulas without an existential quantifier, or only formulas with at most k literals or with at most l variables, and so on. This set of restrictions is part of the language bias of any given approach. While in principle, structure learning is possible without a language bias, one often has to carefully define one for the sake of tractability (see the Section 7 for details). In our approach, the language bias is defined implicitly as discussed in Section 5.2.1."}, {"heading": "5.3 Extracting The Goal From Success and Failure", "text": "Recall that applying the theory augmentation process (Algorithm 1) on the CTF seed theory of successful interactions (shown in Figures 5 and 6) induces a new set of formulas that capture the structure of failed activities and ties them together with the existing formulas in the seed theory.\nThe logically inconsistent formulas I that Algorithm 2 returns are ones that are not satisfiable in the worlds with failed activities. At the same time, variants of those formulas were consistent with the examples of successful actions occurring in the games. Therefore, I represents the difference between a theory that models only successful activities and the augmented theory of both successful and failed actions, that has been derived from it. Intuitively, the difference between success and failure can be viewed as the intended purpose of any given activity a rational agent executes, and consequently as the goal the agent has in mind when he engages in that particular activity. In the next section, we will explore the goals extracted from the CTF domain in this fashion.\nThis concludes discussion of our models and methodology, and now we turn to experimental evaluation of the framework presented above."}, {"heading": "6. Experiments and Results", "text": "We evaluate our approach along the three major directions outlined in Section 5 (Methodology), while focusing on answering the four research questions formulated ibidem. The structure of this section closely follows that of the Methodology section.\nIn a nutshell, we are first interested in how our Markov logic models perform on the standard multi-agent activity recognition task\u2014labeling successful activities\u2014and how their performance compares to the alternative models. Second, we examine the augmented model that captures both successful and failed attempts at activities. This is the modelMS+F induced by Algorithm 1, which also lets us extract the intended goal of the activities in question. Third, we compare the performance of MS+F on the task of jointly recognizing all four activities with that of an alternative model. Finally, we investigate to what extent the reasoning about failed attempts does help in recognition of successfully executed activities.\nAll experiments are performed on our capture the flag dataset consisting of four separate games. The dataset is summarized in Table 4, where for each game we list the number of raw GPS readings and the number of instances of each activity of interest. We evaluate the models via four-fold crossvalidation, always training on three games (if training is required for a model) and testing against the fourth. For each experimental condition below, we report precision, recall, and F1 scores attained by each respective model over the four cross-validation runs. We have purposefully chosen to split the data so that each cross-validation fold directly corresponds to a separate game of CTF for conceptual convenience and clarity. As we discussed above, the events occurring in the games often have far-reaching consequences. For example, most captured players are never freed by their allies. Therefore, a capture at the beginning of a game typically profoundly influences the entire rest of the game. For this reason, splitting the games randomly or even manually would introduce unnecessary complications, as most of the segments would have dependencies on other segments. By enforcing that each fold exactly corresponds with a different game, we make each fold self-contained.\nTo quantify the statistical significance of the pair-wise differences between models, we use a generalized probabilistic interpretation of F1 score (Goutte & Gaussier, 2005). Namely, we express F1 scores in terms of gamma variates derived from models\u2019 true positives, false positives, and false negatives (\u03bb = 0.5, h = 1.0, cf., Goutte & Gaussier, 2005). This approach makes it possible to compare our results to future work that may apply alternative models on similar, but not identical, datasets. A future comparison may, for instance, include additional games or introduce random splits of the data. We note that standard statistical significance tests cannot be applied in those situations. All p-values reported are one sided, as we are interested if models\u2019 performance significantly improves as their level of sophistication increases."}, {"heading": "6.1 Recognition of Successful Activities", "text": "Recall that for both our two-step (2SML) and unified (UML) Markov logic models, we specify the Markov logic formulas by hand and optimize the weights of the soft formulas via supervised online learning. We run a modified version of theBeast software package to perform weight learning and MAP inference. theBeast implements the cutting plane meta solving scheme for inference in Markov logic, where the ground ML network is reduced to an integer linear program that is subsequently solved by the LpSolve ILP solver. We chose this approach as opposed to, e.g., MaxWalkSAT that can get \u201cstuck\u201d at a local optimum, since the resulting run times are still relatively short (under an hour even for training and testing even the most complex model).\nAt weight learning time, we use the margin infused relaxed algorithm (MIRA) for weight updates while the loss function is computed from the number of false positives and false negatives over the hidden atoms, as described in the Methodology section. The discretization step for the dynamic Bayesian network model (DBN) is implemented in Markov logic and is also executed in this fashion. The DBN model is trained via maximum likelihood as described in Section 4.2. The two deterministic baselines (B and B+S) do not require any training phase.\nAt inference time, we are interested in the most likely explanation of the data. In Markov logic, maximum a posteriori inference reduces to finding a complete truth assignment that satisfies all the hard constraints while maximizing the sum of the weights of the satisfied soft formulas. At testing time, theBeast Markov logic solver finds the most likely truth assignment to the hidden atoms as described above, and in this section we are specifically interested in the values of the capturing and freeing atoms.\nIn DBNs, the most likely explanation of the observations is equivalent to Viterbi decoding. The DBN model assigns either free or captured state to each player for every time step. We then label all transitions from free to captured state as capturing and all transitions from captured to free as freeing. Note that the DBN model is capable of determining which player is being freed or captured, but it does not model which player does the freeing or capturing. In our evaluation, we give it the benefit of the doubt and assume it always outputs the correct actor.\nFor all models, inference is done simultaneously over an entire game (on average, about 10 minutes worth of data). Note that we do not restrict inference to a (small) sliding time window. As the experiments described below show, many events in this domain can only be definitely recognized long after they occur. For example, GPS noise may make it impossible to determine whether a player has been captured at the moment of encounter with an enemy, but as the player thereafter remains in place for a long time, the possibility of his capture becomes certain.\nFigures 7 and 8 summarize the performance of our models of successful capturing and freeing in terms of precision, recall, and F1 score calculated over the four cross-validation runs. For clarity, we present the results in two separate plots, but each model was jointly labeling both capturing and freeing activities. We do not consider the baseline model for freeing recognition as that activity makes little sense without having a notion of player state (captured or free).\nWe see that the unified approach yields the best results for both activities. Let us focus on capturing first (Figure 7). Overall, the unified model labels 11 out of 13 captures correctly\u2014there\nare only two false negatives. In fact, these two capture events are missed by all the models because they involve two enemies that appear unusually far apart (about 12 meters) in the raw data. Even the unified approach fails on this instance since the cost of adjusting the players\u2019 trajectories\u2014thereby losing score due to violation of the geometry-based constraints\u2014is not compensated for by the potential gain from labeling an additional capture.\nNote that even the two-step approach recognizes 10 out of 13 captures. As compared to the unified model, it misses one additional instance in which the involved players, being moderately far apart, are snapped to mutually nonadjacent cells. On the other hand, the unified model does not fail in this situation because it is not limited by prior nonrelational snapping to a few nearby cells. However, the difference between their performance on our dataset is not statistically significant even at the 0.05 level (p-value of 0.32).\nBoth deterministic baseline models (B and B+S) perform very poorly. Although they yield a respectable recall, they produce an overwhelming amount of false positives. This shows that even relatively comprehensive pattern matching does not work at all in this domain. Interestingly, the performance of the DBN model leaves much to be desired as well, especially in terms of precision. While the DBN model is significantly better than both baselines (p-value less than 5.9 \u00d7 10\u22125), it also achieves significantly worse performance than both the Markov logic models (p-value less than 0.0002; see Table 5).\nTable 5 summarizes p-values of pairwise differences between models of actual (i.e., successful) capturing. While the difference between the Markov logic-based models (2SML and UML) are not\nstatistically significant (p-value of 0.32), pairwise differences in F1 scores between all other models are significant at the 0.02 level, and most often even at much lower p-values.\nThough the unified model still outperforms its alternatives in the case of freeing recognition as well, its performance is further from ideal as compared to the capture recognition case (Figure 8). It correctly identifies only 3 out of 5 freeing events in the games, but does not produce any false positives. This is partly due to the dependency of freeing on capturing. A failure of a model to recognize a capture precludes its recognition of a future freeing. Another reason is the extreme sparseness of the freeing events (there are only five of them in 40,000+ datapoints). Finally, in some\ninstances players barely move after they had been freed. This may occur for a number of reasons ranging from already occupying a strategic spot to simply being tired. Such freeing instances are very challenging for any automated system, and even people familiar with the game to recognize (several situations would have been extremely hard to disambiguate if we didn\u2019t have access to our notes about data collection).\nThe two-step ML model does a slightly worse job than the unified model on freeing recognition. It correctly identifies only 2 out of 5 freeings for the same reasons as in the capturing recognition case. Similarly to models of actual captures, the difference between the unified and two-step freeing models is not statistically significant (p-value of 0.27).\nTable 6 summarizes p-values of pairwise differences between models of actual (i.e., successful) freeing. Here we see that only the difference between B+S and UML models is statistically significant (p-value of 0.01), whereas the differences between the rest of the model pairs are not statistically significant. Since there are only five instances of successful freeing, the 2SML model does not perform significantly better than the B+S model at the 0.05 significance level (p-value of 0.07). However, the UML model achieves better recognition results than even the DBN model with high confidence (p-value less than 0.05). Therefore, we see that although the 2SML model strictly dominates the non-Markov logic models when evaluated on capturing recognition, we need the full power of the unified ML model to strictly outperform the nonrelational alternatives for freeing. This suggests that as we move to more complex and more interdependent activities, relational and unified modeling approaches will be winning by larger and larger margins.\nEven though the statistical significance tests suggest that 2SML is likely to give similar results to UML, it is important to note that 2SML, by design, precludes recognition of the activities in question in certain situations. Namely, as our experiments demonstrate, when the players are snapped to cells that are too far apart, the two-step model does not even consider those instances as candidates for labeling, and inevitably fails at recognizing them. Therefore, one needs to look beyond the p-values obtained when comparing the fully unified models to various alternatives.\nAs expected from the experiments with capturing recognition, both deterministic baseline models perform very poorly on freeing recognition as well. Not only do they produce an overwhelming amount of false positives, they also fail to recognize most of the freeing events.\nThus, we see that the models cast in Markov logic perform significantly better than both of the deterministic baseline models, and also better than the probabilistic, but nonrelational, DBN model. We note that the DBN model has the potential to be quite powerful and similar DBNs have been applied with great success in previous work on activity recognition from location data (Eagle &\nPentland, 2006; Liao, Patterson, Fox, & Kautz, 2007). It also has many similarities with the twostep ML model. They both share the same denoising and discretization step, and they both operate on the same observed data. The key difference is that the DBN model considers players individually, whereas the two-step ML model performs joint reasoning.\nLooking at the actual CTF game data, we see several concrete examples of how this hurts DBN\u2019s labeling accuracy. For instance, consider a situation where two allies had been captured near each other. Performing inference about individual players in isolation allows the DBN model to infer that the two players effectively free each other, even though in reality they are both captured and cannot do so. This occurs because the DBN model is oblivious to the explicit states of one\u2019s teammates as well as opponents. Since capturing and freeing are interdependent, the obliviousness of the DBN model to the state of the actors negatively impacts its recognition performance for both activities. The example we just gave illustrates one type of freeing false positives. The hallucinated freeings create opportunities that often lead to false positives of captures, creating a vicious cycle. False negatives of freeing (capturing) events often occur for players who the model incorrectly believes have already been freed (captured) at a prior time.\nSince the Markov logic based models are significantly better\u2014with a high level of confidence\u2014 than the alternatives that are not fully relational, the experiments above validate our hypothesis that we need to exploit the rich relational and temporal structure of the domain in a probabilistic way and at the same time affirmatively answer research question Q1 (Can we reliably recognize complex multi-agent activities in the CTF dataset even in the presence of severe noise?). Namely, we show that although relatively powerful probabilistic models are not sufficient to achieve high labeling accuracy, we can gain significant improvements by formulating the recognition problem as learning and inference in Markov logic networks.\nNow we turn to the evaluation of our method of learning models of both success and failure in people\u2019s activities."}, {"heading": "6.2 Learned Formulas and Intentions", "text": "Applying the theory augmentation process (Algorithm 1) on the CTF seed theory (shown in Figures 5 and 6) induces a new set of formulas that capture the structure of failed activities and ties them together with the existing formulas in the theory. We call this modelMS+F . Figure 9 shows examples of new weighted formulas modeling failed freeing and capturing attempts that appear in MS+F .\nFirst, note that our system correctly carries over the basic preconditions of each activity (contrast formulas S4 with S4\u2032 and S5 with S5\u2032 in Figures 6 and 9 respectively). This allows it to reliably recognize both successful and failed actions instead of, e.g., merely labeling all events that at some point in time appear to resemble a capture as near-capture. This re-use of preconditions directly follows from the language bias of the theory augmentation algorithm.\nTurning our attention to the learned hard formulas, we observe that the system correctly induced equivalence classes of the states, and also derived their mutual exclusion relationships (H5\u2032). It furthermore tied the new failure states to their corresponding instantaneous interactions (H6\u2032 and H7\u2032).\nFinally, the algorithm correctly discovers that the rule \u201cIf a player is captured then he or she must remain in the same location\u201d (H8, Figure 5) is the key distinction between a successful and failed capture (since players who were not actually captured can still move). Therefore, it introduces\nan appropriate rule for the failed captures (H8\u2032, Figure 9) explicitly stating that failed capturing does not confine the near-captured player to remain in stationary. An analogous process yields a fitting separation between failed and successful freeings. Namely, our model learns that an unsuccessfully freed player remains stationary. This learned difference between success and failure in players\u2019 actions directly corresponds to the goal of the activity and consequently the intent of rational actors. This difference is what our system outputs as the intended goal of capturing activity (and analogously for freeing).\nThese experimental results provide an evidence for a resounding \u201cyes\u201d to both Q2 (Can models of attempted activities be automatically learned by leveraging existing models of successfully performed actions?) and Q3 (Does modeling both success and failure allow us to infer the respective goals of the activities?) within the CTF domain.\nWe note that instead of applying our automated theory augmentation method, a person could, in principle, manually formulate a Markov logic theory of successful as well as failed activities by observing the games. After all, this is how we designed the initial seed model of successful events. However, this process is extremely time consuming, as one tends to omit encoding facts that to us, humans, seem self-evident but need to be explicitly articulated for the machine (e.g., a single person cannot be at ten different places at once, or that a player is either free or captured but not both). It is also surprisingly easy to introduce errors in the theory, that are difficult to debug, mostly because of the complex weight learning techniques involved. Therefore, we believe that the theory augmentation method is a significant step forward in enhancing models\u2019 capabilities while requiring small amounts of human effort. As the complexity of domains and their models increases, this advantage will gain larger and larger importance."}, {"heading": "6.3 Recognition of Both Successful and Failed Activities", "text": "We now compare the performance of our model MS+F to an alternative (baseline) method that labels all four activities in the following way. Similarly to the baseline with states model for successful interactions defined in Section 5.1, there are two separate stages. First we snap each GPS reading to the nearest cell by applying only the geometric constraints (H1 and S1\u2013S3) of our theory, and afterward we label the instances of our activities. The following labeling rule is applied. We loop over the whole discretized (via snapping) data set and look for instances where a pair of players a and b were snapped (in the first step) to either the same cell or to two adjacent cells at time t, they are enemies, b is not captured already, and a is on its home territory while b is not. If b moves (is snapped to a different cell at a later time) without having an ally nearby, we output failedCapturing(a,b,t), otherwise we output capturing(a,b,t). The labeling rule for freeing is defined analogously and all four events are tied together. We also tested a variant of the DBN model introduced in Section 5.1 that has two additional hidden state values for node St: isFailedFree and isFailedCaptured. However, the difference in the results obtained with this model was not statistically significant (p-value of 0.38), and therefore we focus on the conceptually more straightforward baseline model described above.\nModelMS+F is evaluated using four-fold cross-validation (always training on three games and testing against the fourth). Figure 10 compares both models in terms of precision, recall, and F1 score. Note that all four activities are modeled jointly in both models. The F1 score of the augmented model is significantly better than that of the baseline for all four target activities (p-value less than 1.3\u00d7 10\u22124).\n\u2200a1, a2, t : [(enemies(a1, a2) \u2227 onHomeTer(a1, t)\u2227 (S4\u2032) onEnemyTer(a2, t) \u2227 samePlace(a1, a2, t) \u2227 isFree(a1, t) \u2227 isFree(a2, t))\u21d2 failedCapturing(a1, a2, t)] \u00b7 11.206\n\u2200a1, a2, t : [(\u00acenemies(a1, a2) \u2227 onEnemyTer(a1, t)\u2227 (S5\u2032) onEnemyTer(a2, t) \u2227 samePlace(a1, a2, t) \u2227 isFree(a1, t) \u2227 isCaptured(a2, t))\u21d2 failedFreeing(a1, a2, t)] \u00b7 1.483\n\u2200a1, a2, t : [failedCapturing(a1, a2, t)] \u00b7 (\u22120.0001) (S6\u2032)\n\u2200a1, a2, t : [failedFreeing(a1, a2, t)] \u00b7 (\u22120.002) (S7\u2032)\n\u00ac\u2200a, t : isFailedCaptured(a, t)\u2295 isFree(a, t) (H5\u2032) \u00ac\u2200a, t : isCaptured(a, t)\u2295 isFailedFree(a, t) \u2200a, t : isFailedCaptured(a, t)\u21d4 isFree(a, t) \u2200a, t : isCaptured(a, t)\u21d4 isFailedFree(a, t)\n\u2200a, t : (isFree(a, t) \u2227 isFailedCaptured(a, t+ 1))\u21d2 (\u2203=1a1 : failedCapturing(a1, a, t)) (H6\u2032)\n\u2200a, t : (isCaptured(a, t) \u2227 isFailedFree(a, t+ 1))\u21d2 (\u2203=1a1 : failedFreeing(a1, a, t)) (H7\u2032)\n\u00ac\u2200a, t, c : (isFailedCaptured(a, t) \u2227 isFailedCaptured(a, t+ 1) \u2227 snap(a, c, t))\u21d2 snap(a, c, t+ 1) (H8\u2032)\nFigure 9: Example formulas, learned by Algorithm 1, that model unsuccessful capturing and freeing events. The crucial intent recognition formula (H8\u2032) is highlighted in bold. Formulas eliminated by Algorithm 2 are preceded by the \u00ac symbol, and are not included in the induced modelMS+F . The identity isCaptured(a, t) = \u00acisFree(a, t) is applied throughout refining to show the formulas in a more intuitive fashion. For concreteness sake, the values of the learned weights here come from one cross-validation run (and are similar in other runs).\nWe see that the baseline model has, in general, a respectable recall but it produces a large number of false positives for all activities. The false positives stem from the fact that the algorithm is \u201cgreedy\u201d in that it typically labels a situation where several players appear close to each other for certain period of time as a sequence of many captures and subsequent frees even though none of them actually occurred. Model MS+F gives significantly better results because it takes full advantage of the structure of the game in a probabilistic fashion. It has a similar \u201cover labeling\u201d tendency only in the case of failed captures, where a single capture attempt is often labeled as several consecutive attempts. While this hurts the precision score, it is not a significant deficiency,\nas in practice, having a small number of short game segments labeled as possible near-captures is useful as well.\nWe also note that even though the original model (UML) did not contain any information on failed capturing nor failed freeing, the performance of MS+F is respectable even for those two newly introduced activities. We only provided examples of game situations where those attempts occur and the system augmented itself and subsequently labeled all four activities. Thus, we see that we can indeed extend preexisting models in an automated fashion so that the unified model is capable of recognizing not only individual activities, but also both success and failure in people\u2019s behavior."}, {"heading": "6.4 The Effect of Modeling Failed Attempts on Recognition of Successful Activities", "text": "To address research question Q4 (Does modeling failed attempts of activities improve the performance on recognizing the activities themselves?), we want to see how much does the recognition of attempted activities help in modeling the successful actions (the latter being the standard activity\nrecognition problem). Toward that end, we compare the Markov logic modelMS that jointly labels only successful capturing and freeing with model MS+F that jointly labels both successful and failed attempts at both capturing and freeing (see Section 5.2.1 for a detailed description of the two models). However, we evaluate them in terms of precision, recall, and F1 score only on successful interactions, not all four types of activities.\nFigure 11 summarizes the results. We see that when evaluated on actual capturing, MS+F performs better thanMS , and similarly for freeing. However, the difference in F1 scores between a model that captures both attempted and successful activities (MS+F ) and a model of only successful activities (MS) is not statistically significant (p-value of 0.20). This is partly becauseMS already produces very solid results, leaving little room for improvement. Additionally, the CTF dataset contains relatively few events of interest. In terms of labeling performance at testing time, the difference between the two models is more than 11% (MS andMS+F recognize, respectively,\n14 and 16 out of 18 successful activities correctly). Thus, we believe the trends shown in Figure 11 are promising and modeling attempted actions does improve recognition performance on both capturing and freeing, but evaluation on a dataset with a larger number of events is needed to show the difference to be statistically significant at a higher confidence level. However, this does not mean that recognizing attempts is unimportant. As we show above, our induced augmented model does recognize failed (as well as successful) activities in the complex CTF domain with high accuracy, and we argue this to be a significant contribution.\nFinally, the comparison ofMS andMS+F shows that applying our learning algorithm that augments a model with more recognition capabilities does not hurt model labeling performance. The fact that binary classification problems are typically easier to solve than their multi-class counterparts has been well reported on in machine learning literature (Allwein, Schapire, & Singer, 2001). Therefore, introducing new activities into a model, especially in an automated way, is likely to degrade its performance. Contrary to this intuition, our experiments show thatMS+F is no worse than MS on successful activity recognition (i.e., their intersection) with high confidence, even though MS+F is clearly richer and more useful."}, {"heading": "7. Related Work", "text": "In the world of single-agent location-based reasoning, the work of Bui (2003) presents and evaluates a system for probabilistic plan recognition cast as an abstract hidden Markov memory model. Subsequently, the work of Liao et al. (2004) implements a system for denoising raw GPS traces and simultaneously inferring individuals\u2019 mode of transportation (car, bus, etc.) and their goal destination. They cast the problem as learning and inference in a dynamic Bayesian network and achieve encouraging results. In a follow-up work, Liao et al. (2005) introduce a framework for locationbased activity recognition, which is implemented as efficient learning and inference in a relational Markov network.\nThe work of Ashbrook and Starner (2003) focuses on inferring significant locations from raw GPS logs via clustering. The transition probabilities between important places are subsequently used for a number of user modeling tasks, including location prediction. The work of Eagle and Pentland (2006) explores harnessing data collected on regular smart phones for modeling human behavior. Specifically, they infer individuals\u2019 general location from nearby cell towers and Bluetooth devices at various times of day. Applying a hidden Markov model (HMM), they show that predicting if a person is at home, at work, or someplace else can be achieved with more than 90% accuracy. Similarly, the work of Eagle and Pentland (2009) extracts significant patterns and signatures in people\u2019s movement by applying eigenanalysis to smart phone logs.\nThe work of Hu, Pan, Zheng, Liu, and Yang (2008) concentrates on recognition of interleaving and overlapping activities. They show that publicly available academic datasets contain a significant number of instances of such activities, and formulate a conditional random field (CRF) model that is capable of detecting them with high (more than 80%) accuracy. However, they focus solely on single-agent household activities.\nPeople\u2019s conversation has been the primary focus of multi-agent modeling effort (Barbuceanu & Fox, 1995). In the fields of multi-agent activity recognition and studies of human behavior, researchers have either modeled conversation explicitly (e.g., Busetta, Serafini, Singh, & Zini, 2001), or have leveraged people\u2019s communication implicitly via call and location logs from mobile phones. This data has been successfully used to infer social networks, user mobility patterns, model socially\nsignificant locations and their dynamics, and others (Eagle & Pentland, 2006; Eagle, Pentland, & Lazer, 2009). This is arguably an excellent stepping stone for full-fledged multi-agent activity recognition since location is, at times, practically synonymous with one\u2019s activity (e.g., being at a store often implies shopping) (Tang, Lin, Hong, Siewiorek, & Sadeh, 2010), and our social networks have tremendous influence on our behavior (Pentland, 2008).\nAdditionally, a number of researchers in machine vision have worked on the problem of recognizing events in videos of sporting events, such as impressive recent work on learning models of baseball plays (Gupta et al., 2009). Most work in that area has focused on recognizing individual actions (e.g., catching and throwing), and the state of the art is just beginning to consider relational actions (e.g., the ball is thrown from player A to player B). The computational challenges of dealing with video data make it necessary to limit the time windows of a few seconds. By contrast, we demonstrate in this work that many events in the capture the flag data can only be disambiguated by considering arbitrarily long temporal sequences. In general, however, both our work and that in machine vision rely upon similar probabilistic models, and there is already some evidence that statistical-relational techniques similar to Markov logic can be used for activity recognition from video (Biswas, Thrun, & Fujimura, 2007; Tran & Davis, 2008).\nLooking beyond activity recognition, recent work on relational spacial reasoning includes an attempt to locate\u2014using spacial abduction\u2014caches of weapons in Iraq based on information about attacks in that area (Shakarian, Subrahmanian, & Spaino, 2009). Additionally, the work of Abowd et al. (1997) presents a location- and context-aware system, Cyberguide, that helps people explore and fully experience foreign locations. Other researchers explore an intelligent and nonintrusive navigation system that takes advantage of predictions of traffic conditions along with a model of user\u2019s knowledge and competence (Horvitz et al., 2005). Finally, the work of Kamar and Horvitz (2009) explore automatic generation of synergistic plans regarding sharing vehicles across multiple commuters.\nAn interesting line of work in cognitive science focuses on intent and goal recognition in a probabilistic framework (Baker, Tenenbaum, & Saxe, 2006, 2007). Specifically, they cast goal inference as inverse planning problem in Markov decision processes, where Bayesian inversion is used to estimate the posterior distribution over possible goals. Recent extensions of this work begin to consider simulated multi-agent domains (Baker, Goodman, & Tenenbaum, 2008; Ullman, Baker, Macindoe, Evans, Goodman, & Tenenbaum, 2010; Baker, Saxe, & Tenenbaum, 2011). Comparison of the computational models against human judgement in synthetic domains shows a strong correlation between people\u2019s predicted and actual behavior. However, the computational challenges involved in dealing with the underlying partially observable Markov decision processes are prohibitive in more complex domains with large state spaces, such as ours.\nThe focus of our work is on a different aspect of reasoning about people\u2019s goals. Rather than inferring a distribution over possible, a priori known goals, we automatically induce the goals of complex multi-agent activities themselves.\nOther researchers have concentrated on modeling behavior of people and general agents as reinforcement learning problems in both single-agent and multi-agent settings. The work of Ma (2008) proposes a system for household activity recognition cast as a single-agent Markov decision process problem that is subsequently solved using a probabilistic model checker. Wilson and colleagues address the problem of learning agents\u2019 roles in a multi-agent domain derived from a real-time strategy computer game (Wilson, Fern, Ray, & Tadepalli, 2008; Wilson, Fern, & Tadepalli, 2010). Experiments in this synthetic domain show strongly encouraging results. While we do not perform role\nlearning ourselves, we anticipate that the work of Wilson et al. is going to play an important role in learning hierarchies of people\u2019s activities. In our capture the flag domain, one can imagine automatically identifying a particular player as, for example, a defender and subsequently leveraging this information to model his or her behavior in a more \u201cpersonalized\u201d way.\nThe work of Hong (2001) concentrates on recognizing the goal of an agent in the course of her activities in a deterministic, but relational setting. Interesting work on goal recognition has been also applied to computer-aided monitoring of complex multi-agent systems, where relationships between agents are leveraged to compensate for noise and sparse data (Kaminka, Tambe, Pynadath, & Tambe, 2002). By contrast, in our work we focus on learning the respective goals of a given set of multi-agent activities in a probabilistic setting. The knowledge is in turn leveraged to achieve a stronger robustness of the other recognition tasks. Similarly to the approach of Hong, our system does not need a supplied plan library either.\nOur work also touches on anomaly detection since our system reasons about the failed attempts of the players. Anomaly detection concerns itself with revealing segments of the data that in some way violate our expectations. For an excellent survey of the subject, we refer the reader to the results of Chandola, Banerjee, and Kumar (2009). In the realm of anomaly detection within people\u2019s activities, the work of Moore and Essa (2001) addresses the problem of error detection and recovery card games that involve two players recorded on video. Their system models the domain with a stochastic context-free grammar and achieves excellent results.\nWe note that recognizing a failed attempt at an activity is more fine-grained a problem than anomaly detection. The failed event is not just anomalous in general.7 Rather, it is the specific distinction between success and failure in human activities that we are interested in. And the distinction lies in the fact that an unsuccessful attempt does not yield a certain desired state whereas a successful action does. This desired state is exactly what our approach extracts for each activity in question. To our knowledge, there exists no prior work on explicit modeling and recognition of attempted activities or on learning the intended purpose of an activity in a multi-agent setting.\nOne of the components of our contribution focuses on joint learning and inference across multiple tasks (capturing, freeing, and their respective attempted counterparts). This is in contrast with the traditional \u201cpipeline\u201d learning architecture, where a system is decomposed into a series of modules and each module performs partial computation and passes the result on to the next stage. The main benefits of this set-up are reduced computational complexity and often higher modularity. However, since each stage is myopic, it may not take full advantage of dependencies and broader patterns within the data. Additionally, even though errors introduced by each module may be small, they can accumulate beyond tolerable levels as data passes through the pipeline.\nAn extensive body of work has shown that joint reasoning improves model performance in a number of natural language processing and data mining tasks including information extraction (i.e., text segmentation coupled with entity resolution) (Poon & Domingos, 2007), co-reference resolution (Poon & Domingos, 2008), information extraction coupled with co-reference resolution (Wellner, McCallum, Peng, & Hay, 2004), temporal relation identification (Yoshikawa, Riedel, Asahara, & Matsumoto, 2009; Ling & Weld, 2010), and record de-duplication (Domingos, 2004; Culotta & McCallum, 2005). Similarly to our work, some of the above models are cast in Markov logic. However, prior work uses sampling techniques to perform learning and inference, whereas we apply\n7. A situation where a player in CTF moves through the campus at a speed of 100 mph and on her way passes an enemy player is certainly anomalous (and probably caused by GPS sensor noise), but we do not want to say that it is a failed attempt at capturing.\na reduction to integer linear programming. Interestingly, the work in Denis and Baldridge (2007) jointly addresses the problems of anaphoricity and co-reference via a manual formulation of an integer linear program.\nJoint activity modeling has also been shown to yield better recognition accuracy, as compared to \u201cpipeline\u201d baselines as well as baselines that make strong inter-activity independence assumptions. The work of Wu, Lian, and Hsu (2007) performs joint learning and inference over concurrent singleagent activities using a factorial conditional random field model. Similarly, the work of Helaoui, Niepert, and Stuckenschmidt (2010) models interleaved activities in Markov logic. They distinguish between foreground and background activities and infer a time window in which each activity takes place from RFID sensory data. By contrast, we focus on joint reasoning about multi-agent activities and attempts in a fully relational\u2014and arguably significantly more noisy\u2014setting.\nThe work of Manfredotti, Hamilton, and Zilles (2010) propose a hierarchical activity recognition system formulated as learning and inference in relational dynamic Bayesian networks. Their model jointly leverages observed interactions with individual objects in the domain and the relationships between objects. Since their method outperforms a hidden Markov model by a significant margin, it contributes additional experimental evidence that a relational decomposition of a domain improves model quality.\nThe work of Landwehr, Gutmann, Thon, Philipose, and De Raedt (2007) casts single-agent activity recognition as a relational transformation learning problem, building on transformationbased tagging from natural language processing. Their system induces a set of transformation rules that are then used to infer activities from sensory data. Since the transformation rules are applied adaptively, at each step, the system leverages not only observed data, but also currently assigned labels (inferred activities). However, the transformation rules are learned in a greedy fashion and experiments show that the model does not perform significantly better than a simple HMM. On the other hand, their representation is quite general, intuitive, and extensible. As we will see, our Markov logic model has a similar level of representational convenience while performing global\u2014 instead of greedy\u2014optimization in a significantly more complex domain.\nThe denoising component of our model can be formulated as a tracking problem. Prior work proposed a relational dynamic Bayesian network model for multi-agent tracking (Manfredotti & Messina, 2009). Their evaluation shows that considering relationships between tracked entities significantly improves model performance, as compared to a nonrelational particle filter baseline. By contrast, our work explores joint tracking and activity recognition. However, each GPS reading is annotated with the identity of the corresponding agent. The work of Manfredotti and Messina suggests that our model can be generalized, such that the associations between GPS and agent identities are inferred and need not be observed.\nOur Markov logic theory can be viewed as a template for a conditional random field (Lafferty, 2001), an undirected graphical model that captures the conditional probability of hidden labels given observations, rather than the joint probability of both labels and observations, as one would typically do in a directed graphical model. In the relational world, directed formalisms include relational Bayesian networks (Jaeger, 1997) and their dynamic counterparts (Manfredotti, 2009), probabilistic relational models (Koller, 1999; Friedman, Getoor, Koller, & Pfeffer, 1999), Bayesian logic programs (Kersting & De Raedt, 2000), and first-order conditional influence language (Natarajan, Tadepalli, Altendorf, Dietterich, Fern, & Restificar, 2005). Conditional random fields have been extensively applied to activity recognition, and their superior labeling performance over generative models has been demonstrated in a number of both single-agent and multi-agent domains (Liao\net al., 2005; Limketkai, Fox, & Liao, 2007; Vail, 2008; Vail & Veloso, 2008; Hu et al., 2008). Since MLNs are often solved as propositionalized CRFs, and the directed alternatives can be compiled into a Bayesian network, it can be expected that discriminative relational models generally outperform their generative counterparts on labeling tasks. However, more work needs to be done to answer this question in its entirety.\nSince Markov logic is based on, and in fact subsumes, finite first-order logic, we immediately gain access to a number of techniques developed in the rich field of traditional logic. Current Markov logic solvers take advantage of the underlying logical structure to perform more powerful optimizations, such as Alchemy\u2019s lifted inference in belief propagation and MC-SAT (Poon & Domingos, 2006). Additionally, domain pruning, where one uses hard constraints to infer reduced domains for predicates, has been shown to lead to significant speed-ups (Papai, Singla, & Kautz, 2011).\nWe also leverage this relationship between Markov and first-order logic when inducing an augmented model. Furthermore, presence of dependency cycles introduces additional problems in directed graphical (relational) models. Thus, the fact that, in Markov logic, knowledge can be expressed as weighted first-order formulas combined with the above factors make it a powerful framework best suited for the multi-agent reasoning tasks considered in this work.\nTraditional hidden Markov models operate over an alphabet of unstructured (i.e., \u201cflat\u201d) symbols. This makes relational reasoning difficult, as one has to either propositionalize the domain, thereby incurring combinatorial increase in the number of symbols and model parameters, or ignore the relational structure and sacrifice information. Logical hidden Markov models (LHMMs) have been proposed to address this problem (Kersting, De Raedt, & Raiko, 2006). LHMMs are a generalization of standard HMMs that compactly represents probability distributions over sequences of logical atoms rather than flat symbols. LHMMs have been proven strictly more powerful than their propositional counterparts (HMMs). By applying techniques from logic-based reasoning, such as unification, while leveraging the logical structure component of the model, Kersting et al. show that LHMMs often require fewer parameters and achieve higher accuracy than HMMs.\nLHMMs have been recently applied to activity recognition. In the context of intelligent user interfaces, the work of Shen (2009) designs and evaluates a LHMM model for recognition of people\u2019s activities and workflows carried out on a desktop computer. Other researchers proposed a hierarchical extension of LHMMs along with an efficient particle filter-based inference technique, and apply it to activity recognition problems in synthetic domains (Natarajan, Bui, Tadepalli, Kersting, & Wong, 2008). Both lines of work show that LHMMs can be learned and applied efficiently, and perform better than plain HMMs.\nHowever, LHMMs are a generative model and therefore are not ideal for pure labeling and recognition tasks, where we typically do not want to make strong independence assumptions about the observations, nor do we want to explicitly model dependencies in the input space. TildeCRF\u2014a relational extension of traditional conditional random fields\u2014has been introduced to address this issue (Gutmann & Kersting, 2006). TildeCRF allows discriminative learning and inference in CRFs that encode sequences of logical atoms, as opposed to sequences of unstructured symbols. TildeCRF specifically focuses on efficient learning of models of sequential data via boosting, and is subsumed by Markov logic, which can produce both discriminative and generative models. We cast our model in the latter framework to make it more general, extensible, and interpretable.\nPRISM, a probabilistic extension of Prolog, has been shown to subsume a wide variety of generative models, including Bayesian networks, probabilistic context-free grammars, HMMs (along with their logical extension) (Sato & Kameya, 2001, 2008). However, since the focus of PRISM is\non representational elegance and generality, rather than scalability, the sheer size of the state space and complexity of our CTF domain precludes its application here.\nFinally, our Markov logic theory augmentation process is related to structure learning, transfer learning, and inductive logic programming. In fact, Algorithm 1 implements a special case of structure learning, where we search for a target theory that explains the training data well, while our declarative bias forces the target theory to differ from the source theory only as much as necessary. Again, with the intuition that failed attempts are similar to their failed counterparts. A number of researchers have focused on structure learning specifically in Markov logic networks. This includes early work on top-down structure learning, where clauses in the knowledge base are greedily modified by adding, flipping, and deleting logical literals (Kok & Domingos, 2005). This search is guided by the likelihood of the training data under the current model. The work of Mihalkova and Mooney (2007) exploit patterns in the ground Markov logic networks to introduce a bottom-up declarative bias that makes their algorithm less susceptible to finding only local optima, as compared to alternative greedy methods. Similarly, the work of Kok and Domingos (2009) introduce a bottom-up declarative bias based on lifted hypergraph representation of the relational database. This bias then guides search for clauses that fit the data. Since the hypergraph is lifted, relational path finding tractable. Interesting work on predicate invention applies relational clustering technique formulated in second-order Markov logic to discover new predicates from relational databases (Kok & Domingos, 2007). The above systems are capable of modeling relatively rich family of logical formulas. Other approaches perform discriminative structure learning and achieve excellent results, but focus on a restricted set of types of formulas (e.g., Horn clauses) (Huynh & Mooney, 2008; Biba, Ferilli, & Esposito, 2008). The work of Davis and Domingos (2009) successfully uses second-order Markov logic in deep transfer learning. They lift the model of the source domain to second-order ML and identify high-level structural patterns. These subsequently serve as declarative bias for structure learning in the target domain.\nBy its very nature, the inductive logic programming discipline has extensively studied structure learning in deterministic, as well as probabilistic settings (e.g., Muggleton, 2002; De Raedt, 2008; De Raedt, Frasconi, Kersting, & Muggleton, 2008). In fact, our theory augmentation algorithm can be viewed as an efficient Markov logic based version of theory refinement, a well-established ILP technique that aims to improve the quality of a theory in terms of simplicity, fit to newly acquired data, efficiency or other factors (Wrobel, 1996).\nOur approach differs from all this work in three main points. First, our declarative bias is defined implicitly by the seed theory of successful activities. Therefore, our theory augmentation algorithm is not limited to any hard-wired set of formula types it can consider. Rather, the search space is defined at run time by extracting motifs from the seed theory. The second distinction lies in computational tractability and exactness of the results. By distinguishing between soft and hard formulas, we are able to search through candidate formulas in a systematic, rather than greedy manner. Consequently, our final learned model requires fewer parameters, which is especially important when the amount of training data is relatively small. Additionally, our weight learning does not experience cold starts, as we leverage the seed theory. The final difference is that, to our knowledge, we are the first to explore structure learning in the context of interplay of success and failure, and their relationship to the intended goals of people\u2019s actions."}, {"heading": "8. Conclusions", "text": "This paper took on the task of understanding the game of capture the flag from GPS data as an exemplar of the general problem of inferring human interactions and intentions from sensor data. We have presented a novel methodology\u2014cast in Markov logic\u2014for effectively combining data denoising with higher-level relational reasoning about a complex multi-agent domain. Specifically, we have demonstrated that given raw and noisy data, we can automatically and reliably detect and recognize both successful and failed interactions in adversarial as well as cooperative settings. Additionally, we have shown that success, failure, and the goal of an activity are intimately tied together and having a model for successful events allows us to naturally learn models of the other two important aspects of life. Specifically, we have demonstrated that the intentions of rational agents are automatically discovered in the process of resolving inconsistencies between a theory that models successful instances of a set of activities and examples of failed attempts at those activities.\nWe have formulated four research questions and designed experiments within the CTF domain that empirically answer them. Compared to alternative approaches to solving the multi-agent activity recognition problem, our augmented Markov logic model, which takes into account not only relationships among individual players, but also relationships among activities over the entire length of a game, although computationally more costly, is significantly more accurate on real-world data. Furthermore, we have illustrated that explicitly modeling unsuccessful attempts boosts performance on other important recognition tasks."}, {"heading": "9. Future Work", "text": "Multi-agent activity recognition is especially interesting in the context of current unprecedented growth of on-line social networks\u2014in terms of their size, popularity, and their impact on our \u201coffline\u201d lives. In this paper, we show that location information alone allows for rich models of people\u2019s interactions, but in the case of on-line social networks, we additionally have access to the content of users\u2019 posts and both the explicit and the implicit network interactions. For instance, our recent study shows that, interestingly, about 30% of Twitter status updates reveal their authors\u2019 location (Sadilek, Kautz, & Bigham, 2012). These data sources are now available to machines in massive volumes and at ever-increasing real-time streaming rate. We note that a substantial fraction of posts on services such as Facebook and Twitter talk about everyday activities of the users (Naaman, Boase, & Lai, 2010), and this information channel has become available to the research community only very recently. Thus, if we are able to reason about human behavior and interactions in an automated way, we can tap the colossal amounts of knowledge that is\u2014at present\u2014distributed across the whole population.\nWe are currently extending our model to handle not only explicit GPS traces, but also be able to infer the location of people who do not broadcast their GPS coordinates. The basic idea is, again, to leverage the structure of relationships among people. The vast majority of us participate in on-line social networks and typically some of our friends there do publish their location. We thus view the GPS-enabled people as noisy location sensors and use the network interactions and dynamics to estimate the location of the rest of the users. At present, we are testing this approach on public tweets."}, {"heading": "Acknowledgments", "text": "We thank anonymous reviewers for their constructive feedback. We further thank Sebastian Riedel for his help with theBeast, and to Radka Sad\u0131\u0301lkova\u0301 and Wendy Beatty for their helpful comments. This work was supported by ARO grant #W911NF-08-1-0242, DARPA SBIR Contract #W31P4Q08-C-0170, and a gift from Kodak."}], "references": [{"title": "Cyberguide: a mobile context-aware tour guide", "author": ["G.D. Abowd", "C.G. Atkeson", "J. Hong", "S. Long", "R. Kooper", "M. Pinkerton"], "venue": "Wirel. Netw.,", "citeRegEx": "Abowd et al\\.,? \\Q1997\\E", "shortCiteRegEx": "Abowd et al\\.", "year": 1997}, {"title": "Reducing multiclass to binary: A unifying approach for margin classifiers", "author": ["E. Allwein", "R. Schapire", "Y. Singer"], "venue": "The Journal of Machine Learning Research,", "citeRegEx": "Allwein et al\\.,? \\Q2001\\E", "shortCiteRegEx": "Allwein et al\\.", "year": 2001}, {"title": "Using GPS to learn significant locations and predict movement across multiple users", "author": ["D. Ashbrook", "T. Starner"], "venue": "Personal Ubiquitous Comput.,", "citeRegEx": "Ashbrook and Starner,? \\Q2003\\E", "shortCiteRegEx": "Ashbrook and Starner", "year": 2003}, {"title": "Bayesian models of human action understanding", "author": ["C. Baker", "J. Tenenbaum", "R. Saxe"], "venue": "Advances in Neural Information Processing Systems,", "citeRegEx": "Baker et al\\.,? \\Q2006\\E", "shortCiteRegEx": "Baker et al\\.", "year": 2006}, {"title": "Theory-based social goal inference", "author": ["C. Baker", "N. Goodman", "J. Tenenbaum"], "venue": "In Proceedings of the thirtieth annual conference of the cognitive science society,", "citeRegEx": "Baker et al\\.,? \\Q2008\\E", "shortCiteRegEx": "Baker et al\\.", "year": 2008}, {"title": "Bayesian theory of mind: Modeling joint belief-desire attribution", "author": ["C. Baker", "R. Saxe", "J. Tenenbaum"], "venue": "In Proceedings of the Thirty-Second Annual Conference of the Cognitive Science Society", "citeRegEx": "Baker et al\\.,? \\Q2011\\E", "shortCiteRegEx": "Baker et al\\.", "year": 2011}, {"title": "Goal inference as inverse planning", "author": ["C. Baker", "J. Tenenbaum", "R. Saxe"], "venue": "In Proceedings of the 29th annual meeting of the cognitive science society", "citeRegEx": "Baker et al\\.,? \\Q2007\\E", "shortCiteRegEx": "Baker et al\\.", "year": 2007}, {"title": "Discerning intentions in dynamic human action", "author": ["D.A. Baldwin", "J.A. Baird"], "venue": "Trends in Cognitive Sciences,", "citeRegEx": "Baldwin and Baird,? \\Q2001\\E", "shortCiteRegEx": "Baldwin and Baird", "year": 2001}, {"title": "COOL: a language for describing coordination in multi agent systems", "author": ["M. Barbuceanu", "M. Fox"], "venue": "In Proceedings of the First International Conference on Multi-Agent Systems", "citeRegEx": "Barbuceanu and Fox,? \\Q1995\\E", "shortCiteRegEx": "Barbuceanu and Fox", "year": 1995}, {"title": "Modeling relationships at multiple scales to improve accuracy of large recommender systems", "author": ["R. Bell", "Y. Koren", "C. Volinsky"], "venue": "In KDD,", "citeRegEx": "Bell et al\\.,? \\Q2007\\E", "shortCiteRegEx": "Bell et al\\.", "year": 2007}, {"title": "Discriminative structure learning of Markov logic networks", "author": ["M. Biba", "S. Ferilli", "F. Esposito"], "venue": null, "citeRegEx": "Biba et al\\.,? \\Q2008\\E", "shortCiteRegEx": "Biba et al\\.", "year": 2008}, {"title": "Recognizing activities with multiple cues", "author": ["R. Biswas", "S. Thrun", "K. Fujimura"], "venue": "In Workshop on Human Motion,", "citeRegEx": "Biswas et al\\.,? \\Q2007\\E", "shortCiteRegEx": "Biswas et al\\.", "year": 2007}, {"title": "A general model for online probabilistic plan recognition", "author": ["H.H. Bui"], "venue": "Eighteenth International Joint Conference on Artificial Intelligence (IJCAI-2003).", "citeRegEx": "Bui,? 2003", "shortCiteRegEx": "Bui", "year": 2003}, {"title": "Extending multi-agent cooperation by overhearing", "author": ["P. Busetta", "L. Serafini", "D. Singh", "F. Zini"], "venue": "In Cooperative Information Systems,", "citeRegEx": "Busetta et al\\.,? \\Q2001\\E", "shortCiteRegEx": "Busetta et al\\.", "year": 2001}, {"title": "Anomaly detection: A survey", "author": ["V. Chandola", "A. Banerjee", "V. Kumar"], "venue": "ACM Comput. Surv.,", "citeRegEx": "Chandola et al\\.,? \\Q2009\\E", "shortCiteRegEx": "Chandola et al\\.", "year": 2009}, {"title": "Joint deduplication of multiple record types in relational data", "author": ["A. Culotta", "A. McCallum"], "venue": "In Proceedings of the 14th ACM international conference on Information and knowledge management,", "citeRegEx": "Culotta and McCallum,? \\Q2005\\E", "shortCiteRegEx": "Culotta and McCallum", "year": 2005}, {"title": "Deep transfer via second-order Markov logic", "author": ["J. Davis", "P. Domingos"], "venue": "In Proceedings of the 26th Annual International Conference on Machine Learning,", "citeRegEx": "Davis and Domingos,? \\Q2009\\E", "shortCiteRegEx": "Davis and Domingos", "year": 2009}, {"title": "Logical and relational learning", "author": ["L. De Raedt"], "venue": "Springer-Verlag New York Inc.", "citeRegEx": "Raedt,? 2008", "shortCiteRegEx": "Raedt", "year": 2008}, {"title": "Probabilistic Inductive Logic Programming ", "author": ["L. De Raedt", "P. Frasconi", "K. Kersting", "S. Muggleton"], "venue": "Theory and Applications,", "citeRegEx": "Raedt et al\\.,? \\Q2008\\E", "shortCiteRegEx": "Raedt et al\\.", "year": 2008}, {"title": "Probabilistic inductive logic programming", "author": ["L. De Raedt", "K. Kersting"], "venue": "(De Raedt et al.,", "citeRegEx": "Raedt and Kersting,? \\Q2008\\E", "shortCiteRegEx": "Raedt and Kersting", "year": 2008}, {"title": "Joint determination of anaphoricity and coreference resolution using integer programming", "author": ["P. Denis", "J. Baldridge"], "venue": "In Proceedings of NAACL HLT,", "citeRegEx": "Denis and Baldridge,? \\Q2007\\E", "shortCiteRegEx": "Denis and Baldridge", "year": 2007}, {"title": "Multi-relational record linkage", "author": ["P. Domingos"], "venue": "In Proceedings of the KDD-2004 Workshop on Multi-Relational Data Mining.", "citeRegEx": "Domingos,? 2004", "shortCiteRegEx": "Domingos", "year": 2004}, {"title": "Reality mining: sensing complex social systems", "author": ["N. Eagle", "A. Pentland"], "venue": "Personal and Ubiquitous Computing,", "citeRegEx": "Eagle and Pentland,? \\Q2006\\E", "shortCiteRegEx": "Eagle and Pentland", "year": 2006}, {"title": "Eigenbehaviors: Identifying structure in routine", "author": ["N. Eagle", "A. Pentland"], "venue": "Behavioral Ecology and Sociobiology,", "citeRegEx": "Eagle and Pentland,? \\Q2009\\E", "shortCiteRegEx": "Eagle and Pentland", "year": 2009}, {"title": "Inferring social network structure using mobile phone data", "author": ["N. Eagle", "A. Pentland", "D. Lazer"], "venue": "In Proceedings of the National Academy of Sciences", "citeRegEx": "Eagle et al\\.,? \\Q2009\\E", "shortCiteRegEx": "Eagle et al\\.", "year": 2009}, {"title": "Learning probabilistic relational models", "author": ["N. Friedman", "L. Getoor", "D. Koller", "A. Pfeffer"], "venue": "In International Joint Conference on Artificial Intelligence,", "citeRegEx": "Friedman et al\\.,? \\Q1999\\E", "shortCiteRegEx": "Friedman et al\\.", "year": 1999}, {"title": "A probabilistic interpretation of precision, recall and f-score, with implication for evaluation", "author": ["C. Goutte", "E. Gaussier"], "venue": null, "citeRegEx": "Goutte and Gaussier,? \\Q2005\\E", "shortCiteRegEx": "Goutte and Gaussier", "year": 2005}, {"title": "Understanding videos, constructing plots: Learning a visually grounded storyline model from annotated videos", "author": ["A. Gupta", "P. Srinivasan", "J. Shi", "L.S. Davis"], "venue": null, "citeRegEx": "Gupta et al\\.,? \\Q2009\\E", "shortCiteRegEx": "Gupta et al\\.", "year": 2009}, {"title": "TildeCRF: conditional random fields for logical sequences", "author": ["B. Gutmann", "K. Kersting"], "venue": "In Machine Learning: ECML", "citeRegEx": "Gutmann and Kersting,? \\Q2006\\E", "shortCiteRegEx": "Gutmann and Kersting", "year": 2006}, {"title": "A statistical-relational activity recognition framework for ambient assisted living systems", "author": ["R. Helaoui", "M. Niepert", "H. Stuckenschmidt"], "venue": "In Ambient Intelligence and Future TrendsInternational Symposium on Ambient Intelligence (ISAmI", "citeRegEx": "Helaoui et al\\.,? \\Q2010\\E", "shortCiteRegEx": "Helaoui et al\\.", "year": 2010}, {"title": "Goal recognition through goal graph analysis", "author": ["J. Hong"], "venue": "Journal of Artificial Intelligence Research, 15, 1\u201330.", "citeRegEx": "Hong,? 2001", "shortCiteRegEx": "Hong", "year": 2001}, {"title": "Prediction, expectation, and surprise: Methods, designs, and study of a deployed traffic forecasting service", "author": ["E. Horvitz", "J. Apacible", "R. Sarin", "L. Liao"], "venue": "In Twenty-First Conference on Uncertainty in Artificial Intelligence", "citeRegEx": "Horvitz et al\\.,? \\Q2005\\E", "shortCiteRegEx": "Horvitz et al\\.", "year": 2005}, {"title": "Real world activity recognition with multiple goals", "author": ["D. Hu", "S. Pan", "V. Zheng", "N. Liu", "Q. Yang"], "venue": "In UbiComp,", "citeRegEx": "Hu et al\\.,? \\Q2008\\E", "shortCiteRegEx": "Hu et al\\.", "year": 2008}, {"title": "Discriminative structure and parameter learning for Markov logic networks", "author": ["T. Huynh", "R. Mooney"], "venue": "In Proceedings of the 25th international conference on Machine learning,", "citeRegEx": "Huynh and Mooney,? \\Q2008\\E", "shortCiteRegEx": "Huynh and Mooney", "year": 2008}, {"title": "Relational Bayesian networks", "author": ["M. Jaeger"], "venue": "Proceedings of the 13th Conference on Uncertainty in Artificial Intelligence, pp. 266\u2013273.", "citeRegEx": "Jaeger,? 1997", "shortCiteRegEx": "Jaeger", "year": 1997}, {"title": "Learning in graphical models", "author": ["M. Jordan"], "venue": "Kluwer Academic Publishers.", "citeRegEx": "Jordan,? 1998", "shortCiteRegEx": "Jordan", "year": 1998}, {"title": "Collaboration and shared plans in the open world: Studies of ridesharing", "author": ["E. Kamar", "E. Horvitz"], "venue": null, "citeRegEx": "Kamar and Horvitz,? \\Q2009\\E", "shortCiteRegEx": "Kamar and Horvitz", "year": 2009}, {"title": "Monitoring teams by overhearing: A multi-agent plan-recognition approach", "author": ["G.A. Kaminka", "Tambe", "D.V.P. M", "D.V. Pynadath", "M. Tambe"], "venue": "Journal of Artificial Intelligence Research,", "citeRegEx": "Kaminka et al\\.,? \\Q2002\\E", "shortCiteRegEx": "Kaminka et al\\.", "year": 2002}, {"title": "Bayesian logic programs", "author": ["K. Kersting", "L. De Raedt"], "venue": "In Proceedings of the Work-inProgress Track at the 10th International Conference on Inductive Logic Programming", "citeRegEx": "Kersting and Raedt,? \\Q2000\\E", "shortCiteRegEx": "Kersting and Raedt", "year": 2000}, {"title": "Logical hidden Markov models", "author": ["K. Kersting", "L. De Raedt", "T. Raiko"], "venue": "Journal of Artificial Intelligence Research,", "citeRegEx": "Kersting et al\\.,? \\Q2006\\E", "shortCiteRegEx": "Kersting et al\\.", "year": 2006}, {"title": "Learning the structure of Markov logic networks", "author": ["S. Kok", "P. Domingos"], "venue": "In Proceedings of the 22nd international conference on Machine learning,", "citeRegEx": "Kok and Domingos,? \\Q2005\\E", "shortCiteRegEx": "Kok and Domingos", "year": 2005}, {"title": "Statistical predicate invention", "author": ["S. Kok", "P. Domingos"], "venue": "In Proceedings of the 24th international conference on Machine learning,", "citeRegEx": "Kok and Domingos,? \\Q2007\\E", "shortCiteRegEx": "Kok and Domingos", "year": 2007}, {"title": "Learning Markov logic network structure via hypergraph lifting", "author": ["S. Kok", "P. Domingos"], "venue": "In Proceedings of the 26th Annual International Conference on Machine Learning,", "citeRegEx": "Kok and Domingos,? \\Q2009\\E", "shortCiteRegEx": "Kok and Domingos", "year": 2009}, {"title": "Statistical predicate invention", "author": ["S. Kok", "P. Domingos"], "venue": "Proceedings of the 24th international conference on Machine learning,", "citeRegEx": "Kok and Domingos,? \\Q2007\\E", "shortCiteRegEx": "Kok and Domingos", "year": 2007}, {"title": "Probabilistic relational models", "author": ["D. Koller"], "venue": "Inductive Logic Programming, pp. 3\u201313. Springer.", "citeRegEx": "Koller,? 1999", "shortCiteRegEx": "Koller", "year": 1999}, {"title": "Conditional random fields: Probabilistic models for segmenting and labeling sequence data", "author": ["J. Lafferty"], "venue": "International Conference on Machine Learning (ICML), pp. 282\u2013289. Morgan Kaufmann.", "citeRegEx": "Lafferty,? 2001", "shortCiteRegEx": "Lafferty", "year": 2001}, {"title": "Relational transformation-based tagging for human activity recognition", "author": ["N. Landwehr", "B. Gutmann", "I. Thon", "M. Philipose", "L. De Raedt"], "venue": "In Proceedings of the 6th International Workshop on Multi-relational Data Mining (MRDM07),", "citeRegEx": "Landwehr et al\\.,? \\Q2007\\E", "shortCiteRegEx": "Landwehr et al\\.", "year": 2007}, {"title": "Learning and inferring transportation routines", "author": ["L. Liao", "D. Patterson", "D. Fox", "H. Kautz"], "venue": "Artificial Intelligence,", "citeRegEx": "Liao et al\\.,? \\Q2007\\E", "shortCiteRegEx": "Liao et al\\.", "year": 2007}, {"title": "Learning and inferring transportation routines", "author": ["L. Liao", "D. Fox", "H. Kautz"], "venue": "In Proceedings of the Nineteenth National Conference on Artificial Intelligence", "citeRegEx": "Liao et al\\.,? \\Q2004\\E", "shortCiteRegEx": "Liao et al\\.", "year": 2004}, {"title": "Location-based activity recognition using relational Markov networks", "author": ["L. Liao", "D. Fox", "H. Kautz"], "venue": null, "citeRegEx": "Liao et al\\.,? \\Q2005\\E", "shortCiteRegEx": "Liao et al\\.", "year": 2005}, {"title": "CRF-filters: Discriminative particle filters for sequential state estimation", "author": ["B. Limketkai", "D. Fox", "L. Liao"], "venue": "In Robotics and Automation,", "citeRegEx": "Limketkai et al\\.,? \\Q2007\\E", "shortCiteRegEx": "Limketkai et al\\.", "year": 2007}, {"title": "Temporal information extraction", "author": ["X. Ling", "D. Weld"], "venue": "In Proceedings of the Twenty Fifth National Conference on Artificial Intelligence", "citeRegEx": "Ling and Weld,? \\Q2010\\E", "shortCiteRegEx": "Ling and Weld", "year": 2010}, {"title": "Modelling with PRISM of intelligent system", "author": ["Z. Ma"], "venue": "MSc. Thesis, Linacre College, University of Oxford.", "citeRegEx": "Ma,? 2008", "shortCiteRegEx": "Ma", "year": 2008}, {"title": "Modeling and inference with relational dynamic Bayesian networks", "author": ["C. Manfredotti"], "venue": "Advances in Artificial Intelligence, pp. 287\u2013290. Springer.", "citeRegEx": "Manfredotti,? 2009", "shortCiteRegEx": "Manfredotti", "year": 2009}, {"title": "Relational dynamic Bayesian networks to improve multitarget tracking", "author": ["C. Manfredotti", "E. Messina"], "venue": "In Advanced Concepts for Intelligent Vision Systems,", "citeRegEx": "Manfredotti and Messina,? \\Q2009\\E", "shortCiteRegEx": "Manfredotti and Messina", "year": 2009}, {"title": "Learning RDBNs for activity recognition", "author": ["C. Manfredotti", "H. Hamilton", "S. Zilles"], "venue": "In Neural Information Processing Systems", "citeRegEx": "Manfredotti et al\\.,? \\Q2010\\E", "shortCiteRegEx": "Manfredotti et al\\.", "year": 2010}, {"title": "Bottom-up learning of Markov logic network structure", "author": ["L. Mihalkova", "R. Mooney"], "venue": "In Proceedings of the 24th international conference on Machine learning,", "citeRegEx": "Mihalkova and Mooney,? \\Q2007\\E", "shortCiteRegEx": "Mihalkova and Mooney", "year": 2007}, {"title": "Recognizing multitasked activities using stochastic context-free grammar", "author": ["D. Moore", "I. Essa"], "venue": "Proceedings of AAAI Conference", "citeRegEx": "Moore and Essa,? \\Q2001\\E", "shortCiteRegEx": "Moore and Essa", "year": 2001}, {"title": "Learning structure and parameters of stochastic logic programs", "author": ["S. Muggleton"], "venue": "Proceedings of the 12th international conference on Inductive logic programming, pp. 198\u2013206. Springer-Verlag.", "citeRegEx": "Muggleton,? 2002", "shortCiteRegEx": "Muggleton", "year": 2002}, {"title": "Dynamic bayesian networks: representation, inference and learning", "author": ["K.P. Murphy"], "venue": "Ph.D. thesis, University of California, Berkeley.", "citeRegEx": "Murphy,? 2002", "shortCiteRegEx": "Murphy", "year": 2002}, {"title": "Is it really about me?: message content in social awareness streams", "author": ["M. Naaman", "J. Boase", "Lai", "C.-H"], "venue": "In CSCW \u201910: Proceedings of the 2010 ACM conference on Computer supported cooperative work,", "citeRegEx": "Naaman et al\\.,? \\Q2010\\E", "shortCiteRegEx": "Naaman et al\\.", "year": 2010}, {"title": "Learning first-order probabilistic models with combining rules", "author": ["S. Natarajan", "P. Tadepalli", "E. Altendorf", "T. Dietterich", "A. Fern", "A. Restificar"], "venue": "In Proceedings of the 22nd international conference on Machine learning,", "citeRegEx": "Natarajan et al\\.,? \\Q2005\\E", "shortCiteRegEx": "Natarajan et al\\.", "year": 2005}, {"title": "Logical hierarchical hidden Markov models for modeling user activities", "author": ["S. Natarajan", "H.H. Bui", "P. Tadepalli", "K. Kersting", "W. Wong"], "venue": "Proc. of ILP-08", "citeRegEx": "Natarajan et al\\.,? \\Q2008\\E", "shortCiteRegEx": "Natarajan et al\\.", "year": 2008}, {"title": "Constraint propagation for efficient inference in Markov logic", "author": ["T. Papai", "P. Singla", "H. Kautz"], "venue": "In Seventeenth International Conference on Principles and Practice of Constraint Programming", "citeRegEx": "Papai et al\\.,? \\Q2011\\E", "shortCiteRegEx": "Papai et al\\.", "year": 2011}, {"title": "Honest Signals: How They Shape Our World", "author": ["A.S. Pentland"], "venue": "The MIT Press.", "citeRegEx": "Pentland,? 2008", "shortCiteRegEx": "Pentland", "year": 2008}, {"title": "Sound and efficient inference with probabilistic and deterministic dependencies", "author": ["H. Poon", "P. Domingos"], "venue": "In Proceedings of the National Conference on Artificial Intelligence,", "citeRegEx": "Poon and Domingos,? \\Q2006\\E", "shortCiteRegEx": "Poon and Domingos", "year": 2006}, {"title": "Joint inference in information extraction", "author": ["H. Poon", "P. Domingos"], "venue": "In Proceedings of the 22nd national conference on Artificial intelligence-Volume", "citeRegEx": "Poon and Domingos,? \\Q2007\\E", "shortCiteRegEx": "Poon and Domingos", "year": 2007}, {"title": "Joint unsupervised coreference resolution with Markov logic", "author": ["H. Poon", "P. Domingos"], "venue": "In Proceedings of the Conference on Empirical Methods in Natural Language Processing,", "citeRegEx": "Poon and Domingos,? \\Q2008\\E", "shortCiteRegEx": "Poon and Domingos", "year": 2008}, {"title": "Improving the accuracy and efficiency of map inference for Markov logic", "author": ["S. Riedel"], "venue": "Proceedings of the Proceedings of the Twenty-Fourth Conference Annual Conference on Uncertainty in Artificial Intelligence (UAI-08), pp. 468\u2013475, Corvallis, Oregon. AUAI Press.", "citeRegEx": "Riedel,? 2008", "shortCiteRegEx": "Riedel", "year": 2008}, {"title": "Modeling and reasoning about success, failure, and intent of multi-agent activities", "author": ["A. Sadilek", "H. Kautz"], "venue": "In Mobile Context-Awareness Workshop, Twelfth ACM International Conference on Ubiquitous Computing", "citeRegEx": "Sadilek and Kautz,? \\Q2010\\E", "shortCiteRegEx": "Sadilek and Kautz", "year": 2010}, {"title": "Recognizing multi-agent activities from GPS data", "author": ["A. Sadilek", "H. Kautz"], "venue": "In TwentyFourth AAAI Conference on Artificial Intelligence", "citeRegEx": "Sadilek and Kautz,? \\Q2010\\E", "shortCiteRegEx": "Sadilek and Kautz", "year": 2010}, {"title": "Finding your friends and following them to where you are", "author": ["A. Sadilek", "H. Kautz", "J.P. Bigham"], "venue": "In Fifth ACM International Conference on Web Search and Data Mining (WSDM)", "citeRegEx": "Sadilek et al\\.,? \\Q2012\\E", "shortCiteRegEx": "Sadilek et al\\.", "year": 2012}, {"title": "Parameter learning of logic programs for symbolic-statistical modeling", "author": ["T. Sato", "Y. Kameya"], "venue": "In Journal of Artificial Intelligence Research", "citeRegEx": "Sato and Kameya,? \\Q2001\\E", "shortCiteRegEx": "Sato and Kameya", "year": 2001}, {"title": "New advances in logic-based probabilistic modeling by PRISM", "author": ["T. Sato", "Y. Kameya"], "venue": "In Probabilistic inductive logic programming,", "citeRegEx": "Sato and Kameya,? \\Q2008\\E", "shortCiteRegEx": "Sato and Kameya", "year": 2008}, {"title": "SCARE: A Case Study with Baghdad", "author": ["P. Shakarian", "V. Subrahmanian", "M.L. Spaino"], "venue": "In Proceedings of the Third International Conference on Computational Cultural Dynamics. AAAI", "citeRegEx": "Shakarian et al\\.,? \\Q2009\\E", "shortCiteRegEx": "Shakarian et al\\.", "year": 2009}, {"title": "Activity recognition in desktop environments", "author": ["J. Shen"], "venue": "Ph.D. Thesis, Oregon State University.", "citeRegEx": "Shen,? 2009", "shortCiteRegEx": "Shen", "year": 2009}, {"title": "Mathematical Logic", "author": ["J.R. Shoenfield"], "venue": "Addison-Wesley.", "citeRegEx": "Shoenfield,? 1967", "shortCiteRegEx": "Shoenfield", "year": 1967}, {"title": "Discriminative training of Markov logic networks", "author": ["P. Singla", "P. Domingos"], "venue": "In Proceedings of the National Conference on Artificial Intelligence,", "citeRegEx": "Singla and Domingos,? \\Q2005\\E", "shortCiteRegEx": "Singla and Domingos", "year": 2005}, {"title": "Markov logic in infinite domains. In UAI-07", "author": ["P. Singla", "P. Domingos"], "venue": null, "citeRegEx": "Singla and Domingos,? \\Q2007\\E", "shortCiteRegEx": "Singla and Domingos", "year": 2007}, {"title": "Rethinking location sharing: exploring the implications of social-driven vs. purpose-driven location sharing", "author": ["K. Tang", "J. Lin", "J. Hong", "D. Siewiorek", "N. Sadeh"], "venue": "In Proceedings of the 12th ACM international conference on Ubiquitous computing,", "citeRegEx": "Tang et al\\.,? \\Q2010\\E", "shortCiteRegEx": "Tang et al\\.", "year": 2010}, {"title": "Visual event modeling and recognition using Markov logic networks", "author": ["S. Tran", "L. Davis"], "venue": "In Proceedings of the 10th European Conference on Computer Vision", "citeRegEx": "Tran and Davis,? \\Q2008\\E", "shortCiteRegEx": "Tran and Davis", "year": 2008}, {"title": "Help or hinder: Bayesian models of social goal inference", "author": ["T. Ullman", "C. Baker", "O. Macindoe", "O. Evans", "N. Goodman", "J. Tenenbaum"], "venue": "In Advances in Neural Information Processing Systems (NIPS),", "citeRegEx": "Ullman et al\\.,? \\Q2010\\E", "shortCiteRegEx": "Ullman et al\\.", "year": 2010}, {"title": "Conditional random fields for activity recognition", "author": ["D. Vail"], "venue": "Ph.D. Thesis, Carnegie Mellon University.", "citeRegEx": "Vail,? 2008", "shortCiteRegEx": "Vail", "year": 2008}, {"title": "Feature selection for activity recognition in multi-robot domains", "author": ["D. Vail", "M. Veloso"], "venue": "In Proceedings of AAAI,", "citeRegEx": "Vail and Veloso,? \\Q2008\\E", "shortCiteRegEx": "Vail and Veloso", "year": 2008}, {"title": "Hybrid Markov logic networks", "author": ["J. Wang", "P. Domingos"], "venue": "In Proceedings of the 23rd national conference on Artificial intelligence - Volume", "citeRegEx": "Wang and Domingos,? \\Q2008\\E", "shortCiteRegEx": "Wang and Domingos", "year": 2008}, {"title": "An integrated, conditional model of information extraction and coreference with application to citation matching", "author": ["B. Wellner", "A. McCallum", "F. Peng", "M. Hay"], "venue": "In Proceedings of the 20th conference on Uncertainty in artificial intelligence,", "citeRegEx": "Wellner et al\\.,? \\Q2004\\E", "shortCiteRegEx": "Wellner et al\\.", "year": 2004}, {"title": "Learning and transferring roles in multi-agent mdps", "author": ["A. Wilson", "A. Fern", "S. Ray", "P. Tadepalli"], "venue": "In Proceedings of AAAI", "citeRegEx": "Wilson et al\\.,? \\Q2008\\E", "shortCiteRegEx": "Wilson et al\\.", "year": 2008}, {"title": "Bayesian role discovery for multi-agent reinforcement learning", "author": ["A. Wilson", "A. Fern", "P. Tadepalli"], "venue": "In Proceedings of the 9th International Conference on Autonomous Agents and Multiagent Systems: volume 1-Volume", "citeRegEx": "Wilson et al\\.,? \\Q2010\\E", "shortCiteRegEx": "Wilson et al\\.", "year": 2010}, {"title": "First order theory refinement", "author": ["S. Wrobel"], "venue": "Advances in inductive logic programming, pp. 14\u201333. IOS Press, Amsterdam.", "citeRegEx": "Wrobel,? 1996", "shortCiteRegEx": "Wrobel", "year": 1996}, {"title": "Joint recognition of multiple concurrent activities using factorial conditional random fields", "author": ["T. Wu", "C. Lian", "J. Hsu"], "venue": "In Proc. 22nd Conf. on Artificial Intelligence (AAAI-2007)", "citeRegEx": "Wu et al\\.,? \\Q2007\\E", "shortCiteRegEx": "Wu et al\\.", "year": 2007}, {"title": "Jointly identifying temporal relations with Markov logic", "author": ["K. Yoshikawa", "S. Riedel", "M. Asahara", "Y. Matsumoto"], "venue": "In Proceedings of the Joint Conference of the 47th Annual Meeting of the ACL and the 4th International Joint Conference on Natural Language Processing of the AFNLP: Volume", "citeRegEx": "Yoshikawa et al\\.,? \\Q2009\\E", "shortCiteRegEx": "Yoshikawa et al\\.", "year": 2009}], "referenceMentions": [{"referenceID": 64, "context": "For instance, behavioral patterns of people taking taxis, rating movies, choosing a cell phone provider, or sharing music are best explained and predicted by the habits of related people, rather than by all the \u201csingle person\u201d attributes such as age, race, or education (Bell, Koren, & Volinsky, 2007; Pentland, 2008).", "startOffset": 270, "endOffset": 317}, {"referenceID": 12, "context": "In contrast to these observations, most research effort on activity recognition to date has concentrated on modeling single individuals (Bui, 2003; Liao, Fox, & Kautz, 2004, 2005), or statistical properties of aggregate groups of individuals (Abowd, Atkeson, Hong, Long, Kooper, & Pinkerton, 1997; Horvitz, Apacible, Sarin, & Liao, 2005), or combinations of both (Eagle & Pentland, 2006).", "startOffset": 136, "endOffset": 179}, {"referenceID": 33, "context": "Notable exceptions to this \u201cisolated individuals\u201d approach includes the work of Kamar and Horvitz (2009) and Gupta, Srinivasan, Shi, and Davis (2009), where simple relationships among people are just starting to be explicitly considered and leveraged.", "startOffset": 80, "endOffset": 105}, {"referenceID": 33, "context": "Notable exceptions to this \u201cisolated individuals\u201d approach includes the work of Kamar and Horvitz (2009) and Gupta, Srinivasan, Shi, and Davis (2009), where simple relationships among people are just starting to be explicitly considered and leveraged.", "startOffset": 80, "endOffset": 150}, {"referenceID": 21, "context": "For instance, Eagle and Pentland (2006) elegantly model the location of individuals from multi-modal sensory data, but their approach is oblivious to the explicit effects of one\u2019s friends, relatives, etc.", "startOffset": 14, "endOffset": 40}, {"referenceID": 72, "context": "ML, and inductive logic programming see the work of Shoenfield (1967), Domingos, Kok, Lowd, Poon, Richardson, and Singla (2008), and De Raedt and Kersting (2008), respectively.", "startOffset": 52, "endOffset": 70}, {"referenceID": 19, "context": "ML, and inductive logic programming see the work of Shoenfield (1967), Domingos, Kok, Lowd, Poon, Richardson, and Singla (2008), and De Raedt and Kersting (2008), respectively.", "startOffset": 71, "endOffset": 128}, {"referenceID": 17, "context": "ML, and inductive logic programming see the work of Shoenfield (1967), Domingos, Kok, Lowd, Poon, Richardson, and Singla (2008), and De Raedt and Kersting (2008), respectively.", "startOffset": 136, "endOffset": 162}, {"referenceID": 68, "context": "Even though this problem is in general #P-complete, we achieve reasonable run times by applying Cutting Plane MAP Inference (CPI) (Riedel, 2008).", "startOffset": 130, "endOffset": 144}, {"referenceID": 35, "context": "A Bayesian network (BN) is a directed probabilistic graphical model (Jordan, 1998).", "startOffset": 68, "endOffset": 82}, {"referenceID": 58, "context": "For an extensive treatment of DBNs, see the work of Murphy (2002). There are a number of parameter learning and inference techniques for DBNs.", "startOffset": 52, "endOffset": 66}, {"referenceID": 35, "context": "We calculate the Viterbi decoding efficiently using dynamic programming (Jordan, 1998).", "startOffset": 72, "endOffset": 86}, {"referenceID": 11, "context": "In the world of single-agent location-based reasoning, the work of Bui (2003) presents and evaluates a system for probabilistic plan recognition cast as an abstract hidden Markov memory model.", "startOffset": 67, "endOffset": 78}, {"referenceID": 11, "context": "In the world of single-agent location-based reasoning, the work of Bui (2003) presents and evaluates a system for probabilistic plan recognition cast as an abstract hidden Markov memory model. Subsequently, the work of Liao et al. (2004) implements a system for denoising raw GPS traces and simultaneously inferring individuals\u2019 mode of transportation (car, bus, etc.", "startOffset": 67, "endOffset": 238}, {"referenceID": 11, "context": "In the world of single-agent location-based reasoning, the work of Bui (2003) presents and evaluates a system for probabilistic plan recognition cast as an abstract hidden Markov memory model. Subsequently, the work of Liao et al. (2004) implements a system for denoising raw GPS traces and simultaneously inferring individuals\u2019 mode of transportation (car, bus, etc.) and their goal destination. They cast the problem as learning and inference in a dynamic Bayesian network and achieve encouraging results. In a follow-up work, Liao et al. (2005) introduce a framework for locationbased activity recognition, which is implemented as efficient learning and inference in a relational Markov network.", "startOffset": 67, "endOffset": 548}, {"referenceID": 2, "context": "The work of Ashbrook and Starner (2003) focuses on inferring significant locations from raw GPS logs via clustering.", "startOffset": 12, "endOffset": 40}, {"referenceID": 2, "context": "The work of Ashbrook and Starner (2003) focuses on inferring significant locations from raw GPS logs via clustering. The transition probabilities between important places are subsequently used for a number of user modeling tasks, including location prediction. The work of Eagle and Pentland (2006) explores harnessing data collected on regular smart phones for modeling human behavior.", "startOffset": 12, "endOffset": 299}, {"referenceID": 2, "context": "The work of Ashbrook and Starner (2003) focuses on inferring significant locations from raw GPS logs via clustering. The transition probabilities between important places are subsequently used for a number of user modeling tasks, including location prediction. The work of Eagle and Pentland (2006) explores harnessing data collected on regular smart phones for modeling human behavior. Specifically, they infer individuals\u2019 general location from nearby cell towers and Bluetooth devices at various times of day. Applying a hidden Markov model (HMM), they show that predicting if a person is at home, at work, or someplace else can be achieved with more than 90% accuracy. Similarly, the work of Eagle and Pentland (2009) extracts significant patterns and signatures in people\u2019s movement by applying eigenanalysis to smart phone logs.", "startOffset": 12, "endOffset": 722}, {"referenceID": 2, "context": "The work of Ashbrook and Starner (2003) focuses on inferring significant locations from raw GPS logs via clustering. The transition probabilities between important places are subsequently used for a number of user modeling tasks, including location prediction. The work of Eagle and Pentland (2006) explores harnessing data collected on regular smart phones for modeling human behavior. Specifically, they infer individuals\u2019 general location from nearby cell towers and Bluetooth devices at various times of day. Applying a hidden Markov model (HMM), they show that predicting if a person is at home, at work, or someplace else can be achieved with more than 90% accuracy. Similarly, the work of Eagle and Pentland (2009) extracts significant patterns and signatures in people\u2019s movement by applying eigenanalysis to smart phone logs. The work of Hu, Pan, Zheng, Liu, and Yang (2008) concentrates on recognition of interleaving and overlapping activities.", "startOffset": 12, "endOffset": 884}, {"referenceID": 64, "context": ", being at a store often implies shopping) (Tang, Lin, Hong, Siewiorek, & Sadeh, 2010), and our social networks have tremendous influence on our behavior (Pentland, 2008).", "startOffset": 154, "endOffset": 170}, {"referenceID": 27, "context": "Additionally, a number of researchers in machine vision have worked on the problem of recognizing events in videos of sporting events, such as impressive recent work on learning models of baseball plays (Gupta et al., 2009).", "startOffset": 203, "endOffset": 223}, {"referenceID": 31, "context": "Other researchers explore an intelligent and nonintrusive navigation system that takes advantage of predictions of traffic conditions along with a model of user\u2019s knowledge and competence (Horvitz et al., 2005).", "startOffset": 188, "endOffset": 210}, {"referenceID": 0, "context": "Additionally, the work of Abowd et al. (1997) presents a location- and context-aware system, Cyberguide, that helps people explore and fully experience foreign locations.", "startOffset": 26, "endOffset": 46}, {"referenceID": 0, "context": "Additionally, the work of Abowd et al. (1997) presents a location- and context-aware system, Cyberguide, that helps people explore and fully experience foreign locations. Other researchers explore an intelligent and nonintrusive navigation system that takes advantage of predictions of traffic conditions along with a model of user\u2019s knowledge and competence (Horvitz et al., 2005). Finally, the work of Kamar and Horvitz (2009) explore automatic generation of synergistic plans regarding sharing vehicles across multiple commuters.", "startOffset": 26, "endOffset": 429}, {"referenceID": 0, "context": "Additionally, the work of Abowd et al. (1997) presents a location- and context-aware system, Cyberguide, that helps people explore and fully experience foreign locations. Other researchers explore an intelligent and nonintrusive navigation system that takes advantage of predictions of traffic conditions along with a model of user\u2019s knowledge and competence (Horvitz et al., 2005). Finally, the work of Kamar and Horvitz (2009) explore automatic generation of synergistic plans regarding sharing vehicles across multiple commuters. An interesting line of work in cognitive science focuses on intent and goal recognition in a probabilistic framework (Baker, Tenenbaum, & Saxe, 2006, 2007). Specifically, they cast goal inference as inverse planning problem in Markov decision processes, where Bayesian inversion is used to estimate the posterior distribution over possible goals. Recent extensions of this work begin to consider simulated multi-agent domains (Baker, Goodman, & Tenenbaum, 2008; Ullman, Baker, Macindoe, Evans, Goodman, & Tenenbaum, 2010; Baker, Saxe, & Tenenbaum, 2011). Comparison of the computational models against human judgement in synthetic domains shows a strong correlation between people\u2019s predicted and actual behavior. However, the computational challenges involved in dealing with the underlying partially observable Markov decision processes are prohibitive in more complex domains with large state spaces, such as ours. The focus of our work is on a different aspect of reasoning about people\u2019s goals. Rather than inferring a distribution over possible, a priori known goals, we automatically induce the goals of complex multi-agent activities themselves. Other researchers have concentrated on modeling behavior of people and general agents as reinforcement learning problems in both single-agent and multi-agent settings. The work of Ma (2008) proposes a system for household activity recognition cast as a single-agent Markov decision process problem that is subsequently solved using a probabilistic model checker.", "startOffset": 26, "endOffset": 1877}, {"referenceID": 21, "context": ", text segmentation coupled with entity resolution) (Poon & Domingos, 2007), co-reference resolution (Poon & Domingos, 2008), information extraction coupled with co-reference resolution (Wellner, McCallum, Peng, & Hay, 2004), temporal relation identification (Yoshikawa, Riedel, Asahara, & Matsumoto, 2009; Ling & Weld, 2010), and record de-duplication (Domingos, 2004; Culotta & McCallum, 2005).", "startOffset": 353, "endOffset": 395}, {"referenceID": 29, "context": "The work of Hong (2001) concentrates on recognizing the goal of an agent in the course of her activities in a deterministic, but relational setting.", "startOffset": 12, "endOffset": 24}, {"referenceID": 29, "context": "The work of Hong (2001) concentrates on recognizing the goal of an agent in the course of her activities in a deterministic, but relational setting. Interesting work on goal recognition has been also applied to computer-aided monitoring of complex multi-agent systems, where relationships between agents are leveraged to compensate for noise and sparse data (Kaminka, Tambe, Pynadath, & Tambe, 2002). By contrast, in our work we focus on learning the respective goals of a given set of multi-agent activities in a probabilistic setting. The knowledge is in turn leveraged to achieve a stronger robustness of the other recognition tasks. Similarly to the approach of Hong, our system does not need a supplied plan library either. Our work also touches on anomaly detection since our system reasons about the failed attempts of the players. Anomaly detection concerns itself with revealing segments of the data that in some way violate our expectations. For an excellent survey of the subject, we refer the reader to the results of Chandola, Banerjee, and Kumar (2009). In the realm of anomaly detection within people\u2019s activities, the work of Moore and Essa (2001) addresses the problem of error detection and recovery card games that involve two players recorded on video.", "startOffset": 12, "endOffset": 1067}, {"referenceID": 29, "context": "The work of Hong (2001) concentrates on recognizing the goal of an agent in the course of her activities in a deterministic, but relational setting. Interesting work on goal recognition has been also applied to computer-aided monitoring of complex multi-agent systems, where relationships between agents are leveraged to compensate for noise and sparse data (Kaminka, Tambe, Pynadath, & Tambe, 2002). By contrast, in our work we focus on learning the respective goals of a given set of multi-agent activities in a probabilistic setting. The knowledge is in turn leveraged to achieve a stronger robustness of the other recognition tasks. Similarly to the approach of Hong, our system does not need a supplied plan library either. Our work also touches on anomaly detection since our system reasons about the failed attempts of the players. Anomaly detection concerns itself with revealing segments of the data that in some way violate our expectations. For an excellent survey of the subject, we refer the reader to the results of Chandola, Banerjee, and Kumar (2009). In the realm of anomaly detection within people\u2019s activities, the work of Moore and Essa (2001) addresses the problem of error detection and recovery card games that involve two players recorded on video.", "startOffset": 12, "endOffset": 1164}, {"referenceID": 45, "context": "Our Markov logic theory can be viewed as a template for a conditional random field (Lafferty, 2001), an undirected graphical model that captures the conditional probability of hidden labels given observations, rather than the joint probability of both labels and observations, as one would typically do in a directed graphical model.", "startOffset": 83, "endOffset": 99}, {"referenceID": 34, "context": "In the relational world, directed formalisms include relational Bayesian networks (Jaeger, 1997) and their dynamic counterparts (Manfredotti, 2009), probabilistic relational models (Koller, 1999; Friedman, Getoor, Koller, & Pfeffer, 1999), Bayesian logic programs (Kersting & De Raedt, 2000), and first-order conditional influence language (Natarajan, Tadepalli, Altendorf, Dietterich, Fern, & Restificar, 2005).", "startOffset": 82, "endOffset": 96}, {"referenceID": 53, "context": "In the relational world, directed formalisms include relational Bayesian networks (Jaeger, 1997) and their dynamic counterparts (Manfredotti, 2009), probabilistic relational models (Koller, 1999; Friedman, Getoor, Koller, & Pfeffer, 1999), Bayesian logic programs (Kersting & De Raedt, 2000), and first-order conditional influence language (Natarajan, Tadepalli, Altendorf, Dietterich, Fern, & Restificar, 2005).", "startOffset": 128, "endOffset": 147}, {"referenceID": 44, "context": "In the relational world, directed formalisms include relational Bayesian networks (Jaeger, 1997) and their dynamic counterparts (Manfredotti, 2009), probabilistic relational models (Koller, 1999; Friedman, Getoor, Koller, & Pfeffer, 1999), Bayesian logic programs (Kersting & De Raedt, 2000), and first-order conditional influence language (Natarajan, Tadepalli, Altendorf, Dietterich, Fern, & Restificar, 2005).", "startOffset": 181, "endOffset": 238}, {"referenceID": 18, "context": "Interestingly, the work in Denis and Baldridge (2007) jointly addresses the problems of anaphoricity and co-reference via a manual formulation of an integer linear program.", "startOffset": 27, "endOffset": 54}, {"referenceID": 18, "context": "Interestingly, the work in Denis and Baldridge (2007) jointly addresses the problems of anaphoricity and co-reference via a manual formulation of an integer linear program. Joint activity modeling has also been shown to yield better recognition accuracy, as compared to \u201cpipeline\u201d baselines as well as baselines that make strong inter-activity independence assumptions. The work of Wu, Lian, and Hsu (2007) performs joint learning and inference over concurrent singleagent activities using a factorial conditional random field model.", "startOffset": 27, "endOffset": 407}, {"referenceID": 18, "context": "Interestingly, the work in Denis and Baldridge (2007) jointly addresses the problems of anaphoricity and co-reference via a manual formulation of an integer linear program. Joint activity modeling has also been shown to yield better recognition accuracy, as compared to \u201cpipeline\u201d baselines as well as baselines that make strong inter-activity independence assumptions. The work of Wu, Lian, and Hsu (2007) performs joint learning and inference over concurrent singleagent activities using a factorial conditional random field model. Similarly, the work of Helaoui, Niepert, and Stuckenschmidt (2010) models interleaved activities in Markov logic.", "startOffset": 27, "endOffset": 601}, {"referenceID": 18, "context": "Interestingly, the work in Denis and Baldridge (2007) jointly addresses the problems of anaphoricity and co-reference via a manual formulation of an integer linear program. Joint activity modeling has also been shown to yield better recognition accuracy, as compared to \u201cpipeline\u201d baselines as well as baselines that make strong inter-activity independence assumptions. The work of Wu, Lian, and Hsu (2007) performs joint learning and inference over concurrent singleagent activities using a factorial conditional random field model. Similarly, the work of Helaoui, Niepert, and Stuckenschmidt (2010) models interleaved activities in Markov logic. They distinguish between foreground and background activities and infer a time window in which each activity takes place from RFID sensory data. By contrast, we focus on joint reasoning about multi-agent activities and attempts in a fully relational\u2014and arguably significantly more noisy\u2014setting. The work of Manfredotti, Hamilton, and Zilles (2010) propose a hierarchical activity recognition system formulated as learning and inference in relational dynamic Bayesian networks.", "startOffset": 27, "endOffset": 998}, {"referenceID": 16, "context": "The work of Landwehr, Gutmann, Thon, Philipose, and De Raedt (2007) casts single-agent activity recognition as a relational transformation learning problem, building on transformationbased tagging from natural language processing.", "startOffset": 55, "endOffset": 68}, {"referenceID": 16, "context": "Logical hidden Markov models (LHMMs) have been proposed to address this problem (Kersting, De Raedt, & Raiko, 2006). LHMMs are a generalization of standard HMMs that compactly represents probability distributions over sequences of logical atoms rather than flat symbols. LHMMs have been proven strictly more powerful than their propositional counterparts (HMMs). By applying techniques from logic-based reasoning, such as unification, while leveraging the logical structure component of the model, Kersting et al. show that LHMMs often require fewer parameters and achieve higher accuracy than HMMs. LHMMs have been recently applied to activity recognition. In the context of intelligent user interfaces, the work of Shen (2009) designs and evaluates a LHMM model for recognition of people\u2019s activities and workflows carried out on a desktop computer.", "startOffset": 94, "endOffset": 729}, {"referenceID": 88, "context": "In fact, our theory augmentation algorithm can be viewed as an efficient Markov logic based version of theory refinement, a well-established ILP technique that aims to improve the quality of a theory in terms of simplicity, fit to newly acquired data, efficiency or other factors (Wrobel, 1996).", "startOffset": 280, "endOffset": 294}, {"referenceID": 19, "context": "This includes early work on top-down structure learning, where clauses in the knowledge base are greedily modified by adding, flipping, and deleting logical literals (Kok & Domingos, 2005). This search is guided by the likelihood of the training data under the current model. The work of Mihalkova and Mooney (2007) exploit patterns in the ground Markov logic networks to introduce a bottom-up declarative bias that makes their algorithm less susceptible to finding only local optima, as compared to alternative greedy methods.", "startOffset": 173, "endOffset": 316}, {"referenceID": 19, "context": "This includes early work on top-down structure learning, where clauses in the knowledge base are greedily modified by adding, flipping, and deleting logical literals (Kok & Domingos, 2005). This search is guided by the likelihood of the training data under the current model. The work of Mihalkova and Mooney (2007) exploit patterns in the ground Markov logic networks to introduce a bottom-up declarative bias that makes their algorithm less susceptible to finding only local optima, as compared to alternative greedy methods. Similarly, the work of Kok and Domingos (2009) introduce a bottom-up declarative bias based on lifted hypergraph representation of the relational database.", "startOffset": 173, "endOffset": 575}, {"referenceID": 16, "context": "The work of Davis and Domingos (2009) successfully uses second-order Markov logic in deep transfer learning.", "startOffset": 12, "endOffset": 38}], "year": 2012, "abstractText": "Recent research has shown that surprisingly rich models of human activity can be learned from GPS (positional) data. However, most effort to date has concentrated on modeling single individuals or statistical properties of groups of people. Moreover, prior work focused solely on modeling actual successful executions (and not failed or attempted executions) of the activities of interest. We, in contrast, take on the task of understanding human interactions, attempted interactions, and intentions from noisy sensor data in a fully relational multi-agent setting. We use a real-world game of capture the flag to illustrate our approach in a well-defined domain that involves many distinct cooperative and competitive joint activities. We model the domain using Markov logic, a statistical-relational language, and learn a theory that jointly denoises the data and infers occurrences of high-level activities, such as a player capturing an enemy. Our unified model combines constraints imposed by the geometry of the game area, the motion model of the players, and by the rules and dynamics of the game in a probabilistically and logically sound fashion. We show that while it may be impossible to directly detect a multi-agent activity due to sensor noise or malfunction, the occurrence of the activity can still be inferred by considering both its impact on the future behaviors of the people involved as well as the events that could have preceded it. Further, we show that given a model of successfully performed multi-agent activities, along with a set of examples of failed attempts at the same activities, our system automatically learns an augmented model that is capable of recognizing success and failure, as well as goals of people\u2019s actions with high accuracy. We compare our approach with other alternatives and show that our unified model, which takes into account not only relationships among individual players, but also relationships among activities over the entire length of a game, although more computationally costly, is significantly more accurate. Finally, we demonstrate that explicitly modeling unsuccessful attempts boosts performance on other important recognition tasks.", "creator": "TeX"}}}