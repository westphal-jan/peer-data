{"id": "1404.4258", "review": {"conference": "ICML", "VERSION": "v1", "DATE_OF_SUBMISSION": "16-Apr-2014", "title": "An Analysis of State-Relevance Weights and Sampling Distributions on L1-Regularized Approximate Linear Programming Approximation Accuracy", "abstract": "Recent interest in the use of $L_1$ regularization in the use of value function approximation includes Petrik et al.'s introduction of $L_1$-Regularized Approximate Linear Programming (RALP). RALP is unique among $L_1$-regularized approaches in that it approximates the optimal value function using off-policy samples. Additionally, it produces policies which outperform those of previous methods, such as LSPI. RALP's value function approximation quality is affected heavily by the choice of state-relevance weights in the objective function of the linear program, and by the distribution from which samples are drawn; however, there has been no discussion of these considerations in the previous literature. In this paper, we discuss and explain the effects of choices in the state-relevance weights and sampling distribution on approximation quality, using both theoretical and experimental illustrations. The results provide insight not only onto these effects, but also provide intuition into the types of MDPs which are especially well suited for approximation with RALP.", "histories": [["v1", "Wed, 16 Apr 2014 14:15:43 GMT  (341kb,D)", "https://arxiv.org/abs/1404.4258v1", "Identical to the ICML 2014 paper of the same name, but with full proofs. Please cite the ICML paper"], ["v2", "Thu, 24 Apr 2014 15:50:46 GMT  (341kb,D)", "http://arxiv.org/abs/1404.4258v2", "Identical to the ICML 2014 paper of the same name, but with full proofs. Please cite the ICML paper"]], "COMMENTS": "Identical to the ICML 2014 paper of the same name, but with full proofs. Please cite the ICML paper", "reviews": [], "SUBJECTS": "cs.AI", "authors": ["gavin taylor", "connor geer", "david piekut"], "accepted": true, "id": "1404.4258"}, "pdf": {"name": "1404.4258.pdf", "metadata": {"source": "META", "title": "An Analysis of State-Relevance Weights and Sampling Distributions on L1-Regularized Approximate Linear Programming Approximation Accuracy", "authors": ["Gavin Taylor", "Connor Geer", "David Piekut"], "emails": ["TAYLOR@USNA.EDU"], "sections": [{"heading": "1. Introduction", "text": "In recent years, the Reinforcement Learning community has paid considerable attention to creating value function approximation approaches which perform automated feature selection while approximating a value function (Kolter & Ng, 2009; Johns et al., 2010; Mahadevan & Liu, 2012; Liu et al., 2012). This approach frees researchers from hand-selecting and -tuning feature sets, while greatly increasing approximation accuracy. One of these ap-\nProceedings of the 31st International Conference on Machine Learning, Beijing, China, 2014. JMLR: W&CP volume 32.\nproaches, L1-Regularized Approximate Linear Programming (RALP) (Petrik et al., 2010; Taylor & Parr, 2012) is unique in that it results in an approximation of the optimal value function and makes use of off-policy samples.\nHowever, important aspects of RALP have not been fully explored or explained. In particular, the objective function of the linear program offers an opportunity to create a better approximation of the value function in some regions of the state space at the expense of others. Optimal policies of many realistic reinforcement learning problems heavily traffic some parts of the state space while avoiding others, making an understanding of this flexibility useful.\nTherefore, in Section 4, we derive a new error bound for the RALP approximation, which is tighter than those presented by Petrik et al. (2010) and provides new insight into the result of changing the state-relevance weights in the objective function. In addition, this bound provides an insight into the types of MDPs particularly well suited to the RALP approach. Finally, this section provides evidence that rather than weighting all states equally, as was done by Petrik et al. (2010) and Taylor and Parr (2012), states should instead be weighted in proportion to the stationary distribution under the optimal policy.\nAdditionally, if the sampling distribution is not uniform across the state space, the approximation can be heavily affected. In realistic domains, sampling is rarely uniform. Therefore, for RALP to be appropriate for these domains, it is important to address this lack of analysis and understand how the approximation is likely to be altered due to the problem\u2019s available sampling scheme.\nSection 5 then discusses the impact on the approximation if learning is performed using samples drawn other than uniformly from the state space. We demonstrate that sampling from a distribution acts as a de facto alteration of the objective function. We also discuss the effects of sampling distributions in light of the bounds from Section 4.\nThe intuition provided by Sections 4 and 5 are then demon-\nar X\niv :1\n40 4.\n42 58\nv2 [\ncs .A\nI] 2\n4 A\npr 2\n01 4\nstrated experimentally in Section 6. Using a simple, easily visualized domain, we demonstrate the effect of the various parameters on approximation quality."}, {"heading": "2. Notation and Problem Statement", "text": "In this section, we formally define Markov decision processes and linear value function approximation. A Markov decision process (MDP) is a tuple (S,A, P, R, \u03b3), where S is the measurable, possibly infinite set of states, and A is the finite set of actions. P \u2236 S \u00d7S \u00d7A \u21a6 [0, 1] is the transition function, where P(s\u2032\u2223s, a) represents the probability of transitioning from state s to state s\u2032, given action a. The function R \u2236 S \u21a6 R is the reward function, and \u03b3, a number between 0 and 1, is the discount factor, representing the comparative desire for reward at the current time step to the desire for reward at the next time step.\nWe are concerned with finding a value function V that maps each state s \u2208 S to the expected total \u03b3-discounted reward for the process. Value functions can be useful in creating or analyzing a policy \u03c0 \u2236 S \u00d7A\u2192 [0, 1] such that for all s \u2208 S, \u2211a\u2208A \u03c0(s, a) = 1. The transition and reward functions for a given policy are denoted by P\u03c0 and R\u03c0 . We denote the Bellman operator for a given policy as T\u03c0 , and the max Bellman operator simply as T. That is, for some state s \u2208 S:\nT\u03c0V(s) = R(s)+ \u03b3\u222bS P(ds \u2032\u2223s, \u03c0(s))V(s\u2032)\nTV(s) = max \u03c0\u2208\u03a0 T\u03c0V(s).\nWe additionally denote the Bellman operator for selecting a particular action a as\nTaV(s) = R(s)+\u222bS P(ds \u2032\u2223s, a)V(s\u2032).\nThe optimal value function V\u2217 satisfies TV\u2217(s) = V\u2217(s) for all s \u2208 S. For simplicity, in this paper we will assume no noise exists in the MDP; results can be easily extended to noisy domains using Taylor and Parr\u2019s (2012) approach of local smoothing.\nSets of samples, therefore, are defined as \u03a3 \u2286 {(s, a, r, s\u2032\u2223s, s\u2032 \u2208 S, a \u2208 A}, where s\u2032 is the state the agent arrived at given that it started in state s and took action a, and r = R(s). An individual sample in the set \u03a3 will be denoted \u03c3, and an element of a sample \u03c3 will be denoted with superscripts; that is, the s component of a \u03c3 = (s, a, r, s\u2032) sample will be denoted \u03c3s.\nWe focus on linear value function approximation for discounted infinite-horizon problems, in which the value function is represented as a linear combination of possibly nonlinear basis functions (vectors). For each state s, we define\na vector \u03a6(s) of features. The rows of the basis matrix \u03a6 correspond to \u03a6(s), and the approximation space is generated by the columns of the matrix. That is, the basis matrix \u03a6, and the approximate value function V\u0302 are represented as:\n\u03a6 = (\u2212 \u03a6(s1) \u2212\u22ee ) V\u0302 = \u03a6w.\nThis form of linear representation allows for the calculation of an approximate value function in a lower-dimensional space, which provides significant computational benefits over using a complete basis; if the number of features is small and the environment is noisy, this framework can also guard against overfitting any noise in the samples.\nIf we define \u03a6 to be overcomplete, with potentially far more features than sampled states, then to receive the above benefits we must perform feature selection. In this process, a few features are chosen from the set, the span of which will represent the available linear approximation space. We can use L1 regularization to calculate a sparse w, in which nearly all features receive a weight of 0, thereby performing automated feature selection."}, {"heading": "3. Previous Work", "text": "RALP was introduced by Petrik et al. (2010) to extend the capabilities of the linear programming approach to value function approximation (d\u2019Epenoux, 1963; Schweitzer & Seidmann, 1985; de Farias & Van Roy, 2003). Given a set of samples \u03a3, the linear program is defined as follows:\nmin w \u03c1T\u03a6w s.t. T\u03c3a \u03a6(\u03c3s)w \u2264 \u03a6(\u03c3s)w \u2200\u03c3 \u2208 \u03a3\n\u2225w\u2225\u22121 \u2264 \u03c8, (1)\nwhere \u03c1 is a distribution, which we call the state-relevance weights, in keeping with the (unregularized) Approximate Linear Programming (ALP) terminology of de Farias and Van Roy (2003). \u2225w\u2225\u22121 is the L1 norm of the vector consisting of all weights excepting the one corresponding to the constant feature.\nThis final constraint, which contributes L1 regularization, provides several benefits. First, regularization in general ensures the linear program is bounded, and produces a smoother value function. Second, L1 regularization in particular produces a sparse solution, producing automated feature selection from an overcomplete feature set. Finally, the sparsity results in few of the constraints being active, speeding the search for a solution by a linear program solver, particularly if constraint generation is used.\nOther techniques have used L1 regularization in similar ways. LARS-TD (Kolter & Ng, 2009) and LC-MPI (Johns et al., 2010) both approximate the fixed point of the L1regularized LSTD problem. Mahadevan and Liu (2012)\nintroduced the use of mirror descent, which has a computation complexity which allows it to be better suited than many other approaches for online reinforcement learning problems. These above approaches are most reliable when samples are collected on-policy. Liu et al. (2012) introduced RO-TD, which converges to an approximation of the value function of a given policy, even when trained on offpolicy samples.\nIn contrast to the above approaches, RALP provides an approximation to the value function of the optimal policy, even when samples are drawn from non-optimal or random policies. Approximations produced by RALP have bounded error, and have performed well experimentally in comparison to other approaches. Finally, in noisy domains, the well-known weakness of linear programming approaches to value function approximation can be mitigated or eliminated using local smoothing (Taylor & Parr, 2012).\nThis previous work on RALP has largely ignored the staterelevance weights \u03c1 in the objective function, setting \u03c1 = 1 without discussion. However, a change in the objective function would obviously affect the solution of the linear program. In certain practical situations this would be useful to understand. For example, consider the task of calculating a value function for an aircraft in flight. The space of possible flight attitudes, velocities, etc. is very large. However, the percentage of this space trafficked in non-catastrophic flight is small; it is likely worthwhile to improve the approximation quality in this relevant portion, at the expense of accuracy in the remainder of the space.\nSome previous results exist regarding the effects of changing the state-relevance weights in the closely-related ALP (de Farias & Van Roy, 2003). However, the assumptions and types of appropriate problems are very different between ALP and RALP, making these previous results insufficient. First, ALP assumes a sample is drawn from every state-action pair, an assumption which is not required for RALP. This means it was not necessary with ALP to consider the behavior of the approximation between samples or in a continuous space. Furthermore, it was not necessary to consider the effects of sampling distributions at all. This assumption was later weakened by a followup paper (de Farias & Van Roy, 2004), but not to a degree necessary for large or continuous problems, particularly when large numbers of samples are not available. The second difference is ALP is unregularized, simplifying the definition of the feasible space of the linear program. Despite these differences, these previous results will serve as a useful guide.\nAdditionally, previous work does not cover the effects of sampling schemes on RALP. If states are sampled heavily in one portion of the state space, the linear program will\nchoose a solution which tightens constraints in that portion of the space over others. In realistic settings, it can be difficult to sample uniformly, making it especially important to understand the effect of other sampling distributions on the resulting approximate value function.\nThe remainder of this document fills in these gaps in the previous work."}, {"heading": "4. State-Relevance Weights", "text": "The theoretical results presented on RALP in the literature thus far offer no insights into the behavior of the approximation as the state-relevance weights are altered. Therefore, it is necessary to derive new bounds for RALP which contain \u03c1 to understand its effects.\nThe approach we take follows the example of a proof introduced by de Farias and Van Roy (2003) to bound the ALP approximation, but we extend it match the weaker assumptions of RALP, along with the requirement that the weights be L1 regularized.\nWe begin by defining the relevant notation. In the following definitions, we will use R+ to refer to the set of nonnegative real numbers.\nDefinition 1 We introduce an operator H, defined by\n(HL)(s) = max a\u2208A \u222bS p(s\n\u2032\u2223s, a)L(s\u2032) ds\u2032,\nfor all L \u2236 S \u2192R+.\nTherefore, (HL)(s) represents the expected value of L of the next state if actions are chosen to maximize L.\nDefinition 2 A non-negative function L \u2236 S \u2192R+ is a Lyapunov function if there exists a subset of states B and a \u03b2L < 1 such that for all s \u2208 S \u2216B, \u03b3(HL)(s) \u2264 \u03b2LL(s).\nFor an example of a Lyapunov function defined over a MDP, consider the simple case of a random walk along the non-negative number line, so that s \u2208 Z+. Assume a single action, in which the probability\np = p(st+1 = max(m \u2212 1, 0)\u2223st = m) > 0.5\nand p(st+1 = m + 1\u2223st = m) = 1\u2212 p.\nIf L(s) = s and B = {0}, then L is a valid Lyapunov function, because L(s) is expected to decrease for all s \u2260 0. Lyapunov functions are often used to prove stability of Markov processes. Definition 2 differs from the definition commonly used for stability analysis in a few ways. First, in stability analysis, it is required that S be countable, and\nthat B be finite. We have made neither of these assumptions, though our bounds will be tightest when B is small. The second difference is we have added a multiplicative term of \u03b3. Because of these differences, a Lyapunov function as defined in Definition 2 may not strictly evidence stability.\nBesides stability analysis, Lyapunov functions have also previously appeared in Reinforcement Learning literature, though in different contexts from our application (Perkins & Barto, 2003; Rohanimanesh et al., 2004).\nIn the remainder of this section, we will occasionally refer to the weighted max-norm, where for a vector U and a function F, \u2225U\u2225\u221e,F = maxi \u2223U(si) \u22c5 F(si)\u2223, and the weighted L1 norm, where \u2225U\u22251,F = \u2211i \u2223U(si) \u22c5 F(si)\u2223. We will start with the following Lemma. To conserve space, and because the proof is similar to one presented by de Farias and Van Roy (2003), we reserve the proof for Appendix A.\nLemma 1 Assume samples have been drawn from every possible state-action pair. LetW = {w \u2236 \u2225w\u2225\u22121 \u2264 \u03c8}, and let w\u2217 = minw\u2208W \u2225V\u2217 \u2212\u03a6w\u2225\u221e. Additionally, for a given Lyapunov function \u03a6wL, let\nw\u0304 = w\u2217 + \u2225V\u2217 \u2212\u03a6w\u2217\u2225\u221e, 1\u03a6wL ( 2 1\u2212 \u03b2\u03a6wL \u2212 1)wL."}, {"heading": "If a Lyapunov function \u03a6wL is constructed such that w\u0304 \u2208", "text": "W , then,\n\u2225V\u2217 \u2212\u03a6w\u0303\u22251,\u03c1 \u2264 2\u03c1T\u03a6wL 1\u2212 \u03b2\u03a6wL min w\u2208W \u2225V\u2217 \u2212\u03a6w\u2225\u221e, 1\u03a6wL .\nWe note that proving the existence of a Lyapunov function as required in the above lemma is trivial. First we construct a weight vector wL with all zeros but for a positive weight corresponding to the bias feature; this results in \u03a6wL being a valid Lyapunov function. Second, we note that in this case \u2225w\u0304\u2225\u22121 = \u2225w\u2217\u2225\u22121, meeting the requirement that w\u0304 \u2208 W . We must now remove the assumption that a sample exists for every state-action pair. To enable us to bound the behavior of the value function between samples, we make the following assumption, similar to the sufficient sampling assumption made by Petrik et al. (2010):\nAssumption 1 Assume sufficient sampling, that is, for all s \u2208 S and a \u2208 A, there exists a \u03c3 \u2208 \u03a3 such that \u03c3a = a and:\n\u2225\u03c6(\u03c3s)\u2212 \u03c6(s)\u2225\u221e \u2264\u03b4\u03c6 \u2225R(\u03c3s)\u2212 R(s)\u2225\u221e \u2264\u03b4R\n\u2225p(s\u2032\u2223\u03c3s, a)\u2212 p(s\u2032\u2223s, a)\u2225\u221e \u2264\u03b4P \u2200s\u2032 \u2208 S\nThis assumption is not unrealistic. For example, if the reward function, basis functions, and transition functions are Lipschitz continuous, then appropriate values of \u03b4\u03c6, \u03b4R, and \u03b4P are easily calculated given the greatest distance between any point in the state space and a sampled point.\nWe describe the maximum difference between the RALP solution and the true solution by using the limits from Assumption 1 to demonstrate the following Lemma:\nLemma 2 Let M1 be an MDP with optimal value function V\u22171 , and let \u03a3 be an incomplete set of samples drawn from M1 such that not all state-action pairs are sampled, but Assumption 1 is fulfilled. Therefore, the RALP for M1 has the constraint T\u03c3a \u03a6(\u03c3s)w \u2264 \u03a6(\u03c3s)w for all \u03c3 \u2208 \u03a3, and the bounded L1 constraint, but is missing all other possible RALP constraints.\nThere exists an MDP M2 with an optimal value function V\u22172 , identical in every way to M1 but for the reward function, such that the RALP solution with no missing constraints is equal to the RALP solution constructed on \u03a3, and \u2225V\u22171 \u2212V\u22172 \u2225\u221e \u2264 2(\u03b4\u03c6\u03c8+\u03b4R+\u03b4P\u03c8) 1\u2212\u03b3 .\nProof Sketch: We first show that if R1 and R2 are the respective reward functions of M1 and M2,\n\u2225R1 \u2212 R2\u2225\u221e \u2264 2(\u03b4\u03c6\u03c8 + \u03b4R + \u03b4P\u03c8).\nWe then show that if \u2225R1 \u2212 R2\u2225\u221e \u2264 \u03b4,\n\u2225V\u22171 \u2212V\u22172 \u2225\u221e \u2264 \u03b4\n1\u2212 \u03b3 .\nWe leave the details of the proof for Appendix B.\nWe are now prepared to present the first result of this paper.\nTheorem 1 Let \u03a6wL be a Lyapunov function as required by Lemma 1. Define \u03a3, MDPs M1 and M2 and their respective optimal value functions V\u22171 and V \u2217 2 as in Lemma 2. Define ep = \u03b4\u03c6\u03c8+ \u03b4R + \u03b4P\u03c8. Let w\u0303 be the RALP solution to M1.\n\u2225V\u22171 \u2212\u03a6w\u0303\u22251,\u03c1 \u2264 2\u03c1T\u03a6wL 1\u2212 \u03b2\u03a6wL min w\u2208W \u2225V\u22172 \u2212\u03a6w\u2225\u221e, 1\u03a6wL + 2ep 1\u2212 \u03b3 .\nProof: Because w\u0303 is an optimal solution given all samples from M2, Lemmas 1 and 2 allow us\n\u2225V\u22172 \u2212\u03a6w\u0303\u22251,\u03c1 \u2264 2\u03c1T\u03a6wL 1\u2212 \u03b2\u03a6wL min w\u2208W \u2225V\u22172 \u2212\u03a6w\u2225\u221e, 1\u03a6wL .\nAdditionally, Lemma 2 gave us \u2225V\u22171 \u2212V\u22172 \u2225\u221e \u2264 2ep 1\u2212\u03b3 .\nBecause \u03c1 is a probability distribution,\n\u2225V\u22171 \u2212V\u22172 \u22251,\u03c1 \u2264 \u2225V\u22171 \u2212V\u22172 \u2225\u221e \u2264 2ep\n1\u2212 \u03b3 .\nDue to the triangle inequality, Theorem 1 follows."}, {"heading": "4.1. Discussion", "text": "This bound is not only tighter than those presented in previous literature, but also allows us to analyze the RALP approximation quality in new ways. First, we can observe which Lyapunov functions would result in a better approximation, and discuss the characteristics of MDPs which allow for those Lyapunov functions, and therefore lend themselves particularly well to value function approximation by RALP. Second, as \u03c1 now appears in our bound, the bound provides a way of relating our choice of \u03c1 to approximation quality, allowing for more intuitive and successful parameter assignments. We address these in turn.\nThe Lyapunov function \u03a6wL appears in the first term of our bound in three places, namely the dot product with \u03c1, the definition of \u03b2\u03a6wL , and in the norm defining the \u201coptimal\u201d w to which we compare our approximation. We first note that the bound becomes smaller as \u03b2\u03a6wL decreases. This suggests that the more stable the MDP, the better RALP can approximate the value function.\nThis interpretation of Theorem 1 leads to other intuitive explanations. Consider an MDP with only L(s) = 1 \u2200s \u2208 S as a Lyapunov function. Now assume two nearby samples, one where a \u201cgood\u201d action is taken, in the direction of positive reward, and another where a \u201cbad\u201d action is taken, in the direction of negative reward. When the linear program is solved, due to the proximity of the two samples, the constraint corresponding to the \u201cbad\u201d sample is nearly certain to be loose, and may as well be removed. However, if the MDP is highly stable, then these two extremely different samples would be unlikely, and both constraints are candidates for being tight. Therefore, more samples from an MDP with a small \u03b2L are likely to be involved in defining the feasible space, potentially resulting in an improved approximation.\nThe appearance of the Lyapunov function in the norm of the bound indicates the bound is tighter when the feature space \u03a6 allows for a close approximation in areas where the Lyapunov function is small. Bertsimas et al. (1998) demonstrated that a small Lyapunov function value correlates in expectation with a higher probability in the stationary distribution of a Markov chain. This is particularly interesting when considering the appearance of the dot product between the Lyapunov function and \u03c1. This dot product makes it apparent that the approximation improves when \u03c1 is large only where \u03a6wL is small. This provides evidence that the stationary distribution of the MDP under the opti-\nmal policy may be an advantageous setting for \u03c1. This evidence meshes well with the intuition that greater accuracy is most useful in frequently-visited states."}, {"heading": "5. Sampling Distribution", "text": "Imagine an MDP with a small finite state space and a single action. Ideal sampling would provide a single sample from each state, giving us an objective function of \u2211s\u2208S \u03c1(s)\u03a6(s)w. However, if sampling from a distribution across the state space, this ideal situation would be unlikely; some states would go unsampled, while others would be sampled multiple times. Because the objective function is defined on samples, this means states that were sampled multiple times would appear in the objective function multiple times, causing the linear program to tighten constraints at those states at the expense of accuracy in other states.\nOf course, a similar scenario occurs in infinite state spaces as well. Multiple states near to each other may be sampled, while other regions have very few samples; this encourages the linear program to choose features and an approximate value function which tightens constraints in heavilysampled regions at the expense of sparsely-sampled regions. In this section we discuss the effects of sampling from an arbitrary distribution over the state space \u00b5 and ways this can help the researcher understand how to design sampling methods.\nObservation 1 Let \u03a31 and \u03a3\u00b5 be sample sets of equal cardinality N drawn from the state space from the uniform distribution and an arbitrary distribution \u00b5, respectively. Let \u03a61 and \u03a6\u00b5 be the feature matrices defined over the states of sets \u03a31 and \u03a3\u00b5. For any weight vector w,\nE [\u00b5\u03a61w] = E [1\u03a6\u00b5w] .\nThis observation is easy to support; both expectations equal \u222bS \u00b5(s)\u03a6(s)w ds. This means that for any w, sampling from a non-uniform distribution \u00b5 provides an equivalent objective function in expectation to sampling from a uniform distribution but setting the state-relevance weights equal to \u00b5. We note this is not equivalent to expecting the same approximate value function as the constraints remain different; this makes the effect of altering the sampling distribution greater than that of altering the objective function alone.\nAdditionally, the bound presented in Theorem 1 offers an interpretation of results from sampling from a distribution. As sampling becomes less uniform, ep likely increases, due to the existence of larger unsampled regions. For example, this would happen in the Lipschitz-continuous case for fulfilling Assumption 1. However, for a sampling distribution\nwhich is dense where the Lyapunov value is small, then the total Lyapunov value in the numerator of the first addend is small, as well. Therefore, it may be that the ideal sampling distribution is one which is dense where the Lyapunov value is low, but still provides sufficient coverage for ep to be small."}, {"heading": "6. Experimental Results", "text": "In this section, we demonstrate experimentally the conclusions drawn in the previous sections. Previous literature has already demonstrated RALP\u2019s effectiveness in common benchmark domains; the purpose of this section therefore, is to clearly illustrate the conclusions of the previous sections. In a simple, easily visualized domain, we make a series of comparisons. First, we compare the approximation accuracy of sampling from a domain with a stable Lyapunov function to the accuracy resulting from sampling from a domain without such a function. Next, we compare the accuracy of the approximation resulting from sampling uniformly to the accuracy of the approximation resulting from sampling from two different nonuniform distributions. Finally, we compare the approximation accuracy of calculating an approximation with \u03c1 = 1 to the approximation accuracy of calculating an approximation when \u03c1 is nonuniform. This is demonstrated using two different, nonuniform distributions.\nThe results were obtained by drawing samples and calculating an approximation 500 times for each compared approach; the error \u2223V\u2217 \u2212\u03a6w\u2223 was then calculated, and averaged across all 500 trials. Finally, we calculate and display the difference between the average errors from the two approaches. So, if V\u0302Ai is the approximation from the i-th run on approach A, then when comparing two approaches, A and B, a point on the graphs of Figure 2 equals\n500 \u2211 i=1 \u2223V\u2217(s)\u2212 V\u0302Ai (s)\u2223 500 \u2212 500 \u2211 i=1 \u2223V\u2217(s)\u2212 V\u0302Bi (s)\u2223 500 ."}, {"heading": "6.1. Domain", "text": "All of the experiments were run on a domain defined by a 25 by 25 grid world. This world included four reward regions in the corners of the grid, each of which consisted of 9 states, as can be seen in Figure 1(a). Two reward regions (colored gold) had a reward of 1, while the others had a reward of -1 (colored red). The remaining states had a reward of 0. Actions were to move one square in any of the four directions, unless constrained by a wall, in which case that action would result in no movement. The discount factor \u03b3 was set to 0.95. For all trials, the feature set consisted of symmetric Gaussian features centered around each \u03c3s with variances of 2, 5, 10, 15, 25, 50, and 75, plus the bias feature, resulting in 9n+1 features for n samples. The optimal value function can be seen in Figure 1(b).\nThis value function is an easy one for RALP to approximate with proper settings of the regularization parameter and sufficient sampling. The number of samples and choices of the regularization parameter \u03c8 were therefore chosen to illustrate the differences between the results of the compared methods, not to optimize performance."}, {"heading": "6.2. Lyapunov Stable Domain", "text": "First, we demonstrate the improvement in RALP\u2019s approximation when the domain has a stable Lyapunov function. A stable Lyapunov function can be created by forcing the actor into a defined area in the state space. In order to keep the representational difficulty of the optimal value functions the same, we created a Lyapunov function by eliminating actions which move the actor further from the nearest positive reward. This preserves the optimal policy of the unaltered domain, keeping the optimal value functions identical, making approximation accuracy a fair comparison.\nIn the domain without a stable Lyapunov function, the actor was free to move in the state space based on a random choice among the four actions. However, in the domain with a stable Lyapunov function, the actor was only allowed to move in the two directions which would not move it further from the nearest goal. We note that not all remaining actions are optimal, so sampling still includes offpolicy samples.\nThis creates a Lyapunov function where L(s) equals the Manhattan distance from s to the nearest of state (1,1) or (25,25), and B = {(1, 1), (25, 25)}. In each trial, we uniformly sampled 20 samples. The regularization parameter \u03c8 was set to 0.2 and \u03c1 was 1.\nThe result of subtracting the average errors of the approximation from the domain with a Lyapunov function from the domain without a Lyapunov function can be seen in Figure 2(a). Therefore, positive values indicate higher error from\nthe domain without a Lyapunov function.\nThe results show that an approximation learned from samples drawn from a stable domain is more accurate than an approximation learned from a less stable domain everywhere except for where s is near equal distance from the two goal states. This reinforces the intuition from Subsection 4.1 that samples drawn from a stable domain are more effective than those that are not, particularly near the most heavily-visited regions."}, {"heading": "6.3. Sampling from a Nonuniform Distribution", "text": "Next we illustrate the change in approximation accuracy when sampling from a nonuniform distribution \u00b5. Section 5 presents evidence that a distribution which is most dense where L(s) is smallest may be advantageous. To create such a distribution, an agent was started at a random state, and was allowed to take the optimal policy for 25 steps. This was done 10,000 times, and the number of visits to each state was tabulated and normalized. This defined our distribution, which was heaviest on the edges and reward corners, and otherwise slightly increasing with increasing proximity to the positive reward regions. We will refer to this distribution as \u03b6.\nFor these trials, 20 samples were drawn per run from the\ndomain with the stable Lyapunov function as discussed in Subsection 6.2. The regularization parameter \u03c8 was set to 1.5, and \u03c1 = 1. The average error from the 500 uniformly sampled runs was subtracted from the average error from the 500 runs with \u00b5 = \u03b6; the result can be seen in Figure 2(b). Because the error from the nonuniform sampling was subtracted from the error from uniform sampling, the positive difference indicates the results from sampling from \u03b6 were superior. The results show the distribution met the goal from Section 5; sampling was varied enough to keep ep low, while dense enough in the areas where L(s) was small.\nWe then subtracted \u03b6 from 1 and normalized, making a distribution we will refer to as 1 \u2212 \u03b6, which was largest where an agent was least likely to traverse in the stable domain. We subtracted the average error from sampling from \u00b5 = 1 \u2212 \u03b6 from the average error from sampling uniformly, to produce Figure 2(d). A positive value would indicate larger error from the approximations on uniformly sampled states. However, through the entirety of the state space, and particularly in the most trafficked areas, sampling from 1 \u2212 \u03b6 gave us an inferior result. This provides evidence for the conclusions of Section 5 that a sampling distribution which is densest in the areas where the Lyapunov function is smallest would produce the best\napproximations."}, {"heading": "6.4. Changing the State-Relevance Weights", "text": "Lastly, we illustrate the effect on the approximation of changing the state-relevance weights. 200 samples were drawn uniformly from the state space; whereas the effects from the previous two experiments are most pronounced when samples are sparse, the effects from altering \u03c1 are most pronounced when a number of constraints can be tightened in a given region.\nWe would prefer to set \u03c1 to the stationary distribution; however, because the domain is not recurrent, this is not an option. However, the distribution \u03b6 created for sampling in Subsection 6.3 is large where the Lyapunov function is small, making it a reasonable replacement. In one set of trials, \u03c1(s) was set to the value of this distribution at that state; in the other, \u03c1 = 1. \u03c8 was set to 4. Average error from the approximation resulting from a nonuniform \u03c1 was subtracted from average error from the approximation resulting from a uniform \u03c1. Therefore, a positive value indicates a better approximation from the nonuniform \u03c1. Sampling was done uniformly from the stable domain.\nFigure 2(c) shows that nearly the entire state space was more accurate with a nonuniform \u03c1, except for where \u03b6(s) \u2248 0. The difference is small because with a large number of samples, both approximations were quite accurate.\nIn addition, we compared the uniform \u03c1 approximation to an approximation using \u03c1 = 1 \u2212 \u03b6, which is large where the Lyapunov value is large, resulting in an increased dot product \u03c1\u03a6w in Theorem 1. Again, we subtracted the error of the approximation resulting from \u03c1 = \u03b6 \u2212 1 from the error of the approximation resulting from \u03c1 = 1, producing Figure 2(e). A positive value indicates the nonuniform \u03c1 approximated that state better than did using a uniform \u03c1. However, there are few positive values as the use of \u03c1 = 1 \u2212 \u03b6 resulted in a dramatically inferior approximation, particularly in areas where \u03c1 was small.\nFrom both figures, it is clear that a higher \u03c1 value in a given portion of the state space resulted in an improved approximation, particularly if designed with Theorem 1 in mind."}, {"heading": "7. Conclusion", "text": "The experimental success of RALP in previous literature, along with its easily-fulfilled assumptions, suggests promise for its application to real-life, complicated, and complex domains. Despite this promise, and despite the evidence that the effects are dramatic, no theory had been produced to analyze changes in the approximation quality given changes to the objective function parameter \u03c1, or due to differences in sampling strategies. These considerations\nare essential to the use of RALP in the real world; it is rarely possible to sample uniformly, and the importance of accuracy across the state space is rarely consistent.\nIn this paper, we demonstrate the importance of understanding these ideas, and produce a bound on the approximation error of RALP which is tighter and more informative than previous bounds. This bound provides intuition into the quality of the RALP approximation as a function of state-relevance weights and sampling distributions. In addition, we demonstrated that the quality of a RALP approximation is particularly good when the domain is stable and has a Lyapunov function with a small \u03b2L.\nFuture work remains, particularly in the area of solving the linear program quickly in the presence of large amount of data. Though convex optimization solvers are considered \u201cfast,\u201d with large amounts of data, the memory and time requirements may be too large for realistic use. Fortunately, it may be that the structure of the problem, the small percentage of tight constraints, and small percentage of active features will avail itself to faster, but equivalent, approaches."}, {"heading": "Acknowledgements", "text": "Thank you to the anonymous reviewers for their help in improving this paper. Additionally, we are grateful for support from the Naval Research Laboratory Information Management & Decision Architecture Branch (Code 5580), as well as financial support by the Office of Naval Research, grant numbers N001613WX20992 and N0001414WX20507."}, {"heading": "A. Proof of Lemma 1", "text": "As stated in Section 4, this proof is very similar to Theorem 3 by de Farias and van Roy (2003), but we include it for clarity nonetheless. The Lemma constructs a point in the feasible space of the linear program which provides an approximation with bounded error, and then shows the point chosen by RALP must be no further than that constructed point. The proof first requires a series of additional Lemmas.\nLemma 3 For any functions V and V\u0304,\n\u2223TV\u0304 \u2212 TV\u2223 \u2264 \u03b3 max \u03c0 P\u03c0 \u2223V\u0304 \u2212V\u2223 .\nProof: For any V and V\u0304,\nTV\u0304 \u2212 TV =max \u03c0 (R + \u03b3P\u03c0V\u0304)\u2212max \u03c0 (R + \u03b3P\u03c0V)\n=R + \u03b3P\u03c0V\u0304 V\u0304 \u2212 R \u2212 \u03b3P\u03c0V V \u2264\u03b3 max\n\u03c0 P\u03c0(V\u0304 \u2212V)\n\u2264\u03b3 max \u03c0 P\u03c0 \u2223V\u0304 \u2212V\u2223 ,\nwhere \u03c0V and \u03c0V\u0304 represent the greedy policies with respect to value functions V and V\u0304. By reversing the terms, we can show TV \u2212 TV\u0304 \u2264 \u03b3 max\u03c0 P\u03c0 \u2223V\u0304 \u2212V\u2223, leading to our result. \u220e\nLemma 4 For any vector L with positive components and any vector V,\nTV \u2264 V + (\u03b3HL + L)\u2225V \u2212V\u2217\u2225\u221e, 1L .\nProof: Note that\n\u2223V\u2217(s)\u2212V(s)\u2223 \u2264 \u2225V \u2212V\u2217\u2225\u221e, 1L V(s).\nBecause of Lemma 3,\n\u2223(TV)(s)\u2212 (TV\u2217)(s)\u2223 \u2264\u03b3 max \u03c0 \u2211 s\u2032\u2208S P\u03c0(s, s\u2032) \u2223V(s\u2032)\u2212V\u2217(s\u2032)\u2223\n\u2264\u03b3\u2225V \u2212V\u2217\u2225\u221e, 1L maxa\u2208A \u2211s\u2032\u2208S Pa(s, s\u2032)L(s\u2032) =\u03b3\u2225V \u2212V\u2217\u2225\u221e, 1L (HL)(s).\nDefine e = \u2225V \u2212V\u2217\u2225\u221e, 1L .\nTV(s) \u2264V\u2217(s)+ \u03b3e(HL)(s) \u2264V(s)+ eL(s)+ \u03b3e(HL)(s).\n\u220e\nLemma 5 Let wL be a weight vector such that \u03a6wL is a Lyapunov function, w be an arbitrary weight vector, and\nw\u0304 = w + \u2225V\u2217 \u2212\u03a6w\u2225\u221e, 1\u03a6wL ( 2 1\u2212 \u03b2\u03a6wL \u2212 1)wL.\nThen, T\u03a6w\u0304 \u2264 \u03a6w\u0304.\nProof: Let e = \u2225V\u2217 \u2212\u03a6w\u2225\u221e, 1\u03a6wL . For any state s \u2208 S,\n\u2223(T\u03a6w\u0304)(s)\u2212 (T\u03a6w)(s)\u2223\n= \u2223(T [(\u03a6w + e( 2 1\u2212 \u03b2\u03a6wL \u2212 1)\u03a6wL]) (s)\u2212 (T\u03a6w)(s)\u2223 \u2264\u03b3 max \u03c0 \u2211 s\u2032\u2208S P\u03c0(s, s\u2032)\n\u22c5 \u2223(\u03a6w(s\u2032)+ e( 2 1\u2212 \u03b2\u03a6wL \u2212 1)\u03a6wL(s \u2032))\u2212\u03a6w(s\u2032)\u2223\n\u2264\u03b3 max \u03c0 \u2211 s\u2032\u2208S P\u03c0(s, s\u2032)e( 2 1\u2212 \u03b2\u03a6wL \u2212 1)(\u03a6wL)(s \u2032)\n=\u03b3e( 2 1\u2212 \u03b2\u03a6wL \u2212 1)(H\u03a6wL)(s).\nThe first line is a replacement of w\u0304 with its definition, the second is due to Lemma 3, the third is due to the cancellation of the two \u03a6w terms and the fact that because \u03a6wL is a Lyapunov function, ( 21\u2212\u03b2\u03a6wL\n\u2212 1) > 0 (note this is true for states in sets B and S \u2216 B as defined in Definition 1), and the final line is due to Definition 2.\nFrom this, we can conclude\nT\u03a6w\u0304 \u2264 T\u03a6w + \u03b3e( 2 1\u2212 \u03b2\u03a6wL \u2212 1) H\u03a6wL.\nWe can apply Lemma 4 to get\nT\u03a6w\u0304 \u2264 \u03a6w + e(\u03b3H\u03a6wL +\u03a6wL), and therefore,\nT\u03a6w\u0304 \u2264\u03a6w + e(\u03b3H\u03a6wL +\u03a6wL)+ \u03b3e( 2\n1\u2212 \u03b2\u03a6wL \u2212 1) H\u03a6wL\n=\u03a6w + e( 2 1\u2212 \u03b2\u03a6wL \u2212 1)\u03a6wL \u2212 e( 2 1\u2212 \u03b2\u03a6wL \u2212 1)\u03a6wL\n+ e(\u03b3H\u03a6wL +\u03a6wL)+ \u03b3e( 2\n1\u2212 \u03b2\u03a6wL \u2212 1) H\u03a6wL\n=\u03a6w\u0304 \u2212 e( 2 1\u2212 \u03b2\u03a6wL \u2212 1)\u03a6wL + e(\u03b3H\u03a6wL +\u03a6wL)\n+ \u03b3e( 2 1\u2212 \u03b2\u03a6wL \u2212 1) H\u03a6wL\n=\u03a6w\u0304 + e(\u03b3H\u03a6wL +\u03a6wL)\u2212 e( 2\n1\u2212 \u03b2\u03a6wL \u2212 1)(\u03a6wL \u2212 \u03b3H\u03a6wL)\n\u2264\u03a6w\u0304 + e(\u03b3H\u03a6wL +\u03a6wL)\u2212 e(\u03a6wL + \u03b3H\u03a6wL) =\u03a6w\u0304.\nThe penultimate line can be shown given that \u03a6wL \u2212 \u03b3H\u03a6wL > 0 and\n2 1\u2212 \u03b2\u03a6wL \u2212 1 = 2 1\u2212maxs\u2208S\u2216B((\u03b3(H\u03a6wL)(s))/((\u03a6wL)(s))) \u2212 1\n= max s\u2208S\u2216B (\u03a6wL)(s)+ \u03b3(H\u03a6wL)(s) (\u03a6wL)(s)\u2212 \u03b3(H\u03a6wL)(s)\n\u220e Lemma 5 demonstrates that all constraints in RALP will be satisfied by w\u0304, with the exception of the constraint enforcing the L1 regularization. However, we have required even this constraint to be satisfied by requiring w\u0304 \u2208 W . Therefore, w\u0304 lies in the feasible region for RALP.\nLemma 6 If every state-action pair is represented with a constraint in the RALP, a vector w\u0303 solves the RALP if and only if it solves\nargmin w\n\u2225V\u2217 \u2212\u03a6w\u22251,\u03c1\ns.t. Ta\u03a6(s)w \u2264 \u03a6(s)w \u2200s \u2208 S , a \u2208 A \u2225w\u22121\u22251 \u2264 \u03c8\nProof: For any policy \u03c0, the Bellman operator T\u03c0 is a contraction in max norm. If the Bellman error is one-sided, T is also monotonic. Therefore, for any V such that V \u2265 TV, V \u2265 TV \u2265 T2V \u2265 V\u2217. Therefore, any w that is a feasible solution to a RALP satisfies \u03a6w \u2265 V\u2217. From this, we can conclude\n\u2225V\u2217 \u2212\u03a6w\u22251,\u03c1 =\u2211 x\u2208S \u03c1(x) \u2223V\u2217(x)\u2212\u03a6(x)w\u2223\n=\u03c1T\u03a6w \u2212 \u03c1TV\u2217.\nBecause V\u2217 is constant, minimizing \u03c1T\u03a6w with RALP constraints is equivalent to minimizing \u2225V\u2217 \u2212\u03a6w\u22251,\u03c1 with RALP constraints. \u220e Given Lemmas 5 and 6, we can finally prove Lemma 1.\n\u2225V\u2217 \u2212\u03a6w\u0303\u22251,\u03c1 \u2264\u2225V\u2217 \u2212\u03a6w\u0304\u22251,\u03c1 =\u2211\ns\u2208S \u03c1(s) \u2223V\u2217 \u2212 (\u03a6w\u0304)(s)\u2223\n=\u2211 s\u2208S\n\u03c1(s)(\u03a6wL)(s) \u2223V\u2217 \u2212 (\u03a6w\u0304)(s)\u2223\n(\u03a6wL)(s)\n\u2264(\u2211 s\u2208S \u03c1(s)(\u03a6wL)(s))max s\u2032\u2208S \u2223V\u2217 \u2212 (\u03a6w\u0304)(s\u2032)\u2223 (\u03a6wL)(s\u2032) =\u03c1T\u03a6wL\u2225V\u2217 \u2212\u03a6w\u0304\u2225\u221e,1/\u03a6wL \u2264\u03c1T\u03a6wL (\u2225V\u2217 \u2212\u03a6w\u2217\u2225\u221e,1/\u03a6wL + \u2225\u03a6w\u0304 \u2212\u03a6w\n\u2217\u2225\u221e,1/\u03a6wL) \u2264\u03c1T\u03a6wL(\u2225V\u2217 \u2212\u03a6w\u2217\u2225\u221e,1/\u03a6wL\n+ \u2225V\u2217 \u2212\u03a6w\u2217\u2225\u221e,1/\u03a6wL ( 2\n1\u2212 \u03b2\u03a6wL \u2212 1)\u2225\u03a6wL\u2225\u221e,1/\u03a6wL)\n=2\u03c1 T\u03a6wL\n1\u2212 \u03b2\u03a6wL \u2225V\u2217 \u2212\u03a6w\u2217\u2225\u221e,1/\u03a6wL .\nThe penultimate line is due to the definition of w\u0304, and the final line occurs because \u2225\u03a6wL\u2225\u221e,1/\u03a6wL = 1. \u220e"}, {"heading": "B. Proof of Lemma 2", "text": "When a constraint does not exist in RALP for some state, this does not mean the value at that state is completely unconstrained; because we bounded the rate of change of all components of the approximate and true value functions in Assumption 1, the existence of a constraint constructed on a nearby state means the existence of what we will call an implied constraint.\nThis lemma explicitly constructs these implied constraints, and quantifies the maximum distance from the true constraint which would have existed had that state been sampled. It does this by building two MDPs, identical in every way, but for the reward function. M1 has been incompletely sampled, with sample set \u03a3. Every state-action pair therefore has either an explicit or implied constraint in the corresponding RALP. M2, however, has been completely sampled. Every state-action pair in the set \u03a3 is identical in M2, but all state-action pairs not in \u03a3 have a sample producing a constraint identical to the implied constraints of M1. Because the constraints are the same, the RALP solution is the same. We demonstrate the difference in the reward functions R1 and R2 is bounded, and thus, the difference in the optimal value functions V\u22171 and V \u2217 2 is bounded.\nLemma 7 Given an MDP M1 such that Assumption 1 is true and incomplete sample set \u03a3, an MDP M2 exists such that constructing the RALP with constraints for all stateaction pairs results in an identical RALP solution to that of the RALP constructed from \u03a3, and \u2225R1 \u2212 R2\u2225\u221e \u2264 2(\u03b4\u03c6\u03c8 + \u03b4R + \u03b4P\u03c8).\nProof: Consider an arbitrary state-action pair s, a, which is not represented by a sample in \u03a3. This means we are missing the constraint\nR1(s)+ \u03b3 \u2211 x\u2208S [p(x\u2223s, a)\u03a6(x)]w \u2264 \u03a6(s)w. (2)\nLet us refer to the sample in \u03a3 which fulfills the sampling assumption with s and a as \u03c3. We can now construct a bound for how incorrect each component of this constraint can be if we use the constraint at \u03c3 and our sampling assumption to replace the missing constraint. For instance, the reward function R(s) is easily bounded.\nR1(\u03c3s)\u2212 \u03b4R \u2264 R1(s) \u2264 R1(\u03c3s)+ \u03b4R We now bound \u03a6(s)w. Because the sampling assumption allows each basis function to change only a finite amount, and because \u2225w\u22121\u22251 \u2264 \u03c8, and 1(s) = 1(\u03c3s),\n\u03a6(\u03c3s)w \u2212 \u03b4\u03a6\u03c8 \u2264 \u03a6(s)w \u2264 \u03a6(\u03c3s)w + \u03b4\u03a6\u03c8\nThe final component is \u03b3\u2211x\u2208S p(x\u2223s, a)\u03a6(x)w, which expresses our expected value at the next state. It will be convenient to separate the bias feature 1 from the rest of \u03a6.\nWe will denote the remainder of the design matrix as \u03a6\u22121, and the weights that correspond to \u03a6\u22121 as w\u22121. Similarly, we will denote the weight corresponding to 1 as w1.\n\u2211 x\u2208S p(x\u2223s, a)\u03a6(x)w =\u2211 x\u2208S p(x\u2223s, a)w1 + \u2211 x\u2208S p(x\u2223s, a)\u03a6\u22121(x)w\u22121\n=w1 + \u2211 x\u2208S p(x\u2223s, a)\u03a6\u22121(x)w\u22121\nAgain, we have bounded the allowable change in our expression of probability.\nw1+\u2211 x\u2208S p(x\u2223s, a)\u03a6\u22121(x)w\u22121\n\u2264w1 + \u2211 x\u2208S [p(x\u2223\u03c3s, \u03c3a)+ \u03b4P]\u03a6\u22121(x)w\u22121 =w1 + \u2211 x\u2208S p(x\u2223\u03c3s, \u03c3a)\u03a6\u22121(x)w\u22121 + \u03b4P \u2211 x\u2208S \u03a6\u22121(x)w\u22121\nBecause each basis function \u03a6 is can be standardized such that \u2225\u03a6\u22251 = 1, and because \u2225w\u22121\u22251 \u2264 \u03c8, the second summation can be at most \u03c8. So,\n\u2211 x\u2208S p(x\u2223\u03c3s, \u03c3a)\u03a6(x)w \u2212 \u03b4P\u03c8 \u2264 \u2211 x\u2208S [p(x\u2223s, a)\u03a6(x)]w\n\u2264 \u2211 x\u2208S p(x\u2223\u03c3s, \u03c3a)\u03a6(x)w + \u03b4P\u03c8.\nWe now combine these results, and construct our implied constraint to take the place of the missing constraint expressed by Equation 2. We see that the maximum possible change by the approximate value function is \u03b4\u03a6\u03c8 + \u03b4R + \u03b4P\u03c8. So, the total cumulative error in the constraint is at most 2(\u03b4\u03a6\u03c8 + \u03b4R + \u03b4P\u03c8). So, we effectively have the following constraint:\nR1(s)+ q \u2212 \u03b3 \u2211 x\u2208S [p(x\u2223s, a)\u03a6(x)]w \u2265 \u03a6(s)w,\nwhere \u2223q\u2223 \u2264 2(\u03b4\u03a6\u03c8 + \u03b4R + \u03b4P\u03c8). Let M2 be an MDP which is identical in every way to M1, except R2(s) = R1(s) + q. The RALP solution for M1 will be equivalent to the RALP solution for M2, and \u2225R1 \u2212 R2\u2225\u221e \u2264 2(\u03b4\u03a6\u03c8 + \u03b4R + \u03b4P\u03c8). \u220e\nLemma 8 Let M1 and M2 be MDPs that differ only in their reward vectors R1 and R2. Let V\u22171 and V \u2217 2 be their optimal value functions. Then, for \u2225R1 \u2212 R2\u2225\u221e \u2264 \u03b4, \u2225V\u22171 \u2212V\u22172 \u2225\u221e \u2264 \u03b4 1\u2212\u03b3 .\nProof: Let s be an arbitrary point in the sets S1 and S2, and define r1i(s) and r2i(s) to be the i-th reward received in exploring M1 and M2 from state s, respectively. Note that\nV\u22171 (s) = \u221e \u2211 i=0 \u03b3iE [r1i(s)]\nand\nV\u22172 (s) \u2264 \u221e \u2211 i=0 (\u03b3iE [r1i(s)+ \u03b4])\n= \u221e \u2211 i=0 \u03b3iE [r1i(s)]+ \u221e \u2211 i=0 \u03b3i\u03b4\nTherefore,\n\u2223V\u22171 (s)\u2212V\u22172 (s)\u2223 \u2264 \u221e \u2211 i=0 \u03b3iE [r1i(s)]\u2212 ( \u221e \u2211 i=0 \u03b3iE [r1i(s)]+ \u221e \u2211 i=0 \u03b3i\u03b4)\n= \u221e \u2211 i=0 \u03b3i\u03b4\n= \u03b4 1\u2212 \u03b3\nBecause this is true for an arbitrary s, \u2225V\u22171 \u2212V\u22172 \u2225\u221e \u2264 \u03b4\n1\u2212\u03b3 . \u220e Lemma 2 is trivially proven by combining Lemmas 7 and 8, and is illustrated by Figure 3."}], "references": [{"title": "Geometric bounds for stationary distributions of infinite markov chains via lyapunov functions", "author": ["Bertsimas", "Dimitris", "Gamarnik", "David", "Tsitsiklis", "John N"], "venue": "Technical report, Massachusetts Institute of Technology,", "citeRegEx": "Bertsimas et al\\.,? \\Q1998\\E", "shortCiteRegEx": "Bertsimas et al\\.", "year": 1998}, {"title": "The Linear Programming Approach to Approximate Dynamic Programming", "author": ["de Farias", "Daniela Pucci", "Van Roy", "Benjamin"], "venue": "Operations Research,", "citeRegEx": "Farias et al\\.,? \\Q2003\\E", "shortCiteRegEx": "Farias et al\\.", "year": 2003}, {"title": "On Constraint Sampling for the Linear Programming Approach to Approximate Dynamic Programming", "author": ["de Farias", "Daniela Pucci", "Van Roy", "Benjamin"], "venue": "Mathematics of Operations Research,", "citeRegEx": "Farias et al\\.,? \\Q2004\\E", "shortCiteRegEx": "Farias et al\\.", "year": 2004}, {"title": "A probabilistic production and inventory problem", "author": ["F. d\u2019Epenoux"], "venue": "Management Science,", "citeRegEx": "d.Epenoux,? \\Q1963\\E", "shortCiteRegEx": "d.Epenoux", "year": 1963}, {"title": "Regularized Off-Policy TD-Learning", "author": ["Liu", "Bo", "Mahadevan", "Sridhar", "Ji"], "venue": "In Proceedings of the Conference on Neural Information Processing Systems (NIPS),", "citeRegEx": "Liu et al\\.,? \\Q2012\\E", "shortCiteRegEx": "Liu et al\\.", "year": 2012}, {"title": "Sparse Q-Learning With Mirror Descent", "author": ["Mahadevan", "Sridhar", "Liu", "Bo"], "venue": "In Conference on Uncertainty in Artificial Intelligence,", "citeRegEx": "Mahadevan et al\\.,? \\Q2012\\E", "shortCiteRegEx": "Mahadevan et al\\.", "year": 2012}, {"title": "Lyapunov Design for Safe Reinforcement Learning", "author": ["Perkins", "Theodore J", "Barto", "Andrew G"], "venue": "The Journal of Machine Learning Research,", "citeRegEx": "Perkins et al\\.,? \\Q2003\\E", "shortCiteRegEx": "Perkins et al\\.", "year": 2003}, {"title": "Feature selection using regularization in approximate linear programs for markov decision processes", "author": ["Petrik", "Marek", "Taylor", "Gavin", "Parr", "Ronald", "Zilberstein", "Shlomo"], "venue": "In Proceedings of the 27th International Conference on Machine Learning,", "citeRegEx": "Petrik et al\\.,? \\Q2010\\E", "shortCiteRegEx": "Petrik et al\\.", "year": 2010}, {"title": "Coarticulation in Markov Decision Processes", "author": ["Rohanimanesh", "Khashayar", "Platt", "Robert", "Mahadevan", "Sridhar", "Grupen", "Roderic"], "venue": "In Advances in Neural Information Processing Systems,", "citeRegEx": "Rohanimanesh et al\\.,? \\Q2004\\E", "shortCiteRegEx": "Rohanimanesh et al\\.", "year": 2004}, {"title": "Generalized Polynomial Approximations in Markovian Decision Processes", "author": ["Schweitzer", "Paul J", "Seidmann", "Abraham"], "venue": "Journal of mathematical analysis and applications,", "citeRegEx": "Schweitzer et al\\.,? \\Q1985\\E", "shortCiteRegEx": "Schweitzer et al\\.", "year": 1985}], "referenceMentions": [{"referenceID": 4, "context": "In recent years, the Reinforcement Learning community has paid considerable attention to creating value function approximation approaches which perform automated feature selection while approximating a value function (Kolter & Ng, 2009; Johns et al., 2010; Mahadevan & Liu, 2012; Liu et al., 2012).", "startOffset": 217, "endOffset": 297}, {"referenceID": 7, "context": "proaches, L1-Regularized Approximate Linear Programming (RALP) (Petrik et al., 2010; Taylor & Parr, 2012) is unique in that it results in an approximation of the optimal value function and makes use of off-policy samples.", "startOffset": 63, "endOffset": 105}, {"referenceID": 7, "context": "Therefore, in Section 4, we derive a new error bound for the RALP approximation, which is tighter than those presented by Petrik et al. (2010) and provides new insight into the result of changing the state-relevance weights in the objective function.", "startOffset": 122, "endOffset": 143}, {"referenceID": 7, "context": "Therefore, in Section 4, we derive a new error bound for the RALP approximation, which is tighter than those presented by Petrik et al. (2010) and provides new insight into the result of changing the state-relevance weights in the objective function. In addition, this bound provides an insight into the types of MDPs particularly well suited to the RALP approach. Finally, this section provides evidence that rather than weighting all states equally, as was done by Petrik et al. (2010) and Taylor and Parr (2012), states should instead be weighted in proportion to the stationary distribution under the optimal policy.", "startOffset": 122, "endOffset": 488}, {"referenceID": 7, "context": "Therefore, in Section 4, we derive a new error bound for the RALP approximation, which is tighter than those presented by Petrik et al. (2010) and provides new insight into the result of changing the state-relevance weights in the objective function. In addition, this bound provides an insight into the types of MDPs particularly well suited to the RALP approach. Finally, this section provides evidence that rather than weighting all states equally, as was done by Petrik et al. (2010) and Taylor and Parr (2012), states should instead be weighted in proportion to the stationary distribution under the optimal policy.", "startOffset": 122, "endOffset": 515}, {"referenceID": 3, "context": "(2010) to extend the capabilities of the linear programming approach to value function approximation (d\u2019Epenoux, 1963; Schweitzer & Seidmann, 1985; de Farias & Van Roy, 2003).", "startOffset": 101, "endOffset": 174}, {"referenceID": 6, "context": "RALP was introduced by Petrik et al. (2010) to extend the capabilities of the linear programming approach to value function approximation (d\u2019Epenoux, 1963; Schweitzer & Seidmann, 1985; de Farias & Van Roy, 2003).", "startOffset": 23, "endOffset": 44}, {"referenceID": 4, "context": "Liu et al. (2012) introduced RO-TD, which converges to an approximation of the value function of a given policy, even when trained on offpolicy samples.", "startOffset": 0, "endOffset": 18}, {"referenceID": 8, "context": "Besides stability analysis, Lyapunov functions have also previously appeared in Reinforcement Learning literature, though in different contexts from our application (Perkins & Barto, 2003; Rohanimanesh et al., 2004).", "startOffset": 165, "endOffset": 215}, {"referenceID": 7, "context": "To enable us to bound the behavior of the value function between samples, we make the following assumption, similar to the sufficient sampling assumption made by Petrik et al. (2010):", "startOffset": 162, "endOffset": 183}, {"referenceID": 0, "context": "Bertsimas et al. (1998) demonstrated that a small Lyapunov function value correlates in expectation with a higher probability in the stationary distribution of a Markov chain.", "startOffset": 0, "endOffset": 24}], "year": 2014, "abstractText": "Recent interest in the use of L1 regularization in the use of value function approximation includes Petrik et al.\u2019s introduction of L1-Regularized Approximate Linear Programming (RALP). RALP is unique among L1-regularized approaches in that it approximates the optimal value function using off-policy samples. Additionally, it produces policies which outperform those of previous methods, such as LSPI. RALP\u2019s value function approximation quality is affected heavily by the choice of state-relevance weights in the objective function of the linear program, and by the distribution from which samples are drawn; however, there has been no discussion of these considerations in the previous literature. In this paper, we discuss and explain the effects of choices in the state-relevance weights and sampling distribution on approximation quality, using both theoretical and experimental illustrations. The results provide insight not only onto these effects, but also provide intuition into the types of MDPs which are especially well suited for approximation with RALP.", "creator": "LaTeX with hyperref package"}}}