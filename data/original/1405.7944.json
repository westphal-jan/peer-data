{"id": "1405.7944", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "30-May-2014", "title": "Military Simulator - A Case Study of Behaviour Tree and Unity based architecture", "abstract": "In this paper we show how the combination of Behaviour Tree and Utility Based AI architecture can be used to design more realistic bots for Military Simulators. In this work, we have designed a mathematical model of a simulator system which in turn helps in analyzing the results and finding out the various spaces on which our favorable situation might exist, this is done geometrically. In the mathematical model, we have explained the matrix formation and its significance followed up in dynamic programming approach we explained the possible graph formation which will led improvisation of AI, latter we explained the possible geometrical structure of the matrix operations and its impact on a particular decision, we also explained the conditions under which it tend to fail along with a possible solution in future works.", "histories": [["v1", "Fri, 30 May 2014 18:22:59 GMT  (498kb)", "http://arxiv.org/abs/1405.7944v1", "4 pages, 4 figures"]], "COMMENTS": "4 pages, 4 figures", "reviews": [], "SUBJECTS": "cs.AI", "authors": ["shruti jadon", "anubhav singhal", "suma dawn"], "accepted": false, "id": "1405.7944"}, "pdf": {"name": "1405.7944.pdf", "metadata": {"source": "META", "title": "Military Simulator - A Case Study of Behaviour Tree and Unity based architecture", "authors": ["Shruti Jadon", "Anubhav Singhal"], "emails": [], "sections": [{"heading": null, "text": "and Utility Based AI architecture can be used to design more realistic bots for Military Simulators. In this work, we have designed a mathematical model of a simulator system which in turn helps in analyzing the results and finding out the various spaces on which our favorable situation might exist, this is done geometrically. In the mathematical model, we have explained the matrix formation and its significance followed up in dynamic programming approach we explained the possible graph formation which will led improvisation of AI, latter we explained the possible geometrical structure of the matrix operations and its impact on a particular decision, we also explained the conditions under which it tend to fail along with a possible solution in future works.\nGeneral Terms Game designing platform, Utility-based AI, Tropical Geometry, Game programming\nKeywords Military Simulator, Behaviour Tree, Ranking Matrix."}, {"heading": "1. INTRODUCTION", "text": "War games are the closest training to actual combat that the soldiers can go through. It recreates every physical aspect of the combat example fatigue, anxiety, smells, sound etc. But it is also very expensive. For different terrains different kinds of training camps need to be prepared and they cannot be modified easily. There are also ethical dilemmas like placing old people or children in the training. But if a soldier just needs to test his tactics or know the lay of the land, this type of training is not a necessity in initial phase. The military simulators are used for these purposes. The biggest need for the simulator is to create an enemy who reacts like a human enemy. The role of Artificial Intelligence comes into play here [1] and [10].\nIn game theory, to analyze any situation we define the matrix consisting of the probable reaction of the opponent to particular decision. Here in this game, we will firstly define the matrix on ideal situation which will change as time passes with help of AI designed in it [8], the iterative method of testing the correct value of the matrix will help us to achieve the more accurate values of the matrix, and this can only be achieved with more usage of this game by various communities, more specifically by defense agencies"}, {"heading": "2. BACKGROUND STUDY", "text": "There had been various kinds of problems in training soldiers in war games. The cost of these games is too high. A location has to been searched and built according to the specifications. This costs a lot of resources in terms of time, money, and man-power. Apart from it the ammunition and other weapons\nused in training add to the costs. The cultural authenticity also needs to be created especially for war in foreign countries like Iraq or Iran. Role-players generally help in achieving this goal. But then there is the ethical dilemma of keeping children and elderly as role-players. But the soldiers will have to face these situations in the battlefield. And the role-players also get fatigued and may not be able to perform the same throughout the training. This put the whole training in jeopardy. And the costs of these trainings make it difficult for everyone to get this training or train for extended period of time.\nMilitary simulators [3], [4] and [6] have become very popular with governments within the last few years due to increase in their effectiveness in training soldiers by providing them with realistic environments. They can provide culturally authentic role-players who will never deviate from their path and they won\u2019t get fatigued or hungry. Hence the training can continue for extended periods. There will be no ethical dilemmas in virtual environment.\nBut taking all this into consideration, the AI of these simulators should be fully autonomous and responsive. It should be believable enough so as to make the soldiers feel that they are talking to humans"}, {"heading": "3. MATHEMATICAL MODEL", "text": ""}, {"heading": "3.1 Basic Mathematical Model", "text": "The strategy matrix [11] can be stated as,\nRXA . (1) where A is M x N matrix where N is the number of strategies used in game & M=1 (as initial AI designed [8] indicates only one strategy of the opponent) R is desired result (maximum or minimum value), As we know that the matrix column values can be represented as a vector in a space, so we can see that the vector \u2018X\u2019 will be some continuous curve in ndimensional space, and the vector \u2018A\u2019 will be n points spread in that space, so this equation can be seen as,\n \n      \n\n      \n\nn\nn\nb\nb\nb\naaa\n1\n12\n11\n11211\n\n (2)\nHere the values of the matrix can\u2019t be negative; its minimum value will be 0. And this can also be represented as\n  332211 3 2\n1\n321 bababa\nb\nb\nb\naaa    \n\n\n   \n\n(3)\nSo to maximize the health conditions we will put A as health matrix and B as the emphasis matrix and thus we will get numerous ways in which of such conditions which will be represented geometrically. Likewise, we can also minimize the loss condition, by replacing \u2018A\u2019 matrix with the loss matrix and we can find the ways to minimize them."}, {"heading": "3.2 Dynamic programming in diagrammatic approach:", "text": "In this, first of all define the rankings of the strategies and then assuming the idealistic condition, draw the recursive graph of it, and thus it can be traversed randomly by the designed AI architecture.\nLet the matrix A have the rankings as the places on which they are defined so we can obtain the diagram of it in Fig 1.\nLikewise it can be extended and the accurate one will be determined on basis of probability and that will also result in a matrix formation (game theory).\nEquation 1 may also be seen in terms that X is the emphasis matrix and R is desired result. So if we multiply A and X we will find a point and that can be formed by numerous combinations of the values of vector X, this will result in the favorable area in n-dimensional space of a particular situation, following this up we can find the probability of that particular situation with formula,\nXofncombinatioTotal\nXofcombinatinPossible RP )( (4)\nTotal combinations of X also depends on vector A, the value of \u2018A\u2019 in turn will affect the Area. For example if the \u2018A\u2019 matrix consists of the m 0\u2019s[8] in it then it conclude that the numbers of points in n- dimensional space are reduced to \u2018nm\u2019 number of points, and thus we can see that still we will find numerous possible combinations in X, but as to minimize the loss of money and time, we will find only 1 point in that space which consists of the 0 value of X vector which will multiply with value in A vector, and thus the curve of X will be discontinuous, in such situations it is hard to determine the actual probability. The matrix A can be defined in form of\nbasis of a vector space and similarly the X matrix, so if let say\nmatrix A is,\n   \n\n   \n\nx\nx\n2\n1\nAnd X is  xyxyx \nThen their multiplication can led to, a 2 dimensional equation,\n   \n\n   \n\nx\nx\n2\n1\n xyxyx  = yxxyx 22 2 .\nAs we can see the equation, it can easily get maximized or minimized if we known certain limit values of x, which is presumed to be known. But it will be quite impossible to define it, when there are numerous variables of high order in X, say\n],,[ 2368 nyzyyx  Then it will result in\n2368 22 xnxyzxyyxR  .\nIt\u2019s hard to even assume how this figure might look like and what will be possible combinations of it.\nIt\u2019s hard to even assume how this figure might look like and what will be possible combinations of it. In this case we can use help of tropical mathematics.\nTropical geometry, is a branch of mathematics that deal with n dimensional figures, It converts complex equations in to piecewise linear in fact provide us easiness to work on enumeration of both complex and algebraic curves simultaneously. Tropical diagrams [7] can be made and analyzed in two ways first is Tropical graph made on Euclidean plane and second one is made on Tropical plane.\nThrough this, we can figured any curve in to a polyhedral and further we can find the possible maximum and minimum values , which gives us a rough sketch of the possible combinations of the favorable area. And thus we can make our decision, likewise."}, {"heading": "4. SIMULATION ARCHITECTURE", "text": "The basic AI framework is of a behavioural tree with each level in the tree corresponding to different state the AI will be in. The state the AI will go in from transition from one level to another will be calculated by Utility Based AI [1], [3] and [4]."}, {"heading": "4.1 Behaviour Architecture", "text": "It is a hierarchical approach to map the behaviour of an object. On first evaluation they start from the root node and each child is evaluated. The child may be behaviour or another selector which will again evaluate which behaviour to select. If all of a child node's conditions are met, its behaviour is started. When a node starts a behaviour process, that node is set to 'running' status, and it returns the behaviour. The next time the tree is evaluated, when it comes to a 'running' node, it\nknows to pick up where it left off. The node can have a sequence of actions and conditions before reaching an end state. If any condition fails, the traversal returns to the parent.\nBT relies on Boolean conditions for their selectors. This makes the understanding and implementation very simple but it limits the complexity of AI which can be designed through the BT. Hence we want to retain the hierarchical and simplistic approach of the BT, simultaneously being able to implement much more complex architecture."}, {"heading": "4.2 Utility Based AI", "text": "There are two factors which affect the decision making: selectors and reasoners. Selectors only choose one event at a time on the basis of criteria, without calculating the probability. Whereas, Reasoners calculate the probability of many events at a time, and on the basis of their value it chooses one event.\nSo, Instead of selectors, it uses reasoners. The selectors use simple logic like selecting first option that fits the requirement or selecting according to predefined priority or probability.\nBut the reasoner is complex. It can be used to dynamically calculate weights, scores or probabilities on basis of which the choices are made[6]. There may not be a single correct choice but multiple number of choices of which one is selected based on external factors like threat, heath etc."}, {"heading": "4.3 Decision making", "text": "In Fig. 1 is a very rudimentary behaviour tree of an AI in a First Person Shooter games.\nInitially the AI will be in patrol state. He is not actively seeking for enemy. He may go on patrol or sit around and take rest and chat with people. This subtree can easily be programmed using BT as the probability of doing any action in the subtree is equal. Therefore no complex calculations are required.\nWhen the game AI hears a gunshot or hears a suspicious voice, he will go into the Active search state.\nStates are changed on the bases of a global parameter force. It increases when activity occurs which indicates presence of intruders like gunshots, rustling of leaves in suspicious area footsteps etc. When force reaches a threshold, the AI changes\nit state and goes into a more aggressive mode. Over the period of time force decreases and the AI may change back to his passive state. But when the AI is in attack mode the force value stops decreasing as enemy has been detected.\nIn active search it has option to use the aggressive or the stealthy option. The weights of the options are given on bases of the following equation.\nxexf )( (5)\nwhere x= (\u03b1*Threat)+(\u03b2*health)+(\u03b3* ammo) & x>=0 and \u03b1 ,\u03b2, and \u03b3 are normalizing constants.\nThe weights and probabilities of the respective options will be slowly moving towards enemy: f(x) (as shown in Fig. 2) Run towards enemy: 1-f(x)\nThis is called marginal utility [1] and [3] because as the amount of threat increases, it becomes of much more importance than before. It is not increasing linearly. Hence the response will be much more aggressive. And if the AI has more health and ammunition, he is likely to take much more aggressive actions.\nOn detection of enemy AI will move into attack mode. Again it has two options. Fire from cover or to directly fire.\nAgain the options will be based on the equation no. (5).\nFire : )(xf (as shown in Fig. 2)\nGo to cover: )(1 xf\nAs the threat increases, the probability on going into cover will also increase. The equation used above can be modified based on the requirements and the number of parameters which need to be used. If the option of going to cover is selected, then we get four options. To get their probability we can calculate their utility score. Utility score, as the name suggests tells us the necessity of a behaviour at that instance. For example, the utility score of reload can be calculated through equation\n)/1()( xexf  (6)\nwhere x denotes the amount of ammunition left in magazine. We can see as the ammo is decreasing utility is increasing. Assuming calculated utility score of all the option are u1, u2,u3....,.un the probability(P) of each option as\n)/( 321 ni uuuuuP  (7) where (i=1,2,3...,n)."}, {"heading": "5. CONCLUSIONS", "text": "We have proposed an AI approach for a military simulator which is a mix of behaviour tree and utility based AI architectures. Instead of being static, the probabilities are being calculated dynamically based on the situation. Also, with the help of tropical mathematics the favorable curve design can be made and we can try to find out some specific pattern in to it, and put that data in to AI to make it more effective and optimized."}, {"heading": "6. REFERENCES", "text": "[1] Mark, D., and Dill, K. 2010. Improving AI Decision\nModeling Through Utility Theory. Game Developers Conference.\n[2] Laird, J. E. and van Lent, M. 2001. Human-Level AI\u2019s Killer Application Interactive Computer Games. AI\nMagazine Volume 22 Number 2.\n[3] Dill, K. and Mark,D. 2012. Embracing the Dark Art of Mathematical Modeling in AI. Game Developers\nConference.\n[4] Dill, K. and Martin, L. 2011. A Game AI Approach to Autonomous Control of Virtual Characters.\nInterservice/Industry Training, Simulation, and Education Conference (I/ITSEC).\n[5] Mitgutsch, K. and Weise, M. 2011 Subversive Game Design for Recursive Learning, Singapore. MIT\nGAMBIT Game Lab. Massachusetts Institute of Technology.\n[6] van Lent, M. and Laird, L. 1999 Developing an Artificial Intelligence Engine, Artificial Intelligence Lab.\nUniversity of Michigan.\n[7] Mikhalkin, G. 2005. Enumerative tropical algebraic geometry in R2. J. Amer.Math. Soc. 18,no. 2, 313\u2013377.\n[8] Macindoe,O., Pack Kaelbling, L. and Lozano Perez, T. 2012 Assistant Agents for Sequential Planning Problems.\nComputer Science and Artificial Intelligence Laboratory, MIT.\n[9] Patrik O. Hoyer, \u201cNon-negative Matrix Factorization with Sparseness Constraints\u201d, Journal of Machine\nLearning Research 5, 2004, 1457\u20131469.\n[10] Egenfeldt-Nielsen, S. and Heide Smith, J. 2003. Playing With Fire-How do computer games affect the player?\nThe Media Council for Children and Young People.\n[11] Wang, S. 2012 Operations Research 3OR. School of Mathematics & Statistics, the University of Western\nAustralia.\nIJCATM : www.ijcaonline.org"}], "references": [{"title": "Improving AI Decision Modeling Through Utility Theory", "author": ["D. Mark", "K. Dill"], "venue": "Game Developers Conference", "citeRegEx": "1", "shortCiteRegEx": "1", "year": 2010}, {"title": "Human-Level AI\u2019s Killer Application", "author": ["J.E. Laird", "M. van Lent"], "venue": "Interactive Computer Games. AI Magazine Volume", "citeRegEx": "2", "shortCiteRegEx": "2", "year": 2001}, {"title": "Embracing the Dark Art of Mathematical Modeling in AI", "author": ["K. Dill", "D. Mark"], "venue": "Game Developers Conference", "citeRegEx": "3", "shortCiteRegEx": "3", "year": 2012}, {"title": "A Game AI Approach to Autonomous Control of Virtual Characters. Interservice/Industry Training, Simulation, and Education Conference (I/ITSEC)", "author": ["K. Dill", "L. Martin"], "venue": null, "citeRegEx": "4", "shortCiteRegEx": "4", "year": 2011}, {"title": "Subversive Game Design for Recursive Learning, Singapore", "author": ["K. Mitgutsch", "M. Weise"], "venue": "MIT GAMBIT Game Lab. Massachusetts Institute of Technology", "citeRegEx": "5", "shortCiteRegEx": "5", "year": 2011}, {"title": "Developing an Artificial Intelligence Engine", "author": ["M. van Lent", "L. Laird"], "venue": "Artificial Intelligence Lab. University of Michigan", "citeRegEx": "6", "shortCiteRegEx": "6", "year": 1999}, {"title": "Enumerative tropical algebraic geometry in R2", "author": ["G. Mikhalkin"], "venue": "J. Amer.Math. Soc. 18,no", "citeRegEx": "7", "shortCiteRegEx": "7", "year": 2005}, {"title": "Assistant Agents for Sequential Planning Problems", "author": ["O. Macindoe", "L. Pack Kaelbling", "T. Lozano Perez"], "venue": null, "citeRegEx": "8", "shortCiteRegEx": "8", "year": 2012}, {"title": "Non-negative Matrix Factorization with Sparseness Constraints", "author": ["Patrik O. Hoyer"], "venue": "Journal of Machine Learning Research", "citeRegEx": "9", "shortCiteRegEx": "9", "year": 2004}, {"title": "Playing With Fire-How do computer games affect the player? The Media Council for Children and Young People", "author": ["S. Egenfeldt-Nielsen", "J. Heide Smith"], "venue": null, "citeRegEx": "10", "shortCiteRegEx": "10", "year": 2003}, {"title": "Operations Research 3OR. School of Mathematics & Statistics, the University of Western Australia", "author": ["S. Wang"], "venue": "IJCATM : www.ijcaonline.org", "citeRegEx": "11", "shortCiteRegEx": "11", "year": 2012}], "referenceMentions": [{"referenceID": 0, "context": "The role of Artificial Intelligence comes into play here [1] and [10].", "startOffset": 57, "endOffset": 60}, {"referenceID": 9, "context": "The role of Artificial Intelligence comes into play here [1] and [10].", "startOffset": 65, "endOffset": 69}, {"referenceID": 7, "context": "Here in this game, we will firstly define the matrix on ideal situation which will change as time passes with help of AI designed in it [8], the iterative method of testing the correct value of the matrix will help us to achieve the more accurate values of the matrix, and this can only be achieved with more usage of this game by various communities, more specifically by defense agencies", "startOffset": 136, "endOffset": 139}, {"referenceID": 2, "context": "Military simulators [3], [4] and [6] have become very popular with governments within the last few years due to increase in their effectiveness in training soldiers by providing them with realistic environments.", "startOffset": 20, "endOffset": 23}, {"referenceID": 3, "context": "Military simulators [3], [4] and [6] have become very popular with governments within the last few years due to increase in their effectiveness in training soldiers by providing them with realistic environments.", "startOffset": 25, "endOffset": 28}, {"referenceID": 5, "context": "Military simulators [3], [4] and [6] have become very popular with governments within the last few years due to increase in their effectiveness in training soldiers by providing them with realistic environments.", "startOffset": 33, "endOffset": 36}, {"referenceID": 10, "context": "1 Basic Mathematical Model The strategy matrix [11] can be stated as, R X A \uf03d .", "startOffset": 47, "endOffset": 51}, {"referenceID": 7, "context": "(1) where A is M x N matrix where N is the number of strategies used in game & M=1 (as initial AI designed [8] indicates only one strategy of the opponent) R is desired result (maximum or minimum value), As we know that the matrix column values can be represented as a vector in a space, so we can see that the vector \u2018X\u2019 will be some continuous curve in ndimensional space, and the vector \u2018A\u2019 will be n points spread in that space, so this equation can be seen as,", "startOffset": 107, "endOffset": 110}, {"referenceID": 7, "context": "For example if the \u2018A\u2019 matrix consists of the m 0\u2019s[8] in it then it conclude that the numbers of points in n- dimensional space are reduced to \u2018nm\u2019 number of points, and thus we can see that still we will find numerous possible combinations in X, but as to minimize the loss of money and time, we will find only 1 point in that space which consists of the 0 value of X vector which will multiply with value in A vector, and thus the curve of X will be discontinuous, in such situations it is hard to determine the actual probability.", "startOffset": 51, "endOffset": 54}, {"referenceID": 6, "context": "Tropical diagrams [7] can be made and analyzed in two ways first is Tropical graph made on Euclidean plane and second one is made on Tropical plane.", "startOffset": 18, "endOffset": 21}, {"referenceID": 0, "context": "The state the AI will go in from transition from one level to another will be calculated by Utility Based AI [1], [3] and [4].", "startOffset": 109, "endOffset": 112}, {"referenceID": 2, "context": "The state the AI will go in from transition from one level to another will be calculated by Utility Based AI [1], [3] and [4].", "startOffset": 114, "endOffset": 117}, {"referenceID": 3, "context": "The state the AI will go in from transition from one level to another will be calculated by Utility Based AI [1], [3] and [4].", "startOffset": 122, "endOffset": 125}, {"referenceID": 5, "context": "It can be used to dynamically calculate weights, scores or probabilities on basis of which the choices are made[6].", "startOffset": 111, "endOffset": 114}, {"referenceID": 0, "context": "This is called marginal utility [1] and [3] because as the amount of threat increases, it becomes of much more importance than before.", "startOffset": 32, "endOffset": 35}, {"referenceID": 2, "context": "This is called marginal utility [1] and [3] because as the amount of threat increases, it becomes of much more importance than before.", "startOffset": 40, "endOffset": 43}], "year": 2014, "abstractText": "In this paper we show how the combination of Behaviour Tree and Utility Based AI architecture can be used to design more realistic bots for Military Simulators. In this work, we have designed a mathematical model of a simulator system which in turn helps in analyzing the results and finding out the various spaces on which our favorable situation might exist, this is done geometrically. In the mathematical model, we have explained the matrix formation and its significance followed up in dynamic programming approach we explained the possible graph formation which will led improvisation of AI, latter we explained the possible geometrical structure of the matrix operations and its impact on a particular decision, we also explained the conditions under which it tend to fail along with a possible solution in future works. General Terms Game designing platform, Utility-based AI, Tropical Geometry, Game programming", "creator": "Microsoft\u00ae Office Word 2007"}}}