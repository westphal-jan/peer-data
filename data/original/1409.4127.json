{"id": "1409.4127", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "15-Sep-2014", "title": "Transfer Learning for Video Recognition with Scarce Training Data for Deep Convolutional Neural Network", "abstract": "Unconstrained video recognition and Deep Convolution Network (DCN) are two active topics in computer vision recently. In this work, we apply DCNs as frame-based recognizers for video recognition. Our preliminary studies, however, show that video corpora with complete ground truth are usually not large and diverse enough to learn a robust model. The networks trained directly on the video data set suffer from significant overfitting and have poor recognition rate on the test set. The same lack-of-training-sample problem limits the usage of deep models on a wide range of computer vision problems where obtaining training data are difficult. To overcome the problem, we perform transfer learning from images to videos to utilize the knowledge in the weakly labeled image corpus for video recognition. The image corpus help to learn important visual patterns for natural images, while these patterns are ignored by models trained only on the video corpus. Therefore, the resultant networks have better generalizability and better recognition rate. We show that by means of transfer learning from image to video, we can learn a frame-based recognizer with only 4k videos. Because the image corpus is weakly labeled, the entire learning process requires only 4k annotated instances, which is far less than the million scale image data sets required by previous works. The same approach may be applied to other visual recognition tasks where only scarce training data is available, and it improves the applicability of DCNs in various computer vision problems. Our experiments also reveal the correlation between meta-parameters and the performance of DCNs, given the properties of the target problem and data. These results lead to a heuristic for meta-parameter selection for future researches, which does not rely on the time consuming meta-parameter search.", "histories": [["v1", "Mon, 15 Sep 2014 01:26:55 GMT  (2131kb,D)", "https://arxiv.org/abs/1409.4127v1", null], ["v2", "Mon, 15 Jun 2015 14:47:54 GMT  (7630kb,D)", "http://arxiv.org/abs/1409.4127v2", null]], "reviews": [], "SUBJECTS": "cs.CV cs.LG", "authors": ["yu-chuan su", "tzu-hsuan chiu", "chun-yen yeh", "hsin-fu huang", "winston h hsu"], "accepted": false, "id": "1409.4127"}, "pdf": {"name": "1409.4127.pdf", "metadata": {"source": "CRF", "title": "Transfer Learning for Video Recognition with Scarce Training Data for Deep Convolutional Neural Network", "authors": ["Yu-Chuan Su", "Tzu-Hsuan Chiu", "Chun-Yen Yeh", "Hsin-Fu Huang", "Winston H. Hsu"], "emails": [], "sections": [{"heading": null, "text": "Index Terms\u2014Video Recognition, Deep Convolution Network, Transfer Learning\nI. INTRODUCTION\nSemantic concept and complex event recognition in unconstrained consumer videos has received much research interest in recent years [1]\u2013[6] due to both the applicability of technology and real application needs. Thanks to the popularity of video capturing devices such as smart phones and multimedia sharing sites such as Youtube, people nowadays generate and share a large volume of videos over the internet everyday. It becomes an urgent need to automatically organize and manage these videos, and video recognition is a promising first step for intelligent video management systems. Many previous works focus on recognition in very specific domains such as action recognition [7], and the videos usually come from limited sources such as news, movies or recorded in lab environment [8], [9]. Recognizing complex events in consumer video is a more challenging task, because it requires identifying various semantic concepts that may appear in various spatio-temporal locations in the video, in contrast to the temporally local action recognition. Also, the videos are captured in more diverse en-\nvironments, which require more discriminative representations for recognition.\nExtensive efforts have been made to design video features for video recognition. One common approach is to utilize image-based features to capture appearance information in each frame and then aggregate multiple frames with videospecific pooling method [1], [3], [10]. In addition to imagebased features, effort has been made to develop video specific features that capture information encoded in the temporal dimension [11], [12]. These features have improved video\nar X\niv :1\n40 9.\n41 27\nv2 [\ncs .C\nV ]\n1 5\nJu n\n20 15\n2 recognition performance in certain domains, but they also introduce significant computation overhead. Moreover, the performance gain of using video specific features is task and dataset dependent. In fact, some empirical results show that image-based features may perform as well as or even more robust than spatio-temporal features, especially when detecting complex events or high level semantic concepts in the video [1], [10], [13], [14]. Therefore, designing discriminative video features remains the key challenge for video recognition.\nMotivated by recent successes of DCN in concept recognition and object detection on static image, we aim to exploit DCN to extract better video representation. Deep Learning as a learning paradigm has been shown effective in various domains including natural language processing [15], speech recognition [16], etc. In computer vision, the great success of DCNs on the ImageNet dataset [17], [18] has attracted extensive research interest, and many further efforts have made DCN the state-of-the-art algorithm for various visual recognition tasks in static images. However, there remains several difficulties for applying DCNs on visual recognition in practice.\nThe first difficulty is its dire need for extremely large amount of labeled training data. For example, the ImageNet dataset that is widely used as the test bed as well as the source for pre-training DCNs contains more than a million images, all labeled by human. Collecting such a large dataset with complete ground truth is very challenging and may not be possible in some domains. This is especially true for video recognition, where most existing video corpora are one to two order smaller than those used for static image recognition. Although efforts have been made to collect million scale video recognition benchmarks [13], the label of the dataset is still in video level. Because irrelevant contents usually interleave with important information in user generated videos, the video level annotation can be considered as a noisy label for visual content in the video and impose additional difficulty for learning DCNs. Frame level or even pixel level annotation is more precise and informative, but it requires extensive human labor and is unlikely to be scalable.\nThe second difficulty is the large number of metaparameters in DCN. While models such as SVM and logistic regression usually have only two to three meta-parameters in practice and can be optimized easily using cross validation grid search, the number of meta-parameters in DCN is at least an order larger. Combined with the extensive computation requirement, grid search for meta-parameters is generally infeasible, and many previous works simply apply the setting of existing models which yield sub-optimal performance.\nIn this work, we focus on solving the two problems to enable practical video recognition algorithm using DCN. To overcome the lack-of-training-data problem and avoid overfitting, we apply two transfer learning approaches to transfer knowledge from static image to video. The transfer learning approach learns important visual patterns from static images and improves the generalizability of DCNs on unseen videos. To determine the network configuration, we perform extensive experiments on independent image datasets. These experiments lead to better understanding about the correlation\nbetween meta-parameters and DCN performance, which can serve as the basis for heuristic search in both our experiments and any future research in DCN.\nThe workflow of our video recognition algorithm is shown in Fig. 1. Motivated by the competitive performance of static image feature in previous research [1], we apply DCN on frame basis and aggregate frame-wise result using late fusion. We use the image dataset to initialize the network with meaningful visual pattern in static image and augment the video dataset. These transfer learning approaches lead to better DCN models and improve recognizer performance. While some recent works exploit various aggregation methods such as recurrent neural network (RNN) [3], [5] over DCN, their models are still based on frame-wise DCN and can benefit from better DCN models obtained by our transfer learning approach.\nWe verify the efficacy of the transfer learning approach on two video datasets that are popular for high level semantic concept recognition. We also show that important knowledge can be extracted from image corpora without any human labeling effort. While fully human annotated image corpora lead to better performance, even image datasets containing only weak supervision collected from the Internet can significantly boost the video recognition rate. In practice, we can learn robust video recognizers using unlabeled image dataset and 4k annotated videos labeled in frame-level. The annotation effort is much less than existing works on image recognition. Our main contribution is that we successfully learn a DCN with reasonable performance using only scarce training data. With the transfer learning approach, we can apply DCN in more general visual recognition problems and datasets. Our systematic study on the meta-parameters (e.g., image resolution, depth, training data diversity) of DCN also provides better knowledge about how to configure the networks for future researches.\nThe rest of the paper is organized as follows. In Section II, we review the related works of DCN. In Section III, we describe the proposed method for transfer learning. In Section IV, we describe the datasets we used in this work and their properties, and we summarize the DCN architectures we used in Section V. Our preliminary studies on the DCN architectures are in Section VI. Experiment results for transfer learning are in Section VII. Finally, we summarize the work in Section VIII."}, {"heading": "II. DEEP CONVOLUTION NETWORK FOR VIDEO RECOGNITION", "text": "In this section, we review the basic concept of convolution neural network. We show that convolution is a specialized regularization of standard neural network that reduces the number of learnable parameters in the model based on prior knowledge in vision. We then discuss previous works on evaluating DCN architectures and applying DCN for video recognition."}, {"heading": "A. Convolution neural network", "text": "The main difficulty of applying Deep Neural Network is that it is hard to train, due to the complexity introduced\n3 (1) Local Response - Enforce sparse connection (2) Tied Weight - Enforce same weight within feature map\nVectorize Input and Convolution Kernel\nFig. 2: Convolution illustration. Convolution network is essentially a MLP with two additional constraints: (1) Local response and (2) Tied weight. Local response enforces sparse connections between layers using the local receptive field heuristic and the tied weight constraint enforces the weight within the feature map to be the same. The two constraints reduce the number of learnable parameters and avoid overfitting.\nby the depth and the large number of learnable parameters. [19] proposed a greedy layerwise pre-training to overcome the problem. Pre-training is an unsupervised learning process that learns the hidden layers one-by-one, where each layer is learned by either maximizing the input likelihood or minimizing reconstruction error. The entire network is then finetuned with the labeled training data. Pre-training is believed to learn a better initialization that captures important patterns in the data, which facilitates the following supervised learning and leads to better generalizability [20]. The unsupervisedly learned networks can be used for transfer learning, as shown in [21], [22].\nIn computer vision, the most popular Deep Learning architecture is DCN [23]. It can be viewed as a specialized MultiLayer Perceptron (MLP) with a manually crafted architecture and regularization. MLP can be formulated as a series of affine transform followed by non-linear dimension-wise transform:\nhl = { g(W(l)x) if layer l = 1 g(W(l)f (l\u22121)) if layer l > 1.\n(1)\nGiven the activation function g and loss function, the learnable parameters W(l) are learned by gradient descent. One significant problem of applying MLP directly to general images is that the image signal usually contains tens of thousands of dimensions, which leads to extremely large affine transform matrices W. Without clever learning process and regularization, the model will be extremely prone to overfitting.\nTo avoid overfitting, convolution was introduced as a regularization on W based on the prior knowledge on the human visual system and the image signal [23], [24]. Convolution is\nusually formulated as\nhlk,i,j = g( \u2211 k\u2032 NW\u2211 r,s=1 W\u0303l,kk\u2032,r,sh l\u22121 k\u2032,i\u2212NW2 +r,j\u2212 NW 2 +s ), (2)\nwhere both the input and output are three dimensional tensors, and W\u0303 l,k stands for the k-th convolution kernel in the l-th layer. The width of the kernel is denoted by NW . It can be reformulated as\nhlk,i,j = g( \u2211 k\u2032 NH\u2211 i\u2032,j\u2032=1 Wl,k,i,jk\u2032,i\u2032,j\u2032h l\u22121 k\u2032,i\u2032,j\u2032), (3)\nwhere NH stands for the width of hl\u22121 (assume squared input). The convolution kernel W\u0303 l,k is redefined over the entire input space at each position (i, j) as W l,k,i,j with the following two constraints:\nWl,k,i,jk\u2032,i\u2032,j\u2032 = 0, if \u2016i\u2212 i \u2032\u2016 > NW 2 or \u2016j \u2212 j\u2032\u2016 > NW 2 (4)\nand Wl,k,i,jk\u2032,i\u2032,j\u2032 = W l,k,i+r,j+r k\u2032,i\u2032+r,j\u2032+s\u2200r, s. (5)\nBy vectorizing hlk,i,j over i, j, k and W l,k,i,j k\u2032,i\u2032,j\u2032 over i, j, k and i\u2032, j\u2032, k\u2032 respectively, Wl,k,i,jk\u2032,i\u2032,j\u2032 will reduce to the two dimensional tensor W(l) in Eq. 1, as shown in Fig. 2, with two additional constraints: local response as in Eq. 4 and tied weight as in Eq. 5. The local response constraint enforces that only a small part of Wl,k,i,j can be non-zero, which means that hlk,i,j can only depend on a small fraction of h\nl\u22121 while it can have arbitrary dependency in MLP. This reduces the number of learnable parameters with the heuristic that local patterns are important for both visual recognition and human vision system. Tied weight further reduces the number of learnable parameters by enforcing kernels Wl,k,i,j with same l, k to share the same value.\nDespite the convolution regularization, DCNs still have a large amount of learnable parameters and are still prone to overfitting. While unsupervised pre-training is popular in DBN to improve the generalizability, DCN as a fully supervised learning algorithm does not utilize similar learning techniques. Therefore, a large training set with high diversity is necessary to learn a DCN, yet such datasets are not easily obtainable in the past. Also, the computation cost of convolution made training on moderate resolution images (200x200, etc.) a formidable task until very recently. The most impressive breakthrough of DCN on visual recognition comes from its superior performance on the ImageNet dataset, where [17] and [18] independently report a significant performance improvement over traditional image features. While the network architecture used by each group is significantly different from each other, the key factors for the success of both groups are the extremely large training set as well as the parallel acceleration that makes learning possible. This partially explains the resurge of Neural Networks, which had been developed long before they received much attentions: it is only recently that such large training sets as well as computation power have become available for the network to be learnable.\n4 Except the learnable layers mentioned above, most DCN models also include some \u201cfixed layers\u201d that were manually designed to inject desirable properties to the model. The most common fixed layer is the pooling layer. A pooling layer combines several outputs from the previous layer, usually a local 2x2 or 3x3 patch, and generate one single output using some statistics over the input such as maximum or average. The operation is similar to convolution in the sense that it is computed locally over the entire input, except it use a different activation function g and does not adapt with data. The pooling layer is introduced for two main purposes. First, by taking local statistics, it introduce certain degree of translation invariance to the model. Invariance properties are considered important for visual features, but they are hard to realize in convolution neural network. Although it can handle only small pixel shift depending on the size of receptive field, the pooling layer will generate the same output for inputs differing with small translation and therefore realize translation invariance. Second, the pooling layer can reduce the computational cost of DCN. Consider a 2x2 pooling without overlap. The output size will reduce by a factor of 4 after the convolution layer. Therefore, the following layers can operate on a smaller 2D maps, which reduce both the computation and memory consumption. There exist other popular fixed layers such as response normalization, but they are not as popular as pooling and may sometime harm the performance."}, {"heading": "B. Network configuration", "text": "Convolution neural networks have a large number of metaparameters, including the network architecture, initialization, etc. To specify the network architecture, we have to decide the depth of the network, the number of hidden units or convolution kernels in each layer, the receptive field of each layer and many other details. It is known that meta-parameters have a great impact on the network performance [25]\u2013[27]. However, due to the large number of possible configurations and the computational cost, it is impossible to perform grid search for the optimal configuration in most situations. There exist several popular network architectures in the research community [17], [26], [28], and many previous works use these configuration without further optimization [29], [30], Although being successful in many cases, most of the architectures are proposed without explanation or justification of the choice. This leads to the lack of knowledge about how to improve the configuration for specific task, which can be expected to improve the performance of the model.\nSome previous works have reported more details about their configuration design. [28] provides high level arguments for their motivation for increasing network depth and connection design, but they do not provide experiment evidences for the particular choice of architecture. [25], [26] provide systematic experiment results to justify their choice of network architectures, but both of them focus only on the depth of the network while there exist many other factors in network architecture. [27] optimizes the step size and receptive field of the convolution kernel in first layer, based on the model proposed in [17]. However, the update is based on empirical\nanalysis of the visualization result and is hard to generalize to other data or higher layers in the network. [31] evaluates various configurations of DCN on image recognition including network architecture, but they only test three different architectures which provide limited information on the effect of metaparameters. Compared to all existing works, our evaluation on network architecture is more complete and systematic. Also, we are the first to study the effect of input image resolution on DCN, which may help to significantly reduce the computational cost in certain scenarios."}, {"heading": "C. Deep convolution network for video recognition", "text": "Motivated by the outstanding performance of applying DCN on static image recognition, there is a growing interest of applying DCN on video recognition. An intuitive extension of DCN to video is to perform convolution over a spatiotemporal volume, so the 3-dimensional convolution kernel can capture short term local motion instead of only spatial motion in original 2-dimensional DCN. This extension has been shown successful on various action recognition benchmarks [32]\u2013[34], but it does not perform well on recognizing more complex events [13]. [13] proposes a more general framework for fusing multiple frames, and they evaluate different fusion strategies on million scale video dataset for recognizing sports event. Their results suggest that single-frame DCN performs similarly to more complex models.\nInstead of extending convolution to temporal domain, a more common approach is to build the video recognition model on top of the frame-wise DCN. [3], [14] exploits different pooling methods to combine frame features extracted by static image DCN. They show that the pooling method has significant impacts on video recognition performance, and by properly pooling the frame-wise features, static image DCN can significantly outperform more complex convolution models. [4] combines DCN features with other hand crafted features using another neural network, where the video DCN representation is the average of frame-wise features extracted by static image DCN. [35] proposes a late fusion approach to combine local motion and appearance information. The local motion of each frame is first captured by optical flow and then processed by a frame-based convolution network, instead of convolving over spatio-temporal volumes. One problem of 3- dimensional convolution is that it captures only temporally local motion, while event recognition usually requires the long term dependency of high level semantic concepts. [5], [36] use Long Short Term Memory network on top of the frame-wise DCN feature to model the long-term dependency of high level semantic concepts. They show that the recurrent neural network can further boost the performance of framewise DCN. While our method is also based on pooling framewise DCN results, in contrast to most existing works that focus on improving the pooling method, we aim at improving the DCN model itself. Therefore, it can be combined with any of the static image DCN based models mentioned in the previous paragraph.\n5 Image Label Video Label\nShared Representation\nFig. 3: Augment training set for transfer learning. The DCN is trained with both images and video frames simultaneously. Because the middle layers are shared by all output units, the internal representation benefits from both the image and video domains and learns a more robust network. This helps to avoid overfitting and learn general visual patterns in natural images."}, {"heading": "III. TRANSFER LEARNING WITH DEEP CONVOLUTION NETWORK", "text": "In this section, we describe the transfer learning approaches we apply to utilize image information in video recognition. Transfer learning helps to learn a more generalizable DCN. This is important because DCNs are prone to overfitting, especially when only scarce training data is available. While increasing training data helps to solve the problem, there are cases where collecting new data with complete ground truth is difficult. Transfer learning solves the problem by using labeled data from other domains where a large number of training data is available to improve the network.\nThe goal is similar to the pre-training process in Deep Belief Network (DBN) and Stacked Auto-Encoder (SAE) in the sense that it improves the generalizability by learning a better intermediate representation [20]. A good representation does not necessarily optimize the loss during training, which is done by supervised backpropagation in Deep Neural Network; instead, it should capture important patterns that are general to all data. While DBN and SAE achieve this by performing unsupervised pre-training before supervised training, we learn the representations from other domains and then optimize the representation through transfer learning."}, {"heading": "A. Augment training data", "text": "The first approach for transfer learning is to augment video data with independent image data. Or equivalently, we train a DCN that simultaneously recognizes images from the image datasets and frames from the video dataset, as illustrated in Fig. 3. This is made possible since the intermediate layers\nYahoo!-Flickr\nILSVRC 2012\nFig. 4: First convolution layer kernels learned from Yahoo!Flickr and ILSVRC2012 datasets. Despite being learned from non-overlapping datasets, some kernels are visually similar, which supports the assumption that some important image patterns are shared across different datasets provided enough training data.\nare shared by all output units in Neural Networks and may benefit from the training data of other classes. If the lower layers can learn general visual patterns that are shared across different datasets, the additional classes and training data can help to learn better low and middle level features and avoid overfitting."}, {"heading": "B. Transfer mid-level features", "text": "The second approach for transfer learning is to transfer the learned feature from images to videos by initializing the learnable parameters of DCNs using the network pre-trained on image domain. The approaches can also be considered as a supervised pre-training, which is analogous to the unsupervised pre-training in DBN or SAE. The network is then fine-tuned using the target dataset to optimize the features for the target domain. This approach is motivated by the fact that image features rely on important visual patterns that are shared across all natural images, so they can be used to characterize images outside the training set. Because the convolution kernels in DCN learn important low level visual patterns in natural images [18], these convolution kernels serve as the low level features used in traditional visual recognition, and they may also be similar across all natural images and datasets. This can be seen in Fig. 4, where some of the first layer kernels are very similar even if they are learned from two non-overlapping datasets. Therefore, the network parameters learned from one dataset may be useful for another dataset.\nThe fine-tuning step is performed to further optimize the feature. This is especially important for the higher layers in DCN, such as the fully connected layer, because these layers capture more complex patterns [18] that may not generalize well to other domains. For example, while lines and corners are common to all natural images, a pattern of face will appear in only specific domains and may not be useful in all problems. Because training neural networks as an optimization problem is non-convex, different initial values of the learnable\n6 parameters will lead to different networks. In fact, it is known that good initialization will lead to better performance [37]. Therefore, by initializing the learnable parameters with visual patterns learned from independent image corpus, we should be able to learn more generalizable networks, as suggested by the pre-training process.\nWhile previous researches focus on unsupervised pretraining for better representation learning, several parallel works have utilize the supervised pre-training approaches to address the same lack-of-training-data problem [13], [29], [30], [38]. In most of these works, DCNs learned on the ILSVRC dataset are applied on other static visual recognition problems such as object recognition on the Pascal VOC dataset. Our work is complementary to them in that we show the same approach can be well generalized in both source and target domain. The dataset we used for supervised pretraining is a weakly labeled dataset that uses image tags as ground truth, and the DCNs are then applied to Youtube videos rather than static images. Also, some of our discoveries and conclusions are consistent to those in [13], [29] as described below."}, {"heading": "IV. DATASET", "text": "In this section, we describe the datasets we used and discuss their properties. We use 4 datasets in our experiments, 2 static image datasets and 2 video datasets. The image datasets are used to compare different network architectures and perform transfer learning to boost video recognition DCN. While both of them are million scale image datasets, they have certain fundamental differences including label quality, number of categories and the recognition targets. These differences stem from the data collection process and dataset design. Because our goal is to recognize high level semantic concepts from the video, the video datasets are labeled with either semantic concepts or complex events that involve the interaction of various semantic concepts. Both of them are popular in previous video recognition researches. We also show the example images in Fig. 5.\nILSVRC2012. ILSVRC2012 [39] is an 1k classes subset of ImageNet used in ImageNet Large Scale Visual Recognition Challenge. While the 1k classes may be either internal or leaf nodes of the ImageNet ontology, they are guaranteed to be non-overlapping. Each class correspond to an object, and an image is considered positive to the class if the object appears in the it. The entire dataset comprises of 1.5 million manually labeled images, where 1.2 million of them are used as the training set and 50,000 images are used as the validation set; we report the performance on the validation set. The dataset is characterized by its large number of classes and is often used to evaluate visual recognition system with large semantic space. Because all the images are manually annotated, the label is considered precise and reliable.\nYahoo!-Flickr. Yahoo!-Flickr contains images with 10 different classes, where the classes are defined by popular Flickr tags in and the ground truths are obtained directly from Flickr without further annotation or verification. Therefore, it contains only weak supervision, and the label is known to\nbe noisy because of user tagging behavior [40]. Each class contains 150k images for training and 50k images for testing. Yahoo!-Flickr dataset is characterized by its large intra-class variations, where the images in each class may be visually very diverse or even share no visual similarity at all. Also, the classes usually correspond to more vague concepts such as \u201cSky\u201d instead of some concrete objects.\nCCV. Columbia Consumer Video (CCV) Database [1] is a video dataset that targets on unconstrained consumer video content analysis. The dataset contains 9,317 manually labeled Youtube videos with 20 semantic categories, where each video may belong to arbitrary number of categories. The 9,317 videos are divided into an equal-sized train and test set, and the general evaluation protocol adopts binary relevance multilabel classification on the 20 semantic categories with mean average precision (MAP) criterion.\nTRECVID MED11. TRECVID MED is the dataset used in the multimedia event detection task in annual TRECVID activity. It consists of consumer generated videos published on video sharing sites and is collected and annotated by the Linguistic Data Consortium. We use the 2011 release, which contains 13,115 training and 32,061 test videos. 15 event classes were defined in this release, with 5 of them annotated only in the training set for system development. Each video contains at most one out of the 15 events, annotated at video level. We use all 15 event classes for training and use the videos with event label following [2].\nTo learn a DCN for the video dataset, we first perform uniform sampling on the training set to extract image frames for training, and we treat each frame as an independent sample. In the testing phase, we perform recognition on the keyframes independently and use late fusion to combine the confidence score of different frames."}, {"heading": "V. NETWORK ARCHITECTURE", "text": "In this section, we describe the network architecture and other parameters we used for our experiments. We will refer to these architectures based on the input image resolution and number of convolution layers in the following sections.\n2-convolution-layer network. For networks with two convolution layers, we adopt an architecture similar to that of LeNet5 [23]. The network is composed of 5 layers; the first two layers are convolution layers, and the third and fourth layer are fully connected layers. The last layer is a classification layer. The structure of convolution layers depend on the image resolution. For 256x256 and 128x128 input image resolution, the first convolution layer has 64 kernels of size 11x11x3 with a stride of 4 pixels. The second convolution layer has 128 kernels of size 5x5x64. Max pooling with 2x2 region is performed after each convolution layer. The third layer, or the first fully connected layer has 4,096 neurons; the second fully connected layer has 1,024 neurons for Yahoo!-Flickr dataset and 2,048 for ILSVRC2012. The structure of fully connected layers are kept the same over all input image resolution and network architecture. Given a 32x32 input image resolution, the first convolution layer has 64 kernels of size 5x5x3 and the second convolution layer has 128 kernels of size 5x5x64. For\na 64x64 input image resolution, the kernel sizes are the same with the exception that we use 32 kernels for the first layer and 64 for the second layer. If not mentioned specifically, all convolution layers have stride 1 and are followed by 2x2 max pooling, and Rectified Linear Unit1(ReLU) activation is used in all the network layers.\n3-convolution-layer network. The 3-convolution-layer network is modified from 2-convolution-layer network, with the following differences: for 256x256 and 128x128 input image resolution, the first convolution layer now uses kernel of size 7x7x3 with a stride of 3; the third convolution layer has 320 kernels of size 3x3x128, and no max pooling is performed on the output of the third convolution layer. The second convolution layer and fully connected layers are the same as the 2-convolution-layer network with different input size. For 64x64 input image resolution, the first convolution layer consists of 32 kernels of size 5x5x3, the second layer consists of 64 kernels of size 5x5x32, and the third layer has 120 kernels of size 3x3x64; max pooling is performed after the first and second convolution layer. For 32x32 input image resolution, the convolution layer structures are similar to that of 64x64 input image resolution, except we perform max pooling only after the first layer, otherwise the third layer will\n1 ReLU is an approximation of sigmoid function: f(x) = x \u2217 I(x > 0), where I() is the indicator function.\nbe too small. 4-convolution-layer network. The 4-convolution-layer network is similar to the architecture used in [17] with some simplification. The first convolution is the same as that in the 2-convolution-layer network. The second convolution layer has 128 kernels of size 5x5x64. The third convolution layer has 192 kernels of size 3x3x128, and the fourth convolution layer has 192 kernels of size 3x3x192. Note that we do not perform response normalization and grouping on the convolution kernels as in [17], and our max pooling is performed over 2x2 regions without overlapping.\n5-convolution-layer network. The 5-convolution-layer network is based on the architecture proposed in [17] with the following modification. First, the number of hidden units in fully connected layer is reduced, as described in 2-convolution-layer network architecture. Second, we remove the response normalization layer in the network following the 4-convolution-layer architecture. It is worth noting that the 5-convolution-layer network has more convolution kernel than other architectures we studied: the first layer has 50% more convolution kernels, while the second to fourth layers have twice the number of kernels. Therefore, it is expect to have better performance. We choose the setting to make the result comparable with existing works.\nThe Caffe package [41] is used for learning the networks. The learning process is similar to that in [17], where we\n8\ncrop and mirror the images to produce more training samples. Images of size 256x256 are cropped to a size of 227x227, 128x128 to 116x116, 64x64 to 56x56 and 32x32 to 28x28. The same dropout ratio, initial learning rate and momentum as in [17] are used."}, {"heading": "VI. EXPERIMENT \u2013 NETWORK CONFIGURATION SELECTION", "text": "Instead of performing computation intensive grid search on meta-parameters for every new problem, we believe that by studying the correlation between meta-parameters and the network performance on a wide range of datasets, we can learn a heuristic that gives us a reasonable network configuration based on the target problem. Therefore, we perform extensive experiments on image datasets to better understand the properties of DCN. We set the configuration of frame-based video recognizer based on these knowledge without performing cross validation on the target video datasets. In particular, we study the image resolution for input image and the required depth of the network, which have the greatest effect on computation cost of DCN. We also study how to sample the frames from video, which manifests the fact that a large training set with high diversity is necessary for training DCN.\nA. Image Resolution\nEarly experiments of DCN are mostly based on datasets with very low image resolution. While it is claimed that these thumbnail images are still human recognizable [42], it is obvious that images with higher resolution contain more detailed information that may be helpful for visual recognition.\nTherefore, state-of-the-art DCN models usually operate on images with higher resolutions (256x256, etc.). But higher resolution also implies higher computational cost. In DCN, the complexity grows roughly quadratically as the image resolution increases. To minimize the computational cost, we try to investigate whether high resolution images are necessary for DCN in general visual recognition.\nWe resize the images of Yahoo!-Flickr and ILSVRC2012 into four different resolutions ranging from 256x256 to 32x32 and then train DCNs with either 2 or 3 convolution layers on each resolution. The results are in Table I, where the two datasets show different responses with respect to image resolution. For the ILSVRC2012 dataset, the performance is very sensitive to the image resolution, and we can consistently obtain 10% \u223c 15% relative improvement by doubling the resolution. Also note that 3-convolution-layer network has worse performance than 2-convolution-layer network with 32x32 input image resolution, which implies the limit on depth imposed by image resolution. In fact, we have to abandon max pooling after the second convolution layer of the network to have a large enough hidden layer, otherwise the network will be nearly unlearnable and have extremely bad performance. The Yahoo!-Flickr dataset, on the other hand, shows only moderate performance degradation when reducing the resolution, and we can achieve reasonable performance even with 32x32 thumbnail images.\nThe difference of the two datasets stems from the fact that they are designed for different purpose and have different properties. In particular, while the ILSVRC2012 dataset is designed for object recognition where the object may be present in only a small part of the image, the Yahoo!-Flickr dataset is designed for tag prediction, where the tags are mostly high level concepts that describe the entire image. The results indicate that we may use smaller images without significant loss of performance yet reduce the computational cost quadratically. Nevertheless, increasing the resolution consistently yields better performance and enables the usage of deeper networks, so we use 256x256 resolution in following experiments."}, {"heading": "B. Depth of Architecture", "text": "In this section, we compare the performance of DCNs with different numbers of convolution layers. Since adding layers in the network significantly increases the computational cost, we would like to use networks as shallow as possible if the additional layers have no or even negative contributions on the performance.\nTo evaluate the effect of different depths on the performance, we learn convolution networks with 2\u223c5 convolution layers. The results are in Table II. Again, the two datasets show difference response to the number of convolution layers. In Yahoo!-Flickr, 3-convolution-layer network turns out to have the best performance, although the performance gain of the 3rd convolution layer is relative minor. Note the superior performance of 5-convolution-layer network over 4- convolution-layer one benefits not only from the additional layer but also from the additional convolution kernel in each\n9\nlayer. The performance gain of additional convolution layers is more significant in ILSVRC2012, which achieves 10% relative improvement in terms of Top-1 result. Also, the performance grows monotonically with the number of layers. Different from many previous works, we find the performance of DCN does not always grow when the network becomes deeper but is data-dependent."}, {"heading": "C. Training Data Number and Diversity", "text": "In this section, we study the effect of increasing training set size on the Yahoo!-Flickr datasets. We choose Yahoo!-Flickr because the study of performance dependency on training set size is part of the goal the dataset is designed for. The ILSVRC2012 dataset, on the other hand is not suitable for the study, because reducing the training set may either lead to very few samples for some classes or change the ratio of different classes.\nWe train 2-convolution-layer networks on Yahoo!-Flickr using both 20k and 150k training samples for each classes. We choose 20k training samples for comparison because previous results show that the performance of linear classifier saturates with 20k training samples per-class. The results are shown in Table III, which clearly shows that smaller training set leads to significant overfitting and therefore poor performance.\nCCV\nCCV + Yahoo!-Flickr\nFig. 6: Samples of the first convolution layer kernels learned from the CCV dataset and from augmenting CCV with Yahoo!-Flickr. The kernels learned from CCV only show very different patterns compared with those learned from Yahoo!-Flickr or ILSVRC2012, where there are nearly no high frequency signals in the kernels. By augmenting CCV with Yahoo!-Flickr, we introduce high frequency kernels into the network. This may explain why training DCN on CCV only yields significant overfitting and poor performance: it ignores informative signals.\nTo generate large enough training set from the video datasets, we perform uniform sampling on video frames instead of using only keyframes. We compare the results using 1-fps sampling and 4-fps sampling on CCV dataset, which leads to roughly 400k training samples and 1.6 million training samples respectively. Although 4-fps leads to a much larger training set, experiment results show that the performance using 4-fps are nearly identical with 1-fps while it takes much more storage and computation. The reason is that 4-fps sampling results in a large dataset with small visual diversity, and the redundant training data are not helpful for learning. Therefore, we use 1-fps sampling to produce the training data for the following video recognition experiments."}, {"heading": "VII. EXPERIMENT \u2013 VIDEO RECOGNITION WITH TRANSFER LEARNING", "text": "In this section, we examine the proposed transfer learning approach on video recognition datasets. The entire workflow of video recognition is as follows: we sample video frames from the training set using 1-fps uniform sampling and train a frame-wise DCN. The label of the video is propagated to all frames extracted from the video, despite there may be irrelevant frames. For test videos, we extract keyframes from the video and perform frame-wise recognition. The recognition results of all the keyframes within a video are then aggregated using average pooling to predict the category of the video."}, {"heading": "A. Augment training sets", "text": "In this section, we examine the approach of augmenting video datasets with static image datasets. In practice, we subsample roughly the same number of images as video frames (0.4 million) from the image datasets and mix these images\n10\nwith the video datasets to create a new training set. The results are shown in Table IV. Although the two datasets are from very different sources (static-image v.s. video), augmenting the video datasets indeed improves the performance. This may be explained by the first convolution layer kernels, as in Fig. 6, which shows that by augmenting video dataset, the network successfully learns the high frequency signals that are ignored when training the network on CCV only. These signal are known to be important, and ignoring them may degrade the generalizability."}, {"heading": "B. Transfer Mid-level Features", "text": "In this section, we examine the approach of transferring mid-level features. In practice, we initialize the network for video recognition by the network trained on Yahoo!-Flickr and ILSVRC2012 respectively. During training, we either update all the parameters in the network or update only the fully connected layers and keep the convolution kernels unchanged. The reason why we keep the convolution kernels unchanged is to reduce the number of learnable parameters to avoid overfitting as motivated by the convolution regularization. If the lower layer convolution kernels do learn important patterns such as lines or corners, they should be similar and reusable\nover different datasets, so keeping them unchanged should not degrade the performance. The result are in Table IV. Initializing the network with pre-trained networks improves the performance significantly, and updating only the fully connected layers is better than updating all parameters. This indicates that when the training data is not enough, avoiding to update the low level features in DCNs will reduce the overfitting problem and lead to better performance. These results are identical with that in [13], which shows that update only the fully connected layers lead to better recognition accuracy, although we use totally different data and different network structures. It is also consistent with [29], which shows that fully connected layers in DCNs are less generalizable than convolution layers and therefore require fine-tuning. Note that the networks learn different sets of convolution kernels using different initialization, as shown in Fig. 7, while both of them achieve good performance.\nFinally, we combine the two transfer learning approaches. That is, we initialize the network with the one trained on image datasets and fine-tune the network with both images and video frames. The recognition performance is further improved by the combination. It is interesting to see the difference between different image datasets used to bootstrap the video recognizer.\n11\nYahoo!-Flickr \u2192 CCV\nILSVRC 2012 \u2192 CCV\nFig. 7: The first convolution layer kernels of networks using a pre-trained network as initialization. Although the kernels are both learned from the CCV dataset, they show different visual patterns which are more similar to their initialization points respectively. Note the clear 1-to-1 correspondence between the kernels above and those in Fig. 4. In fact, most of the kernels do not change significantly after fine-tuning with CCV datasets, which indicates the patterns learned from either Yahoo!-Flickr or ILSVRC2012 are helpful for recognizing CCV videos, i.e. datasets of different domains.\nWhile the two image datasets lead to similar performance when 2-convolution-layer network is used, the ILSVRC2012 benefit more from the additional depths, because the more precise label information provides better supervision and enables learning a more complex model. This indicates that the network benefits from any additional supervision, even if it is independent of the target problem. Nevertheless, the weakly supervised Yahoo!-Flickr also boosts the video recognition performance and does not require the expensive human annotations for ground truth. The only annotated data in the entire learning process is the video dataset, which requires much less human intervention and annotation overhead."}, {"heading": "VIII. CONCLUSIONS", "text": "In this work, we apply DCNs on unconstrained video recognition, where the networks are used as frame-based recognizers. Our preliminary study shows that one of the most significant obstacles for training a DCN is the requirement for a large amount of training samples. Without enough training samples, the networks are highly prone to overfitting which leads to poor performance. This problem is especially important for video recognition, because videos with ground truth are scarce and hard to obtain.\nTo overcome the problem, we train DCNs with transfer learning from images to videos. The image corpus can be weakly labeled, which is widely available in various social media such as Flickr and Instagram. These rich image samples can help to learn more robust recognizers on the video frames, even though they are from different domains. The transfer learning process makes training DCN with scarce training data possible, where we achieve reasonable performance using only 4k videos for training. Because weakly labeled datasets are\ngood enough for supervised pre-training without harming the performance, we are exempt from the requirement of collecting and annotating a large dataset as in previous researches in DCN.\nOur preliminary study also reveals the correlation between meta-parameters and performance given different dataset properties. In particular, we study the effect of depth and image resolution, because these factors have significant impact on the computation cost. The results indicate that high resolution images always yield better performance, but it is more important for object level recognition compared with scene level recognition. The results also show that additional depths in the network may not always be helpful for performance; in fact, deep networks may sometimes perform worse than shallow ones. These studies not only help us to select the meta-parameters used for video recognition, but also provide hints for future researcher and facilitate the research in DCN.\nIn our future work, we would like to investigate the possibility of unsupervised pre-training for DCN. Our current approach still requires a large labeled corpus, and we would like to further eliminate the requirement."}], "references": [{"title": "Consumer video understanding: A benchmark database and an evaluation of human and machine performance", "author": ["Y.-G. Jiang", "G. Ye", "S.-F. Chang", "D. Ellis", "A.C. Loui"], "venue": "ICMR, 2011.", "citeRegEx": "1", "shortCiteRegEx": null, "year": 2011}, {"title": "Recognizing complex events using large margin joint low-level event model", "author": ["H. Izadinia", "M. Shah"], "venue": "ECCV, 2012.", "citeRegEx": "2", "shortCiteRegEx": null, "year": 2012}, {"title": "A discriminative cnn video representation for event detection", "author": ["Z. Xu", "Y. Yang", "A.G. Hauptmann"], "venue": "arXiv preprint arXiv:1411.4006, 2014.", "citeRegEx": "3", "shortCiteRegEx": null, "year": 2014}, {"title": "Exploiting feature and class relationships in video categorization with regularized deep neural networks", "author": ["Y.-G. Jiang", "Z. Wu", "J. Wang", "X. Xue", "S.-F. Chang"], "venue": "arXiv preprint arXiv:1502.07209, 2015.", "citeRegEx": "4", "shortCiteRegEx": null, "year": 2015}, {"title": "Modeling spatialtemporal clues in a hybrid deep learning framework for video classification", "author": ["Z. Wu", "X. Wang", "Y.-G. Jiang", "H. Ye", "X. Xue"], "venue": "arXiv preprint arXiv:1504.01561, 2015.", "citeRegEx": "5", "shortCiteRegEx": null, "year": 2015}, {"title": "Evaluating two-stream cnn for video classification", "author": ["H. Ye", "Z. Wu", "R.-W. Zhao", "X. Wang", "Y.-G. Jiang", "X. Xue"], "venue": "arXiv preprint arXiv:1504.01920, 2015.", "citeRegEx": "6", "shortCiteRegEx": null, "year": 1920}, {"title": "A survey of video datasets for human action and activity recognition", "author": ["J.M. Chaquet", "E.J. Carmona", "A. Fern\u00e1ndez-Caballero"], "venue": "Comput. Vis. Image Underst., vol. 117, no. 6, pp. 633\u2013659, 2013.", "citeRegEx": "7", "shortCiteRegEx": null, "year": 2013}, {"title": "Evaluation campaigns and trecvid", "author": ["A.F. Smeaton", "P. Over", "W. Kraaij"], "venue": "MIR, 2006.", "citeRegEx": "8", "shortCiteRegEx": null, "year": 2006}, {"title": "Learning realistic human actions from movies", "author": ["I. Laptev", "M. Marszalek", "C. Schmid", "B. Rozenfeld"], "venue": "CVPR, 2008.", "citeRegEx": "9", "shortCiteRegEx": null, "year": 2008}, {"title": "Detecting activities of daily living in first-person camera views", "author": ["H. Pirsiavash", "D. Ramanan"], "venue": "CVPR, 2012.", "citeRegEx": "10", "shortCiteRegEx": null, "year": 2012}, {"title": "A 3-dimensional sift descriptor and its application to action recognition", "author": ["P. Scovanner", "S. Ali", "M. Shah"], "venue": "Proceedings of the 15th International Conference on Multimedia, 2007.", "citeRegEx": "11", "shortCiteRegEx": null, "year": 2007}, {"title": "A spatio-temporal descriptor based on 3d-gradients", "author": ["A. Kl\u00e4ser", "M. Marsza\u0142ek", "C. Schmid"], "venue": "BMVC, 2008.", "citeRegEx": "12", "shortCiteRegEx": null, "year": 2008}, {"title": "Large-scale video classification with convolutional neural networks", "author": ["A. Karpathy", "G. Toderici", "S. Shetty", "T. Leung", "R. Sukthankar", "L. Fei-Fei"], "venue": "CVPR, 2014.", "citeRegEx": "13", "shortCiteRegEx": null, "year": 2014}, {"title": "Exploiting image-trained cnn architectures for unconstrained video classification", "author": ["S. Zha", "F. Luisier", "W. Andrews", "N. Srivastava", "R. Salakhutdinov"], "venue": "arXiv preprint arXiv:1503.04144, 2015.", "citeRegEx": "14", "shortCiteRegEx": null, "year": 2015}, {"title": "A deep learning approach to machine transliteration", "author": ["T. Deselaers", "S. Hasan", "O. Bender", "H. Ney"], "venue": "Proceedings of the Fourth Workshop on Statistical Machine Translation, 2009.", "citeRegEx": "15", "shortCiteRegEx": null, "year": 2009}, {"title": "Acoustic modeling using deep belief networks", "author": ["A. Mohamed", "G.E. Dahl", "G. Hinton"], "venue": "Trans. Audio, Speech and Lang. Proc., vol. 20, no. 1, pp. 14\u201322, 2012.", "citeRegEx": "16", "shortCiteRegEx": null, "year": 2012}, {"title": "Imagenet classification with deep convolutional neural networks", "author": ["A. Krizhevsky", "I. Sutskever", "G.E. Hinton"], "venue": "NIPS, 2012.  12", "citeRegEx": "17", "shortCiteRegEx": null, "year": 2012}, {"title": "Building high-level features using large scale unsupervised learning", "author": ["Q. Le", "M. Ranzato", "R. Monga", "M. Devin", "K. Chen", "G. Corrado", "J. Dean", "A. Ng"], "venue": "ICML, 2012.", "citeRegEx": "18", "shortCiteRegEx": null, "year": 2012}, {"title": "A fast learning algorithm for deep belief nets", "author": ["G.E. Hinton", "S. Osindero", "Y.-W. Teh"], "venue": "Neural computation, vol. 18, no. 7, pp. 1527\u20131554, 2006.", "citeRegEx": "19", "shortCiteRegEx": null, "year": 2006}, {"title": "Why does unsupervised pre-training help deep learning?", "author": ["D. Erhan", "Y. Bengio", "A. Courville", "P.-A. Manzagol", "P. Vincent", "S. Bengio"], "venue": "JMLR, vol", "citeRegEx": "20", "shortCiteRegEx": "20", "year": 2010}, {"title": "Convolutional deep belief networks for scalable unsupervised learning of hierarchical representations", "author": ["H. Lee", "R. Grosse", "R. Ranganath", "A.Y. Ng"], "venue": "ICML, 2009.", "citeRegEx": "21", "shortCiteRegEx": null, "year": 2009}, {"title": "Domain adaptation for large-scale sentiment classification: A deep learning approach", "author": ["X. Glorot", "A. Bordes", "Y. Bengio"], "venue": "ICML, 2011.", "citeRegEx": "22", "shortCiteRegEx": null, "year": 2011}, {"title": "Gradient-based learning applied to document recognition", "author": ["Y. LeCun", "L. Bottou", "Y. Bengio", "P. Haffner"], "venue": "Proceedings of the IEEE, vol. 86, no. 11, pp. 2278\u20132324, 1998.", "citeRegEx": "23", "shortCiteRegEx": null, "year": 1998}, {"title": "Sparse deep belief net model for visual area v2", "author": ["H. Lee", "C. Ekanadham", "A.Y. Ng"], "venue": "NIPS, 2007.", "citeRegEx": "24", "shortCiteRegEx": null, "year": 2007}, {"title": "Multidigit number recognition from street view imagery using deep convolutional neural networks", "author": ["I.J. Goodfellow", "Y. Bulatov", "J. Ibarz", "S. Arnoud", "V. Shet"], "venue": "arXiv preprint arXiv:1312.6082, 2013.", "citeRegEx": "25", "shortCiteRegEx": null, "year": 2013}, {"title": "Very deep convolutional networks for large-scale image recognition", "author": ["K. Simonyan", "A. Zisserman"], "venue": "arXiv preprint arXiv:1409.1556, 2014.", "citeRegEx": "26", "shortCiteRegEx": null, "year": 2014}, {"title": "Visualizing and understanding convolutional networks", "author": ["M.D. Zeiler", "R. Fergus"], "venue": "ECCV, 2014.", "citeRegEx": "27", "shortCiteRegEx": null, "year": 2014}, {"title": "Going deeper with convolutions", "author": ["C. Szegedy", "W. Liu", "Y. Jia", "P. Sermanet", "S. Reed", "D. Anguelov", "D. Erhan", "V. Vanhoucke", "A. Rabinovich"], "venue": "arXiv preprint arXiv:1409.4842, 2014.", "citeRegEx": "28", "shortCiteRegEx": null, "year": 2014}, {"title": "Rich feature hierarchies for accurate object detection and semantic segmentation", "author": ["R. Girshick", "J. Donahue", "T. Darrell", "J. Malik"], "venue": "CVPR, 2014.", "citeRegEx": "29", "shortCiteRegEx": null, "year": 2014}, {"title": "Learning and transferring mid-level image representation using convolution neural networks", "author": ["M. Oquab", "L. Bottou", "I. Laptev", "J. Sivic"], "venue": "CVPR, 2014.", "citeRegEx": "30", "shortCiteRegEx": null, "year": 2014}, {"title": "Return of the devil in the details: Delving deep into convolutional nets", "author": ["K. Chatfield", "K. Simonyan", "A. Vedaldi", "A. Zisserman"], "venue": "arXiv preprint arXiv:1405.3531, 2014.", "citeRegEx": "31", "shortCiteRegEx": null, "year": 2014}, {"title": "Learning hierarchical invariant spatio-temporal features for action recognition with independent subspace analysis", "author": ["Q.V. Le", "W.Y. Zou", "S.Y. Yeung", "A.Y. Ng"], "venue": "CVPR, 2011.", "citeRegEx": "32", "shortCiteRegEx": null, "year": 2011}, {"title": "3d convolutional neural networks for human action recognition", "author": ["S. Ji", "W. Xu", "M. Yang", "K. Yu"], "venue": "Pattern Analysis and Machine Intelligence, IEEE Transactions on, vol. 35, no. 1, pp. 221\u2013231, 2013.", "citeRegEx": "33", "shortCiteRegEx": null, "year": 2013}, {"title": "Action recognition by learning temporal slowness invariant features", "author": ["L. Pei", "M. Ye", "X. Zhao", "Y. Dou", "J. Bao"], "venue": "The Visual Computer, pp. 1\u201310, 2015.", "citeRegEx": "34", "shortCiteRegEx": null, "year": 2015}, {"title": "Two-stream convolutional networks for action recognition in videos", "author": ["K. Simonyan", "A. Zisserman"], "venue": "NIPS, 2014.", "citeRegEx": "35", "shortCiteRegEx": null, "year": 2014}, {"title": "Long-term recurrent convolutional networks for visual recognition and description", "author": ["J. Donahue", "L.A. Hendricks", "S. Guadarrama", "M. Rohrbach", "S. Venugopalan", "K. Saenko", "T. Darrell"], "venue": "arXiv preprint arXiv:1411.4389, 2014.", "citeRegEx": "36", "shortCiteRegEx": null, "year": 2014}, {"title": "On the importance of initialization and momentum in deep learning", "author": ["I. Sutskever", "J. Martens", "G. Dahl", "G. Hinton"], "venue": "ICML, 2013.", "citeRegEx": "37", "shortCiteRegEx": null, "year": 2013}, {"title": "Decaf: A deep convolutional activation feature for generic visual recognition", "author": ["J. Donahue", "Y. Jia", "O. Vinyals", "J. Hoffman", "N. Zhang", "E. Tzeng", "T. Darrell"], "venue": "arXiv preprint arXiv:1310.1531, 2013.", "citeRegEx": "38", "shortCiteRegEx": null, "year": 2013}, {"title": "Large scale visual recognition challenge 2012.", "author": ["J. Deng"], "venue": null, "citeRegEx": "39", "shortCiteRegEx": "39", "year": 2012}, {"title": "Flickrtag prediction using multi-modal fusion and meta information", "author": ["Y.-C. Su", "T.-H. Chiu", "G.-L. Wu", "C.-Y. Yeh", "F. Wu", "W. Hsu"], "venue": "ACM MM, 2013.", "citeRegEx": "40", "shortCiteRegEx": null, "year": 2013}, {"title": "Caffe: An open source convolutional architecture for fast feature embedding", "author": ["Y. Jia"], "venue": "2013. [Online]. Available: http://caffe.berkeleyvision.org/,", "citeRegEx": "41", "shortCiteRegEx": null, "year": 2013}, {"title": "80 million tiny images: A large data set for nonparametric object and scene recognition", "author": ["A. Torralba"], "venue": "PAMI, vol. 30, no. 11, pp. 1958\u20131970, 2008.", "citeRegEx": "42", "shortCiteRegEx": null, "year": 1958}], "referenceMentions": [{"referenceID": 0, "context": "in recent years [1]\u2013[6] due to both the applicability of technology and real application needs.", "startOffset": 16, "endOffset": 19}, {"referenceID": 5, "context": "in recent years [1]\u2013[6] due to both the applicability of technology and real application needs.", "startOffset": 20, "endOffset": 23}, {"referenceID": 6, "context": "Many previous works focus on recognition in very specific domains such as action recognition [7], and the videos usually come from limited sources such as news, movies or recorded in lab environment [8], [9].", "startOffset": 93, "endOffset": 96}, {"referenceID": 7, "context": "Many previous works focus on recognition in very specific domains such as action recognition [7], and the videos usually come from limited sources such as news, movies or recorded in lab environment [8], [9].", "startOffset": 199, "endOffset": 202}, {"referenceID": 8, "context": "Many previous works focus on recognition in very specific domains such as action recognition [7], and the videos usually come from limited sources such as news, movies or recorded in lab environment [8], [9].", "startOffset": 204, "endOffset": 207}, {"referenceID": 0, "context": "specific pooling method [1], [3], [10].", "startOffset": 24, "endOffset": 27}, {"referenceID": 2, "context": "specific pooling method [1], [3], [10].", "startOffset": 29, "endOffset": 32}, {"referenceID": 9, "context": "specific pooling method [1], [3], [10].", "startOffset": 34, "endOffset": 38}, {"referenceID": 10, "context": "In addition to imagebased features, effort has been made to develop video specific features that capture information encoded in the temporal dimension [11], [12].", "startOffset": 151, "endOffset": 155}, {"referenceID": 11, "context": "In addition to imagebased features, effort has been made to develop video specific features that capture information encoded in the temporal dimension [11], [12].", "startOffset": 157, "endOffset": 161}, {"referenceID": 0, "context": "In fact, some empirical results show that image-based features may perform as well as or even more robust than spatio-temporal features, especially when detecting complex events or high level semantic concepts in the video [1], [10], [13], [14].", "startOffset": 223, "endOffset": 226}, {"referenceID": 9, "context": "In fact, some empirical results show that image-based features may perform as well as or even more robust than spatio-temporal features, especially when detecting complex events or high level semantic concepts in the video [1], [10], [13], [14].", "startOffset": 228, "endOffset": 232}, {"referenceID": 12, "context": "In fact, some empirical results show that image-based features may perform as well as or even more robust than spatio-temporal features, especially when detecting complex events or high level semantic concepts in the video [1], [10], [13], [14].", "startOffset": 234, "endOffset": 238}, {"referenceID": 13, "context": "In fact, some empirical results show that image-based features may perform as well as or even more robust than spatio-temporal features, especially when detecting complex events or high level semantic concepts in the video [1], [10], [13], [14].", "startOffset": 240, "endOffset": 244}, {"referenceID": 14, "context": "Deep Learning as a learning paradigm has been shown effective in various domains including natural language processing [15], speech recognition [16], etc.", "startOffset": 119, "endOffset": 123}, {"referenceID": 15, "context": "Deep Learning as a learning paradigm has been shown effective in various domains including natural language processing [15], speech recognition [16], etc.", "startOffset": 144, "endOffset": 148}, {"referenceID": 16, "context": "In computer vision, the great success of DCNs on the ImageNet dataset [17], [18] has attracted extensive research interest, and many further efforts have made DCN the state-of-the-art algorithm for various visual recognition tasks in static images.", "startOffset": 70, "endOffset": 74}, {"referenceID": 17, "context": "In computer vision, the great success of DCNs on the ImageNet dataset [17], [18] has attracted extensive research interest, and many further efforts have made DCN the state-of-the-art algorithm for various visual recognition tasks in static images.", "startOffset": 76, "endOffset": 80}, {"referenceID": 12, "context": "Although efforts have been made to collect million scale video recognition benchmarks [13], the label of the dataset is still in video level.", "startOffset": 86, "endOffset": 90}, {"referenceID": 0, "context": "image feature in previous research [1], we apply DCN on frame basis and aggregate frame-wise result using late fusion.", "startOffset": 35, "endOffset": 38}, {"referenceID": 2, "context": "While some recent works exploit various aggregation methods such as recurrent neural network (RNN) [3], [5] over DCN, their models are still based on frame-wise DCN and can benefit from better DCN models obtained by our transfer learning approach.", "startOffset": 99, "endOffset": 102}, {"referenceID": 4, "context": "While some recent works exploit various aggregation methods such as recurrent neural network (RNN) [3], [5] over DCN, their models are still based on frame-wise DCN and can benefit from better DCN models obtained by our transfer learning approach.", "startOffset": 104, "endOffset": 107}, {"referenceID": 18, "context": "[19] proposed a greedy layerwise pre-training to overcome the problem.", "startOffset": 0, "endOffset": 4}, {"referenceID": 19, "context": "Pre-training is believed to learn a better initialization that captures important patterns in the data, which facilitates the following supervised learning and leads to better generalizability [20].", "startOffset": 193, "endOffset": 197}, {"referenceID": 20, "context": "The unsupervisedly learned networks can be used for transfer learning, as shown in [21], [22].", "startOffset": 83, "endOffset": 87}, {"referenceID": 21, "context": "The unsupervisedly learned networks can be used for transfer learning, as shown in [21], [22].", "startOffset": 89, "endOffset": 93}, {"referenceID": 22, "context": "In computer vision, the most popular Deep Learning architecture is DCN [23].", "startOffset": 71, "endOffset": 75}, {"referenceID": 22, "context": "To avoid overfitting, convolution was introduced as a regularization on W based on the prior knowledge on the human visual system and the image signal [23], [24].", "startOffset": 151, "endOffset": 155}, {"referenceID": 23, "context": "To avoid overfitting, convolution was introduced as a regularization on W based on the prior knowledge on the human visual system and the image signal [23], [24].", "startOffset": 157, "endOffset": 161}, {"referenceID": 16, "context": "The most impressive breakthrough of DCN on visual recognition comes from its superior performance on the ImageNet dataset, where [17] and [18]", "startOffset": 129, "endOffset": 133}, {"referenceID": 17, "context": "The most impressive breakthrough of DCN on visual recognition comes from its superior performance on the ImageNet dataset, where [17] and [18]", "startOffset": 138, "endOffset": 142}, {"referenceID": 24, "context": "It is known that meta-parameters have a great impact on the network performance [25]\u2013[27].", "startOffset": 80, "endOffset": 84}, {"referenceID": 26, "context": "It is known that meta-parameters have a great impact on the network performance [25]\u2013[27].", "startOffset": 85, "endOffset": 89}, {"referenceID": 16, "context": "There exist several popular network architectures in the research community [17], [26], [28], and many previous works use", "startOffset": 76, "endOffset": 80}, {"referenceID": 25, "context": "There exist several popular network architectures in the research community [17], [26], [28], and many previous works use", "startOffset": 82, "endOffset": 86}, {"referenceID": 27, "context": "There exist several popular network architectures in the research community [17], [26], [28], and many previous works use", "startOffset": 88, "endOffset": 92}, {"referenceID": 28, "context": "these configuration without further optimization [29], [30], Although being successful in many cases, most of the architectures are proposed without explanation or justification of the choice.", "startOffset": 49, "endOffset": 53}, {"referenceID": 29, "context": "these configuration without further optimization [29], [30], Although being successful in many cases, most of the architectures are proposed without explanation or justification of the choice.", "startOffset": 55, "endOffset": 59}, {"referenceID": 27, "context": "[28] provides high level arguments for their motivation for increasing network depth and connection design, but they do not provide experiment evidences for the particular choice of architecture.", "startOffset": 0, "endOffset": 4}, {"referenceID": 24, "context": "[25], [26] provide systematic experiment results to justify their choice of network", "startOffset": 0, "endOffset": 4}, {"referenceID": 25, "context": "[25], [26] provide systematic experiment results to justify their choice of network", "startOffset": 6, "endOffset": 10}, {"referenceID": 26, "context": "[27] optimizes the step size and receptive field of the convolution kernel in first layer, based on the model proposed in [17].", "startOffset": 0, "endOffset": 4}, {"referenceID": 16, "context": "[27] optimizes the step size and receptive field of the convolution kernel in first layer, based on the model proposed in [17].", "startOffset": 122, "endOffset": 126}, {"referenceID": 30, "context": "[31] evaluates various configurations of DCN on image recognition including network architecture, but they only test three different architectures which provide limited information on the effect of meta-", "startOffset": 0, "endOffset": 4}, {"referenceID": 31, "context": "This extension has been shown successful on various action recognition benchmarks [32]\u2013[34], but it does not perform well on recognizing more complex events [13].", "startOffset": 82, "endOffset": 86}, {"referenceID": 33, "context": "This extension has been shown successful on various action recognition benchmarks [32]\u2013[34], but it does not perform well on recognizing more complex events [13].", "startOffset": 87, "endOffset": 91}, {"referenceID": 12, "context": "This extension has been shown successful on various action recognition benchmarks [32]\u2013[34], but it does not perform well on recognizing more complex events [13].", "startOffset": 157, "endOffset": 161}, {"referenceID": 12, "context": "[13] proposes a more general framework for fusing multiple frames, and they evaluate different fusion strategies on million scale video dataset for recognizing sports event.", "startOffset": 0, "endOffset": 4}, {"referenceID": 2, "context": "[3], [14] exploits different pooling methods to combine frame features extracted by static image DCN.", "startOffset": 0, "endOffset": 3}, {"referenceID": 13, "context": "[3], [14] exploits different pooling methods to combine frame features extracted by static image DCN.", "startOffset": 5, "endOffset": 9}, {"referenceID": 3, "context": "[4] combines DCN features with other hand crafted features using another neural network, where the video DCN representation is the average of frame-wise features extracted by static image DCN.", "startOffset": 0, "endOffset": 3}, {"referenceID": 34, "context": "[35] proposes a late fusion approach to combine local motion and appearance information.", "startOffset": 0, "endOffset": 4}, {"referenceID": 4, "context": "[5], [36] use Long Short Term Memory network on top of the frame-wise DCN feature to model the long-term dependency of high level semantic concepts.", "startOffset": 0, "endOffset": 3}, {"referenceID": 35, "context": "[5], [36] use Long Short Term Memory network on top of the frame-wise DCN feature to model the long-term dependency of high level semantic concepts.", "startOffset": 5, "endOffset": 9}, {"referenceID": 19, "context": "The goal is similar to the pre-training process in Deep Belief Network (DBN) and Stacked Auto-Encoder (SAE) in the sense that it improves the generalizability by learning a better intermediate representation [20].", "startOffset": 208, "endOffset": 212}, {"referenceID": 17, "context": "Because the convolution kernels in DCN learn important low level visual patterns in natural images [18], these convolution kernels serve", "startOffset": 99, "endOffset": 103}, {"referenceID": 17, "context": "This is especially important for the higher layers in DCN, such as the fully connected layer, because these layers capture more complex patterns [18] that may not generalize well to other domains.", "startOffset": 145, "endOffset": 149}, {"referenceID": 36, "context": "that good initialization will lead to better performance [37].", "startOffset": 57, "endOffset": 61}, {"referenceID": 12, "context": "While previous researches focus on unsupervised pretraining for better representation learning, several parallel works have utilize the supervised pre-training approaches to address the same lack-of-training-data problem [13], [29], [30], [38].", "startOffset": 221, "endOffset": 225}, {"referenceID": 28, "context": "While previous researches focus on unsupervised pretraining for better representation learning, several parallel works have utilize the supervised pre-training approaches to address the same lack-of-training-data problem [13], [29], [30], [38].", "startOffset": 227, "endOffset": 231}, {"referenceID": 29, "context": "While previous researches focus on unsupervised pretraining for better representation learning, several parallel works have utilize the supervised pre-training approaches to address the same lack-of-training-data problem [13], [29], [30], [38].", "startOffset": 233, "endOffset": 237}, {"referenceID": 37, "context": "While previous researches focus on unsupervised pretraining for better representation learning, several parallel works have utilize the supervised pre-training approaches to address the same lack-of-training-data problem [13], [29], [30], [38].", "startOffset": 239, "endOffset": 243}, {"referenceID": 12, "context": "Also, some of our discoveries and conclusions are consistent to those in [13], [29] as described below.", "startOffset": 73, "endOffset": 77}, {"referenceID": 28, "context": "Also, some of our discoveries and conclusions are consistent to those in [13], [29] as described below.", "startOffset": 79, "endOffset": 83}, {"referenceID": 38, "context": "ILSVRC2012 [39] is an 1k classes subset of ImageNet used in ImageNet Large Scale Visual Recognition Challenge.", "startOffset": 11, "endOffset": 15}, {"referenceID": 39, "context": "Therefore, it contains only weak supervision, and the label is known to be noisy because of user tagging behavior [40].", "startOffset": 114, "endOffset": 118}, {"referenceID": 0, "context": "Columbia Consumer Video (CCV) Database [1] is a video dataset that targets on unconstrained consumer video content analysis.", "startOffset": 39, "endOffset": 42}, {"referenceID": 1, "context": "We use all 15 event classes for training and use the videos with event label following [2].", "startOffset": 87, "endOffset": 90}, {"referenceID": 22, "context": "For networks with two convolution layers, we adopt an architecture similar to that of LeNet5 [23].", "startOffset": 93, "endOffset": 97}, {"referenceID": 16, "context": "The 4-convolution-layer network is similar to the architecture used in [17] with some simplification.", "startOffset": 71, "endOffset": 75}, {"referenceID": 16, "context": "Note that we do not perform response normalization and grouping on the convolution kernels as in [17], and our max pooling is performed over 2x2 regions without overlapping.", "startOffset": 97, "endOffset": 101}, {"referenceID": 16, "context": "The 5-convolution-layer network is based on the architecture proposed in [17] with the following modification.", "startOffset": 73, "endOffset": 77}, {"referenceID": 40, "context": "The Caffe package [41] is used for learning the networks.", "startOffset": 18, "endOffset": 22}, {"referenceID": 16, "context": "The learning process is similar to that in [17], where we", "startOffset": 43, "endOffset": 47}, {"referenceID": 16, "context": "The same dropout ratio, initial learning rate and momentum as in [17] are used.", "startOffset": 65, "endOffset": 69}, {"referenceID": 41, "context": "While it is claimed that these thumbnail images are still human recognizable [42], it is obvious that images with higher resolution contain more detailed information that may be helpful for visual recognition.", "startOffset": 77, "endOffset": 81}, {"referenceID": 12, "context": "These results are identical with that in [13], which shows that update only the fully connected layers lead to better recognition accuracy, although we use totally different data and different network structures.", "startOffset": 41, "endOffset": 45}, {"referenceID": 28, "context": "It is also consistent with [29], which shows", "startOffset": 27, "endOffset": 31}], "year": 2015, "abstractText": "Recognizing high level semantic concepts and complex events in consumer videos has become an important research topic with great application needs in the past few years. In this work, we apply Deep Convolution Network (DCN), the state-ofthe-art static image recognition algorithm, to recognize semantic concepts in unconstrained consumer videos. Our preliminary studies show that the annotation of video corpora is not sufficient to learn robust DCN models. The networks trained directly on the video dataset suffer from significant overfitting. The same lackof-training-sample problem limits the usage of deep models on a wide range of computer vision problems where obtaining training data are difficult. To overcome the problem, we perform transfer learning from weakly labeled images corpus to videos. The image corpus helps to learn important visual patterns for natural images, while these patterns are ignored by the models trained only on the video corpus. Therefore, the resultant networks have better generalizability and better recognition rate. By transfer learning from image to video, we can learn a video recognizer with only 4k videos. Because the image corpus is weakly labeled, the entire learning process requires only 4k annotated instances, which is far less than the million scale image and video datasets used in previous works. The same approach can be applied to other visual recognition tasks where only scarce training data is available. Our extensive experiments on network configurations also lead to better understanding about the effect of various metaparameters in DCN, which enable better network architecture design for future researches and applications.", "creator": "LaTeX with hyperref package"}}}