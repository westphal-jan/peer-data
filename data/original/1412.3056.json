{"id": "1412.3056", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "8-Dec-2014", "title": "Phishing Detection in IMs using Domain Ontology and CBA - An innovative Rule Generation Approach", "abstract": "User ignorance towards the use of communication services like Instant Messengers, emails, websites, social networks etc. is becoming the biggest advantage for phishers. It is required to create technical awareness in users by educating them to create a phishing detection application which would generate phishing alerts for the user so that phishing messages are not ignored. The lack of basic security features to detect and prevent phishing has had a profound effect on the IM clients, as they lose their faith in e-banking and e-commerce transactions, which will have a disastrous impact on the corporate and banking sectors and businesses which rely heavily on the internet. Very little research contributions were available in for phishing detection in Instant messengers. A context based, dynamic and intelligent phishing detection methodology in IMs is proposed, to analyze and detect phishing in Instant Messages with relevance to domain ontology (OBIE) and utilizes the Classification based on Association (CBA) for generating phishing rules and alerting the victims. A PDS Monitoring system algorithm is used to identify the phishing activity during exchange of messages in IMs, with high ratio of precision and recall. The results have shown improvement by the increased percentage of precision and recall when compared to the existing methods.", "histories": [["v1", "Mon, 8 Dec 2014 11:02:24 GMT  (1385kb)", "http://arxiv.org/abs/1412.3056v1", "20 pages, 4 figures"]], "COMMENTS": "20 pages, 4 figures", "reviews": [], "SUBJECTS": "cs.CR cs.AI cs.CY cs.IR", "authors": ["mohammad s qaseem", "a govardhan"], "accepted": false, "id": "1412.3056"}, "pdf": {"name": "1412.3056.pdf", "metadata": {"source": "CRF", "title": "CBA \u2013 AN INNOVATIVE RULE GENERATION APPROACH", "authors": ["PHISHING DETECTION", "Mohammad S. Qaseem", "A. Govardhan"], "emails": [], "sections": [{"heading": null, "text": "DOI : 10.5121/ijist.2014.4601 1\nKEYWORDS Instant Messengers, Phishing detection, Ontology based Information Extraction (OBIE), Classification based Association (CBA),triplet algorithm."}, {"heading": "1. INTRODUCTION", "text": "Instant messengers (IMs) have become an integral part of today\u2019s state of the art communication system with the latest gizmos, smartphones, tablets, laptops etc., becoming affordable and gaining popularity globally. Instant messaging initially started off as a chatting service between buddies, then gradually evolved into the most sought after and popular mode of communication. Ever since the Instant Messengers (IMs) were introduced viz., ICQ (I seek you), Internet Relay Chat (IRC), Microsoft\u2019s MSN Messenger, AOL Instant Messenger, Yahoo Messenger, Google Talk, etc. the user response they got was overwhelming [1]. Now IMs like Skype, WhatsApp and the likes of them have made their mark in the communication world with their popularity. With the enormous increase in scale of the IM\u2019s usage globally, it is highly desirous to make these services secure and reliable. It has been found that many security challenges do exist viz., most of the freeware IM programs do not have encryption capabilities, password management is not strong and have vulnerability to account spoofing and denial- of-service (DoS) attacks [1]. There\nwas some reprieve when spam detection and filtering were introduced to the IMs [2]. But the most challenging issue being encountered is the detection and prevention of phishing in instant messengers as the existing fire walls available are not at all capable of detecting such attacks. With the large number of additional features available in the Instant Messengers, the potential areas for attack have also increased, as there are no concrete methodologies to counter Phishing attacks. This could lead to a profound effect on a phishing victim as he or she loses the trust in internet banking and e-commerce transactions by falling prey into disclosing confidential account details to the phisher\u2019s devious tricks. The consequences of such phishing attacks will have disastrous impact on the corporate and banking sectors and businesses which rely heavily on the internet, as the e-clients would lose their trust in the services owing to their vulnerabilities.\nThe term phishing is derived from fishing wherein fishers use a bait to do fishing. Here the attacker i.e. the phisher uses some socially engineered messages to perform phishing i.e. elicits personal information deceitfully from the unsuspecting victims through emails, instant messengers, websites, social networking medium etc. [3]. There were about 1,23,486 phishing attacks reported in the second half of 2012 and around 72,758 attacks reported worldwide in the first half of 2013 as analyzed by the Global Phishing survey 1H2013 [53] of the Anti-Phishing Work Group (APWG) [4]. Consider for instance a phisher tries to trick the unsuspecting victims to login to the fake website page and elicits confidential information, usually in online banking and e-commerce sectors though emails. In instant messengers, the phisher pretends to be a trust worthy chat mate and asks personal questions in order to figure out security details of bank accounts like passwords, codes, etc. from the unsuspecting victim. Even though active research has been done on phishing detection in websites, emails and social networking sites, research contributions found in Instant messengers are limited. There are no robust techniques developed to tackle the problem of phishing dynamically, although there are some techniques, where phishing detection is static in nature.\nData mining approaches were used to find the frequent phishing patterns and extract phishing rules on a larger scale in IMs but ultimately, the detected phishing words had larger percentage of false positives and false negatives. This was obvious as the entire detection process was content based and it failed to detect the threat activity pertaining to the phishing domain.\nEven though in some IM systems, Association rule mining was used along with domain\nontologies, which were applied right from information extraction and mapping them with predefined phishing rules to identify the phishing domains, still it could not detect the phishing words intelligently, as the main intention or context behind its usage could not be identified. But its performance was slightly better than those not using domain ontologies.\nAvoiding ambiguity over the relevance of the identified phishing words is the main motive behind this work in order to enhance the instant messaging system performance. This could be done by identifying the context behind chatting messages in order to reduce the percentage of both false positives and false negatives.\nThe extracted domain and its context if mined together can generate more interesting phishing rules by using Classification Based on Association (CBA) rules, in order to generate instant phishing alerts dynamically for the victim, with the best possible performance i.e. maximum true positives percentage.\nThe paper is organized into 6 sections. Section 2 discusses the related work of prevalent phishing problems in Instant Messengers, the methodologies and approaches used to address the problem statement. Section 3 elaborates the architecture and design of the PDS methodology and discusses\nthe architecture of OBIE for domain and context extraction using the Triplet Algorithms. Section 4 characterizes the phishing features so as to formulate its terminology apart from framing the pre-defined phishing rules based on key attributes. The application of Classification Based Association rules on the training datasets and test dataset to generate phishing rules is also discussed. Section 5 outlines the experimental setup to be established in the form of chat session transactions between chatters of IMs and addresses the implementation and testing of the Phishing detection system in IMs and evaluates the performance in terms of precision and recall. Section 6 summarizes and highlights the contributions of this research work in precise. It also provides directions for future enhancements in this research area."}, {"heading": "2. RELATED WORK", "text": "Phishing detection in the past has not been dynamic i.e. pre-defined blacklisted phishing words were used for matching and could not detect the zero-hour phishing attacks, which is critical from the detection accuracy point of view. Also, when there is increase in the false positives the system would be more harmful rather than being useful, as the users will start ignoring the system warnings due to wrongly reported phishing alerts [3].\nAll the previously detected phishing words, URLs and IP addresses are listed and updated from time to time and stored as blacklists. These blacklists cannot provide protection from the zerohour phishing attacks i.e. the phishing words or URLs which are not available in the blacklists previously. It took about 12 hours to detect and blacklist the new phishing words or URLs, which is a considerable delay owing to the fact that about two-thirds of the phishing attacks end within two hours [21]. Thus protection from zero-hour phishing attacks was not available. Google Safe Browsing API, DNS-based Blacklist (DNSBL), PhishNet are the examples of services using the blacklists. To overcome this problem, phishing heuristics i.e. experience based methods of problem solving were used like SpoofGuard, Phishguard, Phishwish, and Cantina [3].\nData mining techniques like association rule mining (ARM), classification and clustering have also been used to detect phishing through algorithms like Apriori, C4.5, Support Vector Machines (SVM), k-Nearest Neighbour (k-NN) and Density-Based Spatial Clustering of Applications with Noise (DBSCAN). Apriori algorithm is used for finding phishing patterns dynamically in Instant messengers from not only text messages but also from voice chatting, by integrating the IM system with speech recognition system [28]. This is purely a content based phishing detection system with increased FPs. Phishing detection in emails using C4.5 decision tree induction was done in [30] based on the highest information entropy, but it could not determine the phishing threat type.\nAdvanced classification method like Fuzzy Set Approach has been used efficiently by Maher et al. [32] to detect phishing websites in the E-banking sector. The intelligent fuzzy-based classification system also uses associative classification algorithms to detect phishing websites in the e-banking, and extracts the phishing features and classifies them into phishing rules with a layered structure [32].\nAssociative Classification (AC) uses CBA, CMAR, and CPAR to generate classifier rules, but the according to [16], the Classification based on associations (CBA) was more accurate than the C4.5 on large number of datasets. The iterative approach of Apriori is used by the CBA to create a classifier [16]. This AC approach has been used in [32] along with fuzzy based scheme for detection of phishing websites but nowhere for phishing detection in instant messengers.\nIn the above discussions phishing detection has been surveyed to a large extent in emails, URLs\nand websites but it has been observed that very less efforts have been made in the phishing detection in instant messengers. The purpose of studying the types of phishing approaches in emails, URLs and websites is to understand the extent of the research progress made in the three communication methods and how much progress remains to be achieved in instant messengers. The main observation here is that even though the zero-hour phishing detection was dynamic, but still there was no considerable decline in the false positives and the false negatives, as all these phishing detection approaches including phishing heuristics and data mining algorithms were content based methodologies.\nNatural Language Processing (NLP) [47] techniques play a crucial role in overcoming the shortcomings mentioned above, by giving the advantage of utilizing the semantics of the messages exchanged between chatters in instant messaging. The Semantic Web uses the ontology and could incorporate the NLP to extract triplets i.e. subject, predicate and the object of the message under process, as a part of Ontology Based Information Extraction (OBIE). During the research study it has been observed that NLP has not been utilized to its full potential and at times it has only been used as an alternative to information extraction.\nAnother frame work which detects suspicious messages in Instant messengers and social networking sites using Ontology and Association Rule Mining (ARM) is used to detect the domain of the message keywords [33]. Pre-defined phishing rules have been considered which are to be mapped with the ontology generator through NLP, to obtain the domain of the suspected word. The user is not alerted instead the e-crime department is notified if any suspicious activity is detected [33]. The overall detection is content based and thus in spite of using the NLP, the context part is not explored, the use of ontology is restricted to information extraction and domain identification only. The overall performance does not reduce the false positives and false negatives."}, {"heading": "3. DESIGN METHODOLOGY", "text": "Phishing detection in the past has not been dynamic i.e. pre-defined blacklisted phishing words"}, {"heading": "3.1. System Architecture", "text": "The architecture of the PDS Monitoring system consists of the following sub-systems:\n\u2022 Instant Messaging system with clients and web browser. \u2022 PDS monitoring system applying OBIE and CBA. \u2022 Database (Message DB, Filter word DB, Ontology DB, Phishing rules DB and Phish\nword DB)\nThe Figure 1 shows architecture of the PDS monitoring system in Instant Messaging System (IMS), with the interrelationship among various subsystems in order to detect the phishing words based on context of the instant message and reports it to the victim client.\nThe architectural sub-systems of the PDS Monitoring system as discussed in the following sub sections:"}, {"heading": "3.1.1 Instant Messaging System (IMS) with clients and web browser.", "text": "The IMS contains the following components:\n\u2022 Various client machines with browsers. \u2022 Web server containing the Instant Messaging Resources. \u2022 IM Multiplexer for multiplexing the communications. \u2022 Directory Server which helps in authenticating a client and contains the identities of the\nclients.\n\u2022 M essaging server where the offline line messages are forwarded whenever the chatter starts the next session using SMTP."}, {"heading": "3.1.2 PDS monitoring system applying OBIE and CBA.", "text": "The PDS monitoring system performs its task in two phases:\n\u2022 Data pre-processing to extract domain and context using ontology (OBIE). \u2022 Applying CBA and generate useful association rules\nIn the first phase the PDS monitoring system captures and stores the instant messages in the Message DB (MDB) and then performs pre-processing on it through OBIE to identify the Domain and Context of the probable phishing word.\nData pre-processing to extract domain and context using ontology (OBIE):\nThe pre-processing includes removal of stop words and stemming.\nStop Words Removal: From each instant message, stop words i.e. words that are not significant are removed, i.e. prepositions, conjunctions, articles, adjectives, adverbs, etc. [36]. Stop word examples are: from, into, in, for, while, a, an, the, that, these, those, under, over, about, although, how, what, when, who, whom, etc. Indexing cannot be used on stop words and the removal of these words improves the efficiency of retrieval.\nStemming is performed to reduce the derived or inflected words to their stem i.e. to its basic or root form. It is also referred to as conflation. Programs which perform stemming are called as stemmers or stemming algorithms [35]. Also stemming derives the stem morphologically from a completely suffixed word [34]. A stemmer identify the string \"fishing\", \"fisher\", \"fishery\", \u201cfished\u201d etc. based on the root \"fish\". The extracted keywords after pre-processing i.e. removing stop words and stemming are stored in the Filter Word DB (FWDB).\nDomain identification: After stemming is performed all the keywords obtained are in machine understandable form, which are to be mapped with the ontology to determine their respective domains through the OBIE. For the domain identification the first step is to use the Triplet Extraction Algorithm to extract the subject, predicate and object from the keywords. The NLP approach used here identifies a subject and maps it to a semantic class. It uses the predicate and object as name and value of the attribute respectively [12].\nThe next step is to identify the theme concept for which the concepts are to be extracted first. Concepts are the extracted tokens which are tagged as nouns and form the Concept set. The subjects identified above are populated into the subjectList. The concept which occurs the most number of times forms the MaxOccurConcepts. Identifying the Theme concept is done by performing the intersection of the three sets obtained [12].\nMathematically, Concept = [nouns] subjectList = [subjects] MaxOccurConcepts = [concepts] ThemeConcept = concept \u2229 subjectList \u2229 MaxOccurConcepts [12] Consider the following text passage: \u201cHotel Taj Banjara at Banjara Hills offersv excellent facilities and accommodation. Comprising of 4 blocks and 68 deluxe rooms, Taj Banjara offers a pleasant stay.\u201d Concepts = {Hotel, Taj Banjara, Banjara Hills, facilities, accommodation, blocks, rooms, stay}\nMathematically, Concept = { nouns }\nsubjectList = {Taj Banjara} subjectList = {subjects} MaxOccurConcepts = {Taj Banjara (2)} ThemeConcept = {Taj Banjara} Themeconcept = Concept \u2229 subjectList \u2229 MaxOccurConcepts Taj Banjara is identified as the theme concept\nNow the Domain class can be identified by the mapping to the string Theme concept by using one of the two applicable rules: Explicit mention rule and the Implicit rule. Explicit mention rule suggests that the string which are the class names themselves. As far as the Implicit rule is concerned, it is used when there is no string match suggesting that the domain ontology lexicon. Domain ontologies are formed by experienced experts of the relevant domain. Semantic lexicons are created related to the respective domains, which is then used to identify the domain which the\nmessage content refers [12].\nIn the example the string Taj Banjara refers explicitly to hotel, and thus Taj Banjara belongs to hotel instance and the domain identified is hotel.\nContext identification: This is an enhancement to the concepts discussed from [12] where in the task was limited to domain identification. The main contribution in this work is to identify the context or intention of the instant messages exchanged between chatters. The phishing detection may be misleading if phishing alerts are generated for harmless words, which are unintentional. This may leave a bad impression on the chatter to ignore such alerts again and again. Consider for example a message \u201cJoe is so fond of chocolates. He would kill anybody for a bar of chocolate.\u201d Any phishing detection system would raise an alert for the word \u201ckill\u201d, when actually its use is harmless. Extracting the true context is the main objective of this work apart from getting the least values for the false positives and false negatives.\nIn continuation to the previous discussion a new predicateList is introduced.\nConcepts = {Joe, chocolate, bar} Mathematically, Concept = {nouns} subjectList = {chocolate} subjectList = {subjects} predicateList = {fond, kill} MaxOccurConcepts = {chocolate (2)} ThemeConcept = {chocolate} Themeconcept = Concept \u2229 subjectList \u2229 MaxOccurConcepts \u201cchocolate\u201d is identified as the theme concept\nIt is found that domain for the theme concept \u201cchocolate\u201d does not exist in the domain ontology lexicon and comes under the Implicit rule. Thus a new Domain ontology for \u201ceatables\u201d is formed by experienced experts of the relevant domain using the classes, attributes and relation present in the ontology. New semantic lexicons (only a few a listed) have been created related to the \u201ceatables\u201d domain.\nEatables domain lexicon = {eat, dark chocolate, bar, nutty, lick, munch, kill, fond}\nNote that, the words \u201ckill\u201d and \u201cfond\u201d are also included in the semantic lexicon of the domain \u201ceatables\u201d, as they were a part of the predicateList. The new domain is mapped with the existing domains in the Pre-defined phishing rules DB (PRDB).\nIf a match occurs Context = {harmful} or else Context = {harmless}.\nIn the above example context = \u201charmless\u201d in spite of the predicate or the verb being \u201ckill\u201d. The implementation of the context is possible with very simple sentences containing single values for the triplets.\nThe filtered keyword dataset in the FWDB, along with attribute values of Domain ontology and the Context forms the Test dataset for the generation of classification association rules (CAR) using CBA.\nApplying CBA and generate useful association rules:\nThe Classifier Based Association (CBA) method explores all the associations between attribute values and their classes in the training dataset in order to build large classifiers. The training data set used here is the pre-defined phishing rules table shown in Table 1.\nThe pre-defined phishing rules are framed by experts of the relevant domain having tremendous experience. The training dataset (snapshot) for the Classification Based Association rules is shown including the threshold values, Domain Ontology and its context. With the testing dataset rules are generated to predict the Phishing words and subsequently raising the phishing alert. If a new phishing word is identified based on threshold values based on frequently occurring words during chatting or a new phishing domain is discovered, these phishing words are appended to the Phishing Word DB (PWDB)."}, {"heading": "3.1.3 Databases", "text": "The backend used in the PDS monitoring system is Oracle 11g. There are total five database tables:\nMessage DB Filter Word DB Ontology DB Phishing Rules DB Phishing Words DB"}, {"heading": "3.2 System Workflow", "text": "The system workflow of the PDS monitoring algorithm initiates the steps to capture the phishing\nwords from instant messages that are exchanged between the chatters through pre-defined phishing rules of Table 3.1 through Classification based on Association Rules (CBA) and Domain Ontology. The schematic illustration of the system workflow of the PDS monitoring algorithm is shown in Figure 2."}, {"heading": "3.4 PDS Monitoring algorithm", "text": "Input : Text messages of chatters Output : Phish word Alert to Victim Steps:\nStart\n1. Store Messages in MDB 2. Apply OBIE //Remove stop words, stemming, extract triplets 3. Get Domain ontology, Get Context 4. If found newDomain then step 5 else step 6 5. Append semantic lexicon (ODB) //through RDF 6. Store filtered words in FWDB // These words along with domain and\ncontext attributes will be the Test data set. Update threshold value\n7. Generate CAR rules // for the test data set 8. Apply CBA //on the training data set pre-defined\n(PRDB) and Test dataset to create classifier for generating phishing rules.\n9. Generate Phishing rules if phish word = \u201cYES\u201d then step 10, step 11\nELSE step 12\n10. Append phish word to (PWDB) 11. Raise ALERT //to Victim Client 12. Display message // original Message from (MDB). Stop.\nThe PDS monitoring algorithm elaborates the schematic work flow shown in the Figure 2 in a step by step manner.\nThis algorithm stores the instant messages in the MDB in step 1. Pre-processing is done on the messages through OBIE by removing stop words, performing stemming and extracting triplets (subject, predicate and object) in order to identify the Domain and Context in steps 2 and 3.\nIf a new domain is detected it is appended to the Ontology database (ODB) i.e. semantic lexicon, through RDF in step 5, else store the keywords in filter word DB (FWDB) in step 6.\nIn step 7, generation of Classification Association Rules (CAR) is done through test data formed from keywords in FWDB and the attributes (Domain, Context) obtained from step 3.\nApply Classification Based Association on the Training dataset i.e. the pre-defined phishing rule DB (PRDB) and Test dataset to create classifier for generating phishing rules in step 8.\nIn steps 9 to 12 the generation of Phishing rules is done and if phish word is found then the phish word is appended to the phishing word DB (PWDB) and an alert is raised on the victim\u2019s user interface, otherwise the message is displayed in its original form from the message database (MDB) on the Instant message interface."}, {"heading": "3.5 The OBIE Architecture", "text": "Information extraction from the instant messages is required to be converted to machine understandable form in order to determine the domain and context of the instant message using Ontology Based Information Extraction (OBIE) component of the PDS monitoring system. This OBIE module initially reads the instant message keywords stored in the Filter Word DB (FWDB). The concept of Semantic Lexicon is used to identify the semantic domain and context for the keywords being processed through the domain inference module. The triplet algorithms are used here to assist in the identification of the Theme concept and the domain in the inference module [12].\nThe instance information is extracted by the instance extractor module. An RDF node is created and the ontology is updated using the Jena Apache APIs. Existing ontology editors like Prot\u00e9g\u00e9 can be used for editing the ontology. The Lexicon extractor module co n t a i n s rules i n o rd er to learn new lexicon symbols from the filtered keywords, and append them into the semantic lexicon using a set of heuristics to identify the relationship between lexical items and the existing semantic lexicon [12].The architecture for OBIE system is given below:\nThe figure 3.4 shows the workflow for the extraction of ontology instances."}, {"heading": "3.6 Triplet algorithms", "text": "The Triplet Extraction Algorithms are used to extract the subject, predicate and object from the keywords for domain identification. The NLP approach used here identifies a subject and maps it to a semantic class. It uses the predicate and object as name and value of the attribute respectively [12].\nThe implementation of the triplet extraction algorithm mentioned in [37] has been done using the StanfordCoreNLP [38] Java library. The algorithms are briefly summarized for extraction of the subject, predicate and object.\nAlgorithm 1\nExtractSubject (string) 1. Perform a Breadth First Search (BFS) of the parse tree obtained by using\nStanfordCoreNLP library [38]. 2. The NP subtree contains the subject, and it is the first Noun in the tree when\ntraversed using BFS.\nFor complex noun compounds, the parse tree is used to extract all embedded Noun phrases (NP) [12] [40].\nAlgorithm 2\nExtractPredicate (string)\n1. Perform a Depth First Search (DFS) of the VP subtree. The verb that is deepest in the\ntree is the predicate.\nThe parse tree is used to extract all embedded Verb phrases (VP) [12] [39] [40].\nAlgorithm 3\nExtractObject (string)\n1. Perform a search of the PP, ADJP subtree, and extract the first noun in the tree which is the object.\n2. The parse tree is used to extract all embedded preposition phrases (PP), and adjective phrases (ADJP) [12] [40]\nFor the previously used sentence \u201cNovotel is located in Hyderabad\u201d, after applying the Triplet algorithm, the identified subject is Novotel, predicate is located, and object is Hyderabad. The theme concept identified here is Novotel and domain class extracted will be \u201chotel\u201d.\nIf the above sentence is expanded into a passage \u201cNovotel, located at Banjara hills Road no. 1, offers memorable accommodation for the guests. It has 5 blocks and 67 luxury rooms. Novotel offers a decent ambience along with culinary specialties of the Deccan.\u201d"}, {"heading": "4. EXPERIMENTING THE PHISHING RULE GENERATION", "text": ""}, {"heading": "4.1 Rule generation with CAR", "text": "Each chat session in Table 2 has a transaction id and the instant chatting messages are stored in the Message DB (MDB). Message pre-processing is performed by first removing the stop words and them stemming is performed in order to form the keywords to be stored in the Filter Word"}, {"heading": "DB (FWDB).", "text": "These filtered words are processed by the Ontology Based Information Extraction (OBIE) in order to obtain the keyword, Domain, Context, and threshold value for generating the test data as shown in Table 4.\nThe Association Classification rules for the three input components i.e. Ontology Domain, Context and threshold value are based on their values:\nOntology Domain: Financial gain, Account creation tips, Fame and notoriety, Deceitful elicitation, Identity access, Life threatening, not defined, and URL related.\nContext : Harmful and Harmless Threshold value : values 1to 5 The values of the Phishing word class are : YES, NO, and SPC i.e. is a phishing word, not a phishing word, and Suspicious word. The Min_supp is 2% and min_conf is 60%\nThe CBA rules listed randomly as follows: Rule 1: If keyword = \u201caccount no\u201d and domain = \u201cfinancial gain\u201d and ontology_context =\u201charmful\u201d and threshold_value = \u201c1\u201c then Phishing_word = \u201cYES\u201d Rule 4: If keyword = \u201ccredit card\u201d and domain = \u201cfinancial gain\u201d and ontology_context =\u201charmful\u201d and threshold_value = \u201c1\u201c then Phishing_word = \u201cYES\u201d Rule 5: If keyword = \u201ckid name\u201d and domain = \u201cidentity_access\u201d and ontology_context = \u201charmful\u201d and threshold_value = \u201c5\u201c then Phishing_word = \u201cSPC\u201d Rule 9: If keyword = \u201cpassword\u201d and domain = \u201cfame_notoriety\u201d and ontology_context = \u201charmful\u201d and threshold_value = \u201c1\u201c then Phishing_word = \u201cYES\u201d Rule 11: If keyword = \u201cschool\u201d and domain = \u201cnot defined\u201d and ontology_context = \u201charmless\u201d and threshold_value = \u201c1\u201c then Phishing_word = \u201cNO\u201d Rule 12: If keyword = \u201cspecial character\u201d and domain = \u201cacc_creation_tips\u201d and ontology_context = \u201charmful\u201d and threshold_value = \u201c1\u201c then Phishing_word = \u201cYES\u201d Rule 13: If keyword = \u201cfavorite food\u201d and domain = \u00cfdentity access\u201d and ontology_context =\u201charmful\u201d and threshold_value = \u201c3\u201c then Phishing_word = \u201cYES\u201d Rule 15: If keyword = \u201cdebit card\u201d and domain = \u201cfinancial gain\u201d and ontology_context =\u201charmful\u201d and threshold_value = \u201c1\u201c then Phishing_word = \u201cYES\u201d\nThe above phishing rules generated by the CBA will be used for training the test dataset.\nA Phishing Word DB (PWDB) maintains the phishing words along with their respective domains, detected by applying the CBA through the PDS monitoring system. All new phishing words are appended to the PWDB table which comprises of 7 phishing domains. This table maps with the PRDB table for domain reference."}, {"heading": "4.2 Applying CBA for Phishing Rule generation", "text": "The Test dataset along with the attributes and values i.e. Domain ontology, Context, and threshold values is shown in Table 4.\nIn the above Table 4, the keywords along with their identified domains, contexts and threshold values are considered as the test data for Classification Association Rules (CAR). The classifier based on Classification based on Association (CBA) maps the test data with the training data i.e. the pre-defined phishing rules, to obtain the phishing rules to identify the phishing words.\nThe phishing rules generated using CBA on the above test data are shown as follows."}, {"heading": "If keyword = \u201cfavorite food\u201d and domain = \u201cIdentity access\u201d and ontology_context =\u201charmful\u201d", "text": "and threshold_value = \u201c3\u201c then Phishing_word = \u201cYES\u201d If keyword = \u201cdebit card\u201d and domain = \u201cfinancial gain\u201d and ontology_context =\u201charmful\u201d and threshold_value = \u201c1\u201c then Phishing_word = \u201cYES\u201d If keyword = \u201clucky no\u201d and domain = \u201c\u00e4cc_creation_tips\u201d and ontology_context = \u201charmful\u201d and threshold_value = \u201c1\u201c then Phishing_word = \u201cYES\u201d If keyword = \u201cschool\u201d and domain = \u201cnot defined\u201d and ontology_context = \u201charmless\u201d and threshold_value = \u201c1\u201c then Phishing_word = \u201cNO\u201d If keyword = \u201ckid name\u201d and domain = \u201cidentity_access\u201d and ontology_context = \u201charmful\u201d and threshold_value = \u201c1\u201c then Phishing_word = \u201cNO\u201d If keyword = \u201cspecial character\u201d and domain = \u201cacc_creation_tips\u201d and ontology_context = \u201charmful\u201d and threshold_value = \u201c1\u201c then Phishing_word = \u201cYES\u201d If keyword = \u201cdob\u201d and domain = \u201cacc_creation_tips\u201d and ontology_context = \u201charmful\u201d and threshold_value = \u201c1\u201c then Phishing_word = \u201cYES\u201d If keyword = \u201cpassword\u201d and domain = \u201cfame_noteriety\u201d and ontology_context = \u201charmful\u201d and threshold_value = \u201c1\u201c then Phishing_word = \u201cYES\u201d If keyword = \u201ckill\u201d and domain = \u201cnot defined\u201d and ontology_context =\u201charmless\u201d and threshold_value = \u201c1\u201c then Phishing_word = \u201cNO\u201d If keyword = \u201cfavorite teacher\u201d and domain = \u201cidentity_access\u201d and ontology_context = \u201charmful\u201d and threshold_value = \u201c3\u201c then Phishing_word = \u201cSPC\u201d If keyword = \u201ccode\u201d and domain = \u201cfinancial gain\u201d and ontology_context = \u201charmful\u201d and threshold_value = \u201c1\u201c then Phishing_word = \u201cYES\u201d If keyword = \u201caccount\u201d and domain = \u201cfinancial gain\u201d and ontology_context = \u201charmful\u201d\nand threshold_value = \u201c1\u201c then Phishing_word = \u201cYES\u201d"}, {"heading": "4.3 Raising Phishing Alerts", "text": "The following tabulations in Table 5 indicate the phishing words predicted by the CBA classifier through various colour indicators.\nPhishing word: RED; Suspicious word: ORANGE; Normal word:BLACK\nFrom the above mentioned colour indicators Suspicious words are predicted whenever the threshold value for a normal words >= 3."}, {"heading": "5. RESULTS AND OBSERVATIONS", "text": "Sample Screenshot\nFigure 4 Screen shot Chat Session 1 with Phishing Alerts\nPerformance\nThe context oriented PDS Monitoring System has been tested on 110 transactions between the Chatters using domain ontology and generating improved rules through CBA to help detect Phishing words and generating ALERTS to the victim chatter.\nClassifier performance is usually measured by accuracy, the percentage of correct predictions over the total number of predictions made. For this Precision and Recall are used:\nprecision = true positives / (true positives + false positives) i.e. the number of correctly predicted phish words.\nrecall = true positives / (true positives + false negatives)\ni.e. the total number of possible predicted phish words.\nThe total number of true positives (correctly identified phishing words) obtained out of 110 transactions were found to be 97.\nThe number of false positives (phishing words wrongly detected) out of 110 transactions were found to be 6.\nLastly the number of false negatives (phishing words which could not be detected) out of 110 transactions were 4.\nThere were 3 suspicious words detected which actually were phishing words.\nPrecision = 97 / (97+6) = 94.17 % Recall = 97 / (97+4) = 96.03 %\nComparative study of the phishing detection systems in IMs: The comparative study shows that the CBA has a much better performance in terms of both precision and recall with respect to the existing systems mentioned above. Also the key feature being the context which provides the dynamism and intelligence element which provides an upper edge in the comparison."}, {"heading": "5. CONCLUSIONS", "text": "Instant Messaging Systems (IMS) generically cannot detect many deceptive phishing attacks; hence they are vulnerable for cyber frauds. To overcome this, a framework for detection of phishing attacks dynamically in IM from text messages using Classification Based Association rules and domain ontology is proposed. APDS monitors the user\u2019s psychology and predict the type of the detected phishing activity with an alert to the victim client."}, {"heading": "6.1 Future Work", "text": "English is not the only medium of communication in a sub continent like India, it might be of multi lingual nature, the concept of translating and applying phishing detection is a future challenge. Words from other languages might be written in English which cannot be identified by any ontology based tool and may be ignored which in turn may turn out to be a phishing attempt. Images, sounds and videos are the formats which need a lot of work other than text formats where the vulnerability towards phishing may always be present.\nThe following issues and challenges are therefore identified where lot of research activities should be concentrated.\n\u2022 Deceptive phishing messages are sent in any format other than textual (Images, Audio, Video), then they are not detected.\n\u2022 Rules lack multilingual support for deceptive phishing detection. \u2022 Issue with the interpretation of a message written in multiple languages."}], "references": [{"title": "\u201dDetecting and filtering instant messaging spam - a global and personalized approach", "author": ["D Zhijun Liu Weili Lin Na Li Lee"], "venue": "Secure", "citeRegEx": "2", "shortCiteRegEx": "2", "year": 2005}, {"title": "Phishing Detection: A Literature Survey", "author": ["Mahmoud Khonji", "Youssef Iraqi", "Andrew Jones"], "venue": "IEEE Communications Surveys & Tutorials,", "citeRegEx": "3", "shortCiteRegEx": "3", "year": 2013}, {"title": "Ontology Guided Information Extraction from Unstructured Text", "author": ["Raghu Anantharangachar", "Srinivasan Ramani", "S Rajagopalan"], "venue": "International Journal of Web & Semantic Technology (IJWesT) Vol.4,", "citeRegEx": "12", "shortCiteRegEx": "12", "year": 2013}, {"title": "Ontology-Based Information Extraction: An Introduction and a Survey o f Current Approaches", "author": ["D. Wimalasuriya", "D. Dou"], "venue": "Journal of Information Science,", "citeRegEx": "15", "shortCiteRegEx": "15", "year": 2010}, {"title": "Mining Association Rules Between Sets Of Items", "author": ["Rakesh Agrawal", "Tomasz Imirlinksi", "Arun Swami"], "venue": "In Large Databases\u201d, proceedings of the 1993 ACM SIGMOD \u201cInternational Conference on Management of Data\u201d,", "citeRegEx": "17", "shortCiteRegEx": "17", "year": 1993}, {"title": "Fast Algorithms For Mining Association Rules\u201d, Proc. 20 International Conference o n Very Large Data Bases, VLDB, pages 487\u2013499", "author": ["Rakesh Agrawal", "Ramakrishnan Srikant"], "venue": null, "citeRegEx": "18", "shortCiteRegEx": "18", "year": 1994}, {"title": "Integrating Classification And Association Rule Mining", "author": ["B. Liu", "W. Hsu", "Y Ma"], "venue": "Proc. KDD", "citeRegEx": "19", "shortCiteRegEx": "19", "year": 1998}, {"title": "MCAR: Multi-class Classification based on Association Rule", "author": ["F. Thabtah", "C. Peter", "Y. Peng"], "venue": "Proc. IEEE \u201cInternational Conference on Computer Systems and Applications\u201d,", "citeRegEx": "20", "shortCiteRegEx": "20", "year": 2005}, {"title": "An empirical analysis of phishing blacklists", "author": ["S. Sheng", "B. Wardman"], "venue": "VI th Conference in Email and Anti-Spam\u201d, Proc. CEAS\u201909, Mountain view, CA, July 2009.", "citeRegEx": "21", "shortCiteRegEx": null, "year": 2009}, {"title": "Phishnet: Predictive Blacklisting to Detect Phishing Attacks", "author": ["P. Prakash", "M. Kumar", "R.R. Kompella", "M. Gupta"], "venue": "INFOCOM\u201910: Proc. 29th \u201cIntl. conference on Information communications\u201d. NJ, USA: IEEE Press, 2010, pp. 346\u2013350.", "citeRegEx": "23", "shortCiteRegEx": null, "year": 2010}, {"title": "Client-side Defense Against Web-Based Identity Theft", "author": ["N. Chou", "R. Ledesma", "Y. Teraguchi", "J.C. Mitchell"], "venue": "Proc. of NDSS, The Internet Society, 2004.", "citeRegEx": "24", "shortCiteRegEx": null, "year": 2004}, {"title": "Phishguard: A Browser Plug-In For Protection From Phishing", "author": ["P. Likarish", "D. Dunbar", "T.E. Hansen"], "venue": "Proc. II \u201cInternational Conference on Internet Multimedia Services Architecture and Applications\u201d, 2008. IMSAA 2008, pp. 1 \u2013 6. International Journal of Information Sciences and Techniques (IJIST) Vol.4, No.4/5/6, November 2014 20", "citeRegEx": "25", "shortCiteRegEx": null, "year": 2008}, {"title": "Phishwish: A Stateless Phishing Filter Using Minimal Rules", "author": ["D.L. Cook", "V.K. Gurbani", "M. Daniluk"], "venue": "Financial Cryptography and Data Security, G. Tsudik, Ed.Berlin, Heidelberg: Springer- Verlag, 2008, pp. 182\u2013186.[online] http://link.springer.com/chapter/10.1007%2F978-3-540-85230- 8_15", "citeRegEx": "26", "shortCiteRegEx": null, "year": 2008}, {"title": "Cantina: A Content-Based Approach To Detecting Phishing Web Sites", "author": ["Y. Zhang", "J.I. Hong", "L.F. Cranor"], "venue": " Proceedings 16th International conference on World Wide Web, WWW 2007. New York: ACM, 2007, pp. 639\u2013648.", "citeRegEx": "27", "shortCiteRegEx": null, "year": 2007}, {"title": "Deceptive Phishing Detection System (From Audio and Text messages in Instant Messengers using Data Mining Approach)", "author": ["MM Ali", "L. Rajamani"], "venue": "Proc. (IEEE) \u201cIntl. Conf. on Pattern Recognition, Informatics and Medical Engineering,", "citeRegEx": "28", "shortCiteRegEx": "28", "year": 2012}, {"title": "Detecting D N S -Poisoning-Based Phishing Attacks From Their Network Performance Characteristics", "author": ["H. Kim", "J. Huh"], "venue": "Electronics Letters, vol. 47, no. 11, pp. 656 \u2013658, 26 2011.", "citeRegEx": "29", "shortCiteRegEx": null, "year": 2011}, {"title": "Natural-Language Processing For Intrusion Detection", "author": ["A. Stone"], "venue": "Computer, vol. 40,", "citeRegEx": "31", "shortCiteRegEx": "31", "year": 2007}, {"title": "Framework for Surveillance Of Instant Messages In Instant Messengers And Social Networking Sites Using Data Mining And Ontology", "author": ["M.M. Ali", "KM Mohammed", "L. Rajamani"], "venue": "Students' Technology Symposium (TechSym),", "citeRegEx": "33", "shortCiteRegEx": "33", "year": 2014}], "referenceMentions": [{"referenceID": 0, "context": "2 was some reprieve when spam detection and filtering were introduced to the IMs [2].", "startOffset": 81, "endOffset": 84}, {"referenceID": 1, "context": "[3].", "startOffset": 0, "endOffset": 3}, {"referenceID": 1, "context": "Also, when there is increase in the false positives the system would be more harmful rather than being useful, as the users will start ignoring the system warnings due to wrongly reported phishing alerts [3].", "startOffset": 204, "endOffset": 207}, {"referenceID": 8, "context": "It took about 12 hours to detect and blacklist the new phishing words or URLs, which is a considerable delay owing to the fact that about two-thirds of the phishing attacks end within two hours [21].", "startOffset": 194, "endOffset": 198}, {"referenceID": 1, "context": "experience based methods of problem solving were used like SpoofGuard, Phishguard, Phishwish, and Cantina [3].", "startOffset": 106, "endOffset": 109}, {"referenceID": 14, "context": "Apriori algorithm is used for finding phishing patterns dynamically in Instant messengers from not only text messages but also from voice chatting, by integrating the IM system with speech recognition system [28].", "startOffset": 208, "endOffset": 212}, {"referenceID": 17, "context": "Another frame work which detects suspicious messages in Instant messengers and social networking sites using Ontology and Association Rule Mining (ARM) is used to detect the domain of the message keywords [33].", "startOffset": 205, "endOffset": 209}, {"referenceID": 17, "context": "The user is not alerted instead the e-crime department is notified if any suspicious activity is detected [33].", "startOffset": 106, "endOffset": 110}, {"referenceID": 2, "context": "It uses the predicate and object as name and value of the attribute respectively [12].", "startOffset": 81, "endOffset": 85}, {"referenceID": 2, "context": "Identifying the Theme concept is done by performing the intersection of the three sets obtained [12].", "startOffset": 96, "endOffset": 100}, {"referenceID": 2, "context": "Mathematically, Concept = [nouns] subjectList = [subjects] MaxOccurConcepts = [concepts] ThemeConcept = concept \u2229 subjectList \u2229 MaxOccurConcepts [12] Consider the following text passage: \u201cHotel Taj Banjara at Banjara Hills offersv excellent facilities and accommodation.", "startOffset": 145, "endOffset": 149}, {"referenceID": 2, "context": "7 message content refers [12].", "startOffset": 25, "endOffset": 29}, {"referenceID": 2, "context": "Context identification: This is an enhancement to the concepts discussed from [12] where in the task was limited to domain identification.", "startOffset": 78, "endOffset": 82}, {"referenceID": 2, "context": "The triplet algorithms are used here to assist in the identification of the Theme concept and the domain in the inference module [12].", "startOffset": 129, "endOffset": 133}, {"referenceID": 2, "context": "The Lexicon extractor module co n t a i n s rules i n o rd er to learn new lexicon symbols from the filtered keywords, and append them into the semantic lexicon using a set of heuristics to identify the relationship between lexical items and the existing semantic lexicon [12].", "startOffset": 272, "endOffset": 276}, {"referenceID": 2, "context": "It uses the predicate and object as name and value of the attribute respectively [12].", "startOffset": 81, "endOffset": 85}, {"referenceID": 2, "context": "For complex noun compounds, the parse tree is used to extract all embedded Noun phrases (NP) [12] [40].", "startOffset": 93, "endOffset": 97}, {"referenceID": 2, "context": "The parse tree is used to extract all embedded Verb phrases (VP) [12] [39] [40].", "startOffset": 65, "endOffset": 69}, {"referenceID": 2, "context": "The parse tree is used to extract all embedded preposition phrases (PP), and adjective phrases (ADJP) [12] [40]", "startOffset": 102, "endOffset": 106}], "year": 2014, "abstractText": "User ignorance towards the use of communication services like Instant Messengers, emails, websites, social networks etc. is becoming the biggest advantage for phishers. It is required to create technical awareness in users by educating them to create a phishing detection application which would generate phishing alerts for the user so that phishing messages are not ignored. The lack of basic security features to detect and prevent phishing has had a profound effect on the IM clients, as they lose their faith in e-banking and e-commerce transactions, which will have a disastrous impact on the corporate and banking sectors and businesses which rely heavily on the internet. Very little research contributions were available in for phishing detection in Instant messengers. A context based, dynamic and intelligent phishing detection methodology in IMs is proposed, to analyze and detect phishing in Instant Messages with relevance to domain ontology (OBIE) and utilizes the Classification based on Association (CBA) for generating phishing rules and alerting the victims. A PDS Monitoring system algorithm is used to identify the phishing activity during exchange of messages in IMs, with high ratio of precision and recall. The results have shown improvement by the increased percentage of precision and recall when compared to the existing methods.", "creator": "PScript5.dll Version 5.2.2"}}}