{"id": "1511.03729", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "11-Nov-2015", "title": "Larger-Context Language Modelling", "abstract": "In this work, we propose a novel method to incorporate corpus-level discourse information into language modelling. We call this larger-context language model. We introduce a late fusion approach to a recurrent language model based on long short-term memory units (LSTM), which helps the LSTM unit keep intra-sentence dependencies and inter-sentence dependencies separate from each other. Through the evaluation on three corpora (IMDB, BBC, and PennTree Bank), we demon- strate that the proposed model improves perplexity significantly. In the experi- ments, we evaluate the proposed approach while varying the number of context sentences and observe that the proposed late fusion is superior to the usual way of incorporating additional inputs to the LSTM. By analyzing the trained larger- context language model, we discover that content words, including nouns, adjec- tives and verbs, benefit most from an increasing number of context sentences. This analysis suggests that larger-context language model improves the unconditional language model by capturing the theme of a document better and more easily.", "histories": [["v1", "Wed, 11 Nov 2015 23:24:29 GMT  (1238kb,D)", "https://arxiv.org/abs/1511.03729v1", null], ["v2", "Fri, 25 Dec 2015 17:51:01 GMT  (1635kb,D)", "http://arxiv.org/abs/1511.03729v2", null]], "reviews": [], "SUBJECTS": "cs.CL", "authors": ["tian wang", "kyunghyun cho"], "accepted": false, "id": "1511.03729"}, "pdf": {"name": "1511.03729.pdf", "metadata": {"source": "CRF", "title": "LARGER-CONTEXT LANGUAGE MODELLING WITH RECURRENT NEURAL NETWORK", "authors": ["Tian Wang", "Kyunghyun Cho"], "emails": ["t.wang@nyu.edu", "kyunghyun.cho@nyu.edu"], "sections": [{"heading": "1 INTRODUCTION", "text": "The goal of language modelling is to estimate the probability distribution of various linguistic units, e.g., words, sentences (Rosenfeld, 2000). Among the earliest techniques were count-based n-gram language models which intend to assign the probability distribution of a given word observed after a fixed number of previous words. Later Bengio et al. (2003) proposed feed-forward neural language model, which achieved substantial improvements in perplexity over count-based language models. Bengio et al. showed that this neural language model could simultaneously learn the conditional probability of the latest word in a sequence as well as a vector representation for each word in a predefined vocabulary.\nRecently recurrent neural networks have become one of the most widely used models in language modelling (Mikolov et al., 2010). Long short-term memory unit (LSTM, Hochreiter & Schmidhuber, 1997) is one of the most common recurrent activation function. Architecturally speaking, the memory state and output state are explicitly separated by activation gates such that the vanishing gradient and exploding gradient problems described in Bengio et al. (1994) is avoided. Motivated by such gated model, a number of variants of RNNs (e.g. Cho et al. (GRU, 2014b), Chung et al. (GF-RNN, 2015)) have been designed to easily capture long-term dependencies.\nWhen modelling a corpus, these language models assume the mutual independence among sentences, and the task is often reduced to assigning a probability to a single sentence. In this work, we propose a method to incorporate corpus-level discourse dependency into neural language model. We call this larger-context language model. It models the influence of context by defining a conditional probability in the form of P (wn|w1:n\u22121, S), where w1, ..., wn are words from the same sentence, and S represents the context which consists a number of previous sentences of arbitrary length.\nWe evaluated our model on three different corpora (IMDB, BBC, and Penn TreeBank). Our experiments demonstrate that the proposed larger-context language model improve perplexity for sentences, significantly reducing per-word perplexity compared to the language models without context\nar X\niv :1\n51 1.\n03 72\n9v 2\n[ cs\n.C L\n] 2\n5 D\nec 2\n01 5\ninformation. Further, through Part-Of-Speech tag analysis, we discovered that content words, including nouns, adjectives and verbs, benefit the most from increasing number of context sentences. Such discovery led us to the conclusion that larger-context language model improves the unconditional language model by capturing the theme of a document.\nTo achieve such improvement, we proposed a late fusion approach, which is a modification to the LSTM such that it better incorporates the discourse context from preceding sentences. In the experiments, we evaluated the proposed approach against early fusion approach with various numbers of context sentences, and demonstrated the late fusion is superior to the early fusion approach.\nOur model explores another aspect of context-dependent recurrent language model. It is novel in that it also provides an insightful way to feed information into LSTM unit, which could benefit all encoder-decoder based applications."}, {"heading": "2 BACKGROUND: STATISTICAL LANGUAGE MODELLING", "text": "Given a document D = (S1, S2, . . . , SL) which consists of L sentences, statistical language modelling aims at computing its probability P (D). It is often assumed that each sentence in the whole document is mutually independent from each other:\nP (D) \u2248 L\u220f\nl=1\nP (Sl). (1)\nWe call this probability (before approximation) a corpus-level probability. Under this assumption of mutual independence among sentences, the task of language modelling is often reduced to assigning a probability to a single sentence P (Sl).\nA sentence Sl = (w1, w2, . . . , wTl) is a variable-length sequence of words or tokens. By assuming that a word at any location in a sentence is largely predictable by preceding words, we can rewrite the sentence probability into\nP (S) = Tl\u220f t=1 p(wt|w<t), (2)\nwhere w<t is a shorthand notation for all the preceding words. We call this a sentence-level probability.\nThis rewritten probability expression can be either directly modelled by a recurrent neural network (Mikolov et al., 2010) or further approximated as a product of n-gram conditional probabilities such that\nP (S) \u2248 Tl\u220f t=1 p(wt|wt\u22121t\u2212n), (3)\nwhere wt\u22121t\u2212n = (wt\u2212n, . . . , wt\u22121). The latter is called n-gram language modelling. See, e.g., (Kneser & Ney, 1995) for detailed reviews on the most widely used techniques for n-gram language modelling.\nThe most widely used approach to this statistical language modelling is n-gram language model in Eq. (3). This approach builds a large table of n-gram statistics based on a training corpus. Each row of the table contains as its key the n-gram phrase and its number of occurrences in the training corpus. Based on these statistics, one can estimate the n-gram conditional probability (one of the terms inside the product in Eq. (3)) by\np(wt|wt\u22121t\u2212n) = c(wt\u2212n, . . . , wt\u22121, wt)\u2211\nw\u2032\u2208V c(wt\u2212n, . . . , wt\u22121, w \u2032) ,\nwhere c(\u00b7) is the count in the training corpus, and V is the vocabulary of all unique words/tokens. As this estimate suffers severely from data sparsity (i.e., most n-grams do not occur at all in the training corpus), many smoothing/back-off techniques have been proposed over decades. One of the most widely used smoothing technique is a modified Kneser-Ney smoothing (Kneser & Ney, 1995)\nMore recently, Bengio et al. (2003) proposed to use a feedforward neural network to model those n-gram conditional probabilities to avoid the issue of data sparsity. This model is often referred to as neural language model.\nThis n-gram language modelling is however limited due to the n-th order Markov assumption made in Eq. (3). Hence, Mikolov et al. (2010) proposed recently to use a recurrent neural network to directly model Eq. (2) without making any Markov assumption. We will refer to this approach of using a recurrent neural network for language modeling as recurrent language modelling.\nA recurrent language model is composed of two function\u2013transition and output functions. The transition function reads one word wt and updates its hidden state such that\nht = \u03c6 (wt,ht\u22121) , (4) where h0 is an all-zero vector. \u03c6 is a recurrent activation function, and two most commonly used ones are long short-term memory units (LSTM, Hochreiter & Schmidhuber, 1997) and gated recurrent units (GRU, Cho et al., 2014b). For more details on these recurrent activation units, we refer the reader to (Jozefowicz et al., 2015; Greff et al., 2015).\nAt each timestep, the output function computes the probability over all possible next words in the vocabulary V . This is done by\np(wt+1 = w \u2032|wt1) \u221d exp (gw\u2032(ht)) . (5)\ng is commonly implemented as an affine transformation: g(ht) = Woht + bo, where Wo \u2208 R|V |\u00d7d and bo \u2208 R|V |. The whole model is trained by maximizing the log-likelihood of a training corpus often using stochastic gradient descent with backpropagation through time (see, e.g., Rumelhart et al., 1988).\nThese different approaches to language modelling have been extensively tested against each other in terms of speech recognition and machine translation in recent years (Sundermeyer et al., 2015; Baltescu & Blunsom, 2014; Schwenk, 2007). Often the conclusion is that all three techniques tend to have different properties and qualities dependent on many different factors, such as the size of training corpus, available memory and target application. In many cases, it has been found that it is beneficial to combine all these techniques together in order to achieve the best language model.\nOne most important thing to note in this conventional approach to statistical language modelling is that every sentence in a document is assumed independent from each other (see Eq. (1).) This raises a question on how strong an assumption this is, how much impact this assumption has on the final language model quality and how much gain language modelling can get by making this assumption less strong."}, {"heading": "2.1 LANGUAGE MODELLING WITH LONG SHORT-TERM MEMORY", "text": "Here let us briefly describe a long short-term memory unit which is widely used as a recurrent activation function \u03c6 (see Eq. (4)) for language modelling (see, e.g., Graves, 2013).\nA layer of long short-term memory (LSTM) unit consists of three gates and a single memory cell. Three gates\u2013input, output and forget\u2013 are computed by\nit =\u03c3 (Wixt +Uiht\u22121 + bi) (6) ot =\u03c3 (Woxt +Uoht\u22121 + bo) (7) ft =\u03c3 (Wfxt +Ufht\u22121 + bf ) , (8)\nwhere \u03c3 is a sigmoid function. xt is the input at the t-th timestep.\nThe memory cell is computed by ct = ft ct\u22121 + it tanh (Wcx+Ucht\u22121 + bc) , (9)\nwhere is an element-wise multiplication. This adaptive leaky integration of the memory cell allows the LSTM to easily capture long-term dependencies in the input sequence, and this has recently been widely adopted many works involving language models (see, e.g., Sundermeyer et al., 2015).\nThe output, or the activation of this LSTM layer, is then computed as ht = ot tanh(ct)."}, {"heading": "3 LARGER-CONTEXT LANGUAGE MODELLING", "text": "In this paper, we aim not at improving the sentence-level probability estimation P (S) (see Eq. (2)) but at improving the corpus-level probability P (D) from Eq. (1) directly. One thing we noticed at the beginning of this work is that it is not necessary for us to make the assumption of mutual independence of sentences in a corpus. Rather, similarly to how we model a sentence probability, we can loosen this assumption by\nP (D) \u2248 L\u220f\nl=1\nP (Sl|Sl\u22121l\u2212n), (10)\nwhere Sl\u22121l\u2212n = (Sl\u2212n, Sl\u2212n+1, . . . , Sl\u22121). n decides on how many preceding sentences each conditional sentence probability conditions on, similarly to what happens with a usual n-gram language modelling.\nFrom the statistical modelling\u2019s perspective, estimating the corpus-level language probability in Eq. (10) is equivalent to build a statistical model that approximates\nP (Sl|Sl\u22121l\u2212n) = Tl\u220f t=1 p(wt|w<t, Sl\u22121l\u2212n), (11)\nsimilarly to Eq. (2). One major difference from the existing approaches to statistical language modelling is that now each conditional probability of a next word is conditioned not only on the preceding words in the same sentence, but also on the n\u2212 1 preceding sentences. A conventional, count-based n-gram language model is not well-suited due to the issue of data sparsity. In other words, the number of rows in the table storing n-gram statistics will explode as the number of possible sentence combinations grows exponentially with respect to both the vocabulary size, each sentence\u2019s length and the number of context sentences.\nEither neural or recurrent language modelling however does not suffer from this issue of data sparsity. This makes these models ideal for modelling the larger-context sentence probability in Eq. (11). More specifically, we are interested in adapting the recurrent language model for this.\nIn doing so, we answer two questions in the following subsections. First, there is a question of how we should represent the context sentences Sl\u22121l\u2212n. We consider two possibilities in this work. Second, there is a large freedom in how we build a recurrent activation function to be conditioned on the context sentences. We also consider two alternatives in this case."}, {"heading": "3.1 CONTEXT REPRESENTATION", "text": "A sequence of preceding sentences can be represented in many different ways. Here, let us describe two alternatives we test in the experiments.\nThe first representation is to simply bag all the words in the preceding sentences into a single vector s \u2208 [0, 1]|V |. Any element of s corresponding to the word that exists in one of the preceding sentences will be assigned the frequency of that word, and otherwise 0. This vector is multiplied from left by a matrix P which is tuned together with all the other parameters:\np = Ps.\nWe call this representation p a bag-of-words (BoW) context.\nSecond, we try to represent the preceding context sentences as a sequence of bag-of-words. Each bag-of-word sj is the bag-of-word representation of the j-th context sentence, and they are put into a sequence (sl\u2212n, . . . , sl\u22121). Unlike the first BoW context, this allows us to incorporate the order of the preceding context sentences.\nThis sequence of BoW vectors are read by a recurrent neural network which is separately from the one used for modelling a sentence (see Eq. (4).) We use LSTM units as recurrent activations, and for each context sentence in the sequence, we get\nzt = \u03c6 (xt, zt\u22121) ,\nfor t = l\u2212 n, . . . , l\u2212 1. We set the last hidden state zl\u22121 of this recurrent neural network, to which we refer as a context recurrent neural network, as the context vector p.\nAttention-based Context Representation The sequence of BoW vectors can be used in a bit different way from the above. Instead of a unidirectional recurrent neural network, we first use a bidirectional recurrent neural network to read the sequence. The forward recurrent neural network reads the sequence as usual in a forward direction, and the reverse recurrent neural network in the opposite direction. The hidden states from these two networks are then concatenated for each context sentence in order to form a sequence of annotation vectors (zl\u2212n, . . . , zl\u22121).\nUnlike the other approaches, in this case, the context vector p differs for each word wt in the current sentence, and we denote it by pt. The context vector pt for the t-th word is computed as the weighted sum of the annotation vectors:\npt = l\u22121\u2211 l\u2032=l\u2212n \u03b1t,l\u2032zl\u2032 ,\nwhere the attention weight \u03b1t,l\u2032 is computed by\n\u03b1t,l\u2032 = exp score (zl\u2032 ,ht)\u2211l\u22121\nk=l\u2212n exp score (zk,ht) .\nht is the hidden state of the recurrent language model of the current sentence from Eq. (5). The scoring function score(zl\u2032 ,ht) returns a relevance score of the l\u2032-th context sentence with respect to ht."}, {"heading": "3.2 CONDITIONAL LSTM", "text": "Early Fusion Once the context vector p is computed from the n preceding sentences, we need to feed this into the sentence-level recurrent language model. One most straightforward way is to simply consider it as an input at every time step such that\nx = E>wt +Wpp,\nwhere E is the word embedding matrix that transforms the one-hot vector of the t-th word into a continuous word vector. This x is used by the LSTM layer as the input, as described in Sec. 2.1. We call this approach an early fusion of the context into language modelling.\nLate Fusion In addition to this approach, we propose here a modification to the LSTM such that it better incorporates the context from the preceding sentences (summarized by pt.) The basic idea is to keep dependencies within the sentence being modelled (intra-sentence dependencies) and those between the preceding sentences and the current sent (inter-sentence dependencies) separately from each other.\nWe let the memory cell ct of the LSTM in Eq. (9) to model intra-sentence dependencies. This simply means that there is no change to the existing formulation of the LSTM, described in Eqs. (6)\u2013(9).\nThe inter-sentence dependencies are reflected on the interaction between the memory cell ct, which models intra-sentence dependencies, and the context vector p, which summarizes the n preceding sentences. We model this by first computing the amount of influence of the preceding context sentences as\nrt = \u03c3 (Wr (Wpp) +Wrc+ br) .\nThis vector rt controls the strength of each of the elements in the context vector p. This amount of influence from the n preceding sentences is decided based on the currently captured intra-sentence dependency structures and the preceding sentences.\nThis controlled context vector rt (Wpp) is then used to compute the output of the LSTM layer such that\nht = ot tanh (ct + rt (Wpp)) .\nThis is illustrated in Fig. 1 (b).\nWe call this approach a late fusion, as the effect of the preceding context is fused together with the intra-sentence dependency structure in the later stage of the recurrent activation.\nLate fusion is a simple, but effective way to mitigate the issue of vanishing gradient in corpuslevel language modelling. By letting the context representation flow without having to pass through saturating nonlinear activation functions, it provides a linear path through which the gradient for the context flows easily."}, {"heading": "4 RELATED WORK", "text": ""}, {"heading": "4.1 CONTEXT-DEPENDENT RECURRENT LANGUAGE MODEL", "text": "This possibility of extending a neural or recurrent language modeling to incorporate larger context was explored earlier. Especially, (Mikolov & Zweig, 2012) proposed an approach, called contextdependent recurrent neural network language model, very similar to the proposed approach here. The basic idea of their approach is to use a topic distribution, represented as a vector of probabilities, of previous n words when computing the hidden state of the recurrent neural network each time. In doing so, the words used to compute the topic distribution often went over the sentence boundary, meaning that this distribution vector was summarizing a part of a preceding sentence. Nevertheless, their major goal was to use this topic distribution vector as a way to \u201cconvey contextual information about the sentence being modeled.\u201d More recently, Mikolov et al. (2014) proposed a similar approach however without relying on external topic modelling.\nThere are three major differences in the proposed approach from the work by Mikolov & Zweig (2012). First, the goal in this work is to explicitly model preceding sentences to better approximate the corpus-level probability (see Eq. (10)) rather than to get a better context of the current sentence. Second, Mikolov & Zweig (2012) use an external method, such as latent Dirichlet allocation (Blei et al., 2003) or latent semantics analysis (Dumais, 2004) to extract a feature vector, where we learn the whole model, including the context vector extraction, end-to-end. Third, we propose a late fusion approach which is well suited for the LSTM units which have recently been widely adopted many works involving language models (see, e.g., Sundermeyer et al., 2015). This late fusion is later shown to be superior to the early fusion approach.\nSimilarly, Sukhbaatar et al. (2015) proposed more recently to use a memory network for language modelling with a very large context of a hundred to two hundreds preceding words. The major difference to the proposed approach is in the lack of separation between the context sentences and the current sentence being processed. There are two implications from this approach. First, each sentence, depending on its and the preceding sentences\u2019 lengths, is conditioned on a different number of context sentences. Second, words in the beginning of the sentence being modelled tend to have a larger context (in terms of the number of preceding sentences they are being conditioned on) than those at the end of the sentence. These issues do not exist in the proposed approach here.\nUnlike these earlier works, the proposed approach here uses sentence boundaries explicitly. This makes it easier to integrate with downstream applications, such as machine translation and speech recognition, at the decoding level which almost always works sentence-wise.\nIt is however important to notice that these two previous works by Mikolov & Zweig (2012) and Sukhbaatar et al. (2015) are not in competition with the proposed larger-context recurrent language model. Rather, all these three are orthogonal to each other and can be combined."}, {"heading": "4.2 DIALOGUE MODELLING WITH RECURRENT NEURAL NETWORKS", "text": "A more similar model to the proposed larger-context recurrent language model is a hierarchical recurrent encoder decoder (HRED) proposed recently by Serban et al. (2015). The HRED consists of three recurrent neural networks to model a dialogue between two people from the perspective of one of them, to which we refer as a speaker. If we consider the last utterance of the speaker being modelled by the decoder of the HRED, this model can be considered as a larger-context recurrent language model with early fusion.\nAside the fact that the ultimate goals differ (in their case, dialogue modelling and in our case, document modelling), there are two technical differences. First, they only test with the early fusion approach. We show later in the experiments that the proposed late fusion gives a better language modelling quality than the early fusion. Second, we use a sequence of bag-of-words to represent the preceding sentences, while the HRED a sequence of sequences of words. This allows the HRED to potentially better model the order of the words in each preceding sentence, but it increases computational complexity (one more recurrent neural network) and decreases statistical efficient (more parameters with the same amount of data.)\nAgain, the larger-context language model proposed here is not competing against the HRED. Rather, it is a variant, with differences in technical details, that is being evaluated specifically for document language modelling. We believe many of the components in these two models are complementary to each other and may improve each other. For instance, the HRED may utilize the proposed late fusion, and the larger-context recurrent language model here may represent the context sentences as a sequence of sequences of words, instead of a BoW context or a sequence of BoW vectors."}, {"heading": "4.3 SKIP-THOUGHT VECTORS", "text": "Perhaps the most similar work is the skip-thought vector by Kiros et al. (2015). In their work, a recurrent neural network is trained to read a current sentence, as a sequence of words, and extract a so-called skip-thought vector of the sentence. There are two other recurrent neural networks which respectively model preceding and following sentences. If we only consider the prediction of the following sentence, then this model becomes a larger-context recurrent language model which considers a single preceding sentence as a context.\nAs with the other previous works we have discussed so far, the major difference is in the ultimate goal of the model. Kiros et al. (2015) fully focused on using their model to extract a good, generic sentence vector, while in this paper we are focused on obtaining a good language model. There are less major technical differences. First, the skip-thought vector model conditions only on the immediate preceding sentence, while we extend this to multiple preceding sentences. The experiments later will show the importance of having a larger context. Second, similarly to the two other previous works by Mikolov & Zweig (2012) and Serban et al. (2015), the skip-thought vector model only implements early fusion."}, {"heading": "4.4 NEURAL MACHINE TRANSLATION: CONDITIONAL LANGUAGE MODELLING", "text": "Neural machine translation is another related approach (Forcada & N\u0303eco, 1997; Kalchbrenner & Blunsom, 2013; Cho et al., 2014b; Sutskever et al., 2014; Bahdanau et al., 2014). In neural machine translation, often two recurrent neural networks are used. The first recurrent neural network, called an encoder, reads a source sentence, represented as a sequence of words in a source language, to form a context vector, or a set of context vectors. The other recurrent neural network, called a decoder, then, models the target translation conditioned on this source context.\nThis is similar to the proposed larger-context recurrent language model, if we consider the source sentence as a preceding sentence in a corpus. The major difference is in the ultimate application, machine translation vs. language modelling, and technically, the differences between neural ma-\nchine translation and the proposed larger-context language model are similar to those between the HRED and the larger-context language model.\nSimilarly to the other previous works we discussed earlier, it is possible to incorporate the proposed larger-context language model into the existing neural machine translation framework, and also to incorporate advanced mechanisms from the neural machine translation framework. Attention mechanism was introduced by Bahdanau et al. (2014) with intention to build a variable-length context representation in source sentence. In larger-context language model, this mechanism is applied on context sentences (see Sec. 3.1,) and we present the results in the later section showing that the attention mechanism indeed improves the quality of language modelling."}, {"heading": "4.5 CONTEXT-DEPENDENT QUESTION-ANSWERING MODELS", "text": "Context-dependent question-answering is a task in which a model is asked to answer a question based on the facts from a natural language paragraph. The question and answer are often formulated as filling in a missing word in a query sentence (Hermann et al., 2015; Hill et al., 2015). This task is closely related to the larger-context language model we proposed in this paper in the sense that its goal is to build a model to learn\np(qk|q<k, q>k, D), (12)\nwhere qk is the missing k-th word in a query Q, and q<k and q>k are the context words from the query. D is the paragraph containing facts about this query. Often, it is explicitly constructed so that the query q does not appear in the paragraph D.\nIt is easy to see the similarity between Eq. (12) and one of the conditional probabilities in the r.h.s. of Eq. (11). By replacing the context sentences Sl\u22121l\u2212n in Eq. (11) withD in Eq. (12) and conditioningwt on both the preceding and following words, we get a context-dependent question-answering model. In other words, the proposed larger-context language model can be used for context-dependent question-answering, however, with computational overhead. The overhead comes from the fact that for every possible answer the conditional probability completed query sentence must be evaluated."}, {"heading": "5 EXPERIMENTAL SETTINGS", "text": ""}, {"heading": "5.1 MODELS", "text": "There are six possible combinations of the proposed methods. First, there are two ways of representing the context sentences; (1) bag-of-words (BoW) and (2) a sequence of bag-of-words (SeqBoW), from Sec. 3.1. There are two separate ways to incorporate the SeqBoW; (1) with attention mechanism (ATT) and (2) without it. Then, there are two ways of feeding the context vector into the main recurrent language model (RLM); (1) early fusion (EF) and (2) late fusion (LF), from Sec. 3.2. We will denote these six possible models by\n1. RLM-BoW-EF-n 2. RLM-SeqBoW-EF-n 3. RLM-SeqBoW-ATT-EF-n 4. RLM-BoW-LF-n 5. RLM-SeqBoW-LF-n 6. RLM-SeqBoW-ATT-LF-n\nn denotes the number of preceding sentences to have as a set of context sentences. We test four different values of n; 1, 2, 4 and 8.\nAs a baseline, we also train a recurrent language model without any context information. We refer to this model by RLM. Furthermore, we also report the result with the conventional, count-based n-gram language model with the modified Kneser-Ney smoothing with KenLM (Heafield et al., 2013).\nEach recurrent language model uses 1000 LSTM units and is trained with Adadelta (Zeiler, 2012) to maximize the log-likelihood defined as\nL(\u03b8) = 1 K K\u2211 k=1 log p(Sk|Sk\u22121k\u2212n).\nWe early-stop training based on the validation log-likelihood and report the perplexity on the test set using the best model according to the validation log-likelihood.\nWe use only those sentences of length up to 50 words when training a recurrent language model for the computational reason. For KenLM, we used all available sentences in a training corpus."}, {"heading": "5.2 DATASETS", "text": "We evaluate the proposed larger-context language model on three different corpora. For detailed statistics, see Table 1.\nIMDB Movie Reviews A set of movie reviews is an ideal dataset to evaluate many different settings of the proposed larger-context language models, because each review is highly likely of a single theme (the movie under review.) A set of words or the style of writing will be well determined based on the preceding sentences.\nWe use the IMDB Move Review Corpus (IMDB) prepared by Maas et al. (2011).1 This corpus has 75k training reviews and 25k test reviews. We use the 30k most frequent words for recurrent language models.\nBBC Similarly to movie reviews, each new article tends to convey a single theme. We use the BBC corpus prepared by Greene & Cunningham (2006).2 Unlike the IMDB corpus, this corpus contains news articles which are almost always written in a formal style. By evaluating the proposed approaches on both the IMDB and BBC corpora, we can tell whether the benefits from larger context exist in both informal and formal languages. We use the 10k most frequent words for recurrent language models.\nBoth with the IMDB and BBC corpora, we did not do any preprocessing other than tokenization.3\nPenn Treebank We evaluate a normal recurrent language model, count-based n-gram language model as well as the proposed RLM-BoW-EF-n and RLM-BoW-LF-n with varying n = 1, 2, 4, 8 on the Penn Treebank Corpus. We preprocess the corpus according to (Mikolov et al., 2011) and use a vocabulary of 10k words."}, {"heading": "6 RESULTS AND ANALYSIS", "text": ""}, {"heading": "6.1 CORPUS-LEVEL PERPLEXITY", "text": "We evaluated the models, including all the proposed approaches (RLM-{BoW,SeqBoW}-{ATT,\u2205}{EF,LF}-n), on the IMDB corpus. In Fig. 2 (a), we see three major trends. First, RLM-BoW,\n1 http://ai.stanford.edu/\u02dcamaas/data/sentiment/ 2 http://mlg.ucd.ie/datasets/bbc.html 3 https://github.com/moses-smt/mosesdecoder/blob/master/scripts/\ntokenizer/tokenizer.perl\neither with the early fusion or late fusion, outperforms both the count-based n-gram and recurrent language model (LSTM) regardless of the number of context sentences. Second, the improvement grows as the number n of context sentences increases, and this is most visible with the novel late fusion. Lastly, we see that the RLM-SeqBoW does not work well regardless of the fusion type (RLM-SeqBow-EF not shown), while after using attention-based model RLM-SeqBow-ATT, the performance is greatly improved.\nBecause of the second observation from the IMDB corpus, that the late fusion clearly outperforms the early fusion, we evaluated only RLM-{BoW,SeqBoW}-{ATT}-LF-n\u2019s on the other two corpora. On the other two corpora, PTB and BBC, we observed a similar trend of RLM-SeqBoW-ATT-LFn and RLM-BoW-LF-n outperforming the two conventional language models, and that this trend strengthened as the number n of the context sentences grew. We also observed again that the RLMSeqBoW-ATT-LF outperforms RLM-SeqBoW-LF and RLM-BoW in almost all the cases.\nFrom these experiments, the benefit of allowing larger context to a recurrent language model is clear, however, with the right choice of the context representation (see Sec. 3.1) and the right mechanism for feeding the context information to the recurrent language model (see Sec. 3.2.) In these experiments, the sequence of bag-of-words representation with attention mechanism, together with the late fusion was found to be the best choice in all three corpora.\nOne possible explanation on the failure of the SeqBoW representation with a context recurrent neural network is that it is simply difficult for the context recurrent neural network to compress multiple sentences into a single vector. This difficulty in training a recurrent neural network to compress a long sequence into a single vector has been observed earlier, for instance, in neural machine translation (Cho et al., 2014a). Attention mechanism, which was found to avoid this problem in machine translation (Bahdanau et al., 2014), is found to solve this problem in our task as well."}, {"heading": "6.2 ANALYSIS: PERPLEXITY PER PART-OF-SPEECH TAG", "text": "Next, we attempted at discovering why the larger-context recurrent language model outperforms the unconditional recurrent language model. In order to do so, we computed the perplexity per part-of-speech (POS) tag.\nWe used the Stanford log-linear part-of-speech tagger (Stanford POS Tagger, Toutanova et al., 2003) to tag each word of each sentence in the corpora.4 We then computed the perplexity of each word and averaged them for each tag type separately. Among the 36 POS tags used by the Stanford POS Tagger, we looked at the perplexities of the ten most frequent tags (NN, IN, DT, JJ, RB, NNS, VBZ, VB, PRP, CC), of which we combined NN and NNS into a new tage Noun and VB and VBZ into a new tag Verb.\nWe show the results using the RLM-BoW-LF and RLM-SeqBoW-ATT-LF on all three corpora\u2013 IMDB, BBC and Penn Treebank\u2013 in Fig. 3. We observe that the predictability, measured by the perplexity (negatively correlated), grows most for nouns (Noun) and adjectives (JJ) as the number\n4 http://nlp.stanford.edu/software/tagger.shtml\nof context sentences increases. They are followed by verbs (Verb). In other words, nouns, adjectives and verbs are the ones which become more predictable by a language model given more context. We however noticed the relative degradation of quality in coordinating conjunctions (CC), determiners (DT) and personal pronouns (PRP).\nIt is worthwhile to note that nouns, adjectives and verbs are open-class, content, words, and conjunctions, determiners and pronouns are closed-class, function, words (see, e.g., Miller, 1999). The functions words often play grammatical roles, while the content words convey the content of a sentence or discourse, as the name indicates. From this, we may carefully conclude that the larger-context language model improves upon the conventional, unconditional language model by capturing the theme of a document, which is reflected by the improved perplexity on \u201ccontent-heavy\u201d open-class words (Chung & Pennebaker, 2007). In our experiments, this came however at the expense of slight degradation in the perplexity of function words, as the model\u2019s capacity stayed same (though, it is not necessary.)\nThis observation is in line with a recent finding by Hill et al. (2015). They also observed significant gain in predicting open-class, or content, words when a question-answering model, including humans, was allowed larger context."}, {"heading": "7 CONCLUSION", "text": "In this paper, we proposed a method to improve language model on corpus-level by incorporating larger context. Using this model results in the improvement in perplexity on the IMDB, BBC and Penn Treebank corpora, validating the advantage of providing larger context to a recurrent language model.\nFrom our experiments, we found that the sequence of bag-of-words with attention is better than bagof-words for representing the context sentences (see Sec. 3.1), and the late fusion is better than the early fusion for feeding the context vector into the main recurrent language model (see Sec. 3.2). Our part-of-speech analysis revealed that content words, including nouns, adjectives and verbs, benefit most from an increasing number of context sentences (see Sec. 6.2). This analysis suggests that larger-context language model improves perplexity because it captures the theme of a document better and more easily.\nTo explore the potential of such a model, there are several aspects in which more research needs to be done. First, the three datasets we used in this paper are relatively small in the context of language modelling, therefore the proposed larger-context language model should be evaluated on larger corpora. Second, more analysis, beyond the one based on part-of-speech tags, should be conducted in order to better understand the advantage of such larger-context models. Lastly, it is important to evaluate the impact of the proposed larger-context models in downstream tasks such as machine translation and speech recognition."}, {"heading": "ACKNOWLEDGMENTS", "text": "This work is done as a part of the course DS-GA 1010-001 Independent Study in Data Science at the Center for Data Science, New York University."}], "references": [{"title": "Neural machine translation by jointly learning to align and translate", "author": ["Bahdanau", "Dzmitry", "Cho", "Kyunghyun", "Bengio", "Yoshua"], "venue": "arXiv preprint arXiv:1409.0473,", "citeRegEx": "Bahdanau et al\\.,? \\Q2014\\E", "shortCiteRegEx": "Bahdanau et al\\.", "year": 2014}, {"title": "Pragmatic neural language modelling in machine translation", "author": ["Baltescu", "Paul", "Blunsom", "Phil"], "venue": "arXiv preprint arXiv:1412.7119,", "citeRegEx": "Baltescu et al\\.,? \\Q2014\\E", "shortCiteRegEx": "Baltescu et al\\.", "year": 2014}, {"title": "Learning long-term dependencies with gradient descent is difficult", "author": ["Bengio", "Yoshua", "Simard", "Patrice", "Frasconi", "Paolo"], "venue": "Neural Networks, IEEE Transactions on,", "citeRegEx": "Bengio et al\\.,? \\Q1994\\E", "shortCiteRegEx": "Bengio et al\\.", "year": 1994}, {"title": "A neural probabilistic language model", "author": ["Bengio", "Yoshua", "Ducharme", "R\u00e9jean", "Vincent", "Pascal", "Janvin", "Christian"], "venue": "The Journal of Machine Learning Research,", "citeRegEx": "Bengio et al\\.,? \\Q2003\\E", "shortCiteRegEx": "Bengio et al\\.", "year": 2003}, {"title": "On the properties of neural machine translation: Encoder-decoder approaches", "author": ["Cho", "Kyunghyun", "van Merrienboer", "Bart", "Bahdanau", "Dzmitry", "Bengio", "Yoshua"], "venue": "In Eighth Workshop on Syntax, Semantics and Structure in Statistical Translation", "citeRegEx": "Cho et al\\.,? \\Q2014\\E", "shortCiteRegEx": "Cho et al\\.", "year": 2014}, {"title": "Learning phrase representations using rnn encoderdecoder for statistical machine translation", "author": ["Cho", "Kyunghyun", "Van Merri\u00ebnboer", "Bart", "Gulcehre", "Caglar", "Bahdanau", "Dzmitry", "Bougares", "Fethi", "Schwenk", "Holger", "Bengio", "Yoshua"], "venue": "arXiv preprint arXiv:1406.1078,", "citeRegEx": "Cho et al\\.,? \\Q2014\\E", "shortCiteRegEx": "Cho et al\\.", "year": 2014}, {"title": "The psychological functions of function words", "author": ["Chung", "Cindy", "Pennebaker", "James W"], "venue": "Social communication,", "citeRegEx": "Chung et al\\.,? \\Q2007\\E", "shortCiteRegEx": "Chung et al\\.", "year": 2007}, {"title": "Gated feedback recurrent neural networks", "author": ["Chung", "Junyoung", "Gulcehre", "Caglar", "Cho", "Kyunghyun", "Bengio", "Yoshua"], "venue": "In Proceedings of the 32nd International Conference on Machine Learning", "citeRegEx": "Chung et al\\.,? \\Q2015\\E", "shortCiteRegEx": "Chung et al\\.", "year": 2015}, {"title": "Latent semantic analysis", "author": ["Dumais", "Susan T"], "venue": "Annual review of information science and technology,", "citeRegEx": "Dumais and T.,? \\Q2004\\E", "shortCiteRegEx": "Dumais and T.", "year": 2004}, {"title": "Recursive hetero-associative memories for translation", "author": ["Forcada", "Mikel L", "\u00d1eco", "Ram\u00f3n P"], "venue": "Biological and Artificial Computation: From Neuroscience to Technology,", "citeRegEx": "Forcada et al\\.,? \\Q1997\\E", "shortCiteRegEx": "Forcada et al\\.", "year": 1997}, {"title": "Generating sequences with recurrent neural networks", "author": ["Graves", "Alex"], "venue": "arXiv preprint arXiv:1308.0850,", "citeRegEx": "Graves and Alex.,? \\Q2013\\E", "shortCiteRegEx": "Graves and Alex.", "year": 2013}, {"title": "Practical solutions to the problem of diagonal dominance in kernel document clustering", "author": ["Greene", "Derek", "Cunningham", "P\u00e1draig"], "venue": "In Proc. 23rd International Conference on Machine learning", "citeRegEx": "Greene et al\\.,? \\Q2006\\E", "shortCiteRegEx": "Greene et al\\.", "year": 2006}, {"title": "Lstm: A search space odyssey", "author": ["Greff", "Klaus", "Srivastava", "Rupesh Kumar", "Koutn\u0131\u0301k", "Jan", "Steunebrink", "Bas R", "Schmidhuber", "J\u00fcrgen"], "venue": "arXiv preprint arXiv:1503.04069,", "citeRegEx": "Greff et al\\.,? \\Q2015\\E", "shortCiteRegEx": "Greff et al\\.", "year": 2015}, {"title": "Scalable modified Kneser-Ney language model estimation", "author": ["Heafield", "Kenneth", "Pouzyrevsky", "Ivan", "Clark", "Jonathan H", "Koehn", "Philipp"], "venue": "In Proceedings of the 51st Annual Meeting of the Association for Computational Linguistics,", "citeRegEx": "Heafield et al\\.,? \\Q2013\\E", "shortCiteRegEx": "Heafield et al\\.", "year": 2013}, {"title": "Teaching machines to read and comprehend", "author": ["Hermann", "Karl Moritz", "Ko\u010disk\u1ef3", "Tom\u00e1\u0161", "Grefenstette", "Edward", "Espeholt", "Lasse", "Kay", "Will", "Suleyman", "Mustafa", "Blunsom", "Phil"], "venue": "arXiv preprint arXiv:1506.03340,", "citeRegEx": "Hermann et al\\.,? \\Q2015\\E", "shortCiteRegEx": "Hermann et al\\.", "year": 2015}, {"title": "The goldilocks principle: Reading children\u2019s books with explicit memory representations", "author": ["Hill", "Felix", "Bordes", "Antoine", "Chopra", "Sumit", "Weston", "Jason"], "venue": "arXiv preprint arXiv:1511.02301,", "citeRegEx": "Hill et al\\.,? \\Q2015\\E", "shortCiteRegEx": "Hill et al\\.", "year": 2015}, {"title": "Long short-term memory", "author": ["Hochreiter", "Sepp", "Schmidhuber", "J\u00fcrgen"], "venue": "Neural computation,", "citeRegEx": "Hochreiter et al\\.,? \\Q1997\\E", "shortCiteRegEx": "Hochreiter et al\\.", "year": 1997}, {"title": "An empirical exploration of recurrent network architectures", "author": ["Jozefowicz", "Rafal", "Zaremba", "Wojciech", "Sutskever", "Ilya"], "venue": "In Proceedings of the 32nd International Conference on Machine Learning", "citeRegEx": "Jozefowicz et al\\.,? \\Q2015\\E", "shortCiteRegEx": "Jozefowicz et al\\.", "year": 2015}, {"title": "Recurrent continuous translation models", "author": ["Kalchbrenner", "Nal", "Blunsom", "Phil"], "venue": "In EMNLP, pp. 1700\u20131709,", "citeRegEx": "Kalchbrenner et al\\.,? \\Q2013\\E", "shortCiteRegEx": "Kalchbrenner et al\\.", "year": 2013}, {"title": "Improved backing-off for m-gram language modeling", "author": ["Kneser", "Reinhard", "Ney", "Hermann"], "venue": "In Acoustics, Speech, and Signal Processing,", "citeRegEx": "Kneser et al\\.,? \\Q1995\\E", "shortCiteRegEx": "Kneser et al\\.", "year": 1995}, {"title": "Learning word vectors for sentiment analysis", "author": ["Maas", "Andrew L", "Daly", "Raymond E", "Pham", "Peter T", "Huang", "Dan", "Ng", "Andrew Y", "Potts", "Christopher"], "venue": "In Proceedings of the 49th Annual Meeting of the Association for Computational Linguistics: Human Language Technologies-Volume", "citeRegEx": "Maas et al\\.,? \\Q2011\\E", "shortCiteRegEx": "Maas et al\\.", "year": 2011}, {"title": "Context dependent recurrent neural network language model", "author": ["Mikolov", "Tomas", "Zweig", "Geoffrey"], "venue": "In SLT,", "citeRegEx": "Mikolov et al\\.,? \\Q2012\\E", "shortCiteRegEx": "Mikolov et al\\.", "year": 2012}, {"title": "Recurrent neural network based language model", "author": ["Mikolov", "Tomas", "Karafi\u00e1t", "Martin", "Burget", "Lukas", "Cernock\u1ef3", "Jan", "Khudanpur", "Sanjeev"], "venue": "In INTERSPEECH 2010, 11th Annual Conference of the International Speech Communication Association,", "citeRegEx": "Mikolov et al\\.,? \\Q2010\\E", "shortCiteRegEx": "Mikolov et al\\.", "year": 2010}, {"title": "Extensions of recurrent neural network language model", "author": ["Mikolov", "Tom\u00e1\u0161", "Kombrink", "Stefan", "Burget", "Luk\u00e1\u0161", "\u010cernock\u1ef3", "Jan Honza", "Khudanpur", "Sanjeev"], "venue": "In Acoustics, Speech and Signal Processing (ICASSP),", "citeRegEx": "Mikolov et al\\.,? \\Q2011\\E", "shortCiteRegEx": "Mikolov et al\\.", "year": 2011}, {"title": "Marc\u2019Aurelio. Learning longer memory in recurrent neural networks", "author": ["Mikolov", "Tomas", "Joulin", "Armand", "Chopra", "Sumit", "Mathieu", "Michael", "Ranzato"], "venue": "arXiv preprint arXiv:1412.7753,", "citeRegEx": "Mikolov et al\\.,? \\Q2014\\E", "shortCiteRegEx": "Mikolov et al\\.", "year": 2014}, {"title": "On knowing a word", "author": ["Miller", "George A"], "venue": "Annual Review of psychology,", "citeRegEx": "Miller and A.,? \\Q1999\\E", "shortCiteRegEx": "Miller and A.", "year": 1999}, {"title": "Two decades of statistical language modeling: where do we go from here", "author": ["Rosenfeld", "Ronald"], "venue": "In Proceedings of the IEEE,", "citeRegEx": "Rosenfeld and Ronald.,? \\Q2000\\E", "shortCiteRegEx": "Rosenfeld and Ronald.", "year": 2000}, {"title": "Learning representations by back-propagating errors", "author": ["Rumelhart", "David E", "Hinton", "Geoffrey E", "Williams", "Ronald J"], "venue": "Cognitive modeling,", "citeRegEx": "Rumelhart et al\\.,? \\Q1988\\E", "shortCiteRegEx": "Rumelhart et al\\.", "year": 1988}, {"title": "Continuous space language models", "author": ["Schwenk", "Holger"], "venue": "Computer Speech & Language,", "citeRegEx": "Schwenk and Holger.,? \\Q2007\\E", "shortCiteRegEx": "Schwenk and Holger.", "year": 2007}, {"title": "Hierarchical neural network generative models for movie dialogues", "author": ["Serban", "Iulian V", "Sordoni", "Alessandro", "Bengio", "Yoshua", "Courville", "Aaron", "Pineau", "Joelle"], "venue": "arXiv preprint arXiv:1507.04808,", "citeRegEx": "Serban et al\\.,? \\Q2015\\E", "shortCiteRegEx": "Serban et al\\.", "year": 2015}, {"title": "End-to-end memory networks", "author": ["Sukhbaatar", "Sainbayar", "Szlam", "Arthur", "Weston", "Jason", "Fergus", "Rob"], "venue": "arXiv preprint arXiv:1503.08895,", "citeRegEx": "Sukhbaatar et al\\.,? \\Q2015\\E", "shortCiteRegEx": "Sukhbaatar et al\\.", "year": 2015}, {"title": "From feedforward to recurrent lstm neural networks for language modeling", "author": ["Sundermeyer", "Martin", "Ney", "Hermann", "Schluter", "Ralf"], "venue": "Audio, Speech, and Language Processing, IEEE/ACM Transactions on,", "citeRegEx": "Sundermeyer et al\\.,? \\Q2015\\E", "shortCiteRegEx": "Sundermeyer et al\\.", "year": 2015}, {"title": "Sequence to sequence learning with neural networks. In Advances in neural information processing", "author": ["Sutskever", "Ilya", "Vinyals", "Oriol", "Le", "Quoc VV"], "venue": null, "citeRegEx": "Sutskever et al\\.,? \\Q2014\\E", "shortCiteRegEx": "Sutskever et al\\.", "year": 2014}, {"title": "Feature-rich part-ofspeech tagging with a cyclic dependency network", "author": ["Toutanova", "Kristina", "Klein", "Dan", "Manning", "Christopher D", "Singer", "Yoram"], "venue": "In Proceedings of the 2003 Conference of the North American Chapter of the Association for Computational Linguistics on Human Language Technology-Volume", "citeRegEx": "Toutanova et al\\.,? \\Q2003\\E", "shortCiteRegEx": "Toutanova et al\\.", "year": 2003}, {"title": "Adadelta: An adaptive learning rate method", "author": ["Zeiler", "Matthew D"], "venue": "arXiv preprint arXiv:1212.5701,", "citeRegEx": "Zeiler and D.,? \\Q2012\\E", "shortCiteRegEx": "Zeiler and D.", "year": 2012}], "referenceMentions": [{"referenceID": 22, "context": "Recently recurrent neural networks have become one of the most widely used models in language modelling (Mikolov et al., 2010).", "startOffset": 104, "endOffset": 126}, {"referenceID": 2, "context": "Later Bengio et al. (2003) proposed feed-forward neural language model, which achieved substantial improvements in perplexity over count-based language models.", "startOffset": 6, "endOffset": 27}, {"referenceID": 2, "context": "Later Bengio et al. (2003) proposed feed-forward neural language model, which achieved substantial improvements in perplexity over count-based language models. Bengio et al. showed that this neural language model could simultaneously learn the conditional probability of the latest word in a sequence as well as a vector representation for each word in a predefined vocabulary. Recently recurrent neural networks have become one of the most widely used models in language modelling (Mikolov et al., 2010). Long short-term memory unit (LSTM, Hochreiter & Schmidhuber, 1997) is one of the most common recurrent activation function. Architecturally speaking, the memory state and output state are explicitly separated by activation gates such that the vanishing gradient and exploding gradient problems described in Bengio et al. (1994) is avoided.", "startOffset": 6, "endOffset": 834}, {"referenceID": 22, "context": "This rewritten probability expression can be either directly modelled by a recurrent neural network (Mikolov et al., 2010) or further approximated as a product of n-gram conditional probabilities such that", "startOffset": 100, "endOffset": 122}, {"referenceID": 17, "context": "For more details on these recurrent activation units, we refer the reader to (Jozefowicz et al., 2015; Greff et al., 2015).", "startOffset": 77, "endOffset": 122}, {"referenceID": 12, "context": "For more details on these recurrent activation units, we refer the reader to (Jozefowicz et al., 2015; Greff et al., 2015).", "startOffset": 77, "endOffset": 122}, {"referenceID": 31, "context": "These different approaches to language modelling have been extensively tested against each other in terms of speech recognition and machine translation in recent years (Sundermeyer et al., 2015; Baltescu & Blunsom, 2014; Schwenk, 2007).", "startOffset": 168, "endOffset": 235}, {"referenceID": 2, "context": "More recently, Bengio et al. (2003) proposed to use a feedforward neural network to model those n-gram conditional probabilities to avoid the issue of data sparsity.", "startOffset": 15, "endOffset": 36}, {"referenceID": 2, "context": "More recently, Bengio et al. (2003) proposed to use a feedforward neural network to model those n-gram conditional probabilities to avoid the issue of data sparsity. This model is often referred to as neural language model. This n-gram language modelling is however limited due to the n-th order Markov assumption made in Eq. (3). Hence, Mikolov et al. (2010) proposed recently to use a recurrent neural network to directly model Eq.", "startOffset": 15, "endOffset": 360}, {"referenceID": 21, "context": "\u201d More recently, Mikolov et al. (2014) proposed a similar approach however without relying on external topic modelling.", "startOffset": 17, "endOffset": 39}, {"referenceID": 21, "context": "\u201d More recently, Mikolov et al. (2014) proposed a similar approach however without relying on external topic modelling. There are three major differences in the proposed approach from the work by Mikolov & Zweig (2012). First, the goal in this work is to explicitly model preceding sentences to better approximate the corpus-level probability (see Eq.", "startOffset": 17, "endOffset": 219}, {"referenceID": 21, "context": "\u201d More recently, Mikolov et al. (2014) proposed a similar approach however without relying on external topic modelling. There are three major differences in the proposed approach from the work by Mikolov & Zweig (2012). First, the goal in this work is to explicitly model preceding sentences to better approximate the corpus-level probability (see Eq. (10)) rather than to get a better context of the current sentence. Second, Mikolov & Zweig (2012) use an external method, such as latent Dirichlet allocation (Blei et al.", "startOffset": 17, "endOffset": 450}, {"referenceID": 21, "context": "\u201d More recently, Mikolov et al. (2014) proposed a similar approach however without relying on external topic modelling. There are three major differences in the proposed approach from the work by Mikolov & Zweig (2012). First, the goal in this work is to explicitly model preceding sentences to better approximate the corpus-level probability (see Eq. (10)) rather than to get a better context of the current sentence. Second, Mikolov & Zweig (2012) use an external method, such as latent Dirichlet allocation (Blei et al., 2003) or latent semantics analysis (Dumais, 2004) to extract a feature vector, where we learn the whole model, including the context vector extraction, end-to-end. Third, we propose a late fusion approach which is well suited for the LSTM units which have recently been widely adopted many works involving language models (see, e.g., Sundermeyer et al., 2015). This late fusion is later shown to be superior to the early fusion approach. Similarly, Sukhbaatar et al. (2015) proposed more recently to use a memory network for language modelling with a very large context of a hundred to two hundreds preceding words.", "startOffset": 17, "endOffset": 998}, {"referenceID": 30, "context": "It is however important to notice that these two previous works by Mikolov & Zweig (2012) and Sukhbaatar et al. (2015) are not in competition with the proposed larger-context recurrent language model.", "startOffset": 94, "endOffset": 119}, {"referenceID": 29, "context": "A more similar model to the proposed larger-context recurrent language model is a hierarchical recurrent encoder decoder (HRED) proposed recently by Serban et al. (2015). The HRED consists of three recurrent neural networks to model a dialogue between two people from the perspective of one of them, to which we refer as a speaker.", "startOffset": 149, "endOffset": 170}, {"referenceID": 29, "context": "Second, similarly to the two other previous works by Mikolov & Zweig (2012) and Serban et al. (2015), the skip-thought vector model only implements early fusion.", "startOffset": 80, "endOffset": 101}, {"referenceID": 32, "context": "Neural machine translation is another related approach (Forcada & \u00d1eco, 1997; Kalchbrenner & Blunsom, 2013; Cho et al., 2014b; Sutskever et al., 2014; Bahdanau et al., 2014).", "startOffset": 55, "endOffset": 173}, {"referenceID": 0, "context": "Neural machine translation is another related approach (Forcada & \u00d1eco, 1997; Kalchbrenner & Blunsom, 2013; Cho et al., 2014b; Sutskever et al., 2014; Bahdanau et al., 2014).", "startOffset": 55, "endOffset": 173}, {"referenceID": 0, "context": "Attention mechanism was introduced by Bahdanau et al. (2014) with intention to build a variable-length context representation in source sentence.", "startOffset": 38, "endOffset": 61}, {"referenceID": 14, "context": "The question and answer are often formulated as filling in a missing word in a query sentence (Hermann et al., 2015; Hill et al., 2015).", "startOffset": 94, "endOffset": 135}, {"referenceID": 15, "context": "The question and answer are often formulated as filling in a missing word in a query sentence (Hermann et al., 2015; Hill et al., 2015).", "startOffset": 94, "endOffset": 135}, {"referenceID": 13, "context": "Furthermore, we also report the result with the conventional, count-based n-gram language model with the modified Kneser-Ney smoothing with KenLM (Heafield et al., 2013).", "startOffset": 146, "endOffset": 169}, {"referenceID": 20, "context": "We use the IMDB Move Review Corpus (IMDB) prepared by Maas et al. (2011).1 This corpus has 75k training reviews and 25k test reviews.", "startOffset": 54, "endOffset": 73}, {"referenceID": 23, "context": "We preprocess the corpus according to (Mikolov et al., 2011) and use a vocabulary of 10k words.", "startOffset": 38, "endOffset": 60}, {"referenceID": 0, "context": "Attention mechanism, which was found to avoid this problem in machine translation (Bahdanau et al., 2014), is found to solve this problem in our task as well.", "startOffset": 82, "endOffset": 105}, {"referenceID": 15, "context": ") This observation is in line with a recent finding by Hill et al. (2015). They also observed significant gain in predicting open-class, or content, words when a question-answering model, including humans, was allowed larger context.", "startOffset": 55, "endOffset": 74}], "year": 2015, "abstractText": "In this work, we propose a novel method to incorporate corpus-level discourse information into language modelling. We call this larger-context language model. We introduce a late fusion approach to a recurrent language model based on long short-term memory units (LSTM), which helps the LSTM unit keep intra-sentence dependencies and inter-sentence dependencies separate from each other. Through the evaluation on three corpora (IMDB, BBC, and Penn TreeBank), we demonstrate that the proposed model improves perplexity significantly. In the experiments, we evaluate the proposed approach while varying the number of context sentences and observe that the proposed late fusion is superior to the usual way of incorporating additional inputs to the LSTM. By analyzing the trained largercontext language model, we discover that content words, including nouns, adjectives and verbs, benefit most from an increasing number of context sentences. This analysis suggests that larger-context language model improves the unconditional language model by capturing the theme of a document better and more easily.", "creator": "LaTeX with hyperref package"}}}