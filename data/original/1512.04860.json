{"id": "1512.04860", "review": {"conference": "AAAI", "VERSION": "v1", "DATE_OF_SUBMISSION": "15-Dec-2015", "title": "Increasing the Action Gap: New Operators for Reinforcement Learning", "abstract": "This paper introduces new optimality-preserving operators on Q-functions. We first describe an operator for tabular representations, the consistent Bellman operator, which incorporates a notion of local policy consistency. We show that this local consistency leads to an increase in the action gap at each state; increasing this gap, we argue, mitigates the undesirable effects of approximation and estimation errors on the induced greedy policies. This operator can also be applied to discretized continuous space and time problems, and we provide empirical results evidencing superior performance in this context. Extending the idea of a locally consistent operator, we then derive sufficient conditions for an operator to preserve optimality, leading to a family of operators which includes our consistent Bellman operator. As corollaries we provide a proof of optimality for Baird's advantage learning algorithm and derive other gap-increasing operators with interesting properties. We conclude with an empirical study on 60 Atari 2600 games illustrating the strong potential of these new operators.", "histories": [["v1", "Tue, 15 Dec 2015 17:13:49 GMT  (717kb,D)", "http://arxiv.org/abs/1512.04860v1", null]], "reviews": [], "SUBJECTS": "cs.AI cs.LG", "authors": ["marc g bellemare", "georg ostrovski", "arthur guez", "philip s thomas", "r\u00e9mi munos"], "accepted": true, "id": "1512.04860"}, "pdf": {"name": "1512.04860.pdf", "metadata": {"source": "CRF", "title": "Increasing the Action Gap: New Operators for Reinforcement Learning", "authors": ["Marc G. Bellemare", "Georg Ostrovski", "Arthur Guez", "Philip S. Thomas", "R\u00e9mi Munos"], "emails": ["bellemare@google.com;", "ostrovski@google.com;", "aguez@google.com;", "munos@google.com;", "philipt@cs.cmu.edu"], "sections": [{"heading": null, "text": "Value-based reinforcement learning is an attractive solution to planning problems in environments with unknown, unstructured dynamics. In its canonical form, value-based reinforcement learning produces successive refinements of an initial value function through repeated application of a convergent operator. In particular, value iteration (Bellman 1957) directly computes the value function through the iterated evaluation of Bellman\u2019s equation, either exactly or from samples (e.g. Q-Learning, Watkins 1989).\nIn its simplest form, value iteration begins with an initial value function V0 and successively computes Vk+1 := T Vk, where T is the Bellman operator. When the environment dynamics are unknown, Vk is typically replaced by Qk, the state-action value function, and T is approximated by an empirical Bellman operator. The fixed point of the Bellman operator, Q\u2217, is the optimal state-action value function or optimal Q-function, from which an optimal policy \u03c0\u2217 can be recovered.\nIn this paper we argue that the optimal Q-function is inconsistent, in the sense that for any action a which is subop\u2217Now at Carnegie Mellon University. Copyright c\u00a9 2016, Association for the Advancement of Artificial Intelligence (www.aaai.org). All rights reserved.\ntimal in state x, Bellman\u2019s equation for Q\u2217(x, a) describes the value of a nonstationary policy: upon returning to x, this policy selects \u03c0\u2217(x) rather than a. While preserving global consistency appears impractical, we propose a simple modification to the Bellman operator which provides us a with a first-order solution to the inconsistency problem. Accordingly, we call our new operator the consistent Bellman operator.\nWe show that the consistent Bellman operator generally devalues suboptimal actions but preserves the set of optimal policies. As a result, the action gap \u2013 the value difference between optimal and second best actions \u2013 increases. Increasing the action gap is advantageous in the presence of approximation or estimation error (Farahmand 2011), and may be crucial for systems operating at a fine time scale such as video games (Togelius et al. 2009; Bellemare et al. 2013), real-time markets (Jiang and Powell 2015), and robotic platforms (Riedmiller et al. 2009; Hoburg and Tedrake 2009; Deisenroth and Rasmussen 2011; Sutton et al. 2011). In fact, the idea of devaluating suboptimal actions underpins Baird\u2019s advantage learning (Baird 1999), designed for continuous time control, and occurs naturally when considering the discretized solution of continuous time and space MDPs (e.g. Munos and Moore 1998; 2002), whose limit is the Hamilton-Jacobi-Bellman equation (Kushner and Dupuis 2001). Our empirical results on the bicycle domain (Randlov and Alstrom 1998) show a marked increase in performance from using the consistent Bellman operator.\nIn the second half of this paper we derive novel sufficient conditions for an operator to preserve optimality. The relative weakness of these new conditions reveal that it is possible to deviate significantly from the Bellman operator without sacrificing optimality: an optimality-preserving operator needs not be contractive, nor even guarantee convergence of the Q-values for suboptimal actions. While numerous alternatives to the Bellman operator have been put forward (e.g. recently Azar et al. 2011; Bertsekas and Yu 2012), we believe our work to be the first to propose such a major departure from the canonical fixed-point condition required from an optimality-preserving operator. As proof of the richness of this new operator family we describe a few practical instantiations with unique properties.\nWe use our operators to obtain state-of-the-art empirical\nar X\niv :1\n51 2.\n04 86\n0v 1\n[ cs\n.A I]\n1 5\nD ec\n2 01\n5\nresults on the Arcade Learning Environment (Bellemare et al. 2013). We consider the Deep Q-Network (DQN) architecture of Mnih et al. (2015), replacing only its learning rule with one of our operators. Remarkably, this one-line change produces agents that significantly outperform the original DQN. Our work, we believe, demonstrates the potential impact of rethinking the core components of value-based reinforcement learning."}, {"heading": "Background", "text": "We consider a Markov decision process M := (X ,A, P,R, \u03b3) where X is the state space, A is the finite action space, P is the transition probability kernel, R is the reward function mapping state-action pairs to a bounded subset of R, and \u03b3 \u2208 [0, 1) is the discount factor. We denote by Q := QX ,A and V := VX the space of bounded real-valued functions over X \u00d7 A and X , respectively. For Q \u2208 Q we write V (x) := maxaQ(x, a), and follow this convention for related quantities (V\u0303 for Q\u0303, V \u2032 for Q\u2032, etc.) whenever convenient and unambiguous. In the context of a specific (x, a) \u2208 X \u00d7 A we further write EP := Ex\u2032\u223cP (\u00b7 | x,a) to mean the expectation with respect to P (\u00b7 |x, a), with the convention that x\u2032 always denotes the next state random variable.\nA deterministic policy \u03c0 : X \u2192 A induces a Q-function Q\u03c0 \u2208 Q whose Bellman equation is\nQ\u03c0(x, a) := R(x, a) + \u03b3EP Q\u03c0(x\u2032, \u03c0(x\u2032)).\nThe state-conditional expected return V \u03c0(x) := Q\u03c0(x, \u03c0(x)) is the expected discounted total reward received from starting in x and following \u03c0.\nThe Bellman operator T : Q \u2192 Q is defined pointwise as\nT Q(x, a) := R(x, a) + \u03b3EP max b\u2208A Q(x\u2032, b). (1)\nT is a contraction mapping in supremum norm (Bertsekas and Tsitsiklis 1996) whose unique fixed point is the optimal Q-function\nQ\u2217(x, a) = R(x, a) + \u03b3EP max b\u2208A Q\u2217(x\u2032, b),\nwhich induces the optimal policy \u03c0\u2217:\n\u03c0\u2217(x) := arg max a\u2208A Q\u2217(x, a) \u2200x \u2208 X .\nA Q-function Q \u2208 Q induces a greedy policy \u03c0(x) := arg maxaQ(x, a), with the property that Q\n\u03c0 = Q if and only if Q = Q\u2217. For x \u2208 X we call \u03c0(x) the greedy action with respect to Q and a 6= \u03c0(x) a nongreedy action; for \u03c0\u2217 these are the usual optimal and suboptimal actions, respectively.\nWe emphasize that while we focus on the Bellman operator, our results easily extend to its variations such as SARSA (Rummery and Niranjan 1994), policy evaluation (Sutton 1988), and fitted Q-iteration (Ernst, Geurts, and Wehenkel 2005). In particular, our new operators all have a sample-based form, i.e., an analogue to the Q-Learning rule of Watkins (1989)."}, {"heading": "The Consistent Bellman Operator", "text": "It is well known (and implicit in our notation) that the optimal policy \u03c0\u2217 for M is stationary (i.e., time-independent) and deterministic. In looking for \u03c0\u2217, we may therefore restrict our search to the space \u03a0 of stationary deterministic policies. Interestingly, as we now show the Bellman operator on Q is not, in a sense, restricted to \u03a0.\nTo begin, consider the two-state MDP depicted in Figure 1. This MDP abstracts a Faustian situation in which an agent repeatedly chooses between an immediately rewarding but ultimately harmful option (a1), or an unrewarding alternative (a2). For concreteness, we imagine the agent as faced with an endless supply of delicious cake (with \u03b3 > 0) and call these the \u201ccake\u201d and \u201cno cake\u201d actions.\nEating cake can cause a transition to x2, the \u201cbad state\u201d, whose value is independent of the agent\u2019s policy:\nV \u03c0(x2) := \u22122(1 + ) 1\n\u03b3 \u2200\u03c0 \u2208 \u03a0.\nIn state x1, however, the Q-values depend on the agent\u2019s future behaviour. For a policy \u03c0 \u2208 \u03a0, the value of a1 is\nQ\u03c0(x1, a1) = 1 + \u03b3\n[ 1\n2 V \u03c0(x1) +\n1 2 V \u03c0(x2)\n] (2)\n= 1 + \u03b3\n2 V \u03c0(x1)\u2212 (1 + ) =\n\u03b3 2 V \u03c0(x1)\u2212 .\nBy contrast, the value of a2 is\nQ\u03c0(x1, a2) = 0 + \u03b3V \u03c0(x1),\nwhich is greater thanQ\u03c0(x1, a1) for all \u03c0. It follows that not eating cake is optimal, and thus V \u2217(x1) = Q\u2217(x1, a2) = 0. Furthermore, (2) tells us that the value difference between optimal and second best action, or action gap, is\nQ\u2217(x1, a2)\u2212Q\u2217(x1, a1) = . Notice that Q\u2217(x1, a1) = \u2212 does not describe the value of any stationary policy. That is, the policy \u03c0\u0303 with \u03c0\u0303(x1) = a1 has value\nV \u03c0\u0303(x1) = \u2212 + \u03b3\n2 V \u03c0\u0303(x1) = \u2212 1\u2212 \u03b3/2 , (3)\nand in particular this value is lower than Q\u2217(x1, a1). Instead,Q\u2217(x1, a1) describes the value of a nonstationary policy which eats cake once, but then subsequently abstains.\nSo far we have considered the Q-functions of given stationary policies \u03c0, and argued that these are nonstationary. We now make a similar statement about the Bellman operator: for any Q \u2208 Q, the nongreedy components of Q\u2032 := T Q do not generally describe the expected return of stationary policies. Hence the Bellman operator is not restricted to \u03a0.\nWhen the MDP of interest can be solved exactly, this nonstationarity is a non-issue since only the Q-values for optimal actions matter. In the presence of estimation or approximation error, however, small perturbations in the Q-function may result in erroneously identifying the optimal action. Our example illustrates this effect: an estimate Q\u0302 of Q\u2217 which is off by can induce a pessimal greedy policy (i.e. \u03c0\u0303).\nTo address this issue, we may be tempted to define a new Q-function which explicitly incorporates stationarity:\nQ\u03c0STAT(x, a) := R(x, a) + \u03b3EP max b\u2208A\nQ\u03c0 \u2032 STAT(x \u2032, b), (4)\n\u03c0\u2032(y) := { a if y = x, \u03c0(y) otherwise.\nUnder this new definition, the action gap of the optimal policy is 1\u2212\u03b3/2 > Q\n\u2217(x1, a2)\u2212Q\u2217(x1, a1). Unfortunately, (4) does not visibly yield a useful operator on Q. As a practical approximation we now propose the consistent Bellman operator, which preserves a local form of stationarity:\nTCQ(x, a) := R(x, a) + (5) \u03b3EP [ I[x 6=x\u2032] max\nb\u2208A Q(x\u2032, b) + I[x=x\u2032]Q(x, a)\n] .\nEffectively, our operator redefines the meaning of Q-values: if from state x \u2208 X an action a is taken and the next state is x\u2032 = x then a is again taken. In our example, this new Q-value describes the expected return for repeatedly eating cake until a transition to the unpleasant state x2.\nSince the optimal policy \u03c0\u2217 is stationary, we may intuit that iterated application of this new operator also yields \u03c0\u2217. In fact, below we show that the consistent Bellman operator is both optimality-preserving and, in the presence of direct loops in the corresponding transition graph, gap-increasing: Definition 1. An operator T \u2032 is optimality-preserving if, for any Q0 \u2208 Q and x \u2208 X , letting Qk+1 := T \u2032Qk,\nV\u0303 (x) := lim k\u2192\u221e max a\u2208A Qk(x, a)\nexists, is unique, V\u0303 (x) = V \u2217(x), and for all a \u2208 A, Q\u2217(x, a) < V \u2217(x, a) =\u21d2 lim sup\nk\u2192\u221e Qk(x, a) < V\n\u2217(x).\nThus under an optimality-preserving operator at least one optimal action remains optimal, and suboptimal actions remain suboptimal. Definition 2. Let M be an MDP. An operator T \u2032 for M is gap-increasing if for all Q0 \u2208 Q, x \u2208 X , a \u2208 A, letting Qk+1 := T \u2032Qk and Vk(x) := maxbQk(x, b),\nlim inf k\u2192\u221e\n[ Vk(x)\u2212Qk(x, a) ] \u2265 V \u2217(x)\u2212Q\u2217(x, a). (6)\nWe are particularly interested in operators which are strictly gap-increasing, in the sense that (6) is a strict inequality for at least one (x, a) pair.\nOur two-state MDP illustrates the first benefit of increasing the action gap: a greater robustness to estimation error. Indeed, under our new operator the optimal Q-value of eating cake becomes\nQ\u0303(x1, a1) = \u03b3\n2 Q\u0303(x1, a1)\u2212 = \u2212 1\u2212 \u03b3/2 ,\nwhich is, again, smaller thanQ\u2217(x1, a1) whenever \u03b3 > 0. In the presence of approximation error in the Q-values, we may thus expect Q\u0303(x1, a1) < Q\u0303(x1, a2) to occur more frequently than the converse."}, {"heading": "Aggregation Methods", "text": "At first glance, the use of an indicator function in (5) may seem limiting: P (x |x, a) may be zero or close to zero everywhere, or the state may be described by features which preclude a meaningful identity test I[x=x\u2032]. There is, however, one important family of value functions which have \u201ctabular-like\u201d properties: aggregation schemes (Bertsekas 2011). As we now show, the consistent Bellman operator is well-defined for all aggregation schemes.\nAn aggregation scheme for M is a tuple (Z, A,D) where Z is a set of aggregate states, A is a mapping from X to distributions over Z , and D is a mapping from Z to distributions over X . For z \u2208 Z, x\u2032 \u2208 X let ED := Ex\u223cD(\u00b7 | z) and EA := Ez\u2032\u223cA(\u00b7 | x\u2032), where as before we assign specific roles to x, x\u2032 \u2208 X and z, z\u2032 \u2208 Z . We define the aggregation Bellman operator TA : QZ,A \u2192 QZ,A as\nTAQ(z, a) := ED [ R(x, a) + \u03b3EP EA max\nb\u2208A Q(z\u2032, b)\n] . (7)\nWhen Z is a finite subset of X and D corresponds to the identity transition function, i.e. D(x | z) = I[x=z], we recover the class of averagers (Gordon 1995; e.g., multilinear interpolation, illustrated in Figure 2) and kernel-based methods (Ormoneit and Sen 2002). If A also corresponds to the identity and X is finite, TA reduces to the Bellman operator (1) and we recover the familiar tabular representation (Sutton and Barto 1998).\nGeneralizing (5), we define the consistent Bellman operator TC over QZ,A: TCQ(z, a) := ED [ R(x, a) + (8)\n\u03b3EP EA [ I[z 6=z\u2032] max\nb\u2208A Q(z\u2032, b) + I[z=z\u2032]Q(z, a)\n]] .\nIntuitively (see, e.g., Bertsekas 2011), the D and A mappings induce a new MDP, M \u2032 := (Z,A, P \u2032, R\u2032, \u03b3) with\nR\u2032(z, a) := ED R(x, a),\nP \u2032(z\u2032\u2032 | z, a) := EDEP EA I[z\u2032\u2032=z\u2032]. In this light, we see that our original definition of TC and (8) only differ in their interpretation of the transition kernel. Thus the consistent Bellman operator remains relevant in cases where P is a deterministic transition kernel, for example when applying multilinear or barycentric interpolation to continuous space MDPs (e.g. Munos and Moore 1998).\nQ-Value Interpolation Aggregation schemes as defined above do not immediately yield a Q-function over X . Indeed, the Q-value at an arbitrary x \u2208 X is defined (in the ordinary Bellman operator sense) as\nQ(x, a) := R(x, a) + \u03b3EP EA max b\u2208A\nQ(z\u2032, b), (9)\nwhich may only be computed from a full or partial model of the MDP, or by inverting D. It is often the case that neither is feasible. One solution is instead to perform Q-value interpolation:\nQ(x, a) := Ez\u2032\u223cA(\u00b7 | x)Q(z\u2032, a),\nwhich is reasonable when A(\u00b7 |x) are interpolation coefficients1. This gives the related Bellman operator\nTQVIQ(z, a) := ED [ R(x, a) + \u03b3EP max\nb\u2208A Q(x\u2032, b)\n] ,\nwith TQVIQ(z, a) \u2264 T Q(z, a) by convexity of the max operation. From here one may be tempted to define the corresponding consistent operator as\nT \u2032QVIQ(z, a) := ED [ R(x, a) +\n\u03b3EP max b\u2208A\n[ Q(x\u2032, b)\u2212A(z |x\u2032) ( Q(z, b)\u2212Q(z, a) )]] .\nWhile T \u2032QVI remains a contraction, T \u2032QVIQ(z, a) \u2264 TQVIQ(z, a) is not guaranteed, and it is easy to show that T \u2032QVI is not optimality-preserving. Instead we define the consistent Q-value interpolation Bellman operator as\nTCQVIQ := min { TQVIQ, T \u2032QVIQ } . (10)\nAs a corollary to Theorem 1 below we will prove that TCQVI is also optimality-preserving and gap-increasing.\n1One then typically, but not always, takes D to be the identity."}, {"heading": "Experiments on the Bicycle Domain", "text": "We now study the behaviour of our new operators on the bicycle domain (Randlov and Alstrom 1998). In this domain, the agent must simultaneously balance a simulated bicycle and drive it to a goal 1km north of its initial position. Each time step consists of a hundredth of a second, with a successful episode typically lasting 50,000 or more steps. The driving aspect of this problem is particularly challenging for value-based methods, since each step contributes little to an eventual success and the \u201ccurse of dimensionality\u201d (Bellman 1957) precludes a fine representation of the state-space. In this setting our consistent operator provides significantly improved performance and stability.\nWe approximated value functions using multilinear interpolation on a uniform 10\u00d7\u00b7 \u00b7 \u00b7\u00d710 grid over a 6-dimensional feature vector \u03d5 := (\u03c9, \u03c9\u0307, \u03b8, \u03b8\u0307, \u03c8, d). The first four components of \u03d5 describe relevant angles and angular velocities, while \u03c8 and d are polar coordinates describing the bicycle\u2019s position relative to the goal. We approximated Q-functions using Q-value interpolation (TCQVI) over this grid, since in a typical setting we may not have access to a forward model.\nWe are interested here in the quality of the value functions produced by different operators. We thus computed our Q-functions using value iteration, rather than a trajectorybased method such as Q-Learning. More precisely, at each iteration we simultaneously apply our operator to all grid points, with expected next state values estimated from samples. The interested reader may find full experimental details and videos in the appendix.2\nWhile the limiting value functions (V\u0303 and V \u2217) coincide on Z \u2286 X (by the optimality-preserving property), they may differ significantly elsewhere. For x \u2208 X we have\nV\u0303 (x) = maxa Q\u0303(x, a) = maxaEA(\u00b7 | x) Q\u0303(z, a)\n6= V \u2217(x) in general. This is especially relevant in the relatively highdimensional bicycle domain, where a fine discretization of the state space is not practical and most of the trajectories take place \u201cfar\u201d from grid points. As an example, consider \u03c8, the relative angle to the goal: each grid cell covers an arc of 2\u03c0/10 = \u03c0/5, while a single time step typically changes \u03c8 by less than \u03c0/1000.\nFigure 3 summarizes our results. Policies derived from our consistent operator can safely balance the bicycle earlier on, and also reach the goal earlier than policies derived from the Bellman operator. Note, in particular, the striking difference in the trajectories followed by the resulting policies. The effect is even more pronounced when using a 8 \u00d7 \u00b7 \u00b7 \u00b7 \u00d7 8 grid (results provided in the appendix). Effectively, by decreasing suboptimal Q-values at grid points we produce much better policies within the grid cells. This phenomenon is consistent with the theoretical results of Farahmand (2011) relating the size of action gaps to the quality of derived greedy policies. Thus we find a second benefit to increasing the action gap: it improves policies derived from Q-value interpolation.\n2Videos: https://youtu.be/0pUFjNuom1A"}, {"heading": "A Family of Convergent Operators", "text": "One may ask whether it is possible to extend the consistent Bellman operator to Q-value approximation schemes which lack a probabilistic interpretation, such as linear approximation (Sutton 1996), locally weighted regression (Atkeson 1991), neural networks (Tesauro 1995), or even informationtheoretic methods (Veness et al. 2015). In this section we answer by the affirmative.\nThe family of operators which we describe here are applicable to arbitrary Q-value approximation schemes. While these operators are in general no longer contractions, they are gap-increasing, and optimality-preserving when the Qfunction is represented exactly. Theorem 1 is our main result; one corollary is a convergence proof for Baird\u2019s advantage learning (Baird 1999). Incidentally, our taking the minimum in (10) was in fact no accident, but rather a simple application of this theorem. Theorem 1. Let T be the Bellman operator defined by (1). Let T \u2032 be an operator with the property that there exists an \u03b1 \u2208 [0, 1) such that for all Q \u2208 Q, x \u2208 X , a \u2208 A, and letting V (x) := maxbQ(x, b),\n1. T \u2032Q(x, a) \u2264 T Q(x, a), and 2. T \u2032Q(x, a) \u2265 T Q(x, a)\u2212 \u03b1 [V (x)\u2212Q(x, a)]. Then T \u2032 is both optimality-preserving and gap-increasing.\nThus any operator which satisfies the conditions of Theorem 1 will eventually yield an optimal greedy policy, assuming an exact representation of the Q-function. Condition 2, in particular, states that we may subtract up to (but not including) maxbQk(x, b) \u2212 Qk(x, a) from Qk(x, a) at each iteration. This is exactly the action gap at (x, a), but for Qk,\nrather than the optimal Q\u2217. For a particular x, this implies we may initially devalue the optimal action a\u2217 := \u03c0\u2217(x) in favour of the greedy action. But our theorem shows that a\u2217 cannot be undervalued infinitely often, and in factQk(x, a\u2217) must ultimately reach V \u2217(x).3 The proof of this perhaps surprising result may be found in the appendix.\nTo the best of our knowledge, Theorem 1 is the first result to show the convergence of iterates of dynamic programming-like operators without resorting to a contraction argument. Indeed, the conditions of Theorem 1 are particularly weak: we do not require T \u2032 to be a contraction, nor do we assume the existence of a fixed point (in the Qfunction space Q) of T \u2032. In fact, the conditions laid out in Theorem 1 characterize the set of optimality-preserving operators on Q, in the following sense: Remark 1. There exists a single-state MDP M and an operator T \u2032 with either\n1. T \u2032Q(x, a) > T Q(x, a) or 2. T \u2032Q(x, a) < T Q(x, a)\u2212 [V (x)\u2212Q(x, a)], and in both cases there exists a Q0 \u2208 Q for which limk\u2192\u221emaxa(T \u2032)kQ0(x, a) 6= V \u2217(x).\nWe note that the above remark does not cover the case where condition (2) is an equality (i.e., \u03b1 = 1). We leave as an open problem the existence of a divergent example for \u03b1 = 1.\nCorollary 1. The consistent Bellman operator TC (8) and consistent Q-value interpolation Bellman operator TCQVI (10) are optimality-preserving.\nIn fact, it is not hard to show that the consistent Bellman operator (7) is a contraction, and thus enjoys even stronger convergence guarantees than those provided by Theorem 1. Informally, whenever Condition 2 of the theorem is strengthened to an inequality, we may also expect our operators to be gap-increasing; this is in fact the case for both of our consistent operators.\nTo conclude this section, we describe a few operators which satisfy the conditions of Theorem 1, and are thus optimality-preserving and gap-increasing. Critically, none of these operators are contractions; one of them, the \u201clazy\u201d operator, also possesses multiple fixed points."}, {"heading": "Baird\u2019s Advantage Learning", "text": "The method of advantage learning was proposed by Baird (1999) as a means of increasing the gap between the optimal and suboptimal actions in the context of residual algorithms applied to continuous time problems.4 The corresponding operator is\nT \u2032Q(x, a) = K\u22121 [ R(x, a) +\n\u03b3\u2206t EP V (x\u2032) + (K \u2212 1)V (x) ] ,\n3When two or more actions are optimal, we are only guaranteed that one of them will ultimately be correctly valued. The \u201c1-lazy\u201d operator described below exemplifies this possibility.\n4Advantage updating, also by Baird, is a popular but different idea where an agent maintains both V and A := Q\u2212 V .\nwhere \u2206t > 0 is a time constant and K := C\u2206t with C > 0. Taking \u2206t = 1 and \u03b1 := 1\u2212K, we define a new operator with the same fixed point but a now-familiar form:\nTALQ(x, a) := T Q(x, a)\u2212 \u03b1 [V (x)\u2212Q(x, a)] . Note that, while the two operators are motivated by the same principle and share the same fixed point, they are not isomorphic. We believe our version to be more stable in practice, as it avoids the multiplication by the K\u22121 term. Corollary 2. For \u03b1 \u2208 [0, 1), the advantage learning operator TAL has a unique limit VAL \u2208 V , and VAL = V \u2217.\nWhile our consistent Bellman operator originates from different principles, there is in fact a close relationship between it and the advantage learning operator. Indeed, we can rewrite (5) as\nTCQ(x, a) = T Q(x, a)\u2212 \u03b3P (x |x, a) [V (x)\u2212Q(x, a)] , which corresponds to advantage learning with a (x, a)dependent \u03b1 parameter."}, {"heading": "Persistent Advantage Learning", "text": "In domains with a high temporal resolution, it may be advantageous to encourage greedy policies which infrequently switch between actions \u2014 to encourage a form of persistence. We define an operator which favours repeated actions:\nTPALQ(x, a) := max { TALQ(x, a), R(x, a) + \u03b3EP Q(x\u2032, a) } .\nNote that the second term of the max can also be written as\nT Q(x, a)\u2212 \u03b3EP [V (x\u2032)\u2212Q(x\u2032, a)] . As we shall see below, persistent advantage learning achieves excellent performance on Atari 2600 games."}, {"heading": "The Lazy Operator", "text": "As a curiosity, consider the following operator with \u03b1 \u2208 [0, 1):\nT \u2032Q(x, a) :=  Q(x, a) if Q(x, a)\u2264T Q(x, a) and T Q(x, a) \u2264\u03b1V (x) + (1\u2212 \u03b1)Q(x, a),\nT Q(x, a) otherwise. This \u03b1-lazy operator only updatesQ-values when this would affect the greedy policy. And yet, Theorem 1 applies! Hence T \u2032 is optimality-preserving and gap-increasing, even though it may possess a multitude of fixed points in Q. Of note, while Theorem 1 does not apply to the 1-lazy operator, the latter is also optimality-preserving; in this case, however, we are only guaranteed that one optimal action remain optimal."}, {"heading": "Experimental Results on Atari 2600", "text": "We evaluated our new operators on the Arcade Learning Environment (ALE; Bellemare et al. 2013), a reinforcement learning interface to Atari 2600 games. In the ALE, a frame lasts 1/60th of a second, with actions typically selected every four frames. Intuitively, the ALE setting is related to continuous domains such as the bicycle domain studied above, in the sense that each individual action has little effect on the game.\nFor our evaluation, we trained agents based on the Deep Q-Network (DQN) architecture of Mnih et al. (2015). DQN acts according to an -greedy policy over a learned neuralnetwork Q-function. DQN uses an experience replay mechanism to train this Q-function, performing gradient descent on the sample squared error \u2206Q(x, a)2, where\n\u2206Q(x, a) := R(x, a) + \u03b3V (x\u2032)\u2212Q(x, a), where (x, a, x\u2032) is a previously observed transition. We define the corresponding errors for our operators as\n\u2206ALQ(x, a) := \u2206Q(x, a)\u2212 \u03b1[V (x)\u2212Q(x, a)], \u2206PALQ(x, a) := max { \u2206ALQ(x, a),\n\u2206Q(x, a)\u2212 \u03b1[V (x\u2032)\u2212Q(x\u2032, a)] } ,\nwhere we further parametrized the weight given to Q(x\u2032, a) in persistent advantage learning (compare with TPAL).\nOur first experiment used one of the new ALE standard versions, which we call here the Stochastic Minimal setting. This setting includes stochasticity applied to the Atari 2600 controls, no death information, and a per-game minimal action set. Specifically, at each frame (not time step) the environment accepts the agent\u2019s action with probability 1 \u2212 p, or rejects it with probability p (here, p = 0.25). If an action is rejected, the previous frame\u2019s action is repeated. In our setting the agent selects a new action every four frames: the stochastic controls therefore approximate a form of reaction delay. As evidenced by a lower DQN performance, Stochastic Minimal is more challenging than previous settings.\nWe trained each agent for 100 million frames using either regular Bellman updates, advantage learning (A.L.), or persistent advantage learning (P.A.L.). We optimized the \u03b1 parameters over 5 training games and tested our algorithms on 55 more games using 10 independent trials each.\nFor each game, we performed a paired t-test (99% C.I.) on the post-training evaluation scores obtained by our algorithms and DQN. A.L. and P.A.L. are statistically better than DQN on 37 and 35 out of 60 games, respectively; both perform worse on one (ATLANTIS, JAMES BOND). P.A.L. often achieves higher scores than A.L., and is statistically better on 16 games and worse on 6. These results are especially remarkable given that the only difference between DQN and our operators is a simple modification to the update rule.\nFor comparison, we also trained agents using the Original DQN setting (Mnih et al. 2015), in particular using a longer 200 million frames of training. Figure 4 depicts learning curves for two games, ASTERIX and SPACE INVADERS. These curves are representative of our results, rather than exceptional: on most games, advantage learning outperforms Bellman updates, and persistent advantage learning further improves on this result. Across games, the median score improvement over DQN is 8.4% for A.L. and 9.1% for P.A.L., while the average score improvement is respectively 27.0% and 32.5%. Full experimental details are provided in the appendix.\nThe learning curve for ASTERIX illustrates the poor performance of DQN on certain games. Recently, van Hasselt, Guez, and Silver (2016) argued that this poor performance\nstems from the instability of the Q-functions learned from Bellman updates, and provided conclusive empirical evidence to this effect. In the spirit of their work, we compared our learned Q-functions on a single trajectory generated by a trained DQN agent playing SPACE INVADERS in the Original DQN setting. For each Q-function and each state x along the trajectory, we computed V (x) as well as the action gap at x.\nThe value functions and action gaps resulting from this experiment5 are depicted in Figure 5. As expected, the action gaps are significantly greater for both of our operators, in comparison to the action gaps produced by DQN. Furthermore, the value estimates are themselves lower, and correspond to more realistic estimates of the true value function. In their experiments, van Hasselt et al. observed a similar effect on the value estimates when replacing the Bellman updates with Double Q-Learning updates, one of many solutions recently proposed to mitigate the negative impact of statistical bias in value function estimation (van Hasselt 2010; Azar et al. 2011; Lee, Defourny, and Powell 2013). This bias is positive and is a consequence of the max term in the Bellman operator. We hypothesize that the lower value estimates observed in Figure 5 are also a consequence of bias reduction. Specifically, increased action gaps are consistent with a bias reduction: it is easily shown that the value estimation bias is strongest when Q-values are close to each other. If our hypothesis holds true, the third benefit of increasing the action gap is thus to mitigate the statistical bias of Q-value estimates.\n5Videos: https://youtu.be/wDfUnMY3vF8"}, {"heading": "Open Questions", "text": "Weaker Conditions for Optimality. At the core of our results lies the redefinition of Q-values in order to facilitate approximate value estimation. Theorem 1 and our empirical results indicate that there are many practical operators which do not preserve suboptimal Q-values. Naturally, preserving the optimal value function V is itself unnecessary, as long as the iterates converge to a Q-function Q\u0303 for which arg maxa Q\u0303(x, a) = \u03c0\n\u2217(x). It may well be that even weaker conditions for optimality exist than those required by Theorem 1. At the present, however, our proof technique does not appear to extend to this case. Statistical Efficiency of New Operators. Advantage learning (as given by our redefinition) may be viewed as a generalization of the consistent Bellman operator when P (\u00b7 |x, a) is unknown or irrelevant. In this light, we ask: is there a probabilistic interpretation to advantage learning? We further wonder about the statistical efficiency of the consistent Bellman operator: is it ever less efficient than the usual Bellman operator, when considering the probability of misclassifying the optimal action? Both of these answers might shed some light on the differences in performance observed in our experiments. Maximally Efficient Operator. Having revealed the existence of a broad family of optimality-preserving operators, we may now wonder which of these operators, if any, should be preferred to the Bellman operator. Clearly, there are trivial MDPs on which any optimality-preserving operator performs equally well. However, we may ask whether there is, for a given MDP, a \u201cmaximally efficient\u201d optimalitypreserving operator; and whether a learning agent can benefit from simultaneously searching for this operator while estimating a value function."}, {"heading": "Concluding Remarks", "text": "We presented in this paper a family of optimality-preserving operators, of which the consistent Bellman operator is a distinguished member. At the center of our pursuits lay the desire to increase the action gap; we showed through experiments that this gap plays a central role in the performance of greedy policies over approximate value functions, and how significantly increased performance could be obtained by a simple modification of the Bellman operator. We believe our work highlights the inadequacy of the classical Q-function at producing reliable policies in practice, calls into question the traditional policy-value relationship in value-based reinforcement learning, and illustrates how revisiting the concept of value itself can be fruitful."}, {"heading": "Acknowledgments", "text": "The authors thank Michael Bowling, Csaba Szepesva\u0301ri, Craig Boutilier, Dale Schuurmans, Marty Zinkevich, Lihong Li, Thomas Degris, and Joseph Modayil for useful discussions, as well as the anonymous reviewers for their excellent feedback."}, {"heading": "Appendix", "text": "This appendix is divided into three sections. In the first section we present the proofs of our theoretical results. In the second we provide experimental details and additional results for the Bicycle domain. In the final section we provide details of our experiments on the Arcade Learning Environment, including results on 60 games."}, {"heading": "Theoretical Results", "text": "Lemma 1. Let Q \u2208 Q and \u03c0Q be the policy greedy with respect to Q. Let T \u2032 be an operator with the properties that, for all x \u2208 X , a \u2208 A,\n1. T \u2032Q(x, a) \u2264 T Q(x, a), and 2. T \u2032Q(x, \u03c0Q(x)) = T Q(x, \u03c0Q(x)). Consider the sequenceQk+1 := T \u2032Qk withQ0 \u2208 Q, and let Vk(x) := maxaQk(x, a). Then the sequence (Vk : k \u2208 N) converges, and furthermore, for all x \u2208 X ,\nlim k\u2192\u221e\nVk(x) \u2264 V \u2217(x).\nProof. By Condition 1, we have that\nlim sup k\u2192\u221e Qk(x, a) = lim sup k\u2192\u221e\n(T \u2032)kQ0(x, a)\n\u2264 lim sup k\u2192\u221e T kQ0(x, a) = Q\u2217(x, a),\nsince T has a unique fixed point. From this we deduce the second claim. Now, for a given x \u2208 X , let ak := \u03c0k(x) := arg maxaQk(x, a) and Pk := P (\u00b7 |x, ak). We have Vk+1(x) \u2265 Qk+1(x, ak) = T \u2032Qk(x, ak)\n= T Qk(x, ak) = T Qk\u22121(x, ak) + \u03b3EPk [Vk(x\u2032)\u2212 Vk\u22121(x\u2032)] \u2265 T \u2032Qk\u22121(x, ak) + \u03b3EPk [Vk(x\u2032)\u2212 Vk\u22121(x\u2032)] = Vk(x) + \u03b3EPk [Vk(x\n\u2032)\u2212 Vk\u22121(x\u2032)] , where in the second line we used Condition 2 of the lemma, and in the third the definition of T applied to Qk. Thus we have\nVk+1(x)\u2212 Vk(x) \u2265 \u03b3EPk [Vk(x\u2032)\u2212 Vk\u22121(x\u2032)] , and by induction\nVk+1(x)\u2212 Vk(x) \u2265 \u03b3kEP1:k [V1(x\u2032)\u2212 V0(x\u2032)] , (11) where P1:k := PkPk\u22121 . . . P1 is the k-step transition kernel at x derived from the nonstationary policy \u03c0k\u03c0k\u22121 . . . \u03c01. Let V\u0303 (x) := lim supk\u2192\u221e Vk(x). We now show that lim infk\u2192\u221e Vk(x) = V\u0303 (x) also. First note that Conditions 1 and 2, together with the boundedness of V0, ensure that V1 is also bounded and thus \u2016V1 \u2212 V0\u2016\u221e <\u221e. By definition, for any \u03b4 > 0 and n \u2208 N, \u2203k \u2265 n such that Vk(x) > V\u0303 (x)\u2212 \u03b4. Since P1:k is a nonexpansion in\u221e-norm, we have\nVk+1(x)\u2212 Vk(x) \u2265 \u2212\u03b3k \u2016V1 \u2212 V0\u2016\u221e \u2265 \u2212\u03b3n \u2016V1 \u2212 V0\u2016\u221e =: \u2212 ,\nand for all t \u2208 N,\nVk+t(x)\u2212 Vk(x) \u2265 \u2212 t\u22121\u2211 i=0 \u03b3i \u2265 \u2212 1\u2212 \u03b3 ,\nsuch that\ninf t\u2208N\nVk+t(x) \u2265 V\u0303 (x)\u2212 \u03b4 \u2212\n1\u2212 \u03b3 .\nIt follows that for any x \u2208 X and \u03b4\u2032 > 0, we can choose an n \u2208 N to make small enough such that for all k \u2265 n, Vk(x) > V\u0303 (x)\u2212 \u03b4\u2032. Hence\nlim inf k\u2192\u221e Vk(x) = V\u0303 (x),\nand thus Vk(x) converges.\nLemma 2. Let T \u2032 be an operator satisfying the conditions of Lemma 1, and let \u2016R\u2016\u221e := maxx,aR(x, a). Then for all x \u2208 X and all k \u2208 N,\n|Vk(x)| \u2264 1 1\u2212 \u03b3 [ 2 \u2016V0\u2016\u221e + \u2016R\u2016\u221e ] . (12)\nProof. Following the derivation of Lemma 1, we have\nVk+1(x)\u2212 V0(x) \u2265 \u2212 k\u2211 i=1 \u03b3i \u2016V1 \u2212 V0\u2016\u221e\n\u2265 \u22121 1\u2212 \u03b3 \u2016V1 \u2212 V0\u2016\u221e .\nBy the same derivation, for a0 := arg maxaQ0(x, a) we have V1(x) \u2265 T Q0(x, a0). But then\nV1(x)\u2212 V0(x) \u2265 R(x, a0) + \u03b3EP0 V0(x\u2032)\u2212 V0(x), from which the lower bound follows. Now let Pk be defined as in the proof of Lemma 1, and assume the upper bound of (12) holds up to k \u2208 N. Then\nVk+1(x) = maxaQk+1(x, a) = maxa T \u2032Qk(x, a) \u2264 maxa T Qk(x, a) = maxa [ R(x, a) + \u03b3EPk Vk(x \u2032) ]\n\u2264 \u2016R\u2016\u221e + \u03b3 \u2016Vk\u2016\u221e \u2264 \u2016R\u2016\u221e + \u03b3\n1\u2212 \u03b3 [2 \u2016V0\u2016\u221e + \u2016R\u2016\u221e]\n\u2264 1 1\u2212 \u03b3 [2 \u2016V0\u2016\u221e + \u2016R\u2016\u221e] ,\nand combined with the fact that (12) holds for k = 0 this proves the upper bound.\nTheorem 2. Let T be the Bellman operator ((1) in the main text). Let T \u2032 be an operator with the property that there exists an \u03b1 \u2208 [0, 1) such that for all Q \u2208 Q, x \u2208 X , a \u2208 A, and letting V (x) := maxbQ(x, b),\n1. T \u2032Q(x, a) \u2264 T Q(x, a), and\n2. T \u2032Q(x, a) \u2265 T Q(x, a)\u2212 \u03b1 [V (x)\u2212Q(x, a)]. Consider the sequence Qk+1 := T \u2032Qk with Q0 \u2208 Q, and Vk(x) := maxaQk(x, a). Then T \u2032 is optimality-preserving: for all x \u2208 X , (Vk(x) : k \u2208 N) converges,\nlim k\u2192\u221e\nVk(x) = V \u2217(x),\nand\nQ\u2217(x, a) < V \u2217(x) =\u21d2 lim sup k\u2192\u221e Qk(x, a) < V \u2217(x).\nFurthermore, T \u2032 is also gap-increasing: lim inf k\u2192\u221e [ Vk(x)\u2212Qk(x, a) ] \u2265 V \u2217(x)\u2212Q\u2217(x, a).\nProof. Note that these conditions imply the conditions of Lemma 1. Thus for all x \u2208 X , (Vk(x) : k \u2208 N) converges to the limit V\u0303 (x) \u2264 V \u2217(x). Now let Q\u0303(x, a) := lim supkQk(x, a). We have\nQ\u0303(x, a) = lim sup k\u2192\u221e\nT \u2032Qk(x, a)\n\u2264 lim sup k\u2192\u221e T Qk(x, a)\n= lim sup k\u2192\u221e\n[ R(x, a) + \u03b3EP max\nb\u2208A Qk(x\n\u2032, b) ] \u2264 R(x, a) + \u03b3EP lim sup\nk\u2192\u221e max b\u2208A\nQk(x \u2032, b) (13)\n= R(x, a) + \u03b3EP max b lim sup k\u2192\u221e\nQk(x \u2032, b) (14)\n= T Q\u0303(x, a), (15) where in (13) we used Jensen\u2019s inequality, and (14) follows from the commutativity of max and lim sup. Now\nQk+1(x, a) = T \u2032Qk(x, a) \u2265 T Qk(x, a)\u2212 \u03b1 [Vk(x)\u2212Qk(x, a)] = R(x, a) + \u03b3EP Vk(x\u2032)\u2212 \u03b1Vk(x) +\n\u03b1Qk(x, a). (16)\nNow, by Lemma 1 Vk(x) converges to V\u0303 (x). Furthermore, using Lemma 2 and Lebesgue\u2019s dominated convergence theorem, we have\nlim k\u2192\u221e\nEP Vk(x\u2032) = EP V\u0303 (x\u2032). (17)\nWe now take the lim sup of both sides of (16), which Lemma 2 guarantees exists, and obtain\nQ\u0303(x, a) \u2265 R(x, a) + \u03b3EP V\u0303 (x\u2032)\u2212 \u03b1V\u0303 (x) + \u03b1Q\u0303(x, a) = T Q\u0303(x, a)\u2212 \u03b1V\u0303 (x) + \u03b1Q\u0303(x, a).\nThus\nQ\u0303(x, a) \u2265 1 1\u2212 \u03b1\n[ T Q\u0303(x, a)\u2212 \u03b1V\u0303 (x) ] , and\nV\u0303 (x) \u2265 1 1\u2212 \u03b1 [ max a\u2208A T Q\u0303(x, a)\u2212 \u03b1V\u0303 (x) ] V\u0303 (x) \u2265 max\na\u2208A T Q\u0303(x, a).\nCombining the above with (15), we deduce that\nV\u0303 (x) = max a\u2208A T Q\u0303(x, a) = max a\u2208A\n[ R(x, a) + \u03b3EP V\u0303 (x\u2032) ] and, by uniqueness of the fixed point of the Bellman operator over V , it must be that V\u0303 = V \u2217.\nNow suppose that for some x \u2208 X , a\u0303 \u2208 A, we have Q\u2217(x, a\u0303) < V \u2217(x).\nBy Condition 1\nQk(x, a\u0303) = T \u2032Qk\u22121(x, a\u0303) \u2264 T Qk\u22121(x, a\u0303) = T Q\u2217(x, a\u0303)\u2212 \u03b3EPa\u0303 [V \u2217(x\u2032)\u2212 Vk\u22121(x\u2032)] = Q\u2217(x, a\u0303)\u2212 \u03b3EPa\u0303 [V \u2217(x\u2032)\u2212 Vk\u22121(x\u2032)] ,\nwhere Pa\u0303 := P (\u00b7 |x, a\u0303). Using (17) we take the lim sup on both sides and find that\nlim sup k\u2192\u221e\nQk(x, a\u0303) \u2264 Q\u2217(x, a\u0303)\u2212 \u03b3EPa\u0303 [ V \u2217(x\u2032)\u2212 V\u0303 (x\u2032) ] = Q\u2217(x, a\u0303)\n< V \u2217(x).\nWe conclude that\nQ\u2217(x, a) < V \u2217(x) =\u21d2 lim sup k\u2192\u221e Qk(x, a) < V \u2217(x).\nHence, T \u2032 is optimality-preserving. To prove that T \u2032 is gapincreasing, observe that the statement\nlim inf k\u2192\u221e\n[ Vk(x)\u2212Qk(x, a) ] \u2265 V \u2217(x)\u2212Q\u2217(x, a)\nis now equivalent to\nlim sup k\u2192\u221e\nQk(x, a) \u2264 Q\u2217(x, a) (18)\nsince limk Vk(x) = V \u2217(x). But we know (18) to be true from Condition 1 (see the proof of Lemma 1).\nCorollary 3. The consistent Bellman operator TC ((5) in the main text) and consistent Q-value interpolation Bellman operator TCQVI ((9) in the main text) are optimality-preserving and gap-increasing."}, {"heading": "Experimental Details: Bicycle", "text": "We used the bicycle simulator described by Randlov and Alstrom (1998) with a reward function which encourages driving towards the goal. Recall that Randlov and Alstrom\u2019s reward function is\nR(x, a) :=  \u22121 if bicycle falls0.01 if goal is reached(4\u2212 \u03c82)\u00d7 0.00004 otherwise As noted by Randlov and Alstrom themselves, this reward function is unsuitable for value iteration methods, since it\nrewards driving away from the goal. Instead we use the following related reward function\nR(x, a) :=  \u2212c if fallen1.0 if goal reached(\u03c02/4\u2212 \u03c82 \u2212 1)\u00d7 0.001 otherwise with c := ( 34\u03c0\n2 \u2212 1) \u00d7 0.001 the largest negative reward achievable by the agent. Empirically, we found this reward function easier to work with, while our results remained qualitatively similar for similar reward functions. We further use a discount factor of \u03b3 = 0.99.\nWe consider two sample-based operators on QZ,A, the space of Q-functions over representative states. The samplebased Q-value interpolation Bellman operator is defined as\nTQVIQ(z, a) := R(z, a) + \u03b3 1\nk k\u2211 i=1 max b\u2208A Q(x\u2032i, b),\nwith k \u2208 N and x\u2032i \u223c P (\u00b7 | z, a). The sample-based consistent Q-value interpolation Bellman operator TCQVI is similarly defined by sampling x\u2032 from P :\nT \u2032QVIQ(z, a) := R(z, a)+ \u03b3\nk k\u2211 i=1 max b\u2208A [ Q(x\u2032, b)\u2212A(z |x\u2032) (Q(z, b)\u2212Q(z, a)) ] TCQVIQ(z, a) := min { TQVIQ(z, a), T \u2032QVIQ(z, a) } .\nIn both cases, we use Q-value interpolation to define a Qfunction over X :\nQ(x, a) := Ez\u223cA(\u00b7 | x)Q(z, a).\nFor each operator T \u2032, we computed a sequence of Qfunctions Qk \u2208 QZ,A using an averaging form of value iteration:\nQk+1(z, a) = (1\u2212 \u03b7)Qk(z, a) + \u03b7T \u2032Qk(z, a), applied simultaneously to all z \u2208 Z and a \u2208 A. We chose this averaging version because it led to faster convergence, and lets us take k = 1 in the definition of both operators. From a parameter sweep we found \u03b7 = 0.1 to be a suitable step-size.\nOur multilinear grid was defined over the six state variables. As done elsewhere in the literature, we defined our grid over the following bounded variables:\n\u03c9 \u2208 [ \u22124\n9 \u03c0,\n4 9 \u03c0\n] ,\n\u03c9\u0307 \u2208 [\u22122, 2], \u03b8 \u2208 [ \u2212 \u03c0\n15 , \u03c0 15\n] ,\n\u03b8\u0307 \u2208 [\u22120.5, 0.5] , \u03c8 \u2208 [\u2212\u03c0, \u03c0], d \u2208 [10, 1200].\nValues outside of these ranges were accordingly set to the range\u2019s minimum or maximum.\nFor completeness, Figure 6 compares the performance of the Bellman and consistent Bellman operators, as well as advantage learning and persistent advantage learning (with \u03b1 = 0.1), on 8 \u00d7 \u00b7 \u00b7 \u00b7 \u00d7 8 and 10 \u00d7 \u00b7 \u00b7 \u00b7 \u00d7 10 grids. Here, the usual Bellman operator is unable to find a solution to the goal, while the consistent Bellman operator successfully does so. The two other operators also achieve superior performance compared to Bellman operator, although appear slightly more unstable in the smaller grid setting."}, {"heading": "Experimental Details: ALE", "text": "We omit details of the DQN architecture, which are provided in Mnih et al. (2015). A frame is a single emulation step within the ALE, while a time step consists of four consecutive frames which are treated atomically by the agent.\nOur first Atari 2600 experiment (Stochastic Minimal setting) used stochastic controls, which operate as follows: at each frame (not time step), the environment accepts the agent\u2019s action with probability 1\u2212p, or rejects it with probability p. If an action is rejected, the previous frame\u2019s action is repeated. In our setting, the agent selects a new action every four frames; in this situation, the stochastic controls approximate a form of reaction delay. This particular setting is part of the latest Arcade Learning Environment. For our experiments we use the ALE 0.5 standard value of p = 0.25, and trained agents for 100 million frames.\nOur second Atari 2600 experiment (Original DQN setting) was averaged over three different trials, ran for 200 million frames (instead of 100 million), defined a lost life as a termination signal, and did not use stochastic controls. This matches the experimental setting of Mnih et al. (2015). A full table of our results is provided in Table 1.\nOur last experiment took place in the Original DQN setting. We generated a trajectory from a trained DQN agent playing an -greedy policy with = 0.05. The full trajectory (up to the end of the episode) was recorded in this way.\nGame Bellman Advantage Learning Persistent A.L. ASTERIX 6074.98 12852.08 19564.90 BEAM RIDER 9316.10 10054.58 13145.34 PONG 19.80 19.66 19.76\nSEAQUEST 5458.17 8670.50 13230.74 SPACE INVADERS 2067.19 3460.79 3277.59\nALIEN 3154.67 4990.91 5699.81 AMIDAR 969.88 1557.43 1451.65 ASSAULT 4573.67 3661.51 3304.33 ASTEROIDS 1827.97 1924.42 1673.52\nATLANTIS 636657.62 553591.67 1465250.00 BANK HEIST 511.00 633.63 874.99 BATTLE ZONE 28082.91 28789.29 34583.07 BERZERK 667.61 747.26 1328.25 BOWLING 74.62 57.41 71.59\nBOXING 88.66 93.94 94.30 BREAKOUT 378.69 425.32 431.89 CARNIVAL 5238.14 5111.40 4679.93\nCENTIPEDE 5719.11 4225.18 4539.55 CHOPPER COMMAND 8195.88 5431.36 5734.93\nCRAZY CLIMBER 114105.56 123410.71 130002.71 DEFENDER\u2020 16746.68 30643.59 32038.93\nDEMON ATTACK 23212.19 27153.48 70908.17 DOUBLE DUNK -6.23 -0.15 -2.51 ELEVATOR ACTION 26675.00 27088.89 29100.00 ENDURO 776.14 1252.70 1343.10\nFISHING DERBY 11.65 21.32 28.13 FREEWAY 31.14 31.72 32.30\nFROSTBITE 1485.42 2305.82 3248.96 GOPHER 8479.98 11912.68 10611.81\nGRAVITAR 448.74 417.65 446.92 H.E.R.O. 18490.97 24788.86 24175.79 ICE HOCKEY -2.13 -1.24 -0.25 JAMES BOND 867.84 848.46 772.09\nKANGAROO 9157.98 10809.16 11478.46 KRULL 8500.48 9548.92 8689.81\nKUNG-FU MASTER 25977.53 32182.99 34650.91 MONTEZUMA\u2019S REVENGE 0.64 0.42 1.72\nMS. PAC-MAN 3081.29 4065.80 3917.55 NAME THIS GAME 8585.03 11025.26 10431.33\nPHOENIX\u2020 14278.95 22038.27 14495.56 PITFALL!\u2020 0.00 0.00 0.00\nPOOYAN 4736.79 4801.27 5858.84 PRIVATE EYE 957.83 5276.16 339.15\nQ*BERT 10840.83 14368.03 14254.78 RIVER RAID 7315.20 10585.12 12813.27 ROAD RUNNER 38042.07 52351.23 37856.16 ROBOTANK 61.97 69.31 70.53\nSKIING -13049.42 -13264.51 -12173.35 SOLARIS\u2020 4638.85 4785.16 3274.70\nSTAR GUNNER 55558.27 61353.59 61521.87 SURROUND -5.79 -4.15 0.72\nTENNIS 0.00 0.00 0.00 TIME PILOT 5788.96 8969.12 8749.26 TUTANKHAM 200.17 245.22 197.33 UP AND DOWN 12831.57 13909.74 13542.07\nVENTURE 373.79 198.69 243.75 VIDEO PINBALL 611840.72 543504.00 542052.00 WIZARD OF WOR 2410.47 9541.14 10254.01 YAR\u2019S REVENGE\u2020 21440.45 24240.03 17141.56\nZAXXON 6416.06 9129.61 8155.60 Times Best 12 21 31\nTable 1: Highest performance achieved by each of our operators. For each game, the score of the best operator is highlighted. Games with a \u2020 were not used by Bellemare et al. (2013). See Section 4 of the main text for more details.\nWe then queried the value functions of the trained agents, including the DQN used to generate the trajectory, in order to generate Figure 4 of the main text. For clarity we report action gaps averaged according to a rolling window of length 50.\nOut of the 60 games for which we report results, 5 are new when compared to the table of results provided by Bellemare et al. (2013). These five games are identified with a \u2020 in Table 1.\nDQN Implementation Details Recall that DQN maintains two networks in parallel: a policy network, which is used to select actions and is updated at every time step, and a target network. The target network is used to compute the error term \u2206Q, and is only updated every 10,000 time steps (Mnih et al. 2015). In our experiments we also used this target network to compute the \u2206ALQ and \u2206PALQ, including the added correction term. Our operators performed worse when the correction term was instead computed from the policy network."}, {"heading": "Parameter Selection", "text": "We used five training games (ASTERIX, BEAM RIDER, PONG, SEAQUEST, SPACE INVADERS) to select the \u03b1 parameter for both of our operators. Specifically, we trained agents using our second experimental setup with parameters\u03b1 \u2208 {0.0, 0.1, 0.3, 0.5, 0.7, 0.9, 1.0}, evaluated them according to the highest score achieved, and manually selected the \u03b1 value which seemed to achieve the best performance. Note that \u03b1 = 0.0 corresponds to DQN in both cases. Figure 7 depicts the results of this parameter sweep."}], "references": [{"title": "Using locally weighted regression for robot learning", "author": ["C.G. Atkeson"], "venue": "Proceedings of 1991 IEEE International Conference on Robotics and Automation, 958\u2013963.", "citeRegEx": "Atkeson,? 1991", "shortCiteRegEx": "Atkeson", "year": 1991}, {"title": "Speedy Q-learning", "author": ["M.G. Azar", "R. Munos", "M. Gavamzadeh", "H.J. Kappen"], "venue": "Advances in Neural Information Processing Systems 24.", "citeRegEx": "Azar et al\\.,? 2011", "shortCiteRegEx": "Azar et al\\.", "year": 2011}, {"title": "Reinforcement learning through gradient descent", "author": ["L.C. Baird"], "venue": "Ph.D. Dissertation, Carnegie Mellon University.", "citeRegEx": "Baird,? 1999", "shortCiteRegEx": "Baird", "year": 1999}, {"title": "The Arcade Learning Environment: An evaluation platform for general agents", "author": ["M.G. Bellemare", "Y. Naddaf", "J. Veness", "M. Bowling"], "venue": "Journal of Artificial Intelligence Research 47:253\u2013279.", "citeRegEx": "Bellemare et al\\.,? 2013", "shortCiteRegEx": "Bellemare et al\\.", "year": 2013}, {"title": "Dynamic programming", "author": ["R.E. Bellman"], "venue": "Princeton, NJ: Princeton University Press.", "citeRegEx": "Bellman,? 1957", "shortCiteRegEx": "Bellman", "year": 1957}, {"title": "Neuro-Dynamic Programming", "author": ["D.P. Bertsekas", "J.N. Tsitsiklis"], "venue": "Athena Scientific.", "citeRegEx": "Bertsekas and Tsitsiklis,? 1996", "shortCiteRegEx": "Bertsekas and Tsitsiklis", "year": 1996}, {"title": "Q-learning and enhanced policy iteration in discounted dynamic programming", "author": ["D.P. Bertsekas", "H. Yu"], "venue": "Mathematics of Operations Research 37(1):66\u201394.", "citeRegEx": "Bertsekas and Yu,? 2012", "shortCiteRegEx": "Bertsekas and Yu", "year": 2012}, {"title": "Approximate policy iteration: A survey and some new methods", "author": ["D.P. Bertsekas"], "venue": "Journal of Control Theory and Applications 9(3):310\u2013335.", "citeRegEx": "Bertsekas,? 2011", "shortCiteRegEx": "Bertsekas", "year": 2011}, {"title": "PILCO: A model-based and data-efficient approach to policy search", "author": ["M.P. Deisenroth", "C.E. Rasmussen"], "venue": "Proceedings of the International Conference on Machine Learning.", "citeRegEx": "Deisenroth and Rasmussen,? 2011", "shortCiteRegEx": "Deisenroth and Rasmussen", "year": 2011}, {"title": "Tree-based batch mode reinforcement learning", "author": ["D. Ernst", "P. Geurts", "L. Wehenkel"], "venue": "Journal of Machine Learning Research 6:503\u2013556.", "citeRegEx": "Ernst et al\\.,? 2005", "shortCiteRegEx": "Ernst et al\\.", "year": 2005}, {"title": "Action-gap phenomenon in reinforcement learning", "author": ["A. Farahmand"], "venue": "Advances in Neural Information Processing Systems 24.", "citeRegEx": "Farahmand,? 2011", "shortCiteRegEx": "Farahmand", "year": 2011}, {"title": "Stable function approximation in dynamic programming", "author": ["G. Gordon"], "venue": "Proceedings of the Twelfth International Conference on Machine Learning.", "citeRegEx": "Gordon,? 1995", "shortCiteRegEx": "Gordon", "year": 1995}, {"title": "System identification of post stall aerodynamics for UAV perching", "author": ["W. Hoburg", "R. Tedrake"], "venue": "Proceedings of the AIAA Infotech Aerospace Conference.", "citeRegEx": "Hoburg and Tedrake,? 2009", "shortCiteRegEx": "Hoburg and Tedrake", "year": 2009}, {"title": "Optimal hour ahead bidding in the real time electricity market with battery storage using approximate dynamic programming", "author": ["D.R. Jiang", "W.B. Powell"], "venue": "INFORMS Journal on Computing 27(3):525 \u2013 543.", "citeRegEx": "Jiang and Powell,? 2015", "shortCiteRegEx": "Jiang and Powell", "year": 2015}, {"title": "Numerical methods for stochastic control problems in continuous time", "author": ["H. Kushner", "P.G. Dupuis"], "venue": "Springer.", "citeRegEx": "Kushner and Dupuis,? 2001", "shortCiteRegEx": "Kushner and Dupuis", "year": 2001}, {"title": "Biascorrected Q-learning to control max-operator bias in Qlearning", "author": ["D. Lee", "B. Defourny", "W.B. Powell"], "venue": "Symposium on Adaptive Dynamic Programming And Reinforcement Learning.", "citeRegEx": "Lee et al\\.,? 2013", "shortCiteRegEx": "Lee et al\\.", "year": 2013}, {"title": "Humanlevel control through deep reinforcement learning", "author": ["V. Mnih", "K. Kavukcuoglu", "D. Silver", "A.A. Rusu", "J. Veness", "M.G. Bellemare", "A. Graves", "M. Riedmiller", "A.K. Fidjeland", "G Ostrovski"], "venue": "Nature", "citeRegEx": "Mnih et al\\.,? \\Q2015\\E", "shortCiteRegEx": "Mnih et al\\.", "year": 2015}, {"title": "Barycentric interpolators for continuous space & time reinforcement learning", "author": ["R. Munos", "A. Moore"], "venue": "Advances in Neural Information Processing Systems 11.", "citeRegEx": "Munos and Moore,? 1998", "shortCiteRegEx": "Munos and Moore", "year": 1998}, {"title": "Variable resolution discretization in optimal control", "author": ["R. Munos", "A. Moore"], "venue": "Machine learning 49(23):291\u2013323.", "citeRegEx": "Munos and Moore,? 2002", "shortCiteRegEx": "Munos and Moore", "year": 2002}, {"title": "Kernel-based reinforcement learning", "author": ["D. Ormoneit", "\u015a. Sen"], "venue": "Machine learning 49(2-3):161\u2013178.", "citeRegEx": "Ormoneit and Sen,? 2002", "shortCiteRegEx": "Ormoneit and Sen", "year": 2002}, {"title": "Learning to drive a bicycle using reinforcement learning and shaping", "author": ["J. Randlov", "P. Alstrom"], "venue": "Proceedings of the Fifteenth International Conference on Machine Learning.", "citeRegEx": "Randlov and Alstrom,? 1998", "shortCiteRegEx": "Randlov and Alstrom", "year": 1998}, {"title": "Reinforcement learning for robot soccer", "author": ["M. Riedmiller", "T. Gabel", "R. Hafner", "S. Lange"], "venue": "Autonomous Robots 27(1):55\u201373.", "citeRegEx": "Riedmiller et al\\.,? 2009", "shortCiteRegEx": "Riedmiller et al\\.", "year": 2009}, {"title": "On-line Qlearning using connectionist systems", "author": ["G.A. Rummery", "M. Niranjan"], "venue": "Technical report, Cambridge University Engineering Department.", "citeRegEx": "Rummery and Niranjan,? 1994", "shortCiteRegEx": "Rummery and Niranjan", "year": 1994}, {"title": "Reinforcement learning: An introduction", "author": ["R.S. Sutton", "A.G. Barto"], "venue": "MIT Press.", "citeRegEx": "Sutton and Barto,? 1998", "shortCiteRegEx": "Sutton and Barto", "year": 1998}, {"title": "Horde: A scalable real-time architecture for learning knowledge from unsupervised sensorimotor interaction", "author": ["R. Sutton", "J. Modayil", "M. Delp", "T. Degris", "P. Pilarski", "A. White", "D. Precup"], "venue": "Proceedings of the Tenth International Conference on Autonomous Agents and Multiagents", "citeRegEx": "Sutton et al\\.,? 2011", "shortCiteRegEx": "Sutton et al\\.", "year": 2011}, {"title": "Learning to predict by the methods of temporal differences", "author": ["R.S. Sutton"], "venue": "Machine Learning 3(1):9\u201344.", "citeRegEx": "Sutton,? 1988", "shortCiteRegEx": "Sutton", "year": 1988}, {"title": "Generalization in reinforcement learning: Successful examples using sparse coarse coding", "author": ["R.S. Sutton"], "venue": "Advances in Neural Information Processing Systems 8, 1038\u2013 1044.", "citeRegEx": "Sutton,? 1996", "shortCiteRegEx": "Sutton", "year": 1996}, {"title": "Temporal difference learning and TDGammon", "author": ["G. Tesauro"], "venue": "Communications of the ACM 38(3).", "citeRegEx": "Tesauro,? 1995", "shortCiteRegEx": "Tesauro", "year": 1995}, {"title": "Deep reinforcement learning with double Q-learning", "author": ["H. van Hasselt", "A. Guez", "D. Silver"], "venue": "In Proceedings of the AAAI Conference on Artificial Intelligence (to appear)", "citeRegEx": "Hasselt et al\\.,? \\Q2016\\E", "shortCiteRegEx": "Hasselt et al\\.", "year": 2016}, {"title": "Compress and control", "author": ["J. Veness", "M.G. Bellemare", "M. Hutter", "A. Chua", "G. Desjardins"], "venue": "Proceedings of the AAAI Conference on Artificial Intelligence.", "citeRegEx": "Veness et al\\.,? 2015", "shortCiteRegEx": "Veness et al\\.", "year": 2015}, {"title": "Learning From Delayed Rewards", "author": ["C. Watkins"], "venue": "Ph.D. Dissertation, Cambridge University, Cambridge, England.", "citeRegEx": "Watkins,? 1989", "shortCiteRegEx": "Watkins", "year": 1989}], "referenceMentions": [{"referenceID": 4, "context": "In particular, value iteration (Bellman 1957) directly computes the value function through the iterated evaluation of Bellman\u2019s equation, either exactly or from samples (e.", "startOffset": 31, "endOffset": 45}, {"referenceID": 10, "context": "Increasing the action gap is advantageous in the presence of approximation or estimation error (Farahmand 2011), and may be crucial for systems operating at a fine time scale such as video games (Togelius et al.", "startOffset": 95, "endOffset": 111}, {"referenceID": 3, "context": "Increasing the action gap is advantageous in the presence of approximation or estimation error (Farahmand 2011), and may be crucial for systems operating at a fine time scale such as video games (Togelius et al. 2009; Bellemare et al. 2013), real-time markets (Jiang and Powell 2015), and robotic platforms (Riedmiller et al.", "startOffset": 195, "endOffset": 240}, {"referenceID": 13, "context": "2013), real-time markets (Jiang and Powell 2015), and robotic platforms (Riedmiller et al.", "startOffset": 25, "endOffset": 48}, {"referenceID": 21, "context": "2013), real-time markets (Jiang and Powell 2015), and robotic platforms (Riedmiller et al. 2009; Hoburg and Tedrake 2009; Deisenroth and Rasmussen 2011; Sutton et al. 2011).", "startOffset": 72, "endOffset": 172}, {"referenceID": 12, "context": "2013), real-time markets (Jiang and Powell 2015), and robotic platforms (Riedmiller et al. 2009; Hoburg and Tedrake 2009; Deisenroth and Rasmussen 2011; Sutton et al. 2011).", "startOffset": 72, "endOffset": 172}, {"referenceID": 8, "context": "2013), real-time markets (Jiang and Powell 2015), and robotic platforms (Riedmiller et al. 2009; Hoburg and Tedrake 2009; Deisenroth and Rasmussen 2011; Sutton et al. 2011).", "startOffset": 72, "endOffset": 172}, {"referenceID": 24, "context": "2013), real-time markets (Jiang and Powell 2015), and robotic platforms (Riedmiller et al. 2009; Hoburg and Tedrake 2009; Deisenroth and Rasmussen 2011; Sutton et al. 2011).", "startOffset": 72, "endOffset": 172}, {"referenceID": 2, "context": "In fact, the idea of devaluating suboptimal actions underpins Baird\u2019s advantage learning (Baird 1999), designed for continuous time control, and occurs naturally when considering the discretized solution of continuous time and space MDPs (e.", "startOffset": 89, "endOffset": 101}, {"referenceID": 14, "context": "Munos and Moore 1998; 2002), whose limit is the Hamilton-Jacobi-Bellman equation (Kushner and Dupuis 2001).", "startOffset": 81, "endOffset": 106}, {"referenceID": 20, "context": "Our empirical results on the bicycle domain (Randlov and Alstrom 1998) show a marked increase in performance from using the consistent Bellman operator.", "startOffset": 44, "endOffset": 70}, {"referenceID": 6, "context": "While numerous alternatives to the Bellman operator have been put forward (e.g. recently Azar et al. 2011; Bertsekas and Yu 2012), we believe our work to be the first to propose such a major departure from the canonical fixed-point condition required from an optimality-preserving operator.", "startOffset": 74, "endOffset": 129}, {"referenceID": 3, "context": "results on the Arcade Learning Environment (Bellemare et al. 2013).", "startOffset": 43, "endOffset": 66}, {"referenceID": 3, "context": "results on the Arcade Learning Environment (Bellemare et al. 2013). We consider the Deep Q-Network (DQN) architecture of Mnih et al. (2015), replacing only its learning rule with one of our operators.", "startOffset": 44, "endOffset": 140}, {"referenceID": 5, "context": "T is a contraction mapping in supremum norm (Bertsekas and Tsitsiklis 1996) whose unique fixed point is the optimal Q-function", "startOffset": 44, "endOffset": 75}, {"referenceID": 22, "context": "We emphasize that while we focus on the Bellman operator, our results easily extend to its variations such as SARSA (Rummery and Niranjan 1994), policy evaluation (Sutton 1988), and fitted Q-iteration (Ernst, Geurts, and Wehenkel 2005).", "startOffset": 116, "endOffset": 143}, {"referenceID": 25, "context": "We emphasize that while we focus on the Bellman operator, our results easily extend to its variations such as SARSA (Rummery and Niranjan 1994), policy evaluation (Sutton 1988), and fitted Q-iteration (Ernst, Geurts, and Wehenkel 2005).", "startOffset": 163, "endOffset": 176}, {"referenceID": 4, "context": "We emphasize that while we focus on the Bellman operator, our results easily extend to its variations such as SARSA (Rummery and Niranjan 1994), policy evaluation (Sutton 1988), and fitted Q-iteration (Ernst, Geurts, and Wehenkel 2005). In particular, our new operators all have a sample-based form, i.e., an analogue to the Q-Learning rule of Watkins (1989). a1", "startOffset": 40, "endOffset": 359}, {"referenceID": 7, "context": "There is, however, one important family of value functions which have \u201ctabular-like\u201d properties: aggregation schemes (Bertsekas 2011).", "startOffset": 117, "endOffset": 133}, {"referenceID": 19, "context": ", multilinear interpolation, illustrated in Figure 2) and kernel-based methods (Ormoneit and Sen 2002).", "startOffset": 79, "endOffset": 102}, {"referenceID": 23, "context": "If A also corresponds to the identity and X is finite, TA reduces to the Bellman operator (1) and we recover the familiar tabular representation (Sutton and Barto 1998).", "startOffset": 145, "endOffset": 168}, {"referenceID": 20, "context": "We now study the behaviour of our new operators on the bicycle domain (Randlov and Alstrom 1998).", "startOffset": 70, "endOffset": 96}, {"referenceID": 4, "context": "The driving aspect of this problem is particularly challenging for value-based methods, since each step contributes little to an eventual success and the \u201ccurse of dimensionality\u201d (Bellman 1957) precludes a fine representation of the state-space.", "startOffset": 180, "endOffset": 194}, {"referenceID": 4, "context": "Policies derived from our consistent operator can safely balance the bicycle earlier on, and also reach the goal earlier than policies derived from the Bellman operator. Note, in particular, the striking difference in the trajectories followed by the resulting policies. The effect is even more pronounced when using a 8 \u00d7 \u00b7 \u00b7 \u00b7 \u00d7 8 grid (results provided in the appendix). Effectively, by decreasing suboptimal Q-values at grid points we produce much better policies within the grid cells. This phenomenon is consistent with the theoretical results of Farahmand (2011) relating the size of action gaps to the quality of derived greedy policies.", "startOffset": 152, "endOffset": 570}, {"referenceID": 26, "context": "One may ask whether it is possible to extend the consistent Bellman operator to Q-value approximation schemes which lack a probabilistic interpretation, such as linear approximation (Sutton 1996), locally weighted regression (Atkeson 1991), neural networks (Tesauro 1995), or even informationtheoretic methods (Veness et al.", "startOffset": 182, "endOffset": 195}, {"referenceID": 0, "context": "One may ask whether it is possible to extend the consistent Bellman operator to Q-value approximation schemes which lack a probabilistic interpretation, such as linear approximation (Sutton 1996), locally weighted regression (Atkeson 1991), neural networks (Tesauro 1995), or even informationtheoretic methods (Veness et al.", "startOffset": 225, "endOffset": 239}, {"referenceID": 27, "context": "One may ask whether it is possible to extend the consistent Bellman operator to Q-value approximation schemes which lack a probabilistic interpretation, such as linear approximation (Sutton 1996), locally weighted regression (Atkeson 1991), neural networks (Tesauro 1995), or even informationtheoretic methods (Veness et al.", "startOffset": 257, "endOffset": 271}, {"referenceID": 29, "context": "One may ask whether it is possible to extend the consistent Bellman operator to Q-value approximation schemes which lack a probabilistic interpretation, such as linear approximation (Sutton 1996), locally weighted regression (Atkeson 1991), neural networks (Tesauro 1995), or even informationtheoretic methods (Veness et al. 2015).", "startOffset": 310, "endOffset": 330}, {"referenceID": 2, "context": "Theorem 1 is our main result; one corollary is a convergence proof for Baird\u2019s advantage learning (Baird 1999).", "startOffset": 98, "endOffset": 110}, {"referenceID": 2, "context": "The method of advantage learning was proposed by Baird (1999) as a means of increasing the gap between the optimal and suboptimal actions in the context of residual algorithms applied to continuous time problems.", "startOffset": 49, "endOffset": 62}, {"referenceID": 3, "context": "We evaluated our new operators on the Arcade Learning Environment (ALE; Bellemare et al. 2013), a reinforcement learning interface to Atari 2600 games.", "startOffset": 66, "endOffset": 94}, {"referenceID": 3, "context": "We evaluated our new operators on the Arcade Learning Environment (ALE; Bellemare et al. 2013), a reinforcement learning interface to Atari 2600 games. In the ALE, a frame lasts 1/60 of a second, with actions typically selected every four frames. Intuitively, the ALE setting is related to continuous domains such as the bicycle domain studied above, in the sense that each individual action has little effect on the game. For our evaluation, we trained agents based on the Deep Q-Network (DQN) architecture of Mnih et al. (2015). DQN acts according to an -greedy policy over a learned neuralnetwork Q-function.", "startOffset": 72, "endOffset": 530}, {"referenceID": 16, "context": "For comparison, we also trained agents using the Original DQN setting (Mnih et al. 2015), in particular using a longer 200 million frames of training.", "startOffset": 70, "endOffset": 88}, {"referenceID": 4, "context": "We trained each agent for 100 million frames using either regular Bellman updates, advantage learning (A.L.), or persistent advantage learning (P.A.L.). We optimized the \u03b1 parameters over 5 training games and tested our algorithms on 55 more games using 10 independent trials each. For each game, we performed a paired t-test (99% C.I.) on the post-training evaluation scores obtained by our algorithms and DQN. A.L. and P.A.L. are statistically better than DQN on 37 and 35 out of 60 games, respectively; both perform worse on one (ATLANTIS, JAMES BOND). P.A.L. often achieves higher scores than A.L., and is statistically better on 16 games and worse on 6. These results are especially remarkable given that the only difference between DQN and our operators is a simple modification to the update rule. For comparison, we also trained agents using the Original DQN setting (Mnih et al. 2015), in particular using a longer 200 million frames of training. Figure 4 depicts learning curves for two games, ASTERIX and SPACE INVADERS. These curves are representative of our results, rather than exceptional: on most games, advantage learning outperforms Bellman updates, and persistent advantage learning further improves on this result. Across games, the median score improvement over DQN is 8.4% for A.L. and 9.1% for P.A.L., while the average score improvement is respectively 27.0% and 32.5%. Full experimental details are provided in the appendix. The learning curve for ASTERIX illustrates the poor performance of DQN on certain games. Recently, van Hasselt, Guez, and Silver (2016) argued that this poor performance", "startOffset": 66, "endOffset": 1586}, {"referenceID": 1, "context": "observed a similar effect on the value estimates when replacing the Bellman updates with Double Q-Learning updates, one of many solutions recently proposed to mitigate the negative impact of statistical bias in value function estimation (van Hasselt 2010; Azar et al. 2011; Lee, Defourny, and Powell 2013).", "startOffset": 237, "endOffset": 305}], "year": 2015, "abstractText": "This paper introduces new optimality-preserving operators on Q-functions. We first describe an operator for tabular representations, the consistent Bellman operator, which incorporates a notion of local policy consistency. We show that this local consistency leads to an increase in the action gap at each state; increasing this gap, we argue, mitigates the undesirable effects of approximation and estimation errors on the induced greedy policies. This operator can also be applied to discretized continuous space and time problems, and we provide empirical results evidencing superior performance in this context. Extending the idea of a locally consistent operator, we then derive sufficient conditions for an operator to preserve optimality, leading to a family of operators which includes our consistent Bellman operator. As corollaries we provide a proof of optimality for Baird\u2019s advantage learning algorithm and derive other gap-increasing operators with interesting properties. We conclude with an empirical study on 60 Atari 2600 games illustrating the strong potential of these new operators. Value-based reinforcement learning is an attractive solution to planning problems in environments with unknown, unstructured dynamics. In its canonical form, value-based reinforcement learning produces successive refinements of an initial value function through repeated application of a convergent operator. In particular, value iteration (Bellman 1957) directly computes the value function through the iterated evaluation of Bellman\u2019s equation, either exactly or from samples (e.g. Q-Learning, Watkins 1989). In its simplest form, value iteration begins with an initial value function V0 and successively computes Vk+1 := T Vk, where T is the Bellman operator. When the environment dynamics are unknown, Vk is typically replaced by Qk, the state-action value function, and T is approximated by an empirical Bellman operator. The fixed point of the Bellman operator, Q\u2217, is the optimal state-action value function or optimal Q-function, from which an optimal policy \u03c0\u2217 can be recovered. In this paper we argue that the optimal Q-function is inconsistent, in the sense that for any action a which is subop\u2217Now at Carnegie Mellon University. Copyright c \u00a9 2016, Association for the Advancement of Artificial Intelligence (www.aaai.org). All rights reserved. timal in state x, Bellman\u2019s equation for Q\u2217(x, a) describes the value of a nonstationary policy: upon returning to x, this policy selects \u03c0\u2217(x) rather than a. While preserving global consistency appears impractical, we propose a simple modification to the Bellman operator which provides us a with a first-order solution to the inconsistency problem. Accordingly, we call our new operator the consistent Bellman operator. We show that the consistent Bellman operator generally devalues suboptimal actions but preserves the set of optimal policies. As a result, the action gap \u2013 the value difference between optimal and second best actions \u2013 increases. Increasing the action gap is advantageous in the presence of approximation or estimation error (Farahmand 2011), and may be crucial for systems operating at a fine time scale such as video games (Togelius et al. 2009; Bellemare et al. 2013), real-time markets (Jiang and Powell 2015), and robotic platforms (Riedmiller et al. 2009; Hoburg and Tedrake 2009; Deisenroth and Rasmussen 2011; Sutton et al. 2011). In fact, the idea of devaluating suboptimal actions underpins Baird\u2019s advantage learning (Baird 1999), designed for continuous time control, and occurs naturally when considering the discretized solution of continuous time and space MDPs (e.g. Munos and Moore 1998; 2002), whose limit is the Hamilton-Jacobi-Bellman equation (Kushner and Dupuis 2001). Our empirical results on the bicycle domain (Randlov and Alstrom 1998) show a marked increase in performance from using the consistent Bellman operator. In the second half of this paper we derive novel sufficient conditions for an operator to preserve optimality. The relative weakness of these new conditions reveal that it is possible to deviate significantly from the Bellman operator without sacrificing optimality: an optimality-preserving operator needs not be contractive, nor even guarantee convergence of the Q-values for suboptimal actions. While numerous alternatives to the Bellman operator have been put forward (e.g. recently Azar et al. 2011; Bertsekas and Yu 2012), we believe our work to be the first to propose such a major departure from the canonical fixed-point condition required from an optimality-preserving operator. As proof of the richness of this new operator family we describe a few practical instantiations with unique properties. We use our operators to obtain state-of-the-art empirical ar X iv :1 51 2. 04 86 0v 1 [ cs .A I] 1 5 D ec 2 01 5 results on the Arcade Learning Environment (Bellemare et al. 2013). We consider the Deep Q-Network (DQN) architecture of Mnih et al. (2015), replacing only its learning rule with one of our operators. Remarkably, this one-line change produces agents that significantly outperform the original DQN. Our work, we believe, demonstrates the potential impact of rethinking the core components of value-based reinforcement learning.", "creator": "TeX"}}}