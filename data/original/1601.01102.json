{"id": "1601.01102", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "6-Jan-2016", "title": "A Survey on Social Media Anomaly Detection", "abstract": "Social media anomaly detection is of critical importance to prevent malicious activities such as bullying, terrorist attack planning, and fraud information dissemination. With the recent popularity of social media, new types of anomalous behaviors arise, causing concerns from various parties. While a large amount of work have been dedicated to traditional anomaly detection problems, we observe a surge of research interests in the new realm of social media anomaly detection. In this paper, we present a survey on existing approaches to address this problem. We focus on the new type of anomalous phenomena in the social media and review the recent developed techniques to detect those special types of anomalies. We provide a general overview of the problem domain, common formulations, existing methodologies and potential directions. With this work, we hope to call out the attention from the research community on this challenging problem and open up new directions that we can contribute in the future.", "histories": [["v1", "Wed, 6 Jan 2016 07:42:24 GMT  (1780kb,D)", "http://arxiv.org/abs/1601.01102v1", "18 pages"], ["v2", "Wed, 17 Feb 2016 21:34:31 GMT  (1761kb,D)", "http://arxiv.org/abs/1601.01102v2", "23 pages"]], "COMMENTS": "18 pages", "reviews": [], "SUBJECTS": "cs.LG cs.SI", "authors": ["rose yu", "huida qiu", "zhen wen", "ching-yung lin", "yan liu"], "accepted": false, "id": "1601.01102"}, "pdf": {"name": "1601.01102.pdf", "metadata": {"source": "CRF", "title": "A Survey on Social Media Anomaly Detection", "authors": ["ROSE YU", "HUIDA QIU", "ZHEN WEN", "CHING-YUNG LIN", "YAN LIU"], "emails": [], "sections": [{"heading": null, "text": "39"}, {"heading": "A Survey on Social Media Anomaly Detection", "text": "ROSE YU, University of Southern California HUIDA QIU, University of Southern California ZHEN WEN, Google CHING-YUNG LIN, IBM Research YAN LIU, University of Southern California\nSocial media anomaly detection is of critical importance to prevent malicious activities such as bullying, terrorist attack planning, and fraud information dissemination. With the recent popularity of social media, new types of anomalous behaviors arise, causing concerns from various parties. While a large amount of work have been dedicated to traditional anomaly detection problems, we observe a surge of research interests in the new realm of social media anomaly detection. In this paper, we present a survey on existing approaches to address this problem. We focus on the new type of anomalous phenomena in the social media and review the recent developed techniques to detect those special types of anomalies. We provide a general overview of the problem domain, common formulations, existing methodologies and potential directions. With this work, we hope to call out the attention from the research community on this challenging problem and open up new directions that we can contribute in the future.\nCategories and Subject Descriptors: H.2.8 [Database Applications]: Data mining\nAdditional Key Words and Phrases: anomaly detection; social media analysis\nACM Reference Format: Qi(Rose) Yu, Yan Liu 2014. A Survey on Social Media Anomaly Detection. ACM Trans. Knowl. Discov. Data. 9, 4, Article 39 (October 2014), 18 pages. DOI:http://dx.doi.org/10.1145/0000000.0000000"}, {"heading": "1. INTRODUCTION", "text": "Social media systems provide convenient platforms for people to share, communicate, and collaborate. While people enjoy the openness and convenience of social media, many malicious behaviors, such as bullying, terrorist attack planning, and fraud information dissemination, can happen. Therefore, it is extremely important that we can detect these abnormal activities as accurately and early as possible to prevent disasters and attacks. Needless to say, as more social information becomes available, the most challenging question is what useful patterns could be extracted from this influx of social media data to help with the detection task.\nBy definition, anomaly detection aims to find \u201can observation that deviates so much from other observations as to arouse suspicion that it was generated by a different mechanism\u201d [Hawkins 1980]. The common approach is to build a reference model, i.e., a statistical model that captures the generation process of the observed (or normal) data. Then for a new observation, we estimate its likelihood based on the reference model and predict the data as an \u201canomal\u201d if the likelihood is below some threshold [Chan and Stolfo 1998; Ghosh and Schwartzbard 1999; Eskin et al. 2002; Ringberg et al. 2007; Yue et al. 2007; Chandola et al. 2007].\nIn addition, the type of anomalies that we aim to detect vary significantly from applications to applications. Several algorithms have been developed specifically for social network anomaly detection on graph structure anomalies, e.g. power law models [Akoglu and McGlohon 2009], spectral decomposition [Luxburg 2007], scan statistics [Priebe et al. 2005], random walks [Pan et al. 2004; Tong et al. 2006], etc. The basic assumption of these algorithms is that if a social network has fundamentally changed in some important way, it is usually reflected in the individual communication change, i.e., some individuals either communicate more (or less) frequently than usual, or communicate with un-\nPermission to make digital or hard copies of part or all of this work for personal or classroom use is granted without fee provided that copies are not made or distributed for profit or commercial advantage and that copies show this notice on the first page or initial screen of a display along with the full citation. Copyrights for components of this work owned by others than ACM must be honored. Abstracting with credit is permitted. To copy otherwise, to republish, to post on servers, to redistribute to lists, or to use any component of this work in other works requires prior specific permission and/or a fee. Permissions may be requested from Publications Dept., ACM, Inc., 2 Penn Plaza, Suite 701, New York, NY 10121-0701 USA, fax +1 (212) 869-0481, or permissions@acm.org. c\u00a9 2014 ACM 1556-4681/2014/10-ART39 $15.00 DOI:http://dx.doi.org/10.1145/0000000.0000000\nACM Transactions on Knowledge Discovery from Data, Vol. 9, No. 4, Article 39, Publication date: October 2014.\nar X\niv :1\n60 1.\n01 10\n2v 1\n[ cs\n.L G\n] 6\nJ an\n2 01\n6\nusual individuals. However, this could be an over-simplification of the social media anomalies without considering several important aspects of social media data.\nOne of the challenges that differentiate social media analysis from existing tasks in general text and graph mining is the social layer associated with the data. In other words, the texts are attached to individual users, recording his/her opinions or activities. The networks also have social semantics, with its formation governed by the fundamental laws of social behaviors. The other special aspect of social media data is the temporal perspective. That is, the texts are usually time-sensitive and the networks evolve over time. Both challenges raise open research problems in machine learning and data mining. Most existing work on social media anomaly detection have been focused on the social perspective. For example, many algorithms have been developed to reveal hubs/authorities, centrality, and communities from graphs [Kleinberg 1999; Erosheva et al. 2004; Song et al. 2005; Lappas et al. 2009]; a good body of text mining techniques are examined to reveal insights from user-generated contents [Blei et al. 2003; Rosen-Zvi et al. 2004]. However, very few models are available to capture the temporal aspects of the problem [Blei and Lafferty 2006; Hanneke and Xing 2007; Kolar et al. 2010], and among them even fewer are practical for large-scale applications due to the more complex nature of time series data.\nExisting work on traditional anomaly detection [Chandola et al. 2012; Cheng et al. 2009; Chandola et al. 2007; Tong et al. 2008a; Guralnik and Srivastava 1999; Takeuchi and Yamanishi 2006; Duche\u0302ne et al. 2004; Lin et al. 2003; Keogh et al. 2005; Yankov et al. 2008; Cheng et al. 2009; Wong et al. 2003] have identified two types of anomalies: one is \u201cunivariate anomaly\u201d which refers to the anomaly that occurs only within individual variable, the other is \u201cdependency anomaly\u201d that occurs due to the changes of temporal dependencies between time series. Mapping to social media analysis scenario, we can recognize two major types of anomalies:\n\u2014 Point Anomaly: the abnormal behaviors of individual users \u2014 Group Anomaly: the unusual patterns of groups of people\nExamples of point anomaly can be anomalous computer users [Schonlau et al. 2001], unusual online meetings [Horn and Willett 2011] or suspicious traffic events [Ihler et al. 2006]. Most of the existing work have been devoted to detecting point anomaly. However, in social network, anomalies may not only appear as individual users, but also as a group. For instance, a set of users collude to create false product reviews or threat campaign in social media platforms; in large organizations malfunctioning teams or even insider groups closely coordinate with each other to achieve a malicious goal. Group anomaly is usually more subtle than individual anomaly. At the individual level, the activities might appear to be normal [Chandola et al. 2007]. Therefore, existing anomaly detection algorithms usually fail when the anomaly is related to a group rather than individuals.\nWe categorize a broad range of work on social media anomaly detection with respect three criteria:\n(1) Anomaly Type: whether the paper detects point anomaly or group anomaly (2) Input Format: whether the paper deals with activity data or graph data (3) Temporal Factor: whether the paper handles the dynamics of the social network\nIn the remaining of this paper, we organize the existing literature according to these three criteria. The overall structure of our survey paper is listed in table I. We acknowledge that the papers we analyze in this survey are only a few examples in the rich literature of social media anomaly detection. References within the paragraphs and the cited papers provide broader lists of the related work.\nWe can also formulate the categorization in Table I using the following mathematical abstraction. Denote the time-dependent social network as G = {V (t),Wv(t), E(t),We(t)}, where V is the graph vertex,Wv is the weight on the vertex,E is the graph edge andWe is the weight on the edge. Point anomaly detection learns an outlier function mapping from the graph to certain sufficient statistics F : G\u2192 R. A node is anomalous if it lies in the tail of the sufficient statistics distribution. Group anomaly detection learns an outlier function mapping from the power set of the graph to certain sufficient statistics F : 2|G| \u2192 R. Activity based anomaly detection collapses the edge set E(t) and weights We(t) to be empty. Static graph-based approaches fix the time stamp of the graphs as one. Now each of the method summarized in the table is essentially learning a different F or using some projection (simplification) of the graph G. The projection trades-off between model complexity and learning efficiency."}, {"heading": "2. POINT ANOMALY DETECTION", "text": "Point anomaly refers to the abnormal behaviors of individual users, which can be reflected in abnormal activity records such as unusually frequent access to important system files, or abnormal network communication patterns. Point anomaly detection aims to detect suspicious individuals, whose behavioral patterns deviate significantly from the general public. Based on the type of input, we can have activity-based point anomaly detection and graph-based point anomaly detection."}, {"heading": "2.1. Activity-based Point Anomaly Detection", "text": "User activities are widely observed in social media, such as computer log-in/log-off records, HTTP access records, and file access records. Activity-based approaches assume that individuals are marginally independent from each other. The anomalousness of an individual is determined only by his own activities. A large body of literature are in the context of computer intrusion detection study. For example, [Schonlau et al. 2001] investigates the problem of detecting masquerades who disguise themselves as somebody else on the network. The paper collects user activities by looking at their UNIX commands records and manipulating the data to simulate masquerades.\nPioneering work for detecting masquerades fall into the framework of statistical hypothesis testing, e.g. [Dumouchel 1999; Ju and Vardi 2001]. Different approaches are proposed including Bayes one-step Markov, hybrid multi-step Markov and compression. Here we omit other simple masquerade detection techniques such as uniqueness of the command as also compared in [Dumouchel 1999]. For Bayes one-step Markov method, it states the null hypothesis as a one-step Markov process and the alternative hypothesis as a Dirichlet distribution. The null hypothesis assumes that the current time command Cut of a user u relates to his previous command Cu,t\u22121. Mathematically speaking, H0 : P (Cut = k|Cu,t\u22121 = j) = pukj , where pukj is the transition probability from command j to command k for user u. Then the algorithm computes the Bayes factor based on the hypothesis for each user x\u0304u and set up a threshold with respect to x\u0304u to detect anomalous masquerades. This approach models users independently and ignores the potential relationships among users.\nAs a direct generalization of Bayes one-step Markov, [Ju and Vardi 2001] builds a user model based on high-order Markov chains: hybrid multi-step Markov. It tests over two hypotheses. H0 : commands are generated from the hybrid Markov model of u; H1 : commands are generated from other users. The hybrid multi-step Markov method switches between the Markov model and the independence model. The Markov model assumes that a command depends on a set of previous commands, i.e. P (Cut = c0|Cu,t\u22121 = c1, Cu,t\u22122 = c2, \u00b7 \u00b7 \u00b7 , Cu,t\u2212l = cl) = \u2211l i=1 \u03bbuiru(c0|ci), where \u03bb and r denotes the initial and transitional probability. For the independence model, it assumes that a user\u2019s commands are i.i.d samples from a multinomial distribution. The paper computes the test statistics by combining the statistics from two models. Similar to Bayes one-step Markov, hybrid multi-step Markov method sets up a threshold value on the test statistics to flag anomalies. Hybrid multi-step Markov method is able to capture the long-range dependence of the users\u2019 commands. However, it also suffers from higher computational cost. Compression takes a distinctive approach where it defines the anomaly score as\nthe additional compression cost to append the test data to the training data. Formally, the score is x = compress({C, c}) \u2212 compress(C), where C is the training data, c is the testing data. The method applies the Lempel-Ziv algorithm for the compression operation. However, it can hardly capture the dependencies in the data instances.\n[Sun et al. 2006] proposes probabilistic suffix tree (PST) to mine the outliers in a set of sequences S from an alphabet \u03a3. It makes Markov assumption on the sequences and encodes the variable length Markov chains with syntax similar to Probabilistic Suffix Automata. In PST, an edge is a symbol in the alphabet and a node is labeled by a string. The probabilistic distribution of each node represents the conditional probability of seeing a symbol right after the string label. An example of such PST is shown in Figure 1. The algorithm first constructs a PST and then computes a similarity measure score SIMN based on marginal probability of each sequence over the PST. Then it selects the top k sequences with lowest SIMN scores as outliers. Since PST encodes a Markov chain, which has been shown to have certain equivalence to the Hidden Markov model, the outliers detected by PST are similar to those using Markov model testing statistics. Though PST construction and SIMN are relative cheap in computation, one drawback is that PST is pre-computed for a fixed alphabet. Pre-computation makes PST less adaptive to the unseen symbols outside of the alphabet or newly coming sequences, which basically requires recomputing the entire tree.\nFig. 1. A example of PST. For each node, top array shows the probability distribution. Inside the node shows the label string, the number of times it appears in the data set and the empirical probability. [Sun et al. 2006]\n0.008\n(0.991, 0.009)\n0.570\n(0.968, 0.032)\n0.066\n(0.972, 0.028)\n0.612\n(0.5, 0.5)\n0.005 (0.755, 0.245)\n(0.2, 0.8)\n0.003\n0.320\n(0.159, 0.841)\n0.388\n(0.606, 0.394)\n0.017\n(0.155, 0.845) bb 1781\n0.348\n(0.612, 0.388)\nRoot\n(0.5, 0.5)\n0.023\n(0.667, 0.333)\n0.023\nminCount = 25 (0.999, 0.001) a 4674\nb 2961\naa 2920\nba 336\nab 85\naba 20\nbab 7\nabb 13\nbbb 836\nbabb 4\nbbab 4\na\na\na\nb\nb\nb\nb\nb\na\nb\nb\nb\na\nb\n0.059 bba 153\n(0.947, 0.053)\n(1.0, 0) aaa 1356\n0.520 (0.333, 0.667)\nbaa 212 0.081\na\nPmin = 0.02\nFigure 1: An example of PST and pruning it using MinCount or Pmin. The probability distribution vectors are shown on the top of the nodes, and the label strings, the number of times they appear in the dataset and their empirical probability are shown within the nodes\nThe node also records a probability distribution vector of the symbols, which corresponds to the conditional probabilities of seeing a symbol right after the label string in the dataset. For example, the probability vector for the node labelled bba is (0.947,0.053). This means the conditional probability of seeing a right after bba (P (a|bba)) is 0.947, and seeing b right after bba (P (b|bba)) is 0.053.\nThe structure of PST is similar to the classical suffix tree (ST). However, there are some important differences. Besides keeping a probability distribution vector at each node, in a PST, the parent of a node is a suffix of the node, while in a classical ST the parent of a node is a prefix of the node.\n2.1 Pruning of a PST The size of a PST is a function of the cardinality of the alphabet (|\u03a3|) and maximum memory length L. A fully grown unchecked PST is (O(|\u03a3|L). Several pruning mechanisms have to be employed to control the size of the PST.\nBejerano and Yona [5] have proposed a two-step mechanism to prune a PST. In the first step, an empirical probability threshold Pmin is used to decide whether to extend a child node. For example, at the\nnode labelled bb, if P (abb) \u2265 Pmin, the node with label string abb will be added to the PST under some conditions. Otherwise, the node itself, including all its descendants will be ignored. The formula of computing P (abb) is listed in Table 1\nIn the second step, a tree depth threshold L is employed to cut the PST. This means when the length of the label string of a node reaches L, its children nodes will be pruned.\nInstead of using Pmin, Yang and Wang [15] suggested the use of minCount for pruning a PST. For each node, the number of times its label string appears in the database is counted. If this number is smaller than minCount, then the node (and therefore all its children) are pruned.\nIn Figure 1 both Pmin and MinCount are shown in each node for ease of exposition. However, it is not necessary to keep them in the PST. The dashed and the solid lines show examples of pruning the PST using Pmin = 0.02 and MinCount = 25 respectively.\n2.2 Computing Probabilities Using a PST The probability associated with a sequence s over a PST is PT (s) = PT (s1)P\nT (s2|s1) . . . PT (sl|s1s2...sl\u22121). The PST allows an efficient computation of these intermediate conditional probability terms.\nFor example let us compute PT (b|abab) from the PST in Figure 1. The search starts from the root and traverse along the path \u2192 b \u2192 a \u2192 b, which is in the reverse order of string abab. The search stops at the node with label bab, because this is the longest suffix of abab that can be found in the PST, and PT (b|abab) is estimated by PT (b|bab) = 0.8. Thus, we are exploiting the short memory feature, which occurs in sequences generated from natural sources: the empirical probability distribution of the next symbol, given the preceding subsequence, can be approximated by observing no more than the last L symbols in that subsequence [12, 5].\nIf the PST is pruned using minCount = 25, the search stops at the node with label ab and PT (b|abab) is estimated by PT (b|ab) = 0.394. The following is an example to compute the probability of string ababb over the PST pruned using minCount = 25.\nPT (S) = PT (a)PT (b|a)PT (a|ab)PT (b|aba)PT (b|abab) = 0.612\u00d7 0.028\u00d7 0.606\u00d7 0.032\u00d7 0.394 = 1.309 \u2217 10\u22124\nSince the probabilities are multiplied, care must be taken to avoid the presence of zero probability. Thus, a smoothing procedure is employed across each node of the PST and the probability distribution vector is\n[Ihler et al. 2006] investigates Markov- odulated Poisson process to address the specific problem of event detection on time-series of count data. The algorithm assumes the count at time t, den ted as N(t), is a sum of two additive processes: N(t) = N0(t) + NE(t), where N0(t) denotes the number of occurrences attributed to the \u201cnormal\u201d behavior and NE(t) is the \u201canomalous\u201d count due to an event at time t. More concretely, the periodic portion of the time series counts can be taken as \u201cnormal\u201d behavior while the rare increase in the number of counts can correspond to the \u201canomalous\u201d behavior. For both processes, the paper develops a hierarchical Bayesian model. In particular, the paper models periodic counting data (i.e. normal behavior) with a Poisson process and models rare occurrences (i.e. anomaly behavior) via a binary process. The algorithm then uses he MCMC sampling algorithm to infer the posterior marginal distribution over events. It uses the posterior probability as an indicator to automatically detect the presence of unusual events in the observation sequence. The paper applies the model to detect the events from free-way traffic counts and the building access co nt data. The method takes a full Bayesian approach as a principled way to pose hypothesis testing. Howev r, it\n4\ntreats each time series as independent and fails to consider the scenario where multiple time series are inter-correlated.\nAnother application in social network anomaly detection is proposed in [Horn and Willett 2011]. The paper proposes to detect unusual meetings by investigating the presence of meeting participants. Specifically, for each time stamp t = 1, 2, \u00b7 \u00b7 \u00b7 , the inputs are given as a snapshot of the network in the form of a binary string xt = (xt(1), \u00b7 \u00b7 \u00b7 , xt(n)) \u2208 {0, 1}n, where xt(j) = 0 or 1 indicates whether the jth person participated in the meeting at time t as well as the feedback from expert system with the correct labels yt \u2208 {\u22121,+1}. The algorithm outputs a binary label for each network state y\u0302t \u2208 {\u22121,+1} according to whether or not xt is anomalous. Under the proposed two-stage framework, \u201cfiltering stage\u201d estimates the model parameters and updates belief with the new observation. It builds an exponentially model driven by a time-vary parameter and learns the model parameter in an online fashion. \u201cHedging stage\u201d compares the model likelihood of xt as \u03b6t with the critical threshold \u03c4t and flag anomalies if \u03b6t > \u03c4t. After that, the online learning algorithm utilizes the feedback from an expert system to adjust the critical threshold value \u03c4t+1 = argmin\u03c4 (\u03c4 \u2212 \u03c4t \u2212 \u03b7yt1y\u0302t 6=yt)2. It is easy to see from the construction of xt that each person\u2019s participation is taken as an independent feature entry. Though this work highlights the network structure, the relational information utilized lies only between people and meetings, without considering the interaction among people themselves.\nGenerally speaking, activity-based approaches model the activity sequence of each user separately under certain Markov assumption. They locate the anomaly by flagging deviations from a user\u2019s past history. These approaches provide simple and effective ways to model user activities in a real-time fashion. The models leverage the tool of Bayesian hypothesis testing and detect anomalies that are statistically well-justified. However, as non-parametric methods, Markov models suffer from the rapid explosion in the dimension of the parameter space. The estimation of Markov transition probabilities becomes non-trivial for large scale data set. Furthermore, models for individual normal/abnormal activities are often ad hoc and are hard to generalize. As summarized by [Schonlau and Theus 2000] in his review work on computer intrusion detection: \u201cnone of the methods described here could sensibly serve as the sole means of detecting computer intrusion\u201d. Therefore, exploration of deeper underlying structure of the data with fast learning algorithms is necessary to the development of the problem. Here we also refer interested readers to more general reviews of computer network anomaly detection [Ahmed et al. 2007; Lazarevic et al. 2003]."}, {"heading": "2.2. Graph-based Point Anomaly Detection", "text": "Social media contain a considerably large amount of relational information such as emails from-and-to communication, tweet/re-tweet actions and mention-in-tweet networks. Those relational information are usually represented by graphs. Some approaches analyze static graphs, each of which is essentially one snapshot of the social network. Others go beyond static graph and analyze dynamic graphs, which is a series of snapshot of the networks.\n2.2.1. Static Graph. Compared with activity-based approaches, which simplify the social network as categorical or sequential activities of individuals, graph-based approaches further take into account the relational information represented by the graph. [Noble and Cook 2003] immerses as one of the earliest work focusing on graph-based anomaly detection. It introduces two techniques for graph-based anomaly detection. One is to detect anomalous substructures within a graph and the other is to detect unusual patterns in distinct sets of vertices (subgraphs). Substructure is a connected component in the overall graph. Subgraph is obtained by partitioning the graph into distinct structures. Each substructure is evaluated using the Minimum Description Length metric for anomalousness. In real social graphs, intensive research efforts have been devoted to study the graph properties (see references in [Chakrabarti and Faloutsos 2006]). One famous example is the power law, which describes the relationship among various attributes, namely the number of nodes (N ), number of edges (E), total weight (W ) and the largest eigen-value of the adjacency matrix (\u03bb).\nBased on these observations, [Akoglu and McGlohon 2009] proposes to study each node by looking at power law property in the domain of its \u201cegonet\u201d, which is the subgraph of the node and its direct neighbors. For a given graph G, denote the egonet of node i as Gi, the paper describes the \u201cOddBall\u201d algorithm. The algorithm starts by investigating the number of nodes Ni, the weight Wi and number of edges Ei of the egonet Gi. It then defines the normal neighborhoods patterns with respect to these quantities. For example, the authors report the Egonet Density Power Law (EDPL) pattern for Ni and Ei: Ei \u221d N\u03b1i , 1 \u2264 \u03b1 \u2264 2. ; the Egonet Weight Power Law (EWPL) pattern for Wi and E\u03b2i , \u03b2 \u2265 1.\nGiven the normal patterns, the paper takes the distance-to-fitting-line as a measure to score the nodes in the graph. The algorithm can detect anomalous nodes whose neighbors are either too sparse (Nearstar) or too dense (Near-clique). By studying both the total weight W and the number of edges E, it can detect anomalous nodes whose interactions with others are extremely intensive. By analyzing the relationship between the largest eigenvalue \u03bb and the total weight W , it can detect dominant heavy link, or a single highly active link in an egonet. The \u201cOddBall\u201d algorithm builds on power law properties of complex networks, which haven been verified in various real world applications. Moreover, the fitting of power law and the calculation of anomaly score is computationally efficient, which makes the algorithm a good fit for large scale network analysis. However, the algorithm would easily fail if the network does not obey the power law, then the detected anomalies would be less meaningful. Also, the paper focuses only on the static network and generalization the algorithm to dynamic network is non-trivial.\nBesides the power law, random walk is also adapted for graph-based anomaly detection between neighbors. The general idea is that if a node is hard to reach during the random walk, it is likely to be an anomaly. Random walk calculates a steady state probability vector, each element of which represents the probability of reaching other nodes. Following the idea of random walk, [Sun et al. 2005] focuses on the anomaly detection on bipartite graph, denoted as G = \u3008V1 \u22c3 V2, E\u3009, where node sets V1 has k nodes, V2 has n nodes and E are the edges between them. It detects anomalies by first forming the neighborhood and then computing the normality scores. During neighborhood formation stage, the algorithm computes the relevance score for a node b \u2208 V1 to a \u2208 V1 as the number of times that one visit b during multiple random walks starting from a. In this case, the steady state vector represents the probability of being reached from V1 in a random walk with restart model, and the algorithm detects anomalies linked to the query nodes. Random walk model stresses the graph structure while ignores the nodes\u2019 attributes. Sometimes, it might be an over-simplification of the underlying network generating process, which would lead to high false positive ratio.\n[Moonesinghe and Tan 2008] uses similar random walk guideline to detect outliers in a database and proposes the \u201cOutRank\u201d algorithm. It first constructs a graph from the objects where each node represents a data object and each edge represents the similarity between them. For every pair of the objects X,Y \u2208 Rd, the algorithm computes the similarity Sim(X,Y ) and normalizes the resulting similarity matrix to obtain a random walk transition matrix S. Then it defines the following connectivity metric based on how well this node is connected to the other nodes:\nDefinition.(Connectivity) Connectivity c(u) of node u at tth iteration is defined as follows:\nct(u) =    a if t = 0\u2211 v\u2208adj(u) (ct\u22121(v)/|v|) otherwise\nwhere a is its initial value, adj(u) is the set of nodes linked to node u, and |v| is the node degree. This recursive definition of connectivity is also known as the power method for solving eigenvector problem. Upon convergence, the stationary distribution can be written as c = ST c. The algorithm detects the objects (nodes) with low connectivity to other objects as anomalies. \u201cOutRank\u201d solves individual activity-based anomaly detection problem using a graph-based anomaly detection method. As a general outlier detection framework, it requires the construction of the graph from data objects. Thus its performance can heavily rely on the type of similarity measurement adopted for computing the edges.\nDespite a wealth of theoretical work in graph theory, standard graph representation only allows each edge to connect to two nodes, which cannot encode potentially critical information regarding how ensembles of networked nodes interacting with each other [Silva and Willett 2008b]. Given this consideration, a generalized hypergraph representation is formulated which allows edges to connect with multiple vertices simultaneously. In hypergraph, each hyperedge is a representation of a binary string, indicating whether the corresponding vertex participates in the hyperedge. Figure 2 provides an example for comparing the graph and the hypergraph representation of two observations 111111000 and 000101111, with p = 9, using a graph and a hypergraph. With the graph, representing one observation of an interaction requires multiple edges. With a hypergraph, one hyperedge suffices. Due to the mapping between binary strings and hyperedges, the paper formulates the graph-based anomaly detection problem in the corresponding discrete space. [Silva and Willett 2008b] and [Silva and Willett 2008a] address the problem of detecting anomalous meetings in very large social networks based on hypergraphs. In their papers, a meeting is encoded as a hyperedge x and g(x) is the probability mass function\nof the meetings evaluated at x. The distribution of the meetings is modeled as a two-component mixture of a non-anomalous distribution and an anomalous event distribution g(x) = (1\u2212 \u03c0)f(x) + \u03c0\u00b5(x), with \u03c0 as the mixture parameter. Then the paper learns the likelihood of each observation using variational EM algorithm with a multivariate Bernoulli variational approximation. The likelihood is subsequently used for the evaluation of the anomalousness. Hypergraph is specifically designed for high dimensional data in the graph. It provides a concise representation of the complex interactions among multiple nodes. But the representation only applies to binary relationships where an edge is either present or missing.\nFig. 1\nMODELING TWO OBSERVATIONS, 111111000 AND 000101111, WITH p = 9, USING A GRAPH (TOP) AND A HYPERGRAPH\n(BOTTOM). WITH THE GRAPH, REPRESENTING ONE OBSERVATION OF AN INTERACTION REQUIRES MULTIPLE EDGES. WITH"}, {"heading": "A HYPERGRAPH, ONE HYPEREDGE SUFFICES. THE HYPERGRAPH IS MORE EFFICIENT FOR STORING/REPRESENTING OBSERVATIONS AND MORE INFORMATIVE ABOUT THE REAL STRUCTURE OF THE DATA.", "text": ""}, {"heading": "II. ANOMALY DETECTION ON HYPERGRAPHS", "text": "Let H = {V , E} be a hypergraph [7] with vertex set V and hyperedge set E . Each hyperedge, denoted x 2 E , can be represented as a binary string of length p. Bits set to 1 correspond to vertices that participate in the hyperedge. In this setting, we may approximately equate E with {0, 1}p, i.e. the binary hypercube of dimension p. (We say \u201capproximately\u201d due to the existence of prohibited hyperedges, namely the origin, x = 0, and all x within Hamming distance 1 of the origin, which correspond to interactions between zero or one network nodes. The impact of this precluded set becomes negligible for very large p and is omitted from this paper for simplicity of presentation.) This is a finite set with 2p elements. We define g(x) to be the probability mass function (pmf) over E , evaluated at x.\nHypergraphs provide a more natural representation than graphs for multiple co-occurrence data of the type examined in this paper. For example, one could consider using a graph to represent co-occurrence data by having each vertex represent a network node and using weighted edges to connect vertices associated with observed co-occurrences. As Figure 1 illustrates, using a graph in this manner would imply connecting any pair of vertices appearing in an observation with an edge. The edge structure of a graph is usually represented as a p\u21e5p symmetric adjacency matrix with p\n2 (p 1) distinct elements, so that even converting observations into a collection edge weights\ncould be enormously challenging computationally. As Figure 1 illustrates, two observations can\n[Sun and Chawla 2004; Chawla and Sun 2006] consider using spatial auto-correlation to detect local spatial outliers. We categorize them as graph-based approach because the spatial neighborhood defined in those methods resembles the neighborhood defined in graph. For each point o, the paper defines the Spatial Local Outlier Measure (SLOM) as d\u0303(o) \u2217 \u03b2(o) to score its anomalousness. According to their definition, d\u0303 is the \u201cstretched\u201d distance between the point and its neighbors and \u03b2 is the oscillating parameter. SLOM captures the spatial autocorrelation using d\u0303 and spatial heteroscedasticity(nonconstant variance) with \u03b2. However, when the data is of high dimensions, the concept of neighborhood becomes less well-defined. The local anomaly defined in the proposed method using local spatial statistics would suffer from the \u201ccurse of dimensionality\u201d.\nGenerally speaking, static graph-based approaches consider not only the activity of individual users but also their interactions. The common practice is to extract important node features from the graph, which relies heavily on featur engineering. Some algorithms import graph theoretical properties such as the power-law or the random walk into the analysis. However, those approaches usually make strong assumptions on the graph generating process, which can be easily violated in real world social networks.\n2.2.2. Dynamic Graph. Social networks are dynamic in nature. Therefore, it is worthwhile to consider the problem of anomaly detection in a dynamic setting. A brief survey on dynamic network anomaly detection is elaborated in [Bilgin and Yener 2010]. The survey characterizes the techniques employed for the probl m into three groups: Time S ies Analysis of Graph Data, Anomaly Det ction using M nimum Description Length, Wi dow Based Approaches. Based on this categorization, we review those anomaly detection approaches that incorporate the network dynamics into their models.\n7\nDynamic networks can be represented as a time series of graphs. A common practice is to construct a time series from the graph observations or substructures. [Pincombe 2005] uses a number of graph topology distance measures to quantify the differences between two consecutive networks, such as weight, edge, vertex, and diameter. For each of these graph topology distance measures, a time series of changes is constructed by comparing the graph for a given period with the graph(s) from one or more previous periods. Given a graph G = {V,E,WV ,WE}, the algorithm constructs a time series of changes for each graph topology distance measures. Each time series is individually modeled by an ARMA process. The anomaly is defined as days with residuals of more than two standard errors from the best ARMA model. The paper detects anomalies by setting up a residual threshold for the goodness of model fitting for time series. The proposed method in [Pincombe 2005] is designed for change point detection. The performance of the proposed algorithm highly depends on how the graph topology distance measures are defined. Additionally, the distance measure is only able to capture the correlation between two consecutive time stamps rather than long-range dependencies.\nGraph eigenvectors of the adjacency matrices is another form of the time series extracted from dynamic graph streams. In [Ide\u0301 and Kashima 2004], the paper addresses the problem of anomaly detection in computer systems. Assume a system has N services, the paper defines a time evolving dependency matrix D \u2208 RN\u00d7N , where each element of the matrix Di,j is a function value relate to the number of service i\u2019s requests for service j within a pre-determined time interval. Given a time series of dependency matricesD(t), the algorithm extracts the principal eigenvector u(t) ofD(t) as the \u201cactivity\u201d vector, which can be interpreted as the distribution of the probability that a service is holding the control token of the system at a virtual time point. To detect anomalies, the authors define the typical pattern as a linear combination of the past activity vectors r(t) = c \u2211 i=1Wviu(t\u2212 i+1), where {vi} are the coefficients and c is the normalization constant. Then the algorithm calculates the dissimilarity of the present activity vector from this typical pattern. The anomaly metric z(t) is defined as z(t) = 1\u2212 r(t\u2212 1)Tu(t). When the anomaly metric quantity z(t) is greater than a given threshold, the system flags anomalous situation. Compared with representing graphs with edges, weights and vertices as in [Pincombe 2005], features built upon eigenvectors capture the underlying invariant characteristics of the system and preserve good properties such as positivity, non-degeneracy, etc.\nBesides time series analysis of the graph stream, Minimum description length (MDL) has been applied to anomaly detection as another way of characterizing the dynamic networks. [Sun et al. 2007] detects the change points in a stream of graph series. It introduces the concept of graph segment, which is one or more graph snapshots and the concept of source/destination partitions, which groups the source and destination nodes into clusters. Figure 3 illustrates those concepts in a three graph series. The rational behind the algorithm is to consider whether it is easier to include a new graph into the current graph segment or to start a new graph segment. If a new graph segment is created, it is treated as a change point. Given current graph segment G(s), encoding cost co and a new graph G(t), the algorithm computes the encoding cost for G(s) \u22c3{G(t)} as cn and G(t) as c. If cn \u2212 co < c, the new graph is included in the current segment. Otherwise, {G(t)} forms a new stream segment and time t is a change point. To compute the encoding cost of a graph segment, the algorithm tries to partition the nodes in a segment into source and destination nodes so that the MDL for encoding the partitions is minimized. In this case, a change point indicates the time when the structure of the graph has dramatically changed. One limitation of this algorithm is that it can only handle unweighted graphs, which cannot encode the intensity of the communication between users. Thus, this method does not fit the situation when the communications of people suddenly increase while the topological structure stays unchanged. (e.g. a heated discussion starting to prevail in a social network).\n[Akoglu et al. 2012] addresses the categorical anomaly detection by pattern-based compression, which also adopts MDL-principle. It encodes a database with multiple code tables and searches for the best partitioning of features using MDL-optimal rule. With the natural property of code tables, the algorithm declares the anomaly by the pattern that has long code word, which are rarely used and have high compression cost. The method has been successfully generalized to a broad range of data. The use of multiple code tables to describe the data in the proposed algorithm exploits the correlations between groups of features. But the partition of the features into groups would impose unrealistic independence assumptions on the data.\nFor window-based approach, scan statistics is the main-stream method. The idea of scan statistics is to slide a small window over local regions, computing certain local statistic (number of events for a point pattern, or average pixel value for an image) for each window. The supremum or maximum\nFig. 3. A graph stream with 3 graphs in 2 segments. First graph segment consisting of G(1) and G(2) has two source partitions\nI (1) 1 = {1, 2}, I (1) 2 = {3, 4}; two destination partitions J (1) 1 = {1}, J(1) =2= {2, 3}. Second graph segment consisting of G(3) has three source partitions I(2)1 = {1}, I (2) 2 = {2, 3}, I (2) 3 = {4}; three destination partitions J (2) 1 = {1}, J (2) 2 = {2}, J (2) 3 = {3}. [Sun et al. 2007]\nFigure 2: Notation illustration: A graph stream with 3 graphs in 2 segments. First graph segment consisting of G(1) and G(2) has two source partitions I (1) 1 = {1, 2}, I (1) 2 = {3, 4}; two destination partitions J (1) 1 = {1}, J (1) 2 = {2, 3}. Second graph segment consisting of G(3) has three source partitions I\n(2) 1 = {1}, I (2) 2 = {2, 3}, I (2) 3 = {4}; three\ndestination partitions J (2) 1 = {1}, J (2) 2 = {2}, J (2) 2 = {3}.\nis between (i) the number of bits needed to describe the communities (or, partitions) and their change points (or, segments) and (ii) the number of bits needed to describe the individual edges in the stream, given this information.\nWe begin by first assuming that the change-points as well the source and destination partitions for each graph segment are given, and we show how to estimate the bit cost to describe the individual edges (part (ii) above). Next, we show how to incorporate the partitions and segments into an encoding of the entire stream (part (i) above).\n4.1 Graph encoding In this paper, a graph is presented as a m-by-n binary matrix. For example in Figure 2, G(1) is represented as\nG(1) =\n0\nBB@ 1 0 0 1 0 0 0 1 1 0 0 1\n1\nCCA (1)\nConceptually, we can store a given binary matrix as a binary string with length mn, along with the two integers m and n. For example, equation 1 can be stored as 1100 0010 0011 (in column major order), along with two integers 4 and 3.\nTo further save space, we can adopt some standard lossless compression scheme (such as Hu man coding, or arithmetic coding [8]) to encode the binary string, which formally can be viewed as a sequence of realizations of a binomial random variable X. The code length for that is accurately estimated as mnH(X) where H(X) is the entropy of variable X. For notational convenience, we also write that as mnH(G(t)). Additionally, three integers need to be stored: the matrix sizes m and n, and the number of ones in the matrix (i.e., the number of edges in the graph) denoted as |E| 1. The 1|E| is needed for computing the probability of ones or zeros, which is required for several encoding scheme such as Hu man coding\ncost for storing three integers is log\u21e5|E|+log\u21e5m+log\u21e5n bits, where log\u21e5is the universal code length for an integer2. Notice that this scheme can be extended to a sequence of graphs in a segment.\nMore generally, if the random variable X can take values from the set M , with size |M | (a multinomial distribution), the entropy of X is H(X) = Px\u21e4M p(x) log p(x). where p(x) is the probability that X = x. Moreover, the maximum of H(X) is log |M | when p(x)= 1|M| for all x \u2326 M (pure random, most di\u2305cult to compress); the minimum is 0 when p(x) = 1 for a particular x \u2326 M (deterministic and constant, easiest to compress). For the binomial case, if all symbols are all 0 or all 1 in the string, we do not have to store anything because by knowing the number of ones in the string and the sizes of matrix, the receiver is already able to decode the data completely.\nWith this observation in mind, the goal is to organize the matrix (graph) into some homogeneous sub-matrices with low entropy and compress them separately, as we will describe next.\n4.2 Graph Segment encoding Given a graph stream segment G(s) and its partition as-\nsignments, we can precisely compute the cost for transmitting the segment as two parts: 1) Partition encoding cost: the model complexity for partition assignments, 2) Graph encoding cost: the actual code for the graph segment.\nPartition encoding cost The description complexity for transmitting the partition assignments for graph segment G(s) consists of the following terms:\nFirst, we need to send the number of source and destination nodes m and n using log\u21e5m+log\u21e5n bits. Note that, this term is constant, which has no e ect on the choice of final partitions.\nSecond, we shall send the number of source and destination partitions which is log\u21e5ks + log\n\u21e5\u2318s. Third, we shall send the source and destination partition\nassignments. To exploit the non-uniformity across partitions, the encoding cost is mH(P ) + nH(Q) where P is a\nmultinomial random variable with the probability pi = m\n(s) i\nm\nand m (s) i is the size of i-th source partition 1 \u2303 i \u2303 ks). Similarly, Q is another multinomial random variable with qi = n (s) i n and n (s) i is the size of i-th destination partition, 1 \u2303 i \u2303 \u2318s. For example in Figure 2, the partition sizes for first segment G(1) are m(1)1 = m(1)2 = 2, n(1)1 = 1, and n(1)2 = 2; the partition assignments for G(1) costs 4( 2\n4 log( 2 4 )+ 2 4 log( 2 4 ))\n3( 1 3 log( 1 3 ) + 2 3 log( 2 3 )) bits.\nIn summary, the partition encoding cost for graph segment G(s) is\nC(s)p := log \u21e5m + log\u21e5n + log\u21e5ks + log \u21e5\u2318s + (2)\nmH(P ) + nH(Q)\n2To encode a positive integer x, we need log\u21e5x log2 x + log2 log2 x + . . ., where only the positive terms are retained and this is the optimal length, if the range of x is unknown [19]\nResearch Track Paper\nof these locality statistics is known as th scan statistic. [Priebe et al. 2005] specifically discusses a framework of using scan statistics to perform anomaly de ection on dynamic graphs. Specifically, the algorithm defines the scan region by cons dering the cl sed kth-order neighborhood of vertex v in graph D = (V,E): Nk[v;D] = {w \u2208 V (D) : d(v, w) \u2264 k}. Here distance d(v, w) is the minimum directed path length from v to w in D. The induced subdigraph \u2126(N)(Nk[v;D]) is thus the scan region and any digraph invariant \u03a8k(v) of the scan region is the locality statistics. For instance, the out degree of the digraph can be one such invariant locality statistics. The scan statistic Mk(D) is the maximum locality statistic over all vertices. Th algorithm applies hypothesis testing by stating the null hypothesis (normality) and the alternative hypothesis (anomaly). Dig aphs with large scan statistic indicates the existence of the anomalous activity and are rejected under null hypothesis with certain threshold. Extension of scan statistics from standard graph o hypergraph rep esentation is also examined in [Park et al. 2008] for time-evolving graphs. The scan statistic is an intuitively appealing method to evaluate dynamic graph patterns. But one drawback of this type of method is the necessity to prespecify a window width before one looks t the data."}, {"heading": "3. GROUP ANOMALY DETECTION", "text": "Group anomaly or \u201ccollective anomaly\u201d detection in social network aims to discover groups of participants that collectively behave anomalously [Chandola et al. 2007]. This is a challenging task due to three reasons: (1) we do not know beforehand any members of a malicious group; (2) he members of anomalous groups may change over time; (3) usually no anomaly can be detected wh n we examine individual member. Most existing algorithms can only address one or two of these challenges."}, {"heading": "3.1. Activity-based Group Anomaly Detection", "text": "Activity-based group anomaly detection approaches usually assume that the group information is given beforehand and devote the most effort to model the activities within groups. Those app oaches also imply that groups are marginal independent with each other.\n[Das et al. 2008] proposes a probabilistic model to detect group of anomalies in categorical data sets. It generalizes the spatial scan statistic in [Priebe et al. 2005] for dynamic graphs to non-spatial data sets with discrete valued attributes. It uses Bayesian networks to model the relationship between the attributes and computes the group score for all subsets of the data S based on the model likelihood: F (S) = P (Data|H1(S)P (Data|H0) . Under this definition, H0 is the null hypothesis that no anomalies are present, and H1(S) is the alternative hypothesis specifying subset S is an ano alous group. Then it performs a heuristic search over arbitrary subsets of the data to find the groups that aximize the likelihood.\n9\nAt the final stage, it performs randomization testing to evaluate the statistical significance of the detected groups. For spatial data, the computation of scan statistics involves a definition of scanning region, which is often based on geographical properties. Non-spatial categorical data has the difficulty in defining local statistics based on geographical properties. Therefore, the efficient search heuristic is critical to the performance of algorithm. On the other hand, it lacks the solid theoretical justification and is sensitive to model mis-specification.\n[Das et al. 2009] considers the anomalies in categorical data sets and tries to detect anomalous attributes or combinations of attributes. The paper proposes two algorithms to test for anomalous records, i.e Conditional Probability Test and Marginal Probability Test. Conditional probability test uses conditional probability as the testing statistic. For two attributes at, bt, the algorithm considers the ration r(at, bt) = P (at)P (bt)P (at,bt) . Marginal probability computes a quantity called the qvalue, which is the cumulative probability mass of all the attributes q-val(at) = \u2211 x\u2208X P (x) where X = {x : P (x) \u2264 P (at)}. Q-value is in parallel with the p-value. This approach concerns with empirical distribution functions and is parameter free. But the underlying distributions of the attributes would heavily depend on the sample size of the data.\nAnother line of work formulates the group anomaly detection problem as a density estimation task. It imposes a hierarchical probabilistic model on the normal groups and estimates the distribution of the latent variables in the model. It evaluates the likelihood of the estimated latent variables for individual group and use it as a test statistic. The Multinomial Genre Model (MGM) proposed in [Xiong et al. 2011b] first investigates the problem following the paradigm of latent models. MGM models groups as a mixture of Gaussian distributions with different mixture rates. Formally, given M groups, each of which has Nm objects. MGM assumes that the object features Xm.n are generated from a mixture of K Gaussian, m = 1, 2, \u00b7 \u00b7 \u00b7 ,M , n = 1, 2, \u00b7 \u00b7 \u00b7 , Nm with a set of stereotypical mixture rates \u03c7. The mixture rates of the M groups belong to one of the stereotypical mixture rates in \u03c7. Figure 4 depicts the graphical model of the proposed model. The method then performs Bayesian inference to estimate the density of the mixture rate for each group. Then group anomaly detection is conducted by scoring the mixture rate likelihood of each group. This method finds groups whose topic variables {Zm, n} are not compatible with any of the stereo- typical topic distributions in \u03c7. In MGM, groups share the candidate topics \u03b2 globally, which leads to bad performance when groups have different sets of topics. [Xiong et al. 2011a] further extends MGM to Flexible Genre Model (FGM) with more flexibility in the generation of topic distributions, as shown in Figure 4. The motivation of FGM is to allow each group to have its own topics. Specifically, they change the set of topics \u03b2 from model hyper-parameters to random variables, depending on the genre parameter \u03b7. This extension enables the model to adapt to more diverse genres in groups.\nApart from the generative approach used in MGM and FGM, [Muandet and Scho\u0308lkopf 2013] takes a discriminative approach to estimate the density of the mixture model. It uses the same definition of group anomaly from [Xiong et al. 2011b] and represents groups as probability distributions. The authors consider kernel embedding of those probabilistic distributions. For two probabilities P1 and P2, the kernel on probability distributions is defined as K(P1,P2) = \u222b \u222b k(x, y)dPi(x)dPj(y), where k is a reproducing kernel in reproducing kernel Hilbert space (RKHS). They generalize the technique of one-class support vector machine (OCSVM) for point anomaly detection to group anomaly detection. Similar to OCSVM with translation invariant kernels, the authors compute the kernel of Gaussian distributions and apply SVM in a probability measure space. Interestingly, the proposed one class support measure machine (OCSMM) algorithm has inherent correspondence to the kernel density estimation, which is theoretically more attractive. Compared with generative approaches in [Xiong et al. 2011b; Xiong et al. 2011a], OCSMM does not make assumptions on the underlying distribution of the data and is generally less computational expensive. However, due to the use of Gaussian RBF kernels and support vector machine, the algorithm is inevitably sensitive to the selection of kernels as well as the soft margin parameter.\n[Babbar et al. 2013] takes a casual approach to detect the contextual anomaly. The paper proposes to encode the variables in the Bayesian network and use probabilistic association rule to discover anomalies. The association rule builds upon two measures namely support and confidence. Support describes the prior probability of a variable while confidence represents the conditional probability. Given a state variable X and observations Y , the paper defines the two measures as follows suppport(X = xi) = P (X = xi) and confidence(X = xi) = Pa(X = xi|Y ), where Pa is the parent nodes of X in the Bayesian network. The algorithm detects the domain specific anomalous patterns\nFig. 4. Graphical Model Representation of Multinomial Genre Model and Flexible Genre Model for activity-based group anomaly detection.\nLiang Xiong, Barnabas Poczos, Jeff Schneider think of these objects as \u2018red\u2019, \u2018blue\u2019, and \u2018emissive\u2019 galaxies, and each group Gm is a set of Nm objects, each object can be one of the K different types. Introduce the SK = {s \u2208 RK |sk \u2265 0, \u2211K k=1 sk = 1} notation for the K-dimensional probability simplex, and let \u03c7t \u2208 SK for all t = 1, . . . , T , and \u03c7 = {\u03c71, . . . ,\u03c7T } denote the set of T possible non-anomalous distributions (proportions) of the K different objects (red, blue, and emissive galaxies) in the M groups. Now we can ask the question whether in group Gm the distribution of these red, blue, and emissive galaxies looks normal, that is, they look similar to a distribution in \u03c7 = {\u03c71, . . . ,\u03c7T }, or we have found a group, where this distribution seems far from the distributions that we can see in the other groups. In the following sections we will propose two generative probabilistic models that can help us to answer this question and detect anomalous groups. 4 The Hierarchical Models In this section we introduce our generative models that describe the normal, that is the non-anomalous data, and then we show how we can detect anomalous groups using these models. Our proposed models are inspired by the LDA, however, there are very significant differences that we will explain later.\n4.1 The Uni-Modal Model\nThe LDA model is a generative probabilistic model originally proposed for modeling text corpora. First we briefly review this model, and then explain how we can extend this discrete model to be able to find anomalous groups in a data set given by any real vector-valued feature representation.\nIn the original LDA model the data set is a text corpus, that is a collection of M documents. Each document Gm is a set of Nm words, and each document is represented by a random mixture over latent topics, which is characterized by a distribution over words. Formally, let Dir(\u03c0) denote the Dirichlet distribution with parameter \u03c0, and let M(\u03b8) be the multinomial distribution with parameters \u03b8 \u2208 SK . In the LDA model given some nonnegative hyperparameters \u03c0 \u2208 RK+ , we generate first some \u03b8m \u2208 SK (m = 1, . . . , M) from the Dir(\u03c0) distribution (\u03b8m \u223c Dir(\u03c0)). Having these K dimensional \u03b8m vectors (topic distributions) we generate Zm,n \u223c M(\u03b8m) variables (n = 1, . . . , Nm) indicating which topic is active out of K when we generate the word Xm,n \u223c P (\u00b7|Zm,n,\u03b2). Here \u03b2 = {\u03b21, . . . ,\u03b2K} is a dictionary of K f -dimensional probability vectors (\u03b2k \u2208 Sf ), and P (\u00b7|Zm,n,\u03b2) = M(\u03b2Zm,n) is a multinomial distribution with parameters \u03b2Zm,n . While this\nmodel has been shown to be very successful for modeling discrete data, such as text corpora, in its original form it cannot be used for modeling real, vector-valued observations. Thus we modify this model slightly. Instead of using M(\u03b2Zm,n) for the observations, we assume \u03b2i = {\u03b2\u00b5i ,\u03b2\u03a3i } to be a mean value (\u03b2\u00b5i \u2208 Rf ) and a covariance matrix (\u03b2\u03a3i \u2208 Rf\u00d7f ), and our observations are given by: Xm,n \u223c P (\u00b7|Zm,n,\u03b2) = N (\u03b2\u00b5Zm,n ,\u03b2 \u03a3 Zm,n). We call this model Gaussian-LDA (GLDA). With GLDA we can model real, vector-valued observations, but it has a serious problem when we want to apply it for group anomaly detection. GLDA learns that each group is a certain mixture of K Gaussian components, but it also assumes that there is only one \u201cbest\u201d mixture (topic distribution) for all groups, because Dir(\u03c0), the distribution of topic distributions \u03b8 \u2208 SK , is uni-modal i.e. it peaks at a single point. While this is acceptable when used as the prior in LDA, it is too restrictive when used to model multimodal distributions of topic distributions. To address this issue we extend the GLDA model with the previously mentioned \u03c7 term, the set of the typical topic distributions (proportions of the Gaussian components). 4.2 The Multi-Modal Model\nIn this section we introduce the Mixture of Gaussian Mixture Model (MGMM) model that extends GLDA with a set of typical topic mixtures/distributions, and hence can resolve the previously mentioned uni-\nmodality p oblem. Th graphical representation of\nthis new model can be seen in Figure 1.\nxmnzmn\nE\nNM\nymS\nF\nFigure 1: The MGMM Model\nLet again \u03c7t \u2208 SK for all t = 1, . . . , T , and \u03c7 = {\u03c71, . . . ,\u03c7T } denote the set of possible non-anomalous probability distributions of the K different topics (red, blue, and emissive galaxies) in the M groups. Let \u03c0 \u2208 ST denote a distribution vector on the set \u03c7, and let \u03b2 = {\u03b2\u00b5k ,\u03b2\u03a3k }Kk=1 be a dictionary of the possible mean values and covariance matrices.\nThe generative process of the MGMM model is described in Algorithm 1. Note that this model is differ-\n(a) Multinomial Genre Model\nxmn\nzmn\nNM\nym m\nK\nT\nK\nFigure 1: The Flexible Genre Model (FGM).\nglobal distributions P (\u00b7|\u2318). Thus, the topics can be adapted to local group data, but the information is still shared globally. Moreover, the topic generators P (\u00b7|\u2318) determine how the topics { m,k} should look like. In turn, if a group uses unusual topics to generate its points, it can be identified.\nTo handle real-valued multidimensional data, we set the point-generating distributions (i.e., the topics) to be Gaussians, P (xm,n| m,k) = N (xm,n| m,k), where m,k = {\u00b5m,k,\u2303m,k} includes the mean and covariance parameters. For computational convenience, the topic generators are Gaussian-Inverse-Wishart (GIW) distributions, which are conjugate to the Gaussian topics. Hence \u2318k = {\u00b50,0, 0, \u232b0} parameterizes the GIW distribution [17] (See the supplementary materials for more details). Let \u21e5 = {\u21e1,\u21b5, \u2318} denote the model parameters. We can write the complete likelihood of data and latent variables in group Gm under FGM as follows:\nP (Gm, ym, \u2713m, m|\u21e5) = M(ym|\u21e1)Dir(\u2713m|\u21b5ym) Y k GIW ( m,k|\u2318k) Y n M(zmn|\u2713m)N (xmn| m,zmn).\nBy integrating out \u2713m, m and summing out ym, z, we get the marginal likelihood of Gm:\nP (Gm|\u21e5) = X\nt\n\u21e1t\nZ\n\u2713m, m\nDir(\u2713m|\u21b5t) Y\nk\nGIW ( m,k|\u2318k) Y\nn\nX\nk\n\u2713mkN (xmn| m,k)d md\u2713m.\nFinally, the data-set\u2019s likelihood is just the product of all groups\u2019 likelihoods.\n4 Inference and Learning\nTo learn FGM, we update the parameters \u21e5 to maximize the likelihood of data. The inferred latent states\u2014including the topic distributions \u2713m, the topics m, and the topic and genre memberships zm, ym\u2014can be used for detecting anomalies and exploring the data. Nonetheless, the inference and learning in FGM is intractable, so we train FGM using an approximate method described below.\n4.1 Inference\nThe approximate inference of the latent variables can be done using Gibbs sampling [11]. In Gibbs sampling, we iteratively update one variable at a time by drawing samples from its conditional distribution when all the other parameters are fixed. Thanks to the use of conjugate distributions, Gibbs sampling in FGM is simple and easy to implement. The sampling distributions of the latent variables in group m are given below. We use P (\u00b7| \u21e0) to denote the distribution of one variable conditioned on all the others. For the genre membership ym we have that:\nP (ym = t| \u21e0) / P (\u2713m|\u21b5t)P (ym = t|\u21e1) = \u21e1tDir(\u2713m|\u21b5t). For the topic distribution \u2713m:\nP (\u2713m| \u21e0) / P (zm|\u2713m)P (\u2713m|\u21b5, ym) = M(zm|\u2713m)Dir(\u2713m|\u21b5ym) = Dir(\u21b5ym + nm), where nm denotes the histogram of the K values in vector zm. The last equation follows from the Dirichlet-Multinomial conjugacy. For m,k, the kth topic in group m, one can find that:\nP ( m,k| \u21e0) / P (x(k)m | m,k)P ( m,k|\u2318k) = N (x(k)m | m,k)GIW ( m,k|\u2318k) = GIW ( m,k|\u23180k),\n(b) Flexible Genre Model\n(DSAP) based on two probabilistic association rules: 1) low support and high confidence 2) high support and low confidence. Then it sorts the detected DSAPs according to sensitivity analysis scores and considers th t p \u03c4 patterns with the lowest scores s output anomalies. Different from MGM or FGM, the proposed method operates on the ge eral Bayesian network rather than a specific probabilistic model. The evaluation of support and confidence on each nod is relativ ly cheap compared with full Bayesian inference. However, the detected causal anomalies would be ad hoc. The false positive rate would increase sharply with larger size Bayesian networks."}, {"heading": "3.2. Graph-based Group Anomaly Detection", "text": "The most common observations we have in social networks are the individual attributes as well as ties among par icipants. Graph-based g oup anomaly detection techniques seek to jointly utilize these observations and detect anomalous groups in a unified framework.\n3.2.1. Static Graph. Anomalous edge detection has b en proposed in [Chakraba ti 2004] based on graph partitioning. The algorithm aims to detect anomalous edges that deviate from the overall clustering structure. The rationale behind this method is that if the removal of an edge can significantly make the graph easier to partition, then the two linked nodes may have an anomalous relation. The partitioning algorithm tries to find the best number of partitions so that the Minimal Description Length (MDL) needed to encode and transmit all the partitions of the graph is minimized. For a graph with n nodes, the paper defines the group mapping G : {1, 2, ..., n} \u2192 {1, 2, \u00b7 \u00b7 \u00b7 , k} to assign nodes into k clusters. Thus, the Total Encoding Cost for the graph T (D; k,G) in the form of the adjacency matrix D = [di,j ] depends on the number of the clusters k as well as the group mapping of the nodes G. Anomalous edges are those edges whose removal would significantly reduce the total graph encoding cost. In the paper, the anomaly score of an edge is defined as the total encoding cost difference to transmit the ew partitions when the edge is removed, i.e, \u201coutlierness\u201d of edge (u, v) := T (D\u2032; k,G) \u2212 T (D; k,G). D and D\u2032 are equal of all edges except that d\u2032u,v = 0. Other similar work includes [Lin and Chalupsky 2003], which defines a rarity measure to discover unusual links, and [Rattigan and Jensen 2005], which uses a Katz measurement to statistically predict the likelihood of a link. Edge anomaly detection focus merely on pair-wise relationship and is not feasible for detecting more complicated anomalous behaviors with more than two people involved.\nFinding anomalous substructure in graphs is another topic of attention. For example, in the scenario of email exchanges within a company, email correspondence between managers and their secretaries should be normal (frequent pattern), while email exchange between assembly line workers and secretaries could be an anomalous pattern. [Noble and Cook 2003] presents an iterative expanding algorithm to look for rar substructures using their SubDue system [Cook and Holder 2000]. Given a labeled graph, where each node has a label identifying its type, the system starts with a list holding 1-vertex substructures for each unique vertex label. It modifies the list by generating, extending, deleting or inserting vertices and edges. One central issue is how to measure the anomalousness of a substructure. Simply counting the number of occurrences for substructures is not enough, as larger\n11\nsubstructures tend to have low occurrences. [Noble and Cook 2003] intuitively defines a score for a substructure S in a graph G as F2 = Size(S) \u00b7 Occurrences(S,G), which is simply the product of the total number of nodes within a substructure and its occurrences. A smaller value of F2 indicates a more abnormal substructure. Another issue of the problem is the computational complexity of the algorithm. Although [Cook and Holder 2000] shows that in practice the system runs in polynomial time, theoretically it faces exponential number of substructures.\nThe pioneering work of [Noble and Cook 2003] sees the rise of mining substructures in graphs. [Maruhashi et al. 2011] leverages the structural information in the heterogeneous networks to detect unusual subgraph patterns. The algorithm encodes the graph using a tensor and focuses on finding the suspicious spikes via tensor decomposition. Formally, given an M-mode tensor X of size I1\u00d7I2\u00d7\u00b7 \u00b7 \u00b7\u00d7 IM , the algorithm performs CP decomposition of the tensor of rank R as X \u2248 \u2211R r=1 \u03bbr(a (1) r \u00d7 \u00b7 \u00b7 \u00b7 a(M)r ), where {a(i)r } are rank-1 eigenscore vectors. The approximation would be exact when R equals the true rank of the tensor. Next the algorithm transforms the eigenscore vector plot (absolute value of eigenscore vs. attribute index) into the eigenscore histogram (absolute value of eigenscore vs. frequency count) and conducts spike detection on the histogram. The proposed approaches bridges graph mining and tensor analysis. Tensor decomposition is able to capture the complex structure in heterogeneous networks. But tensor decomposition problem itself can be NP-hard to solve. And the lack of explicit objective in the proposed anomaly detection framework would create difficulties in the final evaluation of the algorithm\u2019s performance.\nIn the setting of fraudulent activity detection, [Eberle and Holder 2007] jointly considers anomalous substructure and the criteria of MDL. Specifically, they run the SUBDUE system with MDL heuristics to find the normative pattern in the graph. Instances of substructure are evaluated against the normative pattern with a match cost. Anomalous substructures are the ones with the lowest matches. Based on this definition of group anomaly, [Eberle and Holder 2007] presents three slightly different algorithms, i.e. GBAD-MDL, GBAD-P and GBAD-MPS to detect anomalies. These methods first find all the instances of frequent substructures and evaluate the frequency of the abnormal structure multiplied by the match cost. A key drawback of this method is that it assumes that the degree of nodes in a graph is uniformly distributed, which is almost impossible in most social networks. As shown in [McGlohon et al. 2008; Chakrabarti and Faloutsos 2006], real graphs usually follow power law degree distribution instead of uniform distribution.\n\u03c0 p Gpa\u03b1 Rpa Xpa\nzp\u2192q zp\u2190q\nYpq\n\u03b8m\n\u03b2k\nN \u00d7N\nM\nApN\nK\nB\nIn social media, two forms of data coexist: one is the point-wise data, which characterize the features of an individual person. The other is pair-wise relational data, which describe the properties of social ties. Density estimation methods for group anomaly detection [Xiong et al. 2011b; Xiong et al. 2011a; Muandet and Scho\u0308lkopf 2013] emphasize on the point-wise data and usually overlook the pair-wise relational data. Graph-based methods highlight the graph structure but usually fail to account for the attributes of individual nodes. Additionally, existing group anomaly detections algorithms are all two-stage approaches: (i) identify groups, (ii) detect group anomalies. This strategy assumes that the\npoint-wise and pair-wise data are marginally independent. However, such independence assumption might underestimate the mutual influence between the group structure and the feature attributes. The detected group anomalies can hardly reveal the joint effect of these two forms of data.\nWith those considerations, [Rose et al. 2014] proposes to build an alla prima that can accomplish the tasks of group discovery and anomaly detection all at once. They develop a hierarchical Bayes model: the GLAD model, for detecting the group anomaly. The GLAD model utilizes both the pair-wise and point-wise data and automatically infers the group membership and the role at the same time. It models a social network with N individuals. Assuming that each person p is associated with a group identity Gp and a role identity Rp. By groups, it means the clusters that capture the similarity suggested by the pair-wise communications. By roles, it refers to the mixture components that categorize the point-wise feature values of the nodes. For simplification, they fix the number of groups as M and the number of roles as K. Figure 3.2.1 shows the plate notation for the GLAD model.\nFor each person p, he joins a group according to the membership probability distribution \u03c0p. GLAD imposes a Dirichlet prior on the membership distribution. It is well known that the Dirichlet distribution is conjugate to the multinomial distribution. It assumes the pair-wise link Yp,q between person p and person q depends on the group identities of both p and q with the parameter B. Furthermore, it models the dependency between the group and the role using a multinomial distribution parameterized by a set of role mixture rate {\u03b81:M}. The role mixture rate characterizes the constitution of the group: the proportion of the population that plays the same role in the group. Finally, it models the activity feature vector of the individual Xp as the dependent variable of his role with parameter set {\u03b21:K}.\nGLAD defines the group anomaly based on the role mixture rates, it scores the group anomalousness using \u2212\u2211p\u2208G\u3008log p(Rp|\u0398)\u3009p. The most anomalous group will have the highest anomaly score. In practice, it approximates the true log likelihood with the variational log likelihood to get \u2212\u2211p\u2208G\u3008log p(Rp|\u0398)\u3009q. A limitation of GLAD is that it only models the static network. This might be restrictive if we want to further consider dynamic networks. Besides the anomaly group whose mixture rate deviates significantly from other groups, it is also interesting to study how the mixture rate evolves over time.\n3.2.2. Dynamic Graph. Evolving networks can also provide insights into the temporal changes of groups. Detecting anomalously groups in dynamic graphs is more challenging, as the group structures are not fixed and the unusual patterns in the group can also change.\n[Friedland and Jensen 2007] take a bipartite graph of individual entities and sequential ordered attributes as inputs and returns a group of entities whose attributes sequences are less likely to be generated from the proposed Markov chain model. One example of this type of anomaly is that several people constantly jump from companies to companies together. They track the complete history of employments and disclosures, and recognize the tribes that are closely related. Formally, the method requires bipartitie graph G = (R \u22c3 A,E), where R = {ri} is the entity representatives, A = {aj} is the attributes and E are edges with time interval annotation. For each edge e \u2208 E, e = (ri, aj , tstartij , tendij). The method begins by listing the co-worker relationships in the graph. Every pair fij = (ri, rj) indicates the individuals that have worked together. This results in a new graph H = (R,F ), where edges in the new graph F = {fij} is annotated with individuals attribute and history information. Then the paper defines a significance score for each edge, which measures the significance or the anomalousness of shared jobs. The algorithm proceeds by identifying significant edges and computing the significance score c for each of them. Then the proposed method picks a threshold d for the scores and prune all the edges fij for cij < d. After pruning, the connected components in the remaining graph (which should be quite sparse after the pruning) are regarded as anomalous groups, or tribes as referred in the paper. As also pointed by authors, the choice of scoring pairs constitutes the heart of the problem, thus posing difficulty in the selection\n[Tong et al. 2008b] directly analyze graph structures and efficiently track node proximity, which measures the relevance between two nodes in bipartite graphs. The paper defines a dynamic proximity score based on the probability to \u201crandom walk\u201d from one to the other in the static graph. Low proximity to other nodes can in a way indicate anomaly. Their definition of dynamic proximity accounts for two important aspects of node relevance: proximity involves multiple snapshots of the graph; proximity does not drop over time. [Tong et al. 2008b] extends this method to track anomalous nodes in time evolving graphs by defining a dynamic proximity metric. This dynamic proximity is derived from the edge and weight differences between graph snapshots and preserves a monotonicity property.\n[Liu et al. 2008] proposes to detect the significant changing subgraphs. Given two consecutive snapshots of a graph Gi\u22121 and Gi, the algorithm defines an importance score to measure the accumulative change of a node\u2019s closeness to its l-step neighbors (neighbors within l hops from the node) between two consecutive graph slices. In their context, random walk with restart is used to model the node relevance. The closeness of a pair of vertices vj and vk is defined as \u03a0l(j, k) =\u2211 \u03c4 :vj=\u2192vk;length(\u03c4)\u2264l p(\u03c4)c(1 \u2212 c)length(\u03c4), where \u03c4 is a path from vj to vk whose length is length(\u03c4) with transition probability p(\u03c4). The importance score is therefore the summation of the closeness changes of vj to the other nodes, defined as V Ii(vj) = \u2211 vk\u2208Vi |\u03a0li\u22121(j, k) \u2212 \u03a0li(j, k)| . Note that two consecutive graph slices Gi and Gi+1 have the same set of nodes, but their edge set could be different. With the node closeness \u03a0li and the vertex importance score V I, the paper uses a strategy similar to density clustering to detect the significant subgraphs. Specifically, the algorithm puts the most important node in the current subgraph g, adds all of its l-step neighbors to a max-heap. As long as there exists a node whose closeness with node t exceeds certain threshold, the algorithm iteratively moves t from the heap into g. When the iteration terminates, g is regarded as the anomalous subgraph, and the algorithm proceeds to generate anomalous subgraphs for the next timestamp. The proposed algorithm detects subgraphs with significant change in edges as group anomalies. The incremental learning of nodes closeness changes makes the algorithm quite efficiently. However, the output subgraphs heavily rely on the threshold for the closeness, and there is no clear mapping between the nodes\u2019 closeness and anomalousness.\nCHRONICLE: A Two-Stage Density-based Clustering of Dynamic Networks 3\nworks, it has also some weak points: (1) finding only stable clusters of single path (i.e., a sequence of local clusters over time); (2) finding a very small number of clusters (i.e., the most stable top-k clusters); (3) not being scalable w.r.t. the length of dynamic networks; and (4) using a large amount of memory depending on its parameters. All these weak points are caused by the fact that the BFS method is based on a dynamic programming (DP) algorithm. Besides the clusters of single path type, actually, there are many cohesive clusters of non-single path type in t-partite graph. Figur 2 shows an example of t-partite graph over three timestamp networks. Each network has 3\u223c4 local clusters. The numbers on lines between T1 and T2 (or T2 and T3) indicate that they have a non-zero similarity. When k = 1, the BFS method finds a single path cluster c11c21c31 because it has the strongest similarities between local clusters. However, if some members in\n12 transfer to c24, some members in c13 to c23, and the members in c23 nd c24 are merged into c33, then there could be another cluster like (c12c13)(c23c24)c33, where the similarity between (c12c13) and (c23c24) and the similarity between (c23c24) and c33 might be very high ( .e., very cohesive) altho gh the similarity of each single path (e.g., c13c23c33) are not so high. Here, () represents a consolidation of multiple local clusters. We call a cluster of this type as a path group cluster since re are multiple paths ver ti e in th cluster. The BFS cannot find the clusters of this type.\namount of memory usage of the BFS method largely increase. Using disk for sav-\nIn another work which tries to detect changing communities by [Kim and Han 2009], the authors propose a two-stage density-based clustering algorithm CHRONICLE. The algorithm first clusters nodes in each snapshot graph Gi at time Ti using structural similarity \u03c3, defined as \u03c3(v, w) = |N(v) \u22c2 N(w)|\u221a\n|N(v)|\u00d7|N(w)| ,\n14\nwhere N(v) is the neighborhood nodes of v. Then the algorithm replaces each cluster with one node to form a t-partite graph, as shown in Fig. 5. In the t-partite graph, the edge weight between two nodes (dashed edges in Fig. 5) within a time stamp Ti denotes the number of edges between the two clusters, and the edge weight between two nodes from two consecutive time stamps is defined as the Jaccard similarity between the node sets of two clusters. In the second stage, SCAN is applied again on the t-partite graph. In Fig. 5 different colors represents different clusters in the t-partite graph. From these clusters we can clearly monitor the formation and dissolving of the groups, which could provide some hint on which groups are anomalously changing. However, the algorithm is originally designed for monitoring community evolution instead of anomalous changing group detection. It is not clear how the algorithm can be adapted for anomaly detection yet.\n[Heard et al. 2010] also presents a two-stage method, which combines the Bayesian approach for discrete activity modeling with the graph analysis techniques for discovering anomalous structures. In the first stage identifies potentially anomalous nodes by conjugating Bayesian models for discrete time counting processes. Specifically, it models the number of communications made from i to j up until discrete time t denoted by Nij(t) as a counting process. It learns the distributions of the counts and use predictive p-value to evaluate the new observations for anomalous nodes. In the second stage, standard network inference tools are applied to the reduced subnetwork of the anomalous nodes identified from the first stage to uncover anomalous structure. Simulated cell phone communication as well as realtime press and media summary data are investigated to validate the method. This approach does not distinguish between point anomaly and group anomaly, hence hard to evaluate.\nTo further account for the dynamic nature of social media, [Rose et al. 2014] generalizes GLAD to the d-GLAD model as an extension for handling time series and formulate the problem as a change point detection task. The paper models the temporal evolution of the role mixture rate for each group with a series of multivariate Gaussian distributions. At a particular time point, the Gaussian has its mean as the value of the mixture rate. And the mixture rate of the next time point is a normalized sample from this Gaussian distribution. Since the model requires the mixture rate to be the parameters of a multivariate distribution over features, the authors apply a soft-max function to normalize the sample drawn from the multivariate Gaussian. The soft-max function is defined as S(\u03b8m) = exp \u03b8m\u2211\nm exp \u03b8m\n. When\nthe total time length T equals one, d-GLAD reduces to the GLAD model. Figure 3.2.2 depicts the probabilistic graphical model of d-GLAD. The model is demonstrated successful in detecting change in topics of the scientific publications and party affiliation shift of US senators."}, {"heading": "4. CONCLUSIONS AND FUTURE RESEARCH", "text": "In this paper we present a survey of social media anomaly detection methods. Based on the type of target anomalies, these methods fall into two categories: point anomaly detection and group anomaly detection. Moreover, given the different formats of input information, they can be further classified into activity-based approaches and graph-based approaches. For the graph-based approaches, we divide the methodologies according to whether they consider the time dynamics of the social graph.\nOne challenge in anomaly detection is to distinguish between data errors and the \u201cgenuine\u201d anomalies, i.e, those that were caused by the change in the underlying data distribution. As in most cases, it is very difficult to obtain the ground truth labels for the anomalies. We usually ignore the differences before conducting the anomaly detection. Only after we obtain the detection results and perform detailed analysis can we tease out the data error and recognize the \u201cgenuine\u201d anomalies.\nIn summary, social media anomaly detection is still at an early stage. Most existing methods rely heavily on the specific application and self-defined anomalies. Some of the reviewed methods are originally designed for other related purposes, such as community monitoring and proximity tracking, instead of anomaly detection. In addition, many of the existing methods deal with memory-resident graphs, while real life social networks are often too large to fit into the memory. Distributed and online social network anomaly detection are two promising areas. In the case of very large social networks, new techniques for effectively summarizing the entire social network are also needed."}, {"heading": "5. ACKNOWLEDGMENT", "text": "We would like to thank Dr. Sanjay Chawla from University of Sydney for his encouragement and detailed advice on the formulation of the anomaly categorization, difference between the data error and true anomalies. We also dedicate our acknowledgement to Dr. Huan Liu from Arizona State University who read this survey and provide valuable advice."}], "references": [{"title": "Machine learning approaches to network anomaly detection. In Proceedings of the second workshop on tackling computer systems problems with machine learning(SYSML", "author": ["Tarem Ahmed", "Boris Oreshkin", "Mark\u201d Coates"], "venue": null, "citeRegEx": "Ahmed et al\\.,? \\Q2007\\E", "shortCiteRegEx": "Ahmed et al\\.", "year": 2007}, {"title": "Anomaly detection in large graphs", "author": ["L Akoglu", "M McGlohon."], "venue": "CMU-CS-09-173 Technical November (2009).", "citeRegEx": "Akoglu and McGlohon.,? 2009", "shortCiteRegEx": "Akoglu and McGlohon.", "year": 2009}, {"title": "Oddball: Spotting anomalies in weighted graphs", "author": ["Leman Akoglu", "Mary McGlohon", "Christos Faloutsos."], "venue": "Advances in Knowledge Discovery and Data Mining. Springer, 410\u2013421.", "citeRegEx": "Akoglu et al\\.,? 2010", "shortCiteRegEx": "Akoglu et al\\.", "year": 2010}, {"title": "Fast and Reliable Anomaly Detection in Categorical Data", "author": ["L. Akoglu", "H. Tong", "J. Vreeken", "C. Faloutsos."], "venue": "(2012).", "citeRegEx": "Akoglu et al\\.,? 2012", "shortCiteRegEx": "Akoglu et al\\.", "year": 2012}, {"title": "A Causal Approach for Mining Interesting Anomalies", "author": ["Sakshi Babbar", "Didi Surian", "Sanjay Chawla."], "venue": "Advances in Artificial Intelligence. Springer, 226\u2013232.", "citeRegEx": "Babbar et al\\.,? 2013", "shortCiteRegEx": "Babbar et al\\.", "year": 2013}, {"title": "Dynamic network evolution: Models, clustering, anomaly detection", "author": ["C.C. Bilgin", "B. Yener."], "venue": "Technical Report. Technical Report, 2008, Rensselaer University, NY.", "citeRegEx": "Bilgin and Yener.,? 2010", "shortCiteRegEx": "Bilgin and Yener.", "year": 2010}, {"title": "Dynamic topic models", "author": ["David M. Blei", "John D. Lafferty."], "venue": "Proceedings of the 23rd international conference on Machine learning (ICML \u201906). ACM, New York, NY, USA, 113\u2013120. DOI:http://dx.doi.org/10.1145/1143844.1143859", "citeRegEx": "Blei and Lafferty.,? 2006", "shortCiteRegEx": "Blei and Lafferty.", "year": 2006}, {"title": "Latent dirichlet allocation", "author": ["David M. Blei", "Andrew Y. Ng", "Michael I. Jordan."], "venue": "J. Mach. Learn. Res. 3 (March 2003), 993\u20131022.", "citeRegEx": "Blei et al\\.,? 2003", "shortCiteRegEx": "Blei et al\\.", "year": 2003}, {"title": "AutoPart: parameter-free graph partitioning and outlier detection", "author": ["Deepayan Chakrabarti."], "venue": "Proceedings of the 8th European Conference on Principles and Practice of Knowledge Discovery in Databases (PKDD \u201904). Springer-Verlag New York, Inc., New York, NY, USA, 112\u2013124.", "citeRegEx": "Chakrabarti.,? 2004", "shortCiteRegEx": "Chakrabarti.", "year": 2004}, {"title": "Graph mining: Laws, generators, and algorithms", "author": ["Deepayan Chakrabarti", "Christos Faloutsos."], "venue": "ACM Comput. Surv. 38, 1, Article 2 (June 2006). DOI:http://dx.doi.org/10.1145/1132952.1132954", "citeRegEx": "Chakrabarti and Faloutsos.,? 2006", "shortCiteRegEx": "Chakrabarti and Faloutsos.", "year": 2006}, {"title": "Toward scalable learning with non-uniform class and cost distributions: A case study in credit card fraud detection", "author": ["P.K. Chan", "S.J. Stolfo"], "venue": null, "citeRegEx": "Chan and Stolfo.,? \\Q1998\\E", "shortCiteRegEx": "Chan and Stolfo.", "year": 1998}, {"title": "Outlier detection: A survey", "author": ["V. Chandola", "A. Banerjee", "V. Kumar."], "venue": "ACM Computing Surveys, to appear (2007).", "citeRegEx": "Chandola et al\\.,? 2007", "shortCiteRegEx": "Chandola et al\\.", "year": 2007}, {"title": "Anomaly Detection for Discrete Sequences: A Survey", "author": ["Varun Chandola", "Arindam Banerjee", "Vipin Kumar."], "venue": "IEEE Trans. on Knowl. and Data Eng. 24, 5 (May 2012), 823\u2013839. DOI:http://dx.doi.org/10.1109/TKDE.2010.235", "citeRegEx": "Chandola et al\\.,? 2012", "shortCiteRegEx": "Chandola et al\\.", "year": 2012}, {"title": "Anomaly Detection: A Survey", "author": ["Varun Chandola", "Arindam Banerjee", "Vipin\u201d Kumar"], "venue": null, "citeRegEx": "Chandola et al\\.,? \\Q2007\\E", "shortCiteRegEx": "Chandola et al\\.", "year": 2007}, {"title": "SLOM: a new measure for local spatial outliers", "author": ["Sanjay Chawla", "Pei Sun."], "venue": "Knowledge and Information Systems 9, 4 (2006), 412\u2013429.", "citeRegEx": "Chawla and Sun.,? 2006", "shortCiteRegEx": "Chawla and Sun.", "year": 2006}, {"title": "Detection and characterization of anomalies in multivariate time series", "author": ["Haibin Cheng", "Pang-Ning Tan", "Christopher Potter", "Steven Klooster"], "venue": "In SDM\u201909", "citeRegEx": "Cheng et al\\.,? \\Q2009\\E", "shortCiteRegEx": "Cheng et al\\.", "year": 2009}, {"title": "Graph-Based Data Mining", "author": ["Diane J. Cook", "Lawrence B. Holder."], "venue": "IEEE Intelligent Systems 15, 2 (March 2000), 32\u201341. DOI:http://dx.doi.org/10.1109/5254.850825", "citeRegEx": "Cook and Holder.,? 2000", "shortCiteRegEx": "Cook and Holder.", "year": 2000}, {"title": "Detecting anomalous groups in categorical datasets", "author": ["K. Das", "J. Schneider", "D.B. Neill."], "venue": "Carnegie Mellon University, School of Computer Science, Machine Learning Department.", "citeRegEx": "Das et al\\.,? 2009", "shortCiteRegEx": "Das et al\\.", "year": 2009}, {"title": "Anomaly pattern detection in categorical datasets", "author": ["Kaustav Das", "Jeff Schneider", "Daniel B Neill."], "venue": "Proceedings of the 14th ACM SIGKDD international conference on Knowledge discovery and data mining. ACM, 169\u2013176.", "citeRegEx": "Das et al\\.,? 2008", "shortCiteRegEx": "Das et al\\.", "year": 2008}, {"title": "Mining Heterogeneous Multivariate Time-Series for Learning Meaningful Patterns: Application to Home Health Telecare", "author": ["Florence Duch\u00eane", "Catherine Garbay", "Vincent Rialle."], "venue": "CoRR abs/cs/0412003 (2004).", "citeRegEx": "Duch\u00eane et al\\.,? 2004", "shortCiteRegEx": "Duch\u00eane et al\\.", "year": 2004}, {"title": "Computer Intrusion Detection Based on Bayes Factors for Comparing Command Transition Probabilities", "author": ["William Dumouchel."], "venue": "Technical Report.", "citeRegEx": "Dumouchel.,? 1999", "shortCiteRegEx": "Dumouchel.", "year": 1999}, {"title": "Discovering Structural Anomalies in Graph-Based Data", "author": ["William Eberle", "Lawrence Holder."], "venue": "Proceedings of the Seventh IEEE International Conference on Data Mining Workshops (ICDMW \u201907). IEEE Computer Society, Washington, DC, USA, 393\u2013398. DOI:http://dx.doi.org/10.1109/ICDMW.2007.35", "citeRegEx": "Eberle and Holder.,? 2007", "shortCiteRegEx": "Eberle and Holder.", "year": 2007}, {"title": "Mixed-membership models of scientific publications", "author": ["Elena Erosheva", "Stephen Fienberg", "John Lafferty."], "venue": "Proceedings of the National Academy of Sciences of the United States of America 101, Suppl 1 (6 April 2004), 5220\u20135227. DOI:http://dx.doi.org/10.1073/pnas.0307760101", "citeRegEx": "Erosheva et al\\.,? 2004", "shortCiteRegEx": "Erosheva et al\\.", "year": 2004}, {"title": "A geometric framework for unsupervised anomaly detection: Detecting intrusions in unlabeled data", "author": ["E. Eskin", "A. Arnold", "M. Prerau", "L. Portnoy", "S. Stolfo."], "venue": "Kluwer.", "citeRegEx": "Eskin et al\\.,? 2002", "shortCiteRegEx": "Eskin et al\\.", "year": 2002}, {"title": "Finding tribes: identifying close-knit individuals from employment patterns", "author": ["Lisa Friedland", "David Jensen."], "venue": "Proceedings of the 13th ACM SIGKDD international conference on Knowledge discovery and data mining (KDD \u201907). ACM, New York, NY, USA, 290\u2013299. DOI:http://dx.doi.org/10.1145/1281192.1281226", "citeRegEx": "Friedland and Jensen.,? 2007", "shortCiteRegEx": "Friedland and Jensen.", "year": 2007}, {"title": "A study in using neural networks for anomaly and misuse detection", "author": ["Anup K. Ghosh", "Aaron Schwartzbard."], "venue": "Proceedings of the 8th conference on USENIX Security Symposium - Volume 8 (SSYM\u201999). USENIX Association, Berkeley, CA, USA, 12\u201312.", "citeRegEx": "Ghosh and Schwartzbard.,? 1999", "shortCiteRegEx": "Ghosh and Schwartzbard.", "year": 1999}, {"title": "Event detection from time series data", "author": ["Valery Guralnik", "Jaideep Srivastava."], "venue": "Proceedings of the fifth ACM SIGKDD international conference on Knowledge discovery and data mining (KDD \u201999). ACM, New York, NY, USA, 33\u201342. DOI:http://dx.doi.org/10.1145/312129.312190", "citeRegEx": "Guralnik and Srivastava.,? 1999", "shortCiteRegEx": "Guralnik and Srivastava.", "year": 1999}, {"title": "Discrete temporal models of social networks", "author": ["Steve Hanneke", "Eric P. Xing."], "venue": "Proceedings of the 2006 conference on Statistical network analysis (ICML\u201906). Springer-Verlag, Berlin, Heidelberg, 115\u2013125.", "citeRegEx": "Hanneke and Xing.,? 2007", "shortCiteRegEx": "Hanneke and Xing.", "year": 2007}, {"title": "Identification of outliers", "author": ["D.M. Hawkins."], "venue": "Chapman and Hall.", "citeRegEx": "Hawkins.,? 1980", "shortCiteRegEx": "Hawkins.", "year": 1980}, {"title": "Bayesian anomaly detection methods for social networks", "author": ["Nicholas A. Heard", "David J. Weston", "Kiriaki Platanioti", "David J. Hand."], "venue": "(11 2010).", "citeRegEx": "Heard et al\\.,? 2010", "shortCiteRegEx": "Heard et al\\.", "year": 2010}, {"title": "Online anomaly detection with expert system feedback in social networks", "author": ["C. Horn", "R. Willett."], "venue": "Acoustics, Speech and Signal Processing (ICASSP), 2011 IEEE International Conference on. IEEE, 1936\u20131939.", "citeRegEx": "Horn and Willett.,? 2011", "shortCiteRegEx": "Horn and Willett.", "year": 2011}, {"title": "Eigenspace-based anomaly detection in computer systems", "author": ["Tsuyoshi Id\u00e9", "Hisashi Kashima."], "venue": "Proceedings of the tenth ACM SIGKDD international conference on Knowledge discovery and data mining. ACM, 440\u2013449.", "citeRegEx": "Id\u00e9 and Kashima.,? 2004", "shortCiteRegEx": "Id\u00e9 and Kashima.", "year": 2004}, {"title": "Adaptive event detection with time-varying poisson processes", "author": ["Alexander Ihler", "Jon Hutchins", "Padhraic Smyth."], "venue": "Proceedings of the 12th ACM SIGKDD international conference on Knowledge discovery and data mining (KDD \u201906). ACM, New York, NY, USA, 207\u2013216. DOI:http://dx.doi.org/10.1145/1150402.1150428", "citeRegEx": "Ihler et al\\.,? 2006", "shortCiteRegEx": "Ihler et al\\.", "year": 2006}, {"title": "A Hybrid High-Order Markov Chain Model for Computer Intrusion Detection", "author": ["Wen H. Ju", "Yehuda Vardi."], "venue": "Journal of Computational and Graphical Statistics 10, 2 (2001), 277\u2013295. DOI:http://dx.doi.org/10.1198/10618600152628068", "citeRegEx": "Ju and Vardi.,? 2001", "shortCiteRegEx": "Ju and Vardi.", "year": 2001}, {"title": "HOT SAX: Efficiently Finding the Most Unusual Time Series Subsequence", "author": ["Eamonn Keogh", "Jessica Lin", "Ada Fu."], "venue": "Proceedings of the Fifth IEEE International Conference on Data Mining (ICDM \u201905). IEEE Computer Society, Washington, DC, USA, 226\u2013233. DOI:http://dx.doi.org/10.1109/ICDM.2005.79", "citeRegEx": "Keogh et al\\.,? 2005", "shortCiteRegEx": "Keogh et al\\.", "year": 2005}, {"title": "CHRONICLE: A Two-Stage Density-Based Clustering Algorithm for Dynamic Networks", "author": ["Min-Soo Kim", "Jiawei Han."], "venue": "Proceedings of the 12th International Conference on Discovery Science (DS \u201909). Springer-Verlag, Berlin, Heidelberg, 152\u2013 167. DOI:http://dx.doi.org/10.1007/978-3-642-04747-3 14", "citeRegEx": "Kim and Han.,? 2009", "shortCiteRegEx": "Kim and Han.", "year": 2009}, {"title": "Authoritative sources in a hyperlinked environment", "author": ["Jon M. Kleinberg."], "venue": "J. ACM 46, 5 (Sept. 1999), 604\u2013632. DOI:http://dx.doi.org/10.1145/324133.324140", "citeRegEx": "Kleinberg.,? 1999", "shortCiteRegEx": "Kleinberg.", "year": 1999}, {"title": "Estimating time-varying networks", "author": ["Mladen Kolar", "Le Song", "Amr Ahmed", "Eric P. Xing."], "venue": "Annals of Applied Statistics 4, 1 (2010), 94\u2013123.", "citeRegEx": "Kolar et al\\.,? 2010", "shortCiteRegEx": "Kolar et al\\.", "year": 2010}, {"title": "Diagnosing network-wide traffic anomalies", "author": ["Anukool Lakhina", "Mark Crovella", "Christophe Diot."], "venue": "SIGCOMM Comput. Commun. Rev. 34 (August 2004), 219\u2013230. Issue 4. DOI:http://dx.doi.org/10.1145/1030194.1015492", "citeRegEx": "Lakhina et al\\.,? 2004", "shortCiteRegEx": "Lakhina et al\\.", "year": 2004}, {"title": "Finding a team of experts in social networks", "author": ["Theodoros Lappas", "Kun Liu", "Evimaria Terzi."], "venue": "Proceedings of the 15th ACM SIGKDD international conference on Knowledge discovery and data mining (KDD \u201909). ACM, New York, NY, USA, 467\u2013476. DOI:http://dx.doi.org/10.1145/1557019.1557074", "citeRegEx": "Lappas et al\\.,? 2009", "shortCiteRegEx": "Lappas et al\\.", "year": 2009}, {"title": "A comparative study of anomaly detection schemes in network intrusion detection", "author": ["Ar Lazarevic", "Aysel Ozgur", "Levent Ertoz", "Jaideep Srivastava", "Vipin\u201d Kumar"], "venue": "In Proceedings of the third SIAM international conference on Data Mining", "citeRegEx": "Lazarevic et al\\.,? \\Q2003\\E", "shortCiteRegEx": "Lazarevic et al\\.", "year": 2003}, {"title": "A symbolic representation of time series, with implications for streaming algorithms", "author": ["Jessica Lin", "Eamonn Keogh", "Stefano Lonardi", "Bill Chiu."], "venue": "Proceedings of the 8th ACM SIGMOD workshop on Research issues in data mining and knowledge discovery (DMKD \u201903). ACM, New York, NY, USA, 2\u201311. DOI:http://dx.doi.org/10.1145/882082.882086", "citeRegEx": "Lin et al\\.,? 2003", "shortCiteRegEx": "Lin et al\\.", "year": 2003}, {"title": "Unsupervised Link Discovery in Multi-relational Data via Rarity Analysis", "author": ["Shou-de Lin", "Hans Chalupsky."], "venue": "Proceedings of the Third IEEE International Conference on Data Mining (ICDM \u201903). IEEE Computer Society, Washington, DC, USA, 171\u2013.", "citeRegEx": "Lin and Chalupsky.,? 2003", "shortCiteRegEx": "Lin and Chalupsky.", "year": 2003}, {"title": "Spotting Significant Changing Subgraphs in Evolving Graphs", "author": ["Zheng Liu", "Jeffrey Xu Yu", "Yiping Ke", "Xuemin Lin", "Lei Chen."], "venue": "Proceedings of the 2008 Eighth IEEE International Conference on Data Mining (ICDM \u201908). IEEE Computer Society, Washington, DC, USA, 917\u2013922. DOI:http://dx.doi.org/10.1109/ICDM.2008.112", "citeRegEx": "Liu et al\\.,? 2008", "shortCiteRegEx": "Liu et al\\.", "year": 2008}, {"title": "A tutorial on spectral clustering", "author": ["Ulrike Luxburg."], "venue": "Statistics and Computing 17, 4 (Dec. 2007), 395\u2013416. DOI:http://dx.doi.org/10.1007/s11222-007-9033-z", "citeRegEx": "Luxburg.,? 2007", "shortCiteRegEx": "Luxburg.", "year": 2007}, {"title": "Multiaspectforensics: Pattern mining on large-scale heterogeneous networks with tensor analysis", "author": ["Koji Maruhashi", "Fan Guo", "Christos Faloutsos."], "venue": "Advances in Social Networks Analysis and Mining (ASONAM), 2011 International Conference on. IEEE, 203\u2013210.", "citeRegEx": "Maruhashi et al\\.,? 2011", "shortCiteRegEx": "Maruhashi et al\\.", "year": 2011}, {"title": "Weighted graphs and disconnected components: patterns and a generator", "author": ["Mary McGlohon", "Leman Akoglu", "Christos Faloutsos."], "venue": "Proceedings of the 14th ACM SIGKDD international conference on Knowledge discovery and data mining (KDD \u201908). ACM, New York, NY, USA, 524\u2013532. DOI:http://dx.doi.org/10.1145/1401890.1401955", "citeRegEx": "McGlohon et al\\.,? 2008", "shortCiteRegEx": "McGlohon et al\\.", "year": 2008}, {"title": "Outrank: a Graph-Based Outlier Detection Framework Using Random Walk", "author": ["H.D.K. Moonesinghe", "Pang-Ning Tan."], "venue": "International Journal on Artificial Intelligence Tools 17, 1 (2008).", "citeRegEx": "Moonesinghe and Tan.,? 2008", "shortCiteRegEx": "Moonesinghe and Tan.", "year": 2008}, {"title": "One-class support measure machines for group anomaly detection", "author": ["Krikamol Muandet", "Bernhard Sch\u00f6lkopf."], "venue": "stat 1050 (2013), 1.", "citeRegEx": "Muandet and Sch\u00f6lkopf.,? 2013", "shortCiteRegEx": "Muandet and Sch\u00f6lkopf.", "year": 2013}, {"title": "Graph-based anomaly detection", "author": ["C.C. Noble", "D.J. Cook."], "venue": "Proceedings of the ninth ACM SIGKDD international conference on Knowledge discovery and data mining. ACM, 631\u2013636.", "citeRegEx": "Noble and Cook.,? 2003", "shortCiteRegEx": "Noble and Cook.", "year": 2003}, {"title": "Automatic multimedia cross-modal correlation discovery", "author": ["Jia-Yu Pan", "Hyung-Jeong Yang", "Christos Faloutsos", "Pinar Duygulu."], "venue": "Proceedings of the tenth ACM SIGKDD international conference on Knowledge discovery and data mining (KDD \u201904). ACM, New York, NY, USA, 653\u2013658. DOI:http://dx.doi.org/10.1145/1014052.1014135", "citeRegEx": "Pan et al\\.,? 2004", "shortCiteRegEx": "Pan et al\\.", "year": 2004}, {"title": "Scan statistics on enron hypergraphs", "author": ["DMY Park", "C.E. Priebe", "D.J. Marchette", "A. Youssef."], "venue": "Interface (2008).", "citeRegEx": "Park et al\\.,? 2008", "shortCiteRegEx": "Park et al\\.", "year": 2008}, {"title": "Anomaly Detection in Time Series of Graphs using ARMA Processes", "author": ["Brandon Pincombe."], "venue": "ASOR BULLETIN 24, 4 (2005),", "citeRegEx": "Pincombe.,? 2005", "shortCiteRegEx": "Pincombe.", "year": 2005}, {"title": "Scan Statistics on Enron Graphs", "author": ["Carey E. Priebe", "John M. Conroy", "David J. Marchette", "Youngser Park."], "venue": "Comput. Math. Organ. Theory 11, 3 (Oct. 2005), 229\u2013247. DOI:http://dx.doi.org/10.1007/s10588-005-5378-z", "citeRegEx": "Priebe et al\\.,? 2005", "shortCiteRegEx": "Priebe et al\\.", "year": 2005}, {"title": "The case for anomalous link discovery", "author": ["Matthew J. Rattigan", "David Jensen."], "venue": "SIGKDD Explor. Newsl. 7, 2 (Dec. 2005), 41\u201347. DOI:http://dx.doi.org/10.1145/1117454.1117460", "citeRegEx": "Rattigan and Jensen.,? 2005", "shortCiteRegEx": "Rattigan and Jensen.", "year": 2005}, {"title": "Sensitivity of PCA for traffic anomaly detection", "author": ["Haakon Ringberg", "Augustin Soule", "Jennifer Rexford", "Christophe Diot."], "venue": "SIGMETRICS Perform. Eval. Rev. 35, 1 (June 2007), 109\u2013120. DOI:http://dx.doi.org/10.1145/1269899.1254895", "citeRegEx": "Ringberg et al\\.,? 2007", "shortCiteRegEx": "Ringberg et al\\.", "year": 2007}, {"title": "GLAD: Group Anomaly Detection in Social Media Analysis", "author": ["Yu Rose", "He Xinran", "Liu. Yan."], "venue": "Proceedings of the 20th ACM SIGKDD international conference on Knowledge discovery and data mining (2014).", "citeRegEx": "Rose et al\\.,? 2014", "shortCiteRegEx": "Rose et al\\.", "year": 2014}, {"title": "The author-topic model for authors and documents", "author": ["Michal Rosen-Zvi", "Thomas Griffiths", "Mark Steyvers", "Padhraic Smyth."], "venue": "Proceedings of the 20th conference on Uncertainty in artificial intelligence (UAI \u201904). AUAI Press, Arlington, Virginia, United States, 487\u2013494.", "citeRegEx": "Rosen.Zvi et al\\.,? 2004", "shortCiteRegEx": "Rosen.Zvi et al\\.", "year": 2004}, {"title": "Computer intrusion: Detecting masquerades", "author": ["M. Schonlau", "W. DuMouchel", "W.H. Ju", "A.F. Karr", "M. Theus", "Y. Vardi."], "venue": "Statist. Sci. (2001), 58\u201374.", "citeRegEx": "Schonlau et al\\.,? 2001", "shortCiteRegEx": "Schonlau et al\\.", "year": 2001}, {"title": "Detecting masquerades in intrusion detection based on unpopular commands", "author": ["Matthias Schonlau", "Martin Theus."], "venue": "Inf. Process. Lett. 76 (November 2000), 33\u201338. Issue 1-2. DOI:http://dx.doi.org/10.1016/S0020-0190(00)00122-8", "citeRegEx": "Schonlau and Theus.,? 2000", "shortCiteRegEx": "Schonlau and Theus.", "year": 2000}, {"title": "Detection of anomalous meetings in a social network", "author": ["J. Silva", "R. Willett."], "venue": "Information Sciences and Systems, 2008. CISS 2008. 42nd Annual Conference on. 636 \u2013641. DOI:http://dx.doi.org/10.1109/CISS.2008.4558601", "citeRegEx": "Silva and Willett.,? 2008a", "shortCiteRegEx": "Silva and Willett.", "year": 2008}, {"title": "Hypergraph-based anomaly detection in very large networks", "author": ["J. Silva", "R. Willett."], "venue": "(2008).", "citeRegEx": "Silva and Willett.,? 2008b", "shortCiteRegEx": "Silva and Willett.", "year": 2008}, {"title": "Modeling and predicting personal information dissemination behavior", "author": ["Xiaodan Song", "Ching-Yung Lin", "Belle L. Tseng", "Ming-Ting Sun."], "venue": "Proceedings of the eleventh ACM SIGKDD international conference on Knowledge discovery in data mining (KDD \u201905). ACM, New York, NY, USA, 479\u2013488. DOI:http://dx.doi.org/10.1145/1081870.1081925", "citeRegEx": "Song et al\\.,? 2005", "shortCiteRegEx": "Song et al\\.", "year": 2005}, {"title": "GraphScope: parameter-free mining of large time-evolving graphs", "author": ["Jimeng Sun", "Christos Faloutsos", "Spiros Papadimitriou", "Philip S. Yu."], "venue": "Proceedings of the 13th ACM SIGKDD international conference on Knowledge discovery and data mining (KDD \u201907). ACM, New York, NY, USA, 687\u2013696. DOI:http://dx.doi.org/10.1145/1281192.1281266", "citeRegEx": "Sun et al\\.,? 2007", "shortCiteRegEx": "Sun et al\\.", "year": 2007}, {"title": "Neighborhood Formation and Anomaly Detection in Bipartite Graphs", "author": ["Jimeng Sun", "Huiming Qu", "Deepayan Chakrabarti", "Christos Faloutsos."], "venue": "Proceedings of the Fifth IEEE International Conference on Data Mining (ICDM \u201905). IEEE Computer Society, Washington, DC, USA, 418\u2013425. DOI:http://dx.doi.org/10.1109/ICDM.2005.103", "citeRegEx": "Sun et al\\.,? 2005", "shortCiteRegEx": "Sun et al\\.", "year": 2005}, {"title": "On local spatial outliers", "author": ["Pei Sun", "Sanjay Chawla."], "venue": "Data Mining, 2004. ICDM\u201904. Fourth IEEE International Conference on. IEEE, 209\u2013216.", "citeRegEx": "Sun and Chawla.,? 2004", "shortCiteRegEx": "Sun and Chawla.", "year": 2004}, {"title": "Mining for Outliers in Sequential Databases", "author": ["Pei Sun", "Sanjay Chawla", "Bavani Arunasalam."], "venue": "SIAM.", "citeRegEx": "Sun et al\\.,? 2006", "shortCiteRegEx": "Sun et al\\.", "year": 2006}, {"title": "A Unifying Framework for Detecting Outliers and Change Points from Time Series", "author": ["Jun-ichi Takeuchi", "Kenji Yamanishi."], "venue": "IEEE Trans. on Knowl. and Data Eng. 18, 4 (April 2006), 482\u2013492. DOI:http://dx.doi.org/10.1109/TKDE.2006.54", "citeRegEx": "Takeuchi and Yamanishi.,? 2006", "shortCiteRegEx": "Takeuchi and Yamanishi.", "year": 2006}, {"title": "Fast Random Walk with Restart and Its Applications", "author": ["Hanghang Tong", "Christos Faloutsos", "Jia-Yu Pan."], "venue": "Proceedings of the Sixth International Conference on Data Mining (ICDM \u201906). IEEE Computer Society, Washington, DC, USA, 613\u2013622. DOI:http://dx.doi.org/10.1109/ICDM.2006.70", "citeRegEx": "Tong et al\\.,? 2006", "shortCiteRegEx": "Tong et al\\.", "year": 2006}, {"title": "Colibri: fast mining of large static and dynamic graphs", "author": ["Hanghang Tong", "Spiros Papadimitriou", "Jimeng Sun", "Philip S. Yu", "Christos Faloutsos."], "venue": "Proceedings of the 14th ACM SIGKDD international conference on Knowledge discovery and data mining (KDD \u201908). ACM, New York, NY, USA, 686\u2013694. DOI:http://dx.doi.org/10.1145/1401890.1401973", "citeRegEx": "Tong et al\\.,? 2008a", "shortCiteRegEx": "Tong et al\\.", "year": 2008}, {"title": "Proximity Tracking on Time-Evolving Bipartite Graphs", "author": ["Hanghang Tong", "Spiros Papadimitriou", "Philip S. Yu", "Christos Faloutsos."], "venue": "SIAM (2008).", "citeRegEx": "Tong et al\\.,? 2008b", "shortCiteRegEx": "Tong et al\\.", "year": 2008}, {"title": "Bayesian Network Anomaly Pattern Detection for Disease Outbreaks", "author": ["Weng-Keen Wong", "Andrew Moore", "Gregory Cooper", "Michael Wagner."], "venue": "Proceedings of the Twentieth International Conference on Machine Learning, Tom Fawcett and Nina Mishra (Eds.). AAAI Press, Menlo Park, California, 808\u2013815.", "citeRegEx": "Wong et al\\.,? 2003", "shortCiteRegEx": "Wong et al\\.", "year": 2003}, {"title": "Hierarchical probabilistic models for group anomaly detection", "author": ["L. Xiong", "B. Poczos", "J. Schneider", "A. Connolly", "J. VanderPlas."], "venue": "Proceedings of International Conference on Artifcial Intelligence and Statistics.", "citeRegEx": "Xiong et al\\.,? 2011b", "shortCiteRegEx": "Xiong et al\\.", "year": 2011}, {"title": "Group Anomaly Detection using Flexible Genre Models", "author": ["Liang Xiong", "Barnab\u00e1s P\u00f3czos", "Jeff G Schneider"], "venue": "In NIPS", "citeRegEx": "Xiong et al\\.,? \\Q2011\\E", "shortCiteRegEx": "Xiong et al\\.", "year": 2011}, {"title": "SCAN: a structural clustering algorithm for networks", "author": ["Xiaowei Xu", "Nurcan Yuruk", "Zhidan Feng", "Thomas A.J. Schweiger."], "venue": "Proceedings of the 13th ACM SIGKDD international conference on Knowledge discovery and data mining (KDD \u201907). ACM, New York, NY, USA, 824\u2013833. DOI:http://dx.doi.org/10.1145/1281192.1281280", "citeRegEx": "Xu et al\\.,? 2007", "shortCiteRegEx": "Xu et al\\.", "year": 2007}, {"title": "Disk aware discord discovery: finding unusual time series in terabyte sized datasets", "author": ["Dragomir Yankov", "Eamonn Keogh", "Umaa Rebbapragada."], "venue": "Knowl. Inf. Syst. 17 (November 2008), 241\u2013262. Issue 2. DOI:http://dx.doi.org/10.1007/s10115-008-0131-9", "citeRegEx": "Yankov et al\\.,? 2008", "shortCiteRegEx": "Yankov et al\\.", "year": 2008}, {"title": "A review of data mining-based financial fraud detection research", "author": ["Dianmin Yue", "Xiaodan Wu", "Yunfeng Wang", "Yue Li", "Chao-Hsien Chu."], "venue": "2007 International Conference on Wireless Communications Networking and Mobile Computing C (2007), 5514\u20135517.", "citeRegEx": "Yue et al\\.,? 2007", "shortCiteRegEx": "Yue et al\\.", "year": 2007}], "referenceMentions": [{"referenceID": 23, "context": "Then for a new observation, we estimate its likelihood based on the reference model and predict the data as an \u201canomal\u201d if the likelihood is below some threshold [Chan and Stolfo 1998; Ghosh and Schwartzbard 1999; Eskin et al. 2002; Ringberg et al. 2007; Yue et al. 2007; Chandola et al. 2007].", "startOffset": 162, "endOffset": 293}, {"referenceID": 55, "context": "Then for a new observation, we estimate its likelihood based on the reference model and predict the data as an \u201canomal\u201d if the likelihood is below some threshold [Chan and Stolfo 1998; Ghosh and Schwartzbard 1999; Eskin et al. 2002; Ringberg et al. 2007; Yue et al. 2007; Chandola et al. 2007].", "startOffset": 162, "endOffset": 293}, {"referenceID": 76, "context": "Then for a new observation, we estimate its likelihood based on the reference model and predict the data as an \u201canomal\u201d if the likelihood is below some threshold [Chan and Stolfo 1998; Ghosh and Schwartzbard 1999; Eskin et al. 2002; Ringberg et al. 2007; Yue et al. 2007; Chandola et al. 2007].", "startOffset": 162, "endOffset": 293}, {"referenceID": 11, "context": "Then for a new observation, we estimate its likelihood based on the reference model and predict the data as an \u201canomal\u201d if the likelihood is below some threshold [Chan and Stolfo 1998; Ghosh and Schwartzbard 1999; Eskin et al. 2002; Ringberg et al. 2007; Yue et al. 2007; Chandola et al. 2007].", "startOffset": 162, "endOffset": 293}, {"referenceID": 53, "context": "power law models [Akoglu and McGlohon 2009], spectral decomposition [Luxburg 2007], scan statistics [Priebe et al. 2005], random walks [Pan et al.", "startOffset": 100, "endOffset": 120}, {"referenceID": 50, "context": "2005], random walks [Pan et al. 2004; Tong et al. 2006], etc.", "startOffset": 20, "endOffset": 55}, {"referenceID": 68, "context": "2005], random walks [Pan et al. 2004; Tong et al. 2006], etc.", "startOffset": 20, "endOffset": 55}, {"referenceID": 22, "context": "For example, many algorithms have been developed to reveal hubs/authorities, centrality, and communities from graphs [Kleinberg 1999; Erosheva et al. 2004; Song et al. 2005; Lappas et al. 2009]; a good body of text mining techniques are examined to reveal insights from user-generated contents [Blei et al.", "startOffset": 117, "endOffset": 193}, {"referenceID": 62, "context": "For example, many algorithms have been developed to reveal hubs/authorities, centrality, and communities from graphs [Kleinberg 1999; Erosheva et al. 2004; Song et al. 2005; Lappas et al. 2009]; a good body of text mining techniques are examined to reveal insights from user-generated contents [Blei et al.", "startOffset": 117, "endOffset": 193}, {"referenceID": 39, "context": "For example, many algorithms have been developed to reveal hubs/authorities, centrality, and communities from graphs [Kleinberg 1999; Erosheva et al. 2004; Song et al. 2005; Lappas et al. 2009]; a good body of text mining techniques are examined to reveal insights from user-generated contents [Blei et al.", "startOffset": 117, "endOffset": 193}, {"referenceID": 7, "context": "2009]; a good body of text mining techniques are examined to reveal insights from user-generated contents [Blei et al. 2003; Rosen-Zvi et al. 2004].", "startOffset": 106, "endOffset": 147}, {"referenceID": 57, "context": "2009]; a good body of text mining techniques are examined to reveal insights from user-generated contents [Blei et al. 2003; Rosen-Zvi et al. 2004].", "startOffset": 106, "endOffset": 147}, {"referenceID": 37, "context": "However, very few models are available to capture the temporal aspects of the problem [Blei and Lafferty 2006; Hanneke and Xing 2007; Kolar et al. 2010], and among them even fewer are practical for large-scale applications due to the more complex nature of time series data.", "startOffset": 86, "endOffset": 152}, {"referenceID": 12, "context": "Existing work on traditional anomaly detection [Chandola et al. 2012; Cheng et al. 2009; Chandola et al. 2007; Tong et al. 2008a; Guralnik and Srivastava 1999; Takeuchi and Yamanishi 2006; Duch\u00eane et al. 2004; Lin et al. 2003; Keogh et al. 2005; Yankov et al. 2008; Cheng et al. 2009; Wong et al. 2003] have identified two types of anomalies: one is \u201cunivariate anomaly\u201d which refers to the anomaly that occurs only within individual variable, the other is \u201cdependency anomaly\u201d that occurs due to the changes of temporal dependencies between time series.", "startOffset": 47, "endOffset": 302}, {"referenceID": 15, "context": "Existing work on traditional anomaly detection [Chandola et al. 2012; Cheng et al. 2009; Chandola et al. 2007; Tong et al. 2008a; Guralnik and Srivastava 1999; Takeuchi and Yamanishi 2006; Duch\u00eane et al. 2004; Lin et al. 2003; Keogh et al. 2005; Yankov et al. 2008; Cheng et al. 2009; Wong et al. 2003] have identified two types of anomalies: one is \u201cunivariate anomaly\u201d which refers to the anomaly that occurs only within individual variable, the other is \u201cdependency anomaly\u201d that occurs due to the changes of temporal dependencies between time series.", "startOffset": 47, "endOffset": 302}, {"referenceID": 11, "context": "Existing work on traditional anomaly detection [Chandola et al. 2012; Cheng et al. 2009; Chandola et al. 2007; Tong et al. 2008a; Guralnik and Srivastava 1999; Takeuchi and Yamanishi 2006; Duch\u00eane et al. 2004; Lin et al. 2003; Keogh et al. 2005; Yankov et al. 2008; Cheng et al. 2009; Wong et al. 2003] have identified two types of anomalies: one is \u201cunivariate anomaly\u201d which refers to the anomaly that occurs only within individual variable, the other is \u201cdependency anomaly\u201d that occurs due to the changes of temporal dependencies between time series.", "startOffset": 47, "endOffset": 302}, {"referenceID": 69, "context": "Existing work on traditional anomaly detection [Chandola et al. 2012; Cheng et al. 2009; Chandola et al. 2007; Tong et al. 2008a; Guralnik and Srivastava 1999; Takeuchi and Yamanishi 2006; Duch\u00eane et al. 2004; Lin et al. 2003; Keogh et al. 2005; Yankov et al. 2008; Cheng et al. 2009; Wong et al. 2003] have identified two types of anomalies: one is \u201cunivariate anomaly\u201d which refers to the anomaly that occurs only within individual variable, the other is \u201cdependency anomaly\u201d that occurs due to the changes of temporal dependencies between time series.", "startOffset": 47, "endOffset": 302}, {"referenceID": 19, "context": "Existing work on traditional anomaly detection [Chandola et al. 2012; Cheng et al. 2009; Chandola et al. 2007; Tong et al. 2008a; Guralnik and Srivastava 1999; Takeuchi and Yamanishi 2006; Duch\u00eane et al. 2004; Lin et al. 2003; Keogh et al. 2005; Yankov et al. 2008; Cheng et al. 2009; Wong et al. 2003] have identified two types of anomalies: one is \u201cunivariate anomaly\u201d which refers to the anomaly that occurs only within individual variable, the other is \u201cdependency anomaly\u201d that occurs due to the changes of temporal dependencies between time series.", "startOffset": 47, "endOffset": 302}, {"referenceID": 41, "context": "Existing work on traditional anomaly detection [Chandola et al. 2012; Cheng et al. 2009; Chandola et al. 2007; Tong et al. 2008a; Guralnik and Srivastava 1999; Takeuchi and Yamanishi 2006; Duch\u00eane et al. 2004; Lin et al. 2003; Keogh et al. 2005; Yankov et al. 2008; Cheng et al. 2009; Wong et al. 2003] have identified two types of anomalies: one is \u201cunivariate anomaly\u201d which refers to the anomaly that occurs only within individual variable, the other is \u201cdependency anomaly\u201d that occurs due to the changes of temporal dependencies between time series.", "startOffset": 47, "endOffset": 302}, {"referenceID": 34, "context": "Existing work on traditional anomaly detection [Chandola et al. 2012; Cheng et al. 2009; Chandola et al. 2007; Tong et al. 2008a; Guralnik and Srivastava 1999; Takeuchi and Yamanishi 2006; Duch\u00eane et al. 2004; Lin et al. 2003; Keogh et al. 2005; Yankov et al. 2008; Cheng et al. 2009; Wong et al. 2003] have identified two types of anomalies: one is \u201cunivariate anomaly\u201d which refers to the anomaly that occurs only within individual variable, the other is \u201cdependency anomaly\u201d that occurs due to the changes of temporal dependencies between time series.", "startOffset": 47, "endOffset": 302}, {"referenceID": 75, "context": "Existing work on traditional anomaly detection [Chandola et al. 2012; Cheng et al. 2009; Chandola et al. 2007; Tong et al. 2008a; Guralnik and Srivastava 1999; Takeuchi and Yamanishi 2006; Duch\u00eane et al. 2004; Lin et al. 2003; Keogh et al. 2005; Yankov et al. 2008; Cheng et al. 2009; Wong et al. 2003] have identified two types of anomalies: one is \u201cunivariate anomaly\u201d which refers to the anomaly that occurs only within individual variable, the other is \u201cdependency anomaly\u201d that occurs due to the changes of temporal dependencies between time series.", "startOffset": 47, "endOffset": 302}, {"referenceID": 15, "context": "Existing work on traditional anomaly detection [Chandola et al. 2012; Cheng et al. 2009; Chandola et al. 2007; Tong et al. 2008a; Guralnik and Srivastava 1999; Takeuchi and Yamanishi 2006; Duch\u00eane et al. 2004; Lin et al. 2003; Keogh et al. 2005; Yankov et al. 2008; Cheng et al. 2009; Wong et al. 2003] have identified two types of anomalies: one is \u201cunivariate anomaly\u201d which refers to the anomaly that occurs only within individual variable, the other is \u201cdependency anomaly\u201d that occurs due to the changes of temporal dependencies between time series.", "startOffset": 47, "endOffset": 302}, {"referenceID": 71, "context": "Existing work on traditional anomaly detection [Chandola et al. 2012; Cheng et al. 2009; Chandola et al. 2007; Tong et al. 2008a; Guralnik and Srivastava 1999; Takeuchi and Yamanishi 2006; Duch\u00eane et al. 2004; Lin et al. 2003; Keogh et al. 2005; Yankov et al. 2008; Cheng et al. 2009; Wong et al. 2003] have identified two types of anomalies: one is \u201cunivariate anomaly\u201d which refers to the anomaly that occurs only within individual variable, the other is \u201cdependency anomaly\u201d that occurs due to the changes of temporal dependencies between time series.", "startOffset": 47, "endOffset": 302}, {"referenceID": 58, "context": "Examples of point anomaly can be anomalous computer users [Schonlau et al. 2001], unusual online meetings [Horn and Willett 2011] or suspicious traffic events [Ihler et al.", "startOffset": 58, "endOffset": 80}, {"referenceID": 32, "context": "2001], unusual online meetings [Horn and Willett 2011] or suspicious traffic events [Ihler et al. 2006].", "startOffset": 84, "endOffset": 103}, {"referenceID": 11, "context": "At the individual level, the activities might appear to be normal [Chandola et al. 2007].", "startOffset": 66, "endOffset": 88}, {"referenceID": 58, "context": "Activity-based Bayes one-step Markov, compression[Schonlau et al. 2001], multi-step Markov [Ju and Vardi 2001], Poisson process [Ihler et al.", "startOffset": 49, "endOffset": 71}, {"referenceID": 32, "context": "2001], multi-step Markov [Ju and Vardi 2001], Poisson process [Ihler et al. 2006], probabilistic suffix tree [Sun et al.", "startOffset": 62, "endOffset": 81}, {"referenceID": 66, "context": "2006], probabilistic suffix tree [Sun et al. 2006]", "startOffset": 33, "endOffset": 50}, {"referenceID": 64, "context": "Graph-based random walk [Moonesinghe and Tan 2008; Sun et al. 2005], power law [Akoglu and McGlohon 2009; Akoglu et al.", "startOffset": 24, "endOffset": 67}, {"referenceID": 2, "context": "2005], power law [Akoglu and McGlohon 2009; Akoglu et al. 2010]", "startOffset": 17, "endOffset": 63}, {"referenceID": 53, "context": "(static graph) hypergraph [Silva and Willett 2008b; 2008a] spatial autocorrelation[Sun and Chawla 2004; Chawla and Sun 2006] Graph-based scan statistics [Priebe et al. 2005; Park et al. 2008], ARMA process [Lakhina et al.", "startOffset": 153, "endOffset": 191}, {"referenceID": 51, "context": "(static graph) hypergraph [Silva and Willett 2008b; 2008a] spatial autocorrelation[Sun and Chawla 2004; Chawla and Sun 2006] Graph-based scan statistics [Priebe et al. 2005; Park et al. 2008], ARMA process [Lakhina et al.", "startOffset": 153, "endOffset": 191}, {"referenceID": 38, "context": "2008], ARMA process [Lakhina et al. 2004] (dynamic graph) MDL [Sun et al.", "startOffset": 20, "endOffset": 41}, {"referenceID": 63, "context": "2004] (dynamic graph) MDL [Sun et al. 2007; Akoglu et al. 2012], graph eigenvector [Id\u00e9 and Kashima 2004]", "startOffset": 26, "endOffset": 63}, {"referenceID": 3, "context": "2004] (dynamic graph) MDL [Sun et al. 2007; Akoglu et al. 2012], graph eigenvector [Id\u00e9 and Kashima 2004]", "startOffset": 26, "endOffset": 63}, {"referenceID": 17, "context": "Activity-based scan statistics [Das et al. 2009; Friedland and Jensen 2007], causal approach [Babbar et al.", "startOffset": 31, "endOffset": 75}, {"referenceID": 4, "context": "2009; Friedland and Jensen 2007], causal approach [Babbar et al. 2013] density estimation [Xiong et al.", "startOffset": 50, "endOffset": 70}, {"referenceID": 72, "context": "2013] density estimation [Xiong et al. 2011b; Xiong et al. 2011a; Muandet and Sch\u00f6lkopf 2013; Rose et al. 2014]", "startOffset": 25, "endOffset": 111}, {"referenceID": 56, "context": "2013] density estimation [Xiong et al. 2011b; Xiong et al. 2011a; Muandet and Sch\u00f6lkopf 2013; Rose et al. 2014]", "startOffset": 25, "endOffset": 111}, {"referenceID": 45, "context": "Graph-based MDL [Chakrabarti 2004; Lin and Chalupsky 2003; Rattigan and Jensen 2005] anomalous substructure [Noble and Cook 2003; Eberle and Holder 2007] (static graph) tensor decomposition [Maruhashi et al. 2011] Graph-based random walk [Liu et al.", "startOffset": 190, "endOffset": 213}, {"referenceID": 43, "context": "2011] Graph-based random walk [Liu et al. 2008], t-partitie graph [Xu et al.", "startOffset": 30, "endOffset": 47}, {"referenceID": 74, "context": "2008], t-partitie graph [Xu et al. 2007; Kim and Han 2009] (dynamic graph) counting process [Heard et al.", "startOffset": 24, "endOffset": 58}, {"referenceID": 29, "context": "2007; Kim and Han 2009] (dynamic graph) counting process [Heard et al. 2010]", "startOffset": 57, "endOffset": 76}, {"referenceID": 58, "context": "For example, [Schonlau et al. 2001] investigates the problem of detecting masquerades who disguise themselves as somebody else on the network.", "startOffset": 13, "endOffset": 35}, {"referenceID": 66, "context": "[Sun et al. 2006] proposes probabilistic suffix tree (PST) to mine the outliers in a set of sequences S from an alphabet \u03a3.", "startOffset": 0, "endOffset": 17}, {"referenceID": 66, "context": "[Sun et al. 2006]", "startOffset": 0, "endOffset": 17}, {"referenceID": 32, "context": "97 [Ihler et al. 2006] investigates Markov- odulated Poisson process to address the specific problem of event detection on time-series of count data.", "startOffset": 3, "endOffset": 22}, {"referenceID": 0, "context": "Here we also refer interested readers to more general reviews of computer network anomaly detection [Ahmed et al. 2007; Lazarevic et al. 2003].", "startOffset": 100, "endOffset": 142}, {"referenceID": 40, "context": "Here we also refer interested readers to more general reviews of computer network anomaly detection [Ahmed et al. 2007; Lazarevic et al. 2003].", "startOffset": 100, "endOffset": 142}, {"referenceID": 64, "context": "Following the idea of random walk, [Sun et al. 2005] focuses on the anomaly detection on bipartite graph, denoted as G = \u3008V1 \u22c3 V2, E\u3009, where node sets V1 has k nodes, V2 has n nodes and E are the edges between them.", "startOffset": 35, "endOffset": 52}, {"referenceID": 63, "context": "[Sun et al. 2007] detects the change points in a stream of graph series.", "startOffset": 0, "endOffset": 17}, {"referenceID": 3, "context": "[Akoglu et al. 2012] addresses the categorical anomaly detection by pattern-based compression, which also adopts MDL-principle.", "startOffset": 0, "endOffset": 20}, {"referenceID": 63, "context": "[Sun et al. 2007]", "startOffset": 0, "endOffset": 17}, {"referenceID": 53, "context": "[Priebe et al. 2005] specifically discusses a framework of using scan statistics to perform anomaly de ection on dynamic graphs.", "startOffset": 0, "endOffset": 20}, {"referenceID": 51, "context": "Extension of scan statistics from standard graph o hypergraph rep esentation is also examined in [Park et al. 2008] for time-evolving graphs.", "startOffset": 97, "endOffset": 115}, {"referenceID": 11, "context": "GROUP ANOMALY DETECTION Group anomaly or \u201ccollective anomaly\u201d detection in social network aims to discover groups of participants that collectively behave anomalously [Chandola et al. 2007].", "startOffset": 167, "endOffset": 189}, {"referenceID": 18, "context": "[Das et al. 2008] proposes a probabilistic model to detect group of anomalies in categorical data sets.", "startOffset": 0, "endOffset": 17}, {"referenceID": 53, "context": "It generalizes the spatial scan statistic in [Priebe et al. 2005] for dynamic graphs to non-spatial data sets with discrete valued attributes.", "startOffset": 45, "endOffset": 65}, {"referenceID": 17, "context": "[Das et al. 2009] considers the anomalies in categorical data sets and tries to detect anomalous attributes or combinations of attributes.", "startOffset": 0, "endOffset": 17}, {"referenceID": 72, "context": "The Multinomial Genre Model (MGM) proposed in [Xiong et al. 2011b] first investigates the problem following the paradigm of latent models.", "startOffset": 46, "endOffset": 66}, {"referenceID": 72, "context": "It uses the same definition of group anomaly from [Xiong et al. 2011b] and represents groups as probability distributions.", "startOffset": 50, "endOffset": 70}, {"referenceID": 72, "context": "Compared with generative approaches in [Xiong et al. 2011b; Xiong et al. 2011a], OCSMM does not make assumptions on the underlying distribution of the data and is generally less computational expensive.", "startOffset": 39, "endOffset": 79}, {"referenceID": 4, "context": "[Babbar et al. 2013] takes a casual approach to detect the contextual anomaly.", "startOffset": 0, "endOffset": 20}, {"referenceID": 45, "context": "[Maruhashi et al. 2011] leverages the structural information in the heterogeneous networks to detect unusual subgraph patterns.", "startOffset": 0, "endOffset": 23}, {"referenceID": 46, "context": "As shown in [McGlohon et al. 2008; Chakrabarti and Faloutsos 2006], real graphs usually follow power law degree distribution instead of uniform distribution.", "startOffset": 12, "endOffset": 66}, {"referenceID": 72, "context": "Density estimation methods for group anomaly detection [Xiong et al. 2011b; Xiong et al. 2011a; Muandet and Sch\u00f6lkopf 2013] emphasize on the point-wise data and usually overlook the pair-wise relational data.", "startOffset": 55, "endOffset": 123}, {"referenceID": 56, "context": "With those considerations, [Rose et al. 2014] proposes to build an alla prima that can accomplish the tasks of group discovery and anomaly detection all at once.", "startOffset": 27, "endOffset": 45}, {"referenceID": 70, "context": "As also pointed by authors, the choice of scoring pairs constitutes the heart of the problem, thus posing difficulty in the selection [Tong et al. 2008b] directly analyze graph structures and efficiently track node proximity, which measures the relevance between two nodes in bipartite graphs.", "startOffset": 134, "endOffset": 153}, {"referenceID": 70, "context": "[Tong et al. 2008b] extends this method to track anomalous nodes in time evolving graphs by defining a dynamic proximity metric.", "startOffset": 0, "endOffset": 19}, {"referenceID": 43, "context": "[Liu et al. 2008] proposes to detect the significant changing subgraphs.", "startOffset": 0, "endOffset": 17}, {"referenceID": 29, "context": "[Heard et al. 2010] also presents a two-stage method, which combines the Bayesian approach for discrete activity modeling with the graph analysis techniques for discovering anomalous structures.", "startOffset": 0, "endOffset": 19}, {"referenceID": 56, "context": "To further account for the dynamic nature of social media, [Rose et al. 2014] generalizes GLAD to the d-GLAD model as an extension for handling time series and formulate the problem as a change point detection task.", "startOffset": 59, "endOffset": 77}], "year": 2017, "abstractText": "Social media anomaly detection is of critical importance to prevent malicious activities such as bullying, terrorist attack planning, and fraud information dissemination. With the recent popularity of social media, new types of anomalous behaviors arise, causing concerns from various parties. While a large amount of work have been dedicated to traditional anomaly detection problems, we observe a surge of research interests in the new realm of social media anomaly detection. In this paper, we present a survey on existing approaches to address this problem. We focus on the new type of anomalous phenomena in the social media and review the recent developed techniques to detect those special types of anomalies. We provide a general overview of the problem domain, common formulations, existing methodologies and potential directions. With this work, we hope to call out the attention from the research community on this challenging problem and open up new directions that we can contribute in the future.", "creator": "TeX"}}}