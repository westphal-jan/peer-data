{"id": "1603.06393", "review": {"conference": "ACL", "VERSION": "v1", "DATE_OF_SUBMISSION": "21-Mar-2016", "title": "Incorporating Copying Mechanism in Sequence-to-Sequence Learning", "abstract": "We address an important problem in sequence-to-sequence (Seq2Seq) learning referred to as copying, in which certain segments in the input sequence are selectively replicated in the output sequence. A similar phenomenon is observable in human language communication. For example, humans tend to repeat entity names or even long phrases in conversation. The challenge with regard to copying in Seq2Seq is that new machinery is needed to decide when to perform the operation. In this paper, we incorporate copying into neural network-based Seq2Seq learning and propose a new model called CopyNet with encoder-decoder structure. CopyNet can nicely integrate the regular way of word generation in the decoder with the new copying mechanism which can choose sub-sequences in the input sequence and put them at proper places in the output sequence. Our empirical study on both synthetic data sets and real world data sets demonstrates the efficacy of CopyNet. For example, CopyNet can outperform regular RNN-based model with remarkable margins on text summarization tasks.", "histories": [["v1", "Mon, 21 Mar 2016 11:35:08 GMT  (641kb,D)", "http://arxiv.org/abs/1603.06393v1", "12 pages, 6 figures"], ["v2", "Tue, 22 Mar 2016 03:33:58 GMT  (636kb,D)", "http://arxiv.org/abs/1603.06393v2", "11 pages, 8 figures"], ["v3", "Wed, 8 Jun 2016 13:53:21 GMT  (472kb,D)", "http://arxiv.org/abs/1603.06393v3", "10 pages, 5 figures, accepted by ACL2016"]], "COMMENTS": "12 pages, 6 figures", "reviews": [], "SUBJECTS": "cs.CL cs.AI cs.LG cs.NE", "authors": ["jiatao gu", "zhengdong lu", "hang li", "victor o k li"], "accepted": true, "id": "1603.06393"}, "pdf": {"name": "1603.06393.pdf", "metadata": {"source": "CRF", "title": "Incorporating Copying Mechanism in Sequence-to-Sequence Learning", "authors": ["Jiatao Gu", "Zhengdong Lu", "Hang Li", "Victor O.K. Li"], "emails": ["vli}@eee.hku.hk", "hangli.hl}@huawei.com"], "sections": [{"heading": "1 Introduction", "text": "Recently, neural network-based sequence-tosequence learning (Seq2Seq) has achieved remarkable success in various natural language processing (NLP) tasks, including but not limited to Machine Translation (Cho et al., 2014; Bahdanau et al., 2014), Syntactic Parsing (Vinyals et al., 2015b), Text Summarization (Rush et al., 2015) and Dialogue Systems (Vinyals and Le, 2015).\nSeq2Seq is essentially an encoder-decoder model, in which the encoder first transforms the input sequence to a certain representation which can then transforms the representation into the output sequence. Adding the attention mechanism (Bahdanau et al., 2014) to Seq2Seq, first proposed for automatic alignment in machine translation, has led to significant improvement on the performance of various tasks (Shang et al., 2015; Rush et al., 2015). Different from the canonical encoderdecoder architecture, the attention-based Seq2Seq model revisits the input sequence in its raw form (array of word representations) and dynamically fetches the relevant piece of information based mostly on the feedback from generation of the output sequence.\nIn this paper, we explore another mechanism important to the human language communication, called the \u201ccopying mechanism\u201d. Basically, it refers to the mechanism that locates a certain segment of the input sentence and puts the segment into the output sequence. For example, in the following two dialogue turns we observe different patterns in which some subsequences (colored blue) in the response (R) are copied from the input utterance (I):\nI: Hello Jack, my name is Chandralekha. R: Nice to meet you, Chandralekha.\nI: This new guy doesn\u2019t perform exactly as we expected.\nR: What do you mean by \"doesn\u2019t perform exactly as we expected\"?\nBoth the canonical encoder-decoder and its variants with attention mechanism rely heavily on the representation of \u201cmeaning\u201d, which might not be sufficiently inaccurate in cases in which the system needs to refer to sub-sequences of input like entity names or dates. In contrast, the copying mechanism is closer to the rote memo-\nar X\niv :1\n60 3.\n06 39\n3v 1\n[ cs\n.C L\n] 2\n1 M\nar 2\n01 6\nrization in language processing of human being, deserving a different modeling strategy in neural network-based models. We argue that it will benefit many Seq2Seq tasks to have an elegant unified model that can accommodate both understanding and rote memorization. Towards this goal, we propose COPYNET, which is not only capable of the regular generation of words but also the operation of copying appropriate segments of the input sequence. Despite the seemingly \u201chard\u201d operation of copying, COPYNET can be trained in an end-toend fashion. Our empirical study on both synthetic datasets and real world datasets demonstrates the efficacy of COPYNET."}, {"heading": "2 Background: Neural Models for Sequence-to-sequence Learning", "text": "Seq2Seq Learning can be expressed in a probabilistic view as maximizing the likelihood (or some other evaluation metrics (Shen et al., 2015)) of observing the output (target) sequence given an input (source) sequence."}, {"heading": "2.1 RNN Encoder-Decoder", "text": "RNN-based Encoder-Decoder is successfully applied to real world Seq2Seq tasks, first by Cho et al. (2014) and Sutskever et al. (2014), and then by (Vinyals and Le, 2015; Vinyals et al., 2015a). In the Encoder-Decoder framework, the source sequence X = [x1, ..., xTS ] is converted into a fixed length vector c by the encoder RNN, i.e.\nht = f(xt,ht\u22121); c = \u03c6({h1, ...,hTS}) (1)\nwhere {ht} are the RNN states, c is the so-called context vector, f is the dynamics function, and \u03c6 summarizes the hidden states, e.g. choosing the last state hTS . In practice it is found that gated RNN alternatives such as LSTM (Hochreiter and Schmidhuber, 1997) or GRU (Cho et al., 2014) often perform much better than vanilla ones.\nThe decoder RNN is to unfold the context vector c into the target sequence, through the following dynamics and prediction model:\nst = f(yt\u22121, st\u22121, c) p(yt|y<t, X) = g(yt\u22121, st, c) (2)\nwhere st is the RNN state at time t, yt is the predicted target symbol at t (through function g(\u00b7)) with y<t denoting the history {y1, ..., yt\u22121}. The prediction model is typically a classifier over the vocabulary with, say, 30,000 words."}, {"heading": "2.2 The Attention Mechanism", "text": "The attention mechanism was first introduced to Seq2Seq (Bahdanau et al., 2014) to release the burden of summarizing the entire source into a fixed-length vector as context. Instead, the attention uses a dynamically changing context ct in the decoding process. A natural option (or rather \u201csoft attention\u201d) is to represent ct as the weighted sum of the source hidden states, i.e.\nct = TS\u2211 \u03c4=1 \u03b1t\u03c4h\u03c4 ; \u03b1t\u03c4 = e\u03b7(st\u22121,h\u03c4 )\u2211 \u03c4 \u2032 e \u03b7(st\u22121,h\u03c4 \u2032 ) (3)\nwhere \u03b7 is the function that shows the correspondence strength for attention, approximated usually with a multi-layer neural network (DNN). Note that in (Bahdanau et al., 2014) the source sentence is encoded with a Bi-directional RNN, making each hidden state h\u03c4 aware of the contextual information from both ends."}, {"heading": "3 COPYNET", "text": "From a cognitive perspective, the copying mechanism is related to rote memorization, requiring less understanding but ensuring high literal fidelity. From a modeling perspective, the copying operations are more rigid and symbolic, making it more difficult than soft attention mechanism to integrate into a fully differentiable neural model. In this section, we present COPYNET, a differentiable Seq2Seq model with \u201ccopying mechanism\u201d, which can be trained in an end-to-end fashion with just gradient descent."}, {"heading": "3.1 Model Overview", "text": "As illustrated in Figure 1, COPYNET is still an encoder-decoder (in a slightly generalized sense). The source sequence is transformed by Encoder into representation, which is then read by Decoder to generate the target sequence.\nEncoder: Same as in (Bahdanau et al., 2014), a bi-directional RNN is used to transform the source sequence into a series of hidden states with equal length, with each hidden state ht corresponding to word xt. This new representation of the source, {h1, ...,hTS}, is considered to be a short-term memory (referred to as M in the remainder of the paper), which will later be accessed in multiple ways in generating the target sequence (decoding).\nDecoder: An RNN that reads M and predicts the target sequence. It is similar with the canonical RNN-decoder in (Bahdanau et al., 2014), with however the following important differences\n\u2022 Prediction: COPYNET predicts words based on a mixed probabilistic model of two modes, namely the generate-mode and the copymode, where the latter picks words from the source sequence (see Section 3.2);\n\u2022 State Update: the predicted word at time t\u22121 is used in updating the state at t, but COPYNET uses not only its word-embedding but also its corresponding location-specific hidden state in M (if any) (see Section 3.3 for more details);\n\u2022 Reading M: in addition to the attentive read to M, COPYNET also has\u201cselective read\u201d to M, which leads to a powerful hybrid of content-based addressing and location-based addressing (see both Sections 3.3 and 3.4 for more discussion)."}, {"heading": "3.2 Prediction with Copying and Generation", "text": "We assume a vocabulary V = {v1, ..., vN}, and use UNK for any out-of-vocabulary (OOV) word. In addition, we have another set of words X , for all the unique words in source sequence X = {x1, ..., xTS}. Since X may contain words not in V , copying sub-sequence in X enables COPYNET to output some OOV words. In a nutshell, the instance-specific vocabulary for source X is V \u222a UNK \u222a X .\nGiven the decoder RNN state st at time t together with M, the probability of generating any target word yt, is given by the \u201cmixture\u201d of probabilities as follows\np(yt|st, yt\u22121, ct,M) = p(yt, g|st, yt\u22121, ct,M) + p(yt, c|st, yt\u22121, ct,M) (4)\nwhere g stands for the generate-mode, and c the copy mode. The probability of the two modes are given respectively by\np(yt, g|\u00b7)=  1 Z e\u03c8g(yt), yt \u2208 V 0, yt \u2208 X \u2229 V\u0304 1\nZ e\u03c8g(UNK) yt 6\u2208 V \u222a X\n(5)\np(yt, c|\u00b7)= { 1 Z \u2211 j:xj=yt\ne\u03c8c(xj), yt \u2208 X 0 otherwise (6)\nwhere \u03c8g(\u00b7) and \u03c8c(\u00b7) are score functions for generate-mode and copy-mode, respectively, and Z is the normalization term shared by the two modes, Z = \u2211 v\u2208V\u222a{UNK} e \u03c8g(v) + \u2211 x\u2208X e \u03c8c(x). Due to the shared normalization term, the two modes are basically competing through a softmax function (see Figure 1 for an illustration with example), rendering Eq.(4) deviated from the canonical definition of mixture model (McLachlan and Basford, 1988). This is also pictorially illustrated in Figure 2. The score of each mode is calculated: Generate-Mode: The same scoring function as in the generic RNN encoder-decoder (Bahdanau et\nal., 2014) is used, i.e.\n\u03c8g(yt = vi) = v > i Wost, vi \u2208 V \u222a UNK (7)\nwhere Wo \u2208 R(N+1)\u00d7ds and vi is the one-hot indicator vector for vi.\nCopy-Mode: The score for \u201ccopying\u201d the word xj is calculated as\n\u03c8c(yt = xj) = \u03c3 ( h>j Wc ) st, xj \u2208 X (8)\nwhere Wc \u2208 Rdh\u00d7ds , and \u03c3 is an activation that is either an identity or a non-linear function such as tanh. When calculating the copy-mode score, we use the hidden states {h1, ...,hTS} to \u201crepresent\u201d each of the word in the source sequence {x1, ..., xTS} since the bi-directional RNN encodes not only the content, but also the location information into the hidden states in M. The location informaton is important for copying (see Section 3.4 for related discussion). Note that we sum the probabilities of all xj equal to yt in Eq. (6) considering that there may be multiple source symbols for decoding yt. Naturally we let p(yt, c|\u00b7) = 0 if yt does not appear in the source sequence, and set p(yt, g|\u00b7) = 0 when yt only appears in the source."}, {"heading": "3.3 State Update", "text": "COPYNET updates each decoding state st with the previous state st\u22121, the previous symbol yt\u22121 and the context vector ct following Eq. (2) for the generic attention-based Seq2Seq model. However, there is some minor changes in the yt\u22121\u2212\u2192st path for the copying mechanism. More specifically, yt\u22121 will be represented as [e(yt\u22121); \u03b6(yt\u22121)]>, where e(yt\u22121) is the word embedding associated with yt\u22121, while \u03b6(yt\u22121) is the weighted sum of hidden states in M corresponding to yt\n\u03b6(yt\u22121) = \u2211TS\n\u03c4=1 \u03c1t\u03c4h\u03c4\n\u03c1t\u03c4 = { 1 K p(x\u03c4 , c|st\u22121,M), x\u03c4 = yt\u22121\n0 otherwise\n(9)\nwhere K is the normalization term which equals\u2211 \u03c4 \u2032:x\u03c4 \u2032=yt\u22121\np(x\u03c4 \u2032 , c|st\u22121,M), considering there may exist multiple positions with yt\u22121 in the source sequence. In practice, \u03c1t\u03c4 is often concentrated on one location among multiple appearances, indicating the prediction is closely bounded to the location of words.\nIn a sense \u03b6(yt\u22121) performs a type of read to M similar to the attentive read (resulting ct) with however higher precision. In the remainder of this paper, \u03b6(yt\u22121) will be referred to as selective read. \u03b6(yt\u22121) is specifically designed for the copy mode: with its pinpointing precision to the corresponding yt\u22121, it naturally bears the location of yt\u22121 in the source sequence encoded in the hidden state. As will be discussed more in Section 3.4, this particular design potentially helps copy-mode in covering a consecutive sub-sequence of words. If yt\u22121 is not in the source, we let \u03b6(yt\u22121) = 0."}, {"heading": "3.4 Hybrid Addressing of M", "text": "We hypothesize that COPYNET uses a hybrid strategy for fetching the content in M, which combines both content-based and location-based addressing. Both addressing strategies are coordinated by the decoder RNN in managing the attentive read and selective read, as well as determining when to enter/quit the copy-mode.\nBoth the semantics of a word and its location in X will be encoded into the hidden states in M by a properly trained encoder RNN. Judging from our experiments, the attentive read of COPYNET is driven more by the semantics and language model, therefore capable of traveling more freely on M, even across a long distance. On the other hand, once COPYNET enters the copy-mode, the selective read of M is often guided by the location information. As the result, the selective read often takes rigid move and tends to cover consecutive words, including UNKs. Unlike the explicit design for hybrid addressing in Neural Turing Machine (Graves et al., 2014; Kurach et al., 2015), COPYNET is more subtle: it provides the architecture that can facilitate some particular locationbased addressing and lets the model figure out the details from the training data for specific tasks.\nLocation-based Addressing: With the location information in {hi}, the information flow\n\u03b6(yt\u22121) update\u2212\u2212\u2212\u2192 st predict\u2212\u2212\u2212\u2192 yt sel. read\u2212\u2212\u2212\u2212\u2192 \u03b6(yt)\nprovides a simple way of \u201cmoving one step to the right\u201d on X . More specifically, assuming the se-\nlective read \u03b6(yt\u22121) concentrates on the `th word in X , the state-update operation \u03b6(yt\u22121) update\u2212\u2212\u2212\u2192st acts as \u201clocation \u2190 location+1\u201d, making st favor the (`+1)th word in X in the prediction st predict\u2212\u2212\u2212\u2192 yt in copy-mode. This again leads to the selective read h\u0302t sel. read\u2212\u2212\u2212\u2212\u2192\u03b6(yt) for the state update of the next round.\nHandling Out-of-Vocabulary Words Although it is hard to verify the exact addressing strategy as above directly, there is strong evidence from our empirical study. Most saliently, a properly trained COPYNET can copy a fairly long segment full of OOV words, despite the lack of semantic information in its M representation. This provides a natural way to extend the effective vocabulary to include all the words in the source. Although this change is small, it seems quite significant empirically in alleviating the OOV problem. Indeed, for many NLP applications (e.g., text summarization or spoken dialogue system), much of the OOV words on the target side, for example the proper nouns, are essentially the replicates of those on the source side."}, {"heading": "4 Learning", "text": "Although the copying mechanism uses the \u201chard\u201d operation to copy from the source and choose to paste them or generate symbols from the vocabulary, COPYNET is fully differentiable and can be optimized in an end-to-end fashion using backpropagation. Given the batches of the source and target sequence {X}N and {Y }N , the objectives are to minimize the negative log-likelihood:\nL = \u2212 1 N N\u2211 k=1 T\u2211 t=1 log [ p(y (k) t |y (k) <t , X (k)) ] , (10)\nwhere we use superscript to index the instances. Since the tribalistic model for observing any target word is a mixture of generate-mode and copymode, there is no need for any additional labels for modes. The network can learn to coordinate the two modes from data. More specifically, if one particular word y(k)t can be found in the source sequence, the copy-mode will contribute to the mixture model, and the gradient will more or less encourage the copy-mode; otherwise, the copy-mode is discouraged due to the competition from the shared normalization term Z. In practice, in most cases one mode dominates."}, {"heading": "5 Experiments", "text": "We report our empirical study of COPYNET on the following three tasks with different characteristics\n1. A synthetic dataset on with simple patterns; 2. A real-world task on text summarization; 3. A data set for simple single-turn dialogues."}, {"heading": "5.1 Synthetic Dataset", "text": "Dataset: We first randomly generate transformation rules with 5\u223c20 symbols and variables x & y, e.g. a b x c d y e f \u2212\u2192 g h x m, with {a b c d e f g h m} being regular symbols from a vocabulary of size 1,000. As shown in the table below, each rule can further produce a number of instances by replacing the variables with randomly generated subsequences (1\u223c15 symbols) from the same vocabulary. We create five types of rules, including \u201cx \u2192 \u2205\u201d. The task is to learn to do the Seq2Seq transformation from the training instances. This dataset is designed to study the behavior of COPYNET on handling simple and rigid patterns. Since the string to repeat are random, they can also be viewed as some extreme cases of rote memorization.\nRule-type Examples (e.g. x = i h k, y = j c)\nx\u2192 \u2205 a b c d x e f\u2192 c d g x\u2192 x a b c d x e f\u2192 c d x g x\u2192 xx a b c d x e f\u2192 x d x g xy\u2192 x a b y d x e f\u2192 x d i g xy\u2192 xy a b y d x e f\u2192 x d y g\nExperimental Setting: We select 200 artificial rules from the dataset, and for each rule 200 instances are generated, which will be split into training (50%) and testing (50%). We compare the accuracy of COPYNET and the RNN EncoderDecoder with (i.e. RNNsearch) or without attention (denoted as Enc-Dec). For a fair comparison, we use bi-directional GRU for encoder and another GRU for decoder for all Seq2Seq models, with hidden layer size = 300 and word embedding dimension = 150. We use bin size = 10 in beam search for testing. The prediction is considered correct only when the generated sequence is exactly the same as the given one.\nIt is clear from Table 1 that COPYNET significantly outperforms the other two on all rule-types except \u201cx\u2192 \u2205\u201d, indicating that COPYNET can effectively learn the patterns with variables and accurately replicate rather long subsequence of symbols at the proper places.This is hard to Enc-Dec\ndue to the difficulty of representing a long sequence with very high fidelity. This difficulty can be alleviated with the attention mechanism. However attention alone seems inadequate for handling the case where strict replication is needed.\nA closer look (see Figure 3 for example) reveals that the decoder is dominated by copy-mode when moving into the subsequence to replicate, and switch to generate-mode after leaving this area, showing COPYNET can achieve a rather precise coordination of the two modes."}, {"heading": "5.2 Text Summarization", "text": "Automatic text summarization aims to find a condensed representation which can capture the core meaning of the original document. It has been recently formulated as a Seq2Seq learning problem in (Rush et al., 2015; Hu et al., 2015), which essentially gives abstractive summarization since the summary is generated based on a representation of the document. In contrast, extractive summarization extracts sentences or phrases from the original text to fuse them into the summaries, therefore making better use of the overall structure of the original document. In a sense, COPYNET for summarization lies somewhere between two categories, since part of output summary is actually extracted from the document (via the copying mechanism), which are fused together possibly with the words from the generate-mode.\nDataset: We evaluate our model on the recently published LCSTS dataset (Hu et al., 2015), a large scale dataset for short text summarization. The\ndataset is collected from the news medias on Sina Weibo1 including pairs of (short news, summary) in Chinese. Shown in Table 2, PART II and III are manually rated for their quality from 1 to 5. Following the setting of (Hu et al., 2015) we use Part I as the training set and and the subset of Part III scored from 3 to 5 as testing set.\nExperimental Setting: We try COPYNET that is based on character (+C) and word (+W). For the word-based variant the word-segmentation is obtained with jieba2. We set the vocabulary size to 3,000 (+C) and 10,000 (+W) respectively, which are much smaller than those for models in (Hu et al., 2015). For both variants we set the embedding dimension to 350 and the size of hidden layers to 500. Following (Hu et al., 2015), we evaluate the test performance with the commonly used ROUGE-1, ROUGE-2 and ROUGE-L (Lin, 2004), and compare it against the two models in (Hu et al., 2015), which are essentially canonical Encoder-Decoder and its variant with attention.\nIt is clear from Table 3 that COPYNET beats the competitor models with big margin. Hu et al. (2015) reports that the performance of a word-based model is inferior to a character-based one. One possible explanation is that a wordbased model, even with a much larger vocabulary (50,000 words in Hu et al. (2015)), still has a large proportion of OOVs due to the large number of entity names in the summary data and the mistakes in word segmentation. COPYNET, with its ability to handle the OOV words with the copying mechanism, performs however slightly better with the word-based variant.\n1www.sina.com 2https://pypi.python.org/pypi/jieba"}, {"heading": "5.2.1 Case Study", "text": "We make the following interesting observations about the summary from textscCopyNet (Figure 4, and more in the supplementary material): 1) most words are from copy-mode, but the summary is usually still fluent; 2) COPYNET tends to cover consecutive words in the original document, but it often puts together segments far away from each other, indicating a sophisticated coordination of content-based addressing and location-based addressing; 3) COPYNET handles OOV words really well: it can generate acceptable summary for document with many OOVs, and even the summary itself often contains many OOV words. In contrast, the canonical RNN-based approaches often fail in cases like that.\nIt is quite intriguing that COPYNET can often find important parts of the document, a behavior with the characteristics of extractive summarization, while it often generate words to \u201cconnect\u201d those words, showing its aspect of abstractive summarization."}, {"heading": "5.3 Single-turn Dialogue", "text": "In this experiment we follow the work on neural dialogue model proposed in (Shang et al., 2015; Vinyals and Le, 2015; Sordoni et al., 2015), and test COPYNET on single-turn dialogue. Basically, the neural model learns to generate a response to\nuser\u2019s input, from the given (input, response) pairs as training instances.\nDataset: We build a simple dialogue dataset based on the following three instructions:\n1. Dialogue instances are collected from Baidu Tieba3 with some coverage of conversations of real life e.g., greeting and sports, etc. 2. Patterns with slots like hi, my name is x\u2192 hi, x\nare mined from the set, with possibly multiple responding patterns to one input. 3. Similar with the synthetic dataset, we enlarge the dataset by filling the slots with suitable subsequence (e.g. name entities, dates, etc.) To make the dataset close to the real conversations, we also maintain a certain proportion of instances with the response that 1) do not contain entities or 2) contain entities not in the input.\nExperimental Setting: We create two datasets: DS-I and DS-II with slot filling on 173 collected patterns. The main difference between the two datasets is that the filled substrings for training and testing in DS-II have no overlaps, while in DS-I they are sampled from the same pool. For each dataset we use 6,500 instances for training and 1,500 for testing. We compare COPYNET with canonical RNNSearch, both character-based, with the same model configuration in Section 5.1.\n3http://tieba.baidu.com\nWe compare COPYNET and RNNSearch on DS-I and DS-II in terms of top-1 and top-10 accuracy (shown in Table 4), estimating respectively the chance of the top-1 or one of top-10 (from beam search) matching the golden. Since there are often many good responses to a input, top-10 accuracy appears to be closer to the real world setting.\nAs shown in Table 4, COPYNET significantly outperforms RNNsearch, especially on DS-II. It suggests that introducing the copying mechanism helps the dialogue system master the patterns in dialogue and correctly identify the correct parts of input, often proper nouns, to replicate in the response. Since the filled substrings have no overlaps in DS-II, the performance of RNNSearch drops significantly as it cannot handle words unseen in training data. In contrast, the performance of COPYNET only drops slightly as it has learned to fill the slots with the copying mechanism and relies less on the representation of the words."}, {"heading": "5.3.1 Case Study", "text": "As indicated by the examples in Figure 5, COPYNET accurately replicates the critical segments from the input with the copy-mode, and generates the rest of answers smoothly through the generatemode. Note that in (2) and (3), the decoding sequence is not exactly the same with the standard one, yet still correct regarding to their meanings. In contrast, although RNNSearch usually generates answers in the right formats, it fails to catch\nthe critical entities in all three cases because of the difficulty brought by the unseen words."}, {"heading": "6 Related Work", "text": "Our work is partially inspired by the recent work of Pointer Networks (Vinyals et al., 2015a), in which a pointer mechanism (quite similar with the proposed copying mechanism) is used to predict the output sequence directly from the input. In addition to the difference with ours in application, (Vinyals et al., 2015a) cannot predict outside of the set of input sequence, while COPYNET can naturally combine generating and copying.\nCOPYNET is also related to the effort to solve the OOV problem in neural machine translation. Luong et al. (2015) introduced a heuristics to postprocess the translated sentence using annotations on the source sentence. In contrast COPYNET addresses the OOV problem in a more systemic way with an end-to-end model. However, as COPYNET copies the exact source words as the output, it cannot be directly applied to machine translation.\nThe copying mechanism can also be viewed as carrying information over to the next stage without any nonlinear transformation. Similar ideas are proposed for training very deep neural networks in (Srivastava et al., 2015; He et al., 2015) for classification tasks, where shortcuts are built between layers for the direct carrying of information."}, {"heading": "7 Conclusion and Future Work", "text": "We proposed COPYNET to incorporate the copying mechanism into Seq2Seq learning framework. For future work, we will extend this idea to the task where the source and target are in different languages, for example, machine translation."}, {"heading": "A supplemental materials", "text": "A.1 Text Summarization We present more examples of summarization results on the testing set of LCSTS, following the same instructions discussed in Section 5.2 comparing COPYNET and RNN encoder as you can see in Figure 6 and Figure 7.\nA.2 Single-turn Dialogue System We present more examples of single-turn dialogue results on the testing set of the dialogue dataset, following the same instructions discussed in Section 5.3, comparing COPYNET and RNN encoder as you can see in Figure 8."}], "references": [{"title": "Neural machine translation by jointly learning to align and translate", "author": ["Dzmitry Bahdanau", "Kyunghyun Cho", "Yoshua Bengio."], "venue": "arXiv preprint arXiv:1409.0473.", "citeRegEx": "Bahdanau et al\\.,? 2014", "shortCiteRegEx": "Bahdanau et al\\.", "year": 2014}, {"title": "Learning phrase representations using rnn encoder-decoder for statistical machine translation", "author": ["Kyunghyun Cho", "Bart Van Merri\u00ebnboer", "Caglar Gulcehre", "Dzmitry Bahdanau", "Fethi Bougares", "Holger Schwenk", "Yoshua Bengio."], "venue": "arXiv preprint", "citeRegEx": "Cho et al\\.,? 2014", "shortCiteRegEx": "Cho et al\\.", "year": 2014}, {"title": "Neural turing machines", "author": ["Alex Graves", "Greg Wayne", "Ivo Danihelka."], "venue": "arXiv preprint arXiv:1410.5401.", "citeRegEx": "Graves et al\\.,? 2014", "shortCiteRegEx": "Graves et al\\.", "year": 2014}, {"title": "Deep residual learning for image recognition", "author": ["Kaiming He", "Xiangyu Zhang", "Shaoqing Ren", "Jian Sun."], "venue": "arXiv preprint arXiv:1512.03385.", "citeRegEx": "He et al\\.,? 2015", "shortCiteRegEx": "He et al\\.", "year": 2015}, {"title": "Long short-term memory", "author": ["Sepp Hochreiter", "J\u00fcrgen Schmidhuber."], "venue": "Neural computation, 9(8):1735\u20131780.", "citeRegEx": "Hochreiter and Schmidhuber.,? 1997", "shortCiteRegEx": "Hochreiter and Schmidhuber.", "year": 1997}, {"title": "Lcsts: a large scale chinese short text summarization dataset", "author": ["Baotian Hu", "Qingcai Chen", "Fangze Zhu."], "venue": "arXiv preprint arXiv:1506.05865.", "citeRegEx": "Hu et al\\.,? 2015", "shortCiteRegEx": "Hu et al\\.", "year": 2015}, {"title": "Neural random-access machines", "author": ["Karol Kurach", "Marcin Andrychowicz", "Ilya Sutskever."], "venue": "arXiv preprint arXiv:1511.06392.", "citeRegEx": "Kurach et al\\.,? 2015", "shortCiteRegEx": "Kurach et al\\.", "year": 2015}, {"title": "Rouge: A package for automatic evaluation of summaries", "author": ["Chin-Yew Lin."], "venue": "Stan Szpakowicz Marie-Francine Moens, editor, Text Summarization Branches Out: Proceedings of the ACL-04 Workshop, pages 74\u201381, Barcelona, Spain, July. Associa-", "citeRegEx": "Lin.,? 2004", "shortCiteRegEx": "Lin.", "year": 2004}, {"title": "Addressing the rare word problem in neural machine translation", "author": ["Thang Luong", "Ilya Sutskever", "Quoc Le", "Oriol Vinyals", "Wojciech Zaremba."], "venue": "Proceedings of the 53rd Annual Meeting of the Association for Computational Linguistics and the 7th In-", "citeRegEx": "Luong et al\\.,? 2015", "shortCiteRegEx": "Luong et al\\.", "year": 2015}, {"title": "Mixture models", "author": ["Geoffrey J McLachlan", "Kaye E Basford."], "venue": "inference and applications to clustering. Statistics: Textbooks and Monographs, New York: Dekker, 1988, 1.", "citeRegEx": "McLachlan and Basford.,? 1988", "shortCiteRegEx": "McLachlan and Basford.", "year": 1988}, {"title": "A neural attention model for abstractive sentence summarization", "author": ["Alexander M Rush", "Sumit Chopra", "Jason Weston."], "venue": "arXiv preprint arXiv:1509.00685.", "citeRegEx": "Rush et al\\.,? 2015", "shortCiteRegEx": "Rush et al\\.", "year": 2015}, {"title": "Neural responding machine for short-text conversation", "author": ["Lifeng Shang", "Zhengdong Lu", "Hang Li."], "venue": "arXiv preprint arXiv:1503.02364.", "citeRegEx": "Shang et al\\.,? 2015", "shortCiteRegEx": "Shang et al\\.", "year": 2015}, {"title": "Minimum risk training for neural machine translation", "author": ["Shiqi Shen", "Yong Cheng", "Zhongjun He", "Wei He", "Hua Wu", "Maosong Sun", "Yang Liu."], "venue": "CoRR, abs/1512.02433.", "citeRegEx": "Shen et al\\.,? 2015", "shortCiteRegEx": "Shen et al\\.", "year": 2015}, {"title": "A neural network approach to context-sensitive generation of conversational responses", "author": ["Alessandro Sordoni", "Michel Galley", "Michael Auli", "Chris Brockett", "Yangfeng Ji", "Margaret Mitchell", "Jian-Yun Nie", "Jianfeng Gao", "Bill Dolan."], "venue": "arXiv preprint", "citeRegEx": "Sordoni et al\\.,? 2015", "shortCiteRegEx": "Sordoni et al\\.", "year": 2015}, {"title": "Highway networks", "author": ["Rupesh Kumar Srivastava", "Klaus Greff", "J\u00fcrgen Schmidhuber."], "venue": "arXiv preprint arXiv:1505.00387.", "citeRegEx": "Srivastava et al\\.,? 2015", "shortCiteRegEx": "Srivastava et al\\.", "year": 2015}, {"title": "Sequence to sequence learning with neural networks", "author": ["Ilya Sutskever", "Oriol Vinyals", "Quoc VV Le."], "venue": "Advances in neural information processing systems, pages 3104\u20133112.", "citeRegEx": "Sutskever et al\\.,? 2014", "shortCiteRegEx": "Sutskever et al\\.", "year": 2014}, {"title": "A neural conversational model", "author": ["Oriol Vinyals", "Quoc Le."], "venue": "arXiv preprint arXiv:1506.05869.", "citeRegEx": "Vinyals and Le.,? 2015", "shortCiteRegEx": "Vinyals and Le.", "year": 2015}, {"title": "Pointer networks", "author": ["Oriol Vinyals", "Meire Fortunato", "Navdeep Jaitly."], "venue": "Advances in Neural Information Processing Systems, pages 2674\u20132682.", "citeRegEx": "Vinyals et al\\.,? 2015a", "shortCiteRegEx": "Vinyals et al\\.", "year": 2015}, {"title": "Grammar as a foreign language", "author": ["Oriol Vinyals", "\u0141ukasz Kaiser", "Terry Koo", "Slav Petrov", "Ilya Sutskever", "Geoffrey Hinton."], "venue": "Advances in Neural Information Processing Systems, pages 2755\u20132763.", "citeRegEx": "Vinyals et al\\.,? 2015b", "shortCiteRegEx": "Vinyals et al\\.", "year": 2015}], "referenceMentions": [{"referenceID": 1, "context": "Recently, neural network-based sequence-tosequence learning (Seq2Seq) has achieved remarkable success in various natural language processing (NLP) tasks, including but not limited to Machine Translation (Cho et al., 2014; Bahdanau et al., 2014), Syntactic Parsing (Vinyals et al.", "startOffset": 203, "endOffset": 244}, {"referenceID": 0, "context": "Recently, neural network-based sequence-tosequence learning (Seq2Seq) has achieved remarkable success in various natural language processing (NLP) tasks, including but not limited to Machine Translation (Cho et al., 2014; Bahdanau et al., 2014), Syntactic Parsing (Vinyals et al.", "startOffset": 203, "endOffset": 244}, {"referenceID": 18, "context": ", 2014), Syntactic Parsing (Vinyals et al., 2015b), Text Summarization (Rush et al.", "startOffset": 27, "endOffset": 50}, {"referenceID": 10, "context": ", 2015b), Text Summarization (Rush et al., 2015) and Dialogue Systems (Vinyals and Le, 2015).", "startOffset": 29, "endOffset": 48}, {"referenceID": 16, "context": ", 2015) and Dialogue Systems (Vinyals and Le, 2015).", "startOffset": 29, "endOffset": 51}, {"referenceID": 0, "context": "Adding the attention mechanism (Bahdanau et al., 2014) to Seq2Seq, first proposed for automatic alignment in machine translation, has led to significant improvement on the performance of various tasks (Shang et al.", "startOffset": 31, "endOffset": 54}, {"referenceID": 11, "context": ", 2014) to Seq2Seq, first proposed for automatic alignment in machine translation, has led to significant improvement on the performance of various tasks (Shang et al., 2015; Rush et al., 2015).", "startOffset": 154, "endOffset": 193}, {"referenceID": 10, "context": ", 2014) to Seq2Seq, first proposed for automatic alignment in machine translation, has led to significant improvement on the performance of various tasks (Shang et al., 2015; Rush et al., 2015).", "startOffset": 154, "endOffset": 193}, {"referenceID": 12, "context": "Seq2Seq Learning can be expressed in a probabilistic view as maximizing the likelihood (or some other evaluation metrics (Shen et al., 2015)) of observing the output (target) sequence given an input (source) sequence.", "startOffset": 121, "endOffset": 140}, {"referenceID": 16, "context": "(2014), and then by (Vinyals and Le, 2015; Vinyals et al., 2015a).", "startOffset": 20, "endOffset": 65}, {"referenceID": 17, "context": "(2014), and then by (Vinyals and Le, 2015; Vinyals et al., 2015a).", "startOffset": 20, "endOffset": 65}, {"referenceID": 1, "context": "RNN-based Encoder-Decoder is successfully applied to real world Seq2Seq tasks, first by Cho et al. (2014) and Sutskever et al.", "startOffset": 88, "endOffset": 106}, {"referenceID": 1, "context": "RNN-based Encoder-Decoder is successfully applied to real world Seq2Seq tasks, first by Cho et al. (2014) and Sutskever et al. (2014), and then by (Vinyals and Le, 2015; Vinyals et al.", "startOffset": 88, "endOffset": 134}, {"referenceID": 4, "context": "In practice it is found that gated RNN alternatives such as LSTM (Hochreiter and Schmidhuber, 1997) or GRU (Cho et al.", "startOffset": 65, "endOffset": 99}, {"referenceID": 1, "context": "In practice it is found that gated RNN alternatives such as LSTM (Hochreiter and Schmidhuber, 1997) or GRU (Cho et al., 2014) often perform much better than vanilla ones.", "startOffset": 107, "endOffset": 125}, {"referenceID": 0, "context": "The attention mechanism was first introduced to Seq2Seq (Bahdanau et al., 2014) to release the burden of summarizing the entire source into a fixed-length vector as context.", "startOffset": 56, "endOffset": 79}, {"referenceID": 0, "context": "Note that in (Bahdanau et al., 2014) the source sentence is encoded with a Bi-directional RNN, making each hidden state h\u03c4 aware of the contextual information from both ends.", "startOffset": 13, "endOffset": 36}, {"referenceID": 0, "context": "Encoder: Same as in (Bahdanau et al., 2014), a bi-directional RNN is used to transform the source sequence into a series of hidden states with equal length, with each hidden state ht corresponding to word xt.", "startOffset": 20, "endOffset": 43}, {"referenceID": 0, "context": "It is similar with the canonical RNN-decoder in (Bahdanau et al., 2014), with however the following important differences", "startOffset": 48, "endOffset": 71}, {"referenceID": 9, "context": "(4) deviated from the canonical definition of mixture model (McLachlan and Basford, 1988).", "startOffset": 60, "endOffset": 89}, {"referenceID": 2, "context": "Unlike the explicit design for hybrid addressing in Neural Turing Machine (Graves et al., 2014; Kurach et al., 2015), COPYNET is more subtle: it provides the architecture that can facilitate some particular locationbased addressing and lets the model figure out the details from the training data for specific tasks.", "startOffset": 74, "endOffset": 116}, {"referenceID": 6, "context": "Unlike the explicit design for hybrid addressing in Neural Turing Machine (Graves et al., 2014; Kurach et al., 2015), COPYNET is more subtle: it provides the architecture that can facilitate some particular locationbased addressing and lets the model figure out the details from the training data for specific tasks.", "startOffset": 74, "endOffset": 116}, {"referenceID": 10, "context": "It has been recently formulated as a Seq2Seq learning problem in (Rush et al., 2015; Hu et al., 2015), which essentially gives abstractive summarization since the summary is generated based on a representation of the document.", "startOffset": 65, "endOffset": 101}, {"referenceID": 5, "context": "It has been recently formulated as a Seq2Seq learning problem in (Rush et al., 2015; Hu et al., 2015), which essentially gives abstractive summarization since the summary is generated based on a representation of the document.", "startOffset": 65, "endOffset": 101}, {"referenceID": 5, "context": "Dataset: We evaluate our model on the recently published LCSTS dataset (Hu et al., 2015), a large scale dataset for short text summarization.", "startOffset": 71, "endOffset": 88}, {"referenceID": 5, "context": "Following the setting of (Hu et al., 2015) we use Part I as the training set and and the subset of Part III scored from 3 to 5 as testing set.", "startOffset": 25, "endOffset": 42}, {"referenceID": 5, "context": "We set the vocabulary size to 3,000 (+C) and 10,000 (+W) respectively, which are much smaller than those for models in (Hu et al., 2015).", "startOffset": 119, "endOffset": 136}, {"referenceID": 5, "context": "Following (Hu et al., 2015), we evaluate the test performance with the commonly used ROUGE-1, ROUGE-2 and ROUGE-L (Lin, 2004), and compare it against the two models in (Hu et al.", "startOffset": 10, "endOffset": 27}, {"referenceID": 7, "context": ", 2015), we evaluate the test performance with the commonly used ROUGE-1, ROUGE-2 and ROUGE-L (Lin, 2004), and compare it against the two models in (Hu et al.", "startOffset": 94, "endOffset": 105}, {"referenceID": 5, "context": ", 2015), we evaluate the test performance with the commonly used ROUGE-1, ROUGE-2 and ROUGE-L (Lin, 2004), and compare it against the two models in (Hu et al., 2015), which are essentially canonical Encoder-Decoder and its variant with attention.", "startOffset": 148, "endOffset": 165}, {"referenceID": 5, "context": "6 (Hu et al., 2015) +W 17.", "startOffset": 2, "endOffset": 19}, {"referenceID": 5, "context": "2 (Hu et al., 2015) +W 26.", "startOffset": 2, "endOffset": 19}, {"referenceID": 5, "context": "Hu et al. (2015) reports that the performance of a word-based model is inferior to a character-based one.", "startOffset": 0, "endOffset": 17}, {"referenceID": 5, "context": "Hu et al. (2015) reports that the performance of a word-based model is inferior to a character-based one. One possible explanation is that a wordbased model, even with a much larger vocabulary (50,000 words in Hu et al. (2015)), still has a large proportion of OOVs due to the large number of entity names in the summary data and the mistakes in word segmentation.", "startOffset": 0, "endOffset": 227}, {"referenceID": 11, "context": "In this experiment we follow the work on neural dialogue model proposed in (Shang et al., 2015; Vinyals and Le, 2015; Sordoni et al., 2015), and test COPYNET on single-turn dialogue.", "startOffset": 75, "endOffset": 139}, {"referenceID": 16, "context": "In this experiment we follow the work on neural dialogue model proposed in (Shang et al., 2015; Vinyals and Le, 2015; Sordoni et al., 2015), and test COPYNET on single-turn dialogue.", "startOffset": 75, "endOffset": 139}, {"referenceID": 13, "context": "In this experiment we follow the work on neural dialogue model proposed in (Shang et al., 2015; Vinyals and Le, 2015; Sordoni et al., 2015), and test COPYNET on single-turn dialogue.", "startOffset": 75, "endOffset": 139}, {"referenceID": 17, "context": "Our work is partially inspired by the recent work of Pointer Networks (Vinyals et al., 2015a), in which a pointer mechanism (quite similar with the proposed copying mechanism) is used to predict the output sequence directly from the input.", "startOffset": 70, "endOffset": 93}, {"referenceID": 17, "context": "In addition to the difference with ours in application, (Vinyals et al., 2015a) cannot predict outside of the set of input sequence, while COPYNET can naturally combine generating and copying.", "startOffset": 56, "endOffset": 79}, {"referenceID": 14, "context": "Similar ideas are proposed for training very deep neural networks in (Srivastava et al., 2015; He et al., 2015) for classification tasks, where shortcuts are built between layers for the direct carrying of information.", "startOffset": 69, "endOffset": 111}, {"referenceID": 3, "context": "Similar ideas are proposed for training very deep neural networks in (Srivastava et al., 2015; He et al., 2015) for classification tasks, where shortcuts are built between layers for the direct carrying of information.", "startOffset": 69, "endOffset": 111}, {"referenceID": 6, "context": "Luong et al. (2015) introduced a heuristics to postprocess the translated sentence using annotations on the source sentence.", "startOffset": 0, "endOffset": 20}], "year": 2016, "abstractText": "We address an important problem in sequence-to-sequence (Seq2Seq) learning referred to as copying, in which certain segments in the input sequence are selectively replicated in the output sequence. A similar phenomenon is observable in human language communication. For example, humans tend to repeat entity names or even long phrases in conversation. The challenge with regard to copying in Seq2Seq is that new machinery is needed to decide when to perform the operation. In this paper, we incorporate copying into neural networkbased Seq2Seq learning and propose a new model called COPYNET with encoderdecoder structure. COPYNET can nicely integrate the regular way of word generation in the decoder with the new copying mechanism which can choose subsequences in the input sequence and put them at proper places in the output sequence. Our empirical study on both synthetic data sets and real world data sets demonstrates the efficacy of COPYNET. For example, COPYNET can outperform regular RNN-based model with remarkable margins on text summarization tasks.", "creator": "TeX"}}}