{"id": "1603.07849", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "25-Mar-2016", "title": "A multinomial probabilistic model for movie genre predictions", "abstract": "This paper proposes a movie genre-prediction based on multinomial probability model. To the best of our knowledge, this problem has not been addressed yet in the field of recommender system. The prediction of a movie genre has many practical applications including complementing the items categories given by experts and providing a surprise effect in the recommendations given to a user. We employ mulitnomial event model to estimate a likelihood of a movie given genre and the Bayes rule to evaluate the posterior probability of a genre given a movie. Experiments with the MovieLens dataset validate our approach. We achieved 70% prediction rate using only 15% of the whole set for training.", "histories": [["v1", "Fri, 25 Mar 2016 08:49:39 GMT  (4244kb,D)", "http://arxiv.org/abs/1603.07849v1", "5 pages, 4 figures, 8th International Conference on Machine Learning and Computing, Hong Kong"]], "COMMENTS": "5 pages, 4 figures, 8th International Conference on Machine Learning and Computing, Hong Kong", "reviews": [], "SUBJECTS": "cs.IR cs.LG", "authors": ["eric makita", "artem lenskiy"], "accepted": false, "id": "1603.07849"}, "pdf": {"name": "1603.07849.pdf", "metadata": {"source": "CRF", "title": "A multinomial probabilistic model for movie genre predictions", "authors": ["Eric Makita", "Artem Lenskiy"], "emails": ["ericmakita@koreatech.ac.kr,", "lensky@koreatech.ac.kr"], "sections": [{"heading": null, "text": "PR EP\nRI NT\nKeywords\u2014Recommender system, category prediction, multinomial model, Naive Bayes classifier.\nI. INTRODUCTION\nNowadays web users are confronted with an overabundance of information caused by a constant increase in the volume of information that users can no longer absorb, process, or prioritize. As a result, the selection and use of information processed by users become particularly complex. This phenomenon presents the need to design a recommender system that best depicts the preferences of a user with regard to the most relevant information at possibly the shortest time [1], [2].\nRecommender systems are tools whose purpose is to help users overcome information overload by selecting the most interesting information based on their preferences. In other words, they try to predict a user\u2019s interest towards an item. The items to recommend are varied, ranging from movies to watch, books to read, podcast to listen to, or else. Conventional recommender systems have been successfully applied by e-commerce or social networking websites such as Amazon (www.amazon.com), Netflix (www.netflix.com), YouTube (www.youtube.com), and Facebook (www.facebook.com). Since then many recommender system algorithms and their variants have been proposed in literature, however, most of them were mainly accuracy-oriented algorithms that predict the rating of an item. In other words, these algorithms were focused on optimizing the accuracy of the rating of a predicted item. Although such recommender system\nalgorithms are sufficient in many applications, there are situations where they may not be enough because they do not take into account all facets of the user\u2019s interests such as the desire to change. At this point the need to design a new paradigm of recommender systems arises considering important factors outside the optimization of the accuracy of the rating of predicted item.\nA multinomial probabilistic model for movie genre prediction is proposed in this paper as a response to the confronting challenge. Our model aims to predict a movie\u2019s genre rather than to predict its rating. Technically, this approach is based on Bayesian reasoning and is enacted in two steps. In the first step, the multinomial probabilistic model is applied to learn the movie\u2019s likelihood of belonging to a particular genre using multinomial model. At the second step, the Bayesian probabilistic reasoning is applied for the prediction of the movie\u2019s genres. This in turn completes the item\u2019s genre given by experts and consequently can improve the recommendation. In the recent past, many recommender systems that consider factors other than the accuracy-oriented ones and their variants have been proposed in literature [3], [4], [5], [6]. To the best of our knowledge, our model predicting an item\u2019s genre/s that complement the genres assigned by experts is a new attempt in the field of recommender systems. The rest of the paper is organized as follows. Section 2 discusses the related work. Section 3 outlines the proposed algorithm. Section 4 contains the performance study. Finally in section 5, we summarize our work."}, {"heading": "II. RELATED WORK", "text": "Traditional recommender systems focus on increasing the accuracy of ratings prediction of items not yet viewed by active users based on ratings of items already viewed by active users. However, in [7], McNee et al. stated that focusing only on improving the accuracy of the recommended items\u2019 rating is not enough for improving the user satisfaction. Factors such as coverage, diversity, novelty and/or serendipity should be used to improve the recommendations. Aiming at enhancing the conventional recommender systems while working with important factors outside item rating prediction\nar X\niv :1\n60 3.\n07 84\n9v 1\n[ cs\n.I R\n] 2\n5 M\nar 2\n01 6\nPR EP\nRI NT\naccuracy, many studies developing new paradigm of making recommendation were proposed in the literature. We briefly discuss related works considering fcators outside of accuracy in recommender systems and survey works that have done new attempts in the area of recommender systems.\nSaul et al. [8] enhanced the diversity of recommendations by adopting the re-ranking approach with a greedy selection. This approach allows to discover new useful recommendations that were not searched by the user. In [9], Tuzhilin and Adamopoulos proposed a probabilistic neighborhood selection in collaborative filtering that directly generates diversified recommendation lists prior to overcoming the overspecialization issues in traditional recommendations. Recent researches have been focused on designing new attempts in the literature. Liu et al. [10] proposed a novel approach of collaborative filtering whose goal is to select a small set of special users called star users. Unlike traditional approaches, collaborative filtering allows finding similar users or neighborhood for each target user. Collaborative filtering based on star users employs star users to represent the interest of the whole set of users prior to computing the recommendation, so as to improve the scalability of the traditional recommender systems.\nAmatriain et al. [11] proposed a variation of the traditional collaborative filtering approach that uses expert opinions from independent data set to compute the recommendations. In this approach, the nearest neighbororiented recommendation was scaled-up by the use of these external experts."}, {"heading": "III. THE NAIVE BAYES CLASSIFIER FOR TEXT CLASSIFICATION", "text": "In order to solve classification problems, many methods such as linear discriminant analysis, neural networks, support vector machines, etc have been proposed. Among them, one of the oldest and well-known classification algorithms is the Naive Bayes classification algorithm which dates back to 18th century. The algorithm performs well in various tasks despite its simplicity, however it comes with a naive assumption that features that constitutes features vectors are independent. One of the well-known applications of Naive Bayes is the text classification. The details of the Naive Bayes classifier are well summarized in [12], [13]. This section will provide a brief overview of the Naive Bayes classifier applied to text classification.\nThe Naive Bayes classifiers is based on the Bayesian theorem and is appropriate for multidimensional data i.e. multidimensional feature vectors. Regarding the text document classification problem, a document is represented as a bag of words where each word is part of a vocabulary V , w \u2208 V . Considering each document d \u2208 D where D represents the set of all training documents and every document is labeled as c where c \u2208 C is a set of |C| distinct classes. According to the Bayes theorem the Naive Bayes classifiers estimates the\nprobability of a class c given a document d as follows:\nP (c | d) = P (c) \u00b7 P (d | c) P (d)\n(1)\nThis estimate can be further used for document classification by simply assigning the class label that corresponds to the highest probability P (c | d). The probability P (c) is the prior probability of a document being of class c without actually knowing anything about the document. The prior class probability P (c) is estimated by counting the number of training documents in every class:\nP (c) = \u2211 d\u2208D P (c | d) |D|\n(2)\nwhere P (c | d) \u2208 {0, 1}, is 1 if document is labeled as c otherwise it is 0 and |D| is the total number of training documents. The conditional probability P (d | c) incorporates information about the document via the set of words that occurred in the document. Depending on a class c of a document, the probability of a word occurrence P (w | c) will vary as well as P (d | c). To simplify the computation of the P (d | c), d = {w1, w2, ..., w|d|}, where |d| is the document length, it is assumed that words are conditionally independent, i.e. the occurrence of words do not depend upon each other. Thus, P (d | c) = P (w1 | c) \u00b7 P (w2 | c)...P (w|d| | c). A slightly different form of computing P (d | c) is given as follows\nP (d | c) = \u220f w\u2208V P (w | c)N(w) (3)\nwhere wi is a unique word in the vocabulary V . Here, instead of iterating over the words in a document we iterate over the set of all words in the vocabulary V . Notice that some words from the vocabulary might occur multiple times in that case 1 < N(w), and on the other hand some words might not occur in the document at all, in such a case N(w) = 0. Substituting eq. 3 to eq. 1 and assuming P (di) = P (dj),\u2200i, j, i.e. all documents are equally to occur, the classification can be performed as follows :\nc = argmax c P (c) \u220f w\u2208V P (w | c)N(w) (4)\nProbabilities P (w|c) of a word w occurring in a class c is estimated by counting the number of times a word w appeared in all documents of class c. However, some words might not appear at all in documents of a particular class resulting in a zero probability. To avoid the zero probability in such cases a small probability is assigned according the Laplace\u2019s Law of succession:\nP (w | c) = 1 +N(w, c) |V |+ \u2211 w\u2208V N(w, c)\n(5)\nwhere N(w, c) represents the number of times the word w occurred in the training documents whose\nPR\nEP\nRI\nNT\nclass label is c, N(c) denotes the number of documents labeled as c."}, {"heading": "IV. PROPOSED METHOD", "text": "We propose to employ a similar approach of the text-classification[14] discussed in the previous section to predicting movies\u2019 genres. Following the approach of bag-of-words for text classification we propose a bag-of-users approach to predict movies\u2019 genres. Such prediction is possible due to the fact that users are usually consistent with their preferences, and prefer some genres over others.\nIn the following, we introduce symbols and definitions used in this section. Let U be the set of all users, M be the set of all movies and G be the set of genres. The movie m \u2208 M is represented by |U | dimensional feature vector rm = {Ru1,m,Ru2,m, ...,Ru|U|,m}, where R is rating matrix and Rui,m is either a 0 or a 1, depending if the user ui rated a movie m or not.\nIt is assumed that users are conditionally independent. That is, the ratings of one user do not depend on ratings of another user. This assumption is required by the Naive Bayes classifier. Thus, the movie likelihood P (m | g), can be written as a categorical distribution, that is a particular case of multinomial distribution:\nwhere Ru,m represents whether the user u rated a movie m or not. We use categorical distribution because a user does not rate the same movie twice, whereas in the text classification the same word can appear in the text more than once. It is often the case that ratings are not binary. There could be more than one rating. For example, 0 corresponds to no rating, 1 to a dislike, 2 to a neutral response and 3 to a like. Then matrix R is split into three binary matrices R1, R2, R3. Then an estimate of the probability P (u | g) is computed as follow:\nP (u | g) = 1 +N(u, g) ||U |+ \u2211 u\u2208U N(u, g)\n(7)\nThis probability is estimated as a relative frequency of user\u2019s u ratings of movies labeled as genre g to the total number of users\u2019 ratings of the movies from that genre.\nNote that the Laplaces Law of succession was used to avoid the zero probability estimates that can occur for situations where a user u did not rate a movie m.\nGiving a movie training set M , the prior probability of g can be estimated as the relative frequency of movies of genre g to the total number of movies:\nP (g) = \u2211 m\u2208M P (g | m) |M |\n(8)\nwhere P (g | m) takes the value of 1 if m is marked as genre g, 0 otherwise. In the case when a number of N genres are assigned to a movie, the probability is corrected as follows P (g | m) = 1/N .\nFigure 1 shows the preferences of all of the users in the training set calculated using eq. 7. Figure 2 illustrates the conditional probability calculated according to eq. 6 with prior taking the logarithm.\n-8000\n18 3500 16\n3000 14 2500 12\nmovies categories\n102000 81500\n-6000\n61000 4500\n2\n-4000\n-2000\n0\nFigure 2. The logarithm of conditional probabilities P (m | g)."}, {"heading": "V. EXPERIMENTAL EVALUATION AND DISCUSSION", "text": "To evaluate the effectiveness of the proposed methodology of predicting movie genres using users ratings, we employed the 1M Movielens dataset. The dataset contains one million ratings of 3952 movies given by 6040 users. Each user rated at least 20 movies on the scale from 1 to 5, i.e. dislike, slightly dislike, neutral, slightly like and like. A rating of 1 shows\nPR EP\nRI\nNT\nhow strongly a user dislikes a movie while a rating of 5 shows how strongly a user likes a movie. The experiments were carried out in the following procedure: a portion of the movies was randomly selected for training and the remaining movies were used to assess the quality of genre prediction. The portion of the movies used for training varied from 5% to 95% with a 5% step, so overall we experimented with 19 different training sizes. For every portion we repeated the experiment 50 times, then estimated the mean and the standard deviation. Among all movies about 33% were assigned two genres, 10% three genres, and less than 3% four, five and six genres, and the remaining 51% of the movies were labeled with only one genre. We considered the prediction is successful if the predicted genre matches the true one, or one of the true ones if a movie simultaneously was assigned to a number of genres. Prediction was performed separately for every rating. Figure 3 summarizes the evolution of genre prediction.\n5 10 15 20 25 30 35 40 45 50 55 60 65 70 75 80 85 90 95 Precentage of the total data used for training\n0.45\n0.5\n0.55\n0.6\n0.65\n0.7\n0.75\n0.8\n0.85\nP re\ndi ct\nio n\nra te\nr = 1 r = 2 r = 3 r = 4 r = 5\nFigure 3. Genres\u2019 prediction rate depending on the size of the training set.\nAs it can be seen in the figures, the more movies are used in the training the better prediction is. However, an interesting observation here is that even 5% of the data used for training is enough to obtain 62% prediction rate. If the prediction was performed simply by using the prior probability, only 30% of the movies would be predicted correctly. Increasing the training set does improve the prediction rate however, the improvement is no as significant as for the first 5%. For instance, increasing the size of the training set to 95% would only improve the prediction rate by a slightly more than 15%. From this analysis we are ought to conclude that even a small portion of information about the users\u2019 ratings is enough to learn users preferences that allows us to predict genres. Particularly, the multinomial model was capable of predicting movies\u2019 genres based on users\u2019 preference profiles well enough. The second interesting result is that better predictions are achieved for neutral responses i.e. movies with ratings 3 and for slightly likes i.e. movies with ratings 4, rather than for the expected rating 5. The worst predictions are based on the rating 1 and 2. These results might be ambiguous,\nhowever after counting the number of times ratings were given in every rating category, we found that the most popular ratings are 3 and 4 (fig. 4). Thus, the higher number of ratings provides higher prediction accuracy. Currently, the prediction was performed separately for every class of ratings, for instance, only based on strong dislikes. As for the further research we are planning to investigate if some combinations of ratings will improve the prediction.\nDislike Slightly dislike Neutral Slightly like Like 0\n0.5\n1\n1.5\n2\n2.5\n3\n3.5\n4\nN um\nbe r\nof r\nat in\ngs\n#105\nFigure 4. Number of ratings of each type given in the whole set."}, {"heading": "VI. CONCLUSION AND FUTURE WORK", "text": "Recommender systems are tools whose purpose is to help users overcome information overload by selecting the most interesting information based on users\u2019 preferences and also to help companies sell more products. In this paper, we proposed to predict a movies genre rather than predicting movies ratings. For this purpose, we applied Nave Bayes classifier and multinomial event model, that previously was used for text classification and a number of other tasks. This approach can potentially improve the efficiency of recommendation by recommending movies from unexpected but relevant genres, this will be investigated in further research. We showed that the genre prediction rate increases while the size of the training data increases, however the rate of prediction slows down. Even a small number of users allows significantly increase genre prediction. That is, overall, we successfully applied ratings for genre prediction in the context of movies."}], "references": [{"title": "A survey of collaborative filtering techniques,", "author": ["X. Su", "Khoshgoftaar", "T. M"], "venue": "Advances in artificial intelligence,", "citeRegEx": "2", "shortCiteRegEx": "2", "year": 2009}, {"title": "Using General Impressions to Analyze Discovered Classification Rules,", "author": ["B. Liu", "W. Hsu", "S Chen"], "venue": "In KDD (pp. 31-36),", "citeRegEx": "3", "shortCiteRegEx": "3", "year": 1997}, {"title": "accuracy: evaluating recommender systems by coverage and serendipity,", "author": ["M. Ge", "C. Delgado-Battenfeld", "D Jannach", "\u201dBeyond"], "venue": "In Proceedings of the fourth ACM conference on Recommender systems (pp. 257-260)", "citeRegEx": "4", "shortCiteRegEx": "4", "year": 2010}, {"title": "C,\u201dAn investigation on the serendipity problem in recommender systems,", "author": ["M. de Gemmis", "P. Lops", "G. Semeraro", "Musto"], "venue": "Information Processing & Management,", "citeRegEx": "5", "shortCiteRegEx": "5", "year": 2015}, {"title": "Evaluating collaborative filtering recommender systems,", "author": ["J.L. Herlocker", "J.A. Konstan", "L.G. Terveen", "Riedl", "J. T"], "venue": "ACM Transactions on Information Systems (TOIS),", "citeRegEx": "6", "shortCiteRegEx": "6", "year": 2004}, {"title": "Being accurate is not enough: how accuracy metrics have hurt recommender systems,\u201d In CHI\u201906 extended abstracts on Human factors in computing systems", "author": ["S.M. McNee", "J. Riedl", "Konstan", "J. A"], "venue": null, "citeRegEx": "7", "shortCiteRegEx": "7", "year": 2006}, {"title": "Coverage, redundancy and size-awareness in genre diversity for recommender systems,", "author": ["S. Vargas", "L. Baltrunas", "A. Karatzoglou", "P Castells"], "venue": "In Proceedings of the 8th ACM Conference on Recommender systems (pp", "citeRegEx": "8", "shortCiteRegEx": "8", "year": 2014}, {"title": "Probabilistic Neighborhood Selection in Collaborative Filtering Systems,", "author": ["A. Tuzhilin", "P Adamopoulos"], "venue": "Working Paper: CBA-13-04,", "citeRegEx": "9", "shortCiteRegEx": "9", "year": 2013}, {"title": "The wisdom of the few: a collaborative filtering approach based on expert opinions from the web,", "author": ["X. Amatriain", "N. Lathia", "J.M. Pujol", "H Kwak", "N Oliver"], "venue": "In Proceedings of the 32nd international ACM SIGIR conference on Research and development in information retrieval (pp. 532-539),ACM,", "citeRegEx": "10", "shortCiteRegEx": "10", "year": 2009}, {"title": "Collaborative Filtering Based on Star Users,", "author": ["Q. Liu", "B. Cheng", "C Xu"], "venue": "In Tools with Artificial Intelligence (ICTAI),", "citeRegEx": "11", "shortCiteRegEx": "11", "year": 2011}, {"title": "A comparison of event models for naive bayes text classification,", "author": ["A. McCallum", "K Nigam"], "venue": "In AAAI-98 workshop on learning for text categorization (Vol", "citeRegEx": "12", "shortCiteRegEx": "12", "year": 1998}, {"title": "On the naive bayes model for text categorization,", "author": ["S. Eyheramendy", "D.D. Lewis", "D Madigan"], "venue": "In 9th International Workshop on Artificial Intelligence and Statistics,", "citeRegEx": "13", "shortCiteRegEx": "13", "year": 2003}, {"title": "A comparison of event models for naive bayes text classification,", "author": ["MCCALLUM", "Andrew", "NIGAM", "Kamal"], "venue": "In : AAAI-98 workshop on learning for text categorization,p", "citeRegEx": "14", "shortCiteRegEx": "14", "year": 1998}], "referenceMentions": [{"referenceID": 0, "context": "This phenomenon presents the need to design a recommender system that best depicts the preferences of a user with regard to the most relevant information at possibly the shortest time [1], [2].", "startOffset": 189, "endOffset": 192}, {"referenceID": 1, "context": "In the recent past, many recommender systems that consider factors other than the accuracy-oriented ones and their variants have been proposed in literature [3], [4], [5], [6].", "startOffset": 157, "endOffset": 160}, {"referenceID": 2, "context": "In the recent past, many recommender systems that consider factors other than the accuracy-oriented ones and their variants have been proposed in literature [3], [4], [5], [6].", "startOffset": 162, "endOffset": 165}, {"referenceID": 3, "context": "In the recent past, many recommender systems that consider factors other than the accuracy-oriented ones and their variants have been proposed in literature [3], [4], [5], [6].", "startOffset": 167, "endOffset": 170}, {"referenceID": 4, "context": "In the recent past, many recommender systems that consider factors other than the accuracy-oriented ones and their variants have been proposed in literature [3], [4], [5], [6].", "startOffset": 172, "endOffset": 175}, {"referenceID": 5, "context": "However, in [7], McNee et al.", "startOffset": 12, "endOffset": 15}, {"referenceID": 6, "context": "[8] enhanced the diversity of recommendations by adopting the re-ranking approach with a greedy selection.", "startOffset": 0, "endOffset": 3}, {"referenceID": 7, "context": "In [9], Tuzhilin and Adamopoulos proposed a probabilistic neighborhood selection in collaborative filtering that directly generates diversified recommendation lists prior to overcoming the overspecialization issues in traditional recommendations.", "startOffset": 3, "endOffset": 6}, {"referenceID": 8, "context": "[10] proposed a novel approach of collaborative filtering whose goal is to select a small set of special users called star users.", "startOffset": 0, "endOffset": 4}, {"referenceID": 9, "context": "[11] proposed a variation of the traditional collaborative filtering approach that uses expert opinions from independent data set to compute the recommendations.", "startOffset": 0, "endOffset": 4}, {"referenceID": 10, "context": "The details of the Naive Bayes classifier are well summarized in [12], [13].", "startOffset": 65, "endOffset": 69}, {"referenceID": 11, "context": "The details of the Naive Bayes classifier are well summarized in [12], [13].", "startOffset": 71, "endOffset": 75}, {"referenceID": 12, "context": "We propose to employ a similar approach of the text-classification[14] discussed in the previous section to predicting movies\u2019 genres.", "startOffset": 66, "endOffset": 70}], "year": 2016, "abstractText": "This paper proposes a movie genreprediction based on multinomial probability model. To the best of our knowledge, this problem has not been addressed yet in the field of recommender system. The prediction of a movies genre has many practical applications including complementing the items categories given by experts and providing a surprise effect in the recommendations given to a user. We employ mulitnomial event model to estimate a likelihood of a movie given genre and the Bayes rule to evaluate the posterior probability of a genre given a movie. Experiments with the MovieLens dataset validate our approach. We achieved 70% prediction rate using only 15% of the whole set for training. Keywords\u2014Recommender system, category prediction, multinomial model, Naive Bayes classifier.", "creator": "LaTeX with hyperref package"}}}