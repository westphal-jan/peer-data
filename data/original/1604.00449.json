{"id": "1604.00449", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "2-Apr-2016", "title": "3D-R2N2: A Unified Approach for Single and Multi-view 3D Object Reconstruction", "abstract": "Inspired by the recent success of methods that employ shape priors to achieve robust 3D reconstructions, we propose a novel recurrent neural network architecture that we call the 3D Recurrent Reconstruction Neural Network (3D-R2N2). The network learns a mapping from images of objects to their underlying 3D shapes from a large collection of synthetic data. Our network takes in one or more images of an object instance from arbitrary viewpoints and outputs a reconstruction of the object in the form of a 3D occupancy grid. Unlike most of the previous works, our network does not require any image annotations or object class labels for training or testing. Our extensive experimental analysis shows that our reconstruction framework i) outperforms the state-of-the-art methods for single view reconstruction, and ii) enables the 3D reconstruction of objects in situations when traditional SFM/SLAM methods fail (because of lack of texture and/or wide baseline).", "histories": [["v1", "Sat, 2 Apr 2016 01:28:27 GMT  (8149kb,D)", "http://arxiv.org/abs/1604.00449v1", "Appendix can be found atthis http URL"]], "COMMENTS": "Appendix can be found atthis http URL", "reviews": [], "SUBJECTS": "cs.CV cs.AI", "authors": ["christopher b choy", "danfei xu", "junyoung gwak", "kevin chen", "silvio savarese"], "accepted": false, "id": "1604.00449"}, "pdf": {"name": "1604.00449.pdf", "metadata": {"source": "CRF", "title": "3D-R2N2: A Unified Approach for Single and Multi-view 3D Object Reconstruction", "authors": ["Christopher B. Choy", "Danfei Xu", "JunYoung Gwak", "Kevin Chen", "Silvio Savarese"], "emails": ["ssilvio}@stanford.edu"], "sections": [{"heading": null, "text": "Keywords: multi-view, reconstruction, recurrent neural network"}, {"heading": "1 Introduction", "text": "Rapid and automatic 3D object prototyping has become a game-changing innovation in many applications related to e-commerce, visualization, and architecture, to name a few. This trend has been boosted now that 3D printing is a democratized technology and 3D acquisition methods are accurate and efficient [2]. Moreover, the trend is also coupled with the diffusion of large scale repositories of 3D object models such as ShapeNet [1].\nMost of the state-of-the-art methods for 3D object reconstruction, however, are subject to a number of restrictions. Some restrictions are that: i) objects must be observed from a dense number of views; or equivalently, views must have a relatively small baseline. This is an issue when users wish to reconstruct the object from just a handful of views or ideally just one view (see Fig. 1(a)); ii) objects\u2019 appearances (or their reflectance functions) are expected to be Lambertian (i.e. non-reflective) and the albedos are supposed be non-uniform (i.e., rich of non-homogeneous textures).\n? indicates equal contribution.\nar X\niv :1\n60 4.\n00 44\n9v 1\n[ cs\n.C V\nThese restrictions stem from a number of key technical assumptions. One typical assumption is that features can be matched across views [3,4,5,6] as hypothesized by the majority of the methods based on SFM or SLAM [7,8]. It has been demonstrated (for instance see [9]) that if the viewpoints are separated by a large baseline, establishing (traditional) feature correspondences is extremely problematic due to local appearance changes or self-occlusions. Moreover, lack of texture on objects and specular reflections also make the feature matching problem very difficult [10,11].\nIn order to circumvent issues related to large baselines or non-Lambertian surfaces, 3D volumetric reconstruction methods such as space carving [12,13,14,15] and their probabilistic extensions [16] have become popular. These methods, however, assume that the objects are accurately segmented from the background or that the cameras are calibrated, which is not the case in many applications.\nA different philosophy is to assume that prior knowledge about the object appearance and shape is available. The benefit of using priors is that the ensuing reconstruction method is less reliant on finding accurate feature correspondences across views. Thus, shape prior-based methods can work with fewer images and with fewer assumptions on the object reflectance function as shown in [17,18]. The shape priors are typically encoded in the form of simple 3D primitives as demonstrated by early pioneering works [19,20] or learned from rich repositories of 3D CAD models [21,22,23], whereby the concept of fitting 3D models to images of faces was explored to a much larger extent [24,25,26]. Sophisticated mathematical formulations have also been introduced to adapt 3D shape models to observations with different degrees of supervision [27] and different regularization strategies [28].\nThis paper is in the same spirit as the methods discussed above, but with a key difference. Instead of trying to match a suitable 3D shape prior to the observation of the object and possibly adapt to it, we use deep convolutional neural networks to learn a mapping from observations to their underlying 3D shapes of objects from a large collection of training data. Inspired by early works that used machine learning to learn a 2D-to-3D mapping for scene understanding [29,30], data driven approaches have been recently proposed to solve the daunting problem of recovering the shape of an object from just a single image [31,32] for a given number of object categories. In our approach, however, we leverage for the first time the ability of deep neural networks to automatically learn, in a mere end-to-end fashion, the appropriate intermediate representations from data to recover approximated 3D object reconstructions from as few as a single image with minimal supervision.\nInspired by the success of Long Short-Term Memory (LSTM) [33] networks [34,35] as well as recent progress in single-view 3D reconstruction using Convolutional Neural Networks [36,37], we propose a novel architecture that we call the 3D Recurrent Reconstruction Neural Network (3D-R2N2). The network takes in one or more images of an object instance from different viewpoints and outputs a reconstruction of the object in the form of a 3D occupancy grid, as illustrated in Fig. 1(b). Note that in both training and testing, our network does not require\nany object class labels or image annotations (i.e., no segmentations, keypoints, viewpoint labels, or class labels are needed).\nOne of the key attributes of the 3D-R2N2 is that it can selectively update hidden representations by controlling input gates and forget gates. In training, this mechanism allows the network to adaptively and consistently learn a suitable 3D representation of an object as (potentially conflicting) information from different viewpoints becomes available (see Fig. 1).\nThe main contributions of this paper are summarized as follows:\n\u2013 We propose an extension of the standard LSTM framework that we call the 3D Recurrent Reconstruction Neural Network which is suitable for accommodating multi-view image feeds in a principled manner. \u2013 We unify single- and multi-view 3D reconstruction in a single framework. \u2013 Our approach requires minimal supervision in training and testing (just\nbounding boxes, but no segmentation, keypoints, viewpoint labels, camera calibration, or class labels are needed). \u2013 Our extensive experimental analysis shows that our reconstruction framework outperforms the state-of-the-art method for single-view reconstruction [32]. \u2013 Our network enables the 3D reconstruction of objects in situations when traditional SFM/SLAM methods fail (because of lack of texture or wide baselines).\nAn overview of our reconstruction network is shown in Fig. 1(b). The rest of this paper is organized as follows. In Section 2, we give a brief overview of LSTM and GRU networks. In Section 3, we introduce the 3D Recurrent Reconstruction Neural Network architecture. In Section 4, we discuss how we generate training data and give details of the training process. Finally, we present test results of our approach on various datasets including PASCAL 3D and ShapeNet in Section 5."}, {"heading": "2 Recurrent Neural Network", "text": "In this section we provide a brief overview of Long Short-Term Memory (LSTM) networks and a variation of the LSTM called Gated Recurrent Units (GRU).\nLong Short-Term Memory Unit. One of the most successful implementations of the hidden states of an RNN is the Long Short Term Memory (LSTM) unit [33]. An LSTM unit explicitly controls the flow from input to output, allowing the network to overcome the vanishing gradient problem [33,38]. Specifically, an LSTM unit consists of four components: memory units (a memory cell and a hidden state), and three gates which control the flow of information from the input to the hidden state (input gate), from the hidden state to the output (output gate), and from the previous hidden state to the current hidden state (forget gate). More formally, at time step t when a new input xt is received, the operation of an LSTM unit can be expressed as:\nit = \u03c3(Wixt + Uiht\u22121 + bi) (1)\nft = \u03c3(Wfxt + Ufht\u22121 + bf ) (2)\not = \u03c3(Woxt + Uoht\u22121 + bo) (3)\nst = ft st\u22121 + it tanh(Wsxt + Usht\u22121 + bs) (4) ht = ot tanh(st) (5)\nit, ft, ot refer to the input gate, the output gate, and the forget gate, respectively. st and ht refer to the memory cell and the hidden state, respectively. We use to denote element-wise multiplication and the subscript t to refer to an activation at time t. W(\u00b7), U(\u00b7) are matrices that transform the current input xt and the previous hidden state ht\u22121, respectively, and b(\u00b7) represents the biases.\nGated Recurrent Unit. A variation of the LSTM unit is the Gated Recurrent Unit (GRU) proposed by Cho et al. [39]. An advantage of the GRU is that there are fewer computations compared to the standard LSTM. In a GRU, an update gate controls both the input and forget gates. Another difference is that a reset gate is applied before the nonlinear transformation. More formally,\nut = \u03c3(WuT xt + Uu \u2217 ht\u22121 + bf ) (6) rt = \u03c3(WiT xt + Ui \u2217 ht\u22121 + bi) (7) ht = (1\u2212 ut) ht\u22121 + ut tanh(Whxt + Uh(rt ht\u22121) + bh) (8)\nut, rt, ht represent the update gate, the reset gate, and the hidden state respectively. We follow the same notations as LSTM for matrices and biases."}, {"heading": "3 3D Recurrent Reconstruction Neural Network", "text": "In this section, we introduce a novel architecture named the 3D Recurrent Reconstruction Network (3D-R2N2), which builds upon the standard LSTM and GRU. The goal of the network is to perform both single- and multi-view 3D\nreconstructions. The main idea is to leverage the power of LSTM to retain previous observations and incrementally refine the output reconstruction as more observations become available.\nThe network is made up of three components: a 2D Convolutional Neural Network (2D-CNN), a novel architecture named 3D Convolutional LSTM (3DLSTM), and a 3D Deconvolutional Neural Network (3D-DCNN) (see Fig. 2). Given one or more images of an object from arbitrary viewpoints, the 2D-CNN first encodes each input image x into low dimensional features T (x) (Section 3.1). Then, given the encoded input, a set of newly proposed 3D Convolutional LSTM (3D-LSTM) units (Section 3.2) either selectively update their cell states or retain the states by closing the input gate. Finally, the 3D-DCNN decodes the hidden states of the LSTM units and generates a 3D probabilistic voxel reconstruction (Section 3.3).\nThe main advantage of using an LSTM-based network comes from its ability to effectively handle object self-occlusions when multiple views are fed to the network. The network selectively updates the memory cells that correspond to the visible parts of the object. If a subsequent view shows parts that were previously self-occluded and mismatch the prediction, the network would update the LSTM states for the previously occluded sections but retain the states of the other parts (Fig. 2)."}, {"heading": "3.1 Encoder: 2D-CNN", "text": "We use CNNs to encode images into features. We designed two different 2D-CNN encoders as shown in Fig. 2: A standard feed-forward CNN and a deep residual variation of it. The first network consists of standard convolution layers, pooling layers, and leaky rectified linear units followed by a fully-connected layer. Motivated by a recent study [40], we also created a deep residual variation of the first network and report the performance of this variation in Section 5.2. According to the study, adding residual connections between standard convolu-\ntion layers effectively improves and speeds up the optimization process for very deep networks. The deep residual variation of the encoder network has identity mapping connections after every 2 convolution layers except for the 4th pair. To match the number of channels after convolutions, we use a 1\u00d7 1 convolution for residual connections. The encoder output is then flattened and passed to a fully connected layer which compresses the output into a 1024 dimensional feature vector."}, {"heading": "3.2 Recurrence: 3D Convolutional LSTM", "text": "The core part of our 3D-R2N2 is a recurrence module that allows the network to retain what it has seen and to update the memory when it sees a new image. A naive approach would be to use a vanilla LSTM network. However, predicting such a large output space (32\u00d7 32\u00d7 32) would be a very difficult task without any regularization. We propose a new architecture that we call 3D-Convolutional LSTM (3D-LSTM). The network is made up of a set of structured LSTM units with restricted connections. The 3D-LSTM units are spatially distributed in a 3D grid structure, with each unit responsible for reconstructing a particular part of the final output (see Fig. 3(a)). Inside the 3D grid, there are N\u00d7N\u00d7N 3D-LSTM units where N is the spatial resolution of the 3D-LSTM grid. Each 3D-LSTM unit, indexed (i, j, k), has an independent hidden state ht,(i,j,k) \u2208 RNh . Following the same notation as in Section 2 but with ft, it, st, ht as 4D tensors (N\u00d7N\u00d7N vectors of size Nh), the equations governing the 3D-LSTM grid are\nft = \u03c3(WfT (xt) + Uf \u2217 ht\u22121 + bf ) (9) it = \u03c3(WiT (xt) + Ui \u2217 ht\u22121 + bi) (10) st = ft st\u22121 + it tanh(WsT (xt) + Us \u2217 ht\u22121 + bs) (11) ht = tanh(st) (12)\nWe denote the convolution operation as \u2217. In our implementation, we use N = 4. Unlike a standard LSTM, we do not have output gates since we only extract the output at the end. By removing redundant output gates, we can reduce the number of parameters.\nIntuitively, this configuration forces a 3D-LSTM unit to handle the mismatch between a particular region of the predicted reconstruction and the ground truth model such that each unit learns to reconstruct one part of the voxel space instead of contributing to the reconstruction of the entire space. This configuration also endows the network with a sense of locality so that it can selectively update its prediction about the previously occluded part of the object. We visualize such behavior in the appendix.\nMoreover, a 3D Convolutional LSTM unit restricts the connections of its hidden state to its spatial neighbors. For vanilla LSTMs, all elements in the hidden layer ht\u22121 affect the current hidden state ht, whereas a spatially structured 3D Convolutional LSTM only allows its hidden states ht,(i,j,k) to be affected by its neighboring 3D-LSTM units for all i, j, and k. More specifically, the neighboring connections are defined by the convolution kernel size. For instance, if we use a 3\u00d73\u00d73 kernel, an LSTM unit is only affected by its immediate neighbors. This way, the units can share weights and the network can be further regularized.\nIn Section 2, we also described the Gated Recurrent Unit (GRU) as a variation of the LSTM unit. We created a variation of the 3D-Convolutional LSTM using Gated Recurrent Unit (GRU). More formally, a GRU-based recurrence module can be expressed as\nut = \u03c3(WfxT (xt) + Uf \u2217 ht\u22121 + bf ) (13) rt = \u03c3(WixT (xt) + Ui \u2217 ht\u22121 + bi) (14) ht = (1\u2212 ut) ht\u22121 + ut tanh(WhT (xt) + Uh \u2217 (rt ht\u22121) + bh) (15)"}, {"heading": "3.3 Decoder: 3D Deconvolutional Neural Network", "text": "After receiving an input image sequence x1, x2, \u00b7 \u00b7 \u00b7 , xT , the 3D-LSTM passes the hidden state hT to a decoder, which increases the hidden state resolution by applying 3D convolutions, non-linearities, and 3D unpooling [41] until it reaches the target output resolution.\nAs with the encoders, we propose a simple decoder network with 5 convolutions and a deep residual version with 4 residual connections followed by a final convolution. After the last layer where the activation reaches the target output resolution, we convert the final activation V \u2208 RNvox\u00d7Nvox\u00d7Nvox\u00d72 to the occupancy probability p(i,j,k) of the voxel cell at (i, j, k) using voxel-wise softmax."}, {"heading": "3.4 Loss: 3D Voxel-wise Softmax", "text": "The loss function of the network is defined as the sum of voxel-wise crossentropy. Let the final output at each voxel (i, j, k) be Bernoulli distributions [1\u2212 p(i,j,k), p(i,j,k)], where the dependency on input X = {xt}t\u2208{1,...,T} is omitted, and let the corresponding ground truth occupancy be y(i,j,k) \u2208 {0, 1}, then\nL(X , y) = \u2211 i,j,k y(i,j,k) log(p(i,j,k)) + (1\u2212 y(i,j,k)) log(1\u2212 p(i,j,k)) (16)"}, {"heading": "4 Implementation", "text": "Data augmentation: In training, we used 3D CAD models for generating input images and ground truth voxel occupancy maps. We first rendered the CAD models with a transparent background and then augmented the input images with random crops from the PASCAL VOC 2012 dataset [42]. Also, we tinted the color of the models and randomly translated the images. Note that all viewpoints were sampled randomly. Training: In training the network, we used variable length inputs ranging from one image to an arbitrary number of images. More specifically, the input length (number of views) for each training example within a single mini-batch was kept constant, but the input length of training examples across different mini-batches varied randomly. This enabled the network to perform both single- and multiview reconstruction. During training, we computed the loss only at the end of an input sequence in order to save both computational power and memory. On the other hand, during test time we could access the intermediate reconstructions at each time step by extracting the hidden states of the LSTM units. Network: The input image size was set to 127 \u00d7 127. The output voxelized reconstruction was of size 32 \u00d7 32 \u00d7 32. The networks used in the experiments were trained for 60, 000 iterations with a batch size of 36 except for [Res3D-GRU3] (See Table 1), which needed a batch size of 24 to fit in an NVIDIA Titan X GPU. For the LeakyReLU layers, the slope of the leak was set to 0.1 throughout the network. For deconvolution, we followed the unpooling scheme presented in [41]. We used Theano [43] to implement our network and used Adam [44] for the SGD update rule."}, {"heading": "5 Experiments", "text": "In this section, we validate and demonstrate the capability of our approach with several experiments using the datasets described in Section 5.1. First, we show the results of different variations of the 3D-R2N2 (Section 5.2). Next, we compare the performance of our network on the PASCAL 3D [45] dataset with that of a state-of-the-art method by Kar et al. [32] for single-view real-world image reconstruction (Section 5.3). Then we show the network\u2019s ability to perform multi-view reconstruction on the ShapeNet dataset [1] and the Online Products dataset [46] (Section 5.4, Section 5.5). Finally, we compare our approach with a Multi View Stereo method on reconstructing objects with various texture levels and viewpoint sparsity (Section 5.6)."}, {"heading": "5.1 Dataset", "text": "ShapeNet: The ShapeNet dataset is a collection of 3D CAD models that are organized according to the WordNet hierarchy. We used a subset of the ShapeNet dataset which consists of 50,000 models and 13 major categories (see Table 5(c) for a complete list). We split the dataset into training and testing sets, with 4/5\nfor training and the remaining 1/5 for testing. We refer to these two datasets as the ShapeNet training set and testing set throughout the experiments section. PASCAL 3D: The PASCAL 3D dataset is composed of PASCAL 2012 detection images augmented with 3D CAD model alignment [45]. Online Products: The dataset [46] contains images of 23,000 items sold online. MVS and SFM methods fail on these images due to ultra-wide baselines. Since the dataset does not have the ground-truth 3D CAD models, we only used the dataset for qualitative evaluation. MVS CAD Models: To compare our method with a Multi View Stereo method [47], we collected 4 different categories of high-quality CAD models. All CAD models have texture-rich surfaces and were placed on top of a texture-rich paper to aid the camera localization of the MVS method.\nMetrics: We used two metrics in evaluating the reconstruction quality. The primary metric was the voxel Intersection-over-Union (IoU) between a 3D voxel reconstruction and its ground truth voxelized model. More formally,\nIoU = \u2211 i,j,k [ I(p(i,j,k) > t)I(y(i,j,k)) ] / \u2211 i,j,k [ I ( I(p(i,j,k) > t) + I(y(i,j,k)) )] (17)\nwhere variables are defined in Section 3.4. I(\u00b7) is an indicator function and t is a voxelization threshold. Higher IoU values indicate better reconstructions. We also report the cross-entropy loss (Section 3.4) as a secondary metric. Lower loss values indicate higher confidence reconstructions."}, {"heading": "5.2 Network Structures Comparison", "text": "We tested 5 variations of our 3D-R2N2 as described in Section 3. The first four networks are based on the standard feed-forward CNN (top Fig. 2) and the fifth network is the residual network (bottom Fig. 2). For the first four networks, we used either GRU or LSTM units and and varied the convolution kernel to be either 1 \u00d7 1 \u00d7 1 [3D-LSTM/GRU-3] or 3 \u00d7 3 \u00d7 3 [3D-LSTM/GRU-3]. The residual network used GRU units and 3 \u00d7 3 \u00d7 3 convolutions [Res3D-GRU-3]. These networks were trained on the ShapeNet training set and tested on the ShapeNet testing set. We used 5 views in the experiment. Table 1 shows the results. We observe that 1) the GRU-based networks outperform the LSTMbased networks, 2) that the networks with neighboring recurrent unit connections (3 \u00d7 3 \u00d7 3 convolutions) outperform the networks that have no neighboring recurrent unit connection (1\u00d7 1\u00d7 1 convolutions), and 3) that the deep residual network variation further boosts the reconstruction performance."}, {"heading": "5.3 Single Real-World Image Reconstruction", "text": "We evaluated the performance of our network in single-view reconstruction using real-world images, comparing the performance with that of a recent method by Kar et al. [32]. To make a quantitative comparison, we used images from the PASCAL VOC 2012 dataset [42] and its corresponding 3D models from the PASCAL 3D+ dataset [45]. We ran the experiments with the same configuration as Kar et al. except that we allow the Kar et al. method to have ground-truth object segmentation masks and keypoint labels as additional inputs for both training and testing.\nTraining. We fine-tuned a network trained on the ShapeNet dataset with PASCAL 3D+. We used the PASCAL 3D+ validation set to find hyperparameters such as the number of fine-tuning iterations and the voxelization threshold.\nResults. As shown in Table 2, our approach outperforms the method of Kar et al. [32] in every category. However, we observe that our network has some difficulties reconstructing thin legs of chairs. Moreover, the network often confuses thin flat panels with thick CRT screens when given a frontal view of the monitor. Yet, our approach demonstrates a competitive quantitative performance. For the qualitative results and comparisons, please see Fig. 4.\nAside from better performance, our network has several advantages over Kar et al. [32]. First, we do not need to train and test per-category. Our network\ntrains and reconstructs without knowing the object category. Second, our network does not require object segmentation masks and keypoint labels as additional inputs. Kar et al. does demonstrate the possibility of testing on a wild unlabeled image by estimating the segmentation and keypoints. However, our network outperforms their method tested with ground truth labels."}, {"heading": "5.4 Multi-view Reconstruction Evaluation", "text": "In this section, we report a quantitative evaluation of our network\u2019s performance in multi-view reconstruction on the ShapeNet testing set.\nExperiment setup. We used the [Res3D-GRU-3] network in this experiment. We evaluated the network with the ShapeNet testing set. The testing set consisted of 8725 models in 13 major categories. We rendered five random views for each model, and we applied a uniform colored background to the image. We report both softmax loss and intersection over union(IoU) with a voxelization threshold of 0.4 between the predicted and the ground truth voxel models.\nOverall results. We first investigate the quality of the reconstructed models under different numbers of views. Fig. 5(a) and (b) show that reconstruction quality improves as the number of views increases. The fact that the marginal gain decreases accords with our assumption that each additional view provides less information since two random views are very likely to have partial overlap.\nPer-category results. We also report the reconstruction IoUs on each of the 13 major categories in the testing set in Table 5. We observed that the reconstruction quality improved for every category as the number of views increased, but the quality varied depending on the category. Cabinets, cars, and speakers had the highest reconstruction performance since the objects are bulky-shaped and have less (shape) variance compared to other classes. The network performed worse on the lamp, bench, and table categories. These classes have much higher shape variation than the other classes. For example, a lamp can have a slim arm or a large lampshade which may move around, and chairs and tables have various types of supporting structures.\nQualitative results. Fig. 6(a) shows some sample reconstructions from the ShapeNet testing set. One exemplary instance is the truck shown in row 2. In the initial view, only the front part of the truck is visible. The network took the safest guess that the object is a sedan, which is the most common shape in the car category. Then the network produced a more accurate reconstruction of the truck after seeing more views. All other instances show similar improvements as the network sees more views of the objects. Fig. 6(b) shows two failure cases."}, {"heading": "5.5 Reconstructing Real World Images", "text": "In this experiment, we tested our network on the Online Products dataset for qualitative evaluation. Images that were not square-shaped were padded with white pixels.\nFig. 6(c) shows some sample reconstructions. The result shows that the network is capable of reconstructing real world objects using only synthetic data as training samples. It also demonstrates that the network improves the reconstructions after seeing additional views of the objects. One exemplary instance is the reconstruction of couch as shown in row 1. The initial side view of the couch led the network to believe that it was a one-seater sofa, but after seeing the front of the couch, the network immediately refined its reconstruction to reflect the observation. Similar behaviors are also shown in other samples. Some failure cases are shown in Fig.6(d)."}, {"heading": "5.6 Multi View Stereo(MVS) vs. 3D-R2N2", "text": "In this experiment, we compare our approach with a MVS method on reconstructing objects that are of various texture levels with different number of views. MVS methods are limited by the accuracy of feature correspondences across different views. Therefore, they tend to fail reconstructing textureless objects or images from sparsely positioned camera viewpoints. In contrast, our method does not require accurate feature correspondences or adjacent camera viewpoints. Dataset: We used high-quality CAD models of 4 different categories and augmented their texture strengths to low, medium and high by manually editing their textures. We then rendered the models from viewpoints with uniformly sampled azimuth angles. Please refer to Fig. 7 for some samples of rendered\nmodels across different viewpoints and texture strengths. For each texture level and number of views configuration, both the MVS method and our network took identical sets of images as inputs.\nExperiment setup. We used a Patch-Match [48]-based off-the-shelf implementation [49] as the MVS method. The MVS method takes images along with their camera positions estimated by Global SFM [50] and outputs the reconstructed model. For our network, we used the [Res3D-GRU-3] network trained with at most 5 views. In order to cope with more views, we fine-tuned our network with samples that have a maximum of 24 views for 5000 iterations using the ShapeNet training set. We quantified the quality of the reconstructions using IoU of the voxels. The network was voxelized with the occupancy probability threshold set to 0.1. The mesh reconstructed from the MVS method was voxelized into a 32\u00d7 32\u00d7 32 grid for comparison. Results. The results are shown in Fig. 8 (a) and (b). We observed 1) that our model worked with as few as one view, whereas the MVS method failed completely when the number of views was less than 20 (IoU=0), and 2) that our model worked regardless of the objects\u2019 texture level, whereas the MVS method frequently failed to reconstruct objects that had low texture level even when a large number of views were provided. This shows that our method works in situations where MVS methods would perform poorly or completely fail. Note that the reconstruction performance of our method decreased after the number\nof views passed 24. This is because we only fine-tuned our network on samples with a maximum of 24 views.\nWe also discovered some limitations of our method. First, our method could not reconstruct as many details as the MVS method did when given more than 30 different views of the model. Second, our method performed worse in reconstructing objects with high texture levels. This is largely because most models in the ShapeNet training set have low texture level."}, {"heading": "6 Conclusion", "text": "In this work, we proposed a novel architecture that unifies single- and multiview 3D reconstruction into a single framework. Even though our network can take variable length inputs, we demonstrated that it outperforms the method of Kar et al. [32] in single-view reconstruction using real-world images. We further tested the network\u2019s ability to perform multi-view reconstruction on the ShapeNet dataset [1] and the Online Products dataset [46], which showed that the network is able to incrementally improve its reconstructions as it sees more views of an object. Lastly, we analyzed the network\u2019s performance on multi-view reconstruction, finding that our method can produce accurate reconstructions when techniques such as MVS fail. In summary, our network does not require a minimum number of input images in order to produce a plausible reconstruction and is able to overcome past challenges of dealing with images which have insufficient texture or wide baseline viewpoints."}, {"heading": "7 Acknowledgements", "text": "We acknowledge the support of NSF CAREER grant N.1054127 and Toyota Award #122282. We also thank the Korea Foundation for Advanced Studies and NSF GRFP for their support."}], "references": [{"title": "ShapeNet: An Information-Rich 3D Model Repository", "author": ["A.X. Chang", "T. Funkhouser", "L. Guibas", "P. Hanrahan", "Q. Huang", "Z. Li", "S. Savarese", "M. Savva", "S. Song", "H. Su", "J. Xiao", "L. Yi", "F. Yu"], "venue": "Technical report, Stanford University \u2014 Princeton University \u2014 Toyota Technological Institute at Chicago", "citeRegEx": "1", "shortCiteRegEx": null, "year": 2015}, {"title": "A large dataset of object scans", "author": ["S. Choi", "Q.Y. Zhou", "S. Miller", "V. Koltun"], "venue": "arXiv preprint arXiv:1602.02481", "citeRegEx": "2", "shortCiteRegEx": null, "year": 2016}, {"title": "Automatic 3d model acquisition and generation of new images from video sequences", "author": ["A. Fitzgibbon", "A. Zisserman"], "venue": "Signal Processing Conference (EUSIPCO 1998), 9th European, IEEE", "citeRegEx": "3", "shortCiteRegEx": null, "year": 1998}, {"title": "A quasi-dense approach to surface reconstruction from uncalibrated images", "author": ["M. Lhuillier", "L. Quan"], "venue": "Pattern Analysis and Machine Intelligence, IEEE Transactions on 27(3)", "citeRegEx": "4", "shortCiteRegEx": null, "year": 2005}, {"title": "Building rome in a day", "author": ["S. Agarwal", "N. Snavely", "I. Simon", "S.M. Seitz", "R. Szeliski"], "venue": "Computer Vision, 2009 IEEE 12th International Conference on, IEEE", "citeRegEx": "5", "shortCiteRegEx": null, "year": 2009}, {"title": "Lsd-slam: Large-scale direct monocular slam", "author": ["J. Engel", "T. Sch\u00f6ps", "D. Cremers"], "venue": "Computer Vision\u2013ECCV 2014. Springer", "citeRegEx": "6", "shortCiteRegEx": null, "year": 2014}, {"title": "The structure-from-motion reconstruction pipeline\u2013a survey with focus on short image sequences", "author": ["K. H\u00e4ming", "G. Peters"], "venue": "Kybernetika 46(5)", "citeRegEx": "7", "shortCiteRegEx": null, "year": 2010}, {"title": "Visual simultaneous localization and mapping: a survey", "author": ["J. Fuentes-Pacheco", "J. Ruiz-Ascencio", "J.M. Rend\u00f3n-Mancha"], "venue": "Artificial Intelligence Review 43(1)", "citeRegEx": "8", "shortCiteRegEx": null, "year": 2015}, {"title": "Distinctive image features from scale-invariant keypoints", "author": ["D.G. Lowe"], "venue": "International journal of computer vision 60(2)", "citeRegEx": "9", "shortCiteRegEx": null, "year": 2004}, {"title": "Ordinal measures for image correspondence", "author": ["D.N. Bhat", "S.K. Nayar"], "venue": "Pattern Analysis and Machine Intelligence, IEEE Transactions on 20(4)", "citeRegEx": "10", "shortCiteRegEx": null, "year": 1998}, {"title": "Reconstruction of textureless regions using structure from motion and image-based interpolation", "author": ["P. Saponaro", "S. Sorensen", "S. Rhein", "A.R. Mahoney", "C. Kambhamettu"], "venue": "Image Processing (ICIP), 2014 IEEE International Conference on, IEEE", "citeRegEx": "11", "shortCiteRegEx": null, "year": 2014}, {"title": "Photorealistic scene reconstruction by voxel coloring", "author": ["S.M. Seitz", "C.R. Dyer"], "venue": "International Journal of Computer Vision 35(2)", "citeRegEx": "12", "shortCiteRegEx": null, "year": 1999}, {"title": "A theory of shape by space carving", "author": ["K.N. Kutulakos", "S.M. Seitz"], "venue": "International Journal of Computer Vision 38(3)", "citeRegEx": "13", "shortCiteRegEx": null, "year": 2000}, {"title": "Methods for volumetric reconstruction of visual scenes", "author": ["Gregory G Slabaugh", "T.M. W Bruce Culbertson", "M.R. Stevens", "R.W. Schafer"], "venue": "International Journal of Computer Vision 57(3)", "citeRegEx": "14", "shortCiteRegEx": null, "year": 2004}, {"title": "Towards robust voxel-coloring: Handling camera calibration errors and partial emptiness of surface voxels", "author": ["Z. Anwar", "F. Ferrie"], "venue": "Proceedings of the 18th International Conference on Pattern Recognition - Volume 01. ICPR \u201906, Washington, DC, USA, IEEE Computer Society", "citeRegEx": "15", "shortCiteRegEx": null, "year": 2006}, {"title": "A probabilistic framework for space carving", "author": ["A. Broadhurst", "T.W. Drummond", "R. Cipolla"], "venue": "Computer Vision, 2001. ICCV 2001. Proceedings. Eighth IEEE International Conference on. Volume 1., IEEE", "citeRegEx": "16", "shortCiteRegEx": null, "year": 2001}, {"title": "Dense reconstruction using 3d object shape priors", "author": ["A. Dame", "V.A. Prisacariu", "C.Y. Ren", "I. Reid"], "venue": "Computer Vision and Pattern Recognition (CVPR), 2013 IEEE Conference on.", "citeRegEx": "17", "shortCiteRegEx": null, "year": 2013}, {"title": "Dense object reconstruction using semantic priors", "author": ["Y. Bao", "M. chandraker", "Y. Lin", "S. Savarese"], "venue": "Proceedings of the IEEE International Conference on Computer Vision and Pattern Recognition.", "citeRegEx": "18", "shortCiteRegEx": null, "year": 2013}, {"title": "Machine perception of three-dimensional solids", "author": ["G.R. Lawrence"], "venue": "Ph. D. Thesis", "citeRegEx": "19", "shortCiteRegEx": null, "year": 1963}, {"title": "Description and recognition of curved objects", "author": ["R. Nevatia", "T.O. Binford"], "venue": "Artificial Intelligence 8(1)", "citeRegEx": "20", "shortCiteRegEx": null, "year": 1977}, {"title": "Detailed 3d representations for object modeling and recognition, TPAMI", "author": ["M.Z. Zia", "M. Stark", "B. Schiele", "K. Schindler"], "venue": null, "citeRegEx": "21", "shortCiteRegEx": "21", "year": 2013}, {"title": "Completing 3d object shape from one depth image", "author": ["J. Rock", "T. Gupta", "J. Thorsen", "J. Gwak", "D. Shin", "D. Hoiem"], "venue": "Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition.", "citeRegEx": "22", "shortCiteRegEx": null, "year": 2015}, {"title": "Enriching object detection with 2d-3d registration and continuous viewpoint estimation", "author": ["C. Bongsoo Choy", "M. Stark", "S. Corbett-Davies", "S. Savarese"], "venue": "The IEEE Conference on Computer Vision and Pattern Recognition (CVPR).", "citeRegEx": "23", "shortCiteRegEx": null, "year": 2015}, {"title": "Face recognition based on fitting a 3d morphable model", "author": ["V. Blanz", "T. Vetter"], "venue": "Pattern Analysis and Machine Intelligence, IEEE Transactions on 25(9)", "citeRegEx": "24", "shortCiteRegEx": null, "year": 2003}, {"title": "2d vs", "author": ["I. Matthews", "J. Xiao", "S. Baker"], "venue": "3d deformable face models: Representational power, construction, and real-time fitting. International journal of computer vision 75(1)", "citeRegEx": "25", "shortCiteRegEx": null, "year": 2007}, {"title": "3d face reconstruction from a single image using a single reference face shape", "author": ["I. Kemelmacher-Shlizerman", "R. Basri"], "venue": "Pattern Analysis and Machine Intelligence, IEEE Transactions on 33(2)", "citeRegEx": "26", "shortCiteRegEx": null, "year": 2011}, {"title": "Simultaneous monocular 2d segmentation, 3d pose recovery and 3d reconstruction", "author": ["V.A. Prisacariu", "A.V. Segal", "I. Reid"], "venue": "Computer Vision\u2013ACCV 2012. Springer", "citeRegEx": "27", "shortCiteRegEx": null, "year": 2012}, {"title": "A nonrigid kernel-based framework for 2d-3d pose estimation and 2d image segmentation", "author": ["R. Sandhu", "S. Dambreville", "A. Yezzi", "A. Tannenbaum"], "venue": "Pattern Analysis and Machine Intelligence, IEEE Transactions on 33(6)", "citeRegEx": "28", "shortCiteRegEx": null, "year": 2011}, {"title": "Make3d: Learning 3d scene structure from a single still image", "author": ["A. Saxena", "M. Sun", "A.Y. Ng"], "venue": "IEEE Trans. Pattern Anal. Mach. Intell. 31(5)", "citeRegEx": "29", "shortCiteRegEx": null, "year": 2009}, {"title": "Automatic photo pop-up", "author": ["D. Hoiem", "A.A. Efros", "M. Hebert"], "venue": "ACM transactions on graphics (TOG) 24(3)", "citeRegEx": "30", "shortCiteRegEx": null, "year": 2005}, {"title": "Reconstructing pascal voc", "author": ["S. Vicente", "J. Carreira", "L. Agapito", "J. Batista"], "venue": "The IEEE Conference on Computer Vision and Pattern Recognition (CVPR).", "citeRegEx": "31", "shortCiteRegEx": null, "year": 2014}, {"title": "Category-specific object reconstruction from a single image", "author": ["A. Kar", "S. Tulsiani", "J. Carreira", "J. Malik"], "venue": "Computer Vision and Pattern Recognition (CVPR), 2015 IEEE Conference on, IEEE", "citeRegEx": "32", "shortCiteRegEx": null, "year": 2015}, {"title": "Long short-term memory", "author": ["S. Hochreiter", "J. Schmidhuber"], "venue": "Neural Comput. 9(8)", "citeRegEx": "33", "shortCiteRegEx": null, "year": 1997}, {"title": "Lstm neural networks for language modeling", "author": ["M. Sundermeyer", "R. Schl\u00fcter", "H. Ney"], "venue": "INTERSPEECH.", "citeRegEx": "34", "shortCiteRegEx": null, "year": 2012}, {"title": "Sequence to sequence learning with neural networks", "author": ["I. Sutskever", "O. Vinyals", "Q.V. Le"], "venue": "Advances in neural information processing systems.", "citeRegEx": "35", "shortCiteRegEx": null, "year": 2014}, {"title": "Depth map prediction from a single image using a multi-scale deep network", "author": ["D. Eigen", "C. Puhrsch", "R. Fergus"], "venue": "Advances in Neural Information Processing Systems 27.", "citeRegEx": "36", "shortCiteRegEx": null, "year": 2014}, {"title": "Deep convolutional neural fields for depth estimation from a single image", "author": ["F. Liu", "C. Shen", "G. Lin"], "venue": "Proc. IEEE Conf. Computer Vision and Pattern Recognition.", "citeRegEx": "37", "shortCiteRegEx": null, "year": 2015}, {"title": "Learning long-term dependencies with gradient descent is difficult", "author": ["Y. Bengio", "P. Simard", "P. Frasconi"], "venue": "IEEE Transactions on Neural Networks 5(2)", "citeRegEx": "38", "shortCiteRegEx": null, "year": 1994}, {"title": "Learning Phrase Representations using RNN Encoder-Decoder for Statistical Machine Translation", "author": ["K. Cho", "B. van Merrienboer", "C. Gulcehre", "D. Bahdanau", "F. Bougares", "H. Schwenk", "Y. Bengio"], "venue": "ArXiv e-prints", "citeRegEx": "39", "shortCiteRegEx": null, "year": 2014}, {"title": "Deep Residual Learning for Image Recognition", "author": ["K. He", "X. Zhang", "S. Ren", "J. Sun"], "venue": "ArXiv e-prints", "citeRegEx": "40", "shortCiteRegEx": null, "year": 2015}, {"title": "Learning to generate chairs with convolutional neural networks", "author": ["A.Dosovitskiy", "J.T.Springenberg", "T.Brox"], "venue": "IEEE International Conference on Computer Vision and Pattern Recognition (CVPR).", "citeRegEx": "41", "shortCiteRegEx": null, "year": 2015}, {"title": "The pascal visual object classes challenge", "author": ["M. Everingham", "L. Van Gool", "C. Williams", "J. Winn", "A. Zisserman"], "venue": null, "citeRegEx": "42", "shortCiteRegEx": "42", "year": 2012}, {"title": "Theano: a CPU and GPU math expression compiler", "author": ["J. Bergstra", "O. Breuleux", "F. Bastien", "P. Lamblin", "R. Pascanu", "G. Desjardins", "J. Turian", "D. Warde-Farley", "Y. Bengio"], "venue": "Proceedings of the Python for Scientific Computing Conference (SciPy).", "citeRegEx": "43", "shortCiteRegEx": null, "year": 2010}, {"title": "Adam: A Method for Stochastic Optimization", "author": ["D. Kingma", "J. Ba"], "venue": "ArXiv e-prints", "citeRegEx": "44", "shortCiteRegEx": null, "year": 2014}, {"title": "Beyond pascal: A benchmark for 3d object detection in the wild", "author": ["Y. Xiang", "R. Mottaghi", "S. Savarese"], "venue": "Applications of Computer Vision (WACV), 2014 IEEE Winter Conference on, IEEE", "citeRegEx": "45", "shortCiteRegEx": null, "year": 2014}, {"title": "Deep metric learning via lifted structured feature embedding", "author": ["H.O. Song", "Y. Xiang", "S. Jegelka", "S. Savarese"], "venue": "ArXiv e-prints", "citeRegEx": "46", "shortCiteRegEx": null, "year": 2015}, {"title": "Patchmatch: A randomized correspondence algorithm for structural image editing", "author": ["C. Barnes", "E. Shechtman", "A. Finkelstein", "D. Goldman"], "venue": "ACM Transactions on Graphics-TOG 28(3)", "citeRegEx": "48", "shortCiteRegEx": null, "year": 2009}, {"title": "Global fusion of relative motions for robust, accurate and scalable structure from motion", "author": ["P. Moulon", "P. Monasse", "R. Marlet"], "venue": "Proceedings of the IEEE International Conference on Computer Vision.", "citeRegEx": "50", "shortCiteRegEx": null, "year": 2013}], "referenceMentions": [{"referenceID": 0, "context": "The network learns a mapping from images of objects to their underlying 3D shapes from a large collection of synthetic data [1].", "startOffset": 124, "endOffset": 127}, {"referenceID": 1, "context": "This trend has been boosted now that 3D printing is a democratized technology and 3D acquisition methods are accurate and efficient [2].", "startOffset": 132, "endOffset": 135}, {"referenceID": 0, "context": "Moreover, the trend is also coupled with the diffusion of large scale repositories of 3D object models such as ShapeNet [1].", "startOffset": 120, "endOffset": 123}, {"referenceID": 2, "context": "One typical assumption is that features can be matched across views [3,4,5,6] as hypothesized by the majority of the methods based on SFM or SLAM [7,8].", "startOffset": 68, "endOffset": 77}, {"referenceID": 3, "context": "One typical assumption is that features can be matched across views [3,4,5,6] as hypothesized by the majority of the methods based on SFM or SLAM [7,8].", "startOffset": 68, "endOffset": 77}, {"referenceID": 4, "context": "One typical assumption is that features can be matched across views [3,4,5,6] as hypothesized by the majority of the methods based on SFM or SLAM [7,8].", "startOffset": 68, "endOffset": 77}, {"referenceID": 5, "context": "One typical assumption is that features can be matched across views [3,4,5,6] as hypothesized by the majority of the methods based on SFM or SLAM [7,8].", "startOffset": 68, "endOffset": 77}, {"referenceID": 6, "context": "One typical assumption is that features can be matched across views [3,4,5,6] as hypothesized by the majority of the methods based on SFM or SLAM [7,8].", "startOffset": 146, "endOffset": 151}, {"referenceID": 7, "context": "One typical assumption is that features can be matched across views [3,4,5,6] as hypothesized by the majority of the methods based on SFM or SLAM [7,8].", "startOffset": 146, "endOffset": 151}, {"referenceID": 8, "context": "It has been demonstrated (for instance see [9]) that if the viewpoints are separated by a large baseline, establishing (traditional) feature correspondences is extremely problematic due to local appearance changes or self-occlusions.", "startOffset": 43, "endOffset": 46}, {"referenceID": 9, "context": "Moreover, lack of texture on objects and specular reflections also make the feature matching problem very difficult [10,11].", "startOffset": 116, "endOffset": 123}, {"referenceID": 10, "context": "Moreover, lack of texture on objects and specular reflections also make the feature matching problem very difficult [10,11].", "startOffset": 116, "endOffset": 123}, {"referenceID": 11, "context": "In order to circumvent issues related to large baselines or non-Lambertian surfaces, 3D volumetric reconstruction methods such as space carving [12,13,14,15] and their probabilistic extensions [16] have become popular.", "startOffset": 144, "endOffset": 157}, {"referenceID": 12, "context": "In order to circumvent issues related to large baselines or non-Lambertian surfaces, 3D volumetric reconstruction methods such as space carving [12,13,14,15] and their probabilistic extensions [16] have become popular.", "startOffset": 144, "endOffset": 157}, {"referenceID": 13, "context": "In order to circumvent issues related to large baselines or non-Lambertian surfaces, 3D volumetric reconstruction methods such as space carving [12,13,14,15] and their probabilistic extensions [16] have become popular.", "startOffset": 144, "endOffset": 157}, {"referenceID": 14, "context": "In order to circumvent issues related to large baselines or non-Lambertian surfaces, 3D volumetric reconstruction methods such as space carving [12,13,14,15] and their probabilistic extensions [16] have become popular.", "startOffset": 144, "endOffset": 157}, {"referenceID": 15, "context": "In order to circumvent issues related to large baselines or non-Lambertian surfaces, 3D volumetric reconstruction methods such as space carving [12,13,14,15] and their probabilistic extensions [16] have become popular.", "startOffset": 193, "endOffset": 197}, {"referenceID": 16, "context": "Thus, shape prior-based methods can work with fewer images and with fewer assumptions on the object reflectance function as shown in [17,18].", "startOffset": 133, "endOffset": 140}, {"referenceID": 17, "context": "Thus, shape prior-based methods can work with fewer images and with fewer assumptions on the object reflectance function as shown in [17,18].", "startOffset": 133, "endOffset": 140}, {"referenceID": 18, "context": "The shape priors are typically encoded in the form of simple 3D primitives as demonstrated by early pioneering works [19,20] or learned from rich repositories of 3D CAD models [21,22,23], whereby the concept of fitting 3D models to images of faces was explored to a much larger extent [24,25,26].", "startOffset": 117, "endOffset": 124}, {"referenceID": 19, "context": "The shape priors are typically encoded in the form of simple 3D primitives as demonstrated by early pioneering works [19,20] or learned from rich repositories of 3D CAD models [21,22,23], whereby the concept of fitting 3D models to images of faces was explored to a much larger extent [24,25,26].", "startOffset": 117, "endOffset": 124}, {"referenceID": 20, "context": "The shape priors are typically encoded in the form of simple 3D primitives as demonstrated by early pioneering works [19,20] or learned from rich repositories of 3D CAD models [21,22,23], whereby the concept of fitting 3D models to images of faces was explored to a much larger extent [24,25,26].", "startOffset": 176, "endOffset": 186}, {"referenceID": 21, "context": "The shape priors are typically encoded in the form of simple 3D primitives as demonstrated by early pioneering works [19,20] or learned from rich repositories of 3D CAD models [21,22,23], whereby the concept of fitting 3D models to images of faces was explored to a much larger extent [24,25,26].", "startOffset": 176, "endOffset": 186}, {"referenceID": 22, "context": "The shape priors are typically encoded in the form of simple 3D primitives as demonstrated by early pioneering works [19,20] or learned from rich repositories of 3D CAD models [21,22,23], whereby the concept of fitting 3D models to images of faces was explored to a much larger extent [24,25,26].", "startOffset": 176, "endOffset": 186}, {"referenceID": 23, "context": "The shape priors are typically encoded in the form of simple 3D primitives as demonstrated by early pioneering works [19,20] or learned from rich repositories of 3D CAD models [21,22,23], whereby the concept of fitting 3D models to images of faces was explored to a much larger extent [24,25,26].", "startOffset": 285, "endOffset": 295}, {"referenceID": 24, "context": "The shape priors are typically encoded in the form of simple 3D primitives as demonstrated by early pioneering works [19,20] or learned from rich repositories of 3D CAD models [21,22,23], whereby the concept of fitting 3D models to images of faces was explored to a much larger extent [24,25,26].", "startOffset": 285, "endOffset": 295}, {"referenceID": 25, "context": "The shape priors are typically encoded in the form of simple 3D primitives as demonstrated by early pioneering works [19,20] or learned from rich repositories of 3D CAD models [21,22,23], whereby the concept of fitting 3D models to images of faces was explored to a much larger extent [24,25,26].", "startOffset": 285, "endOffset": 295}, {"referenceID": 26, "context": "Sophisticated mathematical formulations have also been introduced to adapt 3D shape models to observations with different degrees of supervision [27] and different regularization strategies [28].", "startOffset": 145, "endOffset": 149}, {"referenceID": 27, "context": "Sophisticated mathematical formulations have also been introduced to adapt 3D shape models to observations with different degrees of supervision [27] and different regularization strategies [28].", "startOffset": 190, "endOffset": 194}, {"referenceID": 28, "context": "Inspired by early works that used machine learning to learn a 2D-to-3D mapping for scene understanding [29,30], data driven approaches have been recently proposed to solve the daunting problem of recovering the shape of an object from just a single image [31,32] for a given number of object categories.", "startOffset": 103, "endOffset": 110}, {"referenceID": 29, "context": "Inspired by early works that used machine learning to learn a 2D-to-3D mapping for scene understanding [29,30], data driven approaches have been recently proposed to solve the daunting problem of recovering the shape of an object from just a single image [31,32] for a given number of object categories.", "startOffset": 103, "endOffset": 110}, {"referenceID": 30, "context": "Inspired by early works that used machine learning to learn a 2D-to-3D mapping for scene understanding [29,30], data driven approaches have been recently proposed to solve the daunting problem of recovering the shape of an object from just a single image [31,32] for a given number of object categories.", "startOffset": 255, "endOffset": 262}, {"referenceID": 31, "context": "Inspired by early works that used machine learning to learn a 2D-to-3D mapping for scene understanding [29,30], data driven approaches have been recently proposed to solve the daunting problem of recovering the shape of an object from just a single image [31,32] for a given number of object categories.", "startOffset": 255, "endOffset": 262}, {"referenceID": 32, "context": "Inspired by the success of Long Short-Term Memory (LSTM) [33] networks [34,35] as well as recent progress in single-view 3D reconstruction using Convolutional Neural Networks [36,37], we propose a novel architecture that we call the 3D Recurrent Reconstruction Neural Network (3D-R2N2).", "startOffset": 57, "endOffset": 61}, {"referenceID": 33, "context": "Inspired by the success of Long Short-Term Memory (LSTM) [33] networks [34,35] as well as recent progress in single-view 3D reconstruction using Convolutional Neural Networks [36,37], we propose a novel architecture that we call the 3D Recurrent Reconstruction Neural Network (3D-R2N2).", "startOffset": 71, "endOffset": 78}, {"referenceID": 34, "context": "Inspired by the success of Long Short-Term Memory (LSTM) [33] networks [34,35] as well as recent progress in single-view 3D reconstruction using Convolutional Neural Networks [36,37], we propose a novel architecture that we call the 3D Recurrent Reconstruction Neural Network (3D-R2N2).", "startOffset": 71, "endOffset": 78}, {"referenceID": 35, "context": "Inspired by the success of Long Short-Term Memory (LSTM) [33] networks [34,35] as well as recent progress in single-view 3D reconstruction using Convolutional Neural Networks [36,37], we propose a novel architecture that we call the 3D Recurrent Reconstruction Neural Network (3D-R2N2).", "startOffset": 175, "endOffset": 182}, {"referenceID": 36, "context": "Inspired by the success of Long Short-Term Memory (LSTM) [33] networks [34,35] as well as recent progress in single-view 3D reconstruction using Convolutional Neural Networks [36,37], we propose a novel architecture that we call the 3D Recurrent Reconstruction Neural Network (3D-R2N2).", "startOffset": 175, "endOffset": 182}, {"referenceID": 31, "context": "\u2013 Our extensive experimental analysis shows that our reconstruction framework outperforms the state-of-the-art method for single-view reconstruction [32].", "startOffset": 149, "endOffset": 153}, {"referenceID": 32, "context": "One of the most successful implementations of the hidden states of an RNN is the Long Short Term Memory (LSTM) unit [33].", "startOffset": 116, "endOffset": 120}, {"referenceID": 32, "context": "An LSTM unit explicitly controls the flow from input to output, allowing the network to overcome the vanishing gradient problem [33,38].", "startOffset": 128, "endOffset": 135}, {"referenceID": 37, "context": "An LSTM unit explicitly controls the flow from input to output, allowing the network to overcome the vanishing gradient problem [33,38].", "startOffset": 128, "endOffset": 135}, {"referenceID": 38, "context": "[39].", "startOffset": 0, "endOffset": 4}, {"referenceID": 39, "context": "We use two versions of 3D-R2N2: (top) a shallow network and (bottom) a deep residual network [40].", "startOffset": 93, "endOffset": 97}, {"referenceID": 39, "context": "Motivated by a recent study [40], we also created a deep residual variation of the first network and report the performance of this variation in Section 5.", "startOffset": 28, "endOffset": 32}, {"referenceID": 40, "context": "After receiving an input image sequence x1, x2, \u00b7 \u00b7 \u00b7 , xT , the 3D-LSTM passes the hidden state hT to a decoder, which increases the hidden state resolution by applying 3D convolutions, non-linearities, and 3D unpooling [41] until it reaches the target output resolution.", "startOffset": 221, "endOffset": 225}, {"referenceID": 41, "context": "We first rendered the CAD models with a transparent background and then augmented the input images with random crops from the PASCAL VOC 2012 dataset [42].", "startOffset": 150, "endOffset": 154}, {"referenceID": 40, "context": "For deconvolution, we followed the unpooling scheme presented in [41].", "startOffset": 65, "endOffset": 69}, {"referenceID": 42, "context": "We used Theano [43] to implement our network and used Adam [44] for the SGD update rule.", "startOffset": 15, "endOffset": 19}, {"referenceID": 43, "context": "We used Theano [43] to implement our network and used Adam [44] for the SGD update rule.", "startOffset": 59, "endOffset": 63}, {"referenceID": 44, "context": "Next, we compare the performance of our network on the PASCAL 3D [45] dataset with that of a state-of-the-art method by Kar et al.", "startOffset": 65, "endOffset": 69}, {"referenceID": 31, "context": "[32] for single-view real-world image reconstruction (Section 5.", "startOffset": 0, "endOffset": 4}, {"referenceID": 0, "context": "Then we show the network\u2019s ability to perform multi-view reconstruction on the ShapeNet dataset [1] and the Online Products dataset [46] (Section 5.", "startOffset": 96, "endOffset": 99}, {"referenceID": 45, "context": "Then we show the network\u2019s ability to perform multi-view reconstruction on the ShapeNet dataset [1] and the Online Products dataset [46] (Section 5.", "startOffset": 132, "endOffset": 136}, {"referenceID": 44, "context": "PASCAL 3D: The PASCAL 3D dataset is composed of PASCAL 2012 detection images augmented with 3D CAD model alignment [45].", "startOffset": 115, "endOffset": 119}, {"referenceID": 45, "context": "Online Products: The dataset [46] contains images of 23,000 items sold online.", "startOffset": 29, "endOffset": 33}, {"referenceID": 31, "context": "[32].", "startOffset": 0, "endOffset": 4}, {"referenceID": 41, "context": "To make a quantitative comparison, we used images from the PASCAL VOC 2012 dataset [42] and its corresponding 3D models from the PASCAL 3D+ dataset [45].", "startOffset": 83, "endOffset": 87}, {"referenceID": 44, "context": "To make a quantitative comparison, we used images from the PASCAL VOC 2012 dataset [42] and its corresponding 3D models from the PASCAL 3D+ dataset [45].", "startOffset": 148, "endOffset": 152}, {"referenceID": 31, "context": "[32] Input Ground Truth Ours Kar et al.", "startOffset": 0, "endOffset": 4}, {"referenceID": 31, "context": "[32]", "startOffset": 0, "endOffset": 4}, {"referenceID": 31, "context": "[32] Input Ground Truth Ours Kar et al.", "startOffset": 0, "endOffset": 4}, {"referenceID": 31, "context": "[32]", "startOffset": 0, "endOffset": 4}, {"referenceID": 31, "context": "[32] is trained/tested per category and takes ground-truth object segmentation masks and keypoint labels as additional input.", "startOffset": 0, "endOffset": 4}, {"referenceID": 31, "context": "[32] in every category.", "startOffset": 0, "endOffset": 4}, {"referenceID": 31, "context": "[32].", "startOffset": 0, "endOffset": 4}, {"referenceID": 31, "context": "[32] took ground-truth object segmentation masks and keypoint labels as additional inputs for both training and testing.", "startOffset": 0, "endOffset": 4}, {"referenceID": 31, "context": "[32] 0.", "startOffset": 0, "endOffset": 4}, {"referenceID": 0, "context": "Sample reconstructions on (a) the ShapeNet [1] testing set and (c) the Online Products dataset [46].", "startOffset": 43, "endOffset": 46}, {"referenceID": 45, "context": "Sample reconstructions on (a) the ShapeNet [1] testing set and (c) the Online Products dataset [46].", "startOffset": 95, "endOffset": 99}, {"referenceID": 46, "context": "We used a Patch-Match [48]-based off-the-shelf implementation [49] as the MVS method.", "startOffset": 22, "endOffset": 26}, {"referenceID": 47, "context": "The MVS method takes images along with their camera positions estimated by Global SFM [50] and outputs the reconstructed model.", "startOffset": 86, "endOffset": 90}, {"referenceID": 31, "context": "[32] in single-view reconstruction using real-world images.", "startOffset": 0, "endOffset": 4}, {"referenceID": 0, "context": "We further tested the network\u2019s ability to perform multi-view reconstruction on the ShapeNet dataset [1] and the Online Products dataset [46], which showed that the network is able to incrementally improve its reconstructions as it sees more views of an object.", "startOffset": 101, "endOffset": 104}, {"referenceID": 45, "context": "We further tested the network\u2019s ability to perform multi-view reconstruction on the ShapeNet dataset [1] and the Online Products dataset [46], which showed that the network is able to incrementally improve its reconstructions as it sees more views of an object.", "startOffset": 137, "endOffset": 141}], "year": 2016, "abstractText": "Inspired by the recent success of methods that employ shape priors to achieve robust 3D reconstructions, we propose a novel recurrent neural network architecture that we call the 3D Recurrent Reconstruction Neural Network (3D-R2N2). The network learns a mapping from images of objects to their underlying 3D shapes from a large collection of synthetic data [1]. Our network takes in one or more images of an object instance from arbitrary viewpoints and outputs a reconstruction of the object in the form of a 3D occupancy grid. Unlike most of the previous works, our network does not require any image annotations or object class labels for training or testing. Our extensive experimental analysis shows that our reconstruction framework i) outperforms the state-of-theart methods for single view reconstruction, and ii) enables the 3D reconstruction of objects in situations when traditional SFM/SLAM methods fail (because of lack of texture and/or wide baseline).", "creator": "LaTeX with hyperref package"}}}