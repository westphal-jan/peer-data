{"id": "1605.04072", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "13-May-2016", "title": "Towards Empathetic Human-Robot Interactions", "abstract": "Since the late 1990s when speech companies began providing their customer-service software in the market, people have gotten used to speaking to machines. As people interact more often with voice and gesture controlled machines, they expect the machines to recognize different emotions, and understand other high level communication features such as humor, sarcasm and intention. In order to make such communication possible, the machines need an empathy module in them which can extract emotions from human speech and behavior and can decide the correct response of the robot. Although research on empathetic robots is still in the early stage, we described our approach using signal processing techniques, sentiment analysis and machine learning algorithms to make robots that can \"understand\" human emotion. We propose Zara the Supergirl as a prototype system of empathetic robots. It is a software based virtual android, with an animated cartoon character to present itself on the screen. She will get \"smarter\" and more empathetic through its deep learning algorithms, and by gathering more data and learning from it. In this paper, we present our work so far in the areas of deep learning of emotion and sentiment recognition, as well as humor recognition. We hope to explore the future direction of android development and how it can help improve people's lives.", "histories": [["v1", "Fri, 13 May 2016 07:31:50 GMT  (2190kb)", "http://arxiv.org/abs/1605.04072v1", "23 pages. Keynote at 17th International Conference on Intelligent Text Processing and Computational Linguistics. To appear in Lecture Notes in Computer Science"]], "COMMENTS": "23 pages. Keynote at 17th International Conference on Intelligent Text Processing and Computational Linguistics. To appear in Lecture Notes in Computer Science", "reviews": [], "SUBJECTS": "cs.CL cs.AI cs.HC cs.RO", "authors": ["pascale fung", "dario bertero", "yan wan", "anik dey", "ricky ho yin chan", "farhad bin siddique", "yang yang", "chien-sheng wu", "ruixi lin"], "accepted": false, "id": "1605.04072"}, "pdf": {"name": "1605.04072.pdf", "metadata": {"source": "CRF", "title": "Towards Empathetic Human-Robot Interactions", "authors": ["Pascale Fung", "Dario Bertero", "Yan Wan", "Anik Dey", "Ricky Ho", "Yin Chan", "Farhad Bin Siddique", "Yang Yang", "Chien-Sheng Wu", "Ruixi Lin"], "emails": ["pascale@ece.ust.hk"], "sections": [{"heading": "1 Introduction", "text": "From science fiction films to novels, humans have always fantasized \u2013 or needed \u2013 to have an emotional relationship with intelligent machines.\nMany people in the society seem to think that the objective of creating intelligent machines is to \u201cimitate humans\u201d or create a new species of \u201chumans\u201d. This misunderstanding has led to the irrational fear of \u201cmachines taking over humans\u201d by some people. Their reasoning is obvious \u2013 if intelligent machines are supposed to imitate humans then as they become more and more human-like they are bound to have humanly desire for power and dominance. It is obvious if one believes in the premises that we are creating machines to \u201cimitate humans\u201d. However, this is far from the reality of artificial intelligence research.\nRather than trying to build some Frankenstein surrogate of the human race, the objective of intelligent machine research and development has always been to help humans. As such, even when we build robot \u201ccompanions\u201d we are working to create health benefits for the elderly or educational benefits for the young.\nIn the past couple of decades, interactive dialog systems have been designed as software programs either for the desktop, embedded in an enterprise solution, as cloud services, or as mobile applications. They would have a synthesized voice. Since the 1990s, voice interactive designers have tried to make the dialog prompts more natural, and speech synthesis has made great progress to enable computer voice to sound human like. However, such systems remain invisible and virtual. Even after giving these applications names like Siri or Cortana, users remain emotionally indifferent to such systems as if they are merely using an ATM machine for transactions.\nOne reason behind this might be something that has been studied by human-robot interaction researchers [39]. It is known that physical embodiment of an intelligent system, whether in virtual simulation or in a robotic form, is important for users to feel related and empathize with the system [34].\nMore importantly though, physical robots, even extremely humanlike androids, seem cold and distant to humans because while they can sometimes be built to look and even sound emotional, they do not recognize or respond to human emotions and intent. Roboticists make great efforts to build robots in anthropomorphic form so that humans can empathize with them [22], and to have embodied cognition [10]. only to find human users disappointed by the lack of reciprocal empathy from these robots.\nIt follows that we shall embody interactive dialog systems in simulated or robotic forms. It is also important that we give such systems the ability to both recognize human emotions and intent, as well as expressing its own. Before we share our lives with robots, they need to be able to recognize human emotion and intent, through natural language communications, through facial expression and gesture communications.\nIn this paper, we describe a proposed framework for building a robotic interactive system with an \u201cempathy module\u201d. In Section 2, we describe the design of a prototype empathetic virtual robot system. In Section 3 we describe the personality analysis of our system and in Section 4 the need for the system to handle user challenges to our empathetic interactive virtual robot. To enable different features described in Sections 2 to 4, we need speech recognition, emotion and sentiment recognition from audio and text. We describe our current approaches in these areas in Sections 5 to 6. In Section 5 we first present a brief over view of different deep learning architectures. Section 6 describes our current approach of hybrid HMM-DNN speech recognition system for interactive systems. Section 7 describes our approach of emotion recognition from audio with and without feature engineering. We then discuss sentiment recognition from speech and text in Section 8 with the special case of humor recognition in conversations in Section 9. We summarize and discuss future work in Section 10."}, {"heading": "2 Architecture of An Empathetic Human-Robot Interactive Platform", "text": "To achieve human-machine empathy towards each other, we propose a platform that will consist of the following features and functionalities:\n1. Embodiment of the system on a virtual robot platform for human empathy; 2. Emotion and intent expression by the robot; 3. Facial recognition of user ethnicity, age, etc.; 4. Speech recognition of what the user is saying including humor; 5. Natural language understanding of user intent and sentiment including humor; 6. Emotion recognition from facial expressions, speech, audio and language;\nResearch has shown that humans prefer interacting with machines that are anthropomorphous. So the very first step in designing interactive intelligent systems is to give it a humanlike form.\nIn recent years, we have seen more efforts to give interactive systems a \u201cface\u201d. For example, the Microsoft Tay is a chatbot with a human face and personality. \u201cShe\u201d is designed as a teenage female character and exhibits the language model of a typical American teenage girl. The Boston company Jibo made a social robot of that name with animated expressions and movement. Jibo has had a huge success online. Pepper is another social robot that has the capability of recognizing human emotion and sentiments, available in Japan. Pepper also has an anthropomorphous body with a head and body movement designed to express emotion and intent.\nFor a prototype system, we gave our platform a human name and a cartoon figure. We call it Zara the Supergirl, with a multiracial face and a cartoon body. It was shown at the World Economic Forum in Dalian in September 2015. Her cartoon facial expressions and body movements are template-based and programmed to represent her recognition of user emotion or sentiment. Her lips move when she is talking. Her body gestures are program to express a combination of friendliness, power, knowledge and other emotions she might have while interacting with humans.\nWhen you begin a conversation with Zara, she says, \u201cPlease wait while I analyze your face\u201d. Zara\u2019s algorithms study images captured by the computer\u2019s webcam to determine your gender and ethnicity. She will then guess which language you speak (Zara understands English, Mandarin and is learning French) and ask you a few questions in your native tongue. What is your earliest memory? Tell me about your mother. How was your last vacation? Through this process, based on your facial expressions, the acoustic features of your voice, and the content of your responses, Zara will respond in ways that mimic empathy. She would frown and express sympathy if you mentioned a sad childhood story, but would give a thumbs up when you talk about a great vacation. Zara\u2019s current task is a conversational MBTI personality assessor and we designed 6 categories of personality-assessing questions, in order to assess the user\u2019s personality [24]. After five minutes of conversation, Zara will try to guess your personality\u2014You seem like a easy going and popular person\u2014and ask you about your attitudes toward empathetic machines: How do you feel about machines like me? This is a way for us to gather feedback from people on their interactions with early empathetic robots. A dialog management system with different states is designed to control the flow of the conversation, which consists of one-part machine-initiative questions from Zara and answers from human users and another part of user-initiative questions and challenges to Zara."}, {"heading": "3 Personality analysis", "text": "Empathy is the recognition and sharing of the emotion of the other. In order to demonstrate machine empathy towards humans within a short duration of interaction, we gave Zara the task of personality analysis. We designed a set of personal questions in six different domains in order to classify user personality from among sixteen different MBTI personality types [24]. The original MBTI test questionnaire contains about 70 questions about user\u2019s preferences and sentiments, and would require about half an hour to complete. We asked a group of training users to answer this questionnaire but also answer questions from Zara. The personality type generated by the MBTI questionnaire is used as the gold standard label for training the Zara system. Based on user answers to Zara\u2019s questions, scores are calculated in four dimensions (namely Introversion - Extroversion, Intuitive - Sensing, Thinking - Feeling, Judging - Perceiving).\nWe use the output of the sentiment analysis from language and emotion recognition from speech as linguistic and speech cues to calculate the score for each personality dimension based on previous research [21]. For each response, the individual score for each of the four dimensions is calculated and updated, and the final score in each dimension is the group average of all the responses."}, {"heading": "4 Handling user challenge", "text": "The personality test consists mostly of machine-initiative questions from Zara and human answers. However, as described in the user analysis section below, there are scenarios where the user does not respond to questions from Zara directly. 24.62% of the users who tried Zara exhibited some form of verbal challenge in their responses during the dialogue conversation, of which 37.5% of users evade the questions with an irrelevant answer. 12.5% of users challenged Zara\u2019s ability more directly with questions unrelated to the personality test.\nFrom September to December 2015, a total of 184 responses were recorded in total, 24.61% of the data showed some form of challenge during the extent of the conversation. Challenge here refers to user responses that were difficult to handle and impeded the flow of conversation with Zara. They include the following 6 types:\n1. Seeking disclosure reciprocity 2. Asking for clarification 3. Avoidance of topic 4. Deliberate challenge of system ability 5. Abusive language\n6. Garbage.\nSeveral of the above categories can be observed in human-human interactions. For instance, seeking disclosure reciprocity is not uncommon in human conversations [41].\nResponses that revealed some form of avoidance of topic were the most frequent. Avoidance in psychology is viewed as a coping mechanism in response to stress, fear, discomfort, or anxiety [30]. In the dataset collected, two types of avoidance were observed. Users who actively avoid the topic specifically reveal their unwillingness to continue the conversation (\u201cI don\u2019t want to talk about it\u201d, \u201cI am in no mood to tell you a story Zara\u201d), while users who adopts a more passive strategy had the intent to discontinue the conversation implied (\u201cLet\u2019s continue.\u201d, \u201cMake it a quick one\u201d, \u201cYou know...\u201d).\nAbusive language includes foul, obscene, culturally and socially inappropriate remarks and the like. Currently collected data revealed surprisingly few inappropriate comments such as \u201cget lost now\u201d and \u201cNone of your business\u201d. These challenges are comparatively mild. Owing to the context of Zara\u2019s role as a personality assessor, the reasons here for abuse could be the need to trust the robotic assessor and response to discomfort.\nAsking for clarification examples included \u201cCan you repeat?\u201d and \u201cCan you say it again?\u201d Clarification questions observed in this dataset are primarily non- reprise questions as a request to repeat a previous utterance [26].\nDeliberate challenge of system ability was also observed. This took the form of direct requests (\u201cCan I change a topic?\u201d, \u201cWhy can\u2019t you speak English?\u201d in the Chinese mode), or statements un- related to the questions asked (\u201cWhich one is 72.1 percent?\u201d).\nZara is programmed with a gentle but witty personality to handle different user challenges. For example, when abusive language is repeatedly used against her, she asks for an apology after expressing concern for the user\u2019s level of stress. If the user asks a general domain question unrelated to the personality test, Zara will try to entertain the question with an answer from a general knowledge database using a search engine API, much like Siri or Cortana. However, unlike these other systems, Zara will not chat indefinitely with the user but will remind the user of their task at hand, namely the personality test. In addition, Zara is also designed to have a sense of humor.\nIn the following sections, we will describe our current approaches for different modules of the Zara system, namely speech recognition, emotion and mood recognition from audio, and sentiment analysis from speech and text. We will also describe a first ever approach in humor recognition from conversations."}, {"heading": "5 DNN, CNN and LSTM", "text": "In this section we give a general description of the Deep Neural Network architectures we use in the task described. The real power of any DNN is to reduce a set of\nlow level features into a single low-dimensional feature vector, performing the appropriate feature-selection [40].\nThe first model we use is the Convolutional Neural Network [9], which is useful to obtain a fixed-length vector representation of an utterance, an audio signal or an image. The basic structure of a CNN takes as input one or more low level input vectors x!..!. In case of an utterance each word is encoded as a vector, in case of an audio signal each frame, or in alternative the raw audio sample. The input feature vectors are first fed into a first embedding layer to obtain a low dimensional dense vector, given by:\nx!! = f(W!x! + b!) where f is a non-linear function (sigmoid, hyperbolic tangent or rectified linear), and W the parameters to be trained. A sliding window then moves over the output vectors of the embedding layer (or the raw audio input itself), and another layer is applied to each group of token or audio frame vectors:\nx!! = f(W![x!!]!\u2208 !!!!,!! ! ! +  \u00a0b!)\nwhere c is the size of the convolution window, and [] denotes the concatenation. This operation allows to capture the local context and extract features from it. A maxpooling operation is then applied to extract the most salient features of all the tokens or frames into a single vector for the whole utterance. The max-pooling takes, for each vector element, the maximum value among all output vectors from the convolution:\nx!!\" =  \u00a0max! (x!,! ! )\nwhere t represents the token, and i the vector element. The Long Short Term Memory (LSTM) [15] is instead useful to model time sequences where it is important to remember the past context. It is an improvement over the Recurrent Neural Network aimed to enhance its memory capabilities. In a standard RNN the hidden memory layer is updated through a function of the input and the hidden layer at the previous time instant:\n\ud835\udc89! = tanh \u00a0(\ud835\udc7e!\ud835\udc99! +  \u00a0\ud835\udc7e!\ud835\udc89!!! + \ud835\udc83) Where x is the network input and b the bias term. This kind of connection is not very effective to maintain the information stored for long time instants, and it does not allow to forget unneeded information between two time steps.\nThe LSTM enhances the RNN with a series of three multiplicative gates. The structure is the following:\n\ud835\udc8a! = \u03c3 \ud835\udc7e!!\ud835\udc99! +  \u00a0\ud835\udc7e!!\ud835\udc89!!! + \ud835\udc83\ud835\udc8a \ud835\udc87! = \u03c3 \u00a0(\ud835\udc7e!!\ud835\udc99! +  \u00a0\ud835\udc7e!!\ud835\udc89!!! + \ud835\udc83\ud835\udc87) \ud835\udc90! = \u03c3 \u00a0(\ud835\udc7e!!\ud835\udc99! +  \u00a0\ud835\udc7e!!\ud835\udc89!!! + \ud835\udc83\ud835\udc90)\n\ud835\udc94! = tanh \u00a0(\ud835\udc7e!!\ud835\udc99! +  \u00a0\ud835\udc7e!!\ud835\udc89!!! + \ud835\udc83\ud835\udc94) \ud835\udc84! = \ud835\udc87!\u2299 \ud835\udc84!!! + \ud835\udc8a!\u2299 \ud835\udc94!) \ud835\udc89! = tanh \u00a0(\ud835\udc84!)\u2299 \ud835\udc90!)\nwhere \u2299 is the element-wise product. The gate factors i, f, o are able to let through or suppress a specific update contribution, thus allowing a selective information retaining. In this way a cell value can be retained for multiple time steps when i = 0, ignored in the output when o = 0, and forgotten when f = 0."}, {"heading": "6 Speech Recognition", "text": "We experiment with an automatic speech recognition system implemented in house. ASR systems consist of both an acoustic model and a language model in a Bayesian framework.\n\u0174 = argmax ! \ud835\udc43 \ud835\udc34 \ud835\udc4a \ud835\udc43(\ud835\udc4a) For training acoustic models, we train a GMM-HMM for predicting the hidden states and use a Deep Neural Network (DNN) to predict the emission probabilities of the HMM states. We train maximum likelihood (ML) Gaussian mixture Hidden Markov Model (GMM-HMM) with 8000 tied triphone states and 240K Gaussians, using linear discriminant analysis (LDA) and maximum likelihood linear transform (MLLT) feature transformations. We apply boosted maximum mutual information (bMMI) discriminative training on ML trained HMMs.\nWe train DNN for the emission probabilities of the HMMs with 6 hidden layers, and each hidden layer has 1024 neurons. The DNN is initialized with stacked restricted Boltzmann machines (RBMs) which are pre-trained in a greedy layerwise fashion. Cross-entropy (CE) criterion DNN training is first applied on the state alignments produced by the GMM-HMMs. State alignment is then reproduced with the DNNHMMs, and DNN training with CE criterion is done again. Sequence-discriminative training of DNN with state level minimum Bayes risk (sMBR) criterion is applied by lattice-based approach on the CE trained DNN-HMMs. We train our acoustic models with the Kaldi speech recognition toolkit [25].\nOur text data to train the language model contains 88.6M sentences. It comprises the acoustic model training English transcriptions, web crawled news data, web crawled book data, Cantab filtering sentences on Google 1 billion word language modeling benchmark, weather domain and music domain queries expanded from manually designed templates, and common chat queries. We train Wittenbell smoothing interpolated trigram language model (LM) and CE based recurrent neural network (RNN) LM using the SRI-LM toolkit and CUED-RNNLM toolkit respectively.\nThe ASR decoder performs search on weighted finite state transducer (WFST) graph for trigram LM and generates lattice, and then performs lattice rescoring with RNN LM. The decoder is designed for input audio data that is streamed from TCP/IP or HTTP network protocol, and also performs decoding in real time. The decoder supports simultaneous users by multiple threads and user queue. The English ASR achieves 7.6% word error rate on the combined test set of wsj11 \u201csi_dt_05\u201d and \u201csi_dt_20\u201d.\n1 https://catalog.ldc.upenn.edu/LDC94S13A\nOur system is a hybrid DNN-HMM system. In recent years, there has been work on end-to-end models for speech recognition where feature vectors are the input and word sequences are predicted one by one, without an HMM framework. One such model is called End-to-End Attention-based Large Vocabulary Speech Recognition [3]. Recurrent Neural Nets (RNNs) are used to replace the HMMs. Language models are incorporated directly into the RNN decoder. Other approach includes using Deep Convolutional Neural Nets instead of DNNs or GMMs [32]. CNNs have the advantage of being able to model the spectral correlations that exist in speech signals.\nIn summary, speech recognition has improved in leaps and bounds thanks to deep learning and is able to give us most of what we want to hear from any spoken input. The decoded word sequence is then used for later stage semantic processing, such as emotion, sentiment and intent recognition."}, {"heading": "7 Real-Time Emotion Recognition from Time-Domain Raw", "text": "Audio Input\nIn recent years, we have seen successful systems that gave high classification accuracies on benchmark datasets of emotional speech [21] or music genres and moods [34]. Most of such work consists of two main steps, namely feature extraction and classifier learning. One challenge for most emotion recognition systems from speech is the time needed to extract features from the speech file. Both high and low level features, as described in the following section, are needed so far for emotion and mood recognition from audio. There are close to a 1000 features, a much larger set than the feature set used for speech recognition, that need to be extracted and computed over windows of audio signals. This typically takes a few dozen seconds to do for each utterance, making the response time less than real-time instantaneous, which users have come to expect from interactive systems.\nFeature engineering is tedious and time-consuming. It also requires a lot of hand tuning. In order to bypass feature engineering, the current direction is to explore methods that can recognize emotion or mood directly from time-domain audio signals. One approach that has shown great potential is using Convolutional Neural Networks. In the following sections, we compare an approach of using CNN without feature engineering to a method that uses audio features with a SVM classifier."}, {"heading": "7.1 Dataset", "text": "For our experiments on emotion recognition with raw audio, we built a dataset form the TED-LIUM corpus release 2 [31]. It includes 207 hours of speech extracted from 1495 TED talks. We annotated the data with an existing commercial API followed by manual correction. We obtained a total of 90041 segments, divided into the following 11 categories: creative/passionate, criticism/cynicism, defensiveness/anxiety, friendly/warm, hostility/anger, leadership/charisma, loneliness/unfulfillment, love/happiness, sadness/sorrow, self-control/practicality and supremacy/arrogance.\nIn our experiments we only use the following 6 categories: criticism, anxiety, anger, loneliness, happiness, sadness. We obtained a total of 2389 segments for the criticism category, 3855 for anxiety, 12708 for anger, 3618 for loneliness, 8070 for happy and 1824 for sadness. The segments have an average length slightly above 13 seconds. As on-going work, we continue to re-label audio data with our CNN-based emotion decoder followed by manual correction."}, {"heading": "7.2 Real-Time Speech Emotion Recognition with CNN", "text": "The CNN model using raw audio as input is shown in Figure 4. The raw audio samples are first down-sampled at 8kHz, in order to optimize between the sampling rate and representation memory efficiency in case of longer segments. The CNN is designed with one filter for real-time processing. We set a convolution window of size 200, which corresponds to 25 ms, and an overlapping step size of 50, equal to around 6 ms. The convolution layer perform the feature extraction in each layer, and models the variations among neighboring frames due to the overlapping.\nThe network is trained using the standard back-propagation algorithm, performing gradient descent over each parameter. At evaluation time the time complexity is linear over the length of the audio input segment due to the convolution. Thus the largest time contribution is due to the computations inside the network [14], which with one convolution only can be performed in negligible time for single utterances."}, {"heading": "7.3 Experimental Setup", "text": "We setup our experiments as binary classification tasks, in which each segment is classified as either part of a particular emotion category or not part of that particular category. For each category the negative samples are chosen randomly from the music clips that do not belong to the positive genre.\nWe implement our CNN with the Theano framework [4]. Theano's automatic differentiation capabilities are used to implement the backpropagation. Our models are trained with GPU Tesla K20 on the CUDA platform.\nWe choose rectified linear as the non-linear function for the hidden layers, as it generally provides better performance over other functions. We use standard backpropagation training, with momentum set to 0.9 and initial learning rate to \u00a0\ud835\udfcf\ud835\udfce!\ud835\udfd3. We used the validation set to determine the early stopping condition when the error on it began to increase. We normalize the input data of each experiment with zero mean and unit standard deviation.\nAs a baseline we use a linear-kernel SVM model from the LibSVM [8] library with the INTERSPEECH 2009 emotion feature set [35], extracted with openSMILE [12]. These features are computed from a series of input frames and output a single static summary vector, e.g, the smooth methods, maximum and minimum value, mean value of the features from the frames [20]. The model of each binary classification is trained through 500 iterations.\nAll results are shown in table 1, while Figure 5 shows the learning curves of our binary classification using raw audio data as input. The lower results for some categories, even on the SVM baseline, may be a sign of inaccuracy in manual labeling. We plan to work to improve both the dataset, with hand-labeled samples, and retrain the model as on going work."}, {"heading": "8 Sentiment Inference From Speech and Text", "text": "In the first version of Zara, sentiment analysis was based on lexical features. We look for keyword matches from a pool of positive and negative emotion lexicons from LIWC2 dictionary and use an N-gram model to classify the sentiment. In the current approach, we use a CNN-based classifier on Word2Vec. Convolutional Neural Networks (CNNs) have recently achieved remarkably strong performance on the practically important task of sentence classification [16,17,18].\n2 http://liwc.wpengine.com\nIn this work, we train a CNN with one layer of convolution and max pooling on top of word vectors obtained from an unsupervised neural language model. We begin with a sentence that we then convert to a matrix. The rows are word vector representations of each word in that sentence. There are several publicly available word vectors sets, such as Google word2vec, WordNet or GloVe. Due to the instinctive sequential structure of a sentence, we use filters that slide over full rows of the matrix, which scrolls word by word specifically. The width of the filter is fixed to the dimensionality of the word vector, and the height varies with different filters. Our model uses multiple filters (with different window heights 3, 4 and 5) to represent multiple features. The convolution matrix W!!\"# is the parameters to be learned for the \ud835\udc56-th filter and its size is a hyper-parameter to be chosen for development. In our model, we choose 100. We then apply a max-over-time pooling operation over each feature, which means the model will always pick up the most valuable information wherever it happens in the input sentence. Also, the pooling technique can fix the feature length for further classification. Our work is implemented as a multi-channel model, which has two channels of word vectors\u2014one that is kept static throughout training as word2vec and another is fine-tuned via back propagation. At last, we concatenate the feature outputs of each channel and pass it to a fully connected softmax layer whose output is the probability distribution over a binary classification for sentiment analysis of text transcribed from speech by our speech recognizer.\nIt is also possible to combine audio input and transcribed text into the CNNs with two channels, as illustrated in the Figure 6 below. Each channel process either the speech or the text features, through the max-pooling layer, the largest number of each feature is recorded into the next layer. The output of each channel are concatenated to forma a feature vector for the penultimate layer, which will be further encoded for the final layer. The final softmax will be performed for the final layer."}, {"heading": "9 Humor Recognition in Conversations", "text": "In this section, we will describe a fully machine-learning approach for learning a particular sentiment \u2013 humor from spoken conversations. The methodology is applicable to recognizing other sentiments as well. Humor can be classified depending on the way they are intended to trigger laughter: common forms include irony, sarcasm, puns and nonsense [1]. Humor in a conversation serves to lighten the mood and build rapport between the speaker and the audience. It is also very helpful for human-robot interactions. Humans are more forgiving of machine mistakes when the latter has a sense of humor. Yell at Siri, you will get a \u201cHey! I am doing my best!\u201d. Ask a challenging question like \u201cSiri, do you love me?\u201d the answer is likely to be \u201cI am not at capable of love\u201d.\nHumor in a spoken dialog is characterized both by what is said and how it is said. Therefore prosody is an important component that must be taken into account together with the semantic content of an utterance. A long-term goal of humor research, or language understanding in general, is how to effectively integrate language features with audio features.\nWe analyze funny dialogues extracted from humorous TV-sitcoms. A sitcom is a scripted oral dialog where at regular intervals canned laughter are embedded. Such\nlaughter indicates where the audience is supposed to laugh, and solicit its active participation. We are interested to predict when this occurs.\nSpontaneous conversational humor typically follows a defined recurrent structure [2,38]. The first moment is the \u201csetup\u201d, which outlines the context for the subsequent jokes and prepare the audience to receive their stimuli. A specific utterance called \u201cpunchline\u201d has then the effect to release the tension with a peculiar reaction, typically laughter. Assuming the punchlines are the utterances followed by a canned laughter, our task is to detect them. To keep the show interesting and the audience engaged, sitcom punchlines are equally distributed throughout the show duration. This makes them a rich source of funny humorous dialogues.\nAn example of a sitcom dialog is shown below: PENNY: Okay, Sheldon, what can I get you? SHELDON: Alcohol. PENNY: Could you be a little more specific? SHELDON: Ethyl alcohol. LAUGH Forty milliliters. LAUGH PENNY: I'm sorry, honey, I don't know milliliters. SHELDON: Ah. Blame President James Jimmy Carter. LAUGH He started America on a path to the metric system but then just gave up. LAUGH In the example the punchlines are highlighted in bold. Before each punchline the other utterances build the setup. In a dialog setting, without a proper context the punchlines may lose their effect of triggering laughters. If we take the last utterance of the example above out of context it may be perceived as a political complaint. Some people may still laugh if exposed to this utterance alone, but setting the dialog in a bar makes the humorous intent stronger. We employ a supervised classification method to detect when punchlines occur. We use a Deep Neural Network framework divided into two levels. The first level is made of two Convolutional Neural Networks [9] to encode each individual utterance from word embedding vectors, and the audio track associated from a set of frame-level features. The language CNN is followed by a Long Short-Term Memory [15] to model the sequential context of the dialog. Before the output softmax layer we concatenate the output of the LSTM with the acoustic feature vector of the audio CNN, and a few sentence-based extra features. A framework diagram is shown in Figure 7."}, {"heading": "Convolutional Neural Network", "text": "A straightforward way to model a dialog is to retrieve language and acoustic features from each utterance, and to apply a memory-based classifier (such as a Recurrent Neural Network or a Long Short-Term Memory) to model the discourse context. Previous work showed that acoustic utterance-level features (such as the INTERSPEECH 2010 paralinguistic challenge feature set [36]) are quite effective with simple classifiers such as logistic regression and conditional random fields, but yield suboptimal performance with DNN systems [5,13]. We apply two parallel Convolutional Neural Networks to model each utterance from lower-level features.\nThe first CNN we use is dedicated to language features. Word2Vec word vectors are used as token-level features. Our Word2Vec model is trained on the text9 Wikipedia corpus3 using gensim implementation [28]. Word2Vec is an improvement over bag-of-ngram or similar representations that ignore out-of-vocabulary words, that often occur in the cross-domain tasks, for example in the case of different sitcoms with different domain vocabulary.\nThe second CNN is used to encode the audio track of each utterance. We split each utterance into overlapping 25ms frames shifted 10ms from each other. We then extract for each frame a vector of low level acoustic and prosodic features with openSMILE [12]. The features we extract are MFCC, \u0394 MFCC, \u0394\u0394 MFCC, pitch, energy and zero crossing mean. A CNN then combines together all the frames into a single vector for each utterance, selecting the features from the most salient frames and discarding those that carry no information. This CNN is similar to that used for language, but it uses two embedding layers at the input, and rectified linear units instead of tanh. Both past attempts in the literature [13] and our experiments on our\n3 Extension of the text8 corpus, obtained from http://mattmahoney.net/dc/textdata\ndevelopment sets showed the use of frame-level features over a shifting-window, and of rectified linear units to be more effective.\nLong Short-Term Memory for the utterance sequence\nAs dialog utterances are sequential, we feed the utterance vectors in sequence into a LSTM block to incorporate contextual information. The memory unit keeps track of the context of previous utterances, and mimics human memory to accumulate the setup that may trigger a punchline.\nBefore the final softmax layer we incorporate some extra features not modeled by our neural network but which still add important contribution [6,7,27,29].\nThese features are average word length, sentence length and difference in sentence length with the previous utterances of the context window, speaker identity as well as the speaking rate (time duration of the utterance divided by the sentence length).\nAll these features are concatenated to the LSTM output together with the audio CNN output, and a softmax layer is applied to get the final output probabilities."}, {"heading": "9.1 Experiments", "text": "We built a corpus from three popular TV-sitcoms: \u201cThe Big Bang Theory\u201d seasons 1 to 6, \u201cFriends\u201d seasons 6 to 9, and \u201cSeinfeld\u201d seasons 5 to 9. We downloaded the subtitle files associated to each episode and the scripts4. We extracted and segmented the audio track of each episode for the acoustic features. The audio tracks were also used to retrieve the canned laughter timestamps, applying a vocal removal tool followed by a silence/sound detector. We then annotated each utterance as a punch line in case it was followed by laughter within 1s, assuming that utterances not followed by a laughter would be the setup for the punch line. Other than for annotation, we used the timestamps to cut from each utterance audio track the overlapping parts with a canned laughter, in order to avoid crosstalk bias.\nFor each show we built a training set of 80% of the overall episodes, and a development and test set of 10% each. The episodes were drawn from all the seasons with the same proportion. Our three corpora are structured as follows:\nWe set the size to 100 for all the hidden layers of the language CNN and the LSTM and the convolution window to 5. In the audio CNN we set the size to 50 and we used a convolution window of size 3. We concatenated the audio CNN output with the other features at the end instead of feeding it through the LSTM, as it gave us better performance. We applied a dropout regularization layer [37] after the output of the LSTM and the audio CNN, the dropout coefficient was set to 0.7. The network was trained with standard back propagation, with a momentum coefficient set to 0.9. The development set was used to tune the hyperparameters, and to determine the early stopping condition. The neural network was implemented with the Theano toolkit [4].\n4 From bigbangtrans.wordpress.com and http://www.livesinabox.com/friends/scripts.shtml\nIn the first set of experiments we trained and tested the classifiers on the same sitcom. As a first baseline for comparison we chose a Conditional Random Field [19] trained over a set of features [6] including the same features added at the end of our neural network, bag-of-ngrams, part of speech proportion, sentiment from SentiWordNet [11], antonyms, and a prosodic feature vector from the INTERSPEECH 2010 paralinguistic challenge [36]. We used the implementation from CRFSuite [23], with L2 regularization. The second baseline system is made of the CNNs encoding blocks only, where the role of the LSTM is replaced with the language CNN output vectors at previous times, concatenated together before the softmax layer. We evaluated context window length of 1 (no LSTM), 2, 3 and 5; as in all the sitcoms over 80% of punchlines occur within five utterances from the previous. All the results are shown in table 4.\nIn Table 5 we also compare the results of our best system on the Big Bang corpus with the system proposed in [7], where a LSTM is applied to a larger set of languageonly features, which includes one-hot word vectors and character-trigram input vectors in addition to Word2Vec. This comparison evaluates the role of acoustic features in our neural network framework.\nThe second series of experiments is a cross-domain evaluation. Each classifier is trained over all the data from two of the corpus shuffled together, and tested over the third corpus. In these experiments we ignore the speaker identity feature. Our baseline"}, {"heading": "Seinfeld", "text": ""}, {"heading": "Friends", "text": ""}, {"heading": "The Big Bang Theory", "text": "system is again the CRF described above, trained and tested over the same crossdomain data. We evaluated context window lengths of size 3 and 5. The results of this experiments are shown in table 6."}, {"heading": "10 Summary and Discussion", "text": "In this paper, we have described a prototype system of an empathetic virtual robot that can recognize user emotions and thereby bring about a new level of human-robot interactions. We described the design of the architecture, the task of personality analysis, and user analysis of Zara the Supergirl. From there, we extended our description to include more details of the recognition and inference of emotion and sentiment from speech and language. Zara also has a facial recognition component which we have not described in detail as it acts as a supplement to the speech and language part."}, {"heading": "Train: Big Bang + Friends Test: Seinfeld", "text": ""}, {"heading": "Train: Big Bang + Seinfeld Test: Friends", "text": ""}, {"heading": "Train: Seinfeld + Friends Test: Big Bang", "text": "We have shown how Deep Learning can be used for various modules in this architecture, ranging from speech recognition, emotion recognition to humor recognition from dialogs. More importantly, we have shown that by using a CNN with one filter, it is possible to obtain real-time performance on speech emotion recognition directly from time-domain audio input, bypassing feature engineering. We have so far developed only the most primary tools that future emotionally intelligent robots would need. Empathetic robots including Zara that are there currently, and the ones that will be there in the near future, might not be completely perfect. However, the most significant step is to make robots to be more human like in their interactions. This means it will have flaws, just like humans do. If this is done right, then future machines and robots will be empathetic and less likely to commit harm in their interactions with humans. They will be able to get us, understand our emotions, and more than anything, they will be our teachers, our caregivers, and our friends."}], "references": [{"title": "Linguistic theories of humor", "author": ["S. Attardo"], "venue": "(Vol. 1). Walter de Gruyter", "citeRegEx": "1", "shortCiteRegEx": "1", "year": 1994}, {"title": "The semantic foundations of cognitive theories of humor.Humor-International", "author": ["S. Attardo"], "venue": "Journal of Humor Research,", "citeRegEx": "2", "shortCiteRegEx": "2", "year": 1997}, {"title": "End-to-end attention-based large vocabulary speech recognition", "author": ["D. Bahdanau", "J. Chorowski", "D. Serdyuk", "P. Brakel", "Y. Bengio"], "venue": "In Acoustics, Speech and Signal Processing (ICASSP),", "citeRegEx": "3", "shortCiteRegEx": "3", "year": 2015}, {"title": "Theano: a CPU and GPU math expression compiler", "author": ["J. Bergstra", "O. Breuleux", "F. Bastien", "P. Lamblin", "R. Pascanu", "G. Desjardins", "Y. Bengio"], "venue": "In Proceedings of the Python for scientific computing conference (SciPy) (Vol", "citeRegEx": "4", "shortCiteRegEx": "4", "year": 2010}, {"title": "Deep learning of audio and language features for humor prediction. in International Conference on Language Resources and Evaluation (LREC) (2016", "author": ["Bertero. D", "P. Fung"], "venue": null, "citeRegEx": "5", "shortCiteRegEx": "5", "year": 2016}, {"title": "Predicting humor response in dialogues from TV sitcoms", "author": ["Bertero. D", "P. Fung"], "venue": "In Acoustics, Speech and Signal Processing (ICASSP),", "citeRegEx": "6", "shortCiteRegEx": "6", "year": 2016}, {"title": "A long short-term memory framework for predicting humor in dialogues in Proceedings of the 2016 Conference of the North American Chapter of the Association for Computational Linguistics: Human Language Technologies (2016", "author": ["Bertero. D", "P. Fung"], "venue": null, "citeRegEx": "7", "shortCiteRegEx": "7", "year": 2016}, {"title": "LIBSVM: a library for support vector machines", "author": ["C.C. Chang", "C.J. Lin"], "venue": "ACM Transactions on Intelligent Systems and Technology (TIST),2(3),", "citeRegEx": "8", "shortCiteRegEx": "8", "year": 2011}, {"title": "Natural language processing (almost) from scratch", "author": ["R. Collobert", "J. Weston", "L. Bottou", "M. Karlen", "K. Kavukcuoglu", "P. Kuksa"], "venue": "The Journal of Machine Learning Research,", "citeRegEx": "9", "shortCiteRegEx": "9", "year": 2011}, {"title": "Intelligent robots: The question of embodiment", "author": ["B.R. Duffy", "G. Joue"], "venue": "In Proc. of the Brain-Machine Workshop", "citeRegEx": "10", "shortCiteRegEx": "10", "year": 2000}, {"title": "Sentiwordnet: A publicly available lexical resource for opinion mining", "author": ["A. Esuli", "F. Sebastiani"], "venue": "In Proceedings of LREC (Vol", "citeRegEx": "11", "shortCiteRegEx": "11", "year": 2006}, {"title": "Opensmile: the munich versatile and fast opensource audio feature extractor", "author": ["F. Eyben", "M. W\u00f6llmer", "B. Schuller"], "venue": "InProceedings of the 18th ACM international conference on Multimedia (pp. 1459-1462)", "citeRegEx": "12", "shortCiteRegEx": "12", "year": 2010}, {"title": "Speech emotion recognition using deep neural network and extreme learning machine", "author": ["K. Han", "D. Yu", "I. Tashev"], "venue": "In Interspeech (pp", "citeRegEx": "13", "shortCiteRegEx": "13", "year": 2014}, {"title": "Convolutional neural networks at constrained time cost", "author": ["K. He", "J. Sun"], "venue": "In Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition (pp", "citeRegEx": "14", "shortCiteRegEx": "14", "year": 2015}, {"title": "Long short-term memory", "author": ["S. Hochreiter", "J. Schmidhuber"], "venue": "Neural computation,", "citeRegEx": "15", "shortCiteRegEx": "15", "year": 1997}, {"title": "Effective use of word order for text categorization with convolutional neural networks", "author": ["R. Johnson", "T. Zhang"], "venue": "In Proceedings of the 53rd Annual Meeting of the Association for Computational Linguistics", "citeRegEx": "16", "shortCiteRegEx": "16", "year": 2015}, {"title": "A convolutional neural network for modelling sentences", "author": ["N. Kalchbrenner", "E. Grefenstette", "P. Blunsom"], "venue": "In Proceedings of the 52nd Annual Meeting of the Association for Computational Linguistics", "citeRegEx": "17", "shortCiteRegEx": "17", "year": 2014}, {"title": "Conditional Neural Networks for sentence classification", "author": ["Kim", "Yoon"], "venue": "EMNLP", "citeRegEx": "18", "shortCiteRegEx": "18", "year": 2014}, {"title": "Conditional random fields: Probabilistic models for segmenting and labeling sequence data", "author": ["J. Lafferty", "A. McCallum", "F.C. Pereira"], "venue": null, "citeRegEx": "19", "shortCiteRegEx": "19", "year": 2001}, {"title": "Classifying subject ratings of emotional speech using acoustic features", "author": ["J. Liscombe", "J. Venditti", "J.B. Hirschberg"], "venue": "Columbia University Academic Commons", "citeRegEx": "20", "shortCiteRegEx": "20", "year": 2003}, {"title": "Using linguistic cues for the automatic recognition of personality in conversation and text", "author": ["F. Mairesse", "M.A. Walker", "M.R. Mehl", "R.K. Moore"], "venue": "Journal of artificial intelligence research,", "citeRegEx": "21", "shortCiteRegEx": "21", "year": 2007}, {"title": "The role of embodiment in assistive interactive robotics for the elderly", "author": ["M.J. Mataric"], "venue": "In AAAI fall symposium on caring machines: AI for the elderly,", "citeRegEx": "22", "shortCiteRegEx": "22", "year": 2005}, {"title": "CRFsuite: a fast implementation of conditional random fields (CRFs)", "author": ["N. Okazaki"], "venue": "URL http://www. chokkan. org/software/crfsuite", "citeRegEx": "23", "shortCiteRegEx": "23", "year": 2007}, {"title": "Automatically assessing personality from speech", "author": ["T. Polzehl", "S. M\u00f6ller", "F. Metze"], "venue": "In Semantic Computing (ICSC),", "citeRegEx": "24", "shortCiteRegEx": "24", "year": 2010}, {"title": "The Kaldi speech recognition toolkit", "author": ["D. Povey", "A. Ghoshal", "G. Boulianne", "L. Burget", "O. Glembek", "N. Goel", "J. Silovsky"], "venue": "In IEEE 2011 workshop on automatic speech recognition and understanding (No. EPFL-CONF-192584). IEEE Signal Processing Society", "citeRegEx": "25", "shortCiteRegEx": "25", "year": 2011}, {"title": "The theory and use of clarification requests in dialogue", "author": ["M. Purver"], "venue": "Unpublished doctoral dissertation, University of London", "citeRegEx": "26", "shortCiteRegEx": "26", "year": 2004}, {"title": " sure, i did the right thing\": a system for sarcasm detection in speech", "author": ["R. Rakov", "A. Rosenberg"], "venue": "In INTERSPEECH (pp. 842-846)", "citeRegEx": "27", "shortCiteRegEx": "27", "year": 2013}, {"title": "Gensim\u2013Python Framework for Vector Space Mo delling", "author": ["R. \u0158eh\u016f\u0159ek", "P. Sojka"], "venue": "NLP Centre,", "citeRegEx": "28", "shortCiteRegEx": "28", "year": 2011}, {"title": "A multidimensional approach for detecting irony in twitter", "author": ["A. Reyes", "P. Rosso", "T. Veale"], "venue": "Language resources and evaluation,", "citeRegEx": "29", "shortCiteRegEx": "29", "year": 2013}, {"title": "Approach, avoidance, and coping with stress", "author": ["S. Roth", "L.J. Cohen"], "venue": "American psychologist,", "citeRegEx": "30", "shortCiteRegEx": "30", "year": 1986}, {"title": "Enhancing the TED-LIUM Corpus with Selected Data for Language Modeling and More TED Talks", "author": ["A. Rousseau", "P. Del\u00e9glise", "Y. Est\u00e8ve"], "venue": "In LREC (pp", "citeRegEx": "31", "shortCiteRegEx": "31", "year": 2014}, {"title": "Deep convolutional neural networks for LVCSR", "author": ["T.N. Sainath", "A.R. Mohamed", "B. Kingsbury", "B. Ramabhadran"], "venue": "In Acoustics, Speech and Signal Processing (ICASSP),", "citeRegEx": "32", "shortCiteRegEx": "32", "year": 2013}, {"title": "Automatic genre classification of music content: a survey", "author": ["N. 33. Scaringella", "G. Zoia", "Mlynek. D"], "venue": "Signal Processing Magazine,", "citeRegEx": "Scaringella et al\\.,? \\Q2006\\E", "shortCiteRegEx": "Scaringella et al\\.", "year": 2006}, {"title": "Disentangling the effects of robot affect, embodiment, and autonomy on human team members in a mixed-initiative task", "author": ["P. Schermerhorn", "M. Scheutz"], "venue": "In Proceedings from the  International Conference on Advances in Computer-Human Interactions (pp. 236-241)", "citeRegEx": "34", "shortCiteRegEx": "34", "year": 2011}, {"title": "The INTERSPEECH 2009 emotion challenge", "author": ["B. Schuller", "S. Steidl", "A. Batliner"], "venue": "In INTERSPEECH (Vol", "citeRegEx": "35", "shortCiteRegEx": "35", "year": 2009}, {"title": "September). The INTERSPEECH 2010 paralinguistic challenge", "author": ["B. Schuller", "S. Steidl", "A. Batliner", "F. Burkhardt", "L. Devillers", "C.A. M\u00fcller", "S.S. Narayanan"], "venue": "In INTERSPEECH (Vol", "citeRegEx": "36", "shortCiteRegEx": "36", "year": 2010}, {"title": "Dropout: A simple way to prevent neural networks from overfitting.The", "author": ["N. Srivastava", "G. Hinton", "A. Krizhevsky", "I. Sutskever", "R. Salakhutdinov"], "venue": "Journal of Machine Learning Research,", "citeRegEx": "37", "shortCiteRegEx": "37", "year": 2014}, {"title": "Toward computational recognition of humorous intent", "author": ["J. Taylor", "L. Mazlack"], "venue": "In Proceedings of Cognitive Science Conference (pp. 2166-2171)", "citeRegEx": "38", "shortCiteRegEx": "38", "year": 2005}, {"title": "The role of physical embodiment in human-robot interaction", "author": ["J. Wainer", "D.J. Feil-Seifer", "D.A. Shell", "M.J. Matari\u0107"], "venue": "In Robot and Human Interactive Communication,", "citeRegEx": "39", "shortCiteRegEx": "39", "year": 2006}, {"title": "Effect of Non-linear Deep Architecture in Sequence Labeling", "author": ["M. Wang", "C.D. Manning"], "venue": "In IJCNLP (pp. 1285-1291)", "citeRegEx": "40", "shortCiteRegEx": "40", "year": 2013}, {"title": "The measurement of trust and its relationship to self-\u00ad\u2010 disclosure", "author": ["L.R. Wheeless", "J. Grotz"], "venue": "Human Communication Research,", "citeRegEx": "41", "shortCiteRegEx": "41", "year": 1977}], "referenceMentions": [{"referenceID": 38, "context": "One reason behind this might be something that has been studied by human-robot interaction researchers [39].", "startOffset": 103, "endOffset": 107}, {"referenceID": 33, "context": "It is known that physical embodiment of an intelligent system, whether in virtual simulation or in a robotic form, is important for users to feel related and empathize with the system [34].", "startOffset": 184, "endOffset": 188}, {"referenceID": 21, "context": "Roboticists make great efforts to build robots in anthropomorphic form so that humans can empathize with them [22], and to have embodied cognition [10].", "startOffset": 110, "endOffset": 114}, {"referenceID": 9, "context": "Roboticists make great efforts to build robots in anthropomorphic form so that humans can empathize with them [22], and to have embodied cognition [10].", "startOffset": 147, "endOffset": 151}, {"referenceID": 23, "context": "Zara\u2019s current task is a conversational MBTI personality assessor and we designed 6 categories of personality-assessing questions, in order to assess the user\u2019s personality [24].", "startOffset": 173, "endOffset": 177}, {"referenceID": 23, "context": "We designed a set of personal questions in six different domains in order to classify user personality from among sixteen different MBTI personality types [24].", "startOffset": 155, "endOffset": 159}, {"referenceID": 20, "context": "We use the output of the sentiment analysis from language and emotion recognition from speech as linguistic and speech cues to calculate the score for each personality dimension based on previous research [21].", "startOffset": 205, "endOffset": 209}, {"referenceID": 20, "context": "Summary of identified language cues for extraversion and various production levels [21]", "startOffset": 83, "endOffset": 87}, {"referenceID": 40, "context": "For instance, seeking disclosure reciprocity is not uncommon in human conversations [41].", "startOffset": 84, "endOffset": 88}, {"referenceID": 29, "context": "Avoidance in psychology is viewed as a coping mechanism in response to stress, fear, discomfort, or anxiety [30].", "startOffset": 108, "endOffset": 112}, {"referenceID": 25, "context": "Asking for clarification examples included \u201cCan you repeat?\u201d and \u201cCan you say it again?\u201d Clarification questions observed in this dataset are primarily non- reprise questions as a request to repeat a previous utterance [26].", "startOffset": 219, "endOffset": 223}, {"referenceID": 39, "context": "low level features into a single low-dimensional feature vector, performing the appropriate feature-selection [40].", "startOffset": 110, "endOffset": 114}, {"referenceID": 8, "context": "The first model we use is the Convolutional Neural Network [9], which is useful to obtain a fixed-length vector representation of an utterance, an audio signal or an image.", "startOffset": 59, "endOffset": 62}, {"referenceID": 14, "context": "The Long Short Term Memory (LSTM) [15] is instead useful to model time sequences where it is important to remember the past context.", "startOffset": 34, "endOffset": 38}, {"referenceID": 24, "context": "We train our acoustic models with the Kaldi speech recognition toolkit [25].", "startOffset": 71, "endOffset": 75}, {"referenceID": 2, "context": "One such model is called End-to-End Attention-based Large Vocabulary Speech Recognition [3].", "startOffset": 88, "endOffset": 91}, {"referenceID": 31, "context": "Other approach includes using Deep Convolutional Neural Nets instead of DNNs or GMMs [32].", "startOffset": 85, "endOffset": 89}, {"referenceID": 20, "context": "In recent years, we have seen successful systems that gave high classification accuracies on benchmark datasets of emotional speech [21] or music genres and moods [34].", "startOffset": 132, "endOffset": 136}, {"referenceID": 33, "context": "In recent years, we have seen successful systems that gave high classification accuracies on benchmark datasets of emotional speech [21] or music genres and moods [34].", "startOffset": 163, "endOffset": 167}, {"referenceID": 30, "context": "For our experiments on emotion recognition with raw audio, we built a dataset form the TED-LIUM corpus release 2 [31].", "startOffset": 113, "endOffset": 117}, {"referenceID": 13, "context": "time contribution is due to the computations inside the network [14], which with one", "startOffset": 64, "endOffset": 68}, {"referenceID": 3, "context": "We implement our CNN with the Theano framework [4].", "startOffset": 47, "endOffset": 50}, {"referenceID": 7, "context": "As a baseline we use a linear-kernel SVM model from the LibSVM [8] library with the INTERSPEECH 2009 emotion feature set [35], extracted with openSMILE [12].", "startOffset": 63, "endOffset": 66}, {"referenceID": 34, "context": "As a baseline we use a linear-kernel SVM model from the LibSVM [8] library with the INTERSPEECH 2009 emotion feature set [35], extracted with openSMILE [12].", "startOffset": 121, "endOffset": 125}, {"referenceID": 11, "context": "As a baseline we use a linear-kernel SVM model from the LibSVM [8] library with the INTERSPEECH 2009 emotion feature set [35], extracted with openSMILE [12].", "startOffset": 152, "endOffset": 156}, {"referenceID": 19, "context": "g, the smooth methods, maximum and minimum value, mean value of the features from the frames [20].", "startOffset": 93, "endOffset": 97}, {"referenceID": 15, "context": "Convolutional Neural Networks (CNNs) have recently achieved remarkably strong performance on the practically important task of sentence classification [16,17,18].", "startOffset": 151, "endOffset": 161}, {"referenceID": 16, "context": "Convolutional Neural Networks (CNNs) have recently achieved remarkably strong performance on the practically important task of sentence classification [16,17,18].", "startOffset": 151, "endOffset": 161}, {"referenceID": 17, "context": "Convolutional Neural Networks (CNNs) have recently achieved remarkably strong performance on the practically important task of sentence classification [16,17,18].", "startOffset": 151, "endOffset": 161}, {"referenceID": 0, "context": "Humor can be classified depending on the way they are intended to trigger laughter: common forms include irony, sarcasm, puns and nonsense [1].", "startOffset": 139, "endOffset": 142}, {"referenceID": 1, "context": "Spontaneous conversational humor typically follows a defined recurrent structure [2,38].", "startOffset": 81, "endOffset": 87}, {"referenceID": 37, "context": "Spontaneous conversational humor typically follows a defined recurrent structure [2,38].", "startOffset": 81, "endOffset": 87}, {"referenceID": 8, "context": "The first level is made of two Convolutional Neural Networks [9] to encode each individual utterance from word embedding vectors, and the audio track associated from a set of frame-level features.", "startOffset": 61, "endOffset": 64}, {"referenceID": 14, "context": "The language CNN is followed by a Long Short-Term Memory [15] to model the sequential context of the dialog.", "startOffset": 57, "endOffset": 61}, {"referenceID": 35, "context": "Previous work showed that acoustic utterance-level features (such as the INTERSPEECH 2010 paralinguistic challenge feature set [36]) are quite effective with simple classifiers such as logistic regression and conditional random fields, but yield suboptimal performance with DNN systems [5,13].", "startOffset": 127, "endOffset": 131}, {"referenceID": 4, "context": "Previous work showed that acoustic utterance-level features (such as the INTERSPEECH 2010 paralinguistic challenge feature set [36]) are quite effective with simple classifiers such as logistic regression and conditional random fields, but yield suboptimal performance with DNN systems [5,13].", "startOffset": 286, "endOffset": 292}, {"referenceID": 12, "context": "Previous work showed that acoustic utterance-level features (such as the INTERSPEECH 2010 paralinguistic challenge feature set [36]) are quite effective with simple classifiers such as logistic regression and conditional random fields, but yield suboptimal performance with DNN systems [5,13].", "startOffset": 286, "endOffset": 292}, {"referenceID": 27, "context": "Our Word2Vec model is trained on the text9 Wikipedia corpus using gensim implementation [28].", "startOffset": 88, "endOffset": 92}, {"referenceID": 11, "context": "We then extract for each frame a vector of low level acoustic and prosodic features with openSMILE [12].", "startOffset": 99, "endOffset": 103}, {"referenceID": 12, "context": "Both past attempts in the literature [13] and our experiments on our", "startOffset": 37, "endOffset": 41}, {"referenceID": 5, "context": "Before the final softmax layer we incorporate some extra features not modeled by our neural network but which still add important contribution [6,7,27,29].", "startOffset": 143, "endOffset": 154}, {"referenceID": 6, "context": "Before the final softmax layer we incorporate some extra features not modeled by our neural network but which still add important contribution [6,7,27,29].", "startOffset": 143, "endOffset": 154}, {"referenceID": 26, "context": "Before the final softmax layer we incorporate some extra features not modeled by our neural network but which still add important contribution [6,7,27,29].", "startOffset": 143, "endOffset": 154}, {"referenceID": 28, "context": "Before the final softmax layer we incorporate some extra features not modeled by our neural network but which still add important contribution [6,7,27,29].", "startOffset": 143, "endOffset": 154}, {"referenceID": 36, "context": "We applied a dropout regularization layer [37] after the output of the LSTM and the audio CNN, the dropout coefficient was set to 0.", "startOffset": 42, "endOffset": 46}, {"referenceID": 3, "context": "The neural network was implemented with the Theano toolkit [4].", "startOffset": 59, "endOffset": 62}, {"referenceID": 18, "context": "As a first baseline for comparison we chose a Conditional Random Field [19] trained over a set of features [6] including the same features added at the end of our neural network, bag-of-ngrams, part of speech proportion, sentiment from SentiWordNet [11], antonyms, and a prosodic feature vector from the INTERSPEECH 2010 paralinguistic challenge [36].", "startOffset": 71, "endOffset": 75}, {"referenceID": 5, "context": "As a first baseline for comparison we chose a Conditional Random Field [19] trained over a set of features [6] including the same features added at the end of our neural network, bag-of-ngrams, part of speech proportion, sentiment from SentiWordNet [11], antonyms, and a prosodic feature vector from the INTERSPEECH 2010 paralinguistic challenge [36].", "startOffset": 107, "endOffset": 110}, {"referenceID": 10, "context": "As a first baseline for comparison we chose a Conditional Random Field [19] trained over a set of features [6] including the same features added at the end of our neural network, bag-of-ngrams, part of speech proportion, sentiment from SentiWordNet [11], antonyms, and a prosodic feature vector from the INTERSPEECH 2010 paralinguistic challenge [36].", "startOffset": 249, "endOffset": 253}, {"referenceID": 35, "context": "As a first baseline for comparison we chose a Conditional Random Field [19] trained over a set of features [6] including the same features added at the end of our neural network, bag-of-ngrams, part of speech proportion, sentiment from SentiWordNet [11], antonyms, and a prosodic feature vector from the INTERSPEECH 2010 paralinguistic challenge [36].", "startOffset": 346, "endOffset": 350}, {"referenceID": 22, "context": "We used the implementation from CRFSuite [23], with L2 regularization.", "startOffset": 41, "endOffset": 45}, {"referenceID": 6, "context": "In Table 5 we also compare the results of our best system on the Big Bang corpus with the system proposed in [7], where a LSTM is applied to a larger set of languageonly features, which includes one-hot word vectors and character-trigram input vectors in addition to Word2Vec.", "startOffset": 109, "endOffset": 112}], "year": 2016, "abstractText": "Since the late 1990s when speech companies began providing their customer-service software in the market, people have gotten used to speaking to machines. As people interact more often with voice and gesture controlled machines, they expect the machines to recognize different emotions, and understand other high level communication features such as humor, sarcasm and intention. In order to make such communication possible, the machines need an empathy module in them, which is a software system that can extract emotions from human speech and behavior and can decide the correct response of the robot. Although research on empathetic robots is still in the primary stage, current methods involve using signal processing techniques, sentiment analysis and machine learning algorithms to make robots that can \u2019understand\u2019 human emotion. Other aspects of human-robot interaction include facial expression and gesture recognition, as well as robot movement to convey emotion and intent. We propose Zara the Supergirl as a prototype system of empathetic robots. It is a software-based virtual android, with an animated cartoon character to present itself on the screen. She will get \u2019smarter\u2019 and more empathetic, by having machine learning algorithms, and gathering more data and learning from it. In this paper, we present our work so far in the areas of deep learning of emotion and sentiment recognition, as well as humor recognition. We hope to explore the future direction of android development and how it can help improve people's lives.", "creator": "Word"}}}