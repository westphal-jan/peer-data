{"id": "1606.02447", "review": {"conference": "ACL", "VERSION": "v1", "DATE_OF_SUBMISSION": "8-Jun-2016", "title": "Learning Language Games through Interaction", "abstract": "We introduce a new language learning setting relevant to building adaptive natural language interfaces. It is inspired by Wittgenstein's language games: a human wishes to accomplish some task (e.g., achieving a certain configuration of blocks), but can only communicate with a computer, who performs the actual actions (e.g., removing all red blocks). The computer initially knows nothing about language and therefore must learn it from scratch through interaction, while the human adapts to the computer's capabilities. We created a game in a blocks world and collected interactions from 100 people playing it. First, we analyze the humans' strategies, showing that using compositionality and avoiding synonyms correlates positively with task performance. Second, we compare computer strategies, showing how to quickly learn a semantic parsing model from scratch, and that modeling pragmatics further accelerates learning for successful players.", "histories": [["v1", "Wed, 8 Jun 2016 08:27:09 GMT  (304kb,D)", "http://arxiv.org/abs/1606.02447v1", "11 pages, ACL 2016"]], "COMMENTS": "11 pages, ACL 2016", "reviews": [], "SUBJECTS": "cs.CL cs.AI", "authors": ["sida i wang", "percy liang", "christopher d manning"], "accepted": true, "id": "1606.02447"}, "pdf": {"name": "1606.02447.pdf", "metadata": {"source": "CRF", "title": "Learning Language Games through Interaction", "authors": ["Sida I. Wang", "Percy Liang", "Christopher D. Manning"], "emails": ["sidaw@cs.stanford.edu", "pliang@cs.stanford.edu", "manning@cs.stanford.edu"], "sections": [{"heading": "1 Introduction", "text": "Wittgenstein (1953) famously said that language derives its meaning from use, and introduced the concept of language games to illustrate the fluidity and purpose-orientedness of language. He described how a builder B and an assistant A can use a primitive language consisting of four words\u2014 \u2018block\u2019, \u2018pillar\u2019, \u2018slab\u2019, \u2018beam\u2019\u2014to successfully communicate what block to pass from A to B. This is only one such language; many others would also work for accomplishing the cooperative goal.\nThis paper operationalizes and explores the idea of language games in a learning setting, which we call interactive learning through language games\n(ILLG). In the ILLG setting, the two parties do not initially speak a common language, but nonetheless need to collaboratively accomplish a goal. Specifically, we created a game called SHRDLURN,1 in homage to the seminal work of Winograd (1972). As shown in Figure 1, the objective is to transform a start state into a goal state, but the only action the human can take is entering an utterance. The computer parses the utterance and produces a ranked list of possible interpretations according to its current model. The human scrolls through the list and chooses the intended one, simultaneously advancing the state of the blocks and providing feedback to the computer. Both the human and the computer wish to reach the goal state\n1Demo: http://shrdlurn.sidaw.xyz\nar X\niv :1\n60 6.\n02 44\n7v 1\n[ cs\n.C L\n] 8\nJ un\n2 01\n6\n(only known to the human) with as little scrolling as possible. For the computer to be successful, it has to learn the human\u2019s language quickly over the course of the game, so that the human can accomplish the goal more efficiently. Conversely, the human must also accommodate the computer, at least partially understanding what it can and cannot do.\nWe model the computer in the ILLG as a semantic parser (Section 3), which maps natural language utterances (e.g., \u2018remove red\u2019) into logical forms (e.g., remove(with(red))). The semantic parser has no seed lexicon and no annotated logical forms, so it just generates many candidate logical forms. Based on the human\u2019s feedback, it performs online gradient updates on the parameters corresponding to simple lexical features.\nDuring development, it became evident that while the computer was eventually able to learn the language, it was learning less quickly than one might hope. For example, after learning that \u2018remove red\u2019 maps to remove(with(red)), it would think that \u2018remove cyan\u2019 also mapped to remove(with(red)), whereas a human would likely use mutual exclusivity to rule out that hypothesis (Markman and Wachtel, 1988). We therefore introduce a pragmatics model in which the computer explicitly reasons about the human, in the spirit of previous work on pragmatics (Golland et al., 2010; Frank and Goodman, 2012; Smith et al., 2013). To make the model suitable for our ILLG setting, we introduce a new online learning algorithm. Empirically, we show that our pragmatic model improves the online accuracy by 8% compared to our best non-pragmatic model on the 10 most successful players (Section 5.3).\nWhat is special about the ILLG setting is the real-time nature of learning, in which the human also learns and adapts to the computer. While the human can teach the computer any language\u2014 English, Arabic, Polish, a custom programming language\u2014a good human player will choose to use utterances that the computer is more likely to learn quickly. In the parlance of communication theory, the human accommodates the computer (Giles, 2008; Ireland et al., 2011). Using Amazon Mechanical Turk, we collected and analyzed around 10k utterances from 100 games of SHRDLURN. We show that successful players tend to use compositional utterances with a consistent vocabulary and syntax, which matches the inductive biases of the computer (Section 5.2). In addition,\nthrough this interaction, many players adapt to the computer by becoming more consistent, more precise, and more concise.\nOn the practical side, natural language systems are often trained once and deployed, and users must live with their imperfections. We believe that studying the ILLG setting will be integral for creating adaptive and customizable systems, especially for resource-poor languages and new domains where starting from close to scratch is unavoidable."}, {"heading": "2 Setting", "text": "We now describe the interactive learning of language games (ILLG) setting formally. There are two players, the human and the computer. The game proceeds through a fixed number of levels. In each level, both players are presented with a starting state s \u2208 Y , but only the human sees the goal state t \u2208 Y . (e.g. in SHRDLURN, Y is the set of all configurations of blocks). The human transmits an utterance x (e.g., \u2018remove red\u2019) to the computer. The computer then constructs a ranked list of candidate actions Z = [z1, . . . , zK ] \u2286 Z (e.g., remove(with(red)), add(with(orange)), etc.), where Z is all possible actions. For each zi \u2208 Z, it computes yi = JziKs, the successor state from executing action zi on state s. The computer returns to the human the ordered list Y = [y1, . . . , yK ] of successor states. The human then chooses yi from the list Y (we say the computer is correct if i = 1). The state then updates to s = yi. The level ends when s = t, and the players advance to the next level.\nSince only the human knows the goal state t and only the computer can perform actions, the only way for the two to play the game successfully is for the human to somehow encode the desired action in the utterance x. However, we assume the two players do not have a shared language, so the human needs to pick a language and teach it to the computer. As an additional twist, the human does not know the exact set of actions Z (although they might have some preconception of the computer\u2019s capabilities).2 Finally, the human only sees the outcomes of the computer\u2019s actions, not the actual logical actions themselves.\nWe expect the game to proceed as follows: In the beginning, the computer does not understand\n2This is often the case when we try to interact with a new software system or service before reading the manual.\nwhat the human is saying and performs arbitrary actions. As the computer obtains feedback and learns, the two should become more proficient at communicating and thus playing the game. Herein lies our key design principle: language learning should be necessary for the players to achieve good game performance.\nSHRDLURN. Let us now describe the details of our specific game, SHRDLURN. Each state s \u2208 Y consists of stacks of colored blocks arranged in a line (Figure 1), where each stack is a vertical column of blocks. The actions Z are defined compositionally via the grammar in Table 1. Each action either adds to or removes from a set of stacks, and a set of stacks is computed via various set operations and selecting by color. For example, the action remove(leftmost(with(red))) removes the top block from the leftmost stack whose topmost block is red. The compositionality of the actions gives the computer non-trivial capabilities. Of course, the human must teach a language to harness those capabilities, while not quite knowing the exact extent of the capabilities. The actual game proceeds according to a curriculum, where the earlier levels only need simpler actions with fewer predicates.\nWe designed SHRDLURN in this way for several reasons. First, visual block manipulations are intuitive and can be easily crowdsourced, and it can be fun as an actual game that people would play. Second, the action space is designed to be compositional, mirroring the structure of natural language. Third, many actions z lead to the same successor state y = JzKs; e.g., the \u2018leftmost stack\u2019 might coincide with the \u2018stack with red blocks\u2019 for some state s and therefore an action involving either one would result in the same outcome. Since the human only points out the correct y, the computer must grapple with this indirect supervision, a reflection of real language learning."}, {"heading": "3 Semantic parsing model", "text": "Following Zettlemoyer and Collins (2005) and most recent work on semantic parsing, we use a log-linear model over logical forms (actions) z \u2208 Z given an utterance x:\np\u03b8(z | x) \u221d exp(\u03b8T\u03c6(x, z)), (1)\nwhere \u03c6(x, z) \u2208 Rd is a feature vector and \u03b8 \u2208 Rd is a parameter vector. The denotation y (succes-\nsor state) is obtained by executing z on a state s; formally, y = JzKs.\nFeatures. Our features are n-grams (including skip-grams) conjoined with tree-grams on the logical form side. Specifically, on the utterance side (e.g., \u2018stack red on orange\u2019), we use unigrams (\u2018stack\u2019, \u2217, \u2217), bigrams (\u2018red\u2019, \u2018on\u2019, \u2217), trigrams (\u2018red\u2019, \u2018on\u2019, \u2018orange\u2019), and skip-trigrams (\u2018stack\u2019, \u2217, \u2018on\u2019). On the logical form side, features corresponds to the predicates in the logical forms and their arguments. For each predicate h, let h.i be the i-th argument of h. Then, we define tree-gram features \u03c8(h, d) for predicate h and depth d = 0, 1, 2, 3 recursively as follows:\n\u03c8(h, 0) = {h}, \u03c8(h, d) = {(h, i, \u03c8(h.i, d\u2212 1)) | i = 1, 2, 3}.\nThe set of all features is just the cross product of utterance features and logical form features. For example, if x = \u2018enlever tout\u2019 and z = remove(all()), then features include:\n(\u2018enlever\u2019,all) (\u2018tout\u2019,all) (\u2018enlever\u2019,remove) (\u2018tout\u2019,remove) (\u2018enlever\u2019, (remove, 1,all)) (\u2018tout\u2019, (remove, 1,all))\nNote that we do not model an explicit alignment or derivation compositionally connecting the utterance and the logical form, in contrast to most traditional work in semantic parsing (Zettlemoyer and Collins, 2005; Wong and Mooney, 2007; Liang et al., 2011; Kwiatkowski et al., 2010; Berant et al., 2013), instead following a looser model of semantics similar to (Pasupat and Liang, 2015). Modeling explicit alignments or derivations is only computationally feasible when we are learning from annotated logical forms or have a seed lexicon, since the number of derivations is much larger than the number of logical forms. In the ILLG setting, neither are available.\nGeneration/parsing. We generate logical forms from smallest to largest using beam search. Specifically, for each size n = 1, . . . , 8, we construct a set of logical forms of size n (with exactly n predicates) by combining logical forms of smaller sizes according to the grammar rules in Table 1. For each n, we keep the 100 logical forms z with the highest score \u03b8T\u03c6(x, z) according to the current model \u03b8. Let Z be the set of logical forms on the final beam, which contains logical forms of all sizes n. During training, due to pruning at\nintermediate sizes, Z is not guaranteed to contain the logical form that obtains the observed state y. To mitigate this effect, we use a curriculum so that only simple actions are needed in the initial levels, giving the human an opportunity to teach the computer about basic terms such as colors first before moving to larger composite actions.\nThe system executes all of the logical forms on the final beam Z, and orders the resulting denotations y by the maximum probability of any logical form that produced it.3\nLearning. When the human provides feedback in the form of a particular y, the system forms the following loss function:\n`(\u03b8, x, y) = \u2212 log p\u03b8(y | x, s) + \u03bb||\u03b8||1, (2) p\u03b8(y | x, s) = \u2211\nz:JzKs=y p\u03b8(z | x). (3)\nThen it makes a single gradient update using AdaGrad (Duchi et al., 2010), which maintains a perfeature step size."}, {"heading": "4 Modeling pragmatics", "text": "In our initial experience with the semantic parsing model described in Section 3, we found that it was able to learn reasonably well, but lacked a reasoning ability that one finds in human learners. To illustrate the point, consider the beginning of a game when \u03b8 = 0 in the log-linear model p\u03b8(z | x). Suppose that human utters \u2018remove red\u2019 and then identifies\n3 We tried ordering based on the sum of the probabilities (which corresponds to marginalizing out the logical form), but this had the degenerate effect of assigning too much probability mass to y being the set of empty stacks, which can result from many actions.\nzrm-red = remove(with(red)) as the correct logical form. The computer then performs a gradient update on the loss function (2), upweighting features such as (\u2018remove\u2019,remove) and (\u2018remove\u2019,red).\nNext, suppose the human utters \u2018remove cyan\u2019. Note that zrm-red will score higher than all other formulas since the (\u2018remove\u2019,red) feature will fire again. While statistically justified, this behavior fails to meet our intuitive expectations for a smart language learner. Moreover, this behavior is not specific to our model, but applies to any statistical model that simply tries to fit the data without additional prior knowledge about the specific language. While we would not expect the computer to magically guess \u2018remove cyan\u2019 7\u2192 remove(with(cyan)), it should at least push down the probability of zrm-red because zrm-red intuitively is already well-explained by another utterance \u2018remove red\u2019.\nThis phenomenon, mutual exclusivity, was studied by Markman and Wachtel (1988). They found that children, during their language acquisition process, reject a second label for an object and treat it instead as a label for a novel object.\nThe pragmatic computer. To model mutual exclusivity formally, we turn to probabilistic models of pragmatics (Golland et al., 2010; Frank and Goodman, 2012; Smith et al., 2013; Goodman and Lassiter, 2015), which operationalize the ideas of Grice (1975). The central idea in these models is to treat language as a cooperative game between a speaker (human) and a listener (computer) as we are doing, but where the listener has an explicit model of the speaker\u2019s strategy, which in turn models the listener. Formally, let S(x | z) be the speaker\u2019s strategy and L(z | x) be the listener\u2019s\nstrategy. The speaker takes into account the literal semantic parsing model p\u03b8(z | x) as well as a prior over utterances p(x), while the listener considers the speaker S(x | z) and a prior p(z):\nS(x | z) \u221d (p\u03b8(z | x)p(x))\u03b2 , (4) L(z | x) \u221d S(x | z)p(z), (5)\nwhere \u03b2 \u2265 1 is a hyperparameter that sharpens the distribution (Smith et al., 2013). The computer would then use L(z | x) to rank candidates rather than p\u03b8. Note that our pragmatic model only affects the ranking of actions returned to the human and does not affect the gradient updates of the model p\u03b8.\nLet us walk through a simple example to see the effect of modeling pragmatics. Table 2 shows that the literal listener p\u03b8(z | x) assigns high probability to zrm-red for both \u2018remove red\u2019 and \u2018remove cyan\u2019. Assuming a uniform p(x) and \u03b2 = 1, the pragmatic speaker S(x | z) corresponds to normalizing each column of p\u03b8. Note that if the pragmatic speaker wanted to convey zrm-cyan, there is a decent chance that they would favor \u2018remove cyan\u2019. Next, assuming a uniform p(z), the pragmatic listener L(z | x) corresponds to normalizing each row of S(x | z). The result is that conditioned on \u2018remove cyan\u2019, zrm-cyan is now more likely than zrm-red, which is the desired effect.\nThe pragmatic listener models the speaker as a cooperative agent who behaves in a way to maximize communicative success. Certain speaker\nbehaviors such as avoiding synonyms (e.g., not \u2018delete cardinal\u2019) and using a consistent word ordering (e.g, not \u2018red remove\u2019) fall out of the game theory.4 For speakers that do not follow this strategy, our pragmatic model is incorrect, but as we get more data through game play, the literal listener p\u03b8(z | x) will sharpen, so that the literal listener and the pragmatic listener will coincide in the limit.\n\u2200z, C(z)\u2190 0 \u2200z,Q(z)\u2190 repeat\nreceive utterance x from human L(z | x) \u221d P (z)Q(z)p\u03b8(z | x) \u03b2 send human a list Y ranked by L(z | x) receive y \u2208 Y from human \u03b8 \u2190 \u03b8 \u2212 \u03b7\u2207\u03b8`(\u03b8, x, y) Q(z)\u2190 Q(z) + p\u03b8(z | x)\u03b2 C(z)\u2190 C(z) + p\u03b8(z | x, JzKs = y) P (z)\u2190 C(z)+\u03b1\u2211\nz\u2032:C(z\u2032)>0\n( C(z\u2032)+\u03b1 ) until game ends\nAlgorithm 1: Online learning algorithm that updates the parameters of the semantic parser \u03b8 as well as counts C,Q required to perform pragmatic reasoning.\nOnline learning with pragmatics. To implement the pragmatic listener as defined in (5), we need to compute the speaker\u2019s normalization constant \u2211 x p\u03b8(z | x)p(x) in order to compute S(x | z) in (4). This requires parsing all utterances x based on p\u03b8(z | x). To avoid this heavy computation in an online setting, we propose Algorithm 1, where some approximations are used for the sake of efficiency. First, to approximate the intractable sum over all utterances x, we only use the examples that are seen to compute the normalization constant \u2211 x p\u03b8(z | x)p(x) \u2248 \u2211 i p\u03b8(z | xi). Then, in order to avoid parsing all previous examples again using the current parameters for each new example, we store Q(z) = \u2211 i p\u03b8i(z | xi)\u03b2 , where \u03b8i is the parameter after the model updates on the ith example xi. While \u03b8i is different from the current parameter \u03b8, p\u03b8(z | xi) \u2248 p\u03b8i(z | xi) for the relevant example xi, which is accounted for\n4 Of course, synonyms and variable word order occur in real language. We would need a more complex game compared to SHRDLURN to capture this effect.\nby both \u03b8i and \u03b8. In Algorithm 1, the pragmatic listener L(z | x) can be interpreted as an importance-weighted version of the sharpened literal listener p\u03b2\u03b8 , where it is downweighted by Q(z), which reflects which z\u2019s the literal listener prefers, and upweighted by P (z), which is just a smoothed estimate of the actual distribution over logical forms p(z). By construction, Algorithm 1 is the same as (4) except that it uses the normalization constant Q based on stale parameters \u03b8i after seeing example, and it uses samples to compute the sum over x. Following (5), we also need p(z), which is estimated by P (z) using add-\u03b1 smoothing on the counts C(z). Note that Q(z) and C(z) are updated after the model parameters are updated for the current example.\nLastly, there is a small complication due to only observing the denotation y and not the logical form z. We simply give each consistent logical form {z | JzKs = y} a pseudocount based on the model: C(z) \u2190 C(z) + p\u03b8(z | x, JzKs = y) where p\u03b8(z | x, JzKs = y) \u221d exp(\u03b8T\u03c6(x, z)) for JzKs = y (0 otherwise).\nCompared to prior work where the setting is specifically designed to require pragmatic inference, pragmatics arises naturally in ILLG. We think that this form of pragmatics is the most important during learning, and becomes less important if we had more data. Indeed, if we have a lot of data and a small number of possible zs, then L(z|x) \u2248 p\u03b8(z|x) as \u2211 x p\u03b8(z|x)p(x) \u2192 p(z) when \u03b2 = 1.5 However, for semantic parsing, we would not be in this regime even if we have a large amount of training data. In particular, we are nowhere near that regime in SHRDLURN, and most of our utterances / logical forms are seen only once, and the importance of modeling pragmatics remains."}, {"heading": "5 Experiments", "text": ""}, {"heading": "5.1 Setting", "text": "Data. Using Amazon Mechanical Turk (AMT), we paid 100 workers 3 dollars each to play SHRDLURN. In total, we have 10223 utterances along with their starting states s. Of these, 8874 utterances are labeled with their denotations y; the rest are unlabeled, since the player can try any utterance without accepting an action. 100 players completed the entire game under identical settings.\n5Technically, we also need p\u03b8 to be well-specified.\nWe deliberately chose to start from scratch for every worker, so that we can study the diversity of strategies that different people used in a controlled setting.\nEach game consists of 50 blocks tasks divided into 5 levels of 10 tasks each, in increasing complexity. Each level aims to reach an end goal given a start state. Each game took on average 89 utterances to complete.6 It only took 6 hours to complete these 100 games on AMT and each game took around an hour on average according to AMT\u2019s work time tracker (which does not account for multi-tasking players). The players were provided minimal instructions on the game controls. Importantly, we gave no example utterances in order to avoid biasing their language use. Around 20 players were confused and told us that the instructions were not clear and gave us mostly spam utterances. Fortunately, most players understood the setting and some even enjoyed SHRDLURN as reflected by their optional comments:\n\u2022 That was probably the most fun thing I have ever done on mTurk. \u2022 Wow this was one mind bending games [sic].\nMetrics. We use the number of scrolls as a measure of game performance for each player. For each example, the number of scrolls is the position in the list Y of the action selected by the player. It was possible to complete this version of SHRDLURN by scrolling (all actions can be found in the first 125 of Y )\u201422 of the 100 players failed to teach an actual language, and instead finished the game mostly by scrolling. Let us call them spam players, who usually typed single letters, random words, digits, or random phrases (e.g. \u2018how are you\u2019). Overall, spam players had to scroll a lot: 21.6 scrolls per utterance versus only 7.4 for the non-spam players."}, {"heading": "5.2 Human strategies", "text": "Some example utterances can be found in Table 3. Most of the players used English, but vary in their adherence to conventions such as use of determiners, plurals, and proper word ordering. 5 players invented their own language, which are more precise, more consistent than general English. One player used Polish, and another used Polish notation (bottom of Table 3).\n6 This number is not 50 because some block tasks need multiple steps and players are also allowed to explore without reaching the goal.\nOverall, we find that many players adapt in ILLG by becoming more consistent, less verbose, and more precise, even if they used standard English at the beginning. For example, some players became more consistent over time (e.g. from using both \u2018remove\u2019 and \u2018discard\u2019 to only using \u2018remove\u2019). In terms of verbosity, removing function words like determiners as the game progresses is a common adaptation. In each of the following examples from different players, we compare an utterance that appeared early in the game to a similar utterance that appeared later: \u2018Remove the red ones\u2019 became \u2018Remove red.\u2019; \u2018add brown on top of red\u2019 became \u2018add orange on red\u2019; \u2018add red blocks to all red blocks\u2019 became \u2018add red to red\u2019; \u2018dark red\u2019 became \u2018red\u2019; one player used \u2018the\u2019 in all of the first 20 utterances, and then never used \u2018the\u2019 in the last 75 utterances.\nPlayers also vary in precision, ranging from overspecified (e.g. \u2018remove the orange cube at the left\u2019, \u2018remove red blocks from top row\u2019) to underspecified or requiring context (e.g. \u2018change colors\u2019, \u2018add one blue\u2019, \u2018Build more blocus\u2019, \u2018Move the blocks fool\u2019,\u2018Add two red cubes\u2019). We found that some players became more precise over time, as they gain a better understanding of ILLG.\nMost players use utterances that actually do not match our logical language in Table 1, even the successful players. In particular, numbers are often used. While some concepts always have the same effect in our blocks world (e.g. \u2018first block\u2019 means leftmost), most are different. More concretely, of the top 10 players, 7 used numbers of some form and only 3 players matched our logical language. Some players who did not match the logical language performed quite well neverthe-\nless. One possible explanation is because the action required is somewhat constrained by the logical language and some tokens can have unintended interpretations. For example, the computer can correctly interpret numerical positional references, as long as the player only refers to the leftmost and rightmost positions. So if the player says \u2018rem blk pos 4\u2019 and \u2018rem blk pos 1\u2019, the computer can interpret \u2018pos\u2019 as rightmost and interpret the bigram (\u2018pos\u2019, \u20181\u2019) as leftmost. On the other hand, players who deviated significantly by describing the desired state declaratively (e.g. \u2018red orange red\u2019, \u2018246\u2019) rather than using actions, or a coordinate system (e.g. \u2018row two column two\u2019) performed poorly. Although players do not have to match our logical language exactly to perform well, being similar is definitely helpful.\nCompositionality. As far as we can tell, all players used a compositional language; no one invented unrelated words for each action. Interestingly, 3 players did not put spaces between words. Since we assume monomorphemic words separated by spaces, they had to do a lot of scrolling as a result (e.g., 14.15 with utterances like \u2018orangeonorangerightmost\u2019)."}, {"heading": "5.3 Computer strategies", "text": "We now present quantitative results on how quickly the computer can learn, where our goal is to achieve high accuracy on new utterances as we make just a single pass over the data. The number of scrolls used to evaluate player is sensitive to outliers and not as intuitive as accuracy. Instead, we consider online accuracy, described as follows. Formally, if a player produced T utterances x(j) and labeled them y(j), then\nonline accuracy def= 1\nT T\u2211 j=1 I [ y(j) = Jz(j)Ks(j) ] ,\nwhere z(j) = argmaxz p\u03b8(j\u22121)(z|x(j)) is the model prediction based on the previous parameter \u03b8(j\u22121). Note that the online accuracy is defined with respect to the player-reported labels, which only corresponds to the actual accuracy if the player is precise and honest. This is not true for most spam players.\nCompositionality. To study the importance of compositionality, we consider two baselines. First, consider a non-compositional model (mem-\norize) that just remembers pairs of complete utterance and logical forms. We implement this using indicator features on features (x, z), e.g., (\u2018remove all the red blocks\u2019, zrm-red), and use a large learning rate. Second, we consider a model (half ) that treats utterances compositionally with unigrams, bigrams, and skip-trigrams features, but the logical forms are regarded as non-compositional, so we have features such as (\u2018remove\u2019, zrm-red), (\u2018red\u2019, zrm-red), etc.\nTable 4 shows that the full model (Section 3) significantly outperforms both the memorize and half baselines. The learning rate \u03b7 = 0.1 is selected via cross validation, and we used \u03b1 = 1 and \u03b2 = 3 following Smith et al. (2013).\nPragmatics. Next, we study the effect of pragmatics on online accuracy. Figure 2 shows that modeling pragmatics helps successful players (e.g., top 10 by number of scrolls) who use precise and consistent languages. Interestingly, our pragmatics model did not help and can even hurt the less successful players who are less precise and consistent. This is expected behavior: the pragmatics model assumes that the human is cooperative and behaving rationally. For the bottom half of the players, this assumption is not true, in which case the pragmatics model is not useful."}, {"heading": "6 Related Work and Discussion", "text": "Our work connects with a broad body of work on grounded language, in which language is used in some environment as a means towards some goal. Examples include playing games (Branavan et al., 2009, 2010; Reckman et al., 2010) interacting with robotics (Tellex et al., 2011, 2014), and following instructions (Vogel and Jurafsky, 2010; Chen and Mooney, 2011; Artzi and Zettlemoyer, 2013) Semantic parsing utterances to logical forms, which we leverage, plays an important role in these settings (Kollar et al., 2010; Matuszek et al., 2012; Artzi and Zettlemoyer, 2013).\nWhat makes this work unique is our new interactive learning of language games (ILLG) setting, in which a model has to learn a language from scratch through interaction. While online gradient descent is frequently used, for example in semantic parsing (Zettlemoyer and Collins, 2007; Chen, 2012), we using it in a truly online setting, taking one pass over the data and measuring online accuracy (Cesa-Bianchi and Lugosi, 2006).\nTo speed up learning, we leverage computational models of pragmatics (J\u00e4ger, 2008; Golland et al., 2010; Frank and Goodman, 2012; Smith et al., 2013; Vogel et al., 2013). The main difference is these previous works use pragmatics with a trained base model, whereas we learn the model online. Monroe and Potts (2015) uses learning to improve the pragmatics model. In contrast, we use pragmatics to speed up the learning process by capturing phenomena like mutual exclusivity (Markman and Wachtel, 1988). We also differ from prior work in several details. First, we model pragmatics in the online learning setting where we use an online update for the pragmatics model. Second, unlikely the reference games where pragmatic effects plays an important role by\ndesign, SHRDLURN is not specifically designed to require pragmatics. The improvement we get is mainly due to players trying to be consistent in their language use. Finaly, we treat both the utterance and the logical forms as featurized compositional objects. Smith et al. (2013) treats utterances (i.e. words) and logical forms (i.e. objects) as categories; Monroe and Potts (2015) used features, but also over flat categories.\nLooking forward, we believe that the ILLG setting is worth studying and has important implications for natural language interfaces. Today, these systems are trained once and deployed. If these systems could quickly adapt to user feedback in real-time as in this work, then we might be able to more readily create systems for resource-poor languages and new domains, that are customizable and improve through use."}, {"heading": "Acknowledgments", "text": "DARPA Communicating with Computers (CwC) program under ARO prime contract no. W911NF15-1-0462. The first author is supported by a NSERC PGS-D fellowship. In addition, we thank Will Monroe, and Chris Potts for their insightful comments and discussions on pragmatics.\nReproducibility\nAll code, data, and experiments for this paper are available on the CodaLab platform: https://worksheets.\ncodalab.org/worksheets/\n0x9fe4d080bac944e9a6bd58478cb05e5e The client side code is here: https://github.com/sidaw/shrdlurn/tree/\nacl16-demo and a demo: http://shrdlurn.sidaw.xyz"}], "references": [{"title": "Weakly supervised learning of semantic parsers for mapping instructions to actions", "author": ["Y. Artzi", "L. Zettlemoyer."], "venue": "Transactions of the Association for Computational Linguistics (TACL) 1:49\u201362.", "citeRegEx": "Artzi and Zettlemoyer.,? 2013", "shortCiteRegEx": "Artzi and Zettlemoyer.", "year": 2013}, {"title": "Semantic parsing on Freebase from questionanswer pairs", "author": ["J. Berant", "A. Chou", "R. Frostig", "P. Liang."], "venue": "Empirical Methods in Natural Language Processing (EMNLP).", "citeRegEx": "Berant et al\\.,? 2013", "shortCiteRegEx": "Berant et al\\.", "year": 2013}, {"title": "Reinforcement learning", "author": ["S. Branavan", "H. Chen", "L.S. Zettlemoyer", "R. Barzilay"], "venue": null, "citeRegEx": "Branavan et al\\.,? \\Q2009\\E", "shortCiteRegEx": "Branavan et al\\.", "year": 2009}, {"title": "Reading between the lines: Learning to map high-level instructions to commands", "author": ["S. Branavan", "L. Zettlemoyer", "R. Barzilay."], "venue": "Association for Computational Linguistics (ACL). pages 1268\u20131277.", "citeRegEx": "Branavan et al\\.,? 2010", "shortCiteRegEx": "Branavan et al\\.", "year": 2010}, {"title": "Prediction, learning, and games", "author": ["N. Cesa-Bianchi", "G. Lugosi."], "venue": "Cambridge University Press.", "citeRegEx": "Cesa.Bianchi and Lugosi.,? 2006", "shortCiteRegEx": "Cesa.Bianchi and Lugosi.", "year": 2006}, {"title": "Fast online lexicon learning for grounded language acquisition", "author": ["D.L. Chen."], "venue": "Association for Computational Linguistics (ACL).", "citeRegEx": "Chen.,? 2012", "shortCiteRegEx": "Chen.", "year": 2012}, {"title": "Learning to interpret natural language navigation instructions from observations", "author": ["D.L. Chen", "R.J. Mooney."], "venue": "Association for the Advancement of Artificial Intelligence (AAAI). pages 859\u2013865.", "citeRegEx": "Chen and Mooney.,? 2011", "shortCiteRegEx": "Chen and Mooney.", "year": 2011}, {"title": "Adaptive subgradient methods for online learning and stochastic optimization", "author": ["J. Duchi", "E. Hazan", "Y. Singer."], "venue": "Conference on Learning Theory (COLT).", "citeRegEx": "Duchi et al\\.,? 2010", "shortCiteRegEx": "Duchi et al\\.", "year": 2010}, {"title": "Predicting pragmatic reasoning in language games", "author": ["M. Frank", "N.D. Goodman."], "venue": "Science 336:998\u2013998.", "citeRegEx": "Frank and Goodman.,? 2012", "shortCiteRegEx": "Frank and Goodman.", "year": 2012}, {"title": "Communication accommodation theory", "author": ["H. Giles."], "venue": "Sage Publications, Inc.", "citeRegEx": "Giles.,? 2008", "shortCiteRegEx": "Giles.", "year": 2008}, {"title": "A gametheoretic approach to generating spatial descriptions", "author": ["D. Golland", "P. Liang", "D. Klein."], "venue": "Empirical Methods in Natural Language Processing (EMNLP).", "citeRegEx": "Golland et al\\.,? 2010", "shortCiteRegEx": "Golland et al\\.", "year": 2010}, {"title": "Probabilistic Semantics and Pragmatics: Uncertainty in Language and Thought", "author": ["N. Goodman", "D. Lassiter."], "venue": "The Handbook of Contemporary Semantic Theory, 2nd Edition WileyBlackwell.", "citeRegEx": "Goodman and Lassiter.,? 2015", "shortCiteRegEx": "Goodman and Lassiter.", "year": 2015}, {"title": "Logic and conversation", "author": ["H.P. Grice."], "venue": "Syntax and semantics 3:41\u201358.", "citeRegEx": "Grice.,? 1975", "shortCiteRegEx": "Grice.", "year": 1975}, {"title": "Language style matching predicts relationship initiation and stability", "author": ["M.E. Ireland", "R.B. Slatcher", "P.W. Eastwick", "L.E. Scissors", "E.J. Finkel", "J.W. Pennebaker."], "venue": "Psychological Science 22(1):39\u201344.", "citeRegEx": "Ireland et al\\.,? 2011", "shortCiteRegEx": "Ireland et al\\.", "year": 2011}, {"title": "Game theory in semantics and pragmatics", "author": ["G. J\u00e4ger."], "venue": "Technical report, University of T\u00fcbingen.", "citeRegEx": "J\u00e4ger.,? 2008", "shortCiteRegEx": "J\u00e4ger.", "year": 2008}, {"title": "Grounding verbs of motion in natural language commands to robots", "author": ["T. Kollar", "S. Tellex", "D. Roy", "N. Roy."], "venue": "International Symposium on Experimental Robotics (ISER).", "citeRegEx": "Kollar et al\\.,? 2010", "shortCiteRegEx": "Kollar et al\\.", "year": 2010}, {"title": "Inducing probabilistic CCG grammars from logical form with higherorder unification", "author": ["T. Kwiatkowski", "L. Zettlemoyer", "S. Goldwater", "M. Steedman."], "venue": "Empirical Methods in Natural Language Processing (EMNLP). pages", "citeRegEx": "Kwiatkowski et al\\.,? 2010", "shortCiteRegEx": "Kwiatkowski et al\\.", "year": 2010}, {"title": "Learning dependency-based compositional semantics", "author": ["P. Liang", "M.I. Jordan", "D. Klein."], "venue": "Association for Computational Linguistics (ACL). pages 590\u2013599.", "citeRegEx": "Liang et al\\.,? 2011", "shortCiteRegEx": "Liang et al\\.", "year": 2011}, {"title": "Children\u2019s use of mutual exclusivity to constrain the meanings of words", "author": ["E. Markman", "G.F. Wachtel."], "venue": "Cognitive Psychology 20:125\u2013 157.", "citeRegEx": "Markman and Wachtel.,? 1988", "shortCiteRegEx": "Markman and Wachtel.", "year": 1988}, {"title": "A joint model of language and perception for grounded attribute learning", "author": ["C. Matuszek", "N. FitzGerald", "L. Zettlemoyer", "L. Bo", "D. Fox."], "venue": "International Conference on Machine Learning (ICML). pages 1671\u20131678.", "citeRegEx": "Matuszek et al\\.,? 2012", "shortCiteRegEx": "Matuszek et al\\.", "year": 2012}, {"title": "Learning in the Rational Speech Acts model", "author": ["W. Monroe", "C. Potts."], "venue": "Proceedings of 20th Amsterdam Colloquium.", "citeRegEx": "Monroe and Potts.,? 2015", "shortCiteRegEx": "Monroe and Potts.", "year": 2015}, {"title": "Compositional semantic parsing on semi-structured tables", "author": ["P. Pasupat", "P. Liang."], "venue": "Association for Computational Linguistics (ACL).", "citeRegEx": "Pasupat and Liang.,? 2015", "shortCiteRegEx": "Pasupat and Liang.", "year": 2015}, {"title": "Learning meanings of words and constructions, grounded in a virtual game", "author": ["H. Reckman", "J. Orkin", "D. Roy."], "venue": "Conference on Natural Language Processing (KONVENS).", "citeRegEx": "Reckman et al\\.,? 2010", "shortCiteRegEx": "Reckman et al\\.", "year": 2010}, {"title": "Learning and using language via recursive pragmatic reasoning about other agents", "author": ["N.J. Smith", "N.D. Goodman", "M.C. Frank."], "venue": "Advances in Neural Information Processing Systems (NIPS).", "citeRegEx": "Smith et al\\.,? 2013", "shortCiteRegEx": "Smith et al\\.", "year": 2013}, {"title": "Asking for help using inverse semantics", "author": ["S. Tellex", "R. Knepper", "A. Li", "D. Rus", "N. Roy."], "venue": "Robotics: Science and Systems (RSS).", "citeRegEx": "Tellex et al\\.,? 2014", "shortCiteRegEx": "Tellex et al\\.", "year": 2014}, {"title": "Understanding natural language commands for robotic navigation and mobile manipulation", "author": ["S. Tellex", "T. Kollar", "S. Dickerson", "M.R. Walter", "A.G. Banerjee", "S.J. Teller", "N. Roy."], "venue": "Association for the Advancement of Artificial", "citeRegEx": "Tellex et al\\.,? 2011", "shortCiteRegEx": "Tellex et al\\.", "year": 2011}, {"title": "Emergence of gricean maxims", "author": ["A. Vogel", "M. Bodoia", "C. Potts", "D. Jurafsky"], "venue": null, "citeRegEx": "Vogel et al\\.,? \\Q2013\\E", "shortCiteRegEx": "Vogel et al\\.", "year": 2013}, {"title": "Learning to follow navigational directions", "author": ["A. Vogel", "D. Jurafsky."], "venue": "Association for Computational Linguistics (ACL). pages 806\u2013 814.", "citeRegEx": "Vogel and Jurafsky.,? 2010", "shortCiteRegEx": "Vogel and Jurafsky.", "year": 2010}, {"title": "Understanding Natural Language", "author": ["T. Winograd."], "venue": "Academic Press.", "citeRegEx": "Winograd.,? 1972", "shortCiteRegEx": "Winograd.", "year": 1972}, {"title": "Philosophical Investigations", "author": ["L. Wittgenstein."], "venue": "Blackwell, Oxford.", "citeRegEx": "Wittgenstein.,? 1953", "shortCiteRegEx": "Wittgenstein.", "year": 1953}, {"title": "Learning synchronous grammars for semantic parsing with lambda calculus", "author": ["Y.W. Wong", "R.J. Mooney."], "venue": "Association for Computational Linguistics (ACL). pages 960\u2013967.", "citeRegEx": "Wong and Mooney.,? 2007", "shortCiteRegEx": "Wong and Mooney.", "year": 2007}, {"title": "Learning to map sentences to logical form: Structured classification with probabilistic categorial grammars", "author": ["L.S. Zettlemoyer", "M. Collins."], "venue": "Uncertainty in Artificial Intelligence (UAI). pages 658\u2013666.", "citeRegEx": "Zettlemoyer and Collins.,? 2005", "shortCiteRegEx": "Zettlemoyer and Collins.", "year": 2005}, {"title": "Online learning of relaxed CCG grammars for parsing to logical form", "author": ["L.S. Zettlemoyer", "M. Collins."], "venue": "Empirical Methods in Natural Language Processing and Computational Natural Language Learning (EMNLP/CoNLL).", "citeRegEx": "Zettlemoyer and Collins.,? 2007", "shortCiteRegEx": "Zettlemoyer and Collins.", "year": 2007}], "referenceMentions": [{"referenceID": 28, "context": "Specifically, we created a game called SHRDLURN,1 in homage to the seminal work of Winograd (1972). As shown in Figure 1, the objective is to transform a start state into a goal state, but the only action the human can take is entering an utterance.", "startOffset": 83, "endOffset": 99}, {"referenceID": 18, "context": "would likely use mutual exclusivity to rule out that hypothesis (Markman and Wachtel, 1988).", "startOffset": 64, "endOffset": 91}, {"referenceID": 9, "context": "In the parlance of communication theory, the human accommodates the computer (Giles, 2008; Ireland et al., 2011).", "startOffset": 77, "endOffset": 112}, {"referenceID": 13, "context": "In the parlance of communication theory, the human accommodates the computer (Giles, 2008; Ireland et al., 2011).", "startOffset": 77, "endOffset": 112}, {"referenceID": 31, "context": "Following Zettlemoyer and Collins (2005) and most recent work on semantic parsing, we use a log-linear model over logical forms (actions) z \u2208 Z given an utterance x:", "startOffset": 10, "endOffset": 41}, {"referenceID": 31, "context": "ance and the logical form, in contrast to most traditional work in semantic parsing (Zettlemoyer and Collins, 2005; Wong and Mooney, 2007; Liang et al., 2011; Kwiatkowski et al., 2010; Berant et al., 2013), instead following a looser model of semantics similar to (Pasupat and Liang, 2015).", "startOffset": 84, "endOffset": 205}, {"referenceID": 30, "context": "ance and the logical form, in contrast to most traditional work in semantic parsing (Zettlemoyer and Collins, 2005; Wong and Mooney, 2007; Liang et al., 2011; Kwiatkowski et al., 2010; Berant et al., 2013), instead following a looser model of semantics similar to (Pasupat and Liang, 2015).", "startOffset": 84, "endOffset": 205}, {"referenceID": 17, "context": "ance and the logical form, in contrast to most traditional work in semantic parsing (Zettlemoyer and Collins, 2005; Wong and Mooney, 2007; Liang et al., 2011; Kwiatkowski et al., 2010; Berant et al., 2013), instead following a looser model of semantics similar to (Pasupat and Liang, 2015).", "startOffset": 84, "endOffset": 205}, {"referenceID": 16, "context": "ance and the logical form, in contrast to most traditional work in semantic parsing (Zettlemoyer and Collins, 2005; Wong and Mooney, 2007; Liang et al., 2011; Kwiatkowski et al., 2010; Berant et al., 2013), instead following a looser model of semantics similar to (Pasupat and Liang, 2015).", "startOffset": 84, "endOffset": 205}, {"referenceID": 1, "context": "ance and the logical form, in contrast to most traditional work in semantic parsing (Zettlemoyer and Collins, 2005; Wong and Mooney, 2007; Liang et al., 2011; Kwiatkowski et al., 2010; Berant et al., 2013), instead following a looser model of semantics similar to (Pasupat and Liang, 2015).", "startOffset": 84, "endOffset": 205}, {"referenceID": 21, "context": ", 2013), instead following a looser model of semantics similar to (Pasupat and Liang, 2015).", "startOffset": 66, "endOffset": 91}, {"referenceID": 7, "context": "Then it makes a single gradient update using AdaGrad (Duchi et al., 2010), which maintains a perfeature step size.", "startOffset": 53, "endOffset": 73}, {"referenceID": 18, "context": "This phenomenon, mutual exclusivity, was studied by Markman and Wachtel (1988). They found that children, during their language acquisition process, reject a second label for an object and treat it instead as a label for a novel object.", "startOffset": 52, "endOffset": 79}, {"referenceID": 10, "context": "To model mutual exclusivity formally, we turn to probabilistic models of pragmatics (Golland et al., 2010; Frank and Goodman, 2012; Smith et al., 2013; Goodman and Lassiter, 2015), which operationalize the ideas of Grice (1975).", "startOffset": 84, "endOffset": 179}, {"referenceID": 8, "context": "To model mutual exclusivity formally, we turn to probabilistic models of pragmatics (Golland et al., 2010; Frank and Goodman, 2012; Smith et al., 2013; Goodman and Lassiter, 2015), which operationalize the ideas of Grice (1975).", "startOffset": 84, "endOffset": 179}, {"referenceID": 23, "context": "To model mutual exclusivity formally, we turn to probabilistic models of pragmatics (Golland et al., 2010; Frank and Goodman, 2012; Smith et al., 2013; Goodman and Lassiter, 2015), which operationalize the ideas of Grice (1975).", "startOffset": 84, "endOffset": 179}, {"referenceID": 11, "context": "To model mutual exclusivity formally, we turn to probabilistic models of pragmatics (Golland et al., 2010; Frank and Goodman, 2012; Smith et al., 2013; Goodman and Lassiter, 2015), which operationalize the ideas of Grice (1975).", "startOffset": 84, "endOffset": 179}, {"referenceID": 8, "context": ", 2010; Frank and Goodman, 2012; Smith et al., 2013; Goodman and Lassiter, 2015), which operationalize the ideas of Grice (1975). The central idea in these models is to treat language as a cooperative game between a speaker (human) and a listener (computer) as we are doing, but where the listener has an explicit model of the speaker\u2019s strategy, which in turn models the listener.", "startOffset": 8, "endOffset": 129}, {"referenceID": 23, "context": "where \u03b2 \u2265 1 is a hyperparameter that sharpens the distribution (Smith et al., 2013).", "startOffset": 63, "endOffset": 83}, {"referenceID": 23, "context": "1 is selected via cross validation, and we used \u03b1 = 1 and \u03b2 = 3 following Smith et al. (2013).", "startOffset": 74, "endOffset": 94}, {"referenceID": 22, "context": "Examples include playing games (Branavan et al., 2009, 2010; Reckman et al., 2010) interacting with", "startOffset": 31, "endOffset": 82}, {"referenceID": 27, "context": ", 2011, 2014), and following instructions (Vogel and Jurafsky, 2010; Chen and Mooney, 2011; Artzi and Zettlemoyer, 2013) Semantic parsing utterances to logical forms, which we leverage, plays an important role in these set-", "startOffset": 42, "endOffset": 120}, {"referenceID": 6, "context": ", 2011, 2014), and following instructions (Vogel and Jurafsky, 2010; Chen and Mooney, 2011; Artzi and Zettlemoyer, 2013) Semantic parsing utterances to logical forms, which we leverage, plays an important role in these set-", "startOffset": 42, "endOffset": 120}, {"referenceID": 0, "context": ", 2011, 2014), and following instructions (Vogel and Jurafsky, 2010; Chen and Mooney, 2011; Artzi and Zettlemoyer, 2013) Semantic parsing utterances to logical forms, which we leverage, plays an important role in these set-", "startOffset": 42, "endOffset": 120}, {"referenceID": 15, "context": "tings (Kollar et al., 2010; Matuszek et al., 2012; Artzi and Zettlemoyer, 2013).", "startOffset": 6, "endOffset": 79}, {"referenceID": 19, "context": "tings (Kollar et al., 2010; Matuszek et al., 2012; Artzi and Zettlemoyer, 2013).", "startOffset": 6, "endOffset": 79}, {"referenceID": 0, "context": "tings (Kollar et al., 2010; Matuszek et al., 2012; Artzi and Zettlemoyer, 2013).", "startOffset": 6, "endOffset": 79}, {"referenceID": 4, "context": "2012), we using it in a truly online setting, taking one pass over the data and measuring online accuracy (Cesa-Bianchi and Lugosi, 2006).", "startOffset": 106, "endOffset": 137}, {"referenceID": 14, "context": "To speed up learning, we leverage computational models of pragmatics (J\u00e4ger, 2008; Golland et al., 2010; Frank and Goodman, 2012; Smith et al., 2013; Vogel et al., 2013).", "startOffset": 69, "endOffset": 169}, {"referenceID": 10, "context": "To speed up learning, we leverage computational models of pragmatics (J\u00e4ger, 2008; Golland et al., 2010; Frank and Goodman, 2012; Smith et al., 2013; Vogel et al., 2013).", "startOffset": 69, "endOffset": 169}, {"referenceID": 8, "context": "To speed up learning, we leverage computational models of pragmatics (J\u00e4ger, 2008; Golland et al., 2010; Frank and Goodman, 2012; Smith et al., 2013; Vogel et al., 2013).", "startOffset": 69, "endOffset": 169}, {"referenceID": 23, "context": "To speed up learning, we leverage computational models of pragmatics (J\u00e4ger, 2008; Golland et al., 2010; Frank and Goodman, 2012; Smith et al., 2013; Vogel et al., 2013).", "startOffset": 69, "endOffset": 169}, {"referenceID": 26, "context": "To speed up learning, we leverage computational models of pragmatics (J\u00e4ger, 2008; Golland et al., 2010; Frank and Goodman, 2012; Smith et al., 2013; Vogel et al., 2013).", "startOffset": 69, "endOffset": 169}, {"referenceID": 18, "context": "In contrast, we use pragmatics to speed up the learning process by capturing phenomena like mutual exclusivity (Markman and Wachtel, 1988).", "startOffset": 111, "endOffset": 138}, {"referenceID": 8, "context": ", 2010; Frank and Goodman, 2012; Smith et al., 2013; Vogel et al., 2013). The main difference is these previous works use pragmatics with a trained base model, whereas we learn the model online. Monroe and Potts (2015) uses learning to improve the pragmatics model.", "startOffset": 8, "endOffset": 219}, {"referenceID": 8, "context": ", 2010; Frank and Goodman, 2012; Smith et al., 2013; Vogel et al., 2013). The main difference is these previous works use pragmatics with a trained base model, whereas we learn the model online. Monroe and Potts (2015) uses learning to improve the pragmatics model. In contrast, we use pragmatics to speed up the learning process by capturing phenomena like mutual exclusivity (Markman and Wachtel, 1988). We also differ from prior work in several details. First, we model pragmatics in the online learning setting where we use an online update for the pragmatics model. Second, unlikely the reference games where pragmatic effects plays an important role by design, SHRDLURN is not specifically designed to require pragmatics. The improvement we get is mainly due to players trying to be consistent in their language use. Finaly, we treat both the utterance and the logical forms as featurized compositional objects. Smith et al. (2013) treats utterances (i.", "startOffset": 8, "endOffset": 938}, {"referenceID": 8, "context": ", 2010; Frank and Goodman, 2012; Smith et al., 2013; Vogel et al., 2013). The main difference is these previous works use pragmatics with a trained base model, whereas we learn the model online. Monroe and Potts (2015) uses learning to improve the pragmatics model. In contrast, we use pragmatics to speed up the learning process by capturing phenomena like mutual exclusivity (Markman and Wachtel, 1988). We also differ from prior work in several details. First, we model pragmatics in the online learning setting where we use an online update for the pragmatics model. Second, unlikely the reference games where pragmatic effects plays an important role by design, SHRDLURN is not specifically designed to require pragmatics. The improvement we get is mainly due to players trying to be consistent in their language use. Finaly, we treat both the utterance and the logical forms as featurized compositional objects. Smith et al. (2013) treats utterances (i.e. words) and logical forms (i.e. objects) as categories; Monroe and Potts (2015) used features, but also over flat categories.", "startOffset": 8, "endOffset": 1041}], "year": 2016, "abstractText": "We introduce a new language learning setting relevant to building adaptive natural language interfaces. It is inspired by Wittgenstein\u2019s language games: a human wishes to accomplish some task (e.g., achieving a certain configuration of blocks), but can only communicate with a computer, who performs the actual actions (e.g., removing all red blocks). The computer initially knows nothing about language and therefore must learn it from scratch through interaction, while the human adapts to the computer\u2019s capabilities. We created a game called SHRDLURN in a blocks world and collected interactions from 100 people playing it. First, we analyze the humans\u2019 strategies, showing that using compositionality and avoiding synonyms correlates positively with task performance. Second, we compare computer strategies, showing that modeling pragmatics on a semantic parsing model accelerates learning for more strategic players.", "creator": "LaTeX with hyperref package"}}}