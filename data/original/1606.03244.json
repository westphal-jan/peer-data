{"id": "1606.03244", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "10-Jun-2016", "title": "Simple epistemic planning: generalised gossiping", "abstract": "The gossip problem, in which information (known as secrets) must be shared among a certain number of agents using the minimum number of calls, is of interest in the conception of communication networks and protocols. We extend the gossip problem to arbitrary epistemic depths. For example, we may require not only that all agents know all secrets but also that all agents know that all agents know all secrets. We give optimal protocols for various versions of the generalised gossip problem, depending on the graph of communication links, in the case of two-way communications, one-way communications and parallel communication. We also study different variants which allow us to impose negative goals such as that certain agents must not know certain secrets. We show that in the presence of negative goals testing the existence of a successful protocol is NP-complete whereas this is always polynomial-time in the case of purely positive goals.", "histories": [["v1", "Fri, 10 Jun 2016 09:31:26 GMT  (29kb)", "https://arxiv.org/abs/1606.03244v1", null], ["v2", "Tue, 14 Jun 2016 15:49:20 GMT  (29kb)", "http://arxiv.org/abs/1606.03244v2", null]], "reviews": [], "SUBJECTS": "cs.AI", "authors": ["martin c cooper", "reas herzig", "faustine maffre", "fr\\'ed\\'eric maris", "pierre r\\'egnier"], "accepted": false, "id": "1606.03244"}, "pdf": {"name": "1606.03244.pdf", "metadata": {"source": "CRF", "title": "Simple epistemic planning: generalised gossiping", "authors": ["Martin C. Cooper", "Andreas Herzig", "Faustine Maffre", "Fr\u00e9d\u00e9ric Maris Pierre R\u00e9gnier"], "emails": [], "sections": [{"heading": null, "text": "ar X\niv :1\n60 6.\n03 24\n4v 2\n[ cs\n.A I]\n1 4\nJu n\n20 16"}, {"heading": "1 Introduction", "text": "We consider communication problems concerning n agents. We consider that initially, for i = 1, . . . , n, agent i has some information si, also known as this agent\u2019s secret since, initially, the other agents do not know this information. In many applications, this corresponds to information that agent i wishes to share with all other agents, such as agent i\u2019s signature on a contract or the dates when agent i is available for a meeting. On the other hand, it may be confidential information which is only to be shared with a subset of the other agents, such as agent i\u2019s telephone number, cryptographic key, password or credit card number. More mundanely, it could simply be some gossip that agent i wants to share. Indeed, the simplest version of the problem in which all agents want to communicate their secrets to all other agents (using the minimum number of communications) is traditionally known as the gossip problem. Several variants have been studied in the literature, and a survey of these alternatives and the associated results has been published [14].\nThe gossip problem is a particular case of a multiagent epistemic planning problem. We view it as an epistemic counterpart of blocksworld problems where the complexity of epistemic planning problems can be illustrated in a nice way. We demonstrate this by studying several variants of the classic problem: by supposing that not all pairs of agents can communicate directly, by allowing parallel or one-way communications, and by introducing the notion of confidential information which should not be shared with all other agents. However, our main contribution is to study the gossip problem at different epistemic depths. In the classic gossip problem, the goal is for all agents to know all secrets (which corresponds to epistemic depth 1). The equivalent goal at epistemic depth 2 is that all agents know\n1 IRIT, University of Toulouse III, 31062 Toulouse, France, email: {cooper|herzig|maffre|maris|regnier}@irit.fr\nthat all agents know all the secrets; at depth 3, all agents must know that all agents know that all agents know all the secrets. For example, in a commercial setting, if the secrets are the agents\u2019 agreement to the terms of a joint contract, then an agent may not authorize expenditure on the project before knowing that all other agents know that all agents agree to the terms of the contract. We provide algorithms for these variants and establish their optimality in most of the cases.\nThe paper is organized as follows. In the next section we formally introduce epistemic planning and the epistemic version of the classic gossip problem GossipG(d). In Section 3 we study the properties of GossipG(d). In Section 4 we turn our attention to the version of this problem in which all communications are one-way (such as emails rather than telephone calls). In Section 5 we study a parallel version in which calls between different agents can take place simultaneously. In each of these three cases, we give a protocol which is optimal (given certain conditions on the graph G) assuming we want to attain all positive epistemic goals up to depth d. We then consider versions of the gossip problem with some negative goals. This version of the gossip problem has obvious applications concerning confidential information which is only to be broadcast to a subset of the other agents. In Section 6 we show that determining the existence of a plan which attains a mixture of positive and negative goals is NP-complete. In Section 7 we show that allowing agents to change their secrets (when secrets correspond, for example, to passwords or telephone numbers) allows more problems to be solved, but testing the existence of a plan remains NP-complete. We conclude with a discussion in Section 8."}, {"heading": "2 Epistemic planning and the gossip problem", "text": "Dynamic Epistemic Logic DEL [24] provides a formal framework for the representation of knowledge and update of knowledge, and several recent approaches to multi-agent planning are based on it, starting with [5, 21]. While DEL provides a very expressive framework, it was unfortunately proven to be undecidable even for rather simple fragments of the language [2, 7]. Some decidable fragments were studied, most of which focused on public events [21, 26]. However, the gossip problem requires private communication. We here consider a simple fragment of the language of DEL where the knowledge operator can only be applied to literals. Similar approaches to epistemic planning can be found in [17, 22].\nHere we propose a more direct model. We use the notation Kisj to represent the fact that agent i knows the secret of j, the notation KiKjsk to represent the fact that agent i knows that agent j knows the secret of k, etc. We use the term positive fluent for any epistemic proposition of the form Ki1 . . .Kirsj . If we consider the secrets si as constants and that agents never forget, then positive fluents, once true, can never become false. A negative fluent \u00ac(Ki1 . . .Kirsj)\ncan, of course, become false. Note that these fluents are not modal formulas of epistemic logic; Ki is not a modal operator. They should simply be viewed as independent propositional variables.\nA planning problem consists of an initial state (a set of fluents I), a set of actions and a set of goals (another set of fluents Goal). Each action has a (possibly empty) set of preconditions (fluents that must be true before the action can be executed) and a set of effects (positive or negative fluents that will be true after the execution of the action). A solution plan (or protocol) is a sequence of actions which when applied in this order to the initial state I produces a state in which all goals in Goal are true. We use the term epistemic planning problem when we need to emphasize that fluents may include the operators Ki (i = 1, . . . , n). A simple epistemic goal is that all agents know all the secrets, i.e. \u2200i, j \u2208 {1, . . . , n}, Kisj . A higher-level epistemic goal is \u2200i, j, k \u2208 {1, . . . , n}, KiKjsk, i.e. that all agents know that all agents know all the secrets.\nThe gossip problem on n agents and a graph G = \u3008{1, . . . , n}, EG\u3009 is the epistemic planning problem in which the actions are CALLi,j for {i, j} \u2208 EG (i.e. there is an edge between i and j in G if and only if they can call each other) and the initial state contains Kisi for i = 1, . . . , n (and implicitly all fluents of the form Ki1 . . .Kirsj with ir = j, together with all fluents of the form \u00ac(Ki1 . . .Kirsj) with ir 6= j). The action CALLi,j has no preconditions and its effect is that agents i and j share all their knowledge. We go further and assume that the two agents know that they have shared all their knowledge, so that, if we had Kif or Kjf before the execution of CALLi,j , for any fluent f , then we have Ki1 . . .Kirf just afterwards, for any r and for any sequence i1, . . . , ir \u2208 {i, j}. The assumption that two agents share all their knowledge when they communicate may appear unrealistic, but, if the aim is to broadcast information using the minimum number of calls, this is clearly the best strategy. Furthermore, in applications in which some secrets must not be divulged to all agents, it is important to study the worst-case scenario in which all information is exchanged whenever a communication occurs.\nLet Gossip-posG(d) be the gossip problem on a graph G in which the goal is a conjunction of positive fluents of the form (Ki1 . . .Kirsj) (1 \u2264 r \u2264 d). Thus, the parameter d specifies the maximum epistemic depth of goals. We use GossipG(d) to denote the specific problem in which all such goals must be attained. For any fixed d \u2265 1, Gossip-posG(d) can be solved in polynomial time since it can be coded as a classic STRIPS planning problem in which actions have no preconditions, and all effects of actions and all goals are positive [6]. Indeed, a necessary and sufficient condition for a solution plan to exist is that, for all goals (Ki1 . . .Kirsj), there is a path in G from j to i1 passing through ir, . . . , i2 (in this order). Let Gossip-negG(d) be the gossip problem in which the goal is a conjunction of goals of the form (Ki1 . . .Kirsj) (1 \u2264 r \u2264 d) or \u00ac(Ki1 . . .Kirsj) (1 \u2264 r \u2264 d). We write Gossip-pos(d), Gossip(d) and Gossip-neg(d) to denote the corresponding problems in which the graph G is part of the input. Versions with one-way and parallel communication will be defined in sections 4 and 5. In Section 7 we will define a version where secrets can change truth value."}, {"heading": "3 Minimising the number of calls for positive goals", "text": "In this section we consider the gossip problem with only positive goals. The minimal number of calls to obtain the solution of GossipG(1) is either 2n\u22124 if the graph G contains a quadrilateral (a cycle of length 4) as a subgraph, or 2n \u2212 3 in the general case [13]. We first give a simple protocol for any connected graph before giving\nprotocols requiring many less calls for special cases of G.\nProposition 1 If the graph G is connected, then for n \u2265 2 and d \u2265 1, any instance of Gossip-posG(d) has a solution of length no greater than d(2n\u2212 3) calls.\nProof: Since G is connected, it has a spanning tree T . Let the root of T be 1. Since n \u2265 2, there is a node 2 that is connected to 1. Let T2 be the subtree rooted in 2 and let T1 be the rest of T , i.e., 1 together with all its subtrees except T2. Let |Ti| be the number of edges in tree Ti.\nConsider the following protocol, composed of a total of 2d passes. Each pass either consists in calls that go upwards in T followed by a call between 1 and 2, or consists in calls that go downward.\nodd passes: |T1| calls upwards in T1, starting with the leaves; |T2| calls upwards in T2, starting with the leaves; CALL1,2 even passes: |T1| calls downwards in T1, starting with 1; |T2| calls downwards in T2, starting with 2\nAfter k passes:\n\u2022 if k = 2m\u22121 then K1Ki1 \u00b7 \u00b7 \u00b7Kim\u22121sj and K2Ki1 \u00b7 \u00b7 \u00b7Kim\u22121sj are true for all i1, . . . , im\u22121, j; \u2022 if k = 2m then Ki1 \u00b7 \u00b7 \u00b7Kimsj is true for all i1, . . . , im, j;\nSo the goal is attained after 2d passes. Since the odd passes have |T1|+ |T2|+ 1 = |T | = n\u2212 1 calls and the even passes have n\u2212 2 calls, this gives us a total of d(2n\u2212 3) calls.\nIn fact, for d \u2265 2, we require considerably less than d(2n \u2212 3) calls if G has a Hamiltonian path.\nProposition 2 If the graph G has a Hamiltonian path, then any instance of Gossip-posG(d) has a solution of length no greater than 1 + (d+ 1)(n\u2212 2).\nProof: Let \u03c0 be the Hamiltonian path in G. Number the vertices of G from 1 to n in the order they are visited in \u03c0.\nConsider the following protocol:\nfirst pass: CALLi,i+1 (for i = n\u2212 1, . . . , 1), then CALLi,i+1 (for i = 2, . . . , n\u2212 1) second pass: CALLi,i+1 (for i = n\u2212 2, . . . , 1) third pass: CALLi,i+1 (for i = 2, . . . , n\u2212 1) ... even passes: CALLi,i+1 (for i = n\u2212 2, . . . , 1) odd passes: CALLi,i+1 (for i = 2, . . . , n\u2212 1)\n...\nIt is not difficult to see that the first pass establishes Kisj for all i, j, and indeed it establishes both Kn\u22121Kisj and KnKisj for all i, j since CALLn\u22121,n is the last communication in this pass. By a straightforward induction argument, we can show that the mth pass, for m even, establishes Ki1 . . .Kimsj for all i1, . . . , im, j, and indeed that the mth pass establishes both K1Ki1 . . .Kimsj and K2Ki1 . . . Kimsj for all i1, . . . , im, j since CALL1,2 is the last communication in this pass. Similarly, when m is odd, the mth pass establishes Ki1 . . .Kimsj for all i1, . . . , im, j, and indeed both Kn\u22121Ki1 . . . Kimsj and KnKi1 . . .Kimsj for all i1, . . . , im, j. The above plan then establishes, after d passes, all possible depth-d\nepistemic goals. The number of CALL actions in this plan is 2n\u2212 3 in the first pass and n \u2212 2 in each subsequent pass, which makes 2n \u2212 3 + (d \u2212 1)(n \u2212 2) = 1 + (d + 1)(n \u2212 2) in total after d passes.\nThe first pass of the protocol given in the proof of Proposition 2 scans agents from n to 1 and then from 1 to n, whereas each subsequent pass consists of a single scan. We can explain this by the fact that the purpose of the first scan is to group secrets together; the purpose of the second scan is then to broadcast this grouped information to all agents. What is surprising is that we only require one scan for each subsequent increment in the epistemic depth d.\nDetermining the existence of a Hamiltonian path is known to be NP-complete [11]. However, this does not necessarily imply that finding an optimal solution for Gossip-pos(d) (the problem in which the graph G is part of the input) is NP-hard. One reason is that we do not actually need a Hamiltonian path to obtain a plan of length 1+(d+1)(n\u22122). In fact, in the protocol given in the proof of Proposition 2 we can replace the actions CALLi,i+1 (i = 1, . . . , n\u2212 1) by any sequence CALLji,i+1 (i = 1, . . . , n \u2212 1) such that j1 = 1 and \u2200i = 1, . . . , n\u22122, {ji, i+1}\u2229{ji+1, i+2} 6= \u2205. Another reason why the existence of a Hamiltonian path is not necessarily critical is that we can often actually do better. Indeed, the value 1+ (d+1)(n\u2212 2) is not necessarily optimal, since for certain graphs we can achieve (d+ 1)(n\u2212 2), i.e. one call less.\nThe graph shown in Figure 1 is the complete bipartite graph with parts {1, 2}, {3, . . . , n}, and is denoted in graph theory by K2,n\u22122. We now show that there is a protocol which achieves (d+1)(n\u2212 2) calls provided G contains K2,n\u22122 as a subgraph. This subsumes a previous result which was given only for the case of a complete graph"}, {"heading": "G [15].", "text": "Proposition 3 For n \u2265 4, if the n-vertex graph G has K2,n\u22122 as a subgraph, then any instance of Gossip-posG(d) has a solution of length no greater than (d+ 1)(n\u2212 2).\nProof: Suppose that the two parts of K2,n\u22122 are {1, 2}, {3, . . . , n}. We choose an arbitrary partition of the vertices 3, . . . , n into two non-empty sets L, R. We can number the vertices so that min(L) = 3 and min(R) = 4. Denote max(L) by p and max(R) by q (as shown in Figure 1).\nConsider the following protocol:\nodd passes: CALL1,3 . . . CALL1,p CALL2,4 . . . CALL2,q even passes: CALL1,q . . . CALL1,4 CALL2,p . . . CALL2,3\nIn other words: the odd passes are composed of CALL1,x for each x \u2208 L in increasing order of x, followed by CALL2,y for each y \u2208 R in increasing order of y; and the even passes are composed of CALL1,y for each y \u2208 R in decreasing order of y, followed by CALL2,x for each x \u2208 L in decreasing order of x. The length of this plan after d + 1 passes is (d + 1)(|L| + |R|) = (d + 1)(n \u2212 2). It\ntherefore only remains to show that (d + 1) passes are sufficient to establish all possible depth-d epistemic goals. A positive epistemic fluent of the form Ki1 . . .Kidsj , for agents i1, . . . , id, j, has depth d. In particular, sj has depth 0.\nFor m \u2265 1, let Hm be the hypothesis that after m passes, for all depth m\u2212 1 positive epistemic fluents f , we have\n(K1f \u2228Kqf) \u2227 (K2f \u2228Kpf) if m is odd\n(K1f \u2228K3f) \u2227 (K2f \u2228K4f) if m is even\nIt is not difficult to see that H1 is true after the first pass. For Hm \u21d2 Hm+1, suppose m is even. By Hm, after pass m, we have K1f \u2228 K3f for all positive fluents f of depth m\u22121. Thus the first call of pass m+1, CALL1,3, makes 1 and 3 know all fluents of depth m\u22121. After CALL1,p, 1 and p know that 1, 3, . . ., p know all fluents of depth m\u22121. The same goes for 2: since we have K2f \u2228 K4f by Hm, after CALL2,4, 2 and 4 know all fluents of depth m\u22121. At the end of pass m+1 (after CALL2,q), 2 and q know that 2, 4, . . ., q know all fluents of depth m\u22121. Thus for any fluent f of depth m, either 1 knows f or q knows f , and either 2 knows f or p knows f , that is, Hm+1. The reasoning is similar for m odd. The above plan therefore establishes, after d + 1 passes, all possible depth-d epistemic goals.\nObserve that the complete graph on n \u2265 4 vertices has K2,n\u22122 as a subgraph. Furthermore, detecting whether an arbitrary graph G has K2,n\u22122 as a subgraph can clearly be achieved in polynomial time, since it suffices to test for each pair of vertices {i, j} whether or not G contains all edges of the form {u, v} (u \u2208 {i, j}, v \u2208 {1, . . . , n}\\ {i, j}).\nRecall that GossipG(d) denotes the version of Gossip-posG(d) in which the goal consists of all depth-d positive epistemic fluents. We can, in fact, show that the solution plan given in the proof of Proposition 3 is optimal for GossipG(d).\nTheorem 4 The number of calls required to solve GossipG(d) (for any graph G) is at least (d+ 1)(n\u2212 2).\nProof: Consider any solution plan for GossipG(d). The goal of GossipG(d) is to establish Td+1 (where Tr is the conjunction of Ki1 . . .Kir\u22121sir for all i1, . . . , ir \u2208 {1, . . . , n}).\nWe give a proof by induction. Suppose that at least (r+1)(n\u22122) calls are required to establish Tr+1. This is true for r = 1 because it takes at least a sequence of 2n \u2212 4 calls to establish T2 (each agent knows the secret of each other agent) [3, 12, 23]. For general r and without loss of generality, suppose that before the last call to establish it, Tr+1 was false because of lack of knowledge of agent j (i.e. KjTr was false). By induction hypothesis this is at least the ((r+1)(n\u22122)\u22121)-th call. This call involves j and another agent, say i, and establishes not only Tr+1, but also KjTr+1 and KiTr+1. However, \u00acKkTr+1 holds both before and after this call,\nfor the agents k distinct from i and j. To establish Tr+2, it is necessary to distribute Tr+1 from i and j to other agents and this takes at least n\u2212 2 calls. Hence, at least (r+2)(n\u2212 2) calls are required in total to establish Tr+2. By induction on r, it takes at least a sequence of (d+1)(n\u22122) calls to establish Td+1."}, {"heading": "4 One-way communications", "text": "We can consider a different version of the gossip problem, which we denote by Directional-gossip, in which communications are one-way. Whereas a telephone call is essentially a two-way communication, emails and letters are essentially one-way. We now consider the case in which the result of CALLi,j is that agent i shares all his knowledge with agent j but agent i receives no information from agent j. Indeed, to be consistent with communication by e-mail, in which the sender cannot be certain when (or even if) an e-mail will be read by the receiver, we assume that after CALLi,j , agent i does not even gain the knowledge that agent j knows the information that agent i has just sent in this call.\nClearly, Directional-gossip-posG(d) can be solved in polynomial time, since any solution plan for Gossip-posG(d) can be converted into a solution plan for Directional-gossip-posG(d) by replacing each two-way call by two one-way calls. What is surprising is that the exact minimum number of calls to solve Directional-gossip-posG(d) is often much smaller than this and indeed often very close to the minimum number of calls required to solve Gossip-posG(d). We consider, in particular, the hardest version of Directional-gossip-posG(d), in which the aim is to establish all epistemic goals of depth d. Let Tr be the conjunction of Ki1 . . .Kir\u22121sir for all i1, . . . , ir \u2208 {1, . . . , n}, and let Directional-gossipG(d) denote the directional gossip problem whose goal is to establish Td+1.\nIn the directional version, the graph of possible communications is now a directed graph G. Let G be the graph with the same n vertices as the directed graph G but with an edge between i and j if and only if G contains the two directed edges (i, j) and (j, i). It is known that if the directed graph G is strongly connected, the minimal number of calls for Directional-gossip-posG(1) is 2n \u2212 2 [13]. We now generalise this to arbitrary d under an assumption about the graph G.\nProposition 5 For all d \u2265 1, if G contains a Hamiltonian path, then any instance of Directional-gossip-posG(d) has a solution of length no greater than (d+ 1)(n\u2212 1).\nProof: We give a protocol which establishes all positive goals of epistemic depth up to d. Without loss of generality, suppose that the Hamiltonian path in G is 1, 2, . . . , n. Consider the plan consisting of d+ 1 passes according to the following protocol:\nodd passes CALLi,i+1 (for i = 1, . . . , n\u2212 1) even passes CALLi+1,i (for i = n\u2212 1, . . . , 1)\nWe show by a simple inductive proof that this protocol is correct for any d \u2265 1. Recall that Tr is the conjunction of Ki1 . . .Kir\u22121sir for all i1, . . . , ir \u2208 {1, . . . , n}. Consider the hypothesis H(r): at the end of pass r, if r is odd we have KnTr and if r is even we have K1Tr. Clearly, H(1) is true since at the end of the first pass agent n knows all the secrets si (i = 1, . . . , n). If r is odd and H(r) holds, then at the end of pass r + 1, all agents know Tr and furthermore agent 1 knows this (i.e. K1Tr+1). A similar argument shows that H(r) \u21d2 H(r + 1) when r is even. By induction, H(r) holds for all r = 1, . . . , d + 1. For KnTr or K1Tr to hold, we must have Tr .\nThus after d+ 1 passes, and (d+ 1)(n\u2212 1) calls, we have the goal Td+1.\nHowever, as pointed out in Section 3, determining the existence of a Hamiltonian path in a graph is NP-complete [11].\nWe now show that the solution plan given in the proof of Proposition 5 is optimal even for a complete digraph G.\nTheorem 6 The number of calls required to solve DirectionalgossipG(d) (for any digraph G) is at least (d+ 1)(n\u2212 1).\nProof: Consider any solution plan for Directional-gossipG(d). The goal of Directional-gossipG(d) is to establish Td+1 (the conjunction of Ki1 . . .Kidsid+1 for all i1, . . . , id+1 \u2208 {1, . . . , n}). Consider the following claims (for 1 \u2264 r \u2264 d):\nC1(r) after r(n\u2212 1)\u2212 1 calls no agent knows Tr C2(r) after r(n\u2212 1) calls at most one agent knows Tr . C3(r) at least (r + 1)(n\u2212 1) calls are required to establish Tr+1\nC1(1) is true because T1 is the conjunction of all the secrets sj and no agent i can know all the secrets after only n\u2212 2 calls since after n \u2212 2 calls, there is necessarily some agent i\u2032 6= i who has not communicated his secret to anyone. Let r \u2208 {1, . . . , d}. We will show C1(r) \u21d2 C2(r) \u21d2 C3(r) \u21d2 C1(r + 1).\nC1(r) \u21d2 C2(r): Straightforward, since during one call only one agent gains knowledge.\nC2(r) \u21d2 C3(r): Suppose that C2(r) holds, i.e. after r(n\u22121) calls at most one agent knows Tr . This means that the other n\u2212 1 agents require some information in order to know Tr. Hence we require at least n\u2212 1 other calls, i.e. (r + 1)(n\u2212 1) calls in total, to establish Tr+1.\nC3(r) \u21d2 C1(r+1): Suppose C3(r) is true and C1(r+1) is false. Then we require at least (r + 1)(n \u2212 1) calls to establish Tr+1 but after (r + 1)(n \u2212 1) \u2212 1 calls some agent i knows Tr+1. There is clearly a contradiction since agent i cannot know something which is false.\nThis completes the proof by induction that at least (d + 1)(n \u2212 1) calls are required to establish Tr+1, since this corresponds exactly to C3(d).\nIt is worth pointing out that, by Theorem 4, the optimal number of 2-way calls is only d + 1 less than the optimal number of one-way calls and is hence independent of n, the number of agents."}, {"heading": "5 Parallel communications", "text": "An interesting variant, which we call Parallel-gossip-posG(d), is to consider time steps instead of calls, and thus suppose that in each time step several calls are executed in parallel. However, each agent can only make one call in any given time step. We denote by ParallelgossipG(d) the problem of establishing all depth-d positive epistemic fluents. For Parallel-gossipG(1) on a complete graph G, if the number of agents n is even, the time taken (in number of steps) is \u2308log2 n\u2309, and if n is odd, it is \u2308log2 n\u2309+ 1 [4, 20, 16]. We now generalise this to the case of arbitrary epistemic depth d.\nProposition 7 For n \u2265 2, if the n-vertex graph G has the complete bipartite graph K\u2308n/2\u2309,\u230an/2\u230b as a subgraph, then any instance of Parallel-gossip-posG(d) has a solution with d(\u2308log2 n\u2309\u22121)+1 time steps if n is even, or d\u2308log2 n\u2309+ 1 time steps if n is odd.\nProof: Suppose that G has K\u2308n/2\u2309,\u230an/2\u230b as a subgraph. So we can partition the vertex set of G into two subsets V1 and V2 of size \u2308n/2\u2309 and \u230an/2\u230b, respectively, such that G has an edge {i, j} for each i \u2208 V1 and j \u2208 V2. We can number agents by elements of the ring Z/nZ = {1, . . . , n} so that for all i \u2208 Z, 2i+ 1 \u2208 V1 and 2i+ 2 \u2208 V2, where x denotes the corresponding element of Z/nZ for all x \u2208 Z. We consider separately the cases n even and n odd.\nFor even n, consider the following protocol:\nfirst pass: For each step s from 1 to \u2308log2 n\u2309: \u2200i \u2208 {0, . . . , (n\n2 \u2212 1)}, CALL2i+1,2i+2s\nsubsequent passes: Reorder even agents according to the permutation \u03c0\ngiven by \u03c0(2i+ 2\u2308log2 n\u2309) = 2i+ 2; Proceed as in the first pass but only for steps s from 2 to \u2308log2 n\u2309\nThe first pass of this protocol is illustrated in Figure 2 for n = 14. Calls are represented by a line joining two agents.\nIn the first pass, because of the calls CALL2i+1,2i+2, the first step establishes for all i \u2208 Z, K2i+1s2i+2 and K2i+2s2i+1. Suppose that after step s, for all i \u2208 Z, we have the conjunction of K2i+1sj and K2i+2ssj for all j \u2208 {2i+ 1, . . . , 2i+ 2s}. We have just seen that this is true for s = 1 (given that each agent knows his own secret). In particular, if we replace i by i+ 2s\u22121 we have K2i+2s+1sj and K\n2i+2s+1 sj for all j \u2208 {2i+ 2s + 1, . . . , 2i+ 2s+1}. At\nstep s + 1, we make the calls CALL 2i+1,2i+2s+1 for all i \u2208 Z, and this establishes K2i+1sj and K2i+2s+1sj for all j \u2208 {2i+ 1, . . . , 2i+ 2s+1}. By induction on s, it is easily seen that after \u2308log2 n\u2309 steps, for all i \u2208 Z, we have K2i+1sj and K2i+2sj for all j \u2208 Z/nZ. This means that at the end of the first pass \u2200i, j \u2208 {2i+ 1, . . . , 2i+ 2s+1}, Kisj .\nLet Tr be the conjunction of Kj1 . . .Kjr\u22121sjr for all j1, . . . , jr \u2208 Z/nZ. We have just seen that after the first pass T2 is true. Suppose that at the end of pass r, Tr+1 is true. For the next pass r + 1, CALL\n2i+1,2i+2\u2308log2 n\u2309 are the calls in last step of the previous pass\nr. Hence, after reordering even agents so that 2i+ 2\u2308log2 n\u2309 replaces 2i+ 2, we already have for all i \u2208 Z, K2i+1K2i+2Tr and\nK2i+2K2i+1Tr . We then proceed as for the first pass replacing sj by KjTr to establish Tr+2 in \u2308log2 n\u2309 \u2212 1 more steps.\nIt therefore takes d passes to establish all possible depth-d epistemic goals Td+1. The first pass takes \u2308log2 n\u2309 steps and the next d\u22121 passes \u2308log2 n\u2309\u22121 steps, making a total of d(\u2308log2 n\u2309\u22121)+1 steps.\nFor odd n, one can place the first 2\u230alog2 n\u230b agents in a subset Vfirst, the others being in a subset Vlast (see the example in Figure 3 for n = 13). Consider the following protocol:\npreliminary step: Each agent in V1 \u2229 Vlast calls one agent in V2 \u2229 Vfirst, and each agent in V2 \u2229 Vlast calls one agent in V1 \u2229 Vfirst\nsubsequent passes: Proceed in Vfirst as for the first pass of even case in Z/2\u230alog2 n\u230bZ; Each agent in V1 \u2229 Vlast calls one agent in V2 \u2229 Vfirst, and each agent in V2 \u2229 Vlast calls one agent in V1 \u2229 Vfirst\nA typical pass of this protocol is illustrated in Figure 3. The preliminary step is the step on the right of this figure.\nIn the preliminary step, all agents i1, . . . , im \u2208 Vlast distribute their knowledge to some agents j1, . . . , jm \u2208 Vfirst. Hence, after this step we have Kjksik for all k \u2208 {1, . . . ,m}. For each subsequent pass r, it takes \u230alog2 n\u230b = \u2308log2 n\u2309\u22121 steps to distribute knowledge from all agents in Vfirst (hence, in Vlast too because of the previous step) and establish KjTr for all j \u2208 Vfirst. Then agents j1, . . . , jm \u2208 Vfirst respectively call the agents i1, . . . , im \u2208 Vlast in one more step to establish Tr+1. These last calls also establish KjkKikTr for all k \u2208 {1, . . . ,m} if necessary for the next pass r + 1.\nIt takes one preliminary step and d passes of \u2308log2 n\u2309 steps to establish all possible depth-d epistemic goals Td+1, which makes a total of d\u2308log2 n\u2309+ 1 steps.\nIt is worth pointing out that determining whether a n-vertex graph G has the complete bipartite graph K\u2308n/2\u2309,\u230an/2\u230b as a subgraph can be achieved in polynomial time. To see this, firstly observe that any pair of vertices i, j of G which are not joined by an edge must be in the same part in the complete bipartite graph. In linear time, we can partition the vertices of G into subsets S1, . . . , Sr such that vertices i, j not joined by an edge in G belong to the same set St (for some 1 \u2264 t \u2264 r). It only remains to test whether it is possible to partition the numbers |S1|, . . . , |Sr| into two sets whose sums are \u2308n/2\u2309 and \u230an/2\u230b. This partition problem can be solved by dynamic programming in O(r(|S1| + \u00b7 \u00b7 \u00b7 + |Sr|)) time and space, which is at worst quadratic since r \u2264 n and |S1|+ \u00b7 \u00b7 \u00b7+ |Sr| = n [18]. On the other\nhand, it is known that deciding whether Directional-gossip(1) (the problem in which the digraph G is part of the input) can be solved in a given number of steps is NP-complete [19].\nWe now show that the solution plans given in the proof of Proposition 7 are optimal in the number of steps.\nTheorem 8 The number of steps required to solve ParallelgossipG(d) (for any graph G) is at least d(\u2308log2 n\u2309 \u2212 1) + 1 if n is even, or d\u2308log2 n\u2309 + 1 if n is odd.\nProof: Consider any solution plan for Parallel-gossipG(d). Recall that Tr is the conjunction of Ki1 . . . Kir\u22121sir for all i1, . . . , ir \u2208 {1, . . . , n}.\nWe give a proof by induction. For even n, suppose that at least r(\u2308log2 n\u2309\u2212 1)+1 steps are required to establish Tr+1. This is true for r = 1 because it takes at least a sequence of \u2308log2 n\u2309 steps of calls for knowledge from any agent to reach n agents (thus establishing T2) [4, 20, 16]. For general r and without loss of generality, suppose that before the last step to establish it, Tr+1 was false because of lack of knowledge of agent j (i.e. KjTr was false). By induction hypothesis this is at least the (r(\u2308log2 n\u2309\u22121))-th step. A call in this step involves j and another agent, say i, and establishes not only Tr+1, but also KjTr+1 and KiTr+1. However, \u00acKkTr+1 holds both before and after this step, for the agents k distinct from i and j. To establish Tr+2, it is necessary to distribute Tr+1 from i and j to all other agents and this takes at least \u2308log2 n\u2309 \u2212 1 steps (since each step can at most double the number m of agents having this knowledge and thus \u2308log2(n/2)\u2309 steps are required to go from m = 2 to m = n). Hence, at least (r+1)(\u2308log2 n\u2309\u22121)+1 steps are required to establish Tr+2. By induction on r, we obtain the lower bound d(\u2308log2 n\u2309 \u2212 1) + 1.\nFor odd n, the proof is similar but at least one more step is required for each epistemic level r because at least one agent doesn\u2019t communicate his knowledge on the first step to establish Tr+1. Hence, it takes at least a sequence of \u2308log2 n\u2309+1 steps for knowledge from all n agents to reach each others, and the lower bound is d\u2308log2 n\u2309+1.\nIt is interesting to note that it can happen that increasing the number of secrets (and hence the number of agents) leads to less steps. Consider the concrete example of 7 or 8 agents. By Proposition 7 and Theorem 8, the number of steps decreases from 3d+1 to 2d+1when the number of agents increases from 7 to 8. We can explain this by the fact that in the case of an odd number of agents, during each step there is necessarily one agent who is not communicating. By adding an extra agent, we can actually achieve a larger number of calls in a fewer number of steps."}, {"heading": "6 Complexity of gossiping with negative goals", "text": "Not surprisingly, when we allow negative goals, the gossip problem becomes harder to solve. However, we will show that for several different versions of this problem, we avoid the PSPACE complexity of classical planning [6].\nWe also consider a slightly more general version of the gossip problem in which the maximum epistemic depth d is no longer a constant, but is part of the input. Let Gossip-pos and Gossip-neg be, respectively, the same as Gossip-pos(d) and Gossip-neg(d) in which there is no fixed bound d on the maximum epistemic depth of goal fluents. Although we do not specify the exact format in which the goals are given, we make the assumption that this requires at least n+ d+m space, where m is the number of goal fluents. Recall that in these versions of the gossip problem, the graph G is also part of the input.\nTheorem 9 Gossip-pos \u2208 P. Indeed, if a solution plan exists, it can be found in polynomial time.\nProof: The connected components of the graph G can be determined in polynomial time as can a spanning tree of each connected component. If there is a fluent Ki1 . . .Kirsj in Goal, where the agents i1, . . . , ir, j do not all belong to the same connected component of G, then the planning problem has no solution. Otherwise, there is a solution obtained by applying the protocol given in the proof of Proposition 1 to each connected component and for a value of d equal to the maximum epistemic depth of goals. To construct this solution we only require knowledge of the spanning tree of each connected component.\nWhen we allow negative goals the problem of deciding the existence of a solution plan becomes NP-complete.\nTheorem 10 Gossip-neg and Gossip-neg(1) are both NP-complete.\nProof: We first show that Gossip-neg \u2208 NP. We will show that if a solution plan P exists then there is a solution plan P \u2032 of length no greater than md(n\u22121), where m is the number of goal fluents and d the maximum epistemic depth of goal fluents. The validity of a plan of this length can clearly be verified in polynomial time.\nConsider a goal g = Ki1 . . . Kirsj (where r \u2264 d). In P there must be a sequence of CALLp,q actions where the edges {p, q} in the graph G form a path from j to i1 passing through ir, . . . , i2 in this order. There may be many such paths: for each goal g let path(g) be one such path. Divide path(g) into subpaths j \u2192 ir , ir \u2192 ir\u22121, . . ., i2 \u2192 i1. If any of these subpaths contains a cycle, this cycle can be\neliminated from path(g). Call the resulting reduced path path\u2032(g). We can see that each subpath in path\u2032(g) is of length no greater than n\u2212 1 (otherwise it would contain a cycle). Thus, |path\u2032(g)| \u2264 r(n \u2212 1) \u2264 d(n \u2212 1). Each goal g can therefore be achieved by a subset of the actions of P (corresponding to path\u2032(g)). Let P \u2032 be identical to P except that we only keep the actions CALLp,q such that the corresponding edge {p, q} belongs to some path\u2032(g). P \u2032 then constitutes a valid plan and is of length at most md(n \u2212 1). It follows that Gossip-neg \u2208 NP since the validity of a plan of this length can be verified in polynomial time. Trivially, we also have Gossip-neg(1) \u2208 NP since Gossip-neg(1) is a subproblem of Gossipneg.\nTo complete the proof, it suffices to give a polynomial reduction from the well-known NP-complete problem SAT to Gossip-neg(1). Let ISAT be an instance of SAT. We will construct a graph G and a list of goals such that the corresponding instance IGossip of Gossipneg(1) is equivalent to ISAT. Recall that the nodes of G are the agents and the edges of G the communication links between agents.\nFor each propositional variable x in ISAT, we add four nodes x, x, bx, dx to G joined by the edges shown in Figure 4(b). There is a source node a in G and edges (a, x), (a, x) for each variable x in ISAT. For each clause cj in ISAT, we add a node cj joined to the nodes corresponding to the literals of cj . This is illustrated in Figure 4(a) for the clause cj = x \u2228 y \u2228 z. The solution plan to IGossip will make the secret sa transit through x (on its way from a to some clause node cj ) if and only if x = true in the corresponding solution to ISAT.\nFor each clause cj in ISAT, G contains a clause gadget as illustrated in Figure 4(a) for the clause x \u2228 y \u2228 z. We also add Kcjsa to the set of goals. Clearly, the secret sa must transit through one of the nodes corresponding to the literals of cj (x, y or z in the example of Figure 4) to achieve the goal Kcjsa.\nTo complete the reduction, it only remains to impose the constraint that sa transits through at most one of the nodes x, x, for each variable x of ISAT. This is achieved by the negation gadget shown in Figure 4(b) for each variable x. We add the goals Kdxsbx , \u00ac(Kdxsa) for each variable x, and the goal \u00ac(Kcjsbx ) for each variable x and each clause cj (containing the literal x or x). The goal Kdxsbx ensures that the secret sbx transits through x or x. Suppose that sbx transits through x: then sa cannot transit through x before sbx (because of the goal \u00ac(Kdxsa)) and cannot transit through x after sbx (because of the goal \u00ac(Kcjsbx)). By a similar argument, if sbx transits through x, then sa cannot transit through x. Thus, this gadget imposes that sa transits through exactly one of the the nodes x, x.\nWe have shown that ISAT has a solution if and only if IGossip has a solution. Since the reduction is clearly polynomial, this completes the proof.\nOur NP-completeness results are not affected by a restriction to one-way communication, i.e. Directional-gossip-neg and Directional-gossip-neg(1) are both NP-complete, by exactly the same proof as for Theorem 10. A similar remark holds for Parallelgossip-neg and Parallel-gossip-neg(1)."}, {"heading": "7 Complexity of gossiping with variable secrets", "text": "Up to now we have assumed that the secrets si are constants. We now introduce a new kind of action CHANGEi which simulates what happens when agent i changes his secret (which we imagine corresponds, for example, to his password). The effect of action CHANGEi is to render all fluents of the form Ki1 , . . . ,Kirsi false,\nfor ir 6= i, since agent ir does not know the new value of si. These new actions allow us to solve certain gossip problems which cannot be solved without them. For example, consider two agents and the set of goals {K1s2,\u00acK2s1}. In Gossip-neg there is no solution to this planning problem, since the goal K1s2 requires the action CALL1,2 which also establishes K2s1. However, the plan (CALL1,2, CHANGE1) achieves the goals K1s2 and \u00acK2s1. An example of this plan is exchanging telephone numbers with someone and then promptly changing one\u2019s own number. Denote by Gossip-neg-change the version of Gossip-neg with the new CHANGEi actions. Although the CHANGEi actions can help to solve more problems, it turns out that Gossip-neg-change is in the same complexity class as Gossipneg, as we now prove.\nTheorem 11 Gossip-neg-change is NP-complete.\nProof: It is simple to verify that the reduction from SAT given in the proof of Theorem 10 remains valid: in the instances corresponding to instances of SAT, the actions CHANGEa and CHANGEbx cannot be used without destroying goals which must be attained.\nThus, to complete the proof, it suffices to show that Gossip-negchange \u2208 NP. As in the proof of Theorem 10, it suffices to show that if a solution plan P exists, then there is a solution plan P \u2032 of length no greater than a polynomial function of m, d and n. To transform P into an equivalent plan P \u2032, we can eliminate all useless actions. We consider an action a to be useless in P if all fluents Ki1 . . . Kirsj it achieves were already true or CHANGEj occurs after a in P . Since fluents Ki1 . . .Kirsj can only become true at most once after the last occurrence of CHANGEj in P , we can deduce that the number of actions in P \u2032 is bounded above by md(n \u2212 1) (as in the proof of Theorem 10). If CHANGEi occurs in P , then all its occurrences except the last can be deleted without affecting the validity of the plan. Thus the total number of actions in P \u2032 is bounded above by n+md(n\u2212 1), which completes the proof.\nIn the problem Gossip-neg-change, the CHANGEi actions have no preconditions. If there are different actions CHANGEi depending on the values of some subset of the secrets, then it is not difficult to see that we can simulate the version of classical STRIPS planning in which all actions have a single effect, which is known to be PSPACE-complete [6]. A more interesting avenue of future research is perhaps to investigate restricted versions of Gossip-neg or Gossipneg-change which can be solved in polynomial time. As a simple example, suppose that the agents can be arranged in a hierarchy so that each agent i belongs to a level Li and the goal is to communicate\nall secrets upwards in the hierarchy but not downwards. A solution consists in, for each level L in turn starting with the lowest level, all agents at this level communicate their secrets to all agents at level L + 1 in the hierarchy, then all agents at level L + 1 change their secrets so that the agents at level L no longer know these secrets. In this way all secrets percolate up the hierarchy but not down."}, {"heading": "8 Discussion and conclusion", "text": "We summarize our complexity results in Figure 5. In each case the problem is the decision problem, i.e. testing the existence of a solution plan. The general conclusion that can be drawn from this figure is that many interesting epistemic planning problems are either solvable in polynomial time or are NP-complete, thus avoiding the PSPACE-complete complexity of planning. We consider the gossip problem to be a foundation on which to base the study of richer epistemic planning problems involving, for example, communication actions with preconditions involving the contents of the messages received by the agent. Previous work on temporal planning may help to provide a more realistic model of communication actions in which, for example, the length of a call is a function of the quantity of information exchanged, and correct communication during a telephone call requires concurrency of the speaking and listening actions of the two agents [9, 8].\nRestricting our attention to the epistemic version of the classical gossip problem in which all positive epistemic goals of depth d must be attained, we have generalised many results from the classical gossip problem to the epistemic version. We have shown that for a complete graph G, no protocol exists which solves GossipG(d) in less than (d + 1)(n \u2212 2) calls. This was known to be true for d = 1 [3, 12]. We have given a protocol which uses only this number of calls (for any graph G containing K2,n\u22122 as a subgraph). In the case of one-way communications, we have again generalised the optimal protocol from the classical gossip problem to the epistemic version. This protocol requires only (d+1)(n\u22121) calls. When calls can be performed in parallel, and the aim is to minimise the number of steps rather than the number of calls, we have again generalised the optimal protocol from the classical gossip problem to the epistemic version. In this case, only O(d log n) steps are required.\nThere remain many interesting open problems concerning the optimisation version of the gossip problem: given any graph G, determine the minimum number of calls required to attain a set of goals. For example, in the case of one-way communications, our optimal protocol requires a Hamiltonian path in a graph and detecting a Hamiltonian path is NP-complete [11]. However, it may be that\nanother optimal protocol exists which does not require the existence of a Hamiltonian path. A similar situation occurred in the case of two-way communications, in which we gave a protocol which depends on the existence of K2,n\u22122 as a subgraph, and this graph can be detected in polynomial time. The complexity of the problem of minimising the number of calls (whether two-way or one-way) in an arbitrary graph G is still open.\nIn this paper we have assumed a centralised approach in which a centralised planner decides the actions of all agents. Other workers have studied the classical gossip problem from a completely different perspective, assuming that all agents are autonomous [1, 25, 10]. An interesting avenue of future research would be to consider the generalised gossip problem in this framework."}], "references": [{"title": "A framework for epistemic gossip protocols\u2019, in Multi- Agent Systems", "author": ["Maduka Attamah", "Hans van Ditmarsch", "Davide Grossi", "Wiebe van der Hoek"], "venue": "EUMAS", "citeRegEx": "1", "shortCiteRegEx": "1", "year": 2014}, {"title": "Undecidability in epistemic planning", "author": ["Guillaume Aucher", "Thomas Bolander"], "venue": "IJCAI", "citeRegEx": "2", "shortCiteRegEx": "2", "year": 2013}, {"title": "Gossips and telephones", "author": ["Brenda Baker", "Robert Shostak"], "venue": "Discrete Mathematics,", "citeRegEx": "3", "shortCiteRegEx": "3", "year": 1972}, {"title": "Communication patterns in task-oriented groups", "author": ["Alex Bavelas"], "venue": "The Journal of the Acoustical Society of America,", "citeRegEx": "4", "shortCiteRegEx": "4", "year": 1950}, {"title": "Epistemic planning for single and multi-agent systems", "author": ["Thomas Bolander", "Mikkel Birkegaard Andersen"], "venue": "Journal of Applied Non- Classical Logics,", "citeRegEx": "5", "shortCiteRegEx": "5", "year": 2011}, {"title": "The computational complexity of propositional STRIPS planning", "author": ["Tom Bylander"], "venue": "Artif. Intell.,", "citeRegEx": "6", "shortCiteRegEx": "6", "year": 1994}, {"title": "Building epistemic logic from observations and public announcements", "author": ["Tristan Charrier", "Emiliano Lorini", "Andreas Herzig", "Faustine Maffre", "Fran\u00e7ois Schwarzentruber"], "venue": "Proceedings of the 15th International Conference on Principles of Knowledge Representation and Reasoning (KR 2016),", "citeRegEx": "7", "shortCiteRegEx": "7", "year": 2016}, {"title": "When is temporal planning really temporal?", "author": ["William Cushing", "Subbarao Kambhampati", "Mausam", "Daniel S. Weld"], "venue": "IJCAI", "citeRegEx": "9", "shortCiteRegEx": "9", "year": 2007}, {"title": "Computers and Intractability: A Guide to the Theory of NP-Completeness", "author": ["Michael R. Garey", "David S. Johnson"], "venue": null, "citeRegEx": "11", "shortCiteRegEx": "11", "year": 1979}, {"title": "A Cure For The Telephone Disease", "author": ["A. Hajnal", "E.C. Milner", "E. Szemer\u00e9di"], "venue": "Canad. Math. Bull., 15, 447\u2013450, ", "citeRegEx": "12", "shortCiteRegEx": null, "year": 1972}, {"title": "The communication problem on graphs and digraphs", "author": ["Frank Harary", "Allen J. Schwenk"], "venue": "Journal of the Franklin Institute,", "citeRegEx": "13", "shortCiteRegEx": "13", "year": 1974}, {"title": "A survey of gossiping and broadcasting in communication", "author": ["Sandra M. Hedetniemi", "Stephen T. Hedetniemi", "Arthur L. Liestman"], "venue": "networks\u2019, Networks,", "citeRegEx": "14", "shortCiteRegEx": "14", "year": 1988}, {"title": "How to share knowledge by gossiping", "author": ["Andreas Herzig", "Faustine Maffre"], "venue": "International Conference on Agreement Technologies,", "citeRegEx": "15", "shortCiteRegEx": "15", "year": 2015}, {"title": "New gossips and telephones", "author": ["Walter Kn\u00f6del"], "venue": "Discrete Mathematics, 13(1),", "citeRegEx": "16", "shortCiteRegEx": "16", "year": 1975}, {"title": "Beliefs in multiagent planning: from one agent to many", "author": ["Filippos Kominis", "Hector Geffner"], "venue": "Proceedings of the 25th International Conference on Automated Planning and Scheduling (ICAPS),", "citeRegEx": "17", "shortCiteRegEx": "17", "year": 2015}, {"title": "Multi-way number partitioning", "author": ["Richard E. Korf"], "venue": "Proceedings of the 21st International Joint Conference on Artificial Intelligence,", "citeRegEx": "18", "shortCiteRegEx": "18", "year": 2009}, {"title": "Gossiping in minimal time", "author": ["David W. Krumme", "George Cybenko", "K.N. Venkataraman"], "venue": "SIAM J. Comput.,", "citeRegEx": "19", "shortCiteRegEx": "19", "year": 1992}, {"title": "The distribution of completion times for random communication in a task-oriented group", "author": ["Hyman G. Landau"], "venue": "The Bulletin of Mathematical Biophysics,", "citeRegEx": "20", "shortCiteRegEx": "20", "year": 1954}, {"title": "DEL planning and some tractable cases", "author": ["Benedikt L\u00f6we", "Eric Pacuit", "Andreas Witzel"], "venue": "Proceedings of the 3rd International International Workshop on Logic, Rationality and Interaction,", "citeRegEx": "21", "shortCiteRegEx": "21", "year": 2011}, {"title": "Planning over multiagent epistemic states: A classical planning approach", "author": ["Christian Muise", "Vaishak Belle", "Paolo Felli", "Sheila A. McIlraith", "Tim Miller", "Adrian R. Pearce", "Liz Sonenberg"], "venue": "Proceedings of the 29th AAAI Conference on Artificial Intelligence (AAAI", "citeRegEx": "22", "shortCiteRegEx": "22", "year": 2015}, {"title": "On a telephone problem", "author": ["R. Tijdeman"], "venue": "Nieuw Archief voor Wiskunde, 19(3), 118\u2013192, ", "citeRegEx": "23", "shortCiteRegEx": null, "year": 1971}, {"title": "A dynamic epistemic framework for conformant planning", "author": ["Quan Yu", "Yanjun Li", "Yanjing Wang"], "venue": "Proceedings of TARK,", "citeRegEx": "26", "shortCiteRegEx": "26", "year": 2015}], "referenceMentions": [{"referenceID": 11, "context": "Several variants have been studied in the literature, and a survey of these alternatives and the associated results has been published [14].", "startOffset": 135, "endOffset": 139}, {"referenceID": 4, "context": "Dynamic Epistemic Logic DEL [24] provides a formal framework for the representation of knowledge and update of knowledge, and several recent approaches to multi-agent planning are based on it, starting with [5, 21].", "startOffset": 207, "endOffset": 214}, {"referenceID": 18, "context": "Dynamic Epistemic Logic DEL [24] provides a formal framework for the representation of knowledge and update of knowledge, and several recent approaches to multi-agent planning are based on it, starting with [5, 21].", "startOffset": 207, "endOffset": 214}, {"referenceID": 1, "context": "While DEL provides a very expressive framework, it was unfortunately proven to be undecidable even for rather simple fragments of the language [2, 7].", "startOffset": 143, "endOffset": 149}, {"referenceID": 6, "context": "While DEL provides a very expressive framework, it was unfortunately proven to be undecidable even for rather simple fragments of the language [2, 7].", "startOffset": 143, "endOffset": 149}, {"referenceID": 18, "context": "Some decidable fragments were studied, most of which focused on public events [21, 26].", "startOffset": 78, "endOffset": 86}, {"referenceID": 21, "context": "Some decidable fragments were studied, most of which focused on public events [21, 26].", "startOffset": 78, "endOffset": 86}, {"referenceID": 14, "context": "Similar approaches to epistemic planning can be found in [17, 22].", "startOffset": 57, "endOffset": 65}, {"referenceID": 19, "context": "Similar approaches to epistemic planning can be found in [17, 22].", "startOffset": 57, "endOffset": 65}, {"referenceID": 5, "context": "For any fixed d \u2265 1, Gossip-posG(d) can be solved in polynomial time since it can be coded as a classic STRIPS planning problem in which actions have no preconditions, and all effects of actions and all goals are positive [6].", "startOffset": 222, "endOffset": 225}, {"referenceID": 10, "context": "GossipG(1) is either 2n\u22124 if the graph G contains a quadrilateral (a cycle of length 4) as a subgraph, or 2n \u2212 3 in the general case [13].", "startOffset": 133, "endOffset": 137}, {"referenceID": 8, "context": "Determining the existence of a Hamiltonian path is known to be NP-complete [11].", "startOffset": 75, "endOffset": 79}, {"referenceID": 12, "context": "G [15].", "startOffset": 2, "endOffset": 6}, {"referenceID": 2, "context": "This is true for r = 1 because it takes at least a sequence of 2n \u2212 4 calls to establish T2 (each agent knows the secret of each other agent) [3, 12, 23].", "startOffset": 142, "endOffset": 153}, {"referenceID": 9, "context": "This is true for r = 1 because it takes at least a sequence of 2n \u2212 4 calls to establish T2 (each agent knows the secret of each other agent) [3, 12, 23].", "startOffset": 142, "endOffset": 153}, {"referenceID": 20, "context": "This is true for r = 1 because it takes at least a sequence of 2n \u2212 4 calls to establish T2 (each agent knows the secret of each other agent) [3, 12, 23].", "startOffset": 142, "endOffset": 153}, {"referenceID": 10, "context": "It is known that if the directed graph G is strongly connected, the minimal number of calls for Directional-gossip-posG(1) is 2n \u2212 2 [13].", "startOffset": 133, "endOffset": 137}, {"referenceID": 8, "context": "However, as pointed out in Section 3, determining the existence of a Hamiltonian path in a graph is NP-complete [11].", "startOffset": 112, "endOffset": 116}, {"referenceID": 3, "context": "For Parallel-gossipG(1) on a complete graph G, if the number of agents n is even, the time taken (in number of steps) is \u2308log2 n\u2309, and if n is odd, it is \u2308log2 n\u2309+ 1 [4, 20, 16].", "startOffset": 166, "endOffset": 177}, {"referenceID": 17, "context": "For Parallel-gossipG(1) on a complete graph G, if the number of agents n is even, the time taken (in number of steps) is \u2308log2 n\u2309, and if n is odd, it is \u2308log2 n\u2309+ 1 [4, 20, 16].", "startOffset": 166, "endOffset": 177}, {"referenceID": 13, "context": "For Parallel-gossipG(1) on a complete graph G, if the number of agents n is even, the time taken (in number of steps) is \u2308log2 n\u2309, and if n is odd, it is \u2308log2 n\u2309+ 1 [4, 20, 16].", "startOffset": 166, "endOffset": 177}, {"referenceID": 15, "context": "This partition problem can be solved by dynamic programming in O(r(|S1| + \u00b7 \u00b7 \u00b7 + |Sr|)) time and space, which is at worst quadratic since r \u2264 n and |S1|+ \u00b7 \u00b7 \u00b7+ |Sr| = n [18].", "startOffset": 171, "endOffset": 175}, {"referenceID": 16, "context": "hand, it is known that deciding whether Directional-gossip(1) (the problem in which the digraph G is part of the input) can be solved in a given number of steps is NP-complete [19].", "startOffset": 176, "endOffset": 180}, {"referenceID": 3, "context": "This is true for r = 1 because it takes at least a sequence of \u2308log2 n\u2309 steps of calls for knowledge from any agent to reach n agents (thus establishing T2) [4, 20, 16].", "startOffset": 157, "endOffset": 168}, {"referenceID": 17, "context": "This is true for r = 1 because it takes at least a sequence of \u2308log2 n\u2309 steps of calls for knowledge from any agent to reach n agents (thus establishing T2) [4, 20, 16].", "startOffset": 157, "endOffset": 168}, {"referenceID": 13, "context": "This is true for r = 1 because it takes at least a sequence of \u2308log2 n\u2309 steps of calls for knowledge from any agent to reach n agents (thus establishing T2) [4, 20, 16].", "startOffset": 157, "endOffset": 168}, {"referenceID": 5, "context": "ferent versions of this problem, we avoid the PSPACE complexity of classical planning [6].", "startOffset": 86, "endOffset": 89}, {"referenceID": 5, "context": "ning in which all actions have a single effect, which is known to be PSPACE-complete [6].", "startOffset": 85, "endOffset": 88}, {"referenceID": 7, "context": "two agents [9, 8].", "startOffset": 11, "endOffset": 17}, {"referenceID": 2, "context": "This was known to be true for d = 1 [3, 12].", "startOffset": 36, "endOffset": 43}, {"referenceID": 9, "context": "This was known to be true for d = 1 [3, 12].", "startOffset": 36, "endOffset": 43}, {"referenceID": 8, "context": "For example, in the case of one-way communications, our optimal protocol requires a Hamiltonian path in a graph and detecting a Hamiltonian path is NP-complete [11].", "startOffset": 160, "endOffset": 164}, {"referenceID": 0, "context": "Other workers have studied the classical gossip problem from a completely different perspective, assuming that all agents are autonomous [1, 25, 10].", "startOffset": 137, "endOffset": 148}], "year": 2016, "abstractText": "The gossip problem, in which information (known as secrets) must be shared among a certain number of agents using the minimum number of calls, is of interest in the conception of communication networks and protocols. We extend the gossip problem to arbitrary epistemic depths. For example, we may require not only that all agents know all secrets but also that all agents know that all agents know all secrets. We give optimal protocols for various versions of the generalised gossip problem, depending on the graph of communication links, in the case of two-way communications, oneway communications and parallel communication. We also study different variants which allow us to impose negative goals such as that certain agents must not know certain secrets. We show that in the presence of negative goals testing the existence of a successful protocol is NP-complete whereas this is always polynomial-time in the case of purely positive goals.", "creator": "LaTeX with hyperref package"}}}