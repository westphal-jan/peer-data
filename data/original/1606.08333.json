{"id": "1606.08333", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "27-Jun-2016", "title": "True Lies", "abstract": "A true lie is a lie that becomes true when announced. In a logic of announcements, where the announcing agent is not modelled, a true lie is a formula (that is false and) that becomes true when announced. We investigate true lies and other types of interaction between announced formulas, their preconditions and their postconditions, in the setting Gerbrandy's logic of believed announcements, wherein agents may have or obtain incorrect beliefs. Our results are on the satisfiability and validity of instantiations of these semantically defined categories, on iterated announcements, including arbitrarily often iterated announcements, and on syntactic characterization. We close with results for iterated announcements in the logic of knowledge (instead of belief), and for lying as private announcements (instead of public announcements) to different agents. Detailed examples illustrate our lying concepts.", "histories": [["v1", "Mon, 27 Jun 2016 15:59:32 GMT  (36kb)", "https://arxiv.org/abs/1606.08333v1", null], ["v2", "Thu, 27 Apr 2017 16:08:35 GMT  (43kb)", "http://arxiv.org/abs/1606.08333v2", null]], "reviews": [], "SUBJECTS": "cs.AI cs.LO cs.MA", "authors": ["thomas {\\aa}gotnes", "hans van ditmarsch", "yanjing wang"], "accepted": false, "id": "1606.08333"}, "pdf": {"name": "1606.08333.pdf", "metadata": {"source": "CRF", "title": null, "authors": ["Thomas \u00c5gotnes", "Hans van Ditmarsch", "Yanjing Wang"], "emails": ["thomas.agotnes@infomedia.uib.no", "hans.van-ditmarsch@loria.fr", "y.wang@pku.edu.cn."], "sections": [{"heading": null, "text": "ar X\niv :1\n60 6.\n08 33\n3v 2\n[ cs\n.A I]\n2 7"}, {"heading": "1 Introduction", "text": "Pang Juan was an ancient Chinese military general of the Wei state during the Warring States period. Both he and Sun Bin studied under the tutelage of the hermit Guiguzi, but later led the opposing armies of two countries (resp.) Wei and Qi at war. Ambushed by Qi, the Wei army suffered a crushing defeat and Pang Juan committed suicide. In traditional folklore, Sun Bin carved the words \u201cPang Juan dies under this tree\u201d on a tree at the ambush area. When Pang and his men arrived, he saw that there were carvings on the tree so he lit a torch for a closer look. At that moment, the Qi troops lying in ambush attacked and Pang Juan committed suicide under that very tree. (Based on https: // en. wikipedia. org/ wiki/ Pang_ Juan )\n\u2217Information Science and Media Studies, University of Bergen, Bergen, Norway & Center for the Study of Language and Cognition, Zhejiang University, China; thomas.agotnes@infomedia.uib.no\n\u2020LORIA \u2013 CNRS / University of Lorraine, Nancy, France; hans.van-ditmarsch@loria.fr \u2021Dept. of Philosophy, Peking University, Beijing, China; y.wang@pku.edu.cn. Corresponding author. 1True Lies is a 1994 James Cameron movie featuring Arnold Schwarzenegger and Jamie Lee Curtis. It\nis among the very first imported Hollywood movies in China.\nThe Pang Juan example demonstrates that the announcement of something false may make it true. (A detailed analysis will be given later.) This is reminiscent of the logic of truthful public announcements, wherein the announcement of something true may make it false. The archetypical example is the announcement of p \u2227 \u00ac\u2737p, for example when you are being told: \u201cYou do not know that Pang Juan died in 342 BC.\u201d To get p \u2227 \u00ac\u2737p we have to read this sentence as its implicature \u201cPang Juan died in 342 BC and you do not know that.\u201d This phenomenon may even be called the reason that this logic exists, that it is considered interesting, and various puzzles build upon the phenomenon. But in truthful public announcement logic we cannot announce something false thus making it true. The announced formulas are supposed to be true. In an alternative semantics for public announcement logic, that of conscious update (Gerbrandy and Groeneveld, 1997), and that is also known as believed (public) announcement logic, the announcement of a formula is independent of its truth. In that logic, we can call an announcement a lie if the announced formula is false. A true lie is then the announcement of something false that makes it true.\nThis analysis of a lie is not entirely according to the traditional view of agents lying to each other: you are lying to me if you believe \u00ac\u03d5 but you say to me that \u03d5 with the intention to make me believe that \u03d5.2 If we model the realization of this intention (namely that indeed I believe you), and incorporate all belief aspects, we get \u2737a\u00ac\u03d5\u2192 [\u2737a\u03d5]\u2737b\u2737a\u03d5 (where agent a lies to agent b). Abstracting from all belief aspects gives us \u00ac\u03d5 \u2192 [\u03d5]\u03d5. Although the former is more precise, it is not uncommon, if not customary, to abstract from the source and the justification of the lie so that we get \u00ac\u03d5 \u2192 [\u03d5]\u2737b\u03d5, from where it is not a big step to \u00ac\u03d5 \u2192 [\u03d5]\u03d5, the main focus of our investigation. (In order to make this identification, we can think of agent b as the special agent who is able to distinguish all states, for whom it holds that \u2737b\u03d5 \u2194 \u03d5.) This simplied schema \u00ac\u03d5 \u2192 [\u03d5]\u03d5 is clearly in opposition to the schema \u03d5 \u2192 [\u03d5]\u03d5 for the so-called successful formulas. (In truthful public announcement logic the successful formulas are those for which [\u03d5]\u03d5 is valid. In that logic [\u03d5]\u03d5 is equivalent to \u03d5 \u2192 [\u03d5]\u03d5. But in believed public announcement logic, where announcements are independent of the truth of the announced formula, [\u03d5]\u03d5 is not equivalent to \u03d5 \u2192 [\u03d5]\u03d5.) In this work we mainly investigate true lies, successful formulas, and yet other notions in believed announcement logic, and also the iteration of such announcements.\nWe also present results in this work that are not for believed announcement logic, but that are still related to iterated announcements, or to lying.\nIn the logic of believed public announcements, interpreted on KD45 models encoding belief, the announced formula can be false and true before the announcement and can also be false and true after the announcement; and even beyond that, when iterating that same announcement, this value can change in arbitrary ways after each next announcement. In\n2This analysis of lying goes back to Augustine (1988). Lying has been a thriving topic in the philosophical community since then (Siegler, 1966; Bok, 1978; Mahon, 2006, 2008). More recent modal logical analyses that can be seen as a continuation of this philosophical tradition include Baltag (2002); Steiner (2006); Kooi and Renne (2011); van Ditmarsch et al. (2012); Sakama (2011); Liu and Wang (2013); van Ditmarsch (2014). In modal logics with only belief operators the intentional aspect of lying is not modelled.\nthe logic of truthful public announcements, interpreted on S5 models encoding knowledge, lying is not possible. But it can still be that formulas other than the announcement keep changing their value when iterating a given announcement, in ways otherwise very similar to the results for belief.\nIn the Pang Juan example (as we will explain later) it can be argued that the action involved is not so much an announcement but an assignment. Assignments model that propositional variables change their value (it is also known as ontic change): the proposition \u201cPang Juan dies under this tree\u201d was false, and afterwards it is true: factual change. We present a scenario involving lying wherein private (i.e., non-public) announcements and private assignments both play a role: two friends hesitating to go to a party are both being lied to that the other one is going to the party, subsequent to which they both change their minds (factual change) and go to the party.\nWe now give an overview of our results and of the contents of our paper. Section 2 recalls the logic of believed announcements, and the subsequent Section 3 introduces all novel terminology to put our results in perspective, and also gives an overview of our results. These results are then developped in detail in the remaining sections. In Section 4 we present results on successful formulas, true lies, self-refuting formulas, and (so-called) impossible lies (that remain false even after announcement). In Section 5 we elaborate on the result that there are models and announcements such that by iterating that announcement in the model we can change its value arbitrarily often and in arbitrarily chosen ways. In Section 6 we syntactically characterize the single-agent true lies, i.e., formulas that satisfy \u00ac\u03d5\u2192 [\u03d5]\u03d5. In Section 7 we discuss iteration of truthful public announcements on models encoding knowledge, and in Section 8 the interaction of private announcements and private assignments, by way of the above-mentioned example of two friends going to party. Section 9 presents an integration of our different results in view of future research."}, {"heading": "2 Logic of believed announcements", "text": "We recall the modelling of lying and truthtelling (after (van Ditmarsch et al., 2012)) in believed (public) announcement logic, also known as \u2018arrow elimination\u2019 (not necessarily truthful) public announcement logic (Gerbrandy and Groeneveld, 1997), which is a lesser known alternative for the better known \u2018state elimination\u2019 (truthful) public announcement logic (Plaza, 1989; Baltag et al., 1998). Its language, structures, and semantics are as follows. Given are a finite set of agents A and a countable set of propositional variables P (let a \u2208 A and p \u2208 P ).\nDefinition 1 (Language)\nL \u220b \u03d5 ::= p | \u00ac\u03d5 | (\u03d5 \u2227 \u03d5) | \u2737a\u03d5 | [\u03d5]\u03d5 \u22a3\nOther propositional connectives are defined by abbreviation. For \u2737a\u03d5, read \u2018agent a believes formula \u03d5\u2019. If there is a single agent only, we may omit the index and write \u2737\u03d5 instead. Agent variables are a, b, c, . . . . For [\u03d5]\u03c8, read \u2018after public announcement of \u03d5,\n\u03c8\u2019. If \u2737a\u00ac\u03d5, we say that \u03d5 is unbelievable (for a) and, consequently, if \u00ac\u2737a\u00ac\u03d5, for which we write \u2738a\u03d5, we say that \u03d5 is believable (for a). This is also read as \u2018agent a considers it possible that \u03d5\u2019. Shared belief \u2737A\u03d5 (everybody believes that \u03d5) is defined as \u2227\na\u2208A \u2737a\u03d5. We say that \u03d5 is believable iff all agents consider \u03d5 believable, i.e., \u2227\na\u2208A \u2738a\u03d5, for which we write \u2738A\u03d5 (however, this is not the dual of \u2737A\u03d5: we may have that \u00ac\u2737A\u00ac\u03d5 but not \u2738A\u03d5). Believability plays an important role in our setting.\nDefinition 2 (Structures) An epistemic model M = (S,R, V ) consists of a domain S of states (or \u2018worlds\u2019), an accessibility function R : A \u2192 P(S \u00d7 S), where each R(a), for which we write Ra, is an accessibility relation, and a valuation V : P \u2192 P(S), where each V (p) represents the set of states where p is true. For s \u2208 S, (M, s) is an epistemic state.\u22a3\nAn epistemic state is also known as a pointed Kripke model. We often omit the parentheses in (M, s). Without any restrictions we call the model class K. The class of models where all accessibility relations are transitive and euclidean is called K45, and if they are also serial it is called KD45 (this class is the main focus of our investigations, because it encodes agents with consistent beliefs). The class of models where all accessibility relations are equivalence relations is S5. Class KD45 is said to have the properties of belief, and S5 to have the properties of knowledge.\nDefinition 3 (Semantics) Assume an epistemic model M = (S,R, V ).\nM, s |= p iff s \u2208 Vp M, s |= \u00ac\u03d5 iff M, s 6|= \u03d5 M, s |= \u03d5 \u2227 \u03c8 iff M, s |= \u03d5 and M, s |= \u03c8 M, s |= \u2737a\u03d5 iff for all t \u2208 S : Ra(s, t) implies M, t |= \u03d5 M, s |= [\u03d5]\u03c8 iff M |\u03d5, s |= \u03c8\nwhere epistemic model M |\u03d5 = (S,R\u03d5, V ) is as M except that for all a \u2208 A, R\u03d5a := Ra \u2229 (S \u00d7 [[\u03d5]]M ) (and where [[\u03d5]]M := {s \u2208 S |M, s |= \u03d5}). \u22a3\nIn our semantics, [\u03d5]\u2737a\u03c8 means that, regardless of the truth of \u03d5, agent a believes \u03c8 after public announcement of \u03d5. In particular, [p]\u2737ap is valid: after the announcement of a propositional variable, the agent believes that it is true; regardless of the value of that variable. This is why it is called believed (public) announcement of \u03d5, in contrast to the truthful (public) announcement of \u03d5 (Plaza, 1989), wherein we restrict the model to the subdomain of all states where \u03d5 is true (see Appendix A). As said, believed announcement logic originates with Gerbrandy and Groeneveld (1997), where it is called the logic of conscious updates. In believed announcement logic new information is accepted by the agents independent from the truth of that information. In truthful announcement logic new information is only incorporated if it is true.\nIt should be noted that in believed announcement logic announcements can be truthful (namely when true) and lying (namely when false), whereas in truthful announcement logic announcements can only be truthful. In van Ditmarsch et al. (2012) the believed public\nannouncement of \u03d5 is modelled as non-deterministic choice between such truthful and lying public announcement of \u03d5, so that \u2018after truthful announcement of \u03d5, \u03c8\u2019 corresponds to \u03d5\u2192 [\u03d5]\u03c8, and \u2018after lying announcement of \u03d5, \u03c8\u2019 (after the lie that \u03d5, \u03c8) corresponds to \u00ac\u03d5\u2192 [\u03d5]\u03c8.\nThe announcing agent is not modelled in announcement logics, but only the effect of its announcements on the audience, the set of all agents. The interaction between announcement and belief can be formalized as [\u03d5]\u2737a\u03c8 \u2194 \u2737a(\u03d5\u2192 [\u03d5]\u03c8) (Gerbrandy and Groeneveld, 1997).\nBelieved and truthful announcement are therefore closely related. And even in a technical sense: whenever a believed announcement is true, the semantics delivers results that are indistinguishable in the logics. This is because on any epistemic model, the model restriction semantics and the arrow restriction semantics result in bisimilar models, on the part of the model wherein the announcement is true. Investigations of these correspondences are made in Kooi (2007) and van Ditmarsch et al. (2012)."}, {"heading": "3 Iteration of lying and truthful announcements", "text": ""}, {"heading": "3.1 What is a true lie?", "text": "Let p be the proposition \u2018Pang Juan dies under this tree\u2019 (Chinese does not have a future tense). As a consequence of Pang Juan observing \u2018Pang Juan dies under this tree\u2019, he dies under this tree. The logic of public announcements is a logic of public observations, and observing written text is the typical action that has a straightforward formalization in logic: it corresponds to the announcement of the proposition representing that text. We could imagine Pang Juan being uncertain if he would die under this tree (\u00ac\u2737p \u2227 \u00ac\u2737\u00acp), such that observing p removes this uncertainty.\nStill, this analysis is unsatisfactory: If the written text had been \u2018Pang Juan does not die under this tree\u2019, i.e., \u00acp, he would still have died. If the written text had been \u2018The moon is made of green cheese\u2019, i.e., the announcement of some unrelated proposition q, he would still have died. Even if there had nothing been written on that tree (it wasn\u2019t carvings, but merely a gnarled old tree trunk), i.e., the announcement of the trivial proposition \u22a4, he would still have died. It was giving away his position by lighting the torch that caused his death, irrespective of what was written on the tree. Therefore the scenario cannot be modelled as initial uncertainty that is reduced by an informative action: it does not fit the schema \u00ac\u03d5\u2192 [\u03d5]\u03d5.\nAlternatively, with some justification it can be said that p is false before the observation of p but after the observation of p, p is true. Changing the value of a variable is factual/ontic change. It could then be a lying public announcement of p (observing p while p is false) linked to a public assignment changing the value of p into true. However, this analysis has the same shortcomings as the previous one: what is observed does not matter. Also, Pang Juan can hardly be seen as enacting his own death. The actors are the soldiers of his enemy Sun Bin. Of course we can see the visual observation (informative) and the\nsubsequent death (ontic) as two distinct, but related, actions. Indeed van Emde Boas and van Emde Boas Lubsen (2016) argue that this action is neither epistemic (informative) nor performative (factual).\nIn the True Lies movie Jamie Lee Curtis (unsuccessfully) plays the role of a timid slovenly housewife, who starts enacting the lie that she is a spy in order to make her husband jealous and thus seduce him. As Arnold Schwarzenegger really is a spy, because of her enactment she also really becomes a spy (and incidentally also a sparkling, extrovert, and well-dressed woman, a role that fits her rather well). This story of gradual and (exclusively) factual change also does not fit a logic of exclusively informational change. However, this factual changes interacts with belief (informative) change.\nIn Section 8 we will see that the combination of (private) informational and (private) factual change after all makes for a pretty good but different kind of true lie. With that background we will, in Section 9, review once more the Pang Juan and the Arnold Schwarzenegger examples. In the current section (and the subsequent three sections, altogether the core of our contribution) we focus exclusively on true lies as informational change, i.e., \u03d5 is a true lie iff \u00ac\u03d5 \u2192 [\u03d5]\u03d5 is valid in the logic of believed announcements. Also relevant is the satisfiability of \u00ac\u03d5 \u2227 [\u03d5]\u03d5. These different perspectives are, of course, related, and we will now proceed to explain how. (In Section 3.2 they are properly defined as special cases of a more general setup.)\nConsider the formula \u03d5 = p \u2227 \u2737p and the model M consisting of two states s and t wherein a proposition p is false and true, respectively, and that are indistinguishable for the agent. We then have that M, t |= \u00ac(p \u2227 \u2737p) whereas M |(p \u2227 \u2737p), t |= p \u2227 \u2737p so that\nM, t |= \u00ac(p \u2227 \u2737p) \u2192 [p \u2227\u2737p](p \u2227\u2737p).\nTherefore, the formula p \u2227 \u2737p is a true lie in state t of the model. On the other hand, although M, s |= \u00ac(p \u2227 \u2737p), we have that M |(p \u2227 \u2737p), s 6|= p \u2227 \u2737p for the simple reason that p is false in s. So\nM, s 6|= \u00ac(p \u2227\u2737p) \u2192 [p \u2227\u2737p](p \u2227 \u2737p).\nWe illustrate both transitions below:\n\u00acp p\ns t p\u2227\u2737p\u21d2\n\u00acp p\ns t\nFor another example, note that\nM |(p \u2227 \u2737p), t |= \u00ac(p \u2227 \u2737p) \u2192 [p \u2227 \u2737p](p \u2227 \u2737p)\nfor the simple reason that M |(p \u2227 \u2737p), t 6|= \u00ac(p \u2227 \u2737p). This seems somewhat undesirable: you do not want the implication to be true because the antecedent is false. In a given\nmodel (N, u) you only want to call \u03d5 a true lie if N, u |= \u00ac\u03d5 but N, u |= [\u03d5]\u03d5, in other words, if N, u |= \u00ac\u03d5 \u2227 [\u03d5]\u03d5.\nThe formula p \u2227 \u2737p is sometimes a true lie and sometimes not. Of additional interest are the formulas that are always true lies, i.e., formulas \u03d5 such that \u00ac\u03d5 \u2192 [\u03d5]\u03d5 is valid. Consider model class K45. We show that \u2737p and p\u2228\u2737p are true lies. However, the latter is more interesting than the former.\nLet us first show that \u2737p is a true lie. Consider an epistemic state (M, s), where M = (S,R, V ), and such that M, s |= \u00ac\u2737p. Then there is a state t with (s, t) \u2208 R and such that M, t |= \u00acp. Now consider the believed announcement update \u2737p. Let u be any state with (s, u) \u2208 R. In a K45 model M |\u2737p with accessibility relation R\u2737p we have that (s, u) 6\u2208 R\u2737p, because from (s, t) \u2208 R and (s, u) \u2208 R follows (euclidicity) (u, t) \u2208 R and thus M,u |= \u00ac\u2737p, so (s, u) 6\u2208 R\u2737p. In M |\u2737p no state is accessible from s. Thus, M |\u2737p, s |= \u2737p and therefore M, s |= \u00ac\u2737p\u2192 [\u2737p]\u2737p.\nIf the \u2737 modality represents belief, this is not a very interesting form of lying, as in the resulting model the agent\u2019s beliefs are inconsistent: M |\u2737p, s |= \u2737p but also M |\u2737p, s |= \u2737\u00acp. Differently said, as the agent did not believe \u2737p, she does not consider it possible that the lie \u2737p is the truth. More interesting are what we will call the believable true lies that we associate with the validity of (\u00ac\u03d5 \u2227\u2738\u03d5) \u2192 [\u03d5]\u03d5 and with the satisfiability of (\u00ac\u03d5\u2227\u2738\u03d5)\u2227[\u03d5]\u03d5 (and with the model class KD45 \u2014 believable true lies preserve consistent beliefs). Formula \u2737p is not believable in the last sense, as \u00ac\u2737p \u2227\u2738\u2737p implies (in KD45) that \u00ac\u2737p and \u2737p are both true, which is inconsistent.\nWe now show that p \u2228 \u2737p is a true lie. Consider a K45 epistemic state (M, s), where M = (S,R, V ), and such that M, s |= \u00acp \u2227 \u00ac\u2737p. Again, because M, s |= \u00acp \u2227 \u00ac\u2737p and because M is a K45 model, none of the accessible states satisfy \u2737p. But of course, some may satisfy p. Therefore, M |(p \u2228 \u2737p), s |= \u2737p and thus M |(p \u2228 \u2737p), s |= p \u2228 \u2737p. Formula p\u2228\u2737p is therefore also a believable true lie, and even in the non-trivial sense that \u00ac(p \u2228 \u2737p) \u2227\u2738(p \u2228 \u2737p) \u2227 [p \u2228 \u2737p](p \u2228 \u2737p) is satisfiable (namely when there are accessible p worlds as well from s in M). If p \u2228\u2737p is believable, this lie will preserve seriality in the updated model (as there must be an accessible p state), and therefore preserves KD45.\nWe illustrate the difference between these two true lies on the same model as above. (We recall that p \u2227 \u2737p is not a true lie in both states of the model, but only in state t.)\n\u00acp p\ns t \u2737p\u21d2\n\u00acp p\ns t\n\u00acp p p\u2228\u2737p \u21d2\n\u00acp p\nIn this work we wish to investigate in depth which formulas may be true lies on a given model, and which formulas may be true lies on any model, and for which classes of\nmodels. In addition to true lies that become true after lying announcements, there are the successful formulas that remain true after truthful announcements, and we can consider two other options: self-refuting formulas that become false after truthful announcements, and what one might call \u2018impossible lies\u2019 that remain false after lying announcements. We will therefore take a more general perspective: what formulas may change their value or keep their value after their announcement, how does this depend on whether they were true or false before the announcement, and what happens when we iterate these announcements? We now first introduce terminology to address these matters."}, {"heading": "3.2 Terminology for iterated announcements", "text": "Given \u03c3 \u2208 {0, 1}\u2217 and k \u2264 |\u03c3|, \u03c3k denotes the kth digit of \u03c3 and \u03c3|k the prefix consisting of the first k elements of \u03c3. We abuse notation and also view \u03c3k as a function \u03c3k : L \u2192 L on formulas such that\n\u03c3k(\u03d5) =\n{\n\u03d5 if \u03c3k = 1 \u00ac\u03d5 if \u03c3k = 0\nDefinition 4 Let X be a class of models and \u03c3 \u2208 {0, 1}\u2217 with n = |\u03c3| \u2265 2. Formula \u03d5 \u2208 L is \u03c3-satisfiable in X iff \u03c31(\u03d5) \u2227 [\u03d5]\u03c42(\u03d5) is satisfiable in X , and \u03d5 is \u03c3-valid in X iff \u03c31(\u03d5) \u2192 [\u03d5]\u03c42(\u03d5) is valid in X , where:\n\u03c4k(\u03d5) =\n{\n\u03c3k(\u03d5) \u2227 [\u03d5]\u03c4k+1(\u03d5) 1 < k < n \u03c3k(\u03d5) k = n\nFormula \u03d5 is non-trivially \u03c3-valid iff it is \u03c3-valid and \u03c3-satisfiable. For \u03c3 \u2208 {0, 1}\u03c9 (i.e. \u03c3 : N+ \u2192 {0, 1}), \u03d5 \u2208 L is \u03c3-satisfiable in X iff there is a X model (M, s) such that \u03d5 is \u03c3|k-satisfiable in (M, s) for all k \u2208 N (with k \u2265 2). Formula \u03d5 \u2208 L is \u03c3-valid in X iff it is \u03c3|k-valid for all k \u2208 N (with k \u2265 2). \u22a3\nFor example, if |\u03c3| = 3 then \u03d5 is a \u03c3-valid formula in K iff \u03c31(\u03d5) \u2192 [\u03d5](\u03c32(\u03d5) \u2227 [\u03d5]\u03c33(\u03d5)) is valid in K; if \u03c3 = 001 we get |= \u00ac\u03d5\u2192 [\u03d5](\u00ac\u03d5\u2227 [\u03d5]\u03d5) (in K). We typically only consider model classes K and KD45.\nWe can alternatively describe \u03c3-satisfiability as follows. For that, given a model M , a formula \u03d5 \u2208 L, and k \u2208 N, we first define M |\u03d50 = M and M |\u03d5k+1 = (M |\u03d5k)|\u03d5. Then, \u03d5 \u2208 L is \u03c3-satisfiable in X iff there is a X model (M, s) such that for all 1 \u2264 k \u2264 |\u03c3|, M |\u03d5k\u22121, s |= \u03c3k(\u03d5).\nDefinition 5 Formula \u03d5 \u2208 L is believable \u03c3-satisfiable in X iff \u03c31(\u03d5)\u2227\u2738A\u03d5\u2227 [\u03d5]\u03c42(\u03d5) is satisfiable in X , and \u03d5 is believable \u03c3-valid in X iff (\u03c31(\u03d5) \u2227\u2738A\u03d5) \u2192 [\u03d5]\u03c42(\u03d5) is valid in X , where:\n\u03c4k(\u03d5) =\n{\n\u03c3k(\u03d5) \u2227\u2738A\u03d5 \u2227 [\u03d5]\u03c4k+1(\u03d5) 1 < k < n \u03c3k(\u03d5) k = n\nNon-trivially believable \u03c3-valid is believable \u03c3-valid and believable \u03c3-satisfiable, analogously to above, in Def. 4. Believable \u03c3-satisfiable and believable \u03c3-valid for infinite strings are also analogously defined as above. For the believable \u03c3-satisfiable/valid formulas we typically consider model class KD45.\nIf \u03d5 is \u03c3-satisfiable then it may not be believable \u03c3-satisfiable, as the latter implies the former. If \u03d5 is \u03c3-valid then it is also believable \u03c3-valid, as the former implies the latter (the condition in the implication is stronger). However, if \u03d5 is non-trivially \u03c3-valid then it may not be non-trivially believable \u03c3-valid, and vice versa.\nFor strings \u03c3 of length 2 we use corresponding English terminology that reflects common usage in the literature.\n\u03c3 name \u03c3-valid \u03c3-satisfiable 10 self-refuting |= \u03d5\u2192 [\u03d5]\u00ac\u03d5 \u2203(M, s) : (M, s) |= \u03d5 \u2227 [\u03d5]\u00ac\u03d5 01 true lie |= \u00ac\u03d5\u2192 [\u03d5]\u03d5 \u2203(M, s) : (M, s) |= \u00ac\u03d5 \u2227 [\u03d5]\u03d5 11 successful |= \u03d5\u2192 [\u03d5]\u03d5 \u2203(M, s) : (M, s) |= \u03d5 \u2227 [\u03d5]\u03d5 00 impossible lie |= \u00ac\u03d5\u2192 [\u03d5]\u00ac\u03d5 \u2203(M, s) : (M, s) |= \u00ac\u03d5 \u2227 [\u03d5]\u00ac\u03d5\nIt is also common to refer to a formula that is 11-satisfiable in a given model (M, s) as a successful update, and to a formula that is not, as an unsuccessful update, etc. The successful formulas are the most well-known from the literature, and have been investigated on the class of S5 models (van Ditmarsch and Kooi, 2006; Holliday and Icard, 2010). The archetypical unsuccessful update and even self-refuting formula in that setting is p \u2227 \u00ac\u2737p (Moore, 1942; Hintikka, 1962; Holliday and Icard, 2010).\nIt is easy to come up with \u03c3-satisfiable formulas for any finite string \u03c3. But it is even easier to see finite strings as prefixes of infinite strings, and to show that infinite \u03c3 are always satisfiable. For infinite \u03c3, in view of iterated relativization (Miller and Moss, 2005; Sadzik, 2006), formulas that can be announced arbitrarily often in a given model without stabilizing to the value of the announcement formula or its negation have our special attention. Such a formula we call unstable.\nDefinition 6 (Unstable) A \u03c3 \u2208 {0, 1}\u03c9 is called unstable iff for all n \u2208 N there are m, k \u2265 n such that \u03c3m = 1 and \u03c3k = 0. A formula \u03d5 \u2208 L is an unstable formula iff it is \u03c3-satisfiable for an unstable \u03c3. \u22a3\nIn other words, a formula \u03d5 is unstable iff there is a (M, s) such that for all n \u2208 N there are m, k \u2265 n such that M |\u03d5m, s |= \u03d5 and M |\u03d5k, s |= \u00ac\u03d5. In the continuation we will see that there are \u03c3-satisfiable formulas for any \u03c3 \u2208 {0, 1}\u03c9 (this includes the unstable \u03c3s), whereas for \u03c3-validity we only need to consider finite strings (this does not imply stability in a particular model, but recurrence of a finite pattern)."}, {"heading": "3.3 Overview of results and conjectures", "text": "In this section we present results and conjectures for \u03c3-satisfiable and \u03c3-valid formulas, with respect to the classes K and KD45. We wish to encourage the reader to obtain\nfurther results. We start with two rather obvious observations. Let \u03c3 be a finite or infinite {0, 1} string:\n\u2022 If \u03d5 is \u03c3-satisfiable and \u03c4 is a prefix of \u03c3, then \u03d5 is \u03c4 -satisfiable; and if \u03d5 is \u03c3-valid and \u03c4 is a prefix of \u03c3, then \u03d5 is \u03c4 -valid.\n\u2022 If \u03d5 is believable \u03c3-satisfiable on class KD45 in (M, s), then for all m < |\u03c3|, M |\u03d5m \u2208 KD45.\nWe now start with results for \u03c3-satisfiability and continue with results for \u03c3-validity. Various results are accompanied by lengthy proofs and drawn-out examples which are found in separate sections.\nProposition 7 Let \u03c3 \u2208 {0, 1}\u03c9. Then there are \u03c3-satisfiable formulas on class K. \u22a3\nProof See Section 5.1. We provide a single formula, namely \u00ac\u2737\u22a5 \u2227 ((\u2738\u2737\u22a5\u2227\u2738\u00ac\u2737\u22a5) \u2192 \u2738(p\u2227\u2737\u22a5)), and a single frame F (a frame is a model without the valuation, i.e., a pair pair (S,R)) with designated state s \u2208 S such that for any \u03c3 \u2208 {0, 1}\u03c9, by properly choosing the valuation V on F , we can establish that \u00ac\u2737\u22a5 \u2227 ((\u2738\u2737\u22a5 \u2227 \u2738\u00ac\u2737\u22a5) \u2192 \u2738(p \u2227 \u2737\u22a5)) is \u03c3-satisfiable in ((F, V ), s). The root s is infinitely branching.\nProposition 8 Let \u03c3 \u2208 {0, 1}\u03c9. Then there are believable \u03c3-satisfiable formulas on class KD45. \u22a3\nProof See Section 5.3. The result is obtained by adapting the formula and model used in Proposition 7. This is according to fairly standard method to transform a model with a directed single-agent accessibility relation into a model with two undirected accessibility relations for different agents. (The method has been used for multi-S5 models but not for multi-KD45 models, to our knowledge.)\nWe continue with results on \u03c3-validity. Our special interest have non-trivial \u03c3-valid formulas and non-trivial believable \u03c3-valid formulas. (We recall that \u2018non-trivial\u2019 means that they are also \u03c3-satisfiable.)\nFirst, a negative and a positive result for single updates.\nProposition 9 There are no non-trivial 01-valid formulas on class K. \u22a3\nProof If \u03d5 is a trivial 01-valid formula then \u03d5 is equivalent to \u22a4. Let us therefore assume that \u00ac\u03d5 is satisfiable.\nSuppose towards contradiction that such a non-trivial true lie exists. Call it \u03d5. Then \u00ac\u03d5 is satisfiable on a model. Without loss of generality suppose it is a tree, with the root of the tree as the designated state.\nNow consider a singleton model with an empty accessibility relation, i.e., a dead end. Call it (M, s). If (M, s) satisfies \u00ac\u03d5 then \u03d5 cannot be a true lie, since the announcement of \u03d5 does not change the model (the accessibility relation is already empty). Therefore (M, s) satisfies \u03d5.\nNow consider any model (N, t) such that t only has successors that are dead ends. Using the above result for singletons we know that those successors also satisfy \u03d5. Now if (N, t) were to satisfy \u00ac\u03d5, then \u03d5 is not a true lie since the announcement of \u03d5 would not change the model either: all successors are \u03d5 states. Therefore (N, t) has to satisfy \u03d5.\nContinuing this reasoning, it will be clear that \u03d5 must be satisfied in all finite-depth trees. Therefore, if a non-trivial true lie exists, it can only be satisfiable on an infinite-depth tree.\nLet (M, s) be an infinite-depth tree such that (M, s) satisfies \u00ac\u03d5 and [\u03d5]\u03d5. The formula \u00ac\u03d5 \u2227 [\u03d5]\u03d5 is equivalent to an announcement-free formula \u03c8 (the logic of believed announcement is equally expressive as the base modal logic, via a rewriting system). Let d be the modal depth of \u03c8.\nFor d\u2032 > d, let (N, t) be a finite-depth tree that is d\u2032-bisimilar to (M, s) (we refer to Blackburn et al. (2001) for this notion). Then for all formulas \u03b7 of modal depth at most d\u2032, (M, s) |= \u03b7 iff (N, t) |= \u03b7. Therefore, as (M, s) |= \u03c8 and the modal depth of \u03c8 is d < d\u2032, also (N, t) |= \u03c8, i.e., (N, t) |= \u00ac\u03d5 \u2227 [\u03d5]\u03d5. This contradicts that finite-depth trees cannot satisfy true lies as already obtained above.\nAs neither finite-depth nor infinite-depth trees may satisfy \u00ac\u03d5, no tree satisfies \u00ac\u03d5 and thus no pointed model. Therefore non-trivial true lies do not exist on class K.\nProposition 10 Let \u03c3 \u2208 {0, 1}2. Then there are non-trivial \u03c3-valid formulas and nontrivial believable \u03c3-valid formulas on class KD45. \u22a3\nProof See Section 4. The section also gives references for the origin of the corresponding English terminology, in the context of validity and satisfiability.\nWe recall that a believable true lie is a believable 01-valid formula. The following result is a syntactical characterization of this semantic notion, on the KD45 models. The term \u2018disjunctive lying form\u2019 is defined syntactically in Section 6.\nProposition 11 (Characterization of believable true lies) A formula is a believable true lie iff it is not equivalent to a disjunctive lying form. \u22a3\nProof See Section 6. The proof closely follows the proof of the syntactic characterization of successful formulas in Holliday and Icard (2010).\nThere are successful formulas that are not true lies, such as booleans. Clearly |= p\u2192 [p]p, whereas 6|= \u00acp \u2192 [p]p. There are also successful formulas that are true lies, such as \u00ac\u2737p and (in the universal fragment:) p \u2228 \u2737p. At some stage we conjectured that all true lies are successful formulas. But this is not the case.\nProposition 12 (Some true lies are not successful formulas) On class K45 (KD45), some 01-valid formulas are not 11-valid. \u22a3\nProof Let \u03d5 = \u2737\u22a5\u2228 (p\u2227\u2738p\u2227\u2738\u00acp)\u2228 (\u00acp\u2227\u2738p\u2227\u2737p). We show that on K45 \u03d5 is 01-valid but not 11-valid.\nDue to transitivity and euclidicity, a pointed K45 model consists of a designated point possibly pointing at a cluster of indistinguishable points. The formula \u03d5 actually specifies its K45 models modulo bisimilarity. We list all eight K45 pointed models (modulo bisimilarity) for one variable p, where we distinguish those where \u03d5 is true from those where \u03d5 is false, and we also give the result of the \u03d5 update. The underlined state is the designated state.\n\u2014 \u03d5 is true at these four models:\na : \u00acp p b : \u00acp p c : \u00acp p d : \u00acp p\n\u2014 annoucing \u03d5 in those models delivers:\na\u2032 : \u00acp p b\u2032 : \u00acp p c\u2032 : \u00acp p d\u2032 : \u00acp p\n\u2014 \u03d5 is false at these four models:\ne : \u00acp p f : \u00acp p g : \u00acp p h : \u00acp p\n\u2014 announcing \u03d5 in those models delivers:\ne\u2032 : \u00acp p f \u2032 : \u00acp p g\u2032 : \u00acp p h\u2032 : \u00acp p\nModels e\u2032, f \u2032, g\u2032, h\u2032 are bisimilar to a, b, d, a respectively, thus \u00ac\u03d5\u2192 [\u03d5]\u03d5 holds on e, f, g, h, i.e., \u03d5 is 01-valid. However, c\u2032 is bisimilar to e thus \u03d5\u2192 [\u03d5]\u03d5 is false at model c, i.e., \u03d5 is not 11-valid.\nWe not only have that \u03d5 is 01-valid but not 11-valid on K45 but also that \u03d5 is 01-valid (obvious) but not 11-valid (not obvious: the transition between c and c\u2032 is between KD45 models) on KD45. The reader may further observe that \u03d5 is also non-trivially believable 01-valid (the transition from g to g\u2032 is between KD45 models).\nA natural question to ask is whether for all \u03c3 \u2208 {0, 1}\u2217 \u222a {0, 1}\u03c9 there are (non-trivial) \u03c3-valid formulas. The answer is (un)fortunately negative. For example, there are no (non-trivial) 001-valid formulas. We recall that 001-valid means \u00ac\u03d5 \u2192 [\u03d5](\u00ac\u03d5 \u2227 [\u03d5]\u03d5). Let (M, s) be such that M, s 2 \u03d5. Then M,w [\u03d5](\u00ac\u03d5 \u2227 [\u03d5]\u03d5), i.e., M |\u03d5, s \u00ac\u03d5 and M |\u03d5, s |= [\u03d5]\u03d5. From the latter we get M |\u03d5|\u03d5, s |= \u03d5. However, as \u00ac\u03d5\u2192 [\u03d5](\u00ac\u03d5\u2227 [\u03d5]\u03d5) is valid it also holds on (M |\u03d5, s), so that M |\u03d5, s |= \u00ac\u03d5 \u2192 [\u03d5](\u00ac\u03d5 \u2227 [\u03d5]\u03d5), and in particular M |\u03d5, s |= \u00ac\u03d5\u2192 [\u03d5]\u00ac\u03d5, so that, as M |\u03d5, s |= \u00ac\u03d5, we have M |\u03d5|\u03d5, s |= \u00ac\u03d5 . Contradiction.\nWe already observed above that if \u03c3 is a prefix of \u03c4 and a formula is \u03c4 -valid then it is also \u03c3-valid. In the other direction this is very obviously false, for example there are impossible lies (such as \u00ac\u2737p, i.e., 00-valid formulas). But we saw in the previous paragraph that there are no 001-valid formulas. However, sometimes, if \u03c3 is a prefix of \u03c4 and a formula is \u03c3-valid, then it is also \u03c4 -valid.\nGiven \u03c3 \u2208 {0, 1}\u03c9 and prefix \u03c4 of \u03c3, then \u03c3 and \u03c4 (and \u03c4 and \u03c3) are completion equivalent iff for all intermediate strings \u03c4 \u2032 (for all prefixes \u03c4 \u2032 of \u03c3 such that \u03c4 is a prefix of \u03c4 \u2032), a formula is \u03c3-valid iff it is \u03c4 \u2032-valid. This relation is clearly an equivalence relation. The shortest sequence of a completion equivalence class is the representative and the longest (possibly infinite) sequence of this class is the completion.\nConjecture 13 The following completion equivalence classes of \u03c3-valid formulas are all non-empty and all different, and there are no other classes.\n01k (k > 0) 10k (k > 0) 01k0 (k \u2265 0) 10k1 (k \u2265 0) \u22a3\nIf \u03c3 = 01k0 (for k \u2265 0), then \u03c4 = 0(1k0)\u03c9 is its completion; and similarly if \u03c3 = 10k1 (for k \u2265 0), then \u03c4 = 1(0k1)\u03c9 is its completion. For example, the 11-valid formulas are also 111-valid, or 1111-valid, or 111 . . . -valid: they are all completion equivalent; 111 . . . is the completion of this class and 11 is its representative. On the other hand, \u03c3s of shape 01k and 10k (for k > 0) may have no infinite completions and be already maximal.\nThere are 011-validities on K45. A true lie p\u2228\u2737p is an example. We recall that a true lie is by definition a 01-validity. But formula p\u2228\u2737p is also 011-valid, because if announced when false, it results in a K45 model satisfying \u2737p and such that further updates have no informative effect. Therefore, it is also 0111-valid, and . . . and 01\u03c9-valid. Similarly, a believable true lie p \u2228 \u2737p is an example of a 011-validity on KD45. As it is believable, this guarantees the existence of an accessible p state. That state will be preserved after the p \u2228 \u2737p update, and thus the resulting model is serial. More interesting would be a 011-validity that is not a 0111-validity. For another example, from Proposition 9 follows that there are no 01k-validities on class K. But we have not investigated systematically which of the conjectured \u03c3-valid types are non-empty and for which classes of models."}, {"heading": "4 The cases 01, 11, 10, and 00", "text": "In this section we restrict ourselves to validities on class KD45 (or S5, included in KD45).\nSuccessful formulas\n|= \u03d5\u2192 [\u03d5]\u03d5\nA successful update in some given model is a 11-satisfiable formula (in that model). We then call a formula \u2018successful\u2019 if it is always a successful update, i.e., if it is not merely 11-satisfiable but 11-valid. The typical example of a successful update is \u2018no child\nsteps forward\u2019 in the muddy children problem (Moses et al., 1986; van Ditmarsch and Kooi, 2015). Given k muddy children out of n children, this is a succesful update for the first k\u22122 times that father makes his request to step forward if you know whether you are muddy, and only an unsuccessful update the (k \u2212 1)th time, as the kth time that the request is made, the muddy children step forward. The formula in question, for the example of three muddy children, is \u00ac(\u2737ama \u2228\u2737a\u00acma)\u2227\u00ac(\u2737bmb \u2228\u2737b\u00acmb)\u2227\u00ac(\u2737cmc \u2228\u2737c\u00acmc) (where mi stands for \u201cchild i is muddy\u201d). However, the archetypical unsuccessful update is p \u2227 \u00ac\u2737p (Moore, 1942; Hintikka, 1962). The original 1940s setting is the incoherence of a person saying \u201cI went to the pictures [movies] last Tuesday, but I don\u2019t believe that I did\u201d (Moore, 1942, p. 543). In fact, p \u2227 \u00ac\u2737p is a self-refuting formula: after announcing it truthfully, it always becomes false.\nThe successful formulas are the most well-known from the literature, and have been investigated on the class of S5 models (van Ditmarsch and Kooi, 2006; Holliday and Icard, 2010). On the class S5, and using the (state eliminating) semantics of truthful public announcement logic, the successful formulas are those for which |= [\u03d5]\u03d5 (and the selfrefuting formulas are then those for which |= [\u03d5]\u00ac\u03d5). On S5 (but of course not in KD45), \u03d5 \u2192 [\u03d5]\u03c8 is equivalent to [\u03d5]\u03c8. A formula is successful in believed announcement logic if and only if it is successful in truthful announcement logic. This we can easily see:\nIn truthful announcement logic, M, s |= [\u03d5]\u03d5 iff (M, s |= \u03d5 implies M |\u03d5, s |= \u03d5), where M |\u03d5 denotes the submodel consisting of the states satisfying \u03d5 (see Appendix A); whereas in believed announcement logic, M, s |= \u03d5 \u2192 [\u03d5]\u03d5 iff (M, s |= \u03d5 implies M |\u03d5, s |= \u03d5). Using that, whenever the announcement formula \u03d5 is true in a model (M, s), the model (M |\u03d5, s) resulting from state elimination is bisimilar to the model (M |\u03d5, s) resulting from arrow elimination.\nA characterization of single-agent successful formulas in S5 is known (Holliday and Icard, 2010) (we will use it below to obtain results for true lies), but only incidental results and no characterization is known for multi-agent successful formulas. Results are that: the positive fragment is successful (van Ditmarsch and Kooi, 2006) (the positive or universal fragment of the language of public announcement logic is inductively defined by \u03d5 ::= p | \u00acp | \u03d5 \u2228 \u03d5 | \u03d5 \u2227 \u03d5 | \u2737a\u03d5 | [\u00ac\u03d5]\u03d5), publicly known formulas are successful (formulas \u2737\u2217A\u03d5, where \u2737 \u2217\nA stands for common knowledge for the set of all agents \u2014 however note that \u2737\u2217B\u03d5 may be unsuccessful if B \u2282 A), \u00ac\u2737ap is successful (and non-trivially believable) (Qian, 2002) \u2014 an older result than Holliday and Icard (2010), but subsumed by the later characterization of Holliday and Icard (2010).\nA strong intuitive and technical motivation for the successful formulas in truthful announcement logic is that they describe the so-called substitution free fragment of the logic. In general we do not have for dynamic epistemic logics that |= \u03d5 iff |= \u03d5[p/\u03c8], for example [p]p is valid but [p \u2227 \u00ac\u2737p](p \u2227 \u00ac\u2737p) is invalid. But this uniform substitution holds for the fragment of the language consisting of the successful formulas (Holliday et al., 2013).\nSelf-refuting formulas\n|= \u03d5\u2192 [\u03d5]\u00ac\u03d5\nSimilarly to the successful formulas, a formula is self-refuting in believed announcement logic if and only if it is self-refuting in truthful announcement logic. As said, a well-known self-refuting formula (and that is also non-trivially believable) is p \u2227 \u00ac\u2737p. A syntactic characterization of single-agent self-refuting formulas in S5 is also presented in Holliday and Icard (2010), but a more general multi-agent characterization is also not known to us (researchers have been looking for this in vain for some considerable time).\nImpossible lies\n|= \u00ac\u03d5\u2192 [\u03d5]\u00ac\u03d5\nClearly \u22a4 is an impossible lie, as this makes the antecedent \u00ac\u03d5 of the implication false, but this is the trivial case. Slightly more interesting impossible lies are the booleans. (And all these are non-trivially believable.) For example, p is an impossible lie because |= \u00acp\u2192 [p]\u00acp. This is obvious, as announcements do not change the value of propositional variables.\nAnother impossible lie is \u00ac\u2737p. It is trivial: |= \u2737p \u2192 [\u00ac\u2737p]\u2737p holds because in any model satisfying \u2737p the accessibility relation of the agent is empty after the \u00ac\u2737p update.\nThe formula \u00ac\u2737p is also a successful formula. No characterization results are known for impossible lies.\nTrue lies\n|= \u00ac\u03d5\u2192 [\u03d5]\u03d5\nAbove we have already seen examples of true lies. The formula \u22a4 (or any other valid formula) is a trivial true lie. Examples of single-agent true lies are: \u2737p, p \u2228 \u2737p (which is non-trivially believable).\nUnsatisfiable formulas are not true lies, as [\u22a5]\u22a5 is equivalent to \u22a5 (in believed announcement logic, not in truthful announcement logic), so that \u00ac\u22a5 \u2192 \u22a5 is equivalent to \u22a5.\nSection 6 proves a syntactical characterization of single-agent believable true lies in class KD45 (Proposition 11)."}, {"heading": "5 An unstable formula", "text": "In this section we investigate some models and formulas where the iteration of the same update never stabilizes and continues to transform the model, forever and ever. First comes an example with a K model and a single agent, and an alternating 010101...-satisfiable update (Section 5.1). Then comes another example generalizing this to arbitrary boolean functions \u03c3 and \u03c3-satisfiability (Section 5.2). Following that comes a multi-agent example for KD45 agents (with consistent beliefs) (Section 5.3)."}, {"heading": "5.1 Example of an unstable formula", "text": "We demonstrate that the formula \u00ac\u2737\u22a5 \u2227 ((\u2738\u2737\u22a5 \u2227\u2738\u00ac\u2737\u22a5) \u2192 \u2738(p \u2227\u2737\u22a5)) is unstable for the model defined below and for the boolean function \u03c3 \u2208 {0, 1}\u03c9 (i.e. \u03c3 : N+ \u2192 {0, 1}) such that \u03c3n = 1 for n even and \u03c3n = 0 for n odd.\nConsider a modelM in Figure 1 on the left consisting of a root s with branches of length n for each positive natural number n. We also consider a single propositional variable p that is false in the leaves, and from there on towards the root alternatingly true and false. We finally take the value of p in the root to be true, but in fact that does not matter. (In the figure, nodes where p is true are denoted \u25e6 and nodes where p is false are denoted \u2022.)\nWe now consider the update of (M, s) with the formula \u03d5 = \u00ac\u2737\u22a5\u2227((\u2738\u2737\u22a5\u2227\u2738\u00ac\u2737\u22a5) \u2192 \u2738(p \u2227 \u2737\u22a5)). The formula \u03d5 describes, in other words: \u201cI am not a leaf node and if I am the root (i.e., if I am the unique node that is branching) then there is a branch of length 1 wherein p is true in the leaf of that branch.\u201d\nWe take the arrow elimination update, that is, arrows pointing to states where the formula is false are deleted, and all other arrows are preserved. The result is the middle structure in Figure 1. The underlying frames of that model and the left model in the figure are isomorphic. This we can see by rotating the middle structure counterclockwise by 45 degrees and removing the isolated (unreachable) points. That result is pictured on the right in the figure.\nIf we now update again with \u03d5, the original model reappears (in the strong sense that the root-generated submodel is bisimilar \u2014 this is the \u2194 notation \u2014 and even isomorphic):\nM, s |= \u00ac\u03d5 M |\u03d5, s |= \u03d5 M |\u03d5|\u03d5, s |= \u00ac\u03d5 such that (M |\u03d5|\u03d5, s)\u2194(M, s)\nand in general we have in this case (we recall that M |\u03d50 =M and M |\u03d5n+1 = (M |\u03d5n)|\u03d5)"}, {"heading": "M |\u03d5n, s |= \u03d5 for n \u2208 N odd", "text": "M |\u03d5n, s |= \u00ac\u03d5 for n \u2208 N even or n = 0 (M |\u03d5n, s)\u2194(M |\u03d5n+2, s) for all n \u2208 N"}, {"heading": "5.2 Arbitrary boolean function", "text": "Let now any boolean function \u03c3 \u2208 {0, 1}\u03c9 be given. Consider again the frame of the model M of Subsection 5.1 and the same formula \u03d5 := \u00ac\u2737\u22a5 \u2227 ((\u2738\u2737\u22a5\u2227\u2738\u00ac\u2737\u22a5) \u2192 \u2738(p \u2227\u2737\u22a5)). The value in the root of the model is irrelevant. In that model, \u25e6 no longer means that p is true. Instead, we decorate the model with values for atom p according to the string \u03c3, as below. This ensures that for all n \u2208 N, M |\u03d5n, s |= \u03c3n+1(\u03d5).\nFor an example, let be \u03c3 = 011100011 . . . . Then \u03c31 = 0 (the first digit), \u03c32 = 1, etc. Therefore p is false at the leaf of the branch of length 1 (false means value 0), and in the branch of length 2 p is true halfway (\u03c33) and again false at the leaf, and so on. For n = 0,\nwe should get M |\u03d50, s |= \u03c31(\u03d5). As M |\u03d5 0 =M , and \u03c31(\u03d5) = \u00ac\u03d5, we get M, s |= \u00ac\u03d5. And this is indeed the case, because the subformula \u2738(p\u2227\u2737\u22a5) of \u03d5 is false in the root, because p is false (\u03c31 = 0) at the leaf of the branch of length 1.\nAnnouncement of \u03d5 causes all leaves to be eliminated from the model, as before, with the result that all leaves are now decorated with propositions p with value \u03c32 = 1. So we should have M |\u03d5, s |= \u03d5, i.e., M |\u03d51, s |= \u03c32(\u03d5). And so it is, because M |\u03d5, s |= \u2738(p\u2227\u2737\u22a5). And so on.\n\u25e6\u25e6\n\u25e6\n\u25e6\n\u25e6\n\u25e6\n\u25e6\n\u25e6\n\u25e6\n\u25e6\n\u25e6\n\u03c31\n\u03c32\n\u03c31\n\u03c33\n\u03c32\n\u03c31\n\u03c34\n\u03c33\n\u03c32\n\u03c31\n\u03d5 \u21d2\n\u25e6\u25e6\n\u25e6\n\u25e6\n\u25e6\n\u25e6\n\u25e6\n\u25e6\n\u25e6\n\u25e6\n\u25e6\n\u03c32\n\u03c33\n\u03c32\n\u03c34\n\u03c33\n\u03c32\n\u03c35\n\u03c34\n\u03c33\n\u03c32\n\u03d5 \u21d2 . . .\nThis proves Proposition 7 that there are \u03c3-satisfiable formulas on class K for any string \u03c3."}, {"heading": "5.3 An unstable formula for agents with consistent beliefs", "text": "A common way to transform a model for a directed single-agent (unimodal) setting exhibiting a certain desirable property into a model for a symmetric multi-agent setting with the same property, is to replace an arrow by a pair of (undirected) links for different agents, i.e., a pair (x, y) \u2208 R by two pairs (x, z) \u2208 Ra and (z, y) \u2208 Rb. In a multi-agent S5 setting, this means chaining equivalence classes of size two for different agents a and b. Instead of arbitrarily long finite chains, we then build arbitrarily long alternating and interlocking a/b chains. The technique has been used to great effect for undecidability arguments for S5 logics (French and van Ditmarsch, 2008) and also to great effect for expressivity arguments for such logics (van Ditmarsch et al., 2007; Kooi, 2007). This chaining procedure can be extended in a natural way to KD45 models (for consistent belief), namely when (at least) the root of the model is an unreachable state wherein incorrect belief is possible, but where (almost) all remaining states constitute equivalence classes (wherein belief is correct). We\napply this procedure to get a symmetric multi-agent model from an asymmetric singleagent model, to the model M of Subsection 5.1, in order to get an example of an unstable formula in a multi-agent KD45 setting.\nStarting with the model M of that section, we thus get the following model N . The accessibility relation is solid for agent a and it is dashed for agent b. Intuitively, to get N from M , all nodes are replaced by two nodes with the same valuation and that are indistinguishable for an agent b, whereas one might say the previous directed arrows are replaced by indistinguishability for an agent a. Except for the root, wherein we do something special: all pairs in the accessibility relation for a starting in the root are directed, and we add another node to the model that is accessible from the root for agent b only (in the figure: the node below the root), and from where all nodes accessible from the root for agent a are also a-accessible (in the figure we have only drawn one of those arrows, for visual clarity). This is a KD45 model. We assume the usual visual conventions for such models: all directed arrows point to clusters of indistinguishable nodes for that agent (see Appendix B). However, merely in order to emphasize the similarity with the model M , from the root of the model we have many outgoing arrows (whereas according to the visual convention one would have been enough).\n\u25e6\u2022\u2022\n\u25e6\n\u25e6\n\u2022\n\u2022\n\u2022\n\u2022\n\u25e6\n\u25e6\n\u2022\n\u2022\n\u25e6\n\u25e6\n\u2022\n\u2022\n\u25e6\n\u25e6\n\u2022\n\u2022\n\u2022\nInstead of \u03d5 = \u00ac\u2737\u22a5 \u2227 ((\u2738\u2737\u22a5 \u2227\u2738\u00ac\u2737\u22a5) \u2192 \u2738(p \u2227 \u2737\u22a5))\nwe then get a more or less corresponding multi-agent formula\n\u03c8 = \u00ac\u2738b(\u2737ap \u2228 \u2737a\u00acp) \u2227 ((p \u2227\u2737b\u00acp) \u2192 \u2738a\u2738b\u2737ap)\nTo get the latter from the former, first replace each \u2738 by \u2738a\u2738b. We recall that in the model, we replaced each directed unlabeled arrow by an a step plus a b step. Then, replace \u2737\u22a5 by \u2738b(\u2737ap\u2228\u2737a\u00acp). We recall that \u2737\u22a5 defined a leaf node inM . As KD45 models are serial, we now observe that the leaves of model N are the unique nodes wherein a knows whether p: \u2737ap \u2228 \u2737a\u00acp, such that \u2738b(\u2737ap \u2228 \u2737a\u00acp) is only true in the final two nodes of each branch.\nThe extra node is needed to allow for a formula that distinguishes the root node from other nodes: the root of N is the unique node wherein agent b has incorrect belief: p\u2227\u2737b\u00acp. In all other nodes, agent b (correctly) knows the value of p. (We did not know how to distinguish the root node from other nodes without introducing such an additional node.)\nThe nodes a-accessible from the root form an infinite a-equivalence class. The a arrows leading from the extra node below the root to that class are there so that this node is not a leaf.\nWith the \u2018translation\u2019 so far, the final part \u2738(p \u2227 \u2737\u22a5) of the formula \u03d5 becomes \u2738a\u2738b(p\u2227\u2738b(\u2737ap\u2228\u2737a\u00acp)), which is KD45 equivalent to \u2738a\u2738b\u2737ap, as found in the formula \u03c8.\nIn plain English, \u03c8 describes that: (i) b does not consider it possible that a knows whether p, and that (ii) in the node where b\u2019s belief is incorrect (the root note), a considers it possible that b considers it possible for a to know that (not whether!) p. Condition (i) is always false in the leaves and in the nodes just below the leaves, whereas condition (ii) is only true in the root if there is a path of length 2 to a leaf node satisfying p. If we now update model N with \u03c8 we get this model N |\u03c8 \u2014 wherein \u03c8 is now true in the root, as the length 2 path is now to a p node:\n\u25e6\u25e6\u25e6\n\u2022\n\u2022\n\u25e6\n\u25e6\n\u25e6\n\u25e6\n\u2022\n\u2022\n\u25e6\n\u25e6\n\u2022\n\u2022\n\u25e6\n\u25e6\n\u2022\n\u2022\n\u25e6\n\u25e6\n\u2022\nThe next iteration restores N : (N |\u03c8|\u03c8, s)\u2194(N, s). Again, we get:"}, {"heading": "N |\u03c8n, s |= \u03c8 for n \u2208 N odd", "text": "N |\u03c8n, s |= \u00ac\u03c8 for n \u2208 N even or n = 0 (N |\u03c8n, s)\u2194(N |\u03c8n+2, s) for all n \u2208 N\nThis completes our example of a believable (01)\u03c9-satisfiable formula for KD45. From this example now directly follows Proposition 8 that there are believable \u03c3-satisfiable formulas on class KD45 for any string \u03c3: this is similar to how we generalized the example of (01)\u03c9satisfiability on K to a proof of \u03c3-satisfiability on K for any \u03c3 \u2208 {0, 1}\u03c9, using the same formula and the same model except for a different decoration of the variable p."}, {"heading": "6 Characterization of single-agent believable true lies", "text": "Exactly which formulas are true lies? Can they been characterized syntactically, and if so, how? The corresponding problem for successful and self-refuting formulas has been studied and solved for the single-agent case (Holliday and Icard, 2010). These characterizations are given for S5 (see Section 4) but are said to hold also for KD45 \u201cwith minor changes\u201d (Holliday and Icard, 2010). The problem is still open for the multi-agent case, for both classes of formulas. Two main reasons that the single-agent case is easier, are that in that case, first, it is well known that any formula is (S5 or KD45) equivalent to a formula in disjunctive normal form without any nestings of modalities, and, second, that satisfiability of a formula in disjunctive normal form can be checked syntactically (Holliday and Icard, 2010) (see below for details). Based on these two properties, the characterizations in Holliday and Icard (2010) check that certain disjuncts (conditionally) exist in the (disjunctive normal form) formula, which is shown to ensure that the formula is of the required type.\nIn this section we give a similar characterization of believable true lies. It is heavily inspired by Holliday and Icard (2010). Indeed, we take the technique directly from them, as well as notation and concepts. Just as Holliday and Icard (2010) syntactically characterize the set of successful formulas, we syntactically characterize the complement of the set of believable true lies. The differences are in the details of the characterization and the corresponding proof.\nIn the rest of this section, a \u201cformula\u201d always refers (single-agent) formula in the standard modal language. (Note that any formula in L is equivalent to such an announcementfree formula.) We now formally define the two properties mentioned above, disjunctive normal forms and syntactic satisfiability checking, and then give the characterization in Definition 16.\nDefinition 14 (Disjunctive normal form) A formula \u03d5 is in disjunctive normal form iff it is a disjunction of conjunctions of the form\n\u03b4 = \u03b1 \u2227 \u2737\u03b21 \u2227 . . . \u2227 \u2737\u03b2n \u2227\u2738\u03b31 \u2227 . . . \u2227\u2738\u03b3m\nwhere \u03b1 and each \u03b3i are conjunctions of literals and each \u03b2i is a disjunction of literals. \u22a3\nWe write \u223cl to denote the negation of a literal l where double negations are removed. Similarly, when \u03b2 is a disjunction of literals, \u223c\u03b2 denotes the conjunction of negated literals with single negation removed. For a given conjuction \u03b4 of the form above, in the following we will write \u03b4\u03b1 for \u03b1 and \u03b4\u2737\u2738 for \u2737\u03b21 \u2227 . . . \u2227 \u2737\u03b2n \u2227 \u2738\u03b31 \u2227 . . . \u2227 \u2738\u03b3m. Every formula is KD45-equivalent to one in disjunctive normal form.\nDefinition 15 (Clarity (Holliday and Icard, 2010)) Given a conjunction or disjunction \u03c7 of literals, L(\u03c7) denotes the set of literals occurring in it. Set L(\u03c7) is open iff no literal in L(\u03c7) is the negation of any other. A conjunction \u03b4 = \u03b1\u2227\u2737\u03b21\u2227 . . .\u2227\u2737\u03b2n\u2227\u2738\u03b31\u2227 . . .\u2227\u2738\u03b3m in disjunctive normal form is clear iff (i) L(\u03b1) is open; (ii) there is an open set of\nliterals {l1, . . . , ln} with li \u2208 L(\u03b2i); and (iii) for every \u03b3k there is a set of literals {l1, . . . , ln} with li \u2208 L(\u03b2i) such that {l1, . . . , ln} \u222a L(\u03b3k) is open. A disjunction in disjunctive normal form is clear iff at least one of the disjuncts is clear. \u22a3\nThe key point about clarity is that a formula isKD45-satisfiable iff it is clear (Holliday and Icard, 2010, Lemma 3.6).\nWe define a formula that we call a disjunctive lying form. We will then show that, modulo logical equivalence, the class of these formulas corresponds exactly to the class of formulas that are not believable true lies. The characterization will be explained after the definition.\nDefinition 16 (Disjunctive lying form) A formula \u03d5 in disjunctive normal form is a disjunctive lying form iff there exist (possibly empty) sets S and T of disjuncts of \u03d5 and a conjunct \u2737\u03b2\u03b8 of each \u03b8 \u2208 T , such that any disjunctive normal form of\n\u03c7 = \u00ac\u03d5 \u2227\u2738\u03d5 \u2227 \u03c71 \u2227 \u03c72 \u2227 \u03c73\nis clear3 , where\n\u03c71 = \u2227\n\u03b8\u2208T\nt(\u03b8) \u2227 \u2227\n\u03b8\u2208T\n\u00act(\u03b8) t(\u03b8) = \u03b8\u03b1 \u2227 \u2227\n\u2738\u03b3 in \u03b8\n\u2228\n\u03c3\u2208S\n\u2738(\u03c3\u03b1 \u2227 \u03b3)\n\u03c72 = \u2227\n\u03c3\u2208S\n\u03c3\u2737\u2738 \u2227 \u2227\n\u03c3\u2208S\n\u00ac\u03c3\u2737\u2738\n\u03c73 = \u2227\n\u03b8\u2208T\n\u2228\n\u03c3\u2208S\n\u2738(\u03c3\u03b1 \u2227 \u223c\u03b2\u03b8)\nand X denotes the set of disjuncts of \u03d5 that are not in X. \u22a3\nWe now recall (page 11):\nProposition 11 A formula is a believable true lie iff it is not equivalent to a disjunctive lying form.\nBefore we prove Proposition 11, let us explain the intuition behind the definition. This will also serve as a guide to the proof of Proposition 11. If \u03c7 is true in some pointed model (is clear), then \u00ac\u03d5 \u2227 \u2738\u03d5 is true. The role of \u03c71 \u2212 \u03c73 is to ensure that \u00ac\u03d5 remains false in the updated model \u2014 which holds iff \u03d5 is not a believable true lie \u2014 by ensuring that certain disjuncts (conditionally) exist in \u03d5.\nThe role of S is to syntactically encode which states are still accessible from the current state after the update. These are exactly the states where \u03c3\u03b1 is true for some \u03c3 \u2208 S. Since\n3The definition allows both S and T to be empty. However, if S is empty then (any disjunctive form of) \u03c7 is not clear (\u03c73 is a contradiction), so it follows that a disjunctive lying form actually must have a non-empty S as a witness. If T is empty then \u03c73 is a tautology. There exist disjunctive lying forms with an empty T as a witness (one example is p \u2227\u2737p).\n\u03d5 is false in the initial pointed model, there is only one way it can become true in the updated pointed model: if, for some disjunct \u03b8 of \u03d5 where \u03b8\u03b1 is already true and all \u2738\u03b3 are already true and stay true in the updated model, all \u2737\u03b2 that were false in the initial pointed model become true in the updated model. We must avoid that. Those disjuncts that can potentially become true are exactly those in T . Thus, we must make sure that for every disjunct \u03b8 \u2208 T , there is at least one \u2737\u03b2 such that \u03b2 is false in at least one state that is still accessible after the update. That is ensured by \u03c73.\nAs an example, to see that the believable true lie p\u2228\u2737p (already in disjunctive normal form) is not a disjunctive lying form, we need to check for all possible subsets of disjuncts S and T over the set of all disjuncts {p,\u2737p}, whether \u03c7 is clear. There are only two possibilities for T : T = \u2205 or T = {\u2737p}. In the former case we get that \u03c71 = \u00acp \u2227 \u22a5 (not clear). In the latter case, there are four possibilities for S: if S = \u2205 then \u03c73 = \u22a5; if S = {p} then \u03c73 = \u2738(p \u2227 \u00acp); if S = {\u2737p} then \u03c72 = \u2737p and \u03c73 = \u2738\u00acp; and if S = {p,\u2737p} then \u03c72 = \u2737p and \u03c73 = \u2738\u00acp \u2227\u2738(p \u2227 \u00acp). In all cases \u03c7 is not clear.\nAs another example, consider p\u2227\u2737p which is not a believable true lie. To see that it is a disjunctive lying form, take S = {p\u2227\u2737p} and T = \u2205. We get that \u03c71 = \u00acp, and \u03c72 = \u2737p and \u03c73 = \u22a4. It is easy to see that \u03c7 is clear (it is equivalent to \u00acp \u2227 \u2737p \u2227\u2738(p \u2227 \u2737p)).\nProof (of Prop. 11) Without loss of generality, let \u03d5 be a disjunctive normal form. Consider first the implication towards the left: assume that \u03d5 is a disjunctive lying form and let S, T , \u03c7 and \u03b2\u03b8 for each \u03b8 \u2208 T be as in Def. 16. We must show that there exists M, s such that M, s |= \u00ac\u03d5 \u2227 \u2738\u03d5 and M |\u03d5, s |= \u00ac\u03d5. Since any disjunctive normal form of \u03c7 is clear iff it is satisfiable, so let M, s be such that M, s |= \u03c7. Then M, s |= \u00ac\u03d5 \u2227 \u2738\u03d5. Assume, towards a contradiction, that M |\u03d5, s |= \u03d5. Then there exists a disjunct \u03b8 in \u03d5 such that M |\u03d5, s |= \u03b8. As explained above, we are going to show that \u03c73 ensures that this is impossible. To do that, we must first show that it must be the case that \u03b8 \u2208 T (intuitively defined as the set of disjuncts that can potentially become true in the updated model), and then that \u03c73 ensures that the conjunct \u2737\u03b2\u03b8 is false in M |\u03d5, s, leading to a contradiction.\nThus, we first show that it must be the case that \u03b8 \u2208 T . From M |\u03d5, s |= \u03b8\u03b1 it follows thatM, s |= \u03b8\u03b1 (\u03b8\u03b1 is propositional). We now show that alsoM, s |= \u2227\n\u2738\u03b3 in \u03b8 \u2228 \u03c3\u2208S \u2738(\u03c3 \u03b1\u2227\n\u03b3), and it follows from M, s |= \u03c71 that \u03b8 \u2208 T . Let \u2738\u03b3 be a conjunct in \u03b8. We have that M |\u03d5, s |= \u2738\u03b3, i.e., that there exists a state t such that Rst and M |\u03d5, t |= \u03b3 and, since t is a state in M |\u03d5, M, t |= \u03d5. From the latter it follows that M, t |= \u03c3 for some disjunct \u03c3 of \u03d5. From M, t |= \u03c3\u2737\u2738 and Rst it follows that M, s |= \u03c3\u2737\u2738 by standard KD45 reasoning, and thus that \u03c3 \u2208 S by \u03c72. Since \u03b3 is propositional, M |\u03d5, t |= \u03b3 implies that M, t |= \u03b3. Thus, M, s |= \u2738(\u03c3\u03b1 \u2227 \u03b3) for some \u03c3 \u2208 S. Since \u2738\u03b3 was arbitrary, we get that M, s |= \u2227\n\u2738\u03b3 in \u03b8 \u2228 \u03c3\u2208S \u2738(\u03c3 \u03b1 \u2227 \u03b3) and thus that \u03b8 \u2208 T .\nHaving shown that \u03b8 \u2208 T , we now get a contradiction from the fact that M, s |= \u03c73. It follows that there exists a \u03c3 \u2208 S such that M, s |= \u2738(\u03c3\u03b1 \u2227 \u223c\u03b2\u03b8). That means that there exists a state t such that Rst and M, t |= \u03c3\u03b1 \u2227 \u223c\u03b2\u03b8. From the fact that \u03c3 \u2208 S we know that M, s |= \u03c3\u2737\u2738 and thus, by standard KD45 reasoning, that M, t |= \u03c3\u2737\u2738. That means that M, t |= \u03c3 and thus M, t |= \u03d5. The latter means that t is accessible from s in M |\u03d5,\nand thus that M |\u03d5, s |= \u00ac\u2737\u03b2\u03b8. But this contradicts M |\u03d5, s |= \u2737\u03b2\u03b8 which follows from the assumption that M |\u03d5, s |= \u03b8. This concludes the implication towards the left.\nFor the direction towards the right, assume that \u03d5 is not a true lie, i.e., that there exist M, s such that M, s |= \u00ac\u03d5 \u2227\u2738\u03d5 and M |\u03d5, s |= \u00ac\u03d5. We now define T , S, and \u03b2\u03b8 for each \u03b8 \u2208 T , as follows. We will then show that the resulting \u03c7 is satisfiable. For any disjunct \u03b4 in \u03d5, let\n\u03b4 \u2208 T \u21d4M, s |= t(\u03b4) \u03b4 \u2208 S \u21d4M, s |= \u03b4\u2737\u2738\nLet \u03b8 \u2208 T . In order to define \u03b2\u03b8, we first show that for every conjunct \u2738\u03b3 in \u03b8, we have that M |\u03d5, s |= \u2738\u03b3. Let \u2738\u03b3 be a conjunct in \u03b8. From the fact that M, s |= t(\u03b8) we get that there is a \u03c3 \u2208 S such thatM, s |= \u2738(\u03c3\u03b1\u2227\u03b3). In other words, there exists a state t such that Rst andM, t |= \u03c3\u03b1\u2227\u03b3. From \u03c72 and the fact that \u03c3 \u2208 S and standard KD45 reasoning we have that M, t |= \u03c3\u2737\u2738. Thus, M, t |= \u03c3. That means that M, t |= \u03d5 and that t is accessible from s in M |\u03d5, so M |\u03d5, s |= \u2738\u03b3, for all \u2738\u03b3 in \u03b8. Since \u03b8\u03b1 is propositional, M |\u03d5, s |= \u03b8\u03b1 follows fromM, s |= t(\u03b8), and thusM |\u03d5, s |= \u00ac\u03b8 (which follows fromM |\u03d5, s |= \u00ac\u03d5) implies that there must be a conjunct \u2737\u03b2 in \u03b8 such that M |\u03d5, s |= \u00ac\u2737\u03b2. Let \u03b2\u03b8 be one such \u03b2.\nFinally, we show that \u03c7 is satisfiable. It follows that any disjunctive normal form of \u03c7 is clear, and thus that \u03d5 is a disjunctive lying form. We show that M, s |= \u03c7 (where M, s is the pointed model above). We have that M, s |= \u00ac\u03d5 \u2227 \u2738\u03d5 by assumption, and M, s |= \u03c71 \u2227 \u03c72 by definition. It remains to be shown that M, s |= \u03c73. Let \u03b8 \u2208 T . By definition of \u03b2\u03b8, M |\u03d5, s |= \u2738\u223c\u03b2\u03b8. That means that there exists a state t such that t is accessible from s in the updated model and M |\u03d5, t |= \u223c\u03b2\u03b8. Since t is accessible from s in M |\u03d5, M, t |= \u03d5. Let \u03c3 be a disjunct of \u03d5 such that M, t |= \u03c3. Thus M, t |= \u03c3\u2737\u2738, and from that and standard KD45 reasoning, M, s |= \u03c3\u2737\u2738, and thus \u03c3 \u2208 S. FromM, t |= \u03c3 we know that M, t |= \u03c3\u03b1, and since \u223c\u03b2\u03b8 is propositional, M, t |= \u223c\u03b2\u03b8 \u2227 \u03c3\n\u03b1 for some \u03c3 \u2208 S and thus M, s |= \u2738(\u223c\u03b2\u03b8 \u2227 \u03c3 \u03b1). Since \u03b8 \u2208 T was arbitrary, M, s |= \u03c73."}, {"heading": "7 Knowledge and iterated announcement whether", "text": "The focus of our story is on lying and therefore on the believed announcement logic, not on the truthful announcement logic wherein lying is impossible. However some of our questions are also meaningful in a logic of knowledge change, interpreted on models with equivalence relations. As an example, let us address the matter of arbitrarily often iterated updates and unstable formulas. For KD45 models we could affirmatively answer the following question (Section 5.3):\nAre there a model (M, s) and a formula \u03d5, such that if we continue to announce in this model that \u03d5, the value of \u03d5 never stabilizes? (i)\nThis cannot be in S5, as \u03d5 cannot be truthfully announced when \u03d5 is false in the actual state. An obvious question in the setting of S5 models and truthful public announcements is:\nAre there a model (M, s) and a formula \u03d5, such that if we continue to announce in this model whether \u03d5, the value of \u03d5 never stabilizes? (ii)\nThe (truthful public) announcement whether \u03d5 announces the value of \u03d5. If \u03d5 is true, it is a truthful announcement of \u03d5, whereas if \u03d5 is false, it is a truthful announcement of \u00ac\u03d5. To question (ii) we do not know the answer. We conjecture that the answer is: no. However, a related question is:\nAre there a model (M, s) and formulas \u03d5 and \u03c8, such that if we continue to announce whether \u03d5, the value of \u03c8 never stabilizes? (iii)\nThis question we can answer positively, and we think that it may be found in various epistemic scenarios of interest. In the scenario we present here, we do slightly better than (iii):\nAre there a model (M, s) and formulas \u03d5 and \u03c8, such that if we continue to announce that \u03d5, the value of \u03c8 never stabilizes? (iv)\nAn answer to (iv) is also an answer to (iii). Lack of stability in the sense of (iv) is more formally defined as follows. Let \u03c3 \u2208 {0, 1}\u03c9 be unstable; we recall that this means that for all n \u2208 N there are m, k \u2265 n such that \u03c3m = 1 and \u03c3k = 0. Then we wish to find (M, s), \u03d5, and \u03c8 such that for all n \u2208 N, M |\u03d5n , s |= \u03c3n+1(\u03c8), and whereM is an S5 model. (Where we further recall that \u03c3n(\u03c8) = \u03c8 if \u03c3n = 1 and else \u03c3n(\u03c8) = \u00ac\u03c8; and that M |\u03d5 is the (S5 preserving) state elimination semantics for truthful public announcement\u2014see Section 2 and Appendix A.)\nNow consider \u03c3 = (01)\u03c9 (\u03c3 = 010101...), the alternating string. Our solution is a simple adjustment of the model N from Section 5.3 to realize an unstable formula for believed announcement logic. The model below is the equivalence closure (reflexive, symmetric, and transitive closure) of that model N . To achieve that visually, we only have to replace the directed arrows involving the root and the node below the root by undirected links, and assume transitivity. The alternating values of \u03c3i have been made explicit in three branches, for an example. As in Section 5.3, we decorate the states of N with the variable p according to \u03c3; \u2022 means that p is false (\u03c31 = \u03c33 = 0), and \u25e6 that p is true (\u03c32 = 1).\n\u25e6\u2022\u2022\n\u25e6\n\u25e6\n\u2022\n\u2022\n\u2022\n\u2022\n\u25e6\n\u25e6\n\u2022\n\u2022\n\u25e6\n\u25e6\n\u2022\n\u2022\n\u25e6\n\u25e6\n\u2022\n\u2022\n\u03c31\u03c31\n\u03c32\n\u03c32\n\u03c31\n\u03c31\n\u03c33\n\u03c33\n\u03c32\n\u03c32\n\u03c31\n\u03c31\n\u2022\nIn order to get N |\u03d5n , s |= \u03c3n+1(\u03c8) we decorate as before the model with values \u03c3n for the propositional variable p (where the model above demonstrates strict alternation in the first three values) and we take \u03d5 := \u00ac\u2738b(\u2737ap \u2228 \u2737a\u00acp) and \u03c8 := \u00ac(\u2737bp \u2228 \u2737b\u00acp) \u2192 \u2738a\u2738b\u2737ap. In other words, we split the unstable formula \u00ac\u2738b(\u2737ap\u2228\u2737a\u00acp)\u2227 ((p\u2227\u2737b\u00acp) \u2192 \u2738a\u2738b\u2737ap) that we employed in Section 5.3 into a part doing the job of always removing the leaf and the node before the leaf of every branch, and another part checking whether there is a branch of length two from the root to a p node, where the distinguishing formula for the root has become b\u2019s ignorance of p (there are now two nodes that can be the root).\nFor a different example of M |\u03d5n , s |= \u03c3n+1(\u03c8), consider an infinite number of (possibly) muddy children, of which an infinite subset are in fact muddy, let \u03d5 be the usual proposition \u2018nobody steps forward\u2019 (nobody knows whether he or she is muddy; see Section 4), and let \u03c8 be the proposition \u2018it is common knowledge that at least n children are muddy but it is not common knowledge that at least n+ 1 children are muddy, where n is even\u2019, and let \u03c3 = (01)\u03c9, again. After father\u2019s initial announcement that at least one child is muddy (which serves as the initial model N in this case), \u03c8 is false (because n = 1 which is odd). Whereas after nobody steps forward following the first request by father to do so if you know whether you are muddy, \u03c8 is true (because now it is common knowledge that at least two children must be muddy: n = 2 which is even). And so on, ad infinitum.\nIf we consider non-public events, there are yet other interesting forms of unstable iteration on S5 models. Running ahead of the next Section 8 (and see Appendix A): there are action models such that their iterated execution does not stabilize on a given model. The following is a vintage example in a two-agent setting.\nConsider a two-state epistemic model for two agents Anne (solid access) and Bob (dashed access) such that Anne is uncertain whether p but Bob knows whether p. Actually, p is true (the \u25e6 state, boxed). Iterated execution of the action model with two actions with preconditions \u00ac\u2737ap and p \u2227 \u2737b\u00ac\u2737ap transforms this two-state epistemic model into a three-state model, and vice versa, ad infinitum. We could think of the formula \u2737b\u00ac\u2737ap being alternatingly true and false in the p-world (the \u25e6-world) about which agent a is uncertain. The execution can be visualized as follows.\n\u25e6 \u2022\n\u25e6\n\u00d7\n\u25e6\ns t\n\u25e6\n\u00ac\u2737ap p \u2227 \u2737b\u00ac\u2737ap\n=\n\u25e6\n\u25e6 \u2022\n\u25e6\n\u25e6 \u2022\n\u25e6\n\u00d7\n\u25e6\ns t\n\u25e6\n\u00ac\u2737ap p \u2227 \u2737b\u00ac\u2737ap\n=\n\u25e6\n\u25e6 \u2022\n\u25e6\nIn the regrettably unpublished (Sadzik, 2006) the matter of stabilization after action model execution is discussed at great length."}, {"heading": "8 Private lies", "text": "True Lies and Butterflies Mei wants to invite two friends Zhu Yingtai and Liang Shanbo to a party. She knows that they are dying to get close to each other. Thus one will come if and only if (s)he believes that the other will come. Obviously they do not yet wish to admit this to each other, because as far as they know they are both still very uncertain about each other\u2019s feelings. Given this uncertainty, both in fact don\u2019t intend to come to the party. Mei now lies to Yingtai that Shanbo will come to the party and she lies to Shanbo that Yingtai will come to the party. As a result, they will both come to the party. (This story is a free adaptation of the Butterfly Lovers, a famous Chinese folktale, see https: // en. wikipedia. org/ wiki/ Butterfly_ Lovers .)\nWe can consider this an example of a true lie, because when Mei is telling to to Yingtai that Shanbo plans to come, in fact Shanbo is not planning to come, and when she is telling to Shanbo that Yingtai plans to come, in fact Yingtai is not (yet) planning to come. (For modelling convenience we assume that Yingtai is slow in making up her mind after Mei informs her about Shanbo.) After that, they both change their minds, and both lies have become true.\nIn order to model this story we will depart in two respects from the previous setting of believed announcement logic. In the first place these announcements are not public but private. In the second place the agents that we model change their minds. As we consider the factual propositions \u2018Yingtai plans to go to the party\u2019 and \u2018Shanbo plans to go to the party\u2019, changing your mind involves factual change. A logic allowing both formalizations is called action model logic (with factual change) (Baltag et al., 1998; van Ditmarsch et al., 2007; van Benthem et al., 2006). This logic can be seen as a straightforward generalization of believed announcement logic. (Alternatively, we can model the dynamics in more protocol oriented dynamic epistemic logics, such as Wang (2010); van Ditmarsch et al. (2014).) We only present some examples of action models and assume familiarity with the framework. For technical details, see Appendix A on page 34 or the above references.\nFor an initial model, we assume that Yingtai and Shanbo know of themselves whether they intend to go to the party but do not know it of the other one (and that this is known, that this is the background knowledge). This comes with the following model, wherein solid access represents the uncertainty of Yingtai and dashed access represents the uncertainty of Shanbo, and where worlds are named with the facts py (\u2018Yingtai comes to the party\u2019) and ps (\u2018Shanbo comes to the party\u2019) that are true there, where 01 stands for \u2018py is false and ps is true\u2019, etc. The designated point of the model is boxed: initially both do not intend to go to the party.\n00 10\n01 11\nMei now lies to Yingtai, in private, that Shanbo goes to the party. For the convenience of the reader informed about action model logic, we can model this as a three-pointed action model as follows, on the left\u2014where for convenience we have put the similar private lie to Shanbo about Yingtai next to it, on the right.\n\u00acps ps\n\u22a4\n\u00acpy py\n\u22a4\nThe result of the first of these lying actions is as follows.\n00 10\n01 11\n00 10\n01 11\nNow Mei lies privately to Shanbo that Yingtai goes to the party. The result of that action is as follows. For the convenience of the reader we also depict (on the right) the restriction of this model to the submodel generated by the point 00:\n00 10\n01 11\n00 10\n01 11\n00 10\n01 11\n00 10\n01 11\n00 10\n01\n00 10\n01 11\nThe above model formalizes that: Yingtai is not going to the party, believes that Shanbo goes to the party, and believes that Shanbo is uncertain whether she goes to the party;\nand that: Shanbo is not going to the party, believes that Yingtai goes to the party, and believes that Yingtai is uncertain whether he goes to the party.\nWe now first let Yingtai change her mind and then Shanbo change his mind. Yingtai changing her mind can again be formalized as an action model, namely as a private assignment to Yingtai; and similarly, Shanbo changing his mind as a private assignment to Shanbo. It is important here that a public assignment is an improper way to formalize this action: a public assignment of Yingtai going to the party if she believes that Shanbo goes to the party would be informative to Shanbo in case he were to believe that she believed that he was going to the party. Because in case he was uncertain if she would go to the party, he would then learn from this public assignment that she would come to the party for his sake. Boring. Because exactly the absence of this sort of knowledge of the other\u2019s intentions makes first lovers\u2019 meetings so thrilling. That kind of uncertainty should not be resolved. Therefore, we formalize it as a private assignment. Interestingly, in the current model the result of a public and of a private assignment (the result of Yingtai privately changing her mind or publicly changing her mind) is the same. But that is because both Yingtai and Shanbo believe that the other is uncertain whether they go to the party.\nBelow on the left is the action model for Yingtai changing her mind, and on the right, the one for Shanbo changing his mind. (So, for example, according to our conventions, in the left action model the solid relation, that of Yingtai, has identity access, and the dashed relation, for Shanbo, has only a reflexive arrow in the point that the dashed arrow is pointing to.)\npy := \u2737yps \u22a4 ps := \u2737spy \u22a4\nWe now depict, from left to right, once more the model before they change their minds, the model resulting from executing the action of Yingtai changing her mind, and the model resulting from Shanbo changing his mind, where once again we restrict the actually resulting models to the point-generated subframes.\n00 10\n01\n00 10\n01 11\nYingtai \u21d2\n10 10\n11\n00 10\n01 11\nShanbo \u21d2\n11 11\n11\n00 10\n01 11\nNow that Yingtai and Shanbo have changed their minds, the lies have become the truth! They both go the party, and they will both expect the other to be surprised to find them at the party.4 They declare their love to each other and they live happily ever after.\n4This is in accordance with the resulting model, above on the right; for example, in the root 11 of that"}, {"heading": "9 What lies in the future?", "text": "We have modelled the true lie \u03d5 in believed announcement logic as the validity\n\u00ac\u03d5\u2192 [\u03d5]\u03d5\nor as the satisfiability of \u00ac\u03d5 \u2227 [\u03d5]\u03d5,\nwhere the believed announcement models informative change and not factual change. Finding satisfiable true lies, of which there are many, seems a first step towards finding valid true lies, of which there are few. The latter seem to give more insight. They have the shape of correctness statements \u03d5 \u2192 [\u03b1]\u03c8 in Hoare logic; and indeed we have seen that valid true lies come with strong syntactic restrictions. In the private lie example we also modelled actions involving factual change. With this tool (and action model logic in its full generality) in hand we can also formalize the Pang Juan and the Arnold Schwarzenegger true lies, and make them fit a similar pattern. However, in this case we stop at satisfiability and the mere description of the examples. We defer a more general treatment and generic patterns involving validity to future research.\nThe Pang Juan true lie can be formalized as a two-pointed action model where one action has precondition p, the other action has precondition \u00acp, where the postcondition is p := \u22a4 in both actions (\u2018no matter what was the case, you will now die\u2019), and where the agent only considers the action with precondition p possible. The designated point is the action where p is false (Pang Juan does not die). Let us call this action \u03b1(p).\n\u00acp; p := \u22a4 p; p := \u22a4\nAlternatively, we can separate the observation part from the ontic change part, and consider the composition of those two actions. The former is then the lie that p, i.e., the believed announcement that p when p is false. The action model equivalent of a believed announcement is a two-point action model (see Appendix A). The latter a singleton action called public assignment (namely of \u22a4 to p). So we get:\n\u00acp p composed with p := \u22a4\nAs the observing agent is Pang Juan and the killing agent one of his opponents, one may prefer the sequence of two epistemic actions over the single epistemic action. On the other hand, as Pang Juan\u2019s observation and his subsequent death seem inextricably linked, one might prefer the single epistemic action. However, there is no notion of agency in dynamic epistemic logics: the composition of two actions is indistinguishable from the single action that combines the informative and ontic part: in the logic we have that [\u03b1(p)]\u03d5\nmodel Yingtai believes \u2014move to the top 11\u2014 that Shanbo believes \u2014move to 01 and 11\u2014 that Yingtai is uncertain whether Shanbo comes to the party, both when she comes to the party \u2014the equivalence class consisting of 00 and 01\u2014 as when she does not come to the party \u2014the cluster consisting of 10 and 11.\nis equivalent to [p][p := \u22a4]\u03d5, for all \u03d5. So it does not matter. (We also recall that Pang Juan would die no matter which observation he made. We can satisfy this requirement by replacing the announcement that p by the announcement that q in the modelling with two epistemic actions. But that does not give any insight.) We end up with the satisfiability of\n\u00acp \u2227 [\u03b1(p)]p\nbut without being able to generalize this to a validity of shape \u00acp \u2192 [\u03b1(p)]p. This would require stronger or different logics, involving agency, or other notions of action or interaction (van Emde Boas and van Emde Boas Lubsen, 2016), or of self-fulfilling prophesy.\nIn the Arnold Schwarzenegger example there is a lot of belief change and factual change going on. The epistemic goals of both agents, and their respective protocols in order to reach those goals, seem to play an important part.\nLet pj represent \u2018Jamie Lee Curtis is a spy\u2019 and pa represent \u2018Arnold Schwarzenegger is a spy\u2019. At first Arnold is a spy (pa), Arnold believes that he is a spy (Bapa \u2014of course, the reader might say; but hang on!), Jamie believes he is not a spy (Bj\u00acpa), and Arnold\u2019s goal is to keep it that way (Bj\u00acpa). Jamie is not a spy (\u00acpj), she believes that she is not a spy (Bj\u00acpj), and Arnold also believes this (Ba\u00acpj). Jamie\u2019s goal also is to keep it that way. So they both believe that the other is not a spy, and this is a stable situation, because both want the other to believe that. We now get a number of transitions where beliefs, facts, and goals all change. The initial situation is (i).\ngoal a goal j (i) pa \u00acpj Bapa Bj\u00acpa Ba\u00acpj Bj\u00acpj Bj\u00acpa Ba\u00acpj (ii) pa \u00acpj Bapa Bj\u00acpa Ba\u00acpj Bjpj Bj\u00acpa Bapj (iii) pa \u00acpj Bapa Bjpa Ba\u00acpj Bjpj Bj\u00acpa Bapj (iv) pa pj Bapa Bjpa Bapj Bjpj Bjpa Bapj\nThe epistemic goals of the agents are only realized in (i) and (iv); only there they are stable. Indeed, the last stage is the happy ending. (For details, please see the movie.) In (ii), Jamie has started to enact a spy in order to make Arnold believe that she is a spy; she even believes that she has become a spy, without realizing that she has been set up: she is not really a spy. In (iii), she finds out that Arnold is a spy (because unlike Arnold, third parties believe that she is a spy and that she is collaborating with Arnold). In (iv) \u2014abstracting from intervening details involving helicopter fights and Miami skyscrapers\u2014 they end up collaborating as spies and believing in each other, now truthfully so. Again, a stable situation.\nLet us call the composition of all these actions \u03b1(pa, pj). Again we have satisfiability of\n(pa \u2227 \u00acpj) \u2227 [\u03b1(pa, pj)](pa \u2227 pj)\nbut no general pattern involving validity of (pa \u2227 \u00acpj) \u2192 [\u03b1(pa, pj)](pa \u2227 pj) or any other additional insight. Lacking in our formal analysis in dynamic epistemic logic are much stronger notions of epistemic protocol (how does one realize an epistemic goal given a\nbelief state?), protocol logics, and, again, notions of agency (Bolander and Andersen, 2011; Wang, 2010). Second-order false belief scenarios are modelled in Brau\u0308ner et al. (2016); Arslan et al. (2015)."}, {"heading": "10 Conclusions", "text": "We have presented a large variety of communicative scenarios involving agents truthtelling and lying while keeping their beliefs consistent. Of particular interest were iterations of announcements where the beliefs of the agents never stabilize: the models keep changing with every next announcement. The investigation can be seen as the obvious next step given existing in-depth investigations of successful and self-refuting updates changing agents\u2019 knowledge, i.e., on models where epistemic stances are interpreted with equivalence relations. We have carried this forward not merely to the KD45 models for believing agents, but also to models without structural properties. Two new types of update then come to the fore: true lies (that become true after a lying announcement) and impossible lies (that stay false even after a lying announcement), and also iterations of such announcements. An open question on these iterations is which \u03c3-valid formulas are realizable."}, {"heading": "Acknowledgements", "text": "Yanjing Wang thanks Ce\u0301dric De\u0301gremont and Andreas Witzel for discussions on the example in Section 7, and he acknowledges support from the National Program for Special Support of Eminent Professionals. Hans van Ditmarsch acknowledges support from ERC project EPS 313360. He is also affiliated to IMSc (Institute for Mathematical Sciences), Chennai, India. We thank the reviewers of Synthese for their helpful comments."}, {"heading": "Appendix A: Action models", "text": "Assume an epistemic model M = (S,R, V ), and a formula \u03d5. We recall the semantics of believed public announcement (arrow elimination semantics for public announcement).\nM, s |= [\u03d5]\u03c8 iff M |\u03d5, s |= \u03c8\nwhere epistemic model M |\u03d5 = (S,R\u03d5, V ) is as M except that for all a \u2208 A, R\u03d5a := Ra \u2229 (S \u00d7 [[\u03d5]]M ); and where [[\u03d5]]M := {s \u2208 S |M, s |= \u03d5}.\nThe semantics of truthful public announcement (state elimination semantics for public announcement) is as follows."}, {"heading": "M, s |= [\u03d5]\u03c8 iff M, s |= \u03d5 implies M |\u03d5, s |= \u03c8", "text": "where M |\u03d5 = (S \u2032, R\u2032, V \u2032) is such that S \u2032 = [[\u03d5]]M , R \u2032 = R \u2229 ([[\u03d5]]M \u00d7 [[\u03d5]]M ), and V \u2032 = V \u2229 [[\u03d5]]M . These different semantics are the same in the following important sense. If the announcement formula is true, the believed announcement semantics and truthful announcement semantics result in bisimilar models. In other words, as bisimilar models have the same logical theory: they cannot be distinguished by a formula in the logic, such as the resulting beliefs of the agents.\nAction model logic is a generalization of public announcement logic, namely to (possibly) non-public actions. We present the version with factual change. In the language we only have to replace the public announcement modalities [\u03d5]\u03c8 with action model modalities [M, s]\u03c8, for \u2018after execution of epistemic action (M, s), \u03c8\u2019 (is true). An action model is like an epistemic model, only instead of a valuation it has preconditions and postconditions. The syntactic primitive [M, s]\u03c8 may seem a peculiar mix of syntax and semantics, but there is a way to see this as a properly inductive construct in a two-typed language with both formulas and epistemic actions, because the preconditions and postconditions of these actions are again formulas. We now proceed with the technical details.\nAn action model M = (S,R, pre, post) for language L (assumed to be simultaneously defined with primitive construct [M, s]\u03d5, see above) consists of a domain S of actions, an accessibility function R : A \u2192 P(S \u00d7 S), where each R(a), for which we write Ra, is an accessibility relation, a precondition function pre : S \u2192 L, that assigns to each action its executability precondition, and postcondition function post : S \u2192 P 6\u2192 L, where it is required that each post(s) only maps a finite (possibly empty) subset of all atoms to a formula. For s \u2208 S, (M, s) is an epistemic action.\nThe semantics of action model execution is as follows.\nM, s |= [M, s]\u03c8 iff M, s |= pre(s) implies M \u2297M, (s, s) |= \u03c8\nwhere M \u2297M = (S \u2032, R\u2032, V \u2032) (known as update of M with M, or as the result of executing M in M) is such that S \u2032 = {(s, s) |M, s |= s}; ((s, s), (t, t)) \u2208 Ra iff (s, t) \u2208 Ra and (s, t) \u2208 Ra;\nand (s, s) \u2208 V \u2032(p) iff M, s |= post(s)(p) for all p in the domain of post, and otherwise (s, s) \u2208 V \u2032(p) iff s \u2208 V (p).\nA truthful public announcement of \u03d5 corresponds to a singleton action model M = (S,R, pre, post) with S = {s}; Ra = {(s, s)} for all a \u2208 A; pre(s) = \u03d5 (and empty domain for postconditions). A believed public announcement of \u03d5 corresponds to a a two-point action model M = (S,R, pre, post) with S = {s, t}; Ra = {(t, s), (s, s)} for all a \u2208 A; pre(s) = \u03d5 and pre(t) = \u00ac\u03d5 (and again the empty domain for postconditions). If the designated point is t it is a public lie and if the designated point is s it is a truthful (believed) announcement."}, {"heading": "Appendix B: Depicting knowledge and belief", "text": "To depict epistemic models, a pair of states in the accessibility relation is represented by an arrow between those states. There are visual conventions to simplify the display of multiagent S5 models and multi-agent KD45 models. The conventions guarantee that, given a number of agents, any of the following three uniquely determines the two others: (i) the epistemic frame, (ii) the fully displayed visualization, and (iii) the simplified visualization.\nIn S5 models all accessibility relations are equivalence relations, so that we can partition the domain in equivalence classes: sets of indistinguishable states. In the visualization we can therefore assume transitive, symmetric, and reflexive closure. Visually, indistinguishable states are connected by a path (transitive closure) of undirected edges (symmetric closure). Reflexive arrows not drawn (reflexive closure). Singleton equivalence classes do not show in the visualation. But they are inferable as long as we know how many agents there are.\nExamples are as follows. The simplified visualization is on the right and the visualization with all arrows of the accessibility relation is on the left.\n\u2022 \u2022 \u2022 \u2022\n\u2022 \u2022 \u2022\n\u2022 \u2022 \u2022\n\u2022 \u2022 \u2022 \u2022 \u2022 \u2022\nIn KD45 models all accessibility relations are transitive, euclidean and serial. Therefore we can divide the domain in clusters. A cluster is a set of indistinguishable states (just as an equivalence class in S5), but those states may also appear to be indistinguishable from the perspective of states outside the cluster (unlike in S5), the so-called unreachable states. In unreachable states beliefs are incorrect. In the KD45 visualization we can therefore assume transitive and euclidean closure, and (this is crucial) we can assume reflexive closure of\nstates in a cluster. This is because a state in a cluster is a state that is reachable from another state. Reflexivity then follows from seriality and euclidicity: from (x, y) \u2208 R and once more) (x, y) \u2208 R follows with euclidicity that (y, y) \u2208 R). It is therefore not so different from the S5 visualization. The only difference is that we also draw arrows from states outside a cluster to a (exactly one) cluster. From the source state of such an arrow is not only accessible the state in the cluster that is the endpoint of that arrow, but also all other states in that cluster.\nExamples are as follows.\n\u2022 \u2022 \u2022 \u2022\n\u2022 \u2022 \u2022 \u2022 \u2022 \u2022\n\u2022 \u2022 \u2022 \u2022 \u2022 \u2022\nA good way to understand the visualization rules is to reproduce the full visualization on the left from the simplified visualization on the right. The role of singleton clusters takes some getting used to. For example, in the first KD45 example, on the right: As there is an outgoing arrow from the left state, it is not a state in a cluster but an unreachable state. Therefore it has no loop in the completion, on the left. As there is an incoming arrow in the right state it is part of a cluster. This is therefore a singleton cluster. This state must have a loop in the completion, on the left. In the last KD45 example, as there is an outgoing arrow for the solid relation from the left state, it is, just as in the first example, not a state in a cluster but an unreachable state. However, as there there is no outgoing arrow for the dashed relation from the left state, we can infer that it is a singleton cluster and thus infer a loop for the dashed relation. And indeed, on the left, it is there. Etc.\nThe S5 visualization is well-known. The KD45 visualization is not well-known."}], "references": [{"title": "Teaching children to attribute second-order false beliefs: A training study with feedback", "author": ["B. Arslan", "R. Verbrugge", "N. Taatgen", "B. Hollebrandse"], "venue": "D. Noelle, R. Dale, A. Warlaumont, J. Yoshimi, T. Matlock, C. Jennings, and P. Maglio, editors, Proc. of 37th CogSci .", "citeRegEx": "Arslan et al\\.,? 2015", "shortCiteRegEx": "Arslan et al\\.", "year": 2015}, {"title": "A logic for suspicious players: Epistemic actions and belief updates in games", "author": ["A. Baltag"], "venue": "Bulletin of Economic Research, 54(1), 1\u201345.", "citeRegEx": "Baltag,? 2002", "shortCiteRegEx": "Baltag", "year": 2002}, {"title": "The logic of public announcements, common knowledge, and private suspicions", "author": ["A. Baltag", "L. Moss", "S. Solecki"], "venue": "Proc. of 7th TARK , pages 43\u201356. Morgan Kaufmann. 31", "citeRegEx": "Baltag et al\\.,? 1998", "shortCiteRegEx": "Baltag et al\\.", "year": 1998}, {"title": "Lying: Moral Choice in Public and Private Life", "author": ["S. Bok"], "venue": "Random House, New York.", "citeRegEx": "Bok,? 1978", "shortCiteRegEx": "Bok", "year": 1978}, {"title": "Epistemic planning for single and multi-agent systems", "author": ["T. Bolander", "M. Andersen"], "venue": "Journal of Applied Non-classical Logics , 21(1), 9\u201334.", "citeRegEx": "Bolander and Andersen,? 2011", "shortCiteRegEx": "Bolander and Andersen", "year": 2011}, {"title": "Second-order false-belief tasks: Analysis and formalization", "author": ["T. Bra\u00fcner", "P. Blackburn", "I. Polyanskaya"], "venue": "J. V\u00e4\u00e4n\u00e4nen, \u00c5. Hirvonen, and R. de Queiroz, editors, Proc. of WoLLIC , pages 125\u2013144. Springer. LNCS 9803.", "citeRegEx": "Bra\u00fcner et al\\.,? 2016", "shortCiteRegEx": "Bra\u00fcner et al\\.", "year": 2016}, {"title": "Undecidability for arbitrary public announcement logic", "author": ["T. French", "H. van Ditmarsch"], "venue": "C. Areces and R. Goldblatt, editors, Advances in Modal Logic 7 , pages 23\u201342, London. College Publications.", "citeRegEx": "French and Ditmarsch,? 2008", "shortCiteRegEx": "French and Ditmarsch", "year": 2008}, {"title": "Reasoning about information change", "author": ["J. Gerbrandy", "W. Groeneveld"], "venue": "Journal of Logic, Language, and Information, 6, 147\u2013169.", "citeRegEx": "Gerbrandy and Groeneveld,? 1997", "shortCiteRegEx": "Gerbrandy and Groeneveld", "year": 1997}, {"title": "Knowledge and Belief", "author": ["J. Hintikka"], "venue": "Cornell University Press, Ithaca, NY.", "citeRegEx": "Hintikka,? 1962", "shortCiteRegEx": "Hintikka", "year": 1962}, {"title": "Moorean phenomena in epistemic logic", "author": ["W. Holliday", "T. Icard"], "venue": "L. Beklemishev, V. Goranko, and V. Shehtman, editors, Advances in Modal Logic 8 , pages 178\u2013199. College Publications.", "citeRegEx": "Holliday and Icard,? 2010", "shortCiteRegEx": "Holliday and Icard", "year": 2010}, {"title": "Information dynamics and uniform substitution", "author": ["W. Holliday", "T. Hoshi", "T. Icard"], "venue": "Synthese, 190(Supplement-1), 31\u201355.", "citeRegEx": "Holliday et al\\.,? 2013", "shortCiteRegEx": "Holliday et al\\.", "year": 2013}, {"title": "Expressivity and completeness for public update logics via reduction axioms", "author": ["B. Kooi"], "venue": "Journal of Applied Non-Classical Logics , 17(2), 231\u2013254.", "citeRegEx": "Kooi,? 2007", "shortCiteRegEx": "Kooi", "year": 2007}, {"title": "Arrow update logic", "author": ["B. Kooi", "B. Renne"], "venue": "Review of Symbolic Logic, 4(4), 536\u2013559.", "citeRegEx": "Kooi and Renne,? 2011", "shortCiteRegEx": "Kooi and Renne", "year": 2011}, {"title": "Reasoning about agent types and the hardest logic puzzle ever", "author": ["F. Liu", "Y. Wang"], "venue": "Minds and Machines , 23(1), 123\u2013161.", "citeRegEx": "Liu and Wang,? 2013", "shortCiteRegEx": "Liu and Wang", "year": 2013}, {"title": "Two definitions of lying", "author": ["J. Mahon"], "venue": "Journal of Applied Philosophy , 22(2), 21\u2013230.", "citeRegEx": "Mahon,? 2006", "shortCiteRegEx": "Mahon", "year": 2006}, {"title": "The definition of lying and deception", "author": ["J. Mahon"], "venue": "The Stanford Encyclopedia of Philosophy .", "citeRegEx": "Mahon,? 2008", "shortCiteRegEx": "Mahon", "year": 2008}, {"title": "The undecidability of iterated modal relativization", "author": ["J. Miller", "L. Moss"], "venue": "Studia Logica, 79(3), 373\u2013407. 32", "citeRegEx": "Miller and Moss,? 2005", "shortCiteRegEx": "Miller and Moss", "year": 2005}, {"title": "A reply to my critics", "author": ["G. Moore"], "venue": "P. Schilpp, editor, The Philosophy of G.E. Moore, pages 535\u2013677. Northwestern University, Evanston IL. The Library of Living Philosophers (volume 4).", "citeRegEx": "Moore,? 1942", "shortCiteRegEx": "Moore", "year": 1942}, {"title": "Cheating husbands and other stories: a case study in knowledge, action, and communication", "author": ["Y. Moses", "D. Dolev", "J. Halpern"], "venue": "Distributed Computing , 1(3), 167\u2013176.", "citeRegEx": "Moses et al\\.,? 1986", "shortCiteRegEx": "Moses et al\\.", "year": 1986}, {"title": "Logics of public communications", "author": ["J. Plaza"], "venue": "Proc. of the 4th ISMIS , pages 201\u2013216. Oak Ridge National Laboratory.", "citeRegEx": "Plaza,? 1989", "shortCiteRegEx": "Plaza", "year": 1989}, {"title": "Sentences true after being announced", "author": ["L. Qian"], "venue": "Proc. of the Student Conference of NASSLLI 2002 . Stanford University.", "citeRegEx": "Qian,? 2002", "shortCiteRegEx": "Qian", "year": 2002}, {"title": "Exploring the iterated update universe", "author": ["T. Sadzik"], "venue": "ILLC, Amsterdam. Technical report PP-2006-18.", "citeRegEx": "Sadzik,? 2006", "shortCiteRegEx": "Sadzik", "year": 2006}, {"title": "Formal definitions of lying", "author": ["C. Sakama"], "venue": "Proc. of 14th TRUST.", "citeRegEx": "Sakama,? 2011", "shortCiteRegEx": "Sakama", "year": 2011}, {"title": "Lying", "author": ["F. Siegler"], "venue": "American Philosophical Quarterly , 3, 128\u2013136.", "citeRegEx": "Siegler,? 1966", "shortCiteRegEx": "Siegler", "year": 1966}, {"title": "A system for consistency preserving belief change", "author": ["D. Steiner"], "venue": "Proc. of the ESSLLI Workshop on Rationality and Knowledge, pages 133\u2013144.", "citeRegEx": "Steiner,? 2006", "shortCiteRegEx": "Steiner", "year": 2006}, {"title": "Logics of communication and change", "author": ["J. van Benthem", "J. van Eijck", "B. Kooi"], "venue": "Information and Computation,", "citeRegEx": "Benthem et al\\.,? \\Q2006\\E", "shortCiteRegEx": "Benthem et al\\.", "year": 2006}, {"title": "One Hundred Prisoners and a Light Bulb. Copernicus", "author": ["H. van Ditmarsch", "B. Kooi"], "venue": null, "citeRegEx": "Ditmarsch and Kooi,? \\Q2015\\E", "shortCiteRegEx": "Ditmarsch and Kooi", "year": 2015}, {"title": "Dynamic Epistemic Logic, volume 337 of Synthese Library", "author": ["H. van Ditmarsch", "W. van der Hoek", "B. Kooi"], "venue": null, "citeRegEx": "Ditmarsch et al\\.,? \\Q2007\\E", "shortCiteRegEx": "Ditmarsch et al\\.", "year": 2007}, {"title": "On the logic of lying", "author": ["H. van Ditmarsch", "J. van Eijck", "F. Sietsma", "Y. Wang"], "venue": "In Games, Actions and Social Software,", "citeRegEx": "Ditmarsch et al\\.,? \\Q2012\\E", "shortCiteRegEx": "Ditmarsch et al\\.", "year": 2012}, {"title": "Hidden protocols: Modifying our expectations in an evolving world", "author": ["H. van Ditmarsch", "S. Ghosh", "R. Verbrugge", "Y. Wang"], "venue": "Artificial Intelligence,", "citeRegEx": "Ditmarsch et al\\.,? \\Q2014\\E", "shortCiteRegEx": "Ditmarsch et al\\.", "year": 2014}, {"title": "The rules of victorious warriors \u2014 logical and game theoretical aspects of strategy theory in ancient china", "author": ["P. van Emde Boas", "G. van Emde Boas Lubsen"], "venue": "Technical report, University of Amsterdam. ILLC Research Report PP-2016-22", "citeRegEx": "Boas and Lubsen,? \\Q2016\\E", "shortCiteRegEx": "Boas and Lubsen", "year": 2016}, {"title": "Epistemic Modelling and Protocol Dynamics", "author": ["Y. Wang"], "venue": "Ph.D. thesis, Universiteit van Amsterdam.", "citeRegEx": "Wang,? 2010", "shortCiteRegEx": "Wang", "year": 2010}], "referenceMentions": [{"referenceID": 7, "context": "In an alternative semantics for public announcement logic, that of conscious update (Gerbrandy and Groeneveld, 1997), and that is also known as believed (public) announcement logic, the announcement of a formula is independent of its truth.", "startOffset": 84, "endOffset": 116}, {"referenceID": 23, "context": "Lying has been a thriving topic in the philosophical community since then (Siegler, 1966; Bok, 1978; Mahon, 2006, 2008).", "startOffset": 74, "endOffset": 119}, {"referenceID": 3, "context": "Lying has been a thriving topic in the philosophical community since then (Siegler, 1966; Bok, 1978; Mahon, 2006, 2008).", "startOffset": 74, "endOffset": 119}, {"referenceID": 5, "context": "In an alternative semantics for public announcement logic, that of conscious update (Gerbrandy and Groeneveld, 1997), and that is also known as believed (public) announcement logic, the announcement of a formula is independent of its truth. In that logic, we can call an announcement a lie if the announced formula is false. A true lie is then the announcement of something false that makes it true. This analysis of a lie is not entirely according to the traditional view of agents lying to each other: you are lying to me if you believe \u00ac\u03c6 but you say to me that \u03c6 with the intention to make me believe that \u03c6. If we model the realization of this intention (namely that indeed I believe you), and incorporate all belief aspects, we get \u2737a\u00ac\u03c6\u2192 [\u2737a\u03c6]\u2737b\u2737a\u03c6 (where agent a lies to agent b). Abstracting from all belief aspects gives us \u00ac\u03c6 \u2192 [\u03c6]\u03c6. Although the former is more precise, it is not uncommon, if not customary, to abstract from the source and the justification of the lie so that we get \u00ac\u03c6 \u2192 [\u03c6]\u2737b\u03c6, from where it is not a big step to \u00ac\u03c6 \u2192 [\u03c6]\u03c6, the main focus of our investigation. (In order to make this identification, we can think of agent b as the special agent who is able to distinguish all states, for whom it holds that \u2737b\u03c6 \u2194 \u03c6.) This simplied schema \u00ac\u03c6 \u2192 [\u03c6]\u03c6 is clearly in opposition to the schema \u03c6 \u2192 [\u03c6]\u03c6 for the so-called successful formulas. (In truthful public announcement logic the successful formulas are those for which [\u03c6]\u03c6 is valid. In that logic [\u03c6]\u03c6 is equivalent to \u03c6 \u2192 [\u03c6]\u03c6. But in believed public announcement logic, where announcements are independent of the truth of the announced formula, [\u03c6]\u03c6 is not equivalent to \u03c6 \u2192 [\u03c6]\u03c6.) In this work we mainly investigate true lies, successful formulas, and yet other notions in believed announcement logic, and also the iteration of such announcements. We also present results in this work that are not for believed announcement logic, but that are still related to iterated announcements, or to lying. In the logic of believed public announcements, interpreted on KD45 models encoding belief, the announced formula can be false and true before the announcement and can also be false and true after the announcement; and even beyond that, when iterating that same announcement, this value can change in arbitrary ways after each next announcement. In This analysis of lying goes back to Augustine (1988). Lying has been a thriving topic in the philosophical community since then (Siegler, 1966; Bok, 1978; Mahon, 2006, 2008).", "startOffset": 85, "endOffset": 2382}, {"referenceID": 1, "context": "More recent modal logical analyses that can be seen as a continuation of this philosophical tradition include Baltag (2002); Steiner (2006); Kooi and Renne (2011); van Ditmarsch et al.", "startOffset": 110, "endOffset": 124}, {"referenceID": 1, "context": "More recent modal logical analyses that can be seen as a continuation of this philosophical tradition include Baltag (2002); Steiner (2006); Kooi and Renne (2011); van Ditmarsch et al.", "startOffset": 110, "endOffset": 140}, {"referenceID": 1, "context": "More recent modal logical analyses that can be seen as a continuation of this philosophical tradition include Baltag (2002); Steiner (2006); Kooi and Renne (2011); van Ditmarsch et al.", "startOffset": 110, "endOffset": 163}, {"referenceID": 1, "context": "More recent modal logical analyses that can be seen as a continuation of this philosophical tradition include Baltag (2002); Steiner (2006); Kooi and Renne (2011); van Ditmarsch et al. (2012); Sakama (2011); Liu and Wang (2013); van Ditmarsch (2014).", "startOffset": 110, "endOffset": 192}, {"referenceID": 1, "context": "More recent modal logical analyses that can be seen as a continuation of this philosophical tradition include Baltag (2002); Steiner (2006); Kooi and Renne (2011); van Ditmarsch et al. (2012); Sakama (2011); Liu and Wang (2013); van Ditmarsch (2014).", "startOffset": 110, "endOffset": 207}, {"referenceID": 1, "context": "More recent modal logical analyses that can be seen as a continuation of this philosophical tradition include Baltag (2002); Steiner (2006); Kooi and Renne (2011); van Ditmarsch et al. (2012); Sakama (2011); Liu and Wang (2013); van Ditmarsch (2014).", "startOffset": 110, "endOffset": 228}, {"referenceID": 1, "context": "More recent modal logical analyses that can be seen as a continuation of this philosophical tradition include Baltag (2002); Steiner (2006); Kooi and Renne (2011); van Ditmarsch et al. (2012); Sakama (2011); Liu and Wang (2013); van Ditmarsch (2014). In modal logics with only belief operators the intentional aspect of lying is not modelled.", "startOffset": 110, "endOffset": 250}, {"referenceID": 7, "context": ", 2012)) in believed (public) announcement logic, also known as \u2018arrow elimination\u2019 (not necessarily truthful) public announcement logic (Gerbrandy and Groeneveld, 1997), which is a lesser known alternative for the better known \u2018state elimination\u2019 (truthful) public announcement logic (Plaza, 1989; Baltag et al.", "startOffset": 137, "endOffset": 169}, {"referenceID": 19, "context": ", 2012)) in believed (public) announcement logic, also known as \u2018arrow elimination\u2019 (not necessarily truthful) public announcement logic (Gerbrandy and Groeneveld, 1997), which is a lesser known alternative for the better known \u2018state elimination\u2019 (truthful) public announcement logic (Plaza, 1989; Baltag et al., 1998).", "startOffset": 285, "endOffset": 319}, {"referenceID": 2, "context": ", 2012)) in believed (public) announcement logic, also known as \u2018arrow elimination\u2019 (not necessarily truthful) public announcement logic (Gerbrandy and Groeneveld, 1997), which is a lesser known alternative for the better known \u2018state elimination\u2019 (truthful) public announcement logic (Plaza, 1989; Baltag et al., 1998).", "startOffset": 285, "endOffset": 319}, {"referenceID": 19, "context": "This is why it is called believed (public) announcement of \u03c6, in contrast to the truthful (public) announcement of \u03c6 (Plaza, 1989), wherein we restrict the model to the subdomain of all states where \u03c6 is true (see Appendix A).", "startOffset": 117, "endOffset": 130}, {"referenceID": 7, "context": "As said, believed announcement logic originates with Gerbrandy and Groeneveld (1997), where it is called the logic of conscious updates.", "startOffset": 53, "endOffset": 85}, {"referenceID": 7, "context": "As said, believed announcement logic originates with Gerbrandy and Groeneveld (1997), where it is called the logic of conscious updates. In believed announcement logic new information is accepted by the agents independent from the truth of that information. In truthful announcement logic new information is only incorporated if it is true. It should be noted that in believed announcement logic announcements can be truthful (namely when true) and lying (namely when false), whereas in truthful announcement logic announcements can only be truthful. In van Ditmarsch et al. (2012) the believed public", "startOffset": 53, "endOffset": 582}, {"referenceID": 7, "context": "The interaction between announcement and belief can be formalized as [\u03c6]\u2737a\u03c8 \u2194 \u2737a(\u03c6\u2192 [\u03c6]\u03c8) (Gerbrandy and Groeneveld, 1997).", "startOffset": 90, "endOffset": 122}, {"referenceID": 7, "context": "The interaction between announcement and belief can be formalized as [\u03c6]\u2737a\u03c8 \u2194 \u2737a(\u03c6\u2192 [\u03c6]\u03c8) (Gerbrandy and Groeneveld, 1997). Believed and truthful announcement are therefore closely related. And even in a technical sense: whenever a believed announcement is true, the semantics delivers results that are indistinguishable in the logics. This is because on any epistemic model, the model restriction semantics and the arrow restriction semantics result in bisimilar models, on the part of the model wherein the announcement is true. Investigations of these correspondences are made in Kooi (2007) and van Ditmarsch et al.", "startOffset": 91, "endOffset": 595}, {"referenceID": 7, "context": "The interaction between announcement and belief can be formalized as [\u03c6]\u2737a\u03c8 \u2194 \u2737a(\u03c6\u2192 [\u03c6]\u03c8) (Gerbrandy and Groeneveld, 1997). Believed and truthful announcement are therefore closely related. And even in a technical sense: whenever a believed announcement is true, the semantics delivers results that are indistinguishable in the logics. This is because on any epistemic model, the model restriction semantics and the arrow restriction semantics result in bisimilar models, on the part of the model wherein the announcement is true. Investigations of these correspondences are made in Kooi (2007) and van Ditmarsch et al. (2012).", "startOffset": 91, "endOffset": 627}, {"referenceID": 9, "context": "The successful formulas are the most well-known from the literature, and have been investigated on the class of S5 models (van Ditmarsch and Kooi, 2006; Holliday and Icard, 2010).", "startOffset": 122, "endOffset": 178}, {"referenceID": 17, "context": "The archetypical unsuccessful update and even self-refuting formula in that setting is p \u2227 \u00ac\u2737p (Moore, 1942; Hintikka, 1962; Holliday and Icard, 2010).", "startOffset": 95, "endOffset": 150}, {"referenceID": 8, "context": "The archetypical unsuccessful update and even self-refuting formula in that setting is p \u2227 \u00ac\u2737p (Moore, 1942; Hintikka, 1962; Holliday and Icard, 2010).", "startOffset": 95, "endOffset": 150}, {"referenceID": 9, "context": "The archetypical unsuccessful update and even self-refuting formula in that setting is p \u2227 \u00ac\u2737p (Moore, 1942; Hintikka, 1962; Holliday and Icard, 2010).", "startOffset": 95, "endOffset": 150}, {"referenceID": 16, "context": "For infinite \u03c3, in view of iterated relativization (Miller and Moss, 2005; Sadzik, 2006), formulas that can be announced arbitrarily often in a given model without stabilizing to the value of the announcement formula or its negation have our special attention.", "startOffset": 51, "endOffset": 88}, {"referenceID": 21, "context": "For infinite \u03c3, in view of iterated relativization (Miller and Moss, 2005; Sadzik, 2006), formulas that can be announced arbitrarily often in a given model without stabilizing to the value of the announcement formula or its negation have our special attention.", "startOffset": 51, "endOffset": 88}, {"referenceID": 9, "context": "The proof closely follows the proof of the syntactic characterization of successful formulas in Holliday and Icard (2010).", "startOffset": 96, "endOffset": 122}, {"referenceID": 18, "context": "steps forward\u2019 in the muddy children problem (Moses et al., 1986; van Ditmarsch and Kooi, 2015).", "startOffset": 45, "endOffset": 95}, {"referenceID": 17, "context": "However, the archetypical unsuccessful update is p \u2227 \u00ac\u2737p (Moore, 1942; Hintikka, 1962).", "startOffset": 57, "endOffset": 86}, {"referenceID": 8, "context": "However, the archetypical unsuccessful update is p \u2227 \u00ac\u2737p (Moore, 1942; Hintikka, 1962).", "startOffset": 57, "endOffset": 86}, {"referenceID": 9, "context": "The successful formulas are the most well-known from the literature, and have been investigated on the class of S5 models (van Ditmarsch and Kooi, 2006; Holliday and Icard, 2010).", "startOffset": 122, "endOffset": 178}, {"referenceID": 9, "context": "A characterization of single-agent successful formulas in S5 is known (Holliday and Icard, 2010) (we will use it below to obtain results for true lies), but only incidental results and no characterization is known for multi-agent successful formulas.", "startOffset": 70, "endOffset": 96}, {"referenceID": 20, "context": "Results are that: the positive fragment is successful (van Ditmarsch and Kooi, 2006) (the positive or universal fragment of the language of public announcement logic is inductively defined by \u03c6 ::= p | \u00acp | \u03c6 \u2228 \u03c6 | \u03c6 \u2227 \u03c6 | \u2737a\u03c6 | [\u00ac\u03c6]\u03c6), publicly known formulas are successful (formulas \u2737\u2217A\u03c6, where \u2737 \u2217 A stands for common knowledge for the set of all agents \u2014 however note that \u2737\u2217B\u03c6 may be unsuccessful if B \u2282 A), \u00ac\u2737ap is successful (and non-trivially believable) (Qian, 2002) \u2014 an older result than Holliday and Icard (2010), but subsumed by the later characterization of Holliday and Icard (2010).", "startOffset": 464, "endOffset": 476}, {"referenceID": 10, "context": "But this uniform substitution holds for the fragment of the language consisting of the successful formulas (Holliday et al., 2013).", "startOffset": 107, "endOffset": 130}, {"referenceID": 8, "context": "However, the archetypical unsuccessful update is p \u2227 \u00ac\u2737p (Moore, 1942; Hintikka, 1962). The original 1940s setting is the incoherence of a person saying \u201cI went to the pictures [movies] last Tuesday, but I don\u2019t believe that I did\u201d (Moore, 1942, p. 543). In fact, p \u2227 \u00ac\u2737p is a self-refuting formula: after announcing it truthfully, it always becomes false. The successful formulas are the most well-known from the literature, and have been investigated on the class of S5 models (van Ditmarsch and Kooi, 2006; Holliday and Icard, 2010). On the class S5, and using the (state eliminating) semantics of truthful public announcement logic, the successful formulas are those for which |= [\u03c6]\u03c6 (and the selfrefuting formulas are then those for which |= [\u03c6]\u00ac\u03c6). On S5 (but of course not in KD45), \u03c6 \u2192 [\u03c6]\u03c8 is equivalent to [\u03c6]\u03c8. A formula is successful in believed announcement logic if and only if it is successful in truthful announcement logic. This we can easily see: In truthful announcement logic, M, s |= [\u03c6]\u03c6 iff (M, s |= \u03c6 implies M |\u03c6, s |= \u03c6), where M |\u03c6 denotes the submodel consisting of the states satisfying \u03c6 (see Appendix A); whereas in believed announcement logic, M, s |= \u03c6 \u2192 [\u03c6]\u03c6 iff (M, s |= \u03c6 implies M |\u03c6, s |= \u03c6). Using that, whenever the announcement formula \u03c6 is true in a model (M, s), the model (M |\u03c6, s) resulting from state elimination is bisimilar to the model (M |\u03c6, s) resulting from arrow elimination. A characterization of single-agent successful formulas in S5 is known (Holliday and Icard, 2010) (we will use it below to obtain results for true lies), but only incidental results and no characterization is known for multi-agent successful formulas. Results are that: the positive fragment is successful (van Ditmarsch and Kooi, 2006) (the positive or universal fragment of the language of public announcement logic is inductively defined by \u03c6 ::= p | \u00acp | \u03c6 \u2228 \u03c6 | \u03c6 \u2227 \u03c6 | \u2737a\u03c6 | [\u00ac\u03c6]\u03c6), publicly known formulas are successful (formulas \u2737\u2217A\u03c6, where \u2737 \u2217 A stands for common knowledge for the set of all agents \u2014 however note that \u2737\u2217B\u03c6 may be unsuccessful if B \u2282 A), \u00ac\u2737ap is successful (and non-trivially believable) (Qian, 2002) \u2014 an older result than Holliday and Icard (2010), but subsumed by the later characterization of Holliday and Icard (2010).", "startOffset": 71, "endOffset": 2207}, {"referenceID": 8, "context": "However, the archetypical unsuccessful update is p \u2227 \u00ac\u2737p (Moore, 1942; Hintikka, 1962). The original 1940s setting is the incoherence of a person saying \u201cI went to the pictures [movies] last Tuesday, but I don\u2019t believe that I did\u201d (Moore, 1942, p. 543). In fact, p \u2227 \u00ac\u2737p is a self-refuting formula: after announcing it truthfully, it always becomes false. The successful formulas are the most well-known from the literature, and have been investigated on the class of S5 models (van Ditmarsch and Kooi, 2006; Holliday and Icard, 2010). On the class S5, and using the (state eliminating) semantics of truthful public announcement logic, the successful formulas are those for which |= [\u03c6]\u03c6 (and the selfrefuting formulas are then those for which |= [\u03c6]\u00ac\u03c6). On S5 (but of course not in KD45), \u03c6 \u2192 [\u03c6]\u03c8 is equivalent to [\u03c6]\u03c8. A formula is successful in believed announcement logic if and only if it is successful in truthful announcement logic. This we can easily see: In truthful announcement logic, M, s |= [\u03c6]\u03c6 iff (M, s |= \u03c6 implies M |\u03c6, s |= \u03c6), where M |\u03c6 denotes the submodel consisting of the states satisfying \u03c6 (see Appendix A); whereas in believed announcement logic, M, s |= \u03c6 \u2192 [\u03c6]\u03c6 iff (M, s |= \u03c6 implies M |\u03c6, s |= \u03c6). Using that, whenever the announcement formula \u03c6 is true in a model (M, s), the model (M |\u03c6, s) resulting from state elimination is bisimilar to the model (M |\u03c6, s) resulting from arrow elimination. A characterization of single-agent successful formulas in S5 is known (Holliday and Icard, 2010) (we will use it below to obtain results for true lies), but only incidental results and no characterization is known for multi-agent successful formulas. Results are that: the positive fragment is successful (van Ditmarsch and Kooi, 2006) (the positive or universal fragment of the language of public announcement logic is inductively defined by \u03c6 ::= p | \u00acp | \u03c6 \u2228 \u03c6 | \u03c6 \u2227 \u03c6 | \u2737a\u03c6 | [\u00ac\u03c6]\u03c6), publicly known formulas are successful (formulas \u2737\u2217A\u03c6, where \u2737 \u2217 A stands for common knowledge for the set of all agents \u2014 however note that \u2737\u2217B\u03c6 may be unsuccessful if B \u2282 A), \u00ac\u2737ap is successful (and non-trivially believable) (Qian, 2002) \u2014 an older result than Holliday and Icard (2010), but subsumed by the later characterization of Holliday and Icard (2010). A strong intuitive and technical motivation for the successful formulas in truthful announcement logic is that they describe the so-called substitution free fragment of the logic.", "startOffset": 71, "endOffset": 2280}, {"referenceID": 9, "context": "A syntactic characterization of single-agent self-refuting formulas in S5 is also presented in Holliday and Icard (2010), but a more general multi-agent characterization is also not known to us (researchers have been looking for this in vain for some considerable time).", "startOffset": 95, "endOffset": 121}, {"referenceID": 11, "context": "The technique has been used to great effect for undecidability arguments for S5 logics (French and van Ditmarsch, 2008) and also to great effect for expressivity arguments for such logics (van Ditmarsch et al., 2007; Kooi, 2007).", "startOffset": 188, "endOffset": 228}, {"referenceID": 9, "context": "Exactly which formulas are true lies? Can they been characterized syntactically, and if so, how? The corresponding problem for successful and self-refuting formulas has been studied and solved for the single-agent case (Holliday and Icard, 2010).", "startOffset": 219, "endOffset": 245}, {"referenceID": 9, "context": "These characterizations are given for S5 (see Section 4) but are said to hold also for KD45 \u201cwith minor changes\u201d (Holliday and Icard, 2010).", "startOffset": 113, "endOffset": 139}, {"referenceID": 9, "context": "Two main reasons that the single-agent case is easier, are that in that case, first, it is well known that any formula is (S5 or KD45) equivalent to a formula in disjunctive normal form without any nestings of modalities, and, second, that satisfiability of a formula in disjunctive normal form can be checked syntactically (Holliday and Icard, 2010) (see below for details).", "startOffset": 324, "endOffset": 350}, {"referenceID": 9, "context": "Exactly which formulas are true lies? Can they been characterized syntactically, and if so, how? The corresponding problem for successful and self-refuting formulas has been studied and solved for the single-agent case (Holliday and Icard, 2010). These characterizations are given for S5 (see Section 4) but are said to hold also for KD45 \u201cwith minor changes\u201d (Holliday and Icard, 2010). The problem is still open for the multi-agent case, for both classes of formulas. Two main reasons that the single-agent case is easier, are that in that case, first, it is well known that any formula is (S5 or KD45) equivalent to a formula in disjunctive normal form without any nestings of modalities, and, second, that satisfiability of a formula in disjunctive normal form can be checked syntactically (Holliday and Icard, 2010) (see below for details). Based on these two properties, the characterizations in Holliday and Icard (2010) check that certain disjuncts (conditionally) exist in the (disjunctive normal form) formula, which is shown to ensure that the formula is of the required type.", "startOffset": 220, "endOffset": 928}, {"referenceID": 9, "context": "Exactly which formulas are true lies? Can they been characterized syntactically, and if so, how? The corresponding problem for successful and self-refuting formulas has been studied and solved for the single-agent case (Holliday and Icard, 2010). These characterizations are given for S5 (see Section 4) but are said to hold also for KD45 \u201cwith minor changes\u201d (Holliday and Icard, 2010). The problem is still open for the multi-agent case, for both classes of formulas. Two main reasons that the single-agent case is easier, are that in that case, first, it is well known that any formula is (S5 or KD45) equivalent to a formula in disjunctive normal form without any nestings of modalities, and, second, that satisfiability of a formula in disjunctive normal form can be checked syntactically (Holliday and Icard, 2010) (see below for details). Based on these two properties, the characterizations in Holliday and Icard (2010) check that certain disjuncts (conditionally) exist in the (disjunctive normal form) formula, which is shown to ensure that the formula is of the required type. In this section we give a similar characterization of believable true lies. It is heavily inspired by Holliday and Icard (2010). Indeed, we take the technique directly from them, as well as notation and concepts.", "startOffset": 220, "endOffset": 1216}, {"referenceID": 9, "context": "Exactly which formulas are true lies? Can they been characterized syntactically, and if so, how? The corresponding problem for successful and self-refuting formulas has been studied and solved for the single-agent case (Holliday and Icard, 2010). These characterizations are given for S5 (see Section 4) but are said to hold also for KD45 \u201cwith minor changes\u201d (Holliday and Icard, 2010). The problem is still open for the multi-agent case, for both classes of formulas. Two main reasons that the single-agent case is easier, are that in that case, first, it is well known that any formula is (S5 or KD45) equivalent to a formula in disjunctive normal form without any nestings of modalities, and, second, that satisfiability of a formula in disjunctive normal form can be checked syntactically (Holliday and Icard, 2010) (see below for details). Based on these two properties, the characterizations in Holliday and Icard (2010) check that certain disjuncts (conditionally) exist in the (disjunctive normal form) formula, which is shown to ensure that the formula is of the required type. In this section we give a similar characterization of believable true lies. It is heavily inspired by Holliday and Icard (2010). Indeed, we take the technique directly from them, as well as notation and concepts. Just as Holliday and Icard (2010) syntactically characterize the set of successful formulas, we syntactically characterize the complement of the set of believable true lies.", "startOffset": 220, "endOffset": 1335}, {"referenceID": 9, "context": "Definition 15 (Clarity (Holliday and Icard, 2010)) Given a conjunction or disjunction \u03c7 of literals, L(\u03c7) denotes the set of literals occurring in it.", "startOffset": 23, "endOffset": 49}, {"referenceID": 21, "context": "In the regrettably unpublished (Sadzik, 2006) the matter of stabilization after action model execution is discussed at great length.", "startOffset": 31, "endOffset": 45}, {"referenceID": 2, "context": "A logic allowing both formalizations is called action model logic (with factual change) (Baltag et al., 1998; van Ditmarsch et al., 2007; van Benthem et al., 2006).", "startOffset": 88, "endOffset": 163}, {"referenceID": 1, "context": "A logic allowing both formalizations is called action model logic (with factual change) (Baltag et al., 1998; van Ditmarsch et al., 2007; van Benthem et al., 2006). This logic can be seen as a straightforward generalization of believed announcement logic. (Alternatively, we can model the dynamics in more protocol oriented dynamic epistemic logics, such as Wang (2010); van Ditmarsch et al.", "startOffset": 89, "endOffset": 370}, {"referenceID": 1, "context": "A logic allowing both formalizations is called action model logic (with factual change) (Baltag et al., 1998; van Ditmarsch et al., 2007; van Benthem et al., 2006). This logic can be seen as a straightforward generalization of believed announcement logic. (Alternatively, we can model the dynamics in more protocol oriented dynamic epistemic logics, such as Wang (2010); van Ditmarsch et al. (2014).) We only present some examples of action models and assume familiarity with the framework.", "startOffset": 89, "endOffset": 399}, {"referenceID": 4, "context": "belief state?), protocol logics, and, again, notions of agency (Bolander and Andersen, 2011; Wang, 2010).", "startOffset": 63, "endOffset": 104}, {"referenceID": 31, "context": "belief state?), protocol logics, and, again, notions of agency (Bolander and Andersen, 2011; Wang, 2010).", "startOffset": 63, "endOffset": 104}, {"referenceID": 3, "context": "belief state?), protocol logics, and, again, notions of agency (Bolander and Andersen, 2011; Wang, 2010). Second-order false belief scenarios are modelled in Bra\u00fcner et al. (2016); Arslan et al.", "startOffset": 64, "endOffset": 180}, {"referenceID": 0, "context": "(2016); Arslan et al. (2015).", "startOffset": 8, "endOffset": 29}], "year": 2017, "abstractText": "A true lie is a lie that becomes true when announced. In a logic of announcements, where the announcing agent is not modelled, a true lie is a formula (that is false and) that becomes true when announced. We investigate true lies and other types of interaction between announced formulas, their preconditions and their postconditions, in the setting Gerbrandy\u2019s logic of believed announcements, wherein agents may have or obtain incorrect beliefs. Our results are on the satisfiability and validity of instantiations of these semantically defined categories, on iterated announcements, including arbitrarily often iterated announcements, and on syntactic characterization. We close with results for iterated announcements in the logic of knowledge (instead of belief), and for lying as private announcements (instead of public announcements) to different agents. Detailed examples illustrate our lying concepts.", "creator": "LaTeX with hyperref package"}}}