{"id": "1611.04230", "review": {"conference": "AAAI", "VERSION": "v1", "DATE_OF_SUBMISSION": "14-Nov-2016", "title": "SummaRuNNer: A Recurrent Neural Network Based Sequence Model for Extractive Summarization of Documents", "abstract": "We present SummaRuNNer, a Recurrent Neural Network (RNN) based sequence model for extractive summarization of documents and show that it achieves performance better than or comparable to state-of-the-art. Our model has the additional advantage of being very interpretable, since it allows visualization of its predictions broken up by abstract features such as information content, salience and novelty. Another novel contribution of our work is abstractive training of our extractive model that can train on human generated reference summaries alone, eliminating the need for sentence-level extractive labels.", "histories": [["v1", "Mon, 14 Nov 2016 02:44:14 GMT  (76kb,D)", "http://arxiv.org/abs/1611.04230v1", "Published at AAAI 2017, The Thirty-First AAAI Conference on Artificial Intelligence (AAAI-2017)"]], "COMMENTS": "Published at AAAI 2017, The Thirty-First AAAI Conference on Artificial Intelligence (AAAI-2017)", "reviews": [], "SUBJECTS": "cs.CL", "authors": ["ramesh nallapati", "feifei zhai", "bowen zhou"], "accepted": true, "id": "1611.04230"}, "pdf": {"name": "1611.04230.pdf", "metadata": {"source": "CRF", "title": "SummaRuNNer: A Recurrent Neural Network based Sequence Model for Extractive Summarization of Documents", "authors": ["Ramesh Nallapati", "Feifei Zhai", "Bowen Zhou"], "emails": ["zhou@us.ibm.com"], "sections": [{"heading": "Introduction", "text": "Document summarization is an important problem that has many applications in information retrieval and natural language understanding. Summarization techniques are mainly classified into two categories: extractive and abstractive. Extractive methods aim to select salient snippets, sentences or passages from documents, while abstractive summarization techniques aim to concisely paraphrase the information content in the documents.\nA vast majority of the literature on document summarization is devoted to extractive summarization. Traditional methods for extractive summarization can be broadly classified into greedy approaches (e.g., (Carbonell and Goldstein 1998)), graph based approaches (e.g., (Radev and Erkan 2004)) and constraint optimization based approaches (e.g., (McDonald 2007)).\nRecently, neural network based approaches have become popular for extractive summarization. For example, (Kageback et al. 2014) employed the recursive autoencoder (Socher et al. 2011) to summarize documents, producing best performance on the Opinosis dataset (Ganesan, Zhai, and Han 2010). (Yin and Pei 2015) applied Convolutional Neural Networks (CNN) to project sentences to continuous vector space and then select sentences by minimizing the cost based on their \u2018prestige\u2019 and \u2018diverseness\u2019, on the task of multi-document extractive summarization. Another related work is that of (Cao et al. 2016), who address the problem of query-focused multi-document summarization using CNNs, where they use weighted-sum pooling over sentence\n\u2217Work was done while the author was an employee at IBM.\nrepresentations to represent documents. The weights are learned from attention over sentence representations based on the query.\nRecently, with the emergence of strong generative neural models for text (Bahdanau, Cho, and Bengio 2014), abstractive techniques are also becoming increasingly popular. For example, (Rush, Chopra, and Weston 2015) proposed an attentional feed-forward network for abstractive summarization of sentences into short headlines. Further developing on their work, (Nallapati, Zhou, and Xiang 2016) propose a set of recurrent neural network based encoder-decoder models that focus on various aspects of summarization like handling out-of-vocabulary words and modeling syntactic features of words in the sentence. In a follow-up work (Nallapati et al. 2016), they also propose abstractive techniques for summarization of large documents into multi-sentence summaries, using the CNN/DailyMail corpus1.\nDespite the emergence of abstractive techniques, extractive techniques are still attractive as they are less complex, less expensive, and generate grammatically and semantically correct summaries most of the time. In a very recent work, Cheng and Lapata (2016) proposed an attentional encoder-decoder for extractive single-document summarization and applied to the CNN/Daily Mail corpus.\nLike (Cheng and Lapata 2016), our work also focuses only on sentential extractive summarization of single documents using neural networks. We use the same corpus used by (Nallapati et al. 2016) and (Cheng and Lapata 2016) for our experiments, since its large size makes it attractive for training deep neural networks such as ours, with several thousands of parameters.\nOur main contributions are as follows: (a) we propose SummaRuNNer, a simple recurrent network based sequence classifier that outperforms or matches state-of-the-art models for extractive summarization; (b) the simple formulation of our model facilitates interpretable visualization of its decisions; and (c) we present a novel training mechanism that allows our extractive model to be trained end-to-end using abstractive summaries.\n1https://github.com/deepmind/rc-data\nar X\niv :1\n61 1.\n04 23\n0v 1\n[ cs\n.C L\n] 1\n4 N\nov 2\n01 6"}, {"heading": "SummaRuNNer", "text": "In this work, we treat extractive summarization as a sequence classification problem wherein, each sentence is visited sequentially in the original document order and a binary decision is made (taking into account previous decisions made) in terms of whether or not it should be included in the summary. We use a GRU based Recurrent Neural Network (Chung et al. 2014) as the basic building block of our sequence classifier. A GRU-RNN is a recurrent network with two gates, u called the update gate and r , the reset gate, and can be described by the following equations:\nuj = \u03c3(Wuxxj +Wuhhj\u22121 + bu) (1) rj = \u03c3(Wrxxj +Wrhhj\u22121 + br) (2) h\u2032j = tanh(Whxxj +Whh(rj hj\u22121) + bh) (3) hj = (1\u2212 uj) h\u2032j + uj hj\u22121 (4)\nwhere the W\u2019s and b\u2019s are the parameters of the GRU-RNN and hj is the real-valued hidden-state vector at timestep j and xj is the corresponding input vector, and represents the Hadamard product.\nOur model consists of a two-layer bi-directional GRURNN, whose graphical representation is presented in Figure 1. The first layer of the RNN runs at the word level, and computes hidden state representations at each word position sequentially, based on the current word embeddings and the previous hidden state. We also use another RNN at the word level that runs backwards from the last word to the first, and we refer to the pair of forward and backward RNNs as a bidirectional RNN. The model also consists of a second layer of bi-directional RNN that runs at the sentence-level and accepts the average-pooled, concatenated hidden states of the bi-directional word-level RNNs as input. The hidden states of the second layer RNN encode the representations of the sentences in the document. The representation of the entire document is then modeled as a non-linear transformation of the average pooling of the concatenated hidden states of the bi-directional sentence-level RNN, as shown below.\nd = tanh(Wd 1\nNd Nd\u2211 j=1 [hfj ,h b j ] + b), (5)\nwhere hfj and h b j are the hidden states corresponding to the jth sentence of the forward and backward sentence-level RNNs respectively, Nd is the number of sentences in the document and \u2018[]\u2019 represents vector concatenation.\nFor classification, each sentence is revisited sequentially in a second pass, where a logistic layer makes a binary decision as to whether that sentence belongs to the summary, as shown below. P (yj = 1|hj , sj ,d) = \u03c3(Wchj #(content)\n+hTj Wsd #(salience)\n\u2212hTj Wr tanh(sj) #(novelty) +Wapp a j #(abs. pos. imp.)\n+Wrpp r j #(rel. pos. imp.)\n+b), #(bias term) (6)\nwhere yj is a binary variable indicating whether the jth sentence is part of the summary, hj , the representation of the sentence is given by a non-linear transformation of the concatenated hidden states at the jth time step of the bidirectional sentence-level RNN, and sj is the dynamic representation of the summary at the jth sentence position, given by:\nsj = j\u22121\u2211 i=1 hiP (yi = 1|hi, si,d). (7)\nIn other words, the summary representation is simply a running weighted summation of all the sentence-level hidden states visited till sentence j, where the weights are given by their respective probabilities of summary membership.\nIn Eqn. (6), the term Wchj represents the information content of the jth sentence, hTj Wsd denotes the salience of the sentence with respect to the document, hTj Wr tanh(sj) captures the redundancy of the sentence with respect to the current state of the summary2, while the next two terms model the notion of the importance of the absolute and relative position of the sentence with respect to the document.3 We consider pa and pr, the absolute and relative positional embeddings respectively, as model parameters as well.\n2We squash the summary representation using the tanh operation so that the magnitude of summary remains the same for all time-steps.\n3The absolute position denotes the actual sentence number, whereas the relative position refers to a quantized representation that divides each document into a fixed number of segments and computes the segment ID of a given sentence.\nWe minimize the negative log-likelihood of the observed labels at training time.\nl(W,b) = \u2212 N\u2211\nd=1 Nd\u2211 j=1 (ydj logP (y d j = 1|hdj , sdj ,dd)\n+ (1\u2212 ydj ) log(1\u2212 P (ydj = 1|hdj , sdj ,dd)) (8)\nwhere x is the document representation and y is the vector of its binary summary labels. At test time, the model emits probability of summary membership P (yj) at each sentence sequentially, which is used as the model\u2019s soft prediction of the extractive summary."}, {"heading": "Extractive Training", "text": "In order to train our extractive model, we need ground truth in the form of sentence-level binary labels for each document, representing their membership in the summary. However, most summarization corpora only contain human written abstractive summaries as ground truth. To solve this problem, we use an unsupervised approach to convert the abstractive summaries to extractive labels. Our approach is based on the idea that the selected sentences from the document should be the ones that maximize the Rouge score with respect to gold summaries. Since it is computationally expensive to find a globally optimal subset of sentences that maximizes the Rouge score, we employ a greedy approach, where we add one sentence at a time incrementally to the summary, such that the Rouge score of the current set of selected sentences is maximized with respect to the entire gold summary . We stop when none of the remaining candidate sentences improves the Rouge score upon addition to the current summary set. We return this subset of sentences as the extractive ground-truth, which is used to train our RNN based sequence classifier."}, {"heading": "Abstractive Training", "text": "In this section, we propose a novel training technique to train SummaRuNNer abstractively, thus eliminating the need to generate approximate extractive labels. To train SummaRuNNer using reference summaries, we couple it with an RNN decoder that models the generation of abstractive summaries at training time only. The RNN decoder uses the summary representation at the last time-step of SummaRuNNer as context, which modifies Eqs. 1 through 3 as follows:\nuk = \u03c3(W \u2032 uxxk +W \u2032 uhhk\u22121 +W \u2032 ucs\u22121 + b \u2032 u) rk = \u03c3(W \u2032 rxxk +W \u2032 rhhk\u22121 +W \u2032 rcs\u22121 + b \u2032 r) h\u2032k = tanh(W \u2032 hxxk +W \u2032 hh(rk hk\u22121) +\nW\u2032hcs\u22121 + b \u2032 h)\nwhere s\u22121 is the summary representation as computed at the last sentence of the sentence-level bidirectional RNN of SummaRuNNer as shown in Eq. 7. The parameters of the decoder are distinguished from those of SummaRuNNer using the \u2018prime\u2019 notation, and the time-steps of the decoder use index k to distinguish word positions in the summary from sentence indices j in the original document. For each\ntime-step of the decoder, the embedding of the word from the previous time-step is treated as its input xk.\nFurther, the decoder is equipped with a soft-max layer to emit a word at each time-step. The emission at each timestep is determined by a feed-forward layer f followed by a softmax layer that assigns pk, probabilities over the entire vocabulary at each time-step, as shown below.\nfk = tanh(W \u2032 fhhk +W \u2032 fxxk +W \u2032 fcs\u22121 + b \u2032 f )\nPv(w)k = softmax(W \u2032 vfk + b \u2032 v)\nInstead of optimizing the log-likelihood of the extractive ground truth as shown in Eq. 8, we minimize the negative log-likelihood of the words in the reference summary as follows.\nl(W,b,W\u2032,b\u2032) = \u2212 Ns\u2211 k=1 log(Pv(wk)) (9)\nwhere Ns is the number of words in the reference summary. At test time, we uncouple the decoder from SummaRuNNer and emit only the sentence-level extractive probabilities p(yj) of Eq. 6.\nIntuitively, since the summary representation s\u22121 acts as the only information channel between the SummaRuNNer model and the decoder, maximizing the probability of abstractive summary words as computed by the decoder will require the model to learn a good summary representation which in turn depends on accurate estimates of extractive probabilities p(yj).\nRelated Work Treating document summarization as a sequence classification model has been considered by earlier researchers. For example, (Shen et al. 2007) used Conditional Random Fields to binary-classify sentences sequentially. Our approach is different from theirs in the sense that we use RNNs in our model that do not require any handcrafted features for representing sentences and documents.\nSince the sequence classifier requires sentence-level summary membership labels to train on, we used a simple greedy approach to convert the abstractive summaries to extractive labels. Similar approaches have been employed by other researchers such as (Svore, Vanderwende, and Burges 2007). Further, recently (Cao et al. 2015) propose an ILP based approach to solve this problem optimally.\nMost single-document summarization datasets available for research such as DUC corpora are not large enough to train deep learning models. Two recent papers ((Nallapati et al. 2016) and (Cheng and Lapata 2016)) solve this problem by proposing a new corpus based on news stories from CNN and Daily Mail that consist of around 280,000 documents and human generated summaries. Of these, the work of (Cheng and Lapata 2016) is the closest to our work since they also employ an extractive approach for summarization. Their model is based on an encoder-decoder approach where the encoder learns the representation of sentences and documents while the decoder classifies each sentence based on encoder\u2019s representations using an attention\nmechanism. Our model, when extractively trained, employs a single sequence model with no decoder, and therefore may have fewer parameters. Our abstractively trained model has a decoder too, but it is different from that of (Cheng and Lapata 2016) since our decoder is used to model the likelihood of abstractive gold summaries at training time, so as to eliminate the need for extractive labels. Their model, on the other hand, requires extractive labels even with the decoder. In fact, unlike our unsupervised greedy approach to convert abstractive summaries to extractive labels, (Cheng and Lapata 2016) chose to train a separate supervised classifier using manually created labels on a subset of the data. This may yield more accurate gold extractive labels, but incurs additional annotation costs.\nThe work of (Nallapati et al. 2016) also uses an encoderdecoder approach, but is fully abstractive in the sense that it generates its own summaries at test time. Our abstractive trainer comes close to their work, but only generates sentence-extraction probabilities at test time. We include comparison numbers with this work too, in the following section."}, {"heading": "Experiments and Results", "text": ""}, {"heading": "Corpora", "text": "For our experiments, we used the CNN/DailyMail corpus originally constructed by (Hermann et al. 2015) for the task of passage-based question answering, and re-purposed for the task of document summarization as proposed in (Cheng and Lapata 2016) for extractive summarization and (Nallapati et al. 2016) for abstractive summarization. In order to make a fair comparison with the former, we left out the CNN subset of the corpus, as done by them. To compare with the latter, we used the joint CNN/Daily Mail corpora. Overall, we have 196,557 training documents, 12,147 validation documents and 10,396 test documents from the Daily Mail corpus. If we also include the CNN subset, we have 286,722 training documents, 13,362 validation documents and 11,480 test documents. On average, there are about 28 sentences per document in the training set, and an average of 3-4 sentences in the reference summaries. The average word count per document in the training set is 802.\nWe also used the DUC 2002 single-document summarization dataset4 consisting of 567 documents as an additional out-of-domain test set to evaluate our models."}, {"heading": "Evaluation", "text": "In our experiments below, we evaluate the performance of SummaRuNNer using different variants of the Rouge metric 5 computed with respect to the gold summaries. To compare with (Cheng and Lapata 2016) on the Daily Mail corpus, we use limited length Rouge recall and 75 bytes and 275 bytes as reported by them. To compare with (Nallapati et al. 2016) on the CNN/Daily Mail corpus, we use the same full-length Rouge F1 metric used by the authors. On DUC 2002 corpus, following the official guidelines, we use the limited length\n4http://www-nlpir.nist.gov/projects/duc/guidelines/2002.html 5http://www.berouge.com/Pages/default.aspx\nRouge recall metric at 75 words. We report the scores from Rouge-1, Rouge-2 and Rouge-L, which are computed using the matches of unigrams, bigrams and longest common subsequences respectively, with the ground truth summaries."}, {"heading": "Baselines", "text": "On all datasets, we use Lead-3 model, which simply produces the leading three sentences of the document as the summary as a baseline. On the Daily Mail and DUC 2002 corpora, we also report performance of LReg, a feature-rich logistic classifier used as a baseline by (Cheng and Lapata 2016). On DUC 2002 corpus, we report several baselines such as Integer Linear Programming based approach (Woodsend and Lapata 2010), and graph based approaches such as TGRAPH (Parveen, Ramsl, and Strube 2015) and URANK (Wan 2010) which achieve very high performance on this corpus. In addition, we also compare with the state-of-the art deep learning models from (Cheng and Lapata 2016) and (Nallapati et al. 2016)."}, {"heading": "SummaRuNNer Settings", "text": "We used 100-dimensional word2vec (Mikolov et al. 2013) embeddings trained on the CNN/Daily Mail corpus as our embedding initialization. We limited the vocabulary size to 150K and the maximum number of sentences per document to 100, and the maximum sentence length to 50 words, to speed up computation. We fixed the model hidden state size at 200. We used a batch size of 64 at training time, and adadelta (Zeiler 2012) to train our model. We employed gradient clipping to regularize our model and an early stopping criterion based on validation cost. We trained SummaRuNNer both extractively as well as abstractively. When the model is abstractively trained, we denote it as SummaRuNNer-abs in the results.\nAt test time, picking all sentences with P (y = 1) \u2265 0.5 may not be an optimal strategy since the training data is very imbalanced in terms of summary-membership of sentences. Instead, we pick sentences sorted by the predicted probabilites until we exceed the length limit when limited-length Rouge is used for evaluation. When full-length F1 is used as the metric, we fixed the number of top sentences to be selected based on the validation set."}, {"heading": "Results on Daily Mail corpus", "text": "Table 1 shows the performance comparison of SummaRuNNer with state-of-the-art model of (Cheng and Lapata 2016) and other baselines on the DailyMail corpus using Rouge recall with summary length restricted to 75 bytes. While the abstractively trained SummaRuNNer performs on par with the state-of-the-art model, the extractively trained model significantly improves over their model.\nIn Table 2, we report the performance of our model with respect to Rouge recall at 275 bytes of summary length. In this case, our abstractively trained model underperforms the extractive model of (Cheng and Lapata 2016) while the extractively trained model is statistically indistinguishable from their model. This shows that the SummaRuNNer is better at picking the best sentence for summarization than the subsequent ones.\nOne potential reason SummaRuNNer does not consistently outperform the extractive model of (Cheng and Lapata 2016) is the additional supervised training they used to create sentence-level extractive labels to train their model. Our model instead uses an unsupervised greedy approximation to create extractive labels from abstractive summaries, and as a result, may be more noisy than their ground truth."}, {"heading": "Results on CNN/Daily Mail corpus", "text": "We also report the performance of SummaRuNNer on the joint CNN/Daily Mail corpus. The only other work that re-\nports performance on this dataset is the abstractive encoderdecoder based model of (Nallapati et al. 2016), in which they use full-length F1 as the metric since neural abstractive approaches can learn when to stop generating words in the summary. In order to do a fair comparison with their work, we use the same metric as them. On this dataset, SummaRuNNer significantly outperforms their model as shown in Table 3. The superior performance of our model is not entirely surprising since abstractive summarization is a much harder problem, but the table serves to quantify the current performance gap between extractive and abstractive approaches to summarization. The results also demonstrate the difficulty of using the F1 metric for extractive summarization since SummaRuNNer, with its top three sentences with highest prediction probability as the summary, errs on the side of high recall at the expense of precision. Dynamically adjusting the summary length based on predicted probability distribution may help balance precision and recall and may further boost F1 performance, but we have not experimented with it in this work."}, {"heading": "Results on the Out-of-Domain DUC 2002 corpus", "text": "We also evaluated the models trained on the DailyMail corpus on the out-of-domain DUC 2002 set as shown in Table 4. SummaRuNNer is again statistically on par with the model of (Cheng and Lapata 2016). However, both models perform worse than graph-based TGRAPH (Parveen, Ramsl, and Strube 2015) and URANK (Wan 2010) algorithms, which are the state-of-the-art models on this corpus. Deep learning based supervised models such as SummaRuNNer and that of (Cheng and Lapata 2016) perform very well on the domain they are trained on, but may suffer from domain adaptation issues when tested on a different corpus such as DUC 2002. Graph based unsupervised approaches, on the other hand, may be more robust to domain variations."}, {"heading": "Qualitative Analysis", "text": "In addition to being a state-of-the-art performer, SummaRuNNer has the additional advantage of being very interpretable. The clearly separated terms in the classification layer (see Eqn. 6) allow us to tease out various factors responsible for the classification of each sentence. This is illustrated in Figure 2, where we display a representative document from our validation set along with normalized scores from each abstract feature responsible for its final classification. Such visualization is especially useful in explaining to the end-user the decisions made by the system.\nWe also display a couple of example documents from the Daily Mail and DUC corpora highlighting the sentences chosen by SummaRuNNer and comparing them with the gold summary in Table 5. The examples demonstrate qualitatively that SummaRuNNer performs a reasonably good job in identifying the key points of the document."}, {"heading": "Conclusion", "text": "In this work, we propose a very interpretable neural sequence model for extractive document summarization that allows intuitive visualization, and show that it is better performing than or is comparable to the state-of-the-art deep learning models.\nWe also propose a novel abstractive training mechanism to eliminate the need for extractive labels at training time,\nbut this approach is still a couple of Rouge points below our extractive training on most datasets. We plan to further explore combining extractive and abstractive approaches as part of our future work. One simple approach could be to pre-train the extractive model using abstractive training. Further, we plan to construct a joint extractive-abstractive model where the predictions of our extractive component form stochastic intermediate units to be consumed by the abstractive component.\nReferences [Bahdanau, Cho, and Bengio 2014] Bahdanau, D.; Cho, K.; and Bengio, Y. 2014. Neural machine translation by jointly learning to align and translate. arXiv preprint arXiv:1409.0473.\n[Cao et al. 2015] Cao, Z.; Chen, C.; Li, W.; Li, S.; Wei, F.;\nand Zhou, M. 2015. Tgsum: Build tweet guided multidocument summarization dataset. CoRR abs/1511.08417.\n[Cao et al. 2016] Cao, Z.; Li, W.; Li, S.; and Wei, F. 2016. Attsum: Joint learning of focusing and summarization with neural attention. arXiv preprint arXiv:1604.00125.\n[Carbonell and Goldstein 1998] Carbonell, J., and Goldstein, J. 1998. The use of mmr, diversity-based reranking for reordering documents and producing summaries. In Proceedings of the 21st annual international ACM SIGIR conference on Research and development in information retrieval, 335\u2013 336. ACM.\n[Cheng and Lapata 2016] Cheng, J., and Lapata, M. 2016. Neural summarization by extracting sentences and words. 54th Annual Meeting of the Association for Computational Linguistics.\n[Chung et al. 2014] Chung, J.; Gu\u0308lc\u0327ehre, C\u0327.; Cho, K.; and Bengio, Y. 2014. Empirical evaluation of gated recurrent neural networks on sequence modeling. CoRR abs/1412.3555.\n[Ganesan, Zhai, and Han 2010] Ganesan, K.; Zhai, C.; and Han, J. 2010. Opinosis: a graph-based approach to abstractive summarization of highly redundant opinions. In Proceedings of the 23rd international conference on computational linguistics, 340\u2013348. Association for Computational Linguistics.\n[Hermann et al. 2015] Hermann, K. M.; Kocisky\u0301, T.; Grefenstette, E.; Espeholt, L.; Kay, W.; Suleyman, M.; and Blunsom, P. 2015. Teaching machines to read and comprehend. CoRR abs/1506.03340.\n[Kageback et al. 2014] Kageback, M.; Mogren, O.; Tahmasebi, N.; and Dubhashi, D. 2014. Extractive summarization using continuous vector space models. 31\u201339.\n[McDonald 2007] McDonald, R. 2007. A study of global inference algorithms in multi-document summarization. 557\u2013 564.\n[Mikolov et al. 2013] Mikolov, T.; Sutskever, I.; Chen, K.; Corrado, G. S.; and Dean, J. 2013. Distributed representations of words and phrases and their compositionality. In Advances in neural information processing systems, 3111\u2013 3119.\n[Nallapati et al. 2016] Nallapati, R.; Zhou, B.; dos Santos, C.; Gulcehre, C.; and Xiang, B. 2016. Abstractive text summarization using sequence-to-sequence rnns and beyond. The SIGNLL Conference on Computational Natural Language Learning.\n[Nallapati, Zhou, and Xiang 2016] Nallapati, R.; Zhou, B.; and Xiang, B. 2016. Sequence-to-sequence rnns for text summarization. International Conference on Learning Representations, Workshop track.\n[Parveen, Ramsl, and Strube 2015] Parveen, D.; Ramsl, H.M.; and Strube, M. 2015. Topical coherence for graph-based extractive summarization. In Proceedings of the Conference on Empirical Methods in Natural Language Processing, 19491954.\n[Radev and Erkan 2004] Radev, D., and Erkan, G. 2004. Lexrank: Graph-based lexical centrality as salience in text\nsummarization. Journal of Artificial Intelligence Research 457\u2013479.\n[Rush, Chopra, and Weston 2015] Rush, A. M.; Chopra, S.; and Weston, J. 2015. A neural attention model for abstractive sentence summarization. arXiv preprint arXiv:1509.00685.\n[Shen et al. 2007] Shen, D.; Sun, J.-T.; Li, H.; Yang, Q.; and Chen, Z. 2007. Document summarization using conditional random fields. In Proceedings of IJCAI.\n[Socher et al. 2011] Socher, R.; Huang, E. H.; Pennin, J.; Manning, C. D.; and Ng, A. Y. 2011. Dynamic pooling and unfolding recursive autoencoders for paraphrase detection. 801\u2013809.\n[Svore, Vanderwende, and Burges 2007] Svore, K. M.; Vanderwende, L.; and Burges, C. J. 2007. Enhancing singledocument summarization by combining ranknet and thirdparty sources. In Proceedings of the Joint Conference on Empirical Methods in Natural Language Processing and Computational Natural Language Learning, 448\u2013457.\n[Wan 2010] Wan, X. 2010. Towards a unified approach to simultaneous single-document and multidocument summarizations. In In Proceedings of the 23rd COLING, 11371145.\n[Woodsend and Lapata 2010] Woodsend, K., and Lapata, M. 2010. Automatic generation of story highlights. In In Proceedings of the 48th ACL, 565574.\n[Yin and Pei 2015] Yin, W., and Pei, Y. 2015. Optimizing sentence modeling and selection for document summarization. In Proceedings of the 24th International Conference on Artificial Intelligence, 1383\u20131389. AAAI Press.\n[Zeiler 2012] Zeiler, M. D. 2012. ADADELTA: an adaptive learning rate method. CoRR abs/1212.5701."}], "references": [{"title": "Neural machine translation by jointly learning to align and translate", "author": ["Cho Bahdanau", "D. Bengio 2014] Bahdanau", "K. Cho", "Y. Bengio"], "venue": "arXiv preprint arXiv:1409.0473", "citeRegEx": "Bahdanau et al\\.,? \\Q2014\\E", "shortCiteRegEx": "Bahdanau et al\\.", "year": 2014}, {"title": "Tgsum: Build tweet guided multidocument summarization dataset. CoRR abs/1511.08417", "author": ["M. Zhou"], "venue": null, "citeRegEx": "Zhou,? \\Q2015\\E", "shortCiteRegEx": "Zhou", "year": 2015}, {"title": "Attsum: Joint learning of focusing and summarization with neural attention", "author": ["Cao"], "venue": "arXiv preprint arXiv:1604.00125", "citeRegEx": "Cao,? \\Q2016\\E", "shortCiteRegEx": "Cao", "year": 2016}, {"title": "and Goldstein", "author": ["J. Carbonell"], "venue": "J.", "citeRegEx": "Carbonell and Goldstein 1998", "shortCiteRegEx": null, "year": 1998}, {"title": "and Lapata", "author": ["J. Cheng"], "venue": "M.", "citeRegEx": "Cheng and Lapata 2016", "shortCiteRegEx": null, "year": 2016}, {"title": "Empirical evaluation of gated recurrent neural networks on sequence modeling", "author": ["Chung"], "venue": "CoRR abs/1412.3555", "citeRegEx": "Chung,? \\Q2014\\E", "shortCiteRegEx": "Chung", "year": 2014}, {"title": "Opinosis: a graph-based approach to abstractive summarization of highly redundant opinions", "author": ["Zhai Ganesan", "K. Han 2010] Ganesan", "C. Zhai", "J. Han"], "venue": "In Proceedings of the 23rd international conference on computational linguistics,", "citeRegEx": "Ganesan et al\\.,? \\Q2010\\E", "shortCiteRegEx": "Ganesan et al\\.", "year": 2010}, {"title": "K", "author": ["Hermann"], "venue": "M.; Kocisk\u00fd, T.; Grefenstette, E.; Espeholt, L.; Kay, W.; Suleyman, M.; and Blunsom, P.", "citeRegEx": "Hermann et al. 2015", "shortCiteRegEx": null, "year": 2015}, {"title": "Extractive summarization using continuous vector space models", "author": ["Kageback"], "venue": null, "citeRegEx": "Kageback,? \\Q2014\\E", "shortCiteRegEx": "Kageback", "year": 2014}, {"title": "G", "author": ["T. Mikolov", "I. Sutskever", "K. Chen", "Corrado"], "venue": "S.; and Dean, J.", "citeRegEx": "Mikolov et al. 2013", "shortCiteRegEx": null, "year": 2013}, {"title": "Abstractive text summarization using sequence-to-sequence rnns and beyond", "author": ["Nallapati"], "venue": "The SIGNLL Conference on Computational Natural Language Learning", "citeRegEx": "Nallapati,? \\Q2016\\E", "shortCiteRegEx": "Nallapati", "year": 2016}, {"title": "Sequence-to-sequence rnns for text summarization", "author": ["Zhou Nallapati", "R. Xiang 2016] Nallapati", "B. Zhou", "B. Xiang"], "venue": "International Conference on Learning Representations,", "citeRegEx": "Nallapati et al\\.,? \\Q2016\\E", "shortCiteRegEx": "Nallapati et al\\.", "year": 2016}, {"title": "Topical coherence for graph-based extractive summarization", "author": ["Ramsl Parveen", "D. Strube 2015] Parveen", "H.M. Ramsl", "M. Strube"], "venue": "In Proceedings of the Conference on Empirical Methods in Natural Language Processing,", "citeRegEx": "Parveen et al\\.,? \\Q2015\\E", "shortCiteRegEx": "Parveen et al\\.", "year": 2015}, {"title": "and Erkan", "author": ["D. Radev"], "venue": "G.", "citeRegEx": "Radev and Erkan 2004", "shortCiteRegEx": null, "year": 2004}, {"title": "A", "author": ["Rush"], "venue": "M.; Chopra, S.; and Weston, J.", "citeRegEx": "Rush. Chopra. and Weston 2015", "shortCiteRegEx": null, "year": 2015}, {"title": "Document summarization using conditional random fields", "author": ["Shen"], "venue": "In Proceedings of IJCAI", "citeRegEx": "Shen,? \\Q2007\\E", "shortCiteRegEx": "Shen", "year": 2007}, {"title": "A", "author": ["R. Socher", "E.H. Huang", "J. Pennin", "C.D. Manning", "Ng"], "venue": "Y.", "citeRegEx": "Socher et al. 2011", "shortCiteRegEx": null, "year": 2011}, {"title": "C", "author": ["K.M. Svore", "L. Vanderwende", "Burges"], "venue": "J.", "citeRegEx": "Svore. Vanderwende. and Burges 2007", "shortCiteRegEx": null, "year": 2007}, {"title": "and Lapata", "author": ["K. Woodsend"], "venue": "M.", "citeRegEx": "Woodsend and Lapata 2010", "shortCiteRegEx": null, "year": 2010}, {"title": "and Pei", "author": ["W. Yin"], "venue": "Y.", "citeRegEx": "Yin and Pei 2015", "shortCiteRegEx": null, "year": 2015}, {"title": "M", "author": ["Zeiler"], "venue": "D.", "citeRegEx": "Zeiler 2012", "shortCiteRegEx": null, "year": 2012}], "referenceMentions": [], "year": 2016, "abstractText": "We present SummaRuNNer, a Recurrent Neural Network (RNN) based sequence model for extractive summarization of documents and show that it achieves performance better than or comparable to state-of-the-art. Our model has the additional advantage of being very interpretable, since it allows visualization of its predictions broken up by abstract features such as information content, salience and novelty. Another novel contribution of our work is abstractive training of our extractive model that can train on human generated reference summaries alone, eliminating the need for sentence-level extractive labels.", "creator": "LaTeX with hyperref package"}}}