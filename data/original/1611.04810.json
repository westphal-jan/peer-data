{"id": "1611.04810", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "15-Nov-2016", "title": "The NOESIS Network-Oriented Exploration, Simulation, and Induction System", "abstract": "Network data mining has become an important area of study due to the large number of problems it can be applied to. This paper presents NOESIS, an open source framework for network data mining that provides a large collection of network analysis techniques, including the analysis of network structural properties, community detection methods, link scoring, and link prediction, as well as network visualization algorithms. It also features a complete stand-alone graphical user interface that facilitates the use of all these techniques. The NOESIS framework has been designed using solid object-oriented design principles and structured parallel programming. As a lightweight library with minimal external dependencies and a permissive software license, NOESIS can be incorporated into other software projects. Released under a BSD license, it is available from", "histories": [["v1", "Tue, 15 Nov 2016 12:55:49 GMT  (1004kb,D)", "https://arxiv.org/abs/1611.04810v1", null], ["v2", "Fri, 23 Jun 2017 14:08:42 GMT  (1004kb,D)", "http://arxiv.org/abs/1611.04810v2", null]], "reviews": [], "SUBJECTS": "cs.SI cs.AI", "authors": ["v\\'ictor mart\\'inez", "fernando berzal", "juan-carlos cubero"], "accepted": false, "id": "1611.04810"}, "pdf": {"name": "1611.04810.pdf", "metadata": {"source": "CRF", "title": "The NOESIS Network-Oriented Exploration, Simulation, and Induction System", "authors": ["V\u0301\u0131ctor Mart\u0301\u0131nez", "Fernando Berzal", "Juan-Carlos Cubero"], "emails": ["victormg@acm.org", "berzal@acm.org", "jc.cubero@decsai.ugr.es"], "sections": [{"heading": "The NOESIS Network-Oriented Exploration, Simulation, and Induction", "text": ""}, {"heading": "System", "text": "V\u0301\u0131ctor Mart\u0301\u0131nez,\u2217 Fernando Berzal,\u2020 and Juan-Carlos Cubero\u2021\nDepartment of Computer Science and Artificial Intelligence, University of Granada, Spain\nNetwork data mining has become an important area of study due to the large number of problems it can be applied to. This paper presents NOESIS, an open source framework for network data mining that provides a large collection of network analysis techniques, including the analysis of network structural properties, community detection methods, link scoring, and link prediction, as well as network visualization algorithms. It also features a complete stand\u2013alone graphical user interface that facilitates the use of all these techniques. The NOESIS framework has been designed using solid object\u2013oriented design principles and structured parallel programming. As a lightweight library with minimal external dependencies and a permissive software license, NOESIS can be incorporated into other software projects. Released under a BSD license, it is available from http://noesis.ikor.org."}, {"heading": "Contents", "text": "I. Introduction 1\nII. The design of the NOESIS framework 2 A. System architecture 2 B. Core classes 2 C. Supported data formats 2 D. Graphical user interface 3\nIII. Network analysis tools 3 A. Network models 3\nB. Structural properties of networks 4 C. Network visualization techniques 5\nIV. Network data mining techniques 6 A. Community detection 6 B. Link scoring and prediction 8\nV. Conclusion 11\nAcknowledgments 11\nReferences 11 \u2217Electronic address: victormg@acm.org \u2020Electronic address: berzal@acm.org \u2021Electronic address: jc.cubero@decsai.ugr.es\nI. INTRODUCTION\nData mining techniques are intended to extract information from large volumes of data (Tan et al., 2006). Data mining includes tasks such as classification, regression, clustering, or anomaly detection, among others. Traditional data mining techniques are typically applied to tabulated data. Novel techniques have also been devised for semi-structured or structured data, since exploiting the relationships among instances from a dataset leads to new research and development opportunities (Getoor and Diehl, 2005).\nFor example, network data mining has been used to predict previously unknown protein interactions in protein-protein interaction networks (Mart\u0301\u0131nez et al., 2014). It has also been used to study and predict future author collaborations and tendencies in co-authorship networks (Pavlov and Ichise, 2007). Different network mining techniques are used by popular internet search engines to rank the most relevant websites (Page et al., 1999). These are only some examples of the large number of applications of network data mining.\nThere are many software tools that facilitate the analysis of networked data. Some tools provide closed solutions for end users who need to work with their own network data sets, whereas other tools cater to software\ndevelopers as software libraries that collect network analysis algorithms. Most tools allow the analysis of network topology and the computation of different structural properties of networks having thousands or even millions of nodes. Some of them also include implementations of specific network data mining techniques, such as community detection algorithms or predictive models, including link prediction (Lu\u0308 and Zhou, 2011) and epidemic models (Keeling and Eames, 2005).\nFor instance, Pajek (Batagelj and Mrvar, 1998), NodeXL (Smith et al., 2009), Gephi (Bastian et al., 2009), and UCINET (Borgatti et al., 2002) are widely used for social network analysis (SNA). Graphviz (Ellson et al., 2002) and Cytoscape (Shannon et al., 2003) are two well\u2013known alternatives for network visualization. Finally, igraph (Csardi and Nepusz, 2006) and NetworkX (Schult and Swart, 2008) are two popular software libraries of network algorithms. A more comprehensive and up\u2013to\u2013date list of available software tools can be found at Wikipedia: https://en.wikipedia.org/ wiki/Social_network_analysis_software.\nNOESIS, whose name stands for Network\u2013Oriented Exploration, Simulation, and Induction System, is a software framework for network analysis and mining. It tries to combine the best features of closed social network analysis tools and extensible algorithm libraries, while provid-\nar X\niv :1\n61 1.\n04 81\n0v 2\n[ cs\n.S I]\n2 3\nJu n\n20 17\ning support for parallel execution, something that most listed tools lack. NOESIS is completely written in Java and its source code has been released under a permissive BSD open source license.\nOur paper is structured as follows. In Section 2, the NOESIS architectural design principles are briefly described. Section 3 covers the network analysis techniques included in NOESIS. Network data mining techniques are surveyed in Section 4. Finally, Section 5 describes the NOESIS project current status and roadmap."}, {"heading": "II. THE DESIGN OF THE NOESIS FRAMEWORK", "text": "NOESIS has been designed to be an easily\u2013extensible framework whose architecture provides the basis for the implementation of network data mining techniques. In order to achieve this, NOESIS is designed around abstract interfaces and a set of core classes that provide essential functions, which allows the implementation of different features in independent components with strong cohesion and loose coupling. NOESIS components are designed to be maintainable and reusable."}, {"heading": "A. System architecture", "text": "The NOESIS framework architecture and its core subsystems are displayed in Figure 1. These subsystems are described below.\nThe lowest-level component is the hardware abstraction layer (HAL), which provides support for the execution of algorithms in a parallel environment and hides implementation details and much of the underlying technical complexity. This component provides different building blocks for implementing well-studied parallel programming design patterns, such as MapReduce (Dean and Ghemawat, 2008). For example, we would just\nwrite result = (double) Parallel.reduce( index ->x[index] * y[index], ADD, 0, SIZE-1) to compute the dot product of two vectors in parallel. The HAL does not only implement structured parallel programming design patterns, but it is also responsible for task scheduling and parallel execution. It allows the adjustment of parallel execution parameters, including the task scheduling algorithm.\nThe reflective kernel is at the core of NOESIS and provides its main features. The reflective kernel provides the base models (data structures) and tasks (algorithms) needed to perform network data mining, as well as the corresponding meta-objects and meta-models, which can be manipulated at run time. It is the underlying layer that supports a large collection of network analysis algorithms and data mining techniques, which are described in the following section. Different types of networks are dealt with using an unified interface, allowing us to choose the particular implementation that is the most adequate for the spatial and computational requirements of each application. Algorithms provided by this subsystem are built on top of the HAL building blocks, allowing the parallelized execution of algorithms whenever possible.\nThe data access layer (DAL) provides an unified interface to access external data sources. This subsystem allows reading and writing networks in different file formats, providing implementations for some of the most important standardized network file formats. This module also enables the development of data access components for other kinds of data sources, such as network streaming.\nFinally, an application generator is used to build a complete graphical user interface following a model driven software development (MDSD) approach. This component provides a friendly user interface that allows users without programming skills to use most of the NOESIS framework features."}, {"heading": "B. Core classes", "text": "The core classes and interfaces shown in Figure 2 provide the foundation for the implementation of different types of networks with specific spatial and computational requirements. Basic network operations include adding and removing nodes, adding and removing links, or querying a node neighborhood. More complex operations are provided through specialized components.\nNOESIS supports networks with attributes both in their nodes and their links. These attributes are defined according to predefined data models, including categorical and numerical values, among others."}, {"heading": "C. Supported data formats", "text": "Different file formats have been proposed for network datasets. Some data formats are more space efficient,\nwhereas others are more easily parseable.\nNOESIS supports reading and writing network data sets using the most common data formats. For example, the GDF file format is a CSV-like format used by some software tools such as GUESS and Gephi. It supports attributes in both nodes and links. Another supported file format is GML, which stands for Graph Modeling Language. GML is a hierarchical ASCII-based file format. GraphML is another hierarchical file format based on XML, the ubiquitous eXtensible Markup Language developed by the W3C.\nOther file formats are supported by NOESIS, such as the Pajek file format, which is similar to GDF, or the file format of the datasets from the Stanford Network Analysis Platform (SNAP) (Leskovec and Krevl, 2014)."}, {"heading": "D. Graphical user interface", "text": "In order to allow users without programming knowledge to use most of the NOESIS features, a lightweight easy\u2013to\u2013use graphical user interface is included with the standard NOESIS framework distribution. The NOESIS GUI allows non\u2013technical end users loading, visualizing, and analyzing their own network data sets by applying all the techniques provided with NOESIS.\nSome screenshots of this GUI are shown in Figure 3. A canvas is used to display the network in every moment. The network can be manipulated by clicking or dragging nodes. At the top of the window, a menu gives access to different options and data mining algorithms. The Network menu allows loading a network from an external source and exporting the results using different file formats, as well as creating images of the current network visualization both as raster and vector graphics image. The View menu allows the customization of the network appearance by setting specific layout algorithms and custom visualization styles. In addition, this menu allows binding the visual properties of nodes and links to their attributes. The Data menu allows the exploration of attributes for each node and link. Finally, the Analysis menu gives access to most of the techniques that will be described in the following sections."}, {"heading": "III. NETWORK ANALYSIS TOOLS", "text": "NOESIS is designed to ease the implementation of network analysis tools. It also includes reusable implementations of a large collection of popular network\u2013related techniques, from graph visualization (Tamassia, 2013) and common graph algorithms, to network structural properties (Newman, 2010) and network formation models (Jackson, 2008). The network analysis tools included in NOESIS and the modules that implement them are introduced in this section."}, {"heading": "A. Network models", "text": "NOESIS implements a number of popular random network generation models, which are described by probability distributions or random processes. Such models have been found to be useful in the study and understanding of certain properties or behaviors observed in real-world networks.\nAmong the models included in NOESIS, the Erdo\u0308sRe\u0301nyi model (Erdo\u030bs and Re\u0301nyi, 1959) is one of the simplest ones. The Gilbert model (Gilbert, 1959) is similar but a probability of existence is given for links instead. The anchored network model is also similar to the two previous models, with the advantage of reducing the occurrence of isolated nodes, but at the cost of being less than perfectly random. Finally, the connected random model is a variation of the anchored model that avoids isolated nodes.\nOther models included in NOESIS exhibit specific properties often found in real-world networks. For example, the Watts\u2013Strogatz model (Watts and Strogatz, 1998) generates networks with small-world properties, that is, low diameter and high clustering. This model starts by creating a ring lattice with a given number of nodes and a given mean degree, where each node is connected to its nearest neighbors on both sides. In the following steps, each link is rewired to a new target node with a given probability, avoiding self-loops and link duplication.\nDespite the small-world properties exhibited by networks generated by the Watts\u2013Strogatz model are closer to real world networks than those generated by models based on the Erdo\u0308s-Re\u0301nyi approach, they still lack some important properties observed in real networks. The Baraba\u0301si\u2013Albert model (Albert and Baraba\u0301si, 2002) is another well-known model that generates networks whose node degree distribution follows a power law, which leads to scale-free networks. This model is driven by a preferential attachment process, where new nodes are added and connected to existing nodes with a probability proportional to their current degree. Another model with very similar properties to Baraba\u0301si\u2013Albert\u2019s model is the Price\u2019s citation model (Newman, 2003).\nIn addition to random network models, a number of regular network models are included in NOESIS. These\nmodels generate synthetic networks that are useful in the process of testing new algorithms. The networks regular models include complete networks, where all nodes are interconnected; star networks, where all nodes are connected to a single hub node; ring networks, where each node is connected to its closest two neighbors along a ring; tandem networks, like ring model but without closing the loop; mesh network, where nodes are arranged in rows and columns, and connected only to their adjacent nodes; toruses, meshes where nodes in the extremes of the mesh are connected; hypercubes; binary trees; and isolates, a network without links."}, {"heading": "B. Structural properties of networks", "text": "Network structural properties allow the quantification of features or behaviors present in the network. They can be used, for instance, to measure network robustness or reveal important nodes and links. NOESIS considers three types of structural properties: node properties, node pair properties (for pairs both with and without links among them), and global properties.\nNOESIS provides a large number of techniques for analyzing network structural properties. Many structural properties can be computed for nodes. For example, indegree and out-degree, indicate the number of incoming and outgoing links, respectively. Related to node degree, two techniques to measure node degree assortativity have\nbeen included: biased (Piraveenan et al., 2008) and unbiased (Piraveenan et al., 2010) node degree assortativity. Node assortativity is a score between \u22121 and 1 that measures the degree correlation between pairs of connected nodes. The clustering coefficient can also be computed for nodes. The clustering coefficient of a node is the fraction of its neighbors that are also connected among them.\nReachability scores are centrality measures that allow the analysis of how easy it is to reach a node from other nodes. The eccentricity of a node is defined as the maximum distance to any other node (Hage and Harary, 1995). The closeness, however, is the inverse of the sum of the distance from a given node to all others (Bavelas, 1950). An adjusted closeness value that normalizes the closeness according to the number of reachable nodes can also be used. Inversely to closeness, average path length is defined as the mean distance of all shortest paths to any other node. Decay is yet another reachability score, computed as the summation of a delta factor powered by the path length to any other node (Jackson, 2008). It is interesting to note that with a delta factor close to 0, the measure becomes the degree of the node, whereas with a delta close to 1, the measure becomes the component size of the component the node is located at. A normalized decay score is also available.\nBetweenness, as reachability, is another way to measure node centrality. Betweenness, also known as Freeman\u2019s betweenness, is a score computed as the count of shortest paths the node is involved in (Freeman, 1977). Since this score ranges from 2n \u2212 1 to n2 \u2212 (n \u2212 1) for n the number of nodes in strongly-connected networks, a normalized variant is typically used.\nFinally influence algorithms provide a different perspective on node centrality. These techniques measure the power of each node to affect others. The most popular influence algorithm is PageRank (Page et al., 1999), since it is used by the Google search engine. PageRank computes a probability distribution based on the likelihood of reaching a node starting from any other node. The algorithm works by iteratively updating node probability based on direct neighbors probabilities, which leads to convergence if the network satisfies certain properties. A similar algorithm is HITS (Kleinberg, 1999), which stands for hyperlink-induced topic search. It follows an iterative approach, as PageRank, but computes two scores per node: the hub, which is a score related to how many nodes a particular node links, and the authority, which is a score related to how many hubs link a particular node. Both scores are connected by an iterative updating process: authority is updated according to the hub scores of nodes connected by incoming links and hub is updated according to authority scores of nodes connected by outgoing links. Eigenvector centrality is another iterative method closely related to PageRank, where nodes are assigned a centrality score based on the summation of the centrality of their neighbors nodes. Katz centrality considers all possible paths, but penalizes long ones using a given damping factor (Katz,\n1953). Finally, diffusion centrality (Kang et al., 2012) is another influence algorithm based on Katz centrality. The main difference is that, while Katz considers infinite length paths, diffusion centrality considers only paths of a given limited length.\nIn the following example, we show how to load a network from a data file and compute its structural properties using NOESIS, its PageRank scores in particular:"}, {"heading": "FileReader fileReader =", "text": "new FileReader(\"karate.gml\");"}, {"heading": "NetworkReader reader =", "text": "new GMLNetworkReader(fileReader); Network network = reader.read(); PageRank task = new PageRank(network); NodeScore score = task.call();\nDifferent structural properties for links can also be computed by NOESIS. For example, link betweenness, which is the count of shortest paths the link is involved in, or link rays, which is the number of possible paths between two nodes that cross a given link. Some of these properties are used by different network data mining algorithms."}, {"heading": "C. Network visualization techniques", "text": "Humans are still better than machines at the recognition of certain patterns when analyzing data in a visual way. Network visualization is a complex task since networks tend to be huge, with thousands nodes and links. NOESIS enables the visualization of networks by providing the functionality needed to render the network and export the resulting visualization using different image file formats.\nNOESIS provides different automatic graph layout techniques, such as the well\u2013known Fruchterman\u2013 Reingold (Fruchterman and Reingold, 1991) and Kamada\u2013Kawai (Kamada and Kawai, 1989) force\u2013based layout algorithms. Force\u2013based layout algorithms assign forces among pairs of nodes and solve the system to reach an equilibrium point, which usually leads to an aesthetic visualization.\nHierarchical layouts (Tamassia, 2013), which arrange nodes in layers trying to minimize edge crossing, are also included. Different radial layout algorithms are included as well (Wills, 1999). These layouts are similar to the hierarchical ones, but arrange nodes in concentric circles. Finally, several regular layouts are included. These layouts are common for visualizing regular networks, such as meshes or stars.\nNOESIS allows tuning the network visualization look and feel. The visual properties of nodes and links can be customized, including color, size, borders, and so on. In addition, visual properties can be bound to static or dynamic properties of the network. For example, node sizes can be bound to a specific centrality score, allowing the visual display of quantitative information."}, {"heading": "IV. NETWORK DATA MINING TECHNIQUES", "text": "Network data mining techniques exist for both unsupervised and supervised settings. NOESIS includes a wide array of community detection methods (Lancichinetti and Fortunato, 2009) and link prediction techniques (Liben-Nowell and Kleinberg, 2007). These algorithms are briefly described below."}, {"heading": "A. Community detection", "text": "Community detection can be defined as the task of finding groups of densely connected nodes. A wide range of community detection algorithms have been proposed, exhibiting different pros and cons. NOESIS features different families of community detection techniques and implements more than ten popular community detection algorithms. The included algorithms, their time complexity, and their bibliographic references are shown in Table I.\nNOESIS provides hierarchical clustering algorithms. Agglomerative hierarchical clustering treats each node\nas a cluster, and then iteratively merges clusters until all nodes are in the same cluster (Fortunato, 2010). Different strategies for the selection of clusters to merge have been implemented, including single-link (Sibson, 1973), which selects the two clusters with the smallest minimum pairwise distance; complete-link (Defays, 1977), which selects the two clusters with the smallest maximum pairwise distance; and average-link (Liu, 2011), which selects the two clusters with the smallest average pairwise distance.\nModularity-based techniques are also available in our framework. Modularity is a score that measures the strength of particular division into modules of a given network. Modularity\u2013based techniques search for com-\nmunities by attempting to maximize their modularity score (Newman and Girvan, 2004). Different greedy strategies, including fast greedy (Newman, 2004) and multi-step greedy (Schuetz and Caflisch, 2008), are available. These greedy algorithms merge pairs of clusters that maximize the resulting modularity, until all possible merges would reduce the network modularity.\nPartitional clustering is another common approach. Partitioning clustering decomposes the network and performs an iterative relocation of nodes between clusters. For example, Kernighan-Lin bi-partitioning (Kernighan and Lin, 1970) starts with an arbitrary partition in two clusters. Then, iteratively exchanges nodes between both\nnumber of clusters.\nclusters to minimize the number of links between them. This approach can be applied multiple times to subdivide the obtained clusters. K-means community detection (MacQueen et al., 1967) is an application of the traditional k-means clustering algorithm to networks and another prominent example of partitioning community detection.\nSpectral community detection (Fortunato, 2010) is another family of community detection techniques included in NOESIS. These techniques use the Laplacian representation of the network, which is a network representation computed by subtracting the adjacency matrix of the network to a diagonal matrix where each diagonal element is equal to the degree of the corresponding node. Then, the eigenvectors of the Laplacian representation of the network are computed. NOESIS includes the ratio cut algorithm (EIG1) (Hagen and Kahng, 1992), the Jordan and Weiss NG algorithm (KNSC1) (Ng et al., 2002), and spectral k-means (Shi and Malik, 2000).\nFinally, the BigClam overlapping community detector is also available in NOESIS (Yang and Leskovec, 2013). In this algorithm, each node has a profile, which consists in a score between 0 and 1 for each cluster that is proportional to the likelihood of the node belonging to that cluster. Also, a score between pairs of nodes is defined yielding values proportional to their clustering assignment overlap. The algorithm iteratively optimizes each node profile to maximize the value between connected nodes and minimize the value among unconnected nodes.\nIn the following example, we show how to load a network from a data file and detect communities with the KNSC1 algorithm using NOESIS:"}, {"heading": "FileReader fileReader =", "text": "new FileReader(\"mynetwork.net\");"}, {"heading": "NetworkReader reader =", "text": "new PajekNetworkReader(fileReader);"}, {"heading": "Network network = reader.read();", "text": "CommunityDetector task =\nnew NJWCommunityDetector(network);"}, {"heading": "Matrix results = task.call();", "text": ""}, {"heading": "B. Link scoring and prediction", "text": "Link scoring and link prediction are two closely related tasks. On the one hand, link scoring aims to compute a value or weight for a link according to a specific criteria. Most link scoring techniques obtain this value by considering the overlap or relationship between the neighborhood of the nodes at both ends of the link. On the other hand, link prediction computes a value, weight, or probability proportional to the likelihood of the existence of a certain link according to a given model of link formation.\nThe NOESIS framework provides a large collection of methods for link scoring and link prediction, from local methods, which only consider the direct neighborhood of nodes, to global methods, which consider the whole network topology. As the amount of information considered is increased, the computational and spatial complexity of the techniques also increases. The link scoring and prediction methods available in NOESIS are shown in Table II.\nAmong local methods, the most basic technique is the common neighbors score (Newman, 2001), which is equal to the number of shared neighbors between a pair of nodes. Most techniques are variations of the common neighbors score. For example, the Adamic\u2013Adar score (Adamic and Adar, 2003) is the sum of one divided by the logarithm of the degree of each shared node. The resource\u2013allocation index (Zhou et al., 2009) follows the same expression, but directly considers the degree instead of the logarithm of the degree. The adaptive degree penalization score (Mart\u0301\u0131nez et al., 2016) also follows the same approach, yet automatically determines an adequate degree penalization by considering properties of the network topology. Other local measures consider the\nnumber of shared neighbors, but normalize their value according to certain criteria. For example, the Jaccard score (Jaccard, 1901) normalizes the number of shared neighbors by the total number of neighbors. The local Leicht-Holme-Newman score (Leicht et al., 2006) normalizes the count of shared neighbors by the product of both neighborhoods sizes. Similarly, the Salton score (Salton and McGill, 1986) also normalizes, this time using the square root of the product of both node degrees. The Sorensen score (S\u00f8rensen, 1948) considers the double of the count of shared neighbors normalized by the sum of both neighbors size. The hub promoted and hub depressed scores (Ravasz et al., 2002) normalize the count of shared neighbors by the minimum and the maximum of both nodes degree respectively. Finally, the preferential attachment score (Baraba\u0301si and Albert, 1999) only considers the product of both node degrees.\nGlobal link scoring and prediction methods are more complex than local methods. For example, the Katz score (Katz, 1953) sums the influence of all possible paths between two nodes, incrementally penalizing paths by their length according to a given damping factor. The global Leicht-Holme-Newman score (Leicht et al., 2006) is quite similar to the Katz score, but resorts to the dominant eigenvalue to compute the final result.\nRandom walk techniques simulate a Markov chain of randomly-selected nodes (Pearson, 1905). The idea is that, starting from a seed node and randomly moving through links, we can obtain a probability vector where\neach element corresponds to the probability of reaching each node. The classical random walk iteratively multiplies the probability vector by the transition matrix, which is the row-normalized version of the adjacency matrix, until convergence. An interesting variant is the random walk with restart (Tong et al., 2006), which models the possibility of returning to the seed node with a given probability. Flow propagation is another variant of random walk (Vanunu and Sharan, 2008), where the transition matrix is computed by performing both row and column normalization of the adjacency matrix.\nFinally, some spectral techniques are also available in NOESIS. Spectral techniques, as we mentioned when discussing community detection methods, are based on the Laplacian matrix. The pseudoinverse Laplacian score (Fouss et al., 2007) is the inner product of the rows of the corresponding pair of nodes from the Laplacian matrix. Other spectral technique is the average commute time (Fouss et al., 2007), which is defined as the average number of steps that a random walker starting from a particular node takes to reach another node for the first time and go back to the initial node. Despite it models a random walk process, it is considered to be a spectral technique because it is usually computed in terms of the Laplacian matrix. Given the Laplacian matrix, it can be computed as the diagonal element of the starting node plus the diagonal element of the ending node, minus two times the element located in the row of the first node and the column of the second one.\nFinally, the random forest kernel score (Chebotarev and Shamis, 2006) is a global technique based on the concept of spanning tree, i.e. a connected undirected sub-network with no cycles that includes all the nodes and some or all the links of the network. The matrix-tree theorem states that the number of spanning trees in the network is equal to any cofactor, which is a determinant obtained by removing the row and column of the given node, of an entry of its Laplacian representation. As a result of this, the inverse of the sum of the identity matrix and the Laplacian matrix gives us a matrix that can be interpreted as a measure of accessibility between pairs of nodes.\nUsing network data mining algorithms in NOESIS is simple. In the following code snippet, we show how to generate a Barabsi-Albert preferential attachment network with 100 nodes and 1000 links, and then compute the Resource Allocation score for each pair of nodes using NOESIS:"}, {"heading": "Network network =", "text": "new BarabasiAlbertNetwork(100, 1000);"}, {"heading": "LinkPredictionScore method =", "text": "new ResourceAllocationScore(network); Matrix result = method.call();"}, {"heading": "V. CONCLUSION", "text": "Currently, the NOESIS project comprises more than thirty five thousand lines of code organized in hundreds of classes and dozens of packages. NOESIS relies on a library of reusable components that, with more than forty thousand lines of Java code, provide a customizable collection framework, support for the execution of parallel algorithms, mathematical routines, and the model-driven application generator used to build the NOESIS graphical user interface.\nNOESIS can ease the development of applications that involve the analysis of any kind of data susceptible of being represented as a network. NOESIS provides an efficient, scalable, and developer\u2013friendly framework for network data mining, released under a permissive Berkeley Software Distribution free software license. Our framework can be downloaded from its official website at http://noesis.ikor.org."}, {"heading": "Acknowledgments", "text": "The NOESIS project is partially supported by the Spanish Ministry of Economy and the European Regional Development Fund (FEDER), under grant TIN2012\u2013 36951, and the Spanish Ministry of Education under the program \u201cAyudas para contratos predoctorales para la formacio\u0301n de doctores 2013\u201d (grant BES\u20132013\u2013064699). We are grateful to Aaro\u0301n Rosas, Francisco\u2013Javier Gijo\u0301n, and Julio\u2013Omar Palacio for their contributions to the implementation of community detection methods in NOESIS."}], "references": [{"title": "Friends and neighbors", "author": ["L.A. References Adamic", "E. Adar"], "venue": null, "citeRegEx": "Adamic and Adar,? \\Q2003\\E", "shortCiteRegEx": "Adamic and Adar", "year": 2003}, {"title": "Emergence of scaling", "author": ["Barab\u00e1si", "A.-L", "R. Albert"], "venue": "Reviews of Modern Physics,", "citeRegEx": "Barab\u00e1si et al\\.,? \\Q1999\\E", "shortCiteRegEx": "Barab\u00e1si et al\\.", "year": 1999}, {"title": "MapReduce: simplified data processing on large clusters", "author": ["J. Dean", "S. Ghemawat"], "venue": "Communications of the ACM, 51(1):107\u2013113.", "citeRegEx": "Dean and Ghemawat,? 2008", "shortCiteRegEx": "Dean and Ghemawat", "year": 2008}, {"title": "An efficient algorithm for a complete link method", "author": ["D. Defays"], "venue": "The Computer Journal, 20(4):364\u2013366.", "citeRegEx": "Defays,? 1977", "shortCiteRegEx": "Defays", "year": 1977}, {"title": "Graphviz - open source graph drawing tools", "author": ["J. Ellson", "E. Gansner", "L. Koutsofios", "S.C. North", "G. Woodhull"], "venue": "Graph Drawing, pages 483\u2013484. Springer.", "citeRegEx": "Ellson et al\\.,? 2002", "shortCiteRegEx": "Ellson et al\\.", "year": 2002}, {"title": "On random graphs", "author": ["P. Erd\u0151s", "A. R\u00e9nyi"], "venue": "Publicationes Mathematicae Debrecen, 6:290\u2013297.", "citeRegEx": "Erd\u0151s and R\u00e9nyi,? 1959", "shortCiteRegEx": "Erd\u0151s and R\u00e9nyi", "year": 1959}, {"title": "Community detection in graphs", "author": ["S. Fortunato"], "venue": "Physics Reports, 486(3):75\u2013174.", "citeRegEx": "Fortunato,? 2010", "shortCiteRegEx": "Fortunato", "year": 2010}, {"title": "Random-walk computation of similarities between nodes of a graph with application to collaborative recommendation", "author": ["F. Fouss", "A. Pirotte", "Renders", "J.-M.", "M. Saerens"], "venue": "IEEE Transactions on Knowledge and Data Engineering, 19(3):355\u2013369.", "citeRegEx": "Fouss et al\\.,? 2007", "shortCiteRegEx": "Fouss et al\\.", "year": 2007}, {"title": "A set of measures of centrality based on betweenness", "author": ["L.C. Freeman"], "venue": "Sociometry, pages 35\u201341.", "citeRegEx": "Freeman,? 1977", "shortCiteRegEx": "Freeman", "year": 1977}, {"title": "Graph drawing by force-directed placement", "author": ["T.M. Fruchterman", "E.M. Reingold"], "venue": "Software: Practice and Experience, 21(11):1129\u20131164.", "citeRegEx": "Fruchterman and Reingold,? 1991", "shortCiteRegEx": "Fruchterman and Reingold", "year": 1991}, {"title": "Link mining: a survey", "author": ["L. Getoor", "C.P. Diehl"], "venue": "ACM SIGKDD Explorations Newsletter, 7(2):3\u201312.", "citeRegEx": "Getoor and Diehl,? 2005", "shortCiteRegEx": "Getoor and Diehl", "year": 2005}, {"title": "Random graphs", "author": ["E.N. Gilbert"], "venue": "The Annals of Mathematical Statistics, 30(4):1141\u20131144.", "citeRegEx": "Gilbert,? 1959", "shortCiteRegEx": "Gilbert", "year": 1959}, {"title": "Eccentricity and centrality in networks", "author": ["P. Hage", "F. Harary"], "venue": "Social Networks, 17(1):57\u201363.", "citeRegEx": "Hage and Harary,? 1995", "shortCiteRegEx": "Hage and Harary", "year": 1995}, {"title": "New spectral methods for ratio cut partitioning and clustering", "author": ["L. Hagen", "A.B. Kahng"], "venue": "IEEE Transactions on Computer-Aided Design of Integrated Circuits and Systems, 11(9):1074\u20131085.", "citeRegEx": "Hagen and Kahng,? 1992", "shortCiteRegEx": "Hagen and Kahng", "year": 1992}, {"title": "\u00c9tude comparative de la distribution florale dans une portion des alpes et des jura", "author": ["P. Jaccard"], "venue": "Bulletin de la Soci\u00e9t\u00e9 Vaudoise des Sciences Naturelles, 37:547\u2013579.", "citeRegEx": "Jaccard,? 1901", "shortCiteRegEx": "Jaccard", "year": 1901}, {"title": "Social and Economic Networks", "author": ["M.O. Jackson"], "venue": "Princeton University Press, Princeton, NJ, USA.", "citeRegEx": "Jackson,? 2008", "shortCiteRegEx": "Jackson", "year": 2008}, {"title": "An algorithm for drawing general undirected graphs", "author": ["T. Kamada", "S. Kawai"], "venue": "Information Processing Letters, 31(1):7\u201315.", "citeRegEx": "Kamada and Kawai,? 1989", "shortCiteRegEx": "Kamada and Kawai", "year": 1989}, {"title": "Diffusion centrality in social networks", "author": ["C. Kang", "C. Molinaro", "S. Kraus", "Y. Shavitt", "V. Subrahmanian"], "venue": "Proceedings of the 2012 International Conference on Advances in Social Networks Analysis and Mining (ASONAM 2012), pages 558\u2013564. IEEE Computer Society.", "citeRegEx": "Kang et al\\.,? 2012", "shortCiteRegEx": "Kang et al\\.", "year": 2012}, {"title": "A new status index derived from sociometric analysis", "author": ["L. Katz"], "venue": "Psychometrika, 18(1):39\u201343.", "citeRegEx": "Katz,? 1953", "shortCiteRegEx": "Katz", "year": 1953}, {"title": "Networks and epidemic models", "author": ["M.J. Keeling", "K.T. Eames"], "venue": "Journal of the Royal Society Interface, 2(4):295\u2013307.", "citeRegEx": "Keeling and Eames,? 2005", "shortCiteRegEx": "Keeling and Eames", "year": 2005}, {"title": "An efficient heuristic procedure for partitioning graphs", "author": ["B.W. Kernighan", "S. Lin"], "venue": "Bell System Technical Journal, 49(2):291\u2013307.", "citeRegEx": "Kernighan and Lin,? 1970", "shortCiteRegEx": "Kernighan and Lin", "year": 1970}, {"title": "Authoritative sources in a hyperlinked environment", "author": ["J.M. Kleinberg"], "venue": "Journal of the ACM (JACM), 46(5):604\u2013632.", "citeRegEx": "Kleinberg,? 1999", "shortCiteRegEx": "Kleinberg", "year": 1999}, {"title": "The Stanford GraphBase: A Platform for Combinatorial Computing", "author": ["D.E. Knuth"], "venue": "Addison-Wesley Professional, 1st edition.", "citeRegEx": "Knuth,? 2009", "shortCiteRegEx": "Knuth", "year": 2009}, {"title": "Community detection algorithms: a comparative analysis", "author": ["A. Lancichinetti", "S. Fortunato"], "venue": "Physical Review E, 80(5):056117.", "citeRegEx": "Lancichinetti and Fortunato,? 2009", "shortCiteRegEx": "Lancichinetti and Fortunato", "year": 2009}, {"title": "SNAP Datasets: Stanford large network dataset collection", "author": ["J. Leskovec", "A. Krevl"], "venue": "http://snap.stanford. edu/data.", "citeRegEx": "Leskovec and Krevl,? 2014", "shortCiteRegEx": "Leskovec and Krevl", "year": 2014}, {"title": "The linkprediction problem for social networks", "author": ["D. Liben-Nowell", "J. Kleinberg"], "venue": "Journal of the American Society for Information Science and Technology, 58(7):1019\u20131031.", "citeRegEx": "Liben.Nowell and Kleinberg,? 2007", "shortCiteRegEx": "Liben.Nowell and Kleinberg", "year": 2007}, {"title": "Web Data Mining, 2 ed", "author": ["B. Liu"], "venue": "Berlin, Germany: Springer Berlin Heidelberg.", "citeRegEx": "Liu,? 2011", "shortCiteRegEx": "Liu", "year": 2011}, {"title": "Link prediction in complex networks: A survey", "author": ["L. L\u00fc", "T. Zhou"], "venue": "Physica A: Statistical Mechanics and its Applications, 390(6):1150\u20131170.", "citeRegEx": "L\u00fc and Zhou,? 2011", "shortCiteRegEx": "L\u00fc and Zhou", "year": 2011}, {"title": "The bottlenose dolphin community of doubtful sound features a large proportion of long-lasting associations", "author": ["D. Lusseau", "K. Schneider", "O.J. Boisseau", "P. Haase", "E. Slooten", "S.M. Dawson"], "venue": "Behavioral Ecology and Sociobiology, 54(4):396\u2013405.", "citeRegEx": "Lusseau et al\\.,? 2003", "shortCiteRegEx": "Lusseau et al\\.", "year": 2003}, {"title": "Some methods for classification and analysis of multivariate observations", "author": ["J MacQueen"], "venue": "Proceedings of the Fifth Berkeley Symposium on Mathematical Statistics and Probability, number 14 in 1, pages 281\u2013297. Oakland, CA, USA.", "citeRegEx": "MacQueen,? 1967", "shortCiteRegEx": "MacQueen", "year": 1967}, {"title": "Adaptive degree penalization for link prediction", "author": ["V. Mart\u0301\u0131nez", "F. Berzal", "Cubero", "J.-C"], "venue": "Journal of Computational Science,", "citeRegEx": "Mart\u0301\u0131nez et al\\.,? \\Q2016\\E", "shortCiteRegEx": "Mart\u0301\u0131nez et al\\.", "year": 2016}, {"title": "Prophnet: A generic prioritization method through propagation of information", "author": ["V. Mart\u0301\u0131nez", "C. Cano", "A. Blanco"], "venue": "BMC Bioinformatics,", "citeRegEx": "Mart\u0301\u0131nez et al\\.,? \\Q2014\\E", "shortCiteRegEx": "Mart\u0301\u0131nez et al\\.", "year": 2014}, {"title": "Networks: An Introduction", "author": ["M. Newman"], "venue": "Oxford University Press.", "citeRegEx": "Newman,? 2010", "shortCiteRegEx": "Newman", "year": 2010}, {"title": "Clustering and preferential attachment in growing networks", "author": ["M.E. Newman"], "venue": "Physical Review E, 64(2):025102.", "citeRegEx": "Newman,? 2001", "shortCiteRegEx": "Newman", "year": 2001}, {"title": "The structure and function of complex networks", "author": ["M.E. Newman"], "venue": "Society for Industrial and Applied Mathematics Review, 45(2):167\u2013256.", "citeRegEx": "Newman,? 2003", "shortCiteRegEx": "Newman", "year": 2003}, {"title": "Fast algorithm for detecting community structure in networks", "author": ["M.E. Newman"], "venue": "Physical Review E, 69(6):066133.", "citeRegEx": "Newman,? 2004", "shortCiteRegEx": "Newman", "year": 2004}, {"title": "Finding and evaluating community structure in networks", "author": ["M.E. Newman", "M. Girvan"], "venue": "Physical Review E, 69(2):026113.", "citeRegEx": "Newman and Girvan,? 2004", "shortCiteRegEx": "Newman and Girvan", "year": 2004}, {"title": "On spectral clustering: Analysis and an algorithm", "author": ["A.Y. Ng", "M.I. Jordan", "Y Weiss"], "venue": "Advances in Neural Information Processing Systems,", "citeRegEx": "Ng et al\\.,? \\Q2002\\E", "shortCiteRegEx": "Ng et al\\.", "year": 2002}, {"title": "The pagerank citation ranking: Bringing order to the web", "author": ["L. Page", "S. Brin", "R. Motwani", "T. Winograd"], "venue": "Technical report, Stanford InfoLab.", "citeRegEx": "Page et al\\.,? 1999", "shortCiteRegEx": "Page et al\\.", "year": 1999}, {"title": "Finding experts by link prediction in co-authorship networks", "author": ["M. Pavlov", "R. Ichise"], "venue": "Finding Experts on the Web with Semantics Workshop, 290:42\u201355.", "citeRegEx": "Pavlov and Ichise,? 2007", "shortCiteRegEx": "Pavlov and Ichise", "year": 2007}, {"title": "The problem of the random walk", "author": ["K. Pearson"], "venue": "Nature, 72:342.", "citeRegEx": "Pearson,? 1905", "shortCiteRegEx": "Pearson", "year": 1905}, {"title": "Local assortativeness in scale-free networks", "author": ["M. Piraveenan", "M. Prokopenko", "A. Zomaya"], "venue": "Europhysics Letters, 84(2):28002.", "citeRegEx": "Piraveenan et al\\.,? 2008", "shortCiteRegEx": "Piraveenan et al\\.", "year": 2008}, {"title": "Classifying complex networks using unbiased local assortativity", "author": ["M. Piraveenan", "M. Prokopenko", "A.Y. Zomaya"], "venue": "ALIFE, pages 329\u2013336.", "citeRegEx": "Piraveenan et al\\.,? 2010", "shortCiteRegEx": "Piraveenan et al\\.", "year": 2010}, {"title": "Hierarchical organization of modularity in metabolic networks", "author": ["Barab\u00e1si", "A.-L."], "venue": "Science, 297(5586):1551\u2013 1555.", "citeRegEx": "Barab\u00e1si and A..L.,? 2002", "shortCiteRegEx": "Barab\u00e1si and A..L.", "year": 2002}, {"title": "Introduction to Modern Information Retrieval", "author": ["G. Salton", "M.J. McGill"], "venue": "McGraw-Hill, Inc.", "citeRegEx": "Salton and McGill,? 1986", "shortCiteRegEx": "Salton and McGill", "year": 1986}, {"title": "Efficient modularity optimization by multistep greedy algorithm and vertex mover refinement", "author": ["P. Schuetz", "A. Caflisch"], "venue": "Physical Review E, 77(4):046112.", "citeRegEx": "Schuetz and Caflisch,? 2008", "shortCiteRegEx": "Schuetz and Caflisch", "year": 2008}, {"title": "Exploring network structure, dynamics, and function using NetworkX", "author": ["D.A. Schult", "P. Swart"], "venue": "Proceedings of the 7th Python in Science Conferences (SciPy 2008), volume 2008, pages 11\u201316.", "citeRegEx": "Schult and Swart,? 2008", "shortCiteRegEx": "Schult and Swart", "year": 2008}, {"title": "Cytoscape: a software environment for integrated models of biomolecular interaction networks", "author": ["P. Shannon", "A. Markiel", "O. Ozier", "N.S. Baliga", "J.T. Wang", "D. Ramage", "N. Amin", "B. Schwikowski", "T. Ideker"], "venue": "Genome Research, 13(11):2498\u20132504.", "citeRegEx": "Shannon et al\\.,? 2003", "shortCiteRegEx": "Shannon et al\\.", "year": 2003}, {"title": "Normalized cuts and image segmentation", "author": ["J. Shi", "J. Malik"], "venue": "Transactions on Pattern Analysis and Machine Intelligence, 22(8):888\u2013905.", "citeRegEx": "Shi and Malik,? 2000", "shortCiteRegEx": "Shi and Malik", "year": 2000}, {"title": "Slink: an optimally efficient algorithm for the single-link cluster method", "author": ["R. Sibson"], "venue": "The Computer Journal, 16(1):30\u201334.", "citeRegEx": "Sibson,? 1973", "shortCiteRegEx": "Sibson", "year": 1973}, {"title": "Analyzing (social media) networks with NodeXL", "author": ["M.A. Smith", "B. Shneiderman", "N. Milic-Frayling", "E. Mendes Rodrigues", "V. Barash", "C. Dunne", "T. Capone", "A. Perer", "E. Gleave"], "venue": "Proceedings of the Fourth International Conference on Communities and Technologies,", "citeRegEx": "Smith et al\\.,? 2009", "shortCiteRegEx": "Smith et al\\.", "year": 2009}, {"title": "A method of establishing groups of equal amplitude in plant sociology based on similarity of species and its application to analyses of the vegetation on danish commons", "author": ["T. S\u00f8rensen"], "venue": "Biologiske Skrifter, 5:1\u201334.", "citeRegEx": "S\u00f8rensen,? 1948", "shortCiteRegEx": "S\u00f8rensen", "year": 1948}, {"title": "Handbook of Graph Drawing and Visualization", "author": ["R. Tamassia"], "venue": "CRC Press.", "citeRegEx": "Tamassia,? 2013", "shortCiteRegEx": "Tamassia", "year": 2013}, {"title": "Introduction to data mining", "author": ["Tan", "P.-N", "M. Steinbach", "V Kumar"], "venue": null, "citeRegEx": "Tan et al\\.,? \\Q2006\\E", "shortCiteRegEx": "Tan et al\\.", "year": 2006}, {"title": "Fast random walk with restart and its applications", "author": ["H. Tong", "C. Faloutsos", "Pan", "J.-Y."], "venue": "Proceedings of the Sixth International Conference on Data Mining, ICDM \u201906, pages 613\u2013622. IEEE Computer Society.", "citeRegEx": "Tong et al\\.,? 2006", "shortCiteRegEx": "Tong et al\\.", "year": 2006}, {"title": "A propagation-based algorithm for inferring gene-disease assocations", "author": ["O. Vanunu", "R. Sharan"], "venue": "German Conference on Bioinformatics, pages 54\u201352.", "citeRegEx": "Vanunu and Sharan,? 2008", "shortCiteRegEx": "Vanunu and Sharan", "year": 2008}, {"title": "Collective dynamics of \u2018small-world\u2019 networks", "author": ["D.J. Watts", "S.H. Strogatz"], "venue": "Nature, 393(6684):440\u2013442.", "citeRegEx": "Watts and Strogatz,? 1998", "shortCiteRegEx": "Watts and Strogatz", "year": 1998}, {"title": "Nicheworksinteractive visualization of very large graphs", "author": ["G.J. Wills"], "venue": "Journal of Computational and Graphical Statistics, 8(2):190\u2013212.", "citeRegEx": "Wills,? 1999", "shortCiteRegEx": "Wills", "year": 1999}, {"title": "Overlapping community detection at scale: a nonnegative matrix factorization approach", "author": ["J. Yang", "J. Leskovec"], "venue": "Proceedings of the Sixth ACM International Conference on Web Search and Data Mining, pages 587\u2013 596. ACM.", "citeRegEx": "Yang and Leskovec,? 2013", "shortCiteRegEx": "Yang and Leskovec", "year": 2013}, {"title": "An information flow model for conflict and fission in small groups", "author": ["W.W. Zachary"], "venue": "Journal of Anthropological Research, pages 452\u2013473.", "citeRegEx": "Zachary,? 1977", "shortCiteRegEx": "Zachary", "year": 1977}, {"title": "Predicting missing links via local information", "author": ["T. Zhou", "L. L\u00fc", "Zhang", "Y.-C."], "venue": "The European Physical Journal B, 71(4):623\u2013630.", "citeRegEx": "Zhou et al\\.,? 2009", "shortCiteRegEx": "Zhou et al\\.", "year": 2009}], "referenceMentions": [{"referenceID": 53, "context": "Data mining techniques are intended to extract information from large volumes of data (Tan et al., 2006).", "startOffset": 86, "endOffset": 104}, {"referenceID": 10, "context": "Novel techniques have also been devised for semi-structured or structured data, since exploiting the relationships among instances from a dataset leads to new research and development opportunities (Getoor and Diehl, 2005).", "startOffset": 198, "endOffset": 222}, {"referenceID": 31, "context": "For example, network data mining has been used to predict previously unknown protein interactions in protein-protein interaction networks (Mart\u0301\u0131nez et al., 2014).", "startOffset": 138, "endOffset": 162}, {"referenceID": 39, "context": "It has also been used to study and predict future author collaborations and tendencies in co-authorship networks (Pavlov and Ichise, 2007).", "startOffset": 113, "endOffset": 138}, {"referenceID": 38, "context": "Different network mining techniques are used by popular internet search engines to rank the most relevant websites (Page et al., 1999).", "startOffset": 115, "endOffset": 134}, {"referenceID": 27, "context": "Some of them also include implementations of specific network data mining techniques, such as community detection algorithms or predictive models, including link prediction (L\u00fc and Zhou, 2011) and epidemic models (Keeling and Eames, 2005).", "startOffset": 173, "endOffset": 192}, {"referenceID": 19, "context": "Some of them also include implementations of specific network data mining techniques, such as community detection algorithms or predictive models, including link prediction (L\u00fc and Zhou, 2011) and epidemic models (Keeling and Eames, 2005).", "startOffset": 213, "endOffset": 238}, {"referenceID": 50, "context": "For instance, Pajek (Batagelj and Mrvar, 1998), NodeXL (Smith et al., 2009), Gephi (Bastian et al.", "startOffset": 55, "endOffset": 75}, {"referenceID": 4, "context": "Graphviz (Ellson et al., 2002) and Cytoscape (Shannon et al.", "startOffset": 9, "endOffset": 30}, {"referenceID": 47, "context": ", 2002) and Cytoscape (Shannon et al., 2003) are two well\u2013known alternatives for network visualization.", "startOffset": 22, "endOffset": 44}, {"referenceID": 46, "context": "Finally, igraph (Csardi and Nepusz, 2006) and NetworkX (Schult and Swart, 2008) are two popular software libraries of network algorithms.", "startOffset": 55, "endOffset": 79}, {"referenceID": 2, "context": "This component provides different building blocks for implementing well-studied parallel programming design patterns, such as MapReduce (Dean and Ghemawat, 2008).", "startOffset": 136, "endOffset": 161}, {"referenceID": 24, "context": "Other file formats are supported by NOESIS, such as the Pajek file format, which is similar to GDF, or the file format of the datasets from the Stanford Network Analysis Platform (SNAP) (Leskovec and Krevl, 2014).", "startOffset": 186, "endOffset": 212}, {"referenceID": 52, "context": "It also includes reusable implementations of a large collection of popular network\u2013related techniques, from graph visualization (Tamassia, 2013) and common graph algorithms, to network structural properties (Newman, 2010) and network formation models (Jackson, 2008).", "startOffset": 128, "endOffset": 144}, {"referenceID": 32, "context": "It also includes reusable implementations of a large collection of popular network\u2013related techniques, from graph visualization (Tamassia, 2013) and common graph algorithms, to network structural properties (Newman, 2010) and network formation models (Jackson, 2008).", "startOffset": 207, "endOffset": 221}, {"referenceID": 15, "context": "It also includes reusable implementations of a large collection of popular network\u2013related techniques, from graph visualization (Tamassia, 2013) and common graph algorithms, to network structural properties (Newman, 2010) and network formation models (Jackson, 2008).", "startOffset": 251, "endOffset": 266}, {"referenceID": 5, "context": "Among the models included in NOESIS, the Erd\u00f6sR\u00e9nyi model (Erd\u0151s and R\u00e9nyi, 1959) is one of the simplest ones.", "startOffset": 58, "endOffset": 81}, {"referenceID": 11, "context": "The Gilbert model (Gilbert, 1959) is similar but a probability of existence is given for links instead.", "startOffset": 18, "endOffset": 33}, {"referenceID": 56, "context": "For example, the Watts\u2013Strogatz model (Watts and Strogatz, 1998) generates networks with small-world properties, that is, low diameter and high clustering.", "startOffset": 38, "endOffset": 64}, {"referenceID": 34, "context": "Another model with very similar properties to Barab\u00e1si\u2013Albert\u2019s model is the Price\u2019s citation model (Newman, 2003).", "startOffset": 100, "endOffset": 114}, {"referenceID": 41, "context": "been included: biased (Piraveenan et al., 2008) and unbiased (Piraveenan et al.", "startOffset": 22, "endOffset": 47}, {"referenceID": 42, "context": ", 2008) and unbiased (Piraveenan et al., 2010) node degree assortativity.", "startOffset": 21, "endOffset": 46}, {"referenceID": 12, "context": "The eccentricity of a node is defined as the maximum distance to any other node (Hage and Harary, 1995).", "startOffset": 80, "endOffset": 103}, {"referenceID": 15, "context": "Decay is yet another reachability score, computed as the summation of a delta factor powered by the path length to any other node (Jackson, 2008).", "startOffset": 130, "endOffset": 145}, {"referenceID": 8, "context": "Betweenness, also known as Freeman\u2019s betweenness, is a score computed as the count of shortest paths the node is involved in (Freeman, 1977).", "startOffset": 125, "endOffset": 140}, {"referenceID": 38, "context": "The most popular influence algorithm is PageRank (Page et al., 1999), since it is used by the Google search engine.", "startOffset": 49, "endOffset": 68}, {"referenceID": 21, "context": "A similar algorithm is HITS (Kleinberg, 1999), which stands for hyperlink-induced topic search.", "startOffset": 28, "endOffset": 45}, {"referenceID": 18, "context": "Katz centrality considers all possible paths, but penalizes long ones using a given damping factor (Katz, 1953).", "startOffset": 99, "endOffset": 111}, {"referenceID": 17, "context": "Finally, diffusion centrality (Kang et al., 2012) is another influence algorithm based on Katz centrality.", "startOffset": 30, "endOffset": 49}, {"referenceID": 9, "context": "NOESIS provides different automatic graph layout techniques, such as the well\u2013known Fruchterman\u2013 Reingold (Fruchterman and Reingold, 1991) and Kamada\u2013Kawai (Kamada and Kawai, 1989) force\u2013based layout algorithms.", "startOffset": 106, "endOffset": 138}, {"referenceID": 16, "context": "NOESIS provides different automatic graph layout techniques, such as the well\u2013known Fruchterman\u2013 Reingold (Fruchterman and Reingold, 1991) and Kamada\u2013Kawai (Kamada and Kawai, 1989) force\u2013based layout algorithms.", "startOffset": 156, "endOffset": 180}, {"referenceID": 52, "context": "Hierarchical layouts (Tamassia, 2013), which arrange nodes in layers trying to minimize edge crossing, are also included.", "startOffset": 21, "endOffset": 37}, {"referenceID": 57, "context": "Different radial layout algorithms are included as well (Wills, 1999).", "startOffset": 56, "endOffset": 69}, {"referenceID": 28, "context": "5 A dolphin social network (Lusseau et al., 2003) represented using different network visualization algorithms: random layout (top left), Kamada\u2013Kawai layout (top right), Fruchterman\u2013Reingold layout (bottom left), and circular layout using average path length (bottom right).", "startOffset": 27, "endOffset": 49}, {"referenceID": 23, "context": "NOESIS includes a wide array of community detection methods (Lancichinetti and Fortunato, 2009) and link prediction techniques (Liben-Nowell and Kleinberg, 2007).", "startOffset": 60, "endOffset": 95}, {"referenceID": 25, "context": "NOESIS includes a wide array of community detection methods (Lancichinetti and Fortunato, 2009) and link prediction techniques (Liben-Nowell and Kleinberg, 2007).", "startOffset": 127, "endOffset": 161}, {"referenceID": 59, "context": "6 Community detection methods applied to Zachary\u2019s karate club network (Zachary, 1977): Fast greedy partitioning (top left), Kernighan-Lin bi-partitioning (top right), average-link hierarchical partitioning (bottom left), and complete-link hierarchical partitioning (bottom right).", "startOffset": 71, "endOffset": 86}, {"referenceID": 6, "context": "as a cluster, and then iteratively merges clusters until all nodes are in the same cluster (Fortunato, 2010).", "startOffset": 91, "endOffset": 108}, {"referenceID": 49, "context": "Different strategies for the selection of clusters to merge have been implemented, including single-link (Sibson, 1973), which selects the two clusters with the smallest minimum pairwise distance; complete-link (Defays, 1977), which selects the two clusters with the smallest maximum pairwise distance; and average-link (Liu, 2011), which selects the two clusters with the smallest average pairwise distance.", "startOffset": 105, "endOffset": 119}, {"referenceID": 3, "context": "Different strategies for the selection of clusters to merge have been implemented, including single-link (Sibson, 1973), which selects the two clusters with the smallest minimum pairwise distance; complete-link (Defays, 1977), which selects the two clusters with the smallest maximum pairwise distance; and average-link (Liu, 2011), which selects the two clusters with the smallest average pairwise distance.", "startOffset": 211, "endOffset": 225}, {"referenceID": 26, "context": "Different strategies for the selection of clusters to merge have been implemented, including single-link (Sibson, 1973), which selects the two clusters with the smallest minimum pairwise distance; complete-link (Defays, 1977), which selects the two clusters with the smallest maximum pairwise distance; and average-link (Liu, 2011), which selects the two clusters with the smallest average pairwise distance.", "startOffset": 320, "endOffset": 331}, {"referenceID": 36, "context": "Modularity\u2013based techniques search for communities by attempting to maximize their modularity score (Newman and Girvan, 2004).", "startOffset": 100, "endOffset": 125}, {"referenceID": 35, "context": "Different greedy strategies, including fast greedy (Newman, 2004) and multi-step greedy (Schuetz and Caflisch, 2008), are available.", "startOffset": 51, "endOffset": 65}, {"referenceID": 45, "context": "Different greedy strategies, including fast greedy (Newman, 2004) and multi-step greedy (Schuetz and Caflisch, 2008), are available.", "startOffset": 88, "endOffset": 116}, {"referenceID": 20, "context": "For example, Kernighan-Lin bi-partitioning (Kernighan and Lin, 1970) starts with an arbitrary partition in two clusters.", "startOffset": 43, "endOffset": 68}, {"referenceID": 49, "context": "Hierarchical Single-link (SLINK) O(v) (Sibson, 1973)", "startOffset": 38, "endOffset": 52}, {"referenceID": 3, "context": "Complete-link (CLINK) O(v log v) (Defays, 1977)", "startOffset": 33, "endOffset": 47}, {"referenceID": 26, "context": "Average-link (UMPGA) O(v log v) (Liu, 2011)", "startOffset": 32, "endOffset": 43}, {"referenceID": 35, "context": "Modularity Fast greedy O(kvd log v) (Newman, 2004)", "startOffset": 36, "endOffset": 50}, {"referenceID": 45, "context": "Multi-step greedy O(kvd log v) (Schuetz and Caflisch, 2008)", "startOffset": 31, "endOffset": 59}, {"referenceID": 20, "context": "Partitional Kernighan-Lin bi-partitioning O(v log v) (Kernighan and Lin, 1970)", "startOffset": 53, "endOffset": 78}, {"referenceID": 13, "context": "Spectral Ratio cut algorithm (EIG1) O(v) (Hagen and Kahng, 1992)", "startOffset": 41, "endOffset": 64}, {"referenceID": 37, "context": "Jordan and Weiss NG algorithm (KNSC1) O(v) (Ng et al., 2002)", "startOffset": 43, "endOffset": 60}, {"referenceID": 48, "context": "Spectral k-means O(v) (Shi and Malik, 2000)", "startOffset": 22, "endOffset": 43}, {"referenceID": 58, "context": "Overlapping BigClam O(v) (Yang and Leskovec, 2013)", "startOffset": 25, "endOffset": 50}, {"referenceID": 6, "context": "Spectral community detection (Fortunato, 2010) is another family of community detection techniques included in NOESIS.", "startOffset": 29, "endOffset": 46}, {"referenceID": 13, "context": "NOESIS includes the ratio cut algorithm (EIG1) (Hagen and Kahng, 1992), the Jordan and Weiss NG algorithm (KNSC1) (Ng et al.", "startOffset": 47, "endOffset": 70}, {"referenceID": 37, "context": "NOESIS includes the ratio cut algorithm (EIG1) (Hagen and Kahng, 1992), the Jordan and Weiss NG algorithm (KNSC1) (Ng et al., 2002), and spectral k-means (Shi and Malik, 2000).", "startOffset": 114, "endOffset": 131}, {"referenceID": 48, "context": ", 2002), and spectral k-means (Shi and Malik, 2000).", "startOffset": 30, "endOffset": 51}, {"referenceID": 58, "context": "Finally, the BigClam overlapping community detector is also available in NOESIS (Yang and Leskovec, 2013).", "startOffset": 80, "endOffset": 105}, {"referenceID": 33, "context": "Among local methods, the most basic technique is the common neighbors score (Newman, 2001), which is equal to the number of shared neighbors between a pair of nodes.", "startOffset": 76, "endOffset": 90}, {"referenceID": 0, "context": "For example, the Adamic\u2013Adar score (Adamic and Adar, 2003) is the sum of one divided by the logarithm of the degree of each shared node.", "startOffset": 35, "endOffset": 58}, {"referenceID": 60, "context": "The resource\u2013allocation index (Zhou et al., 2009) follows the same expression, but directly considers the degree instead of the logarithm of the degree.", "startOffset": 30, "endOffset": 49}, {"referenceID": 30, "context": "The adaptive degree penalization score (Mart\u0301\u0131nez et al., 2016) also follows the same approach, yet automatically determines an adequate degree penalization by considering properties of the network topology.", "startOffset": 39, "endOffset": 63}, {"referenceID": 33, "context": "Local Common Neighbors count O(vd) (Newman, 2001)", "startOffset": 35, "endOffset": 49}, {"referenceID": 0, "context": "Adamic\u2013Adar score O(vd) (Adamic and Adar, 2003)", "startOffset": 24, "endOffset": 47}, {"referenceID": 60, "context": "Resource\u2013allocation index O(vd) (Zhou et al., 2009)", "startOffset": 32, "endOffset": 51}, {"referenceID": 30, "context": "Adaptive degree penalization score O(vd) (Mart\u0301\u0131nez et al., 2016)", "startOffset": 41, "endOffset": 65}, {"referenceID": 14, "context": "Jaccard score O(vd) (Jaccard, 1901)", "startOffset": 20, "endOffset": 35}, {"referenceID": 44, "context": "Salton score O(vd) (Salton and McGill, 1986)", "startOffset": 19, "endOffset": 44}, {"referenceID": 51, "context": "Sorensen score O(vd) (S\u00f8rensen, 1948)", "startOffset": 21, "endOffset": 37}, {"referenceID": 18, "context": "Global Katz index O(v) (Katz, 1953)", "startOffset": 23, "endOffset": 35}, {"referenceID": 40, "context": "Random walk O(cvd) (Pearson, 1905)", "startOffset": 19, "endOffset": 34}, {"referenceID": 54, "context": "Random walk with restart O(cvd) (Tong et al., 2006)", "startOffset": 32, "endOffset": 51}, {"referenceID": 55, "context": "Flow propagation O(cvd) (Vanunu and Sharan, 2008)", "startOffset": 24, "endOffset": 49}, {"referenceID": 7, "context": "Pseudoinverse Laplacian score O(v) (Fouss et al., 2007)", "startOffset": 35, "endOffset": 55}, {"referenceID": 7, "context": "Average commute time score O(v) (Fouss et al., 2007)", "startOffset": 32, "endOffset": 52}, {"referenceID": 14, "context": "For example, the Jaccard score (Jaccard, 1901) normalizes the number of shared neighbors by the total number of neighbors.", "startOffset": 31, "endOffset": 46}, {"referenceID": 44, "context": "Similarly, the Salton score (Salton and McGill, 1986) also normalizes, this time using the square root of the product of both node degrees.", "startOffset": 28, "endOffset": 53}, {"referenceID": 51, "context": "The Sorensen score (S\u00f8rensen, 1948) considers the double of the count of shared neighbors normalized by the sum of both neighbors size.", "startOffset": 19, "endOffset": 35}, {"referenceID": 18, "context": "For example, the Katz score (Katz, 1953) sums the influence of all possible paths between two nodes, incrementally penalizing paths by their length according to a given damping factor.", "startOffset": 28, "endOffset": 40}, {"referenceID": 40, "context": "Random walk techniques simulate a Markov chain of randomly-selected nodes (Pearson, 1905).", "startOffset": 74, "endOffset": 89}, {"referenceID": 54, "context": "An interesting variant is the random walk with restart (Tong et al., 2006), which models the possibility of returning to the seed node with a given probability.", "startOffset": 55, "endOffset": 74}, {"referenceID": 55, "context": "Flow propagation is another variant of random walk (Vanunu and Sharan, 2008), where the transition matrix is computed by performing both row and column normalization of the adjacency matrix.", "startOffset": 51, "endOffset": 76}, {"referenceID": 7, "context": "The pseudoinverse Laplacian score (Fouss et al., 2007) is the inner product of the rows of the corresponding pair of nodes from the Laplacian matrix.", "startOffset": 34, "endOffset": 54}, {"referenceID": 7, "context": "Other spectral technique is the average commute time (Fouss et al., 2007), which is defined as the average number of steps that a random walker starting from a particular node takes to reach another node for the first time and go back to the initial node.", "startOffset": 53, "endOffset": 73}, {"referenceID": 22, "context": "7 Different link scoring techniques applied to Les Miserables coappearance network (Knuth, 2009): common neighbors (top left), preferential attachment score (top right), Sorensen score (bottom left), and Katz index (bottom right).", "startOffset": 83, "endOffset": 96}], "year": 2017, "abstractText": "Network data mining has become an important area of study due to the large number of problems it can be applied to. This paper presents NOESIS, an open source framework for network data mining that provides a large collection of network analysis techniques, including the analysis of network structural properties, community detection methods, link scoring, and link prediction, as well as network visualization algorithms. It also features a complete stand\u2013alone graphical user interface that facilitates the use of all these techniques. The NOESIS framework has been designed using solid object\u2013oriented design principles and structured parallel programming. As a lightweight library with minimal external dependencies and a permissive software license, NOESIS can be incorporated into other software projects. Released under a BSD license, it is available from http://noesis.ikor.org.", "creator": "LaTeX with hyperref package"}}}