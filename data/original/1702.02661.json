{"id": "1702.02661", "review": {"conference": "AAAI", "VERSION": "v1", "DATE_OF_SUBMISSION": "9-Feb-2017", "title": "Inductive Pairwise Ranking: Going Beyond the n log(n) Barrier", "abstract": "We study the problem of ranking a set of items from nonactively chosen pairwise preferences where each item has feature information with it. We propose and characterize a very broad class of preference matrices giving rise to the Feature Low Rank (FLR) model, which subsumes several models ranging from the classic Bradley-Terry-Luce (BTL) (Bradley and Terry 1952) and Thurstone (Thurstone 1927) models to the recently proposed blade-chest (Chen and Joachims 2016) and generic low-rank preference (Rajkumar and Agarwal 2016) models. We use the technique of matrix completion in the presence of side information to develop the Inductive Pairwise Ranking (IPR) algorithm that provably learns a good ranking under the FLR model, in a sample-efficient manner. In practice, through systematic synthetic simulations, we confirm our theoretical findings regarding improvements in the sample complexity due to the use of feature information. Moreover, on popular real-world preference learning datasets, with as less as 10% sampling of the pairwise comparisons, our method recovers a good ranking.", "histories": [["v1", "Thu, 9 Feb 2017 00:17:39 GMT  (771kb,D)", "http://arxiv.org/abs/1702.02661v1", null]], "reviews": [], "SUBJECTS": "cs.LG cs.IT math.IT stat.ML", "authors": ["u n niranjan", "arun rajkumar"], "accepted": true, "id": "1702.02661"}, "pdf": {"name": "1702.02661.pdf", "metadata": {"source": "CRF", "title": "Inductive Pairwise Ranking: Going Beyond the n log(n) Barrier", "authors": ["U.N. Niranjan", "Arun Rajkumar"], "emails": ["un.niranjan@uci.edu", "arun.rajkumar@xerox.com"], "sections": [{"heading": "Introduction", "text": "Ranking from pairwise comparisons or preferences is an ubiquitous problem in machine learning, statistics and theoretical computer science. In the so-called non-active setting, one is given comparison results ofm pairs pre-selected from among all pairs of n items where each pair is compared at leastK times. Particularly, the learner does not get to choose which pairs are to be compared. The goal is then to estimate a suitable ordering of the items, using the observed comparison results, that conforms to the true ordering, assuming one exists, up to the desired error in a suitably defined error measure.\nIn practical ranking applications, we often have side information associated with the items that need to be ranked \u2013 such a scenario is referred to as the inductive setting. An advantage in this inductive learning setting is that, in addition to ranking a given set of items, one is also able to rank new unseen items that may introduced after parameter learning. Motivated by these factors, we wish to leverage the\n\u2217Part of the work done while interning at Xerox Research Centre India. Copyright c\u00a9 2017, Association for the Advancement of Artificial Intelligence (www.aaai.org). All rights reserved.\navailable side information to compute an ordering more efficiently than existing techniques. This is relevant in many practical applications; for instance, in addition to using a minimal amount of customer preference data, (a) using food characteristics like nutrition, preparation method, etc could help in finding the top-rated dishes of a restaurant, (b) using car features like engine type, body type, etc could help elicit useful trends for automotive industry.\nOur Contributions: To the best of our knowledge, our work is the first to derive a provable and efficient method for ranking in the non-active inductive setting. Our novelty and technical contributions can be summarized along the following axes:\n1. Model: We generalize existing models so that we can incorporate (a) features, and (b) feature correlations associated with the items to be ranked. We show that our model subsumes many existing and popular ranking models.\n2. Algorithm: Our algorithm uses two key subroutines namely, (a) noisy inductive matrix completion, and (b) approximate pairwise ranking algorithm (Copeland 1951).\n3. Guarantee: We derive the guarantee that our algorithm obtains, with high probability, an -accurate recovery using \u2126(max(log n/ 2, d4 log3 n/ 3n2)) independent pairwise comparisons chosen uniformly at random.\n4. Experiments: We substantiate our theoretical results by demonstrating sample complexity gains on both synthetic and real-world experiments.\nWe would like to emphasize upfront that it is the sole focus of this paper to study the practically motivated regime of d n in detail. Furthermore, we note that our sample complexity results do not violate the standard \u2126(n log n) lower bounds for comparison-based sorting algorithms since we develop an algorithm that effectively ranks in the feature space rather than the item space."}, {"heading": "Related Work and Background", "text": "We now give a brief overview of relevant work in ranking models followed by a brief background regarding tools from inductive matrix completion theory which will be crucial in proving our sample complexity bounds.\nar X\niv :1\n70 2.\n02 66\n1v 1\n[ cs\n.L G\n] 9\nF eb\n2 01\n7\nRanking Models : In the simplest terms, the ranking problem involves estimating the best ordering items according to some observed preferences. A early thread of ranking literature has its beginnings in economics involving choice models (Luce 1959); other related works in social choice theory include (Lu and Boutilier 2011) and (Caragiannis, Procaccia, and Shah 2013). A certain deterministic version of the ranking problem is also studied as the sorting problem which is central in theoretical computer science.\n1. Random Utility (RU) models: Starting with the seminal work of (Bradley and Terry 1952), the Bradley-TerryLuce (BTL) model has become a landmark model for ranking. In the vanilla version of this model, the probability that item i beats item j is given by Pij = wiwi+wj where w \u2208 Rn+ is the parameter vector to be estimated from data; the ith entry in w denotes the score associated with item i. Thurstone (Thurstone 1927) model is also a wellknown statistical model; here, Pij = \u03a6(si \u2212 sj) where \u03a6 is the standard normal Cumulative Distribution Function (CDF) and s \u2208 Rn is the score vector. These classic models fall under the so-called Random Utility (RU) Models (Marschak and others 1959).\n2. Item Feature (IF) models: Extending the BTL model, statistical models that utilize side information are presented in (Cattelan 2012). Recently, (Chen and Joachims 2016) presented the blade-chest ranking model which studied the stochastic intransitive setting. Their algorithm involves regularized maximum likelihood estimation for which tight sample complexity properties are not known. Despite the above works, to the best of our knowledge, there are no known models utilizing feature information while have provable sample-efficient algorithms for estimation and ranking.\n3. Low Rank (LR) models: Recently, (Rajkumar and Agarwal 2016) \u2013 unifying classic models such as BTL and Thurstone models \u2013 defined a generic class of preference matrices which have low rank under transformations involving suitable link functions. Upon such a transformation, connections of the ranking problem to matrix completion theory become clear. Subsequently, they use wellknown matrix completion results to derive sample complexity guarantees for ranking. However, their model does not utilize side information that may be available.\nThis list is by no means exhaustive; while there exist several other ranking methods (eg, ranking-SVM(Joachims 2002)), there are no known sample complexity guarantees associated with these.\nInductive Matrix Completion: The matrix completion task (Cande\u0300s and Recht 2009) is to fill-in the missing entries of a partially observed matrix, which is possible efficiently under a low-rank assumption on the underlying matrix. Oftentimes, side information may be available which further makes this task potentially easier. This is the Inductive Matrix Completion (IMC) problem which is formally defined as the optimization problem, Z\u0302 = arg minZ `((A >ZB)ij ,Mij) where A \u2208 Rd1\u00d7n1 and B \u2208\nRd2\u00d7n2 are known feature matrices, Z \u2208 Rd1\u00d7d2 is a rank-r unknown latent parameter matrix, (i, j) \u2208 \u039e \u2286 [n] \u00d7 [n] is the support set corresponding to the (uniformly sampled) observed entries and ` is any loss function, the squared loss being the most commonly chosen one. Once the estimate Z\u0302 is obtained using the training set indexed by \u039e, predictions may then be performed as M\u0302ij = (A>Z\u0302B)ij for any (i, j) \u2208 \u039ec. The known solution techniques with recovery guarantees are:\n1. Non-convex algorithm (via alternating minimization): This approach entails parameterizing Z = UV> and performing alternating projected least squares updates on U and V. The tightest known guarantee for this approach involves a sample complexity of \u2126(d2r3\u03ba2 log(d)) and a convergence rate ofO(log(1/ )) (Jain and Dhillon 2013).\n2. Convex relaxation (via trace-norm formulation): This approach entails relaxing the rank constraints to a nuclear norm penalty. Existence of a unique optimum can be shown with high probability (Xu, Jin, and Zhou 2013) and is characterized a sample complexity of \u2126(dr log(d) log(n)). Despite the non-smoothness, a subgradient descent algorithm provably converges with a rate of O(1/ \u221a ) (Ji and Ye 2009). Noisy features are handled\nin (Chiang, Hsieh, and Dhillon 2015)."}, {"heading": "Feature-aware Ranking", "text": ""}, {"heading": "Notation and Preliminaries", "text": "General notation: Unless stated otherwise, we use lowercase letters for scalars, upper-case letters for universal constants, lower-case bold-face letters for vectors and uppercase bold-face letters for matrices; specifically, P denotes a preference matrix. For any matrix M \u2208 Ra\u00d7b, let \u2016M\u2016\u221e = maxi,j |Mij |, \u2016M\u2016\u2217 = \u2211min{a,b} i=1 \u03c3i(M) where \u03c3i(M) are\nthe singular values of M and \u2016M\u2016F = \u221a\u2211a i=1 \u2211b j=1M 2 ij . I denotes the identity matrix whose dimensions would be implied from the context; similarly, depending on the context, 0 denotes a vector or matrix of zeros of the appropriate dimension. Next, let Pmin = mini 6=j Pij and \u2206 = mini 6=j |\u03c8(Pij)\u2212 \u03c8(1/2)|. Let \u039e be the support set of the observed entries of a matrix and let m = |\u039e|. Define projection of a matrix on the support set B = R\u039e(A) as: Bij = Aij if (i, j) \u2208 \u039e and Bij = 0 if (i, j) /\u2208 \u039e. Items and features: Let n be the number of items to be ranked. Let Sn denote the symmetric group on n items. Let each item have a d-dimensional feature vector associated with it, ie, fi \u2208 Rd,\u2200i \u2208 [n]; concatenating these, we obtain the feature matrix F = [f1, . . . , fn] \u2208 Rd\u00d7n. Link functions: Any \u03c8 : [0, 1] \u2192 R which is a strictly increasing bijective function is a valid link function. For example, \u03c8 could be the logit function, which is the inverse of the sigmoid function, defined as, \u03c8(x) := log ( x\n1\u2212x\n) for\nx \u2208 [0, 1]; another example is the probit function defined as \u03c8(x) = \u03a6\u22121(x) where \u03a6 is the standard normal CDF. When we apply the link function to a matrix, we mean that the transformation applied entry-wise.\nPreference matrices: Let Pn := {P \u2208 [0, 1]n\u00d7n|Pij + Pji = 1} denote the set of all pairwise preference matrices over n items. Let the set of stochastic-transitive matrices be PSTn := {P \u2208 Pn|Pij > 1/2, Pjk > 1/2 =\u21d2 Pik > 1/2} and the set of stochastic-intransitive matrices be PSIn := {P \u2208 Pn|Pij > 1/2, Pjk > 1/2 =\u21d2 Pik < 1/2}. Let PRUn be the set of preference matrices associated with unary random utility models (which are described in the next section). Let PIFn := {P \u2208 Pn|Pij = \u03c8\u22121(w>(fi \u2212 fj))} for some w \u2208 Rd.\nLet r \u2264 n. Define the set of preference matrices having rank-r under the link function \u03c8 as Pn (\u03c8, r) := {P \u2208 Pn| rank (\u03c8(P)) \u2264 r}. Next, define the set of preference matrices having rank-r under the link function \u03c8 with the associated feature matrix A \u2208 Rd\u00d7n as Pn (\u03c8, r,A) := {P \u2208 Pn (\u03c8, r) |\u03c8(P) = A>LA} where L \u2208 Rd\u00d7d is an unknown rank-r latent matrix (which is a function of the parameters of the ranking model) and A = [a1, . . . ,an] \u2208 Rd\u00d7n is the known feature matrix whose ith column is the feature vector corresponding to the ith item. Let \u03ba = \u03c3min(A)/\u03c3max(A) be the inverse condition number of the feature matrix A. Let i P j iff Pij > 1/2. Denoting the indicator function by 1, we define the distance between a permutation \u03c3 \u2208 Sn and a preference matrix P \u2208 Pn as:\ndist (\u03c3,P) := ( n 2 )\u22121\u2211 i<j 1 ((i P j) \u2227 (\u03c3(i) \u03c3(j)))\n+ ( n 2 )\u22121\u2211 i<j 1 ((j P i) \u2227 (\u03c3(j) \u03c3(i)))\nNote that the above distance measure essentially counts the fraction of pairs on which \u03c3 and P disagree, and can be thought of as a normalized 0\u2212 1 loss function."}, {"heading": "Feature Low Rank Model", "text": "Random Utility (RU) models, arising in discrete choice theory, dating back to (Marschak and others 1959), characterize the probability of an item i beating item j, Pij , using a prior on the (latent) score associated with those items, wi \u2208 R and wj \u2208 R. The most popular pairwise ranking models including BTL and Thurstone models fit in this framework. In particular, it is well-known that if wi \u223c Gumbel(0, 1), we obtain the BTL model; for completeness, we justify it below:\nPij = Pr(wi > wj) = Pr(wi \u2212 wj > 0) \u03be1 =\ne\u2212(wi\u2212wj)\n1 + e\u2212(wi\u2212wj)\nwhere \u03be1 follows from the fact that the difference of two independent standard Gumbel distributed random variables follows the standard logistic distribution. Similarly, if wi \u223c N (0, 1), we obtain the Thurstone model. The underlying commonality in these models is the simple observation that the prior distribution is on the scores, which are unary terms. Notably, the recent result by (Rajkumar and Agarwal 2016) shows that under the inverse transformation of the CDF of the difference of the latent score variables, the preference probability matrix is low-rank for BTL and Thurstone models. Further, they extended this result to a broader class of\nlow-rank models in which the preference matrices are lowrank when the link function is set to be this inverse CDF.\nOne angle of motivation for this paper stems from the intuitive thought that the scores associated with an item i in RU models can be generalized to functions involving, not just unary terms but also, pairwise terms, ie, the score of item i with respect to item j is given by an energy function Eij that has a bilinear form. From this point onwards, for simplicity, we detail the generalization of the RU models encompassing the BTL model, ie, we posit that Eij has a standard Gumbel distribution and consequently, we choose the link function \u03c8 to be the logit function. It is noteworthy that our results will hold under any link function for the corresponding prior.\nWe now propose the enery-based generative model, which we call Feature Low Rank (FLR) model, defined via the preference matrix specified as follows:\nPij = e\u2212Eij\ne\u2212Eij + e\u2212Eji (1)\nHere, we define the energy function associated with the pair of items (i, j) to be of the formEij := f>i w+f > i Wfj where w \u2208 Rd and W \u2208 Rd\u00d7d are the unknown latent parameters (vector and matrix parameters repectively) to be estimated, and fi and fj are the known feature vectors associated with items i and j respectively. It is clear from Equation (1) that a key advantage of the proposed model is the additional ability to incorporate side information in the form of feature vectors and feature correlations in a latent space described by W. In matrix notation,\n\u03c8(P) = (1g> + F>W>F)\u2212 (g1> + F>WF) = (\u03a3V>)>L(\u03a3V>) (2)\nwhere g := F>w is column vector in Rn, 1 \u2208 Rn is the all-ones column vector, F = U\u03a3V> is the full SVD of F (such that U \u2208 Rd\u00d7d,V \u2208 Rn\u00d7n are orthonormal matrices with \u03a3 \u2208 Rd\u00d7n as the d \u00d7 d diagonal matrix of singular values padded with zeros) and L := U>(1w> \u2212 w1> + W> \u2212W)U (such that \u03a3\u22121ii = \u03c3 \u22121 i and \u03a3 \u22121 ij = 0 if i 6= j). It is now clear that the sufficient condition for P \u2208 Pn(\u03c8, r,\u03a3V>) is that rank(L) \u2264 r. Now, we describe the generality of the FLR model in Equation (1) by showing that it subsumes many existing models and has much more expressiveness.\nProposition 1. The LR model is a special case of the FLR model, ie, Pn(\u03c8, r) \u2286 Pn(\u03c8, r,A). Corollary 1. Let F = I and \u03c8 be the logit link function. From Proposition 1, it is easy to see the following special cases from Equation (1).\n1. Let W = xy>. If w = 0, then P \u2208 Pn (\u03c8, 2). If w 6= 0, then P \u2208 Pn (\u03c8, 4). 2. If W is symmetric, then W \u2212W> = 0 and hence P \u2208 Pn (\u03c8, 2). 3. Let \u039b be a diagonal r\u00d7 r matrix; let {X,Y} \u2208 Rn\u00d7r be orthonormal matrices. If W = X\u039br\u00d7rY> + M where M is a symmetric matrix, then \u03c8(P) \u2208 Pn (\u03c8, 2r + 2).\nProposition 2. The unary RU models are special cases of the FLR model, ie, PRUn \u2286 Pn(\u03c8, r,A). Corollary 2. The BTL and Thurstone models are obtained as special cases of the FLR model under the logit and the probit transormations of P respectively. This follows from Proposition 1 (or Corollary 1-part (1)) above together with Propositions 6 and 7 of (Rajkumar and Agarwal 2016).\nProposition 3. Regression-based models with item-specific features in (Cattelan 2012) are special cases of the FLR model, ie, PIFn \u2286 Pn(\u03c8, r,A). Corollary 3. Let d n. Then we recover the blade-chest model (Chen and Joachims 2016) as a special case of the FLR model by setting rank(W) = O(d) and w = 0. Next, when d \u2265 n, it is clear from Theorem 1 of (Chen and Joachims 2016) that such preference matrices degenerate into matrices in Pn(\u03c8, n,A) where \u03c8 is the logit function. Moreover, it is easy to see that the FLR model admits both stochastic-transitive and stochastic-intransitive preference matrices.\nDue to space constraints, proofs of Propositions 1, 2 and 3 are given in the appendix. To summarize, we have shown how to instantiate several previously proposed ranking models as special cases of our FLR model in Table 1."}, {"heading": "Problem Setup and Solution Approach", "text": "Once we have the generative ranking model as developed in the previous section, the objective in our learning problem is then to find the permutation of n items that minimizes the number of violations with respect to the true underlying preference matrix P, ie, to find the best ranking \u03c3\u0302 in the sense that,\n\u03c3\u0302 = arg min \u03c3 dist(\u03c3,P)\nThe input is the pairwise comparison dataset S = {(i, j, ykij)} which consists of comparison results of pairs (i, j) from a survey involving K users where each user with index k assigns ykij = 1 if he prefers i to j and y k ij = 0 if he prefers j to i. Note that it is not necessary that all pairs of items be compared; our algorithm is able to handle noisy and incomplete data. Since the true preference matrix P is unknown, our algorithm instead proceeds by using the empirical preference matrix P\u0302 computed from the available ykij ; it is to be noted, even then, our analysis guarantees that\ndist(\u03c3\u0302,P) is good as opposed to just dist(\u03c3\u0302, P\u0302). Additionally, in our inductive setting, the feature information is encoded by fi \u2208 Rd for every item i and concatenated to form the feature matrix F \u2208 Rd\u00d7n."}, {"heading": "Algorithm", "text": "We present our main algorithm for inductive ranking in Algorithm 3. The input data consist of the set of pairwise comparison results S = {(i, j, {ykij})}, (i, j) \u2208 \u039e \u2286 [n] \u00d7 [n], k \u2208 [K], ykij \u2208 {0, 1} and the feature matrix F \u2208 Rd\u00d7n. The algorithm assumes the link function and the rank as input parameters. The subroutines used are:\n1. Noisy matrix completion with features (Subroutine 1): Note that to solve our ranking problem and derive the associated recovery guarantee, it suffices, as we have done, to use the specified trace-norm program as a black-box method; hence, we assume that we have access to an oracle that gives us the solution to the convex program. The details of how the solution to this program may be found numerically is beyond the scope of this work \u2013 for further details regarding some possible sub-gradient algorithms, we refer the reader to (Chiang, Hsieh, and Dhillon 2015) and (Ji and Ye 2009).\n2. \u03b3-approximate pairwise ranking procedure (Subroutine 2): Let \u03c3\u0302 \u2208 Sn be the output of any Pairwise Ranking (PR) procedure with respect to an underlying preference matrix P. For a constant \u03b3 > 1, \u03c3\u0302 is said to be \u03b3-approximate if dist(\u03c3\u0302,P) \u2264 \u03b3min\u03c3\u2208Sn dist(\u03c3,P). Any constant factor approximate ranking procedure maybe used. Specifically, we use the Copeland procedure (Copeland 1951) as a black-box method which has a 5-approximation guarantee (Coppersmith, Fleischer, and Rudra 2006). This method involves simply sorting the items according to a score which is computed for every item i as \u2211n j=1 1(P\u0302 ij > 1/2)."}, {"heading": "Analysis", "text": "In this section, we state and prove our main result. Theorem 1 (Guaranteed rank aggregation with sub-linear sample complexity using item features). Let P \u2208 (Pn(\u03c8, r,A)\u2229PSTn ) be the true underlying preference matrix according to which the pairwise comparison dataset S = {(i, j, {ykij})} is generated. Let \u03c8 be L-Lipschitz\nSubroutine 1 IMC: Inductive Matrix Completion Input: Mij for (i, j) \u2208 \u039e \u2286 [n]\u00d7 [n], feature matrix F. Output: Completed matrix M.\n1: Solve the convex program:\nZ\u0302 = arg min ZL \u2225\u2225R\u039e(M\u2212 F>ZLF)\u2225\u22252F s.t. \u2016ZL\u2016\u2217 \u2264 CL 2: return \u03c8(P\u0302)\u2190 F>Z\u0302F.\nSubroutine 2 PR: Pairwise Ranking (Copeland Procedure) Input: Preference matrix M \u2208 Rn\u00d7n. Output: Ranking \u03c3\u0302.\n1: Threshold: \u2200(i, j), M\u0303ij \u2190 1(Mij > 1/2). 2: Compute row-sum of M\u0303: v\u2190 M\u03031. 3: return \u03c3\u0302 \u2190 Sort(v).\nin [Pmin2 , 1 \u2212 Pmin 2 ]. Let \u039e be the set of pairs of items compared such that the number of pairs compared is |\u039e| = m > 48C 2 2d 2 log(n)(1+\u03b3)2\n\u03ba8 2\u22064 where \u039e is chosen uniformly at random from among all possible subsets of item pairs of size m. Let each pair in \u039e be compared independently K \u2265 16(1+\u03b3)mL\n2 log(n) n2\u22062 times where \u2206 =\nmini 6=j |\u03c8(Pij)\u2212 \u03c8(1/2)|. Then, with probability atleast 1 \u2212 3/n3, for any > 0, Algorithm 3 returns an estimated permutation \u03c3\u0302 such that dist(\u03c3\u0302,P) \u2264 . Remark 1. The key take-away message in Theorem 1 is the reduction in sample complexity possible due to efficient utilization of features and feature correlations, associated with the items to be ranked, by Algorithm 3. For instance, when d = O(1), which is often the case in practice, we reduce the required total number of comparisons to be made to \u2126(log(n)). Thus, we achieve a very significant gain since the total number of comparisons is poly-logarithmic as opposed to quadratic in the number of items. This is especially crucial in large-scale machine learning applications. Remark 2. Another point to be noted from Theorem 1 is that, under the uniform sampling assumption, when features associated with items are known, it is more important that we compare sufficient (precisely, \u2126(log n)) number of different pairs rather than high number of comparisons per pair. Furthermore, he total number of comparisons needed in Theorem 1 is given by the product mK which is \u2126(max(log n/ 2, d4 log3 n/ 3n2)). We now present the proof of Theorem 1. We shall prove the theorem under the Bernoulli sampling model (where each entry of an n \u00d7 n matrix is observed independently with probability 1/n2) rather than the uniform sampling model (wherein \u039e is chosen uniformly at random from among all possible subsets of item pairs of size m); the equivalence between the two is well-known (see, for instance, Section 7.1 of (Cande\u0300s et al. 2011)).\nProof. Let P\u0302ij be the empirical probability estimate of Pij . Note that we compute P\u0302ij = 1K \u2211K k=1 y k ij for (i, j) \u2208\nAlgorithm 3 IPR: Inductive Pairwise Ranking Input: Set of comparison results S = {(i, j, {ykij})}, fea-\nture matrix F, link function \u03c8, target rank r. Output: Ranking of n items, \u03c3\u0302 \u2208 Sn.\n1: Construct the partially observed empirical preference matrix using S as:\nP\u0302ij =  1 K \u2211K k=1 y k ij if (i, j) \u2208 \u039e 1 K \u2211K k=1(1\u2212 ykij) if (j, i) \u2208 \u039e\n1/2 if i = j or (i, j) /\u2208 \u039e\n2: Compute SVD of F = U\u03a3V> and set A\u2190 \u03a3V>. 3: Use a noisy inductive matrix completion subroutine: \u03c8(P\u0302)\u2190 IMC(\u03c8(P\u0302),A). 4: Take the inverse transform of the truncated r-SVD of the completed matrix estimate: Q\u2190 \u03c8\u22121(Pr(\u03c8(P\u0302))). 5: Using a pairwise ranking subroutine: \u03c3\u0302 \u2190 PR(Q). 6: return \u03c3\u0302.\n\u039e from the given pairwise comparison dataset, S = {(i, j, {ykij})}. From Equation (2), \u03c8(P) = A>LA where A = \u03a3V>. Since we use the empirical estimate for Pij , we have noise due to sampling error only over \u039e, ie, \u03c8(P\u0302) = \u03c8(P) + N = A>LA + N where\n|Nij | = { 0 if (i, j) /\u2208 \u039e\u2223\u2223\u2223\u03c8( 1K \u2211Kk=1 ykij)\u2212 \u03c8(Pij)\u2223\u2223\u2223 if (i, j) \u2208 \u039e\nNow, we solve the trace-norm regularized convex program corresponding to the noisy inductive matrix completion problem:\n{L,N} = arg min ZN,ZL \u2225\u2225\u2225R\u039e(\u03c8(P\u0302)\u2212 (A>ZLA + ZN))\u2225\u2225\u22252 F\n+ \u03bbL \u2016ZL\u2016\u2217 + \u03bbN \u2016ZN\u2016\u2217 and let \u03c8(P\u0302) = A>LA + N be the link-transformed completed (estimate) matrix where N be the estimated noise matrix. This is equivalent to solving the problem:\n{L,N} = arg min ZN,ZL \u2225\u2225\u2225R\u039e(\u03c8(P\u0302)\u2212 (A>ZLA + ZN))\u2225\u2225\u22252 F\ns.t. \u2016ZL\u2016\u2217 \u2264 CL, \u2016ZN\u2016\u2217 \u2264 CN We set CN = 0 and CL = \u2225\u2225\u2225(A>)\u2020\u03c8(P\u0302)(A)\u2020\u2225\u2225\u2225\n\u2217 which\nmay be upper bounded, by Lemma 3 of (Chiang, Hsieh, and Dhillon 2015) as CL \u2264 dC\u2032\u03ba4 for a constant C\n\u2032. We now recall Theorem 1 from (Chiang, Hsieh, and Dhillon 2015). Let \u03b4 < 1/d and A be well-conditioned, specifically, \u03ba4 \u2264 C2d for constant C2. The expected squared loss under Bernoulli sampling is bounded as, with probability at least 1\u2212 \u03b4:\u2225\u2225\u2225\u03c8(P\u0302)\u2212 \u03c8(P\u0302)\u2225\u2225\u22252\nF n2 \u2264 C1 min\n( CN \u221a log(2n)\nm ,\n\u221a CN \u221a n\nm\n)\n+ C2d\n\u03ba4\n\u221a log(2/\u03b4)\nm (3)\nwhere C1 and C2 are constants. By triangle inequality,\u2225\u2225\u2225\u03c8(P\u0302)\u2212 \u03c8(P\u0302)\u2225\u2225\u2225 F = \u2225\u2225\u2225\u03c8(P\u0302)\u2212 (\u03c8(P) + N)\u2225\u2225\u2225 F\n\u2265 \u2225\u2225\u2225\u03c8(P\u0302)\u2212 \u03c8(P)\u2225\u2225\u2225\nF \u2212 \u2016N\u2016F\nUsing CN = 0 in Equation (3), with probability at least 1\u2212 \u03b4,\n1\nn \u2225\u2225\u2225\u03c8(P\u0302)\u2212 \u03c8(P)\u2225\u2225\u2225 F \u2264 ( C2d \u03ba4 \u221a log(2/\u03b4) m )1/2 + 1 n \u2016N\u2016F\nLet K \u2265 mL 2 log(n) \u03c42 where \u03c4 = n\n\u221a\n1+\u03b3 \u2206 4 . Substituting the\nbounds for the N terms from Lemma 1 and using the union bound, with probability at least 1\u2212 \u03b4 \u2212 1/n3,\n\u2225\u2225\u2225\u03c8(P\u0302)\u2212 \u03c8(P)\u2225\u2225\u2225 F \u2264 n ( C2d \u03ba4 \u221a log(2/\u03b4) m ) 1 2 + \u03c4\n\u2264 n\n( C2d\n\u03ba4\n\u221a log(2/\u03b4)\nm\n) 1 2\n+ n\n\u221a\n1 + \u03b3\n\u2206\n4\nNow, setting m > 16C 2 2d 2 log(2/\u03b4)(1+\u03b3)2\n\u03ba8 2\u22064 and \u03b4 = 2/n 3, we obtain, with probability 1\u2212 3/n3, \u2225\u2225\u2225\u03c8(P\u0302)\u2212 \u03c8(P)\u2225\u2225\u2225\nF \u2264 n \u221a\n1+\u03b3 \u2206 2 . Then, arguments similar to the proof of Theorem\n13 of (Rajkumar and Agarwal 2016) yield our result.\nLemma 1 (Characterization of noise due to finite-sample effects). Under the conditions of Theorem 1, let m item pairs be compared such that the number of comparisons per item pair is K \u2265 mL\n2 log(n) \u03c42 . Then, with probability atleast\n1\u2212 1/n3, \u2016N\u2016F \u2264 \u03c4 . Due to space limitations, the proof of Lemma 1 is given in the appendix."}, {"heading": "Experimental Results", "text": "In this section, we conduct a systematic empirical investigation of the performance of our ranking method and justify our theoretical claim in the previous section. The goal of this study is two-fold: (a) to verify the correctness of our algorithm, and (b) to show that by using features and feature correlations, our IPR algorithm has a better sample complexity thereby improving upon the LRPR algorithm that does not take into account the available side information."}, {"heading": "Synthetic Simulations", "text": "For a given set of n = 500 items, we consider three main problem parameters: (1) m \u2013 the number of item pairs compared (Figure 1), (2)K \u2013 the number of comparisons per pair (Figure 2), (3) d \u2013 the dimensionality of features (Figure 3). We study the performance of both IPR and LRPR algorithms by varying each of the problem parameters while fixing the others. We note that by making use of side information, IPR outperforms LRPR in all the cases as shown in the sample complexity plots. All the accuracy results presented are obtained by averaging over five runs.\nData generation: We consider three representative preference matrices derived from Equation (1): (a) Model-1: we set W = 0, (b) Model-2: we construct a general W ; here, we generate Wij\u223cU(0, 1), and (c) Model-3: we construct a low-rank W, ie, rank(W) = 2 < d; here we generate Wij\u223cU(0, 1) and then truncating W by setting all but its top two singular values to zero. In all the three models, we generate wi\u223cU(0, 1). The features are generate as Fij\u223cU(0, 1); to ensure that the features are wellconditioned, we perform the full SVD of feature matrix F and set all its singular values to 1.\nParameter settings: For IPR, we choose \u03bbL = 10\u22122 and \u03bbN = 102. Note that LRPR allows for the rank of the problem to be automatically determined. In the same spirit, though Step-5 of Algorithm 3 requires the knowledge of\nthe true rank, we choose not to perform this truncation step thereby including the error induced by the smaller singular values resulting from noise due to sampling in our distance estimate \u2013 even then, IPR outperforms LRPR."}, {"heading": "Real-data Simulations", "text": "We apply our method on two popular preference learning datasets. We briefly describe the data and the results (Figure 4) we obtain below:\n1. Sushi: This data (Kamishima and Akaho 2009) is from a survey of 5000 customers. Each customer orders 10 sushi dishes according to their preferences. The goal, then, is to estimate a global ranking of these sushi dishes using these observations from customers. Each sushi has six features such as price, taste and so on. We construct the complete preference matrix P \u2208 [0, 1]10\u00d710 using the preferences of all the customers and consider this to be ground truth preference matrix. An interesting observation was that, over five runs of the algorithms, IPR gets two out of the top four sushi dishes right most of the times namely, \u2018amaebi\u2019 and \u2018ikura\u2019; on the other hand, LRPR does not succeed in recovering these always.\n2. Car: The task in this dataset (Abbasnejad et al. 2013) is find an order of preference among ten cars. This data was collected by surveying 60 customers regarding there preferences among pairs of cars drawn from the set of ten cars. Each car has four features including engine, transmission and so on. We construct the ground truth preference matrix P \u2208 [0, 1]10\u00d710 by aggregating the pairwise preferences of all the customers. An interesting trend we found was that customers generally preferred sedans over SUVs and non-hybrid vehicles over hybrid vehicles."}, {"heading": "Discussion and Future Directions", "text": "In this paper, we have proposed and characterized the FLR model together with the guaranteed IPR algorithm that utilizes available side information of the items to be ranked to provably reduce the sample complexity for ranking from \u2126(n log n) to possibly as low as \u2126(log n). A future research direction is to see if mixture models for ranking such as the recently proposed topic modeling approach (Ding, Ishwar, and Saligrama 2015) could fit into our framework while admitting sample-efficient estimation algorithms."}, {"heading": "Proof of Proposition 1", "text": "Proof. We prove this by showing that every P \u2208 Pn(\u03c8, r) is in Pn(\u03c8, r,A) but not the other way around. By the definition of a preference matrix corresponding to the LR model, if P \u2208 Pn(\u03c8, r), then rank(\u03c8(P)) \u2264 r. Similarly, for the FLR model, if P \u2208 Pn(\u03c8, r,A), then \u03c8(P) = A>LA and rank(\u03c8(P)) \u2264 r; in other words, rank(L) \u2264 r. Now setting A = I, we have Pn(\u03c8, r) = Pn(\u03c8, r,A). On the other hand, if A 6= I, we have Pn(\u03c8, r) ( Pn(\u03c8, r,A)."}, {"heading": "Proof of Proposition 2", "text": "Proof. Let w be the unary score vector in RU models. The result then follows by setting the energy function of item i with respect to item j in the FLR model to be the unary score corresponding to item i in the RU model, ie, by simply setting F = I and W = 0 which leads to Eij = wi."}, {"heading": "Proof of Proposition 3", "text": "Proof. This is immediate by setting W = 0. For concreteness, we choose \u03c8 to be the logit link function. Setting W = 0 in Equation 1, we obtain\nPij = e\u2212w\n>fi\ne\u2212w>fi + e\u2212w >fj\nObserve that \u03c8(Pij) = w>fj \u2212 w>fi. Writing this in matrix notation, \u03c8(P) = 1w>F \u2212 F>w1>. Note that \u03c8(P) \u2208 Rn\u00d7n is a rank-2 skew-symmetric matrix. Let L := (V\u03a3\u22121)>\u03c8(P)(V\u03a3\u22121) = U>(1w> \u2212 w1>)U. Now, note that L \u2208 Rd\u00d7d is also a rank-2 skew-symmetric matrix. Thus, P \u2208 Pn(logit, 2,\u03a3V>) since \u03c8(P) = (\u03a3V>)>L(\u03a3V>). In addition, note that the FLR model accounts for feature correlations when W 6= 0."}, {"heading": "Proof of Lemma 1", "text": "Proof. For any support \u039e, define the following event:\nG\u039e := (\u2223\u2223\u2223P\u0302ij \u2212 Pij\u2223\u2223\u2223 < Pmin/2 \u2200(i, j) \u2208 \u039e)\nBy Hoeffding\u2019s bound, Pr(G\u039e) \u2265 1 \u2212 12n3 whenever K \u2265 11 log(n)/P 2min. Let L be the Lipschitz constant of \u03c8 and set K \u2265 mL\n2 log(n) \u03c42 . Using the inequality that \u2016N\u2016F \u2264\n\u221a m \u2016N\u2016\u221e, we have\nPr(\u2016N\u2016F \u2265 \u03c4) \u2264 Pr ( \u2016N\u2016\u221e \u2265\n\u03c4\u221a m ) = Pr ( \u2203(i, j) \u2208 \u039e : \u2223\u2223\u2223\u03c8(P\u0302ij)\u2212 \u03c8(Pij)\u2223\u2223\u2223 \u2265 \u03c4\u221a m\n) \u2264\n\u2211 (i,j)\u2208\u039e Pr (\u2223\u2223\u2223\u03c8(P\u0302ij)\u2212 \u03c8(Pij)\u2223\u2223\u2223 \u2265 \u03c4\u221a m \u2223\u2223\u2223G\u039e)Pr(G\u039e) + Pr(Gc\u039e)\n\u2264 \u2211\n(i,j)\u2208\u039e\nPr (\u2223\u2223\u2223P\u0302ij \u2212 Pij\u2223\u2223\u2223 \u2265 \u03c4 L \u221a m \u2223\u2223\u2223G\u039e)Pr(G\u039e) + 1 2n3\n\u2264 \u2211\n(i,j)\u2208\u039e\nPr (\u2223\u2223\u2223P\u0302ij \u2212 Pij\u2223\u2223\u2223 \u2265 \u03c4 L \u221a m ) + 1 2n3\n\u2264 1 2n3 + 1 2n3 = 1 n3"}], "references": [{"title": "E", "author": ["E. Abbasnejad", "S. Sanner", "Bonilla"], "venue": "V.; Poupart, P.; et al.", "citeRegEx": "Abbasnejad et al. 2013", "shortCiteRegEx": null, "year": 2013}, {"title": "M", "author": ["R.A. Bradley", "Terry"], "venue": "E.", "citeRegEx": "Bradley and Terry 1952", "shortCiteRegEx": null, "year": 1952}, {"title": "and Recht", "author": ["E.J. Cand\u00e8s"], "venue": "B.", "citeRegEx": "Cand\u00e8s and Recht 2009", "shortCiteRegEx": null, "year": 2009}, {"title": "E", "author": ["Cand\u00e8s"], "venue": "J.; Li, X.; Ma, Y.; and Wright, J.", "citeRegEx": "Cand\u00e8s et al. 2011", "shortCiteRegEx": null, "year": 2011}, {"title": "A", "author": ["Caragiannis, I.", "Procaccia"], "venue": "D.; and Shah, N.", "citeRegEx": "Caragiannis. Procaccia. and Shah 2013", "shortCiteRegEx": null, "year": 2013}, {"title": "and Joachims", "author": ["S. Chen"], "venue": "T.", "citeRegEx": "Chen and Joachims 2016", "shortCiteRegEx": null, "year": 2016}, {"title": "I", "author": ["K.-Y. Chiang", "C.J. Hsieh", "Dhillon"], "venue": "S.", "citeRegEx": "Chiang. Hsieh. and Dhillon 2015", "shortCiteRegEx": null, "year": 2015}, {"title": "A", "author": ["Copeland"], "venue": "H.", "citeRegEx": "Copeland 1951", "shortCiteRegEx": null, "year": 1951}, {"title": "Ordering by weighted number of wins gives a good ranking for weighted tournaments", "author": ["Fleischer Coppersmith", "D. Rudra 2006] Coppersmith", "L. Fleischer", "A. Rudra"], "venue": "In Proceedings of the seventeenth annual ACM-SIAM symposium on Discrete algorithm,", "citeRegEx": "Coppersmith et al\\.,? \\Q2006\\E", "shortCiteRegEx": "Coppersmith et al\\.", "year": 2006}, {"title": "A topic modeling approach to ranking", "author": ["Ishwar Ding", "W. Saligrama 2015] Ding", "P. Ishwar", "V. Saligrama"], "venue": "In AISTATS", "citeRegEx": "Ding et al\\.,? \\Q2015\\E", "shortCiteRegEx": "Ding et al\\.", "year": 2015}, {"title": "I", "author": ["P. Jain", "Dhillon"], "venue": "S.", "citeRegEx": "Jain and Dhillon 2013", "shortCiteRegEx": null, "year": 2013}, {"title": "and Ye", "author": ["S. Ji"], "venue": "J.", "citeRegEx": "Ji and Ye 2009", "shortCiteRegEx": null, "year": 2009}, {"title": "and Akaho", "author": ["T. Kamishima"], "venue": "S.", "citeRegEx": "Kamishima and Akaho 2009", "shortCiteRegEx": null, "year": 2009}, {"title": "and Boutilier", "author": ["T. Lu"], "venue": "C.", "citeRegEx": "Lu and Boutilier 2011", "shortCiteRegEx": null, "year": 2011}, {"title": "R", "author": ["Luce"], "venue": "D.", "citeRegEx": "Luce 1959", "shortCiteRegEx": null, "year": 1959}, {"title": "Binary choice constraints on random utility indicators", "author": ["Marschak", "J others 1959] Marschak"], "venue": "Technical report,", "citeRegEx": "Marschak and Marschak,? \\Q1959\\E", "shortCiteRegEx": "Marschak and Marschak", "year": 1959}, {"title": "and Agarwal", "author": ["A. Rajkumar"], "venue": "S.", "citeRegEx": "Rajkumar and Agarwal 2016", "shortCiteRegEx": null, "year": 2016}, {"title": "L", "author": ["Thurstone"], "venue": "L.", "citeRegEx": "Thurstone 1927", "shortCiteRegEx": null, "year": 1927}, {"title": "Speedup matrix completion with side information: Application to multi-label learning", "author": ["Jin Xu", "M. Zhou 2013] Xu", "R. Jin", "Z.-H. Zhou"], "venue": "In Advances in Neural Information Processing Systems,", "citeRegEx": "Xu et al\\.,? \\Q2013\\E", "shortCiteRegEx": "Xu et al\\.", "year": 2013}], "referenceMentions": [], "year": 2017, "abstractText": "We study the problem of ranking a set of items from nonactively chosen pairwise preferences where each item has feature information with it. We propose and characterize a very broad class of preference matrices giving rise to the Feature Low Rank (FLR) model, which subsumes several models ranging from the classic Bradley\u2013Terry\u2013Luce (BTL) (Bradley and Terry 1952) and Thurstone (Thurstone 1927) models to the recently proposed blade-chest (Chen and Joachims 2016) and generic low-rank preference (Rajkumar and Agarwal 2016) models. We use the technique of matrix completion in the presence of side information to develop the Inductive Pairwise Ranking (IPR) algorithm that provably learns a good ranking under the FLR model, in a sample-efficient manner. In practice, through systematic synthetic simulations, we confirm our theoretical findings regarding improvements in the sample complexity due to the use of feature information. Moreover, on popular real-world preference learning datasets, with as less as 10% sampling of the pairwise comparisons, our method recovers a good ranking.", "creator": "LaTeX with hyperref package"}}}