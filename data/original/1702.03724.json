{"id": "1702.03724", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "13-Feb-2017", "title": "On Seeking Consensus Between Document Similarity Measures", "abstract": "This paper investigates the application of consensus clustering and meta-clustering to the set of all possible partitions of a data set. We show that when using a \"complement\" of Rand Index as a measure of cluster similarity, the total-separation partition, putting each element in a separate set, is chosen.", "histories": [["v1", "Mon, 13 Feb 2017 11:46:04 GMT  (58kb,D)", "http://arxiv.org/abs/1702.03724v1", null]], "reviews": [], "SUBJECTS": "cs.AI", "authors": ["mieczys{\\l}aw k{\\l}opotek"], "accepted": false, "id": "1702.03724"}, "pdf": {"name": "1702.03724.pdf", "metadata": {"source": "CRF", "title": "On Seeking Consensus Between Document Similarity Measures", "authors": [], "emails": ["klopotek@ipipan.waw.pl"], "sections": [{"heading": null, "text": "Index Terms\u2014 cluster analysis, partitioning, clustering, consensus functions, ensemble, knowledge reuse, unsupervised learning, meta-clustering"}, {"heading": "1 Introduction", "text": "It is a well-known phenomenon that for the same data set various clustering algorithms may produce different partitions. This is true both for objects described by continuous variables (like results of measurements) and for ones described by discrete features (like documents treated as points in term space). Consensus clustering and meta-clustering are two known techniques helping to select the best one among the competing partitions. It is also well known that by changing the geometry of the data space we may even obtain all possible partitions of the dataset.\nIn this paper we investigate which partition would be selected if we apply consensus clustering or meta-clustering to the set of all possible partitions. In particular we formulate (in Section 3) and prove (in Section 4) that, using the so-called Rand Index as a measure of partition similarity, we obtain via consensus clustering the partition putting each element in a separate set (which we will call subsequently total-separation partition) as a \u201dconsensus\u201d between these partitions. In Section 5 we discuss briefly practical lessons from this theorem. In Section 6 we demonstrate that a similar theorem can be formulated for the more realistic case where we consider only partitions containing not more\nar X\niv :1\n70 2.\n03 72\n4v 1\n[ cs\n.A I]\nclusters than a predefined threshold. In Section 7 we show experimentally that also the very same similarity measure applied in meta-clustering1 leads towards a similar choice of best partition.\nWe start with Section 2 explaining the concepts of concensus clustering and meta-clustering as well as pointing to the research on these topics. In Section 8 we summarise our findings and point to further research directions."}, {"heading": "2 Previous work", "text": "Two main types of methods for handling the grieving issue of conflicting partitions of the same set are currently under development in the literature:\n\u2022 the meta-clustering\n\u2022 the consensus clustering (called also in various brands ensemble clustering [27] or cluster aggregation [10])\nIn the meta-clustering stream it is claimed that maybe the choice of the best partition should be left to the user who should only be assisted by grouping potential partitions into groups of similar ones.To facilitate user selection of the right clustering, [5] (also compare [21, 4, 3, 7, 6]) suggests to provide the user with meta-clusters (clusters of partitions) in order that the user better understands the choices. To facilitate their creation, [5] proposes to use a dissimilarity measure that they call \u201dCluster Difference\u201d, closely related to Rand Index (which is a similarity measure) as distance measure between partitions. The sum of Rand Index and Cluster Difference is equal 1 The Rand Index (and as a consequence Cluster Difference) essentially is based on the calculation how many times elements are in the same or in different clusters. Assume that the set X to be clustered, of cardinality n consists of elements {1, 2, . . . , n}. Let the quantity Iij be equal to 1 if the elements (objects) i and j are in the same cluster of the first clustering, and different in the second one or vice versa. Otherwise, Iij is 0. Then the distance CD between the two partitions \u03931,\u03932 (Cluster Difference) is defined as\nCD(\u03931,\u03932) =\n\u2211 i,j\u2208X,i<j Iij\nn(n\u2212 1)/2 (1)\nwhere n is the number of objects in the collection. The value of CD ranges from 0 for completely identical partitions to 1 for extremely different ones. The extremes are e.g. two partitions: all-in-one (\u0393 consisting of exactly one cluster containing all elements) and total-separation (every element in a separate cluster).\n1Rand Index is frequently used in both consensus clustering and meta-clustering in search for a compromise clustering\nIf we wish to compare only partitions over the same set of elements (with cardinality n), we can use the unnormalised version of CD:\nunCD(\u03931,\u03932) = \u2211\ni,j\u2208X,i<j Iij (2)\nIn such a case the unCD between all-in-one and total-separation partitions amounts to n(n\u22121)2 . But here we encounter the problem: n objects can be divided into k clusters in O(kn) ways2. So we have to do with an NP-hard task. In consensus clustering [24] a kind of optimisation problem (combinatorial optimisation) is formulated and solved. A similarity measure between partitions is introduced and data is re-clustered to get a clustering close to the original ones. Alternatively groups of clusters are formed (a kind of meta-clustering) where the meta-clusters compete for objects performing just a re-clustering. A number of other techniques in this direction was reviewed in [11, 14, 9, 16, 22, 18, 25, 20, 28, 26]. We are particularly interested in the one initiated by [2, 13], and further studied [12] and applied [19]. This approach to consensus clustering seeks to find a new clustering that is as close as possible to all the partitions obtained. The closeness is estimated e.g. (again) as the averaged Rand Index [19].\nIt has been noticed in the past that various clustering quality indices are biased, and in particular the Rand Index which we discuss in this paper, see for example [15, 17, 8]. It has been reported that Rand Index tends to prefer smaller clusters rather than bigger ones when using it as an external cluster validity index, as for example in the study [8], which concentrated on clusterings into the same number of clusters. [8] demonstrates both theoretically and empirically, that with the increase of the number of clusters, Rand index quickly heads towards stating that compared clusterings are identical. However, in this paper we do not handle the case of clusterings into one fixed number of clusters but rather allow for any number of clusters in a partition.\n[15] demonstrates, when studying balanced partitions with different number of clusters, that this time Rand index behaves differently, thus invalidating the generalisations from [8]. The direction of the bias depends on the ground truth clustering (see Theorem 1 in [15] and further ones). The reversal of the bias was also reported from empirical studies [17]. So in fact, the bias tendency of Rand Index remains under these circumstances undecided if we do not know the ground truth partition or we do not know whether it is balanced or not. 3 Note that the paper [15] and other concentrate on the relationship between an empirical partition and the ground truth.\n2 More precisely, [1] shows that this number amounts to\n1\nk! k\u2211 j=1 (\u22121)k\u2212j ( k j ) jn (3)\n3 Note that the bias has also been studied in the context of stable level of the indicator for randomly assigned partitions under various conditions, see e.g. [23].\nHowever, a study on Rand index bias in the context of consensus clustering and meta-clustering seems not have been performed so far. In such a case, the ground truth cannot be referred to because it is not available. 4 Furthermore, the previous studies concentrate on \u201dpreferences\u201d of Rand Index without questioning the existence of ground truth. We demonstrate here that it points at a clustering even if there is no ground truth, no really discernible base clustering."}, {"heading": "3 Theorem on consensus clustering", "text": "It is well known that when we treat all possible geometries of the data set, we can obtain all possible partitions of the data set. Which one shall we choose? Under these circumstances, as we will show, consensus clustering is not useful in the selection process of the partition that is the closest to all the other ones. Because the closest partition is a partition that puts each element (object, document) into a separate cluster.\nIn particular we will prove the following\nTheorem 1. For any n objects, among all partitions the partition where each object falls into a separate cluster (called subsequently total-separation partition) has the lowest average distance to the other partitions in terms of Cluster Difference CD.\nAs we consider a fixed n, let us concentrate on the unnormalised version unCD.\nNote first one of the most serious implications of this theorem: We consider a world of all possible partitions so one might think that this world is totally symmetric, and any partition may be a centre of such a universe. But this is not the case. The distance function distinguishes one of the elements. So in fact it is biased in some way.\nThere exist plenty of other clustering quality assessment functions and a similar analysis should be performed for them.\nSo let us state beforehand that when performing a clustering task, we shall pick at random neither the clustering function, nor the distance function nor the quality assessment function because each of them is biased and we shall care whether or not each function reflects our business purposes."}, {"heading": "4 The proof", "text": "It is assumed that all the elements (objects, documents) of a set to be partitioned possess identifiers being consecutive numbers starting with 1. The proof will be performed by induction on relabelling the objects in a cyclic manner combined with narrowing the set of candidates for the closest element.\nFirst step of checking validity of the theorem (subsection 4.1) for small n = 2, 3 is trivial, but still necessary. Subsequent subsections seek to establish the\n4One may say that we use Rand Index rather as internal and not external quality measure.\ninduction step by demonstrating a special role of the so-called simple extension of a partition (to be introduced in subsection 4.2, along with the concept of reduct). The important feature here is that total-separation partition of n + 1 elements is a simple extension of total-separation partition of n elements. Furthermore, as demonstrated in subsection 4.3, distances between partitions of n + 1 elements can be derived from distances between their reducts.\nThe idea of the inductive step is as follows. First we consider all extensions of a single partition. It is shown in subsection 4.4 that on average the simple extension is the closest one to all the other extensions.\nThen in subsection 4.5 we establish, that among all extensions of one partition the simple extension is on average the closest one to all the extensions of some other partition.\nThese two facts mean that among all extensions of a partition of a set of n elements the simple extension is on average the closest one to all the partitions of a set of n+1 elemets. Hence, when looking for the consensus partition among all partitions of a set of n+1 elements we need to consider only those partitions that are simple extensions of partitions of n elements. In subsection 4.6 we prove that among these candidates (the simple extensions) the simple extension of total-separation partition of n elements, that is total-separation partition of n + 1 elements is the closest one on average. The induction proceed as follows. First we establish that the solution (the partition closest to all) is among those partitions that have the (n + 1)st element in a singleton cluster and at least 0 first elements being in singleton clusters. Then we have the inductive step: If the solution is among those partitions that have the (n + 1)st element in a singleton cluster and at least i first elements being in singleton clusters, then the solution is among those partitions that have the (n+1)st element in a singleton cluster and at least i + 1 first elements being in singleton clusters. After n inductive steps all n+ 1 elements will be in singleton clusters that is we get the total-separation partition as the solution."}, {"heading": "4.1 Cases n = 2, 3", "text": "Consider the unnormalised version of Cluster Difference. If n = 2, then there exist only two partitions: \u03931;2 = {{1}, {2}} and \u03932;2 = {{1, 2}} The unCD (as well as CD) between them equals 1. So for both the average is identical and minimal. The theorem is O.K.\nWith n=3 we get partitions\n\u2022 \u03931;3 = {{1}, {2}, {3}} (average unCD distance to other partitions 1.5, (normalised CD 0.5),\n\u2022 \u03932;3 = {{1, 3}, {2}} (average unCD distance to other partitions 1.75)\n\u2022 \u03933;3 = {{1}, {2, 3}} (average unCD distance to other partitions 1.75)\n\u2022 \u03934;3 = {{1, 2}, {3}} (average unCD distance to other partitions 1.75)\n\u2022 \u03935;3 = {{1, 2, 3}} (average unCD distance to other partitions 2.25).\nTheorem is also in this case O.K."}, {"heading": "4.2 Case n\u2192 n + 1 - reducts and extensions", "text": "Consider now what happens when we have computed the unnormalised Cluster Difference between partitions for n elements and want to compute it for n + 1 elements.\nEach partition \u0393 of n+1 elements has a unique partition \u0393\u2217 with n elements (called its reduct) from which it can be derived by adding the (n+ 1)st element to an existent cluster or by forming a new one. \u0393 on the other hand is called an extension of \u0393\u2217\nLet us introduce the concepts of extension and reduct more formally.\nDefinition 1. Let \u0393\u2217 be a partition of n elements.\n\u2022 If \u0393 is a partition of n+ 1 elements such that \u0393 = \u0393\u2217 \u222a {{n+ 1}}, then \u0393 will be called a simple extension of \u0393\u2217 (\u0393 = simpleextension(\u0393\u2217))\n\u2022 If \u0393 is a partition of n + 1 elements such that there exists a set S \u2208 \u0393\u2217 such that \u0393 = (\u0393\u2217 \u2212 {S})\u222a{S\u222a{n+ 1}}, then \u0393 will be called a complex extension of \u0393\u2217\nBoth simple extension and complex extension are extensions. In both cases \u0393\u2217 will be called a reduct of \u0393 (\u0393\u2217 = reduct(\u0393)). With allextensions(\u0393\u2217) we shall denote the set of all (simple and complex) extensions of \u0393\u2217.\nWe distinguish complex and simple extensions in order to emphasise the role of a simple extension among the extensions of a partition \u2013 on the one hand due to the simplicity of derivation of distances between extensions from the distances between their reducts (subsection 4.3), and on the other because a simple extension is closer to all the other extensions of the same partition than any complex extension, as will be shown later in Section 4.4.\nExample 1. It is easily seen, using the notation from the previous section that \u03931;3,\u03932;3,\u03933;3 are extensions of \u03931;2, while \u03934;3,\u03935;3 are extensions of \u03932;2. \u03931;3,\u03934;3 are hereby simple extensions, while \u03932;3,\u03933;3,\u03935;3 are complex extensions.\nFor another example of a reduct, simple and complex extensions see Figure 1."}, {"heading": "4.3 Distances between partitions and their reducts", "text": "So consider partitions \u03931,\u03932 of n+1 elements, being extensions of two partitions \u0393\u22171,\u0393 \u2217 2 of n elements resp. Let us denote with unCD(\u0393 \u2217 1,\u0393 \u2217 2;n) the unnormalised Cluster Difference unCD(\u0393\u22171,\u0393 \u2217 2), where the parameter n draws our attention to the fact that both partitions are defined over the set {1, ..., n}.\nNote that\nunCD(\u03931,\u03932;n + 1) = n\u2211 i=1 n+1\u2211 j=i+1 Iij (4)\n= n\u2211 i=1 n\u2211 j=i+1 Iij + n\u2211 i=1 Ii,n+1\n= n\u22121\u2211 i=1 n\u2211 j=i+1 Iij + n\u2211 i=1 Ii,n+1\n= unCD(\u0393\u22171,\u0393 \u2217 2;n) + n\u2211 i=1 Ii,n+1\nThis implies that if both \u03931,\u03932 are simple extensions of \u0393 \u2217 1,\u0393 \u2217 2 that is \u03931 = \u0393\u22171\u222a{{n+1}} and \u03932 = \u0393\u22172\u222a{{n+1}}, then the unnormalised Cluster Difference between \u03931 and \u03932 is the same as between \u0393 \u2217 1 and \u0393 \u2217 2 because both in \u03931 and \u03932 element n + 1 is separated from any other element. If \u03931 = \u0393 \u2217 1 \u222a {{n + 1}} and \u0393\u22172 \u2212 \u03932 = {S2} where S2 is not empty, then unCD(\u03931,\u03932;n + 1) = unCD(\u0393 \u2217 1,\u0393 \u2217 2;n) + card(S2).\nIf \u0393\u22171 \u2212 \u03931 = {S1} and \u0393\u22172 \u2212 \u03932 = {S2} where S1, S2 are both not empty, then the distance unCD(\u03931,\u03932;n + 1) = unCD(\u0393 \u2217 1,\u0393 \u2217 2;n) + card(S2 \u2212 S1) +\ncard(S1 \u2212 S2)."}, {"heading": "4.4 Centricity of a simple extension among all extensions", "text": "In this proof extensions of a partition play a very special role, because they constitute units for which properties of cumulative distances can be derived in closed form. In particular we show in this subsection that among the extensions of a partition the simple extension is the closest one to all the other extensions. In the next subsection we will demonstrate a similar property between the extensions of two different partitions. The formulas of this subsection are in fact special cases of those in the next subsection, but we believe that by separation of these cases the derivations will be easier to understand.\nLet us now consider all extensions with n+ 1 elements of a partition \u0393\u2217 of n elements. Let \u0393\u2217 contain k clusters S1, ..., Sk. \u03930 be the simple extension and \u0393l be a complex extension containing the cluster Sl \u222a {n + 1}.\nLet us compute the sum of distances of simple extension to all the other extensions.\nk\u2211 l=1 unCD(\u03930,\u0393l) = k\u2211 l=1 card(Sl) = n (5)\nLet us derive the formula for the sum of distances of a complex extension \u0393l\u2032 to all the other extensions (remember that clusters of a partition are disjoint, S0 be an empty set).\nk\u2211 l=0,l 6=l\u2032 unCD(\u0393l,\u0393l\u2032) = k\u2211 l=0,l 6=l\u2032 (card (Sl \u2212 Sl\u2032) + card (Sl\u2032 \u2212 Sl))\n= k\u2211 l=0,l 6=l\u2032 (card (Sl) + card (Sl\u2032))\n= k \u00b7 card (Sl\u2032) + (n\u2212 card (Sl\u2032)) = (k \u2212 1) \u00b7 card (Sl\u2032) + n \u2265 n (6)\nObviously, as the cardinality of the set of extensions is fixed, the simple extension has the lowest average distance to other extensions among extensions of the same reduct.\nExample 2. Consider the partition \u0393\u2217 = {{1, 3}{2}} and its extensions. The sums of distances of each of them to all the other are: 5 for {{1, 3, 4}{2}}, 4 for {{1, 3}{2, 4}}, 3 for {{1, 3}{2}{4}}. The last one is the simple extension and has the lowest sum of distances."}, {"heading": "4.5 Distance from a simple and a complex extension", "text": "Let us now consider a simple extension \u03930 and a complex one \u0393m, m > 0 having the same reduct \u0393\u2217 and all the partitions \u0393\u2032l with a different common reduct \u0393\u2217\u2032. Assume that both \u0393\u2217 and \u0393\u2217\u2032 are partitions over the set {1, ..., n}.\nLet \u0393\u2217\u2032 contain k clusters S\u20321, ..., S \u2032 k. \u03930 be the simple extension and \u0393l be a complex extension containing the cluster Sl \u222a {n + 1}. Sl defined as previously Let us calculate the sum of distances of simple extension \u03930 to all the extensions of \u0393\u2217\u2032.\nk\u2211 l=0 unCD(\u03930,\u0393 \u2032 l) = k\u2211 l=0 ( unCD (\u0393\u2217,\u0393\u2217\u2032;n) + card (S\u2032l) ) = n +\nk\u2211 l=0 unCD(\u0393\u2217,\u0393\u2217\u2032;n)\n= n + (k + 1)unCD(\u0393\u2217,\u0393\u2217\u2032;n) (7)\nLet us determine the sum of distances of complex extension \u0393m to all the extensions of \u0393\u2217\u2032. k\u2211 l=0 unCD(\u0393m,\u0393 \u2032 l) = k\u2211 l=0 (unCD (\u0393\u2217,\u0393\u2217\u2032;n) + card (Sm \u2212 S\u2032l) + card (S\u2032l \u2212 Sm))\n= k\u2211 l=0 (unCD (\u0393\u2217,\u0393\u2217\u2032;n) + card (Sm)\u2212 card (Sm \u2229 S\u2032l) +card (S\u2032l)\u2212 card (S\u2032l \u2229 Sm))\n= k\u2211 l=0 unCD(\u0393\u2217,\u0393\u2217\u2032;n) + (k + 1) \u00b7 card(Sm) + n\n\u2212 k\u2211\nl=0\ncard(Sm \u2229 S\u2032l)\u2212 k\u2211\nl=0\ncard(S\u2032l \u2229 Sm)\n= (k + 1)unCD (\u0393\u2217,\u0393\u2217\u2032;n) + (k + 1) \u00b7 card (Sm) + n \u2212 card (Sm)\u2212 card (Sm) = (k + 1)unCD(\u0393\u2217,\u0393\u2217\u2032;n) + (k \u2212 1) \u00b7 card(Sm) + n \u2265 (k + 1)unCD(\u0393\u2217,\u0393\u2217\u2032;n) + n (8)\nObviously, as the number of elements in the set of extensions is fixed, the simple extension of \u0393\u2217 has the lowest average distance to those extensions of \u0393\u2217\u2032 among extensions of the \u0393\u2217.\nExample 3. Consider the partitions \u0393 = allextensions({{1, 3}{2}}) and let \u0393\u2032 = allextensions({{1, 2}{3}}). Let us compute for each partition from the set \u0393 the sum of distances to all partitions from \u0393\u2032. We obtain: 11 for {{1, 3, 4}{2}}, 10 for {{1, 3}{2, 4}}, 9 for {{1, 3}{2}{4}}. The last partition is the simple extension and has the lowest sum of distances.\nTherefore we can conclude that if among the extensions of \u0393\u2217 there exists a partition that is on average the closest one to any other partition, then this partition is for sure the simple extension of \u0393\u2217."}, {"heading": "4.6 The partition closest to all the others", "text": "So we can summarize sections 4.4 and 4.5 as follows:\nLemma 1. A partition of n + 1 elements closest (on average) to all the other partitions is among the simple extensions of all the partitions of n elements.\nWe can strengthen Lemma 1 by stating:\nLemma 2. If among extensions of partitions of n elements in the set \u0393 there is a partition of n + 1 elements closest (on average) to all the other partitions of n + 1 elements, then such a partition exists among simple extensions of \u0393.\nNow we are ready to prove by induction that the total-separation partition is the closest on average to all partitions.\nOur working hypothesis is as follow: For any i = 0, ..., n, the solution of the problem of finding the partition of n + 1 elements closest on average to all the possible partitions of the same set is contained in the set Ci of such partitions for which the (n + 1)st element constitutes a singleton in this partition (a cluster with one element only) and the elements 1, 2, ..., i constitute also singletons. Obviously, if i = n\u22121, then the set containing the solution contains one element only that is the total-separation partition (if all elements but n are singletons, then also n is).\nLet us first establish the validity of the claim for i = 0. Let \u0393A(n) denote the set of all partitions of n elements. Lemma 1 states that a partition closest on average to all partitions in \u0393A(n+1) is among simple extensions of \u0393A(n). So this is exactly the set of candidates for the on average closest elements denoted previously as C0. So initially C0 = simpleextension(\u0393A(n)), where simpleextension() is a function producing simple extensions of partitions.\nNext we shall prove the inductive step. That is that if Ci contains the solution then Ci+1 contains also the solution. For this purpose consider the operation of re-labelling elements of partitions. If \u0393 is a partition, then relabel(\u0393) is a partition obtained by changing an identifier i of an element to i+1 except for the element with the highest identifier n+1 that will be turned to 1. It is obvious that unCD (\u03931,\u03932) = unCD (relabel (\u03931) , relabel (\u03932)). It is also obvious that relabel(\u0393A(n+1)) = \u0393A(n+1), though in general relabel(Ci) 6= Ci. However, an element closest on average to each element of \u0393A(n+1) is among relabel (Ci). But note that simpleextension (reduct (relabel (Ci))) \u2286 relabel (Ci) (as we consider n \u2265 3). Therefore according to Lemma 2 we can obtain a new candidate set by the operation Ci+1 := simpleextension (reduct (relabel (Ci))). This is because in relabel (Ci) in each partition elements 1, ..., i + 1 are singletons, as 1, ..., i were singletons in Ci as well as n+1 and now via relabeling they became 2, ..., i+1 and 1 respectively. The operation simpleextension (reduct ()) eliminates everything from relabel (Ci) except for simple extensions which have n + 1 as singletons. This proves the validity of the induction step. Obviously, the set of candidates will be reduced in this way.\nBy induction our claim is valid. Theorem 1 is proven.\nExample 4. Consider the set\n\u0393A(4) ={{{1, 2, 3, 4}} , {{1, 2, 3}{4}} , {{1, 2, 4}{3}} , {{1, 2}{3, 4}} , {{1, 2}{3}{4}} , {{1, 3, 4}{2}} , {{1, 3}{2, 4}} , {{1, 3}{2}{4}} , {{1, 4}{2, 3}} , {{1}{2, 3, 4}} , {{1}{2, 3}{4}} , {{1, 4}{2}{3}} , {{1}{2, 4}{3}} , {{1}{2}{3, 4}} , {{1}{2}{3}{4}}}\nThe set of candidates C0, being the simple extensions among the above, is\nC0 ={{{1, 2, 3}{4}} , {{1, 2}{3}{4}} , {{1, 3}{2}{4}} , {{1}{2, 3}{4}} , {{1}{2}{3}{4}}}\nrelabel(C0) changes it to\nrelabel(C0) ={{{1}{2, 3, 4}} , {{1}{2, 3}{4}} , {{1}{2, 4}{3}} , {{1}{2}{3, 4}} , {{1}{2}{3}{4}}}\nThe transformation to C1 yields C1 = {{{1}{2, 3}{4}} , {{1}{2}{3}{4}}}. The transformation to C2 yields C2 = {{{1}{2}{3}{4}}}."}, {"heading": "5 Practical implications", "text": "At the first glance Theorem 1 may seem to be trivial, useless, unrealistic and impractical. Trivial because it may appear to be obvious that a total-separation partition is closest to all the other partitions. Useless because nobody is interested in obtaining a consensus in terms of a total-separation partition. Unrealistic because the space of all possible clusterings is so immense, that for real world sample sizes one would never run so many clustering algorithms as to fill the whole partition universe. Impractical because one usually restricts the number of clusters k in a partition by an upper bound (much) lower than the number of elements n.\nIn order to demonstrate that these intuitions are wrong, we performed a series of simulation experiments results of which are summarized in Tables 1 (sampling the universe, no structure in the underlying data assumed ), 2 (sampling the universe with a modified partition dissimilarity measure, no structure in the underlying data assumed ), 3 (sampling a subuniverse where the presence of a simple structure in the data is assumed), and further ones, discussed in the next section.\nWith the experiments, we address the following questions:\n\u2022 Does the bias of Rand index to choose the total-separation partition as consensus for the whole universe of partitions persist if we consider only a uniform random sample from this universe?\n\u2022 Is this bias a general property of cluster quality indices or is it specific to Rand index?\n\u2022 Does the bias of Rand index to choose the total-separation partition pertain if there is a structure in the partitions for which a consensus is sought?\nWhile these questions are addressed in the current section, we pose them again in the next section in the context of constraining the set of partitions to those with an upper bound on the number of partitions.\nRecall that consensus clustering uses Cluster Difference (derived from Rand Index) as a measure of distance between partitions in order to identify the consensus partition. We have already demonstrated theoretically, that if the set of our clustering algorithms would yield all possible partitions, then Rand index would pick up the total-separation partition. But of course the space of all partitions is too large so that we will never get all possible partitions. Nonetheless by manipulating clustering algorithm parameters in an irresponsible way we can obtain a random sample from this universe. In fact it is quite easy to invent clustering algorithms delivering for the same set of data any clustering we want. This section simulates such a situation and shows experimentally what the outcome of consensus clustering will be questionable also in such a case. See comments on experiments in tables 1 and 2 below. This suggests that the user exploiting the technology of consensus clustering must at least have an approximate vision of the geometry of the data space and parametrise clustering algorithms in a way not disturbing this geometry. Only in this case the consensus clustering may be helpful in the choice of appropriate compromise clustering. See the comments below on comparison of tables 1 and 3.\nThe experiments consisted in drawing 1,000 samples from the partition universe for each parameter setting (characterised by columns 1-4) and computed results are presented in column 5 (eventually column 6). So for example in Table 1 in the second data row we have the information, that samples were drawn from the universe of partitions over 4 elements, that the number of possible partitions is 15, out of them samples of 8 partitions were drawn which were intended to be 50% of the sample space, and the evaluation result was 88.2%.\nThe experiment underlying Table 1 was devised to find out how often the total-separation partition will turn out to be the consensus partition for a uniformly randomly drawn sample of partitions. The results are visible in column 5.\nThe experiment underlying Table 2 was essentially the same as the previous one, but instead of dissimilarity measure unCD its modification unCDm(a, b) = unCD10(a, b)= (unCD(a, b)) 10\nwas used. Again the total-separation partition occurrence as consensus partition was counted. The results are visible in column 5.\nThe experiment underlying Table 3 differs from the previous two in that not the whole universe of partitions of n elements was considered, but only those partitions for which there exists a \u201dstructure\u201d that is where elements 1, 3 occur always in the same cluster. Here unCD was used as distance measure as in Table 1. The 5th column counts the number of occurrences of total-separation cluster as consensus, while the 6th column tells how frequently the expected partition (where all elements are singletons except for elements 1 and 3 that\nconstitute one cluster) is discovered as consensus partition. Comparing Tables 1 and 2 (rows where the 3rd column contains 100% entry) we see first of all that the result of the Theorem 1 is far from being trivial. Totalseparation partition does not need to be the default choice for a consensus of the entire universe of possible partitions. A skilled choice of dissimilarity function may point at any partition. It is the particular property of Rand Index (Cluster Difference) that distinguishes total-separation partition. So one can say that Rand Index is biased towards total-separation partition in case of no pattern in the data. This property seems to be vital and has never been reported in the context of consensus clustering. An investigation of other measures with respect to their behaviour under missing structure should be carried out.\nLet us compare column 5 of tables 1 and 3. In table 1 we simulated the case that there was no intrinsic structure behind the data, so that the partitions obtained from various algorithms just provide random samples from the universe of all possible partitions. We count how frequently the total-separation partition will occur as the consensus between the diverse partitions. It turns out that it happens quite often even if we have small sets of partitions. In table 3 on the other hand such a situation never happens. Furthermore, in column 6 of this table one can see that the centre of the set of clusters exhibiting the assumed structure occurs quite often as the consensus in this experiment. So non-occurring of total-separation partition as a consensus under a sufficiently large set of competing partitions can be considered as a good indicator of existence of some structure in the data. So the ability of a consensus clustering algorithm to provide total-separation partition as the consensus is a very useful property because it allows us to discern between a meaningful and meaningless set of outcomes of diverse clustering algorithms.\nThe Theorem 1 provides us with an important insight into the partition space because the indicated behaviours are observed not only in the whole universe, but also in sufficiently big samples. Hence the distance of the actual consensus from the total-separation partition is an important indicator of the actual structure in the data. Enforcing exclusion of total-separation partition from consensus seeking algorithm is not a wise decision. So the result is very practical.\nLet us also stress that for too small sample sizes one can get impression of existence of a structure in the data even if there is none. Hence in practice one should verify the validity of the consensus in the application domain.\nWe will postpone the discussion of the restriction of the number of clusters k in a partition by an upper bound to the next section as it requires some additional theoretical discussion.\nIn summary, the experiments allow to answer the posed questions as follows:\n\u2022 The bias of Rand index to choose the total-separation partition as consensus for the whole universe of partitions persists if we consider only a uniform random sample from this universe?\n\u2022 This bias is not a general property of cluster quality indices and the direction of the bias should be investigated separately for other cluster quality\nindices.\n\u2022 Rand index behaves differently if there is a structure in the partitions for which a consensus is sought."}, {"heading": "6 Imposing a limit on the number of clusters to", "text": "be considered\nPartitions explored practically in the case of consensus clustering always contain much fewer clusters compared to the size of the set of objects (k << n). The question is: would a limitation on the number of clusters k < kmax change anything with respect to the previous results?\nNote that for a partition consisting of k sets each of its complex extensions contains also k sets, but the simple extension contains k + 1 sets. Therefore, as long as k < kmax, nothing changes in the discussion of sections 4.4 and 4.5. But for k = kmax, we need to update equations (6), (7) and (8), because we will no longer consider (hence count) distances to the simple extensions. So the equation (6) has to be substituted by\nk\u2211 l=1,l 6=l\u2032 unCD(\u0393l,\u0393l\u2032) = k\u2211 l=1,l 6=l\u2032 (card (Sl \u2212 Sl\u2032) + card (Sl\u2032 \u2212 Sl))\n= k\u2211 l=1,l 6=l\u2032 (card (Sl) + card (Sl\u2032))\n= (k \u2212 1) \u00b7 card (Sl\u2032) + (n\u2212 card (Sl\u2032)) = (k \u2212 2) \u00b7 card (Sl\u2032) + n \u2265 n (9)\nwhich holds of course only if kmax > 1, which is rather a non-restrictive assumption.\nThe equation (7) has to be substituted by\nk\u2211 l=1 unCD(\u03930,\u0393 \u2032 l) = k\u2211 l=1 ( unCD (\u0393\u2217,\u0393\u2217\u2032;n) + card (S\u2032l) ) = n +\nk\u2211 l=1 unCD(\u0393\u2217,\u0393\u2217\u2032;n)\n= n + k \u00b7 unCD(\u0393\u2217,\u0393\u2217\u2032;n) (10)\nThe equation (8) has to be substituted by\nk\u2211 l=1 unCD(\u0393m,\u0393 \u2032 l) = k\u2211 l=1 (unCD (\u0393\u2217,\u0393\u2217\u2032;n) + card (Sm \u2212 S\u2032l) + card (S\u2032l \u2212 Sm))\n= k\u2211 l=1 (unCD (\u0393\u2217,\u0393\u2217\u2032;n) + card (Sm)\u2212 card (Sm \u2229 S\u2032l) +card (S\u2032l)\u2212 card (S\u2032l \u2229 Sm))\n= k\u2211 l=1 unCD(\u0393\u2217,\u0393\u2217\u2032;n) + k \u00b7 card(Sm) + n\n\u2212 k\u2211\nl=1\ncard(Sm \u2229 S\u2032l)\u2212 k\u2211\nl=1\ncard(S\u2032l \u2229 Sm)\n= k \u00b7 unCD (\u0393\u2217,\u0393\u2217\u2032;n) + k \u00b7 card (Sm) + n \u2212 card (Sm)\u2212 card (Sm) = k \u00b7 unCD(\u0393\u2217,\u0393\u2217\u2032;n) + (k \u2212 2) \u00b7 card(Sm) + n \u2265 k \u00b7 unCD(\u0393\u2217,\u0393\u2217\u2032;n) + n (11)\nwhich is again valid under kmax > 1. Hence lemmas 1 and 2 retain their validity for the restricting kmax and hence the reasoning presented in section 4.6. So the following theorem holds:\nTheorem 2. For any n objects, among all partitions the partition where each object falls into a separate cluster (called subsequently total-separation partition) has the lowest average Cluster Difference CD to the other partitions consisting of at most kmax > 1 clusters.\nBut of course the limitation of the number of clusters still leaves a huge space of possible partitions of the set of elements. So let us return to the discussion of sampling this space.\nExperiments analogous to those of previous section have been performed and are summarized in Table 4. Random samples from the space of permissable clusterings (with k < kmax ) were drawn and the suitability of total-separation partition as consensus cluster was checked. A similar pattern to table 1 was observed \u2013 with sufficiently large samples total-separation partition indicates that there is no real relationship underlying the various clusterings.\nThe question can be raised: Can it really be so bad that modern day clustering techniques would provide a clustering when no clusters are there in the data. Vast majority of clustering algorithms produce partitions whatever data they get. We can just point at k-means algorithm, but others, like DBSCAN, single-link etc. could be used. Imagine a large collection of data points in a high-dimensional space. Furthermore imagine the points are randomly uniformly distributed in space. Imagine that in order to perform k-means clustering\nefficiently, samples from this collection are drawn and k-means algorithm is performed on each of them. As k-means always clusters the entire space (computes centroids), we would have in fact a random sample of partitions from this universe. Now let the many partitions be processed by consensus clustering using Rand Index. A consensus partition will be undoubtedly found. The lesson from our theorem will be that it should converge towards total-separation partition.\nBut we can face also another serious real problem. Assume that we have a data set with an underlying structure (say with two dense areas separated by empty space), but located in a highly dimensional space. k-means algorithm has the known property of being k-rich that is upon proper transformation of distances between data points ANY clustering consisting of k clusters may be obtained. And upon applying various clustering algorithms indeed distances are transformed, e.g. by standardization, normalization, spectral transformations etc. This means, however, that upon irresponsible choice of distance transformations we may sample from the universe of all possible partitions in spite of the fact that the data has originally a structure. And here again, as a result of consensus clustering, we can get total-separation partition, which would be really bothering. So any transformation we apply to the data as an element of the clustering process must not violate the geometrical structure of the data space we expect to see.\nSo whether or not we restrict ourselves to an upper limit of clusters in a partition, same answers are to be given to our questions driving the experiments. So either we have to live with the risk that a consensus clustering returns us a meaningless consensus or have to further develop these consensus methods so that they are able to refuse to return a partition if no real structure in the data\nexists."}, {"heading": "7 Remarks on meta-clustering", "text": "The formulas derived in the preceding sections shed also some light on possible outcome of meta-clustering. It is obvious that assuming a sufficiently \u201dlarge\u201d number of clusters, the simple extensions will be cluster centres and clusters will consist of extensions of the same reduct.\nLet us introduce the concept of p-th order reduct and p-th order extension. If \u0393\u2217 is a reduct of \u0393, then it is the 1st order reduct of \u0393, and \u0393 is the 1st order extension of \u0393\u2217. If it is a simple extension, then it is the 1st order simple extension. If \u0393+ is a p-th order reduct of \u0393\u2217 and \u0393\u2217 is a reduct of \u0393, then \u0393+ is the (p+1)st order reduct of \u0393 and \u0393 is the (p+1)st order extension of \u0393+. If at the same time \u0393\u2217 is a p-th order simple extension of \u0393+ and \u0393 is a simple extension of \u0393\u2217, then \u0393 is the (p+1)st order simple reduct of \u0393+. Otherwise \u0393 is its complex extension.\nWith the above definition let us arrange a hierarchical clustering, where the p-th level (from the bottom) consists of clusters with common p-th degree reduct. In this case it is easy to see from Theorem 1 that the cluster centres would be p-th degree simple extensions of the respective reduct, around which the cluster is defined. This hierarchy would be a local minimum for the combined distance of elements from their cluster centres at respective levels (each element of a cluster is closer to its own cluster centre than to any other cluster centre). One can in fact check that at the top level of such a hierarchy moving any object between classes is not possible.\nLet us demonstrate it by considering two meta-cluster centres over the set of partitions of n elements: \u03930 being total-separation partition and \u03931 in which elements 1, 2 are in one cluster and the others in separate clusters. Consider now a partition \u0393q in which elements 1 and 2 are in separate clusters, and no assumption with respect to other is done.\nunCD(\u03930,\u0393q) = I12/0q + n\u2211 j=3 I1j/0q + n\u2211 j=3 I2j/0q + n\u22121\u2211 i=3 n\u2211 j=i+1 Iij/0q\nunCD(\u03931,\u0393q) = I12/1q + n\u2211 j=3 I1j/1q + n\u2211 j=3 I2j/1q + n\u22121\u2211 i=3 n\u2211 j=i+1 Iij/1q (12)\nwhere Ijk/lm means indicator of membership of element j, k in same cluster in one of partitions \u0393l,\u0393m and in different in the other. It is easily checked that \u2211n j=3 I1j/0p = \u2211n j=3 I1j/1p, \u2211n j=3 I2j/1p = \u2211n j=3 I2j/1p and\u2211n\u22121\ni=3 \u2211n j=i+1 Iij/0p = \u2211n\u22121 i=3 \u2211n j=i+1 Iij/1p. The only difference is I12/1q equal to one and I12/0q equal to zero. \u0393q is closer to \u03930 than to \u03931, as expected. If on the other hand both 1 and 2 would be in the same cluster in \u0393q, the situation would be inversed.\nLet us consider more detailed levels of meta-clustering, that is let \u03930 and \u03931 be pth simple extensions of \u0393\u22170 and \u0393 \u2217 1 (over same set of elements) resp. and let \u0393q be pth extension of \u0393 \u2217 0.\nunCD(\u03930,\u0393q) = n\u2212p\u2211 i=1 n\u2212p\u2211 j=i+1 Iij/0q + n\u2212p\u2211 i=1 n\u2211 j=n\u2212p+1 Iij/0q + n\u22121\u2211 i=n\u2212p+1 n\u2211 j=i+1 Iij/0q\nunCD(\u03931,\u0393q) = n\u2212p\u2211 i=1 n\u2212p\u2211 j=i+1 Iij/1q + n\u2212p\u2211 i=1 n\u2211 j=n\u2212p+1 Iij/1q + n\u22121\u2211 i=n\u2212p+1 n\u2211 j=i+1 Iij/1q\n(13)\nAgain obviously \u2211n\u2212p\ni=1 \u2211n j=n\u2212p+1 Iij/0q =\n\u2211n\u2212p i=1 \u2211n j=n\u2212p+1 Iij/1q,\u2211n\u22121\ni=n\u2212p+1 \u2211n j=i+1 Iij/0q = \u2211n\u22121 i=n\u2212p+1 \u2211n\nj=i+1 Iij/1q, so that again\u2211n\u2212p i=1 \u2211n\u2212p j=i+1 Iij/0q = 0 (as both \u03930 and \u0393q have the same reduct) and\u2211n\u2212p\ni=1 \u2211n\u2212p j=i+1 Iij/1q > 0 make the difference. One concludes that if the meta-clustering is a hierarchical one and the clusters are build around same reducts then the clusters at each hierarchy level are stable.\nHence it is obvious that also meta-clustering is biased - there exists a structure in spite of filling in the whole sample space.\nThe above meta-clustering \u201dalgorithm\u201d was pretty much manual. One can ask whether or not other algorithms will exhibit the same tendency. In particular if it turns out that the total-separation partition is chosen as centre of any of the meta-clusters.\nLet us try out k-medoids clustering, implemented in R as pam algorithm and the popular k-means algorithm as meta-clustering methods. For this purpose let us span a (n \u2212 1) \u00b7 n/2 dimensional space for partitions of n elements. For a partition \u0393, for 1 \u2264 i < j \u2264 n the (j \u2212 1) \u00b7 (j \u2212 2)/2 + i-th coordinate in this space would be equal to 1 if both elements i, j belong to the same cluster and equal to 0 otherwise. It is easily seen that unCD is the taxicab-distance between partitions in this space or the square of Euclidean distance, making it reasonable to apply e.g. k-means algorithm. Let us have a look at the metaclusters generated using k-means and pam algorithm (as implemented in R system) under this representation.\nFor a set of 4 elements, k-means algorithm with k = 2 splits the set of all partitions into the meta-clusters: Meta-cluster 1 with minimal distance to meta-cluster centre 1.5 containing 10 partitions: {{1, 2, 4}{3}}, {1, 2}{3, 4}}, {{1, 2}{3}{4}}, {{1, 4}{2, 3}}, {{1}{2, 3, 4}}, {{1}{2, 3}{4}}, {{1, 4}{2}{3}}, {{1}{2, 4}{3}},\n{{1}{2}{3, 4}}, {{1}{2}{3}{4}}. The last one is the closest point to centroid of this meta-cluster. Meta-cluster 2 with minimal distance to meta-cluster centre 2 containing 5 partitions: {{1, 2, 3, 4}}, {{1, 2, 3}{4}}, {{1, 3, 4}{2}}, {{1, 3}{2, 4}}, {{1, 3}{2}{4}} The last one is the closest point to centroid of this meta-cluster.\nOn the other hand, the pam algorithm with split parameter set to 2 creates a meta-cluster consisting of partitions {{1, 2, 3, 4}} and {{1}{2, 3, 4}}, while the other meta-cluster contains all the other partitions, with {{1}{2}{3}{4}} (total-separation partition) being the medoid.\nFor 5 elements k-means provides two meta-clusters: meta-cluster 1 minimum distance to meta-cluster centroid equal 2.432 and of card. 37 with element closest to the centroid {{1}{2}{3}{4}{5}} and a meta-cluster 2 (min. dist. 3 card. 15) with element closest to the centroid {{1, 2}{3}{4}{5}}.\nThe two meta-clusters returned by pam have cardinality 6 with medoid {{1, 2, 3, 4, 5}} and card. 46 with medoid {{1, 2}{3}{4}{5}}. Here, totalseparation partition was not selected, but still is among the candidates.\nFor 6 elements k-means creates one meta-cluster of card. 156 with the total-separation partition being the closest one to the centroid, while the other meta-cluster of card. 47 has 25 elements with minimal distance of 7.40 from the centroid.\npam provides two meta-clusters of card. 52 and 151 with medoids {{1}{2}{3}{4}{5, 6}} and total-separation one resp.\nFor 7 elements k-means returns a meta-cluster of card. 582 with the totalseparation partition being the closest one (dist. 3.463) to the centroid, and another meta-cluster of card. 295 105 elements closest to the centroid (dist. 9.264406)\npam provides two meta-clusters of card. 203 and 674 with medoids {{1}{2}{3}{4}{5}{6, 7}} and total-separation one resp.\nFor 8 elements in k-means we have one meta-cluster of card. 2570 with the total-separation partition being the closest one to the centroid (dist. 4.21), while the other meta-cluster of card. 1570 has 700 elements with minimal distance of 11.37 from the centroid.\npam provides two meta-clusters of card. 877 and 3263 with medoids {{1}{2}{3}{4}{5}{6}{7, 8}} and total-separation one resp.\nFor k-means it should be underlined that the distance between cluster centres does not exceed 1 in any of the above cases.\nIt is worth noting that the meta-cluster around the total-separation partition is the larger one. In fact, with k-means for 8 elements if k grows even to 100, this meta-cluster (with total-separation partition) is the largest one. The percentage of variance explained (betweenness/ totals) is however low. With\nk=2 3% is explained, with k=20 26% is explained, with k=50 41% is explained, with k=100 54%, with k=150 60%, with k=200 64%.\nWe also see in these experiments that split into two classes as performed by pam is in agreement with our claim that p-th order simple extensions will become meta-cluster centres. This is even true for k-means with the total separation partition.\nA comment on the difference between pam and k-means results seems to be required. First of all we made here a trick of pressing the distances between partitions into a vector space. This should not affect pam algorithm as the distances in this space are the same as the original space, but it may be a little bit confusing for k-means which actually uses the square roots of the original distances. Furthermore, the dense partition space was replaced by a sparse vector space. This leads k-means to explore places in this space (as centroids) that also not have a clear interpretation. Possibly one could investigate a kind of fuzzification here in order to have an insight into what the centroid may mean. This may be a future research path.\nFinally, let us have a look at the performance of pam when we do not (meta)cluster the universe of all possible partitions, but only random samples from it. We check again if the total-separation partition is among the candidates. We have, however, one difference here compared to the settings of experiments in Section 5. As pam seeks for medoids, total-separation partition must be among the partitions to be meta-clustered, so we enforce selecting it when randomly sampling. Table 5 shows the behaviour of pam when the samples are uniformly drawn from the universe of partitions. Total-separation partition is the dominating option for medoid of at least one of two meta-clusters, that pam is requested to generate. Table 6 shows the behaviour of pam when we draw the samples from the sub-universe with a structure as done in Table 3. Here, for sufficiently large random samples the total-separation partition, though present in each sample, is rarely chosen."}, {"heading": "8 Conclusions and future work", "text": "As the number of available clustering algorithms applicable to the same data is growing, and the potential outputs may differ substantially, methodologies to reconcile them like meta-clustering or consensus clustering are under development.\nIn this paper we demonstrated that both consensus clustering and metaclustering using Cluster Difference (derived from Rand Index) as a measure of distance between partitions, when applied to the universe of all possible partitions, point to the partition containing each element in a separate set as the best compromise.\nThis suggests that the user performing the task of clustering must at least have an approximate vision of the geometry of the data space. Only in this case the mentioned techniques may be helpful in the choice of appropriate compromise clustering.\nIt seems also worth investigating, how other cluster quality functions used as distances between partitions would behave under consensus clustering of the space of all possible partitions.\nIt seems also worth investigating how such measures would behave not in the full universe of all partitions but rather for uniform random samples of it. Such a sampling would then constitute a background for investigations into the behaviour of other partition comparison indexes, of consensus and metaclustering methods as well as for checking if a resultant consensus-partition or meta-cluster really gives a new insight or is just a random artefact."}, {"heading": "Acknowledgements", "text": "The author wishes to thank to the Institute of Computer Science of Polish Academy of Sciences for promoting and financing this research."}], "references": [{"title": "Cluster Analysis for Applications", "author": ["M. Anderberg"], "venue": null, "citeRegEx": "1", "shortCiteRegEx": "1", "year": 1973}, {"title": "The median procedure for partition, Partitioning Data Sets (I", "author": ["Barthelemy", "J.-P", "B. Leclerc"], "venue": "C. et al, Ed.), AMS DIMACS Series in Discrete Mathematics,", "citeRegEx": "2", "shortCiteRegEx": "2", "year": 1995}, {"title": "Multiple data structure discovery through global optimisation, meta clustering and consensus methods, International", "author": ["I. Bifulco", "C. Fedullo", "F. Napolitano", "G. Raiconi", "R. Tagliaferri"], "venue": "Journal of Knowledge Engineering and Soft Data Paradigms,", "citeRegEx": "3", "shortCiteRegEx": "3", "year": 2009}, {"title": "Interactive Visualization Tools for Meta-Clustering", "author": ["I. Bifulco", "F. Iorio", "F. Napolitano", "G. Raiconi", "R. Tagliaferri"], "venue": "Proceedings of the 2009 conference on New Directions in Neural Networks: 18th Italian Workshop on Neural Networks: WIRN", "citeRegEx": "4", "shortCiteRegEx": "4", "year": 2008}, {"title": "Learning multiple nonredundant clusterings", "author": ["Y. Cui", "X.Z. Fern", "J.G. Dy"], "venue": "ACM Transactions on Knowledge Discovery from Data (TKDD),", "citeRegEx": "6", "shortCiteRegEx": "6", "year": 2010}, {"title": "Which clustering do you want? inducing your ideal clustering with minimal feedback", "author": ["S. Dasgupta", "V. Ng"], "venue": "J. Artif. Int. Res.,", "citeRegEx": "7", "shortCiteRegEx": "7", "year": 2010}, {"title": "Cluster ensembles, Wiley Interdisc", "author": ["J. Ghosh", "A. Acharya"], "venue": "Rew.: Data Mining and Knowledge Discovery,", "citeRegEx": "9", "shortCiteRegEx": "9", "year": 2011}, {"title": "Clustering Aggregation", "author": ["A. Gionis", "H. Mannila", "P. Tsaparas"], "venue": "ACM Trans. Knowl. Discov. Data,", "citeRegEx": "10", "shortCiteRegEx": "10", "year": 2007}, {"title": "Consensus Clustering Algorithms: Comparison and Refinement, Proceedings of the Workshop on Algorithm Engineering and Experiments", "author": ["A. Goder", "V. Filkov"], "venue": "ALENEX", "citeRegEx": "11", "shortCiteRegEx": "11", "year": 2008}, {"title": "Consensus Clustering Algorithms: Comparison and Refinement", "author": ["A. Goder", "V. Filkov"], "venue": "Alenex,", "citeRegEx": "12", "shortCiteRegEx": "12", "year": 2008}, {"title": "Partitions of partitions", "author": ["A. Gordon", "M. Vichi"], "venue": "Journal of Classification,", "citeRegEx": "13", "shortCiteRegEx": "13", "year": 1998}, {"title": "A scalable framework for cluster ensembles", "author": ["P. Hore", "L.O. Hall", "D.B. Goldgof"], "venue": "Pattern Recogn.,", "citeRegEx": "14", "shortCiteRegEx": "14", "year": 2009}, {"title": "Weighted consensus clustering", "author": ["T. Li", "C. Ding"], "venue": "Proceedings of 2008 SIAM International Conference on Data Mining (SDM 2008), Atlanta, April", "citeRegEx": "16", "shortCiteRegEx": "16", "year": 2008}, {"title": "Consensus Clustering: A Resampling-Based Method for Class Discovery and Visualization of Gene Expression Microarray", "author": ["S. Monti", "P. Tamayo", "J. Mesirov", "T. Golub"], "venue": "Data, Mach. Learn.,", "citeRegEx": "18", "shortCiteRegEx": "18", "year": 2003}, {"title": "Comparing Approaches for Clustering Mixed Mode Data: An Application in Marketing Research, Data Analysis and Classification", "author": ["I. Morlini", "S. Zani"], "venue": "Proceedings of the 6th Conference (F. Palumbo,", "citeRegEx": "19", "shortCiteRegEx": "19", "year": 2010}, {"title": "Consensus Clusterings", "author": ["N. Nguyen", "R. Caruana"], "venue": "Proceedings of the 7th IEEE International Conference on Data Mining (ICDM", "citeRegEx": "20", "shortCiteRegEx": "20", "year": 2007}, {"title": "Multiple Non-Redundant Spectral Clustering Views", "author": ["D. Niu", "J.G. Dy", "M.I. Jordan"], "venue": null, "citeRegEx": "21", "shortCiteRegEx": "21", "year": 2010}, {"title": "Consensus Based Ensembles of Soft Clusterings", "author": ["K. Punera", "J. Ghosh"], "venue": "Applied Artificial Intelligence: An International Journal,", "citeRegEx": "22", "shortCiteRegEx": "22", "year": 2008}, {"title": "Standardized Mutual Information for Clustering Comparisons: One Step Further in Adjustment for Chance", "author": ["Simone Romano", "James Bailey", "V.N.K. V"], "venue": "Proceedings of The 31st International Conference on Machine Learning,", "citeRegEx": "23", "shortCiteRegEx": "23", "year": 2014}, {"title": "Cluster ensembles \u2014 a knowledge reuse framework for combining multiple partitions", "author": ["A. Strehl", "J. Ghosh"], "venue": "J. Mach. Learn. Res.,", "citeRegEx": "24", "shortCiteRegEx": "24", "year": 2003}, {"title": "Clustering ensembles: Models of consensus and weak partitions", "author": ["A. Topchy", "A.K. Jain", "W. Punch"], "venue": "IEEE Transactions on Pattern Analysis and Machine Intelligence,", "citeRegEx": "25", "shortCiteRegEx": "25", "year": 2005}, {"title": "Semi-Supervised Consensus Clustering: Reducing Human Effort", "author": ["T. Vogel", "F. Naumann"], "venue": "Proceedings of the International Workshop on Data Integration and Applications,", "citeRegEx": "26", "shortCiteRegEx": "26", "year": 2014}, {"title": "Bayesian cluster ensembles", "author": ["H. Wang", "H. Shan", "A. Banerjee"], "venue": "Statistical Analysis and Data Mining,", "citeRegEx": "27", "shortCiteRegEx": "27", "year": 2011}, {"title": "Semi-Supervised Consensus Clustering for Gene Expression Data Analysis", "author": ["Y. Wang", "Y. Pan"], "venue": "BioData Mining,", "citeRegEx": "28", "shortCiteRegEx": "28", "year": 2014}], "referenceMentions": [{"referenceID": 22, "context": "\u2022 the consensus clustering (called also in various brands ensemble clustering [27] or cluster aggregation [10])", "startOffset": 78, "endOffset": 82}, {"referenceID": 7, "context": "\u2022 the consensus clustering (called also in various brands ensemble clustering [27] or cluster aggregation [10])", "startOffset": 106, "endOffset": 110}, {"referenceID": 16, "context": "To facilitate user selection of the right clustering, [5] (also compare [21, 4, 3, 7, 6]) suggests to provide the user with meta-clusters (clusters of partitions) in order that the user better understands the choices.", "startOffset": 72, "endOffset": 88}, {"referenceID": 3, "context": "To facilitate user selection of the right clustering, [5] (also compare [21, 4, 3, 7, 6]) suggests to provide the user with meta-clusters (clusters of partitions) in order that the user better understands the choices.", "startOffset": 72, "endOffset": 88}, {"referenceID": 2, "context": "To facilitate user selection of the right clustering, [5] (also compare [21, 4, 3, 7, 6]) suggests to provide the user with meta-clusters (clusters of partitions) in order that the user better understands the choices.", "startOffset": 72, "endOffset": 88}, {"referenceID": 5, "context": "To facilitate user selection of the right clustering, [5] (also compare [21, 4, 3, 7, 6]) suggests to provide the user with meta-clusters (clusters of partitions) in order that the user better understands the choices.", "startOffset": 72, "endOffset": 88}, {"referenceID": 4, "context": "To facilitate user selection of the right clustering, [5] (also compare [21, 4, 3, 7, 6]) suggests to provide the user with meta-clusters (clusters of partitions) in order that the user better understands the choices.", "startOffset": 72, "endOffset": 88}, {"referenceID": 19, "context": "In consensus clustering [24] a kind of optimisation problem (combinatorial optimisation) is formulated and solved.", "startOffset": 24, "endOffset": 28}, {"referenceID": 8, "context": "A number of other techniques in this direction was reviewed in [11, 14, 9, 16, 22, 18, 25, 20, 28, 26].", "startOffset": 63, "endOffset": 102}, {"referenceID": 11, "context": "A number of other techniques in this direction was reviewed in [11, 14, 9, 16, 22, 18, 25, 20, 28, 26].", "startOffset": 63, "endOffset": 102}, {"referenceID": 6, "context": "A number of other techniques in this direction was reviewed in [11, 14, 9, 16, 22, 18, 25, 20, 28, 26].", "startOffset": 63, "endOffset": 102}, {"referenceID": 12, "context": "A number of other techniques in this direction was reviewed in [11, 14, 9, 16, 22, 18, 25, 20, 28, 26].", "startOffset": 63, "endOffset": 102}, {"referenceID": 17, "context": "A number of other techniques in this direction was reviewed in [11, 14, 9, 16, 22, 18, 25, 20, 28, 26].", "startOffset": 63, "endOffset": 102}, {"referenceID": 13, "context": "A number of other techniques in this direction was reviewed in [11, 14, 9, 16, 22, 18, 25, 20, 28, 26].", "startOffset": 63, "endOffset": 102}, {"referenceID": 20, "context": "A number of other techniques in this direction was reviewed in [11, 14, 9, 16, 22, 18, 25, 20, 28, 26].", "startOffset": 63, "endOffset": 102}, {"referenceID": 15, "context": "A number of other techniques in this direction was reviewed in [11, 14, 9, 16, 22, 18, 25, 20, 28, 26].", "startOffset": 63, "endOffset": 102}, {"referenceID": 23, "context": "A number of other techniques in this direction was reviewed in [11, 14, 9, 16, 22, 18, 25, 20, 28, 26].", "startOffset": 63, "endOffset": 102}, {"referenceID": 21, "context": "A number of other techniques in this direction was reviewed in [11, 14, 9, 16, 22, 18, 25, 20, 28, 26].", "startOffset": 63, "endOffset": 102}, {"referenceID": 1, "context": "We are particularly interested in the one initiated by [2, 13], and further studied [12] and applied [19].", "startOffset": 55, "endOffset": 62}, {"referenceID": 10, "context": "We are particularly interested in the one initiated by [2, 13], and further studied [12] and applied [19].", "startOffset": 55, "endOffset": 62}, {"referenceID": 9, "context": "We are particularly interested in the one initiated by [2, 13], and further studied [12] and applied [19].", "startOffset": 84, "endOffset": 88}, {"referenceID": 14, "context": "We are particularly interested in the one initiated by [2, 13], and further studied [12] and applied [19].", "startOffset": 101, "endOffset": 105}, {"referenceID": 14, "context": "(again) as the averaged Rand Index [19].", "startOffset": 35, "endOffset": 39}, {"referenceID": 0, "context": "2 More precisely, [1] shows that this number amounts to", "startOffset": 18, "endOffset": 21}, {"referenceID": 18, "context": "[23].", "startOffset": 0, "endOffset": 4}], "year": 2017, "abstractText": "This paper investigates the application of consensus clustering and meta-clustering to the set of all possible partitions of a data set. We show that when using a \u201dcomplement\u201d of Rand Index as a measure of cluster similarity, the total-separation partition, putting each element in a separate set, is chosen.", "creator": "LaTeX with hyperref package"}}}