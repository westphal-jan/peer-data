{"id": "1702.08513", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "28-Feb-2017", "title": "Learning Deep Visual Object Models From Noisy Web Data: How to Make it Work", "abstract": "Deep networks thrive when trained on large scale data collections. This has given ImageNet a central role in the development of deep architectures for visual object classification. However, ImageNet was created during a specific period in time, and as such it is prone to aging, as well as dataset bias issues. Moving beyond fixed training datasets will lead to more robust visual systems, especially when deployed on robots in new environments which must train on the objects they encounter there. To make this possible, it is important to break free from the need for manual annotators. Recent work has begun to investigate how to use the massive amount of images available on the Web in place of manual image annotations. We contribute to this research thread with two findings: (1) a study correlating a given level of noisily labels to the expected drop in accuracy, for two deep architectures, on two different types of noise, that clearly identifies GoogLeNet as a suitable architecture for learning from Web data; (2) a recipe for the creation of Web datasets with minimal noise and maximum visual variability, based on a visual and natural language processing concept expansion strategy. By combining these two results, we obtain a method for learning powerful deep object models automatically from the Web. We confirm the effectiveness of our approach through object categorization experiments using our Web-derived version of ImageNet on a popular robot vision benchmark database, and on a lifelong object discovery task on a mobile robot.", "histories": [["v1", "Tue, 28 Feb 2017 10:02:36 GMT  (6654kb,D)", "http://arxiv.org/abs/1702.08513v1", "8 pages, 7 figures, 3 tables"]], "COMMENTS": "8 pages, 7 figures, 3 tables", "reviews": [], "SUBJECTS": "cs.CV cs.DB cs.LG cs.RO", "authors": ["nizar massouh", "francesca babiloni", "tatiana tommasi", "jay young", "nick hawes", "barbara caputo"], "accepted": false, "id": "1702.08513"}, "pdf": {"name": "1702.08513.pdf", "metadata": {"source": "CRF", "title": "Learning Deep Visual Object Models From Noisy Web Data: How to Make it Work", "authors": ["Nizar Massouh", "Francesca Babiloni", "Tatiana Tommasi", "Jay Young", "Nick Hawes", "Barbara Caputo"], "emails": ["@dis.uniroma1.it", "@cs.bham.ac.uk"], "sections": [{"heading": null, "text": "I. INTRODUCTION\nDeep networks and ImageNet are the key ingredients of the most recent and successful object categorization approaches in robot vision today, across 2D [1], [2], 2,5D [3], [4] and 3D [5], [6] data. The progress achieved by learning methods in object classification over the last five years has been impressive, and it goes hand-in-hand with the development of deep architectures. In turn, the success obtained so far relies heavily on the availability of very large scale annotated data collections. ImageNet [7], and to a lesser extent Places [8], are, at the time of writing, the only two publicly available resources suitable for training deep learning-based object categorization algorithms. The overwhelming majority of such systems use these two collections for pre-training, usually followed by some form of network adaptation to a specific task (for a review of the relevant literature see Section II).\nThis work was partially supported by the ERC grant 637076 - RoboExNovo (BC, TT), EU FP7 600623 STRANDS (JY, NH) and the CHIST-ERA project ALOOF (BC, NM, JY, NH).\n1 Department of Computer, Control and Management Engineering, Sapienza Rome University, 00185 Rome, Italy {massouh, babiloni, tommasi, caputo } @dis.uniroma1.it\n2 Intelligent Robotics Lab, University of Birmingham, United Kingdom {j.young, n.a.hawes } @cs.bham.ac.uk\nAs with any other annotated database, the perceptual object knowledge in ImageNet is static, i.e. its main body was collected during a limited and specific period (circa 20101). This can result in some classes becoming dated over time, especially those representing man-made objects (see Figure 1). Robots deployed in everyday environments, such as offices, homes or hospitals, will encounter a wide variety of man-made objects. Being trained on out of date models will reduce their performance. Moreover, large-scale image datasets are inevitably collected by multiple annotators, which might involuntarily inject some of their own views and bias on object categories, resulting in dataset bias [9]. Fine-tuning, i.e. adapting a pre-trained architecture to a new classification task, requires annotated data, computational resources and computing time. For several robotic settings, these might not be feasible options.\nThe awareness that we need more diverse data collections to feed data-hungry deep architectures is growing in the community. A promising research thread is the attempt to replace real images with synthetically generated data [10]. An alternative approach attempts to create large-scale databases by downloading images directly from Web search engines [11], without any subsequent cleaning by human annotators. Here the main challenge is to cope with noisy (automatic) annotations [12], while at the same time making sure that the collected images are sufficiently representative of all the visual facets of a given object class.\nThis paper contributes to this latter approach. We first argue that to take full advantage of noisily labeled data, one needs to study the effect of noise on labels in controlled settings. To this end, we inject different percentages of noise, of various kinds, into the labels of ImageNet, and study its impact on accuracy prediction in two different deep architectures. Our study shows that while the accuracy of the popular AlexNet architecture [13] degrades smoothly as the level of noise increases, GoogLeNet [14] maintains a level of accuracy very close to its top performance for levels of noise up to 35%, then it experiences very severe convergence issues, de facto preventing its use for classification. This finding provides an indirect way to assess the level of noise in a Web-generated database, without any need for manual annotation: if GoogLeNet converges, then the noise level in the automatically generated data collection will be between 0% and 35%, and it will have a minimal impact on the accuracy achievable by the architecture on those data. This result is the first contribution of this paper.\n1http://image-net.org/about-stats.\nar X\niv :1\n70 2.\n08 51\n3v 1\n[ cs\n.C V\n] 2\n8 Fe\nb 20\n17\nOur second contribution is an algorithm for the automatic creation of large data collections from the Web that minimizes noise and maximizes image variability through visual and natural language processing, performing a concept expansion of the query. We use our approach to re-create automatically ImageNet from the Web and we compare what we get against a dataset collected without query expansion, performing a qualitative evaluation in terms of visible label noise and a quantitative analysis in terms of CNN classification accuracy when using our two deep nets of choice.\nWe further demonstrate the effectiveness of our approach in two robotics scenarios. We show that CNN networks trained on Web-collected data can be used as feature extractors for images of a popular robot object database [15] and allows to get on it a classification accuracy on par to that obtained when using ImageNet-trained CNN models. Moreover, for a robot deployed in an indoor environment and able to use deep models to overcome gaps into its own visual knowledge base without human intervention, our Web-generated models provide a significant increase in performance compared to using the original ImageNet.\nThe rest of the paper is organized as follows: after a review of the relevant literature (section II), section III describes the protocol developed to study the effect of noisy labels on deep networks, and reports our findings. Section IV describes our query conceptual expansion strategy, illustrating the impact of each component with an experimental study. Section V showcases the power of our approach on object categorization and robotic scenarios. We conclude identifying open issues and future research directions we plan to pursue."}, {"heading": "II. RELATED WORK", "text": "Since the seminal work of Krizhevsky [13], deep learning has significantly changed the research landscape in visual object recognition. Over the last few years, the use of convolutional neural networks trained over large-scale databases has become the cornerstone of most robot visual systems. An important question is how to tailor the performance of such networks to the specific task at hand. Deep networks need large scale annotated databases during training. To this end, ImageNet and particularly the related Large Scale Visual Recognition Challenge subset (ILSVRC12, [7]) are widely used in combination with various deep architectures [1], [10], [6], [4]. To adapt such 1000-categories classifiers to a new problem, a common strategy is fine-tuning [16], i.e. the\nprocedure of re-training a part of the network using annotated data from the new classification problem of interest, while keeping the parameters in other parts of the network fixed. The array of fine-tuning strategies is very large [16], [1], and although effective, the approach depends strongly on heuristics. Moreover, the assumption of having an annotated dataset of 103 images from the new task might be unrealistic in several robotics domains, where a system should be able to perceive and act without lengthy training on the site, that would be in any case static as well.\nThe idea of looking at the Web as a source of knowledge from which to learn is not new in robotics. Previous work looked at obtaining semantic information from the Web in various forms, e.g. from structured and semi-structured sources like WikiPedia, DBPedia and WordNet [17], [18], [19], or combined with deep networks pre-trained on ImageNet [20]. Mining the Web to learn about the appearance of objects or scenes is much less investigated. Ventura et al proposed using the Web to call upon human annotators if a robot detected gaps in its perceptual knowledge [21]. Wohlkinger et al downloaded 3D CAD models from public Web resources, creating a 3D object database acting as a proxy for the Web [22]. Recent work by Young et al [20] proposed the combination of semantic and perceptual Web knowledge, using curated resources like DBPedia and ImageNet as Web proxies. We are not aware of previous work in robot vision for automatically mining the Web for RGB images, in order to learn perceptual object models on a robot without use of manual annotators.\nThe automatic creation of image databases by mining the Web has been researched in the computer vision community. Focusing explicitly on the work done within the context of deep network training, research efforts have followed two different directions. The first acknowledges the fact that databases created from the Web without manual intervention will inevitably contain some level of noise, and so attempt to design loss layers able to cope with this issue [23], [12]. The second tackles this issue by proposing query expansion strategies that should reduce the level of noisily annotated images while preserving the visual variability necessary to successfully train deep nets [11], [24], [25]. Our work sits in the middle of these two directions: as in the first, we assume that images downloaded automatically from the Web will have some degree of noise associated with their label.\nRather than designing regularization layers to cope with this, we instead study the effect of noisy labels on two different deep architectures and use the insights of this study to our advantage. This, combined with a new recipe for automatic query expansion able to reduce noisily annotated data while spanning the visual concept space significantly, lead to a powerful strategy for robot visual classification in the wild."}, {"heading": "III. STUDYING THE EFFECT OF NOISY LABELS ON CNNS", "text": "When automatically harvesting the Web to build databases for object classification, the labels of the images can be expected to contain noise. However, the level of noise for any given strategy is seldom investigated, beyond the manual generation of ground truth. When building databases of the scale necessary for deep learning, assessing this noise directly is a daunting task.\nWe therefore assess the level of noise associated with labels created by a given automatic database collection procedure through a reference task. We consider ImageNet, specifically its ILSVRC12 set of 1000 categories, as our classification problem. We evaluate how the accuracy of different deep architectures changes when the original dataset is injected with different levels and types of noise. Assessing such changes in classification accuracy gives us information about how well networks trained from scratch on general purpose databases will perform on new, Web-collected data without human annotation.\nWe focus on two main types of label noise: \u2022 external noise describes an image that is associated with\na label, but does not actually belong to any label in the dataset; \u2022 internal noise describes an image that is associated with a label, but actually belongs to another label in the dataset.\nWe created replicas of the ILSVRC12 collection with increasing percentages of noise. We created separate replicas for internal and external label noise, ranging from 5% to 85% in increments of 10%. We distributed erroneously labeled images uniformly over the classes, substituting the original correct images with samples pooled randomly either from other ImageNet classes not belonging to ILSVRC12 (external noise) or from different classes of the same set (internal noise). This is illustrated in Figure 2.\nWe tested two different CNN architectures to evaluate their robustness to this type of noise: AlexNet [26] and GoogLeNet [14]. The first is the na\u0131\u0308ve standard CNN in object categorization, while the second is a deeper architecture which includes Inception modules designed to improve the network effectiveness without an uncontrolled blow-up of the computational complexity. In all our experiments we trained the networks on the noisy sets, evaluating the classification performance on the original ILSVRC12 validation set. We used the Caffe [27] CNN implementation available on NVIDIA Deep Learning GPU Training System (DIGITS) for all our experiments. The learning rate was set to 0.01 initially and divided by 10 after every third of the total epochs. We trained both networks with an SGD solver for 30 epochs\nand we repeated each experiments 5 times reshuffling the image list and using batch size of 128 for AlexNet and 32 for GoogLeNet. The average accuracy results are shown in Figure 3. We see that a low percentage of internal or external noise (< 20%) induces only a moderate reduction in classification performance. For larger amounts of noise (\u2265 20%), the networks appear more robust to external noise than to internal noise. Moreover, GoogLeNet outperforms AlexNet for a low noise percentage, while the trend inverts for an amount of noise equal or over 35%. Although the former result is expected [14], the latter is quite surprising, indicating that GoogLeNet, besides being deeper, is also less robust to noise than AlexNet.\nA further investigation conducted on the external noise case indicated that for 35% noise, GoogLeNet converged during training in three out of the five repetitions of the experiment, while for 45% noise it converged in only one of the runs. Since the repetitions only differed in the data order, this tells us that the content of each data batch fed to GoogLeNet is important. When every batch is noisy it becomes difficult to optimize the large number of network parameters. We also tried doubling the batch size with no significant difference in the overall result trend.\nTo the best of our knowledge, this GoogLeNet behavior has not been observed or discussed before. Besides drawing attention to a limitation of very deep CNN architectures, this result suggests that GoogLeNet might be used as a rough indicator of the level of label noise present in an image database generated automatically from the Web: if for a given collection GoogLeNet converges, this means that (a) the level of noise on the labels is at most 40%, and (b) the recognition accuracy using this training data is expected to be roughly 5% lower than would be achieved by using a noise-free version of the same database. In the rest of the paper we will show how this result, coupled with an effective approach for automatic Web mining, leads to state of the art results in lifelong object discovery [20]."}, {"heading": "IV. LEARNING FROM THE WEB", "text": "This section illustrates our strategy for collecting images from the Web in order to build a training set for learning deep classification models. We present a qualitative analysis on the gathered data and a quantitative evaluation on the accuracy obtained when using them to train deep nets. For a reference task we focus on reproducing the ILSVRC12 database of 1000 categories [28]."}, {"heading": "A. Dataset Collection", "text": "Collecting images of a given category from the Web presents some practical challenges. Many popular search engines have restrictions that limit downloads to a maximum of 1000 images per query. Considering the large number of duplicates for some categories, the number of images obtained per query can be very limited. This limitation means that the statistics of the original ILSVRC12 dataset, composed by several categories each represented by 103 images, are hard to recreate with direct query methods.\nWe can tackle this issue with two possible solutions: \u2022 category name & single search engine - use the category\nname to query a search engine that has weak download restrictions and provides a large number of low quality images; \u2022 query expansion & multiple search engines - expand the query by adding extra textual information to the category name and use multiple search engines, each with strict download limitations.\nThe first strategy can use search engines like Picsearch (www.picsearch.com) from which we can get more than 7000 images per class, but the level of control on the output is quite limited (e.g. it is not possible to choose the image type to exclude drawings), and the relevance of the images with respect to the query decreases quickly. The second strategy needs external expert knowledge for each category to provide related text and expand the original query.\nOne widely adopted method to obtain meaningful expansions is to leverage WordNet [29], either considering the synonyms in the synset of each category, the parent nodes, or even the whole category textual description. However,\nsome of the WordNet synsets contain a single word (e.g. \u201cjay\u201d, \u201cboxer\u201d, \u201ccrane\u201d) so no synonyms are available. When searching for parents, deciding at which depth level of the ontology to stop is not trivial (e.g. \u201cjay\u201d, \u201ccorvin\u201d, \u201coscine\u201d, \u201cpasserine\u201d, \u201cbird\u201d, \u201cvertebrate\u201d, etc.): the hierarchy of classes is not uniform, with some parts more or less dense than others due to different numbers of siblings. Hence, it is hard to find a meaningful rule for all categories. Using the textual description of a category requires a natural language pre-processing step able to isolate relevant words and avoid the confusing ones (e.g. for \u201dcrane\u201d: \u201clarge long-necked wading bird of marshes and plains in many parts of the world\u201d the query crane+bird can be useful, but crane+world provides misleading results). Finally, to get a sufficient amount of images, one or two words are not enough, as preliminary tests show that more than ten are needed to reach our goal of reproducing the ILSVRC12 class statistics.\nIn the following we will use IN to indicate the original ImageNet ILSVRC12 dataset and WIN to indicate our Webcollected ImageNet ILSVRC12 version, obtained adopting following the category name & single search engine strategy. We also create WINC using query expansion & multiple search engines strategy. Below we describe our query expansion and preprocessing procedures.\nQuery Expansion. Since there isn\u2019t a single universal strategy for query expansion, we target simplicity. We assume that our database creation process can only access the Web to gain knowledge and cannot ask for a human for disambiguation or expert help. Under such conditions, Search Engine Optimization (SEO) practice can provide guidance. SEO evaluates the relation between how users query a search engine and the preference they express in the returned results. A highly preferred result, usually top ranked by the search engine, is indexed with keywords considered as very relevant to the original query. By exploiting SEO tools, in particular the ones that target image search, we can easily get a large number of relevant keywords associated to visual concepts. Here we use the MyKeyworder service (www.mykeyworder.com), giving a category name as input and collecting the top 20 output keywords. These can be considered intrinsically visual, because they are associated with\nimage search queries, semantic concepts and photographic tags. Each of the obtained keywords are then used as query expansions for an object class name when querying three image search engines: Google, Yahoo! and Bing. Although the maximum number of available images from each of them is 1000, we limited ourself to the top 200 results as in [30]. This choice reduces the risk of introducing irrelevant and noisy images (which usually appears after the first result page), and guarantees a large variability in the final image set since multiple keywords cover different visual aspects of the same concept. Considering the whole set of 1000 ILSVRC12 classes, the download phase leaves us with 20 \u00d7 3 \u00d7 200 \u00d7 1000 = 12 \u00d7 106 images and a large space for further refinement.\nDuplicates Removal. An essential preprocessing step consists of removing duplicate images. When using multiple search engine as well as multiple concept expansions, we deal with two kinds of image repetitions. The per-query duplicates are exact copies or very similar images obtained by using the same query across three different search engines. These duplicates are eliminated immediately after the end of the download process. The cross-expansion duplicates are exact copies or very similar images obtained when expanding a concept with different keywords. These duplicates are removed in a second processing step; the number of images shared between each expansion and the original concept, not expanded, is saved as a measure of diversity. Both the duplicate removal processes are executed by extracting the image fingerprints through perceptual hashing and then comparing them to find close image pairs.\nVariability Maximization. To induce better generalization in the classifier that will be learned on this data we aim to maximize the quality and variability of each class. Therefore we select only high quality expansions to include in the dataset. Given the j-th expansion eij of the i-th class ci, we can reasonably suppose that it is of high quality if,\n\u2022 the images of the expansion eij lie close to the class images ci, i.e. they have a small L2 distance dij in the feature space; \u2022 the images of the expansions eij are not sparse, i.e. there is small standard deviation \u03c3j in the image set; \u2022 the number of duplicates \u2206 shared by the pair (ci, eij) is small, which ensures variability.\nWe define an inverted score for each expansion (minimal score corresponds to maximal quality, see Figure 4 for the formula and a graphical illustration), sort them, pick the top 5 expansions out of the 20 per class and merge the corresponding images to define the pool from which we randomly select samples with the same statistics of the ILSVRC12 collection. Table I shows the effect of the query expansion and of the variability maximization procedure, indicating the extra keywords obtained with the former and the selection operated by the latter for four categories."}, {"heading": "B. Qualitative Analysis", "text": "To show the difference between the reference IN dataset and WIN/WINC we show samples of two object categories\nin Figure 5. For both \u201cIcecream\u201d and \u201cPillow\u201d we see that (1) WIN images often do not focus on the single object and consider instead a whole scene; moreover, some of the images are irrelevant. (2) WINC images appear much more consistent with the corresponding assigned label; (3) by projecting the feature maps (fc7 activations of AlexNet trained on ImageNet) of the images in the same class of IN and WINC into a bi-dimensional space through PCA we can look at their overall distribution. The plots show that WINC, besides spanning the same part of the visual space of IN, presents also a larger variability which is not only due to noise, but also to several relevant images (Icecream cones and Pillows of different shapes on white background). Similar conclusions can be drawn when looking at other object categories."}, {"heading": "C. Quantitative Analysis", "text": "We complete the evaluation of the Web-collected datasets by training CNNs on them and comparing their performance with that obtained on the curated ImageNet ILSVRC12 (IN). Specifically, we train AlexNet and GoogLeNet, testing both of them on the original ILSVRC12 validation set (val:IN) as well as on a cleaned Web-based validation set (val:WINC). This was collected by selecting 50 images out of the samples of WINC that were not involved in the respective training set and manually verifying their labels. Although this manual image annotation is time expensive, having this extra testbed allows us to assess the effect of a possible bias between ImageNet and the Web-collected datasets as discussed in the introduction. To keep the time dedicated to the annotation limited, we considered a subset of 200 out of 1000 classes. For completeness we also ran tests on groups of 10, 50 and 100 classes, showing that the overall performance of the different models remain consistent regardless of the cardinality of the labeled set.\nThe top-1 classification accuracy results obtained with AlexNet are shown in the first rows of Table II. They indicate that the models trained on IN outperform those trained on WIN/WINC when both are tested on val:IN. Between WINC\nand WIN the first shows higher accuracy than the second, as we could expect from the qualitative analysis. The trend between IN and WINC changes when testing on val:WINC. Here training on WINC provides equal or better performance than training on IN. These results prove empirically the presence of a domain shift between the ImageNet and Web underlying probability distributions [32]. They also allow us to claim the reliability of the WINC model. The behavior of the WIN model remains instead unchanged regardless of the validation set, indicating that this version of the Webcollected dataset is significantly worse than the original IN. Because of this, we will not consider it in the following analysis, concentrating only on our clean WINC. When using GoogLeNet (bottom part of Table II) all results grow in absolute terms, but the relative performance of the IN and WINC models remains the same as with AlexNet, confirming what already stated before. A further important message provided by the GoogleNet results is that it is possible to train this network on WINC without encoutering network convergence issues. From our results in Section III we can conclude that the amount of noise present in our Web-collected version of ImageNet is below the critical threshold of 35%."}, {"heading": "V. EXPERIMENTS", "text": "Having shown that it is possible to learn reasonable CNN classification models from Web-collected images, we now assess their performance when facing real scenarios from robotic applications. We consider two tasks: object classification using the models for feature extraction, and lifelong object discovery using the models to produce category proposals.\nFeature Extraction. We conducted experiments on the Washington RGB-D object dataset [15]. This is a widely used testbed in the robotic community, consisting of 41,877 RGB-D images organized into 300 instances divided in 51 classes of common indoor objects (e.g. scissors, cereal box, keyboard etc. see top row of Figure 6). Each object instance was positioned on a turntable and captured from three different viewpoints while rotating. Since two consecutive views are extremely similar, only 1 frame out of 5 is used for evaluation purposes. We did not consider the depth information and focused only on the RGB images: following [10], we represented the images with the last fully convolutional layer of the AlexNet network trained on the IN dataset and learned a linear SVM model on them. Note that the results obtained with this protocol can be considered the off-the-shelf state of the art in the robot vision community. Finally we ran a test on the splits provided with the dataset and compared the results with those obtained by using AlexNet trained on WINC. We also repeated the evaluation when using a pre-trained GoogLeNet for both IN and WINC, considering their last inception layer as features2. Results shown in Table III indicate that, regardless of the considered network, the average classification accuracy obtained with WINC models is just slightly worse than that obtained with IN models and they can be considered equal within their standard deviations. It is worthwhile to remember that the Washington database was collected in 2011, so with respect to age it can be considered closer to the IN dataset than to WINC. Nevertheless the WINC model is robust enough to provide good results when used for feature extraction.\nCategory Proposals. For a mobile service robot in human environment it is important not only to recognize known object categories, but also to be able to generate hypotheses about previously unseen categories. CNN models pre-trained\n2Multiple validation experiments have shown that, when using GoogLeNet, the inception 5b layer produces better results than the following pooling and softmax layers.\nTABLE III SVM CLASSIFICATION ACCURACY ON THE WASHINGTON DATABASE [15]. THE FIRST COLUMN INDICATES THE TRAINING DATA AND NETWORK ARCHITECTURE USED TO EXTRACT THE IMAGE FEATURES.\nmodel classification accuracy (%) IN AlexNet 88.3\u00b1 1.9\nWINC AlexNet 87.3\u00b1 1.6 IN GoogLeNet 88.5\u00b1 2.3 WINC GoogLeNet 85.4\u00b1 2.5\nFig. 7. WUP values between ground truth and predicted object labels. The title of each figure indicates the CNN architecture adopted to learn the visual classification models which generate the category proposals, while the legend specifies their training data.\non thousand of categories can be used as a potential source of information to extend a robot\u2019s situated knowledge. For this task we considered the same setting described in [20]: a long-term autonomous mobile service robot equipped with an RGB-D camera recording everyday scenes in a human environment [33]. It observes cabinet tops, counters, desks, shelves and other surfaces taking multiple views from various angles. From these surfaces it detects and segments objects which it isn\u2019t able to recognise [34]. During the test phase, a cropped image of the unknown object is given as input to a pre-trained CNN model. Although the correct object label might not be in the predicted set, the success is measured by evaluating the WUP similarity [35] between the ground truth and the proposed category with values ranging in {0, 1}.\nAs we deal with autonomously gathered images in real environments they appear smaller, with lower-resolution and from less favourable angles than both the images in ImageNet and in our Web-collected dataset (see bottom row of Figure 6). Nevertheless, note that using a deep network trained on a database created automatically from the Web is a strong proxi for autonomous lifelong object discovery from Web images.\nWe run the experiments on Dataset A from [20], starting from AlexNet models trained both on IN and WINC. Figure 7 shows the results per each of 20 object categories of the dataset and indicate that in most of the cases the WUP score between the ground truth and predicted labels is higher when using WINC than when using IN. On average we get a WUP score of 0.52 with IN and 0.58 with WINC. The observed performance is also confirmed by the results obtained when using the GoogLeNet architecture with average WUP score of respectively 0.62 and 0.64. We see these results as a\nfirst, important step towards robots able to learn the visual appearance of previously unseen objects autonomously from the Web."}, {"heading": "VI. CONCLUSIONS", "text": "The aim of this work is to pave the way for robots able to learn perceptual object models from images found on the Web, without the need of human annotators. We took the ImageNet ILSVRC12 1000 categories database as a reference task, and we studied how injecting noise into it affected the performance of two popular deep architectures, AlexNet and GoogLeNet. We built on our findings, presenting a query expansion approach for automatically re-creating ILSVRC12 from Web downloads, and we demonstrated experimentally that this Web-derived version of ImageNet leads to deep models that are better at capturing the visual facets of object categories when used to extend a robot on-board perceptual object knowledge.\nWe see this work as the first step on a long and intriguing road. The possibility to automatically create data collections from the Web, large enough to train a deep net, should be further explored, aiming for much larger data collections in terms of classes and images per class. This would allow us to study questions such as when would we reach the upper bound of accuracy for a given architecture? Another avenue we intend to explore is the possibility of creating task specific, rather than all-purpose, databases, which intuitively should allow a robot to exploit any prior knowledge it might have on its situated settings and goals. Finally, we plan to continue our investigations on the effect of noise on the behavior of deep architectures, both in terms of further experiments and in-depth analysis trying to pinpoint the specific layers that are more affected by it."}], "references": [{"title": "Rgb-d object recognition and pose estimation based on pre-trained convolutional neural network features", "author": ["M. Schwarz", "H. Schulz", "S. Behnke"], "venue": "Proc ICRA, 2015.", "citeRegEx": "1", "shortCiteRegEx": null, "year": 2015}, {"title": "Beyond spatial pooling: Finegrained representation learning in multiple domains", "author": ["C. Li", "A. Reiter", "G.D. Hager"], "venue": "Proc CVPR, 2015.", "citeRegEx": "2", "shortCiteRegEx": null, "year": 2015}, {"title": "Learning rich features from rgb-d images for object detection and segmentation", "author": ["S. Gupta", "R. Girshick", "P. Arbel\u00e1ez", "J. Malik"], "venue": "Proc ECCV, 2014.", "citeRegEx": "3", "shortCiteRegEx": null, "year": 2014}, {"title": "Multimodal deep learning for robust rgb-d object recognition", "author": ["A. Eitel", "J.T. Springenberg", "L. Spinello", "M. Riedmiller", "W. Burgard"], "venue": "Proc. IROS.", "citeRegEx": "4", "shortCiteRegEx": null, "year": 0}, {"title": "Convolutional-recursive deep learning for 3d object classification.", "author": ["R. Socher", "B. Huval", "B.P. Bath", "C.D. Manning", "A.Y. Ng"], "venue": "Proc NIPS,", "citeRegEx": "5", "shortCiteRegEx": "5", "year": 2012}, {"title": "Convolutional hypercube pyramid for accurate rgb-d object category and instance recognition", "author": ["H.F. Zaki", "F. Shafait", "A. Mian"], "venue": "Proc ICRA, 2016.", "citeRegEx": "6", "shortCiteRegEx": null, "year": 2016}, {"title": "Imagenet: A large-scale hierarchical image database", "author": ["J. Deng", "W. Dong", "R. Socher", "L.-J. Li", "K. Li", "L. Fei-Fei"], "venue": "Proc CVPR, 2009.", "citeRegEx": "7", "shortCiteRegEx": null, "year": 2009}, {"title": "Learning deep features for scene recognition using places database.", "author": ["B. Zhou", "A. Lapedriza", "J. Xiao", "A. Torralba", "A. Oliva"], "venue": "Proc NIPS,", "citeRegEx": "8", "shortCiteRegEx": "8", "year": 2014}, {"title": "Unbiased look at dataset bias", "author": ["A. Torralba", "A.A. Efros"], "venue": "Proc CVPR, 2011.", "citeRegEx": "9", "shortCiteRegEx": null, "year": 2011}, {"title": "A deep representation for depth images from synthetic data", "author": ["F.M. Carlucci", "P. Russo", "B. Caputo"], "venue": "Proc ICRA, 2017.", "citeRegEx": "10", "shortCiteRegEx": null, "year": 2017}, {"title": "Semantically-driven automatic creation of training sets for object recognition", "author": ["D.S. Cheng", "F. Setti", "N. Zeni", "R. Ferrario", "M. Cristani"], "venue": "Computer Vision and Image Understanding, vol. 131, pp. 56\u201371, 2015.", "citeRegEx": "11", "shortCiteRegEx": null, "year": 2015}, {"title": "Learning from noisy labels with deep neural networks", "author": ["S. Sukhbaatar", "R. Fergus"], "venue": "CoRR, vol. abs/1406.2080, 2014.", "citeRegEx": "12", "shortCiteRegEx": null, "year": 2014}, {"title": "Imagenet classification with deep convolutional neural networks", "author": ["A. Krizhevsky", "I. Sutskever", "G.E. Hinton"], "venue": "Proc NIPS, 2012.", "citeRegEx": "13", "shortCiteRegEx": null, "year": 2012}, {"title": "Going deeper with convolutions", "author": ["C. Szegedy", "W. Liu", "Y. Jia", "P. Sermanet", "S. Reed", "D. Anguelov", "D. Erhan", "V. Vanhoucke", "A. Rabinovich"], "venue": "Proc. CVPR, 2015.", "citeRegEx": "14", "shortCiteRegEx": null, "year": 2015}, {"title": "A large-scale hierarchical multiview rgb-d object dataset", "author": ["K. Lai", "L. Bo", "X. Ren", "D. Fox"], "venue": "Proc ICRA, 2011.", "citeRegEx": "15", "shortCiteRegEx": null, "year": 2011}, {"title": "Return of the devil in the details: Delving deep into convolutional nets", "author": ["K. Chatfield", "K. Simonyan", "A. Vedaldi", "A. Zisserman"], "venue": "Proc BMVC, 2014.", "citeRegEx": "16", "shortCiteRegEx": null, "year": 2014}, {"title": "Open robotics research using web-based knowledge services", "author": ["M. Beetz", "D. Be\u00dfler", "J.O. Winkler", "J. Worch", "F. Balint-Benczedi", "G. Bartels", "A. Billard", "A.K. Bozcuoglu", "Z. Fang", "N. Figueroa", "A. Haidu", "H. Langer", "A. Maldonado", "A.L.P. Ureche", "M. Tenorth", "T. Wiedemeyer"], "venue": "Proc ICRA, 2016.", "citeRegEx": "17", "shortCiteRegEx": null, "year": 2016}, {"title": "Using the Web to Interactively Learn to Find Objects", "author": ["M. Samadi", "T. Kollar", "M. Veloso"], "venue": "Proc AAAI, 2012.", "citeRegEx": "18", "shortCiteRegEx": null, "year": 2012}, {"title": "Towards lifelong object learning by integrating situated robot perception and semantic web mining", "author": ["J. Young", "V. Basile", "L. Kunze", "E. Cabrio", "N. Hawes"], "venue": "23rd European Conf. on Artificial Intelligence (ECAI\u201916), The Hague, Netherlands, 2016.", "citeRegEx": "19", "shortCiteRegEx": null, "year": 2016}, {"title": "Semantic web-mining and deep vison for lifelong object discovery", "author": ["J. Young", "V. Basile", "E. Cabrio", "N. Hawes", "B. Caputo"], "venue": "Proc ICRA, 2017.", "citeRegEx": "20", "shortCiteRegEx": null, "year": 2017}, {"title": "Web-Based Remote Assistance to Overcome Robot Perceptual Limitations", "author": ["R. Ventura", "B. Coltin", "M. Veloso"], "venue": "Proc AAAI, 2013.", "citeRegEx": "21", "shortCiteRegEx": null, "year": 2013}, {"title": "3dnet: Largescale object class recognition from CAD models", "author": ["W. Wohlkinger", "A. Aldoma", "R.B. Rusu", "M. Vincze"], "venue": "Proc ICRA, 2012.", "citeRegEx": "22", "shortCiteRegEx": null, "year": 2012}, {"title": "Webly supervised learning of convolutional networks", "author": ["X. Chen", "A. Gupta"], "venue": "Proc ICCV, 2015.", "citeRegEx": "23", "shortCiteRegEx": null, "year": 2015}, {"title": "Learning everything about anything: Webly-supervised visual concept learning", "author": ["S.K. Divvala", "A. Farhadi", "C. Guestrin"], "venue": "Proc CVPR, 2014.", "citeRegEx": "24", "shortCiteRegEx": null, "year": 2014}, {"title": "Conceptmap: Mining noisy web data for concept learning", "author": ["E. Golge", "P. Duygulu"], "venue": "Proc ECCV, 2014.", "citeRegEx": "25", "shortCiteRegEx": null, "year": 2014}, {"title": "Imagenet classification with deep convolutional neural networks", "author": ["A. Krizhevsky", "I. Sutskever", "G.E. Hinton"], "venue": "Proc. NIPS, 2012.", "citeRegEx": "26", "shortCiteRegEx": null, "year": 2012}, {"title": "Caffe: Convolutional architecture for fast feature embedding", "author": ["Y. Jia", "E. Shelhamer", "J. Donahue", "S. Karayev", "J. Long", "R. Girshick", "S. Guadarrama", "T. Darrell"], "venue": "Proc ACM Multimedia, 2014.", "citeRegEx": "27", "shortCiteRegEx": null, "year": 2014}, {"title": "ImageNet Large Scale Visual Recognition Challenge", "author": ["O. Russakovsky", "J. Deng", "H. Su", "J. Krause", "S. Satheesh", "S. Ma", "Z. Huang", "A. Karpathy", "A. Khosla", "M. Bernstein", "A.C. Berg", "L. Fei-Fei"], "venue": "International Journal of Computer Vision (IJCV), vol. 115, no. 3, pp. 211\u2013252, 2015.", "citeRegEx": "28", "shortCiteRegEx": null, "year": 2015}, {"title": "WordNet: an electronic lexical database", "author": ["C. Fellbaum", "Ed"], "venue": null, "citeRegEx": "29", "shortCiteRegEx": "29", "year": 1998}, {"title": "Visor: Towards on-the-fly large-scale object category retrieval", "author": ["K. Chatfield", "A. Zisserman"], "venue": "Proc ACCV, 2012.", "citeRegEx": "30", "shortCiteRegEx": null, "year": 2012}, {"title": "Cnn features off-the-shelf: An astounding baseline for recognition", "author": ["A.S. Razavian", "H. Azizpour", "J. Sullivan", "S. Carlsson"], "venue": "CVPR Workshop, ser. CVPRW \u201914, 2014.", "citeRegEx": "31", "shortCiteRegEx": null, "year": 2014}, {"title": "Adapting visual category models to new domains", "author": ["K. Saenko", "B. Kulis", "M. Fritz", "T. Darrell"], "venue": "European Conference on Computer Vision (ECCV), 2010.", "citeRegEx": "32", "shortCiteRegEx": null, "year": 2010}, {"title": "The STRANDS project: Long-term autonomy in everyday environments", "author": ["N. Hawes", "C. Burbridge", "F. Jovan", "L. Kunze", "B. Lacerda", "L. Mudrov\u00e1", "J. Young", "J.L. Wyatt", "D. Hebesberger", "T. K\u00f6rtner", "R. Ambrus", "N. Bore", "J. Folkesson", "P. Jensfelt", "L. Beyer", "A. Hermans", "B. Leibe", "A. Aldoma", "T. Faulhammer", "M. Zillich", "M. Vincze", "M. Al-Omari", "E. Chinellato", "P. Duckworth", "Y. Gatsoulis", "D.C. Hogg", "A.G. Cohn", "C. Dondrup", "J.P. Fentanes", "T. Krajn\u0131\u0301k", "J.M. Santos", "T. Duckett", "M. Hanheide"], "venue": "IEEE Robotics & Automation Magazine (RAM), In Press.", "citeRegEx": "33", "shortCiteRegEx": null, "year": 0}, {"title": "Autonomous learning of object models on a mobile robot", "author": ["T. Faeulhammer", "R. Ambrus", "C. Burbridge", "M. Zillich", "J. Folkesson", "N. Hawes", "P. Jensfelt", "M. Vincze"], "venue": "IEEE Robotics and Automation Letters (RA-L), vol. 2, no. 1, pp. 26 \u2013 33, 2016.", "citeRegEx": "34", "shortCiteRegEx": null, "year": 2016}, {"title": "Verbs semantics and lexical selection", "author": ["Z. Wu", "M. Palmer"], "venue": "Annual Meeting on Association for Computational Linguistics, 1994.", "citeRegEx": "35", "shortCiteRegEx": null, "year": 1994}], "referenceMentions": [{"referenceID": 0, "context": "Deep networks and ImageNet are the key ingredients of the most recent and successful object categorization approaches in robot vision today, across 2D [1], [2], 2,5D [3], [4] and 3D [5], [6] data.", "startOffset": 151, "endOffset": 154}, {"referenceID": 1, "context": "Deep networks and ImageNet are the key ingredients of the most recent and successful object categorization approaches in robot vision today, across 2D [1], [2], 2,5D [3], [4] and 3D [5], [6] data.", "startOffset": 156, "endOffset": 159}, {"referenceID": 2, "context": "Deep networks and ImageNet are the key ingredients of the most recent and successful object categorization approaches in robot vision today, across 2D [1], [2], 2,5D [3], [4] and 3D [5], [6] data.", "startOffset": 166, "endOffset": 169}, {"referenceID": 3, "context": "Deep networks and ImageNet are the key ingredients of the most recent and successful object categorization approaches in robot vision today, across 2D [1], [2], 2,5D [3], [4] and 3D [5], [6] data.", "startOffset": 171, "endOffset": 174}, {"referenceID": 4, "context": "Deep networks and ImageNet are the key ingredients of the most recent and successful object categorization approaches in robot vision today, across 2D [1], [2], 2,5D [3], [4] and 3D [5], [6] data.", "startOffset": 182, "endOffset": 185}, {"referenceID": 5, "context": "Deep networks and ImageNet are the key ingredients of the most recent and successful object categorization approaches in robot vision today, across 2D [1], [2], 2,5D [3], [4] and 3D [5], [6] data.", "startOffset": 187, "endOffset": 190}, {"referenceID": 6, "context": "ImageNet [7], and to a lesser extent Places [8], are, at the time of writing, the only two publicly available resources suitable for training deep", "startOffset": 9, "endOffset": 12}, {"referenceID": 7, "context": "ImageNet [7], and to a lesser extent Places [8], are, at the time of writing, the only two publicly available resources suitable for training deep", "startOffset": 44, "endOffset": 47}, {"referenceID": 8, "context": "datasets are inevitably collected by multiple annotators, which might involuntarily inject some of their own views and bias on object categories, resulting in dataset bias [9].", "startOffset": 172, "endOffset": 175}, {"referenceID": 9, "context": "A promising research thread is the attempt to replace real images with synthetically generated data [10].", "startOffset": 100, "endOffset": 104}, {"referenceID": 10, "context": "databases by downloading images directly from Web search engines [11], without any subsequent cleaning by human annotators.", "startOffset": 65, "endOffset": 69}, {"referenceID": 11, "context": "Here the main challenge is to cope with noisy (automatic) annotations [12], while at the same time making sure that the collected images are sufficiently representative of all the visual facets of a given object class.", "startOffset": 70, "endOffset": 74}, {"referenceID": 12, "context": "Our study shows that while the accuracy of the popular AlexNet architecture [13] degrades smoothly as the level of noise increases, GoogLeNet [14] maintains a level of accuracy very close to its top performance for levels of noise up to 35%, then it experiences very severe convergence", "startOffset": 76, "endOffset": 80}, {"referenceID": 13, "context": "Our study shows that while the accuracy of the popular AlexNet architecture [13] degrades smoothly as the level of noise increases, GoogLeNet [14] maintains a level of accuracy very close to its top performance for levels of noise up to 35%, then it experiences very severe convergence", "startOffset": 142, "endOffset": 146}, {"referenceID": 14, "context": "We show that CNN networks trained on Web-collected data can be used as feature extractors for images of a popular robot object database [15] and allows to get on it a classification accuracy on par to that obtained when using ImageNet-trained CNN models.", "startOffset": 136, "endOffset": 140}, {"referenceID": 12, "context": "Since the seminal work of Krizhevsky [13], deep learning has significantly changed the research landscape in visual object recognition.", "startOffset": 37, "endOffset": 41}, {"referenceID": 6, "context": "Recognition Challenge subset (ILSVRC12, [7]) are widely used in combination with various deep architectures [1], [10], [6], [4].", "startOffset": 40, "endOffset": 43}, {"referenceID": 0, "context": "Recognition Challenge subset (ILSVRC12, [7]) are widely used in combination with various deep architectures [1], [10], [6], [4].", "startOffset": 108, "endOffset": 111}, {"referenceID": 9, "context": "Recognition Challenge subset (ILSVRC12, [7]) are widely used in combination with various deep architectures [1], [10], [6], [4].", "startOffset": 113, "endOffset": 117}, {"referenceID": 5, "context": "Recognition Challenge subset (ILSVRC12, [7]) are widely used in combination with various deep architectures [1], [10], [6], [4].", "startOffset": 119, "endOffset": 122}, {"referenceID": 3, "context": "Recognition Challenge subset (ILSVRC12, [7]) are widely used in combination with various deep architectures [1], [10], [6], [4].", "startOffset": 124, "endOffset": 127}, {"referenceID": 15, "context": "To adapt such 1000-categories classifiers to a new problem, a common strategy is fine-tuning [16], i.", "startOffset": 93, "endOffset": 97}, {"referenceID": 15, "context": "The array of fine-tuning strategies is very large [16], [1], and although effective, the approach depends strongly on", "startOffset": 50, "endOffset": 54}, {"referenceID": 0, "context": "The array of fine-tuning strategies is very large [16], [1], and although effective, the approach depends strongly on", "startOffset": 56, "endOffset": 59}, {"referenceID": 16, "context": "from structured and semi-structured sources like WikiPedia, DBPedia and WordNet [17], [18], [19], or combined with deep networks pre-trained on ImageNet [20].", "startOffset": 80, "endOffset": 84}, {"referenceID": 17, "context": "from structured and semi-structured sources like WikiPedia, DBPedia and WordNet [17], [18], [19], or combined with deep networks pre-trained on ImageNet [20].", "startOffset": 86, "endOffset": 90}, {"referenceID": 18, "context": "from structured and semi-structured sources like WikiPedia, DBPedia and WordNet [17], [18], [19], or combined with deep networks pre-trained on ImageNet [20].", "startOffset": 92, "endOffset": 96}, {"referenceID": 19, "context": "from structured and semi-structured sources like WikiPedia, DBPedia and WordNet [17], [18], [19], or combined with deep networks pre-trained on ImageNet [20].", "startOffset": 153, "endOffset": 157}, {"referenceID": 20, "context": "if a robot detected gaps in its perceptual knowledge [21].", "startOffset": 53, "endOffset": 57}, {"referenceID": 21, "context": "Wohlkinger et al downloaded 3D CAD models from public Web resources, creating a 3D object database acting as a proxy for the Web [22].", "startOffset": 129, "endOffset": 133}, {"referenceID": 19, "context": "Recent work by Young et al [20] proposed the combination of semantic and perceptual Web knowledge, using curated resources like DBPedia and", "startOffset": 27, "endOffset": 31}, {"referenceID": 22, "context": "The first acknowledges the fact that databases created from the Web without manual intervention will inevitably contain some level of noise, and so attempt to design loss layers able to cope with this issue [23], [12].", "startOffset": 207, "endOffset": 211}, {"referenceID": 11, "context": "The first acknowledges the fact that databases created from the Web without manual intervention will inevitably contain some level of noise, and so attempt to design loss layers able to cope with this issue [23], [12].", "startOffset": 213, "endOffset": 217}, {"referenceID": 10, "context": "images while preserving the visual variability necessary to successfully train deep nets [11], [24], [25].", "startOffset": 89, "endOffset": 93}, {"referenceID": 23, "context": "images while preserving the visual variability necessary to successfully train deep nets [11], [24], [25].", "startOffset": 95, "endOffset": 99}, {"referenceID": 24, "context": "images while preserving the visual variability necessary to successfully train deep nets [11], [24], [25].", "startOffset": 101, "endOffset": 105}, {"referenceID": 25, "context": "We tested two different CNN architectures to evaluate their robustness to this type of noise: AlexNet [26] and GoogLeNet [14].", "startOffset": 102, "endOffset": 106}, {"referenceID": 13, "context": "We tested two different CNN architectures to evaluate their robustness to this type of noise: AlexNet [26] and GoogLeNet [14].", "startOffset": 121, "endOffset": 125}, {"referenceID": 26, "context": "We used the Caffe [27] CNN implementation available on NVIDIA Deep Learning GPU Training System (DIGITS) for", "startOffset": 18, "endOffset": 22}, {"referenceID": 13, "context": "Although the former result is expected [14], the latter is quite surprising,", "startOffset": 39, "endOffset": 43}, {"referenceID": 19, "context": "results in lifelong object discovery [20].", "startOffset": 37, "endOffset": 41}, {"referenceID": 27, "context": "a reference task we focus on reproducing the ILSVRC12 database of 1000 categories [28].", "startOffset": 82, "endOffset": 86}, {"referenceID": 28, "context": "One widely adopted method to obtain meaningful expansions is to leverage WordNet [29], either considering the", "startOffset": 81, "endOffset": 85}, {"referenceID": 29, "context": "Although the maximum number of available images from each of them is 1000, we limited ourself to the top 200 results as in [30].", "startOffset": 123, "endOffset": 127}, {"referenceID": 30, "context": "In our experiments we used off-the-shelf CNN fc7 activations of an AlexNet pre-trained on ImageNet ILSVRC12 as features [31].", "startOffset": 120, "endOffset": 124}, {"referenceID": 31, "context": "These results prove empirically the presence of a domain shift between the ImageNet and Web underlying probability distributions [32].", "startOffset": 129, "endOffset": 133}, {"referenceID": 14, "context": "First row: examples of images from the Washington dataset [15].", "startOffset": 58, "endOffset": 62}, {"referenceID": 19, "context": "Second row: examples of images of Dataset A from [20].", "startOffset": 49, "endOffset": 53}, {"referenceID": 14, "context": "We conducted experiments on the Washington RGB-D object dataset [15].", "startOffset": 64, "endOffset": 68}, {"referenceID": 9, "context": "following [10], we represented the images with the last fully convolutional layer of the AlexNet network trained on the IN dataset and learned a linear SVM model on them.", "startOffset": 10, "endOffset": 14}, {"referenceID": 14, "context": "[15].", "startOffset": 0, "endOffset": 4}, {"referenceID": 19, "context": "For this task we considered the same setting described in [20]: a long-term autonomous mobile service robot equipped with", "startOffset": 58, "endOffset": 62}, {"referenceID": 32, "context": "an RGB-D camera recording everyday scenes in a human environment [33].", "startOffset": 65, "endOffset": 69}, {"referenceID": 33, "context": "From these surfaces it detects and segments objects which it isn\u2019t able to recognise [34].", "startOffset": 85, "endOffset": 89}, {"referenceID": 34, "context": "Although the correct object label might not be in the predicted set, the success is measured by evaluating the WUP similarity [35] between the ground truth and the proposed category with values ranging in {0, 1}.", "startOffset": 126, "endOffset": 130}, {"referenceID": 19, "context": "We run the experiments on Dataset A from [20], starting", "startOffset": 41, "endOffset": 45}], "year": 2017, "abstractText": "Deep networks thrive when trained on large scale data collections. This has given ImageNet a central role in the development of deep architectures for visual object classification. However, ImageNet was created during a specific period in time, and as such it is prone to aging, as well as dataset bias issues. Moving beyond fixed training datasets will lead to more robust visual systems, especially when deployed on robots in new environments which must train on the objects they encounter there. To make this possible, it is important to break free from the need for manual annotators. Recent work has begun to investigate how to use the massive amount of images available on the Web in place of manual image annotations. We contribute to this research thread with two findings: (1) a study correlating a given level of noisily labels to the expected drop in accuracy, for two deep architectures, on two different types of noise, that clearly identifies GoogLeNet as a suitable architecture for learning from Web data; (2) a recipe for the creation of Web datasets with minimal noise and maximum visual variability, based on a visual and natural language processing concept expansion strategy. By combining these two results, we obtain a method for learning powerful deep object models automatically from the Web. We confirm the effectiveness of our approach through object categorization experiments using our Web-derived version of ImageNet on a popular robot vision benchmark database, and on a lifelong object discovery task on a mobile robot.", "creator": "LaTeX with hyperref package"}}}