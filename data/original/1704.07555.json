{"id": "1704.07555", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "25-Apr-2017", "title": "Molecular De Novo Design through Deep Reinforcement Learning", "abstract": "This work introduces a method to tune a sequence-based generative model for molecular de novo design that through augmented episodic likelihood can learn to generate structures with certain specified desirable properties. We demonstrate how this model can execute a range of tasks such as generating analogues to a query structure and generating compounds predicted to be active against a biological target. As a proof of principle, the model is first trained to generate molecules that do not contain sulphur. As a second example, the model is trained to generate analogues to the drug Celecoxib, a technique that could be used for scaffold hopping or library expansion starting from a single molecule. Finally, when tuning the model towards generating compounds predicted to be active against the dopamine receptor D2, the model generates structures of which more than 95% are predicted to be active, including experimentally confirmed actives that have not been included in either the generative model nor the activity prediction model.", "histories": [["v1", "Tue, 25 Apr 2017 06:41:21 GMT  (876kb,D)", "http://arxiv.org/abs/1704.07555v1", null], ["v2", "Tue, 29 Aug 2017 12:31:19 GMT  (984kb,D)", "http://arxiv.org/abs/1704.07555v2", null]], "reviews": [], "SUBJECTS": "cs.AI", "authors": ["marcus olivecrona", "thomas blaschke", "ola engkvist", "hongming chen"], "accepted": false, "id": "1704.07555"}, "pdf": {"name": "1704.07555.pdf", "metadata": {"source": "META", "title": "Molecular De-Novo Design through Deep Reinforcement Learning", "authors": ["Marcus Olivecrona", "Thomas Blaschke", "Ola Engkvist", "Hongming Chen"], "emails": ["m.olivecrona@gmail.com"], "sections": [{"heading": null, "text": "This work introduces a method to tune a sequence-based generative model for molecular de novo design that through augmented episodic likelihood can learn to generate structures with certain specified desirable properties. We demonstrate how this model can execute a range of tasks such as generating analogues to a query structure and generating compounds predicted to be active against a biological target. As a proof of principle, the model is first trained to generate molecules that do not contain sulphur. As a second example, the model is trained to generate analogues to the drug Celecoxib, a technique that could be used for scaffold hopping or library expansion starting from a single molecule. Finally, when tuning the model towards generating compounds predicted to be active against the dopamine receptor D2, the model generates structures of which more than 95% are predicted to be active, including experimentally confirmed actives that have not been included in either the generative model nor the activity prediction model.\nKeywords: De Novo design; Recurrent Neural Networks; Reinforcement Learning"}, {"heading": "1 Introduction", "text": "Drug discovery is often described using the metaphor of finding a needle in a haystack. In this case, the haystack comprises the on the order of 1060\u221210100 synthetically feasible molecules [1], out of which we need to find an compound which satisfies the plethora of criteria such as bioactivity, drug metabolism and pharmacokinetic (DMPK) profile, synthetic accessibility, etc. The fraction of this space that we can synthesize and test at all - let alone efficiently - is negligible. By using algorithms to virtually design and assess molecules, de novo design offers ways to reduce the chemical space into something more manageable for the search of the needle.\nEarly de novo design algorithms [1] used structure based approaches to grow ligands to sterically and electronically fit the binding pocket of the target of interest [2, 3]. A limitation of these methods is that the molecules created often possess poor DMPK properties and can be synthetically intractable. In contrast, the ligand based approach is to by some means generate a large virtual library of chemical structures, and search this chemical space using a scoring function that typically takes into account several properties such as DMPK profiles, synthetic accessibility, bioactivity,\n*Correspondence: m.olivecrona@gmail.com External Sciences, Discovery Sciences, Innovative Medicines and Early Development Biotech Unit, AstraZeneca R&D Gothenburg, 43183 Mo\u0308lndal, Sweden Full list of author information is available at the end of the article\nand query structure similarity [4, 5]. One way to create such a virtual library is to use known chemical reactions alongside a set of available chemical building blocks, resulting in a large number of synthetically accessible structures [6]; another possibility is to use transformational rules based on the expertise of medicinal chemists to design analogues to a query structure. For example, Besnard et al. [7] applied a transformation rule approach to the design of novel dopamine receptor D2 (DRD2) receptor active compounds with specific polypharmacological profiles and appropriate DMPK profiles for a CNS indication. Although using either transformation or reaction rules can reliably and effectively generate novel structures, they are limited by the inherent rigidness and scope of the predefined rules and reactions.\nA third approach, known as inverse Quantitative Structure Activity Relationship (inverse QSAR), tackles the problem from a different angle: rather than first generating a virtual library and then using a QSAR model to score and search this library, inverse QSAR aims to map a favourable region in terms of predicted activity to the corresponding molecular structures [8\u2013 10]. This is not a trivial problem: first the solutions of molecular descriptors corresponding to the region need to be resolved using the QSAR model, and these then need be mapped back to the corresponding molecular structures. The fact that the molecular descriptors\nar X\niv :1\n70 4.\n07 55\n5v 1\n[ cs\n.A I]\n2 5\nA pr\n2 01\n7\nchosen need to be suitable both for building a forward predictive QSAR model as well as for translation back to molecular structure is one of the major obstacles for this type of approach.\nThe Recurrent Neural Network (RNN) is commonly used as a generative model for data of sequential nature, and have been used successfully for tasks such as natural language processing [11] and music generation [12]. Recently, there has been an increasing interest in using this type of generative model for the de novo design of molecules [13\u201315]. By using a data-driven method that attempts to learn the underlying probability distribution over a large set of chemical structures, the search over the chemical space can be reduced to only molecules seen as reasonable, without introducing the rigidity of rule based approaches. Segler et. al. demonstrated that an RNN trained on the canonicalized SMILES representation of molecules can learn both the syntax of the language as well as the distribution in chemical space [13]. They also show how further training of the model using a focused set of actives towards a biological target can produce a fine-tuned model which generates a high fraction of predicted actives.\nIn two recent studies, reinforcement learning [16] was used to fine tune pre-trained RNNs. Yu et. al. [15] use an adversarial network to estimate the expected return for state-action pairs sampled from the RNN, and by increasing the likelihood of highly rated pairs improves the generative network for tasks such as poem generation. Jaques et. al. [17] use Deep Q-learning to improve a pre-trained generative RNN by introducing two ways to score the sequences generated: one is a measure of how well the sequences adhere to music theory, and one is the likelihood of sequences according to the initial pre-trained RNN. Using this concept of prior likelihood they reduce the risk of forgetting what was initially learnt by the RNN, compared to a reward based only on the adherence to music theory. The authors demonstrate significant improvements over both the initial RNN as well as a reinforcement learning only approach. They later extend this method to several other tasks including the generation of SMILES, and optimize toward molecular properties such as cLogP [18] and QED drug-likeness [19]. However, they report that the method can lead to exploitation of the reward resulting in unrealistically simple molecules that are more likely to satisfy the optimization requirements than more complex structures [17].\nIn this study we propose a, to our knowledge, novel approach using reinforcement learning to tune RNNs for episodic tasks [16], in this case the task of generating molecules with given desirable properties. Through learning an augmented episodic likelihood which is a\ncomposite of prior likelihood [17] and a user defined scoring function, the method aims to fine-tune an RNN pre-trained on the ChEMBL database [20] towards generating desirable compounds. Compared to maximum likelihood estimation finetuning [13], this method can make use of negative as well as continuous scores, and may reduce the risk of catastrophic forgetting [21]. The method is applied to several different tasks of molecular de novo design, and an investigation was carried out to illustrate how the method affects the behaviour of the generative model on a mechanistic level."}, {"heading": "2 Methods", "text": ""}, {"heading": "2.1 Recurrent Neural Networks", "text": "A recurrent neural network is an architecture of neural networks designed to make use of the symmetry across steps in sequential data while simultaneously at every step keep track of the most salient information of previously seen steps, which may affect the interpretation of the current one [22]. It does so by introducing the concept of a cell (Figure 1). For any given step t, the cellt is a result of the previous cellt\u22121 and the current input xt\u22121. The content of cellt will determine both the output at the current step as well as influence the next cell state. The cell thus enables the network to have a memory of past events, which can be used when deciding how to interpret new data. These properties make an RNN particularly well suited for problems in the domain of natural language processing. In this setting, a sequence of words can be encoded into one-hot vectors the length of our vocabulary X. Two additional tokens, GO and EOS, may be added to denote the beginning and end of the sequence respectively."}, {"heading": "2.1.1 Learning the data", "text": "Training an RNN to learn from sequential data is typically done by maximum likelihood estimation, i.e. by maximizing the predicted log likelihood of the next token xt in the target sequence given tokens for the previous steps (Figure 1). At every step the model will produce a probability distribution over what the next character is likely to be, and the aim is to maximize the likelihood assigned to the correct token:\nL(\u0398) = \u2212 T\u2211\nt=1\nlogP (xt | xt\u22121, ..., x1)\nThe cost function L(\u0398), often applied to a subset of all training examples known as a batch, is minimized with respect to the network parameters \u0398. Given a predicted log likelihood logP of the target at step t, the gradient of the prediction with respect to \u0398 is used to make an update of \u0398. This method of fitting a neural network\nCellt=1\nP (x1)\nGO\nCellt=2\nP (x2)\nx1\nCellt=3\nP (x3)\nx2\nCellt=4\nP (EOS)\nx3\nFigure 1 Learning the data. Depiction of maximum likelihood training of an RNN. xt are the target sequence tokens we are trying to learn by maximizing P (xt) for each step.\nis called back-propagation. Due to the architecture of the RNN, changing the network parameters will not only affect the direct output at time t, but also affect the flow of information from the previous cell into the current one iteratively. This domino-like effect that the recurrence has on back-propagation gives rise to some particular problems, and back-propagation applied to RNNs is referred to as back-propagation through time (BPTT).\nBPTT is dealing with gradients that through the chain-rule contains terms which are multiplied by themselves many times, and this can lead to a phenomenon known as exploding and vanishing gradients. If these terms are not unity, the gradients quickly become either very large or very small. In order to combat this issue, Hochreiter et al. introduced the Long-Short-Term Memory cell [23], which through a more controlled flow of information can decide what information to keep and what to discard. The Gated Recurrent Unit is a simplified implementation of the Long-Short-Term Memory architecture that achieves much of the same effect at a reduced computational cost [24]."}, {"heading": "2.1.2 Generating new samples", "text": "Once an RNN has been trained on target sequences, it can then be used to generate new sequences that follow the conditional probability distributions learned from the training set. The first input - the GO token - is given and at every timestep after we sample an output token xt from the predicted probability distribution P (Xt) over our vocabulary X and use xt as our next input. Once the EOS token is sampled, the sequence is considered finished (Figure 2)."}, {"heading": "2.1.3 Tokenizing and one-hot encoding SMILES", "text": "A SMILES [25] string represents a molecule as a sequence of characters corresponding to atoms as well as special characters denoting opening and closure of rings and branches. The SMILES string is, in most cases, tokenized based on single character, except for atom types which comprise two characters such as \u201dCl\u201d\nCellt=1\nx1\nGO\nCellt=2\nx2\nCellt=3\nx3\nCellt=4\nEOS\nFigure 2 Generating sequences. Sequence generation by a trained RNN. Every timestep t we sample the next token of the sequence xt from the probability distribution given by the RNN, which is then fed in as the next input.\nand \u201dBr\u201d and special environments denoted by square brackets (e.g [nH]), where they are considered as one token. This method of tokenization resulted in 86 tokens present in the training data (see Appendix for the full list). Figure 3 exemplifies how a chemical structure is translated to both the SMILES and one-hot encoded representations.\nThere are many different ways to represent a single molecule using SMILES. Algorithms that always represent a certain molecule with the same SMILES are referred to as canonical. However, different implementations of the algorithms can still produce different SMILES.\nCl\nN\nNH\nClCc1c[nH]cn1\nCl C c 1 c nH c n 1\nC 0 1 0 0 0 0 0 0 0\nc 0 0 1 0 1 0 1 0 0\nn 0 0 0 0 0 0 0 1 0\n1 0 0 0 1 0 0 0 0 1\nnH 0 0 0 0 0 1 0 0 0\nCl 1 0 0 0 0 0 0 0 0\nGraph:\nSMILES:\nOne-hot\nencoding:\nFigure 3 Three representations of 4-(chloromethyl)-1H-imidazole. Depiction of a one-hot representation derived from the SMILES string of a molecule. Here a reduced vocabulary is shown, while in practice a much larger vocabulary that covers all tokens present in the training data is used."}, {"heading": "2.2 Reinforcement Learning", "text": "Consider an Agent, that given a certain state s \u2208 S has to choose which action a \u2208 A(s) to take, where S is the set of possible states and A(s) is the set of possible\nactions for that state. The policy \u03c0(a | s) of an Agent maps a state to the probability of each action taken therein. Many problems in reinforcement learning are framed as Markov decision processes, which means that the current state contains all information necessary to guide our choice of action, and that nothing more is gained by also knowing the history of past states. For most real problems, this is an approximation rather than a truth; however, we can generalize this concept to that of a partially observable Markov decision process, in which the Agent can interact with an incomplete representation of the environment. Let r(a | s) be the reward which acts as a measurement of how good it was to take an action at a certain state, and the longterm return G = \u2211T t=1 rt as the cumulative rewards collected up to time T . Since molecular desirability in general is only sensible for a completed SMILES, we will refer only to the return of a complete sequence.\nWhat reinforcement learning concerns, given a set of actions taken from some states and the rewards thus received, is how to improve the Agent policy in such a way as to increase the expected return E[G]. A task which has a clear endpoint at step T is referred to as an episodic task [16], where T corresponds to the length of the episode. Generating a SMILES is an example of an episodic task, which ends once the EOS token is sampled.\nThe states and actions used to train the agent can be generated both by the agent itself or by some other means. If they are generated by the agent itself the learning is referred to as on-policy, and if they are generated by some other means the learning is referred to as off-policy [16]."}, {"heading": "2.3 The Prior network", "text": "Maximum likelihood estimation was employed to train the initial RNN composed of 3 layers with 1024 Gated Recurrent Units (forget bias 5) in each layer. The RNN was trained on the RDKit [26] canonical SMILES of 1.5 million structures from ChEMBL [20] where the molecules were restrained to containing between 10 and 50 heavy atoms and elements \u2208 {H,B,C,N,O, F, Si, P, S, Cl, Br, I}. The model was trained with stochastic gradient descent for 50 000 steps using a batch size of 128, utilizing the Adam optimizer [27] (\u03b21 = 0.9, \u03b22 = 0.999, and = 10\n\u22128) with an initial learning rate of 0.001 and a 0.02 learning rate decay every 100 steps. Gradients were clipped to [\u22123, 3]. Tensorflow [28] was used to implement the Prior as well as the reinforcement learning Agent."}, {"heading": "2.4 The Agent network", "text": "We now frame the problem of generating a SMILES representation of a molecule with specified desirable properties via an RNN as a partially observable Markov decision process, where the agent must make a decision of what character to choose next given the current cell state. We use the probability distributions learnt by the aforementioned prior model as our initial prior policy. We will refer to the network using the prior policy simply as the Prior, and the network whose policy has since been modified as the Agent. The task is episodic, starting with the first step of the RNN and ending when the EOS token is sampled. The sequence of actions A = a1, a2, ..., aT during this episode represents the SMILES generated and the product of the action probabilities P (A) = \u220fT t=1 \u03c0(at | st) represents the model likelihood of the sequence formed. Let S(A) \u2208 [\u22121, 1]\nbe a scoring function that rates the desirability of the sequences formed using some arbitrary method. The goal now is to update the agent policy \u03c0 from the prior policy \u03c0prior in such a way as to increase the expected score for the generated sequences. However, we do want our new policy to be anchored to the prior policy, which we presume has learnt something about both the syntax of SMILES and distribution of molecular structure in ChEMBL. We therefore denote an augmented likelihood logP (A)U as a prior likelihood modulated by the desirability of a sequence:\nlogP (A)U = logP (A)prior + \u03c3S(A)\nwhere \u03c3 is a scalar coefficient. The return G(A) of a sequence A can in this case be seen as the agreement between the Agent likelihood logP (A)A and the augmented likelihood:\nG(A) = \u2212[logP (A)U \u2212 logP (A)A]2\nThe goal of the Agent is to learn a policy which maximizes the expected return, achieved by minimizing the cost function L(\u0398) = \u2212G. The Agent is trained in an on-policy fashion on batches of 128 generated sequences, making an update to \u03c0 after every batch has been generated and scored. A standard gradient descent optimizer with a learning rate of 0.0005 was used and gradients were clipped to [\u22123, 3].\nFigure 4 shows an illustration of how the Agent, initially identical to the Prior, is trained using reinforcement learning. The training shifts the probability distribution from that of the Prior towards a distribution modulated by the desirability of the structures."}, {"heading": "2.5 The DRD2 activity model", "text": "In one of our studies the objective of the Agent is to generate molecules that are predicted to be active against a biological target. The dopamine type 2 receptor DRD2 was chosen as the target, and corresponding bioactivity data was extracted from ExCAPE-DB [29]. In this dataset there are 7218 actives (pIC50 > 5) and 343204 inactives (pIC50 < 5). A subset of 100 000 inactive compounds was randomly selected. In order to decrease the nearest neighbour similarity between the training and testing structures, the actives were grouped in clusters based on their molecular similarity. The Jaccard [30] index, for binary vectors also known as the Tanimoto similarity, based on the RDKit implementation of binary Extended Connectivity Molecular Fingerprints with a diameter of 6 (ECFP6 [31]) was used as a similarity measure and the actives were clustered using the Butina clustering algorithm [32] in RDKit with a clustering cutoff of 0.4. In this algorithm,\ncentroid molecules will be selected, and everything with a similarity higher than 0.4 to these centroids will be assigned to the same cluster. The centroids are chosen such as to maximize the number of molecules that are assigned to any cluster. The clusters were sorted by size and iteratively assigned to test, validation, and train (assigned 4 clusters each iteration) to give a distribution of 16 , 1 6 , and 4 6 of the clusters respectively. The inactive compounds, of which less than 0.5% were found to belong to any of the clusters formed by the actives, were split randomly into the three sets using the same ratios.\nA support vector machine (SVM) classifier with a Gaussian kernel was built in Sci-Kit Learn [33] on the training set as a predictive model for DRD2 activity. The optimal C and Gamma values utilized in the final model were obtained from a grid search for the highest ROC-AUC performance on the validation set."}, {"heading": "3 Results and Discussion", "text": ""}, {"heading": "3.1 Structure generation by the Prior", "text": "After the initial training, 94% of the sequences generated by the Prior as described in Section 2.1.2 corresponded to valid molecular structures according to RDKit [26] parsing, out of which 90% are novel structures outside of the training set. A set of randomly chosen structures generated by the Prior, as well as by Agents trained in the subsequent examples, are shown in the Appendix. The process of generating a SMILES by the Prior is illustrated in Figure 5. For every token in the generated SMILES sequence, the conditional probability distribution over the vocabulary at this step according to the Prior is displayed. The sequence of distributions are depicted in Figure 5. For the first step, when no information other than the initial GO token is present, the distribution is an approximation of the distribution of first tokens for the SMILES in the ChEMBL training set. In this case \u201dO\u201d was sampled, but \u201dC\u201d, \u201dN\u201d, and the halogens were all likely as well. Corresponding log likelihoods were -0.3 for \u201dC\u201d, -2.7 for \u201dN\u201d, -1.8 for \u201dO\u201d, and -5.0 for \u201dF\u201d and \u201dCl\u201d.\nA few (unsurprising) observations: \u2022 Once the aromatic \u201dn\u201d has been sampled, the\nmodel has come to expect a ring opening (i.e. a number), since aromatic moieties by definition are cyclic. \u2022 Once an aromatic ring has been opened, the aromatic atoms \u201dc\u201d, \u201dn\u201d, \u201do\u201d, and \u201ds\u201d become probable, until 5 or 6 steps later when the model thinks it is time to close the ring. \u2022 The model has learnt the RDKit SMILES format of increasing ring numbers, and expects the first ring to be numbered \u201d1\u201d. Ring numbers can be reused, as in the two first rings in this example.\nO=C ( NC 1 CC 1 ) C 1 CCCN ( CC n 2 c c ( C ( F ) ( F ) F ) c c c 2 =O ) C 1 E\nC\nc N\nn O\no S\ns F\nCl\n(\n) 1\n2\n3\n4\n= E\nSampled SMILES\nC h ar a ct er s\n\u221215\n\u221210\n\u22125\n0\nloge P Structure\nFigure 5 How the model thinks while generating the molecule on the right. Conditional probability over the next token as a function of previously chosen ones according to the model. On the y-axis is shown the probability distribution for the character to be choosen at the current step, and on the x-axis is shown the character that in this instance was sampled. E = EOS.\nOnly once \u201d1\u201d has been sampled does it expect a ring to be numbered \u201d2\u201d and so on."}, {"heading": "3.2 Learning to avoid sulphur", "text": "As a proof of principle the Agent was first trained to generate molecules which do not contain sulphur, by defining the scoring function as:\nS(A) =  1 if valid and no S 0 if not valid\n\u22121 if contains S\nThe Agent was trained for 1000 steps using \u03c3 = 2, and 12800 SMILES sequences were sampled from both the Prior and Agent networks for comparison. After training, only 2% of the structures generated by the Agent contained sulphur, compared to 32% for those generated by the Prior. To explore what effect the training has on the structures generated, relevant properties for non sulphur containing structures generated by both the Prior and the Agent were compared. The molecular weight, cLogP, the number of rotatable bonds, and the number of aromatic rings were all calculated using RDKit. The experiment was repeated three times with different random seeds. There was no considerable difference in the mean values for the two models, however a small increase in the variance was observed for the agent. The results indicate that for sufficiently low learning rate and \u03c3, the structures generated by the Agent adhere to the underlying distribution learnt by the Prior, while achieving a much higher fraction of structures that do not contain sulfur."}, {"heading": "3.3 Similarity guided structure generation", "text": "The second task investigated was that of generating structures similar to a query structure. The Jaccard\nindex [30] Ji,j of the RDKit implementation of FCFP4 [31] fingerprints was used as a similarity measure between molecules i and j. Compared to the DRD2 activity model (Section 2.5), the feature invariant version of the fingerprints and the smaller diameter 4 was used in order to get a more fuzzy similarity measure. The scoring function was defined as:\nS(A) = \u22121 + 2\u00d7 min{Ji,j , k} k\nThis definition means that an increase in similarity is only rewarded up to the point of k \u2208 [0, 1], as well as scaling the reward from \u22121 (no overlap in the fingerprints between query and generated structure) to 1 (at least k degree of overlap). Celecoxib was chosen as our query structure, and we first investigated whether Celecoxib itself could be generated by using the high values of k = 1 and \u03c3 = 15. The Agent was trained for 1000 steps. After a 100 training steps the Agent starts to generate Celecoxib, and after 200 steps it predominately generates this structure (Figure 6).\nCelecoxib itself as well as many other similar structures appear in the ChEMBL training set used to build the Prior. An interesting question is whether the Agent could succeed in generating Celecoxib when these struc-\n0 200 400 600 800 1,000 0.25\n0.7\n1\nTraining steps\nA ve ra g e J\nCanonical prior k = 1 \u03c3 = 15 Canonical prior k = 0.7 \u03c3 = 12 Reduced prior k = 1 \u03c3 = 15 Reduced prior k = 0.7 \u03c3 = 12 Reduced prior k = 0.7 \u03c3 = 15\nFigure 6 Average similarity J of generated structures as a function of training steps. Difference in learning dynamics for the Agents based on the canonical Prior, and those based on a reduced Prior where everything more similar than J = 0.5 to Celecoxib have been removed.\ntures are not part of the chemical space covered by the Prior. To investigate this, all structures with a similarity to Celecoxib higher than 0.5 (corresponding to 1804 molecules) were removed from the training set and a new reduced Prior was trained. The prior likelihood of Celecoxib for the canonical and reduced Priors was compared, as well as the ability of the models to generate structures similar to Celecoxib. As expected, the prior probability of Celecoxib decreased when similar compounds were removed from the training set from loge P = \u221212.7 to loge P = \u221219.2, representing a reduction in likelihood of a factor of 700. An Agent was then trained using the same hyperparameters as before, but on the reduced Prior. After 400 steps, the Agent again managed to find Celecoxib, albeit requiring more time to do so. After 1000 steps, Celecoxib was the most commonly generated structure (about a third of the generated structures), followed by demethylated Celecoxib (also a third) whose SMILES is more likely according to the Prior with loge P = \u221215.2 but has a lower similarity (J = 0.87), resulting in an augmented likelihood equal to that of Celecoxib.\nThese experiments demonstrate that the Agent can be optimized using fingerprint based Jaccard similarity as the objective, but making copies of the query structure is hardly useful. A more useful example is that of generating analogues to the query structure, which could be a confirmed active against a biological target found in a High-Throughput-Screen for example. The Agent was therefore trained for 3000 steps,\nstarting from both the canonical as well as the reduced Prior, using k = 0.7 and \u03c3 = 12. The Agents based on the canonical Prior quickly converge to their targets, while the Agents based on the reduced Prior converged more slowly. For the Agent based on the reduced Prior where k = 1, the fact that Celecoxib and demethylated Celecoxib are given similar augmented likelihoods means that the average similarity converges to around 0.9 rather than 1.0. For the Agent based on the reduced Prior where k = 0.7, the lower prior likelihood of compounds similar to Celecoxib translates to a lower augmented likelihood, which lowers the average similarity of the structures generated by the Agent.\nTo explore whether this reduced prior likelihood could be offset with a higher value of \u03c3, an Agent starting from the reduced Prior was trained using \u03c3 = 15. Though taking slightly more time to converge than the Agent based on the canonical Prior, this Agent too could converge to the target similarity. The learning curves for the different model is shown in Figure 6.\nAn illustration of how the type of structures generated by the Agent evolves during training is shown in Figure 7. For the Agent based on the reduced Prior with k = 0.7 and \u03c3 = 15, three structures were randomly sampled every 100 training steps from step 0 up to step 400. At first, the structures are not similar to Celecoxib. After 200 steps, some features from Celecoxib have started to emerge, and after 300 steps the model generates mostly close analogues of Celecoxib.\nWe have investigated how various factors affect the learning behaviour of the Agent. In real drug discovery applications, we might be more interested in finding structures with modest similarity to our query molecules rather than very close analogues. For example, one of the structures sampled after 200 steps shown in Figure 7 displays a type of scaffold hopping where the sulphur functional group on one of the outer aromatic rings has been fused to the central pyrazole. The similarity to Celecoxib of this structure is 0.4, which may be a more interesting solution for scaffold-hopping purposes. One can choose hyperparameters and similarity criterion tailored to the desired output. Other types of similarity measures such as pharmacophoric fingerprints [34], Tversky substructure similarity [35], or presence/absence of certain pharmacophores could also be explored."}, {"heading": "3.4 Target activity guided structure generation", "text": "The third example, perhaps the one most interesting and relevant for drug discovery, is to optimize the Agent towards generating structures with predicted biological activity. This can be seen as a form of inverse QSAR, where the Agent is used to implicitly map high predicted probability of activity to molecular structure.\nDRD2 was chosen as the biological target. The clus-\ntering split of the DRD2 activity dataset as described\nin Section 2.5 resulted in 1405, 1287, and 4526 actives\nin the test, validation, and training sets respectively.\nThe average distance to the nearest neighbour in the\ntraining set for the test set compounds was 0.53. For\na random split of actives in sets of the same sizes this\ndistance was 0.69, indicating that the clustering had\nsignificantly decreased training-test set similarity which\nmimics the hit finding practice in drug discovery to\nidentify diverse hits to the training set. Most of the\nDRD2 actives are also included in the ChEMBL dataset\nused to train the Prior. To explore the effect of not hav-\ning the known actives included in the Prior, a reduced\nPrior was trained on a reduced subset of the ChEMBL trainingset where all DRD2 actives had been removed.\nThe optimal hyperparameters found for the SVM activity model were C = 27, \u03b3 = 2\u22126, resulting in a model whose performance is shown in Table 2. The good performance in general can be explained by the apparent difference between actives and inactive compounds as seen during the clustering, and the better\nRecovered test actives\nPactive 0.95 0.95 0.73 0.66\nRandomly selected\nPactive 1.00 0.99 0.98 1.00\nFigure 8 Structures designed by the Agent to target DRD2. Molecules generated by the Agent based on the reduced Prior. On the top are four of the test set actives that were recovered, and below are four randomly selected structures. The structures are annotated with the predicted probability of being active.\nperformance on the test set compared to the validation set could be due to slightly higher nearest neighbour similarity to the training actives (0.53 for test actives and 0.48 for validation actives).\nThe output of the DRD2 model for a given structure is an uncalibrated predicted probability of being active Pactive. This value is used to formulate the following scoring function:\nS(A) = \u22121 + 2\u00d7 Pactive\nThe Agents were trained for 3000 steps using \u03c3 = 7, and 128000 sequences were generated by both the Priors and their corresponding Agents. After training, the fraction of predicted actives according to the DRD2 model increased from 0.02 for structures generated by the reduced Prior to 0.96 for structures generated by the corresponding Agent network (Table 3). To see how well the structure-activity-relationship learnt by the activity model is transferred to the type of structures generated by the Agent RNN, the fraction of compounds with an ECFP6 Jaccard similarity greater than 0.4 to any active in the training and test sets was calculated. In some cases, the model recovered exact matches from the training and test sets (c.f. Segler et. al. [13]). The fraction of recovered test actives recovered by both Priors was 0%. The Agent derived from the canonical Prior managed to recover 13% test actives; the Agent derived from the reduced Prior recovered 7%. For the Agent derived from the reduced Prior, where the DRD2 actives were excluded from the Prior training set, this means that the model has learnt to generate \u201dnovel\u201d structures that have been seen neither by the DRD2 activity model nor the Prior, and are experimentally confirmed actives. We can formalize this observation by calculating the probability of a given generated sequence belonging to the set of test actives. For the canonical and reduced Priors, this probability was 0.17\u00d710\u22123 and 0.05\u00d710\u22123 respectively. Removing the actives from the Prior thus resulted in a threefold reduction in the probability of generating a structure from the set of test actives. For the Agents, the probabilities rose to 15.0\u00d710\u22123 and 40.2\u00d710\u22123 respectively, corresponding to an enrichment of a factor of 250 over the Prior models. Again the consequence of removing the actives from the Prior was a threefold reduction in the probability of generating a test set active: the\nCOc 1 c c c c c 1N1CCN (CCCCNC (=O) c 2 c c c c c 2 I ) CC1E\nC c N n O o S s F Cl ( ) 1 2 3 4 = E\nSampled SMILES\nC h ar a ct er s\nPrior\nCOc 1 c c c c c 1N1CCN (CCCCNC (=O) c 2 c c c c c 2 I ) CC1E\nSampled SMILES\nAgent\n\u221215\n\u221210\n\u22125\n0\nloge P\nFigure 9 A (small) change of mind. The conditional probability distributions when the DRD2 test set active \u2019COc1ccccc1N1CCN(CCCCNC(=O)c2ccccc2I)CC1\u2019 is generated by the Prior and an Agent trained using the DRD2 activity model, for the case where all actives used to build the activity model have been removed from the Prior. E = EOS.\ndifference between the two Priors is directly mirrored by their corresponding Agents.\nA few of the test set actives generated by the Agent based on the reduced Prior along with a few randomly selected generated structures are shown together with their predicted probability of activity in Figure 8. Encouragingly, the recovered test set actives vary considerably in their structure, which would not have been the case had the Agent converged to generating only a certain type of very similar predicted active compounds.\nRemoving the known actives from the training set of the Prior resulted in an Agent which shows a decrease in all metrics measuring the overlap between the known actives and the structures generated, compared to the Agent derived from the canonical Prior. Interestingly, the fraction of predicted actives did not change significantly. This indicates that the Agent derived from the reduced Prior has managed to find a similar chemical space to that of the canonical Agent, with structures that are equally likely to be predicted as active, but are less similar to the known actives. Whether or not these compounds are active will be dependent on the accuracy of the target activity model. Ideally, any predictive model to be used in conjunction with the generative model should cover a broad chemical space within its domain of applicability, since it initially has to assess representative structures of the dataset used to build the Prior [13].\nFigure 9 shows a comparison of the conditional probability distributions for the reduced Prior and its corresponding Agent when a molecule from the set of test actives is generated. It can be seen that the changes are not drastic with most of the trends learnt by the Prior being carried over to the Agent. However, a big change in the probability distribution even only at\none step can have a large impact on the likelihood of the sequence and could significantly alter the type of structures generated."}, {"heading": "4 Conclusion", "text": "To summarize, we believe that an RNN operating on the SMILES representation of molecules is a promising method for molecular de novo design. It is a data-driven generative model that does not rely on pre-defined building blocks and rules, which makes it clearly differentiated from traditional methods. In this study we extend upon previous work [13\u201315, 17] by introducing a reinforcement learning method which can be used to tune the RNN to generate structures with certain desirable properties through augmented episodic likelihood.\nThe model was tested on the task of generating sulphur free molecules as a proof of principle, indicating that the agent can find solutions within the space of the Prior while still reflecting the underlying probability distribution initially learnt. To evaluate if the model could be used to generate analogues to a query structure, the Agent was trained to generate structures similar to the drug Celecoxib. Even when all analogues of Celecoxib were removed from the Prior, the Agent could still locate the intended region of chemical space which was not part of the Prior. Further more, when trained towards generating predicted actives against the dopamine receptor DRD2, the Agent generates structures of which more than 95% are predicted to be active, and could recover test set actives even in the case where they were not included in either the activity model nor the Prior. Our results indicate that the method could be a useful tool for drug discovery.\nIt is clear that the qualities of the Prior are reflected in the corresponding Agents it produces. An exhaustive\nstudy which explores how parameters such as training set size, model size, regularization [36, 37], and training time would influence the quality and variety of structures generated by the Prior would be interesting. Another interesting avenue for future research might be that of token embeddings [38]. The method was found to be robust with respect to the hyperparameters \u03c3 and the learning rate.\nAll of the aforementioned examples used single parameter based scoring functions. In a typical drug discovery project, multiple parameters such as target activity, DMPK profile, synthetic accessibility etc. all need to be taken into account simultaneously. Applying this type of multi-parametric scoring functions to the model is an area requiring further research.\nEthics approval and consent to participate Not applicable.\nConsent for publication Not applicable.\nList of abbreviations \u2022 DMPK - Drug metabolism and pharmacokinetics \u2022 DRD2 - Dopamine receptor D2 \u2022 QSAR - Quantitive structure activity relationship \u2022 RNN - Recurrent neural network \u2022 Log - Natural logarithm \u2022 BPTT - Back-propagation through time \u2022 A - Sequence of tokens constituting a SMILES \u2022 Prior - An RNN trained on SMILES from ChEMBL used as a starting\npoint for the Agent\n\u2022 Agent - An RNN derived from a Prior, trained using reinforcement learning \u2022 J - Jaccard index \u2022 ECFP6 - Extended Molecular Fingerprints with diameter 6 \u2022 SVM - Support Vector Machine \u2022 FCFP4 - Extended Molecular Fingerprints with diameter 4 and\nfeature invariants\nCompeting interests The authors declare that they have no competing interests.\nFunding MO, HC, and OE are employed by AstraZeneca. TB has received funding from the European Union\u2019s Horizon 2020 research and innovation program under the Marie Sklodowska-Curie grant agreement No 676434, \u201dBig Data in Chemistry\u201d (\u201dBIGCHEM\u201d, http://bigchem.eu). The article reflects only the authors\u2019 view and neither the European Commission nor the Research Executive Agency (REA) are responsible for any use that may be made of the information it contains.\nAuthor\u2019s contributions MO contributed concept and implementation. All authors co-designed experiments. All authors contributed to the interpretation of results. MO wrote the manuscript. HC, TB, and OE reviewed and edited the manuscript. All authors read and approved the final manuscript."}, {"heading": "Acknowledgements", "text": "The authors thank Thierry Kogej and Christian Tyrchan for general assistance and discussion, and Dominik Peters for his expertise in LATEX."}], "references": [{"title": "Computer-based de novo design of drug-like molecules", "author": ["G. Schneider", "U. Fechner"], "venue": "Nat Rev Drug Discov 4(8), 649\u2013663", "citeRegEx": "1", "shortCiteRegEx": null, "year": 2005}, {"title": "The computer program ludi: A new method for the de novo design of enzyme inhibitors", "author": ["B\u00f6hm", "H.-J."], "venue": "Journal of Computer-Aided Molecular Design 6(1), 61\u201378", "citeRegEx": "2", "shortCiteRegEx": null, "year": 1992}, {"title": "Sprout: Recent developments in the de novo design of molecules", "author": ["V.J. Gillet", "W. Newell", "P. Mata", "G. Myatt", "S. Sike", "Z. Zsoldos", "A.P. Johnson"], "venue": "Journal of Chemical Information and Computer Sciences 34(1), 207\u2013217", "citeRegEx": "3", "shortCiteRegEx": null, "year": 1994}, {"title": "Visualization and virtual screening of the chemical universe database gdb-17", "author": ["L. Ruddigkeit", "L.C. Blum", "Reymond", "J.-L."], "venue": "Journal of Chemical Information and Modeling 53(1), 56\u201365", "citeRegEx": "4", "shortCiteRegEx": null, "year": 2013}, {"title": "Dogs: Reaction-driven de novo design of bioactive compounds", "author": ["M. Hartenfeller", "H. Zettl", "M. Walter", "M. Rupp", "F. Reisen", "E. Proschak", "S. Weggen", "H. Stark", "G. Schneider"], "venue": "PLOS Computational Biology 8, 1\u201312", "citeRegEx": "5", "shortCiteRegEx": null, "year": 2012}, {"title": "Reaction-driven de novo design, synthesis and testing of potential type ii kinase inhibitors", "author": ["G. Schneider", "T. Geppert", "M. Hartenfeller", "F. Reisen", "A. Klenner", "M. Reutlinger", "V. H\u00e4hnke", "J.A. Hiss", "H. Zettl", "S. Keppner", "B. Sp\u00e4nkuch", "P. Schneider"], "venue": "Future Medicinal Chemistry 3(4), 415\u2013424", "citeRegEx": "6", "shortCiteRegEx": null, "year": 2011}, {"title": "Automated design of ligands to polypharmacological profiles", "author": ["J. Besnard", "G.F. Ruda", "V. Setola", "K. Abecassis", "R.M. Rodriguiz", "Huang", "X.-P.", "S. Norval", "M.F. Sassano", "A.I. Shin", "L.A. Webster", "F.R.C. Simeons", "L. Stojanovski", "A. Prat", "N.G. Seidah", "D.B. Constam", "G.R. Bickerton", "K.D. Read", "W.C. Wetsel", "I.H. Gilbert", "B.L. Roth", "A.L. Hopkins"], "venue": "Nature 492(7428), 215\u2013220", "citeRegEx": "7", "shortCiteRegEx": null, "year": 2012}, {"title": "Inverse qspr/qsar analysis for chemical structure generation (from y to x)", "author": ["T. Miyao", "H. Kaneko", "K. Funatsu"], "venue": "Journal of Chemical Information and Modeling 56(2), 286\u2013299", "citeRegEx": "8", "shortCiteRegEx": null, "year": 2016}, {"title": "The signature molecular descriptor: 3", "author": ["C.J. Churchwell", "M.D. Rintoul", "S. Martin", "D.P.V. Jr.", "A. Kotu", "R.S. Larson", "L.O. Sillerud", "D.C. Brown", "Faulon", "J.-L."], "venue": "inverse-quantitative structure\u2013activity relationship of icam-1 inhibitory peptides. Journal of Molecular Graphics and Modelling 22(4), 263\u2013273", "citeRegEx": "9", "shortCiteRegEx": null, "year": 2004}, {"title": "A constructive approach for discovering new drug leads: Using a kernel methodology for the inverse-qsar problem", "author": ["W.W. Wong", "F.J. Burkowski"], "venue": "J Cheminform 1, 4\u20134", "citeRegEx": "10", "shortCiteRegEx": null, "year": 2009}, {"title": "Recurrent neural network based language model", "author": ["T. Mikolov", "M. Karafi\u00e1t", "L. Burget", "J. Cernock\u1ef3", "S. Khudanpur"], "venue": "Interspeech, vol. 2, p. 3", "citeRegEx": "11", "shortCiteRegEx": null, "year": 2010}, {"title": "A first look at music composition using lstm recurrent neural networks", "author": ["D. Eck", "J. Schmidhuber"], "venue": "Technical report", "citeRegEx": "12", "shortCiteRegEx": null, "year": 2002}, {"title": "Generating Focussed Molecule Libraries for Drug Discovery with Recurrent Neural Networks", "author": ["M.H.S. Segler", "T. Kogej", "C. Tyrchan", "M.P. Waller"], "venue": "ArXiv e-prints", "citeRegEx": "13", "shortCiteRegEx": null, "year": 2017}, {"title": "Automatic chemical design using a data-driven continuous representation of molecules", "author": ["R. G\u00f3mez-Bombarelli", "D.K. Duvenaud", "J.M. Hern\u00e1ndez-Lobato", "J. Aguilera-Iparraguirre", "T.D. Hirzel", "R.P. Adams", "A. Aspuru-Guzik"], "venue": "CoRR abs/1610.02415", "citeRegEx": "14", "shortCiteRegEx": null, "year": 2016}, {"title": "Seqgan: Sequence generative adversarial nets with policy gradient", "author": ["L. Yu", "W. Zhang", "J. Wang", "Y. Yu"], "venue": "CoRR abs/1609.05473", "citeRegEx": "15", "shortCiteRegEx": null, "year": 2016}, {"title": "Reinforcement Learning: An Introduction, 1st edn", "author": ["R. Sutton", "A. Barton"], "venue": "MIT Press, Cambridge, MA", "citeRegEx": "16", "shortCiteRegEx": null, "year": 1998}, {"title": "Tuning recurrent neural networks with reinforcement learning", "author": ["N. Jaques", "S. Gu", "R.E. Turner", "D. Eck"], "venue": "CoRR abs/1611.02796", "citeRegEx": "17", "shortCiteRegEx": null, "year": 2016}, {"title": "Partition coefficients and their uses", "author": ["A. Leo", "C. Hansch", "D. Elkins"], "venue": "Chemical Reviews 71(6), 525\u2013616", "citeRegEx": "18", "shortCiteRegEx": null, "year": 1971}, {"title": "Quantifying the chemical beauty of drugs", "author": ["G.R. Bickerton", "G.V. Paolini", "J. Besnard", "S. Muresan", "A.L. Hopkins"], "venue": "Nature Chemistry 4, 90\u201398", "citeRegEx": "19", "shortCiteRegEx": null, "year": 2012}, {"title": "Chembl: a large-scale bioactivity database for drug discovery", "author": ["A. Gaulton", "L.J. Bellis", "A.P. Bento", "J. Chambers", "M. Davies", "A. Hersey", "Y. Light", "S. McGlinchey", "D. Michalovich", "B. Al-Lazikani", "J.P. Overington"], "venue": "Nucleic Acids Res 40, 1100\u20131107", "citeRegEx": "20", "shortCiteRegEx": null, "year": 2012}, {"title": "An Empirical Investigation of Catastrophic Forgetting in Gradient-Based Neural Networks", "author": ["I.J. Goodfellow", "M. Mirza", "D. Xiao", "A. Courville", "Y. Bengio"], "venue": "ArXiv e-prints", "citeRegEx": "21", "shortCiteRegEx": null, "year": 2013}, {"title": "Deep Learning", "author": ["I. Goodfellow", "Y. Bengio", "A. Courville"], "venue": "MIT Press, Cambridge, MA", "citeRegEx": "22", "shortCiteRegEx": null, "year": 2016}, {"title": "Long short-term memory", "author": ["S. Hochreiter", "J. Schmidhuber"], "venue": "Neural  Olivecrona et al.  Page 12 of 16 Comput. 9(8), 1735\u20131780", "citeRegEx": "23", "shortCiteRegEx": null, "year": 1997}, {"title": "Empirical Evaluation of Gated Recurrent Neural Networks on Sequence Modeling", "author": ["J. Chung", "C. Gulcehre", "K. Cho", "Y. Bengio"], "venue": "ArXiv e-prints", "citeRegEx": "24", "shortCiteRegEx": null, "year": 2014}, {"title": "Adam: A method for stochastic optimization", "author": ["D.P. Kingma", "J. Ba"], "venue": "CoRR abs/1412.6980", "citeRegEx": "27", "shortCiteRegEx": null, "year": 2014}, {"title": "Excape-db: an integrated large scale dataset facilitating big data analysis in chemogenomics", "author": ["J. Sun", "N. Jeliazkova", "V. Chupakin", "Golib-Dzib", "J.-F.", "O. Engkvist", "L. Carlsson", "J. Wegner", "H. Ceulemans", "I. Georgiev", "V. Jeliazkov", "N. Kochev", "T.J. Ashby", "H. Chen"], "venue": "Journal of Cheminformatics 9(1), 17", "citeRegEx": "29", "shortCiteRegEx": null, "year": 2017}, {"title": "\u00c9tude comparative de la distribution florale dans une portion des Alpes et des Jura", "author": ["P. Jaccard"], "venue": "Bulletin del la Soci\u00e9t\u00e9 Vaudoise des Sciences Naturelles 37, 547\u2013579", "citeRegEx": "30", "shortCiteRegEx": null, "year": 1901}, {"title": "Extended-connectivity fingerprints", "author": ["D. Rogers", "M. Hahn"], "venue": "Journal of Chemical Information and Modeling 50(5), 742\u2013754", "citeRegEx": "31", "shortCiteRegEx": null, "year": 2010}, {"title": "Unsupervised data base clustering based on daylight\u2019s fingerprint and tanimoto similarity: A fast and automated way to cluster small and large data sets", "author": ["D. Butina"], "venue": "Journal of Chemical Information and Computer Sciences 39(4), 747\u2013750", "citeRegEx": "32", "shortCiteRegEx": null, "year": 1999}, {"title": "Scikit-learn: Machine learning in Python", "author": ["F. Pedregosa", "G. Varoquaux", "A. Gramfort", "V. Michel", "B. Thirion", "O. Grisel", "M. Blondel", "P. Prettenhofer", "R. Weiss", "V. Dubourg", "J. Vanderplas", "A. Passos", "D. Cournapeau", "M. Brucher", "M. Perrot", "E. Duchesnay"], "venue": "Journal of Machine Learning Research 12, 2825\u20132830", "citeRegEx": "33", "shortCiteRegEx": null, "year": 2011}, {"title": "Chemically Advanced Template Search (CATS) for Scaffold-Hopping and Prospective Target Prediction for \u2019Orphan\u2019 Molecules", "author": ["M. Reutlinger", "C.P. Koch", "D. Reker", "N. Todoroff", "P. Schneider", "T. Rodrigues", "G. Schneider"], "venue": "Mol Inform 32(2), 133\u2013138", "citeRegEx": "34", "shortCiteRegEx": null, "year": 2013}, {"title": "Using Tversky similarity searches for core hopping: finding the needles in the haystack", "author": ["S. Senger"], "venue": "J Chem Inf Model 49(6), 1514\u20131524", "citeRegEx": "35", "shortCiteRegEx": null, "year": 2009}, {"title": "Recurrent neural network regularization", "author": ["W. Zaremba", "I. Sutskever", "O. Vinyals"], "venue": "CoRR abs/1409.2329", "citeRegEx": "36", "shortCiteRegEx": null, "year": 2014}, {"title": "Regularization of neural networks using dropconnect", "author": ["L. Wan", "M. Zeiler", "S. Zhang", "Y. LeCun", "R. Fergus"], "venue": "Proceedings of the 30th International Conference on International Conference on Machine Learning - Volume 28. ICML\u201913, pp. 1058\u20131066", "citeRegEx": "37", "shortCiteRegEx": null, "year": 2013}, {"title": "A neural probabilistic language model", "author": ["Y. Bengio", "R. Ducharme", "P. Vincent", "C. Janvin"], "venue": "J. Mach. Learn. Res. 3, 1137\u20131155", "citeRegEx": "38", "shortCiteRegEx": null, "year": 2003}], "referenceMentions": [{"referenceID": 0, "context": "In this case, the haystack comprises the on the order of 10\u221210 synthetically feasible molecules [1], out of which we need to find an compound which satisfies the plethora of criteria such as bioactivity, drug metabolism and pharmacokinetic (DMPK) profile, synthetic accessibility, etc.", "startOffset": 96, "endOffset": 99}, {"referenceID": 0, "context": "Early de novo design algorithms [1] used structure based approaches to grow ligands to sterically and electronically fit the binding pocket of the target of interest [2, 3].", "startOffset": 32, "endOffset": 35}, {"referenceID": 1, "context": "Early de novo design algorithms [1] used structure based approaches to grow ligands to sterically and electronically fit the binding pocket of the target of interest [2, 3].", "startOffset": 166, "endOffset": 172}, {"referenceID": 2, "context": "Early de novo design algorithms [1] used structure based approaches to grow ligands to sterically and electronically fit the binding pocket of the target of interest [2, 3].", "startOffset": 166, "endOffset": 172}, {"referenceID": 3, "context": "Full list of author information is available at the end of the article and query structure similarity [4, 5].", "startOffset": 102, "endOffset": 108}, {"referenceID": 4, "context": "Full list of author information is available at the end of the article and query structure similarity [4, 5].", "startOffset": 102, "endOffset": 108}, {"referenceID": 5, "context": "One way to create such a virtual library is to use known chemical reactions alongside a set of available chemical building blocks, resulting in a large number of synthetically accessible structures [6]; another possibility is to use transformational rules based on the expertise of medicinal chemists to design analogues to a query structure.", "startOffset": 198, "endOffset": 201}, {"referenceID": 6, "context": "[7] applied a transformation rule approach to the design of novel dopamine receptor D2 (DRD2) receptor active compounds with specific polypharmacological profiles and appropriate DMPK profiles for a CNS indication.", "startOffset": 0, "endOffset": 3}, {"referenceID": 9, "context": "A third approach, known as inverse Quantitative Structure Activity Relationship (inverse QSAR), tackles the problem from a different angle: rather than first generating a virtual library and then using a QSAR model to score and search this library, inverse QSAR aims to map a favourable region in terms of predicted activity to the corresponding molecular structures [8\u2013 10].", "startOffset": 367, "endOffset": 374}, {"referenceID": 10, "context": "The Recurrent Neural Network (RNN) is commonly used as a generative model for data of sequential nature, and have been used successfully for tasks such as natural language processing [11] and music generation [12].", "startOffset": 183, "endOffset": 187}, {"referenceID": 11, "context": "The Recurrent Neural Network (RNN) is commonly used as a generative model for data of sequential nature, and have been used successfully for tasks such as natural language processing [11] and music generation [12].", "startOffset": 209, "endOffset": 213}, {"referenceID": 12, "context": "Recently, there has been an increasing interest in using this type of generative model for the de novo design of molecules [13\u201315].", "startOffset": 123, "endOffset": 130}, {"referenceID": 13, "context": "Recently, there has been an increasing interest in using this type of generative model for the de novo design of molecules [13\u201315].", "startOffset": 123, "endOffset": 130}, {"referenceID": 14, "context": "Recently, there has been an increasing interest in using this type of generative model for the de novo design of molecules [13\u201315].", "startOffset": 123, "endOffset": 130}, {"referenceID": 12, "context": "demonstrated that an RNN trained on the canonicalized SMILES representation of molecules can learn both the syntax of the language as well as the distribution in chemical space [13].", "startOffset": 177, "endOffset": 181}, {"referenceID": 15, "context": "In two recent studies, reinforcement learning [16] was used to fine tune pre-trained RNNs.", "startOffset": 46, "endOffset": 50}, {"referenceID": 14, "context": "[15] use an adversarial network to estimate the expected return for state-action pairs sampled from the RNN, and by increasing the likelihood of highly rated pairs improves the generative network for tasks such as poem generation.", "startOffset": 0, "endOffset": 4}, {"referenceID": 16, "context": "[17] use Deep Q-learning to improve a pre-trained generative RNN by introducing two ways to score the sequences generated: one is a measure of how well the sequences adhere to music theory, and one is the likelihood of sequences according to the initial pre-trained RNN.", "startOffset": 0, "endOffset": 4}, {"referenceID": 17, "context": "They later extend this method to several other tasks including the generation of SMILES, and optimize toward molecular properties such as cLogP [18] and QED drug-likeness [19].", "startOffset": 144, "endOffset": 148}, {"referenceID": 18, "context": "They later extend this method to several other tasks including the generation of SMILES, and optimize toward molecular properties such as cLogP [18] and QED drug-likeness [19].", "startOffset": 171, "endOffset": 175}, {"referenceID": 16, "context": "However, they report that the method can lead to exploitation of the reward resulting in unrealistically simple molecules that are more likely to satisfy the optimization requirements than more complex structures [17].", "startOffset": 213, "endOffset": 217}, {"referenceID": 15, "context": "In this study we propose a, to our knowledge, novel approach using reinforcement learning to tune RNNs for episodic tasks [16], in this case the task of generating molecules with given desirable properties.", "startOffset": 122, "endOffset": 126}, {"referenceID": 16, "context": "Through learning an augmented episodic likelihood which is a composite of prior likelihood [17] and a user defined scoring function, the method aims to fine-tune an RNN pre-trained on the ChEMBL database [20] towards generating desirable compounds.", "startOffset": 91, "endOffset": 95}, {"referenceID": 19, "context": "Through learning an augmented episodic likelihood which is a composite of prior likelihood [17] and a user defined scoring function, the method aims to fine-tune an RNN pre-trained on the ChEMBL database [20] towards generating desirable compounds.", "startOffset": 204, "endOffset": 208}, {"referenceID": 12, "context": "Compared to maximum likelihood estimation finetuning [13], this method can make use of negative as well as continuous scores, and may reduce the risk of catastrophic forgetting [21].", "startOffset": 53, "endOffset": 57}, {"referenceID": 20, "context": "Compared to maximum likelihood estimation finetuning [13], this method can make use of negative as well as continuous scores, and may reduce the risk of catastrophic forgetting [21].", "startOffset": 177, "endOffset": 181}, {"referenceID": 21, "context": "1 Recurrent Neural Networks A recurrent neural network is an architecture of neural networks designed to make use of the symmetry across steps in sequential data while simultaneously at every step keep track of the most salient information of previously seen steps, which may affect the interpretation of the current one [22].", "startOffset": 321, "endOffset": 325}, {"referenceID": 22, "context": "introduced the Long-Short-Term Memory cell [23], which through a more controlled flow of information can decide what information to keep and what to discard.", "startOffset": 43, "endOffset": 47}, {"referenceID": 23, "context": "The Gated Recurrent Unit is a simplified implementation of the Long-Short-Term Memory architecture that achieves much of the same effect at a reduced computational cost [24].", "startOffset": 169, "endOffset": 173}, {"referenceID": 15, "context": "A task which has a clear endpoint at step T is referred to as an episodic task [16], where T corresponds to the length of the episode.", "startOffset": 79, "endOffset": 83}, {"referenceID": 15, "context": "If they are generated by the agent itself the learning is referred to as on-policy, and if they are generated by some other means the learning is referred to as off-policy [16].", "startOffset": 172, "endOffset": 176}, {"referenceID": 19, "context": "5 million structures from ChEMBL [20] where the molecules were restrained to containing between 10 and 50 heavy atoms and elements \u2208 {H,B,C,N,O, F, Si, P, S, Cl, Br, I}.", "startOffset": 33, "endOffset": 37}, {"referenceID": 24, "context": "The model was trained with stochastic gradient descent for 50 000 steps using a batch size of 128, utilizing the Adam optimizer [27] (\u03b21 = 0.", "startOffset": 128, "endOffset": 132}, {"referenceID": 25, "context": "The dopamine type 2 receptor DRD2 was chosen as the target, and corresponding bioactivity data was extracted from ExCAPE-DB [29].", "startOffset": 124, "endOffset": 128}, {"referenceID": 26, "context": "The Jaccard [30] index, for binary vectors also known as the Tanimoto similarity, based on the RDKit implementation of binary Extended Connectivity Molecular Fingerprints with a diameter of 6 (ECFP6 [31]) was used as a similarity measure and the actives were clustered using the Butina clustering algorithm [32] in RDKit with a clustering cutoff of 0.", "startOffset": 12, "endOffset": 16}, {"referenceID": 27, "context": "The Jaccard [30] index, for binary vectors also known as the Tanimoto similarity, based on the RDKit implementation of binary Extended Connectivity Molecular Fingerprints with a diameter of 6 (ECFP6 [31]) was used as a similarity measure and the actives were clustered using the Butina clustering algorithm [32] in RDKit with a clustering cutoff of 0.", "startOffset": 199, "endOffset": 203}, {"referenceID": 28, "context": "The Jaccard [30] index, for binary vectors also known as the Tanimoto similarity, based on the RDKit implementation of binary Extended Connectivity Molecular Fingerprints with a diameter of 6 (ECFP6 [31]) was used as a similarity measure and the actives were clustered using the Butina clustering algorithm [32] in RDKit with a clustering cutoff of 0.", "startOffset": 307, "endOffset": 311}, {"referenceID": 29, "context": "A support vector machine (SVM) classifier with a Gaussian kernel was built in Sci-Kit Learn [33] on the training set as a predictive model for DRD2 activity.", "startOffset": 92, "endOffset": 96}, {"referenceID": 26, "context": "index [30] Ji,j of the RDKit implementation of FCFP4 [31] fingerprints was used as a similarity measure between molecules i and j.", "startOffset": 6, "endOffset": 10}, {"referenceID": 27, "context": "index [30] Ji,j of the RDKit implementation of FCFP4 [31] fingerprints was used as a similarity measure between molecules i and j.", "startOffset": 53, "endOffset": 57}, {"referenceID": 0, "context": "This definition means that an increase in similarity is only rewarded up to the point of k \u2208 [0, 1], as well as scaling the reward from \u22121 (no overlap in the fingerprints between query and generated structure) to 1 (at least k degree of overlap).", "startOffset": 93, "endOffset": 99}, {"referenceID": 30, "context": "Other types of similarity measures such as pharmacophoric fingerprints [34], Tversky substructure similarity [35], or presence/absence of certain pharmacophores could also be explored.", "startOffset": 71, "endOffset": 75}, {"referenceID": 31, "context": "Other types of similarity measures such as pharmacophoric fingerprints [34], Tversky substructure similarity [35], or presence/absence of certain pharmacophores could also be explored.", "startOffset": 109, "endOffset": 113}, {"referenceID": 12, "context": "[13]).", "startOffset": 0, "endOffset": 4}, {"referenceID": 12, "context": "Ideally, any predictive model to be used in conjunction with the generative model should cover a broad chemical space within its domain of applicability, since it initially has to assess representative structures of the dataset used to build the Prior [13].", "startOffset": 252, "endOffset": 256}, {"referenceID": 12, "context": "In this study we extend upon previous work [13\u201315, 17] by introducing a reinforcement learning method which can be used to tune the RNN to generate structures with certain desirable properties through augmented episodic likelihood.", "startOffset": 43, "endOffset": 54}, {"referenceID": 13, "context": "In this study we extend upon previous work [13\u201315, 17] by introducing a reinforcement learning method which can be used to tune the RNN to generate structures with certain desirable properties through augmented episodic likelihood.", "startOffset": 43, "endOffset": 54}, {"referenceID": 14, "context": "In this study we extend upon previous work [13\u201315, 17] by introducing a reinforcement learning method which can be used to tune the RNN to generate structures with certain desirable properties through augmented episodic likelihood.", "startOffset": 43, "endOffset": 54}, {"referenceID": 16, "context": "In this study we extend upon previous work [13\u201315, 17] by introducing a reinforcement learning method which can be used to tune the RNN to generate structures with certain desirable properties through augmented episodic likelihood.", "startOffset": 43, "endOffset": 54}, {"referenceID": 32, "context": "study which explores how parameters such as training set size, model size, regularization [36, 37], and training time would influence the quality and variety of structures generated by the Prior would be interesting.", "startOffset": 90, "endOffset": 98}, {"referenceID": 33, "context": "study which explores how parameters such as training set size, model size, regularization [36, 37], and training time would influence the quality and variety of structures generated by the Prior would be interesting.", "startOffset": 90, "endOffset": 98}, {"referenceID": 34, "context": "Another interesting avenue for future research might be that of token embeddings [38].", "startOffset": 81, "endOffset": 85}], "year": 2017, "abstractText": "This work introduces a method to tune a sequence-based generative model for molecular de novo design that through augmented episodic likelihood can learn to generate structures with certain specified desirable properties. We demonstrate how this model can execute a range of tasks such as generating analogues to a query structure and generating compounds predicted to be active against a biological target. As a proof of principle, the model is first trained to generate molecules that do not contain sulphur. As a second example, the model is trained to generate analogues to the drug Celecoxib, a technique that could be used for scaffold hopping or library expansion starting from a single molecule. Finally, when tuning the model towards generating compounds predicted to be active against the dopamine receptor D2, the model generates structures of which more than 95% are predicted to be active, including experimentally confirmed actives that have not been included in either the generative model nor the activity prediction model.", "creator": "LaTeX with hyperref package"}}}