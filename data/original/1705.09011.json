{"id": "1705.09011", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "25-May-2017", "title": "Principled Hybrids of Generative and Discriminative Domain Adaptation", "abstract": "We propose a probabilistic framework for domain adaptation that blends both generative and discriminative modeling in a principled way. By maximizing both the marginal and the conditional log-likelihoods, models derived from this framework can use both labeled instances from the source domain as well as unlabeled instances from both source and target domains. Under this framework, we show that the popular reconstruction loss of autoencoder corresponds to an upper bound of the negative marginal log-likelihoods of unlabeled instances, where marginal distributions are given by proper kernel density estimations. This provides a way to interpret the empirical success of autoencoders in domain adaptation and semi-supervised learning. We instantiate our framework using neural networks, and build a concrete model, DAuto. Empirically, we demonstrate the effectiveness of DAuto on text, image and speech datasets, showing that it outperforms related competitors when domain adaptation is possible.", "histories": [["v1", "Thu, 25 May 2017 01:02:16 GMT  (1121kb,D)", "http://arxiv.org/abs/1705.09011v1", null], ["v2", "Fri, 27 Oct 2017 19:29:31 GMT  (1122kb,D)", "http://arxiv.org/abs/1705.09011v2", null]], "reviews": [], "SUBJECTS": "cs.LG cs.AI", "authors": ["han zhao", "zhenyao zhu", "junjie hu", "adam coates", "geoff gordon"], "accepted": false, "id": "1705.09011"}, "pdf": {"name": "1705.09011.pdf", "metadata": {"source": "CRF", "title": "Principled Hybrids of Generative and Discriminative Domain Adaptation", "authors": ["Han Zhao", "Zhenyao Zhu", "Junjie Hu", "Adam Coates", "Geoff Gordon", "HAN ZHAO", "ZHENYAO ZHU", "JUNJIE HU", "ADAM COATES", "GEOFF GORDON"], "emails": ["HAN.ZHAO@CS.CMU.EDU", "ZHENYAOZHU@BAIDU.COM", "JUNJIEH@CMU.EDU", "ADAMCOATES@BAIDU.COM", "GGORDON@CS.CMU.EDU"], "sections": [{"heading": "1. Introduction", "text": "Making accurate predictions relies heavily on the existence of labeled data for the desired tasks. However, generating labeled data for new learning tasks is often time-consuming. As a result, this poses an obstacle for applying machine learning methods to broader application domains. Domain adaptation focuses on the situation where we only have access to labeled data from source domain, which is assumed to be different from the target domain we want to apply our model to. The goal of domain adaptation algorithms under this setting is to generalize better in the target domain by exploiting labeled data in the source domain and unlabeled data in the target domain. We propose a probabilistic framework for domain adaptation that combines both generative and discriminative modeling in a principled way. We start from a very simple yet general generative model, and show that a special choice on the prior distribution of model parameters lead to the usual discriminative modeling. Due to its generative nature, the framework provides us a principled way to use unlabeled instances from both the source and the target domains. Under this framework, if we use non-parametric kernel density estimators for the marginal distribution over instances, we can show that the popular reconstruction loss of autoencoders corresponds to an upper bound of the negative marginal log-likelihoods of unlabeled instances. This provides a novel probabilistic interpretation on why unsupervised training with general autoencoders may help with discriminative tasks, though\n\u2217. Part of the work was done when HZ was an intern at SVAIL, Baidu Research.\nar X\niv :1\n70 5.\n09 01\n1v 1\n[ cs\n.L G\n] 2\n5 M\ninterpretations exist for specific variants of autoencoders, e.g., denoising autoencoders (Vincent et al., 2008) and contractive autoencoders (Rifai et al., 2011). Our interpretation may also be used to explain the recent success of autoencoders in semi-supervised learning (Rasmus et al., 2015). We instantiate our framework with flexible neural networks, which are powerful function approximators, leading to a concrete model, DAuto. DAuto is designed to achieve the following three objectives simultaneously in a unified model: 1). It learns representations that are informative for the main learning task in the source domain. 2). It learns invariant features that are indistinguishable between the source and the target domains. 3). It learns robust representations under reconstruction loss for instances in both domains. To demonstrate the effectiveness of DAuto, we first conduct a synthetic experiment using the MNIST dataset, showing its superior performance when adaptation is possible. We further compare DAuto with state-of-the-art models on the Amazon benchmark dataset. As another contribution, we extend DAuto so that it can also be applied in time-series modeling. We evaluate it on a speech recognition task, showing its effectiveness in improving recognition accuracies when trained from utterances with different accents. In the end, we also provide qualitative analysis in the case where domain adaptation is hard and all the methods we test fail."}, {"heading": "2. Related Work", "text": "Recently, due to the availability of rich data and powerful computational resources, non-linear representations and hypothesis classes for domain adaptation have been increasingly explored (Glorot et al., 2011; Baktashmotlagh et al., 2013; Chen et al., 2012; Ajakan et al., 2014; Ganin et al., 2016). This line of works focuses on building common and robust feature representations among multiple domains using either supervised neural networks (Glorot et al., 2011), or unsupervised pretraining using denoising auto-encoders (Vincent et al., 2008, 2010). Other works focus on learning feature transformations such that the feature distributions in the source and target domains are close to each other (Ben-David et al., 2007, 2010; Ajakan et al., 2014; Ganin et al., 2016). In practice it was observed that unsupervised pretraining using stacked denoising auto-encoders (mSDA) (Vincent et al., 2008; Chen et al., 2012) often improves the generalization accuracy (Ganin et al., 2016). One of the limitations of mSDA is that it needs to explicitly form the covariance matrix of input features and then solves a linear system, which can be computationally expensive in high dimensional settings. On the other hand, it is also not clear how to extend mSDA so that it can also be applied for time-series modeling. Domain adversarial neural networks (DANN) is a discriminative model to learn domain-invariant features (Ganin et al., 2016). It can be formulated as a minimax problem where the feature transformation component tries to learn a representation to confuse a following domain classification component. DANN also enjoys a nice theoretical justification to learn a feature map to decrease the A-distance measure (Ben-David et al., 2007) between source and target domains. Other distance measures between distributions can also be applied. Tzeng et al. (2014) and Long et al. (2015) propose similar models where the maximum mean discrepancy (MMD) (Gretton et al., 2012) between two domains are minimized. Very recently, Bousmalis et al. (2016) propose a model where orthogonal representations that are shared between domains and unique to each domain are learned simultaneously. They achieve this goal by incorporating both similarity and difference penalties for features into the objective function. Finally, domain adaptation can also be viewed as a semi-supervised learning problem by ignoring the domain shift, where source instances are treated as labeled data and target instances are unlabeled data (Dai et al., 2007; Rasmus et al., 2015).\nDAuto improves over mSDA (Chen et al., 2012) when the dimension of feature vectors is high and as a result the covariance matrix cannot be explicitly formed. As we will see later, DAuto can also be naturally extended to time-series data. On the other hand, compared with DANN, DAuto has a clear probabilistic generative model interpretation and provides us a principled way to use unlabeled data from both the source and target domains during training."}, {"heading": "3. A Principled Hybrid Model for Domain Adaptation", "text": "Generative models provide a principled way to use both labeled data from source domain and unlabeled data from both domains. In this section we start with a general probabilistic framework for domain adaptation using a principled hybrid of both generative and discriminative models. We then provide a concrete instantiation of our framework, and show that it leads to popular reconstructionbased domain adaptation models. Our derivation can also be used to explain the prevalence and success of autoencoders in both domain adaptation and semi-supervised learning (Rasmus et al., 2015; Bousmalis et al., 2016). We end this section by proposing the DAuto model that follows our probabilistic framework and combines the minimax adversarial loss as a regularizer for domain adaptation."}, {"heading": "3.1 A Probabilistic Framework for Domain Adaptation", "text": "Let x \u2208 Rd be an input instance and y be its target variable: y \u2208 {0, 1} in the classification setting or y \u2208 R in the regression setting. A fully generative model can be specified as follows:\np(x, y;\u03c6, \u03c8) = p(x;\u03c6)p(y | x;\u03c8)p(\u03c6, \u03c8)\nwhere \u03c6 is the model parameter that governs the generation process of x; \u03c8 is the model parameter for the conditional distribution y | x, and p(\u03c6, \u03c8) is the prior distribution over both model parameters. At first glance, one might find the above generative model unsuitable under the domain adaptation setting since it implicitly assumes that the marginal distribution p(x;\u03c6) is shared among all instances from both domains. The key point that makes the above framework still valid under domain adaptation lies in the possible richness of the generation process parametrized by \u03c6: although the marginal distribution may be different in the input space Rd, we can still find proper transformation f : Rd \u2192 RD such that the induced marginal distributions (by f ) over both domains are similar in RD (Fig. 1). In fact, this is a necessary and implicit assumption that underlies the success of recent regularization based discriminative models (Tzeng et al., 2014; Long et al., 2015; Ganin et al., 2016). To better understand this, we illustrate the generative process for x in Fig. 1. Using the above joint model, if we further assume that the prior distribution p(\u03c6, \u03c8) factorizes as p(\u03c6, \u03c8) = p(\u03c6)p(\u03c8), and if we only optimize over model parameters \u03c8 (a subspace of {\u03c6, \u03c8}) by maximizing the likelihood function, then effectively we reduce our joint model over both x and y into discriminative models that only contain parameters \u03c8. Note that in this reduction, the assumption that p(\u03c6, \u03c8) = p(\u03c8)p(\u03c6) is crucial, otherwise the optimal \u03c8\u2217 will still depend on \u03c6, i.e., \u03c8\u2217 = \u03c8\u2217(\u03c6). Now consider the case where \u03c6 and \u03c8 have a common subspace, i.e., some model parameters are shared in both the generation process of x and y | x. Clearly under this case the factorization assumption of the prior distribution does not hold anymore, and we cannot hope to recover a discriminative model by simply optimizing \u03c8. To make our discussion concrete, think if we have p(x;\u03c6) = g(f(x; \u03b6);\u03c6\\\u03b6) and p(y | x;\u03c8) = h(f(x; \u03b6), y;\u03c8\\\u03b6), where \u03b6 are the shared parameters\nof both \u03c6 and \u03c8. Domain adaptation is possible under this setting whenever f(\u00b7; \u03b6) forms a rich class of transformations so that unlabeled instances from both domains have similar induced marginal distribution. This is a necessary condition for domain adaptation to succeed under our framework. As a generative model, it also allows algorithms to use unlabeled instances from both domains to optimize the marginal likelihood function p(x;\u03c6), which also helps the predictive task p(y | x;\u03c8) due to the shared component \u03b6."}, {"heading": "3.2 An Instantiation using Kernel Density Estimation", "text": "Now we use our probabilistic framework and instantiate it with proper choices of both the marginal distributions as well as the conditional distributions. On one hand, we would like to make as few assumptions as possible about the generation process of x; on the other hand, the model should be rich enough such that even though instances from source and target domains may have different distributions in Rd, the model contains flexible transformation under which the induced distributions are similar enough in both domains. Taking both considerations into account, we propose to use nonparametric kernel density estimator (KDE) to model p(x;\u03c6). Specifically, let K(\u00b7) be the chosen kernel and {xi}ni=1 be a set of unlabeled instances. Our KDE for p(x;\u03c6) is given by:\np(x;\u03c6) \u221d 1 nw n\u2211 i=1 K ( x\u2212 g(f(xi; \u03b6);\u03c6\\\u03b6) w ) (1)\nwhere w > 0 is the bandwidth and f : Rd \u2192 RD and g : RD \u2192 Rd are two feature transformations. Our definition of KDE differs from the original one (Wassermann, 2006) by the additional parametric transformations g \u25e6 f applied to x, and when g \u25e6 f = I , the identity map, our definition reduces to the original one. Note that when applied to the source and target domains separately, the original KDE does not give similar density estimations if their empirical distributions are far from each other, which is exactly the case under domain adaptation.\nFor the conditional distribution y | x, depending on whether y \u2208 R or y \u2208 {0, 1}, typical choices include linear regression or logistic regression. While both these two models are linear and limited, we can first augment them with rich nonlinear transformation applied to the input instance. Note that the transformation f , along with its parameters, are shared between both p(x;\u03c6) and p(y | x;\u03c8). Finally, our model is completed by specifying the prior distribution as follows: p(\u03c6, \u03c8) = p0(\u03c6, \u03c8)\u03b4(\u03c6(\u03b6)\u2212 \u03c8(\u03b6)), where p0(\u03c6, \u03c8) is a base distribution over \u03c6, \u03c8, and \u03b4(\u00b7) is the Dirac delta function. The \u03b4(\u00b7) constrains the common parameter \u03b6 to be shared by both p(x;\u03c6) and p(y | x;\u03c8)."}, {"heading": "3.3 Learning by Maximizing Joint Likelihood", "text": "One of the advantages a generative model lends us is a principled way of using unlabeled data from both domains. Let {(xi, yi)}mi=1 be labeled data from source domain and {xj}nj=1 be unlabeled data from both domains. Instead of just maximizing the conditional likelihood using labeled data, we can jointly maximize both the conditional likelihood and the marginal likelihood:\n\u03c8\u2217, \u03c6\u2217 = argmin \u03c8,\u03c6 \u2212 n\u2211 j=1 log p(xj ;\u03c6)\u2212 m\u2211 i=1 log p(yi | xi;\u03c8) (2)\nIt is clear that the negative conditional log-likelihood function is exactly the cross-entropy loss between the true label yi and its predicted counterpart. For the negative marginal likelihood, if we choose a Gaussian kernel and plug in our KDE estimator given in (1), we have:\n\u2212 log p(xj ;\u03c6) \u221d \u2212 log  1 nw n\u2211 j\u2032=1 exp ( \u2212||xj \u2212 g(f(xj\u2032 ; \u03b6);\u03c6\\\u03b6)|| 2 2 2w2 ) \u2264 \u2212 log 1\nnw exp\n( \u2212||xj \u2212 g(f(xj ; \u03b6);\u03c6\\\u03b6)|| 2 2\n2w2 ) = \u03bb \u00b7 ||xj \u2212 g(f(xj ; \u03b6);\u03c6\\\u03b6)||22 + c (3)\nwhere \u03bb > 0 only depends on the bandwidth and c is a constant that does not depend on xj . The upper bound becomes tight as w \u2192 0. Note that in the above derivation we omit the prior distribution p(\u03c6, \u03c8) = p0(\u03c6, \u03c8)\u03b4(\u03c6(\u03b6)\u2212\u03c8(\u03b6)) by assuming that p0 is a flat constant distribution. If other design choice is made, e.g., a Gaussian over \u03c6(\u03c8), then there will be a corresponding `2 regularization term for the model parameters \u03c6(\u03c8). Putting all together, maximizing a combination of conditional and marginal likelihoods correspond to the following unconstrained minimization problem:\nminimize\u03c8,\u03c6 \u2212 m\u2211 i=1 log p(yi | xi;\u03c6) + \u03bb n\u2211 j=1 ||xj \u2212 g(f(xj ; \u03b6);\u03c8\\\u03b6)||22 (4)\nRemark. The maximum of joint likelihood estimator is also the maximum-a-posteriori estimator, leading to a fully probabilistic interpretation of (4). The second term in the objective function has an interesting explanation: it essentially measures the reconstruction error after a transformation by g\u25e6f . Based on (3), if we interpret f as an encoder and g as the corresponding decoder, then minimizing the reconstruction loss from an autoencoder exactly corresponds to maximizing a lower bound of the marginal probability distribution p(x), where p(x) is given by our kernel density estimation. Furthermore, the squared `2 measure in the reconstruction error is not restricted: for example, if instead of a Gaussian kernel we chose the Laplacian kernel, then we would have an `1 measure of the reconstruction loss in (4). This interpretation may also be used to explain the practical success of autoencoders in semi-supervised learning (Rasmus et al., 2015)."}, {"heading": "3.4 A Concrete Model (DAuto)", "text": "We use neural networks as flexible function approximators for our desired transformations f and g. Specifically, we use fully-connected neural networks to parametrize f and g and softmax function to parametrize h. If y \u2208 R, we can simply change the softmax function to be an affine function as the\noutput. For the simplicity of discussion, assume we only use a one-layer fully connected network to represent f and g: f(x) = \u03c3(W1x) and g(z) = \u03c3(W2z), where W1 \u2208 RD\u00d7d, W2 \u2208 Rd\u00d7D and \u03c3(\u00b7) is an element-wise nonlinear activation function, e.g., the rectify linear unit. For ease of notation, we also omit the translation terms from above affine transformations. Let h(z) = softmax(Whz) be the softmax layer to compute the conditional probability of class assignment. Although our model has the capacity to learn the shared transformation f under which unlabeled data from both domains have similar marginal distributions, the objective function discussed so far does not necessarily induce such a transformation. For the purpose of domain adaptation, it is necessary to add a regularizer that enforces this constraint. One popular and effective choice is the A-distance introduced by (Kifer et al., 2004; Ben-David et al., 2007, 2010). It can be shown that the A-distance can be approximated by the binary classification error of the domain classifier that discriminates instances from the source or the target domain (Ben-David et al., 2007). The intuition here is: given a fixed class of binary labeling functions, if there exists a function that is easy to tell instances in the source domain from those in the target domain, then the distance between these two domains is large. On the other hand, if the set of labeling functions are confused by such task, then we can think the distance between these two domains is small. Following DANN, here we take the same approach: let h\u0303 = softmax(Wdz) be the domain classifier where z = \u03c3(W1x) is the shared representation constructed by encoder f . The regularizer takes the form as a convex surrogate loss for the binary 0-1 error. A common choice is the cross-entropy loss. Putting all together, the optimization problem of our joint model is given by:\nmin W1,W2,Wh max Wd m\u2211 i=1 Ly(xi, yi;W1,Wh) + \u03bb n\u2211 j=1 Lr(xj ;W1,W2)\u2212 \u00b5 n\u2211 j=1 Ld(xj ;W1,Wd) (5)\nwhere Ly(\u00b7, \u00b7) is the prediction loss, Lr(\u00b7) is the reconstruction loss and Ld(\u00b7) is the domain classification loss. We illustrate the model architecture in Fig. 2. As we show above, the cross-entropy loss for the learning task and the reconstruction loss are essentially the negative joint log-likelihoods of\nboth labeled instances and unlabeled instances. The domain classification loss works as a regularizer to incorporate our prior knowledge that the encoder f should form an invariant transformation. As a result, DAuto is designed to achieve the following three objectives simultaneously in a unified framework: 1). It learns representations that are informative for the main learning task in the source domain. 2). It learns robust representations under reconstruction loss. 3). It learns invariant features that are indistinguishable between the source and the target domains."}, {"heading": "4. Experiments", "text": "We first evaluate DAuto on synthetic experiments with MNIST, and then compare it with state-ofthe-art models, including mSDA, the Ladder network and DANN. We report experimental results on the Amazon benchmark dataset and a large-scale time-series dataset for speech recognition."}, {"heading": "4.1 Datasets and Experimental Setup", "text": "Synthetic experiment with MNIST The experiment contains 4 tasks: each task is a binary classification problem on judging whether the given image is a specific number or not. We choose 4 digits for these tasks: 3, 7, 8 and 9, because 9 and 7 are similar in many handwritten images while 3 and 9 (7 and 8) are quite different. Clearly domain adaptation is not always possible. We would like to verify that DAuto succeeds when two domains are close to each other, and also show a failure case when domains are sufficiently different. To do so, for each task on recognizing digit i \u2208 {3, 7, 8, 9}, we sample 1000 images from the training set, of which 500 are digit i and the others are digits not in {3, 7, 8, 9}; we sample\u223c1500 images from the original test set, of which\u223c750 images are digit i and the others are digits not in {3, 7, 8, 9}. There are 16 pairs of experiments altogether for each possible pair of i, j \u2208 {3, 7, 8, 9} as source and target domains. We desig a well-controlled experiment to compare DAuto with a standard MLP and DANN: all algorithms share the same network structure. Also, we apply the same training procedure to all algorithms so that the difference in performance can only be explained by the additional domain regularizer as well as the reconstruction loss in DAuto. The networks we used in this experiment contains 3 hidden layers, each contain 500, 200 and 100 hidden units, respectively. The input layer contains 28 \u00d7 28 = 784 units, and the output layer is a single unit parametrized by a logistic regression model. Except the output layer, all the hidden layers use ReLU as the nonlinear activation function. The same network structure is used for both DANN and DAuto. During training, we use AdaDelta as the optimization algorithm for all the models. For DAuto, both hyperparameters \u03bb and \u00b5 are chosen from the following range: \u03bb, \u00b5 \u2208 {10\u22128, 10\u22127, . . . , 102}, where we use a small fraction of training data as development set, combined with early stopping for model selection. For all the experiments, we fix the learning rate to be 1.0.\nSentiment Analysis The Amazon dataset consists of reviews of products on Amazon (Blitzer et al., 2007). The task is to predict the polarity of a text review, i.e., whether the review for a specific product is positive or negative. The dataset contains text reviews for the following four categories: books (B), DVDs (D), electronics (E), and kitchen appliances (K). Each of the product contains 2000 text reviews as training data, and 4465 (B), 3586 (D), 5681 (E), 5945 (K) reviews as test data. Each text review is described by a feature vector of 5000 dimensions, where each dimension correspond to a word in the dictionary. The dataset is a benchmark data that has been frequently used for the\npurpose of sentiment analysis (Blitzer et al., 2006, 2007; Chen et al., 2012; Ajakan et al., 2014; Ganin and Lempitsky, 2015). For each source-target pair, we train the corresponding models completely on labeled source instances with access to unlabeled target instances. We use the classification accuracy in the target domain as our main metric. MLP, Ladder, DANN and DAuto all share the same network structure: the input layer contains 5,000 units, followed by a fully-connected hidden layer with 500 units and the output layer, which is a logistic regression model. Correspondingly, mSDA pretrains a two-layer stacked auto-encoder, hence the feature representation pretrained by mSDA in this experiment has 10,000 dimensions. Ladder and DAuto also use unlabeled instances to pretrain model parameters in an purely unsupervised way. Again, for all the neural network based models, we use ReLU as the nonlinear activation function and use AdaDelta as the optimization algorithm during training. For DAuto, both hyperparameters \u03bb, \u00b5 \u2208 {10\u22124, . . . , 102}. Again, we fix the learning rate to be 1.0.\nSpeech recognition DAuto can be naturally extended to time-series modeling. In this experiment we apply DAuto to speech recognition, where a recurrent neural network is trained to ingest speech spectrograms and generate text transcripts. At each time step, the input to the network is a log spectrogram feature, and the output is a character or blank. The network is trained end-to-end using the connectionist temporal classification (CTC) loss (Graves et al., 2006), which is the negative log-likelihood of training utterances. We evaluate DAuto and compare it with other algorithms for an adaptation task across three different accented datasets, of which one is recorded from native English speakers, and the other two are recorded from speakers with Mandarin and Indian accents, respectively. Each dataset contains \u223c33 hours of labeled audio data from \u223c25,000 user utterances, and we randomly sample 80 percent of them as training set and the rest are used as test set. The model structure of the recurrent network we used for this experiment is as follows: at each time step, the input feature is a log spectrogram feature of 161 dimensions. This is followed by a 1D convolution layer with 1024 kernels, and 3 stacked bidirectional LSTM layers, each of which contains 1024 hidden units. The output of the last bidirectional LSTM layer is connected to a fullyconnected softmax layer with 29 outputs, which represents 26 characters and three special characters: space, apostrophe and blank. We use the publicly available CTC loss implementation https: //github.com/baidu-research/warp-ctc and our experiments are performed under the public codebase: https://github.com/baidu-research/ba-dls-deepspeech.\nBaseline Models We compare DAuto with the following methods: 1. No-Adapt. This is the baseline model which ignores the possible shifts between domains. In order to make the comparison as fair as possible, in all our experiments DAuto shares the same prediction model with No-Adapt. 2. mSDA. mSDA pretrains all the unlabeled instances from both the source and the target domains to build a feature map for the input space. The constructed representations from mSDA are used to train a SVM classifier as suggestd in the original paper (Chen et al., 2012). In all the experiments, we set the corruption level to be 0.5 in training mSDA, and stack the same number of layers of autoencoders as in DAuto. 3. Ladder Network (Ladder). The Ladder network (Rasmus et al., 2015) is a novel structure aiming for semi-supervised learning. It is a hierarchical denoising autoencoder where reconstruction errors between each pair of hidden layers are incorporated into the objective function. 4. DANN. Again, we use exactly the same inference structure for DANN as in No-Adapt, Ladder, and DAuto. For all the experiments, we tune the hyperparameters on a small fraction of the training sets used as develop sets, and we also use early-stop to avoid overfitting. We implement all the models ourselves and ensure that all the preprocessing for data are the same for all the algorithms, so that the\ndifferences in experimental results can only be explained by the differences in algorithms themselves. Due to the space limit, we defer detailed description about models used in each experiment to the supplementary material."}, {"heading": "4.2 Results and Analysis", "text": "MNIST We list the classification accuracies on 16 pairs of tasks using No-Adapt, DANN and DAuto in Table. 1. Besides the 12 pairs of tasks under the domain adaptation setting, we also show 4 additional tasks where both the training and test sets are from the same domain. The scores from these 4 tasks can be used as empirical upper bounds to compare with the performance of domain adaptation algorithms. DAuto significantly improves over the No-Adapt baseline in 10 out of the total 12 possible pairs, showing that it indeeds has the desired capability for domain adaptation. On\nthe other hand, we would also like to highlight that not all domain adaptation tasks are successful: the prediction accuracies of all the three algorithms on task 7\u2192 8 and 7\u2192 3 are only marginally above random guesses (0.5). When the digits are similar, we observe very successful domain transfer using DAuto even the algorithm does not see any instances from the target category during training. To qualitatively study both the successful and failure cases, we project both representations with and without DAuto adaptation onto 2 dimensional space using PCA, shown in Fig. 3. Several interesting observations can be made from Fig. 3: when domain adaptation is successful (Fig. 3d, 3h), the principal directions of learned representations from both domains are well-aligned with each other; on the other hand, when adaptation fails (Fig. 3b), representations do not share the same principal directions. As a special case, when the source and target domains share the same distribution (Fig. 3f), DAuto still works and will not degrade. As the last point, the direction of adaptation also matters: while both digit 3 and 7 are used as source/target domains, only one direction succeeds (Fig. 3d).\nAmazon To show the effectiveness of different domain adaptation algorithms when labeled instances are scarce, we test the five algorithms on the 16 tasks by gradually increasing the size of the labeled training instances, but still use the whole test dataset to measure the performance. More specifically, we use 0.2, 0.5, 0.8 and 1.0 fraction of the available labeled instances from source domain during training. A successful domain adaptation algorithm should be able to take advantage of the unlabeled instances from the target domain to help generalization even when the amount of labeled instances available is small. We plot the results in Fig. 4: all the domain adaptation algorithms are able to use the unlabeled instances from the target domain to help generalization. However, the\ndifferences between the baseline MLP and DAuto are getting smaller with the increase of the size of training data. This phenomenon supports our probabilistic framework showing that DAuto can effectively use the unlabeled data since the reconstruction error corresponds to an upper bound of the marginal probabilities of instances. We report the classification accuracies on the test data of the 16 pairs of tasks to have a thorough comparisons among the 5 models in Table. 2. DAuto outperforms all the other competitors on 12 out of 16 tasks, whereas DANN achieves the best test set accuracy on D \u2192 D; Ladder scores highest on D \u2192 E and D \u2192 K; mSDA performs the best on E \u2192 B and E \u2192 D. We emphasize that DAuto performs consistently better than all the other competitors. Note that the only difference between DANN and DAuto is the autoencoder regularizer that forces the feature learning part to learn robust features, we conclude that DAuto successfully helps to build robust representations. To check whether the accuracy differences between those five methods are significant or not, we perform a paired t-test and report the two-sided p-value under the null hypothesis that two related paired samples have identical means. We show the p-value matrix in Table. 3 where for each pair of methods, we report the mean p-value among the 16 tasks. From Fig. 4, we can also observe that given a small fraction of data, there are large gaps between DAuto and the MLP baseline on most of the tasks. Interestingly, these gaps become smaller on certain tasks, e.g., K \u2192 E, B \u2192 K. Besides, we also observe gaps consistently as the fraction of training data increases. This convinces our conjecture that DAuto is more effective than the MLP baseline in learning informative representations from low-resource data, and has the semi-supervised learning effect due to its generative nature.\nSpeech Recognition To avoid possible external error during the decoding process, which is usually not stable on noisy data, we directly report the CTC loss obtained from different algorithms. We have 3\u00d7 3 pairs of domain adaptation tasks, where each source/target domain ranges from speech with {IN, CN, EN} accents. We show the results in Table. 4. Again, we observe decreases in performance when applying domain adaptation algorithms: the transfer between speech with indian accents and\nthe other two fails. However, when two domains are similar (EN vs CN) where adaptation is possible, DAuto consistently outperforms DANN. We want to bring readers\u2019 attention that both DANN and DAuto improve over baseline method when training with unlabeled instances from the same domain (diagonal of the table). This means both DANN and DAuto have the effect of semi-supervised learning algorithms: when the source and the target domains are indeed same, both DANN and DAuto benefit from using unlabeled instances. From the generative interpretation of our probabilistic framework, DAuto achieves this goal by maximizing the marginal probability of unlabeled instances, and due to the shared component, this further helps training the discriminative model."}, {"heading": "5. Conclusion", "text": "We propose a probabilistic framework that allows us to use unlabeled instances from both domains in a principled way. We also show that the empirical success of autoencoders in semi-supervised learning and domain adaptation can be explained as maximizing the marginal log-likelihoods of\nunlabeled data under our framework, where we use kernel density estimators to model the marginal distributions. This provides the first probabilistic justification for joint training with autoencoders in practice. The instantiated model, DAuto, can be successfully applied to domain adaptation problems, and has a natural extension to time series as well. Detailed experiments show that DAuto consistently outperforms its competitors when domain adaptation is possible."}, {"heading": "Acknowledgement", "text": "HZ would like to thank the speech recognition team at SVAIL, Baidu Research, especially Vinay Rao, Jesse Engel and Sanjeev Satheesh for their helpful discussions about the speech recognition experiment. HZ also wants to thank Zhuoyuan Chen, for his valuable suggestions and encouragements during the internship. JH is supported in part through collaborative participation in the Robotics Consortium sponsored by the U.S Army Research Laboratory under the Collaborative Technology Alliance Program, Cooperative Agreement W911NF-10-2-0016. The views and conclusions contained in this document are those of the authors and should not be interpreted as representing the official policies, either expressed or implied, of the Army Research Laboratory of the U.S. Government. The U.S. Government is authorized to reproduce and distribute reprints for Government purposes notwithstanding any copyright notation herein."}], "references": [{"title": "Unsupervised domain adaptation by domain invariant projection", "author": ["M. Baktashmotlagh", "M.T. Harandi", "B.C. Lovell", "M. Salzmann"], "venue": "In Proceedings of the IEEE International Conference on Computer Vision,", "citeRegEx": "Baktashmotlagh et al\\.,? \\Q2013\\E", "shortCiteRegEx": "Baktashmotlagh et al\\.", "year": 2013}, {"title": "Analysis of representations for domain adaptation", "author": ["S. Ben-David", "J. Blitzer", "K. Crammer", "F. Pereira"], "venue": "Advances in neural information processing systems,", "citeRegEx": "Ben.David et al\\.,? \\Q2007\\E", "shortCiteRegEx": "Ben.David et al\\.", "year": 2007}, {"title": "A theory of learning from different domains", "author": ["S. Ben-David", "J. Blitzer", "K. Crammer", "A. Kulesza", "F. Pereira", "J.W. Vaughan"], "venue": "Machine learning,", "citeRegEx": "Ben.David et al\\.,? \\Q2010\\E", "shortCiteRegEx": "Ben.David et al\\.", "year": 2010}, {"title": "Domain adaptation with structural correspondence learning", "author": ["J. Blitzer", "R. McDonald", "F. Pereira"], "venue": "In Proceedings of the 2006 conference on empirical methods in natural language processing,", "citeRegEx": "Blitzer et al\\.,? \\Q2006\\E", "shortCiteRegEx": "Blitzer et al\\.", "year": 2006}, {"title": "Biographies, bollywood, boom-boxes and blenders: Domain adaptation for sentiment classification", "author": ["J. Blitzer", "M. Dredze", "F. Pereira"], "venue": "In ACL,", "citeRegEx": "Blitzer et al\\.,? \\Q2007\\E", "shortCiteRegEx": "Blitzer et al\\.", "year": 2007}, {"title": "Domain separation networks", "author": ["K. Bousmalis", "G. Trigeorgis", "N. Silberman", "D. Krishnan", "D. Erhan"], "venue": "In Advances in Neural Information Processing Systems,", "citeRegEx": "Bousmalis et al\\.,? \\Q2016\\E", "shortCiteRegEx": "Bousmalis et al\\.", "year": 2016}, {"title": "Marginalized denoising autoencoders for domain adaptation", "author": ["M. Chen", "Z. Xu", "K. Weinberger", "F. Sha"], "venue": "arXiv preprint arXiv:1206.4683,", "citeRegEx": "Chen et al\\.,? \\Q2012\\E", "shortCiteRegEx": "Chen et al\\.", "year": 2012}, {"title": "Transferring naive bayes classifiers for text classification", "author": ["W. Dai", "G.-R. Xue", "Q. Yang", "Y. Yu"], "venue": "In AAAI,", "citeRegEx": "Dai et al\\.,? \\Q2007\\E", "shortCiteRegEx": "Dai et al\\.", "year": 2007}, {"title": "Unsupervised domain adaptation by backpropagation", "author": ["Y. Ganin", "V. Lempitsky"], "venue": "In Proceedings of the 32nd International Conference on Machine Learning", "citeRegEx": "Ganin and Lempitsky.,? \\Q2015\\E", "shortCiteRegEx": "Ganin and Lempitsky.", "year": 2015}, {"title": "Domain-adversarial training of neural networks", "author": ["Y. Ganin", "E. Ustinova", "H. Ajakan", "P. Germain", "H. Larochelle", "F. Laviolette", "M. Marchand", "V. Lempitsky"], "venue": "Journal of Machine Learning Research,", "citeRegEx": "Ganin et al\\.,? \\Q2016\\E", "shortCiteRegEx": "Ganin et al\\.", "year": 2016}, {"title": "Domain adaptation for large-scale sentiment classification: A deep learning approach", "author": ["X. Glorot", "A. Bordes", "Y. Bengio"], "venue": "In Proceedings of the 28th international conference on machine learning", "citeRegEx": "Glorot et al\\.,? \\Q2011\\E", "shortCiteRegEx": "Glorot et al\\.", "year": 2011}, {"title": "Connectionist temporal classification: labelling unsegmented sequence data with recurrent neural networks", "author": ["A. Graves", "S. Fern\u00e1ndez", "F. Gomez", "J. Schmidhuber"], "venue": "In Proceedings of the 23rd international conference on Machine learning,", "citeRegEx": "Graves et al\\.,? \\Q2006\\E", "shortCiteRegEx": "Graves et al\\.", "year": 2006}, {"title": "A kernel two-sample test", "author": ["A. Gretton", "K.M. Borgwardt", "M.J. Rasch", "B. Sch\u00f6lkopf", "A. Smola"], "venue": "Journal of Machine Learning Research,", "citeRegEx": "Gretton et al\\.,? \\Q2012\\E", "shortCiteRegEx": "Gretton et al\\.", "year": 2012}, {"title": "Detecting change in data streams", "author": ["D. Kifer", "S. Ben-David", "J. Gehrke"], "venue": "In Proceedings of the Thirtieth international conference on Very large data bases-Volume", "citeRegEx": "Kifer et al\\.,? \\Q2004\\E", "shortCiteRegEx": "Kifer et al\\.", "year": 2004}, {"title": "Learning transferable features with deep adaptation networks", "author": ["M. Long", "Y. Cao", "J. Wang", "M.I. Jordan"], "venue": "In ICML,", "citeRegEx": "Long et al\\.,? \\Q2015\\E", "shortCiteRegEx": "Long et al\\.", "year": 2015}, {"title": "Semi-supervised learning with ladder networks", "author": ["A. Rasmus", "M. Berglund", "M. Honkala", "H. Valpola", "T. Raiko"], "venue": "In Advances in Neural Information Processing Systems,", "citeRegEx": "Rasmus et al\\.,? \\Q2015\\E", "shortCiteRegEx": "Rasmus et al\\.", "year": 2015}, {"title": "Contractive auto-encoders: Explicit invariance during feature extraction", "author": ["S. Rifai", "P. Vincent", "X. Muller", "X. Glorot", "Y. Bengio"], "venue": "In Proceedings of the 28th international conference on machine learning", "citeRegEx": "Rifai et al\\.,? \\Q2011\\E", "shortCiteRegEx": "Rifai et al\\.", "year": 2011}, {"title": "Deep domain confusion: Maximizing for domain invariance", "author": ["E. Tzeng", "J. Hoffman", "N. Zhang", "K. Saenko", "T. Darrell"], "venue": "arXiv preprint arXiv:1412.3474,", "citeRegEx": "Tzeng et al\\.,? \\Q2014\\E", "shortCiteRegEx": "Tzeng et al\\.", "year": 2014}, {"title": "Extracting and composing robust features with denoising autoencoders", "author": ["P. Vincent", "H. Larochelle", "Y. Bengio", "P.-A. Manzagol"], "venue": "In Proceedings of the 25th international conference on Machine learning,", "citeRegEx": "Vincent et al\\.,? \\Q2008\\E", "shortCiteRegEx": "Vincent et al\\.", "year": 2008}, {"title": "Stacked denoising autoencoders: Learning useful representations in a deep network with a local denoising criterion", "author": ["P. Vincent", "H. Larochelle", "I. Lajoie", "Y. Bengio", "P.-A. Manzagol"], "venue": "Journal of Machine Learning Research,", "citeRegEx": "Vincent et al\\.,? \\Q2010\\E", "shortCiteRegEx": "Vincent et al\\.", "year": 2010}], "referenceMentions": [{"referenceID": 18, "context": ", denoising autoencoders (Vincent et al., 2008) and contractive autoencoders (Rifai et al.", "startOffset": 25, "endOffset": 47}, {"referenceID": 16, "context": ", 2008) and contractive autoencoders (Rifai et al., 2011).", "startOffset": 37, "endOffset": 57}, {"referenceID": 15, "context": "Our interpretation may also be used to explain the recent success of autoencoders in semi-supervised learning (Rasmus et al., 2015).", "startOffset": 110, "endOffset": 131}, {"referenceID": 10, "context": "Recently, due to the availability of rich data and powerful computational resources, non-linear representations and hypothesis classes for domain adaptation have been increasingly explored (Glorot et al., 2011; Baktashmotlagh et al., 2013; Chen et al., 2012; Ajakan et al., 2014; Ganin et al., 2016).", "startOffset": 189, "endOffset": 299}, {"referenceID": 0, "context": "Recently, due to the availability of rich data and powerful computational resources, non-linear representations and hypothesis classes for domain adaptation have been increasingly explored (Glorot et al., 2011; Baktashmotlagh et al., 2013; Chen et al., 2012; Ajakan et al., 2014; Ganin et al., 2016).", "startOffset": 189, "endOffset": 299}, {"referenceID": 6, "context": "Recently, due to the availability of rich data and powerful computational resources, non-linear representations and hypothesis classes for domain adaptation have been increasingly explored (Glorot et al., 2011; Baktashmotlagh et al., 2013; Chen et al., 2012; Ajakan et al., 2014; Ganin et al., 2016).", "startOffset": 189, "endOffset": 299}, {"referenceID": 9, "context": "Recently, due to the availability of rich data and powerful computational resources, non-linear representations and hypothesis classes for domain adaptation have been increasingly explored (Glorot et al., 2011; Baktashmotlagh et al., 2013; Chen et al., 2012; Ajakan et al., 2014; Ganin et al., 2016).", "startOffset": 189, "endOffset": 299}, {"referenceID": 10, "context": "This line of works focuses on building common and robust feature representations among multiple domains using either supervised neural networks (Glorot et al., 2011), or unsupervised pretraining using denoising auto-encoders (Vincent et al.", "startOffset": 144, "endOffset": 165}, {"referenceID": 9, "context": "Other works focus on learning feature transformations such that the feature distributions in the source and target domains are close to each other (Ben-David et al., 2007, 2010; Ajakan et al., 2014; Ganin et al., 2016).", "startOffset": 147, "endOffset": 218}, {"referenceID": 18, "context": "In practice it was observed that unsupervised pretraining using stacked denoising auto-encoders (mSDA) (Vincent et al., 2008; Chen et al., 2012) often improves the generalization accuracy (Ganin et al.", "startOffset": 103, "endOffset": 144}, {"referenceID": 6, "context": "In practice it was observed that unsupervised pretraining using stacked denoising auto-encoders (mSDA) (Vincent et al., 2008; Chen et al., 2012) often improves the generalization accuracy (Ganin et al.", "startOffset": 103, "endOffset": 144}, {"referenceID": 9, "context": ", 2012) often improves the generalization accuracy (Ganin et al., 2016).", "startOffset": 51, "endOffset": 71}, {"referenceID": 9, "context": "Domain adversarial neural networks (DANN) is a discriminative model to learn domain-invariant features (Ganin et al., 2016).", "startOffset": 103, "endOffset": 123}, {"referenceID": 1, "context": "DANN also enjoys a nice theoretical justification to learn a feature map to decrease the A-distance measure (Ben-David et al., 2007) between source and target domains.", "startOffset": 108, "endOffset": 132}, {"referenceID": 12, "context": "(2015) propose similar models where the maximum mean discrepancy (MMD) (Gretton et al., 2012) between two domains are minimized.", "startOffset": 71, "endOffset": 93}, {"referenceID": 7, "context": "Finally, domain adaptation can also be viewed as a semi-supervised learning problem by ignoring the domain shift, where source instances are treated as labeled data and target instances are unlabeled data (Dai et al., 2007; Rasmus et al., 2015).", "startOffset": 205, "endOffset": 244}, {"referenceID": 15, "context": "Finally, domain adaptation can also be viewed as a semi-supervised learning problem by ignoring the domain shift, where source instances are treated as labeled data and target instances are unlabeled data (Dai et al., 2007; Rasmus et al., 2015).", "startOffset": 205, "endOffset": 244}, {"referenceID": 0, "context": ", 2011; Baktashmotlagh et al., 2013; Chen et al., 2012; Ajakan et al., 2014; Ganin et al., 2016). This line of works focuses on building common and robust feature representations among multiple domains using either supervised neural networks (Glorot et al., 2011), or unsupervised pretraining using denoising auto-encoders (Vincent et al., 2008, 2010). Other works focus on learning feature transformations such that the feature distributions in the source and target domains are close to each other (Ben-David et al., 2007, 2010; Ajakan et al., 2014; Ganin et al., 2016). In practice it was observed that unsupervised pretraining using stacked denoising auto-encoders (mSDA) (Vincent et al., 2008; Chen et al., 2012) often improves the generalization accuracy (Ganin et al., 2016). One of the limitations of mSDA is that it needs to explicitly form the covariance matrix of input features and then solves a linear system, which can be computationally expensive in high dimensional settings. On the other hand, it is also not clear how to extend mSDA so that it can also be applied for time-series modeling. Domain adversarial neural networks (DANN) is a discriminative model to learn domain-invariant features (Ganin et al., 2016). It can be formulated as a minimax problem where the feature transformation component tries to learn a representation to confuse a following domain classification component. DANN also enjoys a nice theoretical justification to learn a feature map to decrease the A-distance measure (Ben-David et al., 2007) between source and target domains. Other distance measures between distributions can also be applied. Tzeng et al. (2014) and Long et al.", "startOffset": 8, "endOffset": 1661}, {"referenceID": 0, "context": ", 2011; Baktashmotlagh et al., 2013; Chen et al., 2012; Ajakan et al., 2014; Ganin et al., 2016). This line of works focuses on building common and robust feature representations among multiple domains using either supervised neural networks (Glorot et al., 2011), or unsupervised pretraining using denoising auto-encoders (Vincent et al., 2008, 2010). Other works focus on learning feature transformations such that the feature distributions in the source and target domains are close to each other (Ben-David et al., 2007, 2010; Ajakan et al., 2014; Ganin et al., 2016). In practice it was observed that unsupervised pretraining using stacked denoising auto-encoders (mSDA) (Vincent et al., 2008; Chen et al., 2012) often improves the generalization accuracy (Ganin et al., 2016). One of the limitations of mSDA is that it needs to explicitly form the covariance matrix of input features and then solves a linear system, which can be computationally expensive in high dimensional settings. On the other hand, it is also not clear how to extend mSDA so that it can also be applied for time-series modeling. Domain adversarial neural networks (DANN) is a discriminative model to learn domain-invariant features (Ganin et al., 2016). It can be formulated as a minimax problem where the feature transformation component tries to learn a representation to confuse a following domain classification component. DANN also enjoys a nice theoretical justification to learn a feature map to decrease the A-distance measure (Ben-David et al., 2007) between source and target domains. Other distance measures between distributions can also be applied. Tzeng et al. (2014) and Long et al. (2015) propose similar models where the maximum mean discrepancy (MMD) (Gretton et al.", "startOffset": 8, "endOffset": 1684}, {"referenceID": 0, "context": ", 2011; Baktashmotlagh et al., 2013; Chen et al., 2012; Ajakan et al., 2014; Ganin et al., 2016). This line of works focuses on building common and robust feature representations among multiple domains using either supervised neural networks (Glorot et al., 2011), or unsupervised pretraining using denoising auto-encoders (Vincent et al., 2008, 2010). Other works focus on learning feature transformations such that the feature distributions in the source and target domains are close to each other (Ben-David et al., 2007, 2010; Ajakan et al., 2014; Ganin et al., 2016). In practice it was observed that unsupervised pretraining using stacked denoising auto-encoders (mSDA) (Vincent et al., 2008; Chen et al., 2012) often improves the generalization accuracy (Ganin et al., 2016). One of the limitations of mSDA is that it needs to explicitly form the covariance matrix of input features and then solves a linear system, which can be computationally expensive in high dimensional settings. On the other hand, it is also not clear how to extend mSDA so that it can also be applied for time-series modeling. Domain adversarial neural networks (DANN) is a discriminative model to learn domain-invariant features (Ganin et al., 2016). It can be formulated as a minimax problem where the feature transformation component tries to learn a representation to confuse a following domain classification component. DANN also enjoys a nice theoretical justification to learn a feature map to decrease the A-distance measure (Ben-David et al., 2007) between source and target domains. Other distance measures between distributions can also be applied. Tzeng et al. (2014) and Long et al. (2015) propose similar models where the maximum mean discrepancy (MMD) (Gretton et al., 2012) between two domains are minimized. Very recently, Bousmalis et al. (2016) propose a model where orthogonal representations that are shared between domains and unique to each domain are learned simultaneously.", "startOffset": 8, "endOffset": 1845}, {"referenceID": 6, "context": "DAuto improves over mSDA (Chen et al., 2012) when the dimension of feature vectors is high and as a result the covariance matrix cannot be explicitly formed.", "startOffset": 25, "endOffset": 44}, {"referenceID": 15, "context": "Our derivation can also be used to explain the prevalence and success of autoencoders in both domain adaptation and semi-supervised learning (Rasmus et al., 2015; Bousmalis et al., 2016).", "startOffset": 141, "endOffset": 186}, {"referenceID": 5, "context": "Our derivation can also be used to explain the prevalence and success of autoencoders in both domain adaptation and semi-supervised learning (Rasmus et al., 2015; Bousmalis et al., 2016).", "startOffset": 141, "endOffset": 186}, {"referenceID": 17, "context": "In fact, this is a necessary and implicit assumption that underlies the success of recent regularization based discriminative models (Tzeng et al., 2014; Long et al., 2015; Ganin et al., 2016).", "startOffset": 133, "endOffset": 192}, {"referenceID": 14, "context": "In fact, this is a necessary and implicit assumption that underlies the success of recent regularization based discriminative models (Tzeng et al., 2014; Long et al., 2015; Ganin et al., 2016).", "startOffset": 133, "endOffset": 192}, {"referenceID": 9, "context": "In fact, this is a necessary and implicit assumption that underlies the success of recent regularization based discriminative models (Tzeng et al., 2014; Long et al., 2015; Ganin et al., 2016).", "startOffset": 133, "endOffset": 192}, {"referenceID": 15, "context": "This interpretation may also be used to explain the practical success of autoencoders in semi-supervised learning (Rasmus et al., 2015).", "startOffset": 114, "endOffset": 135}, {"referenceID": 13, "context": "One popular and effective choice is the A-distance introduced by (Kifer et al., 2004; Ben-David et al., 2007, 2010).", "startOffset": 65, "endOffset": 115}, {"referenceID": 1, "context": "It can be shown that the A-distance can be approximated by the binary classification error of the domain classifier that discriminates instances from the source or the target domain (Ben-David et al., 2007).", "startOffset": 182, "endOffset": 206}, {"referenceID": 4, "context": "Sentiment Analysis The Amazon dataset consists of reviews of products on Amazon (Blitzer et al., 2007).", "startOffset": 80, "endOffset": 102}, {"referenceID": 6, "context": "purpose of sentiment analysis (Blitzer et al., 2006, 2007; Chen et al., 2012; Ajakan et al., 2014; Ganin and Lempitsky, 2015).", "startOffset": 30, "endOffset": 125}, {"referenceID": 8, "context": "purpose of sentiment analysis (Blitzer et al., 2006, 2007; Chen et al., 2012; Ajakan et al., 2014; Ganin and Lempitsky, 2015).", "startOffset": 30, "endOffset": 125}, {"referenceID": 11, "context": "The network is trained end-to-end using the connectionist temporal classification (CTC) loss (Graves et al., 2006), which is the negative log-likelihood of training utterances.", "startOffset": 93, "endOffset": 114}, {"referenceID": 6, "context": "The constructed representations from mSDA are used to train a SVM classifier as suggestd in the original paper (Chen et al., 2012).", "startOffset": 111, "endOffset": 130}, {"referenceID": 15, "context": "The Ladder network (Rasmus et al., 2015) is a novel structure aiming for semi-supervised learning.", "startOffset": 19, "endOffset": 40}], "year": 2017, "abstractText": "We propose a probabilistic framework for domain adaptation that blends both generative and discriminative modeling in a principled way. By maximizing both the marginal and the conditional log-likelihoods, models derived from this framework can use both labeled instances from the source domain as well as unlabeled instances from both source and target domains. Under this framework, we show that the popular reconstruction loss of autoencoder corresponds to an upper bound of the negative marginal log-likelihoods of unlabeled instances, where marginal distributions are given by proper kernel density estimations. This provides a way to interpret the empirical success of autoencoders in domain adaptation and semi-supervised learning. We instantiate our framework using neural networks, and build a concrete model, DAuto. Empirically, we demonstrate the effectiveness of DAuto on text, image and speech datasets, showing that it outperforms related competitors when domain adaptation is possible.", "creator": "LaTeX with hyperref package"}}}