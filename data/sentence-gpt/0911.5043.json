{"id": "0911.5043", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "26-Nov-2009", "title": "A Semantic Similarity Measure for Expressive Description Logics", "abstract": "A totally semantic measure is presented which is able to calculate a similarity value between concept descriptions and also between concept description and individual or between individuals expressed in an expressive description logic. It is applicable on symbolic descriptions although it uses a numeric approach for the calculus. Considering that Description Logics stand as the theoretic framework for the ontological knowledge representation and reasoning, the proposed measure can be effectively used for agglomerative and divisional clustering task applied to the semantic web domain.\n\n\n\n\nThe following data were extracted from the following data sources:", "histories": [["v1", "Thu, 26 Nov 2009 10:21:31 GMT  (58kb,S)", "http://arxiv.org/abs/0911.5043v1", "13 pages, Appeared at CILC 2005, Convegno Italiano di Logica Computazionale also available atthis http URL"]], "COMMENTS": "13 pages, Appeared at CILC 2005, Convegno Italiano di Logica Computazionale also available atthis http URL", "reviews": [], "SUBJECTS": "cs.AI cs.LO", "authors": ["claudia d'amato", "nicola fanizzi", "floriana esposito"], "accepted": false, "id": "0911.5043"}, "pdf": {"name": "0911.5043.pdf", "metadata": {"source": "CRF", "title": "A Semantic Similarity Measure for Expressive Description Logics", "authors": ["Claudia d\u2019Amato", "Nicola Fanizzi", "Floriana Esposito"], "emails": ["esposito}@di.uniba.it"], "sections": [{"heading": null, "text": "ar X\niv :0\n91 1.\n50 43\nv1 [\ncs .A\nI] 2\n6 N\nov 2"}, {"heading": "1 Introduction", "text": "Ontological knowledge plays a key role for interoperability in the Semantic Web perspective. Nowadays, standard ontology markup languages are supported by well-founded semantics of Description Logics (DLs) together with a series of available automated reasoning services [1]. However, several tasks in an ontology life-cycle [2], such as their construction and/or integration, are still almost entirely delegated to knowledge engineers.\nIn the Semantic Web perspective, the construction of the knowledge bases should be supported by automated inductive inference services. The induction of structural knowledge like the T-box taxonomies is not new in machine learning, especially in the context of concept formation [3] where clusters of similar objects are aggregated in hierarchies according to heuristic criteria or similarity measures. Almost all of these methods apply to zero-order representations while, as mentioned above, ontologies are expressed through fragments of first-order logic. Yet, the problem of the induction of structural knowledge turns out to be hard in first-order logic or equivalent representations [4].\nIn Inductive Logic Programming (ILP) attempts have been made to extend relational learning techniques towards hybrid representations based on both clausal and description logics [5, 6, 7]. In order to cope with the problem complexity, these methods are based on a heuristic search and generally implement bottom-up algorithms that tend to induce overly specific concept definitions which may suffer for poor predictive capabilities.\nSo far, the automated induction of knowledge bases expressed in DLs representations has not been investigated in depth. Classic approaches to learning\nDL concept definitions generally adopt heuristic search strategies to cope with the inherent complexity of the problem and generally implement bottom-up algorithms (e.g. [8]). Other approaches propose a top-down search for correct concept definitions [9]. These methods are not completely operational: since refinement operators compute short moves in a vast space of candidate definitions, they become useless when disjoined from proper heuristics based on the available assertions. A more knowledge-intensive method is to be preferred.\nIn this perspective, we introduce a novel similarity measure between concept descriptions based on semantics, which is suitable for expressive DLs like ALC [10, 1]. Since a merely syntactic approach has proven too weak to enforce standard inferences (namely subsumption), when expressive DLs are taken into account a different approach (based on semantics) is necessary. Also a similarity measure, then, should be founded on the underlying semantics, rather than on the syntactic structure of concept descriptions. Besides measuring the similarity of two concept descriptions, we propose a manner based on notion of most specific concept of an individual [1] for employing the same measure for the individual-concept and individual-individual similarity cases.\nSuch a measure can be the basis for adapting an existing clustering method to this representation (or devising a new one) operating in a top-down (partitional) or bottom-up (agglomerative) fashion. Moreover, the similarity measure can be also employed for Information Retrieval or Information Integration purposes applied to DL knowledge bases and also for Case-based Reasoning systems (see the next section).\nAs discussed in the following, the method can effectively compute the similarity measure with a complexity which depends on the complexity of standard inferences as a baseline. The applicability of this has been tested on examples which have been artificially generated from OWL1 ontologies. Some of these test examples are reported in this paper.\nThe remainder of the paper is organized as follows. The next section reviews related work on similarity measures. In Sect. 3 the representation language is presented. The similarity measure is illustrated in Sect. 4 and is discussed in Sect. 5. Possible developments of the method are examined in Sect. 6."}, {"heading": "2 Related Work", "text": "Similarity measure play an important role in information retrieval and information integration. Recent investigations in these fields have emphasized the use of ontologies and semantic similarity functions as a mechanism for comparing concepts and/or concept instances that can be retrieved or integrated across heterogeneous repositories [11, 12, 13, 14].\nSemantic similarity is typically determined as a function of the path distance between terms in the hierarchical structure underlying the ontology [15, 16, 17]. Other methods to assess semantic similarity within a single ontology are feature\n1 http://www.w3.org/TR/owl-ref\nmatching [19] and information content [13, 20]. The former approach uses both common and discriminant features among concepts and/or concept instances in order to compute the semantic similarity. The latter methods are founded on Information Theory. They define a similarity measure between two concepts within a concept hierarchy in terms of the amount of information conveyed by the immediate super-concept that subsumes two concepts being compared. This is a measure of the variation of information crossing from a description level to a more general one.\nA recent work [21] presents a number of measures for comparing concepts located in different and possibly heterogeneous ontologies. The following requirements are made for this measure:\n\u2013 the formal representation supports inferences such as subsumption; \u2013 local concepts in different ontologies inherit their definitional structure from\nconcepts in a shared ontology.\nThis study assumes that the intersection of sets of concept instances is an indication of the correspondence between these concepts. Three main types of measures for comparing concept descriptions are discussed in this work:\n1. filter measures based on a path-distance 2. matching measures based on graph matching establish one-to-one correspondence between elements of the concept descriptions, and 3. probabilistic measures that give the correspondence in terms of the joint distribution of concepts.\nOther similarity measures have been developed to compute similarity values among classes belonging to different ontologies. These measures are able to take into account the difference in the levels of explicitness and formalization of the different ontology specifications. Particularly, in [22] a similarity function determines similar entity classes by using a matching process making use of synonym sets, semantic neighborhood, and discriminating features that are classified into parts, functions, and attributes.\nAnother approach [23], aimed at finding commonalities among concepts or among assertions, employs the Least Specific Concept operator (LCS [1]) that computes the most specific generalization of the input concepts (with respect to subsumption, see the next section for a formal definition). This approach is generally intended for information retrieval purposes. Considered a knowledge base and a query concept, a filter mechanism selects another concept from the knowledge base that is relevant for the query concept. Then the LCS of the two concepts is computed and finally all concepts subsumed by the LCS are returned.\nMost of the cited works adopt a semantic approach in conjunction with the structure of the considered concept descriptions. Thus, they are liable to the phenomenon of the rapid growth of the description granularity. Besides the syntactic structure of concept descriptions becomes much less important when richer DL\nrepresentations are adopted due to the expressive operators that can be employed. For these reasons, we have decided to focus our attention to a measure which is totally based on semantics."}, {"heading": "3 The Reference Representation Language", "text": "In relational learning, several solutions have been proposed for the adoption of an expressive fragment of first-order logic endowed with efficient inference procedures. Alternatively, the data model of a knowledge base can be expressed by means of DL concept languages which are empowered with precise semantics and effective inference services [1]. Besides, most of the ontology markup languages for the Semantic Web (e.g., OWL) are founded in Description Logics: representation languages borrow and implement the typical constructors of the DL languages.\nAlthough it can be assumed that annotations and conceptual models are maintained and transported using the XML-based languages mentioned above, the syntax of the representation adopted here is taken from the standard constructors proposed in the DL literature [1]. These DL representations turn out to be both sufficiently expressive and efficient from an inferential viewpoint.\nIn this section we recall syntax and semantics for the reference representation ALC [10] which is adopted in the rest paper for it turns out to be sufficiently expressive to support most of the principal constructors of an ontology markup language for the Semantic Web.\nIn a DL language, primitive concepts, denoted with names taken from NC = {C,D, . . .}, are interpreted as subsets of a certain domain of objects (resources) or equivantly as unary relation on such domain and primitive roles, denoted with names taken from NR = {R,S, . . .}, are interpreted as binary relations on such a domain (properties). Complex concept descriptions can be built using primitive concepts and roles by means of the constructors in Table 1. Their semantics is defined by an interpretation I = (\u2206I , \u00b7I), where \u2206I is the domain of the interpretation and the functor \u00b7I stands for the interpretation function, mapping the intension of concepts and roles to their extension.\nA knowledge base K = \u3008T ,A\u3009 contains two components: A T-box T and an A-box A. T is a set of concept definitions C \u2261 D, meaning CI = DI , where C is the concept name and D is a description given in terms of the language constructors. A contains extensional assertions on concepts and roles, e.g. C(a) and R(a, b), meaning, respectively, that aI \u2208 CI and (aI , bI) \u2208 RI ; C(a) and R(a, b) are said respectively instance of the concept C and instance of the role R, more generally it is said (without loss of generality) that the individual a is instance of the concept C and the same for the role. A notion of subsumption between concepts is given in terms of the interpretations:\nDefinition 3.1 (subsumption). Given two concept descriptions C and D, C subsumes D, denoted by C \u2292 D, iff for every interpretation I it holds that CI \u2287 DI.\nAxioms based on subsumption (C \u2292 D) are generally also allowed in the T-boxes as partial definitions. Indeed, C \u2261 D amounts to C \u2292 D and D \u2292 C.\nExample 3.1. An instance of concept definition in the proposed language is:\nFather \u2261 Male \u2293 \u2203hasChild.Person\nwhich corresponds to the sentence: \u201da father is a male (person) that has some persons as his children\u201d.\nThe following are instances of simple assertions:\nMale(Leonardo), Male(Vito), hasChild(Leonardo,Vito).\nSupposing that Male \u2291 Person is known (in the T-Box), one can deduce that: Person(Leonardo), Person(Vito) and then Father(Leonardo).\nGiven these primitive concepts and roles, it is possible to define many other related concepts:\nParent \u2261 Person \u2293 \u2203hasChild.Person\nand\nFatherWithoutSons \u2261 Male \u2293 \u2203hasChild.Person \u2293 \u2200hasChild.(\u00acMale)\nIt is easy to see that the following relationships hold: Parent \u2292 Father and Father \u2292 FatherWithoutSons. \u2293\u2294\nEspecially for rich DL languages such as ALC, many semantically equivalent (yet syntactically different) descriptions can be given for the same concept, which is the reason for preferring employing semantic approaches to reasoning over structural ones. Nevertheless equivalent concepts can be reduced to a normal form by means of rewriting rules that preserve their equivalence, such as: \u2200R.C1 \u2293 \u2200R.C2 \u2261 \u2200R.(C1 \u2293 C2) (see [1] for issues related to normalization and simplification).\nOne of the most important inference services from the inductive learning viewpoint is instance checking, that is deciding whether an individual is an instance of a concept (w.r.t. an A-Box). Related to this problem, it is often necessary to solve the realization problem that requires to compute, given an A-Box and an individual the concepts which the individual belongs to:\nDefinition 3.2 (Most Specific Concept). Given an A-Box A and an individual a, the most specific concept of a w.r.t. A is the concept C, denoted MSCA(a), such that A |= C(a) and \u2200D such that A |= D(a), it holds: C \u2291 D.\nwhere |= stands for the standard semantic deduction [24]. In the general case of a cyclic A-Box expressed in a an expressive DL endowed with existential or numeric restriction the MSC cannot be expressed as a finite concept description [1], thus it can only be approximated.\nSince the existence of the MSC for an individual w.r.t. an A-Box is not guaranteed or it is difficult to compute, generally an approximation of the MSC is considered up to a certain depth k. The maximum depth k has been shown to correspond to the depth of the considered A-Box, as defined in [23].\nHenceforth we will indicate generically an approximation to the maximum depth with MSC\u2217."}, {"heading": "4 The Similarity Measure", "text": "In this section we present a similarity measure which is able to assess the similarity between instances or between instance and concept or even between concepts expressed in Description Logic and in particular in the ALC logic. We call such elements generically objects. Then we will formalize the measure for the various object types. The presented measure employs the basic set theory. It is mainly founded on the commonality among objects. Particularly, the base criterion for this measure is: the similarity value between objects is not only the result of the common features, but also the result of the different characteristics too. This criterion is in agreement with an information-theoretic definition of similarity [25]."}, {"heading": "4.1 A Similarity Measure between Concepts", "text": "Let C and D two concepts description in a T-Box, expressed in the ALC logic. Now recall that through the instance checking service it is possible to determine the set of all individuals of a given A-Box that are instances of a certain concept. Let CI and DI be, respectively, the extensions of the concepts C and D respectively. By Def. 3.1, D subsumes C (written C \u2291 D) if the set of individuals that are instances of C is contained in the set of individuals that are instances of D, in other words if CI \u2286 DI . Here we refer to the canonical interpretation of the A-Box and the unique names assumption (UNA) is made: constants in the A-Box are interpreted as themselves and different names for individuals stand for different domain objects (canonical interpretation).\nSubsumption is a semantic relationship which induces an order over the space of concept descriptions: if C \u2291 D then D is more general that C or equivalently then C is more specific then D. Based on subsumption and set theory, we define a semantic similarity measure:\nDefinition 4.1 (Semantic Similarity Measure). Let L be the set of all concepts in ALC and let A be an A-Box with canonical interpretation I. The Semantic Similarity Measure s is a function\ns : L \u00d7 L 7\u2192 [0, 1]\ndefined as follows:\ns(C,D) = |II |\n|CI |+ |DI | \u2212 |II | \u00b7max(|II |/|CI |, |II |/|DI |)\nwhere I = C \u2293D and (\u00b7)I computes the concept extension wrt the interpretation I.\nThe measure can be briefly justified as follows. In case of semantic equivalence of the input concepts (C \u2291 D and D \u2291 C), the maximum value of the similarity is assigned.\nIn case of disjunction, the minimum value of similarity is assigned because the two concepts are totally different: their extensions do not overlap. Indeed, they are semantically unrelated with respect to the generalization order: their intersection amounts to the bottom concept.\nIn case of overlapping concepts, a value in the range ]0, 1[ is computed. It expresses the similarity between the two concepts (represented by the factor |II |/(|CI | + |DI | \u2212 |II |)) reduced by a quantity (max(|II |/|CI |, |II |/|DI |)) which represents the major incidence of the intersection with respect to either concept. This means considering similarity not as an absolute value but as weighted with respect to a degree of non-similarity. Indeed, the higher such factor is the more one of the concepts is likely to be subsumed by the other. This is in accordance to the strong semantic relation between the concepts ensured by subsumption.\nExample 4.1. Let be consider the knowledge base with the T-Box and A-Box reported below.\nPrimitive Concepts: NC = {Female, Male, Human}.\nPrimitive Roles: NR = {HasChild, HasParent, HasGrandParent, HasUncle}.\nT-Box: T = { Woman \u2261 Human \u2293 Female Man \u2261 Human \u2293 Male Parent \u2261 Human \u2293 \u2203HasChild.Human\nMother \u2261 Woman \u2293 Parent \u2203HasChild.Human Father \u2261 Man \u2293 Parent Child \u2261 Human \u2293 \u2203HasParent.Parent Grandparent \u2261 Parent \u2293 \u2203HasChild.( \u2203 HasChild.Human) Sibling \u2261 Child \u2293 \u2203HasParent.( \u2203 HasChild \u2265 2) Niece \u2261 Human \u2293 \u2203HasGrandParent.Parent \u2294 \u2203HasUncle.Uncle Cousin \u2261 Niece \u2293 \u2203HasUncle.(\u2203 HasChild.Human) }.\nA-Box: A = {Woman(Claudia), Woman(Tiziana), Father(Leonardo), Father(Antonio), Father(AntonioB), Mother(Maria), Mother(Giovanna), Child(Valentina), Sibling(Martina), Sibling(Vito), HasParent(Claudia,Giovanna), HasParent(Leonardo,AntonioB), HasParent(Martina,Maria), HasParent(Giovanna,Antonio), HasParent(Vito,AntonioB), HasParent(Tiziana,Giovanna), HasParent(Tiziana,Leonardo), HasParent(Valentina,Maria), HasParent(Maria,Antonio), HasSibling(Leonardo,Vito), HasSibling(Martina,Valentina), HasSibling(Giovanna,Maria), HasSibling(Vito,Leonardo), HasSibling(Tiziana,Claudia), HasSibling(Valentina,Martina), HasChild(Leonardo,Tiziana), HasChild(Antonio,Giovanna), HasChild(Antonio,Maria), HasChild(Giovanna,Tiziana), HasChild(Giovanna,Claudia), HasChild(AntonioB,Vito), HasChild(AntonioB,Leonardo), HasChild(Maria,Valentina), HasUncle(Martina,Giovanna), HasUncle(Valentina,Giovanna) }\nConsidered this knowledge base, it is possible to compute the similarity value between concepts as shown:\ns(Grandparent,Father) = |Grandparent\u2293Father|\n|Granparent|+|Father|\u2212|Grandparent\u2293Father| \u00b7\n\u00b7 max( |Grandparent\u2293Father| |Grandparent| , |Grandparent\u2293Father| |Father| ) = 2 2+3\u22122 \u00b7max( 2 2 , 2 3 ) = 0.67\nIn the same way it is possible to compute the similarity value among all concepts the defined above. \u2293\u2294"}, {"heading": "4.2 Derived Similarity Measures Involving Individuals", "text": "Let us recall that, for every individual in the A-Box, it is possible to calculate the Most Specific Concept MSC (see Def. 3.2) or at least its approximation MSC\u2217. In some cases they are equivalent concepts.\nLet a and b two individuals in a given A-Box. We can calculate A\u2217 = MSC\u2217(a) and B\u2217 = MSC\u2217(b). Now the semantic similarity measure s can be applied to\nthese concept descriptions, thus yielding the similarity value of two instances:\n\u2200a, b : s(a, b) = s(A\u2217, B\u2217) = s(MSC\u2217(a),MSC\u2217(b))\nAnalogously, the similarity value between a concept description C and an individual a can be computed by determining the MSC approximation of the individual and then applying the similarity measure:\n\u2200a : s(a, C) = s(MSC\u2217(a), C)\nExample 4.2. Considering the knowledge base of the previous example, it is possible to show how to determine the similarity value between individuals. Let Claudia and Tiziana be such individuals. First of all, using the MSC\u2217 operator, we have:\nMSC*(Claudia) = Woman \u2293 Sibling \u2293 \u2203 HasParent(Mother \u2293 Sibling \u2293 \u2203HasSibling(C1)\u2293 \u2203HasParent(C2) \u2293 \u2203HasChild(C3))"}, {"heading": "C1 \u2261 Mother \u2293 Sibling \u2293 \u2203HasParent(Father \u2293 Parent) \u2293 \u2203HasChild(Cousin \u2293", "text": "\u2203HasSibling(Cousin \u2293 Sibling \u2293 \u2203HasSibling.\u22a4))"}, {"heading": "C2 \u2261 Father \u2293 \u2203HasChild(Mother \u2293 Sibling)", "text": ""}, {"heading": "C3 \u2261 Woman \u2293 Sibling \u2293 \u2203HasSibling.\u22a4 \u2293 \u2203HasParent(C4)", "text": ""}, {"heading": "C4 \u2261 Father\u2293 Sibling \u2293 \u2203HasSibling(Uncle \u2293 Sibling \u2293 \u2203HasParent(Father \u2293", "text": "Grandparent)) \u2293 \u2203HasParent(Father \u2293 Grandparent \u2293 \u2203HasChild(Uncle \u2293 Sibling))\nAnd for the individual Tiziana:\nMSC*(Tiziana) = Woman \u2293 Sibling \u2293 \u2203HasSibling(Woman \u2293 Sibling \u2293 \u2203HasParent(C5)) \u2293 \u2203HasParent(Father \u2293 Sibling \u2293 \u2203HasSibling(C6)\u2293 \u2203HasParent(C7)) \u2293 \u2203HasParent(Uncle \u2293 Mother \u2293 Sibling \u2293 \u2203HasChild(Woman \u2293 Sibling))\nC5 \u2261 Mother \u2293 Sibling \u2293 \u2203HasSibling(C8) \u2293 \u2203HasParent(Father \u2293 \u2203HasChild(Mother \u2293 Sibling))"}, {"heading": "C8 \u2261 Mother \u2293 Sibling \u2293 \u2203HasParent(Father \u2293 Grandparent) \u2293 \u2203HasChild(Cousin \u2293", "text": "\u2203HasSibling(Cousin \u2293 Sibling \u2293 \u2203HasSibling.\u22a4))\nC6 \u2261 Uncle \u2293 Sibling \u2293 \u2203HasParent(Father \u2293 Grandparent)"}, {"heading": "C7 \u2261 Father \u2293 Granparent \u2293 \u2203HasChild(Uncle \u2293 Sibling)", "text": "Note that it holds that MSC\u2217(Tiziana) 6\u2291 MSC\u2217(Claudia) and MSC\u2217(Claudia) 6\u2291 MSC\u2217(Tiziana). Now, since MSC\u2217(Tiziana) = {Tiziana} and MSC\u2217(Claudia) =\n{Claudia,Tiziana}, the similarity value between these individuals is:\ns(Claudia,Tiziana) = 1\n1 + 2\u2212 1 \u00b7 max\n(\n1 2 , 1 1\n)\n= 0.5\nIn the same way it could be calculate the similarity value between concept and individual. \u2293\u2294"}, {"heading": "5 Discussion", "text": "First of all it is important to note that, differently from previously proposed similarity measures (see Sect. 2), this measure is totally semantic. Indeed, it uses only semantic inferences like instance checking (to solve the retrieval problem [1], that amounts to computing the extension of a concept given an A-Box); it does not make use of the syntactic structure of the concept description, thus it is independent from the granularity level of descriptions. This fact reflects the intrinsic complexity of expressive DL languages like ALC for which a structural approach to reasoning is simply ineffective (subsumption is computed using a tableaux rather than a structural algorithm). Therefore, the definition of s employs set theory and semantic services, so it make use of numeric approach despite its application on a symbolic DL representation.\nOur similarity measure has been applied on knowledge base written using the ALC logic. However, for the reasons mentioned above, it is important to note that s is applicable to any DL endowed with the basic reasoning services required by its definitions, namely: instance checking and MSC (approximation).\nSimilarity measures turn out to be useful in several applications and for many tasks such as commonality-based information retrieval in the context of a terminological knowledge representation system (which is a relatively new application context [23]), realization of semantic search engine, classification, case-based reasoning, clustering.\nThis last task is our goal. In particular, having defined a measure that is applicable both between concepts and between individuals and between concept and individuals, it is suitable for agglomerative clustering and for divisional clustering too. However we have noticed that s measure is suitable for measuring similarity between concepts but it presents some problem in case of individuals. This is due to the use of the individual\u2019s MSC (approximation) which often turn out to be so specific that its extension likely includes only the considered individual; this phenomenon consequently provokes a totally dissimilarity value even if the individuals semantically express similar underlying concepts. So now we are investigating ways to overcome this limitation.\nBelow we prove that the function s presented is really a similarity measure and discuss the complexity issues related to its computation."}, {"heading": "5.1 Properties of the Similarity Measure", "text": "In this section we prove that s function actually is a similarity measure (or similarity function [26]), according to the formal definition:\nDefinition 5.1 (Similarity Measure). Let E be a set of elements among which a similarity measure has to be defined. A similarity measure E is a realvalued function d defined on the set E \u00d7 E that fulfills the following properties:\n1. f(a, b) \u2265 0 \u2200a, b \u2208 E (positive definiteness) 2. f(a, b) = f(b, a) \u2200a, b \u2208 E (symmetry) 3. \u2200a, b \u2208 E : f(a, b) \u2264 f(a, a)\n\u00bfFrom the definition given in the previous section it is straightforward to prove that s satisfies the first property because s has value in the real interval [0, 1]. Then, as previously said, s assigns the maximum value when the concepts subsume each other; this last is the condition of equality of concept, so the third property is satisfied too. The property of symmetry is also trivially verified. Indeed set intersection, sum, product and maximum are commutative. It is straightforward to note that given two concepts C and D, it holds that:\ns(C,D) = |I I | |CI |+|DI |\u2212|II| \u00b7max( |II | |CI| , |II | |DI | ) =\n|II | |DI |+|CI |\u2212|II| \u00b7max( |II | |DI | , |II | |CI | ) = s(D,C)\nnote that I remains the same because of the commutativity of intersection."}, {"heading": "5.2 Complexity Issues", "text": "In order to assess the complexity of s, the three different cases of applicability of the measure are discussed separately. They all depend on the complexity of the instance checking inference for the adopted DL language, hereafter indicated with C(IC).\nSimilarity between concepts: s is a numerical measure, all calculus in s need of constant complexity; it holds that:\nC(s) = 3 \u00b7 C(IC)\nbecause the instance check is repeated three times: for the concept descriptions C, D and I. Similarity between an individual and a concept: in this case, besides of the instance checking operations required by the previous case, the MSC approximation of the considered individual is to be computed. Thus, denoted with C(MSC\u2217) the complexity of the MSC approximation, it holds that:\nC(s) = C(MSC\u2217) + 3 \u00b7 C(IC)\nSimilarity between individuals: this case is analogous to the previous one, the only difference is that now two MSC\u2217 approximations are to be computed for the arguments. So the complexity in this case is:\nC(s) = 2 \u00b7 C(MSC\u2217) + 3 \u00b7 C(IC)\nAs clearly shown by these formul\u00e6, the measure complexity is sensible to the choice of the reference DL. For instance, for the ALC logic, C(IC) is PSPACE (see [1], Ch. 3). For the cases involving individuals it suffices to recall that also the computation of the MSC approximations depends on instance checking besides of the specific algorithm [23]."}, {"heading": "6 Conclusions and Future Work", "text": "We have introduced a new similarity measure s which is primarily meant for computing a similarity value between concept descriptions but, as previously shown, it could be also employed for assessing the similarity between individuals and between a concept description and an individual.\nAs previously suggested, such a measure could be applied to many tasks, namely clustering and retrieval on DL knowledge bases.\nThis measure could be improved in the case of non overlapping concepts. In particular, we will try to assess similarity in different cases employing a notion of distance between concepts.\nThis is strictly related to the weakness of the presented semantic similarity measure in cases involving individuals. In particular, we are addressing our research on the tuning of a semantic operator for the generalization of the approximated MSC obtained. In this way, we may overcome the actual problem, because the concept would be less specific then MSC and so it would instantiate more individuals that the selected one for calculating the similarity value. With this fitting we would keep a totally semantic similarity measure, but really applicable in every context concerning DLs representations."}], "references": [{"title": "eds.: The Description Logic Handbook", "author": ["F. Baader", "D. Calvanese", "D. McGuinness", "D. Nardi", "P. Patel-Schneider"], "venue": null, "citeRegEx": "1", "shortCiteRegEx": "1", "year": 2003}, {"title": "Concept formation in structured domains", "author": ["K. Thompson", "P. Langley"], "venue": null, "citeRegEx": "3", "shortCiteRegEx": "3", "year": 1991}, {"title": "Learning conjuntive concepts in structural domains", "author": ["D. Haussler"], "venue": "Machine Learning", "citeRegEx": "4", "shortCiteRegEx": "4", "year": 1989}, {"title": "AL-log: Integrating Datalog and description logics", "author": ["F. Donini", "M. Lenzerini", "D. Nardi", "M. Schaerf"], "venue": "Journal of Intelligent Information Systems", "citeRegEx": "5", "shortCiteRegEx": "5", "year": 1998}, {"title": "Towards learning in CARIN-ALN", "author": ["C. Rouveirol", "V. Ventos"], "venue": "eds.: Proceedings of the 10th International Conference on Inductive Logic Programming. Volume 1866 of LNAI.,", "citeRegEx": "6", "shortCiteRegEx": "6", "year": 2000}, {"title": "Learnability of description logic programs", "author": ["J.U. Kietz"], "venue": "Proceedings of the 12th International Conference on Inductive Logic Programming. Volume 2583 of LNAI.,", "citeRegEx": "7", "shortCiteRegEx": "7", "year": 2002}, {"title": "A polynomial approach to the constructive induction of structural knowledge", "author": ["J.U. Kietz", "K. Morik"], "venue": "Machine Learning", "citeRegEx": "8", "shortCiteRegEx": "8", "year": 1994}, {"title": "A refinement operator for description logics", "author": ["L. Badea", "S.H. Nienhuys-Cheng"], "venue": "Proceedings of the 10th International Conference on Inductive Logic Programming. Volume 1866 of LNAI.,", "citeRegEx": "9", "shortCiteRegEx": "9", "year": 2000}, {"title": "Attributive concept descriptions with complements", "author": ["M. Schmidt-Schau\u00df", "G. Smolka"], "venue": "Artificial Intelligence", "citeRegEx": "10", "shortCiteRegEx": "10", "year": 1991}, {"title": "Information retrieval based on conceptual distance in is-a hierarchies", "author": ["J. Lee", "M. Kim", "Y. Lee"], "venue": "Journal of Documentation", "citeRegEx": "11", "shortCiteRegEx": "11", "year": 1993}, {"title": "Experiments on using semantic distances between words in image caption retrieval", "author": ["A.F. Smeaton", "I. Quigley"], "venue": "eds.: Proceedings of the 19th International ACM SIGIR Conference on Research and Development in Information Retrieval,", "citeRegEx": "12", "shortCiteRegEx": "12", "year": 1996}, {"title": "Semantic symilarity based on corpus statistic and lexical taxonomy", "author": ["J. Jang", "D. Conrath"], "venue": "Proceedings of the International Conference on Computational Linguistics", "citeRegEx": "13", "shortCiteRegEx": "13", "year": 1997}, {"title": "Ontoseek: Content-based access to the web", "author": ["N. Guarino", "C. Masolo", "G. Verete"], "venue": "IEEE Intelligent Systems", "citeRegEx": "14", "shortCiteRegEx": "14", "year": 1999}, {"title": "Resource integration using a large knowledge base in carnot", "author": ["C. Collet", "M.N. Huhns", "W.M. Shen"], "venue": "IEEE Computer", "citeRegEx": "15", "shortCiteRegEx": "15", "year": 1991}, {"title": "Knowledge based integration of heterogeneous databases", "author": ["P. Fankhauser", "E.J. Neuhold"], "venue": "Proceedings of the IFIP WG 2.6 Database Semantics Conference on Interoperable Database Systems (DS-5). IFIP Transactions,", "citeRegEx": "16", "shortCiteRegEx": "16", "year": 1992}, {"title": "Automated resolution of semantic heterogeneity in multidatabases", "author": ["M.W. Bright", "A.R. Hurson", "S.H. Pakzad"], "venue": "ACM Transaction on Database Systems", "citeRegEx": "17", "shortCiteRegEx": "17", "year": 1994}, {"title": "Semantic aspects of interoperable GIS", "author": ["Y. Bishr"], "venue": "Technical report, Wageningen Agricultural University and ITC - Netherland", "citeRegEx": "18", "shortCiteRegEx": "18", "year": 1997}, {"title": "Features od similarity", "author": ["A. Tversky"], "venue": "Psycological Review", "citeRegEx": "19", "shortCiteRegEx": "19", "year": 1997}, {"title": "Semantic similarity in a taxonomy: An information-based measure and its application to problems of ambiguity in natural language", "author": ["P. Resnik"], "venue": "Journal of Artificial Intelligence Research", "citeRegEx": "20", "shortCiteRegEx": "20", "year": 1999}, {"title": "Comparing concepts in differentiated ontologies", "author": ["P. Weinstein", "P. Bimingham"], "venue": "Proceedings of 12th Workshop on Knowledge Acquisition, Modelling, and Management", "citeRegEx": "21", "shortCiteRegEx": "21", "year": 1999}, {"title": "Determining semantic similarity among entity classes from different ontologies", "author": ["M.A. Rod\u0155\u0131guez", "M.J. Egenhofer"], "venue": "IEEE Transaction on Knowledge and Data Engineering", "citeRegEx": "22", "shortCiteRegEx": "22", "year": 2003}, {"title": "Commonality-based ABox retrieval. Technical Report FBI-HH-M- 291/2000", "author": ["T. Mantay"], "venue": "Department of Computer Science,", "citeRegEx": "23", "shortCiteRegEx": "23", "year": 2000}, {"title": "Symbolic Logic and Mechanical Theorem Proving", "author": ["C. Chang", "R. Lee"], "venue": null, "citeRegEx": "24", "shortCiteRegEx": "24", "year": 1973}, {"title": "An information-theroretic defintion of similarity", "author": ["D. Lin"], "venue": "Proceedings of the International Conference on Machine Learning,", "citeRegEx": "25", "shortCiteRegEx": "25", "year": 1998}, {"title": "Analysis of Symbolic Data: Exploratory Methods for Extracting Statistical Information from Complex Data", "author": ["H. Bock"], "venue": null, "citeRegEx": "26", "shortCiteRegEx": "26", "year": 1999}], "referenceMentions": [{"referenceID": 0, "context": "Nowadays, standard ontology markup languages are supported by well-founded semantics of Description Logics (DLs) together with a series of available automated reasoning services [1].", "startOffset": 178, "endOffset": 181}, {"referenceID": 1, "context": "The induction of structural knowledge like the T-box taxonomies is not new in machine learning, especially in the context of concept formation [3] where clusters of similar objects are aggregated in hierarchies according to heuristic criteria or similarity measures.", "startOffset": 143, "endOffset": 146}, {"referenceID": 2, "context": "Yet, the problem of the induction of structural knowledge turns out to be hard in first-order logic or equivalent representations [4].", "startOffset": 130, "endOffset": 133}, {"referenceID": 3, "context": "In Inductive Logic Programming (ILP) attempts have been made to extend relational learning techniques towards hybrid representations based on both clausal and description logics [5, 6, 7].", "startOffset": 178, "endOffset": 187}, {"referenceID": 4, "context": "In Inductive Logic Programming (ILP) attempts have been made to extend relational learning techniques towards hybrid representations based on both clausal and description logics [5, 6, 7].", "startOffset": 178, "endOffset": 187}, {"referenceID": 5, "context": "In Inductive Logic Programming (ILP) attempts have been made to extend relational learning techniques towards hybrid representations based on both clausal and description logics [5, 6, 7].", "startOffset": 178, "endOffset": 187}, {"referenceID": 6, "context": "[8]).", "startOffset": 0, "endOffset": 3}, {"referenceID": 7, "context": "Other approaches propose a top-down search for correct concept definitions [9].", "startOffset": 75, "endOffset": 78}, {"referenceID": 8, "context": "In this perspective, we introduce a novel similarity measure between concept descriptions based on semantics, which is suitable for expressive DLs like ALC [10, 1].", "startOffset": 156, "endOffset": 163}, {"referenceID": 0, "context": "In this perspective, we introduce a novel similarity measure between concept descriptions based on semantics, which is suitable for expressive DLs like ALC [10, 1].", "startOffset": 156, "endOffset": 163}, {"referenceID": 0, "context": "Besides measuring the similarity of two concept descriptions, we propose a manner based on notion of most specific concept of an individual [1] for employing the same measure for the individual-concept and individual-individual similarity cases.", "startOffset": 140, "endOffset": 143}, {"referenceID": 9, "context": "Recent investigations in these fields have emphasized the use of ontologies and semantic similarity functions as a mechanism for comparing concepts and/or concept instances that can be retrieved or integrated across heterogeneous repositories [11, 12, 13, 14].", "startOffset": 243, "endOffset": 259}, {"referenceID": 10, "context": "Recent investigations in these fields have emphasized the use of ontologies and semantic similarity functions as a mechanism for comparing concepts and/or concept instances that can be retrieved or integrated across heterogeneous repositories [11, 12, 13, 14].", "startOffset": 243, "endOffset": 259}, {"referenceID": 11, "context": "Recent investigations in these fields have emphasized the use of ontologies and semantic similarity functions as a mechanism for comparing concepts and/or concept instances that can be retrieved or integrated across heterogeneous repositories [11, 12, 13, 14].", "startOffset": 243, "endOffset": 259}, {"referenceID": 12, "context": "Recent investigations in these fields have emphasized the use of ontologies and semantic similarity functions as a mechanism for comparing concepts and/or concept instances that can be retrieved or integrated across heterogeneous repositories [11, 12, 13, 14].", "startOffset": 243, "endOffset": 259}, {"referenceID": 13, "context": "Semantic similarity is typically determined as a function of the path distance between terms in the hierarchical structure underlying the ontology [15, 16, 17].", "startOffset": 147, "endOffset": 159}, {"referenceID": 14, "context": "Semantic similarity is typically determined as a function of the path distance between terms in the hierarchical structure underlying the ontology [15, 16, 17].", "startOffset": 147, "endOffset": 159}, {"referenceID": 15, "context": "Semantic similarity is typically determined as a function of the path distance between terms in the hierarchical structure underlying the ontology [15, 16, 17].", "startOffset": 147, "endOffset": 159}, {"referenceID": 17, "context": "matching [19] and information content [13, 20].", "startOffset": 9, "endOffset": 13}, {"referenceID": 11, "context": "matching [19] and information content [13, 20].", "startOffset": 38, "endOffset": 46}, {"referenceID": 18, "context": "matching [19] and information content [13, 20].", "startOffset": 38, "endOffset": 46}, {"referenceID": 19, "context": "A recent work [21] presents a number of measures for comparing concepts located in different and possibly heterogeneous ontologies.", "startOffset": 14, "endOffset": 18}, {"referenceID": 20, "context": "Particularly, in [22] a similarity function determines similar entity classes by using a matching process making use of synonym sets, semantic neighborhood, and discriminating features that are classified into parts, functions, and attributes.", "startOffset": 17, "endOffset": 21}, {"referenceID": 21, "context": "Another approach [23], aimed at finding commonalities among concepts or among assertions, employs the Least Specific Concept operator (LCS [1]) that computes the most specific generalization of the input concepts (with respect to subsumption, see the next section for a formal definition).", "startOffset": 17, "endOffset": 21}, {"referenceID": 0, "context": "Another approach [23], aimed at finding commonalities among concepts or among assertions, employs the Least Specific Concept operator (LCS [1]) that computes the most specific generalization of the input concepts (with respect to subsumption, see the next section for a formal definition).", "startOffset": 139, "endOffset": 142}, {"referenceID": 0, "context": "Alternatively, the data model of a knowledge base can be expressed by means of DL concept languages which are empowered with precise semantics and effective inference services [1].", "startOffset": 176, "endOffset": 179}, {"referenceID": 0, "context": "Although it can be assumed that annotations and conceptual models are maintained and transported using the XML-based languages mentioned above, the syntax of the representation adopted here is taken from the standard constructors proposed in the DL literature [1].", "startOffset": 260, "endOffset": 263}, {"referenceID": 8, "context": "In this section we recall syntax and semantics for the reference representation ALC [10] which is adopted in the rest paper for it turns out to be sufficiently expressive to support most of the principal constructors of an ontology markup language for the Semantic Web.", "startOffset": 84, "endOffset": 88}, {"referenceID": 0, "context": "(C1 \u2293 C2) (see [1] for issues related to normalization and simplification).", "startOffset": 15, "endOffset": 18}, {"referenceID": 22, "context": "where |= stands for the standard semantic deduction [24].", "startOffset": 52, "endOffset": 56}, {"referenceID": 0, "context": "In the general case of a cyclic A-Box expressed in a an expressive DL endowed with existential or numeric restriction the MSC cannot be expressed as a finite concept description [1], thus it can only be approximated.", "startOffset": 178, "endOffset": 181}, {"referenceID": 21, "context": "The maximum depth k has been shown to correspond to the depth of the considered A-Box, as defined in [23].", "startOffset": 101, "endOffset": 105}, {"referenceID": 23, "context": "This criterion is in agreement with an information-theoretic definition of similarity [25].", "startOffset": 86, "endOffset": 90}, {"referenceID": 0, "context": "s : L \u00d7 L 7\u2192 [0, 1]", "startOffset": 13, "endOffset": 19}, {"referenceID": 0, "context": "Indeed, it uses only semantic inferences like instance checking (to solve the retrieval problem [1], that amounts to computing the extension of a concept given an A-Box); it does not make use of the syntactic structure of the concept description, thus it is independent from the granularity level of descriptions.", "startOffset": 96, "endOffset": 99}, {"referenceID": 21, "context": "Similarity measures turn out to be useful in several applications and for many tasks such as commonality-based information retrieval in the context of a terminological knowledge representation system (which is a relatively new application context [23]), realization of semantic search engine, classification, case-based reasoning, clustering.", "startOffset": 247, "endOffset": 251}, {"referenceID": 24, "context": "In this section we prove that s function actually is a similarity measure (or similarity function [26]), according to the formal definition:", "startOffset": 98, "endOffset": 102}, {"referenceID": 0, "context": "\u00bfFrom the definition given in the previous section it is straightforward to prove that s satisfies the first property because s has value in the real interval [0, 1].", "startOffset": 159, "endOffset": 165}, {"referenceID": 0, "context": "For instance, for the ALC logic, C(IC) is PSPACE (see [1], Ch.", "startOffset": 54, "endOffset": 57}, {"referenceID": 21, "context": "For the cases involving individuals it suffices to recall that also the computation of the MSC approximations depends on instance checking besides of the specific algorithm [23].", "startOffset": 173, "endOffset": 177}], "year": 2009, "abstractText": "A totally semantic measure is presented which is able to calculate a similarity value between concept descriptions and also between concept description and individual or between individuals expressed in an expressive description logic. It is applicable on symbolic descriptions although it uses a numeric approach for the calculus. Considering that Description Logics stand as the theoretic framework for the ontological knowledge representation and reasoning, the proposed measure can be effectively used for agglomerative and divisional clustering task applied to the semantic web domain.", "creator": "LaTeX with hyperref package"}}}