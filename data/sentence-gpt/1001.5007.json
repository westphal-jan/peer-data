{"id": "1001.5007", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "27-Jan-2010", "title": "Trajectory Clustering and an Application to Airspace Monitoring", "abstract": "This paper presents a framework aimed at monitoring the behavior of aircraft in a given airspace. Nominal trajectories are determined and learned using data driven methods. Standard procedures are used by air traffic controllers (ATC) to guide aircraft, ensure the safety of the airspace, and to maximize the runway occupancy.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "histories": [["v1", "Wed, 27 Jan 2010 19:24:33 GMT  (2835kb,D)", "https://arxiv.org/abs/1001.5007v1", "15 pages, 20 figures"], ["v2", "Wed, 27 Jan 2010 21:23:03 GMT  (2835kb,D)", "http://arxiv.org/abs/1001.5007v2", "15 pages, 20 figures"]], "COMMENTS": "15 pages, 20 figures", "reviews": [], "SUBJECTS": "cs.LG", "authors": ["maxime gariel", "ashok n srivastava", "eric feron"], "accepted": false, "id": "1001.5007"}, "pdf": {"name": "1001.5007.pdf", "metadata": {"source": "CRF", "title": "Trajectory Clustering and an Application to Airspace Monitoring", "authors": ["Maxime Gariel", "Ashok N. Srivastava", "Eric Feron"], "emails": [], "sections": [{"heading": null, "text": "INTRODUCTION\nTo address the challenges of increase in air traffic volume, new technologies and procedures are being developped in the context of NextGen [1] in the US and SESAR [2] in Europe. Automation is a key element, necessary to achieve the goals set by those programs. New procedures involving more accurate navigation are predicted to increase the capacity of the airspace. Analyzing trajectory records is a key element to assess the performances and the accuracy of new concepts of operations. Automated tools are needed to process the large amount of daily flights and corresponding records. This work presents two methods to cluster trajectories and identify flights that followed identical air routes. The first method is based on the identification of waypoints\nPh.D Candidate, Georgia Institute of Technology, 270 Ferst Drive, Atlanta, GA, 30332\nPrincipal Investigator, Integrated Vehicle Health Management; Group Lead, Intelligent Data Understanding, NASA Ames Research Center, Moffett Field, CA\nDutton/Ducoffe professor of Aerospace Engineering, Georgia Institute of Technology, 270 Ferst Drive, Atlanta, GA, 30332.\nin the trajectories, and the second method is based on a principal components analysis of resampled trajectories. Operations in the terminal area are managed by Air Traffic Controllers (ATC) and are not part of the flight plans. It was therefore decided not to use any flight plan knowledge or aircraft intent other than the destination airport. Then using the knowledge gathered from the clustering methods, we propose a real time airspace monitoring tool that evaluates the conformance of current flight to pre-identified nominal trajectories. A measure of airspace complexity based on this conformance is also proposed with the tool. The overall method developed in this paper is neither location nor data specific and can easily be adapted to other data sets since unsupervised methods are used, and the data is not labeled. This paper considers radar tracks in a terminal radar approach control (TRACON). However, the underlying principles may also be used for other applications, such as a GPS-equiped fleet of trucks. Since this paper deals with different problems such as trajectory clustering, airspace monitoring and airspace complexity, the literature review is spread along the paper at the begining of the corresponding section. The remainder of this paper is organized as follows: The first section presents the data set used for the study. The second section presents the trajectory clustering methods, and finally, before the concluding remarks, the third section introduces AirTrajectoryMiner, the airspace monitoring tool that detects in real time the aircraft that do not comply to nominal procedures."}, {"heading": "I. AVAILABLE DATA", "text": "The available data 1 consists of records of flight tracks over the San Francisco bay area, for the first 3 months of 2006. The records cover the Northern California TRACON (NCT), that is, a cylinder of radius 80km and height 6,000m centered at Oakland international airport. The NCT contains 3 main airports \u2013\u2013 Oakland, San Francisco (SFO) and San Jose International airports \u2013\u2013 as\n1The complete dataset is available for download http://dashlink.arc. nasa.gov\nar X\niv :1\n00 1.\n50 07\nv2 [\ncs .L\nG ]\n2 7\nJa n\n20 10\n2\nwell as many smaller airports. The NCT is the fourth busiest terminal area in the US [3] with an average of 133,000 flight instrument operations per month in 2006. The data, made of the position and speed of aircraft, is organized by flight and also contains metadata for each flight that include: type of operation (departure/arrival), origin and destination airports, aircraft type (business, jet, helicopter, other, etc), date and time of beginning of record, duration of the record, etc.\nUsing the available metadata, visual flight rules (VFR) traffic is discarded, since it is more unpredictable and does not follow the same rules as instrument flight rules (IFR) traffic. The metadata is used to sort trajectories by airport and operation type, i.e. take off or landing. After a visual analysis of the flight patterns for the different airports, it was decided to focus the study on the landings at SFO. It is the busiest airport in the NCT and the arrival tracks present the most interesting patterns by their numbers and variety. The most frequent configuration is the \u201cWest\u201d configuration, where aircraft land on runways 28L/R and take off from runways 19L/R. A diagram of SFO is presented in Figure 1, and Figure 2 depicts the NCT traffic patterns typically used in the west configuration.\nIn this paper, the axes are set by the radar, located at (0, 0, 0). The x and y axis define the horizontal plan and z the vertical direction, positive going upward. To each recorded flight, corresponds an aircraft i and a trajectory Ti, i = 1 . . . n, where n is the total number of trajectories of interest in the dataset. Each trajectory Ti is a mi\u00d74 matrix, and the line T li of Ti is the lth radar echo, given by T li = (x l i, y l i, z l i, t l i), where (x l i, y l i, z l i) is\nthe 3 dimensional coordinates of aircraft i at time tli. The trajectories have different numbers of points mi, varying from 10 to about 550 points, depending on the duration of the trajectory. Trajectories with a few datapoints correspond to trajectories on the boundaries of the dataset, or to short flights from San Jose International Airport or Oakland Internation Airport to SFO. The interval between points is between 4 and 5 seconds and is given by the rotational speed of the radar (most likely 4.8 sec). The time stamp tli is rounded to the nearest second."}, {"heading": "II. TRAJECTORY CLUSTERING", "text": "In this section, two trajectory clustering methods are presented. After a review of existing trajectory clustering methods, a technique based on trajectories\u2019 \u201cwaypoints\u201d is presented. Then, a technique based on a principal component analysis of resampled and augmented trajectories is introduced."}, {"heading": "A. Literature review", "text": "The use of positioning devices such as GPS and the collection of data has increased over the past 15 years leading to an increasing number of tracking applications. An objective of tracking is to discover common patterns on the one hand, and detect outliers on the other hand.\nPiciareli et al. [4] presented an on-line trajectory clustering method for real time video surveillance. Moving objects such as pedestrians are identified in video frames and their trajectories are compared against existing cluster representatives, that is, an average of all the trajectories in the cluster. The match between a trajectory and a cluster is determined using the mean of the normalized\n3 distances of every trajectory point to the nearest point of the cluster representative. If a match is found, the cluster representative is updated. If not, a new cluster is created. In this approach, the cluster representatives evolve with time. This clustering method was used by Dahlbom and Niklasson for coastal surveillance but failed to provide satisfactory results when dealing with real data sets [5] such as ship trajectories.\nLee et al. [6] presented a partition-and-group framework for trajectory clustering. Trajectories are partitionned in subtrajectories. Subtrajectories are represented by line segments and grouped using a distance function. The distance function incorporates three components that measure the perpendicular distance, the parallel distance and the angular distance between the line segments. The clustering algorithm is density based, i.e clusters are created where the density of points is the highest. The formulation is powerful but the results are presented on very noisy data where it is difficult to visually cluster the trajectories.There exists no well-defined measure to assess the results of the clustering method. Based on the same distance measure, Lee et al. [7] present a trajectory outlier detection procedure. The results are presented on the same noisy datasets and therefore difficult to evaluate visually.\nVlachos et al. used similarity functions based on the longest common subsequence (LCS) to discover similar multidimensional trajectories [8]. Their LCS based clustering method appears to be more efficient than Euclidean distance based measures and dynamic time warping distance functions, especially in the presence of noise. Dynamic time warping allows the tool to measure distance between sequences which may vary in time or speed.\nEckstein proposed an automated flight track taxonomy [9] . The trajectories are first resampled, then clustered using k-means on a reduced order model. The model reduction is the truncation of a proper orthogonal decomposition (POD), also called principal components analysis. The trajectories are clustered using only the first two modes of the decomposition, as they capture 95% of the fluctuations of the dataset used."}, {"heading": "B. Waypoint based trajectory clustering", "text": "This section presents a novel algorithm for aircraft trajectory clustering. This algorithm takes advantage of aircraft trajectory properties: aircraft usually fly straight, with a limited number of turns. This method arises from the current instrument flight rules procedures. When approaching an airport, aircraft usually follow published procedures made of a sequence of waypoints.\nA waypoint is characterized by its GPS coordinates and, sometimes, an altitude indication. The planar localization of a waypoint is very accurate but its vertical component often looks like \u201cat or above \u2014ft\u201d. Vertical clearances are delivered by ATC and trajectories vertical profiles are then at the discretion of the pilots. Therefore, this method focuses on the 2D coordinates of the waypoints in the (x, y) plan. This method is an efficient way to determine the compliance of flown trajectories with published procedures. Nevertheless, published procedures cannot be used because of the limited number of waypoints or reporting points located in the TRACON. In Section III, we further show this by comparing the results of the trajectory clustering with the published waypoints.\nThe objective is to identify and group the turning points into \u201cwaypoints\u201d. A turning point is a point in the trajectory where the aircraft changes heading. Then trajectories are represented by a sequence of waypoints. Finally, trajectories are clustered using the Longuest Common Subsequence (LCS). The algorithm proceeds using the following steps and it is summarized in Figure 3:\n1) Identify the location of the turning points of each trajectory. 2) Cluster of the set of all the turning points of all the trajectories. This clustering task is done using kmeans [10], [11] or DBSCAN [12] (Density-Based Spatial Clustering of Applications with Noise). Section II-B2 gives an overview of those algorithms. This clustering provides a finite number of waypoints where it has been determined that aircraft usually turn. 3) Represent each trajectory by its sequence of turning points. 4) Cluster the sequences of waypoints using the SequenceMiner algorithm [13], [14]. SequenceMiner provides us with a representative trajectory for each cluster.\n1) Turning Points Identification: The first step is to extract the location of the turning points of each trajectory. To simplify the notations, the aircraft index i is omitted in the following equations. The heading \u03a8l of an aircraft at time tl can be estimated by \u03c8l = arctan y\nl+1\u2212yl\u22121 xl+1\u2212xl\u22121 , at each point of the trajectory, l,\nl = 2 . . .m\u2212 1, where m is the total number of points. Since the trajectory is a bit noisy, a low pass filter is\n4\napplied:\n\u03c8\u03031 = \u03c81 (1)\n\u03c8\u0303l = \u03b1\u03c8l + (1\u2212 \u03b1)\u03c8\u0303l\u22121, l = 2 . . .m\u2212 1, (2)\nwhere \u03b1 is a constant for the filter. On this data, setting \u03b1 = 0.4 provided good noise filtering results and not too much delay. A turning point tp is identified when the heading difference between two consecutive values of the heading exceed a threshold: |\u03a8\u0303l \u2212 \u03a8\u0303l\u22121| > \u03a8c. The threshold was chosen relatively small in order to capture small heading changes but not too small not to capture meaningless heading changes variations: \u03a8c = 0.025rad = 1.43\u25e6. This value was set experimentally. The results are not very sensitive to a small change in \u03a8c. The number of turning points is trimmed to avoid long sequences when aircraft are executing large turns: if two consecutive turning points are determined, the fist one only is kept; if three, only the midlle one, etc.\nThe trajectory of aircraft i is now represented as a sequence of turning points Si :\nSi = {tp1i . . . tpsi},\nwhere tpsi is the 3D coordinate of a turning point. The first point of the trajectory is labeled as a turning point.\nFigure 4 presents a sample of 11 trajectories and the points identified as turning points.\nDenote by S the set of all the turning points for all the trajectories: S = {S1 . . . Sn}.\nThe second step is to cluster the set S of turning points. The following section introduces the two clustering algorithms used in this paper: k-means [15] and DBSCAN [12].\n2) Algorithms overview: k-means and DBSCAN: a) Overview of k-means [15]: This paragraph presents a brief overview of the k-means algorithm. For more details, the reader is refered to [11]. Given a set S = (tp1, . . . tp|S|) of |S| observations (turning points in our case), where each observation is a ddimensional real vector, then k-means clustering aims at partitioning the |S| observations into k sets, or clusters, (k < |S|), C = {C1, C2, . . . , Ck} so as to minimize the within-cluster sum of squares:\narg min C k\u2211 i=1 \u2211 tpj\u2208Ci \u2225\u2225tpj \u2212mi\u2225\u22252 (3) where mi is the mean of Ci. The mean mi of a cluster is called centroid and is the center of mass of all the elements in the cluster. The number k of clusters is the only input required from the user. Starting with an initial set of k centers m(1)1 , . . . ,m (1) k , which may be specified randomly or by some heuristic, the algorithm proceeds by alternating between two steps, also known as Lloyd Algorithm [16]:\n5 Assignment step: Assign each observation to the cluster with the closest mean, that is partition the observations according to the Voronoi diagram generated by the centroids of the clusters. Figure 5 presents the results of k-means clustering and the corresponding Voronoi diagram.\nC (t) i = {tpj : \u2225\u2225tpj \u2212m(t)i \u2225\u2225 \u2264 \u2225\u2225tpj \u2212m(t)i\u2217 \u2225\u2225, for all i\u2217 = 1, . . . , k} (4)\nUpdate step: Calculate the new means to be the centroid of the observations in the cluster.\nm (t+1) i =\n1\n|C(t)i | \u2211 tpj\u2208C (t) i tpj (5)\nThe algorithm is deemed to have converged when the assignments no longer change. Since it is a heuristic algorithm, there is no guarantee that it will converge to the global optimum, and the result may depend on the initial clusters. Since the algorithm is usually very fast, it is common to run it multiple times with different starting conditions and keep the run that resulted in the minimum value for equation 3.\nb) Overview of DBSCAN: This paragraph presents a brief overview of the DBSCAN algorithm. For more details, the reader is refered to [17]. DBSCAN [12] stands for Density-Based Spatial Clustering of Applications with Noise. DBSCAN clusters points that are close together (in an neighborhood), and surrounded by sufficiently many points. DBSCAN requires two\nparameters: a real, , and the minimum number of points, MinPts, required to form a cluster. The -neighborhood of a point p consists of all the points q s.t dist(p, q) \u2264 . If the -neighborhood of a point p contains more than MinPts, a new cluster is started, with p as a core object. DBSCAN then iteratively collects directly densityreachable objects from these core objects. An object q is said to be directly density-reachable from an object p if q is in the -neighborhood of p and p is a core object.\nIf a core object q of a cluster Cq is added a cluster Cp, Cp and Cq are merged. When no point can be added to any cluster, the process terminates.\n3) Turning Points Clustering; creation of waypoints: To determine the waypoints, the turning points are clustered: a waypoint is defined as the planar (x, y) coordinates of a cluster of turning points. The idea is to create a waypoint where it has been determined that many aircraft turned. Depending on the number and on the density of available turning points , two different algorithms are used. When the spatial distribution of turning points is sparse, k-means is used, and when the distribution of turning points is dense, DBSCAN is used.\na) Case when the data is sparse: When the number of turning points is small, a density based clustering algorithm would provide poor results, identifying most of the points as outliers. Therefore, a distance-based algorithm is used so all the turning points available are used. A waypoint is created for each cluster produced by k-means. Using cylindrical coordinates, the coordinates of the center of a waypoint are given by (rm thetam). The center is the center of mass of all the points in the cluster. The coordinates of the corners of the waypoints are given by {(rm + 2stdr, \u03b8m + 2std\u03b8), (rm \u2212 2stdr, \u03b8m + 2std\u03b8), (rm \u2212 2stdr, \u03b8m \u2212 2std\u03b8), (rm + 2stdr, \u03b8m \u2212 2std\u03b8)}, where stdr and std\u03b8 are the standard deviation of the radial coordinates and angular coordinates of the points in the cluster, respectively. Figure 6 presents the outcome of clustering the waypoints for one day of trajectories. Each cluster is represented using a different color/shape combination. The waypoints and represented by pairs of nested polygons on the figure. The inside polygon corresponds to (rm \u00b1 stdr, \u03b8m \u00b1 std\u03b8) and the outside one to (rm \u00b1 2stdr, \u03b8m \u00b1 2std\u03b8). The number is the label of the cluster.\nb) Case when the data is dense: When the the number of turning points is large, a large share of the airspace is covered with turning points. A distance based algorithm such as k-means provides meaningless clusters for our application. Figure 5 shows the clusters provided by k-means and the corresponding Voronoi diagram for the turnings point of almost 3 month of data ( 30,000\n6\ntrajectories). To overcome this issue, the turning points were clustered using DBSCAN. DBSCAN is particularly efficient to cluster data in the presence of noise. Waypoints are created using the convex hull of the clusters resulting from DBSCAN. Figure 7 shows the result of the clustering of the turning points using DBSCAN. The blue polygons represent the waypoints. All the points identified as outliers, i.e not associated with any waypoint, are not depicted. The parameters used were = 350m and minPts = 10. The main issue with DBSCAN is its execution time since its complexity is in O(n log n). Here, the number of turning points to cluster is n = 118, 179 for 30,000 trajectories.\n4) Converting a trajectory into a sequence of waypoints: The waypoints have been discovered using the turning points of the trajectories. Nevertheless, some trajectories might go over waypoints without actually turning. To identify the sequence of waypoints followed by a trajectory, the following procedure is used for each trajectory: start with an empty sequence of waypoints, and given the set of all waypoints, run the trajectory along its original direction. If one of the points is located over a waypoint, the waypoint is added to the sequence. Each trajectory is now represented as an ordered sequence of waypoints, where the number of waypoints is finite. The next step is to cluster the trajectories determining the longest common subsequence (LCS) of waypoints.\n5) Longest Common Subsequence determination: The sequences of waypoints are clustered using the longest\ncommon subsequence. The LCS problem is to find the longest subsequence common to all sequences in a set of sequences. SequenceMiner [13], [14] is an algorithm that identifies the LCS and generates clusters of sequences. This method allows to cluster of sequences that do not contain the same number of elements. When sequences have only a small number of points, say fewer than 3, this clustering method does not work well. Therefore, only the sequences containing more than 4 waypoints are kept. The total number of waypoints being small, it is preferable to focus on the waypoints at the begining of the trajectory: since most aircraft do a final turn to get aligned with the runway, this turning point does not bring much information about the trajectory. Therefore, if the last turning point is in the large brown cluster (Figure 7), it is removed from the sequence.\nFigure 8 presents the results of the clustering process using k-means and LCS on a low number of trajectories. The dataset used is the tracks of all the aircraft landing at San Francisco (SFO) airport on February 10, 2006. Only the trajectories of that day were used to determine the waypoints. Each cluster is represented by a color. The algorithm identifies the main flows but a few trajectories seem not to belong to the expected cluster. The quality of the results is subjective and can only be visually assessed. Figure 9 presents the results for an initial set of 30,000 trajectories, using DBSCAN and LCS. Here, the denomination \u201cNominal\u201d qualifies the trajectories containing more than 4 waypoints. The colors corresponds\n7\nto the clusters. They differ on figures 8 and 9 because the indexing of clusters is random and depends on the order of the data in the dataset.\ne clus Overall, this method presents good clustering results. One of the main drawbacks of this method is that it only keeps the trajectories going over the waypoints. For instance, consider two parallel trajectories: one going over the waypoints and the other one slightly off. The latter will be considered as an outlier eventhough it is\nvery similar to the first trajectory, resulting in excluding many trajectories. In addition, trajectories containing large rerouting periods will belong to the clusters as long as they pass over waypoints."}, {"heading": "C. Trajectory-based clustering via component analysis", "text": "This method proceeds with the following steps, which are summarized in a diagram in figure 10:\n1) Resample the trajectories, to obtain time series of equal length for each aircraft. 2) Augment the dimensionality of the data. 3) Normalize and concatenate all the data into a\nsingle vector for each flight. 4) Run a principal components analysis (PCA) and\nkeep the first 5 principal components (PCs). 5) Cluster using a density-based clustering algorithm. This paper proposes improvements to the approach used by Eckstein [9] to realize a trajectory taxonomy. In [9], trajectories are first resampled, then the principal components are extracted and finally, the clustering is realized using k-means on the projections onto the first two principal components. Figure 11(a) presents the resulting clusters on the principal components and on the trajectories, using the methods introduced in [9]. The clustering technique proposed in [9] does not provide result precise enough for our data set and there is no identification of outliers. Figure 11(b) presents a 3D view of the projection onto the first three PCs (section\n8 (a) Clusters of trajectories\n\u221220 \u221210\n0 10\n20 \u221210 \u22125\n0 5\n10\n\u22126\n\u22124\n\u22122\n0\n2\n4\n6\n8\nT hi\nrd P\nC\n3D plot of the first 3 PCs of the trajectories after clustering\nFirst PC Second PC\n(b) Clusters of the first principal components\nFig. 11. Clustering results using the method presented in [9]\nII-C3) so it can be compared with our method. Eckstein used only the first two PCs for clustering. The first improvement is to augment the dimensionality of the data. Then, the PCs are computed and the projections of the augmented trajectories onto the first five PCs are clustered using a density based clustering algorithm. This algorithm presents the advantage of identifying outliers. Another advantage is that the number of clusters is not set a priori.\n1) Data Cleaning and Formatting: The dataset is well organized and fairly clean. Trajectories with fewer than 50 points are removed from the dataset: to be able to use a clustering algorithm such as DBSCAN, each trajectory must be represented as a vector. All vectors must have the same number of elements n, so their distance can be computed. Since all trajectories do not have the same number of points, resampling is necessary. Trajectories are resampled so that the total number of points for each trajectory is 50. For the sole purpose of clustering, fewer than 50 points would have been enough. Nevertheless, to improve the accuracy of the airspace monitoring function presented in section III, 50 points were used. The resampled trajectory T \u2032i is given by T sampi = { T li , l = {round(k mi50 ), k = 1 . . . 50} } . During this operation, the notion of speed that was given by the distance between the radar echos is lost.\n2) Dimensionality augmentation: To improve the results of the clustering, the dimensionality of the data was increased. Some of the added dimensions present symmetry with respect to a point or a line and some do not.\n\u2022 Cartesian position of the aircraft in the resampled trajectory: P = [x1i . . . x 50 i y 1 i . . . y 50 i z 1 i . . . z 50 i ]. P is\na row vector with 150 components. This vector is unique to each trajectory. \u2022 Distance from the center of the TRACON R = {rli = \u221a (xli) 2 + (yli) 2 + (zli)\n2, l = 1 . . . 50}. Provides information about the rate of convergence of the aircraft toward the center of the TRACON, which is located close to the airport. This distance presents a symmetry with respect to the center of the TRACON, i.e two trajectories that are symmetric with respect to the center of the tracon will be represented with the same vector R. \u2022 Distance from the top left corner: D = {dli = \u221a (xli \u2212 xref )2 + (yli \u2212 yref )2 + (zli)2, l =\n1 . . . 50}, where (xref , yref ) are the coordinates of the top left corner a square containing the TRACON. The top left corner has coordinates (xref , yref ) = (\u221280, 80)km. This distance presents a symmetry with respect of the diagonal joining the top left corner (\u221280, 80) and the bottom right corner ((80,\u221280)), i.e two trajectories that are symmetric with respect to this diagonal will be represented with the same vector D. \u2022 Angular position in cylindrical coordinates: \u0398 = {\u03b8li = arctan(\nyli xli\n), l = 1 . . . 50}. A constant value and slow rate of change indicate a straight trajectory while high variablity indicates curved\n9 trajectories. Does not present any symmetry. \u2022 Heading of the aircraft \u03a8 = {\u03c8li, l = 1 . . . 50}. The\ncomputation of the heading was done using the filter of equation 1 and then resampled to 50 points. This vector is unique to each trajectory.\nThe sine and cosine values of the angular position and heading are used instead of their actual value to avoid the discontinuity at \u00b1\u03c0. Each trajectory is now represented by a vector of dimension 450 given by: T augmi = [P R D cos(\u0398) sin(\u0398) cos(\u03a8) sin(\u03a8)]. The initial vector had dimension 150. The values of each parameter are normalized between 0 and 1 in order to balance their importance during the clustering process. It was decided to add meaningful data such as heading or rate of convergence toward the center of the TRACON. For instance, two aircraft on parallel trajectories will fly the same heading, even if the trajectories are slightly apart from each other. Distance to the center was chosen to identify trajectories that have particular patterns such as vectoring and holding pattern: the distance to the center will present some irregularities as the aircraft flies back and forth. Such irregularities will be highlighted by dimensions such as the heading that will change 180\u25e6 while the position will only change slightly.\n3) Principal Components Analysis: A principal components analysis [18] is run on matrix that contains all the resampled trajectories. Each trajectory is then projected onto the first p principal components and is now represented by a vector of p values. The choice in the value of p is a trade-off between computational speed when p is small and accuracy when p gets larger. There is no need to get a value of p too large since the first principal components contain most of the information. Different values of p were tried and p = 5 gave a satisfactory level of accuracy for this type of data. The added dimensions increse the range of the projection of the trajectories onto the principal components. This makes the clustering task easier as the clusters are \u201cfurther apart\u201d in the principal components space.\n4) Clustering: The projections of the trajectories onto the first 5 PCs are clustered using DBSCAN. A density based clustering algorithm like DBSCAN is prefered to a distance based algorithm because of the shape of the clusters that can be arbitrary. The other advantage of DBSCAN is the identification of outliers. Figure 12(b) presents the resulting clusters. The axis corresponds to the value of the first 3 principal components. Clusters are clearly differentiated, even if they are not easy to distinguish on the plot due to the perspective effect. The resulting clusters of trajectories are visually very clean\n(Figure 12(a)).\n(a) Clusters of trajectories\n\u221210\n0\n10\n20 \u221210\n\u22125\n0\n5\n\u22124\n\u22122\n0\n2\n4\nT hi\nrd P\nC\n3D plot of the first 3 PCs of the trajectories after clustering\nFirst PC Second PC\n(b) Clusters of the first 5 principal components\nFig. 12. Clustering results using resampling, data augmentation, PCA decompostion, and DBSCAN on the first 5 principal components.\nFigure 13 presents the centroids, that is the center of mass of the trajectories of each cluster. Those centroids can be seen as \u201cstandard procedures\u201d. Some clusters are minor variations from each other, such as the flights coming from the bottom left corner. This comes from the the settings used for DBSCAN. On Figure 12(b), one can clearly identy clusters of points. The algorithm\n10\nwas run with a high sensitivity ( small and minPts large). The parameter reflects the similarity between trajectories (the smaller the more similar), and minPts is the number of \u201csimilar\u201d trajectories needed to create a new cluster (Section II-B3b). A small generates \u201cnarrow\u201d cluster while a larger will generate clusters with more variability in trajectories. In the application presented in section III, the algorithm is run with a lower sensitivity and provides fewer clusters, with larger variability. The resulting centroids of this run can be seen on Figure 20.\n5) Analysis of outliers: Figure 14 shows the outliers detected by the clustering algorithm. Outliers represent 19.5% of all trajectories. A visual inspection shows that the main reasons for being detected as an outlier is the presence of holding patterns, large vectoring maneuvers or direct routes.\nFigure 15 presents the number and frequency of outlier trajectories as a function of the type of aircraft. Jets represent the largest share in numbers, but the frequency is much smaller. Among the trajectories of regional and business aircraft, 4% and 5% are identified as outliers, respectively. A possible explanation is the size, the speed and the maneuverability of the aircraft. To ensure a safe separation at the runway threshold, air traffic controllers \u201cvector\u201d aircraft, that is give a sequence of headings to follow. The vectors given to business and regional aircraft might be different and sharper than the vectors given to larger size jets.\nFigure 16 presents the frequency of outliers for each\nday of study. Each bar represents one day. The minimum percentage of outliers is less than 2% and goes up to 16%. The most likely explanation is the weather. San Francisco airport usually operates with two close parallel runways. The runways are not independent, that is, they cannot be operated simultaneously when the weather does not permit visual approaches. When a runway is closed, the landing capacity is reduced from 60 to 30 aircraft per hour. Schedules and operations usually take the weather into account , but unexpected late fog dissipation or other type of convective weather might disrupt the operations and force controllers to vector aircraft and put them on holding patterns.\nFigure 17 presents the frequency of outliers as a function of the time of the day. The local time is reported on the abscissa axis, starting at midnight. This diagram is an average over the entire period of interest. The frequency of outliers is higher during the night, then decreases in the early morning, to in increase again with a peak at 11a.m.. Another peak is visible at 5 p.m.. The outliers identified at night are mostly due to direct\n11\nrouting that is allowed by the very low traffic density at night. During the morning, traffic density increases and requires more rerouting for efficient sequencing and merging. Another possible explanation is the late dissipation of the fog."}, {"heading": "III. AIRSPACE MONITORING", "text": "This section proposes an airspace monitoring technique that automatically detects when an aircraft is not conforming to standard procedures. Standard procedures are determined using the centroids of the clusters found using the previous clustering methods. Centroids correspond to flight path often flown and the value of the parameters used for clustering allows the trajectories to vary more around the centroids. The objective of the monitoring task is to detect in when an aircraft deviates from nominal path in real time."}, {"heading": "A. Literature review and motivation", "text": "Krozel [19] proposed an intent based monitoring where the aircraft is tracked relative to a filed flight plan, using NavAids and waypoints. The monitoring tasks requires knowledge of the airspace structure, of the trajectory waypoints and of the intent of the aircraft. It is a powerful tool when the flights behave according to their flight plan, but when dealing with arrivals, the sequence of waypoints might change, some might be skipped or added to ensure an optimal separation of aircraft at the runway threshold and vectoring is often used. This monitoring method cannot be used. Reynolds\net al. [20] introduced a framework for the development of an automated conformance monitoring system. The system described in [20] has two main inputs: the conformance basis, containing target states and trajectory information, and the observation of a surveillance system. Those inputs feed models for pilots intents, aircraft intents, and aircraft control systems and dynamics. Those models provide an expected state vector that is compared with the observed state vector for conformance analysis. This structure is further used in [21] to monitor the conformance of a trajectory to a flight plan. For instance, it detects if an aircraft does not turn, turns too early or too late at a waypoint. The monitoring is based on intent and knowledge of the the exact expected trajectory is required. An offline trajectory analysis and taxonomy for arrival trajectories was proposed by Eckstein [9]. The objective of Eckstein is to analyze the performance of area navigation (RNAV) operations for NextGen concepts of operations offline. The method in [9] uses GPS coordinates of actual waypoints to identify and classify segments of trajectories.\nFigure 18 displays an aerial view of the San Francisco Bay Area. The blue circle represents the outer boundary of the TRACON, given by the area covered by the radar. The white lines are the centroids identified in section II-C4. The yellow dots are waypoints or reporting points. The locations of those points come from Standard Terminal Arrival Routes (STAR) and track logs [22]. The centroids of the clusters pass over only a limited number of waypoints. This shows that using the published waypoints and reporting points cannot be efficiently used to monitor traffic in the TRACON. The intent based methods cannot be used in the terminal area. Figure 18 also displays the arrival from the north for turboprops. This arrival procedure has not been identified by the clustering algorithm because of the relatively small number of aircraft using this route, and of the variability of the flight path following this procedure. A real time trajectory analysis tool built upon the knowledge gathered from the clustering analysis is now proposed. The tool is called AirTrajectoryMiner (ATM) since it enables the monitoring of operations in the TRACON. Current aircraft trajectories are compared against nominal trajectories, that is the trajectories in the clusters. If they differ too much, the current trajectory is tagged as abnormal, or outlier. The only intent used is the aircraft final destination airport. The tool automatically detects if the aircraft is flying one of the possible approaches, including most commonly used vectoring maneuvers.\n12"}, {"heading": "B. Data formatting", "text": "It is not possible to directly compare the current trajectories with nominal trajectories, since current trajectories are incomplete. During real-time system operations, only past data are known. Therefore, the nominal dataset is fragmented. Resampled trajectories that had 50 points are split in 10 fragments of 5 points. The average travel time in the TRACON for aircraft landing at SFO is about 14 minutes. Therefore, 5 data points correspond to about 14*60/10 = 84 seconds. A memory of 80 seconds is used for current tracks. The radars hits of the last 80 seconds of flight are resampled to 5 points that can now be compared against the database of nominal tracks. This process is done using the Inductive Monitoring System."}, {"heading": "C. Anomaly detection: Inductive Monitoring System", "text": "To detect anomalous trajectories, the Inductive Monitoring Health System (IMS) [23] is used. IMS is a good alternative to model based health monitoring systems. It provides a high fidelity detection tool, and there is no need to manually build a model. IMS runs in two steps: learning phase and anomaly detection. IMS learns the nominal behaviors using a training dataset provided by the user. IMS builds clusters using k-means clustering and density-based clustering. During the anomaly detection phase, the input data is compared with knowledge base built from the training data. The anomaly score can be interpreted as the distance to the nearest cluster. The input data belongs to a cluster if all the parameteres values are within the range specified by the cluster limits.\nThe training dataset corresponds all the trajectories identified as nominal and fragmented in 10 segments of 5 points. The total number of segments was 276,040."}, {"heading": "D. AirTrajectoryMiner: Monitoring tool", "text": "AirTrajectoryMiner (ATM) is a real time TRACON monitoring tool. Figure 19 shows how ATM could be incorporated into the air traffic management environment. The inputs to the tool are the set of all the trajectories identified as nominal, work resulting from section II-C4, and the radar tracks of the flights of interest. ATM delivers two types of ouputs. On the one hand, it delivers an indication of conformance of current flight to nominal procedures, and on the other hand, it delivers a measure of the complexity in the TRACON that can be incorporated in Traffic Management Advisor (TMA) software[24].\nFigure 20 displays the monitoring environment. The top frame is a 2D view of the airspace. The records cover a cylinder of radius 80km, going from the ground up to\n13\n6000 m. The following provides some information about the display and associated aircraft count. \u2022 Green circle: aircraft intended to land at SFO\n(associated count: nSFO). \u2022 Grey square: aircraft not intended to land at SFO\n(associated count: nSFO). \u2022 Green segment: trajectory of an aircraft intended\nto land at SFO and following the procedures. \u2022 Red segment: trajectory of an aircraft intended to\nland at SFO and whose trajectory is identified as an outlier: it does not to follow the procedures (associated count: nOK,SFO). \u2022 Grey segment: trajectory of an aircraft not intended to land at SFO and whose trajectory does not interfere with traffic landing at SFO. \u2022 Orange segment: trajectory of an aircraft not intended to land at SFO and whose trajectory may interfere with traffic intended to land at SFO (associated count: nOK,SFO). \u2022 Colored lines: Centroids of the clusters of trajectories identified as nominal. The centroids presented differ from the ones on Figure 13, because the clustering algorithm was re-run with different parameters allowing more variability and therefore creating fewer clusters.\nAircraft intent information comes from the data. The\nlength of the line following the aircraft corresponds to the part of the trajectory being analyzed, that is the last 80 seconds of the trajectory. The length of the line is therefore proportional to the velocity of the aircraft. This display is intended for an air traffic controller managing the arrivals at SFO. A similar display would be used for managing other arrivals or departures. The only change would be the training data for IMS and the centroids displayed. Aicraft with a grey segment can be ignored, since they are not landing at SFO and are not interfering with landing traffic at SFO. Aircraft with a green segment are following the standard procedures to land at SFO. Aircraft in orange require special attention since they are not intended to land at SFO but present characteristics that identify them as \u201cin the pattern to land at SFO\u201d. They conform with some of the SFO landing trajectories. Aircraft in red also need special attention since they are supposed to land at SFO but currently not on standard tracks. The controller needs to make sure they are not generating conflicts or interfering with other traffic. Based on the compliance of current flights to procedures, we define a measure of complexity for the TRACON, which could provide an automatic feedback of the health of the TRACON to the traffic flow manager who regulates the flow of aircraft arriving in the TRACON."}, {"heading": "E. Measure of complexity", "text": "Complexity in air traffic management is a widely studied topic [25]. A measure of airspace complexity is called dynamic density [26] and was intended to understand the effect of changing airspace configuration and traffic controller workload. It is a function of the traffic density and the number of aircraft changing heading, speed or altitude, and, the separation between aircraft. This measure is a weighted sum of several parameters and the weights have been determined using human in the loop experiments. The model was fitted to the observations of controllers. Delahaye and Puechmorel [27] propose a measure of complexity based on the Lyapunov exponents of a time varying vector field that interpolates aircraft position and velocities. This intrinsic complexity measure reflects the stability of the traffic configuration. Lee [28] propose complexity measure based on the response of the airspace to a disturbance. Disturbance can be an intruder aircraft in the airsapce and the corresponding measure of complexity is the deviation required by the other aircraft to solve all the conflicts. Gariel et Feron [29] proposed complexity maps based on the degradation of communication, navigation and surveillance capacities. The degradation results in a\n14\nrequired increase in separation distances creating new potential conflicts. The complexity measures the difficulty to steer the traffic from the nominal mode of operation with initial separation distances to degraded mode of operation with increased separation distances.\nThis paper introduces a new complexity metric, based on the compliance of aircraft to procedures identified as nominal. According to [30], [31], controllers build a mental model of nominal operations. The complexity of a traffic configuration perceived by the controllers increases when aircraft flight path do not follow this mental model. When operations are running as expected, the controller is more efficient and can deal with more aircraft. Thus, increasing the number of aircraft not following nominal procedure will reduce the maximum number of aircraft a controller can deal with simultaneously, reducing the capacity of the airspace. The proposed complexity measure is based on Shannon\u2019s theory of communication [32]. Using the aircraft counts introduced earlier, the instantaneous probability of an aircraft inbound for SFO to be identified as nominal is\np(OK|SFO) = nOK,SFO nSFO . (6)\nFor the aircraft inbound for SFO and identified as outliers, it is assumed that each outlier aircraft is unique and independent from other aircraft. At each instant, each outlier is considered a different from the other outliers, that is there are nOK,SFO types of outliers. Therefore, the probability of an aircraft to be a specific outlier is\np(OKi|SFO) = 1\nnSFO , i = 1 . . . nOK,SFO. (7)\nThe entropy ISFO of the aircraft inbound to SFO is therefore\nISFO =\u2212 p(OK|SFO) log p(OK|SFO) . . .\n\u2212 n OKi,SFO\u2211\ni=1\np(OKi|SFO) log p(OKi|SFO)\n=\u2212 nOK,SFO nSFO log nOK,SFO nSFO \u2212 nOK,SFO nSFO log 1 nSFO .\n(8)\nThe same reasoning is used for aircraft not inbound to SFO:\nISFO = \u2212 nOK,SFO nSFO log nOK,SFO nSFO \u2212 n OK,SFO n SFO log 1 nSFO .\n(9)\nThe proposed measure of complexity C is the sum of the entropy of aircraft inbound to SFO and the entropy of aircraft not inbound to SFO.\nC = ISFO + ISFO. (10)\nThis complexity measure is an indication of the disorder with regard to nominal operations. If no aircraft is identified as an outlier, the complexity is 0. The complexity increases with the number of outliers detected, but also with the number of aircraft. The bottom left plot of Figure 20 shows this measure of the complexity over the last 10 minutes. The plot is refreshed every 15 seconds. When the traffic flow manager sees that the complexity increases, ATM provides information about the operations in the TRACON. If the complexity gets high, the controller in charge of the TRACON is likely to have a high workload. Providing the traffic flow manager with this complexity measure can help him to manage the flow of arriving aircraft. A low complexity suggests that more aircraft can be allowed in the TRACON. Increasing complexity suggests that the TRACON controllers are subject to an important workload and that the aircraft arrival rate should be reduced.\nAn aircraft can be detected as \u201coff nominal track\u201d because the controller may require a large vectoring maneuver, meaning that the runways are congested. Another explanation for \u201coff nominal\u201d tracks can be rerouting due to weather. This tool can also be used as an automatic independent monitoring tool. Intent based tools [21] cannot be used in terminal areas since controllers give vectors that do not appear in the flight plan. Moreover, there are many turns and altitude changes that are left to the pilot to execute.\nCONCLUSION\nThis paper presented two trajectory clustering methods and an application to airspace monitoring. The monitoring tool compare the conformance of current flights to identified nominal procedures in real-time. The version of the tool presented in this paper monitors the landings at SFO, but it can easily be modified to monitor any traffic pattern, by modifying the input dataset.\nACKNOLDEGMENTS\nThis work was supported by NASA under Grant NNX08AY52A and by Thales ATM inc."}], "references": [{"title": "SESAR Master Plan, deliverable 5", "author": ["SESAR Consortium"], "venue": "Technical report, April", "citeRegEx": "2", "shortCiteRegEx": null, "year": 2008}, {"title": "Trajectory clustering and its applications for video surveillance", "author": ["C. Piciarelli", "GL Foresti", "L. Snidara"], "venue": "IEEE Conference on Advanced Video and Signal Based Surveillance, 2005. AVSS 2005, pages 40\u201345,", "citeRegEx": "4", "shortCiteRegEx": null, "year": 2005}, {"title": "Trajectory clustering for coastal surveillance", "author": ["A. Dahlbom", "L. Niklasson"], "venue": "Proceedings of the 10th International Conference on Information Fusion,", "citeRegEx": "5", "shortCiteRegEx": null, "year": 2007}, {"title": "Trajectory clustering: A partition-and-group framework", "author": ["J.G. Lee", "J. Han", "K.Y. Whang"], "venue": "Proceedings of the 2007 ACM SIGMOD international conference on Management of data, pages 593\u2013604. ACM New York, NY, USA,", "citeRegEx": "6", "shortCiteRegEx": null, "year": 2007}, {"title": "Discovering similar multidimensional trajectories", "author": ["M. Vlachos", "G. Kollios", "D. Gunopulos"], "venue": "Proceedings of the International Conference on Data Engineering, pages 673\u2013684. IEEE Computer Society Press; 1998,", "citeRegEx": "8", "shortCiteRegEx": null, "year": 2002}, {"title": "Automated flight track taxonomy for measuring benefits from performance based navigation", "author": ["A. Eckstein"], "venue": "Integrated Communications, Navigation and Surveillance Conference,", "citeRegEx": "9", "shortCiteRegEx": null, "year": 2009}, {"title": "Information theory, inference, and learning algorithms", "author": ["D.J.C. MacKay"], "venue": "Cambridge Univ Pr,", "citeRegEx": "10", "shortCiteRegEx": null, "year": 2003}, {"title": "The Elements of Statistical Learning: Data Mining, Inference, and Prediction. Springer, second edition", "author": ["J. Friedman T. Hastie", "R. Tibshirani"], "venue": null, "citeRegEx": "11", "shortCiteRegEx": "11", "year": 2009}, {"title": "A density-based algorithm for discovering clusters in large spatial databases with noise", "author": ["M. Ester", "H.P. Kriegel", "J. Sander", "X. Xu"], "venue": "Proc. 2nd Int. Conf. on Knowledge Discovery and Data Mining, Portland, OR, AAAI Press, pages 226\u2013231,", "citeRegEx": "12", "shortCiteRegEx": null, "year": 1996}, {"title": "Anomaly detection in large sets of high-dimensional symbol sequences", "author": ["S. Budalakoti", "A.N. Srivastava", "R. Akella", "E. Turkov"], "venue": "Submitted for evaluation,", "citeRegEx": "13", "shortCiteRegEx": null, "year": 2005}, {"title": "Anomaly detection and diagnosis algorithms for discrete symbol sequences with applications to airline safety", "author": ["S. Budalakoti", "A.N. Srivastava", "M.E. Otey"], "venue": "IEEE Transactions on Systems, Man and Cybernetics-Part C: Applications and Reviews, 39:101\u2013113,", "citeRegEx": "14", "shortCiteRegEx": null, "year": 2009}, {"title": "Some methods for classification and analysis of multivariate observations", "author": ["J.B. MacQueen"], "venue": null, "citeRegEx": "15", "shortCiteRegEx": "15", "year": 1966}, {"title": "Least squares quantization in PCM", "author": ["S.P. Lloyd"], "venue": "IEEE Transactions on Information Theory, 28(2):129\u2013137,", "citeRegEx": "16", "shortCiteRegEx": null, "year": 1982}, {"title": "Data mining: concepts and techniques", "author": ["J. Han", "M. Kamber"], "venue": "Morgan Kaufmann,", "citeRegEx": "17", "shortCiteRegEx": null, "year": 2006}, {"title": "A tutorial on principal components", "author": ["Jonathon Shlens"], "venue": null, "citeRegEx": "18", "shortCiteRegEx": "18", "year": 2009}, {"title": "Intelligent tracking of aircraft in the National Airspace System", "author": ["J. Krozel"], "venue": "AIAA Guidance, Navigation, and Control Conference and Exhibit, Monterey, CA,", "citeRegEx": "19", "shortCiteRegEx": null, "year": 2002}, {"title": "Structure, Intent & Conformance Monitoring in ATC", "author": ["T.G. Reynolds", "J.M. Histon", "H.J. Davison", "R.J. Hansman"], "venue": "USA/EUROPE Air Traffic Management R&D Seminar,", "citeRegEx": "20", "shortCiteRegEx": null, "year": 2002}, {"title": "Conformance monitoring approaches in current and future air traffic control environments", "author": ["T.G. Reynolds", "R.J. Hansman"], "venue": "21st Digital Avionics Systems Conference,", "citeRegEx": "21", "shortCiteRegEx": null, "year": 2002}, {"title": "Inductive system health monitoring", "author": ["D.L. Iverson", "M. Stop"], "venue": "In Proceedings of The 2004 International Conference on Artificial Intelligence (IC-AI04)", "citeRegEx": "23", "shortCiteRegEx": "23", "year": 2004}, {"title": "Human Factors Report: TMA Operational Evaluations 1996 & 1998", "author": ["K.K. Lee", "C.M. Quinn", "T. Hoang", "B.D. Sanford"], "venue": "Moffett Field, CA, NASA Ames Research Center,", "citeRegEx": "24", "shortCiteRegEx": null, "year": 2000}, {"title": "The  Complexity Construct in Air Traffic Control: A Review and Synthesis of the Literature", "author": ["RH Mogford", "JA Guttman", "SL Morrow", "P. Kopardekar"], "venue": null, "citeRegEx": "25", "shortCiteRegEx": "25", "year": 1995}, {"title": "Airspace complexity and its application in air traffic management", "author": ["B. Sridhar", "K.S. Sheth", "S Grabbe"], "venue": "2nd USA/EUROPE Air Traffic Management R&D Seminar, December,", "citeRegEx": "26", "shortCiteRegEx": null, "year": 1998}, {"title": "Air traffic complexity map based on non linear dynamical systems", "author": ["D. Delahaye", "S. Puechmorel"], "venue": "INO Workshop,", "citeRegEx": "27", "shortCiteRegEx": null, "year": 2005}, {"title": "Airspace Complexity: Airspace Response to Disturbance", "author": ["K. Lee"], "venue": "PhD thesis, Georgia Institute of Technology,", "citeRegEx": "28", "shortCiteRegEx": null, "year": 2007}, {"title": "Air traffic management complexity maps induced by degradation of Communication, Navigation and Surveillance", "author": ["M. Gariel", "E. Feron", "J. Clarke"], "venue": "In AIAA Guidance, Navigation and Control Conference and Exhibit,", "citeRegEx": "29", "shortCiteRegEx": "29", "year": 2008}, {"title": "Mental models and situation awareness in air traffic control", "author": ["R.H. Mogford"], "venue": "The International Journal of Aviation Psychology, 7(4):331\u2013341,", "citeRegEx": "30", "shortCiteRegEx": null, "year": 1997}, {"title": "Structural considerations and cognitive complexity in air traffic control", "author": ["J.M. Histon", "R.J. Hansman", "D. Gottlieb", "H. Kleinwaks", "S. Yenson", "D. Delahaye", "S. Puechmorel"], "venue": "Digital Avionics Systems Conference, 2002. Proceedings. The 21st, 1,", "citeRegEx": "31", "shortCiteRegEx": null, "year": 2002}, {"title": "A mathematical theory of communication", "author": ["CE Shannon"], "venue": "ACM SIGMOBILE Mobile Computing and Communications Review, 5(1):3\u201355,", "citeRegEx": "32", "shortCiteRegEx": null, "year": 2001}], "referenceMentions": [{"referenceID": 0, "context": "To address the challenges of increase in air traffic volume, new technologies and procedures are being developped in the context of NextGen [1] in the US and SESAR [2] in Europe.", "startOffset": 164, "endOffset": 167}, {"referenceID": 1, "context": "[4] presented an on-line trajectory clustering method for real time video surveillance.", "startOffset": 0, "endOffset": 3}, {"referenceID": 2, "context": "This clustering method was used by Dahlbom and Niklasson for coastal surveillance but failed to provide satisfactory results when dealing with real data sets [5] such as ship trajectories.", "startOffset": 158, "endOffset": 161}, {"referenceID": 3, "context": "[6] presented a partition-and-group framework for trajectory clustering.", "startOffset": 0, "endOffset": 3}, {"referenceID": 4, "context": "used similarity functions based on the longest common subsequence (LCS) to discover similar multidimensional trajectories [8].", "startOffset": 122, "endOffset": 125}, {"referenceID": 5, "context": "Eckstein proposed an automated flight track taxonomy [9] .", "startOffset": 53, "endOffset": 56}, {"referenceID": 6, "context": "This clustering task is done using kmeans [10], [11] or DBSCAN [12] (Density-Based Spatial Clustering of Applications with Noise).", "startOffset": 42, "endOffset": 46}, {"referenceID": 7, "context": "This clustering task is done using kmeans [10], [11] or DBSCAN [12] (Density-Based Spatial Clustering of Applications with Noise).", "startOffset": 48, "endOffset": 52}, {"referenceID": 8, "context": "This clustering task is done using kmeans [10], [11] or DBSCAN [12] (Density-Based Spatial Clustering of Applications with Noise).", "startOffset": 63, "endOffset": 67}, {"referenceID": 9, "context": "4) Cluster the sequences of waypoints using the SequenceMiner algorithm [13], [14].", "startOffset": 72, "endOffset": 76}, {"referenceID": 10, "context": "4) Cluster the sequences of waypoints using the SequenceMiner algorithm [13], [14].", "startOffset": 78, "endOffset": 82}, {"referenceID": 11, "context": "The following section introduces the two clustering algorithms used in this paper: k-means [15] and DBSCAN [12].", "startOffset": 91, "endOffset": 95}, {"referenceID": 8, "context": "The following section introduces the two clustering algorithms used in this paper: k-means [15] and DBSCAN [12].", "startOffset": 107, "endOffset": 111}, {"referenceID": 11, "context": "a) Overview of k-means [15]: This paragraph presents a brief overview of the k-means algorithm.", "startOffset": 23, "endOffset": 27}, {"referenceID": 7, "context": "For more details, the reader is refered to [11].", "startOffset": 43, "endOffset": 47}, {"referenceID": 12, "context": ",m (1) k , which may be specified randomly or by some heuristic, the algorithm proceeds by alternating between two steps, also known as Lloyd Algorithm [16]:", "startOffset": 152, "endOffset": 156}, {"referenceID": 13, "context": "For more details, the reader is refered to [17].", "startOffset": 43, "endOffset": 47}, {"referenceID": 8, "context": "DBSCAN [12]", "startOffset": 7, "endOffset": 11}, {"referenceID": 9, "context": "SequenceMiner [13], [14] is an algorithm that identifies the LCS and generates clusters of sequences.", "startOffset": 14, "endOffset": 18}, {"referenceID": 10, "context": "SequenceMiner [13], [14] is an algorithm that identifies the LCS and generates clusters of sequences.", "startOffset": 20, "endOffset": 24}, {"referenceID": 5, "context": "used by Eckstein [9] to realize a trajectory taxonomy.", "startOffset": 17, "endOffset": 20}, {"referenceID": 5, "context": "In [9], trajectories are first resampled, then the principal components are extracted and finally, the clustering is realized using k-means on the projections onto the first two principal components.", "startOffset": 3, "endOffset": 6}, {"referenceID": 5, "context": "the trajectories, using the methods introduced in [9].", "startOffset": 50, "endOffset": 53}, {"referenceID": 5, "context": "The clustering technique proposed in [9] does not provide result precise enough for our data set and there is no identification of outliers.", "startOffset": 37, "endOffset": 40}, {"referenceID": 5, "context": "Clustering results using the method presented in [9]", "startOffset": 49, "endOffset": 52}, {"referenceID": 14, "context": "3) Principal Components Analysis: A principal components analysis [18] is run on matrix that contains all the resampled trajectories.", "startOffset": 66, "endOffset": 70}, {"referenceID": 15, "context": "Krozel [19] proposed an intent based monitoring where the aircraft is tracked relative to a filed flight plan, using NavAids and waypoints.", "startOffset": 7, "endOffset": 11}, {"referenceID": 16, "context": "[20] introduced a framework for the development of an automated conformance monitoring system.", "startOffset": 0, "endOffset": 4}, {"referenceID": 16, "context": "The system described in [20] has two main inputs: the conformance basis, containing target states and trajectory information, and the observation of a surveillance system.", "startOffset": 24, "endOffset": 28}, {"referenceID": 17, "context": "This structure is further used in [21] to monitor the conformance of a trajectory to a flight plan.", "startOffset": 34, "endOffset": 38}, {"referenceID": 5, "context": "An offline trajectory analysis and taxonomy for arrival trajectories was proposed by Eckstein [9].", "startOffset": 94, "endOffset": 97}, {"referenceID": 5, "context": "The method in [9] uses GPS coordinates of actual waypoints to identify and classify segments of trajectories.", "startOffset": 14, "endOffset": 17}, {"referenceID": 18, "context": "To detect anomalous trajectories, the Inductive Monitoring Health System (IMS) [23] is used.", "startOffset": 79, "endOffset": 83}, {"referenceID": 19, "context": "hand, it delivers an indication of conformance of current flight to nominal procedures, and on the other hand, it delivers a measure of the complexity in the TRACON that can be incorporated in Traffic Management Advisor (TMA) software[24].", "startOffset": 234, "endOffset": 238}, {"referenceID": 20, "context": "Complexity in air traffic management is a widely studied topic [25].", "startOffset": 63, "endOffset": 67}, {"referenceID": 21, "context": "A measure of airspace complexity is called dynamic density [26] and was intended to understand the effect of changing airspace configuration and traffic controller workload.", "startOffset": 59, "endOffset": 63}, {"referenceID": 22, "context": "Puechmorel [27] propose a measure of complexity based on the Lyapunov exponents of a time varying vector field that interpolates aircraft position and velocities.", "startOffset": 11, "endOffset": 15}, {"referenceID": 23, "context": "Lee [28] propose complexity measure based on the response of the airspace to a disturbance.", "startOffset": 4, "endOffset": 8}, {"referenceID": 24, "context": "Gariel et Feron [29] proposed complexity maps based on the degradation of communication, navigation and surveillance capacities.", "startOffset": 16, "endOffset": 20}, {"referenceID": 25, "context": "According to [30], [31], controllers build a mental model of nominal operations.", "startOffset": 13, "endOffset": 17}, {"referenceID": 26, "context": "According to [30], [31], controllers build a mental model of nominal operations.", "startOffset": 19, "endOffset": 23}, {"referenceID": 27, "context": "The proposed complexity measure is based on Shannon\u2019s theory of communication [32].", "startOffset": 78, "endOffset": 82}, {"referenceID": 17, "context": "Intent based tools [21] cannot be used in terminal areas since controllers give vectors that do not appear in the flight plan.", "startOffset": 19, "endOffset": 23}], "year": 2010, "abstractText": "This paper presents a framework aimed at monitoring the behavior of aircraft in a given airspace. Nominal trajectories are determined and learned using data driven methods. Standard procedures are used by air traffic controllers (ATC) to guide aircraft, ensure the safety of the airspace, and to maximize the runway occupancy. Even though standard procedures are used by ATC, the control of the aircraft remains with the pilots, leading to a large variability in the flight patterns observed. Two methods to identify typical operations and their variability from recorded radar tracks are presented. This knowledge base is then used to monitor the conformance of current operations against operations previously identified as standard. A tool called AirTrajectoryMiner is presented, aiming at monitoring the instantaneous health of the airspace, in real time. The airspace is \u201chealthy\u201d when all aircraft are flying according to the nominal procedures. A measure of complexity is introduced, measuring the conformance of current flight to nominal flight patterns. When an aircraft does not conform, the complexity increases as more attention from ATC is required to ensure a safe separation between aircraft.", "creator": "LaTeX with hyperref package"}}}