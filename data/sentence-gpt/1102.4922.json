{"id": "1102.4922", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "24-Feb-2011", "title": "Counting Solutions of Constraint Satisfiability Problems:Exact Phase Transitions and Approximate Algorithm", "abstract": "The study of phase transition phenomenon of NP complete problems plays an important role in understanding the nature of hard problems. In this paper, we follow this line of research by considering the problem of counting solutions of Constraint Satisfaction Problems (#CSP). We consider the random model, i.e., a matrix for each task. We assume the solutions can be a real solution, with a fixed size of 2,000 times greater than the original solution, or at least a fixed size of 2,000 times greater than the original solution. The following conditions are applied to the problem of counting solutions:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "histories": [["v1", "Thu, 24 Feb 2011 08:07:54 GMT  (436kb)", "http://arxiv.org/abs/1102.4922v1", "submitted to AAAI-11"]], "COMMENTS": "submitted to AAAI-11", "reviews": [], "SUBJECTS": "cs.AI cs.CC", "authors": ["minghao yin", "ping huang"], "accepted": false, "id": "1102.4922"}, "pdf": {"name": "1102.4922.pdf", "metadata": {"source": "CRF", "title": "Counting Solutions of Constraint Satisfiability Problems: Exact Phase Transitions and Approximate Algorithm", "authors": ["Minghao Yin"], "emails": ["ymh@nenu.edu.cn"], "sections": [{"heading": null, "text": "The study of phase transition phenomenon of NP complete problems plays an important role in understanding the nature of hard problems. In this paper, we follow this line of research by considering the problem of counting solutions of Constraint Satisfaction Problems (#CSP). We consider the random model, i.e. RB model. We prove that phase transition of #CSP does exist as the number of variables approaches infinity and the critical values where phase transitions occur are precisely located. Preliminary experimental results also show that the critical point coincides with the theoretical derivation. Moreover, we propose an approximate algorithm to estimate the expectation value of the solutions number of a given CSP instance of RB model.\nIntroduction\nIn the past decade there has been a significant interest in the phase transition of NP-complete or NP-hard problems. Phase transition is usually a transformation from one state to another state suddenly when a particular parameter is varied. For instance, propositional satisfiablity problems (SAT), the parameter controlled for phase transition is the density of clause (i.e. number of clauses/number of variables). However, it seems that it is always difficult to obtain the location of the exact phase transition point. Still take SAT for the example, from the experimental aspect, (Mitchell et al. 1992) pointed out that the phase transition point is approximately 4.3 by analyzing the experimental results. (Kirkpatrick and Selman 1994) showed that the phase transition point should be 4.17 by using a statistical physics method. From the theoretical aspect, the obtained phase transition points are usually in the form of some loose but hard won bounds. Until now, within our knowledge, the best lower bound and upper bound of SAT are 3.52 (Kaporis el al. 2006) and 4.49 (Diaz et al. 2008) respectively. For constraint satisfaction problems (CSPs), a generalization of SAT, the locations of phase transition points have also been widely studied both from an experimental and a theoretical view. Among them, (Xu and Li 2000) may be one of the few works that proved the existence of phase transition and identified the phase transition points exactly. In that literature, a new type of random\nCSP model, i.e. Model RB, is introduced. Model RB is a revision of the standard random Model B and has some nice features. First, the existence of phase transition can be proved and the exact location of phase transition points can be quantified. Second, it is shown that both theoretically and experimentally Model RB can be used to generate hard satisfiable instances by translating CSPs into CNF formulas (Xu el al. 2007).\nIn fact, the phase transition phenomenon does not only occur in NP-complete problems or NP-hard, but also occurs in problems of complex classes beyond NP. For instance, researchers have already investigated the phase transition in QSAT and classical planning problems (Bylander 1996, Gent and Walsh 1999). On the other hand, in recent years we have also viewed an increasing interest in counting the number of solutions to combinatorial problems. Recent research has shown that counting the model of SAT problems or CSP problems corresponds to numerous #P-complete problems such as conformant probabilistic planning (Domshlak and Hoffman 2006), and various probabilistic inference problems (Chavira and Darwiche 2008). (Bailey et al. 2007) first studied phase transition in model counting problems of SAT. They considered the decision problem #3SAT(2 n/2 ): given a 3CNF-formula, is it satisfied by at least the square-root of the total number of possible truth\nassigment. From experimental results, Bailey et al. (2007) pointed out that the phase transition point should be 2.5. And from theoretical aspect, they proved that the lower bound and the upper bound should be 0.9227 and 2.595.\nThe first aim of this paper is to extend this line of research to study phase transition of a generalization of #SAT, i.e. counting the solutions of constraint satisfaction problems. Similar to (Bailey et al. 2007) considering a decision version of #SAT, we consider a decision version of #CSP, as called #CSP (d n/t ). Specifically, for every integer t2, given a CSP instance with n variables and let the cardinality of the domain set be d, #CSP (d n/t ) is the problem of deciding whether the instance has at least d n/t satisfying assignments. Particularly, for t=2, we have the decision problem #CSP (d n/2 ): given a CSP instance, is it satisfied by at least the square-root of the total number of possible assignments? Note that #CSP (d n/t ) can be viewed as a generalization of #3SAT(2 n/t ), therefore #CSP (d n/t ) is at least PP-hard, and so is #CSP (d n/2 ). We prove that due to incorporating uniformly variant domain size, phase transition does exist for Model RB in #CSP (d n/t ) problems. Moreover, the critical value of the phase transition point can be also quantified for #CSP (d n/t ) problems.\nAnother active research area in counting solution number of combinatorial problems is to develop efficient algorithms for these problems. For #SAT, (Birnbaum and Lozinskii 1999) first proposed an exact algorithm CDP, an extension of the standard Davis-Putnam(DP) procedure, to solve #SAT problems. After that, different kinds of skills like component caching and clause learning are incorporated to enhance the counting ability of #SAT (Gomes et. al. 2009). Since the run time and memory usage of exact algorithms usually increase exponentially with problem size, approximate algorithm are introduced,\nsuch as Approx-count, Sample-count and Sample-Minisat algorithms. For #CSP, Gomes et. al. (2007) considered binary and generalized XOR constraints, and developed efficient complete domain filtering algorithms. In this paper, we propose an approximate algorithm for #CSP. Interestingly, first, this algorithm only needs linear time, which means that the computing process is very efficient. Second, unlike other approximate algorithms, the algorithm becomes more accurate when the problem scale increases. We can prove that this method can obtain good bounds of the solution numbers of Model RB with high confidence.\nPreliminary\nIn this paper, a constraint satisfaction problem (CSP) P can be viewed as a triple (X, D, C) where X=(x1, x2, \u2026, xn) is a set of n variables. D is a mapping from X to a set of domains D = (D(x1),D(x2), \u2026,D(xn)), where D(xi), Di for short, is the finite domain of its possible values. For 2kn a constraint , ,...,1 2Ci i ik C is defined as a pair (Xi, Ri) such that Xi=( ,...,1x xi ik ) is a\nsubset of X called the constraint scope and Ri, as called constraint relations, is a subset of the Cartesian Product\n1 ... ki i D D  and specifies allowed combinations of values for the variables in Xi. Given a CSP instance P, if there is a map\nfrom X to the disjoint Union 1 n Dii with each f(xi)Di satisfying that ( ) ( ( )1f X f xi i ,..., ( ))f xik Ri for all i=1,\u2026,t, then P is\nsatisfiable and we would say f = (f(x1), f(x2), \u2026, f(xn)) is a solution of the instance P; otherwise, P is unsatisfiable. Each random CSP instance can be also described by a tuple (k, n, d, p1, p2) where k denotes the arity of the constraints, n denotes the number of variables, d denotes the uniform domain size, p1 denotes the density of constraint and p2 denotes the tightness of the constraints. Definition 1 (Model B) A class of random CSP instances of model B will be denoted as a tuple (k, n, d, p1, p2) where, for each instance:\n1)k 2 denotes the arity of each constraint,\n2)n 2 denotes the number of variables,\n3)d 2 denotes the size of each domain,\n4)1 p1>0 determines the number of m=p1( n k ) constraints, 5) 1 > p2 > 0 determines the number t = p2d k of disallowed tuples of each relation.\n(Achlioptas et. al. 2000) pointed out that the instances generated using Model B suffer from (trivial) insolubility when\nproblem size increases. And therefore Xu and Li (2000) introduced an alternative random model, i.e. Mode RB.\nDefinition 2 (Model RB) A class of random CSP instances of model RB will be denoted as a tuple (k, n, , r, p) where, for\neach instance:\n1) k 2 denotes the arity of each constraint,\n2) n 2 denotes the number of variables, 3)>0 determines the domain size d=n of each domain,\n4) r>0 determines the number m= lnr n n  of constraints, 5) 1>p>0 determines the number t = pd k of disallowed tuples of each relation.\nThe main difference between Model RB and Model B is that the domain size in Model RB grows with the number of\nvariables. The generation of random CSP instance in Model RB is done as follows:\n(1) Select m= lnr n n  random constraints (with repetition), each one formed by randomly selecting k of n variables\n(without repetition).\n(2) For each constraint select t = pd k incompatible tuples of values (without repetition). i.e., each constraint relation\ncontains exactly (1-p)d k compatible tuples of values.\nIn order to determine the critical value where the phase transition occurs, we need the following definitions:\nDefinition 3 (Assignment pair, Xu and Li 2000) An assignment pair is an ordered pair <a, b> of assignments to the variables in U, where a = (a1, a2,\u2026, an ) and b = (b1, b2,\u2026, bn ) with al, blDl. An assignment pair <a, b> satisfies a CSP if and only if both a and b satisfies this CSP. The set that consist of all the assignment pairs is denoted by Apair. Definition 4 (Similarity number) S: Apair {0,1,2,\u2026},\nS(<a,b>) = n - ham(a, b)\nWhere the function ham(a, b) is the Hamming distance between a and b, defined as\n1\n( , ) | | n\ni i\ni ham a b a b   \nDefinition 5 (Similarity degree) s: Apair R,\nn\n)b a, ( ) b a, (   S s .\nThe similarity degree of an assignment pair is a measure how an assignments in the assignment pair is similar to the other.\nFrom the definition, we can see that 1 ) b a, (0  s , and the larger the similarity degree is, the more similar are the two\nassignments.\nPhase transitions of #CSP(d n/t )\nXu and Li (2000) have proved that for CSP problems, an asymptotic phase transition can be guaranteed in Model RB with\na limited restriction on domain size and on constraint tightness. In this section, we further prove that for #CSP(d n/t ), the\nasymptotic phase transition also exists, and the threshold can be precisely located as well. Let Pr be the probabilistic distribution and let , , , n k r p X  denote the solutions number of the instance generated following Model RB. In this section, the\nfollowing theorems are proved.\nTheorem 1 If pcr=1- e tr )\n1 1(   .where 1/ k  \uff0cr>0 are two constraints, k,  and r satisfy the inequality / 1rk e   , then\n, , / ,Pr[ ] 1 , n k n t r p cr n Lim X d when p p     (1)\n, , / ,Pr[ ] 0 , n k n t r p cr n Lim X d when p p     (2)\nProof. First, according to the definition of Model RB, given an instance I of Model RB, the expected number of solutions E( , ,, n k r pX  ) of the instance is as follows:\nE( , , , n k r p X  )= ln(1 )n rn nd p = ln(1 )n rn nn p  . (3)\nThen according to Markov\u2019s inequality,\nPr[ , , , 1 n k r p X   ]  E( , ,, n k r pX  )\nlet  be an arbitrary real number\nPr[ , ,, / 1 n k r pX    ]  E( , ,, n k r pX  / ).\nRewriting the formula, we get\nPr[ , ,\n,\nn k r pX   ]E( , ,, n k r pX  )/ (4)\nThen according to formula (3) and (4), we can easily prove that , , / ,lim Pr[ ] 0 n k n t n r pX d     holds when p>pcr. So we finish\nthe proof of equation (2).\nThe proof of equation (1) is more complicate. Let a=(a1, a2,\u2026, an ) and b = (b1, b2,\u2026, bn ) stand for two assignments to\nvariables of I. The key point of the proof is to derive E( , ,, | 1 n k r pX a   ) and give an asymptotic estimate of it. Here E( , , , | 1 n k r pX a   ) denotes the conditional expectation of solutions number of the instance I when I is satisfied by a. Let\nPr(<a=1,b=1>) stand for the probability of an assignment pair <a, b> satisfying I. Since each constraint is generated independently, to compute Pr(<a=1,b=1>), we only need to consider the probability of the assignment pair <a, b> satisfying a random constraint. Let the similarity number of <a, b> be S, then: (a) If assignment a is the same as b, the probability of <a, b> satisfying the constraint is\n1\n(1 1 p ) 1 (1 )/ k k K K d d p d p d                .\nThe probability that a random constraint falls into this case is\n( ) / ( )S n k k .\n(b) Otherwise, the probability of <a, b> satisfying the constraint is\n  2 12\n(1 ) 2 1 p ( ) (1 )/ k k k K K d d O dp d p d                   .\nThe probability a random constraint falls into this case is\n1 ( ) / ( )S n k k  .\nFrom above two situations (a) and (b), we can draw the conclusion that Pr( 1, 1 )a b   \n2\nk\n1 (1-p). (1 ) .(1 ) O( )\nd ( ) / ( ) ( ) / ( )\nm\nS n S n k k k k p  \n        (5)\nSince all the constraints are selected independently, and according to the conditional probability, we have\nPr( 1| 1 )a b    = Pr( 1| 1 )b a   \nk\n1 (1 ).(1 ) O( )\nd ( ) / ( ) ( ) / ( )\nm\nS n Sp n k k k k   \n      \n(6)\nAccordingly, we have:\n, , E( |a=1) Pr( 1 | 1\n1 ( ) ( ) / ( ) (1 )(1 ( ) / ( )) (\n) ,\nS ( 1)\n0\n)\nS\nn S n S n p O S k k k k k d\nn k X i a\nr p i m n\nn d\n \n  \n \n  \n\n      \nHere i denotes an arbitrary assignment of the instance I. It is easy to prove that the following inequality stands:\nPr[ , ,, n k r pX  ]\n, , i ,\npr(i 1)\nE( |i 1)n kr pX \n\n  (7)\nSimplifying the formula, we have\nPr[ , , , n k r pX  ]E( , , , n k r pX  )/ , , ,E( |a=1) n k r pX  (8)\nNote that d = n  and  >1/k, we have\n2( ) / ( ) ( ) / ( ) ( ) / (1/ )kS n ns n s g s n O n k k k k     (9)\nAccording to Formula(3) and (8), Pr[ , , /, n k n t r pX d   ]\n  (1 )\n1S( 1) ( (1 ).(1( ) / ( ) ( ) ) O( )) kdS 0 / ( ) mn S n S n S k\nn md\nk\np\nn d p\nk n k \n \n    \n(10)\nFor simplicity, denote the main part of (10) by F(s)\n  S\n2\n1ns( ) ( 1) ( (1 ).(1 ) O( )) kd\n( ) ( ) 1 1 ( 1) ( (1 ).(1\n( ) / ( ) ( ) /\ns ) ( ) (( )\n( )\n) )\nm\nn k k m\nk\nnF s d p\ng s g s d\nn ns n\ns p O O n n n n\nns n ns k k k k\nn ns  \n    \n        \n\nS rnln n ln p ( ) 1\n( 1) (1-p) [1 ( )] (1 ( ) 1-p\n( ) ) n k rn n g s n s O\nn\nn n ns       \nln ln\n, , ln ,\n1 1 p ( ) 1 (1-p) (1 ) ( ) [1 ( )] (1 ( ))\n1-p\n1 1 p ( ) 1 =E\n(\n( ) (1 ) ( ) [1 ( )] (1 ( )) 1\n)\n( -p )\nn rn n n ns ns k rn n\nn k n ns ns k rn n r p\ng s n s On\nn n nn n\ng s X s O\nn nn\ns\nn nsn\n\n \n\n \n\n\n    \n   \nWhen n is sufficiently large, F(s) is mainly determined by the following terms f(s), excluding the first term E( , ,, n k r pX  ):\nln ( ) [1 / (1 )] (1/ ) k rn n ns f s ps p n    \n[ ln(1 / (1 )) ] ln k\nr ps p s n n e    \nLet h(s) denote the index of the above formula, we have\nln(1 / (1( ) [ )) ] lnkr ps p s n nh s   \nThe first and second derivatives of h(s) are:\n2\n1\n)1( )( k\nk\npsp\nrpks sh\n \n\n2\n2 )1( ])1)(1[( )( k kk psp pspkrkps sh    \nApplying the condition k  1/(1-p) we can easily prove that 0)( sh on the interval 10  s . It is not hard to show that\nh(0)=0,and h(1) < 0 when p < pcr. Hence we can easily prove that the unique maximum point of h(s) is s = 0 when p<pcr, and therefore the terms of 10  s are negligible. Now we only need to consider those terms near s=0. The process can be\ndivided into the following cases: (a1) 1/k<  <1. Let S0= n  (where  is a constant and satisfies 1-  <  <1-1/k). It is not hard to show that when 00 S S  ( 1 1/0 ks n n    ), the following limit holds:\n0( )lim ( ) ln / (1 ) 1 k n g s p s n n p e n    \nSo when 00 SS  , the asymptotic estimate of F(s) is\n, , ,( ) ( )( (1 1/ ) (1) / ) n k n S S r p nF s E X n S n   \nIt should be noted that (1 1/ )( (1/) )n Sn nn S S   is a binomial term whose maximum point is around 1S n  , and S0\n= 1n n  . By asymptotic analysis, we obtain\n0 ( ) ( 1 1 1 1 (1 ) ( ) (1 ) ( )\n0 0\n) 1 n n\nS n n S S n S S\nn n n nS S S S   \n        \nThus we get\n, , , , , ,E( |a 1) ( ) n k n k r p r pX E X   \n(b1)  > 1. When S = 0, we have\nln ( )\n1 / (1 )( )\nrn n\nk g sp p s n         = 1\nthen we get\n, , ,( ) ( ) n k r pF s E X \nSimilarly, we have\nF(s) , , 1 ,( ) 1 n k r pE X n when S    F(s) , , 2(1 ),( ) /2! 2 n k r pE X n when S   \n\u2026\nSumming the above terms together, we obtain\n, , , , , ,E( |a 1) ( ) n k n k r p r pX E X   \n(c1)  = 1. The analysis is similar as (b1), we have\nF(s) , , 1 ,( )(0! ) 0 n k r pE e when SX     F(s) , , 1, )( )(1! 1 n k r p eE X when S    F(s) , , 1,( )(2! ) 2 n k r pE X e when S   \n\u2026\nSumming the above terms together, we obtain\n, , , , , ,E( |a 1) ( ) n k n k r p r pX E X   \nFrom above three cases (a1), (b1) and (c1), we have:\n, , , ,, ,E( |a 1) ( ) n k n k r p r pX E X    when p< pcr. (11)\nHence:\n, , ,\n, , ,\n( ) 1,\nE( |a 1)\nn k r p\nn kn r p\ncr\nE X Lim when p\nX p\n\n    .\nSince, , , / , , , ,, , ,Pr[ ] ( ) / ( | 1) n k t n k n k r p r p r pX d E X E X a       ,\nWe have\n, , / ,Pr[ ] 1 , n k n t r p cr n Lim X d when p p    \nHence, equation (1) stands, and the theorem is proved.\u25a1\nAccording to theorem 1, when p < pcr, the problem is under constrained, the solutions of the instances in this region are\nmore than d n/t ; when p>pcr, the problem is over constrained, the solutions of the instances are less than d n/t ; and the exact point is pcr. Theorem 1 uses constraint tightness as the parameter, when use constraint density as the parameter, we get a similar result.\nTheorem 2 If rcr= )1ln(\n)1( 1\np\nt\n\n   , 1\nk   and 0<p<1 are two constraints satisfy 1/ (1 )k p  ,then\n, , / ,lim Pr[ ] 1 n k n t n r pX d     when r<rcr\n, , / ,lim Pr[ ] 0 n k n t n r pX d     when r>rcr\nThe proof of Theorem 2 is similar to Theorem 1.\nThe above two theorems hold when n, so we make some preliminary experiments to show that exact phase transition\ndo occur even if the number of variables is small. The experiments are conducted on a machine with (2.4 GHZ CPU and 2G memory). We encode CSP instances into SAT instances, and use Cachet (Sang et. al. 2004) to obtain exact solutions numbers. It usually takes Cachet hours to solve a CSP instance with more than 15 variables, so we only conduct experiments on small\nCSP instance. In Fig. 1, the parameters of RB model are set as: k=2, =0.8, r=1.7, and n={7, 10, 13}. And in Fig. 2 the\nparameters are set to be =0.85, r=1.4, n={9, 12, 15}. For each point we generate 100 instances. In both figures, we consider the problem of #CSP(d n/2 ). So in Fig. 1, the threshold numbers of solutions are 280, 7776, and 741460 respectively, and in\nFig. 2, the threshold numbers of solutions are 3175, 262144, and 3.1623e+007 respectively. According to theorem 1, in Fig. 1, pcr  0.210, and in Fig. 2, pcr  0.262. Note that even if n is relatively small, the phase transition phenomenon is really obvious, and the practical threshold is near to the theoretical threshold. We also conduct experiments to validate theorem 2 and get similar results. We do not observe obvious phase transitions of mean CPU time in our experiments. The reason may be that\nCachet is a counting solver rather than a #SAT(d n/2 ) solver. We guess that phase transitions for CPU time may exist for some\nmodified version of exact counting solvers.\nOn Estimating Solutions Number of CSPs\nIn the former section, we have proved that exact phase transitions for #CSP(d n/t ) occur for constraint satisfaction\nproblems in Model RB. When t goes to infinity, the problem reduces to #CSP(1), i.e. deciding satisfiability of CSP, and the\ntheorems proposed in this paper also reduce to theorem 1 and theorem 2 in (Xu and Li 2000). In this sense, the theorems proposed in this paper can be viewed as a generalization of those proposed in (Xu and Li 2000).\nIn this section, we further show that a careful analysis of the phase transition can lead to an approximate algorithm to estimate the solutions number in Model RB while applying a limited restriction on domain size and on constraint tightness.\nFirst, when t and n goes to infinity, according to theorem 1 (or theorem 2), we know that if cr -a / r ep p 1 -  (or\n/ ln(1 )crr r p    ), the number of solutions of I approaches 0. So we only need to consider conditions when p < pcr or r<rcr. Recall in formula (1), we have shown that the expected number of solutions E( , ,\n,\nn k\nr p X\n ) of the instance can be calculated\nas:\nE( , ,, n k r pX  )= ln(1 )n rn nd p = ln(1 )n rn nn p  .\nNow we focus on proving that E( , ,, n k r pX  ) can act as a good estimation for Model RB.\nTheorem 3 Given a CSP instance I randomly generated following Model RB and k,  and r satisfy the inequality / 1rk e   ( 1/ (1 ), .)k p resp  and 1/ k  . Let , ,, n k r pX  be the number of solutions for I, E( , , , n k r pX  ) denote the\nexpected number of solution for I,  be an arbitrary real number, and Pr denote the function for probability distribution. As\nthe number of variable goes to infinity, if -a / rep 1 - ( / ln(1 ), .)r p resp   , then\n, , , , , , , , ,( ((1- )E( ) (1 )E( ))) 1 n k n k n k r p r p r p n Lim Pr X X X        \nProof. According to the Chebyshev inequality, we have\n, ,\n,, , , , , , 2\n( ) ( ( ) ) 1\nn k\nr pn k n k r p r p\nD X P X E X\n\n        (12)\nWe can rewrite (12) to get\n, ,\n,, , , , , , , , , 2\n( ) (E( )- E( )+ ) 1\nn k\nr pn k n k n k r p r p r p\nD X P X X X\n\n         (13)\nAccording to the definition of D( , , , n k r pX  ), we have\n, , , , 2 2 , , , , ,D( ) E(( ) )-E ( ) n k n k n k r p r p r pX X X    (14)\nDefine\n, , ,E( ) n k r pX    (15)\nBy combining formula (13), (14) and (15),\n, , , , , , , , , , , , , , , (E( )- E( ) E( )+ E( )) n k n k n k n k n k r p r p r p r p r pPr X X X X X       \n, , 2 2 , , , ,\n2 2 , ,\n,\nE(( ) )-E ( ) 1\nE ( )\nn k n k r p r p\nn k r p\nX X\nX\n \n   (16)\nBy rewriting formula, we get\n, , , , , , , , ,((1- )E( ) (1 )E( )) n k n k n k r p r p r pPr X X X      \n, , 2 2 , , , ,\n2 2 , ,\n,\nE(( ) )-E ( ) 1\nE ( )\nn k n k r p r p\nn k r p\nX X\nX\n \n   (17)\nIn theorem 1 of (Xu and Li 2000), it has been proved that , , 2 2 , ,, ,E(( ) ) E ( ) n k n k r p r pX X   when n is large enough.\nSo, the theorem is proved, and we have\n, , , , , , , , ,( ((1- )E( ) (1 )E( ))) 1 n k n k n k r p r p r p n Lim Pr X X X         \u25a1\nFrom above discussion, we can easily develop an approximate algorithm to estimate the solution numbers in linear time, as we called AE-count. The only point where AE-count cannot work is when p = pcr. Note that, until now, state-of-art exact counting algorithms such as Relsat (Bayardo and Pehoushek 2000) and Cachet (Sang et. al. 2004) cannot scale up for large scale problems. For approximate algorithms, although the computational time is relatively acceptable, few of them can provide good bounds on the solutions numbers with high confidence (Gomes et. al. 2006). Moreover, for large scale counting\nproblems, even for the approximate algorithms, the solution processes are always time consuming. It should be pointed out that the short coming of AE-count is that it is only capable of estimating random instances generated following Model RB, and can only return the estimate numbers of solutions rather enumerate the solutions. However, since we can generate largescale CSP instances or SAT instances following Model RB, and simultaneously obtain an upper bound and lower bound of their solution numbers, we can use model RB to generate benchmarks for counting algorithms.\nTo test the accuracy of AE-count, the estimated solutions number is compared with the exact solution numbers, as can be\nseen in Table 1. Here , r, p and n denote domain density, constraint density, constraint tightness and variables numbers\nrespectively. The real number  is from 0.5 to 0.9 in step of 0.1, so there are five intervals. Experimental results in (Xu et. al.\n2007) have shown SAT-UNSAT phase transitions do occur. So we only generate random instances in the SAT region, and for each point 300 instances are generated. To get the exact solutions numbers, we encode CSP instances into SAT instances, and then use Cachet to count the models. For the computational limit of Cachet, we only test instances with no more than 20 variables. As can be seen in Table 1, even if the problems scales are relatively small, the estimates are found to be over 69% correct for 0.9  , and the accuracy of the estimates grows with the increasing of problem scales. Table 2 shows the\ncomparisons of solutions numbers between Cachet, Approx-count, and AE-count. For the solutions number in AE-count, we use E( , ,, n k r pX  ) instead of an interval. Each number in the table is an average of the solutions numbers of 300 random instances\nin the SAT region.\nConclusion\nIn this paper, we first present a probabilistic analysis of the problem #CSP. We show that for random instances generated following Model RB, exact phase transitions do exist for a decision version of #CSP, i.e. #CSP(d n/t ). Then, preliminary\nexperimental results have confirmed the phase transition and threshold predicted by theory. Second, we show through a careful analysis of phase transition, we can present an accurate estimate of solution numbers of random CSP instances generated following Model RB. Such results should be valuable for future counting algorithms. First, we can generate large scale instances with upper and lower bounds of solution numbers. Second, our approach may be an inspiration to develop similar approximate counting algorithms for other random models.\nReferences\nAchlioptas, D.; Gomes, C. P.; Kautz, H. A.; and Selman, B. 2000. Generating Satisfiable Problem Instances. In Proceedings of AAAI-00, 256-261. AAAI Press/MIT Press. Baileya, D. D.; Dalmaub, V.; and Kolaitisa, P. G. 2007. Phase transitions of PP-complete satisfiability problems. Discrete Applied Mathematics 155: 1627-1639. Bayardo Jr., R. J., and Pehoushek, J. D. 2000. Counting models using connected components. In Proceedings of AAAI-00, 157\u2013162. Birnbaum, E.; and Lozinskii, E. L. 1999. The Good Old Davis-Putnam Procedure Helps Counting Models. Journal of Artificial Intelligence Research 10: 457-477. Bylander, T. 1996. A Probabilistic Analysis of Propositional STRIPS Planning. Artificial Intelligence, 81(1-2): 241-271. Chavira, M.; and Darwiche, A. 2008. On probabilistic inference by weighted model counting. Artificial Intelligence 172(6-7): 772-799. Diaz, J.; Kirousis, L. M.; Mitsche, D.; and Perez-Gimenez, X. 2008. A new upper bound for 3-SAT. In proceedings of FSTTCS\u201908, 163-174. Domshlak, C.; and Hoffmann, J. 2006. Fast Probabilistic Planning through Weighted Model Counting. In Proceedings of ICAPS-06. 243-252. AAAI Press. Gent, I. P.; and Walsh, T. 1999. Beyond NP: the QSAT phase transition. In Proceedings of AAAI-99, 648-653.\nGomes, C. P.; Hoeve, W. J. V.; Sabharwal, A.; and Selman B. 2007. Counting CSP Solutions Using Generalized XOR Constraints. In Proceedings of AAAI\u201907, 204-209. Gomes C.P.; Sabharwal A.; Selman B. 2006. Model Counting: A New Strategy for Obtaining Good Bounds. In Proceedings of AAAI 2006 Gomes, C. P.; Sabharwal, A.; and Selman B. 2009. Model Counting. Handbook of Satisfiability, 633-654. IOS Press. Mitcell, D.; Selman, B.; and Levesque, H. 1992. Hard and easy distributions of sat problems. In Proceedings of AAAI\u201992, 459-465. AAAI Press/MIT Press. Kaporis, A. C.; Kirousis, L. M.; and Lalas, E. G. 2006. The probabilistic analysis of a greedy satisfiability algorithm. Random Structures and Algorithms 28: 444-480. Krikpatrick, S.; and Selman, B. 1994. Critical behavior in, the satisfiability of random boolean expressions. Science 264: 1297-1301. Sang T.; Bacchus F.; Beame P.; Kautz H.A. and Pitassi T. 2004. Combining Component Caching and Clause Learning for Effective Model Counting. SAT 2004 Xu, K.; Boussemart, F.; Hemery, F.; and Lecoutre C. 2007. Random constraint satisfaction: Easy generation of hard (satisfiable) instances. Artificial Intelligence 171(8-9).. Xu, K.; and Li, W. 2000: Exact Phase Transitions in Random Constraint Satisfaction Problems. Journal of Artificial Intelligence Research 12: 93-103. Wei W.; Selman B. 2005. A New Approach to Model Counting. In Proceedings of SAT 2005: 324-339"}], "references": [{"title": "Generating Satisfiable Problem Instances", "author": ["D. Achlioptas", "C.P. Gomes", "H.A. Kautz", "B. Selman"], "venue": "Proceedings of AAAI-00, 256-261. AAAI Press/MIT Press. Baileya, D. D.; Dalmaub, V.; and Kolaitisa, P. G. 2007. Phase transitions of PP-complete satisfiability problems. Discrete Applied Mathematics 155: 1627-1639. Bayardo Jr., R. J., and Pehoushek, J. D. 2000. Counting models using connected components. In Proceedings of AAAI-00,", "citeRegEx": "Achlioptas et al\\.,? 2000", "shortCiteRegEx": "Achlioptas et al\\.", "year": 2000}, {"title": "The Good Old Davis-Putnam Procedure Helps Counting Models", "author": ["E. 157\u2013162. Birnbaum", "E.L. Lozinskii"], "venue": "Journal of Artificial Intelligence Research", "citeRegEx": "Birnbaum and Lozinskii,? \\Q1999\\E", "shortCiteRegEx": "Birnbaum and Lozinskii", "year": 1999}, {"title": "A new upper bound for 3-SAT", "author": ["J. Diaz", "L.M. Kirousis", "D. Mitsche", "X. Perez-Gimenez"], "venue": "In proceedings of FSTTCS\u201908,", "citeRegEx": "Diaz et al\\.,? \\Q2008\\E", "shortCiteRegEx": "Diaz et al\\.", "year": 2008}, {"title": "Beyond NP: the QSAT phase transition", "author": ["I.P. Gent", "T. Walsh"], "venue": "Proceedings of AAAI-99, 648-653.", "citeRegEx": "Gent and Walsh,? 1999", "shortCiteRegEx": "Gent and Walsh", "year": 1999}, {"title": "Counting CSP Solutions Using Generalized XOR Constraints", "author": ["C.P. Gomes", "W.J.V. Hoeve", "A. Sabharwal", "Selman B."], "venue": "Proceedings of AAAI\u201907, 204-209. Gomes C.P.; Sabharwal A.; Selman B. 2006. Model Counting: A New Strategy for Obtaining Good Bounds. In Proceedings of AAAI 2006 Gomes, C. P.; Sabharwal, A.; and Selman B. 2009. Model Counting. Handbook of Satisfiability, 633-654. IOS Press.", "citeRegEx": "Gomes et al\\.,? 2007", "shortCiteRegEx": "Gomes et al\\.", "year": 2007}, {"title": "Hard and easy distributions of sat problems", "author": ["D. Mitcell", "B. Selman", "H. Levesque"], "venue": "Proceedings of AAAI\u201992, 459-465. AAAI Press/MIT Press. Kaporis, A. C.; Kirousis, L. M.; and Lalas, E. G. 2006. The probabilistic analysis of a greedy satisfiability algorithm. Random Structures and Algorithms 28: 444-480. Krikpatrick, S.; and Selman, B. 1994. Critical behavior in, the satisfiability of random boolean expressions. Science 264:", "citeRegEx": "Mitcell et al\\.,? 1992", "shortCiteRegEx": "Mitcell et al\\.", "year": 1992}, {"title": "Combining Component Caching and Clause Learning for Effective Model Counting", "author": ["T. 1297-1301. Sang", "F. Bacchus", "P. Beame", "H.A. Kautz", "T. Pitassi"], "venue": null, "citeRegEx": "Sang et al\\.,? \\Q2004\\E", "shortCiteRegEx": "Sang et al\\.", "year": 2004}, {"title": "Exact Phase Transitions in Random Constraint Satisfaction Problems", "author": ["K. Xu", "W. Li"], "venue": "Journal of Artificial Intelligence Research", "citeRegEx": "Xu and Li,? \\Q2000\\E", "shortCiteRegEx": "Xu and Li", "year": 2000}], "referenceMentions": [{"referenceID": 2, "context": "49 (Diaz et al. 2008) respectively.", "startOffset": 3, "endOffset": 21}, {"referenceID": 7, "context": "Among them, (Xu and Li 2000) may be one of the few works that proved the existence of phase transition and identified the phase transition points exactly.", "startOffset": 12, "endOffset": 28}, {"referenceID": 1, "context": "For #SAT, (Birnbaum and Lozinskii 1999) first proposed an exact algorithm CDP, an extension of the standard Davis-Putnam(DP) procedure, to solve #SAT problems.", "startOffset": 10, "endOffset": 39}, {"referenceID": 2, "context": "For instance, researchers have already investigated the phase transition in QSAT and classical planning problems (Bylander 1996, Gent and Walsh 1999). On the other hand, in recent years we have also viewed an increasing interest in counting the number of solutions to combinatorial problems. Recent research has shown that counting the model of SAT problems or CSP problems corresponds to numerous #P-complete problems such as conformant probabilistic planning (Domshlak and Hoffman 2006), and various probabilistic inference problems (Chavira and Darwiche 2008). (Bailey et al. 2007) first studied phase transition in model counting problems of SAT. They considered the decision problem #3SAT(\uf0b32 n/2 ): given a 3CNF-formula, is it satisfied by at least the square-root of the total number of possible truth assigment. From experimental results, Bailey et al. (2007) pointed out that the phase transition point should be 2.", "startOffset": 129, "endOffset": 867}, {"referenceID": 7, "context": "And therefore Xu and Li (2000) introduced an alternative random model, i.", "startOffset": 14, "endOffset": 31}, {"referenceID": 7, "context": "deciding satisfiability of CSP, and the theorems proposed in this paper also reduce to theorem 1 and theorem 2 in (Xu and Li 2000).", "startOffset": 114, "endOffset": 130}, {"referenceID": 7, "context": "In this sense, the theorems proposed in this paper can be viewed as a generalization of those proposed in (Xu and Li 2000).", "startOffset": 106, "endOffset": 122}, {"referenceID": 7, "context": "In theorem 1 of (Xu and Li 2000), it has been proved that , , 2 2 , , , , E(( ) ) E ( ) n k n k r p r p X X \uf061 \uf061 \uf0bb when n is large enough.", "startOffset": 16, "endOffset": 32}], "year": 2011, "abstractText": "The study of phase transition phenomenon of NP complete problems plays an important role in understanding the nature of hard problems. In this paper, we follow this line of research by considering the problem of counting solutions of Constraint Satisfaction Problems (#CSP). We consider the random model, i.e. RB model. We prove that phase transition of #CSP does exist as the number of variables approaches infinity and the critical values where phase transitions occur are precisely located. Preliminary experimental results also show that the critical point coincides with the theoretical derivation. Moreover, we propose an approximate algorithm to estimate the expectation value of the solutions number of a given CSP instance of RB model.", "creator": "Microsoft\u00ae Office Word 2007"}}}