{"id": "1105.3486", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "17-May-2011", "title": "Xapagy: a cognitive architecture for narrative reasoning", "abstract": "We introduce the Xapagy cognitive architecture: a software system designed to perform narrative reasoning. The architecture has been designed from scratch to model and mimic the activities performed by humans when witnessing, reading, recalling, narrating and talking about stories. It allows us to see more than just how things play out, as well as what's going on. This enables us to develop our own learning systems to support complex cognitive tasks as they become more sophisticated.\n\n\n\n\n\nThe Xapagy Cognitive Architecture\nXapagy Cognitive Architecture\nThis architecture is intended to bridge the two aspects of the architecture: the cognitive architecture (which is the primary objective of the Xapagy) and the structural architecture (which is the basis for the Xapagy)\nand the structural architecture (which is the basis for the Xapagy)\nTo further simplify the Xapagy, we can define the structural architecture in which the structural architecture is made:\nFigure 5\nXapagy cognitive architecture\nFigure 5\nFigure 5\nFigure 5\nFigure 5\nFigure 5\nFigure 5\nFigure 5\nFigure 5\nFigure 5\nFigure 5\nThe structural architecture of the Xapagy\nThe structural architecture of the Xapagy\nFigure 5\nFigure 5\nFigure 5\nFigure 5\nFigure 5\nFigure 5\nFigure 5\nThe structural architecture of the Xapagy\nFigure 5\nFigure 5\nFigure 5\nFigure 5\nFigure 5\nThe structural architecture of the Xapagy\nFigure 5\nFigure 5\nFigure 5\nThe structural architecture of the Xapagy\nFigure 5\nFigure 5\nFigure 5\nFigure 5\nFigure 5\nThe structural architecture of the Xapagy\nFigure 5\nFigure 5\nFigure 5\nFigure 5\nFigure 5\nFigure 5\nFigure 5\nThis architecture, as is the primary objective of the Xapagy, contains a key part: the structural architecture\nFigure 5\nFigure 5\nThe structural architecture of the Xapagy\nFigure 5\nFigure 5\nFigure 5\nFigure 5\nThe structural architecture of the Xapagy\nFigure 5\nFigure 5\nFigure 5\nFigure 5\nFigure 5\nThe structural architecture of the Xapagy\nFigure 5\nFigure 5\nFigure 5\nFigure 5\nThe structural architecture of the Xapagy\nFigure 5\nFigure 5\nThe structural architecture of the Xapagy\nFigure 5\nFigure 5\nFigure 5\nThe structural architecture of the Xapagy\nFigure 5\nFigure 5\nFigure 5\nFigure", "histories": [["v1", "Tue, 17 May 2011 20:28:31 GMT  (659kb,DS)", "http://arxiv.org/abs/1105.3486v1", null]], "reviews": [], "SUBJECTS": "cs.AI", "authors": ["ladislau b\\\"ol\\\"oni"], "accepted": false, "id": "1105.3486"}, "pdf": {"name": "1105.3486.pdf", "metadata": {"source": "CRF", "title": "Xapagy: a cognitive architecture for narrative reasoning", "authors": ["Ladislau B\u00f6l\u00f6ni"], "emails": ["lboloni@eecs.ucf.edu"], "sections": [{"heading": null, "text": "CONTENTS\nI Introduction 2"}, {"heading": "II A top-down introduction 2", "text": "II-A External look: the pidgin language . . . . . . 2 II-B From words to concepts and verbs . . . . . . 3 II-C Instances . . . . . . . . . . . . . . . . . . . . 4 II-D The focus . . . . . . . . . . . . . . . . . . . . 4 II-E Shadows . . . . . . . . . . . . . . . . . . . . 4"}, {"heading": "III The primitive components of the architecture 5", "text": "III-A Random identifiers . . . . . . . . . . . . . . . 5 III-B Concepts and overlays . . . . . . . . . . . . . 5 III-C Negation . . . . . . . . . . . . . . . . . . . . 6 III-D Verbs and verb overlays . . . . . . . . . . . . 7 III-E Instances, attributes and relations . . . . . . . 7 III-F Verb instances . . . . . . . . . . . . . . . . . 7"}, {"heading": "IV Focus and shadows 7", "text": "IV-A Terminology and notation . . . . . . . . . . . 7 IV-B Story following and the focus . . . . . . . . . 8 IV-C Shadows . . . . . . . . . . . . . . . . . . . . 8"}, {"heading": "V Core knowledge 8", "text": "V-A Scenes . . . . . . . . . . . . . . . . . . . . . 9 V-B Groups . . . . . . . . . . . . . . . . . . . . . 9 V-C Ownership-type relations . . . . . . . . . . . . 9 V-D Verb instance types as determined by meta-verbs 10 V-E The succession chain . . . . . . . . . . . . . . 10 V-F Summarization relationships . . . . . . . . . . 10 V-G Creation of instances . . . . . . . . . . . . . . 11 V-H Additive composition of attributes . . . . . . . 11 V-I Creation of a new instance through change . . 11 V-J Destroying an instance . . . . . . . . . . . . . 11 V-K Representing questions . . . . . . . . . . . . . 11 V-L Representing a conversation . . . . . . . . . . 11 V-M Representing a narration . . . . . . . . . . . . 12"}, {"heading": "VI Episodic knowledge 12", "text": "VI-A Memorization . . . . . . . . . . . . . . . . . . 12 VI-B Forgetting . . . . . . . . . . . . . . . . . . . . 13"}, {"heading": "VII The Xapi abstraction and reference resolution 13", "text": "VII-A Word interpretation . . . . . . . . . . . . . . . 14 VII-B Reference resolution . . . . . . . . . . . . . . 14\nVII-B1 Special resolution rules for quotations 15 VII-C Reference finding . . . . . . . . . . . . . . . . 15 VII-D Verbalization . . . . . . . . . . . . . . . . . . 15"}, {"heading": "VIII Narrative reasoning in Xapagy 15", "text": "VIII-A Headless shadows . . . . . . . . . . . . . . . 15 VIII-B Story following: Predicting ongoing events,\nexpectation fulfillment and surprise . . . . . . 16 VIII-C Story creation: recalling and confabulating . . 16\nVIII-C1 Case 1: Pure recall of a witnessed story . . . . . . . . . . . . . . . . 17 VIII-C2 Case 2: Competitive recall . . . . . 17 VIII-C3 Case 3: Recalling frequent events . 18 VIII-C4 Case 4: Self shadowing recall. Drift 19 VIII-C5 Case 5: Constrained recall . . . . . 19 VIII-C6 Case 6: Leading questions . . . . . 20 VIII-C7 Case 7: Story line jumping . . . . . 20 VIII-C8 Case 8: Random wandering . . . . 20\nVIII-D Divagations . . . . . . . . . . . . . . . . . . . 21 VIII-D1 Instance creation and initial charac-\nterization . . . . . . . . . . . . . . 21 VIII-D2 Elaborating on instances . . . . . . 22 VIII-D3 Justifying actions . . . . . . . . . . 22\nVIII-E Story steering . . . . . . . . . . . . . . . . . . 22 VIII-E1 Initialization of the recall . . . . . 22 VIII-E2 Story line sharpening . . . . . . . . 23"}, {"heading": "IX Related work 23", "text": ""}, {"heading": "X Conclusion 26", "text": ""}, {"heading": "Appendix A: Abbreviations, notations and typographical conventions 26", "text": "A-A Acronyms . . . . . . . . . . . . . . . . . . . . 26 A-B Notations for basic components . . . . . . . . 26 A-C Notations for reference resolution . . . . . . . 26 A-D Notations for verb instances . . . . . . . . . . 26 A-E Notations for focus and shadow . . . . . . . . 26\nReferences 26\nar X\niv :1\n10 5.\n34 86\nv1 [\ncs .A\nI] 1\n7 M\nay 2\n01 1\n2 I. INTRODUCTION\nIt was not only difficult for him to understand that the generic term dog embraced so many unlike specimens of differing sizes and different forms; he was disturbed by the fact that a dog at three-fourteen (seen in profile) should have the same name as the dog at three-fifteen (seen from the front).\n(\u201cFunes the memorious\u201d by Jorge Luis Borges)\nThis paper describes the Xapagy cognitive architecture. The system is designed to perform narrative reasoning, an activity roughly analogous to some of the mental processes humans perform with respect to stories. Narrative reasoning includes: \u2022 Witnessing a series of ongoing events (a story), keeping track\nof the participants, their identity, properties and activities. \u2022 Following a fixed story narrated in a language (for instance, by\nreading a text or listening to another agent\u2019s narration). \u2022 Predicting future events in the story, expressing surprise when\nunexpected events occur. \u2022 Inferring events which (for some reason) were not witnessed;\nunderstanding narrations where some events have been not explicitly said (\u201creading between the lines\u201d). \u2022 Recalling a story, summarizing or elaborating on the remembered story, chaining together remembrances. \u2022 Daydreaming, confabulating new stories. \u2022 Self-narrate the story by verbalizing the recalled or confabulated\nstory, for the narrating agent\u2019s own use. \u2022 Narrate the story to an audience, adapt the narration based on\nfeedback from an audience, elaborate on aspects of the story or selectively narrate. \u2022 Act as an audience for a narration, express surprise or puzzlement, request clarification or elaboration for parts of the story and ask questions. \u2022 Perform collaborative story-telling, develop a story by alternating narrations from multiple agents.\nThe Xapagy architecture has been developed from scratch, rather than as an evolution of an existing model from artificial intelligence or cognitive science (but, naturally, building on the experience of these systems). Starting from scratch was motivated partially by the fact that the targeted behavior only partially overlaps with that of current cognitive architectures. The other reason, however, was an attempt to push the limits of the computational performance. We require that the reasoning step (such as the reading, witnessing, recalling or generating a sentence) to be performed in constant time on a computer with an appropriate level of parallelism. The cumulative computational complexity of all the algorithms used to perform the reasoning step must be O(1).\nThis is an unusually restrictive requirement for any algorithm in computer science, and artificial intelligence in particular. For instance, in computational logic, an algorithm operating in O(n3) might be considered fast, and intractable problems are legitimate subjects of inquiry. It is true, using anytime algorithms [30] can turn any architecture into a constant time architecture. We found it useful, however, to search for algorithms which are naturally of low complexity, rather than using high complexity algorithms with anytime hooks. In this endeavor we are encouraged by the fact that the human brain can perform narrative reasoning with only about a dozen synapses separating input from output [27].\nDescribing a cognitive architecture built from scratch inevitably requires a long list of definitions of primitive components. We anticipate that the most challenging aspects for the reader will be \u201cfalse friends\u201d: terms such as concept, instance, identity, verb and focus,\nwhich in the Xapagy system have somewhat unexpected definitions. To allow the reader to grasp the overall picture before proceeding to a detailed description, Section II describes the organization of the Xapagy architecture in a top down, informal way. This section will also include a short tutorial to the Xapagy pidgin language (Xapi). Section III describes the primitive components of the Xapagy system and their elementary operations. Section IV focuses on story following and shadowing which is the basic reasoning mechanism in Xapagy. Section V describes the representation of problem domain knowledge in Xapagy, as well as the core knowledge shared by all Xapagy agents. This includes the representation of attributes, change, ownership, grouping and scenes. Section VI discusses the representation of episodic knowledge. Section VII discusses the role of the Xapi language in the narrative process and issues of reference resolution, reference selection and verbalization. Section VIII discusses the implementation of narrative reasoning such as recalling, confabulating and narrating stories, as well as agent interaction with regards to story telling. Section IX positions the Xapagy system relative to other cognitive architectures and intelligent systems. Section X concludes the paper.\nAppendix A describes the notations and typographical conventions used in the paper.\nNote: this paper describes the architecture of the Xapagy software system. Due to space limitations, we postponed for future publications the full detail description of such components such as the shadow and headless shadow maintenance (Section IV-C and Section VIII-A) and the detailed implementation of different recall and confabulation models (Section VIII-C). Some of the examples in the paper have been hand-engineered for illustration purposes - usually by simplifying the real output and internal state of the system. However, all the components described in the paper are implemented and (at least to some degree) functional. Functionality which is planned but not implemented is noted as such in the paper. Whenever the paper refers to the \u201ccurrent version of the Xapagy system\u201d, it means core system Xapagy v0.9.32 with the language model Xapi v3.2 and domain knowledge library XapagyDKL v0.20."}, {"heading": "II. A TOP-DOWN INTRODUCTION", "text": ""}, {"heading": "A. External look: the pidgin language", "text": "The Xapagy architecture describes the operation of an autonomous agent which can directly witness events happening in the world, and it can communicate with humans and other agents through the Xapi pidgin language.\nIn linguistics, pidgin languages [26] are natural languages with a simplified syntactic structure which appear when two groups of people need to communicate without the time necessary to properly learn each other\u2019s languages. Pidgin languages are not the native language of any group of people, and uniquely among human languages, they have a limited expressiveness. Pidgins normally evolve into full featured creole languages when they are used as first language by a population. For instance, although it originated as a pidgin, Tok Pisin, official language of New Guinea, is not a pidgin in linguistic terms, but a creole, a language capable of expressing the full range of human concerns. Despite their limitations, pidgin languages represent a useful stopgap measure for communication between human communities, and their creative use can in fact express a wide range of information.\nWe have chosen to model the language of our agents on pidgin languages for their desirable properties both on the human and the Xapagy agent side. \u2022 The human side: Xapi should be immediately understandable\nto English speakers. Some simple English sentences can be\n3 immediately translated to Xapi. For other sentences, the missing grammatical structures can be approximated with workarounds. Although we make no claim that the full meaning of English text can be translated to Xapi, many stories as well as interaction patterns can be captured in a satisfactory manner.\n\u2022 The computer side: The simplified syntax of Xapi allows us to bypass the complexities of natural language processing, while still allowing communication with humans.\nXapi shares some important features with human pidgin languages. It has an uncomplicated causal structure: the only supported compound statement is the quotation statement. It uses separate words to indicate degrees of properties. It does not support quantifiers. It has a fixed word order and no morphophonemic variation (more exactly, accepts a range of morphophonemic variants as synonyms from the human speaker, but it does not provide them when generating it from the computer side1). In addition, it uses sentence part separators (\u201c/\u201d) and sentence boundary markers (\u201c//\u201d) as a way of circumventing the necessity of complex text segmentation (which is beyond the objectives of the Xapagy system).\nXapi is intended to be read and written by humans when communicating with Xapagy agents. It is also used for communication between Xapagy agents, but it is definitely not a formal agent communication language.\nA line of Xapi text represents a single sentence, with the sentence parts separated by \u201c/\u201d and terminated with a period \u201c.\u201d or question mark \u201c?\u201d. Sentences can be of a subject-verb-object form:\n1 The boy / hits / the dog.\nsubject-verb form: 1 The boy / cries.\nsubject-verb-adjective form: 1 \"Hector\" / is-a / warrior.\nor verb instance-verb-adverb form: 1 \"Achilles\" / strikes / \"Hector\". 2 The strikes / action-is / hard.\nOne or more parts can be substituted with a wh component, transforming the sentence into a question:\n1 Wh / eats / \"Little Red Riding Hood\"?\nXapi supports a single form of compound sentence, the quotation sentence:\n1 \"Little-Red-Riding-Hood\" / says / conversation // 2 the eyes / is-a / big.\nIn some cases, the semantics of other compound or complex sentences can be approximated by sentences which refer to shared instances or verb instances. We make, however, no claim that the expressive power of Xapi matches that of a natural language.\nSubjects and objects are instances which are either currently in the focus, or are newly created by the sentence. A new instance can be created by prefixing a word with the indefinite article \u201ca/an\u201d:\n1 \"Billy\" / hits / a dog.\nIn this example we assume Billy has been referred to before, but the dog has been just introduced in the story. Subsequent references to the already introduced instance of the dog are prefixed with the definite article \u201cthe\u201d (which can be omitted for proper nouns).\n1 The dog / changes / angry. 2 The dog / bites / \"Billy\".\nIn pidgin, we refer to instances through one or more of their attributes. When we mention the attribute [dog], the reference will be made to the strongest instance in the scene which has the given attribute. In some cases, such as quotation sentences, the resolution\n1In the current version Xapi 3.2.\n[man]\n[mammal]\n[courageous]\n[fearless]\n[alive][trojan]\n[\"Hector\"]\nThe concept overlay of the Hector instance\nFig. 1. A visualization of concepts, overlap, impact and concept overlays in the form of patches. Concepts directly added are represented with gray patches, concepts added through impact are black patches, and concepts which are implicitly present in the overlay due to their overlap with explicitly added concepts are represented as transparent contours.\nprocess is performed in a different scene. It is the responsibility of the speaker to choose attributes which make a reference resolve correctly.\nThe verb word in a Xapi sentence actually maps to a mixture (overlay) of verb concepts in the internal representation of the Xapagy agent. The composition of this verb overlay determines the relationship between the sentences. For actions such as \u201chits\u201d or \u201cbites\u201d, the relationship between the sentences is one of a weak temporal succession. One can imagine these sentences connected by \u201cthen\u201d: Billy hits the dog, then the dog is angry, then the dog bites Billy. The relationship is stronger between sentences which share instances.\nWe can create verb overlays which convey essentially the same action but create a stronger succession to the preceding verbs by adding the word \u201cthus\u201d. This can be used to represent a cause-effect relationship:\n1 \"Billy\" / hits hard / a dog. 2 The dog / thus changes / angry.\nJust like the \u201cdog\u201d in this story is an instance which has as attributes concepts such as [dog] and [angry], the action \u201chit\u201d is a verb instance whose verb part has as attributes the verb concepts [hit] and [hard].\nFinally, there are some sentences which do not represent actions in time, and thus they are not connected by succession relationships. Examples are verbs which set attributes to instances:\n1 \"Hector\" / is-a / warrior.\nor establish relationships between instances: 1 \"Hector\" / loves / \"Andromache\"."}, {"heading": "B. From words to concepts and verbs", "text": "We have seen that the Xapi pidgin uses a simplified syntax, but otherwise regular English words. The dictionary of the agent maps nouns and adjectives to overlays of concepts while verbs and adverbs are mapped to overlays of verb concepts. We will discuss concept overlays, as the verb overlays are very similar.\nAn overlay is the simultaneous activation of several concepts with specific levels of energy. For instance the dictionary of a Xapagy agent might associate the word \u201cwarrior\u201d with the following overlay: [courageous=0.4, violent=0.3, strong=0.3]\nThe attributes of an instance are represented by an overlay which can be gradually extended through the side effects of the sentences. Thus, when reading the Xapi sentences:\n1 \"Hector\" / is-a / man. 2 \"Hector\" / is-a / warrior.\nthe instance identified with the attribute Hector will acquire the attributes described in the overlay: man, courageous and so on.\n4 Concepts are internal structures of the Xapagy agent. To distinguish them from words, which are external entities, we will always show them in brackets, such as [warrior].\nOne way to develop an intuition for concepts and overlays is to visualize them as patches of a certain area in a fictional two dimensional space. Some concepts have a large area (e.g. [animal]), while others are smaller (e.g. [dog]). Proper nouns such as [\"Hector\"] have a very small area. Overlays can be visualized as collections of such patches (see Figure 1).\nConcepts can overlap on a pair-by-pair basis. For instance, there is a full overlap between man and human, meaning all men are human: overlap ([man],[human]) = area ([man]). Thus, if we inquire whether Hector is human, we shall obtain a value of 1.0. There is, on the other hand, only a partial overlap between courageous and fearless: overlap ([fearless], [courageous]) = 0.5\u00b7area ([courageous]). Thus, is we ask whether Hector is fearless, the answer will be 0.4 \u00d7 0.5 = 0.2.\nWords denoting proper nouns, such as \u201cHector\u201d, marked in pidgin by quotation marks, are treated slightly differently: when the agent first encounters a proper noun, it will create a new concept with a very small area, and an entry in the domain dictionary associating the proper noun with an overlay containing exclusively the new concept. Other than this, proper nouns are just like any other attributes. Having the same proper noun as an attribute does not immediately imply any form of identity.\nThe dictionary which maps from a word to an overlay, the areas and overlap of the concepts are part of the domain knowledge of the agent. Different agents might have different domain knowledge - thus the meaning of the word might differ between agents.\nC. Instances\nThe definition of an instance in Xapagy is somewhat different from the way this term is used in other intelligent systems. Instead of representing an entity of the real world, it represents an entity of the story, over a time span limited by the additivity of the attributes. For a particular instance, its attributes, represented in a form of an overlay of concepts, are additive: once an instance acquired an attribute, the attribute remains attached to the instance forever.\nThe advantage of this definition is that once we have identified an instance, there is no need for further qualification in order to identify its attributes (nor its actions).\nWhat might be counter-intuitive for the reader, however, is that things we colloquially call a single entity are represented in Xapagy by several instances. Let us, for instance, consider Hector. In the Iliad, he is a central figure of the story: he appears first as a warrior, participates in several fights, while later he is killed by Achilles by a spear to his throat, and the action revolves around the return of his body to his father, Priam. Hector also appears in the Hollywood movie \u201cTroy\u201d, but here he is killed with a sword to the chest. In the science fiction novel \u201cIlium\u201d by Dan Simmons, Hector is quantumrecreated by aliens to replay the events in Iliad on the planet Mars. In the novel, Hector chooses to ally itself with Achilles and the Greeks against the aliens from an alternate reality who are playing the roles of the gods.\nIn the Xapagy system, these are all different instances, which share the attribute [\"Hector\"] (but then, that is also shared by Hector Berlioz, the French composer). These instances, of course, are connected through various relations of identity (for a discussion on the philosophical problem of personal identity we refer the reader to [20], [21]). Such identity relations are represented in Xapagy by relations among multiple instances, not by sharing the same instance.\nThe Xapagy system, however, moves a step beyond this. Not only Hector from the Iliad and Hector from the Ilium are represented by\ndifferent instances, but Hector the live warrior and Hector the corpse in the Iliad are also two different instances, as the change from a living warrior to a dead one can not be represented as an addition of attributes.\n1 \"Achilles\" / strikes / \"Hector\". 2 \"Hector\" / thus changes / dead. 3 \"Achilles\" / kicks / \"Hector\".\nThe sentence in line 2 will create a new instance, with a new set of attributes. In addition, it will connect these instances with a somatic identity relation:\n1 i201 [\"Hector\"] / is-somatically-identical / 2 i101 [\"Hector\"].\nWhenever, at a later time, the Xapagy agent recalls Hector (for instance, in a conversation) it first needs to establish what instance is under consideration. Once this instance has been unequivocally established to be, for instance, the live Hector i101, all the attributes of the instance are also unambiguously established: we can say that he is strong, courageous etc., attributes which would not make sense applied to the dead Hector instance i201."}, {"heading": "D. The focus", "text": "The focus in the Xapagy system holds instances and verb instances after their creation for a limited time interval during which they are changeable. After an instance or verb instance leaves the focus, it can never return - and thus, it remains unchanged.\nInstances in the focus can acquire new attributes, participate as a subject or object in verb instances and become part of relations. Verb instances in the focus can become part of succession or summarization relations, and they can be referred to by new verb instances.\nA visual thinking oriented reader might think about the focus in the following way: the focus is a dynamically evolving graph. New nodes (instances and verb instances) are added through various events. The same events might also create new edges among the nodes of the focus. When a node leaves the focus, it retains its attributes and edges, but it can not acquire new ones any more. So the focus can be seen as the actively growing boundary of a graph which represents the complete experience of the Xapagy agent. The graph will be only locally connected: it will not have long links, as only nodes which have been in the focus together can have links.\nTo illustrate this graph nature of the focus, let us consider the following short story:\n1 A \"Billy\" / is-a / boy. 2 A \"Jeannie\"/ is-a / girl. 3 \"Billy\" / kissed / the girl. 4 \"Jeannie\" / pushed / the boy. 5 The boy / laughed.\nRunning this story through a Xapagy agent, and visualizing the focus at the end of the story through the Xapagy system\u2019s GraphViz based output, we obtain Figure 2. Such a graphical output provides an insight in the complexity of the focus, but it makes for a difficult reading. Thus, in the reminder of the paper, we shall mostly rely on text based illustrations of the internal structures (see Appendix A for some of the typographical conventions we shall use)."}, {"heading": "E. Shadows", "text": "Instances and verb instances leaving the focus will be demoted to the memory of the Xapagy agent with a certain level of salience. They will never enter the focus again. On the other hand, each instance and verb instance in the focus has a shadow, a weighted collection of instances and, respectively, verb instances from the memory.\nThe shadows are maintained through a combination of techniques whose goal is to make the shadows consistent between each other and\n5\nmatch the ongoing story with the collections of stories in the shadows. To ensure the matching of the stories, the shadows sometimes need to forego the individual matching level between the instances. Let us consider that a Xapagy agent which had read about the duel between Hector and Patrocles:\n1 \"Hector\" / cuts / \"Patrocles\". 2 The greek / thus changes / dead.\nSeveral days later, he resumes reading the Iliad and reads: 1 \"Achilles\" / strikes / \"Hector\".\nWe already know that the two instances of Hector will not be the same: the days passed before resuming the story will be more than enough to remove the instance from the focus. Yet, the two instances will have a lot of common attributes: Hector, Trojan, warrior.\nYet the overall shape of the current fight will lead to a different shadowing: the strongest element in the shadow of Hector will be the previous instance of Patrocles, while the shadow of Achilles will contain the previous instance of Hector. The Achilles-strikes-Hector verb instance will be shadowed by the Hector-cuts-Patrocles verb instance.\nShadows are always matched to instances and verb instances in the focus. The verb instances in shadows, however, bring with themselves verb instances to which they are connected through succession, precedence and summarization relations. These verb instances can be clustered into weighted sets which are very similar to shadows, but they are not connected to current focus components. These sets are called headless shadows and they represent outlines of events which the agent either expect to happen in the future or assume that they had already happened but have not been witnessed (or they are missing from the narration). If an event matching the headless shadow happens, the two are combined to become a regular focus-component / shadow pair.\nShadowing is the fundamental reasoning mechanism of the Xapagy architecture. All the higher level narrative reasoning methods rely on the maintenance of the shadows. For instance, the Xapagy agent can predict the death of Hector through the shadow, and can express surprise if this does not happen. While in this example the shadow is created after the events are inserted into the focus from an external source (for instance, by reading), the opposite is also possible. In the case of recall, narration, or confabulation, the agent creates instances and verb instances in the focus based on pre-existing shadows.\nWith this, we conclude our informal introduction of the Xapagy architecture. The remainder of the paper will present a more detailed description of how these components are implemented."}, {"heading": "III. THE PRIMITIVE COMPONENTS OF THE ARCHITECTURE", "text": ""}, {"heading": "A. Random identifiers", "text": "The Xapagy system operates by adding verb instances (continuously) and instances (occasionally) to the focus. The need for new instances is fulfilled by a generator which supplies a continuous flow of random identifiers. When a new instance or verb instance is needed, the Xapagy agent picks the current identifier from the continuous flow, and introduces it into the focus.\nIdentifiers which will become instances are decorated with attributes in the form of a concept overlay, and can participate in relationships appropriate for instances (such as ownership, group membership and scene participation). Identifiers which become verb instances are decorated with attributes in form of a verb concept overlay, can participate in sentence part relationships (subject, object and so on), and can be parts of relationships between verb instances (succession and summarization).\nThe identifiers do not carry meaning. However, for the purpose of debugging or illustration we can force the random generator to create descriptive identifiers. In this paper, for easier readability, identifiers such as i001, i002... will represent instances while v001, v002 ... will represent verb instances. When describing several consecutive stories, we shall jump with 100 in the count of identifiers for every new story."}, {"heading": "B. Concepts and overlays", "text": "A concept in Xapagy is the representation of an undivisible attribute. A weighted superposition of concepts is called a concept overlay (CO). When talking about concepts in general, we will denote concepts with c1, c2 . . . and COs as C1, C2 . . .. For specific concepts we will use descriptive names in brackets such as [man]. For specific overlays, we list the participating concepts inside brackets, if necessary, specifying the explicit energy level of each concept in the overlay.\nThe specificity of a concept is characterized by its area: area(c) \u2208 R+. The more specific a concept is, the smaller its area. We will assign an area of 1.0 to the concepts corresponding to the basic objects of the hierarchy in the sense described in Rosch et. al. [23]. For instance, some areas used in our experiments are:\narea([wolf]) = 1.0 area([\"Hector\"]) = 0.1 area([animal]) = 3.0 area([thing]) = 10.0\n6 In the following, we introduce formulas for the calculation of the energy level of specific concepts in overlays. To simplify the formulas we will define a trimming function as follows:\ntrim(x, y) =  0 if x < 0 x if x \u2208 [0, y] y if x > y\n(1)\nwhere we will omit y when its value is 1. Overlays are built iteratively, by adding one concept at a time, starting with an empty overlay. We start by defining the explicit energy of concept c in overlay C as een(C, c) < area(c). In the empty overlay, the explicit energy of all concepts is zero, for nonempty overlays, the explicit energy is determined recursively by the formulas defining the addition operation.\nWe will define the explicit energy of the overlay as the sum of the explicit energies of all the concepts in the overlay:\neen(C) = \u2211 c een(C, c) (2)\nWe define two addition operations, differentiated by whether they consider or not the impact of the concepts.\nThe direct addition \u2295 is a simple summation of the explicit energy, limited by the area of the concepts, and is defined through the following formulas:\nC\u2032 = C \u2295 {c, e} \u21d2 een(C\u2032, c) = trim(een(C, c) + e, area(c))\n\u2200cx 6= c een(C\u2032, cx) = een(C, cx) (3)\nThe second, impacted addition operation also considers the impact between concepts. Adding a concept c1 with energy e through this operation automatically triggers the addition of a number of other concepts, with an energy proportional with e, defined by the value impact(c1, c2) which has the dimensionality of a positive or negative ratio. The impact is not necessarily symmetrical and it can be negative.\nThe impacted addition operation is defined through the formulas:\nC\u2032 = C {c, e} \u21d2 een(C\u2032, c) = trim(een(C, c) + e, area(c))\n\u2200cx 6= c een(C\u2032, cx) = trim(een(C, cx) + e \u00b7 impact(c, cx), area(cx)) (4)\nThe explicit energy of a concept in an overlay is the energy we explicitly added either through direct addition or through impact.\nAnother way through which a concept can have energy in an overlay is through overlapping a concept which has explicit energy. The overlap between two concepts ci and cj is defined in the dimensionality of the area overlap(ci, cj) \u2208 R+. The overlap is always smaller than the area or either concept area(ci) \u2265 overlap(ci, cj) and it is symmetrical \u2200i\u2200j overlap(ci, cj) = overlap(cj , ci). If two concept\u2019s areas are identical and their overlap is identical with the area, the two concepts are indistinguishable, and thus are considered equivalent:\narea(c1) = area(c2) = overlap(c1, c2) def ==\u21d2 c1 \u2261 c2 (5)\nWe define the energy of concept c in overlay C conservatively by:\nen(C, c) =\nmax ( area(c), een(C, c) +\nmax cx 6=c\n( overlap(cx, c) \u00b7 een(C, cx)\narea(cx)\n)) (6)\nThe advantage of this conservative metric (i.e. relying on a max rather than a sum) is that the areas shared by three or more concepts do not need to be considered, as they do not enter into the calculation of the energy levels of the individual concepts in an overlay.\nFor a certain overlay C and concept c we can define the activation act(C, c) \u2208 [0, 1] of the concept in the overlay with:\nact(C, c) = en(C, c)\narea(c) (7)\nHaving defined the formulas governing concepts and COs, let us investigate the intuitions behind them. The definition of a concept and related terms in Xapagy does not map to scientific classification, computational logic, descriptive logic, or the possible worlds interpretation. The Xapagy system, in its current version, can not model these abstractions2.\nRoughly, Xapagy concepts cover the categories of nouns and adjectives of classical grammar. There is no notion of a \u201cclass\u201d or \u201ctype\u201d in Xapagy: there are only instances which happen to share certain attributes. A man is simply a random identifier which happened to have the attribute [man].\nThe area of a concept, as we said is a metric of its specificity - more general concepts have a larger area. However, we should caution the reader against pushing the analogy between this metric and the area of two-dimensional shapes too far. For instance, we can not assume that the sum of the areas of the different animal types will be the area of the concept [animal].\nIn a similar vein, Xapagy verbs cover both the categories of verbs and adverbs of classical grammar. A certain verb word in a sentence maps to an overlay of attributes. An interesting future research direction could be to investigate the relationship between this composition model and Pinker\u2019s microfeatures [22]."}, {"heading": "C. Negation", "text": "For each concept c we automatically define its negation \u2212c. When we write out the name of the concept, such as in [alive], we shall write the negation as [not-alive]. The negated concept is defined by its specific impact and overlap with reference to other concepts.\nimpact(c1,\u2212c1) = impact(\u2212c1, c1) = \u22121 overlap(c1, c2) = overlap(\u2212c1,\u2212c2) impact(c1, c2) = impact(\u2212c1,\u2212c2) (8)\nThe negation defined in Xapagy does not follow logical (or arithmetical) rules of negation. The concept [alive] does not stand for all the instances which are alive, nor [not-alive] stay for all the other instances.\nThe definition of the negation, however, is designed to serve the needs of narrative reasoning, and most of the times yields results consistent with the commonsense interpretation:\n1 \"Hector\" / is-a / warrior. 2 He / is-a / alive. 3 \"Hector\" / changes / not-alive.\nThe new instance of Hector will have the attributes [Hector, not-alive], the [alive] attribute being removed by the negative impact of the [not-alive] concept3.\n2If such abstractions must become part of the narrative, they need to be modeled in the story itself.\n3We can, of course, define a Xapi word \u201cdead\u201d which maps to [not-alive].\n7\nD. Verbs and verb overlays\nThe Xapagy system treats verbs very similarly to concepts. A verb or verb concept in Xapagy is the representation of an undivisible attribute of an action or event. A weighted superposition of verbs is called a verb overlay (VO). When talking about verbs in general, we will denote them with v1, v2 . . . and VOs as VC1,VC2 . . .. For specific verbs we will use descriptive names in brackets such as [hits]. The formulas introduced for COs will hold for VOs as well.\nIn contrast to concepts which are fully defined by their overlays and impacts, Xapagy defines a group of special meta-verbs which, when activated in the focus, trigger side-effects, in the form of modifying the focus and creating relations between instances / verb instances. More detail about meta-verbs will be provided in Section V-D.\nE. Instances, attributes and relations\nAn instance is formed by a random identifier and the associated CO. Instances are created whenever a new entity appears in the ongoing narration, or whenever an existing entity was changed such that the additivity of the CO can not be maintained. The source of the instance can be external (when witnessing or reading a story) or internal (when recalling or confabulating a story). Figure 3 describes the life cycle of an instance.\nIn Xapi sentences, the creation of a new instance can be triggered by making a reference prefixed with an article a/an. This triggers the creation of a verb instance with the meta-verb [create-instance], which creates the new instance and immediately initializes its CO with the attributes through which the reference has been made.\n1 A man / exists.\nThe attributes of the concept can be changed in the future through [is-a] sentences, which enact an impacted addition :\n1 The man / is-a / \"Hector\". 2 \"Hector\" / is-a / courageous.\nThe attributes of the instance are permanently attached to the identifier and they are strictly additive. Addition of new attributes is supported only to the extent that no significant negative impacts are exercised over the existing attributes. The only way we can turn Hector into a coward is through a [change] action:\n1 \"Hector\" / changes / coward.\nThis operation, however, creates a new instance, which inherits a copy of the attributes of Hector, with the appropriate new concepts (and their impacts) applied. The old instance is immediately demoted to memory.\nF. Verb instances\nA verb instance (VI) is composed of a random identifier and a number of mandatory relationships to its parts. Parts can be instances, VIs, COs or VOs. Table I describes the verb instance types and their mandatory parts. We can refer to the parts of a VI through a functional notation: for instance SubI(V ) is the subject instance of VI V . The only part shared by all VIs is the VerbVO(V), the verbs. The composition of this VO determines the type of the verb instance. For instance, the presence of the verb [is-a] implies a type of S-ADJ.\nFigure 4 describes the life cycle of a VI. Most VIs are instantiated from Xapi statements. Those parts which refer to existing instances or VI are determined through the reference resolution process (see Section VII-B). The source of the verb instances is either external (from observation of ongoing events or reading/listening to a narration) or internal (from recall or confabulation)."}, {"heading": "IV. FOCUS AND SHADOWS", "text": ""}, {"heading": "A. Terminology and notation", "text": "To simplify this presentation, let us start by several definitions. We define a weighted set of instances IS by saying that the participation of instance I in instance set IS is a value w(IS, I) \u2208 [0, 1]. In contrast to COs, where concepts have impact and overlap, instance sets deal with independent and non-interacting instances.\nThe primary operation of instance sets is the ratio-add:\n\u2200r \u2208 R IS = IS1 + r \u00b7 IS2 \u21d4 \u2200I w(IS, I) = trim (w(IS1, I) + r \u00b7 w(IS2, I)) (9)\nVerb instance sets VS are defined analogously.\nThe state of a Xapagy agent is modified by two kind of activities: spike activities (SA) and diffusion activities (DA).\nSAs are instantaneous operations on overlays and weighted sets. Examples of activities modeled by SAs include inserting an instance in the focus, inserting a verb instance in the focus, and enacting the side effects of a verb instance. SAs are not parallel: the Xapagy agent executes a single SA at a time.\nDAs represent gradual changes in the weighted sets; the output depends on the amount of time the diffusion was running. Multiple DAs run in parallel, reciprocally influencing each other. As a practical matter the Xapagy system implements DAs through sequential\n8 discrete simulation, with a temporal resolution an order of magnitude finer grained than the arrival rate of VIs."}, {"heading": "B. Story following and the focus", "text": "The focus is the collection of instances and VIs currently active in the Xapagy agent. Instances and VIs in the focus are changeable: they can acquire attributes, and they can enter into new relations. Once an instance or VI leaves the focus (is demoted to the memory) it will not change, except through a gradual decay.\nThe focus can be seen as two weighted sets of instances ISF and VIs VSF respectively. The focus is maintained through a number of SAs and DAs. In the following description we will list the SAs and DAs in an informal manner. The exact formulas are beyond the scope of this paper.\nLet us start by listing the activities which affect the instances of the focus ISF . We will prefix their descriptions with S and D depending on whether it is spike or a diffusion activity, and with +, - or +/- depending on their effects of the participations in ISF . (S+) instances are added at full participation at their creation. (D-) in absence of other factors, the participation of instances decays\nin time. (S+) instances referenced by newly created VIs are reinforced. (D+) reinforcement on instances transfers part of the reinforcement\nto instances which are in a relation with the instance. (D-) forced decay on instances transfers part of the decay to instances\nwhich are in relation to the decayed instance. (S-) instances on which the change procedure has been performed\nare decayed to zero and removed from the focus. The weighted set of VIs in the focus VSF represents, informally speaking, recent verb instances which are still relevant to the interpretation of current events. In general, the older a VI, the less likely to be still in focus. In practice, this is somewhat more complex than a gradually decaying tail of recent events, as the nature of the event changes the speed at which the VI fades from the focus. Non-action verbs, such as is-a will fade from the focus very quickly, action verbs tend to linger until they have acquired a sufficient number of successors while summarization verbs remain until they are a current summary and then fade out when they acquired sufficient successors.\nLet us now summarize the activities which positively or negatively affect the participation of the verb instances in the focus: (S+) VIs are added at full participation when created. (D-) in absence of other factors, VIs decay at a speed dependent on\ntheir verbs. (S-) VIs decay with every establishment of the successor relationship. (S+) the participation of the summary verbs is increased by every\nmatching VI added to the focus. (S-) the [is-single-scene] verb decays all the current VIs from\nthe focus. When the participation of an instance or VI falls below a threshold, the instance or VI is removed from the focus. While there are several ways through which an instance might be reinforced in the focus, for a non-summary VI the only question is how quickly it will fade away. While instances and summarization VIs can (theoretically) stay indefinitely in the focus, non-summarization VIs will leave quite quickly."}, {"heading": "C. Shadows", "text": "Instances and VIs which have been demoted to memory can affect the current state of the agent by shadowing the focus. Each instance (or VI) in the focus is the head of a an associated instance set (or verb instance set) called the body of the shadow. The shadows are\nmaintained such that their components reflect the previous experience of the agent with respect to the ongoing narration.\nShadows are dynamic and maintained by a number of activities:\n(S+) The addition of an unexpected instance or VI creates a corresponding empty shadow. (S+) The addition of an expected instance or VI creates a new shadow from the headless shadow which predicted the instance (for more detail see Section VIII-B). (D-) In the absence of other factors, all the shadows decay in time. The energy released in this DA is added to the energy of the environment. (D+) Matching the head: instances from memory which match the shadow head will be strengthened in the shadow body. The energy for this DA comes from the environment. (D+) Matching the shadow body: instances from memory which match the shadow body will be strengthened in the shadow body. The energy for this DA comes from the environment. (D+/-) Consistency: the participation of the VI in a shadow and the participation of its parts in the shadows of the corresponding parts of the shadow head gradually moves towards a common average value. (D+/-) Instance identity sharpening: if an in-memory instance participates in multiple shadows, the strong participations will be gradually reinforced, while the weak participations will be further weakened. The operation is energy neutral for a given memory instance. (D+/-) Non-identity: if a shadow contains instances which are connected through the non-identity relation4, the instance with the stronger participation is reinforced while the instance with the weaker participation is weakened. The operation is energy neutral for a given non-identity pair. instances which appear as different verb parts are guaranteed that they are not identical. This DA decreases the participation of weaker non-identical instances in the same shadow body. The operation is energy neutral based on a per / shadow body bases.\nThe shadow maintenance activities (and the closely related headless shadow maintenance activities controlling the narrative reasoning), are self-regulating, encompassing elements of negative feedback as well as resource limitation.\nFor instance, the head matching activity will not create an indefinitely large shadow even if the shadow head is very general, as the shadow instance set is \u201cfed\u201d from a limited set of resources, and once the shadow had grown beyond a certain size, its growth will slow.\nSuch interactions apply even between the activities. If a shadow is small, because there are few memory items matching its head, it can be extended by matching the shadow body, which brings in more remotely related items than the head match."}, {"heading": "V. CORE KNOWLEDGE", "text": "Problem domain knowledge appears in the Xapagy architecture in three forms:\n- Dictionary knowledge includes the knowledge of the words in the Xapi language and the way they map to COs and VOs. Xapagy agents do not need domain specific grammatical knowledge, as the pidgin grammar is very simple and rigidly fixed.\n4The non-identity relation is explicitly created for distinct instances in the same story line. For example, Achilles is non-identical to the instance of Hector with which it is currently fighting. However, Achilles is not nonidentical with Lancelot.\n9 - Conceptual knowledge is encoded in the properties of concepts and verbs. This includes their areas, overlaps, impacts and, for a small number of meta-verbs, the side effects of the verbs. - Episodic knowledge covers the stories previously witnessed, read or confabulated by the agent. The stories are represented by the interconnected network of VIs and instances in the memory.\nA Xapagy agent acquires dictionary and conceptual knowledge by loading knowledge description files in the Xapagy domain knowledge language. This very simple, human editable language allows the specification of the dictionary, the concepts and verbs together with their impacts and overlaps. The agent can save its dictionary and concept knowledge in the same format.\nWhile the knowledge of Xapagy agents vary in all three domains (dictionary, conceptual and episodic), we assume that they share a common core of basic knowledge encoded in the Xapagy Domain Knowledge Library. The current presentation covers Xapagy CoreDKL version 0.20. We assume that the representations in this library are shared by all Xapagy agents. The CoreDKL only contains conceptual and dictionary knowledge. The agents share basic concepts and even elements of language, but they do not, by default, share remembrances of stories.\nTo reason about other problem domains, the agent can load other problem domain definitions. For instance, the Iliad library contains descriptions of words such as warrior or sword, as well as fighting related verbs. The LittleRedRidingHood domain contains definitions for hood, basket and wolf. Both domains rely upon and therefore load the Human library which provides definitions for words such as human, man, woman, alive and dead.\nThe reminder of this section discusses some of the functionality defined in the CoreDKL."}, {"heading": "A. Scenes", "text": "A scene in Xapagy is a partition of the reference space. Every Xapi sentence resolves its references inside a single scene, which needs to be resolved before the resolution starts. From this modus operandi follows that for VIs created from Xapi, only instances which are members of the same scene can interact with each other.\nA scene does not necessarily correspond to a physical location, and the mechanical rules of interaction do not always apply. For instance, a conversation, either face-to-face or through remote means such as by phone, is a scene. If an agent talks to a friend in a restaurant, while being on the phone with another, it will be simultaneously part of three scenes: two non-physical conversation scenes, and the physical scene of the room, including the furniture, food, his friend and other customers.\nScenes are implemented as relations between the scene instance (an arbitrary instance which has the [scene] attribute) and the instances which are considered to be in the scene. An instance can be part of multiple scenes.\nThere is current scene in the focus. Newly created instances will be part of the current scene. Other scenes can be created as any other instance. The current instance is set with the [is-current-scene] verb. The statement:\n1 A forest scene / is-current-scene.\ncreates a new scene with the attribute forest, and makes it the current scene. Previous scenes will be retained, although they will gradually expire from the focus. If we want to expire from the focus all the previous scenes, it can be done with the [is-only-scene] verb:\n1 A forest scene / is-only-scene.\nAll the newly created instances will automatically become part of the current scene.\n1 A forest scene / is-only-scene. 2 A \"Little-Red-Riding-Hood\" / is-a / girl. 3 The girl / has / a red hood. 4 The girl / has / a basket.\nAt this moment, the scene will contain the girl, the hood and the basket. An instance can leave the scene through the [leave-scene] verb:\n1 The wolf / leaves-scene.\nInstances which are not part of any scene but are still in the focus are considered to be part of the limbo scene. At reference resolution, the limbo scene is searched after the current scene, allowing it to move instances from one scene to another.\n1 A house / is-current-scene. 2 The wolf / enters-scene.\nScenes determine the reference space where a particular reference is made: \u2022 a reference to a scene is resolved among the scenes in the focus. \u2022 a reference to an entering instance is resolved in the context of\nthe limbo scene. \u2022 a reference in a quote verb instance is resolved in the scene\ndetermined in the inquit. \u2022 in all other cases, the reference is resolved in the context of the\ncurrent scene."}, {"heading": "B. Groups", "text": "The concept of a group in Xapagy allows us to have VIs where the subject or the object is a collection of entities. Groups are implemented as instances which have the special attribute [group], and they can be in a composition relation with a number of other instances. Instances can be part of more than one group and they can join and leave groups dynamically.\nAn explicit group is a group of individually known instances: 1 An explicit group / exists. 2 The group / contains / Billy. 3 The group / is-joined-by / \"Johnny\".\nThe side effects of most meta-verbs distribute over the members of explicit groups. For instance, we can remove all the members of the group from the current scene by saying:\n1 The group / leaves-scene.\nIn the case of implicit groups the elements are not enumerated: 1 A group / exists. 2 The group / is-a / many man.\nAn implicit group can still have explicit members: 1 The group / contains / \"Johnny\".\nAt this moment, we have a crowd of people, out of which we recognize Johnny."}, {"heading": "C. Ownership-type relations", "text": "Let us call ownership-type relations the multitude of complex relations commonly expressed in English with the word \u201chas\u201d. As Xapi does not support polysemantic words, the different relations must be represented in Xapagy by different words (and of course, different VOs).\nThe current version of core domain knowledge defines three distinct concepts [holds], [legally-owns] and [is-part-of]5, mapped to similarly named words:\n1 \"Little-Red-Riding-Hood\" / holds / a basket. 2 \"Mary\" / legally-owns / a little lamb. 3 A big eye / is-part-of / the wolf.\n5The [contains] verb of group membership discussed in the previous section is a close relative.\n10\nOwnership-type relations can change frequently as a result of sentences which mix in the VO the verb for the creation (or negation) of the relation, the meta-verbs for denoting an action verb and one or more verbs describing the nature of the action:\n1 \"Johnny\" / holds / a ball. 2 \"Johnny\" / drops / the ball. 3 \"Billy\" / picks-up / the ball.\nFor instance, the word \u201cdrops\u201d is mapped to [drops not-holds succ*]. Johnny can, of course get rid of the ball in a different way as well:\n1 \"Johnny\" / puts-down / a ball.\nwhere \u201cputs-down\u201d is mapped to [drops not-holds succ*]. Due to the limitations of the Xapi language (as well as the VI structure), the English statement \u201cBilly gives the ball to Johnny\u201d must be expressed as two Xapi statements (whose tight coupling is enforced by the \u201cthus\u201d word):\n1 \"Billy\" / gives / the ball. 2 \"Johnny\" / thus receives / the ball.\nOne can consider this as the extreme case of the situation when Billy puts down the ball and, after a while, Johnny picks it up. This is an example of those cases where the limitations of the language can be addressed through a workaround involving instances shared among multiple VIs.\nD. Verb instance types as determined by meta-verbs\nThe side effects of a VI are determined by the meta-verbs participating in the VO their verb part. Although technically any combination of verbs and meta-verbs is possible, in practice most VIs can be classified in three classes, recognizable by their metaverbs: action VIs, attribute accumulation VIs and relation creation VIs. These classes differ in their side effects as well as the amount of time they spend in the focus.\nAction VIs represent actions or events which are part of the chain of a developing story. This is represented by the fact that they are connected by succession relations to their predecessors and by summarization relations to VIs which summarize them.\nAs action VIs need to be connected to their successors, they need to stay in the focus for a longer amount of time. Their participation in the focus is decreasing slowly, but it is reduced, in the form of a SA by the establishment of a succession relation: action VIs are pushed out by their successors.\nThere are two kinds of attribute accumulation VIs. One of them impacts instances by adding new attributes with the meta-verb [is-a], while the other one impacts VIs by adding new verbs with the meta-verb [action-is]. Unless an attribute accumulation VI is also an action VI, it will expire very quickly from the focus (and in consequence, it will also have a low salience in the memory).\nRelation-creation VIs (always of type S-V-O) embody a relation among instances in the focus. This type of VIs never expire from the focus as long as the represented instances are present. They can be, however, pushed out from the focus by other relation creation VIs.\nEach verb in the VO can bring its own side effects which are implemented as an SA. The spike is normally triggered at the moment when the VI is inserted in the focus, although some type of insertions, such as for questions, inhibit the side effects."}, {"heading": "E. The succession chain", "text": "The succession relation is established between a predecessor VI and a successor VI when a new action VI is inserted into the focus. The SA activated at the insertion of verb instance Vn creates succession relations relations between Vn and all the VIs V in the focus, the strength of the relation given by:\nrs(Vn, V ) = \u03c3 \u00b7 (w \u00b7M(Vn, V ) + 1\u2212 w) \u00b7 focus(V )r (10)\nThe matching relation M(Vn, V ) takes the value 1 if V and Vn have at least one common part, and 0 otherwise. The balancing factor w defines whether succession relations are established only with VIs which share parts with the new VI (w = 1), with all VIs in the focus (w = 0) or intermediary values.\nThe value \u03c3 is the strength of SA. The parameter r modulates the strength in function of the recentness of the links. If r >> 1 the link is connected only to the most recent VIs (for instance, in the case of the word \u201cthus\u201d)."}, {"heading": "F. Summarization relationships", "text": "Action statements represent individual actions or events whose timespan is measured over the course of seconds. Repetitive or continuous actions are summarized by summarization VIs.\nFigure 5 shows an example of the summarization process (the VIs are illustrated with the corresponding Xapi statement). The left column of VIs are created by direct observation, while the VI in the right is created by the summarization process. The summarization VI is created when the second \u201chits\u201d verb instance is issued. As long as the ongoing VIs inserted in the focus match the current summarization VIs, they will be linked to the current summarization VI.\nLike other VIs, summarization VIs will participate in succession and summarization relations. This allows future recall processes to recall some stories in more details than others.\nMultiple summarization VIs can be active simultaneously in the focus. Some of them might be summaries over VIs which are themselves summaries.\nAn additional complexity of summarization involves group actions. In the Figure 5 the summarization verb instance is simply a repetitive version of the ongoing verb instances which point to the same instances as subject and object.\nHowever, we can summarize series of hits, kicks, blows and strikes exchanged between Hector and Achilles with a statement saying that \u201cthe two warriors were fighting\u201d. That is, the series of S-V-O verb instances are summarized by an S-V verb instance, there the subject part is a group instance.\nThere is only incipient support in the current version of the Xapagy system for this type of reasoning, thus the detailed discussion of the approach is beyond the scope of this paper.\n11"}, {"heading": "G. Creation of instances", "text": "The meta-verb [create-instance] creates a new instance with a specified set of attributes and adds a relationship that the new instance is a participant in the scene.\n1 Scene / create-instance / attribute-list.\nIn most cases, this kind of statement does not need to be explicitly issued in Xapi, because it is automatically created as a side effect whenever an a/an article is used. The statement is created explicitly by the recall mechanism. If the recall is verbalized, the verbalization component might roll the instance creation into the sentence where the new instance is first referred to."}, {"heading": "H. Additive composition of attributes", "text": "An instance can acquire a new attribute by impact-adding to the CO associated with the instance, another CO described in S-ADJ type VI. This functionality is the side effect of the [is-a] verb:\n1 \"Hector\" / is-a / warrior.\nThe general assumption about Xapagy instances is that they reflect a story entity with an unchanging set of attributes. The continuous addition of attributes through [is-a] is, thus, considered to be an act of discovery, not a recording of change. The added attributes should not have a negative impact on the existing set.\nIf a real change in the attributes is what we want to record, this must be done through the [change] verb, which creates a new instance).\nSimilar considerations apply to the VIs, whose verb part can acquired new attributes through an S-ADV type verb, as a side effect of the [action-is] verb:\n1 \"Achilles\" / strikes / \"Hector\". 2 The strikes / action-is / hard."}, {"heading": "I. Creation of a new instance through change", "text": "If the story entity had changed its attributes (lost existing ones or acquired new ones) in a manner not consistent with the discovery of a previously unknown but existing attribute, the Xapagy agent must represent it through the creation of a new instance6.\nThis functionality is implemented with the [changes] verb: 1 \"Hector\" / changes / dead.\na new instance is created, which acquires the previous attributes of Hector (including the proper noun \u201cHector\u201d), to which the [not-alive] concept is impact added, triggering a number of negative and positive impacts (e.g. the removal of the [alive] concept from its attributes). At the same time, the initial instance is immediately retired from the focus and a relation of type [is-somatically-identical] is created between the old and new instances7.\nThe side effects of the verb [changes] are described by the following SAs: (S+) the creation of the new instance, with a set of attributes obtained\nby the impact-add from the attributes of the old instance (S+) creation of the [is-somatically-identical] relation be-\ntween the old instance and the new one (S+) creation of scene membership relations to mirror the scene\nmemberships of the existing instance\n6As the creation of a new instance involves simply picking a random identifier from the existing flow, the creation of an instance does not incur any cost in the Xapagy model.\n7Somatical identity, in the philosophy of personal identity represents the identity following the \u201cbody\u201d of the entity. This is to be contrasted to the psychological identity which maintains the continuity of the memory (for entities for which this is relevant).\n(S-) expire from the focus all the scene membership relations of the old instance (S-) expire the old instance from the focus"}, {"heading": "J. Destroying an instance", "text": "Certain real-world actions such as eating, drinking, or dissolving lead to the disappearance of that entity as an identifiable part of the scene. If this entity was mapped to a Xapagy instance, the instance can not be destroyed, as instances and their attributes are unchangeable. The real world destroying operation is echoed in the Xapagy agent through the removal of the instance from the focus and the scenes.\nThis can be implemented through the [destroy] meta-verb, which is part of the VOs associated with words such as \u201ceats\u201d, \u201cdrinks\u201d or \u201cswallows\u201d.\n1 \"Billy\" / eats / an apple.\nOn the other hand many operations which informally are denoted as destruction, are in the Xapagy parlance not a destroy operation but change:\n1 \"Billy\" / drops / the bottle. 2 The bottle / changes / numerous-group glass shards."}, {"heading": "K. Representing questions", "text": "A question in Xapagy is a verb instance which is partially unspecified and it can form an answer relationship to VIs which match the question.\nThese VIs answering questions might already be in the focus, or they might be created on demand by the headless shadow mechanism. There is no requirement that there be a single answer to a question. Some questions might not be answered (not even attempted to be answered) or one might have multiple answers to the same question.\nIn general, the overall flow of the question / answer mechanism is beyond the scope of this paper. Here we shall only discuss the nature and specification of the question VIs.\nThe Xapagy CoreDKL defines a special verb [wh] and a corresponding special concept [wh] which, as part of a VO or CO respectively, turns the VI part into an unspecified one. Any VI which has at least one unspecified part is a question:\n1 Johnny / wh cries? 2 Wh boy / cries? 3 Billy / hits / wh boy? 4 Wh / eats / \"Little Red Riding Hood\"? 5 Wh / wh / wh?\nThe wh marker marks the unspecified component of the question. All the verb instances marked above are questions, irregardless which component of the verb instance was marked with \u201dwh\u201d. Once a VI has been marked as a question, it will inhibit the side effects of its verb (even if the verb itself is not marked with wh).\nAs the words in Xapagy map to VOs and COs, we can define specific words for frequently occurring combinations of [wh] and other concepts or verbs, such as \u201cwho\u201d \u2192 [wh human], or \u201cwhere\u201d \u2192 [wh place]."}, {"heading": "L. Representing a conversation", "text": "Xapagy defines as conversation the exchange of communicative acts between two entities in a story. One can represent an exchange of words without understanding the meaning of the communication. In this case, no additional knowledge is needed beyond the definition of the communicative acts themselves (\u201csay\u201d, \u201cask\u201d and so on).\nIf, however, we understand the content of the communication, we need a method to simultaneously represent the communicative act and the meaning of the communication.\n12\nThe exhaustive discussion of the communication models is beyond the scope of this paper. We will illustrate the representation through one example, the famous exchange between the wolf and Little Red Riding Hood.\nWe are considering the external view of the story: that is, the case of a Xapagy agent reading the Grimm brothers translated to Xapi. The understanding proceeds from the point of view of the Xapagy agent: it does not require the wolf and the girl to be Xapagy agents.\nThe representation requires two scenes. The physical scene is the house of grandma - this is where the communcation will take place. The other scene, the conversation scene is a virtual scene where the meaning of the conversation is interpreted, and as such is marked with the [conversation] attribute.\nThe wolf and the girl are discussing about issues relevant to the current moment and themselves, thus they are part of both the physical and the conversation scene. This is not a requirement: if they would talk about the Iliad, the conversation scene would contain Hector and Achilles, but not the conversing parties.\nThe utterances of the conversation will be represented as quotationtype sentences, where the inquit is resolved in the physical scene, while the quote is resolved in the conversation scene. This being a quote sentence, the special resolution rules apply for \u201cyou\u201d, \u201cme\u201d and so on (see Section VII-B).\nPutting it all together, the conversation between the girl and the wolf is translated to Xapi as follows:\n1 A scene house / is-current-scene. 2 The wolf / enters-scene. 3 \"Little-Red-Riding-Hood\" / enters-scene. 4 A scene conversation / exists. 5 \"Little-Red-Riding-Hood\"/ enters / conversation. 6 The wolf / enters / conversation. 7 \"Little-Red-Riding-Hood\" / says / conversation // 8 Eyes / is-part-of / you. 9 \"Little-Red-Riding-Hood\" / asks / conversation //\n10 Eyes / wh is-a / big? 11 Wolf / answers / conversation // 12 Eyes / see good / you. 13 \"Little-Red-Riding-Hood\" / says / conversation // 14 I / changes / afraid. 15 The wolf / swallows / \"Little-Red-Riding-Hood\"."}, {"heading": "M. Representing a narration", "text": "A narration is a special case of conversation, which contains repetitive communicative acts by a narrator. The narration scene does not normally overlap with the current scene:\n1 A scene \"Smyrna\" / is-current-scene. 2 A man / is-a / \"Homer\". 3 A scene \"Iliad\" / exists. 4 Scene \"Iliad\" / is-before / scene \"Smyrna\". 5 \"Homer\" / says / \"Iliad\" // 6 A man / is-a / \"Achilles\". 7 \"Homer\" / says / \"Iliad\" // 8 \"Achilles\" / is-a / angry.\nIn this sample, the man Homer, in his birthplace Smyrna starts the narration of the Iliad. Line 4 defines the temporal relationship between the scenes, i.e. establishing the fact that scene of Iliad happens in the past of the narration. The specification of such a relation is optional. Furthermore, it is possible to place a narration in the future. For instance, describing the prophecy made by Calchas we need to position it in the scene which is in the future:\n1 Scene \"Iliad\" / is-before / 2 scene \"ProphecyOfCalchas\".\nAn agent can narrate a past (or future) story in which itself participates - but it will need to represent itself with another instance, with which it would establish some kind of identity relation (for instance, somatic identity). Let us see an example of Achilles narrating its own story at the Greek camp:\n1 A greek camp scene / is-current-scene. 2 A man / is-a / \"Achilles\". 3 A scene \"Remembrance\" / is-before / scene camp. 4 \"Achilles\" / says / \"Remembrance\" // 5 A man / is-a / \"Achilles\". 6 \"Achilles\" / says / \"Remembrance\" // 7 I / somatically-identical / \"Achilles\". 8 \"Achilles\" / says / \"Remembrance\" // 9 \"Achilles\" / kills / \"Hector\"."}, {"heading": "VI. EPISODIC KNOWLEDGE", "text": "After a minute or so, he goes out to join Doug, who is ritualistically lighting up a cigar. \u201cThis is a good time to smoke,\u201d he mumbles. \u201cWant one?\u201d \u201cSure. Thanks.\u201d Randy pulls out a folding multipurpose tool and cuts the end from the cigar, a pretty impressive looking Cuban number. \u201cWhy do you say it\u2019s a good time to smoke?\u201d \u201cTo fix it in your memory. To mark it.\u201d Doug tears his gaze from the horizon and looks at Randy searchingly, almost beseeching him to understand. \u201cThis is one of the most important moments of your life. Nothing will ever be the same. We might get rich. We might get killed. We might just have an adventure, or learn something. But we have been changed.\u201d\n(\u201cCryptonomicon\u201d by Neal Stephenson)\nInformally, the episodic knowledge of a Xapagy agent is the totality of the stories ever witnessed, read, heard, recalled or confabulated by the agent. Technically, the episodic memory is a repository of all VIs and instances which have been, at some time, part of the focus, and is implemented as two weighted sets (of instances and VIs).\nThe episodic memory is neither addressable nor directly searchable. The only way in which the content of the episodic memory influences future behavior of the Xapagy agent is through the shadow and headless shadow mechanisms.\nWe call the participation of the instances S(I, t) and VIs S(V, t) in the episodic memory their salience (at time t). The salience is maintained by two DAs: (D+) Memorization - the salience of the instances and the VIs\nincreases while the instance or VI is in the focus (D-) Forgetting - the salience of instances and VIs exponentially\ndecays in time."}, {"heading": "A. Memorization", "text": "The memorization DA increases the memory salience of an instance (or VI) during its stay in the focus. We will describe the equations for the case of VIs, the case of the instances is similar. Let us assume that the VI enters the focus at the creation time tc and leaves it the demotion time td. In between these times, it\u2019s salience will be:\nS(V, tx) = \u222b tx tc m(t)w(VSF , V )dt (11)\nwhere m(t) is the marking rate of the focus at time t. While the participation of the verb instance in the focus will gradually decrease, its salience will increase throughout its stay in the focus reaching its maximum salience at the moment when it is demoted to the memory:\nSmax(V ) = S(V, td) = \u222b td tc m(t)w(VSF , V )dt (12)\nWhat this formula tells us is that the memorization level is proportional with the time spent in the focus. Action VI are memorized more\n13\nthan attribute assignment VIs8. Action verbs are memorized better when they are not a part of a quick succession of events (when the successors quickly push out the VIs from the focus). Summarization VIs are remembered more strongly than individual events: the Xapagy agent might remember the repeated hammering of a nail, but not the individual act of hammering (see Subsection V-F).\nIn addition to this, the memorization also depends on the current marking rate of the focus. The marking rate is a slowly changing value, and is focus-wide. Verb instances inserted in the focus affect the marking rate not only for themselves, but also for other verb instances before and after them. This way, it is possible that a marking action (such as the cigar smoking at the quote at the beginning of this section) would affect the memorization of an unrelated story line, which, however, share the focus with the marking action.\nThe current version of the Xapagy system uses a heuristic approach for the setting of the marking rate, which, however, appears to be successful in mimicking a wide range of behaviors. The formula is based on an exponential smoothing of the contributions of each inserted VI according to the formula: m\u2032(t) = \u03bbmm(t) + (1\u2212 \u03bbm)mc(V ) Currently, the smoothing factor \u03bbm is set to 0.8. The continuation of the VI to the marking rate is dependent on the source of the VI. To allow for an explicit setting of the marking rate, the CoreDKL contains a special verb [marker] which allows us to artificially increase the marking rate. The currently used values for the marking rate contribution mc(V ) are summarized in the following table:\nnature of V mc(V ) verb instances with the [marker] meta-verb 1.0 witnessed events 0.5 verbalized recall 0.3 non-verbalized recall 0.1\nFuture versions of the Xapagy system will extend on this memorization model. Although it allows us to model explicit marker events, it does not model other aspects of human memory formation (such as the emotion caused by recalling certain experiences, which have not been very memorable when originally witnessed). There is a lot of existing work on human memory formation which can be modeled here - from the impact of levels of neurotransmitters in memorization (e.g. serotonin and dopamine levels), overall fatigue, as well as hard to measure aspects such as \u201cinterest\u201d."}, {"heading": "B. Forgetting", "text": "After being demoted to the memory, the salience of a VI decreases along an exponential decay curve:\nS(V, tx) = \u03bb tx\u2212tdSmax(V ) (13)\nThe salience of a VI will never increase after it leaves the focus. The recall of the VI does not increase its salience: it only creates a new, similar VI which might reinforce its recall (see Case 4 in Section VIII-C).\nFor most situations, however, the main challenge of adequate remembering is not the decreasing salience of the verb instances, but the initialization of the recall, which needs to create an appropriate focus and shadow.\n8But the attribute itself is retained, because that one is dependent on the instance, which might have spent a lot more time in the focus. Thus the Xapagy agent might remember an attribute of the instance, but not when it acquired it - mimicking the limitations of human source memory."}, {"heading": "VII. THE XAPI ABSTRACTION AND REFERENCE RESOLUTION", "text": "The main external means of communication between a Xapagy agent and an external entity (let us say, a human person or another Xapagy agent) is the Xapi pidgin language.\nWhen we refer to an internal element of a Xapagy agent (let us say, the instance of Hector) we need to pass through at least two steps of indirection. If we say \u201cthe trojan warrior\u201d, these words are first mapped into COs by a dictionary, then then two COs are merged together into a single reference CO describing the sentence part. Second, the reference CO must be mapped to an internal instance, through the reference resolution process9. When the agent communicates with the outside world, the indirection levels must be traversed in the opposite order, from instances, to concept overlays and on to words10.\nFigure 6 describes the four operations traversing the two indirection levels.\nWord interpretation is the process which, starting from a list of one or more Xapi words forming a sentence part creates a reference CO (or VO) corresponding to these words. Reference resolution is the process of finding in the focus the instance (or VI) to which the reference CO (or reference VO) refer to. Reference finding is the process of creating a reference CO for a particular instance. Concept verbalization is the process of finding one or more Xapi words, which wen interpreted, will approximate a specific reference CO.\nThe activities on the upward path (reference finding, and concept verbalization) are always performed with the expectation that the generated Xapi text will traverse a downward path in a target agent. The target agent might be identical to the source agent, in case of self-narration. But most typically it is a different agent.\nThis opens an apparently impossible challenge: the target agent might have a different dictionary and different concepts. In the strong philosophical sense there is the impossibility of perfect understanding\n9It is quite possible that future developments in the Xapagy architecture, such as the introduction of word polymorphism would increase the number of indirection levels.\n10Note that not every conceivable concept overlay can be expressed using words, especially if the agent has a limited dictionary. We might be tempted to declare this an example of lingustic relativity, in the interpretation of the Sapir-Whorf hypothesis and its modern revisions. But as here we are talking about a pidgin language artificially designed to have a low representational power, drawing any further conclusions would be circular reasoning.\n14\n[16], but even in a purely technical reading there is a major challenge that an agent can not generate an optimal output unless it knows the dictionary and concepts of the target agents. Although we are not oblivious to these theoretical and technical difficulties, in practice we have adopted a solution which is not very different from what a human might do: perform the upward path with the assumption that he itself is the target, add a safety margin to the reference finding, and, if necessary, restrict the vocabulary to match the vocabulary of the target agent.\nThroughout our discussion below, we will consider the target of the reference to be an instance. Reference to VIs occurs comparatively rarely (in adverbial sentences only) and it is largely analogous to the instance case."}, {"heading": "A. Word interpretation", "text": "Xapi sentence parts are composed of one or more words. These are mapped into COs or VOs by the word interpretation process, some of them being further processed as references to an instance.\nFor the generated COs and VOs we will use the name reference CO/VO if it is used as a reference, template CO/VO if it is used as a template to create a new instance or VI, and attribute CO/VO if it is used to change the attributes of an instance or VI. The word interpretation process, however, is identical for all these cases. The following table shows the ways in which different sentence components are interpreted and how there are going to be further processed.\nSentence part Interpreted as Next step Verb template VO VI creation the SubI reference CO reference resolution a/an SubI template CO instance creation the ObjI reference CO reference resolution a/an ObjI template CO instance creation SubVI reference VO VI reference resolution ObjCO attribute CO impact-add as attributes ObjVO attribute VO impact-add as VI attributes\nFor example, in the sentence: 1 The tall red man / is-a / angry.\nthe subject part \u201cthe tall red man\u201d is a SubI, so will be first mapped to a reference CO of the specified attributes, then the reference resolved to find an instance which matches those attributes. The ObjCO part \u201cangry\u201d will be similarly mapped to an attribute CO, but it will not be further resolved - this CO will be used to add to the subject instance, as a side effect of the verb [is-a]. The word \u201cis-a\u201d will be interpreted as a template VO and will be used to create the VI for this sentence.\nIn the following, we will present a discussion of the challenges of the word resolution, and the current set of compromises and solutions adopted by the Xapagy system.\nThe current version of the Xapagy system performs word interpretation by direct dictionary lookup followed by cross referenced impacted addition. The dictionary lookup in the current version is context independent11 - the same word will create the same CO independently of which sentence part it occurs in or the current content of the focus and shadows.\nLet us explain the rationality behind the cross referenced impacted addition method. Naturally, the simplest solution would be to simply sum the COs mapped to the different words in the dictionary. The\n11More exactly, the Xapagy system has in place the architecture to support context dependency: however, in our current work, we did not found the need or the representational advantages for it.\nproblem appears when these overlays have elements which have negative impacts with each other.\nLet us see an example. The word warrior, maps to a CO including the concept [human], which in its turn, impacts [alive]. So if we have a sentence such as:\n1 A warrior / exists.\nwhat the agent will model is a warrior who is alive. If we say however:\n1 The dead warrior / is-a / \"Hector\".\nwhat we mean is a dead warrior. We do not want the impacts to cancel each other out: the [alive] impact of the warrior word needs to be eliminated before it even appears on the overlay."}, {"heading": "B. Reference resolution", "text": "Reference resolution finds an instance in the focus which, in a way, matches the reference CO. In Xapagy, the resolution process has two steps: \u2022 determine in which scene the reference resolution would take\nplace \u2022 determine which instance in the specified scene is the target of\nthe reference\nScene resolution: the agent maintains a current scene which is set explicitly by the [is-current-scene] and [is-only-scene] the verbs. The current scene is used for the resolution of all primary sentences.\nFor the quote component of the quotation sentences, the scene used to resolve the references is the embedded sentence of the instance is obtained from the ObjI part in the inquit, which first, in itself, needs to be resolved within a virtual scene composed of the other scenes. Instance resolution: in the Xapagy system is based on the elimination of the alternatives. The reference CO must be chosen in such a way as to mismatch all the candidate instances which it does not refer to. The reference will be resolved to the strongest instance in the focus which it does not mismatch.\nA reference CO CR is mismatched with an instance I if: \u2022 it has a highly specific concept not present in the attributes of I \u2022 it has concepts which have a negative impact on the attributes\nof I The mismatch between CR and the attributes C of instance I can\nbe calculated with the following formula:\nmismatch(CR, C) =\nmax c\u2208CR\n( en(c, CR)\u2212 w \u00b7 en(c, C)\narea(c) ) \u2212 \u2211 c\u2208CR min ( impact(c, C), 0 ) (14)\nThe instances which have a mismatch higher than a predefined threshold will be eliminated from the reference competition. It is not necessary to reduce the field of candidates to zero: if the field still has several candidates, the one with the highest current participation in the focus will be chosen as the referred instance. This technique allows for recentness based reference resolution:\n1 \"Achilles\" / is-a / warrior. 2 He / is-a / trojan.\nwhere the word \u201che\u201d is dictionary mapped to [human male]. [human male] will not mismatch with neither Achilles, nor Hector or Ulysses. In the current context however, the newly referred instance Achilles will be the strongest instance in the focus, thus the reference will be resolved to him.\n15\nSuch a reference becomes more and more ambiguous as the distance between the last reference to Achilles and the use of the word \u201che\u201d is increasing. When we use the referrence \u201cAchilles\u201d, however, we use the highly specific concept [\u2018\u2018Achilles\u2019\u2019] which is only contained by the instance Achilles. This reference is unambiguous, because it will leave only one candidate (as long as there is only one person named Achilles in the story - for Ajax however, we need to use \u201cgreat Ajax\u201d and \u201clesser Ajax\u201d).\nAn interesting side-effect of the mismatch function allows reference through negation:\n1 The not-trojan warrior / hits / \"Hector\".\n1) Special resolution rules for quotations: As we have seen, the quote statements trigger special resolution rules. The elements of the inquit statement are resolved in the current scene, while the parts of the quote are resolved in the scene specified in the inquit.\nIn quoted statements there are some special resolution rules corresponding to pronouns. These are special words, which, despite the fact that they are in the quote, they resolve in the scene of the inquit:\n- [I] or [me] in the quote resolves back to the inquit subject. - [Thou] in the quote resolves to the strongest instance in the\nscene which is not group nor the inquit subject. - [You] in the quote resolves to the strongest instance in the scene\nwhich is not the inquit subject (it can be a group). - [We] in the quote resolves to the strongest group in the scene\nwhich includes the inquit subject."}, {"heading": "C. Reference finding", "text": "Reference finding is the process of finding a reference CO CR for a specific instance I. As we discussed in the introduction of this section, the Xapagy system assumes that the target agent to be the same as the source agent. However, additional criteria apply to the choice of the reference, and this criteria normally includes a preference against ambiguity in reference12. One way to trivially achieve a reference is to refer to instances with their complete set of attributes:\n1 The greek warrior man \"Achilles\" / hits / 2 the trojan warrior man \"Hector\".\nA better choice is to find a minimal reference CO, that is, an overlay which has the smallest energy but which eliminates all the other alternatives. As the proper names have the smallest area, this almost always means referring by proper name:\n1 \"Achilles\" / hits / \"Hector\".\nThis reference mode, repeated over the complete course of the story appears boring to a human reader. The current implementation allows us to install a preference model for the chosen references. This can be used to implement:\n\u2022 prefer the use of pronouns (he, she, it) whenever they resolve correctly \u2022 avoid to refer with anything other than the pronoun I, you and thou in all occasions where these can be applied (i.e. the agent should not talk about itself in third person). \u2022 the Homeric approach of using of a proper name with a returning epithet: swift-footed Achilles, man-killing Hector. \u2022 preference for a certain type of attributes (e.g. nationality, age and so on).\nHowever, the current version of Xapagy does not contain support for automatic setting or adjustment of these values.\n12We choose either references which mismatch against all the instances in the scene except the referred item, or find a large gap between the relative focus participation of the referred instance and other candidates.\nD. Verbalization\nThe last step of our process involves the problem of selecting a collection of words from the dictionary such that they express the reference CO. Not all the possible COs can be expressed with words. If the CO we try to express is referring to an instance whose attributes have been acquired from Xapi, then, necessarily, the complete set of attributes can be expressed with words in the dictionary. But even than, the concepts chosen in the reference CO might not be expressible with words. Let us consider an agent which does not have a word for \u201cmale\u201d, and let us assume that the reference finding would choose [male trojan] as a way to refer to Hector. The agent might try to approximate this with \u201ctrojan man\u201d, but that is overreaching, as it will be interpreted as [male human trojan]13.\nThe current approach is to generate a series of candidate word combinations (limited to a maximum of two words) and then calculate the distance between the CO generated by these through word interpretation and the original CO we want to express. The distance calculation is based on two penalty values: \u2022 the penalty for the unexpressed content (the part of the overlay\nwhich is not conveyed by words) PUC = f(Cintended\u2212Cwords) \u2022 the penalty for the additional content (the additional concept\nconveyed by the words but not part of the recalled overlay) PAC = f(Cwords \u2212 Cintended)\nThe set of words to be chosen are such that they minimize PUC + \u03b1PAC where \u03b1 is the unintended meaning amplification ratio (which can be chosen freely but in our experiments we set it to 10.0)."}, {"heading": "VIII. NARRATIVE REASONING IN XAPAGY", "text": "It is finally time to integrate the components discussed throughout this paper and describe how the architecture of the Xapagy system enables narrative reasoning. We start by describing the common framework of all narrative reasoning techniques, the headless shadows (Subsection VIII-A).\nThen, we dedicate a subsection each to the following aspects of narrative reasoning techniques:\n- Story following (Subsection VIII-B): predicting ongoing events, expressing surprise about events and filling in missing events. - Story creation (Subsection VIII-C): creating new stories through recall or confabulation (or various shades in between). - Divagations (Subsection VIII-D): creating VIs which do not advance the story line but can be necessary (such as the introduction of instances) or helpful (such as elaborating on instances or justifying VIs). - Story steering (Subsection VIII-E) the means through which the story creation process can be guided either by the agent itself or external agents. This includes the recall or confabulation initiation process, the use of questions, as well as, in the extreme case, of collaborative story telling."}, {"heading": "A. Headless shadows", "text": "All the narrative reasoning techniques rely on the mechanism of headless shadows (HLS), collections of related and aligned inmemory VIs which are not paired with any current in-focus VI. Like shadows, HLS-s are maintained on an ongoing basis through a collection of SAs and DAs. All the narrative reasoning models can be understood in terms of a single procedural pattern: \u2022 maintain a collection of HLSs reflecting the current state of the\nnarration\n13It is obvious that the reference finding and concept verbalization components will need to communicate in some way. This communication does not exist in the current version of Xapagy.\n16\n\u2022 choose an HLS for instantiation based on a specific criteria \u2022 instantiate the HLS by creating a new VI \u2022 insert the new VI to the focus and transform the HLS into its\nregular shadow \u2022 verbalize the VI The difference between the narrative reasoning methods stems from whether they skip one or more steps of the procedure, as well as the different criteria they might use to choose the HLS for instantiation.\nHLSs can be created in several ways. The most direct model is the continuation HLS, which are created by the clustering of the successors of verb instances in regular shadows.\nFor illustrative purposes we will describe the HLS formation as a step-by-step process involving discrete steps. In practice, this is a continuous, ongoing activity performed by DAs.\nLet us consider the example described in Figure 7. In the first step, the agent maintains three VIs in the focus, with their respective shadows (the rightmost VI is the most recent one). The size of the disk denotes the participation of a given verb instance in the focus or shadow, respectively. The focus is shadowed by VIs from three different stories. The VIs linked by successor relationships from the shadows create a continuation pool.\nIn the second step, the elements of the continuation pool are clustered in continuation HLSs. The HLS contains a template of the possible verb instance it can instantiate. VIs from the continuation pool lend support to certain HLSs based on their match with the template.\nMany of the DA\u2019s for the maintenance of shadows also operate for HLSs (for instance, story consistency). However, the low level details of the SAs and DAs performing the HLS maintenance, as well as the discussion of boundary cases such as what happens if the shadow predicts the apparition of a new instance, is beyond the scope of this paper."}, {"heading": "B. Story following: Predicting ongoing events, expectation fulfillment and surprise", "text": "In this simplest narrative reasoning method the agent is a passive observer of the ongoing flow of events.\nWhen a new VI is added to the focus from external sources (witnessing, reading, conversation), it will be matched against the continuation HLSs. If there is a match, the HLS will become the shadow of the new VI.\nThis activity is an SA, and in its turn will trigger changes both in the other shadows and the continuation HLSs. The story consistency DA, for instance, will ensure that the shadow components which predicted the right continuation will be reinforced and HLSs which are compatible with the new HLS will be reinforced. New HLSs are calculated starting from the current focus and shadow, while those which became incompatible with the current status will be lowered in support or even discarded.\nWe introduce two metrics with regards to the agent\u2019s perception of the incoming event: expectation fulfillment and surprise.\n- The expectation fulfillment is the support of the HLS matched to the incoming VI (or zero is no such HLS has been found). If there is no match, this value is zero. We say that an event was expected if there was a HLS with a strong support matching it, and unexpected otherwise. - The surprise is defined as the magnitude of change in the continuation pool, triggered by the event (according to an appropriate distance metric defined in the continuation pool). With this definition, even the least surprising event will have a non-zero value, as the continuation HLSs will adjust, extending themselves into the future. For purposes of analysis, we can define the normalized surprise, which is the surprise of the actually happened event minus the minimum possible surprise.\nExpectation fulfillment and surprise are related metrics, but they can not be trivially transformed into each other. For many situations, the most expected event will generate the least surprise. However, we can have highly unexpected events, which do not create a surprise. Let us consider a scenario in which Hector, in the heat of the battle, stops to wipe his brow. This is unexpected: none of the HLSs could have predicted this. However, it has little impact on the predictions, so it is not surprising. Surprising events trigger a change in the continuations, as they determine the future flow of the story. The death of the Hector is not unexpected in the context of a duel. It has however a large surprise value, as it causes the Xapagy agent to completely change the continuation pool, as the continuations involving further actions by Hector will be removed."}, {"heading": "C. Story creation: recalling and confabulating", "text": "Recalling a story in Xapagy implies maintaining the HLSs, selecting an appropriate continuation HLS, instantiating it and inserting\n17\nit into the focus. We call this operation a recall if the sequence of instantiated VIs closely resemble a previously experienced story. We call it confabulation if the new story does not resemble any previously declared story. Perfect recall can be achieved in the Xapagy system only under very strict, not naturally occurring conditions. On the other hand, there are many fine gradations between perfect recall and freely associative confabulations, most of these mimicking, in a recognizable way, human behaviors.\nWe will illustrate the range of possible recall / confabulation behaviors through a series of cases. These cases assume that the agent is already in recall mode, and the appropriate initalizations have been performed.\nDue to space limitations, we need to describe each of these cases in a cursory manner. Their presentation, however, is necessary to understand the range of functionality which can be achieved through the recall mechanism of the Xapagy system.\nTo illustrate these cases, we will rely on a series of graphs. These graphs are simplifications, they are not outputs of actual runs. For the reader to get a good feel of what is presented and what is suppressed in these graphs, we need some introductory definitions.\nWe call a story line a collection of VIs which have been directly connected through succession links. One can, of course, envision the lifespan of the Xapagy agent as a whole continuous story line. In practice, however, long temporal spans, the replacement of the instances and scenes segments the agent\u2019s episodic memory into distincts episodes. Note, however, that the story lines are just an ascriptive definition of certain subsets of the episodic memory, which we make for easier readability (in this case, with graphs). The VIs are not labeled with story line identifiers.\nTo define a recall scenario, we assume that a desire to reproduce a specific story line from the past, which we will call the dominant story line. Other story lines which enter into consideration during the recall are called foreign story lines. As we move from simple recall towards confabulation, the difference between the dominant and foreign story lines becomes increasingly blurred.\nLet us now define the format of the figuress we shall use. The figures describe the continuation HLSs, with their instantiation template (as a circle drawn with dotted line). The size of the instantiation template circle illustrates the total support of the HLS. The HLSs are represented by dark gray rectangles. Inside the rectangles, we have disks representing support from VIs in the episodic memory: the size of the disks illustrates the strength of the support. Some inmemory VIs can support more than one HLS; we only show them in the HLS which they support the most strongly. Support VIs coming from different story lines will be colored or marked differently. VIs marked with solid colors have been created from external sources (reading, witnessing, conversation), those marked with a symbol (\u2295 or \u2297) from internal sources (recall or confabulation). The dominant story line will be denoted with white disks. We show the succession links between the support VIs with arrows. In practice, a VI can have several succession links, we only show the strongest one.\nSome figures will also contain the VIs in the focus, with their shadows. We do not represent instances in the focus and nor their shadows.\nFigure 8 illustrates all these drawing conventions.\n1) Case 1: Pure recall of a witnessed story: Pure recall is the accurate reproduction of the events in a story line, un-contaminated by the influence of other story lines in the episodic memory. This can happen if each HLS is supported by a single VI, from the dominant story line (we call this the purity condition).\nFor a practical agent, the purity condition is difficult to achieve. The \u201cmatching the head\u201d and \u201cmatching the body\u201d DAs will bring\nin shadows from any previous VI with a similar VO. The more experience an agent has in the specific domain, the more likely is that its shadows during recall will contain elements outside the dominant line. These shadow elements will send their successors into the continuation pool, and some of them will support some of the HLSs.\nThe purity condition can be maintained if either: \u2022 the agent is completely clueless in the domain (it has no previous\nexperience with any of the the concepts appearing in the recalled story line)14. \u2022 the story is so surprising that none of the other remembered stories can support the recall\nFigure 9 shows the pure recall scenario. The HLSs, which are selected and instantiated from left-to-right, exactly mirror the VIs in the original story line. The purity condition is satisfied as each HLS is only supported by a VI from the recalled story line.\nWe emphasize that the purity condition applies only to the HLSs. The shadows and even the continuation pool can have some elements outside the dominant story line, as long as they do not reach the threshold to enter the HLSs.\n2) Case 2: Competitive recall: As we have seen, the purity condition can be satisfied only under very restrictive conditions. In addition to the dominant story line a number of foreign story lines will (a) provide support to the HLSs generated by the dominant story line and/or (b) create foreign HLS-s, which are not supported by the dominant story line.\nWe say that the dominant story line competes for the recall with the other story lines. The dominant story wins the competition if the resulting recall is identical to the one from a pure recall. The dominant story looses to the other stories every time the recall is distorted from the pure recall. For Case 2 we assume that these losses are localized: the recalled story will still largely follow the dominant story line.\nThe dominant story can loose out to the foreign story lines in the following ways:\nHLS distortion: happens if an HLS, created by the dominant story line is supported by one or more foreign VIs.\nLet us assume that the agent tries to recall Homer\u2019s Iliad, where Hector was killed with a spear to his throat. But the agent has also seen the Hollywood movie Troy where Hector is killed with a sword to the chest. These two events are close enough to support the same HLS, but the different supports are not identical and the recalled verb instance might be different from the one in the dominant story (the Iliad in this case).\nSkipping story elements: Let us assume that the dominant story line had generated four HLSs, which in a pure recall would be recalled in the order A \u2192 B \u2192 C \u2192 D (see Figure 10). However, B and D are strongly supported by a foreign story line, while C is not. Under these conditions, it is possible that the recall process would skik the poorly supported C, making the recall A \u2192 B \u2192 D.\n14We must mention here that in the current version of the Xapagy agent it is possible to have conceptual knowledge without associated episodic knowledge. It is possible, for instance, for an agent to have a model for the verb \u201ckill\u201d without having witnessed, heard, or read about any story involving killing.\nAn of course, in philosophy, psychology and linguistics the existence of concepts predating experience is about the largest cans of worms which one can open.\nIt is not our intention to make a statement with this. In the current version of the Xapagy system this state of affairs is simply an artifact of the fact that we do not yet have in place a mechanism for concept learning.\n18\nInserting foreign story elements: similarly to the previous case, the recall inserts a story element not present in the dominant story line, but strongly supported by one or more foreign story lines.\n3) Case 3: Recalling frequent events: This case considers the challenge to recall one specific dominant story line from a collection of near identical story lines, such are recalling what one had for breakfast on a certain day. The psychology literature on autobio-\ngraphical memory frequently calls this type of memories repisodes. The phenomena has been identified and well documented since the 1980s [8] and still under active research [4]. This is a well known challenge for the human memory, as the similarity between the events makes it more difficult to recall one particular event in an individual way.\nLet us assume that the agent experienced a number of \u201cbreakfast\u201d stories, involving either \u201cbread-eggs-coffee\u201d or \u201cbread-sausagecoffee\u201d type of breakfasts. Naturally, these story lines do not float in the empty space: they are embedded in the particular story line of the given day which includes what happened before, during and after the breakfast in the specific day.\nThe support structure of the HLSs this case is shown in Figure 11. HLSs for each typical breakfast action will be created. Each will be supported by large number of VIs, due to the large number of nearidentical foreign story lines. There will be little difference between their relative strengths and each of the supports will be small (due to the negative feedback mechanism in the match the shadow head DA). Thus, we have a variation on the competitive recall, with many weak, evenly matched competitors.\nAccurate recall under these conditions can only be achieved if (a) there were some differentiating factors for the specific episode and (b) these differentiating factors can be recreated during recall. The flip side of this, however, is that truly repetitive activities, with\n19\nno distinguishing factors, can not be accurately recalled for specific cases. If an agent had alternatively eaten sausage and eggs, with no other distinguishing factors in the story of the morning, it will not be able to recall what it did exactly in a specific day.\n4) Case 4: Self shadowing recall. Drift: In the previous case, we considered the case where the agent had witnessed many highly similar stories. This case deals with a variant of this case, where the agent had witnessed a story only once (and the story can be highly specific), but recalled it many times.\nThe Xapagy system differentiates between direct experience, hearsay and recall through the circumstances of an event (the scene, predecessors, successor, whether it is the quote part of a quotation statement). We can, for instance recall seeing a movie where Homer is narrating the Iliad. The story of the Iliad will be encoded through a two level quoting. Nevertheless, even in this case, the narrated Iliad forms a valid story, with the succession links chaining through the elements of the Iliad\u2019s story line (with separate links chaining through Homer\u2019s narration, and our watching actions, respectively).\nThese narrations are clearly separated: it is not the case that the Xapagy system cannot recall the source of the information provided that it is correctly initialized to recall the watching scene15.\nDespite the ability to explicitly recall the source of a specific story, the foreign story lines brought in by the DAs maintaining shadows and the HLSs will contain all types of verb instances both externally and internally generated, directly witnessed, read or heard. This is a necessary and useful part of the system - for example, allows a\n15Although an accurate recall for the whole chain might be difficult to achieve, as the watching the television activity most definitely fall under the category of \u201crepisodes\u201d, creating the situation in Case 3.\nXapagy agent to make correct predictions when witnessing real world situations about which previously it had only \u201cbook knowledge\u201d.\nThe phenomena of self-shadowing and story drift is an inevitable consequence of this otherwise useful functionality.\nFigure 12 illustrates the situation. The agent tries to recall the dominant story, which, we assume, was directly witnessed. The previous recalls are marked with \u2295 and \u2297 symbols. As these recalls are necessarily very close to the original story, they will inevitably support the specific HLSs. We call this phenomena self-shadowing.\nThis can have both positive and negative consequences. On the positive side, accurate recalls reinforce the HLSs of the dominant story, and make it less likely that foreign stories can compete with the recall. This is especially important if the agent recalls events for which the salience had naturally decayed.\nWith this mechanism, the Xapagy system automatically exhibits learning through repetition (it is a future task to investigate whether such observations about human learning such as the Eberhardt learning curve or Paul Pimsleur\u2019s spaced repetition technique can be automatically mimicked by the Xapagy agent).\nLet us now consider, however, the case when the recalls have not been fully accurate. If the recalls differ from the dominant story line in a consistent way (for instance, by regularly skipping some events, the situation in Figure 12) there will be a strong likelihood that a specific recall will follow not the original story line but the \u201cusual way of recalling it\u201d. This phenomena, which we will call story drift, mimics suppressed memories and self-deception in humans. A closely related situation is when the shadowing stories are not coming from internal recalls, but from external retelling of the same story in modified form. This might mimic human behavior where, for instance, excessive external praise might modify the person\u2019s own recollection of certain stories in the past.\nOne would hope, for instance that humans can simply filter out internally generated stories to affect the recall - but apparently humans do not have a build in filter for this purpose.\nA very famous example of self shadowing is the case of Nixon\u2019s counsel John Dean analyzed by Neisser [18]. In several cases where Dean had recalled with high confidence details of meetings with Nixon, it turns out that what he had recalled was heavily modified by his fantasies and modified recalls of the event (both omission of events and insertion of events have been noted). It was also found that at its testimony, the main source of rememberence is not the original events but the statement about it he have a couple of days before.\n5) Case 5: Constrained recall: The cases up to this point made the assumption that the goal is the accurate recall of the dominant story line. Case 5 deals with the case when the objective is to recall the dominant story line subject to a number of constraints. One possible reason to do this is to adapt the story to the preferences of the audience. We can use constraints to produce a bowdlerized version of a story, such as a children\u2019s version of the Iliad would not have Achilles kill Hector, only \u201cdefeat\u201d him.\nThe current version of the Xapagy system implements constraints by adding an additional filtering layer, which changes the overall support of the HLSs16.\nIf we are in a situation of pure recall, the only possible impact of the constraints is to remove certain events from the story line. In the case of competitive recall, however, the introduction of constraints can lead to the replacement or even insertion of new VIs in the recall as it locally changes the balance of power between the dominant and the competing foreign story lines.\n16Future versions might operate at the level of individual supports inside the HLSs\n20\nFigure 13 shows such an example. At the moment represented in the figure, 4 continuation HLSs are maintained. The chain of a future recall will be A \u2192 B \u2192 D, correctly following the dominant story line. However, the application of the constraint filter removes A from consideration, which brings into the recall HLS B, supported only by the foreign story line, which would not have been considered otherwise. After this divergence, however, the recalled story returns to the dominant story line, so the recall will be A \u2192 C \u2192 D.\n6) Case 6: Leading questions: Case 6 deals with the situation where the recall deviates from the dominant story line in response to specific statements coming from an external agent. We call this case \u201cleading questions\u201d due to the obvious similarity to the influencing the recall through leading questions as it might happen in a courtroom. However, the external text does not necessarily have to be a question.\nFor an external statement to affect the recall, it is necessary for the VIs of the recall and the VIs obtained from the conversation partners to share the same scene. Although the design of the Xapagy system in this respect is in flux, we assume that such a model would indeed be the default. The implication is that the agent would maintain only one instance of Hector and Achilles, involving both the VIs from its own recall and the VIs received from the conversation17.\nFigure 14 shows an example of how a leading statement can affect the recall. In the right side of the figure, we see the focus, with the VIs in white being previously recalled, while the VI in black being inserted externally, through a conversation. All the VIs will create support for various HLSs. An inserted statement does not necessarily change the flow of the recall: it might, for instance, support the same dominant story line, or the inserted HLS might support an HLS which has very low total support which will never be chosen for instantiation.\nHowever, an external statement can change the flow of the recall if it supports an HLS which is already in close competition for the continuation, i.e. it is supported by other story lines in the agent\u2019s episodic memory. Thus, a successful leading statement (or question)\n17The Xapagy architecture also allows a scenario in which the agent maintains two different instances in two different scenes. We can also envision linking these two instances with a special identity (conversational identity). This is consistent with the practice of the rest of the Xapagy system where we are using similar identity relations to maintain, for instance, somatic identity between instances undergoing change.\nis one which is based on existing tendencies of the agent (e.g. stereotypical continuations of certain stories).\nIn the figure, the inserted statement will increase the support of HLS B (which is also supported, albeit weakly, by the dominant story line). This additional support changes the flow of the recall from A \u2192 C \u2192 D to B \u2192 C \u2192 D.\n7) Case 7: Story line jumping: Up to this point we assumed that the recall follows a single dominant story line, with potentially minor disturbances or deviations. Case 7 considers the situation where the agent switches the dominant story line, and starts to follow a new story line. For instance, an agent might follow the Iliad up to the point where Achilles kills Hector, then switch to the story of King Arthur and follow a story line where Achilles has a illicit love affair with the wife of Menelaus (that is, with Helen).\nThe switching of the story line maintains the scenes and instances. However, the shadows will be gradually taken over by the instances from the newly followed story line. The recall will still be about a warrior called Achilles - however, the shadow of the instance Achilles will be dominated by the in-memory instance of Lancelot.\nStory line jumping is a natural extension of competitive recall. In Case 2 we considered situations where only a small number of additional HLSs have been received from the foreign story line before returning to the dominant story line.\nIn the current version of Xapagy, if the recall follows at least twothree HLSs from the foreign story line, the dominance will inevitably jump to the foreign story line, as the story consistency DA will reinforce the new story line. In our example, it is enough for the story line to shift from the Iliad to the Knights of the Round Table for several VIs to establish the Arthurian epic as the new dominant story line. This does not satisfactorily mimic the human story telling, which allows for much longer detours before returning to a main story line. In functionality which is currently under implementation, the summarization VIs would provide a greater stability of the story line over longer stretches of time. This would allow the recall to include relatively long elements of the foreign story, without abandoning the current story line. For example, with this functionality we would be able to insert a love affair between Achilles and Helen while still remaining in the general outlines of the Iliad.\n8) Case 8: Random wandering: In our last considered case, the recall performs frequent story line jumps. In the extreme version of this case, the dominant story line can be different for every recalled VI (a situation illustrated in Figure 16). The recalled story will resemble no witnessed, heard or read story, although the individual VIs will still be instantiated based on an HLSs supported by VIs from the episodic memory. The agent can not recall a VI of \u201ckissing\u201d, if it\n21\nhad not witnessed, heard or read about this action. However, HLS might have support coming from multiple story lines, with the various verbs averaging out in the instantiation template. Thus the recalled VI might not be an exact match of any previously encountered VI.\nCase 8 can be used to mimic daydreaming and the creative process of original story writing. On the pathological side, it can mimic fantasy prone personality (FPP), Ganser\u2019s syndrome and other related disorders.\nThe Xapagy agent, in its default settings, will not perform such a random walk. However, its parameters can be tuned to random walk by:\n\u2022 An inconsistent, possibly time-variable constraint filter. \u2022 Lowering of the strength of the story consistency DA in the\nshadows. \u2022 Introducing a counter-consistency DA, operating on the shadows\nand HLSs which reduce the support from story lines which have been recently followed."}, {"heading": "D. Divagations", "text": "Hence the risk of what I would call Salgarism. When characters in Emilio Salgari\u2019s adventures escape through the forest, pursued by enemies, and stumble over a baobab root, the narrator suspends the action in order to give us a botany lesson on the baobab. Now this has become topos, charming, like the defects of those we have loved; but it should not be done.\n(\u201cThe title and the meaning [of the Name of the Rose]\u201d by Umberto Eco)\nWe will group under the term divagations all the recalled VIs which do not directly advance the story. The agent performs a divagation during recall if it does not instantiate a continuation HLS, instead it creates a VI through different means. The term divagation is not used in a pejorative sense: many divagations are necessary to maintain the flow of the recalled story, many of them are important in communication to allow the communication partner to create an accurate match of the recalled story18. We will consider three types of divagations:\n\u2022 instance creation and initial characterization \u2022 elaborating on instances \u2022 justifying actions\nIn the following we shall describe these divagations in more detail.\n1) Instance creation and initial characterization: A recalled story involves not only actions but also active and passive participants (warriors, swords, shields). We need to create instances in the current story for each of them, and for this we need explicit, [create-instance] type VIs.\nThe creation of the instances is mandatory: before the recalled story can first instantiate a VI using that instance, the instance must exist in the focus, and it needs to have a shadow which connects to the right HLS. Even if we recall the dominant story exactly, the instance creation still must be handled separately, because the [create-instance] VIs are not action VIs, they will not be instantiated through continuation HLSs19.\nThe agent has considerable freedom with respect to when to create the instances, and what attributes will the instance initially receive. The agent can follow several strategies. The current implementation of the Xapagy system uses a just-in-time strategy: the continuation HLS is chosen and if one of the parts of its template maps to a non-existent instance, the instance is created before the HLS is instantiated.\nAn alternative approach (not currently implemented in the Xapagy system) would parse the current continuation chain, collect all the necessary instances, and instantiate them in a single burst of instantiation. As it happens, Homer uses an extreme variant of this approach: in the \u201ccatalogue of the ships\u201d in the second book of the Iliad he lists\n18This applies both to real time, interactive communication, as well as creating stories for later reading.\n19Except in cases where the instance has been created through an action: i.e. it was made, born, appeared or it was created as a result of a change operation\n22\nall the 29 contingents of the Greeks led by 46 captains, introducing all the Greek characters of the epic at its very beginning.\nA newly introduced instance must be immediately characterized with some attributes in order to be able to play its role in the recalled story. The memory instances shadowing the newly created instance have all the attributes they acquired up to the moment when they left the focus. It is as if the agent would know, at the first word of the retelling of the Iliad, all the attributes of, say, Ulysses (which, in fact, the human narrator does know). Only a subset of these attributes need to be assigned to the newly created instance immediately after creation. The Xapagy agent considers three criteria in the assignment of the initial attributes: (a) referential uniqueness, (b) conveying the \u201cessence\u201d and (c) shadow uniqueness.\n(a) The referential uniqueness criteria requires that the newly introduced instance should have enough attributes to be uniquely referrable in the focus. The proper noun (if there is one) is a particularly good choice:\n1 Scene / create-instance / \"Ulysses\".\nbut other choices are also good as long as they make the reference unique:\n1 A crafty warrior / exists. 2 An ithacan warrior / exists.\nThe Xapagy agent must satisfy the referential uniqueness criteria if the story is verbalized, because in the Xapi form of the story, an instance without referential uniqueness can not be referred again. However, if the agent recalls a story internally, without verbalizing it, it is sufficient that the shadow of the instance to be sufficiently distinct, as that is the way in which the HLSs refer back to instances.\n(b) Conveying the \u201cessence\u201d. When introducing a new entity in natural language, we usually expect the narrator to make a characterization which, in some sense, conveys the \u201cessence\u201d of the entity. We can find examples of literary works, where this essence is not conveyed directly. Thomas Carlyle noted that his wife has read the poem Sordello by Robert Browning and had not been able to tell whether Sordello was a man, a city or a book. Nevertheless, most stories explicitly convey this meaning.\nThe current version of Xapagy can convey the \u201cessence\u201d by requiring that an instance is characterized by at least one concept near the \u201cbasic\u201d level of the concept hierarchy (in the sense described in Rosch et. al. [23]). In Xapagy, these are the concepts with an area close to 1.0.\nFor instance, saying that Ulysses is a man (area = 1.0) or that he is a warrior (area = 0.8) will satisfy the criteria. However, saying that he is alive (area = 5.0) is too wide, while simply assigning a narrow concept such as a proper name will also not be sufficient (e.g. [\u2018\u2018Ulysses\u2019\u2019] has an area 0.05).\nIt is interesting to observe that the referential uniqueness criteria favors concepts with a small area, while the essence criteria favors concepts of a specific area (around 1.0).\n(c) Shadow uniqueness criteria. For a story recall in progress, the shadow of the instances provide the link between the entities of the recalled story and the story lines which generated it. In principle, we would desire a unique mapping: a recalled instance must have shadows which contain exactly one instance for each of the competing story lines. This means, as well, that the shadow must be unique: it must be different from all the other current shadows.\nFrom the point of view of characterization, the shadow uniqueness criteria becomes an issue because there is an interrelationship\nbetween the attributes of the instance and the shadow: adding an attribute to the instance will implicitly change the shadow as well (even if the attribute came from the shadow (for instance, through the matching the head DA).\n2) Elaborating on instances: Elaborating on instances is the divagation through which an agent, instead of recalling action verbs which further the story, recalls is-a type VIs which add attributes to various instances in the focus.\nAs we have seen, a certain number of attributes must be assigned to the instance at its creation. Further attributes can be brought in later.\nThe current implementation works as follows. The system creates a number of elaboration HLSs, each containing an instance and an attribute, chosen from those attributes of the shadow components which do not already exist in the instance. The instantiation of such an HLS will generate a VI of type I / is-a / C.\nThe elaboration HLSs compete with the continuation HLSs and the other HLS types for the right to provide the next VI. The weight of the elaboration HLSs in this competition is affected the the following factors: \u2022 Elaboration preference: a continuous, slowly changing weight-\ning factor which scales the weight of each elaboration HLS. \u2022 Gradient: describes the difference between the attributes of\nthe shadow and the instance. Each instantiated elaboration brings into the instance attributes present in the shadow, thus diminishing the gradient. \u2022 Saturation: the weight of further elaborations is reduced as the number of attributes grow. \u2022 Momentum: it is desirable to cluster elaborations in short bursts of elaborations for a unique instance. If a certain elaboration HLS had been chosen for instantiation, it creates a short term increase in the preference for elaboration HLSs for the same instance. \u2022 External attribute preferences: an externally configured concept overlay provides a weighting factor of which concepts are preferred to be elaborated upon. This can not bring in atributes which do not exist in the shadow, but can suppress those which are preferred to be brought into the attributes of the current instance.\n3) Justifying actions: Over time, the existence of verb instances in the memory of the agent generate cloud relationships among the concepts and the verbs. A cloud, for instance, describes the likely set of attributes of an instance which is the subject of a particular verb. For instance, warriors are expected to strike their opponents, while we would not expect a basket to do the same.\nJustification is not mandatory. There is nothing to prevent an agent from instantiating a verb instance whose parts are not justified.\nIn some cases no justification is possible. An example is the wolf in the Little Red Riding Hood story: none of the known attributes of the wolf are compatible with talking - yet this does not prevent the narrative reasoning over the story."}, {"heading": "E. Story steering", "text": "1) Initialization of the recall: In the Xapagy system there are no specific markers of the beginning or the end of a story, nor a \u201cname\u201d of a story which allows it to separate from the remainder of the memory. If we want to trigger the recall of a specific story, we need to externally create an environment in which the recall can be started.\nThe current version of the Xapagy system uses triggering by initial condition - it requires the establishment of the initial condition of the story in order to start the recall.\n23\n1 Troy / is-only-scene. 2 A \"Hector\" / is-a / trojan warrior. 3 An \"Achilles\" / is-a / greek warrior. 4 \"Hector\" / hits / \"Achilles\". 5 Scene / recall narrate.\nThe first three lines establish a focus which contains Troy as the scene and establishes the presence of Hector and Achilles in the scene. The fourth line adds an action verb which will have continuations20\nIn line 5, the [recall] verb switches the Xapagy agent into recall mode. In this mode, the agent, instead of expecting VIs from outside observations, it will generate them internally. The recall mode terminates when the agent has decided that there is no sufficiently supported HLS to instantiate next. Whether this can ever happen, depends on the thresholds chosen and the parametrization of the HLS creation. For some parameter combinations, the agent will jump from one recalled story to another or to confabulate indefinitely.\nThe focus at the moment of starting the recall determines not only the first recalled VI, but the subsequent shape of the recall as well. If we want the agent to accurately recall a specific story, we need to initialize the agent with the most specific components, and parametrize the shadow maintenance processes to favor the strongest component. Otherwise, the shadows will contain elements from other stories, which then can shape the recalled narrative - or even cause it to divert to a different story line altogether.\n2) Story line sharpening: is a technique through which during a competitive recall, we increase the lead of the dominant story line in the shadows and the HLSs. Story line sharpening is especially important when we need to choose between story lines whihc evolve in parallel but diverge in the middle of the story.\nLet us consider the example of Hector again. As we have shown, we can consider: \u2022 Hector the trojan warrior from the Iliad of Homer \u2022 Hector the quantum recreation on the planet Mars from the novel\nIlium by Dan Simmons. Which of these stories we are actually narrating? We can actually narrate quite an extensive sequence of events without making a choice. However, if at some moment we make a decision and choose to elaborate on Hector with the statement:\n1 \"Hector\" / is-a / quantum-recreation.\nthan this will affect the shadows: the interpretations based on Dan Simmons\u2019 novel will become stronger, and the future recalls will become more likely to follow the novel\u2019s story line (Hector forming an alliance with Achilles against the gods).\nNote that it is possible for an agent to recall an attribute from another story line, yet it would not derail the story. For instance, the talking wolf in the Little Red Riding Hood will be shadowed by all the talking wolfs previously encountered, including the one from the \u201cNu zaec, pogodi!\u201d Russian cartoon, where the wolf is a heavy smoker. It is possible to retell the story of Little Red Riding Hood with a heavy smoker wolf without slipping away completely from the story line. One reason for this is that in the cartoon, the wolf\u2019s nemesis is a bunny, which would not match well as a shadow for the red hooded girl."}, {"heading": "IX. RELATED WORK", "text": "The Xapagy system had been developed from scratch but not in a void. In the following we shall compare and contrast it against\n20The Xapagy system currently does not use the summary for recall guidance, thus it can not automatically go to the beginning of a story. This is an obvious and necessary future work.\na small collection of representative systems. Most of these systems represent bodies of work which fit the Newell definition of cognitive architecture [19] as integrative systems which try to provide a model of a large subset of the human cognition even if they do not answer to all the twelve requirements of a human cognitive architecture as proposed in the \u201cNewell test\u201d (Anderson and Lebiere [3]). Some of them have not been explicitly positioned as cognitive architectures.\nWe shall look both at differences and similarities in the approach. The Xapagy system has taken a somewhat unusual approach to issues such as instance and concept as well as in focusing on episodic memory and shadowing as a single reasoning model. These choices have their root in the application, computational efficiency considerations - but also in the desire to try out roads less traveled. Despite of this, we found unexpected similarities and convergencies between Xapagy and approaches which have started out with radically different assumptions.\nXapagy is a new system, developed over the last three years and first described in this paper. When comparing it against other architectures we will also focus not only on what we learned from some of these systems but also what we might learn in the future.\nThe ACT-R cognitive architecture\nACT-R (Anderson and Lebiere [2], Anderson et al. [1]) is a cognitive architecture developed based on the theoretical models of John R. Anderson. It is the center of an active community of researchers with many variants adapted to perform specific tasks. Overall, the ACT-R community has been eager to integrate the system with external models. Earlier extensions, such as the ACT-R/PM (perceptual-motor) model have been integrated into the core of the ACT-R system. A recent integration effort created the SAL hybrid architecture through the integration of ACT-R and the Leabra neural model (Jilk et al. [9]).\nThe central idea of the ACT-R system is the use of the production as the model of the functioning of the human brain. A production requires some preconditions to be satisfied, and then it can \u201cfire\u201d, performing a certain action. Unlike other models such as EPIC, ACTR is based on a serial-bottleneck theory of cognition, where only one production can fire at a time. This is similar to the Xapagy system which also allows only one verb instance to be inserted into the focus at a time. Although the idea of a production is a computer science term, it has been found that it can be quite efficiently mapped to lower level terms, connectionist systems and even biological brain functions.\nThe flow of cognition in ACT-R happens through the system choosing productions based on its current buffers (largely equivalent to the Xapagy focus or the working memory in several other systems). The buffers can hold the current goal, its declarative memory, perceptual and motor modules, where it goes through the matching /selection / execution model.\nACT-R is a goal oriented system, it describes the active behavior of an agent. In general, ACT-R emphasizes the conceptual knowledge as encoded in the productions, and it does not focus on the episodic knowledge.\nIn contrast, for the Xapagy system, the episodic knowledge is the main focus. This is not really a choice, when we consider the fact that the objective of the Xapagy system is is the reasoning about stories.\nThe SOAR cognitive architecture\nSOAR is a cognitive architecture with an active academic community and history of successful commercial application. In its initial version (Laird, Newell and Rosenbloom [12]) SOAR was primarily\n24\na symbolic production system. However, its recent development path increasingly integrates non-symbolic memory and processing components in the architecture (Laird [11]).\nIn its traditional version, SOAR has a long term memory (encoded as production rules) and a short term memory (encoded as a symbolic graph structure where objects are represented with properties and relations). The SOAR system performs cognition by matching and firing production rules. SOAR modulates the choice of the production to fire through operators. If the current preferences are insufficient for the choice of the production rule to fire, the SOAR system declares an impasse, automatically creating a new sub-state with the explicit goal to resolve it. This can be performed repeatedly and recursively, leading to an automatic meta-reasoning structure.\nThe recent version of the SOAR system extends the system in form of non-symbolic knowledge representations (and the implied memory and processing modules) as well as new learning models for knowledge not easily encodable in form of rules.\nFrom the point of view of the relationship to the Xapagy system it is important that the new version of SOAR implements episodic memory in form of temporally ordered snapshots of working memory. Recorded episodes can be retrieved by the creation of a cue which is the partial specification of a working memory. The retrieved episodes are stored in a special buffer, the exact recall of a sequence of episodes is possible. The retrieval of episodes is also affected by a new module modeling the activation level of working memory.\nCompared with the Xapagy architecture, the main difference is, again, the emphasis on the episodic memory placed by the Xapagy system. SOAR defines several memory models (procedural knowledge encoded as rules, semantic memory (facts about the world) with the episodic memory being a relatively recent addition. In contrast the episodic memory is essentially the only memory model in Xapagy21.\nThe cue and working memory based episodic memory retrieval parallels the Xapagy\u2019s continuation HLS model. There is however a major difference in what the actual recall does. In SOAR it is possible to accurately recall a previous episode, with the complete snapshot of the working memory. In Xapagy this is impossible - it is not sure that even the general outline of the recalled story will be accurately recreated (see Section VIII-C).\nThe ICARUS cognitive architecture\nThe ICARUS system (Langley and Choi [14]) is a cognitive architecture which focuses on cognition occurring in the physical context. Its cognitive behavior cycle is strongly tied to the perceptual input from the environment, with the mental structures grounded in the perception and the actions of the agent. ICARUS models concepts and skills as encoding different aspects of knowledge, memorized as different cognitive structures. It assumes that each element of the short term memory has a corresponding generalized structure in the hierarchically organized long term memory.\nComparing ICARUS and Xapagy is difficult, as the physical, grounded orientation of ICARUS and the story oriented application domain of Xapagy have very little overlap. Inevitably, however, Xapagy needs to extend towards application scenarios where the stories are recorded as an active participant in the events (rather than as a more or less passive observer of events or listener of narrated stories). Thus the ICARUS system can serve as inspiration for future Xapagy extensions for embodied action and goal directed reasoning.\n21Xapagy also defines conceptual and dictionary knowledge. Conceptual knowledge is implicitly present in SOAR (and basically all the other cognitive architectures, even if they do not appear a separate module). Dictionary knowledge is also necessarily present in any system which uses some kind of external language.\nThe Polyscheme cognitive architecture\nThe Polyscheme system (Cassimatis et al. [5]) is a cognitive architecture designed to integrate multiple different representations and reasoning algorithms. Polyscheme reasoning proceeds through sequential mental simulations where the different cognitive reasoning and planning models are encapsulated in specialist modules. The architecture allows even purely reactive components to react to simulated states of the world, thus integrating reasoning and planning with perception and action.\nThe integration of the different specialists is performed through a common communication language, used to translate information between specialists. Beyond this, however, each specialist can use its own internal data representations.\nThe Polyscheme system implements a rigorous and consistent way to annotate states as being in the past, hypothetical, distant or invisible.\nThere are apparently irreconcilable differences between the architectural approach of Polyscheme and Xapagy. Polyscheme is fundamentally built on the integration of multiple representations and reasoning models while Xapagy uses a single representation and a shadowing as a single reasoning model.\nA closer look, however, also finds many parallels. The common language used between specialist modules can be seen as an analogue to the Xapagy verb instance representation.\nMany of the specialist modules in Polyscheme would need to be also implemented outside the shadow/HLS reasoning model if Xapagy would be used in their application domain. For instance in the Polybot robot application one of the specialists identifies the location and category of the objects using color segmentation. This obviously cannot be implemented through shadowing - should the Xapagy system ever be controlling a robot, the solution would roughly be the same: a specialized visual module which communicates with the rest of the system by inserting instances and verb instances into the focus.\nFinally, the shadow/HLS mechanism in Xapagy can be considered a type of simulation of recent events based on past knowledge, which is a close parallel to what the Polyscheme simulation model does.\nThe EPIC cognitive architecture\nThe EPIC cognitive architecture (Kieras and Meyer [10]) has been implemented with the explicit goal to model the human multimodal and multiple task performance. The EPIC architecture\u2019s goal is to understand and model human behavior (preferably, through a predictive model) rather than to create an artificially intelligent agent.\nAs ACT-R and SOAR, EPIC is a production based system. One of the influential differences of the EPIC system is that it does not assume a serialized bottleneck on the firing of the productions. However, the number of productions which can be actually be instantiated simultaneously is limited by resource limitations, for instance the various components of the working memory, the processing speed, and the physical limitations of sensors and actuators (eyes can focus on one point at a time, hands can grab a single object, and so on).\nWhat the Xapagy system can learn from EPIC is the lesson which many other architectures have also drawn - that is, that the perceived serialization of some aspects of human behavior can occur naturally - they need not be enforced through artificial constraints.\nThe CLARION cognitive architecture\nThe stated goal of the CLARION architecture (Sun [28]) is to capture cognitive modeling aspects not adequately addressed by other cognitive architectures: the implicit-explicit interaction, the cognitivemetacognitive interaction and the cognitive-motivational interaction.\n25\nOverall, CLARION is an integrative model with separate functional subsystems (such as the action centered, metacognitive and motivational subsystem). Each subsystem has a has a dual representational structure, separately for implicit and explicit representations. This separation of the high level (symbolic, explicit) and low level (nonsymbolic, implicit) representations is consistently carried through throughout the architecture. These two representation models are independently operating and compete for the right to perform an action through well defined interaction models. For instance, the system contains models for learning symbolic rules from subsymbolic information. The CLARION system also contains built-in motivational and metacognitive constructs.\nOn a superficial look, there appears to be very little similarity between CLARION and Xapagy. CLARION\u2019s characteristic is that its architecture explicitly models several dichotomies of human cognition (explicit vs. implicit, action vs. deliberation, symbolic vs. subsymbolic). If one wishes to identify where a certain human reasoning ability is modeled, a single look at the CLARION\u2019s architectural diagram can point to the component responsible. In contrast, Xapagy uses a single reasoning model, shadowing, and whatever dichotomies must appear in the external behavior, it must emerge from a unique internal model.\nYet, despite the very different architecture, a careful comparison study can find that parallels between the turn architectures can be drawn. For instance, CLARION uses a mix of similarity based and rule-based reasonings - these components can be mapped to the various shadow maintenance activities which deploy a mix of structural and similarity based matching techniques.\nThe KARMA story understanding system and related work\nThe KARMA system for story understanding (Narayanan [17]) had demonstrated the understanding of simple stories and narrative fragments in the domain of international politics and economics as described in journalism.\nOne feature of the system is the ability to represent, reason about, and understand metaphors which present abstract concepts (such as those in international politics and economy), in terms of the physical motion, forces, terrain features. It uses the Event Structure Metaphor that projects inferences from physical motion and manipulation to abstract actions, goals and policies.\nFrom the point of view of practical implementation, the KARMA system uses a model called x-schemas which are parametrized routines, with internal state which execute when invoked. They are implemented as an extension to Petri-nets (to allow run-time binding, hierarchical action sets and stochastic transitions).\nThe KARMA system is strongly focused on the study of aspect the study of linguistic devices which profile and focus on the internal temporal character of the event.\nA recent paper (Lakoff and Narayanan [13]) described a roadmap towards a system which understand human narratives by exploiting the cognitive structures of human motivations, goals, actions, events and outcomes. The authors outline a number of directions towards which future narrative systems need to work, and order them in dimensions of narrative structure: the moral system of the narrative (stories as guides to living), folk theories of how people and things work, overall plot structures (these are in many way resemble summarizations in Xapagy), plot schemas, motif structures, and narrative variations.\nThe DAYDREAMER system\nThe DAYDREAMER system (Mueller and Dyer [15]) was a system which generated stories, based on, and initiated from actual\nexperiences. The system used in the guidance of these story creations four goals which were identified as frequently appearing in daydreaming: rationalization, revenge, failure/success reversal (exploration of alternatives), and preparation (generation of hypothetical future scenarios).\nDAYDREAMER had been strongly tied to models of emotion: defined notions of success of a goal (which produces a positive emotion) and failure (producing negative emotion). It proposed that the basic mechanism for scenario generation is plannning.\nThe DAYDREAMER system was taking a similar approach to Xapagy in the fact that both the actual experiences and the daydreamed experiences are equally available to recall.\nDAYDREAMER modeled a dynamic episodic memory (Tulving [29], Schank [24]), constantly modified during daydreaming. In Xapagy, the episodic memory is not, in fact, modified, yet the practical impact is similar, as the way in which the recall happens through selfshadowing, it creates a behavior compatible with a dynamic memory for the external observer.\nRecent work on narrative schemas by Chalmers and Jurafski\nAn body of work, with a high relevance to the Xapagy system has been recently reported by Chambers and Jurafsky [6], [7]. The work centers on the learning of narrative schemas, which they define as coherent sequences or sets of events with participants who are defined as semantic roles, which can be fitted by appropriate persons.\nThis work can bee seen as a restart of the semantic NLP tradition of the 1970 and 80s, which used representations such as scripts (Shank and Abelson [25]). This research direction had become marginalized in the 1990\u2019s as the knowledge engineering requirements appeared to be overwhelming. The work of Chalmers and Jurafski promises to reboot this research direction as the narrative schemas can be inferred or learned in an unsupervised way from raw input.\nIn [6], [7] successfully show scema and role inference, starting from preprocessed natural language. The evaluate the system using the narrative cloze test, an variation of the classical word-based cloze test, where an event is removed from a known narrative chain, and the system needs to infer the missing event.\nThe work is very close to the Xapagy system in its external objectives, as well as in some of the details of the processes (e.g. some of the shadow maintenance DAs are close relatives of the algorithms used by the authors). It is true, Chambers and Jurafsky start from English text, not pidgin, but they are using independent preprocessing algorithms to resolve the references (albeit with some level of uncertainty). Practically, the input of the algorithms is closely related to the verb instance form of the Xapagy input.\nThere is, however, a difference between the two approaches, which, depending on how we look at it, is either a major philosophical difference or an implementation detail. The assumption of Chambers and Jurafsky is that scripts physically exist, that the agents have an explicit data structure, which is, let us say, the restaurant schema, which is the subject of knowledge engineering or learning.\nIn contrast, in Xapagy, such an internal scheme does not exist as an explicit data structure. The reasoning model of Xapagy (shadows and headless shadows) do not create permanent intermediary structures: reasoning always starts with the concrete, originally memorized story lines.\nLooking from another perspective, however, the differences are not as great. For instance, a Xapagy agent, asked to confabulate a restaurant scene based on generic participants, will recall the same sequence as the one which one would obtained from a narrative schema initialized with the same participants in the specific roles. So, for an external observer, which sees the system\u2019s behavior but\n26\nnot the internal structure, these systems would be hard to distinguish (at least as long as we consider typical scenarios - for atypical scenarios, exceptions and borderline cases there is a larger freedom of movement for both systems)."}, {"heading": "X. CONCLUSION", "text": "The Xapagy system is an active software project, in development since 2008. It has been designed to perform narrative reasoning, that is, to mimic the human behavior when reasoning about stories. The objective of this paper was to convey the architecture of the system, with an emphasis on the design decisions which differentiate it from its peers from the artificial intelligence literature.\nIn order to fit the description of the architecture in a single paper, we had to omit certain details. For instance, the spike activities and diffusion activities which maintain the shadows and headless shadows have been presented in an informal manner. The various narrative reasoning modalities outlines in Section VIII would deserve separate and extensive treatment, which will be provided in future papers."}, {"heading": "APPENDIX A ABBREVIATIONS, NOTATIONS AND TYPOGRAPHICAL CONVENTIONS", "text": "This paper uses a relatively extensive list of mathematical notations to describe the interaction between the different components of the system.\nWe are also using specific typographical conventions to show the various levels of input, intermediary values and output of the system. These values will be enumerated here."}, {"heading": "A. Acronyms", "text": "The following acronyms are used in the paper: VI verb instance\nCO concept overlay VCO verb concept overlay\nSA spike activity DA diffusion activity HLS headless shadow"}, {"heading": "B. Notations for basic components", "text": "V a verb instance I an instance ci a concept (an attribute or adjective) vi a verb (or adverb)\n\u2212ci,\u2212vi the negation of a concept or verb C an overlay of concepts\nCV a overlay of verbs area(c) area of a concept (similar for a verb) overlap(ci, cj) the overlap between concepts ci and cj impact(ci, cj) the impact of concept ci over concept cj een(C, c) explicit energy of concept c in overlay C (similar for the verbs) en(C, c) implicit energy of concept c in a overlay C (similar for the verbs) act(C, c) activation of concept c in overlay C (similar for the verbs)"}, {"heading": "C. Notations for reference resolution", "text": "match(C1, C2) the match between two concept overlays match(V1, V2) the match between two verb overlays"}, {"heading": "D. Notations for verb instances", "text": "vitype(V ) the type of the verb instance V (can be S-V-O, S-V, S-ADJ, S-ADV, IND) comp(V ) the list of components of the verb instance V V erb(V ) the verb overlay which defines the verb instance V SubI(V ) the instance which serves as the subject of the verb instance V (if type S-V-O, S-V, S-ADJ, IND) ObjI(V ) the instance which serves as the object of the verb instance V (if type S-V-O) ObjCO(V ) the concept overlay which serves as the adjective of the verb instance V (if type S-ADJ) SubV I(V ) the verb instance which serves as the subject of the verb instance V (if type S-ADV) ObjV O(V ) the verb overlay which serves as the object adverb of the verb instance V (if type S-ADV) pred(V1, V2) the strength of the predecessor relationship from verb instance V 1 to V2 succ(V1, V2) the strength of the successor relationship from verb\ninstance V 1 to V2"}, {"heading": "E. Notations for focus and shadow", "text": "sh(IF , IS) the participation of the instance IS in the shadow of the focus instance IF sh(VF , VS) the participation of the verb instance VS in the shadow of the focus verb instance VF MI(IF , IS) the intrinsic matching between instance IF in the focus and instance IS in the shadow MC(IF , IS) the contextual matching between instance IF in the focus and instance IS in the shadow M(IF , IS) the overall matching between instance IF in the focus and instance IS in the shadow MSC(VF , VS) the semi-contextual matching between verb instance VF in the focus and verb instance VS in the shadow M(VF , VS) the overall matching between between verb instance VF in the focus and verb instance VS in the shadow"}], "references": [{"title": "An integrated theory of the mind", "author": ["J. Anderson", "D. Bothell", "M. Byrne", "S. Douglass", "C. Lebiere", "Y. Qin"], "venue": "Psychological review,", "citeRegEx": "1", "shortCiteRegEx": "1", "year": 2004}, {"title": "The atomic components of thought", "author": ["J. Anderson", "C. Lebiere"], "venue": "Lawrence Erlbaum,", "citeRegEx": "2", "shortCiteRegEx": "2", "year": 1998}, {"title": "The Newell test for a theory of cognition", "author": ["J. Anderson", "C. Lebiere"], "venue": "Behavioral and Brain Sciences,", "citeRegEx": "3", "shortCiteRegEx": "3", "year": 2003}, {"title": "Integrating cognition, perception and action through mental simulation in robots", "author": ["N. Cassimatis", "J. Trafton", "M. Bugajska", "A. Schultz"], "venue": "Robotics and Autonomous Systems,", "citeRegEx": "5", "shortCiteRegEx": "5", "year": 2004}, {"title": "Unsupervised learning of narrative event chains", "author": ["N. Chambers", "D. Jurafsky"], "venue": "Proceedings of ACL-08: HLT,", "citeRegEx": "6", "shortCiteRegEx": "6", "year": 2008}, {"title": "Unsupervised learning of narrative schemas and their participants", "author": ["N. Chambers", "D. Jurafsky"], "venue": "In Proceedings of the Joint Conference of the 47th Annual Meeting of the ACL and the 4th International Joint Conference on Natural Language Processing of the AFNLP: Volume 2- Volume", "citeRegEx": "7", "shortCiteRegEx": "7", "year": 2009}, {"title": "Repeated encounters of a similar kind: Effects of familiarity on children\u2019s autobiographic memory", "author": ["J. Hudson", "K. Nelson"], "venue": "Cognitive Development,", "citeRegEx": "8", "shortCiteRegEx": "8", "year": 1986}, {"title": "SAL: An explicitly pluralistic cognitive architecture", "author": ["D. Jilk", "C. Lebiere", "R. O\u2019Reilly", "J. Anderson"], "venue": "Journal of Experimental & Theoretical Artificial Intelligence,", "citeRegEx": "9", "shortCiteRegEx": "9", "year": 2008}, {"title": "An overview of the EPIC architecture for cognition and performance with application to human-computer interaction", "author": ["D.E. Kieras", "D.E. Meyer"], "venue": "Human\u2013Computer Interaction,", "citeRegEx": "10", "shortCiteRegEx": "10", "year": 1997}, {"title": "Extending the Soar cognitive architecture", "author": ["J. Laird"], "venue": "In Proceedings of the 2008 conference on Artificial General Intelligence,", "citeRegEx": "11", "shortCiteRegEx": "11", "year": 2008}, {"title": "Soar: An architecture for general intelligence", "author": ["J. Laird", "A. Newell", "P. Rosenbloom"], "venue": "Artificial Intelligence,", "citeRegEx": "12", "shortCiteRegEx": "12", "year": 1987}, {"title": "Toward a Computational Model of Narrative", "author": ["G. Lakoff", "S. Narayanan"], "venue": "In 2010 AAAI Fall Symposium Series,", "citeRegEx": "13", "shortCiteRegEx": "13", "year": 2010}, {"title": "A unified cognitive architecture for physical agents", "author": ["P. Langley", "D. Choi"], "venue": "In Proceedings of the National Conference on Artificial Intelligence,", "citeRegEx": "14", "shortCiteRegEx": "14", "year": 1999}, {"title": "Towards a computational theory of human daydreaming", "author": ["E. Mueller", "M. Dyer"], "venue": "In Proceedings of the Seventh Annual Conference of the Cognitive Science Society,", "citeRegEx": "15", "shortCiteRegEx": "15", "year": 1985}, {"title": "What is it like to be a bat", "author": ["T. Nagel"], "venue": "The Philosophical Review,", "citeRegEx": "16", "shortCiteRegEx": "16", "year": 1974}, {"title": "KARMA: Knowledge-based active representations for metaphor and aspect", "author": ["S. Narayanan"], "venue": "PhD thesis,", "citeRegEx": "17", "shortCiteRegEx": "17", "year": 1997}, {"title": "John Dean\u2019s memory: A case study", "author": ["U. Neisser"], "venue": "Cognition, 9(1):1\u201322,", "citeRegEx": "18", "shortCiteRegEx": "18", "year": 1981}, {"title": "Unified theories of cognition", "author": ["A. Newell"], "venue": "Harvard Univ Pr,", "citeRegEx": "19", "shortCiteRegEx": "19", "year": 1994}, {"title": "Stanford encyclopedia of philosophy: Identity", "author": ["H. Noonan"], "venue": "URL http://plato.stanford.edu/entries/identity/,", "citeRegEx": "20", "shortCiteRegEx": "20", "year": 2010}, {"title": "Stanford encyclopedia of philosophy: Personal identity", "author": ["E.T. Olson"], "venue": "URL http://plato.stanford.edu/entries/identity/,", "citeRegEx": "21", "shortCiteRegEx": "21", "year": 2010}, {"title": "Learnability and cognition: the acquisition of argument structure", "author": ["S. Pinker"], "venue": null, "citeRegEx": "22", "shortCiteRegEx": "22", "year": 1989}, {"title": "Boyes-Braem. Basic objects in natural categories", "author": ["E. Rosch", "C. Mervis", "W. Gray", "D. Johnson"], "venue": "Cognitive psychology,", "citeRegEx": "23", "shortCiteRegEx": "23", "year": 1976}, {"title": "Dynamic memory: A theory of reminding and learning in computers and people", "author": ["R. Schank"], "venue": null, "citeRegEx": "24", "shortCiteRegEx": "24", "year": 1982}, {"title": "Scripts, plans, goals and understanding: An inquiry into human knowledge structures, volume 2", "author": ["R. Schank", "R. Abelson"], "venue": null, "citeRegEx": "25", "shortCiteRegEx": "25", "year": 1977}, {"title": "Contact languages: Pidgins and creoles", "author": ["M. Sebba"], "venue": "Palgrave Macmillan,", "citeRegEx": "26", "shortCiteRegEx": "26", "year": 1997}, {"title": "Anatomy and physiology for speech, language, and hearing", "author": ["A. Seikel", "D. King", "D. Drumright"], "venue": "Delmar Cengage Learning,", "citeRegEx": "27", "shortCiteRegEx": "27", "year": 2009}, {"title": "The CLARION cognitive architecture: Extending cognitive modeling to social simulation. Cognition and multi-agent interaction: From cognitive modeling to social simulation, pages", "author": ["R. Sun"], "venue": null, "citeRegEx": "28", "shortCiteRegEx": "28", "year": 2006}, {"title": "Episodic and semantic memory", "author": ["E. Tulving"], "venue": "Organization of memory,", "citeRegEx": "29", "shortCiteRegEx": "29", "year": 1972}, {"title": "Using anytime algorithms in intelligent systems", "author": ["S. Zilberstein"], "venue": "AI magazine,", "citeRegEx": "30", "shortCiteRegEx": "30", "year": 1996}], "referenceMentions": [{"referenceID": 28, "context": "It is true, using anytime algorithms [30] can turn any architecture into a constant time architecture.", "startOffset": 37, "endOffset": 41}, {"referenceID": 25, "context": "In this endeavor we are encouraged by the fact that the human brain can perform narrative reasoning with only about a dozen synapses separating input from output [27].", "startOffset": 162, "endOffset": 166}, {"referenceID": 24, "context": "In linguistics, pidgin languages [26] are natural languages with a simplified syntactic structure which appear when two groups of people need to communicate without the time necessary to properly learn each other\u2019s languages.", "startOffset": 33, "endOffset": 37}, {"referenceID": 18, "context": "These instances, of course, are connected through various relations of identity (for a discussion on the philosophical problem of personal identity we refer the reader to [20], [21]).", "startOffset": 171, "endOffset": 175}, {"referenceID": 19, "context": "These instances, of course, are connected through various relations of identity (for a discussion on the philosophical problem of personal identity we refer the reader to [20], [21]).", "startOffset": 177, "endOffset": 181}, {"referenceID": 21, "context": "[23].", "startOffset": 0, "endOffset": 4}, {"referenceID": 0, "context": "For a certain overlay C and concept c we can define the activation act(C, c) \u2208 [0, 1] of the concept in the overlay with:", "startOffset": 79, "endOffset": 85}, {"referenceID": 20, "context": "An interesting future research direction could be to investigate the relationship between this composition model and Pinker\u2019s microfeatures [22].", "startOffset": 140, "endOffset": 144}, {"referenceID": 0, "context": "We define a weighted set of instances IS by saying that the participation of instance I in instance set IS is a value w(IS, I) \u2208 [0, 1].", "startOffset": 129, "endOffset": 135}, {"referenceID": 14, "context": "[16], but even in a purely technical reading there is a major challenge that an agent can not generate an optimal output unless it knows the dictionary and concepts of the target agents.", "startOffset": 0, "endOffset": 4}, {"referenceID": 6, "context": "The phenomena has been identified and well documented since the 1980s [8] and still under active research [4].", "startOffset": 70, "endOffset": 73}, {"referenceID": 16, "context": "A very famous example of self shadowing is the case of Nixon\u2019s counsel John Dean analyzed by Neisser [18].", "startOffset": 101, "endOffset": 105}, {"referenceID": 21, "context": "[23]).", "startOffset": 0, "endOffset": 4}, {"referenceID": 17, "context": "Most of these systems represent bodies of work which fit the Newell definition of cognitive architecture [19] as integrative systems which try to provide a model of a large subset of the human cognition even if they do not answer to all the twelve requirements of a human cognitive architecture as proposed in the \u201cNewell test\u201d (Anderson and Lebiere [3]).", "startOffset": 105, "endOffset": 109}, {"referenceID": 2, "context": "Most of these systems represent bodies of work which fit the Newell definition of cognitive architecture [19] as integrative systems which try to provide a model of a large subset of the human cognition even if they do not answer to all the twelve requirements of a human cognitive architecture as proposed in the \u201cNewell test\u201d (Anderson and Lebiere [3]).", "startOffset": 350, "endOffset": 353}, {"referenceID": 1, "context": "ACT-R (Anderson and Lebiere [2], Anderson et al.", "startOffset": 28, "endOffset": 31}, {"referenceID": 0, "context": "[1]) is a cognitive architecture developed based on the theoretical models of John R.", "startOffset": 0, "endOffset": 3}, {"referenceID": 7, "context": "[9]).", "startOffset": 0, "endOffset": 3}, {"referenceID": 10, "context": "In its initial version (Laird, Newell and Rosenbloom [12]) SOAR was primarily", "startOffset": 53, "endOffset": 57}, {"referenceID": 9, "context": "However, its recent development path increasingly integrates non-symbolic memory and processing components in the architecture (Laird [11]).", "startOffset": 134, "endOffset": 138}, {"referenceID": 12, "context": "The ICARUS system (Langley and Choi [14]) is a cognitive architecture which focuses on cognition occurring in the physical context.", "startOffset": 36, "endOffset": 40}, {"referenceID": 3, "context": "[5]) is a cognitive architecture designed to integrate multiple different representations and reasoning algorithms.", "startOffset": 0, "endOffset": 3}, {"referenceID": 8, "context": "The EPIC cognitive architecture (Kieras and Meyer [10]) has been implemented with the explicit goal to model the human multimodal and multiple task performance.", "startOffset": 50, "endOffset": 54}, {"referenceID": 26, "context": "The stated goal of the CLARION architecture (Sun [28]) is to capture cognitive modeling aspects not adequately addressed by other cognitive architectures: the implicit-explicit interaction, the cognitivemetacognitive interaction and the cognitive-motivational interaction.", "startOffset": 49, "endOffset": 53}, {"referenceID": 15, "context": "The KARMA system for story understanding (Narayanan [17]) had demonstrated the understanding of simple stories and narrative fragments in the domain of international politics and economics as described in journalism.", "startOffset": 52, "endOffset": 56}, {"referenceID": 11, "context": "A recent paper (Lakoff and Narayanan [13]) described a roadmap towards a system which understand human narratives by exploiting the cognitive structures of human motivations, goals, actions, events and outcomes.", "startOffset": 37, "endOffset": 41}, {"referenceID": 13, "context": "The DAYDREAMER system (Mueller and Dyer [15]) was a system which generated stories, based on, and initiated from actual experiences.", "startOffset": 40, "endOffset": 44}, {"referenceID": 27, "context": "DAYDREAMER modeled a dynamic episodic memory (Tulving [29], Schank [24]), constantly modified during daydreaming.", "startOffset": 54, "endOffset": 58}, {"referenceID": 22, "context": "DAYDREAMER modeled a dynamic episodic memory (Tulving [29], Schank [24]), constantly modified during daydreaming.", "startOffset": 67, "endOffset": 71}, {"referenceID": 4, "context": "An body of work, with a high relevance to the Xapagy system has been recently reported by Chambers and Jurafsky [6], [7].", "startOffset": 112, "endOffset": 115}, {"referenceID": 5, "context": "An body of work, with a high relevance to the Xapagy system has been recently reported by Chambers and Jurafsky [6], [7].", "startOffset": 117, "endOffset": 120}, {"referenceID": 23, "context": "This work can bee seen as a restart of the semantic NLP tradition of the 1970 and 80s, which used representations such as scripts (Shank and Abelson [25]).", "startOffset": 149, "endOffset": 153}, {"referenceID": 4, "context": "In [6], [7] successfully show scema and role inference, starting from preprocessed natural language.", "startOffset": 3, "endOffset": 6}, {"referenceID": 5, "context": "In [6], [7] successfully show scema and role inference, starting from preprocessed natural language.", "startOffset": 8, "endOffset": 11}], "year": 2011, "abstractText": "We introduce the Xapagy cognitive architecture: a software system designed to perform narrative reasoning. The architecture has been designed from scratch to model and mimic the activities performed by humans when witnessing, reading, recalling, narrating and talking about stories.", "creator": "LaTeX with hyperref package"}}}