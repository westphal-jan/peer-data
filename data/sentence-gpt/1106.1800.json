{"id": "1106.1800", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "9-Jun-2011", "title": "Extensions of Simple Conceptual Graphs: the Complexity of Rules and Constraints", "abstract": "Simple conceptual graphs are considered as the kernel of most knowledge representation formalisms built upon Sowa's model. Reasoning in this model can be expressed by a graph homomorphism called projection, whose semantics is usually given in terms of positive, conjunctive, existential FOL. We present here a family of extensions of this model, based on rules and constraints, keeping graph homomorphism as the basic operation. We focus on the formal definitions of the different models obtained, including their operational semantics and relationships with FOL, and we analyze the decidability and complexity of the associated problems (consistency and deduction). As soon as rules are involved in reasonings, these problems are not decidable, but we exhibit a condition under which they fall in the polynomial hierarchy. These results extend and complete the ones already published by the authors. Moreover we systematically study the complexity of some particular cases obtained by restricting the form of constraints and/or rules. For example, in the case of the Sowa-Kashevsky and Sowa-Kashevsky models, constraints are defined in this respect.\n\n\nIn summary, the constraints in this paper, in particular, provide an important framework for understanding what types of constraints and/or rules are, as they include them, in order to understand the functional properties of them.\n\n\nFor a more detailed understanding of Sowa-Kashevsky and Sowa-Kashevsky's approach, see our discussion and discussion here.\nThis text is a pre-referenced version of this text from the paper (PDF) published in PNAS of January 10, 2009.", "histories": [["v1", "Thu, 9 Jun 2011 13:17:53 GMT  (226kb)", "http://arxiv.org/abs/1106.1800v1", null]], "reviews": [], "SUBJECTS": "cs.AI", "authors": ["j f baget", "m l mugnier"], "accepted": false, "id": "1106.1800"}, "pdf": {"name": "1106.1800.pdf", "metadata": {"source": "CRF", "title": null, "authors": ["Jean-Fran\u00e7ois Baget", "baget lirmm.fr", "Marie-Laure Mugnier", "mugnier lirmm.fr"], "emails": [], "sections": [{"heading": null, "text": "Journal of Arti ial Intelligen e Resear h 16 (2002) 425-465 Submitted 06/01; published 06/02\nExtensions of Simple Con eptual Graphs:\nthe Complexity of Rules and Constraints\nJean-Fran\u00e7ois Baget baget lirmm.fr Marie-Laure Mugnier mugnier lirmm.fr LIRMM (CNRS & UM II), 161 rue Ada 34392 Montpellier, C\u00e9dex 5, Fran e\nAbstra t\nSimple on eptual graphs are onsidered as the kernel of most knowledge representation formalisms built upon Sowa's model. Reasoning in this model an be expressed by a graph homomorphism alled proje tion, whose semanti s is usually given in terms of positive,\nonjun tive, existential FOL. We present here a family of extensions of this model, based on rules and onstraints, keeping graph homomorphism as the basi operation. We fo us on the formal de nitions of the di erent models obtained, in luding their operational semanti s and relationships with FOL, and we analyze the de idability and omplexity of the asso iated problems ( onsisten y and dedu tion). As soon as rules are involved in reasonings, these problems are not de idable, but we exhibit a ondition under whi h they fall in the polynomial hierar hy. These results extend and omplete the ones already published by the authors. Moreover we systemati ally study the omplexity of some parti ular ases obtained by restri ting the form of onstraints and/or rules."}, {"heading": "1. Introdu tion", "text": "Con eptual graphs (CGs) have been proposed as a knowledge representation and reasoning model, mathemati ally founded both on logi s and graph theory (Sowa, 1984). Though they have been mainly studied as a graphi al interfa e for logi s or as a diagrammati system of logi s (for instan e, see Wermelinger, 1995, for general CGs equivalent to FOL), their graph-theoreti foundations have been less investigated. Most works in this area are limited to simple on eptual graphs, or simple graphs (Sowa, 1984; Chein & Mugnier, 1992), whi h\norrespond to the positive, onjun tive and existential fragment of FOL without fun tions.\nThis model has three fundamental hara teristi s:\n1. obje ts are bipartite labelled graphs (nodes represent entities and relations between\nthese entities);\n2. reasonings are based on graph-theoreti operations, relying on a kind of graph homo-\nmorphism alled proje tion;\n3. it is logi ally founded, reasonings being sound and omplete w.r.t. FOL semanti s,\nusually by way of the translation alled .\nMain extensions of the simple graphs model, keeping graph homomorphism based operations and sound and omplete semanti s, are inferen e rules (Gosh & Wuwongse, 1995; Salvat & Mugnier, 1996; Salvat, 1998) and nested graphs (Chein, Mugnier, & Simonet, 1998; Preller, Mugnier, & Chein, 1998); for general CGs equivalent to FOL, an original dedu tion\n2002 AI A ess Foundation and Morgan Kaufmann Publishers. All rights reserved.\nBaget & Mugnier\nsystem (Kerdiles, 1997) ombines analyti tableaux with the simple graphs proje tion. Some kind of onstraints have been proposed to validate a knowledge base omposed of simple graphs (Mineau & Missaoui, 1997; Dibie, Haemmerl\u00e9, & Loiseau, 1998).\nWe present here a family of extensions of the simple graphs model. The ommon ground for these extensions is that obje ts are olored simple graphs representing fa ts, rules or\nonstraints, and operations are based upon proje tion. Given a knowledge base K and a simple graph Q (whi h may represent a query, a goal, . . . , depending on the appli ation), the dedu tion problem asks whether Q an be dedu ed from K. A ording to the kinds of obje ts\nonsidered in K, di erent reasoning models are obtained, omposing the SG family. Though similar notions of rules and onstraints an be found in the CG literature, their ombination in reasonings had never been studied. One interest of our approa h thus resides in providing a unifying framework ombining rules and onstraints in di erent ways.\nIn this paper, we fo us on the formal de nitions of these models, in luding their operational semanti s and relationships with FOL, and we study the de idability and omplexity of their asso iated de ision problems, namely onsisten y and dedu tion. These results extend and omplete the ones already published by the authors (Baget & Mugnier, 2001). Though both onsisten y and dedu tion are unde idable in the most general model of this family, we had already used a de idable subset of rules to solve the Sisyphus-I problem, a test-bed proposed in the knowledge a quisition ommunity (Baget, Genest, & Mugnier, 1999). We present here for the rst time a detailed analysis of omplexity when we restri t the knowledge base to this kind of rules ( alled range restri ted rules). We also study parti ular ases of onstraints.\nIn se tion 2 basi de nitions and results about simple graphs are re alled. Se tion 3 presents an overview of the SG family. In parti ular, we explain why we onsider graphi al features of the simple graphs model as essential for knowledge modeling and point out that these properties are preserved in the SG family. In next se tions we study the di erent members of the family. Rules are introdu ed in se tion 4, onstraints in se tion 5, and se tion 6 studies models ombining rules and onstraints. As soon as rules are involved in reasonings, the asso iated de ision problems are not de idable, but we exhibit a ondition ( nite expansion sets) under whi h omputations always stop. In the parti ular ase of range restri ted rules, the omplexity of these problems fall into the polynomial hierar hy. Se tion 7 is devoted to these de idable ases. In se tion 8, relationships with other works are established. In parti ular we point out algorithmi onne tions with onstraint satisfa tion problems (CSP) and show that the problem of he king the onsisten y of a knowledge base omposed of simple graphs and onstraints (SGC- onsisten y) is equivalent to that of de iding the onsisten y of a mixed CSP (MIXED-SAT, Fargier, Lang, & S hiex, 1996)."}, {"heading": "2. Basi Notions: the SG Model", "text": "We re all in this se tion basi notions about simple on eptual graphs (Sowa, 1984; Chein & Mugnier, 1992). These graphs are onsidered as the kernel for most knowledge representation formalisms built upon Sowa's work. They are also the basi model for the SG family.\nThe Complexity of Rules and Constraints"}, {"heading": "2.1 De nitions and Notations", "text": "Basi ontologi al knowledge is en oded in a stru ture alled a support. Fa tual knowledge is en oded into simple graphs (SGs), de ned with respe t to a given support. A SG is a bipartite labelled graph (stri tly speaking, it is a multigraph, sin e there an be several edges between two nodes). One lass of nodes represents entities, the other lass represents relationships between these entities. Nodes are labelled by elements of the support. Elementary reasonings are omputed by a graph homomorphism alled proje tion.\nDe nition 1 (Support) A support is a 4-tuple S = (T\nC\n; T\nR\n;I; ). T\nC\nand T\nR\nare two\npartially ordered nite sets, respe tively of on ept types and relation types. T\nR\nis par-\ntitioned into subsets T\n1 R : : : T k R of relation types of arity 1 : : : k respe tively (k 1). Two\nelements of distin t subsets are in omparable. Both orders on T\nC\nand T\nR\nare denoted by\n(x y means that x is a subtype of y). I is the set of individual markers. T\nC\n, T\nR\nand I\nare pairwise disjoint. is a mapping from I to T\nC\n. We denote by the generi marker,\nwhere =2 I. A partial order on I [ f g onsiders elements of I as pairwise in omparable, and as its greatest element.\nAll partial orders will be denoted by , and, if needed, indexed by the name of the set on whi h they are de ned. In this paper the intuitive meaning of x y is always x is a spe ialization of y. Fig. 1 partially des ribes a support, whi h will be used in further examples.\nPSfrag repla ements\nDe nition 2 (Simple Graph) A simple graph G, de ned over a support S, is a nite bipartite multigraph (V = (V\nC\n; V\nR\n); U; ). V\nC\nand V\nR\nare the node sets, respe tively of\non ept nodes and of relation nodes. U is the multiset of edges. Edges in ident on a relation node are totally ordered; they are numbered from 1 to the degree of the node. An edge numbered i between a relation node r and a on ept node is denoted by (r; i; ) and identi es a unique element of U . U will also be seen as a set of su h triples.\nEa h node has a label given by the mapping . A relation node r is labelled by type(r),\nan element of T\nR\n, alled its type, and the degree of r must be equal to the arity of type(r).\nThus, if r 2 T\nk R , jf(r; i; )j(r; i; ) 2 Ugj = k and fij(r; i; ) 2 Ug = f1; ::: kg. A on ept\nBaget & Mugnier\nnode is labelled by a pair (type( ), marker( )), where type( ) is an element of T\nC\n, alled\nits type, and marker( ) is an element of I [ f g, alled its marker. If marker( ) is an individual marker m, then type( )= (m).\nA on ept node with a generi marker is alled a generi node (it refers to an unspe i ed\nentity of a ertain type); otherwise it is alled an individual node (it refers to a spe i individual de ned in the support). We will adopt the following lassi al onventions about SGs. In the drawing of a SG, on ept nodes are represented by re tangles and relation nodes by ovals. In textual notation, re tangles are repla ed by [\u2104 and ovals by (). Generi markers are omitted. Thus a generi on ept label (t; ) is simply noted t. An individual\non ept label (t;m) is noted t : m. When in our examples we use binary relations, we may repla e numbers on edges by dire ted edges: a binary relation node is then in ident to exa tly one in oming and one outgoing edge. Fig. 2 shows two ( onne ted) simple graphs G and Q assumed to be de ned over the support of Fig. 1. PSfrag repla ements\nThe elementary reasoning operation, proje tion, is a kind of graph homomorphism that preserves the partial order de ned on labels. Let us rst pre ise this order for on ept node labels. We have de ned the following partial order on the marker set I [ f g: is the greatest element (for all m 2 I, m ) and elements of I are pairwise non omparable. Then the partial order on on ept node labels is the produ t of the partial orders on T\nC\nand\nI [ f g, i.e. (t;m) (t\n0\n;m\n0\n) i t t\n0\nand m m\n0\n. In other words, a on ept label (t;m) is\nmore spe i than a on ept label (t\n0\n;m\n0\n) if t is a subtype of t\n0\nand, if m\n0\n= , then m an\nbe any marker, otherwise m must be equal to m\n0\n.\nDe nition 3 (Proje tion) Let Q and G be two SGs de ned on a support S. A proje tion from Q into G is a mapping from V\nC\n(Q) to V\nC\n(G) and from V\nR\n(Q) to V\nR\n(G) whi h\npreserves edges (it is a bipartite graph homomorphism) as well as their numbering, and may spe ialize on ept and relation node labels:\n1. 8(r; i; ) 2 U(Q); ( (r); i; ( )) 2 U(G);\nThe Complexity of Rules and Constraints\n2. 8x 2 V (Q); ( (x)) (x)\nWe note Q G (Q subsumes G) if there exists a proje tion from Q into G. Typi ally, Q represents a query, G a fa t, and proje tions from Q to G de ne answers to Q. In Fig. 2, suppose Resear her Person, then there is one proje tion from Q into G. The image of Q by this proje tion is the subgraph G 0 of G."}, {"heading": "2.2 Relationships with FOL", "text": "The semanti s maps SGs to the existential onjun tive and positive fragment of FOL. Given a support S, a onstant is assigned to ea h individual marker and an n-adi (resp. a unary) predi ate is assigned to ea h n-adi relation (resp. on ept) type. For simpli ity, we onsider that ea h onstant or predi ate has the same name as the asso iated element of the support. A set of formulas (S) is assigned to any support S, translating partial orders on types. More spe i ally, for all distin t types t\n1\nand t\n2\nsu h that t\n2\nt\n1\n, one has the\nformula 8x\n1\n:::x\np\n(t\n2\n(x\n1\n; :::; x\np\n) ! t\n1\n(x\n1\n; :::; x\np\n)), where p = 1 for on ept types, and p is\notherwise the arity of the relation type. Given any SG G, a formula (G) is built as follows. A term is assigned to ea h on ept node: a distin t variable for ea h generi node, and the\nonstant orresponding to its marker otherwise. Then an atom t( ) (resp. t(\n1\n; ::: ;\nk\n)) is\nasso iated to ea h on ept node (resp. relation node r of arity k), where t is the type of the node, and (resp.\ni\n) is the term assigned to this node (resp. assigned to the ith neighbour\nof r). Let (G) be the onjun tion of these atoms. (G) is the existential losure of (G). E.g. the formula assigned to the subgraph G 0 in Fig. 2 is 9x9y(Resear her(x)^Proje t(y)^ Resear her(K) ^member(x; y) ^member(K; y) ^ works-with(x;K)).\nProje tion is sound and omplete w.r.t. the semanti s , up to a normality ondition for ompleteness; the normal form of a SG G is the SG nf (G) obtained by merging on ept nodes having the same individual marker. This SG always exists (and is omputable in linear time with a naive algorithm). Figure 3 shows a ounter-example to proje tion ompleteness when SGs are not in normal form: G for instan e does not proje t to H, even if both SGs have the same logi al semanti s, but it proje ts to nf (H). A SG in normal form is said to be normal.\nu t : a\nt : a\nt\nr s u t : at r s u t : a\nt : a\nt\nr\ns PSfrag repla ements\nG H\nnf(G) = nf(H)\n(G) = (H) = 9xt(x) ^ t(a) ^ t(a) ^ r(x; a) ^ s(x; a) ^ u(x; a)\nG and H have same logi al translation (thus same normal form) but they are in omparable by proje tion.\nFigure 3: The need for normal forms\nTheorem 1 (Chein & Mugnier, 1992; Gosh & Wuwongse, 1995) Let Q and G be two SGs de ned on a support S. Then Q nf(G) if and only if (S); (G) (Q).\nBaget & Mugnier\nWe laimed in the introdu tion that SGs are equivalent to the positive, onjun tive and existential fragment of FOL without fun tions (let us denote it by FOL(^, 9)). One embedding is immediate (from FOL to SGs), but requires the de nition of a support that does not add anything to the semanti s of the involved graphs. A at support is a support whose translation by is empty, i.e. where all distin t types are non omparable. If V is the vo abulary ( onstants and predi ates) for a set of formulas, we onsider the at support S\nf\n(V ) = (T\nC\n; T\nR\n;I) where T\nC\nis restri ted to the element >\nC\n, the relation types of T\ni R are\nthe predi ates of arity i in V , and the individual markers of I are the onstants in V .\nProperty 1 (Embedding FOL(^, 9) into SG) There is a bije tion f2g mapping the set of FOL(^, 9) formulas over a vo abulary V to the set of normal SGs de ned on the at support S\nf\n(V ) su h that, for any two formulas g and h, g h i there is a proje tion from\nf2g(h) into f2g(g).\nProof: Let f be a FOL(^, 9) formula over a vo abulary V . The SG f2g(f) de ned on the support S\nf\n(V ) is built as follows: to ea h term of f we asso iate a on ept node typed\n>\nC\n(generi if the term is a variable, individual with a marker if the term is the onstant\n), and to ea h atom t(x\n1\n; : : : ; x\nq\n) we asso iate a relation node r typed t, su h that, for\n1 i q, the ith neighbor of r is the on ept node asso iated to x\ni\n.\nThe mapping f2g is learly inje tive, i.e. it maps di erent formulas (not identi al up to variable renaming) to di erent SGs (not identi al up to an isomorphism). Moreover, it is a bije tion if we restri t SGs to those in normal form.\nLet us now onsider the FOL(^, 9) formula f = 9~x\ni\n( (~x\ni\n)) (where (~x\ni\n) is a onjun tion\nof atoms whose variables belong to ~x\ni\n). The >\nC\n-enri hed formula of f is the formula\nte(f) = 9~x\ni\n( (~x\ni\n) ^ (~x\ni\n)) where (~x\ni\n) is the onjun tion of the atoms >\nC\n(x), for every\nterm x in f . We now prove the property by pointing out that, 1) for f and g two FOL(^, 9) formulas, f g i te(f) te(g), and 2) for any FOL(^, 9) formula f , te(f) = (f2g(f)), and on lude using Th. 1. 2\nFor the other dire tion, the apparent problem is that formulas assigned to the support by are universally quanti ed and are used in the dedu tion pro ess. However, we an do without them, by en oding the partial order on types dire tly in the SGs.\nProperty 2 (Embedding SG into FOL(^, 9)) There is a inje tive appli ation g2f mapping the set of normal SGs de ned on a support S to the set of FOL(^, 9) formulas su h that, for any two SGs G and H de ned on S, there is a proje tion from H into G i g2f(G) g2f(H).\nProof: Let G be a graph de ned on a support S. The expansion of G, exp(G), is the SG de ned on the at support S\nf\n(V ) (where V is the vo abulary for the formulas of (S)),\nbuilt as follows: 1) for every on ept node x = [t : m\u2104 of G, exp(G) ontains an asso iated\non ept node x\n0\n= [>\nC\n: m\u2104, s.t., for ea h on ept type t\n0\n2 S greater or equal to t, a unary\nrelation node of type t\n0\nlinked to x\n0\nand 2) for every relation node x of G (of type r and\narity k), for every relation type r\n0\n2 S s.t. r r\n0\n, we add in exp(G) a relation node typed\nr\n0\nwith same neighbors as x. We now de ne the appli ation g2f as \u00c6 exp, and on lude\nusing Th. 1, noti ing that (S\nf\n(V )) = ;.\n2\nThe Complexity of Rules and Constraints\nUsing similar transformations, a lose relationship to the problem of query ontainment studied in the database eld has been shown: he king query ontainment for non re ursive\nonjun tive queries is equivalent to he king proje tion between SGs (Chein et al., 1998;\nMugnier, 2000)."}, {"heading": "2.3 The Dedu tion Problem: Computational Complexity", "text": "For the sake of brevity, we onsider in what follows that SGs are given in normal form, and put into normal form if needed after a modi ation. And, sin e a SG does not need to be a\nonne ted graph, we on ate a set of SGs with the SG obtained by performing the disjoint union of its elements. In the following de nition, for instan e, the SG G represents a set of SGs.\nDe nition 4 (SG-dedu tion) Let G and Q be two SGs de ned on a support S. Q an be dedu ed from G if Q G.\nChein and Mugnier (1992) have shown that proje tion he king is NP- omplete with a redu tion from lique. Equivalen e with CSP (satis ability of a onstraint network) was also used later (Feder & Vardi, 1993; Mugnier & Chein, 1996), and independently in a very similar model by Rudolf (1998) (see part 8 of this paper). We give below another proof of this result based on a redu tion from 3-SAT. Though more ompli ated than the previous ones, this redu tion is the basis for other redu tions presented later in this paper.\nThe following theorem keeps into a ount the omplexity of on ept and relation type he king, though in this paper this test an obviously be performed in polynomial time sin e on ept and relation types are only labels partially ordered in a hierar hy.\nTheorem 2 (Chein & Mugnier, 1992) SG-dedu tion is a NP- omplete problem, i type he king in S belongs to NP.\nProof: First see that if type he king is in NP, then SG-dedu tion is also in NP: a proje tion, enri hed by erti ates for all type he ks used, is a polynomial erti ate. The re ipro al is obviously true. We now show that, even if type he king an be done in (1), SG-dedu tion is NP- omplete.\nLet us now build a redu tion from 3-SAT. The input of 3-SAT is a formula F in 3- onjun tive normal form (3-CNF), i.e. a onjun tion of disjun tions ( lauses), ea h with at most three literals, and the question is whether there is a truth assignment of the variables of F su h that F is true. Noti e the lassi al 3-SAT problem onsiders lauses with exa tly three literals, but for further proofs we prefer to use the above variant.\nLet F = C\n1\n^ : : : ^ C\nk\nbe an instan e of 3-SAT. W.l.o.g. we suppose that ea h variable\nappears at most on e in a lause. Let us reate four on ept types for ea h variable x: x, xf, xt and xv. We also reate one relation type C\ni\nfor ea h lause C\ni\n, and a relation type val.\nEa h on ept type xv is greater than xt and xf, these are the only possible omparisons between distin t types.\nWe build the graph G(F) as follows: for every variable x in F , we have three on ept nodes [x\u2104, [xt\u2104 and [xf\u2104 in G(F) and two relation nodes typed val linking the rst to the latter ones (intuitively, it means that the variable x an be valuated by true or false). Let\nBaget & Mugnier\n1 2\n3 1\n2 3 ...\n1 2\n3 1\n2 3\nvalval val val val val val val\na b c d\nat af bt bf ct cf dt df\nC1 C1 C1 C1 C1 C1 C1 C2 C2 C2 C2 C2 C2 C2\na b c d\nav\nval val val val\nC1 C2\nbv cv dv PSfrag repla ements\nG\nQ\nFigure 4: Example of transformation from 3-SAT to proje tion\nus say that the truth value true (resp. false) is asso iated with [xt\u2104 (resp. [xf\u2104). Then for every lause C\ni\n= (l\nx\n_ l\ny\n_ l\nz\n) in F (where l\nx\n, l\ny\nand l\nz\nare literals over variables x,\ny and z), we add the 7 relation nodes typed C\ni\n, having as rst argument [xt\u2104 or [xf\u2104, as\nse ond argument [yt\u2104 or [yf\u2104, and as third argument [zt\u2104 or [zf\u2104, that orrespond to an evaluation of the lause to true (more pre isely, if we repla e in the lause C\ni\nea h positive\n(resp. negative) literal l\nj\n, 1 j 3, by the truth value (resp. the negation of the truth\nvalue) asso iated with the jth neighbor of the relation node, C\ni\nis evaluated to true).\nFor lauses restri ted to (l\nx\n_ l\ny\n) or (l\nx\n), we pro eed similarly, adding 3 binary relation\nnodes or one unary relation node. Note that having k- lauses, where k is a onstant, is of primary importan e to have a polynomial transformation, sin e we obtain 2 k 1 relation nodes for ea h lause.\nIn the graph Q(F), two on ept nodes [x\u2104 and [xv\u2104 are reated for ea h variable x and\na binary relation node (val) links [x\u2104 to [xv\u2104. For ea h lause C\ni\n= (l\nx\n_ l\ny\n_ l\nz\n), there is\none relation (C\ni\n) linked to [xv\u2104, [yv\u2104 and [zv\u2104 (and similarly for lauses with one or two\nliterals). Q(F) represents the question is there a valuation of the variables su h that all\nlauses evaluate to true?\nThis transformation from the 3-SAT formula (a _ b _ : ) ^ (:a _ _ :d) is illustrated in Fig. 4. In the graph G, not all edges issued from the lauses have been drawn, for the sake of readability. It is immediate to he k that, for a formula F , there is a valuation of its variables su h that ea h lause is evaluated to true if and only if Q(F) an be proje ted into G(F). 2"}, {"heading": "2.4 A Note on Redundan y", "text": "Note that the subsumption relation indu ed by proje tion over SGs is a quasi-order, but not an order: it is a re exive and transitive but not anti-symmetri al relation. Two SGs are said to be equivalent if they proje t to ea h other. A SG is said to be redundant if it is equivalent to one of its stri t subgraphs (i.e. a subgraph not equal to G itself), otherwise it is said to be irredundant.\nTheorem 3 (Chein & Mugnier, 1992) Redundan y he king is an NP- omplete problem. Ea h equivalen e lass admits a unique (up to isomorphism) irredundant graph.\nThe irredundant form of a SG G is an irredundant subgraph of G equivalent to it (when G is irredundant, this graph is G itself, otherwise there may be several su h subgraphs, but they are all isomorphi ).\nThe Complexity of Rules and Constraints"}, {"heading": "3. The SG Family: Extensions of Simple Con eptual Graphs", "text": "This se tion is devoted to an overview of the di erent models omposing the SG family. We will rst outline the main motivations for our graph-based approa h of knowledge representation."}, {"heading": "3.1 Knowledge Representation and Reasonings with Graphs", "text": "A modeling viewpoint From a modeling viewpoint, we see two essential properties in the simple graph model. The obje ts, simple graphs, are easily understandable by an enduser (a knowledge engineer or even an expert). And reasonings are easily understandable too, for two reasons: proje tion is a graph mat hing operation, thus easily interpretable and visualisable; and the same language is used at interfa e and operational levels.\nAlthough there is a gap between the theoreti al foundations studied here and a language usable in real appli ations, we would like to brie y mention two proje ts in whi h these properties have been exhibited. The rst one is an experiment in do ument retrieval done by Genest (2000). In this work, on eptual graphs are used to de ne a language for indexing and querying do uments. Con ept types are taken from the thesaurus of RAMEAU (about 400 000 types), a do umentary language used in most fren h publi and universitary libraries. The experiment proved the feasibility of the proposed system (w.r.t. omputing time) and an improved relevan e w.r.t. to the existing system based upon RAMEAU, mainly due to the use of semanti relations instead of keywords only. One side e e t was also to prove the interest of simple graphs from a modeling viewpoint. Indeed, their graphi al properties enabled to build an indexing/querying tool that was onsidered as easy to use for the indexers. The users were master humanities students, not aware from on eptual graphs neither from RAMEAU; with the software and an indexing guide, they be ame qui kly able to build indexations, that were onsidered of high quality by a senior librarian.\nThe se ond proje t takes pla e in knowledge engineering (Bos, Botella, & Vanheeghe, 1997). Its purpose is the onstru tion of tools for modeling and simulating human organizations, as emergen y pro edures for instan e. One main di ulty in knowledge engineering is to validate a modeling, i.e. to he k that the expert reasoning is orre tly modeled. This validation is usually done when the design is a hieved, here by simulating the onstru ted modeling of the organization. At this nal stage, modi ations are very ostly. The key idea of the proje t is to over ome this di ulty by giving the expert the ability to use simulation inside the design y le as a mean of enri hing and building his modeling. This implies that the hosen modeling language enables the expert to follow reasonings step by step, dire tly on his own modelization. It was de ided to build su h a language upon on eptual graphs. General on eptual graphs equivalent to FOL were not onsidered as good andidates be-\nause they are indeed a diagrammati system of logi that is not at the expert level. Instead, the language was grounded upon simple graphs and extensions (su h as nestings of graphs) keeping their readability. Operations mixed simple graph dedu tion (i.e. proje tion) with non de larative pro edures. First experiments were on lusive.\nA omputational viewpoint From a omputational viewpoint, we think that graphbased reasonings, bene tting from graph-theoreti al results, an bring an interesting perspe tive to logi programming. By example, the equivalen e between SG proje tion and\nBaget & Mugnier\ndedu tion in FOL(^;9) an be seen as an alternative version of the homomorphism theorem (Chandra & Merlin, 1977), onsidered as fundamental for database queries optimization (Abiteboul, Hull, & Vianu, 1995). Other results are obtained from onstraint programming. The strong equivalen e between SG-dedu tion and the Constraint Satisfa - tion Problem (see Se t. 8, where the transformations used keep all solutions and preserve the stru ture of the onstraint network in the query) allows to translate the results obtained in this latter ommunity (by example, tra table ases based upon the stru ture of the graph, Gottlob, Leone, & S ar ello, 1999), rst to SG-dedu tion, then to dedu tion in FOL(^;9).\nThe graph stru ture an also be used to develop e ient algorithms in more general models of the SG family: in the model we all SR (see below), Coulondre and Salvat (1998) use the graph-based notion of pie e to build an e ient ba kward- haining algorithm. To enhan e the forward- haining algorithm used in the more general models of the SG family, Baget (2001) expresses dependen ies between rules and onstraints in terms of a graph homomorphism.\nOur aim is thus to build formal extensions of simple on eptual graphs, keeping readability of obje ts as well as reasonings, and preferably, logi ally founded. The SG family is a rst step in this dire tion."}, {"heading": "3.2 An Overview of the SG Family", "text": "Let us now informally present the SG family. The generi problem to be solved, Dedu tion, asks, given a knowledge base (KB) K and a simple graph Q, whether Q an be dedu ed from K. A ording to the kinds of obje ts omposing K, one obtains the di erent members of the family. In the basi model SG, K is omposed of a set G of simple graphs representing fa ts, and solving Dedu tion amounts to he k whether there is a proje tion from Q into G. Rules and onstraints are more omplex obje ts based upon simple graphs, and operations dealing with these obje ts are based upon proje tion.\nThroughout this se tion, we will use examples inspired from a modelization of a knowledge a quisition ase study, alled Sysiphus-I: it des ribes a resour e allo ation problem, where the aim is to assign o es to persons of a resear h group while ful lling some onstraints (Baget et al., 1999).\nRules A rule expresses knowledge of form if A is present then B an be added . It is en oded into a simple graph provided with two olors, the rst olor subgraph de ning the\nThe Complexity of Rules and Constraints\nOffice: #1 adjoin Office: #2 adjoin Office: #3 adjoin Office: #4\nOffice: #1 adjoin Office: #2 adjoin Office: #3 adjoin Office: #4\nnear near near\nnear near\nnear near\nPSfrag repla ements\nG\nH\nFigure 6: Rule appli ations\nhypothesis and the se ond olor the on lusion. In drawings, we represent the hypothesis by white nodes, and the on lusion by gray ones. Figure 5 shows three rules. R\n1\nand R\n2\nrepresent knowledge about the near relation, supposed to be de ned between o es only. R\n1\nexpresses that the relation near is symmetri al ( if an o e x is near an o e y, then y\nis near x ), R\n2\nthat if an o e x adjoins an o e y that adjoins an o e z then x is near\nz . The rule R\n3\nsays that every resear her is member of a proje t ( if there is a resear her\nx, there is a proje t of whi h x is a member ).\nRules are used to enri h fa ts: if the hypothesis of a rule an be proje ted into a SG, then the rule is appli able to this SG, and its on lusion an be added to the SG a ording to the proje tion. Noti e that ea h proje tion of a same rule to a SG de nes a di erent way of applying this rule and is likely to add new information to the SG. Consider for instan e the SG G of Fig. 6, whi h des ribes spatial information about o es, and rules of Figure 5. R\n1\nis appli able (sin e adjoin near), and so is R\n2\n. Let us onsider R\n2\n. There\nare two ways of applying this rule, depending on whether its hypothesis is mapped onto the path [Offi e:#1\u2104->(adjoin)->[Offi e:#2\u2104->(adjoin)->[Offi e:#3\u2104 or onto the path [Offi e:#2\u2104->(adjoin)->[Offi e: #3\u2104->(adjoin)->[Offi e:#4\u2104. In the rst\nase for instan e, a relation node (near) with prede essor [Offi e:#1\u2104 and su essor [Offi e:#3\u2104 is added to the SG. Noti e that in this example, applying all rules in all possible ways as long as they add new information is a nite pro ess (leading to the graph H of Figure 6) but it is not true in general.\nWhen the KB is omposed of a set of fa ts G and a set of rules R, the Dedu tion problem asks whether there is a sequen e of rule appli ations enri hing the fa ts su h that the goal Q an be rea hed, i.e. leading to a graph into whi h the SG Q an be proje ted. E.g.\nonsider the fa t G of Figure 6, and let Q be the SG [Offi e:#4\u2104->(near)->[Offi e\u2104 ( is #4 near an o e? ). Q does not proje t into G, but applying the rules, one adds the information [Offi e:#4\u2104->(near)->[Offi e:#3\u2104 (also [Offi e:#4\u2104->(near)->[Offi e:#2\u2104), thus answering Q.\nConstraints A onstraint an be positive or negative, expressing knowledge of form if A holds, so must B , or if A holds, B must not . It is also a bi olored simple graph: the rst olor de nes the ondition part (or trigger), and the se ond olor the mandatory (or forbidden) part. A SG G satis es a positive onstraint C if ea h proje tion from the\nondition part of C into G an be extended to a proje tion of the whole C. And G satis es a negative onstraint if no proje tion of the ondition of C into G an be extended to a proje tion of the whole C. Fig. 7 shows two onstraints. The negative onstraint C\n1\nBaget & Mugnier\n1\n2\nexpresses that two persons working together should not share an o e . The SG G of Fig 2 does not satisfy this onstraint be ause there is a resear her who works with resear her K (proje tion of the ondition part of C1) and they share o e #124 (extension of the proje tion to a proje tion of the whole C1). The positive onstraint C\n2\nexpresses that the\no e of a head of group must be near the o es of all se retaries.\nWhen the KB is omposed of a set of fa ts G and a set of onstraints C, the role of onstraints is to de ne the onsisten y of the base, i.e. of G. The base is said to be onsistent if all onstraints are satis ed. Provided that the base is onsistent, dedu tion is done as in SG. Even if they are both bi olored graphs, onstraints are not to be onfused with rules. Consider for instan e the bi olored graph R\n3\nof Figure 5: as a rule, it says that\nevery resear her is a member of a proje t. Take the fa t G = [Resear her:K.\u2104 and the query Q=[Resear her:K.\u2104->(member)->[Proje t\u2104 ( is K. member of a proje t? ). If Q is asked on K = (G;R = fR3g), the answer is yes . Now, see R\n3\nas a positive onstraint C. It\nsays that every resear her must be a member of a proje t. K = (G; C = fCg) is in onsistent, thus nothing an be dedu ed from it, in luding Q. The KB has to be repaired rst.\nCombining rules and onstraints Let us ombine rules and onstraints in reasoning. We distinguish now between two kinds of rules: inferen e rules and evolution rules.\nInferen e rules represent impli it knowledge that is made expli it by rule appli ations. This is the ase for rules seen above (Figure 5). Fa ts and inferen e rules an be seen as des ribing a world, and applying a rule modi es the expli it des ription of the world (the fa ts). Now, if we onsider a KB omposed of a set of fa ts G, a set of inferen e rules R, and a set of onstraints C, the notion of onsisten y has to take rules into a ount. For instan e, add to the SGs G and H of Figure 6 the following information about o e assignments: [HeadOfgroup:L.\u2104->(in)->[Offi e:#1\u2104, [Se retary:H.\u2104->(in)->[Offi e:#2\u2104 and [Se retary:P.\u2104->(in)->[Offi e:#3\u2104. Let G 0 and H 0 be the (normal) SGs obtained. Consider the world omposed of the SG G 0 , inferen e rules fR\n1\n; R\n2\ng of Figure 5, and the\npositive onstraint C\n2\nof Figure 7. The SG G\n0\nalone does not satisfy the onstraint C2\n(be ause the head of group L. is in o e #1, and the se retary P. is in o e #3 , but it does not hold that #1 is near #3 ). But after a ertain number of rule appli ations, it does. Thus the KB is said to be onsistent. In this ase it is easy to de ne and he k\nonsisten y be ause the world des ription an be ompletely expli ited by a nite SG (the\ngraph H\n0\n, said to be full w.r.t. R), thus it su es to he k that this graph is onsistent.\nIn general ase, onsisten y relies on whether ea h onstraint violation an be repaired\nThe Complexity of Rules and Constraints\nby rule appli ations, as will be formally de ned later. As with simpler worlds des ribed by fa ts only, dedu tion is not possible on in onsistent knowledge bases.\nEvolution rules represent possible a tions leading from one world to another one. E.g. onsider the olored graph of Figure 8. As an inferen e rule, it would allow to dedu e that all persons are in all o es. As an evolution rule, it says that when there are a person and an o e, a possible a tion is to assign this o e to that person . Consider a KB omposed of a set of fa ts G, a set of evolution rules E , and a set of onstraints C. Fa ts des ribe an initial world; evolution rules represent possible transitions from one world to other worlds;\nonstraints de ne onsisten y of ea h world; a su essor of a onsistent world is obtained by an evolution rule appli ation; given a SG Q, the dedu tion problem asks whether there is a path of onsistent worlds evolving from the initial one to a world satisfying Q.\nThe most general model of the SG family onsiders both kinds of rules, i.e. a set R of inferen e rules, and a set E of evolution rules. In the parti ular ase of the Sysiphus-I modelization, G andR des ribe the initial information about o e lo ations, persons and the group organization. R also en odes general knowledge (su h as properties of the dif relation put between two on ept nodes representing distin t entities). C represents obligations and interdi tions de ning what a eptable assignments are (in luding ardinality onstraints su h as a person annot be in several o es or a large o e annot ontain more than two persons , using the dif relation). E onsists of one evolution rule whose result is to pla e a person into an o e (it ould also be omposed of several rules onsidering spe i pre onditions before trying an assignment). The goal represents a situation where ea h person of the group has an o e. A solution to the problem is a world obtained from the initial one by a sequen e of o e assignments, where ea h person has an o e, while satisfying the allo ation onstraints."}, {"heading": "3.3 The SG Family", "text": "Let us now spe ify de nitions and notations on erning the SG family.\nDe nition 5 ( olored SGs) A olored simple graph is a pair K = (G; ) where G is a SG and is a mapping from V (G) into f0; 1g. The number asso iated to a node is alled the olor of the node. We denote by K\n(i)\nthe subgraph of G indu ed by i- olored nodes. The\nsubgraph K\n(0)\nmust form a SG (i.e. the neighbors of a relation node of K\n(0)\nmust also belong\nto K\n(0)\n).\nThe latter ondition (K\n(0)\nmust form a SG) is ne essary as soon as we onsider rules as\nolored SGs: should a rule not satisfy this ondition, its appli ation on a SG ould generate\na graph that is not a SG.\nA KB is denoted by K = (G;R; E ; C), where G is a set of simple graphs representing fa ts, R, E and C are three sets of olored simple graphs respe tively representing inferen e rules, evolution rules, and onstraints (positive ones in C + , negative ones in C ). Given a\nBaget & Mugnier\nKB K and a goal Q, the dedu tion problem asks whether Q an be dedu ed from K (we note Q K). If we impose some of the sets R, E or C to be empty, one obtains spe i reasoning models. Note that in the absen e of onstraints (C = ;), inferen e and evolution rules have the same behavior, thus R and E an be onfused. The SG family is then omposed of the six following models.\nthe SG model for K = (G; ;; ;; ;)\nthe SR model for K = (G; R; E ; ;)\nthe SGC model for K = (G; ;; ;; C)\nthe SRC model for K = (G; R; ;; C)\nthe SEC model for K = (G; ;; E ; C)\nthe SREC model for K = (G; R; E ; C)\nSin e a fa t has the same semanti s as a rule with an empty hypothesis, the set G is used in models names only when both rule sets R and E are empty. The hierar hy of these models is represented in Fig. 9. It highlights the de idability properties and the omplexity of the asso iated dedu tion problem. Noti e we divide non de idable problems into semi-de idable and truly unde idable problems. In the rst ase, an answer an be omputed in nite time for all positive instan es but not for all negative ones. In the se ond ase, there is no nite pro edure, neither for all positive instan es, nor for all negative ones.\nPSfrag repla ements\nSREC\nSRC\nSEC\nSGC\nSR\nSG\nP 2 - omplete\nNP- omplete\nSemi-de idable\nTruly unde idable\nFigure 9: The SG family: models and omplexity of the asso iated dedu tion problem"}, {"heading": "4. SGs and Rules: the SR Model", "text": "A simple graph rule (SG rule) embeds knowledge of form if A then B . The following de nition as a olored SG is equivalent to the more traditional de nition of a rule as an obje t omposed of two SGs related with oreferen e links used by Gosh and Wuwongse (1995), or Salvat and Mugnier (1996).\nThe Complexity of Rules and Constraints"}, {"heading": "4.1 De nitions and Notations", "text": "De nition 6 (SG Rules) A simple graph rule R is a olored SG. R\n(0)\nis alled its hy-\npothesis, and R\n(1)\nits on lusion.\nDedu tion depends on the notion of a rule appli ation: it is a graph transformation\nbased upon proje tion.\nDe nition 7 (Appli ation of a SG Rule) Let G be a SG, and R be a rule. R is appli-\nable to G if there exists a proje tion, say , from R\n(0)\n(the hypothesis of R) into G. In\nthat ase, the result of the appli ation of R on G a ording to is the SG G\n0\nobtained by\nmaking the disjoint union of G and of a opy of R\n(1)\n(the on lusion of R), then, for every\nedge (r; i; ), where 2 R\n(0)\nand r 2 R\n(1)\n, adding an edge with the same number between\n( ) and the opy of r. G\n0\nis said to be an immediate R-derivation from G.\nA derivation is a (possibly empty) sequen e of rule appli ations:\nDe nition 8 (Derivation) Let R be a set of rules, and G be a SG. We all R-derivation from G to G 0 a sequen e of SGs G = G\n0\n; : : : ; G\nk\n= G\n0\nsu h that, for 1 i k, G\ni\nis an\nimmediate R-derivation from G\ni 1\n, where R is a rule in R.\nTo dedu e a SG Q, we must be able to derive a SG into whi h Q an be proje ted. This\nnotion is aptured by the following de nition:\nDe nition 9 (SR-dedu tion) Let K = (G;R) be a KB and let Q be a SG. Q an be dedu ed from K (notation Q (G;R)) if there exists an R-derivation from G to a SG H su h that Q H."}, {"heading": "4.2 Logi al Semanti s", "text": "The semanti s is extended to translate rules: given a rule R, let R\n0\nand R\n1\nbe the two\nSGs respe tively orresponding to its hypothesis and its on lusion, i.e. R\n0\n= R\n(0)\nand\nR\n1\nis the SG obtained from R\n(1)\nby adding the neighbors of the relation nodes of R\n(1)\nwhi h are on ept nodes of R\n(0)\n. Then (R) = 8x\n1\n::: x\np\n( (R\n0\n) ! 9y\n1\n::: y\nq\n(R\n1\n))\nwhere (R\n0\n) and (R\n1\n) are the onjun tions of atoms asso iated with R\n0\nand R\n1\n, x\n1\n::: x\np\nare the variables of (R\n0\n) and y\n1\n::: y\nq\nare the variables of (R\n1\n) that do not appear in\n(R\n0\n). For instan e, onsider the rule R\n3\nin Fig. 5. Then (R\n3\n) = 8x(Resear her(x) !\n9y(Proje t(y) ^ member(x; y))). Should we interpret the olored graph C\n1\nin Fig. 7 as\na rule, its formula would be (C\n1\n) = 8x8y((Person(x) ^ Person(y) ^ works-with(x; y)) !\n9z(O e(z)^in(x; z)^in(y; z))). Noti e, unlike in lauses, variables proper to the on lusion are existentially quanti ed.\nThe following soundness and ompleteness result is obtained:\nTheorem 4 (Salvat & Mugnier, 1996; Salvat, 1998) Let K = (G;R) be a KB and Q be a SG. Then Q (G;R) i (S); (G); (R) (Q).\nNoti e this result assumes that graphs are given in normal form, and, if needed, put into\ntheir normal form after ea h rule appli ation.\nBaget & Mugnier"}, {"heading": "4.3 A Semi-de idable Problem", "text": "Coulondre and Salvat (1998) proved that SR-dedu tion is semi-de idable with a redu tion from the the impli ation problem for TGDs. The redu tion given by Baget (2001) (from the Halting Problem of a Turing Ma hine) points out that SR -dedu tion is a omputation model. We give here another redu tion, from the word problem in a semi-thue system, that we will use as the starting point in the proof of Prop. 10. This redu tion is also interesting in itself sin e it proves that, even when rules are of the form if path o x\n1\n: : : x\nk\ne then path o y\n1\n: : : y\nq\ne , SR-dedu tion remains semi-de idable.\nTheorem 5 (Coulondre & Salvat, 1998) SR-dedu tion is semi-de idable.\nProof: First he k that SR-dedu tion is not truly unde idable (i.e. there exists an algorithm that an de ide in nite time if the answer to the problem is yes ): when Q an be dedu ed from K, a breadth- rst sear h of the tree of all derivations from K provides the answer in nite time.\nWe then prove that no algorithm is ensured to halt when the answer to the problem is no . Let us now show that SR-dedu tion is not de idable by building a redu tion from the word problem in a semi-thue system (Thue, 1914). This problem was proven semi-de idable by Post (1947, redu tion to his orresponden e Problem).\nThe word problem an be expressed as: let m and m\n0\nbe two words, and =\nf\n1\n; : : : ;\nk\ng be a set of rules, ea h rule\ni\nbeing a pair of words (\ni\n;\ni\n): is there a derivation\nfrom m to m\n0\n? There is an immediate derivation from m to m\n0\n(we note m ! m\n0\n) if, for\nsome\nj\n, m = m\n1 j\nm\n2\nand m\n0\n= m\n1 j\nm\n2\n. A derivation from m to m\n0\n(we note m ; m\n0\n)\nis a sequen e m = m\n0\n! m\n1\n! : : :! m\np\n=m\n0\n.\nPSfrag repla ements\nU( )\nThis problem an easily be expressed in the SR model. One on ept type x\ni\nis assigned\nto ea h letter x\ni\n. There are three other on ept types: B (for begin ), E (for end ) and > (for\nanything ). > is the greatest on ept type and all other types are pairwise non- omparable.\nThere is one relation type s (for has su essor ). A word m = x\n1\n: : : x\nk\nis asso iated the\ngraph G(m), and to any rule = (y\n1\n: : : y\np\n; z\n1\n: : : z\nq\n) is asso iated the graph rule U( ), as\nrepresented in Fig. 10. By a straightforward proof (a re urren e on the smallest derivation length), we obtain that to every path from the node typed B to the node typed E ( begin to\nend ) in a graph R-derived from G(m), orresponds a word (and not a subword) derivable\nfrom m, and re ipro ally. It follows that m; m\n0\n, G(m\n0\n) (G(m);U( )). 2\nThe Complexity of Rules and Constraints\n5. SGs and Constraints: the SGC Model\nLet us now introdu e onstraints, whi h are used to validate knowledge. A knowledge base will be validated if it satis es every onstraint, and no dedu tion will be allowed unless the KB has been validated: in presen e of onstraints, dedu tion is de ned only on a onsistent knowledge base."}, {"heading": "5.1 De nitions and Some Immediate Properties", "text": "De nition 10 (Constraints) A positive (resp. negative) onstraint C is a olored SG. C\n(0)\nis alled the trigger of the onstraint, C\n(1)\nis alled its obligation (resp. interdi tion).\nA SG G -violates a positive (resp. negative) onstraint C if is a proje tion of the trigger of C into the irredundant form of G (resp. into G) that annot be extended (resp. that an be extended) to a proje tion of C as a whole. G violates C if it -violates C for some proje tion\nWe have to point out the importan e of the irredundan y ondition on the graph to be validated by positive onstraints: should we forget this ondition, there may be two equivalent SGs, su h that one satis es a positive onstraint and the other does not. Fig. 11 shows an example of su h graphs. G satis es C, but the equivalent (redundant) graph H, obtained by making the disjoint union of G and the trigger of C, does not. To avoid di erent onsisten y values for equivalent graphs, we have hosen to de ne positive onstraint satisfa tion w.r.t. the irredundant form of a SG. This problem does not o ur with negative\nonstraints. Indeed, let G\n1\nand G\n2\nbe two equivalent graphs and suppose G\n1\n-violates a\nnegative onstraint C; sin e there exists a proje tion from G\n1\ninto G\n2\n, say\n1\n,\n1\n\u00c6 is a\nproje tion from C to G\n2\n, thus G\n2\nalso violates C.\nTwo onstraints C\n1\nand C\n2\nare said to be equivalent if any graph that violates C\n1\nalso\nviolates C\n2\nand onversely. Any negative onstraint is equivalent to the negative onstraint\nobtained by oloring all its nodes by 1. Furthermore, negative onstraints are indeed a parti ular ase of positive ones: onsider the positive onstraint C 0 obtained from a negative\nonstraint C by oloring all nodes of C by 0, then adding a on ept node olored by 1, with type NotThere, where NotThere is in omparable with all other types and does not appear in any graph of the KB, ex ept in onstraints. Then a simple graph G violates the onstraint C if and only if it violates C 0 . Positive onstraints stri tly in lude negative onstraints, in the sense that the asso iated onsisten y problems are not in the same omplexity lass (the proof follows from Th. 8).\nProperty 3 Unless\nP 2 = o-NP, positive onstraints are a stri t generalization of negative\nones.\nBaget & Mugnier\nSin e negative onstraints are indeed a parti ular ase of positive ones, we will now, unless indi ated otherwise, denote by a set of onstraints a set of positive onstraints: some of them an be equivalent to negative ones.\nDe nition 11 (Consisten y/Dedu tion in SGC) A KB K = (G; C) is onsistent if G satis es all onstraints of C. Otherwise, it is said in onsistent. A SG Q an be dedu ed from K if K is onsistent and Q an be dedu ed from G.\nNote that a SG Q that violates a onstraint of K may still be dedu ed from K. It does\nnot matter sin e Q is a partial representation of knowledge dedu ible from K."}, {"heading": "5.2 Relationships with Logi s", "text": "Dedu tion in SGC is essentially non monotoni . Adding information to G an trigger a new\nonstraint, and thus an reate a new violation: sin e nothing an be dedu ed from an in onsistent knowledge base, previous dedu tions are no longer valid. That is why for SGC and more general models (next se tions), it is impossible to obtain results of form Q an be dedu ed from the knowledge base K i (K) (Q) as it was the ase for SG and SR.\nHowever, the notion of onsisten y an be translated into FOL. For negative onstraints, the orresponden e is immediate, and relies on proje tion soundness and ompleteness w.r.t. the semanti s (theorem 1). Intuitively, a SG G violates a negative onstraint C if and only if the information represented by C is dedu ible from the information represented by G.\nTheorem 6 A SG G violates a negative onstraint C = (C\n0\n; ) i (S); (G) (C\n0\n),\nwhere C\n0\nis the SG underlying C (and (C\n0\n) is the logi al formula asso iated to this SG).\nConsisten y relative to positive onstraints an be explained with FOL, translating proje tion into a notion of logi al substitution (Chein & Mugnier, 1992) between the formulas asso iated to graphs. We all an S-substitution from (G) into (H) a substitution of terms of (G) by terms of (H) su h that onstants of (G) are kept invariant and, for any atom t(e\n1\n; :::; e\nk\n) of (G), there is t\n0\nt su h that t\n0\n( (e\n1\n); :::; (e\nk\n)) is an atom of (H).\nThe following property holds:\nProperty 4 Every proje tion from G to H de nes an S-substitution from (G) to\n(H). Assuming that H is in normal form, the onverse also holds.\nProof: Let be a proje tion from G to H. For ea h variable x of (G), let be the unique generi on ept node su h that x = ( ), then (x) = ( ( )). Re ipro ally, provided that H is in normal form, the appli ation from on ept nodes of G to on ept nodes of H, mapping ea h to the node 0 su h that ( ( )) = ( 0 ) is a proje tion from G to H. Note that, unless H is in normal form, 0 is not uniquely de ned when ( 0 ) is a onstant. 2\nCorollary 1 A graph G -violates a onstraint C i the S-substitution from (C\n(0)\n) into\n(G) asso iated with annot be extended to an S-substitution from (C) into (G).\nThe Complexity of Rules and Constraints\nAnother bridge an be built using rules. Indeed, a graph G satis es a positive onstraint C if and only if, onsidering C as a rule, all appli ations of C on G produ e a graph equivalent to G. Or, more spe i ally:\nProperty 5 A SG G -violates a positive onstraint C i , onsidering C as a rule, the appli ation of C on G a ording to produ es a graph not equivalent to G.\nProof: Let C be a onstraint and G be a SG su h that G satis es C. If\n0\nis a proje tion\nfrom C\n(0)\ninto G, let us onsider the graph G\n0\nobtained by the appli ation of C ( onsidered\nnow as a rule) on G a ording to\n0\n. Let us now build the following proje tion\n0\nfrom G\n0\ninto G: for ea h node v,\n0\n(v) = v if v belongs to G; otherwise, v is a opy of a node w of\nC\n(1)\n, and if is one of the proje tions from C into G that extends\n0\n, we have\n0\n(v) = (w).\nThen\n0\nis a proje tion of G\n0\ninto G, and sin e G trivially proje ts into G\n0\n, they are thus\nequivalent.\nThis proves the ( part of property 5. For the ) part, we use the following property, proved by Cogis and Guinaldo (1995). In their property (prop. 6 of their paper) the SGs\nonsidered are onne ted graphs, but the proof holds for non onne ted graphs.\nProperty 6 (Cogis & Guinaldo, 1995) Let G be a SG and irr(G) be one of its equivalent irredundant subgraphs (if G is not redundant then irr(G) = G). Then there exists a folding from G to irr(G), i.e. a proje tion f from G into irr(G), su h that the restri tion of f to nodes of irr(G) is the identity (for every node x of irr(G), f(x) = x).\nSuppose now G -violates C. Sin e onstraint violation is de ned with respe t to the irredundant form of a graph, we an onsider, without loss of generality, that G is irredundant. We denote by G 0 the graph obtained by the appli ation of C (again, onsidered now as a rule) on G a ording to . We prove that G 0 equivalent to G leads to a ontradi tion.\nIf G\n0\nis equivalent to G, then there exists a proje tion from G\n0\ninto G. And sin e G is an\nirredundant subgraph of G\n0\n, there exists a folding f from G\n0\ninto G (property 6). Consider\nnow\n0\nthe proje tion from C to G de ned as follows: for any node x of C\n(0)\n,\n0\n(x) =\nf( (x)), otherwise let x\n0\nbe the opy of x in G\n0\n, we have\n0\n(x) = f(x\n0\n). Sin e for all x in\nC\n(0)\n, f( (x)) = (x),\n0\nextends . This ontradi ts the hypothesis G -violates C . Thus\nG\n0\nis not equivalent to G. 2\nProperty 7 If a SG G satis es a positive onstraint C, then any graph in a fCg-derivation of G is equivalent to G.\nProof: Let G = G\n0\n; :::; G\nk\nbe a fCg-derivation of G. From property 5, ea h G\ni\n, 1 i k,\nis equivalent to G\ni 1\n, thus by transitivity, is equivalent to G. 2\nUsing soundness and ompleteness of the SR dedu tion, and properties 5 and 7, one\nobtains the following relation with FOL dedu tion.\nTheorem 7 A SG G violates a positive onstraint C i there exists a SG G\n0\nsu h that\n(S); (G); (C) (G\n0\n) and not (S); (G) (G\n0\n), where (C) is the translation of C\nonsidered as a rule.\nBaget & Mugnier\nThis theorem an be reformulated in terms of abdu tive inferen e (using in fa t indire t abdu tion, see, for example, Konolige, 1996). Indeed, given a ba kground theory\n= (S); (G) and an observation O = : (C), G violates C i there is an abdu tive\nexplanation for O of the form :F , where F is a formula belonging to FOL(^;9)."}, {"heading": "5.3 Computational Complexity", "text": "The problem does a given graph satisfy a given onstraint? is o-NP- omplete if this\nonstraint is negative (sin e we must he k the absen e of proje tion), but be omes\nP 2 -\nomplete for a positive one (\nP 2 is o-NP\nNP\n).\nTheorem 8 (Complexity in SGC) SGC- onsisten y is\nP 2 - omplete (but is o-NP- om-\nplete if all onstraints are negative).\nProof: Without hange of omplexity, one an onsider that C is omposed of only one positive onstraint, say C. First re all that de iding whether a SG G satis es C is done on the irredundant form of G. We shall onsider two ways of integrating this fa t in the\nomplexity of SGC- onsisten y. One way is to assume that the irredundant form of G is omputed before the onsisten y he k. This an be a hieved with a number of alls to a proje tion ora le linear in the size of G (Mugnier, 1995). But, sin e we have then to solve a fun tion problem ( ompute the irredundant form of G) instead of a de ision problem (is G irredundant?), we prefer to integrate irredundan y into the onsisten y he k: then, for a proje tion\n0\nfrom the trigger of C into G, the proje tion from C to G we look for does\nnot ne essarily extends\n0\n, but extends the omposition of a proje tion from G into one of\nits subgraphs (possibly equal to G itself) and\n0\n.\nFirst, SGC- onsisten y belongs to\nP 2 sin e it orresponds to the language L =\nfx j 8y\n1\n9y\n2\nR(x; y\n1\n; y\n2\n)g, where x en odes an instan e (G;C) of the problem and\n(x; y\n1\n; y\n2\n) 2 R i y\n1\nen odes a proje tion\n0\nfrom C\n(0)\ninto G and y\n2\nen odes a proje tion\nG\nfrom G into one of its subgraphs and a proje tion from C into G s.t. [C\n(0)\n\u2104 =\nG\n\u00c6\n0\n.\nNote that if G is in irredundant form, then\nG\nis an automorphism.\nNow, let us onsider the problem B\n2\n: given a boolean formula E, and a partition\nfX\n1\n; X\n2\ng of its variables, is it true that for any truth assignment for the variables in X\n1\nthere exists a truth assignment for the variables in X\n2\ns.t. E is true? This problem is\nP 2 -\nomplete, sin e its omplementary B\n2\nis shown to be\nP 2 - omplete by Sto kmeyer (1977).\nIn order to build a polynomial redu tion to SGC- onsisten y, we use a restri tion of this problem to k-CNFs, i.e. onjun tions of disjun tions with at most k literals per lause. Let us all 3-SAT\n2\nthe spe ial ase where E is a 3-CNF, in other words an instan e of 3-SAT.\nThen 3-SAT\n2\nis also\nP 2 - omplete. Indeed, in the same paper (Th. 4.1), Sto kmeyer shows\nthat B\n2\nwith E restri ted to a 3-disjun tive normal form (3-DNF) remains\nP 2 - omplete.\nSin e the negation of a 3-DNF is a 3-CNF, it follows that the omplementary problem B\n2\nwith E restri ted to a 3-CNF is\nP 2 - omplete.\nLet us now redu e 3-SAT\n2\nto SGC- onsisten y. The transformation used is very simi-\nlar to the one from 3-SAT to SG-dedu tion (proof of theorem 2), illustrated in Fig. 4. Let E be an instan e of 3-SAT. Let G(E) and Q(E) be the SGs obtained by the transformation des ribed in the proof of Th. 2. The onstraint C(E) = (Q(E); (X\n2\n)) is obtained by adding\na oloration to Q(E): all relation nodes obtained from lauses (nodes typed C\ni\n) and all nodes\nThe Complexity of Rules and Constraints\n1 2\n3 1\n2 3 ...\n1 2\n3 1\n2 3\nvalval val val val val val val\na b c d\nat af bt bf ct cf dt df\nC1 C1 C1 C1 C1 C1 C1 C2 C2 C2 C2 C2 C2 C2\na b\nav\nval val\nbv cv dv\nval val\nC1 C2\nc d\nPSfrag repla ements\nG C\nFigure 12: Example of transformation from 3-SAT 2 to SGC- onsisten y\nobtained from variables in X\n2\n( on ept nodes typed x or xv and relation nodes typed val)\nare olored by 1 (i.e. belong to the obligation). On e again, having lauses of bounded size leads to a polynomial transformation. The simple graph G and the positive onstraint C presented in Fig. 12 are obtained from the 3-SAT formula (a _ b _ : ) ^ (:a _ _ :d) and the partition X\n1\n= fa; bg;X\n2\n= f ; dg.\nEa h truth assignment of the variables of E s.t. E is true naturally gives a proje tion from C into G, and re ipro ally (as indi ated in the proof of Th. 2). Furthermore, any truth assignment for the variables of X\n1\nnaturally gives a proje tion from C\n(0)\ninto G, and\nre ipro ally. Thus, the question is it true that for any truth assignment for the variables in X\n1\nthere exists a truth assignment for the variables in X\n2\ns.t. E is true? is equivalent to\nthe question is it true that for any proje tion\n0\nfrom C\n(0)\ninto G there exists a proje tion\nfrom C into G extending\n0\n? . 2\nNote that this redu tion is less straightforward than the one we proposed in (Baget &\nMugnier, 2001), but it will be used as a basis for the proof of Th. 12.\nCorollary 2 Dedu tion in SGC is\nP 2 - omplete.\n6. Rules and Constraints: SEC=SRC=SREC\nIn presen e of onstraints, the two kinds of rules, inferen e rules R and evolution rules E , de ne two alternative models."}, {"heading": "6.1 De nitions and Notations", "text": "In SEC, G is seen as the initial world, root of a potentially in nite tree of possible worlds, and E des ribes the possible evolutions from one world to others. The dedu tion problem asks whether there is a path of onsistent worlds from G to a world satisfying Q.\nDe nition 12 (SEC-dedu tion) Let K = (G; E ; C) be a KB, and let Q be a SG. Q an be dedu ed from K if there is an E-derivation G = G\n0\n; : : : ; G\nk\nsu h that, for 0 i k, (G\ni\n; C)\nis onsistent and Q an be dedu ed from G\nk\n.\nIn SRC, G provided with R is a nite des ription of a potentially in nite world, that has to be onsistent. Applying a rule to G an reate in onsisten y, but a further appli ation of a rule may restore onsisten y. Let us formalize this notion of onsisten y restoration.\nBaget & Mugnier\nSuppose there is a -violation of a positive onstraint C in G; this violation (C; ) is said to be R-restorable if there exist an R-derivation from G into a SG H and a proje tion 0 from H into irr(H) su h that the proje tion 0 \u00c6 of the trigger of C into irr(H) an be extended to a proje tion of C as a whole. The violation of a negative onstraint an never be restored. Note that the R-restoration an reate new violations, that must themselves be proven R-restorable.\nDe nition 13 (SRC- onsisten y and SRC-dedu tion) A KB K = (G;R; C) is onsistent if, for any SG H that an be R-derived from G, for every onstraint C 2 C, for every -violation of C in H, (C; ) is R-restorable. A SG Q an be dedu ed from K if K is\nConsider for instan e a KB ontaining the SG G in Fig. 13, expressing the existen e of the number 0, a onstraint and a rule, both represented by the olored SG K. The\nonstraint asserts that for every integer n, there must be an integer n\n0\n, su essor of n. If\nthe rule is an evolution rule, G is seen as an in onsistent initial world (there is no su essor of 0 in G) and nothing will be dedu ed from this KB. If the rule is an inferen e rule, its appli ation immediately repairs the onstraint violation, while reating a new integer, that has no su essor, thus a new violation. Finally, every onstraint violation ould eventually be repaired by a rule appli ation, and the KB should be proven onsistent.\nLet us point out that the SR model is obtained from SRC or SEC when C is empty, and\nSGC is obtained from SRC (resp. SEC) when R (resp. E) is empty.\nThe SREC model ombines both derivation s hemes of the SRC and SEC models. Now, G des ribes an initial world, inferen e rules of R omplete the des ription of any world,\nonstraints of C evaluate the onsisten y of a world, evolution rules of E try to make a onsistent world evolve into a new, onsistent one. The dedu tion problem asks whether G an evolve into a onsistent world satisfying the goal.\nDe nition 14 (SREC-dedu tion) A SG G\n0\nis an immediate RE-evolution from a SG G\nif there exists an R-derivation from G into G\n00\nand an immediate E-derivation from G\n00\ninto\nG\n0\n. An RE-evolution from a SG G to a SG G\n0\nis a sequen e of SGs G = G\n0\n; : : : ; G\nk\n= G\n0\nsu h that, for 0 i k, (G\ni\n;R; C) is onsistent and, for 1 i k, G\ni\nis an immediate\nRE-evolution from G\ni 1\n. Given a KB K = (G;R; E ; C), a SG Q an be dedu ed from K if\nthere is an RE-evolution G = G\n0\n; : : : ; G\nk\nsu h that Q an be dedu ed from (G\nk\n;R).\nWhen E = ; (resp. R = ;), one obtains the SRC model (resp. SEC ).\nThe Complexity of Rules and Constraints\n6.2 Consisten y in SRC and Logi s\nTo translate SRC-dedu tion in logi s, a starting point ould be to extend the logi al translation of SGC- onsisten y given in Th. 7 to a translation of SRC- onsisten y. However, the following theorem points out the limitations of this approa h.\nTheorem 9 Let K = (G;R; C) be a KB. If there exists a SG G\n0\nsu h that (S); (G); (R);\n(C) (G\n0\n) and not (S); (G); (R) (G\n0\n), where (C) is the translation of the\nonstraints of C onsidered as rules, then K is in onsistent. However, the onverse is false\nin the general ase.\nProof: We rst prove the positive part of this theorem. If there exists su h a graph G\n0\n,\nthen (Th. 4) there is a (R [ C)-derivation ( onsidering the olored graphs of C as rules) G = G\n0\n; : : : ; G\nk\nsu h that G\n0\nproje ts to G\nk\n. See that G\nk\nannot be dedu ed from (G;R),\notherwise G\n0\nwould also be dedu ible from (G;R). Let us onsider the rst G\ni\nfrom this\nderivation that is not dedu ible from (G;R). Then G\ni\nis obtained from G\ni 1\n(a graph\nR-dedu ible from G) by applying a rule C\nq\n2 C following a proje tion . Sin e G\ni 1\nis\ndedu ible from (G;R), then there exists a graph H R-derivable from G su h that G\ni 1\nproje ts into H. Let us all\n0\nsu h a proje tion, and onsider the proje tion\n00\n=\n0\n\u00c6\nof the hypothesis/trigger of the rule/ onstraint C\nq\ninto H. We now have to prove that 1)\nH\n00\n-violates C\nq\n, and 2) this violation is not R-restorable. Suppose 1) or 2) is false. Then\nthere would exist a graph H\n0\nR-derived from H su h that\n00\nan be extended to a proje tion\nof C\nq\nas a whole in the irredundant form of H\n0\n. This is absurd, sin e is a proje tion of\nG\ni\nin a graph R-derivable from G.\nThe ounterexample presented in Fig. 14 is su ient to prove the negative part of the\ntheorem.\nA graph G\nA positive onstraint CA rule R\nIt is immediate to he k that every graph that an be fR;Cg-derived from G an also be fRg-derived from G. However, the proje tion of the trigger of C into the unique node of G de nes a violation of C that will never be restored. 2\nWe will study in the next se tion (Th. 11) a parti ular ase of rules where the onverse\nof Th. 9 is true."}, {"heading": "6.3 Unde idability of the Asso iated Dedu tion Problems", "text": "Theorem 10 (Complexity in SEC=SRC) SEC-dedu tion is semi-de idable. Both SRC-\nonsisten y and SRC-dedu tion are truly unde idable.\nBaget & Mugnier\nProof: SEC in ludes SR thus SEC-dedu tion is not de idable. When Q is dedu ible from K, a breadth- rst sear h of the tree of all derivations from K, ea h graph being he ked for onsisten y, ensures that G\nk\nis found in nite time. For SRC, we show that he king\nonsisten y is truly unde idable. Let K be a KB where C ontains a positive onstraint C\n+\nand a negative onstraint C , both with an empty trigger. For proving onsisten y, one has to prove that C 6 (G;R), and the algorithm does not ne essarily stop in this ase (from semi-de idability of dedu tion in SR). The same holds for the omplementary problem (proving in onsisten y) taking C + instead of C , hen e the unde idability. 2\nAs a generalization of SRC, dedu tion in SREC is truly unde idable. Next se tion studies a de idable fragment of SREC, whi h in parti ular was su ient for the Sysiphus-I modelization."}, {"heading": "7. De idability and Complexity of some Parti ular Cases", "text": "A rule appli ation may add redundant information to a graph. In general, dete ting redundan y is di ult (re all determining whether a graph is redundant is an NP- omplete problem), but there are some trivial ases, whi h we will get rid of, sin e they may reate arti ially in nite derivations. First, on e a rule has been applied to a graph a ording to a given proje tion, it an be applied again to the resulting graph, a ording to the same proje tion, and this inde nitely. These further appli ations obviously produ e redundant information. They are said to be useless. Another ase of trivial redundan y in a graph is that of twin relation nodes, i.e. with exa tly the same neighbors in the same order. Consider for instan e a rule of kind if r(x; y) then r(x; y) . This rule an be applied inde nitely, even if useless appli ations are avoided, but all appli ations reate twin relation nodes. In what follows, we onsider that the onstru tion of the graph resulting from a rule appli ation prevents the generation of twin relation nodes, and that a derivation does not omprise any useless rule appli ation.\nGiven a set of rules R and an R-derivation leading to a SG H, H is said to be losed if no rules of R an be applied to H in an original way, i.e. all appli ations of any rule of R on H are useless. More formally, H is losed w.r.t. R and w.r.t. an R-derivation H\n0 1\n:::\nk\nH\nk\n= H, where H\ni\n(1 i k) is the graph obtained by the appli ation of a rule\nof R on H\ni 1\na ording to the proje tion\ni\n, if for every rule R of R , for every proje tion\nfrom R\n(0)\ninto H, there exists a proje tion\ni\nfrom R\n(0)\nto H\ni 1\n(1 i k), su h that\n=\ni\n.\nGiven a set of rules R and a graph G, if a losed graph is R-derivable from G, then it is unique. Moreover, if this graph is derivable with n rule appli ations, then n is the maximal length of an R-derivation, and all derivations of length n lead to it. When it exists, we all it the losure of G w.r.t. R, whi h we note G\nR\n.\nLet us also de ne another notion, related to the fa t that we are interested in irredundant graphs. In this perspe tive, let us say that an irredundant graph H is full w.r.t. a set of rules R if every graph that an be obtained by applying one of those rules on H is equivalent to H. Assuming that G is an irredundant graph and that graphs obtained by a rule appli ation are put into irredundant form, if a full graph an be derived from G then it is unique.\nInformally, the notion of a losed graph translates the fa t that nothing an be added that has not been already added, whereas the notion of a full graph says that nothing an\nThe Complexity of Rules and Constraints\nbe added that really adds new information to the graph. When the losure of a graph G exists, then the irredundant form of this losure is exa tly the full graph derivable from G. But note that when the full graph exists, the losure does not ne essarily exists (see proof of Prop. 10)."}, {"heading": "7.1 Finite Expansion Sets", "text": "The notion of a full graph being more general than the notion of a losure, we an generalize the de nition of nite expansion sets used in a previous paper (Baget & Mugnier, 2001), and adopt the following one:\nDe nition 15 (Finite expansion sets) A set of rules R is alled a nite expansion set if, for every SG G, there exists an R-derivation G : : : G 0 su h that irr(G 0 ) is full w.r.t. R. We denote by G R this full graph.\nIf R is a nite expansion set (f.e.s), dedu tion in SR be omes de idable (but it is not a ne essary ondition for de idability). Indeed, in order to determine whether a SG Q is dedu ible from a KB (G;R), it su es to ompute G R , then to he k the existen e of a proje tion from Q to G R . Similarly, onsisten y he ks in SRC are done on G R .\nProperty 8 (Finite expansion sets) Let K = (G;R; C) be a KB where R is a nite expansion set. Then K is onsistent i (fG R g; C) is onsistent, and a SG Q an be dedu ed from (G;R) i Q an be dedu ed from (fG R g).\nThis property allows us to prove that the onverse of Th. 9 is true when R is restri ted\nto a nite expansion set.\nTheorem 11 Let K = (G;R; C) be a KB, where R is a nite expansion set. Then K is in onsistent i there exists a SG G 0 su h that (S); (G); (R); (C) (G 0 ) and not\n(S); (G); (R) (G\n0\n), where (C) is the translation of the onstraints of C onsidered\nas rules.\nProof: (() holds as a parti ular ase of Th. 9. Let us now prove the ()) part. Sin e K is in onsistent, the previous property asserts that (fG R g; C) is in onsistent. Th. 7 ensures that there exists a graph H su h that 1) (S); (G R ); (C) (H), and 2) (S); (G R ) 6 (H). Sin e (S); (G); (R) (G R ) (Th. 4), we obtain (S); (G); (R); (C) (H). Let us now suppose that (S); (G); (R) (H), and prove that it is absurd. In that ase, there would be a graph G 0 R-derivable from G su h that H proje ts into G 0 (Th. 4 again). And sin e H G 0 G R , we should have (S); (G R ) (H) (Th. 1): this is absurd. 2\nMore generally, one obtains the following de idability results, depending on whether R,\nE , or R[ E is a nite expansion set.\nProperty 9 (Complexity with nite expansion rule sets)\nWhen R is a f.e.s, dedu tion in SR is de idable, onsisten y and dedu tion in SRC are de idable, dedu tion in SREC is semi-de idable.\nBaget & Mugnier\nWhen E is a f.e.s, dedu tion in SEC is de idable, but remains truly unde idable in SREC.\nWhen R[ E is a f.e.s, dedu tion in SREC is de idable.\nProof: Suppose R is a f.e.s. De idability of problems in SR and SRC follows from property 8. In SREC, when the answer is \"yes\", it an be obtained in nite time; we pro eed as for SEC (see proof of theorem 10) but onsisten y he ks are done on the full graph instead of the graph itself.\nNow, suppose E is a f.e.s. G\nE\nexists, thus the derivation tree in SEC is nite, and\nonsisten y he ks may only ut some parts of this tree. Dedu tion in SREC remains unde idable be ause when E = ;, one obtains the SRC model, in whi h dedu tion is truly unde idable.\nFinally, if R[E is a f.e.s., G\nR[E\nexists, thus the derivation tree is nite, and onsisten y\nhe ks may only ut parts of this tree. 2\nNote that the ondition R[E is a nite expansion set is stronger than both R and E\nare nite expansion sets . The following property justi es this ondition:\nProperty 10 If both R and E are nite expansion sets, then SREC-dedu tion is not ne essarily de idable.\nProof: We build a redu tion from word problem in a semi-thue system (Thue, 1914) to SREC-dedu tion, where the obtained rule sets R and E are both nite expansion sets. This redu tion relies on the one built for proving the semi-de idability of SR-dedu tion (theorem 5).\nLet us rst present the two kind of nite expansion sets used in this redu tion. E is a nite expansion set sin e only relation nodes are present in the on lusion of rules: E is indeed a parti ular ase of range-restri ted rules (see Prop. 11). R is also a nite expansion set sin e, for every rule in R, the hypothesis is dis onne ted from the on lusion (we all these rules dis onne ted). Note this time that, though R is trivially a f.e.s., the losure of a graph w.r.t. R does not ne essarily exist.\nRe all the word problem takes as input two words m and m\n0\nand a set of rules\n= f\n1\n; : : : ;\nk\ng, ea h rule\ni\nbeing a pair of words (\ni\n;\ni\n), and asks whether there is a\nderivation from m to m\n0\n. There is an immediate derivation from m to m\n0\n(we note m! m\n0\n)\nif, for some\nj\n, m = m\n1 j\nm\n2\nand m\n0\n= m\n1 j\nm\n2\n. A derivation from m to m\n0\n(we note\nm; m\n0\n) is a sequen e m = m\n0\n! m\n1\n! : : :! m\np\n= m\n0\n.\nWe have shown how this problem an be expressed in the SR model: to a word m =\nx\n1\n: : : x\nk\nis asso iated the graph G(m), and to any rule = (y\n1\n: : : y\np\n; z\n1\n: : : z\nq\n) is asso iated\nthe graph rule U( ), as represented in Fig. 15 (where > is greater than all other on ept types). Then m; m 0 i G(m 0 ) (G(m);U( )) (see proof of Th. 5).\nLet us now split ea h obtained rule U( ) into one dis onne ted inferen e rule R( ) and one range-restri ted evolution rule E( ). We distinguish in the hypothesis of E( ) two subgraphs: the origin, whi h orresponds to the hypothesis of U( ), and the destination, whi h orresponds to the on lusion of R( ). It is easy to he k that one part of the above equivalen e still holds: m ; m 0 ) G(m 0 ) (G(m);R( ) [ E( )). However, the onverse is no longer valid: he k by exemple that, if = f = (a; )g, we have\nThe Complexity of Rules and Constraints\nPSfrag repla ements\nG( ) (G(aba);R( ) [ E( )) though aba 6; (apply R( ) on e, then two times E( ) using di erent nodes [a\u2104 but the same node [ \u2104).\nWe thus need the notion of a good appli ation of a rule E( ): it is su h that the proje tion of its destination part is a mapping to a subgraph that was obtained by applying the rule R( ), and that was never used to proje t the destination part of any rule of E( ), in luding E( ) itself. Moreover, the origin and destination must be proje ted into disjoint paths (i.e. a node of the origin annot have the same image has a node of the destination). If we restri t ourselves in some way to good appli ations of rules of E( ), then we an verify that G(m 0 ) (G(m);U( )) i G(m 0 ) (G(m);R( ) [ E( )).\nThis restri tion is obtained by using onstraints, that will allow every good appli ation\nof a rule of E( ), and be violated by the obtained graph otherwise. Let us note R\n0\n( )\nand E\n0\n( ) the new sets of inferen e rules and evolution rules. The new transformation is\ndes ribed in Fig. 16. It allows to obtain the following result: m ; m\n0\n, G\n0\n(m\n0\n)\n(G\n0\n(m);R\n0\n( ); E\n0\n( ); fC\n+\n; C g). The names of relation types =, 2 and! have been hosen\nto give an intuitive idea of their role but they are just types as others. A relation node (2) from a node [z\nj\n\u2104 to a node [\ni\n\u2104 means that the letter z\nj\nhas been obtained by applying\nthe rule\ni\n. A relation node (!) from [y\nk\n\u2104 to [\ni\n\u2104 means that the letter y\nk\nbelongs to the\nsubword on whi h the rule\ni\nhas been applied. = is used to indi ate that two on ept nodes\nhave to be proje ted on the same node (in CG terms, we would see it as a o-referen e link). The evolution rule E 0 (\ni\n), starting from a path representing the subword\ni\nused to apply\ni\nand from the representation of\ni\ngenerated by R\n0\n(\ni\n), produ es the two relation nodes\ntyped s simulating the appli ation of U(\ni\n), thus\ni\n, and the relation nodes typed ! whi h\nmark the representation of\ni\nas used by an appli ation of\ni\n. The negative onstraint C\nprevents an appli ation of E\n0\n(\ni\n) in whi h two nodes of the origin and destination parts have\nthe same image (a node ne essarily obtained by some appli ation of the rule R\n0\n(\ni\n)); while\nthe positive onstraint C\n+\nprevents su h a subgraph to be used twi e for applying E\n0\n(\ni\n)\nwith di erent proje tions of its origin: it says that in this ase, the two proje tions of the origins must be the same. 2"}, {"heading": "7.2 Range Restri ted Rules", "text": "Let us now fo us on the rules that were used to solve the Sisyphus-I problem. A bi olored graph (rule or onstraint) is said to be range restri ted (r.r.) if its se ond part ( on lusion or obligation) does not omprise any generi on ept node. We use this expression by analogy\nBaget & Mugnier\nPSfrag repla ements\nwith the so- alled rules in Datalog, where all variables of the head must appear in the body (Abiteboul et al., 1995). Su h rules are also alled safe in the literature. Consider for instan e the rules of Fig. 5: R\n1\nand R\n2\nare range restri ted, while R\n3\nis not.\nAlso noti e that a range restri ted rule R an be de omposed into an equivalent set of rules D(R) with exa tly one node in on lusion (either an individual on ept node or a relation node). There is one rule for ea h node of the on lusion of R: for ea h individual node , one rule with same hypothesis as R and a on lusion restri ted to ; for ea h relation node r, one rule whose hypothesis is the disjoint union of the hypothesis of R and of all individual on ept nodes of the on lusion of R, and on lusion is r, with same neighbors as in R. The logi al interpretation of su h rules are (fun tion free) range restri ted Horn rules. If a SG Q is dedu ible from a set of r.r. rules R, then it is dedu ible from the set of their de ompositions D(R), and re ipro ally. However, as soon as onstraints are involved, this equivalen e does not hold any more.\nProperty 11 A set of range restri ted rules is a nite expansion set.\nProof: Sin e all graphs are put into normal form, an individual marker appears at most on e in a graph. The number of individual nodes reated by the set of rules is bounded by M = jRj max\nR2R\njR\n(1)\nj. So the number of relation nodes reated (no twin relation\nnodes are reated) is bounded by N =\nP\nk n=1 P n (jV C (G)j +M) n , where P n is the number\nof relation types with a given arity n appearing in a rule on lusion, and k is the greatest arity of su h a relation type. So the losure of a graph an be obtained with a derivation of length L N +M . We thus obtain G R in nite time. 2\nNote that, ontrary to general nite expansion sets, existen e of the losure and existen e of the full graph are equivalent notions in the ase of range restri ted rules. It follows from the proof of property 11 that the length of a derivation from G to G R is in O(n k+1 ), where n is the size of (G;R) and k is the greatest arity of a relation type appearing in a rule on lusion. This rough upper bound ould be re ned but it is su ient to obtain the following property, whi h will be used throughout the proofs of omplexity results involving range restri ted rules.\nThe Complexity of Rules and Constraints\nProperty 12 Under the assumption that the maximum arity of relation types is a onstant, given a range restri ted set of rules R, the length of an R-derivation from G is polynomially related to the size of (G;R).\nIn what follows, we assume that the arity of relation types is bounded by a onstant.\nTheorem 12 (Complexity with range restri ted rules) When E and R are range restri ted rules:\nDedu tion in SR is NP- omplete.\nConsisten y and dedu tion in SRC are\nP 2 - omplete.\nDedu tion in SEC and SREC is\nP 3 - omplete.\nProof: The following results heavily rely on Prop. 12: all derivations involved being of polynomial length, they admit a polynomial erti ate (the sequen e of proje tions used to build the derivation).\nNP- ompleteness of SR-dedu tion. The problem belongs to NP. Indeed, a polynomial\nerti ate is given by a derivation from G to a graph G\n0\n, followed by a proje tion from\nthe goal to G\n0\n. When R = ;, one obtains SG-dedu tion (proje tion he king), thus the\nNP- ompleteness.\nP 2 - ompleteness of SRC- onsisten y and SRC-dedu tion. Re all the onsisten y\nhe k involves the irredundant form of G. In order to lighten the problem formulation, we assume here that all SGs are irredundant, but irredundan y an be integrated without in reasing the onsisten y he k omplexity: see the proof of theorem 8. SRC- onsisten y belongs to P\n2\nsin e it orresponds to the language L = fx j 8y\n1\n9y\n2\nR(x; y\n1\n; y\n2\n)g, where\nx en odes an instan e (G;R; C) of the problem and (x; y\n1\n; y\n2\n) 2 R i y\n1\n= (d\n1\n;\n0\n), where\nd\n1\nis a derivation from G to G\n0\n,\n0\nis a proje tion from the trigger of a onstraint C\ni(0)\ninto G\n0\n, y\n2\n= (d\n2\n;\n1\n), d\n2\nis a derivation from G\n0\nto G\n00\nand\n1\nis a proje tion from C\ni\ninto\nG\n00\ns.t.\n1\n[C\ni(0)\n\u2104 =\n0\n. R is polynomially de idable and polynomially balan ed (sin e the\nlengths of d\n1\nand d\n2\nare polynomial in the size of the input). When R = ;, one obtains the\nproblem SGC- onsisten y, thus the\nP 2 - ompleteness. Sin e SRC-dedu tion onsists in\nsolving two independent problems, SRC- onsisten y (\nP 2 - omplete) and SR-dedu tion\n(NP- omplete), and sin e NP is in luded in\nP 2 , SRC-dedu tion is also P 2 - omplete.\nP 3 - ompleteness of SEC-dedu tion. As for SRC (see above), we assume that all SGs\nare irredundant. The question is are there a derivation from G to a SG G\n0\nand a proje tion\nfrom Q into G\n0\n, su h that for all G\ni\nof this derivation, for all onstraint C\nj\n, for all proje tion\nfrom C\nj(0)\ninto G\ni\n, there exists a proje tion\n0\nfrom C\nj\ninto G\ni\ns.t.\n0\n[C\nj(0)\n\u2104 = ? . R\nis polynomially de idable and polynomially balan ed (sin e the size of the derivation from G to G 0 is polynomially related to the size of the input). Thus, SEC-dedu tion is in P\n3\n.\nIn order to prove the ompleteness, we build a redu tion from a spe ial ase of the problem B\n3\n, where the formula is a 3-CNF (i.e. an instan e of 3-SAT): given a formula E, whi h is a\nonjun tion of lauses with at most 3 literals, and a partition fX\n1\n;X\n2\n;X\n3\ng of its variables,\ndoes there exist a truth assignment for the variables in X\n1\n, su h that for all truth assignment\nfor the variables of X\n2\n, there exists a truth assignment for the variables of X\n3\nsu h that E is\ntrue? This problem is\nP 3 - omplete (Sto kmeyer, 1977, theorem 4.1). Let us all it 3-SAT 3 .\nBaget & Mugnier\n1 2\n3 1\n2 3 ...\n1 2\n3 1\n2 3\nval val val val\na b c d\nat af bt bf ct cf dt df\nC1 C1 C1 C1 C1 C1 C1 C2 C2 C2 C2 C2 C2 C2\nval\na b\nval val\nav bv\na b\nval val\nav bv\na b\nav bv\ncv dv\nval\nC1 C2\nc d\nval val\nPSfrag repla ements\nG\nE Q\nC\n+\ngraph G obtained is the same as in the proof of Th. 8, Fig. 12, ex ept that on ept nodes [x\u2104 orresponding to variables in X\n1\nare not linked to the nodes [xt\u2104 and [xf\u2104 representing\ntheir possible values.\nFirst he k that in this initial world, no onstraint is violated, but the goal Q annot be satis ed. By applying on e the evolution rule E, we try some valuation of the variables in X\n1\nand obtain a world G\n1\n, that ontains an answer to Q. But this world has to satisfy the\npositive onstraint C\n+\n, expressing that for every valuation of the variables in X\n1\n[X\n2\n, there\nmust exist a valuation of the variables in X\n3\nsu h that the formula evaluates to true . If\nG\n1\nsatis es this onstraint, it means that we have found (by applying E) a valuation of the\nvariables in X\n1\nsu h that for all valuations of variables in X\n1\n[X\n2\n(whi h an be simpli ed\nin for all valuations of variables in X\n2\n, sin e there is only one su h valuation for X\n1\n), there\nis a valuation of the variables in X\n3\nsu h that the formula evaluates to true. Then there\nis an answer yes to the 3-SAT\n3\nproblem. Conversely, suppose an answer no to the SEC\nproblem. It means that for every world G\n1\nthat an be obtained by applying the rule E, the\nonstraint C\n+\nis violated (otherwise Q ould be proje ted into G\n1\nand the answer would be\nyes). Thus there is no assignment of the variables in X\n1\nsatisfying the onstraint, i.e. the\nanswer to the 3-SAT\n3\nproblem is no.\nP 3 - ompleteness of SREC-dedu tion. SREC-dedu tion stays in the same lass of\nomplexity as SEC-dedu tion. Indeed, the question is are there an RE-derivation from G\nto G\n0\nand a proje tion from Q to a SG G\n0\n, su h that for all G\ni\nof this derivation either equal\nto G or obtained by an immediate E-derivation, for all G\n0 i of this derivation derived from G i\nby an R-derivation, for all onstraint C\nj\n, for all proje tion from C\nj(0)\nto G\n0 i , there exists\nan R-derivation from G\n0 i to a SG G 00 i and a proje tion 0 from C j to G 00 i s.t. 0 [C j(0) \u2104 = ?\nand the lengths of all derivations are polynomial in the size of the input. When R = ;, one obtains SEC-dedu tion, thus the P\n3\nompleteness. 2\nLet us point out that, whereas in general ase, dedu tion is more di ult in SRC (truly unde idable) than in SEC (semi-de idable), the onverse holds for the parti ular ase of range-restri ted rules.\nThe Complexity of Rules and Constraints"}, {"heading": "7.3 Parti ular Constraints", "text": "One may onsider the ase where not only rules but also onstraints are restri ted. Let us\nrst onsider the meaningful ategory of negative onstraints.\nTheorem 13 (Complexity with negative onstraints) Without any assumption on the rules in E or R, but using only negative onstraints:\nSGC- onsisten y be omes o-NP- omplete.\nSGC-dedu tion be omes DP- omplete.\nSRC-in onsisten y (SRC- onsisten y o-problem) be omes semi-de idable.\nSEC-dedu tion remains semi-de idable.\nSRC-dedu tion and SREC-dedu tion remain truly unde idable.\nProof:\nCo-NP- ompleteness of SGC- onsisten y: from NP- ompleteness of proje tion he k-\ning (th. 8).\nDP- ompleteness of SGC-dedu tion: this problem an be expressed as is it true that Q an be proje ted into G and that no onstraint of C an be proje ted into G? thus belongs to DP. Now let us onsider that C ontains only one onstraint. A redu tion from 3-SAT to Proje tion (see f.i. the proof of th. 2) provides a straightforward redu tion from SAT/UNSAT to SGC-dedu tion (see f.i. Papadimitriou, 1994), thus the DP- ompleteness.\nSemi-de idability of SRC-in onsisten y: To prove the in onsisten y of a KB, we must nd some violation of a onstraint that will never be restored. But no violation of a negative onstraint an ever be restored (further rule appli ations an only add information, thus more possible proje tions, and annot remove the ulprit one). So we only have to prove that one\nonstraint of C an be dedu ed from (G;R): it is a semi-de idable problem. Unde idability of SRC-dedu tion follows: we must prove that Q an be dedu ed from (G;R), but that no onstraint of C an.\nThe arguments proving semi-de idability of dedu tion in SEC and unde idability of\ndedu tion in SREC are the same as the ones used in the proof of Th. 10. 2\nThe restri tion to negative onstraints de reases omplexity of problems in the SGC model, but it does not help mu h as soon as rules are involved, sin e these problems remain unde idable. Combining range restri ted rules and negative onstraints, we obtain more interesting omplexity results:\nTheorem 14 (Complexity with r.r. rules and negative onstraints) If only rangerestri ted rules and negative onstraints are present in the knowledge base:\nSRC- onsisten y be omes o-NP- omplete.\nSRC-dedu tion be omes DP- omplete.\nSEC-dedu tion and SREC-dedu tion be ome\nP 2 - omplete.\nBaget & Mugnier\n1\n2\n3\n1\n2 3\n1\n2 3\n1 2 3\n1 2 3\n1 2 3\ncondition frontier mandatory part\n1 2 3\nPSfrag repla ements\nC\nE(C)\nC (C)\nQ(C)\nfound\nfoundfound\nFigure 18: Transformation from SGC- onsisten y to a restri ted SEC-non-dedu tion\nProof: In onsisten y in SRC admits a polynomial erti ate, a derivation (of polynomial length) from G leading to a graph into whi h a onstraint of C an be proje ted, and this proje tion. In onsisten y is thus in NP, and ompleteness follows from the parti ular ase when R is empty. For dedu tion, we must prove that no onstraint an be dedu ed from (G;R), but that Q an. So the problem is in DP. For ompleteness, remark that the problem is still omplete when R is empty (Th. 13).\nTo prove that SEC-dedu tion with r.r. rules and negative onstraints is\nP 2 - omplete,\nwe will rst show that it belongs to\nP 2 , then exhibit a redu tion from a P 2 - omplete\nproblem to its o-problem SEC-non-dedu tion (sin e o-\nP i = P i ).\nSEC-dedu tion orresponds to the language L = fx j 9y\n1\n8y\n2\nR(x; y\n1\n; y\n2\n)g, where x\nen odes an instan e (Q; (G; E ; C)) of the problem, and (x; y\n1\n; y\n2\n) 2 R if y\n1\nen odes an E-\nderivation from G to G\n0\nand a proje tion from Q to G\n0\n, and y\n2\nen odes a mapping from\nsome onstraint of C to G\n0\nthat is not a proje tion (note that if G\n0\ndoes not violate any\nonstraint, then no graph in the derivation from G to G\n0\ndoes).\nWe exhibit now a redu tion from the general SGC- onsisten y problem to SECnon-dedu tion with r.r. rules and negative onstraints. Let (G; C = fCg) be an instan e of SGC- onsisten y (w.l.o.g., we restri t the problem to onsider only one positive\nonstraint). The transformation we onsider builds an instan e of SEC-non-dedu tion\n(Q(C); (G; E(C); C (C))) as follows. We all the frontier of the positive onstraint C the set of nodes in the trigger (i.e. olored by 0) having at least one neighbor in the obligation. The de nition of olored graphs implies that frontier nodes are on ept nodes (their neighbors are thus relation nodes). Let us denote these frontier nodes by 1; : : : ; k. The evolution rule E(C) has for hypothesis the trigger of C, and for on lusion a relation node typed found, where found is a new k-ary relation type in omparable with all other types. The i th neighbor of this node is the on ept node i. Che k that E(C) is a range restri ted rule. The negative onstraint C (C) is the subgraph of C omposed of its obligation (C\n(1)\n)\nadded with nodes of the frontier and the relation node typed found, linked to the frontier nodes in the same way as above. Finally, the SG Q(C) is made of one relation node typed found and its neighbors frontier nodes. This transformation is illustrated in Fig. 18.\nThe Complexity of Rules and Constraints\nW.l.o.g. we an assume that G is irredundant: in that ase, SGC- onsisten y is still\nP 2 - omplete (see that the transformation used in the proof of Th. 8 produ es an irredundant graph G). Now suppose that (G; C) is onsistent: it means that either the trigger of C does not proje t into G, and in that ase, the rule E(C) will never produ e the needed (found) node, or every (existing) proje tion of the ondition of C into G = irr(G) an be extended to a proje tion of C as a whole. So every appli ation of E(C) produ es a violation of C (C). In both ases Q(C) annot be dedu ed from the knowledge base. Conversely, suppose that G -violates C, then the appli ation of E(C) following produ es a graph that does not violate C (C), and we an dedu e Q(C). 2\nThe above theorem shows a de rease in omplexity when general positive onstraints\nare restri ted to negative ones. SGC- onsisten y falls from\nP 2 to o-NP and, when\nalso onsidering range restri ted rules, SRC- onsisten y falls from\nP 2 to DP, and SEC-\ndedu tion falls from\nP 3 to P 2 . It would be interesting to exhibit parti ular ases of\nonstraints, more general than negative ones, that make this omplexity fall into interme-\ndiary lasses (by example DP and\nP 2 for SGC- onsisten y). Some synta ti restri tions\nwe de ned for rules are good andidates: though a nite expansion set of onstraints has no sense, let us onsider range restri ted onstraints. Let us also de ne dis onne ted onstraints as onstraints where the trigger and the obligation are not onne ted; su h onstraints in-\nlude the topologi al onstraints used in (Mineau & Missaoui, 1997).\nThe following property highlights the relationships of these parti ular ases with negative\nonstraints:\nProperty 13 Negative onstraints are a parti ular ase of both range-restri ted onstraints and dis onne ted onstraints.\nProof: As noti ed in se tion 5, a negative onstraint is equivalent to a positive onstraint whose obligation is omposed of one on ept node of type NotThere, where NotThere is in omparable with all other types and does not appear in any SG ex ept in C (it is thus a dis onne ted onstraint). W.l.o.g. this node an be labeled by an individual marker (whi h, as NotThere, appears only in C), thus leading to a onstraint whi h is both dis onne ted and range-restri ted. 2\nTheorem 15 (Complexity with dis onne ted onstraints) When C ontains only dis-\nonne ted onstraints:\nSGC- onsisten y be omes o-DP- omplete.\nSRC- onsisten y and SRC-dedu tion remain unde idable, but SRC- onsisten y be omes o-DP- omplete when rules are range-restri ted.\nSEC-dedu tion remains semi-de idable, but be omes\nP 2 - omplete when rules are\nrange-restri ted.\nSREC-dedu tion remains unde idable, but be omes\nP 2 - omplete when rules are\nrange-restri ted.\nBaget & Mugnier\nProof: SGC-in onsisten y belongs to DP, sin e we must prove that for one onstraint there is a proje tion of its trigger and no proje tion of its obligation. Completeness is proved with a redu tion from SAT/UNSAT (as in proof of Th. 13). SGC- onsisten y is thus o-DP- omplete.\nArguments for unde idability of SRC- onsisten y, SRC-dedu tion and SREC-dedu tion, as well as semi-de idability of SEC-dedu tion, are the same as in the proof of Th. 10: the onstraints we used were already dis onne ted.\nWhen rules are range-restri ted, SRC-in onsisten y belongs to DP: we must prove that the trigger of the onstraint an be dedu ed from (G;R), but not its obligation, and these problems belong respe tively to NP and o-NP. Completeness omes from the parti - ular ase where R is empty. SRC- onsisten y is thus o-DP- omplete.\nSEC-dedu tion belongs to\nP 2 when rules involved are range-restri ted. Though this\nproperty does not appear with an immediate formulation of the problem, it be omes obvious when the problem is stated as follows: does there exist a sequen e of graphs G = G\n0\n; : : : ; G\np\n; G\np+1\n, where G = G\n0\n; : : : ; G\np\nis an E-derivation and G\np+1\nis the disjoint\nunion of G\np\nand C\n(1)\n, a proje tion from Q to G\np\nand a proje tion from C\n(1)\nto a SG G\nk\n,\n0 k p + 1 su h that for every graph G\ni\n; 0 i < k,( ) for every mapping of C\n(0)\ninto G\ni\n, is not a proje tion ? . Noti e that no G\ni\nbefore G\nk\nin su h a sequen e triggers\nthe onstraint (C\n(0)\ndoes not proje t into G\ni\n) and that all G\ni\n, i k, satisfy it (sin e C\n(1)\nproje ts to G\ni\n), thus all G\ni\nof the sequen e are onsistent. G\np+1\nensures that C\n(1)\nproje ts\ninto at least one graph of the sequen e, whi h allows the above formulation of the problem. Completeness follows from the parti ular ase of negative onstraints.\nProof for SREC-dedu tion in the ase of range restri ted rules is similar: in the ex-\npression of the problem above, the derivation is now an (E[R)-derivation, the G\ni\nonsidered\nare only the ones obtained after the appli ation of a rule from E , and ( ) for every mapping\nof C\n(0)\ninto G\ni\nis repla ed by for every graph that an be R-derived from G\ni\n. 2\nUnfortunately, range-restri ted onstraints are tri kier to study: intuitively, onsisten y he king should be ome easier than with general onstraints, but the role of irredundan y is still un lear. Though it is easy to he k that SGC-dedu tion with range restri ted\nonstraints is at least DP-hard (transformation from SAT/UNSAT) and we have proven\n(though it is not in luded in this paper) that it is in\nP 2 (i.e. P NP ), we did not manage to\na hieve an exa t omplexity result for this problem.\nWe did not either manage to assign a omplexity lass for the SGC\nd\n-dedu tion and\nSR\nrr\nC\nd\n-dedu tion problems, though both problems trivially belong to\n2\nP.\nComplexity results obtained in this paper are summarized in table. 1. We also present in Fig. 19 a omplexity map emphasizing the relationships between problems. In this gure, if E denotes a set of bi olored graphs (rules or onstraints), E fes , E rr , E d respe tively denote its restri tion to a nite expansion set, range restri ted elements, or dis onne ted elements. C denotes a set of negative onstraints. All problems represented are omplete for their lass. Edges are dire ted from bottom to top. An edge from a problem P1 to a problem P2 means that P1 is a parti ular ase of P2. Moreover, in order that the map remains readable, problems whi h are intermediate between two problems P1 and P2 of the same omplexity lass, do not appear in the gure. The omplexity of su h problems an be obtained by lassifying them in the hierar hy. For instan e, SEC-dedu tion is more general than SR-dedu tion (whi h is obtained if C = ;) and more spe i than SR fes EC-\nThe Complexity of Rules and Constraints\ndedu tion (whi h adds the set R\nfes\n), and, sin e these problems are both semi-de idable,\nso is SEC-dedu tion."}, {"heading": "8. Related Works", "text": "One interesting relationship from an algorithmi viewpoint is with the CSP framework. Re-\nall the input of a onstraint satisfa tion problem (CSP) is a onstraint network, omposed of a set of variables, sets of possible values for the variables ( alled their domains) and a set of onstraints between the variables. The question is whether there is a solution to the CSP, i.e. an assignment of values to the variables that satis es the onstraints.\nThe onstraints involved in a lassi al CSP are simpler than ours. A tually, CSP or-\nresponds to the SG-dedu tion (proje tion) problem.\nSeveral authors noti ed the strong equivalen e between CSP and labelled graph homomorphism (Given two labeled graphs G and H, is there a homomorphism from G to H?). As far as we know, the rst paper on this subje t was (Feder & Vardi, 1993). In (Mugnier, 2000) orresponden es are detailed from Proje tion (Given two SGs G and H is there a proje tion from G to H ?) to CSP, and re ipro ally (developing the ones presented in (Mugnier & Chein, 1996)). Let us outline the ideas of the transformation from CSP to Proje tion, alled C2P . Consider a onstraint network P . P is transformed into two SGs G and H as follows. G translates the stru ture of P : ea h on ept node is generi and orresponds to a variable and ea h relation node orresponds to a onstraint (its ith neighbor is the on ept node orresponding to the ith variable of the onstraint). H represents the onstraint de nitions: there is one individual on ept node for ea h value of a variable domain, and one relation node for ea h tuple of ompatible values. Roughly said, there is a solution to P if there is a mapping from variables ( on ept nodes of G) to values ( on ept nodes of H) that satis es the onstraints (maps relation nodes of G onto relation nodes of H), i.e. a proje tion from G to H. The same result has been a hieved independently in the Attributed Graph Grammar formalism by Rudolf (1998).\nOne ould also see CSP as a parti ular ase of SGC- onsisten y: indeed, there is a proje tion from a SG G into a SG H if and only if H satis es the positive onstraint with an empty trigger and G as its obligation.\nBaget & Mugnier\nPSfrag repla ements\nPolynomial hierar hy\nTruly Unde idable\nSemi-De idable o-Semi-De idable\nDe idable\n3\nP\n3\nP\n3\nP\n2\nP\n2\nP\n2\nP\nDP o-DP\no-NP NP\nP\nSREC-dedu tion\nSRC- onsisten y\nSRC -dedu tion\nSRC - onsisten y\nSRC\nrr\n- onsisten y\nSR\nfes\nEC-dedu tion\nS(RE)\nfes\nC-dedu tion\nSR\nd\nE\nrr\nC\nrr\n-dedu tion\nSR\nfes\n-dedu tion\nSR-dedu tion\nSR\nrr\nE\nrr\nC-dedu tion\nSR\nrr\nC-dedu tion\nSGC- onsisten y\nSGC-dedu tion\nSGC\nd\n- onsisten y\nSGC\nd\n-dedu tion\nSE\nrr\nC\nd\n-dedu tion\nSE\nrr\nC-dedu tion\nSR\nrr\n-dedu tion\nSG-dedu tion\nSG\nT\n-dedu tion\nSR\nrr\nE\nrr\nC\nd\n-dedu tion\nSE\nrr\nC -dedu tion\nSGC - onsisten y\nSR\nrr\nC - onsisten y\nSR\nfes\nC - onsisten y\nSR\nrr\nC\nd\n-dedu tion\nSR\nrr\nC\nd\n- onsisten y\nSR\nrr\nC -dedu tion\nSGC -dedu tion\nFigure 19: Complexity Results: a Geography\nThe Complexity of Rules and Constraints\nNow, in order to deal with in omplete knowledge Fargier et al. (1996)\n1\nextend the\nCSP framework to mixed-CSP. In a mixed-CSP the set of variables is de omposed into\nontrollable and un ontrollable variables, say X and . The MIXED-SAT problem asks whether a binary mixed-CSP is onsistent, whi h an be reformulated as follows: is it true that every solution to the subnetwork indu ed by an be extended to a solution of the whole network? MIXED-SAT is shown to be P\n2\n- omplete. This result provides us another\nproof of\nP 2 - ompleteness for SGC- onsisten y. Indeed, any mixed-CSP an be translated\ninto an instan e of SGC- onsisten y. Using the C2P redu tion des ribed above, the mixed-CSP is mapped to SGs G and H. G is then provided with two olors, giving a positive onstraint C, whose trigger is the subgraph orresponding to the subnetwork indu ed by . The mixed-CSP is onsistent if and only if H satis es C. Fig. 20 illustrates this transformation. The onstraint network is omposed of the two variable sets X = fx\n1\n; x\n2\ng\nand = fl\n1\n; l\n2\ng and three onstraints C\n1\n, C\n2\nand C\n3\n. x\n1\nand x\n2\nhave same domain\nf1; 2; 3g and l\n1\nand l\n2\nhave same domain fa; bg. The onstraint de nitions are given in\nthe gure. All on ept types are supposed to be in omparable.\nPSfrag repla ements\nC\nC\nC\nLet us relate our de nitions to other de nitions of onstraints found in the CG literature. Our onstraints (let us all them SG- onstraints) are a parti ular ase of the minimal des riptive onstraints de ned in (Dibie et al., 1998): a minimal des riptive onstraint an be seen as a set of SG- onstraints with the same trigger; its intuitive semanti s is if A holds so must B\n1\nor B\n2\nor ... B\nk\n. A SG satis es a minimal des riptive onstraint if it satis es at\nleast one element of the set. Note that the disjun tion does not in rease the omplexity of the onsisten y he k relative to SG- onstraints. The proof of theorem 8 ( omplexity of SGC - onsisten y) an be used to show that onsisten y of minimal des riptive onstraints is also P\n2\n- omplete. Dibie et al. (1998) have pointed out that minimal des riptive onstraints\ngeneralize most onstraints found in the CG literature. A tually, these latter onstraints are also parti ular ases of SG- onstraints (for instan e, as already noti ed, the topologi al\nonstraints used by Mineau & Missaoui, 1997 are dis onne ted SG- onstraints). Let us add that, in these CG works, onstraints are used to he k onsisten y of SGs solely and not\n1. We thank Christian Bessi\u00e8re for this referen e.\nBaget & Mugnier\nof ri her knowledge bases omposed of rules (as in SRC) and they are not integrated into more omplex reasonings (as in SEC or in SREC).\nThere should be other onne tions with works about veri ation of knowledge bases omposed of logi al rules (for instan e Horn rules), namely with the works of Levy and Rousset (1996), in whi h onstraints are TGDs, thus have the same form than ours, but we did not nd dire t relationships between their framework and ours.\nAs both models are rooted in semanti networks, omparing on eptual graphs and des riptions logi s is a problem that has often been issued. Baader, Molitor, and Tobies (1999) have identi ed a fragment of the SG model (where simple graphs are restri ted to those having a tree-like stru ture, but onjun tive types are allowed) with a language alled ELIRO 1 : this equivalen e has led to a new tra tability result in des ription logi s. However, trying to identify larger fragments seems to be a dead-end: as pointed out by Mugnier (2000), proje tion annot handle negation on primitive types. On the other hand, even the most expressive des ription logi s annot express the whole FOL(^;9) fragment (Borgida, 1996). En oding some existing des ription logi s into models of the SG family is an interesting perspe tive, that ould allow one to identify new de idable lasses for our models, add type expressiveness to on eptual graphs, and may be y les in the des ription of DLs on epts."}, {"heading": "9. Con lusion", "text": "We have proposed a family of models that an be seen as the basis of a generi modeling framework. Main features of this framework are the following: a lear distin tion between di erent kinds of knowledge, that t well with intuitive ategories, a uniform graph-based language that keeps essential properties of the SG model, namely readability of obje ts as well as reasonings. We guess this latter point is parti ularly important for the usability of any knowledge based system. In our framework, all kinds of knowledge are graphs easily interpreted, and reasonings an be graphi ally represented in a natural manner using the graphs themselves, thus explained to the user on its own modelization.\nTe hni al ontributions, w.r.t. previous works on on eptual graphs, an be summarized\nas follows:\nthe representation of di erent kinds of knowledge as olored SGs: fa ts, inferen e rules, evolution rules and onstraints.\nthe integration of onstraints into a reasoning model; more or less similar notions of a\nonstraint had already been introdu ed but were only used to he k onsisten y of a simple graph (as in the SGC model). The omplexity of onsisten y he king was not known.\na systemati study of the obtained family of models with a omplexity lassi ation of asso iated onsisten y/dedu tion problems, in luding the study of parti ular ases of rules and onstraints, whi h provide interesting omplexity results.\nWe also established links between onsisten y he king and FOL dedu tion, translating the onsisten y/dedu tion problems in terms of FOL dedu tion. It should be noti ed that the operational semanti s of models ombining rules and onstraints, namely SREC, SRC and SEC, is easy to understand but we were not able to give a global logi al semanti s. Indeed,\nThe Complexity of Rules and Constraints\nthere is an underlying non monotoni me hanism whose logi al interpretation should require non standard logi s. The de nition of a logi al semanti s for these models is thus an open problem."}, {"heading": "A knowledgments.", "text": "We are indebted to Mi hel Chein and Genevi\u00e8ve Simonet for their areful reading of an earlier version of this work and helpful omments. We also wish to thank Marie-Christine Rousset and Pierre Marquis, as well as anonymous referees, for their interesting suggestions and some orre tions.\nReferen es\nAbiteboul, S., Hull, R., & Vianu, V. (1995). Foundations of Databases. Addison-Wesley.\nBaader, F., Molitor, R., & Tobies, S. (1999). Tra table and De idable Fragments of Con-\neptual Graphs. In Pro . of ICCS'99, LNAI 1640, pp. 480 493. Springer.\nBaget, J.-F., Genest, D., & Mugnier, M.-L. (1999). Knowledge A quisition\nwith a Pure Graph-Based Knowledge Representation Model Appli ation to the Sisyphus-I Case Study. In Pro . of KAW'99. available at http://sern.u algary. a/KSI/KAW/KAW99/papers.htm.\nBaget, J.-F., & Mugnier, M.-L. (2001). The SG Family: Extensions of Simple Con eptual\nGraphs. In Pro . of IJCAI'01, pp. 205 210.\nBaget, J.-F. (2001). Repr\u00e9senter des onnaissan es et raisonner ave des hypergraphes: de\nla proje tion \u00e0 la d\u00e9rivation sous ontraintes. Ph.D. thesis, University of Montpellier II.\nBorgida, A. (1996). On the relative expressiveness of des ription logi s and predi ate logi s.\nArti ial Intelligen e Journal, 82, 353 367.\nBos, C., Botella, B., & Vanheeghe, P. (1997). Modeling and Simulating Human Behaviors\nwith Con eptual Graphs. In Pro . of ICCS'97, LNAI 1257, pp. 275 289. Springer.\nChandra, A. K., & Merlin, P. M. (1977). Optimal implementation on onjun tive queries\nin relational data bases. In Pro . ACM SIGACT Symp. on the Theory of Computing, pp. 77 90.\nChein, M., & Mugnier, M.-L. (1992). Con eptual Graphs: Fundamental Notions. Revue\nd'Intelligen e Arti ielle, 6 (4), 365 406.\nChein, M., Mugnier, M.-L., & Simonet, G. (1998). Nested Graphs: A Graph-based Knowl-\nedge Representation Model with FOL Semanti s. In Pro . of KR'98, pp. 524 534. Morgan Kaufmann.\nCogis, O., & Guinaldo, O. (1995). A linear des riptor for on eptual graphs and a lass for\npolynomial isomorphism test. In Pro . of ICCS'95, LNAI 954, pp. 263 277. Springer.\nCoulondre, S., & Salvat, E. (1998). Pie e Resolution: Towards Larger Perspe tives. In Pro .\nof ICCS'98, LNAI 1453, pp. 179 193. Springer.\nBaget & Mugnier\nDibie, J., Haemmerl\u00e9, O., & Loiseau, S. (1998). A Semanti Validation of Con eptual\nGraphs. In Pro . of ICCS'98, LNAI 1453, pp. 80 93. Springer.\nFargier, H., Lang, J., & S hiex, T. (1996). Mixed onstraint satisfa tion: a framework for\nde ision problems under in omplete knowledge. In Pro . of AAAI'96, pp. 175 180.\nFeder, T., & Vardi, M. (1993). Monotone Monadi SNP and Constraint Satisfa tion. In\nPro eedings of the 25th ACM STOC, pp. 612 622.\nGenest, D. (2000). Extension du mod\u00e8le des graphes on eptuels pour la re her he\nd'informations. Ph.D. thesis, Universit\u00e9 Montpellier II.\nGosh, B. C., & Wuwongse, V. (1995). A Dire t Proof Pro edure for De nite Con eptual\nGraphs Programs. In Pro . of ICCS'95, LNAI 954, pp. 158 172. Springer.\nGottlob, G., Leone, N., & S ar ello, F. (1999). A Comparison of Stru tural CSP De ompo-\nsition Methods. In Pro . of IJCAI'99, pp. 394 399.\nKerdiles, G. (1997). Proje tion: A Uni ation Pro edure for Tableaux in Con eptual Graphs.\nIn Pro . of TABLEAUX'97, LNAI 1227, pp. 216 230.\nKonolige, K. (1996). Abdu tive Theories in Arti ial Intelligen e. In Prin iples of Knowledge\nRepresentation, pp. 129 152. CSLI Publi ations.\nLevy, A. Y., & Rousset, M.-C. (1996). Veri ation of Knowledge Bases Based on Contain-\nment Che king. In Pro . of AAAI'96, pp. 585 591.\nMineau, G. W., & Missaoui, R. (1997). The Representation of Semanti Constraints in\nCon eptual Graphs Systems. In Pro . of ICCS'97, LNAI 1257, pp. 138 152. Springer.\nMugnier, M.-L. (1995). On Generalization / Spe ialization for Con eptual Graphs. Journal\nof Experimental and Theoreti al Arti ial Intelligen e, 7, 325 344.\nMugnier, M.-L. (2000). Knowledge Representation and Reasonings based on graph Homo-\nmorphism. In Pro . of ICCS'00, pp. 172 192. Springer.\nMugnier, M.-L., & Chein, M. (1996). Repr\u00e9senter des onnaissan es et raisonner ave des\ngraphes. Revue d'Intelligen e Arti ielle, 10 (1), 7 56.\nPapadimitriou, C. H. (1994). Computational Complexity. Addison-Wesley.\nPost, E. L. (1947). Re ursive unsolvability of a problem of Thue. Journal of Symboli Logi ,\n12 (1), 1 11. Reprinted in: M. Davis (Ed.), The Colle ted Works of Emil L. Post, Birkhauser, Boston 1994, pp. 503-513.\nPreller, A., Mugnier, M.-L., & Chein, M. (1998). Logi for Nested Graphs. Computational\nIntelligen e, 14 (3), 335 357.\nRudolf, M. (1998). Utilizing Constraint Satisfa tion Te hniques for E ient Graph Pattern\nMat hing. In Pro . of 6th International Workshop on Theory and Appli ation of Graph Transformations, LNCS 1764, pp. 238 251. Springer.\nSalvat, E. (1998). Theorem proving using graph operations in the on eptual graphs for-\nmalism. In Pro . of ECAI'98, pp. 356 360.\nSalvat, E., & Mugnier, M.-L. (1996). Sound and Complete Forward and Ba kward Chainings\nof Graph Rules. In Pro . of ICCS'96, LNAI 1115, pp. 248 262. Springer.\nThe Complexity of Rules and Constraints\nSowa, J. F. (1984). Con eptual Stru tures: Information Pro essing in Mind and Ma hine.\nAddison-Wesley.\nSto kmeyer, L. J. (1977). The polynomial-time hierar hy. Theoreti al Computer S ien e, 3,\n1 22.\nThue, A. (1914). Probleme \u00fcber Ver\u00e4nderungen von Zei henreihen na h gegebenen Regeln.\nSkr. Viedensk. Selsk. I, 10.\nWermelinger, M. (1995). Con eptual Graphs and First-Order Logi . In Pro . of ICCS'95,\nLNAI 954, pp. 323 337."}], "references": [], "referenceMentions": [], "year": 2017, "abstractText": "Simple on eptual graphs are onsidered as the kernel of most knowledge representation formalisms built upon Sowa's model. Reasoning in this model an be expressed by a graph homomorphism alled proje tion, whose semanti s is usually given in terms of positive, onjun tive, existential FOL. We present here a family of extensions of this model, based on rules and onstraints, keeping graph homomorphism as the basi operation. We fo us on the formal de nitions of the di erent models obtained, in luding their operational semanti s and relationships with FOL, and we analyze the de idability and omplexity of the asso iated problems ( onsisten y and dedu tion). As soon as rules are involved in reasonings, these problems are not de idable, but we exhibit a ondition under whi h they fall in the polynomial hierar hy. These results extend and omplete the ones already published by the authors. Moreover we systemati ally study the omplexity of some parti ular ases obtained by restri ting the form of onstraints and/or rules.", "creator": "dvips(k) 5.86e Copyright 2001 Radical Eye Software"}}}