{"id": "1106.5448", "review": {"conference": "AAAI", "VERSION": "v1", "DATE_OF_SUBMISSION": "27-Jun-2011", "title": "Dominating Manipulations in Voting with Partial Information", "abstract": "We consider manipulation problems when the manipulator only has partial information about the votes of the nonmanipulators. Such partial information is described by an information set, which is the set of profiles of the nonmanipulators that are indistinguishable to the manipulator. Given such an information set, a dominating manipulation is a non-truthful vote that the manipulator can cast which makes the winner at least as preferable (and sometimes more preferable) as the winner when the manipulator votes truthfully. When the manipulator has full information, computing whether or not there exists a dominating manipulation is in P for many common voting rules (by known results). We show that when the manipulator has no information, there is no dominating manipulation for many common voting rules. When the manipulator's information is represented by partial orders and only a small portion of the preferences are unknown, computing a dominating manipulation is NP-hard for many common voting rules. Our results thus throw light on whether we can prevent strategic behavior by limiting information about the votes of other voters. We also show that if we restrict our power to manipulate non-manipulators, it is unlikely that the manipulation of non-manipulators will be restricted by these rules.\n\n\n\n\n\n\nWe have concluded that all of the above concepts that are mentioned in Section 2 of this work are well known. In other words, the manipulator must not manipulate the votes of a non-manipulator. Thus, if it is not for the manipulator, it is not for the manipulator to manipulate the votes of a non-manipulator. Thus, we cannot limit our power to manipulate non-manipulators.\n\nA few common features of this work are that a power structure which cannot be controlled without making the manipulation of non-manipulators possible (i.e., if the manipulator manipulator is not controlled by the manipulator, then its power structure cannot be controlled without making the manipulation of non-manipulators possible). In order to enable control of non-manipulators, the manipulator must be restricted only to two or more different rules for its power structure. The power structure must be restricted to the number of non-manipulators. This is one aspect of the power structure that we use in Section 1 of this work.\nThe power structure also contains rules for the manipulation of non-manipulators that are not always in the same state and thus could be restricted to only two or more different rules in any one of our systems", "histories": [["v1", "Mon, 27 Jun 2011 17:10:55 GMT  (31kb,D)", "http://arxiv.org/abs/1106.5448v1", "7 pages by arxiv pdflatex, 1 figure. The 6-page version has the same content and will be published in Proceedings of the Twenty-Fifth AAAI Conference on Artificial Intelligence (AAAI-11)"]], "COMMENTS": "7 pages by arxiv pdflatex, 1 figure. The 6-page version has the same content and will be published in Proceedings of the Twenty-Fifth AAAI Conference on Artificial Intelligence (AAAI-11)", "reviews": [], "SUBJECTS": "cs.AI cs.CC cs.GT cs.MA", "authors": ["vincent conitzer", "toby walsh", "lirong xia"], "accepted": true, "id": "1106.5448"}, "pdf": {"name": "1106.5448.pdf", "metadata": {"source": "CRF", "title": "Dominating Manipulations in Voting with Partial Information", "authors": ["Vincent Conitzer", "Toby Walsh", "Lirong Xia"], "emails": ["conitzer@cs.duke.edu", "toby.walsh@nicta.com.au", "lxia@cs.duke.edu"], "sections": [{"heading": "Introduction", "text": "In computational social choice, one appealing escape from the Gibbard-Satterthwaite theorem (Gibbard 1973; Satterthwaite 1975) was proposed in (Bartholdi, Tovey, and Trick 1989). Whilst manipulation may always be possible, perhaps it is computationally too difficult to find? Many results have subsequently been proven showing that various voting rules are NP-hard to manipulate (Bartholdi and Orlin 1991; Conitzer and Sandholm 2003; Elkind and Lipmaa 2005; Conitzer, Sandholm, and Lang 2007; Faliszewski, Hemaspaandra, and Schnoor 2008; Xia et al. 2009; Faliszewski, Hemaspaandra, and Schnoor 2010) in various senses. However, recent results suggest that computing a manipulation is easy on average or in many cases. Therefore, computational complexity seems to be a weak barrier against manipulation. See (Faliszewski, Hemaspaandra, and Hemaspaandra 2010; Faliszewski and Procaccia 2010) for some surveys of this recent research.\nIt is normally assumed that the manipulator has full information about the votes of the non-manipulators. The argument often given is that if it is NP-hard with full infor-\nCopyright c\u00a9 2014, Association for the Advancement of Artificial Intelligence (www.aaai.org). All rights reserved.\nmation, then it only can be at least as computationally difficult with partial information. However, when there is only one manipulator, computing a manipulation is polynomial for most common voting rules, including all positional scoring rules, Copeland, maximin, and voting trees. The only known exceptions are STV (Bartholdi and Orlin 1991) and ranked pairs (Xia et al. 2009). Therefore, it is not clear whether a single manipulator has incentive to lie when the manipulator only has partial information.\nIn this paper, we study the problem of how one manipulator computes a manipulation based on partial information about the other votes. For example, the manipulator may know that some voters prefer one alternative to another, but might not be able to know all pairwise comparisons for all voters. We suppose the knowledge of the manipulator is described by an information set E. This is some subset of possible profiles of the non-manipulators which is known to contain the true profile. Given an information set and a pair of votes U and V , if for every profile in E, the manipulator is not worse off voting U than voting V , and there exists a profile in E such that the manipulator is strictly better off voting U , then we say that U dominates V . If there exists a vote U that dominates the true preferences of the manipulator then the manipulator has an incentive to vote untruthfully. We call this a dominating manipulation. If there is no such vote, then a risk-averse manipulator might have little incentive to vote strategically.\nWe are interested in whether a voting rule r is immune to dominating manipulations, meaning that a voter\u2019s true preferences are never dominated by another vote. If r is not immune to dominating manipulations, we are interested in whether r is resistant, meaning that computing whether a voter\u2019s true preferences are dominated by another vote U is NP-hard, or vulnerable, meaning that this problem is in P. These properties depend on both the voting rule and the form of the partial information. Interestingly, it is not hard to see that most voting rules are immune to manipulation when the partial information is just the current winner. For instance, with any majority consistent rule (for example, plurality), a risk averse manipulator will still want to vote for her most preferred alternative. This means that the chairman does not need to keep the current winner secret to prevent such manipulations. On the other hand, if the chairman lets slip more information, many rules stop being immune. With most scorar X\niv :1\n10 6.\n54 48\nv1 [\ncs .A\nI] 2\n7 Ju\nn 20\n11\ning rules, if the manipulator knows the current scores, then the rule is no longer immune to such manipulation. For instance, when her most preferred alternative is too far behind to win, the manipulator might vote instead for a less preferred candidate who can win.\nIn this paper, we focus on the case where the partial information is represented by a profile Ppo of partial orders, and the information set E consists of all linear orders that extend Ppo. The dominating manipulation problem is related to the possible/necessary winner problems (Konczak and Lang 2005; Walsh 2007; Betzler, Hemmann, and Niedermeier 2009; Betzler and Dorn 2010; Xia and Conitzer 2011). In possible/necessary winner problems, we are given an alternative c and a profile of partial orders Ppo that represents the partial information of the voters\u2019 preferences. We are asked whether c is the winner for some extension of Ppo (that is, c is a possible winner), or whether c is the winner for every extension of Ppo (that is, c is a necessary winner). We note that in the possible/necessary winner problems, there is no manipulator and Ppo represents the chair\u2019s partial information about the votes. In dominating manipulation problems, Ppo represents the partial information of the manipulator about the non-manipulators.\nWe start with the special case where the manipulator has complete information. In this setting the dominating manipulation problem reduces to the standard manipulation problem, and many common voting rules are vulnerable to dominating manipulation (from known results). When the manipulator has no information, we show that a wide range of common voting rules are immune to dominating manipulation. When the manipulator\u2019s partial information is represented by partial orders, our results are summarized in Table 1.\nOur results are encouraging. For most voting rules r we study in this paper (except plurality and veto), hiding even a little information makes r resistant to dominating manipulation. If we hide all information, then r is immune to dominating manipulation. Therefore, limiting the information available to the manipulator appears to be a promising way to prevent strategic voting."}, {"heading": "Preliminaries", "text": "Let C = {c1, . . . , cm} be the set of alternatives (or candidates). A linear order on C is a transitive, antisymmetric,\n1All hardness results hold even when the number of undetermined pairs in each partial order is no more than a constant.\nand total relation on C. The set of all linear orders on C is denoted by L(C). An n-voter profile P on C consists of n linear orders on C. That is, P = (V1, . . . , Vn), where for every j \u2264 n, Vj \u2208 L(C). The set of all n-profiles is denoted by Fn. We let m denote the number of alternatives. For any linear order V \u2208 L(C) and any i \u2264 m, Alt(V, i) is the alternative that is ranked in the ith position in V . A voting rule r is a function that maps any profile on C to a unique winning alternative, that is, r : F1 \u222a F2 \u222a . . . \u2192 C. The following are some common voting rules. In this paper, if not mentioned specifically, ties are broken in the fixed order c1 c2 \u00b7 \u00b7 \u00b7 cm. \u2022 (Positional) scoring rules: Given a scoring vector ~sm = (~sm(1), . . . , ~sm(m)) of m integers, for any vote V \u2208 L(C) and any c \u2208 C, let ~sm(V, c) = ~sm(j), where j is the rank of c in V . For any profile P = (V1, . . . , Vn), let ~sm(P, c) =\u2211n\nj=1 ~sm(Vj , c). The rule will select c \u2208 C so that ~sm(P, c) is maximized. We assume scores are integers and decreasing. Some examples of positional scoring rules are Borda, for which the scoring vector is (m \u2212 1,m \u2212 2, . . . , 0), plurality, for which the scoring vector is (1, 0, . . . , 0), and veto, for which the scoring vector is (1, . . . , 1, 0). \u2022 Copeland: For any two alternatives ci and cj , we conduct a pairwise election in which we count how many votes rank ci ahead of cj , and how many rank cj ahead of ci. ci wins if and only if the majority of voters rank ci ahead of cj . An alternative receives one point for each such win in a pairwise election. Typically, an alternative also receives half a point for each pairwise tie, but this will not matter for our results. The winner is the alternative with the highest score. \u2022 Maximin: Let DP (ci, cj) be the number of votes that rank ci ahead of cj minus the number of votes that rank cj ahead of ci in the profile P . The winner is the alternative c that maximizes min{DP (c, c\u2032) : c\u2032 \u2208 C, c\u2032 6= c}. \u2022 Ranked pairs: This rule first creates an entire ranking of all the alternatives. In each step, we will consider a pair of alternatives ci, cj that we have not previously considered; specifically, we choose the remaining pair with the highest DP (ci, cj). We then fix the order ci cj , unless this contradicts previous orders that we fixed (that is, it violates transitivity). We continue until we have considered all pairs of alternatives (hence we have a full ranking). The alternative at the top of the ranking wins. \u2022 Voting trees: A voting tree is a binary tree with m leaves, where each leaf is associated with an alternative. In each round, there is a pairwise election between an alternative ci and its sibling cj : if the majority of voters prefer ci to cj , then cj is eliminated, and ci is associated with the parent of these two nodes. The alternative that is associated with the root of the tree (i.e. wins all its rounds) is the winner. \u2022 Single transferable vote (STV): The election has m rounds. In each round, the alternative that gets the lowest plurality score (the number of times that the alternative is ranked in the top position) drops out, and is removed from all of the votes (so that votes for this alternative transfer to another alternative in the next round). The last-remaining alternative is the winner.\nFor any profile P , we let WMG(P ) denote the weighted majority graph of P , defined as follows. WMG(P ) is a di-\nrected graph whose vertices are the alternatives. For i 6= j, if DP (ci, cj) > 0, then there is an edge (ci, cj) with weight wij = DP (ci, cj).\nWe say that a voting rule r is based on the weighted majority graph (WMG), if for any pair of profiles P1, P2 such that WMG(P1) = WMG(P2), we have r(P1) = r(P2). A voting rule r is Condorcet consistent if it always selects the Condorcet winner (that is, the alternative that wins each of its pairwise elections) whenever one exists."}, {"heading": "Manipulation with Partial Information", "text": "We now introduce the framework of this paper. Suppose there are n \u2265 1 non-manipulators and one manipulator. The information the manipulator has about the votes of the non-manipulators is represented by an information set E. The manipulator knows for sure that the profile of the nonmanipulators is in E. However, the manipulator does not know exactly which profile in E it is. Usually E is represented in a compact way. Let I denote the set of all possible information sets in which the manipulator may find herself.\nExample 1. Suppose the voting rule is r. \u2022 If the manipulator has no information, then the only information set is E = Fn. Therefore I = {Fn}. \u2022 If the manipulator has complete information, then I = {{P} : P \u2208 Fn}. \u2022 If the manipulator knows the current winner (before the manipulator votes), then the set of all information sets the manipulator might know is I = {E1, E2, . . . , Em}, where for any i \u2264 m, Ei = {P \u2208 Fn : r(P ) = ci}.\nLet VM denote the true preferences of the manipulator. Given a voting rule r and an information set E, we say that a vote U dominates another vote V , if for every profile P \u2208 E, we have r(P \u222a {U}) VM r(P \u222a {V }), and there exists P \u2032 \u2208 E such that r(P \u2032 \u222a {U}) VM r(P \u2032 \u222a {V }). In other words, when the manipulator only knows the voting rule r and the fact that the profile of the non-manipulators is in E (and no other information), voting U is a strategy that dominates voting V . We define the following two decision problems.\nDefinition 1. Given a voting rule r, an information set E, the true preferences VM of the manipulator, and two votes V and U , we are asked the following two questions. \u2022 Does U dominate V ? This is the DOMINATION problem. \u2022 Does there exist a vote V \u2032 that dominates VM? This is the DOMINATING MANIPULATION problem.\nWe stress that usually E is represented in a compact way, otherwise the input size would already be exponentially large, which would trivialize the computational problems. Given a set I of information sets, we say a voting rule r is immune to dominating manipulation, if for every E \u2208 I and every VM that represents the manipulator\u2019s preferences, VM is not dominated; r is resistant to dominating manipulation, if DOMINATING MANIPULATION is NP-hard (which means that r is not immune to dominating manipulation, assuming P6=NP); and r is vulnerable to dominating manipulation, if r is not immune to dominating manipulation, and DOMINATING MANIPULATION is in P."}, {"heading": "Manipulation with Complete/No Information", "text": "In this section we focus on the following two special cases: (1) the manipulator has complete information, and (2) the manipulator has no information. It is not hard to see that when the manipulator has complete information, DOMINATING MANIPULATION coincides with the standard manipulation problem. Therefore, our framework of dominating manipulation is an extension of the traditional manipulation problem, and we immediately obtain the following proposition from the Gibbard-Satterthwaite theorem (Gibbard 1973; Satterthwaite 1975). Proposition 1. When m \u2265 3 and the manipulator has full information, a voting rule satisfies non-imposition and is immune to dominating manipulation if and only if it is a dictatorship.\nThe following proposition directly follows from the computational complexity of the manipulation problems for some common voting rules (Bartholdi, Tovey, and Trick 1989; Bartholdi and Orlin 1991; Conitzer, Sandholm, and Lang 2007; Zuckerman, Procaccia, and Rosenschein 2009; Xia et al. 2009). Proposition 2. When the manipulator has complete information, STV and ranked pairs are resistant to DOMINATING MANIPULATION; all positional scoring rules, Copeland, voting trees, and maximin are vulnerable to dominating manipulation.\nNext, we investigate the case where the manipulator has no information. We obtain the following positive results. Due to the space constraint, most proofs are omitted. Theorem 1. When the manipulator has no information, any Condorcet consistent voting rule r is immune to dominating manipulation.\nTheorem 2. When the manipulator has no information, Borda is immune to dominating manipulation. Theorem 3. When the manipulator has no information and n \u2265 6(m \u2212 2), any positional scoring rule is immune to dominating manipulation.\nThese results demonstrate that the information that the manipulator has about the votes of the non-manipulators plays an important role in determining strategic behavior. When the manipulator has complete information, many common voting rules are vulnerable to dominating manipulation, but if the manipulator has no information, then many common voting rules become immune to dominating manipulation."}, {"heading": "Manipulation with Partial Orders", "text": "In this section, we study the case where the manipulator has partial information about the votes of the non-manipulators. We suppose the information is represented by a profile Ppo composed of partial orders. That is, the information set is E = {P \u2208 Fn : P extends Ppo}. We note that the two cases discussed in the previous section (complete information and no information) are special cases of manipulation with partial orders. Consequently, by Proposition 1, when the manipulator\u2019s information is represented by partial orders and m \u2265 3, no voting rule that satisfies non-imposition and nondictatorship is immune to dominating manipulation. It also\nfollows from Theorem 2 that STV and ranked pairs are resistant to dominating manipulation. The next theorem states that even when the manipulator only misses a tiny portion of the information, Borda becomes resistant to dominating manipulation. Theorem 4. DOMINATION and DOMINATING MANIPULATION with partial orders are NP-hard for Borda, even when the number of unknown pairs in each vote is no more than 4. Proof. We only prove that DOMINATION is NP-hard, via a reduction from EXACT COVER BY 3-SETS (X3C). The proof for DOMINATING MANIPULATION is omitted due to space constraint. The reduction is similar to the proof of the NP-hardness of the possible winner problems under positional scoring rules in (Xia and Conitzer 2011).\nIn an X3C instance, we are given two sets V = {v1, . . . , vq}, S = {S1, . . . , St}, where for any j \u2264 t, Sj \u2286 V and |Sj | = 3. We are asked whether there exists a subset S \u2032 of S such that each element in V is in exactly one of the 3-sets in S \u2032. We construct a DOMINATION instance as follows. Alternatives: C = {c, w, d} \u222a V , where d is an auxiliary alternative. Therefore, m = |C| = q + 3. Ties are broken in the following order: c w V d. Manipulator\u2019s preferences and possible manipulation: VM = [w c d V]. We are asked whether V = VM is dominated by U = [w d c V]. The profile of partial orders: Let Ppo = P1 \u222a P2, defined as follows. First part (P1) of the profile: For each j \u2264 t, We define a partial order Oj as follows. Oj = [w Sj d Others] \\ [{w} \u00d7 (Sj \u222a {d})]\nThat is, Oj is a partial order that agrees with w Sj d Others, except that the pairwise relations between (w, Sj) and (w, d) are not determined (and these are the only 4 unknown relations). Let P1 = {O1, . . . , Ot}. Second part (P2) of the profile: We first give the properties that we need P2 to satisfy, then show how to construct P2 in polynomial time. All votes in P2 are linear orders that are used to adjust the score differences between alternatives. Let P \u20321 = {w Si d Others : i \u2264 t}. That is, P \u20321 (|P \u20321| = t) is an extension of P1 (in fact, P \u20321 is the set of linear orders that we started with to obtain P1, before removing some of the pairwise relations). Let ~sm = (m \u2212 1, . . . , 0). P2 is a set of linear orders such that the following holds for Q = P \u20321 \u222a P2 \u222a {V }: (1) For any i \u2264 q, ~sm(Q, c) \u2212 ~sm(Q, vi) = 1, ~sm(Q,w) \u2212 ~sm(Q, c) = 4q/3. (2) For any i \u2264 q, the scores of vi and w, c are higher than the score of d in any extension of P1 \u222a P2 \u222a {V } and in any extension of P1 \u222a P2 \u222a {U}. (3) The size of P2 is polynomial in t+ q.\nWe now show how to construct P2 in polynomial time. For any alternative a 6= d, we define the following two votes: Wa = {[a d Others], [Rev(Others) a d]}, where Rev(Others) is the reversed order of the alternatives in C \\ {a, d}. We note that for any alternative a\u2032 \u2208 C \\ {a, d}, ~sm(W,a)\u2212~sm(W,a\u2032) = 1 and ~sm(W,a\u2032)\u2212~sm(W,d) = 1. Let Q1 = P \u20321 \u222a {V }. P2 is composed of the following parts: (1) tm\u2212 ~sm(Q1, c) copies of Wc. (2) tm+ 4q/3\u2212 ~sm(Q1, w) copies of Ww.\n(2) For each i \u2264 q, there are tm\u2212 1\u2212 ~sm(Q1, vi) copies of Wvi .\nWe next prove that V is dominated by U if and only if c is the winner in at least one extension of Ppo \u222a {V }. We note that for any v \u2208 V \u222a {w}, the score of v in V is the same as the score of v in U . The score of c in U is lower than the score of c in V . Therefore, for any extension P \u2217 of Ppo, if r(P \u2217\u222a{V }) \u2208 ({w}\u222aV), then r(P \u2217\u222a{V }) = r(P \u2217\u222a{U}) (because d cannot win). Hence, for any extension P \u2217 of Ppo, voting U can result in a different outcome than voting V only if r(P \u2217 \u222a V ) = c. If there exists an extension P \u2217 of Ppo such that r(P \u2217 \u222a {V }) = c, then we claim that the manipulator is strictly better off voting U than voting V . Let P \u22171 denote the extension of P1 in P\n\u2217. Then, because the total score of w is no more than the total score of c, w is ranked lower than d at least q3 times in P \u2217 1 . Meanwhile, for each i \u2264 q, vi is not ranked higher than w more than one time in P \u22171 , because otherwise the total score of vi will be strictly higher than the total score of c. That is, the votes in P \u22171 where d w make up a solution to the X3C instance. Therefore, the only possibility for c to win is for the scores of c, w, and all alternatives in V to be the same (so that c wins according to the tie-breaking mechanism). Now, we have w = r(P \u2217 \u222a{U}). Because w VM c, the manipulator is better off voting U . It follows that V is dominated by U if and only if there exists an extension of Ppo \u222a{V } where c is the winner.\nThe above reasoning also shows that V is dominated by U if and only if the X3C instance has a solution. Therefore, DOMINATION is NP-hard. 2\nTheorem 4 can be generalized to a class of scoring rules similar to the class of rules in Theorem 1 in (Xia and Conitzer 2011), which does not include plurality or veto. In fact, as we will show later, plurality and veto are vulnerable to dominating manipulation.\nWe now investigate the relationship to the possible winner problem in more depth. In a possible winner problem (r, Ppo, c), we are given a voting rule r, a profile Ppo composed of n partial orders, and an alternative c. We are asked whether there exists an extension P of Ppo such that c = r(P ). Intuitively, both DOMINATION and DOMINATING MANIPULATION seem to be harder than the possible winner problem under the same rule. Next, we present two theorems, which show that for any WMG-based rule, DOMINATION and DOMINATING MANIPULATION are harder than two special possible winner problems, respectively.\nWe first define a notion that will be used in defining the two special possible winner problems. For any instance of the possible winner problem (r, Ppo, c), we define its WMG partition R = {Rc\u2032 : c\u2032 \u2208 C} as follows. For any c\u2032 \u2208 C, let Rc\u2032 = {WMG(P ) : P extends Ppo and r(P ) = c\u2032}. That is, Rc\u2032 is composed of all WMGs of the extensions of Ppo, where the winner is c\u2032. It is possible that for some c\u2032 \u2208 C, Rc\u2032 is empty. For any subset C\u2032 \u2286 C \\{c}, we let GC\u2032 denote the weighted majority graph where for each c\u2032 \u2208 C\u2032, there is an edge c\u2032 \u2192 c with weight 2, and these are the only edges in GC\u2032 . We are ready to define the two special possible winner problems for WMG-based voting rules. Definition 2. Let d\u2217 be an alternative and let C\u2032 be a\nnonempty subset of C \\ {c, d\u2217}. For any WMG-based voting rule r, we let PW1(d\u2217, C\u2032) denote the set of possible winner problems (r, Ppo, c) satisfying the following conditions:\n1. For any G \u2208 Rc, r(G+GC\u2032) = d\u2217. 2. For any c\u2032 6= c and any G \u2208 Rc\u2032 , r(G+GC\u2032) = r(G). 3. For any c\u2032 \u2208 C\u2032, Rc\u2032 = \u2205.\nWe recall that Rc and Rc\u2032 are elements in the WMG partition of the possible winner problem. Definition 3. Let d\u2217 be an alternative and let C\u2032 be a nonempty subset of C \\ {c, d\u2217}. For any WMG-based voting rule r, we let PW2(d\u2217, C\u2032) denote the problem instances (r, Ppo, c) of PW1(d\u2217, C\u2032), where for any c\u2032 \u2208 C \\ {c, d\u2217}, Rc\u2032 = \u2205. Theorem 5. Let r be a WMG-based voting rule. There is a polynomial time reduction from PW1(d\u2217, C\u2032) to DOMINATION with partial orders, both under r. Proof. Let (r, Ppo, c) be a PW1(d\u2217, C\u2032) instance. We construct the following DOMINATION instance. Let the profile of partial orders be Qpo = Ppo \u222a {Rev(d\u2217 c C\u2032 Others)}, V = VM = [d\u2217 c C\u2032 Others], and U = [d\u2217 C\u2032 c Others]. Let P be an extension of Ppo. It follows that WMG(P \u222a {Rev(d\u2217 c C\u2032 Others), V }) = WMG(P ), and WMG(P \u222a {Rev(d\u2217 c C\u2032 Others), U}) = WMG(P ) + GC\u2032 . Therefore, the manipulator can change the winner if and only if WMG(P ) \u2208 Rc, which is equivalent to c being a possible winner. We recall that by the definition of PW1(d\u2217, C\u2032), for any G \u2208 Rc, r(G + GC\u2032) = d\u2217; for any c\u2032 6= c and any G \u2208 Rc\u2032 , r(G + GC\u2032) = c\u2032; and d\u2217 V c. It follows that V (=VM ) is dominated by U if and only if the PW1(d\u2217, C\u2032) instance has a solution. 2\nTheorem 5 can be used to prove that DOMINATION is NP-hard for Copeland, maximin, and voting trees, even when the number of undetermined pairs in each partial order is bounded above by a constant. It suffices to show that for each of these rules, there exist d\u2217 and C\u2032 such that PW1(d\u2217, C\u2032) is NP-hard. To prove this, we can modify the NP-completeness proofs of the possible winner problems for Copeland, maximin, and voting trees by Xia and Conitzer (Xia and Conitzer 2011). These proofs are omitted due to space constraint. Corollary 1. DOMINATION with partial orders is NP-hard for Copeland, maximin, and voting trees, even when the number of unknown pairs in each vote is bounded above by a constant. Theorem 6. Let r be a WMG-based voting rule. There is a polynomial-time reduction from PW2(d\u2217, C\u2032) to DOMINATING MANIPULATION with partial orders, both under r. Proof. The proof is similar to the proof for Theorem 5. We note that d\u2217 is the manipulator\u2019s top-ranked alternative. Therefore, if c is not a possible winner, then V (= VM ) is not dominated by any other vote; if c is a possible winner, then V is dominated by U = [w C\u2032 c Others]. 2\nSimilarly, we have the following corollary. Corollary 2. DOMINATING MANIPULATION with partial orders is NP-hard for Copeland and voting trees, even when the number of unknown pairs in each vote is bounded above by a constant.\nIt is an open question if PW2(d\u2217, C\u2032) with partial orders is NP-hard for maximin. However, we can directly prove that DOMINATING MANIPULATION is NP-hard for maximin by a reduction from X3C. Theorem 7. DOMINATING MANIPULATION with partial orders is NP-hard for maximin, even when the number of unknown pairs in each vote is no more than 4.\nFor plurality and veto, there exist polynomial-time algorithms for both DOMINATION and DOMINATING MANIPULATION. Given an instance of DOMINATION, denoted by (r, Ppo, VM , V, U), we say that U is a possible improvement of V , if there exists an extension P of Ppo such that r(P \u222a {U}) VM r(P \u222a {V }). It follows that U dominates V if and only if U is a possible improvement of V , and V is not a possible improvement of U . We first introduce an algorithm (Algorithm 1) that checks whether U is a possible improvement of V for plurality.\nLet ci\u2217 (resp., cj\u2217 ) denote the top-ranked alternative in V (resp., U ). We will check whether there exists 0 \u2264 l \u2264 n, d, d\u2032 \u2208 C with d\u2032 VM d, and an extension P \u2217 of Ppo, such that if the manipulator votes for V , then the winner is d, whose plurality score in P \u2217 is l, and if the manipulator votes for U , then the winner is d\u2032. We note that if such d, d\u2032 exist, then either d = ci\u2217 or d\u2032 = cj\u2217 (or both hold). To this end, we solve multiple maximum-flow problems defined as follows.\nLet C\u2032 \u2282 C denote a set of alternatives. Let ~e = (e1, . . . , em) \u2208 Nm be an arbitrary vector composed of m natural numbers such that \u2211m i=1 ei \u2265 n. We define a maximum-flow problem F~eC\u2032 as follows. Vertices: {s,O1, . . . , On, c1, . . . , cm, y, t}. Edges: \u2022 For any Oi, there is an edge from s to Oi with capacity 1. \u2022 For any Oi and cj , there is an edge Oi \u2192 cj with capacity\n1 if and only if cj can be ranked in the top position in at least one extension of Oi. \u2022 For any ci \u2208 C\u2032, there is an edge ci \u2192 t with capacity ei. \u2022 For any ci \u2208 C \\ C\u2032, there is an edge ci \u2192 y with capacity\nei. \u2022 There is an edge y \u2192 t with capacity n\u2212\u2211ci\u2208C\u2032 ei.\nFor example, F~e{c1,c2} is illustrated in Figure 1.\nIt is not hard to see that F~eC\u2032 has a solution whose value is n if and only if there exists an extension P \u2217 of Ppo, such that (1) for each ci \u2208 C\u2032, the plurality of ci is exactly ei, and\n(2) for each ci\u2032 6\u2208 C\u2032, the plurality of ci\u2032 is no more than ei\u2032 . Now, for any pair of alternatives d = ci, d\u2032 = cj such that d\u2032 VM d and either d = ci\u2217 or d\u2032 = cj\u2217 , we define the set of admissible maximum-flow problems AlPlu to be the set of maximum flow problems F~eci,cj where ei = l, and if F ~e ci,cj has a solution, then the manipulator can improve the winner by voting for U . Details are omitted due to space constraint. Algorithm 1 solves all maximum-flow problems in AlPlu to check whether U is a possible improvement of V .\nAlgorithm 1: PossibleImprovement(V ,U ) 1 Let ci\u2217 = Alt(V, 1) and cj\u2217 = Alt(U, 1). 2 for any 0 \u2264 l \u2264 n and any pair of alternatives d = ci, d\n\u2032 = cj such that d\u2032 VM d and either d = ci\u2217 or d\u2032 = cj\u2217 do\n3 Compute AlPlu. 4 for each maximum-flow problem F~eC\u2032 in AlPlu do 5 if \u2211 ci\u2208C\u2032 ei \u2264 n and the value of maximum flow in F~eC\u2032 is n then 6 Output that the U is a possible improvement of V , terminate the algorithm. 7 end 8 end 9 end\n10 Output that U is not a possible improvement of V .\nThe algorithm for DOMINATION (Algorithm 2) runs Algorithm 1 twice to check whether U is a possible improvement of V , and whether V is a possible improvement of U . The algorithm for DOMINATING MANIPULATION for\nAlgorithm 2: Domination 1 if PossibleImprovement(V ,U )=\u201cyes\u201d and\nPossibleImprovement(U ,V )=\u201cno\u201d then 2 Output that V is dominated by U . 3 end 4 else 5 Output that V is not dominated by U . 6 end\nplurality simply runs Algorithm 2 m\u2212 1 times. In the input we always have that V = VM , and for each alternative in C \\ {Alt(V, 1)}, we solve an instance where that alternative is ranked first in U . If in any step V is dominated by U , then there is a dominating manipulation; otherwise V is not dominated by any other vote. The algorithms for DOMINATION and DOMINATING MANIPULATION for veto are similar. We omit the details due to space constraint."}, {"heading": "Future Work", "text": "Analysis of manipulation with partial information provides insight into what needs to be kept confidential in an election. For instance, in a plurality or veto election, revealing (perhaps unintentionally) part of the preferences of nonmanipulators may open the door to strategic voting. An interesting open question is whether there are any more general relationships between the possible winner problem and the dominating manipulation problem with partial orders. It\nwould be interesting to identify cases where voting rules are resistant or even immune to manipulation based on other types of partial information, for example, the set of possible winners. We may also consider other types of strategic behavior with partial information in our framework, for example, coalitional manipulation, bribery, and control. We are currently working on proving completeness results for higher levels of the polynomial hierarchy for problems similar to those studied in this paper."}, {"heading": "Acknowledgments", "text": "Vincent Conitzer and Lirong Xia acknowledge NSF CAREER 0953756 and IIS-0812113, and an Alfred P. Sloan fellowship for support. Toby Walsh is supported by the Australian Department of Broadband, Communications and the Digital Economy, the ARC, and the Asian Office of Aerospace Research and Development (AOARD-104123). Lirong Xia is supported by a James B. Duke Fellowship. We thank all AAAI-11 reviewers for their helpful comments and suggestions."}], "references": [{"title": "Single transferable vote resists strategic voting", "author": ["Bartholdi", "III Orlin 1991] Bartholdi", "J. Orlin"], "venue": "SCW", "citeRegEx": "Bartholdi et al\\.,? \\Q1991\\E", "shortCiteRegEx": "Bartholdi et al\\.", "year": 1991}, {"title": "The computational difficulty of manipulating an election", "author": ["Tovey Bartholdi", "Trick 1989] Bartholdi", "III", "C. Tovey", "M. Trick"], "venue": "SCW", "citeRegEx": "Bartholdi et al\\.,? \\Q1989\\E", "shortCiteRegEx": "Bartholdi et al\\.", "year": 1989}, {"title": "Towards a dichotomy for the possible winner problem in elections based on scoring rules. JCSS 76(8):812\u2013836", "author": ["Betzler", "N. Dorn 2010] Betzler", "B. Dorn"], "venue": null, "citeRegEx": "Betzler et al\\.,? \\Q2010\\E", "shortCiteRegEx": "Betzler et al\\.", "year": 2010}, {"title": "A multivariate complexity analysis of determining possible winners given incomplete votes", "author": ["Hemmann Betzler", "N. Niedermeier 2009] Betzler", "S. Hemmann", "R. Niedermeier"], "venue": "In Proc. IJCAI,", "citeRegEx": "Betzler et al\\.,? \\Q2009\\E", "shortCiteRegEx": "Betzler et al\\.", "year": 2009}, {"title": "Universal voting protocol tweaks to make manipulation hard", "author": ["Conitzer", "V. Sandholm 2003] Conitzer", "T. Sandholm"], "venue": "In Proc. IJCAI,", "citeRegEx": "Conitzer et al\\.,? \\Q2003\\E", "shortCiteRegEx": "Conitzer et al\\.", "year": 2003}, {"title": "When are elections with few candidates hard to manipulate? JACM 54(3):1\u201333", "author": ["Sandholm Conitzer", "V. Lang 2007] Conitzer", "T. Sandholm", "J. Lang"], "venue": null, "citeRegEx": "Conitzer et al\\.,? \\Q2007\\E", "shortCiteRegEx": "Conitzer et al\\.", "year": 2007}, {"title": "Hybrid voting protocols and hardness of manipulation", "author": ["Elkind", "E. Lipmaa 2005] Elkind", "H. Lipmaa"], "venue": "In Proc. ISAAC,", "citeRegEx": "Elkind et al\\.,? \\Q2005\\E", "shortCiteRegEx": "Elkind et al\\.", "year": 2005}, {"title": "AI\u2019s war on manipulation: Are we winning? AI Magazine 31(4):53\u201364", "author": ["Faliszewski", "P. Procaccia 2010] Faliszewski", "A.D. Procaccia"], "venue": null, "citeRegEx": "Faliszewski et al\\.,? \\Q2010\\E", "shortCiteRegEx": "Faliszewski et al\\.", "year": 2010}, {"title": "Using complexity to protect elections", "author": ["Hemaspaandra Faliszewski", "E. Hemaspaandra", "L.A. Hemaspaandra"], "venue": "Commun. ACM 53:74\u201382", "citeRegEx": "Faliszewski et al\\.,? \\Q2010\\E", "shortCiteRegEx": "Faliszewski et al\\.", "year": 2010}, {"title": "Manipulation of copeland elections", "author": ["Hemaspaandra Faliszewski", "P. Schnoor 2010] Faliszewski", "E. Hemaspaandra", "H. Schnoor"], "venue": "In Proc. AAMAS,", "citeRegEx": "Faliszewski et al\\.,? \\Q2010\\E", "shortCiteRegEx": "Faliszewski et al\\.", "year": 2010}, {"title": "Voting procedures with incomplete preferences", "author": ["Konczak", "K. Lang 2005] Konczak", "J. Lang"], "venue": "In Multidisciplinary Workshop on Advances in Preference Handling", "citeRegEx": "Konczak et al\\.,? \\Q2005\\E", "shortCiteRegEx": "Konczak et al\\.", "year": 2005}, {"title": "Determining possible and necessary winners under common voting rules given partial orders. To appear in JAIR", "author": ["Xia", "L. Conitzer 2011] Xia", "V. Conitzer"], "venue": null, "citeRegEx": "Xia et al\\.,? \\Q2011\\E", "shortCiteRegEx": "Xia et al\\.", "year": 2011}, {"title": "Complexity of unweighted coalitional manipulation under some common voting rules", "author": ["Xia"], "venue": "In Proc. IJCAI,", "citeRegEx": "Xia,? \\Q2009\\E", "shortCiteRegEx": "Xia", "year": 2009}, {"title": "Algorithms for the coalitional manipulation problem", "author": ["Procaccia Zuckerman", "M. Rosenschein 2009] Zuckerman", "A.D. Procaccia", "J.S. Rosenschein"], "venue": "Artificial Intelligence", "citeRegEx": "Zuckerman et al\\.,? \\Q2009\\E", "shortCiteRegEx": "Zuckerman et al\\.", "year": 2009}], "referenceMentions": [], "year": 2014, "abstractText": "We consider manipulation problems when the manipulator only has partial information about the votes of the nonmanipulators. Such partial information is described by an information set, which is the set of profiles of the nonmanipulators that are indistinguishable to the manipulator. Given such an information set, a dominating manipulation is a non-truthful vote that the manipulator can cast which makes the winner at least as preferable (and sometimes more preferable) as the winner when the manipulator votes truthfully. When the manipulator has full information, computing whether or not there exists a dominating manipulation is in P for many common voting rules (by known results). We show that when the manipulator has no information, there is no dominating manipulation for many common voting rules. When the manipulator\u2019s information is represented by partial orders and only a small portion of the preferences are unknown, computing a dominating manipulation is NP-hard for many common voting rules. Our results thus throw light on whether we can prevent strategic behavior by limiting information about the votes of other voters.", "creator": "LaTeX with hyperref package"}}}