{"id": "1202.0984", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "1-Feb-2012", "title": "OWL: Yet to arrive on the Web of Data?", "abstract": "Seven years on from OWL becoming a W3C recommendation, and two years on from the more recent OWL 2 W3C recommendation, OWL has still experienced only patchy uptake on the Web. Although certain OWL features (like owl:sameAs) are very popular, other features of OWL are largely neglected by publishers in the Linked Data world. This may suggest that despite the promise of easy implementations and the proposal of tractable profiles suggested in OWL's second version, there is still no \"right\" standard fragment for the Linked Data community. In this paper, we (1) analyse uptake of OWL on the Web of Data, (2) gain insights into the OWL fragment that is actually used/usable on the Web, where we arrive at the conclusion that this fragment is likely to be a simplified profile based on OWL RL, (3) propose and discuss such a new fragment, which we call OWL LD (for Linked Data). The data are compiled in two different ways, depending on the author or the author, and have been compiled into three different data sets in a single time, in the form of a single text file.\n\n\nFigure 1: User input data from OWL. Data of Linked Data\nLinking data from the Linked Data library has become more and more difficult with the new version. As the user has little access to the data stored on the Linked Data library, a user is limited to the data stored by the Linked Data library. To facilitate the user's understanding of the data, our data structures are now available for viewing in a browser or tablet via an alternative media player (e.g. iTunes) or in an app (e.g. an app on the Windows Store). We use the open data storage engine, the linked data library, and the data storage engine to enable users to access the data stored on the Linked Data library in real-time.\nFigure 2: User input data from OWL. Data of Linked Data\nThe Linked Data library has a new functionality that requires the user to access its data using a combination of a link, and a user's connection to the Linked Data library. The data data is stored in a single \"tabletop box\" containing data that is then downloaded, downloaded, and then sent to an external link (i.e. external links, in the form of a single text file). The data are converted to a single Linked Data library, using", "histories": [["v1", "Wed, 1 Feb 2012 17:51:00 GMT  (346kb,DS)", "http://arxiv.org/abs/1202.0984v1", null]], "reviews": [], "SUBJECTS": "cs.DL cs.AI", "authors": ["birte glimm", "aidan hogan", "markus kr\\\"otzsch", "axel polleres"], "accepted": false, "id": "1202.0984"}, "pdf": {"name": "1202.0984.pdf", "metadata": {"source": "META", "title": "OWL: Yet to arrive on the Web of Data?", "authors": ["Birte Glimm", "Aidan Hogan", "Markus Kr\u00f6tzsch", "Axel Polleres"], "emails": [], "sections": [{"heading": "1. INTRODUCTION", "text": "Under the initial impetus of the Linking Open Data project \u2013 and guided by the Linked Data principles [3] and associated bestpractices \u2013 a rich vein of openly-available structured data has been published on the Web using Semantic Web standards. Publishing RDF on the Web is no longer confined to academia and hobbyists: the current \u201cWeb of Data\u201d now features exports from various corporate and commercial bodies (e.g., BBC, New York Times, Freebase, BestBuy), online communities (e.g., Wikipedia, Geonames), life-science corpora (e.g., DrugBank, Linked Clinical Trials) and governmental bodies (e.g., data.gov, data.gov.uk, EuroStat). The \u201cLinked Open Data cloud\u201d now depicts 295 interlinked datasets, which together consist of an estimated 31.6 billion RDF triples.1\nAlthough RDF provides standard syntaxes and a common datamodel for disseminating structured information, it offers very little when it comes to giving semantics to the published data. RDF Schema (RDFS) and OWL were developed to address this by providing a vocabulary for describing schema data. The special vocabulary terms of RDFS and OWL \u2013 such as rdfs:subClassOf or owl:FunctionalProperty \u2013 have a well-defined semantics, which can be used to derive implicit consequences from the data. 1http://www4.wiwiss.fu-berlin.de/lodcloud/state/\nThis work has been funded in part by Science Foundation Ireland under Grant No. SFI/08/CE/I1380 (L\u00edon-2) and by an IRCSET postgraduate grant. CoRR Copyright 2012.\nIn terms of publishing, parts of the RDFS and OWL standards have been adopted on the Web of Data. Linked Data literature recommends use of owl:sameAs relations to denote when two URIs refer to the same resource [18, \u00a7 2.5.2]. Further, Linked Data guidelines recommend use of RDFS [18, \u00a7 4.4.2] for defining terms and interlinking vocabularies. As regards the broader OWL standard, current guidelines explicitly mention use of owl:equivalentClass, owl:equivalentProperty, owl:InverseFunctionalProperty and owl:inverseOf [18, \u00a7 4.4.2]. However, other OWL features are not mentioned.\nIn terms of standards, RDFS and OWL 1 pre-date the Linked Data movement and are not directly tailored towards Linked Data requirements. Although the informative entailment rules for supporting RDFS inferences are relatively straightforward, things like the infinitely many entailed axiomatic triples reduce its practicality [28]. In OWL 1 the situation is more complex: OWL 1 Full further extends the RDFS semantics to the extent that reasoning becomes undecidable. In OWL 1 DL and OWL 1 Lite, where the semantics are based on Description Logics, typical reasoning tasks remain decidable, but are of exponential or harder worst-case complexity. OWL 2 addresses the complexity issue by defining profiles [6]: fragments for which at least some reasoning tasks are tractable. Reasoning with inconsistent data is, however, still problematic in any OWL fragment. Further, each profile is a syntactic subset of OWL DL such that RDF data must adhere to certain nontrivial conditions which are commonly not followed in Web ontologies [2, 38, 7]. However, OWL RL includes a ruleset called OWL RL/RDF, which is applicable over arbitrary RDF data.\nAlthough the OWL RL profile is implementable using straightforward rule-based technologies, (as we will see) the profile still includes many features with sparse uptake in Linked Data vocabularies. Which features are prominently used is, however, unclear. In order to clarify this, we survey a broad spectrum of RDF Web data and measure uptake of individual RDFS and OWL features used therein. Since datatypes also play a role for OWL reasoning, we additionally look at the use of datatypes in published data. We further analyse to what extent OWL features are supported by tools that provide the technical infrastructure for building complex Semantic Web applications.\nOur analysis suggests that a much simpler profile of OWL might be better targeted towards the current needs of the Linked Data community. We thus propose OWL LD (for Linked Data) as a subset of the OWL RL profile, using the insights of our survey to make an informed decision as to which features of the RDFS and OWL standards should be included in the profile.\nThe remainder of the paper is structured as follows: In the next section, we introduce some preliminaries. In Section 3, we present our survey of the use of RDFS and OWL features on the Web, in-\nar X\niv :1\n20 2.\n09 84\nv1 [\ncs .D\nL ]\n1 F\neb 2\n01 2\ncluding a survey of datatypes. In Section 4, we analyse the tool support for RDFS and OWL. Drawing upon our observations, we propose and define the OWL LD profile in Section 5, and discuss formal aspects of reasoning over the profile in Section 6. Next, in Section 7 we give a synopsis of related work for empirical analyses of RDFS and OWL data on the Web. We conclude in Section 8."}, {"heading": "2. BACKGROUND", "text": "Before analysing the use of OWL in the web, we first recall some relevant features of RDF, RDFS, and OWL semantics and give a summary of the existing OWL profiles."}, {"heading": "2.1 RDF Graphs and Their Semantics", "text": "Given the set of URI references U, the set of blank nodes B, and the set of literals L, the set of RDF constants is denoted by C := U\u222aB\u222aL. We use CURIEs to denote URIs (e.g., owl:sameAs), where the prefixes used in this paper can be looked up, e.g., at http://prefix.cc/. We often use Turtle syntax; e.g., we may use a as a shortcut for rdf:type. Finally, V denotes the set of RDF variables ranging over C and we prefix variables with \u2018?\u2019.\nAn RDF triple (s, p, o) is a triple from the set of all RDF triples G := U \u222a B \u00d7 U \u00d7 C, where s is called subject, p predicate, and o object. We call a finite set of triples G \u2282 G an RDF graph.\nSemantically, RDF graphs can be interpreted in a number of ways based on various W3C recommendations. The simple semantics [17] considers only the graph structure of RDF, whereas more elaborate semantics such as RDFS entailment [17] or the OWL 2 Direct and RDF-Based Semantics (see below) provide special meanings for certain terms.\nThe common basis for all such semantics is that they are specified in terms of model theory: one defines interpretations together with necessary and sufficient conditions that specify when an interpretation satisfies a graph. When defining a semantics E (such as RDF, RDFS, etc.) one often speaks of E-interpretations and E-satisfaction. The set of all E-interpretations that E-satisfy a graph G are called the E-models of G. Semantic entailment follows from this notion: a graph G E-entails a graph G\u2032, written G |=E G\u2032, if and only if every E-model of G is also an E-model of G\u2032."}, {"heading": "2.2 OWL and its Fragments", "text": "OWL 2 is an ontology language that provides advanced schema modelling capabilities that can be used together with RDF data. OWL 2 supersedes the earlier specification \u201cOWL 1\u201d by introducing new modelling features, additional serialisations, updated conformance conditions and various corrections. When omitting the version number, we thus mean the current standard OWL 2.\nEvery RDF graph can be considered as an OWL ontology and the language of all RDF documents is called OWL Full to emphasise that all such graphs should be viewed as ontologies. In applications, however, OWL ontologies are usually viewed as being composed of axioms, that can be more complex than single triples. For example, the triple ex:a owl:sameAs ex:b . corresponds to the OWL axiom SameIndividual(ex:a ex:b) whereas the axiom\nObjectPropertyRange(skos:member ObjectUnionOf(skos:Concept skos:Container)) (1)\nexpands to the six RDF triples\nskos:member rdfs:range _:x. _:x owl:unionOf _:x1 . _:x1 rdf:first skos:Concept. _:x1 rdf:rest _:x2 . (2)\n_:x2 rdf:first skos:Container. _:x2 rdf:rest rdf:nil .\nAdditional conditions need to be imposed on RDF graphs to ensure that they are in one-to-one correspondence to a collection of OWL\naxioms. A syntactic subset of OWL Full for which this is possible is OWL DL, which also imposes further restrictions that are useful for computing semantic conclusions from the ontology [27]. It can still be computationally expensive to draw conclusions from OWL DL ontologies. To address this, OWL further defines three syntactically restricted sub-languages (profiles) of OWL DL called OWL EL, OWL RL and OWL QL [6] (see also Table 2 later for a brief feature comparison). OWL Full, OWL DL and the OWL profiles together constitute the five language fragments of OWL. The essential features of RDF Schema (sub-classes and -properties, domain, range) are covered by all of these fragments, but only OWL Full supports arbitrary RDF documents.\nVarious further sub-languages of OWL have been proposed outside of the official standard. The current profiles themselves have been inspired by existing approaches: EL++ for OWL EL [24], DLLite [5] for OWL QL, and Description Logic Programs (DLP) [13] and pD* [35] for OWL RL. Generally, these approaches aimed to maximise the expressivity and thus approach the current standard quite closely (albeit, only for OWL 1 features). DLP is defined as a syntactic fragment of OWL. Other languages \u2013 including pD* \u2013 came about by extending RDFS with some additional features. Allemang and Hendler proposed RDFS-Plus based on an informal survey of practitioners and three criteria felt important for adoption: pedagogism (intuitive and easy to learn), practicality (real use-cases in modelling), and computational feasibility (not too hard to implement) [1]. This language was later extended to RDFS 3.0 along similar principles [19]. Fisher et al. propose a similar profile to RDFS-Plus called L2, where the rationale for including or excluding features is given on an ad-hoc basis [11]. A more detailed overview of the main features for these languages is also found in Table 2."}, {"heading": "2.3 OWL Semantics and Reasoning", "text": "OWL ontologies can be interpreted under two different semantics that agree in important cases: the RDF-Based Semantics (RS) [17] and the Direct Semantics (DS) [26]. Like in RDF(S), the semantics are defined by specifying a model theory, i.e., by defining valid interpretations for ontologies based on semantic conditions. In RS, these models are based on the representation of OWL axioms as RDF graphs and thus can be viewed as a refined form of RDF interpretation. In DS, models are directly defined based on the structure of OWL axioms in the conceptual framework of Description Logics (which in turn is based on first-order logic). Due to this, DS is only defined for ontologies that belong to the OWL DL language (or to any of its profiles) while RS can also be used on OWL Full. Besides this restriction, OWL language fragments are not tied to either semantics, leaving 9 valid combinations of syntactic fragment and formal semantics [34].\nRS is arguably more robust since it is defined for any RDF graph while DS only works for ontologies in OWL DL. However, RS entailment (of derived facts) is undecidable so that concrete implementations can compute only a subset of the conclusions that the semantics specifies. In contrast, there are complete implementations for computing entailments under DS, though with a high (super-exponential) worst-case complexity if all of OWL DL is to be covered. When further restricting to the OWL profiles, entailment checking under DS can even be done in polynomial time. For RS, it is not known in general if the entailment problem becomes simpler in these cases. It is known, however, that RS and DS yield the same entailments on OWL RL under certain additional conditions, leading to a partial tractability result for RS for this particular case [6]. Similar results could be obtained in other cases since DS reasoning algorithms can typically be modified to obtain correct\n(though often incomplete) RS reasoners. DS reasoning in all of the OWL profiles and significant parts of OWL DL can be implemented using rules in a forward-chaining manner. For OWL RL, an algorithm is suggested in the specification [6], while other works have covered OWL EL [24] and parts of OWL DL that also cover OWL QL [33]. For OWL QL, query rewriting is a more common reasoning technique [5, 31]. There are many different reasoning techniques for OWL DL under DS, though not all of them lead to polynomial algorithms when applied to the OWL profiles. Two (necessarily incomplete) reasoning methods are known for RS: algorithms based on sets of derivation rules like the ones for OWL RL and an approach based on using firstorder theorem provers [32]."}, {"heading": "3. SURVEY OF RDFS & OWL ADOPTION", "text": "ON THE WEB OF DATA\nWe now present an empirical survey of RDFS & OWL adoption on the Web of Data. Our survey is conducted over the Billion Triple Challenge 2011 corpus, which consists of 2.145 billion quadruples crawled from 7.411 million RDF/XML documents through an open crawl ran in May/June 2011 spanning 791 pay-level domains. (A pay-level domain is a direct sub-domain of a top-level domain (TLD) or a second-level country domain (ccSLD), e.g., dbpedia.org, bbc.co.uk. This gives us our notion of \u201cdomain\u201d). This corpus represents a broad sample of the Web of Data."}, {"heading": "3.1 Measures Used", "text": "In order to adequately characterise the uptake of various RDF(S) and OWL features used in this corpus, we present different measures to quantify their prevalence and prominence.\nFirst, we look at the prevalence of use of different features, i.e., how often they are used. Here, we must take into account the diversity of the data under analysis, where few domains account for a great many triples and many domains account for few triples, where certain domains tend to publish many small documents and others publish few large documents, and so forth [20]. We thus present three statistics: (1) number of axioms using the feature [Ax], (2) number of documents [Doc] and (3) number of domains [Dom].\nSecond, we look at the prominence of use of different features. We use PageRank to quantify our notion of prominence: PageRank calculates a variant of the Eigenvector centrality of nodes (e.g., documents) in a graph, where taking the intuition of directed links as \u201cpositive votes\u201d, the resulting scores help characterise the relative prominence of particular nodes on the Web [29, 15].\nIn particular, we first rank documents in the corpus. To construct the graph, we consider RDF documents as nodes, where a directed edge (d1, d2) is extended from document d1 to d2 iff d1 hosts RDF data that contains (in any triple position) a URI that dereferences to document d2. This notion of dereferenceable links is core to Linked Data principles [3]. Note also that we follow redirects when checking dereferenceability. We then apply a standard PageRank analysis over the resulting directed graph, using the power iteration method with ten iterations. For reasons of space, we refer the interested reader to [29] for more detail on PageRank, and [20] for more detail on the particular algorithms used in this paper.\nGiven these rank scores, for the different RDF(S) and OWL features we then present (1) the sum of PageRank scores for documents in which they are used [ \u2211 Rank]; (2) the max PageRank score of the highest-ranked document in which it appears [max Rank]; (3) the max PageRank position of that document in the ordering of the 7.411 million documents [max Pos].\nIn terms of intuition under the random surfer model of Page-\nRank [29], given an agent starting from a random location and traversing documents on (our sample of) the Web of Data through randomly selected dereferenceable URIs, the \u2211 Rank value for a feature approximately indicates the probability with which that agent will be at a document using that feature after traversing ten links. In other words, the score indicates the likelihood of an agent, operating over the Web of Data based on dereferenceable principles, to encounter a given feature.\nThe graph extracted from the corpus consists of 7.411 million nodes and 198.6 million edges. Table 1 presents the top ten ranked documents in our corpus, which are dominated by core meta-vocabularies, documents linked therefrom, and other popular vocabularies; we also present the ranks of other notable documents mentioned in the following section.2"}, {"heading": "3.2 Survey of RDF(S)/OWL Features", "text": "Table 2 presents the results of the survey of RDF(S) and OWL usage in our corpus, where for features with non-trivial semantics, we present the measures mentioned in the previous section, as well as support for the features in the different reasoning profiles discussed in Section 2.2. We exclude rdf:type, which appeared in 90.3% of documents. We present the table ordered by the sum of PageRank measure [ \u2211 Rank]; recall that Table 1 provides a legend for notable documents (Pos<1,000). In column BF, we indicate which features have expressions that can be represented as a single RDF triple, i.e., which features do not require auxiliary blank nodes of the form _:x or the SEQ production in Table 1 of the OWL 2 Mapping to RDF document [30]. This distinction is motivated by our initial observations that such features are typically the most widely used in Web data.\nFigure 1 gives a visual impression of the sum of PageRank measure for the listed features (log scale), where different shades of grey are used to indicate to which vocabulary a term belongs (e.g., distinguishing the terms new in OWL 2 from the ones already in OWL 1).\nRegarding prevalence, we see from Table 2 that owl:sameAs is the most widely used axiom in terms of documents (1.778 mil2We ran another similar analysis with links to and from core RDF(S) and OWL vocabularies disabled. The results for the feature analysis remained similar. Mainly owl:sameAs dropped several positions in terms of the sum of PageRank.\nlion; 24%) and domains (117; 14.8%). Surprisingly (to us), RDF container membership properties (rdf:_*) are also heavily used. Regarding prominence, we make the following observations:\n(1) The top six features are those that form the core of RDFS [28]. (2) The RDF(S) declaration classes rdfs:Class, rdf:Property are used in fewer, but more prominent documents than OWL\u2019s versions owl:Class, owl:DatatypeProperty, owl:ObjectProperty.\n(3) The top eighteen features are expressible with a single RDF triple. The highest ranked primitive for which this is not the case is owl:unionOf in nineteenth position, which requires use of RDF collections (i.e., lists). Union classes are often specified as the domain or range of a given property: the most prominent such example is the SKOS vocabulary (the seventh highest ranked document) which specifies the range of the skos:member property as the union of skos:Concept and skos:Container as in (1) above.\n(4) Of the features new to OWL 2, the most prominently used is owl:NamedIndividual in thirty-first position. Our crawl was conducted nineteen months after OWL 2 became a W3C Recommendation (Oct. 2009); by means of a quick scan of the max Pos col-\numn of Table 2, we note that new OWL 2 features have had little penetration in prominent Web vocabularies during that interim. Further, several OWL 2 features were not used at all in our corpus.\n(5) owl:complementOf and owl:differentFrom are the least prominently used original OWL features.\nIn terms of profile support, we observe that RDFS has good catchment for a few of the most prominent features, but otherwise has poor coverage. Aside from syntactic/declaration features, from the top-20 features, L2 misses functional properties(pos=12), disjoint classes(15), inverse-functional properties(18) and union classes(19). RDFS-Plus omits support for disjoint(15) and union classes(19). DLP \u2013 as defined by Volz [37, \u00a7A] \u2013 has coverage of all such features, but does not support inverse-functional(18) datatype properties. pD* does not support disjoint(15) or union classes(19).\nRegarding the OWL profiles, OWL EL and OWL QL both omit support for important top-20 features. Neither include functional(12) or inverse-functional properties(18), or union classes(19). OWL EL further omits support for inverse(14) and symmetric properties(20). OWL QL does not support the prevalent same-as(16) feature. Con-\nversely, OWL RL has much better coverage, albeit having only partial support for union classes(19).\nSumming up, we acknowledge that such a survey of RDFS and OWL cannot give a universal or definitive indication of the most important modelling features for Linked Data. Also, OWL 2 terms might need some more time for adoption still. However, the results offer useful insights into trends of adoption, which inform the design of a novel OWL profile tailored for the Web of Data."}, {"heading": "3.3 Survey of Datatype Use", "text": "We now look at the use of datatypes on the Web of Data. Aside from plain literals, the RDF semantics defines a single datatype supported under RDF-entailment: rdf:XMLLiteral [17]. However, the RDF semantics also defines D-entailment, which provides interpretations over a datatype map that gives a mapping from lexical datatype strings into a value space. The datatype map may also impose disjointness constraints within its value space. These interpretations allow for determining which lexical strings are valid for a datatype, which different lexical strings refer to the same value and which to different values, and which sets of datatype values are disjoint from each other. An XSD-datatype map is then defined which extends the set of supported datatypes into those defined for XML Schema (1.0), including types for boolean, numeric, temporal, string and other forms of literals. Datatypes which are deemed to be ambiguously defined (viz. xsd:duration) or specific to XML (e.g., xsd:QName), etc. are omitted.\nThe original OWL specification recommends use of a similar set of datatypes to that for D-entailment, where compliant reasoners are required to support xsd:string and xsd:integer. Further, OWL allows for defining enumerated datatypes.\nWith the standardisation of OWL 2 came two new datatypes, namely owl:real and owl:rational. Also, OWL 2 added support for xsd:dateTimeStamp. However, XSD datatypes relating to date, time and Gregorian calendar values are not supported. Further, OWL 2 introduced mechanisms for defining new datatypes by restricting facets of legacy defined datatypes; however, we note from owl:onDatatype in Table 2 that facet restrictions have only one or two uses in our corpus.\nImplementing the entire range of RDF, XSD and OWL datatypes can be costly [10], with custom code (or an external library) re-\nquired to support each one. Thus, it is interesting to see which datatypes are most commonly used on the Web of Data.\nIn our corpus, we found 278 different datatype URIs assigned to literals. Of these, 158 came from the DBpedia exporter which models SI units, currencies, etc., as datatypes. Using analogous measures as before, Table 3 lists the top standard RDF(S), OWL and XSD datatypes as used to type literals in our corpus. We omit max-rank statistics for brevity, and omit plain literals which were used in 6.609 million documents (89%). D indicates the datatypes supported by D-entailment with the recommended XSD datatype map. O2 indicates the datatypes supported by OWL 2.\nWe observe from the table that the top four standard datatypes are supported by both the traditional XSD datatype map and in\nOWL 2. However, OWL 2 does not support xsd:date(5) which is prominently featured in our corpus, and does not support Gregorian datatypes(10,15,18,20,22) nor xsd:time(26). Despite not being supported by any standard entailment regime, xsd:duration(14) was used in 28 thousand documents across four different domains.\nConversely, various standard datatypes are not used at all in the data; e.g., xsd:dateTimeStamp, the \u201cnew\u201d OWL datatypes, binary datatypes and various normalised-string/token datatypes."}, {"heading": "4. AVAILABLE TOOL SUPPORT", "text": "When asking for the practical utility of certain OWL constructs, it is crucial to consider the available tool support. In this section, we survey the availability of software that provides the necessary technical infrastructure for building complex applications, i.e., databases, reasoners and libraries.\nEven if no logical inferencing is required, tools that want to support a certain OWL feature usually need to be able to read OWL documents that contain this feature or use a library for this task. Conformance with the OWL standard even requires support for the RDF/XML serialisation as an input format [34]. Parsing triples, e.g., in RDF/XML or Turtle format, into OWL axioms is not an easy task, since axioms can be composed of several RDF triples, which might be distributed all over the document [30]. In addition, OWL axioms may require use of arbitrary-length RDF lists which require particular attention to parse. Moreover, many RDF triples are ambiguous and type declaration axioms are necessary to resolve this. Further OWL-specific mechanisms such as imports add to the difficulty of writing an OWL parser based on one for RDF/XML or Turtle. Consequently, there are hardly any standalone libraries for parsing OWL (as opposed to RDF): we are only aware of the Java-based OWL API [21].\nFor tools that cannot use the OWL API due to technical or legal constraints, this puts up a major barrier for using OWL. Luckily, OWL axioms that are represented in a single RDF triple do not require the detection of complex triple patterns and can easily be processed with the RDF libraries and parsers that are available for many programming languages. The question of whether a feature can be expressed in a single triple or not may thus already have significant consequences for the practical cost of supporting it.\nDatabases are another important class of tools for building RDF applications and a sizeable amount of commercial and non-commercial systems is available today. Many of these systems evaluate OWL features to provide improved query answering services. Table 4 provides an overview of tools in that area. We restrict to tools that have native support at least for rdfs:subClassOf and rdfs:subPropertyOf reasoning (excluding, e.g., 5store), are developed for production use (excluding prototypes such as YARS2 [16] and QueryPie [36]) and that are meant to be used with large amounts of instance data (excluding OWL EL tools such as ELK [22]). The table lists the most frequently implemented features explicitly and describes profile support in a separate column. We additionally mention the main inference strategy and the source of our information.3\nA number of tools support the (near-)complete OWL RL profile. Jena with the \u201cOWL mini\u201d ruleset has an incomplete implementation of OWL (1) DL features that can be viewed as an approximation of OWL RL. PelletDb and QuOnto are reasoning layers on top of a database with support for OWL DL and OWL QL, respectively.\n3We note that it is difficult to verify whether the tools indeed hold what they claim, e.g., in practice one might find that the support is not as complete as advertised. Nevertheless, we take each system\u2019s description as an indication of available support.\nDLEJena uses Pellet to perform TBox (schema) reasoning, where the resulting entailments and the OWL RL/RDF rules are used to generate a set of ABox (instance) rules, which are then executed using Jena\u2019s RETE engine.\nContrasting with these fairly powerful implementations, we find a number of tools that support only a few selected semantic features, including some that only support a fragment of RDFS.\nThe reasoning algorithms that have been used are also important in practice. Forward chaining (materialisation) often incurs significant penalties for data updates, although there are approaches to alleviate this, e.g., AllegroGraph advertises \u201cdynamic materialisation\u201d as a compromise. Backward chaining, in contrast, affects query answering performance but allows for easier updates. In the case of OWL QL (and RDFS), backward chaining can be performed in a particularly effective kind of query rewriting that depends on the schema information only and is thus likely to scale to bigger data volumes. The tableau approach of PelletDb, on the other hand, is more demanding when used at query time but can support all features of OWL DL.\nSummarising, among the listed systems, three systems work with the Direct Semantics of OWL (PelletDb, DLEJena and QuOnto), whereas the other systems are rule-based and work directly with RDF triples, usually via forward chaining. Thus, we conclude that an implementation via rules and compatibility also with the RDF-Based Semantics is an important criteria for comprehensive tool support. Surprisingly, only two thirds of the tools support owl:sameAs, which is one of the most popular features according to our survey. A possible explanation is that owl:sameAs blows up the size of the materialisation when using forward-chaining, so for an efficient support special optimisations are required, as, e.g., implemented in OWLIM or Oracle 11g [23]. Although, four systems (nearly) support OWL RL, the complexity of a fully compliant and efficient implementation is still considered high [23].\nRegarding datatypes, many triples stores use internal canonicalisation of typed literals, but full datatype reasoning is only sparsely supported or documented; some tools such as OWLIM explicitly do not support datatype rules of OWL RL. Datatype support in several tools is, for example, surveyed by Emmons et al. [10]."}, {"heading": "5. DEFINING THE OWL LD PROFILE", "text": "In this section, we build upon our previous observations to suggest a simple OWL profile that is adequate for the curent needs of the Web. In the previous sections, we have identified a number of key issues for OWL adoption on the Web:\n1. Adequacy: features that are widely used on the Web should be included. 2. Implementability: features that are more challenging to process and reason with should be avoided. 3. Robustness: noisy and unreliable data should not prevent the use of ontological data in reasoning.\nComparing this to the design guidelines of RDFS-Plus [1], we can see that adequacy relates to \u201cpracticality\u201d while implementability subsumes to \u201ccomputational feasibility\u201d. We do not consider \u201cpedagogism\u201d as a design goal since we did not assess how intuitive features are. In contrast, the work presented in Section 3 and 4 provides us with a much better understanding for assessing implementability and adequacy. Robustness has not been considered as a design goal for RDFS-Plus while we find it to be of great importance for making sense of Web data.\nEach of the above requirements leads to a number of concrete aspects. Adequacy has been discussed in Section 3 based on a sample of published ontologies. Looking at Table 2, we can see that\nmany of the most frequently used features are of a simple structure. In fact, owl:unionOf is the highest ranked feature that is not expressed by a single triple in RDF serialisations of OWL.\nImplementability was discussed in Section 4. We observed that parsing OWL documents in RDF-based syntaxes (RDF/XML or Turtle) is easier when restricted to features that can be expressed by single triples, and which are thus directly represented in the RDF data model of available tools. Moreover, inferencing is more difficult for some features than for others, even in rule-based approaches used commonly for OWL RL, e.g., support for list-based (multi-triple) expressions that can be of arbitrary length [4].\nRobustness requires a high tolerance against syntactic errors. The RDF-Based Semantics has this feature and can always be applied, hence no special language design is needed. However, it is also desirable to be able to apply the Direct Semantics to a fragment as it yields stronger completeness guarantees for reasoning. Even if RDF-Based entailments are desired, the completeness of DS reasoning methods can be used to obtain similar guarantees for RS [6, Theorem PR1]. This kind of robustness can be accomplished by reducing the use of features for which OWL DL imposes additional requirements, in particular cardinalities and property chains.\nAnother aspect of robustness is tolerance to inconsistencies. This feature is generally available in OWL profiles that are not able to express truly disjunctive information. Due to this, all inconsistencies are directly related to an individual or literal upon which conflicting requirements are imposed (including the special case of ill-typed literal values). Hence, it is easy to ignore (all elements involved in) inconsistencies and to continue reasoning on the remaining consistent ontology to derive meaningful conclusions. Any OWL profile (or subset thereof) has this feature.\nFrom these observations, we derive that it is a reasonable design guideline for an OWL profile to restrict to OWL axioms that are in OWL RL and at the same time are expressed as single RDF triples. This directly addresses implementability based on the above observations together with the fact that OWL RL is now widely implemented. Adequacy is addressed since the most important features identified above are both in RL and expressed in single triples. Note that the coverage of additional, rarely used features like reflexive properties is not a concern from the viewpoint of adequacy (which asks for coverage, not for exclusivity) and is not difficult to implement in the restricted fragment either.\nRobustness for interpretation in DS (i.e., as a subset of OWL DL) is eased by the omission of property chains and (most) cardinalities (note that functionality remains). However, other restrictions of OWL DL regarding the need for declarations, the non-existence of inverse functional data properties, and the restrictions on blank nodes are still relevant. We suggest to develop canonical (and thus\npredictable) repair strategies for addressing these issues \u2013 specifying this is left to future work. Moreover, robustness suggests that, similarly to OWL RL, arbitrary RDF graphs should be allowed when using RS for reasoning. To reconcile these issues, we first define a syntactic OWL LD profile as a subset of OWL RL (which in turn imposes the syntactic restrictions of OWL DL) and we then suggest an RS based extension of this profile for reasoning with arbitrary OWL Full ontologies.\nFormally, we define OWL LD by restricting the OWL RL grammar [6]. Roughly speaking, we remove all definitions and mentions of productions listed as follows:\nDatatype entailment: DataRange, DataIntersectionOf, DatatypeDefinition\nBoolean connectives & enums.: *OneOf, *IntersectionOf, *UnionOf, *ComplementOf\nRestriction classes: *ValuesFrom, *HasValue, zeroOrOne, *Cardinality\nChains & keys: propertyExpressionChain, HasKey\nNegative property assertions: sourceIndividual, target*, Negative*PropertyAssertion\nWe further restrict the productions forDifferentIndividuals and Disjoint* to not use the list-based syntaxes. The full grammar can be found online [12]. All additional structural restrictions of OWL DL are inherited from OWL RL. Note that all RL datatypes are supported as well, though implementers may use our study in Section 3 to select most relevant datatypes to support (the OWL specification generally allows conforming tools to answer entailment questions with Unknown if a used feature is not supported).\nComparing OWL LD with earlier approaches, it is interesting to note that it can be viewed as a natural extension of languages like L2, RDFS-Plus, RDFS 3.0 as discussed in Section 2 and 3. In particular, RDFS 3.0 is already close to OWL LD which mainly adds further OWL 2 constructs from OWL RL while only omitting owl:AllDifferent as the list-based variant of owl:differentFrom. This adds to our confidence that OWL LD is a natural OWL profile that can be motivated from a number of perspectives."}, {"heading": "6. REASONING IN OWL LD", "text": "OWL LD falls into a syntactic subset of OWL DL and can be processed by tools that implement DS entailment checking. On the other hand, we can also restrict the OWL RL/RDF rules to obtain a terse set of inference rules that yields sound but possibly incomplete entailment under RS; the full set is found in Table 5 at the end of the paper. These rules are applicable to any RDF graph allowing us to robustly draw sound conclusions from Web data.\nThe OWL LD ruleset comprises of rules of the form:\nB1 \u2227 . . . \u2227 Bn \u2192 H (0 \u2264 n \u2264 3) where H is called the head and B1\u2227 . . .\u2227Bn is the body. A rule with an empty body (e.g., the rule cls-thing) is simply a fact. Multiple atoms in rule heads (e.g., eq-ref) denote conjunctions that could also be expressed using multiple rules with the same body. The datatype rules are somewhat exceptional, however, and require custom logic outside of a standard rule-engine. Moreover, some rules use false in the head to express that an inconsistency is to be derived. An inconsistency-tolerant system could already be realised by simply not taking these conclusions into account for query answering.\nUnlike OWL RL/RDF which encodes arbitrary-length lists in the bodies of some of its rules, the bodies of OWL LD rules comprise solely of a fixed set of (a maximum of three) ternary RDF atoms of the form T (s, p, o) where s, p, o \u2208 C \u222a V. These restrictions simplify the use of the OWL LD rules in a variety of tools. Excluding datatype support, since the rules can only derive triples that are built from the set C of RDF constants that originally occur in the ontology and ruleset, the number of entailments is bounded by |C|3. This bound is tight, e.g., the rules entail all possible triples from the RDF graph owl:sameAs owl:sameAs a ; rdfs:domain owl:Thing . Optimisations for rule-based systems as explored in many works can be applied to implement the OWL LD inferencing efficiently. Systems can efficiently support datatypes by, e.g., only checking entailments as needed, or using canonicalisation techniques, etc.\nWe are now left to describe the relationship between DS and RS for the OWL LD profile.\nTheorem 1. Let R contain the OWL LD entailment rules (Table 5) and let O1 and O2 be OWL 2 ontologies that satisfy the OWL LD grammar and the following properties:\n1. neither O1 nor O2 contains an IRI that is used for more than one type of entity (i.e., no IRI is used both as, say, a class and an individual); 2. O1 does not contain SubAnnotationPropertyOf, AnnotationPropertyDomain or AnnotationPropertyRange; 3. each axiom in O2 is an assertion of the form as specified below, for a, a1, and a2 named individuals:\n(a) ClassAssertion(C a) where C is a class, (b) ObjectPropertyAssertion(OP a1 a2) where OP is\nan object property, (c) DataPropertyAssertion(DP a1 a2) where DP is a\ndata property, or (d) SameIndividual(a1 a2).\nFurthermore, let RDF(O1) and RDF(O2) be translations of O1 and O2, respectively, into RDF graphs [30]; and let FO(RDF(O1)) and FO(RDF(O2)) be the translation of these graphs into first-order theories in which triples are represented using the T predicate. Then, O1 entails O2 under the OWL 2 Direct Semantics [26] iff FO(RDF(O1)) \u222a R entails FO(RDF(O2)) under the standard firstorder semantics.\nThe proof of the Correspondence Theorem below follows immediately from the according theorem for OWL RL [6, Theorem PR1] together with the fact that OWL LD is a restriction of OWL RL. Like in the case of OWL RL, this result applies only to checking the entailment of basic facts, not of OWL axioms in general."}, {"heading": "7. RELATED WORK", "text": "Here we discuss related studies on the use of the RDFS and OWL on the Web (related OWL profiles have been covered in Section 2).\nOne of the earliest comprehensive empirical studies of RDF Web data was presented by Ding et al. in 2005 [8]. They report about the prevalence of vocabulary terms in over 1.5 million RDF/XML Web documents, where the bulk of data was described using the Friend of a Friend (FOAF) and Dublin Core (DC) ontologies. The work focuses on characterising the structure and distributions of the raw data rather than issues relating to semantics or to RDFS and OWL.\nVarious works look at the syntactic profiles of OWL ontologies on the Web [2, 38, 7]. Bechhofer and Volz identify and categorise OWL DL restrictions violated by a sample group of 201 OWL ontologies (all of which were found to be in OWL Full); these include incorrect or missing typing of classes and properties, complex object properties (e.g., functional properties) declared to be transitive, inverse-functional datatype properties, and so forth [2]. In a later survey, Wang et al. study over 1,276 ontologies, where 924 (72.4%) were identified as being in OWL Full, although they proposed that 863 could be patched (93.4%) [38]. In a similar study, d\u2019Aquin et al. found that while 81% of 22,200 RDF Web documents surveyed fell into OWL Full, from the features used, 95% would fall under the expressivity of the lightweight AL(D) Description Logic [7]. To summarise, these studies show that restrictions laid out in the OWL standard (specifically for the OWL Lite and OWL DL dialects) are not well-followed by Web ontologies, but that such ontologies are typically relatively inexpressive. These works re-enforce the need for our RS-based extension of OWL LD.\nMore recent papers focus on analysing owl:sameAs adoption on the Web of Data [9, 14]. Ding et al. provide a quantitative analysis of the owl:sameAs graph extracted from the BTC-2010 dataset (the ancestor of our corpus) [9], summarising the use of owl:sameAs to link between different publishers of Linked Data. In a similar vein, Halpin et al. [14] focus on the incorrect use of owl:sameAs [14]; they employ four human judges to manually inspect 500 such links sampled from Web data, where their results suggest that owl:sameAs is often used imprecisely, although disagreement between the judges indicates that the quality of specific owl:sameAs links can be subjective. Such surveys indicate that reasoners must proceed cautiously when operating over Web data."}, {"heading": "8. CONCLUSION", "text": "We have presented a comprehensive analysis of the current use of OWL on the Web based on a large sample of RDF/XML documents. We confirmed that OWL has indeed \u201carrived\u201d on the Web of Data, albeit to varying degrees for different features.\nFollowing Linked Data principles, we used a PageRank algorithm to assess the importance of individual documents. Our results show that single-triple expressible OWL RL features are most important on the Web. A survey of existing tools confirms that these simple features tend to receive better support.\nBased on these observations, we defined the OWL LD profile as a sub-language of OWL RL and provided a rule-based reasoning calculus for it. Though motivated by a new analysis of the current ontology documents on the Web of Data, OWL LD is well-aligned with the earlier proposals of RDFS-Plus and L2, indicating that it is a natural profile that can be motivated from various perspectives. We argue that this is also due to the syntactic restriction of OWL features to those that can be expressed using single RDF triples. What may appear as a superficial syntactic feature on a first glance actually identifies exactly the cases in which OWL expressions are fully aligned with the RDF data model. We argue that this bears crucial advantages regarding not only tool support but also usability. We therefore believe that, even if OWL as a whole might never arrive on the Web of Data, the OWL LD profile is a natural fit for ontological (aka. vocabulary) modelling on the Web of Data."}, {"heading": "9. REFERENCES", "text": "[1] D. Allemang and J. A. Hendler. Semantic Web for the\nWorking Ontologist: Effective Modeling in RDFS and OWL. Morgan Kaufmann/Elsevier, 2008.\n[2] S. Bechhofer and R. Volz. Patching syntax in OWL ontologies. In Proc. 3rd Int. Semantic Web Conf. (ISWC\u201904), pages 668\u2013682. Springer, 2004.\n[3] T. Berners-Lee. Linked Data. W3C Design Issues, July 2006. [4] B. Bishop and S. Bojanov. Implementing OWL 2 RL and\nOWL 2 QL rule-sets for OWLIM. In Proc. OWLED 2011 Workshop on OWL: Experiences and Directions, 2011.\n[5] D. Calvanese, G. De Giacomo, D. Lembo, M. Lenzerini, and R. Rosati. Tractable reasoning and efficient query answering in description logics: The DL-Lite family. J. of Automated Reasoning, 39(3):385\u2013429, 2007.\n[6] B. Cuenca Grau, B. Motik, Z. Wu, A. Fokoue, and C. Lutz. OWL 2 Web Ontology Language: Profiles. W3C Recommendation, Oct. 2009.\n[7] M. d\u2019Aquin, C. Baldassarre, L. Gridinoc, S. Angeletou, M. Sabou, and E. Motta. Characterizing knowledge on the Semantic Web with Watson. In Proc. 5th Int. Workshop on Evaluation of Ontologies and Ontology-based Tools, pages 1\u201310, 2007.\n[8] L. Ding and T. Finin. Characterizing the semantic web on the web. In Proc. 5th Int. Semantic Web Conf. (ISWC\u201906), pages 242\u2013257. Springer, 2006.\n[9] L. Ding, J. Shinavier, Z. Shangguan, and D. L. McGuinness. SameAs networks and beyond: Analyzing deployment status and implications of owl:sameAs in linked data. In Proc. 9th Int. Semantic Web Conf. (ISWC\u201910), pages 145\u2013160. Springer, 2010.\n[10] I. Emmons, S. Collier, M. Garlapati, and M. Dean. RDF literal data types in practice. In SSWS 2011, 2011.\n[11] F. Fischer, G. \u00dcnel, B. Bishop, and D. Fensel. Towards a scalable, pragmatic knowledge representation language for the web. In Ershov Memorial Conf., pages 124\u2013134, 2009.\n[12] B. Glimm, A. Hogan, M. Kr\u00f6tzsch, and A. Polleres. OWL LD Entailment Ruleset and Implementational Notes, Nov. 2011. http://www.semanticweb.org/OWLLD/.\n[13] B. Grosof, I. Horrocks, R. Volz, and S. Decker. Description logic programs: Combining logic programs with description logic. In World Wide Web, 2004.\n[14] H. Halpin, P. J. Hayes, J. P. McCusker, D. L. McGuinness, and H. S. Thompson. When owl:sameAs isn\u2019t the same: An analysis of identity in linked data. In Proc. 9th Int. Semantic Web Conf. (ISWC\u201910), pages 305\u2013320. Springer, 2010.\n[15] A. Harth, S. Kinsella, and S. Decker. Using naming authority to rank data and ontologies for web search. In Proc. 8th Int. Semantic Web Conf. (ISWC\u201909), pages 277\u2013292, 2009.\n[16] A. Harth, J. Umbrich, A. Hogan, and S. Decker. YARS2: A federated repository for querying graph structured data from the Web. In Proc. 6th Int. Semantic Web Conf. (ISWC\u201907), pages 211\u2013224. Springer, 2007.\n[17] P. Hayes. RDF Semantics. W3C Recommendation, Feb. 2004.\n[18] T. Heath and C. Bizer. Linked Data: Evolving the Web into a Global Data Space (1st Edition). Morgan & Claypool, 2011.\n[19] J. A. Hendler. RDFS 3.0. In W3C Workshop on RDF Next Steps, June 2010.\n[20] A. Hogan. Exploiting RDFS and OWL for Integrating Heterogeneous, Large-Scale, Linked Data Corpora. PhD\nthesis, DERI, NUIG, 2011. [21] M. Horridge, S. Bechhofer, and O. Noppens. Igniting the\nOWL 1.1 touch paper: The OWL API. In Proc. OWLED 2007 Workshop on OWL: Experiences and Directions, volume 258. CEUR-WS.org, 2007.\n[22] Y. Kazakov, M. Kr\u00f6tzsch, and F. Simanc\u030c\u00edk. Concurrent classification of EL ontologies. In Proc. 10th Int. Semantic Web Conf. (ISWC\u201911). Springer, 2011.\n[23] V. Kolovski, Z. Wu, and G. Eadon. Optimizing enterprise-scale OWL 2 RL reasoning in a relational database system. In Proc. 9th Int. Semantic Web Conf. (ISWC\u201910), pages 436\u2013452. Springer, 2010.\n[24] M. Kr\u00f6tzsch. Efficient rule-based inferencing for OWL EL. In Proc. 22nd Int. Conf. on Artificial Intelligence (IJCAI\u201911), pages 2668\u20132673, 2011.\n[25] G. Meditskos and N. Bassiliades. DLEJena: A practical forward-chaining OWL 2 RL reasoner combining Jena and Pellet. J. of Web Semantics, 8(1):89\u201394, 2010.\n[26] B. Motik, P. F. Patel-Schneider, and B. Cuenca Grau. OWL 2 Web Ontology Language: Direct Semantics. W3C Recommendation, Oct. 2009.\n[27] B. Motik, P. F. Patel-Schneider, and B. Parsia. OWL 2 Web Ontology Language: Structural Specification and Functional-Style Syntax. W3C Recommendation, Oct. 2009.\n[28] S. Mu\u00f1oz, J. P\u00e9rez, and C. Gutierrez. Simple and efficient minimal RDFS. J. of Web Semantics, 7(3):220\u2013234, 2009.\n[29] L. Page, S. Brin, R. Motwani, and T. Winograd. The PageRank Citation Ranking: Bringing Order to the Web. Technical report, Stanford, 1998.\n[30] P. F. Patel-Schneider, B. Motik, B. Cuenca Grau, I. Horrocks, B. Parsia, A. Ruttenberg, and M. Schneider. OWL 2 Web Ontology Language: Mapping to RDF Graphs. W3C Recommendation, Oct. 2009.\n[31] H. P\u00e9rez-Urbina, B. Motik, and I. Horrocks. Tractable query answering and rewriting under description logic constraints. J. of Applied Logic, 8(2):151\u2013232, 2009.\n[32] M. Schneider and G. Sutcliffe. Reasoning in the OWL 2 Full ontology language using first-order automated theorem proving. In Proc. 23rd Int. Conf. on Automated Deduction (CADE-23), pages 461\u2013475. Springer, 2011.\n[33] F. Simanc\u030c\u00edk, Y. Kazakov, and I. Horrocks. Consequence-based reasoning beyond Horn ontologies. In Proc. 22nd Int. Conf. on Artificial Intelligence (IJCAI\u201911), pages 1093\u20131098, 2011.\n[34] M. Smith, I. Horrocks, M. Kr\u00f6tzsch, and B. Glimm. OWL 2 Web Ontology Language: Conformance. W3C Recommendation, Oct. 2009.\n[35] H. J. ter Horst. Completeness, decidability and complexity of entailment for RDF Schema and a semantic extension involving the OWL vocabulary. J. of Web Semantics, 3, 2005.\n[36] J. Urbani, F. van Harmelen, S. Schlobach, and H. Bal. QueryPIE: Backward reasoning for OWL Horst over very large knowledge bases. In Proc. 10th Int. Semantic Web Conf. (ISWC\u201911). Springer, 2011.\n[37] R. Volz. Web Ontology Reasoning with Logic Databases. PhD thesis, Universit\u00e4t Karlsruhe, 2004.\n[38] T. D. Wang, B. Parsia, and J. A. Hendler. A survey of the web ontology landscape. In Proc. 5th Int. Semantic Web Conf. (ISWC\u201906), pages 682\u2013694. Springer, 2006."}], "references": [{"title": "Semantic Web for the Working Ontologist: Effective Modeling in RDFS and OWL", "author": ["D. Allemang", "J.A. Hendler"], "venue": "Morgan Kaufmann/Elsevier,", "citeRegEx": "1", "shortCiteRegEx": null, "year": 2008}, {"title": "Patching syntax in OWL ontologies", "author": ["S. Bechhofer", "R. Volz"], "venue": "Proc. 3rd Int. Semantic Web Conf. (ISWC\u201904), pages 668\u2013682. Springer,", "citeRegEx": "2", "shortCiteRegEx": null, "year": 2004}, {"title": "Linked Data", "author": ["T. Berners-Lee"], "venue": "W3C Design Issues, July", "citeRegEx": "3", "shortCiteRegEx": null, "year": 2006}, {"title": "Implementing OWL 2 RL and OWL 2 QL rule-sets for OWLIM", "author": ["B. Bishop", "S. Bojanov"], "venue": "Proc. OWLED 2011 Workshop on OWL: Experiences and Directions,", "citeRegEx": "4", "shortCiteRegEx": null, "year": 2011}, {"title": "Tractable reasoning and efficient query answering in description logics: The DL-Lite family", "author": ["D. Calvanese", "G. De Giacomo", "D. Lembo", "M. Lenzerini", "R. Rosati"], "venue": "J. of Automated Reasoning, 39(3):385\u2013429,", "citeRegEx": "5", "shortCiteRegEx": null, "year": 2007}, {"title": "OWL 2 Web Ontology Language: Profiles", "author": ["B. Cuenca Grau", "B. Motik", "Z. Wu", "A. Fokoue", "C. Lutz"], "venue": "W3C Recommendation, Oct.", "citeRegEx": "6", "shortCiteRegEx": null, "year": 2009}, {"title": "Characterizing knowledge on the Semantic Web with Watson", "author": ["M. d\u2019Aquin", "C. Baldassarre", "L. Gridinoc", "S. Angeletou", "M. Sabou", "E. Motta"], "venue": "In Proc. 5th Int. Workshop on Evaluation of Ontologies and Ontology-based Tools,", "citeRegEx": "7", "shortCiteRegEx": "7", "year": 2007}, {"title": "Characterizing the semantic web on the web", "author": ["L. Ding", "T. Finin"], "venue": "Proc. 5th Int. Semantic Web Conf. (ISWC\u201906), pages 242\u2013257. Springer,", "citeRegEx": "8", "shortCiteRegEx": null, "year": 2006}, {"title": "SameAs networks and beyond: Analyzing deployment status and implications of owl:sameAs in linked data", "author": ["L. Ding", "J. Shinavier", "Z. Shangguan", "D.L. McGuinness"], "venue": "Proc. 9th Int. Semantic Web Conf. (ISWC\u201910), pages 145\u2013160. Springer,", "citeRegEx": "9", "shortCiteRegEx": null, "year": 2010}, {"title": "RDF literal data types in practice", "author": ["I. Emmons", "S. Collier", "M. Garlapati", "M. Dean"], "venue": "SSWS 2011,", "citeRegEx": "10", "shortCiteRegEx": null, "year": 2011}, {"title": "Towards a scalable, pragmatic knowledge representation language for the web", "author": ["F. Fischer", "G. \u00dcnel", "B. Bishop", "D. Fensel"], "venue": "Ershov Memorial Conf., pages 124\u2013134,", "citeRegEx": "11", "shortCiteRegEx": null, "year": 2009}, {"title": "Description logic programs: Combining logic programs with description logic", "author": ["B. Grosof", "I. Horrocks", "R. Volz", "S. Decker"], "venue": "World Wide Web,", "citeRegEx": "13", "shortCiteRegEx": null, "year": 2004}, {"title": "When owl:sameAs isn\u2019t the same: An analysis of identity in linked data", "author": ["H. Halpin", "P.J. Hayes", "J.P. McCusker", "D.L. McGuinness", "H.S. Thompson"], "venue": "Proc. 9th Int. Semantic Web Conf. (ISWC\u201910), pages 305\u2013320. Springer,", "citeRegEx": "14", "shortCiteRegEx": null, "year": 2010}, {"title": "Using naming authority to rank data and ontologies for web search", "author": ["A. Harth", "S. Kinsella", "S. Decker"], "venue": "Proc. 8th Int. Semantic Web Conf. (ISWC\u201909), pages 277\u2013292,", "citeRegEx": "15", "shortCiteRegEx": null, "year": 2009}, {"title": "YARS2: A federated repository for querying graph structured data from the Web", "author": ["A. Harth", "J. Umbrich", "A. Hogan", "S. Decker"], "venue": "Proc. 6th Int. Semantic Web Conf. (ISWC\u201907), pages 211\u2013224. Springer,", "citeRegEx": "16", "shortCiteRegEx": null, "year": 2007}, {"title": "RDF Semantics", "author": ["P. Hayes"], "venue": "W3C Recommendation, Feb.", "citeRegEx": "17", "shortCiteRegEx": null, "year": 2004}, {"title": "Linked Data: Evolving the Web into a Global Data Space (1st Edition)", "author": ["T. Heath", "C. Bizer"], "venue": "Morgan & Claypool,", "citeRegEx": "18", "shortCiteRegEx": null, "year": 2011}, {"title": "Exploiting RDFS and OWL for Integrating Heterogeneous, Large-Scale, Linked Data Corpora", "author": ["A. Hogan"], "venue": "PhD  thesis, DERI, NUIG,", "citeRegEx": "20", "shortCiteRegEx": null, "year": 2011}, {"title": "Igniting the OWL 1.1 touch paper: The OWL API", "author": ["M. Horridge", "S. Bechhofer", "O. Noppens"], "venue": "In Proc. OWLED 2007 Workshop on OWL: Experiences and Directions,", "citeRegEx": "21", "shortCiteRegEx": "21", "year": 2007}, {"title": "Concurrent classification of EL ontologies", "author": ["Y. Kazakov", "M. Kr\u00f6tzsch", "F. Siman\u010d\u00edk"], "venue": "Proc. 10th Int. Semantic Web Conf. (ISWC\u201911). Springer,", "citeRegEx": "22", "shortCiteRegEx": null, "year": 2011}, {"title": "Optimizing enterprise-scale OWL 2 RL reasoning in a relational database system", "author": ["V. Kolovski", "Z. Wu", "G. Eadon"], "venue": "Proc. 9th Int. Semantic Web Conf. (ISWC\u201910), pages 436\u2013452. Springer,", "citeRegEx": "23", "shortCiteRegEx": null, "year": 2010}, {"title": "Efficient rule-based inferencing for OWL EL", "author": ["M. Kr\u00f6tzsch"], "venue": "Proc. 22nd Int. Conf. on Artificial Intelligence (IJCAI\u201911), pages 2668\u20132673,", "citeRegEx": "24", "shortCiteRegEx": null, "year": 2011}, {"title": "DLEJena: A practical forward-chaining OWL 2 RL reasoner combining Jena and Pellet", "author": ["G. Meditskos", "N. Bassiliades"], "venue": "J. of Web Semantics, 8(1):89\u201394,", "citeRegEx": "25", "shortCiteRegEx": null, "year": 2010}, {"title": "OWL 2 Web Ontology Language: Direct Semantics", "author": ["B. Motik", "P.F. Patel-Schneider", "B. Cuenca Grau"], "venue": "W3C Recommendation, Oct.", "citeRegEx": "26", "shortCiteRegEx": null, "year": 2009}, {"title": "OWL 2 Web Ontology Language: Structural Specification and Functional-Style Syntax", "author": ["B. Motik", "P.F. Patel-Schneider", "B. Parsia"], "venue": "W3C Recommendation, Oct.", "citeRegEx": "27", "shortCiteRegEx": null, "year": 2009}, {"title": "Simple and efficient minimal RDFS", "author": ["S. Mu\u00f1oz", "J. P\u00e9rez", "C. Gutierrez"], "venue": "J. of Web Semantics, 7(3):220\u2013234,", "citeRegEx": "28", "shortCiteRegEx": null, "year": 2009}, {"title": "The PageRank Citation Ranking: Bringing Order to the Web", "author": ["L. Page", "S. Brin", "R. Motwani", "T. Winograd"], "venue": "Technical report, Stanford,", "citeRegEx": "29", "shortCiteRegEx": null, "year": 1998}, {"title": "OWL 2 Web Ontology Language: Mapping to RDF Graphs", "author": ["P.F. Patel-Schneider", "B. Motik", "B. Cuenca Grau", "I. Horrocks", "B. Parsia", "A. Ruttenberg", "M. Schneider"], "venue": "W3C Recommendation, Oct.", "citeRegEx": "30", "shortCiteRegEx": null, "year": 2009}, {"title": "Tractable query answering and rewriting under description logic constraints", "author": ["H. P\u00e9rez-Urbina", "B. Motik", "I. Horrocks"], "venue": "J. of Applied Logic, 8(2):151\u2013232,", "citeRegEx": "31", "shortCiteRegEx": null, "year": 2009}, {"title": "Reasoning in the OWL 2 Full ontology language using first-order automated theorem proving", "author": ["M. Schneider", "G. Sutcliffe"], "venue": "Proc. 23rd Int. Conf. on Automated Deduction (CADE-23), pages 461\u2013475. Springer,", "citeRegEx": "32", "shortCiteRegEx": null, "year": 2011}, {"title": "Consequence-based reasoning beyond Horn ontologies", "author": ["F. Siman\u010d\u00edk", "Y. Kazakov", "I. Horrocks"], "venue": "Proc. 22nd Int. Conf. on Artificial Intelligence (IJCAI\u201911), pages 1093\u20131098,", "citeRegEx": "33", "shortCiteRegEx": null, "year": 2011}, {"title": "OWL 2 Web Ontology Language: Conformance", "author": ["M. Smith", "I. Horrocks", "M. Kr\u00f6tzsch", "B. Glimm"], "venue": "W3C Recommendation, Oct.", "citeRegEx": "34", "shortCiteRegEx": null, "year": 2009}, {"title": "Completeness, decidability and complexity of entailment for RDF Schema and a semantic extension involving the OWL vocabulary", "author": ["H.J. ter Horst"], "venue": "J. of Web Semantics,", "citeRegEx": "35", "shortCiteRegEx": "35", "year": 2005}, {"title": "QueryPIE: Backward reasoning for OWL Horst over very large knowledge bases", "author": ["J. Urbani", "F. van Harmelen", "S. Schlobach", "H. Bal"], "venue": "In Proc. 10th Int. Semantic Web Conf. (ISWC\u201911). Springer,", "citeRegEx": "36", "shortCiteRegEx": "36", "year": 2011}, {"title": "Web Ontology Reasoning with Logic Databases", "author": ["R. Volz"], "venue": "PhD thesis, Universit\u00e4t Karlsruhe,", "citeRegEx": "37", "shortCiteRegEx": null, "year": 2004}, {"title": "A survey of the web ontology landscape", "author": ["T.D. Wang", "B. Parsia", "J.A. Hendler"], "venue": "Proc. 5th Int. Semantic Web Conf. (ISWC\u201906), pages 682\u2013694. Springer,", "citeRegEx": "38", "shortCiteRegEx": null, "year": 2006}], "referenceMentions": [{"referenceID": 2, "context": "Under the initial impetus of the Linking Open Data project \u2013 and guided by the Linked Data principles [3] and associated bestpractices \u2013 a rich vein of openly-available structured data has been published on the Web using Semantic Web standards.", "startOffset": 102, "endOffset": 105}, {"referenceID": 25, "context": "Although the informative entailment rules for supporting RDFS inferences are relatively straightforward, things like the infinitely many entailed axiomatic triples reduce its practicality [28].", "startOffset": 188, "endOffset": 192}, {"referenceID": 5, "context": "OWL 2 addresses the complexity issue by defining profiles [6]: fragments for which at least some reasoning tasks are tractable.", "startOffset": 58, "endOffset": 61}, {"referenceID": 1, "context": "Further, each profile is a syntactic subset of OWL DL such that RDF data must adhere to certain nontrivial conditions which are commonly not followed in Web ontologies [2, 38, 7].", "startOffset": 168, "endOffset": 178}, {"referenceID": 35, "context": "Further, each profile is a syntactic subset of OWL DL such that RDF data must adhere to certain nontrivial conditions which are commonly not followed in Web ontologies [2, 38, 7].", "startOffset": 168, "endOffset": 178}, {"referenceID": 6, "context": "Further, each profile is a syntactic subset of OWL DL such that RDF data must adhere to certain nontrivial conditions which are commonly not followed in Web ontologies [2, 38, 7].", "startOffset": 168, "endOffset": 178}, {"referenceID": 15, "context": "The simple semantics [17] considers only the graph structure of RDF, whereas more elaborate semantics such as RDFS entailment [17] or the OWL 2 Direct and RDF-Based Semantics (see below) provide special meanings for certain terms.", "startOffset": 21, "endOffset": 25}, {"referenceID": 15, "context": "The simple semantics [17] considers only the graph structure of RDF, whereas more elaborate semantics such as RDFS entailment [17] or the OWL 2 Direct and RDF-Based Semantics (see below) provide special meanings for certain terms.", "startOffset": 126, "endOffset": 130}, {"referenceID": 24, "context": "A syntactic subset of OWL Full for which this is possible is OWL DL, which also imposes further restrictions that are useful for computing semantic conclusions from the ontology [27].", "startOffset": 178, "endOffset": 182}, {"referenceID": 5, "context": "To address this, OWL further defines three syntactically restricted sub-languages (profiles) of OWL DL called OWL EL, OWL RL and OWL QL [6] (see also Table 2 later for a brief feature comparison).", "startOffset": 136, "endOffset": 139}, {"referenceID": 21, "context": "The current profiles themselves have been inspired by existing approaches: EL for OWL EL [24], DLLite [5] for OWL QL, and Description Logic Programs (DLP) [13] and pD* [35] for OWL RL.", "startOffset": 89, "endOffset": 93}, {"referenceID": 4, "context": "The current profiles themselves have been inspired by existing approaches: EL for OWL EL [24], DLLite [5] for OWL QL, and Description Logic Programs (DLP) [13] and pD* [35] for OWL RL.", "startOffset": 102, "endOffset": 105}, {"referenceID": 11, "context": "The current profiles themselves have been inspired by existing approaches: EL for OWL EL [24], DLLite [5] for OWL QL, and Description Logic Programs (DLP) [13] and pD* [35] for OWL RL.", "startOffset": 155, "endOffset": 159}, {"referenceID": 32, "context": "The current profiles themselves have been inspired by existing approaches: EL for OWL EL [24], DLLite [5] for OWL QL, and Description Logic Programs (DLP) [13] and pD* [35] for OWL RL.", "startOffset": 168, "endOffset": 172}, {"referenceID": 0, "context": "Allemang and Hendler proposed RDFS-Plus based on an informal survey of practitioners and three criteria felt important for adoption: pedagogism (intuitive and easy to learn), practicality (real use-cases in modelling), and computational feasibility (not too hard to implement) [1].", "startOffset": 277, "endOffset": 280}, {"referenceID": 10, "context": "propose a similar profile to RDFS-Plus called L2, where the rationale for including or excluding features is given on an ad-hoc basis [11].", "startOffset": 134, "endOffset": 138}, {"referenceID": 15, "context": "OWL ontologies can be interpreted under two different semantics that agree in important cases: the RDF-Based Semantics (RS) [17] and the Direct Semantics (DS) [26].", "startOffset": 124, "endOffset": 128}, {"referenceID": 23, "context": "OWL ontologies can be interpreted under two different semantics that agree in important cases: the RDF-Based Semantics (RS) [17] and the Direct Semantics (DS) [26].", "startOffset": 159, "endOffset": 163}, {"referenceID": 31, "context": "Besides this restriction, OWL language fragments are not tied to either semantics, leaving 9 valid combinations of syntactic fragment and formal semantics [34].", "startOffset": 155, "endOffset": 159}, {"referenceID": 5, "context": "It is known, however, that RS and DS yield the same entailments on OWL RL under certain additional conditions, leading to a partial tractability result for RS for this particular case [6].", "startOffset": 184, "endOffset": 187}, {"referenceID": 5, "context": "For OWL RL, an algorithm is suggested in the specification [6], while other works have covered OWL EL [24] and parts of OWL DL that also cover OWL QL [33].", "startOffset": 59, "endOffset": 62}, {"referenceID": 21, "context": "For OWL RL, an algorithm is suggested in the specification [6], while other works have covered OWL EL [24] and parts of OWL DL that also cover OWL QL [33].", "startOffset": 102, "endOffset": 106}, {"referenceID": 30, "context": "For OWL RL, an algorithm is suggested in the specification [6], while other works have covered OWL EL [24] and parts of OWL DL that also cover OWL QL [33].", "startOffset": 150, "endOffset": 154}, {"referenceID": 4, "context": "For OWL QL, query rewriting is a more common reasoning technique [5, 31].", "startOffset": 65, "endOffset": 72}, {"referenceID": 28, "context": "For OWL QL, query rewriting is a more common reasoning technique [5, 31].", "startOffset": 65, "endOffset": 72}, {"referenceID": 29, "context": "Two (necessarily incomplete) reasoning methods are known for RS: algorithms based on sets of derivation rules like the ones for OWL RL and an approach based on using firstorder theorem provers [32].", "startOffset": 193, "endOffset": 197}, {"referenceID": 17, "context": "Here, we must take into account the diversity of the data under analysis, where few domains account for a great many triples and many domains account for few triples, where certain domains tend to publish many small documents and others publish few large documents, and so forth [20].", "startOffset": 279, "endOffset": 283}, {"referenceID": 26, "context": ", documents) in a graph, where taking the intuition of directed links as \u201cpositive votes\u201d, the resulting scores help characterise the relative prominence of particular nodes on the Web [29, 15].", "startOffset": 185, "endOffset": 193}, {"referenceID": 13, "context": ", documents) in a graph, where taking the intuition of directed links as \u201cpositive votes\u201d, the resulting scores help characterise the relative prominence of particular nodes on the Web [29, 15].", "startOffset": 185, "endOffset": 193}, {"referenceID": 2, "context": "This notion of dereferenceable links is core to Linked Data principles [3].", "startOffset": 71, "endOffset": 74}, {"referenceID": 26, "context": "For reasons of space, we refer the interested reader to [29] for more detail on PageRank, and [20] for more de-", "startOffset": 56, "endOffset": 60}, {"referenceID": 17, "context": "For reasons of space, we refer the interested reader to [29] for more detail on PageRank, and [20] for more de-", "startOffset": 94, "endOffset": 98}, {"referenceID": 26, "context": "Rank [29], given an agent starting from a random location and traversing documents on (our sample of) the Web of Data through randomly selected dereferenceable URIs, the \u2211 Rank value for a feature approximately indicates the probability with which that agent will be at a document using that feature after traversing ten links.", "startOffset": 5, "endOffset": 9}, {"referenceID": 27, "context": ", which features do not require auxiliary blank nodes of the form _:x or the SEQ production in Table 1 of the OWL 2 Mapping to RDF document [30].", "startOffset": 140, "endOffset": 144}, {"referenceID": 25, "context": "Regarding prominence, we make the following observations: (1) The top six features are those that form the core of RDFS [28].", "startOffset": 120, "endOffset": 124}, {"referenceID": 15, "context": "Aside from plain literals, the RDF semantics defines a single datatype supported under RDF-entailment: rdf:XMLLiteral [17].", "startOffset": 118, "endOffset": 122}, {"referenceID": 9, "context": "Implementing the entire range of RDF, XSD and OWL datatypes can be costly [10], with custom code (or an external library) re# Primitive \u2211 Rank Lit Doc Dom D O2", "startOffset": 74, "endOffset": 78}, {"referenceID": 31, "context": "Conformance with the OWL standard even requires support for the RDF/XML serialisation as an input format [34].", "startOffset": 105, "endOffset": 109}, {"referenceID": 27, "context": ", in RDF/XML or Turtle format, into OWL axioms is not an easy task, since axioms can be composed of several RDF triples, which might be distributed all over the document [30].", "startOffset": 170, "endOffset": 174}, {"referenceID": 18, "context": "Consequently, there are hardly any standalone libraries for parsing OWL (as opposed to RDF): we are only aware of the Java-based OWL API [21].", "startOffset": 137, "endOffset": 141}, {"referenceID": 14, "context": ", 5store), are developed for production use (excluding prototypes such as YARS2 [16] and QueryPie [36]) and that are meant to be used with large amounts of instance data (excluding OWL EL tools such as ELK [22]).", "startOffset": 80, "endOffset": 84}, {"referenceID": 33, "context": ", 5store), are developed for production use (excluding prototypes such as YARS2 [16] and QueryPie [36]) and that are meant to be used with large amounts of instance data (excluding OWL EL tools such as ELK [22]).", "startOffset": 98, "endOffset": 102}, {"referenceID": 19, "context": ", 5store), are developed for production use (excluding prototypes such as YARS2 [16] and QueryPie [36]) and that are meant to be used with large amounts of instance data (excluding OWL EL tools such as ELK [22]).", "startOffset": 206, "endOffset": 210}, {"referenceID": 20, "context": ", implemented in OWLIM or Oracle 11g [23].", "startOffset": 37, "endOffset": 41}, {"referenceID": 20, "context": "Although, four systems (nearly) support OWL RL, the complexity of a fully compliant and efficient implementation is still considered high [23].", "startOffset": 138, "endOffset": 142}, {"referenceID": 9, "context": "[10].", "startOffset": 0, "endOffset": 4}, {"referenceID": 0, "context": "Comparing this to the design guidelines of RDFS-Plus [1], we can see that adequacy relates to \u201cpracticality\u201d while implementability subsumes to \u201ccomputational feasibility\u201d.", "startOffset": 53, "endOffset": 56}, {"referenceID": 22, "context": "com/pelletdb/ DLEJena X X X X X X X X X OWL RL tableau, forward chaining [25], http://lpis.", "startOffset": 73, "endOffset": 77}, {"referenceID": 3, "context": "gr/systems/DLEJena/ OWLIM X X X X X X X X X \u223c OWL RL forward chaining [4], http://www.", "startOffset": 70, "endOffset": 73}, {"referenceID": 20, "context": "com/owlim Oracle 11g X X X X X X X X X OWL RL forward chaining [23], http://tinyurl.", "startOffset": 63, "endOffset": 67}, {"referenceID": 3, "context": ", support for list-based (multi-triple) expressions that can be of arbitrary length [4].", "startOffset": 84, "endOffset": 87}, {"referenceID": 5, "context": "Formally, we define OWL LD by restricting the OWL RL grammar [6].", "startOffset": 61, "endOffset": 64}, {"referenceID": 27, "context": "Furthermore, let RDF(O1) and RDF(O2) be translations of O1 and O2, respectively, into RDF graphs [30]; and let FO(RDF(O1)) and FO(RDF(O2)) be the translation of these graphs into first-order theories in which triples are represented using the T predicate.", "startOffset": 97, "endOffset": 101}, {"referenceID": 23, "context": "Then, O1 entails O2 under the OWL 2 Direct Semantics [26] iff FO(RDF(O1)) \u222a R entails FO(RDF(O2)) under the standard firstorder semantics.", "startOffset": 53, "endOffset": 57}, {"referenceID": 7, "context": "in 2005 [8].", "startOffset": 8, "endOffset": 11}, {"referenceID": 1, "context": "Various works look at the syntactic profiles of OWL ontologies on the Web [2, 38, 7].", "startOffset": 74, "endOffset": 84}, {"referenceID": 35, "context": "Various works look at the syntactic profiles of OWL ontologies on the Web [2, 38, 7].", "startOffset": 74, "endOffset": 84}, {"referenceID": 6, "context": "Various works look at the syntactic profiles of OWL ontologies on the Web [2, 38, 7].", "startOffset": 74, "endOffset": 84}, {"referenceID": 1, "context": ", functional properties) declared to be transitive, inverse-functional datatype properties, and so forth [2].", "startOffset": 105, "endOffset": 108}, {"referenceID": 35, "context": "4%) [38].", "startOffset": 4, "endOffset": 8}, {"referenceID": 6, "context": "found that while 81% of 22,200 RDF Web documents surveyed fell into OWL Full, from the features used, 95% would fall under the expressivity of the lightweight AL(D) Description Logic [7].", "startOffset": 183, "endOffset": 186}, {"referenceID": 8, "context": "More recent papers focus on analysing owl:sameAs adoption on the Web of Data [9, 14].", "startOffset": 77, "endOffset": 84}, {"referenceID": 12, "context": "More recent papers focus on analysing owl:sameAs adoption on the Web of Data [9, 14].", "startOffset": 77, "endOffset": 84}, {"referenceID": 8, "context": "provide a quantitative analysis of the owl:sameAs graph extracted from the BTC-2010 dataset (the ancestor of our corpus) [9], summarising the use of owl:sameAs to link between different publishers of Linked Data.", "startOffset": 121, "endOffset": 124}, {"referenceID": 12, "context": "[14] focus on the incorrect use of owl:sameAs [14]; they employ four human judges to manually inspect 500 such links sampled from Web data, where their results suggest that owl:sameAs is often used imprecisely, although disagreement between the judges indicates that the quality of specific owl:sameAs links can be subjective.", "startOffset": 0, "endOffset": 4}, {"referenceID": 12, "context": "[14] focus on the incorrect use of owl:sameAs [14]; they employ four human judges to manually inspect 500 such links sampled from Web data, where their results suggest that owl:sameAs is often used imprecisely, although disagreement between the judges indicates that the quality of specific owl:sameAs links can be subjective.", "startOffset": 46, "endOffset": 50}], "year": 2012, "abstractText": "Seven years on from OWL becoming a W3C recommendation, and two years on from the more recent OWL 2 W3C recommendation, OWL has still experienced only patchy uptake on the Web. Although certain OWL features (like owl:sameAs) are very popular, other features of OWL are largely neglected by publishers in the Linked Data world. This may suggest that despite the promise of easy implementations and the proposal of tractable profiles suggested in OWL\u2019s second version, there is still no \u201cright\u201d standard fragment for the Linked Data community. In this paper, we (1) analyse uptake of OWL on the Web of Data, (2) gain insights into the OWL fragment that is actually used/usable on the Web, where we arrive at the conclusion that this fragment is likely to be a simplified profile based on OWL RL, (3) propose and discuss such a new fragment, which we call OWL LD (for Linked Data).", "creator": "LaTeX with hyperref package"}}}