{"id": "1202.3729", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "14-Feb-2012", "title": "Suboptimality Bounds for Stochastic Shortest Path Problems", "abstract": "We consider how to use the Bellman residual of the dynamic programming operator to compute suboptimality bounds for solutions to stochastic shortest path problems. Such bounds have been previously established only in the special case that \"all policies are proper,\" in which case the dynamic programming operator is known to be a contraction, and have been shown to be easily computable only in the more limited special case of discounting. Under the condition that transition costs are positive, we show that suboptimality bounds can be easily computed even when not all policies are proper. In the general case when there are no restrictions on transition costs, the analysis is more complex. But we present preliminary results that show such bounds are possible. The general application of this principle has been shown in the last version of the special case and we have demonstrated that for the simplest and the most general case, the classical method of decomposition is not only possible in the general case but also in the general case in the general case. We believe that the special case can be applied only in cases that can be understood only as generalizable transformations, but also in situations where the classical method is more generalizable.", "histories": [["v1", "Tue, 14 Feb 2012 16:41:17 GMT  (138kb)", "http://arxiv.org/abs/1202.3729v1", null]], "reviews": [], "SUBJECTS": "cs.AI", "authors": ["eric a hansen"], "accepted": false, "id": "1202.3729"}, "pdf": {"name": "1202.3729.pdf", "metadata": {"source": "CRF", "title": "Suboptimality Bounds for Stochastic Shortest Path Problems", "authors": ["Eric A. Hansen"], "emails": ["hansen@cse.msstate.edu"], "sections": [{"heading": null, "text": "We consider how to use the Bellman residual of the dynamic programming operator to compute suboptimality bounds for solutions to stochastic shortest path problems. Such bounds have been previously established only in the special case that \u201call policies are proper,\u201d in which case the dynamic programming operator is known to be a contraction, and have been shown to be easily computable only in the more limited special case of discounting. Under the condition that transition costs are positive, we show that suboptimality bounds can be easily computed even when not all policies are proper. In the general case when there are no restrictions on transition costs, the analysis is more complex. But we present preliminary results that show such bounds are possible."}, {"heading": "1 Introduction", "text": "A stochastic shortest path problem is a Markov decision process (MDP) where the objective is to find a minimumcost policy that reaches a goal or terminal state with probability 1 [4, 2]. It is an elegant model for many problems of planning under uncertainty, especially for goal-oriented decision-theoretic planning problems where policy execution terminates once a goal condition is achieved. Standard solution methods rely on dynamic programming or linear programming. The model is also used in the development and analysis of reinforcement learning and heuristic search algorithms for MDPs [15, 1, 6]. There are extensions of the stochastic shortest path problem for planning under partial observability [11], multi-agent planning [12, 8], and risksensitive planning [10].\nFor the stochastic shortest path problem, the expected total cost of policy execution is bounded, without discounting. Thus it is an important alternative to the discounted infinitehorizon MDP as a model for decision-theoretic planning.\nAlthough use of a discount factor sometimes has an economic justification, discounting is not well-motivated for many AI planning problems and has potential drawbacks. It can skew the relative values of policies and change the optimal policy. Discounting can also make it impossible to guarantee that dynamic programming finds a policy that reaches a goal state with probability 1. With discounting, a policy that cycles forever without reaching the goal state still has finite total cost, which could be less than the cost of the best policy that is guaranteed to reach the goal state.\nDespite potential drawbacks, the discounted infinitehorizon model is widely used. One reason for its appeal is that discounting is a simple way to ensure that algorithms for solving infinite-horizon MDPs have the desired convergence properties, since the dynamic programming operator is a contraction operator in this case, with the contraction rate equal to the discount factor. Although the convergence of value iteration and policy iteration for stochastic shortest path problems is well-established, it is not based on a contraction property (except in the special case that all policies are proper). As a result, there is no guarantee that the convergence rate is geometric and suboptimality bounds are generally not available for solutions found by dynamic programming, in contrast to the discounted case.\nIn this paper, we show that even though the dynamic programming operator for stochastic shortest path problems is not a contraction operator in general, it behaves like a contraction operator if the dynamic programming algorithm is started with the value function of a proper policy, which is a policy that achieves the goal state with probability one. Under the additional condition that transition costs are positive, we show how to use the Bellman residual of the dynamic programming operator to compute suboptimality bounds. In the general case where there are no restrictions on action costs, the analysis is more complex. But we establish some preliminary results that support a general approach to computing bounds. Our results apply to both completely observable and partially observable stochastic shortest path problems."}, {"heading": "2 Background", "text": "We begin with a review of the stochastic shortest path problem as formulated by Bertsekas and Tsitsiklis [3, 4, 5] and extended to the partially observable case by Patek [11]. We also review previous work on computing suboptimality bounds for solutions found by dynamic programming."}, {"heading": "2.1 Stochastic shortest path problem", "text": "Like any discrete-time Markov decision process (MDP), a stochastic shortest path problem includes a set of states, S, and a set of control actions, U , which we assume are both finite; a set of transition probabilities, where pij(u) denotes the probability that the system moves to state j \u2208 S after action u \u2208 U is taken in state i \u2208 S; and a set of real-valued costs, where g(i, u, j) denotes the cost incurred when action u taken in state i results in a transition to state j. The expected cost of taking action u in state i is denoted g(i, u) = \u2211 j\u2208S pij(u)g(i, u, j).\nIn addition, a stochastic shortest path problem is characterized by a set of assumptions from which it derives its special properties. The first is the following.\nAssumption 1. The state set includes a special target or terminal state, t \u2208 S, which is zero-cost and absorbing, which means that ptt(u)= 1 and g(t, u, t)= 0,\u2200u \u2208 U .\nThe objective is to find a stationary policy, \u00b5 : S \u2192 U , that reaches the terminal state while minimizing the total expected cost. We are especially interested in stationary policies that reach the terminal state with probability 1 from any initial state, called proper policies.\nDefinition 1 (Bertsekas and Tsitsiklis). A stationary policy \u00b5 is said to be proper if there exists a finite positive integer m such that there is a positive probability of reaching the terminal state after at most m stages when following this policy, regardless of the initial state, that is,\n\u03c1\u00b5 = min i\u2208S\nP (xm = t|x0 = i, \u00b5) > 0, (1)\nwhere xk denotes the state of the process at stage k. A stationary policy that is not proper is said to be improper.\nFollowing a policy that is proper according to this definition, a process reaches the terminal state with probability 1, regardless of the initial state [2].\nThe value (or cost-to-go) function J\u00b5 of a stationary policy \u00b5 gives the expected total cost of following the policy starting from an initial state i, defined as\nJ\u00b5(i) = lim N\u2192\u221e E\u00b5 [ N\u22121\u2211 k=0 g(xk, \u00b5(xk))|x0 = i ] ,\u2200i \u2208 S. (2)\nFor a proper policy \u00b5, the expected cost is bounded above for each state, that is, J\u00b5(i) < \u221e,\u2200i \u2208 S.\nA stochastic shortest path problem is solved by finding an optimal policy \u00b5\u2217 satisfying\nJ\u2217(i) = J\u00b5\u2217(i) \u2264 J\u00b5(i),\u2200i \u2208 S, \u2200\u00b5 \u2208 M, (3)\nwhere J\u2217 denotes the optimal value function. Two additional assumptions of the stochastic shortest path problem ensure that an optimal policy exists and that it is proper. Assumption 2. There exists at least one proper policy. Assumption 3. For every improper policy \u00b5, the corresponding cost J\u00b5(i) is infinite for at least one state i.\nAssumption 3 is equivalent to the assumption that the expected cost J\u00b5(i) of state i under policy \u00b5 is infinite if a process started in state i and following policy \u00b5 does not reach the terminal state with probability 1.\nTwo special cases of the stochastic shortest path problem play an important role in the analysis of Bertsekas and Tsitsiklis [3, 4, 5]. The first is the stochastic shortest path problem when all policies are proper. Analysis of this special case is easier, although the assumption that all policies are proper is often unrealistic. Another special case is the discounted infinite-horizon MDP. By a well-known reduction, any discounted infinite-horizon MDP can be reduced to an equivalent stochastic shortest path problem in which, for every state and action pair, there is a probability (1\u2212 \u03b2) of making a transition to the terminal state, where \u03b2 < 1 is the discount factor, with the other transition probabilities normalized. For the stochastic shortest path problem created by this reduction, all policies are proper. As we will see, the well-known convergence properties and suboptimality bounds for the discounted infinite-horizon MDP are a special case of those for the stochastic shortest path problem."}, {"heading": "2.2 Dynamic programming", "text": "The stochastic shortest path problem can be solved using dynamic programming, where the dynamic programming operator is defined as follows,\nTJ(i) = min u\u2208U \u2211 j\u2208S pij(u) (g(i, u, j) + J(j)),\u2200i \u2208 S, (4)\nand the related policy evaluation operator T\u00b5 is defined as, T\u00b5J(i) = \u2211 j\u2208S pij(\u00b5(i)) (g(i, \u00b5(i), j) + J(j)),\u2200i \u2208 S. (5)\nThese operators are the key steps in two dynamic programming algorithms: value iteration and policy iteration.\nAnalysis of the convergence of value and policy iteration turns on two properties of the dynamic programming and policy evaluation operators: the monotonicity property and the contraction property. The monotonicity property is defined as follows: if J \u2264 J \u2032, then TJ \u2264 TJ \u2032 and T\u00b5J \u2264 T\u00b5J\n\u2032.1 Both operators satisfy the monotonicity property. 1As shorthand, we let J \u2264 J \u2032 denote J(i) \u2264 J \u2032(i), \u2200i \u2208 S.\nAn operator T , such as the dynamic programming operator, is said to be a contraction operator if, for all bounded value functions J and J \u2032,\n||TJ \u2212 TJ \u2032|| \u2264 \u03b2||J \u2212 J \u2032||, (6)\nwhere \u03b2, with 0 \u2264 \u03b2 < 1, is the contraction rate and ||.|| is some norm. For discounted infinite-horizon MDPs, it is well-known that both the dynamic programming operator T and the policy evaluation operator T\u00b5 are contraction operators, with the contraction rate \u03b2 equal to the discount factor. If the state space is finite, they are contraction operators in the maximum norm, defined as ||x|| = maxi\u2208S x(i). If the state space is continuous, they are contraction operators in the supremum norm, defined as ||x|| = supi\u2208S x(i). For MDPs, the maximum or supremum norm, ||TJ \u2212 J ||, is called the Bellman residual.\nFor the stochastic shortest path problem, there is no discount factor (or equivalently, the discount factor is 1). In this case, a related concept of contraction operator is useful. An operator T is said to be anm-stage contraction operator if Tm, which is the composition of T with itself m times, is a contraction operator, that is, if there is some \u03b2, with 0 \u2264 \u03b2 < 1, and some norm ||.||, such that\n||TmJ \u2212 TmJ \u2032|| < \u03b2||J \u2212 J \u2032||, (7)\nfor all bounded value functions J and J \u2032. For the stochastic shortest path problem, the dynamic programming operator is anm-stage contraction operator in the maximum (or supremum) norm if there is some minimum positive probability \u03c1m = (1 \u2212 \u03b2) > 0 that the process reaches the terminal state withinm steps, beginning from any state. Bertsekas and Tsitsiklis [3, 4, 5] show that the dynamic programming operator for stochastic shortest path problems is an m-stage contraction operator in the special case that all policies are proper.2 As for the policy evaluation operator, it is anm-stage contraction if it evaluates a proper policy.\nThe significance of showing that the dynamic programming and policy evaluation operators satisfy the contraction property, under the condition that all policies are proper, is that the convergence of both value iteration and policy iteration follows from Banach\u2019s Fixed-Point Theorem; it also follows that the convergence rate is geometric. Bertsekas and Tsitsiklis consider this special case first because\n2The minimum probability \u03c1m that the terminal state will be reached in m stages can be computed by solving a finite-horizon MDPwith the same transition probabilities as the stochastic shortest path problem but with a cost of 1 for any transition to the terminal state, and a cost of 0 for all other transitions. Finding a policy that minimizes the m-horizon cost corresponds to finding a policy that minimizes the probability of reaching the terminal state within m stages. By Definition 1, the minimum probability of reaching the terminal state withinm stages is greater than zero, for some positive integerm, if all policies are proper.\nthe dynamic programming operator is not a contraction operator in the general case. In the words of Bertsekas and Tsitsiklis [4], \u201cour assumptions do not imply that the corresponding dynamic programming mapping is a contraction (unlike the situation in discounted problems), unless all policies are proper.\u201d They give an example to show that the contraction property does not hold in general. It is a stochastic shortest path problem with two states: state 1 is terminal and state 2 is nonterminal. Two actions are possible in the nonterminal state. One causes a deterministic transition to the terminal state with a cost of 2; the other causes a deterministic self-transition with a cost of 1. Thus there are two stationary policies, one proper and the other improper. Consider two value functions J and J \u2032 for which J(1) = J \u2032(1) = 0, J(2) < 1, and J \u2032(2) < 1. Under these conditions, |TJ(2) \u2212 TJ \u2032(2)| = |(J(2) + 1) \u2212 (J \u2032(2) + 1)| = |J(2)\u2212J \u2032(2)|, which shows that, in general, T is not a contraction with respect to any norm.\nThe principal contribution of Bertsekas and Tsitsiklis to the theory of stochastic shortest path problems is their proofs of the convergence of value iteration and policy iteration in the general case, where the dynamic programming operator is not a contraction. Given only the assumptions of the stochastic shortest path problem, they prove the following.\n\u2022 The optimal value function J\u2217 is the unique solution of the Bellman equation J\u2217 = TJ\u2217, and value iteration converges to it, which means that for any initial value function J , limt\u2192\u221e T tJ = J\u2217.\n\u2022 The value function J\u00b5 of a proper policy \u00b5 is the unique solution of the linear system of equations, J\u00b5 = T\u00b5J\u00b5, and policy evaluation converges to it, which means limt\u2192\u221e T t\u00b5J = J\u00b5, for any initial J .\n\u2022 Starting with a proper policy \u00b50, policy iteration generates a sequence of policies \u00b51, \u00b52, . . ., for which J\u00b5k+1 \u2264 J\u00b5k ,\u2200k, by alternating a policy evaluation step that computes J\u00b5k , with a policy improvement step that computes an improved policy \u00b5k+1 using the equation T\u00b5k+1J\u00b5k = TJ\u00b5k , or equivalently, \u2200i \u2208 S,\n\u00b5k+1(i)=argmin u\u2208U \u2211 j\u2208S pij(u) ( g(i,u,j)+J\u00b5k(j) ) , (8)\nand the sequence converges to an optimal policy.\nHowever, their convergence results are weaker than those based on the contraction property and Banach\u2019s FixedPoint Theorem because they establish pointwise convergence, not uniform convergence. As a result, they provide no guarantee that the rate of convergence is geometric and no way to bound the number of iterations until convergence to an \u03f5-optimal policy. They also do not allow easy use of the Bellman residual to compute suboptimality bounds."}, {"heading": "2.3 Suboptimality bounds", "text": "We next review how to use the Bellman residual of the dynamic programming operator to bound the suboptimality of solutions found by dynamic programming. For stochastic shortest path problems, Bertsekas [2, pp. 413\u2013414] gives the following result.\nTheorem 1 (Bertsekas). For any stochastic shortest path problem, any value function J , a greedy policy \u00b5 with respect to J , and for all i \u2208 S, the following bounds hold,\nJ(i) + cN\u2217(i) \u2264 J\u2217(i) \u2264 J\u00b5(i) \u2264 J(i) + cN\u00b5(i), (9)\nwhere c = mini\u2208S [TJ(i)\u2212 J(i)], N\u2217(i) is an upper bound on the expected number of steps needed to reach the terminal state t beginning from state i and following an optimal policy, c = maxi\u2208S [TJ(i)\u2212 J(i)], and N\u00b5(i) is an upper bound on the expected number of steps needed to reach t beginning from state i and following policy \u00b5.\nSome simplifications can help bring this result into focus. Leaving out the inequalities involving J\u00b5 and subtracting J(i), we have: cN\u2217(i) \u2264 J\u2217(i) \u2212 J(i) \u2264 cN\u00b5(i). Note that c \u2264 0 and c \u2265 0. Note also that the Bellman residual is: ||TJ \u2212 J || = max{\u2212c, c}. Thus we have:\n|J\u2217(i)\u2212 J(i)| \u2264 ||TJ \u2212 J || \u00b7max{N\u2217(i), N\u00b5(i)}. (10)\nSince by definition, ||J\u2217 \u2212 J || = maxi\u2208S |J\u2217(i)\u2212 J(i)|, we finally have:\n||J\u2217 \u2212 J || \u2264 ||TJ \u2212 J || \u00b7max i\u2208S max{N\u2217(i), N\u00b5(i)}. (11)\nIn addition to this bound on the suboptimality of a value function J , the inequalities J\u00b5(i) \u2264 J(i)+cN\u00b5(i) in Equation 9 let us bound the suboptimality of a greedy policy \u00b5 with respect to J . It follows that we can compute suboptimality bounds if we can compute the bounds N\u2217(i) and N\u00b5(i) on the expected number of stages until termination. \u201cUnfortunately,\u201d writes Bertsekas [2, pp. 413\u2013414], these bounds \u201care easily computed or approximated only in the presence of special problem structure.\u201d\nBertsekas mentions just one special case in which these bounds can be easily computed: the discounted infinitehorizon case. As already pointed out, any discounted infinite-horizon MDP (with discount factor \u03b2) can be reduced to an equivalent stochastic shortest path problem in which, for every state and action pair, there is a probability (1 \u2212 \u03b2) of making a transition to a terminal state, with the other transition probabilities normalized accordingly. It follows that the expected number of steps until termination, from any starting state, is \u2211\u221e t=0 \u03b2\nt = 1/(1 \u2212 \u03b2). Letting N\u2217(i) = N\u00b5(i) = 1/(1 \u2212 \u03b2),\u2200i \u2208 S, the well-known bound on the suboptimality of a value function J , which is ||J\u2217 \u2212 J || \u2264 ||TJ \u2212 J ||/(1 \u2212 \u03b2), is seen to be a special case of the suboptimality bound given by Equation 11.\nBertsekas and Tsitsiklis [5, pp. 23\u201324] describe how to bound the expected number of stages until termination for any stochastic shortest path problem for which all policies are proper, although it requires solving an MDP of the same size as the original stochastic shortest path problem. Given a stochastic shortest-path problem, consider a related infinite-horizon MDP where the transition probabilities are the same but there is a cost of 0 for any transition to the terminal state and all other transitions incur a cost of \u22121. For this MDP, finding a policy that minimizes the expected infinite-horizon cost corresponds to finding a policy that maximizes the expected number of stages it takes to reach the terminal state. The values computed by solving this MDP bound the number of stages until termination for any policy. Obviously, these bounds are finite (and the MDP is well-defined) if and only if all policies are proper.\nIf a greedy policy \u00b5 with respect to value function J is not proper, then N\u00b5(i) is not finite for at least one state i and the bounds of Equations 10 and 11 are not finite. We address the challenge of how to compute bounds when not all policies are proper beginning in Section 3."}, {"heading": "2.4 Partial observability", "text": "Patek [11] extends the framework of stochastic shortest path problems to the partially observable case. A partially observable MDP (POMDP) includes the same states, actions, transition probabilities and costs defined earlier, plus a finite set of observation symbols, Z, and a set of observation probabilities, where pz(j, u) denotes the probability that symbol z \u2208 Z is observed after action u \u2208 U results in a transition to state j \u2208 S. In addition to the three assumptions of a stochastic shortest path problem given in Section 2.1, a partially observable stochastic shortest path problem includes an assumption that ensures that termination of the process is perfectly recognized. Assumption 4. The set of observation symbols includes a special symbol, zt \u2208 Z, which is unique to transitions to the terminal state t. That is, pzt(t, u) = 1 and pzt(j, u) = 0,\u2200u \u2208 U, j \u2208 S.\nAs is well-known, a POMDP can be solved by dynamic programming if it is first transformed into an equivalent completely observable MDP over belief states, where a belief state is an |S|-dimensional vector of probabilities maintained by Bayesian conditioning. Given the assumptions of the partially observable stochastic shortest path problem, Patek [11] shows that value iteration and policy iteration have the same convergence properties established by Bertsekas and Tsitsiklis [3, 4] in the completely observable case. His analysis follows the same outline. In the special case that all policies are proper, he shows that the dynamic programming operator is an m-stage contraction operator. In the general case when not all policies are proper, he proves convergence without using a contraction property."}, {"heading": "3 Uniform improvability and proper policies", "text": "The convergence proofs for value iteration and policy iteration given by Bertsekas and Tsitsiklis [3, 4] and Patek [11] for the general case when not all policies are proper are significant because they do not depend on the contraction property. But without a contraction property, they do not ensure a geometric rate of convergence or provide a way to use the Bellman residual to compute suboptimality bounds. In the rest of the paper, we show a way around this.\nFirst, we establish a condition under which a policy found by dynamic programming is guaranteed to be proper. Theorem 2. For any stochastic shortest path problem and any value function J for which TJ \u2264 J , a greedy policy \u00b5 with respect to J , defined as\n\u00b5(i) = argmin u\u2208U \u2211 j\u2208S pij(u)(g(i, u, j)+J(j)) ,\u2200i \u2208 S,\n(12) is a proper policy and J\u00b5 \u2264 J . Proof. The key observation is that TJ = T\u00b5J , which means that application of the dynamic programming operator T can be viewed as the first application of the policy evaluation operator T\u00b5 in evaluating a greedy policy \u00b5 with respect to J . When TJ \u2264 J , we have T\u00b5J \u2264 J . By the monotonicity property, it follows that every successive iteration of T\u00b5 monotonically improves the value function, and thus J\u00b5 = limn\u2192\u221e Tn\u00b5 J \u2264 T\u00b5J = TJ \u2264 J . Since J\u00b5 is bounded above for every state, \u00b5 must be proper.\nWe call a value function J for which TJ \u2264 J a uniformly improvable value function, a term used by others [16, 14]. Consider the subspace of uniformly improvable value functions: J = {J |TJ \u2264 J}. By the monotonicity property, this subspace is closed under the dynamic programming operator. It follows that if value iteration is started with a value function J \u2208 J , a greedy policy with respect to this value function, and a greedy policy with respect to any subsequent value function found after any number of iterations of value iteration, must be proper. We already have the same guarantee for policy iteration. The convergence proof for policy iteration given by Bertsekas and Tsitsiklis (and by Patek in the partially observable case) requires the initial policy to be proper; otherwise, the value function computed by policy evaluation is not bounded. Given an initial proper policy, it follows from the policy improvement theorem that any policy found after any number of iterations of policy iteration must be proper, since the cost of an improved policy cannot increase for any state. Indeed, this guarantee holds precisely because the value function of an initial proper policy \u00b5 is uniformly improvable; note that TJ\u00b5 = J\u00b5 implies TJ\u00b5 \u2264 J\u00b5. It follows that whether we use policy iteration or value iteration, we can guarantee uniform improvability by finding an initial proper policy.\nDifferent algorithms can be used to find an initial proper policy. Since the better the initial policy and value function, the sooner policy iteration or value iteration converges, extra computational effort spent trying to find an initial proper policy that is of high quality could be well-spent. However, it is not difficult to find some initial proper policy.\nTheorem 3. For any stochastic shortest path problem, the uniform random policy is proper.3\nProof. By Assumption 2, there exists some proper policy \u00b5. By Definition 1, there is a positive integer m such that after m stages, there is a probability \u03c1\u00b5 > 0 that following policy \u00b5 leads to the terminal state. Since a uniform random policy selects an action at random based on a uniform probability distribution, it executes the same action as policy \u00b5 for m consecutive stages with probability (1/|U |)m > 0. It follows that the probability of reaching the terminal state withinm stages by following the uniform random policy is greater than or equal to (1/|U |)m \u00b7 \u03c1\u00b5, which is positive, and thus the uniform random policy is proper.\nWhen the value function is uniformly improvable, we can simplify the bounds given in Theorem 1 and Equations 10 and 11. Note that when TJ \u2264 J , we have c = 0. From Equation 9, it follows that J\u2217(i) \u2264 J\u00b5(i) \u2264 J(i), where \u00b5 is a greedy policy with respect to J . Thus \u00b5 must be proper. (This is the same result proved in Theorem 2.) Setting aside the bounds involving J\u00b5, consider the remaining bounds: J(i) + cN\u2217(i) \u2264 J\u2217(i) \u2264 J(i). Subtracting J(i), we have: cN\u2217(i) \u2264 J\u2217(i) \u2212 J(i) \u2264 0. Thus |J\u2217(i) \u2212 J(i)| \u2264 \u2212cN\u2217(i). By assumption, TJ \u2264 J , and so the Bellman residual is: ||TJ\u2212J || = \u2212c. Thus we have,\n|J\u2217(i)\u2212 J(i)| \u2264 ||TJ \u2212 J || \u00b7N\u2217(i), (13)\nwhere N\u2217(i), as defined in Theorem 1, is an upper bound on the expected number of steps needed to reach the terminal state beginning from state i and following an optimal policy. By definition, ||J\u2217 \u2212 J || = maxi\u2208S |J\u2217(i)\u2212 J(i)|, and so, ||J\u2217 \u2212 J || \u2264 ||TJ \u2212 J || \u00b7N\u2217, (14) where N\u2217 = maxi\u2208S N\u2217(i) is an upper bound on the expected number of steps needed to reach the terminal state from any other state by following an optimal policy. Note that Equation 13 is a simplification of Equation 10 and Equation 14 is a simplification of Equation 11, where both simplications are possible because the value function J is uniformly improvable. The condition that J is uniformly improvable also allows the following simplification.\nTheorem 4. If value function J is uniformly improvable, then any bound on its suboptimality is also a bound on the suboptimality of a greedy policy \u00b5 with respect to J .\nProof. Immediate since J\u00b5(i) \u2264 J(i) if TJ \u2264 J(i). 3I am grateful to Bruno Scherrer for the observation expressed in this theorem and the idea of the proof."}, {"heading": "4 Positive transition costs", "text": "In this section, we consider a special case of the stochastic shortest path problem where all transition costs incur a positive cost, except possibly for transitions into the terminal state. By Assumption 1, a transition from the terminal state to itself has a cost of zero. Because a transition from a nonterminal state to the terminal state occurs only once, we do not need to place any restriction on its cost (except, of course, that it is bounded).\nUnder this condition on transition costs, we show how to compute upper bounds, denoted N(i),\u2200i \u2208 S, on the expected number of stages until termination of any policy \u00b5 for which J\u00b5 \u2264 J , where J is uniformly improvable. We use the notation N(i) instead of N\u2217(i) because these bounds on the expected number of stages until termination apply to any policy \u00b5 for which J\u00b5 \u2264 J , not just an optimal policy. Since J\u2217 \u2264 J\u00b5 \u2264 J , we have N(i) \u2265 N\u2217(i),\u2200i \u2208 S, and so we can useN(i) in place of N\u2217(i) in Equations 13 and 14 to bound the suboptimality of solutions found by dynamic programming.\nThe proof strategy we adopt to establish these bounds is to show that any policy \u00b5 that does not terminate within N(i) stages on average, beginning from state i, must have an expected cost J\u00b5(i) greater than J(i), which contradicts the assumption that J\u00b5 \u2264 J . The significance of this strategy is that it does not require all policies to be proper. It simply requires a uniformly improvable value function J . Theorem 5. For any stochastic shortest-path problem for which g(i, u, j) > 0 for all i \u2208 S, u \u2208 U, j \u2208 S\\t, and for any policy \u00b5 with value function J\u00b5 \u2264 J , an upper bound on the mean number of steps until the terminal state is reached beginning from any state i is\nN(i) = J(i)\u2212 a\nb + 1, (15)\nwhere a = min{g(i, u, t) : i \u2208 S, u \u2208 U} denotes the minimum cost of any transition into the terminal state and b = min{g(i, u, j) : i \u2208 S, u \u2208 U, j \u0338= t} denotes the minimum cost of any other transition.\nProof. For any policy \u00b5, let n\u00b5(i) denote the expected number of steps until the terminal state is reached beginning from state i and following policy \u00b5. Because a is the minimum cost of any transition into the terminal state and b is the minimum cost of any other transition, a + b(n\u00b5(i) \u2212 1) is the minimum cost of any sequence of n\u00b5(i) transitions that ends in the terminal state; therefore, J\u00b5(i) \u2265 a + b(n\u00b5(i) \u2212 1). Now if N(i) is not an upper bound on the expected number of stages until termination for some state i, there must be some policy \u00b5 for which both n\u00b5(i) > N(i) and J\u00b5(i) \u2264 J(i). But since N(i) = (J(i) \u2212 a)/b + 1, then n\u00b5(i) > N(i) implies that J\u00b5(i) > J(i), which contradicts the assumption that J\u00b5 \u2264 J . It follows that n\u00b5(i) \u2264 N(i), \u2200i \u2208 S.\nNote that the \u201c+1\u201d in Equation 15 counts the transition into the terminal state. This approach to computing suboptimality bounds works best if transition costs are uniform as well as positive. If transition costs are positive but non-uniform, the bounds are still valid, but potentially looser. In this case, the bounds could be improved by considering the minimum expected transition cost after an action, instead of simply the minimum transition cost.\nExample For illustration, consider the small gridworld navigation problem shown in Figure 1. Russell and Norvig [13] describe a completely observable version of this gridworld and Parr and Russell [9] describe a partially observable version. To allow reference to individual states, we number each cell of the grid from 0 to 10. Figure 1 shows all of the numbers except two; the +1 state is numbered 3 and the \u22121 state is numbered 6. Any action taken in either the +1 or the \u22121 state results in a deterministic transition to a terminal state (which is not shown) and a reward of +1 or \u22121 respectively. In all other states, any of the four possible navigation actions (with one corresponding to each direction of the compass) incurs a negative reward of \u22120.04, which is equivalent to a positive cost. (For convenience, we keep the reward-maximization framework used by Russell and Norvig [13] and Parr and Russell [9]. Note that it is easily transformed to the cost-minimization framework of a stochastic shortest-path problem.) We use the same transition and observation probabilities given by Russell and Norvig [13] and Parr and Russell [9]. For this example, it is not the case that all policies are proper.\nOne reason for adopting this simple example is that it is the same example used by Russell and Norvig [13] to illustrate how to compute suboptimality bounds for solutions found by dynamic programming for discounted infinite-horizon MDPs. However, this example is most naturally formalized in an undiscounted reward-maximization framework that is equivalent to a stochastic shortest path problem, as noted by both Russell and Norvig [13] and Parr and Russell [9]. Although this gridworld example is very simple, it helps to illustrate several aspects of our approach.\nWe implemented our approach to computing suboptimality bounds in exact value iteration and policy iteration algorithms for completely observable and partially observable stochastic shortest path problems. Table 1 shows the results for the first 12 iterations of the algorithms, starting from the\nvalue function of the uniform random policy. The bounds depend not only on the size of the Bellman residual, but on the upper bound m = maxi\u2208S N(i) on the expected number of stages before termination, which in turn depends on the current value function. In the first couple iterations, the error bounds are loose because the value function is still rather poor and m is relatively large. As the value function improves over successive iterations, the bounds improve due to a reduction in the expected number of stages until termination, as well as a decrease in the Bellman residual.\nThe bounds shown in Table 1 are based on Equation 14, which means that they are independent of the starting state. But Equation 13 (upon which Equation 14 is based) lets us compute a separate suboptimality bound for each state. These bounds are proportional to the expected number of transitions needed to reach the goal from each state. In this respect, they are more realistic than the well-known suboptimality bound for discounted infinite-horizonMDPs, which is ||J\u2217\u2212J || \u2264 ||TJ\u2212J ||/(1\u2212\u03b2). The latter assumes that the expected number of transitions until termination is 1/(1 \u2212 \u03b2), regardless of the starting state and its distance from the goal. A second well-known disadvantage of the suboptimality bound for discounted infinite-horizon MDPs is that it is looser, and converges more slowly, the closer the discount factor is to 1. Interestingly, there is something analogous for stochastic shortest path problems. The suboptimality bound of Equation 14 is looser, and converges more slowly, the greater the expected number of transitions until termination starting from the \u201cfarthest\u201d state from the\ngoal, that is, the greatermaxi\u2208S N(i). An advantage of using Equation 13 to compute a separate suboptimality bound for each state is that many or most bounds can be relatively tight and converge quickly, even if there is some state that is very far from the goal state with a suboptimality bound that converges more slowly.\nFor the gridworld example in its completely observable form, Table 2 shows the value J(i) and upper bound N(i) for each state i, for each iteration of policy iteration. The smaller N(i) is, the tighter the suboptimality bound. Because the values of states close to the goal tend to converge faster than the values of states farther from the goal, as illustrated in Table 2, their suboptimality bounds also converge faster. Table 2 does show one anomaly. The upper bound N(6), which is for the \u22121 state, is unrealistically high because it ignores the fact that taking any action in this state causes an immediate transition to the terminal state. Taking into account the transition probabilities for this problem, we could set N(6) equal to 1. Thus we ignore it when computing the bound of Equation 14.\nThe partially observable version of this problem does not have a simple solution. After 12 iterations, the number of vectors used to represent the value function is more than 10, 000! This underscores that, in the partially observable case, suboptimality bounds are especially useful. The complexity of each iteration of policy or value iteration can grow exponentially in the number of iterations, and it is usually not possible to compute an optimal solution."}, {"heading": "5 General case", "text": "We next consider the general case in which there are no restrictions on transition costs and not all policies are proper. In this case, it is no longer possible to use the minimum cost of a transition to bound the average number of stages until termination of a policy \u00b5 for which J\u00b5 \u2264 J , since the minimum cost could be zero or negative. The analysis needs to be more complex. Although we are not yet able to describe a good approach to computing suboptimality bounds in the general case, we present some preliminary results in this direction. First we show that the dynamic programming operator for stochastic shortest path problems behaves like an m-stage contraction operator, even in the general case. We also show that it is possible to compute suboptimality bounds in the general case, although the bounds we describe are much too loose to be practical. Finally, we discuss some implications of these results."}, {"heading": "5.1 Contraction property", "text": "We begin by showing that the dynamic programming operator behaves like anm-stage contraction when applied to a value function J that is uniformly improvable. This result is related to Theorem 2, which shows that a greedy policy with respect to a uniformly improvable value function is a proper policy. For any proper policy, there exists (by Definition 1) a finite positive integer m such that there is a positive probability of reaching the terminal state after at mostm stages when following this policy, regardless of the start state. In the special case of positive transition costs, Theorem 5 shows how to compute such an m; in that case, m = maxi\u2208S N(i). We now show how to compute such an m for the general case in which there are no restrictions on transition costs.\nConsider a finite-horizon MDP that has the same state set, action set, transition probabilities and transition costs as the original stochastic shortest path problem, but where the objective is to compute the minimum k-stage cost, Jk(i), for each starting state i, of any policy that does not reach the terminal state within k stages. In solving this finite-horizon MDP, we must partition the state set into two subsets that need to be treated separately at each stage k. For one set of states, denoted Tk, termination within k stages is inevitable under any policy. For the remaining states, S\\Tk, there is some policy under which the probability of termination within k stages is zero. It is only for the second set of states that we solve the finite-horizon MDP for k stages. Note that Tk is a proper subset of S for all k, unless all policies are proper.\nFigure 2 gives the pseudocode for an algorithm that solves this finite-horizonMDPwhile distinguishing between these two sets of states. The horizon is determined dynamically.\nIt is the smallest stage k for which Jk(i) + a > J(i),\u2200i \u2208 S\\Tk, where a = min{g(i, u, t) : i \u2208 S, u \u2208 U} denotes the minimum cost of any transition to the terminal state and J is a uniformly improvable value function for the original stochastic shortest path problem. We know the horizon must be finite because a and J(i) are finite, and (assuming there exists a policy under which termination can be delayed indefinitely beginning from state i), Jk(i) goes to infinity as k goes to infinity, by Assumption 3. Since Jk(i) is the minimum cost of any policy that does not reach the terminal state within k stages beginning from state i, Jk(i)+a is a lower bound on the cost of any policy that reaches the terminal state in k + 1 stages beginning from state i. The key observation is that for any policy \u00b5 that does not reach the terminal state within k + 1 stages with probability greater than zero beginning from state i, we have J\u00b5(i) \u2265 Jk(i) + a > J(i), which contradicts the assumption that J\u00b5 \u2264 J . Therefore, we can setm equal to one plus the smallest k for which Jk(i)+ a > J(i),\u2200i \u2208 S\\Tk, and we have the following result.\nTheorem 6. For any stochastic shortest path problem and for any initial value function J for which TJ \u2264 J , the dynamic programming operator T behaves like anm-stage contraction operator.\nWe say that the dynamic programming operator behaves like an m-stage contraction operator, not that it is one, because Bertsekas and Tsitsiklis [3, 4] give an example that shows that the dynamic programming operator for stochastic shortest path problems is not a contraction with respect to any norm, unless all policies are proper. (The example is briefly reviewed in Section 2.2). The distinction between being an m-stage contraction and behaving like one is necessary if we adopt the definition that an operator is an m-stage contraction if and only if it satisfies the condition expressed by Equation 7 for all bounded value functions [2]. But Theorem 6 only claims that the dynamic programming operator satisfies the m-stage contraction property expressed by Equation 7 for the closed subspace of uniformly improvable value functions. Thus we could also\nsay that the dynamic programming operator for stochastic shortest path problems is an m-stage contraction operator in the subspace of uniformly improvable value functions, but not in the space of all bounded value functions.\nThe question of whether the dynamic programming operator is, or behaves like, a contraction operator is closely related to the possibility of bounding the suboptimality of solutions found by dynamic programming. We can use Equations 13 and 14 to compute suboptimality bounds only if we can bound the average number of stages until the terminal state is reached, and we can bound the average number of stages until the terminal state is reached only if there is some finite m such that policy execution terminates within m stages with positive probability. Conversely, the existence of some finite m such that policy execution terminates withinm stages with positive probability implies that we can bound the average number of stages until termination of any policy. But a bound on the number of stages of policy execution required to reach the terminal state with positive probability is not also a bound on the average number of stages it takes to reach the terminal state. The second bound is at least as great as the first, but it is usually greater.\nGiven that policy execution terminates within m stages with positive probability, where m is computed as above, we can describe a simple approach to bounding the average number of stages it takes to reach the terminal state. Let pt = min{pit(u) > 0 : i \u2208 S, u \u2208 U} denote the smallest non-zero probability of a transition into the terminal state t and let pn = min{pij(u) > 0 : i \u2208 S, j \u2208 S\\t, u \u2208 U} denote the smallest non-zero probability of any other transition. It follows that \u03c1m = pm\u22121n \u00b7 pt > 0 is a lower bound on the probability of process termination within m stages. Thus an upper bound on the expected number of stages until termination is given by m \u2211\u221e t=0(1 \u2212 \u03c1m)t = m/\u03c1m. If we set N(i) = m/\u03c1m,\u2200i \u2208 S, we can use Equations 13 and 14 to compute suboptimality bounds. But almost surely, these bounds will be much too loose to be of any practical value. Their derivation does show that it is possible to use the Bellman residual to compute suboptimality bounds, however, and future work may lead to a more sophisticated approach that computes tighter bounds."}, {"heading": "5.2 Implications", "text": "Regardless of whether Theorem 6 supports a practical approach to computing suboptimality bounds in the general case, it has some important theoretical implications. Among them, it points to a stronger convergence proof for policy iteration than the proofs given by Bertsekas and Tsitsiklis [3, 4] in the completely observable case, and by Patek [11] in the partially observable case. Because policy iteration must start with an initial proper policy, the dynamic programming operator used in the policy improvement step behaves like an m-stage contraction, and thus\nstandard contraction theory can be invoked to establish uniform convergence. The m-stage contraction behavior also establishes that policy iteration converges at a geometric rate. In addition, it establishes that value iteration converges at a geometric rate when given an initial value function that is uniformly improvable. By contrast, the convergence proofs of Bertakas and Tsitsiklis [4] and Patek [11] do not establish that policy iteration and value iteration converge at a geometric rate, unless all policies are proper.\nThe significance of ensuring a geometric rate of convergence is that for any \u03f5 > 0, it is possible to bound the number of iterations of value (or policy) iteration needed to find an \u03f5-optimal policy. In the partially observable case, this result is especially noteworthy. The problem of finding an \u03f5-optimal policy for a discounted infinite-horizon POMDP is well-known to be decidable, by the contraction property of the dynamic programming operator in the case of discounting. But for undiscounted infinite-horizon POMDPs, the problem of finding an \u03f5-optimal policy has been shown to be undecidable, in general [7]. However, our results imply that for an important special case of undiscounted infinite-horizon POMDPs, the partially observable stochastic shortest path problem, the problem of finding an \u03f5-optimal policy is decidable.\nTo help make this result seem more plausible, note that the undecidability of \u03f5-approximation for undiscounted infinite-horizon POMDPs is proved by reduction from the problem of maximizing the probability of reaching a goal state, where there is a reward of 1 for reaching the goal state, a reward of 0 for not reaching the goal state, and the goal state cannot be reached with probability 1 [7]. Obviously, this problem cannot be reduced to a partially observable stochastic shortest path problem. On the other hand, the optimization problem for discounted infinite-horizon POMDPs, which is also undecidable [7], can be reduced to a partially observable stochastic shortest path problem. But it does not imply the undecidability of \u03f5-approximation, since \u03f5-approximation is decidable for discounted infinitehorizon POMDPs.\nTwo key assumptions of the stochastic shortest path problem play a role in making \u03f5-approximation decidable in the partially observable case; (i) a proper policy exists, and (ii) the expected cost of policy execution beginning from any state from which the terminal state is not reached with probability 1 is infinite. Combined with our observation that J\u00b5 \u2264 J for any policy \u00b5 found by dynamic programming when the initial value function J is uniformly improvable, we have been able to establish the m-stage contraction behavior of the dynamic programming operator in the space of uniformly improvable value functions. In turn, it allows use of the Bellman residual of the dynamic programming operator to compute suboptimality bounds."}, {"heading": "6 Conclusion", "text": "For stochastic shortest path problems, we have shown that under the condition that the initial value function is uniformly improvable, a greedy policy with respect to any value function found by value iteration is proper. We have also shown how to bound the expected number of stages before the terminal state is reached when following a proper policy found by either value iteration or policy iteration, which in turn lets us use the Bellman residual of the dynamic programming operator to compute suboptimality bounds. The key formula used to compute suboptimality bounds is due to Bertsekas [2]. But it has not been clear how it could be applied to the case where not all policies are proper. Our contribution is to show that it can be used to compute suboptimality bounds even when not all policies are proper, as long as the initial value function is uniformly improvable.\nIn the special case of positive transition costs, especially when the transition costs are uniform or nearly-uniform, we showed that useful suboptimality bounds can be easily computed. In the general case in which transition costs can be zero or negative, we showed that suboptimality bounds are possible, but without describing a practical approach to computing bounds that are tight enough to be useful. We leave this problem for future work."}], "references": [{"title": "Learning to act using real-time dynamic programming", "author": ["A. Barto", "S. Bradtke", "S. Singh"], "venue": "Artificial Intelligence,", "citeRegEx": "1", "shortCiteRegEx": "1", "year": 1995}, {"title": "Dynamic Programming and Optimal Control, Volume I", "author": ["D. Bertsekas"], "venue": "Athena Scientific,", "citeRegEx": "2", "shortCiteRegEx": "2", "year": 2005}, {"title": "Parallel and distributed computation: Numerical methods", "author": ["D. Bertsekas", "J. Tsitsiklis"], "venue": null, "citeRegEx": "3", "shortCiteRegEx": "3", "year": 1989}, {"title": "Analysis of stochastic shortest path problems", "author": ["D. Bertsekas", "J. Tsitsiklis"], "venue": "Mathematics of Operations Research,", "citeRegEx": "4", "shortCiteRegEx": "4", "year": 1991}, {"title": "Neuro-Dynamic Programming", "author": ["D. Bertsekas", "J. Tsitsiklis"], "venue": "Athena Scientific,", "citeRegEx": "5", "shortCiteRegEx": "5", "year": 1996}, {"title": "Heuristic search for planning under uncertainty", "author": ["B. Bonet", "E. Hansen"], "venue": "College Publications,", "citeRegEx": "6", "shortCiteRegEx": "6", "year": 2010}, {"title": "On the undecidability of probabilistic planning and related stochastic optimization problems", "author": ["O. Madani", "S. Hanks", "A. Condon"], "venue": "Artificial Intelligence,", "citeRegEx": "7", "shortCiteRegEx": "7", "year": 2003}, {"title": "Decentralized algorithms for netcentric force protection against antiship missiles", "author": ["M. Maskery", "V. Krishnamurthy", "C. O\u2019Regan"], "venue": "IEEE Transactions on Aerospace and Electronic Systems,", "citeRegEx": "8", "shortCiteRegEx": "8", "year": 2008}, {"title": "Approximating optimal policies for partially observable stochastic domains", "author": ["R. Parr", "S. Russell"], "venue": "In Proc. of the 14th Int. Joint Conf. on Artificial Intelligence", "citeRegEx": "9", "shortCiteRegEx": "9", "year": 1995}, {"title": "On terminating Markov decision processes with a risk averse objective function", "author": ["S. Patek"], "venue": null, "citeRegEx": "10", "shortCiteRegEx": "10", "year": 2001}, {"title": "Partially observed stochastic shortest path problems with approximate solution by neurodynamic programming", "author": ["S. Patek"], "venue": "IEEE Transactions on Systems, Man, and Cybernetics \u2013 Part A: Systems and Humans,", "citeRegEx": "11", "shortCiteRegEx": "11", "year": 2007}, {"title": "Stochastic shortest path games", "author": ["S. Patek", "D. Bertsekas"], "venue": "SIAM Journal of Control and Optimization,", "citeRegEx": "12", "shortCiteRegEx": "12", "year": 1999}, {"title": "Artificial Intelligence: A Modern Approach", "author": ["S. Russell", "P. Norvig"], "venue": null, "citeRegEx": "13", "shortCiteRegEx": "13", "year": 2009}, {"title": "Heuristic search value iteration for POMDPs", "author": ["T. Smith", "R. Simmons"], "venue": "In Proceedings of the 20th Conference in Uncertainty in Artificial Intelligence (UAI-", "citeRegEx": "14", "shortCiteRegEx": "14", "year": 2004}, {"title": "Asynchronous stochastic approximation and Q-learning", "author": ["J. Tsitsiklis"], "venue": "Machine Learning,", "citeRegEx": "15", "shortCiteRegEx": "15", "year": 1994}, {"title": "Speeding up the convergence of value iteration in partially observable Markov decision processes", "author": ["N. Zhang", "W. Zhang"], "venue": "Journal of Artificial Intelligence Research,", "citeRegEx": "16", "shortCiteRegEx": "16", "year": 2001}], "referenceMentions": [{"referenceID": 3, "context": "A stochastic shortest path problem is a Markov decision process (MDP) where the objective is to find a minimumcost policy that reaches a goal or terminal state with probability 1 [4, 2].", "startOffset": 179, "endOffset": 185}, {"referenceID": 1, "context": "A stochastic shortest path problem is a Markov decision process (MDP) where the objective is to find a minimumcost policy that reaches a goal or terminal state with probability 1 [4, 2].", "startOffset": 179, "endOffset": 185}, {"referenceID": 14, "context": "The model is also used in the development and analysis of reinforcement learning and heuristic search algorithms for MDPs [15, 1, 6].", "startOffset": 122, "endOffset": 132}, {"referenceID": 0, "context": "The model is also used in the development and analysis of reinforcement learning and heuristic search algorithms for MDPs [15, 1, 6].", "startOffset": 122, "endOffset": 132}, {"referenceID": 5, "context": "The model is also used in the development and analysis of reinforcement learning and heuristic search algorithms for MDPs [15, 1, 6].", "startOffset": 122, "endOffset": 132}, {"referenceID": 10, "context": "There are extensions of the stochastic shortest path problem for planning under partial observability [11], multi-agent planning [12, 8], and risksensitive planning [10].", "startOffset": 102, "endOffset": 106}, {"referenceID": 11, "context": "There are extensions of the stochastic shortest path problem for planning under partial observability [11], multi-agent planning [12, 8], and risksensitive planning [10].", "startOffset": 129, "endOffset": 136}, {"referenceID": 7, "context": "There are extensions of the stochastic shortest path problem for planning under partial observability [11], multi-agent planning [12, 8], and risksensitive planning [10].", "startOffset": 129, "endOffset": 136}, {"referenceID": 9, "context": "There are extensions of the stochastic shortest path problem for planning under partial observability [11], multi-agent planning [12, 8], and risksensitive planning [10].", "startOffset": 165, "endOffset": 169}, {"referenceID": 2, "context": "We begin with a review of the stochastic shortest path problem as formulated by Bertsekas and Tsitsiklis [3, 4, 5] and extended to the partially observable case by Patek [11].", "startOffset": 105, "endOffset": 114}, {"referenceID": 3, "context": "We begin with a review of the stochastic shortest path problem as formulated by Bertsekas and Tsitsiklis [3, 4, 5] and extended to the partially observable case by Patek [11].", "startOffset": 105, "endOffset": 114}, {"referenceID": 4, "context": "We begin with a review of the stochastic shortest path problem as formulated by Bertsekas and Tsitsiklis [3, 4, 5] and extended to the partially observable case by Patek [11].", "startOffset": 105, "endOffset": 114}, {"referenceID": 10, "context": "We begin with a review of the stochastic shortest path problem as formulated by Bertsekas and Tsitsiklis [3, 4, 5] and extended to the partially observable case by Patek [11].", "startOffset": 170, "endOffset": 174}, {"referenceID": 1, "context": "Following a policy that is proper according to this definition, a process reaches the terminal state with probability 1, regardless of the initial state [2].", "startOffset": 153, "endOffset": 156}, {"referenceID": 2, "context": "Two special cases of the stochastic shortest path problem play an important role in the analysis of Bertsekas and Tsitsiklis [3, 4, 5].", "startOffset": 125, "endOffset": 134}, {"referenceID": 3, "context": "Two special cases of the stochastic shortest path problem play an important role in the analysis of Bertsekas and Tsitsiklis [3, 4, 5].", "startOffset": 125, "endOffset": 134}, {"referenceID": 4, "context": "Two special cases of the stochastic shortest path problem play an important role in the analysis of Bertsekas and Tsitsiklis [3, 4, 5].", "startOffset": 125, "endOffset": 134}, {"referenceID": 2, "context": "Bertsekas and Tsitsiklis [3, 4, 5] show that the dynamic programming operator for stochastic shortest path problems is an m-stage contraction operator in the special case that all policies are proper.", "startOffset": 25, "endOffset": 34}, {"referenceID": 3, "context": "Bertsekas and Tsitsiklis [3, 4, 5] show that the dynamic programming operator for stochastic shortest path problems is an m-stage contraction operator in the special case that all policies are proper.", "startOffset": 25, "endOffset": 34}, {"referenceID": 4, "context": "Bertsekas and Tsitsiklis [3, 4, 5] show that the dynamic programming operator for stochastic shortest path problems is an m-stage contraction operator in the special case that all policies are proper.", "startOffset": 25, "endOffset": 34}, {"referenceID": 3, "context": "In the words of Bertsekas and Tsitsiklis [4], \u201cour assumptions do not imply that the corresponding dynamic programming mapping is a contraction (unlike the situation in discounted problems), unless all policies are proper.", "startOffset": 41, "endOffset": 44}, {"referenceID": 10, "context": "Patek [11] extends the framework of stochastic shortest path problems to the partially observable case.", "startOffset": 6, "endOffset": 10}, {"referenceID": 10, "context": "Given the assumptions of the partially observable stochastic shortest path problem, Patek [11] shows that value iteration and policy iteration have the same convergence properties established by Bertsekas and Tsitsiklis [3, 4] in the completely observable case.", "startOffset": 90, "endOffset": 94}, {"referenceID": 2, "context": "Given the assumptions of the partially observable stochastic shortest path problem, Patek [11] shows that value iteration and policy iteration have the same convergence properties established by Bertsekas and Tsitsiklis [3, 4] in the completely observable case.", "startOffset": 220, "endOffset": 226}, {"referenceID": 3, "context": "Given the assumptions of the partially observable stochastic shortest path problem, Patek [11] shows that value iteration and policy iteration have the same convergence properties established by Bertsekas and Tsitsiklis [3, 4] in the completely observable case.", "startOffset": 220, "endOffset": 226}, {"referenceID": 2, "context": "The convergence proofs for value iteration and policy iteration given by Bertsekas and Tsitsiklis [3, 4] and Patek [11] for the general case when not all policies are proper are significant because they do not depend on the contraction property.", "startOffset": 98, "endOffset": 104}, {"referenceID": 3, "context": "The convergence proofs for value iteration and policy iteration given by Bertsekas and Tsitsiklis [3, 4] and Patek [11] for the general case when not all policies are proper are significant because they do not depend on the contraction property.", "startOffset": 98, "endOffset": 104}, {"referenceID": 10, "context": "The convergence proofs for value iteration and policy iteration given by Bertsekas and Tsitsiklis [3, 4] and Patek [11] for the general case when not all policies are proper are significant because they do not depend on the contraction property.", "startOffset": 115, "endOffset": 119}, {"referenceID": 15, "context": "We call a value function J for which TJ \u2264 J a uniformly improvable value function, a term used by others [16, 14].", "startOffset": 105, "endOffset": 113}, {"referenceID": 13, "context": "We call a value function J for which TJ \u2264 J a uniformly improvable value function, a term used by others [16, 14].", "startOffset": 105, "endOffset": 113}, {"referenceID": 12, "context": "Figure 1: Gridworld navigation example [13, 9].", "startOffset": 39, "endOffset": 46}, {"referenceID": 8, "context": "Figure 1: Gridworld navigation example [13, 9].", "startOffset": 39, "endOffset": 46}, {"referenceID": 12, "context": "Russell and Norvig [13] describe a completely observable version of this gridworld and Parr and Russell [9] describe a partially observable version.", "startOffset": 19, "endOffset": 23}, {"referenceID": 8, "context": "Russell and Norvig [13] describe a completely observable version of this gridworld and Parr and Russell [9] describe a partially observable version.", "startOffset": 104, "endOffset": 107}, {"referenceID": 12, "context": "(For convenience, we keep the reward-maximization framework used by Russell and Norvig [13] and Parr and Russell [9].", "startOffset": 87, "endOffset": 91}, {"referenceID": 8, "context": "(For convenience, we keep the reward-maximization framework used by Russell and Norvig [13] and Parr and Russell [9].", "startOffset": 113, "endOffset": 116}, {"referenceID": 12, "context": ") We use the same transition and observation probabilities given by Russell and Norvig [13] and Parr and Russell [9].", "startOffset": 87, "endOffset": 91}, {"referenceID": 8, "context": ") We use the same transition and observation probabilities given by Russell and Norvig [13] and Parr and Russell [9].", "startOffset": 113, "endOffset": 116}, {"referenceID": 12, "context": "One reason for adopting this simple example is that it is the same example used by Russell and Norvig [13] to illustrate how to compute suboptimality bounds for solutions found by dynamic programming for discounted infinite-horizon MDPs.", "startOffset": 102, "endOffset": 106}, {"referenceID": 12, "context": "However, this example is most naturally formalized in an undiscounted reward-maximization framework that is equivalent to a stochastic shortest path problem, as noted by both Russell and Norvig [13] and Parr and Russell [9].", "startOffset": 194, "endOffset": 198}, {"referenceID": 8, "context": "However, this example is most naturally formalized in an undiscounted reward-maximization framework that is equivalent to a stochastic shortest path problem, as noted by both Russell and Norvig [13] and Parr and Russell [9].", "startOffset": 220, "endOffset": 223}, {"referenceID": 2, "context": "We say that the dynamic programming operator behaves like an m-stage contraction operator, not that it is one, because Bertsekas and Tsitsiklis [3, 4] give an example that shows that the dynamic programming operator for stochastic shortest path problems is not a contraction with respect to any norm, unless all policies are proper.", "startOffset": 144, "endOffset": 150}, {"referenceID": 3, "context": "We say that the dynamic programming operator behaves like an m-stage contraction operator, not that it is one, because Bertsekas and Tsitsiklis [3, 4] give an example that shows that the dynamic programming operator for stochastic shortest path problems is not a contraction with respect to any norm, unless all policies are proper.", "startOffset": 144, "endOffset": 150}, {"referenceID": 1, "context": "The distinction between being an m-stage contraction and behaving like one is necessary if we adopt the definition that an operator is an m-stage contraction if and only if it satisfies the condition expressed by Equation 7 for all bounded value functions [2].", "startOffset": 256, "endOffset": 259}, {"referenceID": 2, "context": "Among them, it points to a stronger convergence proof for policy iteration than the proofs given by Bertsekas and Tsitsiklis [3, 4] in the completely observable case, and by Patek [11] in the partially observable case.", "startOffset": 125, "endOffset": 131}, {"referenceID": 3, "context": "Among them, it points to a stronger convergence proof for policy iteration than the proofs given by Bertsekas and Tsitsiklis [3, 4] in the completely observable case, and by Patek [11] in the partially observable case.", "startOffset": 125, "endOffset": 131}, {"referenceID": 10, "context": "Among them, it points to a stronger convergence proof for policy iteration than the proofs given by Bertsekas and Tsitsiklis [3, 4] in the completely observable case, and by Patek [11] in the partially observable case.", "startOffset": 180, "endOffset": 184}, {"referenceID": 3, "context": "By contrast, the convergence proofs of Bertakas and Tsitsiklis [4] and Patek [11] do not establish that policy iteration and value iteration converge at a geometric rate, unless all policies are proper.", "startOffset": 63, "endOffset": 66}, {"referenceID": 10, "context": "By contrast, the convergence proofs of Bertakas and Tsitsiklis [4] and Patek [11] do not establish that policy iteration and value iteration converge at a geometric rate, unless all policies are proper.", "startOffset": 77, "endOffset": 81}, {"referenceID": 6, "context": "But for undiscounted infinite-horizon POMDPs, the problem of finding an \u03b5-optimal policy has been shown to be undecidable, in general [7].", "startOffset": 134, "endOffset": 137}, {"referenceID": 6, "context": "To help make this result seem more plausible, note that the undecidability of \u03b5-approximation for undiscounted infinite-horizon POMDPs is proved by reduction from the problem of maximizing the probability of reaching a goal state, where there is a reward of 1 for reaching the goal state, a reward of 0 for not reaching the goal state, and the goal state cannot be reached with probability 1 [7].", "startOffset": 392, "endOffset": 395}, {"referenceID": 6, "context": "On the other hand, the optimization problem for discounted infinite-horizon POMDPs, which is also undecidable [7], can be reduced to a partially observable stochastic shortest path problem.", "startOffset": 110, "endOffset": 113}, {"referenceID": 1, "context": "The key formula used to compute suboptimality bounds is due to Bertsekas [2].", "startOffset": 73, "endOffset": 76}], "year": 2011, "abstractText": "We consider how to use the Bellman residual of the dynamic programming operator to compute suboptimality bounds for solutions to stochastic shortest path problems. Such bounds have been previously established only in the special case that \u201call policies are proper,\u201d in which case the dynamic programming operator is known to be a contraction, and have been shown to be easily computable only in the more limited special case of discounting. Under the condition that transition costs are positive, we show that suboptimality bounds can be easily computed even when not all policies are proper. In the general case when there are no restrictions on transition costs, the analysis is more complex. But we present preliminary results that show such bounds are possible.", "creator": " TeX output 2011.07.13:2347"}}}