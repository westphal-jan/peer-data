{"id": "1301.3577", "review": {"conference": "iclr", "VERSION": "v1", "DATE_OF_SUBMISSION": "16-Jan-2013", "title": "Saturating Auto-Encoders", "abstract": "We introduce a simple new regularizer for auto-encoders whose hidden-unit activation functions contain at least one zero-gradient (saturated) region. This regularizer explicitly encourages activations in the saturated region(s) of the corresponding activation function. We call these Saturating Auto-Encoders (SATAE). We show that the saturation regularizer explicitly limits the SATAE's ability to reconstruct inputs which are not near the data manifold. Furthermore, we show that a wide variety of features can be learned when different activation functions are used. Finally, connections are established with the Contractive and Sparse Auto-Encoders. By setting a state for the SATAE's activation function (for example, by specifying \"state\"), the SATAE can be used as an operator for the data manifold. When we call SATAE from SATAE via SATAE through the SATAE through the SATAE through the SATAE through the SATAE through the SATAE through the SATAE through the SATAE through the SATAE through the SATAE through the SATAE through the SATAE through the SATAE through the SATAE through the SATAE through the SATAE through the SATAE through the SATAE through the SATAE through the SATAE through the SATAE through the SATAE through the SATAE through the SATAE through the SATAE through the SATAE through the SATAE through the SATAE through the SATAE through the SATAE through the SATAE through the SATAE through the SATAE through the SATAE through the SATAE through the SATAE through the SATAE through the SATAE through the SATAE through the SATAE through the SATAE through the SATAE through the SATAE through the SATAE through the SATAE through the SATAE through the SATAE through the SATAE through the SATAE through the SATAE through the SATAE through the SATAE through the SATAE through the SATAE through the SATAE through the SATAE through the SATAE through the SATAE through the SATAE through the SATAE through the SATAE through the SATAE through the SATAE through the SATAE through the SATAE through the SATAE through the SATAE through", "histories": [["v1", "Wed, 16 Jan 2013 04:07:46 GMT  (113kb,D)", "http://arxiv.org/abs/1301.3577v1", null], ["v2", "Wed, 13 Feb 2013 00:28:01 GMT  (235kb,D)", "http://arxiv.org/abs/1301.3577v2", null], ["v3", "Wed, 20 Mar 2013 15:37:33 GMT  (776kb,D)", "http://arxiv.org/abs/1301.3577v3", null]], "reviews": [], "SUBJECTS": "cs.LG", "authors": ["rostislav goroshin", "yann lecun"], "accepted": true, "id": "1301.3577"}, "pdf": {"name": "1301.3577.pdf", "metadata": {"source": "CRF", "title": "Saturating Auto-Encoder", "authors": ["Rostislav Goroshin", "Yann LeCun"], "emails": ["goroshin@cs.nyu.edu", "yann@cs.nyu.edu"], "sections": [{"heading": "1 Introduction", "text": "An auto-encoder is a conceptually simple neural network used for obtaining useful data representations through unsupervised training. It is composed of an encoder which outputs a hidden (or latent) representation and a decoder which attempts to reconstruct the input using the hidden representation as its input. Training consists of minimizing a reconstruction cost such as L2 error. However this cost is merely a proxy for the true objective: to obtain a useful latent representation. Auto-encoders can implement many dimensionality reduction techniques such as PCA and Sparse Coding (SC) [5] [6] [7]. This makes the study of auto-encoders very appealing from a theoretical standpoint. In recent years, renewed interest in auto-encoders networks has mainly been due to their empirical success in unsupervised feature learning [1] [2] [3] [4].\nWith only its reconstruction cost, the standard auto-encoder does not typically learn any meaningful hidden representation of the data. Well known theoretical and experimental results show that a linear auto-encoder with trainable encoding and decoding matrices, W e and W d respectively, learns the identity function if W e and W d are full rank or over-complete. The linear auto-encoder learns the principle variance directions (PCA) if W e and W d are rank deficient [5]. It has been observed that other representations can be obtained by regularizing the latent representation. This approach is exemplified by the Contractive and Sparse Auto-Encoders [3] [1] [2]. Intuitively, an auto-encoder with limited capacity will focus its resources on reconstructing portions of the input space in which data samples occur most frequently. From an energy based perspective, auto-encoders achieve low reconstruction cost in portions of the input space with high data density. If the data occupies some low dimensional manifold in the higher dimensional input space then minimizing reconstruction error achieves low energy on this manifold. Useful latent state regularizers raise the energy of points that do not lie on the manifold, thus playing an analogous role to minimizing the partition function in maximum likelihood models. In this work we introduce a new type of regularizer that does this explicitly for auto-encoders with a non-linearity that contains at least one flat (zero gradient) region. We show examples where this regularizer and the choice of nonlinearity determine the feature set that is learned by the auto-encoder.\nar X\niv :1\n30 1.\n35 77\nv1 [\ncs .L\nG ]\n1 6\nJa n\n20 13"}, {"heading": "2 Hidden Variable Regularization", "text": "Several auto-encoder variants which regularize their latent states have been proposed, they include the sparse auto-encoder and the contractive auto-encoder [1] [2] [3]. The sparse auto-encoder includes an over-complete basis in the encoder and imposes a sparsity inducing (usually L1) penalty on the hidden activations. This penalty prevents the auto-encoder from learning to reconstruct all possible points in the input space and focuses the expressive power of the auto-encoder on representing the data-manifold. Similarly, the contractive auto-encoder avoids trivial solutions by introducing an auxiliary penalty which measures the square Frobenius norm of the Jacobian of the latent representation with respect to the inputs. This encourages a constant latent representation except around training samples where it is counteracted by the reconstruction term. It has been noted in [3] that these two approaches are strongly related. The contractive auto-encoder explicitly encourages small entries in the Jacobian, whereas the sparse auto-encoder is encouraged to produce mostly zero (sparse) activations which can be designed to correspond to mostly flat regions of the nonlinearity, thus also yielding small entries in the Jacobian."}, {"heading": "2.1 Saturating Auto-Encoder through Complementary Nonlinearities", "text": "Our goal is to introduce a simple new regularizer which will explicitly raises reconstruction error for inputs not near the data manifold. Consider activation functions with at least one flat region; these include shrink, rectified linear, and saturated linear (Figure 1). Auto-encoders with such nonlinearities lose their ability to accurately reconstruct inputs which produce activations in the saturation regime(s) of their activation functions. With this in mind, we introduce a penalty of the form fc( \u2211d j=1W e ijxj + bi) encourages the argument to be in the saturation regime of the activation function (f ). We call this the Saturating Auto-Encoder (SATAE). For activation functions with zerogradient regime(s) the complementary nonlinearity (fc) can be defined as the distance to the nearest saturation region. Specifically, let S = {x | f \u2032(x) = 0} then we define fc(x) as:\nfc(x) = inf y\u2208S |x\u2212 y|. (1)\nFigure 1 shows three activation functions and their associated complementary nonlinearities. The complete loss to be minimized by a SATAE with nonlinearity f is:\nL = \u2211 x\u2208D 1 2 \u2016x\u2212 xr\u20162 + \u03b7 dh\u2211 i=1 fc(W e i x+ b e i ), (2)\nwhere xr = W df(W ex + be) + bd is the reconstructed x for an auto-encoder with no output nonlinearity, and dh denote the number of hidden units. The hyper-parameter \u03b7 regulates the tradeoff between reconstruction and saturation."}, {"heading": "3 Effect of the Saturation Regularizer", "text": "We will examine the effect of the saturation regularizer on auto-encoders with a variety of activation functions. It will be shown that the choice of activation function is a significant factor in determining the type of basis the SATAE learns. First, we will present results on toy data in two dimensions followed by results on higher dimensional image data."}, {"heading": "3.1 Visualizing the Energy Landscape", "text": "Given a trained auto-encoder the reconstruction error can be evaluated for a given input x. For low-dimensional spaces (Rn, where n \u2264 3) we can evaluate the reconstruction error on a regular grid in order to visualize the portions of the space which are well represented by the auto-encoder. More specifically we can compute E(x) = 12\u2016x \u2212 xr\u2016\n2 for all x within some bounded region of the input space. Ideally, the reconstruction energy will be low for all x which are in training set and high elsewhere. Figures 2 and 3 depict the resulting reconstruction energy for inputs x \u2208 R2, and \u22121 \u2264 xi \u2264 1. Black corresponds to low reconstruction energy. The training data consists of a one dimensional manifold shown overlain in yellow. Figure 2 shows a toy example for a SATAE which uses ten basis vectors and a shrink activation function. Note that adding the saturation regularizer decreases the volume of the space which is well reconstructed, however good reconstruction is maintained on or near the training data manifold. The auto-encoder in Figure 3 contains two encoding basis vectors (red), two decoding basis vectors (green), and uses a saturated-linear activation function. The encoding and decoding bases are unconstrained. The unregularized auto-encoder learns an orthogonal basis with a random orientation. The region of the space which is well reconstructed corresponds to the outer product of the linear regions of two activation functions; beyond that the error increases quadratically with the distance. Including the saturation regularizer however induces the auto-encoder to operate in the saturation regime at the extreme points of the training data, limiting the space which is well reconstructed. Note that because the encoding and decoding weights are separate and unrestricted, the encoding weights were scaled up to effectively reduce the width of the linear regime of the nonlinearity."}, {"heading": "3.2 SATAE-shrink", "text": "Consider a SATAE with a shrink activation function and shrink parameter \u03bb. The corresponding complementary nonlinearity, derived using Equation 1 is given by:\nshrinkc(x) = { abs(x), |x| > \u03bb 0, elsewhere .\nNote that shrinkc(W ex + be) = abs(shrink(W ex + be)), which corresponds to an L1 penalty on the activations. Thus this SATAE is equivalent to a sparse auto-encoder with a shrink activation function. Given the equivalence to the sparse auto-encoder we anticipate the same scale ambiguity which occurs with L1 regularization. This ambiguity can be avoided by normalizing the decoder weights to unit norm. It is expected that the SATAE-shrink will learn similar features to those obtain with a sparse auto-encoder, and indeed this is what we observe. Figure 4(a) shows 25 randomly selected decoder filters learned by an auto-encoder with shrink nonlinearity trained on natural 12x12 image patches. One can recognize the expected Gabor-like features when the saturation penalty is activated. When trained on the binary MNIST dataset the learned basis is comprised of portions of digits and strokes. Nearly identical results are obtained with a SATAE which uses a rectifiedlinear activation function. This is because a rectified-linear function with a bias can behave like as a\npositive only shrink function, similarly the complementary function is equivalent to a positive only L1 penalty on the activations."}, {"heading": "3.3 SATAE-saturated-linear", "text": "The SATAE with saturated-linear activation function learns a completely different feature set. Empirically, it was observed that increasing the regularization penalty produces more localized feature detectors. To understand why these feature detectors arise consider a dataset in which the variables take on binary values (e.g. MNIST). The scaled identity basis is a global minimizer of Equation 2 when a saturated-linear activation function is used. Such a basis can perfectly reconstruct any binary input while operating exclusively in the saturated regions of the activation function, thus incurring no saturation penalty. This is exactly the type of basis that arises in experiments when training on MNIST, see Figure 5b. Training on image patches produces a similar but less pronounced effect: more localized features are obtained but of greater variety (Figure 4b). In contrast to the SATAE-\nshrink, the SATAE-saturated-linear receives the heaviest penalty when the activation is zero, which tends to spread the responsibility of reconstructing the data among all the basis elements."}, {"heading": "4 Experimental Details", "text": "In all experiments data samples were normalized by subtracting the mean and dividing by the standard deviation of the dataset. Experiments on MNIST were performed with 200 basis elements, while experiments on natural image patches used only 100 basis elements. The decoder basis elements of the SATAEs with shrink and rectified-linear nonlinearities were reprojected to the unit sphere after every 10 stochastic gradient updates. The SATAEs which used saturated-linear activation function were trained with tied weights. All results presented were obtained using stochastic gradient descent."}, {"heading": "5 Discussion", "text": "We have demonstrated that by using different activation functions drastically different feature sets are learned by SATAEs. Hybrid SATAEs which use a mixture of activation functions also possible. The utility of these features depend on the application."}, {"heading": "5.1 Relationship with the Contractive Auto-Encoder", "text": "Let hi be the output of the ith hidden unit of a single-layer auto-encoder with point-wise nonlinearity f(\u00b7). The regularizer imposed by the contractive auto-encoder (CAE) can be expressed as follows:\n\u2211 ij ( \u2202hi \u2202xj )2 = dh\u2211 i f \u2032( d\u2211 j=1 W eijxj + bi) 2\u2016W ei \u20162  , where x is a d-dimensional data vector, f \u2032(\u00b7) is the derivative of f(\u00b7), bi is the bias of the ith encoding unit, andW ei denotes the i\nth row of the encoding weight matrix. The first term in the above equation tries to adjust the weights so as to push the activations into the low gradient (saturation) regime of the nonlinearity, but is only defined for differentiable activation functions. Therefore the CAE indirectly encourages operation in the saturation regime. Computing the Jacobian, however, can be cumbersome for deep networks. Furthermore, the complexity of computing the Jacobian is O(d\u00d7 dh) [3], compared to the O(dh) for the saturation penalty."}, {"heading": "5.2 Relationship with the Sparse Auto-Encoder", "text": "In Section 3.2 it was shown that SATAEs with shrink or rectified-linear activation functions are equivalent to a sparse auto-encoder. Like the sparsity penalty, the saturation penalty can be applied at any point in a deep network at the same computational cost. Unlike the sparsity penalty, the saturation penalty is adapted to the nonlinearity of the particular layer to which it is applied."}], "references": [{"title": "Efficient Learning of Sparse Representations with an Energy- Based Model, in J", "author": ["Marc\u2019Aurelio Ranzato", "Christopher Poultney", "Sumit Chopra", "Yann LeCun"], "venue": "Platt et al. (Eds), Advances in Neural Information Processing Systems (NIPS 2006),", "citeRegEx": "1", "shortCiteRegEx": "1", "year": 2006}, {"title": "Unsupervised Learning of Invariant Feature Hierarchies with Applications to Object Recognition", "author": ["Marc\u2019Aurelio Ranzato", "Fu-Jie Huang", "Y-Lan Boureau", "Yann LeCun"], "venue": "Proc. Computer Vision and Pattern Recognition Conference", "citeRegEx": "2", "shortCiteRegEx": "2", "year": 2007}, {"title": "Contractive auto-encoders: Explicit invariance during feature extraction", "author": ["S. Rifai", "P. Vincent", "X. Muller", "X. Glorot", "Y. Bengio"], "venue": "Proceedings of the Twenty-eight International Conference on Machine Learning,", "citeRegEx": "3", "shortCiteRegEx": "3", "year": 2011}, {"title": "Extracting and Composing Robust Features with Denoising Autoencoders", "author": ["P. Vincent", "H. Larochelle", "Y. Bengio", "P.A. Manzagol"], "venue": "Proceedings of the 25th International Conference on Machine Learning (ICML\u20192008),", "citeRegEx": "4", "shortCiteRegEx": "4", "year": 2008}, {"title": "Sparse Coding with an Overcomplete Basis Set: A Strategy Employed by V1", "author": ["Bruno A. Olhausen", "David J. Field"], "venue": "Vision Research", "citeRegEx": "6", "shortCiteRegEx": "6", "year": 1997}, {"title": "Learning Fast Approximations of Sparse Coding", "author": ["Karol Gregor", "Yann LeCun"], "venue": "Proc. International Conference on Machine learning (ICML\u201910),", "citeRegEx": "7", "shortCiteRegEx": "7", "year": 2010}], "referenceMentions": [{"referenceID": 4, "context": "Auto-encoders can implement many dimensionality reduction techniques such as PCA and Sparse Coding (SC) [5] [6] [7].", "startOffset": 108, "endOffset": 111}, {"referenceID": 5, "context": "Auto-encoders can implement many dimensionality reduction techniques such as PCA and Sparse Coding (SC) [5] [6] [7].", "startOffset": 112, "endOffset": 115}, {"referenceID": 0, "context": "In recent years, renewed interest in auto-encoders networks has mainly been due to their empirical success in unsupervised feature learning [1] [2] [3] [4].", "startOffset": 140, "endOffset": 143}, {"referenceID": 1, "context": "In recent years, renewed interest in auto-encoders networks has mainly been due to their empirical success in unsupervised feature learning [1] [2] [3] [4].", "startOffset": 144, "endOffset": 147}, {"referenceID": 2, "context": "In recent years, renewed interest in auto-encoders networks has mainly been due to their empirical success in unsupervised feature learning [1] [2] [3] [4].", "startOffset": 148, "endOffset": 151}, {"referenceID": 3, "context": "In recent years, renewed interest in auto-encoders networks has mainly been due to their empirical success in unsupervised feature learning [1] [2] [3] [4].", "startOffset": 152, "endOffset": 155}, {"referenceID": 2, "context": "This approach is exemplified by the Contractive and Sparse Auto-Encoders [3] [1] [2].", "startOffset": 73, "endOffset": 76}, {"referenceID": 0, "context": "This approach is exemplified by the Contractive and Sparse Auto-Encoders [3] [1] [2].", "startOffset": 77, "endOffset": 80}, {"referenceID": 1, "context": "This approach is exemplified by the Contractive and Sparse Auto-Encoders [3] [1] [2].", "startOffset": 81, "endOffset": 84}, {"referenceID": 0, "context": "Several auto-encoder variants which regularize their latent states have been proposed, they include the sparse auto-encoder and the contractive auto-encoder [1] [2] [3].", "startOffset": 157, "endOffset": 160}, {"referenceID": 1, "context": "Several auto-encoder variants which regularize their latent states have been proposed, they include the sparse auto-encoder and the contractive auto-encoder [1] [2] [3].", "startOffset": 161, "endOffset": 164}, {"referenceID": 2, "context": "Several auto-encoder variants which regularize their latent states have been proposed, they include the sparse auto-encoder and the contractive auto-encoder [1] [2] [3].", "startOffset": 165, "endOffset": 168}, {"referenceID": 2, "context": "It has been noted in [3] that these two approaches are strongly related.", "startOffset": 21, "endOffset": 24}, {"referenceID": 2, "context": "Furthermore, the complexity of computing the Jacobian is O(d\u00d7 dh) [3], compared to the O(dh) for the saturation penalty.", "startOffset": 66, "endOffset": 69}], "year": 2017, "abstractText": "We introduce a simple new regularizer for auto-encoders whose hidden-unit activation functions contain at least one zero-gradient (saturated) region. This regularizer explicitly encourages activations in the saturated region(s) of the corresponding activation function. We call these Saturating Auto-Encoders (SATAE). We show that the saturation regularizer explicitly limits the SATAE\u2019s ability to reconstruct inputs which are not near the data manifold. Furthermore, we show that a wide variety of features can be learned when different activation functions are used. Finally, connections are established with the Contractive and Sparse Auto-Encoders.", "creator": "LaTeX with hyperref package"}}}