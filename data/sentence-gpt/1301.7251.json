{"id": "1301.7251", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "30-Jan-2013", "title": "On the Semantics and Automated Deduction for PLFC, a Logic of Possibilistic Uncertainty and Fuzziness", "abstract": "Possibilistic logic is a well-known graded logic of uncertainty suitable to reason under incomplete information and partially inconsistent knowledge, which is built upon classical first order logic. There exists for Possibilistic logic a proof procedure based on a refutation complete resolution-style calculus. Recently, a syntactical extension of first order Possibilistic logic (called PLFC) dealing with fuzzy constants and fuzzily restricted quantifiers has been proposed. Our aim is to present steps towards both the formalization of PLFC itself and an automated deduction system for it by (i) providing a formal semantics; (ii) defining a sound resolution-style calculus by refutation; and (iii) describing a first-order proof procedure for PLFC clauses based on (ii) and on a novel notion of most general substitution of two literals in a resolution step. In contrast to standard Possibilistic logic semantics, truth-evaluation of formulas with fuzzy constants are many-valued instead of boolean, and consequently an extended notion of possibilistic uncertainty is also needed. We suggest a special introduction to PLFC that will explain the implications for the first-order proof of possibility for NP theory.\n\n\n\nThe present post is written in the context of the post and will be revised in a more natural fashion to better accommodate the generalization of PLFC. The full text of this post is available as it will be written in the context of the post and will be revised in a more natural fashion to better accommodate the generalization of PLFC.\nThe main goal of this post is to provide the first proof of possibility of NP theory.\nPlatonic and Classical\nPlatonic and Classical\nPlatonic and Classical are the principal arguments of a theorem concerning NP theory. According to Platonic and Classical, the first theorem of NP theory is to prove the existence of two (b) first order models (i.e.,) and (ii) second order theories, which can be distinguished by a formal proof that proves the existence of the two (b) first order theory. In the case of Pivotala and Pivotala (i.e.,), these propositions have to be explained in terms of a predicate, (ii) a formal proof that proves the existence of a second order theory. In the case of Pythagoras and his followers (i.e., Wittgenstein and Schopenhauer, 1997), this proposition is more relevant to the natural state of mathematical theory than to", "histories": [["v1", "Wed, 30 Jan 2013 14:58:40 GMT  (273kb)", "http://arxiv.org/abs/1301.7251v1", "Appears in Proceedings of the Fifteenth Conference on Uncertainty in Artificial Intelligence (UAI1999)"]], "COMMENTS": "Appears in Proceedings of the Fifteenth Conference on Uncertainty in Artificial Intelligence (UAI1999)", "reviews": [], "SUBJECTS": "cs.AI", "authors": ["teresa alsinet", "lluis godo", "sandra sandri"], "accepted": false, "id": "1301.7251"}, "pdf": {"name": "1301.7251.pdf", "metadata": {"source": "CRF", "title": "On the Semantics and Automated Deduction for PLFC a Logic of Possibilistic Uncertainty and Fuzziness", "authors": ["Teresa Alsinet", "Sandra Sandri"], "emails": [], "sections": [{"heading": null, "text": "inconsistent Recently a syntactical extension of rst order Possibilistic logic called PLFC dealing with fuzzy constants and fuzzily re stricted quanti ers has been proposed In this paper we present steps towards both the formalization of PLFC itself and an auto mated deduction system for it by i provid ing a formal semantics ii de ning a sound resolution style calculus by refutation and iii describing a rst order proof procedure for PLFC clauses based on ii and on a novel notion of most general substitution of two lit erals in a resolution step\nINTRODUCTION\nThe necessity valued fragment of Possibilistic logic Dubois et al is a logic of uncertainty to reason under incomplete information and partially inconsis tent knowledge built upon classical rst order logic There exists for PL a proof procedure based on a refu tation complete resolution style calculus Recently in Dubois et al a syntax of an extension of PL called PLFC dealing with fuzzy constants and fuzzily restricted quanti ers has been proposed In this pa per we present steps towards both the formalization of PLFC itself and an automated deduction system for it by i providing a formal semantics ii de n ing a sound resolution style calculus by refutation completeness issues for PLFC are out of scope and iii describing a rst order proof procedure for PLFC clauses based on ii and on a novel notion of most gen eral substitution of two literals in a resolution step In contrast to standard PL semantics truth evaluation of formulas with fuzzy constants are many valued instead of boolean and consequently an extended notion of possibilistic uncertainty is also needed Remark how ever that PLFC is an uncertainty logic and clearly\ndeparts from truth functional fuzzy logic systems and the like Mukaidono et al\nThe paper is organized as follows Next section is a refresh of standard Possibilistic logic while in Section we recall the extension PLFC as proposed in Dubois et al Sections and deal with all the neces sary semantical aspects of PLFC to be able to provide sound resolution rule refutation mechanisms in Section Finally based on them in Section we describe an automated deduction method for PLFC Proofs of propositions and theorems are to be found in Alsinet et al\nNECESSITY VALUED\nPOSSIBILISTIC LOGIC\nIn necessity valued Possibilistic logic each formula is represented by a pair being a classical closed rst order logic formula and being a lower bound on the belief on p in terms of necessity mea sures A formula is thus interpreted as a con straint N where N is a necessity measure on propositions a mapping from the set of logical formu lae to a totally ordered bounded scale usually but not necessarily given by characterized by the axioms\ni N ii N iii N min N N iv N N\nif and are classically equivalent\nwhere and denote respectively tautology and con tradiction\nThe necessity valued Possibilistic logic simply Pos sibilistic logic from now on is axiomatized Hilbert style by the axioms of classical f o logic weighted by together with the following graded versions of the\nusual modus ponens and generalization inference rules\nmin MP\nx G\ntogether with a weight weakening rule\nW\nfor We shall denote by PL the notion of proof in Possibilistic logic derived from this formal system of axioms and rules\nResolution by refutation is an automated deduction method which has been nicely adapted to Possibilistic logic Indeed let K be a knowledge base formed by possibilistic clauses i e possibilistic formulas of the type where is a f o or propositional clause in the usual sense Then it holds that a formula is derived in Possibilistic logic from the knowledge base K i e K PL i we obtain a proof of by successively applying the below resolution rule in K f i j i ng where W i n i is the clausal form of\np q p r q r min Res\nIn other words if we denote the above procedure of proof by refutation through resolution by rPL we have that K PL i K rPL Moreover using the rPL procedure other rules can be derived for in stance the fusion rule\np p\np max\nNow let us recall here the usual monotonic seman tics for possibilistic logic For the sake of an easier understanding we rst consider the propositional case and after the rst order case\nThe propositional case Notation Let L be a propositional language and let be the set of classical interpretations for L that is the set of evaluations w of the atoms of the language into the boolean truth value set f g Each evaluation of atoms w extends to any clause in the usual way and thus for any w f g For any clause we will write w j i w We shall also write to denote the set of models of i e fw j w j g\nBelief states are modelled by normalized possibility distributions on the set of possible inter pretations A possibility distribution is normalized when there is at least one w such that w In other words belief states modelled by normalized distributions are consistent states in the sense that\nat least one interpretation or state or possible world has to be fully plausible These will be our possibilistic models The satisfaction relation between possibilistic models i e possibility distributions and possibilistic formulas is de ned as follows\nj i N j\nwhere N j is the necessity measure induced by on the power set of de ned as N j infw max w w infw j w If j we say that is a model of An interesting equivalent expression is\nj i for all w w max w\nAs usual if denotes a set of possibilistic clauses we say that is a model of i is a model of each formula in The possibilistic entailment denoted j PL is then de ned as follows\nj PL i j\nfor each being model of Dubois et al shows that this semantics makes Possibilistic logic sound and complete and moreover using refutation the resolution based proof system brie y sketched in the previous subsection is also sound and complete wrt to the above semantics that is\nj PL i PL i rPL\nFirst order case When the language L is of rst order things do not change very much Possibilistic f o formulas are of the type x y x y where x y is a clause with free variables x y First order interpretations are structures w U i m where U is a domain or sets of domains if we have sorts i maps each predicate of arity n to a subset of Un and m maps each object constant to an element of the domain U Then if is a closed f o formula we continue writing w j to denote that is true in the interpretation w Now possibilistic models are possibility distributions on the set of f o in terpretations of L and possibilistic satisfaction and entailment are then just as in the propositional case Completeness results for rst order possibilistic logic are also provided in Dubois et al\nPL FUZZY CONSTANTS\nVARIABLE WEIGHTS\nIn Dubois et al the authors propose an ex tension of possibilistic logic always using formulas in clausal form where in order to deal with fuzzy pred icates and ill known values variable weights and gen eralized fuzzy constants are allowed respectively In\nthe rest of this paper we shall refer to this extension as PLFC\nVariable weights are employed to enable the modelling of statements such as the more x is A or x belongs to A the more certain is p x where A is a fuzzy set This is formalized as for all x p x is true with a necessity of at least A x and represented as\np x A x\nwhere it is assumed as in PL that all variables appear ing in a formula are universally quanti ed When A is imprecise but not fuzzy the interpretation of such a formula is just x A p x So A acts as a exible if it is fuzzy restriction on the universal quanti er\nFuzzy constants are used to model typical fuzzy state ments of the type in Brazil the mean temperature in December is about represented as\nmean temp Brazil december about\nwheremean temp is a classical predicate and about is a generalized constant If about denotes a crisp interval of temperatures then the above ex pression is interpreted as x about such that mean temp Brazil december x is true So fuzzy constants can be seen as exible restrictions on an existential quanti er In general L B is true at least to degree will be represented as L B where L is either a positive or negative literal and B is a fuzzy set\nSpecial attention must therefore be given when read ing a literal such as p B in a possibilistic for mula For instance if B is not fuzzy p B and p B have to read as x B p x and x B p x respectively Moreover a formula like p B r A where A and B are not fuzzy should be interpreted as it is certain that x B y A p x r y that is completely di erent of it is cer tain that x B y A p x r y which would be represented as p x r A B x\nIn order to deal with variable weights and fuzzy con stants the following inference pattern was used\np x q x A x p B r\nq B r min N A j B RR\nwhere N A j B infx X max B x A x is a necessity like measure of how much certain is A given B Details on how this pattern was justi ed can be found in Dubois et al Moreover during the\nNotice that an expression like it is certain that x B y A p x r y cannot be represented in PLFC since it would require the use of Skolem functions which have not yet been treated in this framework\nresolution process variables may disappear in the log ical part of a clause but still appear in its valuation side The following pattern was proposed to deal with this situation\np y f x y\np y maxx X f x y FR\nwhere f x y is a valid valuation in the model involv ing variables x and y\nThe underlying idea in Dubois et al was to propose an extension of Possibilistic logic sticking to classical logic proof procedures as much as possible in particular to refutation by resolution as in standard Possibilistic logic However there was no evaluation there about whether such a proof by refutation method can be supported by a well de ned semantics\nEXTENDING PL SEMANTICS\nWe are concerned in providing PLFC with a sound se mantics extending the one provided for PL So the matter is what has to be modi ed in the standrad PL semantics to support the extension of the logical con structs of PLFC For example consider the previously mentioned predicate\nmean temp Brazil december about\nOur intended interpretation is that about is a fuzzy set describing temperatures around oC in the range from oC to oC and with a particular member ship function about In doing so as far as we can see we are introducing two major changes in the standard semantics of PL i the truth evaluations of predicates and formulas are no longer boolean but many valued the set of truth values be comes the whole unit interval and ii the cer tainty evaluation of formulas in a possibilistic model has to be extended in a suitable manner that is we have to de ne what does N j mean when con tain fuzzy constants\ni From boolean to many valued With re spect to standard Possibilistic logic the main dif ference of truth evaluations is that now for in stance in a particular interpretation the predicate mean temp Brazil december about can be true false but also can take some intermediate truth degree depending on how much the actual tem perature in the interpretation ts with the fuzzy set about For instance consider the interpretation w U i m where U U U U U is a set of countries U is the set of months and U\ni mean temp f Brazil january Brazil december Spain january Spain december g\nand where m not only assigns elements of U to usual object constants but also a fuzzy set i e a membership function to each fuzzy con stant in this case to about Then it seems natural to take as truth degree of the formula mean temp Brazil december about in the inter pretation w the value\nw mean temp Brazil december about m about say\nii Certainty evaluation According to i we as sume from now on that the truth evaluation of PLFC formulas in any interpretation w is a value w Therefore each PLFC formula does not induce anymore a crisp set of interpretations but a fuzzy set of interpretations de ning w w for any w Hence if we want to continue measuring the un certainty induced on a PLFC formula by a possibil ity distribution on the set of interpretations we have to consider some extension for fuzzy sets of interpre tations of the standard notion of necessity measure The basic question is given a belief state modelled by a possibility distribution how to establish the pos sibilistic semantics of statements of the type\nA is certain\nwhere A is a fuzzy set We want to de ne a measure N j extension of the one previously introduced for classical sets in such a way that a possibility dis tribution supports the statement i N A j This question has already been tackled by Dubois and Prade see f i Dubois et al where they pro pose to use this index\nN A j inf w w A w\nwhere is the reciprocal of G odel many valued impli cation de ned as x y if x y x y x otherwise But the bad news about this candidate se mantics is that proof by refutation using the resolu tion rule of the previous section is not sound even though the resolution rule itself can be proved to be sound Let us consider the following PLFC clauses\nAi mean temp Brazil december i\ni where and are trapezoidal fuzzy sets of temperatures de ned as and It is easy to check that inft t t thus A cannot be a logical consequence of A if On the other hand by refutation using the resolution\nWe use the representation of a trapezoidal fuzzy set as t t t t where the interval t t is the support and the interval t t is the core\nrule RR introduced in the previous section we get that f A A x x g where A x stands for mean temp Brazil december x and N j inft max t t\nHowever there is an alternative notion of necessity of fuzzy event which is commonly used in Possibility Theory as a measure of pattern matching Dubois and Prade which is to de ne\nN A j inf w max w A w\nThis de nition also extends the standard notion of ne cessity degree when A is crisp and we haveN A j only when every plausible interpretation w makes A totally true A w Now the condition N A j becomes equivalent to the inequality\nw max A w\nfor all w where A denotes the cut of A i e A fw j A w g We will show later that using this semantics a sound refutation based proof procedure can be de ned Moreover there is a nice axiomatization for the above de ned necessity measure for fuzzy sets Namely let be a set and let N be a measure on the set of fuzzy sets of Consider the following postulates\nN N N N N N A B min N A N B N i IAi inf i I N Ai N N A max N A if A is crisp\nwhere A B w min A w B w for all w and A denotes the fuzzy set de ned by the mem bership function A w max A w for all w\nTheorem If N satis es the above postulates then there exists such that for all fuzzy subset A of N A infw max w A w\nFORMALIZING PLFC\nAs already pointed out in general our PLFC formulas will be pairs of the form x f y where x re spec y denotes a set of variables xi respec yj for instance p A x q y min B y C y The left hand side of the pair x is a disjunction of lit erals possibly with free variables x and possibly with fuzzy constants The right hand side f y y x consists of a valuation function de ned for a superset of the free variables in the left hand side denoting a variable lower bound for the necessity value of the formula of the left hand side\nIn the next subsection we describe the language and semantics of the formulas appearing in the left hand side We shall refer to them as base formulas and their language base language denoted as PLFC This is needed in the rest of the section where we de ne a possibilistic semantics of PLFC clauses rst with con stant weight and later with variable weight\nTHE BASE LANGUAGE PLFC Semantics\nThe basic components of the language PLFC are sorts of variables we will distinguish a basic sort\nfrom its corresponding fuzzy extended sort f see below a type is a tuple of sorts\na set X of object variables a set C of object con stants and a set FC of fuzzy constants each hav ing its sort furthermore a set FCcuts of imprecise constants corresponding to the cuts of the fuzzy constants of FC if A FC then A FCcuts for any\na set Pred of regular predicates each one having a type\nconnectives and Atomic formulas have the form p x y where p is a predicate from Pred x y are variables object or fuzzy constants and the sorts of x y correspond to the type of p Literals are of the form p x y or p x y where p is a predicate from Pred Finally Clauses are disjunctions of literals either positive or negative Free variables in a clause are implicitly uni versally quanti ed For the sake of simplicity func tions are not dealt in the present framework\nNext we de ne the semantics of PLFC which due to the presence of fuzzy constants is many valued in stead of boolean two valued\nDe nition Interpretations An interpretation w U i m maps each basic sort into a non empty domain U\nand each extended sort f into the set F U of fuzzy sets of U\na predicate p of type k f k f n into a crisp relation i p U U n an object constant c of sort into a value m c U a fuzzy constant A of sort f into a nor malized fuzzy set of m A F U and a cut A into the cut of m A We will denote by m the membership function of m The value m c is also represented by fuzzy set given by m c m c m c u u U u m c\nDe nition Truth evaluation An evaluation of variables is a mapping e associating an element e x\nU to each variable x of sort or f We de ne by cases the truth value of a clause under an interpreta tion w U i m and an evaluation of variables e we p x c sup u v i p min e x u m c v we p x c sup u v i p min e x u m c v we max we we Finally the truth value of a clause under an interpre tation w is de ned as w infe we\nIt is clear that we may take any intermediate value between and as soon as contains some fuzzy constant Moreover notice that the negation in this semantics is not truth functional\nExample Let price be a binary predicate of type f let prod prod prod be constants of type and let about be a constant of type f Further let w U i m be an interpretation such that\nU U fpotatoes apples saladg U ptas i price f potatoes apples salad g m prod potatoes m prod apples m prod salad m x x for any x m about\nNow consider the ground atom price prod about The truth evaluations in w of the corresponding pos itive and negative literals are\nw price prod about sup u v i price min m prod u m about v min m prod potatoes\nw price prod about sup u v i price min m prod u m about v supx min m about x\nPOSSIBILISTIC SEMANTICS FOR PLFC Clauses with Constant Weights\nLet us consider PLFC clauses of the form where Assume that contains fuzzy constants for instance take to be p A where A is a fuzzy con stant In order to measure the certainty of p A in a possibilistic model we need to assume that A has a xed interpretation in terms of its membership func tion otherwise we would not be able to compute its necessity degree Therefore when de ning the possi bilistic models as possibility distributions over inter pretations we cannot take into account any possible interpretation but only those which share a common and particular interpretation of the fuzzy constants and hence they also have to share the domain This leads us to the following notion of context\nDe nition Context Let U be a domain and let m be an interpretation of object constants over U or over U in the case of fuzzy constants We further assume that U and m are such that m interprets each object non fuzzy constant into a di erent element of the domain U We de ne the context determined by U and m denoted U m as the set\nU m fw j w U i m g\nNow we are ready to introduce the notion of possibilis tic satisfaction in a context\nDe nition Possibilistic satisfaction Given a context U m and a possibility distribution U m we de ne\nj U mPLFC i N j\nwhere the extended necessity measure is de ned as\nN j inf w U m max w w\nWhen clear from the context the subscript and super script of j U mPLFC will be dropped\nExample Example contd Consider the context U m where U and m are as in Example consider the following predicate interpretation mappings\ni price f potatoes apples salad g i price f potatoes apples salad g i price f potatoes apples salad g\nand denote w U i m w U i m w U i m Finally consider the following possibil ity distribution on the context U m w w w and w otherwise Let us now compute how much makes price prod about certain Remember that m about and thus we have\nw price prod about m about w price prod about m about w price prod about m about\nThen N price prod about j infw U m max w w price prod about min\nTherefore for instance in the current context j price prod about but j price prod about\nSome very interesting and remarkable consequences of the above de nition of possibilistic satisfaction are the following ones\nProposition In any context U m under general continuity conditions of the interpretation of fuzzy constants it holds that\ni j p A i j p A ii j p A B i j p A B iii j p A q B i j p A q B\nwhere p and q can be positive or negative literals and A B denote the imprecise constants correspond ing to the cuts of the fuzzy constants A and B\nThese properties have important consequences since it means that in PLFC with only fuzzy constants we can in a way forget about fuzzy constants as such and focus only on imprecise but crisp constants\nPOSSIBILISTIC SEMANTICS FOR PLFC Clauses with Variable Weights\nPLFC clauses with variable weight see Section are of the general form\nx f y\nwhere x is a PLFC clause with free variables x and f y denotes a function with values on depending on a set of variables y y x in the sense that it becomes computable in a given context as soon as the variables y are instantiated As an example consider the general PLFC clause\np A x q y min B x C y\nwhere A B and C are fuzzy constants But to be meaningful rst of all such a PLFC clause has to be understood under a particular context U m wherem provides meaning to the fuzzy constants by assigning them membership functions m A m B m C Sec ond as already noted free variables are assumed to be universally quanti ed Thus we shall understand the above PLFC clause as the collection of instantiated clauses with constant weight\nf p A c q d min B c C d gc d\nwhere c d vary on the set of object constants of the corresponding type inducing on possibilistic models the set of constraints\nN p A c q d j min B c C d\nIt refers to the assumption thatm interprets fuzzy con stants into left continuous membership functions This is the case for instance when using trapezoidal membership functions and their cuts\nFor the sake of a simpler notation and since a context U m will always be assumed we will simply write for instance B c C d instead of m B m c m C m d\nTherefore valuation functions f y will be basically ei ther constant values or membership functions of fuzzy sets or max min combinations of them or necessity measures on them We will refer to them as valid val uation functions\nDe nition Given a context U m and a possibil ity distribution U m we de ne for each universally quanti ed clause x A x\nj U mPLFC x A x i\nfor each object constant c j U mPLFC c A c\nStandard possibilistic clauses x i e with a constant weight can be considered as a special kind of variable weight clauses if we establish the convention of considering as a fuzzy set with constant member ship function m u for all u U\nProposition In any context U m under general continuity conditions of the interpretation of fuzzy constants it holds that\ni The clause p A x min B x is semantically equivalent to p A min B x x min B x\nii The clause p A r x min B x is se mantically equivalent to p A min B x r x min B x\niii If j p A x min B x then j p A x min B x\nRESOLUTION AND\nREFUTATION IN PLFC\nThe notion of possibilistic entailment in PLFC is de ned as in PL Let K be a set of possibilistic clauses K f i fi j i ng We say that K entails a possibilistic clause f in a context U m written\nK j U m PLFC f\nif for each possibility distribution on U m j f whenever j i fi for all i n\nFrom now on we shall assume a particular context U m to be given and thus the notion of soundness will be relative to the context Furthermore we shall assume that U m provides interpretations of fuzzy constants ful lling the previously mentioned general continuity conditions\nThe fusion rule FR stated in Section is obviously sound with respect of this notion of entailment how ever this is not the case of the resolution like rule RR Instead it can be shown that in PLFC the following General resolution rule holds\np x b y x y min A x B y p C z r z r min D z E r\nC r b r r GR\nwhere r min B r E r D b N Aj C min D b E r\nTheorem Soundness of GR The general reso lution rule GR is sound with respect to the above de ned possibilistic entailment\nIt is easy to see that GR rule recovers PL resolution rule Res when fuzzy constants and variable weights are not present A couple of particular interesting cases of the GR rule are\np x x min A x p B B min N A j B\nGR\np x min A x p y z min C y D z\nz min A x C x D z GR\nNotice that rule GR is the analog of the resolu tion rule RR of Section but di ers from it in the term N A j B which in RR was N A j B On the other hand if we apply the fusion rule FR to the resolvent of GR what we get is just z min Pos A j C D z where Pos A j C supxmin A x C x\nOne of the main advantages of the present semantics for PLFC is that provides a sound refutation mecha nism based on the following properties"}, {"heading": "Theorem Refutation", "text": "i K f p x A x g j i K j p A\nii If A is an imprecise non fuzzy constant K f p A g j i K j p x min A x\niii If K f p A g j then K j p x min A x where A denotes the support of A i e A c if A c otherwise\niv If K f p x B A x g j then K j p A x min B x\nv If K f p x A x q B g j then K j p A q x min B x\nThese soundness results will allow us to propose in the next section a refutation based proof procedure check ing whether a knowledge base K of PLFC clauses en tails a given clause f Since the complete spec i cation of the required negation of a general query clause would be cumbersome we just describe below four particular but illustrative cases Namely given a\nthreshold if we want to check whether the PLFC clauses\ni p A ii p x min B x iii p A x min B x iv p A x q y B min C x D y\nare derivable from a knowledge base K we have to add respectively to K the following PLFC clauses\ni p x A x ii p B iii p x B A x iv f p x C A x q D x B x g\nNow Theorem guarantees that if the augmented K with i resp with ii iii iv derives then i resp ii iii iv is a logical consequence of K However nothing is said about the converse\nAUTOMATED DEDUCTION\nIn this section we de ne an automated deduction method for PLFC based on refutation through the res olution rule GR of last section the fusion rule FR al ready proposed in Dubois et al and introduced in Section and a new generalized merging rule de scribed bellow We then need an algorithm that let us know when two literals p and p can be resolved Moreover we need an algorithm that automatically computes the set of substitutions that must be ap plied on the resolvent clause But in this framework we cannot borrow the uni cation concept used in clas sical logic Let us consider one illustrative example For instance from\ns p A and s p A\nwhich if A is not fuzzy are interpreted resp as\nx A p x x A p x\nwe can infer i A is a precise constant Then the substitution algorithm for p A and p A must fail unless A is a precise constant even though obviously p A p A for any substitution Therefore from now on we will refer ourselves to the most general sub stitution of two literals in a resolution step or mgs for short The rst part of this section is about the for malization and computation of the mgs and the second describes the proof procedure by refutation\nMOST GENERAL SUBSTITUTION\nIn the following we formally de ne the mgs of two lit erals we describe how it must be applied to a PLFC clause and we give an algorithm for its automatic com putation\nDe nition substitution A substitution term of a variable is either a variable a precise constant or an imprecise non fuzzy constant A substitution is a mapping from variables to substitution terms and is written as fx t xn tng where the variables x xn are di erent and xi ti for i n\nSubstitutions operate on expressions By an expres sion we mean a term or a possibilistic clause with a constant or a variable weight For an expression E and a substitution E stands for the result of applying to E which is obtained by simultaneously replacing each occurrence in E of a variable from the domain of by the corresponding substitution term After ap plying a substitution to a possibilistic clause we can obtain in the valuation side expressions like f B or f B Bn being f and f valid valuation func tions in the model and B B Bn imprecise non fuzzy constants Then f B is computed as N f j B infxmax B x f x and f B Bn as N f j min B Bn infx xn max B x Bn xn f x xn\nSubstitutions can be composed Given two substitu tions fx t xn tng fy s ym smg their composition is de ned by removing from the set fx t xn tn y s ym smg those pairs xi ti for which xi ti and those pairs yi si for which yi fx xng We say that a substitution is more general than a substitution if for some substitution we have\nThe next algorithm takes two PLFC literals and pro duces their most general substitution if they can be resolved otherwise reports an error message We will follow the presentation of Apt Apt based upon Herbrand!s original algorithm rst presented by Martelli and Montanari Martelli and Montanari which deals with solutions of nite sets of term equations\nAlgorithm most general substitution\nInput Two literals with predicate symbol p of arity n of the form p s sn and p t tn respectively and such that they do not have any variable in com mon\nOutput The mgs if they can be resolved and oth erwise an error message\nInitialization From the pair of literals p s sn and p t tn we construct a set of substitutions S of the form fs t sn tng\nNotice that fuzzy constants are not substitution terms This is due to Proposition and which safely allow us to focus only on crisp constants\nMethod Choose any substitution fsi tig and perform the associated action until either S remains unchanged or the algorithm fails\nIf si and ti are object constants then if x si x ti x and si ti are precise constants then delete the substitution fsi tig from S\notherwise fail\nIf si is an object constant and ti is a variable then replace fsi tig by fti sig in S If si is a variable then if si ti then delete the substitution fsi tig from S\nelse if si has another occurrence in S then\nif si appears in ti then fail otherwise perform the substitution fsi tig in every other term in S\nFinal treatment If fs t s k t k g is the resulting set of substitutions then fs t s\nk t kg\nExample Consider the following PLFC clauses\ns p x b x min A x s p C y min D y\nBy Proposition s is equivalent to\ns ! p C f y y f y\nwhere f y min D y Hence the output of the algorithm for p x b and p C f y y is the mgs fx C f b y bg and nally applying to pre resolvent of s and s\ns x min A x D y\nwe get\ns ! C f b min A C f b D b\nwhere A C f b N A j C f b and D b N D j b D b Note that by Proposition s ! is equivalent to C min A C f b D b which is exactly the resolvent of s and s when ap plying the GR rule\nBefore developing the refutation procedure we stress that in PLFC an extension of the PL fusion rule see Section holds Let us rst introduce two new de nitions about substitutions\nDe nition variant A substitution of the form fx t xn tng is called a renaming if t tn are di erent variables Let E x f x and E y f y be two PLFC formulas We say that E is a variant of E i exists a renaming such that no variable of E omitted in the domain of ap pears in the range of and x y\nThe following Generalized Merging Rule is an exten sion of the one proposed in Sandri and Godo\nand it corresponds to the following pattern\nx f x y f y y max f x f y GM\nwhere is a renaming such that x f x is a vari ant of y f y and f x and f y are valid val uations functions It can be proved that this rule is sound but we can show more"}, {"heading": "Proposition", "text": ""}, {"heading": "If is a renaming such that x f x is a vari ant of y f y then the set of PLFC clauses f x f x y f y g is semantically equiva", "text": "lent to the PLFC clause y max f x f y\nThe usefulness of this rule can be veri ed by means of a simple example Let A f g B f g and C f g Let us suppose we have\ns p x A x s p y B y s p C\nResolving s and s yields which is the same result we obtain when we resolve s and s There fore without the use of the merging rule we only obtain as nal result However s is a vari ant of s and thus if s and s are fused together we obtain p y f y with f y max A y B y which resolved with s nally yields f C where f C N max A B j C infymax C y A y B y\nREFUTATION PROCEDURE\nThe proof procedure implements a proof by refuta tion through the resolution rule GR by constructing the most general substitution of two literals in every resolution step applying if necessary the fusion rule FR to the resolvent clause and nally merging vari ant clauses through the merging rule MR Let K be a knowledge base formed by PLFC clauses a PLFC clause and a threshold In order to verify if K en tails with a necessity of at least we apply the proof procedure described next\nfunction RefutationProcedure K SetPLFCclauses\nPLFCclause NecessityDegree boolean\nvar RL SetPLFCliterals set of resolved literals\nK K Negation K Fusion K K Threshold K K Merging K K Equivalent K RL return ProofProcedure K RL\nend RefutationProcedure\nwhere function Negation returns the set of clauses ob tained by negating the clause as stated in Theo\nrem function Fusion applies the fusion rule FR to those clauses of K such that some variable appear in the valuation side but not in the base formula func tion Threshold eliminates from K the clauses such that the valuation function cannot be evaluated to a value function Merging applies the gen eralized merging rule GM over the knowledge base and nally function Equivalent transforms following Proposition and all fuzzy constants present in base formulas of K into imprecise non fuzzy constants\nDuring the refutation process the GM rule must be applied after every resolution step see example in last subsection Therefore the proof procedure cannot be oriented to a resolvent clause and thus the search space consists of all possible orderings of the literals in the knowledge base Moreover for every resolution step the proof procedure is based on chronological back tracking and the search strategy is depth rst\nfunction ProofProcedure K SetPLFCclauses\nNecessityDegree RL SetPLFCliterals boolean\nvariables\nC C C PLFCclause L L PLFCliteral\nmgs\nRL SetPLFCliterals K SetPLFCclauses\nend variables if K and then return true\nelse\nfor each clause C K do\nfor each literal L C such that L RL do\nassume that C has the general form L f where\nf is a valid valuation in the model\nfor each clause C K do\nfor each literal L C do\nassume that C has the general form L f where\nf is a valid valuation in the model\nif mgs L L and fail then\nif min f f then\neven some of the variables in f or f have not been instantiated the expression min f f fails as soon as f or f cannot be evaluated to a value\nC Fusion r min f f K Merging K fCg RL RL fL g if ProofProcedure K RL then\nreturn true\nend if\nend for C return false\nend else end ProofProcedure\nwhere the function Fusion r applies if necessary the FR rule to the resolvent clause of C and C\nProposition Given a particular context U m the notion of proof in PLFC by refutation using the GR FR and GM rules written rPLFC is sound wrt the PLFC semantics that is if rPLFC then j PLFC\nFUTURE WORK\nFuture work will be addressed in three main directions First the extension of the base language to allow com putable functions needed f i in PLFC for model ing temporal resoning Sandri and Godo Sec ond we aim at extending the current inference system which is obviously not complete that would allow us to have a sound and complete entailment in PLFC Actually the current refutation mechanism for clauses with variable weight does not allow for completeness And the last one concerns the time complexity of the proof procedure As we have stated the algorithm ex plores all possible resolvents from the knowledge base So it would be interesting to nd some resolution re nement in order to reduce the branching factor for the search tree In particular it would be nice to check for subsumed literals in a PLFC clause"}, {"heading": "Alsinet et al T Alsinet L Godo and S San", "text": "dri On the semantics and automated deduction of PLFC IIIA Research Report Available from http www iiia csic es Publications Reports"}, {"heading": "Apt K R Apt Logic programming In Jan Van", "text": "Leeuwen editor Handbook of Theoretical Computer Science volume B chapter Elsevier"}, {"heading": "Dubois et al D Dubois J Lang and H Prade", "text": "Possibilistic logic In D M Gabay et al editors Hand book of Logic in Arti cial Intelligence and Logic Pro gramming Vol Oxford U Press"}, {"heading": "Dubois and Prade D Dubois and H Prade Possi", "text": "bility Theory an approach to computerized process ing of uncertainty Plenum Press New York"}, {"heading": "Dubois et al D Dubois H Prade and S San", "text": "dri Possibilistic logic with fuzzy constants and fuzzy quanti ers In F Arcelli and T P Martin eds Logic Programming and Soft Computing Wiley"}, {"heading": "Martelli and Montanari A Martelli and U Monta", "text": "nari An e cient uni cation algorithm ACM Trans on Programming Languages Systems"}, {"heading": "Mukaidono et al M Mukaidono Z Shen and", "text": "L Ding Fundamentals of fuzzy prolog International Journal of Aproximate Reasoning"}, {"heading": "Sandri and Godo S Sandri and L Godo Treat", "text": "ment of temporal information in possibilistic logic with fuzzy constants To appear in Proc IFSA"}], "references": [], "referenceMentions": [], "year": 2011, "abstractText": "inconsistent Recently a syntactical extension of rst order Possibilistic logic called PLFC dealing with fuzzy constants and fuzzily re stricted quanti ers has been proposed In this paper we present steps towards both the formalization of PLFC itself and an auto mated deduction system for it by i provid ing a formal semantics ii de ning a sound resolution style calculus by refutation and iii describing a rst order proof procedure for PLFC clauses based on ii and on a novel notion of most general substitution of two lit erals in a resolution step", "creator": "dvipsk 5.58f Copyright 1986, 1994 Radical Eye Software"}}}