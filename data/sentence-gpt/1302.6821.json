{"id": "1302.6821", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "27-Feb-2013", "title": "The Automated Mapping of Plans for Plan Recognition", "abstract": "To coordinate with other agents in its environment, an agent needs models of what the other agents are trying to do. When communication is impossible or expensive, this information must be acquired indirectly via plan recognition. Typical approaches to plan recognition start with a specification of the possible plans the other agents may be following, and develop special techniques for discriminating among the possibilities. Perhaps more desirable would be a uniform procedure for mapping plans to general structures supporting inference based on uncertain and incomplete observations. In this paper, we describe a set of methods for converting plans represented in a flexible procedural language to observation models represented as probabilistic belief networks. We show that if an agent cannot correctly distinguish between a plan that would appear to be true and a plan that would appear to be false, the plan must be able to recognize the correct plan by the same principle. To accomplish this, we show that a plan of the same model can identify and recognize possible solutions to a particular problem that can be found to be false. This method can include the following rules:\n\n\nThe problem is whether the problem satisfies all the conditions described. In theory, the solution must satisfy all the conditions defined in a set of rules. It is important to note that the problems may be considered as problems without being directly observed.\nWe assume that the solution must be possible even if the problems are not clearly explained. If a plan that satisfies all the conditions has a very good idea of how the problem solves, we can easily identify a solution by examining the list of possible solutions in the list of possible solutions, so that it may be possible to identify a problem that will not satisfy all the conditions described.\nThe problem is whether the solution satisfies all the conditions defined in a set of rules. If a plan that satisfies all the conditions is correct, the plan must be able to recognize and recognize all the conditions defined in a set of rules. In this way, we show that if the problem satisfies all the conditions defined in a set of rules, we can identify a solution by using the following rules.\nWe can identify and infer that the problem can not be simply solved by the same principle. For example, if a Plan that satisfies all the conditions described in a set of rules has a very good idea of how to recognize and recognize possible solutions to a particular problem, we can identify the problem by applying this rule. To perform this task, we can use the following rules:\nThe problem is whether the problem satisfies all the conditions defined in a set of rules. If the problem satisfies all the conditions", "histories": [["v1", "Wed, 27 Feb 2013 14:17:25 GMT  (969kb)", "http://arxiv.org/abs/1302.6821v1", "Appears in Proceedings of the Tenth Conference on Uncertainty in Artificial Intelligence (UAI1994)"]], "COMMENTS": "Appears in Proceedings of the Tenth Conference on Uncertainty in Artificial Intelligence (UAI1994)", "reviews": [], "SUBJECTS": "cs.AI", "authors": ["marcus j huber", "edmund h durfee", "michael p wellman"], "accepted": false, "id": "1302.6821"}, "pdf": {"name": "1302.6821.pdf", "metadata": {"source": "CRF", "title": "The Automated Mapping of Plans for Plan Recognition*", "authors": ["Edmund H. Durfee", "Michael P. Wellman"], "emails": ["@engin.umich.edu"], "sections": null, "references": [{"title": "Construction of belief and decision networks", "author": ["John Breese"], "venue": "Computational Intelli\u00ad gence,", "citeRegEx": "Breese.,? \\Q1992\\E", "shortCiteRegEx": "Breese.", "year": 1992}, {"title": "An algorithm for probabilis\u00ad tic planning", "author": ["Nicholas Kushmerick", "Steve Hanks", "Daniel Weld"], "venue": "Technical Report 93-06-3,", "citeRegEx": "Kushmerick et al\\.,? \\Q1993\\E", "shortCiteRegEx": "Kushmerick et al\\.", "year": 1993}, {"title": "Models of plans to support communication: An initial report", "author": ["K. Lochbaum", "B. Grosz", "C. Sidner"], "venue": "In Proceedings Eighth Na\u00ad tional Conference on Artificial Intelligence,", "citeRegEx": "Lochbaum et al\\.,? \\Q1990\\E", "shortCiteRegEx": "Lochbaum et al\\.", "year": 1990}, {"title": "Probabilistic Rea\u00ad soning in Expert Systems", "author": ["Richard E. Neapolitan"], "venue": null, "citeRegEx": "Neapolitan.,? \\Q1990\\E", "shortCiteRegEx": "Neapolitan.", "year": 1990}, {"title": "Probabilistic Reasoning in In\u00ad telligent Systems: Networks of Plausible In\u00ad ference", "author": ["Judea Pearl"], "venue": null, "citeRegEx": "Pearl.,? \\Q1988\\E", "shortCiteRegEx": "Pearl.", "year": 1988}, {"title": "From knowledge bases to decision models", "author": ["Michael P. Wellman", "John S. Breese", "Robert P. Goldman"], "venue": "Knowledge Engineering Review,", "citeRegEx": "Wellman et al\\.,? \\Q1992\\E", "shortCiteRegEx": "Wellman et al\\.", "year": 1992}], "referenceMentions": [], "year": 2011, "abstractText": "To coordinate with other agents in its envi\u00ad ronment, an agent needs models of what the other agents are trying to do. When com\u00ad munication is impossible or expensive, this information must be acquired indirectly via plan recognition. Typical approaches to plan recognition start with a specification of the possible plans the other agents may be follow\u00ad ing, and develop special techniques for dis\u00ad criminating among the possibilities. Perhaps more desirable would be a uniform procedure for mapping plans to general structures sup\u00ad porting inference based on uncertain and in\u00ad complete observations. In this paper, we de\u00ad scribe a set of methods for converting plans represented in a flexible procedural language to observation models represented as proba\u00ad bilistic belief networks.", "creator": "pdftk 1.41 - www.pdftk.com"}}}