{"id": "1306.5601", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "24-Jun-2013", "title": "A Decomposition of the Max-min Fair Curriculum-based Course Timetabling Problem", "abstract": "We propose a decomposition of the max-min fair curriculum-based course time-tabling (MMF-CB-CTT) problem. The decomposition models the room assignment subproblem as a generalized lexicographic bottleneck optimization problem (GLBOP). We show that the GLBOP can be solved in polynomial time if the corresponding sum optimization problem can be solved in polynomial time as well. Finally, the problem is solved in polynomial time as an optimization problem: by decomposition we can compute the mean distribution of the mean of the total mean distribution of the mean distribution of the mean distribution of the mean distribution of the mean distribution of the mean distribution of the mean distribution of the mean distribution of the mean distribution of the mean distribution of the mean distribution of the mean distribution of the mean distribution of the mean distribution of the mean distribution of the mean distribution of the mean distribution of the mean distribution of the mean distribution of the mean distribution of the mean distribution of the mean distribution of the mean distribution of the mean distribution of the mean distribution of the mean distribution of the mean distribution of the mean distribution of the mean distribution of the mean distribution of the mean distribution of the mean distribution of the mean distribution of the mean distribution of the mean distribution of the mean distribution of the mean distribution of the mean distribution of the mean distribution of the mean distribution of the mean distribution of the mean distribution of the mean distribution of the mean distribution of the mean distribution of the mean distribution of the mean distribution of the mean distribution of the mean distribution of the mean distribution of the mean distribution of the mean distribution of the mean distribution of the mean distribution of the mean distribution of the mean distribution of the mean distribution of the mean distribution of the mean distribution of the mean distribution of the mean distribution of the mean distribution of the mean distribution of the mean distribution of the mean distribution of the mean distribution of the mean distribution of the mean distribution of the mean distribution of the mean distribution of the mean distribution of the mean distribution of the mean distribution of the mean distribution of the mean distribution of the mean distribution of the mean distribution of the mean distribution of the mean distribution of the mean distribution of the mean distribution of the mean distribution of the mean distribution of the mean distribution of the mean distribution of the mean distribution of the mean distribution of the mean distribution of the mean distribution of the mean distribution of the mean distribution of the mean distribution of the mean distribution of the mean distribution of the mean distribution of the mean distribution of the mean distribution of the mean distribution of the mean distribution of the", "histories": [["v1", "Mon, 24 Jun 2013 12:54:50 GMT  (19kb)", "https://arxiv.org/abs/1306.5601v1", "16 pages, accepted for publication at the Multidisciplinary International Scheduling Conference 2013 (MISTA 2013)"], ["v2", "Sun, 25 Aug 2013 13:33:24 GMT  (20kb)", "http://arxiv.org/abs/1306.5601v2", "revised version (fixed problems in the notation and general improvements); original paper: 16 pages, accepted for publication at the Multidisciplinary International Scheduling Conference 2013 (MISTA 2013)"]], "COMMENTS": "16 pages, accepted for publication at the Multidisciplinary International Scheduling Conference 2013 (MISTA 2013)", "reviews": [], "SUBJECTS": "cs.AI", "authors": ["moritz m\\\"uhlenthaler", "rolf wanka"], "accepted": false, "id": "1306.5601"}, "pdf": {"name": "1306.5601.pdf", "metadata": {"source": "CRF", "title": "The Impact of Solving Subproblems to Optimality", "authors": ["Moritz M\u00fchlenthaler", "Rolf Wanka"], "emails": ["moritz.muehlenthaler@cs.fau.de", "rolf.wanka@cs.fau.de"], "sections": [{"heading": null, "text": "ar X\niv :1\n30 6.\n56 01\nv2 [\ncs .A\nI] 2"}, {"heading": "1 Introduction", "text": "We consider a decomposition approach to a variant of the curriculum-based course timetabling (CB-CTT) problem. The CB-CTT problem has been proposed in the context of the timetabling competition ITC2007 [21] and has since then received a great deal of attention in the timetabling community. The CB-CTT problem models the task of assigning timeslots and rooms to courses in\n\u2217Research funded in parts by the School of Engineering of the University of Erlangen-Nuremberg.\nthe setting of a university, and includes a number of requirements that typically arise in real-world course timetabling applications. For instance, courses occurring in the same curriculum must not be taught at the same time and courses should be assigned to rooms with a sufficient number of seats. The combinatorial structure of the problem is quite complex and has been investigated, for example, using polyhedral studies [8, 17]. Due to the structural complexity, solving instances with a large number of courses and curricula is typically out of reach for exact methods. However, a wealth of (meta-)heuristic methods have been applied successfully to generate high quality timetables, even for large CB-CTT instances, see for example [1, 19, 23]. In this work, our focus is the max-min fair curriculum-based course timetabling (MMF-CB-CTT) introduced in [22], which replaces the original optimization objective by a lexicographic bottleneck objective. The goal of the MMF-CB-CTT problem formulation is to favor fair timetables and thus improve the overall stakeholder satisfaction. The underlying fairness concept is (lexicographic) max-min fairness.\nIt is a common technique to decompose the CB-CTT problem into subproblems which are easier to handle individually [17, 19]. The usual approach is to perform room and timeslot assignments separately, but other approaches have been explored as well [7]. The CB-CTT problem can be decomposed into a bounded list coloring problem that models the timeslot assignment and, for each timeslot, a linear sum assignment problem (LSAP) for assigning the courses in this timeslot to rooms [8, 17]. Unfortunately, there are dependencies between LSAPs for different timeslots, so an optimal room assignment can only be obtained for a single timeslot, while the rest of the timetable remains fixed. We show that for an analogous decomposition of the MMF-CB-CTT problem, the room assignment subproblem for a single timeslot can also be solved efficiently by modeling it as a generalized lexicographic bottleneck optimization problem (GLBOP), which is a generalization of the lexicographic bottleneck optimization problem (LBOP) from [4]. We show that the GLBOP can be solved efficiently if the corresponding sum optimization problem can be solved efficiently.\nFurthermore, we propose a new measure for the quality of a solution to an optimization problem with a max-min fairness (lexicographic bottleneck) objective such as the MMF-CB-CTT problem. This measure helps to overcome some limitations imposed by the qualitative nature of max-min fairness. We use this measure to determine the average solution quality of a randomized algorithm for the MMF-CB-CTT problem.\nWe evaluate the quality of the timetables produced by the algorithm MAXMINFAIR SA from [22], with and without the new decomposition. In the original algorithm the room assignment subproblem was modeled as an LSAP. However, an optimal solution to the LSAP is not necessarily optimal for corresponding the room assignment subproblem of the MMF-CB-CTT problem. Our experiments indicate that making use of the new decomposition improves the best produced by the algorithm on 18 out of 21 CB-CTT instances from the ITC2007 competition. We use the aforementioned measure to show that the new decomposition yields in an improved average solution quality for 16 out of 21 instances. According to the Wilcoxon rank-sum test (one-sided, significance level 0.01) MAXMINFAIR SA using the new decomposition is significantly better than the original approach on 12 instances.\nThe remainder of this work is organized as follows: In Section 2, we provide relevant background on the CB-CTT and MMF-CB-CTT problem formulations, as well as max-min fairness and the assignment problem. In Section 3, we introduce the GLBOP and the decomposition of\nthe MMF-CB-CTT problem. We propose the measure of the max-min fairness of an allocation in Section 4. Section 5 presents our evaluation of the performance impact of the decomposition for MMF-CB-CTT problems. Section 6 concludes the paper."}, {"heading": "2 Background", "text": "In this section we will provide some relevant background on fair resource allocation, university course timetabling and the assignment problem."}, {"heading": "2.1 Fair Resource Allocation", "text": "Fairness comes into play when scarce resources are distributed over a set of stakeholders with demands. The topic of fairness and how to measure it has received great attention for example in economics, where the distribution of wealth and income is of interest [11]. In computer science, fairness aspects have been studied for example in the design of network communication protocols, in particular in the context of bandwidth allocation and traffic shaping [18, 13]. Fairness aspects have been addressed explicitly for example for various kinds of scheduling problems, including personnel scheduling [29], sports scheduling [27], course scheduling [22] and aircraft scheduling [30]. In the context of resource allocation allocation in general, fairness has been studied in [3, 24]. Approximation algorithms for fair optimization problems have been studied in [15, 16].\nIn the next sections of this work we will deal with a fair variant of a university course timetabling problem from [22] that builds on the notion of max-min fairness. Consider the problem of allocating resources to n stakeholders. A resource allocation induces an allocation vector x = (x1, . . . ,xn), where xi, 1 \u2264 i \u2264 n, corresponds to the amount of resources allocated to stakeholder i. Later on, we will deal with minimization problems almost exclusively, so unless stated otherwise, we assume that we allocate to the stakeholders a cost, penalty, or some similar quantity that is to be minimized. In this contexct, an allocation is max-min fair, if the cost that the worst-off stakeholder has to cover is minimal, and under this condition, the second worst-off stakeholder covers the minimal cost, and so forth. This concept can be formalized as follows: Let ~x denote the sequence containing the entries of the allocation x sorted in non-increasing order. For allocation two vectors x and y, x is at least as fair as y, denoted by x y, if ~x lex ~y, where lex is the usual lexicographic comparison. Now, an allocation x is max-min fair, if x y for all feasible allocations y.\nMax-min fairness enforces an efficient resource usage to some extent, since an improved resource utilization is accepted to the benefit of a stakeholder as long as it is not at the expense of another stakeholder who is worse-off. Hence, a max-min fair allocation is Pareto-optimal. One limitation of max-min fairness is that the concept is purely qualitative, i. e., given two allocations x and y, max-min fairness just determines which of the two is fairer, but not by how much. In order to aid the statistical evaluation of the performance of algorithms for max-min fair resource allocation problems, in Section 4 we will introduce a metric for the difference in quality between two allocation vectors which is compatible with the -relation."}, {"heading": "2.2 Curriculum-based Course Timetabling", "text": "The academic course timetabling problem captures the task of assigning a set of courses to rooms and timeslots in the setting of a university. In Section 3 we will focus on decompositions of two particular variants of the academic course timetabling problem: the curriculum-based course timetabling (CB-CTT) problem from track three of the second international timetabling competition [10], and its max-min fair version, MMF-CB-CTT, proposed in [22]. The CB-CTT formulation has attracted a great deal of interest in the research community and the competition instances are popular benchmarking instances for comparing different algorithms [19, 17, 28]. The MMF-CB-CTT problem differs from the basic CB-CTT formulation only with respect to the objective function. We will now introduce some terminology and state definitions relevant to the later sections of this work.\nA CB-CTT instance consists of a set of courses, a set of curricula, a set of rooms, a set of teachers and a set of days. Each day is divided into a fixed number of timeslots; a day together with a timeslot is referred to as a period. A period together with a room is called a resource. Each course consists of a set of events that need to be scheduled. A course is taught by a teacher and has a fixed number of students attending it. A course can only be taught in certain available periods. Each curriculum is a set of courses, no two of which may be taught in the same period. Each room has a capacity, a maximum number of students it can accommodate. A solution to a CB-CTT instance is a timetable, i. e., an assignment of the courses to the resources subject to a number of hard and soft constraints. A timetable that satisfies all hard constraints is feasible.\nLater on, we will deal exclusively with feasible timetables, so we will not cover the evaluation of hard constraints at all (please refer to [10] a detailed description). However, some understanding of the soft constraint evaluation will be helpful later on, so we will touch on this very briefly. The CB-CTT problem formulation features the following soft constraints:\nS1 RoomCapacity: Each lecture should be assigned to a room of sufficient size.\nS2 MinWorkingDays: The individual lectures of each course should be distributed over a certain minimum number of days.\nS3 IsolatedLectures: For each curriculum, all courses in the curriculum should be scheduled in adjacent periods.\nS4 RoomStability: The lectures of each course should be held in the same room.\nThe violation of a soft constraint results in a \u201cpenalty\u201d for the timetable. The total penalty of a timetable \u03c4 is aggregated by the objective function c which just sums the penalties for the individual soft constraint violations:\nc(\u03c4) = \u2211 1\u2264i\u22644 cSi(\u03c4), (1)\nwhere cS1, . . . ,cS4 are the penalties determined by the soft constraints (S1)\u2013(S4). The relative importance of the different soft constraints is set by a weight factor for each soft constraint. Since the weights will be of no relevance to our arguments later on, we assume that appropriate weighting has been applied within cS1, . . . ,cS4. A detailed specification of the penalty functions can be found in [10].\nDefinition 1 (CB-CTT Problem). Given a CB-CTT instance I, find a feasible timetable \u03c4 such that c(\u03c4) is minimal.\nA max-min fair variant of the CB-CTT problem was defined in [22]. Given a CB-CTT instance with curricula u1, . . . ,uk. The allocation vector of a timetable \u03c4 is given by:\nA(\u03c4) = (c(u1,\u03c4),c(u2,\u03c4), . . . ,c(uk,\u03c4)) , (2)\nwhere c(u j,\u03c4) = \u22111\u2264i\u22644 cSi(u j,\u03c4), i \u2208 {1, . . . ,4}, is the CB-CTT objective function restricted to the events of the courses in curriculum u j, j \u2208 {1, . . . ,k}.\nDefinition 2 (MMF-CB-CTT Problem). Given a CB-CTT instance I, find a feasible timetable \u03c4 such that A(\u03c4) is max-min fair."}, {"heading": "2.3 The Assignment Problem", "text": "The assignment problem is a classical problem in combinatorial optimization which appears in many applications, for example personnel scheduling, job scheduling and object tracking, just to name a few. For a comprehensive overview of the body of research on the assignment problem and the applications see [5, 26]. In CB-CTT problem for example, the assignment problem appears as a subproblem [17, 20]. There exist polynomial-time algorithms for many variants of the assignment problem.\nLet A = B = {1, . . . ,n}, for some n \u2208 N. An assignment of the elements of A to the elements of B is a bijection \u03c3 : A \u2192 B. Typically, assignment problems are optimization problems, i. e., among all bijections from A to B, we are looking for one that is optimal with respect to a certain objective function. In the context of (fair) curriculum-based course timetabling, we are in particular interested in two variants of the assignment problem, namely the linear sum assignment problem (LSAP) and the lexicographic bottleneck assignment problem (LBAP).\nDefinition 3 (LSAP). Given a cost function c : A\u00d7B \u2192 N, find a bijection \u03c3 : A \u2192 B such that \u2211ni=1 c(i,\u03c3(i)) is minimal.\nThere exist various algorithms for solving LSAPs efficiently, including the well-known Hungarian algorithm [25, p. 248ff] and network flow algorithms [12]. In the following, let TLSAP(n) be the time complexity of solving an LSAP instance with |A|= |B|= n.\nWhen solving MMF-CB-CTT problems using the decomposition proposed in the next section, the task of finding max-min fair assignments occurs as a subproblem. An assignment \u03c3 : A \u2192 B is called max-min fair, if for any assignment \u03c3 \u2032 : A \u2192 B we have ~c(\u03c3) ~c(\u03c3 \u2032), where ~c(\u03c3) = (c(i,\u03c3(i)))i=1,...,n and is the max-min fair comparison from Section 2.1.\nDefinition 4 (LBAP). Given a cost function c : A\u00d7B \u2192R, find a max-min fair bijection \u03c3 : A\u2192 B.\nA LBAP can be transformed into a LSAP by scaling the cost values appropriately. This results in an exponential blow-up of the cost values, which may be undesirable in practical applications [4]. Alternatively, an LBAP can be reduced to a lexicographic vector assignment, which\nbelongs to the class of algebraic assignment problems [6]. Using this reduction, a given LBAP with a cost function c can be solved in time O(kn3), where k is the number of distinct values attained by c [9]. The reduction is straightforward: For each j \u2208 {1, . . . ,k}, let e j \u2208Nk be the vector whose j-th component is 1 and all other components are 0. The cost function c is replaced by a vector-valued function c\u2032 : A\u00d7B \u2192 Nk such that c\u2032(a,\u03c3(a)) = e j if c(a,\u03c3(a)) is the j-th largest value attained by c. An assignment \u03c3 that yields a lexicographically minimal cost vector \u2211ni=1 c\u2032(i,\u03c3(i)) is an optimal solution to the corresponding LBAP."}, {"heading": "3 Problem Decomposition", "text": "It is a common approach to decompose the CB-CTT problem in a way that room and timeslot assignment is preformed separately, see for example [17, 20]. For courses in a single timeslot, an optimal room assignment can be determined by solving a LSAP instance. In this section, we establish a similar result for the MMF-CB-CTT problem: An optimal room assignment for the courses in a single timeslot can be determined by solving a (generalized) LBOP instance. In the spirit of Benders decomposition approach [2], we further consider decompositions of sum optimization problems into master and subproblems such that the subproblems can be solved efficiently. We derive sufficient conditions under which such a decomposition of a sum optimization problem carries over to its generalized lexicographic bottleneck counterpart.\nIn the following, we consider a generalization of the LBOP in [4]. Let E = {e1, . . . ,em} be the ground set and let S = {S1,S2, . . .} be the set of feasible solutions. We assume that each solution S \u2208 S contains exactly n items from the ground set, that is S \u2286 E and |S| = n. Furthermore, let N \u2282 N0 be a finite set of the natural numbers. The weight function w : S \u2192 M (N) assigns to a feasible solution a weight, that is a finite multiset of the numbers in N. The weight of a solution S \u2208 S is the disjoint union of the individual weights,\nW (S) = \u22c3\n\u00b7 e\u2208S w(e) .\nThe weights of two solutions S1,S2 \u2208 S can be compared by arranging the items in W (S1) and W (S2) in non-increasing order and performing a lexicographic comparison of the sorted sequences. We can essentially the comparison from Section 2.1, but the sorted sequences do not necessarily have the same length. Let Seq(N) be the set of finite sequences on the alphabet N that are arranged in non-increasing order. For two sequences s,s\u2032 \u2208 Seq(N), s lex s\u2032 iff one of the following is true: i) s = s\u2032, ii) s is a prefix of s\u2032, iii) there is a decomposition s = zuv, s\u2032 = zuw such that z is a maximal prefix of s and s\u2032, u,v \u2208 N and u < v. Due to the conceptual similarity, we will use the symbol for the comparison with respect to max-min fairness in the new setting as well. The GLBOP is the following problem:\nmin W (S) s.t. S \u2208 S . (GLBOP)\nNote that the minimum weight is determined according to the comparison . If |w(e)|= 1 for each e \u2208 E then we have a LBOP as defined in [4].\nConsider a weight function of the form W \u2032 : S \u2192N. Then the min-sum optimization problem (SOP) is the following problem:\nmin \u2264 \u2211 e\u2208S W \u2032(e) s.t. S \u2208 S . (SOP)\nLet Tn,m be the time required for solving (SOP).\nTheorem 1. A GLBOP instance can be solved in time O(|N| \u00b7Tn,m).\nProof. Following the vectorial approach of Della Croce et al. in [9], reduce the GLBOP to a lexicographic vector optimization problem (LVOP). Let t = |N| and for 1,\u2264 i \u2264 t, let ti denote the i-th largest item in N. Let the function f : M (N)\u2192 Nt assign to a multiset v of the items N a vector (v1, . . . ,vt) \u2208 Nt such that\nv j = multv(t j), j = 1, . . . , t ,\nwhere multv : N \u2192 N, and for each a \u2208 N, multv(a) is the multiplicity of a in v. Now, we have to solve the following problem:\nmin lex \u2211 e\u2208S f (W (e)) s.t. S \u2208 S . (LVOP)\nWe show that a solution S \u2208 S is an optimal solution to (LVOP) if and only if it is an optimal solution to (GLBOP). Suppose for a contradiction that S \u2208 S is an optimal solution to (LVOP) that is not optimal to (GLBOP). Then there is a solution S\u2032 \u2208 S such that W (S\u2032) \u227a W (S). As a consequence, f (W (S\u2032))\u227alex f (W (S)) by the construction of the cost vectors above. The \u201conly if\u201d part can be shown analogously. This is a contradiction to the optimality of S\u2032. The problem (LVOP) can be solved in time O(t \u00b7Tn,m) because each elementary operation involving the weights is now performed on a vector of length t.\nAs noted by Della Croce et al. in [9], the vectorial approach is essentially cost scaling. The construction of the cost vectors above enables us to naturally handle multisets as cost values. We will see shortly that in the context of the MMF-CB-CTT problem, if an item of the ground set has a weight of cardinality k, then choosing this item to be part of the solution concerns k different stakeholders.\nConsider the following decomposition of the MMF-CB-CTT problem: We isolate, for a single period, the assignment of courses to rooms, from the rest of the problem. So, the task is to find an optimal room assignment for a given period, assuming that the rest of the timetable is fixed. Optimizing the rest of the timetable can be considered the master problem corresponding to the room assignment subproblem for a particular period. The room assignment subproblem of the CB-CTT problem is a LSAP which can be solved efficiently (see Section 2.3). Our goal is to show that the room assignment subproblem of the MMF-CB-CTT problem can also be solved efficiently. In the following, let I be a MMF-CB-CTT instance, where C is the set of courses, R is the set of rooms, P is the set of periods, and U \u2286P(C) are the curricula. By Cp we denote the set of courses scheduled in the period p \u2208 P. Please note that Cp is determined by the solution of the master problem. Furthermore, let Ue = {u \u2208U | e \u2208 u}.\nTheorem 2. The room assignment subproblem of the MMF-CB-CTT problem is a GLBOP.\nProof. We construct a GLBOP that models the room assignment subproblem for a fixed period p. We can assume that |Cp| = |R| since if not, we can add suitables dummy nodes to either Cp or R. Let G = (Cp \u222aR,E) be a complete bipartite graph, where E = {{e,r} | e \u2208C,r \u2208 R}. The ground set of the GLBOP is E and the feasible solutions S are all perfect matchings in G. Assigning a course e \u2208Cp to a room r \u2208 R completes the timetable \u03c4 from the perspective of all curricula in Ue and therefore determines their cost entries c(u,\u03c4) for each u \u2208Ue. We denote the cost entry c(u,\u03c4), which can be determined after the assignment of e to r, by ce\u2192r(u). Thus, the weight w(e,r) of an item {e,r} \u2208 E is the multiset\nw(e,r) = \u22c3\n\u00b7 u\u2208Ue {ce\u2192r(u)} .\nThe costs entries of the curricula that do not contain any course in Cp are not altered and have no influence on the optimality of a particular room assignment. Therefore, the room assignment subproblem of the MMF-CB-CTT problem can be written as:\nmin\n\u22c3\n\u00b7 {e,r}\u2208S w(e,r) s. t. S \u2208 S ,\nwhich is a GLBOP.\nNote that according to the MMF-CB-CTT problem formulation, a course can be assigned to any of the rooms. If desired, room availabilities can be added to the model in a straightforward manner: If a room r is unavailable for a particular course e, then the edge {e,r} in the ground set is assigned a suitably large weight.\nFigure 1 shows an example of a simple room assignment subproblem of the MMF-CB-CTT problem modelled as a GLBOP. There is only a single period p, two courses, C =Cp = {c1,c2}, and two rooms R = {r1,r2}. However, the course e2 is in two curricula and thus determines the cost entries of two stakeholders in the overall allocation vector. The cost on each edge connected to e1 shows the costs generated for each of the two curricula when assigning e2 to r1 or r2. Figures 1b and 1c are LBAP instances that reflect only costs for one of the two curricula of e2. The assignments highlighted are both optimal solutions to the individual LBAPs, but none of them is optimal for the room assignment shown in Figure 1a.\nCorollary 1. For a given period p, the room assignment subproblem can be solved in time O(|U | \u00b7 TLSAP(n)), where n = max{|Cp|, |R|}.\nProof. Problem (3) is an assignment problem, just as the room assignment subproblem of the CB-CTT problem. Only the objective function is different. Hence, combining Theorems 1 and 2 yields the result.\nRemark 1. As noted by Lach and Lu\u0308bbecke in [17], the room stability constraint (S4) introduces dependencies between room assignments in different timeslots, which prevents us from extending the decomposition to more than a single period.\nRemark 2. In the general case, whenever there is a decomposition of (SOP) into a master problem and a subproblem, such that the subproblem can be solved efficiently, then the subproblem of the corresponding max-min fair optimization problem can be solved efficiently if it is a GLBOP. This observation may be useful when turning a problem of the form (SOP) into a LBOP.\nIn Section 5 we will provide experimental evidence that solving the room assignment subproblem to optimality is useful for improving the performance of a heuristic algorithm for the MMF-CB-CTT problem."}, {"heading": "4 Quantifying Max-min Fairness", "text": "When dealing with randomized optimization algorithms, one can employ a wealth of statistical tools to extract meaningful information about algorithms\u2019 absolute and relative performance. These tools include statistical tests such as the Wilcoxon rank-sum test and measures such as the mean quality of the solutions, the standard deviation, the median quality, the quality of the best and worst solutions, and so on. Due to the qualitative nature of max-min fairness, so far only statistical tools based on ranking can be used for evaluating randomized max-min fair optimization algorithms. In this section we propose a novel approach to partially overcome this limitation. Similar to the problem (GLBOP) from the previous section, we consider combinatorial problems such that the cost of a feasible solution is a finite multiset. The main idea is to construct an isomorphism from the cost multisets ordered by \u227a, to an interval of the natural numbers ordered by the usual < relation. Using this isomorphism, we can perform all operations on natural numbers, and retrieve the corresponding cost multiset. This means that if we have a set of allocation vectors, we can determine for example an allocation vector close to the average allocation. Thus, in our experiments in the next section we will be able to compare the average solution quality of two algorithms for the MMF-CB-CTT problems.\nLet k \u2208 N and N = {0, . . . ,k}. Further, let Seqn(N) denote the non-increasing sequences of length n over the alphabet (N,<).\nLemma 1. Let rank : Seqn(N)\u2192N0 be a mapping such that for any s \u2208 Seqn(N), s = x1, . . . ,xn,\nrank(s) = n\n\u2211 i=1\n( n+ xi \u2212 i\nxi \u22121\n)\n. (3)\nThen rank is an isomorphism (Seqn(N),\u227alex)\u2192 (N0,<).\nProof. (Seqn(N),\u227alex) is a linearly ordered set with least element (0, . . . ,0). Since Seqn(N) is linearly ordered by \u227alex, there is a unique number rs for each s \u2208 Seqn(N), which is the cardinality of the set {s\u2032 \u2208 Seqn(N) | s\n\u2032\u227alex s}. Thus, the function mapping each s\u2208 Seqn(N) to rs is a bijective mapping and it is order-preserving as required. It remains to be shown that rank(s) computes rs for all s \u2208 Seqn(N).\nLet s = (x1, . . . ,xn) \u2208 Seqn(N). The value rs can be determined by the following recursion:\nrx1,...,xn = rx2,...,xn + rx1,0,...,0 . (4)\nThis recursion separately counts the non-increasing sequences {s\u2032 \u2208 Seqn(N) | (x1,0, . . . ,0) lex s\u2032 \u227alex s} and {s\u2032 \u2208 Seqn(N) | s\n\u2032 \u227alex (x1,0, . . . ,0)}. The number of sorted sequences of length n over an ordered alphabet of size k is\n(n+k k ) . Thus,\nrx1,0, . . . ,0 \ufe38 \ufe37\ufe37 \ufe38\nlength n\n=\n( n+ x1 \u22121\nx1 \u22121\n)\n.\nIn particular, for s \u2208 Seq1(N) we have rx = ( x\nx\u22121\n) = x. Unfolding the recursion (4) yields (3).\nTherefore, rank(s) computes rs for each s \u2208 Seqn(N).\nThe argument above can be extended to non-increasing sequences of length at most n by choosing as alphabet N\u222a{\u2212\u221e} and constructing from each sequence of length less than n a sequence of length n by padding it with \u2212\u221e. Please note that the alphabet can be any finite totally ordered set (A,<A), since it is isomorphic to {0, . . . ,k} for some k \u2208 N.\nLet Mn(N) denote the finite multisets of cardinality n over a finite alphabet (N,<). Similar to the problem (GLBOP), consider an instance of some combinatorial minimization problem with feasible solutions S and a cost function of the form\nw : S \u2192 Mn(N) .\nLet ~x denote the non-increasing sequence of length n containing the items of x \u2208 Mn(N).\nTheorem 3. The mapping\n\u03c1 : (Mn(N),\u227a)\u2192 (N0,<) \u03c1(x) 7\u2192 rank( ~x) ,\nis an isomorphism.\nProof. Each multiset x \u2208Mn(N) can be represented in a unique way as a non-increasing sequence of length n. Thus, we can apply the isomorphism rank from Lemma 1 to ~x.\nWe establish a similar result for maximization problems. In this context, the fairness of two allocations x,y \u2208Mn(N) can be compared as follows: x is fairer than y, denoted by x \u227amax y, if~y \u227alex ~x, where~x denotes the non-decreasing sequence of the items in x. Let m =max{N}, . . . ,max{N} \u2208 Seqn(N), and let a\u2212b denote the element-wise substraction of two sequences a,b \u2208 Seqn(N). Furthermore, let~x denote the non-decreasing sequence of length n containing the items of x \u2208Mn(N).\nTheorem 4. The mapping\n\u03c1 : (Mn(N),\u227amax)\u2192 (N0,<) \u03c1(x) 7\u2192 rank(m\u2212~x) ,\nis an isomorphism."}, {"heading": "5 Evaluation", "text": "In this section we are going to present experimental evidence for the usefulness decomposition presented in Section 3. We compare the performance of two randomized heuristic algorithms for the MMF-CB-CTT problem, both of which are based on the algorithm MAXMINFAIR SA from [22]. The first algorithm is the one that performed best in [22]. It uses a decomposition of the MMF-CB-CTT problem that is similar to the one presented in this work, but models the room assignment subproblem as LSAP. Thus, we will refer to this algorithm by MMF SA LSAP. The second algorithm, MMF SA GLBOP, uses the MMF-CB-CTT decomposition from Section 3 and thus solves (GLBOP) to obtain an optimal room assignment for a given period. Apart from how the room assignment subproblem is solved, the the two algorithms are identical. We compare both algorithms with respect to the best solutions they produce as well as the average solution quality per instance. In order to determine average results, we use the isomorphism \u03c1 from Theorem 3 as described in the previous section. Our results indicate that the algorithm which solves the GLBOP room assignment subproblem significantly outperforms the other one.\nThe algorithm MAXMINFAIR SA is a variant of simulated annealing (SA) [14] which has been tailored to the MMF-CB-CTT problem. Simulated annealing iteratively generates new candidate solutions and keeps (or accepts) a new solution if it is better. If the new solution is worse, then it is accepted with a certain probability which depends on the temperature \u03d1 . There are three crucial design choices when adapting simulated annealing to a particular problem: The cooling schedule, the acceptance criterion, and the neighborhood structure. In both algorithms under consideration, MMF SA GLBOP and MMF SA LSAP, we use the standard geometric cooling schedule, which lets the temperature decay exponentially from a given \u03d1max to a given \u03d1min. Both algorithms use the acceptance criterion based on the component-wise energy difference, which performed best in a comparison of different acceptance criteria in [22]. Also, both algorithms use\na neighborhood structure based on the well-known Kempe-move. A Kempe-move swaps a subset of the events assigned to two given periods such that the conflict constraints between the events are not violated. The difference between both algorithms is how the room-assignment subproblems are solved after performing a Kempe-move: MMF SA LSAP solves two LSAPs in order to assign rooms efficiently, while MMF SA GLBOP solves two GLBOPs. Thus, the second room assignment performed by MMF SA GLBOP is optimal assuming that the rest of the timetable is fixed. Our evaluation shows that this is beneficial for the overall algorithm performance.\nIn order to compare the two algorithms, we performed 50 independent runs for each algorithm on the 21 CB-CTT instances from track three of the timetabling competition ITC2007 [10]. In each run, 106 iterations of the simulated annealing procedure were performed. We did not tweak the temperature-related parameters of the algorithms extensively, but determined experimentally that \u03d1max = 5 and \u03d1min = 0.01, as suggested in [22] work well. Table 1 shows the best allocation vectors obtained by MMF SA LSAP and MMF SA GLBOP on the 21 CB-CTT instances. To aid the presentation of the results, Table 1 shows the allocation vectors in a compressed form: The penalty values are sorted in non-increasing orders the multiplicities of the values are shown as exponents. For example, a table entry of 521011 denotes an allocation vector in which the penalty value 5 appears two times, 1 appears one and 0 eleven times. Note that from the max-min fairness perspective it is not important to which curriculum a penalty value corresponds, so we omit this information. The results in Table 1 show that MMF SA GLBOP finds better solutions than MMF SA LSAP on 18 instances, while the best solutions found by MMF SA LSAP are better on comp04 and comp18. In addition to the best allocation vectors, Table 1 shows the average allocations over the 50 runs for each instance. The average allocations have been computed using \u03c1 from Section 4: The allocation vectors were mapped to the natural numbers, then the average was calculated and rounded to the nearest integer. Finally, the result was mapped back to the corresponding equivalence class of allocation vectors. A comparison of the average allocations shows that in this respect, MMF SA GLBOP outperforms MMF SA LSAP on 16 instances while it is beaten on the instances comp05, comp08, comp15 and comp21.\nWe also performed the one-sided Wilcoxon rank-sum test with a significance level of 0.01. According to the test, MMF SA GLBOP yields significantly better results than MMF SA LSAP on instances comp02, comp06, comp07, comp08, comp10, comp13, comp14, comp17, comp18, comp19, comp20 and comp21. In contrast, MMF SA LSAP is not significantly better than MMF SA GLBOP on any of the 21 instances with this significance level. The results of the Wilcoxon test are consistent with the data in Table 1.\nIn contrast to experimental setup in [22], we did not use a timeout, but set a fixed number of iterations for the direct comparison of MMF SA GLBOP and MMF SA LSAP. The reason for this decision is that in practice, solving (GLBOP) takes significantly more time than solving a LSAP. The increase in runtime is due to overhead required by construction of the cost vectors (O(|U |2)) and the O(|U |) factor for solving the linear vector assignment problem (see Corollary 1). Since we are mainly interested in the implications of modelling the room assignment subproblem as a GLBOP instead of an LSAP, both algorithms should be able to solve a similar number of room-assignment subproblems. From the data shown in Table 1 we can conclude, that using the decomposition presented in Section 3 is clearly the smarter choice, since, after solving equally many\nsubproblems, it produces superior results compared to the approach from [22]. However, if we employ the timeout as it was required for the ITC2007 competition (see [10]), MMF SA LSAP is the better choice, because it can perform significantly more iterations within the given timeout."}, {"heading": "6 Conclusion", "text": "In this work we proposed a decomposition of the MMF-CB-CTT problem from [22]. The decomposition models the room assignment subproblem as a assignment problem with a generalized lexicographic bottleneck objective. Using this decomposition, the room assignment subproblem can be solved in polynomial time. We use this result to improve the performance of the MAXMINFAIR SA algorithm proposed in [22], which originally modelled the room assignment as an LSAP. In our experiments we compare the performance of two variants of the MAXMINFAIR SA algorithm, wich differ with respect to how the room assignment subproblem is performed. Our results indicate that using the decomposition proposed in Section 3 improves the performance of the MAXMINFAIR SA algorithm on most of the ITC2007 benchmark instances. Furthermore, we proposed a measure for quantifying how fair a timetable is with respect to max-min fairness. Using this measure helps to apply statistical methods in the analysis of the performance of randomized optimization algorithms for optimization problems with a bottleneck objective. In particular, it enables us to compare the average solution quality of the two variants of the MAXMINFAIR SA algorithm. The results indicate that using the new decomposition, MAXMINFAIR SA produces better timetables on average for 16 out of 21 instances."}], "references": [{"title": "Design and statistical analysis of a hybrid local search algorithm for course timetabling", "author": ["Ruggero Bellio", "Luca DiGaspero", "Andrea Schaerf"], "venue": "Journal of Scheduling,", "citeRegEx": "1", "shortCiteRegEx": "1", "year": 2012}, {"title": "Partitioning procedures for solving mixed variables programming problems", "author": ["J.F. Benders"], "venue": "Numerische Mathematik,", "citeRegEx": "2", "shortCiteRegEx": "2", "year": 1962}, {"title": "The price of fairness", "author": ["Dimitris Bertsimas", "Vivek F. Farias", "Nikolaos Trichakis"], "venue": "Operations Research,", "citeRegEx": "3", "shortCiteRegEx": "3", "year": 2011}, {"title": "Lexicographic bottleneck problems", "author": ["R.E. Burkard", "F. Rendl"], "venue": "Operations Research Letters,", "citeRegEx": "4", "shortCiteRegEx": "4", "year": 1991}, {"title": "Assignment Problems. Society for Industrial and Applied Mathematics, Philadelphia", "author": ["Rainer Burkard", "Mauro Dell\u2019Amico", "Silvano Martello"], "venue": "PA, USA,", "citeRegEx": "5", "shortCiteRegEx": "5", "year": 2009}, {"title": "Weakly admissible transformations for solving algebraic assignment and transportation problems, volume", "author": ["Rainer Ernst Burkard", "Uwe Zimmermann"], "venue": "Mathematical Progamming Study,", "citeRegEx": "6", "shortCiteRegEx": "6", "year": 1980}, {"title": "Decomposition, reformulation, and diving in university course timetabling", "author": ["Edmund K. Burke", "Jakub Marecek", "Andrew J. Parkes", "Hana Rudov\u00e1"], "venue": "Computers & OR,", "citeRegEx": "7", "shortCiteRegEx": "7", "year": 2010}, {"title": "A branch-andcut procedure for the Udine course timetabling problem", "author": ["Edmund K. Burke", "Jakub Mare\u010dek", "Andrew J. Parkes", "Hana Rudov\u00e1"], "venue": "Annals of Operations Research,", "citeRegEx": "8", "shortCiteRegEx": "8", "year": 2011}, {"title": "An improved general procedure for lexicographic bottleneck problems", "author": ["F. Della Croce", "V. Th. Paschos", "A. Tsoukias"], "venue": "Operations Research Letters,", "citeRegEx": "9", "shortCiteRegEx": "9", "year": 1999}, {"title": "The second international timetabling competition (ITC-2007): Curriculum-based course timetabling (Track 3)", "author": ["Luca Di Gaspero", "Barry McCollum", "Andrea Schaerf"], "venue": "Technical Report QUB/IEEE/Tech/ITC2007/CurriculumCTT/v1.0/1, School of Electronics,", "citeRegEx": "10", "shortCiteRegEx": "10", "year": 2007}, {"title": "Welfare economics and social choice theory", "author": ["Allan M. Feldman", "Roberto Serrano"], "venue": null, "citeRegEx": "11", "shortCiteRegEx": "11", "year": 2006}, {"title": "Faster scaling algorithms for network problems", "author": ["H. Gabow", "R. Tarjan"], "venue": "SIAM Journal on Computing,", "citeRegEx": "12", "shortCiteRegEx": "12", "year": 1989}, {"title": "A quantitative measure of fairness and discrimination for resource allocation in shared computer systems", "author": ["Rajendra K. Jain", "Dah-Ming W. Chiu", "William R. Hawe"], "venue": "Technical report,", "citeRegEx": "13", "shortCiteRegEx": "13", "year": 1984}, {"title": "Optimization by simulated annealing", "author": ["Scott Kirkpatrick", "C.D. Gelatt", "M.P. Vecchi"], "venue": null, "citeRegEx": "14", "shortCiteRegEx": "14", "year": 1983}, {"title": "Fairness in routing and load balancing", "author": ["Jon Kleinberg", "Yuval Rabani", "\u00c9va Tardos"], "venue": "Journal of Computer and System Sciences,", "citeRegEx": "15", "shortCiteRegEx": "15", "year": 2001}, {"title": "Fairness measures for resource allocation", "author": ["A. Kumar", "J. Kleinberg"], "venue": "In Foundations of Computer Science,", "citeRegEx": "16", "shortCiteRegEx": "16", "year": 2000}, {"title": "Curriculum based course timetabling: new solutions to Udine benchmark instances", "author": ["Gerald Lach", "Marco E. L\u00fcbbecke"], "venue": "Annals of Operations Research,", "citeRegEx": "17", "shortCiteRegEx": "17", "year": 2012}, {"title": "An axiomatic theory of fairness in network resource allocation", "author": ["Tian Lan", "David Kao", "Mung Chiang", "Ashutosh Sabharwal"], "venue": "In INFOCOM,", "citeRegEx": "18", "shortCiteRegEx": "18", "year": 2010}, {"title": "Adaptive tabu search for course timetabling", "author": ["Zhipeng L\u00fc", "Jin-Kao Hao"], "venue": "European Journal of Operational Research,", "citeRegEx": "19", "shortCiteRegEx": "19", "year": 2010}, {"title": "Adaptive Tabu Search for course timetabling", "author": ["Zhipeng L\u00fc", "Jin-Kao Hao"], "venue": "European Journal of Operational Research,", "citeRegEx": "20", "shortCiteRegEx": "20", "year": 2010}, {"title": "Setting the research agenda in automated timetabling: The second international timetabling competition", "author": ["Barry McCollum", "Andrea Schaerf", "Ben Paechter", "Paul McMullan", "Rhyd Lewis", "Andrew J. Parkes", "Luca Di Gaspero", "Rong Qu", "Edmund K. Burke"], "venue": "INFORMS Journal on Computing,", "citeRegEx": "21", "shortCiteRegEx": "21", "year": 2010}, {"title": "Fairness in academic course timetabling", "author": ["Moritz M\u00fchlenthaler", "Rolf Wanka"], "venue": "In Proc. 9th Int. Conf. on the Practice and Theory of Automated Timetabling (PATAT),", "citeRegEx": "22", "shortCiteRegEx": "22", "year": 2012}, {"title": "ITC2007 solver description: A hybrid approach", "author": ["Tom\u00e1\u0161 M\u00fcller"], "venue": "Annals of Operations Research,", "citeRegEx": "23", "shortCiteRegEx": "23", "year": 2009}, {"title": "Bicriteria models for fair and efficient resource allocation", "author": ["W\u0142odzimierz Ogryczak"], "venue": "In Proc. 2nd International Conference on Social Informatics (SocInfo),", "citeRegEx": "24", "shortCiteRegEx": "24", "year": 2010}, {"title": "Combinatorial Optimization; Algorithms and Complexity", "author": ["Christos H. Papadimitriou", "Kenneth Steiglitz"], "venue": "Dover Publications,", "citeRegEx": "25", "shortCiteRegEx": "25", "year": 1998}, {"title": "Assignment problems: A golden anniversary survey", "author": ["David W. Pentico"], "venue": "European Journal of Operational Research,", "citeRegEx": "26", "shortCiteRegEx": "26", "year": 2007}, {"title": "Scheduling the brazilian soccer tournament with fairness and broadcast objectives", "author": ["Celso C. Ribeiro", "Sebasti\u00e1n Urrutia"], "venue": "In Proc. 6th Int. Conf. on Practice and Theory of Automated Timetabling,", "citeRegEx": "27", "shortCiteRegEx": "27", "year": 2007}, {"title": "Real-life curriculum-based timetabling", "author": ["Tom\u00e1a\u0161 M\u00fcller", "Hana Rudov\u00e1"], "venue": "In Proc. 9th Int. Conf. on the Practice and Theory of Automated Timetabling (PATAT),", "citeRegEx": "28", "shortCiteRegEx": "28", "year": 2012}, {"title": "Investigation of fairness measures for nurse rostering", "author": ["Pieter Smet", "Simon Martin", "Djamila Ouelhadj", "Ender \u00d6zcan", "Greet Vanden Berghe"], "venue": "In Proc. 9th Int. Conf. on the Practice and Theory of Automated Timetabling (PATAT),", "citeRegEx": "29", "shortCiteRegEx": "29", "year": 2012}, {"title": "Fairness in the aircraft landing problem", "author": ["M.J. Soomer", "G.M. Koole"], "venue": "In Proceedings of the Anna Valicek Competition", "citeRegEx": "30", "shortCiteRegEx": "30", "year": 2008}], "referenceMentions": [{"referenceID": 20, "context": "The CB-CTT problem has been proposed in the context of the timetabling competition ITC2007 [21] and has since then received a great deal of attention in the timetabling community.", "startOffset": 91, "endOffset": 95}, {"referenceID": 7, "context": "The combinatorial structure of the problem is quite complex and has been investigated, for example, using polyhedral studies [8, 17].", "startOffset": 125, "endOffset": 132}, {"referenceID": 16, "context": "The combinatorial structure of the problem is quite complex and has been investigated, for example, using polyhedral studies [8, 17].", "startOffset": 125, "endOffset": 132}, {"referenceID": 0, "context": "However, a wealth of (meta-)heuristic methods have been applied successfully to generate high quality timetables, even for large CB-CTT instances, see for example [1, 19, 23].", "startOffset": 163, "endOffset": 174}, {"referenceID": 18, "context": "However, a wealth of (meta-)heuristic methods have been applied successfully to generate high quality timetables, even for large CB-CTT instances, see for example [1, 19, 23].", "startOffset": 163, "endOffset": 174}, {"referenceID": 22, "context": "However, a wealth of (meta-)heuristic methods have been applied successfully to generate high quality timetables, even for large CB-CTT instances, see for example [1, 19, 23].", "startOffset": 163, "endOffset": 174}, {"referenceID": 21, "context": "In this work, our focus is the max-min fair curriculum-based course timetabling (MMF-CB-CTT) introduced in [22], which replaces the original optimization objective by a lexicographic bottleneck objective.", "startOffset": 107, "endOffset": 111}, {"referenceID": 16, "context": "It is a common technique to decompose the CB-CTT problem into subproblems which are easier to handle individually [17, 19].", "startOffset": 114, "endOffset": 122}, {"referenceID": 18, "context": "It is a common technique to decompose the CB-CTT problem into subproblems which are easier to handle individually [17, 19].", "startOffset": 114, "endOffset": 122}, {"referenceID": 6, "context": "The usual approach is to perform room and timeslot assignments separately, but other approaches have been explored as well [7].", "startOffset": 123, "endOffset": 126}, {"referenceID": 7, "context": "The CB-CTT problem can be decomposed into a bounded list coloring problem that models the timeslot assignment and, for each timeslot, a linear sum assignment problem (LSAP) for assigning the courses in this timeslot to rooms [8, 17].", "startOffset": 225, "endOffset": 232}, {"referenceID": 16, "context": "The CB-CTT problem can be decomposed into a bounded list coloring problem that models the timeslot assignment and, for each timeslot, a linear sum assignment problem (LSAP) for assigning the courses in this timeslot to rooms [8, 17].", "startOffset": 225, "endOffset": 232}, {"referenceID": 3, "context": "We show that for an analogous decomposition of the MMF-CB-CTT problem, the room assignment subproblem for a single timeslot can also be solved efficiently by modeling it as a generalized lexicographic bottleneck optimization problem (GLBOP), which is a generalization of the lexicographic bottleneck optimization problem (LBOP) from [4].", "startOffset": 333, "endOffset": 336}, {"referenceID": 21, "context": "We evaluate the quality of the timetables produced by the algorithm MAXMINFAIR SA from [22], with and without the new decomposition.", "startOffset": 87, "endOffset": 91}, {"referenceID": 10, "context": "The topic of fairness and how to measure it has received great attention for example in economics, where the distribution of wealth and income is of interest [11].", "startOffset": 158, "endOffset": 162}, {"referenceID": 17, "context": "In computer science, fairness aspects have been studied for example in the design of network communication protocols, in particular in the context of bandwidth allocation and traffic shaping [18, 13].", "startOffset": 191, "endOffset": 199}, {"referenceID": 12, "context": "In computer science, fairness aspects have been studied for example in the design of network communication protocols, in particular in the context of bandwidth allocation and traffic shaping [18, 13].", "startOffset": 191, "endOffset": 199}, {"referenceID": 28, "context": "Fairness aspects have been addressed explicitly for example for various kinds of scheduling problems, including personnel scheduling [29], sports scheduling [27], course scheduling [22] and aircraft scheduling [30].", "startOffset": 133, "endOffset": 137}, {"referenceID": 26, "context": "Fairness aspects have been addressed explicitly for example for various kinds of scheduling problems, including personnel scheduling [29], sports scheduling [27], course scheduling [22] and aircraft scheduling [30].", "startOffset": 157, "endOffset": 161}, {"referenceID": 21, "context": "Fairness aspects have been addressed explicitly for example for various kinds of scheduling problems, including personnel scheduling [29], sports scheduling [27], course scheduling [22] and aircraft scheduling [30].", "startOffset": 181, "endOffset": 185}, {"referenceID": 29, "context": "Fairness aspects have been addressed explicitly for example for various kinds of scheduling problems, including personnel scheduling [29], sports scheduling [27], course scheduling [22] and aircraft scheduling [30].", "startOffset": 210, "endOffset": 214}, {"referenceID": 2, "context": "In the context of resource allocation allocation in general, fairness has been studied in [3, 24].", "startOffset": 90, "endOffset": 97}, {"referenceID": 23, "context": "In the context of resource allocation allocation in general, fairness has been studied in [3, 24].", "startOffset": 90, "endOffset": 97}, {"referenceID": 14, "context": "Approximation algorithms for fair optimization problems have been studied in [15, 16].", "startOffset": 77, "endOffset": 85}, {"referenceID": 15, "context": "Approximation algorithms for fair optimization problems have been studied in [15, 16].", "startOffset": 77, "endOffset": 85}, {"referenceID": 21, "context": "In the next sections of this work we will deal with a fair variant of a university course timetabling problem from [22] that builds on the notion of max-min fairness.", "startOffset": 115, "endOffset": 119}, {"referenceID": 9, "context": "In Section 3 we will focus on decompositions of two particular variants of the academic course timetabling problem: the curriculum-based course timetabling (CB-CTT) problem from track three of the second international timetabling competition [10], and its max-min fair version, MMF-CB-CTT, proposed in [22].", "startOffset": 242, "endOffset": 246}, {"referenceID": 21, "context": "In Section 3 we will focus on decompositions of two particular variants of the academic course timetabling problem: the curriculum-based course timetabling (CB-CTT) problem from track three of the second international timetabling competition [10], and its max-min fair version, MMF-CB-CTT, proposed in [22].", "startOffset": 302, "endOffset": 306}, {"referenceID": 18, "context": "The CB-CTT formulation has attracted a great deal of interest in the research community and the competition instances are popular benchmarking instances for comparing different algorithms [19, 17, 28].", "startOffset": 188, "endOffset": 200}, {"referenceID": 16, "context": "The CB-CTT formulation has attracted a great deal of interest in the research community and the competition instances are popular benchmarking instances for comparing different algorithms [19, 17, 28].", "startOffset": 188, "endOffset": 200}, {"referenceID": 27, "context": "The CB-CTT formulation has attracted a great deal of interest in the research community and the competition instances are popular benchmarking instances for comparing different algorithms [19, 17, 28].", "startOffset": 188, "endOffset": 200}, {"referenceID": 9, "context": "Later on, we will deal exclusively with feasible timetables, so we will not cover the evaluation of hard constraints at all (please refer to [10] a detailed description).", "startOffset": 141, "endOffset": 145}, {"referenceID": 9, "context": "A detailed specification of the penalty functions can be found in [10].", "startOffset": 66, "endOffset": 70}, {"referenceID": 21, "context": "A max-min fair variant of the CB-CTT problem was defined in [22].", "startOffset": 60, "endOffset": 64}, {"referenceID": 4, "context": "For a comprehensive overview of the body of research on the assignment problem and the applications see [5, 26].", "startOffset": 104, "endOffset": 111}, {"referenceID": 25, "context": "For a comprehensive overview of the body of research on the assignment problem and the applications see [5, 26].", "startOffset": 104, "endOffset": 111}, {"referenceID": 16, "context": "In CB-CTT problem for example, the assignment problem appears as a subproblem [17, 20].", "startOffset": 78, "endOffset": 86}, {"referenceID": 19, "context": "In CB-CTT problem for example, the assignment problem appears as a subproblem [17, 20].", "startOffset": 78, "endOffset": 86}, {"referenceID": 11, "context": "248ff] and network flow algorithms [12].", "startOffset": 35, "endOffset": 39}, {"referenceID": 3, "context": "This results in an exponential blow-up of the cost values, which may be undesirable in practical applications [4].", "startOffset": 110, "endOffset": 113}, {"referenceID": 5, "context": "belongs to the class of algebraic assignment problems [6].", "startOffset": 54, "endOffset": 57}, {"referenceID": 8, "context": "Using this reduction, a given LBAP with a cost function c can be solved in time O(kn3), where k is the number of distinct values attained by c [9].", "startOffset": 143, "endOffset": 146}, {"referenceID": 16, "context": "It is a common approach to decompose the CB-CTT problem in a way that room and timeslot assignment is preformed separately, see for example [17, 20].", "startOffset": 140, "endOffset": 148}, {"referenceID": 19, "context": "It is a common approach to decompose the CB-CTT problem in a way that room and timeslot assignment is preformed separately, see for example [17, 20].", "startOffset": 140, "endOffset": 148}, {"referenceID": 1, "context": "In the spirit of Benders decomposition approach [2], we further consider decompositions of sum optimization problems into master and subproblems such that the subproblems can be solved efficiently.", "startOffset": 48, "endOffset": 51}, {"referenceID": 3, "context": "In the following, we consider a generalization of the LBOP in [4].", "startOffset": 62, "endOffset": 65}, {"referenceID": 3, "context": "If |w(e)|= 1 for each e \u2208 E then we have a LBOP as defined in [4].", "startOffset": 62, "endOffset": 65}, {"referenceID": 8, "context": "in [9], reduce the GLBOP to a lexicographic vector optimization problem (LVOP).", "startOffset": 3, "endOffset": 6}, {"referenceID": 8, "context": "in [9], the vectorial approach is essentially cost scaling.", "startOffset": 3, "endOffset": 6}, {"referenceID": 16, "context": "As noted by Lach and L\u00fcbbecke in [17], the room stability constraint (S4) introduces dependencies between room assignments in different timeslots, which prevents us from extending the decomposition to more than a single period.", "startOffset": 33, "endOffset": 37}, {"referenceID": 21, "context": "We compare the performance of two randomized heuristic algorithms for the MMF-CB-CTT problem, both of which are based on the algorithm MAXMINFAIR SA from [22].", "startOffset": 154, "endOffset": 158}, {"referenceID": 21, "context": "The first algorithm is the one that performed best in [22].", "startOffset": 54, "endOffset": 58}, {"referenceID": 13, "context": "The algorithm MAXMINFAIR SA is a variant of simulated annealing (SA) [14] which has been tailored to the MMF-CB-CTT problem.", "startOffset": 69, "endOffset": 73}, {"referenceID": 21, "context": "Both algorithms use the acceptance criterion based on the component-wise energy difference, which performed best in a comparison of different acceptance criteria in [22].", "startOffset": 165, "endOffset": 169}, {"referenceID": 9, "context": "In order to compare the two algorithms, we performed 50 independent runs for each algorithm on the 21 CB-CTT instances from track three of the timetabling competition ITC2007 [10].", "startOffset": 175, "endOffset": 179}, {"referenceID": 21, "context": "01, as suggested in [22] work well.", "startOffset": 20, "endOffset": 24}, {"referenceID": 21, "context": "In contrast to experimental setup in [22], we did not use a timeout, but set a fixed number of iterations for the direct comparison of MMF SA GLBOP and MMF SA LSAP.", "startOffset": 37, "endOffset": 41}, {"referenceID": 20, "context": "Table 1: Comparison of the best and average objective values of the solutions found by MMF SA LSAP and MMF SA GLBOP on the 21 CB-CTT instances from [21] for 50 independent runs per instance and per algorithm.", "startOffset": 148, "endOffset": 152}, {"referenceID": 21, "context": "subproblems, it produces superior results compared to the approach from [22].", "startOffset": 72, "endOffset": 76}, {"referenceID": 9, "context": "However, if we employ the timeout as it was required for the ITC2007 competition (see [10]), MMF SA LSAP is the better choice, because it can perform significantly more iterations within the given timeout.", "startOffset": 86, "endOffset": 90}, {"referenceID": 21, "context": "In this work we proposed a decomposition of the MMF-CB-CTT problem from [22].", "startOffset": 72, "endOffset": 76}, {"referenceID": 21, "context": "We use this result to improve the performance of the MAXMINFAIR SA algorithm proposed in [22], which originally modelled the room assignment as an LSAP.", "startOffset": 89, "endOffset": 93}], "year": 2013, "abstractText": "We propose a decomposition of the max-min fair curriculum-based course timetabling (MMF-CB-CTT) problem. The decomposition models the room assignment subproblem as a generalized lexicographic bottleneck optimization problem (LBOP). We show that the generalized LBOP can be solved efficiently if the corresponding sum optimization problem can be solved efficiently. As a consequence, the room assignment subproblem of the MMF-CB-CTT problem can be solved efficiently. We use this insight to improve a previously proposed heuristic algorithm for the MMF-CB-CTT problem. Our experimental results indicate that using the new decomposition improves the performance of the algorithm on most of the 21 ITC2007 test instances with respect to the quality of the best solution found. Furthermore, we introduce a measure of the quality of a solution to a max-min fair optimization problem. This measure helps to overcome some limitations imposed by the qualitative nature of max-min fairness and aids the statistical evaluation of the performance of randomized algorithms for such problems. We use this measure to show that using the new decomposition the algorithm outperforms the original one on most instances with respect to the average solution quality.", "creator": "LaTeX with hyperref package"}}}