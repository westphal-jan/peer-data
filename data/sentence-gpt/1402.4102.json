{"id": "1402.4102", "review": {"conference": "ICML", "VERSION": "v1", "DATE_OF_SUBMISSION": "17-Feb-2014", "title": "Stochastic Gradient Hamiltonian Monte Carlo", "abstract": "Hamiltonian Monte Carlo (HMC) sampling methods provide a mechanism for defining distant proposals with high acceptance probabilities in a Metropolis-Hastings framework, enabling more efficient exploration of the state space than standard random-walk proposals. The popularity of such methods has grown significantly in recent years. However, a limitation of HMC methods is the required gradient computation for simulation of the Hamiltonian dynamical system---such a computation is infeasible in problems involving a large sample size or streaming data. Instead, we must rely on a noisy gradient estimate computed from a subset of the data. In this paper, we explore the properties of such a stochastic gradient HMC approach. Surprisingly, the natural implementation of the stochastic approximation can be arbitrarily bad. To address this problem we introduce a variant that uses second-order Langevin dynamics with a friction term that counteracts the effects of the noisy gradient, maintaining the desired target distribution as the invariant distribution. Results on simulated data validate our theory. We also provide an application of our methods to a classification task using neural networks and to online Bayesian matrix factorization. For the most part, the statistical model supports two approaches: one for each of the two approaches, one for each of the two approaches. The first approach is called Monte Carlo, which can be used to determine the accuracy of a given prediction and to be applied to the entire set of models with respect to the model. Monte Carlo is a general mathematical formulation of the natural world of human perception and inference. Using this approach, we can perform the analysis using a set of algorithms. We can also model the problem of neural networks using a Bayesian algorithm. The results are shown in Fig. 6b. We believe that using an arbitrary number of Monte Carlo models that use stochastic methods can increase the accuracy of all predictions. Therefore, our data is useful for improving statistical modelling. The algorithm can be obtained through statistical regression.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "histories": [["v1", "Mon, 17 Feb 2014 19:57:59 GMT  (147kb,D)", "https://arxiv.org/abs/1402.4102v1", null], ["v2", "Mon, 12 May 2014 06:38:21 GMT  (110kb,D)", "http://arxiv.org/abs/1402.4102v2", "ICML 2014 version"]], "reviews": [], "SUBJECTS": "stat.ME cs.LG stat.ML", "authors": ["tianqi chen", "emily b fox", "carlos guestrin"], "accepted": true, "id": "1402.4102"}, "pdf": {"name": "1402.4102.pdf", "metadata": {"source": "META", "title": "Stochastic Gradient Hamiltonian Monte Carlo", "authors": ["Tianqi Chen", "Emily B. Fox", "Carlos Guestrin"], "emails": ["TQCHEN@CS.WASHINGTON.EDU", "EBFOX@STAT.WASHINGTON.EDU", "GUESTRIN@CS.WASHINGTON.EDU"], "sections": [{"heading": "1. Introduction", "text": "Hamiltonian Monte Carlo (HMC) (Duane et al., 1987; Neal, 2010) sampling methods provide a powerful Markov chain Monte Carlo (MCMC) sampling algorithm. The methods define a Hamiltonian function in terms of the target distribution from which we desire samples\u2014the potential energy\u2014and a kinetic energy term parameterized by a set of \u201cmomentum\u201d auxiliary variables. Based on\nProceedings of the 31 st International Conference on Machine Learning, Beijing, China, 2014. JMLR: W&CP volume 32. Copyright 2014 by the author(s).\nsimple updates to the momentum variables, one simulates from a Hamiltonian dynamical system that enables proposals of distant states. The target distribution is invariant under these dynamics; in practice, a discretization of the continuous-time system is needed necessitating a Metropolis-Hastings (MH) correction, though still with high acceptance probability. Based on the attractive properties of HMC in terms of rapid exploration of the state space, HMC methods have grown in popularity recently (Neal, 2010; Hoffman & Gelman, 2011; Wang et al., 2013).\nA limitation of HMC, however, is the necessity to compute the gradient of the potential energy function in order to simulate the Hamiltonian dynamical system. We are increasingly faced with datasets having millions to billions of observations or where data come in as a stream and we need to make inferences online, such as in online advertising or recommender systems. In these ever-morecommon scenarios of massive batch or streaming data, such gradient computations are infeasible since they utilize the entire dataset, and thus are not applicable to \u201cbig data\u201d problems. Recently, in a variety of machine learning algorithms, we have witnessed the many successes of utilizing a noisy estimate of the gradient based on a minibatch of data to scale the algorithms (Robbins & Monro, 1951; Hoffman et al., 2013; Welling & Teh, 2011). A majority of these developments have been in optimization-based algorithms (Robbins & Monro, 1951; Nemirovski et al., 2009), and a question is whether similar efficiencies can be garnered by sampling-based algorithms that maintain many desirable theoretical properties for Bayesian inference. One attempt at applying such methods in a sampling context is the recently proposed stochastic gradient Langevin dynamics (SGLD) (Welling & Teh, 2011; Ahn et al., 2012; Patterson & Teh, 2013). This method builds on first-order Langevin dynamics that do not include the crucial momentum term of HMC.\nIn this paper, we explore the possibility of marrying the efficiencies in state space exploration of HMC with the big-data computational efficiencies of stochastic gradients. Such an algorithm would enable a large-scale and online\nar X\niv :1\n40 2.\n41 02\nv2 [\nst at\n.M E\n] 1\n2 M\nay 2\n01 4\nBayesian sampling algorithm with the potential to rapidly explore the posterior. As a first cut, we consider simply applying a stochastic gradient modification to HMC and assess the impact of the noisy gradient. We prove that the noise injected in the system by the stochastic gradient no longer leads to Hamiltonian dynamics with the desired target distribution as the stationary distribution. As such, even before discretizing the dynamical system, we need to correct for this effect. One can correct for the injected gradient noise through an MH step, though this itself requires costly computations on the entire dataset. In practice, one might propose long simulation runs before an MH correction, but this leads to low acceptance rates due to large deviations in the Hamiltonian from the injected noise. The efficiency of this MH step could potentially be improved using the recent results of (Korattikara et al., 2014; Bardenet et al., 2014). In this paper, we instead introduce a stochastic gradient HMC method with friction added to the momentum update. We assume the injected noise is Gaussian, appealing to the central limit theorem, and analyze the corresponding dynamics. We show that using such secondorder Langevin dynamics enables us to maintain the desired target distribution as the stationary distribution. That is, the friction counteracts the effects of the injected noise. For discretized systems, we consider letting the step size tend to zero so that an MH step is not needed, giving us a significant computational advantage. Empirically, we demonstrate that we have good performance even for set to a small, fixed value. The theoretical computation versus accuracy tradeoff of this small- approach is provided in the Supplementary Material.\nA number of simulated experiments validate our theoretical results and demonstrate the differences between (i) exact HMC, (ii) the na\u0131\u0308ve implementation of stochastic gradient HMC (simply replacing the gradient with a stochastic gradient), and (iii) our proposed method incorporating friction. We also compare to the first-order Langevin dynamics of SGLD. Finally, we apply our proposed methods to a classification task using Bayesian neural networks and to online Bayesian matrix factorization of a standard movie dataset. Our experimental results demonstrate the effectiveness of the proposed algorithm."}, {"heading": "2. Hamiltonian Monte Carlo", "text": "Suppose we want to sample from the posterior distribution of \u03b8 given a set of independent observations x \u2208 D:\np(\u03b8|D) \u221d exp(\u2212U(\u03b8)), (1)\nwhere the potential energy function U is given by\nU = \u2212 \u2211 x\u2208D log p(x|\u03b8)\u2212 log p(\u03b8). (2)\nHamiltonian (Hybrid) Monte Carlo (HMC) (Duane et al., 1987; Neal, 2010) provides a method for proposing samples of \u03b8 in a Metropolis-Hastings (MH) framework that efficiently explores the state space as compared to standard random-walk proposals. These proposals are generated from a Hamiltonian system based on introducing a set of auxiliary momentum variables, r. That is, to sample from p(\u03b8|D), HMC considers generating samples from a joint distribution of (\u03b8, r) defined by\n\u03c0(\u03b8, r) \u221d exp ( \u2212U(\u03b8)\u2212 1\n2 rTM\u22121r\n) . (3)\nIf we simply discard the resulting r samples, the \u03b8 samples have marginal distribution p(\u03b8|D). Here, M is a mass matrix, and together with r, defines a kinetic energy term. M is often set to the identity matrix, I , but can be used to precondition the sampler when we have more information about the target distribution. The Hamiltonian function is defined by H(\u03b8, r) = U(\u03b8) + 12r\nTM\u22121r. Intuitively, H measures the total energy of a physical system with position variables \u03b8 and momentum variables r.\nTo propose samples, HMC simulates the Hamiltonian dynamics {\nd\u03b8 = M\u22121r dt dr = \u2212\u2207U(\u03b8) dt. (4)\nTo make Eq. (4) concrete, a common analogy in 2D is as follows (Neal, 2010). Imagine a hockey puck sliding over a frictionless ice surface of varying height. The potential energy term is based on the height of the surface at the current puck position, \u03b8, while the kinetic energy is based on the momentum of the puck, r, and its mass, M . If the surface is flat (\u2207U(\u03b8) = 0,\u2200\u03b8), the puck moves at a constant velocity. For positive slopes (\u2207U(\u03b8) > 0), the kinetic energy decreases as the potential energy increases until the kinetic energy is 0 (r = 0). The puck then slides back down the hill increasing its kinetic energy and decreasing potential energy. Recall that in HMC, the position variables are those of direct interest whereas the momentum variables are artificial constructs (auxiliary variables).\nOver any interval s, the Hamiltonian dynamics of Eq. (4) defines a mapping from the state at time t to the state at time t + s. Importantly, this mapping is reversible, which is important in showing that the dynamics leave \u03c0 invariant. Likewise, the dynamics preserve the total energy, H , so proposals are always accepted. In practice, however, we usually cannot simulate exactly from the continuous system of Eq. (4) and instead consider a discretized system. One common approach is the \u201cleapfrog\u201d method, which is outlined in Alg. 1. Because of inaccuracies introduced through the discretization, an MH step must be implemented (i.e., the acceptance rate is no longer 1). However, acceptance rates still tend to be high even for proposals that can be quite far from their last state.\nAlgorithm 1: Hamiltonian Monte Carlo Input: Starting position \u03b8(1) and step size for t = 1, 2 \u00b7 \u00b7 \u00b7 do\nResample momentum r r(t) \u223c N (0,M) (\u03b80, r0) = (\u03b8\n(t), r(t)) Simulate discretization of Hamiltonian dynamics in Eq. (4): r0 \u2190 r0 \u2212 2\u2207U(\u03b80) for i = 1 to m do\n\u03b8i \u2190 \u03b8i\u22121 + M\u22121ri\u22121 ri \u2190 ri\u22121 \u2212 \u2207U(\u03b8i)\nend rm \u2190 rm \u2212 2\u2207U(\u03b8m) (\u03b8\u0302, r\u0302) = (\u03b8m, rm) Metropolis-Hastings correction: u \u223c Uniform[0, 1] \u03c1 = eH(\u03b8\u0302,r\u0302)\u2212H(\u03b8 (t),r(t))\nif u < min(1, \u03c1), then \u03b8(t+1) = \u03b8\u0302 end\nThere have been many recent developments of HMC to make the algorithm more flexible and applicable in a variety of settings. The \u201cNo U-Turn\u201d sampler (Hoffman & Gelman, 2011) and the methods proposed by Wang et al. (2013) allow automatic tuning of the step size, , and number of simulation steps,m. Riemann manifold HMC (Girolami & Calderhead, 2011) makes use of the Riemann geometry to adapt the mass M , enabling the algorithm to make use of curvature information to perform more efficient sampling. We attempt to improve HMC in an orthogonal direction focused on computational complexity, but these adaptive HMC techniques could potentially be combined with our proposed methods to see further benefits."}, {"heading": "3. Stochastic Gradient HMC", "text": "In this section, we study the implications of implementing HMC using a stochastic gradient and propose variants on the Hamiltonian dynamics that are more robust to the noise introduced by the stochastic gradient estimates. In all scenarios, instead of directly computing the costly gradient \u2207U(\u03b8) using Eq. (2), which requires examination of the entire dataset D, we consider a noisy estimate based on a minibatch D\u0303 sampled uniformly at random from D:\n\u2207U\u0303(\u03b8) = \u2212|D| |D\u0303| \u2211 x\u2208D\u0303 \u2207 log p(x|\u03b8)\u2212\u2207 log p(\u03b8), D\u0303 \u2282 D.\n(5) We assume that our observations x are independent and, appealing to the central limit theorem, approximate this\nnoisy gradient as\n\u2207U\u0303(\u03b8) \u2248 \u2207U(\u03b8) +N (0, V (\u03b8)). (6)\nHere, V is the covariance of the stochastic gradient noise, which can depend on the current model parameters and sample size. Note that we use an abuse of notation in Eq. (6) where the addition of N (\u00b5,\u03a3) denotes the introduction of a random variable that is distributed according to this multivariate Gaussian. As the size of D\u0303 increases, this Gaussian approximation becomes more accurate. Clearly, we want minibatches to be small to have our sought-after computational gains. Empirically, in a wide range of settings, simply considering a minibatch size on the order of hundreds of data points is sufficient for the central limit theorem approximation to be accurate (Ahn et al., 2012). In our applications of interest, minibatches of this size still represent a significant reduction in the computational cost of the gradient."}, {"heading": "3.1. Na\u0131\u0308ve Stochastic Gradient HMC", "text": "The most straightforward approach to stochastic gradient HMC is simply to replace\u2207U(\u03b8) in Alg. 1 by\u2207U\u0303(\u03b8). Referring to Eq. (6), this introduces noise in the momentum update, which becomes \u2206r = \u2212 \u2207U\u0303(\u03b8) = \u2212 \u2207U(\u03b8) + N (0, 2V ). The resulting discrete time system can be viewed as an -discretization of the following continuous stochastic differential equation:{\nd\u03b8 = M\u22121r dt dr = \u2212\u2207U(\u03b8) dt+N (0, 2B(\u03b8)dt). (7)\nHere, B(\u03b8) = 12 V (\u03b8) is the diffusion matrix contributed by gradient noise. As with the original HMC formulation, it is useful to return to a continuous time system in order to derive properties of the approach. To gain some intuition about this setting, consider the same hockey puck analogy of Sec. 2. Here, we can imagine the puck on the same ice surface, but with some random wind blowing as well. This wind may blow the puck further away than expected. Formally, as given by Corollary 3.1 of Theorem 3.1, when B is nonzero, \u03c0(\u03b8, r) of Eq. (3) is no longer invariant under the dynamics described by Eq. (7).\nTheorem 3.1. Let pt(\u03b8, r) be the distribution of (\u03b8, r) at time t with dynamics governed by Eq. (7). Define the entropy of pt as h(pt) = \u2212 \u222b \u03b8,r f(pt(\u03b8, r))d\u03b8dr, where f(x) = x lnx. Assume pt is a distribution with density and gradient vanishing at infinity. Furthermore, assume the gradient vanishes faster than 1ln pt . Then, the entropy of pt increases over time with rate\n\u2202th(pt(\u03b8, r)) =\u222b \u03b8,r f \u2032\u2032 (pt)(\u2207rpt(\u03b8, r))TB(\u03b8)\u2207rpt(\u03b8, r)d\u03b8dr. (8)\nEq. (8) implies that \u2202th(pt(\u03b8, r)) \u2265 0 since B(\u03b8) is a positive semi-definite matrix.\nIntuitively, Theorem 3.1 is true because the noise-free Hamiltonian dynamics preserve entropy, while the additional noise term strictly increases entropy if we assume (i) B(\u03b8) is positive definite (a reasonable assumption due to the normal full rank property of Fisher information) and (ii) \u2207rpt(\u03b8, r) 6= 0 for all t. Then, jointly, the entropy strictly increases over time. This hints at the fact that the distribution pt tends toward a uniform distribution, which can be very far from the target distribution \u03c0.\nCorollary 3.1. The distribution \u03c0(\u03b8, r) \u221d exp (\u2212H(\u03b8, r)) is no longer invariant under the dynamics in Eq. (7).\nThe proofs of Theorem 3.1 and Corollary 3.1 are in the Supplementary Material.\nBecause \u03c0 is no longer invariant under the dynamics of Eq. (7), we must introduce a correction step even before considering errors introduced by the discretization of the dynamical system. For the correctness of an MH step (based on the entire dataset), we appeal to the same arguments made for the HMC data-splitting technique of Neal (2010). This approach likewise considers minibatches of data and simulating the (continuous) Hamiltonian dynamics on each batch sequentially. Importantly, Neal (2010) alludes to the fact that the resulting H from the split-data scenario may be far from that of the full-data scenario after simulation, which leads to lower acceptance rates and thereby reduces the apparent computational gains in simulation. Empirically, as we demonstrate in Fig. 2, we see that even finite-length simulations from the noisy system can diverge quite substantially from those of the noise-free system. Although the minibatch-based HMC technique considered herein is slightly different from that of Neal (2010), the theory we have developed in Theorem 3.1 surrounding the high-entropy properties of the resulting invariant distribution of Eq. (7) provides some intuition for the observed deviations in H both in our experiments and those of Neal (2010).\nThe poorly behaved properties of the trajectory of H based on simulations using noisy gradients results in a complex computation versus efficiency tradeoff. On one hand, it is extremely computationally intensive in large datasets to insert an MH step after just short simulation runs (where deviations in H are less pronounced and acceptance rates should be reasonable). Each of these MH steps requires a costly computation using all of the data, thus defeating the computational gains of considering noisy gradients. On the other hand, long simulation runs between MH steps can lead to very low acceptance rates. Each rejection corresponds to a wasted (noisy) gradient computation and simulation using the proposed variant of Alg. 1. One possible di-\nrection of future research is to consider using the recent results of Korattikara et al. (2014) and Bardenet et al. (2014) that show that it is possible to do MH using a subset of data. However, we instead consider in Sec. 3.2 a straightforward modification to the Hamiltonian dynamics that alleviates the issues of the noise introduced by stochastic gradients. In particular, our modification allows us to again achieve the desired \u03c0 as the invariant distribution of the continuous Hamiltonian dynamical system."}, {"heading": "3.2. Stochastic Gradient HMC with Friction", "text": "In Sec. 3.1, we showed that HMC with stochastic gradients requires a frequent costly MH correction step, or alternatively, long simulation runs with low acceptance probabilities. Ideally, instead, we would like to minimize the effect of the injected noise on the dynamics themselves to alleviate these problems. To this end, we consider a modification to Eq. (7) that adds a \u201cfriction\u201d term to the momentum update:{\nd\u03b8= M\u22121r dt dr = \u2212\u2207U(\u03b8) dt\u2212BM\u22121rdt+N (0, 2Bdt). (9)\nHere and throughout the remainder of the paper, we omit the dependence of B on \u03b8 for simplicity of notation. Let us again make a hockey analogy. Imagine we are now playing street hockey instead of ice hockey, which introduces friction from the asphalt. There is still a random wind blowing, however the friction of the surface prevents the puck from running far away. That is, the friction term BM\u22121r helps decrease the energy H(\u03b8, r), thus reducing the influence of the noise. This type of dynamical system is commonly referred to as second-order Langevin dynamics in physics (Wang & Uhlenbeck, 1945). Importantly, we note that the Langevin dynamics used in SGLD (Welling & Teh, 2011) are first-order, which can be viewed as a limiting case of our second-order dynamics when the friction term is large. Further details on this comparison follow at the end of this section.\nTheorem 3.2. \u03c0(\u03b8, r) \u221d exp(\u2212H(\u03b8, r)) is the unique stationary distribution of the dynamics described by Eq. (9). Proof. Let G = [\n0 \u2212I I 0\n] , D = [ 0 0 0 B ] , where G\nis an anti-symmetric matrix, and D is the symmetric (diffusion) matrix. Eq. (9) can be written in the following decomposed form (Yin & Ao, 2006; Shi et al., 2012)\nd [ \u03b8 r ] =\u2212 [ 0 \u2212I I B ] [ \u2207U(\u03b8) M\u22121r ] dt+N (0, 2Ddt)\n=\u2212 [D +G]\u2207H(\u03b8, r)dt+N (0, 2Ddt).\nThe distribution evolution under this dynamical system is\ngoverned by a Fokker-Planck equation\n\u2202tpt(\u03b8, r)=\u2207T {[D+G] [pt(\u03b8, r)\u2207H(\u03b8, r) +\u2207pt(\u03b8, r)]}. (10) See the Supplementary Material for details. We can verify that \u03c0(\u03b8, r) is invariant under Eq. (10) by calculating[ e\u2212H(\u03b8,r)\u2207H(\u03b8, r) +\u2207e\u2212H(\u03b8,r) ] = 0. Furthermore, due to the existence of diffusion noise, \u03c0 is the unique stationary distribution of Eq. (10).\nIn summary, we have shown that the dynamics given by Eq. (9) have a similar invariance property to that of the original Hamiltonian dynamics of Eq. (4), even with noise present. The key was to introduce a friction term using second-order Langevin dynamics. Our revised momentum update can also be viewed as akin to partial momentum refreshment (Horowitz, 1991; Neal, 1993), which also corresponds to second-order Langevin dynamics. Such partial momentum refreshment was shown to not greatly improve HMC in the case of noise-free gradients (Neal, 2010). However, as we have demonstrated, the idea is crucial in our stochastic gradient scenario in order to counterbalance the effect of the noisy gradients. We refer to the resulting method as stochastic gradient HMC (SGHMC).\nCONNECTION TO FIRST-ORDER LANGEVIN DYNAMICS\nAs we previously discussed, the dynamics introduced in Eq. (9) relate to the first-order Langevin dynamics used in SGLD (Welling & Teh, 2011). In particular, the dynamics of SGLD can be viewed as second-order Langevin dynamics with a large friction term. To intuitively demonstrate this connection, let BM\u22121 = 1dt in Eq. (9). Because the friction and momentum noise terms are very large, the momentum variable r changes much faster than \u03b8. Thus, relative to the rapidly changing momentum, \u03b8 can be considered as fixed. We can study this case as simply:\ndr = \u2212\u2207U(\u03b8)dt\u2212BM\u22121rdt+N (0, 2Bdt) (11)\nThe fast evolution of r leads to a rapid convergence to the stationary distribution of Eq. (11), which is given by N (MB\u22121\u2207U(\u03b8),M). Let us now consider a change in \u03b8, with r \u223c N (MB\u22121\u2207U(\u03b8),M). Recalling BM\u22121 = 1dt , we have\nd\u03b8 = \u2212M\u22121\u2207U(\u03b8)dt2 +N (0, 2M\u22121dt2), (12)\nwhich exactly aligns with the dynamics of SGLD where M\u22121 serves as the preconditioning matrix (Welling & Teh, 2011). Intuitively, this means that when the friction is large, the dynamics do not depend on the decaying series of past gradients represented by dr, reducing to first-order Langevin dynamics.\nAlgorithm 2: Stochastic Gradient HMC for t = 1, 2 \u00b7 \u00b7 \u00b7 do\noptionally, resample momentum r as r(t) \u223c N (0,M) (\u03b80, r0) = (\u03b8\n(t), r(t)) simulate dynamics in Eq.(13): for i = 1 to m do\n\u03b8i \u2190 \u03b8i\u22121 + tM\u22121ri\u22121 ri \u2190 ri\u22121 \u2212 t\u2207U\u0303(\u03b8i)\u2212 tCM\u22121ri\u22121\n+N (0, 2(C \u2212 B\u0302) t) end (\u03b8(t+1), r(t+1)) = (\u03b8m, rm), no M-H step\nend"}, {"heading": "3.3. Stochastic Gradient HMC in Practice", "text": "In everything we have considered so far, we have assumed that we know the noise model B. Clearly, in practice this is not the case. Imagine instead that we simply have an estimate B\u0302. As will become clear, it is beneficial to instead introduce a user specified friction term C B\u0302 and consider the following dynamics d\u03b8 =M\u22121r dt dr =\u2212\u2207U(\u03b8) dt\u2212 CM\u22121rdt\n+N (0, 2(C \u2212 B\u0302)dt) +N (0, 2Bdt) (13)\nThe resulting SGHMC algorithm is shown in Alg. 2. Note that the algorithm is purely in terms of user-specified or computable quantities. To understand our choice of dynamics, we begin with the unrealistic scenario of perfect estimation of B.\nProposition 3.1. If B\u0302 = B, then the dynamics of Eq. (13) yield the stationary distribution \u03c0(\u03b8, r) \u221d e\u2212H(\u03b8,r).\nProof. The momentum update simplifies to r = \u2212\u2207U(\u03b8) dt\u2212CM\u22121rdt+N (0, 2Cdt), with friction term CM\u22121 and noise term N (0, 2Cdt). Noting that the proof of Theorem 3.2 only relied on a matching of noise and friction, the result follows directly by using C in place of B in Theorem 3.2.\nNow consider the benefit of introducing the C terms and revised dynamics in the more realistic scenario of inaccurate estimation of B. For example, the simplest choice is B\u0302 = 0. Though the true stochastic gradient noise B is clearly non-zero, as the step size \u2192 0,B = 12 V goes to 0 andC dominates. That is, the dynamics are again governed by the controllable injected noise N (0, 2Cdt) and friction CM\u22121. It is also possible to set B\u0302 = 12 V\u0302 , where V\u0302 is estimated using empirical Fisher information as in (Ahn et al., 2012) for SGLD.\nCOMPUTATIONAL COMPLEXITY\nThe complexity of Alg. 2 depends on the choice of M , C and B\u0302, and the complexity for estimating\u2207U\u0303(\u03b8)\u2014denoted as g(|D|, d)\u2014where d is the dimension of the parameter space. Assume we allow B\u0302 to be an arbitrary d \u00d7 d positive definite matrix. Using empirical Fisher information estimation of B\u0302, the per-iteration complexity of this estimation step is O(d2|D\u0303|). Then, the time complexity for the (\u03b8, r) update is O(d3), because the update is dominated by generating Gaussian noise with a full covariance matrix. In total, the per-iteration time complexity is O(d2|D\u0303| + d3 + g(|D\u0303|, d)). In practice, we restrict all of the matrices to be diagonal when d is large, resulting in time complexity O(d|D\u0303|+ d+ g(|D\u0303|, d)). Importantly, we note that our SGHMC time complexity is the same as that of SGLD (Welling & Teh, 2011; Ahn et al., 2012) in both parameter settings.\nIn practice, we must assume inaccurate estimation of B. For a decaying series of step sizes t, an MH step is not required (Welling & Teh, 2011; Ahn et al., 2012)1. However, as the step size decreases, the efficiency of the sampler likewise decreases since proposals are increasingly close to their initial value. In practice, we may want to tolerate some errors in the sampling accuracy to gain efficiency. As in (Welling & Teh, 2011; Ahn et al., 2012) for SGLD, we consider using a small, non-zero leading to some bias. We explore an analysis of the errors introduced by such finiteapproximations in the Supplementary Material.\nCONNECTION TO SGD WITH MOMENTUM\nAdding a momentum term to stochastic gradient descent (SGD) is common practice. In concept, there is a clear relationship between SGD with momentum and SGHMC, and here we formalize this connection. Letting v = M\u22121r, we first rewrite the update rule in Alg. 2 as \u2206\u03b8 = v\n\u2206v =\u2212 2M\u22121\u2207U\u0303(\u03b8)\u2212 M\u22121Cv +N (0, 2 3M\u22121(C \u2212 B\u0302)M\u22121).\n(14)\nDefine \u03b7 = 2M\u22121, \u03b1 = M\u22121C, \u03b2\u0302 = M\u22121B\u0302. The update rule becomes{\n\u2206\u03b8 = v \u2206v =\u2212\u03b7\u2207U\u0303(x)\u2212 \u03b1v +N (0, 2(\u03b1\u2212 \u03b2\u0302)\u03b7). (15)\nComparing to an SGD with momentum method, it is clear from Eq. (15) that \u03b7 corresponds to the learning rate and 1\u2212\u03b1 the momentum term. When the noise is removed (via C = B\u0302 = 0), SGHMC naturally reduces to a stochastic\n1We note that, just as in SGLD, an MH correction is not even possible because we cannot compute the probability of the reverse dynamics.\ngradient method with momentum. We can use the equivalent update rule of Eq. (15) to run SGHMC, and borrow experience from parameter settings of SGD with momentum to guide our choices of SGHMC settings. For example, we can set \u03b1 to a fixed small number (e.g., 0.01 or 0.1), select the learning rate \u03b7, and then fix \u03b2\u0302 = \u03b7V\u0302 /2. A more sophisticated strategy involves using momentum scheduling (Sutskever et al., 2013). We elaborate upon how to select these parameters in the Supplementary Material."}, {"heading": "4. Experiments", "text": ""}, {"heading": "4.1. Simulated Scenarios", "text": "To empirically explore the behavior of HMC using exact gradients relative to stochastic gradients, we conduct experiments on a simulated setup. As a baseline, we consider the standard HMC implementation of Alg. 1, both with and without the MH correction. We then compare to HMC with stochastic gradients, replacing\u2207U in Alg. 1 with\u2207U\u0303 , and consider this proposal with and without an MH correction. Finally, we compare to our proposed SGHMC, which does not use an MH correction. Fig. 1 shows the empirical distributions generated by the different sampling algorithms. We see that even without an MH correction, both the HMC and SGHMC algorithms provide results close to the true distribution, implying that any errors from considering nonzero are negligible. On the other hand, the results of na\u0131\u0308ve stochastic gradient HMC diverge significantly from the truth unless an MH correction is added. These findings validate our theoretical results; that is, both standard HMC and SGHMC maintain \u03c0 as the invariant distribution as \u2192 0 whereas na\u0131\u0308ve stochastic gradient HMC does not, though this can be corrected for using a (costly) MH step.\n= 0.1. For the noisy scenarios, we replace the gradient by \u2207U\u0303(\u03b8) = \u03b8 + N (0, 4). We see that noisy Hamiltonian dynamics lead to diverging trajectories when friction is not introduced. Resampling r helps control divergence, but the associated HMC stationary distribution is not correct, as illustrated in Fig. 1.\nWe also consider simply simulating from the discretized Hamiltonian dynamical systems associated with the various samplers compared. In Fig. 2, we compare the resulting trajectories and see that the path of (\u03b8, r) from the noisy system without friction diverges significantly. The modification of the dynamical system by adding friction (corresponding to SGHMC) corrects this behavior. We can also correct for this divergence through periodic resampling of the momentum, though as we saw in Fig. 1, the corresponding MCMC algorithm (\u201cNaive stochastic gradient HMC (no MH)\u201d) does not yield the correct target distribution. These results confirm the importance of the friction term in maintaining a well-behaved Hamiltonian and leading to the correct stationary distribution.\nIt is known that a benefit of HMC over many other MCMC algorithms is the efficiency in sampling from correlated distributions (Neal, 2010)\u2014this is where the introduction of the momentum variable shines. SGHMC inherits this\nproperty. Fig. 3 compares SGHMC and SGLD (Welling & Teh, 2011) when sampling from a bivariate Gaussian with positive correlation. For each method, we examine five different settings of the initial step size on a linearly decreasing scale and generate ten million samples. For each of these sets of samples (one set per step-size setting), we calculate the autocorrelation time2 of the samples and the average absolute error of the resulting sample covariance. Fig. 3(a) shows the autocorrelation versus estimation error for the five settings. As we decrease the stepsize, SGLD has reasonably low estimation error but high autocorrelation time indicating an inefficient sampler. In contrast, SGHMC achieves even lower estimation error at very low autocorrelation times, from which we conclude that the sampler is indeed efficiently exploring the distribution. Fig. 3(b) shows the first 50 samples generated by the two samplers. We see that SGLD\u2019s random-walk behavior makes it challenging to explore the tails of the distribution. The momentum variable associated with SGHMC instead drives the sampler to move along the distribution contours."}, {"heading": "4.2. Bayesian Neural Networks for Classification", "text": "We also test our method on a handwritten digits classification task using the MNIST dataset3. The dataset consists of 60,000 training instances and 10,000 test instances. We randomly split a validation set containing 10,000 instances from the training data in order to select training parameters, and use the remaining 50,000 instances for training. For classification, we consider a two layer Bayesian neural network with 100 hidden variables using a sigmoid unit and an output layer using softmax. We tested four methods: SGD, SGD with momentum, SGLD and SGHMC. For the optimization-based methods, we use the validation set to select the optimal regularizer \u03bb of network weights4. For the sampling-based methods, we take a fully Bayesian approach and place a weakly informative gamma prior on each layer\u2019s weight regularizer \u03bb. The sampling procedure is carried out by running SGHMC and SGLD using minibatches of 500 training instances, then resampling hyperparameters after an entire pass over the training set. We run the samplers for 800 iterations (each over the entire training dataset) and discard the initial 50 samples as burn-in.\nThe test error as a function of MCMC or optimization iteration (after burn-in) is reported for each of these methods in Fig. 4. From the results, we see that SGD with momentum converges faster than SGD. SGHMC also has an advantage over SGLD, converging to a low test error much more rapidly. In terms of runtime, in this case the gra-\n2Autocorrelation time is defined as 1 + \u2211\u221e s=1 \u03c1s, where \u03c1s is the autocorrelation at lag s. 3http://yann.lecun.com/exdb/mnist/ 4We also tried MAP inference for selecting \u03bb in the optimization-based method, but found similar performance.\ndient computation used in backpropagation dominates so both have the same computational cost. The final results of the sampling based methods are better than optimizationbased methods, showing an advantage to Bayesian inference in this setting, thus validating the need for scalable and efficient Bayesian inference algorithms such as SGHMC."}, {"heading": "4.3. Online Bayesian Probabilistic Matrix Factorization for Movie Recommendations", "text": "Collaborative filtering is an important problem in web applications. The task is to predict a user\u2019s preference over a set of items (e.g., movies, music) and produce recommendations. Probabilistic matrix factorization (PMF) (Salakhutdinov & Mnih, 2008b) has proven effective for this task. Due to the sparsity in the ratings matrix (users versus items) in recommender systems, over-fitting is a severe issue with Bayesian approaches providing a natural solution (Salakhutdinov & Mnih, 2008a).\nWe conduct an experiment in online Bayesian PMF on the Movielens dataset ml-1M5. The dataset contains about 1 million ratings of 3,952 movies by 6,040 users. The number of latent dimensions is set to 20. In comparing our stochastic-gradient-based approaches, we use minibatches of 4,000 ratings to update the user and item latent matrices. We choose a significantly larger minibatch size in this application than that of the neural net because of the dramatically larger parameter space associated with the PMF model. For the optimization-based approaches, the hyperparameters are set using cross validation (again, we did not see a performance difference from considering MAP estimation). For the sampling-based approaches, the hyperparameters are updated using a Gibbs step after every 2, 000 steps of sampling model parameters. We run the sampler to generate 2,000,000 samples, with the first 100,000 samples discarded as burn-in. We use five-fold cross validation to\n5http://grouplens.org/datasets/movielens/\nevaluate the performance of the different methods.\nThe results are shown in Table 1. Both SGHMC and SGLD give better prediction results than optimization-based methods. In this experiment, the results for SGLD and SGHMC are very similar. We also observed that the per-iteration running time of both methods are comparable. As such, the experiment suggests that SGHMC is an effective candidate for online Bayesian PMF."}, {"heading": "5. Conclusion", "text": "Moving between modes of a distribution is one of the key challenges for MCMC-based inference algorithms. To address this problem in the large-scale or online setting, we proposed SGHMC, an efficient method for generating high-quality, \u201cdistant\u201d steps in such sampling methods. Our approach builds on the fundamental framework of HMC, but using stochastic estimates of the gradient to avoid the costly full gradient computation. Surprisingly, we discovered that the natural way to incorporate stochastic gradient estimates into HMC can lead to divergence and poor behavior both in theory and in practice. To address this challenge, we introduced second-order Langevin dynamics with a friction term that counteracts the effects of the noisy gradient, maintaining the desired target distribution as the invariant distribution of the continuous system. Our empirical results, both in a simulated experiment and on real data, validate our theory and demonstrate the practical value of introducing this simple modification. A natural next step is to explore combining adaptive HMC techniques with SGHMC. More broadly, we believe that the unification of efficient optimization and sampling techniques, such as those described herein, will enable a significant scaling of Bayesian methods."}, {"heading": "Acknowledgements", "text": "This work was supported in part by the TerraSwarm Research Center sponsored by MARCO and DARPA, ONR Grant N0001410-1-0746, DARPA Grant FA9550-12-1-0406 negotiated by AFOSR, NSF IIS-1258741 and Intel ISTC Big Data. We also appreciate the discussions with Mark Girolami, Nick Foti, Ping Ao and Hong Qian."}, {"heading": "A. Background on Fokker-Planck Equation", "text": "The Fokker-Planck equation (FPE) associated with a given stochastic differential equation (SDE) describes the time evolution of the distribution on the random variables under the specified stochastic dynamics. For example, consider the SDE:\ndz = g(z)dt+N (0, 2D(z)dt), (16)\nwhere z \u2208 Rn, g(z) \u2208 Rn, D(z) \u2208 Rn\u00d7n. The distribution of z governed by Eq. (16) (denoted by pt(z)), evolves under the following equation \u2202tpt(z) = \u2212 n\u2211 i=1 \u2202zi [gi(z)pt(z)]+ n\u2211 i=1 n\u2211 j=1 \u2202zi\u2202zj [Dij(z)pt(z)].\nHere gi(z) is the i-th entry of vector g(z) and Dij(z) is the (i, j) entry of the matrix D. In the dynamics considered in this paper, z = (\u03b8, r) and\nD = [ 0 0 0 B(\u03b8) ] . (17)\nThat is, the random variables are momentum r and position \u03b8, with noise only added to r (though dependent upon \u03b8). The FPE can be written in the following compact form:\n\u2202tpt(z) = \u2212\u2207T [g(z)pt(z)] +\u2207T [D(z)\u2207pt(z)], (18) where\u2207T [g(z)pt(z)] = \u2211n i=1 \u2202zi [gi(z)pt(z)] , and\n\u2207T [D\u2207pt(\u03b8, r)] = \u2211 ij \u2202zi [Dij(z)\u2202zjpt(z)]\n= \u2211 ij \u2202zi [Dij(z)\u2202zjpt(z)] + \u2211 ij \u2202zi [(\u2202zjDij(z))pt(z)]\n= \u2211 ij \u2202zi\u2202zj [Dij(z)pt(z)].\nNote that \u2202zjDij(z) = 0 for all i, j, since \u2202rjBij(\u03b8) = 0 (the noise is only added to r and only depends on parameter \u03b8)."}, {"heading": "B. Proof of Theorem 3.1", "text": "Let G = [\n0 \u2212I I 0\n] and D = [ 0 0 0 B(\u03b8) ] . The noisy\nHamiltonian dynamics of Eq. (7) can be written as\nd [ \u03b8 r ] =\u2212 [ 0 \u2212I I 0 ] [ \u2207U(\u03b8) M\u22121r ] dt+N (0, 2Ddt)\n=\u2212G\u2207H(\u03b8, r)dt+N (0, 2Ddt).\nApplying Eq. (18), defining g(z) = \u2212G\u2207H), the corresponding FPE is given by\n\u2202tpt(\u03b8, r)=\u2207T [G\u2207H(\u03b8, r)pt(\u03b8, r)] +\u2207T [D\u2207pt(\u03b8, r)]. (19)\nWe use z = (\u03b8, r) to denote the joint variable of position and momentum. The entropy is defined by h(pt(\u03b8, r)) = \u2212 \u222b \u03b8,r f(pt(\u03b8, r))d\u03b8dr. Here f(x) = x lnx is a strictly convex function defined on (0,+\u221e). The evolution of the entropy is governed by\n\u2202th(pt(z)) =\u2202t \u222b z f(pt(z))dz\n=\u2212 \u222b z f \u2032(pt(z))\u2202tpt(z)dz\n=\u2212 \u222b z f \u2032(pt(z))\u2207T [G\u2207H(z)pt(z)]dz\n\u2212 \u222b z f \u2032(p)\u2207T [D(z)\u2207pt(z)]dz.\nThe entropy evolution can be described as the sum of two parts: the noise-free Hamiltonian dynamics and the stochastic gradient noise term. The Hamiltonian dynamics part does not change the entropy, since\n\u2212 \u222b z f \u2032(pt(z))\u2207T [G\u2207H(z)pt]dz\n= \u2212 \u222b z f \u2032(pt(z))\u2207T [G\u2207H(z)]ptdz\n\u2212 \u222b z f \u2032(pt(z))(\u2207pt(z))T [G\u2207H(z)]dz\n= \u2212 \u222b z (\u2207f(pt(z)))T [G\u2207H(z)]dz\n= \u222b z f(pt(z))\u2207T [G\u2207H(z)]dz = 0.\nIn the second equality, we use the fact that\u2207T [G\u2207H(z)] = \u2212\u2202\u03b8\u2202rH + \u2202r\u2202\u03b8H = 0. The last equality is given by integration by parts, using the assumption that the probability density vanishes at infinity and f(x) \u2192 0 as x \u2192 0 such that f(pt(z))[G\u2207H(z)]\u2192 0 as z \u2192\u221e.\nThe contribution due to the stochastic gradient noise can be calculated as\n\u2212 \u222b z f \u2032(pt(z))\u2207T [D(z)\u2207pt(z)]dz\n= \u222b z (f \u2032\u2032 (pt(z))\u2207pt(z))TD(z)\u2207pt(z)dz\n= \u222b \u03b8,r f \u2032\u2032 (pt(z))(\u2207rpt(\u03b8, r))TB(\u03b8)\u2207rpt(\u03b8, r)d\u03b8dr.\nThe first equality is again given by integration by parts, assuming that the gradient of pt vanishes at infinity faster than 1ln pt(z) . That is, f\n\u2032(pt(z))\u2207pt(z) = (1 + ln pt(z))\u2207pt(z)\u2192 0 such that f \u2032(pt(z))[D(z)\u2207pt(z)]\u2192 0 as z \u2192 \u221e. The statement of Theorem 3.1 immediately follows."}, {"heading": "C. Proof of Corollary 3.1", "text": "Assume \u03c0(\u03b8, r) = exp (\u2212H(\u03b8, r)) /Z is invariant under Eq. (7) and is a well-behaved distribution such that\nH(\u03b8, r)\u2192\u221e as \u2016\u03b8\u2016, \u2016r\u2016 \u2192 \u221e. Then it is straightforward to verify that \u03c0(\u03b8, r) and ln\u03c0(\u03b8, r)\u2207\u03c0(\u03b8, r) = 1 Z exp (\u2212H(\u03b8, r))\u2207H\n2(\u03b8, r) vanish at infinity, such that \u03c0 satisfies the conditions of Theorem 3.1. We also have \u2207r\u03c0(\u03b8, r) = 1Z exp (\u2212H(\u03b8, r))M\n\u22121r. Using the assumption that the Fisher information matrix B(\u03b8) has full rank, and noting that f \u2032\u2032(p) > 0 for p > 0, from Eq. (8) of Theorem 3.1 we conclude that entropy increases over time: \u2202th(pt(\u03b8, r))|pt=\u03c0 > 0. This contradicts that \u03c0 is the invariant distribution."}, {"heading": "D. FPE for Second-Order Langevin Dynamics", "text": "Second-order Langevin dynamics can be described by the following equation\nd [ \u03b8 r ] =\u2212 [ 0 \u2212I I B ] [ \u2207U(\u03b8) M\u22121r ] dt+N (0, 2\u03c4Ddt)\n=\u2212 [D +G]\u2207H(\u03b8, r)dt+N (0, 2\u03c4Ddt), (20)\nwhere \u03c4 is a temperature (usually set to 1). In this paper, we use the following compact form of the FPE to calculate the distribution evolution under Eq (20):\n\u2202tpt(\u03b8, r)=\u2207T {[D+G] [pt(\u03b8, r)\u2207H(\u03b8, r) + \u03c4\u2207pt(\u03b8, r)]}. (21) To derive this FPE, we apply Eq. (18) to Eq (20), defining g(z) = \u2212(D +G)\u2207H , which yields\n\u2202tpt(\u03b8, r)=\u2207T {[D+G] [\u2207H(\u03b8, r)pt(\u03b8, r)]}+\u2207T [\u03c4D\u2207pt(\u03b8, r)] .\nUsing the fact that \u2207T [G\u2207pt(\u03b8, r)] = \u2212\u2202\u03b8\u2202rpt(\u03b8, r) + \u2202r\u2202\u03b8pt(\u03b8, r) = 0, we get Eq. (21). This form of the FPE allows easy verification that the stationary distribution is given by \u03c0(\u03b8, r) \u221d e\u2212 1\u03c4H(\u03b8,r). In particular, if we substitute the target distribution into Eq. (21), we note that[\ne\u2212 1 \u03c4H(\u03b8,r)\u2207H(\u03b8, r) + \u03c4\u2207e\u2212 1\u03c4H(\u03b8, r) ] = 0\nsuch that \u2202t\u03c0(\u03b8, r) = 0, implying that \u03c0 is indeed the stationary distribution.\nThe compact form of Eq. (21) can also be used to construct other stochastic processes with the desired invariant distribution. A generalization of the FPE in Eq. (21) is given by Yin & Ao (2006). The system we have discussed in\nthis paper considers cases where G = [\n0 \u2212I I 0\n] and D\nonly depends on \u03b8. In practice, however, it might be helpful to make G depend on \u03b8 as well. For example, to make use of the Riemann geometry of the problem, as in Girolami & Calderhead (2011) and Patterson & Teh (2013), by adapting G according to the local curvature. For us to consider these more general cases, a correction term needs to be added during simulation (Shi et al., 2012). With that correction term, we still maintain the desired target distribution as the stationary distribution."}, {"heading": "E. Reversibility of SGHMC Dynamics", "text": "The dynamics of SGHMC are not reversible in the conventional definition of reversibility. However, the dynamics satisfy the following property:\nTheorem E.1. Assume P (\u03b8t, rt|\u03b80, r0) is the distribution governed by dynamics in Eq. (20), i.e. P (\u03b8t, rt|\u03b80, r0) follows Eq. (21), then for \u03c0(\u03b8, r) \u221d exp(\u2212H(\u03b8, r)),\n\u03c0(\u03b80, r0)P (\u03b8t, rt|\u03b80, r0) = \u03c0(\u03b8t,\u2212rt)P (\u03b80,\u2212r0|\u03b8t,\u2212rt). (22)\nProof. Assuming \u03c0 is the stationary distribution and P \u2217 the reverse-time Markov process associated with P : \u03c0(\u03b80, r0)P (\u03b8t, rt|\u03b80, r0) = \u03c0(\u03b8t, rt)P \u2217(\u03b80, r0|\u03b8t, rt). Let L(p) = \u2207T {[D +G] [p\u2207H(\u03b8, r) + \u03c4\u2207p]} be the generator of Markov process described by Eq. (21). The generator of the reverse process is given by L\u2217, which is the adjoint operator of L in the inner-product space l2(\u03c0), with innerproduct defined by \u3008p, q\u3009\u03c0 = Ex\u223c\u03c0(x)[p(x)q(x)]. We can verify that L\u2217(p) = \u2207T {[D \u2212 G] [p\u2207H(\u03b8, r) + \u03c4\u2207p]}. The corresponding SDE of the reverse process is given by\nd [ \u03b8 r ] = [D \u2212G]\u2207H(\u03b8, r) +N (0, 2\u03c4Ddt),\nwhich is equivalent to\nd [ \u03b8 \u2212r ] = [D +G]\u2207H(\u03b8,\u2212r) +N (0, 2\u03c4Ddt).\nThis means P \u2217(\u03b80, r0|\u03b8t, rt) = P (\u03b80,\u2212r0|\u03b8t,\u2212rt). Recalling that we assume Gaussian momentum, r, centered about 0, we also have \u03c0(\u03b8, r) = \u03c0(\u03b8,\u2212r). Together, we then have\n\u03c0(\u03b80, r0)P (\u03b8t, rt|\u03b80, r0) = \u03c0(\u03b8t, rt)P \u2217(\u03b80, r0|\u03b8t, rt) = \u03c0(\u03b8t,\u2212rt)P (\u03b80,\u2212r0|\u03b8t,\u2212rt).\nTheorem E.1 is not strictly detailed balance by the conventional definition since L\u2217 6= L and P \u2217 6= P . However, it can be viewed as a kind of time reversibility. When we reverse time, the sign of speed needs to be reversed to allow backward travel. This property is shared by the noise-free HMC dynamics of (Neal, 2010). Detailed balance can be enforced by the symmetry of r during the re-sampling step. However, we note that we do not rely on detailed balance to have \u03c0 be the stationary distribution of our noisy Hamiltonian with friction (see Eq. (9))."}, {"heading": "F. Convergence Analysis", "text": "In the paper, we have discussed that the efficiency of SGHMC decreases as the step size decreases. In practice, we usually want to trade a small amount of error for\nefficiency. In the case of SGHMC, we are interested in a small, nonzero and fast approximation of B given by B\u0302. In this case, even under the continuous dynamics, the sampling procedure contains error that relates to due to inaccurate estimation of B with B\u0302. In this section, we investigate how the choice of can be related to the error in the final stationary distribution. The sampling procedure with inaccurate estimation of B can be described with the following dynamics{ d\u03b8 =M\u22121r dt dr =\u2212\u2207U(\u03b8) dt\u2212 CM\u22121rdt+N (0, 2(C + \u03b4S)dt).\nHere, \u03b4S = B\u2212B\u0302 is the error term that is not considered by the sampling algorithm. Assume the setting where B\u0302 = 0, then we can let \u03b4 = and S = 12V . Let \u03c0\u0303 be the stationary distribution of the dynamics. In the special case when V = C, we can calculate \u03c0\u0303 exactly by\n\u03c0\u0303(\u03b8, r) \u221d exp ( \u2212 1\n1 + \u03b4 H(\u03b8, r)\n) . (23)\nThis indicates that for small , our stationary distribution is indeed close to the true stationary distribution. In general case, we consider the FPE of the distribution of this SDE, given by \u2202tp\u0303t(\u03b8, r)= [L+ \u03b4S]p\u0303t(\u03b8, r). (24) Here, L(p) = \u2207T {[D+G] [p\u2207H(\u03b8, r) +\u2207p]} is the operator corresponds to correct sampling process. Let the operator S(p) = \u2207r[S\u2207rp] correspond to the error term introduced by inaccurate B\u0302. Let us consider the \u03c72-divergence defined by\n\u03c72(p, \u03c0) = Ex\u223c\u03c0\n[ (p(x)\u2212 \u03c0(x))2\n\u03c02(x)\n] = Ex\u223c\u03c0 [ p2(x)\n\u03c02(x)\n] \u22121,\nwhich provides a measure of distance between the distribution p and the true distribution \u03c0. Theorem F.1 shows that the \u03c72-divergence decreases as \u03b4 becomes smaller. Theorem F.1. Assume pt evolves according to \u2202tpt = Lpt, and satisfies the following mixing rate \u03bb with respect to \u03c72 divergence at \u03c0\u0303: \u2202t\u03c72(pt, \u03c0)|pt=\u03c0\u0303 \u2264 \u2212\u03bb\u03c72(\u03c0\u0303, \u03c0). Further assume the process governed by S (\u2202tqt = Sqt) has bounded divergence change |\u2202t\u03c72(qt, \u03c0)| < c. Then \u03c0\u0303 satisfies\n\u03c72(\u03c0\u0303, \u03c0) < \u03b4c\n\u03bb . (25)\nProof. Consider the divergence change of p\u0303 governed by Eq.(24). It can be decomposed into two components, the change of divergence due to L, and the change of divergence due to \u03b4S\n\u2202t\u03c7 2(p\u0303t, \u03c0) =Ex\u223c\u03c0\n[ p\u0303(x)\n\u03c02(x) [L+ \u03b4S]p\u0303t(x) ] =Ex\u223c\u03c0 [ p\u0303t(x)\n\u03c02(x) Lp\u0303t(x)\n] + \u03b4Ex\u223c\u03c0 [ p\u0303(x)\n\u03c02(x) Sp\u0303t(x) ] =\u2202t\u03c7 2(pt, \u03c0)|pt=p\u0303t + \u03b4\u2202t\u03c7 2(qt, \u03c0)|qt=p\u0303t .\nWe then evaluate the above equation at the stationary distribution of the inaccurate dynamics \u03c0\u0303. Since \u2202t\u03c7 2(p\u0303t, \u03c0)|p\u0303=\u03c0\u0303 = 0, we have\n\u03bb\u03c72(\u03c0\u0303, \u03c0) = \u03b4 \u2223\u2223(\u2202t\u03c72(qt, \u03c0)|qt=\u03c0\u0303)\u2223\u2223 < \u03b4c.\nThis theorem can also be used to measure the error in SGLD, and justifies the use of small finite step sizes in SGLD. We should note that the mixing rate bound \u03bb at \u03c0\u0303 exists for SGLD and can be obtained using spectral analysis (Levin et al., 2008), but the corresponding bounds for SGHMC are unclear due to the irreversibility of the process. We leave this for future work.\nOur proof relies on a contraction bound relating the error in the transition distribution to the error in the final stationary distribution. Although our argument is based on a continuous-time Markov process, we should note that a similar guarantee can also be proven in terms of a discretetime Markov transition kernel. We refer the reader to (Korattikara et al., 2014) and (Bardenet et al., 2014) for further details."}, {"heading": "G. Setting SGHMC Parameters", "text": "As we discussed in Sec. 3.3, we can connect SGHMC with SGD with momentum by rewriting the dynamics as (see Eq.(15)){\n\u2206\u03b8 = v \u2206v =\u2212\u03b7\u2207U\u0303(x)\u2212 \u03b1v +N (0, 2(\u03b1\u2212 \u03b2\u0302)\u03b7).\nIn analogy to SGD with momentum, we call \u03b7 the learning rate and 1\u2212\u03b1 the momentum term. This equivalent update rule is cleaner and we recommend parameterizing SGHMC in this form.\nThe \u03b2\u0302 term corresponds to the estimation of noise that comes from the gradient. One simple choice is to ignore the gradient noise by setting \u03b2\u0302 = 0 and relying on small . We can also set \u03b2\u0302 = \u03b7V\u0302 /2, where V\u0302 is estimated using empirical Fisher information as in (Ahn et al., 2012).\nThere are then three parameters: the learning rate \u03b7, momentum decay \u03b1, and minibatch size |D\u0303|. Define \u03b2 = M\u22121B = 12\u03b7V (\u03b8) to be the exact term induced by introduction of the stochastic gradient. Then, we have\n\u03b2 = O ( \u03b7 |D| |D\u0303| I ) , (26)\nwhere I is fisher information matrix of the gradient, |D| is size of training data, |D\u0303| is size of minibatch, and \u03b7 is our learning rate. We want to keep \u03b2 small so that the resulting dynamics are governed by the user-controlled term and the\nsampling algorithm has a stationary distribution close to the target distribution. From Eq. (26), we see that there is no free lunch here: as the training size gets bigger, we can either set a small learning rate \u03b7 = O( 1|D| ) or use a bigger minibatch size |D\u0303|. In practice, choosing \u03b7 = O( 1|D| ) gives better numerical stability, since we also need to multiply \u03b7 by \u2207U\u0303 , the mean of the stochastic gradient. Large \u03b7 can cause divergence, especially when we are not close to the mode of distribution. We note that the same discussion holds for SGLD (Welling & Teh, 2011).\nIn practice, we find that using a minibatch size of hundreds (e.g |D\u0303| = 500) and fixing \u03b1 to a small number (e.g. 0.01 or 0.1) works well. The learning rate can be set as \u03b7 = \u03b3/|D|, where \u03b3 is the \u201cper-batch learning rate\u201d, usually set to 0.1 or 0.01. This method of setting parameters is also commonly used for SGD with momentum (Sutskever et al., 2013)."}, {"heading": "H. Experimental Setup", "text": "H.1. Bayesian Neural Network\nThe Bayesian neural network model used in Sec. 4.2 can be described by the following equation:\nP (y = i|x) \u221d exp ( ATi \u03c3(B Tx+ b) + ai ) . (27)\nHere, y \u2208 {1, 2, \u00b7 \u00b7 \u00b7 , 10} is the output label of a digit. A \u2208 R10\u00d7100 contains the weight for output layers and we use Ai to indicate i-th column of A. B \u2208 Rd\u00d7100 contains the weight for the first layer. We also introduce a \u2208 R10 and b \u2208 R100 as bias terms in the model. In the MNIST dataset, the input dimension d = 784. We place a Gaussian prior on the model parameters\nP (A) \u221d exp(\u2212\u03bbA\u2016A\u20162), P (B) \u221d exp(\u2212\u03bbB\u2016B\u20162)\nP (a) \u221d exp(\u2212\u03bba\u2016a\u20162), P (b) \u221d exp(\u2212\u03bbb\u2016a\u20162). We further place gamma priors on each of the precision terms \u03bb:\n\u03bbA, \u03bbB , \u03bba, \u03bbb i.i.d.\u223c \u0393(\u03b1, \u03b2).\nWe simply set \u03b1 and \u03b2 to 1 since the results are usually insensitive to these parameters. We generate samples from the posterior distribution\nP (\u0398|D) \u221d \u220f y,x\u2208D P (y|x,\u0398)P (\u0398), (28)\nwhere parameter set \u0398 = {A,B, a, b, \u03bbA, \u03bbB , \u03bba, \u03bbb}. The sampling procedure is carried out by alternating the following steps:\n\u2022 Sample weights from P (A,B, a, b|\u03bbA, \u03bbB , \u03bba, \u03bbb,D) using SGHMC or SGLD with minibatch of 500 instances. Sample for 100 steps before updating hyperparameters.\n\u2022 Sample \u03bb from P (\u03bbA, \u03bbB , \u03bba, \u03bbb|A,B, a, b) using a Gibbs step. Note that the posterior for \u03bb is a gamma distribution by conditional conjugacy.\nWe used the validation set to select parameters for the various methods we compare. Specifically, for SGD and SGLD, we tried step-sizes \u2208 {0.1, 0.2, 0.4, 0.8} \u00d7 10\u22124, and the best settings were found to be = 0.1 \u00d7 10\u22124 for SGD and = 0.2 \u00d7 10\u22124 for SGLD. We then further tested = 0.16 \u00d7 10\u22124 and = 0.06 \u00d7 10\u22124 for SGD, and found = 0.16 \u00d7 10\u22124 gave the best result, thus we used this setting for SGD. For SGD with momentum and SGHMC, we fixed \u03b1 = 0.01 and \u03b2\u0302 = 0, and tried \u03b7 \u2208 {0.1, 0.2, 0.4, 0.8} \u00d7 10\u22125. The best settings were \u03b7 = 0.4 \u00d7 10\u22125 for SGD with momentum, and \u03b7 = 0.2 \u00d7 10\u22125 for SGHMC. For the optimization-based methods, we use tried regularizer \u03bb \u2208 {0, 0.1, 1, 10, 100}, and \u03bb = 1 was found to give the best performance.\nH.2. Online Bayesian Probabilistic Matrix Factorization\nThe Bayesian probabilistic matrix factorization (BPMF) model used in Sec. 4.3 can be described as:\n\u03bbU , \u03bbV , \u03bba, \u03bbb i.i.d.\u223c Gamma(1, 1)\nUki \u223cN (0, \u03bb\u22121U ), Vkj \u223c N (0, \u03bb \u22121 V ),\nai \u223cN (0, \u03bb\u22121a ), bi \u223c N (0, \u03bb\u22121b )\nYij |U, V \u223cN (UTi Vj + ai + bj , \u03c4\u22121).\n(29)\nThe Ui \u2208 Rd and Vj \u2208 Rd are latent vectors for user i and movie j, while ai and bj are bias terms. We use a slightly simplified model than the BPMF model considered in (Salakhutdinov & Mnih, 2008a), where we only place priors on precision variables \u03bb = {\u03bbU , \u03bbV , \u03bba, \u03bbb}. However, the model still benefits from Bayesian inference by integrating over the uncertainty in the crucial regularization parameter \u03bb. We generate samples from the posterior distribution\nP (\u0398|Y ) \u221d P (Y |\u0398)P (\u0398), (30)\nwith the parameter set \u0398 = {U, V, a, b, \u03bbU , \u03bbV , \u03bba, \u03bbb}. The sampling procedure is carried out by alternating the followings\n\u2022 Sample weights from P (U, V, a, b|\u03bbU , \u03bbV , \u03bba, \u03bbb, Y ) using SGHMC or SGLD with a minibatch size of 4,000 ratings. Sample for 2, 000 steps before updating the hyper-parameters.\n\u2022 Sample \u03bb from P (\u03bbU , \u03bbV , \u03bba, \u03bbb|U, V, a, b) using a Gibbs step.\nThe training parameters for this experiment were directly selected using cross-validation. Specifically, for SGD and\nSGLD, we tried step-sizes \u2208 {0.1, 0.2, 0.4, 0.8, 1.6} \u00d7 10\u22125, and the best settings were found to be = 0.4\u00d710\u22125 for SGD and = 0.8 \u00d7 10\u22125 for SGLD. For SGD with momentum and SGHMC, we fixed \u03b1 = 0.05 and \u03b2\u0302 = 0, and tried \u03b7 \u2208 {0.1, 0.2, 0.4, 0.8} \u00d7 10\u22126. The best settings were \u03b7 = 0.4 \u00d7 10\u22126 for SGD with momentum, and \u03b7 = 0.4\u00d7 10\u22126 for SGHMC."}], "references": [{"title": "Bayesian posterior sampling via stochastic gradient Fisher scoring", "author": ["S. Ahn", "A. Korattikara", "M. Welling"], "venue": "In Proceedings of the 29th International Conference on Machine Learning", "citeRegEx": "Ahn et al\\.,? \\Q2012\\E", "shortCiteRegEx": "Ahn et al\\.", "year": 2012}, {"title": "Towards scaling up Markov chain Monte Carlo: An adaptive subsampling approach", "author": ["R. Bardenet", "A. Doucet", "C. Holmes"], "venue": "In Proceedings of the 30th International Conference on Machine Learning (ICML\u201914),", "citeRegEx": "Bardenet et al\\.,? \\Q2014\\E", "shortCiteRegEx": "Bardenet et al\\.", "year": 2014}, {"title": "Hybrid Monte Carlo", "author": ["S. Duane", "A.D. Kennedy", "B.J. Pendleton", "D. Roweth"], "venue": "Physics Letters B,", "citeRegEx": "Duane et al\\.,? \\Q1987\\E", "shortCiteRegEx": "Duane et al\\.", "year": 1987}, {"title": "Riemann manifold Langevin and Hamiltonian Monte Carlo methods", "author": ["M. Girolami", "B. Calderhead"], "venue": "Journal of the Royal Statistical Society Series B,", "citeRegEx": "Girolami and Calderhead,? \\Q2011\\E", "shortCiteRegEx": "Girolami and Calderhead", "year": 2011}, {"title": "The No-U-Turn sampler: Adaptively setting path lengths in Hamiltonian", "author": ["M.D. Hoffman", "A. Gelman"], "venue": "Monte Carlo. arXiv,", "citeRegEx": "Hoffman and Gelman,? \\Q2011\\E", "shortCiteRegEx": "Hoffman and Gelman", "year": 2011}, {"title": "Stochastic variational inference", "author": ["M.D. Hoffman", "D.M. Blei", "C. Wang", "J. Paisley"], "venue": "Journal of Maching Learning Research,", "citeRegEx": "Hoffman et al\\.,? \\Q2013\\E", "shortCiteRegEx": "Hoffman et al\\.", "year": 2013}, {"title": "A generalized guided Monte Carlo algorithm", "author": ["A.M. Horowitz"], "venue": "Physics Letters B,", "citeRegEx": "Horowitz,? \\Q1991\\E", "shortCiteRegEx": "Horowitz", "year": 1991}, {"title": "Austerity in MCMC land: Cutting the Metropolis-Hastings budget", "author": ["A. Korattikara", "Y. Chen", "M. Welling"], "venue": "In Proceedings of the 30th International Conference on Machine Learning (ICML\u201914),", "citeRegEx": "Korattikara et al\\.,? \\Q2014\\E", "shortCiteRegEx": "Korattikara et al\\.", "year": 2014}, {"title": "MCMC using Hamiltonian dynamics", "author": ["R.M. Neal"], "venue": "Handbook of Markov Chain Monte Carlo,", "citeRegEx": "Neal,? \\Q2010\\E", "shortCiteRegEx": "Neal", "year": 2010}, {"title": "Robust stochastic approximation approach to stochastic programming", "author": ["A. Nemirovski", "A. Juditsky", "G. Lan", "A. Shapiro"], "venue": "SIAM Journal on Optimization,", "citeRegEx": "Nemirovski et al\\.,? \\Q2009\\E", "shortCiteRegEx": "Nemirovski et al\\.", "year": 2009}, {"title": "A stochastic approximation method", "author": ["H. Robbins", "S. Monro"], "venue": "The Annals of Mathematical Statistics,", "citeRegEx": "Robbins and Monro,? \\Q1951\\E", "shortCiteRegEx": "Robbins and Monro", "year": 1951}, {"title": "Bayesian probabilistic matrix factorization using Markov chain Monte Carlo", "author": ["R. Salakhutdinov", "A. Mnih"], "venue": "In Proceedings of the 25th International Conference on Machine Learning", "citeRegEx": "Salakhutdinov and Mnih,? \\Q2008\\E", "shortCiteRegEx": "Salakhutdinov and Mnih", "year": 2008}, {"title": "Relation of a new interpretation of stochastic differential equations to Ito process", "author": ["J. Shi", "T. Chen", "R. Yuan", "B. Yuan", "P. Ao"], "venue": "Journal of Statistical Physics,", "citeRegEx": "Shi et al\\.,? \\Q2012\\E", "shortCiteRegEx": "Shi et al\\.", "year": 2012}, {"title": "On the importance of initialization and momentum in deep learning", "author": ["I. Sutskever", "J. Martens", "G.E. Dahl", "G.E. Hinton"], "venue": "In Proceedings of the 30th International Conference on Machine Learning (ICML\u201913),", "citeRegEx": "Sutskever et al\\.,? \\Q2013\\E", "shortCiteRegEx": "Sutskever et al\\.", "year": 2013}, {"title": "On the Theory of the Brownian Motion II", "author": ["M.C. Wang", "G.E. Uhlenbeck"], "venue": "Reviews of Modern Physics,", "citeRegEx": "Wang and Uhlenbeck,? \\Q1945\\E", "shortCiteRegEx": "Wang and Uhlenbeck", "year": 1945}, {"title": "Adaptive Hamiltonian and Riemann manifold Monte Carlo", "author": ["Z. Wang", "S. Mohamed", "D. Nando"], "venue": "In Proceedings of the 30th International Conference on Machine Learning (ICML\u201913),", "citeRegEx": "Wang et al\\.,? \\Q2013\\E", "shortCiteRegEx": "Wang et al\\.", "year": 2013}, {"title": "Bayesian learning via stochastic gradient Langevin dynamics", "author": ["M. Welling", "Y.W. Teh"], "venue": "In Proceedings of the 28th International Conference on Machine Learning", "citeRegEx": "Welling and Teh,? \\Q2011\\E", "shortCiteRegEx": "Welling and Teh", "year": 2011}, {"title": "Existence and construction of dynamical potential in nonequilibrium processes without detailed balance", "author": ["L. Yin", "P. Ao"], "venue": "Journal of Physics A: Mathematical and General,", "citeRegEx": "Yin and Ao,? \\Q2006\\E", "shortCiteRegEx": "Yin and Ao", "year": 2006}], "referenceMentions": [{"referenceID": 2, "context": "Hamiltonian Monte Carlo (HMC) (Duane et al., 1987; Neal, 2010) sampling methods provide a powerful Markov chain Monte Carlo (MCMC) sampling algorithm.", "startOffset": 30, "endOffset": 62}, {"referenceID": 8, "context": "Hamiltonian Monte Carlo (HMC) (Duane et al., 1987; Neal, 2010) sampling methods provide a powerful Markov chain Monte Carlo (MCMC) sampling algorithm.", "startOffset": 30, "endOffset": 62}, {"referenceID": 8, "context": "Based on the attractive properties of HMC in terms of rapid exploration of the state space, HMC methods have grown in popularity recently (Neal, 2010; Hoffman & Gelman, 2011; Wang et al., 2013).", "startOffset": 138, "endOffset": 193}, {"referenceID": 15, "context": "Based on the attractive properties of HMC in terms of rapid exploration of the state space, HMC methods have grown in popularity recently (Neal, 2010; Hoffman & Gelman, 2011; Wang et al., 2013).", "startOffset": 138, "endOffset": 193}, {"referenceID": 5, "context": "Recently, in a variety of machine learning algorithms, we have witnessed the many successes of utilizing a noisy estimate of the gradient based on a minibatch of data to scale the algorithms (Robbins & Monro, 1951; Hoffman et al., 2013; Welling & Teh, 2011).", "startOffset": 191, "endOffset": 257}, {"referenceID": 9, "context": "A majority of these developments have been in optimization-based algorithms (Robbins & Monro, 1951; Nemirovski et al., 2009), and a question is whether similar efficiencies can be garnered by sampling-based algorithms that maintain many desirable theoretical properties for Bayesian inference.", "startOffset": 76, "endOffset": 124}, {"referenceID": 0, "context": "One attempt at applying such methods in a sampling context is the recently proposed stochastic gradient Langevin dynamics (SGLD) (Welling & Teh, 2011; Ahn et al., 2012; Patterson & Teh, 2013).", "startOffset": 129, "endOffset": 191}, {"referenceID": 7, "context": "The efficiency of this MH step could potentially be improved using the recent results of (Korattikara et al., 2014; Bardenet et al., 2014).", "startOffset": 89, "endOffset": 138}, {"referenceID": 1, "context": "The efficiency of this MH step could potentially be improved using the recent results of (Korattikara et al., 2014; Bardenet et al., 2014).", "startOffset": 89, "endOffset": 138}, {"referenceID": 2, "context": "(2) Hamiltonian (Hybrid) Monte Carlo (HMC) (Duane et al., 1987; Neal, 2010) provides a method for proposing samples of \u03b8 in a Metropolis-Hastings (MH) framework that efficiently explores the state space as compared to standard random-walk proposals.", "startOffset": 43, "endOffset": 75}, {"referenceID": 8, "context": "(2) Hamiltonian (Hybrid) Monte Carlo (HMC) (Duane et al., 1987; Neal, 2010) provides a method for proposing samples of \u03b8 in a Metropolis-Hastings (MH) framework that efficiently explores the state space as compared to standard random-walk proposals.", "startOffset": 43, "endOffset": 75}, {"referenceID": 8, "context": "(4) concrete, a common analogy in 2D is as follows (Neal, 2010).", "startOffset": 51, "endOffset": 63}, {"referenceID": 15, "context": "The \u201cNo U-Turn\u201d sampler (Hoffman & Gelman, 2011) and the methods proposed by Wang et al. (2013) allow automatic tuning of the step size, , and number of simulation steps,m.", "startOffset": 77, "endOffset": 96}, {"referenceID": 0, "context": "Empirically, in a wide range of settings, simply considering a minibatch size on the order of hundreds of data points is sufficient for the central limit theorem approximation to be accurate (Ahn et al., 2012).", "startOffset": 191, "endOffset": 209}, {"referenceID": 8, "context": "For the correctness of an MH step (based on the entire dataset), we appeal to the same arguments made for the HMC data-splitting technique of Neal (2010). This approach likewise considers minibatches of data and simulating the (continuous) Hamiltonian dynamics on each batch sequentially.", "startOffset": 142, "endOffset": 154}, {"referenceID": 8, "context": "For the correctness of an MH step (based on the entire dataset), we appeal to the same arguments made for the HMC data-splitting technique of Neal (2010). This approach likewise considers minibatches of data and simulating the (continuous) Hamiltonian dynamics on each batch sequentially. Importantly, Neal (2010) alludes to the fact that the resulting H from the split-data scenario may be far from that of the full-data scenario after simulation, which leads to lower acceptance rates and thereby reduces the apparent computational gains in simulation.", "startOffset": 142, "endOffset": 314}, {"referenceID": 8, "context": "For the correctness of an MH step (based on the entire dataset), we appeal to the same arguments made for the HMC data-splitting technique of Neal (2010). This approach likewise considers minibatches of data and simulating the (continuous) Hamiltonian dynamics on each batch sequentially. Importantly, Neal (2010) alludes to the fact that the resulting H from the split-data scenario may be far from that of the full-data scenario after simulation, which leads to lower acceptance rates and thereby reduces the apparent computational gains in simulation. Empirically, as we demonstrate in Fig. 2, we see that even finite-length simulations from the noisy system can diverge quite substantially from those of the noise-free system. Although the minibatch-based HMC technique considered herein is slightly different from that of Neal (2010), the theory we have developed in Theorem 3.", "startOffset": 142, "endOffset": 839}, {"referenceID": 8, "context": "For the correctness of an MH step (based on the entire dataset), we appeal to the same arguments made for the HMC data-splitting technique of Neal (2010). This approach likewise considers minibatches of data and simulating the (continuous) Hamiltonian dynamics on each batch sequentially. Importantly, Neal (2010) alludes to the fact that the resulting H from the split-data scenario may be far from that of the full-data scenario after simulation, which leads to lower acceptance rates and thereby reduces the apparent computational gains in simulation. Empirically, as we demonstrate in Fig. 2, we see that even finite-length simulations from the noisy system can diverge quite substantially from those of the noise-free system. Although the minibatch-based HMC technique considered herein is slightly different from that of Neal (2010), the theory we have developed in Theorem 3.1 surrounding the high-entropy properties of the resulting invariant distribution of Eq. (7) provides some intuition for the observed deviations in H both in our experiments and those of Neal (2010).", "startOffset": 142, "endOffset": 1081}, {"referenceID": 6, "context": "One possible direction of future research is to consider using the recent results of Korattikara et al. (2014) and Bardenet et al.", "startOffset": 85, "endOffset": 111}, {"referenceID": 1, "context": "(2014) and Bardenet et al. (2014) that show that it is possible to do MH using a subset of data.", "startOffset": 11, "endOffset": 34}, {"referenceID": 12, "context": "(9) can be written in the following decomposed form (Yin & Ao, 2006; Shi et al., 2012)", "startOffset": 52, "endOffset": 86}, {"referenceID": 6, "context": "Our revised momentum update can also be viewed as akin to partial momentum refreshment (Horowitz, 1991; Neal, 1993), which also corresponds to second-order Langevin dynamics.", "startOffset": 87, "endOffset": 115}, {"referenceID": 8, "context": "Such partial momentum refreshment was shown to not greatly improve HMC in the case of noise-free gradients (Neal, 2010).", "startOffset": 107, "endOffset": 119}, {"referenceID": 0, "context": "It is also possible to set B\u0302 = 12 V\u0302 , where V\u0302 is estimated using empirical Fisher information as in (Ahn et al., 2012) for SGLD.", "startOffset": 103, "endOffset": 121}, {"referenceID": 0, "context": "Importantly, we note that our SGHMC time complexity is the same as that of SGLD (Welling & Teh, 2011; Ahn et al., 2012) in both parameter settings.", "startOffset": 80, "endOffset": 119}, {"referenceID": 0, "context": "For a decaying series of step sizes t, an MH step is not required (Welling & Teh, 2011; Ahn et al., 2012)1.", "startOffset": 66, "endOffset": 105}, {"referenceID": 0, "context": "As in (Welling & Teh, 2011; Ahn et al., 2012) for SGLD, we consider using a small, non-zero leading to some bias.", "startOffset": 6, "endOffset": 45}, {"referenceID": 13, "context": "A more sophisticated strategy involves using momentum scheduling (Sutskever et al., 2013).", "startOffset": 65, "endOffset": 89}, {"referenceID": 8, "context": "It is known that a benefit of HMC over many other MCMC algorithms is the efficiency in sampling from correlated distributions (Neal, 2010)\u2014this is where the introduction of the momentum variable shines.", "startOffset": 126, "endOffset": 138}], "year": 2014, "abstractText": "Hamiltonian Monte Carlo (HMC) sampling methods provide a mechanism for defining distant proposals with high acceptance probabilities in a Metropolis-Hastings framework, enabling more efficient exploration of the state space than standard random-walk proposals. The popularity of such methods has grown significantly in recent years. However, a limitation of HMC methods is the required gradient computation for simulation of the Hamiltonian dynamical system\u2014such computation is infeasible in problems involving a large sample size or streaming data. Instead, we must rely on a noisy gradient estimate computed from a subset of the data. In this paper, we explore the properties of such a stochastic gradient HMC approach. Surprisingly, the natural implementation of the stochastic approximation can be arbitrarily bad. To address this problem we introduce a variant that uses second-order Langevin dynamics with a friction term that counteracts the effects of the noisy gradient, maintaining the desired target distribution as the invariant distribution. Results on simulated data validate our theory. We also provide an application of our methods to a classification task using neural networks and to online Bayesian matrix factorization.", "creator": "LaTeX with hyperref package"}}}