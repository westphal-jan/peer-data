{"id": "1405.0915", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "5-May-2014", "title": "Reasoning with Probabilistic Logics", "abstract": "The interest in the combination of probability with logics for modeling the world has rapidly increased in the last few years. One of the most effective approaches is the Distribution Semantics which was adopted by many logic programming languages and in Descripion Logics. In this paper, we illustrate the work we have done in this research field by presenting a probabilistic semantics for description logics and reasoning and learning algorithms. In particular, we present in detail the system TRILL P, which computes the probability of queries w.r.t. probabilistic knowledge bases, which has been implemented in Prolog. An extended abstract / full version of a paper accepted to be presented at the Doctoral Consortium of the 30th International Conference on Logic Programming (ICLP 2014), July 19-22, Vienna, Austria.", "histories": [["v1", "Mon, 5 May 2014 14:57:08 GMT  (39kb)", "https://arxiv.org/abs/1405.0915v1", "An extended abstract / full version of a paper accepted to be presented at the Doctoral Consortium of the 30th International Conference on Logic Programming (ICLP 2014), July 19-22, Vienna, Austria"], ["v2", "Tue, 13 May 2014 13:18:59 GMT  (39kb)", "http://arxiv.org/abs/1405.0915v2", "An extended abstract / full version of a paper accepted to be presented at the Doctoral Consortium of the 30th International Conference on Logic Programming (ICLP 2014), July 19-22, Vienna, Austria"], ["v3", "Thu, 29 Jan 2015 09:26:41 GMT  (39kb)", "http://arxiv.org/abs/1405.0915v3", "An extended abstract / full version of a paper accepted to be presented at the Doctoral Consortium of the 30th International Conference on Logic Programming (ICLP 2014), July 19-22, Vienna, Austria"]], "COMMENTS": "An extended abstract / full version of a paper accepted to be presented at the Doctoral Consortium of the 30th International Conference on Logic Programming (ICLP 2014), July 19-22, Vienna, Austria", "reviews": [], "SUBJECTS": "cs.AI", "authors": ["riccardo zese"], "accepted": false, "id": "1405.0915"}, "pdf": {"name": "1405.0915.pdf", "metadata": {"source": "CRF", "title": "Reasoning with Probabilistic Logics", "authors": ["RICCARDO ZESE"], "emails": ["riccardo.zese@unife.it)"], "sections": [{"heading": null, "text": "ar X\niv :1\n40 5.\n09 15\nv3 [\ncs .A\nI] 2\n9 Ja\nKEYWORDS: Probabilistic Description Logics, Probabilistic Reasoning, Tableau, Prolog, Semantic Web."}, {"heading": "1 Introduction", "text": "In the last few years, many researchers tried to combine first-order logic and probability for modeling uncertain domains and performing inferece and learning. In the field of Probabilistic Logic Programming (PLP for short) many proposals have been presented. An effective and popular approach is the Distribution Semantics (Sato 1995), which underlies many PLP languages such as PRISM (Sato 1995; Sato and Kameya 2001), Independent Choice Logic (Poole 1997), Logic Programs with Annotated Disjunctions (Vennekens et al. 2004) and ProbLog (De Raedt et al. 2007). Along this line, many reserchers proposed to combine probability theory with Description Logics (DLs for short) (Lukasiewicz and Straccia 2008; Straccia 2008). DLs are at the basis of the Web Ontology Language (OWL for short), a family of knowledge representation formalisms used for modeling information of the Semantic Web (Hitzler et al. 2009). In (Riguzzi et al. 2012) we presented DISPONTE, a probabilistic semantics for DLs based on the distribution semantics that allows probabilistic assertional and terminological knowledge.\nIn order to allow inference over the information in the Semantic Web, many efficient DL reasoners, such as Pellet (Sirin et al. 2007), RacerPro (Haarslev et al. 2012) and HermiT (Shearer et al. 2008), have been developed. Despite the availability of many DL reasoners, the number of probabilistic reasoners is quite small. In (Riguzzi et al. 2013a) we presented BUNDLE, a reasoner based on Pellet that extends it by allowing to perform inference on DISPONTE theories. Most of the available DL reasoners, included BUNDLE,\nexploit procedural languages for implementing their reasoning algorithms. Nonetheless, some of them use non-deterministic operators for doing inference. We implemented a reasoner, called TRILL (Zese et al. 2013), that exploits Prolog for managing the nondeterminism. Then, we developed a new version of TRILL, called TRILLP and we added in both versions the ability to manage DISPONTE knowledge bases (KBs for short) and computing the probability of a query given a probabilistic KB under the DISPONTE semantics.\nSince a problem of probabilistic KBs is that the parameters are difficult to define, in (Riguzzi et al. 2013b) we presented EDGE that learns the parameters of a DISPONTE KB from the information available in the domain. Moreover, we are currently working on the extension of EDGE in order also to learn the structure of the probabilistic KB togheter with the parameters.\nIn the field of PLP, we are working at improving existing algorithms. We have considered lifted inference that allows to perform inference in a time that is polynomial in the variables\u2019 domain size. We applied lifted variable elimination, and GC-FOVE (Taghipour et al. 2013) in particular, to PLP and developed the algorithm LP2.\nThe paper is organised as follows. Section 2 briefly introduces ALC, while Section 3 presents the DISPONTE semantics. Section 4 defines the problem of finding explanations for a probabilistic query w.r.t. a given probabilistic KB. Section 5 presents TRILL and TRILLP and Section 6 discusses related work. Section 7 shows experiments and section 8 discusses our achievements and future plans. Finally, Section 9 concludes the paper."}, {"heading": "2 Description Logics", "text": "DLs are knowledge representation formalisms that are at the basis of the Semantic Web (Baader et al. 2003; Baader et al. 2008) and are used for modeling ontologies. They are represented using a syntax based on concepts, basically sets of individuals of the domain, and roles, sets of pairs of individuals of the domain. In this section, we recall the expressive description logic ALC (Schmidt-Schau\u00df and Smolka 1991). We refer to (Lukasiewicz and Straccia 2008) for a detailed description of SHOIN (D) DL, that is at the basis of OWL DL.\nLet A, R and I be sets of atomic concepts, roles and individuals. A role is an atomic role R \u2208 R. Concepts are defined by induction as follows. Each C \u2208 A, \u22a5 and \u22a4 are concepts. If C, C1 and C2 are concepts and R \u2208 R, then (C1\u2293C2), (C1\u2294C2), \u00acC, \u2203R.C, and \u2200R.C are concepts. Let C, D be concepts, R \u2208 R and a, b \u2208 I. An ABox A is a finite set of concept membership axioms a : C and role membership axioms (a, b) : R, while a TBox T is a finite set of concept inclusion axioms C \u2291 D. C \u2261 D abbreviates C \u2291 D and D \u2291 C.\nA knowledge base K = (T ,A) consists of a TBox T and an ABox A. A KB K is assigned a semantics in terms of set-theoretic interpretations I = (\u2206I , \u00b7I), where \u2206I is a non-empty domain and \u00b7I is the interpretation function that assigns an element in \u2206I to each a \u2208 I, a subset of \u2206I to each C \u2208 A and a subset of \u2206I \u00d7\u2206I to each R \u2208 R.\nA query Q over a KB K is an axiom for which we want to test the entailment from the knowledge base, written K |= Q. The entailment test may be reduced to checking the unsatisfiability of a concept in the knowledge base, i.e., the emptiness of the concept. For\nexample, the entailment of the axiom C \u2291 D may be tested by checking the satisfiability of the concept C \u2293 \u00acD."}, {"heading": "3 The DISPONTE Semantics", "text": "DISPONTE (Riguzzi et al. 2012) applies the distribution semantics (Sato 1995) of probabilistic logic programming to DLs. A program following this semantics defines a probability distribution over normal logic programs called worlds. Then the distribution is extended to queries and the probability of a query is obtained by marginalizing the joint distribution of the query and the programs.\nIn DISPONTE, a probabilistic knowledge base K is a set of certain axioms or probabilistic axioms in which each axiom is independent evidence. Certain axioms take the form of regular DL axioms while probabilistic axioms are p :: E where p is a real number in [0, 1] and E is a DL axiom.\nThe idea of DISPONTE is to associate independent Boolean random variables to the probabilistic axioms. To obtain a world, we include every formula obtained from a certain axiom. For each probabilistic axiom, we decide whether to include it or not in w. A world therefore is a non probabilistic KB that can be assigned a semantics in the usual way. A query is entailed by a world if it is true in every model of the world.\nThe probability p can be interpreted as an epistemic probability, i.e., as the degree of our belief in axiom E. For example, a probabilistic concept membership axiom p :: a : C means that we have degree of belief p in C(a). A probabilistic concept inclusion axiom of the form p :: C \u2291 D represents our belief in the truth of C \u2291 D with probability p.\nFormally, an atomic choice is a couple (Ei, k) where Ei is the ith probabilistic axiom and k \u2208 {0, 1}. k indicates whether Ei is chosen to be included in a world (k = 1) or not (k = 0). A composite choice \u03ba is a consistent set of atomic choices, i.e., (Ei, k) \u2208 \u03ba, (Ei,m) \u2208 \u03ba implies k = m (only one decision is taken for each formula). The probability of a composite choice \u03ba is P (\u03ba) = \u220f\n(Ei,1)\u2208\u03ba pi \u220f (Ei,0)\u2208\u03ba (1 \u2212 pi), where pi is the probability\nassociated with axiom Ei. A selection \u03c3 is a total composite choice, i.e., it contains an atomic choice (Ei, k) for every probabilistic axiom of the probabilistic KB. A selection \u03c3 identifies a theory w\u03c3 called a world in this way: w\u03c3 = C\u222a{Ei|(Ei, 1) \u2208 \u03c3} where C is the set of certain axioms. Let us indicate with SK the set of all selections and with WK the set of all worlds. The probability of a world w\u03c3 is P (w\u03c3) = P (\u03c3) = \u220f\n(Ei,1)\u2208\u03c3 pi \u220f (Ei,0)\u2208\u03c3 (1\u2212\npi). P (w\u03c3) is a probability distribution over worlds, i.e., \u2211\nw\u2208WK P (w) = 1.\nWe can now assign probabilities to queries. Given a world w, the probability of a query Q is defined as P (Q|w) = 1 if w |= Q and 0 otherwise. The probability of a query can be defined by marginalizing the joint probability of the query and the worlds, i.e. P (Q) = \u2211\nw\u2208WK P (Q,w) = \u2211 w\u2208WK P (Q|w)p(w) = \u2211 w\u2208WK:w|=Q P (w).\nExample 3.1 Consider the following KB, inspired by the people+pets ontology (Patel-Schneider et al. 2003):\n0.5 :: \u2203hasAnimal.Pet \u2291 NatureLover 0.6 :: Cat \u2291 Pet (kevin, tom) : hasAnimal (kevin,fluffy) : hasAnimal tom : Cat fluffy : Cat\nThe KB indicates that the individuals that own an animal which is a pet are nature lovers with a 50% probability and that kevin has the animals fluffy and tom. Fluffy and tom are cats and cats are pets with probability 60%. We associate a Boolean variable to each axiom as follow\nF1 = \u2203hasAnimal.Pet \u2291 NatureLover, F2 = (kevin,fluffy) : hasAnimal, F3 = (kevin, tom) : hasAnimal, F4 = fluffy : Cat, F5 = tom : Cat and F6 = Cat \u2291 Pet.\nThe KB has four worlds and the query axiom Q = kevin : NatureLover is true in one of them, the one corresponding to the selection {(F1, 1), (F2, 1)}. The probability of the query is P (Q) = 0.5 \u00b7 0.6 = 0.3.\nExample 3.2 Sometimes we have to combine knowledge from multiple, untrusted sources, each one with a different reliability. Consider a KB similar to the one of Example 3.1 but where we have a single cat, fluffy .\n\u2203hasAnimal.Pet \u2291 NatureLover (kevin,fluffy) : hasAnimal Cat \u2291 Pet and there are two sources of information with different reliability that provide the information that fluffy is a cat. On one source the user has a degree of belief of 0.4, i.e., he thinks it is correct with a 40% probability, while on the other source he has a degree of belief 0.3. The user can reason on this knowledge by adding the following statements to his KB:\n0.4 :: fluffy : Cat 0.3 :: fluffy : Cat The two statements represent independent evidence on fluffy being a cat. We associate F1\n(F2) to the first (second) probabilistic axiom.\nThe query axiom Q = kevin : NatureLover is true in 3 out of the 4 worlds, those corresponding to the selections {{(F1, 1), (F2, 1)}, {(F1, 1), (F2, 0)}, {(F1, 0), (F2, 1)}}. So P (Q) = 0.4 \u00b7 0.3 + 0.4 \u00b7 0.7 + 0.6 \u00b7 0.3 = 0.58. This is reasonable if the two sources can be considered as independent. In fact, the probability comes from the disjunction of two independent Boolean random variables with probabilities respectively 0.4 and 0.3: P (Q) = P (X1 \u2228 X2) = P (X1) + P (X2)\u2212 P (X1 \u2227X2) = P (X1) + P (X2)\u2212 P (X1)P (X2) = 0.4 + 0.3 \u2212 0.4 \u00b7 0.3 = 0.58"}, {"heading": "4 Querying KBs", "text": "Traditionally, a reasoning algorithm decides whether an axiom is entailed or not by a KB by refutation: the axiom E is entailed if \u00acE has no model in the KB. Besides deciding whether an axiom is entailed by a KB, we want to find also explanations for the axiom.\nThe problem of finding explanations for a query has been investigated by various au-\nthors (Schlobach and Cornet 2003; Kalyanpur et al. 2005; Kalyanpur 2006; Kalyanpur et al. 2007; Halaschek-Wiener et al. 2006). It was called axiom pinpointing in (Schlobach and Cornet 2003) and considered as a non-standard reasoning service useful for tracing derivations and debugging ontologies. In particular, in (Schlobach and Cornet 2003) the authors define minimal axiom sets (MinAs for short).\nDefinition 4.1 (MinA) Let K be a knowledge base and Q an axiom that follows from it, i.e., K |= Q. We call a set M \u2286 K a minimal axiom set or MinA for Q in K if M |= Q and it is minimal w.r.t. set inclusion.\nThe problem of enumerating all MinAs is called min-a-enum. All-MinAs(Q,K) is the set of all MinAs for query Q in knowledge base K. Reasoners such as Pellet solve the mina-enum problem by finding a single MinA using a tableau algorithm and then applying the hitting set (Reiter 1987) algorithm for finding all the others.\nA tableau is a graph where each node represents an individual a and is labeled with the set of concepts L(a) it belongs to. Each edge \u3008a, b\u3009 in the graph is labeled with the set\nof roles to which the couple (a, b) belongs. Then, a set of consistency preserving tableau expansion rules are repeatedly applied until a clash (i.e., a contradiction) is detected or a clash-free graph is found to which no more rules are applicable. A clash is for example a couple (C, a) where C and \u00acC are present in the label of a node, i.e. C,\u00acC \u2286 L(a).\nSome expansion rules are non-deterministic, i.e., they generate a finite set of tableaux. Thus the algorithm keeps a set of tableaux that is consistent if there is any tableau in it that is consistent, i.e., that is clash-free. Each time a clash is detected in a tableau G, the algorithm stops applying rules to G. Once every tableau in T contains a clash or no more expansion rules can be applied to it, the algorithm terminates. If all the tableaux in the final set T contain a clash, the algorithm returns unsatisfiable as no model can be found. Otherwise, any one clash-free completion graph in T represents a possible model for the concept and the algorithm returns satisfiable. The hitting set algorithm is a black box method: it repeatedly removes an axiom from the KB and then computes again a MinA recording all the different MinAs so found.\nmin-a-enum is required to answer queries to KBs following the DISPONTE semantics. To compute the probability of a query, the explanations must be made mutually exclusive, so that the probability of each individual explanation is computed and summed with the others. This can be done by exploiting a splitting algorithm as shown in (Poole 2000). Alternatively, we can assign independent Boolean random variables to the axioms contained in the explanations and defining the Disjunctive Normal Form (DNF) Boolean formula fK which models the set of explanations. Thus fK(X) = \u2228\n\u03ba\u2208K \u2227 (Ei,1) Xi \u2227 (Ei,0) Xi\nwhere X = {Xi|(Ei, k) \u2208 \u03ba, \u03ba \u2208 K} is the set of Boolean random variables. We can now translate fK to a Binary Decision Diagram (BDD), from which we can compute the probability of the query with a dynamic programming algorithm that is linear in the size of the BDD.\n5 The algorithms TRILL and TRILLP\nTRILL (Zese et al. 2013) implements the tableau algorithm using Prolog. In this way, we do not have to implement a search strategy, such as the hitting set algorithm, because the management of the non-determinism is demanded to Prolog. TRILL takes as input an OWL DL ontology translated into Prolog facts by using the Thea2 library (Vassiliadis et al. 2009). For example, a subclass axiom Cat \u2291 Pet is translated into subClass(\u2019Cat\u2019,\u2019Pet\u2019) while for more complex axioms, Thea2 uses Prolog lists, so the axiom NatureLover \u2261 PetOwner \u2294 GardenOwner is translated into equivalentClasses([\u2019NatureLover\u2019,unionOf([\u2019PetOwner\u2019,\u2019GardenOwner\u2019])]).\nTRILL builds a tableau following the tableau algorithm. The non-deterministic rules are treated differently from the deterministic ones. While the latter ones are implemented by predicates that take as input a tableau and return a single tableau, the former ones are implemented by predicates that take as input a tableau but return a list of tableaux from which one is non-deterministically chosen. The computation of All-MinAs(Q,K) is performed by simply calling findall/3 over the tableau predicate.\nA new version of TRILL, called TRILLP , resolves the axiom pinpointing problem by\ncomputing a pinpointing formula (Baader and Pen\u0303aloza 2010a; Baader and Pen\u0303aloza 2010b) instead of a set of MinAs. To define the pinpointing formula we first have to associate a Boolean variable to each axiom of the KB K. The pinpointing formula is a monotone\nBoolean formula on these variables. This formula compactly encodes the set of all MinAs. Let assume that each axiom E of a KB K is associated with the propositional variable var(E). The set of all propositional variables is indicated with var(K). A valuation \u03bd of a monotone Boolean formula is the set of propositional variables that are true. For a valuation \u03bd \u2286 var(K), let K\u03bd := {t \u2208 K|var(t) \u2208 \u03bd}.\nDefinition 5.1 (Pinpointing formula) Given a query Q and a KB K, a monotone Boolean formula \u03c6 over var(K) is called a pinpointing formula for Q if for every valuation \u03bd \u2282 var(K) it holds that K\u03bd |= Q if \u03bd satisfies \u03c6.\nIn Lemma 2.4 of (Baader and Pen\u0303aloza 2010b), the authors proved that we can obtain all MinAs from a pinpointing formula by transforming the formula into DNF and removing disjuncts implying other disjuncts. From this formula, the construction of BDD can be performed as for MinAs. For formal definitions see (Baader and Pen\u0303aloza 2010a; Baader and Pen\u0303aloza 2010b).\nExample 5.1 (Pinpointing formula) Consider the KB of Example 3.1 with the same association between Boolean variables and axioms. Let Q = kevin : NatureLover be the query, then All-MinAs(Q,K) = {{F2, F4, F6, F1}, {F3, F5, F6, F1}}, while the pinpointing formula is ((F2 \u2227 F4) \u2228 (F3 \u2227 F5)) \u2227 F6 \u2227 F1.\nIn order to build the BDDs and compute the associated probabilities, TRILL and TRILLP exploit a Prolog library of the cplint suite (Riguzzi 2009). The code of TRILL and TRILLP is available at https://sites.google.com/a/unife.it/ml/trill."}, {"heading": "6 Related Work", "text": "DL reasoners written in Prolog do not need to implement a backtracking algorithm but can exploit Prolog backtracking facilities for performing the search. This has been observed in various works. Beckert and Posegga (1995) proposed a tableau reasoner in Prolog for FOL based on variable-free semantic tableaux, but it is not tailored to DLs. Meissner (2004) presented the implementation of a Prolog reasoner for the DL ALCN . Herchenro\u0308der (2006) improved it by implementing heuristic search techniques to reduce the running time. Faizi (2011) added to its work the possibility of returning explanations for queries w.r.t. ALC KBs. Hustadt et al. (2008) presented the KAON2 algorithm that exploits basic superposition, a refutational theorem proving method for FOL with equality and a new inference rule, called decomposition, to reduce a SHIQ KB into a disjunctive datalog program. Luka\u0301csy and Szeredi (2009) presented DLog, that is an ABox reasoning algorithm for the SHIQ language. It allows to store the content of the ABox externally in a database and to answer ABox queries by transforming the KB into a Prolog program. TRILL and TRILLP differ from these works for the considered DL and, in particular, from DLog for the capability of answering general queries.\nBruynooghe et al. (2010) presented FOProblog that is based on Problog, in which a program contains a set of probabilistic facts, i.e. facts annotated with probabilities, and a set of general clauses which can have positive and negative probabilistic facts in their body. Each fact is assumed to be probabilistically independent. It follows the distribution\nsemantics and exploits BDDs to compute the probability of queries. FOProblog is a reasoner for FOL that is not tailored to DLs, so the algorithm could be suboptimal. It does not exploit a tableau algorithm and cannot manage probabilistic facts which are annotated with more than one probability value.\nA different approach is the one of Ricca et al. (2009) that presented OntoDLV, a system for reasoning on logic-based ontology representation language, called OntoDLP. OntoDLP is an extension of (disjunctive) ASP and can interoperate with OWL. OntoDLV rewrites the OWL KB into the OntoDLP language, can retrieve information directly from external OWL Ontologies and answers queries by using ASP.\nBUNDLE (Riguzzi et al. 2013a) is a probabilistic reasoner that computes the probability of queries from probabilistic KBs that follow the DISPONTE semantics. It is based on Pellet and is completely written in Java. It exploits a modified version of Pellet for finding the All-MinAs set and then it translates it into a BDD from which it computes the probability of the query. Similarly to BUNDLE, PRONTO (Klinov 2008) is based on Pellet and performs inference on P-SHIQ(D) KBs in which the probabilistic part contains conditional contraints of the form (D|C)[l, u] that informally mean \u201cgenerally, if an object belongs to C, then it belongs to D with a probability in the interval [l, u]\u201d. P-SHIQ(D) (Lukasiewicz 2008) uses probabilistic lexicographic entailment from probabilistic default reasoning and allows both terminological and assertional probabilistic knowledge about instances of concepts and roles. P-SHIQ(D) is based on Nilsson\u2019s probabilistic logic (Nilsson 1986) in which the probabilistic interpretation Pr defines a probability distribution over the set of interpretations Int instead of a probability distribution over theories. The probability of a logical formula F according to Pr, denoted Pr(F ), is the sum of all Pr(I) such that I \u2208 Int and I |= F ."}, {"heading": "7 Experiments", "text": "We did several experiments in order to evaluate the performances of the algorithms we have implemented. Here we report a comparison between the performances of TRILL, TRILLP and BUNDLE when computing probability for queries. We used four different knowledge bases of various complexity: 1) BRCA1 models the risk factor of breast cancer; 2) an extract of the DBPedia2 ontology obtained from Wikipedia; 3) Biopax level 33 models metabolic pathways; 4) Vicodi4 contains information on European history.\nFor the tests, we used a version of the DBPedia and Biopax KBs without the ABox, a version of the BRCA with an ABox containing 1 individual and a version of Vicodi with an ABox containing 19 individuals. To each KB, we added 50 probabilistic axioms. For each datasets we randomly created 100 different queries. In particular, for the DBPedia and Biopax datasets we created 100 subclass-of queries while for the other KBs we created 80 subclass-of and 20 instance-of queries. For generating the subclass-of queries, we randomly selected two classes that are connected in the hierarchy of classes contained in the ontology, so that each query had at least one explanation. For the instance-of\n1 http://www2.cs.man.ac.uk/~klinovp/pronto/brc/cancer_cc.owl 2 http://dbpedia.org/ 3 http://www.biopax.org/ 4 http://www.vicodi.org/\nqueries, we randomly selected an individual a and a class to which a belongs by following the hierarchy of the classes starting from the class to which a is instantiated in the KB.\nTable 1 shows, for each ontology, the average number of different MinAs computed and the average time in seconds that TRILL, TRILLP and BUNDLE took for answering the queries. In particular, the BRCA and the version of DBPedia that we used contain a large number of subclass axioms between complex concepts. These preliminary tests show that both TRILL and TRILLP performances can sometimes be better than BUNDLE, even if they lack all the optimizations that BUNDLE inherits from Pellet. This represents evidence that a Prolog implementation of a Semantic Web tableau reasoner is feasible and that may lead to a practical system. Moreover, TRILLP presents an improvement of the execution time with respect to TRILL when more MinAs are present."}, {"heading": "8 Open Issues and expected achievement", "text": "Our work aims at developing fast algorithms for performing inference over probabilistic DISPONTE semantics. Section 5 shows that TRILL and TRILLP can compute the explanations for a query and its probability w.r.t. a SHOIN (D) and an ALC probbilistic KB respectively. For the future we plan to improve the performances of both algorithms.\nWe are also studying the problem of lifted inference for probabilistic logic programming using lifted variable elimination. We are adapting the Generalized Counting First Order Variable Elimination (GC-FOVE) algorithm presented in (Taghipour et al. 2013) to probabilistic logic programming under the distribution semantics. To this purpose, we are developing the system LP2 that extends GC-FOVE by introducing two new operators, heterogeneous sum and heterogeneous multiplication. This work will be presented at the ICLP 2014 main conference.\nA second line of research is the problem of learning the parameters and the structure of a DISPONTE KB. Along this line, in (Riguzzi et al. 2013b) we presented a learning algorithm, called EDGE, that learns the parameters by taking as input a DL theory and a number of examples that are usually concept assertions divided into positive and negative examples. EDGE first computes, for each example, the BDD encoding its explanations, then it executes an Expectation-Maximization (EM) algorithm, in which the functions Expactation and Maximization are repeatedly applied until the log-likelihood of the examples reaches a local maximum. Moreover, we are working on extending EDGE in order to learn also the structure of a DISPONTE KB togheter with the parameters by adapting the CELOE algorithm (Lehmann et al. 2011)."}, {"heading": "9 Conclusions", "text": "In this paper we presented two algorithms TRILL and TRILLP for reasoning on DISPONTE KBs which are written in Prolog. The experiments show that Prolog is a viable language for implementing DL reasoning algorithms and that the performances of the two presented algorithms are comparable with those of a state-of-art reasoner."}, {"heading": "10 Acknowledgements", "text": "This work was started by the Artificial Intelligence research group of the engineering department of the University of Ferrara. We would personally thank my colleagues and friends (in alphabetical order) Elena Bellodi, Evelina Lamma and Fabrizio Riguzzi."}], "references": [{"title": "The Description Logic Handbook: Theory, Implementation, and Applications", "author": ["F. Baader", "D. Calvanese", "D.L. McGuinness", "D. Nardi", "P.F. Patel-Schneider", "Eds."], "venue": "Cambridge University Press.", "citeRegEx": "Baader et al\\.,? 2003", "shortCiteRegEx": "Baader et al\\.", "year": 2003}, {"title": "Description logics", "author": ["F. Baader", "I. Horrocks", "U. Sattler"], "venue": "Handbook of knowledge representation. Elsevier, Chapter 3, 135\u2013179.", "citeRegEx": "Baader et al\\.,? 2008", "shortCiteRegEx": "Baader et al\\.", "year": 2008}, {"title": "Automata-based axiom pinpointing", "author": ["F. Baader", "R. Pe\u00f1aloza"], "venue": "J. Autom. Reasoning 45, 2, 91\u2013129.", "citeRegEx": "Baader and Pe\u00f1aloza,? 2010a", "shortCiteRegEx": "Baader and Pe\u00f1aloza", "year": 2010}, {"title": "Axiom pinpointing in general tableaux", "author": ["F. Baader", "R. Pe\u00f1aloza"], "venue": "J. Log. Comput. 20, 1, 5\u201334.", "citeRegEx": "Baader and Pe\u00f1aloza,? 2010b", "shortCiteRegEx": "Baader and Pe\u00f1aloza", "year": 2010}, {"title": "leantap: Lean tableau-based deduction", "author": ["B. Beckert", "J. Posegga"], "venue": "J. Autom. Reasoning 15, 3, 339\u2013358.", "citeRegEx": "Beckert and Posegga,? 1995", "shortCiteRegEx": "Beckert and Posegga", "year": 1995}, {"title": "Problog technology for inference in a probabilistic first order logic", "author": ["M. Bruynooghe", "T. Mantadelis", "A. Kimmig", "B. Gutmann", "J. Vennekens", "G. Janssens", "L.D. Raedt"], "venue": "ECAI. 719\u2013724.", "citeRegEx": "Bruynooghe et al\\.,? 2010", "shortCiteRegEx": "Bruynooghe et al\\.", "year": 2010}, {"title": "ProbLog: A probabilistic Prolog and its application in link discovery", "author": ["L. De Raedt", "A. Kimmig", "H. Toivonen"], "venue": "International Joint Conference on Artificial Intelligence. 2462\u20132467.", "citeRegEx": "Raedt et al\\.,? 2007", "shortCiteRegEx": "Raedt et al\\.", "year": 2007}, {"title": "A Description Logic Prover in Prolog, Bachelor\u2019s thesis, Informatics Mathematical Modelling, Technical University of Denmark", "author": ["I. Faizi"], "venue": null, "citeRegEx": "Faizi,? \\Q2011\\E", "shortCiteRegEx": "Faizi", "year": 2011}, {"title": "The racerpro knowledge representation and reasoning system", "author": ["V. Haarslev", "K. Hidde", "R. Mller", "M. Wessel"], "venue": "Semantic Web, 267\u2013277.", "citeRegEx": "Haarslev et al\\.,? 2012", "shortCiteRegEx": "Haarslev et al\\.", "year": 2012}, {"title": "Extending tableau tracing for ABox updates", "author": ["C. Halaschek-Wiener", "A. Kalyanpur", "B. Parsia"], "venue": "Tech. rep., University of Maryland.", "citeRegEx": "Halaschek.Wiener et al\\.,? 2006", "shortCiteRegEx": "Halaschek.Wiener et al\\.", "year": 2006}, {"title": "Lightweight semantic web oriented reasoning in Prolog: Tableaux inference for description logics", "author": ["T. Herchenr\u00f6der"], "venue": "M.S. thesis, School of Informatics, University of Edinburgh.", "citeRegEx": "Herchenr\u00f6der,? 2006", "shortCiteRegEx": "Herchenr\u00f6der", "year": 2006}, {"title": "Foundations of Semantic Web Technologies", "author": ["P. Hitzler", "M. Kr\u00f6tzsch", "S. Rudolph"], "venue": "CRCPress.", "citeRegEx": "Hitzler et al\\.,? 2009", "shortCiteRegEx": "Hitzler et al\\.", "year": 2009}, {"title": "Deciding expressive description logics in the framework of resolution", "author": ["U. Hustadt", "B. Motik", "U. Sattler"], "venue": "Inf. Comput. 206, 5, 579\u2013601.", "citeRegEx": "Hustadt et al\\.,? 2008", "shortCiteRegEx": "Hustadt et al\\.", "year": 2008}, {"title": "Debugging and repair of OWL ontologies", "author": ["A. Kalyanpur"], "venue": "Ph.D. thesis, The Graduate School of the University of Maryland.", "citeRegEx": "Kalyanpur,? 2006", "shortCiteRegEx": "Kalyanpur", "year": 2006}, {"title": "Finding all justifications of OWL DL entailments", "author": ["A. Kalyanpur", "B. Parsia", "M. Horridge", "E. Sirin"], "venue": "ISWC. LNCS, vol. 4825. Springer, 267\u2013280.", "citeRegEx": "Kalyanpur et al\\.,? 2007", "shortCiteRegEx": "Kalyanpur et al\\.", "year": 2007}, {"title": "Debugging unsatisfiable classes in OWL ontologies", "author": ["A. Kalyanpur", "B. Parsia", "E. Sirin", "J.A. Hendler"], "venue": "J. Web Sem. 3, 4, 268\u2013293.", "citeRegEx": "Kalyanpur et al\\.,? 2005", "shortCiteRegEx": "Kalyanpur et al\\.", "year": 2005}, {"title": "Pronto: A non-monotonic probabilistic description logic reasoner", "author": ["P. Klinov"], "venue": "European Semantic Web Conference. LNCS, vol. 5021. Springer, 822\u2013826.", "citeRegEx": "Klinov,? 2008", "shortCiteRegEx": "Klinov", "year": 2008}, {"title": "Class expression learning for ontology engineering", "author": ["J. Lehmann", "S. Auer", "L. Bhmann", "S. Tramp"], "venue": "J. Web Sem., 71\u201381.", "citeRegEx": "Lehmann et al\\.,? 2011", "shortCiteRegEx": "Lehmann et al\\.", "year": 2011}, {"title": "Efficient description logic reasoning in prolog: The dlog system", "author": ["G. Luk\u00e1csy", "P. Szeredi"], "venue": "TPLP 9, 3, 343\u2013414.", "citeRegEx": "Luk\u00e1csy and Szeredi,? 2009", "shortCiteRegEx": "Luk\u00e1csy and Szeredi", "year": 2009}, {"title": "Expressive probabilistic description logics", "author": ["T. Lukasiewicz"], "venue": "Artif. Int. 172, 6-7, 852\u2013883.", "citeRegEx": "Lukasiewicz,? 2008", "shortCiteRegEx": "Lukasiewicz", "year": 2008}, {"title": "Managing uncertainty and vagueness in description logics for the semantic web", "author": ["T. Lukasiewicz", "U. Straccia"], "venue": "J. Web Sem. 6, 4, 291\u2013308.", "citeRegEx": "Lukasiewicz and Straccia,? 2008", "shortCiteRegEx": "Lukasiewicz and Straccia", "year": 2008}, {"title": "An automated deduction system for description logic with alcn language", "author": ["A. Meissner"], "venue": "Studia z Automatyki i Informatyki 28-29, 91\u2013110.", "citeRegEx": "Meissner,? 2004", "shortCiteRegEx": "Meissner", "year": 2004}, {"title": "Probabilistic logic", "author": ["N.J. Nilsson"], "venue": "Artif. Intell. 28, 1, 71\u201387.", "citeRegEx": "Nilsson,? 1986", "shortCiteRegEx": "Nilsson", "year": 1986}, {"title": "The Independent Choice Logic for modelling multiple agents under uncertainty", "author": ["D. Poole"], "venue": "Artif. Intell. 94, 1-2, 7\u201356.", "citeRegEx": "Poole,? 1997", "shortCiteRegEx": "Poole", "year": 1997}, {"title": "Abducing through negation as failure: stable models within the independent choice logic", "author": ["D. Poole"], "venue": "J. Log. Program. 44, 1-3, 5\u201335.", "citeRegEx": "Poole,? 2000", "shortCiteRegEx": "Poole", "year": 2000}, {"title": "A theory of diagnosis from first principles", "author": ["R. Reiter"], "venue": "Artif. Intell. 32, 1, 57\u201395.", "citeRegEx": "Reiter,? 1987", "shortCiteRegEx": "Reiter", "year": 1987}, {"title": "Ontodlv: An asp-based system for enterprise ontologies", "author": ["F. Ricca", "L. Gallucci", "R. Schindlauer", "T. Dell\u2019Armi", "G. Grasso", "N. Leone"], "venue": "J. Log. Comput", "citeRegEx": "Ricca et al\\.,? \\Q2009\\E", "shortCiteRegEx": "Ricca et al\\.", "year": 2009}, {"title": "Extended semantics and inference for the Independent Choice Logic", "author": ["F. Riguzzi"], "venue": "Log. J. IGPL 17, 6, 589\u2013629.", "citeRegEx": "Riguzzi,? 2009", "shortCiteRegEx": "Riguzzi", "year": 2009}, {"title": "BUNDLE: A reasoner for probabilistic ontologies", "author": ["F. Riguzzi", "E. Bellodi", "E. Lamma", "R. Zese"], "venue": "RR 2013, W. Faber and D. Lembo, Eds. LNCS, vol. 7994. Springer, 183\u2013197.", "citeRegEx": "Riguzzi et al\\.,? 2013a", "shortCiteRegEx": "Riguzzi et al\\.", "year": 2013}, {"title": "Parameter learning for probabilistic ontologies", "author": ["F. Riguzzi", "E. Bellodi", "E. Lamma", "R. Zese"], "venue": "RR 2013, W. Faber and D. Lembo, Eds. LNCS, vol. 7994. Springer, 183\u2013197.", "citeRegEx": "Riguzzi et al\\.,? 2013b", "shortCiteRegEx": "Riguzzi et al\\.", "year": 2013}, {"title": "Epistemic and statistical probabilistic ontologies", "author": ["F. Riguzzi", "E. Lamma", "E. Bellodi", "R. Zese"], "venue": "Uncertainty Reasoning for the Semantic Web. CEUR Workshop Proceedings, vol. 900. Sun SITE Central Europe, 3\u201314.", "citeRegEx": "Riguzzi et al\\.,? 2012", "shortCiteRegEx": "Riguzzi et al\\.", "year": 2012}, {"title": "A statistical learning method for logic programs with distribution semantics", "author": ["T. Sato"], "venue": "International Conference on Logic Programming. MIT Press, 715\u2013729.", "citeRegEx": "Sato,? 1995", "shortCiteRegEx": "Sato", "year": 1995}, {"title": "Parameter learning of logic programs for symbolic-statistical modeling", "author": ["T. Sato", "Y. Kameya"], "venue": "J. Artif. Intell. Res. 15, 391\u2013454.", "citeRegEx": "Sato and Kameya,? 2001", "shortCiteRegEx": "Sato and Kameya", "year": 2001}, {"title": "Non-standard reasoning services for the debugging of description logic terminologies", "author": ["S. Schlobach", "R. Cornet"], "venue": "IJCAI. Morgan Kaufmann, 355\u2013362.", "citeRegEx": "Schlobach and Cornet,? 2003", "shortCiteRegEx": "Schlobach and Cornet", "year": 2003}, {"title": "Attributive concept descriptions with complements", "author": ["M. Schmidt-Schau\u00df", "G. Smolka"], "venue": "Artificial Intelligence 48, 1, 1\u201326.", "citeRegEx": "Schmidt.Schau\u00df and Smolka,? 1991", "shortCiteRegEx": "Schmidt.Schau\u00df and Smolka", "year": 1991}, {"title": "Hermit: A highly-efficient owl reasoner", "author": ["R. Shearer", "B. Motik", "I. Horrocks"], "venue": "OWLED.", "citeRegEx": "Shearer et al\\.,? 2008", "shortCiteRegEx": "Shearer et al\\.", "year": 2008}, {"title": "Pellet: A practical OWL-DL reasoner", "author": ["E. Sirin", "B. Parsia", "B. Cuenca-Grau", "A. Kalyanpur", "Y. Katz"], "venue": "J. Web Sem. 5, 2, 51\u201353.", "citeRegEx": "Sirin et al\\.,? 2007", "shortCiteRegEx": "Sirin et al\\.", "year": 2007}, {"title": "Managing uncertainty and vagueness in description logics, logic programs and description logic programs", "author": ["U. Straccia"], "venue": "International Summer School on Reasoning Web. LNCS, vol. 5224. Springer, 54\u2013103.", "citeRegEx": "Straccia,? 2008", "shortCiteRegEx": "Straccia", "year": 2008}, {"title": "Lifted variable elimination: Decoupling the operators from the constraint language", "author": ["N. Taghipour", "D. Fierens", "J. Davis", "H. Blockeel"], "venue": "J. Artif. Intell. Res. (JAIR) 47, 393\u2013439.", "citeRegEx": "Taghipour et al\\.,? 2013", "shortCiteRegEx": "Taghipour et al\\.", "year": 2013}, {"title": "Processing owl2 ontologies using thea: An application of logic programming", "author": ["V. Vassiliadis", "J. Wielemaker", "C. Mungall"], "venue": "International Workshop on OWL: Experiences and Directions. CEUR Workshop Proceedings, vol. 529. CEUR-WS.org.", "citeRegEx": "Vassiliadis et al\\.,? 2009", "shortCiteRegEx": "Vassiliadis et al\\.", "year": 2009}, {"title": "Logic programs with annotated disjunctions", "author": ["J. Vennekens", "S. Verbaeten", "M. Bruynooghe"], "venue": "International Conference on Logic Programming. LNCS, vol. 3131. Springer, 195\u2013209.", "citeRegEx": "Vennekens et al\\.,? 2004", "shortCiteRegEx": "Vennekens et al\\.", "year": 2004}, {"title": "A description logics tableau reasoner in prolog", "author": ["R. Zese", "E. Bellodi", "E. Lamma", "F. Riguzzi"], "venue": "CILC, D. Cantone and M. N. Asmundo, Eds. CEUR Workshop Proceedings, vol. 1068. CEUR-WS.org, 33\u201347.", "citeRegEx": "Zese et al\\.,? 2013", "shortCiteRegEx": "Zese et al\\.", "year": 2013}], "referenceMentions": [{"referenceID": 31, "context": "An effective and popular approach is the Distribution Semantics (Sato 1995), which underlies many PLP languages such as PRISM (Sato 1995; Sato and Kameya 2001), Independent Choice Logic (Poole 1997), Logic Programs with Annotated Disjunctions (Vennekens et al.", "startOffset": 64, "endOffset": 75}, {"referenceID": 31, "context": "An effective and popular approach is the Distribution Semantics (Sato 1995), which underlies many PLP languages such as PRISM (Sato 1995; Sato and Kameya 2001), Independent Choice Logic (Poole 1997), Logic Programs with Annotated Disjunctions (Vennekens et al.", "startOffset": 126, "endOffset": 159}, {"referenceID": 32, "context": "An effective and popular approach is the Distribution Semantics (Sato 1995), which underlies many PLP languages such as PRISM (Sato 1995; Sato and Kameya 2001), Independent Choice Logic (Poole 1997), Logic Programs with Annotated Disjunctions (Vennekens et al.", "startOffset": 126, "endOffset": 159}, {"referenceID": 23, "context": "An effective and popular approach is the Distribution Semantics (Sato 1995), which underlies many PLP languages such as PRISM (Sato 1995; Sato and Kameya 2001), Independent Choice Logic (Poole 1997), Logic Programs with Annotated Disjunctions (Vennekens et al.", "startOffset": 186, "endOffset": 198}, {"referenceID": 40, "context": "An effective and popular approach is the Distribution Semantics (Sato 1995), which underlies many PLP languages such as PRISM (Sato 1995; Sato and Kameya 2001), Independent Choice Logic (Poole 1997), Logic Programs with Annotated Disjunctions (Vennekens et al. 2004) and ProbLog (De Raedt et al.", "startOffset": 243, "endOffset": 266}, {"referenceID": 20, "context": "Along this line, many reserchers proposed to combine probability theory with Description Logics (DLs for short) (Lukasiewicz and Straccia 2008; Straccia 2008).", "startOffset": 112, "endOffset": 158}, {"referenceID": 37, "context": "Along this line, many reserchers proposed to combine probability theory with Description Logics (DLs for short) (Lukasiewicz and Straccia 2008; Straccia 2008).", "startOffset": 112, "endOffset": 158}, {"referenceID": 11, "context": "DLs are at the basis of the Web Ontology Language (OWL for short), a family of knowledge representation formalisms used for modeling information of the Semantic Web (Hitzler et al. 2009).", "startOffset": 165, "endOffset": 186}, {"referenceID": 30, "context": "In (Riguzzi et al. 2012) we presented DISPONTE, a probabilistic semantics for DLs based on the distribution semantics that allows probabilistic assertional and terminological knowledge.", "startOffset": 3, "endOffset": 24}, {"referenceID": 36, "context": "In order to allow inference over the information in the Semantic Web, many efficient DL reasoners, such as Pellet (Sirin et al. 2007), RacerPro (Haarslev et al.", "startOffset": 114, "endOffset": 133}, {"referenceID": 8, "context": "2007), RacerPro (Haarslev et al. 2012) and HermiT (Shearer et al.", "startOffset": 16, "endOffset": 38}, {"referenceID": 35, "context": "2012) and HermiT (Shearer et al. 2008), have been developed.", "startOffset": 17, "endOffset": 38}, {"referenceID": 28, "context": "In (Riguzzi et al. 2013a) we presented BUNDLE, a reasoner based on Pellet that extends it by allowing to perform inference on DISPONTE theories.", "startOffset": 3, "endOffset": 25}, {"referenceID": 41, "context": "We implemented a reasoner, called TRILL (Zese et al. 2013), that exploits Prolog for managing the nondeterminism.", "startOffset": 40, "endOffset": 58}, {"referenceID": 29, "context": "Since a problem of probabilistic KBs is that the parameters are difficult to define, in (Riguzzi et al. 2013b) we presented EDGE that learns the parameters of a DISPONTE KB from the information available in the domain.", "startOffset": 88, "endOffset": 110}, {"referenceID": 38, "context": "We applied lifted variable elimination, and GC-FOVE (Taghipour et al. 2013) in particular, to PLP and developed the algorithm LP.", "startOffset": 52, "endOffset": 75}, {"referenceID": 0, "context": "DLs are knowledge representation formalisms that are at the basis of the Semantic Web (Baader et al. 2003; Baader et al. 2008) and are used for modeling ontologies.", "startOffset": 86, "endOffset": 126}, {"referenceID": 1, "context": "DLs are knowledge representation formalisms that are at the basis of the Semantic Web (Baader et al. 2003; Baader et al. 2008) and are used for modeling ontologies.", "startOffset": 86, "endOffset": 126}, {"referenceID": 34, "context": "In this section, we recall the expressive description logic ALC (Schmidt-Schau\u00df and Smolka 1991).", "startOffset": 64, "endOffset": 96}, {"referenceID": 20, "context": "We refer to (Lukasiewicz and Straccia 2008) for a detailed description of SHOIN (D) DL, that is at the basis of OWL DL.", "startOffset": 12, "endOffset": 43}, {"referenceID": 30, "context": "DISPONTE (Riguzzi et al. 2012) applies the distribution semantics (Sato 1995) of probabilistic logic programming to DLs.", "startOffset": 9, "endOffset": 30}, {"referenceID": 31, "context": "2012) applies the distribution semantics (Sato 1995) of probabilistic logic programming to DLs.", "startOffset": 41, "endOffset": 52}, {"referenceID": 33, "context": "The problem of finding explanations for a query has been investigated by various authors (Schlobach and Cornet 2003; Kalyanpur et al. 2005; Kalyanpur 2006; Kalyanpur et al. 2007; Halaschek-Wiener et al. 2006).", "startOffset": 89, "endOffset": 208}, {"referenceID": 15, "context": "The problem of finding explanations for a query has been investigated by various authors (Schlobach and Cornet 2003; Kalyanpur et al. 2005; Kalyanpur 2006; Kalyanpur et al. 2007; Halaschek-Wiener et al. 2006).", "startOffset": 89, "endOffset": 208}, {"referenceID": 13, "context": "The problem of finding explanations for a query has been investigated by various authors (Schlobach and Cornet 2003; Kalyanpur et al. 2005; Kalyanpur 2006; Kalyanpur et al. 2007; Halaschek-Wiener et al. 2006).", "startOffset": 89, "endOffset": 208}, {"referenceID": 14, "context": "The problem of finding explanations for a query has been investigated by various authors (Schlobach and Cornet 2003; Kalyanpur et al. 2005; Kalyanpur 2006; Kalyanpur et al. 2007; Halaschek-Wiener et al. 2006).", "startOffset": 89, "endOffset": 208}, {"referenceID": 9, "context": "The problem of finding explanations for a query has been investigated by various authors (Schlobach and Cornet 2003; Kalyanpur et al. 2005; Kalyanpur 2006; Kalyanpur et al. 2007; Halaschek-Wiener et al. 2006).", "startOffset": 89, "endOffset": 208}, {"referenceID": 33, "context": "It was called axiom pinpointing in (Schlobach and Cornet 2003) and considered as a non-standard reasoning service useful for tracing derivations and debugging ontologies.", "startOffset": 35, "endOffset": 62}, {"referenceID": 33, "context": "In particular, in (Schlobach and Cornet 2003) the authors define minimal axiom sets (MinAs for short).", "startOffset": 18, "endOffset": 45}, {"referenceID": 25, "context": "Reasoners such as Pellet solve the mina-enum problem by finding a single MinA using a tableau algorithm and then applying the hitting set (Reiter 1987) algorithm for finding all the others.", "startOffset": 138, "endOffset": 151}, {"referenceID": 24, "context": "This can be done by exploiting a splitting algorithm as shown in (Poole 2000).", "startOffset": 65, "endOffset": 77}, {"referenceID": 41, "context": "TRILL (Zese et al. 2013) implements the tableau algorithm using Prolog.", "startOffset": 6, "endOffset": 24}, {"referenceID": 39, "context": "TRILL takes as input an OWL DL ontology translated into Prolog facts by using the Thea2 library (Vassiliadis et al. 2009).", "startOffset": 96, "endOffset": 121}, {"referenceID": 2, "context": "A new version of TRILL, called TRILL , resolves the axiom pinpointing problem by computing a pinpointing formula (Baader and Pe\u00f1aloza 2010a; Baader and Pe\u00f1aloza 2010b) instead of a set of MinAs.", "startOffset": 113, "endOffset": 167}, {"referenceID": 3, "context": "A new version of TRILL, called TRILL , resolves the axiom pinpointing problem by computing a pinpointing formula (Baader and Pe\u00f1aloza 2010a; Baader and Pe\u00f1aloza 2010b) instead of a set of MinAs.", "startOffset": 113, "endOffset": 167}, {"referenceID": 3, "context": "4 of (Baader and Pe\u00f1aloza 2010b), the authors proved that we can obtain all MinAs from a pinpointing formula by transforming the formula into DNF and removing disjuncts implying other disjuncts.", "startOffset": 5, "endOffset": 32}, {"referenceID": 2, "context": "For formal definitions see (Baader and Pe\u00f1aloza 2010a; Baader and Pe\u00f1aloza 2010b).", "startOffset": 27, "endOffset": 81}, {"referenceID": 3, "context": "For formal definitions see (Baader and Pe\u00f1aloza 2010a; Baader and Pe\u00f1aloza 2010b).", "startOffset": 27, "endOffset": 81}, {"referenceID": 27, "context": "In order to build the BDDs and compute the associated probabilities, TRILL and TRILL exploit a Prolog library of the cplint suite (Riguzzi 2009).", "startOffset": 130, "endOffset": 144}, {"referenceID": 4, "context": "Beckert and Posegga (1995) proposed a tableau reasoner in Prolog for FOL based on variable-free semantic tableaux, but it is not tailored to DLs.", "startOffset": 0, "endOffset": 27}, {"referenceID": 4, "context": "Beckert and Posegga (1995) proposed a tableau reasoner in Prolog for FOL based on variable-free semantic tableaux, but it is not tailored to DLs. Meissner (2004) presented the implementation of a Prolog reasoner for the DL ALCN .", "startOffset": 0, "endOffset": 162}, {"referenceID": 4, "context": "Beckert and Posegga (1995) proposed a tableau reasoner in Prolog for FOL based on variable-free semantic tableaux, but it is not tailored to DLs. Meissner (2004) presented the implementation of a Prolog reasoner for the DL ALCN . Herchenr\u00f6der (2006) improved it by implementing heuristic search techniques to reduce the running time.", "startOffset": 0, "endOffset": 250}, {"referenceID": 4, "context": "Beckert and Posegga (1995) proposed a tableau reasoner in Prolog for FOL based on variable-free semantic tableaux, but it is not tailored to DLs. Meissner (2004) presented the implementation of a Prolog reasoner for the DL ALCN . Herchenr\u00f6der (2006) improved it by implementing heuristic search techniques to reduce the running time. Faizi (2011) added to its work the possibility of returning explanations for queries w.", "startOffset": 0, "endOffset": 347}, {"referenceID": 4, "context": "Beckert and Posegga (1995) proposed a tableau reasoner in Prolog for FOL based on variable-free semantic tableaux, but it is not tailored to DLs. Meissner (2004) presented the implementation of a Prolog reasoner for the DL ALCN . Herchenr\u00f6der (2006) improved it by implementing heuristic search techniques to reduce the running time. Faizi (2011) added to its work the possibility of returning explanations for queries w.r.t. ALC KBs. Hustadt et al. (2008) presented the KAON2 algorithm that exploits basic superposition, a refutational theorem proving method for FOL with equality and a new inference rule, called decomposition, to reduce a SHIQ KB into a disjunctive datalog program.", "startOffset": 0, "endOffset": 457}, {"referenceID": 4, "context": "Beckert and Posegga (1995) proposed a tableau reasoner in Prolog for FOL based on variable-free semantic tableaux, but it is not tailored to DLs. Meissner (2004) presented the implementation of a Prolog reasoner for the DL ALCN . Herchenr\u00f6der (2006) improved it by implementing heuristic search techniques to reduce the running time. Faizi (2011) added to its work the possibility of returning explanations for queries w.r.t. ALC KBs. Hustadt et al. (2008) presented the KAON2 algorithm that exploits basic superposition, a refutational theorem proving method for FOL with equality and a new inference rule, called decomposition, to reduce a SHIQ KB into a disjunctive datalog program. Luk\u00e1csy and Szeredi (2009) presented DLog, that is an ABox reasoning algorithm for the SHIQ language.", "startOffset": 0, "endOffset": 713}, {"referenceID": 4, "context": "Beckert and Posegga (1995) proposed a tableau reasoner in Prolog for FOL based on variable-free semantic tableaux, but it is not tailored to DLs. Meissner (2004) presented the implementation of a Prolog reasoner for the DL ALCN . Herchenr\u00f6der (2006) improved it by implementing heuristic search techniques to reduce the running time. Faizi (2011) added to its work the possibility of returning explanations for queries w.r.t. ALC KBs. Hustadt et al. (2008) presented the KAON2 algorithm that exploits basic superposition, a refutational theorem proving method for FOL with equality and a new inference rule, called decomposition, to reduce a SHIQ KB into a disjunctive datalog program. Luk\u00e1csy and Szeredi (2009) presented DLog, that is an ABox reasoning algorithm for the SHIQ language. It allows to store the content of the ABox externally in a database and to answer ABox queries by transforming the KB into a Prolog program. TRILL and TRILL differ from these works for the considered DL and, in particular, from DLog for the capability of answering general queries. Bruynooghe et al. (2010) presented FOProblog that is based on Problog, in which a program contains a set of probabilistic facts, i.", "startOffset": 0, "endOffset": 1095}, {"referenceID": 28, "context": "BUNDLE (Riguzzi et al. 2013a) is a probabilistic reasoner that computes the probability of queries from probabilistic KBs that follow the DISPONTE semantics.", "startOffset": 7, "endOffset": 29}, {"referenceID": 16, "context": "Similarly to BUNDLE, PRONTO (Klinov 2008) is based on Pellet and performs inference on P-SHIQ(D) KBs in which the probabilistic part contains conditional contraints of the form (D|C)[l, u] that informally mean \u201cgenerally, if an object belongs to C, then it belongs to D with a probability in the interval [l, u]\u201d.", "startOffset": 28, "endOffset": 41}, {"referenceID": 19, "context": "P-SHIQ(D) (Lukasiewicz 2008) uses probabilistic lexicographic entailment from probabilistic default reasoning and allows both terminological and assertional probabilistic knowledge about instances of concepts and roles.", "startOffset": 10, "endOffset": 28}, {"referenceID": 22, "context": "P-SHIQ(D) is based on Nilsson\u2019s probabilistic logic (Nilsson 1986) in which the probabilistic interpretation Pr defines a probability distribution over the set of interpretations Int instead of a probability distribution over theories.", "startOffset": 52, "endOffset": 66}, {"referenceID": 23, "context": "A different approach is the one of Ricca et al. (2009) that presented OntoDLV, a system for reasoning on logic-based ontology representation language, called OntoDLP.", "startOffset": 35, "endOffset": 55}, {"referenceID": 38, "context": "We are adapting the Generalized Counting First Order Variable Elimination (GC-FOVE) algorithm presented in (Taghipour et al. 2013) to probabilistic logic programming under the distribution semantics.", "startOffset": 107, "endOffset": 130}, {"referenceID": 29, "context": "Along this line, in (Riguzzi et al. 2013b) we presented a learning algorithm, called EDGE, that learns the parameters by taking as input a DL theory and a number of examples that are usually concept assertions divided into positive and negative examples.", "startOffset": 20, "endOffset": 42}, {"referenceID": 17, "context": "Moreover, we are working on extending EDGE in order to learn also the structure of a DISPONTE KB togheter with the parameters by adapting the CELOE algorithm (Lehmann et al. 2011).", "startOffset": 158, "endOffset": 179}], "year": 2015, "abstractText": "The interest in the combination of probability with logics for modeling the world has rapidly increased in the last few years. One of the most effective approaches is the Distribution Semantics which was adopted by many logic programming languages and in Descripion Logics. In this paper, we illustrate the work we have done in this research field by presenting a probabilistic semantics for description logics and reasoning and learning algorithms. In particular, we present in detail the system TRILL , which computes the probability of queries w.r.t. probabilistic knowledge bases, which has been implemented in Prolog. Note: An extended abstract / full version of a paper accepted to be presented at the Doctoral Consortium of the 30th International Conference on Logic Programming (ICLP 2014), July 19-22, Vienna, Austria", "creator": "LaTeX with hyperref package"}}}