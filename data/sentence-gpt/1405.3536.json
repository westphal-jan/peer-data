{"id": "1405.3536", "review": {"conference": "ICML", "VERSION": "v1", "DATE_OF_SUBMISSION": "14-May-2014", "title": "Improving offline evaluation of contextual bandit algorithms via bootstrapping techniques", "abstract": "In many recommendation applications such as news recommendation, the items that can be rec- ommended come and go at a very fast pace. This is a challenge for recommender systems (RS) to face this setting. Online learning algorithms seem to be the most straight forward solution for these applications and we are talking about two types of algorithms that may work best for many. For example, the fact that one of the best-known algorithmic algorithms is Google\u2019s search algorithm is Google\u2019s popular search engine (GOOG) and its free-to-use algorithm for search results is pretty well established. It has been in use for many years now, and with Google\u2019s free-to-use algorithm, we are at a stage where they are gaining popularity.\n\nGoogle\u2019s free-to-use algorithm\nIt is certainly not known what Google\u2019s free-to-use algorithm is. The Google search engine is currently a much simpler algorithm that may work with the new Google search engine and its free-to-use algorithm for search results. Google has published its algorithm in a blog post that explains why, in its latest blog post, it uses it in more ways than any other system and this can be seen in other websites.\nGoogle\u2019s free-to-use algorithm is also known as the Google \u201cAvant-Avant-Avant-Avant-Avant-Avant-Avant-Avant-Avant-Avant-Avant-Avant-Avant-Avant-Avant-Avant-Avant-Avant-Avant-Avant-Avant-Avant-Avant-Avant-Avant-Avant-Avant-Avant-Avant-Avant-Avant-Avant-Avant-Avant-Avant-Avant-Avant-Avant-Avant-Avant-Avant-Avant-Avant-Avant-Avant-Avant-Avant-Avant-Avant-Avant-Avant-Avant-Avant-Avant-Avant-Avant-Avant-Avant-Avant-Avant-Avant-Avant-Avant-Avant-Avant-Avant-Avant-Avant-Avant-Avant-Avant-Avant-Avant-Avant-Avant-Avant-Avant-Avant-", "histories": [["v1", "Wed, 14 May 2014 15:29:02 GMT  (197kb,D)", "http://arxiv.org/abs/1405.3536v1", null]], "reviews": [], "SUBJECTS": "stat.ML cs.LG", "authors": ["j\u00e9r\u00e9mie mary", "philippe preux", "olivier nicol"], "accepted": true, "id": "1405.3536"}, "pdf": {"name": "1405.3536.pdf", "metadata": {"source": "META", "title": "Improving offline evaluation of contextual bandit algorithms  via bootstrapping techniques", "authors": ["Olivier Nicol", "J\u00e9r\u00e9mie Mary", "Philippe Preux"], "emails": ["OLI.NICOL@GMAIL.COM", "JEREMIE.MARY@INRIA.FR", "PHILIPPE.PREUX@UNIV-LILLE3.FR"], "sections": [{"heading": null, "text": "Proceedings of the 31 st International Conference on Machine Learning, Beijing, China, 2014. JMLR: W&CP volume 32. Copyright 2014 by the author(s)."}, {"heading": "1. Introduction", "text": "Under various forms, and under various names, recommendation has become a very common activity over the web. One can think of movie recommendation (Netflix), e-commerce (Amazon), online advertising (everywhere), news recommendation (Digg), personalized radio stations (Pandora) or even job recommendation (LinkedIn)... All these applications have their own characteristics. Yet the common key idea is to take advantage of some information we may have on a user (profile, demographics, time of the day etc.) in order to identify the most attractive content to serve him/her in a given context. Note that an element of content is generally referred to as an item. To perform recommendation, a piece of software called a recommender system (RS) can use past user/item interactions such as clicks or ratings. In particular, the typical approach to recommendation is to train a predictor of ratings and/or clicks of users on items on past data and use the resulting predictions to make personalized recommendations. This approach is based on the implicit assumption that past behavior can be used to predict future behavior.\nIn this paper we consider a recommendation applications in which the aforementioned assumption is not reasonable. We refer to this setting as dynamic recommendation. In dynamic recommendation, only a few tens of different items are available for recommendation at any given moment. These items have a limited lifetime and are continuously replaced by new ones, with different characteristics. We also consider that the tastes of users change, sometimes dramatically due to external parameters that we do not control. Many examples of dynamic recommendation exist on the web. The most popular one is news recommendation that can be found on specialized websites such as Digg or on general web portals (Yahoo!) and websites of various media (newspapers, TV channels...). Other examples can be mentioned such as private auctions in which the user can buy a limited set of items that changes everyday. Another example is a RS that can only recommend the K most recent items (this may apply to movies, videos, songs...). ar X iv :1\n40 5.\n35 36\nv1 [\nst at\n.M L\n] 1\n4 M\nay 2\nThis problem has begun to be addressed recently with online learning solutions, by considering the contextual bandit framework. Nonetheless this is not the case in most of the recommendation literature. In all the textbooks, dynamic recommendation is handled with content-based recommendation. The idea is to consider an item as a set of features and to try to predict the taste of a user with regards to these features, using an offline predictor as before. Yet we argue that although this can be a good idea in some special cases, this is not the way to go in general:\n1. It requires a continuous labeling effort of new items.\n2. We are limited by what the expert labels: things can be hard to label such as the appeal for a picture, the quality of a textual summary, etc.\n3. Tastes are not static: the appeal of a user to some kind of news can be greatly impacted by the political context. Similarly the appeal towards clothing can be impacted by fashion, movie stars etc.\nFor such systems, the best way to compare the performance of two algorithms is to perform A/B testing on a subset of the web audience (Kohavi et al., 2009). Yet there is almost no e-commerce website that would let a new RS go live just for testing, even on a small portion of the audience for fear of hurting the user experience and loosing money. The entailed engineering effort can also be discouraging. Therefore being able to evaluate offline a RS is crucial. In classical recommendation, the measures of prediction accuracy and other metrics that can be computed on past data are well accepted and trusted in the community. Nevertheless for the reasons we gave above, they are irrelevant for online learning algorithms designed for dynamic recommendation. This paper is about the offline evaluation of such algorithms. Some fairly simple replay methodologies do exist in the literature. Nonetheless they have a well known, yet very little studied drawback which is that they use a very small portion of the data at hand. One may argue that the tremendous amount of data available with web applications makes this a marginal problem. Yet in this paper we will exhibit that this is a major issue that generates a huge bias when evaluating online learning algorithms for dynamic recommendation. Furthermore we will explain that acquiring more data does not solve the problem. Then we will propose a solution to this issue, that builds on the previously introduced methods and on different elements of bootstrapping theory. This solution is backed by a theoretical analysis as well as an empirical study. They both clearly exhibit the improvement in terms of evaluation accuracy brought by our new method. Furthermore the use of bootstrapping allows us to estimate the distribution of our estimation and therefore to get a sense of its quality. This is a highly desirable property, especially considering\nthat such an evaluation method is designed in order to decide whether we should risk putting a new algorithm online. The fast theoretical convergence of this estimation is also proved in our analysis. Note that the experiments are run on synthetic data, for reasons that we will detail and also on a large publicly available dataset."}, {"heading": "2. Background on bandits and notations", "text": "We motivated the need for online learning solutions in order to deal with dynamic recommendation. A natural way to model this situation is as a reinforcement learning problem (Sutton & Barto, 1998), and more precisely using the contextual bandit framework (Lu et al., 2010) that was introduced for the very purpose of news recommendation."}, {"heading": "2.1. Contextual Bandits", "text": "The bandit problem is also known in the literature as the multi-arm bandit problem and other variations. This problem can be traced back to Robbins and Munro in 1952 (Robbins, 1952) and even Thompson in 1933 (Thompson, 1933). There are many variations in the definition of the problem; the contextual bandit framework as it is defined in (Langford & Zhang, 2007) is as follows:\nLet X be an arbitrary input space and A = {1..K} be a set of K actions. Let D be a distribution over tuples (x,~r) with x \u2208 X and ~r \u2208 {0, 1}K a vector of rewards: in the (x,~r) pair, the jth component of ~r is the reward associated to action aj , performed in the context x. In recommendation, the context is the information we have on the user (session, demographics, profile etc.) and an action is the recommendation of an item.\nA contextual bandit game is an iterated game in which at each round t:\n\u2022 (xt, ~rt) is drawn from D.\n\u2022 xt is provided to the player.\n\u2022 The player chooses an action at \u2208 A based on xt and on the knowledge it gathered from the previous rounds of the game.\n\u2022 The reward ~rt[at] is revealed to the player whose score is updated.\n\u2022 The player updates his knowledge based on this new experience.\nIt is important to note the partial observability of this game: the reward is known only for the action performed by the player. This is what makes offline evaluation a complicated problem. A typical goal is to maximize the sum of reward obtained after T steps. To succeed a player has to learn\nabout D and try to exploit that information. Therefore at time t, a player faces a classical exploration/exploitation dilemma: either perform an action he is uncertain about in order to improve his model of D (explore), either perform the action he believe to be optimal, although it may not be (exploit).\nA simpler variant of this problem in which no contextual information is given, called the multi armed bandit problem (MAB) was extensively studied in the literature. One can for instance mention the UCB algorithm (Auer et al., 2002) that optimistically deals with the dilemma by performing the action with higher upper confidence bound on the estimated reward expectation. The contextual bandit problem is less studied due to the additional complexity and additional assumptions entailed by the context space. The most popular algorithm is without doubt LinUCB (Li et al., 2010), although a few others exist such as epochgreedy (Langford & Zhang, 2007). LinUCB is basically an extension of the classical UCB that uses the contexts under the assumption of normality and that X = Rd. The reward expectation of an action is estimated via a linear regression on the context vectors and the confidence bound is computed using the dispersion matrix of the context vectors. These two state-of-the-art algorithms are the ones we will evaluate when running experiments."}, {"heading": "2.2. Evaluation", "text": "We define a contextual algorithm A as taking as input an ordered list of (x, a, r) triplets (history) and outputting a policy \u03c0. A policy \u03c0 maps X to A, that is chooses an action given a context. Note that we are also interested in evaluating policies. In our setting which is the most popular one, an algorithm is said optimal when maximizing the expectation of the sum of rewards after T steps:\nGA(T,D) def = ED T\u2211 t=1 ~rt[A(xt)].\nFor convenience, we define the per-trial payoff as the average click rate after T steps:\ngA(T,D) def = GA(T )\nT\nNote that for a static algorithm (ie. that always outputs the same policy \u03c0), we have that:\n\u2200T, gA(T,D) = gA(1,D) def = gA(D).\nNote that from this point on, we will simplify the notations by systematically dropping D. gA(T ) is thus the quantity we wish to estimate as the measure of performance of a bandit algorithm.\nIn order to minimize the risks entailed by playing live a new algorithm, we are also interested in the quality of the\nestimation. Bootstrapping will enable us to estimate it. To do so we need additional notations. CTRA(T ) denotes the distribution of the per-trial payoff of A after T steps (so gA(T ) is its mean). Besides estimating gA(T ), our second goal is the computation of an estimator quality assessment \u03be (CTRA(T )). Note that typically, \u03be can be a quantile, a standard error, a bias or what we will consider here for simplicity: a confidence region around the mean of CTRA(T ) (aka gA)."}, {"heading": "3. The time acceleration issue with replay methodologies", "text": "This section describes the replay methodology, that we call replay and that was introduced by (Langford et al., 2008) and analyzed for the setting we consider by (Li et al., 2011). This section also highlights the method\u2019s limitations that we overcome in this paper and is crucial to understand the significance of our contribution.\nFirst of all, as (Li et al., 2011), we assume that we have a dataset S that was acquired online using an random uniform allocation of the actions for T steps. This data collection phase can be referred as exploration policy and is our unique information on D. This random decision making implies that any point in X \u00d7 A has a non null probability to belong to S; this allows the evaluation of any policy. In a nutshell, the replay methodology on such a dataset works as follows: for each record (xt, at, rt) in S, the algorithm A is asked to choose an action given xt. If this action is at, rt is revealed to A and taken into account to evaluate its performance. If the action is different, the record is discarded. This method is proved to be unbiased in some cases (Li et al., 2011). Note that the fact it needs the data to be acquired uniformly at random is quite restrictive. This problem is well studied and replay can be extended to allow the use of data acquired by a different but known logging policy at a cost of increased variance (Langford et al., 2008). Some work has been done to reduce this variance and even allow the use of data for which the logging policy is unknown (Dud\u0131\u0301k et al., 2011; Strehl et al., 2010). Note also that if the evaluated bandit algorithm is close from the logging policy, we may even further reduce the variance (Bottou et al., 2012). Finally there exist ways to adapt this method to the case where a list of items can be recommended (Langford et al., 2008). Although we do not take into account these considerations and keep the simplest assumption in this paper for clarity, our method is based on the same ideas as replay and could therefore be extended similarly as what is presented in the works we just cited.\nAnother issue with replay is well-known but not studied at all up to our knowledge. In average, only TK records are used. Therefore replay outputs an estimate g\u0302A ( T K ) which\nfollows the distribution CTRA ( T K ) of mean gA ( T K ) . It\nis important to have in mind that gA ( T K ) = gA (T ) if and only if T = +\u221e or A is a static policy. See figure 1 for a visual example of this problem. Note that in any situation except K = 1, CTRA ( T K ) 6= CTRA (T ), and the same thing goes for the confidence region \u03be.\nOne may argue that when evaluating a RS, plenty of data is available and therefore that T is almost infinite. Consequently one may also consider replay to be almost unbiased. This is true with the classical contextual bandit framework considered in the literature. With dynamic recommendation, the main application for this method, this could not be more wrong. Indeed, we argued that in this context, everything changes, especially the available items. For instance, in news recommendation a news remains active from a few hours to two days and its CTR systematically decreases over time (Agarwal et al., 2009). Moreover we also mentioned reasons to believe that the user tastes may change as well. Therefore when evaluating a contextual bandit algorithm, we want to evaluate its behavior against a very dynamic environment and in particular its ability to adapt to it. The use of replay in such a context is often justified by the fact that the environment can be considered static for small periods of time. This is not necessary but makes the understanding of our point easier. When an algorithm faces a \u201dstatic\u201d region of a dataset of size Ti, when being replayed, it only has TiK instead of Ti steps to learn and exploit that knowledge. It is impossible to solve this problem by considering more data since new data would concern the next region, where different news with different CTR are available for recommendation, and potentially users with different tastes. In fact whatever assumptions we use to characterize how things evolve, using replay is equivalent to playing an algorithm with time going K times faster than in reality. This generates a huge bias. Note that it is most likely because of time acceleration that a non-contextual algorithm which looks a lot like UCB won a challenge evaluated by replay on the Yahoo! R6B dataset (Yahoo! Research, 2012) (news recommendation). See chapter 4 of Nicol (Nicol, 2014) for more details.\nAs a conclusion, we consider in this work a classical contextual bandit framework with a fixed number of steps T . We assume that no more than T records can be acquired. Yet it is clear that if we manage to deal with this problem without adding data, we would also be able to deal as well with the problem of evaluating dynamic recommendation for which using more data may not be possible."}, {"heading": "4. Bootstrapped Replay on Expanded Data", "text": "Now that the shortcoming of the replay method has been understood, we look for an other offline evaluation protocol that does not suffer from the time acceleration issue. The\nidea we propose stems from the idea of bootstrapping, introduced by (Efron, 1979). Thus let us remind the standard bootstrap approach. Basically, the idea is to compute the empirical distribution D\u0302T of an estimator \u03b8\u0302T computed on T observations. To do so, one only has access to a dataset S of size T . Therefore B new datasets S1, ...SB of size T are generated by making bootstrap resamples from S. A bootstrap resample is generated via drawing T samples with replacement. Note that this bootstrap procedure is a way to approximate D, the underlying distribution of the data. Computing \u03b8\u0302T on all the Si yields C\u0302TR(T ), an estimation of CTR(T ). From a theoretical point of view and under mild assumptions, \u03be ( C\u0302TR(T ) ) converges with no\nbias at a speed inO(1/T ). This means that under a assumption of the concentration speed of a statistic we are able to estimate the confidence interval of the mean of the statistic much faster than its mean. Recall that \u03be can be any measure of accuracy (defined in terms of bias, variance, confidence intervals, . . . ) over the statistic we want to study. Here we are interested in confidence intervals over CTRA(T ). The core idea of the evaluation protocol we propose in this paper is inspired by bootstrapping and inherits its theoretical properties. Using our notations, here is the description of this new method. From a dataset of size T with K possible choices of action at each step - we do not require K to be constant over time -,we generate B datasets of size K.T by sampling with replacement, following the non-parametric bootstrap procedure. Then for each dataset Sb we use the classical replay method to compute an estimate g\u0302A(b)(T ). Therefore A is evaluated on T records on average. This step can be seen as a subsampling step that allows to return in the classical bootstrap setting. Thus note that it would not work for a purely deterministic policy, that for obvious reason would not take advantage of the data ex-\nAlgorithm 1 Bootstrapped Replay on Expanded Data (BRED). We sketch this algorithm so that it looks very much like replay in (Li et al., 2011). Thus an algorithm is a function that maps an history of events h(b) to a policy \u03c0 which itself maps contexts to actions. This makes the learning process of the algorithm appear clearly. A computationally efficient implementation would be slightly different. Notice also that for clarity, we only compute g\u0302A(T ) and omit C\u0302TRA(T ). Input\n\u2022 A (contextual) bandit algorithm A\n\u2022 A dataset S of T triplets (x, a, r)\n\u2022 An integer B\nOutput: An estimate of gA\nh(b) \u2190 \u2205, \u2200b \u2208 {1..B} /*empty history*/ G\u0302\n(b) A \u2190 0, \u2200b \u2208 {1..B} T (b) \u2190 0, \u2200b \u2208 {1..B} /* Bootstrap loop*/ for b \u2208 {1..B} do\n/* estimation of CTR(b)A (T )*/ for i \u2208 {1..T \u00d7K} do\nSample with replacement (x, a, r) of S x\u2190 JITTER(x) /*optional*/ \u03c0 \u2190 A(h(b)) if \u03c0(x) = a then\nadd (x, a, r) to h(b) G\u0302 (b) A \u2190 G\u0302 (b) A + r\nT (b) \u2190 T (b) + 1 end if\nend for end for\nreturn 1B B\u2211 b=1 G\u0302 (b) A T (b)\npansion (an assumption in the formal analysis will reflect this fact). g\u0302A(T ) is given by averaging the g\u0302A(b)(T ). Together, the g\u0302A(b)(T ) are also an estimation of CTRA(T ), the distribution of the CTR ofA after T interactions withD on which we can compute our estimator quality assessment \u03be. More formally, the bootstrap estimator of the density of CTRA(T ) is estimated as follows:\nC\u0302TRA(T )(x) = 1\nB B\u2211 b=1 I\n( \u221a T [ g\u0302 (b) A (T )\u2212 g\u0302A(T )\n\u03c3\u0302A(T )\n] \u2264 x )\nwhere \u03c3\u0302A(T ) is the empirical standard deviation obtained when computing the bootstrap estimates g\u0302A(b)(T ). The\ncomplete procedure, called Bootstrapped Replay on Expanded Data (BRED), is implemented in algorithm 1.\nTo complete the BRED procedure, one last detail is necessary. Each record of the original dataset S is contained K times in expectation in each expanded dataset Sb. Therefore a learning algorithm may tend to overfit which would bias the estimator. To prevent this from happening, we introduce a small amount of Gaussian noise on the contexts. This technique is known as jittering and is well studied in the neural network field (Koistinen & Holmstro\u0308m, 1992). The goal is the same, that is avoiding overfitting. In practice however it is slightly different as neural network are generally not learning online but on batches of data, each data being used several times during learning. In bootstrapping theory this technique is known as the smoothed bootstrap and was introduced by (Silverman & Young, 1987). We mentioned that the bootstrap resampling is a way to approximate D. The smoothed bootstrap goes further by performing a kernel density estimation (KDE) of the data and sampling from it. Sampling from a KDE of the data where the kernel is Gaussian of bandwidth h is equivalent to sampling a record uniformly from S and applying a random noise sampled from N (0, h2), which is what jittering does. The usual purpose of doing so in statistics is to get a less noisy empirical distribution for the estimator. Note that here we perform a partially smoothed bootstrap as we only apply a KDE on the part of D that generates the contexts."}, {"heading": "5. Theoretical analysis", "text": "In this section, we make a theoretical analysis of our evaluation method BRED. The core loop in BRED is a bootstrap loop; henceforth, to complete this analysis, we first restate the theorem 1 which is a standard result of the bootstrap asymptotic analysis (Kleiner et al., 2012). Notice a small detail: each bootstrap step estimates a realization of CTRA(T ). The number of evaluations - which is also the number of non rejects - is a random variable denoted T (b). Theorem 1. Suppose that:\n\u2022 A is a recommendation algorithm which generates a fixed policy over time (this hypothesis can be weakened as discussed in remark 2),\n\u2022 K items may be recommended at each time step,\n\u2022 \u03be (CTRA(T )) admits an expansion as an asymptotic series\n\u03be (CTRA(T )) = z+ p1\u221a T + . . .+ p\u03b1 T\u03b1/2 +o\n( 1\nT\u03b1/2 ) where z is a constant independent of the distribution D (as defined in Sec. 2.1), and the pi are polynomials in the moments ofCTRA(T ) underD (this hypothesis is discussed and explained in remark 1),\n\u2022 The empirical estimator \u03be ( C\u0302TRA(T ) ) admits a sim-\nilar expansion:\nz + p\u03021\u221a T + . . .+ p\u0302\u03b1 T\u03b1/2 +O\n( 1\nT\u03b1/2\n) . (1)\nThen, for T \u2264 T (b) \u00d7K and assuming finite first and second moments of C\u0302TRA(T ), with high probability:\u2223\u2223\u2223\u03be (CTRA(T ))\u2212 \u03be (C\u0302TRA(T ))\u2223\u2223\u2223 = O ( Var(p\u0302(1)\u03b1 \u2212 p\u03b1|DT )\u221a\nT \u00b7B\n) +O ( 1\nT\n) +O ( 1\nT \u221a T ) (2)\nwhere DT is the resampled distribution of D using T realizations.\nProof. it is actually a straightforward adaptation of the proof of theorem 3 of (Kleiner et al., 2012). Also note that this theorem is a reformulation of the bootstrap main convergence result as introduced by (Efron, 1979).\nNow, we use theorem 1 to bound the error made by BRED in the theorem 2.\nTheorem 2. Assuming that\n\u03be (CTRA(T )) = z + p1\u221a T + . . .+ p\u03b1 T\u03b1/2 + o\n( 1\nT\u03b1/2\n)\nThen for algorithm A producing a fixed policy over time, BRED applied on a dataset of size T evaluates the expectation of the CTRA with no bias and with high probability for B and T large enough:\n\u2223\u2223\u2223\u03be (CTRA(T ))\u2212 \u03be (C\u0302TRA(T ))\u2223\u2223\u2223 = O( 1 T ) This means that the convergence of the estimator of \u03be (CTRA(T )) is much faster than the convergence of the estimator of gA(T ) (which is in O(1/ \u221a T ). This will allow a nice control of the risk that g\u0302A(T ) may be badly evaluated.\nThe sketch of the proof of theorem 2 is the following: first we prove that the replay strategy is able to estimate the moments of the distribution ofCTRA fast enough with respect to T . The second step consists in using classical results from bootstrap theory to guarantee the unbiased convergence of the aggregation C\u0302TRA(T ) to the true distribution with an O( 1T ) speed. The rational behind this is that the gap introduced by the subsampling will be of the order of O( 1\u221a\nTB ).\nProof. At each iteration of the bootstrap loop (indexed by b), BRED is estimating the CTR using the replay method on a dataset of size T \u2032 = K \u00d7 T . As the actions in S were chosen uniformly at random, we have E(T (b)) = T \u2032/K = T .\nAs the policy is fixed, we can use the multiplicative Chernoff\u2019s bound as in (Li et al., 2011) to obtain for all bootstrap step b:\nPr (\u2223\u2223\u2223T (b) \u2212 T \u2223\u2223\u2223 \u2265 \u03b31T) \u2264 exp(\u2212T\u03b321\n3 ) for any \u03b31 > 0 (where Pr(e) denotes the probability of event e). A similar inequality can be obtained with E(G\u0302A) = TgA:\nPr (\u2223\u2223\u2223G\u0302A \u2212 TgA\u2223\u2223\u2223 \u2265 \u03b32TgA) \u2264 exp(\u2212TgA\u03b322\n3\n)\nThus with \u03b31 = \u221a 3 T ln 4 \u03b4 and \u03b32 = \u221a 3 TgA ln 4\u03b4 using a union bound over probabilities, we have with probability at least 1\u2212 \u03b4:\n1\u2212 \u03b31 \u2264 T (b)\nT \u2264 1 + \u03b31\ngA1\u2212 \u03b32 \u2264 G\u0302A T \u2264 gA1 + \u03b32\nwhich implies\u2223\u2223\u2223\u2223\u2223 G\u0302AT (b) \u2212 gA \u2223\u2223\u2223\u2223\u2223 \u2264 (\u03b31 + \u03b32)gA1\u2212 \u03b31 = O (\u221a ga T ln 1 \u03b4 ) So with high probability the first moment of C\u0302TRA(T (b)) as estimated by the replay method admits an asymptotic expansion in 1/ \u221a E(T (b)) = 1/T .\nNow we need to focus on higher order terms. All the moments are finite because the reward distribution over S is bounded. Recall that by hypothesis \u03be (CTRA(T )) admits a \u03b1th order term:\np\u03b1 = ED ( CTRA(T (b))\u03b1 )\nThe Chernoff\u2019s bound can be applied to |(T (b))\u03b1\u2212T\u03b1| and |G\u0302\u03b1A \u2212 T\u03b1g\u03b1A| leading to\u2223\u2223\u2223\u2223\u2223 G\u0302\u03b1A(T (b))\u03b1 \u2212 g\u03b1A \u2223\u2223\u2223\u2223\u2223 = O ((ga T )\u03b1 2 ln 1 \u03b4 )\nWith probability at least 1\u2212 \u03b4. So for a large enough T (b), \u03be ( C\u0302TRA(T (b)) ) admits a expansion in polynomials of\n1/ \u221a T . Thus theorem 1 applies and the aggregation of all the g\u0302(b)A (T (b)) allows an estimation of CTRA(T ). For a large enough number of bootstrap iterations (the value of B in BRED), we obtain a convergence speed in O(1/T ) with high probability, which concludes the proof.\nAfter this analysis, we make two remarks about the assumptions that were needed to establish the theorems.\nRemark 1: The key point of the theorems is the existence of an asymptotic expansion of CTRA(T ) and C\u0302TRA(T ) in polynomials of 1/ \u221a T . This is a natural hypothesis for CTRA(T ) because the CTR is an average of bounded variables (probabilities of click). Note that the proof of theorem 2 shows that although T (b) is random the expansion remains valid anyway. For a contextual bandit algorithm A producing a fixed policy, the mean is going to concentrate according to the central limit theorem (CLT). Furthermore this hypothesis, omnipresent in bootstrap theory (Efron, 1979), is for instance justified in econometrics by the fact that all the common estimators respect it (Horowitz, 2001). Yet this assumption is not verified for a static deterministic policy.\nRemark 2 Let us consider algorithms that produce a policy which changes over time (a learning algorithm in particular). After a sufficient amount of recommendations, a reasonable enough algorithm will produce a policy that will not change any longer (if the world is stationary). Thus again, the CLT will apply and we will observe a convergence of g\u0302A(T ) to its limit in 1/ \u221a T . Nevertheless noth-\ning holds true here when the algorithm is actually learning. This is due to the fact that the Chernoff bound no longer applies as the steps are not independent. However the behavior of classical learning algorithms are smooth, especially when randomized (see (Auer et al., 2003) for an example of a randomized version of UCB). (Li et al., 2011) argue that in this case convergence bounds may be derived for replay (which then could be applied to BRED) at the cost of a much more complicated analysis including smoothness assumptions. For non reasonable algorithms and thus in the general case, no guarantees can be provided. By the way note that a very intuitive way to justify Jittering is to consider that it helps the Chernoff bound being \u201dmore true\u201d in the case of a learning algorithm."}, {"heading": "6. Experiments in realistic settings", "text": "As we proved that BRED has promising theoretical guarantees in the setting introduced in (Li et al., 2011), let us now compare its empirical performance to that of the replay method"}, {"heading": "6.1. Synthetic data and discussing Jittering", "text": "The first set of experiments was run on synthetic data. Indeed, we needed to be able to compare the errors of estimation of the two methods on various fixed size datasets relatively to the ground truth: an evaluation against the model itself. Before going any further, let us describe the model we used. It is a linear model with Gaussian noise (as in (Li et al., 2010)) and was built as follows:\n\u2022 a fixed action set (or news set) of size K = 10.\n\u2022 The context space is X = R15. Each context x is generated as a sum c + n where c \u223c N (0, 1) and n \u223c N (0, 12 ).\n\u2022 The CTR of a news i displayed in a context x is given linearly by qi+wTi c. Note the non-contextual element qi and that the noise n is ignored.\n\u2022 Finally there are two kinds of news: (i) 4 \u201cuniversal\u201d news that are interesting in general like Obama is reelected and for which qi \u223c U(0.4, 0.5) is high and wi = 015. (ii) 6 specific news like New Linux distribution released for which qi \u223c U(0.1, 0.2) is low and wi consists of zeros except for a numberm of relevant weights sampled from N (0, 15 ).\nA non contextual approach would perform decently by quickly learning the qi values. Yet LinUCB (Li et al., 2010), a contextual bandit algorithm will do better by learning when to recommend the specific news. Figure 2 displays the results and interpretation of an experiment which\nBootstrapped evaluation of contextual bandit algorithms\nconsists in evaluating LinUCB(\u03b1 = 1) using the different methods. It is clear that BRED converges much faster than the replay method.\nRemark: As it can be seen on Figure 2, jittering is very important to obtain good performance when evaluating a learning algorithm. Empirically, a good choice for the level of jitter seems to be a function in O ( 1\u221a T ) , with T the size of the dataset. Note that this is proportional to the standard distribution of the posterior of the data. The results confirm our intuition: jittering is very important when the dataset is small but gets less and less necessary as the dataset grows."}, {"heading": "6.2. Real data", "text": "Adapting replay to a real life dataset, corresponding to dynamic recommendation is straightforward although it leads to biased estimations. BRED really needs the assumption of a static world in order to perform the bootstrap resamples. Therefore BRED needs to be run on successive windows of the dataset on which a static assumption can be made. This creates a bias/variance trade-off: if the windows are too big, some dynamic properties of the world may be erased (bias). On the contrary, too smalls window will lead to very variate bootstrap estimates. To simplify things, we ran experiments assuming a static world on small portions of the Yahoo! R6B dataset. We actually took the smallest number of portions such that a given portion has a fixed pool of news (\u2248 630 portions). This experiment is similar to what is done in (Li et al., 2011): the authors measured the error of the estimated CTR of UCB (\u03b1 = 1) by the replay method on datasets of various sizes relatively to what they call the ground truth: an evaluation of the same algorithm on a real fraction of the audience. As we obviously cannot do that, we used a simple trick. For each portion i of size Ti with Ki news, we computed an estimation of the ground truth gA ( Ti Ki ) by averaging the estimated CTR of UCB using the replay method on 100 random permutations of the data. For each portion the experiment consists in subsampling Ti/Ki records and evaluating UCB using replay and BRED on this smaller dataset to estimate the ground truth using less data, faking time acceleration. The results and interpretation are shown on Figure 3: the better accuracy of BRED is very clearly illustrated."}, {"heading": "7. Conclusion", "text": "In this paper, we studied the problem of recommendation system evaluation, sticking to a realistic setting: we focused on obtaining a methodology for practical offline evaluation, providing a good estimate using a reasonable amount of data. Previous methods are proved to be asymptotically unbiased with a low speed of convergence on a\n++\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+ + + + +\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+ + +\n+\n+\n+\n+\n+\n+\n+\n+ +\n+\n+\n+ +\n++\n+\n+\n+\n+\n+\n++ + + + +\n+\n+ ++ +\n+\n+\n+ + +\n+\n+ + + ++ +\n++\n+\n+ +\n+\n+\n+\n+ +\n+\n+\n+ + + +\n+\n+\n+\n+\n+\n+ +\n+\n+\n+\n+\n+\n+\n+ +\n+\n+\n+ ++\n+\n+\n+\n+\n+\n+\n++\n+\n+\n+\n+\n+ +\n+ +\n+++\n+\n+\n+ +\n+\n+\n+\n+\n+\n+\n+\n+ +\n+\n+ +\n+\n+\n+\n+\n++ +\n+\n+\n+\n+\n++ +\n+\n+\n+\n+\n+ +\n++ + + + ++\n+\n+\n+\n+ +\n+ +\n+\n+ +\n+\n+\n+\n+ + +\n+\n+\n+ +\n+ +\n+\n+ +\n+ +\n+\n+ ++\n+\n+\n+ +\n+\n+\n+\n+\n+\n+\n+\n++ +\n+\n+ +\n+\n+\n+\n+\n+\n+\n+\n+\n+ +\n+\n+\n+\n+ +\n+\n+ +++\n+++\n+\n+\n++\n+\n+\n++\n+\n+ +\n+\n+\n+\n+\n+\n+\n+\n++\n+\n+\n+\n+ + + + + + +\n+\n+\n+\n+\n+\n+ +\n+\n+\n+\n+\n+\n+\n+ +\n+\n+\n+\n+\n+\n+ + +\n+ +\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+ + ++\n+\n+\n+\n+\n+ ++ +\n+ + +\n+\n+\n+\n+ + +\n+\n+ ++ +\n+\n+\n+\n+\n+\n+\n+\n+ + +\n+\n+\n+ +\n+\n+\n+ +\n+\n+\n+\n+\n+\n+\n+\n+\n+ + ++\n+\n+\n+\n+\n+\n+\n+ +\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+ + ++\n+\n+\n+ +\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+ +\n+\n+ +\n+\n+\n+\n+ +\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+ + + +\n+ + ++ + + +\n+\n++\n+ +\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+ + + + + +\n+\n+\n+\n+ +\n+ + + +\n+\n+\n+ +\n+ + +\n+\n+ + + + +\n+ ++\n++\n+\n+\n+ + +\n+ +\n+\n+ + +\n+++\n+\n+\n+\n+\n++\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+ +\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+ +\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+ +\n+\n+\n+\n+\n+\n+\n+\n+ ++\n+\n+\n+\n+\n+\n+\n+\n+\n++\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n++\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+ +\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+ +\n+\n+ +\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+ + +\n+\n+\n+ +\n+\n+\n+\n+\n+\n+\n+ +\n+ +\n+\n+\n+\n+\n+\n+ +\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+ +\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+ +\n+\n+\n++\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+ +\n+ +\n+\n+\n+\n+ +\n+\n+ +\n+\n+\n+\n+ +\n+ +\n+\n+\n+\n+ +\n+\n+\n+\n+ +\n+\n+ +\n+\n+\n+\n+\n+\n+ +\n+\n+\n+\n+\n+\n+ ++\n++\n+\n+ +\n+\n+\n+ +\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+ +\n+ +\n+\n++ +\n+\n+\n+ +\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+ +\n+\n+ +\n+\n+\n+\n+\n+ +\n+\n+\n+\n++\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+ +\n+\n+\n+\n+\n+\n+ +\n+\n+\n+\n++\n+\n+\n+\n+ +\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n++ ++\n+ ++\n+\n+\n+\n+\n+ +\n+\n+ +\n+ +\n++ +\n+\n+ +\n+\n+\n+\n+ +\n+\n+\n+\n+\n+\n+ +\n+\n+ + + +\n+\n+\n+ +\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n++\n+\n+\n+\n+\n+\n+ ++ +\n+\n+ + +\n+\n+ ++ +\n+\n+\n+ +\n++\n+\n+ ++ + +\n+ + +\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+ +\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+ +\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+ +\n+\n+\n+ +\n+ +\n+\n+\n+\n++\n+\n+\n+\n+ +\n+\n+ ++ ++\n+\n+ +\n+\n+ + + +\n+\n+\n+\n+\n+ +\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+ +\n+ ++\n+\n+\n++\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n++\n+\n+\n+\n+\n+\n+\n+\n+ +\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+ +\n+\n+\n+\n+\n+ +\n+\n+\n+\n+\n+\n+\n+ +\n+\n+ +\n+\n+\n+ + +\n+ +\n+\n+\n+\n+\n+\n+\n+\n+\n++\n+\n+\n+\n+\n+\n+\n+\n+ +\n+ +\n+\n+ +\n+\n+\n+\n+\n+\n+\n+ +\n+ +\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+ +\n+\n+\n+\n++\n++ ++\n+\n+\n+\n+ +\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+ +\n++\n+\n+\n+\n+ +\n++ +\n+\n+\n+\n+\n+\n+\n+ +\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+++\n+\n+\n++\n+\n+\n+\n+ +\n+\n+\n+\n+\n+\n+ +\n+\n+\n+\n+\n+ +\n+\n+ +\n+ +\n+ + ++\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+ +\n+ +\n+ +\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n++\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+ +\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+ + + +\n+\n+ +\n+\n+ +\n+\n+\n+\n+\n+ + + + + +\n+\n+\n+\n+\n+\n+ +\n+\n+\n+ +\n+\n+\n+\n+\n+\n++\n+\n++\n+\n+\n+ ++\n+\n+\n+\n+\n+\n++\n+\n+ +\n+\n+\n+\n+ + + +\n+\n+\n++\n+\n+\n+\n+\n++ + +\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n0 50000 100000 150000 200000 250000 300000\n\u2212 0.\n05 0.\n00 0.\n05 0.\n10 0.\n15 0.\n20\nDataset size\nE st\nim at\ned C\nT R\n\u2212 A\nct ua\nl C T\nR\n+ ++ + + ++ + +\n+ + +\n+ + +\n+ + + +\n+ + +\n+ ++++\n+\n+ ++\n+\n+\n+ +\n+++ +++\n+\n+ + +\n+ +\n+ + + +\n+\n+ ++++\n+\n+ + + + +\n+\n+ +\n+\n+\n+\n+\n+\n+\n+\n+ +\n+\n+\n++\n+\n+ +\n++\n+\n+\n++ ++\n+\n+ + +\n+\n+\n+\n+++ ++ ++\n+\n+\n+\n+\n+\n+ ++\n+\n++ + + + +\n++ +\n+\n+ +\n+\n+\n+\n+\n+\n+\n+\n+ +\n+\n+ +\n++ +\n+ +\n+\n+\n+\n+\n+\n++\n+ +\n+\n+\n+\n+\n+\n+ ++ ++\n+\n+ + +\n+ +\n+\n++ +++ + ++ + + + ++++ +\n+\n+\n++\n+\n+++ +\n+\n+\n+\n+\n+ +\n+\n+\n++ +++\n++ +\n+ + +\n+\n+\n+\n+ +\n+\n+\n+\n+\n+\n++ + + ++\n+\n+\n+\n+\n+\n+\n+ + +\n+\n+\n+ + Replay BRED\nFigure 3. The difference between the estimated CTR and the actual one on some batches extracted from the Yahoo! R6B dataset for a UCB. Batches are build as explained in section 6.2. The closer to 0, the better. Please note that the replay method tends to under-estimate the true CTR for small batches. This is due to the fact that UCB does not have enough time to reach its actual CTR.\nstatic dataset, but yield counter-intuitive estimates of performance on real datasets. Here, we introduce BRED, a method with a much faster speed of convergence on static datasets (at the cost of loosing unbiasedness) which allows it to be much more accurate on dynamic data. Experiments demonstrated our point; they were performed on a publicly available dataset made from Yahoo! server logs and on synthetic data presenting the time acceleration issue. This paper was also meant to highlight the time acceleration issue and the misleading results given by a careless evaluation of an algorithm. Finally our method comes with a very desirable property in a context of minimizing the risks entailed by putting online a new RS: an extremely accurate estimation of the variability of the estimator it provides.\nAn interesting line of future work is the automatic selection of the Jittering bandwidth. Note that this problem is extensively studied in the context of KDE (Scott, 1992).\nA possible extension of this work is to use BRED to build a \u201dsafe controller\u201d. Indeed, when a company uses a recommendation system that behaves according to a certain policy \u03c0 that reaches a certain level of performance, the hope is that when changing the recommendation algorithm, the performance will not drop. As an extension of the work presented here, it is possible to collect some data using the current policy \u03c0, compute small variations of \u03c0 with tight confidence intervals over their CTR and then replace the current policy \u03c0 with the improved one. This may be seen as a kind of \u201cgradient\u201d ascent of the CTR in the space of policies."}], "references": [{"title": "Spatio-temporal models for estimating clickthrough rate", "author": ["Agarwal", "Deepak", "Chen", "Bee-Chung", "Elango", "Pradheep"], "venue": "In Proceedings of the 18th international conference on World wide web(WWW),", "citeRegEx": "Agarwal et al\\.,? \\Q2009\\E", "shortCiteRegEx": "Agarwal et al\\.", "year": 2009}, {"title": "Finite-time analysis of the multiarmed bandit problem", "author": ["Auer", "Peter", "Cesa-Bianchi", "Nicol\u00f2", "Fischer", "Paul"], "venue": "Machine Learning,", "citeRegEx": "Auer et al\\.,? \\Q2002\\E", "shortCiteRegEx": "Auer et al\\.", "year": 2002}, {"title": "The nonstochastic multiarmed bandit problem", "author": ["Auer", "Peter", "Cesa-Bianchi", "Nicol\u00f2", "Freund", "Yoav", "Schapire", "Robert E"], "venue": "SIAM J. Comput.,", "citeRegEx": "Auer et al\\.,? \\Q2003\\E", "shortCiteRegEx": "Auer et al\\.", "year": 2003}, {"title": "Counterfactual reasoning and learning systems", "author": ["Bottou", "L\u00e9on", "Peters", "Jonas", "Qui\u00f1onero Candela", "Joaquin", "Charles", "Denis X", "Chickering", "D. Max", "Portugualy", "Elon", "Ray", "Dipankar", "Simard", "Patrice", "Snelson", "Ed"], "venue": "Technical report,", "citeRegEx": "Bottou et al\\.,? \\Q2012\\E", "shortCiteRegEx": "Bottou et al\\.", "year": 2012}, {"title": "Doubly robust policy evaluation and learning", "author": ["Dud\u0131\u0301k", "Miroslav", "Langford", "John", "Li", "Lihong"], "venue": "CoRR, abs/1103.4601,", "citeRegEx": "Dud\u0131\u0301k et al\\.,? \\Q2011\\E", "shortCiteRegEx": "Dud\u0131\u0301k et al\\.", "year": 2011}, {"title": "Bootstrap methods: Another look at the jackknife", "author": ["B. Efron"], "venue": "The Annals of Statistics,", "citeRegEx": "Efron,? \\Q1979\\E", "shortCiteRegEx": "Efron", "year": 1979}, {"title": "Omnipress", "author": ["USA", "July"], "venue": "ISBN 978-1-4503-1285-1.", "citeRegEx": "USA and July,? 2012", "shortCiteRegEx": "USA and July", "year": 2012}, {"title": "Controlled experiments on the web: Survey and practical guide", "author": ["Kohavi", "Ron", "Longbotham", "Roger", "Sommerfield", "Dan", "Henne", "Randal M"], "venue": "Journal of Data Mining and Knowledge Discovery,", "citeRegEx": "Kohavi et al\\.,? \\Q2009\\E", "shortCiteRegEx": "Kohavi et al\\.", "year": 2009}, {"title": "The epoch-greedy algorithm for multi-armed bandits with side information", "author": ["Langford", "John", "Zhang", "Tong"], "venue": "In Proc. NIPS,", "citeRegEx": "Langford et al\\.,? \\Q2007\\E", "shortCiteRegEx": "Langford et al\\.", "year": 2007}, {"title": "Exploration scavenging", "author": ["Langford", "John", "Strehl", "Alexander", "Wortman", "Jennifer"], "venue": "In Proceedings of the International Conference on Machine Learning (ICML),", "citeRegEx": "Langford et al\\.,? \\Q2008\\E", "shortCiteRegEx": "Langford et al\\.", "year": 2008}, {"title": "A contextual-bandit approach to personalized news article recommendation", "author": ["Li", "Lihong", "Chu", "Wei", "Langford", "John", "Schapire", "Robert E"], "venue": "In Proceedings of the 19th international conference on World wide web (WWW),", "citeRegEx": "Li et al\\.,? \\Q2010\\E", "shortCiteRegEx": "Li et al\\.", "year": 2010}, {"title": "Unbiased offline evaluation of contextual-bandit-based news article recommendation algorithms", "author": ["Li", "Lihong", "Chu", "Wei", "Langford", "John", "Wang", "Xuanhui"], "venue": "Proc. Web Search and Data Mining (WSDM),", "citeRegEx": "Li et al\\.,? \\Q2011\\E", "shortCiteRegEx": "Li et al\\.", "year": 2011}, {"title": "Contextual multi-armed bandits", "author": ["T. Lu", "D. P\u00e1l", "M. P\u00e1l"], "venue": "In Proc. of the 13th Artificial Intelligence and Statistics (AI & Stats), JMLR: W&CP", "citeRegEx": "Lu et al\\.,? \\Q2010\\E", "shortCiteRegEx": "Lu et al\\.", "year": 2010}, {"title": "Data-driven evaluation of Contextual Bandit algorithms and applications to Dynamic Recommendation", "author": ["Nicol", "Olivier"], "venue": "PhD thesis,", "citeRegEx": "Nicol and Olivier.,? \\Q2014\\E", "shortCiteRegEx": "Nicol and Olivier.", "year": 2014}, {"title": "Some aspects of the sequential design of experiments", "author": ["Robbins", "Herbert"], "venue": "Bulletin of the American Mathematical Society,", "citeRegEx": "Robbins and Herbert.,? \\Q1952\\E", "shortCiteRegEx": "Robbins and Herbert.", "year": 1952}, {"title": "Multivariate Density Estimation: Theory, Practice, and Visualization", "author": ["D.W. Scott"], "venue": "Wiley Series in Probability and Statistics. Wiley,", "citeRegEx": "Scott,? \\Q1992\\E", "shortCiteRegEx": "Scott", "year": 1992}, {"title": "The bootstrap: To smooth or not to smooth? Biometrika", "author": ["BW Silverman", "Young", "GA"], "venue": null, "citeRegEx": "Silverman et al\\.,? \\Q1987\\E", "shortCiteRegEx": "Silverman et al\\.", "year": 1987}, {"title": "Learning from logged implicit exploration data", "author": ["Strehl", "Alexander L", "Langford", "John", "Li", "Lihong", "Kakade", "Sham"], "venue": "In Proc. NIPS,", "citeRegEx": "Strehl et al\\.,? \\Q2010\\E", "shortCiteRegEx": "Strehl et al\\.", "year": 2010}, {"title": "Reinforcement Learning: An Introduction. Adaptive Computation and Machine Learning Series", "author": ["R.S. Sutton", "A.G. Barto"], "venue": null, "citeRegEx": "Sutton and Barto,? \\Q1998\\E", "shortCiteRegEx": "Sutton and Barto", "year": 1998}, {"title": "On the likelihood that one unknown probability exceeds another in view of the evidence of two samples", "author": ["W.R. Thompson"], "venue": null, "citeRegEx": "Thompson,? \\Q1933\\E", "shortCiteRegEx": "Thompson", "year": 1933}, {"title": "R6B - Yahoo! front page today module user click log dataset, publicly released via the Yahoo! webscope", "author": ["Yahoo! Research"], "venue": null, "citeRegEx": "Research.,? \\Q2012\\E", "shortCiteRegEx": "Research.", "year": 2012}], "referenceMentions": [{"referenceID": 7, "context": "For such systems, the best way to compare the performance of two algorithms is to perform A/B testing on a subset of the web audience (Kohavi et al., 2009).", "startOffset": 134, "endOffset": 155}, {"referenceID": 12, "context": "A natural way to model this situation is as a reinforcement learning problem (Sutton & Barto, 1998), and more precisely using the contextual bandit framework (Lu et al., 2010) that was introduced for the very purpose of news recommendation.", "startOffset": 158, "endOffset": 175}, {"referenceID": 19, "context": "This problem can be traced back to Robbins and Munro in 1952 (Robbins, 1952) and even Thompson in 1933 (Thompson, 1933).", "startOffset": 103, "endOffset": 119}, {"referenceID": 1, "context": "One can for instance mention the UCB algorithm (Auer et al., 2002) that optimistically deals with the dilemma by performing the action with higher upper confidence bound on the estimated reward expectation.", "startOffset": 47, "endOffset": 66}, {"referenceID": 10, "context": "The most popular algorithm is without doubt LinUCB (Li et al., 2010), although a few others exist such as epochgreedy (Langford & Zhang, 2007).", "startOffset": 51, "endOffset": 68}, {"referenceID": 9, "context": "The time acceleration issue with replay methodologies This section describes the replay methodology, that we call replay and that was introduced by (Langford et al., 2008) and analyzed for the setting we consider by (Li et al.", "startOffset": 148, "endOffset": 171}, {"referenceID": 11, "context": ", 2008) and analyzed for the setting we consider by (Li et al., 2011).", "startOffset": 52, "endOffset": 69}, {"referenceID": 11, "context": "First of all, as (Li et al., 2011), we assume that we have a dataset S that was acquired online using an random uniform allocation of the actions for T steps.", "startOffset": 17, "endOffset": 34}, {"referenceID": 11, "context": "This method is proved to be unbiased in some cases (Li et al., 2011).", "startOffset": 51, "endOffset": 68}, {"referenceID": 9, "context": "This problem is well studied and replay can be extended to allow the use of data acquired by a different but known logging policy at a cost of increased variance (Langford et al., 2008).", "startOffset": 162, "endOffset": 185}, {"referenceID": 4, "context": "Some work has been done to reduce this variance and even allow the use of data for which the logging policy is unknown (Dud\u0131\u0301k et al., 2011; Strehl et al., 2010).", "startOffset": 119, "endOffset": 161}, {"referenceID": 17, "context": "Some work has been done to reduce this variance and even allow the use of data for which the logging policy is unknown (Dud\u0131\u0301k et al., 2011; Strehl et al., 2010).", "startOffset": 119, "endOffset": 161}, {"referenceID": 3, "context": "Note also that if the evaluated bandit algorithm is close from the logging policy, we may even further reduce the variance (Bottou et al., 2012).", "startOffset": 123, "endOffset": 144}, {"referenceID": 9, "context": "Finally there exist ways to adapt this method to the case where a list of items can be recommended (Langford et al., 2008).", "startOffset": 99, "endOffset": 122}, {"referenceID": 0, "context": "For instance, in news recommendation a news remains active from a few hours to two days and its CTR systematically decreases over time (Agarwal et al., 2009).", "startOffset": 135, "endOffset": 157}, {"referenceID": 5, "context": "idea we propose stems from the idea of bootstrapping, introduced by (Efron, 1979).", "startOffset": 68, "endOffset": 81}, {"referenceID": 11, "context": "We sketch this algorithm so that it looks very much like replay in (Li et al., 2011).", "startOffset": 67, "endOffset": 84}, {"referenceID": 5, "context": "Also note that this theorem is a reformulation of the bootstrap main convergence result as introduced by (Efron, 1979).", "startOffset": 105, "endOffset": 118}, {"referenceID": 11, "context": "As the policy is fixed, we can use the multiplicative Chernoff\u2019s bound as in (Li et al., 2011) to obtain for all bootstrap step b: Pr (\u2223\u2223\u2223T (b) \u2212 T \u2223\u2223\u2223 \u2265 \u03b31T) \u2264 exp(\u2212T\u03b32 1 3 ) for any \u03b31 > 0 (where Pr(e) denotes the probability of event e).", "startOffset": 77, "endOffset": 94}, {"referenceID": 5, "context": "Furthermore this hypothesis, omnipresent in bootstrap theory (Efron, 1979), is for instance justified in econometrics by the fact that all the common estimators respect it (Horowitz, 2001).", "startOffset": 61, "endOffset": 74}, {"referenceID": 2, "context": "However the behavior of classical learning algorithms are smooth, especially when randomized (see (Auer et al., 2003) for an example of a randomized version of UCB).", "startOffset": 98, "endOffset": 117}, {"referenceID": 11, "context": "(Li et al., 2011) argue that in this case convergence bounds may be derived for replay (which then could be applied to BRED) at the cost of a much more complicated analysis including smoothness assumptions.", "startOffset": 0, "endOffset": 17}, {"referenceID": 11, "context": "Experiments in realistic settings As we proved that BRED has promising theoretical guarantees in the setting introduced in (Li et al., 2011), let us now compare its empirical performance to that of the replay method 6.", "startOffset": 123, "endOffset": 140}, {"referenceID": 10, "context": "It is a linear model with Gaussian noise (as in (Li et al., 2010)) and was built as follows: \u2022 a fixed action set (or news set) of size K = 10.", "startOffset": 48, "endOffset": 65}, {"referenceID": 10, "context": "Yet LinUCB (Li et al., 2010), a contextual bandit algorithm will do better by learning when to recommend the specific news.", "startOffset": 11, "endOffset": 28}, {"referenceID": 11, "context": "This experiment is similar to what is done in (Li et al., 2011): the authors measured the error of the estimated CTR of UCB (\u03b1 = 1) by the replay method on datasets of various sizes relatively to what they call the ground truth: an evaluation of the same algorithm on a real fraction of the audience.", "startOffset": 46, "endOffset": 63}], "year": 2014, "abstractText": "In many recommendation applications such as news recommendation, the items that can be recommended come and go at a very fast pace. This is a challenge for recommender systems (RS) to face this setting. Online learning algorithms seem to be the most straight forward solution. The contextual bandit framework was introduced for that very purpose. In general the evaluation of a RS is a critical issue. Live evaluation is often avoided due to the potential loss of revenue, hence the need for offline evaluation methods. Two options are available. Model based methods are biased by nature and are thus difficult to trust when used alone. Data driven methods are therefore what we consider here. Evaluating online learning algorithms with past data is not simple but some methods exist in the literature. Nonetheless their accuracy is not satisfactory mainly due to their mechanism of data rejection that only allow the exploitation of a small fraction of the data. We precisely address this issue in this paper. After highlighting the limitations of the previous methods, we present a new method, based on bootstrapping techniques. This new method comes with two important improvements: it is much more accurate and it provides a measure of quality of its estimation. The latter is a highly desirable property in order to minimize the risks entailed by putting online a RS for the first time. We provide both theoretical and experimental proofs of its superiority compared to state-of-the-art methods, as well as an analysis of the convergence of the measure of quality.", "creator": "LaTeX with hyperref package"}}}