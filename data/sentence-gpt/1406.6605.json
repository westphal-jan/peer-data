{"id": "1406.6605", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "24-Jun-2014", "title": "SROIQsigma is decidable", "abstract": "Description Logics are widely used to describe knowledge bases. Their purpose is to describe static knowledge. Our goal, in the other hand, is to be able to do the same thing with dynamic knowledge. To reach that objective we introduce substitution modifying concepts and roles. We investigate the effect of adding such substitutions to the logic SROIQ, yielding SROIQsigma, and prove that the satisfiability of a property is still decidable in SROIQsigma. We have found that our SROIQsigma is a nonlinear solution that can be used for solving many problems on the same network. The simple solution, the substitution, is that we create a pair of substitution states, and thus, the substitution states are distributed by the states. The substitution states are defined by the SROIQsigma. We are able to solve many problems on the same network. This results in the substitution states being distributed by a system that consists of one set of substitution states and one set of substitution states. SROIQsigma is able to overcome some limitations of our SROIQsigma to solve many problems on the same network. We have found that our SROIQsigma is able to overcome some limitations of our SROIQsigma to solve many problems on the same network. This result in the substitution states being distributed by a system that consists of one set of substitution states and one set of substitution states. SROIQsigma is able to overcome some limitations of our SROIQsigma to solve many problems on the same network. We have found that our SROIQsigma is able to overcome some limitations of our SROIQsigma to solve many problems on the same network. This result in the substitution states being distributed by a system that consists of one set of substitution states and one set of substitution states. We have found that our SROIQsigma is able to overcome some limitations of our SROIQsigma to solve many problems on the same network. This result in the substitution states being distributed by a system that consists of one set of substitution states and one set of substitution states. SROIQsigma is able to overcome some limitations of our SROIQsigma to solve many problems on the same network. This result in the substitution states being distributed by a system that consists of one set of substitution states and one set of substitution states. SROIQsigma is able to overcome some limitations of our SROIQsigma to solve many problems on the same network. This", "histories": [["v1", "Tue, 24 Jun 2014 17:01:19 GMT  (12kb)", "http://arxiv.org/abs/1406.6605v1", null], ["v2", "Fri, 21 Nov 2014 07:37:42 GMT  (19kb)", "http://arxiv.org/abs/1406.6605v2", null]], "reviews": [], "SUBJECTS": "cs.LO cs.AI", "authors": ["jon ha\\\"el brenas", "rachid echahed", "martin strecker"], "accepted": false, "id": "1406.6605"}, "pdf": {"name": "1406.6605.pdf", "metadata": {"source": "CRF", "title": null, "authors": ["Jon Ha\u00ebl Brenas", "Rachid Echahed", "Martin Strecker"], "emails": [], "sections": [{"heading": null, "text": "ar X\niv :1\n40 6.\n66 05\nv1 [\ncs .L\nO ]\n2 4\nJu n\n20 14\nSROIQ\u03c3 is decidable\nJon Hae\u0308l Brenas1 Rachid Echahed1 Martin Strecker2\n1 CNRS and University of Grenoble 2 Universite\u0301 de Toulouse / IRIT"}, {"heading": "1 Introduction", "text": "Description Logics [1] are logical formalisms for representing information about classes and objects. They are very often used as the basis of knowledge representation systems and have been used recently to develop OWL semantic web language, which can be viewed as an expressive Description Logic.\nThere is an impressive variety of Description Logics with diverse expressiveness and complexity, or even with or without decidability. Yet, all are tailored to describe an established and fixed ontology and reason about its properties.\nOur goal here is to consider properties over dynamic ontologies. We introduce the notion of substitutions to express changes of ontologies (e.g. addition or deletion of an element, respectively a pair of elements, of a concept, respectively of a role). We investigate the addition of such substitutions in the particular case of the logic SROIQ\u03c3, an extension of the logic SROIQ [2]. We mainly show that the problem of satisfiability in SROIQ\u03c3 is still decidable.\nSect. 2 introduces SROIQ\u03c3, our version of SROIQ with substitutions. Sect. 3 defines the interpretations for that logic. Sect. 4 proves that SROIQ\u03c3 is decidable by transforming formulae in SROIQ\u03c3 to formulae in SROIQ. Sect. 5 illustrates such transformations. Finally, Sect. 6 concludes the paper."}, {"heading": "2 Syntax", "text": "Signature\nDefinition 1. Let C be a set of concept names including a subset N of nominals, R a set of role names including the universal role U and I a set of individuals. The set of roles is R \u222a{R\u2212|R \u2208 R}, where a role R\u2212 is called the inverse role of R.\nTo avoid considering roles such as R\u2212\u2212, we define a function Inv such that Inv(R) = R\u2212 if R is a role name and Inv(R) = S if R = S\u2212.\nRole axioms Role axioms state global properties of roles.\nDefinition 2. A strict partial order \u227a on a set A is an irreflexive and transitive relation on A. A strict partial order \u227a on the set of roles is called a regular order if \u227a satisfies, additionally, S \u227a R \u21d4 S\u2212 \u227a R for all roles R and S.\nDefinition 3. A role inclusion axiom is an expression of the form w \u2286 R where R\u2032 6= U is a role names and w is either a role name, R\u2212 or RR. A role hierarchy Rh is a finite set of role inclusion axioms. A role inclusion axiom w \u2286 R\u2032 is \u227a-regular if w \u227a R\u2032 or w = R\u2212 or w = RR. Finally, a role hierarchy Rh is regular if there exists a regular order \u227a such that each role inclusion axiom in Rh is \u227a-regular.\nDefinition 4. Given a role hierarchy Rh, we define the relation \u2286\u2217 to be the transitive-reflexive closure of \u2286 over {R \u2286 S, Inv(R) \u2286 Inv(S)|R \u2286 S \u2208 Rh}. A role R is called a sub-role (respectively a super-role) of a role S if R \u2286\u2217 S (respectively S \u2286\u2217 R).\nThe second possible kind of role axiom is the role assertion.\nDefinition 5. For roles R,S, we call the assertions Ref(R), Irr(R), Sym(R), Asy(R), Tra(R) and Dis(R,S) role assertions. They, respectively, mean that R is reflexive, irreflexive, symmetric, asymmetric, transitive and that R and S are disjoint.\nTra(R) is equivalent to RR \u2286 R and Sym(R) is equivalent to R\u2212 \u2286 R. One can thus assume that there are no such role assertions.\nConcepts\nDefinition 6. The set of concepts is defined as the smallest set containing: C ::= \u22a5 (empty concept)\n| c (concept name) | \u00ac C (negation) | C \u2293 D (conjunction) | C \u2294 D (disjunction) | (\u2265 n R C) (at least) | (< n R C) (no more than) | \u2203R.C (exists) | \u2200R.C (for all) | o (nominal) | \u2203R.Self (local reflexivity) | Csubst (explicit substitution) where c is a concept name, R is a role, o is a nominal and C, D are concepts.\nSubstitutions, that appear in the last constructor, allow to modify roles and concepts by adding or removing individuals.\nDefinition 7. Given a role name R, a concept name C and individuals i and j, a substitution is: subst ::= \u01eb (empty substitution)\n| [RS] (role substitution) | [CS] (concept substitution)\nA role substitution can be either: RS ::= R\u2212 (i, j) (deletion of relation instance)\n| R+ (i, j) (insertion of relation instance)\nwhile a concept substitution is either: CS ::= C \u2212 i (deletion of a concept instance)\n| C + i (insertion of a concept instance)\nComments SROIQ\u03c3 doesn\u2019t allow for complex role inclusion (that is role inclusion in which a string of roles is included in a role name) because it is not said that it would work well with the translation algorithm. Our version of SROIQ is thus extended in some aspects and reduced in others."}, {"heading": "3 Interpretations and models", "text": "Definition 8. As usual, an interpretation I = (\u2206I , .I) consists of a set \u2206I, called the domain of I, and a valuation .I which associates to every concept name C a set CI such that CI \u2286 \u2206I and to each role name R a binary relation RI such that RI \u2286 \u2206I \u00d7\u2206I. The valuation of a nominal o is a singleton and the valuation of the universal role U is the universal relation \u2206I \u00d7\u2206I . Finally, I \u2286 \u2206I .\nAs usual, (R\u2212)I = {(y, x)|(x, y) \u2208 RI} and (RR)I = {(x, y)\u2203z \u2208 \u2206 such that (x, z) \u2208 RI and (z, y) \u2208 RI}.\nDefinition 9. An interpretation I satisfies a role inclusion axiom w \u2286 R, written I |= w \u2286 R\u2032, if wI \u2286 RI . An interpretation is a model of a role hierarchy Rh if it satisfies all role inclusion axioms in Rh, written I |= Rh.\nAs for role assertion axioms, for each interpretation I and all x, y, z \u2208 \u2206I, we have: I |= Sym(R) iff (x,y) \u2208 RI \u21d2 (y,x) \u2208 RI (role symmetry) I |= Asy(R) iff (x,y) \u2208 RI \u21d2 (y,x) 6\u2208 RI (role asymmetry) I |= Tra(R) iff (x,y) \u2208 RI and (y,z) \u2208 RI \u21d2 (x,z) \u2208 RI (role transitivity) I |= Ref(R) iff DiagI \u2286 RI (role reflexivity) I |= Irr(R) iff DiagI\u2229 RI = \u2205 (role irefflexivity) I |= Dis(R,S) iff SI\u2229 RI = \u2205 (role disjunction)\nwhere DiagI = {(x, x)|x \u2208 \u2206I}.\nDefinition 10. For each interpretation I, the valuations are defined as:\n\u2013 \u22a5I = \u2205 \u2013 (\u00ac C)I = \u2206I\\CI \u2013 (C \u2293 D)I = CI \u2229DI \u2013 (C \u2294 D)I = CI \u222aDI \u2013 (\u2265 n R C)I = {x | card{y | (x, y) \u2208 RI \u2227 y \u2208 CI} \u2265 n} \u2013 (< n R C)I = {x | card{y | (x, y) \u2208 RI \u2227 y \u2208 CI} < n} \u2013 (\u2203R.C)I = {x | \u2203y.(x, y) \u2208 RI \u2227 y \u2208 CI} \u2013 (\u2200R.C)I = {x | \u2200y.(x, y) \u2208 RI \u21d2 y \u2208 CI} \u2013 (\u2203R.Self)I = {x | (x, x) \u2208 RI}\nThe valuation for concept name and nominal are not repeated as they have been previously defined.\nFor interpretations of substitutions, given c is a concept name and r is a role name:\n\u2013 (C\u01eb)I = CI \u2013 (C[c := c+ i])I = CI where cI is replaced by cI \u222a i \u2013 (C[c := c\u2212 i])I = CI where cI is replaced by cI \u2229 i \u2013 (C[r := r + (i, j)])I = CI where rI is replaced by rI \u222a {(i, j)} \u2013 (C[r := r \u2212 (i, j)])I = CI where rI is replaced by rI \u2229 {(i, j)}\nTheorem 1 (Decidability). The satisfiability of an SROIQ\u03c3 concept \u03a60 w.r.t. Rh, a regular role hierarchy, and Ra, a finite set of role assertions, is decidable."}, {"heading": "4 Proof of the decidability", "text": "The proof of theorem Theorem 1 is done by transforming concepts with substitutions into concepts without substitutions, that is proving that SROIQ\u03c3 is included in SROIQ."}, {"heading": "4.1 Transformation", "text": "Definition 11. We introduce transformations of the concepts with substitutions. As before, c and c\u2032 are different concept names, C and D are concepts, R and R\u2032 are different roles and o is a nominal. Additionnaly, \u03c3 is a substitution, oi is a nominal such that oIi = {i} and \u22b2\u22b3 is either < or \u2265.\n1. \u22a5 \u03c3 \u22a5 2. c[R := R\u00b1 (i, j)] c 3. c[c\u2032 := c\u2032 \u00b1 i] c 4. c[c := c+ i] c \u2294 oi 5. c[c := c\u2212 i] c \u2293 \u00acoi 6. (\u00acC) \u03c3 \u00ac(C \u03c3) 7. (C \u2294D) \u03c3 C \u03c3 \u2294D \u03c3 8. (C \u2293D) \u03c3 C \u03c3 \u2293D \u03c3 9. o \u03c3 o\n10. \u2203R.Self [c := c\u00b1 i] \u2203R.Self 11. \u2203R.Self [R\u2032 := R\u2032 \u00b1 (i, j)] \u2203R.Self 12. \u2203R.Self [R := R+ (i, j)] (oi \u2293 oj) \u2294 \u2203R.Self 13. \u2203R.Self [R := R\u2212 (i, j)] (\u00acoi \u2294 \u00acoj) \u2293 \u2203R.Self 14. (\u22b2\u22b3 n R C)[c := c\u00b1 i] (\u22b2\u22b3 n R C[c := c\u00b1 i]) 15. (\u22b2\u22b3 n R C)[R\u2032 := R\u2032 \u00b1 (i, j)] (\u22b2\u22b3 n R C[R\u2032 := R\u2032 \u00b1 (i, j)]) 16. (\u22b2\u22b3 n R C)[R := R + (i, j)]\n((oi \u2293 \u2203U.(oj \u2293C[R := R+ (i, j)]) \u2293 \u2200R.\u00acoj) \u21d2 (\u22b2\u22b3 (n\u2212 1) R C[R := R+ (i, j)])) \u2293 ((\u00acoi \u2294 \u2200U.(\u00acoj \u2294 \u00acC[R := R+ (i, j)]) \u2294 \u2203R.oj) \u21d2 (\u22b2\u22b3 n R C[R := R+ (i, j)]))\n17. (\u22b2\u22b3 n R C)[R := R \u2212 (i, j)] ((oi \u2293 \u2203U.(oj \u2293C[R := R\u2212 (i, j)]) \u2293 \u2203R.oj) \u21d2 (\u22b2\u22b3 (n+ 1) R C[R := R\u2212 (i, j)])) \u2293 ((\u00acoi \u2294 \u2200U.(\u00acoj \u2294 \u00acC[R := R\u2212 (i, j)]) \u2294 \u2200R.\u00acoj) \u21d2 (\u22b2\u22b3 n R C[R := R\u2212 (i, j)]))\nLemma 1. The transformations defined in definition Def 11 preserve the valuations.\nProof.\n\u2013 (\u22a5 \u03c3)I = \u2205 = \u22a5I as it does not depend on the valuation of any concept or role. \u2013 (c[R := R\u00b1 (i, j)])I = cI as cI does not depend on the valuation of R. \u2013 (c[c\u2032 := c\u2032 \u00b1 i])I = cI as cI does not depend on the valuation of c\u2032. \u2013 (c[c := c+ i])I = (c \u2294 oi)I . By definition of the valuation of a substitution,\n(c[c := c+ i])I = cI \u222a i = (c \u2294 oi)I . \u2013 (c[c := c\u2212 i])I = (c\u2293\u00acoi)I . By definition of the valuation of a substitution,\n(c[c := c\u2212 i])I = cI \u2229 i = (c \u2293 \u00acoi)I . \u2013 By definition, ((\u00acC)[c := c+ i])I = (\u00acC)I where cI is replaced by cI \u222a i. As\n(\u00acC)I = \u2206 \u2229CI , ((\u00acC)[c := c+ i])I = \u2206 \u2229C\u2032I with C\u2032I = CI where cI is replaced by cI \u222a i. This is exactly the definition of (\u00ac(C[c := c+ i]))I . The same can be done with the other substitutions. \u2013 By definition, ((C \u2294 D)[c := c + i])I = (C \u2294 D)I where cI is replaced by cI \u222a i. That is (C\u2032 \u2294 D\u2032)I with C\u2032I = CI where cI is replaced by cI \u222a i and D\u2032I = DI where cI is replaced by cI \u222a i. This is exactly the definition of (C[c := c + i] \u2294 D[c := c + i])I . The same can be done with the other substitutions. \u2013 By definition, ((C \u2293 D)[c := c + i])I = (C \u2293 D)I where cI is replaced by cI \u222a i. That is (C\u2032 \u2293 D\u2032)I with C\u2032I = CI where cI is replaced by cI \u222a i and D\u2032I = DI where cI is replaced by cI \u222a i. This is exactly the definition of (C[c := c + i] \u2293 D[c := c + i])I . The same can be done with the other substitutions.\n\u2013 As the valuation of a nominal is independent of the valuations of all roles and concepts, (o \u03c3)I = oI . \u2013 (\u2203R.Self [c := c \u00b1 i])I = (\u2203R.Self)I as (\u2203R.Self)I is independent of the valuation of c. \u2013 (\u2203R.Self [R\u2032 := R\u2032 \u00b1 (i, j)])I = (\u2203R.Self)I is independent of the valuation of R\u2032. \u2013 As (\u2203R.Self)I = {x|(x, x) \u2208 RI}, (\u2203R.Self [R := R+ (i, j)])I = {x|(x, x) \u2208 RI \u222a {(i, j)}} = (\u2203R.Self)I \u222a ({i} \u2229 {j}) that is (\u2203R.Self [R := R+ (i, j)])I = ((oi \u2293 oj) \u2294 \u2203R.Self)\nI. \u2013 As (\u2203R.Self)I = {x|(x, x) \u2208 RI}, (\u2203R.Self [R := R\u2212 (i, j)])I =\n{x|(x, x) \u2208 RI \u2229 {(i, j)}} = (\u2203R.Self)I \u2229 ({i} \u222a {j}) that is (\u2203R.Self [R := R\u2212 (i, j)])I = ((\u00acoi \u2294 \u00acoj) \u2293 \u2203R.Self)I.\n\u2013 As (\u22b2\u22b3 n R C)I = {x | card{y | (x, y) \u2208 RI \u2227 y \u2208 CI} \u22b2\u22b3 n}, ((\u22b2\u22b3 n R C)[c := c\u00b1 i])I = {x | card{y | (x, y) \u2208 RI \u2227 y \u2208 C[c := c\u00b1 i]I} \u22b2\u22b3 n}\nas RI is independent of the valuation of c. Thus ((\u22b2\u22b3 n R C)[c := c\u00b1 i])I = (\u22b2\u22b3 n R C[c := c\u00b1 i])I .\n\u2013 As (\u22b2\u22b3 n R C)I = {x | card{y | (x, y) \u2208 RI \u2227 y \u2208 CI} \u22b2\u22b3 n}, ((\u22b2\u22b3 n R C)[R\u2032 := R\u2032 \u00b1 (i, j)])I = {x | card{y | (x, y) \u2208 RI \u2227 y \u2208 C[R\u2032 := R\u2032 \u00b1 (i, j)]I} \u22b2\u22b3 n} as RI is independent of the valuation of R\u2032. Thus ((\u22b2\u22b3 n R C)[R\u2032 := R\u2032 \u00b1 (i, j)])I = (\u22b2\u22b3 n R C[R := R\u00b1 (i, j)])I . \u2013 As (\u22b2\u22b3 n R C)I = {x | card{y | (x, y) \u2208 RI \u2227 y \u2208 CI} \u22b2\u22b3 n}, ((\u22b2\u22b3 n R C)[R := R+ (i, j)])I = {x | card{y | (x, y) \u2208 R[R := R+ (i, j)]I \u2227 y \u2208 C[R := R+ (i, j)]I} \u22b2\u22b3 n} = {x | card{y | (x, y) \u2208 RI \u222a {(i, j)} \u2227 y \u2208 C[R := R + (i, j)]I} \u22b2\u22b3 n}. We consider {y | (x, y) \u2208 RI \u222a {(i, j)} \u2227 y \u2208 C[R := R + (i, j)]I} and try the possible sets: \u2022 If x 6= i or j 6\u2208 C[R := R+ (i, j)]I or (i, j) \u2208 RI , then {y | (x, y) \u2208 RI \u222a {(i, j)} \u2227 y \u2208 C[R := R + (i, j)]I} = {y | (x, y) \u2208 RI \u2227 y \u2208 C[R := R+ (i, j)]I},\n\u2022 else, x = i and j \u2208 C[R := R + (i, j)]I and (i, j) 6\u2208 RI , and thus {y | (x, y) \u2208 RI \u222a {(i, j)} \u2227 y \u2208 C[R := R + (i, j)]I} = {y | (x, y) \u2208 RI\u2227y \u2208 C[R := R+(i, j)]I}\u222a{(i, j)}. As {(i, j)} is disjoint from {y | (x, y) \u2208 RI \u2227 y \u2208 C[R := R+ (i, j)]I}, the cardinality of {y | (x, y) \u2208 RI \u222a {(i, j)} \u2227 y \u2208 C[R := R + (i, j)]I} is exactly the cardinality of {y | (x, y) \u2208 RI \u2227 y \u2208 C[R := R+ (i, j)]I}+ 1.\n\u2022 Thus, {x | card{y | (x, y) \u2208 R[R := R+ (i, j)]I \u2227 y \u2208 C[R := R+ (i, j)]I} \u22b2\u22b3 n} = {x | (x 6= i \u2228 j 6\u2208 C[R := R+ (i, j)]I \u2228 (i, j) \u2208 RI \u21d2 card{y | (x, y) \u2208 RI \u2227 y \u2208 C[R := R+ (i, j)]I} \u22b2\u22b3 n) \u2227(x = i \u2227 j \u2208 C[R := R+ (i, j)]I \u2227 (i, j) 6\u2208 RI \u21d2 card{y | (x, y) \u2208 RI \u2227 y \u2208 C[R := R+ (i, j)]I} \u22b2\u22b3 (n\u2212 1))}\nThus, ((\u22b2\u22b3 n R C)[R := R+ (i, j)])I = (((oi \u2293 \u2203U.(oj \u2293 C[R := R + (i, j)]) \u2293 \u2200R.\u00acoj) \u21d2 (\u22b2\u22b3 (n\u2212 1) R C[R := R+ (i, j)])) \u2293 ((\u00acoi \u2294 \u2200U.(\u00acoj \u2294 \u00acC[R := R+ (i, j)]) \u2294 \u2203R.oj) \u21d2 (\u22b2\u22b3 n R C[R := R+ (i, j)])))I\n\u2013 As (\u22b2\u22b3 n R C)I = {x | card{y | (x, y) \u2208 RI \u2227 y \u2208 CI} \u22b2\u22b3 n}, ((\u22b2\u22b3 n R C)[R := R\u2212 (i, j)])I = {x | card{y | (x, y) \u2208 R[R := R\u2212 (i, j)]I \u2227 y \u2208 C[R := R \u2212 (i, j)]I} \u22b2\u22b3 n} = {x | card{y | (x, y) \u2208 RI \u2229 {(i, j)} \u2227 y \u2208 C[R := R \u2212 (i, j)]I} \u22b2\u22b3 n}. We consider {y | (x, y) \u2208 RI \u2229 {(i, j)} \u2227 y \u2208 C[R := R + (i, j)]I} and try the possible sets: \u2022 If x 6= i or j 6\u2208 C[R := R\u2212 (i, j)]I or (i, j) 6\u2208 RI , then {y | (x, y) \u2208 RI \u2229 {(i, j)} \u2227 y \u2208 C[R := R \u2212 (i, j)]I} = {y | (x, y) \u2208 RI \u2227 y \u2208 C[R := R\u2212 (i, j)]I},\n\u2022 else, x = i and j \u2208 C[R := R \u2212 (i, j)]I and (i, j) \u2208 RI , and thus {y | (x, y) \u2208 RI \u2229 {(i, j)} \u2227 y \u2208 C[R := R \u2212 (i, j)]I} = {y | (x, y) \u2208 RI \u2227 y \u2208 C[R := R\u2212 (i, j)]I} \u2229 {i, j}. As {(i, j)} \u2286\n{y | (x, y) \u2208 RI \u2227 y \u2208 C[R := R\u2212 (i, j)]I}, the cardinality of {y | (x, y) \u2208 RI \u2229 {(i, j)} \u2227 y \u2208 C[R := R + (i, j)]I} is exactly the cardinality of {y | (x, y) \u2208 RI \u2227 y \u2208 C[R := R\u2212 (i, j)]I} \u2212 1.\n\u2022 Thus, {x | card{y | (x, y) \u2208 R[R := R\u2212 (i, j)]I \u2227 y \u2208 C[R := R\u2212 (i, j)]I} \u22b2\u22b3 n} = {x | (x 6= i \u2228 j 6\u2208 C[R := R\u2212 (i, j)]I \u2228 (i, j) 6\u2208 RI \u21d2 card{y | (x, y) \u2208 RI \u2227 y \u2208 C[R := R\u2212 (i, j)]I} \u22b2\u22b3 n) \u2227 (x = i \u2227 j \u2208 C[R := R\u2212 (i, j)]I \u2227 (i, j) \u2208 RI \u21d2 card{y | (x, y) \u2208 RI \u2227 y \u2208 C[R := R\u2212 (i, j)]I} \u22b2\u22b3 (n+ 1))}\nThus, ((\u22b2\u22b3 n R C)[R := R\u2212 (i, j)])I = (((oi \u2293 \u2203U.(oj \u2293 C[R := R \u2212 (i, j)]) \u2293 \u2203R.oj) \u21d2 (\u22b2\u22b3 (n+ 1) R C[R := R\u2212 (i, j)])) \u2293 ((\u00acoi \u2294 \u2200U.(\u00acoj \u2294 \u00acC[R := R\u2212 (i, j)]) \u2294 \u2200R.\u00acoj) \u21d2 (\u22b2\u22b3 n R C[R := R\u2212 (i, j)])))I\nWe have thus proven that the transformations preserve the valuations. We now have to prove that the transformations actually remove substitutions.\nLemma 2. An algorithm that applies the transformations of Def 11 as long as possible terminates and the final result is substitution-free.\nProof. The proof that the, potential, final result is substitution-free is straightforward. If there is still one substitution, one of the rules can be applied and thus, this is not the final result.\nTo prove the termination, we introduce a pre-ordering (M,M\u2032) defined as:\n\u2013 M(\u22a5) = 0 \u2013 M(c) = 0 \u2013 M(\u00ac C) = M(C) \u2013 M(C \u2293 D) = max(M(C),M(D)) \u2013 M(C \u2294 D) = max(M(C),M(D)) \u2013 M((\u2265 n R C)) = M(C) + 2 \u2013 M((< n R C)) = M(C) + 2 \u2013 M(o) = 0 \u2013 M(\u2203R.Self) = 0 \u2013 M(C\u03c3) = M(C) + 1 \u2013 M\u2032(\u22a5) = 0 \u2013 M\u2032(c) = 0 \u2013 M\u2032((\u00ac C)) = M\u2032(C) \u2013 M\u2032(C \u2293 D) = max(M\u2032(C),M\u2032(D)) \u2013 M\u2032(C \u2294 D) = max(M\u2032(C),M\u2032(D)) \u2013 M\u2032((\u2265 n R C)) = M\u2032(C) \u2013 M\u2032((< n R C)) = M\u2032(C) \u2013 M\u2032(o) = 0 \u2013 M\u2032(\u2203R.Self) = 0\n\u2013 M\u2032(\u22a5\u03c3) = 0 \u2013 M\u2032(c\u03c3) = 0 \u2013 M\u2032((\u00ac C)\u03c3) = M\u2032(C\u03c3) + 1 \u2013 M\u2032((C \u2293 D)\u03c3) = max(M\u2032(C\u03c3),M\u2032(D\u03c3)) + 1 \u2013 M\u2032((C \u2294 D)\u03c3) = max(M\u2032(C\u03c3),M\u2032(D\u03c3)) + 1 \u2013 M\u2032((\u2265 n R C)\u03c3) = M\u2032(C\u03c3) + 1 \u2013 M\u2032((< n R C)\u03c3) = M\u2032(C\u03c3) + 1 \u2013 M\u2032(o\u03c3) = 0 \u2013 M\u2032((\u2203R.Self)\u03c3) = 0\nFor every concept C, M(C) and M\u2032(C) are positive. We now prove that the transformations either strictly decrease M or keep M constant and strictly decrease M\u2032. We compute the results of the functions for the left- and the righthand side for each transformation.\n\u2013 Rule 1: M(\u22a5 \u03c3) = M(\u22a5) + 1 = 1 M(\u22a5) = 0\n\u2013 Rule 2: M(c[R := R\u00b1 (i, j)]) = M(c) + 1 = 1\nM(c) = 0 \u2013 Rule 3:\nM(c[c\u2032 := c\u2032 \u00b1 i]) = M(c) + 1 = 1 M(c) = 0\n\u2013 Rule 4: M(c[c := c+ i]) = M(c) + 1 = 1\nM(c \u2294 oi) = max(M(c),M(oi)) = 0 \u2013 Rule 5:\nM(c[c := c\u2212 i]) = M(c) + 1 = 1 M(c \u2293 \u00acoi) = max(M(c),M(\u00acoi)) = 0\n\u2013 Rule 6: M((\u00acC) \u03c3) = M(\u00acC) + 1 = M(C) + 1 M(\u00ac(C \u03c3)) = M(C \u03c3) = M(C) + 1 M\u2032((\u00acC) \u03c3) = M\u2032(C\u03c3) + 1 M\u2032(\u00ac(C\u03c3)) = M\u2032(C\u03c3)\n\u2013 Rule 7: M((C \u2294D) \u03c3) = max(M(C),M(D)) + 1 M(C\u03c3 \u2294D\u03c3) = max(M(C) + 1,M(D) + 1) M\u2032((C \u2294D) \u03c3) = max(M\u2032(C\u03c3),M\u2032(D\u03c3)) + 1 M\u2032(C\u03c3 \u2294D\u03c3) = max(M\u2032(C\u03c3),M\u2032(D\u03c3))\n\u2013 Rule 8: M((C \u2293D) \u03c3) = max(M(C),M(D)) + 1 M(C\u03c3 \u2293D\u03c3) = max(M(C) + 1,M(D) + 1) M\u2032((C \u2293D) \u03c3) = max(M\u2032(C\u03c3),M\u2032(D\u03c3)) + 1 M\u2032(C\u03c3 \u2293D\u03c3) = max(M\u2032(C\u03c3),M\u2032(D\u03c3))\n\u2013 Rule 9: M(o \u03c3) = M(o) + 1 = 1 M(o) = 0\n\u2013 Rule 10: M(\u2203R.Self [c := c\u00b1 i]) = M(\u2203R.Self) + 1 = 1\nM(\u2203R.Self) = 0\n\u2013 Rule 11: M(\u2203R.Self [R\u2032 := R\u2032 \u00b1 (i, j)]) = M(\u2203R.Self) + 1 = 1\nM(\u2203R.Self) = 0\n\u2013 Rule 12: M(\u2203R.Self [R := R + (i, j)]) = M(\u2203R.Self) + 1 = 1\nM((oi \u2293 oj) \u2294 \u2203R.Self) = 0\n\u2013 Rule 13: M(\u2203R.Self [R := R \u2212 (i, j)]) = M(\u2203R.Self) + 1 = 1 M((\u00acoi \u2294 \u00acoj) \u2293 \u2203R.Self) = 0\n\u2013 Rule 14: M((\u22b2\u22b3 n R C)[c := c\u00b1 i]) = M((\u22b2\u22b3 n R C)) + 1 = M(C) + 3 M((\u22b2\u22b3 n R C[c := c\u00b1 i])) = M(C[c := c\u00b1 i]) + 2 = M(C) + 3 M\u2032((\u22b2\u22b3 n R C)[c := c\u00b1 i]) = M\u2032(C[c := c\u00b1 i]) + 1 M\u2032((\u22b2\u22b3 n R C[c := c\u00b1 i])) = M\u2032(C[c := c\u00b1 i])\n\u2013 Rule 15: M((\u22b2\u22b3 n R C)[R\u2032 := R\u2032 \u00b1 (i, j)]) = M((\u22b2\u22b3 n R C)) + 1 = M(C) + 3 M((\u22b2\u22b3 n R C[R\u2032 := R\u2032 \u00b1 (i, j)]) = M(C[R\u2032 := R\u2032 \u00b1 (i, j)]) + 2 = M(C) + 3 M\u2032((\u22b2\u22b3 n R C)[R\u2032 := R\u2032 \u00b1 (i, j)]) = M\u2032(C[R\u2032 := R\u2032 \u00b1 (i, j)]) + 1 M\u2032((\u22b2\u22b3 n R C[R\u2032 := R\u2032 \u00b1 (i, j)])) = M\u2032(C[R\u2032 := R\u2032 \u00b1 (i, j)])\n\u2013 Rule 16: M((\u22b2\u22b3 n R C)[R := R+ (i, j)]) = M((\u22b2\u22b3 n R C) + 1\n= M(C) + 3 M(c1,16) = max(M(oj),M(C[R := R+ (i, j)])) = M(C) + 1 M(c2,16) = max(M(\u00acoj),M(\u00ac(C[R := R+ (i, j)]))) = M(C) + 1 M(b1,16) = M(oi) = 0 M(b2,16) = M(\u2203U.c1,16)\n= M(c1,16) + 2 = M(C) + 3\nM(b3,16) = M(\u2200R.\u00acoj) = M(\u00acoJ ) + 2 = 2\nM(b4,16) = M((\u22b2\u22b3 (n\u2212 1) R C[R := R+ (i, j)])) = M(C[R := R + (i, j)]) + 2 = M(C) + 3\nM(b11,16) = M(\u00acoi) = 0\nM(b12,16) = M(\u2200U.c2,16) = M(c2,16) + 2 = M(C) + 3\nM(b13,16) = M(\u2203R.oj) = M(oJ ) + 2 = 2\nM(b14,16) = M((\u22b2\u22b3 n R C[R := R + (i, j)])) = M(C[R := R + (i, j)]) + 2 = M(C) + 3\nM(a1,16) = max(M(b1,16),M(b2,16),M(b3,16),M(b4,16) = M(C) + 3\nM(a2,16) = max(M(b11,16),M(b12,16),M(b13,16),M(b14,16) = M(C) + 3\nM(RHR16) = max(M(a1,16),M(a2,16)) = M(C) + 3\nM\u2032((\u22b2\u22b3 n R C)[R := R+ (i, j)]) = M\u2032(C[R := R+ (i, j)]) + 1 M\u2032(c1,16) = max(M\u2032(oj),M\u2032(C[R := R+ (i, j)]))\n= M\u2032(C[R := R+ (i, j)]) M\u2032(c2,16) = max(M \u2032(\u00acoj),M \u2032(\u00ac(C[R := R+ (i, j)]))) = M\u2032(C[R := R+ (i, j)]) M\u2032(b1,16) = M(oi) = 0 M\u2032(b2,16) = M(\u2203U.c1,16)\n= M\u2032(c1,16)\n= M\u2032(C[R := R+ (i, j)]) M\u2032(b3,16) = M(\u2200R.\u00acoj)\n= M\u2032(\u00acoJ ) = 0\nM\u2032(b4,16) = M((\u22b2\u22b3 (n\u2212 1) R C[R := R+ (i, j)]) = M\u2032(C[R := R+ (i, j)])\nM\u2032(b11,16) = M\u2032(\u00acoi) = 0 M\u2032(b12,16) = M\u2032(\u2200U.c2,16) = M\u2032(c2,16) = M(C[R := R+ (i, j]) M\u2032(b13,16) = M\u2032(\u2203R.oj) = M\u2032(oJ) = 0 M\u2032(b14,16) = M\u2032((\u22b2\u22b3 n R C[R := R+ (i, j)])) = M\u2032(C[R := R+ (i, j)]) M\u2032(a1,16) = max(M\u2032(b1,16),M\u2032(b2,16),M\u2032(b3,16),M\u2032(b4,16) = M\u2032(C[R := R+ (i, j)]) M\u2032(a2,16) = max(M\u2032(b11,16),M\u2032(b12,16),M\u2032(b13,16),M\u2032(b14,16) = M\u2032(C[R := R+ (i, j)])\nM\u2032(RHS16) = max(M \u2032(a1,16),M \u2032(a2,16)) = M(C[R := R+ (i, j)])\n\u2013 Rule 17: M((\u22b2\u22b3 n R C)[R := R\u2212 (i, j)]) = M((\u22b2\u22b3 n R C) + 1\n= M(C) + 3 M(c1,17) = max(M(oj),M(C[R := R\u2212 (i, j)])) = M(C) + 1 M(c2,17) = max(M(\u00acoj),M(\u00ac(C[R := R\u2212 (i, j)]))) = M(C) + 1 M(b1,17) = M(oi) = 0 M(b2,17) = M(\u2203U.c1,17)\n= M(c1,17) + 2 = M(C) + 3\nM(b3,17) = M(\u2203R.oj) = M(\u00acoJ ) + 2 = 2\nM(b4,17) = M((\u22b2\u22b3 (n+ 1) R C[R := R\u2212 (i, j)])) = M(C[R := R \u2212 (i, j)]) + 2 = M(C) + 3\nM(b11,17) = M(\u00acoi) = 0\nM(b12,17) = M(\u2200U.c2,17) = M(c2,17) + 2 = M(C) + 3\nM(b13,17) = M(\u2200R.\u00acoj) = M(oJ ) + 2 = 2\nM(b14,17) = M((\u22b2\u22b3 n R C[R := R + (i, j)])) = M(C[R := R \u2212 (i, j)]) + 2 = M(C) + 3\nM(a1,17) = max(M(b1,17),M(b2,17),M(b3,17),M(b4,17) = M(C) + 3\nM(a2,17) = max(M(b11,17),M(b12,17),M(b13,17),M(b14,17) = M(C) + 3\nM(RHR17) = max(M(a1,17),M(a2,17)) = M(C) + 3\nM\u2032((\u22b2\u22b3 n R C)[R := R\u2212 (i, j)]) = M\u2032(C[R := R\u2212 (i, j)]) + 1 M\u2032(c1,17) = max(M\u2032(oj),M\u2032(C[R := R\u2212 (i, j)]))\n= M\u2032(C[R := R\u2212 (i, j)]) M\u2032(c2,17) = max(M \u2032(\u00acoj),M \u2032(\u00ac(C[R := R\u2212 (i, j)]))) = M\u2032(C[R := R\u2212 (i, j)]) M\u2032(b1,17) = M(oi) = 0 M\u2032(b2,17) = M(\u2203U.c1,17)\n= M\u2032(c1,17) = M\u2032(C[R := R\u2212 (i, j)])\nM\u2032(b3,17) = M(\u2200R.\u00acoj) = M\u2032(\u00acoJ ) = 0 M\u2032(b4,17) = M((\u22b2\u22b3 (n+ 1) R C[R := R\u2212 (i, j)]) = M\u2032(C[R := R\u2212 (i, j)])\nM\u2032(b11,17) = M\u2032(\u00acoi) = 0 M\u2032(b12,17) = M\u2032(\u2200U.c2,17) = M\u2032(c2,17) = M(C[R := R\u2212 (i, j]) M\u2032(b13,17) = M\u2032(\u2200R.\u00acoj) = M\u2032(oJ) = 0 M\u2032(b14,17) = M\u2032((\u22b2\u22b3 n R C[R := R\u2212 (i, j)])) = M\u2032(C[R := R\u2212 (i, j)]) M\u2032(a1,17) = max(M\u2032(b1,17),M\u2032(b2,17),M\u2032(b3,17),M\u2032(b4,17) = M\u2032(C[R := R\u2212 (i, j)]) M\u2032(a2,17) = max(M\u2032(b11,17),M\u2032(b12,17),M\u2032(b13,17),M\u2032(b14,17) = M\u2032(C[R := R\u2212 (i, j)])\nM\u2032(RHS17) = max(M\u2032(a1,17),M\u2032(a2,17)) = M(C[R := R\u2212 (i, j)])\nwhere : RHS16 = ((oi \u2293 \u2203U.(oj \u2293 C[R := R+ (i, j)]) \u2293 \u2200R.\u00acoj) \u21d2 (\u22b2\u22b3 (n\u2212 1) R C[R := R+ (i, j)])) \u2293 ((\u00acoi \u2294 \u2200U.(\u00acoj \u2294 \u00acC[R := R+ (i, j)]) \u2294 \u2203R.oj) \u21d2 (\u22b2\u22b3 n R C[R := R+ (i, j)])) RHS17 = ((oi \u2293 \u2203U.(oj \u2293 C[R := R\u2212 (i, j)]) \u2293 \u2203R.oj) \u21d2 (\u22b2\u22b3 (n+ 1) R C[R := R\u2212 (i, j)]))\n\u2293 ((\u00acoi \u2294 \u2200U.(\u00acoj \u2294 \u00acC[R := R \u2212 (i, j)]) \u2294 \u2200R.\u00acoj) \u21d2 (\u22b2\u22b3 n R C[R := R\u2212 (i, j)])) a1,16 = (oi \u2293 \u2203U.(oj \u2293 C[R := R+ (i, j)]) \u2293 \u2200R.\u00acoj) \u21d2 (\u22b2\u22b3 (n\u2212 1) R C[R := R+ (i, j)]) a2,16 = (\u00acoi \u2294 \u2200U.(\u00acoj \u2294 \u00acC[R := R+ (i, j)]) \u2294 \u2203R.oj) \u21d2 (\u22b2\u22b3 n R C[R := R+ (i, j)]) a1,17 = (oi \u2293 \u2203U.(oj \u2293 C[R := R \u2212 (i, j)]) \u2293 \u2203R.oj) \u21d2 (\u22b2\u22b3 (n+ 1) R C[R := R\u2212 (i, j)]) a2,17 = (\u00acoi \u2294 \u2200U.(\u00acoj \u2294 \u00acC[R := R\u2212 (i, j)]) \u2294 \u2200R.\u00acoj) \u21d2 (\u22b2\u22b3 n R C[R := R\u2212 (i, j)]) b1,16 = oi b2,16 = \u2203U.(oj \u2293 C[R := R+ (i, j)]) b3,16 = \u2200R.\u00acoj b4,16 = (\u22b2\u22b3 (n\u2212 1) R C[R := R+ (i, j)])) b11,16 = \u00acoi b12,16 = \u2200U.(\u00acoj \u2294 \u00ac(C[R := R+ (i, j)])) b13,16 = \u2203R.oj b14,16 = (\u22b2\u22b3 n R C[R := R+ (i, j)])) b1,17 = oi b2,17 = \u2203U.(oj \u2293 C[R := R\u2212 (i, j)]) b3,17 = \u2203R.oj b4,17 = (\u22b2\u22b3 (n+ 1) R C[R := R\u2212 (i, j)])) b11,17 = \u00acoi b12,17 = \u2200U.(\u00acoj \u2294 \u00ac(C[R := R\u2212 (i, j)])) b13,17 = \u2200R.\u00acoj b14,17 = (\u22b2\u22b3 n R C[R := R\u2212 (i, j)])) c1,16 = (oj \u2293 C[R := R+ (i, j)]) c2,16 = (\u00acoj \u2294 \u00ac(C[R := R+ (i, j)])) c1,17 = (oj \u2293 C[R := R\u2212 (i, j)]) c2,17 = (\u00acoj \u2294 \u00ac(C[R := R\u2212 (i, j)]))\nProof.[Decidability] The transformations allow us to obtain SROIQ-concepts from SROIQ\u03c3-concepts. As the satisfiability of an SROIQ-concept is known to be decidable, so is the satisfiability of an SROIQ\u03c3-concept."}, {"heading": "5 Example", "text": "In order to illustrate the transformation, I will give a purely scholastic example. Given the graph on the left of Fig. 5, we want to prove that after adding the edge between i and j, i satisfies the property (< 3 S (< 3 S \u22a4)) is still verified. That is we want to see if oi \u2293 (< 3 S (< 3 S \u22a4))[S := S + (i, j)] \u2293 (< 3 S \u22a4) \u2293 \u2203S.oi \u2293 \u2203S.ok \u2293 \u2200S.\u00acoj \u2293 \u2203U.(oj \u2293 (< 1 S \u22a4)\u2293\u00acoi)\u2293 \u2203U.(ok \u2293 (< 1 S \u22a4)\u2293\u00acoi) is satisfiable.\nBy applying rule 16, oi \u2293 (< 3 S (< 3 S \u22a4))[S := S + (i, j)] \u2293 (< 3 S \u22a4) \u2293 \u2203S.oi \u2293 \u2203S.ok \u2293 \u2200S.\u00acoj \u2293 \u2203U.(oj \u2293 (< 1 S \u22a4)\u2293\u00acoi)\u2293 \u2203U.(ok \u2293 (< 1 S \u22a4)\u2293\u00acoi) becomes oi \u2293 ((oi \u2293 \u2203U.(oj \u2293 (< 3 S \u22a4)[S := S + (i, j)]) \u2293 \u2200S.\u00acoj) \u21d2\n(< 2 S (< 3 S \u22a4)[S := S + (i, j)])) \u2293 ((\u00acoi \u2294 \u2200U.(\u00acoj \u2294 \u00ac(< 3 S \u22a4)[S := S + (i, j)]) \u2294 \u2203S.oj) \u21d2 (< 3 S (< 3 S \u22a4)[S := S + (i, j)])) \u2293 (< 3 S \u22a4) \u2293 \u2203S.oi \u2293 \u2203S.ok \u2293 \u2200S.\u00acoj \u2293 \u2203U.(oj \u2293 (< 1 S \u22a4) \u2293 \u00acoi) \u2293 \u2203U.(ok \u2293 (< 1 S \u22a4) \u2293 \u00acoi). By applying rule 16 to \u2203U.(oj \u2293 (< 3 S \u22a4)[S := S + (i, j)]), one gets \u2203U.(oj \u2293 ((oi \u2293 \u2203U.(oj \u2293 \u22a4[S := S + (i, j)]) \u2293 \u2200S.\u00acoj) \u21d2 (< 2 S \u22a4[S := S + (i, j)])) \u2293 ((\u00acoi \u2294 \u2200U.(\u00acoj \u2294 \u00ac\u22a4[S := S + (i, j)]) \u2294 \u2203S.oj) \u21d2 (< 3 S \u22a4[S := S + (i, j)])). As oj is a nominal, we can factor in \u2203U.(oj \u2293 \u00acoi) to replace \u2203U.(oj \u2293 (< 3 S \u22a4)[S := S + (i, j)]) with \u2203U.(oj \u2293\u00acoi\u2293 (< 3 S \u22a4[S := S+(i, j)])). As, by application of rules 1 and 6, \u22a4[S := S + (i, j)] is \u22a4, we get oi \u2293 ((oi \u2293 \u2203U.(oj \u2293 (< 3 S \u22a4)) \u2293 \u2200S.\u00acoj) \u21d2 (< 2 S (< 3 S \u22a4)[S := S + (i, j)])) \u2293 ((\u00acoi \u2294 \u2200U.(\u00acoj \u2294 \u00ac(< 3 S \u22a4)[S := S + (i, j)]) \u2294 \u2203S.oj) \u21d2 (< 3 S (< 3 S \u22a4)[S := S + (i, j)])) \u2293 (< 3 S \u22a4) \u2293 \u2203S.oi \u2293 \u2203S.ok \u2293 \u2200S.\u00acoj \u2293 \u2203U.(oj \u2293 (< 1 S \u22a4) \u2293 \u00acoi) \u2293 \u2203U.(ok \u2293 (< 1 S \u22a4) \u2293 \u00acoi). By reordering the formula, we see that oi \u2293 \u2203U.(oj \u2293 (< 3 S \u22a4)) \u2293 \u2200S.\u00acoj is the right choice and then we get oi \u2293 (< 2 S (< 3 S \u22a4)[S := S + (i, j)])) \u2293 (< 3 S \u22a4) \u2293 \u2203S.oi \u2293 \u2203S.ok \u2293 \u2200S.\u00acoj \u2293 \u2203U.(oj \u2293 (< 1 S \u22a4) \u2293 \u00acoi) \u2293 \u2203U.(ok \u2293 (< 1 S \u22a4) \u2293 \u00acoi). We now have to apply rule 16, and 1 and 6 to remove the \u22a4[S := S + (i, j)], once more to obtain the final result, oi \u2293 (< 2 S ((oi \u2293 \u2203U.(oj \u2293 \u22a4[S := S + (i, j)]) \u2293 \u2200S.\u00acoj) \u21d2 (< 2 S \u22a4))\u2293((\u00acoi\u2294\u2200U.(\u00acoj\u2294\u00ac\u22a4)\u2294\u2203S.oj) \u21d2 (< 3 S \u22a4)))\u2293(< 3 S \u22a4)\u2293\u2203S.oi\u2293 \u2203S.ok\u2293\u2200S.\u00acoj\u2293\u2203U.(oj\u2293(< 1 S \u22a4)\u2293\u00acoi)\u2293\u2203U.(ok\u2293(< 1 S \u22a4)\u2293\u00acoi). Despite its ugliness, this formula no longer contains substitutions and its satisfiability can be decided. One can easily check from the picture that it is indeed satisfiable."}, {"heading": "6 Conclusion", "text": "We have introduced a new Description Logic named SROIQ\u03c3 which is an extension of SROIQ with substitutions. We have proven that this logic is decidable by translating it to SROIQ.\nThe same method can likely be used for several other DLs. For instance, SHOIQ [3] is a restriction of SROIQ without role assertions and \u2203R.Self . As none of the translation rules outside these constructs uses these constructs, they can be removed and SHOIQ\u03c3 can be defined in the exact same way as SROIQ\u03c3.\nOn the other hand, Description Logics like ALC [4] that is restricted to concepts without counting quantifiers are not suited for such a translation. Existential and universal quantification would create couting quantifiers during translation that are outside the scope of the logic. Even extending ALC with counting quantifiers, which produces ALCQ, is not enough as nominals are used during translation."}, {"heading": "3. Ian Horrocks and Ulrike Sattler. A tableaux decision procedure for shoiq. In In", "text": "Proc. of the 19th Int. Joint Conf. on Artificial Intelligence (IJCAI, pages 448\u2013453. Morgan, 2005."}, {"heading": "4. Manfred Schmidt-Schaub\u00df and Gert Smolka. Attributive concept descriptions with", "text": "complements. Artif. Intell., 48(1):1\u201326, February 1991."}], "references": [{"title": "The Description Logic Handbook: Theory, Implementation, and Applications", "author": ["Franz Baader", "Diego Calvanese", "Deborah L. McGuinness", "Daniele Nardi", "Peter F. Patel-Schneider", "editors"], "venue": null, "citeRegEx": "1", "shortCiteRegEx": "1", "year": 2003}, {"title": "The even more irresistible sroiq", "author": ["I. Horrocks", "O. Kutz", "U. Sattler"], "venue": "In Proc. of the 10th Int. Conf. on Principles of Knowledge Representation and Reasoning (KR", "citeRegEx": "2", "shortCiteRegEx": "2", "year": 2006}, {"title": "A tableaux decision procedure for shoiq", "author": ["Ian Horrocks", "Ulrike Sattler"], "venue": "Proc. of the 19th Int. Joint Conf. on Artificial Intelligence (IJCAI,", "citeRegEx": "3", "shortCiteRegEx": "3", "year": 2005}, {"title": "Attributive concept descriptions with complements", "author": ["Manfred Schmidt-Schaub\u00df", "Gert Smolka"], "venue": "Artif. Intell.,", "citeRegEx": "4", "shortCiteRegEx": "4", "year": 1991}], "referenceMentions": [{"referenceID": 0, "context": "Description Logics [1] are logical formalisms for representing information about", "startOffset": 19, "endOffset": 22}, {"referenceID": 1, "context": "We investigate the addition of such substitutions in the particular case of the logic SROIQ, an extension of the logic SROIQ [2].", "startOffset": 125, "endOffset": 128}, {"referenceID": 2, "context": "For instance, SHOIQ [3] is a restriction of SROIQ without role assertions and \u2203R.", "startOffset": 20, "endOffset": 23}, {"referenceID": 3, "context": "On the other hand, Description Logics like ALC [4] that is restricted to", "startOffset": 47, "endOffset": 50}], "year": 2017, "abstractText": "Description Logics [1] are logical formalisms for representing information about classes and objects. They are very often used as the basis of knowledge representation systems and have been used recently to develop OWL semantic web language, which can be viewed as an expressive Description Logic. There is an impressive variety of Description Logics with diverse expressiveness and complexity, or even with or without decidability. Yet, all are tailored to describe an established and fixed ontology and reason about its properties. Our goal here is to consider properties over dynamic ontologies. We introduce the notion of substitutions to express changes of ontologies (e.g. addition or deletion of an element, respectively a pair of elements, of a concept, respectively of a role). We investigate the addition of such substitutions in the particular case of the logic SROIQ, an extension of the logic SROIQ [2]. We mainly show that the problem of satisfiability in SROIQ is still decidable. Sect. 2 introduces SROIQ, our version of SROIQ with substitutions. Sect. 3 defines the interpretations for that logic. Sect. 4 proves that SROIQ is decidable by transforming formulae in SROIQ to formulae in SROIQ. Sect. 5 illustrates such transformations. Finally, Sect. 6 concludes the paper.", "creator": "LaTeX with hyperref package"}}}