{"id": "1409.2650", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "9-Sep-2014", "title": "Combining the analytical hierarchy process and the genetic algorithm to solve the timetable problem", "abstract": "The main problems of school course timetabling are time, curriculum, and classrooms. In addition there are other problems that vary from one institution to another. This paper is intended to solve the problem of satisfying the teachers preferred schedule in a way that regards the importance of the teacher to the supervising institute, i.e. his score according to some criteria. Genetic algorithm (GA) has been presented as an elegant method in solving timetable problem (TTP) in order to produce solutions with no conflict. In this paper, we consider the analytic hierarchy process (AHP) to efficiently obtain a score for each teacher, and consequently produce a GA-based TTP solution that satisfies most of the teachers preferences.\n\n\nThe second key problem is the difficulty of maintaining a comprehensive program of schedule scheduling. AHP is more common in the traditional method of school school management (TTP). It consists of two main questions:\n\u2022 Can a teacher make all students participate in this system? \u2022 Can they be assigned the highest ranking teacher by grade?\n\u2022 Can the student do as many tasks as they can? \u2022 Can students create an academic plan that satisfies some of the teachers preferences.\n\u2022 Can a student produce a list of teacher preferences that meets all the students. \u2022 Can a student be an adviser in the classroom? \u2022 Can a teacher develop an educational plan that satisfies all the students.\nThe solution is a simple solution for all of the students. The main problem is that no teacher can implement this plan in a consistent manner.\nThe solution is an elegant solution. It has been described as one of the most successful methods in school management (TTP). The approach to this approach is to apply the principle of time management in order to avoid repetition. If there are no more requirements, there are no more resources. The problem is that the plan is not based on the results of one person's experience. The goal of this approach is to be able to avoid repeating a plan that is completely different from one student's experience and only one student's experience. It also has a lot more benefits in terms of the time management, because there is not much in between learning and experience.\nThe solution is a simple solution.\n\u2022 Can a teacher make all students participate in this system? \u2022 Can the student do as many tasks as they can? \u2022 Can a teacher develop an educational plan that satisfies some of the teachers preferences. \u2022 Can a teacher develop an educational plan that satisfies all the students.\nThe solution is a simple solution. The goal", "histories": [["v1", "Tue, 9 Sep 2014 09:30:48 GMT  (146kb)", "http://arxiv.org/abs/1409.2650v1", "International Journal of Software Engineering &amp; Applications (IJSEA), Vol.5, No.4, July 2014"]], "COMMENTS": "International Journal of Software Engineering &amp; Applications (IJSEA), Vol.5, No.4, July 2014", "reviews": [], "SUBJECTS": "cs.AI cs.NE", "authors": ["ihab sbeity", "mohamed dbouk", "habib kobeissi"], "accepted": false, "id": "1409.2650"}, "pdf": {"name": "1409.2650.pdf", "metadata": {"source": "CRF", "title": "COMBINING THE ANALYTICALHIERARCHY PROCESS AND THEGENETIC ALGORITHM TO SOLVE THE TIMETABLE PROBLEM", "authors": ["Ihab Sbeity", "Mohamed Dbouk", "Habib Kobeissi"], "emails": [], "sections": [{"heading": null, "text": "DOI : 10.5121/ijsea.2014.5403 39\nThe main problems of school course timetabling are time, curriculum, and classrooms. In addition there are other problems that vary from one institution to another. This paper is intended to solve the problem of satisfying the teachers\u2019 preferred schedule in a way that regards the importance of the teacher to the supervising institute, i.e. his score according to some criteria. Genetic algorithm (GA) has been presented as an elegant method in solving timetable problem (TTP) in order to produce solutions with no conflict. In this paper, we consider the analytic hierarchy process (AHP) to efficiently obtain a score for each teacher, and consequently produce a GA-based TTP solution that satisfies most of the teachers\u2019 preferences."}, {"heading": "KEYWORDS", "text": "Timetable problem, Genetic algorithm, Analytic Hierarchy process, and Multi-criteria decision making."}, {"heading": "1. INTRODUCTION", "text": "The timetable problem (TTP) is the process of scheduling a sequence of courses between teachers, students and rooms, to satisfy a set of various constraints. These constraints differ based on the institutions involved, e.g. schools, universities, and so on.\nIn some institutions, such as Lebanese elementary schools and high-schools, an important constraint to consider is the teacher preferences that may be related to some criteria, such as the teacher age, his address, his contract-type, etc. For example, a teacher with seniority should have the opportunity to choose his course schedule. Or, a part-time teacher has the priority to select his preferred schedule over a full-time teacher, and so on. Some of these criteria may be a reflection of the social life and relationships in the urban Lebanese institutions. Note that, these criteria may be conflicting so that the ranking of teachers accordingly becomes not obvious. This is, for example, the case when comparing a senior full-time teacher with a younger part-time teacher.\nThe analytic hierarchy process (AHP), developed by Saaty [1], is an effective tool for dealing with such complex decision making processes; therefore building a ranking relationship between teachers, based on a series of pairwise comparisons. In addition, the AHP incorporates a useful technique for checking the consistency of the decision evaluation, hence reducing the bias in the decision making process.\nOn the other hand, the manual solution of TTP is still used nowadays, for reasons related, not only to the lack of budget needed to buy a dedicated TTP solver such that aSc [2, 3] and Prime\n[4], but also to the inconsistency of such tools with the Lebanese teachers\u2019 criteria. With the majority of existing tools, the person responsible in creating the schedule must manually specify the teachers\u2019 priorities with their -inconsistent-preferences, and then the tool will generate the timetable schedule. However, the teachers\u2019 priorities are not always evident to be significantly measured. In addition, as TTP is an NP-complete problem, its manual solution is time and effortconsuming. The problem would be presented by a great number of variables which make it intractable. That was the motivation to approach it by means of Genetic Algorithm (GA) [5].\nIn this paper, we present a new approach (AHP/GA) that combines AHP and GA to create a time table schedule that matches most of the teachers\u2019 preferences along with the institution. Using AHP, we will develop a teachers ranking by providing a score for each teacher, and then, a satisfaction function will be incorporated to the GA to produce the schedule that matches as best the AHP ranking, and satisfies of most the teachers\u2019 preferences. An informal description of the approach is presented basing on a simple example. The formal description and the implementation of the method would be our future challenge.\nThe rest of this paper is structured as follows: Section 2 presents a background of works related to the utilization of GA to solve TTP. Section 3 describes the steps followed by AHP/GA to produce a time table schedule taking into consideration the teachers\u2019 preferences. We also present a simple case study to be an application of the procedure. In section 3, AHP is applied to a set of teachers and their score calculation procedure is presented. Section 4 describes the result of the combination of AHP and GA to generate the time table schedule. Section 5 concludes our paper and describes our ongoing works."}, {"heading": "2. BACKGROUND", "text": ""}, {"heading": "2.1. Genetic algorithm", "text": "A genetic algorithm is a type of searching algorithm. It searches a solution space for an optimal solution to a problem. The key characteristic of the genetic algorithm is how the searching is done. The algorithm creates a \u201cpopulation\u201d of possible solutions to the problem and lets them \u201cevolve\u201d over multiple generations to find better and better solutions. The population is the collection of candidate solutions that we are considering during the course of the algorithm. Over the generations of the algorithm, new members are \u201cborn\u201d into the population, while others \u201cdie\u201d out of the population. A single solution in the population is referred to as an individual. A fitness function of an individual presents a measure of how \u201cgood\u201d the solution represented by the individual is. The better the solution, the higher the fitness \u2013 obviously, this is dependent on the problem to be solved.\nThe selection process is analogous to the survival of the fittest in the natural world. Individuals are selected for \u201cbreeding\u201d (or cross-over) based upon their fitness values \u2013the fitter the individual, the more likely that individual will be able to reproduce. The cross-over occurs by mingling the two solutions together to produce two new individuals. During each generation, there is a small chance for each individual to mutate, which will change the individual in some small way [6]. For further information about GA, refer to [7]."}, {"heading": "2.2. Related works", "text": "Various types of timetable problems appear with regards to educational institutions and depend on the elements to be scheduled, i.e. exams or regular courses. An excellent survey of exam timetabling techniques is presented in Qu et al. [8]. The examination timetabling is similar in\nmost institutions and consists of scheduling the exams for a set of courses, over a limited time period, while avoiding the overlapping of the exams for each student, as well as seeking the largest spread over the examination period [9].\nHowever, the course timetable differs regarding to the institution, i.e. universities, schools. A course timetable scheduling problem basically deals with effective distribution of five kinds of entities (or resources): Rooms, Courses, Teachers, Students, and Time (days and hours).\nIn university timetables, the problem presents a large number of constraints to be satisfied. These constraints typically cover the time conflict, the room conflict, the course conflict, and other criteria related to teachers and students preferences. Commonly, they are divided into two types: hard constraints and soft constraints [10]. Hard constraints are those that cannot be violated, such as: \u201cno more than one course is allowed at a timeslot in each room.\u201d Soft constraints may be violated, but the purpose lies in minimizing their violation. An example of soft constraints in a university timetable is: \u201ca student can only attend one course per day\u201d. A wave of works had proposed GA-based solutions for the university timetable problem; we underline the works of [10, 11, 12].\nThe schools TTP may be defined as a subset of the universities TTP, as in university TTP the number of set of constraints is larger. Several works has addressed the school TTP and presented different approaches to solve the problem; we highlight the works of [8, 13, 14]. Each of these works proposes a different utilization and definition of GA parameters (chromosomes description, mutation and crossover definition, etc). Other works apply a parallel implementation of GA to solve the school TTP [15]. However, addressing the teachers\u2019 preferences in the way presented by this paper has never been previously carried out, and it would be our contribution."}, {"heading": "3. THE AHP/GA PROCESS AND PROBLEM DESCRIPTION", "text": "A common classic definition of the GA fitness function presented by previous works [13, 14, 15, 16] takes into consideration the time conflict. Hence, our AHP/GA approach assumes that the time conflict is already solved by using one of the fitness functions previously mentioned. Our concern is to consider the teachers\u2019 preferences such that a feasible solution is the one that satisfies the most of these preferences. The AHP/GA process is described by figure 1.\nFirst, AHP is used to calculate the score of each teacher arising from a set of information given according to the institution valuable criteria. These scores are considered as one of the GA input. The fitness function of the GA is practically composed of two functions: the conflict function and the satisfaction function. A feasible solution should be validated by both functions; however, we omit the process used by the conflict function as it may be the same as in one of previous mentioned works. The satisfaction function, having the teachers\u2019 scores as parameters, checks if the GA produced solutions satisfy the teachers\u2019 preferences given as input.\nIn the rest of the paper, the AHP/GA process is applied on a simple case study described below."}, {"heading": "Description of a school TTP", "text": "In this paper, we only present an informal description of our approach. Having a purpose to simplify the problem description and the presentation of its solution later on, we consider the following simple TTP model:\n\u2022 The school is open only 3 days a week, e.g. D1, D2, and D3. \u2022 Daily, 4 sessions are only scheduled on 4 time slots, each two are separated by a break\nsession (BS). \u2022 The school provides 2 classes: C1 and C2. Thus, each class has (3\u00d74) 12 sessions per\nweek, and a total of (12\u00d72) 24 sessions are achieved weekly by all the school\u2019s teachers. \u2022 The school has 6 teachers. The distribution of the set of sessions over the teachers is\ngiven in the following table (Table 1):\nNote that in our study, we do not take into consideration the course name (math, sciences, literature, etc..); therefore there is no need to specify the course given in each session, as each course is assigned to only one teacher. Accordingly, only the teacher\u2019s schedule should be implemented without taking care of the course name.\nRecalling that our purpose is to simplify the presentation of the approach, the above model is a simple description of reality. A standard Lebanese school actually provides nine levels (classes) that may have one or more sections each depending on the number of students tolerable in the level (in case of two or more sections by level, we may consider each section as a new separate class). The school is usually open five days a week, and offers daily six sections per class. Thus, at least a total of (9\u00d75\u00d76) 270 sessions should be scheduled over the nine classes and the set of teachers.\nBack to our simple model, table 2 presents an empty time slot table that should be assigned to teachers.\nAs in previous related works, here again, two kinds of constraints should be respected in the time table schedule, hard and soft. We restrict our study on necessary constraints. The Other constraints (such as \u201cfor a class, two consecutive sessions of the same teacher is not acceptable) are not considered, but their integration to our approach seems to be promising.\n\u2022 Hard constraints: 1. There should not be time conflict in the teacher schedule, i.e. a teacher should not\nhave two or more sessions in parallel in the same time slot. 2. Each teacher should be assigned the specified number of session by class.\n\u2022 Soft constraint: only one soft constraint has to be underlined, and it is related to the teacher preferences. A teacher would specify a proffered schedule. The goal is to satisfy at most the teachers\u2019 preferences. When all the teachers\u2019 preferences are satisfied, a perfect time table schedule is obtained.\nAs it is mentioned above, the described hard constraints are already addressed by previous listed works. In our paper, we suppose that the GA is able to produce a time table without time conflict, and that each teacher is assigned an exact number of sessions as required for them. Respecting the soft constraint is the key issue that we intend to solve by satisfying the teachers\u2019 preferences. In order to do that, we assume that each teacher should provide his preferred schedule to the institution. Our combined (AHP/GA) algorithm will then generate the time table that satisfies the teachers\u2019 preferred schedule according to a satisfaction threshold (ST) fixed by the institution. The satisfaction function (SF) will be applied to each possible solution generated by (AHP/GA). Hence, a solution is feasible when its SF is greater than ST.\nFor our simple case, table 3 presents the preferred schedule of six teachers. The value \u20181\u2019 means that the specified session is preferred by the teacher. For example, T1 has no problem with his schedule in D1. However, he prefers to give his sessions after the break session in D2, and before the break session in D3.\nIn the next section, we show how to generate a score for each teacher using AHP. These scores are the crucial parameters of the satisfaction function."}, {"heading": "4. THE ANALYTICAL HIERARCHY PROCESS", "text": "The AHP is a simple decision-making tool that deals with complex multi-attribute problems which has been developed by Thomas Saaty in the (1980\u2019s). It is widely known as a method for ranking decision alternatives and selecting the best one when the decision maker has multiple objectives, or criteria. The selection process is based on the calculation of scores for alternatives. The key point in the AHP method is the pairwise comparison used to calculate the relative weights of criteria, and consequently to develop an overall ranking of alternatives. In order to help the pairwise comparison, Saaty created a nine-point scale of importance between two elements. Here, we are interested in only five scales. The suggested numbers to express degrees of preference between the two elements is shown in table 4.\nIn our approach, AHP is used in order to generate a score Si for each teacher Ti. For this goal, we present the steps followed in AHP method by applying to our simplified TTP example. In our case study, we are interested in ranking the list of teachers (alternatives) according to a list of criteria \u2013 supposed - defined by the school and that can differ from an institution to another. Once again, to simplify the presentation of the approach, we consider four criteria: the teacher\u2019s age, the teacher\u2019s contract-type (part/full timer), the teacher\u2019s gender (male/female), and the teacher\u2019s teaching load. Other criteria related to teachers such as health conditions, marital status, distance between the living address and the school, may also be significant. The teaching load Li of each teacher Ti is also an essential data needed later on in the (AHP/GA) approach, even if it is not considered as the teacher criteria. Table 5 presents the list of information about the 6 teachers of our case study, according to the 4 criteria.\nFor the set of criteria, the school should specify the importance of a criterion compared to another criterion. The order of importance is translated to a value using the AHP scale of table 4.\nWe consider that the contract type and the teacher load are the most important factors that give the teacher the superiority to choose his/her preferred schedule. A part-timer teacher has primacy over a full-timer. Also, the teacher with greater load should be prioritized over a teacher with a smaller load.\nThe teacher\u2019s age comes next in the importance of criteria. Ages are divided into 5 intervals: I1 = [21 - 30], I2 = [31 - 40], I3 = [41 - 50], I4 = [50 - 60] and I5 = [60 \u2013 and up]. Intervals of older ages become more important in the preference level, e.g. older teachers are given the priority to choose their course schedule over younger teachers. Teachers of the same age interval have the same preference value.\nThe teacher\u2019s gender has the least importance in the preference order. We assume that a \u201cfemale\u201d teacher has the priority in the preference level.\nAccording to the AHP scale of table 4, and the relative importance of criteria described above, the pairwise comparison rating for each criterion is given in table 6.\nAs per the criterion \u201cAGE\u201d, we consider that the ascending exploration of intervals correspond to a same exploration in the preference scale. Thus, the age of the interval I3 is \u201cstrongly preferred\u201d to the age of I2, and \u201cmoderately preferred\u201d to the age of I1, and so on. As an example, the pairwise comparison of T1 to T3 gives the value 5 meaning that the age of T1 (42) is strongly preferred to the age of T3 (24).\nThe pairwise comparison according to the criterion \u201cgender\u201d respects the fact that a female is moderately preferred to a male teacher. The pairwise comparison of the criterion \u201ccontract-type\u201d is achieved according to the fact that a part-timer is strongly preferred to a full-timer. Finally, we applied the pairwise comparison of the \u201cload\u201d criteria, again, basing on a division of the load value into intervals [0-2[, [2-4[, [4-6[, [6-..[, and the same strategy used for the criterion \u201cage\u201d is applied.\nNote that for all criteria, any teacher compared to himself is equally preferred, and that if Ti is compared to Tj for a criterion and the preference value is x, then the preference value of comparing Tj to Ti is 1/x.\nThe second step in the AHP process is the generation of the preference vectors of each criterion. In table 7, we present how to calculate the preference vector of the criterion \u201cgender\u201d.\nFirst, the sum of each column is calculated. Then, each element of each column is divided by the corresponding sum. Finally, the preference vector is calculated such that each value corresponds to its row average.\nTherefore, the preference vectors of the all criteria are shown in table 8."}, {"heading": "Teacher Age Gender Load Contract", "text": "The third step of AHP is ranking the criteria to determine their relative importance or weights. Again, the pairwise comparison is used for this purpose.\nAgreeing with the relative importance previously described, table 9 shows the criteria\u2019 weights which are calculated in a similar way as the preference vectors.\nNow, the score of each teacher may be calculated as a vector/matrix multiplication of the weight of table 9 and the matrix of table 8. The obtained result is as follows:\n\u2022 S1 = Score T1 = (0.193\u00d70.122) + (0.072\u00d70.057) + (0.420\u00d70.558)+(0.071\u00d70.263) = 0.281 \u2022 S2 = Score T2 = 0.148 \u2022 S3 = Score T3 = 0.158 \u2022 S4 = Score T4 = 0.222 \u2022 S5 = Score T5 = 0.102 \u2022 S6 = Score T6 = 0.089\nThe set of score S = {Si, i = 1 ... 6} will be used in the next section to incorporate an overall satisfaction function to the GA in order to produce the requested time table satisfying most of the teachers\u2019 preferences.\nFinally, we mention that AHP also incorporates a useful technique for checking the consistency of the decision evaluation. A consistency test may be applied to our study to verify if the considered pairwise comparisons are reliable. For further information about the consistency test, refer to [13]."}, {"heading": "5. COMBINING AHP AND GA (AHP/GA)", "text": "As it has been presented, the genetic algorithm proposes a fitness function used to test the feasibility of a produced solution. The classic fitness function of a GA applied to solve the TTP takes into consideration the time conflict. We define this function by Fconflict. Practically, Fconflict may return the number of conflicts in the generated solution and a solution if feasible when the value of Fconflict is 0 [15]. This task is implemented by several previous works.\nIn our (AHP/GA) approach, another function Fsatisfaction \u2013 the satisfaction function- is integrated to the GA fitness function, such that Fsatisfaction =  Si\u00d7Mi. Where Si, is the score of teacher Ti generated by AHP, and Mi is the number of sessions of teacher Ti that match its preferred schedule (see table 3). Observe that the maximum value of Fsatisfaction (called MaxFsatisfaction) is  Si\u00d7Li, where Li is the load of Ti, and hence we obtain a perfect satisfaction.\nAs a result, we say that the solution of (AHP/GA) is feasible, when the two following conditions are respected:\n1. Fconflict = 0 2. Fsatosfaction \u2265 ST ; where ST is a satisfaction threshold set by the TT designer. Note that,\nin order to obtain a perfect satisfaction, we only need to set ST to be  Si\u00d7Li.\nFor our case study, MaxFsatisfaction = (0.281\u00d77) + (0.148\u00d74) + (0.158\u00d73) + (0.222\u00d75) + (0.102\u00d72) + (0.089\u00d73) = 4.614. Table 10 presents a randomly generated solution of AHP/GA with Fsatisfaction = (0.281\u00d75) + (0.148\u00d72) + (0.158\u00d71) + (0.222\u00d75) + (0.102\u00d72) + (0.089\u00d72) = 3.351, which is not feasible if we assume that ST = 4.\nFinally, note that a feasible solution with a perfect satisfaction may be generated by AHP/GA for our case study, and it is shown in table 11."}, {"heading": "6. CONCLUSION", "text": "This paper presents a new approach that deals with the teachers\u2019 preferences while constructing the time table of a school schedule. Our approach consists of the integration of a satisfaction function to the genetic algorithm. The parameters of the satisfaction function are the teachers\u2019 loads and a set of scores calculated using the analytical hierarchy process. The key point of AHP in calculating the scores is the pairwise comparison of a set of teachers\u2019 criteria. The new approach is consequently a combination of AHP and GA, and it gives rise to a new methodology to solve the time table problem that we call AHP/GA.\nIn this paper, we present an informal description of our AHP/GA approach. The formal description and the implementation of the procedure are in perspective. In addition, we need to verify our contribution by applying the implemented AHP/GA to different case studies in Lebanese schools. Moreover, the consideration of more sophisticated constraints related to the\ncourses order, and their integration into AHP/GA is another important perception. The declaration of a set of rules, for the manual interception while building the time table, is also suitable."}, {"heading": "Authors", "text": "Ihab Sbeity, the main author, is Associative Professor in Computer Science at the Faculty of Sciences in the Lebanese University. He received a Ma\u00eetrise in applied mathematics from the Lebanese university, a Master in computer science - systems and communications from Joseph Fourier University, France, and a PhD from INPG (Institut National Polytechnique de Grenoble), France. His PhD works are related to Performance Evaluation and System Design. Actually, his research interests include software performance engineering, UML modelling, and decision information system.\nMohamed Dbouk, is a full time Professor at the Lebanese University (Beirut-Lebanon), he coordinates a master-2 research degree \u201cIDSS: Information and Decision Support Systems\u201d. He received his PhD from \u201cParis-Sud\u201d, France, 1997. His research interests include software engineering and information systems related issues, geographic information systems, data-warehousing and data-mining.\nHabib Kobeissi, is Associate Professor of Data Structure at the Faculty of Sciences in the Lebanese University (since 1987). He holds a Bachelor of Science in Computer Science from Grenoble University, a Master of Science in Data Structure from the University of Paris VI, and a Ph.D. in Data Structure from the University of Paris V. Between 1979 and 1987, he worked as a Computer Scientist at several French companies."}], "references": [{"title": "The Analytic Hierarchy Process", "author": ["T.L. Saaty"], "venue": "McGraw-Hill, Inc.,", "citeRegEx": "1", "shortCiteRegEx": "1", "year": 1980}, {"title": "Pupeikien\u0117. \"On multi-start algorithms for optimization of high school timetables.", "author": ["Mockus", "Jonas", "Lina"], "venue": null, "citeRegEx": "2", "shortCiteRegEx": "2", "year": 2012}, {"title": "Genetic algorithms and the optimal allocation of trials.", "author": ["Holland", "John H"], "venue": "SIAM Journal on Computing", "citeRegEx": "5", "shortCiteRegEx": "5", "year": 1973}, {"title": "An introduction to genetic algorithms", "author": ["S.M. Thede"], "venue": "J. Comput. Sci. Colleges, vol. 20, no. 1, pp. 115\u2013123, Oct. 2004.", "citeRegEx": "6", "shortCiteRegEx": null, "year": 2004}, {"title": "Genetic algorithms in search, optimization, and machine learning", "author": ["Goldberg", "David Edward"], "venue": "Vol. 412. Reading Menlo Park: Addison-wesley,", "citeRegEx": "7", "shortCiteRegEx": "7", "year": 1989}, {"title": "A survey of search methodologies and automated system development for examination timetabling.", "author": ["Qu R", "EK Burke", "B McCollum", "LTG Merlot", "SY Lee"], "venue": "Journal of scheduling", "citeRegEx": "8", "shortCiteRegEx": "8", "year": 2009}, {"title": "Genetic Algorithms in Timetabling", "author": ["Gyori", "S\u00e1ndor", "Zolt\u00e1n Petres", "Annam\u00e1ria R. V\u00e1rkonyi-K\u00f3czy"], "venue": "A New Approach.\" Budapest University of Technology and Economics, Hungary", "citeRegEx": "9", "shortCiteRegEx": "9", "year": 2001}, {"title": "Using a genetic algorithm optimizer tool to solve University timetable scheduling problem.", "author": ["Ghaemi", "Sehraneh", "Mohammad Taghi Vakili", "Ali Aghagolzadeh"], "venue": "Signal Processing and Its Applications,", "citeRegEx": "10", "shortCiteRegEx": "10", "year": 2007}, {"title": "Generating university course timetable using genetic algorithms and local search.", "author": ["Abdullah", "Salwani", "Hamza Turabieh"], "venue": "Convergence and Hybrid Information Technology,", "citeRegEx": "11", "shortCiteRegEx": "11", "year": 2008}, {"title": "Fuzzy genetic heuristic for university course timetable problem.\" International journal of Advance Soft Computing Application", "author": ["Chaudhuri", "Arindam", "Kajal De"], "venue": null, "citeRegEx": "12", "shortCiteRegEx": "12", "year": 2010}, {"title": "A genetic algorithm to solve the timetable problem.", "author": ["Colorni", "Alberto", "Marco Dorigo", "Vittorio Maniezzo"], "venue": null, "citeRegEx": "13", "shortCiteRegEx": "13", "year": 1992}, {"title": "Genetic Algorithm based Timetabling System-New Approach.", "author": ["K. Dhanabalan", "S. Nagarajan", "S. Sakthivel"], "venue": "International Journal of Research & Reviews in Computer Science", "citeRegEx": "14", "shortCiteRegEx": "14", "year": 2010}, {"title": "A parallel genetic algorithm for solving the school timetabling problem", "author": ["Abramson", "David", "J. Abela"], "venue": "Division of Information Technology,", "citeRegEx": "15", "shortCiteRegEx": "15", "year": 1991}, {"title": "A multiobjective genetic algorithm for the class/teacher timetabling problem.\" Practice and Theory of Automated Timetabling III", "author": ["Carrasco", "Marco P", "Margarida V. Pato"], "venue": "Authors Ihab Sbeity,", "citeRegEx": "16", "shortCiteRegEx": "16", "year": 2001}], "referenceMentions": [{"referenceID": 0, "context": "The analytic hierarchy process (AHP), developed by Saaty [1], is an effective tool for dealing with such complex decision making processes; therefore building a ranking relationship between teachers, based on a series of pairwise comparisons.", "startOffset": 57, "endOffset": 60}, {"referenceID": 1, "context": "On the other hand, the manual solution of TTP is still used nowadays, for reasons related, not only to the lack of budget needed to buy a dedicated TTP solver such that aSc [2, 3] and Prime", "startOffset": 173, "endOffset": 179}, {"referenceID": 2, "context": "That was the motivation to approach it by means of Genetic Algorithm (GA) [5].", "startOffset": 74, "endOffset": 77}, {"referenceID": 3, "context": "During each generation, there is a small chance for each individual to mutate, which will change the individual in some small way [6].", "startOffset": 130, "endOffset": 133}, {"referenceID": 4, "context": "For further information about GA, refer to [7].", "startOffset": 43, "endOffset": 46}, {"referenceID": 5, "context": "[8].", "startOffset": 0, "endOffset": 3}, {"referenceID": 6, "context": "41 most institutions and consists of scheduling the exams for a set of courses, over a limited time period, while avoiding the overlapping of the exams for each student, as well as seeking the largest spread over the examination period [9].", "startOffset": 236, "endOffset": 239}, {"referenceID": 7, "context": "Commonly, they are divided into two types: hard constraints and soft constraints [10].", "startOffset": 81, "endOffset": 85}, {"referenceID": 7, "context": "A wave of works had proposed GA-based solutions for the university timetable problem; we underline the works of [10, 11, 12].", "startOffset": 112, "endOffset": 124}, {"referenceID": 8, "context": "A wave of works had proposed GA-based solutions for the university timetable problem; we underline the works of [10, 11, 12].", "startOffset": 112, "endOffset": 124}, {"referenceID": 9, "context": "A wave of works had proposed GA-based solutions for the university timetable problem; we underline the works of [10, 11, 12].", "startOffset": 112, "endOffset": 124}, {"referenceID": 5, "context": "Several works has addressed the school TTP and presented different approaches to solve the problem; we highlight the works of [8, 13, 14].", "startOffset": 126, "endOffset": 137}, {"referenceID": 10, "context": "Several works has addressed the school TTP and presented different approaches to solve the problem; we highlight the works of [8, 13, 14].", "startOffset": 126, "endOffset": 137}, {"referenceID": 11, "context": "Several works has addressed the school TTP and presented different approaches to solve the problem; we highlight the works of [8, 13, 14].", "startOffset": 126, "endOffset": 137}, {"referenceID": 12, "context": "Other works apply a parallel implementation of GA to solve the school TTP [15].", "startOffset": 74, "endOffset": 78}, {"referenceID": 10, "context": "A common classic definition of the GA fitness function presented by previous works [13, 14, 15, 16] takes into consideration the time conflict.", "startOffset": 83, "endOffset": 99}, {"referenceID": 11, "context": "A common classic definition of the GA fitness function presented by previous works [13, 14, 15, 16] takes into consideration the time conflict.", "startOffset": 83, "endOffset": 99}, {"referenceID": 12, "context": "A common classic definition of the GA fitness function presented by previous works [13, 14, 15, 16] takes into consideration the time conflict.", "startOffset": 83, "endOffset": 99}, {"referenceID": 13, "context": "A common classic definition of the GA fitness function presented by previous works [13, 14, 15, 16] takes into consideration the time conflict.", "startOffset": 83, "endOffset": 99}, {"referenceID": 10, "context": "For further information about the consistency test, refer to [13].", "startOffset": 61, "endOffset": 65}, {"referenceID": 12, "context": "Practically, Fconflict may return the number of conflicts in the generated solution and a solution if feasible when the value of Fconflict is 0 [15].", "startOffset": 144, "endOffset": 148}], "year": 2014, "abstractText": "The main problems of school course timetabling are time, curriculum, and classrooms. In addition there are other problems that vary from one institution to another. This paper is intended to solve the problem of satisfying the teachers\u2019 preferred schedule in a way that regards the importance of the teacher to the supervising institute, i.e. his score according to some criteria. Genetic algorithm (GA) has been presented as an elegant method in solving timetable problem (TTP) in order to produce solutions with no conflict. In this paper, we consider the analytic hierarchy process (AHP) to efficiently obtain a score for each teacher, and consequently produce a GA-based TTP solution that satisfies most of the teachers\u2019 preferences.", "creator": "Microsoft Office Word"}}}