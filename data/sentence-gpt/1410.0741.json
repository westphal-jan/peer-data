{"id": "1410.0741", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "3-Oct-2014", "title": "Generalized Laguerre Reduction of the Volterra Kernel for Practical Identification of Nonlinear Dynamic Systems", "abstract": "The Volterra series can be used to model a large subset of nonlinear, dynamic systems. A major drawback is the number of coefficients required model such systems. In order to reduce the number of required coefficients, Laguerre polynomials are used to estimate the Volterra kernels. Existing literature proposes algorithms for a fixed number of Volterra kernels, and Laguerre series. This paper presents a novel algorithm for generalized calculation of the finite order Volterra-Laguerre (VL) series for a MIMO system. An example addresses the utility of the algorithm in practical application. For instance, Laguerre is used to produce a fixed set of weights for Laguerre series, and Laguerre series has many constraints, but is not the most complete, for the Volterra Laguerre series. Laguerre series has been used to generate and generate a linear distribution of the total Laguerre series, and Laguerre series has numerous limitations. The model can therefore rely upon the nonlinear N-linear N-linear N-linear N-linear N-linear N-linear N-linear N-linear N-linear N-linear N-linear N-linear N-linear N-linear N-linear N-linear N-linear N-linear N-linear N-linear N-linear N-linear N-linear N-linear N-linear N-linear N-linear N-linear N-linear N-linear N-linear N-linear N-linear N-linear N-linear N-linear N-linear N-linear N-linear N-linear N-linear N-linear N-linear N-linear N-linear N-linear N-linear N-linear N-linear N-linear N-linear N-linear N-linear N-linear N-linear N-linear N-linear N-linear N-linear N-linear N-linear N-linear N-linear N-linear N-linear N-linear N-linear N-linear N-linear N-linear N-linear N-linear N-linear N-linear N-linear N-linear N-linear N-linear N-linear N-linear N-linear N-linear N-linear N-linear N-linear N-linear N-linear N-linear N-linear N-linear N-linear N-linear N-linear N-linear N-linear N-linear N-linear", "histories": [["v1", "Fri, 3 Oct 2014 01:59:25 GMT  (29kb,D)", "http://arxiv.org/abs/1410.0741v1", "16 pages"]], "COMMENTS": "16 pages", "reviews": [], "SUBJECTS": "cs.LG", "authors": ["brett w israelsen", "dale a smith"], "accepted": false, "id": "1410.0741"}, "pdf": {"name": "1410.0741.pdf", "metadata": {"source": "CRF", "title": "Generalized Laguerre Reduction of Volterra Kernel Generalized Laguerre Reduction of the Volterra Kernel for Practical Identification of Nonlinear Dynamic Systems", "authors": ["Brett W. Israelsen", "Dale A. Smith"], "emails": ["brett.israelsen@gmail.com", "dale.smith@apco-inc.com"], "sections": [{"heading": null, "text": "Keywords: Laguerre, model reduction, system identification, statistical learning, Volterra"}, {"heading": "1. Introduction", "text": "The Volterra Series were first studied by Vito Volterra and were named after him. The first application of the Volterra series to the study of nonlinear systems was done by Norbert Wiener (see Schetzen, 1980, p.517). The time invariant series can be represented by (1) below.\ny (t) = \u222b \u221e \u2212\u221e h1(\u03c31)u(t\u2212 \u03c31)d\u03c31\n+ \u222b \u221e \u2212\u221e \u222b \u221e \u2212\u221e h2(\u03c31, \u03c32)u(t\u2212 \u03c31)u(t\u2212 \u03c32)d\u03c31d\u03c32 + \u00b7 \u00b7 \u00b7\n+ \u222b \u221e \u2212\u221e \u00b7 \u00b7 \u00b7 \u222b \u221e \u2212\u221e hN (\u03c31, \u00b7 \u00b7 \u00b7 , \u03c3i)u(t\u2212 \u03c31) \u00b7 \u00b7 \u00b7\nu(t\u2212 \u03c3N )d\u03c31 \u00b7 \u00b7 \u00b7 d\u03c3N (1)\nHere u represents the input to the system, y is the system output and hn is known as the nth Volterra kernel, it can also be called the nth order impulse response. This terminology comes because the first term of eq. (1) is the same as the convolution integral which relates the output of a system to the input and the 1st order impulse response of\nar X\niv :1\n41 0.\n07 41\nv1 [\ncs .L\nG ]\n3 O\nthe system1. Higher order terms of the Volterra series can be seen as higher order impulse responses. The terms Volterra kernel and impulse response will be used interchangeably in this document.\nSeveral modifications can and should be made to (1) before performing an identification. These modifications include: discretization of the integrals, modification of the limits of integration based on known characteristics of physical systems, and reduction of the Volterra kernel using the Laguerre polynomials to reduce the number of model parameters."}, {"heading": "2. Simplifying the Volterra Series for Practical Application", "text": "If a system is causal, which means that the output at some time t depends only on past inputs(u(t\u2212\u03c3) for \u03c3 > 0) and not on future inputs (u(t\u2212\u03c3) for \u03c3 < 0). The Volterra series can be written as shown in eq. (2) below. Note that (2) only includes the first term of the series for simplicity. It should also be noted that all known physical systems appear to be causal. A more detailed discussion of causality can be found in Schetzen (1980, p.21,89).\ny (t) = \u222b \u221e 0 h1(\u03c31)u(t\u2212 \u03c31)d\u03c31 (2)\nThe Volterra series may also be discretized by using the convolution sum instead of the convolution integral, yielding eq. (3). Again, only the first term of the series is shown for simplicity.\ny (t) = \u221e\u2211 i1=0 h1(i1)u(t\u2212 i1) (3)\nFinally, if the system is assumed to have finite memory or fading memory and finite order another simplification can be made. Fading Memory means that the there is some time M in the past before which inputs will no longer have affect on the output of the system. Equation (4) is referred to as the discrete, finite memory, N th order Volterra Series.\ny (t) = N\u2211 n=1 \u03bdnM (t) (4)\n\u03bdnM (t) = M\u2211 i1=0 \u00b7 \u00b7 \u00b7 M\u2211 in=0 hn(i, . . . , in)u(t\u2212 i1) \u00b7 \u00b7 \u00b7u(t\u2212 in)\n1. Note that eq. (1), and consequently most of the other equations in this paper represent SISO systems for compactness. MIMO systems can be accounted for by solving several MISO sets, and expanding the expression with ui(t), i = 1 . . . I where I is the total number of inputs. For illustrative purposes it is sufficient to look at SISO systems for now."}, {"heading": "2.1 Volterra Model Limitations", "text": "This class of finite Volterra models is defined as the class of V(N,M) models by Doyle et al. (2001). Where N is the nonlinear degree and M is the dynamic order. In other words N is the number of Volterra terms and M is the memory length of the system. Using this notation it is easy to describe different Volterra Models by examining the behaviors of the limiting cases. These are: V(\u221e,M),V(N,\u221e), and V(\u221e,\u221e) (Doyle et al., 2001, Ch. 2), (Pearson, 1999, Sec.4.2).\nIt is important to consider the limitations of the V(N,M) class. Some of these limitations include not being able to exhibit output multiplicity (Boyd and Chua, 1985). This can be described intuitively by saying that if a system can exhibit the same output by different local inputs (i.e. different steady state responses to the same steady state input), it must have had paths that differed initially. This leads to a similar conclusion which says conditionally stable impulse responses cannot be described by a fading memory Volterra model. Volterra models also cannot produce persistent oscillations or chaos in response to asymptotically constant input sequences.\nThe limitations of the Volterra series can be seen as beneficial or detrimental depending on the desired output of the model. If a model for a system with persistent oscillations is desired then VL models should not be used. However, it is useful to have a model that implicitly rejects these types of characteristics if the physical system does not exhibit them. More information on this subject can be found in Doyle et al. (2001); Pearson (1999)"}, {"heading": "2.2 Volterra Model Parameterization", "text": "Another important practical limitation, that isn\u2019t dependent on the application, is Volterra Model Parameterization. In other words how many parameters are required to define a V(N,M) model. The total number of parameters can be represented as C(N,M) (Doyle et al., 2001). The following equations describe the calculation of C(N,M).\nC(N,M) = M\u2211 n=0 Cn(M) (5) Cn(M) = (M + 1) n\nC(N,M) = M\u2211 n=0 Cn(M) = (M + 1)N+1 \u2212 1 M (6)\n'MN\nHere Cn(M) is the total number of coefficients in hn(The n th Volterra Kernel) of the Volterra model V(N,M). Although Doyle et al. (2001, p.19) discusses methods for reducing the number of coefficients, the relationship is still exponential and therefore remains a barrier for practical application. Table 1 below demonstrates how quickly the number of required parameters can grow, especially considering that M is regularly between 50 and 250 in many industrial processes. The number of model parameters required makes any Voterra model with N > 2 impratical."}, {"heading": "3. The Laguerre Polynomials", "text": "Laguerre Polynomials are named after Edmond Laguerre. The Laguerre Polynomials are a series of orthogonal polynomials that can be used to reduce the number of coefficients required to describe a Volterra kernel. The application of orthogonal functions to identification and control is not new, see (Schetzen, 1980), (Dumont et al., 1991), (Zheng and Zafiriou, 1994), (Ma\u0308kila, 1990), (Clement, 1982), (Mahmoodi et al., 2007), (Zheng and Zafiriou, 1995),and (Lee, 1960). A mathematical review of orthogonal and orthonormal fucntions can be found in Appendix 6."}, {"heading": "3.1 Making the Laguerre Functions", "text": ""}, {"heading": "3.1.1 Forming the General Laguerre Representation", "text": "The Laguerre functions can be obtained by forming an orthonormal set from the linearly independent set of functions in (7). Note that since the functions are only non-zero for t \u2265 0 that the Laguerre functions will be orthonormal on the domain [0,\u221e).\nvn =\n{ 0 for t < 0\n(at)ne\u2212at for t \u2265 0;n = 0, 1, 2, . . . (7)\nThe Laguerre function can then be represented as:\nln(t) = \u221e\u2211 m=0 cmnvm(t) (8)\nIt must adhere to the orthonormal condition given in Equations (38),(39) and (40) (see Appendix 6). This can be done by choosing the coefficients cmn in order to satisfy the given equations. Examples of this procedure for the time and frequency domain can be found in Schetzen (1980, Sec. 16.1-16.2). It can be shown that the general expression for the Laguerre functions in the time domain is eq. (9) below.\nln(t) = \u221a 2a n\u2211 k=0 (\u22121)kn!2n\u2212k k![(n\u2212 k)!]2 (2at)n\u2212ke\u2212at (9)"}, {"heading": "3.1.2 Laguerre Time Scale Factor \u2013 a", "text": "There is some interesting discussion that should take place concerning the value a in eq. (9). It is a factor by which the time scale of the Laguerre functions can be lengthened or shortened. It is often referred to as the Laguerre time scale because of this. Examination of the frequency domain representation of the Laguerre polynomials shows that the a term defines the time constant of a filter. This leads to more discussion on the use of Laguerre polynomials as filters. It is sufficient to know for the purposes of this paper that the parameter a or rather 1/a is the time constant of the \u201cLaguerre Filter\u201d and that because of this filter the Laguerre functions can reject noise in experimental data if it is chosen properly.\nEquations (10) and (11) below are frequency domain representations of the Laguerre polynomials and make the filter more obvious. Observe that \u03b1 is a low pass filter and \u03b2 is an all-pass filter making the net effect of the Laguerre Functions a filter with time constant 1/a. For more detail on the frequency domain representation of the Laguerre Functions see Schetzen (1980, Sec. 16.2). For more information on the Laguerre filter see Silva (1995) and King and Paraskevopoulos (1977).\nLn(s) = \u221a 2a (a\u2212 s)n\n(a+ s)n+1 ;\u03c3 > \u2212a (10)\nor\nLn(s) =\n[ \u221a 2a\na+ s ] \ufe38 \ufe37\ufe37 \ufe38\n\u03b1\n[ (a\u2212 s) (a+ s) ]n \ufe38 \ufe37\ufe37 \ufe38\n\u03b2\n;\u03c3 > \u2212a (11)\nResearch has been performed to identify the optimal time scale factor a for a given identification problem. It has been suggested that the factor should be placed near the dominant pole of the system (Zheng and Zafiriou, 1995), however if the system has delay the factor a will be greatly affected (Wang and Cluett, 1994). Methods exist for calculating the optimal time scale value for linear systems, or require previous knowledge of the system and thus are not generally applicable to nonlinear system identification (Clowes, 1965), (Fu and Dumont, 1993), and (Parks, 1971). Current general practice is to perform a nonlinear optimization to calculate the value for a that will yield the minimum error.\nIf the value for a is optimal the coefficients of the higher order terms of the Laguerre polynomial will go to zero. This is valuable because the main purpose of using the Laguerre functions is to reduce the number of parameters that need to be identified for a V(N,M) model. If the value of a is not optimal then the Laguerre functions can still be used but a higher order Laguerre polynomial will be required. Some further discussion of properties can be found in Appendix 6."}, {"heading": "4. Laguerre Estimation of the Volterra Kernel", "text": "Recall the first order discrete Volterra kernel given in eq. (3) (shown below for reference).\ny (t) = \u221e\u2211 i1=0 h1(i1)u(t\u2212 i1)\nThe only unknown is h1(i1), the 1 st order impulse response, since for system identification both y(t) and u(t) are recorded I/O data. h1(i1) can be approximated by linear combination of the Laguerre functions.\nIn the case of the first order Volterra-Laguerre series. The first order Volterra kernel (h1(i1)) is approximated by linear combination of an r\nth order Laguerre polynomial. h1(i1) meets the requirement of its square being finite over the interval through which the Laguerre functions are orthonormal (see (35)).The formulation is shown below:\nh1(i1) \u2248 R\u2211 r=1 \u03b8rlr(t) (12)\nHere, lr(t) is given by (9) and is shown below for reference.\nlr(t) = \u221a 2a r\u2211\nk=0\n(\u22121)kr!2r\u2212k k![(r \u2212 k)!]2 (2at)r\u2212ke\u2212at\nSubstituting eq. (12) into eq. (31) and truncating both h1(i1) and lr(t) to a memory length of M yields:\ny(t) \u2248 M\u2211 i1=0 R\u2211 r=1 \u03b8rlr(t)u(t\u2212 i1) (13)\nNow, defining the following:\n\u0398 = [\u03b81, \u03b82, . . . , \u03b8R] T (14)\nB =  l1(0) l2(0) \u00b7 \u00b7 \u00b7 lR(0) l1(1) l2(1) \u00b7 \u00b7 \u00b7 lR(1) ... ... . . . ...\nl1(M) l2(M) \u00b7 \u00b7 \u00b7 lR(M)  (15) Uk = [u(k), u(k \u2212 1), . . . , u(k \u2212M)] (16)\nThen the Volterra system can be approximated by:\ny\u0303(k) = UkB\u0398 (17)\nIn order to extend the representation to higher order Volterra series for a MIMO system it is first useful to define the reduced Kronecker product as (18) (Rugh, 1981, p.100) :\na[2] = a\u2297 a =[a1, a2, . . . , an][2] = [a1a1, a1a2, . . . , a2a2, a2a3, . . . , anan] (18)\nUsing the reduced Kronecker product notation above a general MISO Volterra-Laguerre series with I inputs can be approximated by (19) below. For a MIMO system the separate MISO solutions can be combined.\ny\u0303(k) = [Uk,U [2] k , . . . ,U [N ] k ]\u0398 (19)\nwhere\nUik = [ui(k), . . . , ui(k \u2212m)], i = 1, . . . , I (20) Uk = [U 1 kB, . . . ,U I kB] (21)\nThis notation was originally derived in Zheng and Zafiriou (2004)."}, {"heading": "5. Added generalization for Ease of Practical Application", "text": "In order to simplify practical application, generalizations were made to make the algorithm more easily scalable. Each of the generalizations will be discussed separately and are listed below:\n1. Allow different nonlinear degree N for each system input i = 1 . . . I\n2. Allow different Laguerre series lr for each Volterra term n = 1 . . . N and input i = 1 . . . I\n3. Allow different Laguerre time scale an,i for each Laguerre series l an,i r"}, {"heading": "5.1 Separate Volterra order for each system input", "text": "The Volterra series can be used to model a large class of systems.Equation (1) (shown below for reference) is the general N th order Volterra series.\ny (t) = \u222b \u221e \u2212\u221e h1(\u03c31)u(t\u2212 \u03c31)d\u03c31\n+ \u222b \u221e \u2212\u221e \u222b \u221e \u2212\u221e h2(\u03c31, \u03c32)u(t\u2212 \u03c31)u(t\u2212 \u03c32)d\u03c31d\u03c32 + \u00b7 \u00b7 \u00b7\n+ \u222b \u221e \u2212\u221e \u00b7 \u00b7 \u00b7 \u222b \u221e \u2212\u221e hN (\u03c31, \u00b7 \u00b7 \u00b7 , \u03c3i)u(t\u2212 \u03c31) \u00b7 \u00b7 \u00b7\nu(t\u2212 \u03c3N )d\u03c31 \u00b7 \u00b7 \u00b7 d\u03c3N N = 1 is an example of the first order Volterra series and can describe systems with a linear relationship between the inputs and output. Using N = 2 allows the Volterra series to describe second order relationships between the inputs and output. It cannot be assumed that, in a general system all inputs will have the same relationship to the output. In fact this will rarely be the case."}, {"heading": "5.2 Separate Laguerre series for each Volterra term", "text": "Considering a single input being mapped to an output using an N th order Volterra series. There will be N different Laguerre polynomials to approximate each kernel of the Volterra series. Depending on the complexity of the relationship between one term of the Volterra series and the output; a different order R of the Laguerre polynomial could be used for each separate term of the Volterra series. This option gives one the ability to use more or less Laguerre coefficients to aproximate a certain term of the Volterra series if needed. A general example of an input with an uncomplicated first order relationship to the output and a more complicated second order relationship to the output could take advantage of fewer laguerre polynomials to approximate the first order Volterra kernel and more laguerre polynomials to approximate the second order Volterra kernel. Myriad other scenarios exist where this flexibility would be useful/necessary especially when considering scenarios involving multiple inputs."}, {"heading": "5.3 Separate Laguerre time scale for each Laguerre series", "text": "Earlier in this document the Laguerre time scale was discussed as an important parameter in the Laguerre polynomial.\nThe Laguerre polynomial acts as a filter with time constant 1/a. The time scale should be chosen to be the time constant of the response that is being modeled. Since a separate time scale can be chosen for each Volterra term this also allows adaptations to differences in responses within the same input. Again similar to the example above consider an input with a low frequency first order relationship to the output and a high frequency second order relationship to the output. A situation that would probably occur more frequently would be two inputs with significantly different dynamics."}, {"heading": "5.4 A Generalized Algorithm", "text": "With these three modifications the equations given in the previous section need to be modified. Assume that there are D I/O points being considered.\ny\u0303(k) = [U [1] k ,U [2] k , . . . ,U [N ] k ]\u0398 (22)\nWhere:\nU[n] = [UnBn][n], n = 1, . . . , N (23)\nUn = [u1,u2, . . . ,uI] (24)\nui =  ui(k) ui(k \u2212 1) ui(k \u2212 2) \u00b7 \u00b7 \u00b7 ui(k \u2212M) ui(k + 1) ui(k) ui(k \u2212 1) . . . . . . ui(k + 2) ui(k + 1) ui(k) . . . . . . ... . . . . . . . . . . . .\nui(k +D) ui(k +D \u2212 1) \u00b7 \u00b7 \u00b7 . . . ui(k +D \u2212M)\n , i = 1, . . . , I (25)\nBn =  Bn1 0 \u00b7 \u00b7 \u00b7 0 0 Bn2 . . . ... ... . . . . . . 0\n0 \u00b7 \u00b7 \u00b7 0 BnI\n (26)\nBni =  l an,i 1 (0) l an,i 2 (0) \u00b7 \u00b7 \u00b7 l an,i Rn,i (0) l an,i 1 (1) l an,i 2 (1) \u00b7 \u00b7 \u00b7 l an,i Rn,i (1) ... ... . . .\n... l an,i 1 (M) l an,i 2 (M) \u00b7 \u00b7 \u00b7 l an,i Rn,i (M)  (27) Where: i = 1, . . . , I and n = 1, . . . , N . Finally:\n\u0398 = [\u03b81,1,1,\u03b81,1,2, \u00b7 \u00b7 \u00b7 , \u03b81,1,Rn,i , \u03b81,2,1, \u00b7 \u00b7 \u00b7 , \u03b81,I,Rn,i , \u00b7 \u00b7 \u00b7 , \u03b8N,I,RN,i ] T (28)\nThe explanations and definitions of the following symbols should be noted. Recall that a[n] is the nth reduced Kronecker product. N is the maximum Volterra order of the inputs N = max(Ni). I is the number of inputs. k denotes the time step at which identification will begin on the data set, while this can be anywhere in the data set such that k\u2212M > 1 usually k = M+1. Bn is a block diagonal matrix, the boldface zeros represent zero matrices with appropriate dimensions. an,i is the Laguerre time scale that pertains to Volterra term n and input i. These values can be specified or can be calculated by optimization of an initial guess, recall that this is a global optimization and that local minima may be a problem. Rn,i is the order of the Laguerre polynomial that will be used to fit each polynomial, these values are specified by the user. Finally \u03b8n,i,r is the \u03b8 (or Laguerre coefficient) corresponding to Volterra term n, input i, and Laguerre polynomial r."}, {"heading": "5.5 Effect of Laguerre Reduction", "text": "The parameterization of the Volterra series was discussed earlier in this document. It was identified to be a significant impediment to the practical application of Volterra model identification because of the number of I/O that are required to confidently identify such a large number of model parameters. The replacement of the Volterra kernel with the Laguerre polynomials allows a reduction of the required parameters. This occurs because the Laguerre functions approximate each Volterra kernel with R parameters instead of M parameters (assuming R is the same for each term). The total number of coefficients in the reduced Volterra model V(N,R) can be derived similarly to eq. (6) and is shown below in eq. (29).\nC(N,R) = R N (29)\nTable 2 below shows the amount of parameters for a Volterra-Laguerre model with N Volterra terms and an Rth order Laguerre polynomial.\nThe number of required parameters for a Volterra-Laguerre model is much less than that of a Volterra model. For example, consider a Volterra system with M = 50 and N = 3. Table 1 shows that this would require approximately 8000 parameters to describe. Fitting the same Volterra model with N = 3 and Laguerre polynomials of order R = 3. The number of parameters is reduced to 27 which is less than 0.5 percent of the number required for the Volterra series.\nIt is important to remember that reduction of the number of required model parameters is desirable because of the amount of required I/O data to identify them. For a fixed amount of I/O data the identification of the parameters will have some statistical confidence inversely proportional to the number of parameters. If the number of required parameters are decreased then the statistical confidence will go up. For industrial applications this means that less time can be spent collecting data to achieve the same (or better) statistical confidence in the model parameters. The other way of looking at it is that a better model can be made with the same amount of I/O data. Either way use of the Volterra-Laguerre series can be extremely beneficial."}, {"heading": "5.5.1 Example - Variable Parameters", "text": "A short demonstration highlights the value of having an algorithm that allows variation to N , lr, and an,i. Data for this example was borrowed from Bachlin et al. (2010). The dataset is a multivariate time-series for freezing of gait in patients with Parkinson\u2019s disease. \u2019Trunk acceleration - horizontal forward acceleration [mg]\u2019 and \u2019Upper leg (thigh) acceleration - horizontal forward acceleration [mg]\u2019 were used u1(t) and u2(t) respectively. And, \u2019Ankle (shank) acceleration - horizontal forward acceleration [mg]\u2019 was y(t) . Hundreds of simulations were run using samples drawn uniformly from the following domains: N , the nonlinear degree or Volterra order was taken from integers [1, 5] for each input, lr was drawn from integers [2, 4] for each volterra kernel, and an,i was taken from the set of real numbers on [0.005, 100] for each laguerre series. Hundreds more simulations were run using equal N , lr, and an,i as well.\nCompiling the results from these simulations and plotting the corresponding distributions of the sum of the squared error (SSE) indicates the difference in the expected error from a scenario with N , lr, and an,i fixed (according to practice in current literature) as opposed to the case where they can be different.\nNormalizing the means to the lowest value of SSE the difference between the baseline simulations and the variable parameter simulations is approximately 5.5 percent. It should be noted that the simulations with variable parameters have a tighter distribution. It should also be noted that lower SSE is not necessarily desirable because of over-fitting.\nThis example illustrates that, in general a VL model fit with non-equal parameters will have less error than a model with equal parameters."}, {"heading": "6. Conclusion", "text": "This paper presented the general Volterra series and discussed some typical simplifying assumptions. Limitations of the finite V(N,M) class Volterra Series were discussed with respect to physical systems. These limitations can often be beneficial as they represent behaviors not commonly seen in physical systems. Perhaps the key limitation to the Volterra series is the number of parameters required to describe a model, Laguerre Polynomials were introduced as a tool, by which to estimate the Volterra kernels and reduce the total number of model parameters required for a given system. A novel algorithm is presented to generalize identification of discrete VL systems. The proposed algorithm allows flexibility of parameterization to fit any class of system that can be described by a V(N,M), l an,i r VolterraLaguerre model. An example using the proposed algorithm on experimental data showed that using variable parameters has a higher probability of fitting the data set with less error."}, {"heading": "Appendix A. Memory", "text": "Fading Memory systems are those where the output exhibits a finite, steady state, response to a step input. This could be the velocity of a car due to an increase of fuel being fed to the engine. Or the increase in flow due to a change in valve position.\nFading Memory and Finite Memory and synonymous. Any member of the class of fading memory systems can be approximated to arbitrary accuracy by a finite Volterra model (Boyd and Chua, 1985) . A better discussion of fading memory systems and the work done on them can be found in Doyle et al. (2001, p. 41),and Boyd and Chua (1985, Sec. III). It turns out that the concept of fading memory has been around at least as long as the Volterra series itself. Regularly the Horizon should be equal to the number of steps in the time to steady state. In EHPC there has been work suggesting criteria for choosing the memory length or \u201cHorizon\u201d of finite memory systems, see Kong and De Keyser (1994) for more details and references.\nAn example of infinite memory is an integrating process such as the level of tank with respect to influent flow. If the influent flow rate of a tank steps from 0 to a positive value of x the tank will begin to fill. If the model ever \u201cforgets\u201d that the flow rate was changed to x then it would predict that the tank level should stop changing. Thus this model requires infinite memory to correctly predict the level of the tank.\nSome more discussion regarding systems with infinite memory can be found in Schetzen (1980, p.334). Systems with infinite memory can still be handled but require some special treatment. In the case of the above example the level signal could be differentiated giving a constant rate of increase of the level."}, {"heading": "Appendix B. Orthogonal and Orthonormal Functions", "text": "Two vectors are orthogonal if they are perpendicular. In order to test if two vectors are perpendicular one can take the inner product of the vectors, if they are perpendicular the inner product will be zero. In Euclidean space (i.e. x,y,z) the inner product is the dot product. If the vectors are perpendicular their inner product will be zero. Non-zero orthogonal vectors are always linearly independent which means that one of them can\u2019t be written as a combination of any finite combination of the others.\nThis idea of orthogonality can be extended to functions. In other words two functions are orthogonal if their inner product is zero. An orthogonal set is a group of vectors that are orthogonal to each other. For orthogonal functions the orthogonality condition can be expressed as eq. (30) below.\n\u222b b a wm(x)wn(x)dx = { \u03bbn for m = n 0 for m 6= n (30)\nHere,wn(x) is an orthogonal set of functions over the interval [a, b]. \u03bbn is the product of wn with itself and is therefore always positive.\nA function f(x) can be approximated in the interval [a, b] by N members of the orthogonal set, yielding eq. (31) below. Here cn are coefficients chosen to minimize the error between the left hand side of eq. (31) and the right hand side.\nf(x) \u2248 N\u2211 n=1 cnwn(x) (31)\nThe equation for error can be represented as eq. (32) below. This is then squared to give eq. (33) . Substituting (32) into (33) yields eq. (34) . Which will only be finite if (35) is true.\neN (x) = f(x)\u2212 N\u2211 n=1 cnwn(x) (32)\nIN = \u222b b a e2n(x)dx (33)\nIN = \u222b b a [ f(x)\u2212 N\u2211 n=1 cnwn(x) ]2 dx (34)\n\u222b b a f2(x)dx <\u221e (35)\nIt can be shown that for all N eq. (36) holds. If the orthogonal set is complete (i.e. N =\u221e) eq. (37) holds (See Schetzen (1980, Sec. 9.2)).\nN\u2211 n=1 c2n\u03bbn \u2264 \u222b b a f2(x)dx (36)\n\u221e\u2211 n=1 c2n\u03bbn = \u222b b a f2(x)dx (37)\nAn orthogonal set is orthonormal if the magnitude of \u03bbn in eq. (30) is equal to 1 for all values of n. Or eq. (30) can be rewritten as eq. (38) below.\n\u222b b a wm(x)wn(x)dx = \u03b4mn { 1 for m = n 0 form 6= n (38)\nTo satisfy eq. (38) it is sufficient to meet the requirements of eqs. (39) and (40). This derivation can be found in more detail in Schetzen (1980, Sec. 9.2 and 16.1).\u222b b\na wm(x)wn(x)dx = 0, for m < n (39)\u222b b\na w2m(x)dx = 1 (40)"}, {"heading": "Appendix C. Laguerre Polynomials - Properties and Useful Forms", "text": "Equation (9) can also be represented in the following form:\nln(t) = Ln(t)e\u2212at (41)\nLn(t) = \u221a 2a n\u2211 k=0 (\u22121)kn!2n\u2212k k![(n\u2212 k)!]2 (2at)n\u2212k (42)\nThe nth degree polynomial Ln(t) is called the nth Laguerre polynomial. It is also interesting to note that the Laguerre function ln(t) has n zero crossings defined by the zeros of Ln(t). More detail concerning the derivation and properties of the Laguerre polynomials and functions can be found in Schetzen (1980, Ch. 16) and Lee (1960, Sec. 18.5)."}], "references": [{"title": "Wearable assistant for parkinsons disease patients with the freezing of gait symptom", "author": ["M Bachlin", "Meir Plotnik", "Daniel Roggen", "Inbal Maidan", "Jeffrey M Hausdorff", "Nir Giladi", "G Troster"], "venue": "Information Technology in Biomedicine, IEEE Transactions on,", "citeRegEx": "Bachlin et al\\.,? \\Q2010\\E", "shortCiteRegEx": "Bachlin et al\\.", "year": 2010}, {"title": "Fading memory and the problem of approximating nonlinear operators with volterra series", "author": ["S. Boyd", "L. Chua"], "venue": "IEEE Transactions on Circuits and Systems,", "citeRegEx": "Boyd and Chua.,? \\Q1985\\E", "shortCiteRegEx": "Boyd and Chua.", "year": 1985}, {"title": "Laguerre functions in signal analysis and parameter identification", "author": ["P.R. Clement"], "venue": "Journal of the Franklin Institute,", "citeRegEx": "Clement.,? \\Q1982\\E", "shortCiteRegEx": "Clement.", "year": 1982}, {"title": "Choice of the time-scaling factor for linear system approximations using orthonormal laguere functions", "author": ["G.J. Clowes"], "venue": "IEEE Transactions on Automatic Control,", "citeRegEx": "Clowes.,? \\Q1965\\E", "shortCiteRegEx": "Clowes.", "year": 1965}, {"title": "Identification and control Using Volterra Models. Communications and Control", "author": ["Francis J. Doyle", "Babatunde A. Ogunnaike", "Ronald K. Pearson"], "venue": null, "citeRegEx": "Doyle et al\\.,? \\Q2001\\E", "shortCiteRegEx": "Doyle et al\\.", "year": 2001}, {"title": "Orthonormal functions in identification and adaptive control", "author": ["G.A. Dumont", "Y. Fu", "AL Elshafei"], "venue": "Pergamon,", "citeRegEx": "Dumont et al\\.,? \\Q1991\\E", "shortCiteRegEx": "Dumont et al\\.", "year": 1991}, {"title": "An optimum time scale for discrete laguerre network", "author": ["Y. Fu", "G.A. Dumont"], "venue": "Automatic Control, IEEE Transactions on,", "citeRegEx": "Fu and Dumont.,? \\Q1993\\E", "shortCiteRegEx": "Fu and Dumont.", "year": 1993}, {"title": "Digital laguerre filters", "author": ["RE King", "PN Paraskevopoulos"], "venue": "International Journal of Circuit Theory and Applications,", "citeRegEx": "King and Paraskevopoulos.,? \\Q1977\\E", "shortCiteRegEx": "King and Paraskevopoulos.", "year": 1977}, {"title": "Criteria for choosing the horizon in extended horizon predictive control", "author": ["F. Kong", "R. De Keyser"], "venue": "IEEE Transactions on Automatic Control,", "citeRegEx": "Kong and Keyser.,? \\Q1994\\E", "shortCiteRegEx": "Kong and Keyser.", "year": 1994}, {"title": "Statistical Theory of Communication", "author": ["Y.W. Lee"], "venue": null, "citeRegEx": "Lee.,? \\Q1960\\E", "shortCiteRegEx": "Lee.", "year": 1960}, {"title": "Volterralaguerre modeling for nmpc", "author": ["S. Mahmoodi", "A. Montazeri", "J. Poshtan", "M.R. Jahed-Motlagh", "M. Poshtan"], "venue": "In Proc. 9th International Symposium on Signal Processing and Its Applications ISSPA", "citeRegEx": "Mahmoodi et al\\.,? \\Q2007\\E", "shortCiteRegEx": "Mahmoodi et al\\.", "year": 2007}, {"title": "Approximation of stable systems by laguerre filters", "author": ["PM M\u00e4kila"], "venue": "Automatica(Oxford),", "citeRegEx": "M\u00e4kila.,? \\Q1990\\E", "shortCiteRegEx": "M\u00e4kila.", "year": 1990}, {"title": "Choice of time scale in laguerre approximations using signal measurements", "author": ["T. Parks"], "venue": "IEEE Transactions on Automatic Control,", "citeRegEx": "Parks.,? \\Q1971\\E", "shortCiteRegEx": "Parks.", "year": 1971}, {"title": "Discrete-Time Dynamic Models. Topics in Chemical Engineering", "author": ["Ronald K. Pearson"], "venue": null, "citeRegEx": "Pearson.,? \\Q1999\\E", "shortCiteRegEx": "Pearson.", "year": 1999}, {"title": "Nonlinear System Theory - The Volterra/Wiener Approach", "author": ["Wilson J. Rugh"], "venue": "No Longer in Publication", "citeRegEx": "Rugh.,? \\Q1981\\E", "shortCiteRegEx": "Rugh.", "year": 1981}, {"title": "The Volterra and Wiener Theories of Nonlinear Systems", "author": ["Martin Schetzen"], "venue": null, "citeRegEx": "Schetzen.,? \\Q1980\\E", "shortCiteRegEx": "Schetzen.", "year": 1980}, {"title": "Laguere filters - an introduction", "author": ["Tomas Oliveirae Silva"], "venue": "Revista do DETUA,", "citeRegEx": "Silva.,? \\Q1995\\E", "shortCiteRegEx": "Silva.", "year": 1995}, {"title": "Optimal choice of time-scaling factor for linear system approximations using laguerre models", "author": ["L. Wang", "WR Cluett"], "venue": "IEEE Transactions on Automatic Control,", "citeRegEx": "Wang and Cluett.,? \\Q1994\\E", "shortCiteRegEx": "Wang and Cluett.", "year": 1994}, {"title": "Control-relevant identification of volterra series models", "author": ["Q. Zheng", "E. Zafiriou"], "venue": "In American Control Conference,", "citeRegEx": "Zheng and Zafiriou.,? \\Q1994\\E", "shortCiteRegEx": "Zheng and Zafiriou.", "year": 1994}, {"title": "Volterra- laguerre models for nonlinear process identification with application to a fluid catalytic cracking unit", "author": ["Q. Zheng", "E. Zafiriou"], "venue": "Ind. Eng. Chem. Res,", "citeRegEx": "Zheng and Zafiriou.,? \\Q2004\\E", "shortCiteRegEx": "Zheng and Zafiriou.", "year": 2004}, {"title": "Nonlinear system identification for control using volterralaguerre expansion", "author": ["Qingsheng Zheng", "E. Zafiriou"], "venue": "In Proc. American Control Conference,", "citeRegEx": "Zheng and Zafiriou.,? \\Q1995\\E", "shortCiteRegEx": "Zheng and Zafiriou.", "year": 1995}], "referenceMentions": [{"referenceID": 1, "context": "Some of these limitations include not being able to exhibit output multiplicity (Boyd and Chua, 1985).", "startOffset": 80, "endOffset": 101}, {"referenceID": 3, "context": "1 Volterra Model Limitations This class of finite Volterra models is defined as the class of V(N,M) models by Doyle et al. (2001). Where N is the nonlinear degree and M is the dynamic order.", "startOffset": 110, "endOffset": 130}, {"referenceID": 1, "context": "Some of these limitations include not being able to exhibit output multiplicity (Boyd and Chua, 1985). This can be described intuitively by saying that if a system can exhibit the same output by different local inputs (i.e. different steady state responses to the same steady state input), it must have had paths that differed initially. This leads to a similar conclusion which says conditionally stable impulse responses cannot be described by a fading memory Volterra model. Volterra models also cannot produce persistent oscillations or chaos in response to asymptotically constant input sequences. The limitations of the Volterra series can be seen as beneficial or detrimental depending on the desired output of the model. If a model for a system with persistent oscillations is desired then VL models should not be used. However, it is useful to have a model that implicitly rejects these types of characteristics if the physical system does not exhibit them. More information on this subject can be found in Doyle et al. (2001); Pearson (1999)", "startOffset": 81, "endOffset": 1036}, {"referenceID": 1, "context": "Some of these limitations include not being able to exhibit output multiplicity (Boyd and Chua, 1985). This can be described intuitively by saying that if a system can exhibit the same output by different local inputs (i.e. different steady state responses to the same steady state input), it must have had paths that differed initially. This leads to a similar conclusion which says conditionally stable impulse responses cannot be described by a fading memory Volterra model. Volterra models also cannot produce persistent oscillations or chaos in response to asymptotically constant input sequences. The limitations of the Volterra series can be seen as beneficial or detrimental depending on the desired output of the model. If a model for a system with persistent oscillations is desired then VL models should not be used. However, it is useful to have a model that implicitly rejects these types of characteristics if the physical system does not exhibit them. More information on this subject can be found in Doyle et al. (2001); Pearson (1999)", "startOffset": 81, "endOffset": 1052}, {"referenceID": 4, "context": "The total number of parameters can be represented as C(N,M) (Doyle et al., 2001).", "startOffset": 60, "endOffset": 80}, {"referenceID": 15, "context": "The application of orthogonal functions to identification and control is not new, see (Schetzen, 1980), (Dumont et al.", "startOffset": 86, "endOffset": 102}, {"referenceID": 5, "context": "The application of orthogonal functions to identification and control is not new, see (Schetzen, 1980), (Dumont et al., 1991), (Zheng and Zafiriou, 1994), (M\u00e4kila, 1990), (Clement, 1982), (Mahmoodi et al.", "startOffset": 104, "endOffset": 125}, {"referenceID": 18, "context": ", 1991), (Zheng and Zafiriou, 1994), (M\u00e4kila, 1990), (Clement, 1982), (Mahmoodi et al.", "startOffset": 9, "endOffset": 35}, {"referenceID": 11, "context": ", 1991), (Zheng and Zafiriou, 1994), (M\u00e4kila, 1990), (Clement, 1982), (Mahmoodi et al.", "startOffset": 37, "endOffset": 51}, {"referenceID": 2, "context": ", 1991), (Zheng and Zafiriou, 1994), (M\u00e4kila, 1990), (Clement, 1982), (Mahmoodi et al.", "startOffset": 53, "endOffset": 68}, {"referenceID": 10, "context": ", 1991), (Zheng and Zafiriou, 1994), (M\u00e4kila, 1990), (Clement, 1982), (Mahmoodi et al., 2007), (Zheng and Zafiriou, 1995),and (Lee, 1960).", "startOffset": 70, "endOffset": 93}, {"referenceID": 20, "context": ", 2007), (Zheng and Zafiriou, 1995),and (Lee, 1960).", "startOffset": 9, "endOffset": 35}, {"referenceID": 9, "context": ", 2007), (Zheng and Zafiriou, 1995),and (Lee, 1960).", "startOffset": 40, "endOffset": 51}, {"referenceID": 14, "context": "For more detail on the frequency domain representation of the Laguerre Functions see Schetzen (1980, Sec. 16.2). For more information on the Laguerre filter see Silva (1995) and King and Paraskevopoulos (1977).", "startOffset": 85, "endOffset": 174}, {"referenceID": 7, "context": "For more information on the Laguerre filter see Silva (1995) and King and Paraskevopoulos (1977).", "startOffset": 65, "endOffset": 97}, {"referenceID": 20, "context": "It has been suggested that the factor should be placed near the dominant pole of the system (Zheng and Zafiriou, 1995), however if the system has delay the factor a will be greatly affected (Wang and Cluett, 1994).", "startOffset": 92, "endOffset": 118}, {"referenceID": 17, "context": "It has been suggested that the factor should be placed near the dominant pole of the system (Zheng and Zafiriou, 1995), however if the system has delay the factor a will be greatly affected (Wang and Cluett, 1994).", "startOffset": 190, "endOffset": 213}, {"referenceID": 3, "context": "Methods exist for calculating the optimal time scale value for linear systems, or require previous knowledge of the system and thus are not generally applicable to nonlinear system identification (Clowes, 1965), (Fu and Dumont, 1993), and (Parks, 1971).", "startOffset": 196, "endOffset": 210}, {"referenceID": 6, "context": "Methods exist for calculating the optimal time scale value for linear systems, or require previous knowledge of the system and thus are not generally applicable to nonlinear system identification (Clowes, 1965), (Fu and Dumont, 1993), and (Parks, 1971).", "startOffset": 212, "endOffset": 233}, {"referenceID": 12, "context": "Methods exist for calculating the optimal time scale value for linear systems, or require previous knowledge of the system and thus are not generally applicable to nonlinear system identification (Clowes, 1965), (Fu and Dumont, 1993), and (Parks, 1971).", "startOffset": 239, "endOffset": 252}, {"referenceID": 18, "context": ",U I kB] (21) This notation was originally derived in Zheng and Zafiriou (2004).", "startOffset": 54, "endOffset": 80}, {"referenceID": 0, "context": "Data for this example was borrowed from Bachlin et al. (2010). The dataset is a multivariate time-series for freezing of gait in patients with Parkinson\u2019s disease.", "startOffset": 40, "endOffset": 62}, {"referenceID": 1, "context": "Any member of the class of fading memory systems can be approximated to arbitrary accuracy by a finite Volterra model (Boyd and Chua, 1985) .", "startOffset": 118, "endOffset": 139}, {"referenceID": 1, "context": "Any member of the class of fading memory systems can be approximated to arbitrary accuracy by a finite Volterra model (Boyd and Chua, 1985) . A better discussion of fading memory systems and the work done on them can be found in Doyle et al. (2001, p. 41),and Boyd and Chua (1985, Sec. III). It turns out that the concept of fading memory has been around at least as long as the Volterra series itself. Regularly the Horizon should be equal to the number of steps in the time to steady state. In EHPC there has been work suggesting criteria for choosing the memory length or \u201cHorizon\u201d of finite memory systems, see Kong and De Keyser (1994) for more details and references.", "startOffset": 119, "endOffset": 641}], "year": 2014, "abstractText": "The Volterra series can be used to model a large subset of nonlinear, dynamic systems. A major drawback is the number of coefficients required model such systems. In order to reduce the number of required coefficients, Laguerre polynomials are used to estimate the Volterra kernels. Existing literature proposes algorithms for a fixed number of Volterra kernels, and Laguerre series. This paper presents a novel algorithm for generalized calculation of the finite order Volterra-Laguerre (VL) series for a MIMO system. An example addresses the utility of the algorithm in practical application.", "creator": "LaTeX with hyperref package"}}}