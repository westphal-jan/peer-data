{"id": "1411.3346", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "12-Nov-2014", "title": "Membership Function Assignment for Elements of Single OWL Ontology", "abstract": "This paper develops the idea of membership function assignment for OWL (Web Ontology Language) ontology elements in order to subsequently generate fuzzy rules from this ontology. The task of membership function assignment for OWL ontology elements had already been partially described, but this concerned the case, when several OWL ontologies of the same domain were available, and they were merged into a single ontology. The purpose of this paper is to present the way of membership function assignment for OWL ontology elements in the case, when there is the only one available ontology. Fuzzy rules, generated from the OWL ontology, are necessary for supplement of the SWES (Semantic Web Expert System) knowledge base. SWES is an expert system, which will be able to extract knowledge from OWL ontologies, found in the Web, and will serve as a universal expert for the user. The main problem with SWES is that it cannot perform such a task in all cases, so it is necessary to understand SWES in the same manner that a user with OWL ontology is capable of doing. This task was also designed to improve the ability of SWES to interpret the SWES-related web framework in the same way that the OWL ontology is able to read it in order to interpret its own web framework. Thus, SWES can interpret the SWES-related web framework in the same way that the OWL ontology is able to interpret its own web framework. The goal of the SWES-related web framework is to help the user understand SWES in the same way that the OWL ontology is able to interpret its own web framework in the same way that the OWL ontology is able to interpret its own web framework. SWES can interpret the SWES-related web framework in the same way that the OWL ontology is able to interpret its own web framework in the same way that the OWL ontology is able to interpret its own web framework. We also present a very different approach in terms of understanding SWES in the same way that the OWL ontology is able to interpret its own web framework in the same way that the OWL ontology is able to interpret its own web framework in the same way that the OWL ontology is able to interpret its own web framework.\n\n\nThe following table summarizes the SWES-related web framework definition.\nIn our paper, the main problem with SWES is that it does not know whether its SWES-related web", "histories": [["v1", "Wed, 12 Nov 2014 21:13:08 GMT  (233kb)", "http://arxiv.org/abs/1411.3346v1", null]], "reviews": [], "SUBJECTS": "cs.AI", "authors": ["olegs verhodubs"], "accepted": false, "id": "1411.3346"}, "pdf": {"name": "1411.3346.pdf", "metadata": {"source": "CRF", "title": "Membership Function Assignment for Elements of Single OWL Ontology", "authors": ["Olegs Verhodubs"], "emails": ["oleg.verhodub@inbox.lv"], "sections": [{"heading": null, "text": "ontology elements in order to subsequently generate fuzzy rules from this ontology. The task of membership function assignment for OWL ontology elements had already been partially described, but this concerned the case , when several OWL ontologies of the same domain were available, and they were merged into a single ontology. The purpose of this paper is to present the way of membership function assignment for OWL ontology elements in the case, when there is the only one available ontology. Fuzzy rules, generated from the OWL ontology, are necessary for supplement of the SWES (Semantic Web Expert System) knowledge base. SWES is an expert system, which will be able to extract knowledge from OWL ontologies , found in the Web, and will serve as a universal expert for the user.\nKeywords: Fuzzy Rules, Fuzzy Reasoning, Ontologies, Semantic Web, Expert System, Artificial Intelligence"}, {"heading": "1. INTRODUCTION", "text": "The emergence of the Web marked a new stage in the development of mankind. From this time the information became electronically accessible wherever the Web is available. Currently billions of static documents in the Web are used by hundreds of millions of users, and the number of new documents as the number of users is constantly growing [1]. Along with the positive consequences of the rapid growth of the Web, this growth has its own drawbacks. The\nexponential growth of the Web makes it increasingly difficult to find, to access, to present and to maintain information of use to a wide variety of users [1].\nThe Semantic Web and the Semantic Web technologies offer a new approach to managing information [2]. This approach is designed to neutralize the negative manifestations associated\nwith the rapid growth of the Web. It is assumed that the Semantic Web and the Semantic Web technologies will make it possible to organize and find information based on meaning, not just text, to improve the way information is presented and to integrate information from heterogeneous sources [2]. Ontologies are one of the key innovations of the Semantic Web, and largely the uses of ontologies promise to nullify the negative manifestations of the exponential growth of the Web. Ontologies are the basic resource for the functioning of the Semantic Web\nExpert System (SWES), an expert system, which is being implemented to provide expert assistance to the user according to the entered request. The implementation of the SWES is the final goal of the research [3].\nThe main purpose of this paper is to develop the way of membership function assignment for\nOWL ontology elements. The values of membership function, assigned for OWL ontology elements, are necessary for fuzzy rule generation [4]. Generated fuzzy rules are stored in the SWES knowledge base and are used by the semantic reasoner of the SWES. And although the task of membership function assignment for OWL ontology elements has already been discussed previously, this was done for the case when several OWL ontologies of one domain were available, and they were merging into a single OWL ontology [4]. In this case the process of ontology merging is combined with the process of membership function assignment for OWL\nontology elements. But the situation may occur, when the only one OWL ontology of a certain\ndomain is available. This might occur if the only one ontology was found after the user typed his request in the SWES, and after the web search engine of the SWES processed this request. In such a case there is a need of a new way of membership function assignment for OWL ontology elements, and this paper is dedicated to this task.\nThis paper is structured as follows. The next section explains the principles of membership function assignment for OWL ontology elements in the case, when the only one OWL ontology of a certain domain is available. The third section of this paper expounds membership function assignment for OWL ontology elements in details. Conclusions complete this paper."}, {"heading": "2. PRINCIPLES OF MEMBERSHIP FUNCTION ASSIGNMENT FOR ONTOLOGY ELEMENTS", "text": "There are a lot of OWL ontologies in the Web, and this fact can be easily verified using one of the known semantic web search engines as SWOOGLE [5] or WATSON [6]. Naturally this fact is very positive thing for the SWES, because OWL ontologies are its basic source for supplementation of its knowledge base with rules, generated from these ontologies. Basically, different ontologies belong to different domains, but it is important to the SWES that several ontologies would belong to similar domain. In such a case, merging OWL ontologies of more or\nless belonging to the same domain and also considering repeating and missing ontology elements (hereinafter ontology elements are classes, different relations, properties and other constructs of ontology), it is possible to obtain such ontology, which belongs to the domain more, than each ontology individually. Slightly different composition of OWL ontologies, which nevertheless belong to the same domain, can serve as a basis for membership function assignment. This means that the ontology element, which occurs in ontologies more frequently, has the higher\nvalue of membership function and vice versa.\nIt is obvious that other basis for assignment of membership functions is necessary, when there is the only one available OWL ontology of a certain domain. The basic reason why this situation may arise is that the area of the Semantic Web is rather young, and there are no several\nontologies for some domains. One more possible reason for this situation is the presence of one and exhaustive ontology for some domains. This may occur currently and in the future for very specific domains. Thus, it follows that the task of membership function assignment for ontology elements in the presence of the only one ontology should be solved in order to provide the necessary efficiency of the being developed Semantic Web Expert System.\nIn general OWL ontologies are not needed for the Semantic Web Expert System in themselves, whether it is the one ontology or several ontologies. Ontologies are necessary for generation of rules from them. Consequently, obtained rules or rather the inferences, derived from rule premises, are needed ultimately. So, assignment of membership functions for ontology elements in the case, when there is the only one available ontology, should be produced, based on the premises of generated rules. This means that if it is possible to generate several rules from\nOWL ontology, where the premises are similar, but the conclusions are different, then it is necessary to assign membership functions to these premises, which are equal to one, divided by the number of repeating premises. This can be illustrated by means of list of rules with similar premises and different inferences, which can be generated from ontology:\nIF X1 THEN Y1, (1)\nIF X1 THEN Y2, (2)\n\u2026\u2026\u2026\u2026\u2026\u2026\u2026..\nIF X1 THEN Yn, (n)\nwhere n is index number of generated rule.\nConsidering the identical premises in different rules, it is possible to assign the values of membership function (\u00b5) to these premises, which can be calculated according to the formula:\n\u00b5 (X1) = 1 / n,\nwhere n is the number of rules with repeating premises.\nThus, the list of rules with the values of membership functions, which can be generated from ontology, looks like as follows:\nIF X1 (\u00b5 = 1/n) THEN Y1, (1)\nIF X1 (\u00b5 = 1/n) THEN Y2, (2)\n\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\nIF X1 (\u00b5 = 1/n) THEN Yn, (n)\nIt should be emphasized that it does not need to generate rules in the process of membership function assignment for ontology elements in the case, when the only one ontology is available. The process of membership function assignment for ontology elements implies to assign\nappropriate values to the ontology elements, which are equal to rule premises, only. The process of rule generation, when there is the only one ontology, follows after the process of membership function assignment for ontology elements that is when ontology has all values of membership functions."}, {"heading": "3. IMPLEMENTATION OF MEMBERSHIP FUNCTION ASSIGNMENT FOR", "text": "ONTOLOGY ELEMENTS\nOntologies generally and OWL ontologies specifically are self-sufficient source to generate rules [7], [8]. Being generated rules differ in OWL ontology source code fragments, from which these\nrules are being obtained. Expressive means of OWL ontologies are redundant in the sense that the same information can be expressed in different ways. For example, it is possible to express a symmetric property by means of two regular properties in OWL. These redundant expressive means of OWL are good for humans, but in the same time they complicate processing of these ontologies programmatically. It is particularly sensitive to the task of membership function assignment for which properties, classes and relationships between these classes are eventually\nrequired. In this context it makes sense to normalize the OWL ontology that is to bring it to a certain standard, having only properties, classes and relationships between these classes. The process of membership function assignment to OWL ontology elements starts only after the ontology normalization process is finished.\nIn general all rules, which can be generated from OWL ontologies, are divided into four\ncategories [8]:\nIdentifying rules,\nSpecifying rules,\nUnobvious rules or rules, generated from hidden OWL ontology elements,\nMeaning enriching rules.\nIdentifying rule is the rule, which determines something, based on some characteristics. Specifying rules are necessary to precise something, if this something is known. That is, specifying rules allow knowing the details of a particular object. Unobvious rules are rules, which are generated from hidden ontology elements. Hidden ontology elements are elements, which are not presented in ontology, but may be added based on the logic of ontology. Meaning enriching rules are rules that enrich existing knowledge with new details [8]. OWL ontology\nsource code fragments, which can be transformed to unobvious and meaning enriching rules, can serve as points of application of normalization subroutines. Here normalization subroutines are understood as software components to implement the normalization process of ontology.\nThe ontology normalization process is divided into two separate stages. The first stage is aimed at identifying the cases, where it is possible to add unobvious elements to ontology. The second stage involves the replacement of redundant OWL elements with standard elements, where standard OWL elements are properties, classes and relations between these classes. The\nfirst stage includes the following cases of adding unobvious elements to OWL ontology (Tab. I):\nClass: City\nClass: Country\nsubClassOf\nClass: House\nsubClassOf\nClass: City\nClass: Country\nsubClassOf\nClass: House\nsubClassOf 3\n4\nThe first case of the table I implies adding properties from one class to another class, if these classes are equivalent. The second case implies adding relations from one class to another one, if these classes are equivalent, too. The third case is adding the unobvious \u201csubClassOf\u201d relation from the class \u201cHouse\u201d to the class \u201cCountry\u201d, if there are three classes \u201cHouse\u201d, \u201cCity\u201d, \u201cCountry\u201d and there are the \u201csubClassOf\u201d relations between the classes \u201cHouse\u201d and \u201cCity\u201d and also between the classes \u201cCity\u201d and \u201cCountry\u201d. The next case of the table I implies adding the relation from one class to another class (from \u201cMan\u201d to \u201cCity\u201d), if there is the same relation\nbetween \u201cMan\u201d and \u201cHouse\u201d classes and there is \u201csubClassOf\u201d relation between \u201cHouse\u201d and \u201cCity\u201d classes.\nThe second stage of the ontology normalization process includes the following\ntransformations in patterns of OWL ontology source code (Tab. II):\nsubClassOf\nClass: House\nClass: City\nsubClassOf\nClass: Man\nany_relation\nClass: House\nClass: City\nsubClassOf\nClass: Man\nany_relation\nany_relation\n2 Inverse property\n<ow l:ObjectPropertyrdf:ID=\"owns\">\n<ow l:inverseOfrdf:resource=\"#is_owned_by\"/> <rdfs:domainrdf:resource=\"#Human\"/>\n<rdfs:rangerdf:resource=\"#Plane\"/> </ow l:ObjectProperty>\nObject property\n<ow l:ObjectPropertyrdf:ID=\"owns\">\n<rdfs:domainrdf:resource=\"#Human\"/>\n<rdfs:rangerdf:resource=\"#Plane\"/> </ow l:ObjectProperty> <ow l:ObjectPropertyrdf:ID=\" is_ow ned_by \">\n<rdfs:domainrdf:resource=\"#Plane\"/>\n<rdfs:rangerdf:resource=\"#Human\"/> </ow l:ObjectProperty>\n3 Intersection\n<ow l:Classrdf:ID=\"Man\">\n<ow l:intersectionOfrdf:parseType=\"Collection\">\n<ow l:Classrdf:about=\"#Male\"/> <ow l:Classrdf:about=\"#Human\"/>\n</ow l:intersectionOf> </ow l:Class/>\nSubclass\n<ow l:Classrdf:ID=\"Man\">\n<rdfs:subClassOfrdf:resource=\"#Male\"/>\n<rdfs:subClassOfrdf:resource=\"#Human\"/> </ow l:Class>\n4 Transitive property\n<ow l:Classrdf:ID=\"Latgale\"> <subAreaOfrdf:resource=\"#Latvia\"> </ow l:Class> <ow l:Classrdf:ID=\"EU\"/> <ow l:Classrdf:ID=\"Latvia\"> <subAreaOfrdf:resource=\"#EU\"/> </ow l:Class> <ow l:TransitivePropertyrdf:ID=\"subAreaOf\"> <rdf:typerdf:resource=http://www.w3.org/2002/07/owl#ObjectProperty/> </owl:TransitiveProperty>\nObject property\n<ow l:ObjectPropertyrdf:ID=\"subAreaOf\">\n<rdfs:domainrdf:resource=\"#Latgale\"/>\n<rdfs:rangerdf:resource=\"#Latvia\"/> </ow l:ObjectProperty> <ow l:ObjectPropertyrdf:ID=\"subAreaOf\">\n<rdfs:domainrdf:resource=\"#Latvia\"/>\n<rdfs:rangerdf:resource=\"#EU\"/> </ow l:ObjectProperty> <ow l:ObjectPropertyrdf:ID=\"subAreaOf\">\n<rdfs:domainrdf:resource=\"#Latgale\"/>\n<rdfs:rangerdf:resource=\"#EU\"/> </ow l:ObjectProperty>\nTable II presents the replacement of OWL elements with other OWL elements within the second stage of the normalization process. The first case in the table II shows the replacement of symmetric property with object property. The second one implies the replacement of inverse\nproperty with object property, too. The next case in the table II reflects the replacement of intersection element with subclass element. And the last case is aimed at the replacement of transitive property with object property.\nIn summary, the simplified algorithm of membership function assignment to OWL ontology\nelements is as follows:\n1. adding unobvious elements to ontology; 2. replacing of redundant ontology elements with standard elements, where standard\nontology elements are properties, classes and relationships between these classes;\n3. assigning membership functions to ontology elements.\nThe proper process of membership function assignment to ontology elements consists of\nseveral sub processes. They are:\nmembership function assignment to properties (DatatypeProperty elements);\nmembership function assignment to part_of relations (subClassOf elements);\nmembership function assignment to the rest relations;\nmembership function assignment to the elements of equivalent classes.\nThe first sub process is membership function assignment to datatype properties. The formula\nof calculating the membership function for datatype properties is as follows (Tab. III):\nThe second sub process is membership function assignment to the \u201cpart_of\u201d (subClassOf elements) relations. The formula of calculating the membership function for the \u201cpart_of\u201d relations is as follows (Tab. IV):\nsingle membership function. Here complex is a \u201cpart_of\u201d relation with the resulting class.\nIn Fig.1, the semantic object \u201cParis part_of France\u201d is presented. Here \u201cpart_of France\u201d is a\ncomplex, \u201cParis\u201d is a determining class and \u201cFrance\u201d is the resulting class.\nThe next sub process is membership function assignment to the rest relations that is relations, which are not \u201cpart_of\u201d and equivalent. The formula of calculating the membership function for the rest relations is as follows (Tab. V):\nClass: Paris\nClass: France\npart of\nFig.1. Example of semantic object.\nclasses. In this case formula for calculating the membership function is not necessary. All available values of membership functions are being copied to the elements, which are associated with equivalent class: properties, \u201cpart_of\u201d relations and other relations.\nAfter membership functions have been assigned to OWL ontology elements, it was possible to generate fuzzy rules. Fuzzy rules are necessary for supplement of the SWES knowledge base. These rules will be utilized by semantic reasoner of the SWES to infer, based on user\u2019s data [9]. Technically the task of membership function storing for OWL ontology elements is not trivial,\nand it was described in previous paper in details [9]."}, {"heading": "4. CONCLUSION", "text": "The paper has described principles of membership function assignment for OWL ontology elements and implementation of membership function assignment for OWL ontology elements in the case, when the only one OWL ontology was available. Membership function assignment for OWL ontology elements in the case, when several OWL ontologies of one domain were available, was described in one of previous paper [4]. Implementation of membership function assignment for OWL ontology elements consisted of OWL ontology normalization process and membership function assignment process itself. The process of OWL ontology normalization has\nbeen described as a set of routines, which was focused on the OWL ontology transformation to a standard form. Here OWL ontology standard form is such OWL ontology that has certain OWL elements, only. The process of membership function assignment itself consists of four sub processes, which are necessary to assign membership functions to certain elements of OWL ontology.\nMembership functions of OWL ontology elements are necessary for fuzzy rule generation,\nwhich are being stored in the SWES knowledge base and are being used by the SWES semantic reasoner to infer, utilizing user\u2019s data [9]. It is expected that users will input data, but the SWES will look for appropriate OWL ontology or ontologies in the Web and will infer, based on the data and found ontologies. Thus, the SWES will serve as such an expert system that will use knowledge from the Web.\nThe way of membership function assignment for the elements of the only one available OWL\nontology, described in this paper, and the way of membership function assignment for the elements of several, one domain OWL ontologies, described in one of previous paper [4], are not the only ways to assign membership functions to the OWL ontology elements. There are other ways for membership function assignment for OWL ontology elements, which will be described in future papers.\nFuture papers will also be devoted to the further development of the Semantic Web Expert\nSystem."}], "references": [{"title": "Semantic Web Technologies Trends and Research in On-tology-based Systems", "author": ["J. Davis", "R. Studer", "P. Warren"], "venue": "John Wiley & Sons Ltd, Chichester, 2006", "citeRegEx": "2", "shortCiteRegEx": null, "year": 2006}, {"title": "Towards the Semantic Web Expert System", "author": ["O. Verhodubs", "J. Grundspe\u0146\u0137is"], "venue": "RTU Press, Riga, 2011", "citeRegEx": "3", "shortCiteRegEx": null, "year": 2011}, {"title": "Ontology merging in the context of a Semantic Web Exp ert System", "author": ["O. Verhodubs", "J. Grundspenkis"], "venue": "Springer, Saint-Petersburg, 2013", "citeRegEx": "4", "shortCiteRegEx": null, "year": 2013}, {"title": "Evolution of Ontology Potential for Generation of Rules", "author": ["O. Verhodubs", "J. Grundspe\u0146\u0137is"], "venue": "Proceedings of the 2nd International Conference on Web Intelligence, Mining and Semantics, Craiova, 2012", "citeRegEx": "7", "shortCiteRegEx": null, "year": 2012}, {"title": "Ontology as a source for rule generation", "author": ["O. Verhodubs"], "venue": null, "citeRegEx": "8", "shortCiteRegEx": "8", "year": 2014}, {"title": "Adaptation of the Jena Framework for Fuzzy Reasoning in the Semantic Web Expert System", "author": ["O. Verhodubs"], "venue": "in proceedings,", "citeRegEx": "9", "shortCiteRegEx": "9", "year": 2014}], "referenceMentions": [{"referenceID": 0, "context": "The Semantic Web and the Semantic Web technologies offer a new approach to managing information [2].", "startOffset": 96, "endOffset": 99}, {"referenceID": 0, "context": "It is assumed that the Semantic Web and the Semantic Web technologies will make it possible to organize and find information based on meaning, not just text, to improve the way information is presented and to integrate information from heterogeneous sources [2].", "startOffset": 258, "endOffset": 261}, {"referenceID": 1, "context": "The implementation of the SWES is the final goal of the research [3].", "startOffset": 65, "endOffset": 68}, {"referenceID": 2, "context": "The values of membership function, assigned for OWL ontology elements, are necessary for fuzzy rule generation [4].", "startOffset": 111, "endOffset": 114}, {"referenceID": 2, "context": "And although the task of membership function assignment for OWL ontology elements has already been discussed previously, this was done for the case when several OWL ontologies of one domain were available, and they were merging into a single OWL ontology [4].", "startOffset": 255, "endOffset": 258}, {"referenceID": 3, "context": "Ontologies generally and OWL ontologies specifically are self-sufficient source to generate rules [7], [8].", "startOffset": 98, "endOffset": 101}, {"referenceID": 4, "context": "Ontologies generally and OWL ontologies specifically are self-sufficient source to generate rules [7], [8].", "startOffset": 103, "endOffset": 106}, {"referenceID": 4, "context": "In general all rules, which can be generated from OWL ontologies, are divided into four categories [8]:", "startOffset": 99, "endOffset": 102}, {"referenceID": 4, "context": "Meaning enriching rules are rules that enrich existing knowledge with new details [8].", "startOffset": 82, "endOffset": 85}, {"referenceID": 5, "context": "These rules will be utilized by semantic reasoner of the SWES to infer, based on user\u2019s data [9].", "startOffset": 93, "endOffset": 96}, {"referenceID": 5, "context": "Technically the task of membership function storing for OWL ontology elements is not trivial, and it was described in previous paper in details [9].", "startOffset": 144, "endOffset": 147}, {"referenceID": 2, "context": "Membership function assignment for OWL ontology elements in the case, when several OWL ontologies of one domain were available, was described in one of previous paper [4].", "startOffset": 167, "endOffset": 170}, {"referenceID": 5, "context": "Membership functions of OWL ontology elements are necessary for fuzzy rule generation, which are being stored in the SWES knowledge base and are being used by the SWES semantic reasoner to infer, utilizing user\u2019s data [9].", "startOffset": 218, "endOffset": 221}, {"referenceID": 2, "context": "The way of membership function assignment for the elements of the only one available OWL ontology, described in this paper, and the way of membership function assignment for the elements of several, one domain OWL ontologies, described in one of previous paper [4], are not the only ways to assign membership functions to the OWL ontology elements.", "startOffset": 261, "endOffset": 264}], "year": 2014, "abstractText": "This paper develops the idea of membership function assignment for OWL (Web Ontology Language) ontology elements in order to subsequently generate fuzzy rules from this ontology. The task of membership function assignment for OWL ontology elements had already been partially described, but this concerned the case , when several OWL ontologies of the same domain were available, and they were merged into a single ontology. The purpose of this paper is to present the way of membership function assignment for OWL ontology elements in the case, when there is the only one available ontology. Fuzzy rules, generated from the OWL ontology, are necessary for supplement of the SWES (Semantic Web Expert System) knowledge base. SWES is an expert system, which will be able to extract knowledge from OWL ontologies , found in the Web, and will serve as a universal expert for the user.", "creator": "Microsoft\u00ae Word 2010"}}}