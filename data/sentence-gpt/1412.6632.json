{"id": "1412.6632", "review": {"conference": "iclr", "VERSION": "v1", "DATE_OF_SUBMISSION": "20-Dec-2014", "title": "Deep Captioning with Multimodal Recurrent Neural Networks (m-RNN)", "abstract": "In this paper, we present a multimodal Recurrent Neural Network (m-RNN) model for generating novel image captions. It directly models the probability distribution of generating a word given previous words and an image. Image captions are generated by sampling from this distribution. The model consists of two sub-networks: a deep recurrent neural network for sentences and a deep convolutional network for images. These two sub-networks interact with each other in a multimodal layer to form the whole m-RNN model. The effectiveness of our model is validated on four benchmark datasets (IAPR TC-12, Flickr 8K, Flickr 30K and MS COCO). Our model outperforms the state-of-the-art methods. In addition, the m-RNN model can be applied to retrieval tasks for retrieving images or sentences, and achieves significant performance improvement over the state-of-the-art methods which directly optimize the ranking objective function for retrieval.\n\n\n\n\n\n\nThe algorithm is based on data from an analysis of the recurrent neural network using a deep Convolutional Neural Network (CNN), a deep convolutional network for sentences and a deep convolutional network for sentences and a deep convolutional network for sentences. A convolutional network that achieves the goal of solving the classification task with input data is implemented using the Convolutional Neural Network. This task, first demonstrated by the model of the Convolutional Neural Network, generates a sentence containing a sequence of words with the word 'hanging' that is not represented by either the word 'hanging'.\n\nIn addition, the convolutional network achieves the goal of generating images for retrieval tasks for retrieval tasks for retrieval tasks for retrieval tasks for retrieval tasks for retrieval tasks for retrieval tasks for retrieval tasks for retrieval tasks for retrieval tasks for retrieval tasks for retrieval tasks for retrieval tasks for retrieval tasks for retrieval tasks for retrieval tasks for retrieval tasks for retrieval tasks for retrieval tasks for retrieval tasks for retrieval tasks for retrieval tasks for retrieval tasks for retrieval tasks for retrieval tasks for retrieval tasks for retrieval tasks for retrieval tasks for retrieval tasks for retrieval tasks for retrieval tasks for retrieval tasks for retrieval tasks for retrieval tasks for retrieval tasks for retrieval tasks for retrieval tasks for retrieval tasks for retrieval tasks for retrieval tasks for retrieval tasks for retrieval tasks for retrieval tasks for retrieval tasks for retrieval tasks for retrieval tasks for retrieval tasks for retrieval tasks for retrieval tasks for retrieval tasks for retrieval tasks for retrieval tasks for retrieval tasks for retrieval tasks for retrieval tasks for", "histories": [["v1", "Sat, 20 Dec 2014 08:10:04 GMT  (404kb,D)", "https://arxiv.org/abs/1412.6632v1", "arXiv admin note: substantial text overlap witharXiv:1410.1090"], ["v2", "Fri, 26 Dec 2014 08:24:11 GMT  (485kb,D)", "http://arxiv.org/abs/1412.6632v2", "Add performance comparisons with different variants of m-RNN model to show the importance of different components. arXiv admin note: substantial text overlap witharXiv:1410.1090"], ["v3", "Tue, 10 Mar 2015 04:17:48 GMT  (486kb,D)", "http://arxiv.org/abs/1412.6632v3", "Revision according to the comments and suggestions from ICLR 2015 reviewers (e.g. Add some details for section 5, 6; Fix typos). Add performance comparisons with different variants of m-RNN model to show the importance of different components. (Comments from last version)"], ["v4", "Fri, 10 Apr 2015 21:03:35 GMT  (486kb,D)", "http://arxiv.org/abs/1412.6632v4", "Add results on MS COCO test set; Compare results using beam search and using greedy word selection on the test set; Camera ready version for ICLR 2015. arXiv admin note: substantial text overlap witharXiv:1410.1090"], ["v5", "Thu, 11 Jun 2015 15:26:58 GMT  (2213kb,D)", "http://arxiv.org/abs/1412.6632v5", "Add a simple strategy to boost the performance of image captioning task significantly. More details are shown in Section 8 of the paper. The code and related data are available atthis https URL;. arXiv admin note: substantial text overlap witharXiv:1410.1090"]], "COMMENTS": "arXiv admin note: substantial text overlap witharXiv:1410.1090", "reviews": [], "SUBJECTS": "cs.CV cs.CL cs.LG", "authors": ["junhua mao", "wei xu", "yi yang", "jiang wang", "zhiheng huang", "alan yuille"], "accepted": true, "id": "1412.6632"}, "pdf": {"name": "1412.6632.pdf", "metadata": {"source": "CRF", "title": "DEEP CAPTIONING WITH MULTIMODAL RECURRENT NEURAL NETWORKS (M-RNN)", "authors": ["Junhua Mao", "Zhiheng Huang"], "emails": ["mjhustc@ucla.edu", "wei.xu@baidu.com", "yangyi05@baidu.com", "wangjiang03@baidu.com", "huangzhiheng@baidu.com", "yuille@stat.ucla.edu"], "sections": [{"heading": "1 INTRODUCTION", "text": "Obtaining sentence level descriptions for images is becoming an important task and it has many applications, such as early childhood education, image retrieval, and navigation for the blind. Thanks to the rapid development of computer vision and natural language processing technologies, recent work has made significant progress on this task (see a brief review in Section 2). Many previous methods treat it as a retrieval task. They learn a joint embedding to map the features of both sentences and images to the same semantic space. These methods generate image captions by retrieving them from a sentence database. Thus, they lack the ability of generating novel sentences or describing images that contain novel combinations of objects and scenes.\nIn this work, we propose a multimodal Recurrent Neural Networks (m-RNN) model 2 to address both the task of generating novel sentences descriptions for images, and the task of image and sentence retrieval. The whole m-RNN model contains a language model part, a vision part and a multimodal part. The language model part learns a dense feature embedding for each word in the\n1Most recently, we adopt a simple strategy to boost the performance of image captioning task significantly. More details are shown in Section 8. The code and related data (e.g. refined image features and hypotheses sentences generated by the m-RNN model) are available at https://github.com/mjhucla/mRNN-CR.\n2A previous version of this work appears in the NIPS 2014 Deep Learning Workshop with the title \u201cExplain Images with Multimodal Recurrent Neural Networks\u201d http://arxiv.org/abs/1410.1090 (Mao et al. (2014)). We observed subsequent arXiv papers which also use recurrent neural networks in this topic and cite our work. We gratefully acknowledge them.\nar X\niv :1\n41 2.\n66 32\nv5 [\ncs .C\nV ]\n1 1\ndictionary and stores the semantic temporal context in recurrent layers. The vision part contains a deep Convolutional Neural Network (CNN) which generates the image representation. The multimodal part connects the language model and the deep CNN together by a one-layer representation. Our m-RNN model is learned using a log-likelihood cost function (see details in Section 4). The errors can be backpropagated to the three parts of the m-RNN model to update the model parameters simultaneously.\nIn the experiments, we validate our model on four benchmark datasets: IAPR TC-12 (Grubinger et al. (2006)), Flickr 8K (Rashtchian et al. (2010)), Flickr 30K (Young et al. (2014)) and MS COCO (Lin et al. (2014)). We show that our method achieves state-of-the-art performance, significantly outperforming all the other methods for the three tasks: generating novel sentences, retrieving images given a sentence and retrieving sentences given an image. Our framework is general and can be further improved by incorporating more powerful deep representations for images and sentences."}, {"heading": "2 RELATED WORK", "text": "Deep model for computer vision and natural language. The methods based on the deep neural network developed rapidly in recent years in both the field of computer vision and natural language. For computer vision, Krizhevsky et al. (2012) propose a deep Convolutional Neural Networks (CNN) with 8 layers (denoted as AlexNet) and outperform previous methods by a large margin in the image classification task of ImageNet challenge (Russakovsky et al. (2014)). This network structure is widely used in computer vision, e.g. Girshick et al. (2014) design a object detection framework (RCNN) based on this work. Recently, Simonyan & Zisserman (2014) propose a CNN with over 16 layers (denoted as VggNet) and performs substantially better than the AlexNet. For natural language, the Recurrent Neural Network (RNN) shows the state-of-the-art performance in many tasks, such as speech recognition and word embedding learning (Mikolov et al. (2010; 2011; 2013)). Recently, RNNs have been successfully applied to machine translation to extract semantic information from the source sentence and generate target sentences (e.g. Kalchbrenner & Blunsom (2013), Cho et al. (2014) and Sutskever et al. (2014)).\nImage-sentence retrieval. Many previous methods treat the task of describing images as a retrieval task and formulate the problem as a ranking or embedding learning problem (Hodosh et al. (2013); Frome et al. (2013); Socher et al. (2014)). They first extract the word and sentence features (e.g. Socher et al. (2014) uses dependency tree Recursive Neural Network to extract sentence features) as well as the image features. Then they optimize a ranking cost to learn an embedding model that maps both the sentence feature and the image feature to a common semantic feature space. In this way, they can directly calculate the distance between images and sentences. Recently, Karpathy et al. (2014) show that object level image features based on object detection results can generate better results than image features extracted at the global level.\nGenerating novel sentence descriptions for images. There are generally three categories of methods for this task. The first category assumes a specific rule of the language grammar. They parse the sentence and divide it into several parts (Mitchell et al. (2012); Gupta & Mannem (2012)). Each part is associated with an object or an attribute in the image (e.g. Kulkarni et al. (2011) uses a Conditional Random Field model and Farhadi et al. (2010) uses a Markov Random Field model). This kind of method generates sentences that are syntactically correct. The second category retrieves similar captioned images, and generates new descriptions by generalizing and re-composing the retrieved captions (Kuznetsova et al. (2014)). The third category of methods, which is more related to our method, learns a probability density over the space of multimodal inputs (i.e. sentences and images), using for example, Deep Boltzmann Machines (Srivastava & Salakhutdinov (2012)), and topic models (Barnard et al. (2003); Jia et al. (2011)). They generate sentences with richer and more flexible structure than the first group. The probability of generating sentences using the model can serve as the affinity metric for retrieval. Our method falls into this category. More closely related to our tasks and method is the work of Kiros et al. (2014b), which is built on a Log-BiLinear model (Mnih & Hinton (2007)) and use AlexNet to extract visual features. It needs a fixed length of context (i.e. five words), whereas in our model, the temporal context is stored in a recurrent architecture, which allows arbitrary context length.\nShortly after Mao et al. (2014), several papers appear with record breaking results (e.g. Kiros et al. (2014a); Karpathy & Fei-Fei (2014); Vinyals et al. (2014); Donahue et al. (2014); Fang et al. (2014); Chen & Zitnick (2014)). Many of them are built on recurrent neural networks. It demonstrates the effectiveness of storing context information in a recurrent layer. Our work has two major difference from these methods. Firstly, we incorporate a two-layer word embedding system in the m-RNN network structure which learns the word representation more efficiently than the single-layer word embedding. Secondly, we do not use the recurrent layer to store the visual information. The image representation is inputted to the m-RNN model along with every word in the sentence description. It utilizes of the capacity of the recurrent layer more efficiently, and allows us to achieve state-ofthe-art performance using a relatively small dimensional recurrent layer. In the experiments, we show that these two strategies lead to better performance. Our method is still the best-performing approach for almost all the evaluation metrics."}, {"heading": "3 MODEL ARCHITECTURE", "text": ""}, {"heading": "3.1 SIMPLE RECURRENT NEURAL NETWORK", "text": "We briefly introduce the simple Recurrent Neural Network (RNN) or Elman network (Elman (1990)). Its architecture is shown in Figure 2(a). It has three types of layers in each time frame:\nthe input word layer w, the recurrent layer r and the output layer y. The activation of input, recurrent and output layers at time t is denoted as w(t), r(t), and y(t) respectively. w(t) denotes the current word vector, which can be a simple 1-of-N coding representation h(t) (i.e. the one-hot representation, which is binary and has the same dimension as the vocabulary size with only one non-zero element) Mikolov et al. (2010). y(t) can be calculated as follows:\nx(t) = [w(t) r(t\u2212 1)]; r(t) = f1(U \u00b7 x(t)); y(t) = g1(V \u00b7 r(t)); (1)\nwhere x(t) is a vector that concatenates w(t) and r(t\u22121), f1(.) and g1(.) are element-wise sigmoid and softmax function respectively, and U, V are weights which will be learned.\nThe size of the RNN is adaptive to the length of the input sequence. The recurrent layers connect the sub-networks in different time frames. Accordingly, when we do backpropagation, we need to propagate the error through recurrent connections back in time (Rumelhart et al. (1988))."}, {"heading": "3.2 OUR M-RNN MODEL", "text": "The structure of our multimodal Recurrent Neural Network (m-RNN) is shown in Figure 2(b). It has five layers in each time frame: two word embedding layers, the recurrent layer, the multimodal layer, and the softmax layer).\nThe two word embedding layers embed the one-hot input into a dense word representation. It encodes both the syntactic and semantic meaning of the words. The semantically relevant words can be found by calculating the Euclidean distance between two dense word vectors in embedding layers. Most of the sentence-image multimodal models (Karpathy et al. (2014); Frome et al. (2013); Socher et al. (2014); Kiros et al. (2014b)) use pre-computed word embedding vectors as the initialization of their model. In contrast, we randomly initialize our word embedding layers and learn them from the training data. We show that this random initialization is sufficient for our architecture to generate the state-of-the-art result. We treat the activation of the word embedding layer II (see Figure 2(b)) as the final word representation, which is one of the three direct inputs of the multimodal layer.\nAfter the two word embedding layers, we have a recurrent layer with 256 dimensions. The calculation of the recurrent layer is slightly different from the calculation for the simple RNN. Instead of concatenating the word representation at time t (denoted as w(t)) and the recurrent layer activation at time t\u2212 1 (denoted as r(t\u2212 1)), we first map r(t\u2212 1) into the same vector space as w(t) and add them together:\nr(t) = f2(Ur \u00b7 r(t\u2212 1) +w(t)); (2) where \u201c+\u201d represents element-wise addition. We set f2(.) to be the Rectified Linear Unit (ReLU), inspired by its the recent success when training very deep structure in computer vision field (Nair & Hinton (2010); Krizhevsky et al. (2012)). This differs from the simple RNN where the sigmoid function is adopted (see Section 3.1). ReLU is faster, and harder to saturate or overfit the data than non-linear functions like the sigmoid. When the backpropagation through time (BPTT) is conducted for the RNN with sigmoid function, the vanishing or exploding gradient problem appears since even the simplest RNN model can have a large temporal depth 3. Previous work (Mikolov et al. (2010; 2011)) use heuristics, such as the truncated BPTT, to avoid this problem. The truncated BPTT stops the BPTT after k time steps, where k is a hand-defined hyperparameter. Because of the good properties of ReLU, we do not need to stop the BPTT at an early stage, which leads to better and more efficient utilization of the data than the truncated BPTT.\nAfter the recurrent layer, we set up a 512 dimensional multimodal layer that connects the language model part and the vision part of the m-RNN model (see Figure 2(b)). This layer has three inputs: the word-embedding layer II, the recurrent layer and the image representation. For the image representation, here we use the activation of the 7th layer of AlexNet (Krizhevsky et al. (2012)) or 15th layer of VggNet (Simonyan & Zisserman (2014)), though our framework can use any image features. We map the activation of the three layers to the same multimodal feature space and add them together to obtain the activation of the multimodal layer:\nm(t) = g2(Vw \u00b7w(t) +Vr \u00b7 r(t) +VI \u00b7 I); (3)\n3We tried Sigmoid and Scaled Hyperbolic Tangent function as the non-linear functions for RNN in the experiments but they lead to the gradient explosion problem easily.\nwhere \u201c+\u201d denotes element-wise addition, m denotes the multimodal layer feature vector, I denotes the image feature. g2(.) is the element-wise scaled hyperbolic tangent function (LeCun et al. (2012)):\ng2(x) = 1.7159 \u00b7 tanh( 2\n3 x) (4)\nThis function forces the gradients into the most non-linear value range and leads to a faster training process than the basic hyperbolic tangent function.\nBoth the simple RNN and m-RNN models have a softmax layer that generates the probability distribution of the next word. The dimension of this layer is the vocabulary size M , which is different for different datasets."}, {"heading": "4 TRAINING THE M-RNN", "text": "To train our m-RNN model we adopt a log-likelihood cost function. It is related to the Perplexity of the sentences in the training set given their corresponding images. Perplexity is a standard measure for evaluating language model. The perplexity for one word sequence (i.e. a sentence) w1:L is calculated as follows:\nlog2 PPL(w1:L|I) = \u2212 1\nL L\u2211 n=1 log2 P (wn|w1:n\u22121, I) (5)\nwhere L is the length of the word sequence, PPL(w1:L|I) denotes the perplexity of the sentence w1:L given the image I. P (wn|w1:n\u22121, I) is the probability of generating the word wn given I and previous words w1:n\u22121. It corresponds to the activation of the SoftMax layer of our model.\nThe cost function of our model is the average log-likelihood of the words given their context words and corresponding images in the training sentences plus a regularization term. It can be calculated by the perplexity:\nC = 1 N Ns\u2211 i=1 Li \u00b7 log2 PPL(w (i) 1:Li |I(i)) + \u03bb\u03b8 \u00b7 \u2016\u03b8\u201622 (6)\nwhere Ns and N denotes the number of sentences and the number of words in the training set receptively, Li denotes the length of ith sentences, and \u03b8 represents the model parameters.\nOur training objective is to minimize this cost function, which is equivalent to maximize the probability of generating the sentences in the training set using the model. The cost function is differentiable and we use backpropagation to learn the model parameters."}, {"heading": "5 SENTENCE GENERATION, IMAGE RETRIEVAL AND SENTENCE RETRIEVAL", "text": "We use the trained m-RNN model for three tasks: 1) Sentences generation, 2) Image retrieval (retrieving most relevant images to the given sentence), 3) Sentence retrieval (retrieving most relevant sentences to the given image).\nThe sentence generation process is straightforward. Starting from the start sign wstart or arbitrary number of reference words (e.g. we can input the first K words in the reference sentence to the model and then start to generate new words), our model can calculate the probability distribution of the next word: P (wn|w1:n\u22121, I). Then we can sample from this probability distribution to pick the next word. In practice, we find that selecting the word with the maximum probability performs slightly better than sampling. After that, we input the picked word to the model and continue the process until the model outputs the end sign wend.\nFor the retrieval tasks, we use our model to calculate the probability of generating a sentence w1:L given an image I: P (w1:L|I) = \u220f n P (wn|w1:n\u22121, I). The probability can be treated as an affinity measurement between sentences and images.\nFor the image retrieval task, given the query sentence wQ1:L, we rank the dataset images I D according to the probability P (wQ1:L|ID) and retrieved the top ranked images. This is equivalent to the perplexity-based image retrieval in Kiros et al. (2014b).\nThe sentence retrieval task is trickier because there might be some sentences that have high probability or perplexity for any image query (e.g. sentences consist of many frequently appeared words). To solve this problem, Kiros et al. (2014b) uses the perplexity of a sentence conditioned on the averaged image feature across the training set as the reference perplexity to normalize the original perplexity. Different from them, we use the normalized probability where the normalization factor is the marginal probability of wD1:L:\nP (wD1:L|IQ)/P (wD1:L); P (wD1:L) = \u2211 I\u2032P (w D 1:L|I \u2032 ) \u00b7 P (I \u2032 ) (7)\nwhere wD1:L denotes the sentence in the dataset, I Q denotes the query image, and I\n\u2032 are images\nsampled from the training set. We approximate P (I \u2032 ) by a constant and ignore this term. This strategy leads to a much better performance than that in Kiros et al. (2014b) in the experiments. The normalized probability is equivalent to the probability P (IQ|wD1:L), which is symmetric to the probability P (wQ1:L|ID) used in the image retrieval task."}, {"heading": "6 LEARNING OF SENTENCE AND IMAGE FEATURES", "text": "The architecture of our model allows the gradients from the loss function to be backpropagated to both the language modeling part (i.e. the word embedding layers and the recurrent layer) and the vision part (e.g. the AlexNet or VggNet).\nFor the language part, as mentioned above, we randomly initialize the language modeling layers and learn their parameters. For the vision part, we use the pre-trained AlexNet (Krizhevsky et al. (2012)) or the VggNet (Simonyan & Zisserman (2014)) on ImageNet dataset (Russakovsky et al. (2014)). Recently, Karpathy et al. (2014) show that using the RCNN object detection results (Girshick et al. (2014)) combined with the AlexNet features performs better than simply treating the image as a whole frame. In the experiments, we show that our method performs much better than Karpathy et al. (2014) when the same image features are used, and is better than or comparable to their results even when they use more sophisticated features based on object detection.\nWe can update the CNN in the vision part of our model according to the gradient backpropagated from the multimodal layer. In this paper, we fix the image features and the deep CNN network in the training stage due to a shortage of data. In future work, we will apply our method on large datasets (e.g. the complete MS COCO dataset, which has not yet been released) and finetune the parameters of the deep CNN network in the training stage.\nThe m-RNN model is trained using Baidu\u2019s internal deep learning platform PADDLE, which allows us to explore many different model architectures in a short period. The hyperparameters, such as layer dimensions and the choice of the non-linear activation functions, are tuned via cross-validation on Flickr8K dataset and are then fixed across all the experiments. It takes 25 ms on average to generate a sentence (excluding image feature extraction stage) on a single core CPU."}, {"heading": "7 EXPERIMENTS", "text": ""}, {"heading": "7.1 DATASETS", "text": "We test our method on four benchmark datasets with sentence level annotations: IAPR TC-12 (Grubinger et al. (2006)), Flickr 8K (Rashtchian et al. (2010)), Flickr 30K (Young et al. (2014)) and MS COCO (Lin et al. (2014)).\nIAPR TC-12. This dataset consists of around 20,000 images taken from different locations around the world. It contains images of different sports and actions, people, animals, cities, landscapes, etc. For each image, it provides at least one sentence annotation. On average, there are about 1.7 sentence annotations for one image. We adopt the standard separation of training and testing set as previous works (Guillaumin et al. (2010); Kiros et al. (2014b)) with 17,665 images for training and 1962 images for testing.\nFlickr8K. This dataset consists of 8,000 images extracted from Flickr. For each image, it provides five sentence annotations. We adopt the standard separation of training, validation and testing set provided by the dataset. There are 6,000 images for training, 1,000 images for validation and 1,000 images for testing.\nFlickr30K. This dataset is a recent extension of Flickr8K. For each image, it also provides five sentences annotations. It consists of 158,915 crowd-sourced captions describing 31,783 images. The grammar and style for the annotations of this dataset is similar to Flickr8K. We follow the previous work (Karpathy et al. (2014)) which used 1,000 images for testing. This dataset, as well as the Flick8K dataset, were originally used for the image-sentence retrieval tasks.\nMS COCO. The current release of this recently proposed dataset contains 82,783 training images and 40,504 validation images. For each image, it provides five sentences annotations. We randomly sampled 4,000 images for validation and 1,000 images for testing from their currently released validation set. The dataset partition of MS COCO and Flickr30K is available in the project page 4."}, {"heading": "7.2 EVALUATION METRICS", "text": "Sentence Generation. Following previous works, we use the sentence perplexity (see Equ. 5) and BLEU scores (i.e. B-1, B-2, B-3, and B-4) (Papineni et al. (2002)) as the evaluation metrics. BLEU scores were originally designed for automatic machine translation where they rate the quality of a translated sentences given several reference sentences. Similarly, we can treat the sentence generation task as the \u201ctranslation\u201d of the content of images to sentences. BLEU remains the standard evaluation metric for sentence generation methods for images, though it has drawbacks. For some images, the reference sentences might not contain all the possible descriptions in the image and BLEU might penalize some correctly generated sentences. Please see more details of the calculation of BLEU scores for this task in the supplementary material section 10.3 5.\nSentence Retrieval and Image Retrieval. We adopt the same evaluation metrics as previous works (Socher et al. (2014); Frome et al. (2013); Karpathy et al. (2014)) for both the tasks of sentences retrieval and image retrieval. We use R@K (K = 1, 5, 10) as the measurement. R@K is the recall rate of a correctly retrieved groundtruth given top K candidates. Higher R@K usually means better retrieval performance. Since we care most about the top-ranked retrieved results, the R@K scores with smaller K are more important.\nThe Med r is another metric we use, which is the median rank of the first retrieved groundtruth sentence or image. Lower Med r usually means better performance. For IAPR TC-12 datasets, we use additional evaluation metrics to conduct a fair comparison with previous work (Kiros et al. (2014b)). Please see the details in the supplementary material section 10.3."}, {"heading": "7.3 RESULTS ON IAPR TC-12", "text": "The results of the sentence generation task6 are shown in Table 1. Ours-RNN-Base serves as a baseline method for our m-RNN model. It has the same architecture as m-RNN except that it does not have the image representation input.\nTo conduct a fair comparison, we follow the same experimental settings of Kiros et al. (2014b) to calculate the BLEU scores and perplexity. These two evaluation metrics are not necessarily correlated to each other for the following reasons. As mentioned in Section 4, perplexity is calculated according to the conditional probability of the word in a sentence given all of its previous reference words. Therefore, a strong language model that successfully captures the distributions of words in sentences can have a low perplexity without the image content. But the content of the generated sentences might be uncorrelated to images. From Table 1, we can see that although our baseline method of RNN generates a low perplexity, its BLEU score is low, indicating that it fails to generate sentences that are consistent with the content of images.\nTable 1 shows that our m-RNN model performs much better than our baseline RNN model and the state-of-the-art methods both in terms of the perplexity and BLEU score.\n4www.stat.ucla.edu/\u02dcjunhua.mao/m-RNN.html 5The BLEU outputted by our implementation is slightly lower than the recently released MS COCO caption evaluation toolbox (Chen et al. (2015)) because of different tokenization methods of the sentences. We reevaluate our method using the toolbox in the current version of the paper.\n6Kiros et al. (2014b) further improved their results after the publication. We compare our results with their updated ones here.\nFor the retrieval tasks, since there are no publicly available results of R@K and Med r in this dataset, we report R@K scores of our method in Table 2 for future comparisons. The result shows that 20.9% top-ranked retrieved sentences and 13.2% top-ranked retrieved images are groundtruth. We also adopt additional evaluation metrics to compare our method with Kiros et al. (2014b), see supplementary material Section 10.2."}, {"heading": "7.4 RESULTS ON FLICKR8K", "text": "This dataset was widely used as a benchmark dataset for image and sentence retrieval. The R@K and Med r of different methods are shown in Table 3. We compare our model with several state-ofthe-art methods: SDT-RNN (Socher et al. (2014)), DeViSE (Frome et al. (2013)), DeepFE (Karpathy et al. (2014)) with various image representations. Our model outperforms these methods by a large margin when using the same image representation (e.g. AlexNet). We also list the performance of methods using more sophisticated features in Table 3. \u201c-avg-RCNN\u201d denotes methods with features of the average CNN activation of all objects above a detection confidence threshold. DeepFE-RCNN Karpathy et al. (2014) uses a fragment mapping strategy to better exploit the object detection results. The results show that using these features improves the performance. Even without the help from the object detection methods, however, our method performs better than these methods in almost all the evaluation metrics. We will develop our framework using better image features based on object detection in the future work.\nThe PPL, B-1, B-2, B-3 and B-4 of the generated sentences using our m-RNN-AlexNet model in this dataset are 24.39, 0.565, 0.386, 0.256, and 0.170 respectively."}, {"heading": "MS COCO", "text": ""}, {"heading": "7.5 RESULTS ON FLICKR30K AND MS COCO", "text": "We compare our method with several state-of-the-art methods in these two recently released dataset (Note that the last six methods appear very recently, we use the results reported in their papers): DeViSE (Frome et al. (2013)), DeepFE (Karpathy et al. (2014)), MNLM (Kiros et al. (2014a)), DMSM (Fang et al. (2014)), NIC (Vinyals et al. (2014)), LRCN (Donahue et al. (2014)), RVR (Chen & Zitnick (2014)), and DeepVS (Karpathy & Fei-Fei (2014)). The results of the retrieval tasks and the sentence generation task 7 are shown in Table 4 and Table 5 respectively. We also summarize some of the properties of the recurrent layers adopted in the five very recent methods in Table 6.\n7We only select the word with maximum probability each time in the sentence generation process in Table 5 while many comparing methods (e.g. DMSM, NIC, LRCN) uses a beam search scheme that keeps the best K candidates. The beam search scheme will lead to better performance in practice using the same model.\nOur method with VggNet image representation (Simonyan & Zisserman (2014)) outperforms the state-of-the-art methods, including the very recently released methods, in almost all the evaluation metrics. Note that the dimension of the recurrent layer of our model is relatively small compared to the competing methods. It shows the advantage and efficiency of our method that directly inputs the visual information to the multimodal layer instead of storing it in the recurrent layer. The mRNN model with VggNet performs better than that with AlexNet, which indicates the importance of strong image representations in this task. 71% of the generated sentences for MS COCO datasets are novel (i.e. different from training sentences).\nWe also validate our method on the test set of MS COCO by their evaluation server (Chen et al. (2015)). The results are shown in Table 7. We evaluate our model with greedy inference (select the word with the maximum probability each time) as well as with the beam search inference. \u201c- c5\u201d represents results using 5 reference sentences and \u201c-c40\u201d represents results using 40 reference sentences.\nTo further validate the importance of different components of the m-RNN model, we train several variants of the original m-RNN model and compare their performance. In particular, we show that the two-layer word embedding system outperforms the single-layer version and the strategy of directly inputting the visual information to the multimodal layer substantially improves the performance (about 5% for B-1). Due to the limited space, we put the details of these experiments in Section 10.1 in the supplementary material after the main paper."}, {"heading": "8 NEAREST NEIGHBOR AS REFERENCE", "text": "Recently, Devlin et al. (2015b) proposed a nearest neighbor approach that retrieves the captions of the k nearest images in the training set, ranks these captions according to the consensus of the caption w.r.t. to the rest of the captions, and output the top ranked one.\nInspired by this method, we first adopt the m-RNN model with the transposed weight sharing strategy (Mao et al. (2015), denoted as m-RNN-shared) to generate n hypotheses using a beam search scheme. Specifically, we keep the n best candidates in the sentence generation process until the model generates the end sign wend. These n best candidates are approximately the n most probable sentences generated by the model, and can be treated as the n hypotheses. In our experiments, we set n = 10 since it gives us a diversified set of hypotheses without too much outliers on our validation set. 8\nAfter generating the hypotheses of a target image, we retrieve its nearest neighbors in the image feature space on the training set (see details in Section 8.1). Then we calculate the \u201cconsensus\u201d scores (Devlin et al. (2015a)) of the hypotheses w.r.t. to the groundtruth captions of the nearest neighbor images, and rerank the hypotheses according to these scores (see details in Section 8.2)."}, {"heading": "8.1 IMAGE FEATURES FOR THE NEAREST NEIGHBOR IMAGE SEARCH", "text": "We try two types of image features for the nearest neighbor image search 9. The first one is the original image features extracted by the VggNet (Simonyan & Zisserman (2014)). We first resize the image so that its short side is 256 pixels. Then we extract features on ten 224 \u00d7 224 windows\n8If we directly output the top hypotheses generated by the model, then n = 5 gives us the best performance. But if we want to rerank the hypotheses, then n = 10 gives us a better result on the validation set.\n9We release both types of the features on MS COCO 2014 train, val and test sets. Please refer to the readme file at https://github.com/mjhucla/mRNN-CR to see how to download and use them.\n(the four corners, the center and their mirrored versions) on the resized image. Finally, we average pool the ten features to make it a 4,096 dimensional feature.\nThe second type is the feature refined by our m-RNN model. It can be calculated as: Ir = g2(VI \u00b7I), where VI is the weight matrix between the image representation and the multimodal layer (see Equation 3), and g2(.) is the scaled hyperbolic tangent function.\nWe show the sample images and their nearest neighbors in Figure 3. We find that compared to the original VggNet features, the features refined by the m-RNN model capture richer and more accurate visual information. E.g., the target image in the second row contains an old woman with a bunch of bananas. The original VggNet features do not retrieve images with bananas in them."}, {"heading": "8.2 CONSENSUS RERANKING", "text": "Suppose we have get the k nearest neighbor images in the training set as the reference. We follow Devlin et al. (2015a) to calculate the consensus score of a hypotheses. The difference is that Devlin et al. (2015a) treat the captions of the k nearest neighbor images as the hypotheses while our hypotheses are generated by the m-RNN model. More specifically, for each hypothesis, we calculate the mean similarity between this hypothesis and all the captions of the k nearest neighbor images.\nThe consensus score of this hypothesis is the mean similarity score of the m nearest captions. The similarity between a hypothesis and one of its nearest neighbor reference captions is defined by a sentence-level BLEU score (Papineni et al. (2002)) or a sentence-level CIDEr (Vedantam et al. (2014)). We cross-validate the hyperparamters k and m. For the BLEU-based similarity, the optimal k and m are 60 and 175 respectively. For the CIDEr-based similarity, the optimal k and m are 60 and 125 respectively."}, {"heading": "8.3 EXPERIMENTS", "text": "We show the results of our model on our validation set and the MS COCO testing server in Table 8. For BLEU-based consensus reranking, we get an improvement of 3.5 points on our validation set and 3.3 points on the MS COCO test 2014 set in terms of BLEU4 score. For the CIDEr-based consensus reranking, we get an improvement of 9.4 points on our validation set and 9.8 points on the MS COCO test 2014 set in terms of CIDEr."}, {"heading": "8.4 DISCUSSION", "text": "We show the rank of the ten hypotheses before and after reranking in Figure 4. Although the hypotheses are similar to each other, there are some variances among them (E.g., some of them capture more details of the images. Some of them might be partially wrong). The reranking process is able to improve the rank of good captions.\nWe also show the oracle performance of the ten hypotheses, which is the upper bound of the consensus reranking. More specifically, for each image in our validation set, we rerank the hypotheses according to the scores (BLEU or CIDEr) w.r.t to the groundtruth captions. The results of this oracle reranking are shown in Table 8 (see rows with \u201c-oracle\u201d). The oracle performance is surprisingly high, indicating that there is still room for improvement, both for the m-RNN model itself and the reranking strategy."}, {"heading": "9 CONCLUSION", "text": "We propose a multimodal Recurrent Neural Network (m-RNN) framework that performs at the state-of-the-art in three tasks: sentence generation, sentence retrieval given query image and image\nretrieval given query sentence. The model consists of a deep RNN, a deep CNN and these two sub-networks interact with each other in a multimodal layer. Our m-RNN is powerful of connecting images and sentences and is flexible to incorporate more complex image representations and more sophisticated language models."}, {"heading": "ACKNOWLEDGMENTS", "text": "We thank Andrew Ng, Kai Yu, Chang Huang, Duohao Qin, Haoyuan Gao, Jason Eisner for useful discussions and technical support. We also thank the comments and suggestions of the anonymous reviewers from ICLR 2015 and NIPS 2014 Deep Learning Workshop. We acknowledge the Center for Minds, Brains and Machines (CBMM), partially funded by NSF STC award CCF-1231216, and ARO 62250-CS."}, {"heading": "10.1 EFFECTIVENESS OF THE DIFFERENT COMPONENTS OF THE M-RNN MODEL", "text": ""}, {"heading": "10 SUPPLEMENTARY MATERIAL", "text": "In this section, we compare different variants of our m-RNN model to show the effectiveness of the two-layer word embedding and the strategy to input the visual information to the multimodal layer.\nThe word embedding system. Intuitively, the two word embedding layers capture high-level semantic meanings of words more efficiently than the single layer word embedding. As an input to the multimodal layer, it offers useful information for predicting the next word distribution.\nTo validate its efficiency, we train three different m-RNN networks: m-RNN-NoEmbInput, m-RNNOneLayerEmb, m-RNN-EmbOneInput. They are illustrated in Figure 5. \u201cm-RNN-NoEmbInput\u201d denotes the m-RNN model whose connection between the word embedding layer II and the multimodal layer is cut off. Thus the multimodal layer has only two inputs: the recurrent layer and the image representation. \u201cm-RNN-OneLayerEmb\u201d denotes the m-RNN model whose two word embedding layers are replaced by a single 256 dimensional word-embedding layer. There are much more parameters of the word-embedding layers in the m-RNN-OneLayerEmb than those in the original m-RNN (256 \u00b7M v.s. 128 \u00b7M + 128 \u00b7 256) if the dictionary size M is large. \u201cm-RNNEmbOneInput\u201d denotes the m-RNN model whose connection between the word embedding layer II and the multimodal layer is replaced by the connection between the word embedding layer I and the multimodal layer. The performance comparisons are shown in Table 9.\nTable 9 shows that the original m-RNN model with the two word embedding layers and the connection between word embedding layer II and multimodal layer performs the best. It verifies the effectiveness of the two word embedding layers.\nHow to connect the vision and the language part of the model. We train three variants of m-RNN models where the image representation is inputted into the recurrent layer: m-RNN-VisualInRNN, m-RNN-VisualInRNN-both, and m-RNN-VisualInRNN-Both-Shared. For m-RNN-VisualInRNN, we only input the image representation to the word embedding layer II while for the later two models, we input the image representation to both the multimodal layer and word embedding layer II.\nThe weights of the two connections V (1)I , V (2) I are shared for m-RNN-VisualInRNN-Both-Shared. Please see details of these models in Figure 5. Table 9 shows that the original m-RNN model performs much better than these models, indicating that it is effective to directly input the visual information to the multimodal layer.\nIn practice, we find that it is harder to train these variants than to train the original m-RNN model and we have to keep the learning rate very small to avoid the exploding gradient problem. Increasing the dimension of the recurrent layer or replacing RNN with LSTM (a sophisticated version of RNN Hochreiter & Schmidhuber (1997)) might solve the problem. We will explore this issue in future work."}, {"heading": "10.2 ADDITIONAL RETRIEVAL PERFORMANCE COMPARISONS ON IAPR TC-12", "text": "For the retrieval results in this dataset, in addition to the R@K and Med r, we also adopt exactly the same evaluation metrics as Kiros et al. (2014b) and plot the mean number of matches of the retrieved groundtruth sentences or images with respect to the percentage of the retrieved sentences or images for the testing set. For the sentence retrieval task, Kiros et al. (2014b) uses a shortlist of 100 images which are the nearest neighbors of the query image in the feature space. This shortlist strategy makes the task harder because similar images might have similar descriptions and it is often harder to find subtle differences among the sentences and pick the most suitable one.\nThe recall accuracy curves with respect to the percentage of retrieved images (sentence retrieval task) or sentences (sentence retrieval task) are shown in Figure 6. The first method, bowdecaf, is a strong image based bag-of-words baseline (Kiros et al. (2014b)). The second and the third models (Kiros et al. (2014b)) are all multimodal deep models. Our m-RNN model significantly outperforms these three methods in this task."}, {"heading": "10.3 THE CALCULATION OF BLEU SCORE", "text": "The BLEU score was proposed by Papineni et al. (2002) and was originally used as a evaluation metric for machine translation. To calculate BLEU-N (i.e. B-N in the paper whereN=1,2,3,4) score, we first compute the modified n-gram precision (Papineni et al. (2002)), pn. Then we compute the geometric mean of pn up to length N and multiply it by a brevity penalty BP:\nBP = min(1, e1\u2212 r c ) (8)\nB-N = BP \u00b7 e 1N \u2211N\nn=1 log pn (9) where r is the length of the reference sentence and c is the length of the generated sentence. We use the same strategy as Fang et al. (2014) where pn, r, and c are computed over the whole testing corpus. When there are multiple reference sentences, the length of the reference that is closest (longer or shorter) to the length of the candidate is used to compute r."}], "references": [{"title": "Microsoft coco captions: Data collection and evaluation", "author": ["X. Chen", "H. Fang", "TY Lin", "R. Vedantam", "S. Gupta", "P. Dollr", "C.L. Zitnick"], "venue": "server. arXiv preprint arXiv:1504.00325,", "citeRegEx": "Chen et al\\.,? \\Q2015\\E", "shortCiteRegEx": "Chen et al\\.", "year": 2015}, {"title": "Learning a recurrent visual representation for image caption generation", "author": ["Chen", "Xinlei", "Zitnick", "C Lawrence"], "venue": "arXiv preprint arXiv:1411.5654,", "citeRegEx": "Chen et al\\.,? \\Q2014\\E", "shortCiteRegEx": "Chen et al\\.", "year": 2014}, {"title": "Learning phrase representations using rnn encoder-decoder for statistical machine translation", "author": ["Cho", "Kyunghyun", "van Merrienboer", "Bart", "Gulcehre", "Caglar", "Bougares", "Fethi", "Schwenk", "Holger", "Bengio", "Yoshua"], "venue": "arXiv preprint arXiv:1406.1078,", "citeRegEx": "Cho et al\\.,? \\Q2014\\E", "shortCiteRegEx": "Cho et al\\.", "year": 2014}, {"title": "Language models for image captioning: The quirks and what works", "author": ["Devlin", "Jacob", "Cheng", "Hao", "Fang", "Gupta", "Saurabh", "Deng", "Li", "He", "Xiaodong", "Zweig", "Geoffrey", "Mitchell", "Margaret"], "venue": "arXiv preprint arXiv:1505.01809,", "citeRegEx": "Devlin et al\\.,? \\Q2015\\E", "shortCiteRegEx": "Devlin et al\\.", "year": 2015}, {"title": "Exploring nearest neighbor approaches for image captioning", "author": ["Devlin", "Jacob", "Gupta", "Saurabh", "Girshick", "Ross", "Mitchell", "Margaret", "Zitnick", "C Lawrence"], "venue": "arXiv preprint arXiv:1505.04467,", "citeRegEx": "Devlin et al\\.,? \\Q2015\\E", "shortCiteRegEx": "Devlin et al\\.", "year": 2015}, {"title": "Long-term recurrent convolutional networks for visual recognition and description", "author": ["Donahue", "Jeff", "Hendricks", "Lisa Anne", "Guadarrama", "Sergio", "Rohrbach", "Marcus", "Venugopalan", "Subhashini", "Saenko", "Kate", "Darrell", "Trevor"], "venue": "arXiv preprint arXiv:1411.4389,", "citeRegEx": "Donahue et al\\.,? \\Q2014\\E", "shortCiteRegEx": "Donahue et al\\.", "year": 2014}, {"title": "Finding structure in time", "author": ["Elman", "Jeffrey L"], "venue": "Cognitive science,", "citeRegEx": "Elman and L.,? \\Q1990\\E", "shortCiteRegEx": "Elman and L.", "year": 1990}, {"title": "From captions to visual concepts and back", "author": ["Fang", "Hao", "Gupta", "Saurabh", "Iandola", "Forrest", "Srivastava", "Rupesh", "Deng", "Li", "Doll\u00e1r", "Piotr", "Gao", "Jianfeng", "He", "Xiaodong", "Mitchell", "Margaret", "Platt", "John"], "venue": "arXiv preprint arXiv:1411.4952,", "citeRegEx": "Fang et al\\.,? \\Q2014\\E", "shortCiteRegEx": "Fang et al\\.", "year": 2014}, {"title": "Every picture tells a story: Generating sentences from images", "author": ["Farhadi", "Ali", "Hejrati", "Mohsen", "Sadeghi", "Mohammad Amin", "Young", "Peter", "Rashtchian", "Cyrus", "Hockenmaier", "Julia", "Forsyth", "David"], "venue": "In ECCV, pp", "citeRegEx": "Farhadi et al\\.,? \\Q2010\\E", "shortCiteRegEx": "Farhadi et al\\.", "year": 2010}, {"title": "Devise: A deep visual-semantic embedding model", "author": ["Frome", "Andrea", "Corrado", "Greg S", "Shlens", "Jon", "Bengio", "Samy", "Dean", "Jeff", "Mikolov", "Tomas"], "venue": "In NIPS,", "citeRegEx": "Frome et al\\.,? \\Q2013\\E", "shortCiteRegEx": "Frome et al\\.", "year": 2013}, {"title": "Rich feature hierarchies for accurate object detection and semantic segmentation", "author": ["R. Girshick", "J. Donahue", "T. Darrell", "J. Malik"], "venue": "In CVPR,", "citeRegEx": "Girshick et al\\.,? \\Q2014\\E", "shortCiteRegEx": "Girshick et al\\.", "year": 2014}, {"title": "The iapr tc-12 benchmark: A new evaluation resource for visual information systems", "author": ["Grubinger", "Michael", "Clough", "Paul", "M\u00fcller", "Henning", "Deselaers", "Thomas"], "venue": "In International Workshop OntoImage,", "citeRegEx": "Grubinger et al\\.,? \\Q2006\\E", "shortCiteRegEx": "Grubinger et al\\.", "year": 2006}, {"title": "Multiple instance metric learning from automatically labeled bags of faces", "author": ["Guillaumin", "Matthieu", "Verbeek", "Jakob", "Schmid", "Cordelia"], "venue": "In ECCV,", "citeRegEx": "Guillaumin et al\\.,? \\Q2010\\E", "shortCiteRegEx": "Guillaumin et al\\.", "year": 2010}, {"title": "From image annotation to image description", "author": ["Gupta", "Ankush", "Mannem", "Prashanth"], "venue": "In ICONIP,", "citeRegEx": "Gupta et al\\.,? \\Q2012\\E", "shortCiteRegEx": "Gupta et al\\.", "year": 2012}, {"title": "Choosing linguistics over vision to describe images", "author": ["Gupta", "Ankush", "Verma", "Yashaswi", "Jawahar", "CV"], "venue": "In AAAI,", "citeRegEx": "Gupta et al\\.,? \\Q2012\\E", "shortCiteRegEx": "Gupta et al\\.", "year": 2012}, {"title": "Long short-term memory", "author": ["Hochreiter", "Sepp", "Schmidhuber", "J\u00fcrgen"], "venue": "Neural computation,", "citeRegEx": "Hochreiter et al\\.,? \\Q1997\\E", "shortCiteRegEx": "Hochreiter et al\\.", "year": 1997}, {"title": "Framing image description as a ranking task: Data, models and evaluation", "author": ["Hodosh", "Micah", "Young", "Peter", "Hockenmaier", "Julia"], "venue": "metrics. JAIR,", "citeRegEx": "Hodosh et al\\.,? \\Q2013\\E", "shortCiteRegEx": "Hodosh et al\\.", "year": 2013}, {"title": "Learning cross-modality similarity for multinomial data", "author": ["Jia", "Yangqing", "Salzmann", "Mathieu", "Darrell", "Trevor"], "venue": "In ICCV, pp", "citeRegEx": "Jia et al\\.,? \\Q2011\\E", "shortCiteRegEx": "Jia et al\\.", "year": 2011}, {"title": "Recurrent continuous translation models", "author": ["Kalchbrenner", "Nal", "Blunsom", "Phil"], "venue": "In EMNLP, pp. 1700\u20131709,", "citeRegEx": "Kalchbrenner et al\\.,? \\Q2013\\E", "shortCiteRegEx": "Kalchbrenner et al\\.", "year": 2013}, {"title": "Deep visual-semantic alignments for generating image descriptions", "author": ["Karpathy", "Andrej", "Fei-Fei", "Li"], "venue": "arXiv preprint arXiv:1412.2306,", "citeRegEx": "Karpathy et al\\.,? \\Q2014\\E", "shortCiteRegEx": "Karpathy et al\\.", "year": 2014}, {"title": "Deep fragment embeddings for bidirectional image sentence mapping", "author": ["Karpathy", "Andrej", "Joulin", "Armand", "Fei-Fei", "Li"], "venue": "In arXiv:1406.5679,", "citeRegEx": "Karpathy et al\\.,? \\Q2014\\E", "shortCiteRegEx": "Karpathy et al\\.", "year": 2014}, {"title": "Unifying visual-semantic embeddings with multimodal neural language models", "author": ["Kiros", "Ryan", "Salakhutdinov", "Ruslan", "Zemel", "Richard S"], "venue": "arXiv preprint arXiv:1411.2539,", "citeRegEx": "Kiros et al\\.,? \\Q2014\\E", "shortCiteRegEx": "Kiros et al\\.", "year": 2014}, {"title": "Multimodal neural language models", "author": ["Kiros", "Ryan", "R Zemel", "Salakhutdinov", "Ruslan"], "venue": "In ICML,", "citeRegEx": "Kiros et al\\.,? \\Q2014\\E", "shortCiteRegEx": "Kiros et al\\.", "year": 2014}, {"title": "Imagenet classification with deep convolutional neural networks", "author": ["Krizhevsky", "Alex", "Sutskever", "Ilya", "Hinton", "Geoffrey E"], "venue": "In NIPS, pp", "citeRegEx": "Krizhevsky et al\\.,? \\Q2012\\E", "shortCiteRegEx": "Krizhevsky et al\\.", "year": 2012}, {"title": "Baby talk: Understanding and generating image descriptions", "author": ["Kulkarni", "Girish", "Premraj", "Visruth", "Dhar", "Sagnik", "Li", "Siming", "Choi", "Yejin", "Berg", "Alexander C", "Tamara L"], "venue": "In CVPR,", "citeRegEx": "Kulkarni et al\\.,? \\Q2011\\E", "shortCiteRegEx": "Kulkarni et al\\.", "year": 2011}, {"title": "Treetalk: Composition and compression of trees for image descriptions", "author": ["Kuznetsova", "Polina", "Ordonez", "Vicente", "Berg", "Tamara L", "Choi", "Yejin"], "venue": "Transactions of the Association for Computational Linguistics,", "citeRegEx": "Kuznetsova et al\\.,? \\Q2014\\E", "shortCiteRegEx": "Kuznetsova et al\\.", "year": 2014}, {"title": "Efficient backprop", "author": ["LeCun", "Yann A", "Bottou", "L\u00e9on", "Orr", "Genevieve B", "M\u00fcller", "Klaus-Robert"], "venue": "In Neural networks: Tricks of the trade,", "citeRegEx": "LeCun et al\\.,? \\Q2012\\E", "shortCiteRegEx": "LeCun et al\\.", "year": 2012}, {"title": "Microsoft coco: Common objects in context", "author": ["Lin", "Tsung-Yi", "Maire", "Michael", "Belongie", "Serge", "Hays", "James", "Perona", "Pietro", "Ramanan", "Deva", "Doll\u00e1r", "Piotr", "Zitnick", "C Lawrence"], "venue": "arXiv preprint arXiv:1405.0312,", "citeRegEx": "Lin et al\\.,? \\Q2014\\E", "shortCiteRegEx": "Lin et al\\.", "year": 2014}, {"title": "Explain images with multimodal recurrent neural networks", "author": ["Mao", "Junhua", "Xu", "Wei", "Yang", "Yi", "Wang", "Jiang", "Yuille", "Alan L"], "venue": "NIPS DeepLearning Workshop,", "citeRegEx": "Mao et al\\.,? \\Q2014\\E", "shortCiteRegEx": "Mao et al\\.", "year": 2014}, {"title": "Learning like a child: Fast novel visual concept learning from sentence descriptions of images", "author": ["Mao", "Junhua", "Xu", "Wei", "Yang", "Yi", "Wang", "Jiang", "Huang", "Zhiheng", "Yuille", "Alan"], "venue": "arXiv preprint arXiv:1504.06692,", "citeRegEx": "Mao et al\\.,? \\Q2015\\E", "shortCiteRegEx": "Mao et al\\.", "year": 2015}, {"title": "Recurrent neural network based language model", "author": ["Mikolov", "Tomas", "Karafi\u00e1t", "Martin", "Burget", "Lukas", "Cernock\u1ef3", "Jan", "Khudanpur", "Sanjeev"], "venue": "In INTERSPEECH,", "citeRegEx": "Mikolov et al\\.,? \\Q2010\\E", "shortCiteRegEx": "Mikolov et al\\.", "year": 2010}, {"title": "Extensions of recurrent neural network language model", "author": ["Mikolov", "Tomas", "Kombrink", "Stefan", "Burget", "Lukas", "JH Cernocky", "Khudanpur", "Sanjeev"], "venue": "In ICASSP,", "citeRegEx": "Mikolov et al\\.,? \\Q2011\\E", "shortCiteRegEx": "Mikolov et al\\.", "year": 2011}, {"title": "Distributed representations of words and phrases and their compositionality", "author": ["Mikolov", "Tomas", "Sutskever", "Ilya", "Chen", "Kai", "Corrado", "Greg S", "Dean", "Jeff"], "venue": "In NIPS,", "citeRegEx": "Mikolov et al\\.,? \\Q2013\\E", "shortCiteRegEx": "Mikolov et al\\.", "year": 2013}, {"title": "Midge: Generating image descriptions from computer vision detections", "author": ["Mitchell", "Margaret", "Han", "Xufeng", "Dodge", "Jesse", "Mensch", "Alyssa", "Goyal", "Amit", "Berg", "Alex", "Yamaguchi", "Kota", "Tamara", "Stratos", "Karl", "Daum\u00e9 III", "Hal"], "venue": "In EACL,", "citeRegEx": "Mitchell et al\\.,? \\Q2012\\E", "shortCiteRegEx": "Mitchell et al\\.", "year": 2012}, {"title": "Three new graphical models for statistical language modelling", "author": ["Mnih", "Andriy", "Hinton", "Geoffrey"], "venue": "In ICML,", "citeRegEx": "Mnih et al\\.,? \\Q2007\\E", "shortCiteRegEx": "Mnih et al\\.", "year": 2007}, {"title": "Rectified linear units improve restricted boltzmann machines", "author": ["Nair", "Vinod", "Hinton", "Geoffrey E"], "venue": "In ICML, pp", "citeRegEx": "Nair et al\\.,? \\Q2010\\E", "shortCiteRegEx": "Nair et al\\.", "year": 2010}, {"title": "Bleu: a method for automatic evaluation of machine translation", "author": ["Papineni", "Kishore", "Roukos", "Salim", "Ward", "Todd", "Zhu", "Wei-Jing"], "venue": "In ACL, pp", "citeRegEx": "Papineni et al\\.,? \\Q2002\\E", "shortCiteRegEx": "Papineni et al\\.", "year": 2002}, {"title": "Collecting image annotations using amazon\u2019s mechanical turk. In NAACL-HLT workshop", "author": ["Rashtchian", "Cyrus", "Young", "Peter", "Hodosh", "Micah", "Hockenmaier", "Julia"], "venue": null, "citeRegEx": "Rashtchian et al\\.,? \\Q2010\\E", "shortCiteRegEx": "Rashtchian et al\\.", "year": 2010}, {"title": "Learning representations by back-propagating errors", "author": ["Rumelhart", "David E", "Hinton", "Geoffrey E", "Williams", "Ronald J"], "venue": "Cognitive modeling,", "citeRegEx": "Rumelhart et al\\.,? \\Q1988\\E", "shortCiteRegEx": "Rumelhart et al\\.", "year": 1988}, {"title": "Very deep convolutional networks for large-scale image recognition", "author": ["Simonyan", "Karen", "Zisserman", "Andrew"], "venue": "arXiv preprint arXiv:1409.1556,", "citeRegEx": "Simonyan et al\\.,? \\Q2014\\E", "shortCiteRegEx": "Simonyan et al\\.", "year": 2014}, {"title": "Grounded compositional semantics for finding and describing images with sentences", "author": ["Socher", "Richard", "Q Le", "C Manning", "A. Ng"], "venue": "TACL,", "citeRegEx": "Socher et al\\.,? \\Q2014\\E", "shortCiteRegEx": "Socher et al\\.", "year": 2014}, {"title": "Multimodal learning with deep boltzmann machines", "author": ["Srivastava", "Nitish", "Salakhutdinov", "Ruslan"], "venue": "In NIPS, pp", "citeRegEx": "Srivastava et al\\.,? \\Q2012\\E", "shortCiteRegEx": "Srivastava et al\\.", "year": 2012}, {"title": "Sequence to sequence learning with neural networks", "author": ["Sutskever", "Ilya", "Vinyals", "Oriol", "Le", "Quoc VV"], "venue": "In NIPS, pp", "citeRegEx": "Sutskever et al\\.,? \\Q2014\\E", "shortCiteRegEx": "Sutskever et al\\.", "year": 2014}, {"title": "Cider: Consensus-based image description evaluation", "author": ["Vedantam", "Ramakrishna", "Zitnick", "C Lawrence", "Parikh", "Devi"], "venue": "arXiv preprint arXiv:1411.5726,", "citeRegEx": "Vedantam et al\\.,? \\Q2014\\E", "shortCiteRegEx": "Vedantam et al\\.", "year": 2014}, {"title": "Show and tell: A neural image caption generator", "author": ["Vinyals", "Oriol", "Toshev", "Alexander", "Bengio", "Samy", "Erhan", "Dumitru"], "venue": "arXiv preprint arXiv:1411.4555,", "citeRegEx": "Vinyals et al\\.,? \\Q2014\\E", "shortCiteRegEx": "Vinyals et al\\.", "year": 2014}, {"title": "From image descriptions to visual denotations: New similarity metrics for semantic inference over event descriptions", "author": ["Young", "Peter", "Lai", "Alice", "Hodosh", "Micah", "Hockenmaier", "Julia"], "venue": "In ACL,", "citeRegEx": "Young et al\\.,? \\Q2014\\E", "shortCiteRegEx": "Young et al\\.", "year": 2014}, {"title": "2014b) and plot the mean number of matches", "author": ["Kiros"], "venue": null, "citeRegEx": "Kiros,? \\Q2014\\E", "shortCiteRegEx": "Kiros", "year": 2014}, {"title": "2014b)) are all multimodal deep models. Our m-RNN model significantly outperforms", "author": ["Kiros"], "venue": null, "citeRegEx": "Kiros,? \\Q2014\\E", "shortCiteRegEx": "Kiros", "year": 2014}], "referenceMentions": [{"referenceID": 28, "context": "1090 (Mao et al. (2014)).", "startOffset": 6, "endOffset": 24}, {"referenceID": 11, "context": "In the experiments, we validate our model on four benchmark datasets: IAPR TC-12 (Grubinger et al. (2006)), Flickr 8K (Rashtchian et al.", "startOffset": 82, "endOffset": 106}, {"referenceID": 11, "context": "In the experiments, we validate our model on four benchmark datasets: IAPR TC-12 (Grubinger et al. (2006)), Flickr 8K (Rashtchian et al. (2010)), Flickr 30K (Young et al.", "startOffset": 82, "endOffset": 144}, {"referenceID": 11, "context": "In the experiments, we validate our model on four benchmark datasets: IAPR TC-12 (Grubinger et al. (2006)), Flickr 8K (Rashtchian et al. (2010)), Flickr 30K (Young et al. (2014)) and MS COCO (Lin et al.", "startOffset": 82, "endOffset": 178}, {"referenceID": 11, "context": "In the experiments, we validate our model on four benchmark datasets: IAPR TC-12 (Grubinger et al. (2006)), Flickr 8K (Rashtchian et al. (2010)), Flickr 30K (Young et al. (2014)) and MS COCO (Lin et al. (2014)).", "startOffset": 82, "endOffset": 210}, {"referenceID": 17, "context": "For computer vision, Krizhevsky et al. (2012) propose a deep Convolutional Neural Networks (CNN) with 8 layers (denoted as AlexNet) and outperform previous methods by a large margin in the image classification task of ImageNet challenge (Russakovsky et al.", "startOffset": 21, "endOffset": 46}, {"referenceID": 17, "context": "For computer vision, Krizhevsky et al. (2012) propose a deep Convolutional Neural Networks (CNN) with 8 layers (denoted as AlexNet) and outperform previous methods by a large margin in the image classification task of ImageNet challenge (Russakovsky et al. (2014)).", "startOffset": 21, "endOffset": 264}, {"referenceID": 8, "context": "Girshick et al. (2014) design a object detection framework (RCNN) based on this work.", "startOffset": 0, "endOffset": 23}, {"referenceID": 8, "context": "Girshick et al. (2014) design a object detection framework (RCNN) based on this work. Recently, Simonyan & Zisserman (2014) propose a CNN with over 16 layers (denoted as VggNet) and performs substantially better than the AlexNet.", "startOffset": 0, "endOffset": 124}, {"referenceID": 8, "context": "Girshick et al. (2014) design a object detection framework (RCNN) based on this work. Recently, Simonyan & Zisserman (2014) propose a CNN with over 16 layers (denoted as VggNet) and performs substantially better than the AlexNet. For natural language, the Recurrent Neural Network (RNN) shows the state-of-the-art performance in many tasks, such as speech recognition and word embedding learning (Mikolov et al. (2010; 2011; 2013)). Recently, RNNs have been successfully applied to machine translation to extract semantic information from the source sentence and generate target sentences (e.g. Kalchbrenner & Blunsom (2013), Cho et al.", "startOffset": 0, "endOffset": 625}, {"referenceID": 2, "context": "Kalchbrenner & Blunsom (2013), Cho et al. (2014) and Sutskever et al.", "startOffset": 31, "endOffset": 49}, {"referenceID": 2, "context": "Kalchbrenner & Blunsom (2013), Cho et al. (2014) and Sutskever et al. (2014)).", "startOffset": 31, "endOffset": 77}, {"referenceID": 2, "context": "Kalchbrenner & Blunsom (2013), Cho et al. (2014) and Sutskever et al. (2014)). Image-sentence retrieval. Many previous methods treat the task of describing images as a retrieval task and formulate the problem as a ranking or embedding learning problem (Hodosh et al. (2013); Frome et al.", "startOffset": 31, "endOffset": 274}, {"referenceID": 2, "context": "Kalchbrenner & Blunsom (2013), Cho et al. (2014) and Sutskever et al. (2014)). Image-sentence retrieval. Many previous methods treat the task of describing images as a retrieval task and formulate the problem as a ranking or embedding learning problem (Hodosh et al. (2013); Frome et al. (2013); Socher et al.", "startOffset": 31, "endOffset": 295}, {"referenceID": 2, "context": "Kalchbrenner & Blunsom (2013), Cho et al. (2014) and Sutskever et al. (2014)). Image-sentence retrieval. Many previous methods treat the task of describing images as a retrieval task and formulate the problem as a ranking or embedding learning problem (Hodosh et al. (2013); Frome et al. (2013); Socher et al. (2014)).", "startOffset": 31, "endOffset": 317}, {"referenceID": 2, "context": "Kalchbrenner & Blunsom (2013), Cho et al. (2014) and Sutskever et al. (2014)). Image-sentence retrieval. Many previous methods treat the task of describing images as a retrieval task and formulate the problem as a ranking or embedding learning problem (Hodosh et al. (2013); Frome et al. (2013); Socher et al. (2014)). They first extract the word and sentence features (e.g. Socher et al. (2014) uses dependency tree Recursive Neural Network to extract sentence features) as well as the image features.", "startOffset": 31, "endOffset": 396}, {"referenceID": 2, "context": "Kalchbrenner & Blunsom (2013), Cho et al. (2014) and Sutskever et al. (2014)). Image-sentence retrieval. Many previous methods treat the task of describing images as a retrieval task and formulate the problem as a ranking or embedding learning problem (Hodosh et al. (2013); Frome et al. (2013); Socher et al. (2014)). They first extract the word and sentence features (e.g. Socher et al. (2014) uses dependency tree Recursive Neural Network to extract sentence features) as well as the image features. Then they optimize a ranking cost to learn an embedding model that maps both the sentence feature and the image feature to a common semantic feature space. In this way, they can directly calculate the distance between images and sentences. Recently, Karpathy et al. (2014) show that object level image features based on object detection results can generate better results than image features extracted at the global level.", "startOffset": 31, "endOffset": 776}, {"referenceID": 23, "context": "They parse the sentence and divide it into several parts (Mitchell et al. (2012); Gupta & Mannem (2012)).", "startOffset": 58, "endOffset": 81}, {"referenceID": 23, "context": "They parse the sentence and divide it into several parts (Mitchell et al. (2012); Gupta & Mannem (2012)).", "startOffset": 58, "endOffset": 104}, {"referenceID": 18, "context": "Kulkarni et al. (2011) uses a Conditional Random Field model and Farhadi et al.", "startOffset": 0, "endOffset": 23}, {"referenceID": 6, "context": "(2011) uses a Conditional Random Field model and Farhadi et al. (2010) uses a Markov Random Field model).", "startOffset": 49, "endOffset": 71}, {"referenceID": 6, "context": "(2011) uses a Conditional Random Field model and Farhadi et al. (2010) uses a Markov Random Field model). This kind of method generates sentences that are syntactically correct. The second category retrieves similar captioned images, and generates new descriptions by generalizing and re-composing the retrieved captions (Kuznetsova et al. (2014)).", "startOffset": 49, "endOffset": 347}, {"referenceID": 6, "context": "(2011) uses a Conditional Random Field model and Farhadi et al. (2010) uses a Markov Random Field model). This kind of method generates sentences that are syntactically correct. The second category retrieves similar captioned images, and generates new descriptions by generalizing and re-composing the retrieved captions (Kuznetsova et al. (2014)). The third category of methods, which is more related to our method, learns a probability density over the space of multimodal inputs (i.e. sentences and images), using for example, Deep Boltzmann Machines (Srivastava & Salakhutdinov (2012)), and topic models (Barnard et al.", "startOffset": 49, "endOffset": 589}, {"referenceID": 6, "context": "(2011) uses a Conditional Random Field model and Farhadi et al. (2010) uses a Markov Random Field model). This kind of method generates sentences that are syntactically correct. The second category retrieves similar captioned images, and generates new descriptions by generalizing and re-composing the retrieved captions (Kuznetsova et al. (2014)). The third category of methods, which is more related to our method, learns a probability density over the space of multimodal inputs (i.e. sentences and images), using for example, Deep Boltzmann Machines (Srivastava & Salakhutdinov (2012)), and topic models (Barnard et al. (2003); Jia et al.", "startOffset": 49, "endOffset": 631}, {"referenceID": 6, "context": "(2011) uses a Conditional Random Field model and Farhadi et al. (2010) uses a Markov Random Field model). This kind of method generates sentences that are syntactically correct. The second category retrieves similar captioned images, and generates new descriptions by generalizing and re-composing the retrieved captions (Kuznetsova et al. (2014)). The third category of methods, which is more related to our method, learns a probability density over the space of multimodal inputs (i.e. sentences and images), using for example, Deep Boltzmann Machines (Srivastava & Salakhutdinov (2012)), and topic models (Barnard et al. (2003); Jia et al. (2011)).", "startOffset": 49, "endOffset": 650}, {"referenceID": 6, "context": "(2011) uses a Conditional Random Field model and Farhadi et al. (2010) uses a Markov Random Field model). This kind of method generates sentences that are syntactically correct. The second category retrieves similar captioned images, and generates new descriptions by generalizing and re-composing the retrieved captions (Kuznetsova et al. (2014)). The third category of methods, which is more related to our method, learns a probability density over the space of multimodal inputs (i.e. sentences and images), using for example, Deep Boltzmann Machines (Srivastava & Salakhutdinov (2012)), and topic models (Barnard et al. (2003); Jia et al. (2011)). They generate sentences with richer and more flexible structure than the first group. The probability of generating sentences using the model can serve as the affinity metric for retrieval. Our method falls into this category. More closely related to our tasks and method is the work of Kiros et al. (2014b), which is built on a Log-BiLinear model (Mnih & Hinton (2007)) and use AlexNet to extract visual features.", "startOffset": 49, "endOffset": 960}, {"referenceID": 6, "context": "(2011) uses a Conditional Random Field model and Farhadi et al. (2010) uses a Markov Random Field model). This kind of method generates sentences that are syntactically correct. The second category retrieves similar captioned images, and generates new descriptions by generalizing and re-composing the retrieved captions (Kuznetsova et al. (2014)). The third category of methods, which is more related to our method, learns a probability density over the space of multimodal inputs (i.e. sentences and images), using for example, Deep Boltzmann Machines (Srivastava & Salakhutdinov (2012)), and topic models (Barnard et al. (2003); Jia et al. (2011)). They generate sentences with richer and more flexible structure than the first group. The probability of generating sentences using the model can serve as the affinity metric for retrieval. Our method falls into this category. More closely related to our tasks and method is the work of Kiros et al. (2014b), which is built on a Log-BiLinear model (Mnih & Hinton (2007)) and use AlexNet to extract visual features.", "startOffset": 49, "endOffset": 1022}, {"referenceID": 6, "context": "(2011) uses a Conditional Random Field model and Farhadi et al. (2010) uses a Markov Random Field model). This kind of method generates sentences that are syntactically correct. The second category retrieves similar captioned images, and generates new descriptions by generalizing and re-composing the retrieved captions (Kuznetsova et al. (2014)). The third category of methods, which is more related to our method, learns a probability density over the space of multimodal inputs (i.e. sentences and images), using for example, Deep Boltzmann Machines (Srivastava & Salakhutdinov (2012)), and topic models (Barnard et al. (2003); Jia et al. (2011)). They generate sentences with richer and more flexible structure than the first group. The probability of generating sentences using the model can serve as the affinity metric for retrieval. Our method falls into this category. More closely related to our tasks and method is the work of Kiros et al. (2014b), which is built on a Log-BiLinear model (Mnih & Hinton (2007)) and use AlexNet to extract visual features. It needs a fixed length of context (i.e. five words), whereas in our model, the temporal context is stored in a recurrent architecture, which allows arbitrary context length. Shortly after Mao et al. (2014), several papers appear with record breaking results (e.", "startOffset": 49, "endOffset": 1274}, {"referenceID": 6, "context": "(2011) uses a Conditional Random Field model and Farhadi et al. (2010) uses a Markov Random Field model). This kind of method generates sentences that are syntactically correct. The second category retrieves similar captioned images, and generates new descriptions by generalizing and re-composing the retrieved captions (Kuznetsova et al. (2014)). The third category of methods, which is more related to our method, learns a probability density over the space of multimodal inputs (i.e. sentences and images), using for example, Deep Boltzmann Machines (Srivastava & Salakhutdinov (2012)), and topic models (Barnard et al. (2003); Jia et al. (2011)). They generate sentences with richer and more flexible structure than the first group. The probability of generating sentences using the model can serve as the affinity metric for retrieval. Our method falls into this category. More closely related to our tasks and method is the work of Kiros et al. (2014b), which is built on a Log-BiLinear model (Mnih & Hinton (2007)) and use AlexNet to extract visual features. It needs a fixed length of context (i.e. five words), whereas in our model, the temporal context is stored in a recurrent architecture, which allows arbitrary context length. Shortly after Mao et al. (2014), several papers appear with record breaking results (e.g. Kiros et al. (2014a); Karpathy & Fei-Fei (2014); Vinyals et al.", "startOffset": 49, "endOffset": 1353}, {"referenceID": 6, "context": "(2011) uses a Conditional Random Field model and Farhadi et al. (2010) uses a Markov Random Field model). This kind of method generates sentences that are syntactically correct. The second category retrieves similar captioned images, and generates new descriptions by generalizing and re-composing the retrieved captions (Kuznetsova et al. (2014)). The third category of methods, which is more related to our method, learns a probability density over the space of multimodal inputs (i.e. sentences and images), using for example, Deep Boltzmann Machines (Srivastava & Salakhutdinov (2012)), and topic models (Barnard et al. (2003); Jia et al. (2011)). They generate sentences with richer and more flexible structure than the first group. The probability of generating sentences using the model can serve as the affinity metric for retrieval. Our method falls into this category. More closely related to our tasks and method is the work of Kiros et al. (2014b), which is built on a Log-BiLinear model (Mnih & Hinton (2007)) and use AlexNet to extract visual features. It needs a fixed length of context (i.e. five words), whereas in our model, the temporal context is stored in a recurrent architecture, which allows arbitrary context length. Shortly after Mao et al. (2014), several papers appear with record breaking results (e.g. Kiros et al. (2014a); Karpathy & Fei-Fei (2014); Vinyals et al.", "startOffset": 49, "endOffset": 1380}, {"referenceID": 6, "context": "(2011) uses a Conditional Random Field model and Farhadi et al. (2010) uses a Markov Random Field model). This kind of method generates sentences that are syntactically correct. The second category retrieves similar captioned images, and generates new descriptions by generalizing and re-composing the retrieved captions (Kuznetsova et al. (2014)). The third category of methods, which is more related to our method, learns a probability density over the space of multimodal inputs (i.e. sentences and images), using for example, Deep Boltzmann Machines (Srivastava & Salakhutdinov (2012)), and topic models (Barnard et al. (2003); Jia et al. (2011)). They generate sentences with richer and more flexible structure than the first group. The probability of generating sentences using the model can serve as the affinity metric for retrieval. Our method falls into this category. More closely related to our tasks and method is the work of Kiros et al. (2014b), which is built on a Log-BiLinear model (Mnih & Hinton (2007)) and use AlexNet to extract visual features. It needs a fixed length of context (i.e. five words), whereas in our model, the temporal context is stored in a recurrent architecture, which allows arbitrary context length. Shortly after Mao et al. (2014), several papers appear with record breaking results (e.g. Kiros et al. (2014a); Karpathy & Fei-Fei (2014); Vinyals et al. (2014); Donahue et al.", "startOffset": 49, "endOffset": 1403}, {"referenceID": 5, "context": "(2014); Donahue et al. (2014); Fang et al.", "startOffset": 8, "endOffset": 30}, {"referenceID": 5, "context": "(2014); Donahue et al. (2014); Fang et al. (2014); Chen & Zitnick (2014)).", "startOffset": 8, "endOffset": 50}, {"referenceID": 5, "context": "(2014); Donahue et al. (2014); Fang et al. (2014); Chen & Zitnick (2014)).", "startOffset": 8, "endOffset": 73}, {"referenceID": 30, "context": "the one-hot representation, which is binary and has the same dimension as the vocabulary size with only one non-zero element) Mikolov et al. (2010). y(t) can be calculated as follows: x(t) = [w(t) r(t\u2212 1)]; r(t) = f1(U \u00b7 x(t)); y(t) = g1(V \u00b7 r(t)); (1) where x(t) is a vector that concatenates w(t) and r(t\u22121), f1(.", "startOffset": 126, "endOffset": 148}, {"referenceID": 30, "context": "the one-hot representation, which is binary and has the same dimension as the vocabulary size with only one non-zero element) Mikolov et al. (2010). y(t) can be calculated as follows: x(t) = [w(t) r(t\u2212 1)]; r(t) = f1(U \u00b7 x(t)); y(t) = g1(V \u00b7 r(t)); (1) where x(t) is a vector that concatenates w(t) and r(t\u22121), f1(.) and g1(.) are element-wise sigmoid and softmax function respectively, and U, V are weights which will be learned. The size of the RNN is adaptive to the length of the input sequence. The recurrent layers connect the sub-networks in different time frames. Accordingly, when we do backpropagation, we need to propagate the error through recurrent connections back in time (Rumelhart et al. (1988)).", "startOffset": 126, "endOffset": 712}, {"referenceID": 18, "context": "Most of the sentence-image multimodal models (Karpathy et al. (2014); Frome et al.", "startOffset": 46, "endOffset": 69}, {"referenceID": 9, "context": "(2014); Frome et al. (2013); Socher et al.", "startOffset": 8, "endOffset": 28}, {"referenceID": 9, "context": "(2014); Frome et al. (2013); Socher et al. (2014); Kiros et al.", "startOffset": 8, "endOffset": 50}, {"referenceID": 9, "context": "(2014); Frome et al. (2013); Socher et al. (2014); Kiros et al. (2014b)) use pre-computed word embedding vectors as the initialization of their model.", "startOffset": 8, "endOffset": 72}, {"referenceID": 9, "context": "(2014); Frome et al. (2013); Socher et al. (2014); Kiros et al. (2014b)) use pre-computed word embedding vectors as the initialization of their model. In contrast, we randomly initialize our word embedding layers and learn them from the training data. We show that this random initialization is sufficient for our architecture to generate the state-of-the-art result. We treat the activation of the word embedding layer II (see Figure 2(b)) as the final word representation, which is one of the three direct inputs of the multimodal layer. After the two word embedding layers, we have a recurrent layer with 256 dimensions. The calculation of the recurrent layer is slightly different from the calculation for the simple RNN. Instead of concatenating the word representation at time t (denoted as w(t)) and the recurrent layer activation at time t\u2212 1 (denoted as r(t\u2212 1)), we first map r(t\u2212 1) into the same vector space as w(t) and add them together: r(t) = f2(Ur \u00b7 r(t\u2212 1) +w(t)); (2) where \u201c+\u201d represents element-wise addition. We set f2(.) to be the Rectified Linear Unit (ReLU), inspired by its the recent success when training very deep structure in computer vision field (Nair & Hinton (2010); Krizhevsky et al.", "startOffset": 8, "endOffset": 1200}, {"referenceID": 9, "context": "(2014); Frome et al. (2013); Socher et al. (2014); Kiros et al. (2014b)) use pre-computed word embedding vectors as the initialization of their model. In contrast, we randomly initialize our word embedding layers and learn them from the training data. We show that this random initialization is sufficient for our architecture to generate the state-of-the-art result. We treat the activation of the word embedding layer II (see Figure 2(b)) as the final word representation, which is one of the three direct inputs of the multimodal layer. After the two word embedding layers, we have a recurrent layer with 256 dimensions. The calculation of the recurrent layer is slightly different from the calculation for the simple RNN. Instead of concatenating the word representation at time t (denoted as w(t)) and the recurrent layer activation at time t\u2212 1 (denoted as r(t\u2212 1)), we first map r(t\u2212 1) into the same vector space as w(t) and add them together: r(t) = f2(Ur \u00b7 r(t\u2212 1) +w(t)); (2) where \u201c+\u201d represents element-wise addition. We set f2(.) to be the Rectified Linear Unit (ReLU), inspired by its the recent success when training very deep structure in computer vision field (Nair & Hinton (2010); Krizhevsky et al. (2012)).", "startOffset": 8, "endOffset": 1226}, {"referenceID": 9, "context": "(2014); Frome et al. (2013); Socher et al. (2014); Kiros et al. (2014b)) use pre-computed word embedding vectors as the initialization of their model. In contrast, we randomly initialize our word embedding layers and learn them from the training data. We show that this random initialization is sufficient for our architecture to generate the state-of-the-art result. We treat the activation of the word embedding layer II (see Figure 2(b)) as the final word representation, which is one of the three direct inputs of the multimodal layer. After the two word embedding layers, we have a recurrent layer with 256 dimensions. The calculation of the recurrent layer is slightly different from the calculation for the simple RNN. Instead of concatenating the word representation at time t (denoted as w(t)) and the recurrent layer activation at time t\u2212 1 (denoted as r(t\u2212 1)), we first map r(t\u2212 1) into the same vector space as w(t) and add them together: r(t) = f2(Ur \u00b7 r(t\u2212 1) +w(t)); (2) where \u201c+\u201d represents element-wise addition. We set f2(.) to be the Rectified Linear Unit (ReLU), inspired by its the recent success when training very deep structure in computer vision field (Nair & Hinton (2010); Krizhevsky et al. (2012)). This differs from the simple RNN where the sigmoid function is adopted (see Section 3.1). ReLU is faster, and harder to saturate or overfit the data than non-linear functions like the sigmoid. When the backpropagation through time (BPTT) is conducted for the RNN with sigmoid function, the vanishing or exploding gradient problem appears since even the simplest RNN model can have a large temporal depth 3. Previous work (Mikolov et al. (2010; 2011)) use heuristics, such as the truncated BPTT, to avoid this problem. The truncated BPTT stops the BPTT after k time steps, where k is a hand-defined hyperparameter. Because of the good properties of ReLU, we do not need to stop the BPTT at an early stage, which leads to better and more efficient utilization of the data than the truncated BPTT. After the recurrent layer, we set up a 512 dimensional multimodal layer that connects the language model part and the vision part of the m-RNN model (see Figure 2(b)). This layer has three inputs: the word-embedding layer II, the recurrent layer and the image representation. For the image representation, here we use the activation of the 7th layer of AlexNet (Krizhevsky et al. (2012)) or 15 layer of VggNet (Simonyan & Zisserman (2014)), though our framework can use any image features.", "startOffset": 8, "endOffset": 2410}, {"referenceID": 9, "context": "(2014); Frome et al. (2013); Socher et al. (2014); Kiros et al. (2014b)) use pre-computed word embedding vectors as the initialization of their model. In contrast, we randomly initialize our word embedding layers and learn them from the training data. We show that this random initialization is sufficient for our architecture to generate the state-of-the-art result. We treat the activation of the word embedding layer II (see Figure 2(b)) as the final word representation, which is one of the three direct inputs of the multimodal layer. After the two word embedding layers, we have a recurrent layer with 256 dimensions. The calculation of the recurrent layer is slightly different from the calculation for the simple RNN. Instead of concatenating the word representation at time t (denoted as w(t)) and the recurrent layer activation at time t\u2212 1 (denoted as r(t\u2212 1)), we first map r(t\u2212 1) into the same vector space as w(t) and add them together: r(t) = f2(Ur \u00b7 r(t\u2212 1) +w(t)); (2) where \u201c+\u201d represents element-wise addition. We set f2(.) to be the Rectified Linear Unit (ReLU), inspired by its the recent success when training very deep structure in computer vision field (Nair & Hinton (2010); Krizhevsky et al. (2012)). This differs from the simple RNN where the sigmoid function is adopted (see Section 3.1). ReLU is faster, and harder to saturate or overfit the data than non-linear functions like the sigmoid. When the backpropagation through time (BPTT) is conducted for the RNN with sigmoid function, the vanishing or exploding gradient problem appears since even the simplest RNN model can have a large temporal depth 3. Previous work (Mikolov et al. (2010; 2011)) use heuristics, such as the truncated BPTT, to avoid this problem. The truncated BPTT stops the BPTT after k time steps, where k is a hand-defined hyperparameter. Because of the good properties of ReLU, we do not need to stop the BPTT at an early stage, which leads to better and more efficient utilization of the data than the truncated BPTT. After the recurrent layer, we set up a 512 dimensional multimodal layer that connects the language model part and the vision part of the m-RNN model (see Figure 2(b)). This layer has three inputs: the word-embedding layer II, the recurrent layer and the image representation. For the image representation, here we use the activation of the 7th layer of AlexNet (Krizhevsky et al. (2012)) or 15 layer of VggNet (Simonyan & Zisserman (2014)), though our framework can use any image features.", "startOffset": 8, "endOffset": 2462}, {"referenceID": 26, "context": ") is the element-wise scaled hyperbolic tangent function (LeCun et al. (2012)):", "startOffset": 58, "endOffset": 78}, {"referenceID": 21, "context": "This is equivalent to the perplexity-based image retrieval in Kiros et al. (2014b).", "startOffset": 62, "endOffset": 83}, {"referenceID": 21, "context": "To solve this problem, Kiros et al. (2014b) uses the perplexity of a sentence conditioned on the averaged image feature across the training set as the reference perplexity to normalize the original perplexity.", "startOffset": 23, "endOffset": 44}, {"referenceID": 21, "context": "To solve this problem, Kiros et al. (2014b) uses the perplexity of a sentence conditioned on the averaged image feature across the training set as the reference perplexity to normalize the original perplexity. Different from them, we use the normalized probability where the normalization factor is the marginal probability of w 1:L: P (w 1:L|I)/P (w 1:L); P (w 1:L) = \u2211 I\u2032P (w D 1:L|I \u2032 ) \u00b7 P (I \u2032 ) (7) where w 1:L denotes the sentence in the dataset, I Q denotes the query image, and I \u2032 are images sampled from the training set. We approximate P (I \u2032 ) by a constant and ignore this term. This strategy leads to a much better performance than that in Kiros et al. (2014b) in the experiments.", "startOffset": 23, "endOffset": 676}, {"referenceID": 20, "context": "For the vision part, we use the pre-trained AlexNet (Krizhevsky et al. (2012)) or the VggNet (Simonyan & Zisserman (2014)) on ImageNet dataset (Russakovsky et al.", "startOffset": 53, "endOffset": 78}, {"referenceID": 20, "context": "For the vision part, we use the pre-trained AlexNet (Krizhevsky et al. (2012)) or the VggNet (Simonyan & Zisserman (2014)) on ImageNet dataset (Russakovsky et al.", "startOffset": 53, "endOffset": 122}, {"referenceID": 20, "context": "For the vision part, we use the pre-trained AlexNet (Krizhevsky et al. (2012)) or the VggNet (Simonyan & Zisserman (2014)) on ImageNet dataset (Russakovsky et al. (2014)).", "startOffset": 53, "endOffset": 170}, {"referenceID": 18, "context": "Recently, Karpathy et al. (2014) show that using the RCNN object detection results (Girshick et al.", "startOffset": 10, "endOffset": 33}, {"referenceID": 10, "context": "(2014) show that using the RCNN object detection results (Girshick et al. (2014)) combined with the AlexNet features performs better than simply treating the image as a whole frame.", "startOffset": 58, "endOffset": 81}, {"referenceID": 10, "context": "(2014) show that using the RCNN object detection results (Girshick et al. (2014)) combined with the AlexNet features performs better than simply treating the image as a whole frame. In the experiments, we show that our method performs much better than Karpathy et al. (2014) when the same image features are used, and is better than or comparable to their results even when they use more sophisticated features based on object detection.", "startOffset": 58, "endOffset": 275}, {"referenceID": 11, "context": "We test our method on four benchmark datasets with sentence level annotations: IAPR TC-12 (Grubinger et al. (2006)), Flickr 8K (Rashtchian et al.", "startOffset": 91, "endOffset": 115}, {"referenceID": 11, "context": "We test our method on four benchmark datasets with sentence level annotations: IAPR TC-12 (Grubinger et al. (2006)), Flickr 8K (Rashtchian et al. (2010)), Flickr 30K (Young et al.", "startOffset": 91, "endOffset": 153}, {"referenceID": 11, "context": "We test our method on four benchmark datasets with sentence level annotations: IAPR TC-12 (Grubinger et al. (2006)), Flickr 8K (Rashtchian et al. (2010)), Flickr 30K (Young et al. (2014)) and MS COCO (Lin et al.", "startOffset": 91, "endOffset": 187}, {"referenceID": 11, "context": "We test our method on four benchmark datasets with sentence level annotations: IAPR TC-12 (Grubinger et al. (2006)), Flickr 8K (Rashtchian et al. (2010)), Flickr 30K (Young et al. (2014)) and MS COCO (Lin et al. (2014)).", "startOffset": 91, "endOffset": 219}, {"referenceID": 11, "context": "We test our method on four benchmark datasets with sentence level annotations: IAPR TC-12 (Grubinger et al. (2006)), Flickr 8K (Rashtchian et al. (2010)), Flickr 30K (Young et al. (2014)) and MS COCO (Lin et al. (2014)). IAPR TC-12. This dataset consists of around 20,000 images taken from different locations around the world. It contains images of different sports and actions, people, animals, cities, landscapes, etc. For each image, it provides at least one sentence annotation. On average, there are about 1.7 sentence annotations for one image. We adopt the standard separation of training and testing set as previous works (Guillaumin et al. (2010); Kiros et al.", "startOffset": 91, "endOffset": 657}, {"referenceID": 11, "context": "We test our method on four benchmark datasets with sentence level annotations: IAPR TC-12 (Grubinger et al. (2006)), Flickr 8K (Rashtchian et al. (2010)), Flickr 30K (Young et al. (2014)) and MS COCO (Lin et al. (2014)). IAPR TC-12. This dataset consists of around 20,000 images taken from different locations around the world. It contains images of different sports and actions, people, animals, cities, landscapes, etc. For each image, it provides at least one sentence annotation. On average, there are about 1.7 sentence annotations for one image. We adopt the standard separation of training and testing set as previous works (Guillaumin et al. (2010); Kiros et al. (2014b)) with 17,665 images for training and 1962 images for testing.", "startOffset": 91, "endOffset": 679}, {"referenceID": 19, "context": "We follow the previous work (Karpathy et al. (2014)) which used 1,000 images for testing.", "startOffset": 29, "endOffset": 52}, {"referenceID": 31, "context": "B-1, B-2, B-3, and B-4) (Papineni et al. (2002)) as the evaluation metrics.", "startOffset": 25, "endOffset": 48}, {"referenceID": 31, "context": "B-1, B-2, B-3, and B-4) (Papineni et al. (2002)) as the evaluation metrics. BLEU scores were originally designed for automatic machine translation where they rate the quality of a translated sentences given several reference sentences. Similarly, we can treat the sentence generation task as the \u201ctranslation\u201d of the content of images to sentences. BLEU remains the standard evaluation metric for sentence generation methods for images, though it has drawbacks. For some images, the reference sentences might not contain all the possible descriptions in the image and BLEU might penalize some correctly generated sentences. Please see more details of the calculation of BLEU scores for this task in the supplementary material section 10.3 5. Sentence Retrieval and Image Retrieval. We adopt the same evaluation metrics as previous works (Socher et al. (2014); Frome et al.", "startOffset": 25, "endOffset": 859}, {"referenceID": 9, "context": "(2014); Frome et al. (2013); Karpathy et al.", "startOffset": 8, "endOffset": 28}, {"referenceID": 9, "context": "(2014); Frome et al. (2013); Karpathy et al. (2014)) for both the tasks of sentences retrieval and image retrieval.", "startOffset": 8, "endOffset": 52}, {"referenceID": 9, "context": "(2014); Frome et al. (2013); Karpathy et al. (2014)) for both the tasks of sentences retrieval and image retrieval. We use R@K (K = 1, 5, 10) as the measurement. R@K is the recall rate of a correctly retrieved groundtruth given top K candidates. Higher R@K usually means better retrieval performance. Since we care most about the top-ranked retrieved results, the R@K scores with smaller K are more important. The Med r is another metric we use, which is the median rank of the first retrieved groundtruth sentence or image. Lower Med r usually means better performance. For IAPR TC-12 datasets, we use additional evaluation metrics to conduct a fair comparison with previous work (Kiros et al. (2014b)).", "startOffset": 8, "endOffset": 703}, {"referenceID": 21, "context": "To conduct a fair comparison, we follow the same experimental settings of Kiros et al. (2014b) to calculate the BLEU scores and perplexity.", "startOffset": 74, "endOffset": 95}, {"referenceID": 0, "context": "html The BLEU outputted by our implementation is slightly lower than the recently released MS COCO caption evaluation toolbox (Chen et al. (2015)) because of different tokenization methods of the sentences.", "startOffset": 127, "endOffset": 146}, {"referenceID": 0, "context": "html The BLEU outputted by our implementation is slightly lower than the recently released MS COCO caption evaluation toolbox (Chen et al. (2015)) because of different tokenization methods of the sentences. We reevaluate our method using the toolbox in the current version of the paper. Kiros et al. (2014b) further improved their results after the publication.", "startOffset": 127, "endOffset": 308}, {"referenceID": 19, "context": "064 MLBLB-AlexNet, Kiros et al. (2014b) 9.", "startOffset": 19, "endOffset": 40}, {"referenceID": 19, "context": "064 MLBLB-AlexNet, Kiros et al. (2014b) 9.86 0.393 0.211 0.112 MLBLF-AlexNet, Kiros et al. (2014b) 9.", "startOffset": 19, "endOffset": 99}, {"referenceID": 13, "context": "115 Gupta et al. (2012) - 0.", "startOffset": 4, "endOffset": 24}, {"referenceID": 13, "context": "115 Gupta et al. (2012) - 0.15 0.06 0.01 Gupta & Mannem (2012) - 0.", "startOffset": 4, "endOffset": 63}, {"referenceID": 21, "context": "We also adopt additional evaluation metrics to compare our method with Kiros et al. (2014b), see supplementary material Section 10.", "startOffset": 71, "endOffset": 92}, {"referenceID": 37, "context": "We compare our model with several state-ofthe-art methods: SDT-RNN (Socher et al. (2014)), DeViSE (Frome et al.", "startOffset": 68, "endOffset": 89}, {"referenceID": 9, "context": "(2014)), DeViSE (Frome et al. (2013)), DeepFE (Karpathy et al.", "startOffset": 17, "endOffset": 37}, {"referenceID": 9, "context": "(2014)), DeViSE (Frome et al. (2013)), DeepFE (Karpathy et al. (2014)) with various image representations.", "startOffset": 17, "endOffset": 70}, {"referenceID": 9, "context": "(2014)), DeViSE (Frome et al. (2013)), DeepFE (Karpathy et al. (2014)) with various image representations. Our model outperforms these methods by a large margin when using the same image representation (e.g. AlexNet). We also list the performance of methods using more sophisticated features in Table 3. \u201c-avg-RCNN\u201d denotes methods with features of the average CNN activation of all objects above a detection confidence threshold. DeepFE-RCNN Karpathy et al. (2014) uses a fragment mapping strategy to better exploit the object detection results.", "startOffset": 17, "endOffset": 466}, {"referenceID": 7, "context": "We compare our method with several state-of-the-art methods in these two recently released dataset (Note that the last six methods appear very recently, we use the results reported in their papers): DeViSE (Frome et al. (2013)), DeepFE (Karpathy et al.", "startOffset": 207, "endOffset": 227}, {"referenceID": 7, "context": "We compare our method with several state-of-the-art methods in these two recently released dataset (Note that the last six methods appear very recently, we use the results reported in their papers): DeViSE (Frome et al. (2013)), DeepFE (Karpathy et al. (2014)), MNLM (Kiros et al.", "startOffset": 207, "endOffset": 260}, {"referenceID": 7, "context": "We compare our method with several state-of-the-art methods in these two recently released dataset (Note that the last six methods appear very recently, we use the results reported in their papers): DeViSE (Frome et al. (2013)), DeepFE (Karpathy et al. (2014)), MNLM (Kiros et al. (2014a)), DMSM (Fang et al.", "startOffset": 207, "endOffset": 289}, {"referenceID": 6, "context": "(2014a)), DMSM (Fang et al. (2014)), NIC (Vinyals et al.", "startOffset": 16, "endOffset": 35}, {"referenceID": 6, "context": "(2014a)), DMSM (Fang et al. (2014)), NIC (Vinyals et al. (2014)), LRCN (Donahue et al.", "startOffset": 16, "endOffset": 64}, {"referenceID": 5, "context": "(2014)), LRCN (Donahue et al. (2014)), RVR (Chen & Zitnick (2014)), and DeepVS (Karpathy & Fei-Fei (2014)).", "startOffset": 15, "endOffset": 37}, {"referenceID": 5, "context": "(2014)), LRCN (Donahue et al. (2014)), RVR (Chen & Zitnick (2014)), and DeepVS (Karpathy & Fei-Fei (2014)).", "startOffset": 15, "endOffset": 66}, {"referenceID": 5, "context": "(2014)), LRCN (Donahue et al. (2014)), RVR (Chen & Zitnick (2014)), and DeepVS (Karpathy & Fei-Fei (2014)).", "startOffset": 15, "endOffset": 106}, {"referenceID": 0, "context": "We also validate our method on the test set of MS COCO by their evaluation server (Chen et al. (2015)).", "startOffset": 83, "endOffset": 102}, {"referenceID": 3, "context": "Recently, Devlin et al. (2015b) proposed a nearest neighbor approach that retrieves the captions of the k nearest images in the training set, ranks these captions according to the consensus of the caption w.", "startOffset": 10, "endOffset": 32}, {"referenceID": 3, "context": "Recently, Devlin et al. (2015b) proposed a nearest neighbor approach that retrieves the captions of the k nearest images in the training set, ranks these captions according to the consensus of the caption w.r.t. to the rest of the captions, and output the top ranked one. Inspired by this method, we first adopt the m-RNN model with the transposed weight sharing strategy (Mao et al. (2015), denoted as m-RNN-shared) to generate n hypotheses using a beam search scheme.", "startOffset": 10, "endOffset": 391}, {"referenceID": 3, "context": "Recently, Devlin et al. (2015b) proposed a nearest neighbor approach that retrieves the captions of the k nearest images in the training set, ranks these captions according to the consensus of the caption w.r.t. to the rest of the captions, and output the top ranked one. Inspired by this method, we first adopt the m-RNN model with the transposed weight sharing strategy (Mao et al. (2015), denoted as m-RNN-shared) to generate n hypotheses using a beam search scheme. Specifically, we keep the n best candidates in the sentence generation process until the model generates the end sign wend. These n best candidates are approximately the n most probable sentences generated by the model, and can be treated as the n hypotheses. In our experiments, we set n = 10 since it gives us a diversified set of hypotheses without too much outliers on our validation set. 8 After generating the hypotheses of a target image, we retrieve its nearest neighbors in the image feature space on the training set (see details in Section 8.1). Then we calculate the \u201cconsensus\u201d scores (Devlin et al. (2015a)) of the hypotheses w.", "startOffset": 10, "endOffset": 1091}, {"referenceID": 3, "context": "We follow Devlin et al. (2015a) to calculate the consensus score of a hypotheses.", "startOffset": 10, "endOffset": 32}, {"referenceID": 3, "context": "We follow Devlin et al. (2015a) to calculate the consensus score of a hypotheses. The difference is that Devlin et al. (2015a) treat the captions of the k nearest neighbor images as the hypotheses while our hypotheses are generated by the m-RNN model.", "startOffset": 10, "endOffset": 127}, {"referenceID": 36, "context": "The similarity between a hypothesis and one of its nearest neighbor reference captions is defined by a sentence-level BLEU score (Papineni et al. (2002)) or a sentence-level CIDEr (Vedantam et al.", "startOffset": 130, "endOffset": 153}, {"referenceID": 36, "context": "The similarity between a hypothesis and one of its nearest neighbor reference captions is defined by a sentence-level BLEU score (Papineni et al. (2002)) or a sentence-level CIDEr (Vedantam et al. (2014)).", "startOffset": 130, "endOffset": 204}], "year": 2015, "abstractText": "In this paper, we present a multimodal Recurrent Neural Network (m-RNN) model for generating novel image captions. It directly models the probability distribution of generating a word given previous words and an image. Image captions are generated according to this distribution. The model consists of two sub-networks: a deep recurrent neural network for sentences and a deep convolutional network for images. These two sub-networks interact with each other in a multimodal layer to form the whole m-RNN model. The effectiveness of our model is validated on four benchmark datasets (IAPR TC-12, Flickr 8K, Flickr 30K and MS COCO). Our model outperforms the state-of-the-art methods. In addition, we apply the m-RNN model to retrieval tasks for retrieving images or sentences, and achieves significant performance improvement over the state-of-the-art methods which directly optimize the ranking objective function for retrieval. The project page of this work is: www.stat.ucla.edu/ \u0303junhua.mao/m-RNN.html. 1", "creator": "LaTeX with hyperref package"}}}