{"id": "1505.02487", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "11-May-2015", "title": "A Constraint Programming Approach for Non-Preemptive Evacuation Scheduling", "abstract": "Large-scale controlled evacuations require emergency services to select evacuation routes, decide departure times, and mobilize resources to issue orders, all under strict time constraints. Existing algorithms almost always allow for preemptive evacuation schedules, which are less desirable in practice. This paper proposes, for the first time, a constraint-based scheduling model that optimizes the evacuation flow rate (number of vehicles sent at regular time intervals) and evacuation phasing of widely populated areas, while ensuring a nonpreemptive evacuation for each residential zone. The first iteration of the approach, by creating a model that allows evacuation planning to be more flexible, incorporates information from the data collected by the public and the general public. The second model incorporates information from the public. The third model uses the latest available, non-refundable, non-reassured, non-substantial information from the public and has the potential to achieve high rates of evacuations. This paper provides additional details on how the system will operate and how it will operate for long, and it summarizes information about evacuation plans and their effect on the evacuation response. The paper was written on the assumption that evacuation planning was efficient and therefore was a \"natural\" way of preparing and responding to the disaster response. The results of the study are summarized in Table 1.\n\n\n\nThe study provides an initial and extensive review of evacuation planning. This paper is presented in detail at the end of this review. This paper was published in the October 14, 2015 issue of the Annual Meeting of the American Meteorological Society, at which time the authors were informed of the publication and would like to thank the authors for their hard work in the preparation of this paper.\n\nIn summary, these data provide useful information on evacuation planning in this study, and the potential for a significant improvement in the ability of evacuations to be handled in a disaster management manner.\nThe following studies were included in the final report of this paper.\nThe main study was the first study of a possible form of evacuations in the United States. This study of evacuation plans in the United States was completed in 1993, with the intent to evaluate the feasibility of planning a comprehensive evacuation plan in an emergency environment. The design was performed by analyzing the evacuation-plan history of the United States and the probability of a severe disaster. The authors considered the findings of this study and evaluated the information they were getting from the information collected by the public and the general public.\nStudy Participants\nParticipants were not eligible for any survey or data collection.\n", "histories": [["v1", "Mon, 11 May 2015 05:38:24 GMT  (151kb,D)", "http://arxiv.org/abs/1505.02487v1", "Submitted to the 21st International Conference on Principles and Practice of Constraint Programming (CP 2015). 15 pages + 1 reference page"]], "COMMENTS": "Submitted to the 21st International Conference on Principles and Practice of Constraint Programming (CP 2015). 15 pages + 1 reference page", "reviews": [], "SUBJECTS": "cs.AI", "authors": ["caroline even", "reas schutt", "pascal van hentenryck"], "accepted": false, "id": "1505.02487"}, "pdf": {"name": "1505.02487.pdf", "metadata": {"source": "CRF", "title": "A Constraint Programming Approach for Non-Preemptive Evacuation Scheduling", "authors": ["Caroline Even", "Andreas Schutt", "Pascal Van Hentenryck"], "emails": ["firstname.lastname@nicta.com.au"], "sections": [{"heading": null, "text": "Keywords: constraint-based evacuation scheduling - non-preemptive scheduling - phased evacuation - simultaneous evacuation - actionable plan - real-world operational constraints - network flow problem"}, {"heading": "1 Introduction", "text": "Evacuation planning is a critical part of the preparation and response to natural and man-made disasters. Evacuation planning assists evacuation agencies in mitigating the negative effects of a disaster, such as loss or harm to life, by providing them guidelines and operational evacuation procedures so that they can make informed decisions about whether, how and when to evacuate residents. In the case of controlled evacuations, evacuation agencies instruct each endangered resident to follow a specific evacuation route at a given departure time. To communicate this information in a timely fashion, evacuation planners must design plans which take into account operational constraints arising in actual evacuations. In particular, two critical challenges are the deployment of enough resources to give precise and timely evacuation instructions to the endangered population and the compliance of the endangered population to the evacuation orders. In practice, the control of an evacuation is achieved through a mobilization process, during ? NICTA is funded by the Australian Government through the Department of Communications\nand the Australian Research Council through the ICT Centre of Excellence Program.\nar X\niv :1\n50 5.\n02 48\n7v 1\n[ cs\n.A I]\n1 1\nM ay\nwhich mobilized resources are sent to each residential area in order to give instructions to endangered people. The number of mobilized resources determines the overall rate at which evacuees leave. Finally, to maximize the chances of compliance and success of a controlled evacuation, the evacuation and mobilization plans must be easy to deploy for evacuation agencies and should not leave, to the evacuees, uncontrolled alternative routes that would affect the evacuation negatively.\nSurprisingly, local authorities still primarly rely on expert knowledge and simple heuristics to design and execute evacuation plans, and rarely integrate human behavioral models in the process. This is partly explained by the limited availability of approaches producing evacuation plans that follow the current practice. Apart from a few exceptions [2,5,6,9,11,13] existing evacuation approaches rely on free-flow models which assume that evacuees can be dynamically routed in the transportation network [3,10,14]. These free-flow models however violate a desirable operational constraint in actual evacuation plans, i.e., the fact that all evacuees in a given residential zone should preferably follow the same evacuation route.\nRecently, a handful of studies considered evacuation plans where each residential area is assigned a single evacuation path. These studies define both a set of evacuation routes and a departure schedule. Huibregtse et al. [9] propose a two-stage algorithm that first generates a set of evacuation routes and feasible departure times, and then assigns a route and time to each evacuated area using an ant colony optimization algorithm. In subsequent work, the authors studied the robustness of the produced solution [7], and strategies to improve the compliance of evacuees [8]. Pillac et al. [13] first introduced the Conflict-based Path Generation (CPG) approach which was extended to contraflows by Even et al. [5]. CPG features a master problem which uses paths for each residential node to schedule the evacuation and a pricing problem which heuristically generates new paths addressing the conflicts in the evacuation schedule.\nThese evacuation algorithms however do not guarantee that evacuees will follow instructions. If the evacuation plan contains forks in the road, evacuees may decide to change their evacuation routes as the evacuation progresses. This issue is addressed in [1,6] which propose evacuation plans without forks. The resulting evacuation plan can be thought of as a forest of evacuation trees where each tree is rooted at a safe node (representing, say, an evacuation center) and with residential areas at the leaves. By closing roads or controlling intersections, these evacuation trees ensure the compliance of the evacuees and avoid congestions induced by drivers slowing down at a fork. Even et al. [6] produce such convergent evacuation plans by decomposing the evacuation problem in a tree-design problem and an evacuation scheduling problem. Andreas and Smith [1] developed a Benders decomposition algorithm that selects convergent evacuation routes that are robust to a set of disaster scenarios.\nAll of the approaches reviewed above allow preemption: The evacuation of a residential area can be interrupted and restarted arbitrarily. This is not desirable in practice, since such schedules will confuse both evacuees and emergency services, and will be hard to enforce. Non-preemptive schedules have been considered in [4,12] in rather different ways. In [4], a phased evacuation plan evacuates each area separately, guaranteeing that no vehicles from different areas travel on a same path at the same time. By definition, phased evacuation does not merge evacuation flows, which is motivated\nby empirical evidence that such merging can reduce the road network capacities. The algorithm in [12] is a column-generation approach for simultaneous evacuation, i.e., evacuations where multiple paths can share the same road segment at the same time. Each column represents the combination of a path, a departure time, and a response curve capturing the behavioral response of evacuees for each evacuation area. Here the flow rate of each evacuation area is restricted to pre-existing response curves, and columns are generated individually for each evacuation area. This column-generation approach requires a discretization of the evacuation horizon.\nThis paper proposes, for the first time, a constraint programming approach to generate non-preemptive evacuation schedules. It takes as input a set of evacuation routes, which are either chosen by emergency services or computed by an external algorithm. The constraint-based scheduling model associates a task with each residential area, uses decision variables for modeling the number of evacuees (i.e., the flow), the number of vehicles to be evacuated per time unit (i.e., the flow rate), and the starting time of the area evacuation; It also uses cumulative constraints to model the road capacities. In addition, the paper presents a decomposition scheme and dominance relationships that decrease the computational complexity by exploiting the problem structure. Contrary to [12], the constraint-programming model uses a decision variable for the flow rate of each evacuation area (instead of a fixed set of values) and avoids discretizing time. In contrast to [4], the constraint-programming model allows for simultaneous evacuation while satisfying practice-related constraints.\nThe constraint-programming model was applied on a real-life evacuation case study for the Hawkesbury-Nepean region in New South Wales, Australia. This region is a massive flood plain protected from a catchment area (the blue mountains) by the Warragamba dam. A major spill would create damages that may reach billions of dollars and require the evacuation of about 80,000 people. Preliminary experimental results indicate that the constraint-programming model can be used to generate non-preemptive schedules that are almost always within 5% of the optimal preemptive schedules generated in prior work. These results hold both for maximizing the number of evacuees for a given time horizon and for minimizing the clearance time (i.e., the earliest time when everyone is evacuated). These results are particularly interesting, given that the optimal preemptive solutions produce evacuation plans which are far from practical. Indeed, Fig. 1 shows the repartition of departure times for seven residential areas in the original HN80 instance using a preemptive schedule produced by the algorithm in [6]. Observe how departure times are widely distributed within the scheduling horizon, indicating that the plan makes heavy use of preemption and is virtually impossible to implement in practice. Finally, experimental results on the phased version of the algorithm indicate that phased evacuations are much less time effective, and should not be the preferred method for short-notice or no-notice evacuation.\nThe rest of this paper is organized as follows. Section 2 defines the problem. Section 3 presents the constraint-programming model, including the core model, the decomposition scheme, the dominance relationships, and the search procedure. Section 4 presents the experimental results. Section 5 concludes the paper."}, {"heading": "2 Problem Description", "text": "The Evacuation Planning Problem (EPP) was introduced by the authors in [11]. It is defined on a directed graph G = (N = E \u222a T \u222a S,A), where E , T , and S are the set of evacuation, transit, and safe nodes respectively, andA is the set of edges. The EPP is designed to respond to a disaster scenario, such as a flood, which may determine a time at which some edges become unavailable. Each evacuation node k \u2208 E is characterized by a number of evacuees dk, while each arc e is associated with a triple (te, ue, be), where te is the travel time, ue is the capacity, and be is the time at which the arc becomes unavailable. We denote by e.tail (resp. e.head) the tail (resp. head) of an edge e. The problem is defined over a scheduling horizon H, which depends on the disaster forecast and the time to mobilize resources. The objective is either (1) to maximize the total number of evacuees reaching a safe node (for a fixed horizon) or (2) to minimize the time at which the last evacuee reaches a safe zone (for a variable horizon). In the following, we assume that the evacuation is carried out using private vehicles, but the proposed approach could be adapted to other contexts, such as building evacuation.\nThis paper extends the EPP to the non-preemptive (simultaneous) evacuation planning problem (NEPP) and the non-preemptive phased evacuation planning problem (NPEPP). Both are designed to assist evacuation planners with the scheduling of fully controlled evacuations. Given a set of evacuation paths, the NEPP decides the start time, flow, and flow rate at which vehicles are evacuating each individual evacuation node, ensuring that the evacuation operates without interruption. The NEPP allows several evacuation nodes to use the same road segments at the same time. In contrast, the NPEPP guarantees that no two evacuation nodes use the same road segment at the same time. The practical interest of the NPEPP is to evacuate designated priority areas quickly and efficiently, by limiting the risk of any delay caused by slowdown or traffic accidents which may result from merging traffic.\nFormally, an evacuation plan associates with each evacuation area k \u2208 E exactly one evacuation path pk which is used to route all residents in k to a same safe node. Let \u2126pk = \u22c3 k\u2208E pk the set of evacuation paths for all evacuations nodes in E . The characteristics of a path pk are as follows. We denote by Apk (resp. Npk ) the set of edges (resp. nodes) of pk and by E(e) the set of evacuation areas whose path contains\nedge e, i.e., e \u2208 Apk . The travel time tk,n between the evacuation area k and a node n \u2208 Npk is equal to the sum of the path edges travel times separating k from n and tpk is the total travel time between the start and end of pk. The path capacity upk is the minimum edge capacity of pk. The last possible departure time LASTDEP(pk) along path pk, i.e., the latest time at which a vehicle can depart on pk without being blocked, is easily derived from all tk,n(n \u2208 Npk) and the time be at which each path edge e \u2208 Apk becomes unavailable. If none of the path edges e \u2208 Apk are cut by the disaster then LASTDEP(pk) = \u221e; otherwise LASTDEP(pk) = mine\u2208Apk (be \u2212 tk,e.head). Note that the latest path departure time only depends on the path characteristics and not on H."}, {"heading": "3 The Constraint-Programming Model", "text": "The NEPP and NPEPP are two optimization problems whose objective is either to maximize the number of evacuees or to minimize the overall evacuation clearance time. The key contribution of this paper is to model them as constraint-based scheduling problems and to use CP to solve them. This modeling avoids time dicretization and makes it possible to design non-preemptive plans with variable flow rates. This section presents the constraint-based scheduling models, including their decision variables, their domains, and the constraints common to both problems. This section then presents the constraintbased scheduling models for the NEPP in Sect. ?? and for the NPEPP in Sect. ??."}, {"heading": "3.1 Decision Variables", "text": "The models associate with each evacuation area k \u2208 E the following decision variables: the total flow of vehicles evacuated FLOWk (i.e., the number of vehicles evacuated from area k), the flow rate \u03bbFLOWk representing the number of vehicles departing per unit of time, the evacuation start time STARTk (i.e., the time at which the first vehicle is evacuated from area k), the evacuation end time ENDk, and the total evacuation duration time DURk. The last three decision variables are encapsulated into a task variable TASKk which links the evacuation start time, the evacuation end time, and the evacuation duration and ensures that STARTk + DURk = ENDk.\nThe decision variables range over natural numbers. The flow and flow rates can only be non-negative and integral since a number of vehicles is a whole entity. The models use a time step of one minute for flow rates and task variables which, from an operational standpoint, is a very fine level of granularity: Any time step of finer granularity would only be too complex to handle in practice. The domains of the decision variables are defined as follows. The flow variable is at most equal to the evacuation demand: FLOWk \u2208 [0, dk] where [a, b] = {v \u2208 N | a \u2264 v \u2264 b}. The flow-rate variable has an upper bound which is the minimum of the evacuation demand and the path capacity rounded down to the nearest integer, i.e., \u03bbFLOWk \u2208 [1,min(dk, bupkc)]. The upper bounds for the evacuation start time and evacuation end time are the smallest of the scheduling horizon minus the path travel time, which is rounded up to the nearest integer, and the latest path departure time, i.e., STARTk \u2208 [0,min(H\u2212dtpke, bLASTDEP(pk)c)]. The evacuation of an area k can last at most dk minutes assuming the flow rate is set to\none vehicle per minute: DURk \u2208 [0, dk]. Note that the lower bound for duration is zero in order to capture the possibility of not evacuating the area."}, {"heading": "3.2 Constraints", "text": "The NEPP requires to schedule the flow of evacuees coming from each evacuation area k on their respective path pk such that, at any instant t, the flow sent on all paths through the network does not exceed the network edges capacities. These flow constraints can be expressed in terms of cumulative constraints. Consider an edge e and the set E(e) of evacuation areas whose evacuation paths use e. For each evacuation area k \u2208 E(e), the model introduces a new task TASKek which is a view over task TASKk satisfying:\nSTARTek = STARTk + tk,e.tail , DUR e k = DURk , END e k = ENDk + tk,e.tail .\nThis new task variable accounts for the number of vehicles from evacuation area k traveling on edge e at any time during the scheduling horizon. Note that tk,e.tail is computed as the sum of the travel times on each edge, each rounded up to the next integer for consistency with the domains of the decision variables. While this approximation may slightly overestimates travel times, it also counterbalances possible slowdowns in real-life traffic, which are not taken into account in this model.\nThe constraint-based scheduling model for the NEPP introduces the following cumulative constraint for edge e:\ncumulative({(TASKek, \u03bbFLOWk) | k \u2208 E(e)}, ue).\nThe constraint-based scheduling model for the NPEPP introduces a disjunctive constraint for edge e instead:\ndisjunctive({TASKek | k \u2208 E(e)}). (1)"}, {"heading": "3.3 The Constraint-Based Scheduling Models", "text": "We are now in a position to present a constraint-based scheduling model for NEPP-MF: max OBJECTIVE = \u2211 k\u2208E FLOWk (2)\ns.t. FLOWUBk = DURk \u00d7 \u03bbFLOWk \u2200k \u2208 E (3) FLOWk = min(FLOW UB k , dk) \u2200k \u2208 E (4)\ncumulative({(TASKek, \u03bbFLOWk) | k \u2208 E(e)}, ue) \u2200e \u2208 A (5)\nThe objective (2) maximizes the number of evacuated vehicles. Constraints (3) and (4) link the flow, flow rate, and evacuation duration together, by ensuring that the total flow for each area k is the minimum of the evacuation demand and the flow rate multiplied by the evacuation duration. They use an auxiliary variable FLOWUBk denoting an upper bound on the number of vehicles evacuated from area k. Constraints (5) impose the capacity constraints.\nThe model NEPP-SAT is the satisfaction problem version of NEPP-MF where the objective (2) has been removed and the constraint\nFLOWk = dk \u2200k \u2208 E (6)\nhas been added to ensure that every vehicle is evacuated. To minimize clearance time, i.e., to find the minimal scheduling horizon such that all vehicles are evacuated, it suffices to add the objective function to NEPP-SAT\nmin OBJECTIVE = max k\u2208E (ENDk + tpk) (7)\nand to relax the start and end time domains to [0,HUB] whereHUB is an upper bound on the horizon required to evacuate all vehicles to a shelter. The resulting constraint-based scheduling model is denoted by NEPP-CT.\nA constraint-programming formulation NPEPP-MF of the non-preemptive phased evacuation planning problem can be obtained from NEPP-MF by replacing (5) with (1), which prevents the flows from two distinct origins to travel on the same edge at the same time. NPEPP-SAT, which is the satisfaction problem version of NPEPP-MF, is obtained by removing the objective (2) and adding the constraint (6). NPEPP-CT, which minimizes the evacuation clearance time, is obtained from NPEPP-SAT by adding the objective (7). Note that since the flow-rate bounds ensure that edges capacities are always respected in NPEPP, the flow-rate variable can be directly set to its upper bound to maximize evacuation efficiency. Hence, the following constraints are added to the NPEPP model:\n\u03bbFLOWk = min(dk, upk) \u2200k \u2208 E . (8)"}, {"heading": "3.4 Problem Decomposition", "text": "This section shows how the NEPP and NPEPP can be decomposed by understanding which paths compete for edges and/or how they relate to each other. In the following we introduce the path dependency relationship.\nDefinition 1. Two paths px and py are directly dependent, which is denoted by px4py , if and only if they share at least a common edge, i.e., Apx \u2229 Apy 6= \u2205.\nDefinition 2. Two paths px and pz are indirectly dependent if and only if \u00ac(px4pz) and there exists a sequence of directly dependent paths py1 , . . . , pyn such that px4py1 , pyn4pyz and py14py2 , . . . , pyn\u221214pyn .\nDefinition 3. Two paths px and py are dependent, which is denoted by px>py , if they are either directly dependent or indirectly dependent. Conversely, paths px and py are independent, which is denoted by px\u22a5py , if they are neither directly dependent nor indirectly dependent.\nObviously, the path dependency > forms an equivalence relationship, i.e., > is reflexive, symmetric, and transitive.\nThe key idea behind the decomposition is to partition the evacuation areas E into \u03a5 = {D0, . . . ,Dn} in such a way that any two paths, respectively from the set of evacuation areasDi andDj (0 \u2264 i < j \u2264 n), are independent. As a result, it is possible to solve the overall model by solving each subproblem Di (0 \u2264 i \u2264 n) independently and concurrently. Figure 2a illustrates two sets of evacuation nodes D0 = {x, y} and D1 = {z} where paths px and py are directly dependent and there are no indirectly dependent paths. Figure 2b illustrates a single set of evacuation nodes D = {x, y, z} where the set of paths {px, py} and {py , pz} are directly dependent, while the set of paths {px,pz} are indirectly dependent. We now formalize these concepts.\nDefinition 4. Let \u2126Dipk denote the paths of the set of nodes Di. Two sets D0 and D1 of evacuation areas are independent if and only if any two paths from \u2126D0pk and \u2126 D1 pk respectively are independent. They are dependent otherwise.\nTheorem 1. Let \u03a5 = {D0, . . . ,Dn} be a partition of E such that Di and Dj (0 \u2264 i < j \u2264 n) are independent. Then the NEPP and NPEPP can be solved by concatenating the solutions of their subproblems Di (0 \u2264 i \u2264 n).\nThe partition \u03a5 = {D0, . . . ,Dn} can be generated by an algorithm computing the strongly connected components of a graph. Let G\u2126pk be the directed graph consisting of the edges and vertices of all paths pk \u2208 \u2126pk and let Gu\u2126pk be its undirected counterpart, i.e., the graph obtained after ignoring the direction of all edges in G\u2126pk . The strongly connected components of Gu\u2126pk define the partition \u03a5 ."}, {"heading": "3.5 Dominance Relationships", "text": "This section shows how to exploit dominance relationships to simplify the constraintbased scheduling models. The key idea is to recognize that the capacity constraints of some edges are always guaranteed to be satisfied after introducing constraints on other particular edges.\nDefinition 5. Let A a set of edges and e, e\u2032 \u2208 A, e 6= e\u2032. Edge e dominates e\u2032, denoted by e > e\u2032, if and only if\n\u2013 For simultaneous evacuation, the capacity of e is less than or equal to the capacity of e\u2032: ue \u2264 ue\u2032 ; \u2013 The set of paths using e\u2032 is a subset of the set of paths using e: E(e\u2032) \u2286 E(e) ; \u2013 For non-convergent evacuation paths, the travel times for evacuation paths in E(e\u2032)\nbetween e and e\u2032 are the same.\nNote that two edges may be dominating each other. For this reason and without loss of generality, this paper breaks ties arbitrarily (e.g., by selecting the edge closer to a safe node as the dominating edge). Note also that the capacity condition is ignored for phased evacuation.\nTheorem 2. LetA> the set of dominating edges inA. We can safely substituteA> toA in (5) in NEPP-MF such that the cumulative constraints are only stated for dominating edges. Similar results hold for NEPP-CT/SAT, and for the disjunctive constraints in NPEPP-MF/CT/SAT."}, {"heading": "3.6 Additional Constraints to a Real-World Evacuation Scheduling Problem", "text": "The flexibility of the constraint-based evacuation scheduling approach allows to easily include many constraints appearing in real-world evacuation scheduling. For example, each flow rate variable domain may be restricted to a subset of values only, in order to account for the number of door-knocking resources available to schedule the evacuation [12]. Other real-world evacuation constraints may restrict departure times in order to wait for a more accurate prediction of an upcoming disaster or to restrict evacuation end times to ensure that the last vehicle has left a certain amount of time before the disaster strikes the evacuation area."}, {"heading": "3.7 Complexity of Phased Evacuations with Convergent Paths", "text": "When using convergent paths, phased evacuations may be solved in polynomial time.\nTheorem 3. Model NPEPP-MF can be solved in polynomial time for convergent paths if all evacuation paths share the same latest completion time at the safe node.\nProof (Sketch). Using the decomposition method and the dominance criterion, each subproblem with at least two evacuation paths includes exactly one dominating edge e which is part of every evacuation path. An optimal schedule can then be obtained in two steps. The first step builds a preemptive schedule by a sweep over the time starting from the minimal earliest start time of the tasks on e and ending before the shared completion time. For each point in time, it schedules one eligible task (if existing) with the largest flow rate (ties are broken arbitrarily) where a task is eligible if the point in time is not after its earliest start time on e and it has not been fully scheduled before that time. Note if a task is almost fully scheduled except the last evacuation batch then this step considers the actual flow rate of the last batch instead, which may be smaller than the task flow rate. This preemptive schedule is optimal as for each point in time, the unscheduled eligible tasks do not have an (actual) greater flow rate than the scheduled ones. The second step converts this optimal preemptive schedule to a\nnon-preemptive one by postponing tasks interrupting others until after the interrupted tasks are completed. This transformation does not change the flows and hence the nonpreemptive schedule has the same objective value as the preemptive schedule. ut"}, {"heading": "3.8 The Search Procedure", "text": "The search procedure considers each unassigned task in turn and assigns its underlying variables. A task TASKk is unassigned if the domain of any of its variables {STARTk, DURk, ENDk, FLOWk, \u03bbFLOWk} has more than one value. The search procedure selects an unassigned task TASKk and then branch on all its underlying variables until they all are assigned. Depending on the considered problem, the models use different heuristics to (1) find the next unassigned task and to (2) select the next task variable to branch on and the value to assign.\nFor NPEPP, the flow rate is directly set to the maximal value. The search strategy is determined by the problem objective as follows. If the objective maximizes the number of evacuees for a given scheduling horizonH, the search is divided into two steps. The first step selects a task with an unfixed duration and the highest remaining actual flow rate. If the lower bound on duration of the task is at least two time units less than its maximal duration then a minimal duration of the maximal duration minus 1 is imposed and a maximal duration of the maximal duration minus 2 on backtracking. Otherwise the search assigns duration in decreasing order starting with the largest value in its domain. The second step selects tasks according to their earliest start time and assigns a start time in increasing order.4 If the objective is to minimize the horizon H such that all vehicles are evacuated, then the search selects the next unassigned task with earliest start time by increasing order among all dominating edges, selecting the one with maximal flow rate to break ties, and to label the start time in increasing order.\nFor NEPP, the different search heuristics are as follow. For the choice (1), the strategy (1A) randomly selects an unassigned task, and performs geometric restarts when the number of backtracks equal to twice the number of variables in the model, using a growth factor of 1.5. The strategy (1B) consists in selecting the next unassigned task in decreasing order of evacuation demand for the dominating edge with the greatest number of tasks. For the choice (2), the strategy (2A) first labels the flow rate in increasing order, then the task start time also in increasing order and, finally, the flow in decreasing order. The strategy (2B) first labels the flow rate in decreasing order, then the flow in decreasing order again and, finally, the start time in increasing order."}, {"heading": "4 Experimental Results", "text": "This section reports experiments on a set of instances used in [6]. These instances are derived from a real-world case study: the evacuation of the Hawkesbury-Nepean (HN) floodplain. The HN evacuation graph contains 80 evacuated nodes, 5 safe nodes, 184 transit nodes, 580 edges and 38343 vehicles to evacuate. The experimental results also\n4 Note that the search procedure does not assume convergent paths or restrictions on the latest arrival times at the safe node.\nconsider a class of instances HN80-Ix using the HN evacuation graph but a number of evacuees scaled by a factor x \u2208 {1.1, 1.2, 1.4, 1.7, 2.0, 2.5, 3.0} to model population growth. For simplicity, the experiments did not consider a flood scenario and assume that network edges are always available within the scheduling horizon H. It is easy to generalize the results to various flood scenarios.\nFor each evacuation instance, a set of convergent evacuation paths was obtained from the TDFS approach [6]. The TDFS model is a MIP which is highly scalable as it aggregates edge capacities and abstracts time. The paths were obtained for the maximization of the number of evacuees within a scheduling horizon of 10 hours, allowing preemptive evacuation scheduling. Thus, for each instance, the set of evacuation paths can be thought of as forming a forest where each evacuation tree is rooted at a safe node and each leaf is an evacuated node. In this particular case, each evacuation tree is a strongly connected component. It is important to emphasize that paths are not necessarily the same for the different HN instances, nor necessarily optimal for non-preemptive scheduling, which explains some non-monotonic behavior in the results. Table 1 reports the evacuation paths, the number of vehicles to evacuate (#vehicles), the number of strongly connected components (#scc), the number of evacuated nodes, the number of vehicles per scc (scc details) for each HN80-Ix instance. Each strongly connected component is represented by a pair {x, y} where x is the number of evacuated nodes and y the number of vehicles to evacuate.\nThe experimental results compare the flow scheduling results obtained with the NEPP and NPEPP approaches and the flow scheduling problem (FSP) formulation presented in [6]. The FSP is solved using a LP and it relaxes the non-preemptive constraints. Indeed, the flow leaving an evacuated node may be interrupted and restarted subsequently at any time t \u2208 H, possibly multiple times. Moreover, the flow rates in the FSP algorithm are not necessarily constant over time, giving substantial scheduling flexibility to the FSP but making it very difficult to implement in practice. Once again, the FSP comes in two versions. The objective of the core FSP is to maximize the number of vehicles reaching safety, while the objective of FSP-CT is to minimize the evacuation clearance time. In order to compare the FSP algorithm and the constraint-programming approaches of this paper fairly, the FSP is solved with a time discretization of 1 minute. The experiments for the NEPP and NPEPP models use different search heuristics and each experimental run was given a maximal runtime of 1800 seconds per strongly con-\nnected component. The results were obtained on 64-bits machines with 3.1GHz AMD 6-Core Opteron 4334 and 64Gb of RAM and the scheduling algorithms were implemented using the programming language JAVA 8 and the constraint solver Choco 3.3.0, except for NPEPP-MF where the search was implemented in ObjectiveCP.\nMaximizing the Flow of Evacuees. Table 2 compares, for each HN80-Ix instance and a 10-hour scheduling horizon, the percentage of vehicles evacuated (Perc. Evac.) and the solving time in seconds (CPU (s)) with FSP, NEPP-MF/SAT and NPEPP-MF/SAT. All solutions found with FSP are optimal and are thus an upper bound on the number of vehicles that can be evacuated with NEPP and NPEPP. Prior to solving NEPP-MF (resp. NPEPP-MF), the algorithm attempts to solve NEPP-SAT (resp. NPEPP-SAT) with a 60s time limit and, when this is successful, the annotation (SAT) is added next to the percentage of vehicles evacuated. As we make use of decomposition and parallel computing, the reported CPU for NEPP/NPEPP is the latest of the time at which the best solution is found among all strongly connected components. The table reports the best results across the heuristics, i.e., the run where the most vehicles are evacuated ; for the random strategy, the best result is reported across 10 runs (note that the standard deviation for the objective value ranges between 0.4% and 1.1% only across all instances). The search strategy for the best run is shown in column (Search) as a combination {TaskVar, VarOrder} where TaskVar is the heuristic for choosing the next task variable and VarOrder is the heuristic for labeling the task variables.\nThe results highlight the fact that the constraint-based simultaneous scheduling model finds very high-quality results. On the first five instances, with population growth up to 70%, the solutions of NEPP-MF are within 2.2% of the preemptive bound. This is also the case for the largest instance. In the worst case, the constraint-based scheduling model is about 4.9% away from the preemptive lower bound. It is thus reasonable to conclude that the constraint-based algorithms may be of significant value to emergency services as they produce realistic plans for large-scaled controlled evacuations. For NPEPP-MF, the solver found optimal solutions and proved optimality for all in-\nstances, except HN80-I1.1 and HN80-I1.2 for which the best found solution was within 0.1% of the optimal one.5 The results indicate that a phased evacuation is much less effective in practice and decreases the number of evacuees reaching safety by up to 40% in many instances. Unless phased evacuations allow an evacuation of all endangered people, they are unlikely to be applied in practice, even if they guarantee the absence of traffic merging.\nFigure 3 shows how the quality of solutions improves over time for all HN-Ix instances which are not completely evacuated, for a particular run. For all instances, a high-quality solution is found within 10 seconds, which makes the algorithm applicable to a wide variety of situations. When practical, giving the algorithm more time may still produce significant benefits: For instance, on HN-I1.7 the percentage of vehicles increases from 93.0% to 97.6% when the algorithm is given 1800s. Such improvements are significant in practice since they may be the difference between life and death.\nProfile of the Evacuation Schedules. To demontrate the benefits of NEPP, it is useful to look at the evacuation profiles produced by the various algorithms. Recall that Fig. 1 displays a repartition of departure times for seven evacuated nodes in the original HN80 instance in the optimal solution produced by the FSP solver. The key observation is that, for several residential areas, the departure times are widely distributed within the scheduling horizon, indicating that the FSP solution makes heavy use of preemption. In the FSP solution, the number of vehicles departing at each time step is often equal to the path capacity. But there are also some suprising combinations {evacuated node, time step}, such as {3, 50}, {3, 84} and {3, 85} where the flow rate is respectively 22, 3, and 12 for evacuation area 3. In summary, the FSP solution is unlikely to be the basis of a controlled evacuation: It is just too difficult to enforce such a complicated schedule. Figure 4 shows a repartition of departure times for the same nodes in the original HN80 instance using the NEPP. The evacuation profile for the departure times is extremely simple and can easily be the basis of a controlled evacuation. Its simplicity contrasts with the complexity of the FSP solution and demonstrates the value of the constraint-programming approach promoted in this paper.\n5 In our experiments, the problem NPEPP satisfies the condition for Theorem 3. Thus, these instances can be solved almost instantly using the algorithm outlined in the proof of Theorem 3.\nMinimizing the Clearance Time. Table 3 compares, for each HN80-Ix instance, the minimal clearance time in minutes (CT (min)) found with FSP-CT, NEPP-CT and NPEPPCT. All solutions found with FSP-CT and NPEPP-CT are optimal for the given set of paths. Once again, solutions found by NEPP-CT are of high-quality and reasonably close to the preemptive lower bound produced by FSP-CT. In the worst case, the results are within 5.1% of the preemptive lower bound. The clearance times of the phased evacuations, which are optimal, are significantly larger than for the NEPP. Note again that paths are different between instances and are not necessarily optimal with respect to different scheduling horizons, which explain inconsistencies such as the horizon found for HN80-I1.4 being shorter than the horizon found for HN80-I1.2 with NPEPP-CT.\nThe Impact of the Flow Rates. The constraint-based scheduling models have the flow rates as decision variables, which increases the flexibility of the solutions. Table 4 studies the benefits of this flexibility and compares the general results with the case where the flow rates must be selected from a specific set, here {2, 6, 10, 15, 20}. This is similar to the approach proposed in [12], which uses a fixed set of response curves and their associated mobilization resources. Note that the column-generation algorithm in [12] does not produce convergent plans and discretizes time. The results seem to indicate that flexible flow rates sometimes bring benefits, especially for the larger instances where the benefits can reach 3.0% ; nonetheless the possible loss when using fixed rates is not substantial and may capture some practical situations.\nComparison of Model Sizes. One of the benefits of the constraint-based scheduling models is that they do not discretize time and hence are highly scalable in memory requirements. This is important for large-scale evacuations which may be scheduled over multiple days. Table 5 compares the FSP problem size for a scheduling horizon of 10 hours (FSP-10) and 15 hours (FSP-15) with the NEPP-MF problem size for the HN80 instance, when using 1 minute time steps. It reports the number of columns (#cols) and the number of rows (#rows) of the FSP model, as well as the number of variables (#vars) and the number of constraints (#ctrs) of the NEPP model. As can be seen, the number of variables and constraints grow quickly for the FSP model and are about 2 orders of magnitude larger than those in the NEPP-MF model which is time-independent."}, {"heading": "5 Conclusion", "text": "This paper proposes, for the first time, several constraint-based models for controlled evacuations that produce practical and actionable evacuation schedules. These models address several limitations of existing methods, by ensuring non-preemptive scheduling and satisfying operational evacuation constraints over mobilization resources. The algorithms are scalable, involve no time discretization, and are capable of accommodating side constraints for specific disaster scenarios or operational evacuation modes. Moreover, the models have no restriction on the input set of evacuation paths, which can be convergent or not. Preliminary experiments show that high-quality solutions, with an objective value close to optimal preemptive solutions objectives, can be obtained within a few seconds, and improve over time. Future work will focus on improving the propagation strength of the cumulative constraint for variable durations, flows, and flow rates, and on generalizing the algorithm for the joint evacuation planning and scheduling,"}], "references": [{"title": "Decomposition algorithms for the design of a nonsimultaneous capacitated evacuation tree network", "author": ["A.K. Andreas", "J.C. Smith"], "venue": "Networks 53(2), 91\u2013103", "citeRegEx": "1", "shortCiteRegEx": null, "year": 2009}, {"title": "Aggregate-level demand management in evacuation planning", "author": ["D.R. Bish", "H.D. Sherali"], "venue": "European Journal of Operational Research 224(1), 79\u201392", "citeRegEx": "2", "shortCiteRegEx": null, "year": 2013}, {"title": "Pattern-based evacuation planning for urban areas", "author": ["S. Bretschneider", "A. Kimms"], "venue": "European Journal of Operational Research 216(1), 57\u201369", "citeRegEx": "3", "shortCiteRegEx": null, "year": 2012}, {"title": "Phased evacuation: An optimisation model which takes into account the capacity drop phenomenon in pedestrian flows", "author": ["E.M. Cepolina"], "venue": "Fire Safety Journal (44), 532\u2013544", "citeRegEx": "4", "shortCiteRegEx": null, "year": 2008}, {"title": "Nicta evacuation planner: Actionable evacuation plans with contraflows", "author": ["C. Even", "V. Pillac", "P. Van Hentenryck"], "venue": "Proceedings of the 20th European Conference on Artificial Intelligence (ECAI 2014). Frontiers in Artificial Intelligence and Applications, vol. 263, pp. 1143\u20131148. IOS Press, Amsterdam", "citeRegEx": "5", "shortCiteRegEx": null, "year": 2014}, {"title": "Convergent plans for large-scale evacuations", "author": ["C. Even", "V. Pillac", "P. Van Hentenryck"], "venue": "Proceedings of the 29th AAAI Conference on Artificial Intelligence", "citeRegEx": "6", "shortCiteRegEx": "6", "year": 2015}, {"title": "Analysis of near-optimal evacuation instructions", "author": ["O.L. Huibregtse", "M.C. Bliemer", "S.P. Hoogendoorn"], "venue": "Procedia Engineering", "citeRegEx": "7", "shortCiteRegEx": "7", "year": 2010}, {"title": "Blocking roads to increase the evacuation efficiency", "author": ["O.L. Huibregtse", "A. Hegyi", "S. Hoogendoorn"], "venue": "Journal of Advanced Transportation 46(3), 282\u2013289", "citeRegEx": "8", "shortCiteRegEx": null, "year": 2012}, {"title": "A method to optimize evacuation instructions", "author": ["O.L. Huibregtse", "S.P. Hoogendoorn", "A. Hegyi", "M.C.J. Bliemer"], "venue": "OR Spectrum 33(3), 595\u2013627", "citeRegEx": "9", "shortCiteRegEx": null, "year": 2011}, {"title": "A capacitated network flow optimization approach for short notice evacuation planning", "author": ["G.J. Lim", "S. Zangeneh", "M.R. Baharnemati", "T. Assavapokee"], "venue": "European Journal of Operational Research 223(1), 234\u2013245", "citeRegEx": "10", "shortCiteRegEx": null, "year": 2012}, {"title": "A conflict-based path-generation heuristic for evacuation planning", "author": ["V. Pillac", "C. Even", "P. Van Hentenryck"], "venue": "Tech. Rep. VRL-7393,", "citeRegEx": "11", "shortCiteRegEx": "11", "year": 2013}, {"title": "A column-generation approach for joint mobilization and evacuation planning", "author": ["V. Pillac", "M. Cebrian", "P. Van Hentenryck"], "venue": "International Conference on Integration of Artificial Intelligence and Operations Research Techniques in Constraint Programming for Combinatorial Optimization Problems (CPAIOR). Barcelona", "citeRegEx": "12", "shortCiteRegEx": null, "year": 2015}, {"title": "A path-generation matheuristic for large scale evacuation planning", "author": ["V. Pillac", "P. Van Hentenryck", "C. Even"], "venue": "Hybrid Metaheuristics. Lecture Notes in Computer Science,", "citeRegEx": "13", "shortCiteRegEx": "13", "year": 2014}, {"title": "Decentralized evacuation management", "author": ["K.F. Richter", "M. Shi", "H.S. Gan", "S. Winter"], "venue": "Transportation Research Part C: Emerging Technologies 31, 1\u201317", "citeRegEx": "14", "shortCiteRegEx": null, "year": 2013}], "referenceMentions": [{"referenceID": 1, "context": "Apart from a few exceptions [2,5,6,9,11,13] existing evacuation approaches rely on free-flow models which assume that evacuees can be dynamically routed in the transportation network [3,10,14].", "startOffset": 28, "endOffset": 43}, {"referenceID": 4, "context": "Apart from a few exceptions [2,5,6,9,11,13] existing evacuation approaches rely on free-flow models which assume that evacuees can be dynamically routed in the transportation network [3,10,14].", "startOffset": 28, "endOffset": 43}, {"referenceID": 5, "context": "Apart from a few exceptions [2,5,6,9,11,13] existing evacuation approaches rely on free-flow models which assume that evacuees can be dynamically routed in the transportation network [3,10,14].", "startOffset": 28, "endOffset": 43}, {"referenceID": 8, "context": "Apart from a few exceptions [2,5,6,9,11,13] existing evacuation approaches rely on free-flow models which assume that evacuees can be dynamically routed in the transportation network [3,10,14].", "startOffset": 28, "endOffset": 43}, {"referenceID": 10, "context": "Apart from a few exceptions [2,5,6,9,11,13] existing evacuation approaches rely on free-flow models which assume that evacuees can be dynamically routed in the transportation network [3,10,14].", "startOffset": 28, "endOffset": 43}, {"referenceID": 12, "context": "Apart from a few exceptions [2,5,6,9,11,13] existing evacuation approaches rely on free-flow models which assume that evacuees can be dynamically routed in the transportation network [3,10,14].", "startOffset": 28, "endOffset": 43}, {"referenceID": 2, "context": "Apart from a few exceptions [2,5,6,9,11,13] existing evacuation approaches rely on free-flow models which assume that evacuees can be dynamically routed in the transportation network [3,10,14].", "startOffset": 183, "endOffset": 192}, {"referenceID": 9, "context": "Apart from a few exceptions [2,5,6,9,11,13] existing evacuation approaches rely on free-flow models which assume that evacuees can be dynamically routed in the transportation network [3,10,14].", "startOffset": 183, "endOffset": 192}, {"referenceID": 13, "context": "Apart from a few exceptions [2,5,6,9,11,13] existing evacuation approaches rely on free-flow models which assume that evacuees can be dynamically routed in the transportation network [3,10,14].", "startOffset": 183, "endOffset": 192}, {"referenceID": 8, "context": "[9] propose a two-stage algorithm that first generates a set of evacuation routes and feasible departure times, and then assigns a route and time to each evacuated area using an ant colony optimization algorithm.", "startOffset": 0, "endOffset": 3}, {"referenceID": 6, "context": "In subsequent work, the authors studied the robustness of the produced solution [7], and strategies to improve the compliance of evacuees [8].", "startOffset": 80, "endOffset": 83}, {"referenceID": 7, "context": "In subsequent work, the authors studied the robustness of the produced solution [7], and strategies to improve the compliance of evacuees [8].", "startOffset": 138, "endOffset": 141}, {"referenceID": 12, "context": "[13] first introduced the Conflict-based Path Generation (CPG) approach which was extended to contraflows by Even et al.", "startOffset": 0, "endOffset": 4}, {"referenceID": 4, "context": "[5].", "startOffset": 0, "endOffset": 3}, {"referenceID": 0, "context": "This issue is addressed in [1,6] which propose evacuation plans without forks.", "startOffset": 27, "endOffset": 32}, {"referenceID": 5, "context": "This issue is addressed in [1,6] which propose evacuation plans without forks.", "startOffset": 27, "endOffset": 32}, {"referenceID": 5, "context": "[6] produce such convergent evacuation plans by decomposing the evacuation problem in a tree-design problem and an evacuation scheduling problem.", "startOffset": 0, "endOffset": 3}, {"referenceID": 0, "context": "Andreas and Smith [1] developed a Benders decomposition algorithm that selects convergent evacuation routes that are robust to a set of disaster scenarios.", "startOffset": 18, "endOffset": 21}, {"referenceID": 3, "context": "Non-preemptive schedules have been considered in [4,12] in rather different ways.", "startOffset": 49, "endOffset": 55}, {"referenceID": 11, "context": "Non-preemptive schedules have been considered in [4,12] in rather different ways.", "startOffset": 49, "endOffset": 55}, {"referenceID": 3, "context": "In [4], a phased evacuation plan evacuates each area separately, guaranteeing that no vehicles from different areas travel on a same path at the same time.", "startOffset": 3, "endOffset": 6}, {"referenceID": 11, "context": "The algorithm in [12] is a column-generation approach for simultaneous evacuation, i.", "startOffset": 17, "endOffset": 21}, {"referenceID": 11, "context": "Contrary to [12], the constraint-programming model uses a decision variable for the flow rate of each evacuation area (instead of a fixed set of values) and avoids discretizing time.", "startOffset": 12, "endOffset": 16}, {"referenceID": 3, "context": "In contrast to [4], the constraint-programming model allows for simultaneous evacuation while satisfying practice-related constraints.", "startOffset": 15, "endOffset": 18}, {"referenceID": 5, "context": "1 shows the repartition of departure times for seven residential areas in the original HN80 instance using a preemptive schedule produced by the algorithm in [6].", "startOffset": 158, "endOffset": 161}, {"referenceID": 5, "context": "1: Departure times and flows of 7 residential areas of the HN80 instance with the preemptive algorithm FSP from [6].", "startOffset": 112, "endOffset": 115}, {"referenceID": 10, "context": "The Evacuation Planning Problem (EPP) was introduced by the authors in [11].", "startOffset": 71, "endOffset": 75}, {"referenceID": 11, "context": "For example, each flow rate variable domain may be restricted to a subset of values only, in order to account for the number of door-knocking resources available to schedule the evacuation [12].", "startOffset": 189, "endOffset": 193}, {"referenceID": 5, "context": "This section reports experiments on a set of instances used in [6].", "startOffset": 63, "endOffset": 66}, {"referenceID": 5, "context": "For each evacuation instance, a set of convergent evacuation paths was obtained from the TDFS approach [6].", "startOffset": 103, "endOffset": 106}, {"referenceID": 5, "context": "The experimental results compare the flow scheduling results obtained with the NEPP and NPEPP approaches and the flow scheduling problem (FSP) formulation presented in [6].", "startOffset": 168, "endOffset": 171}, {"referenceID": 11, "context": "This is similar to the approach proposed in [12], which uses a fixed set of response curves and their associated mobilization resources.", "startOffset": 44, "endOffset": 48}, {"referenceID": 11, "context": "Note that the column-generation algorithm in [12] does not produce convergent plans and discretizes time.", "startOffset": 45, "endOffset": 49}], "year": 2015, "abstractText": "Large-scale controlled evacuations require emergency services to select evacuation routes, decide departure times, and mobilize resources to issue orders, all under strict time constraints. Existing algorithms almost always allow for preemptive evacuation schedules, which are less desirable in practice. This paper proposes, for the first time, a constraint-based scheduling model that optimizes the evacuation flow rate (number of vehicles sent at regular time intervals) and evacuation phasing of widely populated areas, while ensuring a nonpreemptive evacuation for each residential zone. Two optimization objectives are considered: (1) to maximize the number of evacuees reaching safety and (2) to minimize the overall duration of the evacuation. Preliminary results on a set of real-world instances show that the approach can produce, within a few seconds, a non-preemptive evacuation schedule which is either optimal or at most 6% away of the optimal preemptive solution.", "creator": "LaTeX with hyperref package"}}}