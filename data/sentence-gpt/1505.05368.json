{"id": "1505.05368", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "20-May-2015", "title": "On Minimal Change in Evolving Multi-Context Systems (Preliminary Report)", "abstract": "Managed Multi-Context Systems (mMCSs) provide a general framework for integrating knowledge represented in heterogeneous KR formalisms. However, mMCSs are essentially static as they were not designed to run in a dynamic scenario. Some recent approaches, among them evolving Multi-Context Systems (eMCSs), extend mMCSs by allowing not only the ability to integrate knowledge represented in heterogeneous KR formalisms, but at the same time to both react to, and reason in the presence of commonly temporary dynamic observations, and evolve by incorporating new knowledge. The notion of minimal change is a central notion in dynamic scenarios, specially in those that admit several possible alternative evolutions. Since eMCSs combine heterogeneous KR formalisms, each of which may require different notions of minimal change, the study of minimal change in eMCSs is an interesting and highly non-trivial problem. In this paper, we study the notion of minimal change in eMCSs, and discuss some alternative minimal change criteria. We present a number of possible possibilities for minimal change in eMCSs.\n\n\n\n\nMCSs are an interesting and highly non-trivial problem to deal with. To address the first possibility, we present a new model of minimal change, one that is not fully understood by some of the most knowledgeable and knowledgeable experts in the field. These proposals include a proposed and proposed model of minimal change, one that is not fully understood by some of the most knowledgeable and knowledgeable experts in the field. These proposals include a proposed and proposed model of minimal change, one that is not fully understood by some of the most knowledgeable and knowledgeable experts in the field. These proposals include a proposed and proposed model of minimal change, one that is not fully understood by some of the most knowledgeable and knowledgeable experts in the field. These proposals include a proposal and proposed model of minimal change, one that is not fully understood by some of the most knowledgeable and knowledgeable experts in the field. These proposals include a proposed and proposed model of minimal change, one that is not fully understood by some of the most knowledgeable and knowledgeable experts in the field. These proposals include a proposed and proposed model of minimal change, one that is not fully understood by some of the most knowledgeable and knowledgeable experts in the field. These proposals include a proposed and proposed model of minimal change, one that is not fully understood by some of the most knowledgeable and knowledgeable experts in the field. These proposals include a proposal and proposed model of minimal change, one that is", "histories": [["v1", "Wed, 20 May 2015 13:30:19 GMT  (27kb)", "http://arxiv.org/abs/1505.05368v1", "International Workshop on Reactive Concepts in Knowledge Representation (ReactKnow 2014), co-located with the 21st European Conference on Artificial Intelligence (ECAI 2014). Proceedings of the International Workshop on Reactive Concepts in Knowledge Representation (ReactKnow 2014), pages 47-53, technical report, ISSN 1430-3701, Leipzig University, 2014.this http URL"]], "COMMENTS": "International Workshop on Reactive Concepts in Knowledge Representation (ReactKnow 2014), co-located with the 21st European Conference on Artificial Intelligence (ECAI 2014). Proceedings of the International Workshop on Reactive Concepts in Knowledge Representation (ReactKnow 2014), pages 47-53, technical report, ISSN 1430-3701, Leipzig University, 2014.this http URL", "reviews": [], "SUBJECTS": "cs.AI", "authors": ["ricardo gon\\c{c}alves", "matthias knorr", "jo\\~ao leite"], "accepted": false, "id": "1505.05368"}, "pdf": {"name": "1505.05368.pdf", "metadata": {"source": "CRF", "title": null, "authors": ["Jo\u00e3o Leite"], "emails": ["rjrg@fct.unl.pt"], "sections": [{"heading": null, "text": "ar X\niv :1\n50 5.\n05 36\n8v 1\n[ cs\n.A I]\n2 0\nM ay\n2 01\n5"}, {"heading": "1 Introduction", "text": "Multi-Context Systems (MCSs) were introduced in [6], building on the work in [12, 23], to address the need for a general framework that integrates knowledge bases expressed in heterogeneous KR formalisms. Intuitively, instead of designing a unifying language (see e.g., [13, 22], and [19] with its reasoner NoHR [18]) to which other languages could be translated, in an MCS the different formalisms and knowledge bases are considered as modules, and means are provided to model the flow of information between them (cf. [1, 17, 20] and references therein for further motivation on hybrid languages and their connection to MCSs).\nMore specifically, an MCS consists of a set of contexts, each of which is a knowledge base in some KR formalism, such that each context can access information from the other contexts using socalled bridge rules. Such non-monotonic bridge rules add their heads to the context\u2019s knowledge base provided the queries (to other contexts) in their bodies are successful.\nManaged Multi-Context Systems (mMCSs) were introduced in [7] to provide an extension of MCSs by allowing operations, other than simple addition, to be expressed in the heads of bridge rules. This allows mMCSs to properly deal with the problem of consistency management within contexts.\nOne recent challenge for KR languages is to shift from static application scenarios which assume a one-shot computation, usually triggered by a user query, to open and dynamic scenarios where there is a need to react and evolve in the presence of incoming information.\n1 CENTRIA & Departamento de Informa\u0301tica, Faculdade Cie\u0302ncias e Tecnologia, Universidade Nova de Lisboa, email: rjrg@fct.unl.pt\nExamples include EVOLP [2], Reactive ASP [11, 10], C-SPARQL [4], Ontology Streams [21] and ETALIS [3], to name only a few.\nWhereas mMCSs are quite general and flexible to address the problem of integration of different KR formalisms, they are essentially static in the sense that the contexts do not evolve to incorporate the changes in the dynamic scenarios.\nIn such scenarios, new knowledge and information is dynamically produced, often from several different sources \u2013 for example a stream of raw data produced by some sensors, new ontological axioms written by some user, newly found exceptions to some general rule, etc.\nTo address this issue, two recent frameworks, evolving MultiContext Systems (eMCSs) [15] and reactive Multi-Context Systems (rMCSs) [5, 9, 8] have been proposed sharing the broad motivation of designing general and flexible frameworks inheriting from mMCSs the ability to integrate and manage knowledge represented in heterogeneous KR formalisms, and at the same time be able to incorporate knowledge obtained from dynamic observations.\nIn such dynamic scenarios, where systems can have alternative evolutions, it is desirable to have some criteria of minimal change to be able to compare the possible alternatives. This problem is particularly interesting and non-trivial in dynamic frameworks based on MCSs, not only because of the heterogeneity of KR frameworks that may exist in an MCS \u2013 each of which may require different notions of minimal change \u2013, but also because the evolution of such systems is based not only on the semantics, but also on the evolution of the knowledge base of each context.\nIn this paper, we study minimal change in eMCSs, by presenting some minimal change criteria to be applied to the possible evolving equilibria of an eMCS, and by discussing the relation between them.\nThe remainder of this paper is structured as follows. After presenting the main concepts regarding mMCSs, we introduce the framework of eMCSs. Then, we present and study some minimal change criteria in eMCSs. We conclude with discussing related work and possible future directions."}, {"heading": "2 Multi-Context Systems", "text": "In this section, we introduce the framework of multi-context systems (MCSs). Following [6], a multi-context system (MCS) consists of a collection of components, each of which contains knowledge represented in some logic, defined as a triple L = \u3008KB,BS,ACC\u3009 where KB is the set of well-formed knowledge bases of L, BS is the set of possible belief sets, and ACC : KB \u2192 2BS is a function describing the semantics of L by assigning to each knowledge base a set of acceptable belief sets. We assume that each element of KB and BS is a set, and we define F = {s : s \u2208 kb \u2227 kb \u2208 KB}.\nIn addition to the knowledge base in each component, bridge rules\nare used to interconnect the components, specifying what knowledge to assert in one component given certain beliefs held in the components of the MCS. Formally, for a sequence of logics L = \u3008L1, . . . , Ln\u3009, an Li-bridge rule \u03c3 over L, 1 \u2264 i \u2264 n, is of the form\nH(\u03c3) \u2190 B(\u03c3) (1)\nwhere B(\u03c3) is a set of bridge literals of the form (r : b) and of the form not (r : b), 1 \u2264 r \u2264 n, with b a belief formula of Lr , and, for each kb \u2208 KBi, kb \u222a {H(\u03c3)} \u2208 KBi.\nBridge rules in MCSs only allow adding information to the knowledge base of their corresponding context. Note that the condition kb \u222a {H(\u03c3)} \u2208 KBi precisely guarantees that the resulting set is still a knowledge base of the context. In [7], an extension, called managed Multi-Context Systems (mMCSs), is introduced in order to allow other types of operations to be performed on a knowledge base. For that purpose, each context of an mMCS is associated with a management base, which is a set of operations that can be applied to the possible knowledge bases of that context. Given a management base OP and a logic L, let OF = {op(s) : op \u2208 OP \u2227 s \u2208 F} be the set of operational formulas that can be built from OP and L. Each context of an mMCS gives semantics to operations in its management base using a management function over a logic L and a management base OP , mng : 2OF \u00d7KB \u2192 (2KB \\ {\u2205}), i.e., mng(op, kb) is the (non-empty) set of possible knowledge bases that result from applying the operations in op to the knowledge base kb. We assume that mng(\u2205, kb) = {kb}. Now, Li-bridge rules for mMCSs are defined in the same way as for MCSs, except that H(\u03c3) is now an operational formula over OPi and Li.\nDefinition 1 A managed Multi-Context System (mMCS) is a sequence M = \u3008C1, . . . , Cn\u3009, where each Ci, i \u2208 {1, . . . , n}, called a managed context, is defined as Ci = \u3008Li, kbi, br i, OPi,mngi\u3009 where Li = \u3008KBi,BSi,ACCi\u3009 is a logic, kbi \u2208 KBi, br i is a set of Li-bridge rules, OPi is a management base, mngi is a management function over Li and OPi.\nNote that, for the sake of readability, we consider a slightly restricted version of mMCSs where each ACCi is still a function and not a set of functions as for logic suites [7].\nFor an mMCS M = \u3008C1, . . . , Cn\u3009, a belief state of M is a sequence S = \u3008S1, . . . , Sn\u3009 such that each Si is an element of BSi. For a bridge literal (r : b), S |= (r : b) if b \u2208 Sr and S |= not (r : b) if b /\u2208 Sr; for a set of bridge literals B, S |= B if S |= L for every L \u2208 B. We say that a bridge rule \u03c3 of a context Ci is applicable given a belief state S of M if S satisfies B(\u03c3). We can then define appi(S), the set of heads of bridge rules of Ci which are applicable in S, by setting appi(S) = {H(\u03c3) : \u03c3 \u2208 br i \u2227 S |= B(\u03c3)}.\nEquilibria are belief states that simultaneously assign an acceptable belief set to each context in the mMCS such that the applicable operational formulas in bridge rule heads are taken into account.\nDefinition 2 A belief state S = \u3008S1, . . . , Sn\u3009 of an mMCS M is an equilibrium of M if, for every 1 \u2264 i \u2264 n,\nSi \u2208 ACCi(kb) for some kb \u2208 mngi(appi(S), kbi)."}, {"heading": "3 Evolving Multi-Context Systems", "text": "In this section, we recall evolving Multi-Context Systems, which generalize mMCSs to a dynamic scenario in which contexts are enabled to react to external observations and evolve. For that purpose, we consider that some of the contexts in the MCS become\nso-called observation contexts whose knowledge bases will be constantly changing over time according to the observations made, similar, e.g., to streams of data from sensors.2\nThe changing observations then will also affect the other contexts by means of the bridge rules. As we will see, such effect can either be instantaneous and temporary, i.e., limited to the current time instant, similar to (static) mMCSs, where the body of a bridge rule is evaluated in a state that already includes the effects of the operation in its head, or persistent, but only affecting the next time instant. To achieve the latter, we extend the operational language with a unary meta-operation next that can only be applied on top of operations.\nDefinition 3 Given a management base OP and a logic L, we define eOF , the evolving operational language, as\neOF = OF \u222a {next(op(s)) : op(s) \u2208 OF}.\nThe idea of observation contexts is that each such context has a language describing the set of possible observations of that context, along with its current observation. The elements of the language of the observation contexts can then be used in the body of bridge rules to allow contexts to access the observations. Formally, an observation context is a tuple O = \u3008\u03a0O, \u03c0\u3009 where \u03a0O is the observation language of O and \u03c0 \u2286 \u03a0O is its current observation.\nWe can now define evolving Multi-Context Systems.\nDefinition 4 An evolving Multi-Context Systems (eMCS) is a sequence Me = \u3008C1, . . . , Cn, O1, . . . , O\u2113\u3009, such that, for each i \u2208 {1, . . . , \u2113}, Oi = \u3008\u03a0Oi , \u03c0i\u3009 is an observation context, and, for each i \u2208 {1, . . . , n}, Ci is an evolving context defined as Ci = \u3008Li, kbi, br i, OPi,mngi\u3009 where\n\u2022 Li = \u3008KBi,BSi,ACCi\u3009 is a logic\n\u2022 kbi \u2208 KBi\n\u2022 br i is a set of bridge rules of the form\nH(\u03c3) \u2190 a1, . . . , ak,not ak+1, . . . ,not an (2)\nsuch that H(\u03c3) \u2208 eOFi, and each ai, i \u2208 {1, . . . , n}, is either of the form (r :b) with r \u2208 {1, . . . , n} and b a belief formula of Lr , or of the form (r@b) with r \u2208 {1, . . . , \u2113} and b \u2208 \u03a0Or\n\u2022 OPi is a management base\n\u2022 mngi is a management function over Li and OPi.\nGiven an eMCS Me = \u3008C1, . . . , Cn, O1, . . . , O\u2113\u3009 we denote by KBMe the set of knowledge base configurations for Me, i.e., KBMe = {\u3008k1, . . . , kn\u3009 : ki \u2208 KBi for each 1 \u2264 i \u2264 n}.\nDefinition 5 Let Me = \u3008C1, . . . , Cn, O1, . . . , O\u2113\u3009 be an eMCS. A belief state for Me is a sequence S = \u3008S1, . . . , Sn\u3009 such that, for each 1 \u2264 i \u2264 n, we have Si \u2208 BSi. We denote by BSMe the set of belief states for Me.\nAn instant observation for Me is a sequence O = \u3008o1, . . . , o\u2113\u3009 such that, for each 1 \u2264 i \u2264 \u2113, we have that oi \u2286 \u03a0Oi .\nThe notion appi(S) of the set of heads of bridge rules of Ci which are applicable in a belief state S, cannot be directly transferred from mMCSs to eMCSs since bridge rule bodies can now contain atoms of the form (r@b), whose satisfaction depends on the current observation. Formally, given a belief state S = \u3008S1, . . . , Sn\u3009 for Me and\n2 For simplicity of presentation, we consider discrete steps in time here.\nan instant observation O = \u3008o1, . . . , o\u2113\u3009 for Me, we define the satisfaction of bridge literals of the form (r : b) as S,O |= (r : b) if b \u2208 Sr and S,O |= not (r : b) if b /\u2208 Sr. The satisfaction of bridge literal of the form (r@b) depends on the current observations, i.e., we have that S,O |= (r@b) if b \u2208 or and S |= not (r@b) if b /\u2208 or . As before, for a set B of bridge literals, we have that S,O |= B if S,O |= L for every L \u2208 B.\nWe say that a bridge rule \u03c3 of a context Ci is applicable given a belief state S and an instant observation O if its body is satisfied by S and O, i.e., S,O |= B(\u03c3).\nWe denote by appi(S,O) the set of heads of bridges rules of the context Ci which are applicable given the belief state S and the instant observation O. In the case of eMCSs, the set appi(S,O) may contain two types of formulas: those that contain next and those that do not. As already mentioned before, the former are to be applied to the current knowledge base and not persist, whereas the latter are to be applied in the next time instant and persist.\nDefinition 6 Let Me = \u3008C1, . . . , Cn, O1, . . . , O\u2113\u3009 be an eMCS, S a belief state for Me, and O an instant observation for Me. Then, for each 1 \u2264 i \u2264 n, consider the following sets:\n\u2022 appnexti (S,O) = {op(s) : next(op(s)) \u2208 appi(S,O)}\n\u2022 appnowi (S,O) = {op(s) : op(s) \u2208 appi(S,O)}\nNote that if we want an effect to be instantaneous and persistent, then this can also be achieved using two bridge rules with identical body, one with and one without next in the head.\nSimilar to equilibria in mMCS, the (static) equilibrium is defined to incorporate instantaneous effects based on appnowi (S,O) alone.\nDefinition 7 Let Me = \u3008C1, . . . , Cn, O1, . . . , O\u2113\u3009 be an eMCS, and O an instant observation for Me. A belief state S = \u3008S1, . . . , Sn\u3009 for Me is an equilibrium of Me given O iff for each 1 \u2264 i \u2264 n, there exists some kb \u2208 mngi(appnowi (S,O), kbi) such that Si \u2208 ACCi(kb).\nTo be able to assign meaning to an eMCS evolving over time, we introduce evolving belief states, which are sequences of belief states, each referring to a subsequent time instant.\nDefinition 8 Let Me = \u3008C1, . . . , Cn, O1, . . . , O\u2113\u3009 be an eMCS. An evolving belief state of size s for Me is a sequence Se = \u3008S1, . . . , Ss\u3009 where each Sj , 1 \u2264 j \u2264 s, is a belief state for Me.\nTo enable an eMCS to react to incoming observations and evolve, a sequence of observations defined in the following has to be processed. The idea is that the knowledge bases of the observation contexts Oi change according to that sequence.\nDefinition 9 Let Me = \u3008C1, . . . , Cn, O1, . . . , O\u2113\u3009 be an eMCS. A sequence of observations for Me is a sequence Obs = \u3008O1, . . . ,Om\u3009, such that, for each 1 \u2264 j \u2264 m, Oj = \u3008oj1, . . . , o j\n\u2113\u3009 is an instant observation for Me, i.e., o j i \u2286 \u03a0Oi for each 1 \u2264 i \u2264 \u2113.\nTo be able to update the knowledge bases and the sets of bridge rules of the evolving contexts, we need the following notation. Given an evolving context Ci, and a knowledge base k \u2208 KBi, we denote by Ci[k] the evolving context in which kbi is replaced by k, i.e., Ci[k] = \u3008Li, k, bri, OPi,mngi\u3009. For an observation context Oi, given a set \u03c0 \u2286 \u03a0Oi of observations for Oi, we denote by Oi[\u03c0] the observation context in which its current observation is replaced\nby \u03c0, i.e., Oi[\u03c0] = \u3008\u03a0Oi , \u03c0\u3009. Given K = \u3008k1, . . . , kn\u3009 \u2208 KBMe a knowledge base configuration for Me, we denote by Me[K] the eMCS \u3008C1[k1], . . . , Cn[kn], O1, . . . , O\u2113\u3009.\nWe can now define that certain evolving belief states are evolving equilibria of an Me = \u3008C1, . . . , Cn, O1, . . . , O\u2113\u3009 given a sequence of observations Obs = \u3008O1, . . . ,Om\u3009 for Me. The intuitive idea is that, given an evolving belief state Se = \u3008S1, . . . , Ss\u3009 for Me, in order to check if Se is an evolving equilibrium, we need to consider a sequence of eMCSs, M1, . . . ,Ms (each with \u2113 observation contexts), representing a possible evolution of Me according to the observations in Obs, such that each Sj is a (static) equilibrium of M j . The current observation of each observation context Oi in M j is exactly its corresponding element oji in O j . For each evolving context Ci, its knowledge base in M j is obtained from the one in M j\u22121 by applying the operations in appnexti (S j\u22121,Oj\u22121).\nDefinition 10 Let Me = \u3008C1, . . . , Cn, O1, . . . , O\u2113\u3009 be an eMCS, Se = \u3008S\n1, . . . , Ss\u3009 an evolving belief state of size s for Me, and Obs = \u3008O1, . . . ,Om\u3009 an observation sequence for Me such that m \u2265 s. Then, Se is an evolving equilibrium of size s of Me given Obs iff, for each 1 \u2264 j \u2264 s, Sj is an equilibrium of M j = \u3008C1[k j 1], . . . , Cn[k j n], O1[o j 1], . . . , O\u2113[o j\n\u2113 ]\u3009 where, for each 1 \u2264 i \u2264 n, kji is defined inductively as follows:\n\u2022 k1i = kbi\n\u2022 kj+1i \u2208 mngi(app next(Sj ,Oji ), k j i ).\nWe end this section by presenting a proposition about evolving equilibria that will be useful in the next section. In Def. 10, the number of considered time instances of observations m is greater or equal the size of the evolving belief state with the intuition that an equilibrium may also be defined for only a part of the observation sequence. An immediate consequence is that any subsequence of an evolving equilibrium is an evolving equilibrium.\nProposition 1 Let Me = \u3008C1, . . . , Cn, O1, . . . , O\u2113\u3009 be an eMCS and Obs = \u3008O1, . . . ,Om\u3009 an observation sequence for Me. If Se = \u3008S1, . . . , Ss\u3009 is an evolving equilibrium of size s of Me given Obs, then, for each 1 \u2264 j \u2264 s, and every j \u2264 k \u2264 m, we have that \u3008S1, . . . , Sj\u3009 is an evolving equilibrium of size j of Me given the observation sequence \u3008O1, . . . ,Ok\u3009."}, {"heading": "4 Minimal change", "text": "In this section, we discuss some alternatives for the notion of minimal change in eMCSs. What makes this problem interesting is that in an eMCS there are different parameters that we may want to minimize in a transition from one time instant to the next one. In the following discussion we focus on two we deem most relevant: the operations that can be applied to the knowledge bases, and the distance between consecutive belief states.\nWe start by studying minimal change at the level of the operations. In the following discussion we consider fixed an eMCS Me = \u3008C1, . . . , Cn, O1, . . . , O\u2113\u3009.\nRecall from the definition of evolving equilibrium that, in the transition between consecutive time instants, the knowledge base of each context Ci of Me changes according to the operations in appnexti (S,O), and these depend on the belief state S and the instant observation O. The first idea to compare elements of this set of operations is to, for a fixed instant observation O, distinguish those equilibria of Me which generate a minimal set of operations to be applied to the current knowledge bases to obtain the knowledge bases\nof the next time instant. Formally, given a knowledge base configuration K \u2208 KBMe and an instant observation O for Me, we can define the set:\nMinEq(K,O) = {S : S is an equilibrium of Me[K] given O\nand there is no equilibrium S\u2032 of Me[K] given O\nsuch that, for all i \u2208 {1, . . . , n} we have\nappnexti (S \u2032,O) \u2282 appnexti (S,O)}\nThis first idea of comparing equilibria based on inclusion of the sets of operations can, however, be too strict in most cases. Moreover, different operations usually have different costs, and it may well be that, instead of minimizing based on set inclusion, we want to minimize the total cost of the operations to be applied. For that, we need to assume that each context has a cost function over the set of operations, i.e., costi : OPi \u2192 N, where costi(op) represents the cost of performing operation op.\nLet S be a belief state for Me and O an instant observation for Me. Then, for each 1 \u2264 i \u2264 n, we define the cost of the operations to be applied to obtain the knowledge base of the next time instant as:\nCosti(S,O) = \u2211\nop(s)\u2208appnext i (S,O)\ncosti(op)\nSumming up the cost for all evolving contexts, we obtain the global cost of S given O:\nCost(S,O) = n\u2211\ni=1\nCosti(S,O)\nNow that we have defined a cost function over belief states, we can define a minimization function over possible equilibria of eMCS Me[K] for a fixed knowledge base configuration K \u2208 KBMe . Formally, given O an instant observation for Me, we define the set of equilibria of Me[K] given O which minimize the global cost of the operations to be applied to obtain the knowledge base configuration of the next time instant as:\nMinCost(K,O) ={S : S is an equilibrium of Me[K] given O and\nthere is no equilibrium S\u2032 of Me[K] given O such that Cost(S\u2032,O) < Cost(S,O)}\nNote that, instead of using a global cost, we could have also considered a more fine-grained criterion by comparing costs for each context individually, and define some order based on these comparisons. Also note that the particular case of taking costi(op) = 1 for every i \u2208 {1, . . . , n} and every op \u2208 OPi, captures the scenario of minimizing the total number of operations to be applied.\nThe function MinCost allows for the choice of those equilibria which are minimal with respect to the operations to be performed to the current knowledge base configuration in order to obtain the knowledge base configuration of the next time instant. Still, for each choice of an equilibrium S, we have to deal with the existence of several alternatives in the set mngi(appnexti (S,O), kbi). Our aim now is to discuss how we can apply some notion of minimal change that allows us to compare the elements mngi(appnexti (S,O), kbi). The intuitive idea is to compare the distance between the current equilibria and the possible equilibria resulting from the elements in mngi(appnexti (S,O), kbi). Of course, given the possible heterogeneity of contexts in an eMCS, we cannot assume a global notion of\ndistance between belief sets. Therefore, we assume that each evolving context has its own distance function between its beliefs sets. Formally, for each 1 \u2264 i \u2264 n, we assume the existence of a distance function di, i.e., di : BSi \u00d7 BSi \u2192 R satisfying for all S1, S2, S3 \u2208 BSi the conditions:\n1. di(S1, S2) \u2265 0\n2. di(S1, S2) = 0 iff S1 = S2\n3. di(S1, S2) = di(S2, S1)\n4. di(S1, S3) \u2264 di(S1, S2) + di(S2, S3)\nThere are some alternatives to extend the distance function of each context to a distance function between belief states. In the following we present two natural choices. One option is to consider the maximal distance between belief sets of each context. Another possibility is to consider the average of distances between belief sets of each context. Formally, given S1 and S2 two belief states of Me we define two functions dmax : BSMe \u00d7 BSMe \u2192 R and davg : BSMe \u00d7BSMe \u2192 R as follows:\ndmax(S 1, S2) = Max{di(S 1 i , S 2 i ) | 1 \u2264 i \u2264 n}\ndavg(S 1, S2) =\n\u2211n i=1 di(S 1 i , S 2 i )\nn\nWe can easily prove that both dmax and davg are indeed distance functions between belief states.\nProposition 2 The functions dmax and davg defined above are both distance functions, i.e., satisfy the axioms (1- 4).\nWe now study how we can use one of these distance functions between belief states to compare the possible alternatives in the sets mngi(appnexti (S,O), kbi), for each 1 \u2264 i \u2264 n. Recall that the intuitive idea is to minimize the distance between the current belief state S and the possible equilibria that each element of mngi(appnexti (S,O), kbi) can give rise to. We explore here two options, which differ on whether the minimization is global or local. The idea of global minimization is to choose only those knowledge base configurations \u3008k1, . . . , kn\u3009 \u2208 KBMe with ki \u2208 mngi(app next i (S,O), kbi), which guarantee minimal distance between the original belief state S and the possible equilibria of the obtained eMCS. The idea of local minimization is to consider all possible tuples \u3008k1, . . . , kn\u3009 with ki \u2208 mngi(appnexti (S,O), kbi), and only apply minimization for each such choice, i.e., for each such knowledge base configuration we only allow equilibria with minimal distance from the original belief state.\nWe first consider the case of pruning those tuples \u3008k1, . . . , kn\u3009 with ki \u2208 mngi(appnexti (S,O), kbi) which do not guarantee minimal change with respect to the original belief state. We start with an auxiliary function. Let S be a belief state for Me, K = \u3008k1, . . . , kn\u3009 \u2208 KBMe a knowledge base configuration for Me, and O = \u3008o1, . . . , o\u2113\u3009 an instant observation for Me. Then we can define the set of knowledge base configurations that are obtained from K given the belief state S and the instant observation O.\nNextKB(S,O, \u3008k1, . . . , kn\u3009) ={\u3008k \u2032 1, . . . , k \u2032 n\u3009 \u2208 KBMe :\nfor each 1 \u2264 i \u2264 n, we have that\nk\u2032i \u2208 mngi(app next i (S,O), ki)}\nFor each choice d of a distance function between belief states, we can define the set of knowledge base configurations which give rise\nto equilibria of Me which minimize the distance to the original belief state. Let S be a belief state for Me, K = \u3008k1, . . . , kn\u3009 \u2208 KBMe a knowledge base configuration for Me, and Oj and Oj+1 instant observations for Me.\nMinNext(S,Oj ,Oj+1,K) = {(S\u2032,K\u2032) :\nK\u2032 \u2208 NextKB(S,Oj ,K) and\nS\u2032 \u2208 MinCost(Me[K \u2032],Oj+1)\nsuch that there is no\nK\u2032\u2032 \u2208 NextKB(S,Oj ,K) and no\nS\u2032\u2032 \u2208 MinCost(Me[K \u2032\u2032],Oj+1)\nwith d(S, S\u2032\u2032) < d(S, S\u2032)}.\nAgain note that MinNext applies minimization over all possible equilibria resulting from every element of NextKB(S,Oj , K). Using MinNext, we can now define a minimal change criterion to be applied to evolving equilibria of Me.\nDefinition 11 Let Me = \u3008C1, . . . , Cn, O1, . . . , O\u2113\u3009 be an eMCS, Obs = \u3008O1, . . . , Om\u3009 an observation sequence for Me, and let Se = \u3008S\n1, . . . , Ss\u3009 be an evolving equilibrium of Me given Obs. We assume that \u3008K1, . . . ,Ks\u3009, with Kj = \u3008kj1, . . . , k j n\u3009, is the sequence of knowledge base configurations associated with Se as in Definition 10. Then, Se satisfies the strong minimal change criterion for Me given Obs if, for each 1 \u2264 j \u2264 s, the following conditions are satisfied:\n\u2022 Sj \u2208 MinCost(Me[K j ],Oj)\n\u2022 (Sj+1,Kj+1) \u2208 MinNext(Sj ,Oj ,Oj+1,Kj)\nWe call this minimal change criterion the strong minimal change criterion because it applies minimization over all possible equilibria resulting from every possible knowledge base configuration in NextKB(S,Oj ,K).\nThe following proposition states the desirable property that the existence of an equilibrium guarantees the existence of an equilibrium satisfying the strong minimal change criterion. We should note that this is not a trivial statement since we are combining minimization of two different elements: the cost of the operations and the distance between belief states. This proposition in fact follows from their careful combination in the definition of MinNext.\nProposition 3 Let Obs = \u3008O1, . . . , Om\u3009 be an observation sequence for Me. If Me has an evolving equilibrium of size s given Obs, then there is at least one evolving equilibrium of size s given Obs satisfying the strong minimal change criterion.\nNote that in the definition of the strong minimal change criterion, the knowledge base configurations K \u2208 NextKB(Sj ,Oj , Kj), for which the corresponding possible equilibria are not at a minimal distance from Sj , are not considered. However, there could be situations in which this minimization criterion is too strong. For example, it may well be that all possible knowledge base configurations in NextKB(Sj ,Oj ,Kj) are important, and we do not want to disregard any of them. In that case, we can relax the minimization condition by applying minimization individually for each knowledge base configuration in NextKB(Sj ,Oj ,Kj). The idea is that, for each fixed K \u2208 NextKB(Sj ,Oj , Kj) we choose only those equilibria of Me[K] which minimize the distance to Sj .\nFormally, let S be a belief state for Me, K \u2208 KBMe a knowledge base configuration for Me, and O an instant observation for Me. For each distance function d between belief states, we can define the following set:\nMinDist(S,O,K) ={S\u2032 : S\u2032 \u2208 MinCost(Me[K],O) and\nthere is no S\u2032\u2032 \u2208 MinCost(Me[K],O)\nsuch that d(S, S\u2032\u2032) < d(S, S\u2032)}\nUsing this more relaxed notion of minimization we can define an alternative weaker criterion for minimal change to be applied to evolving equilibria of an eMCS.\nDefinition 12 Let Me = \u3008C1, . . . , Cn, O1, . . . , O\u2113\u3009 be an eMCS, and Obs = \u3008O1, . . . , Om\u3009 be an observation sequence for Me, and Se = \u3008S\n1, . . . , Ss\u3009 be an evolving equilibrium of Me given Obs. We assume that \u3008K1, . . . ,Ks\u3009, with Kj = \u3008kj1, . . . , k j n\u3009, is the sequence of knowledge base configurations associated with Se as in Definition 10. Then, Se satisfies the weak minimal change criterion of Me given Obs, if for each 1 \u2264 j \u2264 s the following conditions are satisfied:\n\u2022 Sj \u2208 MinCost(Me[K j ],Oj)\n\u2022 Sj+1 \u2208 MinDist(Sj ,Kj+1,Oj+1)\nIn this case we can also prove that the existence of an evolving equilibrium implies the existence of an equilibrium satisfying the weak minimal change criterion. Again we note that the careful combination of the two minimizations \u2013 cost and distance \u2013 in the definition of MinDist, is fundamental to obtain the following result.\nProposition 4 Let Obs = \u3008O1, . . . , Om\u3009 be an observation sequence for Me. If Me has an evolving equilibrium of size s given Obs, then Me has at least one evolving equilibrium of size s given Obs satisfying the weak minimal change criterion.\nWe can easily prove that, in fact, the strong minimal change criterion is stronger than the weak minimal change criterion.\nProposition 5 Let Me = \u3008C1, . . . , Cn, O1, . . . , O\u2113\u3009 be an eMCS, and Obs = \u3008O1, . . . , Om\u3009 be an observation sequence for Me, and Se = \u3008S\n1, . . . , Ss\u3009 be an evolving equilibrium of Me given Obs. If Se satisfies the strong minimal change criterion of Me given Obs, then Se satisfies the weak minimal change criterion of Me given Obs.\nWe end this section by briefly discussing a global alternative to the minimization of costs of operations. Recall that both MinNext and MinDist combine minimization of distances between belief states, and minimization of costs of operations. The minimization on costs is done at each time instant. Another possibility is, instead of minimizing the cost at each time instant j, to minimize the global cost of an evolving equilibrium.\nWe first extend the cost function over belief states to a cost function over evolving belief states. Let Se = \u3008S1, . . . , Ss\u3009 be an evolving belief state for Me, and Obs = \u3008O1, . . . ,Om\u3009 an observation sequence for Me such that m \u2265 s. Then we can define the cost of Se given Obs:\nCost(Se, Obs) =\ns\u2211\nj=1\nCost(Sj ,Oj)\nLet Obs = \u3008O1, . . . ,Om\u3009 be an observation sequence for Me and let s \u2264 m. We now define the set of evolving equilibria of size s of Me given Obs which minimize the total cost of the operations generated by it.\nMinCost(Me, Obs, s) = {Se :\nSe is an evolving equilibrium of size s of Me given Obs and there is no evolving equilibrium S\u2032e of size s of Me given Obs such that Cost(S\u2032e, Obs) < Cost(Se, Obs)}\nSince the minimization on costs of operations is orthogonal to the minimization on distances between belief states, it would be straightforward to use MinCost(Me, Obs, s) to define the global cost versions of MinNext and MinDist, and use them to define the respective strong and weak minimal change criteria."}, {"heading": "5 Related and Future Work", "text": "In this paper we have studied the notion of minimal change in the context of the dynamic framework of evolving Multi-Context Systems (eMCSs) [15]. We have presented and discussed some alternative definitions of minimal change criteria for evolving equilibria of a eMCS.\nClosely related to eMCSs is the framework of reactive MultiContext Systems (rMCSs) [5, 9, 8] inasmuch as both aim at extending mMCSs to cope with dynamic observations. Three main differences distinguish them.\nFirst, whereas eMCSs rely on a sequence of observations, each independent from the previous ones, rMCSs encode such sequences within the same observation contexts, with its elements being explicitly timestamped. This means that with rMCSs it is perhaps easier to write bridge rules that refer, e.g., to specific sequences of observations, which in eMCSs would require explicit timestamps and storing the observations in some context, although at the cost that rMCSs need to deal with explicit time which adds an additional overhead. Second, since in rMCSs the contexts that result from the application of the management operations are the ones that are used in the subsequent state, difficulties may arise in separating non-persistent and persistent effects, for example, allowing an observation to override some fact in some context while the observation holds, but without changing the context itself \u2013 such separation is easily encodable in eMCSs given the two kinds of bridge rules, i.e., with or without the next operator. Finally, the bridge rules with the next operator allow the specification of transitions based on the current state, such as for example one encoded by the rule next(add(p)) \u2190 not p, which do not seem possible in rMCSs. Overall, these differences seem to indicate that an interesting future direction would be to merge both approaches, exploring a combination of explicitly timestamped observations with the expressiveness of the next operator.\nAlso interesting is to study how to perform AGM style belief revision at the (semantic) level of the equilibria, as in Wang et al [28], though necessarily different since knowledge is not incorporated in the contexts.\nAnother framework that aims at modeling the dynamics of knowledge is that of evolving logic programs EVOLP [2] focusing on updates of generalized logic programs. Closely related to EVOLP, hence to eMCS, are the two frameworks of reactive ASP, one implemented as a solver clingo [11] and one described in [5]. The system clingo extends an ASP solver for handling external modules provided at runtime by a controller. The output of these external modules can be seen as the observations of EVOLP. Unlike the observations in\nEVOLP, which can be rules, external modules in clingo are restricted to produce atoms so the evolving capabilities are very restricted. On the other hand, clingo permits committing to a specific answer-set at each state, a feature that is not part of EVOLP, nor of eMCSs. Reactive ASP as described in [5] can be seen as a more straightforward generalization of EVOLP where operations other than assert for self-updating a program are permitted. Whereas EVOLP employs an update predicate that is similar in spirit to the next predicate of eMCSs, it does not deal with distributed heterogeneous knowledge, neither do both versions of Reactive ASP. Moreover, no notion of minimal change is studied for these frameworks.\nThe dynamics of eMCSs is one kind of dynamics, but surely not the only one. Studying the dynamics of the bridge rules is also a relevant, non-trivial topic, to a great extent orthogonal to the current development, which nevertheless requires investigation.\nAnother important issue open for future work is a more finegrained characterization of updating bridge rules (and knowledge bases) as studied in [14] in light of the encountered difficulties when updating rules [24, 25, 27] and the combination of updates over various formalisms [25, 26].\nAlso, as already outlined in [16], we can consider the generalization of the notions of minimal and grounded equilibria [6] to eMCSs to avoid, e.g., self-supporting cycles introduced by bridge rules, or the use of preferences to deal with several evolving equilibria an eMCS can have for the same observation sequence.\nAlso interesting is to apply the ideas in this paper to study the dynamics of frameworks closely related to MCSs, such as those in [20, 13]."}, {"heading": "ACKNOWLEDGEMENTS", "text": "We would like to thank the referees for their comments, which helped improve this paper considerably. Matthias Knorr and Joa\u0303o Leite were partially supported by FCT under project \u201cERRO \u2013 Efficient Reasoning with Rules and Ontologies\u201d (PTDC/EIACCO/121823/2010). Ricardo Gonc\u0327alves was supported by FCT grant SFRH/BPD/47245/2008 and Matthias Knorr was also partially supported by FCT grant SFRH/BPD/86970/2012."}], "references": [{"title": "Normative systems represented as hybrid knowledge bases", "author": ["M. Alberti", "A.S. Gomes", "R. Gon\u00e7alves", "J. Leite", "M. Slota"], "venue": "CLIMA, eds., J. Leite, P. Torroni, T. \u00c5gotnes, G. Boella, and L. van der Torre, volume 6814 of LNCS, pp. 330\u2013346. Springer, ", "citeRegEx": "1", "shortCiteRegEx": null, "year": 2011}, {"title": "Evolving logic programs", "author": ["J. Alferes", "A. Brogi", "J. Leite", "L. Pereira"], "venue": "JELIA, eds., S. Flesca, S. Greco, N. Leone, and G. Ianni, volume 2424 of LNCS, pp. 50\u201361. Springer, ", "citeRegEx": "2", "shortCiteRegEx": null, "year": 2002}, {"title": "Stream reasoning and complex event processing in ETALIS", "author": ["D. Anicic", "S. Rudolph", "P. Fodor", "N. Stojanovic"], "venue": "Semantic Web, 3(4), 397\u2013 407, ", "citeRegEx": "3", "shortCiteRegEx": null, "year": 2012}, {"title": "C- SPARQL: a continuous query language for RDF data streams", "author": ["D. Barbieri", "D. Braga", "S. Ceri", "E. Valle", "M. Grossniklaus"], "venue": "Int. J. Semantic Computing, 4(1), 3\u201325, ", "citeRegEx": "4", "shortCiteRegEx": null, "year": 2010}, {"title": "Towards reactive multi-context systems", "author": ["G. Brewka"], "venue": "LPNMR, eds., P. Cabalar and T. C. Son, volume 8148 of LNCS, pp. 1\u201310. Springer, ", "citeRegEx": "5", "shortCiteRegEx": null, "year": 2013}, {"title": "Equilibria in heterogeneous nonmonotonic multi-context systems", "author": ["G. Brewka", "T. Eiter"], "venue": "AAAI, pp. 385\u2013390. AAAI Press, ", "citeRegEx": "6", "shortCiteRegEx": null, "year": 2007}, {"title": "Managed multi-context systems", "author": ["G. Brewka", "T. Eiter", "M. Fink", "A. Weinzierl"], "venue": "IJCAI, ed., T. Walsh, pp. 786\u2013791. IJCAI/AAAI, ", "citeRegEx": "7", "shortCiteRegEx": null, "year": 2011}, {"title": "Multi-context systems for reactive reasoning in dynamic environments", "author": ["G. Brewka", "S. Ellmauthaler", "J. P\u00fchrer"], "venue": "ECAI, eds., T. Schaub, G. Friedrich, and B. O\u2019Sullivan. IOS Press, ", "citeRegEx": "8", "shortCiteRegEx": null, "year": 2014}, {"title": "Generalizing multi-context systems for reactive stream reasoning applications", "author": ["S. Ellmauthaler"], "venue": "ICCSW, eds., A. V. Jones and N. Ng, volume 35 of OASICS, pp. 19\u201326. Schloss Dagstuhl - Leibniz-Zentrum fuer Informatik, Germany, ", "citeRegEx": "9", "shortCiteRegEx": null, "year": 2013}, {"title": "Stream reasoning with answer set programming: Preliminary report", "author": ["M. Gebser", "T. Grote", "R. Kaminski", "P. Obermeier", "O. Sabuncu", "T. Schaub"], "venue": "KR, eds., G Brewka, T. Eiter, and S. A. McIlraith. AAAI Press, ", "citeRegEx": "10", "shortCiteRegEx": null, "year": 2012}, {"title": "Reactive answer set programming", "author": ["M. Gebser", "T. Grote", "R. Kaminski", "T. Schaub"], "venue": "LPNMR, eds., J. P. Delgrande and W. Faber, volume 6645 of LNCS, pp. 54\u201366. Springer, ", "citeRegEx": "11", "shortCiteRegEx": null, "year": 2011}, {"title": "Multilanguage hierarchical logics or: How we can do without modal logics", "author": ["F. Giunchiglia", "L. Serafini"], "venue": "Artif. Intell., 65(1), 29\u201370, ", "citeRegEx": "12", "shortCiteRegEx": null, "year": 1994}, {"title": "Parametrized logic programming", "author": ["R. Gon\u00e7alves", "J. Alferes"], "venue": "JELIA, eds., T. Janhunen and I. Niemel\u00e4, volume 6341 of LNCS, pp. 182\u2013194. Springer, ", "citeRegEx": "13", "shortCiteRegEx": null, "year": 2010}, {"title": "Evolving bridge rules in evolving multi-context systems", "author": ["R. Gon\u00e7alves", "M. Knorr", "J. Leite"], "venue": "CLIMA XV, eds., N. Bulling, L. van der Torre, S. Villata, W. Jamroga, and W. Vasconcelos, ", "citeRegEx": "14", "shortCiteRegEx": null, "year": 2014}, {"title": "Evolving multi-context systems", "author": ["R. Gon\u00e7alves", "M. Knorr", "J. Leite"], "venue": "ECAI, eds., T. Schaub, G. Friedrich, and B. O\u2019Sullivan. IOS Press, ", "citeRegEx": "15", "shortCiteRegEx": null, "year": 2014}, {"title": "Towards efficient evolving multicontext systems (preliminary report)", "author": ["R. Gon\u00e7alves", "M. Knorr", "J. Leite"], "venue": "ReactKnow 2014, ", "citeRegEx": "16", "shortCiteRegEx": null, "year": 2014}, {"title": "MKNF knowledge bases in multi-context systems", "author": ["M. Homola", "M. Knorr", "J. Leite", "M. Slota"], "venue": "CLIMA, eds., M. Fisher, L. van der Torre, M. Dastani, and G. Governatori, volume 7486 of LNCS, pp. 146\u2013162. Springer, ", "citeRegEx": "17", "shortCiteRegEx": null, "year": 2012}, {"title": "A query tool for EL with nonmonotonic rules", "author": ["V. Ivanov", "M. Knorr", "J. Leite"], "venue": "ISWC, eds., H. Alani, L. Kagal, A. Fokoue, P. T. Groth, C. Biemann, J. Parreira, L. Aroyo, N. F. Noy, C. Welty, and K. Janowicz, volume 8218 of LNCS, pp. 216\u2013231. Springer, ", "citeRegEx": "18", "shortCiteRegEx": null, "year": 2013}, {"title": "Local closed world reasoning with description logics under the well-founded semantics", "author": ["M. Knorr", "J. Alferes", "P. Hitzler"], "venue": "Artif. Intell., 175(9-10), 1528\u20131554, ", "citeRegEx": "19", "shortCiteRegEx": null, "year": 2011}, {"title": "What if no hybrid reasoner is available? Hybrid MKNF in multi-context systems", "author": ["M. Knorr", "M. Slota", "J. Leite", "M. Homola"], "venue": "J. Log. Comput., ", "citeRegEx": "20", "shortCiteRegEx": null, "year": 2013}, {"title": "Predicting knowledge in an ontology stream", "author": ["F. L\u00e9cu\u00e9", "J. Pan"], "venue": "IJCAI, ed., F. Rossi. IJCAI/AAAI, ", "citeRegEx": "21", "shortCiteRegEx": null, "year": 2013}, {"title": "Reconciling description logics and rules", "author": ["B. Motik", "R. Rosati"], "venue": "J. ACM, 57(5), ", "citeRegEx": "22", "shortCiteRegEx": null, "year": 2010}, {"title": "Minimal and absent information in contexts", "author": ["F. Roelofsen", "L. Serafini"], "venue": "IJCAI, eds., L. Kaelbling and A. Saffiotti, pp. 558\u2013563. Professional Book Center, ", "citeRegEx": "23", "shortCiteRegEx": null, "year": 2005}, {"title": "On semantic update operators for answer-set programs", "author": ["M. Slota", "J. Leite"], "venue": "ECAI, eds., H. Coelho, R. Studer, and M. Wooldridge, volume 215 of Frontiers in Artificial Intelligence and Applications, pp. 957\u2013962. IOS Press, ", "citeRegEx": "24", "shortCiteRegEx": null, "year": 2010}, {"title": "Robust equivalence models for semantic updates of answer-set programs", "author": ["M. Slota", "J. Leite"], "venue": "KR, eds., G. Brewka, T. Eiter, and S. A. McIlraith. AAAI Press, ", "citeRegEx": "25", "shortCiteRegEx": null, "year": 2012}, {"title": "A unifying perspective on knowledge updates", "author": ["M. Slota", "J. Leite"], "venue": "JELIA, eds., L. del Cerro, A. Herzig, and J. Mengin, volume 7519 of LNCS, pp. 372\u2013384. Springer, ", "citeRegEx": "26", "shortCiteRegEx": null, "year": 2012}, {"title": "The rise and fall of semantic rule updates based on SE-models", "author": ["M. Slota", "J. Leite"], "venue": "TPLP, ", "citeRegEx": "27", "shortCiteRegEx": null, "year": 2014}, {"title": "Belief change in nonmonotonic multi-context systems", "author": ["Y. Wang", "Z. Zhuang", "K. Wang"], "venue": "LPNMR, eds., P. Cabalar and T. C. Son, volume 8148 of LNCS, pp. 543\u2013555. Springer, ", "citeRegEx": "28", "shortCiteRegEx": null, "year": 2013}], "referenceMentions": [{"referenceID": 5, "context": "Multi-Context Systems (MCSs) were introduced in [6], building on the work in [12, 23], to address the need for a general framework that integrates knowledge bases expressed in heterogeneous KR formalisms.", "startOffset": 48, "endOffset": 51}, {"referenceID": 11, "context": "Multi-Context Systems (MCSs) were introduced in [6], building on the work in [12, 23], to address the need for a general framework that integrates knowledge bases expressed in heterogeneous KR formalisms.", "startOffset": 77, "endOffset": 85}, {"referenceID": 22, "context": "Multi-Context Systems (MCSs) were introduced in [6], building on the work in [12, 23], to address the need for a general framework that integrates knowledge bases expressed in heterogeneous KR formalisms.", "startOffset": 77, "endOffset": 85}, {"referenceID": 12, "context": ", [13, 22], and [19] with its reasoner NoHR [18]) to which other languages could be translated, in an MCS the different formalisms and knowledge bases are considered as modules, and means are provided to model the flow of information between them (cf.", "startOffset": 2, "endOffset": 10}, {"referenceID": 21, "context": ", [13, 22], and [19] with its reasoner NoHR [18]) to which other languages could be translated, in an MCS the different formalisms and knowledge bases are considered as modules, and means are provided to model the flow of information between them (cf.", "startOffset": 2, "endOffset": 10}, {"referenceID": 18, "context": ", [13, 22], and [19] with its reasoner NoHR [18]) to which other languages could be translated, in an MCS the different formalisms and knowledge bases are considered as modules, and means are provided to model the flow of information between them (cf.", "startOffset": 16, "endOffset": 20}, {"referenceID": 17, "context": ", [13, 22], and [19] with its reasoner NoHR [18]) to which other languages could be translated, in an MCS the different formalisms and knowledge bases are considered as modules, and means are provided to model the flow of information between them (cf.", "startOffset": 44, "endOffset": 48}, {"referenceID": 0, "context": "[1, 17, 20]", "startOffset": 0, "endOffset": 11}, {"referenceID": 16, "context": "[1, 17, 20]", "startOffset": 0, "endOffset": 11}, {"referenceID": 19, "context": "[1, 17, 20]", "startOffset": 0, "endOffset": 11}, {"referenceID": 6, "context": "Managed Multi-Context Systems (mMCSs) were introduced in [7] to provide an extension of MCSs by allowing operations, other than simple addition, to be expressed in the heads of bridge rules.", "startOffset": 57, "endOffset": 60}, {"referenceID": 1, "context": "pt Examples include EVOLP [2], Reactive ASP [11, 10], C-SPARQL [4], Ontology Streams [21] and ETALIS [3], to name only a few.", "startOffset": 26, "endOffset": 29}, {"referenceID": 10, "context": "pt Examples include EVOLP [2], Reactive ASP [11, 10], C-SPARQL [4], Ontology Streams [21] and ETALIS [3], to name only a few.", "startOffset": 44, "endOffset": 52}, {"referenceID": 9, "context": "pt Examples include EVOLP [2], Reactive ASP [11, 10], C-SPARQL [4], Ontology Streams [21] and ETALIS [3], to name only a few.", "startOffset": 44, "endOffset": 52}, {"referenceID": 3, "context": "pt Examples include EVOLP [2], Reactive ASP [11, 10], C-SPARQL [4], Ontology Streams [21] and ETALIS [3], to name only a few.", "startOffset": 63, "endOffset": 66}, {"referenceID": 20, "context": "pt Examples include EVOLP [2], Reactive ASP [11, 10], C-SPARQL [4], Ontology Streams [21] and ETALIS [3], to name only a few.", "startOffset": 85, "endOffset": 89}, {"referenceID": 2, "context": "pt Examples include EVOLP [2], Reactive ASP [11, 10], C-SPARQL [4], Ontology Streams [21] and ETALIS [3], to name only a few.", "startOffset": 101, "endOffset": 104}, {"referenceID": 14, "context": "To address this issue, two recent frameworks, evolving MultiContext Systems (eMCSs) [15] and reactive Multi-Context Systems (rMCSs) [5, 9, 8] have been proposed sharing the broad motivation of designing general and flexible frameworks inheriting from mMCSs the ability to integrate and manage knowledge represented in heterogeneous KR formalisms, and at the same time be able to incorporate knowledge obtained from dynamic observations.", "startOffset": 84, "endOffset": 88}, {"referenceID": 4, "context": "To address this issue, two recent frameworks, evolving MultiContext Systems (eMCSs) [15] and reactive Multi-Context Systems (rMCSs) [5, 9, 8] have been proposed sharing the broad motivation of designing general and flexible frameworks inheriting from mMCSs the ability to integrate and manage knowledge represented in heterogeneous KR formalisms, and at the same time be able to incorporate knowledge obtained from dynamic observations.", "startOffset": 132, "endOffset": 141}, {"referenceID": 8, "context": "To address this issue, two recent frameworks, evolving MultiContext Systems (eMCSs) [15] and reactive Multi-Context Systems (rMCSs) [5, 9, 8] have been proposed sharing the broad motivation of designing general and flexible frameworks inheriting from mMCSs the ability to integrate and manage knowledge represented in heterogeneous KR formalisms, and at the same time be able to incorporate knowledge obtained from dynamic observations.", "startOffset": 132, "endOffset": 141}, {"referenceID": 7, "context": "To address this issue, two recent frameworks, evolving MultiContext Systems (eMCSs) [15] and reactive Multi-Context Systems (rMCSs) [5, 9, 8] have been proposed sharing the broad motivation of designing general and flexible frameworks inheriting from mMCSs the ability to integrate and manage knowledge represented in heterogeneous KR formalisms, and at the same time be able to incorporate knowledge obtained from dynamic observations.", "startOffset": 132, "endOffset": 141}, {"referenceID": 5, "context": "Following [6], a multi-context system (MCS) consists of a collection of components, each of which contains knowledge rep-", "startOffset": 10, "endOffset": 13}, {"referenceID": 6, "context": "In [7], an extension, called managed Multi-Context Systems (mMCSs), is introduced in order to allow other types of operations to be performed on a knowledge base.", "startOffset": 3, "endOffset": 6}, {"referenceID": 6, "context": "Note that, for the sake of readability, we consider a slightly restricted version of mMCSs where each ACCi is still a function and not a set of functions as for logic suites [7].", "startOffset": 174, "endOffset": 177}, {"referenceID": 14, "context": "In this paper we have studied the notion of minimal change in the context of the dynamic framework of evolving Multi-Context Systems (eMCSs) [15].", "startOffset": 141, "endOffset": 145}, {"referenceID": 4, "context": "Closely related to eMCSs is the framework of reactive MultiContext Systems (rMCSs) [5, 9, 8] inasmuch as both aim at extending mMCSs to cope with dynamic observations.", "startOffset": 83, "endOffset": 92}, {"referenceID": 8, "context": "Closely related to eMCSs is the framework of reactive MultiContext Systems (rMCSs) [5, 9, 8] inasmuch as both aim at extending mMCSs to cope with dynamic observations.", "startOffset": 83, "endOffset": 92}, {"referenceID": 7, "context": "Closely related to eMCSs is the framework of reactive MultiContext Systems (rMCSs) [5, 9, 8] inasmuch as both aim at extending mMCSs to cope with dynamic observations.", "startOffset": 83, "endOffset": 92}, {"referenceID": 27, "context": "Also interesting is to study how to perform AGM style belief revision at the (semantic) level of the equilibria, as in Wang et al [28], though necessarily different since knowledge is not incorporated in the contexts.", "startOffset": 130, "endOffset": 134}, {"referenceID": 1, "context": "Another framework that aims at modeling the dynamics of knowledge is that of evolving logic programs EVOLP [2] focusing on updates of generalized logic programs.", "startOffset": 107, "endOffset": 110}, {"referenceID": 10, "context": "Closely related to EVOLP, hence to eMCS, are the two frameworks of reactive ASP, one implemented as a solver clingo [11] and one described in [5].", "startOffset": 116, "endOffset": 120}, {"referenceID": 4, "context": "Closely related to EVOLP, hence to eMCS, are the two frameworks of reactive ASP, one implemented as a solver clingo [11] and one described in [5].", "startOffset": 142, "endOffset": 145}, {"referenceID": 4, "context": "Reactive ASP as described in [5] can be seen as a more straightforward generalization of EVOLP where operations other than assert for self-updating a program are permitted.", "startOffset": 29, "endOffset": 32}, {"referenceID": 13, "context": "Another important issue open for future work is a more finegrained characterization of updating bridge rules (and knowledge bases) as studied in [14] in light of the encountered difficulties when updating rules [24, 25, 27] and the combination of updates over various formalisms [25, 26].", "startOffset": 145, "endOffset": 149}, {"referenceID": 23, "context": "Another important issue open for future work is a more finegrained characterization of updating bridge rules (and knowledge bases) as studied in [14] in light of the encountered difficulties when updating rules [24, 25, 27] and the combination of updates over various formalisms [25, 26].", "startOffset": 211, "endOffset": 223}, {"referenceID": 24, "context": "Another important issue open for future work is a more finegrained characterization of updating bridge rules (and knowledge bases) as studied in [14] in light of the encountered difficulties when updating rules [24, 25, 27] and the combination of updates over various formalisms [25, 26].", "startOffset": 211, "endOffset": 223}, {"referenceID": 26, "context": "Another important issue open for future work is a more finegrained characterization of updating bridge rules (and knowledge bases) as studied in [14] in light of the encountered difficulties when updating rules [24, 25, 27] and the combination of updates over various formalisms [25, 26].", "startOffset": 211, "endOffset": 223}, {"referenceID": 24, "context": "Another important issue open for future work is a more finegrained characterization of updating bridge rules (and knowledge bases) as studied in [14] in light of the encountered difficulties when updating rules [24, 25, 27] and the combination of updates over various formalisms [25, 26].", "startOffset": 279, "endOffset": 287}, {"referenceID": 25, "context": "Another important issue open for future work is a more finegrained characterization of updating bridge rules (and knowledge bases) as studied in [14] in light of the encountered difficulties when updating rules [24, 25, 27] and the combination of updates over various formalisms [25, 26].", "startOffset": 279, "endOffset": 287}, {"referenceID": 15, "context": "Also, as already outlined in [16], we can consider the generalization of the notions of minimal and grounded equilibria [6] to eMCSs to avoid, e.", "startOffset": 29, "endOffset": 33}, {"referenceID": 5, "context": "Also, as already outlined in [16], we can consider the generalization of the notions of minimal and grounded equilibria [6] to eMCSs to avoid, e.", "startOffset": 120, "endOffset": 123}, {"referenceID": 19, "context": "in [20, 13].", "startOffset": 3, "endOffset": 11}, {"referenceID": 12, "context": "in [20, 13].", "startOffset": 3, "endOffset": 11}], "year": 2017, "abstractText": "Managed Multi-Context Systems (mMCSs) provide a general framework for integrating knowledge represented in heterogeneous KR formalisms. However, mMCSs are essentially static as they were not designed to run in a dynamic scenario. Some recent approaches, among them evolving Multi-Context Systems (eMCSs), extend mMCSs by allowing not only the ability to integrate knowledge represented in heterogeneous KR formalisms, but at the same time to both react to, and reason in the presence of commonly temporary dynamic observations, and evolve by incorporating new knowledge. The notion of minimal change is a central notion in dynamic scenarios, specially in those that admit several possible alternative evolutions. Since eMCSs combine heterogeneous KR formalisms, each of which may require different notions of minimal change, the study of minimal change in eMCSs is an interesting and highly nontrivial problem. In this paper, we study the notion of minimal change in eMCSs, and discuss some alternative minimal change criteria.", "creator": "LaTeX with hyperref package"}}}