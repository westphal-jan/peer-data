{"id": "1506.04945", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "16-Jun-2015", "title": "Spatial Symmetry Driven Pruning Strategies for Efficient Declarative Spatial Reasoning", "abstract": "Declarative spatial reasoning denotes the ability to (declaratively) specify and solve real-world problems related to geometric and qualitative spatial representation and reasoning within standard knowledge representation and reasoning (KR) based methods (e.g., logic programming and derivatives). One approach for encoding the semantics of spatial relations within a declarative programming framework is by systems of polynomial constraints. However, solving such constraints is computationally intractable in general (i.e. the theory of real-closed fields). The following principles for the encoding and encoding of spatial relations within a declarative programming framework are explained.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "histories": [["v1", "Tue, 16 Jun 2015 12:40:30 GMT  (9013kb,D)", "http://arxiv.org/abs/1506.04945v1", "22 pages. Accepted for publication at: COSIT 2015 - Conference on Spatial Information Theory XII (COSIT), Santa Fe, New Mexico, USA ,October 2015"]], "COMMENTS": "22 pages. Accepted for publication at: COSIT 2015 - Conference on Spatial Information Theory XII (COSIT), Santa Fe, New Mexico, USA ,October 2015", "reviews": [], "SUBJECTS": "cs.AI cs.LO cs.PL", "authors": ["carl schultz", "mehul bhatt"], "accepted": false, "id": "1506.04945"}, "pdf": {"name": "1506.04945.pdf", "metadata": {"source": "META", "title": "Spatial Symmetry Driven Pruning", "authors": ["Carl Schultz", "Mehul Bhatt"], "emails": [], "sections": [{"heading": null, "text": "Keywords: Declarative Spatial Reasoning, Geometric Reasoning, Logic Programming, Knowledge Representation and Reasoning"}, {"heading": "1 Introduction", "text": "Knowledge representation and reasoning (KR) about space may be formally interpreted within diverse frameworks such as: (a) analytically founded geometric reasoning & constructive (solid) geometry [21, 27, 29]; (b) relational algebraic semantics of \u2018qualitative spatial calculi\u2019 [24]; and (c) by axiomatically constructed formal systems of mereotopology and mereogeometry [1]. Independent of formal semantics, commonsense spatio-linguistic abstractions offer a human-centred and cognitively adequate mechanism for logic-based automated reasoning about spatio-temporal information [5]. . Declarative Spatial Reasoning In the recent years, declarative spatial reasoning has been developed as a high-level commonsense spatial reasoning ar X\niv :1\n50 6.\n04 94\n5v 1\n[ cs\n.A I]\n1 6\nJu n\n20 15"}, {"heading": "2 Carl Schultz and Mehul Bhatt", "text": "paradigm aimed at (declaratively) specifying and solving real-world problems related to geometric and qualitative spatial representation and reasoning [4]. A particular manifestation of this paradigm is the constraint logic programming based CLP(QS) spatial reasoning system [4, 33, 34] (Section 2).\n. Relational Algebraic Qualitative Spatial Reasoning The state of the art in qualitative spatial reasoning using relational algebraic methods [24] has resulted in prototypical algorithms and black-box systems that do not integrate with KR languages, such as those dealing with semantics and conceptual knowledge necessary for handling background knowledge, action & change, relational learning, rule-based systems etc. Furthermore, relation algebraic qualitative spatial reasoning (e.g. LR [25]), while efficient, is incomplete in general [22, 23, 24].4 Alternatively, constraint logic programming based systems such as CLP(QS) [4] and others (see [9, 10, 18, 20, 28, 29]) adopt an analytic geometry approach where spatial relations are encoded as systems of polynomial constraints;5 while these methods are sound and complete (see Section 2.2), they have prohibitive computational complexity, O(cc n 2\n1 ) in the number of polynomial variables n, meaning that even relatively simple problems are not solved within a practical amount of time via \u201cnaive\u201d or direct encodings as polynomial constraints, i.e. encodings that lack common-sense knowledge about spatial objects and relations. On the other hand, highly efficient and specialised geometric theorem provers (e.g. [12]) and geometric constraint solvers (e.g. [17, 27]) exist. However, these provers exhibit highly specialised and restricted spatial languages6 and lack (a) the direct integration with more general AI methods and (b) the capacity for incorporating modular common-sense rules about space in an extensible domain- and context-specific manner. The aims and contributions of the research presented in this paper are two-fold:\n1. to further develop a KR-centered declarative spatial reasoning paradigm such that spatial reasoning capabilities are available and accessible within AI programs and applications areas, and may be seamlessly integrated with other AI methods dealing with representation, reasoning, and learning about non-spatial aspects\n4 Incompleteness refers to the inability of a spatial reasoning method to determine whether a given network of qualitative spatial constraints is consistent or inconsistent in general. Relation-algebraic spatial reasoning (i.e. using algebraic closure based on weak composition) has been shown to be incomplete for a number of spatial languages and cannot guarantee consistency in general, e.g. relative directions [23] and containment relations between linearly ordered intervals [22], Theorem 5.9. 5 We emphasise that this analytic geometry approach that we also adopt is not qualitative spatial reasoning in the relation algebraic sense; the foundations are similar (i.e. employing a finite language of spatial relations that are interpreted as infinite sets of configurations, determining consistency in the complete absence of numeric information, and so on) but the methods for determining consistency etc. come from different branches of spatial reasoning. 6 Standard geometric constraint languages of approaches including [12, 17, 27] consist of points, lines, circles, ellipses, and coincidence, tangency, perpendicularity, parallelism, and numerical dimension constraints; note the absence of e.g. mereotopology and \u201ccommon-sense\u201d relative orientation relations [35].\nSpatial Symmetry Driven Pruning 3\n2. to demonstrate that in spite of high computational complexity in a general and domain-independent case, the power of analytic geometric \u2014in particular polynomial systems for encoding the semantics of spatial relations\u2013 can be exploited by systematically utilising commonsense knowledge about spatial object and relationships at the qualitative level.\nWe present a new algorithm that drastically improves analytic spatial reasoning performance within KR-based declarative spatial reasoning approaches by identifying and pruning spatial symmetries that form equivalence classes (based on affine transformations) at the qualitative spatial level. By exploiting symmetries our approach utilises powerful underlying, but computationally expensive, polynomial solvers in a significantly more effective manner. Our algorithm is simple to implement, and enables spatial reasoners to solve problems that are otherwise unsolvable using analytic or relation algebraic methods. We emphasise that our approach is independent of any particular polynomial constraint solver; it can be similarly applied over a range of solvers such as CLP(R), SMTs, and specialised geometric constraint solvers that have been integrated into a KR framework. In addition to AI / commonsense reasoning applications areas such as design, GIS, vision, robotics [3, 5, 6, 7], we also address application into automating support for proving the validity of theorems in mereotopology, orientation, shape, etc. (e.g. [8, 36]). Building on such foundational capabilities, another outreach is in the area of computer-aided learning systems in mathematics (e.g. at a highschool level). For instance, consider Proposition 9, Book I of Euclid\u2019s Elements, where the task is to bisect an angle using only an unmarked ruler and collapsable compass. Once a student has developed what they believe to be a constructive proof, they can employ declarative spatial reasoners to formally verify that their construction applies to all possible inputs (i.e. all possible angles) and manipulate an interactive sketch that maintains the specified spatial relations (i.e. dynamic geometry [17]). A further area of interest is verifying the entries of composition tables that are used in relation algebraic qualitative spatial reasoning [30]: given spatial objects a, b, c \u2208 U , composition \u201clook up\u201d tables are indexed by pairs of (base) relations R1ab , R2bc and return disjunctions of possible (base) relations R3ac . For each entry, the task is to prove \u2203a, b, c \u2208 U ( R1ab \u2227 R2bc \u2227 R3ac ) for only those base relations R3 in the entry\u2019s disjunction."}, {"heading": "2 Declarative Spatial Reasoning with CLP(QS)", "text": "Declarative spatial reasoning denotes the ability of declarative programming frameworks in AI to handle spatial objects and the spatial relationships amongst them as native entities, e.g., as is possible with concrete domains of Integers, Reals and Inequality relationships. The objective is to enable points, oriented points, directed line-segments, regions, and topological and orientation relationships amongst them as first-class entities within declarative frameworks in AI [4]."}, {"heading": "4 Carl Schultz and Mehul Bhatt", "text": ""}, {"heading": "2.1 Examples of Declarative Spatial Reasoning with CLP(QS)", "text": "With a focus on spatial question-answering, the CLP(QS) spatial reasoning system [4, 33, 34] provides a practical manifestation of certain aspects of the declarative spatial reasoning paradigm in the context of constraint logic programming (CLP). 7 CLP(QS) utilises a high-level language of spatial relations and commonsense knowledge about how various spatial domains behave. Such relations describe sets of object configurations, i.e. qualitative spatial relations such as coincident, left of, or partially overlapping. Through this deep integration of spatial reasoning with KR-based frameworks, the long-term research agenda is to seamlessly provide spatial reasoning in other AI tasks such as planning, non-monotonic reasoning, and ontological reasoning [4]. What follows is a brief illustration of the spatial Q/A capability supported by CLP(QS). EXAMPLE A. Massachusetts Comprehensive Assessment System (MCAS) Grade 3 Mathematics (2009), Question 12. Put a square and two rightangled triangles together to make a rectangle. (1) Put the shapes T1, T2, S illustrated in Figure 1(d) together to make a rectangle. (2) Put the shapes T1, T2, S in Figure 1(d) together to make a quadrilateral that is not a rectangle. CLP(QS) represents right-angle triangles as illustrated in Figure 1(b). Figures 1(a) and 1(c) present the CLP(QS) solutions.\nGrade 3 Mathematics (2013), Question 17. (1) How many copies of T1 illustrated in Figure 1(d) are needed to completely fill the region R illustrated in Figure 2(a) without any of them overlapping? As presented in Figure 2, CLP(QS) solves both the geometric definition and a variation where the dimensions of the rectangle and triangles are not given. EXAMPLE B. Qualitative Spatial Reasoning with Complete Unknowns In this example CLP(QS) reasons about spatial objects based solely on given qualitative spatial relations, i.e. without any geometric information. Define three cubes A,B,C. Put B inside A, and make B disconnected from C. What spatial relations can possibly hold between A and C? CLP(QS) determines that A must be disconnected from C and provides the inferred corresponding geometric constraints, as illustrated in Figure 3."}, {"heading": "2.2 Analytical Geometry Foundations for Declarative Spatial Reasoning", "text": "Analytic geometry methods parameterise classes of objects and encode spatial relations as systems of polynomial equations and inequalities [12]. For example, we can define a sphere as having a 3D centroid point (x, y, z) and a radius r, where x, y, z, r are reals. Two spheres s1, s2 externally connect or touch if\n(xs1 \u2212 xs2)2 + (ys1 \u2212 ys2)2 + (zs1 \u2212 zs2)2 = (rs1 + rs2)2 (1)\n7 Spatial Reasoning (CLP(QS)). www.spatial-reasoning.com\nSpatial Symmetry Driven Pruning 5 talking about space 17\nTriangleCount = 2, ... ; ... TriangleCount = 4, ... ; ... TriangleCount = 6, ... ; ... TriangleCount = 8, ... ; false.\n2012 Regenst High School Examination, The University of the State of New York\nPart 1, Question 1. Line n intersects lines l and m, forming angles shown in Figure 4.\nWhich value of x would prove l||m?\n| T1 = right_triangle(_,_,1,1),\n| size(equal, T1, TRest), | topology(rcc8(eq), rectangle(point(0,0),3,1), | tile_union([T1|TRest])).\n| M=line(_, horizon_angle(_)),\n| N=line(_, horizon_angle(_)), | | {Theta1 =:= 18 * X - 12}, | {Theta2 =:= 6 * X + 42}, | | orientation(parallel, L,M), | orientation(angle_degrees(Theta1), M,N), | orientation(angle_degrees(Theta2), L,N), | true.\n... Theta1 = Theta2, Theta2 = 69.0, X = 4.5\n6 Carl Schultz and Mehul Bhatt\ntalking about space 19\nFigures/clpqs/nyu-exercise.png\nFigure 4: Regents High School Examination question to find x to prove that l and m are parallel.\ntakes the points of the robots location and the goal location and the facing\ndirection and gives us the orientation of the goal relative to the robot. The possible relations are left, right, front and back. get_direction(point(Xa,Ya), point(Xb,Yb), direction(D) , Rel):-\ndirection(point(Xa,Ya), direction(D), Line), orientation(Rel,Line, point(Xb, Yb)).\nTo execute the sensing actions, extend the sensing interrupt by the new\nsensing action. interrupt(sensed = false, [\nsenseFront, senseGoalLocation, senseRobotLocation\n]),\nTo let the robot turn into the direction of the goal after each step, define two\nnew interrupts after the sensing interrupt.\nThe first interrupt is executed when the next field is free and the robot has\nnot moved in the last step.\nIf the system of polynomial constraints is satisfiable then the spatial constraint graph is consistent. Specifically, the system of polynomial (in)equalities over variablesX is satisfiable if there exists a real number assignment for each x \u2208 X such that the (in)equalities are true. Partial geometric information (i.e. a combination of numerical and qualitative spatial information) is utilised by assigning the given real numerical values to the corresponding object parameters. Thus, we can integrate spatial reasoning and logic programming using Constraint Logic Programming (CLP) [19]; this system is called CLP over qualitative spatial domains. CLP(QS), provides a suitable framework for expressing a d proving first-order spatial theorems. Cylindrical Algebraic Decomposition (CAD) [13] is a prominent sound and complete algorithm for deciding satisfiability of a general system of polynomial constraints over reals and has time complexity O(cc n 2\n1 ) in th number of free variables [2]. Thus, a key focus within analytic spatial reasoning has been methods for managing this inherent intractibility.8 More efficient refinements of the original CAD algorithm include partial CAD [14]. Symbolic methods for solving systems of multivariate equations include the Gr\u00f6bner basis method [11] and Wu\u2019s characteristic set method [40]. In the QUAD-CLP(R) system, the authors improve solving performance by using linear approximations of quadratic constraints and by identifying geometric equivalence classes [28]. Ratschan employs pruning methods, also at the polynomial level, in the rsolve system [31, 32].\n8 Important factors in determining the applicability of various analytic approaches are the degree of the polynomials (particularly the distinction between linear and nonlinear) and whether both equality and inequalities are permitted in the constraints.\nSpatial Symmetry Driven Pruning 7\nConstructive and iterative (i.e. Newton and Quasi-Newton iteration) methods solve spatial reasoning problems by \u201cbuilding\u201d a solution, i.e. by finding a configuration that satisfies the given constraints [27]. If a solution is found, then the solution itself is the proof that the system is consistent \u2013 but what if a solution is not found within a given time frame? In general these methods are incomplete for spatial reasoning problems encoded as nonlinear equations and inequalities of arbitrary degree.9"}, {"heading": "3 Spatial Symmetries", "text": "Information about objects and their spatial relations is formally expressed as a constraint graph G = (N,E), where the nodes N of the graph are spatial objects and the edges between nodes specify the relations between the objects. Objects belong to a domain, e.g. points, lines, squares, and circles in 2D Euclidean space, and cuboids, vertically-extruded polygons, spheres, and cylinders in 3D Euclidean space. We denote the object domain of node i as Ui (spatial domains are typically infinite). A node may refer to a partially ground, or completely geometrically ground object, such that Ui can be a proper subset of the full domain of that object type. Each element i\u2032 \u2208 Ui is called an instance of that object domain. A configuration of objects is a set of instances {i\u20321, . . . , i\u2032n} of nodes i1, . . . , in respectively. A binary relation Rij between nodes i, j distinguishes a set of relative configurations of i, j; relation R is said to hold for those configurations, Rij \u2286 Ui\u00d7Uj . In general, an n-ary relation for n \u2265 1 distinguishes a set of configurations between n objects: Ri1,...,in \u2286 Ui1 \u00d7 \u00b7 \u00b7 \u00b7 \u00d7 Uin . An edge between nodes i, j is assigned a logical formula over relation symbols R1, . . . , Rm and logical operators \u2228,\u2227,\u00ac. Given an interpretation i\u2032, j\u2032, the formula for edge e is interpreted in the standard way, denoted e(i\u2032, j\u2032):\n\u2013 R1 \u2261 (i\u2032, j\u2032) \u2208 R1ij \u2013 (R1 \u2228R2) \u2261 (i\u2032, j\u2032) \u2208 R1ij \u222aR2ij \u2013 (R1 \u2227R2) \u2261 (i\u2032, j\u2032) \u2208 R1ij \u2229R2ij \u2013 (\u00acR1) \u2261 (i\u2032, j\u2032) \u2208 (Ui \u00d7 Uj) \\R1ij\nAn edge between i, j is satisfied by a configuration i\u2032, j\u2032 if e(i\u2032, j\u2032) is true (this is generalised to n-ary relations). A spatial constraint graph G = (N,E) is consistent or satisfiable if there exists a configuration s of N that satisfies all edges in E, denoted G(s); this is referred to as the consistency task. Graph G\u2032 is a consequence of, or implied by, G if every spatial configuration that satisfies G also satisfies G\u2032. This is the sufficiency task (or entailment) that we commonly apply to constructive proofs, where the task is to prove that objects and relations in G are sufficient for ensuring that particular properties hold in G\u2032. Given graph G, two key questions are (1) how to give meaning, or interpret, the spatial relations in G, and (2) how to efficiently determine consistency and produce instantiations of G. That is, we need to adopt a method for spatial reasoning. 9 That is, constructive methods may fail in building a consistent solution, and iterative root finding methods may fail to converge."}, {"heading": "8 Carl Schultz and Mehul Bhatt", "text": ""}, {"heading": "3.1 An Example of the Basic Concept", "text": "A key insight is that spatial configurations form equivalence classes over qualitative relationships based on certain affine transformations. For example, consider the spatial task of determining whether five same-sized spheres can be mutually touching. Suppose we are given a specific numerically defined configuration of four mutually touching spheres as illustrated in Figure 4(a), and we prove that it is impossible to add an additional mutually touching sphere to this configuration. That is, let s1, . . . , s4 be unit spheres (radius 1), centred on points p1 = (0, 0, 0), p2 = (2, 0, 0), p3 = (1, \u221a 3, 0), p4 = (1, \u221a 1 3 , \u221a 8 3 ), respectively. According to Equation 1, s1, . . . , s4 are mutually touching. We prove that a fifth same-sized, mutually touching sphere cannot be added to this configuration by determining that the corresponding system of polynomial constraints is unsatisfiable (the system consists of four constraints with three free variables xs5 , ys5 , zs5 , by reapplying Equation 1 between s5 and each other sphere, e.g. s1 touches s5 is x2s5 + y 2 s5 + z 2 s5 = 4).\nNow consider that we apply an affine transformation to the original configuration such as rotation, translation, scaling, or reflection, as illustrated in Figures 4(b) and 4(c). After having applied the transformation, it is still impossible to add a fifth mutually touching sphere, because the relevant qualitative (topological) relations are preserved under these transformations. Thus, when we proved that it was impossible to add a fifth same-sized mutually touching sphere to the original given configuration, in fact we proved it for a class of configurations, specifically, the class of configurations that can be reached by applying an affine transformation to the original configuration. Now, when determining consistency of graphs of qualitative spatial relations, we are not given any specific spatial configurations to work with (i.e. complete absence of numerical information), and instead need to prove consistency over all possible configurations. The key is that, each time we ground and constrain variables, we are eliminating a spatial symmetry from our partially defined configuration. If we maintain knowledge about symmetries that certain object types have (e.g. spheres have complete rotational symmetry) then we can judiciously \u201ctrade\u201d symmetries for unbound variables in our polynomial encoding at a purely symbolic level. Importantly, rather than having to compute symmetries or undertake any complex symmetry detection procedure, we are instead building knowledge about space and spatial properties of objects into the spatial solver at a declarative level. Thus, we are able to efficiently reason over an infinite set of possible configurations by incrementally pruning spatial symmetries based on commonsense\nSpatial Symmetry Driven Pruning 9\nknowledge about space, and this pruning is exploited by eliminating and constraining variables in the underlying polynomial encoding."}, {"heading": "3.2 Theoretical Foundations for Symmetries", "text": "Due to the parameterisation of objects, spatial configurations are embedded in n-dimensional Euclidean space Rn (1 \u2264 n \u2264 3) with a fixed origin point. Let V,W be Euclidean spaces in Rn, each with an origin. Given vectors x, y and constant k, a linear transformation f is a mapping V \u2192W such that f(x+ y) = f(x) + f(y) (additive) f(kx) = kf(x) (homogeneous) An affine transformation f \u2032 is a linear transformation composed with a translation. It is convenient to represent a linear transformation on vector x as a left multiplication of a d\u00d7d real matrix Q, and translation as an addition of vector t, f \u2032(x) = Qx+ t. We denote a transformation T applied to a spatial configuration of objects s as Ts. We distinguish particular classes of transformations with respect to the qualitative spatial relationships that are preserved, for example, in R2 the following matrices represent rotation by \u03b8, uniform scaling by k > 0, and horizontal reflection, respectively:( cos(\u03b8) \u2212sin(\u03b8) sin(\u03b8) cos(\u03b8) ) , ( k 0 0 k ) , ( \u22121 0 0 1 ) .\nGiven transformation T we annotate it with its type c \u2208 C, e.g. C = {translate, rotate, scale, reflect} as T c. Each spatial relation R belongs to a class of relations in Rel, such as topology, mereology, coincidence, relative orientation, distance. Let Sym be a function Sym : Rel \u2192 2C that represents the classes of transformations that preserve a given class of spatial relations. The Sym function is our mechanism for building knowledge about spatial symmetries into the spatial reasoning system. Let RelG be the set of classes of the spatial relations that are used in the spatial constraint graph G, and let SymG = \u22c2 R\u2208RelG Sym(R).\nThe following formal Condition on SymG states that transformations (applied to the embedding space) define equivalence classes of configurations with respect to the consistency of spatial constraint graphs. When satisfied, this condition provides a theoretically sound foundation for symmetry pruning.\nCondition 1 Given spatial constraint graph G, configuration s, and affine transformation T c with c \u2208 SymG then G(s) is true if and only if G(T cs)."}, {"heading": "3.3 Polynomial Encodings for Spatial Relations", "text": "In this section we define a range of spatial domains and spatial relations with the corresponding polynomial encodings. While our method is applicable to a wide range of 2D and 3D spatial objects and qualitative relations, for brevity and clarity we primarily focus on a 2D spatial domain. Our method is readily applicable to other 2D and 3D spatial domains and qualitative relations, for example, as defined in [4, 9, 10, 28, 29, 33, 34]."}, {"heading": "10 Carl Schultz and Mehul Bhatt", "text": "\u2013 a point is a pair of reals x, y \u2013 a line segment is a pair of end points p1, p2 (p1 6= p2) \u2013 a rectangle is a point p representing the bottom left corner, a unit direction\nvector v defining the orientation of the base of the rectangle, and a real width and height w, h (0 < w, 0 < h); we can refer to the vertices of the rectangle: let v\u2032 = (\u2212yv, xv) be v rotated 90o counter-clockwise, then p1 = p = p5, p2 = wv + p1, p3 = wv + hv\n\u2032 + p1, p4 = hv\u2032 + p1 \u2013 a circle is a centre point p and a real radius r (0 < r)\nWe consider the following spatial relations:\nRelative Orientation. Left, right, collinear orientation relations between points and segments, and parallel, perpendicular relations between segments [23].\nCoincidence. Intersection between a point and a line, and a point and the boundary of a circle. Also whether the point is in the interior, outside or on the boundary of a region.\nMereology. Part-whole relations between regions [37].\nTable 1 presents the corresponding polynomial encodings. Given three real variables v, i, j, let:\nv \u2208 [i, j] \u2261 i \u2264 v \u2264 j \u2228 j \u2264 v \u2264 i.\nSpatial Symmetry Driven Pruning 11\nl1 l2\nl3 pa pb pc pd\nl1 l2\nl3 pa pb pc pd\nl1\nl2\nl3 pa pb\npcpd l1\nl2\nl3 pa\npb\npcpd\n(a) configuration of points and lines\nl1 l2\nl3 pa pb pc pd\nl1 l2\nl3 pa pb pc pd\nl1\nl2\nl3 pa pb\npcpd l1\nl2\nl3 pa\npb\npcpd\n(b) vertical reflection\nl1 l2\nl3 pa pb pc pd\nl1 l2\nl3 pa pb pc pd\nl1 l2 l3 pa pb pcpd l1 l2 l3 pa pb pcpd (c) x-scaling\nl1 l2\nl3 pa pb pc pd\nl1 l2\nl3 pa pb pc pd\nl1 l2 l3 pa pb pcpd l1 l2 l3 pa pb pcpd\n(d) rotation\nFig. 5. Affine transformations preserve point coincidence, parallelism, and ratios of distances along parallel lines.\nDetermining whether a point is inside a rectangle is based on vector projection. Point p is projected onto vector v by taking the dot product,\n(xp, yp) \u00b7 (xv, yv) = xpxv + ypyv\nGiven point a and rectangle b, we translate the point such that the bottom left corner of b is at the origin, project pa on the base and side vectors of b, and check whether the projection lies within the width and height of the rectangle,\n0 < (pa \u2212 p1b) \u00b7 vb < wb 0 < (pa \u2212 p1b) \u00b7 v\u2032b < hb\nConvex regions a, b are disconnected iff there is a hyperplane of separation, i.e. there exists a line l such that a and b lie on different sides of l. This is the basis for determining the discrete from relation between rectangles."}, {"heading": "3.4 Formalising Knowledge about Symmetries", "text": "In this section we formally determine the qualitative spatial relations that are preserved by various affine transformations. A fundamental property of affine transformations is that they preserve (a) point coincidence (e.g. line intersections), (b) parallelism between straight lines, and (c) proportions of distances between points on parallel lines [26]. For example, consider the configuration of points pa, pb, pc, pd and lines l1, l2, l3 in Figure 5: (a) we cannot introduce new points of coincidence between lines by applying transformations such as translation, scaling, reflection, and rotation. Conversely, if two lines intersect, then they will still intersect after these transformations; (b) lines l1, l2 are parallel before and after the transformations; lines l1, l3 are always non-parallel; (c) the ratio of distances between collinear points pa, pb, pc is maintained; formally, let sij be the segment between points pi, pj and let |sij | be the length of the segment. Then the ratio |sab||sbc| in Figure 5 is the same before and after the transformations.\nBased on these properties we can determine the transformations that preserve various qualitative spatial relations.10\n10 The properties of affine transformations and the geometric objects that they preserve are well understood; further information is readily available in introductory texts such as [26]. Our key contribution is formalising and exploiting this spatial knowledge as modular and extensible common-sense rules in intelligent knowledge-based spatial assistance systems."}, {"heading": "12 Carl Schultz and Mehul Bhatt", "text": "Theorem 1 The following qualitative spatial relations are preserved under translation, scale, rotation, and reflection (applied to the embedding space): topology, mereology, coincidence, collinearity, line parallelism.\nProof. By definition, affine transformations preserve parallelism with respect to qualitative line orientation, and point coincidence. Due to preservation of point coincidence and proportions of collinear distances by affine transformations, it follows that mereological part of and topological contact relations between regions are preserved, i.e. if a mereological or topological relation changes between regions a, b, then by definition there exists a point p coincident with a such that the coincidence relation between p and b has changed; but this cannot occur as point coincidence is maintained with affine transformations by definition, therefore mereological and topological relations are also maintained.\nThe interaction between spatial relations and transformations is richer than we have space to elaborate on here, i.e. not all qualitative spatial relations are preserved under all affine transformations; orientation is not preserved under reflection (e.g. Figure 5(b) gives a counter example), distance is not preserved under non-uniform scaling. To summarise, we formalise the following knowledge as modular commonsense rules in CLP(QS): point-coincidence, line parallelism, topological and mereological relations are preserved with all affine transformations. Relative orientation changes with reflection, and qualitative distances and perpendicularity change with non-uniform scaling. Spheres, circles, and rectangles are not preserved with non-uniform scaling, with the exception of axisaligned bounding boxes.\n\u201cTrading\u201d Transformations Symmetries are used to eliminate object variables. As a metaphor, unbound variables are replaced by constant values in \u201cexchange\u201d for transformations. We start with a set of transformations that can be applied to a configuration: translation, scaling, arbitrary rotation, and horizontal and vertical reflection. We can then \u201ctrade\u201d each transformation for an elimination of variables. Each transformation can only be \u201cspent\u201d once. Theorem 2 presents an instance of such a pruning case. Table 2 presents a variety of different pruning cases for position variables and the associated combination of transformations, as illustrated in Figure 6.11 Some cases require more than one distinct set of parameter restrictions to cover the set of all position variables due to point coincidence being preserved by affine transformations. For example, consider case (f): all pairs of points p1, p2 can be transformed into any other pair of points pi, pj by translation, rotation, and scaling, iff p1 = p2 \u2194 pi = pj . Thus, to cover all pairs of possible points, we need to consider two distinct parameter restrictions: pi = pj and pi 6= pj ; we refer to these as subcases. Many further pruning cases are identifiable. For example, a version of case (i) can be defined without reflection by requiring more sub-cases where c4 > c2 and c4 < c2. Case (i) can be extended so that all six coordinates of three points are grounded if we also \u201cexchange\u201d the skew transformation (e.g. applicable to object domains like triangles or points). 11 All cases have been verified using Reduce as presented in Theorem 2.\nSpatial Symmetry Driven Pruning 13\nTheorem 2 Any pair of object position variables (x1, y1), (x2, y2) can be transformed into any given position constants (c1, c2), (c3, c2) such that (c1 = c3 \u2194 (x1 = x2 \u2227 y1 = y2)) by applying: an xy-translation, a rotation about the origin in the range (0, 2\u03c0), and an x-scale.\nProof. The corresponding expression has been verified using the Reduce system (Redlog quantifier elimination) [15]; all variables are quantified over reals. \u2200c1\u2200c2\u2200c3\u2200x1\u2200y1\u2200x2\u2200y2 (c1 = c3 \u2194 (x1 = x2 \u2227 y1 = y2))\u2194 \u2203tx\u2203ty\u2203dx\u2203dy\u2203sx\n( (0 < sx) \u2227 (d2x + d2y = 1) \u2227 letS = ( sx 0 0 1 ) \u2227 letR = ( dx \u2212 dy dy dx ) \u2227 letT = ( tx ty ) \u2227(\nc1 c2\n) = SR ( x1 y1 ) + T \u2227 ( c3 c2 ) = SR ( x2 y2 ) + T ) \u2261 >\nWe can use this pruning case on any spatial constraint graph G where the graph\u2019s spatial relations are preserved by translation, rotation, and scaling. Given graph G = (N,E), the following Algorithm applies the pruning case, with selected constants c1 = 0, c2 = 0, and c3 = 1 or c3 = 0:\n1. select object position variables p1, p2 from nodes in N 2. copy G to create G1, G2 3. in G1 set p1 = (0, 0), p2 = (1, 0) (case c1 6= c3) 4. in G2 set p1 = (0, 0), p2 = (0, 0) (case c1 = c3) 5. if the task is:\n(a) consistency of G then solve \u22282 i=1 \u2203s Gi(s)\n(b) sufficiency, G\u2192 G\u2032, then solve\u22272 i=1 \u00ac\u2203s(Gi(s) \u2227 \u00acG\u2032(s))\nIn Step 1 any pair of objects can be selected for which their position variables will be grounded; we also employ policies that target computationally costly subgraphs (for example, pairs of non-equal circles that share a boundary point are often good candidates for this pruning case). Having eliminated free variables from the system of polynomial constraints, the constraints are significantly more simple to solve. Due to the double exponential complexity O(cc n 2\n1 ) reducing n has a significant impact on performance; the system may even collapse from nonlinear constraints to linear (solvable in O(cn)) or constants."}, {"heading": "3.5 Combining Symmetry Pruning with Graph Decomposition", "text": "In certain cases, spatial constraint graphs can be decomposed into subgraphs that can be solved independently. For example, subgraphs G1, G2 can be independently solved if all objects in subgraph G1 are either:\n\u2013 disconnected from all objects in subgraph G2; \u2013 a proper part of some object in G2; \u2013 left of some segment in G2; \u2013 only related by relative size to some object in G2, and so on.\n14 Carl Schultz and Mehul Bhatt\nx\ny x1=c1\nx\ny x1=c1 y1=c2\nx\ny\nx2=c2x1=c1\nx\ny y2=c2\nx1=c1\nx\ny\nx1=c1 y1=c2\nx2=c3\nx\ny\nx1=c1 y1=c2 x2=c3 y2=c2\nx\ny\nx2=c2x1=c1 x\ny\nx1=c1 y1=c2 x2=c3\nx\ny\nx1=c1 y1=c2 x2=c3 y2=c2\ny3=c3 y3=c4 y3=c4\n(a)\nx\ny x1=c1\nx\ny x1=c1 y1=c2\nx\ny\nx2=c2x1=c1\nx\ny y2=c2\nx1=c1\nx\ny\nx1=c1 y1=c2\nx2=c3\nx\ny\nx1=c1 y1=c2 x2=c3 y2=c2\nx\ny\nx2=c2x1=c1 x\ny\nx1=c1 y1=c2 x2=c3\nx\ny\nx1=c1 y1=c2 x2=c3 y2=c2\ny3=c3 y3=c4 y3=c4\n(b)\nx\ny x1=c1\nx\ny x1=c1 y1=c2\nx\ny\nx2=c2x1=c1\nx\ny y2=c2\nx1=c1\nx\ny\nx1=c1 y1=c2\nx2=c3\nx\ny\nx1=c1 y1=c2 x2 c3 y2 c2\nx\ny\nx2=c2x1=c1 x\ny\nx1=c1 y1=c2 x2=c3\nx\ny\nx1=c1 y1=c2 x2 c3 y2 c2\ny3=c3 y3=c4 y3=c4\n(c)\nx\ny x1=c1\nx\ny x1=c1 y1=c2\nx\ny\nx2=c2x1=c1\nx\ny y2=c2\nx1=c1\nx\ny\nx1=c1 y1=c2\nx2=c3\nx\ny\nx1=c1 y1=c2 x2=c3 y2=c2\nx\ny\nx2=c2x1=c1 x\ny\nx1=c1 y1=c2 x2=c3\nx\ny\nx1=c1 y1=c2 x2=c3 y2=c2\ny3=c3 y3=c4 y3=c4\n(d)\nx\ny x1=c1\nx\ny x1=c1 y1=c2\nx\ny\nx2=c2x1=c1\nx\ny y2=c2\nx1=c1\nx\ny\nx1=c1 y1=c2\nx2=c3\nx\ny\nx1=c1 y1=c2 x2=c3 y2=c2\nx\ny\nx2=c2x1=c1\nx\ny\nx1=c1 y1=c2 x2=c3\nx\ny\nx1=c1 y1=c2 x2=c3 y2=c2\ny3=c3 y3=c4 y3=c4\n(e)\ny x1=c1\nx\ny x1=c1 y1=c2\nx\ny\nx2=c2x1=c1\nx\ny y2=c2\nx1=c1\nx\ny\nx1=c1 y1=c2\nx2=c3\nx\ny\nx1=c1 y1=c2 x2=c3 y =c2\nx\ny\nx2=c2x1=c1\nx\ny\nx1=c1\ny1=c2 x2=c3\nx\ny\nx1=c1 y1=c2 x2=c3 y =c2\ny3=c3 y3=c4 y3=c4\n(f)\nx\ny x1=c1\nx\ny x1=c1 y1=c2\nx\ny\nx2=c2x1=c1\nx\ny y2=c2\nx1=c1\nx\ny\nx1=c1 y1=c2\nx2=c3\nx\ny\nx1=c1 y1=c2 x2=c3 y2=c2\nx\ny\nx2=c2x1=c1 x\ny\nx1=c1 y1=c2 x2=c3\nx\ny\nx1=c1 y1=c2 x2=c3 y2=c2\ny3=c3 y3=c4 y3=c4\n(g)\nx\ny x1=c1\nx\ny x1=c1 y1=c2\nx\ny\nx2=c2x1=c1\nx\ny y2=c2\nx1=c1\nx\ny\nx1=c1 y1=c2\nx2=c3\nx\ny\nx1=c1 y1=c2 x2=c3 y2=c2\nx\ny\nx2=c2x1=c1 x\ny\nx1=c1 y1=c2 x2=c3\nx\ny\nx1=c1 y1=c2 x2=c3 y2=c2\ny3=c3 y3=c4 y3=c4\n(h)\nx\ny x1=c1\nx\ny x1=c1 y1=c2\nx\ny\nx2=c2x1=c1\nx\ny y2=c2\nx1=c1\nx\ny\nx1=c1 y1=c2\nx2=c3\nx\ny\nx1=c1 y1=c2 2=c3 y2=c2\nx\ny\nx2=c2x1=c1 x\ny\nx1=c1 y1=c2 x2=c3\nx\ny\nx1=c1 y1=c2 x2=c3 y2=c2\ny3=c3 y3=c4 y3=c4\n(i)\nFig. 6. Cases for pruning position parameters.\nIn such cases we can reapply spatial symmetry pruning in each independent sub-graph; this commonsense spatial knowledge is modularly formalised within CLP(QS). For example, consider Proposition 22 of Book I of Euclid\u2019s Elements (Figure 7):\nConstructing a triangle from three segments. Given three line segments lab, lcd, lef , draw a line through four collinear points p1, . . . , p4 such that |(p1, p2)| = |lab|, |(p2, p3)| = |lcd|, |(p3, p4)| = |lef |. Draw circle ca centred on p2, coincident with p1. Draw circle cb centred on p3 coincident with p4. Draw p5 coincident with ca and cb. The triangle p2, p3, p5 has side lengths such that |(p2, p3)| = |lcd|, |(p3, p5)| = |lef |, |(p5, p2)| = |lab|.\nIn this example, the three segments lab, lcd, lef and the remaining objects are only related by the distances between their end points. That is, the relative position and orientation of lab, lcd, lef is not relevant to the consistency of the spatial graph; we only need to explore all combinations of segment lengths. Thus the solver decomposes the graph into four sub-graphs: (1) lab (2) lcd (3) lef , and (4) p1, . . . , p5, ca, cb. In subgraphs (1),(2),(3) it \u201ctrades\u201d translation and rotation to ground pa = pc = pe = (0, 0), and yb = yd = yf = 0 and keeps x-scale to cover all possible combinations of segment lengths, i.e. xb, xd, xf are free variables. In subgraph (4) CLP(QS) applies the pruning case of Theorem 2 by grounding p1, p4.\nSpatial Symmetry Driven Pruning 15\nCase Parameter restrictions Traded transformations a x1 = c1 x-translate b x1 = c1, y1 = c2 xy-translate c x1 = c1, x2 = c2, (i) c1 6= c2 (ii) c1 = c2 x-translate, rotate \u03c0, x-scale d x1 = c1, y2 = c2 xy-translate e x1 = c1, y1 = c2, x2 = c3, xy-translate, rotate \u03c0, x-scale\n(i) c1 6= c3 (ii) c1 = c3 f x1 = c1, y1 = c2, x2 = c3, y2 = c2, xy-translate, rotate (0, 2\u03c0), x-scale\n(i) c1 6= c3 (ii) c1 = c3 g x1 = c1, x2 = c2, y3 = c3 xy-translate, rotate \u03c0, x-scale\n(i) c1 6= c2 (ii) c1 = c2 h \u2217 x1 = c1, y1 = c2, x2 = c3, y3 = c4 xy-translate, rotate \u03c0, xy-scale,\n(i) c1 6= c3 \u2227 c2 6= c4 (ii) c1 = c3 \u2227 c2 6= c4 y-reflect (iii) c1 6= c3 \u2227 c2 = c4 (iv) c1 = c3 \u2227 c2 = c4\ni \u2217 x1 = c1, y1 = c2, x2 = c3, y2 = c2, y3 = c4 xy-translate, rotate (0, 2\u03c0), xy-scale, (i) c1 6= c3 \u2227 c2 6= c4 (ii) c1 6= c3 \u2227 c2 = c4 y-reflect (iii) c1 = c3 \u2227 c2 = c4\nTable 2. Cases for pruning parameters for one position point (a,b), two position points (c-f), three position points (g-i). Cases marked with \u2217 require arbitrary scaling (i.e. both uniform and non-uniform).\nSpatial Symmetry Driven Pruning 15\nCase Parameter restrictions Traded transformations a x1 = c1 x-translate b x1 = c1, y1 = c2 xy-translate c x1 = c1, x2 = c2, (i) c1 6= c2 (ii) c1 = c2 x-translate, rotate \u21e1, x-scale d x1 = c1, y2 = c2 xy-translate e x1 = c1, y1 = c2, x2 = c3, xy-translate, rotate \u21e1, x-scale\n(i) c1 6= c3 (ii) c1 = c3 f x1 = c1, y1 = c2, x2 = c3, y2 = c2, xy-translate, rotate (0, 2\u21e1), x-scale\n(i) c1 6= c3 (ii) c1 = c3 g x1 = c1, x2 = c2, y3 = c3 xy-translate, rotate \u21e1, x-scale\n(i) c1 6= c2 (ii) c1 = c2 h \u21e4 x1 = c1, y1 = c2, x2 = c3, y3 = c4 xy-translate, rotate \u21e1, xy-scale,\n(i) c1 6= c3 ^ c2 6= c4 (ii) c1 = c3 ^ c2 6= c4 y reflect (iii) c1 6= c3 ^ = c4 (iv) c1 = c3 ^ c2 = c4\ni \u21e4 y1 , x2 = c3, y2 = 2, y3 = c4 y-translate, rotate (0, 2\u21e1), xy-scale, (i) c1 6= c3 ^ 6= c4 (ii) c1 6= c3 ^ c2 = c4 y-reflect (iii) c1 = c3 ^ = c4\nTable 2. Cases for pruning parameters for one position point (a,b), two position points (c-f), three position points (g-i). Cases marked with \u21e4 require arbitrary scaling (i.e. both uniform and non-uniform).\nlab lcd\nlef\np1 p2 p3 p4\np5\nFig. 7. Constructing a triangle by decomposing the spatial constraint graph.\n?- Sab = segment(Pa,Pb), Scd = segment(Pc,Pd), Sef = segment(Pe,Pf), | S12 = segment(P1,P2), S23 = segment(P2,P3), S34 = segment(P3,P4), | S14 = segment(P1,P4), | coincident(P2,S14), coincident(P3,S14), | | length_dim(equal, S12, Sab), | length_dim(equal, S23, Scd), | length_dim(equal, S34, Sef), | | Ca=circle(P2,_), coincident(P1,Ca), | Cb=circle(P3,_), coincident(P4,Cb), | coincident(P5,Ca), coincident(P5,Cb), | S35 = segment(P3,P5), S52 = segment(P5,P2), | | %% triangle | length_dim(equal, S23, Scd), | length_dim(equal, S35, Sef), | length_dim(equal, S52, Sab). true. ... | (length_dim(not_equal, S23, Scd); | length_dim(not_equal, S35, Sef); | length_dim(not_equal, S52, Sab)). false."}, {"heading": "4 Application-Driven Use Cases", "text": "We present problem instances in the classes of mereology, ruler and compass, and contact. Table 3 presents the experiment time results of CLP(QS) using symmetry pruning compared with existing systems: z3 SMT solver, Redlog real\nquantifier elimination (in the Reduce computer algebra system) [12], and the re-\nlation algebraic qualitative spatial reasoners GQR [13] and SparQ [35]. CLP(QS) uses z3 to solve polynomial constraints (after our pruning), thus z3 is the most\nlab lcd lef\np1 p2 p3 p4\np5\nFig. 7. Constructing a triangle by decomposing the spatial constraint graph."}, {"heading": "4 Application-Driven Use Cases", "text": "We present problem instances in the classes of mereology, ruler and compass, and contact. Table 3 presents the experiment time results of CLP(QS) using symmetry pruning compared with existing systems: z3 SMT solver, Redlog real"}, {"heading": "16 Carl Schultz and Mehul Bhatt", "text": "quantifier elimination (in the Reduce computer algebra system) [15], and the relation algebraic qualitative spatial reasoners GQR [16] and SparQ [39]. CLP(QS) uses z3 to solve polynomial constraints (after our pruning), thus z3 is the most direct comparison. Experiments were run on a MacBookPro, OS X 10.8.5, 2.6 GHz Intel Core i7. The empirical results show that no other spatial reasoning system exists (to the best of our knowledge) that can solve the range of problems presented in this section, and in cases where solvers are applicable, CLP(QS) with spatial pruning solves those problems significantly faster than other systems."}, {"heading": "4.1 Spatial Theorem Proving: Geometry of Solids", "text": "Tarski [36] shows that a geometric point can be defined by a language of mereological relations over spheres. The idea is to distinguish when spheres are concentric, and to define a geometric point as the point of convergence. Borgo [8] shows that this can be accomplished with a language of mereology over hypercubes. We will use CLP(QS) to prove that the definitions are sound for rotatable squares. As a preliminary we need to determine whether the intersection of two squares is non-square (Figure 8) [34]. Given two squares a, b, the intersection is nonsquare if a partially overlaps b (Table 1) and either (a) a and b are not aligned, xva 6= xvb or (b) the width and height of the intersection are not equal, wI 6= hI , such that\nwI = min(v \u00b7 p2a , v \u00b7 p2b)\u2212max(v \u00b7 p1a , v \u00b7 p1b)\nhI = min(v \u2032 \u00b7 p4a , v\u2032 \u00b7 p4b)\u2212max(v\u2032 \u00b7 p1a , v\u2032 \u00b7 p1b)\nAligned Concentric. Two squares A,B are aligned and concentric if: A is part of B and there does not exist a square P such that (a) P is covertex with B, and (b) the intersection of P and A is not a square (Figure 9).\nSpatial Symmetry Drive Pruning 17\nB A\nP\nB\nA\nP (a) A and B are non-concentric\nB A\nP\nB\nA\nP\n(b) A and B are concentric\nB\nA\nB\nhI\nwI\nI\nA Z\nB A\nB\nA\n(c) A is boundary concentric with B.\nB\nA\nB\nhI\nwI\nI\nA Z\nB A\nB A\n(d) A and B are rotated concentric.\nFig. 9. Characterising aligned (a),(b) and rotated (c),(d) concentric squares using mereology (reproduced from [Borgo, 2013])\n| aligned_concentric(A,B) :- | mereology(part_of, A,B), | not(( | P=square(_,_,_), | covertex(P,B), | intersection(non_square,A,P). | )).\nWe use CLP(QS) to prove that the definition is sufficient, by contradiction; two squares are covertex if they are aligned and share a vertex, and the relation concentric is the geometric definition of concentricity in Table 1 that is used to evaluate the mereological definition of concentricity: ?- A=square(_,_,_), | B=square(_,_,_), | aligned(A,B), | not_concentric(A,B), | aligned_concentric(A,B). false.\nBoundary Concentric. Square A is boundary concentric with square B if: A is proper part of B and there does not exist a square Z such that (a) Z is proper part of B (b) A is part of Z, and (c) Z is not part of A (Figure 9). | boundary_concentric(A,B) :- | mereology(proper_part,A,B), | not(( | Z = square(_,_,_) | mereology(proper_part, Z,B), | mereology(part_of, A,Z), | mereology(not_part_of, Z,A), | )).\n?- A=square(_,_,_), | B=square(_,_,_), | not_aligned(A,B), | not_concentric(A,B), | boundary_concentric(A,B). false.\nMereologically Concentric. Squares A, B are mereologically concentric if: A, B are aligned concentric or there exists Q such that (a) Q is boundary concentric with B and Q is aligned concentric with A or (b) Q is boundary concentric with A and Q is aligned concentric with B.\nSpatial Symmetry Driven Pruning 17\nA\nB\nA\nB\nhI\nwI\nI\nI\n(a) A,B are not aligned.\nA\nB\nA\nB\nhI\nwI\nI\nI\n(b) hI 6= wI\nFig. 8. Intersection I of squares A,B is non-square.\nB A\nP\nB\nA\nP (a) A and B are non-concentric\nB A\nP\nB\nA\nP\n(b) A and B are concentric\nB\nA\nB\nhI\nwI\nI\nA Z\nB A\nB\nA\n(c) A is boundary concentric with B.\nB\nB\nwI\nA Z\nB A\nB A\n(d) A and B are rotated concentric.\nFig. 9. Characterising aligned (a),(b) and rotated (c),(d) concentric squares using mereology (reproduced from [Borgo, 2013])\nWe use CLP(QS) to prove that the definition is sufficient, by contradiction; two squares are covertex if they are aligned and share a vertex, and the relation concentric is the geometric definition of concentricity in Table 1 that is used to evaluate the mereological definition of concentricity:\nBoundary Concentric. Square A is boundary concentric with square B if: A is proper part of B and there does not exist a square Z such that (a) Z is proper part of B (b) A is part of Z, and (c) Z is not part of A (Figure 9).\nSpatial Symmetry Driven Pruning 17\nB A\nP\nB\nA\nP (a) A and B are non-concentric\nB A\nP\nB\nA\nP\n(b) A and B are concentric\nB\nA\nB\nhI\nwI\nI\nA Z\nB A\nB\nA\n(c) A is boundary concentric\nwith B.\nB\nA\nB\nhI\nwI\nI\nA Z\nB A\nB A\n(d) A and B are rotated concen-\ntric.\nAligned Concentric. Two squares A, B are aligned and concentric if: A is part of B and there does not exist a square P such that (a) P is covertex with B, and (b) the intersection of P and A is not a square (Figure 9). | aligned_concentric(A,B) :- | mereol gy(part_of, A,B), | not(( | P=square(_,_,_), | covertex(P,B),\n| intersection(non_square,A,P).\n| )).\n?- A=square(_,_,_), | B=square(_,_,_), | aligned(A,B), | not_concentric(A,B), | aligned_concentric(A,B). false.\no dary o ce tric. q are is o ary co ce tric it sq are if: is proper part of a t ere oes ot exist a sq are s c t at (a) is proper part of ( ) is part of , a (c) is ot part of ( ig re 9). | boundary_concentric(A,B) :- | mereology(proper_part,A,B), | not(( | Z = square(_,_,_) | mereology(proper_part, Z,B), | mereology(part_of, A,Z), | mereology(not_part_of, Z,A), | )).\n?- A=square(_,_,_), | B=square(_,_,_), | not_aligned(A,B), | not_concentric(A,B), | boundary_concentric(A,B). false.\nMereologically Concentric. Squares A, B are mereologically concentric if: A, B are aligned concentric or there exists Q such that (a) Q is boundary concentric with B and Q is aligned concentric with A or (b) Q is boundary concentric with A and Q is aligned concentric with B."}, {"heading": "18 Carl Schultz and Mehul Bhatt", "text": "Mereologically Concentric. Squares A,B are mereologically concentric if: A,B are aligned concentric or there exists Q such that (a) Q is boundary concentric with B and Q is aligned concentric with A or (b) Q is boundary concentric with A and Q is aligned concentric with B. Having proved the mereological definitions of aligned and boundary concentricity, we can replace these with more efficient geometric definitions from Table 1 when proving mereological concentricity. 18 Carl Sc ultz and Mehul Bhatt i\ni | g_aligned_concentric(A,B) :- | aligned(A,B), concentric(A,B). | | g_boundary_concentric(A,B) :- | mereology(boundary_part, A,B).\n| m_concentric(A,B) :- | g_aligned_concentric(A,B) | ; | Q = square(_,_,_), | g_boundary_concentric(Q,B), | g_aligned_concentric(Q,A) | ; | Q = square(_,_,_), | g_boundary_concentric(Q,A), | g_aligned_concentric(Q,B).\n?- A=square(_,_,_), | B=square(_,_,_), | not_concentric(A,B), | m_concentric(A,B). false.\n4.2 Didactics: Ruler\u2013Compass and Contact Problems\nAngle Bisector. Let la, lb be line segments that share an endpoint at p. Draw circle c at p. Circle c intersects la at pa and lb at pb. Draw circles ca at pa and circle cb at pb such that p is coincident with both ca, cb. Circles ca and cb intersect at p and pc. The line segment from p to pc bisects the angle between la and lb (Figure 10). We use CLP(QS) to prove that the definition is sufficient. The relation bisects is used for evaluation by checking if the midpoint of (pa,pb) is collinear with lc (i.e. idealised rulers cannot directly measure the midpoint of a line). An interactive diagram is then automatically generated that encodes the specified program (using the FreeCAD system); see Figure 11. ?- La = segment(P,_),Lb = segment(P,_), | orientation(not_parallel, La, Lb), | C = circle(P,_), | coincident(Pa,La),coincident(Pa,C), | coincident(Pb,Lb),coincident(Pb,C), | Ca=circle(Pa,_), Cb=circle(Pb,_), | coincident(Pa,Ca),coincident(Pa,Cb), | coincident(Pc,Ca),coincident(Pc,Cb), | not_equal(P,Pc), | Lc=segment(P,Pc), | bisects(segment(Pa,Pb),Lc). true. ... | not_bisects(segment(Pa,Pb),Lc). false.\nSphere contact. Determine the maximum number of same-sized mutually touching spheres (Figure 4 - note that no numeric information about the spheres is given in this benchmark problem)."}, {"heading": "4.2 Didactics: Ruler\u2013Compass and Contact Problems", "text": "Angle Bisector. Let la, lb be line segments that share an endpoint at p. Draw circl c at p. Circle c inters cts la at pa and lb at pb. Draw circles ca at pa and i l b at b such that p is coincident with both ca, cb. Circles ca and cb intersect at p and pc. The line segment from p to pc bise ts the angle between la and lb (Figure 10). We use CLP(QS) to prove that the definition is sufficient. The relation bisects is us d for evaluation by ch cking if the midp int of (pa,pb) is collinear with l (i.e. id alised rulers cannot directly measure the midpoint of a line). An in eractive iagram is then automaticall g nerated that encodes the specified program (using the Fre CAD system); see Figur 11.\n18 Carl Schultz and Mehul Bhatt\nHaving proved th mereological definitions of aligned and boundary concentricity, we can replace these with more efficient geometric definitions from Table 1 when proving mereological concentricity. | g_aligned_concentric(A,B) :- | aligned(A,B), concentric(A,B).\ng_bou dary_concentric(A,B) :- mereology(boundary_part, A,B).\n| m_concentric(A,B) :- | g_aligned_concentric(A,B)\n; Q = square(_,_,_), g_boundary_concentric(Q,B), g_aligned_concentric(Q,A) ; Q = square(_,_,_), | g_boundary_concentric(Q,A), | g_aligned_concentric(Q,B).\n?- A=square(_,_,_), | B=square(_,_,_), | not_concentric(A,B), | m_concentric(A,B). false.\n4.2 Didactics: Ruler\u2013Compass and Contact Problems\ngle is t . l , l li i . circle c t . ir l i e circle cb t pb s i at p c. li c ( ig re ).\ne se ( se f r e l ti e i\ni ealise r l rs i t diagra is t i l ( si t e r e ?- La = segment(P,_),Lb = segment(P,_), | orientation(not_parallel, La, Lb), | C = circle(P,_), | coincident(Pa,La),coincident(Pa,C), | coincident(Pb,Lb),coincident(Pb,C), | Ca=circle(Pa,_), Cb=circle(Pb,_), | coincident(Pa,Ca),coincident(Pa,Cb), | coincident(Pc,Ca),coincident(Pc,Cb), | not_equal(P,Pc), | Lc=segment(P,Pc), | bisects(segment(Pa,Pb),Lc). true. ... | not_bisects(segment(Pa,Pb),Lc). false.\nSphere contact. Determine the maximum number of same-sized mutually touching spheres (Figure 4 - ote that no numeric inform tion about the spheres is given in this benchmark problem).\nSpatial Symmetry Driven Pruning 19\nLa\nLb\nC\nP Ca\nCb\nSphere contact. Determine the maximum number of same-sized mutually touching spheres (Figure 4 - note that no numeric information about the spheres is given in this benchmark problem)."}, {"heading": "5 Conclusions", "text": "Affine transformations provide an effective and interesting class of symmetries that can be used for pruning across a range of qualitative spatial relations. To summarise, we formalise the following knowledge as modular commonsense rules in CLP(QS): point-coincidence, line parallelism, topological and mereological relations are preserved with all affine transformations. Relative orientation changes with reflection, and qualitative distances and perpendicularity change with non-uniform scaling. Spheres, circles, and rectangles are not preserved with non-uniform scaling, with the exception of axis-aligned bounding boxes. Our algorithm is simple to implement, and is easily extended to handle more pruning cases. Theoretical and empirical results show that our method of pruning yields an improvement in performance by orders of magnitude over standard polynomial encodings without loss of soundness, thus increasing the horizon of spatial problems solvable with any polynomial constraint solver. Furthermore, the declaratively formalised knowledge about pruning strategies is available to be utilised in"}, {"heading": "20 Carl Schultz and Mehul Bhatt", "text": "a modular manner within other knowledge representation and reasoning frameworks that rely on specialised SMT solvers etc, e.g., in the manner demonstrated in ASPMT(QS) [38], which is a specialised non-monotonic spatial reasoning system built on top of answer set programming modulo theories.\nReferences\n[1] M. Aiello, I. E. Pratt-Hartmann, and J. F. v. Benthem. Handbook of Spatial Logics. Springer-Verlag New York, Inc., Secaucus, NJ, USA, 2007. ISBN 978-1-4020-5586-7. [2] D. S. Arnon, G. E. Collins, and S. McCallum. Cylindrical Algebraic Decomposition I: The basic algorithm. SIAM Journal on Computing, 13(4): 865\u2013877, 1984. [3] M. Bhatt and J. O. Wallgr\u00fcn. Geospatial narratives and their spatiotemporal dynamics: Commonsense reasoning for high-level analyses in geographic information systems. ISPRS Int. J. Geo-Information, 3(1):166\u2013 205, 2014. doi: 10.3390/ijgi3010166. URL http://dx.doi.org/10.3390/ ijgi3010166. [4] M. Bhatt, J. H. Lee, and C. Schultz. CLP(QS): A Declarative Spatial Reasoning Framework. In Proceedings of the 10th international conference on Spatial information theory, COSIT\u201911, pages 210\u2013230, Berlin, Heidelberg, 2011. Springer-Verlag. ISBN 978-3-642-23195-7. [5] M. Bhatt, C. Schultz, and C. Freksa. The \u2018Space\u2019 in Spatial Assistance Systems: Conception, Formalisation and Computation. In T. Tenbrink, J. Wiener, and C. Claramunt, editors, Representing space in cognition: Interrelations of behavior, language, and formal models. Series: Explorations in Language and Space. 978-0-19-967991-1, Oxford University Press, 2013. [6] M. Bhatt, J. Suchan, and C. Schultz. Cognitive Interpretation of Everyday Activities \u2013 Toward Perceptual Narrative Based Visuo-Spatial Scene Interpretation. In M. Finlayson, B. Fisseni, B. Loewe, and J. C. Meister, editors, Computational Models of Narrative (CMN) 2013., a satellite workshop of CogSci 2013: The 35th meeting of the Cognitive Science Society., Dagstuhl, Germany, 2013. OpenAccess Series in Informatics (OASIcs). [7] M. Bhatt, C. P. L. Schultz, and M. Thosar. Computing narratives of cognitive user experience for building design analysis: KR for industry scale computer-aided architecture design. In C. Baral, G. D. Giacomo, and T. Eiter, editors, Principles of Knowledge Representation and Reasoning: Proceedings of the Fourteenth International Conference, KR 2014, Vienna, Austria, July 20-24, 2014. AAAI Press, 2014. ISBN 978-1-57735-657-8. [8] S. Borgo. Spheres, cubes and simplexes in mereogeometry. Logic and Logical Philosophy, 22(3):255\u2013293, 2013. [9] D. Bouhineau. Solving geometrical constraint systems using CLP based on linear constraint solver. In Artificial Intelligence and Symbolic Mathematical Computation, pages 274\u2013288. Springer, 1996. [10] D. Bouhineau, L. Trilling, and J. Cohen. An application of CLP: Checking the correctness of theorems in geometry. Constraints, 4(4):383\u2013405, 1999. [11] B. Buchberger. Bruno Buchberger\u2019s PhD thesis 1965: an algorithm for finding the basis elements of the residue class ring of a zero dimensional polynomial ideal (English translation). Journal of symbolic computation, 41(3):475\u2013511, 2006.\nSpatial Symmetry Driven Pruning 21\n[12] S.-C. Chou. Mechanical geometry theorem proving, volume 41. Springer Science & Business Media, 1988. [13] G. E. Collins. Quantifier elimination for real closed fields by cylindrical algebraic decompostion. In Automata Theory and Formal Languages 2nd GI Conference Kaiserslautern, May 20\u201323, 1975, pages 134\u2013183. Springer, 1975. [14] G. E. Collins and H. Hong. Partial cylindrical algebraic decomposition for quantifier elimination. Journal of Symbolic Computation, 12(3):299 \u2013 328, 1991. ISSN 0747-7171. [15] A. Dolzmann, A. Seidl, and T. Sturm. REDLOG User Manual, Apr. 2004. Edition 3.0. [16] Z. Gantner, M. Westphal, and S. W\u00f6lfl. GQR-A fast reasoner for binary qualitative constraint calculi. In Proc. of AAAI, volume 8, 2008. [17] N. Hadas, R. Hershkowitz, and B. B. Schwarz. The role of contradiction and uncertainty in promoting the need to prove in dynamic geometry environments. Educational Studies in Mathematics, 44(1-2):127\u2013150, 2000. [18] P. Haunold, S. Grumbach, G. Kuper, and Z. Lacroix. Linear constraints: Geometric objects represented by inequalitiesl. In S. C. Hirtle and A. U. Frank, editors, Spatial Information Theory A Theoretical Basis for GIS, volume 1329 of Lecture Notes in Computer Science, pages 429\u2013440. Springer Berlin Heidelberg, 1997. ISBN 978-3-540-63623-6. [19] J. Jaffar and M. J. Maher. Constraint logic programming: A survey. The journal of logic programming, 19:503\u2013581, 1994. [20] P. C. Kanellakis, G. M. Kuper, and P. Z. Revesz. Constraint query languages. In D. J. Rosenkrantz and Y. Sagiv, editors, Proceedings of the Ninth ACM SIGACT-SIGMOD-SIGART Symposium on Principles of Database Systems, April 2-4, 1990, Nashville, Tennessee, USA, pages 299\u2013313. ACM Press, 1990. ISBN 0-89791-352-3. [21] D. Kapur and J. L. Mundy, editors. Geometric Reasoning. MIT Press, Cambridge, MA, USA, 1988. ISBN 0-262-61058-2. [22] P. B. Ladkin and R. D. Maddux. On binary constraint problems. Journal of the ACM (JACM), 41(3):435\u2013469, 1994. [23] J. H. Lee. The complexity of reasoning with relative directions. In 21st European Conference on Artificial Intelligence (ECAI 2014), 2014. [24] G. Ligozat. Qualitative Spatial and Temporal Reasoning. Wiley-ISTE, 2011. [25] G. F. Ligozat. Qualitative triangulation for spatial reasoning. In Spatial\nInformation Theory A Theoretical Basis for GIS, pages 54\u201368. Springer, 1993.\n[26] G. E. Martin. Transformation geometry: An introduction to symmetry. Springer, 1982. [27] J. C. Owen. Algebraic solution for geometry from dimensional constraints. In Proceedings of the first ACM symposium on Solid modeling foundations and CAD/CAM applications, pages 397\u2013407. ACM, 1991. [28] G. Pesant and M. Boyer. QUAD-CLP (R): Adding the power of quadratic constraints. In Principles and Practice of Constraint Programming, pages 95\u2013108. Springer, 1994. [29] G. Pesant and M. Boyer. Reasoning about solids using constraint logic programming. Journal of Automated Reasoning, 22(3):241\u2013262, 1999. [30] D. A. Randell, A. G. Cohn, and Z. Cui. Computing transitivity tables: A challenge for automated theorem provers. In 11th International Conference on Automated Deduction (CADE-11), pages 786\u2013790, 1992."}, {"heading": "22 Carl Schultz and Mehul Bhatt", "text": "[31] S. Ratschan. Approximate quantified constraint solving by cylindrical box decomposition. Reliable Computing, 8(1):21\u201342, 2002. [32] S. Ratschan. Efficient solving of quantified inequality constraints over the real numbers. ACM Transactions on Computational Logic (TOCL), 7(4): 723\u2013748, 2006. [33] C. Schultz and M. Bhatt. Towards a Declarative Spatial Reasoning System. In 20th European Conference on Artificial Intelligence (ECAI 2012), 2012. [34] C. Schultz and M. Bhatt. Declarative spatial reasoning with boolean combinations of axis-aligned rectangular polytopes. In ECAI 2014 - 21st European Conference on Artificial Intelligence, pages 795\u2013800, 2014. [35] C. Schultz, M. Bhatt, and A. Borrmann. Bridging qualitative spatial constraints and parametric design - a use case with visibility constraints. In EG-ICE: 21st International Workshop - Intelligent Computing in Engineering 2014, 2014. [36] A. Tarski. A general theorem concerning primitive notions of Euclidean geometry. Indagationes Mathematicae, 18(468):74, 1956. [37] A. C. Varzi. Parts, wholes, and part-whole relations: The prospects of mereotopology. Data & Knowledge Engineering, 20(3):259\u2013286, 1996. [38] P. Walega, M. Bhatt, and C. Schultz. ASPMT(QS): Non-Monotonic Spatial Reasoning with Answer Set Programming Modulo Theories. In LPNMR: Logic Programming and Nonmonotonic Reasoning - 13th International Conference, 2015. URL http://lpnmr2015.mat.unical.it. [39] J. O. Wallgr\u00fcn, L. Frommberger, D. Wolter, F. Dylla, and C. Freksa. Qualitative Spatial Representation and Reasoning in the SparQ-Toolbox. In T. Barkowsky, M. Knauff, G. Ligozat, and D. Montello, editors, Spatial Cognition V: Reasoning, Action, Interaction, volume 4387 of Lecture Notes in Computer Science, pages 39\u201358. Springer, 2007. [40] W. Wenjun. Basic principles of mechanical theorem proving in elementary geometries. Journal of Systems Sciences & Mathematical Sciences, 4(3): 207\u2013235, 1984."}], "references": [{"title": "Handbook of Spatial Logics", "author": ["M. Aiello", "I.E. Pratt-Hartmann", "J.F. v. Benthem"], "venue": null, "citeRegEx": "1", "shortCiteRegEx": "1", "year": 2007}, {"title": "Cylindrical Algebraic Decomposition I: The basic algorithm", "author": ["D.S. Arnon", "G.E. Collins", "S. McCallum"], "venue": "SIAM Journal on Computing,", "citeRegEx": "2", "shortCiteRegEx": "2", "year": 1984}, {"title": "Geospatial narratives and their spatiotemporal dynamics: Commonsense reasoning for high-level analyses in geographic information systems", "author": ["M. Bhatt", "J.O. Wallgr\u00fcn"], "venue": "ISPRS Int. J. Geo-Information,", "citeRegEx": "3", "shortCiteRegEx": "3", "year": 2014}, {"title": "CLP(QS): A Declarative Spatial Reasoning Framework", "author": ["M. Bhatt", "J.H. Lee", "C. Schultz"], "venue": "In Proceedings of the 10th international conference on Spatial information theory,", "citeRegEx": "4", "shortCiteRegEx": "4", "year": 2011}, {"title": "The \u2018Space\u2019 in Spatial Assistance Systems: Conception, Formalisation and Computation", "author": ["M. Bhatt", "C. Schultz", "C. Freksa"], "venue": "Series: Explorations in Language and Space", "citeRegEx": "5", "shortCiteRegEx": "5", "year": 2013}, {"title": "Cognitive Interpretation of Everyday Activities \u2013 Toward Perceptual Narrative Based Visuo-Spatial Scene Interpretation", "author": ["M. Bhatt", "J. Suchan", "C. Schultz"], "venue": null, "citeRegEx": "6", "shortCiteRegEx": "6", "year": 2013}, {"title": "Computing narratives of cognitive user experience for building design analysis: KR for industry scale computer-aided architecture design", "author": ["M. Bhatt", "C.P.L. Schultz", "M. Thosar"], "venue": "Principles of Knowledge Representation and Reasoning: Proceedings of the Fourteenth International Conference,", "citeRegEx": "7", "shortCiteRegEx": "7", "year": 2014}, {"title": "Spheres, cubes and simplexes in mereogeometry", "author": ["S. Borgo"], "venue": "Logic and Logical Philosophy,", "citeRegEx": "8", "shortCiteRegEx": "8", "year": 2013}, {"title": "Solving geometrical constraint systems using CLP based on linear constraint solver", "author": ["D. Bouhineau"], "venue": "In Artificial Intelligence and Symbolic Mathematical Computation,", "citeRegEx": "9", "shortCiteRegEx": "9", "year": 1996}, {"title": "An application of CLP: Checking the correctness of theorems in geometry", "author": ["D. Bouhineau", "L. Trilling", "J. Cohen"], "venue": null, "citeRegEx": "10", "shortCiteRegEx": "10", "year": 1999}, {"title": "Buchberger\u2019s PhD thesis 1965: an algorithm for finding the basis elements of the residue class ring of a zero dimensional polynomial ideal (English translation)", "author": ["B. Buchberger. Bruno"], "venue": "Journal of symbolic computation,", "citeRegEx": "11", "shortCiteRegEx": "11", "year": 2006}, {"title": "Mechanical geometry theorem proving, volume 41", "author": ["S.-C. Chou"], "venue": "Springer Science & Business Media,", "citeRegEx": "12", "shortCiteRegEx": "12", "year": 1988}, {"title": "Quantifier elimination for real closed fields by cylindrical algebraic decompostion", "author": ["G.E. Collins"], "venue": "In Automata Theory and Formal Languages 2nd GI Conference Kaiserslautern, May 20\u201323,", "citeRegEx": "13", "shortCiteRegEx": "13", "year": 1975}, {"title": "Partial cylindrical algebraic decomposition for quantifier elimination", "author": ["G.E. Collins", "H. Hong"], "venue": "Journal of Symbolic Computation,", "citeRegEx": "14", "shortCiteRegEx": "14", "year": 1991}, {"title": "GQR-A fast reasoner for binary qualitative constraint calculi", "author": ["Z. Gantner", "M. Westphal", "S. W\u00f6lfl"], "venue": "In Proc. of AAAI,", "citeRegEx": "16", "shortCiteRegEx": "16", "year": 2008}, {"title": "The role of contradiction and uncertainty in promoting the need to prove in dynamic geometry environments", "author": ["N. Hadas", "R. Hershkowitz", "B.B. Schwarz"], "venue": "Educational Studies in Mathematics,", "citeRegEx": "17", "shortCiteRegEx": "17", "year": 2000}, {"title": "Linear constraints: Geometric objects represented by inequalitiesl", "author": ["P. Haunold", "S. Grumbach", "G. Kuper", "Z. Lacroix"], "venue": "Spatial Information Theory A Theoretical Basis for GIS,", "citeRegEx": "18", "shortCiteRegEx": "18", "year": 1997}, {"title": "Constraint logic programming: A survey", "author": ["J. Jaffar", "M.J. Maher"], "venue": "The journal of logic programming,", "citeRegEx": "19", "shortCiteRegEx": "19", "year": 1994}, {"title": "Constraint query languages", "author": ["P.C. Kanellakis", "G.M. Kuper", "P.Z. Revesz"], "venue": "Proceedings of the Ninth ACM SIGACT-SIGMOD-SIGART Symposium on Principles of Database Systems, April", "citeRegEx": "20", "shortCiteRegEx": "20", "year": 1990}, {"title": "Geometric Reasoning", "author": ["D. Kapur", "J.L. Mundy", "editors"], "venue": null, "citeRegEx": "21", "shortCiteRegEx": "21", "year": 1988}, {"title": "On binary constraint problems", "author": ["P.B. Ladkin", "R.D. Maddux"], "venue": "Journal of the ACM (JACM),", "citeRegEx": "22", "shortCiteRegEx": "22", "year": 1994}, {"title": "The complexity of reasoning with relative directions", "author": ["J.H. Lee"], "venue": "In 21st European Conference on Artificial Intelligence (ECAI", "citeRegEx": "23", "shortCiteRegEx": "23", "year": 2014}, {"title": "Qualitative Spatial and Temporal Reasoning", "author": ["G. Ligozat"], "venue": "Wiley-ISTE,", "citeRegEx": "24", "shortCiteRegEx": "24", "year": 2011}, {"title": "Qualitative triangulation for spatial reasoning. In Spatial Information Theory A Theoretical Basis for GIS, pages 54\u201368", "author": ["G.F. Ligozat"], "venue": null, "citeRegEx": "25", "shortCiteRegEx": "25", "year": 1993}, {"title": "Transformation geometry: An introduction to symmetry", "author": ["G.E. Martin"], "venue": null, "citeRegEx": "26", "shortCiteRegEx": "26", "year": 1982}, {"title": "Algebraic solution for geometry from dimensional constraints", "author": ["J.C. Owen"], "venue": "In Proceedings of the first ACM symposium on Solid modeling foundations and CAD/CAM applications,", "citeRegEx": "27", "shortCiteRegEx": "27", "year": 1991}, {"title": "QUAD-CLP (R): Adding the power of quadratic constraints", "author": ["G. Pesant", "M. Boyer"], "venue": "In Principles and Practice of Constraint Programming,", "citeRegEx": "28", "shortCiteRegEx": "28", "year": 1994}, {"title": "Reasoning about solids using constraint logic programming", "author": ["G. Pesant", "M. Boyer"], "venue": "Journal of Automated Reasoning,", "citeRegEx": "29", "shortCiteRegEx": "29", "year": 1999}, {"title": "Computing transitivity tables: A challenge for automated theorem provers", "author": ["D.A. Randell", "A.G. Cohn", "Z. Cui"], "venue": "In 11th International Conference on Automated Deduction", "citeRegEx": "30", "shortCiteRegEx": "30", "year": 1992}, {"title": "Approximate quantified constraint solving by cylindrical box decomposition", "author": ["S. Ratschan"], "venue": "Reliable Computing,", "citeRegEx": "31", "shortCiteRegEx": "31", "year": 2002}, {"title": "Efficient solving of quantified inequality constraints over the real numbers", "author": ["S. Ratschan"], "venue": "ACM Transactions on Computational Logic (TOCL),", "citeRegEx": "32", "shortCiteRegEx": "32", "year": 2006}, {"title": "Towards a Declarative Spatial Reasoning System", "author": ["C. Schultz", "M. Bhatt"], "venue": "In 20th European Conference on Artificial Intelligence (ECAI", "citeRegEx": "33", "shortCiteRegEx": "33", "year": 2012}, {"title": "Declarative spatial reasoning with boolean combinations of axis-aligned rectangular polytopes", "author": ["C. Schultz", "M. Bhatt"], "venue": "In ECAI 2014 - 21st European Conference on Artificial Intelligence,", "citeRegEx": "34", "shortCiteRegEx": "34", "year": 2014}, {"title": "Bridging qualitative spatial constraints and parametric design - a use case with visibility constraints", "author": ["C. Schultz", "M. Bhatt", "A. Borrmann"], "venue": "In EG-ICE: 21st International Workshop - Intelligent Computing in Engineering", "citeRegEx": "35", "shortCiteRegEx": "35", "year": 2014}, {"title": "A general theorem concerning primitive notions of Euclidean geometry", "author": ["A. Tarski"], "venue": "Indagationes Mathematicae,", "citeRegEx": "36", "shortCiteRegEx": "36", "year": 1956}, {"title": "Parts, wholes, and part-whole relations: The prospects of mereotopology", "author": ["A.C. Varzi"], "venue": "Data & Knowledge Engineering,", "citeRegEx": "37", "shortCiteRegEx": "37", "year": 1996}, {"title": "ASPMT(QS): Non-Monotonic Spatial Reasoning with Answer Set Programming Modulo Theories", "author": ["P. Walega", "M. Bhatt", "C. Schultz"], "venue": "In LPNMR: Logic Programming and Nonmonotonic Reasoning - 13th International Conference,", "citeRegEx": "38", "shortCiteRegEx": "38", "year": 2015}, {"title": "Qualitative Spatial Representation and Reasoning in the SparQ-Toolbox", "author": ["J.O. Wallgr\u00fcn", "L. Frommberger", "D. Wolter", "F. Dylla", "C. Freksa"], "venue": null, "citeRegEx": "39", "shortCiteRegEx": "39", "year": 2007}, {"title": "Basic principles of mechanical theorem proving in elementary geometries", "author": ["W. Wenjun"], "venue": "Journal of Systems Sciences & Mathematical Sciences,", "citeRegEx": "40", "shortCiteRegEx": "40", "year": 1984}], "referenceMentions": [{"referenceID": 19, "context": "Knowledge representation and reasoning (KR) about space may be formally interpreted within diverse frameworks such as: (a) analytically founded geometric reasoning & constructive (solid) geometry [21, 27, 29]; (b) relational algebraic semantics of \u2018qualitative spatial calculi\u2019 [24]; and (c) by axiomatically constructed formal systems of mereotopology and mereogeometry [1].", "startOffset": 196, "endOffset": 208}, {"referenceID": 25, "context": "Knowledge representation and reasoning (KR) about space may be formally interpreted within diverse frameworks such as: (a) analytically founded geometric reasoning & constructive (solid) geometry [21, 27, 29]; (b) relational algebraic semantics of \u2018qualitative spatial calculi\u2019 [24]; and (c) by axiomatically constructed formal systems of mereotopology and mereogeometry [1].", "startOffset": 196, "endOffset": 208}, {"referenceID": 27, "context": "Knowledge representation and reasoning (KR) about space may be formally interpreted within diverse frameworks such as: (a) analytically founded geometric reasoning & constructive (solid) geometry [21, 27, 29]; (b) relational algebraic semantics of \u2018qualitative spatial calculi\u2019 [24]; and (c) by axiomatically constructed formal systems of mereotopology and mereogeometry [1].", "startOffset": 196, "endOffset": 208}, {"referenceID": 22, "context": "Knowledge representation and reasoning (KR) about space may be formally interpreted within diverse frameworks such as: (a) analytically founded geometric reasoning & constructive (solid) geometry [21, 27, 29]; (b) relational algebraic semantics of \u2018qualitative spatial calculi\u2019 [24]; and (c) by axiomatically constructed formal systems of mereotopology and mereogeometry [1].", "startOffset": 278, "endOffset": 282}, {"referenceID": 0, "context": "Knowledge representation and reasoning (KR) about space may be formally interpreted within diverse frameworks such as: (a) analytically founded geometric reasoning & constructive (solid) geometry [21, 27, 29]; (b) relational algebraic semantics of \u2018qualitative spatial calculi\u2019 [24]; and (c) by axiomatically constructed formal systems of mereotopology and mereogeometry [1].", "startOffset": 371, "endOffset": 374}, {"referenceID": 4, "context": "Independent of formal semantics, commonsense spatio-linguistic abstractions offer a human-centred and cognitively adequate mechanism for logic-based automated reasoning about spatio-temporal information [5].", "startOffset": 203, "endOffset": 206}, {"referenceID": 3, "context": "paradigm aimed at (declaratively) specifying and solving real-world problems related to geometric and qualitative spatial representation and reasoning [4].", "startOffset": 151, "endOffset": 154}, {"referenceID": 3, "context": "A particular manifestation of this paradigm is the constraint logic programming based CLP(QS) spatial reasoning system [4, 33, 34] (Section 2).", "startOffset": 119, "endOffset": 130}, {"referenceID": 31, "context": "A particular manifestation of this paradigm is the constraint logic programming based CLP(QS) spatial reasoning system [4, 33, 34] (Section 2).", "startOffset": 119, "endOffset": 130}, {"referenceID": 32, "context": "A particular manifestation of this paradigm is the constraint logic programming based CLP(QS) spatial reasoning system [4, 33, 34] (Section 2).", "startOffset": 119, "endOffset": 130}, {"referenceID": 22, "context": "Relational Algebraic Qualitative Spatial Reasoning The state of the art in qualitative spatial reasoning using relational algebraic methods [24] has resulted in prototypical algorithms and black-box systems that do not integrate with KR languages, such as those dealing with semantics and conceptual knowledge necessary for handling background knowledge, action & change, relational learning, rule-based systems etc.", "startOffset": 140, "endOffset": 144}, {"referenceID": 23, "context": "LR [25]), while efficient, is incomplete in general [22, 23, 24].", "startOffset": 3, "endOffset": 7}, {"referenceID": 20, "context": "LR [25]), while efficient, is incomplete in general [22, 23, 24].", "startOffset": 52, "endOffset": 64}, {"referenceID": 21, "context": "LR [25]), while efficient, is incomplete in general [22, 23, 24].", "startOffset": 52, "endOffset": 64}, {"referenceID": 22, "context": "LR [25]), while efficient, is incomplete in general [22, 23, 24].", "startOffset": 52, "endOffset": 64}, {"referenceID": 3, "context": "4 Alternatively, constraint logic programming based systems such as CLP(QS) [4] and others (see [9, 10, 18, 20, 28, 29]) adopt an analytic geometry approach where spatial relations are encoded as systems of polynomial constraints;5 while these methods are sound and complete (see Section 2.", "startOffset": 76, "endOffset": 79}, {"referenceID": 8, "context": "4 Alternatively, constraint logic programming based systems such as CLP(QS) [4] and others (see [9, 10, 18, 20, 28, 29]) adopt an analytic geometry approach where spatial relations are encoded as systems of polynomial constraints;5 while these methods are sound and complete (see Section 2.", "startOffset": 96, "endOffset": 119}, {"referenceID": 9, "context": "4 Alternatively, constraint logic programming based systems such as CLP(QS) [4] and others (see [9, 10, 18, 20, 28, 29]) adopt an analytic geometry approach where spatial relations are encoded as systems of polynomial constraints;5 while these methods are sound and complete (see Section 2.", "startOffset": 96, "endOffset": 119}, {"referenceID": 16, "context": "4 Alternatively, constraint logic programming based systems such as CLP(QS) [4] and others (see [9, 10, 18, 20, 28, 29]) adopt an analytic geometry approach where spatial relations are encoded as systems of polynomial constraints;5 while these methods are sound and complete (see Section 2.", "startOffset": 96, "endOffset": 119}, {"referenceID": 18, "context": "4 Alternatively, constraint logic programming based systems such as CLP(QS) [4] and others (see [9, 10, 18, 20, 28, 29]) adopt an analytic geometry approach where spatial relations are encoded as systems of polynomial constraints;5 while these methods are sound and complete (see Section 2.", "startOffset": 96, "endOffset": 119}, {"referenceID": 26, "context": "4 Alternatively, constraint logic programming based systems such as CLP(QS) [4] and others (see [9, 10, 18, 20, 28, 29]) adopt an analytic geometry approach where spatial relations are encoded as systems of polynomial constraints;5 while these methods are sound and complete (see Section 2.", "startOffset": 96, "endOffset": 119}, {"referenceID": 27, "context": "4 Alternatively, constraint logic programming based systems such as CLP(QS) [4] and others (see [9, 10, 18, 20, 28, 29]) adopt an analytic geometry approach where spatial relations are encoded as systems of polynomial constraints;5 while these methods are sound and complete (see Section 2.", "startOffset": 96, "endOffset": 119}, {"referenceID": 11, "context": "[12]) and geometric constraint solvers (e.", "startOffset": 0, "endOffset": 4}, {"referenceID": 15, "context": "[17, 27]) exist.", "startOffset": 0, "endOffset": 8}, {"referenceID": 25, "context": "[17, 27]) exist.", "startOffset": 0, "endOffset": 8}, {"referenceID": 21, "context": "relative directions [23] and containment relations between linearly ordered intervals [22], Theorem 5.", "startOffset": 20, "endOffset": 24}, {"referenceID": 20, "context": "relative directions [23] and containment relations between linearly ordered intervals [22], Theorem 5.", "startOffset": 86, "endOffset": 90}, {"referenceID": 11, "context": "6 Standard geometric constraint languages of approaches including [12, 17, 27] consist of points, lines, circles, ellipses, and coincidence, tangency, perpendicularity, parallelism, and numerical dimension constraints; note the absence of e.", "startOffset": 66, "endOffset": 78}, {"referenceID": 15, "context": "6 Standard geometric constraint languages of approaches including [12, 17, 27] consist of points, lines, circles, ellipses, and coincidence, tangency, perpendicularity, parallelism, and numerical dimension constraints; note the absence of e.", "startOffset": 66, "endOffset": 78}, {"referenceID": 25, "context": "6 Standard geometric constraint languages of approaches including [12, 17, 27] consist of points, lines, circles, ellipses, and coincidence, tangency, perpendicularity, parallelism, and numerical dimension constraints; note the absence of e.", "startOffset": 66, "endOffset": 78}, {"referenceID": 33, "context": "mereotopology and \u201ccommon-sense\u201d relative orientation relations [35].", "startOffset": 64, "endOffset": 68}, {"referenceID": 2, "context": "In addition to AI / commonsense reasoning applications areas such as design, GIS, vision, robotics [3, 5, 6, 7], we also address application into automating support for proving the validity of theorems in mereotopology, orientation, shape, etc.", "startOffset": 99, "endOffset": 111}, {"referenceID": 4, "context": "In addition to AI / commonsense reasoning applications areas such as design, GIS, vision, robotics [3, 5, 6, 7], we also address application into automating support for proving the validity of theorems in mereotopology, orientation, shape, etc.", "startOffset": 99, "endOffset": 111}, {"referenceID": 5, "context": "In addition to AI / commonsense reasoning applications areas such as design, GIS, vision, robotics [3, 5, 6, 7], we also address application into automating support for proving the validity of theorems in mereotopology, orientation, shape, etc.", "startOffset": 99, "endOffset": 111}, {"referenceID": 6, "context": "In addition to AI / commonsense reasoning applications areas such as design, GIS, vision, robotics [3, 5, 6, 7], we also address application into automating support for proving the validity of theorems in mereotopology, orientation, shape, etc.", "startOffset": 99, "endOffset": 111}, {"referenceID": 7, "context": "[8, 36]).", "startOffset": 0, "endOffset": 7}, {"referenceID": 34, "context": "[8, 36]).", "startOffset": 0, "endOffset": 7}, {"referenceID": 15, "context": "dynamic geometry [17]).", "startOffset": 17, "endOffset": 21}, {"referenceID": 28, "context": "A further area of interest is verifying the entries of composition tables that are used in relation algebraic qualitative spatial reasoning [30]: given spatial objects a, b, c \u2208 U , composition \u201clook up\u201d tables are indexed by pairs of (base) relations R1ab , R2bc and return disjunctions of possible (base) relations R3ac .", "startOffset": 140, "endOffset": 144}, {"referenceID": 3, "context": "The objective is to enable points, oriented points, directed line-segments, regions, and topological and orientation relationships amongst them as first-class entities within declarative frameworks in AI [4].", "startOffset": 204, "endOffset": 207}, {"referenceID": 3, "context": "With a focus on spatial question-answering, the CLP(QS) spatial reasoning system [4, 33, 34] provides a practical manifestation of certain aspects of the declarative spatial reasoning paradigm in the context of constraint logic programming (CLP).", "startOffset": 81, "endOffset": 92}, {"referenceID": 31, "context": "With a focus on spatial question-answering, the CLP(QS) spatial reasoning system [4, 33, 34] provides a practical manifestation of certain aspects of the declarative spatial reasoning paradigm in the context of constraint logic programming (CLP).", "startOffset": 81, "endOffset": 92}, {"referenceID": 32, "context": "With a focus on spatial question-answering, the CLP(QS) spatial reasoning system [4, 33, 34] provides a practical manifestation of certain aspects of the declarative spatial reasoning paradigm in the context of constraint logic programming (CLP).", "startOffset": 81, "endOffset": 92}, {"referenceID": 3, "context": "Through this deep integration of spatial reasoning with KR-based frameworks, the long-term research agenda is to seamlessly provide spatial reasoning in other AI tasks such as planning, non-monotonic reasoning, and ontological reasoning [4].", "startOffset": 237, "endOffset": 240}, {"referenceID": 11, "context": "Analytic geometry methods parameterise classes of objects and encode spatial relations as systems of polynomial equations and inequalities [12].", "startOffset": 139, "endOffset": 143}, {"referenceID": 17, "context": "Thus, we can integrate spatial reasoning and logic programming using Constraint Logic Programming (CLP) [19]; this system is called CLP over qualitative spatial domains.", "startOffset": 104, "endOffset": 108}, {"referenceID": 12, "context": "Cylindrical Algebraic Decomposition (CAD) [13] is a prominent sound and complete algorithm for deciding satisfiability of a general system of polynomial constraints over reals and has time complexity O(c n 2 1 ) in th number of free variables [2].", "startOffset": 42, "endOffset": 46}, {"referenceID": 1, "context": "Cylindrical Algebraic Decomposition (CAD) [13] is a prominent sound and complete algorithm for deciding satisfiability of a general system of polynomial constraints over reals and has time complexity O(c n 2 1 ) in th number of free variables [2].", "startOffset": 243, "endOffset": 246}, {"referenceID": 13, "context": "8 More efficient refinements of the original CAD algorithm include partial CAD [14].", "startOffset": 79, "endOffset": 83}, {"referenceID": 10, "context": "Symbolic methods for solving systems of multivariate equations include the Gr\u00f6bner basis method [11] and Wu\u2019s characteristic set method [40].", "startOffset": 96, "endOffset": 100}, {"referenceID": 38, "context": "Symbolic methods for solving systems of multivariate equations include the Gr\u00f6bner basis method [11] and Wu\u2019s characteristic set method [40].", "startOffset": 136, "endOffset": 140}, {"referenceID": 26, "context": "In the QUAD-CLP(R) system, the authors improve solving performance by using linear approximations of quadratic constraints and by identifying geometric equivalence classes [28].", "startOffset": 172, "endOffset": 176}, {"referenceID": 29, "context": "Ratschan employs pruning methods, also at the polynomial level, in the rsolve system [31, 32].", "startOffset": 85, "endOffset": 93}, {"referenceID": 30, "context": "Ratschan employs pruning methods, also at the polynomial level, in the rsolve system [31, 32].", "startOffset": 85, "endOffset": 93}, {"referenceID": 25, "context": "by finding a configuration that satisfies the given constraints [27].", "startOffset": 64, "endOffset": 68}, {"referenceID": 3, "context": "Our method is readily applicable to other 2D and 3D spatial domains and qualitative relations, for example, as defined in [4, 9, 10, 28, 29, 33, 34].", "startOffset": 122, "endOffset": 148}, {"referenceID": 8, "context": "Our method is readily applicable to other 2D and 3D spatial domains and qualitative relations, for example, as defined in [4, 9, 10, 28, 29, 33, 34].", "startOffset": 122, "endOffset": 148}, {"referenceID": 9, "context": "Our method is readily applicable to other 2D and 3D spatial domains and qualitative relations, for example, as defined in [4, 9, 10, 28, 29, 33, 34].", "startOffset": 122, "endOffset": 148}, {"referenceID": 26, "context": "Our method is readily applicable to other 2D and 3D spatial domains and qualitative relations, for example, as defined in [4, 9, 10, 28, 29, 33, 34].", "startOffset": 122, "endOffset": 148}, {"referenceID": 27, "context": "Our method is readily applicable to other 2D and 3D spatial domains and qualitative relations, for example, as defined in [4, 9, 10, 28, 29, 33, 34].", "startOffset": 122, "endOffset": 148}, {"referenceID": 31, "context": "Our method is readily applicable to other 2D and 3D spatial domains and qualitative relations, for example, as defined in [4, 9, 10, 28, 29, 33, 34].", "startOffset": 122, "endOffset": 148}, {"referenceID": 32, "context": "Our method is readily applicable to other 2D and 3D spatial domains and qualitative relations, for example, as defined in [4, 9, 10, 28, 29, 33, 34].", "startOffset": 122, "endOffset": 148}, {"referenceID": 21, "context": "Left, right, collinear orientation relations between points and segments, and parallel, perpendicular relations between segments [23].", "startOffset": 129, "endOffset": 133}, {"referenceID": 35, "context": "Part-whole relations between regions [37].", "startOffset": 37, "endOffset": 41}, {"referenceID": 24, "context": "line intersections), (b) parallelism between straight lines, and (c) proportions of distances between points on parallel lines [26].", "startOffset": 127, "endOffset": 131}, {"referenceID": 24, "context": "10 10 The properties of affine transformations and the geometric objects that they preserve are well understood; further information is readily available in introductory texts such as [26].", "startOffset": 184, "endOffset": 188}, {"referenceID": 11, "context": "Table 3 presents the experiment time results of CLP(QS) using symmetry pruning compared with existing systems: z3 SMT solver, Redlog real quantifier elimination (in the Reduce computer algebra system) [12], and the relation algebraic qualitative spatial reasoners GQR [13] and SparQ [35].", "startOffset": 201, "endOffset": 205}, {"referenceID": 12, "context": "Table 3 presents the experiment time results of CLP(QS) using symmetry pruning compared with existing systems: z3 SMT solver, Redlog real quantifier elimination (in the Reduce computer algebra system) [12], and the relation algebraic qualitative spatial reasoners GQR [13] and SparQ [35].", "startOffset": 268, "endOffset": 272}, {"referenceID": 33, "context": "Table 3 presents the experiment time results of CLP(QS) using symmetry pruning compared with existing systems: z3 SMT solver, Redlog real quantifier elimination (in the Reduce computer algebra system) [12], and the relation algebraic qualitative spatial reasoners GQR [13] and SparQ [35].", "startOffset": 283, "endOffset": 287}, {"referenceID": 14, "context": "quantifier elimination (in the Reduce computer algebra system) [15], and the relation algebraic qualitative spatial reasoners GQR [16] and SparQ [39].", "startOffset": 130, "endOffset": 134}, {"referenceID": 37, "context": "quantifier elimination (in the Reduce computer algebra system) [15], and the relation algebraic qualitative spatial reasoners GQR [16] and SparQ [39].", "startOffset": 145, "endOffset": 149}, {"referenceID": 34, "context": "Tarski [36] shows that a geometric point can be defined by a language of mereological relations over spheres.", "startOffset": 7, "endOffset": 11}, {"referenceID": 7, "context": "Borgo [8] shows that this can be accomplished with a language of mereology over hypercubes.", "startOffset": 6, "endOffset": 9}, {"referenceID": 32, "context": "As a preliminary we need to determine whether the intersection of two squares is non-square (Figure 8) [34].", "startOffset": 103, "endOffset": 107}, {"referenceID": 36, "context": ", in the manner demonstrated in ASPMT(QS) [38], which is a specialised non-monotonic spatial reasoning system built on top of answer set programming modulo theories.", "startOffset": 42, "endOffset": 46}], "year": 2015, "abstractText": "Declarative spatial reasoning denotes the ability to (declaratively) specify and solve real-world problems related to geometric and qualitative spatial representation and reasoning within standard knowledge representation and reasoning (KR) based methods (e.g., logic programming and derivatives). One approach for encoding the semantics of spatial relations within a declarative programming framework is by systems of polynomial constraints. However, solving such constraints is computationally intractable in general (i.e. the theory of real-closed fields). We present a new algorithm, implemented within the declarative spatial reasoning system CLP(QS), that drastically improves the performance of deciding the consistency of spatial constraint graphs over conventional polynomial encodings. We develop pruning strategies founded on spatial symmetries that form equivalence classes (based on affine transformations) at the qualitative spatial level. Moreover, pruning strategies are themselves formalised as knowledge about the properties of space and spatial symmetries. We evaluate our algorithm using a range of benchmarks in the class of contact problems, and proofs in mereology and geometry. The empirical results show that CLP(QS) with knowledgebased spatial pruning outperforms conventional polynomial encodings by orders of magnitude, and can thus be applied to problems that are otherwise unsolvable in practice.", "creator": "LaTeX with hyperref package"}}}