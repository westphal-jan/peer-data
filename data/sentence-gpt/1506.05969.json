{"id": "1506.05969", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "19-Jun-2015", "title": "HuTO: an Human Time Ontology for Semantic Web Applications", "abstract": "The temporal phenomena have many facets that are studied by different communities. In Semantic Web, large heterogeneous data are handled and produced. These data often have informal, semi-formal or formal temporal information which must be interpreted by software agents.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "histories": [["v1", "Fri, 19 Jun 2015 12:08:39 GMT  (343kb)", "http://arxiv.org/abs/1506.05969v1", "in French. Ing{\\'e}nierie des Connaissances 2015, Jul 2015, Rennes, France. Association Fran\\c{c}aise pour Intelligence Artificielle (AFIA)"]], "COMMENTS": "in French. Ing{\\'e}nierie des Connaissances 2015, Jul 2015, Rennes, France. Association Fran\\c{c}aise pour Intelligence Artificielle (AFIA)", "reviews": [], "SUBJECTS": "cs.AI", "authors": ["papa fary diallo", "olivier corby", "isabelle mirbel", "moussa lo", "seydina m ndiaye"], "accepted": false, "id": "1506.05969"}, "pdf": {"name": "1506.05969.pdf", "metadata": {"source": "CRF", "title": "HuTO: une Ontologie Temporelle Narrative HuTO: une Ontologie Temporelle Narrative pour les Applications du Web Se\u0301mantique", "authors": ["Papa Fary Diallo", "Olivier Corby", "Isabelle Mirbel", "Moussa Lo", "Seydina M. Ndiaye"], "emails": ["olivier.corby}@inria.fr", "isabelle.mirbel@unice.fr", "seydina.ndiaye}@ugb.edu.sn"], "sections": [{"heading": null, "text": "Mots-cl\u00e9s :Ontologies Temporelles, Web S\u00e9mantique, RDFS, SPARQL, R\u00e8gles."}, {"heading": "1 Introduction", "text": "Les ph\u00e9nom\u00e8nes temporels ont de nombreuses facettes qui sont \u00e9tudi\u00e9es par diff\u00e9rentes communaut\u00e9s. Ainsi, la dimension temporelle des donn\u00e9es est aussi \u00e9tudi\u00e9e dans le domaine de l\u2019informatique o\u00f9 il y a un besoin croissant de mod\u00e9liser des syst\u00e8mes calendaires, des \u00e9v\u00e9nements r\u00e9p\u00e9titifs et des faits qui sont vrais pour un certain temps et faux par ailleurs. C\u2019est le cas des Syst\u00e8mes d\u2019Information qui doivent faire face au probl\u00e8me des donn\u00e9es obsol\u00e8tes. En Intelligence Artificielle, des mod\u00e8les abstraits ont \u00e9t\u00e9 propos\u00e9s pour pouvoir raisonner sur des concepts temporels. Dans ce domaine, Allen (Allen, 1984, 1981) a pr\u00e9sent\u00e9 un mod\u00e8le de calcul entre les intervalles de temps qui a influenc\u00e9 les travaux sur la mod\u00e9lisation du temps. Ces travaux de Allen ont \u00e9t\u00e9 \u00e9tendus aux intervalles non-convexes (intervalles r\u00e9p\u00e9titifs) par Ladkin (Ladkin, 1987). Dans le Traitement Automatique des Langages Naturels (TALN) les mod\u00e8les d\u00e9velopp\u00e9s cherchent \u00e0 extraire les expressions temporelles mais aussi leur s\u00e9mantique en langue naturelle. Ainsi, un d\u00e9fi important dans le domaine de l\u2019informatique est la repr\u00e9sentation et le raisonnement sur des informations temporelles. L'int\u00e9r\u00eat de ce travail est de plus en plus important maintenant avec l\u2019\u00e9mergence du Web s\u00e9mantique o\u00f9 de gros volumes de donn\u00e9es h\u00e9t\u00e9rog\u00e8nes sont manipul\u00e9s.\nDans le domaine du Web s\u00e9mantique sont pr\u00e9sentes \u00e0 la fois des notions temporelles informelles, semi-formelles et formelles qui doivent \u00eatre comprises par les agents logiciels. Nous distinguons deux axes de travail: la mod\u00e9lisation d'expression temporelle et l\u2019annotation temporelle des donn\u00e9es. La mod\u00e9lisation d'expression temporelle permet de mod\u00e9liser une date, un intervalle, des notions temporelles r\u00e9p\u00e9titives, relatives ou absolues, etc. L\u2019annotation temporelle des donn\u00e9es permet la repr\u00e9sentation de notions temporelles de fa\u00e7on \u00e0 annoter des connaissances (exprim\u00e9es sous forme de triplet en RDF) et cela en conservant l'\u00e9volution des donn\u00e9es (changement de valeur) dans le temps. Pour cela, le Web s\u00e9mantique repose sur des ontologies qui sont une sp\u00e9cification explicite et formelle d\u2019une conceptualisation partag\u00e9e (Studer et al., 1998). Ainsi, l\u2019objectif principal de ce travail est de proposer une ontologie pour repr\u00e9senter des notions temporelles et annoter temporellement des donn\u00e9es.\nDans (Diallo et al., 2011, 2014) nous avons d\u00e9velopp\u00e9 une ontologie socioculturelle et une plateforme de partage et de co-construction de connaissances sur les communaut\u00e9s s\u00e9n\u00e9galaises. La manipulation de ces donn\u00e9es socioculturelles fait intervenir beaucoup de notions temporelles. Ainsi dans cet article, nous pr\u00e9sentons notre ontologie temporelle, Human Time Ontology (HuTO), et nous illustrons son utilisation sur des donn\u00e9es extraites de cette plateforme.\nCe document continue par un \u00e9tat de l\u2019art dans lequel nous pr\u00e9senterons les travaux sur la mod\u00e9lisation des notions temporelles et l\u2019annotation temporelle des donn\u00e9es dans le Web s\u00e9mantique. Ensuite la troisi\u00e8me partie d\u00e9taillera notre proposition d\u2019ontologie: HuTO. En premier lieu nous pr\u00e9senterons les concepts de l\u2019ontologie qui servent \u00e0 mod\u00e9liser la repr\u00e9sentation d\u2019\u00e9nonc\u00e9 de temps complexe. En deuxi\u00e8me lieu nous pr\u00e9senterons notre approche pour l\u2019annotation temporelle des donn\u00e9es. Dans la partie quatre, nous pr\u00e9senterons les raisonnements et les r\u00e8gles propos\u00e9s dans HuTO. Dans la cinqui\u00e8me partie, nous montrerons des exemples de requ\u00eates en SPARQL sur des connaissances temporellement annot\u00e9es \u00e0 l\u2019aide de HuTO. Nous terminerons par une conclusion et des perspectives pour ce travail."}, {"heading": "2 \u00c9tat de l'art", "text": "Plusieurs sp\u00e9cifications ont \u00e9t\u00e9 propos\u00e9es pour mod\u00e9liser des expressions (\u00e9nonc\u00e9s) temporelles parmi lesquelles nous pouvons citer TimeML (Sauri, 2006), OWL-Time (Pan et Hobbs, 2005) (Pan, 2007) et CNTRO (Tao et al., 2010, 2011). TimeML est un langage d\u2019annotation pour les informations temporelles dans des documents textuels utilis\u00e9 dans le TALN. Il est bas\u00e9 sur un syst\u00e8me de balises XML standard. L\u2019inconv\u00e9nient principal de ce langage est qu\u2019il annote les \u00e9v\u00e9nements et les expressions temporelles dans des segments textuels isol\u00e9s, ce qui rend la recherche d'information plus difficile. TimeML ne permet pas non plus d\u2019exprimer des expressions comme every 3rd Monday. OWL-Time est une ontologie temporelle qui permet de fournir une description temporelle de documents du Web et de Web services. CNTRO est une ontologie en OWL pour la mod\u00e9lisation des informations temporelles dans les r\u00e9cits et rapports cliniques. Ces deux ontologies permettent entre autres la mod\u00e9lisation d\u2019intervalles non-convexes et la repr\u00e9sentation des relations comme celles d\u00e9finies par Allen (Allen, 1984, 1981). Cependant, Pour mod\u00e9liser des intervalles nonconvexes CNTRO mod\u00e9lise la p\u00e9riodicit\u00e9 dans des cha\u00eenes de caract\u00e8res d'o\u00f9 la perte de la s\u00e9mantique. OWL-Time ne permet pas de mod\u00e9liser les expressions humaines du temps comme le temps d\u00e9ictique.\nDans les langages du Web s\u00e9mantique comme RDF, un \u00e9nonc\u00e9 (statement) est une relation binaire qui est utilis\u00e9e pour relier deux individus (instances) ou un individu et une valeur. Or, pour introduire une dimension temporelle, il devient n\u00e9cessaire de manipuler des relations ternaires. La mod\u00e9lisation des relations ternaires est un cas particulier d'une probl\u00e9matique plus g\u00e9n\u00e9rale qui est la mod\u00e9lisation et l'interrogation des relations n-aires dans le Web s\u00e9mantique. Ainsi dans la litt\u00e9rature il existe des approches g\u00e9n\u00e9rales qui essaient de r\u00e9pondre \u00e0 cette probl\u00e9matique comme l\u2019approche des N-ary relations (W3C Working Group, 2006) qui\npropose l\u2019introduction d\u2019un blank node entre l\u2019objet et le sujet du triplet. Ainsi, le blank node peut par exemple \u00eatre temporellement annot\u00e9. Il existe aussi l'approche des graphes nomm\u00e9s qui permettent de contextualiser un ensemble de triplets en les regroupant dans un m\u00eame graphe (URI) qui peut par exemple \u00eatre temporellement annot\u00e9. Une autre approche est la R\u00e9ification en RDF qui permet gr\u00e2ce \u00e0 rdf:Statement d'ajouter d'autres informations sur un triplet comme des informations temporelles.\nIl existe aussi des approches sp\u00e9cifiques \u00e0 la mod\u00e9lisation temporelle comme 4D-Fluents (Welty et Fikes, 2006), une ontologie en OWL qui propose une approche bas\u00e9e sur les occurrents et les perdurants pour mod\u00e9liser l\u2019\u00e9volution temporelle des donn\u00e9es. Dans cette approche les auteurs consid\u00e8rent que tout objet a une partie temporelle et que ce sont ces parties temporelles qui sont en interaction. Il y a aussi l'approche de SOWL (Batsakis et Petrakis, 2011) qui \u00e9tend le 4D-Fluents en y ajoutant les relations d'Allen. Il existe aussi l\u2019approche Temporal RDF (Gutierrez et al., 2005) qui \u00e9tend la R\u00e9ification en RDF en ajoutant une dimension temporelle sur les donn\u00e9es. Ainsi le graphe peut \u00eatre acc\u00e9d\u00e9 selon deux vues, selon qu\u2019on s\u2019int\u00e9resse \u00e0 la temporalit\u00e9 ou aux connaissances du domaine mod\u00e9lis\u00e9. Dans (Rula et al., 2014), les auteurs proposent une approche g\u00e9n\u00e9rique pour extraire des informations temporelles du Web et de leur dur\u00e9e de validit\u00e9. (Scheuermann et al., 2013) propose une approche empirique centr\u00e9e sur les perspectives des utilisateurs ce qui a permis de d\u00e9finir diff\u00e9rents mod\u00e8les temporels.\nExcept\u00e9 Temporal RDF, le principal inconv\u00e9nient pour les autres approches est la perte des relations directes entre les ressources pour l'ajout de l'information temporelle. Ainsi pour ajouter des informations temporelles les triplets sont cass\u00e9s on ajoutant des ressources interm\u00e9diares (N-ary relations, la r\u00e9ification en RDF) ou d\u00e9plac\u00e9s vers des timeSlices (4D-Fluents)."}, {"heading": "3 HuTO", "text": "HuTO1 est une ontologie formalis\u00e9e en RDFS permettant l\u2019annotation temporelle de ressources en RDF \u00e0 l'aide d'expressions temporelles du langage courant. Cette ontologie permet \u00e9galement de d\u00e9finir des ancrages temporels li\u00e9s au contexte et de capturer les changements temporels associ\u00e9s aux ressources annot\u00e9es. Elle rend possible l\u2019interrogation temporelle de la base de connaissances \u00e0 l\u2019aide de requ\u00eates SPARQL. Plus pr\u00e9cis\u00e9ment, HuTO permet de:\n Mod\u00e9liser des expressions temporelles: 1. Explicites: elles sont imm\u00e9diatement ancr\u00e9es; par exemple: 30 Ao\u00fbt 2014, \u00e9t\u00e9\n2014; 2. D\u00e9ictiques: elles forment une relation sp\u00e9cifique avec le temps du discours; par\nexemple: aujourd\u2019hui, demain; 3. De dur\u00e9e: elles indiquent un intervalle de temps; par exemple, 2 heures, 20\nminutes; 4. Cycliques: elles permettent de mod\u00e9liser des dates r\u00e9p\u00e9titives; par exemple:\nchaque lundi, tous les deux mois; 5. Mixtes: elles combinent les expressions pr\u00e9-cit\u00e9s; par exemple deux mois\nl\u2019ann\u00e9e derni\u00e8re.  Normaliser les expressions temporelles afin de pouvoir leur appliquer des\nraisonnements et de pouvoir les interroger."}, {"heading": "3.1 Date, Temps calendaire et granularit\u00e9", "text": "Dans HuTO, les concepts principaux pour la datation sont Datation et TemporalUnit (Fig. 1). Datation est un concept abstrait (qui n'a pas d'instances directes) dont d\u00e9rivent les\n1http://ns.inria.fr/huto/\nconcepts Date et Duration. Le concept Date permet de mod\u00e9liser des dates comme celles du type xsd:dateTime except\u00e9 la partie fuseau horaire (exemples 1a et 1b). Le concept Duration permet de d\u00e9finir des dur\u00e9es comme celles du type xsd:duration (exemple 1d). Les granularit\u00e9s d\u00e9finies dans TemporalUnit vont de Century \u00e0 Second.\nNotons aussi que le concept WeekDay rassemble les jours de la semaine comme sousconcepts. Le concept GenericDay rassemble des sous-concepts comme Today, Yesterday, etc. Notons \u00e9galement la relation hasContext (exemple 1c), qui est utilis\u00e9e pour contextualiser le concept GenericDay.\na. Date(Mardi 17 F\u00e9vrier 2015 \u00e0 10H) [a :Date; :hasHour [a :Hour; :hour 10]; :hasDay [a :Tuesday; :day 17]; :hasMonth [a :February]; :hasYear [a :Year; :year 2015]].\nb. Date(15 04) \u201c15 Avril\u201d [a :Date; :hasDay [a :Day; :day 15]; :hasMonth [a :Month; :month 4]].\nc. Date(Aujourd\u2019hui)- Vendredi 29 Ao\u00fbt 2014\n[a :Date; :hasDay [a :Today; :hasContext [a :Date :hasDay [a :Friday; :day 29]; :hasMonth [a :August]; :hasYear [a :Year; :year 2014]]]].\nd. 2 heures 30 minutes [a :Duration; :hasHour [a :Hour :value 2]; :hasMinute [a :minute; :value 30]].\nEXMPLE 1 \u2013 Mod\u00e9lisation de notions de dates simples.\nNotons que la propri\u00e9t\u00e9 hasTemporalUnit (Fig. 1) est sp\u00e9cialis\u00e9e par les propri\u00e9t\u00e9s\nhasCentury, hasYear, etc et la propri\u00e9t\u00e9 value par century, year etc."}, {"heading": "3.2 Instant, Intervalle et Dur\u00e9e", "text": "Un \u00e9l\u00e9ment temporel peut \u00eatre consid\u00e9r\u00e9 comme un instant, un intervalle ou une dur\u00e9e. Nous avons fait le choix de repr\u00e9senter tous les \u00e9l\u00e9ments temporels comme des intervalles mod\u00e9lis\u00e9s \u00e0 l\u2019aide du concept During (Fig. 2). De ce fait, si pour un intervalle, la date de fin ou la dur\u00e9e n\u2019est pas sp\u00e9cifi\u00e9e alors l\u2019intervalle consid\u00e9r\u00e9 est celui de l\u2019unit\u00e9 de la date. Par exemple, la date Vendredi 15 Ao\u00fbt 2014 est consid\u00e9r\u00e9e comme un intervalle de 24H. Pour pr\u00e9ciser le d\u00e9but et/ou la fin d\u2019un intervalle, il faut utiliser le concept During avec les propri\u00e9t\u00e9s hasBegin et/ou hasEnd. Pour mod\u00e9liser une dur\u00e9e, le concept During est aussi utilis\u00e9 avec les propri\u00e9t\u00e9s hasBegin pour sp\u00e9cifier le d\u00e9but et hasDuration pour la dur\u00e9e.\nLe concept Cycle sert \u00e0 mod\u00e9liser les intervalles non-convexes (r\u00e9p\u00e9titifs). Un intervalle non-convexe est caract\u00e9ris\u00e9 par deux entit\u00e9s: la fr\u00e9quence de r\u00e9p\u00e9tition et l\u2019occurrence de l\u2019intervalle convexe \u00e0 r\u00e9p\u00e9ter. Ainsi, le concept Cycle est reli\u00e9 \u00e0 sa fr\u00e9quence par la relation every. Cette fr\u00e9quence est un sous-concept de TemporalUnit qui repr\u00e9sente l'unit\u00e9 de temps \u00e0 laquelle le cycle se r\u00e9p\u00e9t\u00e9. L\u2019intervalle convexe est reli\u00e9 au concept Cycle par la relation exp. La propri\u00e9t\u00e9 sample permet de mod\u00e9liser pour les Cycle des \u00e9chantillons de date comme tous les 8 heures (cf. Exemple 2b).\nNotons que les propri\u00e9t\u00e9s hasDate, hasDuration, hasBegin et hasEnd sont des sp\u00e9cialisations de la propri\u00e9t\u00e9 hasDatation.\nAvec la mod\u00e9lisation propos\u00e9e, nous faisons la distinction entre les intervalles infinis et les intervalles ferm\u00e9s. De ce fait, si les deux propri\u00e9t\u00e9s hasBegin et hasEnd sont sp\u00e9cifi\u00e9es ou la propri\u00e9t\u00e9 hasDate est utilis\u00e9e, nous avons un intervalle ferm\u00e9. Si l\u2019une des propri\u00e9t\u00e9s hasBegin ou hasEnd est omise, nous avons un intervalle infini.\na. The first Sunday of every April. [a :Cycle; :every [a :Year]; :exp [a :During; :hasDate [a :Date; :hasDay [a :Sunday; :week 1]; :hasMonth [a :April]]]].\nb. Every 8H for 10 days starting from today [a :During; :hasBegin [a :Day; :hasDay[a: Today]]; :hasDuration [a :Duration; :hasDay [a :Day; :value 10]]; :exp [a :Cycle; :every [a :Hour]; :sample 8]].\nEXMPLE 2 \u2013 Mod\u00e9lisation d'intervalles non-convexes2."}, {"heading": "3.3 HuTO et Intervalles d\u2019Allen", "text": "Allen (Allen, 1984, 1981) d\u00e9finit une alg\u00e8bre de 13 relations pour permettre de positionner des intervalles convexes les uns par rapport aux autres et d\u2019en d\u00e9duire des relations. Dans le sens d\u2019Allen, un intervalle convexe est ferm\u00e9 et ordonn\u00e9. Ainsi, il d\u00e9finit six paires de relations inverses: before/after, during/contains, meet/metBy, start/startedBy, finishes/finishedBy et overlaps/overlappedBy. Ainsi, \u00e0 chaque fois que l'une des relations est vraie son inverse l'est aussi. La treizi\u00e8me relation, equal, est son propre inverse.\nDans HuTO, nous n\u2019avons repr\u00e9sent\u00e9 pour l\u2019instant que les relations before et after. Elles nous permettent de mod\u00e9liser la repr\u00e9sentation du temps en datation relative c\u2019est-\u00e0-dire que la dimension temporelle d\u2019une ressource est exprim\u00e9e par rapport \u00e0 la dimension temporelle d\u2019une autre ressource (Exemple 3b). Notons que cette utilisation nous permet d\u2019avoir deux informations implicites (cf. section 4.2): la date de la ressource r\u00e9f\u00e9renc\u00e9e et les deux relations d\u2019Allen entre les ressources. HuTO permet de sp\u00e9cifier les relations before et after entre intervalles, entre ressources et entre une ressource et un intervalle."}, {"heading": "4 Annotation Temporelle des Donn\u00e9es", "text": "L\u2019annotation temporelle des donn\u00e9es consiste \u00e0 lier une donn\u00e9e (une ressource, un triplet ou un graphe nomm\u00e9) \u00e0 sa dimension temporelle. Gr\u00e2ce \u00e0 notre mod\u00e9lisation deux dimensions peuvent co-exister: une temporelle et une non temporelle. La dimension temporelle est sp\u00e9cifi\u00e9e \u00e0 l\u2019aide des concepts de HuTO et la dimension non temporelle, celle du domaine de connaissance, est sp\u00e9cifi\u00e9e au travers des triplets d\u00e9crivant des aspects autres que ceux temporels.\nL\u2019annotation temporelle peut \u00eatre associ\u00e9e \u00e0 une ressource, un triplet ou un graphe nomm\u00e9. Ces derniers sont temporellement annot\u00e9s \u00e0 l\u2019aide de la propri\u00e9t\u00e9 exp qui relie un intervalle convexe (During) ou non-convexe (Cycle) \u00e0 un TemporalThing, elle m\u00eame associ\u00e9e aux connaissances \u00e0 annoter comme suit:\n S'il s\u2019agit d'une ressource, le TemporalThing a pour valeur (rdf:value) la ressource concern\u00e9e (cf. l\u2019exemple 3b pour un intervalle convexe et l'exemple 3a pour un intervalle non-convexe);  S'il s\u2019agit d'un triplet, nous utilisons une r\u00e9ification RDF sur le triplet pour le TemporalThing (cf. exemple 3d);\n2Dans l'exemple 2b, le contexte du Today a \u00e9t\u00e9 omis volontairement pour ne pas surcharger l\u2019exemple\n S'il s\u2019agit d'un graphe nomm\u00e9, nous utilisons Graph, sous concept de TemporalThing, dont la propri\u00e9t\u00e9 uri pointe sur l'URI du graphe nomm\u00e9 (cf. exemple 3c.).\na. Le premier Samedi de chaque mois de D\u00e9cembre, le Fanal de Ndar est organis\u00e9\n[a :Cycle; :every [a :Year]; :exp [a :During; :hasDate [a :Date; :hasDay [a :Saturday; :week 1]; :hasMonth [a:December]]; :exp [a :TemporalThing rdf:value <FanalOfNdar>]]].\nb. la Bataille de Dekheul\u00e9 a eu lieu apr\u00e8s la Bataille de M\u00e9kh\u00e9.\n[a :During; :after [a :Period; rdf:value <BattleOfMekhe>]; :exp [a :TemporalThing; rdf:value <BattleOfDerkheule>]].\nc. En 2011 la Commune de Dakar compte 1056009 d\u2019habitants, c\u2019est la plus peupl\u00e9e et son maire est M. Sall. [a :During; :hasDate [a :Date; :hasYear [a :Year; :year 2011]]; :exp[a :Graph; :uri <http://example.org/g/>]]. <http://example.org/g/> { <Dakar> <population> 1056009; <rang> 1; <mayor> <Sall>}.\nd. Senghor a \u00e9t\u00e9 le Pr\u00e9sident du S\u00e9n\u00e9gal de septembre 1960 \u00e0 d\u00e9cembre 1980 [a :During; :hasBegin [a :Date; :hasMonth [a :September]; :hasYear [a :Year; :year 1960]]; :hasEnd [a :Date; :hasMonth [a :December]; :hasYear [a :Year; :year 1980]]; :exp [rdf:subject <Senghor>; rdf:predicate <presidentOf>; rdf:object <Senegal>]].\nEXMPLE 3 \u2013 Annotation temporelle des donn\u00e9es.\nNotons que HuTO permet aussi d\u2019utiliser une ressource comme une r\u00e9f\u00e9rence temporelle gr\u00e2ce au concept Period. Ainsi une fois dat\u00e9e, une ressource peut \u00eatre utilis\u00e9e comme un marqueur temporel (exemple 3b).\nL'utilisation de HuTO pr\u00e9sente certains avantages compar\u00e9e aux approches pr\u00e9sent\u00e9es dans la deuxi\u00e8me section. Dans la mod\u00e9lisation des expressions temporelles, HuTO permet de repr\u00e9senter des \u00e9nonc\u00e9s complexes comme dans l'exemple 2b. HuTO int\u00e8gre aussi la mod\u00e9lisation des intervalles ferm\u00e9s et infinis et permet aussi d'utiliser une ressource comme r\u00e9f\u00e9rence temporelle. Ces aspects ne sont pas consid\u00e9r\u00e9s par les autres approches pr\u00e9sent\u00e9es. HuTO permet \u00e9galement de mod\u00e9liser le temps d\u00e9ictique ce que ne font pas les autres approches except\u00e9 CNTRO qui le mod\u00e9lise dans une cha\u00eene de caract\u00e8re.\nPour l'annotation temporelle des donn\u00e9es, HuTO propose une repr\u00e9sentation qui permet d'annoter une ressource, un triplet ou plusieurs triplets dans un graphe nomm\u00e9. Ceci nous permet de s\u00e9parer la partie temporelle des donn\u00e9es de celles du domaine contrairement aux autres approches, except\u00e9 Temporal RDF, o\u00f9 la s\u00e9mantique des triplets est perdue par l'introduction d'un blank node (n-ary relations, la r\u00e9ification RDF) ou par le d\u00e9placement des relations sur des timeSlice (4D-Fluents). La principale diff\u00e9rence de HuTO avec Temporal RDF est que ce dernier n\u00e9cessite une extension l\u00e9g\u00e8re du vocabulaire de RDF (Hurtado et Vaisman, 2006)."}, {"heading": "5 Raisonnement Temporel et R\u00e8gles", "text": "HuTO fournit un mod\u00e8le conceptuel en RDFS pour mod\u00e9liser des expressions temporelles et pour annoter des ressources en RDF. Cependant beaucoup de relations temporelles sont exprim\u00e9es implicitement dans les occurrences d\u2019\u00e9v\u00e9nements. Les r\u00e9ponses \u00e0 de nombreuses questions ax\u00e9es sur le temps ne sont pas n\u00e9cessairement repr\u00e9sent\u00e9es explicitement mais peuvent \u00eatre d\u00e9duites. Pour cela, nous avons propos\u00e9 un ensemble de r\u00e8gles permettant de normaliser la repr\u00e9sentation des donn\u00e9es temporelles mais \u00e9galement des r\u00e8gles d'inf\u00e9rences et d'implications."}, {"heading": "5.1 Normalisation de la Repr\u00e9sentation Temporelle", "text": "Puisque HuTO est une ontologie en RDFS, nous avons propos\u00e9 des r\u00e8gles, exprim\u00e9es sous forme de requ\u00eates CONSTRUCT en SPARQL et ayant pour objectif de d\u00e9duire et d\u2019expliciter le maximum d\u2019information temporelle afin de permettre le raisonnement sur les donn\u00e9es.\nLes informations temporelles peuvent \u00eatre exprim\u00e9es de diff\u00e9rentes fa\u00e7ons. Par exemple, une date peut \u00eatre repr\u00e9sent\u00e9e soit en utilisant la repr\u00e9sentation calendaire (Exemple 1a), soit \u00e0 l\u2019aide de chiffres (exemple 1b). Aussi, nous avons cr\u00e9\u00e9 des r\u00e8gles pour normaliser ces deux types d\u2019\u00e9critures. De ce fait, quelque soit le mode d\u2019\u00e9criture utilis\u00e9, toutes les repr\u00e9sentations possibles seront ajout\u00e9es dans le graphe des donn\u00e9es. Nous avons \u00e9galement propos\u00e9 deux r\u00e8gles pour d\u00e9terminer les ann\u00e9es bissextiles. Ces r\u00e8gles nous permettent, entre autre, de conna\u00eetre le nombre de jours dans l\u2019ann\u00e9e ce qui est utile pour r\u00e9pondre \u00e0 certaines requ\u00eates. Nous avons aussi propos\u00e9 une r\u00e8gle pour normaliser l\u2019utilisation du concept Period en ajoutant la date correspondant \u00e0 la p\u00e9riode aux concepts utilisant Period comme date. Nous avons \u00e9galement normalis\u00e9 les intervalles d\u00e9finis par leur dur\u00e9e en ajoutant explicitement la date de fin (hasEnd) de l\u2019intervalle. L\u2019exemple 4 montre une r\u00e8gle pour expliciter la date de fin d\u2019un intervalle d\u00e9fini par sa dur\u00e9e. Notons qu\u2019il existe sept r\u00e8gles pour normaliser les intervalles d\u00e9finis par leur dur\u00e9e (car la r\u00e8gle d\u00e9pend du type de la dur\u00e9e qui peut \u00eatre en si\u00e8cle, en ann\u00e9e, en mois, en semaine, en jour, en minute ou en seconde).\nPREFIX dt: <http://ns.inria.fr/huto/> CONSTRUCT { ?x dt:hasEnd [ ?z ?t; dt:hasYear [a dt:Year; dt:year ?o]} WHERE {?x dt:hasBegin ?y;\ndt:hasDuration/dt:hasYear/rdf:type dt:Year; dt:hasDuration/dt:hasYear/dt:value ?l ?y dt:hasYear/dt:year ?e; ?z ?t FILTER(?z != dt:hasYear) BIND(?e + ?l - 1 as ?o)}\nEXMPLE 4 \u2013 R\u00e8gle de normalisation d\u2019une dur\u00e9e exprim\u00e9e en ann\u00e9e.\nDans cette r\u00e8gle nous r\u00e9cup\u00e9rons toutes les propri\u00e9t\u00e9s li\u00e9es \u00e0 la date de d\u00e9but (?y) except\u00e9 l'ann\u00e9e qu'on incr\u00e9ment de ?l-1 o\u00f9 ?l est la dur\u00e9e de la ressource.\nNous avons aussi propos\u00e9 une requ\u00eate de v\u00e9rification de la consistance entre les concepts Cycle et During. En effet, la granularit\u00e9 de la fr\u00e9quence du concept Cycle doit \u00eatre sup\u00e9rieure \u00e0 celle de la date de l\u2019occurrence de l\u2019intervalle convexe. De m\u00eame, si un During englobe un Cycle alors la granularit\u00e9 de la date du During doit \u00eatre sup\u00e9rieure \u00e0 celle de la fr\u00e9quence du concept Cycle. Par exemple, dans l'exemple 2b nous ne devons pas interchanger les positions de During et Cycle puisque la granularit\u00e9 de Today est sup\u00e9rieure \u00e0 celle de Hour.\nPar manque d'espace, nous ne pouvons pas d\u00e9tailler toutes les r\u00e8gles de normalisations utilis\u00e9es. Cependant il reste un travail de normalisation \u00e0 faire par rapport aux intervalles nonconvexes puisque dans ces intervalles certaines informations sur les dates sont omises. L\u2019id\u00e9e serait de proposer un moyen de normaliser ces intervalles pour ajouter plus d\u2019information sur le graphe des donn\u00e9es."}, {"heading": "5.2 Implications et Inf\u00e9rences", "text": "Puisque RDFS ne permet pas de mod\u00e9liser certaines inf\u00e9rences de base comme la transitivit\u00e9 ou la r\u00e9flexivit\u00e9, nous avons cr\u00e9\u00e9 des r\u00e8gles d\u2019inf\u00e9rence \u00e0 cet effet. Ainsi, nous avons d\u00e9fini par exemple des r\u00e8gles d\u2019inf\u00e9rence pour la transitivit\u00e9 des propri\u00e9t\u00e9s before+/after. De m\u00eame si une relation (after ou before) est exprim\u00e9e entre deux \u00e9v\u00e9nements (respectivement intervalles), il est n\u00e9cessaire de propager cette relation entre les intervalles (respectivement ressources) concern\u00e9s. Pour cela, nous avons propos\u00e9 des r\u00e8gles de propagation.\nPour v\u00e9rifier l\u2019ordre d\u2019englobement des concepts Cycle et During, nous avons d\u00e9fini une propri\u00e9t\u00e9 included qui permet de hi\u00e9rarchiser la granularit\u00e9 des dates. Ainsi nous avons explicit\u00e9 dans HuTO sept relations entre dates (included(Year,Century, included(Month,Year), ...). De fait nous avons d\u00e9fini deux r\u00e8gles de propagation: une r\u00e8gle pour la transitivit\u00e9 et une autre pour la transitivit\u00e9 par la subordination; c\u2019est-\u00e0-dire si included(d2,d1)+ et rdfs:subClassOf(d3,d2) alors included(d3,d1).\nNotons que toutes ces r\u00e8gles d\u2019inf\u00e9rences sont exprim\u00e9es sous forme de requ\u00eates CONSTRUCT en SPARQL interpr\u00e9t\u00e9es comme des r\u00e8gles. Elles nous permettent d'ajouter plus d'information dans le graphe RDF soit en explicitant certaines informations (r\u00e8gles de normalisation) soit d'ajouter des informations implicites (r\u00e8gles de raisonnement). L'utilisation de ces r\u00e8gles dans des raisonneurs n'affectera que les implications de RDFS (RDFS entailment)."}, {"heading": "6 Requ\u00eates en HuTO", "text": "L\u2019ontologie HuTO (ontologie et r\u00e8gles) a \u00e9t\u00e9 test\u00e9e avec Corese (Corby et al., 2012), un moteur s\u00e9mantique qui permet le traitement de ressources en RDF/S, SPARQL et un langage de r\u00e8gles adapt\u00e9 \u00e0 RDF. Notre jeu de donn\u00e9es compte 1014 triplets. L'ex\u00e9cution des implications de RDFS nous am\u00e8ne \u00e0 1660 triplets et celle de nos r\u00e8gles nous am\u00e8ne \u00e0 2378 triplets.\nNous distinguons deux types de requ\u00eates: 1) celles qui d\u00e9terminent les ressources relatives \u00e0 une p\u00e9riode ou relatives \u00e0 une ressource temporellement annot\u00e9e donn\u00e9e et 2) les requ\u00eates qui d\u00e9terminent la p\u00e9riode d\u2019une ressource donn\u00e9e."}, {"heading": "6.1 Requ\u00eates Temporelles sur les Ressources", "text": "La requ\u00eate SPARQL suivante permet par exemple de d\u00e9terminer la temporalit\u00e9 de la ressource data:Gamou.\nPREFIX dt: <http://ns.inria.fr/huto/> PREFIX data: <http://example.org/data/> DESCRIBE ?x WHERE{ {?x dt:exp+/(rdf:value|rdf:subject|rdf:object) data:Gamou}\nUNION {?x dt:exp+/dt:uri ?g graph ?g{ { data:Gamou ?p ?o} UNION { ?s ?p data:Gamou}}} FILTER NOT EXISTS {?x a dt:Period} FILTER NOT EXISTS {?j ?k ?x}}\nEXMPLE 5 \u2013 Requ\u00eate d\u00e9terminant la temporalit\u00e9 de la ressource data:Gamou.\nCette requ\u00eate prend en compte les trois repr\u00e9sentations qui peuvent \u00eatre utilis\u00e9es pour l'annotation temporelle d'une ressource. Ainsi quelque soit la repr\u00e9sentation utilis\u00e9e pour la ressource, cette requ\u00eate nous permet de retrouver la temporalit\u00e9 de la ressource."}, {"heading": "6.2 Requ\u00eates sur les \u00c9l\u00e9ments Temporels", "text": "Dans l\u2019\u00e9tat actuel, nous pouvons par exemple d\u00e9terminer les ressources r\u00e9currentes sur une p\u00e9riode donn\u00e9e. Dans l'exemple 6, la requ\u00eate d\u00e9termine les ressources mensuelles:\nPREFIX dt: <http://ns.inria.fr/huto/> DESCRIBE ?x WHERE{ ?x a dt:Cycle;\ndt:every/rdf:type dt:Month FILTER NOT EXISTS {?x dt:sample ?t}}\nEXMPLE 6 \u2013 Requ\u00eate d\u00e9terminant les donn\u00e9es qui se produisent mensuellement.\nPar manque d'espace nous ne pouvons pas donner le d\u00e9tail de toutes nos requ\u00eates types. Cependant nous pouvons d\u00e9terminer:\n Les ressources r\u00e9p\u00e9titives par rapport \u00e0 une fr\u00e9quence donn\u00e9e. Cette fr\u00e9quence peut \u00eatre un jour de la semaine, annuelle, mensuelle (Exemple 6), etc;  Les ressources qui se produisent relativement (avant ou apr\u00e8s) \u00e0 une ressource donn\u00e9e. Notons que cette requ\u00eate ne concerne que les intervalles convexes puisque les propri\u00e9t\u00e9s before et after ne sont d\u00e9finies que pour ces types d'intervalles;  Les ressources qui se produisent \u00e0 une date donn\u00e9e. Notons que pour ces requ\u00eates nous avons besoin d'avoir le jour de la semaine comme argument de la requ\u00eate pour avoir tous les r\u00e9sultats possibles. Par exemple, quelles sont les ressources qui se produisent le Jeudi 1 Janvier 2015;  La date d\u2019occurrence d'une ressource sp\u00e9cifique (Exemple 5).\nNotons aussi que pour toutes ces requ\u00eates types, les r\u00e9sultats sont des ressources annot\u00e9es \u00e0 l'aide d'intervalles convexes, non-convexes et ou du marqueur temporel Period.\nLes requ\u00eates types qui restent \u00e0 traiter sont celles qui d\u00e9terminent les ressources pour une p\u00e9riode (intervalle de temps) donn\u00e9e. Pour ces requ\u00eates, la prise en compte des intervalles nonconvexes est plus complexe."}, {"heading": "7 Conclusions et Perspectives", "text": "Dans cet article, nous avons pr\u00e9sent\u00e9 HuTO qui est une ontologie en RDFS pour annoter temporellement des donn\u00e9es en RDF \u00e0 l'aide d'expressions du langage courant. Ce travail repose sur deux domaine de recherches dans la mod\u00e9lisation temporelle en Web s\u00e9mantique.\nDans le domaine de la mod\u00e9lisation des expressions temporelles, HuTO permet la mod\u00e9lisation d\u2019\u00e9nonc\u00e9s de temps complexe (exemple 2b). Notre ontologie comprend \u00e9galement un ensemble de r\u00e8gles afin de normaliser et de renforcer la coh\u00e9rence des donn\u00e9es temporelles. Dans notre approche nous consid\u00e9rons toute entit\u00e9 temporelle comme un intervalle pouvant \u00eatre d\u00e9fini \u00e0 l'aide de diff\u00e9rentes granularit\u00e9s calendaires. Une correspondance existe entre le type xsd:duration et HuTO et entre le type xsd:dateTime et HuTO except\u00e9 la partie fuseau horaire. Une distinction est faite entre les intervalles ferm\u00e9s et infinis de m\u00eame entre les intervalles convexes et non-convexes. Notre ontologie int\u00e8gre aussi les relations temporelles after et before telles que d\u00e9finies dans (Allen, 1983 et 1984). Ces relations sont d\u00e9finies soit entre deux intervalles soit entre deux ressources soit entre un intervalle et une ressource. HuTO permet aussi d\u2019utiliser une ressource comme un marqueur temporel pour dater une autre ressource. Une des contributions majeures de HuTO est la mod\u00e9lisation des intervalles non-convexes de fa\u00e7on \u00e0 permettre l'\u00e9criture de requ\u00eates SPARQL qui permettent de consid\u00e9rer tout type d'intervalle.\nPour l\u2019annotation temporelle des donn\u00e9es, HuTO propose une approche qui permet d'associer une dimension temporelle aux connaissances du domaine. HuTO permet \u00e9galement de garder la tra\u00e7abilit\u00e9 des changements temporels sur les donn\u00e9es que ce soit une ressource, un triplet ou un ensemble de triplets.\nPlusieurs directions de recherche restent \u00e0 explorer. \u00c0 tr\u00e8s court terme, nous souhaitons pouvoir traiter tous les types de requ\u00eates concernant les intervalles (cf. section 5.2). Nous comptons traiter aussi les exceptions dans les intervalles non-convexes gr\u00e2ce aux graphes nomm\u00e9s. Nous comptons aussi \u00e9tudier les autres relations d\u00e9finies dans (Allen, 1983 et 1984) et int\u00e9grer celles qui sont pertinentes pour le domaine socioculturel. \u00c0 moyen terme, nous souhaitons proposer \u00e9galement des patrons de requ\u00eates et des formats de r\u00e9ponses plus lisibles aux utilisateurs qui ne sont pas des experts RDF/SPARQL. \u00c0 long terme, nous souhaitons enfin int\u00e9grer dans HuTO la mod\u00e9lisation de l\u2019incertitude dans les notions temporelles comme dans l'expression \u00e0 la fin des ann\u00e9es 1980.\nR\u00e9f\u00e9rences ALLEN J. F (1984). Maintaining knowledge about temporal intervals. In CACM, 26(11):832\u2013843. ALLEN J. F. (1981). An Interval-Based Representation of Temporal Knowledge.. In Proceedings of the\n7th International Joint Conference on Artificial Intelligence (IJCAI\u201981), pages 221\u2013226, Canada. BATSAKIS S. & PETRAKIS G. M. (2011). SOWL: A Framework for Handling Spatio-temporal\nInformation in OWL 2.0. RuleML Europe 2011: 242-249. CORBY O., GAIGNARD A., FARON-ZUCKER C. & MOTAGNAT J. (2012). KGRAM Versatile Data\nGraphs Querying and Inference Engine. In Proc. IEEE/WIC/ACM International Conference on Web Intelligence, Macau.\nDIALLO P. F., CORBY O., LO M., MIRBEL I. & NDIAYE S. M. (2014). Sociocultural Ontology: Upperlevel and Domain Ontologies. In Journ\u00e9es Francophone sur les Ontologies, Tunisie, pp 15-27.\nDIALLO P. F., NDIAYE S. M & LO M. (2011). Study of Sociocultural Ontology. In the First International Conference on Social EcoInformatics., 1(5):69-74, Spain.\nGUTIERREZ C., HURTADO C., & VAISMAN A. (2005). Temporal RDF. In European Conference on the Semantic Web (ECSW\u201905) (Best paper award), pp 93\u2013107.\nHURTADO C., & VAISMAN A. (2006). Reasoning About Temporal Constraints in RDF. Principles and Practice of Semantic Web Reasoning. Lecture Notes in Computer Science Volume 4187, pp 164-178\nLADKIN P. B. (1987). The Logic of Time Representation. PhD Thesis at the University of California at Berkeley, November.\nPAN F. (2007). Representing complex temporal phenomena for the semantic web and natural language. Phd Thesis at the University of Southern California, December.\nPAN F. & HOBBS J. R. (2005). Temporal Aggregates in OWL-Time. FLAIRS Conference 560-565. RULA A., PALMONARI M., NGOMO A. C. N., G ERBER D., L EHMANN J. & B \u00dcHMANN L. (2014).\nHybrid Acquisition of Temporal Scopes for RDF Data. In The Semantic Web: Trends and Challenges, pp 488-503.\nSAURI R., LITTMAN J., KNIPPEN B., GAIZAUSKAS R., SETZER A. & PUSTEJOVSY J (2006). TimeML Annotation GuidelinesVersion 1.2.1. In TimeML Specification.\nSCHEUERMANN A., MOTTA E., MULHOLLAND P., GANGEMI A. & PRESUTTI V. (2013). 7th International Conference on Knowledge Capture, K-CAP, pp 89-96.\nTAO C., SOLBRIGH H. R. & CHUTE C. G (2011). CNTRO 2.0: A Harmonized Semantic Web Ontology for Temporal Relation Inferencing in Clinical Narratives. In AMIA Summits on Translational Science Proceedings: 64\u201368. Available at http://www.ncbi.nlm.nih.gov/pmc/articles/PMC3248753/\nTAO C., WEI-QI WEI , SOLBRIGH H., SAVOVA G. & CHUTE C. G (2010). CNTRO: A Semantic Web Ontology for Temporal Relation Inferencing in Clinical Narratives. In AMIA Annual Symposium Proceedings: 787\u2013791. Available at http://www.ncbi.nlm.nih.gov/pmc/articles/PMC3041418/\nWELTY C. & WIKES R. (2006). A Reusable Ontology for Fluents in OWL. In Frontiers in Artificial Intelligence and Applications, 150:226\u2013236.\nW3C WORKING GROUP NOTE 12 APRIL (2006). Defining N-ary Relations on the Semantic Web. Available at http://www.w3.org/TR/swbp-n-aryRelations/ ."}], "references": [], "referenceMentions": [], "year": 2015, "abstractText": "Un d\u00e9fi majeur en informatique est la mod\u00e9lisation et le raisonnement sur les donn\u00e9es temporelles. Ce travail est devenu encore plus important avec l'\u00e9mergence du Web s\u00e9mantique o\u00f9 de grandes quantit\u00e9s donn\u00e9es h\u00e9t\u00e9rog\u00e8nes sont manipul\u00e9es. Ces donn\u00e9es comportent souvent des informations temporelles informelles, semi-formelles ou formelles qui doivent \u00eatre interpr\u00e9t\u00e9es par les agents logiciels. Dans cet article nous pr\u00e9sentons notre ontologie, Humain Time Ontologie (HuTO), une ontologie en RDFS pour annoter des ressources en RDF et repr\u00e9senter les expressions narratives temporelles. Une des contributions majeures de HuTO est la mod\u00e9lisation des intervalles non-convexes c'est-\u00e0-dire les intervalles r\u00e9p\u00e9titifs comme tous les mercredi mais \u00e9galement la possibilit\u00e9 d'\u00e9crire des requ\u00eates sur ce type d'intervalle. HuTO int\u00e8gre aussi des r\u00e8gles de normalisation et de raisonnement pour expliciter certaines informations temporelles. HuTO propose aussi une approche qui permet de garder distincte la dimension temporelle et les annotations du domaine m\u00e9tier. Cela facilite la recherche d\u2019informations qu\u2019elles soient", "creator": "Writer"}}}