{"id": "1508.01745", "review": {"conference": "EMNLP", "VERSION": "v1", "DATE_OF_SUBMISSION": "7-Aug-2015", "title": "Semantically Conditioned LSTM-based Natural Language Generation for Spoken Dialogue Systems", "abstract": "Natural language generation (NLG) is a critical component of spoken dialogue and it has a significant impact both on usability and perceived quality. Most NLG systems in common use employ rules and heuristics and tend to generate rigid and stylised responses without the natural variation of human language. They are also not easily scaled to systems covering multiple domains and languages. This paper presents a statistical language generator based on a semantically controlled Long Short-term Memory (LSTM) structure. The LSTM generator can learn from unaligned data by jointly optimising sentence planning and surface realisation using a simple cross entropy training criterion, and language variation can be easily achieved by sampling from output candidates. An objective evaluation in two differing test domains showed improved performance compared to previous methods with fewer heuristics. Human judges scored the LSTM system higher on informativeness and naturalness and overall preferred it to the other systems. An objective comparison between the LSTM and the LSTM of the other systems and the LSTM of the other systems, using the comparison between the LSTM of the other systems and the LSTM of the other systems, using a cross entropy and naturalness approach, and using a cross entropy model. The results suggest that LSTM may not be able to accurately predict whether the other systems are correct or not.", "histories": [["v1", "Fri, 7 Aug 2015 16:16:44 GMT  (643kb,D)", "http://arxiv.org/abs/1508.01745v1", "To be appear in EMNLP 2015"], ["v2", "Wed, 26 Aug 2015 17:16:25 GMT  (813kb,D)", "http://arxiv.org/abs/1508.01745v2", "To be appear in EMNLP 2015"]], "COMMENTS": "To be appear in EMNLP 2015", "reviews": [], "SUBJECTS": "cs.CL", "authors": ["tsung-hsien wen", "milica gasic", "nikola mrksic", "pei-hao su", "david vandyke", "steve j young"], "accepted": true, "id": "1508.01745"}, "pdf": {"name": "1508.01745.pdf", "metadata": {"source": "CRF", "title": "Semantically Conditioned LSTM-based Natural Language Generation for Spoken Dialogue Systems", "authors": ["Tsung-Hsien Wen", "Milica Ga\u0161i\u0107", "Nikola Mrk\u0161i\u0107", "Pei-Hao Su", "David Vandyke", "Steve Young"], "emails": ["thw28@cam.ac.uk", "mg436@cam.ac.uk", "nm480@cam.ac.uk", "phs26@cam.ac.uk", "djv27@cam.ac.uk", "sjy@cam.ac.uk"], "sections": [{"heading": "1 Introduction", "text": "The natural language generation (NLG) component provides much of the persona of a spoken dialogue system (SDS), and it has a significant impact on a user\u2019s impression of the system. As noted in Stent et al. (2005), a good generator usually depends on several factors: adequacy, fluency, readability, and variation. Previous approaches attacked the NLG problem in different ways. The most common and widely adopted today is the rule-based (or template-based) approach (Cheyer and Guzzoni, 2007; Mirkovic and\nCavedon, 2011). Despite its robustness and adequacy, the frequent repetition of identical, rather stilted, output forms make talking to a rule-based generator rather tedious. Furthermore, the approach does not easily scale to large open domain systems(Young et al., 2013; Gas\u030cic\u0301 et al., 2014; Henderson et al., 2014). Hence approaches to NLG are required that can be readily scaled whilst meeting the above requirements.\nThe trainable generator approach exemplified by the HALOGEN (Langkilde and Knight, 1998) and SPaRKy system (Stent et al., 2004) provides a possible way forward. These systems include specific trainable modules within the generation framework to allow the model to adapt to different domains (Walker et al., 2007), or reproduce certain style (Mairesse and Walker, 2011). However, these approaches still require a handcrafted generator to define the decision space within which statistics can be used for optimisation. The resulting utterances are therefore constrained by the predefined syntax and any domain-specific colloquial responses must be added manually.\nMore recently, corpus-based methods (Oh and Rudnicky, 2000; Mairesse and Young, 2014; Wen et al., 2015) have received attention as access to data becomes increasingly available. By defining a flexible learning structure, corpus-based methods aim to learn generation directly from data by adopting an over-generation and reranking paradigm. Learning from data directly enables the system to mimic human responses more naturally, removes the dependency on predefined rules, and makes the system easier to build and extend to other domains. However, several weaknesses in these approaches have been observed. More details are illustrated in Section 2.\nThis paper presents a statistical NLG based on a semantically controlled Long Short-term Memory (LSTM) recurrent network. It can learn from unaligned data by jointly optimising its sentence\nar X\niv :1\n50 8.\n01 74\n5v 1\n[ cs\n.C L\n] 7\nA ug\n2 01\n5\nplanning and surface realisation components using a simple cross entropy training criterion without any heuristics, and good quality language variation is obtained simply by randomly sampling the network outputs. We start in Section 3 by defining the framework of the proposed neural language generator. We introduce the semantically controlled LSTM (SC-LSTM) cell in Section 3.1, then we discuss how to extend it to a deep structure in Section 3.2. As suggested in Wen et al. (2015), a backward reranker is introduced in Section 3.3 to improve fluency. Training and decoding details are described in Section 3.4 and 3.5.\nSection 4 presents an evaluation of the proposed approach in the context of an application providing information about venues in the San Francisco area. In Section 4.2, we first show that our generator outperforms several baselines using objective metrics. We experimented on two different ontologies to show not only that good performance can be achieved across domains, but how easy and quick the development lifecycle is. In order to assess the subjective performance of our system, a quality test and a pairwise preference test are presented in Section 4.3. The results show that our approach can produce high quality utterances that are considered to be more natural and are preferred to previous approaches. We conclude with a brief summary and future work in Section 5."}, {"heading": "2 Related Work", "text": "Conventional approaches to NLG typically divide the task into sentence planning and surface realisation. Sentence planning maps input semantic symbols into an intermediary form representing the utterance, e.g. a tree-like or template structure, then surface realisation converts the intermediate structure into the final text (Walker et al., 2002; Stent et al., 2004). Although statistical sentence planning has been explored previously, for example, generating the most likely context-free derivations given a corpus (Belz, 2008) or maximising the expected reward using reinforcement learning (Rieser and Lemon, 2010), these methods still rely on a pre-existing, handcrafted generator. To minimise handcrafting, Stent and Molina (2009) proposed learning sentence planning rules directly from a corpus of utterances labelled with Rhetorical Structure Theory (RST) discourse relations (Mann and Thompson, 1988). However, the required corpus labelling is expensive and addi-\ntional handcrafting is still needed to map the sentence plan to a valid syntactic form.\nAs noted above, corpus-based NLG aims at learning generation decisions from data with minimal dependence on rules and heuristics. A pioneer in this direction is the class-based n-gram language model (LM) approach proposed by Oh and Rudnicky (2000). Ratnaparkhi (2002) later addressed some of the limitations of class-based LMs in the over-generation phase by using a modified generator based on a syntactic dependency tree. Mairesse and Young (2014) proposed a phrase-based NLG system based on factored LMs that can learn from a semantically aligned corpus. Although active learning (Mairesse et al., 2010) was also proposed to allow learning online directly from users, the requirement for human annotated alignments limits the scalability of the system. Another similar approach casts NLG as a template extraction and matching problem, e.g., Angeli et al. (2010) train a set of log-linear models to make a series of generation decisions to choose the most suitable template for realisation. Kondadadi et al. (2013) later show that the outputs can be further improved by an SVM reranker making them comparable to human-authored texts. However, template matching approaches do not generalise well to unseen combinations of semantic elements.\nThe use of neural network-based (NN) approaches to NLG is relatively unexplored. The stock reporter system ANA by Kukich (1987) is perhaps the first NN-based generator, although generation was only done at the phrase level. Recent advances in recurrent neural network-based language models (RNNLM) (Mikolov et al., 2010; Mikolov et al., 2011a) have demonstrated the value of distributed representations and the ability to model arbitrarily long dependencies. Sutskever et al. (2011) describes a simple variant of the RNN that can generate meaningful sentences by learning from a character-level corpus. More recently, Karpathy and Fei-Fei (2014) have demonstrated that an RNNLM is capable of generating image descriptions by conditioning the network model on a pre-trained convolutional image feature representation. Zhang and Lapata (2014) also describes interesting work using RNNs to generate Chinese poetry. A forerunner of the system presented here is described in Wen et al. (2015), in which a forward RNN generator, a CNN reranker, and a backward RNN reranker are trained jointly\nto generate utterances. Although the system was easy to train and extend to other domains, a heuristic gate control was needed to ensure that all of the attribute-value information in the system\u2019s response was accurately captured by the generated utterance. Furthermore, the handling of unusual slot-value pairs by the CNN reranker was rather arbitrary. In contrast, the LSTM-based system described in this paper can deal with these problems automatically by learning the control of gates and surface realisation jointly.\nTraining an RNN with long range dependencies is difficult because of the vanishing gradient problem (Bengio et al., 1994). Hochreiter and Schmidhuber (1997) mitigated this problem by replacing the sigmoid activation in the RNN recurrent connection with a self-recurrent memory block and a set of multiplication gates to mimic the read, write, and reset operations in digital computers. The resulting architecture is dubbed the Long Short-term Memory (LSTM) network. It has been shown to be effective in a variety of tasks, such as speech recognition (Graves et al., 2013b), handwriting recognition (Graves et al., 2009), spoken language understanding (Yao et al., 2014), and machine translation (Sutskever et al., 2014). Recent work by Graves et al. (2014) has demonstrated that an NN structure augmented with a carefully designed memory block and differentiable read/write operations can learn to mimic computer programs. Moreover, the ability to train deep networks provides a more sophisticated way of exploiting relations between labels and features, therefore making the prediction more accurate (Hinton et al., 2012). By extending an LSTM network to be both deep in space and time, Graves (2013) shows the resulting network can used to synthesise handwriting indistinguishable from that of a human."}, {"heading": "3 The Neural Language Generator", "text": "The generation model proposed in this paper is based on a recurrent NN architecture (Mikolov et al., 2010) in which a 1-hot encoding wt of a token1 wt is input at each time step t conditioned on a recurrent hidden layer ht and outputs the probability distribution of the next token wt+1. Therefore, by sampling input tokens one by one from the output distribution of the RNN until a stop sign is gen-\n1 We use token instead of word because our model operates on text for which slot values are replaced by its corresponding slot tokens. We call this procedure delexicalisation.\nerated (Karpathy and Fei-Fei, 2014) or some constraint is satisfied (Zhang and Lapata, 2014), the network can produce a sequence of tokens which can be lexicalised 2 to form the required utterance."}, {"heading": "3.1 Semantic Controlled LSTM cell", "text": "Long Short-term Memory (Hochreiter and Schmidhuber, 1997) is a recurrent NN architecture which uses a vector of memory cells ct \u2208 Rn and a set of elementwise multiplication gates to control how information is stored, forgotten, and exploited inside the network. Of the various different connectivity designs for an LSTM cell (Graves, 2013; Zaremba et al., 2014), the architecture used in this paper is given by the following equations,\nit = \u03c3(Wwiwt +Whiht\u22121) (1)\nft = \u03c3(Wwfwt +Whfht\u22121) (2)\not = \u03c3(Wwowt +Whoht\u22121) (3)\nc\u0302t = tanh(Wwcwt +Whcht\u22121) (4)\nct = ft ct\u22121 + it c\u0302t (5) ht = ot tanh(ct) (6)\nwhere \u03c3 is the sigmoid function, it, ft,ot \u2208 [0, 1]n are input, forget, and output gates respectively, and c\u0302t and ct are proposed cell value and true cell\n2The process of replacing slot token by its value.\nvalue at time t. Note that each of these vectors has a dimension equal to the hidden layer h.\nIn order to ensure that the generated utterance represents the intended meaning, the generator is further conditioned on a control vector d, a 1-hot representation of the dialogue act (DA) type and its slot-value pairs. Although a related work (Karpathy and Fei-Fei, 2014) has suggested that reapplying this auxiliary information to the RNN at every time step can increase performance by mitigating the vanishing gradient problem (Mikolov and Zweig, 2012; Bengio et al., 1994), we have found that such a model also omits and duplicates slot information in the surface realisation. In Wen et al. (2015) simple heuristics are used to turn off slot feature values in the control vector d once the corresponding slot token has been generated. However, these heuristics can only handle cases where slot-value pairs can be identified by exact matching between the delexicalised surface text and the slot value pair encoded in d. Cases such as binary slots and slots that take don\u2019t care values cannot be explicitly delexicalised in this way and these cases frequently result in generation errors.\nTo address this problem, an additional control cell is introduced into the LSTM to gate the DA as shown in Figure 1. This cell plays the role of sentence planning since it manipulates the DA features during the generation process in order to produce a surface realisation which accurately encodes the input information. We call the resulting architecture Semantically Controlled LSTM (SC-LSTM). Starting from the original DA 1-hot vector d0, at each time step the DA cell decides what information should be retained for future time steps and discards the others,\nrt = \u03c3(Wwrwt + \u03b1Whrht\u22121) (7)\ndt = rt dt\u22121 (8)\nwhere rt \u2208 [0, 1]d is called the reading gate, and \u03b1 is a constant. Here Wwr and Whr act like keyword and key phrase detectors that learned to associate certain patterns of generated tokens with certain slots. Figure 3 gives an example of how these detectors work in affecting DA features inside the network. Equation 5 is then modified so that the cell value ct also depends on the DA,\nct = ft ct\u22121 + it c\u0302t + tanh(Wdcdt) (9)\nAfter updating Equation 6 by Equation 9, the output distribution is formed by applying a softmax\nfunction g, and the distribution is sampled to obtain the next token,\nP (wt+1|wt, wt\u22121, ...w0,dt) = g(Whoht) (10)\nwt+1 \u223c P (wt+1|wt, wt\u22121, ...w0,dt). (11)"}, {"heading": "3.2 The Deep Structure", "text": "Deep Neural Networks (DNN) enable increased discrimination by learning multiple layers of features, and represent the state-of-the-art for many applications such as speech recognition (Graves et al., 2013b) and natural language processing (Collobert and Weston, 2008). The neural language generator proposed in this paper can be easily extended to be deep in both space and time by stacking multiple LSTM cells on top of the original structure. As shown in Figure 2, skip connections are applied to the inputs of all hidden layers as well as between all hidden layers and the outputs (Graves, 2013). This reduces the number of processing steps between the bottom of the network and the top, and therefore mitigates the vanishing gradient problem (Bengio et al., 1994) in the vertical direction. To allow all hidden layer information to influence the reading gate, Equation 7 is changed to\nrt = \u03c3(Wwrwt + \u2211 l \u03b1lW l hrh l t\u22121) (12)\nwhere l is the hidden layer index and \u03b1l is a layer-wise constant. Since the network tends to overfit when the structure becomes more complex, the dropout technique (Srivastava et al., 2014) is used to regularise the network. As suggested in (Zaremba et al., 2014), dropout was only applied to the non-recurrent connections, as shown in the Figure 2. It was not applied to word embeddings since pre-trained word vectors were used."}, {"heading": "3.3 Backward LSTM reranking", "text": "One remaining problem in the structure described so far is that the LSTM generator selects words based only on the preceding history, whereas some sentence forms depend on the backward context. Previously, bidirectional networks (Schuster and Paliwal, 1997) have been shown to be effective for sequential problems (Graves et al., 2013a; Sundermeyer et al., 2014). However, applying a bidirectional network directly in the SC-LSTM generator is not straightforward since the generation process is sequential in time. Hence instead of integrating\nthe bidirectional information into one network, we trained another SC-LSTM from backward context to choose best candidates from the forward generator outputs. In our experiments, we also found that by tying the keyword detector weights Wwr (see Equations 7 and 12) of both the forward and backward networks together makes the generator less sensitive to random initialisation."}, {"heading": "3.4 Training", "text": "The forward generator and the backward reranker were both trained by treating each sentence as a mini-batch. The objective function was the cross entropy error between the predicted word distribution pt and the actual word distribution yt in the training corpus. An l2 regularisation term was added to the objective function for every 10 training examples as suggested in Mikolov et al. (2011b). However, further regularisation was required for the reading gate dynamics. This resulted in the following modified cost function for each mini-match (ignoring standard l2),\nF (\u03b8) = \u2211\nt p \u1d40 t log(yt) + \u2016dT \u2016+ \u2211T\u22121 t=0 \u03b7\u03be \u2016dt+1\u2212dt\u2016\n(13) where dT is the DA vector at the last word index T , and \u03b7 and \u03be are constants set to 10\u22124 and 100, respectively. The second term is used to penalise generated utterances that failed to render all the required slots, while the third term discourages the network from turning more than one gate off in a single time step. The forward and backward\nnetworks were structured to share the same set of word embeddings, initialised with pre-trained word vectors (Pennington et al., 2014). The hidden layer size was set to be 80 for all cases, and deep networks were trained with two hidden layers and a 50% dropout rate. All costs and gradients were computed and stochastic gradient descent was used to optimise the parameters. Both networks were trained with back propagation through time (Werbos, 1990). In order to prevent overfitting, early stopping was implemented using a held-out validation set."}, {"heading": "3.5 Decoding", "text": "The decoding procedure is split into two phases: (a) over-generation, and (b) reranking. In the over-generation phase, the forward generator conditioned on the given DA, is used to sequentially generate utterances by random sampling of the predicted next word distributions. In the reranking phase, the cost of the backward reranker Fb(\u03b8) is computed. Together with the cost Ff (\u03b8) from the forward generator, the reranking score R is computed as:\nR = \u2212(Ff (\u03b8) + Fb(\u03b8) + \u03bbERR) (14)\nwhere \u03bb is a tradeoff constant, and the slot error rate ERR is computed by exact matching the slot tokens in the candidate utterances,\nERR = p+ q\nN (15)\nwhere N is the total number of slots in the DA, and p, q is the number of missing and redundant slots in the given realisation. Note that the ERR reranking criteria cannot handle arbitrary slot-value pairs such as binary slots or slots that take the don\u2019t care value because they cannot be delexicalised and exactly matched. \u03bb is set to a large value in order to severely penalise nonsensical outputs."}, {"heading": "4 Experiments", "text": ""}, {"heading": "4.1 Experimental Setup", "text": "The target application for our generation system is a spoken dialogue system providing information about certain venues in San Francisco. In order to demonstrate the scalability of the proposed method and its performance in different domains, we tested on two domains that talk about restaurants and hotels respectively. There are 8 system dialogue act types such as inform to present information about restaurants, confirm to check that a slot value has been recognised correctly, and reject to advise that the user\u2019s constraints cannot be met. Each domain contains 12 attributes (slots), some are common to both domains and the others are domain specific. The detailed ontologies for two domains are provided in Table 1. To form a training corpus for each domain, dialogues collected from a previous user trial (Gas\u030cic\u0301 et al., 2015) of a statistical dialogue manager were randomly sampled and shown to workers recruited via the Amazon Mechanical Turk (AMT) service. Workers were shown each dialogue turn by turn and asked to enter an appropriate system response in natural English corresponding to each system DA. For each domain we collect around 5K system utterances from about 1K randomly sampled dialogues. Each categorical value was replaced by a token representing its slot, and slots that appeared multiple times in a DA were merged into one. After processing and grouping each utterance according to its delexicalised DA, we obtained 248 distinct DAs in the restaurant domain and 164 in the hotel domain. The average number of slots per DA for each domain is 2.25 and 1.95, respectively.\nThe system was implemented using the Theano library (Bergstra et al., 2010; Bastien et al., 2012), and trained by partitioning each of the collected corpus into a training, validation, and testing set in the ratio 3:1:1. The frequency of each action type and slot-value pair differs quite markedly across the corpus, hence up-sampling was used to\nmake the corpus more uniform. Since our generator works stochastically and the trained networks can differ depending on the initialisation, all the results shown below3 were averaged over 5 randomly initialised networks. For each DA, we overgenerated 20 utterances and selected the top 5 realisations after reranking. The BLEU-4 metric was used for the objective evaluation (Papineni et al., 2002). Multiple references for each test DA were obtained by mapping them back to the distinct set of DAs, grouping those delexicalised surface forms that have the same DA specification, and then lexicalising those surface forms back to utterances. In addition, the slot error rate (ERR) as described in Section 3.5 was also computed as an auxiliary metric alongside the BLEU score. However, for the experiments it is computed at the corpus level, by averaging slot errors over each of the top 5 realisations in the entire corpus. The tradeoff weights \u03b1 between keyword and key phrase detectors as mentioned in Section 3.1 and 3.2 were set to 0.5."}, {"heading": "4.2 Objective Evaluation", "text": "We compared the single layer semantically controlled LSTM (sc-lstm) and a deep version with two hidden layers (+deep) against several baselines: the handcrafted generator (hdc), k-nearest neighbour (kNN), class-based LMs (classlm) as proposed in Oh and Rudnicky (2000), the heuristic gated RNN as described in Wen et al. (2015) and a similar LSTM variant (rnn w/ & lstm w/), and the same RNN/LSTM but without gates (rnn w/o & lstm w/o). The handcrafted generator was developed over a long period of time and is the\n3Except human evaluation, in which only one set of networks was used.\nstandard generator used for trialling end-to-end dialogue systems (for example (Gas\u030cic\u0301 et al., 2014)). The kNN was implemented by computing the similarity of the test DA 1-hot vector against all of the training DA 1-hot vectors, selecting the nearest and then lexicalising to generate the final surface form. The objective results are shown in Table 2. As can be seen, none of the baseline systems shown in the first block (hdc, kNN, & classlm) are comparable to the systems described in this paper (sc-lstm & +deep) if both metrics are considered. Setting aside the difficulty of scaling to large domains, the handcrafted generator\u2019s (hdc) use of predefined rules yields a fixed set of sentence plans, which can differ markedly from the real colloquial human responses collected from AMT, while the class LM approach suffers from inaccurate rendering of information. Although the kNN method provides reasonable adequacy i.e. low ERR, the BLEU is low, probably because of the errors in the collected corpus which kNN cannot handle but statistical approaches such as LMs can by suppressing unlikely outputs.\nThe last three blocks in Table 2 compares the proposed method with previous RNN approaches. LSTM generally works better than vanilla RNN due to its ability to model long range dependencies more efficiently. We also found that by using gates, whether learned or heuristic, gave much lower slot error rates. As an aside, the ability of the SC-LSTM to learn gates is also exemplified in Figure 3. Finally, by combining the learned gate approach with the deep architecture (+deep), we obtained the best overall performance."}, {"heading": "4.3 Human Evaluation", "text": "Since automatic metrics may not consistently agree with human perception (Stent et al., 2005), human testing is needed to assess subjective quality. To do this, a set of judges were recruited using AMT. For each task, two systems among the four (classlm, rnn w/, sc-lstm, and +deep) were randomly selected to generate utterances from a set of newly sampled dialogues in the restaurant domain. In order to evaluate system performance in the presence of language variation, each system generated 5 different surface realisations for each input DA and the human judges were asked to score each of them in terms of informativeness and naturalness (rating out of 3), and also asked to state a preference between the two. Here informativeness is defined as whether the utterance contains all the information specified in the DA, and naturalness is defined as whether the utterance could plausibly have been produced by a human. In order to decrease the amount of information presented to the judges, utterances that appeared identically in both systems were filtered out. We tested 1000 DAs in total, and after filtering there\u2019re approximately 1300 generated utterances per system.\nTable 3 shows the quality assessments which exhibit the same general trend as the objective results. The SC-LSTM systems (sc-lstm & +deep) outperform the class-based LMs (classlm) and the RNN with heuristic gates (rnn w/) in both metrics. The deep SC-LSTM system (+deep) is significantly better than the class LMs (classlm) in terms of informativeness, and better than the RNN with heuristic gates (rnn w/) in terms of naturalness. The preference test results are shown in Table 4. Again, the SC-LSTM systems (sc-lstm & +deep) were significantly preferred by the judges. Moreover, the judges recorded a strong preference for the deep approach (+deep) compared to the others, though the preference is not significant when comparing to its shallow counterpart (sc-lstm)."}, {"heading": "5 Conclusion and Future Work", "text": "In this paper we have proposed a neural networkbased generator that is capable of generating natural linguistically varied responses based on a deep, semantically controlled LSTM architecture which\nwe call SC-LSTM. The generator can be trained on unaligned data by jointly optimising its sentence planning and surface realisation components using a simple cross entropy criterion without any heuristics or handcrafting. We found that the SCLSTM model achieved the best overall performance on two objective metrics across two different domains. An evaluation by human judges also confirmed that the SC-LSTM approach is strongly preferred to a variety of existing methods.\nThis work represents a line of research that tries to model the NLG problem in a unified architecture, whereby the entire model is end-to-end trainable from data. We contend that this approach can produce more natural responses which are more similar to colloquial styles found in human conversations. Another key potential advantage of neural network based language processing is the implicit use of distributed representations for words and a single compact parameter encoding of the information to be conveyed. This suggests that it should be possible to further condition the gener-\nator on some dialogue features such discourse information or social cues during the conversation. Furthermore, adopting a corpus based regime enables domain scalability and multilingual NLG to be achieved with less cost and a shorter lifecycle. These latter aspects will be the focus of our future work in this area."}, {"heading": "6 Acknowledgements", "text": "Tsung-Hsien Wen and David Vandyke are supported by Toshiba Research Europe Ltd, Cambridge Research Laboratory."}], "references": [{"title": "A simple domain-independent probabilistic approach to generation", "author": ["Angeli et al.2010] Gabor Angeli", "Percy Liang", "Dan Klein"], "venue": "In Proceedings of the 2010 Conference on EMNLP, EMNLP \u201910", "citeRegEx": "Angeli et al\\.,? \\Q2010\\E", "shortCiteRegEx": "Angeli et al\\.", "year": 2010}, {"title": "Theano: new features and speed improvements", "author": ["Pascal Lamblin", "Razvan Pascanu", "James Bergstra", "Ian J. Goodfellow", "Arnaud Bergeron", "Nicolas Bouchard", "Yoshua Bengio"], "venue": null, "citeRegEx": "Bastien et al\\.,? \\Q2012\\E", "shortCiteRegEx": "Bastien et al\\.", "year": 2012}, {"title": "Automatic generation of weather forecast texts using comprehensive probabilistic generation-space models", "author": ["Anja Belz"], "venue": "Natural Language Engineering", "citeRegEx": "Belz.,? \\Q2008\\E", "shortCiteRegEx": "Belz.", "year": 2008}, {"title": "Learning long-term dependencies with gradient descent is difficult", "author": ["Bengio et al.1994] Yoshua Bengio", "Patrice Simard", "Paolo Frasconi"], "venue": null, "citeRegEx": "Bengio et al\\.,? \\Q1994\\E", "shortCiteRegEx": "Bengio et al\\.", "year": 1994}, {"title": "Theano: a CPU and GPU math expression compiler", "author": ["Olivier Breuleux", "Fr\u00e9d\u00e9ric Bastien", "Pascal Lamblin", "Razvan Pascanu", "Guillaume Desjardins", "Joseph Turian", "David WardeFarley", "Yoshua Bengio"], "venue": null, "citeRegEx": "Bergstra et al\\.,? \\Q2010\\E", "shortCiteRegEx": "Bergstra et al\\.", "year": 2010}, {"title": "A unified architecture for natural language processing: Deep neural networks with multitask learning", "author": ["Collobert", "Weston2008] Ronan Collobert", "Jason Weston"], "venue": "In Proceedings of the 25th International Conference on Machine Learning", "citeRegEx": "Collobert et al\\.,? \\Q2008\\E", "shortCiteRegEx": "Collobert et al\\.", "year": 2008}, {"title": "Incremental on-line adaptation of pomdp-based dialogue managers", "author": ["Ga\u0161i\u0107 et al.2014] Milica Ga\u0161i\u0107", "Dongho Kim", "Pirros Tsiakoulis", "Catherine Breslin", "Matthew Henderson", "Martin Szummer", "Blaise Thomson", "Steve Young"], "venue": null, "citeRegEx": "Ga\u0161i\u0107 et al\\.,? \\Q2014\\E", "shortCiteRegEx": "Ga\u0161i\u0107 et al\\.", "year": 2014}, {"title": "Distributed dialogue policies for multi-domain statistical dialogue management", "author": ["Ga\u0161i\u0107 et al.2015] Milica Ga\u0161i\u0107", "Dongho Kim", "Pirros Tsiakoulis", "Steve Young"], "venue": "Proceedings on ICASSP", "citeRegEx": "Ga\u0161i\u0107 et al\\.,? \\Q2015\\E", "shortCiteRegEx": "Ga\u0161i\u0107 et al\\.", "year": 2015}, {"title": "A novel connectionist system for unconstrained handwriting recognition", "author": ["Graves et al.2009] Alex Graves", "Marcus Liwicki", "Santiago Fern\u00e1ndez", "Roman Bertolami", "Horst Bunke", "J\u00fcrgen Schmidhuber"], "venue": "Pattern Analysis and Machine Intelligence,", "citeRegEx": "Graves et al\\.,? \\Q2009\\E", "shortCiteRegEx": "Graves et al\\.", "year": 2009}, {"title": "Speech recognition with deep recurrent neural networks", "author": ["Graves et al.2013a] Alex Graves", "Abdel-rahman Mohamed", "Geoffrey Hinton"], "venue": "In Acoustics, Speech and Signal Processing (ICASSP),", "citeRegEx": "Graves et al\\.,? \\Q2013\\E", "shortCiteRegEx": "Graves et al\\.", "year": 2013}, {"title": "Speech recognition with deep recurrent neural networks. CoRR, abs/1303.5778", "author": ["Graves et al.2013b] Alex Graves", "Abdel-rahman Mohamed", "Geoffrey E. Hinton"], "venue": null, "citeRegEx": "Graves et al\\.,? \\Q2013\\E", "shortCiteRegEx": "Graves et al\\.", "year": 2013}, {"title": "Generating sequences with recurrent neural networks. CoRR, abs/1308.0850", "author": ["Alex Graves"], "venue": null, "citeRegEx": "Graves.,? \\Q2013\\E", "shortCiteRegEx": "Graves.", "year": 2013}, {"title": "Robust dialog state tracking using delexicalised recurrent neural networks and unsupervised adaptation", "author": ["Blaise Thomson", "Steve Young"], "venue": "In Proceedings of IEEE Spoken Language Technology", "citeRegEx": "Henderson et al\\.,? \\Q2014\\E", "shortCiteRegEx": "Henderson et al\\.", "year": 2014}, {"title": "Deep neural networks for acoustic modeling", "author": ["Li Deng", "Dong Yu", "George Dahl", "Abdel-rahman Mohamed", "Navdeep Jaitly", "Andrew Senior", "Vincent Vanhoucke", "Patrick Nguyen", "Tara Sainath", "Brian Kingsbury"], "venue": null, "citeRegEx": "Hinton et al\\.,? \\Q2012\\E", "shortCiteRegEx": "Hinton et al\\.", "year": 2012}, {"title": "Long short-term memory", "author": ["Hochreiter", "Schmidhuber1997] Sepp Hochreiter", "J\u00fcrgen Schmidhuber"], "venue": "Neural Computation", "citeRegEx": "Hochreiter et al\\.,? \\Q1997\\E", "shortCiteRegEx": "Hochreiter et al\\.", "year": 1997}, {"title": "Deep visual-semantic alignments for generating image descriptions. CoRR", "author": ["Karpathy", "Fei-Fei2014] Andrej Karpathy", "Li Fei-Fei"], "venue": null, "citeRegEx": "Karpathy et al\\.,? \\Q2014\\E", "shortCiteRegEx": "Karpathy et al\\.", "year": 2014}, {"title": "A statistical nlg framework for aggregated planning and realization", "author": ["Blake Howald", "Frank Schilder"], "venue": "In Proceedings of the 51st Annual Meeting of the ACL. Association", "citeRegEx": "Kondadadi et al\\.,? \\Q2013\\E", "shortCiteRegEx": "Kondadadi et al\\.", "year": 2013}, {"title": "Where do phrases come from: Some preliminary experiments in connectionist phrase generation. In Natural Language Generation", "author": ["Karen Kukich"], "venue": null, "citeRegEx": "Kukich.,? \\Q1987\\E", "shortCiteRegEx": "Kukich.", "year": 1987}, {"title": "Generation that exploits corpus-based statistical knowledge", "author": ["Langkilde", "Knight1998] Irene Langkilde", "Kevin Knight"], "venue": "In Proceedings of the 36th Annual Meeting of the ACL,", "citeRegEx": "Langkilde et al\\.,? \\Q1998\\E", "shortCiteRegEx": "Langkilde et al\\.", "year": 1998}, {"title": "Controlling user perceptions of linguistic style: Trainable generation of personality traits", "author": ["Mairesse", "Walker2011] Fran\u00e7ois Mairesse", "Marilyn A. Walker"], "venue": "Computer Linguistics", "citeRegEx": "Mairesse et al\\.,? \\Q2011\\E", "shortCiteRegEx": "Mairesse et al\\.", "year": 2011}, {"title": "Stochastic language generation in dialogue using factored language models", "author": ["Mairesse", "Young2014] Fran\u00e7ois Mairesse", "Steve Young"], "venue": "Computer Linguistics", "citeRegEx": "Mairesse et al\\.,? \\Q2014\\E", "shortCiteRegEx": "Mairesse et al\\.", "year": 2014}, {"title": "Phrase-based statistical language generation using graphical models and active learning", "author": ["Milica Ga\u0161i\u0107", "Filip Jur\u010d\u0131\u0301\u010dek", "Simon Keizer", "Blaise Thomson", "Kai Yu", "Steve Young"], "venue": "In Proceedings of the 48th ACL,", "citeRegEx": "Mairesse et al\\.,? \\Q2010\\E", "shortCiteRegEx": "Mairesse et al\\.", "year": 2010}, {"title": "Rhetorical structure theory: Toward a functional theory of text", "author": ["Mann", "Thompson1988] William C. Mann", "Sandra A. Thompson"], "venue": null, "citeRegEx": "Mann et al\\.,? \\Q1988\\E", "shortCiteRegEx": "Mann et al\\.", "year": 1988}, {"title": "Context dependent recurrent neural network language model", "author": ["Mikolov", "Zweig2012] Tom\u00e1\u0161 Mikolov", "Geoffrey Zweig"], "venue": "Proceedings on IEEE SLT workshop", "citeRegEx": "Mikolov et al\\.,? \\Q2012\\E", "shortCiteRegEx": "Mikolov et al\\.", "year": 2012}, {"title": "Recurrent neural network based language model", "author": ["Martin Karafit", "Luk\u00e1\u0161 Burget", "Jan \u010cernock\u00fd", "Sanjeev Khudanpur"], "venue": "Proceedings on InterSpeech", "citeRegEx": "Mikolov et al\\.,? \\Q2010\\E", "shortCiteRegEx": "Mikolov et al\\.", "year": 2010}, {"title": "Extensions of recurrent neural network language model", "author": ["Stefan Kombrink", "Luk\u00e1\u0161 Burget", "Jan H. \u010cernock\u00fd", "Sanjeev Khudanpur"], "venue": "In ICASSP,", "citeRegEx": "Mikolov et al\\.,? \\Q2011\\E", "shortCiteRegEx": "Mikolov et al\\.", "year": 2011}, {"title": "Rnnlm - recurrent neural network language modeling toolkit", "author": ["Stefan Kombrink", "Anoop Deoras", "Luk\u00e1\u0161 Burget", "Jan \u010cernock\u00fd"], "venue": "Proceedings on ASRU", "citeRegEx": "Mikolov et al\\.,? \\Q2011\\E", "shortCiteRegEx": "Mikolov et al\\.", "year": 2011}, {"title": "Dialogue management using scripts", "author": ["Mirkovic", "Cavedon2011] Danilo Mirkovic", "Lawrence Cavedon"], "venue": "EP Patent 1,891,625", "citeRegEx": "Mirkovic et al\\.,? \\Q2011\\E", "shortCiteRegEx": "Mirkovic et al\\.", "year": 2011}, {"title": "Stochastic language generation for spoken dialogue systems", "author": ["Oh", "Rudnicky2000] Alice H. Oh", "Alexander I. Rudnicky"], "venue": "In Proceedings of the 2000 ANLP/NAACL Workshop on Conversational Systems - Volume", "citeRegEx": "Oh et al\\.,? \\Q2000\\E", "shortCiteRegEx": "Oh et al\\.", "year": 2000}, {"title": "Bleu: a method for automatic evaluation of machine translation", "author": ["Salim Roukos", "Todd Ward", "Wei-Jing Zhu"], "venue": "In Proceedings of the 40th annual meeting on ACL. Association for Computational Linguistics", "citeRegEx": "Papineni et al\\.,? \\Q2002\\E", "shortCiteRegEx": "Papineni et al\\.", "year": 2002}, {"title": "Glove: Global vectors for word representation", "author": ["Richard Socher", "Christopher Manning"], "venue": "In Proceedings of the 2014 Conference on EMNLP. Association for Computational Linguistics", "citeRegEx": "Pennington et al\\.,? \\Q2014\\E", "shortCiteRegEx": "Pennington et al\\.", "year": 2014}, {"title": "Trainable approaches to surface natural language generation and their application to conversational dialog systems", "author": ["Adwait Ratnaparkhi"], "venue": "Computer Speech and Language", "citeRegEx": "Ratnaparkhi.,? \\Q2002\\E", "shortCiteRegEx": "Ratnaparkhi.", "year": 2002}, {"title": "Natural language generation as planning under uncertainty for spoken dialogue systems", "author": ["Rieser", "Lemon2010] Verena Rieser", "Oliver Lemon"], "venue": "In Empirical Methods in Natural Language Generation", "citeRegEx": "Rieser et al\\.,? \\Q2010\\E", "shortCiteRegEx": "Rieser et al\\.", "year": 2010}, {"title": "Dropout: A simple way to prevent neural networks from overfitting", "author": ["Geoffrey Hinton", "Alex Krizhevsky", "Ilya Sutskever", "Ruslan Salakhutdinov"], "venue": "Journal of Machine Learning Research", "citeRegEx": "Srivastava et al\\.,? \\Q2014\\E", "shortCiteRegEx": "Srivastava et al\\.", "year": 2014}, {"title": "Evaluating automatic extraction of rules for sentence plan construction", "author": ["Stent", "Molina2009] Amanda Stent", "Martin Molina"], "venue": "In Proceedings of SIGdial", "citeRegEx": "Stent et al\\.,? \\Q2009\\E", "shortCiteRegEx": "Stent et al\\.", "year": 2009}, {"title": "Trainable sentence planning for complex information presentation in spoken dialog systems", "author": ["Stent et al.2004] Amanda Stent", "Rashmi Prasad", "Marilyn Walker"], "venue": "Proceedings of the Annual Meeting of the ACL", "citeRegEx": "Stent et al\\.,? \\Q2004\\E", "shortCiteRegEx": "Stent et al\\.", "year": 2004}, {"title": "Evaluating evaluation methods for generation in the presence of variation", "author": ["Stent et al.2005] Amanda Stent", "Matthew Marge", "Mohit Singhai"], "venue": "In in Proceedings of CICLing", "citeRegEx": "Stent et al\\.,? \\Q2005\\E", "shortCiteRegEx": "Stent et al\\.", "year": 2005}, {"title": "Translation modeling with bidirectional recurrent neural networks", "author": ["Tamer Alkhouli", "Joern Wuebker", "Hermann Ney"], "venue": "In Proceedings of the 2014 Conference on EMNLP. Association", "citeRegEx": "Sundermeyer et al\\.,? \\Q2014\\E", "shortCiteRegEx": "Sundermeyer et al\\.", "year": 2014}, {"title": "Generating text with recurrent neural networks", "author": ["James Martens", "Geoffrey E. Hinton"], "venue": "In Proceedings of the 28th International Conference on Machine Learning (ICML-11)", "citeRegEx": "Sutskever et al\\.,? \\Q2011\\E", "shortCiteRegEx": "Sutskever et al\\.", "year": 2011}, {"title": "Sequence to sequence learning with neural networks. CoRR", "author": ["Oriol Vinyals", "Quoc V. Le"], "venue": null, "citeRegEx": "Sutskever et al\\.,? \\Q2014\\E", "shortCiteRegEx": "Sutskever et al\\.", "year": 2014}, {"title": "Training a sentence planner for spoken dialogue using boosting", "author": ["Owen C Rambow", "Monica Rogati"], "venue": "Computer Speech and Language", "citeRegEx": "Walker et al\\.,? \\Q2002\\E", "shortCiteRegEx": "Walker et al\\.", "year": 2002}, {"title": "Individual and domain adaptation in sentence planning for dialogue", "author": ["Amanda Stent", "Franois Mairesse", "Rashmi Prasad"], "venue": "Journal of Artificial Intelligence Research (JAIR", "citeRegEx": "Walker et al\\.,? \\Q2007\\E", "shortCiteRegEx": "Walker et al\\.", "year": 2007}, {"title": "Stochastic language generation in dialogue using recurrent neural networks with convolutional sentence rerank", "author": ["Wen et al.2015] Tsung-Hsien Wen", "Milica Ga\u0161i\u0107", "Dongho Kim", "Nikola Mrk\u0161i\u0107", "Pei-Hao Su", "David Vandyke", "Steve Young"], "venue": null, "citeRegEx": "Wen et al\\.,? \\Q2015\\E", "shortCiteRegEx": "Wen et al\\.", "year": 2015}, {"title": "Backpropagation through time: what it does and how to do it", "author": ["Paul J Werbos"], "venue": "Proceedings of the IEEE", "citeRegEx": "Werbos.,? \\Q1990\\E", "shortCiteRegEx": "Werbos.", "year": 1990}, {"title": "Spoken language understanding using long shortterm memory neural networks", "author": ["Yao et al.2014] Kaisheng Yao", "Baolin Peng", "Yu Zhang", "Dong Yu", "Geoffrey Zweig", "Yangyang Shi"], "venue": "Proceedings on IEEE SLT workshop. IEEE Institute of Electrical", "citeRegEx": "Yao et al\\.,? \\Q2014\\E", "shortCiteRegEx": "Yao et al\\.", "year": 2014}, {"title": "Pomdpbased statistical spoken dialog systems: A review", "author": ["Young et al.2013] Steve Young", "Milica Ga\u0161i\u0107", "Blaise Thomson", "Jason D. Williams"], "venue": "Proceedings of the IEEE", "citeRegEx": "Young et al\\.,? \\Q2013\\E", "shortCiteRegEx": "Young et al\\.", "year": 2013}, {"title": "Recurrent neural network regularization. CoRR, abs/1409.2329", "author": ["Ilya Sutskever", "Oriol Vinyals"], "venue": null, "citeRegEx": "Zaremba et al\\.,? \\Q2014\\E", "shortCiteRegEx": "Zaremba et al\\.", "year": 2014}, {"title": "Chinese poetry generation with recurrent neural networks", "author": ["Zhang", "Lapata2014] Xingxing Zhang", "Mirella Lapata"], "venue": "In Proceedings of the 2014 Conference on EMNLP. Association", "citeRegEx": "Zhang et al\\.,? \\Q2014\\E", "shortCiteRegEx": "Zhang et al\\.", "year": 2014}], "referenceMentions": [{"referenceID": 32, "context": "As noted in Stent et al. (2005), a good generator usually depends on several factors: adequacy, fluency, readability, and variation.", "startOffset": 12, "endOffset": 32}, {"referenceID": 35, "context": "The trainable generator approach exemplified by the HALOGEN (Langkilde and Knight, 1998) and SPaRKy system (Stent et al., 2004) provides", "startOffset": 107, "endOffset": 127}, {"referenceID": 41, "context": "These systems include specific trainable modules within the generation framework to allow the model to adapt to different domains (Walker et al., 2007), or reproduce certain style (Mairesse and Walker, 2011).", "startOffset": 130, "endOffset": 151}, {"referenceID": 42, "context": "More recently, corpus-based methods (Oh and Rudnicky, 2000; Mairesse and Young, 2014; Wen et al., 2015) have received attention as access to data becomes increasingly available.", "startOffset": 36, "endOffset": 103}, {"referenceID": 42, "context": "As suggested in Wen et al. (2015), a backward reranker is introduced in Section 3.", "startOffset": 16, "endOffset": 34}, {"referenceID": 40, "context": "a tree-like or template structure, then surface realisation converts the intermediate structure into the final text (Walker et al., 2002; Stent et al., 2004).", "startOffset": 116, "endOffset": 157}, {"referenceID": 35, "context": "a tree-like or template structure, then surface realisation converts the intermediate structure into the final text (Walker et al., 2002; Stent et al., 2004).", "startOffset": 116, "endOffset": 157}, {"referenceID": 2, "context": "Although statistical sentence planning has been explored previously, for example, generating the most likely context-free derivations given a corpus (Belz, 2008) or maximising the expected reward using reinforcement learning (Rieser and Lemon, 2010), these methods still rely on a pre-existing, handcrafted gener-", "startOffset": 149, "endOffset": 161}, {"referenceID": 21, "context": "Although active learning (Mairesse et al., 2010) was also proposed to allow learning online directly", "startOffset": 25, "endOffset": 48}, {"referenceID": 28, "context": "Ratnaparkhi (2002) later addressed some of the limitations of class-based LMs in the over-generation phase by using a modified generator based on a syntactic dependency tree.", "startOffset": 0, "endOffset": 19}, {"referenceID": 28, "context": "Ratnaparkhi (2002) later addressed some of the limitations of class-based LMs in the over-generation phase by using a modified generator based on a syntactic dependency tree. Mairesse and Young (2014) proposed a phrase-based NLG system based on factored LMs that can learn from a semantically aligned corpus.", "startOffset": 0, "endOffset": 201}, {"referenceID": 0, "context": ", Angeli et al. (2010) train a set of log-linear models to make", "startOffset": 2, "endOffset": 23}, {"referenceID": 16, "context": "Kondadadi et al. (2013) later show that the outputs can be further improved by an SVM reranker making them comparable to human-authored texts.", "startOffset": 0, "endOffset": 24}, {"referenceID": 24, "context": "Recent advances in recurrent neural network-based language models (RNNLM) (Mikolov et al., 2010; Mikolov et al., 2011a) have demonstrated the value of distributed representations and the ability to model arbitrarily long dependencies.", "startOffset": 74, "endOffset": 119}, {"referenceID": 17, "context": "stock reporter system ANA by Kukich (1987) is perhaps the first NN-based generator, although generation was only done at the phrase level.", "startOffset": 29, "endOffset": 43}, {"referenceID": 17, "context": "stock reporter system ANA by Kukich (1987) is perhaps the first NN-based generator, although generation was only done at the phrase level. Recent advances in recurrent neural network-based language models (RNNLM) (Mikolov et al., 2010; Mikolov et al., 2011a) have demonstrated the value of distributed representations and the ability to model arbitrarily long dependencies. Sutskever et al. (2011) describes a simple variant of the RNN that can generate meaningful sentences by learning from a character-level corpus.", "startOffset": 29, "endOffset": 398}, {"referenceID": 42, "context": "A forerunner of the system presented here is described in Wen et al. (2015), in which a forward RNN generator, a CNN reranker, and a backward RNN reranker are trained jointly", "startOffset": 58, "endOffset": 76}, {"referenceID": 3, "context": "Training an RNN with long range dependencies is difficult because of the vanishing gradient problem (Bengio et al., 1994).", "startOffset": 100, "endOffset": 121}, {"referenceID": 3, "context": "Training an RNN with long range dependencies is difficult because of the vanishing gradient problem (Bengio et al., 1994). Hochreiter and Schmidhuber (1997) mitigated this problem by replacing the sigmoid activation in the RNN recurrent con-", "startOffset": 101, "endOffset": 157}, {"referenceID": 8, "context": ", 2013b), handwriting recognition (Graves et al., 2009), spoken language understanding (Yao et al.", "startOffset": 34, "endOffset": 55}, {"referenceID": 44, "context": ", 2009), spoken language understanding (Yao et al., 2014), and machine translation (Sutskever et al.", "startOffset": 39, "endOffset": 57}, {"referenceID": 39, "context": ", 2014), and machine translation (Sutskever et al., 2014).", "startOffset": 33, "endOffset": 57}, {"referenceID": 8, "context": "by Graves et al. (2014) has demonstrated that an NN structure augmented with a carefully designed memory block and differentiable read/write operations can learn to mimic computer programs.", "startOffset": 3, "endOffset": 24}, {"referenceID": 13, "context": "vides a more sophisticated way of exploiting relations between labels and features, therefore making the prediction more accurate (Hinton et al., 2012).", "startOffset": 130, "endOffset": 151}, {"referenceID": 11, "context": "By extending an LSTM network to be both deep in space and time, Graves (2013) shows the resulting network can used to synthesise handwriting indistinguishable from that of a human.", "startOffset": 64, "endOffset": 78}, {"referenceID": 24, "context": "The generation model proposed in this paper is based on a recurrent NN architecture (Mikolov et al., 2010) in which a 1-hot encoding wt of a token1 wt is input at each time step t conditioned on a recurrent hidden layer ht and outputs the probability distribution of the next token wt+1.", "startOffset": 84, "endOffset": 106}, {"referenceID": 11, "context": "Of the various different connectivity designs for an LSTM cell (Graves, 2013; Zaremba et al., 2014), the architecture used in this paper is given by the following equations,", "startOffset": 63, "endOffset": 99}, {"referenceID": 46, "context": "Of the various different connectivity designs for an LSTM cell (Graves, 2013; Zaremba et al., 2014), the architecture used in this paper is given by the following equations,", "startOffset": 63, "endOffset": 99}, {"referenceID": 3, "context": "Although a related work (Karpathy and Fei-Fei, 2014) has suggested that reapplying this auxiliary information to the RNN at every time step can increase performance by mitigating the vanishing gradient problem (Mikolov and Zweig, 2012; Bengio et al., 1994), we have found that such a model also omits and duplicates slot information in the surface realisation.", "startOffset": 210, "endOffset": 256}, {"referenceID": 3, "context": "Although a related work (Karpathy and Fei-Fei, 2014) has suggested that reapplying this auxiliary information to the RNN at every time step can increase performance by mitigating the vanishing gradient problem (Mikolov and Zweig, 2012; Bengio et al., 1994), we have found that such a model also omits and duplicates slot information in the surface realisation. In Wen et al. (2015) simple heuristics are used to turn off slot feature values in the control vector d once the corresponding slot token", "startOffset": 236, "endOffset": 382}, {"referenceID": 11, "context": "(Graves, 2013).", "startOffset": 0, "endOffset": 14}, {"referenceID": 3, "context": "This reduces the number of processing steps between the bottom of the network and the top, and therefore mitigates the vanishing gradient problem (Bengio et al., 1994) in the vertical direction.", "startOffset": 146, "endOffset": 167}, {"referenceID": 33, "context": "the dropout technique (Srivastava et al., 2014) is used to regularise the network.", "startOffset": 22, "endOffset": 47}, {"referenceID": 46, "context": "As suggested in (Zaremba et al., 2014), dropout was only applied to the non-recurrent connections, as shown in the Figure 2.", "startOffset": 16, "endOffset": 38}, {"referenceID": 37, "context": "Previously, bidirectional networks (Schuster and Paliwal, 1997) have been shown to be effective for sequential problems (Graves et al., 2013a; Sundermeyer et al., 2014).", "startOffset": 120, "endOffset": 168}, {"referenceID": 23, "context": "An l2 regularisation term was added to the objective function for every 10 training examples as suggested in Mikolov et al. (2011b). However, further regularisation was required for the reading gate dynamics.", "startOffset": 109, "endOffset": 132}, {"referenceID": 30, "context": "The forward and backward networks were structured to share the same set of word embeddings, initialised with pre-trained word vectors (Pennington et al., 2014).", "startOffset": 134, "endOffset": 159}, {"referenceID": 43, "context": "works were trained with back propagation through time (Werbos, 1990).", "startOffset": 54, "endOffset": 68}, {"referenceID": 7, "context": "ing corpus for each domain, dialogues collected from a previous user trial (Ga\u0161i\u0107 et al., 2015) of a statistical dialogue manager were randomly sampled and shown to workers recruited via the Amazon Mechanical Turk (AMT) service.", "startOffset": 75, "endOffset": 95}, {"referenceID": 4, "context": "library (Bergstra et al., 2010; Bastien et al., 2012), and trained by partitioning each of the collected corpus into a training, validation, and testing set in the ratio 3:1:1.", "startOffset": 8, "endOffset": 53}, {"referenceID": 1, "context": "library (Bergstra et al., 2010; Bastien et al., 2012), and trained by partitioning each of the collected corpus into a training, validation, and testing set in the ratio 3:1:1.", "startOffset": 8, "endOffset": 53}, {"referenceID": 29, "context": "The BLEU-4 metric was used for the objective evaluation (Papineni et al., 2002).", "startOffset": 56, "endOffset": 79}, {"referenceID": 42, "context": "We compared the single layer semantically controlled LSTM (sc-lstm) and a deep version with two hidden layers (+deep) against several baselines: the handcrafted generator (hdc), k-nearest neighbour (kNN), class-based LMs (classlm) as proposed in Oh and Rudnicky (2000), the heuristic gated RNN as described in Wen et al. (2015) and a similar LSTM variant (rnn w/ & lstm w/), and the same RNN/LSTM but without gates (rnn w/o & lstm w/o).", "startOffset": 310, "endOffset": 328}, {"referenceID": 6, "context": "standard generator used for trialling end-to-end dialogue systems (for example (Ga\u0161i\u0107 et al., 2014)).", "startOffset": 79, "endOffset": 99}, {"referenceID": 36, "context": "agree with human perception (Stent et al., 2005), human testing is needed to assess subjective quality.", "startOffset": 28, "endOffset": 48}], "year": 2017, "abstractText": "Natural language generation (NLG) is a critical component of spoken dialogue and it has a significant impact both on usability and perceived quality. Most NLG systems in common use employ rules and heuristics and tend to generate rigid and stylised responses without the natural variation of human language. They are also not easily scaled to systems covering multiple domains and languages. This paper presents a statistical language generator based on a semantically controlled Long Short-term Memory (LSTM) structure. The LSTM generator can learn from unaligned data by jointly optimising sentence planning and surface realisation using a simple cross entropy training criterion, and language variation can be easily achieved by sampling from output candidates. With fewer heuristics, an objective evaluation in two differing test domains showed the proposed method improved performance compared to previous methods. Human judges scored the LSTM system higher on informativeness and naturalness and overall preferred it to the other systems.", "creator": "LaTeX with hyperref package"}}}