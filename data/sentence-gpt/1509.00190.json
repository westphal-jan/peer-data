{"id": "1509.00190", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "1-Sep-2015", "title": "GR2RSS: Publishing Linked Open Commerce Data as RSS and Atom Feeds", "abstract": "The integration of Linked Open Data (LOD) content in Web pages is a challenging and sometimes tedious task for Web developers. At the same moment, most software packages for blogs, content management systems (CMS), and shop applications support the consumption of feed formats, namely RSS and Atom. In this technical report, we demonstrate an on-line tool that fetches e-commerce data from a SPARQL endpoint and syndicates obtained results as RSS or Atom feeds in the form of XML files.\n\n\n\n\n\n\n\n\n\nThe XML content data from a Web page is downloaded from the site.\nThe XML data from a Web page can be accessed in a single window on the page. The XML content is transferred between the Web page and a web page on a Web page.\nThe XML content is extracted from the Web page by a Web page. The content is also extracted from the web page.\nThe XML content is extracted from the Web page by a Web page. The content is extracted from the Web page.\nThe XML content is extracted from the Web page. The content is extracted from the Web page.\nWhen accessing a Web page, the content is extracted from the Web page. The content is extracted from the Web page.\nA Web page can be accessed in a single window on the page. The content is extracted from the Web page.\nThe content is extracted from the Web page.\nThe content is extracted from the Web page. The content is extracted from the Web page.\nThe content is extracted from the Web page.\nThe content is extracted from the Web page.\nThe content is extracted from the Web page.\nWhen accessing a Web page, the content is extracted from the Web page.\nWhen accessing a Web page, the content is extracted from the Web page.\nThe content is extracted from the Web page.\nThe content is extracted from the Web page.\nThe content is extracted from the Web page.\nThe content is extracted from the Web page.\nThe content is extracted from the Web page.\nThe content is extracted from the Web page.\nThe content is extracted from the Web page.\nThe content is extracted from the Web page.\nThe content is extracted from the Web page.\nThe content is extracted from the Web page.\nThe content is extracted from the Web page.\nThe content is extracted from the Web page.\nThe content is extracted from the Web page.\nThe content is extracted from the Web page.\nThe", "histories": [["v1", "Tue, 1 Sep 2015 09:25:07 GMT  (282kb,D)", "http://arxiv.org/abs/1509.00190v1", "Technical report, 5 pages, 2 figures"]], "COMMENTS": "Technical report, 5 pages, 2 figures", "reviews": [], "SUBJECTS": "cs.IR cs.AI", "authors": ["alex stolz", "martin hepp"], "accepted": false, "id": "1509.00190"}, "pdf": {"name": "1509.00190.pdf", "metadata": {"source": "CRF", "title": null, "authors": ["Alex Stolz", "Martin Hepp"], "emails": ["alex.stolz@unibw.de", "martin.hepp@unibw.de"], "sections": [{"heading": "1 Introduction", "text": "Despite the growing amount of structured data on the Web, the useful integration into Web pages still lags behind opportunities. In the field of e-commerce, major retail sites like sears.com, bestbuy.com, wayfair.com, rakuten.de and numerous smaller shops have added RDFa and Microdata markup to their page templates, exposing more than 30 million offers that are updated on a daily basis. A couple of SPARQL endpoints already collate this structured e-commerce data. However, fetching useful information typically involves contacting the right endpoints, crafting proper SPARQL queries, and eventually converting results into data formats understood by target applications. Average Web developers and site owners quickly get overwhelmed by the technical challenges imposed by these tasks. At the same time, there exist popular data formats for publishing dynamic content on the Web, namely RSS [4] and the Atom Syndication Format [3,5]. Both feed formats have excellent tool support; i.e., most software packages for blogs, content management systems (CMS), and shopping carts provide integration capabilities for external sources using RSS or Atom.\nIn this technical report, we show an approach that combines the broad tooling support of established data feed standards with the precision of queries\nar X\niv :1\n50 9.\n00 19\n0v 1\n[ cs\n.I R\n] 1\nS ep\nagainst structured data collected from multiple Web sites and RDF data sources, built upon common Web vocabularies such as schema.org1, GoodRelations [1], FOAF2, VCard3, and WGS 844."}, {"heading": "2 GR2RSS Tool", "text": "The on-line tool5 that we have developed fetches GoodRelations e-commerce data from a SPARQL endpoint and syndicates obtained results as RSS or Atom feeds. Fig. 1 outlines the general system architecture of our tool. The generated data feeds serve as carriers to facilitate the consumption and integration of linked open commerce data in Web pages. This way site owners have a means to add relevant, dynamic content to their Web pages, thereby attracting visitors and improving search engine rankings. Conversely, product vendors gain additional visibility of their products for free, since items republished by virtue of site owners and bloggers link back to shops where the products are actually offered.\nIn the following, we summarize the core technical contributions of our on-line service:\n1. Query builder: The tool supports three different levels of expertise. Depending on the selected search mode, a more or less sophisticated query builder is presented to the user. The following three search modes are available: \u2013 Basic: Single input field for keyword searches. \u2013 Extended: Query builder with support for filtering and sorting results,\nprice currency conversion for products, and location-aware store searches.\n1 http://schema.org/ 2 http://xmlns.com/foaf/spec/ 3 http://www.w3.org/TR/vcard-rdf/ 4 http://www.w3.org/2003/01/geo/ 5 http://www.ebusiness-unibw.org/tools/gr2rss/\n\u2013 Expert: Input field for entering raw SPARQL queries and a set of possible variables which bindings can be processed by the feed templates.\n2. Prefetching and caching: In order to limit load at the SPARQL endpoints, we implemented server-side caching of the generated feeds. Our caching mechanism stores records of successfully executed queries in a local database management system for serving future requests and creates corresponding cache files. After a given cache period (e.g. a day), future requests trigger cache invalidations whereby the cached files are replaced by freshly generated feed content. 3. Geo information: RSS and Atom feed formats provide extension mechanisms to support custom vocabularies. We used the GeoRSS6 vocabulary to include positional data in data feeds. These annotations allow, for instance, to extract and display location data on a map, e.g. on Google Maps. 4. Viral use of RDFa: Based on the idea of embedding RSS and Atom feeds in blog systems and CMS, we decided to piggyback RDFa statements as entity-encoded HTML in feed entries [7]. Thereby we can obtain a viral publication effect, because RDFa preserves the URIs of the original entities and thus prevents the proliferation of identifiers. In other words, any Web page integration of feed content contributes to the promotion of the product offers at the origin. Moreover, we employ foaf:page links to provide a means for tracking the document URI at which the particular content reappears. 5. Currency conversion: The currency conversion at the endpoint is realized using a materialization of exchange rates based on the Exchange Rate Ontology7 (XRO). These currency exchange rates need to be available before any currency conversion task in SPARQL can take place. A service based on XRO that provides regularly updated exchange rates in RDF is available at http://www.currency2currency.org/ [6].\nOur on-line tool was written in PHP and uses Javascript for user interaction. It runs over Linked Open Commerce data stores, and is compatible with Virtuoso SPARQL endpoints that support the bif:contains feature, a built-in function that executes over a full-text search index. For the future, we are planning to rewrite parts of the code in order to make the tool SPARQL-1.1-compliant."}, {"heading": "3 Demonstration", "text": "In the following, we demonstrate an example of integrating a generated feed into a Web page. Suppose that we are looking for products within a price range of 100 and 500 dollars that contain the keyword \u201ccamcorder\u201d and include product pictures. The populated form fields of the query builder are depicted in Fig. 2. The figure also shows a single camcorder item after integrating the feed into a Web page. Similar examples can be found in the tool documentation8 and\n6 http://georss.org/ 7 http://purl.org/xro/\nexample page9."}, {"heading": "4 Related Work", "text": "We compared our work with existing approaches, namely (1) single feed definition dialogs, as offered by major sites (e.g. eBay and Amazon), and (2) feed aggregation services, i.e. Yahoo Pipes10 and DERI Pipes [2]. The former approaches typically fail at integrating different data sources (e.g. list five cheapest offers among Amazon and eBay feeds), whereas aggregation services are limited to filter results by brittle regex-based expressions (e.g. show only shops in New York) and lack simple unit conversion (e.g. display all prices in euros) (cf. [7])."}, {"heading": "5 Conclusions", "text": "The presented on-line service aims to address the issue of Linked Open Data (LOD) content integration in Web pages. For this purpose, it generates RSS and Atom feeds from structured e-commerce data fetched from a SPARQL endpoint, thereby exploiting the excellent tool support for content syndication formats. The service allows for different levels of query building assistance, implements caching, incorporates geo-location data and RDFa annotations, and employs currency conversion at the endpoint. We consider our approach to be of similar use for other fields of Linked Open Data outside the narrow scope of e-commerce."}], "references": [{"title": "GoodRelations: An Ontology for Describing Products and Services Offers on the Web", "author": ["M. Hepp"], "venue": "Proceedings of the 16th International Conference on Knowledge Engineering (EKAW 2008). pp. 329\u2013346. Acritezza, Italy", "citeRegEx": "1", "shortCiteRegEx": null, "year": 2008}, {"title": "Rapid Prototyping of Semantic Mash-ups through Semantic Web Pipes", "author": ["D. Le-Phuoc", "A. Polleres", "M. Hauswirth", "G. Tummarello", "C. Morbidoni"], "venue": "Proceedings of the 18th International World Wide Web Conference (WWW 2009). pp. 581\u2013590. Madrid, Spain", "citeRegEx": "2", "shortCiteRegEx": null, "year": 2009}, {"title": "The Atom Syndication Format (2005), http://tools", "author": ["M. Nottingham", "R. Sayre"], "venue": null, "citeRegEx": "3", "shortCiteRegEx": "3", "year": 2005}, {"title": "Atom: The Standard in Syndication", "author": ["R. Sayre"], "venue": "IEEE Internet Computing 9(4), 71\u201378", "citeRegEx": "5", "shortCiteRegEx": null, "year": 2005}, {"title": "Currency Conversion the Linked Data Way", "author": ["A. Stolz", "M. Hepp"], "venue": "Proceedings of the First Workshop on Services and Applications over Linked APIs and Data (SALAD2013). pp. 44\u201355. CEUR Workshop Proceedings, Montpellier, France", "citeRegEx": "6", "shortCiteRegEx": null, "year": 2013}, {"title": "From RDF to RSS and Atom: Content Syndication with Linked Data", "author": ["A. Stolz", "M. Hepp"], "venue": "Proceedings of the 24th ACM Conference on Hypertext and Social Media (Hypertext 2013). pp. 236\u2013241. ACM, Paris, France", "citeRegEx": "7", "shortCiteRegEx": null, "year": 2013}], "referenceMentions": [{"referenceID": 2, "context": "At the same time, there exist popular data formats for publishing dynamic content on the Web, namely RSS [4] and the Atom Syndication Format [3,5].", "startOffset": 141, "endOffset": 146}, {"referenceID": 3, "context": "At the same time, there exist popular data formats for publishing dynamic content on the Web, namely RSS [4] and the Atom Syndication Format [3,5].", "startOffset": 141, "endOffset": 146}, {"referenceID": 0, "context": "org, GoodRelations [1], FOAF, VCard, and WGS 84.", "startOffset": 19, "endOffset": 22}, {"referenceID": 5, "context": "Viral use of RDFa: Based on the idea of embedding RSS and Atom feeds in blog systems and CMS, we decided to piggyback RDFa statements as entity-encoded HTML in feed entries [7].", "startOffset": 173, "endOffset": 176}, {"referenceID": 4, "context": "org/ [6].", "startOffset": 5, "endOffset": 8}, {"referenceID": 1, "context": "Yahoo Pipes and DERI Pipes [2].", "startOffset": 27, "endOffset": 30}, {"referenceID": 5, "context": "[7]).", "startOffset": 0, "endOffset": 3}], "year": 2015, "abstractText": "The integration of Linked Open Data (LOD) content in Web pages is a challenging and sometimes tedious task for Web developers. At the same moment, most software packages for blogs, content management systems (CMS), and shop applications support the consumption of feed formats, namely RSS and Atom. In this technical report, we demonstrate an on-line tool that fetches e-commerce data from a SPARQL endpoint and syndicates obtained results as RSS or Atom feeds. Our approach combines (1) the popularity and broad tooling support of existing feed formats, (2) the precision of queries against structured data built upon common Web vocabularies like schema.org, GoodRelations, FOAF, VCard, and WGS 84, and (3) the ease of integrating content from a large number of Web sites and other data sources in RDF in general.", "creator": "LaTeX with hyperref package"}}}