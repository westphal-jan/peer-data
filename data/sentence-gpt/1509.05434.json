{"id": "1509.05434", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "17-Sep-2015", "title": "A Study Investigating Typical Concepts and Guidelines for Ontology Building", "abstract": "In semantic technologies, the shared common understanding of the structure of information among artifacts (people or software agents) can be realized by building an ontology. To do this, it is imperative for an ontology builder to answer several questions: a) what are the main components of an ontology? b) How an ontology look likes and how it works? c) Verify if it is required to consider reusing existing ontologies or not? c) What is the complexity of the ontology to be developed? d) What are the principles of ontology design and development? e) How to evaluate an ontology? This paper answers all the key questions above. The aim of this paper is to present a set of guiding principles to help ontology developers and also inexperienced users to answer such questions. The current research covers several fields including functional modeling, computational and data analysis, data analysis and analysis. The aim of the paper is to be able to identify a core of the framework that is the central components of an ontology.\n\n\n\n\nReferences\n\n\nBibliography\nKieber (2007).\nKieler (2011). \"What is ontology?\" The Journal of Information Theory. ISBN 978-1-726-8259-5.\nKiefer (2010). \"The definition of human knowledge,\" in Proceedings of the American Academy of Sciences, DOI: 10.1073/pnas.130613816\nBengel (2003). \"A model in understanding the human knowledge,\" in Proceedings of the American Academy of Sciences, DOI: 10.1073/pnas.130613816\nBengel (2011). \"The basic foundation of human knowledge,\" in Proceedings of the American Academy of Sciences, DOI: 10.1073/pnas.130613816\nChen (2011). \"Deterministic theory,\" in Proceedings of the American Academy of Sciences, DOI: 10.1073/pnas.130613816\nBengel (2010). \"The core of human knowledge,\" in Proceedings of the American Academy of Sciences, DOI: 10.1073/pnas.130613816\nDavitsky (2011). \"Basic human knowledge,\" in Proceedings of the American Academy of Sciences, DOI: 10.1073/pnas.130613816\nKiefer (2011). \"How do we measure the properties of information among artifacts?\" The Journal of Information Theory. ISBN 978-1-726-", "histories": [["v1", "Thu, 17 Sep 2015 20:27:31 GMT  (283kb)", "http://arxiv.org/abs/1509.05434v1", "8 pages, 2 figures"]], "COMMENTS": "8 pages, 2 figures", "reviews": [], "SUBJECTS": "cs.AI", "authors": ["thabet slimani"], "accepted": false, "id": "1509.05434"}, "pdf": {"name": "1509.05434.pdf", "metadata": {"source": "CRF", "title": "A Study Investigating Typical Concepts and Guidelines for Ontology Building", "authors": ["Thabet Slimani"], "emails": ["thabet.slimani@gmail.com"], "sections": [{"heading": null, "text": "In semantic technologies, the shared common understanding of the structure of information among artifacts (people or software agents) can be realized by building an ontology. To do this, it is imperative for an ontology builder to answer several questions: a) what are the main components of an ontology? b) How an ontology look likes and how it works? c) Verify if it is required to consider reusing existing ontologies or no? c) What is the complexity of the ontology to be developed? d) What are the principles of ontology design and development? and e) How to evaluate an ontology? This paper answers all the key questions above. The aim of this paper is to present a set of guiding principles to help ontology developers and also inexperienced users to answer such questions.\nKeywords: Ontology, Ontology building, ontology design, ontology development, ontology reuse, ontology components, ontology typology."}, {"heading": "1. INTRODUCTION", "text": "In computer science and information science, an ontology is defined as a structured set of terms and concepts representing the meaning of information domains, whether by the metadata of a namespace, or the elements of a knowledge domain. Ontologies are used in artificial intelligence, semantic web, software engineering, biomedical computing and information architecture as a form of knowledge representation about a world or a certain part of this world. The original definition of ontology is given by Gruber (1993) as an explicit specification of a conceptualization [1]. They offer a common vocabulary of a real world domain and define the meaning of the terms and the relations between them with a different degree of formality. Ontologies are usually organized in taxonomies and include the primitives of modeling such as classes, relations, functions, axioms and instances [1]. Knowledge management, knowledge-based systems, ontology-based brokers, and interoperability between systems are good examples of popular applications of ontologies.\nAt least, an ontology is a hierarchy of concepts description related by subsumption relationships; in more complicated models, appropriate axioms are added in order to make easy other relationships between concepts. Although the use of ontologies suggests a concrete approach to build sharable knowledge bases, it also raises a number of questions:\n\u2022 What is the origin of an ontology? \u2022 How should it be designed? \u2022 What tools should be used for its construction? \u2022 What design principles should I follow to build on-\ntologies?\n\u2022 How an ontology should be used? \u2022 How should it be developed and evaluated?\nThe rest of this paper is organized as follows: In the next section, we describe the theoretical aspect of ontologies, their definitions, their reuse, their typologies and their complexities. Then ontology design principles are presented. In the following section, ontology development is described. After that, ontology evaluation principles are explained. And finally, this paper is wrapped up with a conclusion."}, {"heading": "2. ONTOLOGY: THEORETICAL BASIS", "text": ""}, {"heading": "2.1. Definitions", "text": "In the context of Artificial Intelligence, an ontology is identified with a set of formal terms representing knowledge. Gruber [1], defines an ontology as an explicit specification of a conceptualization. A conceptualization is an abstract view of the world that we hope to represent for some purpose. The knowledge representation is based on a conceptualization including objects, concepts, and the relationships that hold between them. Based on technical perspective, the definition of Sowa [2] considers an ontology as a specification of the kinds of entities that exist or may exist in some domain or subject area. More formally, an ontology can be represented by a collection of names designing concepts and relation types controlled in a partial ordering by the type/subtype relation. We will summarize some selected definitions of the well-known ontology definitions from many papers and discussions in academia.\nDefinition1: According Guarino [3] an ontology is defined as an engineering artifact, constituted by a specific vocabulary used for describing certain reality, in addition to a set of explicit assumptions regarding the intended meaning of the vocabulary words.\nDefinition2: According Neches et al. (1991) [4], ontologies are considered as a kind of \u201ctop-level declarative abstraction hierarchies represented with sufficient information to lay down the ground rules for modeling a domain\u201d. However, an ontology defines the basic terms and relations, including the vocabulary of a topic area as well as the rules for combining terms and relations to define extensions to the vocabulary.\nDefinition3: Wielinga and Schreiber (1993) [5], defined AI ontology as \u201ca theory of what entities can exist in the mind of a knowledgeable agent\u201d. An ontology can be referenced as a meta-model describing the structure of a knowledge base and making explicit the commitments used in the modeling process which enables knowledge reuse and sharing.\nDefinition4: the definition of Gruber\u2019s [1] was redefined by Guarino and Giaretta (1995) [6]. They tried to refine the\nmeaning of ontology, taking in consideration 7 senses of the terms that possibly to be used in the literature: Ontology\n\u2022 as a philosophical discipline; \u2022 as an informal conceptual system; \u2022 as a formal semantic account; \u2022 as a specification of a conceptualization; \u2022 as a representation of a conceptual system via logical\ntheory;\n\u2022 as the vocabulary used by a logical theory; \u2022 as a specification of a logical theory. The authors\u2019 use directly the senses from 2 to 7 with an additional attention accorded to the sense 4 which they find problematic. Therefore, Guarino and Giaretta describe AI ontology, as having two senses:\n\u2022 Ontology is a logical theory represented as a \u201cdesigned artifact, a knowledge base of a special kind\nwhich can be read, sold or physically shared.\u201d.\n\u2022 Ontology is a synonym of conceptualization defined as \u201can intentional semantic structure which encodes\nthe implicit rules constraining the structure of the piece of reality.\u201d Yet, according to Guarino and Giaretta, the same ontological theory may belong to different conceptualizations and the same conceptualization may underlie different ontological theories."}, {"heading": "2.2. Ontology components", "text": "The formalization of Knowledge in ontologies is based on five components: classes, instances, relations, functions, axioms and instances [1]. The following paragraphs enumerate those ontology components:\n\u2022 Classes or concepts: also called types or universals, are a group of individuals that share common charac-\nteristics used in a wide sense. A concept can be anything about which something is said. It can be a description of a task, action, function, strategy, reasoning process, etc. The majority of ontology languages (for example, OWL, DAML, etc.) allow the definition of concepts on the basis of these characteristics. For example, all mammals share the same characteristics, except for the ability to talk.\n\u2022 Relations: In Ontologies, relations describe the means in which individuals (instances or particulars)\nare related. In other terms, relations represent a form of interaction between concepts in the same domain. Formally, a relation is any subset of a product of n sets, defined as follows: R: C1 x C2 x ... x Cn. Several types of relations can be expressed on Ontologies: \u201csubclass-of\u201d and \u201cconnected-to\u201d are two examples of binary relations. The sentence \u201cAhmed teaches AI Course\u201d express a direct relation between individuals, but the sentence \u201cProfessor teach Course\u201d express a relation between Concepts.\n\u2022 Functions: are a particular type of relations, where the nth element of the relationship is distinctive for\nthe n-1 preceding elements. The relations \u201cAuthorof\u201d and \u201cPrice-of-a-new-computer\u201d are two examples of functions. For example, the second function aims to calculate the price of a new computer depending on the CPU type and speed, hard-disk storage capacity and the capacity of memory storage.\n\u2022 Axioms: Axioms represent assertions formulated in a logical form that together comprise the core\nknowledge that the ontology describes in its domain of application. In other terms, axioms are used to model sentences that are always true. Axiom types can be classified according to their semantic meaning [7].\n\u2022 Instances: instances are individuals that models concrete objects (people, proteins, machines) and repre-\nsents the base components of an ontology. If the main components of ontologies have been represented, then it is possible implementing an ontology in various languages: highly informal, semi-informal, semiformal and rigorously formal languages [8]."}, {"heading": "2.3. Ontology reuse", "text": "Ontology reuse is an important research issue in the semantic web and ontology field. It can be defined as the process in which available (ontological) knowledge is employed as input to generate new ontologies. In the following paragraphs, some definitions of ontology reuse categories are given (based on the work described in [9]):\n\u2022 Ontology merging: It is an approach aiming to integrate two ontologies or more to create a unique ontol-\nogy which would have/included all the knowledge that the merged ontologies had. Then, a process of ontology merging builds a unique ontology represents a merged version of the original ontologies. The obtained ontology contains all the information from merged original ontologies, without indication of their former origin [10]. A merging process is usually performed when the original ontologies cover similar or overlapping domains.\n\u2022 Ontology integration: Ontology integration is a process creating a unique ontology after aggregation, as-\nsemblage, extension, combination, specialization or adaptation of ontologies on different subjects [10].\n\u2022 Ontology mapping: Ontology mapping (OM) is a process identifying the correspondence among ontol-\nogies entities. Ontology mapping uses multiple ontologies to do inter-ontology mappings, but without the existence of a global ontology. As an output, the process of OM produces a set of mapping assertions denoting relations between these entities [11]. However, the aim of OM is to allow ontologies sharing, exchanging and reusing information between them.\n\u2022 Ontology alignment/matching: ontology alignment is a process of determining correspondences be-\ntween concepts contained in two ontologies aiming to modify one of them to make it more consistent and coherent with the other one [12]. Several tools of ontology alignment have been developed to operate on database schemas, XML schemas,\ntaxonomies, entity-relationship models, formal lan-\nguages, dictionaries, and other label frameworks.\n\u2022 Ontology versioning: ontology versioning indicates that there is multiple variant of an ontology around. In\nreality, those variants often originate from changes to an existing variant of the ontology and thus form a derivation tree. However, ontology versioning is a process handling change in different versions of an\nontology, which implies versions recognition, ontologies update and versions relationships traceability [13]."}, {"heading": "2.4. Ontology typologies", "text": "In this paper, the concept of ontological commitment is used to classify ontologies. If it is possible to differentiate between types of ontological commitment, then it is possible to identify different types of ontologies, and therefore, it is possible to classify ontologies. To define the different types of commitments, the commonly made distinction in AI literature between tasks, methods, and domains is adopted [5][14] (see Fig.1). Consequently, three different types of ontological commitments: task commitments, method commitments, and domain commitments can be identified. In addition to the three ontological commitments, this section will present a selected most commonly used types of ontologies as presented in [15].\n\u2022 Task commitments: If an ontology defines the entities and relations expressing a task-specific perspective on the domain knowledge, then it has tasked commitments [16]. A task can be defined as a specification of a goal, including some input and required output. An ontology for a diagnosis task, including entities such as observations, hypotheses and causes is an example of an ontology that has task commitments.\n\u2022 Method commitments: If an ontology defines the entities and relations expressing a method-specific perspective on the domain knowledge, then it has method commitment [16]. A method can be specified as a specification of how a task can be performed. An ontology adopting the propose and-revise method (within a design task), which contains entities such as proposed solution, value-assessment and constraints is an example of ontology that has method commitments.\n\u2022 Domain commitments. : If an ontology defines entities and relations relating to a particular domain, then it has domain commitments. A domain is referred to the commonly distinguished fragments of the real world modeled, such as medical, judiciary, financial, mathematical or social domains. An ontology for the judiciary domain, which contains entities such as norms and acts, is an example of ontology that has domain commitments. Additionally, domain ontology supply vocabularies about the concepts of a given domain and their relationships, about the activities that take place in that domain, and about the theories and basic principles that governs the domain.\nFig1. Ontologies and ontological commitments by [5].\nBased on the typology presented above and interesting to the development of KBS, Mizoguchi et al. (1995) [17] proposed a typology of ontologies based on the following idea: \u201cfrom knowledge base technology perspective, knowledge should be considered in some context, that is, in problem solving situation\u201d. From these perspective, the following typologies are established:\nMizoguchi et al. (1995)\u2019s Ontologies typology.\n\u2022 Content Ontologies: Also called ontologies for knowledge reuse, they include as well task ontolo-\ngies, workplace (domain ontology) and general/ common Ontologies (including vocabulary related to things, events, space, time, behavior, causality function, etc.).\nThe authors in [17] also take into account the concept of meta-ontology (also called Generic Ontologies or Core Ontologies) as a fourth main type to refer to representation Ontologies.\n\u2022 Communication Ontologies: Also called knowledge sharing Ontologies. This type of ontologies is intend-\ned to support the sharing and reuse of represented knowledge in a formal manner. They are valuable to define the common vocabulary in which shared knowledge is represented. Ontolingua [18] is an example of Ontologies that adopts knowledge sharing.\n\u2022 Indexing Ontologies: also called ontologies for information retrieval. The aim of adopting ontologies in\nInformation Retrieval is to improve recall and precision [19,20]. Its major use is related to query expansion, consisting to look for the terms in the ontology more related to the query terms, and therefore using them as a part of the query."}, {"heading": "2.5. Ontology complexity", "text": "Two types of ontology complexity can be distinguished depending on the broad range of tasks to which the Ontologies are included. The complexity range of Ontologies varies from simple taxonomies to highly complexed including constraints associated with concepts and relations.\n\u2022 Light-weight Ontologies: Light-weight Ontologies are normally defined as more hierarchical or classifi-\ncatory characteristic. They are habitually designed to represent subsumption relation (is-a hierarchy between concepts) or other types of relationships between concepts. A light-weight Ontology does not include too many or too complicated relationships. As example, those Ontologies can be applied in web search engines like Yahoo ontology consisting of a hierarchy of topics with little consideration of rigorous concept definition, distinction between word and concept, etc. A formal definition of lightweight ontology is given in [21]:\n\u2022 Heavy-weight Ontology: The second type of Ontologies is different. Heavy weight ontology is devel-\noped with an additional attention to the rigorous meaning, organizing principles of each concept and semantically rigorous relations between concepts (cardinality constraints, taxonomy of relations, Axioms or restrictions, etc.). Target world modeling requiring a world conceptualization of the world to guarantee the consistency and fidelity of the model, needs an instance models typically built on heavyweight ontology. In other terms, as relationships are added and the complexities of the world are increased, Ontologies migrate from the lightweight to the \"heavyweight\" complexity."}, {"heading": "3. ONTOLOGY DESIGN", "text": "Ontologies can be defined as artifacts that have a structure (logical, linguistic, \u201ctaxonomical\u201d). Their purpose is to encode a description of the world (actual, counterfactual, possible, impossible, desired, etc.) for some tasks or problems (e.g. the world of Medicine, the world of Semantic Web Conference, etc.). However, ontologies must match both domain and task described as follows:\n\u2022 Domain: allowing the description of the entities whose attributes and relations are concerned by some\npurpose (student as entities that are enrolled in university, supervised by academic staff, and has name, address, etc.).\n\u2022 Task: Serving a purpose (find persons working on a same topic, matching project topics to staff compe-\ntencies, etc).\nOntology design is a quite challenge for complex applications and essential technique in the creation of knowledgebased applications [22]. Several area of research have been successfully applied Ontology design, such as model checking and semantic reasoning [23] and inconsistent detection in complex scene modeling [24][25]. The following section summarizes some design criteria and principles that have been proved useful in the development of Ontologies:\n\u2022 Clarity and Objectivity: Based on the presentation in [26], Clarity signifies that the ontology should give\nthe meaning of defined terms by objective definitions providing and also natural language documentation.\n\u2022 Completeness [26]: Completeness means that a the expression of a definition is based on necessary and\nsufficient conditions that is preferred over a partial definition.\n\u2022 Coherence [26]: Coherence is adopted to permit inferences that present consistence with the definitions.\n\u2022 Maximum monotonic extendibility [26]: This property means that new general or specialized terms\nshould be incorporated in the ontology in a fashion that is does not require the change of existing definitions.\n\u2022 Minimal ontological commitments [26]: which means to minimize the claims about the world being\nmodeled, giving the parties devoted to the ontology freedom specializing and instantiating the ontology as required.\n\u2022 Diversification of hierarchies [27]: Diversification of hierarchies is useful to increase the power supplied\nby multiple inheritance mechanisms.\n\u2022 Principle of Ontological Distinction [28]: this principle means that classes in ontologies should be dis-\njoint.\n\u2022 Minimization of the semantic distance between sibling concepts [27]: This principle means that the\nsame primitives are grouped and used to represent similar concepts.\n\u2022 Modularity [29] : This property is employed to minimize coupling between modules.\n\u2022 Standardization of names [27]."}, {"heading": "4. ONTOLOGY DEVELOPMENT", "text": "A great number of methods and practices have been developed for ontology engineering in literature. We have selected few well known methods for explanation. The important thing is that all of these methods require that Ontologies are created either by a skilled ontology engineers, or by the cooperation between ontology engineers and domain experts. Only some of the methods support domain experts. Requirements engineering plays an important role in all of the presented methods. Gruninger and Fox [30] have introduced competency questions as a set of problems that the ontology\nlogic axioms should be able to represent and solve. Based on the perspectives of Gruninger and Fox, such question must be formalized into machine interpretable and solvable problems, rather than natural language format. Competency questions in RDFS and OWL Ontologies are often formalized into SPARQL queries, and if SPARQL query returns the expected result after execution over the ontology in question they are considered satisfied.\nNoy & McGuinness (2001) [31] address basis for developing Ontologies and enumerate the steps implicated in developing ontology. Based on that basis, the following section provides seven steps for ontology development described as follows:\n\u2022 Determine the domain and scope of the Ontology: this step should determine the domain that the ontol-\nogy will cover, specify the types of questions that the information in the ontology should provide answers (ontology useful for testing), specify for whom this ontology is intended (Users could be restaurant customers, professionals (chefs)) and verify if the ontology enclose enough information to answer these types of questions.\n\u2022 Consider the reuse of existing Ontologies: This step should identify if the concerned system needs to\ninteract with other applications that have already devoted to particular Ontologies or restricted vocabularies (Ontolingua library, DAML library, etc.). Moreover, this step verifies if exist a requirement to refine and extend existing sources for a particular domain.\n\u2022 Enumerate key terms in the ontology: This step should identify a list of terms that would like to be\nexplained to a user describing statements about a specific subject. Moreover, it should specify the properties enclosed in the terms and their interpretation (diverse types of food, such as fish and red meat). The list of terms is identified independently to the class categorization (hierarchy, facet and overlapping).\n\u2022 Classes and class hierarchy definition: This step has to choose between three possible approaches:\ntop-down development process which starts with the most general concept definition, bottom-up development process which starts with the most specific concept definition, or a combined approach between the first two approaches.\n\u2022 Class properties definition: This step starts by the definition of classes from the list created in the step 3\nand their internal structure (properties). A class is defined by describing objects that have independent existence. Moreover, in this step requires organizing classes into hierarchical structure (Taxonomy). A slot is a word which is not classes, and furthermore it should be assigned to a class.\n\u2022 Define the facet of slots: Different facets can characterize a slot: the value type description (the types of\nvalues permitted to be filled in the slot: Number (e.g. for price)), permitted values, cardinality (defines the values number a slot can have), and other additional features of the values the slot can take (i.e. the value of a name is a string).\n\u2022 Create instances: This step defines an individual instance of a class based on the following order: choose\na class, then create an individual instance of that class, and finally fill it in the slot values."}, {"heading": "5. ONTOLOGY EVALUATION", "text": "The evaluation process of am ontology could be based on different viewpoints: for example, the quality of the designed ontology (technical point of view) and its usability in real world (practical view). Additionally, it is possible to evaluate an ontology based on mathematical model (mathematical point of view). Several contributions have been proposed for the purpose of evaluation of quality of the designed ontology: For example, five criteria suggested by Gruber [26] needed for ontology evaluation: clarity, coherence, extendibility, minimal encoding bias and minimal ontological commitment. Ontologies include sets of related concepts. Generally, Set Theory is used to construct mathematical models to defining and reasoning about ontological models [32]. Moreover, Tartir et al. (2005) [33], presents OntoQA, as an approach designed for the purpose of quality evaluation of Ontologies and their potential for knowledge representation through a well defined set of metrics. The proposed approach divides the metrics into three categories: Schema metrics: addressing the design of ontology\nand composed by metrics that indicate the relationship richness, attribute richness and inheritance richness. Knowledge base metrics: describe the knowledge base as a whole and composed by class richness, average population and cohesion metrics. Class metrics: Also called instance distribution since it refers to the distribution of instances over classes. It includes metrics like fullness, inheritance richness, relationship richness, connectivity and readability.\nAnother well-known ontology evaluation approach presented in OntoClean [34] is inspired from a philosophical approach that evaluates formal properties of taxonomy. OntoClean, from a useful perspective, offers means to derive measurable mismatches of a taxonomy taking into account the semantics provided by the \u201cis-a\u201d relationship. Moreover, OntoClean offers a clarification of why mismatches occurs which subsequently improve the taxonomical structure. OntoClean properties are adopted by some tools like the works in[35], OntoEdit [36] and WebODE [37]."}, {"heading": "6. CONCLUSION", "text": "Ontologies have been exploited in several real world applications to help the communication improvement between\nagents (people or software agents). However, in literature sev-\neral kinds of ontologies have been investigated and evolved in incremental manner. This paper was presented the concept of\nontologies and their components, reuse, typology and com-\nplexity. Moreover, it describes the principle of ontology design and development guidelines. In addition, this paper has\nprovided the process of ontology evaluation to help the understanding of ontology developer and na\u00eff user to improve his\nunderstanding."}], "references": [{"title": "A translation approach to portable ontology specifications. ACM Knowledge Acquisition, Special issue: Current issues in knowledge", "author": ["T. Gruber"], "venue": null, "citeRegEx": "1", "shortCiteRegEx": "1", "year": 1993}, {"title": "Ontologies for Knowledge Sharing. In Manuscript of the invited talk at Terminology and Knowledge Engineering Congress (TKE", "author": ["J.F. Sowa"], "venue": null, "citeRegEx": "2", "shortCiteRegEx": "2", "year": 1996}, {"title": "Enabling technology for knowledge sharing. Enabling technology for knowledge sharing", "author": ["R. Neches", "R. Fikes", "T. Finin", "T. Gruber", "R. Patil", "T. Senator", "W.R. Swartout"], "venue": "AI Magazine,", "citeRegEx": "4", "shortCiteRegEx": "4", "year": 1991}, {"title": "Reusable and shareable knowledge bases: A european perspective", "author": ["B. Wielinga", "A.T. Schreiber"], "venue": "Proceedings of the International Conference on Building and Sharing of Very Large-Scale Knowledge Bases Proceedings (KB&KS\u201993),", "citeRegEx": "5", "shortCiteRegEx": "5", "year": 1993}, {"title": "Ontologies and knowl edge bases: Towards a terminological clarification", "author": ["N. Guarino", "P. Giaretta"], "venue": "Towards Very Large Knowledge Bases: Knowledge Building & Knowledge Sharing,", "citeRegEx": "6", "shortCiteRegEx": "6", "year": 1995}, {"title": "Axioms are Objects, too - Ontology Engineering beyond the modeling of Concepts and Relations", "author": ["S. Staab ans M. Maedche"], "venue": "Technical Report 400,", "citeRegEx": "7", "shortCiteRegEx": "7", "year": 2000}, {"title": "Ontologies: prin ciples, methods, and applications", "author": ["M. Uschold", "M. Gruninger"], "venue": "Knowledge E gineering Review,", "citeRegEx": "8", "shortCiteRegEx": "8", "year": 1996}, {"title": "On the similarity relation within fuzzy ontology components", "author": ["A. Bahri", "L. Bejaoui", "S. Chakhar"], "venue": "In The International Symposium on Computational Intelligence and Intelligent Informatics (ISCIII\u201905),", "citeRegEx": "9", "shortCiteRegEx": "9", "year": 2005}, {"title": "Taxonomic ontology alignment an implementation", "author": ["C.H. Felic\u0131ssimo", "K.K. Breitman"], "venue": "Anais do WER04 - Workshop em Engenharia de Requisitos,", "citeRegEx": "10", "shortCiteRegEx": "10", "year": 2004}, {"title": "Ontology mapping through analysis of model extension", "author": ["X. Su", "T. Brasethvik", "S. Hakkarainen"], "venue": "CAiSE Short Paper Proceedings, Klagenfurt/Velden,", "citeRegEx": "11", "shortCiteRegEx": "11", "year": 2003}, {"title": "Combining and relating ontologies: An analysis of problems and solutions", "author": ["M. Klein"], "venue": "Workshop on Ontologies and Information Sharing, Seattle,", "citeRegEx": "12", "shortCiteRegEx": "12", "year": 2001}, {"title": "Ontology version versioning and change detection on the web", "author": ["M. Klein", "A. Kiryakov", "D. Ognyanov", "D. Fensel"], "venue": "The 13th International Conference on Knowledge Engineering and Knowledge Management (EKAW02), Sig \u0308uenza,", "citeRegEx": "13", "shortCiteRegEx": "13", "year": 2003}, {"title": "eds.),Common KADS Library for Expertise Modelling, Reusable Problem Solving Components", "author": ["J.A. Breuker", "W. van de Velde"], "venue": null, "citeRegEx": "14", "shortCiteRegEx": "14", "year": 1994}, {"title": "Overview of Knowledge Sharing and Reuse Components: Ontologies and Problem-Solving Methods", "author": ["A. Gomez-Perez", "R. Benjamins"], "venue": "Proceedings of the IJCAI-99 Workshop on Ontologies and Problem-Solving Methods (KRR5),", "citeRegEx": "15", "shortCiteRegEx": "15", "year": 1999}, {"title": "The ontology of tasks and methods, Working Notes of the AAAI Spring symposium on Ontological Engineering, Stanford University, CA", "author": ["B. Chandrasekaran", "J.R. Josephson"], "venue": null, "citeRegEx": "16", "shortCiteRegEx": "16", "year": 1997}, {"title": "Task ontology for reuse of problem solving knowledge", "author": ["R.Mizoguchi", "J.Vanwelkenhuysen", "M.Ikeda"], "venue": null, "citeRegEx": "17", "shortCiteRegEx": "17", "year": 1995}, {"title": "The Ontolingua server: A tool for collaborative ontology construction", "author": ["A. Farquhar", "R. Fikes", "J.Rice"], "venue": "Journal of Human-Computer Studies", "citeRegEx": "18", "shortCiteRegEx": "18", "year": 1997}, {"title": "Ontologybased image retrieval", "author": ["E. Hyv\u00f6nen", "A. Styrman", "S. Saarela"], "venue": "Proceedings of XML Finland 2002 Conference,", "citeRegEx": "19", "shortCiteRegEx": "19", "year": 2002}, {"title": "Ontology-based Information Selection", "author": ["L. Khan"], "venue": "PhD thesis, Department of Computer Science, University of Southern California,", "citeRegEx": "20", "shortCiteRegEx": "20", "year": 2000}, {"title": "The smart architect: Scalable ontology based modeling of ancient chinese architectures", "author": ["Y. Liu", "C.Xu", "Q. Zhang", "Y.Pan"], "venue": "IEEE Intelligent Systems,", "citeRegEx": "22", "shortCiteRegEx": "22", "year": 2008}, {"title": "Model checking semantically annotated services", "author": ["I. DiPietro", "F. Pagliarecci", "L.Spalazzi"], "venue": "IEEE Transactions on Software Engineering,", "citeRegEx": "23", "shortCiteRegEx": "23", "year": 2012}, {"title": "Improving procedural modeling with semantics in digital architectural heritage", "author": ["Y. Liu", "M. Zhang", "Y.Jiang", "H.Zhao"], "venue": "Computers and Graphics,", "citeRegEx": "24", "shortCiteRegEx": "24", "year": 2012}, {"title": "Constructing the virtual jing-hang grand canal with ontodraw", "author": ["Y. Liu", "M. Zhang", "F. Tang", "Y. Jiang", "Z. Pan", "G. Liu"], "venue": "Expert Systems With Applications,", "citeRegEx": "25", "shortCiteRegEx": "25", "year": 2012}, {"title": "Towards principles for the design of ontologies used for knowledge sharing", "author": ["T.R. Gruber"], "venue": "International Journal of Human-Computer Studies,", "citeRegEx": "26", "shortCiteRegEx": "26", "year": 1995}, {"title": "onto)2agent: An ontology-based www broker to select ontologies", "author": ["J. Arpirez", "A. G \u0301omez-P \u0301erez", "A. Lozano", "S. Pinto"], "venue": "Proceedings of the Workshop on Applications of Ontologies and Problem-Solving Methods, held in conjunction with ECAI-98,", "citeRegEx": "27", "shortCiteRegEx": "27", "year": 1998}, {"title": "Stratified ontologies: the case of physical objects", "author": ["S. Borgo", "N. Guarino", "C. Masolo"], "venue": "In Proceedings of the Workshop on Ontological Engineering, held in conjunction with ECAI-96,", "citeRegEx": "28", "shortCiteRegEx": "28", "year": 1996}, {"title": "Building and reusing ontologies for electrical network applications", "author": ["A. Bernaras", "I. Laresgoiti", "J. Corera"], "venue": "In Proceedings of the 12th ECAI,", "citeRegEx": "29", "shortCiteRegEx": "29", "year": 1996}, {"title": "The Role of Competency Questions in Enterprise Engineering", "author": ["M. Gruninger", "M.S. Fox"], "venue": "In Proceedings of the IFIP WG5,", "citeRegEx": "30", "shortCiteRegEx": "30", "year": 1994}, {"title": "Ontology Development 101: a guide to creating your first ontology, Retrieved from  http://wwwksl.stanford.edu/people/dlm/papers/ontology-tutorial-noymcguinness.pdf", "author": ["N.F. Noy", "D.L.McGuinness"], "venue": null, "citeRegEx": "31", "shortCiteRegEx": "31", "year": 2001}, {"title": "Rahayu, E.Chang, R.Meersman: Ontologies on the MOVE", "author": ["C. Wouters", "J.W.T.S. Dillon"], "venue": "International Conference Database Systems for Advances Applications (DAS FAA", "citeRegEx": "32", "shortCiteRegEx": "32", "year": 2004}, {"title": "Ontology Evaluation and Ranking using OntoQA", "author": ["S. Tartir", "I. Budak Arpinar"], "venue": "The proceedings of the International Conference on Semantic Computing ICSC", "citeRegEx": "33", "shortCiteRegEx": "33", "year": 2007}, {"title": "Using explicit Ontologies in KBS development", "author": ["G. van Heijst", "A.T. Schreiber", "B.J. andWielinga"], "venue": "International Journal of Human-Computer Studies,", "citeRegEx": "34", "shortCiteRegEx": "34", "year": 1997}, {"title": "Automatic evaluation of ontologies (AEON)", "author": ["J. V \u0308olker", "D. Vrande\u02c7ci \u0301c", "Y. Sure"], "venue": "Proceedings of the 4th International Semantic Web Conference (ISWC2005),", "citeRegEx": "35", "shortCiteRegEx": "35", "year": 2005}, {"title": "OntoEdit: Collaborative Engineering of Ontologies. in On-To-Knowledge: Semantic Web enabled Knowledge", "author": ["Y. Sure", "M. Erdmann", "R. Studer"], "venue": null, "citeRegEx": "36", "shortCiteRegEx": "36", "year": 2002}, {"title": "WebODE: a scalable workbench for ontological engineering", "author": ["J.C. Arprez", "O. Corcho", "M. Fernandez-Lopez", "A. Gomez-Perez"], "venue": "Proceedings of the First Interna-  7 tional Conference on Knowledge Capture (K-CAP) Oct", "citeRegEx": "37", "shortCiteRegEx": "37", "year": 2001}], "referenceMentions": [{"referenceID": 0, "context": "The original definition of ontology is given by Gruber (1993) as an explicit specification of a conceptualization [1].", "startOffset": 114, "endOffset": 117}, {"referenceID": 0, "context": "Ontologies are usually organized in taxonomies and include the primitives of modeling such as classes, relations, functions, axioms and instances [1].", "startOffset": 146, "endOffset": 149}, {"referenceID": 0, "context": "Gruber [1], defines an ontology as an explicit specification of a conceptualization.", "startOffset": 7, "endOffset": 10}, {"referenceID": 1, "context": "Based on technical perspective, the definition of Sowa [2] considers an ontology as a specification of the kinds of entities that exist or may exist in some domain or subject area.", "startOffset": 55, "endOffset": 58}, {"referenceID": 2, "context": "(1991) [4], ontologies are considered as a kind of \u201ctop-level declarative abstraction hierarchies represented with sufficient information to lay down the ground rules for modeling a domain\u201d.", "startOffset": 7, "endOffset": 10}, {"referenceID": 3, "context": "Definition3: Wielinga and Schreiber (1993) [5], defined AI ontology as \u201ca theory of what entities can exist in the mind of a knowledgeable agent\u201d.", "startOffset": 43, "endOffset": 46}, {"referenceID": 0, "context": "Definition4: the definition of Gruber\u2019s [1] was redefined by Guarino and Giaretta (1995) [6].", "startOffset": 40, "endOffset": 43}, {"referenceID": 4, "context": "Definition4: the definition of Gruber\u2019s [1] was redefined by Guarino and Giaretta (1995) [6].", "startOffset": 89, "endOffset": 92}, {"referenceID": 0, "context": "The formalization of Knowledge in ontologies is based on five components: classes, instances, relations, functions, axioms and instances [1].", "startOffset": 137, "endOffset": 140}, {"referenceID": 5, "context": "Axiom types can be classified according to their semantic meaning [7].", "startOffset": 66, "endOffset": 69}, {"referenceID": 6, "context": "then it is possible implementing an ontology in various languages: highly informal, semi-informal, semiformal and rigorously formal languages [8].", "startOffset": 142, "endOffset": 145}, {"referenceID": 7, "context": "In the following paragraphs, some definitions of ontology reuse categories are given (based on the work described in [9]):", "startOffset": 117, "endOffset": 120}, {"referenceID": 8, "context": "The obtained ontology contains all the information from merged original ontologies, without indication of their former origin [10].", "startOffset": 126, "endOffset": 130}, {"referenceID": 8, "context": "\u2022 Ontology integration: Ontology integration is a process creating a unique ontology after aggregation, assemblage, extension, combination, specialization or adaptation of ontologies on different subjects [10].", "startOffset": 205, "endOffset": 209}, {"referenceID": 9, "context": "cess of OM produces a set of mapping assertions denoting relations between these entities [11].", "startOffset": 90, "endOffset": 94}, {"referenceID": 10, "context": "\u2022 Ontology alignment/matching: ontology alignment is a process of determining correspondences between concepts contained in two ontologies aiming to modify one of them to make it more consistent and coherent with the other one [12].", "startOffset": 227, "endOffset": 231}, {"referenceID": 11, "context": "3 ontology, which implies versions recognition, ontologies update and versions relationships traceability [13].", "startOffset": 106, "endOffset": 110}, {"referenceID": 3, "context": "To define the different types of commitments, the commonly made distinction in AI literature between tasks, methods, and domains is adopted [5][14] (see Fig.", "startOffset": 140, "endOffset": 143}, {"referenceID": 12, "context": "To define the different types of commitments, the commonly made distinction in AI literature between tasks, methods, and domains is adopted [5][14] (see Fig.", "startOffset": 143, "endOffset": 147}, {"referenceID": 13, "context": "In addition to the three ontological commitments, this section will present a selected most commonly used types of ontologies as presented in [15].", "startOffset": 142, "endOffset": 146}, {"referenceID": 14, "context": "\u2022 Task commitments: If an ontology defines the entities and relations expressing a task-specific perspective on the domain knowledge, then it has tasked commitments [16].", "startOffset": 165, "endOffset": 169}, {"referenceID": 14, "context": "\u2022 Method commitments: If an ontology defines the entities and relations expressing a method-specific perspective on the domain knowledge, then it has method commitment [16].", "startOffset": 168, "endOffset": 172}, {"referenceID": 3, "context": "Ontologies and ontological commitments by [5].", "startOffset": 42, "endOffset": 45}, {"referenceID": 15, "context": "(1995) [17] proposed a typology of ontologies based on the following idea: \u201cfrom knowledge base technology perspective, knowledge should be considered in some context, that is, in problem solving situation\u201d.", "startOffset": 7, "endOffset": 11}, {"referenceID": 15, "context": "4 The authors in [17] also take into account the concept of meta-ontology (also called Generic Ontologies or Core Ontologies) as a fourth main type to refer to representation Ontologies.", "startOffset": 17, "endOffset": 21}, {"referenceID": 16, "context": "Ontolingua [18] is an example of Ontologies that adopts knowledge sharing.", "startOffset": 11, "endOffset": 15}, {"referenceID": 17, "context": "The aim of adopting ontologies in Information Retrieval is to improve recall and precision [19,20].", "startOffset": 91, "endOffset": 98}, {"referenceID": 18, "context": "The aim of adopting ontologies in Information Retrieval is to improve recall and precision [19,20].", "startOffset": 91, "endOffset": 98}, {"referenceID": 19, "context": "Ontology design is a quite challenge for complex applications and essential technique in the creation of knowledgebased applications [22].", "startOffset": 133, "endOffset": 137}, {"referenceID": 20, "context": "Several area of research have been successfully applied Ontology design, such as model checking and semantic reasoning [23] and inconsistent detection in complex scene modeling [24][25].", "startOffset": 119, "endOffset": 123}, {"referenceID": 21, "context": "Several area of research have been successfully applied Ontology design, such as model checking and semantic reasoning [23] and inconsistent detection in complex scene modeling [24][25].", "startOffset": 177, "endOffset": 181}, {"referenceID": 22, "context": "Several area of research have been successfully applied Ontology design, such as model checking and semantic reasoning [23] and inconsistent detection in complex scene modeling [24][25].", "startOffset": 181, "endOffset": 185}, {"referenceID": 23, "context": "\u2022 Clarity and Objectivity: Based on the presentation in [26], Clarity signifies that the ontology should give the meaning of defined terms by objective definitions providing and also natural language documentation.", "startOffset": 56, "endOffset": 60}, {"referenceID": 23, "context": "\u2022 Completeness [26]: Completeness means that a the expression of a definition is based on necessary and sufficient conditions that is preferred over a partial definition.", "startOffset": 15, "endOffset": 19}, {"referenceID": 23, "context": "\u2022 Coherence [26]: Coherence is adopted to permit inferences that present consistence with the definitions.", "startOffset": 12, "endOffset": 16}, {"referenceID": 23, "context": "\u2022 Maximum monotonic extendibility [26]: This property means that new general or specialized terms should be incorporated in the ontology in a fashion that is does not require the change of existing definitions.", "startOffset": 34, "endOffset": 38}, {"referenceID": 23, "context": "\u2022 Minimal ontological commitments [26]: which means to minimize the claims about the world being modeled, giving the parties devoted to the ontology freedom specializing and instantiating the ontology as required.", "startOffset": 34, "endOffset": 38}, {"referenceID": 24, "context": "\u2022 Diversification of hierarchies [27]: Diversification of hierarchies is useful to increase the power supplied by multiple inheritance mechanisms.", "startOffset": 33, "endOffset": 37}, {"referenceID": 25, "context": "\u2022 Principle of Ontological Distinction [28]: this principle means that classes in ontologies should be disjoint.", "startOffset": 39, "endOffset": 43}, {"referenceID": 24, "context": "\u2022 Minimization of the semantic distance between sibling concepts [27]: This principle means that the same primitives are grouped and used to represent similar concepts.", "startOffset": 65, "endOffset": 69}, {"referenceID": 26, "context": "\u2022 Modularity [29] : This property is employed to minimize coupling between modules.", "startOffset": 13, "endOffset": 17}, {"referenceID": 24, "context": "\u2022 Standardization of names [27].", "startOffset": 27, "endOffset": 31}, {"referenceID": 27, "context": "Gruninger and Fox [30] have introduced", "startOffset": 18, "endOffset": 22}, {"referenceID": 28, "context": "Noy & McGuinness (2001) [31] address basis for developing Ontologies and enumerate the steps implicated in developing ontology.", "startOffset": 24, "endOffset": 28}, {"referenceID": 23, "context": "Several contributions have been proposed for the purpose of evaluation of quality of the designed ontology: For example, five criteria suggested by Gruber [26] needed for ontology evaluation: clarity, coherence, extendibility, minimal encoding bias and minimal ontological commitment.", "startOffset": 155, "endOffset": 159}, {"referenceID": 29, "context": "Generally, Set Theory is used to construct mathematical models to defining and reasoning about ontological models [32].", "startOffset": 114, "endOffset": 118}, {"referenceID": 30, "context": "(2005) [33], presents OntoQA, as an approach designed for the purpose of quality evaluation of Ontologies and their potential for knowledge representation through a well defined set of metrics.", "startOffset": 7, "endOffset": 11}, {"referenceID": 31, "context": "Another well-known ontology evaluation approach presented in OntoClean [34] is inspired from a philosophical approach that evaluates formal properties of taxonomy.", "startOffset": 71, "endOffset": 75}, {"referenceID": 32, "context": "OntoClean properties are adopted by some tools like the works in[35], OntoEdit [36] and WebODE [37].", "startOffset": 64, "endOffset": 68}, {"referenceID": 33, "context": "OntoClean properties are adopted by some tools like the works in[35], OntoEdit [36] and WebODE [37].", "startOffset": 79, "endOffset": 83}, {"referenceID": 34, "context": "OntoClean properties are adopted by some tools like the works in[35], OntoEdit [36] and WebODE [37].", "startOffset": 95, "endOffset": 99}], "year": 2015, "abstractText": "In semantic technologies, the shared common understanding of the structure of information among artifacts (people or software agents) can be realized by building an ontology. To do this, it is imperative for an ontology builder to answer several questions: a) what are the main components of an ontology? b) How an ontology look likes and how it works? c) Verify if it is required to consider reusing existing ontologies or no? c) What is the complexity of the ontology to be developed? d) What are the principles of ontology design and development? and e) How to evaluate an ontology? This paper answers all the key questions above. The aim of this paper is to present a set of guiding principles to help ontology developers and also inexperienced users to answer such questions.", "creator": "PScript5.dll Version 5.2.2"}}}