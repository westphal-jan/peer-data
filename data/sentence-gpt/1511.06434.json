{"id": "1511.06434", "review": {"conference": "iclr", "VERSION": "v1", "DATE_OF_SUBMISSION": "19-Nov-2015", "title": "Unsupervised Representation Learning with Deep Convolutional Generative Adversarial Networks", "abstract": "In recent years, supervised learning with convolutional networks (CNNs) has seen huge adoption in computer vision applications. Comparatively, unsupervised learning with CNNs has received less attention. In this work we hope to help bridge the gap between the success of CNNs for supervised learning and unsupervised learning. We introduce a class of CNNs called deep convolutional generative adversarial networks (DCGANs), that have certain architectural constraints, and demonstrate that they are a strong candidate for unsupervised learning. Training on various image datasets, we show convincing evidence that our deep convolutional adversarial pair learns a hierarchy of representations from object parts to scenes in both the generator and discriminator. Additionally, we use the learned features for novel tasks - demonstrating their applicability as general image representations.\n\n\n\nThe DCGAN model consists of two generative adversarial network implementations. This model is a general neural network that combines the network to a network and a network that has an image and a caption in it. Convolutional generative adversarial networks generate an image and a caption in it. Convolutional generative adversarial networks generate an image and a caption in it. Convolutional generative adversarial networks generate an image and a caption in it. Convolutional generative adversarial networks generate an image and a caption in it. Convolutional generative adversarial networks generate an image and a caption in it. Convolutional generative adversarial networks generate an image and a caption in it. Convolutional generative adversarial networks generate an image and a caption in it.\n\nOur first image-processing technique was generated with a C++11 algorithm. This algorithm consisted of a convolutional network with the first image in the image and a caption in it. Convolutional generative adversarial networks generate an image and a caption in it. Convolutional generative adversarial networks generate an image and a caption in it. Convolutional generative adversarial networks generate an image and a caption in it. Convolutional generative adversarial networks generate an image and a caption in it.\nThe first image of a neural network can be shown in the first image (the first image) or later. This image and a caption in it. Convolutional generative adversarial networks generate an image and a caption in it. Convolutional generative adversarial networks generate an image and a caption in it.\nThese convolutional networks generate an image and a caption in", "histories": [["v1", "Thu, 19 Nov 2015 22:50:32 GMT  (9027kb,D)", "http://arxiv.org/abs/1511.06434v1", "Under review as a conference paper at ICLR 2016"], ["v2", "Thu, 7 Jan 2016 23:09:39 GMT  (9028kb,D)", "http://arxiv.org/abs/1511.06434v2", "Under review as a conference paper at ICLR 2016"]], "COMMENTS": "Under review as a conference paper at ICLR 2016", "reviews": [], "SUBJECTS": "cs.LG cs.CV", "authors": ["alec radford", "luke metz", "soumith chintala"], "accepted": true, "id": "1511.06434"}, "pdf": {"name": "1511.06434.pdf", "metadata": {"source": "CRF", "title": null, "authors": [], "emails": ["alec@indico.io", "luke@indico.io", "soumith@fb.com"], "sections": [{"heading": "1 INTRODUCTION", "text": "Learning reusable feature representations from large unlabeled datasets has been an area of active research. In the context of computer vision, one can leverage the practically unlimited amount of unlabeled images and videos to learn good intermediate representations, which can then be used on a variety of supervised learning tasks such as image classification. We propose that one way to build good image representations is by training Generative Adversarial Networks (GANs) (Goodfellow et al., 2014), and later reusing parts of the generator and discriminator networks as feature extractors for supervised tasks. GANs provide an attractive alternative to maximum likelihood techniques. One can additionally argue that their learning process and the lack of a heuristic cost function (such as pixel-wise independent mean-square error) are attractive to representation learning. GANs have been known to be unstable to train, often resulting in generators that produce nonsensical outputs. There has been very limited published research in trying to understand and visualize what GANs learn, and the intermediate representations of multi-layer GANs.\nIn this paper, we make the following contributions\n\u2022 We propose and evaluate a set of constraints on the architectural topology of Convolutional GANs that make them stable to train in most settings. We name these class of architectures Deep Convolutional GANs (DCGAN)\n\u2022 We use the trained discriminators for image classification tasks, showing competitive performance with other unsupervised algorithims.\n\u2022 We visualize the filters learnt by GANs and empirically show that specific filters have learned to draw specific objects.\nar X\niv :1\n51 1.\n06 43\n4v 1\n[ cs\n.L G\n] 1\n9 N\n\u2022 We show that the generators have interesting vector arithmetic properties allowing for easy manipulation of many semantic qualities of generated samples."}, {"heading": "2 RELATED WORK", "text": ""}, {"heading": "2.1 REPRESENTATION LEARNING FROM UNLABELED DATA", "text": "Unsupervised representation learning is a fairly well studied problem in general computer vision research, as well as in the context of images. A classic approach to unsupervised representation learning is to do clustering on the data (for example using K-means), and leverage the clusters for improved classification scores. In the context of images, one can do hierarchical clustering of image patches (Coates & Ng, 2012) to learn powerful image representations. Another popular method is to train auto-encoders (convolutionally, stacked (Vincent et al., 2010), separating the what and where components of the code (Zhao et al., 2015), ladder structures (Rasmus et al., 2015)) that encode an image into a compact code, and decode the code to reconstruct the image as accurately as possible. These methods have also been shown to learn good feature representations from image pixels. Deep belief networks (Lee et al., 2009) have also been shown to work well in learning hierarchical representations."}, {"heading": "2.2 GENERATING NATURAL IMAGES", "text": "Generative image models are well studied and fall into two categories: parametric and nonparametric.\nThe non-parametric models often do matching from a database of existing images, often matching patches of images, and have been shown to be used in texture synthesis (Efros et al., 1999), superresolution (Freeman et al., 2002) and in-painting (Hays & Efros, 2007).\nParametric models for generating images has been explored extensively (for example on MNIST digits or for texture synthesis (Portilla & Simoncelli, 2000)). However, generating natural images of the real world have had not much success until recently. A variational sampling approach to generating images (Kingma & Welling, 2013) has had some success, but the samples often suffer from being blurry. Another approach generates images using an iterative forward diffusion process (Sohl-Dickstein et al., 2015). Generative Adversarial Networks (Goodfellow et al., 2014) generated images suffering from being noisy and incomprehensible. A laplacian pyramid extension to this approach (Denton et al., 2015) showed higher quality images, but they still suffered from the objects looking wobbly because of noise introduced in chaining multiple models. A recurrent network approach (Gregor et al., 2015) and a deconvolution network approach (Dosovitskiy et al., 2014) have also recently had some success with generating natural images. However, they have not leveraged the generators for supervised tasks."}, {"heading": "2.3 VISUALIZING THE INTERNALS OF CNNS", "text": "One constant criticism of using neural networks has been that they are black-box methods, with little understanding of what the networks do in the form of a simple human-consumable algorithm. In the context of CNNs, Zeiler et. al. (Zeiler & Fergus, 2014) showed that by using deconvolutions and filtering the maximal activations, one can find the approximate purpose of each convolution filter in the network. Similarly, using a gradient descent on the inputs lets us inspect the ideal image that activates certain subsets of filters (Mordvintsev et al.)."}, {"heading": "3 APPROACH AND MODEL ARCHITECTURE", "text": "Historical attempts to scale up GANs using CNNs to model images have been unsuccessful. This motivated the authors of LAPGAN (Denton et al., 2015) to develop an alternative approach to iteratively upscale low resolution generated images which can be modeled more reliably. We also encountered difficulties attempting to scale GANs using CNN architectures commonly used in the supervised literature. However, after extensive model exploration we identified a family of archi-\ntectures that resulted in stable training across a range of datasets and allowed for training higher resolution and deeper generative models.\nCore to our approach is adopting and modifying three recently demonstrated changes to CNN architectures.\nThe first is the all convolutional net (Springenberg et al., 2014) which replaces deterministic spatial pooling functions (such as maxpooling) with strided convolutions, allowing the network to learn its own spatial downsampling. We use this approach in our generator, allowing it to learn its own spatial upsampling, and discriminator.\nSecond is the trend towards eliminating fully connected layers on top of convolutional features. The strongest example of this is global average pooling which has been utilized in state of the art image classification models (Mordvintsev et al.). We found global average pooling increased model stability but hurt convergence speed. A middle ground of directly connecting the highest convolutional features to the input and output respectively of the generator and discriminator worked well. The first layer of the GAN, which takes a uniform noise distribution Z as input, could be called fully connected as it is just a matrix multiplication, but the result is reshaped into a 4-dimensional tensor and used as the start of the convolution stack. For the discriminator, the last convolution layer is flattened and then fed into a single sigmoid output. See Fig. 1 for a visualization of an example model architecture.\nThird is Batch Normalization (Ioffe & Szegedy, 2015) which stabilizes learning by normalizing the input to each unit to have zero mean and unit variance. This helps deal with training problems that arise due to poor initialization and helps gradient flow in deeper models. This proved critical to get deep generators to begin learning, preventing the generator from collapsing all samples to a single point which is a common failure mode observed in GANs. Directly applying batchnorm to all layers however, resulted in sample oscillation and model instability. This was avoided by not applying batchnorm to the generator output layer and the discriminator input layer.\nThe ReLU activation (Nair & Hinton, 2010) is used in the generator with the exception of the output layer which uses the Tanh function. We observed that using a bounded activation allowed the model to learn more quickly to saturate and cover the color space of the training distribution. Within the discriminator we found the leaky rectified activation (Maas et al., 2013) (Xu et al., 2015) to work well, especially for higher resolution modeling. This is in contrast to the original GAN paper, which used the maxout activation (Goodfellow et al., 2013).\nArchitecture guidelines for stable Deep Convolutional GANs \u2022 Replace any pooling layers with strided convolutions (discriminator) and fractional-strided\nconvolutions (generator). \u2022 Use batchnorm in both the generator and the discriminator. \u2022 Remove fully connected hidden layers for deeper architectures. \u2022 Use ReLU activation in generator for all layers except for the output, which uses Tanh. \u2022 Use LeakyReLU activation in the discriminator for all layers."}, {"heading": "4 DETAILS OF ADVERSARIAL TRAINING", "text": "We trained DCGANs on three datasets, Large-scale Scene Understanding (LSUN) (Yu et al., 2015), Imagenet-1k and a newly assembled Faces dataset. Details on the usage of each of these datasets are given below.\nNo pre-processing was applied to training images besides scaling to the range of the tanh activation function [-1, 1]. All models were trained with mini-batch stochastic gradient descent (SGD) with a mini-batch size of 128. All weights were initialized from a zero-centered Normal distribution with standard deviation 0.02. In the LeakyReLU, the slope of the leak was set to 0.2 in all models. While previous GAN work has used momentum to accelerate training, we used the Adam optimizer (Kingma & Ba, 2014) with tuned hyperparameters. We found the suggested learning rate of 0.001, to be too high, using 0.0002 instead. Additionally, we found leaving the momentum term \u03b21 at the\nsuggested value of 0.9 resulted in training oscillation and instability while reducing it to 0.5 helped stabilize training."}, {"heading": "4.1 LSUN", "text": "As visual quality of samples from generative image models has improved, concerns of over-fitting and memorization of training samples have risen. To demonstrate how our model scales with more data and higher resolution generation, we train a model on the LSUN bedrooms dataset containing a little over 3 million training examples. Recent analysis has shown that there is a direct link between how fast models learn and their generalization performance (Hardt et al., 2015). We show samples from one epoch of training (Fig.2), mimicking online learning, in addition to samples after convergence (Fig.3), as an opportunity to demonstrate that our model is not producing high quality samples via simply overfitting/memorizing training examples. No data augmentation was applied to the images."}, {"heading": "4.1.1 DEDUPLICATION", "text": "To further decrease the likelihood of the generator memorizing input examples (Fig.2) we perform a simple image de-duplication process. We fit a 3072-128-3072 de-noising dropout regularized RELU autoencoder on 32x32 downsampled center-crops of training examples. The resulting code layer activations are then binarized via thresholding the ReLU activation which has been shown to be an effective information preserving technique (Srivastava et al., 2014) and provides a convenient form of semantic-hashing, allowing for linear time de-duplication . Visual inspection of hash collisions showed high precision with an estimated false positive rate of less than 1 in 100. Additionally, the technique detected and removed approximately 275,000 near duplicates, suggesting a high recall."}, {"heading": "4.2 FACES", "text": "We scraped images containing human faces from random web image queries of peoples names. The people names were acquired from dbpedia, with a criterion that they were born in the modern era. This dataset has 3M images from 10K people. We run an OpenCV face detector on these images, keeping the detections that are sufficiently high resolution, which gives us approximately 350,000 face boxes. We use these face boxes for training. No data augmentation was applied to the images."}, {"heading": "4.3 IMAGENET-1K", "text": "We use Imagenet-1k (Deng et al., 2009) as a source of natural images for unsupervised training. We train on 32\u00d7 32 min-resized center crops. No data augmentation was applied to the images."}, {"heading": "5 EMPIRICAL VALIDATION OF DCGANS CAPABILITIES", "text": ""}, {"heading": "5.1 CLASSIFYING CIFAR-10 USING GANS AS A FEATURE EXTRACTOR", "text": "One common technique for evaluating the quality of unsupervised representation learning algorithms is to apply them as a feature extractor on supervised datasets and evaluate the performance of linear models fitted on top of these features.\nOn the CIFAR-10 dataset, a very strong baseline performance has been demonstrated from a well tuned single layer feature extraction pipeline utilizing K-means as a feature learning algorithm. When using a very large amount of feature maps (4800) this technique achieves 80.6% accuracy. An unsupervised multi-layered extension of the base algorithm reaches 82.0% accuracy (Coates & Ng, 2011). To evaluate the quality of the representations learned by DCGANs for supervised tasks, we train on Imagenet-1k and then use the discriminator\u2019s convolutional features from all layers, maxpooling each layers representation to produce a 4 \u00d7 4 spatial grid. These features are then flattened and concatenated to form a 28672 dimensional vector and a regularized linear L2-SVM classifier is trained on top of them. This achieves 82.8% accuracy, out performing all K-means based approaches. Notably, the discriminator has many less feature maps (512 in the highest layer) compared to K-means based techniques, but does result in a larger total feature vector size due to the many layers of 4 \u00d7 4 spatial locations. The performance of DCGANs is still less than that of Exemplar CNNs (Dosovitskiy et al., 2015), a technique which trains normal discriminative CNNs in an unsupervised fashion to differentiate between specifically chosen, aggressively augmented, exemplar samples from the source dataset. Further improvements could be made by finetuning the discriminator\u2019s representations, but we leave this for future work. Additionally, since our DCGAN was never trained on CIFAR-10 this experiment also demonstrates the domain robustness of the learned features."}, {"heading": "6 INVESTIGATING AND VISUALIZING THE INTERNALS OF THE NETWORKS", "text": "We investigate the trained generators and discriminators in a variety of ways. We do not do any kind of nearest neighbor search on the training set. Nearest neighbors in pixel or feature space are trivially fooled (Theis et al., 2015) by small image transforms. We also do not use log-likelihood metrics to quantitatively assess the model, as it is a poor (Theis et al., 2015) metric."}, {"heading": "6.1 WALKING IN THE LATENT SPACE", "text": "The first experiment we did was to understand the landscape of the latent space. Walking on the manifold that is learnt can usually tell us about signs of memorization (if there are sharp transitions) and about the way in which the space is hierarchically collapsed. If walking in this latent space results in semantic changes to the image generations (such as objects being added and removed), we can reason that the model has learned relevant and interesting representations. The results are shown in Fig.4."}, {"heading": "6.2 VISUALIZING THE DISCRIMINATOR FEATURES", "text": "Previous work has demonstrated that supervised training of CNNs on large image datasets results in very powerful learned features (Zeiler & Fergus, 2014). Additionally, supervised CNNs trained on\nscene classification learn object detectors (Oquab et al., 2014). We demonstrate that an unsupervised DCGAN trained on a large image dataset can also learn a hierarchy of features that are interesting. Using guided backpropagation as proposed by (Springenberg et al., 2014), we show in Fig.5 that the features learnt by the discriminator activate on typical parts of a bedroom, like beds and windows. For comparison, in the same figure, we give a baseline for randomly initialized features that are not activated on anything that is semantically relevant or interesting."}, {"heading": "6.3 MANIPULATING THE GENERATOR REPRESENTATION", "text": ""}, {"heading": "6.3.1 FORGETTING TO DRAW CERTAIN OBJECTS", "text": "In addition to the representations learnt by a discriminator, there is the question of what representations the generator learns. The quality of samples suggest that the generator learns specific object representations for major scene components such as beds, windows, lamps, doors, and miscellaneous furniture. In order to explore the form that these representations take, we conducted an experiment to attempt to remove windows from the generator completely.\nOn 150 samples, 52 window bounding boxes were drawn manually. On the second highest convolution layer features, logistic regression was fit to predict whether a feature activation was on a window (or not), by using the criterion that activations inside the drawn bounding boxes are positives and random samples from the same images are negatives. Using this simple model, all feature maps with weights greater than zero ( 200 in total) were dropped from all spatial locations. Then, random new samples were generated with and without the feature map removal.\nThe generated images with and without the window dropout are shown in Fig.6, and interestingly, the network mostly forgets to draw windows in the bedrooms, replacing them with other objects."}, {"heading": "6.3.2 VECTOR ARITHMETIC ON FACE SAMPLES", "text": "In the context of evaluating learned representations of words (Mikolov et al., 2013) demonstrated that simple arithmetic operations revealed rich linear structure in representation space. One canonical example demonstrated that the vector(\u201dKing\u201d) - vector(\u201dMan\u201d) + vector(\u201dWoman\u201d) resulted in a vector whose nearest neighbor was the vector for Queen. We investigated whether similar structure emerges in the Z representation of our generators. We performed similar arithmetic on the Z vectors of sets of exemplar samples for visual concepts. Experiments working on only single samples per concept were unstable, but averaging the Z vector for three examplars showed consistent and stable generations that semantically obeyed the arithmetic. In addition to the object manipulation shown in (Fig. 7), we demonstrate that face pose is also modeled linearly in Z space (Fig. 8).\nThese demonstrations suggest interesting applications can be developed using Z representations learned by our models. It has been previously demonstrated that conditional generative models can learn to convincingly model object attributes like scale, rotation, and position (Dosovitskiy et al., 2014). This is to our knowledge the first demonstration of this occurring in purely unsupervised models. Further exploring and developing the above mentioned vector arithmetic could dramatically reduce the amount of data needed for conditional generative modeling of complex image distributions."}, {"heading": "7 CONCLUSION AND FUTURE WORK", "text": "We propose a more stable set of architectures for training generative adversarial networks and we give evidence that adversarial networks learn good representations of images for supervised learning and generative modeling. There are still some forms of model instability remaining - we noticed as models are trained longer they sometimes collapse a subset of filters to a single oscillating mode. Further work is needed to tackle this from of instability. We think that extending this framework to other domains such as video (for frame prediction) and audio (pre-trained features for speech synthesis) should be very interesting. Further investigations into the properties of the learnt latent space would be interesting as well."}, {"heading": "ACKNOWLEDGMENTS", "text": "We are fortunate and thankful for all the advice and guidance we have received during this work, especially that of Ian Goodfellow, Tobias Springenberg, Arthur Szlam and Durk Kingma. Additionally we\u2019d like to thank all of the folks at indico for providing support, resources, and conversations, especially the two other members of the indico research team, Dan Kuster and Nathan Lintz. Finally, we\u2019d like to thank Nvidia for donating a Titan-X GPU used in this work."}, {"heading": "8 SUPPLEMENTARY MATERIAL", "text": ""}, {"heading": "8.1 EVALUATING DCGANS CAPABILITY TO CAPTURE DATA DISTRIBUTIONS", "text": "We propose to apply standard classification metrics to a conditional version of our model, evaluating the conditional distributions learned. We trained a DCGAN on MNIST (splitting off a 10K validation set) as well as a permutation invariant GAN baseline and evaluated the models using a nearest neighbor classifier comparing real data to a set of generated conditional samples. We found that removing the scale and bias parameters from batchnorm produced better results for both models. We speculate that the noise introduced by batchnorm helps the generative models to better explore and generate from the underlying data distribution. The results are shown in Table 2 which compares our models with other techniques. The DCGAN model achieves the same test error as a nearest neighbor classifier fitted on the training dataset - suggesting the DCGAN model has done a superb job at modeling the conditional distributions of this dataset. At one million samples per class, the DCGAN model outperforms InfiMNIST (Loosli et al., 2007), a hand developed data augmentation pipeline which uses translations and elastic deformations of training examples. The DCGAN is competitive with a probabilistic generative data augmentation technique utilizing learned per class transformations (Hauberg et al., 2015) while being more general as it directly models the data instead of transformations of the data.\nTable 2: Nearest neighbor classification results.\nModel Test Error @50K samples Test Error @10M samples AlignMNIST - 1.4% InfiMNIST - 2.6% Real Data 3.1% -\nGAN 6.28% 5.65% DCGAN (ours) 2.98% 1.48%\nFigure 9: Side-by-side illustration of (from left-to-right) the MNIST dataset, generations from a baseline GAN, and generations from our DCGAN ."}], "references": [{"title": "Selecting receptive fields in deep networks", "author": ["Coates", "Adam", "Ng", "Andrew"], "venue": null, "citeRegEx": "Coates et al\\.,? \\Q2011\\E", "shortCiteRegEx": "Coates et al\\.", "year": 2011}, {"title": "Learning feature representations with k-means", "author": ["Coates", "Adam", "Ng", "Andrew Y"], "venue": "In Neural Networks: Tricks of the Trade,", "citeRegEx": "Coates et al\\.,? \\Q2012\\E", "shortCiteRegEx": "Coates et al\\.", "year": 2012}, {"title": "Imagenet: A large-scale hierarchical image database", "author": ["Deng", "Jia", "Dong", "Wei", "Socher", "Richard", "Li", "Li-Jia", "Kai", "Fei-Fei"], "venue": "In Computer Vision and Pattern Recognition,", "citeRegEx": "Deng et al\\.,? \\Q2009\\E", "shortCiteRegEx": "Deng et al\\.", "year": 2009}, {"title": "Deep generative image models using a laplacian pyramid of adversarial networks", "author": ["Denton", "Emily", "Chintala", "Soumith", "Szlam", "Arthur", "Fergus", "Rob"], "venue": "arXiv preprint arXiv:1506.05751,", "citeRegEx": "Denton et al\\.,? \\Q2015\\E", "shortCiteRegEx": "Denton et al\\.", "year": 2015}, {"title": "Learning to generate chairs with convolutional neural networks", "author": ["Dosovitskiy", "Alexey", "Springenberg", "Jost Tobias", "Brox", "Thomas"], "venue": "arXiv preprint arXiv:1411.5928,", "citeRegEx": "Dosovitskiy et al\\.,? \\Q2014\\E", "shortCiteRegEx": "Dosovitskiy et al\\.", "year": 2014}, {"title": "Discriminative unsupervised feature learning with exemplar convolutional neural networks", "author": ["Dosovitskiy", "Alexey", "Fischer", "Philipp", "Springenberg", "Jost Tobias", "Riedmiller", "Martin", "Brox", "Thomas"], "venue": "In Pattern Analysis and Machine Intelligence, IEEE Transactions on,", "citeRegEx": "Dosovitskiy et al\\.,? \\Q2015\\E", "shortCiteRegEx": "Dosovitskiy et al\\.", "year": 2015}, {"title": "Texture synthesis by non-parametric sampling", "author": ["Efros", "Alexei", "Leung", "Thomas K"], "venue": "In Computer Vision,", "citeRegEx": "Efros et al\\.,? \\Q1999\\E", "shortCiteRegEx": "Efros et al\\.", "year": 1999}, {"title": "Example-based super-resolution", "author": ["Freeman", "William T", "Jones", "Thouis R", "Pasztor", "Egon C"], "venue": "Computer Graphics and Applications, IEEE,", "citeRegEx": "Freeman et al\\.,? \\Q2002\\E", "shortCiteRegEx": "Freeman et al\\.", "year": 2002}, {"title": "Generative adversarial nets", "author": ["Goodfellow", "Ian J", "Pouget-Abadie", "Jean", "Mirza", "Mehdi", "Xu", "Bing", "Warde-Farley", "David", "Ozair", "Sherjil", "Courville", "Aaron C", "Bengio", "Yoshua"], "venue": null, "citeRegEx": "Goodfellow et al\\.,? \\Q2014\\E", "shortCiteRegEx": "Goodfellow et al\\.", "year": 2014}, {"title": "Draw: A recurrent neural network for image generation", "author": ["Gregor", "Karol", "Danihelka", "Ivo", "Graves", "Alex", "Wierstra", "Daan"], "venue": "arXiv preprint arXiv:1502.04623,", "citeRegEx": "Gregor et al\\.,? \\Q2015\\E", "shortCiteRegEx": "Gregor et al\\.", "year": 2015}, {"title": "Train faster, generalize better: Stability of stochastic gradient descent", "author": ["Hardt", "Moritz", "Recht", "Benjamin", "Singer", "Yoram"], "venue": "arXiv preprint arXiv:1509.01240,", "citeRegEx": "Hardt et al\\.,? \\Q2015\\E", "shortCiteRegEx": "Hardt et al\\.", "year": 2015}, {"title": "Dreaming more data: Class-dependent distributions over diffeomorphisms for learned data augmentation", "author": ["Hauberg", "Sren", "Freifeld", "Oren", "Larsen", "Anders Boesen Lindbo", "Fisher III", "John W", "Hansen", "Lars Kair"], "venue": "arXiv preprint arXiv:1510.02795,", "citeRegEx": "Hauberg et al\\.,? \\Q2015\\E", "shortCiteRegEx": "Hauberg et al\\.", "year": 2015}, {"title": "Scene completion using millions of photographs", "author": ["Hays", "James", "Efros", "Alexei A"], "venue": "ACM Transactions on Graphics (TOG),", "citeRegEx": "Hays et al\\.,? \\Q2007\\E", "shortCiteRegEx": "Hays et al\\.", "year": 2007}, {"title": "Batch normalization: Accelerating deep network training by reducing internal covariate shift", "author": ["Ioffe", "Sergey", "Szegedy", "Christian"], "venue": "arXiv preprint arXiv:1502.03167,", "citeRegEx": "Ioffe et al\\.,? \\Q2015\\E", "shortCiteRegEx": "Ioffe et al\\.", "year": 2015}, {"title": "Adam: A method for stochastic optimization", "author": ["Kingma", "Diederik P", "Ba", "Jimmy Lei"], "venue": "arXiv preprint arXiv:1412.6980,", "citeRegEx": "Kingma et al\\.,? \\Q2014\\E", "shortCiteRegEx": "Kingma et al\\.", "year": 2014}, {"title": "Auto-encoding variational bayes", "author": ["Kingma", "Diederik P", "Welling", "Max"], "venue": "arXiv preprint arXiv:1312.6114,", "citeRegEx": "Kingma et al\\.,? \\Q2013\\E", "shortCiteRegEx": "Kingma et al\\.", "year": 2013}, {"title": "Convolutional deep belief networks for scalable unsupervised learning of hierarchical representations", "author": ["Lee", "Honglak", "Grosse", "Roger", "Ranganath", "Rajesh", "Ng", "Andrew Y"], "venue": "In Proceedings of the 26th Annual International Conference on Machine Learning,", "citeRegEx": "Lee et al\\.,? \\Q2009\\E", "shortCiteRegEx": "Lee et al\\.", "year": 2009}, {"title": "Training invariant support vector machines using selective sampling", "author": ["Loosli", "Ga\u00eblle", "Canu", "St\u00e9phane", "Bottou", "L\u00e9on"], "venue": "Large Scale Kernel Machines,", "citeRegEx": "Loosli et al\\.,? \\Q2007\\E", "shortCiteRegEx": "Loosli et al\\.", "year": 2007}, {"title": "Rectifier nonlinearities improve neural network acoustic models", "author": ["Maas", "Andrew L", "Hannun", "Awni Y", "Ng", "Andrew Y"], "venue": "In Proc. ICML,", "citeRegEx": "Maas et al\\.,? \\Q2013\\E", "shortCiteRegEx": "Maas et al\\.", "year": 2013}, {"title": "Distributed representations of words and phrases and their compositionality", "author": ["Mikolov", "Tomas", "Sutskever", "Ilya", "Chen", "Kai", "Corrado", "Greg S", "Dean", "Jeff"], "venue": "In Advances in neural information processing systems,", "citeRegEx": "Mikolov et al\\.,? \\Q2013\\E", "shortCiteRegEx": "Mikolov et al\\.", "year": 2013}, {"title": "Inceptionism : Going deeper into neural networks. http://googleresearch.blogspot.com/2015/06/ inceptionism-going-deeper-into-neural.html", "author": ["Mordvintsev", "Alexander", "Olah", "Christopher", "Tyka", "Mike"], "venue": null, "citeRegEx": "Mordvintsev et al\\.,? \\Q2015\\E", "shortCiteRegEx": "Mordvintsev et al\\.", "year": 2015}, {"title": "Rectified linear units improve restricted boltzmann machines", "author": ["Nair", "Vinod", "Hinton", "Geoffrey E"], "venue": "In Proceedings of the 27th International Conference on Machine Learning", "citeRegEx": "Nair et al\\.,? \\Q2010\\E", "shortCiteRegEx": "Nair et al\\.", "year": 2010}, {"title": "Learning and transferring mid-level image representations using convolutional neural networks", "author": ["M. Oquab", "L. Bottou", "I. Laptev", "J. Sivic"], "venue": "In CVPR,", "citeRegEx": "Oquab et al\\.,? \\Q2014\\E", "shortCiteRegEx": "Oquab et al\\.", "year": 2014}, {"title": "A parametric texture model based on joint statistics of complex wavelet coefficients", "author": ["Portilla", "Javier", "Simoncelli", "Eero P"], "venue": "International Journal of Computer Vision,", "citeRegEx": "Portilla et al\\.,? \\Q2000\\E", "shortCiteRegEx": "Portilla et al\\.", "year": 2000}, {"title": "Semisupervised learning with ladder network", "author": ["Rasmus", "Antti", "Valpola", "Harri", "Honkala", "Mikko", "Berglund", "Mathias", "Raiko", "Tapani"], "venue": "arXiv preprint arXiv:1507.02672,", "citeRegEx": "Rasmus et al\\.,? \\Q2015\\E", "shortCiteRegEx": "Rasmus et al\\.", "year": 2015}, {"title": "Deep unsupervised learning using nonequilibrium thermodynamics", "author": ["Sohl-Dickstein", "Jascha", "Weiss", "Eric A", "Maheswaranathan", "Niru", "Ganguli", "Surya"], "venue": "arXiv preprint arXiv:1503.03585,", "citeRegEx": "Sohl.Dickstein et al\\.,? \\Q2015\\E", "shortCiteRegEx": "Sohl.Dickstein et al\\.", "year": 2015}, {"title": "Striving for simplicity: The all convolutional net", "author": ["Springenberg", "Jost Tobias", "Dosovitskiy", "Alexey", "Brox", "Thomas", "Riedmiller", "Martin"], "venue": "arXiv preprint arXiv:1412.6806,", "citeRegEx": "Springenberg et al\\.,? \\Q2014\\E", "shortCiteRegEx": "Springenberg et al\\.", "year": 2014}, {"title": "Understanding locally competitive networks", "author": ["Srivastava", "Rupesh Kumar", "Masci", "Jonathan", "Gomez", "Faustino", "Schmidhuber", "J\u00fcrgen"], "venue": "arXiv preprint arXiv:1410.1165,", "citeRegEx": "Srivastava et al\\.,? \\Q2014\\E", "shortCiteRegEx": "Srivastava et al\\.", "year": 2014}, {"title": "A note on the evaluation of generative models", "author": ["L. Theis", "A. van den Oord", "M. Bethge"], "venue": null, "citeRegEx": "Theis et al\\.,? \\Q2015\\E", "shortCiteRegEx": "Theis et al\\.", "year": 2015}, {"title": "Stacked denoising autoencoders: Learning useful representations in a deep network with a local denoising criterion", "author": ["Vincent", "Pascal", "Larochelle", "Hugo", "Lajoie", "Isabelle", "Bengio", "Yoshua", "Manzagol", "Pierre-Antoine"], "venue": "The Journal of Machine Learning Research,", "citeRegEx": "Vincent et al\\.,? \\Q2010\\E", "shortCiteRegEx": "Vincent et al\\.", "year": 2010}, {"title": "Empirical evaluation of rectified activations in convolutional network", "author": ["Xu", "Bing", "Wang", "Naiyan", "Chen", "Tianqi", "Li", "Mu"], "venue": "arXiv preprint arXiv:1505.00853,", "citeRegEx": "Xu et al\\.,? \\Q2015\\E", "shortCiteRegEx": "Xu et al\\.", "year": 2015}, {"title": "Construction of a large-scale image dataset using deep learning with humans in the loop", "author": ["Yu", "Fisher", "Zhang", "Yinda", "Song", "Shuran", "Seff", "Ari", "Xiao", "Jianxiong"], "venue": "arXiv preprint arXiv:1506.03365,", "citeRegEx": "Yu et al\\.,? \\Q2015\\E", "shortCiteRegEx": "Yu et al\\.", "year": 2015}, {"title": "Visualizing and understanding convolutional networks", "author": ["Zeiler", "Matthew D", "Fergus", "Rob"], "venue": "In Computer Vision\u2013ECCV", "citeRegEx": "Zeiler et al\\.,? \\Q2014\\E", "shortCiteRegEx": "Zeiler et al\\.", "year": 2014}, {"title": "Stacked what-where autoencoders", "author": ["Zhao", "Junbo", "Mathieu", "Michael", "Goroshin", "Ross", "Lecun", "Yann"], "venue": "arXiv preprint arXiv:1506.02351,", "citeRegEx": "Zhao et al\\.,? \\Q2015\\E", "shortCiteRegEx": "Zhao et al\\.", "year": 2015}], "referenceMentions": [{"referenceID": 8, "context": "We propose that one way to build good image representations is by training Generative Adversarial Networks (GANs) (Goodfellow et al., 2014), and later reusing parts of the generator and discriminator networks as feature extractors for supervised tasks.", "startOffset": 114, "endOffset": 139}, {"referenceID": 29, "context": "Another popular method is to train auto-encoders (convolutionally, stacked (Vincent et al., 2010), separating the what and where components of the code (Zhao et al.", "startOffset": 75, "endOffset": 97}, {"referenceID": 33, "context": ", 2010), separating the what and where components of the code (Zhao et al., 2015), ladder structures (Rasmus et al.", "startOffset": 62, "endOffset": 81}, {"referenceID": 24, "context": ", 2015), ladder structures (Rasmus et al., 2015)) that encode an image into a compact code, and decode the code to reconstruct the image as accurately as possible.", "startOffset": 27, "endOffset": 48}, {"referenceID": 16, "context": "Deep belief networks (Lee et al., 2009) have also been shown to work well in learning hierarchical representations.", "startOffset": 21, "endOffset": 39}, {"referenceID": 6, "context": "The non-parametric models often do matching from a database of existing images, often matching patches of images, and have been shown to be used in texture synthesis (Efros et al., 1999), superresolution (Freeman et al.", "startOffset": 166, "endOffset": 186}, {"referenceID": 7, "context": ", 1999), superresolution (Freeman et al., 2002) and in-painting (Hays & Efros, 2007).", "startOffset": 25, "endOffset": 47}, {"referenceID": 25, "context": "Another approach generates images using an iterative forward diffusion process (Sohl-Dickstein et al., 2015).", "startOffset": 79, "endOffset": 108}, {"referenceID": 8, "context": "Generative Adversarial Networks (Goodfellow et al., 2014) generated images suffering from being noisy and incomprehensible.", "startOffset": 32, "endOffset": 57}, {"referenceID": 3, "context": "A laplacian pyramid extension to this approach (Denton et al., 2015) showed higher quality images, but they still suffered from the objects looking wobbly because of noise introduced in chaining multiple models.", "startOffset": 47, "endOffset": 68}, {"referenceID": 9, "context": "A recurrent network approach (Gregor et al., 2015) and a deconvolution network approach (Dosovitskiy et al.", "startOffset": 29, "endOffset": 50}, {"referenceID": 4, "context": ", 2015) and a deconvolution network approach (Dosovitskiy et al., 2014) have also recently had some success with generating natural images.", "startOffset": 45, "endOffset": 71}, {"referenceID": 3, "context": "This motivated the authors of LAPGAN (Denton et al., 2015) to develop an alternative approach to iteratively upscale low resolution generated images which can be modeled more reliably.", "startOffset": 37, "endOffset": 58}, {"referenceID": 26, "context": "The first is the all convolutional net (Springenberg et al., 2014) which replaces deterministic spatial pooling functions (such as maxpooling) with strided convolutions, allowing the network to learn its own spatial downsampling.", "startOffset": 39, "endOffset": 66}, {"referenceID": 18, "context": "Within the discriminator we found the leaky rectified activation (Maas et al., 2013) (Xu et al.", "startOffset": 65, "endOffset": 84}, {"referenceID": 30, "context": ", 2013) (Xu et al., 2015) to work well, especially for higher resolution modeling.", "startOffset": 8, "endOffset": 25}, {"referenceID": 31, "context": "We trained DCGANs on three datasets, Large-scale Scene Understanding (LSUN) (Yu et al., 2015), Imagenet-1k and a newly assembled Faces dataset.", "startOffset": 76, "endOffset": 93}, {"referenceID": 10, "context": "Recent analysis has shown that there is a direct link between how fast models learn and their generalization performance (Hardt et al., 2015).", "startOffset": 121, "endOffset": 141}, {"referenceID": 27, "context": "The resulting code layer activations are then binarized via thresholding the ReLU activation which has been shown to be an effective information preserving technique (Srivastava et al., 2014) and provides a convenient form of semantic-hashing, allowing for linear time de-duplication .", "startOffset": 166, "endOffset": 191}, {"referenceID": 2, "context": "We use Imagenet-1k (Deng et al., 2009) as a source of natural images for unsupervised training.", "startOffset": 19, "endOffset": 38}, {"referenceID": 5, "context": "The performance of DCGANs is still less than that of Exemplar CNNs (Dosovitskiy et al., 2015), a technique which trains normal discriminative CNNs in an unsupervised fashion to differentiate between specifically chosen, aggressively augmented, exemplar samples from the source dataset.", "startOffset": 67, "endOffset": 93}, {"referenceID": 28, "context": "Nearest neighbors in pixel or feature space are trivially fooled (Theis et al., 2015) by small image transforms.", "startOffset": 65, "endOffset": 85}, {"referenceID": 28, "context": "We also do not use log-likelihood metrics to quantitatively assess the model, as it is a poor (Theis et al., 2015) metric.", "startOffset": 94, "endOffset": 114}, {"referenceID": 22, "context": "scene classification learn object detectors (Oquab et al., 2014).", "startOffset": 44, "endOffset": 64}, {"referenceID": 26, "context": "Using guided backpropagation as proposed by (Springenberg et al., 2014), we show in Fig.", "startOffset": 44, "endOffset": 71}, {"referenceID": 19, "context": "In the context of evaluating learned representations of words (Mikolov et al., 2013) demonstrated that simple arithmetic operations revealed rich linear structure in representation space.", "startOffset": 62, "endOffset": 84}, {"referenceID": 4, "context": "It has been previously demonstrated that conditional generative models can learn to convincingly model object attributes like scale, rotation, and position (Dosovitskiy et al., 2014).", "startOffset": 156, "endOffset": 182}], "year": 2015, "abstractText": "In recent years, supervised learning with convolutional networks (CNNs) has seen huge adoption in computer vision applications. Comparatively, unsupervised learning with CNNs has received less attention. In this work we hope to help bridge the gap between the success of CNNs for supervised learning and unsupervised learning. We introduce a class of CNNs called deep convolutional generative adversarial networks (DCGANs), that have certain architectural constraints, and demonstrate that they are a strong candidate for unsupervised learning. Training on various image datasets, we show convincing evidence that our deep convolutional adversarial pair learns a hierarchy of representations from object parts to scenes in both the generator and discriminator. Additionally, we use the learned features for novel tasks demonstrating their applicability as general image representations.", "creator": "LaTeX with hyperref package"}}}