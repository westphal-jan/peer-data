{"id": "1511.07209", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "23-Nov-2015", "title": "Multi-Agent Continuous Transportation with Online Balanced Partitioning", "abstract": "We introduce the concept of continuous transportation task to the context of multi-agent systems. A continuous transportation task is one in which a multi-agent team visits a number of fixed locations, picks up objects, and delivers them to a final destination. The goal is to maximize the rate of transportation while the objects are replenished over time.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "histories": [["v1", "Mon, 23 Nov 2015 13:04:47 GMT  (190kb,D)", "https://arxiv.org/abs/1511.07209v1", "Submitted to AAMAS2016"], ["v2", "Thu, 28 Jul 2016 09:11:40 GMT  (74kb,D)", "http://arxiv.org/abs/1511.07209v2", "2 pages, published in the proceedings of the 15th AAMAS conference"]], "COMMENTS": "Submitted to AAMAS2016", "reviews": [], "SUBJECTS": "cs.MA cs.AI cs.RO", "authors": ["chao wang", "somchaya liemhetcharat", "kian hsiang low"], "accepted": false, "id": "1511.07209"}, "pdf": {"name": "1511.07209.pdf", "metadata": {"source": "CRF", "title": "Multi-Agent Continuous Transportation with Online Balanced Partitioning (Extended Abstract)", "authors": ["Chao Wang", "Somchaya Liemhetcharat", "Kian Hsiang Low"], "emails": ["lowkh}@comp.nus.edu.sg,", "liemhet-s@i2r.a-star.edu.sg"], "sections": [{"heading": null, "text": "Keywords Multi-agent system; Partitioning; Transportation; Cooperation"}, {"heading": "1. INTRODUCTION", "text": "We are interested in multi-agent coordination and continuous transportation, where agents visit locations in the environment to transport objects (passengers or items) and deliver them to a transportation hub. The objects replenish over time, and we consider Poisson model of object replenishment. Poisson model is suitable for scenarios with independently-occurring objects, such as passengers appear at the transit stops. Thus, the continuous transportation task is general and applicable to many real-life scenarios, e.g., first/last mile problem, package or mail collection and delivery.\nThe most similar work has been done is in multi-robot foraging and delivery problem [2, 3]. A multi-robot team forages resources from environment to a home location or delivers items to locations on request while the resources replenish over time. The goal of continuous foraging is to maximize the rate of resource foraging. Thus, continuous foraging has similarities to continuous transportation, and thus we compare our algorithms with that of [2, 3].\nIn addition, continuous area sweeping (e.g., [1]) problem has similarities to continuous transportation, with the main difference being that the agents have a carrying capacity and\nAppears in: Proceedings of the 15th International Conference on Autonomous Agents and Multiagent Systems (AAMAS 2016), J. Thangarajah, K. Tuyls, C. Jonker, S. Marsella (eds.), May 9\u201313, 2016, Singapore. Copyright c\u00a9 2016, International Foundation for Autonomous Agents and Multiagent Systems (www.ifaamas.org). All rights reserved.\nmust periodically return to the transportation hub. Hence, we compare to the benchmark of [1]. Besides, [1] uses area partitioning algorithm that relies on communications and negotiations among robots. Thus, it is prone to message loss and inconsistency. In contrast, our approach does not require communications among agents, and the partitioning is conducted separately. Hence, we present a hybrid of centralized and distributed approaches, and the efficacy is demonstrated in the evaluation section."}, {"heading": "2. PROBLEM AND APPROACH", "text": "In this section, we formally define the multi-agent continuous transportation problem in detail, and give an overview of our approach. In a continuous transportation task, a multiagent team visits a number of fixed locations and transport objects to a transportation hub."}, {"heading": "2.1 Formal Problem Definition", "text": "The multi-agent continuous transportation problem can be defined as follows:\n\u2022 A = {a1, ..., ak} is the set of transportation agents, e.g., the autonomous vehicles.\n\u2022 si, ci, and yi (\u2264 ci) denote agent ai\u2019s speed, maximum capacity, and current load, i.e., the number of objects carried.\n\u2022 L = {l1, ..., ln} is the set of locations, where l0 is the transportation hub.\n\u2022 vj,t denotes the number of objects available at location lj at time step t, e.g., the number of passengers appear at the transit stop lj .\n\u2022 v\u0302(i)j,t denotes ai\u2019s estimate of vj,t at time step t. \u2022 oj denotes the observation made at location lj . When a\ntransportation agent ai arrives at a location lj (j > 0), min(vj,t, ci\u2212 yi) objects at lj are picked up by ai, and ai makes an observation oj of the number of objects remaining. When ai arrives at l0, all yi objects carried by ai are transferred to l0. \u2022 D : L \u00d7 L \u2192 R+ is the distance function of the locations.\n\u2022 t(ai, lj , lk) = \u2308 D(lj ,lk)\nsi\n\u2309 is the time steps taken for an\nagent ai to move from location lj to lk.\nThe goal is to maximize the rate of objects delivered to the transportation hub l0 within T time steps, i.e., maximize v0,T T .\nar X\niv :1\n51 1.\n07 20\n9v 2\n[ cs\n.M A\n] 2\n8 Ju\nl 2 01\n6"}, {"heading": "2.2 Our Approach", "text": "Our approach for solving the continuous transportation problem is:\n\u2022 We assume that vj,t follows a known model \u2014 in this paper, we assume that vj,t follows the Poisson model, where the number of objects replenished every time step follows a Poisson distribution with mean \u03bbj . However, the parameters of the models (i.e., \u03bbj) are not known in advance;\n\u2022 The estimates v\u0302(i)j,t are updated using the model and observations from transportation agents ai visiting location lj ; \u2022 Following [2], the transportation agents do not share their models v\u0302\n(i) j,t since it could be expensive subject to\nthe communication bandwidth and team size. Different from [2], in our approach, the sharing of destination and load among agents are not required.\nWe contribute an online algorithm that partition the locations based on their 2D-position and estimated replenishment rate, and controls the transportation agents ai, that use v\u0302 (i) j,t to plan their next destination within the cluster of locations assigned. The algorithm dynamically repartitions locations based on information gathered by the multi-agent team."}, {"heading": "3. ALGORITHM AND EVALUATION", "text": "Our Online Balanced Partitioning (OBP) algorithm begins with statically partition the locations into clusters based on 2D-position of locations with k-means algorithm. The algorithm is inspired by algorithms proposed for continuous foraging [2]. The main difference is that the agents replan destinations in the cluster of locations assigned, instead of all the locations. The replanning of destination within each cluster is based on Greedy Rate [2], i.e., maximizing the transportation rate. Further, due to partitioning, communications of destinations and loads are not required.\nBy only considering the 2D-position of locations, the workload of each agent might not be balanced, i.e., the total replenishment rate of some clusters could be so high that the agents cannot afford it, while some other agents are idle. On the other hand, the result of standard k-means algorithm depends on the choice of initial centroid which is randomly generated. In this case, we introduce online balanced partitioning, i.e., balance estimated total replenishment rate of each cluster with information gathering. The replenishment rate is not known in advance. The agents use preset estimated replenishment rate to update its estimated number of objects. The estimate can only be corrected when they visit the location and make an observation. Since we focus on Poisson replenishment model, where number of objects replenished per time step follows a mean value, we believe that estimated replenishment rate can be corrected with continuous observations, i.e., the total number of objects replenished divided by time steps elapsed.\nOur online partitioning algorithm dynamically corrects the estimated replenishment rate by visiting a location and making observation. Once the deviation of total replenishment rate of clusters are greater than a preset threshold, repartitioning will be done immediately.\nFigure 1 shows the performance of our Online Balanced Partitioning (OBP) algorithm when the capacities of the\nagents are 10 and the number of locations are 20. In order to demonstrate the effectiveness of OBP, we compared OBP with GR+EO [2] which requires the presence of a reconnaissance agent. The solid red, blue, and gray lines show Online Balanced Partitioning (OBP), Greedy Rate with Expected Observation (GR+EO), and Random Transportation (R), and the shaded areas show the standard deviations of these algorithms.\nAs the number of agents increase, OBP outperforms all other algorithms, even GR+EO (p = 3 \u00d7 10\u221223), primarily because of the dynamic partitioning with information gathering by the multi-agent team. It clearly illustrates the efficacy of our OBP algorithms over GR. Without the use of reconnaissance agent and communications among agents, our OBP algorithm can still outperform GR+EO algorithm."}, {"heading": "Acknowledgments", "text": "This work was supported by NUS Computer Center through the use of its high performance computing facilities."}], "references": [{"title": "A multi-robot system for continuous area sweeping tasks", "author": ["M. Ahmadi", "P. Stone"], "venue": "In Robotics and Automation,", "citeRegEx": "1", "shortCiteRegEx": "1", "year": 2006}, {"title": "Continuous foraging and information gathering in a multi-agent team", "author": ["S. Liemhetcharat", "R. Yan", "K.P. Tee"], "venue": "In Proceedings of the 2015 International Conference on Autonomous Agents and Multiagent Systems,", "citeRegEx": "2", "shortCiteRegEx": "2", "year": 2015}, {"title": "Multi-robot item delivery and foraging: Two sides of a coin", "author": ["S. Liemhetcharat", "R. Yan", "K.P. Tee", "M. Lee"], "venue": null, "citeRegEx": "3", "shortCiteRegEx": "3", "year": 2015}], "referenceMentions": [{"referenceID": 1, "context": "The most similar work has been done is in multi-robot foraging and delivery problem [2, 3].", "startOffset": 84, "endOffset": 90}, {"referenceID": 2, "context": "The most similar work has been done is in multi-robot foraging and delivery problem [2, 3].", "startOffset": 84, "endOffset": 90}, {"referenceID": 1, "context": "Thus, continuous foraging has similarities to continuous transportation, and thus we compare our algorithms with that of [2, 3].", "startOffset": 121, "endOffset": 127}, {"referenceID": 2, "context": "Thus, continuous foraging has similarities to continuous transportation, and thus we compare our algorithms with that of [2, 3].", "startOffset": 121, "endOffset": 127}, {"referenceID": 0, "context": ", [1]) problem has similarities to continuous transportation, with the main difference being that the agents have a carrying capacity and", "startOffset": 2, "endOffset": 5}, {"referenceID": 0, "context": "Hence, we compare to the benchmark of [1].", "startOffset": 38, "endOffset": 41}, {"referenceID": 0, "context": "Besides, [1] uses area partitioning algorithm that relies on communications and negotiations among robots.", "startOffset": 9, "endOffset": 12}, {"referenceID": 1, "context": "\u2022 The estimates v\u0302 j,t are updated using the model and observations from transportation agents ai visiting location lj ; \u2022 Following [2], the transportation agents do not share", "startOffset": 133, "endOffset": 136}, {"referenceID": 1, "context": "Different from [2], in our approach, the sharing of destination and load among agents are not required.", "startOffset": 15, "endOffset": 18}, {"referenceID": 1, "context": "The algorithm is inspired by algorithms proposed for continuous foraging [2].", "startOffset": 73, "endOffset": 76}, {"referenceID": 1, "context": "The replanning of destination within each cluster is based on Greedy Rate [2], i.", "startOffset": 74, "endOffset": 77}, {"referenceID": 1, "context": "In order to demonstrate the effectiveness of OBP, we compared OBP with GR+EO [2] which requires the presence of a reconnaissance agent.", "startOffset": 77, "endOffset": 80}], "year": 2016, "abstractText": "We introduce the concept of continuous transportation task to the context of multi-agent systems. A continuous transportation task is one in which a multi-agent team visits a number of fixed locations, picks up objects, and delivers them to a transportation hub. The goal is to maximize the rate of transportation while the objects are replenished over time . In this extended abstract, we present a hybrid of centralized and distributed approaches that minimize communications in the multi-agent team. We contribute a novel online partitioning-transportation algorithm with information gathering in the multi-agent team.", "creator": "LaTeX with hyperref package"}}}