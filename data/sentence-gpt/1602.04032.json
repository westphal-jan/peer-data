{"id": "1602.04032", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "12-Feb-2016", "title": "A Truthful Mechanism with Biparameter Learning for Online Crowdsourcing", "abstract": "We study a problem of allocating divisible jobs, arriving online, to workers in a crowdsourcing setting which involves learning two parameters of strategically behaving workers. Each job is split into a certain number of tasks that are then allocated to workers. Each arriving job has to be completed within a deadline and each task has to be completed satisfying an upper bound on probability of failure.\n\n\n\n\"The number of people who come to work for a company is very large and large because it has a significant number of people who are already employed. The only real reason why we don't consider it is because the number of people who come to work for a company is because it has a significant number of people who are already employed,\" Boonen says.\nThe project was conducted on the behalf of an IT consultant. Boonen says the result is that, on average, 2-5 people will work on their own in a short period of time, and that they will never have to pay any additional wages because they will get a cut.\nWhile the researchers say it is interesting to see what these results will be, they are confident that in the long term, a team of researchers can tackle the problem.\n\"If you want to create the first example of what a team can do to address the problem, you have to look at how many people are involved with the problem.\"", "histories": [["v1", "Fri, 12 Feb 2016 12:36:13 GMT  (303kb,D)", "http://arxiv.org/abs/1602.04032v1", "To appear as Extended Abstract in AAMAS 2016"]], "COMMENTS": "To appear as Extended Abstract in AAMAS 2016", "reviews": [], "SUBJECTS": "cs.AI cs.GT cs.HC", "authors": ["satyanath bhat", "divya padmanabhan", "shweta jain", "y narahari"], "accepted": false, "id": "1602.04032"}, "pdf": {"name": "1602.04032.pdf", "metadata": {"source": "CRF", "title": "A Truthful Mechanism with Biparameter Learning for Online Crowdsourcing", "authors": ["Satyanath Bhat", "Divya Padmanabhan", "Shweta Jain"], "emails": [], "sections": [{"heading": "1 Introduction", "text": "Crowdsourcing is widely used in procuring labels and services for traditional AI applications. Often many of the tasks crowdsourced are more readily accomplished by humans than computers. An additional advantage is the scalable and cost-effective nature of crowdsourcing. However, typical crowdsourcing platforms may not consider several important aspects of traditional\nar X\niv :1\n60 2.\n04 03\n2v 1\n[ cs\n.A I]\n1 2\nplanning such as ensuring work completion within a strict deadline and with assured guarantees on the quality.\nAs a motivating example for this paper, consider a sequence of jobs arriving online where each job corresponds to translating a large document which has to be completed within a deadline and with an assured level of accuracy. It may not be possible for a single individual worker to accomplish this job, so the requester could split such a job into tasks (either at chapter or section or any other level) and allocate each task to a crowd worker. Due to the very nature of the task, a worker, if employed for a long duration, might start committing errors. We refer to the duration until which an agent works without committing any error as the time to failure (TTF). Also, each worker differs in the time taken to complete the entire job (if the entire job is executed by the worker). The time taken by a worker to complete the job all by himself is called the job completion time (JCT) of that worker. Each worker incurs a certain cost to complete the entire job. Note that the workers are heterogeneous in terms of their costs, JCT, and TTF. Moreover, JCT and TTF of the workers are stochastic. An additional non-trivial challenge occurs when crowd workers are strategic and may misrepresent their costs in the hope of gaining higher utility. This setting occurs in other problems such as tagging of a large repository of images, audio transcriptions, etc.\nIn this work, we consider jobs which (a) arrive online, (b) are divisible (into tasks), (c) have strict completion deadlines, and (d) are to be completed with an assured accuracy. We propose a multi-armed bandit (MAB) mechanism which learns the two parameters (mean job completion time (MJCT) and mean time to failure (MTTF)) of the workers while eliciting their privately held costs truthfully. We show that the proposed MAB mechanism minimizes the regret while meeting the deadline and accuracy requirements on every job. The following are the specific contributions of this work.\n1. Non-strategic, with learning: We look at the problem of allocating divisible online jobs to crowd workers so as to meet the constraints on deadline and accuracy (Section 4). The underlying optimization problem turns out to be non-trivial since the parameters MJCT and MTTF of the workers are unknown. We overcome this challenge by devising a biparameter learning scheme based on the Robust UCB algorithm [5]. Further, we embed this learning scheme into our social welfare maximizing algorithm, which we refer to as SW-GREEDY.\n2. Strategic, with learning: We next non-trivially extend the results above to the setting where worker costs are privately held (Section 5) by designing a mechanism (TD-UCB). This mechanism is is dominant strategy incentive compatible and ex-post individually rational (Theorem 1).\n3. Regret Analysis: In Section 6, we show, for non-strategic as well as strategic settings, that the number of jobs for which a non-optimal worker\nset is chosen, is upper bounded by O(log T ) (Theorem 2), where T is the total number of jobs to be completed. Moreover, once an optimal worker set is selected, the allocation algorithm converges asymptotically to an efficient allocation, ensuring that the average regret goes to zero in the limit (Theorem 3).\n4. Simulations: Finally, we show the practical efficacy of our learning mechanism via simulations in Section 7."}, {"heading": "2 Previous Work", "text": "We now look at previous work related to our setting. We group the relevant literature based on whether or not crowd workers are strategic.\nIn the non-strategic case, most of the work in crowdsourcing has focused on models for aggregating labels and building classifiers [13, 12]. Many efforts also address problems similar to the one considered in our paper. Faradani et al. [9] look at the design of pricing schemes dependent on the completion times of the workers. The strategic nature of the workers is not considered here. The problem of completing tasks within a deadline is also investigated by Yu et al. [16]. The authors consider the setting where the workers delegate tasks to other workers when they are unable to complete the work within a deadline. Here the costs to workers are assumed to be known and workers are non-strategic. Under a different setup, Ding et al. [8] look at the budgeted multi-armed bandit problem where the two parameters stochastic costs and stochastic rewards are learnt. However, they do not consider strategic workers.\nIn the strategic case, Chandra et al. [6] look at allocating indivisible tasks to strategic crowd workers under deadline constraints with the assumption that the reliability (in terms of completion of the task) of the agents is common knowledge and not estimated. Singer and Mittal [14] and Biswas et al. [3] look at pricing mechanisms in the presence of budget constraints and task completion deadlines. However, the heterogeneity with respect to time to failure is not modelled. Tran-Thanh et al. [15] look at crowdsourcing classification tasks with the goal of trading off cost and accuracy of the estimation. However the TTF and JCT of the workers is not modeled here. Choosing an optimal worker set in order to obtain an assured accuracy level has been studied in Jain et al. [11]. The allocation algorithm makes use of the multi-armed bandits abstraction Auer et al. [1]. A version of their allocation algorithm was designed for the case where workers are strategic with respect to bidding their costs. However, their setting does not look at the completion of tasks within a deadline. The problem of allocating tasks concurrently to several workers in order to meet deadlines is looked at by Gerding et al. [10]. The work uses a variant of VCG mechanism to elicit\nthe costs truthfully from the workers. They consider stochastic completion times of tasks but do not consider the time to failure during the allocation.\nOur work differs from all the work listed above in that, we design an allocation scheme to complete jobs within a deadline while simultaneously learning the mean completion time as well as the mean time to failure of the workers. We also design a mechanism to elicit the costs of the workers truthfully."}, {"heading": "3 The Model", "text": "Let N = {1, . . . , n} denote the set of crowd workers (also referred to as agents) available to the requester. A sequence of T homogeneous jobs arrives at the platform, one at a time. Following are some of the design issues pertaining to the requester.\n1. Job Parameters\n(a) Deadline: The clock starts ticking for a job as soon as it arrives. We use D to denote the deadline. The deadline D on each job is an upper bound on the duration, starting from the arrival of that job, before which the job is required to be completed in expectation.\n(b) Task creation: The requester can divide a current job t (t = 1, . . . , T ) into a certain number of tasks so as to facilitate completion of the job by\nthe deadline D. We use x (t) i to denote the fraction of the job t assigned as a task to the worker i. Therefore, 0 \u2264 x(t)i \u2264 1 and \u2211n i=1 x (t) i = 1. We assume arbitrary division of a given job into tasks for ease of exposition. However, this assumption can be relaxed to capture meaningful constraints such as the size of the task.\n(c) Threshold on probability of failure for tasks: A worker is more likely to commit an error if he works for a longer duration on a task. We say a worker has failed when he commits an error. We use \u03b5 to denote (the common) threshold on probability of failure for any task. This threshold allows the requester to control the overall \u201cquality\u201d of the job.\n2. Worker Parameters\n(a) Job Completion Time (JCT): A worker has a stochastic job completion time, which is the time he requires to complete the entire job by himself. JCT for a worker is random variable with a fixed but unknown mean. We refer to the mean job completion time as MJCT. The requester wishes to learn the MJCT for each worker. If \u03c1i is the MJCT of worker i, then\nthe task allocation x (t) i will meet the deadline constraint in expectation if x (t) i \u00d7 \u03c1i \u2264 D.\n(b) Time to Failure (TTF): A worker is also characterized by a stochastic time to failure, which denotes the duration for which a worker would work without a failure. Like JCT, TTF also has a fixed yet unknown mean, which the requester wishes to learn. If Fi is the CDF of TTF\nfor agent i, who workers for a expected duration x (t) i \u00d7 \u03c1i on the task allocation given by the fraction x (t) i of job t, the requirement on threshold probability error dictates Fi(x (t) i \u00d7 \u03c1i) \u2264 \u03b5. (c) Cost Incurred: Worker i has a privately held cost ci \u2208 [c, c\u0304] which represents the cost incurred by worker i to complete the job entirely on his\nown. Therefore, the cost involved to complete x (t) i fraction of the job by the worker i is cix (t) i .\n3. Goal of Optimization Problem: The constraints on deadline and threshold on probability of failure for every task has to be met in a cost optimal way for every online job t. Thus, the underlying optimization problem for the entire collection of jobs {1, 2, . . . , T} is given by eq. (1).\nmin x (t) i \u2208[0,1] T\u2211 t=1 n\u2211 i=1 cix (t) i ,\nsubject to,\u2211n i=1 x (t) i = 1,\u2200t\nCompletion time(x (t) i ) \u2264 D \u2200i \u2208 N, \u2200t,\nProbability of failure(x (t) i ) \u2264 \u03b5 \u2200i \u2208 N, \u2200t.\n(1)\nAs mentioned earlier, the JCT and the TTF of the workers are stochastic in nature. We assume the JCT of each worker follows a log-normal distribution with unknown yet fixed mean \u03c1i \u2208 [\u03c1, \u03c1\u0304] while the TTF for each worker follows an exponential distribution with mean \u03b2i \u2208 [\u03b2, \u03b2\u0304].\nRemark 1 (Choice of Distributions). The choice of log-normal distribution is due to its wide applicability in social sciences and economics to model similar quantities. However any suitable non-negative random variable whose distribution is sub-Gaussian (or sub-exponential) may be used. As discussed, the errors in this setting are introduced due to higher working duration on the task. This is analogous to the modelling of failure as function of time, in biological or computer or reliability literature, as exponential distributions. Hence, we model the TTF of the workers as exponential.\nThe optimization problem stated in eq. (1) involves a learning scheme along with cost minimization across all the T online jobs. However, due to independence across the jobs, the problem can be decomposed into a sequential cost minimization problem corresponding to each job (t). Therefore, in\neq. (1) the summation over the jobs can be omitted. This enables us to use xi in place of x (t) i for the sequential optimization problem for each job."}, {"heading": "4 The Case of Non-Strategic Workers", "text": "We first study the scenario where the costs ci incurred by the workers are common knowledge. If the means (\u03c1i and \u03b2i) are known to the requester, no feasible allocation xi to the worker i should exceed D/\u03c1i. The additional requirement on accuracy requires that the probability of a worker failing in the duration \u03c1ixi does not exceed \u03b5. This is equivalent to the constraint Fi(\u03c1ixi) \u2264 \u03b5 where Fi is the CDF of the random variable TTF of worker i which we model as the exponential distribution with mean \u03b2i. On simplification, the requester\u2019s optimization problem reduces to eq. (2).\nmin xi\u2208[0,1] n\u2211 i=1 cixi,\nsubject to,\u2211n i=1 xi = 1,\nxi \u2264 1\u03c1i min ( D,\u03b2i ln ( 1 1\u2212\u03b5 )) \u2200i \u2208 N,\n(2)\nIn practice, \u03c1i and \u03b2i are not known and need to be learnt. We make use of the multi-armed bandit (MAB) abstraction for learning these parameters. More specifically, since \u03c1i and \u03b2i are sub-exponential distributions, we appeal to the Robust UCB technique [5]. While \u03c8-UCB algorithm [4] is a regret minimizing scheme for learning the mean of sub-Gaussian distributions, for heavy tailed distributions (e.g. log normal and exponential), Robust UCB has been shown to be regret minimizing [5]. We adopt the Robust UCB scheme with truncated empirical mean as the estimator."}, {"heading": "4.1 Difficulty in Learning \u03b2i", "text": "If a worker i, allocated a fraction xi of the job, takes time \u03c4 for completion, then \u03c4/xi is a sample from the distribution log-normal(\u03c1i). Therefore, every allocation contributes one such sample for the Robust UCB algorithm estimating \u03c1i. However, for estimating \u03b2i, each sample allocation fed to the Robust UCB algorithm must correspond to a failure, but this is not practical as we do not observe failure at every instance of allocation. To handle this difficulty, we propose to use a surrogate random variable. Consider the experiment where a worker i is allocated a task (fraction of a job) on which the worker spends a duration of at least \u03b4. The experiment is deemed to have failed if the worker i fails in the first \u03b4 duration of allocation, otherwise\nit is deemed a success. Let N (i) \u03b4 be the number of such independent experiments till a failure is encountered. We propose to use the random variable \u03b2 \u2032 \u03b4,i = \u03b4 \u00d7N (i) \u03b4 to construct a sample from exponential(\u03b2i). To obtain such a sample, for every job t, we observe for a duration \u03b4 to see if any of the allocated workers have failed. Let \u03b7 (i) \u03b4 be the number of contiguous instances (of jobs) of allocation during which a worker i does not fail in the interval \u03b4. Note that \u03b7 (i) \u03b4 is a sample from N (i) \u03b4 . Therefore, the value \u03b4\u00d7\u03b7 (i) \u03b4 forms a sample of interest. Once a sample is obtained, \u03b7 (i) \u03b4 is reset and the process is again repeated to collect more samples. The expectation of the surrogate random variable in the limit coincides with \u03b2i due to Lemma 1.\nLemma 1. lim\u03b4\u21920 E[\u03b2 \u2032 \u03b4,i] = \u03b2i\nProof. By definition, \u03b2 \u2032 \u03b4,i = N (i) \u03b4 \u00d7\u03b4. Note, N\u03b4 \u223c Geometric(1\u2212exp(\u2212\u03b4/\u03b2i)) and therefore, E[N\u03b4] = 11\u2212exp(\u2212\u03b4/\u03b2i) .\nlim \u03b4\u21920\nE[\u03b2 \u2032 \u03b4,i] = lim\n\u03b4\u21920\n\u03b4\n1\u2212 exp(\u2212\u03b4/\u03b2i) = \u03b2i (3)\nwhere eq. (3) follows by applying the L\u2019Hospital\u2019s rule."}, {"heading": "4.2 SW-GREEDY: A Greedy Allocation", "text": "The workers are indexed in an increasing order of their costs and each worker i is allocated the largest possible fraction xPSTi which does not violate the constraints in eq. (2) till all tasks of the job are allocated.\nThe constraint 1\u03c1i min ( D,\u03b2i ln ( 1 1\u2212\u03b5 )) , involves means which are unknown. As mentioned earlier, we use Robust UCB to learn estimates for \u03c1i and \u03b2i. \u03c1\u0302 + i and \u03b2\u0302 + i are the upper confidence indices while \u03c1\u0302 \u2212 i and \u03b2\u0302 \u2212 i are the lower confidence indices of MJCT and MTTF respectively, obtained from Robust UCB. \u03c1\u0302i and \u03b2\u0302i are the empirical estimates of MJCT and MTTF respectively for worker i. We could substitute \u03c1\u0302\u2212i , \u03c1\u0302i or \u03c1\u0302 + i as the estimate for \u03c1i in our constraint. A higher value of \u03c1i enforces a lower allocation to worker i compared to when a lower value of \u03c1i is used. Hence we refer to \u03c1\u0302+i as a pessimistic estimate for \u03c1i. By a similar reasoning, we refer to \u03b2\u0302\u2212i as the pessimistic estimate for \u03b2i. The use of the pessimistic estimates ensures that even with the true underlying means the constraint in eq. (2) is satisfied.\nThe allocation algorithm discussed above ensures that the social welfare regret of the learning scheme is optimized, hence we refer to the above allocation as SW-GREEDY (Algorithm 1). The social welfare is defined as follows.\nDefinition 1. Social Welfare: Social welfare of a feasible (i.e. satisfying eq. (2)) allocation x is the sum of valuations of the agents under that allocation. In this setting, the valuation of a crowd agent is \u2212cixi. Therefore, social welfare is given by \u2211n i=1\u2212cixi.\nEvery worker i is paid an amount equal to the cost incurred, i.e. xPSTi (t)\u00d7 ci, where x PST i is the allocation to agent i given by Algorithm 1.\nRemark 2 (Pessimistic Selection). The fundamental underlying philosophy of the UCB family of algorithms is \u201coptimism under uncertainty.\u201d Intuitively, this optimism helps in adequate exploration realtive to a naive scheme which just uses the empirical estimate. In our work, we do not use this philosophy implicitly, however, due to the greedy nature of the allocation scheme, the pessimistic allocation set is a superset of the optimistic allocation.\nALGORITHM 1: SW-GREEDY Allocation Algorithm\nInput: Set of workers N , number of jobs T , deadline D, accuracy level \u03b5, input cost vector: c1 \u2264 c2 \u2264 . . . \u2264 cn (By re-indexing N)\n1 \u2200i \u2208 N , \u03c1\u0302i = \u03c1\u0304, \u03c1\u0302+i = \u03c1\u0304, \u03c1\u0302 \u2212 i = \u03c1, Ni,t=0 2 \u03b2\u0302i = \u03b2, \u03b2\u0302 + i = \u03b2\u0304, \u03b2\u0302 \u2212 i = \u03b2, N \u03b2 i,t = 0, 3 \u03b7 (i) \u03b4 = 0\n4 for Online job arrival t = 1, . . . , T do\n5 xPST(t) = {xPST1 (t), . . . , xPSTn (t)} = {0, . . . , 0} 6 i = 1 7 while \u2211n j=1 x PST j (t) < 1 do 8 xPSTi (t) = 1 \u03c1\u0302+i min ( D,\u03b2\u2212i ln [ 1 1\u2212\u03b5\n]) 9 if 1\u2212 \u2211i\u22121 j=1 x PST j (t) < x PST i (t) then\n10 xPSTi (t) = 1\u2212 \u2211i\u22121 j=1 x PST j (t)\n11 i = i+ 1\n12 Define k\u0304t = max{i : xPSTi > 0} 13 Allocate the job t as per xPSTi 14 Observe \u03c4\u0303i, the time of completion of x PST i by i 15 \u2200i \u2208 {1, . . . , k\u0304t}, Ni,t = Ni,t\u22121 + 1 16 \u03c1\u0302i = ( Ni,t\u22121 \u00d7 \u03c1\u0302i + \u03c4\u0303ixPSTi (t) ) \u00d7 1Ni,t 17 for i \u2208 {1, . . . , k\u0304t} do 18 if Worker i made an error during \u03b4 then 19 \u03b2\u0302i = \u03b2\u0302i\u00d7N\u03b2i,t\u22121+(\u03b4\u00d7\u03b7 (i) \u03b4 )\nN\u03b2i,t\u22121+1\n20 N\u03b2i,t = N \u03b2 i,t\u22121 + 1 21 \u03b7 (i) \u03b4 = 0\n22 else 23 \u03b7 (i) \u03b4 = \u03b7 (i) \u03b4 + 1 24 N\u03b2i,t = N \u03b2 i,t\u22121\nInitialize\nPessimistic Selection\nUpdates for Surrogate of \u03b2i"}, {"heading": "5 The Case of Strategic Workers: TD-UCB", "text": "Here, before an allocation is performed, the agents announce their bids. These bids may or may not be equal to their true private costs. We denote the bid profile by (bi, b\u2212i), where bi is the bid of agent i and b\u2212i denotes the collection of bids of all agents except agent i. In order to ensure that the agents bid their costs truthfully, we introduce a mechanism TD-UCB. The allocation rule remains the same as the one for the case where the workers are non-strategic. We use the allocation given in Algorithm 1 replacing the input costs with the bids."}, {"heading": "5.1 Payment Scheme", "text": "Let \u03bet denote a tuple of allocation and performance of the allocated workers for the job t. The learning until job t is captured in the history ht = {\u03bek}tk=0. In order to specify the payment scheme, we require the notion of \u2018externality\u2019 imposed by an agent on another. We denote the externality imposed by agent i on j as xEXTi,j (bi, b\u2212i;ht, t), which signifies the additional fraction of the job allocated to the agent j in the absence of agent i. The externality for the job t depends on the bid profile (bi, b\u2212i) as well as the history of allocations till job t. Let kt be the agent with the largest reported bid in the worker set chosen by the allocation scheme. Figure 1 provides a schematic diagram indicating the position of the bids and the agents chosen by our algorithm.\nAgent 1\nb1 \u2264\nAgent 2\nb2 \u2264 . . .\nAgent kt\nbkt\u2264 \u2264\nAgent n\nbn\u2264. . .\nWorkers chosen by the allocation\nBids by the workers\nWe now propose a payment structure in eq. (5) that ensures truthful bidding and positive utility to the participating agents (Theorem 1).\npi(bi, b\u2212i; t) =\n{ 0 if i > kt,\nZ3 otherwise, where, (5)\nZ3 = n\u2211 s=kt [ xEXTi,s (t)\u00d7 bs ] + xPSTi (t)\u2212 n\u2211 s=kt xEXTi,s (t) \u00d7 c\u0304 Remark 3 (Notation). All the mechanism side parameters such as xPSTi or pi are a function of (bi, b\u2212i;ht, t). Similarly, the agent side parameters such as utility ui depend on the tuple (bi, b\u2212i; ci, ht, t). Note that the agent side parameters have an additional dependency on the true cost ci. Whenever clear from the context, we drop one or more of these dependencies for ease of notation.\nRemark 4 (Externality). Our mechanism is an externality based scheme like the VCG mechanism. We now set about the task of proving that the mechanism is truthul, regret minimizing, and individually rational, while learning the associated stochastic parameters. Earlier works have shown the non-triviality involved in the design of such learning mechanisms [2, 7]."}, {"heading": "5.2 Properties of TD-UCB Mechanism", "text": "Definition 2. Utility of an Agent: The utility of an agent in this setting is the difference between the valuation of an allocation and the payment made. The utility is given by the following.\nui(bi, b\u2212i; ci, ht, t) = \u2212ci \u00d7 xPSTi (bi, b\u2212i; ci, ht, t) + pi(bi, b\u2212i; ci, ht, t)\nDefinition 3. Dominant Strategy Incentive Compatible (DSIC): A mechanism is DSIC if the utility ui(ci, b\u2212i; ci) \u2265 ui(bi, b\u2212i; ci) \u2200bi \u2208 [c, c], \u2200b\u2212i \u2208 [c, c]n\u22121, \u2200i \u2208 N , where bi and ci are the bid and true cost incurred by the worker i respectively, b\u2212i is the bid profile of all agents other than i.\nA DSIC mechanism ensures that an agent obtains the highest utility by bidding his true cost, irrespective of the bids of other agents.\nDefinition 4. Ex-post Individually Rational (IR): A mechanism is ex-post individually rational if ui(ci, b\u2212i; ci) \u2265 0), \u2200b\u2212i \u2208 [c, c]n\u22121 \u2200i \u2208 N .\nAn IR mechanism ensures that for every agent, the utility obtained from truthful bidding of the costs is non-negative.\nTheorem 1. The TD-UCB mechanism is DSIC and IR.\nProof. IR is immediate and follows from the definition of the payment scheme of the mechanism (eq. (5)). We prove the DSIC property by examining different possible scenarios of allocation for an agent. In each of these scenarios, we compute the utilities with truthful bids as against strategic misreports of bids.\nFor performing any job t, utility of a worker i is defined as follows.\nui(bi, b\u2212i; ci) = pi(bi, b\u2212i)\u2212 ci \u00d7 xPSTi (bi, b\u2212i) (6)\nwhere xPSTi (bi, b\u2212i) and pi(bi, b\u2212i) are the allocation and the payment to the worker i respectively. We consider the following three possible scenarios for the positioning of each worker i in the increasing order of ranking of the bids of the workers. We refer to the set of workers with non-zero task allocation as the active set in this proof. Throughout the proof, we denote by A the active set of allocated workers when agent i bids his true cost ci. We denote by A\u2032 the active set when the agent bids untruthfully.\n\u2022 Case 1: i > kt In this scenario, when the agent bids truthfully,\nb1 < b2 < \u00b7 \u00b7 \u00b7 < bkt\ufe38 \ufe37\ufe37 \ufe38 Bids fromA < \u00b7 \u00b7 \u00b7 < bi\u22121 < ci < bi+1 < \u00b7 \u00b7 \u00b7 < cN\nWhen the worker reports his cost truthfully (i.e, bi = ci), he does not receive any allocation and therefore ui(ci, b\u2212i; ci) = 0. Now we consider the following two cases when he misreports his cost.\na) Overbid of cost (bi > ci) : Since xPSTi (ci, b\u2212i; ci) = 0, a higher bid bi would only place the agent at a position oi(bi, b\u2212i) \u2265 oi(ci, b\u2212i) = i in the revised ranking order. At the position oi(bi, b\u2212i), again the allocation to him would be zero, that is, xPSTi (bi, b\u2212i; ci) = 0 and thereby the utility from overbidding would be same as the utility from truthful bidding. Hence, he does not benefit from overbidding his cost.\nb) Underbid of cost (bi < ci): Here there could be two possibilities:\n(i) bi \u2265 bkt : This scenario is identical to case 1(a) shown above and hence there is no incentive for the agent to bid in this manner.\n(ii) bi < bkt : With such a bid, the agent i is able to enter the active set of allocated workers. Let the position of the agent i in the new active set A\u2032 be j, that is, oi(bi, b\u2212i) = j, and the agent with the highest bid in A \u2032 is kt \u2032 \u2264 kt.\nTherefore, by underbidding his cost, agent i is able to move the workers\np \u2208 {kt \u2032 + 1, \u00b7 \u00b7 \u00b7 , kt} out of the active set. We now show that such a bid does not fetch agent i an increased utility. As per the payment structure,\npi(bi, b\u2212i) = kt\u2211 s=kt \u2032 xEXTi,s (bi, b\u2212i)bs\n+ N\u2211 s=kt+1 xEXTi,s (bi, b\u2212i)bs\n+ xPSTi (bi, b\u2212i)\u2212 N\u2211 s=kt \u2032 ,s 6=i xEXTi,s (bi, b\u2212i)  c (7) The second term in eq. (7) is zero, this is due to the fact that in absence of agent i {1, 2, . . . , kt} can complete the current job t. Therefore, with even an underbid i has no externality on agents {kt + 1, . . . , n}. The third term in eq. (7) is also zero as the allocation with truthful bidding was enough to complete the job t by agents {1, 2, . . . , kt}. Hence in absence of i the allocation with underbid xPSTi (bi, b\u2212i) is met by the externality sum. By underbidding, the agent i is therefore able to obtain the portions of the job which would have been allocated to s \u2208 {kt \u2032 + 1, \u00b7 \u00b7 \u00b7 , kt}. For all such agents s, xEXTi,s (bi, b\u2212i) > 0, since in the absence of i, these agents would have received an allocation. But note that bs < ci and so these agents contribute towards a negative utility. Therefore the net utility ui(bi, b\u2212i; ci) < ui(ci, b\u2212i; ci).\n\u2022 Case 2: i = kt. When agent i bids truthfully, the active set is as follows:\nb1 \u2264 \u00b7 \u00b7 \u00b7 \u2264 bj \u2264 \u00b7 \u00b7 \u00b7 \u2264 ci\ufe38 \ufe37\ufe37 \ufe38 Bids fromA \u2264 bi+1 \u00b7 \u00b7 \u00b7\nand the payment to agent i\npi(ci,b\u2212i) = N\u2211 s=i+1 xEXTi,s (ci, b\u2212i)bs\n+ ( xPSTi (ci, b\u2212i)\u2212 n\u2211 s=i+1 xEXTi,s (ci, b\u2212i) ) c (8)\na) Overbid of cost (bi > ci): Here we look at two possible values of the range of the bids.\n(i) An overbid such that agent i no longer belongs to the active set A\u2032: At the position oi(bi, b\u2212i), the allocation to him is zero, that is, x PST i (bi, b\u2212i; ci) =\n0 and thereby the utility from overbidding would be less than the utility\nfrom truthful bidding. Hence, he does not benefit from overbidding his cost in this manner.\n(ii) An overbid such that agent i remains in the active set but brings in other higher cost agents into the active set : Suppose the active set A\u2032\ncontains the agents {i + 1, \u00b7 \u00b7 \u00b7 , p} in addition to the set A, such that, without loss of generality,\nb1 < \u00b7 \u00b7 \u00b7 < bi\u22121 < bi+1 < \u00b7 \u00b7 \u00b7 < bp < bi\ufe38 \ufe37\ufe37 \ufe38 Bids fromA\u2032 < bp+1 < \u00b7 \u00b7 \u00b7\nThe payment to agent i with overbid is,\npi(bi,b\u2212i) = N\u2211\ns=p+1\nxEXTi,s (bi, b\u2212i)bs\n+ (xPSTi (bi, b\u2212i)\u2212 n\u2211\ns=p+1\nxEXTi,s (bi, b\u2212i))c (9)\nSince the agents {i+ 1, \u00b7 \u00b7 \u00b7 , p} have moved before i in the ordering of the bids, those agents do not contribute to pi(bi, b\u2212i) further. However, for the agents s \u2208 {p + 1, \u00b7 \u00b7 \u00b7 , N}, xEXTi,s (bi, b\u2212i) = xEXTi,s (ci, b\u2212i) because the same proportion of job must be reassigned to the agent s when i bids bi as well as when i is truthful. The first term in eq. (8) therefore strictly exceeds first term in eq. (9). We now show that the second terms in eq. (8) and eq. (9) are equal. Observe that,\nxPSTi (ci, b\u2212i) = x PST i (bi, b\u2212i) + p\u2211 s=i+1 xPSTj (bi, b\u2212i)\n= xPSTi (bi, b\u2212i) + p\u2211 s=i+1 xEXTi,s (bi, b\u2212i)\nA simple substitution for xPSTi (bi, b\u2212i) in eq. (9) shows that the second terms in eq. (8) and eq. (9) are equal. Therefore the overall payment pi(bi, b\u2212i) < pi(ci, b\u2212i) and further ui(bi, b\u2212i; ci) < ui(ci, b\u2212i; ci).\nb) Underbid of cost ( bi < ci): Note that in this scenario, there are the following two possibilities.\n(i) The active set A\u2032 = A. The agent i moves to a new position j, that is, oi(bi, b\u2212i) = j. Without loss of generality, we can consider that the agent with the highest bid in A\u2032 is now agent i \u2212 1. The ordering of the agents is now,\nb1 \u2264 \u00b7 \u00b7 \u00b7 \u2264 bj\u22121 \u2264 bi \u2264 bj \u2264 bi\u22121\ufe38 \ufe37\ufe37 \ufe38 Bids fromA\u2032 \u2264 bi+1 \u00b7 \u00b7 \u00b7 .\nBy our payment structure,\npi(bi,b\u2212i) = N\u2211 s=i\u22121 s 6=i xEXTi,s (bi, b\u2212i)bs\n+ (xPSTi (bi, b\u2212i)\u2212 N\u2211\ns=i\u22121 s 6=i\nxEXTi,s (bi, b\u2212i))c (10)\nSince the active set remains the same in spite of underbidding, \u2200s, i+ 1 \u2264 s \u2264 N , xEXTi,s (bi, b\u2212i) = xEXTi,s (ci, b\u2212i) and in addition, xEXTi,i\u22121(bi, b\u2212i) > 0, but, bi\u22121 < ci. Therefore, the first term in eq. (8) exceeds the first term in eq. (10). We also know that,\nxPSTi (bi, b\u2212i) = x PST i (ci, b\u2212i) + x EXT i,i\u22121(bi, b\u2212i) (11)\nsince the additional allocation that i gets due to an overbid would be allocated to the last agent i \u2212 1 in A\u2032, in the absence of i. A simple substitution in eq. (10) shows that the second terms in eq. (8) and eq. (10) are equal. Therefore ui(bi, b\u2212i; ci) < ui(ci, c\u2212i; ci). (ii) The active set A\u2032 due to underbidding by agent i is smaller than the active set A due to truthful bidding by agent i: This means that some agents get removed from A. Suppose the agents s \u2208 {j + 1, \u00b7 \u00b7 \u00b7 , i \u2212 1} get pushed out in the active set A\u2032. Then by a similar argument as in the case 2 (b) (i) above, xEXTi,s (bi, b\u2212i) > 0, but bs < ci. Therefore these agents contribute towards a negative utility and hence, ui(bi, b\u2212i; ci) < ui(ci, c\u2212i; ci).\n\u2022 Case 3: i < kt\na) Overbid of cost (bi > ci): If the agent i bids a higher cost, the position of i in the ranking order changes to one of the following.\n(i) i \u2264 oi(bi, b\u2212i) < kt: The allocation to the worker remains the same as when he is truthful, that is, xPSTi (bi, b\u2212i) = x PST i (ci, b\u2212i). Our pay-\nment structure ensures that the payment pi(bi, b\u2212i) = pi(ci, b\u2212i) and hence ui(bi, b\u2212i; ci) = ui(ci, b\u2212i; ci). (ii) oi(bi, b\u2212i) = kt: In this case, agent i ends up losing a part of x PST i (ci, b\u2212i)\nto the worker kt. This scenario is analogous to Case 2 (a) (ii) where a worker who bids truthfully would have been at the last position kt, but by overbidding ends up sharing his allocation with other agents. Therefore ui(bi, b\u2212i; ci) < ui(ci, b\u2212i; ci). (iii) oi(bi, b\u2212i) > kt: Here, agent i does not receive any allocation and thereby his payment as well as utility are both zero.\nb) Underbid of cost (bi < ci): Upon bidding a lower cost, the agent moves further up in the ranking order, that is oi(bi, b\u2212i) \u2264 i. The allocation also does not change, that is, xPSTi (bi, b\u2212i) = x PST i (ci, b\u2212i). Our payment structure ensures that the pay-\nment pi(bi, b\u2212i) = pi(ci, b\u2212i) and hence ui(bi, b\u2212i; ci) = ui(ci, b\u2212i; ci).\nFuture rounds: If the agent i ignores the loss incurred in the current job t and chooses to manipulate the current bid for future utility, the resulting argument rolls back to one the above three cases."}, {"heading": "6 Regret Analysis", "text": "In the strategic as well as the non-strategic settings, the underlying optimization problem involves parameters that are learnt in tandem. Hence regret is an important notion which we analyse in this section. Following are some relevant definitions. A problem instance in this space is characterized by a set of crowd agents N , the vector c of their costs, the mean vectors (\u03c1, \u03b2), and the design parameters \u2013 Deadline(D), accuracy (\u03b5).\nDefinition 5. Optimal worker set: For a problem instance with all the parameters known, in the solution to the optimization problem of eq. (2), we refer to the set of agents allocated non-zero fraction of the job as the the optimal worker set.\nDefinition 6. Optimal allocation: We refer to the solution of eq. (2) as the optimal allocation.\nDefinition 7. \u2206-Separation: Let k\u2217 be the agent in the optimal worker set with the highest bid. In the optimal allocation (social welfare maximizing), all workers\u2019 allocation except k\u2217 would meet the constraints in eq. (2) with equality. We refer to the \u2206-separation as the additional fraction of the job which agent k\u2217 can take without violating any of the constraints. As all the stochastic parameters in this space are continuous, almost surely \u2206 > 0.\nDefinition 8. Regret: A learning mechanism in this space suffers a loss in social welfare due to either a) non-optimal set selection or b) due to suboptimal allocation within the optimal set. Formally, regret of a mechanism A, is given by\nR(A) = T n\u2211 i=1 cix \u2217 i \u2212 T\u2211 t=1 n\u2211 i=1 cix (A) i (t),\nwhere x (A) i (t) is the allocation to the agent i for the job t by the mechanism A.\nWe use the truncated empirical estimator within our Robust UCB scheme. Through an invocation of the Bernstein inequality, we have, with high confidence (probability > 1\u2212 t\u22124 for the tth job), the true mean lies within the Robust UCB and LCB indices(see Lemma 1 in [5]). With enough samples, the symmetric indices of the Robust UCB scheme shrinks small enough so that no additional agents than the optimal set are required to meet the spill-over even due to the pessimistic strategy used.\nTheorem 2. The TD-UCB mechanism selects an optimal set after the job t\u2032 \u2208 O(log T ).\nProof. We denote k\u2217 as the costliest agent in the optimal set. Let x\u2217 = {x\u22171, . . . , x\u2217k\u2217} denote the allocations when the means are known. Consider \u2206,\n\u2206 = min(D,\u03b2k\u2217 log(\n1 1\u2212\u03b5))\n\u03c1k\u2217 \u2212 xk\u2217(t, \u03b2)\n\u2206 denotes the additional fraction of work the agent k\u2217 can take up without violating the constraints. Following is a sufficient condition on t when the set selected by the pessimistic estimate matches the optimal set.\nNeed to get :x\u2217i (\u03c1, \u03b2)\u2212 xPSTi (t) \u2264 \u2206n , \u2200i \u2264 k \u2217 (12)\nWe denote \u03c1RI(t) and \u03b2RI(t) as the Robust UCB indices of the JCT and the TTF of a worker in the active set. Recall, the active set for job t denotes an agent allocated a non-zero fraction of the job. The expression for the pessimistic allocation \u2200i \u2208 {1, . . . , k\u2217} at job t is given by\nxPSTi (t)\u00d7 (\u03c1\u0302i + \u03c1RI) = min ( D, (\u03b2\u0302i \u2212 \u03b2RI) log ( 1\n1\u2212 \u03b5\n)) (13)\nThe allocation xPSTi is determined by equality in eq. (13) whenever the set chosen is not optimal. We analyse this allocation via two cases to determine the job t when condition in eq. (12) is met. Case (i): xPSTi (t)\u00d7 (\u03c1\u0302i + \u03c1RI) = D or xPSTi (t) = D\u03c1\u0302i+\u03c1RI Consider,\nx\u2217i (\u03c1, \u03b2)\u2212 xPSTi (t)\n= min\n( D,\u03b2i log ( 1\n1\u2212\u03b5 )) \u03c1i \u2212 D \u03c1\u0302i + \u03c1RI\n\u2264 D \u03c1i \u2212 D \u03c1\u0302i + \u03c1RI \u2264 D \u03c1\u0302i \u2212 \u03c1RI \u2212 D \u03c1\u0302i + \u03c1RI [\u2235 w.h.p. \u03c1i \u2265 \u03c1\u0302i \u2212 \u03c1RI] \u2264 2D\u03c1RI \u03c12\nIn the current case, we have that the sufficiency condition is met whenever \u03c1RI \u2264 \u2206\u03c12\n2nD . In terms of the job t, through the expression of robust UCB index \u03c1RI, the case is met whenever,\nt \u2265 336u\u03c1n 2D2 log(T )\n\u22062 \u03c14 (14)\nwhere u\u03c1 is an upper bound on the second moment of completion time (can be shown via easy computation). Case (ii): xPSTi (t)\u00d7(\u03c1\u0302i+\u03c1RI) = (\u03b2\u0302i\u2212\u03b2RI) log ( 1 1\u2212\u03b5 ) or xPSTi (t) = \u03b2\u0302i\u2212\u03b2RI \u03c1\u0302i+\u03c1RI log ( 1 1\u2212\u03b5 ) . Unlike \u03c1i where samples are obtained for every t, the samples from surrogate are obtained after multiple (yet finite due to bounded \u03b2) jobs. To simplify our analysis, we consider as if a sample of \u03b2i is obtained for every job, the difference due to this simplification is only within constant factors. Consider,\nx\u2217i (\u03c1, \u03b2)\u2212 xPSTi (t)\n= min\n( D,\u03b2i log ( 1\n1\u2212\u03b5 )) \u03c1i \u2212 \u03b2\u0302i \u2212 \u03b2RI \u03c1\u0302i + \u03c1RI log ( 1 1\u2212 \u03b5 ) \u2264 ( \u03b2i \u03c1i \u2212 \u03b2\u0302i \u2212 \u03b2RI \u03c1\u0302i + \u03c1RI ) log ( 1 1\u2212 \u03b5 )\n\u2264 ( \u03b2\u0302i + \u03b2RI \u03c1\u0302i \u2212 \u03c1RI \u2212 \u03b2\u0302i \u2212 \u03b2RI \u03c1\u0302i + \u03c1RI ) log ( 1 1\u2212 \u03b5 )\nW.h.p \u03c1i \u2265 \u03c1\u0302i \u2212 \u03c1RI and \u03b2i \u2264 \u03b2\u0302i + \u03b2RI. As the surrogate observes at most one sample for every sample of \u03c1i, we have \u03b2RI \u2265 \u03c1RI\n\u2264 \u03b2RI \u00d7 2\u03c1\u0304+ 2\u03b2\u0304\n\u03c12 log\n( 1\n1\u2212 \u03b5\n)\nThis gives us that the sufficiency condition is met whenever \u03b2RI \u2264 \u2206\u03c12\nn(2\u03c1\u0304+2\u03b2\u0304) log( 11\u2212\u03b5) .\nIn terms of the round t, the sufficiency condition is met whenever\nt \u2265 64n2u\u03b2 log(T )(2\u03c1\u0304+ 2\u03b2\u0304)\n2 log2 (\n1 1\u2212\u03b5 ) \u22062 \u03c14\n(15)\nwhere u\u03b2 is an upper bound on the second moment on the TTF. From eq. (13) and eq. (15), the optimal set is chosen after O(log(T )) online jobs.\nAs mentioned earlier, the regret in this setting arises first out of sub-optimal set selection and thereon out of sub-optimal allocation. Through theorem 2, we bound the number of jobs where sub-optimal set is chosen. The following theorem establishes the asymptotic efficiency of our learning scheme.\nTheorem 3. Average regret of TD-UCB mechanism approaches zero asymptotically.\nProof: WLOG due to Theorem 2, we will consider the case where the active set is the optimal set. Let k\u2217 be the last member in the active set. The average regret, for the job t, is then given by\nRavg,t = n\u2211 i=1 ck \u2217 (x\u2217i \u2212 xPSTi (t)) t\nThrough steps similar to the proof of theorem 2, we have for a job t for an agent i either\nck \u2217 (x\u2217i \u2212 xPSTi (t)) t \u2264 2D\u03c1RI t\u00d7 \u03c12\nor ck \u2217 (x\u2217i \u2212 xPSTi (t)) t \u2264 \u03b2RI t \u00d7 2\u03c1\u0304+ 2\u03b2\u0304 \u03c12 log\n( 1\n1\u2212 \u03b5\n) .\nAs both \u03b2RI/t and \u03c1RI/t approach zero, we have\nlim t\u2192\u221e Ravg,t = 0."}, {"heading": "7 Simulations", "text": "We have shown theoretical guarantees on the regret in the asymptotic sense. In practice, the constants pertaining to the same are unknown. Also, our algorithm focusses on the optimization of social welfare. However, the payments to the workers involve externality to the workers which depend on the Robust UCB learning scheme. The learning scheme does not provide guarantees on the stochastic parameters for the sub-optimal workers. But the payments to the optimal worker set may also involve these parameters of the sub-optimal workers. Hence the simulations help us to form a fair idea about the same. Therefore, in order to investigate the efficacy of our algorithm in practical terms, we tested our method on synthetically generated datasets.\nWe simulated a set of 400 diverse workers with different costs, completion times and error rates. We fixed the following values, \u03c1 = 50, \u03c1 = 100, \u03b2 = 25,\n\u03b2 = 35, c = 10 and c = 100. Out of the 400 workers, 250 high performing workers were simulated with \u03c1 values uniformly sampled from [50, 75], \u03b2 values uniformly from [30, 35] and costs from [10, 50]. A set of 150 mediocre\nworkers were also simulated. These workers were simulated with \u03c1 values set to 100, \u03b2 to 25, and costs to 100. The deadline D was fixed as 50 and the error probability threshold (\u03b5) for an agent allocated a task was set to 0.01.\nWe checked the performance of our algorithm for a total of 106 jobs. The baseline used for comparison is the omniscient greedy allocation scheme with the parameters \u03b2 and \u03c1 known. We refer to this baseline as \u2018Optimal\u2019. In the context of payments, the \u2018Optimal\u2019 baseline refers to the minimum payment for inducing truthful reports for the greedy allocation aware of the means.\nWith increasing number of jobs, we observed that the total payment reduced and the negative social welfare decreased. The plots for the same are shown in fig. 2(a) and fig. 2(b). The performance of TD-UCB improves towards \u2018Optimal\u2019 when executed over more jobs. This shows that the learning improves over time and converges to the optimal set / optimal allocation."}, {"heading": "8 Future Work", "text": "Following are some directions for future work.\na) The derivation of theoretical bounds on the payments to the workers is still an open question. It would be interesting to see how these learned values affect the payment.\nb) Investigate the use of other models for the JCT and TTF. For instance, the error committed by a worker could be modelled as a Bernoulli random variable the bias of which could depend on the time to completion. Such models would pose more challenges for the learning due to the interdependency between the stochastic parameters.\nc) In our formulation of the problem in eq. (2), we have posed the constraint on meeting the deadline as a requirement to be met in expectation. We would also be interested in satisfying the constraints in a probabilistic sense."}], "references": [{"title": "Finite-time analysis of the multiarmed bandit problem", "author": ["P. Auer", "N. Cesa-Bianchi", "P. Fischer"], "venue": "Journal of Machine Learning, 47(2-3): 235\u2013256", "citeRegEx": "1", "shortCiteRegEx": null, "year": 2002}, {"title": "Characterizing truthful multiarmed bandit mechanisms: extended abstract", "author": ["M. Babaioff", "Y. Sharma", "A. Slivkins"], "venue": "Tenth ACM Conference on Electronic Commerce, pages 79\u201388. ACM", "citeRegEx": "2", "shortCiteRegEx": null, "year": 2009}, {"title": "A truthful budget feasible multi-armed bandit mechanism for crowdsourcing time critical tasks", "author": ["A. Biswas", "S. Jain", "D. Mandal", "Y. Narahari"], "venue": "Proceedings of the 2015 International Conference on Autonomous Agents and Multiagent Systems", "citeRegEx": "3", "shortCiteRegEx": null, "year": 2015}, {"title": "Regret analysis of stochastic and nonstochastic multi-armed bandit problems", "author": ["S. Bubeck", "N. Cesa-Bianchi"], "venue": "Foundations and Trends in Machine Learning, 5(1):1\u2013122", "citeRegEx": "4", "shortCiteRegEx": null, "year": 2012}, {"title": "Bandits with heavy tail", "author": ["S. Bubeck", "N. Cesa-Bianchi", "G. Lugosi"], "venue": "IEEE Transactions on Information Theory, 59(11):7711\u20137717", "citeRegEx": "5", "shortCiteRegEx": null, "year": 2013}, {"title": "Novel mechanisms for online crowdsourcing with unreliable", "author": ["P. Chandra", "Y. Narahari", "D. Mandal", "P. Dey"], "venue": "strategic agents. In Twenty-Ninth AAAI Conference on Artificial Intelligence, pages 1256\u20131262", "citeRegEx": "6", "shortCiteRegEx": null, "year": 2015}, {"title": "The price of truthfulness for payper-click auctions", "author": ["N.R. Devanur", "S.M. Kakade"], "venue": "Tenth ACM Conference on Electronic Commerce, pages 99\u2013106", "citeRegEx": "7", "shortCiteRegEx": null, "year": 2009}, {"title": "Multi-armed bandit with budget constraint and variable costs", "author": ["W. Ding", "T. Qin", "X.-D. Zhang", "T.-Y. Liu"], "venue": "AAAI, pages 232\u2013238", "citeRegEx": "8", "shortCiteRegEx": null, "year": 2013}, {"title": "What\u2019s the right price? pricing tasks for finishing on time", "author": ["S. Faradani", "B. Hartmann", "P.G. Ipeirotis"], "venue": "Human Computation, volume 11, pages 26\u201331", "citeRegEx": "9", "shortCiteRegEx": null, "year": 2011}, {"title": "Scalable mechanism design for the procurement of services with uncertain durations", "author": ["E. Gerding", "S. Stein", "K. Larson", "A. Rogers", "N.R. Jennings"], "venue": "Proceedings of the 9th International Conference on Autonomous Agents and Multiagent Systems: Volume 1, pages 649\u2013656", "citeRegEx": "10", "shortCiteRegEx": null, "year": 2010}, {"title": "An incentive compatible multi-armed-bandit crowdsourcing mechanism with quality assurance", "author": ["S. Jain", "S. Gujar", "S. Bhat", "O. Zoeter", "Y. Narahari"], "venue": "CoRR, abs/1406.7157", "citeRegEx": "11", "shortCiteRegEx": null, "year": 2014}, {"title": "Budget-optimal crowdsourcing using low-rank matrix approximations", "author": ["O.S. Karger David R", "S. Devavrat"], "venue": "In 49th Annual Conference on Communication, Control, and Computing (Allerton),", "citeRegEx": "12", "shortCiteRegEx": "12", "year": 2011}, {"title": "Learning from crowds", "author": ["V.C. Raykar", "S. Yu", "L.H. Zhao", "G.H. Valadez", "C. Florin", "L. Bogoni", "L. Moy"], "venue": "The Journal of Machine Learning Research, 11:1297\u20131322", "citeRegEx": "13", "shortCiteRegEx": null, "year": 2010}, {"title": "Pricing mechanisms for crowdsourcing markets", "author": ["Y. Singer", "M. Mittal"], "venue": "Twenty Second Internation World Wide Web Conference, pages 1157\u20131166", "citeRegEx": "14", "shortCiteRegEx": null, "year": 2013}, {"title": "Efficient budget allocation with accuracy guarantees for crowdsourcing classification tasks", "author": ["L. Tran-Thanh", "M. Venanzi", "A. Rogers", "N.R. Jennings"], "venue": "Proceedings of the 2013 International Conference on Autonomous Agents and Multi-agent Systems", "citeRegEx": "15", "shortCiteRegEx": null, "year": 2013}, {"title": "Efficient task sub-delegation for crowdsourcing", "author": ["H. Yu", "C. Miao", "Z. Shen", "C. Leung", "Y. Chen", "Q. Yang"], "venue": "Twenty-Ninth AAAI Conference on Artificial Intelligence", "citeRegEx": "16", "shortCiteRegEx": null, "year": 2015}], "referenceMentions": [{"referenceID": 4, "context": "We overcome this challenge by devising a biparameter learning scheme based on the Robust UCB algorithm [5].", "startOffset": 103, "endOffset": 106}, {"referenceID": 12, "context": "In the non-strategic case, most of the work in crowdsourcing has focused on models for aggregating labels and building classifiers [13, 12].", "startOffset": 131, "endOffset": 139}, {"referenceID": 11, "context": "In the non-strategic case, most of the work in crowdsourcing has focused on models for aggregating labels and building classifiers [13, 12].", "startOffset": 131, "endOffset": 139}, {"referenceID": 8, "context": "[9] look at the design of pricing schemes dependent on the completion times of the workers.", "startOffset": 0, "endOffset": 3}, {"referenceID": 15, "context": "[16].", "startOffset": 0, "endOffset": 4}, {"referenceID": 7, "context": "[8] look at the budgeted multi-armed bandit problem where the two parameters stochastic costs and stochastic rewards are learnt.", "startOffset": 0, "endOffset": 3}, {"referenceID": 5, "context": "[6] look at allocating indivisible tasks to strategic crowd workers under deadline constraints with the assumption that the reliability (in terms of completion of the task) of the agents is common knowledge and not estimated.", "startOffset": 0, "endOffset": 3}, {"referenceID": 13, "context": "Singer and Mittal [14] and Biswas et al.", "startOffset": 18, "endOffset": 22}, {"referenceID": 2, "context": "[3] look at pricing mechanisms in the presence of budget constraints and task completion deadlines.", "startOffset": 0, "endOffset": 3}, {"referenceID": 14, "context": "[15] look at crowdsourcing classification tasks with the goal of trading off cost and accuracy of the estimation.", "startOffset": 0, "endOffset": 4}, {"referenceID": 10, "context": "[11].", "startOffset": 0, "endOffset": 4}, {"referenceID": 0, "context": "[1].", "startOffset": 0, "endOffset": 3}, {"referenceID": 9, "context": "[10].", "startOffset": 0, "endOffset": 4}, {"referenceID": 0, "context": "min x (t) i \u2208[0,1] T \u2211", "startOffset": 13, "endOffset": 18}, {"referenceID": 0, "context": "min xi\u2208[0,1] n \u2211", "startOffset": 7, "endOffset": 12}, {"referenceID": 4, "context": "More specifically, since \u03c1i and \u03b2i are sub-exponential distributions, we appeal to the Robust UCB technique [5].", "startOffset": 108, "endOffset": 111}, {"referenceID": 3, "context": "While \u03c8-UCB algorithm [4] is a regret minimizing scheme for learning the mean of sub-Gaussian distributions, for heavy tailed distributions (e.", "startOffset": 22, "endOffset": 25}, {"referenceID": 4, "context": "log normal and exponential), Robust UCB has been shown to be regret minimizing [5].", "startOffset": 79, "endOffset": 82}, {"referenceID": 1, "context": "Earlier works have shown the non-triviality involved in the design of such learning mechanisms [2, 7].", "startOffset": 95, "endOffset": 101}, {"referenceID": 6, "context": "Earlier works have shown the non-triviality involved in the design of such learning mechanisms [2, 7].", "startOffset": 95, "endOffset": 101}, {"referenceID": 4, "context": "Through an invocation of the Bernstein inequality, we have, with high confidence (probability > 1\u2212 t\u22124 for the tth job), the true mean lies within the Robust UCB and LCB indices(see Lemma 1 in [5]).", "startOffset": 193, "endOffset": 196}, {"referenceID": 9, "context": "Out of the 400 workers, 250 high performing workers were simulated with \u03c1 values uniformly sampled from [50, 75], \u03b2 values uniformly from [30, 35] and costs from [10, 50].", "startOffset": 162, "endOffset": 170}], "year": 2016, "abstractText": "We study a problem of allocating divisible jobs, arriving online, to workers in a crowdsourcing setting which involves learning two parameters of strategically behaving workers. Each job is split into a certain number of tasks that are then allocated to workers. Each arriving job has to be completed within a deadline and each task has to be completed satisfying an upper bound on probability of failure. The job population is homogeneous while the workers are heterogeneous in terms of costs, completion times, and times to failure. The job completion time and time to failure of each worker are stochastic with fixed but unknown means. The requester is faced with the challenge of learning two separate parameters of each (strategically behaving) worker simultaneously, namely, the mean job completion time and the mean time to failure. The time to failure of a worker depends on the duration of the task handled by the worker. Assuming non-strategic workers to start with, we solve this biparameter learning problem by applying the Robust UCB algorithm. Then, we non-trivially extend this algorithm to the setting where the workers are strategic about their costs. Our proposed mechanism is dominant strategy incentive compatible and ex-post individually rational with asymptotically optimal regret performance.", "creator": "LaTeX with hyperref package"}}}