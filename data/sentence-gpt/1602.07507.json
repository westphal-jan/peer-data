{"id": "1602.07507", "review": {"conference": "AAAI", "VERSION": "v1", "DATE_OF_SUBMISSION": "24-Feb-2016", "title": "A Bayesian Approach to the Data Description Problem", "abstract": "In this paper, we address the problem of data description using a Bayesian framework. The goal of data description is to draw a boundary around objects of a certain class of interest to discriminate that class from the rest of the feature space. Data description is also known as one-class learning and has a wide range of applications.\n\n\n\n\n\n\nThe authors have proposed the methods for describing the properties of information. To test the effect of the Bayesian framework, they used a Bayesian framework. These are, among other things, one-class learning, and one-class learning.\n\n\nThe results of the Bayesian framework have a range of properties. First, we want to define a class that uses information: a specific class. Second, we want to define a class that does not necessarily represent the feature space. This way, we can use a given class. The class name and class name have a unique relation to the feature space. We could be used to provide an example:\ndef class(f): class(f): class(f): class(f): class(f): class(f): class(f): class(f): class(f): class(f): class(f): class(f): class(f): class(f): class(f): class(f): class(f): class(f): class(f): class(f): class(f): class(f): class(f): class(f): class(f): class(f): class(f): class(f): class(f): class(f): class(f): class(f): class(f): class(f): class(f): class(f): class(f): class(f): class(f): class(f): class(f): class(f): class(f): class(f): class(f): class(f): class(f): class(f): class(f): class(f): class(f): class(f): class(f): class(f): class(f): class(f): class(f): class(f): class(f): class(f): class(f): class(f): class(f): class(f): class(f): class(f): class(f): class(f): class(f): class(f): class(f): class(f): class(f): class(f): class(f): class(f): class(f", "histories": [["v1", "Wed, 24 Feb 2016 13:52:52 GMT  (1313kb,D)", "http://arxiv.org/abs/1602.07507v1", null]], "reviews": [], "SUBJECTS": "cs.LG", "authors": ["alireza ghasemi", "hamid r rabiee", "mohammad taghi manzuri", "mohammad hossein rohban"], "accepted": true, "id": "1602.07507"}, "pdf": {"name": "1602.07507.pdf", "metadata": {"source": "CRF", "title": "A Bayesian Approach to the Data Description Problem", "authors": ["Alireza Ghasemi", "Hamid R. Rabiee", "Mohammad T. Manzuri", "M. H. Rohban"], "emails": ["alireza.ghasemi@epfl.ch", "rabiee@sharif.edu", "manzuri@sharif.edu", "rahban@ce.sharif.edu"], "sections": [{"heading": "Introduction", "text": "A critical assumption for many supervised learning algorithms is presence of training data from all classes under study. It means that, for example a binary classification algorithm requires training samples of both classes in order to work properly. In scenarios where this condition is not met, performance degrades considerably or even algorithm fails to run. A well-known example of such scenarios is the problem of image retrieval (with relevance feedback) in which the system is given only rare samples of the relevant class and therefore traditional supervised learning algorithms are not suitable for this problem.\nThe aforementioned problems are known as data description or one-class learning problems and have a wide range of applications from pattern recognition to data mining and image processing. Information retrieval, video surveillance, outlier detection and object detection are all among applications of one-class learning algorithms.\nAs well as presence of samples of only one class (which is called target class), there are also other scenarios in which\nCopyright c\u00a9 2016, Association for the Advancement of Artificial Intelligence (www.aaai.org). All rights reserved.\none-class learning can be beneficial. Another implicit assumption of many supervised learning algorithms is that the prior probabilities of different classes in the training set (and whole feature space) are equal or at least very close. However, this is also violated in many real-word situations such as spam detection in which the proportion of spam messages and regular e-mail is quite different in a fair data sample. One-class learning algorithms can also be beneficial in this case since they do not assume this and are designed for databases in which the proportion or other properties of different classes (like statistical distribution) are quite different. Examples of other problems of this kind are industrial fault detection and information retrieval.\nSeveral one-class learning algorithms have been proposed so far. The work in (Khan and Madden 2010) is a recent survey on current trends in one-class learning. Many of these algorithms are extensions of traditional classification algorithms adapted to work in one-class settings. For example, in (Bishop 1994) an approach based on neural networks is proposed for novelty detection. Also in (Li and Zhang 2008) a variant of decision tree has been used for one-class learning. In (Yang et al. 2010) the k nearest neighbors algorithm has been used for one-class learning. Although such algorithms are simple and easy to understand, they are usually inefficient on complicated real-world data.\nA major class of one-class learning algorithms are based on statistical density estimation. These approaches assume a parametric statistical model for the target class and then estimate the parameters of that model. The likelihood of a data sample measures the degree that the sample belongs to the target class. In (Cohen, Sax, and Geissbuhler 2008) approaches based on Parzen or kernel density estimation have been proposed. Also in (Nuez et al. 2009), Gaussian mixture models have been utilized for novelty detection. The principal advantage of these methods is the rigid theoretical foundations behind them. However, they can not directly operate in the kernel space and therefore have some limitations in modeling the complex boundary shapes.\nSince the introduction of support vector machines (Burges 1998) and kernel methods (Shawe-Taylor and Cristianini 2004), there has been a growing interest in adapting kernel-based approaches to one-class learning. Scholkopf in (Schlkopf et al. 2001) presented one-class SVM. It is a variation of traditional binary SVM which tries to sepa-\nar X\niv :1\n60 2.\n07 50\n7v 1\n[ cs\n.L G\n] 2\n4 Fe\nb 20\n16\nrate target data from the axis origin. (Tax and Duin 2004) proposed support vector data description. In this method, a hypersphere of minimum volume is sought to surround the target samples. In (Grnitz, Kloft, and Brefeld 2009), it is shown that the two approaches yield the same solution when the used kernel is isotropic. Kernel methods yield good results in most problem and model different kinds of boundary shapes utilizing flexibility of the kernel space. However, domain knowledge can not be easily embedded into kernel methods. Moreover, these methods can not directly utilize unlabeled data to improve accuracy.\nUtilizing unlabeled data in the process of one-class learning has also been of interest in recent years. (Zhang and Zuo 2008),(Yu 2005) and (Elkan and Noto 2008) have utilized unlabeled samples as well as positive target samples in the process of one-class learning. These methods try to infer a set of confident negative samples from the unlabeled set and then perform a traditional binary classification algorithm. (Grnitz, Kloft, and Brefeld 2009) and (Tax and Duin 2004) have utilized outlier samples in addition to targets in the process of learning. The relation between support vector methods and density based approaches has been discussed in (Munoz and Moguerza 2004). In (Lee et al. 2007), the local density around target point has been used to improve the SVDD.\nThe Gaussian process regression method has been adapted for one-class learning in (Kemmler, Rodner, and Denzler 2011). Moreover, among the probabilistic approaches to one class learning, (Ting, D\u2019Souza, and Schaal 2007) has used a Bayesian approach which defines a regression model over data samples. In (Coughlan and Yuille 2003; Varbanov 1998) Bayesian approaches have been used for outlier detection. In (Dong 2010) a Bayesian approach has been used to detect outliers in ordinal data. These methods are more flexible since they allow uncertainty in the model and use domain knowledge in constructing the classifier. However, their principal drawback is their computational inefficiency and lack of sparseness.\nIn this paper, we propose a novel Bayesian approach to the data description problem. The principal contribution of our work is twofold: First we develop a Bayesian framework which can benefit from advantages of both probabilistic and support vector approaches. For example our approach can generate sparse solutions and in addition, we propose a principled method for utilizing prior knowledge in the process of one-class learning. The second contribution of our work is that the proposed approach can benefit from unlabelled data in improving the accuracy of classification.\nIn the rest of this paper, after reviewing SVDD, a wellknown data description algorithm, we propose our approach and study its properties and extensions. Then, we thoroughly test our approach against other one-class learning algorithms under various conditions."}, {"heading": "The Traditional Support Vector Data Description", "text": "Support vector data description is a well-known algorithm for one-class learning which has been widely used in various\napplications. It is a kernel-based approach which tries to find a hypersphere which is as small as possible and meanwhile contains as much target data as possible, hereby avoiding outlier samples. This goal is achieved by solving a convex optimization problem over the target data points in the kernel space, in a way very similar to the well-known support vector machine algorithm.\nWe describe SVDD briefly in the rest of this section. For a more detailed explanation, refer to the seminal work of Tax and Duin.\nSuppose we are given a dataset {x1, . . . , xn} which consists of the training set. The main idea of support vector data description is to find a hypersphere in the feature space containing as many of the training samples as possible while having minimum possible volume. To achieve this goal, data are first transformed to a higher dimensional kernel space in which support of the data is a hypersphere.\nThe sphere is characterized by its center C and radius R > 0. The minimization of the sphere volume is achieved by minimizing its square radius R2. Data samples outside the hypersphere are penalized in the objective function. To consider the penalty, slack variables \u03bei \u2265 0 are introduced and the optimization problem is formulated as:\nminR\u2208R,\u03bei\u2208Rn,C\u2208F R 2 +\n1\nN\u03bd N\u2211 i=1 \u03bei (1)\nsuch that\n||\u03c6(xi)\u2212 C|| \u2264 R2 + \u03bei and \u03bei \u2265 0 (2)\n. In the above formula, \u03c6 is the transformation which maps data points to the higher dimensional. The parameter \u03bd controls the trade-off between the hypersphere volume and the proportion of samples in the hypersphere. It can also be used to control the sparseness of the solution of the optimization problem (Grnitz, Kloft, and Brefeld 2009).\nIntroducing Lagrangian multipliers to account for constraints, we obtain the following dual problem:\nmin\u03b1 \u03b1 tK\u03b1\u2212 \u03b1tdiag(K) (3)\nsuch that 0 \u2264 \u03b1i \u2264 1\nN\u03bd and\n\u2211 \u03b1i = 1 (4)\nIn (3), K is the kernel matrix in which Ki,j =< \u03c6(xi), \u03c6(xj) > and diag(K) is the main diagonal of K. One may notice that it is not needed to explicitly transform data to the kernel space and only defining a kernel function (dot product between transformed data) in terms of original points is sufficient. We call this function K(., .). Therefore, K(xi, xj) =< \u03c6(xi), \u03c6(xj) >.\nSolving the dual optimization problem yields vector \u03b1 in which most of the values are 0. Samples xi with positive \u03b1i are called support vectors of the SVDD. center C of the hypersphere can be specified in term of Lagrange multipliers \u03b1i as:\nC = \u03a3i\u03b1i\u03c6(xi) (5)\n. We can rank test samples by their proximity to the center of the hyper sphere. The ranking function f is defined as below in which smaller values of f mean more similarity to the target class.\nf(z) = \u03a3i\u03a3j\u03b1i\u03b1jK(xi, xj) +K(z, z)\u2212 2\u03a3i\u03b1iK(xi, z) (6)"}, {"heading": "The Bayesian Approach", "text": "As we saw in the previous section, the support vector data description algorithm finally reduces to finding center of the surrounding hypersphere in the embedded space as a weighted average of sample target points in which many of the weights are zero.Data points for which the corresponding weight is non-zeros are called support vectors.\nIn this section we derive the proposed Bayesian data description method. We look at the problem of data description from a different point of view. Later we show that the interpretation of data and parameters in our model is equivalent to that of SVDD.\nOur method is based on the same set of parameters as the SVDD (in its dual form), i.e we will try to find a vector of weights, one for each data sample. Assume that we transform all data samples using the mapping \u03c6 to a higher dimensional embedded (kernel) space in which transformed data follow a Gaussian distribution with covariance matrix I and mean \u03a3i\u03b1i\u03c6(xi). i.e.:\n\u03c6(xj) \u223c N (\u03a3i\u03b1i\u03c6(xi), I) (7) We limit \u03b1i values to form a convex set, i.e. 0 < \u03b1i < 1 and \u03a3i\u03b1i = 1. Later, we will discuss the reason behind this assumption.\nThe main difference between the estimation in (7) and the conventional Gaussian density estimation is that the mean is limited to be a weighted average of training target points. Hereafter, we call this model the weighted Gaussian model.\nThe principal correspondence between the weighted Gaussian model and the SVDD is that the mean of the weighted Gaussian is equivalent to the center of the hypersphere in the SVDD. Therefore, distance of a point to center of the surrounding hypersphere in the SVDD model is inversely proportional to the likelihood of a data point in the weighted Gaussian model. We use this fact to show that SVDD is itself a special case of the weighted Gaussian model. Then we improve upon SVDD equivalent case of weighted Gaussian by utilizing unlabeled data and defining more precise prior knowledge.\nTo achieve this goal, first we have to estimate parameters of the weighted Gaussian model using a statistical parameter estimation approach. Various parameter estimation methods have been proposed in the literature so far. Two of the most common ones are maximum likelihood ones and Bayesian approach.\nMaximum likelihood estimation is a simple optimizationbased approach which maximizes the likelihood of training data with regard to the unknown parameters. However,\nthis method is not flexible and can not utilize domain information to improve the estimation. We seek to arbitrarily constrain the estimation procedure toward finding solution with specific properties (e.g. sparseness) and moreover utilize various forms of domain information in this procedure. Therefore, we use the Bayesian estimation.\nIn Bayesian parameter estimation, a prior distribution p(\u03b1) is defined over parameter vector \u03b1 and the posterior probability p(\u03b1|D) is derived by applying the Bayes rule:\np(\u03b1|D) = p(D|\u03b1)p(\u03b1) p(D)\n(8)\nIn which p(D|\u03b1) is the likelihood of training data given a specific value of \u03b1 and p(D) is a normalizing constant.\nWe assume that the parameter vector \u03b1 follows a Gaussian distribution with mean m and covariance matrix C i.e.:\n\u03b1 \u223c N (m,C) (9) Applying the Bayes rule, we have:\np(\u03b1|D) \u221d p(D|\u03b1)p(\u03b1) (10) We have omitted p(D) in (10) because it is independent of \u03b1. Maximizing the a posteriori probability of \u03b1 (MAP estimation) we will have:\n\u03b1\u0302 = arg min \u03b1\n\u03b1t(nK + C\u22121)\u03b1\u2212 2\u03b1t(D1 + C\u22121m)\n(11)\nMatrix D is the diagonal matrix of weighted degree of samples, i.e. Di,i = \u03a3jKi,j .\nEquation (11) is the key to our approach since it allows purposeful modification of the behavior of the final solution by setting different values for covariance matrix C and mean m of the parameter vector. For example, the objective function of SVDD can be derived from (11) by choosing the appropriate C and m (We can check this by substituting C = I and m = diag(K)\u2212D1 and assuming an isotropic Kernel ). Moreover, wee see that the optimization only depends on dot products of points in the embedded (kernel) space. Therefore, the Bayesian estimation to the weighted Gaussian model is itself a kernel method. That is why we constrained the mean of the model to be a weighted average of training points.\nThe most trivial choice for the parameters could be setting C to the identity matrix and eachmi equally to 1n . However, this kind of prior knowledge is non-informative and therefore yields the same non-sparse trivial solution as the maximum likelihood approach.\nAs a better and more informative prior knowledge, we could modify the mean vector m such that the data points which lie in a dense area of the embedded space receive smaller prior weight. The main motivation behind this choice is the fact that target points located in dense areas of feature space are less likely to be close to boundary of the target class and therefore their corresponding weight\nshould have more prior probability of being close to zero. In contrast, target points located in less-dense areas of feature space are more likely to be on or close to the boundary and therefore their corresponding weight should be a priori larger than other points.\nWith these facts in mind, we suggest that the mean of prior probability of parameter vector be proportional to D1, in which D is the same diagonal matrix as in (11). This is reasonable because the weighted degree of a point is a good approximation of local density of the area near that point. Therefore we set:\nmi \u221d \u2212\u03a3j\u2208LKi,j (12)\nfor each element of mean vector m. Using such prior knowledge, we expect that samples crucial in determining center of the Gaussian become much more likely to receive larger values. This causes the solution to become sparse and more accurately capture the underlying distribution and its support (boundary).\nThe pseudo code for the Bayesian data description algorithm is depicted in figure 1. In this algorithm, parameter 0 < \u03bd < 1 controls sparsity of the solution. Larger values for \u03bd cause the solution to become as sparse as possible. \u03bd can also be used to reduce the effect of outlier data on the final solution.\nAlso figure 2 depicts performance of our weighted Gaussian model (with maximum likelihood and Bayesian estimation) in capturing a typical S-shaped distribution and compares it with that of SVDD. We see that weighted Gaussian with maximum likelihood estimation has captured a mostly spherical distribution shape which shows that this method lacks sparsity and flexibility and its solution is close to the simple mean of points which is the trivial solution. Both BDD and SVDD has been more successful in capturing the real shape of the distribution and avoid over-fitting."}, {"heading": "Utilizing Unlabelled Data", "text": "Methods which utilize unlabeled data to improve learning accuracy have received much attention in recent years. These methods use unlabeled data to infer information about geometry of data and the corresponding manifold. Such information can be used to improve the accuracy of supervised classifiers.\nIn the Bayesian data description approach, information about the geometry of data can be utilized to determine the prior probability distribution of the parameter vector . Since we use local density of area around points in determining the prior probability distribution of the model parameters. The information we gather from unlabeled samples can be useful in determining the local density around a point, more accurately. Having unlabeled data available, we can now set:\nmi = \u2212\u03a3j\u2208L\u222aUKi,j (13)\nIn which L and U are the set of labeled and unlabeled data, respectively.\nAnother parameter which can be modified by using unlabeled data is the covariance matrix C. Information about geometry of data can be used in constructing this matrix by using any type of data dependent kernel.\nAn example of using unlabeled data for adjusting the covariance is by computing the Laplacian operator of training samples (Zhu, Lafferty, and Rosenfeld 2005).\nSuppose we define a k-nn graph over all data samples. A k-nn graph is a graph in which nodes are data samples and each sample is connected to its k nearest neighbors. Weight Wi,j of each edge is proportional to the similarity between data samples xi and xj . Gaussian function is a popular choice for W .\nHaving the weight matrix, the Laplacian L of the graph is defined as L = D \u2212W in which D is a diagonal matrix in which Di,i = \u03a3jWi,j . Utilizing the Laplacian, we adjust matrix C as:\nC\u22121 = (L\u22121)1...n,1...n (14)\nUtilizing unlabeled data in this way, manifold of all data (target and non-target) is modeled in the C matrix, whereas manifold of target data can be modeled in the kernel matrix K of the weighted Gaussian itself. Therefore, we use both manifolds to better model distribution of the data."}, {"heading": "Time Complexity of the Bayesian Data Description", "text": "Constructing the prior vector m can be done at the time of constructing the kernel matrix and requiresO(n2), the same as minimum complexity of kernel construction (in the general sense). The objective function of the BDD is a convex quadratic programming problem which can be solved in O(n3) time. SVDD also reduces to a quadratic programming problem. Therefore the time complexity of BDD is not higher than SVDD.\nIn the semi-supervised settings (SSDD), we require to compute inverse of the covariance matrix which is of complexity O((n + m)3) (m is the number of unlabeled samples). The prior weight vector can still be formed at the time of kernel construction with the same complexity as kernel construction (O((n+m)2)). Finally, the resulting quadratic requires O(n3) time to be solved which is independent of the number of unlabeled data."}, {"heading": "Experimental Results", "text": ""}, {"heading": "Experiment Setup", "text": "Various datasets from the UCI repository (Asuncion and Newman 2007), as well as Corel (Wang, Li, and Wiederhold 2001) and Caltech-101 (Fei-Fei, Fergus, and Perona 2007) image databases were used for experiments. Their properties are depicted in table 1.\nIn each experiment, one of the classes was selected as target, and all other samples were treated as outlier. Onehalf of the target samples were selected for training. The rest of training samples, as well as outlier data were selected as test samples. For the Caltech-101 and Corel image datasets, feature extraction was performed by the CEDD (Chatzichristofis and Boutalis 2008) feature extraction algorithm.\nSVDD method and one-class Gaussian process were implemented and compared with the proposed BDD method. The Gaussian function was used as the kernel. The parameters of the classifiers and the kernel were adjusted by 10-fold cross validation. All sample selections were done by random sampling.\nFor measuring efficiency of one-class learning, we computed precision in the top k returned results as accuracy measure and set k to the (estimated) number of target samples in the test set. This measure has the advantage that unlike precision or recall, we don\u2019t need to compute more than one quantity in order to achieve meaningful results. Moreover, the value chosen for k eliminates the need for explicitly adjusting an acceptance threshold for one-class learning algorithms which could be a tedious task and have significant effect on functionality of algorithms."}, {"heading": "Experiments", "text": "In table 2 we compare the performance of BDD with that of SVDD and one-class Gaussian process. The BDD and\nSVDD show similar performance with slight improvements in BDD because of utilizing the density-based prior knowledge. One-class Gaussian process also has a reasonable performance but this algorithm is not sparse and therefore lacks benefits of the other models and is more hardly generalizable. Running times (in seconds) of algorithms are depicted in parentheses in each cell.\nFigure 3 shows interesting results about performance of the Bayesian data description on different classes of the USPS digit recognition dataset. Here, we visualize different data samples in order to understand the operation of BDD. Each column depicts performance on one class of the USPS dataset.\nThe firs row shows the most likely samples of each class returned by the BDD algorithm. As can be seen, all samples in this row have been classified correctly and are appropriate representatives for their respective class.\nThe second row shows the least likely sample detected as target by the BDD for each class. We can see that these samples are misclassified data and count as error rate of the classifier. It is reasonable to have error here since we rank data samples by likelihood to the target class and samples with lower ranks are more likely to be misclassified (unless the precision is perfect 1).\nThe third and fourth row deal with the prior estimation of the local density around each sample which is done by computing its weighted degree. The third row shows the data sample with least weighted degree. We see that these samples usually can not be considered typical representatives of their underlying target class and should be far from the center of mass of the target class. These data samples lie in the boundary of target class and therefore have the most important role in defining the center of the weighted Gaussian model. Because of this property of weighted degree of data samples, we set the prior probability of the parameter corresponding to each sample proportional to the weighted degree of that sample.\nThe fourth row shows the sample with largest weighted degree. We can see that the data samples are typical representatives of their underlying class. This is because samples with large weighted degree usually lie within the target hypersphere and are far from the boundary of the target class.\nAn important point to note about one-class learning algorithms is their sensitivity to the proportion of target and outlier data samples in the test set. The accuracy of the resulting model can be affected significantly by varying this ratio. We test this by gradually increasing the proportion of outlier samples in the test set and computing precision in each case. Figure 4 depicts results of studying this property\nfor SVDD and BDD model. As can be seen in figure 4a, in large datasets the precision of classification is not affected largely by increasing the proportion of outlier samples. This is mostly because the training set is big enough to capture the distribution of target class. Presence of sufficient target samples prevents probably noisy data to affect misclassification rate.\nHowever, figure 4b depicts that this is not the case for smaller datasets like Corel and Caltech-101. Here, due to insufficiency of target training samples, noisy data can significantly influence the boundary of target class and hence misclassification rate increases by increasing the proportion of outlier samples.\nWe can see in both figures that BDD is less sensitive to variations in the proportion of outlier samples, which is mostly because of its use of prior knowledge over model parameters. By using weighted degree as a prior, we prevent noisy data to become significant in constructing the model and compensate for the model uncertainty.\nExperiments with unlabeled data For semi-supervised learning, we divided the training set into a labeled and an unlabeled set. We set the size of unlabeled set twice the size of labeled training set and for better runtime, used the unlabeled data only to improve the prior mean of Bayesian model. In addition to SVDD, the mapping-convergence algorithm (Yu 2005) was also implemented and used in comparisons. Results of semi-supervised learning are depicted in figure 3.\nWe see in table 3 that semi-supervised Bayesian data description algorithm (SSDD) outperforms other approaches. Since SVDD can not use unlabeled data, it is expectable that we don\u2019t see any performance improvement by adding unlabeled data. Mapping-convergence also does not achieve good performance, because this algorithm uses unlabeled data only to select some confident negative samples and then performs a traditional binary classification algorithm. There-\nfore, the problems that arise for binary classification on oneclass problems also arises for this algorithm and degrades its performance. Moreover, we can see that smaller and more difficult datasets are improved more significantly by utilizing unlabeled data. This is because of the fact that the training data are insufficient for these problems and therefore they benefit more from using the unlabeled data.\nAlso running time (in seconds) of each algorithm is depicted in parentheses in table 3. We can see that SSDD performs quite faster than mapping-convergence and also it\u2019s speed is very close to that of SVDD that does not use unlabeled data at all. The mapping-convergence algorithm is slower than SSDD because it runs both one-class learning (to detect negative points) and a traditional binary classification, whereas SSDD only runs data description."}, {"heading": "Conclusions", "text": "In this paper, we proposed a novel Bayesian approach for the data description problem which has various applications in machine learning. Our approach is a bridge between probabilistic and kernel based data description and hence can use benefits of both types of approaches such as sparseness of the support vector approaches and utilizing prior knowledge in the probabilistic approaches. Moreover, our approach can utilize unlabeled data in order to improve accuracy of the data description.\nThe prior knowledge utilized in our model can have various applications. For example, the information in the data samples prior, can be used to estimate most probable support vectors and reduce the size of data set, hereby reducing time complexity of the training. Moreover, robustness of the algorithm to noise could be further improved."}, {"heading": "Acknowledgment", "text": "The authors thank the AICTC research center and VAS Laboratory of Sharif University of Technology.\n(a) Pendigits (b) Corel"}], "references": [{"title": "Cedd: Color and edge directivity descriptor: A compact descriptor for image indexing and retrieval", "author": ["Chatzichristofis", "Y. Boutalis"], "venue": "In Proceedings of the 6th international conference on Computer vision", "citeRegEx": "Chatzichristofis et al\\.,? \\Q2008\\E", "shortCiteRegEx": "Chatzichristofis et al\\.", "year": 2008}, {"title": "Novelty detection using one-class parzen density estimator. an application to surveillance of nosocomial infections", "author": ["Sax Cohen", "G. Geissbuhler 2008] Cohen", "H. Sax", "A. Geissbuhler"], "venue": "In EHealth Beyond the Horizon: Get It There: Proceedings of MIE2008 the XXIst International", "citeRegEx": "Cohen et al\\.,? \\Q2008\\E", "shortCiteRegEx": "Cohen et al\\.", "year": 2008}, {"title": "Manhattan world: Orientation and outlier detection by bayesian inference", "author": ["Coughlan", "J. Yuille 2003] Coughlan", "A. Yuille"], "venue": "Neural Computation", "citeRegEx": "Coughlan et al\\.,? \\Q2003\\E", "shortCiteRegEx": "Coughlan et al\\.", "year": 2003}, {"title": "Bayesian method to detect outliers for ordinal data. Communications in StatisticsSimulation and Computation 39(7):1470\u20131484", "author": ["F. Dong"], "venue": null, "citeRegEx": "Dong,? \\Q2010\\E", "shortCiteRegEx": "Dong", "year": 2010}, {"title": "Learning classifiers from only positive and unlabeled data", "author": ["Elkan", "C. Noto 2008] Elkan", "K. Noto"], "venue": "In Proceeding of the 14th ACM SIGKDD international conference on Knowledge discovery and data mining,", "citeRegEx": "Elkan et al\\.,? \\Q2008\\E", "shortCiteRegEx": "Elkan et al\\.", "year": 2008}, {"title": "Learning generative visual models from few training examples: An incremental bayesian approach tested on 101 object categories. Computer Vision and Image Understanding 106(1):59\u201370", "author": ["Fergus Fei-Fei", "L. Perona 2007] Fei-Fei", "R. Fergus", "P. Perona"], "venue": null, "citeRegEx": "Fei.Fei et al\\.,? \\Q2007\\E", "shortCiteRegEx": "Fei.Fei et al\\.", "year": 2007}, {"title": "Active and semi-supervised data domain description. Machine Learning and Knowledge Discovery in Databases 407\u2013422", "author": ["Kloft Grnitz", "N. Brefeld 2009] Grnitz", "M. Kloft", "U. Brefeld"], "venue": null, "citeRegEx": "Grnitz et al\\.,? \\Q2009\\E", "shortCiteRegEx": "Grnitz et al\\.", "year": 2009}, {"title": "One-class classification with gaussian processes", "author": ["Rodner Kemmler", "M. Denzler 2011] Kemmler", "E. Rodner", "J. Denzler"], "venue": "Computer Vision\u2013ACCV", "citeRegEx": "Kemmler et al\\.,? \\Q2011\\E", "shortCiteRegEx": "Kemmler et al\\.", "year": 2011}, {"title": "A survey of recent trends in one class classification", "author": ["Khan", "S. Madden 2010] Khan", "M. Madden"], "venue": "Artificial Intelligence and Cognitive Science", "citeRegEx": "Khan et al\\.,? \\Q2010\\E", "shortCiteRegEx": "Khan et al\\.", "year": 2010}, {"title": "Density-induced support vector data description", "author": ["Lee"], "venue": "Neural Networks, IEEE Transactions on 18(1):284\u2013289", "citeRegEx": "Lee,? \\Q2007\\E", "shortCiteRegEx": "Lee", "year": 2007}, {"title": "Bagging one-class decision trees", "author": ["Li", "C. Zhang 2008] Li", "Y. Zhang"], "venue": "In Fifth International Conference on Fuzzy Systems and Knowledge Discovery,", "citeRegEx": "Li et al\\.,? \\Q2008\\E", "shortCiteRegEx": "Li et al\\.", "year": 2008}, {"title": "One-class support vector machines and density estimation: The precise relation. Progress in Pattern Recognition, Image Analysis and Applications 253\u2013274", "author": ["Munoz", "A. Moguerza 2004] Munoz", "J. Moguerza"], "venue": null, "citeRegEx": "Munoz et al\\.,? \\Q2004\\E", "shortCiteRegEx": "Munoz et al\\.", "year": 2004}, {"title": "Novelty detection and 3d shape retrieval based on gaussian mixture models for autonomous surveillance robotics", "author": ["Nuez"], "venue": "In Intelligent Robots and Systems,", "citeRegEx": "Nuez,? \\Q2009\\E", "shortCiteRegEx": "Nuez", "year": 2009}, {"title": "Estimating the support of a high-dimensional distribution. Neural computation 13(7):1443\u20131471", "author": ["Schlkopf"], "venue": null, "citeRegEx": "Schlkopf,? \\Q2001\\E", "shortCiteRegEx": "Schlkopf", "year": 2001}, {"title": "Kernel methods for pattern analysis", "author": ["Shawe-Taylor", "N. Cristianini"], "venue": null, "citeRegEx": "Shawe.Taylor et al\\.,? \\Q2004\\E", "shortCiteRegEx": "Shawe.Taylor et al\\.", "year": 2004}, {"title": "Support vector data description. Machine learning 54(1):45\u201366", "author": ["Tax", "D. Duin 2004] Tax", "R. Duin"], "venue": null, "citeRegEx": "Tax et al\\.,? \\Q2004\\E", "shortCiteRegEx": "Tax et al\\.", "year": 2004}, {"title": "Automatic outlier detection: A bayesian approach", "author": ["D\u2019Souza Ting", "J. Schaal 2007] Ting", "A. D\u2019Souza", "S. Schaal"], "venue": "In Robotics and Automation,", "citeRegEx": "Ting et al\\.,? \\Q2007\\E", "shortCiteRegEx": "Ting et al\\.", "year": 2007}, {"title": "Simplicity: Semantics-sensitive integrated matching for picture libraries", "author": ["Li Wang", "J.Z. Wiederhold 2001] Wang", "J. Li", "G. Wiederhold"], "venue": "IEEE Trans. Pattern Anal. Mach. Intell", "citeRegEx": "Wang et al\\.,? \\Q2001\\E", "shortCiteRegEx": "Wang et al\\.", "year": 2001}, {"title": "Brain activation detection by neighborhood one-class svm. Cognitive Systems Research 11(1):16\u201324", "author": ["Yang"], "venue": null, "citeRegEx": "Yang,? \\Q2010\\E", "shortCiteRegEx": "Yang", "year": 2010}, {"title": "Single-class classification with mapping convergence", "author": ["H. Yu"], "venue": null, "citeRegEx": "Yu,? \\Q2005\\E", "shortCiteRegEx": "Yu", "year": 2005}, {"title": "Learning from positive and unlabeled examples: A survey", "author": ["Zhang", "B. Zuo 2008] Zhang", "W. Zuo"], "venue": null, "citeRegEx": "Zhang et al\\.,? \\Q2008\\E", "shortCiteRegEx": "Zhang et al\\.", "year": 2008}, {"title": "Semi-supervised learning with graphs. Citeseer", "author": ["Lafferty Zhu", "X. Rosenfeld 2005] Zhu", "J. Lafferty", "R. Rosenfeld"], "venue": null, "citeRegEx": "Zhu et al\\.,? \\Q2005\\E", "shortCiteRegEx": "Zhu et al\\.", "year": 2005}], "referenceMentions": [{"referenceID": 19, "context": "(Zhang and Zuo 2008),(Yu 2005) and (Elkan and Noto 2008) have utilized unlabeled samples as well as positive target samples in the process of one-class learning.", "startOffset": 21, "endOffset": 30}, {"referenceID": 3, "context": "In (Dong 2010) a Bayesian approach has been used to detect outliers in ordinal data.", "startOffset": 3, "endOffset": 14}, {"referenceID": 19, "context": "In addition to SVDD, the mapping-convergence algorithm (Yu 2005) was also implemented and used in comparisons.", "startOffset": 55, "endOffset": 64}], "year": 2016, "abstractText": "In this paper, we address the problem of data description using a Bayesian framework. The goal of data description is to draw a boundary around objects of a certain class of interest to discriminate that class from the rest of the feature space. Data description is also known as one-class learning and has a wide range of applications. The proposed approach uses a Bayesian framework to precisely compute the class boundary and therefore can utilize domain information in form of prior knowledge in the framework. It can also operate in the kernel space and therefore recognize arbitrary boundary shapes. Moreover, the proposed method can utilize unlabeled data in order to improve accuracy of discrimination. We evaluate our method using various real-world datasets and compare it with other state of the art approaches of data description. Experiments show promising results and improved performance over other data description and one-class learning algorithms.", "creator": "LaTeX with hyperref package"}}}