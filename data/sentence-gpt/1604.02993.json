{"id": "1604.02993", "review": {"conference": "ACL", "VERSION": "v1", "DATE_OF_SUBMISSION": "11-Apr-2016", "title": "Using Sentence-Level LSTM Language Models for Script Inference", "abstract": "There is a small but growing body of research on statistical scripts, models of event sequences that allow probabilistic inference of implicit events from documents. These systems operate on structured verb-argument events produced by an NLP pipeline. We compare these systems with recent Recurrent Neural Net models that directly operate on raw tokens to predict sentences, finding the latter to be roughly comparable to the former in terms of predicting missing events in documents. We show how we are able to estimate the relationship between neural net and CRS systems. As a result, this knowledge and expertise are invaluable in the field of computer science. The results have implications for the implementation of prediction algorithms such as NLP and Recurrent Neural Net.\n\n\n\n\n\nThe paper was funded by the NLP project, National Institute of Public Health, The Center for the Study of Neural Network (NNNN), NSF Grant No. 4, $16.00, and NSF Grant No. 4, $15.00, from the National Institute of Public Health.\n\nThe original paper is published in NNNN.\n\nRelated\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "histories": [["v1", "Mon, 11 Apr 2016 15:21:05 GMT  (106kb,D)", "https://arxiv.org/abs/1604.02993v1", null], ["v2", "Wed, 8 Jun 2016 19:05:14 GMT  (303kb,D)", "http://arxiv.org/abs/1604.02993v2", "To appear in Proceedings of the 54th Annual Meeting of the Association for Computational Linguistics (ACL-16)"]], "reviews": [], "SUBJECTS": "cs.CL", "authors": ["karl pichotta", "raymond j mooney"], "accepted": true, "id": "1604.02993"}, "pdf": {"name": "1604.02993.pdf", "metadata": {"source": "CRF", "title": "Using Sentence-Level LSTM Language Models for Script Inference", "authors": ["Karl Pichotta", "Raymond J. Mooney"], "emails": ["pichotta@cs.utexas.edu", "mooney@cs.utexas.edu"], "sections": [{"heading": null, "text": "There is a small but growing body of research on statistical scripts, models of event sequences that allow probabilistic inference of implicit events from documents. These systems operate on structured verb-argument events produced by an NLP pipeline. We compare these systems with recent Recurrent Neural Net models that directly operate on raw tokens to predict sentences, finding the latter to be roughly comparable to the former in terms of predicting missing events in documents."}, {"heading": "1 Introduction", "text": "Statistical scripts are probabilistic models of event sequences (Chambers and Jurafsky, 2008). A learned script model is capable of processing a document and inferring events that are probable but not explicitly stated. These models operate on automatically extracted structured events (for example, verbs with entity arguments), which are derived from standard NLP tools such as dependency parsers and coreference resolution engines.\nRecent work has demonstrated that standard sequence models applied to such extracted event sequences, e.g. discriminative language models (Rudinger et al., 2015) and Long Short Term Memory (LSTM) recurrent neural nets (Pichotta and Mooney, 2016), are able to infer held-out events more accurately than previous approaches. These results call into question the extent to which statistical event inference systems require linguistic preprocessing and syntactic structure. In an attempt to shed light on this issue, we compare existing script models to LSTMs trained as sentencelevel language models which try to predict the sequence of words in the next sentence from a\nlearned representation of the previous sentences using no linguistic preprocessing.\nSome prior statistical script learning systems are focused on knowledge induction. These systems are primarily designed to induce collections of co-occurring event types involving the same entities, and their ability to infer held-out events is not their primary intended purpose (Chambers and Jurafsky, 2008; Ferraro and Van Durme, 2016, inter alia). In the present work, we instead investigate the behavior of systems trained to directly optimize performance on the task of predicting subsequent events; in other words, we are investigating statistical models of events in discourse.\nMuch prior research on statistical script learning has also evaluated on inferring missing events from documents. However, the exact form that this task takes depends on the adopted definition of what constitutes an event: in previous work, events are defined in different ways, with differing degrees of structure. We consider simply using raw text, which requires no explicit syntactic annotation, as our mediating representation, and evaluate how raw text models compare to models of more structured events.\nKiros et al. (2015) introduced skip-thought vector models, in which an RNN is trained to encode a sentence within a document into a lowdimensional vector that supports predicting the neighboring sentences in the document. Though the objective function used to train networks maximizes performance on the task of predicting sentences from their neighbors, Kiros et al. (2015) do not evaluate directly on the ability of networks to predict text; they instead demonstrate that the intermediate low-dimensional vector embeddings are useful for other tasks. We directly evaluate the text predictions produced by such sentence-level RNN encoder-decoder models, and measure their utility for the task of predicting subsequent events. ar X\niv :1\n60 4.\n02 99\n3v 2\n[ cs\n.C L\n] 8\nJ un\n2 01\n6\nWe find that, on the task of predicting the text of held-out sentences, the systems we train to operate on the level of raw text generally outperform the systems we train to predict text mediated by automatically extracted event structures. On the other hand, if we run an NLP pipeline on the automatically generated text and extract structured events from these predictions, we achieve prediction performance roughly comparable to that of systems trained to predict events directly. The difference between word-level and event-level models on the task of event prediction is marginal, indicating that the task of predicting the next event, particularly in an encoder-decoder setup, may not necessarily need to be mediated by explicit event structures. To our knowledge, this is the first effort to evaluate sentence-level RNN language models directly on the task of predicting document text. Our results show that such models are useful for predicting missing information in text; and the fact that they require no linguistic preprocessing makes them more applicable to languages where quality parsing and co-reference tools are not available."}, {"heading": "2 Background", "text": ""}, {"heading": "2.1 Statistical Script Learning", "text": "Scripts, structured models of stereotypical sequences of events, date back to AI research from the 1970s, in particular the seminal work of Schank and Abelson (1977). In this conception, scripts are modeled as temporally ordered sequences of symbolic structured events. These models are nonprobabilistic and brittle, and pose serious problems for automated learning.\nIn recent years, there has been a growing body of research into statistical script learning systems, which enable statistical inference of implicit events from text. Chambers and Jurafsky (2008; 2009) describe a number of simple event co-occurrence based systems which infer (verb, dependency) pairs related to a particular discourse entity. For example, given the text:\nAndrew Wiles won the 2016 Abel prize for proving Fermat\u2019s last theorem,\nsuch a system will ideally be able to infer novel facts like (accept, subject) or (publish, subject) for the entity Andrew Wiles, and facts like (accept, object) for the entity Abel prize. A number of other systems inferring the same types of pair events have been shown to provide superior performance\nin modeling events in documents (Jans et al., 2012; Rudinger et al., 2015).\nPichotta and Mooney (2014) give a cooccurrence based script system that models and infers more complex multi-argument events from text. For example, in the above example, their model would ideally be able to infer a single event like accept(Wiles, prize), as opposed to the two simpler pairs from which it is composed. They provide evidence that modeling and inferring more complex multi-argument events also yields superior performance on the task of inferring simpler (verb, dependency) pair events. These events are constructed using only coreference information; that is, the learned event co-occurrence models do not directly incorporate noun information.\nMore recently, Pichotta and Mooney (2016) presented an LSTM-based script inference model which models and infers multi-argument events, improving on previous systems on the task of inferring verbs with arguments. This system can incorporate both noun and coreference information about event arguments. We will use this multiargument event formulation (formalized below) and compare LSTM models using this event formulation to LSTM models using raw text."}, {"heading": "2.2 Recurrent Neural Networks", "text": "Recurrent Neural Networks (RNNs) are neural nets whose computation graphs have cycles. In particular, RNN sequence models are RNNs which map a sequence of inputs x1, . . . , xT to a sequence of outputs y1, . . . , yT via a learned latent vector whose value at timestep t is a function of its value at the previous timestep t\u2212 1.\nThe most basic RNN sequence models, socalled \u201cvanilla RNNs\u201d (Elman, 1990), are described by the following equations:\nzt = f(Wi,zxt +Wz,zzt\u22121)\not = g(Wz,ozt)\nwhere xt is the vector describing the input at time t; zt is the vector giving the hidden state at time t; ot is the vector giving the predicted output at time t; f and g are element-wise nonlinear functions (typically sigmoids, hyperbolic tangent, or rectified linear units); and Wi,z , Wz,z , and Wz,o are learned matrices describing linear transformations. The recurrency in the computation graph arises from the fact that zt is a function of zt\u22121.\nThe more complex Long Short-Term Memory (LSTM) RNNs (Hochreiter and Schmidhuber,\nzt\not\nft\nit gt\nzt-1xt\nmt\nFigure 1: Long Short-Term Memory unit at timestep t. The four nonlinearity nodes (it, gt, ft, and ot) all have, as inputs, xt and zt\u22121. Small circles with dots are elementwise vector multiplications.\n1997) have been shown to perform well on a wide variety of NLP tasks (Sutskever et al., 2014; Hermann et al., 2015; Vinyals et al., 2015, inter alia). The LSTM we use is described by:\nit = \u03c3 (Wx,ixt +Wz,izt\u22121 + bi)\nft = \u03c3 (Wx,fxt +Wz,fzt\u22121 + bf )\not = \u03c3 (Wx,oxt +Wh,izt\u22121 + bo)\ngt = tanh (Wx,mxt +Wz,mzt\u22121 + bg)\nmt = ft \u25e6mt\u22121 + it \u25e6 gt zt = ot \u25e6 tanhmt.\nThe model is depicted graphically in Figure 1. The memory vector mt is a function of both its previous value mt\u22121 and the input xt; the vector zt is output both to any layers above the unit (which are trained to predict the output values yt), and is additionally given as input to the LSTM unit at the next timestep t + 1. The W\u2217,\u2217 matrices and b\u2217 vectors are learned model parameters, and u \u25e6 v signifies element-wise multiplication."}, {"heading": "2.3 Sentence-Level RNN Language Models", "text": "RNN sequence models have recently been shown to be extremely effective for word-level and character-level language models (Mikolov et al., 2011; Jozefowicz et al., 2016). At each timestep, these models take a word or character as input, update a hidden state vector, and predict the next\ntimestep\u2019s word or character. There is also a growing body of work on training RNN encoderdecoder models for NLP problems. These systems first encode the entire input into the network\u2019s hidden state vector and then, in a second step, decode the entire output from this vector (Sutskever et al., 2014; Vinyals et al., 2015; Serban et al., 2016).\nSentence-level RNN language models, for example the skip-thought vector system of Kiros et al. (2015), conceptually bridge these two approaches. Whereas standard language models are trained to predict the next token in the sequence of tokens, these systems are explicitly trained to predict the next sentence in the sequence of sentences. Kiros et al. (2015) train an encoder-decoder model to encode a sentence into a fixed-length vector and subsequently decode both the following and preceding sentence, using Gated Recurrent Units (Chung et al., 2014). In the present work, we train an LSTM model to predict a sentence\u2019s successor, which is essentially the forward component of the skip-thought system. Kiros et al. (2015) use the skip-thought system as a means of projecting sentences into low-dimensional vector embeddings, demonstrating the utility of these embeddings on a number of other tasks; in contrast, we will use our trained sentence-level RNN language model directly on the task its objective function optimizes: predicting a sentence\u2019s successor."}, {"heading": "3 Methodology", "text": ""}, {"heading": "3.1 Narrative Cloze Evaluation", "text": "The evaluation of inference-focused statistical script systems is not straightforward. Chambers and Jurafsky (2008) introduced the Narrative Cloze evaluation, in which a single event is held out from a document and systems are judged by the ability to infer this held-out event given the remaining events. This evaluation has been used by a number of published script systems (Chambers and Jurafsky, 2009; Jans et al., 2012; Pichotta and Mooney, 2014; Rudinger et al., 2015). This automated evaluation measures systems\u2019 ability to model and predict events as they co-occur in text.\nThe exact definition of the Narrative Cloze evaluation depends on the formulation of events used in a script system. For example, Chambers and Jurafsky (2008), Jans et al. (2012), and Rudinger et al. (2015) evaluate inference of heldout (verb, dependency) pairs from documents; Pichotta and Mooney (2014) evaluate inference of\nverbs with coreference information about multiple arguments; and Pichotta and Mooney (2016) evaluate inference of verbs with noun information about multiple arguments. In order to gather human judgments of inference quality, the latter also learn an encoder-decoder LSTM network for transforming verbs and noun arguments into English text to present to annotators for evaluation.\nWe evaluate instead on the task of directly inferring sequences of words. That is, instead of defining the Narrative Cloze to be the evaluation of predictions of held-out events, we define the task to be the evaluation of predictions of held-out text; in this setup, predictions need not be mediated by noisy, automatically-extracted events. To evaluate inferred text against gold standard text, we argue that the BLEU metric (Papineni et al., 2002), commonly used to evaluate Statistical Machine Translation systems, is a natural evaluation metric. It is an n-gram-level analog to the eventlevel Narrative Cloze evaluation: whereas the Narrative Cloze evaluates a system on its ability to reconstruct events as they occur in documents, BLEU evaluates a system on how well it reconstructs the n-grams.\nThis evaluation takes some inspiration from the evaluation of neural encoder-decoder translation models (Sutskever et al., 2014; Bahdanau et al., 2015), which use similar architectures for the task of Machine Translation. That is, the task we present can be thought of as \u201ctranslating\u201d a sentence into its successor. While we do not claim that BLEU is necessarily the optimal way of evaluating text-level inferences, but we do claim that it is a natural ngram-level analog to the Narrative Cloze task on events.\nIf a model infers text, we may also evaluate it on the task of inferring events by automatically extracting structured events from its output text (in the same way as events are extracted from natural text). This allows us to compare directly to previous event-based models on the task they are optimized for, namely, predicting structured events."}, {"heading": "3.2 Models", "text": "Statistical script systems take a sequence of events from a document and infer additional events that are statistically probable. Exactly what constitutes an event varies: it may be a (verb, dependency) pair inferred as relating to a particular discourse entity (Chambers and Jurafsky, 2008; Rudinger et\nal., 2015), a simplex verb (Chambers and Jurafsky, 2009; Orr et al., 2014), or a verb with multiple arguments (Pichotta and Mooney, 2014). In the present work, we adopt a representation of events as verbs with multiple arguments (Balasubramanian et al., 2013; Pichotta and Mooney, 2014; Modi and Titov, 2014). Formally, we define an event to be a variadic tuple (v, s, o, p\u2217), where v is a verb, s is a noun standing in subject relation to v, o is a noun standing as a direct object to v, and p\u2217 denotes an arbitrary number of (pobj, prep) pairs, with prep a preposition and pobj a noun related to the verb v via the preposition prep.1 Any argument except v may be null, indicating no noun fills that slot. For example, the text\nNapoleon sent the letter to Josephine\nwould be represented by the event (sent, Napoleon, letter, (Josephine, to)). We represent arguments by their grammatical head words.\nWe evaluate on a number of different neural models which differ in their input and output. All models are LSTM-based encoder-decoder models. These models encode a sentence (either its events or text) into a learned hidden vector state and then, subsequently, decode that vector into its successor sentence (either its events or its text).\nOur general system architecture is as follows. At each timestep t, the input token is represented as a learned 100-dimensional embedding vector (learned jointly with the other parameters of the model), such that predictively similar words should get similar embeddings. This embedding is fed as input to the LSTM unit (that is, it will be the vector xt in Section 2.2, the input to the LSTM). The output of the LSTM unit (called zt in Section 2.2) is then fed to a softmax layer via a learned linear transformation.\nDuring the encoding phase the network is not trained to produce any output. During the decoding phase the output is a one-hot representation of the subsequent timestep\u2019s input token (that is, with a V -word vocabulary, the output will be a V -dimensional vector with one 1 and V \u2212 1 zeros). In this way, the network is trained to consume an entire input sequence and, as a second step, iteratively output the subsequent timestep\u2019s\n1This is essentially the event representation of Pichotta and Mooney (2016), but whereas they limited events to having a single prepositional phrase, we allow an arbitrary number, and we do not lemmatize words.\ninput, which allows the prediction of full output sequences. This setup is pictured diagrammatically in Figure 2, which gives an example of input and output sequence for a token-level encoderdecoder model, encoding the sentence \u201cHello .\u201d and decoding the successor sentence \u201cGoodbye .\u201d Note that we add beginning-of-sequence and end-of-sequence pseudo-tokens to sentences. This formulation allows a system to be trained which can encode a sentence and then infer a successor sentence by iteratively outputting next-input predictions until the </S> end-of-sentence pseudotoken is predicted. We use different LSTMs for encoding and decoding, as the dynamics of the two stages need not be identical.\nWe notate the different systems as follows. Let s1 be the input sentence and s2 its successor sentence. Let t1 denote the sequence of raw tokens in s1, and t2 the tokens of s2. Further, let e1 and e2 be the sequence of structured events occurring in s1 and s2, respectively (described in more detail in Section 4.1), and let e2[0] denote the first event of e2. The different systems we compare are named systematically as follows:\n\u2022 The system t1 t2 is trained to encode a sentence\u2019s tokens and decode its successor\u2019s tokens.\n\u2022 The system e1 e2 is trained to encode a sentence\u2019s events and decode its successor\u2019s events.\n\u2022 The system e1 e2 t2 is trained to encode a sentence\u2019s events, decode its successor\u2019s events, and then encode the latter and subsequently decode the successor\u2019s text.\nWe will not explicitly enumerate all systems, but other systems are defined analogously, with the\nschema X Y describing a system which is trained to encode X and subsequently decode Y , and X Y Z indicating a system which is trained to encode X , decode Y , and subsequently encode Y and decode Z. Note that in a system X Y Z, only X is provided as input.\nWe also present results for systems of the form X\na Y , which signifies that the system is trained to decode Y from X with the addition of an attention mechanism. We use the attention mechanism of Vinyals et al. (2015). In short, these models have additional parameters which can learn soft alignments between positions of encoded inputs and positions in decoded outputs. Attention mechanisms have recently been shown to be quite empirically valuable in many complex sequence prediction tasks. For more details on the model, see Vinyals et al. (2015).\nFigure 3 gives a diagrammatic representation of the different system setups. Text systems infer successor text and, optionally, parse that text and extract events from it; event sequences infer successor events and, optionally, expand inferred events into text.\nNote that the system t1 t2, in which both the encoding and decoding steps operate on raw text, is essentially a one-directional version of the skip-thought system of Kiros et al. (2015).2 Further, the system e1 e2 t2, which is trained to take a sentence\u2019s event sequence as input, predict its successor\u2019s events, and then predict its successor\u2019s words, is comparable to the event inference system of Pichotta and Mooney (2016). They use an LSTM sequence model of events in sequence\n2The system of Kiros et al. (2015), in addition to being trained to predict the next sentence, also contains a backwarddirectional RNN trained to predict a sentence\u2019s predecessor; we condition only on previous text. Kiros et al. (2015) also use Gated Recurrent Units instead of LSTM.\nfor event inference, and optionally transform inferred events to text using another LSTM; we, on the other hand, use an encoder/decoder setup to infer text directly."}, {"heading": "4 Evaluation", "text": ""}, {"heading": "4.1 Experimental Details", "text": "We train a number of LSTM encoder-decoder networks which vary in their input and output. Models are trained on English Language Wikipedia, with 1% of the documents held out as a validation set. Our test set consists of 10,000 unseen sentences (from articles in neither the training nor validation set). We train models with batch stochastic gradient descent with momentum, minimizing the cross-entropy error of output predictions. All models are implemented in TensorFlow (Abadi et al., 2015). We use a vocabulary of the 50,000 most frequent tokens, replacing all other tokens with an out-of-vocabulary pseudo-token. Learned word embeddings are 100-dimensional, and the latent LSTM vector is 500-dimensional. To extract events from text, we use the Stanford Dependency Parser (De Marneffe et al., 2006; Socher et al., 2013). We use the Moses toolkit (Koehn et al., 2007) to calculate BLEU.3\nWe evaluate the task of predicting held-out text with three metrics. The first metric is BLEU, which is standard BLEU (the geometric mean of modified 1-, 2-, 3-, and 4-gram precision against a gold standard, multiplied by a brevity penalty which penalizes short candidates). The second metric we present, BLEU-BP, is BLEU without the brevity\n3Via the script multi-bleu.pl.\npenalty: in the task of predicting successor sentences, depending on predictions\u2019 end use, ontopic brevity is not necessarily undesirable. Evaluations are over top system inferences (that is, decoding is done by taking the argmax). Finally, we also present values for unigram precision (1G P), one of the components of BLEU.\nWe also evaluate on the task of predicting heldout verb-argument events, either directly or via inferred text. We use two evaluation metrics for this task. First, the Accuracy metric measures the percentage of a system\u2019s most confident guesses that are totally correct. That is, for each held-out event, a system makes its single most confident guess for that event, and we calculate the total percentage of such guesses which are totally correct. Some authors (e.g. Jans et al. (2012), Pichotta and Mooney (2016)) present results on the \u201cRecall at k\u201d metric, judging gold-standard recall against a list of top k event inferences; this metric is equivalent to \u201cRecall at 1.\u201d This is quite a stringent metric, as an inference is only counted correct if the verb and all arguments are correct. To relax this requirement, we also present results on what we call the Partial Credit metric, which is the percentage of held-out event components identical to the respective components in a system\u2019s top inference.4"}, {"heading": "4.2 Experimental Evaluation", "text": "Table 1 gives the results of evaluating predicted successor sentence text against the gold standard using BLEU. The baseline system t1 t1 sim-\n4This metric was used in Pichotta and Mooney (2014), but there it was called Accuracy. In the present work, we use \u201caccuracy\u201d only to mean Recall at 1.\nply reproduces the input sentence as its own successor.5 Below this are systems which make predictions from event information, with systems which make predictions from raw text underneath. Transformations writtenX a Y are, recall, encoder-decoder LSTMs with attention.\nNote, first, that the text-level models outperform other models on BLEU. In particular, the two-step model e1 e2 t2 (and comparable model with attention) which first predicts successor events and then, as a separate step, expands these events into text, performs quite poorly. This is perhaps due to the fact that the translation from text to events is lossy, so reconstructing raw sentence tokens is not straightforward.\nThe BLEU-BP scores, which are BLEU without the brevity penalty, are noticeably higher in the text-level models than the raw BLEU scores. This is in part because these models seem to produce shorter sentences, as illustrated below in section 4.4.\nThe attention mechanism does not obviously benefit either text or event level prediction encoder-decoder models. This could be because there is not an obvious alignment structure between contiguous spans of raw text (or events) in natural documents.\nThese results provide evidence that, if the Narrative Cloze task is defined to evaluate prediction of held-out text from a document, then sentencelevel RNN language models provide superior performance to RNN models operating at the event level. In other words, linguistic pre-processing does not obviously benefit encoder-decoder models trained to predict succeeding text.\nTable 2 gives results on the task of predicting the next verb with its nominal arguments; that is, whereas Table 1 gave results on a text analog to the Narrative Cloze evaluation (BLEU), Table 2 gives\n5\u201ct1 t1\u201d is minor abuse of notation, as the system is not an encoder/decoder but a simple identity function.\nresults on the verb-with-arguments prediction version. In the t1 t2 e2[0] system (and the comparable system with attention), events are extracted from automatically generated text by parsing output text and applying the same event extractor to this parse used to extract events from raw text.6 The row labeled Most common in Table 2 gives performance for the baseline system which always guesses the most common event in the training set.\nThe LSTM models trained to directly predict events are roughly comparable to systems which operate on raw text, performing slightly worse on accuracy and slightly better when taking partial credit into account. As with the previous comparisons with BLEU, the attention mechanism does not provide an obvious improvement when decoding inferences, perhaps, again, because the event inference problem lacks a clear alignment structure.\nThese systems infer their most probable guesses of e2[0], the first event in the succeeding sentence. In order for a system prediction to be counted as correct, it must have the correct strings for grammatical head words of all components of the correct event. Note also that we judge only against a system\u2019s single most confident prediction (as opposed to some prior work (Jans et al., 2012; Pichotta and Mooney, 2014) which takes the top k predictions\u2014the numbers presented here are therefore noticeably lower). We do this mainly for computational reasons: namely, a beam search over a full sentence\u2019s text would be quite computationally expensive."}, {"heading": "4.3 Adding Additional Context", "text": "The results given above are for systems which encode information about one sentence and decode\n6This is also a minor abuse of notation, as the second transformation uses a statistical parser rather than an encoder/decoder.\ninformation about its successor. This is within the spirit of the skip-gram system of Kiros et al. (2015), but we may wish to condition on more of the document. To investigate this, we perform an experiment varying the number of previous sentences input during the encoding step of t1 t2 text-level models without attention. We train three different models, which take either one, three, or five sentences as input, respectively, and are trained to output the successor sentence.\nTable 3 gives the results of running these models on 10,000 sentences from the validation set. As can be seen, in the training setup we investigate, more additional context sentences have a mixed effect, depending on the metric. This is perhaps due in part to the fact that we kept hyperparameters fixed between experiments, and a different hyperparameter regime would benefit predictions from longer input sequences. More investigation could prove fruitful."}, {"heading": "4.4 Qualitative Analysis", "text": "Figure 4 gives some example automatic nextsentence text predictions, along with the input sentence and the gold-standard next sentence. Note that gold-standard successor sentences frequently introduce new details not obviously inferrable from previous text. Top system predictions, on the other hand, are frequently fairly short. This is likely due part to the fact that the cross-entropy loss does not directly penalize short sentences and part to the fact that many details in gold-standard successor text are inherently difficult to predict."}, {"heading": "4.5 Discussion", "text": "The general low magnitude of the BLEU scores presented in Table 1, especially in comparison to the scores typically reported in Machine Translation results, indicates the difficulty of the task. In open-domain text, a sentence is typically not straightforwardly predictable from preceding text; if it were, it would likely not be stated.\nOn the task of verb-argument prediction in Table 2, the difference between t1 t2 and e1 e2[0] is fairly marginal. This raises the general question of how much explicit syntactic analysis is required for the task of event inference, particularly in the encoder/decoder setup. These results provide evidence that a sentence-level RNN language model which operates on raw tokens can predict what comes next in a document as well or nearly as well as an event-mediated script model."}, {"heading": "5 Future Work", "text": "There are a number of further extensions to this work. First, in this work (and, more generally, Neural Machine Translation research), though generated text is evaluated using BLEU, systems are optimized for per-token cross-entropy error, which is a different objective (Luong et al. (2016) give an example of a system which improves cross-entropy error but reduces BLEU score in the Neural Machine Translation context). Finding differentiable objective functions that more directly target more complex evaluation metrics like BLEU is an interesting future research direction.\nRelatedly, though we argue that BLEU is a natural token-sequence-level analog to the verbargument formulation of the Narrative Cloze task, it is not obviously the best metric for evaluating inferences of text, and comparing these automated metrics with human judgments is an important direction of future work. Pichotta and Mooney (2016) present results on crowdsourced human evaluation of script inferences that could be repeated for our RNN models.\nThough we focus here on forward-direction models predicting successor sentences, bidirectional encoder-decoder models, which predict sentences from both previous and subsequent text, are another interesting future research direction."}, {"heading": "6 Related Work", "text": "The use of scripts in AI dates back to the 1970s (Minsky, 1974; Schank and Abelson, 1977); in this conception, scripts were composed of complex events with no probabilistic semantics, which were difficult to learn automatically. In recent years, a growing body of research has investigated learning probabilistic co-occurrence models with simpler events. Chambers and Jurafsky (2008) propose a model of co-occurrence of (verb, dependency) pairs, which can be used to infer such\npairs from documents; Jans et al. (2012) give a superior model in the same general framework. Chambers and Jurafsky (2009) give a method of generalizing from single sequences of pair events to collections of such sequences. Rudinger et al. (2015) apply a discriminative language model to the (verb, dependency) sequence modeling task, raising the question of to what extent event inference can be performed with standard language models applied to event sequences. Pichotta and Mooney (2014) describe a method of learning a co-occurrence based model of verbs with multiple coreference-based entity arguments.\nThere is a body of related work focused on learning models of co-occurring events to automatically induce templates of complex events comprising multiple verbs and arguments, aimed ultimately at maximizing coherency of templates (Chambers, 2013; Cheung et al., 2013; Balasubramanian et al., 2013). Ferraro and Van Durme (2016) give a model integrating various levels of event information of increasing abstraction, evaluating both on coherence of induced templates and log-likelihood of predictions of held-out events. McIntyre and Lapata (2010) describe a system that learns a model of co-occurring events and uses this model to automatically generate stories via a Genetic Algorithm.\nThere have been a number of recent published neural models for various event- and discourserelated tasks. Pichotta and Mooney (2016) show that an LSTM event sequence model outperforms previous co-occurrence methods for predicting verbs with arguments. Granroth-Wilding and Clark (2016) describe a feedforward neu-\nral network which composes verbs and arguments into low-dimensional vectors, evaluating on a multiple-choice version of the Narrative Cloze task. Modi and Titov (2014) describe a feedforward network which is trained to predict event orderings. Kiros et al. (2015) give a method of embedding sentences in low-dimensional space such that embeddings are predictive of neighboring sentences. Li et al. (2014) and Ji and Eisenstein (2015), use RNNs for discourse parsing; Liu et al. (2016) use a Convolutional Neural Network for implicit discourse relation classification."}, {"heading": "7 Conclusion", "text": "We have given what we believe to be the first systematic evaluation of sentence-level RNN language models on the task of predicting held-out document text. We have found that models operating on raw text perform roughly comparably to identical models operating on predicate-argument event structures when predicting the latter, and that text models provide superior predictions of raw text. This provides evidence that, for the task of held-out event prediction, encoder/decoder models mediated by automatically extracted events may not be learning appreciably more structure than systems trained on raw tokens alone."}, {"heading": "Acknowledgments", "text": "Thanks to Stephen Roller, Amelia Harrison, and the UT NLP group for their help and feedback. Thanks also to the anonymous reviewers for their very helpful suggestions. This research was supported in part by the DARPA DEFT program under AFRL grant FA8750-13-2-0026."}, {"heading": "A Supplemental Material", "text": "Our Wikipedia dump from which the training, development, and test sets are constructed is from Jan 2, 2014. We parse text using version 3.3.1 of the Stanford CoreNLP system. We use a vocab consisting of the 50,000 most common tokens, replacing all others with an Out-of-vocabulary pseudotoken. We train using batch stochastic gradient descent with momentum with a batch size of 10 sequences, using an initial learning rate of 0.1, damping the learning rate by 0.99 any time the previous hundred updates\u2019 average test error is greater than any of the average losses in the previous ten groups of hundred updates. Our momentum parameter is 0.95. Our embedding vectors are 100-dimensional, and our LSTM hidden state is\n500-dimensional. We train all models for 300k batch updates (with the exception of the models compared in \u00a74.3, all of which we train for 150k batch updates, as training is appreciably slower with longer input sequences). Training takes approximately 36 hours on an NVIDIA Titan Black GPU."}], "references": [{"title": "TensorFlow: Large-scale machine learning on heterogeneous systems", "author": ["Vincent Vanhoucke", "Vijay Vasudevan", "Fernanda Vi\u00e9gas", "Oriol Vinyals", "Pete Warden", "Martin Wattenberg", "Martin Wicke", "Yuan Yu", "Xiaoqiang Zheng."], "venue": "Software available from", "citeRegEx": "Vanhoucke et al\\.,? 2015", "shortCiteRegEx": "Vanhoucke et al\\.", "year": 2015}, {"title": "Neural machine translation by jointly learning to align and translate", "author": ["KyungHyun Cho", "Yoshua Bengio"], "venue": "In Proceedings of the 2015 International Conference on Learning Representations (ICLR", "citeRegEx": "Bahdanau et al\\.,? \\Q2015\\E", "shortCiteRegEx": "Bahdanau et al\\.", "year": 2015}, {"title": "Generating coherent event schemas at scale", "author": ["Stephen Soderland", "Mausam", "Oren Etzioni"], "venue": "In Proceedings of the 2013 Conference on Empirical Methods in Natural Language Processing", "citeRegEx": "Balasubramanian et al\\.,? \\Q2013\\E", "shortCiteRegEx": "Balasubramanian et al\\.", "year": 2013}, {"title": "Unsupervised learning of narrative event chains", "author": ["Chambers", "Jurafsky2008] Nathanael Chambers", "Daniel Jurafsky"], "venue": "In Proceedings of the 46th Annual Meeting of the Association for Computational Linguistics", "citeRegEx": "Chambers et al\\.,? \\Q2008\\E", "shortCiteRegEx": "Chambers et al\\.", "year": 2008}, {"title": "Unsupervised learning of narrative schemas and their participants", "author": ["Chambers", "Jurafsky2009] Nathanael Chambers", "Dan Jurafsky"], "venue": "In Proceedings of the 47th Annual Meeting of the Association for Computational Linguistics (ACL-09),", "citeRegEx": "Chambers et al\\.,? \\Q2009\\E", "shortCiteRegEx": "Chambers et al\\.", "year": 2009}, {"title": "Event schema induction with a probabilistic entity-driven model", "author": ["Nathanael Chambers"], "venue": "In Proceedings of the 2013 Conference on Empirical Methods in Natural Language Processing (EMNLP-2013)", "citeRegEx": "Chambers.,? \\Q2013\\E", "shortCiteRegEx": "Chambers.", "year": 2013}, {"title": "Probabilistic frame induction", "author": ["Hoifung Poon", "Lucy Vanderwende"], "venue": "In Proceedings of the 2013 Conference of the North American Chapter of the Association for Computational Linguistics: Human Lan-", "citeRegEx": "Cheung et al\\.,? \\Q2013\\E", "shortCiteRegEx": "Cheung et al\\.", "year": 2013}, {"title": "Empirical evaluation of gated recurrent neural networks on sequence modeling", "author": ["Chung et al.2014] Junyoung Chung", "Caglar Gulcehre", "KyungHyun Cho", "Yoshua Bengio"], "venue": "In NIPS Deep Learning Workshop", "citeRegEx": "Chung et al\\.,? \\Q2014\\E", "shortCiteRegEx": "Chung et al\\.", "year": 2014}, {"title": "Generating typed dependency parses from phrase structure parses", "author": ["Bill MacCartney", "Christopher D. Manning"], "venue": "In Proceedings of the 5th International Conference on Language Resources", "citeRegEx": "Marneffe et al\\.,? \\Q2006\\E", "shortCiteRegEx": "Marneffe et al\\.", "year": 2006}, {"title": "Finding structure in time", "author": ["Jeffrey L. Elman"], "venue": "Cognitive Science,", "citeRegEx": "Elman.,? \\Q1990\\E", "shortCiteRegEx": "Elman.", "year": 1990}, {"title": "A unified Bayesian model of scripts, frames and language", "author": ["Ferraro", "Van Durme2016] Francis Ferraro", "Benjamin Van Durme"], "venue": "In Proceedings of the 30th AAAI Conference on Artificial Intelligence (AAAI-16)", "citeRegEx": "Ferraro et al\\.,? \\Q2016\\E", "shortCiteRegEx": "Ferraro et al\\.", "year": 2016}, {"title": "What happens next? Event prediction using a compositional neural network model", "author": ["Granroth-Wilding", "Clark2016] Mark GranrothWilding", "Stephen Clark"], "venue": "In Proceedings of the 30th AAAI Conference on Artificial Intelligence (AAAI-16)", "citeRegEx": "Granroth.Wilding et al\\.,? \\Q2016\\E", "shortCiteRegEx": "Granroth.Wilding et al\\.", "year": 2016}, {"title": "Teaching machines to read and comprehend", "author": ["Tom\u00e1\u0161 Ko\u010disk\u1ef3", "Edward Grefenstette", "Lasse Espeholt", "Will Kay", "Mustafa Suleyman", "Phil Blunsom"], "venue": "In Proceedings of the 29th Annual Conference on Neural", "citeRegEx": "Hermann et al\\.,? \\Q2015\\E", "shortCiteRegEx": "Hermann et al\\.", "year": 2015}, {"title": "Long short-term memory", "author": ["Hochreiter", "Schmidhuber1997] Sepp Hochreiter", "J\u00fcrgen Schmidhuber"], "venue": "Neural Computation,", "citeRegEx": "Hochreiter et al\\.,? \\Q1997\\E", "shortCiteRegEx": "Hochreiter et al\\.", "year": 1997}, {"title": "Skip ngrams and ranking functions for predicting script events", "author": ["Jans et al.2012] Bram Jans", "Steven Bethard", "Ivan Vuli\u0107", "Marie Francine Moens"], "venue": "In Proceedings of the 13th Conference of the European Chapter of the Association", "citeRegEx": "Jans et al\\.,? \\Q2012\\E", "shortCiteRegEx": "Jans et al\\.", "year": 2012}, {"title": "One vector is not enough: Entityaugmented distributional semantics for discourse relations. Transactions of the Association for Computational Linguistics (TACL)", "author": ["Ji", "Eisenstein2015] Yangfeng Ji", "Jacob Eisenstein"], "venue": null, "citeRegEx": "Ji et al\\.,? \\Q2015\\E", "shortCiteRegEx": "Ji et al\\.", "year": 2015}, {"title": "Exploring the limits of language modeling", "author": ["Oriol Vinyals", "Mike Schuster", "Noam Shazeer", "Yonghui Wu"], "venue": "arXiv preprint arXiv:1602.02410", "citeRegEx": "Jozefowicz et al\\.,? \\Q2016\\E", "shortCiteRegEx": "Jozefowicz et al\\.", "year": 2016}, {"title": "Moses: Open source toolkit for statistical machine translation", "author": ["Herbst."], "venue": "Proceedings of", "citeRegEx": "Herbst.,? 2007", "shortCiteRegEx": "Herbst.", "year": 2007}, {"title": "Recursive deep models for discourse parsing", "author": ["Li et al.2014] Jiwei Li", "Rumeng Li", "Eduard Hovy"], "venue": "In Proceedings of the 2014 Conference on Empirical Methods in Natural Language Processing (EMNLP),", "citeRegEx": "Li et al\\.,? \\Q2014\\E", "shortCiteRegEx": "Li et al\\.", "year": 2014}, {"title": "Implicit discourse relation classification via multi-task neural networks", "author": ["Liu et al.2016] Yang Liu", "Sujian Li", "Xiaodong Zhang", "Zhifang Sui"], "venue": "In Proceedings of the 30th AAAI Conference on Artificial Intelligence (AAAI-16)", "citeRegEx": "Liu et al\\.,? \\Q2016\\E", "shortCiteRegEx": "Liu et al\\.", "year": 2016}, {"title": "Multi-task sequence to sequence learning", "author": ["Quoc V. Le", "Ilya Sutskever", "Oriol Vinyals", "Lukasz Kaiser"], "venue": "In Proceedings of the 4th International Conference on Learning Representations (ICLR-16)", "citeRegEx": "Luong et al\\.,? \\Q2016\\E", "shortCiteRegEx": "Luong et al\\.", "year": 2016}, {"title": "Plot induction and evolutionary search for story generation", "author": ["McIntyre", "Lapata2010] Neil McIntyre", "Mirella Lapata"], "venue": "In Proceedings of the 48th Annual Meeting of the Association for Computational Linguistics", "citeRegEx": "McIntyre et al\\.,? \\Q2010\\E", "shortCiteRegEx": "McIntyre et al\\.", "year": 2010}, {"title": "Empirical evaluation and combination of advanced language modeling techniques", "author": ["Anoop Deoras", "Stefan Kombrink", "Lukas Burget", "Jan Cernock\u1ef3"], "venue": "In Proceedings of the 12th Annual Conference of the Inter-", "citeRegEx": "Mikolov et al\\.,? \\Q2011\\E", "shortCiteRegEx": "Mikolov et al\\.", "year": 2011}, {"title": "A framework for representing knowledge", "author": ["Marvin Minsky"], "venue": "Technical report, MIT-AI Laboratory", "citeRegEx": "Minsky.,? \\Q1974\\E", "shortCiteRegEx": "Minsky.", "year": 1974}, {"title": "Inducing neural models of script knowledge", "author": ["Modi", "Titov2014] Ashutosh Modi", "Ivan Titov"], "venue": "In Proceedings of the Eighteenth Conference on Computational Natural Language Learning", "citeRegEx": "Modi et al\\.,? \\Q2014\\E", "shortCiteRegEx": "Modi et al\\.", "year": 2014}, {"title": "Learning scripts as Hidden Markov Models", "author": ["Orr et al.2014] J Walker Orr", "Prasad Tadepalli", "Janardhan Rao Doppa", "Xiaoli Fern", "Thomas G Dietterich"], "venue": "In Proceedings of the 28th AAAI Conference on Artificial Intelligence (AAAI-14)", "citeRegEx": "Orr et al\\.,? \\Q2014\\E", "shortCiteRegEx": "Orr et al\\.", "year": 2014}, {"title": "BLEU: a method for automatic evaluation of machine translation", "author": ["Salim Roukos", "Todd Ward", "Wei-Jing Zhu"], "venue": "In Proceedings of the 40th Annual Meeting of the Association for Computational Linguistics", "citeRegEx": "Papineni et al\\.,? \\Q2002\\E", "shortCiteRegEx": "Papineni et al\\.", "year": 2002}, {"title": "Statistical script learning with multi-argument events", "author": ["Pichotta", "Mooney2014] Karl Pichotta", "Raymond J. Mooney"], "venue": "In Proceedings of the 14th Conference of the European Chapter of the Association", "citeRegEx": "Pichotta et al\\.,? \\Q2014\\E", "shortCiteRegEx": "Pichotta et al\\.", "year": 2014}, {"title": "Learning statistical scripts with LSTM recurrent neural networks", "author": ["Pichotta", "Mooney2016] Karl Pichotta", "Raymond J. Mooney"], "venue": "In Proceedings of the 30th AAAI Conference on Artificial Intelligence (AAAI-16)", "citeRegEx": "Pichotta et al\\.,? \\Q2016\\E", "shortCiteRegEx": "Pichotta et al\\.", "year": 2016}, {"title": "Script induction as language modeling", "author": ["Pushpendre Rastogi", "Francis Ferraro", "Benjamin Van Durme"], "venue": "In Proceedings of the 2015 Conference on Empirical Methods in Natural Language Processing (EMNLP-", "citeRegEx": "Rudinger et al\\.,? \\Q2015\\E", "shortCiteRegEx": "Rudinger et al\\.", "year": 2015}, {"title": "Scripts, Plans, Goals and Understanding: An Inquiry into Human Knowledge Structures", "author": ["Schank", "Abelson1977] Roger C. Schank", "Robert P. Abelson"], "venue": null, "citeRegEx": "Schank et al\\.,? \\Q1977\\E", "shortCiteRegEx": "Schank et al\\.", "year": 1977}, {"title": "Building end-to-end dialogue systems using generative hierarchical neural network models", "author": ["Alessandro Sordoni", "Yoshua Bengio", "Aaron Courville", "Joelle Pineau"], "venue": null, "citeRegEx": "Serban et al\\.,? \\Q2016\\E", "shortCiteRegEx": "Serban et al\\.", "year": 2016}, {"title": "Parsing with compositional vector grammars", "author": ["John Bauer", "Christopher D. Manning", "Andrew Y. Ng"], "venue": "In Proceedings of the 51st Annual Meeting of the Association for Computational Linguistics", "citeRegEx": "Socher et al\\.,? \\Q2013\\E", "shortCiteRegEx": "Socher et al\\.", "year": 2013}, {"title": "Sequence to sequence learning with neural networks", "author": ["Oriol Vinyals", "Quoc V. Le"], "venue": "In Proceedings of the 28th Annual Conference on Neural Information Processing Systems", "citeRegEx": "Sutskever et al\\.,? \\Q2014\\E", "shortCiteRegEx": "Sutskever et al\\.", "year": 2014}, {"title": "Grammar as a foreign language", "author": ["\u0141ukasz Kaiser", "Terry Koo", "Slav Petrov", "Ilya Sutskever", "Geoffrey Hinton"], "venue": "In Proceedings of the 29th Annual Conference on Neural Information Processing Systems (NIPS-15),", "citeRegEx": "Vinyals et al\\.,? \\Q2015\\E", "shortCiteRegEx": "Vinyals et al\\.", "year": 2015}], "referenceMentions": [{"referenceID": 29, "context": "discriminative language models (Rudinger et al., 2015) and Long Short Term Memory (LSTM) recurrent neural nets (Pichotta and Mooney, 2016), are able to infer held-out events more accurately than previous approaches.", "startOffset": 31, "endOffset": 54}, {"referenceID": 14, "context": "A number of other systems inferring the same types of pair events have been shown to provide superior performance in modeling events in documents (Jans et al., 2012; Rudinger et al., 2015).", "startOffset": 146, "endOffset": 188}, {"referenceID": 29, "context": "A number of other systems inferring the same types of pair events have been shown to provide superior performance in modeling events in documents (Jans et al., 2012; Rudinger et al., 2015).", "startOffset": 146, "endOffset": 188}, {"referenceID": 14, "context": "A number of other systems inferring the same types of pair events have been shown to provide superior performance in modeling events in documents (Jans et al., 2012; Rudinger et al., 2015). Pichotta and Mooney (2014) give a cooccurrence based script system that models and infers more complex multi-argument events from text.", "startOffset": 147, "endOffset": 217}, {"referenceID": 14, "context": "A number of other systems inferring the same types of pair events have been shown to provide superior performance in modeling events in documents (Jans et al., 2012; Rudinger et al., 2015). Pichotta and Mooney (2014) give a cooccurrence based script system that models and infers more complex multi-argument events from text. For example, in the above example, their model would ideally be able to infer a single event like accept(Wiles, prize), as opposed to the two simpler pairs from which it is composed. They provide evidence that modeling and inferring more complex multi-argument events also yields superior performance on the task of inferring simpler (verb, dependency) pair events. These events are constructed using only coreference information; that is, the learned event co-occurrence models do not directly incorporate noun information. More recently, Pichotta and Mooney (2016) presented an LSTM-based script inference model", "startOffset": 147, "endOffset": 893}, {"referenceID": 9, "context": "The most basic RNN sequence models, socalled \u201cvanilla RNNs\u201d (Elman, 1990), are described by the following equations:", "startOffset": 60, "endOffset": 73}, {"referenceID": 22, "context": "RNN sequence models have recently been shown to be extremely effective for word-level and character-level language models (Mikolov et al., 2011; Jozefowicz et al., 2016).", "startOffset": 122, "endOffset": 169}, {"referenceID": 16, "context": "RNN sequence models have recently been shown to be extremely effective for word-level and character-level language models (Mikolov et al., 2011; Jozefowicz et al., 2016).", "startOffset": 122, "endOffset": 169}, {"referenceID": 33, "context": "These systems first encode the entire input into the network\u2019s hidden state vector and then, in a second step, decode the entire output from this vector (Sutskever et al., 2014; Vinyals et al., 2015; Serban et al., 2016).", "startOffset": 153, "endOffset": 220}, {"referenceID": 34, "context": "These systems first encode the entire input into the network\u2019s hidden state vector and then, in a second step, decode the entire output from this vector (Sutskever et al., 2014; Vinyals et al., 2015; Serban et al., 2016).", "startOffset": 153, "endOffset": 220}, {"referenceID": 31, "context": "These systems first encode the entire input into the network\u2019s hidden state vector and then, in a second step, decode the entire output from this vector (Sutskever et al., 2014; Vinyals et al., 2015; Serban et al., 2016).", "startOffset": 153, "endOffset": 220}, {"referenceID": 7, "context": "(2015) train an encoder-decoder model to encode a sentence into a fixed-length vector and subsequently decode both the following and preceding sentence, using Gated Recurrent Units (Chung et al., 2014).", "startOffset": 181, "endOffset": 201}, {"referenceID": 14, "context": "This evaluation has been used by a number of published script systems (Chambers and Jurafsky, 2009; Jans et al., 2012; Pichotta and Mooney, 2014; Rudinger et al., 2015).", "startOffset": 70, "endOffset": 168}, {"referenceID": 29, "context": "This evaluation has been used by a number of published script systems (Chambers and Jurafsky, 2009; Jans et al., 2012; Pichotta and Mooney, 2014; Rudinger et al., 2015).", "startOffset": 70, "endOffset": 168}, {"referenceID": 5, "context": "Chambers and Jurafsky (2008) introduced the Narrative Cloze evaluation, in which a single event is held out from a document and systems are judged by the ability to infer this held-out event given the remaining events.", "startOffset": 0, "endOffset": 29}, {"referenceID": 5, "context": "For example, Chambers and Jurafsky (2008), Jans et al.", "startOffset": 13, "endOffset": 42}, {"referenceID": 5, "context": "For example, Chambers and Jurafsky (2008), Jans et al. (2012), and Rudinger et al.", "startOffset": 13, "endOffset": 62}, {"referenceID": 5, "context": "For example, Chambers and Jurafsky (2008), Jans et al. (2012), and Rudinger et al. (2015) evaluate inference of heldout (verb, dependency) pairs from documents; Pichotta and Mooney (2014) evaluate inference of", "startOffset": 13, "endOffset": 90}, {"referenceID": 5, "context": "For example, Chambers and Jurafsky (2008), Jans et al. (2012), and Rudinger et al. (2015) evaluate inference of heldout (verb, dependency) pairs from documents; Pichotta and Mooney (2014) evaluate inference of", "startOffset": 13, "endOffset": 188}, {"referenceID": 26, "context": "evaluate inferred text against gold standard text, we argue that the BLEU metric (Papineni et al., 2002), commonly used to evaluate Statistical Machine Translation systems, is a natural evaluation metric.", "startOffset": 81, "endOffset": 104}, {"referenceID": 33, "context": "This evaluation takes some inspiration from the evaluation of neural encoder-decoder translation models (Sutskever et al., 2014; Bahdanau et al., 2015), which use similar architectures for the task", "startOffset": 104, "endOffset": 151}, {"referenceID": 1, "context": "This evaluation takes some inspiration from the evaluation of neural encoder-decoder translation models (Sutskever et al., 2014; Bahdanau et al., 2015), which use similar architectures for the task", "startOffset": 104, "endOffset": 151}, {"referenceID": 29, "context": "Exactly what constitutes an event varies: it may be a (verb, dependency) pair inferred as relating to a particular discourse entity (Chambers and Jurafsky, 2008; Rudinger et al., 2015), a simplex verb (Chambers and Jurafsky, 2009; Orr et al.", "startOffset": 132, "endOffset": 184}, {"referenceID": 25, "context": ", 2015), a simplex verb (Chambers and Jurafsky, 2009; Orr et al., 2014), or a verb with multiple arguments (Pichotta and Mooney, 2014).", "startOffset": 24, "endOffset": 71}, {"referenceID": 2, "context": "In the present work, we adopt a representation of events as verbs with multiple arguments (Balasubramanian et al., 2013; Pichotta and Mooney, 2014; Modi and Titov, 2014).", "startOffset": 90, "endOffset": 169}, {"referenceID": 34, "context": "We use the attention mechanism of Vinyals et al. (2015). In short, these models", "startOffset": 34, "endOffset": 56}, {"referenceID": 34, "context": "For more details on the model, see Vinyals et al. (2015).", "startOffset": 35, "endOffset": 57}, {"referenceID": 32, "context": "To extract events from text, we use the Stanford Dependency Parser (De Marneffe et al., 2006; Socher et al., 2013).", "startOffset": 67, "endOffset": 114}, {"referenceID": 14, "context": "Jans et al. (2012), Pichotta and Mooney (2016)) present results on the \u201cRecall at k\u201d metric, judging gold-standard recall against a list of top k event inferences; this metric is equivalent to \u201cRecall at 1.", "startOffset": 0, "endOffset": 19}, {"referenceID": 14, "context": "Jans et al. (2012), Pichotta and Mooney (2016)) present results on the \u201cRecall at k\u201d metric, judging gold-standard recall against a list of top k event inferences; this metric is equivalent to \u201cRecall at 1.", "startOffset": 0, "endOffset": 47}, {"referenceID": 14, "context": "Note also that we judge only against a system\u2019s single most confident prediction (as opposed to some prior work (Jans et al., 2012; Pichotta and Mooney, 2014) which takes the top k predictions\u2014the numbers presented here are therefore noticeably lower).", "startOffset": 112, "endOffset": 158}, {"referenceID": 20, "context": "Neural Machine Translation research), though generated text is evaluated using BLEU, systems are optimized for per-token cross-entropy error, which is a different objective (Luong et al. (2016) give an example of a system which improves cross-entropy error but reduces BLEU score in the", "startOffset": 174, "endOffset": 194}, {"referenceID": 23, "context": "The use of scripts in AI dates back to the 1970s (Minsky, 1974; Schank and Abelson, 1977); in this conception, scripts were composed of complex events with no probabilistic semantics, which were difficult to learn automatically.", "startOffset": 49, "endOffset": 89}, {"referenceID": 5, "context": "Chambers and Jurafsky (2008) propose a model of co-occurrence of (verb, dependency) pairs, which can be used to infer such", "startOffset": 0, "endOffset": 29}, {"referenceID": 13, "context": "pairs from documents; Jans et al. (2012) give a superior model in the same general framework.", "startOffset": 22, "endOffset": 41}, {"referenceID": 5, "context": "Chambers and Jurafsky (2009) give a method of", "startOffset": 0, "endOffset": 29}, {"referenceID": 29, "context": "Rudinger et al. (2015) apply a discriminative language model to the (verb, dependency) sequence modeling task, raising the question of to what extent event in-", "startOffset": 0, "endOffset": 23}, {"referenceID": 5, "context": "There is a body of related work focused on learning models of co-occurring events to automatically induce templates of complex events comprising multiple verbs and arguments, aimed ultimately at maximizing coherency of templates (Chambers, 2013; Cheung et al., 2013; Balasubramanian et al., 2013).", "startOffset": 229, "endOffset": 296}, {"referenceID": 6, "context": "There is a body of related work focused on learning models of co-occurring events to automatically induce templates of complex events comprising multiple verbs and arguments, aimed ultimately at maximizing coherency of templates (Chambers, 2013; Cheung et al., 2013; Balasubramanian et al., 2013).", "startOffset": 229, "endOffset": 296}, {"referenceID": 2, "context": "There is a body of related work focused on learning models of co-occurring events to automatically induce templates of complex events comprising multiple verbs and arguments, aimed ultimately at maximizing coherency of templates (Chambers, 2013; Cheung et al., 2013; Balasubramanian et al., 2013).", "startOffset": 229, "endOffset": 296}, {"referenceID": 2, "context": ", 2013; Balasubramanian et al., 2013). Ferraro and Van Durme (2016) give a model integrating various levels of event information of increasing abstraction, evaluating both on coherence of induced templates and log-likelihood of predictions of held-out events.", "startOffset": 8, "endOffset": 68}, {"referenceID": 2, "context": ", 2013; Balasubramanian et al., 2013). Ferraro and Van Durme (2016) give a model integrating various levels of event information of increasing abstraction, evaluating both on coherence of induced templates and log-likelihood of predictions of held-out events. McIntyre and Lapata (2010) describe a system that learns a model of co-occurring events and uses this model to automatically generate stories via a Genetic Algorithm.", "startOffset": 8, "endOffset": 287}, {"referenceID": 18, "context": "Li et al. (2014) and Ji and Eisenstein", "startOffset": 0, "endOffset": 17}, {"referenceID": 19, "context": "(2015), use RNNs for discourse parsing; Liu et al. (2016) use a Convolutional Neural Network for implicit discourse relation classification.", "startOffset": 40, "endOffset": 58}], "year": 2016, "abstractText": "There is a small but growing body of research on statistical scripts, models of event sequences that allow probabilistic inference of implicit events from documents. These systems operate on structured verb-argument events produced by an NLP pipeline. We compare these systems with recent Recurrent Neural Net models that directly operate on raw tokens to predict sentences, finding the latter to be roughly comparable to the former in terms of predicting missing events in documents.", "creator": "LaTeX with hyperref package"}}}