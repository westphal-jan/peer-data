{"id": "1604.05529", "review": {"conference": "ACL", "VERSION": "v1", "DATE_OF_SUBMISSION": "19-Apr-2016", "title": "Multilingual Part-of-Speech Tagging with Bidirectional Long Short-Term Memory Models and Auxiliary Loss", "abstract": "Bi-directional long short-term memory (LSTM) networks have recently proven successful for various NLP sequence modeling tasks, but little is known about their reliance to input representations, target languages, data set size, and label noise. We address these issues and evaluate bi-LSTMs with word, character, and unicode byte embeddings for POS tagging. We compare bi-LSTMs to traditional POS taggers across languages and data sizes, and show that LSTM does not perform at least twice as well on both data size and encoding on the surface of the target language, and both data sizes have very low rates of error. We focus primarily on the types of data that appear to be stored in the source system, such as word, character, and unicode byte embeddings.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "histories": [["v1", "Tue, 19 Apr 2016 11:53:09 GMT  (415kb,D)", "http://arxiv.org/abs/1604.05529v1", "To appear in ACL 2016 (short)"], ["v2", "Thu, 19 May 2016 15:28:03 GMT  (579kb,D)", "http://arxiv.org/abs/1604.05529v2", "In ACL 2016 (short)"], ["v3", "Thu, 21 Jul 2016 08:17:43 GMT  (578kb,D)", "http://arxiv.org/abs/1604.05529v3", "In ACL 2016 (short)"]], "COMMENTS": "To appear in ACL 2016 (short)", "reviews": [], "SUBJECTS": "cs.CL", "authors": ["barbara plank", "anders s\u00f8gaard", "yoav goldberg"], "accepted": true, "id": "1604.05529"}, "pdf": {"name": "1604.05529.pdf", "metadata": {"source": "CRF", "title": "Multilingual Part-of-Speech Tagging with Bidirectional Long Short-Term Memory Models and Auxiliary Loss", "authors": ["Barbara Plank", "Anders S\u00f8gaard"], "emails": ["b.plank@rug.nl", "soegaard@hum.ku.dk", "yoav.goldberg@gmail.com"], "sections": [{"heading": "1 Introduction", "text": "Recently, bidirectional long short-term memory networks (bi-LSTM) (Graves and Schmidhuber, 2005; Hochreiter and Schmidhuber, 1997) have been used for language modelling (Ling et al., 2015), POS tagging (Ling et al., 2015; Wang et al., 2015), transition-based dependency parsing (Ballesteros et al., 2015), fine-grained sentiment analysis (Liu et al., 2015), syntactic chunking (Huang et al., 2015), and semantic role labeling (Zhou and Xu, 2015). LSTMs are recurrent neural networks (RNNs) in which layers are designed to prevent vanishing gradients. Bidirectional LSTMs make a backward and forward pass through the sequence before passing on to\nthe next layer. For further details, see (Goldberg, 2015; Cho, 2015).\nHowever, previous works are often limited in how they evaluate their models. This is probably a natural consequence of these models being new to the community, but we feel that the time is ripe for more thorough evaluation. We here focus on POS tagging, and one contribution of this paper is evaluating bi-LSTMs across multiple (22) languages, providing first results on non-Indoeuropean languages. In addition, we compare performance with representations at different levels of granularity (words, characters, and bytes). These levels of representation were previously introduced in different efforts (Chrupa\u0142a, 2013; Zhang et al., 2015; Ling et al., 2015; Santos and Zadrozny, 2014; Gillick et al., 2015; Kim et al., 2015), but a comparative evaluation is missing.\nDeep networks are often said to require large volumes of training data. We investigate to what extent bi-LSTMs are more sensitive to the amount of training data than standard POS taggers.\nFinally, we introduce a novel model, a bi-LSTM trained with auxiliary loss. The model jointly predicts the POS and the log frequency of the next word. The intuition behind this model is that the auxiliary loss, being predictive of word frequency, helps on rare words. We indeed observe performance gains on rare and out-of-vocabulary words. These performance gains transfer into general performance gains for morphologically complex languages.\nContributions In this paper, we a) evaluate the effectiveness of different representations in biLSTMs, b) compare these models across a large set of languages and under varying conditions (data size, label noise) and c) propose a novel bi-LSTM model with auxiliary loss (LOGFREQ), which results in our overall best model.\nar X\niv :1\n60 4.\n05 52\n9v 1\n[ cs\n.C L\n] 1\n9 A\npr 2\n01 6"}, {"heading": "2 Tagging with bi-LSTMs", "text": "Recurrent neural networks (RNNs) (Elman, 1990) allow the computation of fixed-size vector representations for word sequences of arbitrary length. An RNN is a function that reads in n vectors x1, ..., xn and produces a vector hn, that depends on the entire sequence x1, ..., xn. The vector hn is then fed as an input to some classifier, or higherlevel RNNs in stacked/hierarchical models. The entire network is trained jointly such that the hidden representation captures the important information from the sequence for the prediction task.\nA bi-directional recurrent neural network (biRNN) (Graves and Schmidhuber, 2005) is an extension of an RNN that reads the input sequence twice, from left to right and right to left, and the encodings are concatenated. A state vector vi in this bi-RNN thus encodes information at position i and its entire sequential context. LSTMs (Hochreiter and Schmidhuber, 1997) are a variant of RNNs that replace the cells of RNNs with LSTM cells and work really well. Bi-LSTMs are the bi-RNN counterpart based on LSTMs.\nOur basic bi-LSTM model takes as input word embeddings ~w. In order to use subtoken information, we use a hierarchical bidirectional LSTM (Ling et al., 2015; Ballesteros et al., 2015). We compute subtoken-level (either characters ~c or unicode byte ~b) embeddings of words using a biLSTM at the lower level. This representation is then concatenated with the (learned) word embeddings vector ~w which forms the input to the biLSTM at the next layer. This model, illustrated in Figure 1 (left), is inspired by Ballesteros et al. (2015).\nIn our novel model, cf. Figure 1 right, we train the bi-LSTM tagger to predict both the tags of the sequence, as well as a label that represents the log frequency of a token in the training data. Our combined cross-entropy loss is now: L(y\u0302t, yt) + L(y\u0302a, ya), where t stands for a POS tag and a is the log frequency label, i.e., a = int(log(freqtrain(w)). Combining this log frequency objective with the tagging task can been seen as an instance of multi-task learning in which the labels are predicted jointly. The idea behind this model is to make the representation predictive for frequency, which encourages the model to not share representations between common and rare words, thus benefiting the handling of rare tokens."}, {"heading": "3 Experiments", "text": "All bi-LSTM models were implemented in CNN,1 a flexible neural network library. For all models we use the same hyperparameters, which were set on English dev, i.e., SGD training with crossentropy loss, no mini-batches, 20 epochs, default learning rate, 128 dimensions for word embeddings, 100 for character and byte embeddings, 100 hidden states and Gaussian noise with \u03c3=0.2. As training is stochastic in nature, we use a fixed seed throughout. Embeddings are not initialized with pre-trained embeddings, except when reported otherwise. In that case we use off-the-shelf polyglot embeddings.2 No further unlabeled data is considered in this paper. For reproducibility, all code is released at ANONYMIZED.\nTaggers We want to compare POS taggers under varying conditions. We hence use three different types of taggers: our implementation of a bi-LSTM; TNT (Brants, 2000)\u2014a second order HMM with suffix trie handling for OOVs; and a freely available CRF-based tagger. We use TNT as it was among the best performing taggers evaluated in Horsmann et al. (2015).3 We comple-\n1https://github.com/clab/cnn 2https://sites.google.com/site/rmyeid/\nprojects/polyglot 3They found TreeTagger was closely followed by HunPos, a re-implementation of TnT, and Stanford and ClearNLP were lower ranked. In an initial investigation, we compared Tnt, HunPos and TreeTagger and found Tnt to be consistently better than Treetagger, Hunpos followed closely but crashed on some languages (e.g., Arabic).\nment the NN-based and HMM-based tagger with a CRF tagger, using a freely available implementation (Plank et al., 2014)4 based on crfsuite."}, {"heading": "3.1 Datasets", "text": "For the multilingual experiments, we use the data from Universal Dependencies v1.2 (Nivre et al., 2015) (17 POS). We consider all languages that have at least 60k tokens, resulting in 22 languages. We also report accuracies on WSJ (45 POS)."}, {"heading": "3.2 Results", "text": "Our results in Table 1 show that Tnt performs remarkably well across the 22 languages, closely followed by CRF. With respect to representations, our bi-LSTM model clearly benefits from character representations, especially for morphologically rich languages. The word+character model reaches the biggest improvement (more than +2% accuracy) on Hebrew and Slovene. Characters alone (~c) are remarkably effective. Initializing the word embeddings (+POLYGLOT) with off-theshelf polyglot further improves accuracy. The only system we are aware of that evaluates on UD is Gillick et al. (2015) (last column). However, note that these results are not strictly comparable as they use the earlier UD version.\nThe overall best system is our multi-task biLSTM FREQBIN. While on macro average it is on par with the simple bi-LSTM, it obtains the best results on 13/22 languages, and it is particularly successful in predicting POS for OOV tokens (cf. Table 1 OOV ACC columns).\nWe examined RNNs and confirm the finding of Ling et al. (2015) that they performed worse than their LSTM counterparts. Finally, our tagger is very competitive on WSJ, cf. Table 2 (appendix).\n4https://bitbucket.org/lowlands\nRare words In order to evaluate the effect of modeling sub-token information, we examine accuracy rates at different frequency rates. Figure 2 shows absolute improvements in accuracy of BILSTM ~w + ~c over mean log frequency, for different language families. We see that especially for Slavic and non-Indo-European languages, having high morphologic complexity, most of the improvement is obtained in the Zipfian tail. Rare tokens benefit from the sub-token representations.\nData set size Prior work mostly used large data sets when learning with neural network based approaches (Zhang et al., 2015). We evaluate how brittle such models are with respect to their more traditional counterparts. The learning curves in Figure 3 (and Fig. 4, appendix) show similar trends across language families.5 Tnt is better with little data, bi-LSTM and CRF are better with more data, and bi-LSTM always wins over CRF. The bi-LSTM model performs already surprisingly well after only 500 training instances. For non-Indoeuropean it is on par and above the other taggers with even less data (100 instances). This shows that the bi-LSTMs often needs more data than the generative model, but this is definitely less than what we had expected.\nLabel Noise We investigated the susceptibility of the models to noise, by artificially corrupting training labels. Our initial results show that at low noise rates, bi-LSTMs and TNT are affected similarly. Only at higher noise levels (more than 30% corrupted labels), bi-LSTMs are less robust. Upon acceptance, we will further elaborate on this."}, {"heading": "4 Related Work", "text": "Character embeddings were first introduced by Sutskever et al. (2011) for language modeling. Early applications include text classification (Chrupa\u0142a, 2013; Zhang et al., 2015). Re-\n5We observe the same pattern with more, 40, iterations.\ncently, these representations were successfully applied to a range of structured prediction tasks. For POS tagging, Santos and Zadrozny (2014) were the first to propose character-based models. They use a convolutional neural network (CNN) and evaluated their model on English (PTB) and Portuguese, showing that the model achieves state-ofthe-art performance close to taggers using a range of hand-crafted features. Ling et al. (2015) extend this line and compare a novel bi-LSTM model, learning word representations through character embeddings. They evaluate their model on a language modeling and POS tagging setup, and show that bi-LSTMs outperform the CNN approach of Santos and Zadrozny (2014). However, Ling et al. (2015)\u2019s evaluation still focuses on Indoeuropean languages only. Similarly, Labeau et al. (2015) evaluate character embeddings for German. BiLSTMs for tagging are also reported in Wang et\nal. (2015), however, they only explore word embeddings, orthographic information and evaluate on WSJ only. A related study is Cheng et al. (2015) who propose a multi-task RNN for named entity recognition, by jointly predicting the next token and current tokens name label. Our model is simpler, it uses a very coarse set of labels rather then integrating an entire language modeling task which is computationally more expensive."}, {"heading": "5 Conclusions", "text": "We propose a novel multi-task bi-LSTM and evaluate a range of representations for bi-LSTM POS tagging across 22 languages. Modeling sub-token information and integrating an auxiliary loss that makes the model predictive of frequency provides a very effective tagger, establishing a new state-ofthe-art on UD v1.2."}, {"heading": "A Supplemental Material", "text": ""}], "references": [{"title": "Improved transitionbased parsing by modeling characters instead of words with lstms", "author": ["Chris Dyer", "Noah A. Smith"], "venue": null, "citeRegEx": "Ballesteros et al\\.,? \\Q2015\\E", "shortCiteRegEx": "Ballesteros et al\\.", "year": 2015}, {"title": "Tnt: a statistical part-of-speech tagger", "author": ["Thorsten Brants"], "venue": "In Proceedings of the sixth conference on Applied natural language processing,", "citeRegEx": "Brants.,? \\Q2000\\E", "shortCiteRegEx": "Brants.", "year": 2000}, {"title": "Open-domain name error detection using a multi-task rnn", "author": ["Cheng et al.2015] Hao Cheng", "Hao Fang", "Mari Ostendorf"], "venue": null, "citeRegEx": "Cheng et al\\.,? \\Q2015\\E", "shortCiteRegEx": "Cheng et al\\.", "year": 2015}, {"title": "Natural language understanding with distributed representation. ArXiv, abs/1511.07916", "author": ["Kyunghyun Cho"], "venue": null, "citeRegEx": "Cho.,? \\Q2015\\E", "shortCiteRegEx": "Cho.", "year": 2015}, {"title": "Finding structure in time", "author": ["Jeffrey L Elman"], "venue": "Cognitive science,", "citeRegEx": "Elman.,? \\Q1990\\E", "shortCiteRegEx": "Elman.", "year": 1990}, {"title": "Multilingual language processing from bytes", "author": ["Gillick et al.2015] Dan Gillick", "Cliff Brunk", "Oriol Vinyals", "Amarnag Subramanya"], "venue": null, "citeRegEx": "Gillick et al\\.,? \\Q2015\\E", "shortCiteRegEx": "Gillick et al\\.", "year": 2015}, {"title": "A primer on neural network models for natural language processing. ArXiv, abs/1510.00726", "author": ["Yoav Goldberg"], "venue": null, "citeRegEx": "Goldberg.,? \\Q2015\\E", "shortCiteRegEx": "Goldberg.", "year": 2015}, {"title": "Framewise phoneme classification with bidirectional lstm and other neural network architectures", "author": ["Graves", "Schmidhuber2005] Alex Graves", "J\u00fcrgen Schmidhuber"], "venue": "Neural Networks,", "citeRegEx": "Graves et al\\.,? \\Q2005\\E", "shortCiteRegEx": "Graves et al\\.", "year": 2005}, {"title": "Long short-term memory", "author": ["Hochreiter", "Schmidhuber1997] Sepp Hochreiter", "J\u00fcrgen Schmidhuber"], "venue": "Neural computation,", "citeRegEx": "Hochreiter et al\\.,? \\Q1997\\E", "shortCiteRegEx": "Hochreiter et al\\.", "year": 1997}, {"title": "Fast or accurate?\u2013a comparative evaluation of pos tagging models", "author": ["Nicolai Erbs", "Torsten Zesch"], "venue": "In Proceedings of the International Conference of the German Society for Computational Linguistics", "citeRegEx": "Horsmann et al\\.,? \\Q2015\\E", "shortCiteRegEx": "Horsmann et al\\.", "year": 2015}, {"title": "Bidirectional lstm-crf models for sequence tagging", "author": ["Huang et al.2015] Zhiheng Huang", "Wei Xu", "Kai Yu"], "venue": "arXiv preprint arXiv:1508.01991", "citeRegEx": "Huang et al\\.,? \\Q2015\\E", "shortCiteRegEx": "Huang et al\\.", "year": 2015}, {"title": "Characteraware neural language models", "author": ["Kim et al.2015] Yoon Kim", "Yacine Jernite", "David Sontag", "Alexander M Rush"], "venue": "arXiv preprint arXiv:1508.06615", "citeRegEx": "Kim et al\\.,? \\Q2015\\E", "shortCiteRegEx": "Kim et al\\.", "year": 2015}, {"title": "Non-lexical neural architecture for fine-grained pos tagging", "author": ["Kevin L\u00f6ser", "Alexandre Allauzen"], "venue": null, "citeRegEx": "Labeau et al\\.,? \\Q2015\\E", "shortCiteRegEx": "Labeau et al\\.", "year": 2015}, {"title": "Finding function in form: Compositional character models for open vocabulary word representation", "author": ["Ling et al.2015] Wang Ling", "Chris Dyer", "Alan W Black", "Isabel Trancoso", "Ramon Fermandez", "Silvio Amir", "Luis Marujo", "Tiago Luis"], "venue": null, "citeRegEx": "Ling et al\\.,? \\Q2015\\E", "shortCiteRegEx": "Ling et al\\.", "year": 2015}, {"title": "Fine-grained opinion mining with recurrent neural networks and word embeddings", "author": ["Liu et al.2015] Pengfei Liu", "Shafiq Joty", "Helen Meng"], "venue": null, "citeRegEx": "Liu et al\\.,? \\Q2015\\E", "shortCiteRegEx": "Liu et al\\.", "year": 2015}, {"title": "Universal dependencies 1.2. LINDAT/CLARIN digital library at Institute of Formal and Applied Linguistics, Charles University in Prague", "author": ["Zhu"], "venue": null, "citeRegEx": "2015.,? \\Q2015\\E", "shortCiteRegEx": "2015.", "year": 2015}, {"title": "Adapting taggers to twitter using not-so-distant supervision", "author": ["Plank et al.2014] Barbara Plank", "Dirk Hovy", "Ryan McDonald", "Anders S\u00f8gaard"], "venue": "In COLING", "citeRegEx": "Plank et al\\.,? \\Q2014\\E", "shortCiteRegEx": "Plank et al\\.", "year": 2014}, {"title": "Learning character-level representations for part-of-speech tagging", "author": ["Santos", "Zadrozny2014] Cicero D Santos", "Bianca Zadrozny"], "venue": "In ICML,", "citeRegEx": "Santos et al\\.,? \\Q2014\\E", "shortCiteRegEx": "Santos et al\\.", "year": 2014}, {"title": "Semisupervised condensed nearest neighbor for part-ofspeech tagging", "author": ["Anders S\u00f8gaard"], "venue": "In Proceedings of ACL", "citeRegEx": "S\u00f8gaard.,? \\Q2011\\E", "shortCiteRegEx": "S\u00f8gaard.", "year": 2011}, {"title": "Generating text with recurrent neural networks", "author": ["James Martens", "Geoffrey E Hinton"], "venue": null, "citeRegEx": "Sutskever et al\\.,? \\Q2011\\E", "shortCiteRegEx": "Sutskever et al\\.", "year": 2011}, {"title": "Partof-speech tagging with bidirectional long shortterm memory recurrent neural network. pre-print, abs/1510.06168", "author": ["Wang et al.2015] Peilu Wang", "Yao Qian", "Frank K. Soong", "Lei He", "Hai Zhao"], "venue": null, "citeRegEx": "Wang et al\\.,? \\Q2015\\E", "shortCiteRegEx": "Wang et al\\.", "year": 2015}, {"title": "Character-level convolutional networks for text classification", "author": ["Zhang et al.2015] Xiang Zhang", "Junbo Zhao", "Yann LeCun"], "venue": "In Advances in Neural Information Processing Systems,", "citeRegEx": "Zhang et al\\.,? \\Q2015\\E", "shortCiteRegEx": "Zhang et al\\.", "year": 2015}, {"title": "Endto-end learning of semantic role labeling using recurrent neural networks", "author": ["Zhou", "Xu2015] Jie Zhou", "Wei Xu"], "venue": null, "citeRegEx": "Zhou et al\\.,? \\Q2015\\E", "shortCiteRegEx": "Zhou et al\\.", "year": 2015}], "referenceMentions": [{"referenceID": 13, "context": "Recently, bidirectional long short-term memory networks (bi-LSTM) (Graves and Schmidhuber, 2005; Hochreiter and Schmidhuber, 1997) have been used for language modelling (Ling et al., 2015), POS tagging (Ling et al.", "startOffset": 169, "endOffset": 188}, {"referenceID": 13, "context": ", 2015), POS tagging (Ling et al., 2015; Wang et al., 2015), transition-based dependency parsing (Ballesteros et al.", "startOffset": 21, "endOffset": 59}, {"referenceID": 20, "context": ", 2015), POS tagging (Ling et al., 2015; Wang et al., 2015), transition-based dependency parsing (Ballesteros et al.", "startOffset": 21, "endOffset": 59}, {"referenceID": 0, "context": ", 2015), transition-based dependency parsing (Ballesteros et al., 2015), fine-grained sentiment analysis (Liu et al.", "startOffset": 45, "endOffset": 71}, {"referenceID": 14, "context": ", 2015), fine-grained sentiment analysis (Liu et al., 2015), syntactic chunking (Huang et al.", "startOffset": 41, "endOffset": 59}, {"referenceID": 10, "context": ", 2015), syntactic chunking (Huang et al., 2015), and semantic role labeling (Zhou and Xu, 2015).", "startOffset": 28, "endOffset": 48}, {"referenceID": 4, "context": "Recurrent neural networks (RNNs) (Elman, 1990) allow the computation of fixed-size vector representations for word sequences of arbitrary length.", "startOffset": 33, "endOffset": 46}, {"referenceID": 13, "context": "In order to use subtoken information, we use a hierarchical bidirectional LSTM (Ling et al., 2015; Ballesteros et al., 2015).", "startOffset": 79, "endOffset": 124}, {"referenceID": 0, "context": "In order to use subtoken information, we use a hierarchical bidirectional LSTM (Ling et al., 2015; Ballesteros et al., 2015).", "startOffset": 79, "endOffset": 124}, {"referenceID": 0, "context": ", 2015; Ballesteros et al., 2015). We compute subtoken-level (either characters ~c or unicode byte ~b) embeddings of words using a biLSTM at the lower level. This representation is then concatenated with the (learned) word embeddings vector ~ w which forms the input to the biLSTM at the next layer. This model, illustrated in Figure 1 (left), is inspired by Ballesteros et al. (2015).", "startOffset": 8, "endOffset": 385}, {"referenceID": 1, "context": "We hence use three different types of taggers: our implementation of a bi-LSTM; TNT (Brants, 2000)\u2014a second order HMM with suffix trie handling for OOVs; and a freely available CRF-based tagger.", "startOffset": 84, "endOffset": 98}, {"referenceID": 9, "context": "as it was among the best performing taggers evaluated in Horsmann et al. (2015).3 We comple-", "startOffset": 57, "endOffset": 80}, {"referenceID": 16, "context": "ment the NN-based and HMM-based tagger with a CRF tagger, using a freely available implementation (Plank et al., 2014)4 based on crfsuite.", "startOffset": 98, "endOffset": 118}, {"referenceID": 5, "context": "The only system we are aware of that evaluates on UD is Gillick et al. (2015) (last column).", "startOffset": 56, "endOffset": 78}, {"referenceID": 13, "context": "We examined RNNs and confirm the finding of Ling et al. (2015) that they performed worse than their LSTM counterparts.", "startOffset": 44, "endOffset": 63}, {"referenceID": 21, "context": "sets when learning with neural network based approaches (Zhang et al., 2015).", "startOffset": 56, "endOffset": 76}, {"referenceID": 21, "context": "Early applications include text classification (Chrupa\u0142a, 2013; Zhang et al., 2015).", "startOffset": 47, "endOffset": 83}, {"referenceID": 18, "context": "Character embeddings were first introduced by Sutskever et al. (2011) for language modeling.", "startOffset": 46, "endOffset": 70}, {"referenceID": 11, "context": "Ling et al. (2015) extend this line and compare a novel bi-LSTM model, learning word representations through character embeddings.", "startOffset": 0, "endOffset": 19}, {"referenceID": 11, "context": "Ling et al. (2015) extend this line and compare a novel bi-LSTM model, learning word representations through character embeddings. They evaluate their model on a language modeling and POS tagging setup, and show that bi-LSTMs outperform the CNN approach of Santos and Zadrozny (2014). However, Ling et al.", "startOffset": 0, "endOffset": 284}, {"referenceID": 11, "context": "Ling et al. (2015) extend this line and compare a novel bi-LSTM model, learning word representations through character embeddings. They evaluate their model on a language modeling and POS tagging setup, and show that bi-LSTMs outperform the CNN approach of Santos and Zadrozny (2014). However, Ling et al. (2015)\u2019s evaluation still focuses on Indoeuropean languages only.", "startOffset": 0, "endOffset": 313}, {"referenceID": 11, "context": "Similarly, Labeau et al. (2015) evaluate character embeddings for German.", "startOffset": 11, "endOffset": 32}, {"referenceID": 11, "context": "Similarly, Labeau et al. (2015) evaluate character embeddings for German. BiLSTMs for tagging are also reported in Wang et al. (2015), however, they only explore word embeddings, orthographic information and evaluate on WSJ only.", "startOffset": 11, "endOffset": 134}, {"referenceID": 2, "context": "A related study is Cheng et al. (2015) who propose a multi-task RNN for named entity recognition, by jointly predicting the next token and current tokens name label.", "startOffset": 19, "endOffset": 39}], "year": 2017, "abstractText": "Bi-directional long short-term memory (LSTM) networks have recently proven successful for various NLP sequence modeling tasks, but little is known about their reliance to input representations, target languages, data set size, and label noise. We address these issues and evaluate bi-LSTMs with word, character, and unicode byte embeddings for POS tagging. We compare bi-LSTMs to traditional POS taggers across languages and data sizes. We also present a novel biLSTM model, which combines the POS tagging loss function with an auxiliary loss function that accounts for rare words. The new model obtains state-of-the-art performance across 22 languages, and works especially well for morphologically complex languages. Our analysis suggests that biLSTMs are less sensitive to training data size and label corruptions (at small noise levels) than previously assumed.", "creator": "LaTeX with hyperref package"}}}