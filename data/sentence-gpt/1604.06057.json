{"id": "1604.06057", "review": {"conference": "NIPS", "VERSION": "v1", "DATE_OF_SUBMISSION": "20-Apr-2016", "title": "Hierarchical Deep Reinforcement Learning: Integrating Temporal Abstraction and Intrinsic Motivation", "abstract": "Learning goal-directed behavior in environments with sparse feedback is a major challenge for reinforcement learning algorithms. The primary difficulty arises due to insufficient exploration, resulting in an agent being unable to learn robust value functions. Intrinsically motivated agents can explore new behavior for its own sake rather than to directly solve problems. Such intrinsic behaviors could eventually help the agent solve tasks posed by the environment. We present hierarchical-DQN (h-DQN), a framework to integrate hierarchical value functions, operating at different temporal scales, with intrinsically motivated deep reinforcement learning. A top-level value function learns a policy over intrinsic goals, and a lower-level function learns a policy over atomic actions to satisfy the given goals. h-DQN allows for flexible goal specifications, such as functions over entities and relations. This provides an efficient space for exploration in complicated environments. We demonstrate the strength of our approach on two problems with very sparse, delayed feedback: (1) a complex discrete MDP with stochastic transitions, and (2) the classic ATARI game `Montezuma's Revenge'. We report the current state of the system, in a manner similar to the ones described by Karpalova, as a single state.\n\n\n\n\n\nTo illustrate our framework in this fashion, we discuss the implementation of the T.J.D.D.D.D.D.D.D.D.D.D.D.D.D.D.D.D.D.D.D.D.D.D.D.D.D.D.D.D.D.D.D.D.D.D.D.D.D.D.D.D.D.D.D.D.D.D.D.D.D.D.D.D.D.D.D.D.D.D.D.D.D.D.D.D.D.D.D.D.D.D.D.D.D.D.D.D.D.D.D.D.D.D.D.D.D.D.D.D.D.D.D.D.D.D.D.D.D.D.D.D.D.D.D.D.D.D.D.D.D.D.D.D.D.D.D.D.D.D.D.D.", "histories": [["v1", "Wed, 20 Apr 2016 18:47:48 GMT  (1158kb,D)", "http://arxiv.org/abs/1604.06057v1", "13 pages, 7 figures"], ["v2", "Tue, 31 May 2016 14:45:58 GMT  (1171kb,D)", "http://arxiv.org/abs/1604.06057v2", "14 pages, 7 figures"]], "COMMENTS": "13 pages, 7 figures", "reviews": [], "SUBJECTS": "cs.LG cs.AI cs.CV cs.NE stat.ML", "authors": ["tejas d kulkarni", "karthik narasimhan", "ardavan saeedi", "josh tenenbaum"], "accepted": true, "id": "1604.06057"}, "pdf": {"name": "1604.06057.pdf", "metadata": {"source": "CRF", "title": "Hierarchical Deep Reinforcement Learning: Integrating Temporal Abstraction and Intrinsic Motivation", "authors": ["Tejas D. Kulkarni", "Karthik R. Narasimhan"], "emails": ["tejask@mit.edu", "karthikn@mit.edu", "ardavans@mit.edu", "jbt@mit.edu"], "sections": [{"heading": "1 Introduction", "text": "Learning goal-directed behavior with sparse feedback from complex environments is a fundamental challenge for artificial intelligence. Learning in this setting requires the agent to represent knowledge at multiple levels of spatio-temporal abstractions and to explore the environment efficiently. Recently, non-linear function approximators coupled with reinforcement learning [17, 20, 29] have made it possible to learn abstractions over highdimensional state spaces, but the task of exploration with sparse feedback still remains a major challenge. Existing methods like Boltzmann exploration and Thomson sampling [36, 24] offer significant improvements over -greedy, but are limited due to the underlying models functioning at the level of basic actions. In this work, we propose a framework that integrates deep reinforcement learning with hierarchical value functions (h-DQN), where the agent is motivated to solve intrinsic goals (via learning options) to aid exploration. These goals provide for efficient exploration and help mitigate the sparse feedback problem. Additionally, we observe that goals defined in the space of entities and relations can help significantly constrain the exploration space for data-efficient learning in complex environments.\n\u2217Authors contributed equally and listed alphabetically.\nar X\niv :1\n60 4.\n06 05\n7v 1\n[ cs\n.L G\n] 2\nReinforcement learning (RL) formalizes control problems as finding a policy \u03c0 that maximizes expected future rewards [37]. Value functions V (s) are central to RL, and they cache the utility of any state s in achieving the agent\u2019s overall objective. Recently, value functions have also been generalized as V (s, g) in order to represent the utility of state s for achieving a given goal g \u2208 G [38, 26]. When the environment provides delayed rewards, we adopt a strategy to first learn ways to achieve intrinsically generated goals, and subsequently learn an optimal policy to chain them together. Each of the value functions V (s, g) can be used to generate a policy that terminates when the agent reaches the goal state g. A collection of these policies can be hierarchically arranged with temporal dynamics for learning or planning within the framework of semi-Markov decision processes [39, 40]. In high-dimensional problems, these value functions can be approximated by neural networks as V (s, g; \u03b8).\nWe propose a framework with hierarchically organized deep reinforcement learning modules working at different time-scales. The model takes decisions over two levels of hierarchy \u2013 (a) the top level module (meta-controller) takes in the state and picks a new goal, (b) the lower-level module (controller) uses both the state and the chosen goal to select actions either until the goal is reached or the episode is terminated. The meta-controller then chooses another goal and steps (a-b) repeat. We train our model using stochastic gradient descent at different temporal scales to optimize expected future intrinsic (controller) and extrinsic rewards (meta-controller). We demonstrate the strength of our approach on problems with long-range delayed feedback: (1) a discrete Markov decision process (MDP) with stochastic transitions and a long chain of states before receiving optimal extrinsic rewards and (2) a classic ATARI game (\u2018Montezuma\u2019s Revenge\u2019) with even longer-range delayed rewards where most existing state-of-art deep reinforcement learning approaches fail to learn policies in a data-efficient manner."}, {"heading": "2 Literature Review", "text": ""}, {"heading": "2.1 Reinforcement Learning with Temporal Abstractions", "text": "Learning and operating over different levels of temporal abstraction is a key challenge in tasks involving long-range planning. In the context of reinforcement learning, Sutton et al.[39] proposed the options framework, which involves abstractions over the space of actions. At each step, the agent chooses either a one-step \u201cprimitive\u201d action or a \u201cmulti-step\u201d action policy (option). Each option defines a policy over actions (either primitive or other options) and can be terminated according to a stochastic function \u03b2. Thus, the traditional MDP setting can be extended to a semi-Markov decision process (SMDP) with the use of options. Recently, several methods have been proposed to learn options in real-time by using varying reward functions [40] or by composing existing options [33]. Value functions have also been generalized to consider goals along with states [26]. This universal value function V (s, g; \u03b8) provides an universal option that approximately represents optimal behavior towards the goal g. Our work is inspired by these papers and builds upon them.\nOther related work for hierarchical formulations include the model of Dayan and Hinton [5] which consisted of \u201cmanagers\u201d taking decisions at various levels of granularity, percolating all the way down to atomic actions made by the agent. The MAXQ framework [6] built up on this work to decompose the value function of an MDP into combinations of value functions of smaller constituent MDPs, as did Guestrin et al.[14] in their factored MDP formulation.\nIn our work, we propose a scheme for temporal abstraction that involves simultaneously learning options and a control policy to compose options in a deep reinforcement learning setting. Our approach does not use separate Q-functions for each option, but instead treats the option as part of the input, similar to [26]. This has two advantages: (1) there is shared learning between different options, and (2) the model is potentially scalable to a large number of options."}, {"heading": "2.2 Intrinsically motivated RL", "text": "The nature and origin of \u2018good\u2019 intrinsic reward functions is an open question in reinforcement learning. Singh et al.[32] explored agents with intrinsic reward structures in order to learn\ngeneric options that can apply to a wide variety of tasks. Using a notion of \u201csalient events\u201d as sub-goals, the agent learns options to get to such events. In another paper, Singh et al.[31] take an evolutionary perspective to optimize over the space of reward functions for the agent, leading to a notion of extrinsically and intrinsically motivated behavior.\nSchmidhuber [28] provides a coherent formulation of intrinsic motivation, which is measured by the improvements to a predictive world model made by the learning algorithm. Mohamed and Rezende [21] have recently proposed a notion of intrinsically motivated learning within the framework of mutual information maximization."}, {"heading": "2.3 Object-based RL", "text": "Object-based representations [7, 3] that can exploit the underlying structure of a problem have been proposed to alleviate the curse of dimensionality in RL. Diuk et al.[7] propose an Object-Oriented MDP, using a representation based on objects and their interactions. Defining each state as a set of value assignments to all possible relations between objects, they introduce an algorithm for solving deterministic object-oriented MDPs. Their representation is similar to that of Guestrin et al.[13], who describe an object-based representation in the context of planning. In contrast to these approaches, our representation does not require explicit encoding for the relations between objects and can be used in stochastic domains."}, {"heading": "2.4 Deep Reinforcement Learning", "text": "Recent advances in function approximation with deep neural networks have shown promise in handling high-dimensional sensory input. Deep Q-Networks and its variants have been successfully applied to various domains including Atari games [20] and Go [29], but still perform poorly on environments with sparse, delayed reward signals. Strategies such as prioritized experience replay [27] and bootstrapping [24] have been proposed to alleviate the problem of learning from sparse rewards. These approaches yield significant improvements over prior work but struggle when the reward signal has a long delayed horizon. This is because the exploration strategy is not sufficient for the agent to obtain the required feedback."}, {"heading": "2.5 Cognitive Science and Neuroscience", "text": "The nature and origin of intrinsic goals in humans is a thorny issue but there are some notable insights from existing literature. There is converging evidence in developmental psychology that human infants, primates, children, and adults in diverse cultures base their core knowledge on certain cognitive systems including \u2013 entities, agents and their actions, numerical quantities, space, social-structures and intuitive theories [34, 19]. Even newborns and infants seem to represent the visual world in terms of coherent visual entities, centered around spatio-temporal principles of cohesion, continuity, and contact. They also seem to explicitly represent other agents, with the assumption that an agent\u2019s behavior is goal-directed and efficient. Infants can also discriminate relative sizes of objects, relative distances and higher order numerical relations such as the ratio of object sizes. During curiosity-driven activities, toddlers use this knowledge to generate intrinsic goals such as building physically stable block structures. In order to accomplish these goals, toddlers seem to construct sub-goals in the space of their core knowledge, such as \u2013 putting a heavier entity on top of (relation) a lighter entity in order to build tall blocks.\nKnowledge of space can also be utilized to learn a hierarchical decomposition of spatial environments, where the bottlenecks between different spatial groupings correspond to sub-goals. This has been explored in neuroscience with the successor representation, which represents a value function in terms of the expected future state occupancy. Decomposition of the successor representation yields reasonable sub-goals for spatial navigation problems [4, 10, 35]. Botvinick et al.[2] have written a general overview of hierarchical reinforcement learning in the context of cognitive science and neuroscience."}, {"heading": "3 Model", "text": "Consider a Markov decision process (MDP) represented by states s \u2208 S, actions a \u2208 A, and transition function T : (s, a) \u2192 s\u2032. An agent operating in this framework receives a state s from the external environment and can take an action a, which results in a new state s\u2032. We define the extrinsic reward function as F : (s) \u2192 R. The objective of the agent is to maximize this function over long periods of time. For example, this function can take the form of the agent\u2019s survival time or score in a game.\nAgents Effective exploration in MDPs is a significant challenge in learning good control policies. Methods such as -greedy are useful for local exploration but fail to provide impetus for the agent to explore different areas of the state space. In order to tackle this, we utilize a notion of goals g \u2208 G, which provide intrinsic motivation for the agent. The agent focuses on setting and achieving sequences of goals in order to maximize cumulative extrinsic reward.\nWe use the temporal abstraction of options [39] to define policies \u03c0g for each goal g. The agent learns these option policies simultaneously along with learning the optimal sequence of goals to follow. In order to learn each \u03c0g, the agent also has a critic, which provides intrinsic rewards, based on whether the agent is able to achieve its goals (see Figure 1).\nTemporal Abstractions As shown in Figure 1, the agent uses a two-stage hierarchy consisting of a controller and a meta-controller. The meta-controller receives state st and chooses a goal gt \u2208 G, where G denotes the set of all possible current goals. The controller then selects an action at using st and gt. The goal gt remains in place for the next few time steps either until it is achieved or a terminal state is reached. The internal critic is responsible for evaluating whether a goal has been reached and providing an appropriate reward rt(g) to the controller. The objective function for the controller is to maximize cumulative intrinsic reward: Rt(g) = \u2211\u221e t\u2032=t \u03b3 t\u2032\u2212trt\u2032(g). Similarly, the objective of the meta-controller is to\noptimize the cumulative extrinsic reward Ft = \u2211\u221e t\u2032=t \u03b3\nt\u2032\u2212tft\u2032 , where ft are reward signals received from the environment.\nOne can also view this setup as similar to optimizing over the space of optimal reward functions to maximize fitness [30]. In our case, the reward functions are dynamic and temporally dependent on the sequential history of goals. Figure 1 provides an illustration of the agent\u2019s use of the hierarchy over subsequent time steps.\nDeep Reinforcement Learning with Temporal Abstractions\nWe use the Deep Q-Learning framework [20] to learn policies for both the controller and the meta-controller. Specifically, the controller estimates the following Q-value function:\nQ\u22171(s, a; g) = max \u03c0ag E[ \u221e\u2211 t\u2032=t \u03b3t \u2032\u2212trt\u2032 | st = s, at = a, gt = g, \u03c0ag]\n= max \u03c0ag\nE[rt + \u03b3 maxat+1Q \u2217 1(st+1, at+1; g) | st = s, at = a, gt = g, \u03c0ag]\n(1)\nwhere g is the agent\u2019s goal in state s and \u03c0ag = P (a|s, g) is the action policy. Similarly, for the meta-controller, we have:\nQ\u22172(s, g) = max\u03c0gE[ t+N\u2211 t\u2032=t ft\u2032 + \u03b3 maxg\u2032Q \u2217 2(st+N , g \u2032) | st = s, gt = g, \u03c0g] (2)\nwhere N denotes the number of time steps until the controller halts given the current goal, g\u2032 is the agent\u2019s goal in state st+N , and \u03c0g = P (g|s) is the policy over goals. It is important to note that the transitions (st, gt, ft, st+N ) generated by Q2 run at a slower time-scale than the transitions (st, at, gt, rt, st+1) generated by Q1.\nWe can represent Q\u2217(s, g) \u2248 Q(s, g; \u03b8) using a non-linear function approximator with parameters \u03b8, called a deep Q-network (DQN). Each Q \u2208 {Q1, Q2} can be trained by minimizing\nExternal Environment\nagent\nextrinsic reward\nMeta Controller\nController\nCritic\naction\naction\nintrinsic reward\nobservations\ngoal\n. . . .\n. . . . . . Meta\nController\nst\ngt\ngt\nController\nst st+1\n. . . . . .\nst+N\nst+N\ngt+N\nQ2(st, g; \u27132) Q2(st+N , gt+N ; \u27132)\nMeta Controller\nController Controller\nQ1(st, a; \u27131, gt) Q1(st+1, a; \u27131, gt) Q1(st+N , a; \u27131, gt)\nat at+1 at+N\nFigure 1: Overview: The agent produces actions and receives sensory observations. Separate deep-Q networks are used inside the meta-controller and controller. The meta-controller that looks at the raw states and produces a policy over goals by estimating the value function Q2(st, gt; \u03b82) (by maximizing expected future extrinsic reward). The controller takes in states and the current goal, and produces a policy over actions by estimating the value function Q2(st, at; \u03b81, gt) to solve the predicted goal (by maximizing expected future intrinsic reward). The internal critic checks if goal is reached and provides an appropriate intrinsic reward to the controller. The controller terminates either when the episode ends or when g is accomplished. The meta-controller then chooses a new g and the process repeats.\ncorresponding loss functions \u2013 L1(\u03b81) and L2(\u03b82). We store experiences (st, gt, ft, st+N ) for Q2 and (st, at, gt, rt, st+1) for Q1 in disjoint memory spaces D1 and D2 respectively. The loss function for Q1 can then be stated as:\nL1(\u03b81,i) = E(s,a,g,r,s\u2032)\u223cD1 [(y1,i \u2212Q1(s, a; \u03b81,i, g)) 2], (3)\nwhere i denotes the training iteration number and y1,i = r + \u03b3 maxa\u2032Q1(s \u2032, a\u2032; \u03b81,i\u22121, g).\nFollowing [20], the parameters \u03b81,i\u22121 from the previous iteration are held fixed when optimising the loss function. The parameters \u03b81 can be optimized using the gradient:\n\u2207\u03b81,iL1(\u03b81,i)\n= E(s,a,r,s\u2032\u223cD1) [( r + \u03b3 maxa\u2032Q1(s \u2032, a\u2032; \u03b81,i\u22121, g)\u2212Q1(s, a; \u03b81,i, g) ) \u2207\u03b81,iQ1(s, a; \u03b81,i, g) )]\nThe loss function L2 and its gradients can be derived using a similar procedure.\nLearning Algorithm We learn the parameters of h-DQN using stochastic gradient descent at different time scales \u2013 experiences (or transitions) from the controller are collected at every time step but experiences from meta-controller are only collected when the controller terminates (i.e. when a goal is re-picked or the episode ends). Each new goal g is drawn in an -greedy fashion (Algorithms 1 & 2) with the exploration probability 2 annealed as learning proceeds (from a starting value of 1).\nIn the controller, at every time step, an action is drawn with a goal using the exploration probability 1,g which is dependent on the current empirical success rate of reaching g. The model parameters (\u03b81, \u03b82) are periodically updated by drawing experiences from replay memories D1 and D2), respectively (see Algorithm 3).\nAlgorithm 1 Learning algorithm for h-DQN\n1: Initialize experience replay memories {D1,D2} and parameters {\u03b81, \u03b82} for the controller and meta-controller respectively. 2: Initialize exploration probability 1,g = 1 for the controller for all goals g and 2 = 1 for the meta-controller. 3: for i = 1, num episodes do 4: Initialize game and get start state description s 5: g \u2190 epsGreedy(s,G, 2, Q2) 6: while s is not terminal do 7: F \u2190 0 8: s0 \u2190 s 9: while not (s is terminal or goal g reached) do 10: a\u2190 epsGreedy({s, g},A, 1,g, Q1) 11: Execute a and obtain next state s\u2032 and extrinsic reward f from environment 12: Obtain intrinsic reward r(s, a, s\u2032) from internal critic 13: Store transition ({s, g}, a, r, {s\u2032, g}) in D1 14: updateParams(L1(\u03b81,i),D1) 15: updateParams(L2(\u03b82,i),D2) 16: F \u2190 F + f 17: s\u2190 s\u2032 18: end while 19: Store transition (s0, g, F, s\n\u2032) in D2 20: if s is not terminal then 21: g \u2190 epsGreedy(s,G, 2, Q2) 22: end if 23: end while 24: Anneal 2 and adaptively anneal 1,g using average success rate of reaching goal g. 25: end for\nAlgorithm 2 : epsGreedy(x,B, , Q) 1: if random() < then 2: return random element from set B 3: else 4: return argmaxm\u2208BQ(x,m) 5: end if\nAlgorithm 3 : updateParams(L,D) 1: Randomly sample mini-batches from D 2: Perform gradient descent on loss L(\u03b8) (cf. (3))"}, {"heading": "4 Experiments", "text": "We perform experiments on two different domains involving delayed rewards. The first is a discrete-state MDP with stochastic transitions, and the second is an ATARI 2600 game called \u2018Montezuma\u2019s Revenge\u2019."}, {"heading": "4.1 Discrete MDP with delayed rewards", "text": "Game Setup We consider a stochastic decision process where the extrinsic reward depends on the history of visited states in addition to the current state. We selected this task in order to demonstrate the importance of intrinsic motivation for exploration in such environments.\nThere are 6 possible states and the agent always starts at s2. The agent moves left deterministically when it chooses left action; but the action right only succeeds 50% of\nthe time, resulting in a left move otherwise. The terminal state is s1 and the agent receives the reward of 1 when it first visits s6 and then s1. The reward for going to s1 without visiting s6 is 0.01. This is a modified version of the MDP in [24], with the reward structure adding complexity to the task. The process is illustrated in Figure 2.\nWe consider each state as a possible goal for exploration. This encourages the agent to visit state s6 (whenever it is chosen as a goal) and hence, learn the optimal policy. For each goal, the agent receives a positive intrinsic reward if and only if it reaches the corresponding state.\nResults We compare the performance of our approach (without the deep neural networks) with Q-Learning as a baseline (without intrinsic rewards) in terms of the average extrinsic reward gained in an episode. In our experiments, all parameters are annealed from 1 to 0.1 over 50,000 steps. The learning rate is set to 0.00025. Figure 3 plots the evolution of reward for both methods averaged over 10 different runs. As expected, we see that Q-Learning is unable to find the optimal policy even after 200 epochs, converging to a sub-optimal policy of reaching state s1 directly to obtain a reward of 0.01. In contrast, our approach with hierarchical Q-estimators learns to choose goals s4, s5 or s6, which statistically lead the agent to visit s6 before going back to s1. Therefore, the agent obtains a significantly higher average reward of around 0.13.\nFigure 4 illustrates that the number of visits to states s3, s4, s5, s6 increases with episodes of training. Each data point shows the average number of visits for each state over the last 1000 episodes. This indicates that our model is choosing goals in a way so that it reaches the critical state s6 more often.\n3/25/2016 Reward.html\n4/8/2016 temp-plot.html\nfile:///Users/ardavan/Documents/Research/deepHRL/SyntheticPlot/temp-plot.html 1/1"}, {"heading": "4.2 ATARI game with delayed rewards", "text": "Game Description We consider \u2018Montezuma\u2019s Revenge\u2019, an ATARI game with sparse, delayed rewards. The game (Figure 5(a)) requires the player to navigate the explorer (in red) through several rooms while collecting treasures. In order to pass through doors (in the top right and top left corners of the figure), the player has to first pick up the key. The player has to then climb down the ladders on the right and move left towards the key, resulting in a long sequence of actions before receiving a reward (+100) for collecting the key. After this, navigating towards the door and opening it results in another reward (+300).\nExisting deep RL approaches fail to learn in this environment since the agent rarely reaches a state with non-zero reward. For instance, the basic DQN [20] achieves a score of 0 while even the best performing system, Gorila DQN [22], manages only 4.16 on average.\nSetup The agent needs intrinsic motivation to explore meaningful parts of the scene before it can learn about the advantage of getting the key for itself. Inspired by the developmental psychology literature [34] and object-oriented MDPs [7], we use entities or objects in the scene to parameterize goals in this environment. Unsupervised detection of objects in visual scenes is an open problem in computer vision, although there has been recent progress in obtaining objects directly from image or motion data [9, 8, 11]. In this work, we assume having access to an object detector that provides plausible object candidates. The controller and meta-controller are convolutional neural networks (see Figure 5(b)) that learn representations from raw pixel data. We use the Arcade Learning Environment [1] to perform experiments.\nThe internal critic is defined in the space of \u3008entity1, relation, entity2\u3009, where relation is a function over configurations of the entities. For instance, the agent is deemed to have completed a goal (and receives a reward) if the agent entity reaches another entity such as the door. Note that this notion of relational intrinsic rewards can be generalized to other\nsettings. For instance, in the ATARI game \u2018Asteroids\u2019, the agent could be rewarded when the bullet reaches the asteroid or if simply the ship never reaches an asteroid. In the game of \u2018Pacman\u2019, the agent could be rewarded if the pellets on the screen are reached. In the most general case, we can potentially let the model evolve a parameterized intrinsic reward function given entities. We leave this for future work.\nModel Architecture and Training As shown in Figure 5b, the model consists of stacked convolutional layers with rectified linear units (ReLU). The input to the meta-controller is a set of four consecutive images of size 84 \u00d7 84. To encode the goal output from the meta-controller, we append a binary mask of the goal location in image space along with the original 4 consecutive frames. This augmented input is passed to the controller. The experience replay memories D1 and D2 were set to be equal to 1E6 and 5E4 respectively. We set the learning rate to be 2.5E\u22124, with a discount rate of 0.99. We follow a two phase training procedure \u2013 (1) In the first phase, we set the exploration parameter 2 of the meta-controller to 1 and train the controller on actions. This effectively leads to pre-training the controller so that it can learn to solve a subset of the goals. (2) In the second phase, we jointly train the controller and meta-controller.\nResults Figure 6(a) shows reward progress from the joint training phase from which it is evident that the model starts gradually learning to both reach the key and open the door to get a reward of around +400 per episode. As shown in Figure 6(b), the agent learns to choose the key more often as training proceeds and is also successful at reaching it. As training proceeds, we observe that the agent first learns to perform the simpler goals (such as reaching the right door or the middle ladder) and then slowly starts learning the \u2018harder\u2019 goals such as the key and the bottom ladders, which provide a path to higher rewards. Figure 6(c) shows the evolution of the success rate of goals that are picked. At the end of training, we can see that the \u2019key\u2019, \u2019bottom-left-ladder\u2019 and \u2019bottom-right-ladders\u2019 are chosen increasingly more often. We also show some screen-shots from a test run with our agent (with epsilon set to 0.1) in Figure 7, as well as a sample animation of the run.1"}, {"heading": "5 Conclusion", "text": "We have presented h-DQN, a framework consisting of hierarchical value functions operating at different time scales. Temporally decomposing the value function allows the agent to perform intrinsically motivated behavior, which in turn yields efficient exploration in environments\n1Sample trajectory of a run on \u2019Montezuma\u2019s Revenge\u2019 \u2013 https://goo.gl/3Z64Ji\n4/18/2016 Reward.html\nfile:///Users/tejas/Documents/deepRelationalRL/dqn/Bar%20graph.html 1/1\nwith delayed rewards. We also observe that parameterizing intrinsic motivation in the space of entities and relations provides a promising avenue for building agents with temporally\nextended exploration. We also plan to explore alternative parameterizations of goals with h-DQN in the future.\nThe current framework has several missing components including automatically disentangling objects from raw pixels and a short-term memory. The state abstractions learnt by vanilla deep-Q-networks are not structured or sufficiently compositional. There has been recent work [8, 11, 25, 18, 41, 12, 16] in using deep generative models to disentangle multiple factors of variations (objects, pose, location, etc) from pixel data. We hope that our work motivates the combination of deep generative models of images with h-DQN. Additionally, in order to handle longer range dependencies, the agent needs to store a history of previous goals, actions and representations. There has been some recent work in using recurrent networks in conjunction with reinforcement learning [15, 23]. In order to scale-up our approach to harder non-Markovian settings, it will be necessary to incorporate a flexible episodic memory module."}, {"heading": "Acknowledgements", "text": "We would like to thank Vaibhav Unhelkar, Ramya Ramakrishnan, Sam Gershman, Michael Littman, Vlad Firoiu, Will Whitney, Max Kleiman-Weiner and Pedro Tsividis for critical feedback and discussions. We are grateful to receive support from the Center for Brain, Machines and Minds (NSF STC award CCF - 1231216) and the MIT OpenMind team."}], "references": [{"title": "The arcade learning environment: An evaluation platform for general agents", "author": ["M.G. Bellemare", "Y. Naddaf", "J. Veness", "M. Bowling"], "venue": "Journal of Artificial Intelligence Research", "citeRegEx": "1", "shortCiteRegEx": null, "year": 2012}, {"title": "Hierarchically organized behavior and its neural foundations: A reinforcement learning perspective", "author": ["M.M. Botvinick", "Y. Niv", "A.C. Barto"], "venue": "Cognition, 113(3):262\u2013280", "citeRegEx": "2", "shortCiteRegEx": null, "year": 2009}, {"title": "Object focused q-learning for autonomous agents", "author": ["L.C. Cobo", "C.L. Isbell", "A.L. Thomaz"], "venue": "Proceedings of the 2013 international conference on Autonomous agents and multi-agent systems, pages 1061\u20131068. International Foundation for Autonomous Agents and Multiagent Systems", "citeRegEx": "3", "shortCiteRegEx": null, "year": 2013}, {"title": "Improving generalization for temporal difference learning: The successor representation", "author": ["P. Dayan"], "venue": "Neural Computation, 5(4):613\u2013624", "citeRegEx": "4", "shortCiteRegEx": null, "year": 1993}, {"title": "Feudal reinforcement learning", "author": ["P. Dayan", "G.E. Hinton"], "venue": "Advances in neural information processing systems, pages 271\u2013271. Morgan Kaufmann Publishers", "citeRegEx": "5", "shortCiteRegEx": null, "year": 1993}, {"title": "Hierarchical reinforcement learning with the maxq value function decomposition", "author": ["T.G. Dietterich"], "venue": "J. Artif. Intell. Res.(JAIR), 13:227\u2013303", "citeRegEx": "6", "shortCiteRegEx": null, "year": 2000}, {"title": "An object-oriented representation for efficient reinforcement learning", "author": ["C. Diuk", "A. Cohen", "M.L. Littman"], "venue": "Proceedings of the 25th international conference on Machine learning, pages 240\u2013247. ACM", "citeRegEx": "7", "shortCiteRegEx": null, "year": 2008}, {"title": "Attend", "author": ["S. Eslami", "N. Heess", "T. Weber", "Y. Tassa", "K. Kavukcuoglu", "G.E. Hinton"], "venue": "infer, repeat: Fast scene understanding with generative models. arXiv preprint arXiv:1603.08575", "citeRegEx": "8", "shortCiteRegEx": null, "year": 2016}, {"title": "Learning to segment moving objects in videos", "author": ["K. Fragkiadaki", "P. Arbelaez", "P. Felsen", "J. Malik"], "venue": "Computer Vision and Pattern Recognition (CVPR), 2015 IEEE Conference on, pages 4083\u20134090. IEEE", "citeRegEx": "9", "shortCiteRegEx": null, "year": 2015}, {"title": "The successor representation and temporal context", "author": ["S.J. Gershman", "C.D. Moore", "M.T. Todd", "K.A. Norman", "P.B. Sederberg"], "venue": "Neural Computation, 24(6):1553\u20131568", "citeRegEx": "10", "shortCiteRegEx": null, "year": 2012}, {"title": "Binding via reconstruction clustering", "author": ["K. Greff", "R.K. Srivastava", "J. Schmidhuber"], "venue": "arXiv preprint arXiv:1511.06418", "citeRegEx": "11", "shortCiteRegEx": null, "year": 2015}, {"title": "Draw: A recurrent neural network for image generation", "author": ["K. Gregor", "I. Danihelka", "A. Graves", "D. Wierstra"], "venue": "arXiv preprint arXiv:1502.04623", "citeRegEx": "12", "shortCiteRegEx": null, "year": 2015}, {"title": "Generalizing plans to new environments in relational mdps", "author": ["C. Guestrin", "D. Koller", "C. Gearhart", "N. Kanodia"], "venue": "Proceedings of the 18th international joint conference on Artificial intelligence, pages 1003\u20131010. Morgan Kaufmann Publishers Inc.", "citeRegEx": "13", "shortCiteRegEx": null, "year": 2003}, {"title": "Efficient solution algorithms for factored mdps", "author": ["C. Guestrin", "D. Koller", "R. Parr", "S. Venkataraman"], "venue": "Journal of Artificial Intelligence Research, pages 399\u2013468", "citeRegEx": "14", "shortCiteRegEx": null, "year": 2003}, {"title": "Deep recurrent q-learning for partially observable mdps", "author": ["M. Hausknecht", "P. Stone"], "venue": "arXiv preprint arXiv:1507.06527", "citeRegEx": "15", "shortCiteRegEx": null, "year": 2015}, {"title": "Efficient inference in occlusion-aware generative models of images", "author": ["J. Huang", "K. Murphy"], "venue": "arXiv preprint arXiv:1511.06362", "citeRegEx": "16", "shortCiteRegEx": null, "year": 2015}, {"title": "Evolving deep unsupervised convolutional networks for vision-based reinforcement learning", "author": ["J. Kout\u0144\u0131k", "J. Schmidhuber", "F. Gomez"], "venue": "Proceedings of the 2014 conference on Genetic and evolutionary computation, pages 541\u2013548. ACM", "citeRegEx": "17", "shortCiteRegEx": null, "year": 2014}, {"title": "Deep convolutional inverse graphics network", "author": ["T.D. Kulkarni", "W.F. Whitney", "P. Kohli", "J. Tenenbaum"], "venue": "Advances in Neural Information Processing Systems, pages 2530\u20132538", "citeRegEx": "18", "shortCiteRegEx": null, "year": 2015}, {"title": "Building machines that learn and think like people", "author": ["B.M. Lake", "T.D. Ullman", "J.B. Tenenbaum", "S.J. Gershman"], "venue": "arXiv preprint arXiv:1604.00289", "citeRegEx": "19", "shortCiteRegEx": null, "year": 2016}, {"title": "et al", "author": ["V. Mnih", "K. Kavukcuoglu", "D. Silver", "A.A. Rusu", "J. Veness", "M.G. Bellemare", "A. Graves", "M. Riedmiller", "A.K. Fidjeland", "G. Ostrovski"], "venue": "Human-level control through deep reinforcement learning. Nature, 518(7540):529\u2013533", "citeRegEx": "20", "shortCiteRegEx": null, "year": 2015}, {"title": "Variational information maximisation for intrinsically motivated reinforcement learning", "author": ["S. Mohamed", "D.J. Rezende"], "venue": "Advances in Neural Information Processing Systems, pages 2116\u20132124", "citeRegEx": "21", "shortCiteRegEx": null, "year": 2015}, {"title": "et al", "author": ["A. Nair", "P. Srinivasan", "S. Blackwell", "C. Alcicek", "R. Fearon", "A. De Maria", "V. Panneershelvam", "M. Suleyman", "C. Beattie", "S. Petersen"], "venue": "Massively parallel methods for deep reinforcement learning. arXiv preprint arXiv:1507.04296", "citeRegEx": "22", "shortCiteRegEx": null, "year": 2015}, {"title": "Language understanding for text-based games using deep reinforcement learning", "author": ["K. Narasimhan", "T. Kulkarni", "R. Barzilay"], "venue": "arXiv preprint arXiv:1506.08941", "citeRegEx": "23", "shortCiteRegEx": null, "year": 2015}, {"title": "Deep exploration via bootstrapped dqn", "author": ["I. Osband", "C. Blundell", "A. Pritzel", "B. Van Roy"], "venue": "arXiv preprint arXiv:1602.04621", "citeRegEx": "24", "shortCiteRegEx": null, "year": 2016}, {"title": "One-shot generalization in deep generative models", "author": ["D.J. Rezende", "S. Mohamed", "I. Danihelka", "K. Gregor", "D. Wierstra"], "venue": "arXiv preprint arXiv:1603.05106", "citeRegEx": "25", "shortCiteRegEx": null, "year": 2016}, {"title": "Universal value function approximators", "author": ["T. Schaul", "D. Horgan", "K. Gregor", "D. Silver"], "venue": "Proceedings of the 32nd International Conference on Machine Learning (ICML-15), pages 1312\u20131320", "citeRegEx": "26", "shortCiteRegEx": null, "year": 2015}, {"title": "Prioritized experience replay", "author": ["T. Schaul", "J. Quan", "I. Antonoglou", "D. Silver"], "venue": "arXiv preprint arXiv:1511.05952", "citeRegEx": "27", "shortCiteRegEx": null, "year": 2015}, {"title": "Formal theory of creativity", "author": ["J. Schmidhuber"], "venue": "fun, and intrinsic motivation ", "citeRegEx": "28", "shortCiteRegEx": null, "year": 2010}, {"title": "G", "author": ["D. Silver", "A. Huang", "C.J. Maddison", "A. Guez", "L. Sifre"], "venue": "van den Driessche, J. Schrittwieser, I. Antonoglou, V. Panneershelvam, M. Lanctot, et al. Mastering the game of go with deep neural networks and tree search. Nature, 529(7587):484\u2013489", "citeRegEx": "29", "shortCiteRegEx": null, "year": 2016}, {"title": "Where do rewards come from", "author": ["S. Singh", "R.L. Lewis", "A.G. Barto"], "venue": "Proceedings of the annual conference of the cognitive science society, pages 2601\u20132606", "citeRegEx": "30", "shortCiteRegEx": null, "year": 2009}, {"title": "Intrinsically motivated reinforcement learning: An evolutionary perspective", "author": ["S. Singh", "R.L. Lewis", "A.G. Barto", "J. Sorg"], "venue": "Autonomous Mental Development, IEEE Transactions on, 2(2):70\u2013 82", "citeRegEx": "31", "shortCiteRegEx": null, "year": 2010}, {"title": "Intrinsically motivated reinforcement learning", "author": ["S.P. Singh", "A.G. Barto", "N. Chentanez"], "venue": "Advances in neural information processing systems, pages 1281\u20131288", "citeRegEx": "32", "shortCiteRegEx": null, "year": 2004}, {"title": "Linear options", "author": ["J. Sorg", "S. Singh"], "venue": "Proceedings of the 9th International Conference on Autonomous Agents and Multiagent Systems: Volume 1 - Volume 1, AAMAS \u201910, pages 31\u201338, Richland, SC", "citeRegEx": "33", "shortCiteRegEx": null, "year": 2010}, {"title": "Core knowledge", "author": ["E.S. Spelke", "K.D. Kinzler"], "venue": "Developmental science, 10(1):89\u201396", "citeRegEx": "34", "shortCiteRegEx": null, "year": 2007}, {"title": "Design principles of the hippocampal cognitive map", "author": ["K.L. Stachenfeld", "M. Botvinick", "S.J. Gershman"], "venue": "Advances in neural information processing systems, pages 2528\u20132536", "citeRegEx": "35", "shortCiteRegEx": null, "year": 2014}, {"title": "Incentivizing exploration in reinforcement learning with deep predictive models", "author": ["B.C. Stadie", "S. Levine", "P. Abbeel"], "venue": "arXiv preprint arXiv:1507.00814", "citeRegEx": "36", "shortCiteRegEx": null, "year": 2015}, {"title": "Introduction to reinforcement learning", "author": ["R.S. Sutton", "A.G. Barto"], "venue": "volume 135. MIT Press Cambridge", "citeRegEx": "37", "shortCiteRegEx": null, "year": 1998}, {"title": "Horde: A scalable real-time architecture for learning knowledge from unsupervised sensorimotor interaction", "author": ["R.S. Sutton", "J. Modayil", "M. Delp", "T. Degris", "P.M. Pilarski", "A. White", "D. Precup"], "venue": "The 10th International Conference on Autonomous Agents and Multiagent Systems-Volume 2, pages 761\u2013768. International Foundation for Autonomous Agents and Multiagent Systems", "citeRegEx": "38", "shortCiteRegEx": null, "year": 2011}, {"title": "Between mdps and semi-mdps: A framework for temporal abstraction in reinforcement learning", "author": ["R.S. Sutton", "D. Precup", "S. Singh"], "venue": "Artificial intelligence, 112(1):181\u2013211", "citeRegEx": "39", "shortCiteRegEx": null, "year": 1999}, {"title": "et al", "author": ["C. Szepesvari", "R.S. Sutton", "J. Modayil", "S. Bhatnagar"], "venue": "Universal option models. In Advances in Neural Information Processing Systems, pages 990\u2013998", "citeRegEx": "40", "shortCiteRegEx": null, "year": 2014}, {"title": "Understanding visual concepts with continuation learning", "author": ["W.F. Whitney", "M. Chang", "T. Kulkarni", "J.B. Tenenbaum"], "venue": "arXiv preprint arXiv:1602.06822", "citeRegEx": "41", "shortCiteRegEx": null, "year": 2016}], "referenceMentions": [{"referenceID": 16, "context": "Recently, non-linear function approximators coupled with reinforcement learning [17, 20, 29] have made it possible to learn abstractions over highdimensional state spaces, but the task of exploration with sparse feedback still remains a major challenge.", "startOffset": 80, "endOffset": 92}, {"referenceID": 19, "context": "Recently, non-linear function approximators coupled with reinforcement learning [17, 20, 29] have made it possible to learn abstractions over highdimensional state spaces, but the task of exploration with sparse feedback still remains a major challenge.", "startOffset": 80, "endOffset": 92}, {"referenceID": 28, "context": "Recently, non-linear function approximators coupled with reinforcement learning [17, 20, 29] have made it possible to learn abstractions over highdimensional state spaces, but the task of exploration with sparse feedback still remains a major challenge.", "startOffset": 80, "endOffset": 92}, {"referenceID": 35, "context": "Existing methods like Boltzmann exploration and Thomson sampling [36, 24] offer significant improvements over -greedy, but are limited due to the underlying models functioning at the level of basic actions.", "startOffset": 65, "endOffset": 73}, {"referenceID": 23, "context": "Existing methods like Boltzmann exploration and Thomson sampling [36, 24] offer significant improvements over -greedy, but are limited due to the underlying models functioning at the level of basic actions.", "startOffset": 65, "endOffset": 73}, {"referenceID": 36, "context": "Reinforcement learning (RL) formalizes control problems as finding a policy \u03c0 that maximizes expected future rewards [37].", "startOffset": 117, "endOffset": 121}, {"referenceID": 37, "context": "Recently, value functions have also been generalized as V (s, g) in order to represent the utility of state s for achieving a given goal g \u2208 G [38, 26].", "startOffset": 143, "endOffset": 151}, {"referenceID": 25, "context": "Recently, value functions have also been generalized as V (s, g) in order to represent the utility of state s for achieving a given goal g \u2208 G [38, 26].", "startOffset": 143, "endOffset": 151}, {"referenceID": 38, "context": "A collection of these policies can be hierarchically arranged with temporal dynamics for learning or planning within the framework of semi-Markov decision processes [39, 40].", "startOffset": 165, "endOffset": 173}, {"referenceID": 39, "context": "A collection of these policies can be hierarchically arranged with temporal dynamics for learning or planning within the framework of semi-Markov decision processes [39, 40].", "startOffset": 165, "endOffset": 173}, {"referenceID": 38, "context": "[39] proposed the options framework, which involves abstractions over the space of actions.", "startOffset": 0, "endOffset": 4}, {"referenceID": 39, "context": "Recently, several methods have been proposed to learn options in real-time by using varying reward functions [40] or by composing existing options [33].", "startOffset": 109, "endOffset": 113}, {"referenceID": 32, "context": "Recently, several methods have been proposed to learn options in real-time by using varying reward functions [40] or by composing existing options [33].", "startOffset": 147, "endOffset": 151}, {"referenceID": 25, "context": "Value functions have also been generalized to consider goals along with states [26].", "startOffset": 79, "endOffset": 83}, {"referenceID": 4, "context": "Other related work for hierarchical formulations include the model of Dayan and Hinton [5] which consisted of \u201cmanagers\u201d taking decisions at various levels of granularity, percolating all the way down to atomic actions made by the agent.", "startOffset": 87, "endOffset": 90}, {"referenceID": 5, "context": "The MAXQ framework [6] built up on this work to decompose the value function of an MDP into combinations of value functions of smaller constituent MDPs, as did Guestrin et al.", "startOffset": 19, "endOffset": 22}, {"referenceID": 13, "context": "[14] in their factored MDP formulation.", "startOffset": 0, "endOffset": 4}, {"referenceID": 25, "context": "Our approach does not use separate Q-functions for each option, but instead treats the option as part of the input, similar to [26].", "startOffset": 127, "endOffset": 131}, {"referenceID": 31, "context": "[32] explored agents with intrinsic reward structures in order to learn", "startOffset": 0, "endOffset": 4}, {"referenceID": 30, "context": "[31] take an evolutionary perspective to optimize over the space of reward functions for the agent, leading to a notion of extrinsically and intrinsically motivated behavior.", "startOffset": 0, "endOffset": 4}, {"referenceID": 27, "context": "Schmidhuber [28] provides a coherent formulation of intrinsic motivation, which is measured by the improvements to a predictive world model made by the learning algorithm.", "startOffset": 12, "endOffset": 16}, {"referenceID": 20, "context": "Mohamed and Rezende [21] have recently proposed a notion of intrinsically motivated learning within the framework of mutual information maximization.", "startOffset": 20, "endOffset": 24}, {"referenceID": 6, "context": "Object-based representations [7, 3] that can exploit the underlying structure of a problem have been proposed to alleviate the curse of dimensionality in RL.", "startOffset": 29, "endOffset": 35}, {"referenceID": 2, "context": "Object-based representations [7, 3] that can exploit the underlying structure of a problem have been proposed to alleviate the curse of dimensionality in RL.", "startOffset": 29, "endOffset": 35}, {"referenceID": 6, "context": "[7] propose an Object-Oriented MDP, using a representation based on objects and their interactions.", "startOffset": 0, "endOffset": 3}, {"referenceID": 12, "context": "[13], who describe an object-based representation in the context of planning.", "startOffset": 0, "endOffset": 4}, {"referenceID": 19, "context": "Deep Q-Networks and its variants have been successfully applied to various domains including Atari games [20] and Go [29], but still perform poorly on environments with sparse, delayed reward signals.", "startOffset": 105, "endOffset": 109}, {"referenceID": 28, "context": "Deep Q-Networks and its variants have been successfully applied to various domains including Atari games [20] and Go [29], but still perform poorly on environments with sparse, delayed reward signals.", "startOffset": 117, "endOffset": 121}, {"referenceID": 26, "context": "Strategies such as prioritized experience replay [27] and bootstrapping [24] have been proposed to alleviate the problem of learning from sparse rewards.", "startOffset": 49, "endOffset": 53}, {"referenceID": 23, "context": "Strategies such as prioritized experience replay [27] and bootstrapping [24] have been proposed to alleviate the problem of learning from sparse rewards.", "startOffset": 72, "endOffset": 76}, {"referenceID": 33, "context": "There is converging evidence in developmental psychology that human infants, primates, children, and adults in diverse cultures base their core knowledge on certain cognitive systems including \u2013 entities, agents and their actions, numerical quantities, space, social-structures and intuitive theories [34, 19].", "startOffset": 301, "endOffset": 309}, {"referenceID": 18, "context": "There is converging evidence in developmental psychology that human infants, primates, children, and adults in diverse cultures base their core knowledge on certain cognitive systems including \u2013 entities, agents and their actions, numerical quantities, space, social-structures and intuitive theories [34, 19].", "startOffset": 301, "endOffset": 309}, {"referenceID": 3, "context": "Decomposition of the successor representation yields reasonable sub-goals for spatial navigation problems [4, 10, 35].", "startOffset": 106, "endOffset": 117}, {"referenceID": 9, "context": "Decomposition of the successor representation yields reasonable sub-goals for spatial navigation problems [4, 10, 35].", "startOffset": 106, "endOffset": 117}, {"referenceID": 34, "context": "Decomposition of the successor representation yields reasonable sub-goals for spatial navigation problems [4, 10, 35].", "startOffset": 106, "endOffset": 117}, {"referenceID": 1, "context": "[2] have written a general overview of hierarchical reinforcement learning in the context of cognitive science and neuroscience.", "startOffset": 0, "endOffset": 3}, {"referenceID": 38, "context": "We use the temporal abstraction of options [39] to define policies \u03c0g for each goal g.", "startOffset": 43, "endOffset": 47}, {"referenceID": 29, "context": "One can also view this setup as similar to optimizing over the space of optimal reward functions to maximize fitness [30].", "startOffset": 117, "endOffset": 121}, {"referenceID": 19, "context": "We use the Deep Q-Learning framework [20] to learn policies for both the controller and the meta-controller.", "startOffset": 37, "endOffset": 41}, {"referenceID": 19, "context": "Following [20], the parameters \u03b81,i\u22121 from the previous iteration are held fixed when optimising the loss function.", "startOffset": 10, "endOffset": 14}, {"referenceID": 23, "context": "This is a modified version of the MDP in [24], with the reward structure adding complexity to the task.", "startOffset": 41, "endOffset": 45}, {"referenceID": 19, "context": "For instance, the basic DQN [20] achieves a score of 0 while even the best performing system, Gorila DQN [22], manages only 4.", "startOffset": 28, "endOffset": 32}, {"referenceID": 21, "context": "For instance, the basic DQN [20] achieves a score of 0 while even the best performing system, Gorila DQN [22], manages only 4.", "startOffset": 105, "endOffset": 109}, {"referenceID": 33, "context": "Inspired by the developmental psychology literature [34] and object-oriented MDPs [7], we use entities or objects in the scene to parameterize goals in this environment.", "startOffset": 52, "endOffset": 56}, {"referenceID": 6, "context": "Inspired by the developmental psychology literature [34] and object-oriented MDPs [7], we use entities or objects in the scene to parameterize goals in this environment.", "startOffset": 82, "endOffset": 85}, {"referenceID": 8, "context": "Unsupervised detection of objects in visual scenes is an open problem in computer vision, although there has been recent progress in obtaining objects directly from image or motion data [9, 8, 11].", "startOffset": 186, "endOffset": 196}, {"referenceID": 7, "context": "Unsupervised detection of objects in visual scenes is an open problem in computer vision, although there has been recent progress in obtaining objects directly from image or motion data [9, 8, 11].", "startOffset": 186, "endOffset": 196}, {"referenceID": 10, "context": "Unsupervised detection of objects in visual scenes is an open problem in computer vision, although there has been recent progress in obtaining objects directly from image or motion data [9, 8, 11].", "startOffset": 186, "endOffset": 196}, {"referenceID": 0, "context": "We use the Arcade Learning Environment [1] to perform experiments.", "startOffset": 39, "endOffset": 42}, {"referenceID": 7, "context": "There has been recent work [8, 11, 25, 18, 41, 12, 16] in using deep generative models to disentangle multiple factors of variations (objects, pose, location, etc) from pixel data.", "startOffset": 27, "endOffset": 54}, {"referenceID": 10, "context": "There has been recent work [8, 11, 25, 18, 41, 12, 16] in using deep generative models to disentangle multiple factors of variations (objects, pose, location, etc) from pixel data.", "startOffset": 27, "endOffset": 54}, {"referenceID": 24, "context": "There has been recent work [8, 11, 25, 18, 41, 12, 16] in using deep generative models to disentangle multiple factors of variations (objects, pose, location, etc) from pixel data.", "startOffset": 27, "endOffset": 54}, {"referenceID": 17, "context": "There has been recent work [8, 11, 25, 18, 41, 12, 16] in using deep generative models to disentangle multiple factors of variations (objects, pose, location, etc) from pixel data.", "startOffset": 27, "endOffset": 54}, {"referenceID": 40, "context": "There has been recent work [8, 11, 25, 18, 41, 12, 16] in using deep generative models to disentangle multiple factors of variations (objects, pose, location, etc) from pixel data.", "startOffset": 27, "endOffset": 54}, {"referenceID": 11, "context": "There has been recent work [8, 11, 25, 18, 41, 12, 16] in using deep generative models to disentangle multiple factors of variations (objects, pose, location, etc) from pixel data.", "startOffset": 27, "endOffset": 54}, {"referenceID": 15, "context": "There has been recent work [8, 11, 25, 18, 41, 12, 16] in using deep generative models to disentangle multiple factors of variations (objects, pose, location, etc) from pixel data.", "startOffset": 27, "endOffset": 54}, {"referenceID": 14, "context": "There has been some recent work in using recurrent networks in conjunction with reinforcement learning [15, 23].", "startOffset": 103, "endOffset": 111}, {"referenceID": 22, "context": "There has been some recent work in using recurrent networks in conjunction with reinforcement learning [15, 23].", "startOffset": 103, "endOffset": 111}], "year": 2016, "abstractText": "Learning goal-directed behavior in environments with sparse feedback is a major challenge for reinforcement learning algorithms. The primary difficulty arises due to insufficient exploration, resulting in an agent being unable to learn robust value functions. Intrinsically motivated agents can explore new behavior for its own sake rather than to directly solve problems. Such intrinsic behaviors could eventually help the agent solve tasks posed by the environment. We present hierarchical-DQN (h-DQN), a framework to integrate hierarchical value functions, operating at different temporal scales, with intrinsically motivated deep reinforcement learning. A top-level value function learns a policy over intrinsic goals, and a lower-level function learns a policy over atomic actions to satisfy the given goals. h-DQN allows for flexible goal specifications, such as functions over entities and relations. This provides an efficient space for exploration in complicated environments. We demonstrate the strength of our approach on two problems with very sparse, delayed feedback: (1) a complex discrete MDP with stochastic transitions, and (2) the classic ATARI game \u2018Montezuma\u2019s Revenge\u2019.", "creator": "LaTeX with hyperref package"}}}