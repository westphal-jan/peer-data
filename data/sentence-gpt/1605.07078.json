{"id": "1605.07078", "review": {"conference": "NIPS", "VERSION": "v1", "DATE_OF_SUBMISSION": "23-May-2016", "title": "Learning Sensor Multiplexing Design through Back-propagation", "abstract": "Recent progress on many imaging and vision tasks has been driven by the use of deep feed-forward neural networks, which are trained by propagating gradients of a loss defined on the final output, back through the network up to the first layer that operates directly on the image. We propose back-propagating one step further---to learn camera sensor designs jointly with networks that carry out inference on the images they capture. In this paper, we specifically consider the design and inference problems in a typical color camera---where the sensor is able to measure only one color channel at each pixel location, and computational inference is required to reconstruct a full color image. We learn the camera sensor's color multiplexing pattern by encoding it as layer whose learnable weights determine which color channel, from among a fixed set, will be measured at each location. These weights are jointly trained with those of a reconstruction network that operates on the corresponding sensor measurements to produce a full color image. Our network achieves significant improvements in accuracy over the traditional Bayer pattern used in most color cameras. It automatically learns to employ a sparse color measurement approach similar to that of a recent design, and moreover, improves upon that design by learning an optimal layout for these measurements. In order to obtain the optimal solution to the problem, we first need to use this same network to learn how to apply a gradient. This method is not suitable to all of the other methods in the previous paper.\n\n\n\nConventional training\n\nThe training method consisted of using a model of the original image in which the image was cropped at 100%. The model uses only 1x500 pixel output for the initial input, as it is a first step forward. The training model consists of 3 layers of 2-layer layers, which have a single layer layer that is the same size as the first layer. The train, the training model, and the training model perform the same function in each layer. The training model uses a model of the original image in which the image was cropped at 100%. The train, the training model, and the training model perform the same function in each layer. The training model consists of 3 layers of 2-layer layers, which have a single layer that is the same size as the first layer. The training model consists of 3 layers of 2-layer layers, which have a single layer that is the same size as the first layer. The training model consists of 3 layers of 2-layer layers, which have a single layer that is the same size as the first layer. The training", "histories": [["v1", "Mon, 23 May 2016 16:26:59 GMT  (876kb,D)", "https://arxiv.org/abs/1605.07078v1", "Project page atthis http URL"], ["v2", "Wed, 2 Nov 2016 18:30:57 GMT  (5465kb,D)", "http://arxiv.org/abs/1605.07078v2", "NIPS 2016. Project page atthis http URL"]], "COMMENTS": "Project page atthis http URL", "reviews": [], "SUBJECTS": "cs.LG stat.ML", "authors": ["ayan chakrabarti"], "accepted": true, "id": "1605.07078"}, "pdf": {"name": "1605.07078.pdf", "metadata": {"source": "CRF", "title": "Learning Sensor Multiplexing Design through Back-propagation", "authors": ["Ayan Chakrabarti"], "emails": ["ayanc@ttic.edu"], "sections": [{"heading": "1 Introduction", "text": "With the availability of cheap computing power, modern cameras can rely on computational postprocessing to extend their capabilities under the physical constraints of existing sensor technology. Sophisticated techniques, such as those for denoising [3, 28], deblurring [19, 26], etc., are increasingly being used to improve the quality of images and videos that were degraded during acquisition. Moreover, researchers have posited novel sensing strategies that, when combined with post-processing algorithms, are able to produce higher quality and more informative images and videos. For example, coded exposure imaging [18] allows better inversion of motion blur, coded apertures [14, 23] allow passive measurement of scene depth from a single shot, and compressive measurement strategies [1, 8, 25] combined with sparse reconstruction algorithms allow the recovery of visual measurements with higher spatial, spectral, and temporal resolutions.\nKey to the success of these latter approaches is the co-design of sensing strategies and inference algorithms, where the measurements are designed to provide information complimentary to the known statistical structure of natural scenes. So far, sensor design in this regime has largely been either informed by expert intuition (e.g., [4]), or based on the decision to use a specific image model or inference strategy\u2014e.g., measurements corresponding to random [1], or dictionary-specific [5], projections are a common choice for sparsity-based reconstruction methods. In this paper, we seek to enable a broader data-driven exploration of the joint sensor and inference method space, by learning both sensor design and the computational inference engine end-to-end.\nAccepted to Conference on Neural Information Processing Systems (NIPS) 2016.\nar X\niv :1\n60 5.\n07 07\n8v 2\n[ cs\n.L G\n] 2\nN ov\nWe leverage the successful use of back-propagation and stochastic gradient descent (SGD) [13] in learning deep neural networks for various tasks [12, 16, 20, 24]. These networks process a given input through a complex cascade of layers, and training is able to jointly optimize the parameters of all layers to enable the network to succeed at the final inference task. Treating optical measurement and computational inference as a cascade, we propose using the same approach to learn both jointly. We encode the sensor\u2019s design choices into the learnable parameters of a \u201csensor layer\u201d which, once trained, can be instantiated by camera optics. This layer\u2019s output is fed to a neural network that carries out inference computationally on the corresponding measurements. Both are then trained jointly.\nWe demonstrate this approach by applying it to the sensor-inference design problem in a standard digital color camera. Since image sensors can physically measure only one color channel at each pixel, cameras spatially multiplex the measurement of different colors across the sensor plane, and then computationally recover the missing intensities through a reconstruction process known as demosaicking. We jointly learn the spatial pattern for multiplexing different color channels\u2014that requires making a hard decision to use one of a discrete set of color filters at each pixel\u2014along with a neural network that performs demosaicking. Together, these enable the recovery of high-quality color images of natural scenes. We find that our approach significantly outperforms the traditional Bayer pattern [2] used in most color cameras. We also compare it to a recently introduced design [4] based on making sparse color measurements, that has superior noise performance and fewer aliasing artifacts. Interestingly, our network automatically learns to employ a similar measurement strategy, but is able outperform this design by finding a more optimal spatial layout for the color measurements."}, {"heading": "2 Background", "text": "Since both CMOS and CCD sensors can measure only the total intensity of visible light incident on them, color is typically measured by placing an array of color filters (CFA) in front of the sensor plane. The CFA pattern determines which color channel is measured at which pixel, with the most commonly pattern used in RGB color cameras being the Bayer mosaic [2] introduced in 1976. This is a 4\u00d7 4 repeating pattern, with two measurements of the green channel and one each of red and blue. The color values that are not directly measured are then reconstructed computationally by demosaciking algorithms. These algorithms [15] typically rely on the assumption that different color channels are correlated and piecewise smooth, and reason about locations of edges and other high-frequency image content to avoid creating aliasing artifacts.\nThis approach yields reasonable results, and the Bayer pattern remains in widespread use even today. However, the choice of the CFA pattern involves a trade-off. Color filters placed in front of the sensor block part of the incident light energy, leading to longer exposure times or noisier measurements (in comparison to grayscale cameras). Moreover, since every channel is regularly sub-sampled in the Bayer pattern, reconstructions are prone to visually disturbing aliasing artifacts even with the best reconstruction methods. Most consumer cameras address this by placing an anti-aliasing filter in front of the sensor to blur the incident light field, but this leads to a loss of sharpness and resolution.\nTo address this, Chakrabarti et al. [4] recently proposed the use of an alternative CFA pattern in which a majority of the pixels measure the total unfiltered visible light intensity. Color is measured only sparsely, using 2\u00d7 2 Bayer blocks placed at regularly spaced intervals on the otherwise unfiltered sensor plane. The resulting measured image corresponds to an un-aliased full resolution luminance image (i.e., the unfiltered measurements) with \u201choles\u201d at the color sampling site; with point-wise color information on a coarser grid. The reconstruction algorithm in [4] is significantly different from traditional demosaicking, and involves first recovering missing luminance values by hole-filling (which is computationally easier than up-sampling since there is more context around the missing intensities), and then propagating chromaticities from the color measurement sites to the remaining pixels using edges in the luminance image as a guide. This approach was shown to significantly improve upon the capabilities of a Bayer sensor\u2014in terms of better noise performance, increased sharpness, and reduced aliasing artifacts.\nThat [4]\u2019s CFA pattern required a very different reconstruction algorithm illustrates the fact that both the sensor and inference method need to be modified together to achieve gains in performance. In [4]\u2019s case, this was achieved by applying an intuitive design principles\u2014of making high SNR non-aliased measurements of one color channel. However, these principles are tied to a specific reconstruction approach, and do not tell us, for example, whether regularly spaced 2\u00d7 2 blocks are the optimal way of measuring color sparsely.\nWhile learning-based methods have been proposed for demosaicking [10, 17, 22] (as well as for joint demosaicking and denoising [9, 11]), these work with a pre-determined CFA pattern and training is used only to tune the reconstruction algorithm. In contrast, our approach seeks to learn, automatically from data, both the CFA pattern and reconstruction method, so that they are jointly optimal in terms of reconstruction quality."}, {"heading": "3 Jointly Learning Measurement and Reconstruction", "text": "We formulate our task as that of reconstructing an RGB image y(n) \u2208 R3, where n \u2208 Z2 indexes pixel location, from a measured sensor image s(n) \u2208 R. Along with this reconstruction task, we also have to choose a multiplexing pattern which determines the color channel that each s(n) corresponds to. We let this choice be between one of C channels\u2014a parameterization that takes into account which spectral filters can be physically synthesized. We use x(n) \u2208 RC denote the intensity measurements corresponding to each of these color channels, and a zero-one selection map I(n) \u2208 {0, 1}C , |I(n)| = 1 to encode the multiplexing pattern, such that the corresponding sensor measurements are given by s(n) = I(n)Tx(n). Moreover, we assume that I(n) repeats periodically every P pixels, and therefore only has P 2 unique values.\nGiven a training set consisting of pairs of output images y(n) and C-channel input images x(n), our goal then is to learn this pattern I(n), jointly with a reconstruction algorithm that maps the corresponding measurements s(n) to the full color image output y(n). We use a neural network\nto map sensor measurements s(n) to an estimate y\u0302(n) of the full color image. Furthermore, we encode the measurement process into a \u201csensor layer\u201d, which maps the input x(n) to measurements s(n), and whose learnable parameters encode the multiplexing pattern I(n). We then learn both the reconstruction network and the sensor layer simultaneously, with respect to a squared loss \u2016y\u0302(n)\u2212 y(n)\u20162 between the reconstructed and true color images."}, {"heading": "3.1 Learning the Multiplexing Pattern", "text": "The key challenge to our joint learning problem lies in recovering the optimal multiplexing pattern I(n), since it is ordinal-valued and requires learning to make a hard non-differentiable decision between C possibilities. To address this, we rely on the standard soft-max operation, which is traditionally used in multi-label classification tasks.\nHowever, we are unable to use the soft-max operation directly\u2014unlike in classification tasks where the ordinal labels are the final output, and where the training objective prefers hard assignment to a single label, in our formulation I(n) is used to generate sensor measurements that are then processed by a reconstruction network. Indeed, when using a straight soft-max, we find that the reconstruction network converges to real-valued I(n) maps that correspond to measuring different weighted combinations of the input channels. Thresholding the learned I(n) to be ordinal valued leads to a significant drop in performance, even when we further train the reconstruction network to work with this thresholded version.\nOur solution to this is fairly simple. We use a soft-max with a temperature parameter that is increased slowly through training iterations. Specifically, we learn a vector w(n) \u2208 RC for each location n of the multiplexing pattern, with the corresponding I(n) given during training as:\nI(n) = Soft-max [\u03b1tw(n)] , (1)\nwhere \u03b1t is a scalar factor that we increase with iteration number t.\nTherefore, in addition to changes due to the SGD updates to w(n), the effective distribution of I(n) become \u201cpeakier\u201d at every iteration because of the increasing \u03b1t, and as \u03b1t \u2192\u221e, I(n) becomes a zero-one vector. Note that the gradient magnitudes of w(n) also scale-up, since we compute these gradients at each iteration with respect to the current value of t. This ensures that the pattern can keep learning in the presence of a strong supervisory signal from the loss, while retaining a bias to drift towards making a hard choice for a single color channel.\nAs illustrated in Fig. 1, our sensor layer contains a parameter vector w(n) for each pixel of the P \u00d7 P multiplexing pattern. During training, we generate the corresponding I(n) vectors using (1) above, and the layer then outputs sensor measurements based on the C-channel input x(n) as s(n) = I(n)Tx(n). Once training is complete (and for validation during training), we replace I(n) with its zero-one version as I(n)c = 1 for c = argmaxc wc(n), and 0 otherwise.\nAs we report in Sec. 4, our approach is able to successfully learn an optimal sensing pattern, which adapts during training to match the evolving reconstruction network. We would also like to note here two alternative strategies that we explored to learn an ordinal I(n), which were not as successful. We considered using a standard soft-max approach with a separate entropy penalty on the distribution I(n)\u2014however, this caused the pattern I(n) to stop learning very early during training (or for lower weighting of the penalty, had no effect at all). We also tried to incrementally pin the lowest I(n) values to zero after training for a number of iterations, in a manner similar to Han et al.\u2019s [7] approach to network compression. However, even with significant tuning, this approach caused a large parts of the pattern search space to be eliminated early, and was not able to adapt to the fact that a channel with a low weight at a particular location might eventually become desirable based on changes to the pattern at other locations, and corresponding updates to the reconstruction network."}, {"heading": "3.2 Reconstruction Network Architecture", "text": "Traditional demosaicking algorithms [15] produce a full color image by interpolating the missing color values from neighboring measurement sites, and by exploiting cross-channel dependencies. This interpolation is often linear, but in some cases takes the form of transferring chromaticities or color ratios (e.g., in [4]). Moreover, most demosaicking algorithms reason about image textures and edges to avoid smoothing across boundaries or creating aliasing artifacts.\nWe adopt a simple bifurcated network architecture that leverages these intuitions. As illustrated in Fig. 1, our network reconstructs each P \u00d7 P patch in y(n) from a receptive field that is centered on that patch in the measured image s(n), and thrice as large in each dimension. The network has two paths, both of operate on the entire input and both output (P \u00d7 P \u00d7 3K) values, i.e., K values for each output color intensity. We denote these outputs as \u03bb(n, k), f(n, k) \u2208 R3. One path produces f(n, k) by first computing multiplicative combinations of the entire 3P \u00d7 3P input patch\u2014we instantiate this using a fully-connected layer without a bias term that operates in the log-domain\u2014followed by a linear combinations across each of the 3K values at each location. We interpret these f(n, k) values as K proposals for each y(n). The second path uses a more standard cascade of convolution layers\u2014all of which have F outputs with the first layer having a stride of P\u2014followed by a fully connected layer that produces the outputs \u03bb(n, k) with the same dimensionality as f(n, k). We treat \u03bb(n, k) as gating values for the proposals f(n, k), and generate the final reconstructed patch y\u0302(n) as \u2211 k \u03bb(n, k)f(n, k)."}, {"heading": "4 Experiments", "text": "We follow a similar approach to [4] for training and evaluating our method. Like [4], we use the Gehler-Shi database [6, 21] that consists of 568 color images of indoor and outdoor scenes, captured under various illuminants. These images were obtained from RAW sensor images from a camera employing the Bayer pattern with an anti-aliasing optical filter, by using the different color measurements in each Bayer block to construct a single RGB pixel. These images are therefore at half the resolution of the original sensor image, but have statistics that are representative of aliasing-free full color images of typical natural scenes. Unlike [4] who only used 10 images for evaluation, we use the entire dataset\u2014using 56 images for testing, 461 images for training, and the remaining 51 images as a validation set to fix hyper-parameters.\nWe treat the images in the dataset as the ground truth for the output RGB images y(n). As sensor measurements, we consider C = 4 possible color channels. The first three correspond to the original sensor RGB channels. Like [4], we choose the fourth channel to be white or panchromatic, and construct it as the sum of the RGB measurements. As mentioned in [4], this corresponds to a conservative estimate of the light-efficiency of an unfiltered channel. We construct the C-channel input image x(n) by including these measurements, followed by addition of different levels of Gaussian noise, with high noise variances simulating low-light capture.\nWe learn a repeating pattern with P = 8. In our reconstruction network, we set the number of proposals K for each output intensity to 24, and the number of convolutional layer outputs F in the second path of our network to 128. When learning our sensor multiplexing pattern, we increase the scalar soft-max factor \u03b1t in (1) according to a quadratic schedule as \u03b1t = 1 + (\u03b3t)2, where \u03b3 = 2.5\u00d7 10\u22125 in our experiments. We train a separate reconstruction network for each noise level (positing that a camera could select between these based on the ISO settings). However, since it is impractical to employ different sensors for different settings, we learn a single spatial multiplexing pattern, optimized for reconstruction under moderate noise levels with standard deviation (STD) of 0.01 (with respect to intensity values in x(n) scaled to be between 0 and 1).\nWe train our sensor layer and reconstruction network jointly at this noise level on sets of 8 \u00d7 8 y(n) patches and corresponding 24\u00d7 24 x(n) patches sampled randomly from the training set. We use a batch-size of 128, with a learning rate of 0.001 for 1.5 million iterations. Then, keeping the sensor pattern fixed to our learned version, we train reconstruction networks from scratch for other noise levels\u2014training again with a learning rate of 0.001 for 1.5 million iterations, followed another 100,000 iterations with a rate of 10\u22124. We also train reconstruction networks at all noise levels in a similar way for the Bayer pattern, as well the pattern of [4] (with a color sampling rate of 4). Moreover, to allow consistent comparisons, we re-train the reconstruction network for our pattern at the 0.01 noise level from scratch following this regime."}, {"heading": "4.1 Evaluating the Reconstruction Network", "text": "We begin by comparing the performance of our learned reconstruction networks to traditional demosaicking algorithms for the standard Bayer pattern, and the pattern of [4]. Note that our goal is not to propose a new demosaicking method for existing sensors. Nevertheless, since our sensor\npattern is being learned jointly with our proposed reconstruction architecture, it is important to determine whether this architecture can learn to reason effectively with different kinds of sensor patterns, which is necessary to effectively cover the joint sensor-inference design space.\nWe compare our learned networks to Zhang and Wu\u2019s method [27] for the Bayer pattern, and Chakrabarti et al.\u2019s method [4] for their own pattern. We measure performance in terms of the reconstruction PSNR of all non-overlapping 64\u00d7 64 patches from all test images (roughly 40,000 patches). Table 1 compares the median PSNR values across all patches for reconstructions using our network to those from traditional methods, at two noise levels\u2014low noise corresponding to an STD of 0.0025, and moderate noise corresponding to 0.01. For the pattern of [4], we find that our network performs similar to their reconstruction method at the low noise level, and significantly better at the higher noise level. On the Bayer pattern, our network achieves much better performance at both noise levels. We also note here that reconstruction using our network is significantly faster\u2014taking 9s on a six core CPU, and 200ms when using a Titan X GPU, for a 2.7 mega-pixel image. In comparison, [4] and [27]\u2019s reconstruction methods take 20s and 1 min. respectively on the CPU."}, {"heading": "4.2 Visualizing Sensor Pattern Training", "text": "In Fig. 2, we visualize the evolution of our sensor pattern during the training process, while it is being jointly learned with the reconstruction network. In the initial iterations, the sensor layers displays a preference for densely sampling the RGB channels, with very few panchromatic measurements\u2014in fact, in the first row of Fig. 2, we see panchromatic pixels switching to color measurements. This\nis likely because early on in the training process, the reconstruction network hasn\u2019t yet learned to exploit cross-channel correlations, and therefore needs to measure the output channels directly.\nHowever, as training progresses, the reconstruction network gets more sophisticated, and we see the number of color measurements get sparser and sparser, in favor of panchromatic pixels that offer the advantage of higher SNR. Essentially, the sensor layer begins to adopt one of the design principles of [4]. However, it distributes the color measurement sites across the pattern, instead of concentrating them into separated blocks like [4]. In the last 500K iterations, we see that most changes correspond to fine refinements of the pattern, with a few individual pixels swapping the channels they measure.\nWhile the patterns themselves in Fig. 2 correspond to the channel at each pixel with the maximum value in the selection map I(n), remember that these maps themselves are soft. Therefore, we also report the mean entropy of the underlying I(n) for each pattern in Fig. 2. We see that this entropy decreases across iterations, as the choice of color channel for more and more pixels becomes fixed, with their distributions in I(n) becoming peakier and closer to being zero-one vectors."}, {"heading": "4.3 Evaluating Learned Pattern", "text": "Finally, we evaluate the performance of neural network-based reconstruction from measurements with our learned pattern, to those with the Bayer pattern and the pattern of [4]. Table 2 shows different quantiles of reconstruction PSNR for various noise levels, with noise STDs raning from 0 to 0.04. Even though our sensor pattern was trained at the noise level of STD=0.01, we find it achieves the highest reconstruction quality over a large range of noise levels. Specifically, it always outperforms the Bayer pattern, by fairly significant margins at higher noise levels. The improvement in performance over [4]\u2019s pattern is less pronounced, although we do achieve consistently higher PSNR values for all quantiles at most noise levels. Figure 3 shows examples of color patches reconstructed from our learned sensor, and compare these to those from the Bayer pattern and [4].\nWe see that the reconstructions from the Bayer pattern are noticeably worse. This is because it makes lower SNR measurements, and the reconstruction networks learn to smooth their outputs to reduce this noise. Both [4] and our pattern yield significantly better reconstructions. Indeed, most of our gains over the Bayer pattern come from choosing to make most measurements panchromatic, a design principle shared by [4]. However, remember that our sensor layer learns this principle entirely automatically from data, without expert supervision. Moreover, we see that [4]\u2019s reconstructions tend to have a few more instances of \u201cchromaticity noise\u201d, in the form of contiguous regions with incorrect hues, which explain its slightly lower PSNR values in Table 2."}, {"heading": "5 Conclusion", "text": "In this paper, we proposed learning sensor design jointly with a neural network that carried out inference on the sensor\u2019s measurements, specifically focusing on the problem of finding the optimal color multiplexing pattern for a digital color camera. We learned this pattern by joint training with a neural network for reconstructing full color images from the multiplexed measurements. We used a soft-max operation with an increasing temperature parameter to model the non-differentiable color channel selection at each point, which allowed us to train the pattern effectively. Finally, we demonstrated that our learned pattern enabled better reconstructions than past designs. An implementation of our method, along with trained models, data, and results, is available at our project page at http://www.ttic.edu/chakrabarti/learncfa/.\nOur results suggest that learning measurement strategies jointly with computational inference is both useful and possible. In particular, our approach can be used directly to learn other forms of optimized multiplexing patterns\u2014e.g., spatio-temporal multiplexing for video, viewpoint multiplexing in lightfield cameras, etc. Moreover, these patterns can be learned to be optimal for inference tasks beyond reconstruction. For example, a sensor layer jointly trained with a neural network for classification could be used to discover optimal measurement strategies for say, distinguishing between biological samples using multi-spectral imaging, or detecting targets in remote sensing."}, {"heading": "Acknowledgments", "text": "We thank NVIDIA corporation for the donation of a Titan X GPU used in this research."}], "references": [{"title": "Compressive sensing", "author": ["R.G. Baraniuk"], "venue": "IEEE Signal Processing Magazine,", "citeRegEx": "1", "shortCiteRegEx": null, "year": 2007}, {"title": "Color imaging array", "author": ["B.E. Bayer"], "venue": "US Patent 3971065,", "citeRegEx": "2", "shortCiteRegEx": null, "year": 1976}, {"title": "Image denoising: Can plain neural networks compete with BM3D? In Proc", "author": ["H.C. Burger", "C.J. Schuler", "S. Harmeling"], "venue": "CVPR,", "citeRegEx": "3", "shortCiteRegEx": null, "year": 2012}, {"title": "Rethinking color cameras", "author": ["A. Chakrabarti", "W.T. Freeman", "T. Zickler"], "venue": "Proc. ICCP,", "citeRegEx": "4", "shortCiteRegEx": null, "year": 2014}, {"title": "Optimized projections for compressed sensing", "author": ["M. Elad"], "venue": "IEEE Trans. Sig. Proc.,", "citeRegEx": "5", "shortCiteRegEx": null, "year": 2007}, {"title": "Bayesian color constancy revisited", "author": ["P.V. Gehler", "C. Rother", "A. Blake", "T. Minka", "T. Sharp"], "venue": "Proc. CVPR,", "citeRegEx": "6", "shortCiteRegEx": null, "year": 2008}, {"title": "Deep compression: Compressing deep neural networks with pruning, trained quantization and huffman coding", "author": ["S. Han", "H. Mao", "W.J. Dally"], "venue": "arXiv:1510.00149,", "citeRegEx": "7", "shortCiteRegEx": null, "year": 2015}, {"title": "Flutter shutter video camera for compressive sensing of videos", "author": ["J. Holloway", "A.C. Sankaranarayanan", "A. Veeraraghavan", "S. Tambe"], "venue": "Proc. ICCP,", "citeRegEx": "8", "shortCiteRegEx": null, "year": 2012}, {"title": "Learning joint demosaicing and denoising based on sequential energy minimization", "author": ["T. Kaltzer", "K. Hammernik", "P. Knobelreiter", "T. Pock"], "venue": "Proc. ICCP,", "citeRegEx": "9", "shortCiteRegEx": null, "year": 2016}, {"title": "Demosaicking using artificial neural networks", "author": ["O. Kapah", "H.Z. Hel-Or"], "venue": "Electronic Imaging,", "citeRegEx": "10", "shortCiteRegEx": null, "year": 2000}, {"title": "Joint demosaicing and denoising via learned nonparametric random fields", "author": ["D. Khashabi", "S. Nowozin", "J. Jancsary", "A.W. Fitzgibbon"], "venue": "IEEE Trans. Imag. Proc.,", "citeRegEx": "11", "shortCiteRegEx": null, "year": 2014}, {"title": "Imagenet classification with deep convolutional neural networks", "author": ["A. Krizhevsky", "I. Sutskever", "G.E. Hinton"], "venue": "NIPS,", "citeRegEx": "12", "shortCiteRegEx": null, "year": 2012}, {"title": "Efficient backprop", "author": ["Y. LeCun", "L. Bottou", "G. Orr", "K. Muller"], "venue": "Neural Networks: Tricks of the trade. Springer,", "citeRegEx": "13", "shortCiteRegEx": null, "year": 1998}, {"title": "Image and depth from a conventional camera with a coded aperture", "author": ["A. Levin", "R. Fergus", "F. Durand", "W.T. Freeman"], "venue": "ACM Transactions on Graphics (TOG),", "citeRegEx": "14", "shortCiteRegEx": null, "year": 2007}, {"title": "Image demosaicing: A systematic survey", "author": ["X. Li", "B. Gunturk", "L. Zhang"], "venue": "Proc. SPIE,", "citeRegEx": "15", "shortCiteRegEx": null, "year": 2008}, {"title": "Fully convolutional networks for semantic segmentation", "author": ["J. Long", "E. Shelhamer", "T. Darrell"], "venue": "Proc. CVPR,", "citeRegEx": "16", "shortCiteRegEx": null, "year": 2015}, {"title": "Non-local sparse models for image restoration", "author": ["J. Mairal", "F. Bach", "J. Ponce", "G. Sapiro", "A. Zisserman"], "venue": "Proc. ICCV,", "citeRegEx": "17", "shortCiteRegEx": null, "year": 2009}, {"title": "Coded exposure photography: motion deblurring using fluttered shutter", "author": ["R. Raskar", "A. Agrawal", "J. Tumblin"], "venue": "ACM Transactions on Graphics (TOG),", "citeRegEx": "18", "shortCiteRegEx": null, "year": 2006}, {"title": "A machine learning approach for non-blind image deconvolution", "author": ["C.J. Schuler", "H.C. Burger", "S. Harmeling", "B. Scholkopf"], "venue": "Proc. CVPR,", "citeRegEx": "19", "shortCiteRegEx": null, "year": 2013}, {"title": "Overfeat: Integrated recognition, localization and detection using convolutional networks", "author": ["P. Sermanet", "D. Eigen", "X. Zhang", "M. Mathieu", "R. Fergus", "Y. LeCun"], "venue": "arXiv:1312.6229,", "citeRegEx": "20", "shortCiteRegEx": null, "year": 2013}, {"title": "Re-processed version of the Gehler color constancy dataset", "author": ["L. Shi", "B. Funt"], "venue": null, "citeRegEx": "21", "shortCiteRegEx": "21", "year": 2010}, {"title": "Separable markov random field model and its applications in low level vision", "author": ["J. Sun", "M.F. Tappen"], "venue": "IEEE Trans. Imag. Proc.,", "citeRegEx": "22", "shortCiteRegEx": null, "year": 2013}, {"title": "Dappled photography: Mask enhanced cameras for heterodyned light fields and coded aperture refocusing", "author": ["A. Veeraraghavan", "R. Raskar", "A. Agrawal", "A. Mohan", "J. Tumblin"], "venue": null, "citeRegEx": "23", "shortCiteRegEx": "23", "year": 2007}, {"title": "Designing deep networks for surface normal estimation", "author": ["X. Wang", "D. Fouhey", "A. Gupta"], "venue": "Proc. CVPR,", "citeRegEx": "24", "shortCiteRegEx": null, "year": 2015}, {"title": "Sparcs: Recovering low-rank and sparse matrices from compressive measurements", "author": ["A.E. Waters", "A.C. Sankaranarayanan", "R. Baraniuk"], "venue": "NIPS,", "citeRegEx": "25", "shortCiteRegEx": null, "year": 2011}, {"title": "Deep convolutional neural network for image deconvolution", "author": ["L. Xu", "J.S. Ren", "C. Liu", "J. Jia"], "venue": "NIPS,", "citeRegEx": "26", "shortCiteRegEx": null, "year": 2014}, {"title": "Color demosaicking via directional linear minimum mean square-error estimation", "author": ["L. Zhang", "X. Wu"], "venue": "IEEE Trans. Imag. Proc.,", "citeRegEx": "27", "shortCiteRegEx": null, "year": 2005}, {"title": "From learning models of natural image patches to whole image restoration", "author": ["D. Zoran", "Y. Weiss"], "venue": "Proc. ICCV,", "citeRegEx": "28", "shortCiteRegEx": null, "year": 2011}], "referenceMentions": [{"referenceID": 2, "context": "Sophisticated techniques, such as those for denoising [3, 28], deblurring [19, 26], etc.", "startOffset": 54, "endOffset": 61}, {"referenceID": 27, "context": "Sophisticated techniques, such as those for denoising [3, 28], deblurring [19, 26], etc.", "startOffset": 54, "endOffset": 61}, {"referenceID": 18, "context": "Sophisticated techniques, such as those for denoising [3, 28], deblurring [19, 26], etc.", "startOffset": 74, "endOffset": 82}, {"referenceID": 25, "context": "Sophisticated techniques, such as those for denoising [3, 28], deblurring [19, 26], etc.", "startOffset": 74, "endOffset": 82}, {"referenceID": 17, "context": "For example, coded exposure imaging [18] allows better inversion of motion blur, coded apertures [14, 23] allow passive measurement of scene depth from a single shot, and compressive measurement strategies [1, 8, 25] combined with sparse reconstruction algorithms allow the recovery of visual measurements with higher spatial, spectral, and temporal resolutions.", "startOffset": 36, "endOffset": 40}, {"referenceID": 13, "context": "For example, coded exposure imaging [18] allows better inversion of motion blur, coded apertures [14, 23] allow passive measurement of scene depth from a single shot, and compressive measurement strategies [1, 8, 25] combined with sparse reconstruction algorithms allow the recovery of visual measurements with higher spatial, spectral, and temporal resolutions.", "startOffset": 97, "endOffset": 105}, {"referenceID": 22, "context": "For example, coded exposure imaging [18] allows better inversion of motion blur, coded apertures [14, 23] allow passive measurement of scene depth from a single shot, and compressive measurement strategies [1, 8, 25] combined with sparse reconstruction algorithms allow the recovery of visual measurements with higher spatial, spectral, and temporal resolutions.", "startOffset": 97, "endOffset": 105}, {"referenceID": 0, "context": "For example, coded exposure imaging [18] allows better inversion of motion blur, coded apertures [14, 23] allow passive measurement of scene depth from a single shot, and compressive measurement strategies [1, 8, 25] combined with sparse reconstruction algorithms allow the recovery of visual measurements with higher spatial, spectral, and temporal resolutions.", "startOffset": 206, "endOffset": 216}, {"referenceID": 7, "context": "For example, coded exposure imaging [18] allows better inversion of motion blur, coded apertures [14, 23] allow passive measurement of scene depth from a single shot, and compressive measurement strategies [1, 8, 25] combined with sparse reconstruction algorithms allow the recovery of visual measurements with higher spatial, spectral, and temporal resolutions.", "startOffset": 206, "endOffset": 216}, {"referenceID": 24, "context": "For example, coded exposure imaging [18] allows better inversion of motion blur, coded apertures [14, 23] allow passive measurement of scene depth from a single shot, and compressive measurement strategies [1, 8, 25] combined with sparse reconstruction algorithms allow the recovery of visual measurements with higher spatial, spectral, and temporal resolutions.", "startOffset": 206, "endOffset": 216}, {"referenceID": 3, "context": ", [4]), or based on the decision to use a specific image model or inference strategy\u2014e.", "startOffset": 2, "endOffset": 5}, {"referenceID": 0, "context": ", measurements corresponding to random [1], or dictionary-specific [5], projections are a common choice for sparsity-based reconstruction methods.", "startOffset": 39, "endOffset": 42}, {"referenceID": 4, "context": ", measurements corresponding to random [1], or dictionary-specific [5], projections are a common choice for sparsity-based reconstruction methods.", "startOffset": 67, "endOffset": 70}, {"referenceID": 12, "context": "We leverage the successful use of back-propagation and stochastic gradient descent (SGD) [13] in learning deep neural networks for various tasks [12, 16, 20, 24].", "startOffset": 89, "endOffset": 93}, {"referenceID": 11, "context": "We leverage the successful use of back-propagation and stochastic gradient descent (SGD) [13] in learning deep neural networks for various tasks [12, 16, 20, 24].", "startOffset": 145, "endOffset": 161}, {"referenceID": 15, "context": "We leverage the successful use of back-propagation and stochastic gradient descent (SGD) [13] in learning deep neural networks for various tasks [12, 16, 20, 24].", "startOffset": 145, "endOffset": 161}, {"referenceID": 19, "context": "We leverage the successful use of back-propagation and stochastic gradient descent (SGD) [13] in learning deep neural networks for various tasks [12, 16, 20, 24].", "startOffset": 145, "endOffset": 161}, {"referenceID": 23, "context": "We leverage the successful use of back-propagation and stochastic gradient descent (SGD) [13] in learning deep neural networks for various tasks [12, 16, 20, 24].", "startOffset": 145, "endOffset": 161}, {"referenceID": 1, "context": "We find that our approach significantly outperforms the traditional Bayer pattern [2] used in most color cameras.", "startOffset": 82, "endOffset": 85}, {"referenceID": 3, "context": "We also compare it to a recently introduced design [4] based on making sparse color measurements, that has superior noise performance and fewer aliasing artifacts.", "startOffset": 51, "endOffset": 54}, {"referenceID": 1, "context": "The CFA pattern determines which color channel is measured at which pixel, with the most commonly pattern used in RGB color cameras being the Bayer mosaic [2] introduced in 1976.", "startOffset": 155, "endOffset": 158}, {"referenceID": 14, "context": "These algorithms [15] typically rely on the assumption that different color channels are correlated and piecewise smooth, and reason about locations of edges and other high-frequency image content to avoid creating aliasing artifacts.", "startOffset": 17, "endOffset": 21}, {"referenceID": 3, "context": "[4] recently proposed the use of an alternative CFA pattern in which a majority of the pixels measure the total unfiltered visible light intensity.", "startOffset": 0, "endOffset": 3}, {"referenceID": 3, "context": "The reconstruction algorithm in [4] is significantly different from traditional demosaicking, and involves first recovering missing luminance values by hole-filling (which is computationally easier than up-sampling since there is more context around the missing intensities), and then propagating chromaticities from the color measurement sites to the remaining pixels using edges in the luminance image as a guide.", "startOffset": 32, "endOffset": 35}, {"referenceID": 3, "context": "That [4]\u2019s CFA pattern required a very different reconstruction algorithm illustrates the fact that both the sensor and inference method need to be modified together to achieve gains in performance.", "startOffset": 5, "endOffset": 8}, {"referenceID": 3, "context": "In [4]\u2019s case, this was achieved by applying an intuitive design principles\u2014of making high SNR non-aliased measurements of one color channel.", "startOffset": 3, "endOffset": 6}, {"referenceID": 9, "context": "While learning-based methods have been proposed for demosaicking [10, 17, 22] (as well as for joint demosaicking and denoising [9, 11]), these work with a pre-determined CFA pattern and training is used only to tune the reconstruction algorithm.", "startOffset": 65, "endOffset": 77}, {"referenceID": 16, "context": "While learning-based methods have been proposed for demosaicking [10, 17, 22] (as well as for joint demosaicking and denoising [9, 11]), these work with a pre-determined CFA pattern and training is used only to tune the reconstruction algorithm.", "startOffset": 65, "endOffset": 77}, {"referenceID": 21, "context": "While learning-based methods have been proposed for demosaicking [10, 17, 22] (as well as for joint demosaicking and denoising [9, 11]), these work with a pre-determined CFA pattern and training is used only to tune the reconstruction algorithm.", "startOffset": 65, "endOffset": 77}, {"referenceID": 8, "context": "While learning-based methods have been proposed for demosaicking [10, 17, 22] (as well as for joint demosaicking and denoising [9, 11]), these work with a pre-determined CFA pattern and training is used only to tune the reconstruction algorithm.", "startOffset": 127, "endOffset": 134}, {"referenceID": 10, "context": "While learning-based methods have been proposed for demosaicking [10, 17, 22] (as well as for joint demosaicking and denoising [9, 11]), these work with a pre-determined CFA pattern and training is used only to tune the reconstruction algorithm.", "startOffset": 127, "endOffset": 134}, {"referenceID": 6, "context": "\u2019s [7] approach to network compression.", "startOffset": 3, "endOffset": 6}, {"referenceID": 14, "context": "Traditional demosaicking algorithms [15] produce a full color image by interpolating the missing color values from neighboring measurement sites, and by exploiting cross-channel dependencies.", "startOffset": 36, "endOffset": 40}, {"referenceID": 3, "context": ", in [4]).", "startOffset": 5, "endOffset": 8}, {"referenceID": 3, "context": "We follow a similar approach to [4] for training and evaluating our method.", "startOffset": 32, "endOffset": 35}, {"referenceID": 3, "context": "Like [4], we use the Gehler-Shi database [6, 21] that consists of 568 color images of indoor and outdoor scenes, captured under various illuminants.", "startOffset": 5, "endOffset": 8}, {"referenceID": 5, "context": "Like [4], we use the Gehler-Shi database [6, 21] that consists of 568 color images of indoor and outdoor scenes, captured under various illuminants.", "startOffset": 41, "endOffset": 48}, {"referenceID": 20, "context": "Like [4], we use the Gehler-Shi database [6, 21] that consists of 568 color images of indoor and outdoor scenes, captured under various illuminants.", "startOffset": 41, "endOffset": 48}, {"referenceID": 3, "context": "Unlike [4] who only used 10 images for evaluation, we use the entire dataset\u2014using 56 images for testing, 461 images for training, and the remaining 51 images as a validation set to fix hyper-parameters.", "startOffset": 7, "endOffset": 10}, {"referenceID": 3, "context": "Like [4], we choose the fourth channel to be white or panchromatic, and construct it as the sum of the RGB measurements.", "startOffset": 5, "endOffset": 8}, {"referenceID": 3, "context": "As mentioned in [4], this corresponds to a conservative estimate of the light-efficiency of an unfiltered channel.", "startOffset": 16, "endOffset": 19}, {"referenceID": 3, "context": "We also train reconstruction networks at all noise levels in a similar way for the Bayer pattern, as well the pattern of [4] (with a color sampling rate of 4).", "startOffset": 121, "endOffset": 124}, {"referenceID": 3, "context": "We begin by comparing the performance of our learned reconstruction networks to traditional demosaicking algorithms for the standard Bayer pattern, and the pattern of [4].", "startOffset": 167, "endOffset": 170}, {"referenceID": 3, "context": "Bayer CFZ [4]", "startOffset": 10, "endOffset": 13}, {"referenceID": 26, "context": "We compare our learned networks to Zhang and Wu\u2019s method [27] for the Bayer pattern, and Chakrabarti et al.", "startOffset": 57, "endOffset": 61}, {"referenceID": 3, "context": "\u2019s method [4] for their own pattern.", "startOffset": 10, "endOffset": 13}, {"referenceID": 3, "context": "For the pattern of [4], we find that our network performs similar to their reconstruction method at the low noise level, and significantly better at the higher noise level.", "startOffset": 19, "endOffset": 22}, {"referenceID": 3, "context": "In comparison, [4] and [27]\u2019s reconstruction methods take 20s and 1 min.", "startOffset": 15, "endOffset": 18}, {"referenceID": 26, "context": "In comparison, [4] and [27]\u2019s reconstruction methods take 20s and 1 min.", "startOffset": 23, "endOffset": 27}, {"referenceID": 3, "context": "Essentially, the sensor layer begins to adopt one of the design principles of [4].", "startOffset": 78, "endOffset": 81}, {"referenceID": 3, "context": "However, it distributes the color measurement sites across the pattern, instead of concentrating them into separated blocks like [4].", "startOffset": 129, "endOffset": 132}, {"referenceID": 3, "context": "Finally, we evaluate the performance of neural network-based reconstruction from measurements with our learned pattern, to those with the Bayer pattern and the pattern of [4].", "startOffset": 171, "endOffset": 174}, {"referenceID": 3, "context": "The improvement in performance over [4]\u2019s pattern is less pronounced, although we do achieve consistently higher PSNR values for all quantiles at most noise levels.", "startOffset": 36, "endOffset": 39}, {"referenceID": 3, "context": "Figure 3 shows examples of color patches reconstructed from our learned sensor, and compare these to those from the Bayer pattern and [4].", "startOffset": 134, "endOffset": 137}, {"referenceID": 3, "context": "Both [4] and our pattern yield significantly better reconstructions.", "startOffset": 5, "endOffset": 8}, {"referenceID": 3, "context": "Indeed, most of our gains over the Bayer pattern come from choosing to make most measurements panchromatic, a design principle shared by [4].", "startOffset": 137, "endOffset": 140}, {"referenceID": 3, "context": "Moreover, we see that [4]\u2019s reconstructions tend to have a few more instances of \u201cchromaticity noise\u201d, in the form of contiguous regions with incorrect hues, which explain its slightly lower PSNR values in Table 2.", "startOffset": 22, "endOffset": 25}, {"referenceID": 1, "context": "Noise STD Percentile Bayer [2] CFZ [4] Learned", "startOffset": 27, "endOffset": 30}, {"referenceID": 3, "context": "Noise STD Percentile Bayer [2] CFZ [4] Learned", "startOffset": 35, "endOffset": 38}], "year": 2016, "abstractText": "Recent progress on many imaging and vision tasks has been driven by the use of deep feed-forward neural networks, which are trained by propagating gradients of a loss defined on the final output, back through the network up to the first layer that operates directly on the image. We propose back-propagating one step further\u2014to learn camera sensor designs jointly with networks that carry out inference on the images they capture. In this paper, we specifically consider the design and inference problems in a typical color camera\u2014where the sensor is able to measure only one color channel at each pixel location, and computational inference is required to reconstruct a full color image. We learn the camera sensor\u2019s color multiplexing pattern by encoding it as layer whose learnable weights determine which color channel, from among a fixed set, will be measured at each location. These weights are jointly trained with those of a reconstruction network that operates on the corresponding sensor measurements to produce a full color image. Our network achieves significant improvements in accuracy over the traditional Bayer pattern used in most color cameras. It automatically learns to employ a sparse color measurement approach similar to that of a recent design, and moreover, improves upon that design by learning an optimal layout for these measurements.", "creator": "LaTeX with hyperref package"}}}