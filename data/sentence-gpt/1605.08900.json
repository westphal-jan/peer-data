{"id": "1605.08900", "review": {"conference": "acl", "VERSION": "v1", "DATE_OF_SUBMISSION": "28-May-2016", "title": "Aspect Level Sentiment Classification with Deep Memory Network", "abstract": "We introduce a deep memory network for aspect level sentiment classification. Unlike feature-based SVM and sequential neural models such as LSTM, this approach explicitly captures the importance of each context word when inferring the sentiment polarity of an aspect. Such importance degree and text representation are calculated with multiple computational layers, each of which is a neural attention model over an external memory system and can be modeled in the context of the user. For example, a user would expect the user to see the user with a lower-level view or lower-level view, and then expect the user to see the user with a higher-level view.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "histories": [["v1", "Sat, 28 May 2016 14:47:49 GMT  (601kb,D)", "http://arxiv.org/abs/1605.08900v1", null], ["v2", "Sat, 24 Sep 2016 06:04:15 GMT  (311kb,D)", "http://arxiv.org/abs/1605.08900v2", "published in EMNLP 2016"]], "reviews": [], "SUBJECTS": "cs.CL", "authors": ["duyu tang", "bing qin", "ting liu"], "accepted": true, "id": "1605.08900"}, "pdf": {"name": "1605.08900.pdf", "metadata": {"source": "CRF", "title": "Aspect Level Sentiment Classification with Deep Memory Network", "authors": ["Duyu Tang", "Bing Qin", "Ting Liu"], "emails": ["tliu}@ir.hit.edu.cn"], "sections": [{"heading": "1 Introduction", "text": "Aspect level sentiment classification is a fundamental task in the field of sentiment analysis (Pang and Lee, 2008; Liu, 2012; Pontiki et al., 2014). Given a sentence and an aspect occurring in the sentence, this task aims at inferring the sentiment polarity (e.g. positive, negative, neutral) of the aspect. For example, in sentence \u201cgreat food but the service was dreadful!\u201d, the sentiment polarity of aspect \u201cfood\u201d is positive while the polarity of aspect \u201cservice\u201d is negative. Researchers typically use machine learning algorithms and build sentiment clas-\nsifier in a supervised manner. Representative approaches in literature include feature based Support Vector Machine (Kiritchenko et al., 2014; Wagner et al., 2014) and neural network models (Dong et al., 2014; Lakkaraju et al., 2014; Vo and Zhang, 2015; Nguyen and Shirai, 2015; Tang et al., 2015a). Neural models are of growing interest for their capacity to learn text representation from data without careful engineering of features, and to capture semantic relations between aspect and context words in a more scalable way than feature based SVM.\nDespite these advantages, conventional neural models like long short-term memory (LSTM) (Tang et al., 2015a) capture context information in an implicit way, and are incapable of explicitly exhibiting important context clues of an aspect. We believe that only some subset of context words are needed to infer the sentiment towards an aspect. For example, in sentence \u201cgreat food but the service was dreadful!\u201d, \u201cdreadful\u201d is an important clue for the aspect \u201cservice\u201d but \u201cgreat\u201d is not needed. Standard LSTM works in a sequential way and manipulates each context word with the same operation, so that it cannot explicitly reveal the importance of each context word. A desirable solution should be capable of explicitly capturing the importance of context words and using that information to build up features for the sentence after given an aspect word. Furthermore, a human asked to do this task will selectively focus on parts of the contexts, and acquire information where it is needed to build up an internal representation towards an aspect in his/her mind.\nIn pursuit of this goal, we develop deep memory network for aspect level sentiment classification,\nar X\niv :1\n60 5.\n08 90\n0v 1\n[ cs\n.C L\n] 2\n8 M\nay 2\nwhich is inspired by the recent success of computational models with attention mechanism and explicit memory (Graves et al., 2014; Bahdanau et al., 2015; Sukhbaatar et al., 2015). Our approach is data-driven, computationally efficient and does not rely on syntactic parser or sentiment lexicon. The approach consists of multiple computational layers with shared parameters. Each layer is a content- and location- based attention model, which first learns the importance/weight of each context word and then utilizes this information to calculate continuous text representation. The text representation in the last layer is regarded as the feature for sentiment classification. As every component is differentiable, the entire model could be efficiently trained end-toend with gradient descent, where the loss function is the cross-entropy error of sentiment classification.\nWe apply the proposed approach to laptop and restaurant datasets from SemEval 2014 (Pontiki et al., 2014). Experimental results show that our approach performs comparable to a top system using feature-based SVM (Kiritchenko et al., 2014). On both datasets, our approach outperforms both LSTM and attention-based LSTM models (Tang et al., 2015a) in terms of classification accuracy and running speed. Lastly, we show that using multiple computational layers over external memory could achieve improved performance."}, {"heading": "2 Background: Memory Network", "text": "Our approach is inspired by the recent success of memory network in question answering (Weston et al., 2014; Sukhbaatar et al., 2015). We describe the background on memory network in this part.\nMemory network is a general machine learning framework introduced by Weston et al. (2014). Its central idea is inference with a long-term memory component, which could be read, written to, and jointly learned with the goal of using it for prediction. Formally, a memory network consists of a memory m and four components I , G, O and R, where m is an array of objects such as an array of vectors. Among these four components, I converts input to internal feature representation, G updates old memories with new input, O generates an output representation given a new input and the current memory state, R outputs a response based on the\noutput representation. Let us take question answering as an example to explain the work flow of memory network. Given a list of sentences and a question, the task aims to find evidences from these sentences and generate an answer, e.g. a word. During inference, I component reads one sentence si at a time and encodes it into a vector representation. Then G component updates a piece of memory mi based on current sentence representation. After all sentences are processed, we get a memory matrix m which stores the semantics of these sentences, each row representing a sentence. Given a question q, memory network encodes it into vector representation eq, and then O component uses eq to select question related evidences from memory m and generates an output vector o. Finally, R component takes o as the input and outputs the final response. It is worth noting that O component could consist of one or more computational layers (hops). The intuition of utilizing multiple hops is that more abstractive evidences could be found based on previously extracted evidences. Sukhbaatar et al. (2015) demonstrate that multiple hops could uncover more abstractive evidences than single hop, and could yield improved results on question answering and language modeling."}, {"heading": "3 Deep Memory Network for Aspect Level Sentiment Classification", "text": "In this section, we describe the deep memory network approach for aspect level sentiment classification. We first give the task definition. Afterwards, we describe an overview of the approach before presenting the content- and location- based attention models in each computational layer. Lastly, we describe the use of this approach for aspect level sentiment classification."}, {"heading": "3.1 Task Definition and Notation", "text": "Given a sentence s = {w1, w2, ..., wi, ...wn} consisting of n words and an aspect word wi 1 occurring in sentence s, aspect level sentiment classification aims at determining the sentiment polarity of\n1In practice, an aspect might be a multi word expression such as \u201cbattery life\u201d. For simplicity we still consider aspect as a single word in this definition.\nsentence s towards the aspect wi. For example, the sentiment polarity of sentence \u201cgreat food but the service was dreadful!\u201d towards aspect \u201cfood\u201d is positive, while the polarity towards aspect \u201cservice\u201d is negative. When dealing with a text corpus, we map each word into a low dimensional, continuous and real-valued vector, also known as word embedding (Mikolov et al., 2013; Pennington et al., 2014). All the word vectors are stacked in a word embedding matrix L \u2208 Rd\u00d7|V |, where d is the dimension of word vector and |V | is vocabulary size. The word embedding of wi is notated as ei \u2208 Rd\u00d71, which is a column in the embedding matrix L."}, {"heading": "3.2 An Overview of the Approach", "text": "We present an overview of the deep memory network for aspect level sentiment classification.\nGiven a sentence s = {w1, w2, ..., wi, ...wn} and the aspect word wi, we map each word into its embedding vector. These word vectors are separated into two parts, aspect representation and context representation. If aspect is a single word like \u201cfood\u201d or \u201cservice\u201d, aspect representation is the embedding of aspect word. For the case where aspect is multi word expression like \u201cbattery life\u201d, aspect representation is an average of its constituting word vectors (Sun et al., 2015). To simplify the interpretation, we consider aspect as a single word wi. Context word vectors {e1, e2 ... ei\u22121, ei+1 ... en} are stacked and regarded as the external memory m \u2208 Rd\u00d7(n\u22121), where n is the sentence length.\nAn illustration of our approach is given in Figure 1, which is inspired by the use of memory network in question answering (Sukhbaatar et al., 2015). Our approach consists of multiple computational layers (hops), each of which contains an attention layer and a linear layer. In the first computational layer (hop 1), we regard aspect vector as the input to adaptively select important evidences from memory m through attention layer. The output of attention layer and the linear transformation of aspect vector2 are summed and the result is considered as the input of next layer (hop 2). In a similar way, we stack multiple hops and run these steps multiple times, so that more abstractive evidences could be selected from the external\n2In preliminary experiments, we tried directly using aspect vector without a linear transformation, and found that adding a linear layer works slightly better.\nmemory m. The output vector in last hop is considered as the representation of sentence with regard to the aspect, and is further used as the feature for aspect level sentiment classification.\nIt is helpful to note that the parameters of attention and linear layers are shared in different hops. Therefore, the model with one layer and the model with nine layers have the same number of parameters."}, {"heading": "3.3 Content Attention", "text": "We describe our attention model in this part. The basic idea of attention mechanism is that it assigns a weight/importance to each lower position when computing an upper level representation (Bahdanau et al., 2015). In this work, we use attention model to compute the representation of a sentence with regard to an aspect. The intuition is that context words do not contribute equally to the semantic meaning of a sentence. Furthermore, the importance of a word should be different if we focus on different aspect. Let us again take the example of \u201cgreat food but the service was dreadful!\u201d. The context word \u201cgreat\u201d is more important than \u201cdreadful\u201d for aspect \u201cfood\u201d. On the contrary, \u201cdreadful\u201d is more important than \u201cgreat\u201d for aspect \u201cservice\u201d.\nTaking an external memory m \u2208 Rd\u00d7k and an aspect vector vaspect \u2208 Rd\u00d71 as input, the attention model outputs a continuous vector vec \u2208 Rd\u00d71. The output vector is computed as a weighted sum of each piece of memory in m, namely vec = \u2211k i=1 \u03b1imi,\nwhere k is the memory size, \u03b1i \u2208 [0, 1] is the weight of mi and \u2211 i \u03b1i = 1. We implement a neural network based attention model. For each piece of memory mi, we use a feed forward neural network to compute its semantic relatedness with the aspect. The scoring function is calculated as follows, where Watt \u2208 R1\u00d72d and batt \u2208 R1\u00d71.\ngi = tanh(Watt[mi; vaspect] + batt) (1)\nAfter obtaining {g1, g2, ... gk}, we feed them to a softmax function to calculate the final importance scores {\u03b11, \u03b12, ... \u03b1k}.\n\u03b1i = exp(gi)\u2211k j=1 exp(gj)\n(2)\nWe believe that such an attention model has two advantages. One advantage is that this model could adaptively assign an importance score to each piece of memory mi according to its semantic relatedness with the aspect. Another advantage is that this attention model is differentiable, so that it could be easily trained together with other components in an end-to-end fashion."}, {"heading": "3.4 Location Attention", "text": "We have described our neural attention framework and a content-based model in previous subsection. However, the model mentioned above ignores the location information between context word and aspect. Such location information is helpful for an attention model because intuitively a context word closer to the aspect should be more important than a farther one. In this work, we define the location of a context word as its absolute distance with the aspect in the original sentence sequence3. On this basis, we study four strategies to encode the location information in the attention model. The details are described below. \u2022 Model 1. Following Sukhbaatar et al. (2015), we calculate the memory vector mi with mi = ei vi, where means element-wise multiplication and vi \u2208 Rd\u00d71 is a location vector for word wi. Every element in vi is calculated as follows,\nvki = (1\u2212 li/n)\u2212 (k/d)(1\u2212 2\u00d7 li/n) (3) 3The location of a context word could also be measured by its distance to the aspect along a syntactic path. We leave this as a future work as we prefer to developing a purely data-driven approach without using external parsing results.\nwhere n is sentence length, k is the hop number and li is the location of wi. \u2022 Model 2. This is a simplified version of Model 1, using the same location vector vi for wi in different hops. Location vector vi is calculated as follows.\nvi = 1\u2212 li/n (4)\n\u2022 Model 3. We regard location vector vi as a parameter and compute a piece of memory with vector addition, namely mi = ei + vi. All the position vectors are stacked in a position embedding matrix, which is jointly learned with gradient descent. \u2022 Model 4. Location vectors are also regarded as parameters. Different from Model 3, location representations are regarded as neural gates to control how many percent of word semantics is written into the memory. We feed location vector vi to a sigmoid function \u03c3, and calculatemi with element-wise multiplication: mi = ei \u03c3(vi)."}, {"heading": "3.5 The Need for Multiple Hops", "text": "It is widely accepted that computational models that are composed of multiple processing layers have the ability to learn representations of data with multiple levels of abstraction (LeCun et al., 2015). In this work, the attention layer in one layer is essentially a weighted average compositional function, which is not powerful enough to handle the sophisticated computationality like negation, intensification and contrary in language. Multiple computational layers allow the deep memory network to learn representations of text with multiple levels of abstraction. Each layer/hop retrieves important context words, and transforms the representation at previous level into a representation at a higher, slightly more abstract level. With the composition of enough such transformations, very complex functions of sentence representation towards an aspect can be learned."}, {"heading": "3.6 Aspect Level Sentiment Classification", "text": "We regard the output vector in last hop as the feature, and feed it to a softmax layer for aspect level sentiment classification. The model is trained in a supervised manner by minimizing the cross entropy error of sentiment classification, whose loss function is given below, where T means all training instances, C is the collection of sentiment categories, (s, a) means a sentence-aspect pair.\nloss = \u2212 \u2211\n(s,a)\u2208T \u2211 c\u2208C P gc (s, a) \u00b7 log(Pc(s, a)) (5)\nPc(s, a) is the probability of predicting (s, a) as category c produced by our system. P gc (s, a) is 1 or 0, indicating whether the correct answer is c. We use back propagation to calculate the gradients of all the parameters, and update them with stochastic gradient descent. We clamp the word embeddings with 300-dimensional Glove vectors (Pennington et al., 2014), which is trained from web data and the vocabulary size is 1.9M4. We randomize other parameters with uniform distribution U(\u22120.01, 0.01), and set the learning rate as 0.01."}, {"heading": "4 Experiment", "text": "We describe experimental settings and report empirical results in this section."}, {"heading": "4.1 Experimental Setting", "text": "We conduct experiments on two datasets from SemEval 2014 (Pontiki et al., 2014), one from laptop domain and another from restaurant domain. Statistics of the datasets are given in Table 1. Evaluation metric is classification accuracy."}, {"heading": "4.2 Comparison to Other Methods", "text": "We compare with the following baseline methods on both datasets.\n(1) Majority is a basic baseline method, which assigns the majority sentiment label in training set to each instance in the test set.\n(2) Feature-based SVM performs state-of-the-art on aspect level sentiment classification. We compare with a top system using ngram features, parse features and lexicon features (Kiritchenko et al., 2014).\n4Available at: http://nlp.stanford.edu/projects/glove/.\n(3) We compare with three LSTM models (Tang et al., 2015a)). In LSTM, a LSTM based recurrent model is applied from the start to the end of a sentence, and the last hidden vector is used as the sentence representation. TDLSTM extends LSTM by taking into account of the aspect, and uses two LSTM networks, a forward one and a backward one, towards the aspect. TDLSTM+ATT extends TDLSTM by incorporating an attention mechanism (Bahdanau et al., 2015) over the hidden vectors. We use the same Glove word vectors for fair comparison.\n(4) We also implement ContextAVG, a simplistic version of our approach. Context word vectors are averaged and the result is added to the aspect vector. The output is fed to a softmax function.\nExperimental results are given in Table 2. Our approach using only content attention is abbreviated to MemNet (k), where k is the number of hops. We can find that feature-based SVM is an extremely strong performer and substantially outperforms other baseline methods, which demonstrates the importance of a powerful feature representation for aspect level sentiment classification. Among three recurrent models, TDLSTM performs better than LSTM, which indicates that taking into account of the aspect information is helpful. This is reasonable as the sentiment polarity of a sentence towards different aspects (e.g. \u201cfood\u201d and \u201cservice\u201d) might be different. It is somewhat disappointing that in-\ncorporating attention model over TDLSTM does not bring any improvement. We consider that each hidden vector of TDLSTM encodes the semantics of word sequence until the current position. Therefore, the model of TDLSTM+ATT actually selects such mixed semantics of word sequence, which is weird and not an intuitive way to selectively focus on parts of contexts. Different from TDLSTM+ATT, the proposed memory network approach removes the recurrent calculator over word sequence and directly apply attention mechanism on context word representations.\nWe can also find that the performance of ContextAVG is very poor, which means that assigning the same weight/importance to all the context words is not an effective way. Among all our models from single hop to nine hops, we can observe that using more computational layers could generally lead to better performance, especially when the number of hops is less than six. The best performances are achieved when the model contains seven and nine hops, respectively. On both datasets, the proposed approach could obtain comparable accuracy compared to the state-of-art feature-based SVM system."}, {"heading": "4.3 Runtime Analysis", "text": "We study the runtime of recurrent neural models and the proposed deep memory network approach with different hops. We implement all these approaches based on the same neural network infrastructure, use the same 300-dimensional Glove word vectors, and run them on the same CPU server.\nThe training time of each iteration on the restau-\nrant dataset is given in Table 3. We can find that LSTM based recurrent models are indeed computationally expensive, which is caused by the complex operations in each LSTM unit along the word sequence. Instead, the memory network approach is simpler and evidently faster because it does not need recurrent calculators of sequence length. Our approach with nine hops is almost 15 times faster than the basic LSTM model."}, {"heading": "4.4 Effects of Location Attention", "text": "As described in Section 3.4, we explore four strategies to integrate location information into the attention model. We incorporate each of them separately into the basic content-based attention model. It is helpful to restate that the difference between four location-based attention models lies in the usage of location vectors for context words. In Model 1 and Model 2, the values of location vectors are fixed and calculated in a heuristic way. In Model 3 and Model 4, location vectors are also regarded as the parameters and jointly learned along with other parameters in the deep memory network.\n1 2 3 4 5 6 7 8 9 0.72\n0.73\n0.74\n0.75\n0.76\n0.77\n0.78\n0.79\n0.8\n0.81\nNumber of hops\nA cc\nur ac\ny\nContent + Location 1 + Location 2 + Location 3 + Location 4\nFigure 2: Classification accuracy of different attention models on the restaurant dataset.\nFigure 2 shows the classification accuracy of each attention model on the restaurant dataset. We can find that using multiple computational layers could consistently improve the classification accuracy in all these models. All these models perform comparably when the number of hops is larger than five. Among these four location-based models, we prefer Model 2 as it is intuitive and has less computation cost without loss of accuracy. We also find that Model 4 is very sensitive to the choice of neural\ngate. Its classification accuracy decreases by almost 5 percentage when the sigmoid operation over location vector is removed."}, {"heading": "4.5 Visualize Attention Models", "text": "We visualize the attention weight of each context word to get a better understanding of the deep memory network approach. The results of context-based model and location-based model (Model 2) are given in Table 4 and Table 5, respectively.\nFrom Table 4(a), we can find that in the first hop the context words \u201cgreat\u201d, \u201cbut\u201d and \u201cdreadful\u201d contribute equally to the aspect \u201cservice\u201d. While after the second hop, the weight of \u201cdreadful\u201d increases and finally the model correctly predict the polarity towards \u201cservice\u201d as negative. This case shows the effects of multiple hops. However, in Table 4(b), the content-based model also gives a larger weight to \u201cdreadful\u201d when the target we focus on is \u201cfood\u201d. As a result, the model incorrectly predicts the polarity towards \u201cfood\u201d as negative. This phenomenon might be caused by the neglect of location information. From Table 5(b), we can find that the weight of \u201cgreat\u201d is increased when the location of con-\ntext word is considered. Accordingly, Model 2 predicts the correct sentiment label towards \u201cfood\u201d. We believe that location-enhanced model captures both content and location information. For instance, in Table 5(a) the closest context words of the aspect \u201cservice\u201d are \u201cthe\u201d and \u201cwas\u201d, while \u201cdreadful\u201d has the largest weight."}, {"heading": "4.6 Error Analysis", "text": "We carry out an error analysis of our location enhanced model (Model 2) on the restaurant dataset, and find that most of the errors could be summarized as follows. The first factor is noncompositional sentiment expression. This model regards single context word as the basic computational unit and cannot handle this situation. An example is \u201cdessert was also to die for!\u201d, where the aspect is underlined. The sentiment expression is \u201cdie for\u201d, whose meaning could not be composed from its constituents \u201cdie\u201d and \u201cfor\u201d. The second factor is complex aspect expression consisting of many words, such as \u201cask for the round corner table next to the large window.\u201d This model represents an aspect expression by averag-\ning its constituting word vectors, which could not well handle this situation. The third factor is sentimental relation between context words such as negation, comparison and condition. An example is \u201cbut dinner here is never disappointing, even if the prices are a bit over the top\u201d. We believe that this is caused by the weakness of weighted average compositional function in each hop. There are also cases when comparative opinions are expressed such as \u201ci \u2019ve had better japanese food at a mall food court\u201d."}, {"heading": "5 Related Work", "text": "This work is connected to three research areas in natural language processing. We briefly describe related studies in each area."}, {"heading": "5.1 Aspect Level Sentiment Classification", "text": "Aspect level sentiment classification is a finegrained classification task in sentiment analysis, which aims at identifying the sentiment polarity of a sentence expressed towards an aspect (Pontiki et al., 2014). Most existing works use machine learning algorithms, and build sentiment classifier from sentences with manually annotated polarity labels. One of the most successful approaches in literature is feature based SVM. Experts could design effective feature templates and make use of external resources like parser and sentiment lexicons (Kiritchenko et al., 2014; Wagner et al., 2014). In recent years, neural network approaches (Dong et al., 2014; Lakkaraju et al., 2014; Nguyen and Shirai, 2015; Tang et al., 2015a) are of growing attention for their capacity to learn powerful text representation from data. However, these neural models (e.g. LSTM) are computationally expensive, and could not explicitly reveal the importance of context evidences with regard to an aspect. Instead, we develop simple and fast approach that explicitly encodes the context importance towards a given aspect. It is worth noting that the task we focus on differs from finegrained opinion extraction, which assigns each word a tag (e.g. B,I,O) to indicate whether it is an aspect/sentiment word (Choi and Cardie, 2010; Irsoy and Cardie, 2014; Liu et al., 2015). The aspect word in this work is given as a part of the input."}, {"heading": "5.2 Compositionality in Vector Space", "text": "In NLP community, compositionality means that the meaning of a composed expression (e.g. a phrase/sentence/document) comes from the meanings of its constituents (Frege, 1892). Mitchell and Lapata (2010) exploits a variety of addition and multiplication functions to calculate phrase vector. Yessenalina and Cardie (2011) use matrix multiplication as compositional function to compute vectors for longer phrases. To compute sentence representation, researchers develop denoising autoencoder (Glorot et al., 2011), convolutional neural network (Kalchbrenner et al., 2014; Kim, 2014; Yin and Schu\u0308tze, 2015), sequence based recurrent neural models (Sutskever et al., 2014; Kiros et al., 2015; Li et al., 2015b) and tree-structured neural networks (Socher et al., 2013; Tai et al., 2015; Zhu et al., 2015). Several recent studies calculate continuous representation for documents with neural networks (Le and Mikolov, 2014; Bhatia et al., 2015; Li et al., 2015a; Tang et al., 2015b; Yang et al., 2016)."}, {"heading": "5.3 Attention and Memory Networks", "text": "Recently, there is a resurgence in computational models with attention mechanism and explicit memory to learn representations of texts (Graves et al., 2014; Weston et al., 2014; Sukhbaatar et al., 2015; Bahdanau et al., 2015). In this line of research, memory is encoded as a continuous representation and operations on memory (e.g. reading and writing) are typically implemented with neural networks. Attention mechanism could be viewed as a compositional function, where lower level representations are regarded as the memory, and the function is to choose \u201cwhere to look\u201d by assigning a weight/importance to each lower position when computing an upper level representation. Such attention based approaches have achieved promising performances on a variety of NLP tasks (Luong et al., 2015; Kumar et al., 2015; Rush et al., 2015)."}, {"heading": "6 Conclusion", "text": "We develop deep memory networks that capture importances of context words for aspect level sentiment classification. Compared with recurrent neural models like LSTM, this approach is simpler and faster. Empirical results on two datasets ver-\nify that the proposed approach performs comparable to state-of-the-art feature based SVM system, and substantively better than LSTM architectures. We implement different attention strategies and show that leveraging both content and location information could learn better context weight and text representation. We also demonstrate that using multiple computational layers in memory network could obtain improved performance. Our potential future plans are incorporating sentence structure like parsing results into the deep memory network."}, {"heading": "Acknowledgments", "text": "We would especially want to thank Xiaodan Zhu for running their system on our setup. We greatly thank Yaming Sun for tremendously helpful discussions."}], "references": [{"title": "Neural machine translation by jointly learning to align and translate", "author": ["Kyunghyun Cho", "Yoshua Bengio"], "venue": "International Conference on Learning Representations (ICLR)", "citeRegEx": "Bahdanau et al\\.,? \\Q2015\\E", "shortCiteRegEx": "Bahdanau et al\\.", "year": 2015}, {"title": "Better document-level sentiment analysis from rst discourse parsing", "author": ["Yangfeng Ji", "Jacob Eisenstein"], "venue": "In Proceedings of the 2015 Conference on Empirical Methods in Natural Language Processing,", "citeRegEx": "Bhatia et al\\.,? \\Q2015\\E", "shortCiteRegEx": "Bhatia et al\\.", "year": 2015}, {"title": "Hierarchical sequential learning for extracting opinions and their attributes", "author": ["Choi", "Cardie2010] Yejin Choi", "Claire Cardie"], "venue": "In Proceedings of the ACL 2010 Conference Short Papers,", "citeRegEx": "Choi et al\\.,? \\Q2010\\E", "shortCiteRegEx": "Choi et al\\.", "year": 2010}, {"title": "Adaptive recursive neural network for target-dependent twitter sentiment classification", "author": ["Dong et al.2014] Li Dong", "Furu Wei", "Chuanqi Tan", "Duyu Tang", "Ming Zhou", "Ke Xu"], "venue": "In Proceedings of the 52nd Annual Meeting of the Association for Computational Linguis-", "citeRegEx": "Dong et al\\.,? \\Q2014\\E", "shortCiteRegEx": "Dong et al\\.", "year": 2014}, {"title": "Domain adaptation for largescale sentiment classification: A deep learning approach", "author": ["Glorot et al.2011] Xavier Glorot", "Antoine Bordes", "Yoshua Bengio"], "venue": "In Proceedings of the 28th International Conference on Machine Learning", "citeRegEx": "Glorot et al\\.,? \\Q2011\\E", "shortCiteRegEx": "Glorot et al\\.", "year": 2011}, {"title": "Opinion mining with deep recurrent neural networks", "author": ["Irsoy", "Cardie2014] Ozan Irsoy", "Claire Cardie"], "venue": "In Proceedings of the 2014 Conference on Empirical Methods in Natural Language Processing,", "citeRegEx": "Irsoy et al\\.,? \\Q2014\\E", "shortCiteRegEx": "Irsoy et al\\.", "year": 2014}, {"title": "A convolutional neural network for modelling sentences", "author": ["Edward Grefenstette", "Phil Blunsom"], "venue": "In Proceedings of the 52nd Annual Meeting of the Association", "citeRegEx": "Kalchbrenner et al\\.,? \\Q2014\\E", "shortCiteRegEx": "Kalchbrenner et al\\.", "year": 2014}, {"title": "Convolutional neural networks for sentence classification", "author": ["Yoon Kim"], "venue": "In Proceedings of the 2014 Conference on Empirical Methods in Natural Language Processing,", "citeRegEx": "Kim.,? \\Q2014\\E", "shortCiteRegEx": "Kim.", "year": 2014}, {"title": "Nrccanada-2014: Detecting aspects and sentiment in customer reviews", "author": ["Xiaodan Zhu", "Colin Cherry", "Saif Mohammad"], "venue": "In Proceedings of the 8th International Workshop on Semantic Evaluation (SemEval", "citeRegEx": "Kiritchenko et al\\.,? \\Q2014\\E", "shortCiteRegEx": "Kiritchenko et al\\.", "year": 2014}, {"title": "Ask me anything: Dynamic memory networks for natural language processing", "author": ["Kumar et al.2015] Ankit Kumar", "Ozan Irsoy", "Jonathan Su", "James Bradbury", "Robert English", "Brian Pierce", "Peter Ondruska", "Ishaan Gulrajani", "Richard Socher"], "venue": null, "citeRegEx": "Kumar et al\\.,? \\Q2015\\E", "shortCiteRegEx": "Kumar et al\\.", "year": 2015}, {"title": "Aspect specific sentiment analysis using hierarchical deep learning", "author": ["Richard Socher", "Chris Manning"], "venue": "In NIPS Workshop on Deep Learning and Representation Learning", "citeRegEx": "Lakkaraju et al\\.,? \\Q2014\\E", "shortCiteRegEx": "Lakkaraju et al\\.", "year": 2014}, {"title": "Distributed representations of sentences and documents", "author": ["Le", "Mikolov2014] Quoc V. Le", "Tomas Mikolov"], "venue": "In Proceedings of The 31nd International Conference on Machine Learning,", "citeRegEx": "Le et al\\.,? \\Q2014\\E", "shortCiteRegEx": "Le et al\\.", "year": 2014}, {"title": "2015a. A hierarchical neural autoencoder for paragraphs and documents", "author": ["Li et al.2015a] Jiwei Li", "Thang Luong", "Dan Jurafsky"], "venue": "In Proceedings of the 53rd Annual Meeting of the Association for Computational Linguistics,", "citeRegEx": "Li et al\\.,? \\Q2015\\E", "shortCiteRegEx": "Li et al\\.", "year": 2015}, {"title": "2015b. When are tree structures necessary for deep learning of representations", "author": ["Li et al.2015b] Jiwei Li", "Thang Luong", "Dan Jurafsky", "Eduard Hovy"], "venue": "In Proceedings of the 2015 Conference on Empirical Methods in Natural Language Processing,", "citeRegEx": "Li et al\\.,? \\Q2015\\E", "shortCiteRegEx": "Li et al\\.", "year": 2015}, {"title": "Fine-grained opinion mining with recurrent neural networks and word embeddings", "author": ["Liu et al.2015] Pengfei Liu", "Shafiq Joty", "Helen Meng"], "venue": "In Proceedings of the 2015 Conference on Empirical Methods in Natural Language Processing,", "citeRegEx": "Liu et al\\.,? \\Q2015\\E", "shortCiteRegEx": "Liu et al\\.", "year": 2015}, {"title": "Sentiment analysis and opinion mining", "author": ["Bing Liu"], "venue": "Synthesis Lectures on Human Language Technologies,", "citeRegEx": "Liu.,? \\Q2012\\E", "shortCiteRegEx": "Liu.", "year": 2012}, {"title": "Effective approaches to attention-based neural machine translation", "author": ["Luong et al.2015] Thang Luong", "Hieu Pham", "Christopher D. Manning"], "venue": "In Proceedings of the 2015 Conference on Empirical Methods in Natural Language Processing,", "citeRegEx": "Luong et al\\.,? \\Q2015\\E", "shortCiteRegEx": "Luong et al\\.", "year": 2015}, {"title": "Distributed representations of words and phrases and their compositionality", "author": ["Ilya Sutskever", "Kai Chen", "Greg S Corrado", "Jeff Dean"], "venue": "In Advances in Neural Information Processing Systems,", "citeRegEx": "Mikolov et al\\.,? \\Q2013\\E", "shortCiteRegEx": "Mikolov et al\\.", "year": 2013}, {"title": "Composition in distributional models of semantics", "author": ["Mitchell", "Lapata2010] Jeff Mitchell", "Mirella Lapata"], "venue": "Cognitive Science,", "citeRegEx": "Mitchell et al\\.,? \\Q2010\\E", "shortCiteRegEx": "Mitchell et al\\.", "year": 2010}, {"title": "Phrasernn: Phrase recursive neural network for aspect-based sentiment analysis", "author": ["Nguyen", "Shirai2015] Thien Hai Nguyen", "Kiyoaki Shirai"], "venue": "In Proceedings of the 2015 Conference on Empirical Methods in Natural Language Processing,", "citeRegEx": "Nguyen et al\\.,? \\Q2015\\E", "shortCiteRegEx": "Nguyen et al\\.", "year": 2015}, {"title": "Opinion mining and sentiment analysis", "author": ["Pang", "Lee2008] Bo Pang", "Lillian Lee"], "venue": "Foundations and trends in information retrieval,", "citeRegEx": "Pang et al\\.,? \\Q2008\\E", "shortCiteRegEx": "Pang et al\\.", "year": 2008}, {"title": "Glove: Global vectors for word representation", "author": ["Richard Socher", "Christopher D Manning"], "venue": "In Proceedings of the 2014 Conference on Empirical Methods in Natural Language Processing,", "citeRegEx": "Pennington et al\\.,? \\Q2014\\E", "shortCiteRegEx": "Pennington et al\\.", "year": 2014}, {"title": "Semeval-2014 task 4: Aspect based sentiment analysis", "author": ["Dimitris Galanis", "John Pavlopoulos", "Harris Papageorgiou", "Ion Androutsopoulos", "Suresh Manandhar"], "venue": "In Proceedings of the 8th International Workshop on Semantic Evalua-", "citeRegEx": "Pontiki et al\\.,? \\Q2014\\E", "shortCiteRegEx": "Pontiki et al\\.", "year": 2014}, {"title": "A neural attention model for abstractive sentence summarization", "author": ["Sumit Chopra", "Jason Weston"], "venue": "In Proceedings of the 2015 Conference on Empirical Methods in Natural Language Processing,", "citeRegEx": "Rush et al\\.,? \\Q2015\\E", "shortCiteRegEx": "Rush et al\\.", "year": 2015}, {"title": "Recursive deep models for semantic compositionality over a sentiment treebank", "author": ["Alex Perelygin", "Jean Wu", "Jason Chuang", "Christopher D. Manning", "Andrew Ng", "Christopher Potts"], "venue": null, "citeRegEx": "Socher et al\\.,? \\Q2013\\E", "shortCiteRegEx": "Socher et al\\.", "year": 2013}, {"title": "Endto-end memory networks", "author": ["Arthur Szlam", "Jason Weston", "Rob Fergus"], "venue": "In Advances in Neural Information Processing Systems,", "citeRegEx": "Sukhbaatar et al\\.,? \\Q2015\\E", "shortCiteRegEx": "Sukhbaatar et al\\.", "year": 2015}, {"title": "Modeling mention, context and entity with neural networks for entity disambiguation", "author": ["Sun et al.2015] Yaming Sun", "Lei Lin", "Duyu Tang", "Nan Yang", "Zhenzhou Ji", "Xiaolong Wang"], "venue": "Proceedings of the TwentyFourth International Joint Conference on Artificial In-", "citeRegEx": "Sun et al\\.,? \\Q2015\\E", "shortCiteRegEx": "Sun et al\\.", "year": 2015}, {"title": "Sequence to sequence learning with neural networks. In Advances in neural information processing systems, pages 3104\u20133112", "author": ["Oriol Vinyals", "Quoc V Le"], "venue": null, "citeRegEx": "Sutskever et al\\.,? \\Q2014\\E", "shortCiteRegEx": "Sutskever et al\\.", "year": 2014}, {"title": "Improved semantic representations from tree-structured long short-term memory networks", "author": ["Tai et al.2015] Kai Sheng Tai", "Richard Socher", "Christopher D. Manning"], "venue": "In Proceedings of the 53rd Annual Meeting of the Association for Computational Linguis-", "citeRegEx": "Tai et al\\.,? \\Q2015\\E", "shortCiteRegEx": "Tai et al\\.", "year": 2015}, {"title": "2015a. Target-Dependent Sentiment Classification with Long Short Term Memory. ArXiv preprint arXiv:1512.01100", "author": ["Tang et al.2015a] Duyu Tang", "Bing Qin", "Xiaocheng Feng", "Ting Liu"], "venue": null, "citeRegEx": "Tang et al\\.,? \\Q2015\\E", "shortCiteRegEx": "Tang et al\\.", "year": 2015}, {"title": "Document modeling with gated recurrent neural network for sentiment classification", "author": ["Tang et al.2015b] Duyu Tang", "Bing Qin", "Ting Liu"], "venue": "Proceedings of the 2015 Conference on Empirical Methods in Natural Language Processing,", "citeRegEx": "Tang et al\\.,? \\Q2015\\E", "shortCiteRegEx": "Tang et al\\.", "year": 2015}, {"title": "Target-dependent twitter sentiment classification with rich automatic features", "author": ["Vo", "Zhang2015] Duy-Tin Vo", "Yue Zhang"], "venue": "In Proceedings of the TwentyFourth International Joint Conference on Artificial Intelligence (IJCAI", "citeRegEx": "Vo et al\\.,? \\Q2015\\E", "shortCiteRegEx": "Vo et al\\.", "year": 2015}, {"title": "Dcu: Aspectbased polarity classification for semeval task", "author": ["Piyush Arora", "Santiago Cortes", "Utsab Barman", "Dasha Bogdanova", "Jennifer Foster", "Lamia Tounsi"], "venue": "Proceedings of the 8th International Workshop on Se-", "citeRegEx": "Wagner et al\\.,? \\Q2014\\E", "shortCiteRegEx": "Wagner et al\\.", "year": 2014}, {"title": "Hierarchical attention networks for document classification", "author": ["Yang et al.2016] Zichao Yang", "Diyi Yang", "Chris Dyer", "Xiaodong He", "Alex Smola", "Eduard Hovy"], "venue": "In Proceedings of the 2016 Conference of the North American Chapter of the Association", "citeRegEx": "Yang et al\\.,? \\Q2016\\E", "shortCiteRegEx": "Yang et al\\.", "year": 2016}, {"title": "Compositional matrix-space models for sentiment analysis", "author": ["Yessenalina", "Cardie2011] Ainur Yessenalina", "Claire Cardie"], "venue": "In Proceedings of the 2011 Conference on Empirical Methods in Natural Language Processing,", "citeRegEx": "Yessenalina et al\\.,? \\Q2011\\E", "shortCiteRegEx": "Yessenalina et al\\.", "year": 2011}, {"title": "Multichannel variable-size convolution for sentence classification", "author": ["Yin", "Sch\u00fctze2015] Wenpeng Yin", "Hinrich Sch\u00fctze"], "venue": "In Proceedings of the Nineteenth Conference on Computational Natural Language Learning,", "citeRegEx": "Yin et al\\.,? \\Q2015\\E", "shortCiteRegEx": "Yin et al\\.", "year": 2015}, {"title": "Long short-term memory over tree structures", "author": ["Zhu et al.2015] Xiaodan Zhu", "Parinaz Sobhani", "Hongyu Guo"], "venue": "In Proceedings of The 32nd International Conference on Machine Learning,", "citeRegEx": "Zhu et al\\.,? \\Q2015\\E", "shortCiteRegEx": "Zhu et al\\.", "year": 2015}], "referenceMentions": [{"referenceID": 15, "context": "Aspect level sentiment classification is a fundamental task in the field of sentiment analysis (Pang and Lee, 2008; Liu, 2012; Pontiki et al., 2014).", "startOffset": 95, "endOffset": 148}, {"referenceID": 22, "context": "Aspect level sentiment classification is a fundamental task in the field of sentiment analysis (Pang and Lee, 2008; Liu, 2012; Pontiki et al., 2014).", "startOffset": 95, "endOffset": 148}, {"referenceID": 3, "context": ", 2014) and neural network models (Dong et al., 2014; Lakkaraju et al., 2014; Vo and Zhang, 2015; Nguyen and Shirai, 2015; Tang et al., 2015a).", "startOffset": 34, "endOffset": 142}, {"referenceID": 10, "context": ", 2014) and neural network models (Dong et al., 2014; Lakkaraju et al., 2014; Vo and Zhang, 2015; Nguyen and Shirai, 2015; Tang et al., 2015a).", "startOffset": 34, "endOffset": 142}, {"referenceID": 0, "context": "which is inspired by the recent success of computational models with attention mechanism and explicit memory (Graves et al., 2014; Bahdanau et al., 2015; Sukhbaatar et al., 2015).", "startOffset": 109, "endOffset": 178}, {"referenceID": 25, "context": "which is inspired by the recent success of computational models with attention mechanism and explicit memory (Graves et al., 2014; Bahdanau et al., 2015; Sukhbaatar et al., 2015).", "startOffset": 109, "endOffset": 178}, {"referenceID": 22, "context": "restaurant datasets from SemEval 2014 (Pontiki et al., 2014).", "startOffset": 38, "endOffset": 60}, {"referenceID": 8, "context": "Experimental results show that our approach performs comparable to a top system using feature-based SVM (Kiritchenko et al., 2014).", "startOffset": 104, "endOffset": 130}, {"referenceID": 25, "context": "memory network in question answering (Weston et al., 2014; Sukhbaatar et al., 2015).", "startOffset": 37, "endOffset": 83}, {"referenceID": 25, "context": "Sukhbaatar et al. (2015) demonstrate that multiple hops could uncover more abstractive evidences than single hop, and could yield improved results on question answering and language modeling.", "startOffset": 0, "endOffset": 25}, {"referenceID": 17, "context": "When dealing with a text corpus, we map each word into a low dimensional, continuous and real-valued vector, also known as word embedding (Mikolov et al., 2013; Pennington et al., 2014).", "startOffset": 138, "endOffset": 185}, {"referenceID": 21, "context": "When dealing with a text corpus, we map each word into a low dimensional, continuous and real-valued vector, also known as word embedding (Mikolov et al., 2013; Pennington et al., 2014).", "startOffset": 138, "endOffset": 185}, {"referenceID": 26, "context": "(Sun et al., 2015).", "startOffset": 0, "endOffset": 18}, {"referenceID": 25, "context": "An illustration of our approach is given in Figure 1, which is inspired by the use of memory network in question answering (Sukhbaatar et al., 2015).", "startOffset": 123, "endOffset": 148}, {"referenceID": 0, "context": "a weight/importance to each lower position when computing an upper level representation (Bahdanau et al., 2015).", "startOffset": 88, "endOffset": 111}, {"referenceID": 25, "context": "Following Sukhbaatar et al. (2015), we calculate the memory vector mi with mi = ei vi, where means element-wise multiplication and vi \u2208 Rd\u00d71 is a location vector for word wi.", "startOffset": 10, "endOffset": 35}, {"referenceID": 21, "context": "We clamp the word embeddings with 300-dimensional Glove vectors (Pennington et al., 2014), which is trained from web data and the vocabulary size is 1.", "startOffset": 64, "endOffset": 89}, {"referenceID": 22, "context": "We conduct experiments on two datasets from SemEval 2014 (Pontiki et al., 2014), one from laptop domain and another from restaurant domain.", "startOffset": 57, "endOffset": 79}, {"referenceID": 8, "context": "We compare with a top system using ngram features, parse features and lexicon features (Kiritchenko et al., 2014).", "startOffset": 87, "endOffset": 113}, {"referenceID": 0, "context": "(Bahdanau et al., 2015) over the hidden vectors.", "startOffset": 0, "endOffset": 23}, {"referenceID": 22, "context": "Aspect level sentiment classification is a finegrained classification task in sentiment analysis, which aims at identifying the sentiment polarity of a sentence expressed towards an aspect (Pontiki et al., 2014).", "startOffset": 189, "endOffset": 211}, {"referenceID": 8, "context": "resources like parser and sentiment lexicons (Kiritchenko et al., 2014; Wagner et al., 2014).", "startOffset": 45, "endOffset": 92}, {"referenceID": 32, "context": "resources like parser and sentiment lexicons (Kiritchenko et al., 2014; Wagner et al., 2014).", "startOffset": 45, "endOffset": 92}, {"referenceID": 3, "context": "In recent years, neural network approaches (Dong et al., 2014; Lakkaraju et al., 2014; Nguyen and Shirai, 2015; Tang et al., 2015a) are of growing attention for their capacity to learn powerful text representation from data.", "startOffset": 43, "endOffset": 131}, {"referenceID": 10, "context": "In recent years, neural network approaches (Dong et al., 2014; Lakkaraju et al., 2014; Nguyen and Shirai, 2015; Tang et al., 2015a) are of growing attention for their capacity to learn powerful text representation from data.", "startOffset": 43, "endOffset": 131}, {"referenceID": 14, "context": "B,I,O) to indicate whether it is an aspect/sentiment word (Choi and Cardie, 2010; Irsoy and Cardie, 2014; Liu et al., 2015).", "startOffset": 58, "endOffset": 123}, {"referenceID": 4, "context": "coder (Glorot et al., 2011), convolutional neural network (Kalchbrenner et al.", "startOffset": 6, "endOffset": 27}, {"referenceID": 6, "context": ", 2011), convolutional neural network (Kalchbrenner et al., 2014; Kim, 2014; Yin and Sch\u00fctze, 2015), sequence based recurrent neural models (Sutskever et al.", "startOffset": 38, "endOffset": 99}, {"referenceID": 7, "context": ", 2011), convolutional neural network (Kalchbrenner et al., 2014; Kim, 2014; Yin and Sch\u00fctze, 2015), sequence based recurrent neural models (Sutskever et al.", "startOffset": 38, "endOffset": 99}, {"referenceID": 27, "context": ", 2014; Kim, 2014; Yin and Sch\u00fctze, 2015), sequence based recurrent neural models (Sutskever et al., 2014; Kiros et al., 2015; Li et al., 2015b) and tree-structured neural networks", "startOffset": 82, "endOffset": 144}, {"referenceID": 24, "context": "(Socher et al., 2013; Tai et al., 2015; Zhu et al., 2015).", "startOffset": 0, "endOffset": 57}, {"referenceID": 28, "context": "(Socher et al., 2013; Tai et al., 2015; Zhu et al., 2015).", "startOffset": 0, "endOffset": 57}, {"referenceID": 36, "context": "(Socher et al., 2013; Tai et al., 2015; Zhu et al., 2015).", "startOffset": 0, "endOffset": 57}, {"referenceID": 1, "context": "Several recent studies calculate continuous representation for documents with neural networks (Le and Mikolov, 2014; Bhatia et al., 2015; Li et al., 2015a; Tang et al., 2015b; Yang et al., 2016).", "startOffset": 94, "endOffset": 194}, {"referenceID": 33, "context": "Several recent studies calculate continuous representation for documents with neural networks (Le and Mikolov, 2014; Bhatia et al., 2015; Li et al., 2015a; Tang et al., 2015b; Yang et al., 2016).", "startOffset": 94, "endOffset": 194}, {"referenceID": 16, "context": "Such attention based approaches have achieved promising performances on a variety of NLP tasks (Luong et al., 2015; Kumar et al., 2015; Rush et al., 2015).", "startOffset": 95, "endOffset": 154}, {"referenceID": 9, "context": "Such attention based approaches have achieved promising performances on a variety of NLP tasks (Luong et al., 2015; Kumar et al., 2015; Rush et al., 2015).", "startOffset": 95, "endOffset": 154}, {"referenceID": 23, "context": "Such attention based approaches have achieved promising performances on a variety of NLP tasks (Luong et al., 2015; Kumar et al., 2015; Rush et al., 2015).", "startOffset": 95, "endOffset": 154}], "year": 2016, "abstractText": "We introduce a deep memory network for aspect level sentiment classification. Unlike feature-based SVM and sequential neural models such as LSTM, this approach explicitly captures the importance of each context word when inferring the sentiment polarity of an aspect. Such importance degree and text representation are calculated with multiple computational layers, each of which is a neural attention model over an external memory. Experiments on laptop and restaurant datasets demonstrate that our approach performs comparable to state-of-art feature based SVM system, and substantially better than LSTM and attention-based LSTM architectures. On both datasets we show that multiple computational layers could improve the performance. Moreover, our approach is also fast. The deep memory network with 9 layers is 15 times faster than LSTM with a CPU implementation.", "creator": "LaTeX with hyperref package"}}}