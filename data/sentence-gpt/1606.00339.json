{"id": "1606.00339", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "1-Jun-2016", "title": "A structured argumentation framework for detaching conditional obligations", "abstract": "We present a general formal argumentation system for dealing with the detachment of conditional obligations. Given a set of facts, constraints, and conditional obligations, we answer the question whether an unconditional obligation is detachable by considering reasons for and against its detachment. For the evaluation of arguments in favor of detaching obligations we use a Dung-style argumentation-theoretical semantics. We illustrate the modularity of the general framework by considering some extensions, and we compare the framework to some related approaches from the literature. We describe what kinds of abstractions are useful in determining the general framework and in explaining the problem. We explore how it might improve the problem (e.g., the framework) by considering an application of the Dung-style semantics.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "histories": [["v1", "Wed, 1 Jun 2016 16:04:47 GMT  (28kb)", "http://arxiv.org/abs/1606.00339v1", "This is our submission to DEON 2016, including the technical appendix"]], "COMMENTS": "This is our submission to DEON 2016, including the technical appendix", "reviews": [], "SUBJECTS": "cs.AI", "authors": ["mathieu beirlaen", "christian stra{\\ss}er"], "accepted": false, "id": "1606.00339"}, "pdf": {"name": "1606.00339.pdf", "metadata": {"source": "CRF", "title": null, "authors": ["Christian Stra\u00dfer"], "emails": ["mathieu.beirlaen@rub.de,", "christian.strasser@rub.de."], "sections": [{"heading": null, "text": "ar X\niv :1\n60 6.\n00 33\n9v 1\n[ cs\n.A I]\nWe present a general formal argumentation system for dealing with the detachment of conditional obligations. Given a set of facts, constraints, and conditional obligations, we answer the question whether an unconditional obligation is detachable by considering reasons for and against its detachment. For the evaluation of arguments in favor of detaching obligations we use a Dung-style argumentation-theoretical semantics. We illustrate the modularity of the general framework by considering some extensions, and we compare the framework to some related approaches from the literature.\nKeywords : formal argumentation, ASPIC+, conditional norms, conflicting norms, prioritized norms, factual detachment, deontic detachment."}, {"heading": "1 Introduction", "text": "We take an argumentative perspective on the problem of detaching conditional obligations relative to a set of facts and constraints. We allow for the construction of arguments the deontic conclusions of which are candidates for detachment. Next, we define a number of ways in which these arguments may attack one another, as when the conclusions of two arguments are conflicting. We borrow Dung\u2019s semantics [6] for evaluating arguments relative to the attack relations that hold between them. Conclusions of arguments which are evaluated positively are safely detachable in our framework. They can be interpreted as all-things-considered obligations \u2013 following Ross [28] \u2013 or output obligations \u2013 following Makinson & van der Torre [18, 19].\n\u2217The research of both authors was supported by a Sofja Kovalevskaja award of the Alexander von Humboldt-Foundation, funded by the German Ministry for Education and Research.\nThe argumentative approach defended in this paper is both natural and precise. Norms which guide reasoning are naturally construed as conclusions of proof sequences. Objections raised against the derivation of certain obligations are naturally construed as argumentative attacks. Arguments are naturally evaluated in terms of the objections raised against them.\nIn Section 2 we introduce a basic argumentation system for evaluating arguments the conclusions of which can be interpreted as all-things-considered obligations. This generic, modular framework can be extended in various ways, as we illustrate in Section 3. We show how various mechanisms for conflictresolution can be implemented (Section 3.1), and how we can rule out obligations committing us to further violations or conflicts (Section 3.2). In Section 4 we compare our approach to related systems from the literature. We end by pointing to some further expansions of our framework, which we aim to present in a follow-up paper (Section 5)."}, {"heading": "2 The basic framework", "text": "We start by reviewing the basic concepts needed from Dung\u2019s semantics (Section 2.1). Next we turn to the construction of deontic arguments (Section 2.2) and attack definitions (Section 2.3). We define a consequence relation for detaching all-things-considered obligations in deontic argumentation frameworks (Section 2.4), and present some of its meta-theoretical properties (Section 2.5)."}, {"heading": "2.1 Abstract argumentation", "text": "A Dung-style abstract argumentation framework (AF) is a pair (A,Att) where A is a set of arguments and Att \u2286 A\u00d7A is a binary relation of attack. Relative to an AF, Dung defines a number of extensions \u2013 subsets of A \u2013 on the basis of which we can evaluate the arguments in A.\nDefinition 1 (Complete and grounded extension). Let (A,Att) be an AF. For any a \u2208 A, a is acceptable w.r.t. some S \u2286 A (or, S defends a) iff for all b such that (b, a) \u2208 Att there is a c \u2208 S for which (c, b) \u2208 Att. If S \u2286 A is conflict-free, i.e. there are no a, b \u2208 S for which (a, b) \u2208 Att, then:\n\u2022 S is a complete extension iff a \u2208 S whenever a is acceptable w.r.t. S;\n\u2022 S is the grounded extension iff it is the set inclusion minimal complete extension.\nDung [6] showed that for every AF there is a grounded extension, it is unique, and it can be constructed as follows.\nDefinition 2 (Defense). A set of arguments X defends an argument a iff every attacker of a is attacked by some b \u2208 X .\nDefinition 3 (Construction of the grounded extension). The grounded extension G relative to an AF (A,Att) is defined as follows (where A is countable):\n\u2022 G0: the set of all arguments in A without attackers;\n\u2022 Gi+1: all arguments defended by Gi; \u2022 G = \u22c3\ni\u22650 Gi\nBesides the grounded extension, a number of further extensions (preferred, (semi-)stable, ideal etc.) have been defined in the literature. Due to space limitations, we focus exclusively on grounded extensions in the remainder.\nOn Dung\u2019s abstract approach [6], arguments are basic units of analysis the internal structure of which is not represented. But nothing prevents us from instantiating such abstract arguments by conceptualizing them as proof trees for deriving a conclusion based on a set of premises and inference rules. Frameworks with instantiated arguments are called structured argumentation frameworks (for examples, see e.g. [1]).1 In the remainder of Section 2 we show how questions regarding obligation detachment in deontic logic can be addressed and answered within structured deontic argumentation frameworks."}, {"heading": "2.2 Instantiating deontic arguments", "text": "Our formal language L is defined as follows:\nP := {p, q, r, . . .} L\u21d2 := \u3008LP \u3009 \u21d2 \u3008LP \u3009 LP := P | \u22a4 | \u22a5 | \u00ac\u3008LP \u3009 | \u3008LP \u3009 \u2228 \u3008LP \u3009 LO := O\u3008LP \u3009 L := \u3008LP \u3009 | \u3008LP \u3009 | \u00ac\u3008L \u3009 | \u3008L \u3009 \u2228 \u3008L \u3009 L := LP | L | L\u21d2 | LO\nThe classical connectives \u2227,\u2283,\u2261 are defined in terms of \u00ac and \u2228. We represent facts as members of LP . Where A,B \u2208 LP , conditional obligations are formulas of the form A \u21d2 B, read \u2018If A, then it \u2013 prima facie \u2013 ought to be that B\u2019 or \u2018If A, then B is prima facie obligatory\u2019.2 Where A \u2208 LP , a constraint A abbreviates that A is settled, i.e. that A holds unalterably.3 Formulas of the form OA (where A \u2208 LP ) represent all-things-considered obligations.\nUnless specified otherwise, upper case letters A,B, . . . denote members of LP and upper case Greek letters \u0393,\u2206, . . . denote subsets of LP \u222a L \u222a L\u21d2. Where \u0393 \u2286 L and \u2020 \u2208 {P, ,\u21d2,O}, \u0393\u2020 = \u0393 \u2229 L\u2020.\nCn CL (\u0393) denotes the closure of \u0393 \u2286 LP under propositional classical logic, CL. Cn\nL (\u0393) denotes the closure of \u0393 \u2286 L under L , which we use as a\n1Our approach is similar in spirit to the ASPIC+ framework for structured argumentation from e.g. [20]. We return to this point in Section 4.2.\n2Depending on the context of application, the following alternative readings are also fine: \u2018If A is the case, then B is pro tanto obligatory\u2019, \u2018If A, then the agent ought (prima facie, pro tanto) to bring about B\u2019. On the latter, agentive reading, we can think of \u2018\u21d2\u2019 as implicitly indexed by an agent.\n3If A holds, then the fact that A is deemed fixed, necessary, and unalterable. Obligations which contradict these facts are unalterably violated. Carmo & Jones cite three factors giving rise to such unalterable violations. The first is time, e.g. when you did not return a book you ought to have returned by its due date. The second is causal necessity, e.g. when you killed a person you ought not to have killed. The third is practical impossibility, e.g. when a dog owner stubbornly refuses to keep her dog against the house regulations, and nobody else dares to try and convince her to remove it [4, pp. 283-284].\ngeneric name for a modal logic for representing background constraints, e.g. T, S4, S5, etc. In our examples below, we will assume that L is normal and validates the axiom A \u2283 A.4\nArguments are ordered pairs \u3008A : s\u3009 in which A is called the conclusion, and s a proof sequence for deriving A. We use lower case letters a, b, c, . . . as placeholders for arguments.\nDefinition 4. Given a premise set \u0393, we allow the following rules for constructing arguments:\n(i) If A \u2208 Cn L (\u0393), then \u3008 A : \u2212\u2212\u3009 is an argument; (where \u2212\u2212 denotes the empty proof sequence)\n(ii) If A \u21d2 B \u2208 \u0393\u21d2 and A \u2208 Cn L (\u0393), then \u3008OB : A,A \u21d2 B\u3009 is an argument;\n(iii) If A \u21d2 B \u2208 \u0393\u21d2 and a = \u3008OA : . . .\u3009 is an argument, then \u3008OB : a,A \u21d2 B\u3009 is an argument;\n(iv) If a = \u3008OA : . . .\u3009 and b = \u3008OB : . . .\u3009 are arguments, then \u3008O(A \u2227B) : a, b\u3009 is an argument.\n(v) If a = \u3008OA : . . .\u3009 is an argument and (A \u2283 B) \u2208 Cn L (\u0393), then \u3008OB : a, (A \u2283 B)\u3009 is an argument.\nArgument a is a deontic argument if a is of the form \u3008OA : . . .\u3009. We use C(a) to denote the set of all formulas in L used in the construction of a, including its conclusion. E.g. where a = \u3008Oq : p, p \u21d2 q\u3009 and b = \u3008Or : a, q \u21d2 r\u3009, C(a) = {p, p \u21d2 q,Oq} and C(b) = {p, p \u21d2 q,Oq, q \u21d2 r,Or}. Argument a is a sub-argument of argument b if C(a) \u2286 C(b); a is a proper sub-argument of argument b if C(a) \u2282 C(b); and b is a super-argument of argument a if a is a proper sub-argument of b.\n(ii)-(v) correspond to inference rules well-known from deontic logic. (ii) allows for the factual detachment of an all-things-considered obligation OB from a conditional prima facie obligation A \u21d2 B and a fact A. (iii) is a deontic detachment principle. (iv) and (v) allow for obligation aggregation (or agglomeration), resp. inheritance (or weakening).\nExample 1 (Constructing arguments). Let \u03931 = { p,\u22a4 \u21d2 \u00acp,\u00acp \u21d2 \u00acq, p \u21d2 q}. By Definition 4 we can construct \u2013 amongst others \u2013 the following arguments from \u03931:\na1: \u3008 p : \u2212\u2212\u3009 a4: \u3008Oq : p, p \u21d2 q\u3009 a2: \u3008O\u00acp : \u22a4,\u22a4 \u21d2 \u00acp\u3009 a5: \u3008O(\u00acq \u2227 q) : a3, a4\u3009 a3: \u3008O\u00acq : a2,\u00acp \u21d2 \u00acq\u3009 a6: \u3008O(q \u2228 r) : a4, (q \u2283 (q \u2228 r))\u3009\nArgument a1 is constructed from p \u2208 \u03931 in view of (i). Arguments a2 and a4 are constructed by means of (ii)\n5; a3 is constructed from a2 by means of (iii); a5 is constructed from a3 and a4 by (iv); and a6 is constructed from a4 by (v).\n4Moreover, where \u2206\u21d2 \u2286 L\u21d2, we assume that \u0393 \u22a2 L A iff \u0393 \u222a\u2206\u21d2 \u22a2 L A. 5Note that, in the construction of argument a4, the formula p follows from \u03931 by p and\nsince \u22a2 L p \u2283 p.\nWe can interpret \u03931 as representing a classic contrary-to-duty (CTD) scenario (for the sake of readability, we omit the qualifier \u2018prima facie\u2019 in our reading of conditional obligations):6\n\u22a4 \u21d2 \u00acp There ought not be a dog. \u00acp \u21d2 \u00acq If there is no dog, there ought not be a warning sign. p \u21d2 q If there is a dog, there ought to be a warning sign. p It is settled that there is a dog.\nOf course, not all of the conclusions of arguments a2-a6 qualify as all-thingsconsidered obligations. Argument a5, for instance, is internally incoherent and should be filtered out when evaluating the arguments constructed from \u03931. Arguments are evaluated in terms of the attack relations which hold amongst them. Before we turn to the definition of these relations, we point out that rules (i)-(v) in Definition 4 allow for a version of the necessitation rule whenever L is a normal modal logic. For instance, given a premise set { p,\u22a4 \u21d2 q}, we can construct the argument a1 = \u3008Oq : \u22a4,\u22a4 \u21d2 q\u3009 by (ii). Since p \u22a2L (q \u2283 p), we can construct the argument a2 = \u3008Op : a1, (q \u2283 p)\u3009 by (v). If desired, the construction of a2 can be prevented by defining \u2013 in addition to \u2018\u2283\u2019 \u2013 a weaker (non-material) implication connective in L on the basis of which to construct arguments in line with clause (v) in Definition 4."}, {"heading": "2.3 Attacking deontic arguments", "text": "In our basic framework, we define two ways in which arguments may attack one another. First, we take care that unalterably violated obligations are attacked by the constraints which violate them. (We write A = \u2212B in case A = \u00acB or B = \u00acA.)\nDefinition 5 (Fact attack). Where a = \u3008OA : . . .\u3009 is an argument, let UO(a) = {B | OB \u2208 C(a)}. Where \u2205 6= \u0398 \u2286 UO(a), \u3008 \u2212 \u2227 \u0398 : \u2212\u2212\u3009 attacks a.\nIn Example 1 the obligation O\u00acp cannot guide the agent\u2019s actions, since it cannot be acted upon in view of the constraint p. Definition 5 takes care that a1 attacks a2, since UO(b) = {\u00acp}. Note that, as soon as A \u2208 UO(a) for some argument a and formula A, A \u2208 UO(b) for any super-argument b of a. Consequently, if an argument c attacks a in view of Definition 5, then c also attacks all super-arguments b of a. So in Example 1 the argument a1 attacks a2 as well as its super-arguments a3 and a5.\nSince we assume that L is a normal modal logic, we know that (\u00ac(\u00acq \u2227 q)) \u2208 Cn\nL (\u03931). Hence, by Definition 5 again, argument a7 = \u3008 (\u00ac(\u00acq \u2227 q)) :\n\u2212\u2212\u3009 attacks argument a5 from Example 1.\nExample 2 (Attacks on incoherent arguments). Let \u03932 = {\u22a4 \u21d2 p,\u22a4 \u21d2 \u00acp,\u22a4 \u21d2 q}. We construct the following arguments on the basis of \u03932:\na1: \u3008Op : \u22a4,\u22a4 \u21d2 p\u3009 a4: \u3008O(p \u2228 \u00acq) : a1, (p \u2283 (p \u2228 \u00acq))\u3009 a2: \u3008O\u00acp : \u22a4,\u22a4 \u21d2 \u00acp\u3009 a5: \u3008O(\u00acp \u2227 (p \u2228 \u00acq) : a2, a4\u3009 a3: \u3008Oq : \u22a4,\u22a4 \u21d2 q\u3009 a6: \u3008O\u00acq : a5, ((\u00acp \u2227 (p \u2228 \u00acq)) \u2283 \u00acq)\u3009\n6The example is adapted from [27].\nBy Definition 5:\nUO(a5) = {p, p \u2228 \u00acq,\u00acp,\u00acp \u2227 (p \u2228 \u00acq)} UO(a6) = {p, p \u2228 \u00acq,\u00acp,\u00acp \u2227 (p \u2228 \u00acq),\u00acq}\nHence, both a5 and a6 are attacked by a7:\na7 = \u3008 \u00ac(p \u2227 \u00acp) : \u2212\u2212\u3009\nArguments a5 and a6 are incoherent in the sense that in constructing them we relied on arguments the conclusions of which are conflicting (namely a1 and a2). It is vital that we are able to filter out such incoherent arguments. Definition 5 takes care of that. By attacking a6, argument a7 protects (defends) the unproblematic a3, which is attacked by a6 in view of Definition 6 below. We return to this point in footnote 8, after we explained how arguments are evaluated.\nThe second type of attack relation ensures that mutually incompatible obligations attack each other:\nDefinition 6 (Conflict attack). a = \u3008O\u2212A : . . .\u3009 attacks b = \u3008OA : . . .\u3009, and a attacks all of b\u2019s super-arguments.\nIn Example 1, arguments a3 and a4 attack each other according to Definition 6. Moreover, a3 attacks a5 and a6; and a4 attacks a5. Likewise, in Example 2, a1 and a2 attack each other, and so do a3 and a6. Moreover, a1 attacks a5 and a6; and a2 attacks a4, a5, and a6.\nExample 3 (Conflict attack). Let \u03933 = {p, q, p \u21d2 r, (p \u2227 q) \u21d2 s, \u00ac(r \u2227 s)}. We construct the following arguments on the basis of \u03933:\na1: \u3008Or : p, p \u21d2 r\u3009 a4: \u3008 \u00ac(r \u2227 s) : \u2212\u2212\u3009 a2: \u3008Os : p \u2227 q, (p \u2227 q) \u21d2 s\u3009 a5: \u3008O\u00acr : a2, (s \u2283 \u00acr)\u3009 a3: \u3008O(r \u2227 s) : a1, a2\u3009 a6: \u3008O\u00acs : a1, (r \u2283 \u00acs)\u3009\na4 attacks a3 by Definition 5. By Definition 6 a1 attacks a5; a5 attacks a1, a3, and a6; a2 attacks a6; and a6 attacks a2, a3, and a5."}, {"heading": "2.4 Evaluating deontic arguments", "text": "For the evaluation of deontic arguments relative to a premise set, we extend Dung-style AFs to deontic argumentation frameworks, and we borrow Dung\u2019s argument evaluation mechanism from Definitions 1-3:\nDefinition 7 (DAF). The deontic argumentation framework (DAF) for \u0393 \u2286 LP \u222a L \u222a L\u21d2 is an ordered pair \u3008A(\u0393),Att(\u0393)\u3009 where\n\u2022 A(\u0393) is the set of arguments constructed from \u0393 in line with Definition 4; and\n\u2022 where a, b \u2208 A(\u0393): (a, b) \u2208 Att(\u0393) iff a attacks b according to Definition 5 or Definition 6.\nLike AFs, DAFs can be represented as directed graphs. Here, for instance, is a graph depicting the arguments we constructed on the basis of \u03931: 7\nNodes in the graph represent the arguments constructed on the basis of \u03931 in Example 1. Below the arguments\u2019 names, we stated their conclusions. Arrows represent attacks. Dotted lines represent sub-argument relations.\nWe evaluate arguments in a DAF using Dung\u2019s grounded semantics from Section 2.1: In Definition 1, replace A (resp. Att) with A(\u0393) (resp. Att(\u0393)). Similarly for Definition 3, where we also replace occurrences of G and Gi with G(\u0393) and Gi(\u0393) respectively.\nLet us now apply Definition 3 to Example 1. Clearly, a1, a7 \u2208 G0(\u03931), since Definitions 5 and 6 provide us with no means to attack arguments the conclusions of which are members of \u0393 1 . In the next step of our construction, a4, a6 \u2208 G1(\u03931), since they are defended by a1 \u2208 G0(\u03931). a2, a3, a5 6\u2208 G1(\u03931), since each of these arguments is attacked by a1 (hence undefended).\nWe cannot construct any further arguments which attack a4 or a6 and which do not contain any of the undefended arguments a2 or a3 as sub-arguments. Moreover, we show in the Appendix (Lemma 2) that, for any premise set \u0393, if a \u2208 G(\u0393), then a \u2208 G1(\u0393). By the Definition 3, a1, a4, a6, a7 \u2208 G(\u03931) while a2, a3, a5 6\u2208 G(\u03931).\nDefinition 8 (DAF-consequence). Where \u0393 \u2286 LP \u222a L \u222a L\u21d2 and A \u2208 LP , \u0393 \u22a2DAF OA iff there is an argument a \u2208 G(\u0393) with conclusion OA.\nBy Definition 8, \u03931 \u22a2DAF Oq and \u03931 \u22a2DAF O(q \u2228 r), while \u03931 6\u22a2DAF O\u00acp and \u03931 6\u22a2DAF O\u00acq. In Example 2, \u03932 \u22a2DAF Oq.\n8 We leave it to the reader to check that none of Op,O\u00acp,O(p \u2228 \u00acq), or O\u00acq is a DAF-consequence of \u03932, and that none of Or,Os,O(r \u2227 s),O\u00acr, or O\u00acs is a DAF-consequence of \u03933.\n7Due to space limitations, we leave it to the reader to construct similar graphs for the other examples in this paper.\n8 The conclusion Oq of argument a3 in Example 2 is accepted despite its being attacked by a6. The reason is that a6 is in turn attacked by a7, so that a7 defends a3 from the attack by a6."}, {"heading": "2.5 Rationality postulates", "text": "In [3, Sec. 4] the properties of output closure and output consistency were proposed as desiderata for well-behaved argumentation systems. WhereOutput(\u0393) = {A | \u0393 \u22a2DAF OA}:\nProperty 1 (Closure). Output(\u0393) = CnCL(Output(\u0393)).\nProperty 2 (Consistency). CnCL(Output(\u0393)) is consistent.\nProperties 1 and 2 follow for DAF in view of resp. Theorems 1 and 2 in the Appendix. Property 3 is proven in Theorem 3 in the Appendix:\nProperty 3 (Cautious cut/cumulative transitivity). Let \u2206\u21d2 = {\u22a4 \u21d2 A | A \u2208 \u2206}. If \u0393 \u22a2DAF OA for all A \u2208 \u2206 and \u0393 \u222a\u2206\u21d2 \u22a2DAF OB, then \u0393 \u22a2DAF OB.\nProperties 4 and 5 fail for DAF:\nProperty 4 (Cautious monotonicity). If \u0393 \u22a2DAF OA and \u0393 \u22a2DAF OB, then \u0393 \u222a {\u22a4 \u21d2 A} \u22a2DAF OB.\nProperty 5 (Rational monotonicity). If \u0393 \u22a2DAF OA and \u0393 6\u22a2DAF O\u00acB, then \u0393 \u222a {\u22a4 \u21d2 B} \u22a2DAF OA\nExample 4 (Failure of properties 4 and 5, adapted from [2]). Let \u03934 = {p, p \u21d2 q, q \u21d2 r, r \u21d2 \u00acq,\u00acq \u21d2 s,\u22a4 \u21d2 \u00acs}. We construct the following arguments on the basis of \u03934:\na1: \u3008Oq : p, p \u21d2 q\u3009 a4: \u3008Os : a3,\u00acq \u21d2 s\u3009 a2: \u3008Or : a1, q \u21d2 r\u3009 a5: \u3008O\u00acs : \u22a4,\u22a4 \u21d2 \u00acs\u3009 a3: \u3008O\u00acq : a2, r \u21d2 \u00acq\u3009 a6: \u3008 \u00ac(q \u2227 \u00acq) : \u2212\u2212\u3009\nBy Definition 6: a1 attacks a3 and a4; a3 attacks all of a1-a4 (including itself); and a4 and a5 attack each other. By Definition 5, a6 attacks a3 and a4, since both q and \u00acq are members of UO(a3) and UO(a4). As a result, Oq,Or, and O\u00acs are DAF-consequences of \u03934, while O\u00acq and Os are not.\nNow add the new conditional obligation \u22a4 \u21d2 r to \u03934, so that we obtain the new arguments\na7: \u3008Or : \u22a4,\u22a4 \u21d2 r\u3009 a9: \u3008Os : a8,\u00acq \u21d2 s\u3009 a8: \u3008O\u00acq : a7, r \u21d2 \u00acq\u3009\nNone of these new arguments is attacked by a6, which defends a1 and a5 from the attacks by a3 and a4 respectively. By Definition 6, a8 and a1 attack each other. So do a9 and a5. As a result, none of a1, a5, a8, and a9 is in the grounded extension of \u03934\u222a{\u22a4 \u21d2 r}. So we have a counter-example to Property 4: \u03934 \u22a2DAF Or and \u03934 \u22a2DAF O\u00acs, while \u03934 \u222a {\u22a4 \u21d2 r} 6\u22a2DAF O\u00acs.\nThis example also serves to illustrate the failure of Property 5 for DAF. Arguments with conclusion O\u00acr can be constructed on the basis of \u03934 only on the basis of incoherent arguments. Let, for instance:\na10: \u3008O(q \u2227 \u00acq) : a1, a3\u3009 a11: \u3008O\u00acr : a10, ((q \u2227 \u00acq) \u2283 \u00acr)\u3009\nIn view of Definition 5, arguments constructed on an incoherent basis are attacked by an otherwise unattacked argument. For instance, a11 is attacked by the unattacked argument a6. Because of this, \u03934 6\u22a2DAF O\u00acr. But then, since \u03934 \u22a2DAF O\u00acs and \u03934 \u222a {\u22a4 \u21d2 r} 6\u22a2DAF O\u00acs, Property 5 fails for DAF."}, {"heading": "3 Beyond the basics", "text": ""}, {"heading": "3.1 Conflict-resolution", "text": ""}, {"heading": "3.1.1 Resolving conflicts via logical analysis", "text": "It has been argued that, in cases of conflict, more specific obligations should be given precedence over less specific ones.9 Consider the following example:\nExample 5 (Specificity). Let \u03935 = {q, r, q \u21d2 p, (q\u2227r) \u21d2 \u00acp}. We can interpret \u03935 as representing a scenario in which an agent is making carrot soup. Let p, q, and, respectively, r abbreviate \u2018there is fennel\u2019, \u2018there are carrots\u2019, and \u2018there is celery\u2019. If there are carrots in the garden still, our agent should take care that he buys fennel in order to make the soup (q \u21d2 p). However, if both carrots and celery are in the garden, he should not get fennel ((q \u2227 r) \u21d2 \u00acp), because celery can be used instead of fennel. As it turns out, both carrots and celery are in his garden (q, r). The desirable outcome in this case is that the agent ought not go out and buy fennel.\nA principled way of obtaining outcomes in which more specific obligations are preferred over less specific ones, is to define specificity in terms of logical strength, and to define a new attack relation for letting more specific arguments attack less specific ones. Let the factual support of a deontic argument a be the set S(a) = {B | B \u2208 (C(a) \u2229 LP )}.\nWe write S(a) \u2291 S(b) iff for all A \u2208 S(a) there is a B \u2208 S(b) such that A \u22a2 B and for all B \u2208 S(b) there is an A \u2208 S(a) such that A \u22a2 B. S(a) \u228f S(b) (a is more specific than b) iff S(a) \u2291 S(b) and S(b) 6\u2291 S(a).\nWe replace Definition 6 with Definition 9:\nDefinition 9 (Conflict attack w/specificity). Let a = \u3008O\u2212A : . . .\u3009 and b = \u3008OA : . . .\u3009.\n(i) If S(a) \u228f S(b), then a attacks b and all of b\u2019s super-arguments,\n(ii) b attacks a and all of a\u2019s super-arguments, unless a attacks b in view of clause (i).\nLet DAFs (with subscript \u2018s\u2019 for specificity) be the logic resulting from constructing the attack relation Att on the basis of Definitions 5 and 9.\nIn Example 5, we construct the following arguments from \u03935:\n9Understood in this way, specificity cases have been studied extensively in the fields of non-monotonic logic (see e.g. [7, 5]) and deontic logic (see e.g. [4, 27, 30, 31]).\na1: \u3008Op : q, q \u21d2 p\u3009 a2: \u3008O\u00acp : q \u2227 r, (q \u2227 r) \u21d2 \u00acp\u3009\nSince S(a2) \u228f S(a1), a2 attacks a1 by Definition 9, but not vice versa. As a result, only a2 is in \u03935\u2019s grounded extension, and \u03935 \u22a2DAFs O\u00acp, while \u03935 6\u22a2DAFs Op.\nIn Example 3, the factual support of the arguments constructed from \u03933 is such that S(a2) = S(a5) \u228f S(a1) = S(a6). By Definition 9, a5 attacks a1 and a2 attacks a6. As a result, the more specific arguments a2 and a5 defeat the less specific a1 and a6, so that \u03933 \u22a2DAFs Os and \u03933 \u22a2DAFs O\u00acr, while \u03933 6\u22a2DAFs Or and \u03933 6\u22a2DAFs O\u00acs. As before, \u03933 6\u22a2DAFs O(r \u2227 s).\nIn dealing with conflict-resolution via logical analysis, we have chosen for a cautious notion of specificity. For instance, {p} 6\u228f {p, q} and {p} 6\u228f {p\u2227q, r}. In certain contexts it may be sensible to opt for a stronger characterization of \u2018\u228f\u2019. A detailed discussion of such issues would lead us too far astray given our present purposes. Instead, we point out that our framework readily accommodates alternative characterizations of \u2018\u228f\u2019 to be used in Definition 9."}, {"heading": "3.1.2 Resolving conflicts via priorities", "text": "Instead of (or in combination with) conflict-resolution via logical analysis, a priority ordering \u2264 can be introduced over conditional norms, and our formal language can be adjusted accordingly. Conditional norms then come with an associated degree of priority \u03b1 \u2208 Z+, written A \u21d2\u03b1 B (higher numbers denote higher priorities).\nWe lift \u2264 to a priority ordering over arguments via the weakest link principle: an argument is only as strong as the weakest priority conditional used in its construction [25]. Let Pr(\u2206) = {\u03b1 | A \u21d2\u03b1 B \u2208 \u2206} and let min(Pr(\u2206)) be the lowest \u03b1 \u2208 Pr(\u2206). Then \u2206 \u2206\u2032 iff min(Pr(\u2206)) \u2264 min(Pr(\u2206\u2032)). Relative to a premise set \u0393, we write a b iff C(a) \u2229 \u0393\u21d2 C(b) \u2229 \u0393\u21d2. a \u227a b iff a b and b 6 a.\nWe replace Definition 6 with the following definition:\nDefinition 10 (Prioritized conflict attack). If a 6\u227a b, then a = \u3008O\u2212A : . . .\u3009 attacks b = \u3008OA : . . .\u3009 and all of b\u2019s super-arguments.\nLet DAF\u2264 be the logic resulting from constructing the attack relation Att on the basis of Definitions 5 and 10.\nExample 6 (Prioritized conflict attack). Let \u03936 = {p, q, r, \u00ac(s \u2227 t \u2227 u), p \u21d21 s, q \u21d22 t, r \u21d23 u}. We construct the following arguments on the basis of \u03936:\na1: \u3008 \u00ac(s \u2227 t \u2227 u) : \u2212\u2212\u3009 a8: \u3008O(s \u2227 t \u2227 u) : a4, a5\u3009 a2: \u3008Os : p, p \u21d21 s\u3009 a9: \u3008O\u00ac(t \u2227 u) : a2, (s \u2283 \u00ac(t \u2227 u))\u3009 a3: \u3008Ot : q, q \u21d22 t\u3009 a10: \u3008O\u00ac(s \u2227 u) : a3, (t \u2283 \u00ac(s \u2227 u))\u3009 a4: \u3008Ou : r, r \u21d23 u\u3009 a11: \u3008O\u00ac(s \u2227 t) : a4, (u \u2283 \u00ac(s \u2227 t))\u3009 a5: \u3008O(s \u2227 t) : a2, a3\u3009 a12: \u3008O\u00acu : a5, ((s \u2227 t) \u2283 \u00acu)\u3009 a6: \u3008O(s \u2227 u) : a2, a4\u3009 a13: \u3008O\u00act : a6, ((s \u2227 u) \u2283 \u00act)\u3009 a7: \u3008O(t \u2227 u) : a3, a4\u3009 a14: \u3008O\u00acs : a7, ((t \u2227 u) \u2283 \u00acs)\u3009\nThe order of arguments is such that a2, a5, a6, a8, a9, a12, a13 \u227a a3, a7, a10, a14 \u227a a4, a11. By Definition 10, a14 attacks a2, a5, a6, a8, a9, a12, and a13; a3 attacks a13; a4 attacks a12; a11 attacks a5, a8, and a12; a10 attacks a6 and a13; and a7 attacks a9. By Definition 5, a1 attacks a8. As a result, a1, a3, a4, a7, a10, a11, a14 \u2208 G(\u03936), while a2, a5, a6, a8, a9, a12, a13 6\u2208 G(\u03936). The following obligations are DAF\u2264-consequences of \u03936 : Ot,Ou,O(t \u2227 u),O\u00ac(s \u2227 u),O\u00ac(s \u2227 t),O\u00acs. The following obligations are not DAF\u2264-derivable from \u03936 : Os,O(s \u2227 t),O(s \u2227 u),O(s \u2227 t \u2227 u),O\u00ac(t \u2227 u),O\u00acu,O\u00act.\nAs with \u2018\u228f\u2019 in Definition 9, there are other ways of characterizing \u2018\u227a\u2019 in Definition 10. For instance, instead of lifting \u2264 via the weakest link principle, we could lift it via the strongest link principle, according to which an argument is as strong as the strongest priority conditional used in its construction.10 Depending on the way \u2264 is lifted to , different outcomes are possible with respect to the priority puzzles studied in e.g. [9, 14, 15]. A thorough investigation of these puzzles within our framework is left for an extended version of this paper."}, {"heading": "3.2 Anticipating violations and conflicts", "text": "Obligations which are violated or conflicted should not be detached. But what about obligations that commit us to violations or conflicts? Consider the following example, adapted from [16, 19].\nExample 7. Let \u03937 = {p, p \u21d2 q, q \u21d2 r, r \u21d2 \u00acp}. We construct the following arguments on the basis of \u03937:\na1: \u3008 p : \u2212\u2212\u3009 a3: \u3008Or : a2, q \u21d2 r\u3009 a2: \u3008Oq : p, p \u21d2 q\u3009 a4: \u3008O\u00acp : a3, r \u21d2 \u00acp\u3009\nSuppose you are throwing a party. Let p (resp. q, r) abbreviate \u2018Peggy (resp. Quincy, Ruth) is invited to the party\u2019. If Peggy is invited, then Quincy should be invited as well (perhaps because they are good friends and we know both of them). Likewise, if Quincy is invited then Ruth should be invited as well. But if Ruth is invited, then Peggy should not be (perhaps because we know Ruth and Peggy do not get along well). It is settled that Peggy is invited. You already sent her the official invitation, and it would be too awkward to tell her she can\u2019t come. Should Quincy and/or Ruth be invited?\nArguments a1, a2, and a3 are in \u03937\u2019s grounded extension G(\u03937). a4 is not in G(\u03937) since it is attacked by a1 according to Definition 5; consequently, \u03937 \u22a2DAF Oq and \u03937 \u22a2DAF Or, while \u03937 6\u22a2DAF O\u00acp.\nA more cautious reasoner may argue that Oq and Or should not be detached, since they lead to a commitment to O\u00acp: they form part of the detachment chain\n10If the strongest link principle is used, Definition 10 should no longer allow for attacks on super-arguments, since a 6\u227a b no longer warrants that a 6\u227a c where c is a super-argument of b. A further alternative is to use the last link principle, according to which an argument gets the priority of the conditional which occurs last in its proof sequence.\nof a4. This commitment reflects very badly on arguments a2 and a3, since O\u00acp is violated.\nTo model this behavior, we introduce the deontic doubt operator \u2299. We will use this operator to construct new arguments, called shadow arguments, the conclusion of which is of the form \u2299A. A shadow argument with conclusion \u2299A casts doubt on \u2013 and attacks \u2013 arguments with conclusion OA. Shadow arguments cannot be used to support obligations, but only to attack other arguments. They can only rule out deontic arguments. They cannot generate new consequences.11\nIn the resulting system DAF\u2299, our language L is adjusted so as to include members of P within the scope of the new operator \u2299. Arguments are constructed in line with Definition 11:\nDefinition 11. Given a premise set \u0393, we allow rules (i)-(vii) for constructing arguments, where (i)-(v) are the rules from Definition 4:\n(vi) If a = \u3008 A : \u2212\u2212\u3009 is an argument, then \u3008\u2299\u2212A : a\u3009 is an argument;\n(vii) If a = \u3008OA : . . .\u3009 is an argument, then \u3008\u2299\u2212A : a\u3009 is an argument.\nWe say that an argument a has minimal support if there is no argument b with the same conclusion such that C(b) \u2282 C(a). In DAF\u2299 the attack relation is constructed on the basis of Definition 12:12\nDefinition 12 (Shadow attack). Where a = \u3008OA : . . .\u3009 has minimal support:\n(i) Where b is a deontic sub-argument of a, \u3008\u2299A : . . .\u3009 attacks b as well as all of b\u2019s super-arguments,\n(ii) Where b is a deontic sub-argument of a and \u2205 6= \u0398 \u2286 UO(a), \u3008\u2299 \u2227 \u0398 : . . .\u3009\nattacks b as well as all of b\u2019s super-arguments.\nReconsider \u03937 from Example 7. From a1, we can construct the shadow argument a5 = \u3008\u2299\u00acp : a1\u3009. By clause (i) of Definition 12, a5 attacks a4, a3, and a2. As a result, a2 and a3 are no longer in G(\u03937). \u03937 6\u22a2DAF\u2299 Oq and \u03937 6\u22a2DAF\u2299 Or.\nExample 8. Let \u03938 = { s,\u22a4 \u21d2 p,\u22a4 \u21d2 q, (p \u2227 q) \u21d2 r, r \u21d2 \u00acs, q \u21d2 t}. We construct the following arguments on the basis of \u03938:\n11Shadow arguments are similar in spirit to Caminada\u2019s HY-arguments from [2]. An HYargument a is an incoherent argument constructed on the basis of the conclusion of another argument b. Since a shows that b leads to incoherence, b\u2019s conclusion is attacked by the HYargument a. Caminada shows how in the presence of HY-arguments, the property of cautious monotonicity may be restored for AFs. The same holds true for shadow arguments in our setting (cfr. infra). As Caminada\u2019s construction is defined within a framework consisting only of literals and (defeasible) rules relating (conjunctions of) literals, we cannot employ it in our setting.\n12By the construction of Definition 12, Definitions 5 and 6 become redundant in DAF\u2299. All cases covered by these definitions are covered already by Definition 12.\na1: \u3008 s : \u2212\u2212\u3009 a5: \u3008Or : a4, (p \u2227 q) \u21d2 r\u3009 a2: \u3008Op : \u22a4,\u22a4 \u21d2 p\u3009 a6: \u3008O\u00acs : a5, r \u21d2 \u00acs\u3009 a3: \u3008Oq : \u22a4,\u22a4 \u21d2 q\u3009 a7: \u3008Ot : a3, q \u21d2 t\u3009 a4: \u3008O(p \u2227 q) : a2, a3\u3009 a8: \u3008\u2299\u00acs : a1\u3009\nBy Definition 12 the shadow argument a8 attacks a6 as well as its subarguments a2\u2212a5. Moreover, it attacks a7, which is a super-argument of a3. As a result, none of the conclusions of arguments a2-a7 are DAF\u2299-consequences of \u03938.\nExample 4 no longer serves as a counter-example to properties 4 and 5 provided in Section 2.5. We can construct the shadow argument a12 : \u3008\u2299s : a5\u3009. By clause (i) of Definition 12, this argument attacks a4 as well as its subarguments a1-a3. As a result of this attack, \u03934 6\u22a2DAF\u2299 Oq and \u03934 6\u22a2DAF\u2299 Or. More generally, we can show that the cautious monotonicity property (Property 4 in Section 2.5) holds for DAF\u2299. A proof is provided in Theorem 4 of the Appendix.\nInstead of \u2013 and equivalently to \u2013 working with the \u2299-operator and Definitions 11 and 12, we could have generalized Definitions 5 and 6 so as to include attacks on sub-arguments. Definitions 5 and 6 currently entail that if a attacks b, then a attacks all super-arguments of b. In the generalized form, these definitions would entail that if a attacks b, then a attacks all superarguments of all sub-arguments of b.\nThere are two additional reasons for working with the doubt operator \u2299, however. First, this operator has a clear and intuitive meaning, and adds expressivity to our argumentation frameworks. Second, by characterizing shadow arguments via a separate operator we can think more transparently about (a) the implementation of additional logical properties of this operator, and (b) alternatives to Definition 12. Regarding (a), think about the strengthening rule (\u2018If \u2299A, then \u2299B whenever B \u22a2 A\u2019), which carries some intuitive force. Regarding (b), reconsider Example 8, and suppose we add the premise \u22a4 \u21d2 \u00acp to \u03938. A not-so-skeptical reasoner may argue that in this case we should not be able to cast doubt on the arguments a3 and a7, since the doubt casted on argument a4 arguably arises in view of the conflicted conditional obligation to see to it that p.13"}, {"heading": "4 Related work", "text": "Due to space limitations, we restrict our discussion of related formalisms to those of input/output logic (Section 4.1) and those based on formal argumentation frameworks (Section 4.2). A comparison with other related deontic systems, such as Nute\u2019s defeasible deontic logic [22, 21] and Horty\u2019s default-based deontic logic [13, 10, 11, 15] is left for an extended version of this article.\n13Caminada\u2019s HY-arguments from [2] are similar in spirit to this less skeptical proposal."}, {"heading": "4.1 Input/output logic", "text": "Like the constrained input/output (I/O) logics from [19], the DAFs defined here are tools for detaching conditional obligations relative to a set of inputs and constraints. Unlike most I/O logics, none of these DAFs validates strengthening of the antecedent (SA) for conditional obligations \u2013 from A \u21d2 C to infer (A \u2227 B) \u21d2 C. Unrestricted (SA) is counter-intuitive if we allow for conflict-resolution via logical analysis as defined Section 3.1.1, since it allows the unrestricted derivation of more specific from less specific conditional obligations.14\nExample 9 (DAF and I/O logic). Let \u03939 = {p, p \u21d2 q, p \u21d2 \u00acr, q \u21d2 r}. We construct the following arguments on the basis of \u03939:\na1: \u3008Oq : p, p \u21d2 q\u3009 a3: \u3008Or : a1, q \u21d2 r\u3009 a2 \u3008O\u00acr : p, p \u21d2 \u00acr\u3009\nSince a2 and a3 attack each other in view of Definition 6, a2, a3 6\u2208 G(\u03939), while a1 \u2208 G(\u03939). Consequently, \u03939 6\u22a2DAF Or and \u03939 6\u22a2DAF O\u00acr while \u03939 \u22a2DAF Oq.\nIn constrained I/O logic, triggered conditional obligations in the input are divided into maximally consistent subsets (MCSs). \u0393\u21d29 has three MCSs: {p \u21d2 q, q \u21d2 \u00acr}, {p \u21d2 q, p \u21d2 r}, and {q \u21d2 \u00acr, p \u21d2 r}. In [19] two ways are presented for dealing with conflicts and constraints: via a full meet operation on the generated MCSs, or via a full join operation on the generated MCSs. The first approach gives us none of q, r, and \u00acr for \u03939. The second gives us all three.\nSome of the I/O logics defined in e.g. [18, 19, 24] validate intuitively appealing rules which are not generally valid in our DAFs, such as the rule (OR) \u2013 from A \u21d2 C and B \u21d2 C to infer (A \u2228B) \u21d2 C. A detailed study of the appeal and implementation of (OR) and similar rules in the present argumentative setting is left for future investigation."}, {"heading": "4.2 Formal argumentation", "text": "Several ways of modeling normative reasoning on the basis of formal argumentation have been proposed in the literature. For instance, the approach in [8] is based on bipolar abstract argumentation frameworks. Dung\u2019s abstract argumentation frameworks are enriched with a support relation that is defined over the set of abstract arguments. This device is used to express deontic conditionals. A similar idea is used in [23] where a relation for evidential support is introduced. Argumentation schemes of normative reasoning are there expressed by means of Prolog-like predicates and subsequently translated into an argumentation framework. Here, we follow the tradition of structured or instantiated argumentation in which no support relation between arguments is needed. In our approach conditional obligations are modeled by a dyadic operator \u21d2 that\n14In [29] an I/O system is presented which invalidates (SA) in the context of exempted permissions which are subject to conflict-resolution via logical analysis (specificity).\nis part of the object language. Arguments consist of sequences of applications of factual and deontic detachment. As a consequence, for instance, evidential or factual support is an intrinsic feature of our arguments and is modeled via the factual detachment rule.\nThe general setting of our DAFs is close to ASPIC+. For instance, in the dynamic legal argumentation systems (in short, DLAS) from [26], deontic conditionals are also modeled via a defeasible conditional in the object language. There are several differences to our approach. For instance, our conditionals are not restricted to conjunctions of literals as antecedents. As a consequence we needed to define a strong fact attack rule (Def. 5) that, in order to avoid contamination problems (see Ex. 2), warrants that arguments with inconsistent supports are defeated.15 Our fact attack and our shadow attack rules do not conform to the standard attack types defined in ASPIC+ (rebutting, undercutting, and undermining). Our conflict attacks can be seen as forms of ASPIC+-type rebuttals where the contrary of OA is defined by O\u00acA.\nUnlike DLAS or Horty\u2019s deontic default logics, we follow the tradition in deontic logic to have a dedicated operator O for unconditional obligations which, for instance, allows to formally distinguish between cases of deontic and cases of factual detachment.\nRecently, van der Torre & Villata extended the DLAS approach with deontic modalities [32], adopting the input/output methodology from Section 4.1. The resulting systems, like DAF, allow for versions of the factual and deontic detachment rules. Moreover, they allow for the representation of permissive norms. Unlike DAF, and unlike the I/O logics from Section 4.1, these systems do not have inheritance (weakening) or aggregation rules.\nAnother approach in which formal argumentation is used for the analysis of traditional problems of deontic logic, such as contrary-to-duty and specificity cases is [31]. There, arguments are Gentzen-type sequents in the language of standard deontic logic and conditionals are expressed using material implication. One drawback which is avoided in our setting is that there conditionals are contrapositable and subject to strengthening of the antecedent."}, {"heading": "5 Outlook", "text": "We presented a basic logic, DAF, for detaching conditional obligations based on Dung\u2019s grounded semantics for formal argumentation. We extended DAF with mechanisms for conflict-resolution and for the anticipation of conflicts and violations. For now, these mechanisms mainly serve to illustrate the modularity of our framework. A detailed study of e.g. different approaches to prioritized reasoning, or different conceptions of specificity-based conflict-resolution, is left for an extended companion paper.\nWe conclude by mentioning three challenges for future research. The first is to include permission statements. The second is to increase the \u2018logicality\u2019 of\n15Other solutions to this problem have been proposed, e.g., in [33].\nour framework by allowing for the nesting and for the truth-functional combination of formulas of the form OA,A \u21d2 B, or A. The third is to extend our focus beyond grounded extensions, and to study how our framework behaves when subjected to different types of acceptability semantics for formal argumentation. Working with Dung\u2019s preferred semantics [6], for instance, allows for the derivation of so-called floating conclusions [12, 17]."}], "references": [{"title": "Dialogues and HY-arguments", "author": ["M. Caminada"], "venue": "in: J. Delgrande and T. Schaub, editors, 10th International Workshop on Non-Monotonic Reasoning (NMR", "citeRegEx": "2", "shortCiteRegEx": "2", "year": 2004}, {"title": "On the evaluation of argumentation formalisms", "author": ["M. Caminada", "L. Amgoud"], "venue": "Artificial Intelligence", "citeRegEx": "3", "shortCiteRegEx": "3", "year": 2007}, {"title": "Deontic logic and contrary-to-duties", "author": ["J. Carmo", "A. Jones"], "venue": "Handbook of Philosophical Logic (2nd edition)", "citeRegEx": "4", "shortCiteRegEx": "4", "year": 2002}, {"title": "Compiling specificity into approaches to nonmonotonic reasoning", "author": ["J. Delgrande", "T. Schaub"], "venue": "Artificial Intelligence", "citeRegEx": "5", "shortCiteRegEx": "5", "year": 1997}, {"title": "On the acceptability of arguments and its fundamental role in nonmonotonic reasoning, logic programming and n-person games", "author": ["P. Dung"], "venue": "Artificial Intelligence", "citeRegEx": "6", "shortCiteRegEx": "6", "year": 1995}, {"title": "An argument-based approach to reasoning with specifity", "author": ["P. Dung", "T. Son"], "venue": "Artificial Intelligence", "citeRegEx": "7", "shortCiteRegEx": "7", "year": 2001}, {"title": "Bipolar argumentation frames and contrary to duty obligations, preliminary report", "author": ["D. Gabbay"], "venue": "Computational Logic in Multi-Agent Systems: Proceedings of the 13th International Workshop, CLIMA XIII,", "citeRegEx": "8", "shortCiteRegEx": "8", "year": 2012}, {"title": "Prioritized conditional imperatives: problems and a new proposal, Autonomous Agents and Multi-Agent Systems", "author": ["J. Hansen"], "venue": null, "citeRegEx": "9", "shortCiteRegEx": "9", "year": 2008}, {"title": "Deontic logic as founded on nonmonotonic logic", "author": ["J. Horty"], "venue": "Annals of Mathematics and Artificial Intelligence", "citeRegEx": "10", "shortCiteRegEx": "10", "year": 1993}, {"title": "Nonmonotonic foundations for deontic logic", "author": ["J. Horty"], "venue": "Defeasible Deontic Logic: Essays in Nonmonotonic Normative Reasoning, Kluwer Academic Publishers,", "citeRegEx": "11", "shortCiteRegEx": "11", "year": 1997}, {"title": "Skepticism and floating conclusions", "author": ["J. Horty"], "venue": "Artificial Intelligence", "citeRegEx": "12", "shortCiteRegEx": "12", "year": 2002}, {"title": "Reasoning with moral conflicts, No\u00fbs", "author": ["J. Horty"], "venue": null, "citeRegEx": "13", "shortCiteRegEx": "13", "year": 2003}, {"title": "Defaults with priorities", "author": ["J. Horty"], "venue": "Journal of Philosophical Logic", "citeRegEx": "14", "shortCiteRegEx": "14", "year": 2007}, {"title": "Reasons as Defaults", "author": ["J. Horty"], "venue": "Oxford University Press, 2012.", "citeRegEx": "15", "shortCiteRegEx": null, "year": 2012}, {"title": "Floating conclusions and zombie paths: two deep difficulties in the \u201cdirectly skeptical\u201d approach to defeasible inheritance nets", "author": ["D. Makinson", "K. Schlechta"], "venue": "Artificial Intelligence", "citeRegEx": "17", "shortCiteRegEx": "17", "year": 1991}, {"title": "Constraints for input/output logics", "author": ["D. Makinson", "L. van der Torre"], "venue": "Journal of Philosophical Logic", "citeRegEx": "19", "shortCiteRegEx": "19", "year": 2001}, {"title": "The ASPIC+ framework for structured argumentation: a tutorial", "author": ["S. Modgil", "H. Prakken"], "venue": "Argument & Computation", "citeRegEx": "20", "shortCiteRegEx": "20", "year": 2014}, {"title": "Defeasible Deontic Logic: Essays in Nonmonotonic Normative Reasoning", "author": ["D. Nute", "editor"], "venue": "Kluwer Academic Publishers, 1997.", "citeRegEx": "22", "shortCiteRegEx": null, "year": 1997}, {"title": "An argumentation inspired heuristic for resolving normative conflict, in: Proceedings of the fifth workshop on coordination, organizations, institutionsm and norms in agent", "author": ["N. Oren", "M. Luck", "S. Miles", "T. Norman"], "venue": null, "citeRegEx": "23", "shortCiteRegEx": "23", "year": 2008}, {"title": "Sing and dance!", "author": ["X. Parent", "L. van der Torre"], "venue": "Input/output logics without weakening,", "citeRegEx": "24", "shortCiteRegEx": "24", "year": 2014}, {"title": "An abstract framework for argumentation with structured arguments", "author": ["H. Prakken"], "venue": "Argument and Computation", "citeRegEx": "25", "shortCiteRegEx": "25", "year": 2011}, {"title": "Formalising arguments about norms", "author": ["H. Prakken", "G. Sartor"], "venue": "in: JU- RIX,", "citeRegEx": "26", "shortCiteRegEx": "26", "year": 2013}, {"title": "The Right and the Good", "author": ["D.W. Ross"], "venue": "Oxford University Press, 1930.", "citeRegEx": "28", "shortCiteRegEx": null, "year": 1930}, {"title": "A theory of permission based on the notion of derogation", "author": ["A. Stolpe"], "venue": "Journal of Applied Logic", "citeRegEx": "29", "shortCiteRegEx": "29", "year": 2010}, {"title": "A deontic logic framework allowing for factual detachment", "author": ["C. Stra\u00dfer"], "venue": "Journal of Applied Logic", "citeRegEx": "30", "shortCiteRegEx": "30", "year": 2011}, {"title": "An ASPIC-based legal argumentation framework for deontic reasoning", "author": ["L. van der Torre", "S. Villata"], "venue": "Computational Models of Argument - Proceedings of COMMA", "citeRegEx": "32", "shortCiteRegEx": "32", "year": 2014}], "referenceMentions": [{"referenceID": 4, "context": "We borrow Dung\u2019s semantics [6] for evaluating arguments relative to the attack relations that hold between them.", "startOffset": 27, "endOffset": 30}, {"referenceID": 22, "context": "They can be interpreted as all-things-considered obligations \u2013 following Ross [28] \u2013 or output obligations \u2013 following Makinson & van der Torre [18, 19].", "startOffset": 78, "endOffset": 82}, {"referenceID": 15, "context": "They can be interpreted as all-things-considered obligations \u2013 following Ross [28] \u2013 or output obligations \u2013 following Makinson & van der Torre [18, 19].", "startOffset": 144, "endOffset": 152}, {"referenceID": 4, "context": "Dung [6] showed that for every AF there is a grounded extension, it is unique, and it can be constructed as follows.", "startOffset": 5, "endOffset": 8}, {"referenceID": 4, "context": "On Dung\u2019s abstract approach [6], arguments are basic units of analysis the internal structure of which is not represented.", "startOffset": 28, "endOffset": 31}, {"referenceID": 16, "context": "[20].", "startOffset": 0, "endOffset": 4}, {"referenceID": 0, "context": "Example 4 (Failure of properties 4 and 5, adapted from [2]).", "startOffset": 55, "endOffset": 58}, {"referenceID": 5, "context": "[7, 5]) and deontic logic (see e.", "startOffset": 0, "endOffset": 6}, {"referenceID": 3, "context": "[7, 5]) and deontic logic (see e.", "startOffset": 0, "endOffset": 6}, {"referenceID": 2, "context": "[4, 27, 30, 31]).", "startOffset": 0, "endOffset": 15}, {"referenceID": 24, "context": "[4, 27, 30, 31]).", "startOffset": 0, "endOffset": 15}, {"referenceID": 20, "context": "We lift \u2264 to a priority ordering over arguments via the weakest link principle: an argument is only as strong as the weakest priority conditional used in its construction [25].", "startOffset": 171, "endOffset": 175}, {"referenceID": 7, "context": "[9, 14, 15].", "startOffset": 0, "endOffset": 11}, {"referenceID": 12, "context": "[9, 14, 15].", "startOffset": 0, "endOffset": 11}, {"referenceID": 13, "context": "[9, 14, 15].", "startOffset": 0, "endOffset": 11}, {"referenceID": 15, "context": "But what about obligations that commit us to violations or conflicts? Consider the following example, adapted from [16, 19].", "startOffset": 115, "endOffset": 123}, {"referenceID": 0, "context": "Shadow arguments are similar in spirit to Caminada\u2019s HY-arguments from [2].", "startOffset": 71, "endOffset": 74}, {"referenceID": 17, "context": "A comparison with other related deontic systems, such as Nute\u2019s defeasible deontic logic [22, 21] and Horty\u2019s default-based deontic logic [13, 10, 11, 15] is left for an extended version of this article.", "startOffset": 89, "endOffset": 97}, {"referenceID": 11, "context": "A comparison with other related deontic systems, such as Nute\u2019s defeasible deontic logic [22, 21] and Horty\u2019s default-based deontic logic [13, 10, 11, 15] is left for an extended version of this article.", "startOffset": 138, "endOffset": 154}, {"referenceID": 8, "context": "A comparison with other related deontic systems, such as Nute\u2019s defeasible deontic logic [22, 21] and Horty\u2019s default-based deontic logic [13, 10, 11, 15] is left for an extended version of this article.", "startOffset": 138, "endOffset": 154}, {"referenceID": 9, "context": "A comparison with other related deontic systems, such as Nute\u2019s defeasible deontic logic [22, 21] and Horty\u2019s default-based deontic logic [13, 10, 11, 15] is left for an extended version of this article.", "startOffset": 138, "endOffset": 154}, {"referenceID": 13, "context": "A comparison with other related deontic systems, such as Nute\u2019s defeasible deontic logic [22, 21] and Horty\u2019s default-based deontic logic [13, 10, 11, 15] is left for an extended version of this article.", "startOffset": 138, "endOffset": 154}, {"referenceID": 0, "context": "Caminada\u2019s HY-arguments from [2] are similar in spirit to this less skeptical proposal.", "startOffset": 29, "endOffset": 32}, {"referenceID": 15, "context": "Like the constrained input/output (I/O) logics from [19], the DAFs defined here are tools for detaching conditional obligations relative to a set of inputs and constraints.", "startOffset": 52, "endOffset": 56}, {"referenceID": 15, "context": "In [19] two ways are presented for dealing with conflicts and constraints: via a full meet operation on the generated MCSs, or via a full join operation on the generated MCSs.", "startOffset": 3, "endOffset": 7}, {"referenceID": 15, "context": "[18, 19, 24] validate intuitively appealing rules which are not generally valid in our DAFs, such as the rule (OR) \u2013 from A \u21d2 C and B \u21d2 C to infer (A \u2228B) \u21d2 C.", "startOffset": 0, "endOffset": 12}, {"referenceID": 19, "context": "[18, 19, 24] validate intuitively appealing rules which are not generally valid in our DAFs, such as the rule (OR) \u2013 from A \u21d2 C and B \u21d2 C to infer (A \u2228B) \u21d2 C.", "startOffset": 0, "endOffset": 12}, {"referenceID": 6, "context": "For instance, the approach in [8] is based on bipolar abstract argumentation frameworks.", "startOffset": 30, "endOffset": 33}, {"referenceID": 18, "context": "A similar idea is used in [23] where a relation for evidential support is introduced.", "startOffset": 26, "endOffset": 30}, {"referenceID": 23, "context": "In [29] an I/O system is presented which invalidates (SA) in the context of exempted permissions which are subject to conflict-resolution via logical analysis (specificity).", "startOffset": 3, "endOffset": 7}, {"referenceID": 21, "context": "For instance, in the dynamic legal argumentation systems (in short, DLAS) from [26], deontic conditionals are also modeled via a defeasible conditional in the object language.", "startOffset": 79, "endOffset": 83}, {"referenceID": 25, "context": "Recently, van der Torre & Villata extended the DLAS approach with deontic modalities [32], adopting the input/output methodology from Section 4.", "startOffset": 85, "endOffset": 89}, {"referenceID": 4, "context": "Working with Dung\u2019s preferred semantics [6], for instance, allows for the derivation of so-called floating conclusions [12, 17].", "startOffset": 40, "endOffset": 43}, {"referenceID": 10, "context": "Working with Dung\u2019s preferred semantics [6], for instance, allows for the derivation of so-called floating conclusions [12, 17].", "startOffset": 119, "endOffset": 127}, {"referenceID": 14, "context": "Working with Dung\u2019s preferred semantics [6], for instance, allows for the derivation of so-called floating conclusions [12, 17].", "startOffset": 119, "endOffset": 127}], "year": 2016, "abstractText": "We present a general formal argumentation system for dealing with the detachment of conditional obligations. Given a set of facts, constraints, and conditional obligations, we answer the question whether an unconditional obligation is detachable by considering reasons for and against its detachment. For the evaluation of arguments in favor of detaching obligations we use a Dung-style argumentation-theoretical semantics. We illustrate the modularity of the general framework by considering some extensions, and we compare the framework to some related approaches from the literature.", "creator": "LaTeX with hyperref package"}}}