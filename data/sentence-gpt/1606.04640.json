{"id": "1606.04640", "review": {"conference": "ACL", "VERSION": "v1", "DATE_OF_SUBMISSION": "15-Jun-2016", "title": "Siamese CBOW: Optimizing Word Embeddings for Sentence Representations", "abstract": "We present the Siamese Continuous Bag of Words (Siamese CBOW) model, a neural network for efficient estimation of high-quality sentence embeddings. Averaging the embeddings of words in a sentence has proven to be a surprisingly successful and efficient way of obtaining sentence embeddings. However, word embeddings trained with the methods currently available are not optimized for the task of sentence representation, and, thus, likely to be suboptimal. Siamese CBOW handles this problem by training word embeddings directly for the purpose of being averaged. The underlying neural network learns word embeddings by predicting, from a sentence representation, its surrounding sentences. We show the robustness of the Siamese CBOW model by evaluating it on 20 datasets stemming from a wide variety of sources. In order to explore the effect of the integrated neural network on word embeddings, we chose to focus our attention on the term embeddings in the present research. The dataset was designed to be an initial attempt to understand why the model was chosen for this task, but we also sought a more precise understanding of the neural network that was chosen to represent the input and input parameters in this study.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "histories": [["v1", "Wed, 15 Jun 2016 04:47:43 GMT  (955kb,D)", "http://arxiv.org/abs/1606.04640v1", "Accepted as full paper at ACL 2016, Berlin. 11 pages"]], "COMMENTS": "Accepted as full paper at ACL 2016, Berlin. 11 pages", "reviews": [], "SUBJECTS": "cs.CL", "authors": ["tom kenter", "alexey borisov", "maarten de rijke"], "accepted": true, "id": "1606.04640"}, "pdf": {"name": "1606.04640.pdf", "metadata": {"source": "CRF", "title": "Siamese CBOW: Optimizing Word Embeddings for Sentence Representations", "authors": ["Tom Kenter", "Alexey Borisov", "Maarten de Rijke"], "emails": ["tom.kenter@uva.nl", "alborisov@yandex-team.ru", "derijke@uva.nl"], "sections": [{"heading": "1 Introduction", "text": "Word embeddings have proven to be beneficial in a variety of tasks in NLP such as machine translation (Zou et al., 2013), parsing (Chen and Manning, 2014), semantic search (Reinanda et al., 2015; Voskarides et al., 2015), and tracking the meaning of words and concepts over time (Kim et al., 2014; Kenter et al., 2015). It is not evident, however, how word embeddings should be combined to represent larger pieces of text, like sentences, paragraphs or documents. Surprisingly, simply averaging word embeddings of all words in a text has proven to be a strong baseline or feature across a multitude of tasks (Faruqui et al., 2014; Yu et al., 2014; Gershman and Tenenbaum, 2015; Kenter and de Rijke, 2015).\nWord embeddings, however, are not optimized specifically for representing sentences. In this paper we present a model for obtaining word embeddings that are tailored specifically for the task of averaging them. We do this by directly including a comparison of sentence embeddings\u2014the averaged embeddings of the words they contain\u2014in the cost function of our network.\nWord embeddings are typically trained in a fast and scalable way from unlabeled training data. As the training data is unlabeled, word embeddings are usually not task-specific. Rather, word embeddings trained on a large training corpus, like the ones from (Collobert and Weston, 2008; Mikolov et al., 2013b) are employed across different tasks (Socher et al., 2012; Kenter and de Rijke, 2015; Hu et al., 2014). These two qualities\u2014(i) being trainable from large quantities of unlabeled data in a reasonable amount of time, and (ii) robust performance across different tasks\u2014are highly desirable and allow word embeddings to be used in many large-scale applications. In this work we aim to optimize word embeddings for sentence representations in the same manner. We want to produce general purpose sentence embeddings that should score robustly across multiple test sets, and we want to leverage large amounts of unlabeled training material.\nIn the word2vec algorithm, Mikolov et al. (2013a) construe a supervised training criterion for obtaining word embeddings from unsupervised data, by predicting, for every word, its surrounding words. We apply this strategy at the sentence level, where we aim to predict a sentence from its adjacent sentences (Kiros et al., 2015; Hill et al., 2016). This allows us to use unlabeled training data, which is easy to obtain; the only restriction is that documents need to be split into sentences and that the order between sentences is preserved.\nThe main research question we address is\nar X\niv :1\n60 6.\n04 64\n0v 1\n[ cs\n.C L\n] 1\n5 Ju\nn 20\n16\nwhether directly optimizing word embeddings for the task of being averaged to produce sentence embeddings leads to word embeddings that are better suited for this task than word2vec does. Therefore, we test the embeddings in an unsupervised learning scenario. We use 20 evaluation sets that stem from a wide variety of sources (newswire, video descriptions, dictionary descriptions, microblog posts). Furthermore, we analyze the time complexity of our method and compare it to our baselines methods.\nSummarizing, our main contributions are: \u2022 We present Siamese CBOW, an efficient neural\nnetwork architecture for obtaining high-quality word embeddings, directly optimized for sentence representations; \u2022 We evaluate the embeddings produced by\nSiamese CBOW on 20 datasets, originating from a range of sources (newswire, tweets, video descriptions), and demonstrate the robustness of embeddings across different settings."}, {"heading": "2 Siamese CBOW", "text": "We present the Siamese Continuous Bag of Words (CBOW) model, a neural network for efficient estimation of high-quality sentence embeddings. Quality should manifest itself in embeddings of semantically close sentences being similar to one another, and embeddings of semantically different sentences being dissimilar. An efficient and surprisingly successful way of computing a sentence embedding is to average the embeddings of its constituent words. Recent work uses pre-trained word embeddings (such as word2vec and GloVe) for this task, which are not optimized for sentence representations. Following these approaches, we compute sentence embeddings by averaging word embeddings, but we optimize word embeddings directly for the purpose of being averaged."}, {"heading": "2.1 Training objective", "text": "We construct a supervised training criterion by having our network predict sentences occurring next to each other in the training data. Specifically, for a pair of sentences (si, sj), we define a probability p(si, sj) that reflects how likely it is for the sentences to be adjacent to one another in the training data. We compute the probability p(si, sj) using a softmax function:\np\u03b8(si, sj) = ecos(s\n\u03b8 i ,s \u03b8 j )\u2211\ns\u2032\u2208S e cos(s\u03b8i ,s\n\u03b8 \u2032 ) , (1)\nwhere s\u03b8x denotes the embedding of sentence sx, based on the model parameters \u03b8. In theory, the summation in the denominator of Equation 1 should range over all possible sentences S, which is not feasible in practice. Therefore, we replace the set S with the union of the set S+ of sentences that occur next to the sentence si in the training data, and S\u2212, a set of n randomly chosen sentences that are not observed next to the sentence si in the training data. The loss function of the network is categorical cross-entropy:\nL = \u2212 \u2211\nsj\u2208{S+ \u222aS\u2212}\np(si, sj) \u00b7 log(p\u03b8(si, sj)),\nwhere p(\u00b7) is the target probability the network should produce, and p\u03b8(\u00b7) is the prediction it estimates based on parameters \u03b8, using Equation 1. The target distribution simply is:\np(si, sj) =\n{ 1 |S+| , if sj \u2208 S +\n0, if sj \u2208 S\u2212.\nI.e., if there are 2 positive examples (the sentences preceding and following the input sentence) and 2 negative examples, the target distribution is (0.5, 0.5, 0, 0)."}, {"heading": "2.2 Network architecture", "text": "Figure 1 shows the architecture of the proposed Siamese CBOW network. The input is a projection layer that selects embeddings from a word embedding matrixW (that is shared across inputs) for a given input sentence. The word embeddings are averaged in the next layer, which yields a sentence representation with the same dimensionality as the input word embeddings (the boxes labeled averagei in Figure 1). The cosine similarities between the sentence representation for sentencei and the other sentences are calculated in the penultimate layer and a softmax is applied in the last layer to produce the final probability distribution."}, {"heading": "2.3 Training", "text": "The weights in the word embedding matrix are the only trainable parameters in the Siamese CBOW network. They are updated using stochastic gradient descent. The initial learning rate is monotonically decreased proportionally to the number of training batches."}, {"heading": "3 Experimental Setup", "text": "To test the efficacy of our siamese network for producing sentence embeddings we use multiple\ntest sets. We use Siamese CBOW to learn word embeddings from an unlabeled corpus. For every sentence pair in the test sets, we compute two sentence representations by averaging the word embeddings of each sentence. Words that are missing from the vocabulary and, hence, have no word embedding, are omitted. The cosine similarity between the two sentence vectors is produced as a final semantic similarity score.\nAs we want a clean way to directly evaluate the embeddings on multiple sets we train our model and the models we compare with on exactly the same training data. We do not compute extra features, perform extra preprocessing steps or incorporate the embeddings in supervised training schemes. Additional steps like these are very likely to improve evaluation scores, but they would obscure our main evaluation purpose in this paper, which is to directly test the embeddings."}, {"heading": "3.1 Data", "text": "We use the Toronto Book Corpus1 to train word embeddings. This corpus contains 74,004,228 already pre-processed sentences in total, which are made up of 1,057,070,918 tokens, originating from 7,087 unique books. In our experiments, we consider tokens appearing 5 times or more, which leads to a vocabulary of 315,643 words."}, {"heading": "3.2 Baselines", "text": "We employ two baselines for producing sentence embeddings in our experiments. We obtain similarity scores between sentence pairs from the baselines in the same way as the ones produced by Siamese CBOW, i.e., we calculate the cosine similarity between the sentence embeddings they produce.\n1The corpus can be downloaded from http://www. cs.toronto.edu/\u02dcmbweb/; cf. (Zhu et al., 2015).\nWord2vec We average word embeddings trained with word2vec.2 We use both architectures, Skipgram and CBOW, and apply default settings: minimum word frequency 5, word embedding size 300, context window 5, sample threshold 10-5, no hierarchical softmax, 5 negative examples.\nSkip-thought As a second baseline we use the sentence representations produced by the skipthought architecture (Kiros et al., 2015).3 Skipthought is a recently proposed method that learns sentence representations in a different way from ours, by using recurrent neural networks. This allows it to take word order into account. As it trains sentence embeddings from unlabeled data, like we do, it is a natural baseline to consider.\nBoth methods are trained on the Toronto Book Corpus, the same corpus used to train Siamese CBOW. We should note that as we use skipthought vectors as trained by Kiros et al. (2015), skip-thought has an advantage over both word2vec and Siamese CBOW as the vocabulary used for encoding sentences contains 930,913 words, three times the size of the vocabulary that we use."}, {"heading": "3.3 Evaluation", "text": "We use 20 SemEval datasets from the SemEval semantic textual similarity task in 2012, 2013, 2014 and 2015 (Agirre et al., 2012; Agirre et al., 2013; Agirre et al., 2014; Agirre et al., 2015), which consist of sentence pairs from a wide array of sources (e.g., newswire, tweets, video descriptions) that have been manually annotated by multiple human assessors on a 5 point scale (1: semantically unrelated, 5: semantically similar). In the ground truth, the final similarity score for every sentence pair is\n2The code is available from https://code. google.com/archive/p/word2vec/.\n3The code and the trained models can be downloaded from https://github.com/ryankiros/ skip-thoughts/.\nthe mean of the annotator judgements, and as such can be a floating point number like 2.685.\nThe evaluation metric used by SemEval, and hence by us, is Pearson\u2019s r. As Spearman\u2019s r is often reported as well, we do so too.\nStatistical significance To see whether Siamese CBOW yields significantly different scores for the same input sentence pairs from word2vec CBOW\u2014the method it is theoretically most similar to\u2014we compute Wilcoxon signed-rank test statistics between all runs on all evaluation sets. Runs are considered statistically significantly different for p-values < 0.0001."}, {"heading": "3.4 Network", "text": "To comply with results reported in other research (Mikolov et al., 2013b; Kusner et al., 2015) we\nfix the embedding size to 300 and only consider words appearing 5 times or more in the training corpus. We use 2 negative examples (see \u00a74.2.2 for an analysis of different settings). The embeddings are initialized randomly, by drawing from a normal distribution with \u00b5 = 0.0 and \u03c3 = 0.01. The batch size is 100. The initial learning rate \u03b1 is 0.0001, which we obtain by observing the loss on the training data. Training consists of one epoch.\nWe use Theano (Theano Development Team, 2016) to implement our network.4 We ran our experiments on GPUs in the DAS5 cluster (Bal et al., 2016).\n4The code for Siamese CBOW is available under an open-source license at https://bitbucket.org/ TomKenter/siamese-cbow."}, {"heading": "4 Results", "text": "In this section we present the results of our experiments, and analyze the stability of Siamese CBOW with respect to its (hyper)parameters."}, {"heading": "4.1 Main experiments", "text": "In Table 1, the results of Siamese CBOW on 20 SemEval datasets are displayed, together with the results of the baseline systems. As we can see from the table, Siamese CBOW outperforms the baselines in the majority of cases (14 out of 20). The very low scores of skip-thought on MSRpar appear to be a glitch, which we will ignore.\nIt is interesting to see that for the set with the highest average sentence length (2013 SMT, with 24.7 words per sentence on average) Siamese CBOW is very close to skip-thought, the best performing baseline. In terms of lexical term overlap, unsurprisingly, all methods have trouble with the sets with little overlap (2013 FNWN, 2015 answers-forums, which both have 7% lexical overlap). It is interesting to see, however, that for the next two sets (2015 belief and 2012 MSRpar, 11% and 14% overlap respectively) Siamese CBOW manages to get the best performance. The highest performance on all sets is 0.7315 Pearson\u2019s r of Siamese CBOW on the 2014 tweet-news set. This figure is not very far from the best performing SemEval run that year which has 0.792 Pearson\u2019s r. This is remarkable as Siamese CBOW is completely unsupervised, while the NTNU system which scored best on this set (Lynum et al., 2014) was optimized using multiple training sets.\nIn recent work, Hill et al. (2016) present FastSent, a model similar to ours (see \u00a75 for a more elaborate discussion); results are not reported for all evaluation sets we use, and hence, we compare the results of FastSent and Siamese CBOW separately, in Table 2.\nFastSent and Siamese CBOW each outperform the other on half of the evaluation sets, which clearly suggests that the differences between the two methods are complementary.5"}, {"heading": "4.2 Analysis", "text": "Next, we investigate the stability of Siamese CBOW with respect to its hyper-parameters. In\n5The comparison is to be interpreted with caution as it is not evident what vocabulary was used for the experiments in (Hill et al., 2016); hence, the differences observed here might simply be due to differences in vocabulary coverage.\nparticular, we look into stability across iterations, different numbers of negative examples, and the dimensionality of the embeddings. Other parameter settings are set as reported in \u00a73.4."}, {"heading": "4.2.1 Performance across iterations", "text": "Ideally, the optimization criterion of a learning algorithm ranges over the full domain of its loss function. As discussed in \u00a72, our loss function only observes a sample. As such, convergence is not guaranteed. Regardless, an ideal learning system should not fluctuate in terms of performance relative to the amount of training data it observes, provided this amount is substantial: as training proceeds the performance should stabilize.\nTo see whether the performance of Siamese CBOW fluctuates during training we monitor it during 5 epochs; at every 10,000,000 examples, and at the end of every epoch. Figure 2 displays the results for all 20 datasets. We observe that on the majority of datasets the performance shows very little variation. There are three exceptions. The performance on the 2014 deft-news dataset steadily decreases while the performance on 2013 OnWN steadily increases, though both seem to stabilize at the end of epoch 5. The most notable exception, however, is 2012 MSRvid, where the score, after an initial increase, drops consistently. This effect might be explained by the fact that this evaluation set primarily consists of very short sentences\u2014it has the lowest average sentence length of all set: 6.63 with a standard deviation of 1.812. Therefore, a 300-dimensional representation appears too large for this dataset; this hypothesis is supported by the fact that 200- dimensional embeddings work slightly better for this dataset (see Figure 4)."}, {"heading": "4.2.2 Number of negative examples", "text": "In Figure 3, the results of Siamese CBOW in terms of Pearson\u2019s r are plotted for different numbers of negative examples. We observe that on most sets, the number of negative examples has limited effect on the performance of Siamese CBOW. Choosing a higher number, like 10, occasionally leads to slightly better performance, e.g., on the 2013 FNWN set. However, a small number like 1 or 2 typically suffices, and is sometimes markedly better, e.g., in the case of the 2015 belief set. As\na high number of negative examples comes at a substantial computational cost, we conclude from the findings presented here that, although Siamese CBOW is robust against different settings of this\nparameter, setting the number of negative examples to 1 or 2 should be the default choice."}, {"heading": "4.2.3 Number of dimensions", "text": "Figure 4 plots the results of Siamese CBOW for different numbers of vector dimensions. We observe from the figure that for some sets (most notably 2014 deft-forum, 2015 answ-forums and 2015 belief) increasing the number of embedding dimensions consistently yields higher performance. A dimensionality that is too low (50 or\n100) invariably leads to inferior results. As, similar to a higher number of negative examples, a higher embedding dimension leads to higher computational costs, we conclude from these findings\nthat a moderate number of dimensions (200 or 300) is to be preferred."}, {"heading": "4.3 Time complexity", "text": "For learning systems, time complexity comes into play in the training phase and in the prediction phase. For an end system employing sentence embeddings, the complexity at prediction time is the most crucial factor, which is why we omit an analysis of training complexity. We focus on comparing the time complexity for generating sentence embeddings for Siamese CBOW, and compare it to the baselines we use.\nThe complexity of all algorithms we consider is O(n), i.e., linear in the number of input terms. As in practice the number of arithmetic operations is the critical factor in determining computing time, we will now focus on these.\nBoth word2vec and the Siamese CBOW compute embeddings of a text T = t1, . . . , t|T | by averaging the term embeddings. This requires |T |\u22121 vector additions, and 1 multiplication by a scalar value (namely, 1/|T |). The skip-thought model is a recurrent neural network with GRU cells, which computes a set of equations for every term t in T , which we reprint for reference (Kiros et al., 2015):\nrt = \u03c3(Wrx t +Urh t\u22121) zt = \u03c3(Wzx t +Uzh t\u22121) h t = tanh(Wxt +U(rt ht\u22121)) ht = (1\u2212 zt) ht\u22121 + zt ht\nAs we can see from the formulas, there are 5|T | vector additions (+/-), 4|T | element-wise multiplications by a vector, 3|T | element-wise operations and 6|T | matrix multiplications, of which the latter, the matrix multiplications, are most expensive.\nThis considerable difference in numbers of arithmetic operations is also observed in practice. We run tests on a single CPU, using identical code for extracting sentences from the evaluation sets,\nfor every method. The sentence pairs are presented one by one to the models. We disregard the time it takes to load models. Speedups might of course be gained for all methods by presenting the sentences in batches to the models, by computing sentence representations in parallel and by running code on a GPU. However, as we are interested in the differences between the systems, we run the most simple and straightforward scenario. Table 3 lists the number of seconds each method takes to generate and compare sentence embeddings for an input sentence pair. The difference between word2vec and Siamese CBOW is because of a different implementation of word lookup.\nWe conclude from the observations presented here, together with the results in \u00a74.1, that in a setting where speed at prediction time is pivotal, simple averaging methods like word2vec or Siamese CBOW are to be preferred over more involved methods like skip-thought."}, {"heading": "4.4 Qualitative analysis", "text": "As Siamese CBOW directly averages word embeddings for sentences, we expect it to learn that words with little semantic impact have a low vector norm. Indeed, we find that the 10 words with lowest vector norm are to, of, and, the, a, in, that, with, on, and as. At the other side of the spectrum we find many personal pronouns: had, they, we, me, my, he, her, you, she, I, which is natural given that the corpus on which we train consists of fiction, which typically contains dialogues.\nIt is interesting to see what the differences in related words are between Siamese CBOW and word2vec when trained on the same corpus. For example, for a cosine similarity > 0.6, the words related to her in word2vec space are she, his, my and hers. For Siamese CBOW, the only closely related word is she. Similarly, for the word me, word2vec finds him as most closely related word, while Siamese CBOW comes up with I and my. It seems from these few examples that Siamese CBOW learns to be very strict in choosing which words to relate to each other.\nFrom the results presented in this section we conclude that optimizing word embeddings for the task of being averaged across sentences with Siamese CBOW leads to embeddings that are effective in a large variety of settings. Furthermore, Siamese CBOW is robust to different parameter settings and its performance is stable across itera-\ntions. Lastly, we show that Siamese CBOW is fast and efficient in computing sentence embeddings at prediction time."}, {"heading": "5 Related Work", "text": "A distinction can be made between supervised approaches for obtaining representations of short texts, where a model is optimised for a specific scenario, given a labeled training set, and unsupervised methods, trained on unlabeled data, that aim to capture short text semantics that are robust across tasks. In the first setting, word vectors are typically used as features or network initialisations (Kenter and de Rijke, 2015; Hu et al., 2014; Severyn and Moschitti, 2015; Yin and Schu\u0308tze, 2015). Our work can be classified in the latter category of unsupervised approaches.\nMany models related to the one we present here are used in a multilingual setting (Hermann and Blunsom, 2014b; Hermann and Blunsom, 2014a; Lauly et al., 2014). The key difference between this work and ours is that in a multilingual setting the goal is to predict, from a distributed representation of an input sentence, the same sentence in a different language, whereas our goals is to predict surrounding sentences.\nWieting et al. (2016) apply a model similar to ours in a related but different setting where explicit semantic knowledge is leveraged. As in our setting, word embeddings are trained by averaging them. However, unlike in our proposal, a margin-based loss function is used, which involves a parameter that has to be tuned. Furthermore, to select negative examples, at every training step, a computationally expensive comparison is made between all sentences in the training batch. The most crucial difference is that a large set of phrase pairs explicitly marked for semantic similarity has to be available as training material. Obtaining such high-quality training material is non-trivial, expensive and limits an approach to settings for which such material is available. In our work, we leverage unlabeled training data, of which there is a virtually unlimited amount.\nAs detailed in \u00a72, our network predicts a sentence from its neighbouring sentences. The notion of learning from context sentences is also applied in (Kiros et al., 2015), where a recurrent neural network is employed. Our way of averaging the vectors of words contained in a sentence is more similar to the CBOW architecture\nof word2vec (Mikolov et al., 2013a), in which all context word vectors are aggregated to predict the one omitted word. A crucial difference between our approach and the word2vec CBOW approach is that we compare sentence representations directly, rather than comparing a (partial) sentence representation to a word representation. Given the correspondence between word2vec\u2019s CBOW model and ours, we included it as a baseline in our experiments in \u00a73. As the skip-gram architecture has proven to be a strong baseline too in many settings, we include it too.\nYih et al. (2011) also propose a siamese architecture. Short texts are represented by tf-idf vectors and a linear combination of input weights is learnt by a two-layer fully connected network, which is used to represent the input text. The cosine similarity between pairs of representations is computed, but unlike our proposal, the differences between similarities of a positive and negative sentence pair are combined in a logistic loss function.\nFinally, independently from our work, Hill et al. (2016) also present a log-linear model. Rather than comparing sentence representations to each other, as we propose, words in one sentence are compared to the representation of another sentence. As both input and output vectors are learnt, while we tie the parameters across the entire model, Hill et al. (2016)\u2019s model has twice as many parameters as ours. Most importantly, however, the cost function used in (Hill et al., 2016) is crucially different from ours. As words in surrounding sentences are being compared to a sentence representation, the final layer of their network produces a softmax over the entire vocabulary. This is fundamentally different from the final softmax over cosines between sentence representations that we propose. Furthermore, the softmax over the vocabulary is, obviously, of vocabulary size, and hence grows when bigger vocabularies are used, causing additional computational cost. In our case, the size of the softmax is the number of positive plus negative examples (see \u00a72.1). When the vocabulary grows, this size is unaffected."}, {"heading": "6 Conclusion", "text": "We have presented Siamese CBOW, a neural network architecture that efficiently learns word embeddings optimized for producing sentence representations. The model is trained using only unla-\nbeled text data. It predicts, from an input sentence representation, the preceding and following sentence.\nWe evaluated the model on 20 test sets and show that in a majority of cases, 14 out of 20, Siamese CBOW outperforms a word2vec baseline and a baseline based on the recently proposed skip-thought architecture. As further analysis on various choices of parameters show that the method is stable across settings, we conclude that Siamese CBOW provides a robust way of generating high-quality sentence representations.\nWord and sentence embeddings are ubiquitous and many different ways of using them in supervised tasks have been proposed. It is beyond the scope of this paper to provide a comprehensive analysis of all supervised methods using word or sentence embeddings and the effect Siamese CBOW would have on them. However, it would be interesting to see how Siamese CBOW embeddings would affect results in supervised tasks.\nLastly, although we evaluated Siamese CBOW on sentence pairs, there is no theoretical limitation restricting it to sentences. It would be interesting to see how embeddings for larger pieces of texts, such as documents, would perform in document clustering or filtering tasks."}, {"heading": "Acknowledgments", "text": "The authors wish to express their gratitude for the valuable advice and relevant pointers of the anonymous reviewers. Many thanks to Christophe Van Gysel for implementation-related help. This research was supported by Ahold, Amsterdam Data Science, the Bloomberg Research Grant program, the Dutch national program COMMIT, Elsevier, the European Community\u2019s Seventh Framework Programme (FP7/2007-2013) under grant agreement nr 312827 (VOX-Pol), the ESF Research Network Program ELIAS, the Royal Dutch Academy of Sciences (KNAW) under the Elite Network Shifts project, the Microsoft Research Ph.D. program, the Netherlands eScience Center under project number 027.012.105, the Netherlands Institute for Sound and Vision, the Netherlands Organisation for Scientific Research (NWO) under project nrs 727.011.005, 612.001.116, HOR-11-10, 640.006.013, 612.066.930, CI-1425, SH-322-15, 652.002.001, 612.001.551, the Yahoo Faculty Research and Engagement Program, and Yandex. All content represents the\nopinion of the authors, which is not necessarily shared or endorsed by their respective employers and/or sponsors."}], "references": [{"title": "Semeval2012 task 6: A pilot on semantic textual similarity", "author": ["Agirre et al.2012] Eneko Agirre", "Mona Diab", "Daniel Cer", "Aitor Gonzalez-Agirre"], "venue": "In Proceedings of the First Joint Conference on Lexical and Computational Semantics-Volume", "citeRegEx": "Agirre et al\\.,? \\Q2012\\E", "shortCiteRegEx": "Agirre et al\\.", "year": 2012}, {"title": "sem 2013 shared task: Semantic textual similarity, including a pilot on typed-similarity", "author": ["Agirre et al.2013] Eneko Agirre", "Daniel Cer", "Mona Diab", "Aitor Gonzalez-Agirre", "Weiwei Guo"], "venue": "In Second Joint Conference on Lexical and Computational", "citeRegEx": "Agirre et al\\.,? \\Q2013\\E", "shortCiteRegEx": "Agirre et al\\.", "year": 2013}, {"title": "A mediumscale distributed system for computer science research: Infrastructure for the long term", "author": ["Bal et al.2016] Henri Bal", "Dick Epema", "Cees de Laat", "Rob van Nieuwpoort", "John Romein", "Frank Seinstra", "Cees Snoek", "Harry Wijshoff"], "venue": null, "citeRegEx": "Bal et al\\.,? \\Q2016\\E", "shortCiteRegEx": "Bal et al\\.", "year": 2016}, {"title": "A fast and accurate dependency parser using neural networks", "author": ["Chen", "Manning2014] Danqi Chen", "Christopher D Manning"], "venue": "In Proceedings of the Conference on Empirical Methods in Natural Language Processing (EMNLP", "citeRegEx": "Chen et al\\.,? \\Q2014\\E", "shortCiteRegEx": "Chen et al\\.", "year": 2014}, {"title": "A unified architecture for natural language processing: Deep neural networks", "author": ["Collobert", "Weston2008] Ronan Collobert", "Jason Weston"], "venue": null, "citeRegEx": "Collobert et al\\.,? \\Q2008\\E", "shortCiteRegEx": "Collobert et al\\.", "year": 2008}, {"title": "Retrofitting word vectors to semantic lexicons", "author": ["Jesse Dodge", "Sujay K Jauhar", "Chris Dyer", "Eduard Hovy", "Noah A. Smith"], "venue": "In Proceedings of the North American Chapter of the Association for Computational Lin-", "citeRegEx": "Faruqui et al\\.,? \\Q2014\\E", "shortCiteRegEx": "Faruqui et al\\.", "year": 2014}, {"title": "Phrase similarity in humans and machines", "author": ["Gershman", "Joshua B. Tenenbaum"], "venue": "In Proceedings of the 37th Annual Conference of the Cognitive Science Society,", "citeRegEx": "Gershman et al\\.,? \\Q2015\\E", "shortCiteRegEx": "Gershman et al\\.", "year": 2015}, {"title": "Multilingual distributed representations without word alignment", "author": ["Hermann", "Phil Blunsom"], "venue": "In Proceedings of the International Conference on Learning Representations (ICLR", "citeRegEx": "Hermann et al\\.,? \\Q2014\\E", "shortCiteRegEx": "Hermann et al\\.", "year": 2014}, {"title": "Multilingual models for compositional distributed semantics", "author": ["Hermann", "Phil Blunsom"], "venue": "In Proceeedings of the 52nd Annual Meeting of the Association for Computational Linguistics (ACL", "citeRegEx": "Hermann et al\\.,? \\Q2014\\E", "shortCiteRegEx": "Hermann et al\\.", "year": 2014}, {"title": "Learning distributed representations of sentences from unlabelled data", "author": ["Hill et al.2016] Felix Hill", "Kyunghyun Cho", "Anna Korhonen"], "venue": "In Proceedings of the North American Chapter of the Association for Computational Linguistics", "citeRegEx": "Hill et al\\.,? \\Q2016\\E", "shortCiteRegEx": "Hill et al\\.", "year": 2016}, {"title": "Convolutional neural network architectures for matching natural language sentences", "author": ["Hu et al.2014] Baotian Hu", "Zhengdong Lu", "Hang Li", "Qingcai Chen"], "venue": "In Advances in Neural Information Processing Systems (NIPS", "citeRegEx": "Hu et al\\.,? \\Q2014\\E", "shortCiteRegEx": "Hu et al\\.", "year": 2014}, {"title": "Short text similarity with word embeddings", "author": ["Kenter", "de Rijke2015] Tom Kenter", "Maarten de Rijke"], "venue": "In Proceedings of the 24th ACM International on Conference on Information and Knowledge Management (CIKM", "citeRegEx": "Kenter et al\\.,? \\Q2015\\E", "shortCiteRegEx": "Kenter et al\\.", "year": 2015}, {"title": "Ad hoc monitoring of vocabulary shifts over time", "author": ["Kenter et al.2015] Tom Kenter", "Melvin Wevers", "Pim Huijnen", "Maarten de Rijke"], "venue": "In Proceedings of the 24th ACM International on Conference on Information and Knowledge Management (CIKM", "citeRegEx": "Kenter et al\\.,? \\Q2015\\E", "shortCiteRegEx": "Kenter et al\\.", "year": 2015}, {"title": "Temporal analysis of language through neural language models", "author": ["Kim et al.2014] Yoon Kim", "I Yi-Chiu", "Kentaro Hanaki", "Darshan Hegde", "Slav Petrov"], "venue": "Proceeedings of the 52nd Annual Meeting of the Association for Computational Lin-", "citeRegEx": "Kim et al\\.,? \\Q2014\\E", "shortCiteRegEx": "Kim et al\\.", "year": 2014}, {"title": "From word embeddings to document distances", "author": ["Kusner et al.2015] Matt Kusner", "Yu Sun", "Nicholas Kolkin", "Kilian Q Weinberger"], "venue": "In Proceedings of the 32nd International Conference on Machine Learning (ICML", "citeRegEx": "Kusner et al\\.,? \\Q2015\\E", "shortCiteRegEx": "Kusner et al\\.", "year": 2015}, {"title": "An autoencoder approach to learning bilingual word representations", "author": ["Hugo Larochelle", "Mitesh Khapra", "Balaraman Ravindran", "Vikas C Raykar", "Amrita Saha"], "venue": "In Advances in Neural Information Processing Sys-", "citeRegEx": "Lauly et al\\.,? \\Q2014\\E", "shortCiteRegEx": "Lauly et al\\.", "year": 2014}, {"title": "Ntnu: Measuring semantic similarity with sublexical feature representations and soft cardinality", "author": ["Lynum et al.2014] Andr\u00e9 Lynum", "Partha Pakray", "Bj\u00f6rn Gamb\u00e4ck", "Sergio Jimenez"], "venue": "In Proceedings of the 8th International Workshop on Semantic Eval-", "citeRegEx": "Lynum et al\\.,? \\Q2014\\E", "shortCiteRegEx": "Lynum et al\\.", "year": 2014}, {"title": "Efficient estimation of word representations in vector space", "author": ["Kai Chen", "Greg S. Corrado", "Jeffrey Dean"], "venue": null, "citeRegEx": "Mikolov et al\\.,? \\Q2013\\E", "shortCiteRegEx": "Mikolov et al\\.", "year": 2013}, {"title": "Distributed representations of words and phrases and their compositionality", "author": ["Ilya Sutskever", "Kai Chen", "Greg S. Corrado", "Jeff Dean"], "venue": "In Advances in Neural Information Processing Systems (NIPS 2013),", "citeRegEx": "Mikolov et al\\.,? \\Q2013\\E", "shortCiteRegEx": "Mikolov et al\\.", "year": 2013}, {"title": "Mining, ranking and recommending entity aspects", "author": ["Edgar Meij", "Maarten de Rijke"], "venue": "In Proceedings of the 38th International ACM SIGIR Conference on Research and Development in Information Retrieval", "citeRegEx": "Reinanda et al\\.,? \\Q2015\\E", "shortCiteRegEx": "Reinanda et al\\.", "year": 2015}, {"title": "Learning to rank short text pairs with convolutional deep neural networks", "author": ["Severyn", "Moschitti2015] Aliaksei Severyn", "Alessandro Moschitti"], "venue": "In Proceedings of the 38th International ACM SIGIR Conference on Research and Development", "citeRegEx": "Severyn et al\\.,? \\Q2015\\E", "shortCiteRegEx": "Severyn et al\\.", "year": 2015}, {"title": "Semantic compositionality through recursive matrix-vector spaces", "author": ["Brody Huval", "Christopher D Manning", "Andrew Y Ng"], "venue": "In Proceedings of the 2012 Joint Conference on Empirical Methods in Natural", "citeRegEx": "Socher et al\\.,? \\Q2012\\E", "shortCiteRegEx": "Socher et al\\.", "year": 2012}, {"title": "Learning to explain entity relationships in knowledge graphs", "author": ["Edgar Meij", "Manos Tsagkias", "Maarten de Rijke", "Wouter Weerkamp"], "venue": "In Proceedings of the 53rd Annual Meeting of the Association", "citeRegEx": "Voskarides et al\\.,? \\Q2015\\E", "shortCiteRegEx": "Voskarides et al\\.", "year": 2015}, {"title": "Towards universal paraphrastic sentence embeddings", "author": ["Wieting et al.2016] John Wieting", "Mohit Bansal", "Kevin Gimpel", "Karen Livescu"], "venue": "Proceedings of the International Conference on Learning Representations", "citeRegEx": "Wieting et al\\.,? \\Q2016\\E", "shortCiteRegEx": "Wieting et al\\.", "year": 2016}, {"title": "Learning discriminative projections for text similarity measures", "author": ["Yih et al.2011] Wentau Yih", "Kristina Toutanova", "John C. Platt", "Christopher Meek"], "venue": "In Proceedings of the Fifteenth Conference on Computational Natural Language", "citeRegEx": "Yih et al\\.,? \\Q2011\\E", "shortCiteRegEx": "Yih et al\\.", "year": 2011}, {"title": "Convolutional neural network for paraphrase identification", "author": ["Yin", "Sch\u00fctze2015] Wenpeng Yin", "Hinrich Sch\u00fctze"], "venue": "In Proceedings of the North American Chapter of the Association for Computational Linguistics (NAACL 2015),", "citeRegEx": "Yin et al\\.,? \\Q2015\\E", "shortCiteRegEx": "Yin et al\\.", "year": 2015}, {"title": "Deep learning for answer sentence selection", "author": ["Yu et al.2014] Lei Yu", "Karl Moritz Hermann", "Phil Blunsom", "Stephen Pulman"], "venue": "In NIPS 2014 Deep Learning and Representation Learning Workshop", "citeRegEx": "Yu et al\\.,? \\Q2014\\E", "shortCiteRegEx": "Yu et al\\.", "year": 2014}, {"title": "Aligning books and movies: Towards story-like visual explanations by watching movies and reading books", "author": ["Zhu et al.2015] Yukun Zhu", "Ryan Kiros", "Rich Zemel", "Ruslan Salakhutdinov", "Raquel Urtasun", "Antonio Torralba", "Sanja Fidler"], "venue": null, "citeRegEx": "Zhu et al\\.,? \\Q2015\\E", "shortCiteRegEx": "Zhu et al\\.", "year": 2015}, {"title": "Bilingual word embeddings for phrase-based machine translation", "author": ["Zou et al.2013] Will Y. Zou", "Richard Socher", "Daniel M. Cer", "Christopher D. Manning"], "venue": "In Proceedings of the Conference on Empirical Methods in Natural Language", "citeRegEx": "Zou et al\\.,? \\Q2013\\E", "shortCiteRegEx": "Zou et al\\.", "year": 2013}], "referenceMentions": [{"referenceID": 28, "context": "Word embeddings have proven to be beneficial in a variety of tasks in NLP such as machine translation (Zou et al., 2013), parsing (Chen and Manning, 2014), semantic search (Reinanda et al.", "startOffset": 102, "endOffset": 120}, {"referenceID": 19, "context": ", 2013), parsing (Chen and Manning, 2014), semantic search (Reinanda et al., 2015; Voskarides et al., 2015), and tracking the meaning of words and concepts over time (Kim et al.", "startOffset": 59, "endOffset": 107}, {"referenceID": 22, "context": ", 2013), parsing (Chen and Manning, 2014), semantic search (Reinanda et al., 2015; Voskarides et al., 2015), and tracking the meaning of words and concepts over time (Kim et al.", "startOffset": 59, "endOffset": 107}, {"referenceID": 13, "context": ", 2015), and tracking the meaning of words and concepts over time (Kim et al., 2014; Kenter et al., 2015).", "startOffset": 66, "endOffset": 105}, {"referenceID": 11, "context": ", 2015), and tracking the meaning of words and concepts over time (Kim et al., 2014; Kenter et al., 2015).", "startOffset": 66, "endOffset": 105}, {"referenceID": 5, "context": "Surprisingly, simply averaging word embeddings of all words in a text has proven to be a strong baseline or feature across a multitude of tasks (Faruqui et al., 2014; Yu et al., 2014; Gershman and Tenenbaum, 2015; Kenter and de Rijke, 2015).", "startOffset": 144, "endOffset": 240}, {"referenceID": 26, "context": "Surprisingly, simply averaging word embeddings of all words in a text has proven to be a strong baseline or feature across a multitude of tasks (Faruqui et al., 2014; Yu et al., 2014; Gershman and Tenenbaum, 2015; Kenter and de Rijke, 2015).", "startOffset": 144, "endOffset": 240}, {"referenceID": 21, "context": ", 2013b) are employed across different tasks (Socher et al., 2012; Kenter and de Rijke, 2015; Hu et al., 2014).", "startOffset": 45, "endOffset": 110}, {"referenceID": 10, "context": ", 2013b) are employed across different tasks (Socher et al., 2012; Kenter and de Rijke, 2015; Hu et al., 2014).", "startOffset": 45, "endOffset": 110}, {"referenceID": 9, "context": "We apply this strategy at the sentence level, where we aim to predict a sentence from its adjacent sentences (Kiros et al., 2015; Hill et al., 2016).", "startOffset": 109, "endOffset": 148}, {"referenceID": 5, "context": "Surprisingly, simply averaging word embeddings of all words in a text has proven to be a strong baseline or feature across a multitude of tasks (Faruqui et al., 2014; Yu et al., 2014; Gershman and Tenenbaum, 2015; Kenter and de Rijke, 2015). Word embeddings, however, are not optimized specifically for representing sentences. In this paper we present a model for obtaining word embeddings that are tailored specifically for the task of averaging them. We do this by directly including a comparison of sentence embeddings\u2014the averaged embeddings of the words they contain\u2014in the cost function of our network. Word embeddings are typically trained in a fast and scalable way from unlabeled training data. As the training data is unlabeled, word embeddings are usually not task-specific. Rather, word embeddings trained on a large training corpus, like the ones from (Collobert and Weston, 2008; Mikolov et al., 2013b) are employed across different tasks (Socher et al., 2012; Kenter and de Rijke, 2015; Hu et al., 2014). These two qualities\u2014(i) being trainable from large quantities of unlabeled data in a reasonable amount of time, and (ii) robust performance across different tasks\u2014are highly desirable and allow word embeddings to be used in many large-scale applications. In this work we aim to optimize word embeddings for sentence representations in the same manner. We want to produce general purpose sentence embeddings that should score robustly across multiple test sets, and we want to leverage large amounts of unlabeled training material. In the word2vec algorithm, Mikolov et al. (2013a) construe a supervised training criterion for obtaining word embeddings from unsupervised data, by predicting, for every word, its surrounding words.", "startOffset": 145, "endOffset": 1601}, {"referenceID": 27, "context": "(Zhu et al., 2015).", "startOffset": 0, "endOffset": 18}, {"referenceID": 0, "context": "We use 20 SemEval datasets from the SemEval semantic textual similarity task in 2012, 2013, 2014 and 2015 (Agirre et al., 2012; Agirre et al., 2013; Agirre et al., 2014; Agirre et al., 2015), which consist of sentence pairs from a wide array of sources (e.", "startOffset": 106, "endOffset": 190}, {"referenceID": 1, "context": "We use 20 SemEval datasets from the SemEval semantic textual similarity task in 2012, 2013, 2014 and 2015 (Agirre et al., 2012; Agirre et al., 2013; Agirre et al., 2014; Agirre et al., 2015), which consist of sentence pairs from a wide array of sources (e.", "startOffset": 106, "endOffset": 190}, {"referenceID": 14, "context": "To comply with results reported in other research (Mikolov et al., 2013b; Kusner et al., 2015) we fix the embedding size to 300 and only consider words appearing 5 times or more in the training corpus.", "startOffset": 50, "endOffset": 94}, {"referenceID": 2, "context": "4 We ran our experiments on GPUs in the DAS5 cluster (Bal et al., 2016).", "startOffset": 53, "endOffset": 71}, {"referenceID": 16, "context": "This is remarkable as Siamese CBOW is completely unsupervised, while the NTNU system which scored best on this set (Lynum et al., 2014) was optimized using multiple training sets.", "startOffset": 115, "endOffset": 135}, {"referenceID": 9, "context": "In recent work, Hill et al. (2016) present FastSent, a model similar to ours (see \u00a75 for a more elaborate discussion); results are not reported for all evaluation sets we use, and hence, we compare the results of FastSent and Siamese CBOW separately, in Table 2.", "startOffset": 16, "endOffset": 35}, {"referenceID": 9, "context": "The comparison is to be interpreted with caution as it is not evident what vocabulary was used for the experiments in (Hill et al., 2016); hence, the differences observed here might simply be due to differences in vocabulary coverage.", "startOffset": 118, "endOffset": 137}, {"referenceID": 9, "context": "FastSent results are reprinted from (Hill et al., 2016) where they are reported in two-digit precision.", "startOffset": 36, "endOffset": 55}, {"referenceID": 10, "context": "In the first setting, word vectors are typically used as features or network initialisations (Kenter and de Rijke, 2015; Hu et al., 2014; Severyn and Moschitti, 2015; Yin and Sch\u00fctze, 2015).", "startOffset": 93, "endOffset": 189}, {"referenceID": 15, "context": "Many models related to the one we present here are used in a multilingual setting (Hermann and Blunsom, 2014b; Hermann and Blunsom, 2014a; Lauly et al., 2014).", "startOffset": 82, "endOffset": 158}, {"referenceID": 10, "context": "In the first setting, word vectors are typically used as features or network initialisations (Kenter and de Rijke, 2015; Hu et al., 2014; Severyn and Moschitti, 2015; Yin and Sch\u00fctze, 2015). Our work can be classified in the latter category of unsupervised approaches. Many models related to the one we present here are used in a multilingual setting (Hermann and Blunsom, 2014b; Hermann and Blunsom, 2014a; Lauly et al., 2014). The key difference between this work and ours is that in a multilingual setting the goal is to predict, from a distributed representation of an input sentence, the same sentence in a different language, whereas our goals is to predict surrounding sentences. Wieting et al. (2016) apply a model similar to ours in a related but different setting where explicit semantic knowledge is leveraged.", "startOffset": 121, "endOffset": 709}, {"referenceID": 9, "context": "Most importantly, however, the cost function used in (Hill et al., 2016) is crucially different from ours.", "startOffset": 53, "endOffset": 72}, {"referenceID": 9, "context": "Finally, independently from our work, Hill et al. (2016) also present a log-linear model.", "startOffset": 38, "endOffset": 57}, {"referenceID": 9, "context": "Finally, independently from our work, Hill et al. (2016) also present a log-linear model. Rather than comparing sentence representations to each other, as we propose, words in one sentence are compared to the representation of another sentence. As both input and output vectors are learnt, while we tie the parameters across the entire model, Hill et al. (2016)\u2019s model has twice as many parameters as ours.", "startOffset": 38, "endOffset": 362}], "year": 2016, "abstractText": "We present the Siamese Continuous Bag of Words (Siamese CBOW) model, a neural network for efficient estimation of highquality sentence embeddings. Averaging the embeddings of words in a sentence has proven to be a surprisingly successful and efficient way of obtaining sentence embeddings. However, word embeddings trained with the methods currently available are not optimized for the task of sentence representation, and, thus, likely to be suboptimal. Siamese CBOW handles this problem by training word embeddings directly for the purpose of being averaged. The underlying neural network learns word embeddings by predicting, from a sentence representation, its surrounding sentences. We show the robustness of the Siamese CBOW model by evaluating it on 20 datasets stemming from a wide variety of sources.", "creator": "LaTeX with hyperref package"}}}