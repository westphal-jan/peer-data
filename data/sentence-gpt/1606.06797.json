{"id": "1606.06797", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "22-Jun-2016", "title": "\\'Etude de Probl\\`emes d'Optimisation Combinatoire \\`a Multiples Composantes Interd\\'ependantes", "abstract": "This extended abstract presents an overview on NP-hard optimization problems with multiple interdependent components. These problems occur in many real-world applications: industrial applications, engineering, and logistics. The fact that these problems are composed of many sub-problems that are NP-hard makes them even more challenging to solve using exact algorithms. As shown in the example below, we see the problems in some of the NP-hard problems which arise in parallel. These include the construction of the computer system with which the underlying system is being developed and running. As a result of the fact that NP-hard optimization problems arise in parallel, even the construction of the computer system is not complete. The NP-hard problems occur in many real-world applications: industrial applications, engineering, and logistics.\n\n\nThe major problem in NP-hard optimization is the number of NP-hard optimization problems (e.g., that the number of NP-hard optimizations is too large to perform very well for large applications). Because NP-hard optimization problems occur in parallel, the number of NP-hard optimization problems arises in parallel. Because NP-hard optimization problems arise in parallel, the number of NP-hard optimization problems arises in parallel. Because NP-hard optimization problems arise in parallel, the number of NP-hard optimization problems arises in parallel. Because NP-hard optimization problems arise in parallel, the number of NP-hard optimization problems arises in parallel. Because NP-hard optimization problems arise in parallel, the number of NP-hard optimization problems arises in parallel. Because NP-hard optimization problems arise in parallel, the number of NP-hard optimization problems arises in parallel.\nThe NP-hard problem of NP-hard optimization problems arises in parallel. The NP-hard problem of NP-hard optimization problems arises in parallel. The NP-hard problem of NP-hard optimization problems arises in parallel. The NP-hard problem of NP-hard optimization problems arises in parallel. The NP-hard problem of NP-hard optimization problems arises in parallel. The NP-hard problem of NP-hard optimization problems arises in parallel. The NP-hard problem of NP-hard optimization problems arises in parallel. The NP-hard problem of NP-hard optimization problems arises in parallel.\nThe NP-hard problem of NP-hard optimization problems arises in parallel. The NP-hard problem of NP-hard optimization problems arises in parallel. The NP-hard problem of NP-hard optimization problems arises in parallel. The NP-hard problem of NP-hard optimization problems arises in", "histories": [["v1", "Wed, 22 Jun 2016 01:34:53 GMT  (71kb,D)", "http://arxiv.org/abs/1606.06797v1", "in French. Extended abstract presented at the URAC days meeting in Rabat, Morocco. The meeting website is available atthis https URL"]], "COMMENTS": "in French. Extended abstract presented at the URAC days meeting in Rabat, Morocco. The meeting website is available atthis https URL", "reviews": [], "SUBJECTS": "cs.AI cs.DS", "authors": ["mohamed el yafrani", "bela\\\"id ahiod"], "accepted": false, "id": "1606.06797"}, "pdf": {"name": "1606.06797.pdf", "metadata": {"source": "CRF", "title": "E\u0301tude de Proble\u0300mes d\u2019Optimisation Combinatoire a\u0300 Multiples Composantes Interde\u0301pendantes", "authors": ["Mohamed El Yafrani", "Bela\u00efd Ahiod"], "emails": ["m.elyafrani@gmail.com,", "ahiod@fsr.ac.ma"], "sections": [{"heading": null, "text": "aspect of interdependence of components is presented, and some outlines on solving approaches are briefly introduced from a (meta)heuristics and evolutionary computation perspective.\nKeywords: Interdependence, Combinatorial optimization, Metaheuristics, Evolutionary computation.\nExtended abstract presented at the URAC days meeting in Rabat, Morocco. The meeting site is available at https://sites.google.com/site/lriturac29/j-urac-2015"}, {"heading": "1 Motivation", "text": "Les probl\u00e8mes d\u2019optimisation combinatoire interviennent dans plusieurs domaines. Parmi les domaines d\u2019applications on retrouve l\u2019ing\u00e9nierie, les transports, et l\u2019optimisation de la chaine d\u2019approvisionnement. Ces probl\u00e8mes sont souvent tr\u00e8s difficiles \u00e0 r\u00e9soudre dans un temps raisonnable d\u00fb au fait qu\u2019ils soient NP-difficiles. N\u00e9anmoins, ceci n\u2019est pas le seul d\u00e9fi. Dans plusieurs cas r\u00e9els le probl\u00e8me \u00e0 optimiser est souvent compos\u00e9 de plusieurs sousprobl\u00e8mes (dits composantes) qui sont eux-m\u00eames NPdifficiles. De plus, ces sous-probl\u00e8mes sont interd\u00e9pendants ce qui rend la t\u00e2che encore plus compliqu\u00e9e.\nAinsi, la difficult\u00e9 dans les probl\u00e8mes r\u00e9els est due \u00e0 plusieurs facteurs : NP-compl\u00e9tude, taille, et interd\u00e9pendance. D\u2019autres facteurs peuvent intervenir dans un probl\u00e8me r\u00e9el [9] tels que la dynamique de l\u2019environnement, l\u2019existence de contraintes, l\u2019incertitude, pour ne citer que\nquelques-uns. Le but de ce travail est d\u2019\u00e9tudier ces facteurs, particuli\u00e8rement l\u2019interd\u00e9pendance entres les composantes et la taille du probl\u00e8me, afin de concevoir des algorithmes efficaces de r\u00e9solution."}, {"heading": "2 Probl\u00e8mes \u00e0 multiples composantes interd\u00e9pendantes", "text": ""}, {"heading": "2.1 L\u2019interd\u00e9pendance entre composantes", "text": "Un probl\u00e8me d\u2019optimisation est dit \u00e0 multiples composantes s\u2019il se compose de deux ou plusieurs sous-probl\u00e8mes. Une composante B est dite d\u00e9pendante d\u2019une autre composante A (On note B \u2190\u2212 A) si les deux condition suivantes sont satisfaites [2] :\n1. G\u00e9n\u00e9rer une solution (non-forcement optimale) pour A est possible sans l\u2019aide de donn\u00e9es produites par B.\n2. Changer une solution de A peut changer l\u2019espace\nar X\niv :1\n60 6.\n06 79\n7v 1\n[ cs\n.A I]\nde recherche pour B. En d\u2019autres termes, ceci peut changer la meilleure solution possible pour B dans le contexte du probl\u00e8me g\u00e9n\u00e9ral.\nUn probl\u00e8me \u00e0 multiples composantes peut \u00eatre repr\u00e9sent\u00e9 \u00e0 l\u2019aide d\u2019un diagramme de d\u00e9pendance. La figure 1 illustre un probl\u00e8me \u00e0 trois composantes interd\u00e9pendantes. Dans cette figure, C est d\u00e9pendant de A, et A et B sont d\u00e9pendants l\u2019un de l\u2019autre.\nDans un probl\u00e8me \u00e0 plusieurs composantes interd\u00e9pendantes, il ne suffit pas de r\u00e9soudre les probl\u00e8mes en isolation afin de r\u00e9soudre le probl\u00e8me global. Une bonne strat\u00e9gie de r\u00e9solution doit prendre en consid\u00e9ration l\u2019interd\u00e9pendance entre les diff\u00e9rentes composantes du probl\u00e8me.\nParmis les probl\u00e8mes \u00e0 plusieurs composantes interd\u00e9pendantes nous retrouvons : le probl\u00e8me de l\u2019assemblage du trafic, routage, et affectation de longueur d\u2019onde [5] ; le probl\u00e8me du voyageur voleur [1, 11] ; le probl\u00e8me de localisation-routage [10] ; et le probl\u00e8me de routage de v\u00e9hicules sous contraintes de chargement [6]."}, {"heading": "2.2 Un exemple illustratif : Killer Sudoku", "text": "Le Killer Sudoku est un jeu de grille qui combine les deux jeux sudoku et kakuro [12]. Le but est de remplir la grille en respectant les r\u00e8gles du sudoku mais aussi celles du kakuro. La figure 2 illustre une instance de killer sudoku, ainsi qu\u2019une solution possible.\nL\u2019interd\u00e9pendance dans cet exemple est claire (d\u00e9pendance dans les deux sens). Il est aussi clair que la r\u00e9solution du sudoku en isolation ne r\u00e9sout pas le killer sudoku. De m\u00eame, la r\u00e9solution du kakuro sans prendre en compte les r\u00e8gles du sudoku ne r\u00e9sout pas le probl\u00e8me global."}, {"heading": "3 Solutions propos\u00e9es", "text": ""}, {"heading": "3.1 Jointure des voisinages", "text": "Une premi\u00e8re approche de r\u00e9solution utilise la notion de voisinage dans un probl\u00e8me d\u2019optimisation. L\u2019approche consiste \u00e0 appliquer un produit cart\u00e9sien entre les voisinages des composantes afin de cr\u00e9er un voisinage propre au probl\u00e8me global. Le voisinage r\u00e9sultant pourrait \u00eatre utilis\u00e9 dans le contexte d\u2019une recherche locale ou de m\u00e9taheuristiques telles que la recherche locale it\u00e9rative [8] et le recuit simul\u00e9 [7]. L\u2019algorithme 1 illustre une telle approche pour le probl\u00e8me de la figure 1.\nAlgorithm 1 Un exemple d\u2019un simple algorithme de recherche locale pour le probl\u00e8me de la figure 1 1: (a, b, c)\u2190 solutioninitiale 2: tant que condition d\u2019arr\u00eat faire 3: pour a\u2032 voisin de a dans A faire 4: pour b\u2032 voisin de b dans B faire 5: pour c\u2032 voisin de c dans C faire 6: \u00e9valuer (a\u2032, b\u2032, c\u2032) 7: si (a\u2032, b\u2032, c\u2032) est meilleure que (a, b, c)\nalors 8: (a, b, c)\u2190 (a\u2032, b\u2032, c\u2032) 9: fin si\n10: fin pour 11: fin pour 12: fin pour 13: fin tant que\nLe probl\u00e8me de cette approche est la complexit\u00e9 de l\u2019algorithme, ce qui induit un temps de calcul \u00e9norme pour les instances \u00e0 grande taille."}, {"heading": "3.2 Cosolver", "text": "Cosolver est un framework propos\u00e9 exclusivement pour les probl\u00e8mes \u00e0 deux composantes interd\u00e9pendantes [3]. L\u2019id\u00e9e est d\u2019isoler le traitement de chaque composante et de g\u00e9rer une communication entre les solveurs : lorsque le solveur d\u2019une composante A trouve une meilleure solution, il la transmet au solveur de la composante B. De cette mani\u00e8re, l\u2019interd\u00e9pendance est g\u00e9r\u00e9e dans un processus it\u00e9ratif entre les deux \"sous-solveurs\". Ce processus est illustr\u00e9 dans le pseudo-code 2.\nCette approche est de nature parall\u00e9lisable. En effet, le fait que les sous-solveurs actent de mani\u00e8re isol\u00e9e permet de facilement de distribu\u00e9 le traitement.\nAlgorithm 2 Une impl\u00e9mentation simplifi\u00e9e de Cosolver 1: (a, b)\u2190 solutioninitiale 2: tant que condition d\u2019arr\u00eat faire 3: a\u2032 \u2190 solveurA(a, b) 4: b\u2032 \u2190 solveurB(a\u2032, b) 5: (a, b)\u2190 (a\u2032, b\u2032) 6: fin tant que"}, {"heading": "3.3 Algorithmes \u00e9volutionnaires", "text": "Les algorithmes \u00e9volutionnaires [4] sont bien adapt\u00e9s pour attaquer les probl\u00e8mes \u00e0 multiples composantes interd\u00e9pendantes. Ces m\u00e9thodes offrent une excellente flexibilit\u00e9, ils peuvent \u00eatre utilis\u00e9s de plusieurs mani\u00e8res. On pourrait concevoir un algorithme purement \u00e9volutionnaire pour r\u00e9soudre le probl\u00e8me g\u00e9n\u00e9ral, ou bien hybrider avec d\u2019autres heuristiques. Par exemple, des op\u00e9rateurs g\u00e9n\u00e9tiques peuvent \u00eatre inclus dans Cosolver afin d\u2019am\u00e9liorer sa performance en terme d\u2019exploration de l\u2019espace de recherche."}, {"heading": "4 Conclusion et perspectives", "text": "Les probl\u00e8mes r\u00e9els sont bien plus difficiles que les probl\u00e8mes acad\u00e9miques. Pourtant, la plupart des articles continuent de traiter des probl\u00e8mes de benchmark (probl\u00e8me du sac-a-dos, bin packing, probl\u00e8me du voyageur de commerce, etc.) qui n\u2019interviennent que sous forme de composantes d\u2019un probl\u00e8me global. Peu de travaux se concentrent sur les sp\u00e9cificit\u00e9 de ces probl\u00e8mes r\u00e9els [9]. Dans une perspective \u00e0 court terme, nous nous engageons \u00e0 concevoir des solutions heuristiques pour des cas particuliers de probl\u00e8mes mono-objectifs \u00e0 deux composantes. Nous voulons \u00e9galement continuer dans cette voie et g\u00e9n\u00e9raliser nos approches pour des probl\u00e8mes \u00e0 plusieurs composantes. Nous avons pr\u00e9vu d\u2019autres pistes de recherches prometteuses pour traiter ce type de probl\u00e8mes telles que le parall\u00e9lisme, le calcul distribu\u00e9, et l\u2019hybridation.\nR\u00e9f\u00e9rences [1] Mohammad Reza Bonyadi, Zbigniew Michalewicz, and\nLuigi Barone. The travelling thief problem : the first step in the transition from theoretical problems to realistic problems. In Evolutionary Computation (CEC), 2013 IEEE Congress on, pages 1037\u20131044. IEEE, 2013.\n[2] Mohammad Reza Bonyadi, Zbigniew Michalewicz, Frank Neumann, and Markus Wagner. Evolutionary computation for multi-component problems : Opportunities and future directions. 2014.\n[3] Mohammad Reza Bonyadi, Zbigniew Michalewicz, Michao\u0306 Roman Przybyo\u0306ek, and Adam Wierzbicki. Socially inspired algorithms for the travelling thief problem. In Proceedings of the 2014 conference on Genetic and evolutionary computation, pages 421\u2013428. ACM, 2014.\n[4] John Henry Holland. Adaptation in natural and artificial systems : an introductory analysis with applications to biology, control, and artificial intelligence. MIT press, 1992.\n[5] Jian-Qiang Hu and Brett Leida. Traffic grooming, routing, and wavelength assignment in optical wdm mesh networks. In INFOCOM 2004. Twenty-third AnnualJoint Conference of the IEEE Computer and Communications Societies, volume 1. IEEE, 2004.\n[6] Manuel Iori and Silvano Martello. Routing problems with loading constraints. Top, 18(1) :4\u201327, 2010.\n[7] Scott Kirkpatrick, C Daniel Gelatt, Mario P Vecchi, et al. Optimization by simmulated annealing. science, 220(4598) :671\u2013680, 1983.\n[8] Helena R Louren\u00e7o, Olivier C Martin, and Thomas St\u00fctzle. Iterated local search. Springer, 2003.\n[9] Zbigniew Michalewicz and David B Fogel. How to solve it : modern heuristics. Springer Science & Business Media, 2013.\n[10] Jossef Perl and Mark S Daskin. A warehouse locationrouting problem. Transportation Research Part B : Methodological, 19(5) :381\u2013396, 1985.\n[11] Sergey Polyakovskiy, Mohammad Reza, Markus Wagner, Zbigniew Michalewicz, and Frank Neumann. A comprehensive benchmark set and heuristics for the traveling thief problem. In Proceedings of the Genetic and Evolutionary Computation Conference (GECCO), Vancouver, Canada, 2014.\n[12] YATO Takayuki and Seta Takahiro. Complexity and completeness of finding another solution and its application to puzzles. IEICE transactions on fundamentals of electronics, communications and computer sciences, 86(5) :1052\u2013 1060, 2003."}], "references": [{"title": "The travelling thief problem : the first step in the transition from theoretical problems to realistic problems", "author": ["Mohammad Reza Bonyadi", "Zbigniew Michalewicz", "Luigi Barone"], "venue": "In Evolutionary Computation (CEC),", "citeRegEx": "1", "shortCiteRegEx": "1", "year": 2013}, {"title": "Evolutionary computation for multi-component problems : Opportunities and future directions", "author": ["Mohammad Reza Bonyadi", "Zbigniew Michalewicz", "Frank Neumann", "Markus Wagner"], "venue": null, "citeRegEx": "2", "shortCiteRegEx": "2", "year": 2014}, {"title": "Socially inspired algorithms for the travelling thief problem", "author": ["Mohammad Reza Bonyadi", "Zbigniew Michalewicz", "Micha\u014f Roman Przyby\u014fek", "Adam Wierzbicki"], "venue": "In Proceedings of the 2014 conference on Genetic and evolutionary computation,", "citeRegEx": "3", "shortCiteRegEx": "3", "year": 2014}, {"title": "Adaptation in natural and artificial systems : an introductory analysis with applications to biology, control, and artificial intelligence", "author": ["John Henry Holland"], "venue": "MIT press,", "citeRegEx": "4", "shortCiteRegEx": "4", "year": 1992}, {"title": "Traffic grooming, routing, and wavelength assignment in optical wdm mesh networks", "author": ["Jian-Qiang Hu", "Brett Leida"], "venue": "Twenty-third AnnualJoint Conference of the IEEE Computer and Communications Societies,", "citeRegEx": "5", "shortCiteRegEx": "5", "year": 2004}, {"title": "Routing problems with loading", "author": ["Manuel Iori", "Silvano Martello"], "venue": "constraints. Top,", "citeRegEx": "6", "shortCiteRegEx": "6", "year": 2010}, {"title": "Optimization by simmulated", "author": ["Scott Kirkpatrick", "C Daniel Gelatt", "Mario P Vecchi"], "venue": "annealing. science,", "citeRegEx": "7", "shortCiteRegEx": "7", "year": 1983}, {"title": "How to solve it : modern heuristics", "author": ["Zbigniew Michalewicz", "David B Fogel"], "venue": "Springer Science & Business Media,", "citeRegEx": "9", "shortCiteRegEx": "9", "year": 2013}, {"title": "A warehouse locationrouting problem", "author": ["Jossef Perl", "Mark S Daskin"], "venue": "Transportation Research Part B : Methodological,", "citeRegEx": "10", "shortCiteRegEx": "10", "year": 1985}, {"title": "A comprehensive benchmark set and heuristics for the traveling thief problem", "author": ["Sergey Polyakovskiy", "Mohammad Reza", "Markus Wagner", "Zbigniew Michalewicz", "Frank Neumann"], "venue": "In Proceedings of the Genetic and Evolutionary Computation Conference (GECCO),", "citeRegEx": "11", "shortCiteRegEx": "11", "year": 2014}, {"title": "Complexity and completeness of finding another solution and its application to puzzles", "author": ["YATO Takayuki", "Seta Takahiro"], "venue": "IEICE transactions on fundamentals of electronics, communications and computer sciences,", "citeRegEx": "12", "shortCiteRegEx": "12", "year": 2003}], "referenceMentions": [{"referenceID": 7, "context": "D\u2019autres facteurs peuvent intervenir dans un probl\u00e8me r\u00e9el [9] tels que la dynamique de l\u2019environnement, l\u2019existence de contraintes, l\u2019incertitude, pour ne citer que quelques-uns.", "startOffset": 59, "endOffset": 62}, {"referenceID": 1, "context": "Une composante B est dite d\u00e9pendante d\u2019une autre composante A (On note B \u2190\u2212 A) si les deux condition suivantes sont satisfaites [2] :", "startOffset": 128, "endOffset": 131}, {"referenceID": 4, "context": "Parmis les probl\u00e8mes \u00e0 plusieurs composantes interd\u00e9pendantes nous retrouvons : le probl\u00e8me de l\u2019assemblage du trafic, routage, et affectation de longueur d\u2019onde [5] ; le probl\u00e8me du voyageur voleur [1, 11] ; le probl\u00e8me de localisation-routage [10] ; et le probl\u00e8me de routage de v\u00e9hicules sous contraintes de chargement [6].", "startOffset": 162, "endOffset": 165}, {"referenceID": 0, "context": "Parmis les probl\u00e8mes \u00e0 plusieurs composantes interd\u00e9pendantes nous retrouvons : le probl\u00e8me de l\u2019assemblage du trafic, routage, et affectation de longueur d\u2019onde [5] ; le probl\u00e8me du voyageur voleur [1, 11] ; le probl\u00e8me de localisation-routage [10] ; et le probl\u00e8me de routage de v\u00e9hicules sous contraintes de chargement [6].", "startOffset": 199, "endOffset": 206}, {"referenceID": 9, "context": "Parmis les probl\u00e8mes \u00e0 plusieurs composantes interd\u00e9pendantes nous retrouvons : le probl\u00e8me de l\u2019assemblage du trafic, routage, et affectation de longueur d\u2019onde [5] ; le probl\u00e8me du voyageur voleur [1, 11] ; le probl\u00e8me de localisation-routage [10] ; et le probl\u00e8me de routage de v\u00e9hicules sous contraintes de chargement [6].", "startOffset": 199, "endOffset": 206}, {"referenceID": 8, "context": "Parmis les probl\u00e8mes \u00e0 plusieurs composantes interd\u00e9pendantes nous retrouvons : le probl\u00e8me de l\u2019assemblage du trafic, routage, et affectation de longueur d\u2019onde [5] ; le probl\u00e8me du voyageur voleur [1, 11] ; le probl\u00e8me de localisation-routage [10] ; et le probl\u00e8me de routage de v\u00e9hicules sous contraintes de chargement [6].", "startOffset": 245, "endOffset": 249}, {"referenceID": 5, "context": "Parmis les probl\u00e8mes \u00e0 plusieurs composantes interd\u00e9pendantes nous retrouvons : le probl\u00e8me de l\u2019assemblage du trafic, routage, et affectation de longueur d\u2019onde [5] ; le probl\u00e8me du voyageur voleur [1, 11] ; le probl\u00e8me de localisation-routage [10] ; et le probl\u00e8me de routage de v\u00e9hicules sous contraintes de chargement [6].", "startOffset": 322, "endOffset": 325}, {"referenceID": 10, "context": "Le Killer Sudoku est un jeu de grille qui combine les deux jeux sudoku et kakuro [12].", "startOffset": 81, "endOffset": 85}, {"referenceID": 6, "context": "Le voisinage r\u00e9sultant pourrait \u00eatre utilis\u00e9 dans le contexte d\u2019une recherche locale ou de m\u00e9taheuristiques telles que la recherche locale it\u00e9rative [8] et le recuit simul\u00e9 [7].", "startOffset": 173, "endOffset": 176}, {"referenceID": 2, "context": "Cosolver est un framework propos\u00e9 exclusivement pour les probl\u00e8mes \u00e0 deux composantes interd\u00e9pendantes [3].", "startOffset": 103, "endOffset": 106}, {"referenceID": 3, "context": "Les algorithmes \u00e9volutionnaires [4] sont bien adapt\u00e9s pour attaquer les probl\u00e8mes \u00e0 multiples composantes interd\u00e9pendantes.", "startOffset": 32, "endOffset": 35}, {"referenceID": 7, "context": "Peu de travaux se concentrent sur les sp\u00e9cificit\u00e9 de ces probl\u00e8mes r\u00e9els [9].", "startOffset": 73, "endOffset": 76}, {"referenceID": 0, "context": "[1] Mohammad Reza Bonyadi, Zbigniew Michalewicz, and Luigi Barone.", "startOffset": 0, "endOffset": 3}, {"referenceID": 1, "context": "[2] Mohammad Reza Bonyadi, Zbigniew Michalewicz, Frank Neumann, and Markus Wagner.", "startOffset": 0, "endOffset": 3}, {"referenceID": 2, "context": "[3] Mohammad Reza Bonyadi, Zbigniew Michalewicz, Micha\u014f Roman Przyby\u014fek, and Adam Wierzbicki.", "startOffset": 0, "endOffset": 3}, {"referenceID": 3, "context": "[4] John Henry Holland.", "startOffset": 0, "endOffset": 3}, {"referenceID": 4, "context": "[5] Jian-Qiang Hu and Brett Leida.", "startOffset": 0, "endOffset": 3}, {"referenceID": 5, "context": "[6] Manuel Iori and Silvano Martello.", "startOffset": 0, "endOffset": 3}, {"referenceID": 6, "context": "[7] Scott Kirkpatrick, C Daniel Gelatt, Mario P Vecchi, et al.", "startOffset": 0, "endOffset": 3}, {"referenceID": 7, "context": "[9] Zbigniew Michalewicz and David B Fogel.", "startOffset": 0, "endOffset": 3}, {"referenceID": 8, "context": "[10] Jossef Perl and Mark S Daskin.", "startOffset": 0, "endOffset": 4}, {"referenceID": 9, "context": "[11] Sergey Polyakovskiy, Mohammad Reza, Markus Wagner, Zbigniew Michalewicz, and Frank Neumann.", "startOffset": 0, "endOffset": 4}, {"referenceID": 10, "context": "[12] YATO Takayuki and Seta Takahiro.", "startOffset": 0, "endOffset": 4}], "year": 2016, "abstractText": "This extended abstract presents an overview on NP-hard optimization problems with multiple interdependent components. These problems occur in many real-world applications: industrial applications, engineering, and logistics. The fact that these problems are composed of many sub-problems that are NP-hard makes them even more challenging to solve using exact algorithms. This is mainly due to the high complexity of this class of algorithms and the hardness of the problems themselves. The main source of difficulty of these problems is the presence of internal dependencies between sub-problems. This aspect of interdependence of components is presented, and some outlines on solving approaches are briefly introduced from a (meta)heuristics and evolutionary computation perspective.", "creator": "LaTeX with hyperref package"}}}