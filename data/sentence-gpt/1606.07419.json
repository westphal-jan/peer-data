{"id": "1606.07419", "review": {"conference": "nips", "VERSION": "v1", "DATE_OF_SUBMISSION": "23-Jun-2016", "title": "Learning to Poke by Poking: Experiential Learning of Intuitive Physics", "abstract": "We investigate an experiential learning paradigm for acquiring an internal model of intuitive physics. Our model is evaluated on a real-world robotic manipulation task that requires displacing objects to target locations by poking. The robot gathered over 400 hours of experience by executing more than 50K pokes on different objects and randomly selecting individual cues for each cue. The task is a combination of visual processing and visual processing. We then test the effect on the outcome of the experiment to determine whether there are other cues associated with the test. Our results can be used to predict if there are other cues associated with the experiment.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "histories": [["v1", "Thu, 23 Jun 2016 19:42:57 GMT  (3812kb,D)", "http://arxiv.org/abs/1606.07419v1", null], ["v2", "Wed, 15 Feb 2017 22:53:52 GMT  (1756kb,D)", "http://arxiv.org/abs/1606.07419v2", null]], "reviews": [], "SUBJECTS": "cs.CV cs.AI cs.RO", "authors": ["pulkit agrawal", "ashvin nair", "pieter abbeel", "jitendra malik", "sergey levine"], "accepted": true, "id": "1606.07419"}, "pdf": {"name": "1606.07419.pdf", "metadata": {"source": "CRF", "title": "Learning to Poke by Poking: Experiential Learning of Intuitive Physics", "authors": ["Pulkit Agrawal", "Ashvin Nair", "Pieter Abbeel", "Jitendra Malik"], "emails": ["pulkitag@berkeley.edu", "anair17@berkeley.edu", "pabbeel@berkeley.edu", "malik@berkeley.edu", "svlevine@cs.washington.edu"], "sections": [{"heading": "1 Introduction", "text": "Learning sensorimotor representations that enable agents to perform novel tasks with minimal supervision is an open challenge. Model based methods offer one solution by learning the mapping between the actions of the agent and the consequent changes in the environment (e.g. motion of objects). These models can be used to achieve arbitrary goals by transforming any given task into a relatively easier planning problem where the system dynamics are known. The general method for model learning involves estimating the state space of the world using sensory data and learning a dynamics model in this state space. One popular way of building a model is to represent the world in terms of a fixed set of physical parameters such as mass, friction coefficient, normal forces etc and use a physics simulator for computing object dynamics (Kolev & Todorov, 2015; Mottaghi et al., 2015; Wu et al., 2015; Hamrick et al., 2011) from this representation. This approach is general because physics simulators inevitably use Newton\u2019s laws that apply to a wide range of physical phenomenon ranging from orbital motion of planets to a swinging pendulum. We call this approach \u201csimulator-based\" models.\nThe key constraint in using simulator-based models is that the physical parameters that need to be estimated from sensory data and the equations used for computing dynamics from these parameters\n\u2217equal contribution, authors are listed in alphabetical order.\nar X\niv :1\n60 6.\n07 41\n9v 1\n[ cs\n.C V\n] 2\nmust be decided in advance. Because of this constraint, is not immediately obvious that this should be the preferred approach for model based control for two reasons: (1) Parameter estimation from sensory data is subject to errors, and it is possible that one parameterization is easier to estimate or more robust to sensory noise than another. For example, the conclusion that objects with feather like appearance fall slower than objects with stone like appearance can be reached by either correlating visual texture to observed speed of falling objects, or by computing the drag force after estimating the cross section area of the object. Depending on whether estimation of visual texture or cross section area is more robust, one of these methods will be more accurate than other. (2) Even if we assume that two parameterizations are equally robust to sensory noise, dynamics in the two parameterizations may have different functional forms leading to different accuracies in predicting future dynamics. For example, the position of a body moving in a circle can be predicted either in the (r, \u03b8; polar) or the (x, y; cartesian) coordinate system. In the polar system, the position is a linear function of one variable (angular velocity; r is constant) whereas in cartesian coordinates it is a linear function of two variables (vx, vy), which in turn implies that the variance in position estimates will be higher in cartesian coordinates. For motion along x or y axis, it will be other way round.\nThese considerations are very important because estimating mass distribution, deformation and friction properties, contact points etc from sensory data is very challenging and it might just be the case that an alternate parameterization (such as the example of visual texture versus cross section area mentioned above) may perform as well, but is easier to estimate and more robust. Moreover, for many practical object manipulation tasks of interest, such as re-arranging objects, cutting vegetables, folding clothes, and so forth, small errors in execution are acceptable. The key challenge is robust performance in the face of varying environmental conditions. This suggests that a more robust but a somewhat imprecise model may in fact be preferred over a less robust and a more precise model.\nBased on these considerations, we believe that in addition to advancing estimation of hand designed parameterization in simulator based modeling, an alternative approach that learns a model directly from the agent\u2019s interaction with it\u2019s environment should be explored for control applications. We call this alternative approach as \u201cintuitive\u201d physics (Fragkiadaki et al., 2015; McCloskey, 1983; Michotte, 1963). Intuitive physics is the simple understanding of how actions effect objects that is obtained from interaction data and is possibly different from the physics that we know from Newton\u2019s law. For e.g., it is possible to predict that feather will fall slower than a stone, just based on the visual texture and without invoking the concepts of gravity and air drag. The intuitive physics approach is in the spirit of recent successful deep learning techniques in computer vision and speech processing that learn features directly from data. Even in human development, it is well known that infants\nspend years worth of time playing with objects in a seemingly random manner with no specific end goal (Smith & Gasser, 2005). It is possible that this experience is distilled into \u201cintuitive\u201d models of dynamics that are later used for inferring optimal actions for achieving specific goals.\nThere are two main challenges in the proposed approach: (1) large amounts of robotic interaction data is required; and (2) learning a dynamics model that predicts the next visual state from the current visual state is very challenging, because in unsupervised settings it requires predicting the image at the next time step. Predicting the value of every pixel in a future image is highly non-trivial in real world scenarios, and in most cases it is not the precise pixel values that are of interest, but the occurrence of a more abstract event. For example, predicting that a glass jar will break when pushed from the table onto the ground is of greater interest (and easier) than predicting exactly how every piece of shattered glass will look. The difficulty, however, is that supervision for such abstract concepts or events is not readily available. In this work, we propose one solution to this problem by jointly training forward and inverse dynamics models. A forward model predicts the next state from the current state and action, and an inverse model predicts the action given the initial and target state. In joint training, the inverse model objective provides supervision to construct informative visual features, which the forward model can then predict, thus regularizing the feature space for the inverse model.\nWe experimentally investigate intuitive physics and the proposed joint modeling approach for object manipulation on a real robotic platform, using poking based object interaction as a case study. Our setup, shown in Figure 1, involves a Baxter robot that acquires intuitive models by interacting with objects (see Figure 2) for long periods of time. The robot records the visual state of the world before and after it executes a poke in order to learn a mapping between its actions and the accompanying change in visual state caused by object motion. The robot is assumed to have no prior knowledge about the location or pose of objects or any of their geometric or physical properties. To date our robot has collected more than 50K pokes on 4 distinct objects, which amounts to more than 400 hours of interaction time. We show that the joint model can be used for multistep decision making and outperforms a method that uses only the inverse model, as well as baseline methods. Our experiments also show that an active data collection regime, where the latest model is used to choose actions at training time, can further improve the final performance of the robot."}, {"heading": "2 Related Work", "text": "Several recent works have proposed to learn visual control policies using reinforcement learning for tasks such as playing Atari games (Mnih et al., 2015) and controlling robots in simulation (Lillicrap et al., 2015) and in the real world (Levine et al., 2015). However, these methods are model free and learn goal specific policies, which makes it difficult to repurpose the learned policies for new tasks. In contrast, the aim of this work is to learn intuitive physical models of object interaction in an unsupervised manner. Such models can then be used to reach any target configuration.\nA number of recent methods have also been proposed for learning representations for vision-based control using autoencoders to transform visual inputs into a low-dimensional state space (Lange et al., 2012; Finn et al., 2015; Lange & Riedmiller, 2010; Kietzmann & Riedmiller, 2009). However, these works have used model free methods as training auto encoders on complex real world imagery is difficult, and it is unclear that features obtained by optimizing pixelwise reconstruction are necessarily well suited for model based control. Recently (Vondrick et al., 2015) proposed to build prediction models in the space of features learnt by pretraining on image classification on Imagenet. Their approach assumes that invariances learnt for object recognition are also good for control. In contrast,\nour approach is entirely self-supervised, does not require human-provided labels and is capable of learning task specific features.\n(Pinto & Gupta, 2015; Levine et al., 2016) learn how to grasp objects by trial and error from a large number of attempts. These methods aim to acquire a policy for solving a single concrete task, while our work is concerned with learning a general predictive model that could be used to achieve a variety of goals at test time. Furthermore, poking is a type of nonprehensile manipulation (i.e. manipulation without grasping (LaValle, 2006)). When an object is grasped, it is possible to fully control the state of the grasped object. With non prehensile manipulation, the state of the manipulated object is not directly controllable and thus less predictable. This makes the problem of achieving the goal state using non prehensile manipulation such as poking significantly more challenging than achieving the goal state by grasping (LaValle, 2006; Dogar & Srinivasa, 2012).\nA good review of model based control can be found in (Mayne, 2014) and (Jordan & Rumelhart, 1992; Wolpert et al., 1995) provide interesting perspectives. (Lenz et al., 2015) used deep learning based model predictive control for cutting vegetables. However, their system did not use vision and relied solely on the knowledge of the robotic state space and is thus limited in its generality. Only very recently, (Fragkiadaki et al., 2015; Wahlstr\u00f6m et al., 2015; Watter et al., 2015; Oh et al., 2015) addressed the problem of model based control from vision in synthetic domains of manipulating two degree of freedom robotic arm, inverted pendulum, billiards and Atari games. In contrast to these works, we tackle manipulation of complex, compressible real world objects. (Wu et al., 2015; Mottaghi et al., 2015; Lerer et al., 2016) proposed using Newtonian physics in combination with neural networks to predict the dynamics of objects in the future. However, they do not test their models for goal directed actions. A second difference is that we use learn \u201cintuitive\" physics from data instead of relying on Newtonian physics for reasons mentioned in section 1.\nIn robotic manipulation, a number of prior methods have been proposed that use hand-designed visual features and known object poses or key locations to plan and execute pushes and other non-prehensile manipulations (Kopicki et al., 2011; Lau et al., 2011; Meri\u00e7li et al., 2015). Unlike these methods, the goal in our work is to learn an intuitive physics model for pushing only from raw images, thus allowing the robot to learn by exploring the environment on its own without human intervention."}, {"heading": "3 Method", "text": "Even without predefined goals, an agent can learn a model of how its action affect the world in the hope that these models would be useful when the agent is later tasked with a specific goal. There are two types of models that can be learnt: a forward model that predicts the next world state in response to the applied action or an inverse model that maps change in world state to actions. The forward and inverse models can be formally described by equations 1 and 2, respectively. The notation used is as following: xt, ut are the world state and action applied time step t, x\u0302t+1, u\u0302t+1 are the predicted state and actions, and Wfwd and Winv are parameters of the functions F and G that are used to construct the forward and inverse models.\nx\u0302t+1 = F (xt, ut;Wfwd) (1) u\u0302t = G(xt, xt+1;Winv) (2)\nGiven an initial and goal state, inverse models provide a direct mapping to actions required for achieving the goal state in one step (if feasible). However, multiple possible actions can transform the world from one visual state to another. For example, an object can appear in a certain part of the visual field if the agent moves or if the agent uses its arms to move the object. This multi-modality in the action space makes the learning hard. On the other hand, given xt and ut, there exists a next state xt+1 that is unique up to dynamics noise. This naturally means that learning the forward models should be easier. However, learning forward models directly from visual inputs is hard because it requires the prediction of pixel values of future frames which is a non-trivial problem with no known good solution.\nIf it were possible to automatically learn a good abstract feature space, then the problem of predicting future visual states would become significantly easier. The higher layers of a deep neural networks trained on the ImageNet challenge provide one such feature space (Vondrick et al., 2015). However, it is not obvious that features adept at object recognition should also be optimal for manipulation. The obvious solution of adapting these features while simultaneously optimizing for the prediction loss leads to a degenerate solution of all the features reducing to zero, since the prediction loss\nin this case is also zero. Our key observation is that this degenerate solution can be avoided by imposing the constraint that it should be possible to infer the the executed action (ut) from the feature representation of two images obtained before (xt) and after (xt+1) the action (ut) is applied (i.e. optimizing the inverse model). This formulation provides a general mechanism for using general purpose function approximators such as deep neural networks for simultaneously learning a task relevant feature space and forecasting the future outcome of actions in this learned space.\nA second challenge in using forward models is that inferring the optimal action inevitably leads to finding a solution to non-convex problems that are subject to local optima. However an inverse model does not suffers from this drawback as it directly outputs the required action. These considerations taken together suggest that inverse and forward models have complementary strengths and joint training of these models will result in learning of abstract feature space for forecasting action outcomes (forward model) and the same feature space can be used by the inverse model to directly predict actions. This joint training creates an interplay where the inverse model removes the degeneracy of the feature space on which the forward model operates and the forward model in turn regularizes the feature space of the inverse model. Our experiments confirm this intuition and show that joint training help the inverse model generalize better."}, {"heading": "4 Experimental Setup", "text": "Manipulating real world objects by performing actions such as poking is very challenging, as objects have complex geometries and material properties that cause them to behave in unexpected ways as shown in Figure 2. To date our robot has executed 50K pokes, out of which 30K pokes are for the nutella bottle, 20K for the hammer and 5K each for pepito bottle and a coffee jar. Videos of our setup can be found at: link.\nOur experimental setup is illustrated in Figure 1. The robot has a table in front of it on which it can manipulate objects. The robot is equipped a Kinect camera, a gripper for poking, and a white rod for resetting the objects to the center of the workspace. The point cloud from the Kinect is used to randomly select one target point for poking. The Kinect point cloud is used only during the training to bias the robot to poke an object instead of poking in free space. The robot pokes objects by moving the finger along the XZ plane at a fixed height from the table. The X and Y axis represent the horizontal and vertical axes, while the Z axis points away from the robot. After selecting a random point to poke (p) on the object, the robot randomly samples a poke direction (\u03b8) and length (l). Kinematically, the poke is defined by points p1, p2 that are l2 distance from p in the directions \u03b8o, (180 + \u03b8)o respectively. The robot executes the poke by moving it\u2019s finger from p1 to p2."}, {"heading": "4.1 Training Details", "text": "Representation of Poke The poke is parameterized as a tuple of poke location (pt), the angle of poke (\u03b8t) and the length of poke (lt). For the purpose of training the inverse model we discretize the poke location onto a 20 \u00d7 20 grid, and the angle of poke and length of poke 36 and 11 bins, respectively. The 11th bin of the poke length is used to denote no poke. This discretization allows us to predict multimodal distributions over the poke in the inverse model, which we found crucial for handling the ambiguity inherent in inverse dynamics. For the forward model, we simply use the real-valued poke parameters.\nShorthand for Neural Network Architecture The abbreviations Ck, Fk represent a convolutional(C) layer with k filters, a fully-connected (F) layer with k filters respectively. We used ReLU non-linearity after every convolutional/fully-connected layer, except for the output layer. The output layer was a fully connected layer with number of units equal to the number of desired outputs. As an example of our notation, C48-F500 refers to a network with 48 filters in the convolution layer followed by ReLU non-linearity and a fully-connected layer with 500 units.\nNeural Network Architecture and Optimization The neural network architecture is shown in Figure 3. The network is divided into two parts. The first part (depicted by the top stream) learns the forward model, while the second part (depicted by the bottom two streams) learns the inverse model. The convolutional layers in the bottom two stream share weights and have the following architecture: C64-C32-C64. The output of the third convolution layer is fed into a spatial softmax layer (Levine et al., 2015) to extract the mean activation location of each of the conv-3 feature maps. These mean activations for two input images are referred to as xt, xt+1. For the inverse model the\nfeature representation of both the images are concatenated to predict the poke. We use separate fully connected layers to predict the poke location (pt; F100-F100-F400), angle (\u03b8t; F50-F40-F36) and length (lt; F50-F20-F10).\nThe network takes as inputs two images captured before (It) and after (It+1) the poke (ut) is made. The raw images captured by the robot are of size 480x640 which are then cropped to 380x500 to remove the parts of the images that do not lie on the table in front of the robot. In order to augment the amount of training data we jitter the cropping randomly (to preserve consistency, It and It+1 are jittered by the same amount). Finally the images are resized to 240x240 before feeding them into the CNN. We use stochastic gradient descent to train the network from scratch (i.e. random initialization) with a batch size of 64, batch norm and initial learning rate of 0.01 which is reduced by a factor of 10 every 10K iterations. We train the network for a total of 30K iterations.\nTraining is performed to optimize the loss defined in equation 3 below.\nLjoint = Linv(ut, u\u0302t,W ) + \u03bbLfwd(xt+1, x\u0302t+1,W ) (3)\nLinv is a sum of three cross entropy losses between the actual and predicted poke location, angle and length. Lfwd is a L1 loss between the predicted (x\u0302t+1) and the ground truth (xt+1) feature representation of the after image (It+1). W are the parameters of the neural network. We used \u03bb = 0.1 in all our experiments."}, {"heading": "4.2 Evaluation Procedure", "text": "Once the robot has learned a model of its interaction with objects we test the quality of the learned model by asking the robot to displace the objects from an initial configuration to the final configuration. Note that the robot is never provided any explicit reward for this task during the training process and therefore has no incentive to move the object to a desired configuration. Even if the same object is present in a nearby location in the initial and goal image, it is often not possible to displace the object to the goal image in a single poke. This is because the poke causes both object to both translate and rotate at the same time.\nFor displacing the object to the goal position, we use the inverse model to predict a poke from given pair of input and goal images. This poke is executed to generate the next image. The pair of this new image and goal image are again fed as inputs to the inverse model. If the inverse model predicts a no poke (section 4.1), then it is deemed that the goal is achieved. If not, this process is repeated iteratively until the goal is achieved or if the robot has made 10 pokes.\nEvaluation Metric We evaluate the performance of the robot by measuring the relative error in location and pose of the object. By the pose of the object we refer to the angle of the major axis of the object measured from the x-axis. For the purpose of evaluation, the position and pose of the object were estimated using template matching. We collected 20 templates of each object in 20 rotations around the Y axis. We used mean squared distance in the RGB color space to find the location and pose of objects using these templates in the evaluation images. The relative location error was defined as dftdit , where dft is the distance between object locations in the final image (i.e. after robot predicts a no poke action) and the target image and dit is the distance between the object positions in initial and final images. We measure relative location error as objects between different pairs of initial and target images are displaced by different amounts. We report the median relative location error across the test set and the standard deviation in the estimate of the median using a bootstrapping procedure."}, {"heading": "5 Simulation Experiments", "text": "For testing the hypothesis if forward models can regularize inverse models, we first conducted extensive experiments in simulation using environments consisting of a single rectangle that was allowed to freely translate and rotate (Figure 4). The agent interacted with the rectangle by poking it by small forces. During the unsupervised training phase, the displacement of the rectangle between the initial and final images was restricted to at most 5 pixels (for reference, the size of the world was 48x48 pixels and of the rectangles was 14x18 pixels). The training was performed using an architecture similar to the one described in section 4.1. The inverse only model was trained by setting \u03bb = 0 in equation 3. Additional details about the experimental setup, network architecture and training procedure for the simulation experiments is provided in the supplementary materials.\nFor testing generalization to novel scenarios, the inverse and joint (i.e. inverse + forward) models were evaluated in worlds where rectangles were displaced between 5 and 30 pixels. The right subplot in figure 4 shows that when less training data (10K, 20K examples) is available the joint model outperforms the inverse model and reaches closer to the goal state in a fewer steps (i.e. fewer number of actions). This shows that indeed the forward model regularizes the inverse model and helps generalize better. However, when the number of training examples are increased to 100K both models are at par. This is not surprising because training with more data often results into better generalization and thus the inverse model is no longer reliant on the forward model for the regularization."}, {"heading": "6 Real World Experiments", "text": "The data collected by the robot was used to learn a joint model of interaction as described in Section 4.1. To test these models, the robot was provided pairs of initial and target images showing a single object in two different configurations and was tasked to displace the object from the initial to target configuration (see Figure 5). To minimize human intervention in generating relatively large test sets, an automated procedure described in the supplementary materials was used to generate the initial/target images. We used on the order of 30-50 pairs of initial/target images (1-2 hours of robot interaction time) for testing each model.\nThe robot iteratively used its inverse model to infer the optimal poke until it predicted a no-poke (i.e. predicted stop). The model outputs a no-poke when it deems that the state of object in the current image is very close to the state in the target image. Figure 5 shows a random sample of poke sequences used by the robot to displace the object into goal configuration. The performance plots in the figure show that the robot\u2019s stopping strategy (predicted stop) is better than stopping after the first poke itself. Even though the models were trained using a single poke, this result implies that the learnt models can be used iteratively to improve performance.\nWe compared the performance of the learned joint and inverse models against a strong hand engineered baseline constructed using explicit knowledge of object locations in the current and target image. The poke sequence in the baseline was generated by poking the object along the line joining the centroids of the object in the current and target image using poke length of 3 cms. We chose poke length of 3 cms as it was found to be optimal. This process was repeated iteratively for five time steps. From Figure 5 it can be seen that our models perform better than a strong hand-engineered baseline and the joint model outperforms the inverse only model.\nDespite the fact that we perform better than the baseline, the absolute performance shows that displacing real world objects is a hard problem and there is substantial scope for improvement. For investigating the cause of failures, we computed performance metrics when an oracle stopping procedure was used. The oracle metric was computed as following: the robot was allowed to make 10 pokes which resulted into a sequence of 10 images/states. From these 10 states, the state that was found to be closest to the target state by explicitly performing object detection (see evaluation metric in section 4.2) was used to compute the performance metrics. This oracle number shown in Figure 5 reveals that improvements in deciding when to stop poking can significantly improve results.\nActive v/s Random poke data collection Instead of randomly collecting poke data we found that it is possible to learn better models when poke data collection is biased by the model as the model is being learned. In the active data collection phase, the robot maintains a memory of the previous 10 images that it encounters. It randomly samples one of these images and deems it to be the target image. It then executes the poke that it\u2019s current model predicts will displace the object in the current image into the target configuration. The visual state before and after the poke and the poke itself are added to the training set. Note that the robot is not provided any reward for reaching or not reaching the target configuration. We found that when we trained models using 10K randomly sampled pokes + 5K actively sampled pokes, it outperformed a model trained using 15K random pokes (Figure 6)."}, {"heading": "7 Discussion and Future Work", "text": "We presented a method for jointly learning the inverse and forward models for predicting the outcome of actions from raw visual inputs, as well as an empirical evaluation of an experiential approach to learning intuitive physics models in the context of robotic manipulation. In our experimental setup, we collected over 50 thousand interaction episodes to construct models that predict the outcome of robotic pokes. We then evaluated our learned models by using them to choose pokes that will push an object into a target configuration. Our results indicate that the proposed joint inverse and forward models attain higher accuracy than more standard methods, and also that active data collection, where the robot sets and attempts to reach its own goals using the latest learned model, produces more accurate predictive models.\nNonprehensile manipulation is a hard problem, and although our models perform better than the baseline methods, they are far from perfect. While poking, the robot does not have full control of the object state, which makes it harder to predict and plan for the outcome of the action. For example, depending on whether the poke is slightly on the left or slightly on the right of a simple cuboidal object, the resulting motion can be substantially different (i.e. clockwise or anti-clockwise). With real world objects having complex geometry, this learning problem becomes even harder. An interesting area of future investigation is to use continuous time control with smaller pokes that are likely to be more predictable than the large pokes used in this work.\nWithout any a priori knowledge and information about goals the robot has no incentive to learn pokes that are more reliable at displacing objects from one configuration to another. As there are multiple ways of displacing objects, this issue can lead to non-robust planning solutions that are likely to fail. For addressing this concern, we used active data sampling, which we show leads to better results. The intuition behind this is as following: the robot chooses a desired target image (xtarget), and then uses the learned model to predict the poke (a) that will transform the objects in the current image (xbefore) into the target configuration. The triplet of previous state (xbefore), the poke (a), and the new state (xafter) that is obtained after executing the predicted poke is used as training data to improve the model. This process reinforces pokes that reliably transform xbefore into xtarget (i.e if xafter \u2248 xtarget). However, if xafter is substantially different from xtarget, there is no direct feedback that biases the model into believing that action a is unreliable for achieving xtarget. An interesting direction for future research is to either resolve this limitation by incorporating the predictions of the forward model into the active sampling scheme, or come up with alternative strategies or constraints that will bias the robot towards learning reliable actions.\nA neural network formulation for simultaneously learning and forecasting in an abstract feature space is proposed in this work. We show that the forward model regularizes the inverse model, but it might be possible that alternative loss functions are even better regularizers. Also, using forward models just as regularizers is unsatisfactory because forward models equip the agent with the ability to perform rollouts, and consequently perform planning with longer horizons. This is in contrast to inverse models that can be used for multistep execution only by executing actions one after another,\nwithout any foresight. A detailed investigation of how forward models can be effectively used for planning in the proposed framework is currently pending and is an interesting avenue for future work.\nOur experiments show generalization to the location and pose of objects, but we have not shown any generalization to new objects. The primary reason is that data collection on a real robot is slow and until now we have only collected data for four objects. However, this is not a limitation of our approach as data collection process can be easily parallelized across robots (Levine et al., 2016). An open research question in data collection is whether we should collect large amounts of data for few objects or small amounts of data for a large number of objects. Future work addressing this question and showing generalization to new objects would be of great interest.\nIn this work we have proposed the use of intuitive models of physics learned from experience and simultaneous learning of forward and inverse models for vision based control. Although our approach is evaluated on a specific robotic manipulation task, there are no task specific assumptions, and the techniques are applicable to other tasks. In future, it would be interesting to see how the proposed approach scales with more complex environments, diverse object collections, different manipulation skills and to other non-manipulation based tasks, such as navigation."}, {"heading": "Acknowledgement", "text": "First and foremost, we thank Alyosha Efros for inspiration and fruitful discussions throughout this work. The title of this paper has been partly influenced by the term \u201cpokebot\" that Alyosha has been using for several years. We would like to thank Ruzena Bajcsy for access to the Baxter robot and Shubham Tulsiani for helpful comments. This work was supported in part by ONR MURI N00014-14-1-0671 and ONR YIP. Sergey Levine was partially supported by ARL, through the MAST program. We gratefully acknowledge NVIDIA corporation for the donation of K40 GPUs and access to the NVIDIA PSG cluster for this research.\nSupplementary Materials\nSupplementary Materials and videos of our data collection setup can be found at: link."}], "references": [{"title": "A planning framework for non-prehensile manipulation under clutter and uncertainty", "author": ["Dogar", "Mehmet R", "Srinivasa", "Siddhartha S"], "venue": "Autonomous Robots,", "citeRegEx": "Dogar et al\\.,? \\Q2012\\E", "shortCiteRegEx": "Dogar et al\\.", "year": 2012}, {"title": "Deep spatial autoencoders for visuomotor learning", "author": ["Finn", "Chelsea", "Tan", "Xin Yu", "Duan", "Yan", "Darrell", "Trevor", "Levine", "Sergey", "Abbeel", "Pieter"], "venue": null, "citeRegEx": "Finn et al\\.,? \\Q2015\\E", "shortCiteRegEx": "Finn et al\\.", "year": 2015}, {"title": "Learning visual predictive models of physics for playing billiards", "author": ["Fragkiadaki", "Katerina", "Agrawal", "Pulkit", "Levine", "Sergey", "Malik", "Jitendra"], "venue": "arXiv preprint arXiv:1511.07404,", "citeRegEx": "Fragkiadaki et al\\.,? \\Q2015\\E", "shortCiteRegEx": "Fragkiadaki et al\\.", "year": 2015}, {"title": "Internal physics models guide probabilistic judgments about object dynamics", "author": ["Hamrick", "Jessica", "Battaglia", "Peter", "Tenenbaum", "Joshua B"], "venue": "In Proceedings of the 33rd annual conference of the cognitive science society,", "citeRegEx": "Hamrick et al\\.,? \\Q2011\\E", "shortCiteRegEx": "Hamrick et al\\.", "year": 2011}, {"title": "Forward models: Supervised learning with a distal teacher", "author": ["Jordan", "Michael I", "Rumelhart", "David E"], "venue": "Cognitive science,", "citeRegEx": "Jordan et al\\.,? \\Q1992\\E", "shortCiteRegEx": "Jordan et al\\.", "year": 1992}, {"title": "The neuro slot car racer: Reinforcement learning in a real world setting", "author": ["Kietzmann", "Tim C", "Riedmiller", "Martin"], "venue": "In Machine Learning and Applications,", "citeRegEx": "Kietzmann et al\\.,? \\Q2009\\E", "shortCiteRegEx": "Kietzmann et al\\.", "year": 2009}, {"title": "Physically consistent state estimation and system identification for contacts", "author": ["Kolev", "Svetoslav", "Todorov", "Emanuel"], "venue": "In Humanoid Robots (Humanoids),", "citeRegEx": "Kolev et al\\.,? \\Q2015\\E", "shortCiteRegEx": "Kolev et al\\.", "year": 2015}, {"title": "Learning to predict how rigid objects behave under simple manipulation", "author": ["Kopicki", "Marek", "Zurek", "Sebastian", "Stolkin", "Rustam", "M\u00f6rwald", "Thomas", "Wyatt", "Jeremy"], "venue": "In Robotics and Automation (ICRA),", "citeRegEx": "Kopicki et al\\.,? \\Q2011\\E", "shortCiteRegEx": "Kopicki et al\\.", "year": 2011}, {"title": "Deep learning of visual control policies", "author": ["Lange", "Sascha", "Riedmiller", "Martin A"], "venue": "In ESANN. Citeseer,", "citeRegEx": "Lange et al\\.,? \\Q2010\\E", "shortCiteRegEx": "Lange et al\\.", "year": 2010}, {"title": "Autonomous reinforcement learning on raw visual input data in a real world application", "author": ["Lange", "Stanislav", "Riedmiller", "Martin", "Voigtlander", "Arne"], "venue": "In Neural Networks (IJCNN), The 2012 International Joint Conference on,", "citeRegEx": "Lange et al\\.,? \\Q2012\\E", "shortCiteRegEx": "Lange et al\\.", "year": 2012}, {"title": "Automatic learning of pushing strategy for delivery of irregularshaped objects", "author": ["Lau", "Manfred", "Mitani", "Jun", "Igarashi", "Takeo"], "venue": "In Robotics and Automation (ICRA),", "citeRegEx": "Lau et al\\.,? \\Q2011\\E", "shortCiteRegEx": "Lau et al\\.", "year": 2011}, {"title": "Deepmpc: Learning deep latent features for model predictive control", "author": ["Lenz", "Ian", "Knepper", "Ross", "Saxena", "Ashutosh"], "venue": "In RSS,", "citeRegEx": "Lenz et al\\.,? \\Q2015\\E", "shortCiteRegEx": "Lenz et al\\.", "year": 2015}, {"title": "Learning physical intuition of block towers by example", "author": ["Lerer", "Adam", "Gross", "Sam", "Fergus", "Rob"], "venue": "arXiv preprint arXiv:1603.01312,", "citeRegEx": "Lerer et al\\.,? \\Q2016\\E", "shortCiteRegEx": "Lerer et al\\.", "year": 2016}, {"title": "End-to-end training of deep visuomotor policies", "author": ["Levine", "Sergey", "Finn", "Chelsea", "Darrell", "Trevor", "Abbeel", "Pieter"], "venue": "CoRR, abs/1504.00702,", "citeRegEx": "Levine et al\\.,? \\Q2015\\E", "shortCiteRegEx": "Levine et al\\.", "year": 2015}, {"title": "Learning hand-eye coordination for robotic grasping with deep learning and large-scale data collection", "author": ["Levine", "Sergey", "Pastor", "Peter", "Krizhevsky", "Alex", "Quillen", "Deirdre"], "venue": null, "citeRegEx": "Levine et al\\.,? \\Q2016\\E", "shortCiteRegEx": "Levine et al\\.", "year": 2016}, {"title": "Continuous control with deep reinforcement learning", "author": ["Lillicrap", "Timothy P", "Hunt", "Jonathan J", "Pritzel", "Alexander", "Heess", "Nicolas", "Erez", "Tom", "Tassa", "Yuval", "Silver", "David", "Wierstra", "Daan"], "venue": "arXiv preprint arXiv:1509.02971,", "citeRegEx": "Lillicrap et al\\.,? \\Q2015\\E", "shortCiteRegEx": "Lillicrap et al\\.", "year": 2015}, {"title": "Model predictive control: Recent developments and future", "author": ["Mayne", "David Q"], "venue": "promise. Automatica,", "citeRegEx": "Mayne and Q.,? \\Q2014\\E", "shortCiteRegEx": "Mayne and Q.", "year": 2014}, {"title": "Intuitive physics", "author": ["McCloskey", "Michael"], "venue": "Scientific american,", "citeRegEx": "McCloskey and Michael.,? \\Q1983\\E", "shortCiteRegEx": "McCloskey and Michael.", "year": 1983}, {"title": "Push-manipulation of complex passive mobile objects using experimentally acquired motion models", "author": ["Meri\u00e7li", "Tekin", "Veloso", "Manuela", "Ak\u0131n", "H Levent"], "venue": "Autonomous Robots,", "citeRegEx": "Meri\u00e7li et al\\.,? \\Q2015\\E", "shortCiteRegEx": "Meri\u00e7li et al\\.", "year": 2015}, {"title": "The perception of causality", "author": ["Michotte", "Albert"], "venue": null, "citeRegEx": "Michotte and Albert.,? \\Q1963\\E", "shortCiteRegEx": "Michotte and Albert.", "year": 1963}, {"title": "Human-level control through deep reinforcement learning", "author": ["Mnih", "Volodymyr", "Kavukcuoglu", "Koray", "Silver", "David", "Rusu", "Andrei A", "Veness", "Joel", "Bellemare", "Marc G", "Graves", "Alex", "Riedmiller", "Martin", "Fidjeland", "Andreas K", "Ostrovski", "Georg"], "venue": "Nature, 518(7540):529\u2013533,", "citeRegEx": "Mnih et al\\.,? \\Q2015\\E", "shortCiteRegEx": "Mnih et al\\.", "year": 2015}, {"title": "Newtonian image understanding: Unfolding the dynamics of objects in static images", "author": ["Mottaghi", "Roozbeh", "Bagherinezhad", "Hessam", "Rastegari", "Mohammad", "Farhadi", "Ali"], "venue": "arXiv preprint arXiv:1511.04048,", "citeRegEx": "Mottaghi et al\\.,? \\Q2015\\E", "shortCiteRegEx": "Mottaghi et al\\.", "year": 2015}, {"title": "Action-conditional video prediction using deep networks in atari games", "author": ["Oh", "Junhyuk", "Guo", "Xiaoxiao", "Lee", "Honglak", "Lewis", "Richard", "Singh", "Satinder"], "venue": "arXiv preprint arXiv:1507.08750,", "citeRegEx": "Oh et al\\.,? \\Q2015\\E", "shortCiteRegEx": "Oh et al\\.", "year": 2015}, {"title": "Supersizing self-supervision: Learning to grasp from 50k tries and 700 robot hours", "author": ["Pinto", "Lerrel", "Gupta", "Abhinav"], "venue": "arXiv preprint arXiv:1509.06825,", "citeRegEx": "Pinto et al\\.,? \\Q2015\\E", "shortCiteRegEx": "Pinto et al\\.", "year": 2015}, {"title": "The development of embodied cognition: Six lessons from babies", "author": ["Smith", "Linda", "Gasser", "Michael"], "venue": "Artificial life,", "citeRegEx": "Smith et al\\.,? \\Q2005\\E", "shortCiteRegEx": "Smith et al\\.", "year": 2005}, {"title": "Anticipating the future by watching unlabeled video", "author": ["Vondrick", "Carl", "Pirsiavash", "Hamed", "Torralba", "Antonio"], "venue": "arXiv preprint arXiv:1504.08023,", "citeRegEx": "Vondrick et al\\.,? \\Q2015\\E", "shortCiteRegEx": "Vondrick et al\\.", "year": 2015}, {"title": "From pixels to torques: Policy learning with deep dynamical models", "author": ["Wahlstr\u00f6m", "Niklas", "Sch\u00f6n", "Thomas B", "Deisenroth", "Marc Peter"], "venue": "CoRR, abs/1502.02251,", "citeRegEx": "Wahlstr\u00f6m et al\\.,? \\Q2015\\E", "shortCiteRegEx": "Wahlstr\u00f6m et al\\.", "year": 2015}, {"title": "Embed to control: A locally linear latent dynamics model for control from raw images", "author": ["Watter", "Manuel", "Springenberg", "Jost", "Boedecker", "Joschka", "Riedmiller", "Martin"], "venue": "In Advances in Neural Information Processing Systems,", "citeRegEx": "Watter et al\\.,? \\Q2015\\E", "shortCiteRegEx": "Watter et al\\.", "year": 2015}, {"title": "An internal model for sensorimotor integration", "author": ["Wolpert", "Daniel M", "Ghahramani", "Zoubin", "Jordan", "Michael I"], "venue": "Science-AAAS-Weekly Paper Edition,", "citeRegEx": "Wolpert et al\\.,? \\Q1995\\E", "shortCiteRegEx": "Wolpert et al\\.", "year": 1995}, {"title": "Galileo: Perceiving physical object properties by integrating a physics engine with deep learning", "author": ["Wu", "Jiajun", "Yildirim", "Ilker", "Lim", "Joseph J", "Freeman", "Bill", "Tenenbaum", "Josh"], "venue": "In Advances in Neural Information Processing Systems,", "citeRegEx": "Wu et al\\.,? \\Q2015\\E", "shortCiteRegEx": "Wu et al\\.", "year": 2015}], "referenceMentions": [{"referenceID": 21, "context": "One popular way of building a model is to represent the world in terms of a fixed set of physical parameters such as mass, friction coefficient, normal forces etc and use a physics simulator for computing object dynamics (Kolev & Todorov, 2015; Mottaghi et al., 2015; Wu et al., 2015; Hamrick et al., 2011) from this representation.", "startOffset": 221, "endOffset": 306}, {"referenceID": 29, "context": "One popular way of building a model is to represent the world in terms of a fixed set of physical parameters such as mass, friction coefficient, normal forces etc and use a physics simulator for computing object dynamics (Kolev & Todorov, 2015; Mottaghi et al., 2015; Wu et al., 2015; Hamrick et al., 2011) from this representation.", "startOffset": 221, "endOffset": 306}, {"referenceID": 3, "context": "One popular way of building a model is to represent the world in terms of a fixed set of physical parameters such as mass, friction coefficient, normal forces etc and use a physics simulator for computing object dynamics (Kolev & Todorov, 2015; Mottaghi et al., 2015; Wu et al., 2015; Hamrick et al., 2011) from this representation.", "startOffset": 221, "endOffset": 306}, {"referenceID": 2, "context": "We call this alternative approach as \u201cintuitive\u201d physics (Fragkiadaki et al., 2015; McCloskey, 1983; Michotte, 1963).", "startOffset": 57, "endOffset": 116}, {"referenceID": 20, "context": "Several recent works have proposed to learn visual control policies using reinforcement learning for tasks such as playing Atari games (Mnih et al., 2015) and controlling robots in simulation (Lillicrap et al.", "startOffset": 135, "endOffset": 154}, {"referenceID": 15, "context": ", 2015) and controlling robots in simulation (Lillicrap et al., 2015) and in the real world (Levine et al.", "startOffset": 45, "endOffset": 69}, {"referenceID": 13, "context": ", 2015) and in the real world (Levine et al., 2015).", "startOffset": 30, "endOffset": 51}, {"referenceID": 9, "context": "A number of recent methods have also been proposed for learning representations for vision-based control using autoencoders to transform visual inputs into a low-dimensional state space (Lange et al., 2012; Finn et al., 2015; Lange & Riedmiller, 2010; Kietzmann & Riedmiller, 2009).", "startOffset": 186, "endOffset": 281}, {"referenceID": 1, "context": "A number of recent methods have also been proposed for learning representations for vision-based control using autoencoders to transform visual inputs into a low-dimensional state space (Lange et al., 2012; Finn et al., 2015; Lange & Riedmiller, 2010; Kietzmann & Riedmiller, 2009).", "startOffset": 186, "endOffset": 281}, {"referenceID": 25, "context": "Recently (Vondrick et al., 2015) proposed to build prediction models in the space of features learnt by pretraining on image classification on Imagenet.", "startOffset": 9, "endOffset": 32}, {"referenceID": 14, "context": "(Pinto & Gupta, 2015; Levine et al., 2016) learn how to grasp objects by trial and error from a large number of attempts.", "startOffset": 0, "endOffset": 42}, {"referenceID": 28, "context": "A good review of model based control can be found in (Mayne, 2014) and (Jordan & Rumelhart, 1992; Wolpert et al., 1995) provide interesting perspectives.", "startOffset": 71, "endOffset": 119}, {"referenceID": 11, "context": "(Lenz et al., 2015) used deep learning based model predictive control for cutting vegetables.", "startOffset": 0, "endOffset": 19}, {"referenceID": 2, "context": "Only very recently, (Fragkiadaki et al., 2015; Wahlstr\u00f6m et al., 2015; Watter et al., 2015; Oh et al., 2015) addressed the problem of model based control from vision in synthetic domains of manipulating two degree of freedom robotic arm, inverted pendulum, billiards and Atari games.", "startOffset": 20, "endOffset": 108}, {"referenceID": 26, "context": "Only very recently, (Fragkiadaki et al., 2015; Wahlstr\u00f6m et al., 2015; Watter et al., 2015; Oh et al., 2015) addressed the problem of model based control from vision in synthetic domains of manipulating two degree of freedom robotic arm, inverted pendulum, billiards and Atari games.", "startOffset": 20, "endOffset": 108}, {"referenceID": 27, "context": "Only very recently, (Fragkiadaki et al., 2015; Wahlstr\u00f6m et al., 2015; Watter et al., 2015; Oh et al., 2015) addressed the problem of model based control from vision in synthetic domains of manipulating two degree of freedom robotic arm, inverted pendulum, billiards and Atari games.", "startOffset": 20, "endOffset": 108}, {"referenceID": 22, "context": "Only very recently, (Fragkiadaki et al., 2015; Wahlstr\u00f6m et al., 2015; Watter et al., 2015; Oh et al., 2015) addressed the problem of model based control from vision in synthetic domains of manipulating two degree of freedom robotic arm, inverted pendulum, billiards and Atari games.", "startOffset": 20, "endOffset": 108}, {"referenceID": 29, "context": "(Wu et al., 2015; Mottaghi et al., 2015; Lerer et al., 2016) proposed using Newtonian physics in combination with neural networks to predict the dynamics of objects in the future.", "startOffset": 0, "endOffset": 60}, {"referenceID": 21, "context": "(Wu et al., 2015; Mottaghi et al., 2015; Lerer et al., 2016) proposed using Newtonian physics in combination with neural networks to predict the dynamics of objects in the future.", "startOffset": 0, "endOffset": 60}, {"referenceID": 12, "context": "(Wu et al., 2015; Mottaghi et al., 2015; Lerer et al., 2016) proposed using Newtonian physics in combination with neural networks to predict the dynamics of objects in the future.", "startOffset": 0, "endOffset": 60}, {"referenceID": 7, "context": "In robotic manipulation, a number of prior methods have been proposed that use hand-designed visual features and known object poses or key locations to plan and execute pushes and other non-prehensile manipulations (Kopicki et al., 2011; Lau et al., 2011; Meri\u00e7li et al., 2015).", "startOffset": 215, "endOffset": 277}, {"referenceID": 10, "context": "In robotic manipulation, a number of prior methods have been proposed that use hand-designed visual features and known object poses or key locations to plan and execute pushes and other non-prehensile manipulations (Kopicki et al., 2011; Lau et al., 2011; Meri\u00e7li et al., 2015).", "startOffset": 215, "endOffset": 277}, {"referenceID": 18, "context": "In robotic manipulation, a number of prior methods have been proposed that use hand-designed visual features and known object poses or key locations to plan and execute pushes and other non-prehensile manipulations (Kopicki et al., 2011; Lau et al., 2011; Meri\u00e7li et al., 2015).", "startOffset": 215, "endOffset": 277}, {"referenceID": 25, "context": "The higher layers of a deep neural networks trained on the ImageNet challenge provide one such feature space (Vondrick et al., 2015).", "startOffset": 109, "endOffset": 132}, {"referenceID": 13, "context": "The output of the third convolution layer is fed into a spatial softmax layer (Levine et al., 2015) to extract the mean activation location of each of the conv-3 feature maps.", "startOffset": 78, "endOffset": 99}, {"referenceID": 13, "context": "Spatial softmax layer (Levine et al., 2015) operates on conv-3 outputs to extract the mean activation location of each of the conv-3 feature maps (also called feature points) - xt, xt+1 from images It, It+1, respectively.", "startOffset": 22, "endOffset": 43}, {"referenceID": 14, "context": "However, this is not a limitation of our approach as data collection process can be easily parallelized across robots (Levine et al., 2016).", "startOffset": 118, "endOffset": 139}], "year": 2016, "abstractText": "We investigate an experiential learning paradigm for acquiring an internal model of intuitive physics. Our model is evaluated on a real-world robotic manipulation task that requires displacing objects to target locations by poking. The robot gathered over 400 hours of experience by executing more than 50K pokes on different objects. We propose a novel approach based on deep neural networks for modeling the dynamics of robot\u2019s interactions directly from images, by jointly estimating forward and inverse models of dynamics. The inverse model objective provides supervision to construct informative visual features, which the forward model can then predict and in turn regularize the feature space for the inverse model. The interplay between these two objectives creates useful, accurate models that can then be used for multi-step decision making. This formulation has the additional benefit that it is possible to learn forward models in an abstract feature space and thus alleviate the need of predicting pixels. Our experiments show that this joint modeling approach outperforms alternative methods. We also demonstrate that active data collection using the learned model further improves performance.", "creator": "LaTeX with hyperref package"}}}