{"id": "1608.06175", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "17-Aug-2016", "title": "Effectiveness of greedily collecting items in open world games", "abstract": "Since Pokemon Go sent millions on the quest of collecting virtual monsters, an important question has been on the minds of many people: Is going after the closest item first a time-and-cost-effective way to play? Here, we show that this is in fact a good strategy which performs on average only 7% worse than the best possible solution in terms of the total distance traveled to gather all the items. Even when accounting for errors due to the inability of people to accurately measure distances by eye, the performance only goes down to 16% of the optimal solution. So if you are looking to get to the final destination, then here's an easy way to take your distance from the best possible solution in terms of the total distance travelled to gather all the items.\n\n\nWhat the user thinks about the situation in a game?\nI think the worst thing that can happen is it becomes a bit difficult to do any kind of game that does not get as many as you would like. However, there are many aspects of a game where people do really well, but the easiest way to do that is to look at the whole world and compare the world.\nWhat does it mean if the player sees one or two virtual monsters before you actually encounter them?\nThe most obvious way to deal with it is to look at the whole world and compare the entire world and compare the world and compare the whole world with a lot of different places, and then see if you can actually look at the whole world and compare the whole world and compare the whole world with a lot of different places, and then make an easy decision to make.\nHow does it feel to be the first human being to ever get to the actual human being?\nI think most people think so, but I think it's very important to know what level to be in that world. I think we can all say: \"I want to go to that level, I want to have my own level\" for us to understand. This is true for many other people because we can tell the difference between real humans and the one on the field. But for some people, the difference between real humans and the one on the field and in the real world, they have different skills. If you don't know how to do this, it's hard to feel like you are the best human being, and maybe you are really just the bad guy or a bad guy.\nI think the first human being to get to the real human being is a professional sports fan, so we all", "histories": [["v1", "Wed, 17 Aug 2016 20:43:56 GMT  (1700kb,D)", "http://arxiv.org/abs/1608.06175v1", "3 pages, 4 figures"]], "COMMENTS": "3 pages, 4 figures", "reviews": [], "SUBJECTS": "cs.AI", "authors": ["andrej gajduk"], "accepted": false, "id": "1608.06175"}, "pdf": {"name": "1608.06175.pdf", "metadata": {"source": "CRF", "title": "Effectiveness of greedily collecting items in open world games", "authors": ["Andrej Gajduk"], "emails": [], "sections": [{"heading": null, "text": "I. INTRODUCTION\nThe traveling salesman problem (TSP) is a well known NP-hard problem. It asks the following question: How can a traveling salesman visit all of N cities at least once and return to his starting location in a most efficient manner? Efficient in this context can refer to distance, time or money. Because of its importance in real world scenarios such as delivery networks and supply chains it has been extensively studied and many optimization algorithms have been proposed in the literature [1], [2], [3]. However, humans have repeatedly been shown to perform better than computer algorithms on specific instances of the problem [4], [5].\nAnother emerging scenario in which TSP is relevant are open world computer games. These games, sometimes also called free roam, allow players to freely explore a vast virtual world, completing missions and gathering collectibles in their preferred order. Some famous games that fall into this category are Grand Theft Auto, World of Warcraft, Assasins Creed and Far Cry featuring modern-urban, fantasy, historic and pacific island settings, respectively. Most recently, Pokemon GO used augmented reality to make the whole world a setting for an open world game. All these games feature a range of items, hidden notes, virtual currency stashes or pokemons scattered throughout the virtual world. One of the objectives for the players is to collect as many of these collectibles as possible, especially if they are looking to earn the Completionist achievement.\nIn order to investigate how players of open world games can effectively gather collectibles we focus our attention on a variation of the TSP, where the player must gather all the collectibles starting from a given position, but returning to the starting position is not required. Furthermore, the collectibles are located on a 2D map, and moving between any pair of collectibles is unobstructed as in most games. The optimization parameter is the total distance traveled in order to to collect all the collectibles.\n*This work was not supported by any organization Source code available at https://github.com/gajduk/greedy-tsp\nOur goal is to see how a simple greedy algorithm compares to the optimal solution in realistic scenarios. The algorithm is outlined in Section II and our finding related to its performance in Section III. Section IV concludes this manuscript."}, {"heading": "II. ALGORITHM", "text": "The algorithm of interest is based on the following gaming strategy: Always first gather the item which is closest to your current position. This strategy is what a player would generally use because it is straightforward and does not require a lot of planning.\nTo find the optimal solution an algorithm based on exhaustive search was used. It considers all possible permutations of the collectibles, and is thus guaranteed to find the optimal solution. Because the number of permutations is proportional to the factorial of the number of collectibles N! this algorithm works only when N \u2264 13, which subsequently affects our analysis. The greedy algorithm works as follows:\nAlgorithm 1 Greedy algorithm 1: procedure GREEDY(start pos,C) 2: current pos\u2190 start pos 3: V \u2190{} 4: while |V |< |C| do 5: next pos\u2190minc dist(current pos,c),\u2200c \u2208C \\V 6: V \u2190V \u222anext pos 7: current pos\u2190 next pos 8: end while 9: end procedure\nwhere C is a set of the positions of all the collectibles, and dist is a function which determines the Euclidean distance between two positions in a 2D plane.\nar X\niv :1\n60 8.\n06 17\n5v 1\n[ cs\n.A I]\n1 7\nA ug\n2 01\n6\nWhile a player is immersed in the game however, it might not be possible to measure the distance between two collectibles exactly, so the playes has to guestimate it, which may result in errors. To capture this, we propose the greedy with error algorithm which includes the following modification to the line 5 in the greedy algorithm\nnext pos\u2190 [ min\nc dist(current pos,c)+\u03b6\n] ,\u2200c \u2208C \\V\nwhere \u03b6 is an error term from a normal distribution N (1,\u03c3) with cutoffs at 0.7 and 1.3 to prevent unreasonable errors."}, {"heading": "III. RESULTS", "text": "For illustration, an excerpt from the Far Cry 3 world will be used, where collectibles are marked by pitchers (Fig. 1).\nNot surprisingly, the performance of the greedy algorithm depends on the starting location as shown in Figure 2. In the first case, the route chosen by the greedy algorithm is suboptimal and results in a total distance of 3601 (Figa. 2- upper left), opposed to the optimal distance of 2764 (Fig. 2- upper right), which is a difference of 30.2%. In the second case a different starting location is chosen which results in the greedy algorithm finding a solution that is much close to\nthe optimal one (2961\u2212 2883 or a difference of 2.4%), as indicated by the similar routes in the second row of Figure2.\nAlthough, this example is intriguing a detailed analysis is needed to quantify the performance of the greedy algorithm.\nTo this end the following setup was used: N collectibles were randomly positioned on a 2D plane (1000x1000 in size), assuming a uniform distribution. The center of the plane with coordinates (500,500) was set as the starting position. Afterwards the optimal distance to get all the collectibles was calculated as well as the total distance using the greedy algorithm. This was repeated 1000 times. Note that, the actual choice of plane size does not influence our results as our only interest is the relative performance of the greedy algorithm as compared to the optimal solution.\nWe found that the performance of the greedy algorithm deteriorates as the number of collectibles N increases (Fig. 3). However, the overall performance was surprisingly good and for eleven collectibles N = 11 it was on average only 7.3% worse than the optimal solution, with upper and lower quartiles at 2.6% and 13.9% respectively.\nNext, let us turn our attention to the greedy algorithm with error. This algorithm is not only worse than the optimal, but it is also worse than the greedy algorithm (Fig. 2). Further analysis was performed in order to estimate what effect the level of error in guestimating the distance has on the performance of the greedy algorithm with error. To this end, the number of collectibles was fixed to N = 10 and the variance (\u03c3 ) in the error term was varied. As expected, higher errors when estimating the distance between two points lead to increasingly poor performance up to 16.9% worse than the optimal (Fig. 4)."}, {"heading": "IV. CONCLUSION", "text": "In this manuscript we looked at how a greedy algorithm compares to exhaustive search for a variant of the Traveling Salesman Problem, which is relevant in many open world computer games. The main advantages of the greedy algorithm is that it can be performed by a player as he or she is playing, since no complex computations are required, as opposed to exhaustive search which can only be done by a computer. We found that the performance of the greedy algorithm is comparable to the optimal solution, with the\ndifference depending on the number of collectibles and choice of starting position. For N = 11 the greedy algorithm resulted in routes 7.3% longer on average.\nEven when human errors in estimating the distances were included the greedy algorithm performed on average less than 16.9% worse than the optimal solution, depending on the level of error. Our analysis was unfortunately limited by the fact that finding the optimal solution is NP hard with complexity N!, which prevented us from calculating the performance for N > 13. Nevertheless, the results suggest that players who use the greedy strategy of always going after the closest item first, are in fact playing close to optimally in terms of gathering collectibles."}], "references": [{"title": "Dynamic programming treatment of the travelling salesman problem.", "author": ["Bellman", "Richard"], "venue": "Journal of the ACM (JACM)", "citeRegEx": "1", "shortCiteRegEx": "1", "year": 1962}, {"title": "Genetic algorithms for the travelling salesman problem: A review of representations and operators.", "author": ["Larraaga", "Pedro"], "venue": "Artificial Intelligence Review", "citeRegEx": "2", "shortCiteRegEx": "2", "year": 1999}, {"title": "Computation of the travelling salesman problem by a shrinking blob.", "author": ["Jones", "Jeff", "Andrew Adamatzky"], "venue": "Natural Computing", "citeRegEx": "3", "shortCiteRegEx": "3", "year": 2014}, {"title": "Human performance on the traveling salesman problem.", "author": ["MacGregor", "James N", "Tom Ormerod"], "venue": "Perception and Psychophysics", "citeRegEx": "4", "shortCiteRegEx": "4", "year": 1996}, {"title": "Human performance on the traveling salesman and related problems: A review", "author": ["MacGregor", "James N", "Chu", "Yun"], "venue": "Journal of Problem Solving,", "citeRegEx": "5", "shortCiteRegEx": "5", "year": 2011}], "referenceMentions": [{"referenceID": 0, "context": "Because of its importance in real world scenarios such as delivery networks and supply chains it has been extensively studied and many optimization algorithms have been proposed in the literature [1], [2], [3].", "startOffset": 196, "endOffset": 199}, {"referenceID": 1, "context": "Because of its importance in real world scenarios such as delivery networks and supply chains it has been extensively studied and many optimization algorithms have been proposed in the literature [1], [2], [3].", "startOffset": 201, "endOffset": 204}, {"referenceID": 2, "context": "Because of its importance in real world scenarios such as delivery networks and supply chains it has been extensively studied and many optimization algorithms have been proposed in the literature [1], [2], [3].", "startOffset": 206, "endOffset": 209}, {"referenceID": 3, "context": "However, humans have repeatedly been shown to perform better than computer algorithms on specific instances of the problem [4], [5].", "startOffset": 123, "endOffset": 126}, {"referenceID": 4, "context": "However, humans have repeatedly been shown to perform better than computer algorithms on specific instances of the problem [4], [5].", "startOffset": 128, "endOffset": 131}], "year": 2016, "abstractText": "Since Pokemon Go sent millions on the quest of collecting virtual monsters, an important question has been on the minds of many people: Is going after the closest item first a time-and-cost-effective way to play? Here, we show that this is in fact a good strategy which performs on average only 7% worse than the best possible solution in terms of the total distance traveled to gather all the items. Even when accounting for errors due to the inability of people to accurately measure distances by eye, the performance only goes down to 16% of the optimal solution.", "creator": "LaTeX with hyperref package"}}}