{"id": "1608.08497", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "30-Aug-2016", "title": "Modelling Cyber-Security Experts' Decision Making Processes using Aggregation Operators", "abstract": "An important role carried out by cyber-security experts is the assessment of proposed computer systems, during their design stage. This task is fraught with difficulties and uncertainty, making the knowledge provided by human experts essential for successful assessment. Today, the increasing number of progressively complex systems has led to an urgent need to produce tools that support the expert-led process of system-security assessment.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "histories": [["v1", "Tue, 30 Aug 2016 15:21:42 GMT  (617kb,D)", "http://arxiv.org/abs/1608.08497v1", "Computers and Security, Volume 62, September 2016, Pages 229-245"]], "COMMENTS": "Computers and Security, Volume 62, September 2016, Pages 229-245", "reviews": [], "SUBJECTS": "cs.AI cs.CR", "authors": ["simon miller", "christian wagner", "uwe aickelin", "jonathan m garibaldi"], "accepted": false, "id": "1608.08497"}, "pdf": {"name": "1608.08497.pdf", "metadata": {"source": "CRF", "title": "Modelling Cyber-Security Experts\u2019 Decision Making Processes using Aggregation Operators", "authors": ["Simon Miller", "Christian Wagner", "Uwe Aickelin", "Jonathan M. Garibaldi"], "emails": [], "sections": [{"heading": null, "text": "An important role carried out by cyber-security experts is the assessment of proposed computer systems, during their design stage. This task is fraught with difficulties and uncertainty, making the knowledge provided by human experts essential for successful assessment. Today, the increasing number of progressively complex systems has led to an urgent need to produce tools that support the expert-led process of system-security assessment. In this research, we use Weighted Averages (WAs) and Ordered Weighted Averages (OWAs) with Evolutionary Algorithms (EAs) to create aggregation operators that model parts of the assessment process. We show how individual overall ratings for security components can be produced from ratings of their characteristics, and how these individual overall ratings can be aggregated to produce overall rankings of potential attacks on a system. As well as the identification of salient attacks and weak points in a prospective system, the proposed method also highlights which factors and security components contribute most to a component\u2019s difficulty and attack ranking respectively. A real world scenario is used in which experts were asked to rank a set of technical attacks, and to answer a series of questions about the security components that are the subject of the attacks. The work shows how finding good aggregation operators, and identifying important components and factors of a cyber-security problem can be automated. The resulting operators have the potential for use as decision aids for systems designers and cyber-security experts, increasing the amount of assessment that can be achieved with the limited resources available.\nKeywords: Expert decision making, cyber-security, evolutionary algorithm, ordered weighted average, weighted average"}, {"heading": "1. Introduction", "text": "As Internet use becomes ever more pervasive in day-to-day life for tasks including internet banking, e-commerce and egovernment, the risk of cyber-crime is a growing concern (see Detica and Office of Cyber Security and Information Assurance (2011), Anderson et al. (2013) and Cruz et al. (2014)). Assessing security risks associated with proposed systems in their design phase is a non-trivial task that involves managing multiple sources of uncertain information. For example, it is very difficult to estimate the costs of a successful attack, the likelihood of a rare attack, as the tools and technologies available to attackers/defenders are constantly changing (Tregear, 2001). Because of these difficulties, a great deal of expertise is required to carry out such assessments. Typically, cyber-security experts are employed as they can provide comprehensive assessments based on considerable expertise and insight while also being able to assess the viability of existing cyber-security tools and processes (e.g., anti-malware software). From a computational point of view, their work can be likened to that of a highly complex aggregation function, considering a large number of uncertain data sources (e.g., other experts, users, systems design-\nEmail addresses: s.miller@nottingham.ac.uk (Simon Miller), christian.wagner@nottingham.ac.uk (Christian Wagner), uwe.aickelin@nottingham.ac.uk (Uwe Aickelin), jon.garibaldi@nottingham.ac.uk (Jonathan M. Garibaldi)\ners and security software / hardware) and fusing these sources to build overall security assessments. However, there is often a shortage of the level of cyber-security expertise required to carry out detailed assessments, leading to an urgent requirement for techniques and tools that can be used to support experts, reducing their workload, and systems designers, using models of expert knowledge to obtain estimates of security for system designs.\nAs stated previously, the job of performing security assessments is comparable to a complex aggregation function, fusing multiple sources of disparate data to form an overall assessment. In order to replicate this process in a computational model, aggregation operators such as the arithmetic mean, Weighted Average (WA), and Ordered Weighted Average (OWA) could be considered. As will be shown later, WAs and OWAs allow the application of weightings to specific objects and specific positions in an ordering, respectively. We will employ both of these methods in this research, exploiting their characteristics to produce fused assessments. WAs are used to compute assessments of security components using sub-assessments of their characteristics, and OWA operators are used to compute salience/difficulty rankings of specific technical attacks using security component assessments. A difficulty when using WAs and OWAs is finding suitable weightings for a particular task, as there are an near-infinite number of possibilities. Evolutionary Algorithms (EAs) (Holland (1975) and Goldberg et al.\nPreprint submitted to Elsevier August 31, 2016\nar X\niv :1\n60 8.\n08 49\n7v 1\n[ cs\n.A I]\n3 0\nA ug\n2 01\n6\n(1989)) have been shown to be useful in tasks involving a large search area, including searching for OWA weights (Nettleton and Torra, 2001). In the research presented in this paper, we will employ EAs to search for appropriate weights for WAs and OWAs for use in a security assessment problem.\nThe data set used is from a decision making exercise that was conducted at GCHQ, Cheltenham, UK, the UK government\u2019s signals intelligence and information assurance agency. Thirty nine GCHQ selected cyber-security experts including system and software architects, security consultants, penetration testers, vulnerability researchers and specialist systems evaluators, took part in two survey exercises. In the first, they were asked to rank a set of ten technical attacks in order of how difficult they would be to complete without being noticed. The set included attacks via a Voice Over IP (VOIP) client, a malformed document via email and a malicious website. In the second exercise, experts were asked to rate the difficulty of compromising / bypassing the twenty six security components that make up the ten attacks from the previous exercise. Security components included anti-virus software, cryptographic devices and firewalls. They were also asked to rate specific characteristics of each component, for example, the complexity of a component or the public availability of tools that could be used by a potential attacker to compromise / bypass the component. Undertaking this type of survey can identify particularly weak points in a system, and thus potential \u2018breach-points\u2019 in the system. As such, this activity is an important part of the security assessment process. The result is a data set containing three levels of assessment:\n[Figure 1 about here.]\n1. Rankings of technical attacks on a proposed system. 2. Ratings of the level of security offered by security com-\nponents in the proposed system. 3. Ratings of specific characteristics of security components\nin the proposed system.\nFigure B.1 shows the structure of the data set. With this data set we will show how, using WAs and OWAs with EAs, the following can be achieved:\n1. Ratings of the difficulty of attacking and evading security components using ratings of specific characteristics.\n2. Indication of the relative contribution each characteristic makes to the overall difficulty rating for a security component.\n3. Rankings of specific technical attacks using ratings of security components.\n4. Indication of the relative contribution components make to the attack ranking based on their difficulty rating.\n5. A combination of the previous aggregations, in which rankings of specific technical attacks are computed using security component ratings that have been created using ratings of specific characteristics.\nAs we have data at all three levels, we are able to compare the derived security component ratings and attack rankings with\nexperts\u2019 actual ratings / rankings to validate them. Potentially, this method could be used with a database of existing ratings for components / characteristics to aid in security assessments on proposed systems, reducing load on the cyber-security experts who currently carry out such assessments.\nThe paper is structured as follows. Section 2 provides an overview of the problem of performing security assessments on information systems, a review of machine learning approaches to this problem, WA/OWA operators and EAs. Section 3 describes the decision making exercise conducted with cyber-security experts at GCHQ, while Section 4 details how EAs, OWAs and WAs have been implemented for this study. In Section 5, overall difficulty ratings for security components are produced using ratings of specific characteristics of each component. Moreover, we also produce weightings that signify the contribution each characteristic makes to the overall difficulty rating. Then, in Section 6 rankings for specific technical attacks are produced using difficulty ratings of their constituent components, along with weightings that give an indication of which components contribute most to the rankings. Section 7 combines the processes of the previous two sections to derive ratings and rankings for specific technical attacks from ratings of specific characteristics of their constituent components. Finally, the outcomes of the work are discussed in Section 8, and Section 9 summarises the contributions of the research and considers future directions of research."}, {"heading": "2. Background", "text": ""}, {"heading": "2.1. Cyber-Security Assessment", "text": "In current times, the use of the Internet and cellular networks has become the norm for a variety of every-day tasks including banking, e-mail, e-government, e-commerce, VOIP, social networking and mobile telecommunications. An everincreasing number of sensitive interactions are taking place online, making them susceptible to attack by cyber-criminals who may read, modify or delete sensitive data. Concurrently, the volume and availability of tools to aid would-be attackers in their acts are also increasing. These tools lower the barrier to entry for attackers, as far less technical expertise is required to operate them than to launch an attack from scratch. Exacerbating the situation further is the fact that it is often unclear exactly how defensive security products achieve their claims, and indeed, whether they are effective at all.\nWith the increasing threat of cyber-crime the practice of carrying out security assessments on proposed systems has become a critical part of the systems design process. Understanding the threats that attackers pose to a proposed system, their consequences, how those threats can be addressed and what represents an appropriate level of security is a complex problem involving many factors. These factors include (Tregear, 2001):\n1. Data is limited on certain threats, such as the likelihood of a sophisticated hacker attack and the costs of damage, loss, or disruption caused by events that exploit security weaknesses.\n2. Some costs, such as loss of customer confidence or disclosure of sensitive information, are inherently difficult to quantify.\n3. Although the cost of the hardware and software needed to strengthen controls may be known, it is often not possible to precisely estimate the related indirect costs, such as the possible loss of productivity that may result when new controls are implemented.\n4. Even if precise information were available, it would soon be out of date due to fast paced changes in technology and factors such as improvements in tools available to would-be intruders.\nThe consequence of these difficulties is that it is necessary for highly experienced cyber-security experts to carry out assessments of system designs including their hardware/devices, architecture, security software and practices before they are implemented. The goal of such assessments is to ensure that there is a proportionate level of security offered by the proposed system in line with the consequences of a successful attack. Clearly, investing too little in security measures leaves a system exposed to an unacceptable level of risk, however, investing too much is also a problem as it involves expending an unnecessary amount of money and effort on security when the consequences of a successful attack are considered.\nUnfortunately, it is often the case that there is insufficient expertise to carry out all of the security assessments necessary. The ever increasing number of information systems, which themselves are of increasing complexity and exposed to constantly evolving threats, mean that a greater number of security assessments are required more quickly than ever before. In this research we focus on modelling parts of the assessment process in order to create decision aids that can be used by experts to reduce load, and by non-experts to achieve an approximation of security levels for security components and specific technical attacks."}, {"heading": "2.2. Machine Learning Approaches to Security Assessment", "text": "Over the years there have been many machine learning approaches to computer security, ranging from classic algorithm based studies (Lane, 1998) to immune system inspired approaches (Kim et al., 2007). What almost all of these past approaches have in common is that they attack the problem from a quantitative point of view, based on evaluating datasets such as network traffic , but without an attempt to integrate often highly valuable knowledge held by security experts. Examples include what is probably the earliest use of fuzzy sets in this context (Clements, 1977), intrusion detection based on multisensor data fusion Bass (2000) or fuzzy cognitive maps Siraj et al. (2001), and various automated decision systems to support risk or threat analysis (Shah, 2003; Ngai and Wat, 2005; Linkov et al., 2006; Sun et al., 2006; Van de Walle and Rutkowski, 2006; Dondo, 2007; McGill and Ayyub, 2007). Other approaches include anomaly detection algorithms, e.g. using Bayesian approaches (Androutsopoulos et al., 2000) to detect spam in emails, or selforganising map algorithms to learn combinations of external signals and system call IDs to detect unusual patterns (Feyereisl\nand Aickelin, 2012). Similar to anomaly detection is the area of intrusion detection, which again typically relies on unsupervised machine learning techniques for two class classification approaches of \u2018normal\u2019 and \u2018abnormal\u2019 behaviour, for example the work by Twycross and Aickelin (2010).\nMore general approaches to systematising and supporting methods for the design of secure systems have been reviewed by Baskerville (1993), Dhillon and Backhouse (2001) and more recently by Jansen and Gallagher (2009). As a refinement of more general approaches, this paper focuses on extracting and making use of and leveraging the insight held by cyber security experts. Experts are commonly good at assessing the security of parts of systems \u2014 such as rating the vulnerability of individual hops or attack paths. However, the major challenges for experts are:\n\u2022 The large number of hops and attack vectors in systems, i.e. the finite number of suitably qualified experts makes the timely assessment of hops and attack paths highly challenging for many users (e.g. companies).\n\u2022 The aggregation of often different ratings for the same components by different experts, e.g. based on different expert backgrounds or levels of expertise.\nIn this context, our paper focuses on alleviating the task load for available experts by introducing, demonstrating and evaluating a novel approach to partially automating the rating of attack vectors based solely on individual hop ratings. The approach proposed employs linear order statistics, specifically the Ordered Weighted Average (OWA), to fuse individual hop ratings into an overall attack path assessments, while the weights of the OWA are determined using an evolutionary algorithm, resulting in overall high quality attack vector vulnerability assessments which closely follow those of experts (if these experts directly assess the vectors). The closest body of works in computer security that is related to our approaches is that of attack graphs and scenario creation, e.g. the work by Tedesco and Aickelin (2008). However, in these approaches the aim tends to be to develop improved techniques to construct and rate attack graphs, rather than facilitating and partially automating the overall process of integrating expert knowledge in cyber security assessments."}, {"heading": "2.3. Weighted and Ordered Weighted Averages", "text": "In the experiments shown in this paper, two aggregation methods are employed: Weighted Averages (WAs), and Ordered Weighted Averages (OWAs) (Yager, 1988). OWA operators were chosen for the task of aggregating security component ratings to produce attack rankings following discussions with a group of GCHQ technical experts. In our discussions the hypothesis emerged that the difficulty of a particular attack is largely determined by the most difficult security component to attack or evade; the remaining components contribute to the difficulty in proportion with their own difficulty. Initially, we tried simple maximum operators to see whether they could be used. In practice however, this results in a lot of attacks having\ntied ranks, providing little insight. This is because, if a particularly difficult component appears in multiple attacks, they will all receive the same rating. OWA operators allow us to assign more weight to the most difficult components, while accounting for the difficulty of the remaining components too. This greatly reduces the potential for tied ranks, and creates meaningful rankings that distinguish between attacks.\nLet X be a set of N information sources (e.g., reviewers, experts, etc.) with each information source contributing evidence xi, i = 1 . . .N. The standard Weighted Average, WA, combines the information from all the sources by associating the evidence from each source with a given weight. More formally, consider a set W of weights wi corresponding to each source xi, where \u2211wi = 1. Then:\nWA(X) = N\n\u2211 i=1 wixi (1)\nThe Ordered Weighted Average, OWA, combines the information from all the sources, ordered by the size of the evidence (largest to smallest), using a pre-defined vector of weights, W \u2032. More formally, consider the vector of evidence O=(o1, . . . ,oN), formed by the ordering (largest to smallest) of the elements in X , such that o1 \u2265 o2 \u2265 . . .o j. Then:\nOWA(X) = N\n\u2211 j=1 w\u2032jo j (2)\nWhereas in the WA, the weights are associated with each source, in the OWA, the weights are associated with an ordered set of the evidence by all sources. Thus, in the OWA, a change in contributed evidence can result in a different ordering and thus in a different mapping of weights to evidence. For example, in this work we assign a weight to the most difficult component, the second most difficult component and so on. Each of the weights is multiplied by the corresponding component, the first weight is multiplied by the first and thus largest component and so on. If the first weight is near to one, the OWA behaves similarly to a \u2018maximum\u2019 operator, thus resulting in the overall assessment being based nearly exclusively on the most difficult component.\nOWAs are commonly used in decision making problems to create aggregate scores and/or ratings. In Cano\u0301s and Liern (2008), OWA operators are used in a personnel selection problem to aggregate selection criteria. In Badea et al. (2011) an OWA is used to compute a rating of the security of energy supply, Sadiq et al. (2010) describes the use of an OWA to aggregate performance indicators of small water utilities creating an overall performance assessment. Imamverdiev and Derakshande (2011) show how a fuzzy OWA operator can be used for rating information security products in terms of reduction of information security risk, and in Merigo\u0301 and Gil-Lafuente (2010) and Merigo\u0301 and Gil-Lafuente (2011) modified OWA operators are applied to a financial product selection problem and a football team player selection problem respectively.\n[Figure 2 about here.]"}, {"heading": "2.4. Evolutionary Algorithms", "text": "Evolutionary Algorithms (EAs) are a set of well used heuristic search methods that mimic aspects of biological evolution to evolve solutions. The most popular EA, the Genetic Algorithm (GA) (see Holland (1975) and Goldberg et al. (1989)), begins with the generation of a random initial population of solutions to which fitness-based selection and copy, crossover and mutation operators are applied in order to discover near-optimal solutions. The advantage of the GA is that it is able to search a large area of the solution space, while evaluating a small proportion of the possible solutions. This is critical for problems like those seen in this work in which there are far more possible solutions than it is practical to evaluate. The use of a GA to search for suitable OWA weights is demonstrated in Nettleton and Torra (2001) and Torra (2011), and in our own previous work (Miller et al., 2013a).\nThe work in the current paper significantly extends the work seen in Miller et al. (2013a) in which EAs were employed to search for appropriate OWA weights to be used for aggregating ratings of security components to produce rankings of technical attacks, and to search for WA weights to be used to aggregate ratings of aspects of security components to produce overall security component ratings. Using an EA in this way not only allows us to discover suitable aggregation operators, it also gives an indication of the relative importance of each component of the aggregation. For example, by looking at the resulting OWA weights, we will be able to confirm or contradict our hypothesis that the most difficult to attack/evade security component contributes the most to the attack ranking. As the EA could theoretically arrive at any OWA, and is led purely by the fitness of an OWA (i.e., how well the resulting rankings match individuals\u2019 actual rankings), the OWAs produced are a valid guide to the relative contribution made by each security component. Similarly, the WA weights found will provide insight into which characteristics contribute most to the overall rating, and which have little effect on the overall difficulty of attacking/evading a security component."}, {"heading": "2.5. Statistical Analysis", "text": "To make comparisons between the results produced by the OWA/WA operators and the experts\u2019 actual rankings, Spearman\u2019s Rho is used. Spearman\u2019s Rho (Spearman, 1904), also called Spearman\u2019s Rank Correlation Coefficent, measures the statistical dependence of two sets of rankings (ordinal data). The coefficient is a number in [-1,1] that indicates the level of correlation; 1 denotes a perfect positive correlation, 0 means there is no correlation, and -1 denotes a perfect negative correlation. To measure the correlation between component characteristics and overall difficulty questions Pearson\u2019s r (Pearson, 1895) is used. Pearson\u2019s r, also called the Pearson ProductMoment Correlation Coefficient (PPMCC), is a method that measures linear correlation between two sets of values (interval or ratio data); a value of zero indicates no correlation and a value of one indicates perfect correlation. For both methods, generally, values above 0.5 are interpreted as strong correlation."}, {"heading": "2.6. Experimental Validation", "text": "The experimental results and statistical analyses presented in this paper are not tested in a formal manner against, for example, pre-specified null hypotheses or similar. Thus, in statistical terms, it should be viewed as exploratory data analysis rather than as formal hypotheses testing (sometimes called confirmatory data analysis), as discussed by Tukey in 1962 (Tukey, 1962). Overall validation of the experimental methods in this paper is presented in terms of the degree to which it is possible to model parts of cyber-security decision makers processes using statistical aggregation of components within attack vectors. As this is exploratory, there are no explicit tests for falsifiability \u2014 however, there is an informal null hypothesis that security \u2018experts\u2019 are not actually expert, and that no correlations, associations or aggregations could be found that would link rating of sub-components to rankings of attack vectors. But, the main purpose of this work is to carry out exploratory data analysis in this context to explore to what degree it may be possible to submit security assessment to more systematic methods, which in future could lead to new hypotheses with associated methods of new data collection and analysis."}, {"heading": "3. Data Elicitation", "text": "In this section we will describe the data elicitation exercise conducted at GCHQ, Cheltenham, UK. As the data and actual elicitation is vital to the design and functionality of the automated reasoning system introduced later, we proceed by describing the elicitation process and resulting data in detail. Thirty nine highly experienced GCHQ selected cyber security experts from government and commercial backgrounds including system and software architects, technical security consultants, penetration testers, vulnerability researchers and specialist systems evaluators took part in a decision making exercise. While the detail of the actual attack scenarios and security components is not available for general publication, we provide the actual numeric \u2018anonymised\u2019 data in the paper."}, {"heading": "3.1. Scenario", "text": "For the purposes of the exercise, a scenario was created and presented by senior technical staff at GCHQ. The scenario was designed to be a typical example of a government system. The system has a range of core services and back end office facilities, along with remote sites and mobile access. Figure B.2 provides an overview of the system architecture. The most sensitive information is held in core systems, with assets rated at Business Impact Level 3 (BIL3). Business Impact Levels are the UK Government\u2019s standard classification scheme for rating the ramifications of assets being disseminated, altered or destroyed, ranging from no consequences (BIL0) to catastrophic consequences (BIL6).\nThe experts were presented with information regarding the architecture of the system and its components, and allowed to ask questions. In real-world assessments, a great deal of information about a system and its components is required in order to perform a security assessment, including details of hardware\nand software, version/revision numbers and the frequency with which updates and patches are applied. In order to address this in the scenario, without overcomplicating the exercise (making it infeasible), the experts were asked to make assumptions about the system, specifically, that the software/hardware used was typical of this type of government system and that security policy was being applied in manner consistent with how they typically find it in their day-to-day work. This was acceptable for the experts, as they all have considerable experience with the type of BIL3 government system presented in the scenario, and how security policies are generally applied.\nIn addition to details of the system, the experts were also given a list of 10 technical attacks on the system, and the 26 security components that make up the attacks. Figure B.3 shows an example of the information the experts were given about the technical attacks. In this attack an email with a malicious attachment is sent to a recipient within the system, when opened the attachment runs an exploit taking control of the recipient\u2019s PC, allowing the attacker to launch further attacks from their machine. Figure B.3a shows the path the attacker takes from outside the system, through the back office systems. Once this is achieved the attacker proceeds to the mobile sites as shown in Fig. B.3b, completing the attack by compromising a client desktop.\n[Figure 3 about here.]\n[Table 1 about here.]\nThe five steps in the attack are labelled A to E in Fig. B.3, Table B.1 provides details of the security components involved. Each of these components must be attacked (compromised) or evaded (bypassed) in order for the attack to be successful. After being shown the 10 attacks and their constituent components, the experts were asked to complete two survey exercises:\n1. Rank the 10 technical attacks in order of difficulty to complete without being noticed.\n2. Rate the 26 security components in terms of: (a) The overall difficulty of attacking or evading the\ncomponent. (b) Individual factors that contribute to the difficulty of\nattacking or evading the component.\nEach activity was conducted in silence, with experts sat at separate desks, to avoid experts influencing each others\u2019 opinions. Ranking the technical attacks like this is an intuitive way of establishing the relative difficulty of completing each of the attacks successfully. Experts make direct comparisons between attacks. e.g., \u2018Is attack x more or less difficult than attack y?\u2019, in order to arrive at a ranked list. This approach can make it easier for experts to identify salient attacks, as in some cases it is difficult to place a precise value on the difficulty of an attack.\nWhen rating security components, experts were asked to give a rating on a scale from 0 to 100 to the question \u2018Overall, how difficult would it be for an attacker to successfully attack/evade this component without being noticed?\u2019, and a series\nof questions about factors that contribute to the overall difficulty of attacking/evading a component. These questions were created by GCHQ technical experts, who identified what they believed to be the important factors that contribute to the difficulty of attacking/evading security components. The rating scale from 0 to 100 was completely arbitrary, with no absolute meaning of 0 or 100 being conveyed to the experts, and the response included both a perceived location (\u2018mean\u2019) and uncertainty (\u2018variance\u2019) of opinion as described in more detail in Miller et al. (2013b).\nTwo sets of questions were used, one for when an attack required a component to be attacked (compromised), and another for when an attack required a component only to be evaded (bypassed). The categorisation of components into \u2018attack\u2019 or \u2018evade\u2019 was made by the GCHQ technical team who designed the scenario. While it is possible that some components may in practice be either attacked or evaded, and that different attach vectors may be possible, such alternatives were not considered. That is, the list of attack vectors created, and whether the components were compromised or bypassed within such an attack, were designed and specified by the GCHQ technical team.\nThe questions asked when a component needed to be attacked were:\n\u2022 How complex is the target component (e.g., in terms of size of code, number of sub-components)?\n\u2022 How much does the target component process/interact with any data input?\n\u2022 How often would you say this type of attack is reported in the public domain?\n\u2022 How likely is it that there will be a publicly available tool that could help with this attack?\n\u2022 How inherently difficult is this type of attack? (i.e., how technically demanding would it be to do from scratch, with no toolset to help.)\n\u2022 How mature is this type of technology?\n\u2022 How easy is it to carry this attack out without being noticed?\n\u2022 Overall, how difficult would it be for an attacker to do this?\nFor components that needed only to be evaded, the following questions were asked:\n\u2022 How complex is the job of providing this kind of defence?\n\u2022 How likely is it that there will be publicly available information that could help with evading this defence?\n\u2022 How mature is this type of technology?\n\u2022 Overall, how difficult would it be for an attacker to do this?\nThis type of questioning allows experts to give an indication of the absolute difference in difficulty between security components, unlike ranking which provides an intuitive way to obtain an ordering but elicits no information about the degree of difference between attacks.\nThe dataset created by this exercise is made up of three levels:\n1. Rankings of attacks. 2. Ratings of the overall difficulty of attacking/evading spe-\ncific security components that make up attacks. 3. Ratings of characteristics/factors that contribute to the\noverall difficulty of attacking/evading specific security components.\nDetails of analysis work carried out previously on the resulting data can be found in Miller et al. (2013b).\nThe exercise and methods described in this paper represent an important part of performing a security assessment on a proposed system. The process of rating security components and highlighting the easiest ways to attack a system via its weakest components is critical to understanding the levels of risk posed by a system design. In this study we will show how rankings of attacks can be produced from overall ratings of components, how overall ratings of components can be created from ratings of characteristics of components, and how the two stages can be chained together to produce attack rankings from ratings of characteristics of components."}, {"heading": "4. Data Analysis Methods", "text": ""}, {"heading": "4.1. OWA/WA Aggregation", "text": "The methodology in this paper is based on determining the \u2018optimum\u2019 weights for either WA or OWA aggregation of the assessment of difficulty of compromising the various components in a range of attack vectors. This in turn, enables both the ranking of attack vectors in terms of their overall difficulty as well as providing an understanding of exactly which components in a security system contribute the most/least to an overall system being compromised. Below, we briefly summarise the methodology and detailed rationale for both the WA and the OWA.\nIn all, 26 security components were rated, each belongs to one or more of the 10 specified technical attacks. Table 2 lists the attacks, and their constituent security components. Notice that some components appear more than once in the same attack, this is because in some cases more than one instance of a component needs to be attacked or evaded for an attack to be completed successfully. For example, an attacker may have to compromise multiple firewalls in order to obtain access to their target. The order of components is important \u2014 alternative orderings, with perhaps alternative attack methodologies, may be possible in the real world, but these would be considered as different overall attacks.\n[Table 2 about here.]\nWith the information regarding the composition of attacks, a WA can be employed for the aggregation of the ratings of the difficulty of attacking / evading a security component, to produce an overall difficulty rating. In the instance of the WA, weights are applied to specific factors, e.g., the complexity of a component. The result is a set of derived overall difficulty ratings for all 26 security components. The core challenge here is the search for the \u2018optimal\u2019 weights of the given WA. To address this, this paper proposes the use of Evolutionary Algorithms (EAs) which will be discussed in the next section.\nSimilarly, an OWA is used to produce attack rankings from overall difficulty assessments of their constituent hops. However, as noted in Section 2.3, the OWA matches a vector of weights to the ordered set of evidence (difficulties) for the individual components. For instance, an OWA can be used to aggregate overall difficulty ratings of components to produce a rating for each of the ten attacks. As an example, Table 3 shows the overall difficulty ratings that an expert gave for attacking/evading the security components in Attack 1.\nIf we want to aggregate these values into an overall rating for Attack 1 that gives more weight to the most difficult components, we could choose the weights\nW \u2032 = (0.33,0.27,0.20,0.13,0.07).\nThe next step is to order the ratings\nX = {25.00,40.00,20.50,40.00,70.00}\nby difficulty to create the ordering\nO = (70.00,40.00,40.00,25.00,20.50).\nEquation 2 shows how the OWA can then be applied by multiplying each weight by its corresponding element in the ordering. In this case the resulting value is 46.59. When we compare this with the mean value 39.10, it can be seen that this OWA operator has given more weight to those components with higher difficulty ratings. If we then repeated this process with the remaining nine attacks, a complete set of attack ratings would be produced that could be used to generate attack rankings.\n[Table 3 about here.]\n[Table 4 about here.]"}, {"heading": "4.2. EA Implementation", "text": "In this work, EAs (as introduced in Section 2.4) are used to optimise the weights for:\n1. WAs, used to aggregate ratings of difficulty of factors to produce the overall difficulty ratings of security components;\n2. OWAs, used to aggregate the overall difficulty ratings of security components to create rankings of the overall attack vectors.\nThe EA has been implemented for both the WA and OWA cases as follows.\nSolutions are represented as a vector of weights. In this example, the maximum number of security components in an attack is eight, therefore each vector contains eight weights. Those attacks that do not have eight components are padded out with zeros. This is to avoid concentrating weightings (which must add up to 1) on fewer components, which can have the effect of making an attack more difficult purely because the weights are concentrated on fewer component ratings. In general, an attack should get more difficult as components are added to it.\nAn initial population of individuals is created at the beginning of the algorithm. Each individual is produced by generating seven random points on a line from 0 to 1. From this, eight weights are created by taking the distances between 0, each of the seven points, and 1. This ensures that the result is eight values that add up to 1.\nTo compute fitness each expert\u2019s actual attack ranking is compared with the attack ranking derived from the overall security component rating with the current OWA. The comparison is made using Spearman\u2019s rank correlation coefficient, which produces a value between -1 (perfect negative correlation), 0 (no correlation) and 1 (perfect positive correlation). An error value is then calculated by subtracting the correlation coefficient from 1, so a perfect positive correlation produces an error of 0, and anything less produces an error value greater than 0. Once an error value has been calculated for each expert, the Mean Squared Error (MSE) is computed to give an error value for each solution in the population.\nSelection is achieved by sorting the population of solutions by fitness, and then generating the indexes of selected parents from a complementary cumulative distribution. A lower numbered individual is more likely to be chosen, ensuring that fitter individuals a more likely to be selected, though potentially any individual can be selected.\nTo guarantee that the fittest individual in successive generations is not worse that in preceding generations elitism selects the best individuals from the current generation and copies them unaltered into the next generation. A similar operator is the the copy operator, which takes a parent picked using the described selection method and copies them into the next generation.\nThe mutation operator used in this EA implementation randomly selects two weights from a solution, increases one by a small amount and reduces the other by the same amount. This ensures that the weights still add up to one afterwards. The resulting weights are validated, if either becomes greater than 1 or less than 0, another two elements are selected.\nThe crossover method used is a single point crossover. Two parents are selected and a child is created that consists of the first four weights of the first parent, and the last four from the second parent. It is unlikely at this point that the weights will add up to 1, so they are normalised. This method of crossover ensures valid OWAs, while preserving the characteristics of each contributing parent.\nFinally, the EA\u2019s termination criteria is set to be a specific number of generations, after which the algorithm stops."}, {"heading": "5. From Factor Ratings to Security Component Ratings", "text": "In Section 4, we described how an EA has been implemented for use in this research. In this section we employ the described EA to perform a search for WA weights. In these experiments, we show how overall difficulty ratings for security components can be obtained from ratings of their characteristics using WAs where the weights have been discovered using an EA. As well as producing overall difficulty ratings, this process will also highlight which questions contribute most/least to the overall ratings. In this case it is not rankings that are being compared, it is ratings. Because of this, Spearman\u2019s rho is not an appropriate method for comparison so an alternative method of calculating fitness was established. The \u2018error\u2019 is directly calculated by taking the sum of absolute differences between the derived hop ratings and the experts\u2019 actual hop ratings. Each expert\u2019s error value is then used to calculate a MSE value for all experts, which is used as the fitness value for each solution.\nWhen performing data analysis with the ratings of characteristics/factors we found that the relationship between them and the overall difficulty of attacking/evading a security component varies between question sets. This is because they contain different numbers of questions, and some questions are specific to a question set. Because of this, we will perform separate experiments with the questions for attacking and evading security components, finding WAs specific to each."}, {"heading": "5.1. EA Configuration", "text": "Initially, a series of tests were conducted to find ideal configurations of the EA. Full details of these experiments and their results can be found in Appendix B. The best results for each question set can be found in Table B.5; the best EA configurations are shown in Table B.6. The best EA found for each question set is used in the next subsection for extended experiments.\n[Table 5 about here.]\n[Table 6 about here.]"}, {"heading": "5.2. Extended Experiments", "text": "In these extended experiments the best EA configuration found for each question set will be used in 30 runs with differing random seeds. The purpose of these experiments is to assess the consistency of the EAs, and to see the best results we can reasonable expect with the EA. In experiments with the attack question set the best configuration (Test 15) will be used; Appendix B shows that multiple configurations achieved the best result for the evade question set, of these we have arbitrarily chosen to use the configuration from Test 1. Table B.7 shows a summary of the results for the attack question set. The results are extremely stable, there is little variation in the results over the 30 runs. Table B.8 gives details of the best WA found.\n[Table 7 about here.]\n[Table 8 about here.]\n[Table 9 about here.]\nThe results of the experiments with the attack question set show that there are clear differences in the relative importance of each question in deriving the overall difficulty of a security component. In order, the questions are ranked as shown in Table B.9. For comparison, the mean (over all 39 experts) Pearson\u2019s r for the correlation between the ratings given for each characteristic, and the overall difficulty is also given. The weightings shown are taken from the test that resulted in the lowest MSE (Test 22), though all tests produced similar results.\nThe inherent difficulty rating has the highest weighting, and it is also strongly correlated with the experts\u2019 overall ratings for security components. This may be because the experts do not make a strong distinction between the inherent difficulty of attacking a security component and the overall difficulty, as the terms are similar. The weights attributed to the ratings regarding factors of component difficulty are in line with the correlation between experts\u2019 ratings of each factor and their overall rating for each component. In view of the weightings and correlations, it is reasonable to say that the questions ranked 1 to 4 have a demonstrable relationship with how experts rate the overall difficulty of compromising a security component. There does not appear to be a significant relationship between how experts rated the factors in questions 5 to 7 and how they rated the overall difficulty of compromising security components.\nFrom this we could infer that these three questions about the security components are not useful when trying to determine the difficulty of compromising a component, and that only the four with high correlation/weighting are necessary. Alternatively, it could be that the four high correlation/weighting questions were the only ones that experts are able interpret and answer in a consistent manner with the information given. Regardless, using the four questions overall ratings that are closely correlated with participants\u2019 actual ratings of overall difficulty can be produced.\nTable B.10 provides a summary of the results with the evade question set. Like the experiments with the attack question set, the results are extremely stable. Over 30 runs, 28 produced the same MSE. Table B.11 shows the WA found in Test 1, though all weightings are within 0.0003 of those shown.\n[Table 10 about here.]\n[Table 11 about here.]\nAgain, some questions are consistently given more weight than others. Table B.12 provides a list of the difficulty factor questions ranked by the weight they were given by the EA. The Mean Corr column in Table B.12 gives the mean Pearson\u2019s r value for the correlation between experts\u2019 ratings of factors and their overall ratings. When compared with the correlation values for the attack questions, these are much lower, which may explain why the EA is unable to find a WA that produces overall ratings that are strongly correlated with experts\u2019 actual overall ratings.\n[Table 12 about here.]"}, {"heading": "6. From Security Component Ratings to Attack Rankings", "text": "In this section, we describe how the EA was employed to perform a search for OWA weights. The OWAs are to be used for aggregating overall difficulty ratings of security components to produce difficulty rankings of attacks. In these experiments three groupings of experts have been used: odd experts i.e., experts assigned an odd number, even experts i.e., experts assigned an even number and all experts. This has been done so that OWAs discovered with one group (e.g., odd) can be applied to the alternate group (e.g., even) to assess their robustness, and the all group can be used to obtain the best OWAs that can be found for the entire group of experts for comparison purposes. Extended experiments are used with the best configuration found with the all group to test the stability of the configuration, and to further explore the best OWAs that can be found."}, {"heading": "6.1. EA Configuration", "text": "Initially, a series of experiments was conducted to find ideal configurations of the EA for use in these tests. Full details of these experiments and their results can be found in Appendix A.1. The best OWAs found are shown in Table B.4 and the best results from these experiments are shown in Table B.13. The best OWAs found for the odd and even groups will be assessed for their robustness, and the best EA configuration for the all group will be used in extended experiments.\n[Table 13 about here.]"}, {"heading": "6.2. OWA Robustness", "text": "In order to assess the robustness of the OWAs found by the EA, the best OWAs found for the odd group were applied to the even group and vice versa. The results of these experiments are provided in Table B.14. It can be seen that while there is some degradation of performance when the OWAs are applied to the alternate group, they produce rankings that are strongly correlated with experts\u2019 actual rankings (i.e., Spearman\u2019s Rho > 0.5 indicating strong correlation) suggesting that they are robust. As these OWAs work well on their alternate (unseen) group, it is reasonable to expect that OWAs trained with sample data will work well on unseen data.\n[Table 14 about here.] 6.3. Extended Experiments\nThe final set of experiments take the best configuration found with the all grouping and conduct 30 runs with varying random seeds to allow assessment of the stability of the EAs, and to give a better picture of the best OWAs that can reasonably be expected using the proposed approach. The EA configuration used is shown in Table B.15. A summary of the results of the extended experiments can be found in Table B.16. The summary shows that with 30 different random seeds, the results are very stable, there is minimal difference between the solutions found and they all result in OWAs that produce rankings that are strongly correlated with experts\u2019 actual rankings. Also of interest is that in all 30 runs the solutions found never place less\nthan 0.92 of the weight on the most difficult to attack/evade security component, corroborating our hypothesis that this is the most important component when assessing the difficulty of an attack.\n[Table 15 about here.]\n[Table 16 about here.]"}, {"heading": "7. From Factor Ratings to Attack Rankings", "text": "In this section we will use the best WAs and OWAs, identified as described in the previous sections, to derive attack rankings from the difficulty factor ratings. This is a two stage process: firstly, the best WAs will be used to compute overall difficulty ratings for security components from ratings of factors of that difficulty; secondly, the derived overall difficulty ratings will be aggregated using the best OWA to create attack rankings. Table B.17 shows the WA and OWA operators used, and Table B.18 gives a summary of the results. Note that in this case pairs of rankings are being compared, as such, error is calculated by subtracting the Spearman\u2019s Rho value from 1, as in Section 6. Because of this it can be seen that, for example, the minimum error is the complement of the maximum Spearman\u2019s Rho as they refer to the same individual. In the previous experiments where overall difficulty ratings for security components were being compared, error was calculated by taking the absolute value of the differences between the actual ratings provided by the experts, and the ratings derived from the difficulty factor ratings.\n[Table 17 about here.]\n[Table 18 about here.]\nThe mean Spearman\u2019s Rho is 0.5562, this indicates that there is a strong correlation between the rankings produced using the difficulty factor ratings and those that the experts actually gave. It is clear that most experts answer the questions relating to the factors of difficulty in such a way that it is possible to create overall ratings for security components and rankings of attacks that closely match their opinions."}, {"heading": "8. Discussion", "text": "The proposed method demonstrates that it is possible to model parts of cyber-security decision makers processes using WAs and OWAs.\nFor our first set of experiments we used an EA to search for WA weights that can be used to take experts\u2019 ratings of factors that contribute to the difficulty of attacking/evading a security component, and produce overall difficulty ratings for those components. The results showed that for the attack question set it is possible to produce overall ratings that closely match experts\u2019 actual rankings. With the evade question set however, much poorer results were obtained. The EA highlighted the factors that contribute the most to the overall rating, specifically questions regarding the availability of tools to help with\nan attack, the difficulty of achieving the attack unnoticed, the frequency of such attacks being reported and the inherent difficulty of completing an attack. The correlation of experts\u2019 answers to these questions and their overall difficulty ratings show that they have moderate/strong correlation, further supporting their importance for this type of assessment. Conversely, questions regarding the maturity of technology, the amount of interaction with data and the complexity of components attracted the least weight and were weakly correlated with the overall ratings. This suggests that these factors were not helpful in this particular exercise, though they may prove to be useful under different circumstances.\nThe second set of experiments focused on using an EA to find OWA weights that allowed us to aggregate overall ratings of the difficulty of attacking/evading security components to produce rankings of attacks for each expert that are strongly correlated with the actual attack rankings that they provided. This shows that we can extrapolate from ratings of individual components to rankings of complete attacks, lightening the load on experts.\nIt was also shown that if the participants are split arbitrarily, OWAs that work well with one group tend to well with the other too. This is a useful result, as it alludes to the possibility of using OWAs to aggregate unseen experts\u2019 hop ratings to produce ratings and rankings of unseen attacks for a proposed system. Comprehensive experiments showed that from 30 different starting positions (i.e., seeds) the EA consistently found similar solutions, suggesting that they represent globally good solutions, and that in all 30 runs the EA never placed less than 92% of the weight on the most difficult component. From this, we can infer that when assessing the difficulty of an attack, the most difficult to attack / evade security component is by far the most important. Simply taking the maximum proves impractical however, as it results in many attacks being given the same rating and ranking.\nThe final set of experiments combined the processes involved in the first and second sets of experiments. The best WAs and OWA found in previous experiments were used together to produce rankings of attacks from experts\u2019 ratings of factors that contribute to the difficulty of a component. The rankings produced, on average, show strong correlation with experts\u2019 actual rankings. This indicates that by asking targeted questions about characteristics of security components, specific technical attacks on proposed systems can be rated and ranked in terms of difficulty and salience. From a machine learning point of view, the proposed methodology where the parameters (i.e. weights) of aggregation operators (both WA and OWA) are optimised using an EA is clearly not the only viable approach. Different optimisation strategies such as simulated annealing could be explored, while the actual aggregation operators could be generalised for example to fuzzy integrals (Grabisch et al., 2000) where more complex weights captured by fuzzy measures enable a more fine-grained weighting.\nThese results raise the possibility of using ratings of security components to produce ratings and rankings for unseen attacks on proposed information systems. This could take the form of a database of ratings of generic security components\n(we have seen that lack of technical detail does not prevent reasoned assessment) which could be used for \u2018What if?\u2019 scenarios to give an approximate assessment of the difficulty of attacks when security components are altered or moved. The degree to which this exciting possibility is feasible in practice is a matter of future research.\nThe major contribution of this paper to cyber-security research lies in its use of exploratory data analysis to demonstrate the feasibility of linking the experts rating of components of attacks to the overall ranking of the difficulty of the attack vectors themselves. In doing so, it both confirms the technical methodology of using WAs and OWAs to perform the aggregation, as well as confirming that the experts\u2019 ratings and rankings do have internal consistency with each other \u2014 which is not a a priori given, and in some ways can therefore be taken as refutation of our informally posed null hypothesis (that the security experts are not really expert). Hence, not only do these methods provide practical possibilities for systematising the analysis of attack vectors, but they also offer the future possibility of being used as some form of professional competence test (or accreditation) of security expertise. The results of this work also have the potential to reduce both the cost and time required to perform similar estimates through automation. However, we emphasise that these practical benefits will require further research and development. We are not aware of similar approaches to this problem being reported in literature, making direct comparisons impossible. We hope that this paper will initiate many similar studies in the future."}, {"heading": "9. Conclusions", "text": "In this work we have presented a method of finding good aggregation operators for creating rankings of technical attacks on a proposed system and ratings of security components, which has the added advantage of also highlighting salient factors and security components. To do this, we have used a data set collected during a decision making exercise at GCHQ in which cyber-security experts performed security assessment tasks on a realistic system proposal. The results showed that using the proposed method it is possible to produce rankings of technical attacks on a system using ratings of security components, ratings of security components from ratings a specific factors of difficulty, and finally, rankings of technical attacks on a system from ratings of specific factors. These outcomes present the possibility of using ratings of generic security components (or their characteristics) in \u2018What if?\u2019 scenarios to assess the impact of altering/moving components within a system design.\nThe work has produced important insights that enable the construction of expert security assessment support tools. Such tools have the potential to reduce the time and effort required of experts for assessments, and enable systems designers to produce approximate security assessments before they seek expert advice. These advances will address growing concerns about the capacity of limited expert resources in view of the increasing complexity and growing number of information systems that are under attack from an ever changing set of attacks.\nAs noted in Section 8, this paper does not advocate the proposed approach of optimising the parameters of the given aggregation operators as a unique solution. Indeed, it is likely that other approaches will achieve similar, and in the case of more complex approaches such as fuzzy integrals, more nuanced results. However, the proposed architecture provides a viable approach which enables the generation of highly useful results and insight in the challenging area of expert-led cyber security system assessment. The same general methodology may be applied to a variety of similar situations in which the modelling of expert opinion, particularly when aggregating sub-criteria, is desired.\nFuture work in this area will involve efforts to create the generic security component database mentioned previously and applying the techniques shown here to assess the practicality of providing decision support for systems architects in the process of designing new systems. In addition, we are exploring the applicability of the proposed approach to related areas such as \u2018adversary characterisation\u2019 in cyber-threat intelligence."}, {"heading": "10. Acknowledgements", "text": "The research reported here has been partially funded by CESG \u2014 the UK Government\u2019s National Technical Authority for Information Assurance (IA) and RCUK\u2019s Horizon Digital Economy Research Hub Grant, EP/G065802/1. We also thank the anonymous reviewers who have made many insightful and valuable comments which have been incorporated into the text, thereby improving the paper."}, {"heading": "Appendix A. EA Configuration Experiments", "text": "This appendix contains details of the experiments conducted to find ideal EA configurations for the OWA/WA search."}, {"heading": "Appendix A.1. EA for use with OWAs", "text": "This subsection contains the experiments conducted to find an EA configuration to be used in the experiments performed in Section 6\nInitial experiments focused on discovery of an ideal configuration for the EA, which is a significant problem in itself. In order to create a practical test schedule that could be completed in a reasonable time frame, these experiments were split into two parts: 1) evolutionary operator proportions and 2) generations and population sizes."}, {"heading": "Appendix A.1.1. Part 1 - Evolutionary Operator Proportions", "text": "Table B.19 shows the configurations tested in the first part. For all of these experiments 1% elitism was applied to a population of 250 over 250 generations. The population and generations values have been chosen arbitrarily in order to explore the operator proportions. Appropriate values for population and generations will be examined in later experiments.\n[Table 19 about here.]\nThe best results for these experiments are given in Table B.20. The results for all three groupings show that configurations that have a large proportion of mutation and a smaller proportion of crossover work best, and that the proportion of copy has little effect on the results. As the best individuals are automatically copied from one generation to the next via elitism, this may reduce the impact made by the copy operator. Table B.21 gives details of the OWAs found in each of the best experiments listed in Table B.20. It can be seen that in all cases, the EA is finding OWAs that place significantly more weight on the most difficult to attack/evade security component than the remaining components.\n[Table 20 about here.]\n[Table 21 about here.]"}, {"heading": "Appendix A.1.2. Part 2 - Population and Generations", "text": "In the second part of the EA configuration experiments, the focus switched to the number of generations and population size. The best evolutionary operator proportions from the first part of testing were used in a series of experiments with varying population sizes/numbers of generations. Table B.22 provides the population sizes and numbers of generations tested. The best results from these experiments are shown in Table B.23. It should be noted that in the first part two configurations were joint best for the all group, both were tested in this part. The best result for the all group shown in Table B.23 was achieved with operator proportions from Test 2. In this set of experiments there is much less variation in the results than was seen in the first part of testing; altering the operator proportions had a greater effect on results than altering the population sizes and number of generations. Table B.24 gives details of the OWAs found in each of the best experiments listed in Table B.23. Again, the EA is finding OWAs that place significantly more weight on the most difficult to attack/evade security component than the remaining components.\n[Table 22 about here.]\n[Table 23 about here.]\n[Table 24 about here.]"}, {"heading": "Appendix B. EA for use with WAs", "text": "This subsection contains the experiments conducted to find an EA configuration to be used in the experiments performed in Section 5"}, {"heading": "Appendix B.1. Part 1 - Evolutionary Operator Proportions", "text": "In the first set of experiments a series of evolutionary operator proportions are tested. As in the previous experiments, a fixed population of 250 is run over 250 generations and 1% elitism is applied. Table B.25 shows details of the configurations tested, the best results for each question set are shown in Table B.26.\n[Table 25 about here.]\n[Table 26 about here.]\nThese initial results show that the results are significantly different for each question set. The attack questions produce ratings that are extremely strongly correlated with experts\u2019 actual overall difficulty ratings, while the WAs for the evade questions produce ratings that are weakly correlated with experts\u2019 actual ratings."}, {"heading": "Appendix B.2. Part 2 - Population and Generations", "text": "In the second part of the EA configuration experiments the best evolutionary operator proportions found for each question set in part 1 are used in a series of experiments with varying population sizes and numbers of generations. Table B.27 provides the configurations tested and Table B.28 shows the best results.\n[Table 27 about here.]\n[Table 28 about here.]\nAgain, the results for the attack question set are far superior to those for the evade questions."}], "references": [{"title": "Risk assessment, Information Security Technical Report", "author": ["J. Tregear"], "venue": null, "citeRegEx": "Tregear,? \\Q2001\\E", "shortCiteRegEx": "Tregear", "year": 2001}, {"title": "Adaptation in natural and artificial systems: an introductory analysis with applications to biology, control, and artificial intelligence", "author": ["J. Holland"], "venue": "Ann Arbor: University of Michigan,", "citeRegEx": "Holland,? \\Q1975\\E", "shortCiteRegEx": "Holland", "year": 1975}, {"title": "Genetic algorithms in search, optimization, and machine learning, Addison-Wesley Reading", "author": ["D. Goldberg"], "venue": null, "citeRegEx": "Goldberg,? \\Q1989\\E", "shortCiteRegEx": "Goldberg", "year": 1989}, {"title": "A comparison of active set method and genetic algorithm approaches for learning weighting vectors in some aggregation operators, International journal of intelligent systems", "author": ["D. Nettleton", "V. Torra"], "venue": null, "citeRegEx": "Nettleton and Torra,? \\Q2001\\E", "shortCiteRegEx": "Nettleton and Torra", "year": 2001}, {"title": "Machine Learning Techniques for the Domain of Anomaly Detection for Computer Security, Ph.D", "author": ["T.D. Lane"], "venue": null, "citeRegEx": "Lane,? \\Q1998\\E", "shortCiteRegEx": "Lane", "year": 1998}, {"title": "Immune system approaches to intrusion detection\u2013a review, Natural computing", "author": ["J. Kim", "P. Bentley", "U. Aickelin", "J. Greensmith", "G. Tedesco", "J. Twycross"], "venue": null, "citeRegEx": "Kim et al\\.,? \\Q2007\\E", "shortCiteRegEx": "Kim et al\\.", "year": 2007}, {"title": "Fuzzy Ratings for Computer Security Evaluation", "author": ["D.P. Clements"], "venue": "Ph.D. thesis,", "citeRegEx": "Clements,? \\Q1977\\E", "shortCiteRegEx": "Clements", "year": 1977}, {"title": "Intrusion Detection Systems and Multisensor Data Fusion, Communications of the ACM 43", "author": ["T. Bass"], "venue": null, "citeRegEx": "Bass,? \\Q2000\\E", "shortCiteRegEx": "Bass", "year": 2000}, {"title": "Fuzzy cognitive maps for decision support in an intelligent intrusion detection", "author": ["A. Siraj", "S.M. Bridges", "R.B. Vaughn"], "venue": "Joint 9th IFSA World Congress and 20th NAFIPS International Conference,", "citeRegEx": "Siraj et al\\.,? \\Q2001\\E", "shortCiteRegEx": "Siraj et al\\.", "year": 2001}, {"title": "Measuring Operational Risk Using Fuzzy Logic Modeling, International Risk Management Institute, Inc. (IRMI)", "author": ["S. Shah"], "venue": "URL http://www.irmi.com/Expert/Articles/2003/Shah09.aspx,", "citeRegEx": "Shah,? \\Q2003\\E", "shortCiteRegEx": "Shah", "year": 2003}, {"title": "Fuzzy Decision Support System for Risk Analysis in e-Commerce Development, Decision Support Systems", "author": ["E.W.T. Ngai", "F.K.T. Wat"], "venue": null, "citeRegEx": "Ngai and Wat,? \\Q2005\\E", "shortCiteRegEx": "Ngai and Wat", "year": 2005}, {"title": "From comparative risk assessment to multi-criteria decision analysis and adaptive management: Recent developments and applications, Environment", "author": ["I. Linkov", "F. Satterstrom", "G. Kiker", "C. Batchelor", "T. Bridges", "E. Ferguson"], "venue": null, "citeRegEx": "Linkov et al\\.,? \\Q2006\\E", "shortCiteRegEx": "Linkov et al\\.", "year": 2006}, {"title": "An Information Systems Security Risk Assessment Model Under the Dempster-Shafer Theory of Belief Functions, Journal of Management Information Systems", "author": ["L. Sun", "R.P. Srivastava", "T.J. Mock"], "venue": null, "citeRegEx": "Sun et al\\.,? \\Q2006\\E", "shortCiteRegEx": "Sun et al\\.", "year": 2006}, {"title": "A Fuzzy Decision Support System for IT Service Continuity Threat Assessment, Decision Support Systems", "author": ["B. Van de Walle", "A.-F. Rutkowski"], "venue": null, "citeRegEx": "Walle and Rutkowski,? \\Q2006\\E", "shortCiteRegEx": "Walle and Rutkowski", "year": 2006}, {"title": "A Fuzzy Risk Calculations Approach for a Network Vulnerability Ranking System, Defence R&D Canada", "author": ["M. Dondo"], "venue": "Technical Memorandum,", "citeRegEx": "Dondo,? \\Q2007\\E", "shortCiteRegEx": "Dondo", "year": 2007}, {"title": "Multicriteria Security System Performance Assessment Using Fuzzy Logic, The Journal of Defense Modeling and Simulation", "author": ["W.L. McGill", "B.M. Ayyub"], "venue": null, "citeRegEx": "McGill and Ayyub,? \\Q2007\\E", "shortCiteRegEx": "McGill and Ayyub", "year": 2007}, {"title": "An Evaluation of Naive Bayesian Anti-spam Filtering", "author": ["I. Androutsopoulos", "J. Koutsias", "K.V. Chandrinos", "G. Paliouras", "C.D. Spyropoulos"], "venue": "European Conference on Machine Learning,", "citeRegEx": "Androutsopoulos et al\\.,? \\Q2000\\E", "shortCiteRegEx": "Androutsopoulos et al\\.", "year": 2000}, {"title": "Privileged information for data clustering", "author": ["J. Feyereisl", "U. Aickelin"], "venue": "Information Sciences", "citeRegEx": "Feyereisl and Aickelin,? \\Q2012\\E", "shortCiteRegEx": "Feyereisl and Aickelin", "year": 2012}, {"title": "Information fusion in the immune system, Information Fusion", "author": ["J. Twycross", "U. Aickelin"], "venue": null, "citeRegEx": "Twycross and Aickelin,? \\Q2010\\E", "shortCiteRegEx": "Twycross and Aickelin", "year": 2010}, {"title": "Information Systems Security Design Methods: Implications for Information Systems Development, ACM Computing Surveys", "author": ["R. Baskerville"], "venue": null, "citeRegEx": "Baskerville,? \\Q1993\\E", "shortCiteRegEx": "Baskerville", "year": 1993}, {"title": "Current directions in IS security research: towards socio-organizational perspectives, Information Systems", "author": ["G. Dhillon", "J. Backhouse"], "venue": null, "citeRegEx": "Dhillon and Backhouse,? \\Q2001\\E", "shortCiteRegEx": "Dhillon and Backhouse", "year": 2001}, {"title": "Directions in Security Metrics Research, NIST", "author": ["W. Jansen", "P.D. Gallagher"], "venue": "Technical Report,", "citeRegEx": "Jansen and Gallagher,? \\Q2009\\E", "shortCiteRegEx": "Jansen and Gallagher", "year": 2009}, {"title": "Real-time alert correlation with type graphs", "author": ["G. Tedesco", "U. Aickelin"], "venue": "in: Proceedings of the 4th International Conference on Information Systems Security (ICISS", "citeRegEx": "Tedesco and Aickelin,? \\Q2008\\E", "shortCiteRegEx": "Tedesco and Aickelin", "year": 2008}, {"title": "On ordered weighted averaging aggregation operators in multicriteria decisionmaking, Systems, Man and Cybernetics, IEEE Transactions on", "author": ["R. Yager"], "venue": null, "citeRegEx": "Yager,? \\Q1988\\E", "shortCiteRegEx": "Yager", "year": 1988}, {"title": "Soft computing-based aggregation methods for human resource management", "author": ["L. Can\u00f3s", "V. Liern"], "venue": "European Journal of Operational Research", "citeRegEx": "Can\u00f3s and Liern,? \\Q2008\\E", "shortCiteRegEx": "Can\u00f3s and Liern", "year": 2008}, {"title": "Integrating indicators for performance assessment of small water utilities using ordered weighted averaging (OWA) operators, Expert Systems with Applications", "author": ["R. Sadiq", "M. Rodr\u0131\u0301guez", "S. Tesfamariam"], "venue": null, "citeRegEx": "Sadiq et al\\.,? \\Q2010\\E", "shortCiteRegEx": "Sadiq et al\\.", "year": 2010}, {"title": "Derakshande, Fuzzy OWA model for information security risk management, Automatic Control and Computer Sciences", "author": ["S.Y. Imamverdiev"], "venue": null, "citeRegEx": "Imamverdiev,? \\Q2011\\E", "shortCiteRegEx": "Imamverdiev", "year": 2011}, {"title": "Gil-Lafuente, New decision-making techniques and their application in the selection of financial products, Information Sciences", "author": ["A.J. Merig\u00f3"], "venue": null, "citeRegEx": "Merig\u00f3,? \\Q2010\\E", "shortCiteRegEx": "Merig\u00f3", "year": 2010}, {"title": "Gil-Lafuente, Decision-making in sport management based on the OWA operator, Expert Systems with Applications", "author": ["A.J. Merig\u00f3"], "venue": null, "citeRegEx": "Merig\u00f3,? \\Q2011\\E", "shortCiteRegEx": "Merig\u00f3", "year": 2011}, {"title": "The WOWA Operator: A Review", "author": ["V. Torra"], "venue": "Recent Developments in the Ordered Weighted Averaging Operators: Theory and Practice,", "citeRegEx": "Torra,? \\Q2011\\E", "shortCiteRegEx": "Torra", "year": 2011}, {"title": "The proof and measurement of association between two things, The American journal of psychology", "author": ["C. Spearman"], "venue": null, "citeRegEx": "Spearman,? \\Q1904\\E", "shortCiteRegEx": "Spearman", "year": 1904}, {"title": "The Future of Data Analysis, The Annals of Mathematical Statistics", "author": ["J.W. Tukey"], "venue": null, "citeRegEx": "Tukey,? \\Q1962\\E", "shortCiteRegEx": "Tukey", "year": 1962}, {"title": "Towards a More Systematic Approach to Secure Systems Design and Analysis, International Journal of Secure Software Engineering", "author": ["S. Miller", "S. Appleby", "J.M. Garibaldi", "U. Aickelin"], "venue": null, "citeRegEx": "Miller et al\\.,? \\Q2013\\E", "shortCiteRegEx": "Miller et al\\.", "year": 2013}], "referenceMentions": [{"referenceID": 0, "context": "For example, it is very difficult to estimate the costs of a successful attack, the likelihood of a rare attack, as the tools and technologies available to attackers/defenders are constantly changing (Tregear, 2001).", "startOffset": 200, "endOffset": 215}, {"referenceID": 1, "context": "Evolutionary Algorithms (EAs) (Holland (1975) and Goldberg et al.", "startOffset": 31, "endOffset": 46}, {"referenceID": 3, "context": "(1989)) have been shown to be useful in tasks involving a large search area, including searching for OWA weights (Nettleton and Torra, 2001).", "startOffset": 113, "endOffset": 140}, {"referenceID": 0, "context": "These factors include (Tregear, 2001):", "startOffset": 22, "endOffset": 37}, {"referenceID": 4, "context": "Over the years there have been many machine learning approaches to computer security, ranging from classic algorithm based studies (Lane, 1998) to immune system inspired approaches (Kim et al.", "startOffset": 131, "endOffset": 143}, {"referenceID": 5, "context": "Over the years there have been many machine learning approaches to computer security, ranging from classic algorithm based studies (Lane, 1998) to immune system inspired approaches (Kim et al., 2007).", "startOffset": 181, "endOffset": 199}, {"referenceID": 6, "context": "Examples include what is probably the earliest use of fuzzy sets in this context (Clements, 1977), intrusion detection based on multisensor data fusion Bass (2000) or fuzzy cognitive maps Siraj et al.", "startOffset": 81, "endOffset": 97}, {"referenceID": 4, "context": "Over the years there have been many machine learning approaches to computer security, ranging from classic algorithm based studies (Lane, 1998) to immune system inspired approaches (Kim et al., 2007). What almost all of these past approaches have in common is that they attack the problem from a quantitative point of view, based on evaluating datasets such as network traffic , but without an attempt to integrate often highly valuable knowledge held by security experts. Examples include what is probably the earliest use of fuzzy sets in this context (Clements, 1977), intrusion detection based on multisensor data fusion Bass (2000) or fuzzy cognitive maps Siraj et al.", "startOffset": 132, "endOffset": 637}, {"referenceID": 4, "context": "Over the years there have been many machine learning approaches to computer security, ranging from classic algorithm based studies (Lane, 1998) to immune system inspired approaches (Kim et al., 2007). What almost all of these past approaches have in common is that they attack the problem from a quantitative point of view, based on evaluating datasets such as network traffic , but without an attempt to integrate often highly valuable knowledge held by security experts. Examples include what is probably the earliest use of fuzzy sets in this context (Clements, 1977), intrusion detection based on multisensor data fusion Bass (2000) or fuzzy cognitive maps Siraj et al. (2001), and various automated decision systems to support risk or threat analysis (Shah, 2003; Ngai and Wat, 2005; Linkov et al.", "startOffset": 132, "endOffset": 681}, {"referenceID": 16, "context": "using Bayesian approaches (Androutsopoulos et al., 2000) to detect spam in emails, or selforganising map algorithms to learn combinations of external signals and system call IDs to detect unusual patterns (Feyereisl and Aickelin, 2012).", "startOffset": 26, "endOffset": 56}, {"referenceID": 17, "context": ", 2000) to detect spam in emails, or selforganising map algorithms to learn combinations of external signals and system call IDs to detect unusual patterns (Feyereisl and Aickelin, 2012).", "startOffset": 156, "endOffset": 186}, {"referenceID": 22, "context": "the work by Tedesco and Aickelin (2008). However, in these approaches the aim tends to be to develop improved techniques to construct and rate attack graphs, rather than facilitating and partially automating the overall process of integrating expert knowledge in cyber security assessments.", "startOffset": 12, "endOffset": 40}, {"referenceID": 23, "context": "In the experiments shown in this paper, two aggregation methods are employed: Weighted Averages (WAs), and Ordered Weighted Averages (OWAs) (Yager, 1988).", "startOffset": 140, "endOffset": 153}, {"referenceID": 24, "context": "In Can\u00f3s and Liern (2008), OWA operators are used in a personnel selection problem to aggregate selection criteria.", "startOffset": 3, "endOffset": 26}, {"referenceID": 24, "context": "In Can\u00f3s and Liern (2008), OWA operators are used in a personnel selection problem to aggregate selection criteria. In Badea et al. (2011) an OWA is used to compute a rating of the security of energy supply, Sadiq et al.", "startOffset": 3, "endOffset": 139}, {"referenceID": 24, "context": "In Can\u00f3s and Liern (2008), OWA operators are used in a personnel selection problem to aggregate selection criteria. In Badea et al. (2011) an OWA is used to compute a rating of the security of energy supply, Sadiq et al. (2010) describes the use of an OWA to aggregate performance indicators of small water utilities creating an overall performance assessment.", "startOffset": 3, "endOffset": 228}, {"referenceID": 24, "context": "In Can\u00f3s and Liern (2008), OWA operators are used in a personnel selection problem to aggregate selection criteria. In Badea et al. (2011) an OWA is used to compute a rating of the security of energy supply, Sadiq et al. (2010) describes the use of an OWA to aggregate performance indicators of small water utilities creating an overall performance assessment. Imamverdiev and Derakshande (2011) show how a fuzzy OWA operator can be used for rating information security products in terms of reduction of information security risk, and in Merig\u00f3 and Gil-Lafuente", "startOffset": 3, "endOffset": 396}, {"referenceID": 27, "context": "(2010) and Merig\u00f3 and Gil-Lafuente (2011) modified OWA operators are applied to a financial product selection problem and a football team player selection problem respectively.", "startOffset": 11, "endOffset": 42}, {"referenceID": 1, "context": "The most popular EA, the Genetic Algorithm (GA) (see Holland (1975) and Goldberg et al.", "startOffset": 53, "endOffset": 68}, {"referenceID": 1, "context": "The most popular EA, the Genetic Algorithm (GA) (see Holland (1975) and Goldberg et al. (1989)), begins with the generation of a random initial population of solutions to which fitness-based selection and copy, crossover and mutation operators are applied in order to discover near-optimal solutions.", "startOffset": 53, "endOffset": 95}, {"referenceID": 1, "context": "The most popular EA, the Genetic Algorithm (GA) (see Holland (1975) and Goldberg et al. (1989)), begins with the generation of a random initial population of solutions to which fitness-based selection and copy, crossover and mutation operators are applied in order to discover near-optimal solutions. The advantage of the GA is that it is able to search a large area of the solution space, while evaluating a small proportion of the possible solutions. This is critical for problems like those seen in this work in which there are far more possible solutions than it is practical to evaluate. The use of a GA to search for suitable OWA weights is demonstrated in Nettleton and Torra (2001) and Torra (2011), and in our own previous work (Miller et al.", "startOffset": 53, "endOffset": 690}, {"referenceID": 1, "context": "The most popular EA, the Genetic Algorithm (GA) (see Holland (1975) and Goldberg et al. (1989)), begins with the generation of a random initial population of solutions to which fitness-based selection and copy, crossover and mutation operators are applied in order to discover near-optimal solutions. The advantage of the GA is that it is able to search a large area of the solution space, while evaluating a small proportion of the possible solutions. This is critical for problems like those seen in this work in which there are far more possible solutions than it is practical to evaluate. The use of a GA to search for suitable OWA weights is demonstrated in Nettleton and Torra (2001) and Torra (2011), and in our own previous work (Miller et al.", "startOffset": 53, "endOffset": 707}, {"referenceID": 1, "context": "The most popular EA, the Genetic Algorithm (GA) (see Holland (1975) and Goldberg et al. (1989)), begins with the generation of a random initial population of solutions to which fitness-based selection and copy, crossover and mutation operators are applied in order to discover near-optimal solutions. The advantage of the GA is that it is able to search a large area of the solution space, while evaluating a small proportion of the possible solutions. This is critical for problems like those seen in this work in which there are far more possible solutions than it is practical to evaluate. The use of a GA to search for suitable OWA weights is demonstrated in Nettleton and Torra (2001) and Torra (2011), and in our own previous work (Miller et al., 2013a). The work in the current paper significantly extends the work seen in Miller et al. (2013a) in which EAs were employed to search for appropriate OWA weights to be used for aggregating ratings of security components to produce rankings of technical attacks, and to search for WA weights to be used to aggregate ratings of aspects of security components to produce overall security component ratings.", "startOffset": 53, "endOffset": 852}, {"referenceID": 30, "context": "Spearman\u2019s Rho (Spearman, 1904), also called Spearman\u2019s Rank Correlation Coefficent, measures the statistical dependence of two sets of rankings (ordinal data).", "startOffset": 15, "endOffset": 31}, {"referenceID": 31, "context": "Thus, in statistical terms, it should be viewed as exploratory data analysis rather than as formal hypotheses testing (sometimes called confirmatory data analysis), as discussed by Tukey in 1962 (Tukey, 1962).", "startOffset": 195, "endOffset": 208}, {"referenceID": 32, "context": "The rating scale from 0 to 100 was completely arbitrary, with no absolute meaning of 0 or 100 being conveyed to the experts, and the response included both a perceived location (\u2018mean\u2019) and uncertainty (\u2018variance\u2019) of opinion as described in more detail in Miller et al. (2013b). Two sets of questions were used, one for when an attack required a component to be attacked (compromised), and another for when an attack required a component only to be evaded (bypassed).", "startOffset": 257, "endOffset": 279}, {"referenceID": 32, "context": "Details of analysis work carried out previously on the resulting data can be found in Miller et al. (2013b). The exercise and methods described in this paper represent an important part of performing a security assessment on a proposed system.", "startOffset": 86, "endOffset": 108}], "year": 2016, "abstractText": "An important role carried out by cyber-security experts is the assessment of proposed computer systems, during their design stage. This task is fraught with difficulties and uncertainty, making the knowledge provided by human experts essential for successful assessment. Today, the increasing number of progressively complex systems has led to an urgent need to produce tools that support the expert-led process of system-security assessment. In this research, we use Weighted Averages (WAs) and Ordered Weighted Averages (OWAs) with Evolutionary Algorithms (EAs) to create aggregation operators that model parts of the assessment process. We show how individual overall ratings for security components can be produced from ratings of their characteristics, and how these individual overall ratings can be aggregated to produce overall rankings of potential attacks on a system. As well as the identification of salient attacks and weak points in a prospective system, the proposed method also highlights which factors and security components contribute most to a component\u2019s difficulty and attack ranking respectively. A real world scenario is used in which experts were asked to rank a set of technical attacks, and to answer a series of questions about the security components that are the subject of the attacks. The work shows how finding good aggregation operators, and identifying important components and factors of a cyber-security problem can be automated. The resulting operators have the potential for use as decision aids for systems designers and cyber-security experts, increasing the amount of assessment that can be achieved with the limited resources available.", "creator": "TeX"}}}