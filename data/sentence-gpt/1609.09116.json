{"id": "1609.09116", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "27-Sep-2016", "title": "Analysis of Massive Heterogeneous Temporal-Spatial Data with 3D Self-Organizing Map and Time Vector", "abstract": "Self-organizing map(SOM) have been widely applied in clustering, this paper focused on centroids of clusters and what they reveal. When the input vectors consists of time, latitude and longitude, the map can be strongly linked to physical world, providing valuable information. Beyond basic clustering, a novel approach to address the temporal element is developed, enabling 3D SOM to track behaviors in multiple periods concurrently. This work will provide some valuable insights into why cluster networks are important in the future.\n\n\n\nTo date, the only work of our own has involved a single group of cluster-based clustering, and we have not yet decided what they can do with this data. We have been experimenting with different types of cluster networks for years, and this work has also focused on clustering, in which one cluster group can be able to predict whether or not one is in a particular cluster or a different group. The work also is currently underway, and this work may be done in collaboration with other groups on the internet.\n\nThis work was published in Physical Review Letters.", "histories": [["v1", "Tue, 27 Sep 2016 08:25:40 GMT  (5148kb,D)", "http://arxiv.org/abs/1609.09116v1", null]], "reviews": [], "SUBJECTS": "cs.LG cs.NE", "authors": ["yu ding"], "accepted": false, "id": "1609.09116"}, "pdf": {"name": "1609.09116.pdf", "metadata": {"source": "CRF", "title": "Analysis of Massive Heterogeneous Temporal-Spatial Data with 3D Self-Organizing Map and Time Vector", "authors": ["Yu Ding"], "emails": ["dingy@hust.edu.cn"], "sections": [{"heading": null, "text": "Self-organizing map(SOM) have been widely applied in clustering, this paper focused on centroids of clusters and what they reveal. When the input vectors consists of time, latitude and longitude, the map can be strongly linked to physical world, providing valuable information. Beyond basic clustering, a novel approach to address the temporal element is developed, enabling 3D SOM to track behaviors in multiple periods concurrently. Combined with adaptations targeting to process heterogeneous data relating to distribution in time and space, the paper offers a fresh scope for business and services based on temporal-spatial pattern.\nKeywords: Self-Organizing Map, Multi-Period Pattern, Heterogeneous Data"}, {"heading": "1. Introduction", "text": ""}, {"heading": "1.1. Background of Research", "text": "With the development of information gathering technology, people can access to tremendous amount of real-time occurrence data consisting of coordinates both in time and space, such as the e-commerce orders, Uber requests[1], crime incident reports[2],5\nand vehicle collisions[3]. The massiveness conceals patterns requiring feasible a tool to identify. Following research is tightly related to their features listed below:\n1) Extremely dense.\nDensity in both time and space makes it impossible to track every input, there-\nfore, determining centroids that represent the cluster they belong is essential for10\nPreprint submitted to Journal of NeuroComputing September 30, 2016\nar X\niv :1\n60 9.\n09 11\n6v 1\n[ cs\n.L G\n] 2\n7 Se\nproviding service based on time point and location, such as optimized warehouse site for delivery, effective patrol schedule and so forth.\n2) Multi-Periodically Structured.\nData repeats in days, weeks and months, demanding us to analysis under multiple\nperiod. For example, vehicle collision\u2019s distribution fluctuates within 24 hours15\nand days in one week.\n3) Heterogeneous.\nInputs include both numeric and categorical data. The crime incidents data not only covers time and geographic variables, but also classification of felonies.\nHow to incorporate heterogeneous data is challenging yet useful.20\nThe research was conducted in a progressive manner, beginning with basic clustering on time, latitude and longitude, aiming to solve the problem 1. Since not much prior experiment has been done to this type of data, making it necessary to test with different configurations and parameters to attain better accuracy. Next, the highlight of this passage, time vector is introduced to handle problem 2. Finally, adaptations on25\nSOM itself are made to overcome the difficulties mentioned in 3."}, {"heading": "1.2. Introduction on algorithm", "text": "Self-organizing map[4] is an unsupervised and efficient algorithm for clustering, which not only allows people to divide the data into sectors, but also to understand their\ntopographic relation. Following terminology is introduced with potential application.30\n\u2022 Nodes, building up self-organizing map\u2019s grid, the centroids of clusters.\n\u2022 Neighborhood, a sector within certain radius centering around a selected nodes.\n\u2022 Codebook Vector, indicating where a node is situated in coordinate\u2019s of input\ndata. Its value offers detailed information about the nodes, like when and where\nis most representative for a cluster of crimes.35\n\u2022 Best Matching Unit(BMU), the node with least distance to a chosen input. BMU\ncan be regarded as location with least cost. For instance, a driver at BMU has the least distance to a customer.\n\u2022 Hits, inputs that belongs to a specific cluster, like the recipients that a warehouse\nserved.40"}, {"heading": "2. Clustering with 3D Self-Organizing Map", "text": ""}, {"heading": "2.1. Construction of SOM", "text": "The framework of 3D grid consists of layers covering latitude and longitude axises, while different layers array along time axis. Nodes in one layer are marked with same color.\n45"}, {"heading": "2.1.1. Significance of Pre-Processing Input", "text": "According to previous research, normalization will promote the quality of map[5]. This paper compared two types of normalization, rescaling to [0,1] and standardization with z-score, both of which improves map\u2019s quality by drastically reducing errors\nintroduced later. Detailed results is available in Appendix A1.50"}, {"heading": "2.1.2. Initialization", "text": "In the research it\u2019s found that in order to achieve a well-organized map, grid must be initialized linearly and the side that parallels to time axis should be initialized with\ngreatest number of nodes, in other words, the number of layers should be larger than each side of layers. Moreover, initializing the map with different sizes yields an inter-55\nesting yet telling phenomenon that if lengths of grid\u2019s sides are not selected properly, the map will rotate during reiterations, ending up with poor quality. Explanation is discussed in Appendix A2."}, {"heading": "2.1.3. Training Progress", "text": "After initializing, training of SOM is summarized as following:60\n1) Find BMU for every input under Euclidean metric;\n2) Update the map in batch mode;\n3) Reiterate from step one;\nSince this research engages with heavy calculation, batch training is more preferable than sequential one, and using voronoi set can accelerate updating progress further[6] with following function.\nmi =\n\u2211 j\nnjhcix(t)\u2211 j njhci (1)\nOn the left, mi is a codebook vector, and nj is number of hits for node j, hc,i measures influence or weigh of node c to node i, determined by Gaussian neighborhood function65\nhc,i = e \u2212 dm(mc,mi)\n2\nr2 ."}, {"heading": "2.2. Measurement of Quality", "text": ""}, {"heading": "2.2.1. Quantization Error", "text": "Quantization error(QE) measures average distance between inputs to their BMUs.\nQE =\nn\u2211 i=1 d(xi,mj)\nn (2)\nd(xi,mj) is the distance of between input xi and its best matching unitmj and n is the total number of input. QE is important in application, for instance, selecting warehouse70\naccording to map with small QE can be economical for shipping industry."}, {"heading": "2.2.2. Topographic Error", "text": "Topographic error(TE) measures the portion of input whose BMU and second\nBMU connected directly in grid.\nTE =\nn\u2211 i=1 \u03b4(xi)\nn (3)\nThe value of \u03b4(xi) is determined by whether the nodes has second minimum distance to inputxi is a neighbor to BMU. If so, \u03b4(xi) = 0, otherwise it will be set as 1. If a map exhibits low TE, while the BMU\u2019s site is not available in application like police75\nstation, second BMU might be good substitute."}, {"heading": "2.3. Reliability Estimation", "text": ""}, {"heading": "2.3.1. Generating Correlation Matrix", "text": "In order to fully evaluate map\u2019s soundness in application, we need to ascertain\nwhether centroids and their hits distribute correspondingly to density of input. It can80\nbe achieved by converting input\u2019s regional density into frequencies as following steps:\n1) Slicing the input space into cubics;\n2) Generating a matrix contains numbers of inputs in each cubic. Precision can be\nset via choosing different pieces of slices;\n3) Counting the centroids and hits in every cubic, obtaining other two matrices with85\nsame dimension;\n4) Measuring their correlations to input frequency matrix.\nIf a map is representative, correlation coefficient(COR) should approximate to 1.\nCOR(X,Y ) =\nm\u2211 j=1 n\u2211 i=1\n(xij \u2212 X\u0304)(yij \u2212 Y\u0304 )\u221a m\u2211 j=1 n\u2211 i=1 (xij \u2212 X\u0304)2 m\u2211 j=1 n\u2211 i=1 (yij \u2212 Y\u0304 )2\nwhere X\u0304 and Y\u0304 are mean of matrices X ,Y ."}, {"heading": "2.3.2. Projection", "text": "Projecting high-dimensional into subspaces makes interpretation of interior rela-90\ntions more accessible. In clustering input with time, latitude and longitude, under the notion of projection, estimation can be divided into two parts:\n\u2022 Spatial consistency, in fixed durations, measuring how distribution of nodes and\ntheir hits match with input. To be more concrete, it measures frequency matrix\nslices along the time axis.95\n\u2022 Temporal coherence, measuring if spatial consistency remain stable in different\nperiods, by setting the durations to other periods.\nIn further analysis, projections is essential for assessing performance. While probating multiple period patterns, projecting data into different temporal dimensions allows us to observe variance under periods of varied durations. When input covers numeric and100\ncategorical variables, we need to evaluate accuracy of both temporal-spatial clustering and category classification."}, {"heading": "3. Exploring the Potential of 3D SOM", "text": "Apart from identify centroids in time-latitude-longitude space, basic model is in-105\nsufficient for demands in real world. First, only distribution in 24 hours is considered, whereas weekly or monthly fluctuation is ignored. In addition, input data comprises numeric elements and categorical ones, like name of purchased item, felony classifications, among which distance cannot be reckoned via Euclidean norm. Further analysis\nwill investigate two possible solution to overcome these limitations.110"}, {"heading": "3.1. Broadening Timeline with Time Vector", "text": "If time is studies as one dimension line while every moment is a zero-dimensional point, details in shorter spans are compressed when studying long term patterns. To circumvent this paradox, time point can be converted into time vector:\nt( ni Pi \u00d7 \u00b7 \u00b7 \u00b7 \u00d7 nj Pj )\u21d2 t\u2217 < ni Pi , \u00b7 \u00b7 \u00b7 , nj Pj > (4)\nOn the left side, time t is expressed as a product of fractions where the denominators Pi are different periods, for day, week, and month are 24*60, 7 and 12 respectively. Numerators ni are sequences in period Pi. The right side is a vector consisting of multipliers on the left. For example, 8:30 on Tuesday in March would be ( 510\n1440 \u00d7 2 7 \u00d7115\n3 12 )\u2192< 510 1440 , 2 7 , 3 12 >.\nIn this passage, 2D time vector is used, turning input into 4D vectors(day-weeklatitude-longitude). Combined with 3D SOM, this technique empowers us to inspect multiple periods\u2019 behaviors simultaneously. Furthermore, it could reveal influence between temporal periods, for instance, as days elapse in a week, when peaks occur in120\none day will also change."}, {"heading": "3.2. Mixed with Categorical Data", "text": "The major difficulty in analysis of mixed data is to find a method determines the distance between variables, and update the map. In this paper, straightforward approach\nis employed to deal with heterogeneous data, introduced below:125\n1) Assigning the name strings with ID numbers arbitrarily, since we do not relay\non their quantitative meaning, then input xi becomes a 4D vectors(time-latitudelongitude-ID);\n2) Transforming xi\u2019s ID number j into a binary vector Cxi(j), index of column\nwith 1 indicate ID number it holds, xi now has two parts, 3D numeric vectorNxi and kD category vector Cxi ;\nCxi(j) =< 1 0, \u00b7 \u00b7 \u00b7 j 1, \u00b7 \u00b7 \u00b7 k 0 >k (5)\nk is number of categories.\n3) Total distance D(xi,mj) between input xi and mj is sum of numeric variables130\nDn(Nxi , Nmj ) calculated under Euclidean norm and categorical partDc(Cxi , Cmj ) deduced via logic operation AND, ifxi, mjshare same ID number, set it to 0, if not, to 1;\nD(xi,mj) = Dn(Nxi , Nmi) + \u03b1\u00d7Dc(Cxi , Cmi) (6) Dc(Cxi , Cmj ) = Cxi&Cmj (7)\n\u03b1 is a parameter to offset scale dominance of eitherDn(xik,mjk) orDc(xik,mjk)\nin next step;135\n4) Searching for BMUs, working out a m\u00d7k weight matrix W, Wij represent how\ncategory j weighs in nodes i. For details on W, please view Appendix B1.\n5) Applying winner-take-all strategy on W, codebook vector mi\u2019s ID variable is\nassigned with column j that weighs most in row Wi.\nmi = argmax j (Wi(j)) (8)\nBefore utilize it, we should be aware that binary coding process neglects inner structure of categorical variables, which is not suitable category classifications have affiliations[7].\n4. Experimental Results140\nRunning the algorithms on two data sets, crime incidents and vehicle collisions, entering data in a single month at one time. In general, performances didn\u2019t vary much in input from different months, and crime incidents in Jan.2015 is selected for illustration, containing 7816 crime reports with date, time, latitude, longitude values and felony names. The CORs are affected by number of cubics dividing original space, for145\nthe impartiality of results, CORs are reckoned under a fixed division. Followings are result of 13\u00d7 8\u00d7 7 map, measured under 8\u00d7 5\u00d7 5 cubics in time-latitude-longitude space."}, {"heading": "4.1. Performance on Basic Clustering", "text": "In different months, overall CORs between frequency matrices of nodes and input150\nfluctuates around 0.82, for CORs of hits and input hold steady above 0.95. Table 1 shows CORs during eight sections in 24 hours of sample mentioned above.\nWhile CORs offer a percentage-like assessment, table 2 provides a quantitative reflection of consistency between map and input. It sums up numbers in different\nsections.155\nThe last column contains theR2 value deduced from linear regression to measure map\u2019s consistence to input. In order to observe in a perceptive manner on how map represent the input, heat map of input\u2019s density is painted with nodes in same section.\nIn Figure 2, two distinguishable intervals are selected to show how nodes match with160\nthe density of input."}, {"heading": "4.2. Performance on Multi-Period Analysis", "text": "2D time vector < time24\u00d760 , day 7 > is used in studying daily and weekly behaviors of crime incidents. Assessing the reliability with projections into subspaces of daylatitude-longitude and week-latitude-longitude. Extra test was conducted on vehicle165\ncollisions, result is supplied in Appendix C1. In study the daily pattern, table 3 represents CORs in eight sections of 24 hours.\nIn week-latitude-longitude subspace, CORs are measured day by day.\nTable 6: Weekly Sum of Input and Map\nDay in Week Mon. Tue. Wed. Thur. Fri. Sat. Sun. Input 1412 1383 1184 921 1064 913 939 R2\nNodes 111 112 105 101 105 98 96 0.89 Hits 1417 1380 1181 918 1068 890 962 0.99\nDistribution on Tuesday and Thursday are selected to show how the map trace\nweekly variance.\nbetween input and map reaches 0.64. Figure 4 is heat map of incidents in day-week plane.\n4.3. Performance on Heterogeneous Input185\nThe modified 3D SOM is tested with crime incidents data including felony types. Likewise, performance is gaged by calculate CORs under controlled felony IDs or fixed temporal intervals. To avoid monotony in representation, only results on clustering different IDs are provided here. Felony classification ID and temporal-spatial clustering of all input is supplied in Appendix C2.\nIn same manner, sum up numbers in each type of crime and calculate R2.\nTable 8: Numbers in Each ID\nID Number 1 2 3 4 5 6 7 Input Data 94 1174 1374 3188 1438 510 38 R2\nLayer Nodes 5 125 139 312 104 43 0 0.98 SOM Hits 94 1182 1383 3204 1441 512 0 0.99\n195\nPicture below shows heat maps of two selected types of crime and distribution of\nnodes with same ID."}, {"heading": "5. Discussion", "text": "natural positions of layers along time axis are not always consistent to fixed equidistant division, sometimes it gave low CORs misleadingly, which is a limitation of this\nreliability measurement. Broader spans are set to reduce such side effect.\nHowever, regardless of such drawback, 3D SOM performs well in basic clustering,\nfor the CORs between hits and input remain at a high level, which are not troubled by205\nsuch limitation. And the number of nodes matches with number of input in each layer. And according to Figure 2 and 3, nodes\u2019 distribution is consistent to input\u2019s density.\nIn multi-period analysis, results confirmed that 3D SOM could trace both daily and weekly pattern effectively. Beyond that, when projected into day-week plane, map discovers the correlation between two periods themselves. From Figure 4, it can be210\nseen when crime incidents peaked changed as day passing by and nodes of map moved accordingly. It provides a new basis for multi-period analysis, that if split the nesting interval into matrix, much more information can be gathered together without loss of short terms details. When it comes to categorical data, if we focus how the performance in reflecting215\neach type, COR for each ID is strongly influenced by how many input belongs to that ID, for major types map fit well with input. However, because of the winner-take-all strategy, hardly any node is allocated to infrequent crimes with ID 1,7. Then I tried updating method based on the probability of each ID in weight matrix W , yet it fails to solve the problem and lead to decreased reliability. Detail on this method is supplied220\nin Appendix B2. Linear regression analysis shows that it\u2019s almost inevitable due to contrast between sparsity of nodes and density of input.\nWhile the results are promising in basic clustering, as the dimension increases, it\u2019s troublesome to judge whether a centroid locate at a namely right position. To be more concrete, when studying crime incidents, should the nodes move closer to input with225\nsame type of crime, or to data with less geographic distance? When adding IDvariables into clustering, CORs in temporal-spatial subspace decreased. Moreover, there are some unsolved theoretical problem[8] in self-organizing map itself[9], prohibiting us to employ an universal standard to evaluate results. Besides, this paper concentrates on patterns and relationship within the data, it\u2019s230\npossible that temporal-spatial distributions are caused by factors not included, such as population, police force and so forth, leaving room for research to find potential causality.\nConclusion\nThree-dimensional self organizing map is competent and versatile in clustering and235\nidentifying behavioral patterns. Framework of grid reflects topographic feature of input, while codebook vectors store detailed information. Facilitated with an innovative methodology that expands timeline into matrix, 3D SOM unravels pattern and interrelation masked in multiple periods. Besides, a tailored 3D SOM clarifies complex relations in heterogeneous data, wisely avoiding calculation without analytical mean-240\ning.\nIn brief, what this paper seeks to address is not one or two specific clusterings of data contains time and geographic elements, but interpretation of interior relationships between variables based on temporal-spatial distribution. Self-organizing map is constructive for comprehension of high dimensional structures, providing an operable tool245\nin functional utilization.\nAppendix"}, {"heading": "Appendix A", "text": ""}, {"heading": "Appendix A1", "text": "Significance of Pre-Processing Input250\nResults shows that rescaling process can significantly reduce both the quantization\nand topographic error under the same training epochs. Their definitions are listed: Rescaling the data to [0,1].\nx\u2217i = xi \u2212 xmin\nxmax \u2212 xmin (9)\nStandardization with z-score.\nx\u2217i = xi \u2212 \u00b5 \u03c3\n(10)\n\u00b5 is the mean of x, and \u03c3 represents standard deviation. Following table contains QE and TE for data used in basic clustering trained with 10\u00d7 6\u00d7 6 map after 100 epochs.\nized map meets less overlaps. Together with quantitative measurement above, we can conclude that normalization contributes to quality enhancement."}, {"heading": "Appendix A2", "text": "Initialization of Map\nInitialization process can be classified into random and linear initialization. While260\n2D SOM is known for being insensitive to different initialization, however for 3D SOM, if the codebook vector is initialized randomly, its topographic feature will remain chaotic with high error rate, which might be explained by metastability [10].\nSet map\u2019s size as l \u00d7m \u00d7 n, where l is the number of layers along time axis and\nm\u00d7 n is nodes in each layer. If the max(l,m, n) 6= l, map will rotate in the training,265\neventually the largest side of the 3D grid approximately parallels to time axis. The expected layered structure is lost, accompanied with high QE and TE. This results is consistent with the behavior of 2D SOM, where the two-dimensional grid extend itself in time-latitude or time-longitude plane, instead of latitude-longitude. It can be explained by Principle Component Analysis(PCA). It\u2019s found that time factor contributed270\nthe most to principle components. Therefore, in order to obtain less distortion and well organized layers, the size of grid should be chosen according to PCA, set the largest length to axis with greatest explaining ability."}, {"heading": "Appendix B", "text": "Appendix B1275\nAlgorithms for Categorical Variable\nThe updating of categorical variable is fully explained by following equation, in-\nspired matrix calculations in SOM Toolbox[11].\nW m\u00d7k = M m\u00d7m \u00d7 ( F m\u00d7n \u00d7 C n\u00d7k )\nThe m,n,k represent the number of nodes, inputs, and categories respectively.\n\u2022 Weight matrix W , wi,j indicate the weigh of category j in nodei.\n\u2022 Neighborhood matrix H measures the influence of nodei to nodej . Hi,j is cal-\nculated through Gaussian function h(i, j),.280\n\u2022 Filter matrix F , indicating BMUs of input. If 1 appears in row i, column j, it\nmeans inputi\u2019s BMU is nodej .\n\u2022 Input ID matrix C, coding the categorical data into binaries, for row i, if column\nj is 1, then ID variable in inputi is j.\n\u2022 The product of two matrices in parentheses indicates nodei has (F \u00d7 C)i,j hits285\nwith category j."}, {"heading": "Appendix B2", "text": "Choose ID Variable in Probabilistic Manner\nIn probability based method for updating mi\u2019s ID variable, any ID values can be\nselected according to their probabilities.290\nP (mi = j) = PWi(j)\nPWi(j) =\nn\u2211 t hcnj\nn\u2211 t hc\nWhile it seems to be more considerate, results tells another story, that probability based method is affected by the negative impact of random numbers. Other research advices a combination of two method [12], setting a threshold on minimum proportion for winner-take-all strategy, if it\u2019s not reached, selecting ID randomly.\nAppendix C295"}, {"heading": "Appendix C1", "text": "Additional Test on Multi-Period Analysis\nFollowing is result of clustering 13717 vehicle collision reports1 with a 13\u00d7 8\u00d7 7\nmap trained after 100 epochs. First, performance in one day is measured."}, {"heading": "Appendix C2", "text": ""}], "references": [{"title": "The self-organizing map", "author": ["T. Kohonen"], "venue": "Proceedings of the IEEE 78 (9) ", "citeRegEx": "4", "shortCiteRegEx": null, "year": 1990}, {"title": "Kohonen self-organizing maps: Is the normalization necessary", "author": ["P. Demartines", "F. Blayo"], "venue": "Complex Systems 6 (2) ", "citeRegEx": "5", "shortCiteRegEx": null, "year": 1992}, {"title": "Self-organizing maps", "author": ["T. Kohonen"], "venue": "springer series in information sciences 30  325 ", "citeRegEx": "6", "shortCiteRegEx": null, "year": 2001}, {"title": "Visualized analysis of mixed numeric and categorical data via extended self-organizing map", "author": ["C.-C. Hsu", "S.-H. Lin"], "venue": "Neural Networks and Learning Systems, IEEE Transactions on 23 (1) ", "citeRegEx": "7", "shortCiteRegEx": null, "year": 2012}, {"title": "Self-organizing map algorithm and distortion measure", "author": ["J. Rynksiewicz"], "venue": "Neural  330 networks 19 (6) ", "citeRegEx": "8", "shortCiteRegEx": null, "year": 2006}, {"title": "Self-organizing maps", "author": ["T. Kohonen"], "venue": "springer series in information sciences 30 ", "citeRegEx": "9", "shortCiteRegEx": null, "year": 2001}, {"title": "Self-organizing maps: Stationary states", "author": ["E. Erwin", "K. Obermayer", "K. Schulten"], "venue": "metastability and convergence rate, Biological Cybernetics 67 (1) ", "citeRegEx": "10", "shortCiteRegEx": null, "year": 1992}, {"title": "J", "author": ["J. Vesanto", "J. Himberg", "E. Alhoniemi"], "venue": "Parhankangas, et al., Self-organizing map in matlab: the som toolbox, in: Proceedings of the Matlab DSP conference, Vol. 99", "citeRegEx": "11", "shortCiteRegEx": null, "year": 1999}, {"title": "An extension of self-organizing maps to categorical data", "author": ["N. Chen", "N.C. Marques"], "venue": "in: Progress in Artificial Intelligence, Springer", "citeRegEx": "12", "shortCiteRegEx": null, "year": 2005}], "referenceMentions": [{"referenceID": 0, "context": "Introduction on algorithm Self-organizing map[4] is an unsupervised and efficient algorithm for clustering, which not only allows people to divide the data into sectors, but also to understand their topographic relation.", "startOffset": 45, "endOffset": 48}, {"referenceID": 1, "context": "Significance of Pre-Processing Input According to previous research, normalization will promote the quality of map[5].", "startOffset": 114, "endOffset": 117}, {"referenceID": 2, "context": "1) Find BMU for every input under Euclidean metric; 2) Update the map in batch mode; 3) Reiterate from step one; Since this research engages with heavy calculation, batch training is more preferable than sequential one, and using voronoi set can accelerate updating progress further[6] with following function.", "startOffset": 282, "endOffset": 285}, {"referenceID": 3, "context": "Before utilize it, we should be aware that binary coding process neglects inner structure of categorical variables, which is not suitable category classifications have affiliations[7].", "startOffset": 180, "endOffset": 183}, {"referenceID": 4, "context": "Moreover, there are some unsolved theoretical problem[8] in self-organizing map itself[9], prohibiting us to employ an universal standard to evaluate results.", "startOffset": 53, "endOffset": 56}, {"referenceID": 5, "context": "Moreover, there are some unsolved theoretical problem[8] in self-organizing map itself[9], prohibiting us to employ an universal standard to evaluate results.", "startOffset": 86, "endOffset": 89}, {"referenceID": 6, "context": "While 260 2D SOM is known for being insensitive to different initialization, however for 3D SOM, if the codebook vector is initialized randomly, its topographic feature will remain chaotic with high error rate, which might be explained by metastability [10].", "startOffset": 253, "endOffset": 257}, {"referenceID": 7, "context": "Algorithms for Categorical Variable The updating of categorical variable is fully explained by following equation, inspired matrix calculations in SOM Toolbox[11].", "startOffset": 158, "endOffset": 162}, {"referenceID": 8, "context": "Other research advices a combination of two method [12], setting a threshold on minimum proportion for winner-take-all strategy, if it\u2019s not reached, selecting ID randomly.", "startOffset": 51, "endOffset": 55}], "year": 2016, "abstractText": "Self-organizing map(SOM) have been widely applied in clustering, this paper focused on centroids of clusters and what they reveal. When the input vectors consists of time, latitude and longitude, the map can be strongly linked to physical world, providing valuable information. Beyond basic clustering, a novel approach to address the temporal element is developed, enabling 3D SOM to track behaviors in multiple periods concurrently. Combined with adaptations targeting to process heterogeneous data relating to distribution in time and space, the paper offers a fresh scope for business and services based on temporal-spatial pattern.", "creator": "LaTeX with hyperref package"}}}