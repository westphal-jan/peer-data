{"id": "1610.01221", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "4-Oct-2016", "title": "Seer: Empowering Software Defined Networking with Data Analytics", "abstract": "Network complexity is increasing, making network control and orchestration a challenging task. The proliferation of network information and tools for data analytics can provide an important insight into resource provisioning and optimisation. The network knowledge incorporated in software defined networking can facilitate the knowledge driven control, leveraging the network programmability. We present Seer: a flexible, highly configurable data analytics platform for network intelligence based on software defined networking and big data principles. Seer combines a computational engine with a distributed messaging system to provide a scalable, fault tolerant and real-time platform for knowledge extraction. Our first prototype uses Apache Spark for streaming analytics and open network operating system (ONOS) controller to program a network in real-time. The first application we developed aims to predict the mobility pattern of mobile devices inside a smart city environment. With open source, we are a leading provider for monitoring and managing data flow on a variety of platforms. In an exciting world, a new cloud computing and distributed ledger system is becoming available. With the launch of Seer, our company has a solid roadmap in a future where it will be able to integrate multiple platforms into a fully distributed distributed, scalable database.", "histories": [["v1", "Tue, 4 Oct 2016 22:22:53 GMT  (969kb)", "http://arxiv.org/abs/1610.01221v1", "8 pages, 6 figures, Big data, data analytics, data mining, knowledge centric networking (KCN), software defined networking (SDN), Seer, 2016 15th International Conference on Ubiquitous Computing and Communications and 2016 International Symposium on Cyberspace and Security (IUCC-CSS 2016)"]], "COMMENTS": "8 pages, 6 figures, Big data, data analytics, data mining, knowledge centric networking (KCN), software defined networking (SDN), Seer, 2016 15th International Conference on Ubiquitous Computing and Communications and 2016 International Symposium on Cyberspace and Security (IUCC-CSS 2016)", "reviews": [], "SUBJECTS": "cs.NI cs.AI", "authors": ["kyriakos sideris", "reza nejabati", "dimitra simeonidou"], "accepted": false, "id": "1610.01221"}, "pdf": {"name": "1610.01221.pdf", "metadata": {"source": "CRF", "title": "Seer: Empowering Software Defined Networking with Data Analytics", "authors": ["Kyriakos Sideris", "Reza Nejabati", "Dimitra Simeonidou"], "emails": ["kyriakos.sideris@bristol.ac.uk"], "sections": [{"heading": null, "text": "Seer: Empowering Software Defined Networking with Data Analytics\nKyriakos Sideris, Reza Nejabati, Dimitra Simeonidou\nHigh Performance Networks Group University of Bristol, UK\nkyriakos.sideris@bristol.ac.uk\nAbstract\u2013Network complexity is increasing, making network control and orchestration a challenging task. The proliferation of network information and tools for data analytics can provide an important insight into resource provisioning and optimisation. The network knowledge incorporated in software defined networking can facilitate the knowledge driven control, leveraging the network programmability. We present Seer: a flexible, highly configurable data analytics platform for network intelligence based on software defined networking and big data principles. Seer combines a computational engine with a distributed messaging system to provide a scalable, fault tolerant and real-time platform for knowledge extraction. Our first prototype uses Apache Spark for streaming analytics and open network operating system (ONOS) controller to program a network in real-time. The first application we developed aims to predict the mobility pattern of mobile devices inside a smart city environment.\nKeywords\u2013Big data, data analytics, data mining, knowledge centric networking (KCN), software defined networking (SDN), Seer\nI. INTRODUCTION A big growth in networks has been observed in recent years, ranging from end-user mobile data networks through to machine-to-machine communications. The number of devices connected to IP networks will continue to increase up to three times the global population in 2020, while the global Internet traffic will be equivalent to 95 times the volume of the entire global Internet in 2005 [1]. As the complexity and interdependence of networks increase, management will be a progressively challenging task.\nThe importance of data analytics has increased due to the fact that data can fuel opportunities across many disciplines. For instance, businesses can deliver personalised services in social media and e-commerce, and concurrently researchers can understand and investigate the secrets of the human genome. Data analytics inherited a plethora of statistics, machine learning and data mining algorithms, only to combine with scalable and fault tolerant computer science methodologies and finally deliver big data tools. Network orchestrators and cloud providers are enabled to optimise their services by using big data.\nOn the other hand, the software defined networking (SDN) paradigm facilitates network evolution and innovation by simplifying network hierarchy and separating the control from data planes. The extracted network knowledge can drive\nintelligent SDN control by providing a clearer view of the network dynamics. The importance of network analytics increases as SDN is further established in the networking market [2].\nAlthough various frameworks have been proposed to resolve network optimisation problems using big data analytics, they do not propose an architecture that can work as common ground for algorithm development. Moreover, reliability is becoming increasingly important as network elements become main components of the control plane. Therefore, any proposed platform should meet the challenges of high availability and scalability whilst being adaptive enough to carry out a diverse range of tasks. In addition, it should also run on commodity hardware in order to reduce the capital expenditure.\nIn this paper we introduce Seer, a flexible, highly configurable data analytics platform for network intelligence based on SDN and big data principles. Seer uses active or passive network elements, which are either SDN enabled or not, to extract information related to the network state. Various sources of information are combined in order to generate knowledge, which in turn is used to leverage SDN, either by optimising the network resource allocation or by predicting the next state and proactively orchestrating resources. The extracted knowledge is also presented to network applications in the higher layers to assist their management processes.\nOur platform provides the benefits of big data architectures on network data management and data analytics [3] to the SDN network paradigm in order to leverage network programmability, ease of management, optimisation of network resources and eminent failure recovery [4]. The main improvement of Seer lies in the fact that the platform has been built on mature open-source tools, using design methodologies employed in industry. All elements of the proposed platform run on commodity hardware and can adapt to any network analytics related task.\nThe applications running on Seer can vary from core to edge networks, targeting storage, computing or orchestration applications. The developer defines the type of extracted information from the network, the format that will be used to disseminate information and the model under which this information will be combined in order to generate the necessary knowledge. In addition, the implementation of new algorithms targeting Seer\u2019s controllers and computation engines is straightforward, as it is based on well-established\nThe work presented in this paper has been supported by EPSRC Knowledge Centric Networking (KCN) project (EP/L026120/1) and EPSRC Towards Ultimate Convergence of All Networks (TOUCAN) project (EP/L020009/1).\ntechnologies. A mobility management application was developed on this platform in order to highlight the benefit of using Seer for dynamic resource optimisation when used in a chain of services in a smart city environment.\nThe remainder of the paper is organised as follows. Section II provides the background on this work, whilst related work is presented in Section III. The main components of the platform are presented in Section IV as well as our first prototype. Section V describes the mobility management use case, as the first application for evaluation, followed by Section VI which concludes the discussion.\nII. BACKGROUND"}, {"heading": "A. Major Concepts", "text": "The Seer architecture was inspired by three major concepts: i) knowledge extraction based on techniques used for processing of large datasets; ii) knowledge exchange to fulfil network management goals; and finally iii) knowledge utilisation to drive programmable networks.\n1) Knowledge Centric Networking: In the knowledge centric networking (KCN) paradigm, the terms \u2018data\u2019, \u2018information\u2019 and \u2018knowledge\u2019 have different semantics and their use is not interchangeable. The term \u2018data\u2019 is related to raw facts retrieved from the network, whereas \u2018information\u2019, or D1 knowlet, describes processed, aggregated and filtered data that represent snapshots of the system\u2019s state. \u2018Knowledge\u2019, or D2 knowlet, represents the outcome of cognitive and analytical processes based on given sets of information. Using the example of Wi-Fi mobility, the probe request, authentication and association packets exchange represent raw facts that describe the roaming procedure of a Wi-Fi node. The aggregation of the above raw information comprises a D1 knowlet that describes a snapshot of the network state with respect to a Wi-Fi node. The combination of repetitive time snapshots related to a certain Wi-Fi node illustrate the mobility pattern of the node, which forms a D2 knowlet, and can be used to accurately predict future directions of movement.\nThe extracted knowledge can be either exploited within a single administrative domain (AD) or shared between different systems. Three styles of knowledge exchange are formed depending on the relation between knowledge producer and consumer: Knowledge as a tool (KaaT) describes the knowledge exchange that enables intelligent service or network control within a single AD, whilst knowledge as a service (KaaS) represents the knowledge transfer across different domains as a provided service based on service level agreements (SLAs) in order to generate business opportunities. In the KaaT style, the knowledge producer (KP) and knowledge consumer (KC) belong to the same AD, whilst in KaaS they belong in different ADs. The third knowledge exchange style is knowledge as a cloud (KaaC) which embodies open and flexible sharing that is not based on SLAs. In the previously described Wi-Fi case, the exploitation of the mobility pattern knowledge with the aim of reducing handover time delay within a Wi-Fi domain constitutes KaaT. If the mobility pattern knowledge is shared with a content delivery\nnetwork under an SLA, it becomes KaaS and receives characteristics of inter-service communication. If the user is providing its mobility habits voluntarily to solve the road traffic congestion of the city is living in, then the mobility pattern knowledge becomes KaaC.\nIt is obvious that knowledge carries more value when it is presented to a relevant recipient. The KCN architecture advocates a distributed knowledge ecosystem where knowledge is harvested, clustered and presented to the right location. In order to separate the area of concern and ease network control, the KCN architecture emphasises on knowledge locality. Local SDN agents can collect and process local knowlets before reporting them to a central controller. Moreover, they can enforce local decisions without the global network view in cases where the AD holds a more relaxed policy [5], [6]. The locality of knowledge is particularly important in mobile edge computing scenarios [7].\n2) Software Defined Networking Software Defined Networking (SDN) is a very promising networking paradigm that aims to decouple the control logic from the forwarding system by promoting a logically centralised entity, also known as the network controller or network operating system[4]. The separation between the control plane, the logic that enforces network policies and take forwarding decisions, and the data plane, the underlying switching infrastructure, introduces a flexible way of monitoring, managing and evolving a network. SDN essentially makes network architecture simpler and the control plane more adaptive to changes. The resulting network programmability can be leveraged by enhancing the information provided to the control layer. Hence, network data extraction and knowledge dissemination is hence essential in projecting the correct network state and closing the control loop. Moreover, changes in the infrastructure can be foreseen and accommodated in a proactive and organised manner. The most notable software network controllers are OpenDaylight [8] and the open network operating system (ONOS) [9].\n3) Big Data Analytics Data analytics describe the science that examines raw data and aims to draw conclusions about the information that the data are carrying. Many industries realised the potential value of massive raw datasets, which they tried to unlock by using data analytics to drive decision making, a process often described as evidence-based decision making. The proliferation of data sources increased the volume of raw data as well as the diversity of their characteristics. The above change is expressed by the term \u201cbig data\u201d, which became widespread in 2011 [3]. Big data are popularly described by the five \u2018Vs\u2019: (i) volume; referring to the size of data set, (ii) variety; because of data\u2019s heterogeneous nature, (iii) velocity; describing the high rate of data production, (iv) value; indicating data usefulness, and finally (v) veracity; relating to the quality of data [10]. The data processing comprises of two main tasks: firstly, data management, which is formed of acquisition followed by extraction, cleaning and annotation and finishing with aggregation and representation. Secondly, data analytics, which usually follows data management, consists of modelling and analysis as well as interpretation [3][11]. Machine learning (ML) is the main vehicle of data analytics for prediction and\noptimisation, and is divided into three main categories: supervised, unsupervised, and reinforcement learning [12]. Systems that receive a high volume of data and require responsive behaviour rely on streaming, real-time, continuous, on-line analytics because of space and latency constrains."}, {"heading": "B. Motivation & Problem Statement", "text": "In order to achieve high adaptivity in network control, a potential solution should address the following two requirements: i) accurate, punctual and reliable knowledge extraction and dissemination; and ii) knowledge driven network control. The next paragraphs elaborate on the key concepts of KCN and highlight the necessity of a platform to deliver the required knowledge to the control plane.\n1) Knowledge extraction & dissemination: Modern networks are considered complex systems with a high number of parameters and stakeholders. Network control and orchestration is tasked with taking actions on various parameters including bandwidth allocation, link utilisations, latency, jitter and energy consumption over a composition of heterogeneous networks types (i.e. optical, electrical, wireless). As the network state evolves with time, many parameters change, making the administration of fast changing systems, such as edge networks an extremely complex task. The more information we have from the network, the better the controller can adapt to any challenges presented. Moreover, the quantity and quality of information extracted is related to better representation of network\u2019s state and better prediction of the next state. The composability of the extracted information with other sources is also required in order to provide a clearer insight of the network. Therefore, the information should have commutative and associative properties, in space and time. As information from different sources is combined, the confidence interval of the resulting information decreases and stemming information matures to become knowledge. Well studied data mining and data analytics techniques can be used in the process of data filtering and aggregation as well as in the analysis and modelling of related information in order to derive network knowledge. Tools created for big data [13]-[16], can now facilitate the development of online algorithms for network analytics gaining in performance, scalability, manageability and debug-ability [17], [18]. We aspire Seer to meet this challenge in an open platform. Many messaging patterns have been proposed in the literature for service-oriented architecture including message type pattern, message channel pattern, message routing pattern etc. [19], [20]. The selection of a pattern depends on required characteristics like scalability, performance, availability, security etc.\n2) Knowledge driver control In order to optimise the resource allocation and avoid overprovisioning and violation of agreements, the control plane and cloud orchestrators can employ optimisation techniques based on multiple knowledge topics. Researchers have tried to tackle network related challenges by applying algorithmic approaches for P complexity class problems and heuristics for NPcomplete problems on information extracted from the network [21]. Most of the literature emphasises on utilising internal network and cloud knowledge in order to achieve optimum performance. The separation between the control and\nforwarding planes, offered by SDN, enabled more flexible means of controlling the network so the control plane can consolidate independent sources of knowledge, in a logical centralised point, to target optimal performance. External information provided from other stakeholders can be factored in the network control and cloud orchestration process for the mutual benefit of all players. A content delivery network provider that exposes the most popular contents and their location can help the network provider to optimise network utilisation and enable a gain in quality-of-service (QoS) at cheaper rates. The orchestration of X-as-a-Service (XaaS) components like cloud computing [22], cache [23] and load balancing [24], [25], etc., can be linked to knowledge providing services in order to make network management easier.\nIII. RELATED WORK The use of machine learning techniques to solve networking challenges has been extensively studied. The network optimisation aspects of the traditional network management, like traffic classification [26] and energy efficient resource management [27], as well as the dynamic resource management [28], have been thoroughly investigated. A traffic engineering framework with machine learning was also studied in SDN [29]. In addition, researchers have extensively used data mining techniques for security problems such as intrusion detection systems (IDS) [30]. The techniques used included supervised learning, (neural networks, decision trees, support vector machines, etc.), unsupervised learning (K-means clustering, principle component analysis etc.) and reinforcement learning (Markov decision processes etc.) [26], [27], [29]. Overall, the research community highlighted that a broad range of networking challenges can be met by employing a wide range of machine learning and data mining techniques.\nDespite the benefits offered by algorithmic development, the community has not adapted a common platform to deliver research innovation to the real world. Most algorithms face scalability issues after leaving simulation or laboratory environments. In the case of operational critical algorithms, fault tolerant design should provide the stability of a production-ready subsystem. Moreover, most of the development has assumed offline execution, or execution on a big batch of data. Furthermore, there is little reference on externally assisted decision making and knowledge exchange to target optimal solution. The use of big data tools and techniques can solve the above shortcoming by bringing the inherited scalability, high availability, distributed and online processing to SDN. Since the quality of a platform depends on the properties of its constituents, a proposed design should combine elements that satisfy all the above properties.\nIV. SEER Seer is a platform that employs concepts related to big data, for data mining and data analytics to transform, analyse and model the information that has been extracted from the network with a goal to create a deep understanding of the network state. The inferred knowledge of the network is combined with knowledge provided from a third party in order to predict or optimise different aspects of the system by driving the control plane of software defined networks, storage,\ncompute and orchestration. The platform is modular and is constructed by five main elements: i) data or information extraction, ii) data distribution, iii) data analytics, iv) knowledge dissemination, v) knowledge driven control. The basic components are also presented in Figure 1."}, {"heading": "A. Modules and Functionality", "text": "The data or information extraction is responsible for acquiring network resources control data. The extraction mechanism can optionally apply basic format transformation, filtering or aggregation, depending on capabilities, before sending data for analysis. The mechanism can be either an active network element, that acts as monitor and actuator, or a passive, monitoring only, component. Examples of active elements include traffic engineering devices like packet forwarding devices, optical wavelength switches, traffic inspectors, traffic filter, etc. On the other hand, passive elements include Wi-Fi sniffers, optical power monitors, computing resources monitors, etc.\nThe SDN controller can also act as information extraction mechanism. Furthermore, data can be gained by utilising protocols and tools to retrieve statistics including OpenFlow, sFlow, SNMP, NetFlow, tcpdump, etc. The extracted data or information are made available to the data distribution element.\nThe data distribution is responsible for carrying data or information from the point of extraction to the analytics, functioning as an interface between them. A different instance of the mechanism described here can also act as the knowledge dissemination element of the Seer platform. The data distribution can either retain information in a persistent manner, e.g. distributed database system, or in a more temporal way, e.g. distributed messaging system. The data distribution should be scalable, elastic, fault tolerant and able to deliver high volume of information with low latency in real time. Examples of distributed messaging systems include Apache Kafka [16], RabbitMQ, AMQP, ActiveMQ, ZeroMQ, etc. Distributed database systems can be NoSQL databases like key-value databases, Redis, Memcached, etc., column store databases like Apache Cassandra [31], Apache HBase, Amazon DynamoDB, etc., document databases as MongoDB, CouchDB, etc. or graph databases like Neo4j. The knowledge dissemination component can also be accompanied by a web\nservice in order to interface with other stake holders of the KCN system.\nThe data analytics tool is the core of the Seer platform and accommodates its main functionality. It performs data cleaning, annotation and representation as well as modelling, analysis and interpretation. This allows generation of the required knowledge for system prediction and resource optimisation. Input to analytics is also provided by other stakeholders with a form of knowledge. For the platform to achieve continuous delivery, the data analytics should meet the scalability challenges and maintain fault tolerant operation. Online processing should be either provided in a streaming or micro-batching manner, depending on the latency requirements. Exceptional examples of tools include Apache Spark [13], Apache Storm, Apache Flink, Heron [14] etc. The output is forwarded by the knowledge dissemination component to either the knowledge driven control of the same administrative domain, or to other domain\u2019s dissemination component.\nThe component of the platform that utilises the produced knowledge is the so-called knowledge driven control. The SDN controller consumes the knowledge in the logically centralised control plane in order to provide distributed control of the network resources. Computational orchestrators can also utilise the knowledge produced in order to rework storage and compute allocation. Proactive allocation of resources (flows, caches, compute nodes), can result in low latency and highly responsive systems. Overall, easier programmability results in faster adaptation of systems in order to meet the challenges of future systems. Examples of SDN controllers include OpenDaylight [8] and ONOS [9], as mentioned, whereas an example of cloud orchestrator is OpenStack [22]."}, {"heading": "B. Prototype", "text": "In order to examine the design of Seer, we developed our first prototype focusing on scalability and high availability. We based our implementation on existing open-source tools designed to address requirements of software defined networks and big data analytics. Since the platform inherits the qualities from the comprised components, the core elements had to be well proven, scalable and fault tolerant systems. Therefore, the information extraction element was facilitated by the ONOS controller. An ONOS application was developed in Java to capture events and gather statistics required by the analytics. The ONOS application was publishing the extracted information to Apache Kafka distributed messaging system, which played the role of the data distribution element. On the other end of Kafka, an application running on Apache Spark subscribed to relevant messaging topic and processed the arriving information in micro-batches of one second. Spark played the role of data analytics tool. The derived model was being stored by Spark into a distributed cluster of Apache Cassandra databases. A web micro-service, implemented in Scala and Play framework, was running alongside Cassandra in order to provide a RESTful API for the knowledge dissemination. The output of analytics was also accessible by the ONOS application in an asynchronous manner. The first prototype of Seer is illustrated in Figure 2, while Figure 3 presents the details of Spark configuration.\nThe key feature of Seer\u2019s first prototype is its modular architecture that facilitates scale-out performance and fault tolerance. All the systems that were used are able of scaling up in order to meet demand. As the data required for analytics grow in volume, the platform can scale up by adding additional instances per element. ONOS can form a cluster comprised of one or more ONOS instances, or nodes, sharing network state with each other. Kafka can be configured in order to form a multi-broker cluster, replicate data and distribute work load. Similarly, Spark forms a master-slave cluster which can scale horizontally and live. Finally, Cassandra can achieve linear scalability without compromising performance while replicating across many nodes. Since every module of Seer can provide functional replication and distribution, the overall platform can achieve high availability.\nV. EVALUATION To evaluate Seer, we aimed to address the requirements of a fog computing scenario in a smart city environment. We chose to implement a mobility management application that extracts handover information from the network and predicts citizens\u2019 movement. The understanding of mobility patterns in a city is valuable knowledge that can drive many edge network applications. The latter include content delivery services,\ndevice-to-device communications, autonomous vehicles, augmented reality application and many other that require low latency services, achieved by proactive resource allocation.\nFor the simulation of the mobility in a smart city, a Python application was created that, given the city\u2019s coordinates, acquires the largest employers of the city (universities, hospitals etc.), food shops, health related spots (gyms, sport clubs, etc.) and other recreational corners (pubs, restaurants, etc.) using Google Places API [32]. The simulation builds a 2D probability density function to represent highly commercial zones using kernel functions, as shown in Figure 4. It subsequently generates a range of unique citizens with random locations of personal interest (home, job, gym, club location) and simulates their movement throughout the week. When a citizen is passing close to a Wi-Fi access point (AP) of a given system (i.e. eduroam [33], Bristol, UK), emulated by Mininet [34], the simulation generates a connection between the user\u2019s device and the access point. Without loss of generality, we assume that every AP is connected to a different SDN enabled switch. The Wi-Fi system is controlled by an ONOS which hosts an application developed for Seer.\nThe application inside the ONOS controller subscribes to the host service and captures the handover events which occur when a citizen is switching cells. In order to ensure confidentiality, the ONOS application anonymises the information related to handover before any transmission. The anonymisation process involved the hashing of sensitive information and the frequent (every 24h) re-salting of the used hashes. Every event is published to Kafka following a certain format convention. For our mobility management application, the adopted format was (id, from, to, timestamp) which is a 4- tuple of string values. The id represents the anonymised MAC address of citizen\u2019s mobile device, from, and to, show the BSSIDs of the APs that the device disconnected from and connected to, respectively. In case the device joins or leaves the Wi-Fi system the fields from and to are assigned to predefined null value. The timestamp field features the time and day of the week that the handover event occurred. Using the KCN terminology, the event tuple represents a D1 knowlet.\nThe Spark streaming application subscribes to the Kafka topic, in which ONOS application publishes events, and retrieves the information as arrives. In order to filter out handovers with large gap between leaving and re-joining timestamps, the application sessionises (i.e. groups together) events that occur in less than tgap time gap between them. So tgap defines the time difference as threshold under which two events are considered part of the same group. For this experiment, tgap was frivolously configured to 300s, due to geographical expansion of the Wi-Fi system. After sessionising per device, the sequence of events is simplified by removing the intermediate events of trivial cases, e.g. devices leaving the Wi-Fi system and then re-joining. The list of sequences is further simplified by excluding sequences of events for devices joining and then leaving immediately without returning back in tgap. The id information is then removed from every session. Up to this point the format of all sequences is a list of 3-tuples containing (from, to, timestamp) for every event in the session.\nIn order to produce multiple order Markov chains, every session is transformed to N variations to represent a Markov Chain of order 1 to N, by creating the history of N-1 handovers before the last for every handover. For example, the order three variation of a session contains list of events with the following 5-tuple format: (ht-2, ht-1, from, to, timestamp). The ht-2 and ht-1 represent the BSSIDs of the APs that the device of the session visited before ht-1 and from, respectively. The Markov chains that represent the knowledge of mobility patterns of the city as realised by eduroam, described as D2 knowlet, are finally stored into Cassandra database.\nThe web server, which is attached to Cassandra, receives RESTful requests about the probability of movement from a specific AP, given M last handover. The server responds to these requests providing the requested knowledge to either external service (KaaS) or ONOS mobility application (KaaT). The prediction of user\u2019s movement can subsequently be used to\npre-allocate resources, i.e. flow, to switches where the user is predicted to connect next, with the aim to minimise the latency experienced during horizontal handover.\nThe mobility knowledge is provided in N variations, equal to the number of order chain calculated. The service that is requesting the mobility knowledge can choose one of the N variations depending on its capabilities and the targeted precision of prediction. Figure 5 shows that the transition from AP 4 to AP 1 is predicted with higher probability in the second and third order. Nevertheless, the increase in precision is not guaranteed.\nVI. CONCLUSION AND FUTURE WORK In this paper we presented Seer, a flexible, highly configurable platform for network intelligence based on SDN, KCN and Big Data principles. Furthermore, we displayed the goal of Seer to accommodate the development of future algorithms and application that target network analytics. By focusing on reliability, the platform aspires to provide scalable, fault tolerant and real-time platform, of production quality. Moreover, Seer intends to leverage the knowledge exchange following the KCN paradigm.\nAs part of our future work, we plan to evaluate Seer in a Smart City environment and test the mobility application as part of a service chain (see Figure 6). We also plan to extend our first prototype with real-time streaming engines like Apache Storm, Apache Flink or Heron and identify strengths and weaknesses when used in Seer. We hope to reinforce the security characteristics of Seer in order to achieve confidentiality and integrity of sensitive information. Finally, our aim is to provide a holistic solution that will deploy and scale up every module of Seer when required."}, {"heading": "ACKNOWLEDGEMENT", "text": "Kyriakos Sideris would like to thank the following researchers for reviewing this work: Sam Gunner, Paul Anthony Haigh, Yanni Ou, Antonis Papaioannou."}], "references": [{"title": "Cisco Visual Networking Index: Forecast and Methodology, 2015-2020", "author": ["Cisco"], "venue": "2016.", "citeRegEx": "1", "shortCiteRegEx": null, "year": 2016}, {"title": "SDxCentral SDN and NFV Market Size Report", "author": ["SDxCentral"], "venue": "2015.", "citeRegEx": "2", "shortCiteRegEx": null, "year": 2015}, {"title": "Beyond the hype: Big data concepts, methods, and analytics", "author": ["A. Gandomi", "M. Haider"], "venue": "Int. J. Inf. Manage., vol. 35, no. 2, pp. 137\u2013144, 2014.", "citeRegEx": "3", "shortCiteRegEx": null, "year": 2014}, {"title": "Software-Defined Networking: A Comprehensive Survey", "author": ["D. Kreutz", "F. Ramos"], "venue": "arXiv Prepr. arXiv ..., p. 49, 2014.", "citeRegEx": "4", "shortCiteRegEx": null, "year": 2014}, {"title": "On the placement of management and control functionality in software defined networks", "author": ["D. Tuncer", "M. Charalambides", "S. Clayman", "G. Pavlou"], "venue": "2015 11th International Conference on Network and Service Management (CNSM), 2015, vol. 12, no. 1, pp. 360\u2013365.", "citeRegEx": "5", "shortCiteRegEx": null, "year": 2015}, {"title": "Scalable Cache Management for ISP-operated Content Delivery Services", "author": ["D. Tuncer", "V. Sourlas", "M. Charalambides", "M. Claeys", "J. Famaey", "G. Pavlou", "F. de Turck"], "venue": "to appear in the IEEE Journal on Selected Areas in Communications (JSAC), special issue on Video Distribution over Future Internet, IEEE, second quarter 2016.", "citeRegEx": "6", "shortCiteRegEx": null, "year": 2016}, {"title": "Caching on the Move : Towards D2D-based Information Centric Networking for Mobile Content Distribution", "author": ["G. Chandrasekaran", "N. Wang", "R. Tafazolli"], "venue": "IEEE Conf. Local Comput. Networks, pp. 521\u2013529, 2015.", "citeRegEx": "7", "shortCiteRegEx": null, "year": 2015}, {"title": "OpenDaylight: Towards a model-driven SDN controller architecture", "author": ["J. Medved", "R. Varga", "A. Tkacik", "K. Gray"], "venue": "Proceeding IEEE Int. Symp. a World Wireless, Mob. Multimed. Networks 2014, WoWMoM 2014, 2014.", "citeRegEx": "8", "shortCiteRegEx": null, "year": 2014}, {"title": "ONOS: Towards an Open, Distributed SDN OS", "author": ["P. Berde", "M. Gerola", "J. Hart", "Y. Higuchi", "M. Kobayashi", "T. Koide", "B. Lantz", "W. Snow", "G. Parulkar", "B. O\u2019Connor", "P. Radoslavov"], "venue": "Proc. third Work. Hot Top. Softw. Defin. Netw. - HotSDN \u201914, pp. 1\u20136, 2014.", "citeRegEx": "9", "shortCiteRegEx": null, "year": 2014}, {"title": "Big Data: Promises and Problems", "author": ["V.N. Gudivada", "R. Baeza-Yates", "V.V. Raghavan"], "venue": "Computer (Long. Beach. Calif)., vol. 48, no. 3, pp. 20\u201323, Mar. 2015.", "citeRegEx": "10", "shortCiteRegEx": null, "year": 2015}, {"title": "Challenges and opportunities with big data", "author": ["A. Labrinidis", "H. Jagadish"], "venue": "Proc. VLDB Endow., pp. 2032\u20132033, 2012.", "citeRegEx": "11", "shortCiteRegEx": null, "year": 2012}, {"title": "Towards real-time analytics in the cloud", "author": ["A. Osman", "M. El-Refaey", "A. Elnaggar"], "venue": "Proc. - 2013 IEEE 9th World Congr. Serv. Serv. 2013, pp.  428\u2013435, 2013.", "citeRegEx": "12", "shortCiteRegEx": null, "year": 2013}, {"title": "Spark : Cluster Computing with Working Sets", "author": ["M. Zaharia", "M. Chowdhury", "M.J. Franklin", "S. Shenker", "I. Stoica"], "venue": "HotCloud\u201910 Proc. 2nd USENIX Conf. Hot Top. cloud Comput., p. 10, 2010.", "citeRegEx": "13", "shortCiteRegEx": null, "year": 2010}, {"title": "Twitter Heron", "author": ["S. Kulkarni", "N. Bhagat", "M. Fu", "V. Kedigehalli", "C. Kellogg", "S. Mittal", "J.M. Patel", "K. Ramasamy", "S. Taneja"], "venue": "Proceedings of the 2015 ACM SIGMOD International Conference on Management of Data - SIGMOD \u201915, 2015, pp. 239\u2013250.", "citeRegEx": "14", "shortCiteRegEx": null, "year": 2015}, {"title": "TensorFlow: Large-Scale Machine Learning on Heterogeneous Distributed Systems", "author": ["M. Abadi", "A. Agarwal", "P. Barham", "E. Brevdo", "Z. Chen", "C. Citro", "G. Corrado", "A. Davis", "J. Dean", "M. Devin", "S. Ghemawat", "I. Goodfellow", "A. Harp", "G. Irving", "M. Isard", "Y. Jia", "L. Kaiser", "M. Kudlur", "J. Levenberg", "D. Man", "R. Monga", "S. Moore", "D. Murray", "J. Shlens", "B. Steiner", "I. Sutskever", "P. Tucker", "V. Vanhoucke", "V. Vasudevan", "O. Vinyals", "P. Warden", "M. Wicke", "Y. Yu", "X. Zheng"], "venue": "None, p. 19, 2015.", "citeRegEx": "15", "shortCiteRegEx": null, "year": 2015}, {"title": "Kafka : a Distributed Messaging System for Log Processing", "author": ["J. Kreps", "L. Corp"], "venue": "ACM SIGMOD Work. Netw. Meets Databases, p. 6, 2011.", "citeRegEx": "16", "shortCiteRegEx": null, "year": 2011}, {"title": "A-CORD ( Analytics CORD )", "author": ["S. Vavilapalli"], "venue": "2016. [Online]. Available: opencord.org/wp-content/uploads/2016/04/ACORD- ONS2016.pdf. [Accessed: 08-Jun-2016].", "citeRegEx": "17", "shortCiteRegEx": null, "year": 2016}, {"title": "Big Data Analytics in Support of Virtual Network Topology Adaptability", "author": ["L. Gifre", "L.M. Contreras", "V. L\u00f3pez", "L. Velasco"], "venue": "vol. 2, pp. 2014\u2013 2016, 2016.", "citeRegEx": "18", "shortCiteRegEx": null, "year": 2014}, {"title": "Domain based analysis of messaging patterns in service-oriented architecture", "author": ["A. Shahnaz", "T. Nafees", "F. Azam"], "venue": "2012 5th International Conference on BioMedical Engineering and Informatics, 2012, no. BMEI, pp. 1341\u20131345.", "citeRegEx": "19", "shortCiteRegEx": null, "year": 2012}, {"title": "Messaging Patterns in Service-Oriented Architecture, Part 1", "author": ["S. Chatterjee"], "venue": "2004. [Online]. Available: https://msdn.microsoft.com/enus/library/aa480027.aspx. [Accessed: 20-Mar-2016].", "citeRegEx": "20", "shortCiteRegEx": null, "year": 2004}, {"title": "Internet traffic engineering by optimizing OSPF weights", "author": ["B. Fortz", "M. Thorup"], "venue": "Ieee Infocom, vol. 2, pp. 519\u2013528, 2000.", "citeRegEx": "21", "shortCiteRegEx": null, "year": 2000}, {"title": "Cache as a service: Leveraging SDN to efficiently and transparently support videoon-demand on the last mile", "author": ["P. Georgopoulos", "M. Broadbent", "B. Plattner", "N. Race"], "venue": "2014 23rd International Conference on Computer Communication and Networks (ICCCN), 2014, pp. 1\u20139.", "citeRegEx": "23", "shortCiteRegEx": null, "year": 2014}, {"title": "Multiple service load-balancing with OpenFlow", "author": ["M. Koerner", "O. Kao"], "venue": "2012 IEEE 13th Int. Conf. High Perform. Switch. Routing, HPSR 2012, pp. 210\u2013214, 2012.", "citeRegEx": "24", "shortCiteRegEx": null, "year": 2012}, {"title": "Load balancer as a service in cloud computing", "author": ["M. Rahman", "S. Iqbal", "J. Gao"], "venue": "Proc. - IEEE 8th Int. Symp. Serv. Oriented Syst. Eng. SOSE 2014, pp. 204\u2013211, 2014.", "citeRegEx": "25", "shortCiteRegEx": null, "year": 2014}, {"title": "A survey of techniques for internet traffic classification using machine learning", "author": ["T. Nguyen", "G. Armitage"], "venue": "IEEE Commun. Surv. Tutorials, vol. 10, no. 4, pp. 56\u201376, 2008.", "citeRegEx": "26", "shortCiteRegEx": null, "year": 2008}, {"title": "A Survey of Machine Learning Applications for Energy- Efficient Resource Management in Cloud Computing Environments", "author": ["M. Demirci"], "venue": "2015 IEEE 14th Int. Conf. Mach. Learn. Appl., pp. 1185\u20131190, 2015.", "citeRegEx": "27", "shortCiteRegEx": null, "year": 2015}, {"title": "A Survey of Resource Management in Multi-Tier Web Applications", "author": ["D. Huang", "B. He", "C. Miao"], "venue": "IEEE Commun. Surv. Tutorials, vol. 16, no. 3, pp. 1574\u20131590, Jan. 2014.", "citeRegEx": "28", "shortCiteRegEx": null, "year": 2014}, {"title": "Traffic engineering framework with machine learning based meta-layer in software-defined networks", "author": ["L. Yanjun", "L. Xiaobo", "Y. Osamu"], "venue": "2014 4th IEEE International Conference on Network Infrastructure and Digital Content, 2014, pp. 121\u2013125.", "citeRegEx": "29", "shortCiteRegEx": null, "year": 2014}, {"title": "A Data Mining Framework for  Building Intrusion Detection Models", "author": ["W. Lee", "S.J. Stolfo", "K.W. Mok"], "venue": "Proc. 1999 IEEE Symp. Secur. Priv., pp. 120\u2013132, 1999.", "citeRegEx": "30", "shortCiteRegEx": null, "year": 1999}, {"title": "Cassandra: a decentralized structured storage system", "author": ["Laksham Avinash", "Prashant Malik", "A. Lakshman", "P. Malik"], "venue": "ACM SIGOPS Oper. Syst. Rev., vol. 44, no. 2, p. 35, 2010.", "citeRegEx": "31", "shortCiteRegEx": null, "year": 2010}, {"title": "A network in a laptop", "author": ["B. Lantz", "B. Heller", "N. McKeown"], "venue": "Proceedings of the Ninth ACM SIGCOMM Workshop on Hot Topics in Networks - Hotnets \u201910, 2010, pp. 1\u20136.", "citeRegEx": "34", "shortCiteRegEx": null, "year": 2010}], "referenceMentions": [{"referenceID": 0, "context": "The number of devices connected to IP networks will continue to increase up to three times the global population in 2020, while the global Internet traffic will be equivalent to 95 times the volume of the entire global Internet in 2005 [1].", "startOffset": 236, "endOffset": 239}, {"referenceID": 1, "context": "The importance of network analytics increases as SDN is further established in the networking market [2].", "startOffset": 101, "endOffset": 104}, {"referenceID": 2, "context": "Our platform provides the benefits of big data architectures on network data management and data analytics [3] to the SDN network paradigm in order to leverage network programmability, ease of management, optimisation of network resources and eminent failure recovery [4].", "startOffset": 107, "endOffset": 110}, {"referenceID": 3, "context": "Our platform provides the benefits of big data architectures on network data management and data analytics [3] to the SDN network paradigm in order to leverage network programmability, ease of management, optimisation of network resources and eminent failure recovery [4].", "startOffset": 268, "endOffset": 271}, {"referenceID": 4, "context": "Moreover, they can enforce local decisions without the global network view in cases where the AD holds a more relaxed policy [5], [6].", "startOffset": 125, "endOffset": 128}, {"referenceID": 5, "context": "Moreover, they can enforce local decisions without the global network view in cases where the AD holds a more relaxed policy [5], [6].", "startOffset": 130, "endOffset": 133}, {"referenceID": 6, "context": "The locality of knowledge is particularly important in mobile edge computing scenarios [7].", "startOffset": 87, "endOffset": 90}, {"referenceID": 3, "context": "2) Software Defined Networking Software Defined Networking (SDN) is a very promising networking paradigm that aims to decouple the control logic from the forwarding system by promoting a logically centralised entity, also known as the network controller or network operating system[4].", "startOffset": 281, "endOffset": 284}, {"referenceID": 7, "context": "The most notable software network controllers are OpenDaylight [8] and the open network operating system (ONOS) [9].", "startOffset": 63, "endOffset": 66}, {"referenceID": 8, "context": "The most notable software network controllers are OpenDaylight [8] and the open network operating system (ONOS) [9].", "startOffset": 112, "endOffset": 115}, {"referenceID": 2, "context": "The above change is expressed by the term \u201cbig data\u201d, which became widespread in 2011 [3].", "startOffset": 86, "endOffset": 89}, {"referenceID": 9, "context": "Big data are popularly described by the five \u2018Vs\u2019: (i) volume; referring to the size of data set, (ii) variety; because of data\u2019s heterogeneous nature, (iii) velocity; describing the high rate of data production, (iv) value; indicating data usefulness, and finally (v) veracity; relating to the quality of data [10].", "startOffset": 311, "endOffset": 315}, {"referenceID": 2, "context": "Secondly, data analytics, which usually follows data management, consists of modelling and analysis as well as interpretation [3][11].", "startOffset": 126, "endOffset": 129}, {"referenceID": 10, "context": "Secondly, data analytics, which usually follows data management, consists of modelling and analysis as well as interpretation [3][11].", "startOffset": 129, "endOffset": 133}, {"referenceID": 11, "context": "optimisation, and is divided into three main categories: supervised, unsupervised, and reinforcement learning [12].", "startOffset": 110, "endOffset": 114}, {"referenceID": 12, "context": "Tools created for big data [13]-[16], can now facilitate the development of online algorithms for network analytics gaining in performance, scalability, manageability and debug-ability [17], [18].", "startOffset": 27, "endOffset": 31}, {"referenceID": 15, "context": "Tools created for big data [13]-[16], can now facilitate the development of online algorithms for network analytics gaining in performance, scalability, manageability and debug-ability [17], [18].", "startOffset": 32, "endOffset": 36}, {"referenceID": 16, "context": "Tools created for big data [13]-[16], can now facilitate the development of online algorithms for network analytics gaining in performance, scalability, manageability and debug-ability [17], [18].", "startOffset": 185, "endOffset": 189}, {"referenceID": 17, "context": "Tools created for big data [13]-[16], can now facilitate the development of online algorithms for network analytics gaining in performance, scalability, manageability and debug-ability [17], [18].", "startOffset": 191, "endOffset": 195}, {"referenceID": 18, "context": "[19], [20].", "startOffset": 0, "endOffset": 4}, {"referenceID": 19, "context": "[19], [20].", "startOffset": 6, "endOffset": 10}, {"referenceID": 20, "context": "Researchers have tried to tackle network related challenges by applying algorithmic approaches for P complexity class problems and heuristics for NPcomplete problems on information extracted from the network [21].", "startOffset": 208, "endOffset": 212}, {"referenceID": 21, "context": "The orchestration of X-as-a-Service (XaaS) components like cloud computing [22], cache [23] and load balancing [24], [25], etc.", "startOffset": 87, "endOffset": 91}, {"referenceID": 22, "context": "The orchestration of X-as-a-Service (XaaS) components like cloud computing [22], cache [23] and load balancing [24], [25], etc.", "startOffset": 111, "endOffset": 115}, {"referenceID": 23, "context": "The orchestration of X-as-a-Service (XaaS) components like cloud computing [22], cache [23] and load balancing [24], [25], etc.", "startOffset": 117, "endOffset": 121}, {"referenceID": 24, "context": "The network optimisation aspects of the traditional network management, like traffic classification [26] and energy efficient resource management [27], as well as the dynamic resource management [28], have been thoroughly investigated.", "startOffset": 100, "endOffset": 104}, {"referenceID": 25, "context": "The network optimisation aspects of the traditional network management, like traffic classification [26] and energy efficient resource management [27], as well as the dynamic resource management [28], have been thoroughly investigated.", "startOffset": 146, "endOffset": 150}, {"referenceID": 26, "context": "The network optimisation aspects of the traditional network management, like traffic classification [26] and energy efficient resource management [27], as well as the dynamic resource management [28], have been thoroughly investigated.", "startOffset": 195, "endOffset": 199}, {"referenceID": 27, "context": "A traffic engineering framework with machine learning was also studied in SDN [29].", "startOffset": 78, "endOffset": 82}, {"referenceID": 28, "context": "In addition, researchers have extensively used data mining techniques for security problems such as intrusion detection systems (IDS) [30].", "startOffset": 134, "endOffset": 138}, {"referenceID": 24, "context": ") [26], [27], [29].", "startOffset": 2, "endOffset": 6}, {"referenceID": 25, "context": ") [26], [27], [29].", "startOffset": 8, "endOffset": 12}, {"referenceID": 27, "context": ") [26], [27], [29].", "startOffset": 14, "endOffset": 18}, {"referenceID": 15, "context": "Examples of distributed messaging systems include Apache Kafka [16], RabbitMQ, AMQP, ActiveMQ, ZeroMQ, etc.", "startOffset": 63, "endOffset": 67}, {"referenceID": 29, "context": ", column store databases like Apache Cassandra [31], Apache HBase, Amazon DynamoDB, etc.", "startOffset": 47, "endOffset": 51}, {"referenceID": 12, "context": "Exceptional examples of tools include Apache Spark [13], Apache Storm, Apache Flink, Heron [14] etc.", "startOffset": 51, "endOffset": 55}, {"referenceID": 13, "context": "Exceptional examples of tools include Apache Spark [13], Apache Storm, Apache Flink, Heron [14] etc.", "startOffset": 91, "endOffset": 95}, {"referenceID": 7, "context": "Examples of SDN controllers include OpenDaylight [8] and ONOS [9], as mentioned, whereas an example of cloud orchestrator is OpenStack [22].", "startOffset": 49, "endOffset": 52}, {"referenceID": 8, "context": "Examples of SDN controllers include OpenDaylight [8] and ONOS [9], as mentioned, whereas an example of cloud orchestrator is OpenStack [22].", "startOffset": 62, "endOffset": 65}, {"referenceID": 30, "context": "eduroam [33], Bristol, UK), emulated by Mininet [34], the simulation generates a connection between the user\u2019s device and the access point.", "startOffset": 48, "endOffset": 52}], "year": 2016, "abstractText": "Network complexity is increasing, making network control and orchestration a challenging task. The proliferation of network information and tools for data analytics can provide an important insight into resource provisioning and optimisation. The network knowledge incorporated in software defined networking can facilitate the knowledge driven control, leveraging the network programmability. We present Seer: a flexible, highly configurable data analytics platform for network intelligence based on software defined networking and big data principles. Seer combines a computational engine with a distributed messaging system to provide a scalable, fault tolerant and real-time platform for knowledge extraction. Our first prototype uses Apache Spark for streaming analytics and open network operating system (ONOS) controller to program a network in real-time. The first application we developed aims to predict the mobility pattern of mobile devices inside a smart city environment. Keywords\u2013Big data, data analytics, data mining, knowledge centric networking (KCN), software defined networking (SDN), Seer", "creator": "Word"}}}