{"id": "1610.05402", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "18-Oct-2016", "title": "VRPBench: A Vehicle Routing Benchmark Tool", "abstract": "The number of optimization techniques in the combinatorial domain is large and diversified. Nevertheless, there is still a lack of real benchmarks to validate optimization algorithms. In this work we introduce VRPBench, a tool to create instances and visualize solutions to the Vehicle Routing Problem (VRP) in a planar graph embedded in the Euclidean 2D space. We use VRPBench to model a real-world mail delivery case of the city of Artur Nogueira. Such scenarios were characterized as a multi-objective optimization of the VRP. We extracted a weighted graph from a digital map of the city to create a challenging benchmark for the VRP. Each instance models one generic day of mail delivery with hundreds to thousands of delivery points, thus allowing both the comparison and validation of optimization algorithms for routing problems. We demonstrate a linear fit of the results of the implementation of VRPBench as the most realistic way to train and assess the performance of the virtual delivery case.\n\n\n\n\n\n\nIn this paper we show how VRPBench's design and algorithms are optimized to support VRPBench. We use VRPBench to create a robust and robust test case for a given case, to measure performance of the virtual delivery case. To provide a strong demonstration of a single point (for example the AV), we generate a single point based on the AV (the AV) as shown in figure 1.\n\nWe present the first simulation for the test case for an AV, which can be used as a model, to assess performance of the virtual delivery case. The test case can be built from a model that takes a single point, or two (depending on the distance from the AV to the point), and for one point a real-world case. The test case can be used as a model for a model that is a virtual delivery case, and for two points a real-world case. The test case can be built from a model that takes a single point, or two (depending on the distance from the AV to the point), and for one point a real-world case. The test case can be built from a model that takes a single point, or two (depending on the distance from the AV to the point), and for one point a real-world case. The test case can be built from a model that takes a single point, or two (depending on the distance from the AV to the point), and for one point a real-world case. The test case can be built from", "histories": [["v1", "Tue, 18 Oct 2016 02:01:16 GMT  (1590kb,D)", "http://arxiv.org/abs/1610.05402v1", null]], "reviews": [], "SUBJECTS": "cs.AI", "authors": ["guilherme a zeni", "mauro menzori", "p s martins", "luis a a meira"], "accepted": false, "id": "1610.05402"}, "pdf": {"name": "1610.05402.pdf", "metadata": {"source": "CRF", "title": "VRPBench: A Vehicle Routing Benchmark Tool", "authors": ["Guilherme A. Zeni", "Mauro Menzori", "P. S. Martins", "Luis A. A. Meira", "David S. Johnson"], "emails": [], "sections": [{"heading": null, "text": "The number of optimization techniques in the combinatorial domain is large and diversified. Nevertheless, there is still a lack of real benchmarks to validate optimization algorithms. In this work we introduce VRPBench, a tool to create instances and visualize solutions to the Vehicle Routing Problem (VRP) in a planar graph embedded in the Euclidean 2D space. We use VRPBench to model a real-world mail delivery case of the city of Artur Nogueira. Such scenarios were characterized as a multi-objective optimization of the VRP. We extracted a weighted graph from a digital map of the city to create a challenging benchmark for the VRP. Each instance models one generic day of mail delivery with hundreds to thousands of delivery points, thus allowing both the comparison and validation of optimization algorithms for routing problems.\nKeywords: Benchmark, VRP, Graphs and Combinatorial Optimisa-\ntion, Free Software Tool.\n1School of Technology, University of Campinas, Limeira \u2013 SP \u2013 Brazil\nar X\niv :1\n61 0.\n05 40\n2v 1\n[ cs\n.A I]\n1 8"}, {"heading": "1 Introduction", "text": "Benchmarks are found in various fields of science, such as geology [13], economy [25], climatology [36], among other areas. Specifically in computer science, benchmarks play a central role, e.g. in image processing [15, 29, 22], hardware performance [7] and optimization [32, 28, 5].\nIn the context of optimization, David S. Johnson [24] divided algorithm analysis in three approaches: the worst-case, the average-case, and the experimental analysis. Relative to experimental papers, he identifies four situations: (i) to solve a real problem; (ii) to provide evidence that an algorithm is superior than the others; (iii) to better understand a problem; and (iv) to study the average-case. He suggests the use of well-established benchmarks to provide evidence of the superiority of an algorithm (item ii). Such papers are called horse race papers.\nJohnson highlights that reproducibility and comparability are essential aspects present in any experimental paper. He also advocates the use of instances that lead to general conclusions. The author mentions the difficulty in justifying experiments on problems with no direct application. Such problems have no real instances and the researcher is forced to generate the data in a vacuum. Johnson cautions against a pitfall: the researcher starts by using randomly-generated instances to evaluate the algorithms and ends up using the algorithm to explore the properties of the randomly-generated instances. According to him, another pitfall is spending time processing useless experiments that attempt to answer the wrong questions.\nOur work deals with a variant of the Vehicle Routing Problem (VRP) based on a real mail delivery case of the city of Artur Nogueira (see the contributions at the end of this section). One of the first references to the VRP dates back to 1959 [14] under the name Truck Dispaching Problem, a generalization of the Traveler Salesman Problem (TSP).\nThe term VRP was first seen in the paper by Christophides [9], in 1976.\nChristophides defines VRP as a generic name, given to a class of problems that involves the visit of \u201ccustomers\u201d using vehicles.\nReal world aspects may impose variants of the problem. For example, the Capacitaded-VRP (CVRP) [18] considers a limit to the vehicle capacity, the VRP with Time Windows (VRPTW) [26] accounts for delivery time windows, and the Multi-Depot VRP (MDVRP) [34] extends the number of depots. Other variants may be easily found in the literature.\nIn 1991, Reinelt [32] created a benchmark for the TSP, known as TSPLib. In his work, he consolidated non-solved instances from twenty distinct papers. His repository (TSPLIB95) [33] has instances of both the symmetric and the asymmetric traveling salesman problem (TSP/aTSP) as well as three related problems: (i) CVRP; (ii) Sequential Ordered Problem (SOP); and (iii) Hamiltonian Cycle Problem (HCP).\nThe number of instances is 113, 19, 16, 41, 9 for TSP, aTSP, CVRP, SOP, and HCP, respectively. The number of vertices varies from 14 to 85900 for the TSP, 17 to 443 for the aTSP, 7 to 262 for the CVRP, 7 to 378 for the SOP, and from 1000 to 5000 for the HCP.\nThe optimum of all TSPLib instances was finally achieved in 2007, after sixteen years of notable progress in the development of algorithms. The optimum of the d15112 instance was found in 2001 [2]. This instance contains 15112 German cities and required 22.6 years of processing split across 110 500MHz processors [12]. The instance pla33810 was solved [2] in March 2004. The pla33810 instance represents a printed circuit board with 33810 nodes and it was solved in 15.7 years of processing [16]. The last instance of the TSPLib, called pla85900, was solved in 2006 [2]. This instance contains 85900 nodes representing a VLSI application.\nSolomon [35] created a benchmark for the VRPTW in 1987. It is composed by 56 instances partitioned in 6 sets. The number of customers is 100 in all instances. The vehicle has a fixed capacity and the customers\nhave demand or weight. The number of vehicles is not fixed, but it derives the fact that there is a limit of capacity. In this view, the problem can be considered multi-objective. It aims to minimize the route and the number of vehicles.\nThe first optimum solution was published in 1999 [27]. In 2005, Chabrier [6] managed to solve 17 of the instances that still had remained unsolved in the benchmark. In 2010, Amini et. al [1] obtained solutions very close to optimum, considering the first 25 customers only. In july 2015, after 28 years of the benchmark launching, Jawarneh and Abdullah [23] published in PlosONE a Bee Colony Optimization metaheuristic. Such algorithm reached 11 new best results in Solomon\u2019s 56 VRPTW 100 customer instances. It is really surprising that such small instances have an internal structure so complex to be optimized. In Figure 1, there is a simple instance of Solomon\u2019s composed by 100 customers and its solution considering 3 ve-\nhicles.Table 1\nRC207 NO. XCOORD. YCOORD. DEMAND READY TIME DUE DATE SERVICE TIME VEHICLE 0 40 50 0 0 240 0 NUMBER CAPACITY 85 20 49 191 10\n25 1000 75 30 30 168 10 3 22 85 10 95 152 10\nCUSTOMER 4 20 80 40 69 193 10 CUST NO. XCOORD. YCOORD. DEMAND READY TIME DUE DATE SERVICE TIME\n0 40 50 0 0 960 0 65 35 40 16 11 570 10 83 37 31 14 19 326 10 64 45 30 17 20 497 10 95 56 37 6 20 299 10 67 64 42 9 112 543 10 31 88 35 20 102 347 10 29 90 35 10 131 376 10 28 92 30 10 68 349 10 30 88 30 10 114 497 10 33 85 25 10 51 673 10 63 65 20 6 39 353 10 76 60 12 31 162 493 10 51 55 20 19 281 490 10 19 42 10 40 205 422 10 21 40 5 10 158 391 10 18 44 5 20 338 451 10 23 38 5 30 45 522 10 75 5 5 16 183 400 10 59 10 20 19 42 466 10 87 12 24 13 365 472 10 74 20 20 8 427 913 10 86 21 24 28 332 485 10 57 30 25 23 347 566 10 22 40 15 40 263 606 10 20 42 15 10 511 682 10 49 42 12 10 423 576 10 25 35 5 20 348 904 10 77 23 3 7 360 900 10 58 15 10 20 380 902 10 97 4 18 35 546 667 10 13 5 35 10 359 911 10 10 10 40 30 470 687 10 17 0 45 20 359 909 10 60 15 60 17 613 894 10 55 30 60 16 421 896 10 100 31 67 3 262 930 10 70 35 69 23 211 930 10 68 40 60 21 441 902 10\n0 40 50 0 0 960 0 82 27 43 9 85 338 10 99 26 35 15 170 565 10 52 25 30 3 109 360 10 9 10 35 20 236 625 10 11 8 40 40 33 510 10 15 2 40 20 39 538 10 16 0 40 20 214 415 10 47 2 45 10 38 366 10 14 5 45 10 35 457 10 12 8 45 20 166 399 10 53 20 50 5 284 585 10 78 8 56 27 195 654 10 73 2 60 5 255 436 10 79 6 68 30 258 565 10 7 15 75 20 281 438 10 6 18 75 20 60 159 10 8 15 80 10 272 581 10 46 18 80 10 435 662 10 4 20 80 40 418 913 10 45 20 82 10 37 677 10 3 22 85 10 473 588 10 1 25 85 20 591 874 10 43 55 85 20 549 718 10 36 65 85 40 43 712 10 35 67 85 20 396 905 10 37 65 82 10 530 703 10 54 55 60 16 568 753 10 0 40 50 0 0 960 0 69 31 52 27 9 532 10 98 26 52 9 109 354 10 88 24 58 19 100 539 10 2 22 75 30 73 350 10 5 20 85 20 40 390 10 42 55 80 10 33 624 10 44 55 82 10 62 491 10 40 60 85 30 233 544 10 38 62 80 30 131 544 10 39 60 80 10 36 800 10 41 58 75 20 207 664 10 72 63 65 8 27 382 10 71 65 55 14 201 400 10 93 61 52 3 298 928 10 81 49 58 10 369 460 10 61 45 65 9 230 405 10 90 37 47 6 324 513 10 56 50 35 19 404 829 10 84 57 29 18 304 605 10 85 63 23 2 318 489 10 94 57 48 23 385 518 10 96 55 54 26 538 705 10 92 53 43 14 14 669 10 62 65 35 3 29 587 10 50 72 35 30 471 662 10 34 85 35 30 462 631 10 27 95 35 20 57 664 10 26 95 30 30 509 668 10 32 87 30 10 564 797 10 89 67 5 25 565 897 10 48 42 5 10 636 904 10 24 38 15 10 598 883 10 66 41 37 16 423 828 10 91 49 42 13 651 906 10 80 47 47 13 426 942 10 0 40 50 0 0 960 0\n0\n22.5\n45\n67.5\n90\n0 25 50 75 100\nFigure 1: The Solomon\u2019s RC207 instance composed by 100 customers and 1 depot. Bent and Hentenryck proposed the solution containing 3 routes, in 2001 [4]. The picture does not show the capacity and the time windows constraints.\nDespite of their complexity, the TSPLib and the Solomon benchmarks\n4\nhave a number of customers between 100 and 262 for the VRP, which is a small value nowadays. Gehring and Homberger [19] extended the instances of Solomon, creating a benchmark with a numbers of customers varying from 100 to 1000 for the VRPTW.\nFor the CVRP, there is a set of instances largely used, named as ABEFMP, in which Augerat [3] proposed the classes A, B, P in 1995 and [10, 17, 8] proposed the classes E, F, M in 1969, 1994 and 1979, respectively. In this benchmark, the number of customers varies from 13 to 200 and the number of vehicles varies from 2 to 17.\nA series of different works, such as [18, 11] among others, obtained the optimum in different ABEFMP instances. [31] found in 2014 the optimum solution for the last instance unsolved, named M-n151-k12, 35 years after its presentation by Christofides [8]. Despite that, most of those instances are very simple to solve nowadays.\nGolden et al. [20] proposed new instances for the CVRP, in 1998. It is a set of 20 instances, with the number of customers varying from 240 to 483. Such a benchmark remains entertaining, because most of its instances has not an optimum established yet [38]. In 2005, Li, Golden and Wasil [30] created a set of instances with the number of customers between 560 and 1200. Up to this moment, there is no optimum defined for any of the instances [38].\nIn 2014, Uchoa et. al. created a library, the CVRPLib [38]. In this library, they consolidated the CVRP instances of the works [3, 10, 8, 17, 20, 30]. Besides, Uchoa et. al [37] generated new instances with the number of customers between 100 and 1000. In this work, they point the lack of well established challenging benchmarks for the VRP.\nUchoa et. al. also point the fact that benchmarks are created artificially. Solomon and Uchoa et. al. generated their own instances using random points. In the benchmark ABEFMP, there is some random instances generated and other instances that represent real problems. However, in all\ninstances the customers are points in the Euclidean space. The instances of Golden et al. [20] and Li, Golden and Wasil [30] are artificial as well.\nContribution: In this work, we propose the VRPBench tool, a vehicle\nrouting problem benchmark tool for the mail delivery Problem. We propose instances for the VRP involving a real situation: the delivery of correspondence by the postmen in the Artur Nogueira road network. Artur Nogueira is a brazilian city, located at 22\u25e634\u203222\u201dS47\u25e610\u203222\u201dW . Every day, the post office gets a large number (thousands) of letters to be delivered. The letters are distributed to a set of 20-25 postmen. The postmen walk around the city, delivering the mail.\nThe problem described above is modeled as VRP. Each postman is a vehicle and each delivery point is a customer. We abstracted the streets and avenues of the city in an weighted undirected graph. The street corners and the delivery points both became vertices and the streets became edges. The weight of an edge is proportional to the time needed to travel it.\nAfter talking to experts, two objectives were detected to minimize: the average route length; and the injustice, measured as the unbalancing weight between the postmen.\nThe postmen do not have capacity, but the routes do have. Each postman can carry 10kg if man or 8kg if woman, however there is a car support that supplies the load to the postmen, which turns their capacities unlimited in mathematical terms. Meanwhile, each postmen must follow a working day close to 6h per day, which generates a maximum capacity for the route.\nDefining capacity in the route length and not in the vehicle is something that applies to several situations. A helicopter has a route limited by its fuel tank. The workers, in general, have a time window to operate the vehicle, which limits the length of the route.\nAccording to our knowledge, this is one of the first benchmarks for the VRP with thousands of customers and that models a real-life situation in a\nroad network."}, {"heading": "2 Notation and Definition", "text": "Consider a weighted (directed or undirected) graph G(V,E) where a depot is a special vertice \u03c0 \u2208 V . This research do not adresse multiple deposits variants of VRP . Consider a cost function w\u2032 : E \u2192 Q+\nThe set of customers is defined by C = V \\ {\u03c0} and the number of customers is denoted by n, where C = {c1, . . . , cn}. The number of vehicles in the fleet is represented by k \u2208 N. The value k is traditionally considered a constant, but it is possible to define variants of VRP where k is variable.\nLet w(u, v,G) be the shortest path cost between vertices u and v in the graph G. We use w(u, v) to represent w(u, v,G) whenever G is known within the context. We represent a solution as a sequence the vertices. Let\nS(C, k) = (c1, . . . , cn, \u03c0, . . . , \u03c0).\nThis sequence is created as follows: (i) all the customers are inserted in S; (ii) the deposit vertice is inserted k \u2212 1 times. Each permutation of S(C, k) represents a solution to the VRP. For example, consider the graph illustrated in Fig. 2:\nS(C, k) = (c1, . . . , cn, \u03c0, . . . , \u03c0).\nEsta sequencia \u00e9 montada da seguinte maneira. Primeiro, todos os clientes s\u00e3o inseridos em S.\nAp\u00f3s isso, s\u00e3o inseriodos k \u2212 1 vezes o v\u00e9rtices dep\u00f3sito. Se o conjunto de clientes C e o n\u00famero\nde ve\u00edculos k estiverem claros no contexto, poderemos usar S para represnetar S(C, k).\nCada permuta\u00e7\u00e3o de S representa uma solu\u00e7\u00e3o do VRP. Para exemplificar, considere o grafo\nConsidere os v\u00e9rtices da descritos na Figura 4. Considere o n\u00famero de ve\u00edculos igual a 3, ou\nseja k = 3. A sequ\u00eancia S(C, 3) neste caso seria:\nS(C, 3) = (c1, . . . , c13, \u03c0, \u03c0).\nCada permuta\u00e7\u00e3o de S(C, 3) representa uma solu\u00e7\u00e3o para o VRP. Por exemplo, a permuta\u00e7\u00e3o\nS \u2032 = (c3, c5, c4, c1, c2, \u03c0, c6, c10, c11, c12, \u03c0, c7, c8, c9, c13)\nrepresenta a solu\u00e7\u00e3o descrita na Figura 5\nConsider the vertices described in Fig. 2 and suppose that the number\n8\nof vehicles is 3 (i.e. k = 3). The S(C, 3) sequence is:\nS(C, 3) = (c1, . . . , c13, \u03c0, \u03c0).\n.\nEach permutation of S(C, 3) represents a solution to the VRP. For example,\nS \u2032 = (c3, c5, c4, c1, c2, \u03c0, c6, c10, c11, c12, \u03c0, c7, c8, c9, c13)\nis the solution described in Fig. 3.\nToda rota inicia e termina no dep\u00f3sito. A solu\u00e7\u00e3o S \u2032 representa uma parti\u00e7\u00e3o dos clientes em 3\nrotas: R1 = (c3, c5, c4, c1, c2), R2 = (c6, c10, c11, c12) e R3 = (c7, c8, c9, c13). Mais formalmente,\numa solu\u00e7\u00e3o pode ser particionada em diversas rotas\nParticao(S) = (R1, . . . , Rk)\nonde a parti\u00e7\u00e3o da solu\u00e7\u00e3o \u00e9 feita no dep\u00f3sito \u03c0.\nNo exemplo da Figura 5 temos que\nParticao(S \u2032) = ({c3, c5, c4, c1, c2} , {c6, c10, c11, c12} , {c7, c8, c9, c13}) .\nO comprimento de uma rota R = (r1, . . . , rm) \u00e9 dado por:\nW (R) = w(\u03c0, r1) + w(rm, \u03c0) + m\u22121\u2211\ni=1\nw(ri, ri+1)\nAll routes begin and end at the depot. The S \u2032 solution represents a partition of the clients in 3 routes: R1 = (c3, c5, c4, c1, c2), R2 = (c6, c10, c11, c12) and R3 = (c7, c8, c9, c13). The vertex \u03c0 is used to create a partition of the sequence in k routes:\nPartition(S) = (R1, . . . , k)\nwhere the the sequence is split in each k \u2212 1 occurrence of \u03c0. In the example shown in Fig. 3. we have\nPartition(S \u2032) = ((c3, c5, c4, c1, c2) , (c6, c10, c11, c12) , (c7, c8, c9, c13))\n9\n. The length of a route R = (r1, . . . , rm) is given by:\nW (R) = w(\u03c0, r1) + w(rm, \u03c0) + m\u22121\u2211\ni=1\nw(ri, ri+1).\nThe length of a solution S = (s1, . . . , sm) is calculated in as\nW (S) = w(\u03c0, s1) + w(sm, \u03c0) + m\u22121\u2211\ni=1\nw(si, si+1).\nGiven a viable solution, it is necessary to calculate its cost f(S). The most tradicional objective function to be minimized is the length of the solution:\nf(S) = W (S).\n.\nHowever, in some situations the problem is considered as multi objective. One of the objectives is to minimize W (S) and the other is to minimize the number of vehicles.\nf1(S) = W (S), f2(S) = k.\nAssume a system that generates mailman routes. It is required that the solution meets the fairness criteria, i.e., routes are assigned in a way that are not unfair to the mailman, i.e. it does not penalize one mailman in relation to the other. One way to achieve fairness would be to minimize the variance of the length of the routes for each mailman.\nAs described in Section 1, VRP is a set of problems that consist in visiting customers using vehicles. Clearly, there are several variants of the VRP problem. In each, the cost of the solution is calculated differently. Furthermore, each case has additional requirements to find out whether or not a solution is viable.\nExamples of restrictions to the problem are:\nThere should be no empty routes, i.e. for each route Ri \u2208 Partition(S) we must meet the condition that |Ri| > 0.\nEach customer c \u2208 C has a demand d(c) (e.g. number of orders). Each vehicle in v \u2208 {1, . . . , k} is characterized by a capacity c(v). This variant of VRP models situations where a driver (e.g. mailman) has a maximum weight limit. Therefore, a route Rv = (rv1 , . . . , rvm) must meet the requirement that m\u2211\ni=1\nd(rvi ) \u2264 c(v), \u2200v \u2208 {1, . . . , k}.\n.\nConsider a variant of the VRP problem where the size of the route is limited. This problem can model the scenario where vehicles need to fuel at the depot (e.g. a helicopter). It also cater for legal labour issues, where a driver has a commitment to minimum availability. Let v \u2208 {1, . . . , k} be a vehicle with a maximum route Rmax(v). Therefore, any given route Rv = (r1, . . . , rm) is constrained by the condition that\nW (Rv) \u2264 Rmax(v),\u2200v \u2208 {1, . . . , k}.\n.\nVRPTW is a variant of the VRP problem, where a visit to a vertice must be carried out within a time window. In this case, the solution is deemed to be feasible if a client is within a pre-defined lower and upper time limit. Examples of cases are scheduled deliveries such as SEDEX 10, which guarantees that the delivery is completed by the following day before 10 am. It is also useful to implement residential technical support, where the visit to a customer is scheduled within a time frame.\nA simple way to deal with unfeasible solutions is to assign an arbitrary high cost to the objective functions: whenever a solution is considered unfeasible, its cost is infinite (f(S)\u2190\u221e.). For simplicity, in Section 3 we will describe the incapacitated VRP with time windows. The number of vehicles is a constant and we seek to minimize\nthe total length of the routes (W (S)). We also assume there are no empty or idle routes.\nDefinic\u0327a\u0303o 1 (Single-objective VRP) Given a weighted graph G(V,E), a constant k, a special vertice \u03c0 \u2208 V and an objective function f . Seja C \u2190 V \\ {\u03c0}. Consider the sequence S(C, k) and let P be the set of all permutations of S(C, k). Find the permutation S\u2217 \u2208 P so that f(S\u2217) is minimum."}, {"heading": "3 Methodology", "text": "The instances were not generated from the actual post-office application data. Nevertheless, the first author has applied his domain expertise (having worked for four years in the field at a post office in Arthur Nogueira) to turn the instances as realistic as possible. The starting point was the map of the city of Arthur Nogueira as shown in Fig. 4.\nLine segments representing the streets were drawn on top of the map (Fig. 5). Each corner was automatically identified by means of an algorithm that calculate intersections. The result was a weighted graph where the weight of an edge represents the length of the segment.\nClearly, the edges representing deliveries that are carried out by a vehicle need to follow the direction of one-way streets. However, in our case, postmen deliveries were performed by foot.\nWe have created the graph directly from the street map due to the fact that: (i) the path by foot may differ from the ones available from maps which prioritize delivery by vehicles; (ii) the number of streets in Artur Nogueira is slightly over 400 and that allows the manual creation of the graph; (iii) Currently, public maps such as OpenStreetMap [21] are incomplete, i.e.\nthey have a large number of streets not yet covered;\nIdeally, the creation of new benchmarks for other cities should also consider public maps, mainly in large cities where the manual extraction of the map may incur in prohibitive costs.\nThe final graph ended up with |V | = 2111 and |E| = 3225. Each edge is associated with a pixel. Each edge has a bijection with a line segment Each street has a name and a set of collinear line segments. The cost of an edge is proportional to the length of its associated line segment, as discussed later.\nAn initial approach would be to consider the deliveries generated according to a uniform distribution across the city streets. However, a non-uniform distribution would be more realistic. For example, the main streets in the downtown area do tend to receive a larger number of deliveries per unit length than the side or back streets.\nTherefore, a relative density D parameter was applied to each street. For example, a street with D = .5 has a 50% less probability of receiving a delivery than one with D = 1.0 (per unit length)."}, {"heading": "3.1 Streets Density of Probabilty", "text": "For each street, we arbitraly classify it with atributtes and levels.\nThere are tree attributes Region(R), Type(T) and Zone(Z). Both at-\ntributes and penalties were created based in the expert knowledge.\nThe criterion by regions follows the premise that the downtown area closest streets have a higher rate of deliveries by length unit than the streets located at extreme regions of the city.\nWe define a multiplicative penalty for each type of region.\nRegion central peripheral distant isolated\nMultiplic. Penalty (Penal) 1.0 0.75 0.4 0.2\nIt means that, fixing other atttributes, an isolated street receives 80%\nless deliveries than a central street per unit of lenght.\nWe also define the attribute Type with four levels:\nType Avenue Street Alameda Highway\nMultiplic. Penalty (Penal) 1.0 0.75 0.4 0.0\nIn this work, all highways received directly the value 0, because there\nwere no delivers on it.\nAn street has 25% menos entregas por unidade de comprimento do que\numa avenida.\nAt last, we created the attribute Zone, which has three levels: with\npenalties\nZone Commercial&Industrial Mixed Residential\nMultiplic. Penalty (Penal) 1.0 0.7 0.4\nWe used the Google Maps as an auxiliary tool to verify the streets con-\ntaining companies.\nThe criterion Zone exists because a street deliveries density does not depend only on its type or region. The economic context should also be regarded.\nEach one of the 422 streets received a value in Rg\u00d7T \u00d7Z, according to expert knowledge. Be Streets = (Street1, Street2, . . . , Street422) the set of\nall streets. Be f : Streets \u2192 Rg \u00d7 T \u00d7 Z a function that attributes values to a particular street. For instance, consider the StreetRuaXV . We have f(StreetRuaXV ) was manualy define as (central, Avenue,Mixed), because it is an avenue, spoted at downtown, containing residences and commercial establishments.\nWe can refer to each f element apart, in the following manner: Rg(StreetXV ) = central, T (StreetXV ) = Avenue and Z(StreetXV ) = Mixed.\nFinally, we have a function that describes the relative density of a street. D : Streets\u2192 N, as it follows:\nD(Street) = Penal(Rg(Street))\u00d7 Penal(T (Street)) + Penal(Z(Street)).\nUsing this methodology, all the streets received a relative density. For example, the XV de Novembro Avenue relative density is given by\nD(StreetXV ) = Penal(Rg(StreetXV )) + Penal(T (StreetXV )) + Penal(Z(StreetXV ))\n= Penal(central)\u00d7 Penal(Avenue)\u00d7 Penal(Mixed) = 1\u00d7 1\u00d7 0.7 = 0.7\n(1)\nOn the other hand, the Sibipirunas Alameda has the relative density:\nD(StreetSib.) = Penal(Rg(StreetSib.)) + Penal(T (StreetSib.)) + Penal(Z(StreetSib.))\n= Penal(isolated) + Penal(Alameda) + Penal(Residential) = 0.2\u00d7 0.2\u00d7 0.4 = 0.16\n(2)\nD(StreetXV ) = 0.7 and D(StreetSib.) = 0.16 are used so that, in our model, the probability density of the RuaXV are be 0.7 0.14 times larger than probability density StreetSib.."}, {"heading": "3.2 Generating the Delivery Points", "text": "We shall define a variable weight w as\nw(Street) = D(Street)Length(Street).\nSo w is directly proportional to the relative probability density and to the street length.\nE[ne(Street)] = w(Street)k,\nTake a sequence of weights (w1, w2, . . . , wn) associated to the streets\n(Street1, Street2, . . . , Streetn).\nThus, we will define a variable W as\nW = n\u2211\ni=1\nw(Streeti)\nThe algorithm considers all the weights projected in a range [0,W ]. For each delivery point, a random value R \u2208 [0,W ] is created. Case this random value falls on the range of a particular street, the delivery point will be inserted in the respective street.\nIn a street, the ne(Street) delivery points are uniformly distributed."}, {"heading": "4 Using VRPBench to Model Manhatan Streets", "text": ""}, {"heading": "5 Result", "text": "We generated 10 sets of instances with 10 instances for set, resulting 100 instances. The delivery points number of each set is 1000, 2000, 3000, 4000, 5000, 6000, 7000, 8000, 9000 and 10000, respectively.\nThe figure below shows the distribution of 1000 delivery points, for a\ngiven area of the city chosen randomly:\nInput: A sequence of weights (w1, w2, . . . , wn) \u2208 Rn associated to streets and the total number of delivery m \u2208 N. Output: The number of delivery for each street\n(ne1, ne2, . . . , nen) \u2208 Nn\n1 Set W = n\u2211\ni=1\nw(Streeti)\n2 for i=1 to m do 3 R\u2190 random value int [0,W] 4 for x=1 to m do 5 if x\u22121\u2211\nj=1\nwj < R \u2264 x\u2211\nj=1\nwj then\n6 nex \u2190 nex + 1 7 end\n8 end\n9 end\n10 return (ne1, ne2, . . . , nen)\nAlgorithm 1: Generating delivery points."}, {"heading": "6 Conclusions", "text": "In this work, we created a benchmark based on a real-life situation. Once the solution used by post office is fixed with respect to the delivery points, there is a large gap to be explored.\nA feasible solution that reduces the number of postmen produces profit,\nsince such postmen can be allocated in other tasks.\nA solution that reduces the route length also reduce the delivery effort,\nand also can be understand as profit.\nFurthermore, in science view, this is the first benchmark to VRP with\n10.000 delivery points.\nFuture Perspectives\nFrom this work, we aim to publish a paper. We intend to develop a free software system to validate and to rank the best solutions found by the researchers, also providing a view of the routes. Lower bounds have a more complex validation and will be released only when associated to a publishing.\nAt last, I would like to work in the development of an algorithm to solve\nsome of the instances presented in this work, in a future master degree."}], "references": [{"title": "A pso approach for solving vrptw with real case study", "author": ["Shahrzad Amini", "Hassan Javanshir", "Reza Tavakkoli-Moghaddam"], "venue": "Int. J. Res. Rev. Appl. Sci,", "citeRegEx": "1", "shortCiteRegEx": "1", "year": 2010}, {"title": "The Traveling Salesman Problem: A Computational Study: A Computational Study", "author": ["David L Applegate", "Robert E Bixby", "Vasek Chvatal", "William J 19  Cook"], "venue": "Princeton university press,", "citeRegEx": "2", "shortCiteRegEx": "2", "year": 2011}, {"title": "Computational results with a branch and cut code for the capacitated vehicle routing problem", "author": ["Ph Augerat", "JM Belenguer", "E Benavent", "A Corber\u00e1n", "D Naddef", "G Rinaldi"], "venue": "IMAG,", "citeRegEx": "3", "shortCiteRegEx": "3", "year": 1995}, {"title": "A two-stage hybrid local search for the vehicle routing problem with time windows", "author": ["Russell Bent", "Pascal Van Hentenryck"], "venue": "Transportation Science,", "citeRegEx": "4", "shortCiteRegEx": "4", "year": 2004}, {"title": "Qaplib\u2013a quadratic assignment problem library", "author": ["Rainer E Burkard", "Stefan E Karisch", "Franz Rendl"], "venue": "Journal of Global optimization,", "citeRegEx": "5", "shortCiteRegEx": "5", "year": 1997}, {"title": "Vehicle routing problem with elementary shortest path based column generation", "author": ["Alain Chabrier"], "venue": "Computers & Operations Research,", "citeRegEx": "6", "shortCiteRegEx": "6", "year": 2006}, {"title": "Rodinia: A benchmark suite for heterogeneous computing", "author": ["Shuai Che", "Michael Boyer", "Jiayuan Meng", "David Tarjan", "Jeremy W Sheaffer", "Sang-Ha Lee", "Kevin Skadron"], "venue": "In Workload Characterization,", "citeRegEx": "7", "shortCiteRegEx": "7", "year": 2009}, {"title": "The vehicle routing problem. combinatorial optimization. christofides n., mingozzi a., toth p., sandi", "author": ["N Christofides"], "venue": "c.(eds) j,", "citeRegEx": "8", "shortCiteRegEx": "8", "year": 1979}, {"title": "The vehicle routing problem. Revue fran\u00e7aise d\u2019automatique, d\u2019informatique et de recherche op\u00e9rationnelle", "author": ["Nicos Christofides"], "venue": "Recherche ope\u0301rationnelle,", "citeRegEx": "9", "shortCiteRegEx": "9", "year": 1976}, {"title": "An algorithm for the vehicledispatching problem", "author": ["Nicos Christofides", "Samuel Eilon"], "venue": "Or, pages 309\u2013318,", "citeRegEx": "10", "shortCiteRegEx": "10", "year": 1969}, {"title": "A new exact algorithm for the multi-depot vehicle routing problem under capacity and route length constraints", "author": ["Claudio Contardo", "Rafael Martinelli"], "venue": "Discrete Optimization,", "citeRegEx": "11", "shortCiteRegEx": "11", "year": 2014}, {"title": "Traveling salesman problem site", "author": ["William Cook"], "venue": "(last check 01/30/2016)", "citeRegEx": "12", "shortCiteRegEx": "12", "year": 2016}, {"title": "Unisim-ii-d: Benchmark case proposal based on a carbonate reservoir", "author": ["M Correia", "J Hohendorff", "ATFS Gaspar", "D Schiozer"], "venue": "In SPE Latin American and Caribbean Petroleum Engineering Conference. Society of Petroleum Engineers,", "citeRegEx": "13", "shortCiteRegEx": "13", "year": 2015}, {"title": "The truck dispatching problem", "author": ["George B Dantzig", "John H Ramser"], "venue": "Management science,", "citeRegEx": "14", "shortCiteRegEx": "14", "year": 1959}, {"title": "Texture feature performance for image segmentation", "author": ["JM Hans du Buf", "M Kardan", "Michael Spann"], "venue": "Pattern recognition,", "citeRegEx": "15", "shortCiteRegEx": "15", "year": 1990}, {"title": "On linear programming, integer programming and cutting planes", "author": ["Daniel G Espinoza"], "venue": "PhD thesis, Georgia Institute of Technology,", "citeRegEx": "16", "shortCiteRegEx": "16", "year": 2006}, {"title": "Optimal solution of vehicle routing problems using minimum k-trees", "author": ["Marshall L Fisher"], "venue": "Operations research,", "citeRegEx": "17", "shortCiteRegEx": "17", "year": 1994}, {"title": "Robust branch-and-cut-and-price for the capacitated vehicle routing problem", "author": ["Ricardo Fukasawa", "Humberto Longo", "Jens Lysgaard", "Marcus Poggi de Arag\u00e3o", "Marcelo Reis", "Eduardo Uchoa", "Renato F Werneck"], "venue": "Mathematical programming,", "citeRegEx": "18", "shortCiteRegEx": "18", "year": 2006}, {"title": "A parallel hybrid evolutionary metaheuristic for the vehicle routing problem with time windows", "author": ["Hermann Gehring", "J\u00f6rg Homberger"], "venue": "In Proceedings of EUROGEN99,", "citeRegEx": "19", "shortCiteRegEx": "19", "year": 1999}, {"title": "The impact of metaheuristics on solving the vehicle routing problem: algorithms, problem sets, and computational results", "author": ["Bruce L Golden", "Edward A Wasil", "James P Kelly", "I-Ming Chao"], "venue": "In Fleet management and logistics,", "citeRegEx": "20", "shortCiteRegEx": "20", "year": 1998}, {"title": "Openstreetmap: User-generated street maps", "author": ["Mordechai Haklay", "Patrick Weber"], "venue": "IEEE Pervasive Computing,", "citeRegEx": "21", "shortCiteRegEx": "21", "year": 2008}, {"title": "Labeled faces in the wild: A database for studying face recognition in unconstrained environments", "author": ["Gary B Huang", "Manu Ramesh", "Tamara Berg", "Erik Learned-Miller"], "venue": "Technical report,", "citeRegEx": "22", "shortCiteRegEx": "22", "year": 2007}, {"title": "Sequential insertion heuristic with adaptive bee colony optimisation algorithm for vehicle routing problem with time windows", "author": ["Sana Jawarneh", "Salwani Abdullah"], "venue": "PloS one,", "citeRegEx": "23", "shortCiteRegEx": "23", "year": 2015}, {"title": "A theoretician\u2019s guide to the experimental analysis of algorithms. Data structures, near neighbor searches, and methodology: fifth and sixth", "author": ["David S Johnson"], "venue": "DIMACS implementation challenges,", "citeRegEx": "24", "shortCiteRegEx": "24", "year": 2002}, {"title": "Value at risk: the new benchmark for controlling market risk", "author": ["Philippe Jorion"], "venue": "Irwin Professional Pub.,", "citeRegEx": "25", "shortCiteRegEx": "25", "year": 1997}, {"title": "Vehicle routing problem with time", "author": ["Brian Kallehauge", "Jesper Larsen", "Oli BG Madsen", "Marius M Solomon"], "venue": null, "citeRegEx": "26", "shortCiteRegEx": "26", "year": 2005}, {"title": "2-path cuts for the vehicle routing problem with time windows", "author": ["Niklas Kohl", "Jacques Desrosiers", "Oli BG Madsen", "Marius M Solomon", "Francois Soumis"], "venue": "Transportation Science,", "citeRegEx": "27", "shortCiteRegEx": "27", "year": 1999}, {"title": "Psplib-a project scheduling problem library: Or software-orsep operations research software exchange program", "author": ["Rainer Kolisch", "Arno Sprecher"], "venue": "European journal of operational research,", "citeRegEx": "28", "shortCiteRegEx": "28", "year": 1997}, {"title": "Imagenet classification with deep convolutional neural networks. In Advances in neural information processing", "author": ["Alex Krizhevsky", "Ilya Sutskever", "Geoffrey E Hinton"], "venue": null, "citeRegEx": "29", "shortCiteRegEx": "29", "year": 2012}, {"title": "Very large-scale vehicle routing: new test problems, algorithms, and results", "author": ["Feiyue Li", "Bruce Golden", "Edward Wasil"], "venue": "Computers & Operations Research,", "citeRegEx": "30", "shortCiteRegEx": "30", "year": 2005}, {"title": "Improved branch-cut-and-price for capacitated vehicle routing", "author": ["Diego Pecin", "Artur Pessoa", "Marcus Poggi", "Eduardo Uchoa"], "venue": "In Integer programming and combinatorial optimization,", "citeRegEx": "31", "shortCiteRegEx": "31", "year": 2014}, {"title": "Tsplib\u2014a traveling salesman problem library", "author": ["Gerhard Reinelt"], "venue": "ORSA journal on computing,", "citeRegEx": "32", "shortCiteRegEx": "32", "year": 1991}, {"title": "Tsplib95. Interdisziplin\u00e4res Zentrum f\u00fcr Wissenschaftliches Rechnen (IWR)", "author": ["Gerhard Reinelt"], "venue": null, "citeRegEx": "33", "shortCiteRegEx": "33", "year": 1995}, {"title": "A tabu search heuristic for the multi-depot vehicle routing problem", "author": ["Jacques Renaud", "Gilbert Laporte", "Fayez F Boctor"], "venue": "Computers & Operations Research,", "citeRegEx": "34", "shortCiteRegEx": "34", "year": 1996}, {"title": "Algorithms for the vehicle routing and scheduling problems with time window constraints", "author": ["Marius M Solomon"], "venue": "Operations research,", "citeRegEx": "35", "shortCiteRegEx": "35", "year": 1987}, {"title": "Estimates of the damage costs of climate change. part 1: Benchmark estimates", "author": ["Richard SJ Tol"], "venue": "Environmental and resource Economics,", "citeRegEx": "36", "shortCiteRegEx": "36", "year": 2002}, {"title": "New benchmark 23  instances for the capacitated vehicle routing problem. unpublished. http://www.galgos.inf.puc-rio.br/vrp/attachments/ article/8/New_Instances.pdf, Last checked 15\u2013Jun\u20132016", "author": ["Eduardo Uchoa", "Diego Pecin", "Artur Pessoa", "Marcus Poggi", "Anand Subramanian", "Thibaut Vidal"], "venue": null, "citeRegEx": "37", "shortCiteRegEx": "37", "year": 2016}], "referenceMentions": [{"referenceID": 12, "context": "Benchmarks are found in various fields of science, such as geology [13], economy [25], climatology [36], among other areas.", "startOffset": 67, "endOffset": 71}, {"referenceID": 24, "context": "Benchmarks are found in various fields of science, such as geology [13], economy [25], climatology [36], among other areas.", "startOffset": 81, "endOffset": 85}, {"referenceID": 35, "context": "Benchmarks are found in various fields of science, such as geology [13], economy [25], climatology [36], among other areas.", "startOffset": 99, "endOffset": 103}, {"referenceID": 14, "context": "in image processing [15, 29, 22], hardware performance [7] and optimization [32, 28, 5].", "startOffset": 20, "endOffset": 32}, {"referenceID": 28, "context": "in image processing [15, 29, 22], hardware performance [7] and optimization [32, 28, 5].", "startOffset": 20, "endOffset": 32}, {"referenceID": 21, "context": "in image processing [15, 29, 22], hardware performance [7] and optimization [32, 28, 5].", "startOffset": 20, "endOffset": 32}, {"referenceID": 6, "context": "in image processing [15, 29, 22], hardware performance [7] and optimization [32, 28, 5].", "startOffset": 55, "endOffset": 58}, {"referenceID": 31, "context": "in image processing [15, 29, 22], hardware performance [7] and optimization [32, 28, 5].", "startOffset": 76, "endOffset": 87}, {"referenceID": 27, "context": "in image processing [15, 29, 22], hardware performance [7] and optimization [32, 28, 5].", "startOffset": 76, "endOffset": 87}, {"referenceID": 4, "context": "in image processing [15, 29, 22], hardware performance [7] and optimization [32, 28, 5].", "startOffset": 76, "endOffset": 87}, {"referenceID": 23, "context": "Johnson [24] divided algorithm analysis in three approaches: the worst-case, the average-case, and the experimental analysis.", "startOffset": 8, "endOffset": 12}, {"referenceID": 13, "context": "One of the first references to the VRP dates back to 1959 [14] under the name Truck Dispaching Problem, a generalization of the Traveler Salesman Problem (TSP).", "startOffset": 58, "endOffset": 62}, {"referenceID": 8, "context": "The term VRP was first seen in the paper by Christophides [9], in 1976.", "startOffset": 58, "endOffset": 61}, {"referenceID": 17, "context": "For example, the Capacitaded-VRP (CVRP) [18] considers a limit to the vehicle capacity, the VRP with Time Windows (VRPTW) [26] accounts for delivery time windows, and the Multi-Depot VRP (MDVRP) [34] extends the number of depots.", "startOffset": 40, "endOffset": 44}, {"referenceID": 25, "context": "For example, the Capacitaded-VRP (CVRP) [18] considers a limit to the vehicle capacity, the VRP with Time Windows (VRPTW) [26] accounts for delivery time windows, and the Multi-Depot VRP (MDVRP) [34] extends the number of depots.", "startOffset": 122, "endOffset": 126}, {"referenceID": 33, "context": "For example, the Capacitaded-VRP (CVRP) [18] considers a limit to the vehicle capacity, the VRP with Time Windows (VRPTW) [26] accounts for delivery time windows, and the Multi-Depot VRP (MDVRP) [34] extends the number of depots.", "startOffset": 195, "endOffset": 199}, {"referenceID": 31, "context": "In 1991, Reinelt [32] created a benchmark for the TSP, known as TSPLib.", "startOffset": 17, "endOffset": 21}, {"referenceID": 32, "context": "His repository (TSPLIB95) [33] has instances of both the symmetric and the asymmetric traveling salesman problem (TSP/aTSP) as well as three related problems: (i) CVRP; (ii) Sequential Ordered Problem (SOP); and (iii) Hamiltonian Cycle Problem (HCP).", "startOffset": 26, "endOffset": 30}, {"referenceID": 1, "context": "The optimum of the d15112 instance was found in 2001 [2].", "startOffset": 53, "endOffset": 56}, {"referenceID": 11, "context": "6 years of processing split across 110 500MHz processors [12].", "startOffset": 57, "endOffset": 61}, {"referenceID": 1, "context": "The instance pla33810 was solved [2] in March 2004.", "startOffset": 33, "endOffset": 36}, {"referenceID": 15, "context": "7 years of processing [16].", "startOffset": 22, "endOffset": 26}, {"referenceID": 1, "context": "The last instance of the TSPLib, called pla85900, was solved in 2006 [2].", "startOffset": 69, "endOffset": 72}, {"referenceID": 34, "context": "Solomon [35] created a benchmark for the VRPTW in 1987.", "startOffset": 8, "endOffset": 12}, {"referenceID": 26, "context": "The first optimum solution was published in 1999 [27].", "startOffset": 49, "endOffset": 53}, {"referenceID": 5, "context": "In 2005, Chabrier [6] managed to solve 17 of the instances that still had remained unsolved in the benchmark.", "startOffset": 18, "endOffset": 21}, {"referenceID": 0, "context": "al [1] obtained solutions very close to optimum, considering the first 25 customers only.", "startOffset": 3, "endOffset": 6}, {"referenceID": 22, "context": "In july 2015, after 28 years of the benchmark launching, Jawarneh and Abdullah [23] published in PlosONE a Bee Colony Optimization metaheuristic.", "startOffset": 79, "endOffset": 83}, {"referenceID": 3, "context": "Bent and Hentenryck proposed the solution containing 3 routes, in 2001 [4].", "startOffset": 71, "endOffset": 74}, {"referenceID": 18, "context": "Gehring and Homberger [19] extended the instances of Solomon, creating a benchmark with a numbers of customers varying from 100 to 1000 for the VRPTW.", "startOffset": 22, "endOffset": 26}, {"referenceID": 2, "context": "For the CVRP, there is a set of instances largely used, named as ABEFMP, in which Augerat [3] proposed the classes A, B, P in 1995 and [10, 17, 8] proposed the classes E, F, M in 1969, 1994 and 1979, respectively.", "startOffset": 90, "endOffset": 93}, {"referenceID": 9, "context": "For the CVRP, there is a set of instances largely used, named as ABEFMP, in which Augerat [3] proposed the classes A, B, P in 1995 and [10, 17, 8] proposed the classes E, F, M in 1969, 1994 and 1979, respectively.", "startOffset": 135, "endOffset": 146}, {"referenceID": 16, "context": "For the CVRP, there is a set of instances largely used, named as ABEFMP, in which Augerat [3] proposed the classes A, B, P in 1995 and [10, 17, 8] proposed the classes E, F, M in 1969, 1994 and 1979, respectively.", "startOffset": 135, "endOffset": 146}, {"referenceID": 7, "context": "For the CVRP, there is a set of instances largely used, named as ABEFMP, in which Augerat [3] proposed the classes A, B, P in 1995 and [10, 17, 8] proposed the classes E, F, M in 1969, 1994 and 1979, respectively.", "startOffset": 135, "endOffset": 146}, {"referenceID": 17, "context": "A series of different works, such as [18, 11] among others, obtained the optimum in different ABEFMP instances.", "startOffset": 37, "endOffset": 45}, {"referenceID": 10, "context": "A series of different works, such as [18, 11] among others, obtained the optimum in different ABEFMP instances.", "startOffset": 37, "endOffset": 45}, {"referenceID": 30, "context": "[31] found in 2014 the optimum solution for the last instance unsolved, named M-n151-k12, 35 years after its presentation by Christofides [8].", "startOffset": 0, "endOffset": 4}, {"referenceID": 7, "context": "[31] found in 2014 the optimum solution for the last instance unsolved, named M-n151-k12, 35 years after its presentation by Christofides [8].", "startOffset": 138, "endOffset": 141}, {"referenceID": 19, "context": "[20] proposed new instances for the CVRP, in 1998.", "startOffset": 0, "endOffset": 4}, {"referenceID": 29, "context": "In 2005, Li, Golden and Wasil [30] created a set of instances with the number of customers between 560 and 1200.", "startOffset": 30, "endOffset": 34}, {"referenceID": 2, "context": "In this library, they consolidated the CVRP instances of the works [3, 10, 8, 17, 20, 30].", "startOffset": 67, "endOffset": 89}, {"referenceID": 9, "context": "In this library, they consolidated the CVRP instances of the works [3, 10, 8, 17, 20, 30].", "startOffset": 67, "endOffset": 89}, {"referenceID": 7, "context": "In this library, they consolidated the CVRP instances of the works [3, 10, 8, 17, 20, 30].", "startOffset": 67, "endOffset": 89}, {"referenceID": 16, "context": "In this library, they consolidated the CVRP instances of the works [3, 10, 8, 17, 20, 30].", "startOffset": 67, "endOffset": 89}, {"referenceID": 19, "context": "In this library, they consolidated the CVRP instances of the works [3, 10, 8, 17, 20, 30].", "startOffset": 67, "endOffset": 89}, {"referenceID": 29, "context": "In this library, they consolidated the CVRP instances of the works [3, 10, 8, 17, 20, 30].", "startOffset": 67, "endOffset": 89}, {"referenceID": 36, "context": "al [37] generated new instances with the number of customers between 100 and 1000.", "startOffset": 3, "endOffset": 7}, {"referenceID": 19, "context": "[20] and Li, Golden and Wasil [30] are artificial as well.", "startOffset": 0, "endOffset": 4}, {"referenceID": 29, "context": "[20] and Li, Golden and Wasil [30] are artificial as well.", "startOffset": 30, "endOffset": 34}, {"referenceID": 20, "context": "We have created the graph directly from the street map due to the fact that: (i) the path by foot may differ from the ones available from maps which prioritize delivery by vehicles; (ii) the number of streets in Artur Nogueira is slightly over 400 and that allows the manual creation of the graph; (iii) Currently, public maps such as OpenStreetMap [21] are incomplete, i.", "startOffset": 349, "endOffset": 353}], "year": 2016, "abstractText": "The number of optimization techniques in the combinatorial domain is large and diversified. Nevertheless, there is still a lack of real benchmarks to validate optimization algorithms. In this work we introduce VRPBench, a tool to create instances and visualize solutions to the Vehicle Routing Problem (VRP) in a planar graph embedded in the Euclidean 2D space. We use VRPBench to model a real-world mail delivery case of the city of Artur Nogueira. Such scenarios were characterized as a multi-objective optimization of the VRP. We extracted a weighted graph from a digital map of the city to create a challenging benchmark for the VRP. Each instance models one generic day of mail delivery with hundreds to thousands of delivery points, thus allowing both the comparison and validation of optimization algorithms for routing problems.", "creator": "LaTeX with hyperref package"}}}