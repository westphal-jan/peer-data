{"id": "1611.00035", "review": {"conference": "NIPS", "VERSION": "v1", "DATE_OF_SUBMISSION": "31-Oct-2016", "title": "Full-Capacity Unitary Recurrent Neural Networks", "abstract": "Recurrent neural networks are powerful models for processing sequential data, but they are generally plagued by vanishing and exploding gradient problems. Unitary recurrent neural networks (uRNNs), which use unitary recurrence matrices, have recently been proposed as a means to avoid these issues. However, in previous experiments, the recurrence matrices were restricted to be a product of parameterized unitary matrices, and an open question remains: when does such a parameterization fail to represent all unitary matrices, and how does this restricted representational capacity limit what can be learned? To address this question, we propose full-capacity uRNNs that optimize their recurrence matrix over all unitary matrices, leading to significantly improved performance over uRNNs that use a restricted-capacity recurrence matrix.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "histories": [["v1", "Mon, 31 Oct 2016 20:43:21 GMT  (804kb,D)", "http://arxiv.org/abs/1611.00035v1", "9 pages, to appear in NIPS"]], "COMMENTS": "9 pages, to appear in NIPS", "reviews": [], "SUBJECTS": "stat.ML cs.LG cs.NE", "authors": ["scott wisdom", "thomas powers", "john r hershey", "jonathan le roux", "les e atlas"], "accepted": true, "id": "1611.00035"}, "pdf": {"name": "1611.00035.pdf", "metadata": {"source": "CRF", "title": "Full-Capacity Unitary Recurrent Neural Networks", "authors": ["Scott Wisdom", "Thomas Powers", "John R. Hershey", "Jonathan Le Roux"], "emails": ["atlas}@uw.edu", "leroux}@merl.com"], "sections": [{"heading": "1 Introduction", "text": "Deep feed-forward and recurrent neural networks have been shown to be remarkably effective in a wide variety of problems. A primary difficulty in training using gradient-based methods has been the so-called vanishing or exploding gradient problem, in which the instability of the gradients over multiple layers can impede learning [1, 2]. This problem is particularly keen for recurrent networks, since the repeated use of the recurrent weight matrix can magnify any instability.\nThis problem has been addressed in the past by various means, including gradient clipping [3], using orthogonal matrices for initialization of the recurrence matrix [4, 5], or by using pioneering architectures such as long short-term memory (LSTM) recurrent networks [6] or gated recurrent units [7]. Recently, several innovative architectures have been introduced to improve information flow in a network: residual networks, which directly pass information from previous layers up in a feed-forward network [8], and attention networks, which allow a recurrent network to access past activations [9]. The idea of using a unitary recurrent weight matrix was introduced so that the gradients are inherently stable and do not vanish or explode [10]. The resulting unitary recurrent\n\u2217Equal contribution\n30th Conference on Neural Information Processing Systems (NIPS 2016), Barcelona, Spain.\nar X\niv :1\n61 1.\n00 03\n5v 1\n[ st\nat .M\nL ]\n3 1\nO ct\n2 01\nneural network (uRNN) is complex-valued and uses a complex form of the rectified linear activation function. However, this idea was investigated using, as we show, a potentially restricted form of unitary matrices.\nThe two main components of our contribution can be summarized as follows:\n1) We provide a theoretical argument to determine the smallest dimension N for which any parameterization of the unitary recurrence matrix does not cover the entire set of all unitary matrices. The argument relies on counting real-valued parameters and using Sard\u2019s theorem to show that the smooth map from these parameters to the unitary manifold is not onto. Thus, we can show that a previously proposed parameterization [10] cannot represent all unitary matrices larger than 7\u00d7 7. Thus, such a parameterization results in what we refer to as a restricted-capacity unitary recurrence matrix.\n2) To overcome the limitations of restricted-capacity parameterizations, we propose a new method for stochastic gradient descent for training the unitary recurrence matrix, which constrains the gradient to lie on the differentiable manifold of unitary matrices. This approach allows us to directly optimize a complete, or full-capacity, unitary matrix. Neither restricted-capacity nor full-capacity unitary matrix optimization require gradient clipping. Furthermore, full-capacity optimization still achieves good results without adaptation of the learning rate during training.\nTo test the limitations of a restricted-capacity representation and to confirm that our full-capacity uRNN does have practical implications, we test restricted-capacity and full-capacity uRNNs on both synthetic and natural data tasks. These tasks include synthetic system identification, long-term memorization, frame-to-frame prediction of speech spectra, and pixel-by-pixel classification of handwritten digits. Our proposed full-capacity uRNNs generally achieve equivalent or superior performance on synthetic and natural data compared to both LSTMs [6] and the original restrictedcapacity uRNNs [10].\nIn the next section, we give an overview of unitary recurrent neural networks. Section 3 presents our first contribution: the theoretical argument to determine if any unitary parameterization has restricted-capacity. Section 4 describes our second contribution, where we show how to optimize a full-capacity unitary matrix. We confirm our results with simulated and natural data in Section 5 and present our conclusions in Section 6."}, {"heading": "2 Unitary recurrent neural networks", "text": "The uRNN proposed by Arjovsky et al. [10] consists of the following nonlinear dynamical system that has real- or complex-valued inputs xt of dimension M , complex-valued hidden states ht of dimension N , and real- or complex-valued outputs yt of dimension L:\nht =\u03c3b (Wht\u22121 +Vxt) yt =Uht + c, (1)\nwhere yt = Re{Uht + c} if the outputs yt are real-valued. The element-wise nonlinearity \u03c3 is\n[\u03c3b(z)]i = { (|zi|+ bi) zi|zi| , if |zi|+ bi > 0, 0, otherwise.\n(2)\nNote that this non-linearity consists in a soft-thresholding of the magnitude using the bias vector b. Hard-thresholding would set the output of \u03c3 to zi if |zi|+ bi > 0. The parameters of the uRNN are as follows: W \u2208 U(N), unitary hidden state transition matrix; V \u2208 CN\u00d7M , input-to-hidden transformation; b \u2208 RN , nonlinearity bias; U \u2208 CL\u00d7N , hidden-to-output transformation; and c \u2208 CL, output bias. Arjovsky et al. [10] propose the following parameterization of the unitary matrix W:\nWu(\u03b8u) = D3R2F\u22121D2PR1FD1, (3)\nwhere D are diagonal unitary matrices, R are Householder reflection matrices [11], F is a discrete Fourier transform (DFT) matrix, and P is a permutation matrix. The resulting matrix Wu is unitary because all its component matrices are unitary. This decomposition is efficient because diagonal, reflection, and permutation matrices are O(N) to compute, and DFTs can be computed efficiently in O(N logN) time using the fast Fourier transform (FFT). The parameter vector \u03b8u consists of 7N\nreal-valued parameters: N parameters for each of the 3 diagonal matrices where Di,i = ej\u03b8i and 2N parameters for each of the 2 Householder reflection matrices, which are real and imaginary values of the complex reflection vectors ui: Ri = I\u2212 2 uiu H i\n\u3008ui,ui\u3009 ."}, {"heading": "3 Estimating the representation capacity of structured unitary matrices", "text": "In this section, we state and prove a theorem that can be used to determine when any particular unitary parameterization does not have capacity to represent all unitary matrices. As an application of this theorem, we show that the parameterization (3) does not have the capacity to cover all N \u00d7N unitary matrices for N > 7. First, we establish an upper bound on the number of real-valued parameters required to represent any N \u00d7N unitary matrix. Then, we state and prove our theorem.\nLemma 3.1 The set of all unitary matrices is a manifold of dimension N2.\nProof: The set of all unitary matrices is the well-known unitary Lie group U(N) [12, \u00a73.4]. A Lie group identifies group elements with points on a differentiable manifold [12, \u00a72.2]. The dimension of the manifold is equal to the dimension of the Lie algebra u, which is a vector space that is the tangent space at the identity element [12, \u00a74.5]. For U(N), the Lie algebra consists of all skewHermitian matrices A [12, \u00a75.4]. A skew-Hermitian matrix is any A \u2208 CN\u00d7N such that A = \u2212AH , where (\u00b7)H is the conjugate transpose. To determine the dimension of U(N), we can determine the dimension of u. Because of the skew-Hermitian constraint, the diagonal elements of A are purely imaginary, which corresponds to N real-valued parameters. Also, since Ai,j = \u2212A\u2217j,i, the upper and lower triangular parts of A are parameterized by N(N\u22121)2 complex numbers, which corresponds to an additional N2 \u2212N real parameters. Thus, U(N) is a manifold of dimension N2.\nTheorem 3.2 If a family of N \u00d7N unitary matrices is parameterized by P real-valued parameters for P < N2, then it cannot contain all N \u00d7N unitary matrices.\nProof: We consider a family of unitary matrices that is parameterized by P real-valued parameters through a smooth map g : P(P )\u2192 U(N2) from the space of parameters P(P ) to the space of all unitary matrices U(N2). The space P(P ) of parameters is considered as a P -dimensional manifold, while the space U(N2) of all unitary matrices is anN2-dimensional manifold according to lemma 3.1. Then, if P < N2, Sard\u2019s theorem [13] implies that the image g(P) of g is of measure zero in U(N2), and in particular g is not onto. Since g is not onto, there must exist a unitary matrix W \u2208 U(N2) for which there is no corresponding input P \u2208 P(P ) such that W = g(P). Thus, if P is such that P < N2, the manifold P(P ) cannot represent all unitary matrices in U(N2). We now apply Theorem 3.2 to the parameterization (3). Note that the parameterization (3) has P = 7N real-valued parameters. If we solve for N in 7N < N2, we get N > 7. Thus, the parameterization (3) cannot represent all unitary matrices for dimension N > 7."}, {"heading": "4 Optimizing full-capacity unitary matrices on the Stiefel manifold", "text": "In this section, we show how to get around the limitations of restricted-capacity parameterizations and directly optimize a full-capacity unitary matrix. We consider the Stiefel manifold of all N \u00d7N complex-valued matrices whose columns are N orthonormal vectors in CN [14]. Mathematically, the Stiefel manifold is defined as\nVN (CN ) = { W \u2208 CN\u00d7N : WHW = IN\u00d7N } . (4)\nFor any W \u2208 VN (CN ), any matrix Z in the tangent space TWVN (CN ) of the Stiefel manifold satisfies ZHW \u2212WHZ = 0 [14]. The Stiefel manifold becomes a Riemannian manifold when its tangent space is equipped with an inner product. Tagare [14] suggests using the canonical inner product, given by\n\u3008Z1,Z2\u3009c = tr ( ZH1 (I\u2212 1\n2 WWH)Z2\n) . (5)\nUnder this canonical inner product on the tangent space, the gradient in the Stiefel manifold of the loss function f with respect to the matrix W is AW, where A = GHW \u2212WHG is a skew-Hermitian\nmatrix and G with Gi,j = \u03b4f\u03b4Wi,j is the usual gradient of the loss function f with respect to the matrix W [14]. Using these facts, Tagare [14] suggests a descent curve along the Stiefel manifold at training iteration k given by the matrix product of the Cayley transformation of A(k) with the current solution W(k):\nY(k)(\u03bb) = ( I+ \u03bb\n2 A(k)\n)\u22121( I\u2212 \u03bb\n2 A(k)\n) W(k), (6)\nwhere \u03bb is a learning rate and A(k) = G(k) H W(k) \u2212W(k)HG(k). Gradient descent proceeds by performing updates W(k+1) = Y(k)(\u03bb). Tagare [14] suggests an Armijo-Wolfe search along the curve to adapt \u03bb, but such a procedure would be expensive for neural network optimization since it requires multiple evaluations of the forward model and gradients. We found that simply using a fixed learning rate \u03bb often works well. Also, RMSprop-style scaling of the gradient G(k) by a running average of the previous gradients\u2019 norms [15] before applying the multiplicative step (6) can improve convergence. The only additional substantial computation required beyond the forward and backward passes of the network is the N \u00d7N matrix inverse in (6)."}, {"heading": "5 Experiments", "text": "All models are implemented in Theano [16], based on the implementation of restricted-capacity uRNNs by [10], available from https://github.com/amarshah/complex_RNN. All code to replicate our results is available from https://github.com/stwisdom/urnn. All models use RMSprop [15] for optimization, except that full-capacity uRNNs optimize their recurrence matrices with a fixed learning rate using the update step (6) and optional RMSprop-style gradient normalization."}, {"heading": "5.1 Synthetic data", "text": "First, we compare the performance of full-capacity uRNNs to restricted-capacity uRNNs and LSTMs on two tasks with synthetic data. The first task is synthetic system identification, where a uRNN must learn the dynamics of a target uRNN given only samples of the target uRNN\u2019s inputs and outputs. The second task is the copy memory problem, in which the network must recall a sequence of data after a long period of time."}, {"heading": "5.1.1 System identification", "text": "For the task of system identification, we consider the problem of learning the dynamics of a nonlinear dynamical system that has the form (1), given a dataset of inputs and outputs of the system. We will draw a true system Wsys randomly from either a constrained setWu of restricted-capacity unitary matrices using the parameterization Wu(\u03b8u) in (3) or from a wider setWg of restricted-capacity unitary matrices that are guaranteed to lie outside Wu. We sample from Wg by taking a matrix product of two unitary matrices drawn fromWu. We use a sequence length of T = 150, and we set the input dimension M and output dimension L both equal to the hidden state dimension N . The input-to-hidden transformation V and output-tohidden transformation U are both set to identity, the output bias c is set to 0, the initial state is set to 0, and the hidden bias b is drawn from a uniform distribution in the range [\u22120.11,\u22120.09]. The hidden bias has a mean of \u22120.1 to ensure stability of the system outputs. Inputs are generated by sampling T -length i.i.d. sequences of zero-mean, diagonal and unit covariance circular complexvalued Gaussians of dimension N . The outputs are created by running the system (1) forward on the inputs.\nWe compare a restricted-capacity uRNN using the parameterization from (3) and a full-capacity uRNN using Stiefel manifold optimization with no gradient normalization as described in Section 4. We choose hidden state dimensions N to test critical points predicted by our arguments in Section 3 of Wu(\u03b8u) in (3): N \u2208 {4, 6, 7, 8, 16}. These dimensions are chosen to test below, at, and above the critical dimension of 7.\nFor all experiments, the number of training, validation, and test sequences are 20000, 1000, and 1000, respectively. Mean-squared error (MSE) is used as the loss function. The learning rate is 0.001 with a batch size of 50 for all experiments. Both models use the same matrix drawn fromWu as initialization. To isolate the effect of unitary recurrence matrix capacity, we only optimize W, setting\nall other parameters to true oracle values. For each method, we report the best test loss over 100 epochs and over 6 random initializations for the optimization.\nThe results are shown in Table 1. \u201cWsys init.\u201d refers to the initialization of the true system unitary matrix Wsys, which is sampled from either the restricted-capacity setWu or the wider setWg .\nNotice that for N < 7, the restricted-capacity uRNN achieves comparable or better performance than the full-capacity uRNN. At N = 7, the restricted-capacity and full-capacity uRNNs achieve relatively comparable performance, with the full-capacity uRNN achieving slightly lower error. For N > 7, the full-capacity uRNN always achieves better performance versus the restricted-capacity uRNN. This result confirms our theoretical arguments that the restricted-capacity parameterization in (3) lacks the capacity to model all matrices in the unitary group for N > 7 and indicates the advantage of using a full-capacity unitary recurrence matrix."}, {"heading": "5.1.2 Copy memory problem", "text": "The experimental setup follows the copy memory problem from [10], which itself was based on the experiment from [6]. We consider alternative hidden state dimensions and extend the sequence lengths to T = 1000 and T = 2000, which are longer than the maximum length of T = 750 considered in previous literature.\nIn this task, the data is a vector of length T + 20 and consists of elements from 10 categories. The vector begins with a sequence of 10 symbols sampled uniformly from categories 1 to 8. The next T \u2212 1 elements of the vector are the ninth \u2019blank\u2019 category, followed by an element from the tenth category, the \u2018delimiter\u2019. The remaining ten elements are \u2018blank\u2019. The task is to output T + 10 blank characters followed by the sequence from the beginning of the vector. We use average cross entropy as the training loss function. The baseline solution outputs the blank category for T + 10 time steps and then guesses a random symbol uniformly from the first eight categories. This baseline has an expected average cross entropy of 10 log(8)T+20 .\nThe full-capacity uRNN uses a hidden state size of N = 128 with no gradient normalization. To match the number of parameters (\u2248 22k), we use N = 470 for the restricted-capacity uRNN, and N = 68 for the LSTM. The training set size is 100000 and the test set size is 10000. The results\nof the T = 1000 experiment can be found on the left half of Figure 1. The full-capacity uRNN converges to a solution with zero average cross entropy after about 2000 training iterations, whereas the restricted-capacity uRNN settles to the baseline solution of 0.020. The results of the T = 2000 experiment can be found on the right half of Figure 1. The full-capacity uRNN hovers around the baseline solution for about 5000 training iterations, after which it drops down to zero average cross entropy. The restricted-capacity again settles down to the baseline solution of 0.010. These results demonstrate that the full-capacity uRNN is very effective for problems requiring very long memory."}, {"heading": "5.2 Speech data", "text": "We now apply restricted-capacity and full-capacity uRNNs to real-world speech data and compare their performance to LSTMs. The main task we consider is predicting the log-magnitude of future frames of a short-time Fourier transform (STFT). The STFT is a commonly used feature domain for speech enhancement, and is defined as the Fourier transform of short windowed frames of the time series. In the STFT domain, a real-valued audio signal is represented as a complex-valued F \u00d7 T matrix composed of T frames that are each composed of F = Nwin/2 + 1 frequency bins, where Nwin is the duration of the time-domain frame. Most speech processing algorithms use the log-magnitude of the complex STFT values and reconstruct the processed audio signal using the phase of the original observations.\nThe frame prediction task is as follows: given all the log-magnitudes of STFT frames up to time t, predict the log-magnitude of the STFT frame at time t+1.We use the TIMIT dataset [17]. According to common practice [18], we use a training set with 3690 utterances from 462 speakers, a validation set of 400 utterances, an evaluation set of 192 utterances. Training, validation, and evaluation sets have distinct speakers. Results are reported on the evaluation set using the network parameters that perform best on the validation set in terms of the loss function over three training trials. All TIMIT audio is resampled to 8kHz. The STFT uses a Hann analysis window of 256 samples (32 milliseconds) and a window hop of 128 samples (16 milliseconds).\nThe LSTM requires gradient clipping during optimization, while the restricted-capacity and fullcapacity uRNNs do not. The hidden state dimensions N of the LSTM are chosen to match the number of parameters of the full-capacity uRNN. For the restricted-capacity uRNN, we run models that match either N or number of parameters. For the LSTM and restricted-capacity uRNNs, we use RMSprop [15] with a learning rate of 0.001, momentum 0.9, and averaging parameter 0.1. For the full-capacity uRNN, we also use RMSprop to optimize all network parameters, except for the recurrence matrix, for which we use stochastic gradient descent along the Stiefel manifold using the update (6) with a fixed learning rate of 0.001 and no gradient normalization.\nResults are shown in Table 2, and Figure 2 shows example predictions of the three types of networks. Results in Table 2 are given in terms of the mean-squared error (MSE) loss function and several metrics computed on the time-domain signals, which are reconstructed from the predicted log-magnitude\nand the original phase of the STFT. These time-domain metrics are segmental signal-to-noise ratio (SegSNR), short-time objective intelligibility (STOI), and perceptual evaluation of speech quality (PESQ). SegSNR, computed using [19], uses a voice activity detector to avoid measuring SNR in silent frames. STOI is designed to correlate well with human intelligibility of speech, and takes on values between 0 and 1, with a higher score indicating higher intelligibility [20]. PESQ is the ITU-T standard for telephone voice quality testing [21, 22], and is a popular perceptual quality metric for speech enhancement [23]. PESQ ranges from 1 (bad quality) to 4.5 (no distortion).\nNote that full-capacity uRNNs generally perform better than restricted-capacity uRNNs with the same number of parameters, and both types of uRNN significantly outperform LSTMs."}, {"heading": "5.3 Pixel-by-pixel MNIST", "text": "As another challenging long-term memory task with natural data, we test the performance of LSTMs and uRNNs on pixel-by-pixel MNIST and permuted pixel-by-pixel MNIST, first proposed by [5] and used by [10] to test restricted-capacity uRNNs. For permuted pixel-by-pixel MNIST, the pixels are shuffled, thereby creating some non-local dependencies between pixels in an image. Since the MNIST images are 28\u00d7 28 pixels, resulting pixel-by-pixel sequences are T = 784 elements long. We use 5000 of the 60000 training examples as a validation set to perform early stopping with a patience of 5. The loss function is cross-entropy. Weights with the best validation loss are used to process the evaluation set. The full-capacity uRNN uses RMSprop-style gradient normalization.\nLearning curves are shown in Figure 3, and a summary of classification accuracies is shown in Table 3. For the unpermuted task, the LSTM with N = 256 achieves the best evaluation accuracy of 98.2%. For the permuted task, the full-capacity uRNN with N = 512 achieves the best evaluation accuracy of 94.1%, which is state-of-the-art on this task. Both uRNNs outperform LSTMs on the permuted case, achieving their best performance after fewer traing epochs and using an equal or lesser number of trainable parameters. This performance difference suggests that LSTMs are only able to model local dependencies, while uRNNs have superior long-term memory capabilities. Despite not representing all unitary matrices, the restricted-capacity uRNN with N = 512 still achieves impressive test accuracy of 93.3% with only 1/16 of the trainable parameters, outperforming the full-capacity uRNN with N = 116 that matches number of parameters. This result suggests that further exploration into the potential trade-off between hidden state dimension N and capacity of unitary parameterizations is necessary."}, {"heading": "6 Conclusion", "text": "Unitary recurrent matrices prove to be an effective means of addressing the vanishing and exploding gradient problems. We provided a theoretical argument to quantify the capacity of constrained unitary matrices. We also described a method for directly optimizing a full-capacity unitary matrix by constraining the gradient to lie in the differentiable manifold of unitary matrices. The effect of restricting the capacity of the unitary weight matrix was tested on system identification and memory tasks, in which full-capacity unitary recurrent neural networks (uRNNs) outperformed restrictedcapacity uRNNs from [10] as well as LSTMs. Full-capacity uRNNs also outperformed restrictedcapacity uRNNs on log-magnitude STFT prediction of natural speech signals and classification of permuted pixel-by-pixel images of handwritten digits, and both types of uRNN significantly outperformed LSTMs. In future work, we plan to explore more general forms of restricted-capacity unitary matrices, including constructions based on products of elementary unitary matrices such as Householder operators or Givens operators.\nAcknowledgments: We thank an anonymous reviewer for suggesting improvements to our proof in Section 3 and Vamsi Potluru for helpful discussions. Scott Wisdom and Thomas Powers were funded by U.S. ONR contract number N00014-12-G-0078, delivery orders 13 and 24. Les Atlas was funded by U.S. ARO grant W911NF-15-1-0450."}], "references": [{"title": "Learning long-term dependencies with gradient descent is difficult", "author": ["Y. Bengio", "P. Simard", "P. Frasconi"], "venue": "IEEE Transactions on Neural Networks,", "citeRegEx": "1", "shortCiteRegEx": "1", "year": 1994}, {"title": "Gradient flow in recurrent nets: the difficulty of learning long-term dependencies", "author": ["S. Hochreiter", "Y. Bengio", "P. Frasconi", "J. Schmidhuber"], "venue": null, "citeRegEx": "2", "shortCiteRegEx": "2", "year": 2001}, {"title": "On the difficulty of training", "author": ["R. Pascanu", "T. Mikolov", "Y. Bengio"], "venue": "Recurrent Neural Networks", "citeRegEx": "3", "shortCiteRegEx": "3", "year": 2012}, {"title": "Exact solutions to the nonlinear dynamics of learning in deep linear neural networks", "author": ["A.M. Saxe", "J.L. McClelland", "S. Ganguli"], "venue": null, "citeRegEx": "4", "shortCiteRegEx": "4", "year": 2013}, {"title": "A simple way to initialize recurrent networks of rectified linear units", "author": ["Q.V. Le", "N. Jaitly", "G.E. Hinton"], "venue": null, "citeRegEx": "5", "shortCiteRegEx": "5", "year": 2015}, {"title": "Long short-term memory", "author": ["S. Hochreiter", "J. Schmidhuber"], "venue": "Neural computation,", "citeRegEx": "6", "shortCiteRegEx": "6", "year": 1997}, {"title": "On the properties of neural machine translation: Encoder-decoder approaches", "author": ["K. Cho", "B. van Merri\u00ebnboer", "D. Bahdanau", "Y. Bengio"], "venue": null, "citeRegEx": "7", "shortCiteRegEx": "7", "year": 2014}, {"title": "Deep residual learning for image recognition", "author": ["K. He", "X. Zhang", "S. Ren", "J. Sun"], "venue": null, "citeRegEx": "8", "shortCiteRegEx": "8", "year": 2015}, {"title": "Recurrent models of visual attention", "author": ["V. Mnih", "N. Heess", "A. Graves", "K. Kavukcuoglu"], "venue": "In Advances in Neural Information Processing Systems (NIPS),", "citeRegEx": "9", "shortCiteRegEx": "9", "year": 2014}, {"title": "Unitary Evolution Recurrent Neural Networks", "author": ["M. Arjovsky", "A. Shah", "Y. Bengio"], "venue": "In International Conference on Machine Learning", "citeRegEx": "10", "shortCiteRegEx": "10", "year": 2016}, {"title": "Unitary triangularization of a nonsymmetric matrix", "author": ["A.S. Householder"], "venue": "Journal of the ACM,", "citeRegEx": "11", "shortCiteRegEx": "11", "year": 1958}, {"title": "Lie groups, physics, and geometry: an introduction for physicists, engineers and chemists", "author": ["R. Gilmore"], "venue": null, "citeRegEx": "12", "shortCiteRegEx": "12", "year": 2008}, {"title": "The measure of the critical values of differentiable maps", "author": ["A. Sard"], "venue": "Bulletin of the American Mathematical Society,", "citeRegEx": "13", "shortCiteRegEx": "13", "year": 1942}, {"title": "Notes on optimization on Stiefel manifolds", "author": ["H.D. Tagare"], "venue": "Technical report, Yale University,", "citeRegEx": "14", "shortCiteRegEx": "14", "year": 2011}, {"title": "Lecture 6.5\u2014RmsProp: Divide the gradient by a running average of its recent magnitude, 2012. COURSERA: Neural Networks for Machine Learning", "author": ["T. Tieleman", "G. Hinton"], "venue": null, "citeRegEx": "15", "shortCiteRegEx": "15", "year": 2012}, {"title": "DARPA TIMIT acoustic-phonetic continous speech corpus", "author": ["J.S. Garofolo", "L.F. Lamel", "W.M. Fisher", "J.G. Fiscus", "D.S. Pallett"], "venue": "Technical Report NISTIR 4930, National Institute of Standards and Technology,", "citeRegEx": "17", "shortCiteRegEx": "17", "year": 1993}, {"title": "Heterogeneous acoustic measurements and multiple classifiers for speech recognition", "author": ["A.K. Halberstadt"], "venue": "PhD thesis, Massachusetts Institute of Technology,", "citeRegEx": "18", "shortCiteRegEx": "18", "year": 1998}, {"title": "VOICEBOX: Speech processing toolbox for MATLAB", "author": ["M. Brookes"], "venue": null, "citeRegEx": "19", "shortCiteRegEx": "19", "year": 2002}, {"title": "An algorithm for intelligibility prediction of timefrequency weighted noisy speech", "author": ["C. Taal", "R. Hendriks", "R. Heusdens", "J. Jensen"], "venue": "IEEE Trans. on Audio, Speech, and Language Processing,", "citeRegEx": "20", "shortCiteRegEx": "20", "year": 2011}, {"title": "Perceptual evaluation of speech quality (PESQ)-a new method for speech quality assessment of telephone networks and codecs", "author": ["A. Rix", "J. Beerends", "M. Hollier", "A. Hekstra"], "venue": "In Proc. ICASSP,", "citeRegEx": "21", "shortCiteRegEx": "21", "year": 2001}, {"title": "Perceptual evaluation of speech quality (PESQ): An objective method for end-to-end speech quality assessment of narrow-band telephone networks and speech", "author": ["ITU-T P"], "venue": null, "citeRegEx": "22", "shortCiteRegEx": "22", "year": 2000}, {"title": "Speech Enhancement: Theory and Practice", "author": ["P.C. Loizou"], "venue": null, "citeRegEx": "23", "shortCiteRegEx": "23", "year": 2007}], "referenceMentions": [{"referenceID": 0, "context": "A primary difficulty in training using gradient-based methods has been the so-called vanishing or exploding gradient problem, in which the instability of the gradients over multiple layers can impede learning [1, 2].", "startOffset": 209, "endOffset": 215}, {"referenceID": 1, "context": "A primary difficulty in training using gradient-based methods has been the so-called vanishing or exploding gradient problem, in which the instability of the gradients over multiple layers can impede learning [1, 2].", "startOffset": 209, "endOffset": 215}, {"referenceID": 2, "context": "This problem has been addressed in the past by various means, including gradient clipping [3], using orthogonal matrices for initialization of the recurrence matrix [4, 5], or by using pioneering architectures such as long short-term memory (LSTM) recurrent networks [6] or gated recurrent units [7].", "startOffset": 90, "endOffset": 93}, {"referenceID": 3, "context": "This problem has been addressed in the past by various means, including gradient clipping [3], using orthogonal matrices for initialization of the recurrence matrix [4, 5], or by using pioneering architectures such as long short-term memory (LSTM) recurrent networks [6] or gated recurrent units [7].", "startOffset": 165, "endOffset": 171}, {"referenceID": 4, "context": "This problem has been addressed in the past by various means, including gradient clipping [3], using orthogonal matrices for initialization of the recurrence matrix [4, 5], or by using pioneering architectures such as long short-term memory (LSTM) recurrent networks [6] or gated recurrent units [7].", "startOffset": 165, "endOffset": 171}, {"referenceID": 5, "context": "This problem has been addressed in the past by various means, including gradient clipping [3], using orthogonal matrices for initialization of the recurrence matrix [4, 5], or by using pioneering architectures such as long short-term memory (LSTM) recurrent networks [6] or gated recurrent units [7].", "startOffset": 267, "endOffset": 270}, {"referenceID": 6, "context": "This problem has been addressed in the past by various means, including gradient clipping [3], using orthogonal matrices for initialization of the recurrence matrix [4, 5], or by using pioneering architectures such as long short-term memory (LSTM) recurrent networks [6] or gated recurrent units [7].", "startOffset": 296, "endOffset": 299}, {"referenceID": 7, "context": "Recently, several innovative architectures have been introduced to improve information flow in a network: residual networks, which directly pass information from previous layers up in a feed-forward network [8], and attention networks, which allow a recurrent network to access past activations [9].", "startOffset": 207, "endOffset": 210}, {"referenceID": 8, "context": "Recently, several innovative architectures have been introduced to improve information flow in a network: residual networks, which directly pass information from previous layers up in a feed-forward network [8], and attention networks, which allow a recurrent network to access past activations [9].", "startOffset": 295, "endOffset": 298}, {"referenceID": 9, "context": "The idea of using a unitary recurrent weight matrix was introduced so that the gradients are inherently stable and do not vanish or explode [10].", "startOffset": 140, "endOffset": 144}, {"referenceID": 9, "context": "Thus, we can show that a previously proposed parameterization [10] cannot represent all unitary matrices larger than 7\u00d7 7.", "startOffset": 62, "endOffset": 66}, {"referenceID": 5, "context": "Our proposed full-capacity uRNNs generally achieve equivalent or superior performance on synthetic and natural data compared to both LSTMs [6] and the original restrictedcapacity uRNNs [10].", "startOffset": 139, "endOffset": 142}, {"referenceID": 9, "context": "Our proposed full-capacity uRNNs generally achieve equivalent or superior performance on synthetic and natural data compared to both LSTMs [6] and the original restrictedcapacity uRNNs [10].", "startOffset": 185, "endOffset": 189}, {"referenceID": 9, "context": "[10] consists of the following nonlinear dynamical system that has real- or complex-valued inputs xt of dimension M , complex-valued hidden states ht of dimension N , and real- or complex-valued outputs yt of dimension L:", "startOffset": 0, "endOffset": 4}, {"referenceID": 9, "context": "[10] propose the following parameterization of the unitary matrix W:", "startOffset": 0, "endOffset": 4}, {"referenceID": 10, "context": "where D are diagonal unitary matrices, R are Householder reflection matrices [11], F is a discrete Fourier transform (DFT) matrix, and P is a permutation matrix.", "startOffset": 77, "endOffset": 81}, {"referenceID": 12, "context": "Then, if P < N, Sard\u2019s theorem [13] implies that the image g(P) of g is of measure zero in U(N), and in particular g is not onto.", "startOffset": 31, "endOffset": 35}, {"referenceID": 13, "context": "We consider the Stiefel manifold of all N \u00d7N complex-valued matrices whose columns are N orthonormal vectors in C [14].", "startOffset": 114, "endOffset": 118}, {"referenceID": 13, "context": "For any W \u2208 VN (C ), any matrix Z in the tangent space TWVN (C ) of the Stiefel manifold satisfies ZW \u2212WZ = 0 [14].", "startOffset": 110, "endOffset": 114}, {"referenceID": 13, "context": "Tagare [14] suggests using the canonical inner product, given by", "startOffset": 7, "endOffset": 11}, {"referenceID": 13, "context": "matrix and G with Gi,j = \u03b4f \u03b4Wi,j is the usual gradient of the loss function f with respect to the matrix W [14].", "startOffset": 108, "endOffset": 112}, {"referenceID": 13, "context": "Using these facts, Tagare [14] suggests a descent curve along the Stiefel manifold at training iteration k given by the matrix product of the Cayley transformation of A with the current solution W: Y(\u03bb) = (", "startOffset": 26, "endOffset": 30}, {"referenceID": 13, "context": "Tagare [14] suggests an Armijo-Wolfe search along the curve to adapt \u03bb, but such a procedure would be expensive for neural network optimization since it requires multiple evaluations of the forward model and gradients.", "startOffset": 7, "endOffset": 11}, {"referenceID": 14, "context": "Also, RMSprop-style scaling of the gradient G by a running average of the previous gradients\u2019 norms [15] before applying the multiplicative step (6) can improve convergence.", "startOffset": 100, "endOffset": 104}, {"referenceID": 9, "context": "All models are implemented in Theano [16], based on the implementation of restricted-capacity uRNNs by [10], available from https://github.", "startOffset": 103, "endOffset": 107}, {"referenceID": 14, "context": "All models use RMSprop [15] for optimization, except that full-capacity uRNNs optimize their recurrence matrices with a fixed learning rate using the update step (6) and optional RMSprop-style gradient normalization.", "startOffset": 23, "endOffset": 27}, {"referenceID": 9, "context": "The experimental setup follows the copy memory problem from [10], which itself was based on the experiment from [6].", "startOffset": 60, "endOffset": 64}, {"referenceID": 5, "context": "The experimental setup follows the copy memory problem from [10], which itself was based on the experiment from [6].", "startOffset": 112, "endOffset": 115}, {"referenceID": 15, "context": "We use the TIMIT dataset [17].", "startOffset": 25, "endOffset": 29}, {"referenceID": 16, "context": "According to common practice [18], we use a training set with 3690 utterances from 462 speakers, a validation set of 400 utterances, an evaluation set of 192 utterances.", "startOffset": 29, "endOffset": 33}, {"referenceID": 14, "context": "For the LSTM and restricted-capacity uRNNs, we use RMSprop [15] with a learning rate of 0.", "startOffset": 59, "endOffset": 63}, {"referenceID": 17, "context": "SegSNR, computed using [19], uses a voice activity detector to avoid measuring SNR in silent frames.", "startOffset": 23, "endOffset": 27}, {"referenceID": 18, "context": "STOI is designed to correlate well with human intelligibility of speech, and takes on values between 0 and 1, with a higher score indicating higher intelligibility [20].", "startOffset": 164, "endOffset": 168}, {"referenceID": 19, "context": "PESQ is the ITU-T standard for telephone voice quality testing [21, 22], and is a popular perceptual quality metric for speech enhancement [23].", "startOffset": 63, "endOffset": 71}, {"referenceID": 20, "context": "PESQ is the ITU-T standard for telephone voice quality testing [21, 22], and is a popular perceptual quality metric for speech enhancement [23].", "startOffset": 63, "endOffset": 71}, {"referenceID": 21, "context": "PESQ is the ITU-T standard for telephone voice quality testing [21, 22], and is a popular perceptual quality metric for speech enhancement [23].", "startOffset": 139, "endOffset": 143}, {"referenceID": 4, "context": "As another challenging long-term memory task with natural data, we test the performance of LSTMs and uRNNs on pixel-by-pixel MNIST and permuted pixel-by-pixel MNIST, first proposed by [5] and used by [10] to test restricted-capacity uRNNs.", "startOffset": 184, "endOffset": 187}, {"referenceID": 9, "context": "As another challenging long-term memory task with natural data, we test the performance of LSTMs and uRNNs on pixel-by-pixel MNIST and permuted pixel-by-pixel MNIST, first proposed by [5] and used by [10] to test restricted-capacity uRNNs.", "startOffset": 200, "endOffset": 204}, {"referenceID": 9, "context": "The effect of restricting the capacity of the unitary weight matrix was tested on system identification and memory tasks, in which full-capacity unitary recurrent neural networks (uRNNs) outperformed restrictedcapacity uRNNs from [10] as well as LSTMs.", "startOffset": 230, "endOffset": 234}], "year": 2016, "abstractText": null, "creator": "LaTeX with hyperref package"}}}