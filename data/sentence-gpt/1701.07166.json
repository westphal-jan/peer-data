{"id": "1701.07166", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "25-Jan-2017", "title": "Personalized Classifier Ensemble Pruning Framework for Mobile Crowdsourcing", "abstract": "Ensemble learning has been widely employed by mobile applications, ranging from environmental sensing to activity recognitions. One of the fundamental issue in ensemble learning is the trade-off between classification accuracy and computational costs, which is the goal of ensemble pruning. During crowdsourcing, the centralized aggregator releases ensemble learning models to a large number of mobile participants for task evaluation or as the crowdsourcing learning results, while different participants may seek for different levels of the accuracy-cost trade-off. However, most of existing ensemble pruning approaches consider only one identical level of such trade-off. In this study, we present an efficient ensemble pruning framework for personalized accuracy-cost trade-offs via multi-objective optimization. Specifically, for the commonly used linear-combination style of the trade-off, we provide an objective-mixture optimization to further reduce the number of ensemble candidates. Experimental results show that our framework is highly efficient for personalized ensemble pruning, and achieves much better pruning performance with objective-mixture optimization when compared to state-of-art approaches. Our models utilize an approach of a single model, combining multiple layers of training and training, including a single model for ensemble pruning, to provide a better understanding of the trade-off. We demonstrate that our approach provides a model for the approach for multi-objective optimization. We demonstrate that our approach delivers a better understanding of the trade-off. In addition, we show that our model delivers a better understanding of the trade-off and our model does not differ significantly between ensemble or ensemble pruning approaches. In addition, we illustrate that our model does not differ significantly from previous efforts to improve the skill and efficiency of ensemble pruning. In addition, we demonstrate that our model does not differ significantly from previous efforts to improve the skill and efficiency of ensemble pruning. We demonstrate that our approach delivers a better understanding of the trade-off. In addition, we demonstrate that our approach provides a model for the approach for multi-objective optimization. Our model does not differ significantly from previous efforts to improve the skill and efficiency of ensemble pruning. In addition, we demonstrate that our approach delivers a better understanding of the trade-off. In addition, we demonstrate that our model does not differ significantly from previous efforts to improve the skill and efficiency of ensemble pruning. In addition, we demonstrate that our approach provides a model for the approach for multi-objective optimization. In addition, we demonstrate that our approach provides a model for the approach for multi-objective optimization.", "histories": [["v1", "Wed, 25 Jan 2017 05:22:35 GMT  (346kb)", "http://arxiv.org/abs/1701.07166v1", null]], "reviews": [], "SUBJECTS": "cs.DC cs.HC cs.LG", "authors": ["shaowei wang", "liusheng huang", "pengzhan wang", "hongli xu", "wei yang"], "accepted": false, "id": "1701.07166"}, "pdf": {"name": "1701.07166.pdf", "metadata": {"source": "CRF", "title": "Personalized Classifier Ensemble Pruning Framework for Mobile Crowdsourcing", "authors": ["Shaowei Wang", "Liusheng Huang", "Pengzhan Wang", "Hongli Xu", "Wei Yang"], "emails": ["pzwang}@mail.ustc.edu.cn,", "qubit}@ustc.edu.cn"], "sections": [{"heading": null, "text": "ar X\niv :1\n70 1.\n07 16\n6v 1\n[ cs\n.D C\n] 2\nKeywords: Ensemble Pruning, Mobile Crowdsourcing, Bi-objective Optimization, Pareto Optimization"}, {"heading": "1 Introduction", "text": "A classifier ensemble leverages a bundle of diverse base classifiers (e.g., SVM, k-NN, Bagging classifier, Boosting classifier) to complete classification tasks by aggregating the classification results of the base classifiers. Since individual classifiers may perform poorly whereas the ensemble of these classifiers usually significantly improves, classifier ensembles are popular and are widely adopted in mobile device applications, ranging from environment-centric scenarios (e.g., place classification[18]) to people-centric scenarios (e.g., activity recognition [3], human fall detection [7][14]).\nThough classifier ensemble could potentially improve classification accuracy, evaluating every member in the ensemble is much more expensive than the evaluation of an individual classifier. On the other hand, the number of classifiers in the ensemble limits the achievable classification accuracy. Such dilemma calls for the trade-off between classification accuracy and the classification cost (e.g., the size of the ensemble or time and memory consumptions of the ensemble) for classifier ensembles. Hence, ensemble pruning [17] has been proposed to select a subset of all possible classifiers meanwhile avoid harming classification accuracy. It\u2019s worth noting that the accuracy-cost trade-off is especially important in mobile crowdsourcing scenarios, where mobile devices\u2019 power saving is a crucial issue and realtime online classification is usually needed.\nSpecifically, in the crowdsourcing scenarios, the centralized crowdsourcing server may need to publish pruned classifier ensembles to every crowdsourcing participants, mainly due to two types of purposes. One purpose is facilitating each participant to finish crowdsourcing tasks, as many crowdsourcing tasks rely on ensemble classification. The other purpose is publishing the learned classifier ensembles as crowdsourcing result. This happens in reciprocal crowdsourcing tasks, where each participant contributes limited data (due to privacy consideration) to the centralized server, to collectively train a ensemble classification model, and then receive the learned classifier ensemble from the server, who has much more computation and storage resources than each single mobile devices for training the ensemble model. Consequently, each participant can then do classification tasks on their own mobile devices without sacrificing data privacy. In concise, during mobile crowdsourcing, the server may need to publish pruned classifier ensembles to plenty of participants that equipped with mobile devices.\nWe argue that participants need customized levels of accuracy-cost trade-off in ensemble pruning, as some participants may pursue better classification accuracy, while some other may pay more attention to energy saving or time saving during classification. One naive approach to tackle such personalized ensemble pruning challenge is running existing ensemble pruning approaches multiple times with different trade-off parameters, but this would be too costly especially when the number of participants is relatively large.\nMotivated by resilience of bi-objective optimization, which simultaneously optimizes for two objectives, in this paper, we embed personalized ensemble pruning problem into bi-objective Pareto optimization problem by taking the classification accuracy and its cost as the objectives. We also propose an improvement in Pareto optimization by mixing up the accuracy and the cost objectives, such that the searching space of ensembles is concentrated when each participant\u2019s trade-off level is known by the server. More specifically, this work makes the following contributions:\n\u2013 We formulate the personalized ensemble pruning problem, which captures the need of personalized accuracy-cost trade-off levels of crowdsourcing participants.\n\u2013 We present a personalized ensemble pruning framework based on bi-objective Pareto optimization, we further provide an objective-mixture improvement to Pareto optimization for linear-combination loss function. \u2013 We conduct extensive experiments to validate the efficiency and effectiveness of our framework.\nThe remainder of this paper is organized as follows. Section 2 provides preliminary knowledge about bi-objective optimization and ensemble pruning. Section 3 gives our personalized ensemble pruning model and framework. Section 4 describes the objective-mixture improvement on Pareto optimization. Section 5 theoretically analyzes our framework. Section 6 presents experimental results. Section 7 reviews related work on ensemble pruning. Lastly section 8 concludes the whole paper."}, {"heading": "2 Preliminaries", "text": "In this section, we briefly introduce bi-objective Pareto optimization and the formal definition of ensemble pruning."}, {"heading": "2.1 Bi-objective Pareto Optimization", "text": "Multi-objective optimization explicitly optimizes for two or more objectives and outputs multiple solutions, in which each solution has at least one advantage objective when compared to any other solutions. Conventionally the Pareto optimal rule is used to determine the advantage or domination relation between solutions, and a solution is Pareto optimal if it is not dominated by any other solutions. Specifically, the Pareto domination relation in bi-objective optimization is formulated as follows:\nDefinition 1 (Pareto Dominance). Let f = (f1, f2) : \u2126 \u2192 R 2 be the objective vector. For two solution S1, S2 \u2208 \u2126, S1 dominates S2 iff f1(S1) \u2264 f1(S2) and f2(S1) \u2264 f2(S2), and f1(S1) < f1(S2) or f2(S1) < f2(S2) holds.\nUnlike one-objective optimization that usually only have one optimal solution, bi-objective optimization returns a set of Pareto optimal solutions. This resilience property of bi-objective optimization lately motivates our framework to use bi-objective optimization to simultaneously approximate optimal classifier ensembles with diverse trade-off levels."}, {"heading": "2.2 Ensemble Pruning", "text": "Ensemble pruning selects a subset of classifiers S from a pool of base classifiers T , such that the accuracy of aggregated classification results only slightly degrades or even improves, meanwhile the number of classifiers (or computational costs) in S is significantly reduced compared to the whole classifier pool T .\nTo be precise, let the number of base classifiers in T = {t0, ..., tm} be m, and selected classifiers S \u2208 {0, 1}m be a boolean vector, in which each bit indicates\nwhether each ti is selected. Ensemble pruning seeks for a trade-off between the classification error rate E(S) on a validation data set and the cost to evaluate classifiers in S as follows:\nSopt = arg minS\u2208{0,1}m E(S) + \u03b1 \u00b7 |S|, (1)\nWhere \u03b1 \u2208 [0.0,+\u221e) is the trade-off level, |S| = \u2211\nk=1..m si is number of pruned classifiers, and E(S) + \u03b1 \u00b7 |S| is the combined loss function. Without loss of generalization, we treat the evaluation cost of each classifier as 1 unit here, but one can also use the actual time or(and) memory consumption of evaluating each classifier on mobile devices as the computational costs."}, {"heading": "3 Model and Framework", "text": ""}, {"heading": "3.1 Personalized Ensemble Pruning Model", "text": "Recall that during crowdsourcing, the server usually need to publish pruned classifier ensembles to crowdsourcing participants. In practical, some crowdsourcing participants may pursue best achievable classification accuracy for better quality of services, while some others may pay more attention to energy saving or time saving during classification. This implies that ensemble pruning with personalized accuracy-cost trade-off levels is needed in mobile crowdsourcing scenarios.\nFormally, supposing that there are n crowdsourcing participants, each has a choice of the accuracy-cost trade-off level \u03b1j for ensemble pruning, then the optimal pruned ensemble Sj,opt for participant uj can be formulated as follows:\nSj,opt = arg minS\u2208{0,1}m E(S) + \u03b1j \u00b7 |S|. (2)\nConsequently, the aggregator should publish personalized optimal classifier ensemble Sj,opt to the participant uj, as showed in Fig.1. But practically, as finding one optimal classifier ensemble Sj,opt in exponential-sized search space is already computationally hard, a approximation Sj of Sj,opt is preferable instead.\nThe main challenge for personalized ensemble pruning is how to efficiently approximate all Sj,opt for each participant when the number of participants is relatively large."}, {"heading": "3.2 Personalized Ensemble Pruning Framework", "text": "We now provide our basic personalized ensemble pruning framework based on bi-objective optimization. Since finding the optimal pruned ensemble for each participant with trade-off level \u03b1j would be too costly, especially when the number of participants n is large, here we resort to bi-objective Pareto optimization, which takes the empirical classification error E(S) on validation data set as objective f1(S) and computational costs |S| as objective f2(S) in Definition 1, and returns a Pareto optimal ensemble set P = {p1, p2, ..., pl} as solutions, where l is size of the Pareto optimal solution set.\nAlgorithm 1 Personalized Ensemble Pruning Framework\nInput: A set of trained base classifier T = {t1, t2, ..., tm}, participants\u2019 trade-off levels A = (\u03b11, \u03b12, ..., \u03b1n). Output: Personalized pruned ensembles S = (S1, S2, ..., Sn) for each participant. 1: Let f(S) = (E(S), |S|) be the bi-objective. 2: P = bi-objective-solver(f(S)) 3: for j = 1 to n do 4: Sj = arg minS\u2208P E(S) + \u03b1j \u00b7 |S| 5: end for 6: return S = (S1, S2, ..., Sn)\nAs detailed in Algorithm 1, in our framework, after a tractable Pareto ensemble set P is returned by bi-objective solver, the approximate personalized optimal pruned ensemble Sj is selected from P . As long as the Pareto optimal set P is sufficiently optimized and complementary, the personalized pruned ensemble Sj for participant uj will be a good approximation to Sj,opt in Formula 2.\nIn Fig. 2, we demonstrate how the framework selects personalized pruned ensembles for two participants with trade-off levels 0.1 and 0.029 from Pareto ensemble set P . In this case, the tractable minimum combined loss in Formula 2 for participant with trade-off level 0.1 is 0.534, for participant with trade-off level 0.029 is 0.325.\nNaively, selecting optimal ensemble for each participants from Pareto set in line 3 \u2212 5 or in the Fig. 2 has computational complexity of n \u00b7 l, which is inefficient when number of participants is relatively large, where l is size of P and is related to number of iterations in the bi-objective solver, hence l = O(poly(m)). Fortunately, by sorting the trade-off levels in A and the Pareto set P as showed in Algorithm 2, the complexity can be optimized.\nAlgorithm 2 Personalized Ensemble Selection\nInput: The Pareto ensemble set P = {P1, P2, ..., Pl}, participants\u2019 trade-off levels A = (\u03b11, \u03b12, ..., \u03b1n). Output: Optimal pruned ensembles S = {S1, S2, ..., Sn} in P for each participant. 1: sort P by |Pi| in descending order 2: sort A in ascending order 3: i = 1 4: for j = 1 to n do 5: while i < l and E(Pi+1) + \u03b1j \u00b7 |Pi+1| \u2264 E(Pi) + \u03b1j \u00b7 |Pi| do 6: i = i+ 1 7: end while 8: Sj = Pi 9: end for 10: return S = {S1, S2, ..., Sn}\nNote that any algorithm solves the bi-objective Pareto optimization problem can be deployed in our framework. Recently, Qian et al.[13] proposed an evolutionary algorithm for non-personalized ensemble pruning with guaranteed theoretical advantages over former approaches, this outstanding work on nonpersonalized ensemble pruning can naturally be embedded into our framework for personalized ensemble pruning."}, {"heading": "4 Objective-Mixture Optimization", "text": "Recall that in our basic framework, the bi-objective f(S) = (E(S), |S|) solver returns a set of Pareto optimal ensembles P = {p1, p2, ..., pl}, among which for any pi, pj \u2208 P , pi doesn\u2019t dominate pj. However, when taking the concrete value of participants\u2019 trade-off levels A = {\u03b11, \u03b12, ..., \u03b1j} into consideration, the nondominate relation between pi and pj may not hold for any level \u03b1 \u2208 A, formally we have:\n(E(pi), |pi|) 6\u2265 (E(pj), |pj |) ; (E(pi) + \u03b1 \u00b7 |pi|) 6\u2265 (E(pj) + \u03b1 \u00b7 |pj |). (3)\nThis implies that the Pareto optimal ensemble set P = {p1, p2, ..., pl} still has redundances when concrete trade-off levels A = {\u03b11, \u03b12, ..., \u03b1j} or their ranges are already known. Consequently, some redundant pi \u2208 P will not be selected as pruned ensemble by any participants, but will mislead optimization in the bi-objective solving process. In order to mitigate such redundances, we tweak the bi-objective f(S) in line 1 of Algorithm 1 as follows:\nf(S) = (E(S) + \u03b1min \u00b7 |S|, E(S) + \u03b1max \u00b7 |S|), (4)\nwhere \u03b1min = min{\u03b11, \u03b12, ..., \u03b1j}, \u03b1max = max{\u03b11, \u03b12, ..., \u03b1j}. As a result, with this optimized objective-mixture framework, for any pi, pj \u2208 P , there exists an \u03b1 \u2208 [\u03b1min, \u03b1max] that the following formula holds:\n(E(pi) + \u03b1min \u00b7 |pi|, E(pi) + \u03b1max \u00b7 |pi|) 6\u2265 (E(pj) + \u03b1min \u00b7 |pj |, E(pj) + \u03b1max \u00b7 |pj |)\n\u21d2 (E(pi) + \u03b1 \u00b7 |pi|) 6\u2265 (E(pj) + \u03b1 \u00b7 |pj |). (5)\nRoughly speaking, any pi \u2208 P in this optimized framework with objectivemixture has the potential to be finally selected as pruned ensemble by a participant.\nPractically, when \u03b1min and \u03b1max is too close, which may cause bi-objective optimization converges local optimally, some additive or multiplicative relaxations could be putted on \u03b1min and \u03b1max, which means the relaxed objectives is f(S) = (E(S) + cmin \u00b7 \u03b1min \u00b7 |S|, E(S) + cmax \u00b7 \u03b1max \u00b7 |S|), where cmin \u2264 1.0, cmax \u2265 1.0 are the multiplicative relaxation factors."}, {"heading": "5 Performance Analyses", "text": "In this section, we analyse the theoretical computational complexity and ensemble pruning performance of our personalized ensemble pruning framework.\nComputational complexity of our framework highly depends on the deployed bi-objective solver at line 2 in Algorithm 1. Fortunately, the evolutionary biobjective solver in [13] shows that expected O(m2 logm) iterations is sufficient for approximating optimal Pareto set, where m is the number of base classifiers.\nThe personalized pruned ensemble selection in line 3 \u2212 5 naively has computational complexity of n \u00b7 l, but in Algorithm 2, its complexity is reduced to O(n log n+ l log l), where l is size of P and l = O(poly(m)).\nTo put it concisely, the overall expected computation complexity of our framework is O(poly(m)+n logn), while the naive ensemble pruning approach for personalized ensemble pruning tends to cost \u0398(poly(m) \u00b7 n). Hence our framework is efficient in terms of the number of participants n.\nThe gap between selected pruned ensemble for each participant in our framework and the optimal ensemble in Formula 2 also highly depends on the deployed algorithm of bi-objective solver. The evolutionary bi-objective solver in [13] has been proved to outperform former ensemble pruning approaches, thus the achievable performance of our framework is guaranteed by [13]."}, {"heading": "6 Experiments", "text": "In this section, we evaluate the computational overheads and pruning performance of our personalized ensemble pruning framework, with comparison to the state-of-art ensemble pruning approach PEP in [13], which is also used by our framework as the bi-objective solver at line 2 in Algorithm 1 (the differences between PEP and our framework is declared in the next section).\nWe mainly compare the running time and combined loss function (in Formula 2) performance of personalized ensemble pruning in our basic framework (BF) and the objective-mixture framework (OMF) with the approach PEPs that runs the PEP multiple times to get personalized pruned ensembles.\nIn order to simulate ensemble pruning for crowdsourcing participants that equipped with mobile devices, the human activity recognition data set based on mobile phone accelerometers readings from [9] is used for our experiments. The data set has 4944 examples with 43 attributes extracted from time-serial data of mobile phone accelerometers, includes six classes of human activities: walking, jogging, upstairs, downstairs, sitting and standing.\nIn our experiments, the dataset is randomly split into tree parts: 60% as training set, 20% as validation set and 20% as test set. The pool of m = 20 base CART tree [2] classifiers are generated by Bagging [1] on the training set. In these experiments, we simulated with number of participants n ranges from 1 to 1280, with randomized personalized trade-off level \u03b1j \u2208 A ranges from 0.01 to 0.2, and the empirical multiplicative objective relaxation factors in OMF are empirical values cmin = 0.3, cmax = 1.7. The number of iterations of the biobjective solver is set as 80. We conduct experiments on the scikit-learn [12] platform.\nThe running time results with a relatively small number of participants are showed in Fig. 3 (a). The PEPs approach for personalized ensemble pruning costs linear to n computational time, while the time consumed by our BF and OMF approach only slightly increase with the number of participants n increases.\nBesides, our framework with objective-mixture (OMF) averagely reduced 40% running time than the basic framework (BF), mainly due to filtering out unnecessary ensemble candidates during each iteration. In concise, our framework for personalized ensemble pruning is efficient when the number of participants n increases.\nThe expected loss function (in Formula2) results of pruned ensembles for small number of participants are showed in Fig. 3 (b), it demonstrates that there is no significant difference of loss function between the BF and the PEPs approach, while our framework with objective-mixture (OMF) reduced losses by 50% when compared to the BF and PEPs approach. Combining experimental results in Fig. 3 (a) as conclusion, our OMF approach outperforms the PEPs approach and our BF approach in both efficiency and effectiveness.\nWe also evaluate the performance of our approaches with relatively large number of participants, and the results showed in Fig. 4. The results demonstrate that the losses of pruned ensemble from objective-mixture OMF approach averagely outperforms the basic framework and the PEPs approaches by 50%."}, {"heading": "7 Related Work", "text": "Ensemble learning is widely used for data classification, in the form of Bagging[1], Boosting[6] or heterogeneous classifiers (e.g. combination of SVM, k-NN and Naive Bayes classifiers). Mainly to mitigate the inefficiency issue in ensemble learning, ensemble pruning has been extensively studied. As ensemble pruning itself is computational hard, genetic algorithms[17] and semi-definite programming[16] has been proposed.\nDemir et al.[4] and Ulas\u0327 et al.[15] also consider costs of computations of ensemble or discriminants between classifiers to heuristically compose a pruned ensemble. Some other ensemble pruning approaches such as Margineantu et al. [10] and Mart\u0301\u0131nez-Mun\u0303oz et al. [11] are based on ordered aggregation, which rearrange the order of classifiers in base classifier pool. These approaches pruning ensemble with only one identical trade-off level and are hard modifying for personalized ensemble pruning.\nRecently, Qian et al. [13] proposed an ensemble pruning approach using evolutionary bi-objective optimization, and proves its theoretical advantages over former heuristic or ordered based approaches. However, it doesn\u2019t considers personalized ensemble pruning for crowds nor the objective-mixture optimization when the personalized trade-off levels are known by the centralized aggregator. The concurrent work [5] considers customized accuracy-cost trade-off on a group of Pareto optimal sets, whereas this work focus improving efficiency and effectiveness of personalized trade-off on one Pareto optimal set.\nAnother topic related to multiple ensembles selection is dynamic ensemble selection [8], which dynamically select a classifier ensemble for one class of input samples, instead of for personalized accuracy-cost trade-off levels."}, {"heading": "8 Conclusion", "text": "In this paper, we formulate the problem of personalized classifier ensemble pruning in mobile crowdsourcing, and proposed a framework for the problem based on bi-objective Pareto optimization with objective mixture. In our framework, each participant (the ensemble user) could choose a customized level of trade-off between the ensemble\u2019s classification accuracy and its computational costs, so that the need of energy saving on mobile devices and the need of classification accuracy are balanced for each participant. Both theoretical and experimental results demonstrate the efficiency and effectiveness of our framework. Specifically, the experimental results show that our personalized ensemble pruning framework with objective mixture averagely reduced 40% running time and 50% combined losses simultaneously under same number of iterations."}], "references": [{"title": "Bagging predictors", "author": ["L. Breiman"], "venue": "Machine learning 24(2), 123\u2013140", "citeRegEx": "1", "shortCiteRegEx": null, "year": 1996}, {"title": "Classification and regression trees", "author": ["L. Breiman", "J. Friedman", "C.J. Stone", "R.A. Olshen"], "venue": "CRC press", "citeRegEx": "2", "shortCiteRegEx": null, "year": 1984}, {"title": "On the use of ensemble of classifiers for accelerometer-based activity recognition", "author": ["C. Catal", "S. Tufekci", "E. Pirmit", "G. Kocabag"], "venue": "Applied Soft Computing 37, 1018\u2013 1022", "citeRegEx": "3", "shortCiteRegEx": null, "year": 2015}, {"title": "Cost-conscious classifier ensembles", "author": ["C. Demir", "E. Alpaydin"], "venue": "Pattern Recognition Letters 26(14), 2206\u20132214", "citeRegEx": "4", "shortCiteRegEx": null, "year": 2005}, {"title": "Poster: Accuracy vs", "author": ["L. Fan", "M. Xue", "S. Chen", "L. Xu", "H. Zhu"], "venue": "time cost: Detecting android malware through pareto ensemble pruning. In: Proceedings of the 2016 ACM SIGSAC Conference on Computer and Communications Security. pp. 1748\u20131750. ACM", "citeRegEx": "5", "shortCiteRegEx": null, "year": 2016}, {"title": "A decision-theoretic generalization of on-line learning and an application to boosting", "author": ["Y. Freund", "R.E. Schapire"], "venue": "Journal of computer and system sciences 55(1), 119\u2013139", "citeRegEx": "6", "shortCiteRegEx": null, "year": 1997}, {"title": "Multiple comparator classifier framework for accelerometer-based fall detection and diagnostic", "author": ["R.M. Gibson", "A. Amira", "N. Ramzan", "P. Casaseca-de-la Higuera", "Z. Pervez"], "venue": "Applied Soft Computing 39, 94\u2013103", "citeRegEx": "7", "shortCiteRegEx": null, "year": 2016}, {"title": "From dynamic classifier selection to dynamic ensemble selection", "author": ["A.H. Ko", "R. Sabourin", "A.S. Britto Jr"], "venue": "Pattern Recognition 41(5), 1718\u20131731", "citeRegEx": "8", "shortCiteRegEx": null, "year": 2008}, {"title": "Activity recognition using cell phone accelerometers", "author": ["J.R. Kwapisz", "G.M. Weiss", "S.A. Moore"], "venue": "ACM SigKDD Explorations Newsletter 12(2), 74\u201382", "citeRegEx": "9", "shortCiteRegEx": null, "year": 2011}, {"title": "Pruning adaptive boosting", "author": ["D.D. Margineantu", "T.G. Dietterich"], "venue": "ICML. vol. 97, pp. 211\u2013218. Citeseer", "citeRegEx": "10", "shortCiteRegEx": null, "year": 1997}, {"title": "Pruning in ordered bagging ensembles", "author": ["G. Mart\u0301\u0131nez-Mu\u00f1oz", "A. Su\u00e1rez"], "venue": "ICML. ACM", "citeRegEx": "11", "shortCiteRegEx": null, "year": 2006}, {"title": "Scikit-learn: Machine learning in python", "author": ["F. Pedregosa", "G. Varoquaux", "A. Gramfort", "V. Michel", "B. Thirion", "O. Grisel", "M. Blondel", "P. Prettenhofer", "R. Weiss", "V Dubourg"], "venue": "The Journal of Machine Learning Research 12, 2825\u20132830", "citeRegEx": "12", "shortCiteRegEx": null, "year": 2011}, {"title": "Pareto ensemble pruning", "author": ["C. Qian", "Y. Yu", "Z.H. Zhou"], "venue": "AAAI. pp. 2935\u20132941", "citeRegEx": "13", "shortCiteRegEx": null, "year": 2015}, {"title": "iprotect: Detecting physical assault using smartphone", "author": ["Z. Sun", "S. Tang", "H. Huang", "L. Huang", "Z. Zhu", "H. Guo", "Sun", "Y.e."], "venue": "Wireless Algorithms, Systems, and Applications, pp. 477\u2013486. Springer", "citeRegEx": "14", "shortCiteRegEx": null, "year": 2015}, {"title": "Incremental construction of classifier and discriminant ensembles", "author": ["A. Ula\u015f", "M. Semerci", "O.T. Y\u0131ld\u0131z", "E. Alpayd\u0131n"], "venue": "Information Sciences 179(9), 1298\u20131318", "citeRegEx": "15", "shortCiteRegEx": null, "year": 2009}, {"title": "Ensemble pruning via semi-definite programming", "author": ["Y. Zhang", "S. Burer", "W.N. Street"], "venue": "The Journal of Machine Learning Research 7, 1315\u20131338", "citeRegEx": "16", "shortCiteRegEx": null, "year": 2006}, {"title": "Ensembling neural networks: many could be better than all", "author": ["Z.H. Zhou", "J. Wu", "W. Tang"], "venue": "Artificial intelligence 137(1), 239\u2013263", "citeRegEx": "17", "shortCiteRegEx": null, "year": 2002}, {"title": "Feature engineering for semantic place prediction", "author": ["Y. Zhu", "E. Zhong", "Z. Lu", "Q. Yang"], "venue": "Pervasive and mobile computing 9(6), 772\u2013783", "citeRegEx": "18", "shortCiteRegEx": null, "year": 2013}], "referenceMentions": [{"referenceID": 17, "context": ", place classification[18]) to people-centric scenarios (e.", "startOffset": 22, "endOffset": 26}, {"referenceID": 2, "context": ", activity recognition [3], human fall detection [7][14]).", "startOffset": 23, "endOffset": 26}, {"referenceID": 6, "context": ", activity recognition [3], human fall detection [7][14]).", "startOffset": 49, "endOffset": 52}, {"referenceID": 13, "context": ", activity recognition [3], human fall detection [7][14]).", "startOffset": 52, "endOffset": 56}, {"referenceID": 16, "context": "Hence, ensemble pruning [17] has been proposed to select a subset of all possible classifiers meanwhile avoid harming classification accuracy.", "startOffset": 24, "endOffset": 28}, {"referenceID": 12, "context": "[13] proposed an evolutionary algorithm for non-personalized ensemble pruning with guaranteed theoretical advantages over former approaches, this outstanding work on nonpersonalized ensemble pruning can naturally be embedded into our framework for personalized ensemble pruning.", "startOffset": 0, "endOffset": 4}, {"referenceID": 12, "context": "Fortunately, the evolutionary biobjective solver in [13] shows that expected O(m logm) iterations is sufficient for approximating optimal Pareto set, where m is the number of base classifiers.", "startOffset": 52, "endOffset": 56}, {"referenceID": 12, "context": "The evolutionary bi-objective solver in [13] has been proved to outperform former ensemble pruning approaches, thus the achievable performance of our framework is guaranteed by [13].", "startOffset": 40, "endOffset": 44}, {"referenceID": 12, "context": "The evolutionary bi-objective solver in [13] has been proved to outperform former ensemble pruning approaches, thus the achievable performance of our framework is guaranteed by [13].", "startOffset": 177, "endOffset": 181}, {"referenceID": 12, "context": "In this section, we evaluate the computational overheads and pruning performance of our personalized ensemble pruning framework, with comparison to the state-of-art ensemble pruning approach PEP in [13], which is also used by our framework as the bi-objective solver at line 2 in Algorithm 1 (the differences between PEP and our framework is declared in the next section).", "startOffset": 198, "endOffset": 202}, {"referenceID": 8, "context": "In order to simulate ensemble pruning for crowdsourcing participants that equipped with mobile devices, the human activity recognition data set based on mobile phone accelerometers readings from [9] is used for our experiments.", "startOffset": 195, "endOffset": 198}, {"referenceID": 1, "context": "The pool of m = 20 base CART tree [2] classifiers are generated by Bagging [1] on the training set.", "startOffset": 34, "endOffset": 37}, {"referenceID": 0, "context": "The pool of m = 20 base CART tree [2] classifiers are generated by Bagging [1] on the training set.", "startOffset": 75, "endOffset": 78}, {"referenceID": 11, "context": "We conduct experiments on the scikit-learn [12] platform.", "startOffset": 43, "endOffset": 47}, {"referenceID": 0, "context": "Ensemble learning is widely used for data classification, in the form of Bagging[1], Boosting[6] or heterogeneous classifiers (e.", "startOffset": 80, "endOffset": 83}, {"referenceID": 5, "context": "Ensemble learning is widely used for data classification, in the form of Bagging[1], Boosting[6] or heterogeneous classifiers (e.", "startOffset": 93, "endOffset": 96}, {"referenceID": 16, "context": "As ensemble pruning itself is computational hard, genetic algorithms[17] and semi-definite programming[16] has been proposed.", "startOffset": 68, "endOffset": 72}, {"referenceID": 15, "context": "As ensemble pruning itself is computational hard, genetic algorithms[17] and semi-definite programming[16] has been proposed.", "startOffset": 102, "endOffset": 106}, {"referenceID": 3, "context": "[4] and Ula\u015f et al.", "startOffset": 0, "endOffset": 3}, {"referenceID": 14, "context": "[15] also consider costs of computations of ensemble or discriminants between classifiers to heuristically compose a pruned ensemble.", "startOffset": 0, "endOffset": 4}, {"referenceID": 9, "context": "[10] and Mart\u0301\u0131nez-Mu\u00f1oz et al.", "startOffset": 0, "endOffset": 4}, {"referenceID": 10, "context": "[11] are based on ordered aggregation, which rearrange the order of classifiers in base classifier pool.", "startOffset": 0, "endOffset": 4}, {"referenceID": 12, "context": "[13] proposed an ensemble pruning approach using evolutionary bi-objective optimization, and proves its theoretical advantages over former heuristic or ordered based approaches.", "startOffset": 0, "endOffset": 4}, {"referenceID": 4, "context": "The concurrent work [5] considers customized accuracy-cost trade-off on a group of Pareto optimal sets, whereas this work focus improving efficiency and effectiveness of personalized trade-off on one Pareto optimal set.", "startOffset": 20, "endOffset": 23}, {"referenceID": 7, "context": "Another topic related to multiple ensembles selection is dynamic ensemble selection [8], which dynamically select a classifier ensemble for one class of input samples, instead of for personalized accuracy-cost trade-off levels.", "startOffset": 84, "endOffset": 87}], "year": 2017, "abstractText": "Ensemble learning has been widely employed by mobile applications, ranging from environmental sensing to activity recognitions. One of the fundamental issue in ensemble learning is the trade-off between classification accuracy and computational costs, which is the goal of ensemble pruning. During crowdsourcing, the centralized aggregator releases ensemble learning models to a large number of mobile participants for task evaluation or as the crowdsourcing learning results, while different participants may seek for different levels of the accuracy-cost trade-off. However, most of existing ensemble pruning approaches consider only one identical level of such trade-off. In this study, we present an efficient ensemble pruning framework for personalized accuracy-cost trade-offs via multi-objective optimization. Specifically, for the commonly used linear-combination style of the trade-off, we provide an objectivemixture optimization to further reduce the number of ensemble candidates. Experimental results show that our framework is highly efficient for personalized ensemble pruning, and achieves much better pruning performance with objective-mixture optimization when compared to state-of-art approaches.", "creator": "LaTeX with hyperref package"}}}