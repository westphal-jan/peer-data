{"id": "1702.00159", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "1-Feb-2017", "title": "Robust Order Scheduling in the Fashion Industry: A Multi-Objective Optimization Approach", "abstract": "In the fashion industry, order scheduling focuses on the assignment of production orders to appropriate production lines. In reality, before a new order can be put into production, a series of activities known as pre-production events need to be completed. In addition, in real production process, owing to various uncertainties, the daily production quantity of each order is not always as expected. In this research, by considering the pre-production events and the uncertainties in the daily production quantity, robust order scheduling problems in the fashion industry are investigated with the aid of a multi-objective evolutionary algorithm (MOEA) called nondominated sorting adaptive differential evolution (NSJADE). The experimental results illustrate that it is of paramount importance to consider pre-production events in order scheduling problems in the fashion industry. We also unveil that the existence of the uncertainties in the daily production quantity heavily affects the order scheduling.\n\n\n\n\nIn order to determine whether pre-production events occur in production and its possible impact on the production quantity in production, we consider the relative number of orders placed on the production line and of the number of orders placed on production line and the number of orders placed on production line. Pre-production events are expected to occur in production as well as in production, in order to ensure the quality of production. For instance, during the production period of the production period of the production period of the production period of the production period of the production period of the production period of the production period of the production period of the production period of the production period of the production period of the production period of the production period of the production period of the production period of the production period of the production period of the production period of the production period of the production period of the production period of the production period of the production period of the production period of the production period of the production period of the production period of the production period of the production period of the production period of the production period of the production period of the production period of the production period of the production period of the production period of the production period of the production period of the production period of the production period of the production period of the production period of the production period of the production period of the production period of the production period of the production period of the production period of the production period of the production period of the production period of the production period of the production period of the production period of the production period of the production period of the production period of the production period of the production period of the production period of the production period of", "histories": [["v1", "Wed, 1 Feb 2017 08:33:21 GMT  (767kb)", "http://arxiv.org/abs/1702.00159v1", null]], "reviews": [], "SUBJECTS": "cs.AI cs.NE", "authors": ["wei du", "yang tang", "sunney yung sun leung", "le tong", "athanasios v vasilakos", "feng qian"], "accepted": false, "id": "1702.00159"}, "pdf": {"name": "1702.00159.pdf", "metadata": {"source": "CRF", "title": "Robust Order Scheduling in the Fashion Industry: A Multi-Objective Optimization Approach", "authors": ["Wei Du", "Yang Tang", "Sunney Yung Sun Leung", "Feng Qian"], "emails": ["duwei0203@gmail.com;", "tangtany@gmail.com,", "yangtang@ecust.edu.cn;", "fqian@ecust.edu.cn).", "sunney.leung@polyu.edu.hk;", "tongle0328@gmail.com).", "vasilako@ath.forthnet.gr)."], "sections": [{"heading": null, "text": "ar X\niv :1\n70 2.\n00 15\n9v 1\n[ cs\n.A I]\n1 F\neb 2\n01 7\nIndex Terms\u2014Order scheduling, pre-production events, robust multi-objective optimization, robust multi-objective evolutionary algorithms.\nI. INTRODUCTION\nOrder scheduling is a key decision-making problem in supply chain management of manufacturing industry, and plays an important role in rational resource allocation and utilization, which makes the companies more competitive in the global market [1, 2]. As a typical representative of laborintensive industries, the fashion industry is characterized by short product life cycles, volatile customer demands, rising labor costs, tremendous product varieties, and long supply processes [3]. Therefore, more attention needs to be paid to fashion order scheduling problems.\nFor the past few decades, order scheduling problems in the fashion industry have been widely investigated [4\u20136]. In these researches, it is assumed that all the orders are ready for production when the production process begins. However, in real-world apparel production, a whole series of activities need to be carried out before an order can be put into production. And these activities are known as pre-production events. In the fashion industry, pre-production events include\nW. Du, Y. Tang and F. Qian are with the Key Laboratory of Advanced Control and Optimization for Chemical Processes, Ministry of Education, East China University of Science and Technology, Shanghai 200237, China (email: duwei0203@gmail.com; tangtany@gmail.com, yangtang@ecust.edu.cn; fqian@ecust.edu.cn).\nS. Y. S. Leung and L. Tong are with the Institute of Textile and Clothing, The Hong Kong Polytechnic University, Hong Kong, China (e-mail: sunney.leung@polyu.edu.hk; tongle0328@gmail.com).\nA. V. Vasilakos is with the Department of Computer Science, Electrical and Space Engineering, Lulea University of Technology, Lulea 97187, Sweden (email: vasilako@ath.forthnet.gr).\norder fabric, order trims, sample approval, issue markers, and so on [7]. Multiple parties, e.g., suppliers, manufacturers, and customers, need to collaborate with each other to complete a pre-production event. And negotiations among them are timeconsuming and uncertain, which results in the late completion of some pre-production events and the delay of producing the related order [8]. In addition, industrial data concerning the pre-production process are difficult to collect. Therefore, preproduction events have been largely overlooked in the order scheduling research of the fashion industry, which makes the first incentive of this paper.\nIn recent years, as a powerful optimization tool [9, 10], evolutionary algorithms (EAs) have been introduced to solve the order scheduling problems in the fashion industry [6, 11]. In the studies above, when the schedules were made before the real production, it was assumed that the daily production quantity of each order was fixed. However, in most real-world manufacturing environments of the fashion industry, order scheduling is an ongoing reactive process in which the occurrence of various unexpected disruptions are usually inevitable [12]. These disruptions consist of machine breakdown, operator absenteeism, and so on. Therefore, the daily production quantity of each order is not always as expected in the production process. As a result, the preestablished order schedules are shifted very often after the production starts. However, a frequent modification of order schedules will increase labor and time cost, which may reduce production efficiency and fail to complete the orders before their delivery dates. Therefore, the second incentive of this paper originates from considering robust order schedules, which are not sensitive to the variation of the daily production quantity during the process of the real production.\nFor the past decade and more, robust optimization has gained increasing attention, and has been incorporated into the framework of single-objective evolutionary optimization [13, 14]. In the context of multi-objective optimization, Deb and Gupta [15] did some pioneering works by suggesting two different ways of introducing robustness in multi-objective optimization. Up to now, the integration of robust multiobjective optimization and MOEA has been gradually applied to deal with a variety of applications, such as the welded beam design problem [15] and the controllability of complex neuronal networks [16]. Therefore, in searching for a candidate for robust order schedules in the fashion industry, robust MOEA can be selected as a promising one.\nBased on the above discussion, in this paper, robust order scheduling is presented via introducing robust multi-objective\noptimization into order scheduling problems in the fashion industry. In addition, the pre-production events in apparel manufacturing are also taken into account and the order scheduling problem is modelled as a multi-objective optimization problem. A MOEA called nondominated sorting adaptive differential evolution (NSJADE) is utilized to search the order schedules in the fashion industry that achieve the following three objectives: 1) the schedules can minimize the total preproduction event clashes of all orders; 2) the schedules can minimize the total tardiness of all orders; 3) the schedules are not sensitive to variation of the daily production quantity during the process of real production. The contributions of this paper are mainly threefold: 1) to the best of our knowledge, it is the first attempt in which the pre-production events are considered for the order scheduling research in the fashion industry; 2) robust order schedules are obtained with the aid of robust multi-objective optimization combined with NSJADE; 3) compared with the results obtained by adaptive differential evolution (JADE) and NSJADE without uncertainty, it is revealed that the pre-production events and the existence of the uncertainties in the daily production quantity heavily affect the order scheduling."}, {"heading": "II. PROBLEM DESCRIPTION AND FORMULATION", "text": "In this section, the problem of robust order scheduling is described in detail. The settings of the notations and the variables considered in the problem are on the basis of a business software called Fast React [17], which is specifically for the fashion industry.\nNOMENCLATURE\nProduction line-related notations m the number of production lines Pi the ith production line (1 \u2264 i \u2264 m) Ep,il efficiency of production line Pi for producing order of type Tl Cminsi capacity minutes per day of production line Pi Production order-related notations n the number of production orders Oj the jth production order (1 \u2264 j \u2264 n) Rj product type of order Oj Qj quantity of order Oj Sminsj standard minutes per piece for order Oj Aday,j scheduled starting date of order Oj Fday,j scheduled finishing date of order Oj Dday,j due date of order Oj Cday,j present conservative starting date of order Oj Nj the number of the pre-production events of order Oj Fjk offset days of the kth pre-production event of order Oj (1 \u2264 k \u2264 Nj) Xjk indicates if the kth pre-production event of order Oj\nis finished on day Sday, Xjk = 1; otherwise, Xjk = 0 (1 \u2264 k \u2264 Nj).\nEo,j efficiency of producing order Oj Ptime,j production time of order Oj Ntime,j time needed to reach the next efficiency level for order\nOj\nStime,j time spent on order Oj on the current efficiency level Qjd quantity of order Oj completed on the dth day of processing Oj (1 \u2264 d \u2264 Fday,j \u2212 Aday,j) Qsum,jd total quantity of order Oj completed from the first day\ntill the dth day of processing Oj (1 \u2264 d \u2264 Fday,j \u2212 Aday,j)\nq the number of sub-orders of order Oj Ojr the rth sub-order of order Oj (1 \u2264 r \u2264 q) \u03b1j split percentage of order Oj Other notations Sday the day when making the order schedule Pday the day when the production begins p the number of product types Tl the lth product type (1 \u2264 l \u2264 p) fl(\u00b7) a function indicating the learning curve of product type Tl Ul consecutive days of producing order of type Tl \u03b2 uncertainty factor of daily production quantity"}, {"heading": "A. Problem Description", "text": "The robust order scheduling problem in the fashion industry considers m production lines and n production orders, and n orders are assigned to appropriate lines for production. An illustration is displayed in Fig. 1. In Fig. 1, the order bar represents the duration of producing the related order.\n1) Description of Production Line: The production lines consist of a number of different machines so that a garment can start at the top of the line in its cut state and come off the line once completed. On a production line, the machines are responsible for cutting, embroidery, printing, sewing, pressing and packing, respectively; and sewing is the most timeconsuming process. Since we focus on the impact of preproduction events and the uncertainties in the daily production quantity on the fashion order scheduling, to simplify the problem, we only consider the sewing process during the production in this paper, instead of all the processes. In this research, production lines are product-specific lines, which means that the line\u2019s efficiency is lower than its peak when there is a mismatch of product to production line.\nAn example is provided in Table I to better illustrate the production lines. In Table I, the second and third columns show that P1 is blouse-specific line and P2 is jacket-specific line; if a mismatch of product to production line occurs, the efficiency Ep,12 and Ep,21 will reduce to 80%. The last column gives the value of \u201ccapacity minutes per day\u201d of each line: Cmins1 = 6720 and C mins 2 = 6240.\n2) Description of Production Order: Each order has five attributes, and an example of 2 production orders is given in Table II. For convenience, the day when the production begins Pday is set as day 0 in this paper. \u201cPresent conservative starting date\u201d denotes the earliest safe starting date of this order\u2019s production, which is determined by its pre-production events which have not been finished on the day Sday. More details of this attribute will be explained in Section II-B. \u201cDue date\u201d shows when the order needs to be completed and delivered to customers. The attribute \u201cstandard minutes per piece\u201d is used to represent the workload of the sewing process of each order. In this research, orders can be split into q sub-orders, with the purpose of realizing flexible production; the split percentage is denoted by \u03b1j = [\u03b1j1, \u03b1j2, ..., \u03b1j(q\u22121)]T .\n3) Description of Other Notations: When a new type of product is introduced into production, it takes a period of time for the operators on the production line to get familiar with the production of this type of product. As time goes on, the efficiency of the production line improves day by day as the operators become more familiar with the product and any new manufacturing techniques or skills required. The increase of the efficiency during this period of time is illustrated by \u201clearning curve\u201d (fl(\u00b7)), which is specific according to different types of the product (see Fig. 2). The uncertainties in the daily production quantity are taken into account in this paper, and represented by \u03b2.\nIn the following, the problem formulation is separated into two parts, in which the critical variables concerning preproduction events and the uncertainties in the daily production quantity are explained in detail, respectively.\nB. Variables Regarding Pre-Production Events\nIn the robust order scheduling problems, four variables are related to the launch and the termination of order Oj\u2019s production. They are present conservative starting date of order Oj (Cday,j), due date of order Oj (Dday,j), scheduled starting date of order Oj (Aday,j), and scheduled finishing date of order Oj (Fday,j). Among them, Dday,j is one of the attributes of order Oj, and Aday,j and Fday,j of Oj can be obtained when the schedule is made. For Cday,j, the value is determined by Oj\u2019s pre-production events which have not been finished on the day Sday. In the following, the process of calculating Cday,j is introduced in detail.\nFor each order, a whole series of activities need to be accomplished before the order can be put into production, and these events are called pre-production events. According to pre-production events, we can set up a timetable, which contains the name of events and the number of working days before the start by which each event needs to be finished. An illustration is displayed in the left half of Table III. Some of the events are closely linked, like \u201cLab Dip Submit\u201d and \u201cLab Dip Approval\u201d, and the only requirement to begin \u201cLab Dip Approval\u201d is that \u201cLab Dip Submit\u201d must be finished.\nAs it gets closer to the start of the production, the progress of the pre-production events will be updated. The right half of Table III shows the updated progress of the preproduction events of order Oj when the schedule is made 14 days before the production, i.e., Sday = \u221214. The unfinished pre-production events of Oj are highlighted in grey background. And the earliest safe starting date of producing Oj is determined by the unfinished pre-production event with the largest offset days, e.g., \u201cSample Approval\u201d in Table III. In this case, the earliest safe starting date of producing Oj should be \u221214 + | \u2212 15| = 1, since Sday = \u221214. The method of calculating Cday,j is concluded below.\nFor order Oj, assume that k\u0303th pre-production event is not completed and has the largest value of |Fjk|, that is, |Fj\u0303k| = max(|Fjk| \u00b7 Xjk), where 1 \u2264 k \u2264 Nj. Therefore, order Oj\u2019s present conservative starting date Cday,j is calculated as follows:\nCday,j =\n{\nPday + |Fj\u0303k| \u2212 (Pday \u2212 Sday), if |Fj\u0303k| > Pday \u2212 Sday, Pday, otherwise.\n(1) To sum up, the introduction of pre-production events influences the order\u2019s present conservative starting date, which mainly depends on the order\u2019s pre-production events which have not been finished on the day when making the order schedule.\nRemark 1. In this research, pre-production events are integrated in the scheduling as one of the objective functions. We didn\u2019t consider pre-production events as individual tasks, which was the research paradigm mentioned in other preparation action-related works [18, 19]. The reasons can be summarized as follows: 1) In the manufacturing environment of the fashion industry, production is closely related to preproduction events, and an order cannot be put into production until its pre-production events are all completed; 2) In a schedule, pre-production events influence the starting date of an order, while production determines the finishing date of this order. In addition, the negotiations among multiple parties to fulfill an order\u2019s pre-production events are timeconsuming and uncertain, which means some events cannot be completed as originally planned. Therefore, a dynamic adjustment of the schedules can be made in terms of the realtime updating information of pre-production events, which is a prominent advantage of integrating pre-production events in the order scheduling. Furthermore, in Section IV-B, we will discuss the difference between integrating and not integrating pre-production events in the scheduling. The experimental results will show that pre-production events are closely linked with the production, and have an important impact on the scheduling problems in the fashion industry.\nC. Variables Regarding the Uncertainties in the Daily Production Quantity\nIn a schedule, when order Oj is assigned to production line Pi, Oj\u2019s scheduled finishing date Fday,j can be computed in terms of its scheduled starting date Aday,j and its production time Ptime,j. In this research, the uncertainties in the daily production quantity are taken into consideration, hence the calculation of Ptime,j is related to \u03b2, which is the uncertainty factor of daily production quantity.\nFday,j indicates the date when the production of order Oj is completed, which is planned in the order schedule made on the day Sday. If order Oj is not split into sub-orders during the production, Fday,j is the date when the production of Oj ends:\nFday,j = Aday,j + Ptime,j. (2)\nIf order Oj is split into q sub-orders, Fday,j represents the ending date of producing sub-order Oj\u030cr (1 \u2264 r\u030c \u2264 q) in the schedule,\nAlgorithm 1 Calculation of Fday,j () 1: Begin 2: /* Qsum,jd is the total quantity of order Oj completed from the first day till the\ndth day of processing Oj 3: /* Qj is the quantity of Oj 4: /* Ep,il is the efficiency of production line Pi for producing order of type Tl 5: /* Sminsj is the standard minutes per piece for order Oj 6: /* \u03b2 is the uncertainty factor of daily production quantity 7: /* rand(a, b) uniformly generates a random number belonging to the interval\n(a, b) 8: d = 1, Qsum,jd = 0 9: while Qsum,jd < Qj do\n10: Eo,j = fl(Ul) 11: Qjd = Ntime,j\u00b7Ep,il\u00b7Eo,j\nSminsi \u00b7 (1 + rand(\u2212\u03b2, \u03b2))\n12: Qsum,jd = Qsum,jd + Qjd 13: d = d + 1, Ul = Ul + 1, Ntime,j = Cminsi 14: end while 15: Ptime,j = d \u2212 1 16: Fday,j = Aday,j + Ptime,j 17: End\nwhere Oj\u030cr is the last sub-order to be finished among all the q sub-orders:\nFday,j = Aday,j\u030cr + Ptime,j\u030cr. (3)\nIn the following, we will explain how to calculate the production time of an order. The calculation process is the same no matter whether the order is split. Therefore, we take order Oj as an example, which is not split during the production. Assume that order Oj is of type Tl and processed on production line Pi, and here we have the procedure to calculate Ptime,j.\nFirst, determine the efficiency of producing order Oj: Eo,j and the time needed to reach the next efficiency level for order Oj: Ntime,j. There are two circumstances:\n1) If Oj is not the first order processed on production line Pi, we assume that the order processed right before Oj is order Oj\u0302 (1 \u2264 j\u0302 \u2264 n). If Oj is of the same type as Oj\u0302, the consecutive days of producing order of type Tl: Ul can keep accumulating instead of re-initialization. Then Eo,j can be computed according to Eo,j = fl(Ul). Ntime,j can be obtained by the following equation:\nNtime,j = C mins i \u2212 Stime,\u0302j, (4)\nwhere Stime,\u0302j is the time spent on order Oj\u0302 on its current efficiency level.\n2) If Oj is not the first order processed on production line Pi and Oj is of the different type from Oj\u0302, or Oj is the first order processed on production line Pi, Ul is re-initialized as 1, and Eo,j can be obtained according to Eo,j = fl(Ul). Ntime,j is initialized as Cminsi .\nSecond, after having the values of Eo,j and Ntime,j, we can calculate the value of Fday,j according to Algorithm 1. In Algorithm 1, Line 11 shows how to calculate the quantity of Oj completed on the dth day of processing Oj, which reflects the impact of considering the uncertainties in the daily production quantity. The while loop terminates when the total quantity of order Oj completed from the first day till the dth day of processing Oj reaches the quantity of Oj. Finally, Ptime,j and Fday,j can be obtained.\nIn a word, the uncertainties in the daily production quantity affect the total processing time of the order, and hence has an impact on the order\u2019s scheduled finishing date."}, {"heading": "D. Objective Functions", "text": "The investigated order scheduling problem aims at making robust order schedules in the fashion industry, in which the pre-production events and the uncertainties in the daily production quantity are both considered. In a schedule, if an order is assigned to be processed on a day before the present conservative starting date, we say that a pre-production event clash occurs; if the order is scheduled to be completed after its due date, we say that there is tardiness for delivering this order. Therefore, we have two objectives for the robust order scheduling problems: 1) minimizing the total tardiness of all orders; 2) minimizing the total pre-production event clashes of all orders. In the following, these two objectives are introduced in detail.\nThe first objective is to minimize the total tardiness of all orders, which is described as follows:\nf1 =\nn \u2211\nj=1\nh(DDj \u2212 FDj), (5)\nwhere DDj and FDj are due date and scheduled finishing date of order Oj, respectively. h(\u00b7) is defined as follows:\nh(x) =\n{\n0, if x \u2265 0, \u2212x, otherwise.\n(6)\nThe second objective is to minimize the total pre-production event clashes of all orders, which is expressed as follows:\nf2 =\nn \u2211\nj=1\nh(ADj \u2212 CDj), (7)\nwhere ADj and CDj are scheduled starting date and present conservative starting date of order Oj, respectively. These two objectives determine the assignment of all the orders on the production lines, and they conflict with each other, which means the solution leading to a smaller f1 (less total tardiness) can cause a larger f2 (more total pre-production event clashes). Therefore, the robust order scheduling problem in the fashion industry can be modelled as a multi-objective optimization problem.\nRemark 2. In apparel manufacturing, the production starts as planned even if some pre-production events of individual orders have not been completed, which is realized by moving the orders with unfinished pre-production events to the later stage of the production, and arranging the orders of which the pre-production events are all finished to be produced at first. Fashion order scheduling problems depend much on the progress of the orders\u2019 pre-production events. It is quite often that some events of individual orders may fail to be finished as planned since the negotiation process is full of uncertainty. On the basis of our experience in the fashion industry, the schedules are made a period of time preceding the production, and we keep modifying these schedules according to the dynamic updating information of the pre-production events as production approaching. It is worth mentioning that the intention of this paper is to provide the planners with early warnings of the orders with unfinished pre-production events. And by means of evolutionary algorithms, the schedules can be promptly and intelligently updated."}, {"heading": "III. ROBUST MULTI-OBJECTIVE OPTIMIZATION FOR ORDER SCHEDULING PROBLEMS IN THE FASHION INDUSTRY", "text": "In this section, the concept of robust multi-objective optimization is first provided. Then a nondominated sorting adaptive differential evolution (NSJADE)-based optimization process is proposed to obtain the robust order schedules in the fashion industry."}, {"heading": "A. Robust Multi-Objective Optimization", "text": "As stated in [15], robustness is introduced in multi-objective optimization by means of optimizing the mean effective objective functions instead of optimizing the original objective functions. Hence the robust multi-objective optimization problem can be formulated as follows:\nProblem: A solution x\u2217 is called a multi-objective robust solution, if it is the global feasible Pareto-optimal solution to the following multi-objective minimization problem (defined with respect to a \u03b4-neighborhood of a solution x):\nminimize (f eff1 (x), f eff 2 (x), ..., f eff M (x)), x \u2208 \u2126, (8)\nwhere f effi (x) is defined as follows:\nf effi (x) = 1\n|B\u03b4(x)|\n\u222b\ny\u2208B\u03b4(x) fi(y)dy, (9)\nB\u03b4(x) is a \u03b4-neighborhood of a solution x, |B\u03b4(x)| is the hypervolume of the neighborhood; \u2126 is the feasible decision space, x = [x1, x2, ..., xD]T is a decision vector, and D is the dimension size, representing the number of the decision variables involved in the problem; f eff1 (x), f eff 2 (x), ..., f eff M (x) are M mean effective objective functions for optimization. An illustration of robust solutions is given in Fig. S.1 in the supplementary file.\nFor the robust order scheduling problem in the fashion industry, we set M = 2. And fi(i = 1, 2) is provided in Eqs. (5) and (7), hence the objectives of the problem in this paper are transformed into: f eff1 and f eff 2 . For the calculation of f effi , a practical way is to generate a finite set of H solutions in a randomly or structured manner, which are selected around a \u03b4-neighborhood B\u03b4(x) of a solution x in the decision space; then the value of the mean effective objective function f effi can be calculated by averaging the function values of the H neighboring solutions."}, {"heading": "B. NSJADE-Based Optimization Process", "text": "NSJADE is developed based on two EAs: nondominated sorting genetic algorithm-II (NSGA-II) [20] and adaptive differential evolution (JADE) [21], which aims to combine the advantages of these two EAs. In this research, NSJADE serves as the optimization tool in the optimization process, and the flowchart of NSJADE is provided in Fig. 3. In the optimization process, there are three important issues we need to elaborate: encoding scheme, population initialization, and evaluation of the population. Encoding scheme and population initialization are related to the first box (marked by \u2217) of the flowchart in Fig. 3, evaluation of the population is related to the second and eighth boxes (marked by \u2217) of the flowchart in Fig. 3.\n1) Encoding Scheme: The first step of the optimization process is to encode potential order scheduling solutions into individuals. In this research, a feasible solution needs to be able to determine the assignment of each production order to a proper production line. In addition, an individual should reflect the split information of each order, and the sequence of the orders on the same production line. Hence, each individual consists of three parts: the assignment of each production order to the production line, the split information of each order, and the sequence of the orders on the same production line. Since this research focuses on the impact of pre-production events and the uncertainties in the daily production quantity on the fashion order scheduling, to simplify the problem, we assume that during the production process, each order can be divided into at most two sub-orders. Therefore, the length of an individual is four times the number of the orders: D = 4n. Fig. 4 illustrates the encoding of the individual. In Part A, every two bits represent the production lines to which the suborders of an order are assigned; and the length of Part A is 2n. In Part B, each single bit denotes the split percentage of every order; the length of Part B is n. Part C assigns the label to each order, which determines the sequence of the orders on the same production line; the length of Part C is also n.\nRemark 3. We assume that each order can be divided into at most 2 sub-orders, hence the dimension size of the individual D equals 4n. If we assume that an order can be split into q sub-orders (q > 2), then D = qn + (q \u2212 1)n + n = 2qn. As the value of q increases, which leads to the increase of D, more individuals and generations are needed for NSJADE\nto search for the optimal schedules. When D increases to vastly more than 100 [22], in order to have efficient performance, evolutionary algorithms specially designed for high-dimensional optimization problems are required. On the other hand, it is worth pointing out that learning curve is one of the factors that affect the efficiency of apparel manufacturing. If an order is split into fewer sub-orders, the quantity of each sub-order will increase, which means the operator will repeat the production process of this product for more times, and hence improves the production efficiency. In addition, the increase in the number of sub-orders will raise the likelihood that the neighbouring orders on the same production lines are of different product types, which then lowers the production efficiency and increases the production time of the orders. Therefore, it is not often to split an order into many sub-orders in apparel manufacturing.\n2) Population Initialization: For the initialization of Part A, uniform random integers in the range [1,m] are assigned to each dimension of Part A, where m is the number of the production line. It is worth noting that if certain lines cannot absolutely accept one type of product (the efficiency is 0 for this type of product), then related modifications should be made when initializing Part A. For example, if order 1 cannot be processed on line Pm\u0303 (1 \u2264 m\u0303 \u2264 m), then the first two bits of the encoding will be initialized in the range [1, m\u0303) \u22c3\n(m\u0303,m]. Part B shows the split percentage of each order. To simplify the optimization process, each bit of Part B is selected from [0.2, 0.4, 0.6, 0.8] in a uniformly random way. For initializing Part C, each bit is assigned with a uniform random integer in the range [1, n], where n is the number of the production order.\n3) Evaluation of the Population: After the population initialization, the fitness value f effi (i = 1, 2) of each individual needs to be evaluated. To calculate f effi , H neighbouring points will be selected around the individual within a predefined range. As illustrated in Section II, \u03b2 is set as the uncertainty factor of daily production quantity Qjd. The detailed evaluation process of each individual is explained as follows, which involves six steps:\nStep 1. Split the orders according to the split percentage in Part B of the individual\u2019s encoding if the orders are scheduled to be processed on different production lines in terms of Part A. Step 2. According to Part A of the individual\u2019s encoding, assign the orders or sub-orders to the production lines. Step 3. Based on Part C of the individual\u2019s encoding, determine the sequence of the orders assigned to the same production line. Step 4. Generate H neighbouring points of the individual, and for each neighbouring point, the daily production quantity Qjd can be calculated according to Line 11 in Algorithm 1. Step 5. Calculate the fitness value fi(i = 1, 2) of each neighbouring point with Eqs. (5) and (7). Step 6. Average the fitness values of H neighbouring points, and the fitness value f effi (i = 1, 2) of the individual can be obtained.\nAfter initializing the population, several operations, e.g., fast nondominated sorting, crowding-distance assignment, mutation, crossover, and selection, are carried out. Because of the page limit, the details of these operations are provided in Section S.I in the supplementary file."}, {"heading": "IV. EXPERIMENTS AND ANALYSIS OF RESULTS", "text": ""}, {"heading": "A. Experimental Information", "text": "Because of the page length limit, the experimental setup, including the information of the test data, the production orders and the production lines, is given in Section S.II in the supplementary file.\nThe parameters of NSJADE are set as the same as that in JADE [21]. It should be mentioned that in this paper, we do not use the maximum number of function evaluations (MAX FES) to control the termination of NSJADE. The reason is that MAX FES relies on the value of H , which is the number of the neighbouring points of an individual. In order to simply control the termination of NSJADE, we utilize the maximum number of generations Gmax as the stopping criterion; and Gmax = D \u00b7 \u03be, where D is the dimension size, and \u03be is a predefined parameter, which controls the evolution generations of the algorithm. The value of \u03be is set as 10 according to the analysis in Section S.III in the supplementary file. It is noticed that a differential evolution (DE) algorithm is employed as the search engine of NSJADE; and the population size of DE is recommended as 5 \u00b7 D [23]. Therefore, the population size in this paper is NP = 400, since the dimension size of the problem investigated is 80. In the experiments, the number of the neighbouring points is set as H = 5, and the uncertainty factor of daily production quantity is set as \u03b2 = 0.2. NSJADE is conducted for 30 runs for eliminating discrepancy, and the PFs are sorted out from the solutions obtained after 30 runs."}, {"heading": "B. Significance of Considering Pre-Production Events", "text": "One of the contributions of this research is to consider preproduction events when making the order schedules in the fashion industry. In this subsection, two groups of experiments will be conducted to show the significance of including preproduction events.\nIn the first group of experiments, no pre-production events are taken into consideration, which means that all the orders\nare ready for production after the production begins. The problem is transformed into a single-objective optimization problem, and the only objective is to minimize the total tardiness of all orders. A single-objective evolutionary algorithm JADE [21] is utilized to search the optimal solution for order schedules. We provide the evolution of the average objective value of 30 runs for the problem optimized by JADE when pre-production events are not considered in Fig. 5(a). From Fig. 5(a), it shows that the average objective value drops to 0 within 800 generations, which means that the schedule with no tardiness can be achieved easily.\nIn the second group of experiments, pre-production events are taken into consideration when making the schedule. In realworld production, based on the progress of the orders\u2019 preproduction events, planners make or update order schedules at regular intervals before the production begins. Here, we make the schedules 3 days, 7 days, and 14 days before the production begins, i.e., Sday = \u22123, Sday = \u22127, and Sday = \u221214. The problem is optimized by our proposed NSJADE and the PFs are provided in Fig. 5(b). The results illustrate that the schedule with no pre-production event clashes and no tardiness cannot be obtained when pre-production events are included in the order scheduling. Therefore, it can be concluded that pre-production events have a big impact on the order scheduling problems in the fashion industry, which should not be neglected in the research of order scheduling.\nRemark 4. In multi-objective optimization, the ideal solution denotes an array of the lower bound of all objective functions (for minimization problems) [24]. For the order scheduling problem in this paper, the ideal solution is [0, 0], which means the total tardiness of all orders is 0, and the total pre-production event clashes of all orders are also 0. However, in real-world production, multiple parties, e.g., suppliers, manufacturers and customers, need to collaborate with each other to complete a pre-production event. And negotiations among them are time-consuming and uncertain. In addition, some events are closely linked, which means the only requirement to begin an event is that another event must be finished. Therefore, when making the schedules, the total pre-production event clashes of all orders mostly exist. If we hope that the total clashes become 0, we need to postpone the starting date of certain orders when making the schedule. However, the late starting date of an order might defer its finishing date, which means the tardiness happens. So minimizing the total tardiness of all orders and minimizing the total pre-production event clashes of all orders are two conflicting objectives of the order scheduling problem in this paper. By means of NSJADE, a set of schedules which balance these two objectives can be provided.\nRemark 5. It is worth mentioning that the PFs obtained by NSJADE when Sday = \u22123, Sday = \u22127, and Sday = \u221214 are different. This is because the progress of the orders\u2019 preproduction events will keep updating when the production is approaching, which then influences the present conservative starting date Cday,j of each order. According to Eq. (7), Cday,j is involved in the second objective; therefore, the PFs obtained by NSJADE may be in different shapes when Sday is distinct.\nFrom Fig. 6, it can be noticed that the robust PF for Sday = \u22127 offers the best result when compared with those for Sday = \u22123 and Sday = \u221214; and the higher flexibility (i.e., Sday = \u221214) in the time schedule does not increase the chance for less clashes, which is also caused by the present conservative starting date Cday,j of each order. By taking a look at O1, O2, O3, O7, O9, O11, O12 and O17 in Table S.1 in the supplementary file, we find that Cday,j for Sday = \u221214 (i.e., 6 or 11) is larger than that for Sday = \u22123 (i.e., 0) and Sday = \u22127 (i.e., 0). This means these orders can only be arranged on the 6th or 11th day after the production begins when Sday = \u221214, and we can say more restrictions are put on scheduling these orders, which also explains why the higher flexibility in the time schedule does not decrease the clashes."}, {"heading": "C. Comparison of Non-Robust and Robust Order Schedules by NSJADE", "text": "In this subsection, we will compare the non-robust and robust order schedules obtained in the experiments, which aims at illustrating the significance of introducing robust multiobjective optimization into order scheduling problems in the fashion industry. The results are provided in Fig. 6.\nFrom Fig. 6, it can be observed that the schedules obtained achieve a balance between the two objectives, i.e., minimizing the total tardiness of all orders and minimizing the total preproduction event clashes of all orders. The results unveil that when the daily production quantity is not fixed, which means the uncertainty is considered, the PFs shown in Fig. 6 are different from that of the cases without uncertainty. The differences appear due to the uncertain daily production quantity during the production. In robust schedules, the daily production quantity of each order is allowed to vary within a certain range, and we can say that the robust schedules (represented by blue triangles in Fig. 6) are less sensitive to the variation of each order\u2019s daily production quantity. As a result, robust order schedules can be shifted less often after the production starts than non-robust ones, which saves labor cost and enhances the production efficiency. In addition, based on the robust order schedules obtained by NSJADE, planners\ncan pay close attention to the unfinished pre-production events as early as possible.\nIn the following, we randomly take two of the Pareto solutions obtained in a non-robust scenario as an example, and investigate how the solutions will be affected when uncertainty is considered. In detail, a solution A ((f1, f2) = (1, 5) in the objective space) and a solution B ((f1, f2) = (5, 0) in the objective space) are selected from the PF by NSJADE without uncertainty in Fig. 6(c). The schedules represented by solution A and solution B are marked as schedule SA and schedule SB. To save space, we only list the details of schedule SA in Table IV; the details of schedule SB are provided in Table S.3 in the supplementary file. The figures in the parentheses denote the specific order size after order split.\nIn schedule SA, three orders have the pre-production event clashes or delay in delivery: O7 starts 1 day earlier before all the pre-production events are ready, and finishes 1 day later than its due date; O12 and O16 start 3 days and 1 day earlier before all the pre-production events are ready, respectively. When uncertainty is introduced into schedule SA, we calculate the updated objective values [f eff1 , f eff 2 ], and get [f eff1 , f eff 2 ] = [4, 5]. Three more orders (i.e., O2, O17 and O19) encounter the delay in delivery besides O7, which leads to the increase of the first objective. Similarly, when uncertainty is introduced into schedule SB, we get [f eff1 , f eff 2 ] = [6, 0]. One more order (i.e., O7) encounters the delay in delivery besides O9 and O12, which leads to the increase of the first objective. It can be observed that uncertainty has a big impact on the schedules, and it is meaningful to consider uncertainty in the order scheduling problem."}, {"heading": "D. Effect of \u03b2 on Robust Order Scheduling", "text": "In this subsection, we will study the impact of the uncertainty factor \u03b2 on robust order scheduling. \u03b2 is set as \u03b2 = [0.2, 0.3], and the results are displayed in Fig. 7. From Fig. 7, it can be observed that as \u03b2 increases, the shift in the PF moves away from the original PF, i.e., uncertainty is not considered. This phenomenon is natural, since the increase of \u03b2 brings more uncertainties in the daily production quantity of each order, which then causes more differences from the original PF."}, {"heading": "E. Effect of H on Robust Order Scheduling", "text": "As described in Section III-A, H neighbouring solutions are selected to compute the mean effective objective function\nf effi . Intuitively, if more neighbouring solutions are chosen, the objective values will be closer to the true average values. In the previous experiments of this section, the value of H is set as 5. Here, we depict the effect of using different values of H on robust order scheduling problems in Fig. 8. From Fig. 8, it can be observed that despite having a smaller computational time, the mean effective front using a small H overestimates the true robust front. However, compared with H = 15, the mean effective front with H = 5 can also achieve a satisfactory approximation. In applications, users can choose the values of H according to practical situations."}, {"heading": "F. Comparison with Existing MOEAs", "text": "In order to show the superiority of NSJADE, we compare it with two existing MOEAs: NSGA-II [20] and NSCDE [25]. The results are given in Fig. 9. In this paper, the computational resource is limited (i.e., 800 generations) for each algorithm. Therefore, we need to select the algorithm that is powerful enough to obtain the solutions with better convergence performance with limited computational resource. It can be observed from Fig. 9 that in a fixed period\nof searching, the solutions obtained by NSJADE have the best convergence performance among the three MOEAs; and we give the credit to the powerful search engine of NSJADE: JADE. Furthermore, since boundary points are one of the most important components in a PF, in Table V, we record the mean values of the boundary points of the PF obtained in each run of 30 runs for these three algorithms. The nondominated boundary points are highlighted in gray background. According to the results in Table V, it can be figured out that, 1) all the boundary points in the PF obtained by NSJADE are nondomindated; 2) only half of the boundary points in the PF obtained by NSCDE are nondominated; 3) and none of the boundary points in the PF obtained by NSGA-II are nondominated, which also means that NSJADE offers the best results when compared with NSGA-II and NSCDE.\nThe experiments were carried out on a PC with Intelr CoreTM i7 Processor 3.60GHz CPU and 8GB RAM. The processing time of each generation is 2 seconds, and it takes around 26.67 minutes each run for generating robust order schedules. It is worth mentioning that order scheduling is performed before the production, which can be regarded\nas an off-line scheduling. In addition, if high-performance computers and parallel computing are introduced to make the schedules in the factory, the scheduling time will further reduce. Meanwhile, intelligent order scheduling requires less manpower and fewer resources, which also saves the cost and increases the efficiency."}, {"heading": "V. CONCLUSION", "text": "This paper has tackled the robust order scheduling problems in the fashion industry, which is a significant component of flexible and intelligent supply chain management. Preproduction events in apparel manufacturing are taken into account for the first time, hence the order scheduling problem is modelled as a multi-objective optimization problem. In addition, in this paper, the daily production quantity of each order is assumed to be uncertain according to most real-world manufacturing environment of the fashion industry, which makes the problem into a robust multi-objective optimization problem. And NSJADE is utilized to search the robust order schedules.\nA set of experiments have been carried out. The observations from the experiments show that pre-production events greatly influence the arrangements of the orders in the fashion industry. Moreover, it can be observed that the uncertainty in the daily production quantity of each order has a paramount impact on the order scheduling. The corresponding robust PFs are also provided under various settings of parameters including the uncertainty factor \u03b2 and the number of the neighbouring solutions H . It is found that robust order schedules can be shifted less often after the production starts than non-robust ones, which saves labor cost and enhances the production efficiency. Meanwhile, with the help of robust order schedules, planners can pay close attention to the unfinished pre-production events as early as possible, negotiate earlier with the customers who place the orders about the delay in delivery, or arrange operators to work extra hours for these orders."}, {"heading": "A. Fast Nondominated Sorting and Crowding-Distance Assignment", "text": "In our proposed NSJADE, we keep the fast nondominated sorting and crowding-distance assignment, which are two effective mechanisms presented in NSGA-II [20]. After evaluating the population, a fast nondominated sorting approach is employed to sort the population into different nondomination levels with a lower computational complexity compared to the traditional approach. For each individual, the average distance of two individuals on either side of this individual is calculated along each of the objectives, and the distance is called crowding distance. When two individuals are in the same nondomination level, the individual with a larger value of crowding distance is preferred. For more details of these two mechanisms, one can refer to [20]."}, {"heading": "B. Mutation and Crossover", "text": "In the developed NSJADE, adaptive differential evolution (JADE) is elected as the search engine instead of the nonadaptive genetic algorithm for promoting both exploration and exploitation abilities of the population. Therefore, the mutation and crossover strategies of JADE are adopted in NSJADE. One can refer to [21] for the details of the mutation and crossover strategies."}, {"heading": "C. Selection", "text": "In a single evolution, after each individual in the parent population goes through the mutation and crossover, a new generation needs to be selected from the combined parent and the offspring population. It is assumed that the parent population contains NP individuals; therefore, after a single evolution, there are 2NP individuals (each parent generates one offspring) in the candidate pool. Sort the population into different nondomination levels by means of the fast nondominated sorting approach, and calculate the crowding distance of each individual. The individual with the lower nondomination level and the larger crowding distance is preferred. By following this principle, NP individuals are chosen from the candidate pool as the population of a new generation.\nS.II EXPERIMENTAL SETUP\nIn this section, we introduce the experimental setup in detail, including the information of the test data, the production orders, and the production lines."}, {"heading": "A. Test Data Information", "text": "The test data used for the following experiments are gathered from a business software called Fast React [17]. Fast React is a production planning software for the fashion industry, which considers practical factors in real-world production, like pre-production events, learning effect, etc. And Fast React has been used by global fashion brands, high street retailers and prominent worldwide manufacturers involved in\nthe real business ranging from carpet, cloth and lace weavers to shoe manufacturers, clothing companies and so on. Fast React provides a lot of industrial data collected from their customers, and the data include different types of orders and production lines as well as the information of the orders\u2019 pre-production events. Therefore, these data are utilized as the test data in our research.\nAlthough Fast React simulates the real production in the fashion industry, it does not consider various uncertainties that exist in the real-world manufacturing. In addition, planners are required to manually place the orders on the production lines in Fast React, which is not intelligent. In this research, uncertainties in the daily production quantity are taken into consideration; and robust order schedules can be intelligently obtained by using our proposed NSJADE."}, {"heading": "B. Production Order Information", "text": "Each production order has five attributes: product type, quantity, present conservative starting date, due date, and standard minutes per piece of this order. The detailed descriptions of each attribute can be found in Section II-A. There are total four categories of orders: skirts, blouses, pants and jackets. The learning curves of producing these four types of products are collected from Fast React [17] and provided in Fig. S.2 in the supplementary file. A total of 20 orders are collected for the following experiments. The details of these orders are given in Table S.1 in the supplementary file."}, {"heading": "C. Production Line Information", "text": "As in Fast React [17], there are total 6 production lines considered in the experiments. These production lines are product-specific lines, which means that the line\u2019s efficiency is lower than its peak value when there is a mismatch of product to production line. The details of the production lines are listed in Table S.2 in the supplementary file.\nS.III THE EFFECT OF \u03be ON SEARCH PERFORMANCE\nThe parameter \u03be is to balance the search accuracy and the computational complexity of NSJADE. A large \u03be is apt to enhance the search accuracy and result in a heavy computational complexity; a small \u03be is able to reduce the computational burdens and may bring about unsatisfactory search performance. Therefore, an appropriate tuning of \u03be must be carried out. In this subsection, a set of tests are conducted to select a proper \u03be for the order scheduling problem studied in this paper. We make the order schedule 3 days before the production begins, i.e., Sday = \u22123, and uncertainty is not considered. \u03be is set as [5, 10, 15]. The Pareto fronts (PFs) obtained by NSJADE with three different values of \u03be are provided in Fig. S.3. It can be observed that the PFs overlap completely when \u03be = 10 and \u03be = 15, and the solutions on these two PFs dominate the solutions on the PF when \u03be = 5. As a result, in order to achieve a balance between search accuracy and computational complexity, we select \u03be = 10 for NSJADE in this paper.\nTABLE S.1 THE DETAILS OF THE 20 PRODUCTION ORDERS COLLECT FROM FAST REACT.\nProduction Order No. Product Type Quantity Present Conservative Starting Date (Sday=-3, -7, -14) Due Date Standard Minutes\nPer Piece 1 Skirts 870 0, 0, 6 10 14.20 2 Skirts 700 0, 0, 6 7 18.20 3 Blouses 800 0, 0, 6 11 18.20 4 Skirts 500 0, 3, 0 9 18.20 5 Skirts 1000 0, 0, 0 11 16.70 6 Skirts 1000 7, 3, 0 10 16.70 7 Blouses 800 0, 0, 6 7 32.20 8 Jackets 850 12, 8, 1 15 54.60 9 Skirts 800 0, 0, 6 10 16.70\n10 Pants 780 12, 8, 1 15 34.00 11 Blouses 1000 0, 0, 11 15 15.00 12 Jackets 1000 0, 0, 6 8 53.78 13 Skirts 400 22, 18, 11 24 26.50 14 Blouses 2000 0, 13, 6 15 12.60 15 Blouses 1000 4, 0, 0 11 12.60 16 Jackets 500 12, 8, 1 18 44.10 17 Skirts 800 0, 0, 11 15 20.55 18 Skirts 800 0, 0, 0 19 20.55 19 Jackets 700 0, 18, 11 20 44.10 20 Blouses 3000 17, 13, 6 19 12.60\nTABLE S.2 THE DETAILS OF THE 6 PRODUCTION LINES COLLECTED FROM FAST REACT.\nProduction Line No. Efficiency for Skirts/Pants (%) Efficiency for Blouses (%) Efficiency for Jackets (%) Capacity (mins/day)\n1 100 80 80 6720 2 100 80 80 6720 3 80 100 80 6240 4 80 100 80 6240 5 80 80 100 6720 6 80 80 100 6720\nTABLE S.3 THE DETAILS OF THE ORDER ASSIGNMENTS ON 6 PRODUCTION LINES IN SCHEDULE SB.\nProduction Line No. Order Assignments\n1 O5(800), O18(640), O2(560), O1(870), O9(800),\nO17(800)\n2 O6(400), O10(624), O2(140), O3(320), O14(800),\nO11(1000), O13(400)\n3 O5(200), O6(600), O15(400), O7(320), O14(1200),\nO20(1200)\n4 O18(160), O10(156), O15(600), O7(480), O3(480), O20(1800) 5 O4(300), O16(200), O12(600), O8(170) 6 O4(200), O16(300), O12(400), O8(680), O19(700)\n(a) (b)\nFig. S.1. An illustration of robust solutions from decision space to objective space. Solution A is more robust to perturbations in variable than solution B when two objectives f1 and f2 are optimized.\n5 10 15 20\nday\n20\n40\n60\n80\n100\ne ff ic\nie n c y (\n% )\n(a)\n5 10 15 20\nday\n40\n60\n80\n100\ne ff\nic ie\nn c y (\n% )\n(b)\n5 10 15 20\nday\n20\n40\n60\n80\n100\ne ff ic\nie n c y (\n% )\n(c)\nFig. S.2. The learning curves of producing different products. (a) Leaning curve of producing skirts and pants; (b) Learning curve of producing blouses; (c) Learning curve of producing jackets.\n0 5 10\nf1\n0\n2\n4\n6\n8\nf 2\n\u03be = 5 \u03be = 10 \u03be = 15\nFig. S.3. The Pareto fronts sorted out from the solutions obtained after 30 runs by NSJADE when \u03be = [5, 10, 15]."}], "references": [{"title": "Early order completion contract approach to minimize the impact of demand uncertainty on supply chains", "author": ["H.K. Chan", "F.T. Chan"], "venue": "IEEE Transactions on Industrial Informatics, vol. 2, no. 1, pp. 48\u201358, 2006.", "citeRegEx": "1", "shortCiteRegEx": null, "year": 2006}, {"title": "Automated design of production scheduling heuristics: A review", "author": ["J. Branke", "S. Nguyen", "C. Pickardt", "M. Zhang"], "venue": "IEEE Transactions on Evolutionary Computation, vol. 20, no. 1, pp. 110\u2013124, 2016.", "citeRegEx": "2", "shortCiteRegEx": null, "year": 2016}, {"title": "The US fashion industry: a supply chain review", "author": ["A. \u015een"], "venue": "International Journal of Production Economics, vol. 114, no. 2, pp. 571\u2013593, 2008.", "citeRegEx": "3", "shortCiteRegEx": null, "year": 2008}, {"title": "Order assignment and scheduling in a supply chain", "author": ["Z.-L. Chen", "G. Pundoor"], "venue": "Operations Research, vol. 54, no. 3, pp. 555\u2013572, 2006.", "citeRegEx": "4", "shortCiteRegEx": null, "year": 2006}, {"title": "Modeling and pareto optimization of multi-objective order scheduling problems in production planning", "author": ["Z. Guo", "W.K. Wong", "Z. Li", "P. Ren"], "venue": "Computers & Industrial Engineering, vol. 64, no. 4, pp. 972\u2013 986, 2013.", "citeRegEx": "5", "shortCiteRegEx": null, "year": 2013}, {"title": "Intelligent multi-objective decision-making model with RFID technology for production planning", "author": ["W.-K. Wong", "Z. Guo", "S. Leung"], "venue": "International Journal of Production Economics, vol. 147, pp. 647\u2013658, 2014.", "citeRegEx": "6", "shortCiteRegEx": null, "year": 2014}, {"title": "From evolutionary computation to the evolution of things", "author": ["A.E. Eiben", "J. Smith"], "venue": "Nature, vol. 521, no. 7553, pp. 476\u2013482, 2015.", "citeRegEx": "9", "shortCiteRegEx": null, "year": 2015}, {"title": "Differential evolution with event-triggered impulsive control", "author": ["W. Du", "S.Y.S. Leung", "Y. Tang", "A.V. Vasilakos"], "venue": "IEEE Transactions on Cybernetics, vol. 47, no. 1, pp. 244\u2013257, 2017.", "citeRegEx": "10", "shortCiteRegEx": null, "year": 2017}, {"title": "A hybrid intelligent model for order allocation planning in make-to-order manufacturing", "author": ["Z. Guo", "W.K. Wong", "S. Leung"], "venue": "Applied Soft Computing, vol. 13, no. 3, pp. 1376\u20131390, 2013.", "citeRegEx": "11", "shortCiteRegEx": null, "year": 2013}, {"title": "A survey of dynamic scheduling in manufacturing systems", "author": ["D. Ouelhadj", "S. Petrovic"], "venue": "Journal of Scheduling, vol. 12, no. 4, pp. 417\u2013 431, 2009.", "citeRegEx": "12", "shortCiteRegEx": null, "year": 2009}, {"title": "Trade-off between performance and robustness: an evolutionary multiobjective approach", "author": ["Y. Jin", "B. Sendhoff"], "venue": "Evolutionary Multi- Criterion Optimization, pp. 237\u2013251, Springer, 2003.", "citeRegEx": "13", "shortCiteRegEx": null, "year": 2003}, {"title": "Evolutionary optimization in uncertain environments-a survey", "author": ["Y. Jin", "J. Branke"], "venue": "IEEE Transactions on Evolutionary Computation, vol. 9, no. 3, pp. 303\u2013317, 2005.", "citeRegEx": "14", "shortCiteRegEx": null, "year": 2005}, {"title": "Introducing robustness in multi-objective optimization", "author": ["K. Deb", "H. Gupta"], "venue": "Evolutionary Computation, vol. 14, no. 4, pp. 463\u2013494, 2006.", "citeRegEx": "15", "shortCiteRegEx": null, "year": 2006}, {"title": "Robust multiobjective controllability of complex neuronal networks", "author": ["Y. Tang", "H. Gao", "W. Du", "J. Lu", "A. Vasilakos", "J. Kurths"], "venue": "IEEE/ACM Transactions on Computational Biology and Bioinformatics, vol. 13, no. 4, pp. 778\u2013791, 2016.", "citeRegEx": "16", "shortCiteRegEx": null, "year": 2016}, {"title": "How many suppliers are best? A decision-analysis approach", "author": ["P.D. Berger", "A. Gerstenfeld", "A.Z. Zeng"], "venue": "Omega, vol. 32, no. 1, pp. 9\u201315, 2004.", "citeRegEx": "18", "shortCiteRegEx": null, "year": 2004}, {"title": "Joint supplier selection and scheduling of customer orders under disruption risks: Single vs. dual sourcing", "author": ["T. Sawik"], "venue": "Omega, vol. 43, pp. 83\u2013 95, 2014.", "citeRegEx": "19", "shortCiteRegEx": null, "year": 2014}, {"title": "A fast and elitist multiobjective genetic algorithm: NSGA-II", "author": ["K. Deb", "A. Pratap", "S. Agarwal", "T. Meyarivan"], "venue": "IEEE Transactions on Evolutionary Computation, vol. 6, no. 2, pp. 182\u2013197, 2002.", "citeRegEx": "20", "shortCiteRegEx": null, "year": 2002}, {"title": "JADE: adaptive differential evolution with optional external archive", "author": ["J. Zhang", "A.C. Sanderson"], "venue": "IEEE Transactions on Evolutionary Computation, vol. 13, no. 5, pp. 945\u2013958, 2009.", "citeRegEx": "21", "shortCiteRegEx": null, "year": 2009}, {"title": "A competitive swarm optimizer for large scale optimization", "author": ["R. Cheng", "Y. Jin"], "venue": "IEEE transactions on cybernetics, vol. 45, no. 2, pp. 191\u2013 204, 2015.", "citeRegEx": "22", "shortCiteRegEx": null, "year": 2015}, {"title": "Differential evolution: a survey of the stateof-the-art", "author": ["S. Das", "P.N. Suganthan"], "venue": "IEEE Transactions on Evolutionary Computation, vol. 15, no. 1, pp. 4\u201331, 2011.", "citeRegEx": "23", "shortCiteRegEx": null, "year": 2011}, {"title": "Multi-objective optimization using evolutionary algorithms", "author": ["K. Deb"], "venue": null, "citeRegEx": "24", "shortCiteRegEx": "24", "year": 2001}], "referenceMentions": [{"referenceID": 0, "context": "Order scheduling is a key decision-making problem in supply chain management of manufacturing industry, and plays an important role in rational resource allocation and utilization, which makes the companies more competitive in the global market [1, 2].", "startOffset": 245, "endOffset": 251}, {"referenceID": 1, "context": "Order scheduling is a key decision-making problem in supply chain management of manufacturing industry, and plays an important role in rational resource allocation and utilization, which makes the companies more competitive in the global market [1, 2].", "startOffset": 245, "endOffset": 251}, {"referenceID": 2, "context": "As a typical representative of laborintensive industries, the fashion industry is characterized by short product life cycles, volatile customer demands, rising labor costs, tremendous product varieties, and long supply processes [3].", "startOffset": 229, "endOffset": 232}, {"referenceID": 3, "context": "For the past few decades, order scheduling problems in the fashion industry have been widely investigated [4\u20136].", "startOffset": 106, "endOffset": 111}, {"referenceID": 4, "context": "For the past few decades, order scheduling problems in the fashion industry have been widely investigated [4\u20136].", "startOffset": 106, "endOffset": 111}, {"referenceID": 5, "context": "For the past few decades, order scheduling problems in the fashion industry have been widely investigated [4\u20136].", "startOffset": 106, "endOffset": 111}, {"referenceID": 6, "context": "In recent years, as a powerful optimization tool [9, 10], evolutionary algorithms (EAs) have been introduced to solve the order scheduling problems in the fashion industry [6, 11].", "startOffset": 49, "endOffset": 56}, {"referenceID": 7, "context": "In recent years, as a powerful optimization tool [9, 10], evolutionary algorithms (EAs) have been introduced to solve the order scheduling problems in the fashion industry [6, 11].", "startOffset": 49, "endOffset": 56}, {"referenceID": 5, "context": "In recent years, as a powerful optimization tool [9, 10], evolutionary algorithms (EAs) have been introduced to solve the order scheduling problems in the fashion industry [6, 11].", "startOffset": 172, "endOffset": 179}, {"referenceID": 8, "context": "In recent years, as a powerful optimization tool [9, 10], evolutionary algorithms (EAs) have been introduced to solve the order scheduling problems in the fashion industry [6, 11].", "startOffset": 172, "endOffset": 179}, {"referenceID": 9, "context": "However, in most real-world manufacturing environments of the fashion industry, order scheduling is an ongoing reactive process in which the occurrence of various unexpected disruptions are usually inevitable [12].", "startOffset": 209, "endOffset": 213}, {"referenceID": 10, "context": "For the past decade and more, robust optimization has gained increasing attention, and has been incorporated into the framework of single-objective evolutionary optimization [13, 14].", "startOffset": 174, "endOffset": 182}, {"referenceID": 11, "context": "For the past decade and more, robust optimization has gained increasing attention, and has been incorporated into the framework of single-objective evolutionary optimization [13, 14].", "startOffset": 174, "endOffset": 182}, {"referenceID": 12, "context": "In the context of multi-objective optimization, Deb and Gupta [15] did some pioneering works by suggesting two different ways of introducing robustness in multi-objective optimization.", "startOffset": 62, "endOffset": 66}, {"referenceID": 12, "context": "Up to now, the integration of robust multiobjective optimization and MOEA has been gradually applied to deal with a variety of applications, such as the welded beam design problem [15] and the controllability of complex neuronal networks [16].", "startOffset": 180, "endOffset": 184}, {"referenceID": 13, "context": "Up to now, the integration of robust multiobjective optimization and MOEA has been gradually applied to deal with a variety of applications, such as the welded beam design problem [15] and the controllability of complex neuronal networks [16].", "startOffset": 238, "endOffset": 242}, {"referenceID": 14, "context": "We didn\u2019t consider pre-production events as individual tasks, which was the research paradigm mentioned in other preparation action-related works [18, 19].", "startOffset": 146, "endOffset": 154}, {"referenceID": 15, "context": "We didn\u2019t consider pre-production events as individual tasks, which was the research paradigm mentioned in other preparation action-related works [18, 19].", "startOffset": 146, "endOffset": 154}, {"referenceID": 12, "context": "As stated in [15], robustness is introduced in multi-objective optimization by means of optimizing the mean effective objective functions instead of optimizing the original objective functions.", "startOffset": 13, "endOffset": 17}, {"referenceID": 16, "context": "NSJADE is developed based on two EAs: nondominated sorting genetic algorithm-II (NSGA-II) [20] and adaptive differential evolution (JADE) [21], which aims to combine the advantages of these two EAs.", "startOffset": 90, "endOffset": 94}, {"referenceID": 17, "context": "NSJADE is developed based on two EAs: nondominated sorting genetic algorithm-II (NSGA-II) [20] and adaptive differential evolution (JADE) [21], which aims to combine the advantages of these two EAs.", "startOffset": 138, "endOffset": 142}, {"referenceID": 18, "context": "When D increases to vastly more than 100 [22], in order to have efficient performance, evolutionary algorithms specially designed for high-dimensional optimization problems are required.", "startOffset": 41, "endOffset": 45}, {"referenceID": 17, "context": "The parameters of NSJADE are set as the same as that in JADE [21].", "startOffset": 61, "endOffset": 65}, {"referenceID": 19, "context": "It is noticed that a differential evolution (DE) algorithm is employed as the search engine of NSJADE; and the population size of DE is recommended as 5 \u00b7 D [23].", "startOffset": 157, "endOffset": 161}, {"referenceID": 17, "context": "A single-objective evolutionary algorithm JADE [21] is utilized to search the optimal solution for order schedules.", "startOffset": 47, "endOffset": 51}, {"referenceID": 20, "context": "In multi-objective optimization, the ideal solution denotes an array of the lower bound of all objective functions (for minimization problems) [24].", "startOffset": 143, "endOffset": 147}, {"referenceID": 3, "context": "When uncertainty is introduced into schedule SA, we calculate the updated objective values [f eff 1 , f eff 2 ], and get [f eff 1 , f eff 2 ] = [4, 5].", "startOffset": 144, "endOffset": 150}, {"referenceID": 4, "context": "When uncertainty is introduced into schedule SA, we calculate the updated objective values [f eff 1 , f eff 2 ], and get [f eff 1 , f eff 2 ] = [4, 5].", "startOffset": 144, "endOffset": 150}, {"referenceID": 5, "context": "Similarly, when uncertainty is introduced into schedule SB, we get [f eff 1 , f eff 2 ] = [6, 0].", "startOffset": 90, "endOffset": 96}, {"referenceID": 16, "context": "In order to show the superiority of NSJADE, we compare it with two existing MOEAs: NSGA-II [20] and NSCDE [25].", "startOffset": 91, "endOffset": 95}], "year": 2017, "abstractText": "In the fashion industry, order scheduling focuses on the assignment of production orders to appropriate production lines. In reality, before a new order can be put into production, a series of activities known as pre-production events need to be completed. In addition, in real production process, owing to various uncertainties, the daily production quantity of each order is not always as expected. In this research, by considering the pre-production events and the uncertainties in the daily production quantity, robust order scheduling problems in the fashion industry are investigated with the aid of a multi-objective evolutionary algorithm (MOEA) called nondominated sorting adaptive differential evolution (NSJADE). The experimental results illustrate that it is of paramount importance to consider pre-production events in order scheduling problems in the fashion industry. We also unveil that the existence of the uncertainties in the daily production quantity heavily affects the order scheduling.", "creator": "LaTeX with hyperref package"}}}