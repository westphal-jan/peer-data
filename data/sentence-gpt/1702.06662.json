{"id": "1702.06662", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "22-Feb-2017", "title": "An Integer Programming Model for Binary Knapsack Problem with Value-Related Dependencies among Elements", "abstract": "Binary Knapsack Problem (BKP) is to select a subset of an element (item) set with the highest value while keeping the total weight within the capacity of the knapsack. This paper presents an integer programming model for a variation of BKP where the value of each element may depend on selecting or ignoring other elements. Strengths of such Value-Related Dependencies are assumed to be imprecise and hard to specify. To capture this imprecision, we have proposed modeling value-related dependencies using fuzzy graphs and their algebraic structure. This paper uses a number of techniques to define the number of dependent dependencies in each of the three major bkp functions described above.", "histories": [["v1", "Wed, 22 Feb 2017 03:14:05 GMT  (7kb)", "http://arxiv.org/abs/1702.06662v1", null]], "reviews": [], "SUBJECTS": "cs.AI", "authors": ["davoud mougouei", "david m w powers", "asghar moeini"], "accepted": false, "id": "1702.06662"}, "pdf": {"name": "1702.06662.pdf", "metadata": {"source": "META", "title": "An Integer Programming Model for Binary Knapsack Problem with Value-Related Dependencies among Elements", "authors": ["Davoud Mougouei", "David M. W. Powers", "Asghar Moeini"], "emails": ["davoud.mougouei@inders.edu.au", "david.powers@inders.edu.au", "asghar.moeini@inders.edu.au"], "sections": [{"heading": null, "text": "ar X\niv :1\n70 2.\n06 66\n2v 1\n[ cs\n.A I]\n2 2\nFe b\n20 17\nBinary Knapsack Problem (BKP) is to select a subset of an element\n(item) set with the highest value while keeping the total weight\nwithin the capacity of the knapsack. is paper presents an inte-\nger programming model for a variation of BKP where the value of\neach element may depend on selecting or ignoring other elements.\nStrengths of such Value-Related Dependencies are assumed to be im-\nprecise and hard to specify. To capture this imprecision, we have\nproposedmodeling value-related dependencies using fuzzy graphs\nand their algebraic structure.\nKEYWORDS\nBinary Knapsack Problem, Integer Programming, Dependency, Value"}, {"heading": "1 MODELING DEPENDENCIES", "text": "Fuzzy graphs have demonstrated to properly capture imprecision\nof real world problems [4, 6]. Hence, we have used algebraic struc-\nture of fuzzy graphs for capturing the imprecision associated with\nstrengths of value-related dependencies. We have specially modi-\ned the classical de nition of fuzzy graphs in order to consider not\nonly the strengths but also the qualities (positive or negative) [5\u20137]\nof value-related dependencies (De nition 1).\nDe nition 1. Value Dependency Graph (VDG). A VDG is a signed\ndirected fuzzy graph [11] G = (E,\u03c3 , \u03c1) in which a non-empty set\nof elements E : {e1, ..., en} constitute the graph nodes. Also, the qualitative function \u03c3 : E \u00d7 E \u2192 {+,\u2212,\u00b1} and the membership\nfunction \u03c1 : E\u00d7E \u2192 [0, 1] denote qualities and strengths of explicit\nvalue-related dependencies receptively. As such, a pair of elements\n(ei , ej ) with \u03c1i, j , 0 and \u03c3i, j , \u00b1 denotes an explicit value-related dependency from ei to ej . It is clear that we have \u03c1i, j = 0 if the value of an element ei is not explicitly in uenced by selecting or ignoring ej . In such cases we have \u03c3i, j = \u00b1 where \u00b1 denotes the quality of (ei , ej ) is non-speci ed.\nDe nition 2. Value-Related Dependencies. A value-related depen-\ndency in a VDGG = (E,\u03c3 , \u03c1) is de ned as a sequence of elements di : ( e(1), ..., e(k) ) such that for each e(j) in di , 2 \u2264 j \u2264 k , we have \u03c1j\u22121, j , 0. A consecutive pair ( e(j \u2212 1), e(j) ) speci es an explicit value-related dependency from e(j \u2212 1) to e(j).\ne strength of a value-related dependency di : ( e(1), ..., e(k) )\nis calculated by (1). at is, the strength of a value-related depen-\ndency equals to the strength of the weakest of all the k \u2212 1 explicit\nvalue-related dependencies along the path. \u2227 denote Zadeh\u2019s [14]\nfuzzy AND operator that is taking minimum over operands.\n\u2200di : ( e(1), ..., e(k) ) , \u03c1(di ) =\nk \u2227\nj=2\n\u03c1j\u22121, j (1)\ne quality of a value-related dependency di : ( e(1), ..., e(k) )\non the other hand, is calculated through employing qualitative se-\nquential inference [2, 3, 12] as given by (2).\n\u2200di : ( e(1), ..., e(k) ) , \u03c3 (di ) =\nk \u220f\nj=2\n\u03c3j\u22121, j (2)\nLet D = {d1,d2, ...,dm} be the set of all explicit and implicit value-related dependencies from ei \u2208 E to ej \u2208 E in a VDG G = (E,\u03c3 , \u03c1). As explained earlier, positive and negative value-related\ndependencies can simultaneously exist between a pair of elements\nei and ej . e strength of all positive value-related dependencies from ei to ej is denoted by \u03c1 +\u221e i, j and calculated by (3), that is to nd the strength of the strongest positive value-related dependency [8]\namong all the positive value-related dependencies from ei to ej . Fuzzy operators \u2227 and \u2228 denote Zadeh\u2019s [14] fuzzy AND (tak-\ning minimum) and fuzzy OR (taking maximum) operations respec-\ntively. In a similar way, the strength of all negative value-rrelated dependencies from ei to ej is denoted by \u03c1 \u2212\u221e i, j and calculated by (4).\n\u03c1+\u221ei, j = \u2228\ndm \u2208D \u03c3 (dm )=+\n\u03c1(dm) (3)\n\u03c1\u2212\u221ei, j = \u2228\ndm \u2208D \u03c3 (dm )=\u2212\n\u03c1(dm) (4)\nIi, j = \u03c1 +\u221e i, j \u2212 \u03c1 \u2212\u221e i, j (5)\ne overall strength of all positive and negative value-related de-\npendencies from ei to ej , is referred to as the Overall In uence of ej on the value of ei and denoted by Ii, j . As given by (5), Ii, j \u2208 [\u22121, 1] is calculated by subtracting the strength of all negative value-related dependencies (\u03c1\u2212\u221ei, j ) from the strength of all positive value-related dependencies (\u03c1+\u221ei, j ). Ii, j > 0 states that ej will ultimately in uence the value of ei in a positive way whereas Ii, j < 0 indicates that the ultimate in uence of ej on ei is negative."}, {"heading": "2 THE INTEGER PROGRAMMING MODEL", "text": "e extent to which the value of an element ei is in uenced by ignoring positive value-related dependencies and/or selecting nega-\ntive value-related dependencies ofei , is referred to as the penalty [6] of ei and denoted by pi . pi is calculated by taking supremum over the overall in uences of all ignored positive dependencies and se-\nlected negative dependencies of ei as given by (6). In this equation, n denotes the total number of elements (E : {e1, ..., en}) and xj speci es whether an elements ej is selected (xj = 1) or not (xj = 0).\npi =\nn \u2228\nj=1 j,i\n(\n|Ii, j | + (1 \u2212 2xj )Ii, j\n2\n)\n, xj \u2208 {0, 1} (6)\nEquations (7)-(10) give our proposed integer linear programming\nmodel where xi is a selection variable denoting whether an element ei \u2208 E : {e1, ..., en} is selected (xi = 1) or not (xi = 0). Also, wi and vi denote weight and value of an element ei respectively whileW speci es the capacity of the knapsack. Moreover, pi denotes the penalty of an element ei which is the extent to which ignoring positive value-related dependencies and/or selecting neg-\native value-related dependencies of ei in uence the value of ei .\nMaximize\nn \u2211\ni=1\nxi (1 \u2212 pi )vi (7)\nSubject to\nn \u2211\ni=1\nwixi \u2264W (8)\npi \u2265\n(\n|Ii, j | + (1 \u2212 2xj )Ii, j\n2\n)\n, i , j = 1, ...,n (9)\nxi \u2208 {0, 1}, i = 1, ...,n (10)\nFor an element ei , pi is a function of xj and Ii, j that is pi = f (xj , Ii, j ). Hence, objective function of (7) can be reformulated as \u2211n i=1 xivi \u2212 f (xj , Ii, j )xivi with a quadratic non-linear expression [1] exp = xi f (xj , Ii, j )vi which shows the integer programming model (7)-(10) is a non-linear model which cannot be solved\ne ciently nor can it be approximated e ciently [1, 9]. Integer lin-\near programming models on the other hand, are known to be solv-\nable e ciently due to the advances in tools [10].\nHence, we have converted (7) to its corresponding linear form\nby substituting the non-linear expression xipi with the linear expression yi (yi = xipi ). As such, either a : (xi = 0) \u2192 (yi = 0), or b : (xi = 1) \u2192 (yi = pi ) can occur. In order to capture the relation betweenpi andyi in a linear form, we have introduced an auxiliary variable \u0434i = {0, 1} and Constraints (14)-(18) are added to the initial model. As such, we have either (\u0434i = 0) \u2192 a, or (\u0434i = 1) \u2192 b .\ne resulting model as given by (11)-(18) is an integer linear model.\nMaximize\nn \u2211\ni=1\nxivi \u2212 yivi (11)\nSubject to\nn \u2211\ni=1\nwixi \u2264W (12)\npi \u2265\n(\n|Ii, j | + (1 \u2212 2xj )Ii, j\n2\n)\n, i , j = 1, ...,n (13)\n\u2212 \u0434i \u2264 xi \u2264 \u0434i , i = 1, ...,n (14)\n1 \u2212 (1 \u2212 \u0434i ) \u2264 xi \u2264 1 + (1 \u2212 \u0434i ), i = 1, ...,n (15)\n\u2212 \u0434i \u2264 yi \u2264 \u0434i , i = 1, ...,n (16)\n\u2212 (1 \u2212 \u0434i ) \u2264 (yi \u2212 pi ) \u2264 (1 \u2212 \u0434i ), i = 1, ...,n (17)\nxi ,yi ,\u0434i \u2208 {0, 1}, i = 1, ...,n (18)"}, {"heading": "3 SUMMARY", "text": "In this paper we presented an integer programming model for solv-\ning a variation of binary knapsack problemwhere value of each el-\nement may be in uenced by selecting or ignoring other elements.\ne strengths of these in uences (value-related dependencies) are\nassumed to be imprecise and hard to express. Algebraic structure\nof fuzzy graphs was used for capturing the imprecision associated\nwith strengths of value-related dependencies."}], "references": [{"title": "\u008badratic assignment problems", "author": ["R.E. Burkard"], "venue": "European Journal of Operational Research, 15(3):283\u2013289,", "citeRegEx": "1", "shortCiteRegEx": null, "year": 1984}, {"title": "A qualitative physics based on con\u0083uences", "author": ["J. De Kleer", "J.S. Brown"], "venue": "Arti\u0080cial intelligence, 24(1):7\u201383,", "citeRegEx": "2", "shortCiteRegEx": null, "year": 1984}, {"title": "Dependency analysis in constraint negotiation", "author": ["A. Kusiak", "J. Wang"], "venue": "Systems, Man and Cybernetics, IEEE Transactions on, 25(9):1301\u20131313,", "citeRegEx": "3", "shortCiteRegEx": null, "year": 1995}, {"title": "Applications of fuzzy graphs", "author": ["J.N. Mordeson", "P.S. Nair"], "venue": "J. N. Mordeson and P. S. Nair, editors, Fuzzy Graphs and Fuzzy Hypergraphs, number 46, pages 83\u2013133. PhysicaVerlag HD, Jan.", "citeRegEx": "4", "shortCiteRegEx": null, "year": 2000}, {"title": "Factoring requirement dependencies in so\u0089ware requirement selection using graphs and integer programming", "author": ["D. Mougouei"], "venue": "Proceedings of the 31st IEEE/ACM International Conference on Automated So\u0087ware Engineering, pages 884\u2013887. ACM,", "citeRegEx": "5", "shortCiteRegEx": null, "year": 2016}, {"title": "Dependency-aware so\u0089ware release planning through mining user preferences", "author": ["D. Mougouei", "D. Powers"], "venue": "arXiv preprint arXiv:1702.05592,", "citeRegEx": "7", "shortCiteRegEx": null, "year": 2017}, {"title": "Fuzzy graphs", "author": ["A. Rosenfeld"], "venue": "Fuzzy Sets and \u008aeir Applications, 77:95,", "citeRegEx": "8", "shortCiteRegEx": null, "year": 1975}, {"title": "P-complete approximation problems", "author": ["S. Sahni", "T. Gonzalez"], "venue": "Journal of the ACM (JACM), 23(3):555\u2013565,", "citeRegEx": "9", "shortCiteRegEx": null, "year": 1976}, {"title": "An integer linear programming approach to the single and bi-objective next release problem", "author": ["N. Veerapen", "G. Ochoa", "M. Harman", "E.K. Burke"], "venue": "Information and So\u0087ware Technology, 65:1\u201313,", "citeRegEx": "10", "shortCiteRegEx": null, "year": 2015}, {"title": "Social network analysis: Methods and applications, volume 8", "author": ["S. Wasserman", "K. Faust"], "venue": "Cambridge University Press,", "citeRegEx": "11", "shortCiteRegEx": null, "year": 1994}, {"title": "Formulation of tradeo\u0082s in planning under uncertainty", "author": ["M.P. Wellman", "M. Derthick"], "venue": "Pitman London,", "citeRegEx": "12", "shortCiteRegEx": null, "year": 1990}, {"title": "So\u0087ware Requirements", "author": ["K.E. Wiegers"], "venue": "Microso\u0089 Press, Nov.", "citeRegEx": "13", "shortCiteRegEx": null, "year": 2009}, {"title": "Fyzzy sets", "author": ["L.A. Zadeh"], "venue": "Inf. Comput., 8:338-353, Dec", "citeRegEx": "14", "shortCiteRegEx": null, "year": 1965}], "referenceMentions": [{"referenceID": 3, "context": "1 MODELING DEPENDENCIES Fuzzy graphs have demonstrated to properly capture imprecision of real world problems [4, 6].", "startOffset": 110, "endOffset": 116}, {"referenceID": 4, "context": "We have specially modi\u0080ed the classical de\u0080nition of fuzzy graphs in order to consider not only the strengths but also the qualities (positive or negative) [5\u20137] of value-related dependencies (De\u0080nition 1).", "startOffset": 156, "endOffset": 161}, {"referenceID": 5, "context": "We have specially modi\u0080ed the classical de\u0080nition of fuzzy graphs in order to consider not only the strengths but also the qualities (positive or negative) [5\u20137] of value-related dependencies (De\u0080nition 1).", "startOffset": 156, "endOffset": 161}, {"referenceID": 9, "context": "A VDG is a signed directed fuzzy graph [11] G = (E,\u03c3 , \u03c1) in which a non-empty set of elements E : {e1, .", "startOffset": 39, "endOffset": 43}, {"referenceID": 0, "context": "Also, the qualitative function \u03c3 : E \u00d7 E \u2192 {+,\u2212,\u00b1} and the membership function \u03c1 : E\u00d7E \u2192 [0, 1] denote qualities and strengths of explicit value-related dependencies receptively.", "startOffset": 89, "endOffset": 95}, {"referenceID": 12, "context": "\u2227 denote Zadeh\u2019s [14] fuzzy AND operator that is taking minimum over operands.", "startOffset": 17, "endOffset": 21}, {"referenceID": 1, "context": "on the other hand, is calculated through employing qualitative sequential inference [2, 3, 12] as given by (2).", "startOffset": 84, "endOffset": 94}, {"referenceID": 2, "context": "on the other hand, is calculated through employing qualitative sequential inference [2, 3, 12] as given by (2).", "startOffset": 84, "endOffset": 94}, {"referenceID": 10, "context": "on the other hand, is calculated through employing qualitative sequential inference [2, 3, 12] as given by (2).", "startOffset": 84, "endOffset": 94}, {"referenceID": 6, "context": "\u008ce strength of all positive value-related dependencies from ei to ej is denoted by \u03c1 +\u221e i, j and calculated by (3), that is to \u0080nd the strength of the strongest positive value-related dependency [8] among all the positive value-related dependencies from ei to ej .", "startOffset": 195, "endOffset": 198}, {"referenceID": 12, "context": "Fuzzy operators \u2227 and \u2228 denote Zadeh\u2019s [14] fuzzy AND (taking minimum) and fuzzy OR (taking maximum) operations respectively.", "startOffset": 39, "endOffset": 43}, {"referenceID": 0, "context": "Hence, objective function of (7) can be reformulated as \u2211n i=1 xivi \u2212 f (xj , Ii, j )xivi with a quadratic non-linear expression [1] exp = xi f (xj , Ii, j )vi which shows the integer programming model (7)-(10) is a non-linear model which cannot be solved e\u0081ciently nor can it be approximated e\u0081ciently [1, 9].", "startOffset": 129, "endOffset": 132}, {"referenceID": 0, "context": "Hence, objective function of (7) can be reformulated as \u2211n i=1 xivi \u2212 f (xj , Ii, j )xivi with a quadratic non-linear expression [1] exp = xi f (xj , Ii, j )vi which shows the integer programming model (7)-(10) is a non-linear model which cannot be solved e\u0081ciently nor can it be approximated e\u0081ciently [1, 9].", "startOffset": 303, "endOffset": 309}, {"referenceID": 7, "context": "Hence, objective function of (7) can be reformulated as \u2211n i=1 xivi \u2212 f (xj , Ii, j )xivi with a quadratic non-linear expression [1] exp = xi f (xj , Ii, j )vi which shows the integer programming model (7)-(10) is a non-linear model which cannot be solved e\u0081ciently nor can it be approximated e\u0081ciently [1, 9].", "startOffset": 303, "endOffset": 309}, {"referenceID": 8, "context": "Integer linear programming models on the other hand, are known to be solvable e\u0081ciently due to the advances in tools [10].", "startOffset": 117, "endOffset": 121}], "year": 2017, "abstractText": "Davoud Mougouei School of Computer Science, Engineering, and Mathematics Flinders University Adelaide, Australia davoud.mougouei@\u0083inders.edu.au David M. W. Powers School of Computer Science, Engineering, and Mathematics Flinders University Adelaide, Australia david.powers@\u0083inders.edu.au Asghar Moeini School of Computer Science, Engineering, and Mathematics Flinders University Adelaide, Australia asghar.moeini@\u0083inders.edu.au", "creator": "LaTeX with hyperref package"}}}