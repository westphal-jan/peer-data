{"id": "1702.08862", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "28-Feb-2017", "title": "Proportional Representation in Vote Streams", "abstract": "We consider elections where the voters come one at a time, in a streaming fashion, and devise space-efficient algorithms which identify an approximate winning committee with respect to common multiwinner proportional representation voting rules; specifically, we consider the Approval-based and the Borda-based variants of both the Chamberlin-- ourant rule and the Monroe rule. We complement our algorithms with lower bounds. Somewhat surprisingly, our results imply that, using space which does not depend on the number of voters it is possible to efficiently identify an approximate representative committee of fixed size over vote streams with huge number of voters. (2.4, 5.6, 6.7)\n\nWe provide the necessary data to illustrate our results and how our algorithm works (see section 6, section 6, and section 6, below). The purpose of the algorithm is to generate a mathematical model of a distributed system of distributed voting that consists of three different types of voting: one set of weighted votes, and two set of weighted votes. These voting blocks can be combined to account for the probability of winning in a given election (i.e., the number of votes a voter has).\nA voting block is a single voting block that has the same number of voters and will represent a fixed number of vote segments. For example, if we do a list of 3 voting segments, a weighted vote could be represented as 2 voting segments, and 2 voting segments, each of which represents one voter.\nThe algorithms also allow the computational power of the algorithm to be used to represent the correct number of voter segments. (See Section 3, section 4, section 5, and section 5, below).\nIn our example, our algorithm can be used to create a system of distributed voting that consists of two voting segments that consist of three voting segments.\nIn the above example, our algorithm can be used to produce a model of the distribution of votes. We can create a model that combines a weighted vote with 2 voting segments for each of the three voting segments.\nA voter segment is an ensemble of 3 voting segments. This is not an ensemble of three voting segments; it is a set of three voting segments. We use different types of voting segments to define a model based on the voting segments. (See Section 6, section 7, and section 8, below).\nOur algorithm can represent a model of the distribution of votes. We use different types of voting segments to define a model based on the voting segments. (See Section 6, section 7, and section 8,", "histories": [["v1", "Tue, 28 Feb 2017 16:57:49 GMT  (36kb)", "http://arxiv.org/abs/1702.08862v1", "Accepted as a full paper in AAMAS 2017"]], "COMMENTS": "Accepted as a full paper in AAMAS 2017", "reviews": [], "SUBJECTS": "cs.GT cs.AI cs.CC cs.DS cs.MA", "authors": ["palash dey", "nimrod talmon", "otniel van handel"], "accepted": false, "id": "1702.08862"}, "pdf": {"name": "1702.08862.pdf", "metadata": {"source": "CRF", "title": "Proportional Representation in Vote Streams", "authors": ["Palash Dey", "Nimrod Talmon", "Otniel van Handel"], "emails": ["palash.dey@tifr.res.in", "nimrodtalmon77@gmail.com", "otnivh@gmail.com"], "sections": [{"heading": null, "text": "ar X\niv :1\n70 2.\n08 86\n2v 1\n[ cs\n.G T\n] 2\n8 Fe\nb 20\n17\nWe consider elections where the voters come one at a time, in a streaming fashion, and devise space-efficient algorithms which identify an approximate winning committee with respect to common multiwinner proportional representation voting rules; specifically, we consider the Approval-based and the Borda-based variants of both the Chamberlin\u2013 Courant rule and the Monroe rule. We complement our algorithms with lower bounds. Somewhat surprisingly, our results imply that, using space which does not depend on the number of voters it is possible to efficiently identify an approximate representative committee of fixed size over vote streams with huge number of voters.\nCCS Concepts\n\u2022Computing methodologies \u2192 Multi-agent systems; \u2022Theory of computation \u2192 Streaming, sublinear and near linear time algorithms;\nKeywords\nvoting, data streams, sublinear algorithms, proportional representation"}, {"heading": "1. INTRODUCTION", "text": "The voting rule suggested by Chamberlin\u2013Courant [5] and the voting rule suggested by Monroe [18], are multiwinner voting rules concentrated on proportional representation. Such proportional representation multiwinner rules aim at selecting a committee of fixed size which represents the society best. Informally, most voters shall be somewhat satisfied by the committees selected by such proportional representation rules, which, roughly speaking, try to best represent the spectrum of different views of the society. This stands in contrast, for example, to k-best multiwinner voting rules such as k-Borda. Proportional representation multiwinner voting rules have several good axiomatic properties [11].\nWinner determination for these rules, however, is NPhard [19], though it is possible to compute the winner when some parameters are small [2]; that is, winner determination for these rules is fixed-parameter tractable with respect to\nAppears in: Proceedings of the 16th International Conference on Autonomous Agents and Multiagent Systems (AAMAS 2017), S. Das, E. Durfee, K. Larson, M. Winikoff (eds.), May 8\u201312, 2017, Sa\u0303o Paulo, Brazil. Copyright c\u00a9 2017, International Foundation for Autonomous Agents and Multiagent Systems (www.ifaamas.org). All rights reserved.\neither the number of voters or the number of candidates. Further, efficient approximation algorithms are known [22] for these rules as well as heuristic algorithms based on clustering [12].\nProportional representation multiwinner voting rules have several other applications, besides their original, political application. Specifically, these rules are used for resource allocation [18, 22], facility location [2], and recommender systems [16, 21]. In such situations, it is indeed desirable to select a set of k \u201crepresentative\u201d elements out of a larger set.\nWhile the number of voters in some elections is modest, there are situations where the number of voters is huge, making it impossible to store the whole election in order to operate upon it (specifically, to identify a winning committee). Consider, e.g., the preferences of users of an online shopping website: there are lots of potential buyers (corresponding to the voters), each with her own preferences over the items being sold on the website (corresponding to the candidates). The owners of the shopping website might wish to identify a set of, say, k items to advertise on their landing page, with the intent of maximizing the number of users which would be interested in at least one of those displayed items.\nMore generally, as certain tasks which are concerned with the creation of various kinds of product portfolios can be modeled as equivalents of solving winner determination for proportional representation, it is of interest to devise efficient algorithms for such situations which naturally correspond to elections with huge number of voters. Thus, in this paper we are interested in designing algorithms which identify good representative committees, but without being able to store the whole electorate in order to process it; concretely, we are aiming at algorithms whose space complexity does not depend on the number of voters, since this number might be huge.\nTo study space-efficient algorithms for such situations, we consider streaming algorithms which solve the winner determination problem for proportional representation multiwinner voting rules. Specifically, while we consider the set of alternatives as being fixed, we assume that the voters are arriving (that is, voting) one at a time, in what we refer to as a vote stream. Concretely, we assume that each voter is arriving only once (such that it is possible to process each voter only once), and we are interested in space-efficient streaming algorithms for finding a winning committee of fixed size k in such vote streams.\nAs it is customary in studying streaming algorithms, we allow our algorithms to be randomized and to find approximate solutions. That is, in order to have algorithms which\nuse only small amounts of space, we will be satisfied with algorithms which find an approximate winning committee; specifically, we will be satisfied with finding a committee whose score under the given voting rule is close to being the optimum score possible for a committee with respect to the given election. Further, we will be satisfied with randomized algorithms, which might not always find such approximate winning committees, but nevertheless are guaranteed to find such approximate winning committees with arbitrarily high probability. A more formal description of our setting is given in Section 2.\nOur results, which are summarized in Table 1, imply that it is possible to process huge amount of preferences data (that is, huge amount of voters), using only small space, and still, with high probability, find an almost-optimal winning committee. Since, as briefly mentioned above, the voting rules we consider in this paper have applications not only in political settings, but also in commercial and business settings, our results naturally have implications to those scenarios as well. We further discuss the applicability of our results in Section 4."}, {"heading": "1.1 Related Work", "text": "The two most-related papers to our paper are two papers by Bhattacharyya and Dey [3, 10]. The first paper [3] provides an analysis of the space complexity of streaming algorithms for some single-winner voting rules. The second paper [10] provides an analysis concerning the number of samples which are sufficient in order to approximately compute the winner under various single-winner voting rules, and is of relevance to our paper since our algorithms are based on sampling. Another related paper is that of Filtser and Talmon [13] which provides efficient protocols for winner determination in distributed streams. We stress that, while the above-mentioned papers deal with single-winner voting rules, our paper deals with multiwinner voting rules which select a committee of fixed size.\nAnother line of work worth mentioning is concerned with developing streaming algorithms for the Max Cover problem. In the Max Cover problem, we are given a collection of sets over some universe and a budget k, and the task is to find k sets which cover the largest number of elements. Approval-CC (see Section 2) is equivalent to Max Cover (to see this, interchange voters by elements and candidates by sets; see also, e.g., [20]).\nThus, the very recent paper by McGregor and Vu [17] is of relevance to us; specifically, they give an upper bound [17, Theorem 10] which has some similarities with our Theorem 1, and they give a lower bound [17, Theorem 20]. However, their model of a stream is different than ours, since the items in their streams are the sets (corresponding to the candidates), while for us the items are the voters (corresponding to the elements).\nIn the context of social choice, there are some further interesting papers to mention. Conitzer and Sandholm [9] study communication complexity of various voting rules; they do not consider approximations and therefore the communication complexity of their protocols is generally quite high. Along similar lines, Chevaleyre et al. [6] design communication protocols for situations where the set of candidates might change over time. Chevaleyre et al. [7] study compilation complexity of various voting rules; roughly speaking, they divide the electorate into two parts, and are con-\ncerned with the amount of information which one part shall transmit to the other in order to correctly identify a winner. Xia and Conitzer [23] extend upon this previouslymentioned paper by considering some further variants as well as some other voting rules not previously studied. Finally, we mention the paper by Conitzer and Sandholm [8] which is concerned with vote elicitation."}, {"heading": "2. PRELIMINARIES", "text": "We provide preliminaries regarding elections and proportional representation voting rules, streaming algorithms and vote streams, and mention some useful results from probability theory. We denote the set {1, . . . , n} by [n]."}, {"heading": "2.1 Proportional Representation", "text": "An election E = (C, V ) consists of a set of candidates C = {c1, . . . , cm} and a collection of voters V = (v1, . . . , vn), where each voter is associated with her vote. (For ease of presentation, we refer to the voters as females while the candidates are males.) In this paper we consider two kinds of elections: in Approval-based elections, the vote of voter vi \u2208 V is a subset of C, corresponding to the candidates which this voter approves; in Borda-based elections, the vote of voter vi \u2208 V is a total order \u227bvi over C. For Borda-based elections, we write posv(c) to denote the position of candidate c in v\u2019s preference order (e.g., if v ranks c on the top position, then posv(c) = 1).\nGiven an election E = (C, V ) and an integer k, k \u2264 |C|, a committee S \u2286 C consists of k candidates from C. A multiwinner voting rule R is a function that returns a set R(E, k) of winning committees of size k each, and we say that the committees in R(E, k) tie as winners of the election. To formally define the specific voting rules which we consider in this paper, namely Chamberlin\u2013Courant and Monroe, we first discuss assignment functions and satisfaction functions.\nAssignment functions. Given an election E = (C, V ) and a committee S \u2286 C of size k, a CC-assignment function is a function \u03a6: V \u2192 S. We say that \u03a6(v) is the representative of voter v \u2208 V and that v is represented by \u03a6(v). An M-assignment function is a CC-assignment function where \u230an k \u230b \u2264 |\u03a6\u22121(c)| \u2264 \u2308n k \u2309 holds for each c \u2208 S. That is, in an M-assignment, each committee member represents roughly (i.e., up to rounding) the same number of voters.\nSatisfaction functions. Intuitively, a satisfaction function \u03b3 : V \u00d7C \u2192 N is a function measuring the satisfaction of a voter v when she is represented by a certain candidate c. For Approval-based elections, we use the satisfaction function \u03b3 \u2261 \u03b1 where \u03b1(v, c) = 1 iff c is approved by v, and 0 otherwise (that is, 1 if c is contained in v\u2032s vote; informally, a voter is satisfied only by her approved candidates). For Borda-based elections, we use the satisfaction function \u03b3 \u2261 \u03b2 where \u03b2(v, c) = m\u2212 posv(c).\nChamberlin\u2013Courant and Monroe. Given an election E = (C, V ), a size-k committee S, and a CC-assignment function \u03a6, we define the total satisfaction of the voters in V from the committee S and the CC-assignment \u03a6 to be:\n\u2211\nv\u2208V\n\u03b3(\u03a6(v)),\nwhere, for Approval-based elections, \u03b3 equals the \u03b1 satisfaction function described above, while for Borda-based elections, \u03b3 equals the \u03b2 satisfaction function described above.\nFor the Chamberlin\u2013Courant rule, the total satisfaction of the voters in V from a committee S is defined as the maximum total satisfaction of the voters V from the committee S over all possible CC-assignment functions. The Chamberlin\u2013Courant rule outputs all size-k committees W with the highest total satisfaction.\nThe Monroe rule is defined similarly, but where we consider only M-assignment functions; that is, the total satisfaction of the voters in V from a committee S is defined as the maximum total satisfaction of the voters V from the committee S over all possible M-assignment functions. We denote by Approval-CC (Borda-CC ) the Chamberlin\u2013 Courant rule for Approval-based (Borda-based) elections, and byApproval-M (Borda-M ) the Monroe rule for Approvalbased (Borda-based) elections."}, {"heading": "2.2 Vote Streams", "text": "We assume that the set of candidates C is known, and that the voters v1, . . . , vn arrive (that is, vote) one at a time. More formally we might say that at time t \u2208 [n], voter vt arrives; importantly, each voter arrives only once.\nWe are interested in randomized algorithms which operate on such vote streams, and find approximate solutions. The following definition is crucial for our notion of approximation.\nDefinition 1 (\u01eb-winning committee) A committee of size k is \u01eb-winning if it is either a winning committee, or it can become a winning committee by changing at most \u01ebn votes.\nSpecifically, we require that the committees computed by our streaming algorithm shall be, with high probability, \u01ebwinning. Such a streaming algorithm, which identify, with high probability, an \u01eb-winning committee, is said to be an \u01eb-approximate streaming algorithm.\nDefinition 2 (\u01eb-approximate streaming algorithm) A streaming algorithm is an \u01eb-approximate streaming algorithm if it returns, with high probablty, an \u01eb-winning committee.\nThroughout the paper, when we say \u201cwith high probability\u201d we mean with probability 1 \u2212 O(1/n). Such a success probability should be sufficient; as usual in streaming algorithms, can be further tweaked by repetitions.\nAssuming that the number n of voters is huge, our goal is to devise streaming algorithms whose space complexity do not depend on the number n of voters. Our algorithms\nare based on sampling voters; by a subset of an election we mean a subset of the voters.\nLet us explain how exactly we sample voters. Let n be the length of the stream (i.e., the total number of voters), and suppose that we want to sample z votes from the stream. Then, we pick each vote with probability z/(n\u03b4) for some constant 0 \u2264 \u03b4 \u2264 1. By Markov\u2019s inequality, with probability at least 1\u2212\u03b4 is holds that the sample size is at least z (and not much larger). Hence, every vote belongs to our sample with probability z/(n\u03b4) independently of other items."}, {"heading": "2.3 Useful Results from Probability Theory", "text": "Since our algorithms are randomized, specifically based on sampling a small number of voters, we make extensive use of the following variant of Hoeffding\u2019s inequality, which upper bounds the probability that the sum of a given set of random variables deviates from its expectation.\nTheorem 1 (Hoeffding\u2019s inequality [14]) Let X1, ..., Xt be independent random variables such that 0 \u2264 Xi \u2264 m for each i \u2208 [t]. Let X be a random variable such that X = \u2211\ni\u2208[t]Xi. Then, the following two statements hold.\n(1) Pr[X \u2212 E[X] < \u01eb] \u2264 exp\n(\n\u2212 2\u01eb2t\nm2\n)\n(2) Pr[E[X] \u2212X < \u01eb] \u2264 exp\n(\n\u2212 2\u01eb2t\nm2\n)\nFor the special case when m = 1, Hoeffding\u2019s inequality simplifies as follows.\n(1) Pr[E[X]\u2212X < \u01eb] \u2264 exp ( \u22122\u01eb2t )\n(2) Pr[X \u2212 E[X] < \u01eb] \u2264 exp ( \u22122\u01eb2t )"}, {"heading": "3. RESULTS", "text": "Our main results are summarized in Table 1. In Section 3.1 we describe our upper bounds while in Section 3.2 we describe our lower bounds."}, {"heading": "3.1 Upper Bounds", "text": "We first consider the Approval-CC voting rule, which is arguably the simplest voting rule we consider in this paper. The following algorithm is based on sampling a small number of voters. The proof shows that, with high probability, a winning committee for the election corresponding to the sample has fairly high score in the whole election; specifically, it constitutes an \u01eb-approximate winning committee of the whole election.\nTheorem 1 There is an \u01eb-approximate streaming algorithm for Approval-CC which uses O(\u01eb\u22122km logm) space.\nProof. The algorithm operates as follows. We select a sample of t = 6\u01eb\u22122k logm voters, uniformly at random. Then, we find a winning committee of the sampled voters (with respect to Approval-CC) and return it as a winning committee for the whole election. We show that a winning committee of the sampled voters is, with high probability, an \u01eb-winning committee for the whole election. Notice that in order to store the votes of t voters, our algorithm uses mt space, as claimed.\nNext we prove that, with high probability, our algorithm returns an \u01eb-winning committee. Let E = (C, V ) denote the whole election and let ER = (C, VR) denote the sampled election, where VR denotes the set of t sampled voters. Let S be a winning committee in the whole election. Let scoreE(S) (scoreER(S)) denote the score of S in the whole election (in the sampled election, respectively).\nLet us first consider the case where scoreE(S) < \u01ebn, that is, where there are less than \u01ebn voters being satisfied by S. In this case any committee is \u01eb-winning, thus our algorithm is always correct. Therefore, from now on we assume that there are at least \u01ebn voters satisfied by S.\nThe next claim concentrates on the winning committee S, which, since it is winning in E, has high score in E; the claim shows that, with high probability, S also has high score in ER. The factor\nn t is a normalization factor.\nClaim 1 n t \u00b7 scoreER(S) \u2265 scoreE(S)\u2212 \u01eb 2 n holds with probability at least 1\u2212m\u2212k.\nProof of claim 1. For i \u2208 [t], let Xi be an indicator random variable such that Xi = 1 if the ith sampled voter is satisfied by S, and Xi = 0 otherwise. Let X = \u2211\ni\u2208[t] Xi.\nSince scoreE(S) equals the number of voters in the whole election which are satisfied by S, it holds that\nP[Xi = 1] = scoreE(S)/n\nfor each i \u2208 [t]. Then, from linearity of expectation, we conclude that\nE[X] = t\nn \u00b7 scoreE(S).\nThis means that, in expectation, the score of S in ER is as claimed; we use Hoeffding\u2019s inequality (see Theorem 1) to show concentration, as follows.\nP\n[n\nt X <\nn t E[X]\u2212 \u01eb 2 n ] = P [ X < E[X]\u2212 \u01eb 2 t ]\n\u2264 e\u22122( \u01eb 2 )26\u01eb\u22122k logm\n\u2264 m\u2212k.\n(proof of claim 1)\nClaim 1 shows that, with high probability, a committee with high score in the whole election also gets a relatively high score in the sampled election. Next we show that, with high probability, a committee with low score in the whole election also gets a low score in the sampled election.\nClaim 2 Let S\u2032 be a committee for which it holds that scoreE(S\n\u2032) \u2264 (1 \u2212 \u01eb) \u00b7 scoreE(S). Then, with probability at least 1 \u2212 m\u22122k, it holds that n\nt \u00b7 scoreER(S \u2032) \u2264 (1 \u2212 \u01eb)\u00b7 scoreE(S) +\n\u01eb 2 n.\nProof of claim 2. Let S\u2032 be such that scoreE(S \u2032) \u2264 (1\u2212\u01eb) \u00b7scoreE(S). For i \u2208 [t], let Xi be an indicator random variable such that Xi = 1 if the ith sampled voter is satisfied by S\u2032, and Xi = 0 otherwise. Let X = \u2211\ni\u2208[t] Xi. Since\nscoreE(S \u2032) equals the number of voters in the whole election which are satisfied by S\u2032, it holds that\nP[Xi = 1] = scoreE(S\n\u2032)\nn\nfor each i \u2208 [t]. Then, from linearity of expectation, we conclude that\nE[X] = t\nn \u00b7 scoreE(S\n\u2032) \u2264 t\nn \u00b7 (1\u2212 \u01eb) \u00b7 scoreE(S).\nThis means that, in expectation, the score of S in ER is as claimed. Since the Xi\u2019s are independent and all of them are bounded, we use Hoeffding\u2019s inequality (see Theorem 1) to show concentration, as follows.\nP\n[n\nt \u00b7X >\nn t \u00b7 E[X] + \u01eb 2 n ] = P [ X \u2212 E[X] > \u01eb 2 t ]\n< e\u22122(\u01eb/2) 26\u01eb\u22122k logm\n\u2264 m\u22122k.\n(proof of claim 2)\nSince there are at most ( m k ) \u2264 mk committees, and therefore at most mk committees S\u2032 for which scoreE(S \u2032) \u2264 (1\u2212\u01eb)\u00b7scoreE(S) holds (and these are exactly the committees which are not \u01eb-winning), we can apply union bound on the result proved in Claim 2, to get that with high probability, the score of S in ER is strictly higher than the score of any committee S\u2032 which is not \u01eb-winning. Thus, our algorithm returns, with high probability, an \u01eb-winning committee.\nIt turns out that it is possible to extend the samplingbased streaming algorithm described in the proof of Theorem 1 to work also for Borda-CC, albeit with some increase of the space complexity. Informally, the increase of the space complexity is because the proof needs to take care for the fact that the score difference induced by a single voter is greater in Borda-CC than it is in Approval-CC: while in Approval-CC, the satisfaction of a voter from a committee is either 0 or 1, in Borda-CC it is anything between 0 to m\u2212 1.\nTheorem 2 There is an \u01eb-approximate streaming algorithm for Borda-CC which uses O(\u01eb\u22122k3m3 logm) space.\nProof. Let t = 10\u01eb\u22122km2. Similarly in spirit to the algorithm presented in the proof of Theorem 1, our algorithm samples k2t voters, select a winning committee in the sampled election, and declares it as an \u01eb-winning committee for the whole election. Since storing the vote of each sampled voter takes m logm space, we get the claimed space complexity. Next we prove the correctness of the algorithm.\nFix an election E, a committee S, a committee member c, and consider a voter v. We define the score given to c by v with respect to S, denoted by scorev,SE (c) to be the Borda-score of c in the preference order of v, if, among the candidates of S, c is the representative of v; that is, if, among the candidates of S, v ranks c the highest. We define it to be 0 otherwise. Further, we define the score of c with respect to S, denoted by scoreSE(c) to be the sum over all voters, that is, scoreSE(c) = \u2211 i\u2208[n] score vi,S E (c). Further, as before, we define scoreE(S) to be the score of S, and, indeed, it holds that scoreE(S) = \u2211 c\u2208S score S E(c).\nWe begin by showing that, fixing a committee S and a committee member c, it is possible to estimate the score of c with respect to S by sampling t voters. Let E denote the whole election, and let ER denote the sampled election, containing t voters (where t is as defined in the beginning of the current theorem\u2019s proof) chosen uniformly at random from E. The following claim shows that with high probability the sampled election roughly preserves the score of any committee.\nClaim 3 Let S be a committee and c a committee member. Then, |n\nt \u00b7 scoreSER(c)\u2212 score S E(c)| \u2264 \u01ebn/2 holds with proba-\nbility at least 1\u2212 1/m3k, where ER is obtained by sampling each voter in E independently with probability t/n.\nProof of claim 3. For the committee S and the committee member c, we define a random variable Xi, i \u2208 [t], such that Xi = score vi,S ER\n(c), where vi is the ith sampled voter. It holds that\nE[Xi] = 1\nn scoreSE(c).\nLetting X = \u2211\ni\u2208[t] Xi, we have the following (from lin-\nearity of expectation):\nE[X] = t\nn scoreSE(c).\nImportantly, note that the variables Xi have the following properties:\n\u2022 They are independent; this follows since we consider each committee member separately.\n\u2022 They are bounded; specifically, 0 \u2264 Xi \u2264 m holds for each i \u2208 [t].\nUtilizing the above two properties, we can apply a variation of Hoeffding\u2019s inequality (see Theorem 1) and conclude that:\nP\n[ | n\nt \u00b7X \u2212 scoreSE(c)| \u2265 n\u01eb/2\n]\n= P[|X \u2212 E[X]| \u2265 t\u01eb/2]\n\u2264 2e \u2212\n2(\u01eb/2)2t (m+1)2\n\u2264 1\nm3k ,\nwhere the first inequality follows from Hoeffding\u2019s inequality (see Theorem 1) and last inequality follows from our definition of the sample size t. (of claim 3)\nClaim 3 shows that by sampling t voters, we get a good estimation for the score of a candidate with respect to some committee. Let E denote the whole election, and let ER denote the sampled election, containing k2t voters (where t is as defined in the beginning of the current theorem\u2019s proof) chosen uniformly at random from E. Next we show that, by sampling k2t voters, we get a good estimation for the score of a committee.\nClaim 4 Let S be a committee. Then, |n t \u00b7 scoreER(S) \u2212 scoreE(S)| \u2264 n\u01eb/2 holds with probability at least 1 \u2212 1/m k, where ER is obtained by sampling each voter in E independently with probability k2t/n.\nProof of claim 4. Let S be a committee containing the committee members c1, . . . , ck. For each j \u2208 [k], we apply Claim 3 on the committee S and the committee member cj with \u01eb\u2032 = \u01eb/k. Let us denote the random variable containing the estimated score of committee member cj with respect to committee S by Yj ; that is, Yj is the estimated value of scoreSE(cj), therefore, Yj = score S ER (cj) using Claim 3. Let Y = \u2211\nj\u2208[k] Yj . Since scoreE(S) = \u2211 j\u2208[k] score S E(cj), and\nfrom linearity of expectation, it follows that\nE[Y ] = t\nn \u00b7 scoreE(S).\nFurther, we have that:\nP [ | n\nt \u00b7 Y \u2212 scoreE(S)| \u2265 n\u01eb/2\n]\n\u2264 P [ \u03a3j\u2208[k]|Yj \u2212 E[Yj ]| \u2265 nk\u01eb \u2032/2 ] \u2264 \u2211\nj\u2208[k]\n( P [ |Yj \u2212 E[Yj ]| \u2265 n\u01eb \u2032/2 ])\n\u2264 k\nm2k\n\u2264 1\nmk ,\nwhere the first inequality follows from the definitions of Y and \u01eb\u2032, the second inequality follows from applying a union bound over the committee members c1, . . . , ck, and the third inequality follows from Claim 3. (of claim 4)\nFinally, building upon Claim 4, we apply union bound on all (\nm k\n)\ncommittees of size k. Following this union bound, we conclude that, with high probability, the algorithm returns an \u01eb-winning committee.\nWe mention that the result described in Theorem 2 transfers to all scoring rules, albeit with some increase of the space complexity. That is, careful analysis of the proof of Theorem 2 reveals that, since we can upper bound the values of the random variables Xj by m, it follows that we can apply Hoeffding\u2019s inequality (see Theorem 1), which causes an increase of the space complexity by a multiplicative factor of m2, compared to the space complexity that we get for Approval-CC.\nConsidering any normalized scoring vector (\u03b11, \u03b12, . . . , \u03b1m) with \u03b11 \u2265 . . . \u2265 \u03b1m such that \u03b11 is the value given by a voter to her first-choice candidate, and following the same reasoning as described above, we see that applying Hoeffding\u2019s inequality (see Theorem 1) causes an increase of the space complexity by a multiplicative factor of \u03b121, compared to the space complexity we get for Approval-CC. Specifically, the resulting space complexity is O(\u01eb\u22122k3\u03b121m logm). We know that scoring rules remain unchanged if we multiply every \u03b1i by any constant \u03bb > 0 and/or add any constant \u00b5. Hence, we can assume without loss of generality that for any score vector \u03b1, there exists a j such that \u03b1j \u2212\u03b1j+1 = 1 and \u03b1k = 0 for all k > j. We call such an \u03b1 a normalized score vector.\nNext we move on to consider Monroe (M), beginning with the arguably simpler case of Approval-M. Our algorithm is again based on sampling a small number of voters and computing a winning committee for them. The analysis is more involved, since we cannot consider all assignments, but only M-assignments. A naive analysis would apply union bound on all M-assignments, but since there are O(kn) such assignments, we would get linear space in the number of voters, which would be too much. Fortunately, we can do better, building upon some structural observations, as we show next.\nTheorem 3 There is an \u01eb-approximate streaming algorithm for Approval-M which uses O(\u01eb\u22122k3m logm) space.\nProof. The overall idea is to consider any committee S with its optimal assignment A\u2217. We will show that, with high probability, with respect to S, the score of the assignment A\u2217 on a sampled election is close to being the actual\nscore of the committee S on the sampled election. The theorem would then follows by union bound over all (\nm k\n)\ncommittees.\nMore specifically, for each committee S together with its optimal assignment A\u2217, we define a preserving subset to be a subset EP of the election E such that, for each committee member c \u2208 S, the fraction of voters assigned to c which are satisfied by c, as well as the fraction of voters assigned to c which are not satisfied by c, is preserved. Formally, we define a preserving subset as follows.\nDefinition 3 (preserving subset) Let S be a committee, let A\u2217 be its optimal assignment, and let EP be a subset of the election E. Let ,A \u2217\nEP (ci) denote the set of voters in EP\nwhich are assigned to ci by A \u2217 and are satisfied by ci (that is, it holds that ci \u2208 v), and let / A\u2217\nEP (ci) denote the set of\nvoters in EP which are assigned to ci by A \u2217 and are not satisfied by ci (that is, it holds that ci /\u2208 v). Then, a subset EP of the election E is a preserving subset if for each ci \u2208 S it holds that\n(1) |,A \u2217 EP (ci)| = |EP |\n|E| \u00b7 |,A\n\u2217\nE (ci)|\nand that\n(2) |/A \u2217 EP (ci)| = |EP |\n|E| \u00b7 |/A\n\u2217\nE (ci)|,\nThat is, a preserving subset is a subset of the voters of some given election which, with respect to the optimal assignment of a given committee, preserves the (normalized) number of voters assigned to each candidate and are satisfied (unsatisfied) by it. Next we show that, for each committee S, with high probability a random subset containing t = O(\u01eb\u22122k3 logm) is close to being a preserving subset.\nClaim 5 Let ER be a random subset of voters from E obtained by sampling each voter independently at random with probability t/n. Then, for each committee S, with probability at least 1\u2212m\u22122k, it holds that there exists a preserving subset EP which can be obtained from ER by changing the vote of at most \u01ebt voters.\nProof of claim 5. It suffices to show that, for each ci \u2208 S, it holds that ,A \u2217\nE (ci) = n t ,\nA\u2217 ER (ci)\u00b1 \u01ebn2k and also it holds\nthat /A \u2217 E (ci) = n t / A\u2217 ER (ci) \u00b1 \u01ebn 2k , since then, the fraction of each of the k sets ,A \u2217 E (ci) and each of the k sets / A\u2217\nE (ci) can preserve its respective fraction by changing the votes of at most \u01ebn\n2k voters.\nSince each voter is sampled with probability t/n, we have that\nE[,A \u2217 ER(ci)] = t\nn ,\nA\u2217 E (ci).\nSince each voter is sampled independently, we can apply Hoeffding\u2019s inequality (see Theorem 1), to have the following.\nP\n[\n|,A \u2217 ER(ci)\u2212 E[, A\u2217 ER(ci)]| \u2265 \u01ebt\n2k\n]\n\u2264 2e\u2212 2t\u01eb2 4k2 = O(m\u22122k)\nand\nP\n[\n|/A \u2217 ER(ci)\u2212 E[/ A\u2217 ER(ci)]| \u2265 \u01ebt\n2k\n]\n\u2264 2e\u2212 2t\u01eb2 4k2 = O(m\u22122k).\nThus, we are done. (of claim 5)\nNext we show that, for each committee S, its optimal assignment A\u2217 in E is also an optimal assignment in any preserving subset EP of E. Notice that the following claim is not probabilistic but combinatorial.\nClaim 6 Let S be a committee, A\u2217 be its optimal assignment, and EP be a preserving subset of E. Then, the restriction of A\u2217 to EP is an optimal assignment for S in EP .\nProof of claim 6. Intuitively, if there was a better assignment AP than A \u2217 for S in EP , then we could change A \u2217 accordingly and get a better assignment for S in E, contradicting the optimality of A\u2217 for S in E.\nMore formally, let S be a committee, A\u2217 be its optimal assignment, and EP be a preserving subset of E. Towards a contradiction, assume that there is an assignment AP 6= A \u2217 such that scoreAPEP (S) > score A\u2217 EP (S). Consider E\u0304P = E \\EP and notice that, since EP is a preserving subset of E, it also holds that E\u0304P is a preserving subset of E, and we have that\nscoreA \u2217 E (S) = |EP |\n|E| \u00b7 scoreA\n\u2217 E (S) + |E\u0304P |\n|E| \u00b7 scoreA\n\u2217\nE (S)\n= scoreA \u2217 EP (S) + score A\u2217 E\u0304P (S) < scoreAPEP (S) + score A\u2217 E\u0304P (S).\nSince AP does not violate the Monroe property, we have constructed a better assignment for S in E, contradicting the optimality of A\u2217 for S in E. (of claim 6)\nBuilding upon the last two claims proven above, the following claim shows that, for each committee S, with high probability, the score of its optimal assignment A\u2217 on E is a good estimator for its score on the sampled election ER.\nClaim 7 For each committee S and its optimal assignment A\u2217, with probability at least 1\u2212m\u22122k it holds that:\nscoreER(S) + \u01ebt \u2265 score A\u2217 ER(S) \u2265 scoreER(S)\u2212 \u01ebt.\nProof of claim 7. Combining the last two claims, we have that, with high probability, there exists a preserving subset EP , obtained from the sampled election by changing at most \u01ebt voters. Consider the preserving subset EP which is obtained from the sampled election ER by changing at most \u01ebt voters.\nBy the first claim, we have that the assignment A\u2217 is optimal for S on EP . Consider any other assignment. Since A\u2217 is optimal for S on EP and EP is \u01eb-close to ER, the two inequalities hold, since \u01eb bounds the score difference between A\u2217 on ER and any other assignment. (of claim 7)\nFollowing the last claim, we have that, for each committee S, a random sample is indeed a good estimator for the score of S. Then, the claim follows by union bound over all possible (\nm k\n)\ncommittees.\nTheorem 4 There is an \u01eb-approximate streaming algorithm for Borda-M which uses O(\u01eb\u22122k3m5 logm) space.\nProof sketch. The idea of the proof is very similar to Approval-M, when we take into account the following two differences.\nThe first difference is that, instead of only two blocks for each committee member, namely the , block and the / block, in Borda-M we shall consider m blocks for each committee member, where a voter v is assigned to the lth block\n(for l \u2208 [m]) of committee member c if v is represented by c and the satisfaction of v from c is j.\nThe second difference is that we shall bound the difference between the actual score of a committee and its score in the sampled election differently; specifically, we have that\nscoreER(S) + \u01ebmt \u2265 score A\u2217 ER(S) \u2265 scoreER(S)\u2212 \u01ebmt,\nsince each voter whose vote is changed can increase or decrease the score of each committee by O(m) and not only by O(1) as for Approval-M.\nThe proof then follows similar lines as the proof given for Approval-M (see Theorem 3), but the space complexity increases. Specifically, the first difference described above causes the space complexity to multiply by a factor of O(m2), since we shall consider those m blocks (instead of only 2) and take into account that the error can multiply by m. Similarly, the second difference described above causes the space complexity to multiply by another factor of O(m2), since we shall increase the size of the sample to account for the increased score difference."}, {"heading": "3.2 Lower Bounds", "text": "In this section we prove two types of lower bounds which complement our algorithms. We begin by showing that any streaming algorithm shall use space which is linear in the number m of candidates.\nTheorem 5 There is an \u01eb > 0 such that any \u01eb-approximate streaming algorithm for Approval-CC or Approval-M needs \u2126(m) space.\nProof. We reduce from the Set Disjointness problem in communication complexity. In the Set Disjointness problem, there is a set of elements U = x1, . . . , xu, and two players, Alice and Bob. Alice is given a subset A \u2286 U and Bob is given a subset B \u2286 U . Then, Alice sends a message to Bob, and Bob has to decide whether A\u2229B = \u2205, in which case Bob shall accept; otherwise, that is, if there is some index i \u2208 [u] such that xi \u2208 A\u2229B, then Bob shall reject. It is known that Alice shall send \u2126(u) bits in order for Bob to be correct with high probability [15].\nWe first describe the reduction for Approval-CC; that is, given an instance of Set Disjointness, we construct a vote stream for Approval-CC, as follows. we create an election with u+1 candidates, where for each xi (i \u2208 [u]) we create a corresponding candidate ci, and we have another candidate d. Then, Alice inserts two voters, v1 and v \u2032 1, to the vote stream, where both v1 and v \u2032 1 are approving the candidates corresponding to the elements in A (that is, v1 = v \u2032 1 = {ci : xi \u2208 A}. Then, Bob inserts two voters, v2 and v \u2032 2, to the vote stream, where, similarly, v2 = v \u2032 2 = {ci : xi \u2208 B}. Finally, Bob inserts three voters, v3, v4, v5, all of which approve only the candidate d. This finishes the description of the reduction.\nFor example, letting U = {x1, x2, x3} (thus, u = 3), A = {x2}, and B = {x1, x2}, we will have that v1 and v \u2032 1 both approve c2, v2 and v \u2032 2 both approve c1 and c2, and v3, v4, and v5 all approve d. We assume, towards a contradiction, that there is a streaming algorithm for Approval-CC which uses o(m) space. We use that algorithm with k = 1 and \u01eb = 1/7. Notice that if A \u2229 B = \u2205, then each candidate ci covers at most 2 voters, while if there is some index i \u2208 [u] such that xi \u2208 A\u2229B, then the candidate ci covers 4 voters. Irrespectively, the candidate d covers 3 voters. Thus, the streaming algorithm would\ndeclare d as the winner if and only if A and B are disjoint, contradicting the lower bound for Set Disjointness.\nAs for Approval-M, notice that in the reduction described above the size k of the committee is 1. In this case, ApprovalCC and Approval-M are equivalent, thus the reduction transfers to Approval-M as it is.\nIt turns out that with some modifications, the reduction described in the proof of Theorem 6 can be made to work also for Borda-CC and Borda-M.\nTheorem 6 There is an \u01eb > 0 such that any \u01eb-approximate streaming algorithm for Borda-CC or Borda-M needs \u2126(m) space.\nProof. We again reduce from Set Disjointness where Alice (Bob) is given a subset A \u2286 U (B \u2286 U), for U = {x1, . . . , xu}, and Alice and Bob shall decide together whether A \u2229 B = \u2205 (see the proof of Theorem 6 for a more detailed description of Set Disjointness).\nWe describe first the reduction for Borda-CC; that is, given an instance of Set Disjointness, we construct a vote stream for Borda-CC, as follows. We create an election with 4u+1 candidates, where for each xi (i \u2208 [u]) we create a corresponding candidate ci; we have another candidate d; and another 3u dummy candidates d1, . . . , d3u.\nCorresponding to her set A, Alice inserts one voter v1 to the vote stream, ranking first those |A| candidates ci which correspond to the elements xi in A, then u\u2212|A| dummy candidates d1, . . . , du\u2212|A|, then d, then the remaining 2u + |A| dummy candidates du\u2212|A|+1, . . . , d3u, and ranking last those u \u2212 |A| candidates ci which correspond to the elements xi not in A. Bob behaves quite similarly, by inserting one voter v2 to the vote stream, ranking first those |B| candidates ci which correspond to the elements xi in B, then u \u2212 |A| dummy candidates d3u, . . . , d3u\u2212|B|+1 (notice the change of order of the dummy candidates with respect to v1), then d, then the remaining 2u+ |B| dummy candidates d2u\u2212|B|, . . . , d1 (notice again the change of order), and ranking last those u\u2212 |B| candidates ci which correspond to the elements xi not in B. This finishes the description of the reduction. For example, letting U = {x1, x2, x3} (thus, u = 3), A = {x2}, and B = {x1, x2}, we will have that v1 : c2 \u227b d1 \u227b d2 \u227b d \u227b d3 \u227b d4 \u227b d5 \u227b d6 \u227b d7 \u227b d8 \u227b d9 \u227b c1 \u227b c3 and v2 : c1 \u227b c2 \u227b d9 \u227b d \u227b d8 \u227b d7 \u227b d6 \u227b d5 \u227b d4 \u227b d3 \u227b d2 \u227b c1 \u227b c3.\nWe argue that d is a Borda winner in the reduced election if and only if A\u2229B = \u2205. Let us denote the Borda score of a candidate c in the election containing the voters v1 and v2 by s(c). For the dummy candidates we have that s(di) \u2264 5u (for any i \u2208 [3u]); this can be seen by observing that the dummy candidates achieve maximum score in the extreme case where A = B = \u2205, in which di is getting 4u\u2212 i points from v1 and another u+ i points from v2.\nNow, consider a candidate ci corresponding to an element xi which appears only in one of the sets, either A or B; without loss of generality, let ci be a candidate corresponding to an element xi such that xi \u2208 A and xi /\u2208 B. Then, we have that ci gets at most 4u points from v1 and at most u \u2212 1 points from v2. Thus, we conclude that s(ci) \u2264 5u\u22121. Similarly, consider a candidate ci corresponding to an element xi which appears both in A and B. Then, we have that ci gets at least 3u+1 points from each of v1 and v2. Thus, we conclude that s(ci) \u2265 6u+ 2.\nFinally, notice that, irrespective of the contents of A and B, it holds that s(d) = 6u . Therefore, following the computation described in the last paragraph, we conclude that d is a Borda winner if and only if A and B are disjoint. So, assuming, towards a contradiction, that there is a streaming algorithm for Borda-CC which uses o(m) space, we use that algorithm with k = 1 and \u01eb = 1/3. Since the streaming algorithm would declare d as the winner if and only if A and B are disjoint, it would contradict the lower bound for Set Disjointness.\nAs for Borda-M, notice that in the reduction described above the size k of the committee is 1. In this case, BordaCC and Borda-M are equivalent, thus the reduction transfers to Borda-M as it is.\nWe continue by observing the following lower bound, with respect to the required approximation \u01eb (notice that the following theorem is also a corollary of [4, Theorem 10]).\nTheorem 7 For any \u01eb > 0, any \u01eb-approximate streaming algorithm for Approval-CC needs \u2126(\u01eb\u22121) space.\nProof. We reduce from the \u21131-Heavy Hitters problem, which, given a stream containing n items, each item is of one type out of m item types, an approximation parameter \u01eb, and a further parameter \u03c6, asks for returning all items which occur at least \u03c6n times, while not returning any item which occurs less than (\u03c6 \u2212 \u01eb)n times. A lower bound of O(\u01eb\u22121) is known for \u21131-Heavy Hitters [4].\nGiven an instance of \u21131-Heavy Hitters, we create an instance for Approval-CC, as follows. For each item type, we create a candidate. For each item in the stream, we create a voter approving only the candidate corresponding to its item type. We set k = 1, keep the same \u01eb, and set \u03c6 = 1/2. This finishes the description of the reduction. Correctness and space complexity follows immediately.\nThe reader might notice that the lower bounds presented in this section are not tight. We leave the task of closing the gap between our upper bounds and lower bounds to future research."}, {"heading": "4. DISCUSSION AND OUTLOOK", "text": "We have described streaming algorithms which find approximate winners for several well-known proportional representation multiwinner voting rules. Below we mention some extensions to our model, discuss the usefulness of our results, and mention several avenues for future research.\nMore general models. In this paper we concentrated on a simple streaming model where (1) each item in the stream is a voter, (2) there are no assumptions on the order by which the voters arrive to the stream, and (3) the goal is to compute an approximate winner at the end of the stream.\nThere are other relevant models, which we mention below.\n\u2022 In the sliding windows model, the goal is to compute an approximate winner with respect to the last t elements in the stream, for some given t. Since our streaming algorithms are based on sampling, and sampling from a sliding window can be done efficiently [1], our streaming algorithms extend to this model as well. This model is useful for identifying emerging trends.\n\u2022 It is possible to use our streaming algorithms not only to compute an approximate winner at the end of the stream,\nbut, since they are based on sampling, they can be used to compute an approximate winner at any time during the stream.\n\u2022 Our streaming algorithms extend also to situations where we do not know the number n of the voters a-priori, as is apparent by a recent result [4], and since our streaming algorithms are based on sampling.\n\u2022 Consider situations where a voter might gradually approve more candidates. A corresponding stream model might be that each item in the stream is a tuple (vi, cj), where an item (vi, cj) means that voter vi have just decided to approve candidate cj . Such a stream model might model online shopping websites, where an item (vi, cj) would arrive to the stream whenever the person vi decided to search for the product cj . Importantly, since we can decide at the beginning of the stream which voters to sample, it follows that our upper bounds also extend to this, more general model.\nLess general models. It might be interesting to study models where we assume some structure in the stream. Specifically, one might consider uniform streams, where the voters are not arriving in an arbitrary (possibly adversarial) order, but in a random order, by choosing a random permutation uniformly at random. The hope is that for such uniform streams it might be possible to design streaming algorithms with better space complexity. Indeed, we believe that, at least for uniform streams, there are streaming algorithms with better space complexity for round-based voting rules, such as the greedy versions of Chamberlin\u2013Courant and Monroe [22] (in short, one might sample several subelections, and use each subelection for a different round).\nSuch results would be relevant also for situations without huge number of voters, but with time constraints; consider the following example (which we thank an anonymous reviewer for suggesting it). A distinguished speaker is to give the same talk at k different dates, and, in order to maximize the total number of attendees, an online scheduling poll is created in order to decide upon the dates. The problem is that we have to decide upon the dates very soon, so we cannot wait for everybody to answer; our sampling-based streaming algorithms (and possibly even better algorithms assuming stream uniformity) could tell us how many voters we need in the scheduling poll.\nAnother restricted model might be to consider restricted domains, thus not considering all possible elections, but only those elections which adhere to some restricted domains, such as single peaked domains and single crossing domains. It is not clear whether imposing structural constraints on the elections would lower the needed space complexity.\nOther multiwinner voting rules. Indeed, streaming algorithms for other multiwinner voting rules deserve to be studied as well. We specifically mention Single Transferable Vote (STV) which also aims at proportional representation. Naturally, there are other multiwinner voting rules which do not aim at proportional representation; we mention k-best rules, committee scoring rules, and various extensions to Condorcet consistent voting rules, as some important families of multiwinner voting rules."}], "references": [{"title": "Sampling from a moving window over streaming data", "author": ["B. Babcock", "M. Datar", "R. Motwani"], "venue": "In Proceedings of SODA", "citeRegEx": "1", "shortCiteRegEx": "1", "year": 2002}, {"title": "On the computation of fully proportional representation", "author": ["N. Betzler", "A. Slinko", "J. Uhlmann"], "venue": "Journal of Artificial Intelligence Research,", "citeRegEx": "2", "shortCiteRegEx": "2", "year": 2013}, {"title": "Fishing out winners from vote streams", "author": ["A. Bhattacharyya", "P. Dey"], "venue": "arXiv preprint arXiv:1508.04522,", "citeRegEx": "3", "shortCiteRegEx": "3", "year": 2015}, {"title": "An optimal algorithm for l1-heavy hitters in insertion streams and related problems", "author": ["A. Bhattacharyya", "P. Dey", "D.P. Woodruff"], "venue": "In Proceedings of PODS \u201916,", "citeRegEx": "4", "shortCiteRegEx": "4", "year": 2016}, {"title": "Representative deliberations and representative decisions: Proportional representation and the Borda rule", "author": ["B. Chamberlin", "P. Courant"], "venue": "American Political Science Review,", "citeRegEx": "5", "shortCiteRegEx": "5", "year": 1983}, {"title": "Compilation and communication protocols for voting rules with a dynamic set of candidates", "author": ["Y. Chevaleyre", "J. Lang", "N. Maudet", "J. Monnot"], "venue": "In Proceedings of TARK", "citeRegEx": "6", "shortCiteRegEx": "6", "year": 2011}, {"title": "Compiling the votes of a subelectorate", "author": ["Y. Chevaleyre", "J. Lang", "N. Maudet", "G. Ravilly-Abadie"], "venue": "In Proceedings of IJCAI", "citeRegEx": "7", "shortCiteRegEx": "7", "year": 2009}, {"title": "Vote elicitation: Complexity and strategy-proofness", "author": ["V. Conitzer", "T. Sandholm"], "venue": "In Proceedings of AAAI", "citeRegEx": "8", "shortCiteRegEx": "8", "year": 2002}, {"title": "Communication complexity of common voting rules", "author": ["V. Conitzer", "T. Sandholm"], "venue": "In Proceedings of EC\u2019", "citeRegEx": "9", "shortCiteRegEx": "9", "year": 2005}, {"title": "Sample complexity for winner prediction in elections", "author": ["P. Dey", "A. Bhattacharyya"], "venue": "In Proceedings of AAMAS", "citeRegEx": "10", "shortCiteRegEx": "10", "year": 2015}, {"title": "Properties of multiwinner voting rules", "author": ["E. Elkind", "P. Faliszewski", "P. Skowron", "A. Slinko"], "venue": "In Proceedings of AAMAS", "citeRegEx": "11", "shortCiteRegEx": "11", "year": 2014}, {"title": "Achieving fully proportional representation by clustering voters", "author": ["P. Faliszewski", "A. Slinko", "K. Stahl", "N. Talmon"], "venue": "In Proceedings of AAMAS \u201916,", "citeRegEx": "12", "shortCiteRegEx": "12", "year": 2016}, {"title": "Distributed monitoring of election winners", "author": ["A. Filtser", "N. Talmon"], "venue": "In Proceedings of AAMAS \u201917,", "citeRegEx": "13", "shortCiteRegEx": "13", "year": 2017}, {"title": "Probability inequalities for sums of bounded random variables", "author": ["W. Hoeffding"], "venue": "Journal of the American statistical association,", "citeRegEx": "14", "shortCiteRegEx": "14", "year": 1963}, {"title": "The probabilistic communication complexity of set intersection", "author": ["B. Kalyanasundaram", "G. Schintger"], "venue": "SIAM Journal on Discrete Mathematics,", "citeRegEx": "15", "shortCiteRegEx": "15", "year": 1992}, {"title": "Budgeted social choice: From consensus to personalized decision making", "author": ["T. Lu", "C. Boutilier"], "venue": "In Proceedings of IJCAI", "citeRegEx": "16", "shortCiteRegEx": "16", "year": 2011}, {"title": "Better streaming algorithms for the maximum coverage problem", "author": ["A. McGregor", "H.T. Vu"], "venue": "arXiv preprint arXiv:1610.06199,", "citeRegEx": "17", "shortCiteRegEx": "17", "year": 2016}, {"title": "Fully proportional representation", "author": ["B. Monroe"], "venue": "American Political Science Review,", "citeRegEx": "18", "shortCiteRegEx": "18", "year": 1995}, {"title": "On the complexity of achieving proportional representation", "author": ["A. Procaccia", "J. Rosenschein", "A. Zohar"], "venue": "Social Choice and Welfare,", "citeRegEx": "19", "shortCiteRegEx": "19", "year": 2008}, {"title": "Fully proportional representation with approval ballots: Approximating the maxcover problem with bounded frequencies in FPT time", "author": ["P. Skowron", "P. Faliszewski"], "venue": "In Proceedings AAAI", "citeRegEx": "20", "shortCiteRegEx": "20", "year": 2015}, {"title": "Finding a collective set of items: from proportional multirepresentation to group recommendation", "author": ["P. Skowron", "P. Faliszewski", "J. Lang"], "venue": "In Proceedings of AAAI", "citeRegEx": "21", "shortCiteRegEx": "21", "year": 2015}, {"title": "Fully proportional representation as resource allocation: Approximability results", "author": ["P. Skowron", "P. Faliszewski", "A. Slinko"], "venue": "In Proceedings of IJCAI", "citeRegEx": "22", "shortCiteRegEx": "22", "year": 2013}, {"title": "Compilation complexity of common voting rules", "author": ["L. Xia", "V. Conitzer"], "venue": "In Proceedings of AAAI", "citeRegEx": "23", "shortCiteRegEx": "23", "year": 2010}], "referenceMentions": [{"referenceID": 4, "context": "The voting rule suggested by Chamberlin\u2013Courant [5] and the voting rule suggested by Monroe [18], are multiwinner voting rules concentrated on proportional representation.", "startOffset": 48, "endOffset": 51}, {"referenceID": 17, "context": "The voting rule suggested by Chamberlin\u2013Courant [5] and the voting rule suggested by Monroe [18], are multiwinner voting rules concentrated on proportional representation.", "startOffset": 92, "endOffset": 96}, {"referenceID": 10, "context": "Proportional representation multiwinner voting rules have several good axiomatic properties [11].", "startOffset": 92, "endOffset": 96}, {"referenceID": 18, "context": "Winner determination for these rules, however, is NPhard [19], though it is possible to compute the winner when some parameters are small [2]; that is, winner determination for these rules is fixed-parameter tractable with respect to", "startOffset": 57, "endOffset": 61}, {"referenceID": 1, "context": "Winner determination for these rules, however, is NPhard [19], though it is possible to compute the winner when some parameters are small [2]; that is, winner determination for these rules is fixed-parameter tractable with respect to", "startOffset": 138, "endOffset": 141}, {"referenceID": 21, "context": "Further, efficient approximation algorithms are known [22] for these rules as well as heuristic algorithms based on clustering [12].", "startOffset": 54, "endOffset": 58}, {"referenceID": 11, "context": "Further, efficient approximation algorithms are known [22] for these rules as well as heuristic algorithms based on clustering [12].", "startOffset": 127, "endOffset": 131}, {"referenceID": 17, "context": "Specifically, these rules are used for resource allocation [18, 22], facility location [2], and recommender systems [16, 21].", "startOffset": 59, "endOffset": 67}, {"referenceID": 21, "context": "Specifically, these rules are used for resource allocation [18, 22], facility location [2], and recommender systems [16, 21].", "startOffset": 59, "endOffset": 67}, {"referenceID": 1, "context": "Specifically, these rules are used for resource allocation [18, 22], facility location [2], and recommender systems [16, 21].", "startOffset": 87, "endOffset": 90}, {"referenceID": 15, "context": "Specifically, these rules are used for resource allocation [18, 22], facility location [2], and recommender systems [16, 21].", "startOffset": 116, "endOffset": 124}, {"referenceID": 20, "context": "Specifically, these rules are used for resource allocation [18, 22], facility location [2], and recommender systems [16, 21].", "startOffset": 116, "endOffset": 124}, {"referenceID": 2, "context": "The two most-related papers to our paper are two papers by Bhattacharyya and Dey [3, 10].", "startOffset": 81, "endOffset": 88}, {"referenceID": 9, "context": "The two most-related papers to our paper are two papers by Bhattacharyya and Dey [3, 10].", "startOffset": 81, "endOffset": 88}, {"referenceID": 2, "context": "The first paper [3] provides an analysis of the space complexity of streaming algorithms for some single-winner voting rules.", "startOffset": 16, "endOffset": 19}, {"referenceID": 9, "context": "The second paper [10] provides an analysis concerning the number of samples which are sufficient in order to approximately compute the winner under various single-winner voting rules, and is of relevance to our paper since our algorithms are based on sampling.", "startOffset": 17, "endOffset": 21}, {"referenceID": 12, "context": "Another related paper is that of Filtser and Talmon [13] which provides efficient protocols for winner determination in distributed streams.", "startOffset": 52, "endOffset": 56}, {"referenceID": 19, "context": ", [20]).", "startOffset": 2, "endOffset": 6}, {"referenceID": 16, "context": "Thus, the very recent paper by McGregor and Vu [17] is of relevance to us; specifically, they give an upper bound [17, Theorem 10] which has some similarities with our Theorem 1, and they give a lower bound [17, Theorem 20].", "startOffset": 47, "endOffset": 51}, {"referenceID": 8, "context": "Conitzer and Sandholm [9] study communication complexity of various voting rules; they do not consider approximations and therefore the communication complexity of their protocols is generally quite high.", "startOffset": 22, "endOffset": 25}, {"referenceID": 5, "context": "[6] design communication protocols for situations where the set of candidates might change over time.", "startOffset": 0, "endOffset": 3}, {"referenceID": 6, "context": "[7] study compilation complexity of various voting rules; roughly speaking, they divide the electorate into two parts, and are concerned with the amount of information which one part shall transmit to the other in order to correctly identify a winner.", "startOffset": 0, "endOffset": 3}, {"referenceID": 22, "context": "Xia and Conitzer [23] extend upon this previouslymentioned paper by considering some further variants as well as some other voting rules not previously studied.", "startOffset": 17, "endOffset": 21}, {"referenceID": 7, "context": "Finally, we mention the paper by Conitzer and Sandholm [8] which is concerned with vote elicitation.", "startOffset": 55, "endOffset": 58}, {"referenceID": 13, "context": "Theorem 1 (Hoeffding\u2019s inequality [14]) Let X1, .", "startOffset": 34, "endOffset": 38}, {"referenceID": 14, "context": "It is known that Alice shall send \u03a9(u) bits in order for Bob to be correct with high probability [15].", "startOffset": 97, "endOffset": 101}, {"referenceID": 3, "context": "A lower bound of O(\u01eb) is known for l1-Heavy Hitters [4].", "startOffset": 52, "endOffset": 55}, {"referenceID": 0, "context": "Since our streaming algorithms are based on sampling, and sampling from a sliding window can be done efficiently [1], our streaming algorithms extend to this model as well.", "startOffset": 113, "endOffset": 116}, {"referenceID": 3, "context": "\u2022 Our streaming algorithms extend also to situations where we do not know the number n of the voters a-priori, as is apparent by a recent result [4], and since our streaming algorithms are based on sampling.", "startOffset": 145, "endOffset": 148}, {"referenceID": 21, "context": "Indeed, we believe that, at least for uniform streams, there are streaming algorithms with better space complexity for round-based voting rules, such as the greedy versions of Chamberlin\u2013Courant and Monroe [22] (in short, one might sample several subelections, and use each subelection for a different round).", "startOffset": 206, "endOffset": 210}], "year": 2017, "abstractText": "We consider elections where the voters come one at a time, in a streaming fashion, and devise space-efficient algorithms which identify an approximate winning committee with respect to common multiwinner proportional representation voting rules; specifically, we consider the Approval-based and the Borda-based variants of both the Chamberlin\u2013 Courant rule and the Monroe rule. We complement our algorithms with lower bounds. Somewhat surprisingly, our results imply that, using space which does not depend on the number of voters it is possible to efficiently identify an approximate representative committee of fixed size over vote streams with huge number of voters.", "creator": "LaTeX with hyperref package"}}}