{"id": "1703.09833", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "28-Mar-2017", "title": "Theory II: Landscape of the Empirical Risk in Deep Learning", "abstract": "Previous theoretical work on deep learning and neural network optimization tend to focus on avoiding saddle points and local minima. However, the practical observation is that, at least for the most successful Deep Convolutional Neural Networks (DCNNs) for visual processing, practitioners can always increase the network size to fit the training data (an extreme example would be [1]). The most successful DCNNs such as VGG and ResNets are best used with a small degree of \"overparametrization\". In this work, we characterize with a mix of theory and experiments, the landscape of the empirical risk of overparametrized DCNNs. We first prove the existence of a large number of degenerate global minimizers with zero empirical error (modulo inconsistent equations). The zero-minimizers -- in the case of classification -- have a non-zero margin. The same minimizers are degenerate and thus very likely to be found by SGD that will furthermore select with higher probability the zero-minimizer with larger margin, as discussed in Theory III (to be released). We further experimentally explored and visualized the landscape of empirical risk of a DCNN on CIFAR-10 during the entire training process and especially the global minima. Finally, based on our theoretical and experimental results, we propose an intuitive model of the landscape of DCNN's empirical loss surface, which might not be as complicated as people commonly believe.\n\n\n\n\nSolving the problem of CIFAR-10 using CIFAR-10\nThe first step is to use a \"partial\" \"partial\" model of the problem of the local network. The resulting model is a \"partial\" model, which means that the model can only account for the area in the model, as the loss surface is not affected by the loss. We then look at how the loss surface affects the model in the context of data in which it may be distributed. In general, if we consider loss surface area as the source of the problem in the problem, we must assume that this loss surface area is the area in which it is distributed, for example in the general problem. We then find that in the model where CIFAR-10 was applied for all parameters, it is a partial loss surface area, in the context of data from the data center. This is called the network distribution and model, for example, is a partial loss surface area.\nThe model is a partial loss surface area, where the loss surface is not affected by", "histories": [["v1", "Tue, 28 Mar 2017 22:47:04 GMT  (4386kb,D)", "http://arxiv.org/abs/1703.09833v1", null], ["v2", "Thu, 22 Jun 2017 09:33:35 GMT  (5314kb,D)", "http://arxiv.org/abs/1703.09833v2", "Merged figures to make the main text more compact. Moved some similar figures to the appendix"]], "reviews": [], "SUBJECTS": "cs.LG cs.CV cs.NE", "authors": ["qianli liao", "tomaso poggio"], "accepted": false, "id": "1703.09833"}, "pdf": {"name": "1703.09833.pdf", "metadata": {"source": "CRF", "title": "Theory II: Landscape of the Empirical Risk in Deep Learning", "authors": ["Tomaso Poggio", "Qianli Liao"], "emails": [], "sections": [{"heading": null, "text": "Previous theoretical work on deep learning and neural network optimization tend to focus on avoiding saddle points and local minima. However, the practical observation is that, at least for the most successful Deep Convolutional Neural Networks (DCNNs) for visual processing, practitioners can always increase the network size to fit the training data (an extreme example would be [1]). The most successful DCNNs such as VGG and ResNets are best used with a small degree of \u201coverparametrization\u201d. In this work, we characterize with a mix of theory and experiments, the landscape of the empirical risk of overparametrized DCNNs. We first prove the existence of a large number of degenerate global minimizers with zero empirical error (modulo inconsistent equations). The zero-minimizers \u2013 in the case of classification \u2013 have a non-zero margin. The same minimizers are degenerate and thus very likely to be found by SGD that will furthermore select with higher probability the zero-minimizer with larger margin, as discussed in Theory III (to be released). We further experimentally explored and visualized the landscape of empirical risk of a DCNN on CIFAR-10 during the entire training process and especially the global minima. Finally, based on our theoretical and experimental results, we propose an intuitive model of the landscape of DCNN\u2019s empirical loss surface, which might not be as complicated as people commonly believe.\nThis work was supported by the Center for Brains, Minds and Machines (CBMM), funded by NSF STC award CCF - 1231216.\n1\nar X\niv :1\n70 3.\n09 83\n3v 1\nContents"}, {"heading": "1 Introduction 3", "text": "1.1 Organization of the paper and main results . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 3\n1.2 Previous theoretical work . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 3"}, {"heading": "2 Framework 5", "text": ""}, {"heading": "3 Landscape of the Empirical Risk: Theoretical Analyses 5", "text": "3.1 Optimization of compositional functions: Bezout theorem . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 5\n3.2 Global minima with zero error . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 5\n3.3 Minima . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 6"}, {"heading": "4 The Landscape of the Empirical Risk: Visualizing and Analysing the Loss Surface During the Entire Training Process (on", "text": "CIFAR-10) 7\n4.1 Experimental Settings . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 7\n4.2 Global Visualization of SGD Training Trajectories . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 7\n4.3 Global Visualization of Training Loss Surface with Batch Gradient Descent . . . . . . . . . . . . . . . . . . . . . . . . . 7\n4.4 More Detailed Analyses of Several Local Landscapes (especially the flat global minima) . . . . . . . . . . . . . . . . . . 18\n4.4.1 Perturbing the model at SGD Epoch 5 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 18\n4.4.2 Perturbing the model at SGD Epoch 30 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 19\n4.4.3 Perturbing the final model (SGD 60 + GD 400 epochs) . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 19"}, {"heading": "5 The Landscape of the Empirical Risk: Towards an Intuitive Baseline Model 29", "text": ""}, {"heading": "6 Discussion 32", "text": "6.1 Are the results shown in this work data dependent? . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 32\n6.2 What about Generalization? . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 32"}, {"heading": "7 Conclusions 32", "text": ""}, {"heading": "8 Acknowledgment 32", "text": ""}, {"heading": "A Appendix: Miscellaneous 33", "text": ""}, {"heading": "B Appendix: Study the flat global minima by perturbations on CIFAR-10 (with smaller perturbations) 33", "text": "2"}, {"heading": "1 Introduction", "text": "There are at least three main parts in a theory of Deep Neural Networks. The first part is about approximation \u2013 how and when can deep neural networks avoid the curse of dimensionality\u2019? The second part is about the landscape of the minima of the empirical risk: what can we say in general about global and local minima? The third part is about generalization: why can SGD (Stochastic Gradient Descent) generalize so well despite standard overparametrization of the deep neural networks? In this paper we focus on the second part: the landscape of the empirical risk."}, {"heading": "1.1 Organization of the paper and main results", "text": "We characterize the landscape of the empirical risk from three perspectives:\n\u2022 Section 3. Theoretical Analyses: We study the nonlinear system of equations corresponding to critical points of the gradient of the loss (for the L2 loss function) and to zero minimizers, corresponding to interpolating solutions. In the equations the functions representing the network\u2019s output contain the RELU nonlinearity. We consider an - approximation of it in the sup norm using a polynomial approximation or the corresponding Legendre expansion. We can then invoke Bezout theorem to conclude that there are a very large number of zero-error minima, and that the zero-error minima are highly degenerate, whereas the local non-zero minima, if they exist, may not be degenerate. In the case of classification, zero error implies the existence of a margin, that is a flat region in all dimensions around zero error.\n\u2022 Section 4. Visualizations and Experimental Explorations: The theoretical results indicate that there are degenerate global minima in the loss surface of DCNN. However, it is unclear how the rest of the landscape look like. To gain more knowledge about this, we visualize the landscape of the entire training process using Multidimensional Scaling. We also probe locally the landscape at different locations by perturbation and interpolation experiments.\n\u2022 Section 5. A simple model of the landscape. Summarizing our theoretical and experimental results, we propose a simple baseline model for the landscape of empirical risk, as shown in Figure 1. We conjecture that the loss surface of DCNN is not as complicated as commonly believed. At least in the case of overparametrized DCNNs, the loss surface might be simply a collection of (highdimensional) basins, which have some of the following interesting properties: 1. Every basin reaches a flat global minima. 2. The basins may be rugged such that any perturbation or noise leads to a slightly different convergence path. 3. Despite being perhaps locally rugged, the basin has a relatively regular overall landscape such that the average of two model within a basin gives a model whose error is roughly the average of (or even lower than) the errors of original two models. 4. Interpolation between basins, on the other hand, may significantly raise the error. 5. There might be some good properties in each basin such that there is no local minima \u2014 we do not encounter any local minima in CIFAR, even when training with batch gradient descent without noise."}, {"heading": "1.2 Previous theoretical work", "text": "Deep Learning references start with Hinton\u2019s backpropagation and with LeCun\u2019s convolutional networks (see for a nice review [2]). Of course, multilayer convolutional networks have been around at least as far back as the optical processing era of the 70s. The Neocognitron[3] was a convolutional neural network that was trained to recognize characters. The property of compositionality was a main motivation for hierarchical models of visual cortex such as HMAX which can be regarded as a pyramid of AND and OR layers[4], that is a sequence of conjunctions and disjunctions. In \u201cTheory of Deep Learning I\u201d we have provided formal conditions under which deep networks can avoid the curse of dimensionality. More specifically, several papers have appeared on the landscape of the training error for deep networks. Techniques borrowed from the physics of spin glasses (which in turn were based on old work by Marc Kac on the zeros of algebraic equations) were used [5] to suggest the existence of a band of local minima of high quality as measured by the test error. The argument however depends on a number of assumptions which are rather implausible (see [6] and [7] for comments and further work on the problem). Soudry and Carmon [6] show that with mild over-parameterization and dropout-like noise, training error for a neural network with one hidden layer and piece-wise linear activation is zero at every local minimum. All these results suggest that the energy landscape of deep neural networks should be easy to optimize. They more or less hold in practice \u2014it is easy to optimize a prototypical deep network to near-zero loss on the training set. In this paper and Theory III, we provide a general justification and characterization of global minimizers and why are they easier to find than local minima by SGD."}, {"heading": "2 Framework", "text": "Here we assume a deep network of the convolutional type. We also assume overparametrization, that is more weights than data points, since this is how successful deep networks have been used.\nUnder these conditions, we will show that imposing zero empirical error provides a system of equations (at the zeros) that have a large number of degenerate solutions in the weights. The equations are polynomial in the weights, with coefficients reflecting components of the data vectors (one vector per data point). The system of equations is underdetermined (more unknowns than equations, e.g. data points) because of the assumed overparametrization. Because the global minima are degenerate, that is flat in many of the dimensions, they are more likely to be found by SGD than local minima which are less degenerate.\nIn Theory III we will show then that for the weights regions corresponding to global minima of the empirical error, SGD will generalize well."}, {"heading": "3 Landscape of the Empirical Risk: Theoretical Analyses", "text": ""}, {"heading": "3.1 Optimization of compositional functions: Bezout theorem", "text": "The following analysis of the landscape of the empirical risk is based on two assumptions that hold true in most applications of deep convolutional networks:\n1. overparametrization of the network, typically using several times more parameters (the weights of the network) than data points. In practice, even with data augmentation, one can always make the model larger to achieve overparametrization without sacrificing either the training or generalization performance.\n2. each of the equations corresponding to zeros of the empirical risk (training assumed in a regression framework attempting to minimize a loss such as square loss or cross-entropy) can be approximated by a polynomial equation in the weights, by a polynomial approximaton within (in the sup norm) of the RELU nonlinearity.\nThe main observation is that the degree of each approximating equation `d( ) is determined by the accuracy we desire for approximating the ReLU activation by a univariate polynomial P of degree `( ) and by the number of layers d.1 In the well-determined case (as many unknown weights as equations, that is data points), Bezout theorem provides an upper bound on the number of solutions. The number of distinct zeros (counting points at infinity, using projective space, assigning an appropriate multiplicity to each intersection point, and excluding degenerate cases) would be equal to Z - the product of the degrees of each of the equations. Since the system of equations is usually underdetermined \u2013 as many equations as data points but more unknowns (the weights) \u2013 we expect an infinite number of global minima, under the form of Z regions of zero empirical error. If the equations are inconsistent there are still many global minima of the squared error that is solutions of systems of equations with a similar form.\nNotice that the equations have a particular compositional form characterized in \u201cTheory I\u201d (see especially Corollary 4)."}, {"heading": "3.2 Global minima with zero error", "text": "We consider a simple example in which the zeros of the empirical error (that is exact solutions of the set of equations obtained by setting f(xi)\u2212 yi = 0, where i = 1, \u00b7 \u00b7 \u00b7 , N are the data points and f(x) is the network parametrized by weights w). In particular, we consider the zeros on the training set of a network with ReLUs activation approximating a function of four variables with the following structure:\nf(x1, x2, x3, x4) = g(h(x1, x2), h \u2032(x3, x4)). (1)\nWe assume that the deep approximation network uses ReLUs as follows\ng(h, h) = A(W1h+W2h+W3)+ +B(W \u2032 1h+W \u2032 2h+W \u2032 3)+ (2)\nand h(x1, x2) = a(w1x1 + w2x2 + w3)+ + b(v1x1 + v2x2 + v3)+, (3)\nh\u2032(x3, x4) = a \u2032(w\u20321x1 + w \u2032 2x2 + w \u2032 3)+ + b \u2032(v\u20321x1 + v \u2032 2x2 + v \u2032 3)+. (4)\n1Of course we have to contrain the range of values allowed in the argument of the RELUs to be able to set the polynomial P that achieves accuracy .\nThere are usually quite a few more units in the first and second layer than the 2 of the example above.\nThis example generalizes to the case in which the kernel support is larger than 2 (for instance is 3x3 = 9 as in ResNets). In the standard case each node (for instance in the first layer) contains quite a few units (O(100)) and as many outputs. However, the effective outputs are much fewer so that each is the linear combination of several ReLUs units as shown in the Appendix.\nConsider Figure 2. The approximating polynomial equations for the zero of the empirical errors for this network, which could be part of a larger network, are, for i = 1, \u00b7 \u00b7 \u00b7 , N where N are the data points:\nP (W1P (w1xi,1 + w2xi,2 + w3) +W2P (w1xi,3 + w2xi,4 + w3)+ (5)\n+W3)\u2212 yi = 0 (6)\nThe above equations describe the simple case of one ReLU per node for the case of the network of Figure 2. Equations 5 are a system of underconstrained polynomial equations of degree ld. In general, there are as many constraints as data points i = 1, \u00b7 \u00b7 \u00b7 , N for a much larger number K of unknown weights W,w, \u00b7 \u00b7 \u00b7 . There are no solutions if the system is inconsistent \u2013 which happens if and only if 0 = 1 is a linear combination (with polynomial coefficients) of the equations (this is Hilbert\u2019s Nullstellensatz). Otherwise, it has infinitely many complex solutions: the set of all solutions is an algebraic set of dimension at least K \u2212 N . If the underdetermined system is chosen at random the dimension is equal to K \u2212N with probability one.\nEven in the non-degenerate case (as many data as parameters), Bezout theorem suggests that there are many solutions. With d layers the degree of the polynomial equations is `d. With N datapoints the Bezout upper bound in the zeros of the weights is `Nd. Even if the number of real zero \u2013 corresponding to zero empirical error \u2013 is much smaller (Smale and Shub estimate [8] l Nd 2 ), the number is still enormous: for a CiFAR situation this may be as high as 210 5 ."}, {"heading": "3.3 Minima", "text": "As mentioned, in several cases we expect absolute zeros to exist with zero empirical error. If the equations are inconsistent it seems likely that global minima with similar properties exist.\nCorollary 1. In general, non-zero minima exist with higher dimensionality than the zero-error global minima: their dimensionality is the number of weights K vs. the number of data points N . This is true in the linear case and also in the presence of ReLUs.\nLet us consider the same example as before looking at the critical points of the gradient. With a square loss function the critical points of the gradient are:\n\u2207w N\u2211 i=1 (f(xi)\u2212 yi)2) = 0 (7)\nwhich gives K equations\nN\u2211 i=1 (f(xi)\u2212 yi)2)\u2207wf(xi) = 0. (8)\nApproximating within in the sup norm each ReLU in f(xi) with a fixed polynomial P (z) yields again a system of K polynomial equations in the weights of higher order than in the case of zero-minimizers. They are of course satisfied by the degenerate zeros of the empirical error but also by additional non-degenerate (in the general case) solutions.\nWe summarize our main observations on the approximating system of equations in the following\nProposition 1. There are a very large number of zero-error minima which are highly degenerate unlike the local non-zero minima."}, {"heading": "4 The Landscape of the Empirical Risk: Visualizing and Analysing the Loss Surface During the Entire Training Process (on CIFAR-10)", "text": ""}, {"heading": "4.1 Experimental Settings", "text": "Unless mentioned otherwise, we trained a 6-layer (with the 1st layer being the input) Deep Convolutional Neural Network (DCNN) on CIFAR-10. All the layers are 3x3 convolutional layers with stride 2. No pooling is performed. Batch Normalizations (BNs) are used between hidden layers. The shifting and scaling parameters in BNs are not used. No data augmentation is performed, so that the training set is fixed (size = 50,000). There are 188,810 parameters in the DCNN.\nMultidimensional Scaling The core of our visualization approach is Multidimensional Scaling (MDS) [9]. We record a large number of intermediate models during the process of several training schemes. Each model is a high dimensional point with the number of dimensions being the number of parameters. The strain-based MDS algorithm is applied to such points and a corresponding set of 2D points are found such that the dissimilarity matrix between the 2D points are as similar to those of the high-dimensional points as possible. One minus cosine similarity is used as the dissimilarity metric. This is more robust to scaling of the weights, which is usually normalized out by BNs. Euclidean distance gives qualitatively similar results though."}, {"heading": "4.2 Global Visualization of SGD Training Trajectories", "text": "We show the optimization trajectories of Stochastic Gradient Descent (SGD), since this is what people use in practice. The SGD trajectories follow the mini-batch approximations of the training loss surface. Although the trajectories are noisy due to SGD, the collected points along the trajectories provide a visualization of the landscape of empirical risk.\nWe train a 6-layer (with the 1st layer being the input) convolutional network on CIFAR-10 with stochastic gradient descent (batch size = 100) We divide the training process into 12 stages. In each stage, we perform 8 parallel SGDs with learning rate 0.01 for 10 epochs, resulting in 8 parallel trajectories denoted by different colors in each subfigure of Figure 4 and 6. Trajectories 1 to 4 in each stage start from the final model (denoted by P ) of trajectory 1 of the previous stage. Trajectories 5 to 8 in each stage start from a perturbed version of P . The perturbation is performed by adding a gaussian noise to the weights of each layer with the standard deviation being 0.01 times layer\u2019s standard deviation. In general, we observe that running any trajectory with SGD again almost always leads to a slightly different model.\nTaking layer 2 weights for example, we plot the global MDS results of stage 1 to 12 in Figure 3. The detailed parallel trajectories of stage 1 to 3 are plotted separately in Figure 4.\nThe results of stages more than 5 are quite cluttered. So we applied a separate MDS to the stages 5 to 12 and show the results in Figure 5. The detailed parallel trajectories of stage 5 to 7 are plotted separately in Figure 6.\nThe weights of different layers tend to produce qualitatively similar results. We show the results of layer 5 in Figure 7 and Figure 8."}, {"heading": "4.3 Global Visualization of Training Loss Surface with Batch Gradient Descent", "text": "Next, we visualize the exact training loss surface by training the models using Batch Gradient Descent (BGD). We adopt the following procedures: We train a model from scratch using BGD. At epoch 0, 10, 50 and 200, we create a branch by perturbing the model by adding a Gaussian noise to all layers. The standard deviation of the Gaussian noise is a meta parameter, and we tried 0.25*S, 0.5*S and 1*S, where S denotes the standard deviation of the weights in each layer, respectively.\nWe also interpolate (by averaging) the models between the branches and the main trajectory, epoch by epoch. The interpolated models are evaluated on the entire training set to get a performance (in terms of error percentage).\nThe main trajectory, branches and the interpolated models together provides a good visualization of the landscape of the empirical risk."}, {"heading": "4.4 More Detailed Analyses of Several Local Landscapes (especially the flat global minima)", "text": "After the global visualization of the loss surface, we perform some more detailed analyses at several locations of the landscape. Especially, we would like to check if the global minima is flat. We train a 6-layer (with the 1st layer being the input) DCNN on CIFAR-10 with 60 epochs of SGD (batch size = 100) and 400 epochs of Batch Gradient Descent (BGD). BGD is performed to get to as close to the global minima as possible.\nNext we select three models from this learning trajectory\n\u2022 M5: the model at SGD epoch 5.\n\u2022 M30: the model at SGD epoch 30.\n\u2022 Mfinal: the final model after 60 epochs of SGD and 400 epochs of BGD.\nWe perturb the weights of these models and retrain them with BGD, respectively. This procedure was done multiple times for each model to get an idea of the nearby empirical risk landscape.\nThe results are consistent with the previous theoretical arguments:\n\u2022 global minima are easily found with zero classification error and negligible cross entropy loss.\n\u2022 The global minima seem \u201cflat\u201d under perturbations with zero error corresponding to different parameters values.\n\u2022 The local landscapes at different levels of error seem to be very similar. Perturbing a model always lead to a different convergence path, leading to a similar but distinct model. We tried smaller perturbations and also observed this effect."}, {"heading": "4.4.1 Perturbing the model at SGD Epoch 5", "text": ""}, {"heading": "4.4.2 Perturbing the model at SGD Epoch 30", "text": "4.4.3 Perturbing the final model (SGD 60 + GD 400 epochs)"}, {"heading": "5 The Landscape of the Empirical Risk: Towards an Intuitive Baseline Model", "text": "In this section, we propose a simple baseline model for the landscape of empirical risk that is consistent with all of our theoretical and experimental findings. In the case of overparametrized DCNNs, here is a recapitulation of our main observations:\n\u2022 Theoretically, we show that there are a large number of global minimizers with zero (or small) empirical error. The same minimizers are degenerate.\n\u2022 Regardless of Stochastic Gradient Descent (SGD) or Batch Gradient Descent (BGD), a small perturbation of the model almost always leads to a slightly different convergence path. The earlier the perturbation is in the training process the more different the final model would be.\n\u2022 Interpolating two \u201cnearby\u201d convergence paths lead to another convergence path with similar errors every epoch. Interpolating two \u201cdistant\u201d models lead to raised errors.\n\u2022 We do not observe local minima, even when training with BGD.\nThere is a simple model that is consistent with above observations. As a first-order characterization, we believe that the landscape of empirical risk is simply a collection of (hyper) basins that each has a flat global minima. Illustrations are provided in Figure 1 and Figure 33 (a concrete 3D case).\nAs shown in Figure 1 and Figure 33, the building block of the landscape is a basin.How does a basin look like in high dimension? Is there any evidence for this model? One definition of a hyper-basin would be that as loss decreases, the hypervolume of the parameter space decreases: 1D (a slice of 2D), 2D and 3D examples are shown in Figure 33 (A), (B), (C), respectively. As we can see, with the same amount of scaling in each dimension, the volume shrinks much faster as the number of dimension increases \u2014 with a linear decrease in each dimension, the hypervolume decreases as a exponential function of the number of dimensions. With the number of dimensions being the number of parameters, the volume shrinks incredibly fast. This leads to a phenomenon that we all observe experimentally: whenever one perturb a model by adding some significant noise, the loss almost always never go down. The larger the perturbation is, the more the error increases. The reasons are simple if the local landscape is a hyper-basin: the volume of a lower loss area is so small that by randomly perturbing the point, there is almost no chance getting there. The larger the perturbation is, the more likely it will get to a much higher loss area.\nThere are, nevertheless, other plausible variants of this model that can explain our experimental findings. In Figure 34, we show one alternative model we call \u201cbasin-fractal\u201d. This model is more elegant while being also consistent with most of the above observations. The key difference between simple basins and \u201cbasin-fractal\u201d is that in \u201cbasin-fractal\u201d, one should be able to find \u201cwalls\u201d (raised errors) between two models within the same basin. Since it is a fractal, these \u201cwalls\u201d should be present at all levels of errors. For the moment, we only discovered \u201cwalls\u201d between two models the trajectories lead to which are very different (obtained either by splitting very early in training, as shown in Figure 10 (a) and Figure 12 (a) or by a very significant perturbation, as shown in Figure 12 (b)). We have not found other significant \u201cwalls\u201d in all other perturbation and interpolation experiments. So a first order model of the landscape would be just a collection of simple basins. Nevertheless, we do find \u201cbasin-fractal\u201d elegant, and perhaps the \u201cwalls\u201d in the low loss areas are just too flat to be noticed.\nAnother surprising finding about the basins is that, they seem to be so \u201csmooth\u201d such that there is no local minima. Even when training with batch gradient descent, we do not encounter any local minima. When trained long enough with small enough learning rates, one always gets to 0 classification error and negligible cross entropy loss.\nHigh Loss\nLow Loss\n(A) Profile view of a basin with flat global minima (B) Top-down view of the basin (2D)\nHigh Loss\nFlat Global Minima\nLow Loss\nFlat Global Minima There may be small obstacles/bumps, can be any shape"}, {"heading": "6 Discussion", "text": ""}, {"heading": "6.1 Are the results shown in this work data dependent?", "text": "We visualized the SGD trajectories in the case of fitting random labels. There is no qualitative difference between the results from those of normal labels. So it is safe to say the results are at least not label dependent. We will further check if fitting random input data to random labels will give similar results."}, {"heading": "6.2 What about Generalization?", "text": "It is experimentally observed that, at least in all our experiments, overparametrization (e.g., 60x more parameters than data) does not hurt generalization at all. We will discuss generalization in more details in the Theory III paper (to be released)."}, {"heading": "7 Conclusions", "text": "Overall, we characterize the landscape of empirical risk of overparametrized DCNNs with a mix of theoretical analyses and experimental explorations. We provide a simple baseline model of the landscape that can account for all of our theoretical and experimental results. Nevertheless, as the final model is so simple, it is hard to believe that it would completely characterize the true loss surface of DCNN. Further research is warranted."}, {"heading": "8 Acknowledgment", "text": "This work was supported by the Center for Brains, Minds and Machines (CBMM), funded by NSF STC award CCF \u2013 1231216."}, {"heading": "A Appendix: Miscellaneous", "text": "The rank of the matrix of weights connecting each node to the lower nodes in the tree should be of the same order as the number of inputs to the lower level and ultimately to the first node in the tree (in the ResNet case this predicts the rank to be around 9). This follows from\nCorollary 2. Consider the three nodes of the Figure . Suppose that there are Q inputs to each of the first layer nodes. Then the effective inputs to the second layer unit should also be in the order of Q to keep the same accuracy across the network.\nThe above statement follows from Corollary 4 of \u201cTheory I\u201d. It implies that the number of monomials zi is usually not larger than the number of effective, unknown weights. This in turn implies that the weights are underdetermined as the monomials themselves."}, {"heading": "B Appendix: Study the flat global minima by perturbations on CIFAR-10 (with smaller perturbations)", "text": "Zero-error model Mfinal: We first train a 6-layer (with the 1st layer being the input) convolutional network on CIFAR-10. The model reaches 0 training classification error after 60 epochs of stochastic gradient descent (batch size = 100) and 372 epochs of gradient descent (batch size = training set size). We call this model Mfinal. Next we perturb the weights of this zero-error model and continue training it. This procedure was done multiple times to see whether the weights converge to the same point. Note that no data augmentation is performed, so that the training set is fixed (size = 50,000).\nThe procedures are essentially the same as what described in main text Section 4.4. The main difference is that the perturbations are smaller. The classification errors are even 0 after the perturbation and throughout the entire following training process."}], "references": [{"title": "Understanding deep learning requires rethinking generalization", "author": ["C. Zhang", "S. Bengio", "M. Hardt", "B. Recht", "O. Vinyals"], "venue": "arXiv preprint arXiv:1611.03530, 2016.", "citeRegEx": "1", "shortCiteRegEx": null, "year": 2016}, {"title": "Deep learning", "author": ["Y. LeCun", "Y. Bengio", "G. Hinton"], "venue": "Nature, pp. 436\u2013444, 2015.", "citeRegEx": "2", "shortCiteRegEx": null, "year": 2015}, {"title": "Neocognitron: A self-organizing neural network for a mechanism of pattern recognition unaffected by shift in position", "author": ["K. Fukushima"], "venue": "Biological Cybernetics, vol. 36, no. 4, pp. 193\u2013202, 1980.", "citeRegEx": "3", "shortCiteRegEx": null, "year": 1980}, {"title": "Hierarchical models of object recognition in cortex", "author": ["M. Riesenhuber", "T. Poggio"], "venue": "Nature Neuroscience, vol. 2, pp. 1019\u20131025, Nov. 1999.", "citeRegEx": "4", "shortCiteRegEx": null, "year": 1999}, {"title": "Open problem: The landscape of the loss surfaces of multilayer networks", "author": ["A. Choromanska", "Y. LeCun", "B. Arous"], "venue": "JMLR: Workshop and Conference Proceedings 28th Annual Conference on Learning Theory, p. 1\u20135, 2015.", "citeRegEx": "5", "shortCiteRegEx": null, "year": 2015}, {"title": "No bad local minima: Data independent training error guarantees for multilayer neural networks", "author": ["D. Soudry", "Y. Carmon"], "venue": "arXiv preprint arXiv:15605.08361, 2016.", "citeRegEx": "6", "shortCiteRegEx": null, "year": 2016}, {"title": "Deep learning without poor local minima", "author": ["K. Kawaguchi"], "venue": "Advances in Neural Information Processing Systems (NIPS), 2016.", "citeRegEx": "7", "shortCiteRegEx": null, "year": 2016}, {"title": "Complexity of bezout theorem v: Polynomial time", "author": ["M. Shub", "S. Smale"], "venue": "Theoretical Computer Science, no. 133, pp. 141\u2013164, 1994.", "citeRegEx": "8", "shortCiteRegEx": null, "year": 1994}], "referenceMentions": [{"referenceID": 4, "context": "Techniques borrowed from the physics of spin glasses (which in turn were based on old work by Marc Kac on the zeros of algebraic equations) were used [5] to suggest the existence of a band of local minima of high quality as measured by the test error.", "startOffset": 150, "endOffset": 153}, {"referenceID": 5, "context": "The argument however depends on a number of assumptions which are rather implausible (see [6] and [7] for comments and further work on the problem).", "startOffset": 90, "endOffset": 93}, {"referenceID": 6, "context": "The argument however depends on a number of assumptions which are rather implausible (see [6] and [7] for comments and further work on the problem).", "startOffset": 98, "endOffset": 101}, {"referenceID": 5, "context": "Soudry and Carmon [6] show that with mild over-parameterization and dropout-like noise, training error for a neural network with one hidden layer and piece-wise linear activation is zero at every local minimum.", "startOffset": 18, "endOffset": 21}, {"referenceID": 7, "context": "Even if the number of real zero \u2013 corresponding to zero empirical error \u2013 is much smaller (Smale and Shub estimate [8] l Nd 2 ), the number is still enormous: for a CiFAR situation this may be as high as 2 5 .", "startOffset": 115, "endOffset": 118}], "year": 2017, "abstractText": "Previous theoretical work on deep learning and neural network optimization tend to focus on avoiding saddle points and local minima. However, the practical observation is that, at least for the most successful Deep Convolutional Neural Networks (DCNNs) for visual processing, practitioners can always increase the network size to fit the training data (an extreme example would be ). The most successful DCNNs such as VGG and ResNets are best used with a small degree of \u201coverparametrization\u201d. In this work, we characterize with a mix of theory and experiments, the landscape of the empirical risk of overparametrized DCNNs. We first prove the existence of a large number of degenerate global minimizers with zero empirical error (modulo inconsistent equations). The zero-minimizers \u2013 in the case of classification \u2013 have a non-zero margin. The same minimizers are degenerate and thus very likely to be found by SGD that will furthermore select with higher probability the zero-minimizer with larger margin, as discussed in Theory III (to be released). We further experimentally explored and visualized the landscape of empirical risk of a DCNN on CIFAR-10 during the entire training process and especially the global minima. Finally, based on our theoretical and experimental results, we propose an intuitive model of the landscape of DCNN\u2019s empirical loss surface, which might not be as complicated as people commonly believe. This work was supported by the Center for Brains, Minds and Machines (CBMM), funded by NSF STC award CCF 1231216. 1 ar X iv :1 70 3. 09 83 3v 1 [ cs .L G ] 2 8 M ar 2 01 7", "creator": "LaTeX with hyperref package"}}}