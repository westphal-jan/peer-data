{"id": "1703.09962", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "29-Mar-2017", "title": "Spaceprint: a Mobility-based Fingerprinting Scheme for Public Spaces", "abstract": "In this paper, we address the problem of how automated situation-awareness can be achieved by learning real-world situations from ubiquitously generated mobility data. Without semantic input about the time and space where situations take place, this turns out to be a fundamental challenging problem. Uncertainties also introduce technical challenges when data is generated in irregular time intervals, being mixed with noise, and errors. Purely relying on temporal patterns observable in mobility data, in this paper, we propose Spaceprint, a fully automated algorithm for finding the repetitive pattern of similar situations in spaces. We evaluate this technique by showing how the latent variables describing the category, and the actual identity of a space can be discovered from the extracted situation patterns. Doing so, we use different real-world mobility datasets with data about the presence of mobile entities in a variety of spaces. We also evaluate the performance of this technique by showing its robustness against uncertainties. Finally, we offer a simple approach to estimating the average distance between virtual space and actual physical space. The technique is useful for comparing the duration of the interaction between virtual and real space. In general, we have demonstrated that even if the distance between virtual and real space has been determined from real space at different times, the distance between virtual and real space has not changed. Although real-time space is relatively quiet at times, the duration of virtual space has increased considerably in time over time. For example, we propose that a small difference in time between virtual and real space is a result of an acceleration of a virtual space by an accelerating force in space by an accelerating force of light, an acceleration of light that has not changed, or the acceleration of light that has not changed. This is further supported by a new approach that allows us to measure the temporal time periods of virtual space and the average distance between virtual and real space, and a potential for prediction of the number of spatial regions in space.", "histories": [["v1", "Wed, 29 Mar 2017 10:31:04 GMT  (981kb,D)", "http://arxiv.org/abs/1703.09962v1", null]], "reviews": [], "SUBJECTS": "cs.AI", "authors": ["mitra baratchi", "geert heijenk", "maarten van steen"], "accepted": false, "id": "1703.09962"}, "pdf": {"name": "1703.09962.pdf", "metadata": {"source": "META", "title": "Spaceprint: a Mobility-based Fingerprinting Scheme for Public Spaces", "authors": ["Mitra Baratchi", "Geert Heijenk", "Maarten van Steen"], "emails": ["m.baratchi@utwente.nl", "geert.heijenk@utwente.nl", "m.r.vansteen@utwente.nl", "permissions@acm.org."], "sections": [{"heading": null, "text": "Purely relying on temporal pa erns observable in mobility data, in this paper, we propose Spaceprint, a fully automated algorithm for nding the repetitive pa ern of similar situations in spaces. We evaluate this technique by showing how the latent variables describing the category, and the actual identity of a space can be discovered from the extracted situation pa erns. Doing so, we use di erent real-world mobility datasets with data about the presence of mobile entities in a variety of spaces. We also evaluate the performance of this technique by showing its robustness against uncertainties.\nKEYWORDS Spatial pro ling, WiFi scanning, Spatio-temporal analysis, Mobility pa ern mining, Point of interest classi cation\nACM Reference format: Mitra Baratchi, Geert Heijenk, Maarten van Steen. 2016. Spaceprint: a Mobility-based Fingerprinting Scheme for Public Spaces. In Proceedings of ACM Conference, Washington, DC, USA, July 2017 (Conference\u201917), 9 pages. DOI: 10.1145/nnnnnnn.nnnnnnn"}, {"heading": "1 INTRODUCTION", "text": "Many situational-aware decision-support systems rely on the capability of describing the situation in spaces. Ideally, these descriptions are updated automatically as the situation in a space changes. Typical examples include automatically identifying a bo leneck on a road, or a suspicious activity in an airport. A means for learning and comparing situations from the abundance of ubiquitously generated mobility data (GPS coordinates, check-in records, WiFi detections, etc.) can open the door to many applications that require such automated situational-awareness. As a rst step towards this\nPermission to make digital or hard copies of all or part of this work for personal or classroom use is granted without fee provided that copies are not made or distributed for pro t or commercial advantage and that copies bear this notice and the full citation on the rst page. Copyrights for components of this work owned by others than ACM must be honored. Abstracting with credit is permi ed. To copy otherwise, or republish, to post on servers or to redistribute to lists, requires prior speci c permission and/or a fee. Request permissions from permissions@acm.org. Conference\u201917, Washington, DC, USA \u00a9 2016 ACM. 978-x-xxxx-xxxx-x/YY/MM. . .$15.00 DOI: 10.1145/nnnnnnn.nnnnnnn\ngoal, in this paper, we investigate how mobility data can represent the repetitive pa ern of situations in spaces.\nIn many cases, a speci c space with a known category such as a library, a canteen, or a classroom, will exhibit repetitive visiting pa erns characterizing a recurring situation. Such pa erns e ectively operate as a spatial ngerprint of situations. Moreover, we can expect that similar places will o en have similar ngerprints. Although in many cases these ngerprints would seem to be static, it is really the usage of a space that determines its meaning, which at various occasions may di er from the location\u2019s original intended purpose. For example, in special situations an o ce space is used for throwing a party or, likewise, an apartment can be rented out as if it were a hotel room. We argue that to be er understand or reason about the situation at hand, it is important to understand to what extent the situation in a space adheres to its regular ngerprint, and otherwise, to what extent it resembles any other well-known ngerprints.\nIn this light, we address the question to what extent we can automatically measure a location\u2019s ngerprint of situations from available mobility data. To realize situation-aware systems that are generally applicable, we focus on creating these ngerprints in a completely unsupervised manner. is implies that these ngerprints should be created from raw mobility data without additional human input of any kind. erefore, unlike most previous related research in mobility data analysis, our method operates without a feature-engineering phase.\nTo this end, we study the presence pa ern of devices by looking at when and how long they appear in a space. More speci cally, we make the following contributions. (1) We propose a feature set that can generically characterize all possible presence pa erns in a space. (2) We use such a feature set to extract the ngerprint of the repetitive situations in spaces (Spaceprints) in a fully unsupervised manner. (3) We evaluate the robustness of this ngerprinting scheme in the presence of common sources of uncertainty in ubiquitously collected mobility data sets. (4) We validate our method by showing its classi cation performance using a WiFi-based detection data set and a Foursquare check-in dataset.\ne rest of this paper is organized as follows. Related work is presented in Section 2. We present our problem de nition and a sketch of our proposed ngerprinting framework in Sections 3 and 4, respectively. e details of our ngerprinting scheme is presented in Section 5. e performance of this scheme is evaluated in Section 6. A number of remarks conclude this paper in Section 7."}, {"heading": "2 RELATEDWORK", "text": "ere are two ways to study the movement of individuals in a space when dealing with mobility data (referred to as the Lagrangian and\nar X\niv :1\n70 3.\n09 96\n2v 1\n[ cs\n.A I]\n2 9\nM ar\n2 01\n7\nEulerian approaches [1]). First, from the perspective of an individual, one may ask about the whereabouts of a person: what are the locations that someone visits? When do those visits take place, and for how long? e research in this direction concentrates on extracting mobility pa erns that re ect an individual mobility ngerprint for frequent behavior [8, 10], periodic behavior [9], social behavior [14], etc.\nSecond, from the perspective of a speci c location, one may ask about the visits to that location: When do they take place? How long do they last? Which visits happen again? In this case, one focuses on extracting a spatial mobility ngerprint. Previous related research in extracting these spatial ngerprints have either focused on improving the individual mobility prediction models [7, 15] or on bringing sense to raw location coordinates in terms of meaningful labels. Research in methods to describe the meaning of locations, primarily concentrates on how accurately trajectories can be segmented into sections with basic semantics such as stop and move areas [13], or points of interest [12]. With the prevalence of context-aware mobile applications which needed more than just such low-level semantics, further research has been performed to extract more detailed semantics about spaces interpreted in colloquial terms such as home, work, cinema, restaurant, etc. Using a single person\u2019s frequent trajectory pa erns, semantics about few prede ned places (e.g. home, work) have been extracted in [4, 11]. In a more general case, and when extracting semantics from data involving a large population of mobile entities, a common approach has been enriching data with higher level semantics using additional sources, or using common sense assumptions, for instance, presence at night for home, presence at working hours for o ces or presence in weekends for leisure related locations. Some examples of additional sources of semantics are verbal terms used by people in social media such as twi er [6, 16], and third party geographical sources [17]. In [3] the authors use a number of selected mobility features (e.g., crowded hours, number of visitors per month) along with application usage, and proximity to other devices to label a group of known spaces. Knowing the semantic labels of spaces within a region, higher level regional semantics have also been extracted to label areas such as those used for housing, and businesses [20].\ne spatial ngerprints made thus far are either meant for labeling location coordinates using engineered features in a supervised manner or use additional semantic input to enrich data with context from other sources. ese approaches are not generic and cannot be taken further to realize automated situation-awareness in dynamically changing spaces purely using mobility data. To reach this goal, our approach in spatial ngerprinting from mobility data is di erent from all previous research as it performs in a fully unsupervised manner purely exploiting presence pa erns in spaces. Speci cally, instead of looking for features that characterize spaces based on their semantic meaning, we look for features that can characterize periods of time in a space based on its dynamic situation."}, {"heading": "3 PROBLEM DEFINITION", "text": "We de ne a model based on data acquired from any system that allows for the collection of mobility data in terms of presence or detection of mobile entities in a well-de ned region of space. A\ndetection record is a tuple \u3008d, s, t\u3009 with d being the identi er of the detected mobile entity, s being the identi er of the space where the entity d was detected, and t being the timestamp of the detection. A variety of mobility-data collection systems can result in such a dataset. ese include, for example, WiFi detection of mobile devices near access points, GPS coordinates discretized in grid maps, and check-in records collected from location-based social networks.\nGiven a set of detection records DT, we are interested in a spatial ngerprint SP(s) which de nes the core repeating temporal presence pa erns of space s. Assuming that latent variables such as the unique identity of the space and its semantic category result in such a ngerprint, we demand that this scheme exhibit the following: (1) each space has a unique ngerprint, (2) spaces having the same category have similar ngerprints, and (3) spaces having di erent categories have di erent ngerprints."}, {"heading": "4 FRAMEWORK OVERVIEW", "text": "Our goal is to de ne a spatial ngerprint that summarizes the situations in a space in terms of repeating presence pa erns over time. One might think of creating a time series by measuring a feature from the detections over equally sized duration windows with a speci c resolution, such as the number of detections (feature) during every hour (resolution) of a day (duration). By averaging the value of these features over many duration windows (e.g., over 100 days), the ngerprint can be extracted. If these features were enough to ngerprint a space, with a suitable classi cation algorithm and suitable distance function, we would also be able to classify di erent spaces from one another based on their ngerprint. However, there are many unknown factors that require a ention. e challenge in our case is to identify (1) the features, (2) an appropriate resolution and duration window, and (3) a suitable distance function. Compared to these three, the choice of a classi cation or clustering algorithm is a trivial one. Typically, these challenges are addressed based on intuition. For instance, we may assume that a weekly pa ern governs the visits to a space or that a resolution of one hour is enough to provide the necessary level of detail. is intuitive approach, however, limits the applicability of the ngerprinting scheme. e proposed ngerprinting scheme in this paper addresses these challenges through systematically nding appropriate parameter se ings in an unsupervised manner. We de ne a spatial ngerprint as follows.\nDe nition 4.1. (Spatial ngerprint) e ngerprint for the space s is a triplet SP(s) = \u3008V, FD, FR\u3009, with feature vector V = [v1, . . . ,vn ], of which each element vi represents the value of a speci c feature. FD is the ngerprint duration, indicating the total time over which the ngerprint is con gured. FR is the ngerprint resolution, indicating the minimum time interval over which detections are sampled to extract features. FD is a multiple of FR: \u2203r \u2208 N : FD = r \u00b7 FR.\nAlgorithm 1 summarizes the ngerprinting framework Spaceprint proposed in this paper. Let DT denote a set of detections and tmin(DT) = min{t |\u3008d, s, t\u3009 \u2208 DT}, i.e., the timestamp of the rst detection. Likewise, we have tmax(DT) for the timestamp of the last detection and \u03c4 (DT) = tmax(DT) \u2212 tmin(DT) for the duration of collecting DT. Denote by DT the set of detections\n{\u3008d, s, t \u2212 tmin\u3009|\u3008d, s, t\u3009 \u2208 DT}, i.e., the set of same detections, but now transformed such that the rst detection starts at time 0. Finally, we use the notation DT(s) = {\u3008d, s, t\u3009|\u3008d, s, t\u3009 \u2208 DT} to denote the set of detections by space s.\ne spatial ngerprint is composed of three components. We have a separate procedure for extracting each of these components. We use the procedure ngerprintParameters for calculating the optimal ngerprint parameters, being the ngerprint duration (FD) and ngerprint resolution (FR). e procedure vectorize constructs the feature vector over a dataset spanning a duration of FD time units using resolution FR. e nal procedure vectorAverage computes the average over multiple feature vectors. In the following sections, we will represent how we create the feature vector and determine the ngerprint duration and resolution.\nAlgorithm 1: Spaceprint Data: DT(s) Result: SP(s) = \u3008V, FD, FR\u3009 (FD, FR) = ngerprintParameters(DT(s)); for (i = 0; i < \u03c4 (DT(s))/FD; i = i + 1) do\nDTi = {\u3008d, s, t\u3009 \u2208 DT(s)|i \u00b7 FD \u2264 t < (i + 1) \u00b7 FD}; Vi = vectorize(DTi , FD, FR);\nV = vectorAverage(Vi \u22081...\u03c4 (DT(s))/FD ); return (V, FD, FR);"}, {"heading": "5 METHODOLOGY", "text": ""}, {"heading": "5.1 Presence patterns", "text": "As mentioned before, the most important step in ngerprinting spaces is identifying suitable (computable) features that represent the situation in spaces. Let us consider selecting features that may be relevant for such purpose and are observable from mobility data. For example, intuitively one may think of static features such as opening or closing hours, peak hours, group sizes, number of individuals, etc. However, features that can de ne the situation in a space are numerous and intuitively coming up with a comprehensive set of features that could characterize any thinkable situation in spaces is practically impossible.\nWithout any intuitive assumptions about features that de ne the situation in a space, the only measurable feature from detections is related to presence pa ern of mobile entities. In reality, each space observes many of these pa erns formed due to the variety of the intention of its visitors. For instance, consider the presence pa ern of shopkeepers in a shop versus that of their clients. A shopkeeper enters the shop around opening time and leaves around closing time. e clients may appear during opening hours and stay for some time based on their intention (browsing or shopping). We assume that the situation in space is re ected in the overlapping visits of di erent groups of mobile entities. To consider this variety, we de ne a presence pa ern such that it re ects the synchronous presence of a group of mobile entities during a speci c period of time. Such a pa ern represents a group of mobile entities entering a space, staying there for a speci c amount of time, and then leaving it at the same time. Entering and leaving a space may be repeated multiple times as well. Extracting these pa erns from\na detection dataset can be achieved by counting the number of mobile entities in a window with a speci c starting time, tstart , and duration, \u03c4 . As detections are registered in discrete time intervals, the presence should be detected in all sampling intervals of length Ts in \u03c4 . Correspondingly, we de ne presence features with the following template to quantify the intensity of such pa erns.\nDe nition 5.1. (Presence feature) A presence feature PF (tstart,\u03c4 ,Ts ) over a space represents the number of mobile entities that were detected in all d\u03c4/Ts e consecutive sampling intervals of lengthTs within a measurement window, starting at time tstart and lasting for a duration of \u03c4 time units.\nBy ranging over all possible values of the parameters tstart ,\u03c4 , and Ts , the feature template mentioned above will lead to numerous presence features. Table 1 summarizes the possible range of these parameters for creating presence features as de ned in De - nition 5.1.\nese parameter ranges are motivated as follows. Assume that we measure detections at a given location for a speci c duration of time, FD, and that the mobile entities are detected at a frequency fp (and periodTp = 1/fp ). For now, also assume that the ngerprinting resolution FR is equal to this period as well (Tp = FR). We later show how to extract the optimal value for FR which is possibly bigger thanTp . e basis of our approach is to sample the number of mobile entities within a speci c duration windowW = \u3008tstart ,\u03c4 \u3009 with a sampling frequency fs (with period Ts = 1/fs ). BothW and fs can vary. e duration window can have any starting time and length as long as the window is smaller than FD. erefore, we require that \u03c4 \u2264 FD and tstart + \u03c4 < FD. To count the number of mobile entities, we need to sample detections with a period Ts . Obviously, as it does not make sense to sample with a speed faster than the mobile entity\u2019s detection generation speed, we require that Ts \u2265 FR (orTp ). Additionally,Ts cannot be larger than the duration window, i.e., Ts \u2264 \u03c4 . Note that the feature vector V can now be considered as an ordered list of normalized presence features."}, {"heading": "5.2 Feature vector", "text": "As mentioned before, the presence features can be created by counting mobile entities based on every possible combination of starting time, stay duration, and sampling period, tstart ,\u03c4 ,Ts . Considering that we have n possible combinations by ranging over these parameters, we will have an n-dimensional vector composed from di erent presence features. Algorithm 2 (vectorize) represents the way of constructing a feature vector for a given space based on a collection of mobile entity detections.\ne input of this algorithm is a set of detections DT(s) for a speci c space s. If W is a duration window, we write DT[W ] to denote the subset of detections that occurred inside W . If Ts is a sampling period, then [DT]Ts denotes the list of d(tmax(DT) \u2212 tmin(DT))e/Ts buckets, with the ith bucket containing all detections that occurred during the ith interval of length Ts .\ne essence of vectorize is to count the number of mobile entities that were detected during an entire duration window, W , when sampled with the period Ts . We systematically explore every possible duration window and sampling period for a given ngerprint duration FD and resolution FR. ere are three loops for covering all possible values for parameters tstart ,\u03c4 and Ts . In each iteration, by counting the mobile entities that appeared in the intersection of all buckets of [DT[W ]]Ts , a presence feature is created.\nAlgorithm 2: vectorize\nData: DT, FD, FR Result: V V = []; for (tstart = 0; tstart < FD; tstart = tstart + FR) do\n/* iterate over all durations */ for (\u03c4 = FR;\u03c4 \u2264 FD \u2212 tstart;\u03c4 = \u03c4 + FR) do for (Ts = FR;Ts \u2264 \u03c4 ;Ts = Ts + FR) do\n/* iterate over all sampling periods */ if (\u03c4 mod Ts = 0) then W = \u3008tstart ,\u03c4 \u3009; u =\n\u22c2([DT[W ]]Ts ); /* get the ID of mobile entities present in all buckets of window W */ append(V, count(u)); /* append to V the total number of mobile entities */\nreturn(V/max(V));\ne complexity of Algorithm 2 presented above is O(( FDFR ) 4). is complexity comes from the three for loops and an intersection over all elements of [DT[W ]]Ts . By reusing the results of the intersection operation this complexity can be reduced to O(( FDFR )\n3). A meaningful sampling period is the one that can break the duration window into its integer factors (\u03c4 mod Ts = 0). In that case, the third loop will repeat only for integer multiples of \u03c4 , thus reducing complexity further. It should be noted that both FD and FR are xed and do not depend on the size of detection dataset. erefore, creating the feature vectors can be performed in a scalable manner.\nFigure 1 represents an example feature vector V = [v1, . . . ,vn ] calculated using Algorithm 2. is vector is acquired by vectorizing one week of data with a resolution of a day (i.e., FD = 7 days and FR = 1 day). It can be readily veri ed that there are n = 57 elements in V. e rst element, v1, corresponds to the number of mobile entities that were detected during the rst day: W = \u30080, 1\u3009, with resolution Ts = 1. Element v2 counts the mobile entities that were present during both the rst and the second day: W = \u30080, 2\u3009, with sampling period Ts = 1. Likewise, v3 represents mobile entities during the either rst or second day, and so on. In this example, v15 represents a window spanning over the entire week\n(W = \u30080, 7\u3009) and sampled with the sampling period Ts = 1. It thus counts the number of mobile entities that were present in all seven days. Typically, these encompass all static, that is, nonmobile entities. Also interesting is v16, which represents a duration window spanning over all seven days (W = \u30080, 7\u3009), but with a sampling period Ts = 7 of also the entire week. As such, it counts the total number of mobile entities who showed up at least once during the entire week, regardless how long they stayed.\nOur goal is to use such feature vectors to compare spaces to each other based on visiting pa erns of devices. In doing so, we need to take into account that the values in a single vector can vary widely, which is entirely due to the fact that we wish to include all possible values for duration windows and sampling periods into a single data structure. As a consequence, we need to avoid that high values (which are perfectly natural due to our method of counting) dominate our perspective of di erence between two vectors. In order to take these natural di erences between elements into account, we choose a distance metric based on the so-called Canberra Distance [5].\nDe nition 5.2. (Feature vector distance function) Given two feature vectors V and V\u2217 of equal length n, calculated using the same pair of ngerprint parameters FD and FR, their mutual distance is\n\u2206(V,V\u2217) = 1n \u2211n i=1 |vi\u2212v\u2217i | |vi |+ |v\u2217i |"}, {"heading": "5.3 Fingerprint parameters", "text": "We now concentrate on nding appropriate values for the ngerprint duration FD and the ngerprint resolution FR. Concerning the ngerprint duration, note that we are looking for the period (in the formal sense) of repetitive or self-similar situation. ere are many ways of doing this, for example through Fourier analysis or computing autocorrelations. In our approach, we look for a series of consecutive xed-length windowsW1,W2,W3, . . . such that for a given set of detections DT, we have a minimal accumulated distance between all possible pairs of vectorized subsets of detections DT[Wi ] and DT[Wj ]. Our only variable is the length of all such windows, and the length that minimizes the accumulated distance is our ngerprint duration.\nDetermining the best ngerprint resolution is a bit trickier. e resolution, as shown in Algorithm 2, determines the minimum sampling period and directly determines the number of features in the vector. erefore, other than increasing the computational costs, a too detailed FR may also introduce the problem of over- ing. It\nis desirable to choose the resolution such that all signi cant di erences between feature vectors are preserved. erefore, what we are looking for is a resolution that maximizes the distance between two vectorized datasets. e assumption is that we have already determined the periodicity FD in a series of detections. By looking at two consecutive datasets of duration FD, a resolution FR that maximizes the mutual distance of their vectorized versions e ectively captures all di erences that would have also been captured by a smaller resolution. At the same time, such a resolution will capture more di erences than any larger resolution (which would show a smaller distance between the two vectorized datasets).\nLemma 5.3 tells us that such a distance-maximizing resolution actually exists.\nLemma 5.3. In case a space has a periodic ngerprint, there exists an optimal ngerprint resolution FR over which the distance between consecutive feature vectors is maximized.\nProof. We prove that having a constant ngerprint duration, by either increasing or decreasing the resolution, the distance between two features vectors V,V\u2217 approaches zero. Let \u03b4i =\n|vi\u2212v\u2217i | |vi |+ |v\u2217i |\n. When we increase the resolution, we will necessarily increase the length n of a constructed feature vector. As both vi and vj have positive values, regardless the changes in \u03b4i when increasing n, we will always see that \u03b4i \u2264 1, while the number of elements for which \u03b4i > 0 will increase to a nite number M . is is due to the fact that elements acquired with a smaller sampling period (Ts < Tp ) are meant to count the mobile entities that were detected with a speed much faster than the actual detection speed of mobile entities and there are hardly any of them. As a consequence,\nlim n\u2192\u221e \u2206(V,V\u2217) = lim n\u2192\u221e 1 n n\u2211 i=1 \u03b4i \u2264 limn\u2192\u221e 1 n M = 0\nAnalogously, as the resolution decreases, the length of a feature vector decreases and will eventually be 1 when FR = FD. A vector of length one will have only one element, which a er normalization, is equal to 1. erefore,\nlim n\u21921 \u2206(V,V\u2217) = 1 1 |1 \u2212 1| |1 + 1| = 0\nAlgorithm 3 summarizes the procedure of extracting the ngerprint parameters."}, {"heading": "6 EVALUATION", "text": "In this section, we show how Spaceprint feature vectors can be used for nding repetitive situation pa erns in spaces. We also evaluate the performance of Spaceprint in presence of uncertainties.\nEvaluation approach: We expect that the ngerprint of situations in a space can re ect from which and what kind of space it is extracted. erefore, we evaluate our method to see how the latent variables of the semantic category of a space and its unique identity are re ected in the ngerprint of the space. Our evaluations are on the basis of using the feature vectors mentioned before in unsupervised classi cation to infer these latent variables. Any unsupervised classi cation or clustering algorithm can be used for\nAlgorithm 3: ngerprintParameters Data: DT(s), r (such that FD = r \u00b7 FR) Result: FD,FR for (i = 1; i < \u03c4 (DT)/(2r ); i = i + 1) do\nm = i \u00b7 r ; for (j = 0; j < \u03c4 (DT)/m; j = j + 1) do\nDTj = {\u3008d, s, t\u3009 \u2208 DT(s)|j \u00b7m \u2264 t < (j + 1) \u00b7m}; Vij= vectorize(DTj ,m, i);\nFD= r \u00b7 arg mini \u2211 j,k \u2206(Vij ,V i k ); for (i = 1; i \u2264 FD; i = i + 1) do if (FD mod i = 0) then\nfor (j = 0; j < \u03c4 (DT)/FD; j = j + 1) do DTj = {\u3008d, s, t\u3009 \u2208 DT(s)|j \u00b7 FD \u2264 t < (j + 1) \u00b7 FD}; Vij= vectorize(DTj , FD, i);\nFR= arg maxi \u2211 j,k \u2206(Vij ,V i k ); return(FD,FR)\nsuch purpose. In our experiments we have used K-means clustering algorithm using our de ned distance function from De nition 5.2.\nBaseline: To the best of our knowledge, there is no prior work in classifying or creating situation ngerprints for spaces purely based on presence pa erns. However, a common approach in considering space-speci c temporal features, is calculating hourly densities [7, 18]. erefore, we compare Spaceprint with a densitybased approach as baseline. e density-based feature vectors are represented by Vd = [d0, ...,d FD\nFR \u22121 ] where each element di rep-\nresents the number of mobile entities appearing in the window W = \u3008i \u00b7 FR, FR\u3009. ese vectors are extracted using the same ngerprint parameters (FD, FR)."}, {"heading": "6.1 Test with synthetic dataset", "text": "6.1.1 Synthetic dataset generation. Our goal of using a synthetic dataset is to test the robustness of the ngerprinting scheme against uncertainties, yet in a controlled fashion. We proceed as follows.\nGenerating virtual spaces: First, a total of NS di erent virtual spaces are created with presence pa erns that are repeated over FD time units and mobile entities being detected with the same detection frequency (Tp = 1). A virtual space is characterized by a tuple \u3008P,NP\u3009 of presence pa erns P each having size NP . Complying with the de nition of presence pa erns in Section 5.1, each presence pa ern represents a group of mobile entities entering and leaving a space simultaneously. We denote a pa ern by the tuple \u3008GS,NG, tstart ,\u03c4 \u3009 where GS is a set of mobile entity IDs of size NG. Parameter tstart is the start time of the pa ern, and \u03c4 is its duration. We assume that each mobile entity generates a detection record at times tstart + k for 0 \u2264 k < \u03c4 . A virtual space thus represents an actual space, such as a co ee corner, a class room, and so on, for which we assume that a ngerprint is known.\nGenerating instances of spaces: From each virtual space, NI number of instances are generated which will represent the presence pa erns of the same space over multiple epochs of length FD with a modi ed situation. ese instances are generated by varying di erent sensitivity test parameters as explained later.\nGenerating the mobility dataset: Note that each pa ern implicitly de nes a set of detections. Each mobile entity d \u2208 GS is assumed to generate detections at times tstart , tstart + 1, . . .. As a consequence, \u3008GS,NG, tstart ,\u03c4 \u3009 for a space s gives rise to a set of detections DT(s,GS) = {\u3008d, s, tstart+k\u3009|d \u2208GS, 0\u2264k < \u03c4 }. We construct a dataset by taking the union of sets DT(s,GS) for pa erns generated for s.\nClustering: Each set of detections DT(s) is vectorized using Algorithm 2 with a precomputed pair of FD and FR and the accuracy of clustering ngerprint instances to their correct cluster is presented. For the input K of the K-means algorithm, we use the number of original ngerprints as the number of clusters. e success of the algorithm in clustering is nding NS distinct clusters by mapping the instances of the same space to the same cluster.\n6.1.2 Sensitivity test parameters. Our goal is to test the clustering accuracy of the ngerprinting technique. ere are in general two groups of parameters that a ect the quality of clustering. e rst group represents the inherent uncertainty present in presence pa erns. at is, in real-world se ings it is unlikely that a presence pa ern repeats itself exactly the same way. e other group represents the noise introduced by data-collection instruments, such as, for example, missing detections due to collision. Below we specify how we apply the e ects of these parameters on the synthetic dataset.\nMobility related sensitivity parameters \u2022 Variable start and duration: We modify the start and\nduration of each presence pa ern by t\u2217start \u2208 N (tstart ,\u03c4\u03b1ts) and \u03c4 \u2217 \u2208 N (\u03c4 ,\u03c4\u03b1td) such that t\u2217start + \u03c4 \u2217 < FD. N (\u00b5,\u03c3 ) represents a normal distribution with mean \u00b5 and standard deviation \u03c3 . \u2022 Variable group size: We modify the set of mobile entity IDs of each presence pa ern to GS\u2217 with a new size NG\u2217 \u2208 N (NG,NG\u03b1gs). \u2022 New random patterns: For each space, we generate \u03b2NP number of new random pa erns with the same procedure that we generated the presence pa erns. \u2022 Removal of patterns: We randomly remove\u03b3NP number of pa erns from the original pa erns and create a mobility dataset.\nInstrument related sensitivity parameters \u2022 Asynchronous detection frequency: In reality, the fre-\nquency of detections is very much device dependent. In order to show the e ect of asynchronous detections being sent by mobile entities, we randomly choose \u03b7NG number of mobile entities from each presence pa ern and change their detection period by assigning a random number in the range [2, 0.5\u03c4 ]. \u2022 Missing detections: A er creating the detection dataset DT(s), we randomly remove \u03c1 percent of mobile entity IDs for each moment in DT(s). (Recall that detections occur at discrete moments in time.)\nTable 2 represents the parameter ranges used for the tests in this section. e results of analysis with the synthetic dataset are shown in Figure 2. We use detections from a total of 10 di erent clusters. In each gure, we show the accuracy of assigning instances\nto the correct original cluster while varying a speci c sensitivity test parameter. We note that with 10 clusters, simply assigning all instances to one cluster will lead to 10% accuracy. erefore, an accuracy less than 10% is meaningless. In order to have a feeling of how good the accuracy of Spaceprint is, we compare it with a density-based approach. We extracted the feature vectors for Spaceprint using Algorithm 2 and an equivalent feature vector for the density-based approach with the ngerprint parameters (FD = 1440, FR = 60). e features extracted using these two methods are alternatively used as input to K-means. In the case of Spaceprint, the distance metric introduced in De nition 5.2 is used. For the density-based alternative we use the Euclidean distance.\ne graphs presented in Figure 2 suggest that using the feature vectors extracted by Spaceprint results in a higher accuracy than using density-based feature vectors. Figures 2(a) and (b) show that the accuracy of Spaceprint is hardly a ected by the changes in start, duration, and group size of random pa erns. It is also seen in Figure 2(c) that introducing new random pa erns will not degrade the accuracy of Spaceprint as the xed underlying pa erns are being re ected in various elements of the feature vector. By removing pa erns that construct the original space from a generated instance of that space, the accuracy of Spaceprint degrades. However, Spaceprint is still much more robust in response to such changes than the density-based approach (Figure 2(d)). We see in Figures 2(e) and (f) that Spaceprint is also more robust to the noise introduced by instrument-related parameters than the density-based approach. Although missing detections and variable frequency of detections will distort parts of the feature vector representing presence patterns with a ner period, the e ect of pa erns will still be present in elements which represent coarser sampling periods."}, {"heading": "6.2 Real datasets", "text": "In this section, we apply our ngerprinting framework on two datasets collected from real-world public spaces. Both of these datasets conform to our model in Section 3. However, due to having di erent data collection mechanisms, they have subtle di erences in terms of sparsity of detections and variety of spaces (summarized in Table 3). e rst dataset is a set of WiFi detections very rich in terms of the number of detections collected per space but contains data from a limited number of spaces. is dataset is collected by WiFi scanners placed in all co ee corners at our university campus for a period of 5 months1. e second one, which is a dataset of Foursquare [19] check-ins, is very rich in terms of diversity of spaces while being much sparser in terms of the number of detections available per location. We chose locations within the top 100 location categories with data from more than 531 days."}, {"heading": "6.3 Case study with WiFi dataset", "text": "In what follows, we demonstrate the procedure of extracting ngerprinting parameters and feature vectors using the WiFi dataset.\n6.3.1 Extracting fingerprint parameters. In order to calculate the feature vectors, it is required that the optimal ngerprinting parameters, FD and FR, are extracted for each space separately. We show how we nd these values for one of the co ee corners using 1Anonymous WiFi scanning can be performed by hashing MAC addresses on the y and providing an opt-out option for visitors.\nAlgorithm 3. Figures 3(a) and (b) illustrate how the optimal ngerprint duration can be extracted. What is shown in these graphs is the average pairwise distance of feature vectors calculated by varying the parameter, FD. It should be noted that the comparison of ngerprint durations is only fair if it is performed based on the pairwise distance of vectors of the same length (vectors of longer length will have more elements equal to zero and therefore, their distance will be smaller). To have feature vectors of the same length, we changed the ngerprinting resolution, FR, based on the ngerprint duration such that the size of the resulting feature vector stays constant. is is achieved by se ing FDFR to a constant value. We calculated these distances for vectors of length 17186 and 791 features, respectively. e optimal ngerprint duration is the one that minimizes the distance between two feature vectors, and thus maximizing similarity. For both graphs shown in Figure 3(a) and (b), this value is acquired at a duration equivalent to one week (168 hours). In Figure 3(b), it is also seen that a ngerprint duration equivalent to 3 days is the worst ngerprinting choice, leading to maximum dissimilarity between vectors.\nFigures 3(c) and (d) show how the optimal ngerprint resolution can be chosen. e optimal ngerprint resolution is the one that maximizes the distance between feature vectors revealing more detail about the space. We have looked at the optimal resolution when the ngerprint duration is equal to the optimal ngerprint duration (1 week time). e results suggest that a resolution of 4 hours can still reveal the di erences between feature vectors. As most of the weekdays are similar, we also looked at the spaces (only over weekdays) with a ngerprinting duration of 24 hours. e gures suggest that a resolution of 30 minutes su ces to reveal the necessary level of detail when the ngerprint is only extracted from weekdays. is is in fact the minimal resolution that still captures detections from static devices. Any ner resolution will result only in more zero-valued entries in feature vectors. Note that deriving two optimal resolutions does not contradict Lemma 5.3, as the daily resolution is extracted only from weekdays.\n6.3.2 Two-dimensional representation of feature vectors: To further see how Spaceprint represents the similarities between the situation in these co ee corners, we also visualize the extracted feature vectors from the whole dataset in Figures 4 and 5. e feature vectors extracted have n elements (e.g., with FD = 168 hours and FR = 1 hour, n = 23355) and can be represented as points in an n-dimensional coordinate system. In order to represent such points, we map them to a two-dimensional space using multi-dimensional scaling [2]. is method takes a dissimilarity matrix composed of the pair-wise distance between all vectors. By applying principal component analysis on such a matrix a coordinate matrix is generated whose con guration minimizes a loss function. Using the dissimilarity matrix calculated based on the distance function from De nition 5.2, multi-dimensional scaling can capture the e ects of the nonuniform size of the elements in our feature vectors.\ne results are presented in Figures 4 and 5. We compare the result of vectorizing using Spaceprint and the density-based approach. In Figure 4, we have vectorized each week of data (FD = 168 hours\nand FR = 1 hour). As seen, Spaceprint results in a clearer distinction between points of the same color. In other words, the identity of the location is re ected in the similarity between weeks of data from the same space. In Figure 5, using the parameters FD = 24 hours and FR = 1 hour, each day is vectorized separately. We also present the weekdays and weekends in separate graphs. Again, Spaceprint provides a be er distinction between the situation in spaces by placing points representing days in di erent spaces further from each other. is is speci cally visible in the case of weekends (Figure 5(c)-(d)). e data presented here includes occasional changes in normal presence pa erns, due to holidays, special events such as conferences, etc. erefore, there are naturally outliers, yet the identity of locations is evident.\n6.3.3 Clustering performance (Latent variable of identity). To further evaluate how such feature vectors can be used to create a unique ngerprint for spaces, we cluster them using K-means algorithm. e goal is to see if we can distinguish from which space they have been extracted. Each space in this dataset has a space id. We cluster feature vectors extracted from 150 days and look for 8 di erent clusters representing 8 di erent space ids. is is equivalent of assigning points of the same color (in Figure 5) to the same cluster. Performance of the clustering task in terms of Accuracy, Random Index, F-measure, and Normalized Mutual Information (NMI) is presented in Figure 6. As seen, the results are in favor of Spaceprint for all of these indicators."}, {"heading": "6.4 Case study with the Foursquare dataset", "text": "In this section, we perform evaluations on a dataset collected from Foursquare location-based social network. Each space in this dataset has a space id and a space category. Taking each of these two labels as ground truth for determining the clustering performance, gives us the opportunity to perform two types of evaluations. e rst one, similar to evaluations on the WiFi dataset, is to classify feature vectors to know from which space they were extracted. e second one, is to classify feature vectors of a group of spaces to know from what type of space they were collected. Performance is evaluated based on classi cation of spaces with category labels such as home, o ce, airport, restaurant, Chinese restaurant, road, etc. (Full list is omi ed due to lack of space).\n6.4.1 Clustering performance (Latent variable of identity). For the rst experiment, performance of Spaceprint and density-based method (SPi and DBi ) is compared based on classi cation between K randomly chosen space ids (K \u2208 [2, 10]) and feature vectors extracted from 531 days. e accuracy of clustering algorithm is\ncalculated on correctly clustering feature vectors of di erent spaces based on their original space id.\n6.4.2 Clustering performance (Latent variable of category). For the second experiment, we chose K randomly chosen categories (K \u2208 [2, 10]) and further selected 10 spaces per category. We similarly extracted the feature vectors from 531 days. e accuracy of Spaceprint and density-based method (SPc and DBc ), is compared based on correctly clustering the feature vectors of a group of spaces based on their correct category. e results presented in Figure 7, are the mean value acquired from 100 runs of experiment per K with FD = 168 and FR = 1 hour. Generally, regardless of the high sparsity level of this dataset, comparisons shown in Figure 7 (a)-(d) are in favor of Spaceprint for both experiments. Higher performance in terms of NMI shows that even misclassi cation of spaces based on category yields more information about the similarity of spaces in di erent clusters. An example will be misclassifying a space with the category label of restaurant to the category of Chinese restaurant."}, {"heading": "7 DISCUSSION AND CONCLUSIONS", "text": "In this paper, we presented Spaceprint, a technique for creating spatial ngerprints for repetitive situations in public spaces. What makes Spaceprint unique is its fully automatic operation with minimal input from anyone who operates it. Our evaluations show that the automated ngerprinting of spaces is indeed possible, opening the path to more sophisticated approaches for automated situationawareness. We also conclude that Spaceprint is relatively insensitive to parameters that can degrade the classi cation accuracy. By automatically extracting ngerprint parameters, Spaceprint allows embedding privacy by design in data collection by anonymizing\n(e.g. hashing) data with timely hashes based on ngerprint duration parameter such that the accuracy of the spatial ngerprint is also not a ected. In this paper, we looked at the possibility of ngerprinting repetitive situations in a single space. Our future work entails re ning this method to consider interaction between multiple spaces in creating these ngerprints."}], "references": [{"title": "Sensing solutions for collecting spatio-temporal data for wildlife monitoring applications: a review", "author": ["M. Baratchi", "N. Meratnia", "P.J.M. Havinga", "A. Skidmore", "A.G"], "venue": "Toxopeous", "citeRegEx": "1", "shortCiteRegEx": "1", "year": 2013}, {"title": "Modern multidimensional scaling: \u008aeory and applications", "author": ["I. Borg", "P.J.F. Groenen"], "venue": null, "citeRegEx": "2", "shortCiteRegEx": "2", "year": 2005}, {"title": "\u008ce Places of Our Lives: Visiting Pa\u008aerns and Automatic Labeling from Longitudinal Smartphone Data", "author": ["T.M.T. Do", "D. Gatica-Perez"], "venue": "IEEE Transactions on Mobile Computing 13,", "citeRegEx": "3", "shortCiteRegEx": "3", "year": 2014}, {"title": "Eigenbehaviors: identifying structure in routine", "author": ["N. Eagle", "A.S. Pentland"], "venue": "Behavioral Ecology and Sociobiology 63,", "citeRegEx": "4", "shortCiteRegEx": "4", "year": 2009}, {"title": "Robustness of Chi-square and Canberra distance metrics for computer intrusion detection", "author": ["S.M. Emran", "N. Ye"], "venue": "\u0089ality and Reliability Engineering International 18,", "citeRegEx": "5", "shortCiteRegEx": "5", "year": 2002}, {"title": "What is this place? Inferring place categories through user pa\u008aerns identi\u0080cation in geotagged tweets", "author": ["D. Falcone", "C. Mascolo", "C. Comito", "D. Talia", "J. Crowcro"], "venue": "In 6th International Conference on Mobile Computing, Applications and Services", "citeRegEx": "6", "shortCiteRegEx": "6", "year": 2014}, {"title": "Mobile location prediction in spatio-temporal context", "author": ["H. Gao", "J. Tang", "H. Liu"], "venue": "In Nokia mobile data challenge workshop,", "citeRegEx": "7", "shortCiteRegEx": "7", "year": 2012}, {"title": "Trajectory Pa\u008aern Mining", "author": ["F. Gianno\u008ai", "M. Nanni", "F. Pinelli", "D. Pedreschi"], "venue": "In Proceedings of the 13th ACM SIGKDD International Conference on Knowledge Discovery and Data Mining (KDD \u201907)", "citeRegEx": "8", "shortCiteRegEx": "8", "year": 2007}, {"title": "Mining Event Periodicity from Incomplete Observations", "author": ["Z. Li", "J. Wang", "J. Han"], "venue": "In Proceedings of the 18th ACM SIGKDD International Conference on Knowledge Discovery and Data Mining (KDD", "citeRegEx": "9", "shortCiteRegEx": "9", "year": 2012}, {"title": "CEPR: A Collaborative Exploration and Periodically Returning Model for Location Prediction", "author": ["D. Lian", "X. Xie", "V.W. Zheng", "N.J. Yuan", "F. Zhang", "E. Chen"], "venue": "ACM Trans. Intell. Syst. Technol", "citeRegEx": "10", "shortCiteRegEx": "10", "year": 2015}, {"title": "\u008ce discovery of personally semantic places based on trajectory data", "author": ["M. Lv", "L. Chen", "Z. Xu", "Y. Li", "G.i Chen"], "venue": "mining. Neurocomputing", "citeRegEx": "11", "shortCiteRegEx": "11", "year": 2016}, {"title": "Discovering places of interest in everyday life from smartphone data", "author": ["R. Montoliu", "J. Blom", "D. Gatica-Perez"], "venue": "In Proceedings of the Multimedia Tools and Applications", "citeRegEx": "12", "shortCiteRegEx": "12", "year": 2013}, {"title": "Human Mobility, Social Ties, and Link Prediction", "author": ["D. Wang", "D. Pedreschi", "C. Song", "F. Gianno\u008ai", "A. Barabasi"], "venue": "In Proceedings of the 17th ACM SIGKDD International Conference on Knowledge Discovery and Data Mining (KDD", "citeRegEx": "14", "shortCiteRegEx": "14", "year": 2011}, {"title": "Regularity and Conformity: Location Prediction Using Heterogeneous Mobility Data", "author": ["Y. Wang", "N.J. Yuan", "D. Lian", "Linli X", "X. Xie", "E. Chen", "Y. Rui"], "venue": "In Proceedings of the 21th ACM SIGKDD International Conference on Knowledge Discovery and Data Mining (KDD", "citeRegEx": "15", "shortCiteRegEx": "15", "year": 2015}, {"title": "SemMobi: A Semantic Annotation System for Mobility Data", "author": ["F. Wu", "H. Wang", "Z. Li", "W.C. Lee", "Z. Huang"], "venue": "In Proceedings of the 24th International Conference on World Wide Web (WWW", "citeRegEx": "16", "shortCiteRegEx": "16", "year": 2015}, {"title": "Semantic Trajectories: Mobility Data Computation and Annotation", "author": ["Z. Yan", "D. Chakraborty", "C. Parent", "S. Spaccapietra", "K. Aberer"], "venue": "ACM Trans. Int. Syst. Tech", "citeRegEx": "17", "shortCiteRegEx": "17", "year": 2013}, {"title": "POIsketch: Semantic Place Labeling over User Activity Streams", "author": ["D. Yang", "B. Li", "P. Cudr\u00e9-Mauroux"], "venue": "In Proceedings of the Twenty-Fi\u0087h International Joint Conference on Arti\u0080cial Intelligence (IJCAI-16)", "citeRegEx": "18", "shortCiteRegEx": "18", "year": 2016}, {"title": "Fine-grained preference-aware location search leveraging crowdsourced digital footprints from LBSNs", "author": ["D. Yang", "D. Zhang", "Z. Yu"], "venue": "In Proceedings of the 2013 ACM international joint conference on Pervasive and ubiquitous computing,", "citeRegEx": "19", "shortCiteRegEx": "19", "year": 2013}, {"title": "Discovering Urban Functional Zones Using Latent Activity Trajectories", "author": ["N.J. Yuan", "Y. Zheng", "X. Xie", "Y. Wang", "K. Zheng", "H. Xiong"], "venue": "IEEE Trans. Knowl. and Data Eng. 27,", "citeRegEx": "20", "shortCiteRegEx": "20", "year": 2015}], "referenceMentions": [{"referenceID": 0, "context": "Eulerian approaches [1]).", "startOffset": 20, "endOffset": 23}, {"referenceID": 7, "context": "First, from the perspective of an individual, one may ask about the whereabouts of a person: what are the locations that someone visits? When do those visits take place, and for how long? \u008ce research in this direction concentrates on extracting mobility pa\u008aerns that re\u0083ect an individual mobility \u0080ngerprint for frequent behavior [8, 10], periodic behavior [9], social behavior [14], etc.", "startOffset": 330, "endOffset": 337}, {"referenceID": 9, "context": "First, from the perspective of an individual, one may ask about the whereabouts of a person: what are the locations that someone visits? When do those visits take place, and for how long? \u008ce research in this direction concentrates on extracting mobility pa\u008aerns that re\u0083ect an individual mobility \u0080ngerprint for frequent behavior [8, 10], periodic behavior [9], social behavior [14], etc.", "startOffset": 330, "endOffset": 337}, {"referenceID": 8, "context": "First, from the perspective of an individual, one may ask about the whereabouts of a person: what are the locations that someone visits? When do those visits take place, and for how long? \u008ce research in this direction concentrates on extracting mobility pa\u008aerns that re\u0083ect an individual mobility \u0080ngerprint for frequent behavior [8, 10], periodic behavior [9], social behavior [14], etc.", "startOffset": 357, "endOffset": 360}, {"referenceID": 12, "context": "First, from the perspective of an individual, one may ask about the whereabouts of a person: what are the locations that someone visits? When do those visits take place, and for how long? \u008ce research in this direction concentrates on extracting mobility pa\u008aerns that re\u0083ect an individual mobility \u0080ngerprint for frequent behavior [8, 10], periodic behavior [9], social behavior [14], etc.", "startOffset": 378, "endOffset": 382}, {"referenceID": 6, "context": "Previous related research in extracting these spatial \u0080ngerprints have either focused on improving the individual mobility prediction models [7, 15] or on bringing sense to raw location coordinates in terms of meaningful labels.", "startOffset": 141, "endOffset": 148}, {"referenceID": 13, "context": "Previous related research in extracting these spatial \u0080ngerprints have either focused on improving the individual mobility prediction models [7, 15] or on bringing sense to raw location coordinates in terms of meaningful labels.", "startOffset": 141, "endOffset": 148}, {"referenceID": 11, "context": "Research in methods to describe the meaning of locations, primarily concentrates on how accurately trajectories can be segmented into sections with basic semantics such as stop and move areas [13], or points of interest [12].", "startOffset": 220, "endOffset": 224}, {"referenceID": 3, "context": "home, work) have been extracted in [4, 11].", "startOffset": 35, "endOffset": 42}, {"referenceID": 10, "context": "home, work) have been extracted in [4, 11].", "startOffset": 35, "endOffset": 42}, {"referenceID": 5, "context": "Some examples of additional sources of semantics are verbal terms used by people in social media such as twi\u008aer [6, 16], and third party geographical sources [17].", "startOffset": 112, "endOffset": 119}, {"referenceID": 14, "context": "Some examples of additional sources of semantics are verbal terms used by people in social media such as twi\u008aer [6, 16], and third party geographical sources [17].", "startOffset": 112, "endOffset": 119}, {"referenceID": 15, "context": "Some examples of additional sources of semantics are verbal terms used by people in social media such as twi\u008aer [6, 16], and third party geographical sources [17].", "startOffset": 158, "endOffset": 162}, {"referenceID": 2, "context": "In [3] the authors use a number of selected mobility features (e.", "startOffset": 3, "endOffset": 6}, {"referenceID": 18, "context": "Knowing the semantic labels of spaces within a region, higher level regional semantics have also been extracted to label areas such as those used for housing, and businesses [20].", "startOffset": 174, "endOffset": 178}, {"referenceID": 4, "context": "In order to take these natural di\u0082erences between elements into account, we choose a distance metric based on the so-called Canberra Distance [5].", "startOffset": 142, "endOffset": 145}, {"referenceID": 6, "context": "However, a common approach in considering space-speci\u0080c temporal features, is calculating hourly densities [7, 18].", "startOffset": 107, "endOffset": 114}, {"referenceID": 16, "context": "However, a common approach in considering space-speci\u0080c temporal features, is calculating hourly densities [7, 18].", "startOffset": 107, "endOffset": 114}, {"referenceID": 0, "context": "FR 60 NG,NP \u2208 [1, 100], \u2208 N tstart \u2208 [1, 1440], \u2208 N", "startOffset": 14, "endOffset": 22}, {"referenceID": 0, "context": "FR 60 NG,NP \u2208 [1, 100], \u2208 N tstart \u2208 [1, 1440], \u2208 N", "startOffset": 37, "endOffset": 46}, {"referenceID": 17, "context": "\u008ce second one, which is a dataset of Foursquare [19] check-ins, is very rich in terms of diversity of spaces while being much sparser in terms of the number of detections available per location.", "startOffset": 48, "endOffset": 52}, {"referenceID": 1, "context": "In order to represent such points, we map them to a two-dimensional space using multi-dimensional scaling [2].", "startOffset": 106, "endOffset": 109}, {"referenceID": 1, "context": "For the \u0080rst experiment, performance of Spaceprint and density-based method (SPi and DBi ) is compared based on classi\u0080cation between K randomly chosen space ids (K \u2208 [2, 10]) and feature vectors extracted from 531 days.", "startOffset": 167, "endOffset": 174}, {"referenceID": 9, "context": "For the \u0080rst experiment, performance of Spaceprint and density-based method (SPi and DBi ) is compared based on classi\u0080cation between K randomly chosen space ids (K \u2208 [2, 10]) and feature vectors extracted from 531 days.", "startOffset": 167, "endOffset": 174}, {"referenceID": 1, "context": "For the second experiment, we chose K randomly chosen categories (K \u2208 [2, 10]) and further selected 10 spaces per category.", "startOffset": 70, "endOffset": 77}, {"referenceID": 9, "context": "For the second experiment, we chose K randomly chosen categories (K \u2208 [2, 10]) and further selected 10 spaces per category.", "startOffset": 70, "endOffset": 77}], "year": 2017, "abstractText": "In this paper, we address the problem of how automated situationawareness can be achieved by learning real-world situations from ubiquitously generated mobility data. Without semantic input about the time and space where situations take place, this turns out to be a fundamental challenging problem. Uncertainties also introduce technical challenges when data is generated in irregular time intervals, being mixed with noise, and errors. Purely relying on temporal pa\u008aerns observable in mobility data, in this paper, we propose Spaceprint, a fully automated algorithm for \u0080nding the repetitive pa\u008aern of similar situations in spaces. We evaluate this technique by showing how the latent variables describing the category, and the actual identity of a space can be discovered from the extracted situation pa\u008aerns. Doing so, we use di\u0082erent real-world mobility datasets with data about the presence of mobile entities in a variety of spaces. We also evaluate the performance of this technique by showing its robustness against uncertainties.", "creator": "LaTeX with hyperref package"}}}