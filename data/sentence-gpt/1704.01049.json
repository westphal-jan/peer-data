{"id": "1704.01049", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "25-Mar-2017", "title": "A simulated annealing approach to optimal storing in a multi-level warehouse", "abstract": "We propose a simulated annealing algorithm specifically tailored to optimise total retrieval times in a multi-level warehouse under complex pre-batched picking constraints. Experiments on real data from a picker-to-parts order picking process in the warehouse of a European manufacturer show that optimal storage assignments do not necessarily display features presumed in heuristics, such as clustering of positively correlated items or ordering of items by picking frequency. This results in better understanding the significance of the approach given in the present study.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "histories": [["v1", "Sat, 25 Mar 2017 14:15:35 GMT  (278kb)", "http://arxiv.org/abs/1704.01049v1", null]], "reviews": [], "SUBJECTS": "cs.AI", "authors": ["alexander eckrot", "carina geldhauser", "jan jurczyk"], "accepted": false, "id": "1704.01049"}, "pdf": {"name": "1704.01049.pdf", "metadata": {"source": "CRF", "title": null, "authors": [], "emails": ["alexander.eckrot@physik.uni-regensburg.de,", "geldhauser@wias-berlin.de,", "jan.jurczyk@physik.uni-regensburg.de"], "sections": [{"heading": null, "text": "ar X\niv :1\n70 4.\n01 04\n9v 1\n[ cs\n.A I]\n2 5\nM ar\n2 01\n7"}, {"heading": "1. Introduction", "text": "Warehouses play a key role in modern supply chains [21] and are a significant cost factor to a company: according to the European Logistics Association/AT Kearney report [20], the capital and operation costs of warehouses represent about 25% of the surveyed companies\u2019 logistics costs in 2003, while figures for the USA [33] indicate that warehousing contributed to the total logistics costs with a share of 22%. Order picking, generally defined as the process of retrieving products from storage in response to a specific customer request, is the most labour-intensive operation in warehouses with manual systems, and a very capital-intensive operation in warehouses with automated systems [25, 46]. Estimates of the percentage of order picking costs on the total warehouse costs range as high as 55% in Drury [19] and Bartholdi et al[5] to 65% in Coyle et al. [12]. For these reasons, warehousing professionals consider order picking as the highest priority area for productivity improvements. Over the last twenty years, many papers have studied order picking processes and optimal strategies or heuristics to optimise subprocesses such as warehouse layout, storage assignment, order batching, order release method and picker routing. However, there is little published research on how to combine these subprocesses optimally: we mention here [13], which compares the performance of S-shaped and Largest Gap routing heuristics for batches of 3 and 4 items, and [1], which focuses on heuristics for order batching to improve the overall performance of order picking systems. The contribution of this work is to propose a combined optimisation of the storage assignments and a routing heuristic for correlated batched orders of large size (up to 102 unique parts in our\nInstitut fu\u0308r Theoretische Physik, Universita\u0308t Regensburg, Universita\u0308tsstrasse 31, 93053 Regensburg, Germany\nWeierstrass Institute for Applied Analysis and Stochastics, Mohrenstrasse 39, 10117 Berlin, Germany\nInstitut fu\u0308r Theoretische Physik, Universita\u0308t Regensburg, Universita\u0308tsstrasse 31, 93053 Regensburg, Germany\nE-mail addresses: alexander.eckrot@physik.uni-regensburg.de, geldhauser@wias-berlin.de, jan.jurczyk@physik.uni-regensburg.de .\n1\ntests). This is achieved via a hand-tailored algorithm based on a simulated annealing combinatorial search, which incorporates variable parameters depending on the routing heuristics. The algorithm is designed for multi-level warehouses, the routing heuristics is based on a warehouse design with wide aisles, however, it can be adapted to narrow aisles."}, {"heading": "2. Warehouse order picking", "text": "In human-operated warehouses, the most common system for order picking is the picker-toparts class, where the (human) order picker walks or drives along the aisles to pick items [14, 48]. Despite their ubiquity, pickers-to-part order-picking systems have not received comparable attention from researchers, perhaps because of their variety and complexity [15]. An optimal strategy for a picker-to-parts picking process will minimize the time needed for picking all orders in a given time frame. The precise quantity to minimize is indeed total retrieval time, which is defined as the sum of pick and travel time and time due to delays. By using s-shaped routing or other routing rules which make the aisles unidirectional, the delay part (which is usually due to congestion) can be a priori removed from the model. The main components to be minimized are therefore (1) the time needed for travelling the warehouse to collect the items and (2) the time needed to perform one pick. If we assume that the microdesign of the storage racks was already optimised and appropriate tools are used by the picker, the latter is basically a constant, its size depending on the level in the warehouse where the item is located. Minimizing the time needed for travelling the warehouse can be achieved by various ansatzes, the most common ones involve solving the storage location assignment problem (SLAP), the routing problem or allocating optimal batched orders for one tour of the picker.\n2.1. Storage assignment policies. Early scientific contributions to the storage location assignment problem in warehouses include a taxonomy of possible storage location assignment policies, where the classification between dedicated storage, randomized storage and class-based storage was introduced, see [22, 23, 29] and the references therein. In our problem, we deal with a warehouse where the individual pieces used in the production of certain products are stored. Therefore, the orders arrive already pre-batched, according to the necessity of the assembly line. The order batches are quite large (on average 30 items per batch in the data we used for testing our algorithm). We therefore seek a solution to the combined SLAP for a warehouse with dedicated storage-policy and the routing problem for such pre-batched orders. The dedicated storage policy assigns a fixed location to each product, meaning that this location is reserved even for products that are out of stock. While this may result in a low space utilisation, which may imply higher maintenance costs and possibly longer routing times, dedicated storage locations are an advantage in warehouses for production units, since every stored item is needed regularly. Moreover, dedicated storage locations help to increase the orientation of the order pickers, leading to an increased routing velocity and fewer wrong picks. Dedicated storage policies allow for logical grouping of storage items, which are often advantageous in retail warehouses [16] and in general for items of very different weight, which can be stored in decreasing weight along the standard picking route, implying a good stacking sequence. However, as pointed out in the survey [15], analytical models for optimising dedicated storage assignment in manual-pick order-picking systems are still lacking. Existing studies mainly focus on random storage assignments. The random storage policy (see for example [40]) reduces the total space required. This does not automatically improve routing times, as travel distance might increase, see [10]. It needs a computer-controlled environment to be efficient, as a lack of automation or technical equipment\nassisting the picking process can lead to slow travelling times due to disorientation and higher percentages of picking errors. It was observed [47, 48] that a separation of the pick stock (forward area) from the bulk stock (reserve area) can lead to a significant improvement of picking times: in the forward area, a dedicated storage policy is applied, while the bulk area can follow a random storage policy. In this way, the advantages of dedicated storage still hold and disadvantages are reduced. Indeed, this policy is already adapted in many warehouses attached to production units, such as the one in our reference case. At the interface between research and industry, several papers, such as [6, 7, 9, 18, 35], describe algorithms that solve the SLAP with real-life constraints. In particular the paper [9] also deals with a multi-level warehouse situation, pointing out that the storage assignment systems need to reflect the structure of the orders.\n2.2. Routing policies. Storage assignment has an impact on the performance of the routing method [41]. The problem of optimal routing for order picking classifies as a Steiner Traveling Salesman Problem, which is in general not solvable in polynomial time. However, for a special warehouse aisle configuration, Ratliff and Rosenthal [42] showed that there does exist an algorithm that can solve the problem in running time linear in the number of aisles and the number of pick locations. This algorithm was extended to other situations in [17, 44, 45]. However, algorithms are not yet available for every specific layout, and there remains the unsolved problem of aisle congestion by pickers following different routes, and the fact that pickers may deviate from routes that they deem illogical [24]. Because of this, the problem of routing order pickers is mainly solved by using a heuristic, such as the s-shape method. In [30], a routing strategy for a warehouse with U-shaped layout has been introduced and proven to be more efficient under certain conditions. Most heuristic methods for routing order pickers in single-block warehouses assume that the aisles of the warehouse are narrow enough to allow the order picker to retrieve products from both sides of the aisle without changing position [28, 40, 43]. A polynomial-time algorithm for routing order pickers in wide aisles was proposed in [26]. One of the strengths of the algorithm we propose here is that it gives efficient heuristics both for narrow and wide aisles: the routing strategy, the right-hand rule and the aisle length are incorporated as variable parameters and can easily be changed, see formula (4.3).\n2.3. Simulated annealing. The simulated annealing (SA) method is an optimisation algorithm introduced by Kirkpatrick in 1983 [34] and separately by C\u030cerny\u0300 in 1985 [8]. The idea behind this method is to emulate the congelation of a crystal with many atoms. This process starts at very high temperatures at which all atoms are free to move. By slowly decreasing the temperature atoms start to \u201dfeel\u201d the presence of others and arrange themselves into a structure, more precisely: the interaction between atoms forces them to settle into a crystal shape, where the overall interaction energy is minimized. The slow cooling process allows the system to explore many configurations and enabling it to find a near optimal or optimal configuration. Transferring this method to optimisation problems, one has to define an energy or cost function f . In our case this cost function is the overall picking time in a warehouse. Changing the positions of items (also called configuration) leads to an increase or decrease in the cost function. At each iteration of this changing procedure (called update), the simulated annealing algorithm checks whether the new configuration is better or worse than the one before and applies the Metropolis criterion [38], which states the following: An improvement, in this case a change of configuration which leads to a decrease of the cost function, will be accepted, while a worse configuration will\nonly be adopted with a Boltzmann probability\n(2.1) P(\u2206f, T ) = e\u2212 \u2206f T\nwhere \u2206f is the difference of the values of the cost-function for the two configurations and T a control parameter similar to a temperature. When performing an optimisation, at first one chooses a large control parameter T and performs a finite number of updates to the configuration. Then the parameter T is slightly decreased and again a finite number of updates are realised. Repeating the last step transforms the updatemethod from a random walk at large T to a local search update at small T . The last configuration obtained is the one with the least energy. Simulated annealing algorithms are nowadays widely used in economics, for example in packaging problems [27], the production scheduling problem [36], the corridor allocation problem [2] [3] and solving the SLAP [4, 39]. A simulated annealing heuristic to minimize total retrieval time involving order batching and sequencing was introduced in [32]. Their algorithm uses a geometric cooling schedule [11] also adapted in [37]. The algorithm proposed in [37] uses a single flexible heuristic based on random moves in a structured manner, in comparison to multiple deterministic neighbourhood search heuristics, as often found in the literature, and is comparably very fast. Recent results [31] show that solutions obtained by simulated annealing, Iterated Local Search or the Attribute-Based Hill Climber [49] may allow order picking systems to operate more efficiently compared to those obtained with standard constructive heuristics such as the Earliest Due Date rule."}, {"heading": "3. Problem description and modelling", "text": "We consider a multi-level warehouse of a production site. Incoming orders consist of large batches of individual items, which are picked manually into a bin using a picker-to-parts order picking system and delivered to a couple of output locations. The first two levels of the warehouse are easily accessible, while all levels above can only be accessed by a lifting device, resulting in a higher picking time per item. The items ordered in a batch are correlated to each other, as each batch corresponds to the parts used in one step of the assembly line of the production site. The difficulty of this SLAP is due to the high number of possible optional features among which the customer can choose when ordering one of the (very few) main products: The number of items which are needed for all options in a main product line is relatively low compared to the number of items corresponding to one or more options. The correlations between individual items to be picked are therefore quite complex and cannot be treated by a pure frequency-based algorithm as proposed in [6]. Another level of complexity is added by different storage container classes used in the warehouse: As they are of different size, they cannot be randomly exchanged. Moreover, the number of different items stored per aisle depends on the composition of container classes in this aisle. Note that standard simulated annealing algorithms are unable to deal with combinatorial constraints as posed by storage containers of different size."}, {"heading": "4. Solution approach", "text": "We build a simulated annealing algorithm which finds the configuration of warehouse items in a multi-level, multi-container class warehouse minimizing the total retrieval time of batched orders under a given routing in a reference time frame. For this, we need to specify (1) how we calculate the retrieval time and (2) which update routine we implement in our SA algorithm to gradually improve retrieval times.\n4.1. Construction of retrieval time. As we consider pre-batched orders, meaning several items collected into the same bin during one route, we have to calculate the retrieval times per ordered bin. The total retrieval time t in the reference time frame is simply the sum over the individual retrieval times tbin,i for each bin (labelled by i) ordered in the reference time frame:\n(4.1) t =\nNbin\u2211\ni=1\ntbin,i\nAs mentioned above, our algorithm achieves this by both optimising the storage assignment and using a heuristic to minimize routing times. The retrieval time per bin tbin is therefore split into the pick time tp and the routing time tr. These are calculated independently from one another and the retrieval time per bin then reads\n(4.2) tbin = tp + tr.\n4.1.1. Routing heuristic. The routing time is the time that a picker needs to physically move to all locations in the warehouse where the goods for one bin are stored. The goal is to reduce the overall routing time for all bins. It is easy to see that for a warehouse with only parallel aisles, the s-shaped routing heuristic can be applied both for wide aisles, enforcing a right-hand pick rule, and for narrow aisles (no right-hand rule). However, while unidirectional narrow aisles have to be traveled completely, the routing heuristic in wide aisles would be to pick with the right hand until the last item in the batch for the right part of the aisle is reached, and then to turn around and pick from the \u201cleft\u201d part of the aisle, exiting at the same point where the aisle was entered. We present a routing heuristic optimised for wide aisles. This formula can readily be adapted to an s-shaped routing in unidirectional narrow aisles. Dividing every aisle into subsections, the time needed to travel through one wide aisle while applying a right-hand pick rule is given by the travel time per subsection \u03c4s multiplied by the distance d of the subsection which is farthest away from the entrance of the aisle1. In case of narrow aisles, the time needed to travel through one aisle is constant, namely just the number of subsections per aisle multiplied \u03c4s. In other words, d is a constant and not a variable. The routing time tr for one bin is then calculated as\n(4.3) tr = Naisle \u00b7 \u03c4aisle + d \u00b7 \u03c4s\nwhere Naisle is the number of aisles that have to be entered to collect all items in this batch, \u03c4aisle the time needed to change from one aisle to the next and \u03c4s the time it takes to move one subsection within one aisle. One might ask why this heuristic should give a good result. In fact, considering an isolated routing optimisation, as described in the literature review above, a simple s-shaped heuristic does not always give the best results, even though it helps to avoid congestion. However, in our case, it is precisely the mix of a solution to the SLAP with implicit routing heuristics which will produce an optimal solution on the condition of this wide-aisle s-shaped routing heuristic.\n4.1.2. Multi-level picking. The literature often distinguishes between low-level and high-level picking. In low-level picking systems the picker can directly collect the items from the storage racks, while high-level picking or \u201cman-aboard order-picking\u201d indicates the use of a lifting orderpick truck or crane, see [15] for a detailed exposition. We design our algorithm in a way that the pick times depend on the level where the item is stored. In the simplest case, when only a\n1We call d the distance as it can be calculated by any norm which the user considers adapted. The easiest notion of distance is twice the maximum norm, so that d = 2max{xj \u2212 x}, where x is the entrance point of the aisle and xj the j-th item to be picked in this aisle.\ndistinction between low-level and high-level picking is made, we therefore work with two picking times, namely \u03c4l for the lower level(s) and \u03c4u for \u201cupper level\u201d picking. The pick time per bin can then be calculated as\n(4.4) tp = Nl \u00b7 \u03c4l +Nu \u00b7 \u03c4u +\u0398(Nu) \u00b7 \u03c4lift\nwhere Nl is the number of items located in lower levels and Nu the number of items located in the upper levels, respectively. The last term in equation (4.4) adds the time \u03c4lift needed to fetch or adjust the lifting device to the upper level(s). In the simplest situation of only one level change, \u0398(Nu) function returns one if there are any elements to retrieve from the upper levels and zero if the picker has no need to visit the upper levels. Formula (4.4) is only the special case of the general multi-level picking time formula\n(4.5) = t\u0303p = (L\u2212 1) \u00b7 \u03c4lift\nL\u2211\nj=1\nNj \u00b7 \u03c4j\nwhere L is the number of level changes to be made by the picker and \u03c4j the picking time for an item stored in level j. By specifying different picking times for different levels or other special situations, the proposed algorithm can be adapted to combined low- and high-level picking, and by adjusting \u03c4lift, \u03c4aisle and \u03c4s, the algorithm applies also to differently shaped warehouses and variable routing heuristics.\n4.2. Construction of moves. The total retrieval time constructed in (4.1) is the cost-function which our simulated annealing algorithm has to minimize. As explained above, such an algorithm changes again and again the location of the storage containers (in which the items are stored), trying to find configurations with a lower total cost. These continuous changes are called moves. It is of key importance for the performance of the algorithm to choose the correct type of moves. The specific design our test warehouse adds an extra difficulty: the presence of different-size storage containers in the warehouse translate into combinatorial compatibility conditions, i.e. is has to be ensured that the algorithm does not exchange two storage containers of different size. The crucial solution step here was to observe that the admissible combinations of container classes form subsections in the aisle. Therefore, in the presented algorithm, two update routines were implemented: the first routine exchanges two random boxes from the same size category, the second routine swaps whole subsections in two randomly chosen levels. The first move is tasked to cluster all items that are strongly correlated and minimizes the individual item picking time for one bin. The second routine both ensures that a solution found is admissible and accelerates the optimisation by searching for a more adequate location of a group of already clustered items, e.g. a subsection consisting of items used to assemble a highly popular product option should be placed at a part of the warehouse which is quickly reachable by the picker. The combination of these two moves allows the simulated annealing algorithm to find warehouse configurations that are minimized by the average picking time for each bin, while keeping the overall performance picking time for the whole range of product options in mind."}, {"heading": "5. Validation and results", "text": "5.1. Case description. We test our algorithm with real data from the production site of a medium-size European company offering highly customizable products with a long lifespan. When ordering a product, the customer chooses from a large number of possible options for the product of his choice, which are assembled at the production site. The individual parts for the product are prefabricated by subcontractors, shipped to the company and stored in the warehouse until needed, there is no just-in-time delivery. Orders to the warehouse arrive as a batch, which is picked in a single journey. The picker stores the items\nin the batch on a bin, which includes small trays for small pieces and a dedicated space for heavy items, so there is no issue of considering heavy or delicate items when deciding the routing strategy. When all items are collected, the picker delivers them to certain input points along the assembly line. The content of one batched order varies not only according to the output delivery point, which is the input point of a specific step in the assembly line, but also highly depends on the endconfiguration of the product chosen by the customer. In other words, customised product options lead to complex correlations between the items stored in the warehouse. Positively correlated items are more likely to be found in one batched order arriving at the warehouse.\n5.1.1. Sample warehouse design used in the algorithm. Our algorithm was designed to be general enough to cope with several features appearing in the warehouse of the abovementioned company, which are variable aisle length, multiple storage levels, and different container types with combinatorial restrictions due to their size. As visualised in figure 1, the sample warehouse of the manufacturer has 7 aisles of variable length (due to the constraints of the production site). Each aisle is 4 levels high and is divided into (at most) 20 subsections. Individual items are stored in containers, of which two main container type, namely large or regular size are used, and of these types, both high and low containers are available. Each subsection of an aisle is wide enough to hold two large or three regular containers, therefore up to six different items (six items meaning three regular size containers of low height stacked on three other regular size containers of low height) can be stored at each level of a subsection. A total amount of 1268 different components are stored in the warehouse of the manufacturer whose data we used. We considered only the primary pick location of these 1268 individual items, as only this primary pick location is mentioned in the order sheet given to the picker. The secondary location of this component is in the less frequented \u201ccold\u201d area of the warehouse, where a random storage policy is exibited (surplus and refill storage). An order batch contains between one and 150 items each. As mentioned, the bin has designated storage options for different items. For example, small items go on the trays, so that no predefined sequence of picking is needed. The delivery locations are designated spots at the edge of the assembly line. As the retrieval time for one order batch is by orders of magnitude longer than the travelling time to the delivery points along the assembly line, the influence of those delivery points on the warehouse storage locations can be neglected.\n5.1.2. Routing heuristics in the company. Our algorithm is designed to adapt to several routing situations. The routing heuristics used in our sample warehouse is as follows: pickers start with picking from the lower two levels of a wide aisle. They follow a right-hand rule, which means that they pick only on their right while traveling along the aisle. Once the last item to their right is reached, they turn around and pick the other side of the aisles until they arrive back to the entrance of this aisle and change to the next aisle. After completing the routing in the lower levels, a lifting order-pick truck is fetched and the picker starts picking the first upper level. After all items of the batch stored in the first upper level are picked, the height of the order-pick truck is adjusted and the picker continues the same routing on the second upper storage level. Using this routing heuristics, the company arranged their storage allocation based on the picking frequency.\n5.1.3. Individual pick times. Note that the time required for each pick (denoted by \u03c4j in formula (4.5)) changes depending on the level from which items are picked. In our sample warehouse, we consider the simple situation of only two different picking times, \u03c4l for the lower levels, and \u03c4u for the upper levels, see formula (4.4). The time required for each pick in the upper levels is\nsignificantly longer than for the lower levels, as more careful steering is needed and the picker is less mobile. The choice of pick times and the time for aisle change/ level change used in the experiments of our algorithm are listed below. Please recall equations (4.3) and (4.4) for the definition. It is worth mentioning that the solution quality does not depend on the exact times as long as they are in reasonable proportions to each other.\nVariable Time in seconds \u03c4aisle 30 \u03c4s 2 per subsection \u03c4l 15 \u03c4u 30 \u03c4lift 120\n5.2. Validation of method. The experiments were carried out with 4192 pre-batched orders, representing the products assembled in the reference time frame. All experiments were run singlethreaded on Intel(R) Core(TM) i7-4790 CPU running at 3.60GHz and with 8 GB of memory. We used a geometric cooling schedule starting at T = 107 and stopping when convergence is\nreached with a cooling constant \u03b1 = 0.95, resulting in about 2 \u00b7 106 iterations. The total running time for one annealing was about 5 hours.\n5.3. Results. After optimisation of storage locations by our algorithm, the total retrieval time for all 4 \u00b7 104 pre-batched orders in the reference time frame was calculated to be approximately 38% lower than for a random item distribution and 21% lower compared to the total retrieval time with the pre-otimised storage location configuration used by the company. This is a significant improvement, in particular as the initial storage allocation used a frequencybased heuristics similar to [6]: Fixing the routing heuristics, the company\u2019s logistics division had already re-arranged the items used more often to the first aisles and those used less were put in the back aisles. However, as our results show, this simple heuristics has its drawback when handling large batched orders.\n5.3.1. Detailed analysis - global distribution. Figure 2 shows the optimised warehouse design. Red items have the highest picking frequency, blue items the lowest. In comparison to the starting situation (Figure 1), the lower levels shown in a) and b) are better stocked. They contain the more frequently picked items (red, orange, yellow/green pixels), while the upper levels c) and d)) contain more blue/green items. In fact, the algorithm removed all orange/red\nitems from the upper level, which is to be expected since the higher picking time in the top floors and the need for a lifting device have a significant impact on the optimisation. The canonical entrance to the warehouse is on the right-bottom corner of the picture. The first aisle from the right, which is the first aisle visited, initially had a lot of very frequently picked items on the first two levels, as this was the preferred storage location in the heuristics used by the company. After optimisation by our algorithm, most of these items were moved, as the aisle is very short one and therefore inefficient to visit from a global optimisation point of view, as taken by our algorithm.\n5.3.2. Detailed analysis - batch-induced correlations. As already discussed above, the picking process of large batched orders results in complex correlations between the individual items in the warehouse. The correlations are not necessarily related to the frequency of picks of a single item: some items are very basic and are used for every single product that this company is producing, independently of the product option chosen by the customer, while other items are specific to one product option and appear in exactly one batch if and only if this product option was ordered. One might conjecture that clustering the items according to their correlation to each other leads to a lower total retrieval time. By clustering we mean that highly correlated items are stored in neighbouring storage containers. To check if our algorithm does indeed cluster correlated items, we visualise in figure 3 the changes in correlation between neighbouring items. The visualisation is done via the average jaccard-similarity coefficient of a batch which contains item i and a batch which contains a direct neighbour of item i,which we call j. Roughly speaking, a high jaccard-similarity coefficient means that item i and its neighbour j are positively correlated in the picking process, i.e. a large percentage of batches which contain i also contain j. The calculation of the jaccard-similarity coefficient goes as follows: Denote {Bi} a batch in which i occurs and {Bj} a batch in which j occurs. The jaccard-similarity coefficient measures the \u201csimilarity\u201d between two finite sample sets {Bi} and {Bj} and is defined by\n(5.1) sim ({Bi} , {Bj}) = |{Bi}\n\u22c2 {Bj}|\n|{Bi} \u22c3 {Bj}| .\nMoreover, define the set of neighbours of item i as the set of items j, which are in the same or adjacent subsection of an aisle. We require that j has to be stored in the same level category as i, meaning that if i is stored in a lower level, then also j has to be stored in a lower level to qualify as a neighbour. Figure 3 shows that the heuristic approach taken by the company (plot a) of figure 3) shows a high similarity between a few items, i.e. objects which are often picked to the same batch are stored in neighbouring containers. However, the optimised configuration(plot b) of figure 3) does not display areas of a high similarity. Consequently, in contrast to intuition, clustering of correlated items does not necessarily lead to a reduction in retrieval times. This phenomenon can be explained with the relatively low impact of item distance to the total retrieval time of a large batch, in relation to the sum of the picking times of the individual items. This behaviour is also present in the other warehouse levels. To conclude, the analysis of correlations of neighbouring items shows that the examined warehouse cannot be simply divided into \u201chot areas\u201d and a \u201ccold areas\u201d with respect to batched orders: the complex structure of the batches leads to highly non-trivial optimised configurations.\n5.3.3. Detailed analysis - individual picking times. Another important question is whether an optimal total retrieval time for a large number of batches might go to the expense of very long retrieval times for a few batches. The last step in our analysis is therefore to check the individual\npicking times per item. For better visibility, the displayed picking times are normed to the maximum batch picking time in the original configuration. The histogram of individual picking times are shown in figure 4: Before the optimisation, the distribution of individual picking times is centred around a value of 0.16 with a right handed fat tail. The algorithm is able to shift the\ndistribution to shorter times and eliminates parts of the fat tail. This proves that the optimal storage assignment obtained by our algorithm bears a lower probability of extremely long retrieval times for arbitrary batches."}, {"heading": "6. Discussion/Conclusion", "text": "This paper presents a simulated annealing algorithm to reduce picking times of potentially large sets of batched orders by a combined optimisation of the storage assignments in a multi-level warehouse and an implicit s-shape routing heuristic. Our main contribution is a general solution method for the solution of the storage location assignment problem under adaptable routing methods, which is flexible enough to be used in a multi-level warehouse setting. While the current algorithm was designed for single-block warehouse layouts, extensions to more general warehouse settings can easily be done by adapting formula (4.3). Notably, this algorithm can also be applied to parts of the warehouse without resulting in phantom constraints or other unnatural solutions to this combined optimisation problem. To our knowledge, our article is the first to investigate the impact of large batched orders on the optimal storage assignment. Contrary to intuition, we give evidence that, even for batched orders of very large size (e.g. over 100 items in one batch), clustering of correlated items in specific parts of the warehouse does not necessarily lead to a reduction in retrieval times. Moreover, we show that clustering heuristics are not even beneficial to reduce the probability of extremely long retrieval times for rarely occurring batches. We tested our algorithm on real data, optimising the storage assignments in a four-level warehouse of a manufacturer with pre-batched orders of 1-150 items per order. The optimal storage assignment suggested by the algorithm reduces the total retrieval time by 21% compared to heuristics based on the frequency of picking for individual pieces. Assuming a random item distribution in the warehouse, this simulated annealing algorithm reduces the overall picking time approximately by 38%. These savings are achieved without changing the routing heuristics and without splitting large pre-batched orders. The simultaneous delivery of all items, even of a very large batch, is crucial to maintaining efficiency of the assembly line. Note that the algorithm is very fast, as all parts of the algorithm are designed and optimised for multi-level warehouses. No black-box packages are used. The main novelty of our method is to provide a structured approach for the storage location assignment problem with very general pre-batching constraints in multi-level warehouses settings. In particular, the algorithm is able to deal with complex correlated batches and able to find highly non-trivial optimised configurations."}, {"heading": "Acknowledgements", "text": "We gratefully acknowledge the financial, data and feedback contribution from our partner company. A.E. and C.G. thank Stiftung der Deutschen Wirtschaft for partial funding of this project. C.G.\u2019s research is supported by ERC grant no. 277749 \u201cEPSILON\u201d."}], "references": [{"title": "Simulated annealing and tabu search approaches for the corridor allocation problem", "author": ["H. Ahonen", "A.G. de Alvarenga", "A. Amaral"], "venue": "European Journal of Operational Research,", "citeRegEx": "2", "shortCiteRegEx": "2", "year": 2014}, {"title": "The corridor allocation problem", "author": ["A.R. Amaral"], "venue": "Computers & Operations Research,", "citeRegEx": "3", "shortCiteRegEx": "3", "year": 2012}, {"title": "Defining order picking policy: A storage assignment model and a simulated annealing solution in as/rs systems", "author": ["E. Atmaca", "A. Ozturk"], "venue": "Applied Mathematical Modelling,", "citeRegEx": "4", "shortCiteRegEx": "4", "year": 2013}, {"title": "Warehouse & distribution science: release 0.92. Atlanta, GA, The Supply Chain and Logistics Institute, School of Industrial and Systems Engineering, Georgia", "author": ["J.J. Bartholdi III", "S.T. Hackman"], "venue": "Institute of Technology,", "citeRegEx": "5", "shortCiteRegEx": "5", "year": 2011}, {"title": "Storage location assignment problem: implementation in a warehouse design optimization tool", "author": ["C. Battista", "A. Fumi", "F. Giordano", "M. Schiraldi"], "venue": "In Proceedings of the Conference Breaking Down the Barriers between Research and Industry,", "citeRegEx": "6", "shortCiteRegEx": "6", "year": 2011}, {"title": "Storage location assignment: Using the product structure to reduce order picking times", "author": ["H. Brynzer", "M. Johansson"], "venue": "International Journal of Production Economics,", "citeRegEx": "7", "shortCiteRegEx": "7", "year": 1996}, {"title": "Thermodynamical approach to the traveling salesman problem: An efficient simulation algorithm", "author": ["V. \u010cern\u1ef3"], "venue": "Journal of optimization theory and applications,", "citeRegEx": "8", "shortCiteRegEx": "8", "year": 1985}, {"title": "Improving the productivity of order picking of a manual-pick and multi-level rack distribution warehouse through the implementation of class-based storage", "author": ["F.T. Chan", "H.K. Chan"], "venue": "Expert Systems with Applications,", "citeRegEx": "9", "shortCiteRegEx": "9", "year": 2011}, {"title": "Small parts order picking: design and operation", "author": ["K. Choe", "G. Sharp"], "venue": "Online tutorial,", "citeRegEx": "10", "shortCiteRegEx": "10", "year": 1991}, {"title": "Simulated annealing: searching for an optimal temperature schedule", "author": ["H. Cohn", "M. Fielding"], "venue": "SIAM Journal on Optimization,", "citeRegEx": "11", "shortCiteRegEx": "11", "year": 1999}, {"title": "The management of business logistics, volume 6", "author": ["J.J. Coyle", "E.J. Bardi", "C.J. Langley"], "venue": "West Publishing Company St Paul,", "citeRegEx": "12", "shortCiteRegEx": "12", "year": 1996}, {"title": "Efficient orderbatching methods in warehouses", "author": ["M. De Koster", "E.S. Van der Poort", "M. Wolters"], "venue": "International Journal of Production Research,", "citeRegEx": "13", "shortCiteRegEx": "13", "year": 1999}, {"title": "How to assess a warehouse operation in a single tour", "author": ["R. De Koster"], "venue": "Technology Report. Erasmus University,", "citeRegEx": "14", "shortCiteRegEx": "14", "year": 2004}, {"title": "Design and control of warehouse order picking: A literature review", "author": ["R. De Koster", "T. Le-Duc", "K.J. Roodbergen"], "venue": "European Journal of Operational Research,", "citeRegEx": "15", "shortCiteRegEx": "15", "year": 2007}, {"title": "The logistics of supermarket chains: a comparison of seven chains in the Netherlands", "author": ["R. De Koster", "A. Neuteboom"], "venue": "Elsevier Business Information,", "citeRegEx": "16", "shortCiteRegEx": "16", "year": 2001}, {"title": "Routing order pickers in a warehouse: a comparison between optimal and heuristic solutions", "author": ["R. De Koster", "E. Van der Poort"], "venue": "IIE transactions,", "citeRegEx": "17", "shortCiteRegEx": "17", "year": 1998}, {"title": "Improving order-picking response time at Ankor\u2019s", "author": ["R. Dekker", "M. De Koster", "K.J. Roodbergen", "H. Van Kalleveen"], "venue": "warehouse. Interfaces,", "citeRegEx": "18", "shortCiteRegEx": "18", "year": 2004}, {"title": "Towards more efficient order picking", "author": ["J. Drury"], "venue": "IMM monograph,", "citeRegEx": "19", "shortCiteRegEx": "19", "year": 1988}, {"title": "Supply chain strategy: the logistics of supply chain management", "author": ["E. Frazelle"], "venue": "McGrraw Hill,", "citeRegEx": "21", "shortCiteRegEx": "21", "year": 2002}, {"title": "Correlated assignment strategy can improve any order-picking operation", "author": ["E. Frazelle", "G.P. Sharp"], "venue": "Industrial Engineering,", "citeRegEx": "22", "shortCiteRegEx": "22", "year": 1989}, {"title": "Frazelle. Stock location assignment and order picking productivity", "author": ["H. E"], "venue": "Georgia Tech Theses and Dissertations,", "citeRegEx": "23", "shortCiteRegEx": "23", "year": 1989}, {"title": "Order batching to minimize total travel time in a parallel-aisle warehouse", "author": ["N. Gademann", "S. Velde"], "venue": "IIE transactions,", "citeRegEx": "24", "shortCiteRegEx": "24", "year": 2005}, {"title": "Classification and design of order picking", "author": ["M. Goetschalckx", "J. Ashayeri"], "venue": "Logistics World,", "citeRegEx": "25", "shortCiteRegEx": "25", "year": 1989}, {"title": "An efficient algorithm to cluster order picking items in a wide aisle", "author": ["M. Goetschalckx", "H.D. Ratliff"], "venue": "Engineering Costs and Production Economics,", "citeRegEx": "26", "shortCiteRegEx": "26", "year": 1988}, {"title": "Solving irregular strip packing problems by hybridising simulated annealing and linear programming", "author": ["A.M. Gomes", "J.F. Oliveira"], "venue": "European Journal of Operational Research,", "citeRegEx": "27", "shortCiteRegEx": "27", "year": 2006}, {"title": "Distance approximations for routing manual pickers in a warehouse", "author": ["R.W. Hall"], "venue": "IIE transactions,", "citeRegEx": "28", "shortCiteRegEx": "28", "year": 1993}, {"title": "Optimal storage assignment in automatic warehousing systems", "author": ["W.H. Hausman", "L.B. Schwarz", "S.C. Graves"], "venue": "Management Science,", "citeRegEx": "29", "shortCiteRegEx": "29", "year": 1976}, {"title": "W\u00e4scher. A u-shaped layout for manual order-picking systems", "author": ["S. Henn", "S. Koch", "H. Gerking"], "venue": "Logistics Research,", "citeRegEx": "30", "shortCiteRegEx": "30", "year": 2013}, {"title": "Metaheuristics for order batching and sequencing in manual order picking systems", "author": ["S. Henn", "V. Schmid"], "venue": "Computers & Industrial Engineering,", "citeRegEx": "31", "shortCiteRegEx": "31", "year": 2013}, {"title": "Batch picking in narrow-aisle order picking systems with consideration for picker blocking", "author": ["S. Hong", "A.L. Johnson", "B.A. Peters"], "venue": "European Journal of Operational Research,", "citeRegEx": "32", "shortCiteRegEx": "32", "year": 2012}, {"title": "Optimization by simulated annealing: Quantitative studies", "author": ["S. Kirkpatrick"], "venue": "Journal of statistical physics,", "citeRegEx": "34", "shortCiteRegEx": "34", "year": 1984}, {"title": "Optimal allocation of goods in a warehouse: Minimizing the order picking costs under real-life constraints", "author": ["R. Kutzelnigg"], "venue": "In 3rd IEEE International Symposium on Logistics and Industrial Informatics,", "citeRegEx": "35", "shortCiteRegEx": "35", "year": 2011}, {"title": "A multi-objective production scheduling case study solved by simulated annealing", "author": ["T. Loukil", "J. Teghem", "P. Fortemps"], "venue": "European journal of operational research,", "citeRegEx": "36", "shortCiteRegEx": "36", "year": 2007}, {"title": "A fast simulated annealing method for batching precedence-constrained customer orders in a warehouse", "author": ["M. Matusiak", "R. de Koster", "L. Kroon", "J. Saarinen"], "venue": "European Journal of Operational Research,", "citeRegEx": "37", "shortCiteRegEx": "37", "year": 2014}, {"title": "Equation of state calculations by fast computing machines", "author": ["N. Metropolis", "A.W. Rosenbluth", "M.N. Rosenbluth", "A.H. Teller", "E. Teller"], "venue": "The journal of chemical physics,", "citeRegEx": "38", "shortCiteRegEx": "38", "year": 1953}, {"title": "Efficient formation of storage classes for warehouse storage location assignment: a simulated annealing approach", "author": ["V.R. Muppani", "G.K. Adil"], "venue": null, "citeRegEx": "39", "shortCiteRegEx": "39", "year": 2008}, {"title": "An evaluation of order picking routeing policies", "author": ["C.G. Petersen"], "venue": "International Journal of Operations & Production Management,", "citeRegEx": "40", "shortCiteRegEx": "40", "year": 1997}, {"title": "The impact of routing and storage policies on warehouse efficiency", "author": ["C.G. Petersen"], "venue": "International Journal of Operations & Production Management,", "citeRegEx": "41", "shortCiteRegEx": "41", "year": 1999}, {"title": "Order-picking in a rectangular warehouse: a solvable case of the traveling salesman problem", "author": ["H.D. Ratliff", "A.S. Rosenthal"], "venue": "Operations Research,", "citeRegEx": "42", "shortCiteRegEx": "42", "year": 1983}, {"title": "Layout and routing methods for warehouses", "author": ["K.-J. Roodbergen"], "venue": "Erasmus University Rotterdam,", "citeRegEx": "43", "shortCiteRegEx": "43", "year": 2001}, {"title": "Routing order pickers in a warehouse with a middle aisle", "author": ["K.J. Roodbergen", "R. De Koster"], "venue": "European Journal of Operational Research,", "citeRegEx": "44", "shortCiteRegEx": "44", "year": 2001}, {"title": "Routing methods for warehouses with multiple cross aisles", "author": ["K.J. Roodbergen", "R. Koster"], "venue": "International Journal of Production Research,", "citeRegEx": "45", "shortCiteRegEx": "45", "year": 2001}, {"title": "Tanchoco. Facilities planning (third ed)", "author": ["J.A. Tompkins", "J.A. White", "Y.A. Bozer", "J.M. A"], "venue": null, "citeRegEx": "46", "shortCiteRegEx": "46", "year": 2003}, {"title": "Forward-reserve allocation in a warehouse with unit-load replenishments", "author": ["J.P. Van den Berg", "G.P. Sharp", "A.N. Gademann", "Y. Pochet"], "venue": "European Journal of Operational Research,", "citeRegEx": "47", "shortCiteRegEx": "47", "year": 1998}, {"title": "Models for warehouse management: Classification and examples", "author": ["J.P. van den Berg", "W. Zijm"], "venue": "International Journal of Production Economics,", "citeRegEx": "48", "shortCiteRegEx": "48", "year": 1999}, {"title": "The attribute based hill climber", "author": ["I.M. Whittley", "G.D. Smith"], "venue": "Journal of Mathematical Modelling and Algorithms,", "citeRegEx": "49", "shortCiteRegEx": "49", "year": 2004}], "referenceMentions": [{"referenceID": 18, "context": "Warehouses play a key role in modern supply chains [21] and are a significant cost factor to a company: according to the European Logistics Association/AT Kearney report [20], the capital and operation costs of warehouses represent about 25% of the surveyed companies\u2019 logistics costs in 2003, while figures for the USA [33] indicate that warehousing contributed to the total logistics costs with a share of 22%.", "startOffset": 51, "endOffset": 55}, {"referenceID": 22, "context": "Order picking, generally defined as the process of retrieving products from storage in response to a specific customer request, is the most labour-intensive operation in warehouses with manual systems, and a very capital-intensive operation in warehouses with automated systems [25, 46].", "startOffset": 278, "endOffset": 286}, {"referenceID": 42, "context": "Order picking, generally defined as the process of retrieving products from storage in response to a specific customer request, is the most labour-intensive operation in warehouses with manual systems, and a very capital-intensive operation in warehouses with automated systems [25, 46].", "startOffset": 278, "endOffset": 286}, {"referenceID": 17, "context": "Estimates of the percentage of order picking costs on the total warehouse costs range as high as 55% in Drury [19] and Bartholdi et al[5] to 65% in Coyle et al.", "startOffset": 110, "endOffset": 114}, {"referenceID": 3, "context": "Estimates of the percentage of order picking costs on the total warehouse costs range as high as 55% in Drury [19] and Bartholdi et al[5] to 65% in Coyle et al.", "startOffset": 134, "endOffset": 137}, {"referenceID": 10, "context": "[12].", "startOffset": 0, "endOffset": 4}, {"referenceID": 11, "context": "However, there is little published research on how to combine these subprocesses optimally: we mention here [13], which compares the performance of S-shaped and Largest Gap routing heuristics for batches of 3 and 4 items, and [1], which focuses on heuristics for order batching to improve the overall performance of order picking systems.", "startOffset": 108, "endOffset": 112}, {"referenceID": 12, "context": "In human-operated warehouses, the most common system for order picking is the picker-toparts class, where the (human) order picker walks or drives along the aisles to pick items [14, 48].", "startOffset": 178, "endOffset": 186}, {"referenceID": 44, "context": "In human-operated warehouses, the most common system for order picking is the picker-toparts class, where the (human) order picker walks or drives along the aisles to pick items [14, 48].", "startOffset": 178, "endOffset": 186}, {"referenceID": 13, "context": "Despite their ubiquity, pickers-to-part order-picking systems have not received comparable attention from researchers, perhaps because of their variety and complexity [15].", "startOffset": 167, "endOffset": 171}, {"referenceID": 19, "context": "Early scientific contributions to the storage location assignment problem in warehouses include a taxonomy of possible storage location assignment policies, where the classification between dedicated storage, randomized storage and class-based storage was introduced, see [22, 23, 29] and the references therein.", "startOffset": 272, "endOffset": 284}, {"referenceID": 20, "context": "Early scientific contributions to the storage location assignment problem in warehouses include a taxonomy of possible storage location assignment policies, where the classification between dedicated storage, randomized storage and class-based storage was introduced, see [22, 23, 29] and the references therein.", "startOffset": 272, "endOffset": 284}, {"referenceID": 26, "context": "Early scientific contributions to the storage location assignment problem in warehouses include a taxonomy of possible storage location assignment policies, where the classification between dedicated storage, randomized storage and class-based storage was introduced, see [22, 23, 29] and the references therein.", "startOffset": 272, "endOffset": 284}, {"referenceID": 14, "context": "Dedicated storage policies allow for logical grouping of storage items, which are often advantageous in retail warehouses [16] and in general for items of very different weight, which can be stored in decreasing weight along the standard picking route, implying a good stacking sequence.", "startOffset": 122, "endOffset": 126}, {"referenceID": 13, "context": "However, as pointed out in the survey [15], analytical models for optimising dedicated storage assignment in manual-pick order-picking systems are still lacking.", "startOffset": 38, "endOffset": 42}, {"referenceID": 36, "context": "The random storage policy (see for example [40]) reduces the total space required.", "startOffset": 43, "endOffset": 47}, {"referenceID": 8, "context": "This does not automatically improve routing times, as travel distance might increase, see [10].", "startOffset": 90, "endOffset": 94}, {"referenceID": 43, "context": "It was observed [47, 48] that a separation of the pick stock (forward area) from the bulk stock (reserve area) can lead to a significant improvement of picking times: in the forward area, a dedicated storage policy is applied, while the bulk area can follow a random storage policy.", "startOffset": 16, "endOffset": 24}, {"referenceID": 44, "context": "It was observed [47, 48] that a separation of the pick stock (forward area) from the bulk stock (reserve area) can lead to a significant improvement of picking times: in the forward area, a dedicated storage policy is applied, while the bulk area can follow a random storage policy.", "startOffset": 16, "endOffset": 24}, {"referenceID": 4, "context": "At the interface between research and industry, several papers, such as [6, 7, 9, 18, 35], describe algorithms that solve the SLAP with real-life constraints.", "startOffset": 72, "endOffset": 89}, {"referenceID": 5, "context": "At the interface between research and industry, several papers, such as [6, 7, 9, 18, 35], describe algorithms that solve the SLAP with real-life constraints.", "startOffset": 72, "endOffset": 89}, {"referenceID": 7, "context": "At the interface between research and industry, several papers, such as [6, 7, 9, 18, 35], describe algorithms that solve the SLAP with real-life constraints.", "startOffset": 72, "endOffset": 89}, {"referenceID": 16, "context": "At the interface between research and industry, several papers, such as [6, 7, 9, 18, 35], describe algorithms that solve the SLAP with real-life constraints.", "startOffset": 72, "endOffset": 89}, {"referenceID": 31, "context": "At the interface between research and industry, several papers, such as [6, 7, 9, 18, 35], describe algorithms that solve the SLAP with real-life constraints.", "startOffset": 72, "endOffset": 89}, {"referenceID": 7, "context": "In particular the paper [9] also deals with a multi-level warehouse situation, pointing out that the storage assignment systems need to reflect the structure of the orders.", "startOffset": 24, "endOffset": 27}, {"referenceID": 37, "context": "Storage assignment has an impact on the performance of the routing method [41].", "startOffset": 74, "endOffset": 78}, {"referenceID": 38, "context": "However, for a special warehouse aisle configuration, Ratliff and Rosenthal [42] showed that there does exist an algorithm that can solve the problem in running time linear in the number of aisles and the number of pick locations.", "startOffset": 76, "endOffset": 80}, {"referenceID": 15, "context": "This algorithm was extended to other situations in [17, 44, 45].", "startOffset": 51, "endOffset": 63}, {"referenceID": 40, "context": "This algorithm was extended to other situations in [17, 44, 45].", "startOffset": 51, "endOffset": 63}, {"referenceID": 41, "context": "This algorithm was extended to other situations in [17, 44, 45].", "startOffset": 51, "endOffset": 63}, {"referenceID": 21, "context": "However, algorithms are not yet available for every specific layout, and there remains the unsolved problem of aisle congestion by pickers following different routes, and the fact that pickers may deviate from routes that they deem illogical [24].", "startOffset": 242, "endOffset": 246}, {"referenceID": 27, "context": "In [30], a routing strategy for a warehouse with U-shaped layout has been introduced and proven to be more efficient under certain conditions.", "startOffset": 3, "endOffset": 7}, {"referenceID": 25, "context": "Most heuristic methods for routing order pickers in single-block warehouses assume that the aisles of the warehouse are narrow enough to allow the order picker to retrieve products from both sides of the aisle without changing position [28, 40, 43].", "startOffset": 236, "endOffset": 248}, {"referenceID": 36, "context": "Most heuristic methods for routing order pickers in single-block warehouses assume that the aisles of the warehouse are narrow enough to allow the order picker to retrieve products from both sides of the aisle without changing position [28, 40, 43].", "startOffset": 236, "endOffset": 248}, {"referenceID": 39, "context": "Most heuristic methods for routing order pickers in single-block warehouses assume that the aisles of the warehouse are narrow enough to allow the order picker to retrieve products from both sides of the aisle without changing position [28, 40, 43].", "startOffset": 236, "endOffset": 248}, {"referenceID": 23, "context": "A polynomial-time algorithm for routing order pickers in wide aisles was proposed in [26].", "startOffset": 85, "endOffset": 89}, {"referenceID": 30, "context": "The simulated annealing (SA) method is an optimisation algorithm introduced by Kirkpatrick in 1983 [34] and separately by \u010cern\u1ef3 in 1985 [8].", "startOffset": 99, "endOffset": 103}, {"referenceID": 6, "context": "The simulated annealing (SA) method is an optimisation algorithm introduced by Kirkpatrick in 1983 [34] and separately by \u010cern\u1ef3 in 1985 [8].", "startOffset": 136, "endOffset": 139}, {"referenceID": 34, "context": "At each iteration of this changing procedure (called update), the simulated annealing algorithm checks whether the new configuration is better or worse than the one before and applies the Metropolis criterion [38], which states the following: An improvement, in this case a change of configuration which leads to a decrease of the cost function, will be accepted, while a worse configuration will", "startOffset": 209, "endOffset": 213}, {"referenceID": 24, "context": "Simulated annealing algorithms are nowadays widely used in economics, for example in packaging problems [27], the production scheduling problem [36], the corridor allocation problem [2] [3] and solving the SLAP [4, 39].", "startOffset": 104, "endOffset": 108}, {"referenceID": 32, "context": "Simulated annealing algorithms are nowadays widely used in economics, for example in packaging problems [27], the production scheduling problem [36], the corridor allocation problem [2] [3] and solving the SLAP [4, 39].", "startOffset": 144, "endOffset": 148}, {"referenceID": 0, "context": "Simulated annealing algorithms are nowadays widely used in economics, for example in packaging problems [27], the production scheduling problem [36], the corridor allocation problem [2] [3] and solving the SLAP [4, 39].", "startOffset": 182, "endOffset": 185}, {"referenceID": 1, "context": "Simulated annealing algorithms are nowadays widely used in economics, for example in packaging problems [27], the production scheduling problem [36], the corridor allocation problem [2] [3] and solving the SLAP [4, 39].", "startOffset": 186, "endOffset": 189}, {"referenceID": 2, "context": "Simulated annealing algorithms are nowadays widely used in economics, for example in packaging problems [27], the production scheduling problem [36], the corridor allocation problem [2] [3] and solving the SLAP [4, 39].", "startOffset": 211, "endOffset": 218}, {"referenceID": 35, "context": "Simulated annealing algorithms are nowadays widely used in economics, for example in packaging problems [27], the production scheduling problem [36], the corridor allocation problem [2] [3] and solving the SLAP [4, 39].", "startOffset": 211, "endOffset": 218}, {"referenceID": 29, "context": "A simulated annealing heuristic to minimize total retrieval time involving order batching and sequencing was introduced in [32].", "startOffset": 123, "endOffset": 127}, {"referenceID": 9, "context": "Their algorithm uses a geometric cooling schedule [11] also adapted in [37].", "startOffset": 50, "endOffset": 54}, {"referenceID": 33, "context": "Their algorithm uses a geometric cooling schedule [11] also adapted in [37].", "startOffset": 71, "endOffset": 75}, {"referenceID": 33, "context": "The algorithm proposed in [37] uses a single flexible heuristic based on random moves in a structured manner, in comparison to multiple deterministic neighbourhood search heuristics, as often found in the literature, and is comparably very fast.", "startOffset": 26, "endOffset": 30}, {"referenceID": 28, "context": "Recent results [31] show that solutions obtained by simulated annealing, Iterated Local Search or the Attribute-Based Hill Climber [49] may allow order picking systems to operate more efficiently compared to those obtained with standard constructive heuristics such as the Earliest Due Date rule.", "startOffset": 15, "endOffset": 19}, {"referenceID": 45, "context": "Recent results [31] show that solutions obtained by simulated annealing, Iterated Local Search or the Attribute-Based Hill Climber [49] may allow order picking systems to operate more efficiently compared to those obtained with standard constructive heuristics such as the Earliest Due Date rule.", "startOffset": 131, "endOffset": 135}, {"referenceID": 4, "context": "The correlations between individual items to be picked are therefore quite complex and cannot be treated by a pure frequency-based algorithm as proposed in [6].", "startOffset": 156, "endOffset": 159}, {"referenceID": 13, "context": "In low-level picking systems the picker can directly collect the items from the storage racks, while high-level picking or \u201cman-aboard order-picking\u201d indicates the use of a lifting orderpick truck or crane, see [15] for a detailed exposition.", "startOffset": 211, "endOffset": 215}, {"referenceID": 4, "context": "This is a significant improvement, in particular as the initial storage allocation used a frequencybased heuristics similar to [6]: Fixing the routing heuristics, the company\u2019s logistics division had already re-arranged the items used more often to the first aisles and those used less were put in the back aisles.", "startOffset": 127, "endOffset": 130}], "year": 2017, "abstractText": "We propose a simulated annealing algorithm specifically tailored to optimise total retrieval times in a multi-level warehouse under complex pre-batched picking constraints. Experiments on real data from a picker-to-parts order picking process in the warehouse of a European manufacturer show that optimal storage assignments do not necessarily display features presumed in heuristics, such as clustering of positively correlated items or ordering of items by picking frequency. In an experiment run on more than 4000 batched orders with 1 to 150 items per batch, the storage assignment suggested by the algorithm produces a 21% reduction in the total retrieval time with respect to a frequency-based storage assignment.", "creator": "LaTeX with hyperref package"}}}