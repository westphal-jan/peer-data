{"id": "1704.04675", "review": {"conference": "EMNLP", "VERSION": "v1", "DATE_OF_SUBMISSION": "15-Apr-2017", "title": "Graph Convolutional Encoders for Syntax-aware Neural Machine Translation", "abstract": "We present a simple and effective approach to incorporating syntactic structure into neural attention-based encoder-decoder models for machine translation. We rely on graph-convolutional networks (GCNs), a recent class of neural networks developed for modeling graph-structured data. Our GCNs use predicted syntactic dependency trees of source sentences to produce representations of words (i.e., words and their phonemes) that are a function of the time series of the sentence.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "histories": [["v1", "Sat, 15 Apr 2017 19:04:59 GMT  (52kb,D)", "http://arxiv.org/abs/1704.04675v1", null], ["v2", "Tue, 18 Apr 2017 15:02:17 GMT  (52kb,D)", "http://arxiv.org/abs/1704.04675v2", null], ["v3", "Fri, 28 Jul 2017 18:18:52 GMT  (56kb,D)", "http://arxiv.org/abs/1704.04675v3", null]], "reviews": [], "SUBJECTS": "cs.CL", "authors": ["joost bastings", "ivan titov", "wilker aziz", "diego marcheggiani", "khalil sima'an"], "accepted": true, "id": "1704.04675"}, "pdf": {"name": "1704.04675.pdf", "metadata": {"source": "CRF", "title": "Graph Convolutional Encoders for Syntax-aware Neural Machine Translation", "authors": ["Joost Bastings", "Ivan Titov", "Wilker Aziz", "Diego Marcheggiani", "Khalil Sima\u2019an"], "emails": ["bastings@uva.nl", "titov@uva.nl", "w.aziz@uva.nl", "marcheggiani@uva.nl", "k.simaan@uva.nl"], "sections": [{"heading": "1 Introduction", "text": "Neural machine translation (NMT) is one of success stories of deep learning in natural language processing, with recent NMT systems outperforming traditional phrase-based approaches on many language pairs (Sennrich et al., 2016a). State-ofthe-art NMT systems rely on sequential encoderdecoders (Sutskever et al., 2014; Bahdanau et al., 2015) and lack any explicit modeling of syntax or any hierarchical structure of language. One potential reason for why we have not seen much benefit from using syntactic information in NMT is the lack of simple and effective methods for incorporating structured information in neural encoders,\nincluding RNNs. Despite some successes, techniques explored so far either incorporate syntactic information in NMT models in a relatively indirect way (e.g., multi-task learning (Luong et al., 2015a; Nadejde et al., 2017; Eriguchi et al., 2017; Hashimoto and Tsuruoka, 2017)) or may be too restrictive in modeling the interface between syntax and the translation task (e.g., learning representations of linguistic phrases (Eriguchi et al., 2016)). Our goal is to provide the encoder with access to rich syntactic information but let it decide which aspects of syntax are beneficial for MT, without placing rigid constraints on the interaction between syntax and the translation task. This goal is in line with claims that rigid syntactic constraints typically hurt MT (Zollmann and Venugopal, 2006; Smith and Eisner, 2006; Chiang, 2010), and, though these claims have been made in the context of traditional MT systems, we believe they are no less valid for NMT.\nAttention-based NMT systems (Bahdanau et al., 2015; Luong et al., 2015b) represent source sentence words as latent-feature vectors in the encoder and use these vectors when generating a translation. Our goal is to automatically incorporate information about syntactic neighborhoods of source words into these feature vectors, and, thus, potentially improve quality of the translation output. Since vectors correspond to words, it is natural for us to use dependency syntax. Dependency trees (see Figure 1) represent syntactic relations between words: for example, monkey is a subject of the predicate eats, and banana is its object.\nIn order to produce syntax-aware feature representations of words, we exploit graphconvolutional networks (GCNs) (Duvenaud et al., 2015; Defferrard et al., 2016; Kearnes et al., 2016; Kipf and Welling, 2016). GCNs can be regarded as computing a latent-feature representation of a node (i.e. a real-valued vector) based on its k-\nar X\niv :1\n70 4.\n04 67\n5v 1\n[ cs\n.C L\n] 1\n5 A\npr 2\n01 7\nth order neighborhood (i.e. nodes at most k hops aways from the node) (Gilmer et al., 2017). They are generally simple and computationally inexpensive. We use Syntactic GCNs, a version of GCN operating on top of syntactic dependency trees, recently shown effective in the context of semantic role labeling (Marcheggiani and Titov, 2017).\nSince syntactic GCNs produce representations at word level, it is straightforward to use them as encoders within the attention-based encoderdecoder framework. As NMT systems are trained end-to-end, GCNs end up capturing syntactic properties specifically relevant to the translation task. Though GCNs can take word embeddings as input, we will see that they are more effective when used as layers on top of recurrent neural network (RNN) or convolutional neural network (CNN) encoders (Gehring et al., 2016), enriching their states with syntactic information. A comparison to RNNs is the most challenging test for GCNs, as it has been shown that RNNs (e.g., LSTMs) are able to capture certain syntactic phenomena (e.g., subject-verb agreement) reasonably well on their own, without explicit treebank supervision (Linzen et al., 2016; Shi et al., 2016). Nevertheless, GCNs appear beneficial even in this challenging set-up: we obtain +1.2 and +0.7 BLEU point improvements from using syntactic GCNs on top of bidirectional RNNs for EnglishGerman and English-Czech, respectively.\nIn principle, GCNs are flexible enough to incorporate any linguistic structure as long as they can be represented as graphs (e.g., dependency-based semantic-role labeling representations (Surdeanu et al., 2008), AMR semantic graphs (Banarescu et al., 2012) and co-reference chains). For example, unlike recursive neural networks (Socher et al., 2013), GCNs do not require the graphs to be trees. However, in this work we solely focus on dependency syntax and leave more general investigation for future work.\nOur main contributions can be summarized as follows:\n\u2022 we introduce a method for incorporating structure into NMT using syntactic GCNs;\n\u2022 we show that GCNs can be used along with RNN and CNN encoders;\n\u2022 we show that incorporating structure is beneficial for machine translation on EnglishCzech and English-German."}, {"heading": "2 Background", "text": "Notation We use x for vectors, x1:t for a sequence of t vectors, and X for matrices. The i-th value of vector x is denoted by xi. We use \u25e6 for vector concatenation."}, {"heading": "2.1 Neural Machine Translation", "text": "In NMT (Kalchbrenner and Blunsom, 2013; Sutskever et al., 2014; Cho et al., 2014b), given example translation pairs from a parallel corpus, a neural network is trained to directly estimate the conditional distribution p(y1:Ty |x1:Tx) of translating a source sentence x1:Tx (a sequence of Tx words) into a target sentence y1:Ty . NMT models typically consist of an encoder, a decoder and some method for conditioning the decoder on the encoder, for example, an attention mechanism. We will now briefly describe the components that we use in this paper."}, {"heading": "2.1.1 Encoders", "text": "An encoder is a function that takes as input the source sentence and produces a representation encoding its semantic content. We describe recurrent, convolutional and bag-of-words encoders.\nRecurrent Recurrent neural networks (RNNs) (Elman, 1990) model sequential data. They receive one input vector at each time step and update their hidden state to summarize all inputs up to that point. Given an input sequence x1:Tx = x1,x2, . . . ,xTx of word embeddings an RNN is defined recursively as follows:\nRNN(x1:t) = f(xt,RNN(x1:t\u22121))\nwhere f is a nonlinear function such as an LSTM (Hochreiter and Schmidhuber, 1997) or a GRU (Cho et al., 2014b). We will use the function RNN as an abstract mapping from an input sequence x1:T to final hidden state RNN(x1:Tx), regardless of the used nonlinearity. To not only summarize the past of a word, but also its future, a bidirectional RNN (Schuster and Paliwal, 1997; Irsoy and\nCardie, 2014) is often used. A bidirectional RNN reads the input sentence in two directions and then concatenates the states for each time step:\nBIRNN(x1:Tx , t) = RNNF (x1:t)\u25e6RNNB(xTx:t)\nwhere RNNF and RNNB are the forward and backward RNNs, respectively. For further details we refer to the encoder of Bahdanau et al. (2015).\nConvolutional Convolutional Neural Networks (CNNs) apply a fixed-size window over the input sequence to capture the local context of each word (Gehring et al., 2016). One advantage of this approach over RNNs is that it allows for fast parallel computation, while sacrificing non-local context. To remedy the loss of context, multiple CNN layers can be stacked. Formally, given an input sequence x1:Tx , we define a CNN as follows:\nCNN(x1:Tx , t) = f(xt\u2212bw/2c, ..,xt, ..,xt+bw/2c)\nwhere f is a nonlinear function, typically a linear transformation followed by ReLU, andw is the size of the window.\nBag-of-Words In a bag-of-words (BoW) encoder every word is simply represented by its word embedding. To give the decoder some sense of word position, position embeddings (PE) may be added. There are different strategies for defining position embeddings, and in this paper we choose to learn a vector for each absolute word position up to a certain maximum length. We then represent the t-th word in a sequence as follows:\nBOW(x1:Tx , t) = xt + pt\nwhere xt is the word embedding and pt is the t-th position embedding."}, {"heading": "2.1.2 Decoder", "text": "A decoder produces the target sentence conditioned on the representation of the source sentence induced by the encoder. In Bahdanau et al. (2015) the decoder is implemented as an RNN conditioned on an additional input ci, the context vector, which is dynamically computed at each time step using an attention mechanism.\nThe probability of a target word yi is now a function of the decoder RNN state, the previous target word embedding, and the context vector. The model is trained end-to-end for maximum log likelihood of the next target word given its context."}, {"heading": "2.2 Graph Convolutional Networks", "text": "We will now describe the Graph Convolutional Networks (GCNs) of Kipf and Welling (2016). For a comprehensive overview of alternative GCN architectures see Gilmer et al. (2017).\nA GCN is a multilayer neural network that operates directly on a graph, encoding information about the neighborhood of a node as a realvalued vector. In each GCN layer, information flows along edges of the graph; in other words, each node receives messages from all its immediate neighbors. When multiple GCN layers are stacked, information about larger neighborhoods gets integrated. For example, in the second layer, a node will receive information from its immediate neighbors, but this information already includes information from their respective neighbors. By choosing the number of GCN layers, we regulate the distance the information travels: with k layers a node receives information from neighbors at most k hops away.\nFormally, consider an undirected graph G = (V, E), where V is a set of n nodes, and E is a set of edges. Every node is assumed to be connected to itself, i.e. \u2200v \u2208 V : (v, v) \u2208 E . Now, let X \u2208 Rd\u00d7n be a matrix containing all n nodes with their features, where d is the dimensionality of the feature vectors. In our case, X will contain word embeddings, but in general it can contain any kind of features. For a 1-layer GCN, the new node representations are computed as follows:\nhv = \u03c1 ( \u2211 u\u2208N (v) Wxu + b )\nwhere W \u2208 Rd\u00d7d is a weight matrix and b \u2208 Rd a bias vector.1 \u03c1 is an activation function, e.g. a ReLU.N (v) is the set of neighbors of v, which we assume here to always include v itself. As stated before, to allow information to flow over multiple hops, we need to stack GCN layers. The recursive computation is as follows:\nh(j+1)v = \u03c1 ( \u2211 u\u2208N (v) W (j)h(j)u + b (j) )\nwhere j indexes the layer, and h(0)v = xv.\n1We dropped the normalization factor used by Kipf and Welling (2016), as it is not used in syntactic GCNs of Marcheggiani and Titov (2017)."}, {"heading": "2.3 Syntactic GCNs", "text": "Marcheggiani and Titov (2017) generalize GCNs to operate on directed and labeled graphs.2 This makes it possible to use linguistic structures such as dependency trees, where directionality and edge labels play an important role. They also integrate edge-wise gates which let the model regulate contributions of individual dependency edges. We will briefly describe these modifications.\nDirectionality In order to deal with directionality of edges, separate weight matrices are used for incoming and outgoing edges. We follow the convention that in dependency trees heads point to their dependents, and thus outgoing edges are used for head-to-dependent connections, and incoming edges are used for dependent-to-head connections. Modifying the recursive computation for directionality, we arrive at:\nh(j+1)v = \u03c1 ( \u2211 u\u2208N (v) W (j) dir(u,v) h (j) u + b (j) dir(u,v) )\nwhere dir(u, v) selects the weight matrix associated with the directionality of the edge connecting u and v (i.e. WIN for u-to-v, WOUT for v-to-u, and WLOOP for v-to-v). Note that self loops are modeled separately,\nso there are now three times as many parameters as in a non-directional GCN.\n2For an alternative approach to integrating labels and directions, see applications of GCNs to statistical relation learning (Schlichtkrull et al., 2017).\nLabels Making the GCN sensitive to labels is straightforward given the above modifications for directionality. Instead of using separate matrices for each direction, separate matrices are now defined for each direction and label combination:\nh(j+1)v = \u03c1 ( \u2211 u\u2208N (v) W (j) lab(u,v) h (j) u + b (j) lab(u,v) )\nwhere we incorporate the directionality of an edge directly in its label.\nImportantly, to prevent over-parametrization, only bias terms are made label-specific, in other words: Wlab(u,v) = Wdir(u,v). The resulting syntactic GCN is illustrated in Figure 2 (shown on top of a CNN, as we will explain in the subsequent section).\nEdge-wise gating Syntactic GCNs also include gates, which can down-weight the contribution of individual edges. They also allow the model to deal with noisy predicted structure, i.e. to ignore potentially erroneous syntactic edges. For each edge, a scalar gate is calculated as follows:\ng(j)u,v = \u03c3 ( h(j)u \u00b7 w\u0302 (j) dir(u,v) + b\u0302 (j) lab(u,v) ) where \u03c3 is the logistic sigmoid function, and w\u0302\n(j) dir(u,v) \u2208 R d and b\u0302(j)lab(u,v) \u2208 R are learned parameters for the gate. The computation becomes:\nh(j+1)v =\u03c1 (\u2211 u\u2208N (v) g(j)u,v ( W (j) lab(u,v) h (j) u + b (j) lab(u,v) ))"}, {"heading": "3 Graph Convolutional Encoders", "text": "In this work we focus on exploiting structural information on the source side, i.e. in the encoder. We hypothesize that using an encoder that incorporates syntax will lead to more informative representations of words, and that these representations, when used as context vectors by the decoder, will lead to an improvement in translation quality. Consequently, in all our models, we use the decoder of Bahdanau et al. (2015) and keep this part of the model constant. As is now common practice, we do not use a maxout layer in the decoder, but apart from this we do not deviate from the original definition. In all models we make use of GRUs (Cho et al., 2014b) as our RNN units.\nOur models vary in the encoder part, where we exploit the power of GCNs to induce syntacticallyaware representations. We now define a series of encoders of increasing complexity.\nBoW + GCN In our first and simplest model, we propose a bag-of-words encoder (with position embeddings, see \u00a72.1.1), with a GCN on top. In other words, inputs h(0) are a sum of embeddings of a word and its position in a sentence. Since the original BoW encoder captures the linear ordering information only in a very crude way (through the position embeddings), the structural information provided by GCN should be highly beneficial.\nConvolutional + GCN In our second model, we use convolutional neural networks to learn word representations. CNNs are fast, but by definition only use a limited window of context. Instead of the approach used by Gehring et al. (2016) (i.e. stacking mulitple CNN layers on top of each other), we use a GCN to enrich the one-layer CNN representations. Figure 2 shows this model. Note that, while the figure shows a CNN with a window size of 3, we will use a larger window size of 5 in our experiments. We expect this model to perform better than BoW + GCN, because of the additional local context captured by the CNN.\nBiRNN + GCN In our third and most powerful model, we employ bidirectional recurrent neural networks. In this model, we start by encoding the source sentence using a BiRNN (i.e. BiGRU), and use the resulting hidden states as input to a GCN. Instead of relying on linear order only, the GCN will allow the encoder to \u2018teleport\u2019 over parts of the input sentence, along dependency edges, con-\nnecting words that otherwise might be far apart. The model might not only benefit from this teleporting capability however; also the nature of the relations between words (i.e. dependency relation types) may be useful, and the GCN exploits this information (see \u00a72.3 for details).\nThis is the most challenging setup for GCNs, as RNNs have been shown capable of capturing at least some degree of syntactic information without explicit supervision (Linzen et al., 2016), and hence they should be hard to improve on by incorporating treebank syntax.\nMarcheggiani and Titov (2017) did not observe improvements from using multiple GCN layers in semantic role labeling. However, we do expect that propagating information from further in the tree should be beneficial in principle. We hypothesize that the first layer is the most influential one, capturing most of the syntactic context, and that additional layers only modestly modify the representations. To ease optimization, we add a residual connection (He et al., 2016) between the GCN layers, when using more than one layer."}, {"heading": "4 Experiments", "text": "Experiments are performed using the Neural Monkey toolkit3 (Helcl and Libovicky\u0301, 2017), which implements the model of Bahdanau et al. (2015) in TensorFlow.4 We use the Adam optimizer (Kingma and Ba, 2015) with a learning rate of 0.001 (0.0002 for CNN models).5 The batch size is set to 80. Between layers we apply dropout with a probability of 0.2, and in experiments with GCNs we use the same value for edge dropout. We train for 45 epochs, evaluating the BLEU performance of the model every epoch on the validation set. For testing, we select the model with the highest validation BLEU. L2 regularization is used with a value of 10\u22128. All the model selection (incl. hyperparameter selections) was performed on the validation set. In all experiments we obtain translations using a greedy decoder, i.e. we select the output token with the highest probability at each time step.\nWe will describe an artificial experiment in \u00a74.1 and MT experiments in \u00a74.2.\n3https://github.com/ufal/neuralmonkey 4Our code will be made available upon publication. 5Like Gehring et al. (2016) we note that Adam is too aggressive for CNN models, hence we use a lower learning rate."}, {"heading": "4.1 Reordering artificial sequences", "text": "Our goal here is to provide an intuition for capabilities of GCNs. We define a reordering task where randomly permuted sequences need to be put back into the original order. We encode the original order in the edges, and test if GCNs can successfully exploit this information.\nData From a vocabulary of 26 types, we generate random sequences of 3-10 tokens. We then randomly permute them, pointing every token to its original predecessor with a label sampled from a set of 5 labels. Additionally, we point every token to an arbitrary position in the sequence with a label from a distinct set of 5 \u2018fake\u2019 labels. We sample 25000 training and 1000 validation sequences.\nModel We use the BiRNN + GCN model, i.e. a bidirectional GRU with a 1-layer GCN on top. We use 32, 64 and 128 units for embeddings, GRU units and GCN layers, respectively. Note that this task is not meant to provide a fair comparison to RNNs. The input (besides the edges exploited by the GCN) simply does not carry any information about the original ordering, so RNNs cannot possibly solve this task.\nResults After 6 epochs of training, the model learns to put permuted sequences back into order, reaching the validation BLEU of 99.2. Figure 3 shows that the mean values of the bias terms of gates (i.e. b\u0302) for real and fake edges are far apart, suggesting that the GCN learns to distinguish them. Interestingly, this illustrates why edge-wise gating is beneficial. A gate-less model would not understand which of the two outgoing arcs is fake and which is genuine, because only biases b would then be label-dependent. Consequently, it would only do a mediocre job in reordering. Although using label-specific matrices W would also help, this would not scale to the real scenario (see \u00a72.3)."}, {"heading": "4.2 Machine Translation", "text": "Data For our experiments we use the EnglishGerman and English-Czech News Commentary v11 datasets from the WMT16 news translation shared task.6 As our validation set and test set we use newstest2015 and newstest2016, respectively.\n6http://www.statmt.org/wmt16/translation-task.html\nPre-processing The English sides of the corpora are tokenized and parsed into dependency trees by SyntaxNet,7 using the pre-trained Parsey McParseface model.8 The Czech and German sides are tokenized using the Moses tokenizer.9 Sentence pairs where either side is longer than 50 words are filtered out after tokenization.\nVocabularies For the English sides, we construct vocabularies from all words except those with a training set frequency smaller than three. For Czech and German, to deal with rare words and phenomena such as inflection and compounding, we learn byte-pair encodings (BPE) as described by Sennrich et al. (2016b). Given the size of our data set, and following Wu et al. (2016), we use 8000 BPE merges to obtain robust frequencies for our subword units. Data set statistics are summarized in Table 1 and vocabulary sizes in Table 2.\nHyperparameters We use 256 units for word embeddings, 512 units for GRU units, and 512 units for convolutional layers (or equivalently, 512 \u2018channels\u2019). The dimensionality of the GCN layers is equivalent to the dimensionality of their in-\n7https://github.com/tensorflow/models/tree/master/syntaxnet 8The used dependency parses can be reproduced by using\nthe syntaxnet/demo.sh shell script. 9https://github.com/moses-smt/mosesdecoder\nput. We report results for 2-layer GCNs, as we find them most effective (see ablation studies below).\nBaselines We provide three baselines, each with a different encoder: a bag-of-words encoder, a convolutional encoder with window size w = 5, and a BiRNN. See \u00a72.1.1 for details.\nEvaluation We report BLEU results (Papineni et al., 2002) using MultEval (Clark et al., 2011). We also report Kendall \u03c4 reordering scores.10"}, {"heading": "4.2.1 Results", "text": "English-German Table 3 shows test results on English-German. Unsurprisingly, the bag-ofwords baseline performs the worst, but it still obtains BLEU of 9.5. We expected the BoW+GCN model to make easy gains over this baseline, which is indeed what happens. BLEU1 and BLEU4 scores go up by +4.3 and +2.7, respectively. Next we look at the convolutional encoders. The CNN baseline reaches a higher BLEU4 score than the BoW models with 12.6, but interestingly its BLEU1 score is lower than the BoW+GCN model. The CNN+GCN model improves over the CNN baseline by +1.9 and +1.1 for BLEU1 and BLEU4, respectively. Finally the BiRNN, the strongest baseline, reaches a BLEU4 of 14.9. Interestingly, GCNs still manage to improve the result by +2.3 BLEU1 and +1.2 BLEU4 points.\n10TER (Snover et al., 2006) and BEER (Stanojevic\u0301 and Sima\u2019an, 2014) metrics, even though omitted due to space considerations, are consistent with the reported results.\nEnglish-Czech Table 4 shows test results on English-Czech. While it is difficult to obtain high absolute BLEU scores on this dataset, we can still see similar relative improvements. Again the BoW baseline scores worst, with a BLEU4 of 6.0, and again BoW+GCN beats that result, obtaining +2.5 BLEU1 and +1.5 BLEU4. The CNN baseline scores BLEU4 of 8.1, but the CNN+GCN beats that score, this time by +1.0 and +0.6 for BLEU1 and BLEU4, respectively. Interestingly, BLEU1 scores for the BoW+GCN and CNN+GCN models are higher than both baselines so far. Finally, the BiRNN baseline scores a BLEU4 of 8.9, but it is again beaten by the BiRNN+GCN model with +1.9 BLEU1 and +0.7 BLEU4.\nEffect of GCN layers How many GCN layers do we need? Every layer gives us an extra hop in the graph and expands the syntactic neighborhood of a word. Table 5 shows validation BLEU performance as a function of the number of GCN layers. For English-German, using a 1-layer GCN improves BLEU-1, but surprisingly has little effect on BLEU4. Adding an additional layer gives improvements on both BLEU1 and BLEU4 of +1.3 and +0.73, respectively. For English-Czech, performance increases with each added GCN layer.\nEffect of sentence length We hypothesize that GCNs should be more beneficial for longer sentences: these sentences are likely to contain long-\ndistance syntactic dependencies which may not be adequately captured by RNNs but directly encoded in GCNs. To test this hypothesis, we partition the validation data into five buckets and calculate BLEU for each of them. Figure 4 shows that GCN-based models outperform their respective baselines rather uniformly across all buckets. This is a surprising result. One explanation may be that syntactic parses are noisier for longer sentences, and this prevents us from obtaining extra improvements with GCNs.\nDiscussion Results suggest that the syntactically-aware representations provided by GCNs consistently lead to improved translation performance as measured by BLEU4 (as well as TER and BEER). Consistent gains in terms of Kendall tau and BLEU1 indicate that improvements correlate with better word order and lexical/BPE selection, two phenomena that depend crucially on syntax."}, {"heading": "5 Related Work", "text": "We review various accounts to syntax in NMT as well as other convolutional encoders.\nSyntactic features and/or constraints Sennrich and Haddow (2016) embed features such as POS-tags, lemmas and dependency labels and feed these into the network along with word embeddings. Eriguchi et al. (2016) parse English sentences with an HPSG parser and use a Tree-LSTM to encode the internal nodes of the tree. In the decoder, word and node representations compete under the same attention mechanism. Stahlberg et al. (2016) use a pruned lattice from a hierarchical phrase-based model (hiero) to constrain NMT.\nHiero trees are not syntactically-aware, but instead constrained by symmetrized word alignments.\nMulti-task Learning Sharing NMT parameters with a syntactic parser is a popular approach to obtaining syntactically-aware representations. Luong et al. (2015a) predict linearized constituency parses as an additional task. Eriguchi et al. (2017) multi-task with a target-side RNNG parser (Dyer et al., 2016) and improve on various language pairs with English on the target side. Nadejde et al. (2017) multi-task with CCG tagging, and also integrate syntax on the target side by predicting a sequence of words interleaved with CCG supertags.\nLatent structure Hashimoto and Tsuruoka (2017) add a syntactically-inspired encoder on top of a BiLSTM layer. They encode source words as a learned average of potential parents emulating a relaxed dependency tree. While their model is trained purely on translation data, they also experiment with pre-training the encoder using treebank annotation and report modest improvements on English-Japanese. Yogatama et al. (2016) introduce a model for language understanding and generation that composes words into sentences by inducing unlabeled binary bracketing trees without direct supervision.\nConvolutional encoders Gehring et al. (2016) show that CNNs can be competitive to BiRNNs when used as encoders. To increase the receptive field of a word\u2019s context they stack multiple CNN layers. Kalchbrenner et al. (2016) use convolution in both the encoder and the decoder; they make use of dilation to increase the receptive field. In contrast to both approaches, we use a GCN informed by dependency structure to increase it. Finally, Cho et al. (2014a) propose a recursive convolutional neural network which builds a tree out of the word leaf nodes, but which ends up compressing the source sentence in a single vector."}, {"heading": "6 Conclusions", "text": "We have presented a simple and effective approach to integrating syntax into neural machine translation models and have shown consistent BLEU4 improvements for two challenging language pairs: English-German and English-Czech. Since GCNs are capable of encoding any kind of graph-based structure, in future work we would like to go beyond syntax, by using semantic annotations such as SRL and AMR, and co-reference chains."}, {"heading": "Acknowledgments", "text": "This work was supported by the Netherlands Organization for Scientific Research (NWO) VICI Grant nr. 277-89-002."}], "references": [{"title": "Neural Machine Translation by Jointly Learning to Align and Translate", "author": ["Dzmitry Bahdanau", "Kyunghyun Cho", "Yoshua Bengio."], "venue": "Proceedings of the International Conference on Learning Representations (ICLR). http://arxiv.org/abs/1409.0473.", "citeRegEx": "Bahdanau et al\\.,? 2015", "shortCiteRegEx": "Bahdanau et al\\.", "year": 2015}, {"title": "Abstract meaning representation (amr) 1.0 specification", "author": ["Laura Banarescu", "Claire Bonial", "Shu Cai", "Madalina Georgescu", "Kira Griffitt", "Ulf Hermjakob", "Kevin Knight", "Philipp Koehn", "Martha Palmer", "Nathan Schneider"], "venue": "In Conference on Empiri-", "citeRegEx": "Banarescu et al\\.,? \\Q2012\\E", "shortCiteRegEx": "Banarescu et al\\.", "year": 2012}, {"title": "Learning to translate with source and target syntax", "author": ["David Chiang."], "venue": "Proceedings of the 48th Annual Meeting of the Association for Computational Linguistics. Association for Computational Linguistics, Uppsala, Sweden, pages 1443\u20131452.", "citeRegEx": "Chiang.,? 2010", "shortCiteRegEx": "Chiang.", "year": 2010}, {"title": "On the Properties of Neural Machine Translation: EncoderDecoder Approaches", "author": ["KyungHyun Cho", "Bart van Merrienboer", "Dzmitry Bahdanau", "Yoshua Bengio."], "venue": "SSST-8, Eighth Workshop on Syntax, Semantics and Structure in Statistical", "citeRegEx": "Cho et al\\.,? 2014a", "shortCiteRegEx": "Cho et al\\.", "year": 2014}, {"title": "Learning Phrase Representations using RNN Encoder\u2013Decoder for Statistical Machine", "author": ["Kyunghyun Cho", "Bart van Merrienboer", "Caglar Gulcehre", "Dzmitry Bahdanau", "Fethi Bougares", "Holger Schwenk", "Yoshua Bengio"], "venue": null, "citeRegEx": "Cho et al\\.,? \\Q2014\\E", "shortCiteRegEx": "Cho et al\\.", "year": 2014}, {"title": "Better hypothesis testing for statistical machine translation: Controlling for optimizer instability", "author": ["Jonathan H. Clark", "Chris Dyer", "Alon Lavie", "Noah A. Smith."], "venue": "Proceedings of the 49th Annual Meeting of the Association", "citeRegEx": "Clark et al\\.,? 2011", "shortCiteRegEx": "Clark et al\\.", "year": 2011}, {"title": "Convolutional neural networks on graphs with fast localized spectral filtering", "author": ["Micha\u00ebl Defferrard", "Xavier Bresson", "Pierre Vandergheynst."], "venue": "Advances in Neural Information Processing Systems 29: Annual Conference on Neural In-", "citeRegEx": "Defferrard et al\\.,? 2016", "shortCiteRegEx": "Defferrard et al\\.", "year": 2016}, {"title": "Convolutional networks on graphs for learning molecular fingerprints", "author": ["David K Duvenaud", "Dougal Maclaurin", "Jorge Iparraguirre", "Rafael Bombarell", "Timothy Hirzel", "Al\u00e1n Aspuru-Guzik", "Ryan P Adams."], "venue": "Advances in neural information pro-", "citeRegEx": "Duvenaud et al\\.,? 2015", "shortCiteRegEx": "Duvenaud et al\\.", "year": 2015}, {"title": "Recurrent neural network grammars", "author": ["Chris Dyer", "Adhiguna Kuncoro", "Miguel Ballesteros", "Noah A. Smith."], "venue": "Proceedings of the 2016 Conference of the North American Chapter of the Association for Computational Linguistics: Human Lan-", "citeRegEx": "Dyer et al\\.,? 2016", "shortCiteRegEx": "Dyer et al\\.", "year": 2016}, {"title": "Finding structure in time", "author": ["Jeffrey L Elman."], "venue": "Cognitive science 14(2):179\u2013211.", "citeRegEx": "Elman.,? 1990", "shortCiteRegEx": "Elman.", "year": 1990}, {"title": "Tree-to-sequence attentional neural machine translation", "author": ["Akiko Eriguchi", "Kazuma Hashimoto", "Yoshimasa Tsuruoka."], "venue": "Proceedings of the 54th Annual Meeting of the Association for Computational Linguistics (Volume", "citeRegEx": "Eriguchi et al\\.,? 2016", "shortCiteRegEx": "Eriguchi et al\\.", "year": 2016}, {"title": "Learning to Parse and Translate Improves Neural Machine Translation", "author": ["Akiko Eriguchi", "Yoshimasa Tsuruoka", "Kyunghyun Cho."], "venue": "ArXiv e-prints .", "citeRegEx": "Eriguchi et al\\.,? 2017", "shortCiteRegEx": "Eriguchi et al\\.", "year": 2017}, {"title": "A convolutional encoder model for neural machine translation", "author": ["Jonas Gehring", "Michael Auli", "David Grangier", "Yann N. Dauphin."], "venue": "CoRR abs/1611.02344. http://arxiv.org/abs/1611.02344.", "citeRegEx": "Gehring et al\\.,? 2016", "shortCiteRegEx": "Gehring et al\\.", "year": 2016}, {"title": "Neural Message Passing for Quantum Chemistry", "author": ["Justin Gilmer", "Samuel S. Schoenholz", "Patrick F. Riley", "Oriol Vinyals", "George E. Dahl."], "venue": "ArXiv eprints .", "citeRegEx": "Gilmer et al\\.,? 2017", "shortCiteRegEx": "Gilmer et al\\.", "year": 2017}, {"title": "Neural machine translation with source-side latent graph parsing", "author": ["Kazuma Hashimoto", "Yoshimasa Tsuruoka."], "venue": "CoRR abs/1702.02265. http://arxiv.org/abs/1702.02265.", "citeRegEx": "Hashimoto and Tsuruoka.,? 2017", "shortCiteRegEx": "Hashimoto and Tsuruoka.", "year": 2017}, {"title": "Deep residual learning for image recognition", "author": ["Kaiming He", "Xiangyu Zhang", "Shaoqing Ren", "Jian Sun."], "venue": "Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition. pages 770\u2013778.", "citeRegEx": "He et al\\.,? 2016", "shortCiteRegEx": "He et al\\.", "year": 2016}, {"title": "Neural monkey: An open-source tool for sequence learning", "author": ["Jind\u0159ich Helcl", "Jind\u0159ich Libovick\u00fd."], "venue": "The Prague Bulletin of Mathematical Linguistics (107):5\u201317. https://doi.org/10.1515/pralin2017-0001.", "citeRegEx": "Helcl and Libovick\u00fd.,? 2017", "shortCiteRegEx": "Helcl and Libovick\u00fd.", "year": 2017}, {"title": "Opinion Mining with Deep Recurrent Neural Networks", "author": ["Ozan Irsoy", "Claire Cardie."], "venue": "Proceedings of the 2014 Conference on Empirical Methods in Natural Language Processing (EMNLP). Association for Computa-", "citeRegEx": "Irsoy and Cardie.,? 2014", "shortCiteRegEx": "Irsoy and Cardie.", "year": 2014}, {"title": "Recurrent Continuous Translation Models", "author": ["Nal Kalchbrenner", "Phil Blunsom."], "venue": "Proceedings of the 2013 Conference on Empirical Methods in Natural Language Processing. Seattle, Washington, USA, pages 1700\u20131709.", "citeRegEx": "Kalchbrenner and Blunsom.,? 2013", "shortCiteRegEx": "Kalchbrenner and Blunsom.", "year": 2013}, {"title": "Neural machine translation in linear time", "author": ["Nal Kalchbrenner", "Lasse Espeholt", "Karen Simonyan", "A\u00e4ron van den Oord", "Alex Graves", "Koray Kavukcuoglu."], "venue": "CoRR abs/1610.10099. http://arxiv.org/abs/1610.10099.", "citeRegEx": "Kalchbrenner et al\\.,? 2016", "shortCiteRegEx": "Kalchbrenner et al\\.", "year": 2016}, {"title": "Molecular graph convolutions: moving beyond fingerprints", "author": ["Steven Kearnes", "Kevin McCloskey", "Marc Berndl", "Vijay Pande", "Patrick Riley."], "venue": "Journal of computer-aided molecular design 30(8):595\u2013608.", "citeRegEx": "Kearnes et al\\.,? 2016", "shortCiteRegEx": "Kearnes et al\\.", "year": 2016}, {"title": "Adam: A method for stochastic optimization", "author": ["Diederik P. Kingma", "Jimmy Ba."], "venue": "ICLR. http://arxiv.org/abs/1412.6980.", "citeRegEx": "Kingma and Ba.,? 2015", "shortCiteRegEx": "Kingma and Ba.", "year": 2015}, {"title": "Semisupervised classification with graph convolutional networks", "author": ["Thomas N. Kipf", "Max Welling."], "venue": "CoRR abs/1609.02907. http://arxiv.org/abs/1609.02907.", "citeRegEx": "Kipf and Welling.,? 2016", "shortCiteRegEx": "Kipf and Welling.", "year": 2016}, {"title": "Assessing the ability of lstms to learn syntaxsensitive dependencies", "author": ["Tal Linzen", "Emmanuel Dupoux", "Yoav Goldberg."], "venue": "Transactions of the Association for Computational Linguistics 4:521\u2013535. https://www.transacl.org/ojs/index.php/tacl/article/view/972.", "citeRegEx": "Linzen et al\\.,? 2016", "shortCiteRegEx": "Linzen et al\\.", "year": 2016}, {"title": "Multitask Sequence to Sequence Learning", "author": ["Minh-Thang Luong", "Quoc V. Le", "Ilya Sutskever", "Oriol Vinyals", "Lukasz Kaiser."], "venue": "CoRR abs/1511.06114. http://arxiv.org/abs/1511.06114.", "citeRegEx": "Luong et al\\.,? 2015a", "shortCiteRegEx": "Luong et al\\.", "year": 2015}, {"title": "Effective Approaches to Attentionbased Neural Machine Translation", "author": ["Thang Luong", "Hieu Pham", "Christopher D. Manning."], "venue": "Proceedings of the 2015 Conference on Empirical Methods in Natural Language Processing. Association for", "citeRegEx": "Luong et al\\.,? 2015b", "shortCiteRegEx": "Luong et al\\.", "year": 2015}, {"title": "Encoding Sentences with Graph Convolutional Networks for Semantic Role Labeling", "author": ["Diego Marcheggiani", "Ivan Titov."], "venue": "ArXiv e-prints https://arxiv.org/abs/1703.04826.", "citeRegEx": "Marcheggiani and Titov.,? 2017", "shortCiteRegEx": "Marcheggiani and Titov.", "year": 2017}, {"title": "Syntax-aware Neural Machine Translation Using CCG", "author": ["Maria Nadejde", "Siva Reddy", "Rico Sennrich", "Tomasz Dwojak", "Marcin Junczys-Dowmunt", "Philipp Koehn", "Alexandra Birch."], "venue": "ArXiv e-prints .", "citeRegEx": "Nadejde et al\\.,? 2017", "shortCiteRegEx": "Nadejde et al\\.", "year": 2017}, {"title": "Bleu: a method for automatic evaluation of machine translation", "author": ["Kishore Papineni", "Salim Roukos", "Todd Ward", "Wei jing Zhu."], "venue": "pages 311\u2013318.", "citeRegEx": "Papineni et al\\.,? 2002", "shortCiteRegEx": "Papineni et al\\.", "year": 2002}, {"title": "Modeling Relational Data with Graph Convolutional Networks", "author": ["Michael Schlichtkrull", "Thomas N Kipf", "Peter Bloem", "Rianne van den Berg", "Ivan Titov", "Max Welling."], "venue": "ArXiv e-prints .", "citeRegEx": "Schlichtkrull et al\\.,? 2017", "shortCiteRegEx": "Schlichtkrull et al\\.", "year": 2017}, {"title": "Bidirectional recurrent neural networks", "author": ["Mike Schuster", "Kuldip K. Paliwal."], "venue": "IEEE Transactions on Signal Processing 45(11):2673\u20132681. https://doi.org/10.1109/78.650093.", "citeRegEx": "Schuster and Paliwal.,? 1997", "shortCiteRegEx": "Schuster and Paliwal.", "year": 1997}, {"title": "Linguistic Input Features Improve Neural Machine Translation", "author": ["Rico Sennrich", "Barry Haddow."], "venue": "Proceedings of the First Conference on Machine Translation (WMT16). volume abs/1606.02892. http://arxiv.org/abs/1606.02892.", "citeRegEx": "Sennrich and Haddow.,? 2016", "shortCiteRegEx": "Sennrich and Haddow.", "year": 2016}, {"title": "Edinburgh neural machine translation systems for wmt 16", "author": ["Rico Sennrich", "Barry Haddow", "Alexandra Birch."], "venue": "Proceedings of the First Conference on Machine Translation. Association for Computational Linguistics, Berlin, Germany, pages 371\u2013", "citeRegEx": "Sennrich et al\\.,? 2016a", "shortCiteRegEx": "Sennrich et al\\.", "year": 2016}, {"title": "Neural machine translation of rare words with subword units", "author": ["Rico Sennrich", "Barry Haddow", "Alexandra Birch."], "venue": "Proceedings of the 54th Annual Meeting of the Association for Computational Linguistics (Volume", "citeRegEx": "Sennrich et al\\.,? 2016b", "shortCiteRegEx": "Sennrich et al\\.", "year": 2016}, {"title": "Does string-based neural mt learn source syntax? In Proceedings of the 2016 Conference on Empirical Methods in Natural Language Processing", "author": ["Xing Shi", "Inkit Padhi", "Kevin Knight."], "venue": "Association for Computational Linguistics, Austin, Texas, pages", "citeRegEx": "Shi et al\\.,? 2016", "shortCiteRegEx": "Shi et al\\.", "year": 2016}, {"title": "Quasisynchronous grammars: Alignment by soft projection of syntactic dependencies", "author": ["David Smith", "Jason Eisner."], "venue": "Proceedings on the Workshop on Statistical Machine Translation. Association for Computa-", "citeRegEx": "Smith and Eisner.,? 2006", "shortCiteRegEx": "Smith and Eisner.", "year": 2006}, {"title": "A study of translation edit rate with targeted human annotation", "author": ["Matthew Snover", "Bonnie Dorr", "Richard Schwartz", "Linnea Micciulla", "John Makhoul."], "venue": "In Proceedings of Association for Machine Translation in the Americas. pages 223\u2013231.", "citeRegEx": "Snover et al\\.,? 2006", "shortCiteRegEx": "Snover et al\\.", "year": 2006}, {"title": "Recursive deep models for semantic compositionality over a sentiment treebank", "author": ["Richard Socher", "Alex Perelygin", "Jean Wu", "Jason Chuang", "Christopher D. Manning", "Andrew Ng", "Christopher Potts."], "venue": "Proceedings of EMNLP.", "citeRegEx": "Socher et al\\.,? 2013", "shortCiteRegEx": "Socher et al\\.", "year": 2013}, {"title": "Syntactically guided neural machine translation", "author": ["Felix Stahlberg", "Eva Hasler", "Aurelien Waite", "Bill Byrne."], "venue": "Proceedings of the 54th Annual Meeting of the Association for Computational Linguistics (Volume 2: Short Papers). Association for Computa-", "citeRegEx": "Stahlberg et al\\.,? 2016", "shortCiteRegEx": "Stahlberg et al\\.", "year": 2016}, {"title": "Fitting sentence level translation evaluation with many dense features", "author": ["Milo\u0161 Stanojevi\u0107", "Khalil Sima\u2019an"], "venue": "In Proceedings of the 2014 Conference on Empirical Methods in Natural Language Processing (EMNLP)", "citeRegEx": "Stanojevi\u0107 and Sima.an.,? \\Q2014\\E", "shortCiteRegEx": "Stanojevi\u0107 and Sima.an.", "year": 2014}, {"title": "The conll 2008 shared task on joint parsing of syntactic and semantic dependencies", "author": ["Mihai Surdeanu", "Richard Johansson", "Adam Meyers", "Llu\u0131\u0301s M\u00e0rquez", "Joakim Nivre"], "venue": "In Proceedings of CoNLL", "citeRegEx": "Surdeanu et al\\.,? \\Q2008\\E", "shortCiteRegEx": "Surdeanu et al\\.", "year": 2008}, {"title": "Sequence to Sequence Learning with Neural Networks", "author": ["Ilya Sutskever", "Oriol Vinyals", "Quoc V. Le."], "venue": "Neural Information Processing Systems (NIPS). pages 3104\u20133112. http://papers.nips.cc/paper/5346-sequence-to-", "citeRegEx": "Sutskever et al\\.,? 2014", "shortCiteRegEx": "Sutskever et al\\.", "year": 2014}, {"title": "Learning to compose words into sentences with reinforcement learning", "author": ["Dani Yogatama", "Phil Blunsom", "Chris Dyer", "Edward Grefenstette", "Wang Ling."], "venue": "CoRR abs/1611.09100. http://arxiv.org/abs/1611.09100.", "citeRegEx": "Yogatama et al\\.,? 2016", "shortCiteRegEx": "Yogatama et al\\.", "year": 2016}, {"title": "Syntax augmented machine translation via chart parsing", "author": ["Andreas Zollmann", "Ashish Venugopal."], "venue": "Proceedings of the Workshop on Statistical Machine Translation. Association for Computational Linguistics, Strouds-", "citeRegEx": "Zollmann and Venugopal.,? 2006", "shortCiteRegEx": "Zollmann and Venugopal.", "year": 2006}], "referenceMentions": [{"referenceID": 32, "context": "Neural machine translation (NMT) is one of success stories of deep learning in natural language processing, with recent NMT systems outperforming traditional phrase-based approaches on many language pairs (Sennrich et al., 2016a).", "startOffset": 205, "endOffset": 229}, {"referenceID": 41, "context": "State-ofthe-art NMT systems rely on sequential encoderdecoders (Sutskever et al., 2014; Bahdanau et al., 2015) and lack any explicit modeling of syntax or any hierarchical structure of language.", "startOffset": 63, "endOffset": 110}, {"referenceID": 0, "context": "State-ofthe-art NMT systems rely on sequential encoderdecoders (Sutskever et al., 2014; Bahdanau et al., 2015) and lack any explicit modeling of syntax or any hierarchical structure of language.", "startOffset": 63, "endOffset": 110}, {"referenceID": 24, "context": ", multi-task learning (Luong et al., 2015a; Nadejde et al., 2017; Eriguchi et al., 2017; Hashimoto and Tsuruoka, 2017)) or may be too restrictive in modeling the interface between syntax and the translation task (e.", "startOffset": 22, "endOffset": 118}, {"referenceID": 27, "context": ", multi-task learning (Luong et al., 2015a; Nadejde et al., 2017; Eriguchi et al., 2017; Hashimoto and Tsuruoka, 2017)) or may be too restrictive in modeling the interface between syntax and the translation task (e.", "startOffset": 22, "endOffset": 118}, {"referenceID": 11, "context": ", multi-task learning (Luong et al., 2015a; Nadejde et al., 2017; Eriguchi et al., 2017; Hashimoto and Tsuruoka, 2017)) or may be too restrictive in modeling the interface between syntax and the translation task (e.", "startOffset": 22, "endOffset": 118}, {"referenceID": 14, "context": ", multi-task learning (Luong et al., 2015a; Nadejde et al., 2017; Eriguchi et al., 2017; Hashimoto and Tsuruoka, 2017)) or may be too restrictive in modeling the interface between syntax and the translation task (e.", "startOffset": 22, "endOffset": 118}, {"referenceID": 10, "context": ", learning representations of linguistic phrases (Eriguchi et al., 2016)).", "startOffset": 49, "endOffset": 72}, {"referenceID": 43, "context": "This goal is in line with claims that rigid syntactic constraints typically hurt MT (Zollmann and Venugopal, 2006; Smith and Eisner, 2006; Chiang, 2010), and, though these claims have been made in the context of traditional MT systems, we believe they are no less valid for NMT.", "startOffset": 84, "endOffset": 152}, {"referenceID": 35, "context": "This goal is in line with claims that rigid syntactic constraints typically hurt MT (Zollmann and Venugopal, 2006; Smith and Eisner, 2006; Chiang, 2010), and, though these claims have been made in the context of traditional MT systems, we believe they are no less valid for NMT.", "startOffset": 84, "endOffset": 152}, {"referenceID": 2, "context": "This goal is in line with claims that rigid syntactic constraints typically hurt MT (Zollmann and Venugopal, 2006; Smith and Eisner, 2006; Chiang, 2010), and, though these claims have been made in the context of traditional MT systems, we believe they are no less valid for NMT.", "startOffset": 84, "endOffset": 152}, {"referenceID": 0, "context": "Attention-based NMT systems (Bahdanau et al., 2015; Luong et al., 2015b) represent source sentence words as latent-feature vectors in the encoder and use these vectors when generating a translation.", "startOffset": 28, "endOffset": 72}, {"referenceID": 25, "context": "Attention-based NMT systems (Bahdanau et al., 2015; Luong et al., 2015b) represent source sentence words as latent-feature vectors in the encoder and use these vectors when generating a translation.", "startOffset": 28, "endOffset": 72}, {"referenceID": 7, "context": "In order to produce syntax-aware feature representations of words, we exploit graphconvolutional networks (GCNs) (Duvenaud et al., 2015; Defferrard et al., 2016; Kearnes et al., 2016; Kipf and Welling, 2016).", "startOffset": 113, "endOffset": 207}, {"referenceID": 6, "context": "In order to produce syntax-aware feature representations of words, we exploit graphconvolutional networks (GCNs) (Duvenaud et al., 2015; Defferrard et al., 2016; Kearnes et al., 2016; Kipf and Welling, 2016).", "startOffset": 113, "endOffset": 207}, {"referenceID": 20, "context": "In order to produce syntax-aware feature representations of words, we exploit graphconvolutional networks (GCNs) (Duvenaud et al., 2015; Defferrard et al., 2016; Kearnes et al., 2016; Kipf and Welling, 2016).", "startOffset": 113, "endOffset": 207}, {"referenceID": 22, "context": "In order to produce syntax-aware feature representations of words, we exploit graphconvolutional networks (GCNs) (Duvenaud et al., 2015; Defferrard et al., 2016; Kearnes et al., 2016; Kipf and Welling, 2016).", "startOffset": 113, "endOffset": 207}, {"referenceID": 13, "context": "nodes at most k hops aways from the node) (Gilmer et al., 2017).", "startOffset": 42, "endOffset": 63}, {"referenceID": 26, "context": "We use Syntactic GCNs, a version of GCN operating on top of syntactic dependency trees, recently shown effective in the context of semantic role labeling (Marcheggiani and Titov, 2017).", "startOffset": 154, "endOffset": 184}, {"referenceID": 12, "context": "Though GCNs can take word embeddings as input, we will see that they are more effective when used as layers on top of recurrent neural network (RNN) or convolutional neural network (CNN) encoders (Gehring et al., 2016), enriching their states with syntactic information.", "startOffset": 196, "endOffset": 218}, {"referenceID": 23, "context": ", subject-verb agreement) reasonably well on their own, without explicit treebank supervision (Linzen et al., 2016; Shi et al., 2016).", "startOffset": 94, "endOffset": 133}, {"referenceID": 34, "context": ", subject-verb agreement) reasonably well on their own, without explicit treebank supervision (Linzen et al., 2016; Shi et al., 2016).", "startOffset": 94, "endOffset": 133}, {"referenceID": 40, "context": ", dependency-based semantic-role labeling representations (Surdeanu et al., 2008), AMR semantic graphs (Banarescu et al.", "startOffset": 58, "endOffset": 81}, {"referenceID": 1, "context": ", 2008), AMR semantic graphs (Banarescu et al., 2012) and co-reference chains).", "startOffset": 29, "endOffset": 53}, {"referenceID": 37, "context": "For example, unlike recursive neural networks (Socher et al., 2013), GCNs do not require the graphs to be trees.", "startOffset": 46, "endOffset": 67}, {"referenceID": 18, "context": "In NMT (Kalchbrenner and Blunsom, 2013; Sutskever et al., 2014; Cho et al., 2014b), given example translation pairs from a parallel corpus, a neural network is trained to directly estimate the conditional distribution p(y1:Ty |x1:Tx) of translating a source sentence x1:Tx (a sequence of Tx words) into a target sentence y1:Ty .", "startOffset": 7, "endOffset": 82}, {"referenceID": 41, "context": "In NMT (Kalchbrenner and Blunsom, 2013; Sutskever et al., 2014; Cho et al., 2014b), given example translation pairs from a parallel corpus, a neural network is trained to directly estimate the conditional distribution p(y1:Ty |x1:Tx) of translating a source sentence x1:Tx (a sequence of Tx words) into a target sentence y1:Ty .", "startOffset": 7, "endOffset": 82}, {"referenceID": 9, "context": "Recurrent Recurrent neural networks (RNNs) (Elman, 1990) model sequential data.", "startOffset": 43, "endOffset": 56}, {"referenceID": 0, "context": "For further details we refer to the encoder of Bahdanau et al. (2015).", "startOffset": 47, "endOffset": 70}, {"referenceID": 12, "context": "Convolutional Convolutional Neural Networks (CNNs) apply a fixed-size window over the input sequence to capture the local context of each word (Gehring et al., 2016).", "startOffset": 143, "endOffset": 165}, {"referenceID": 0, "context": "In Bahdanau et al. (2015) the decoder is implemented as an RNN conditioned on an additional input ci, the context vector, which is dynamically computed at each time step using an attention mechanism.", "startOffset": 3, "endOffset": 26}, {"referenceID": 21, "context": "We will now describe the Graph Convolutional Networks (GCNs) of Kipf and Welling (2016). For a comprehensive overview of alternative GCN architectures see Gilmer et al.", "startOffset": 64, "endOffset": 88}, {"referenceID": 13, "context": "For a comprehensive overview of alternative GCN architectures see Gilmer et al. (2017).", "startOffset": 66, "endOffset": 87}, {"referenceID": 22, "context": "We dropped the normalization factor used by Kipf and Welling (2016), as it is not used in syntactic GCNs of Marcheggiani and Titov (2017).", "startOffset": 44, "endOffset": 68}, {"referenceID": 22, "context": "We dropped the normalization factor used by Kipf and Welling (2016), as it is not used in syntactic GCNs of Marcheggiani and Titov (2017).", "startOffset": 44, "endOffset": 138}, {"referenceID": 29, "context": "For an alternative approach to integrating labels and directions, see applications of GCNs to statistical relation learning (Schlichtkrull et al., 2017).", "startOffset": 124, "endOffset": 152}, {"referenceID": 0, "context": "Consequently, in all our models, we use the decoder of Bahdanau et al. (2015) and keep this part of the model constant.", "startOffset": 55, "endOffset": 78}, {"referenceID": 12, "context": "Instead of the approach used by Gehring et al. (2016) (i.", "startOffset": 32, "endOffset": 54}, {"referenceID": 23, "context": "This is the most challenging setup for GCNs, as RNNs have been shown capable of capturing at least some degree of syntactic information without explicit supervision (Linzen et al., 2016), and hence they should be hard to improve on by incorporating treebank syntax.", "startOffset": 165, "endOffset": 186}, {"referenceID": 15, "context": "To ease optimization, we add a residual connection (He et al., 2016) between the GCN layers, when using more than one layer.", "startOffset": 51, "endOffset": 68}, {"referenceID": 16, "context": "Experiments are performed using the Neural Monkey toolkit3 (Helcl and Libovick\u00fd, 2017), which implements the model of Bahdanau et al.", "startOffset": 59, "endOffset": 86}, {"referenceID": 21, "context": "4 We use the Adam optimizer (Kingma and Ba, 2015) with a learning rate of 0.", "startOffset": 28, "endOffset": 49}, {"referenceID": 0, "context": "Experiments are performed using the Neural Monkey toolkit3 (Helcl and Libovick\u00fd, 2017), which implements the model of Bahdanau et al. (2015) in TensorFlow.", "startOffset": 118, "endOffset": 141}, {"referenceID": 12, "context": "Like Gehring et al. (2016) we note that Adam is too aggressive for CNN models, hence we use a lower learning rate.", "startOffset": 5, "endOffset": 27}, {"referenceID": 32, "context": "For Czech and German, to deal with rare words and phenomena such as inflection and compounding, we learn byte-pair encodings (BPE) as described by Sennrich et al. (2016b). Given the size of our data set, and following Wu et al.", "startOffset": 147, "endOffset": 171}, {"referenceID": 32, "context": "For Czech and German, to deal with rare words and phenomena such as inflection and compounding, we learn byte-pair encodings (BPE) as described by Sennrich et al. (2016b). Given the size of our data set, and following Wu et al. (2016), we use 8000 BPE merges to obtain robust frequencies for our subword units.", "startOffset": 147, "endOffset": 235}, {"referenceID": 28, "context": "Evaluation We report BLEU results (Papineni et al., 2002) using MultEval (Clark et al.", "startOffset": 34, "endOffset": 57}, {"referenceID": 5, "context": ", 2002) using MultEval (Clark et al., 2011).", "startOffset": 23, "endOffset": 43}, {"referenceID": 36, "context": "TER (Snover et al., 2006) and BEER (Stanojevi\u0107 and Sima\u2019an, 2014) metrics, even though omitted due to space considerations, are consistent with the reported results.", "startOffset": 4, "endOffset": 25}, {"referenceID": 39, "context": ", 2006) and BEER (Stanojevi\u0107 and Sima\u2019an, 2014) metrics, even though omitted due to space considerations, are consistent with the reported results.", "startOffset": 17, "endOffset": 47}, {"referenceID": 29, "context": "Syntactic features and/or constraints Sennrich and Haddow (2016) embed features such as POS-tags, lemmas and dependency labels and feed these into the network along with word embeddings.", "startOffset": 38, "endOffset": 65}, {"referenceID": 10, "context": "Eriguchi et al. (2016) parse English sentences with an HPSG parser and use a Tree-LSTM to encode the internal nodes of the tree.", "startOffset": 0, "endOffset": 23}, {"referenceID": 10, "context": "Eriguchi et al. (2016) parse English sentences with an HPSG parser and use a Tree-LSTM to encode the internal nodes of the tree. In the decoder, word and node representations compete under the same attention mechanism. Stahlberg et al. (2016) use a pruned lattice from a hierarchical phrase-based model (hiero) to constrain NMT.", "startOffset": 0, "endOffset": 243}, {"referenceID": 8, "context": "(2017) multi-task with a target-side RNNG parser (Dyer et al., 2016) and improve on various language pairs with English on the target side.", "startOffset": 49, "endOffset": 68}, {"referenceID": 21, "context": "Luong et al. (2015a) predict linearized constituency parses as an additional task.", "startOffset": 0, "endOffset": 21}, {"referenceID": 9, "context": "Eriguchi et al. (2017) multi-task with a target-side RNNG parser (Dyer et al.", "startOffset": 0, "endOffset": 23}, {"referenceID": 8, "context": "(2017) multi-task with a target-side RNNG parser (Dyer et al., 2016) and improve on various language pairs with English on the target side. Nadejde et al. (2017) multi-task with CCG tagging, and also integrate syntax on the target side by predicting a sequence of words interleaved with CCG supertags.", "startOffset": 50, "endOffset": 162}, {"referenceID": 14, "context": "Latent structure Hashimoto and Tsuruoka (2017) add a syntactically-inspired encoder on top of a BiLSTM layer.", "startOffset": 17, "endOffset": 47}, {"referenceID": 14, "context": "Latent structure Hashimoto and Tsuruoka (2017) add a syntactically-inspired encoder on top of a BiLSTM layer. They encode source words as a learned average of potential parents emulating a relaxed dependency tree. While their model is trained purely on translation data, they also experiment with pre-training the encoder using treebank annotation and report modest improvements on English-Japanese. Yogatama et al. (2016) introduce a model for language understanding and generation that composes words into sentences by inducing unlabeled binary bracketing trees without direct supervision.", "startOffset": 17, "endOffset": 423}, {"referenceID": 10, "context": "Convolutional encoders Gehring et al. (2016) show that CNNs can be competitive to BiRNNs when used as encoders.", "startOffset": 23, "endOffset": 45}, {"referenceID": 10, "context": "Convolutional encoders Gehring et al. (2016) show that CNNs can be competitive to BiRNNs when used as encoders. To increase the receptive field of a word\u2019s context they stack multiple CNN layers. Kalchbrenner et al. (2016) use convolution in both the encoder and the decoder; they make use of dilation to increase the receptive field.", "startOffset": 23, "endOffset": 223}, {"referenceID": 3, "context": "Finally, Cho et al. (2014a) propose a recursive convolutional neural network which builds a tree out of the word leaf nodes, but which ends up compressing the source sentence in a single vector.", "startOffset": 9, "endOffset": 28}], "year": 2017, "abstractText": "We present a simple and effective approach to incorporating syntactic structure into neural attention-based encoderdecoder models for machine translation. We rely on graph-convolutional networks (GCNs), a recent class of neural networks developed for modeling graph-structured data. Our GCNs use predicted syntactic dependency trees of source sentences to produce representations of words (i.e. hidden states of the encoder) that are sensitive to their syntactic neighborhoods. GCNs take word representations as input and produce word representations as output, so they can easily be incorporated as layers into standard encoders (e.g., on top of bidirectional RNNs or convolutional neural networks). We evaluate their effectiveness with English-German and English-Czech translation experiments for different types of encoders and observe substantial improvements over their syntax-agnostic versions in all the considered setups.", "creator": "LaTeX with hyperref package"}}}