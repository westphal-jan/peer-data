{"id": "1705.07425", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "21-May-2017", "title": "Learning Semantic Relatedness From Human Feedback Using Metric Learning", "abstract": "Assessing the degree of semantic relatedness between words is an important task with a variety of semantic applications, such as ontology learning for the Semantic Web, semantic search or query expansion. To accomplish this in an automated fashion, many relatedness measures have been proposed. However, most of these metrics only encode information contained in the underlying corpus and thus do not directly model human intuition. To solve this, we propose to utilize a metric learning approach to improve existing semantic relatedness measures by learning from additional information, such as explicit human feedback. For this, we argue to use word embeddings instead of traditional high-dimensional vector representations in order to leverage their semantic density and to reduce computational cost. We rigorously test our approach on several domains including tagging data as well as publicly available embeddings based on Wikipedia texts and navigation. Human feedback about semantic relatedness for learning and evaluation is extracted from publicly available datasets such as MEN or WS-353. We find that our method can significantly improve semantic relatedness measures by learning from additional information, such as explicit human feedback. For tagging data, we are the first to generate and study embeddings. Our results are of special interest for ontology and recommendation engineers, but also for any other researchers and practitioners of Semantic Web techniques. In the future, we will need to establish a framework of semantic relatedness that uses various human input, including explicit human feedback, semantic search, and semantic search.", "histories": [["v1", "Sun, 21 May 2017 10:16:49 GMT  (175kb,D)", "https://arxiv.org/abs/1705.07425v1", null], ["v2", "Wed, 24 May 2017 13:07:07 GMT  (175kb,D)", "http://arxiv.org/abs/1705.07425v2", "Under review at ISWC 2017"]], "reviews": [], "SUBJECTS": "cs.CL cs.LG", "authors": ["thomas niebler", "martin becker", "christian p\\\"olitz", "reas hotho"], "accepted": false, "id": "1705.07425"}, "pdf": {"name": "1705.07425.pdf", "metadata": {"source": "CRF", "title": "Learning Semantic Relatedness from Human Feedback Using Metric Learning", "authors": ["Thomas Niebler", "Martin Becker", "Christian P\u00f6litz", "Andreas Hotho"], "emails": ["hotho}@informatik.uni-wuerzburg.de"], "sections": [{"heading": "1 Introduction", "text": "Automatically assessing semantic relatedness as perceived by humans is a task with many applications related to semantic technologies, such as ontology learning for the Semantic Web, semantic search or query expansion. Recent work has shown that semantic relatedness between words can successfully be extracted from a wide range of sources, such as tagging data [6, 17], Wikipedia article texts [13, 23] or Wikipedia navigation [20, 25]. In particular, such approaches usually encode semantic information of words in continuous word vectors [27]. The semantic relatedness between two words can then be measured by the cosine similarity of their corresponding word vectors. While the above-cited methods come close to human intuition of semantic relatedness, they are only able to encode information contained in the underlying corpus. Thus, they do not explicitly represent the actual notion of semantic relatedness as expected and employed by humans. The natural way to solve this problem is to incorporate additional information, such as explicit human feedback, in order to account for the deviations of the respective semantic relatedness measure from ar X iv :1\n70 5.\n07 42\n5v 2\n[ cs\n.C L\n] 2\n4 M\nay 2\n01 7\nhuman intuition. Furthermore, such feedback could be helpful to adapt semantic relatedness measures to specific domains and tasks or to personalize them in order to improve recommendation approaches or retrieval methods for search engines. Problem Setting and Approach. Consequently, this work addresses the issue of incorporating additional information such as explicit human feedback about semantic relatedness into relatedness measures operating on vector representations of words. To this end, we apply a metric learning approach where we encode the additional information in the form of constraints. This manipulates the original relatedness measure and ultimately yields a better fit with human intuition.\nThere are many domains from which semantic relatedness has been extracted. Thus, we aim to propose a universally applicable approach. To illustrate the flexibility of this method, we apply it to Wikipedia article texts, navigational traces on the Wikipedia page network, and tagging data. To represent words in these application domains we use word embeddings, i.e., low-dimensional, dense vector representations, which reduce the computational complexity of our metric learning approach and have been shown to outperform high-dimensional representations in measuring semantic relatedness [1]. While word embedding approaches have been applied to several Wikipedia domains (texts or navigation) [8, 15, 21], we are, to the best of our knowledge, the first to derive tag embeddings and study the relationship between their dimensionality and their semantic expressiveness.\nIndependent of the domain, we show that our approach can significantly improve the quality of the given semantic relatedness measures. As mentioned earlier we confirm this on different domains by learning from and evaluating on a variety of well known semantic relatedness datasets generated from human intuition. In this context, we study the influence of the amount of information used for learning and investigate if the improved semantic relatedness measures generalize between different human intuition datasets. Contribution. Our contribution is twofold: First, we introduce the metric learning setting (with relative constraints) to the domain of semantic relatedness and \u2014 by exploiting human feedback \u2014 show that it is possible to use metric learning to improve semantic relatedness measures to better fit human intuition. This also opens a new connection for the field of semantic relatedness research to a popular field in machine learning and can lead to another fruitful combination of both. We explicitly show how to adopt the metric learning scenario for our relatedness learning setting. Secondly, we are the first to generate and study embeddings from tagging data, which allows for effectively and efficiently performing metric learning.\nOverall, our work describes a way to improve semantic relatedness measures based on additional semantic information, e.g., explicit human feedback. This enables us to increase the fit of these measures to human intuition significantly and even introduce user-specific information into the corresponding semantics. Our results are of special interest for ontology and search engineers, but also for any other practitioners of Semantic Web techniques. Structure. The rest of this paper is structured as follows: in Section 2, we introduce our approach of learning semantic relatedness using metric learning. In Section 4, we describe the conducted experiments and present the results, which we discuss in Section 5. Section 6 gives an overview of other work related to this paper. Finally, Section 7 concludes this work and gives directions for future research."}, {"heading": "2 Metric Learning to Learn Semantic Relatedness", "text": "In this section, we first formulate the goal of learning semantic relatedness in terms of metric learning. We then argue that the notions of distance and semantic relatedness are equivalent when restricting the setting to a transformed unit sphere. Finally, we introduce our method to formulate human feedback as constraints for the metric learning algorithm we employ. Figure 1 shows a sketch of the steps that we apply in our approach to learn semantic relatedness. Learning Semantic Relatedness in Terms of Metric Learning. To learn a metric, standard metric learning algorithms parameterize the Mahalanobis distance, dM (x, y) = \u221a (x\u2212 y)TM(x\u2212 y), by finding a (symmetric, positive definite) matrix M . To this end, most algorithms expect a set of constraints C. In this work, we apply the LSML algorithm [16], which learns from relative distance constraints of the form C := {(x, x\u2032, y, y\u2032) : d(x, x\u2032) < d(y, y\u2032)} .\nHowever, instead of learning a distance dM (x, y) : Rn \u00d7 Rn \u2192 [0;\u221e) we want to learn a semantic relatedness measure relM (x, y) : Rn \u00d7 Rn \u2192 [\u22121; 1]. Accordingly, instead of formulating constraints based on a distance d, they are based on a relatedness measure rel, i.e., in our case the cosine (cos). Overall, this amounts to learning a symmetric, positive definite matrix M such that the parametrized cosine measure cosM (x, y) := x TMy \u00b7 (\u2016x\u2016M\u2016y\u2016M )\u22121, where \u2016x\u2016M := \u221a xTMx, suffices all constraints C which are derived from human intuition on semantic relatedness (instead of distance). In the following, we show that \u2014 when restricting the setting to a transformed unit sphere \u2014 learning a distance measure and a semantic relatedness measure is equivalent when specifying the constraints correctly. Equivalence of Distance and Relatedness for Metric Learning. In the following, we first show the equivalence of distance and relatedness (as measured by the Mahalanobis metric and the parameterized cosine measure, respectively) on the transformed unit sphere Sn\u22121M := {x \u2208 Rn|\u2016x\u2016M = 1}. This allows us to formulate constraints in a way to learn semantic relatedness.\nFor all vectors on the transformed unit sphere x, y \u2208 Sn\u22121M parametrized by M , the Mahalanobis distance metric and the parameterized cosine measure cosM (x, y)\ncan be expressed as each other. That is, since xTMx = 1 and because of M being symmetric (xTMy = yTMx), it holds that: d2M (x, y) = 2 \u00b7 (1\u2212 cosM (x, y)). This is in line with the intuition that if two words are more closely related, the distance of their vector representations is lower and vice versa. Thus, we can directly apply the metric learning approach to learning semantic relatedness measures on word vectors, if the constraints are correctly specified. To this end, we use the fact that the previous equation trivially implies:\ndM (x, x \u2032) < dM (y, y \u2032)\u21d4 cosM (x, x\u2032) > cosM (y, y\u2032)\nThus, we can formulate the constraints based on a relatedness notion rel instead of a distance d by specifying C := {(x, x\u2032, y, y\u2032) : rel(x, x\u2032) > rel(y, y\u2032)}, i.e., the comparison operator is inverted. Obtaining Relatedness Constraints from Human Feedback. To obtain suitable constraints to train the metric learning algorithm for learning semantic relatedness, we propose to exploit human intuition datasets. Such datasets contain word pairs together with human-assigned relatedness scores (see also Section 3.3) which can be interpreted as explicit human feedback. Formally, such datasets can be expressed as a set H := {(wi, w\u2032i, ri)}, where wi and w\u2032i are words and ri is the human-assigned score which describes an intuitive notion of the degree of relatedness between the two corresponding words. As such relatedness scores are commonly collected in a crowdsourcing task [5, 12], they thus represent explicit human feedback. To obtain constraints in the form (x, x\u2032, y, y\u2032) to use in the metric learning algorithm, one can simply combine all pairs of examples (wi, w \u2032 i, ri), (wj , w \u2032 j , rj) \u2208 H\nwith ri < rj and thus receive a set of relatedness constraints C = { (wi, w \u2032 i, wj , w \u2032 j) }\n. Since we want to emphasize the importance of some constraints in the optimization step of the algorithm, we place higher weights on those constraints to make sure that they are fulfilled. The LSML algorithm allows to assign weights to all constraints. In order to put a high emphasis on a constraint with one very unrelated pair of words, e.g., (wi, w \u2032 i, ri), and another very related pair of words, e.g., (wj , w \u2032 j , rj) with ri rj , we can define the weight of this constraint according to the difference of the respective human relatedness scores of the corresponding word pairs. The extended constraints can then be written as Cweighted := { (wi, w \u2032 i, wj , w \u2032 j , rj \u2212 ri) } . In the remainder of this work, we always employ this kind of weighted constraints."}, {"heading": "3 Datasets", "text": "In this work, use two different kinds of datasets to evaluate our metric learning approach to integrate user feedback to relatedness measures. That is, domain datasets which provide a set of word vectors representing the words to calculate semantic relatedness for, and human intuition datasets (HIDs) which we employ to learn semantic relatedness and to test our results. In the following we first describe two domain datasets containing tagging data from which we later derive tag embeddings. Then we review two domain datasets based on Wikipedia which come with pre-trained word vectors. Finally, we introduce all human intuition datasets containing human-assigned scores of similarities to word pairs."}, {"heading": "3.1 Tagging Datasets to Derive Word Embeddings", "text": "In our work, we study datasets of two public social tagging systems. We use data from BibSonomy, which has a more academic audience. The second dataset is a subset of the Delicious social tagging system, where the audience is focused on design and technical topics.\nEach dataset is restricted to the top 10k tags to reduce noise. Additionally, we only considered those tags from users who have tagged at least 5 resources and only those resources which have been used at least 10 times. We also removed all invalid tags, e.g., containing whitespaces or unreadable symbols.\nBibSonomy. The social tagging system BibSonomy provides users with the possibility to collect bookmarks (links to websites) or references to scientific publications and annotate them with tags [3]. We use a freely available dump of BibSonomy, covering all tagging data from 2006 till the end of 2015.3 After filtering, it contains 10,000 distinct tags, which were assigned by 3,270 users to 49,654 resources in 630,955 assignments.\nDelicious. Like BibSonomy, Delicious is a social tagging system, where users can share their bookmarks and annotate them with tags. We use a freely available dataset from 2011 [33].4 Delicious has been one of the biggest adopters of the tagging paradigm and due to its audience, contains tags about design and technical topics. After filtering, the Delicious dataset contains 10,000 tags, which were assigned by 1,685,506 users to 11,486,080 resources in 626,690,002 assignments."}, {"heading": "3.2 Pre-trained Embedding Datasets Based on Wikipedia", "text": "In order to demonstrate the applicability of our approach on any kind of word embeddings, we also use two publicly available datasets of pre-trained vectors. Both are related to Wikipedia, which has been shown time after time to yield high quality semantic content [8, 13, 20, 23, 25].\nWikiGloVe. The authors of the GloVe embedding algorithm [21] trained several datasets of vector embeddings on various text data and made them publicly available.5 Because it has been demonstrated several times that the textual content of Wikipedia articles can be exploited to calculate semantic relatedness [13, 23], we use the vectors based on Wikipedia as a reference for word embeddings generated from natural language. This dataset consists of 400,000 vectors with dimension 100.\nWikiNav. Wulczyn published a set of word embeddings generated from navigation data on the Wikipedia webpage [30] using Word2Vec [18]. Word2Vec was originally intended to be applied on natural language text, though it can also be applied on navigational paths [8]. While technically the generated embeddings represent pages in Wikipedia, most pages also describe a specific concept and can thus be used interchangeably. It has been shown that exploiting human navigational paths as a source of semantic relatedness yields meaningful results [20, 25, 29]. The dataset at hand consists of 1,828,514 vectors with 100 dimensions. The vector embeddings\n3 http://www.kde.cs.uni-kassel.de/bibsonomy/dumps/ 4 http://www.zubiaga.org/datasets/socialbm0311/ 5 https://nlp.stanford.edu/projects/glove/\nhave been created from all navigation data in the month of January 2017 and are publicly available.6"}, {"heading": "3.3 Human Intuition Datasets (HIDs)", "text": "As a gold standard for semantic relatedness as it is perceived by humans, we use several datasets with human-generated relatedness scores for word pairs, so called human intuition datasets (HIDs). They will provide training as well as test data. In the following, we will describe all used HIDs briefly. Table 1 gives an overview of the dataset sizes and the overlap as well as the Spearman correlation for the matchable pairs for all embedding datasets. WS-353. The WordSimilarity-3537 dataset consists of 353 pairs of English words and names [12]. Each pair was assigned a relatedness value between 0.0 (no relation) and 10.0 (identical meaning) by 16 raters, denoting the assumed common sense semantic relatedness between two words. Finally, the total rating per pair was calculated as the mean of each of the 16 users\u2019 ratings. This way, WS-353 provides a valuable evaluation base for comparing our concept relatedness scores to an established human generated and validated collection of word pairs. MEN. The MEN Test Collection [5] contains 3,000 word pairs together with humanassigned similarity judgments, obtained by crowdsourcing using Amazon Mechanical Turk8. Contrary to WS-353, the similarity judgments are relative rather than absolute. Raters were given two pairs of words at a time and were asked to choose the pair of words was more similar. The score of the chosen pair, i.e., the pair of words that was more similar, was then increased by one. Each pair was rated 50 times, which leads to a score between 0 and 50 for each pair. Bib100. The Bib100 dataset has been created in order to provide a more fitting vocabulary for the more research and computer science oriented tagging data that we investigate.9 It consists of 122 words from the top 3,000 words of the BibSonomy dataset and combined them into 100 word pairs, which subsequently were judged 26 times each for semantic relatedness using crowdsourced scores between 0 (no similarity) and 10 (full similarity).\n6 https://figshare.com/articles/Wikipedia_Vectors/3146878 7 http://www.cs.technion.ac.il/~gabr/resources/data/wordsim353/wordsim353.html 8 http://clic.cimec.unitn.it/~elia.bruni/MEN 9 http://www.dmir.org/datasets/bib100"}, {"heading": "4 Experimental Setup and Results", "text": "In this section, we perform several sets of experiments in order to demonstrate the usefulness of metric learning for learning semantic relatedness. First, we describe how we evaluate the quality of a learned semantic relatedness measure. Then we study the procedure of generating word embeddings from tagging data and perform a qualitative evaluation. Finally, we train several metrics on a range of domains considering different amounts of user feedback, investigate whether it is possible to transport trained semantic knowledge across different collections of user feedback and finally assess the robustness of the learned semantic relatedness measures. We publish our code to enable reproducibility of our experiments.10"}, {"heading": "4.1 Evaluating the Quality of Semantic Relatedness Measures", "text": "Most of the time, the quality of semantic relatedness measures is assessed by how well it fits human intuition [13, 18, 25]. Human intuition is collected in Human Intuition Datasets (HID) as introduced in Section 3.3. The most widely-used method to evaluate semantic relatedness on such datasets is the Spearman rank correlation coefficient which compares the ranking of word pairs given by a HID with the ranking implied by the semantic relatedness measure. While there exist other evaluation approaches like analogy matching [15, 18] or concept categorization [1], they do not fit our setting, because we exclusively want to improve measuring relatedness."}, {"heading": "4.2 Word Embeddings from Tagging Data", "text": "We evaluate our approach on several domains. This includes semantic relatedness extracted from tagging data. However, vector representations of words extracted from tagging data are traditionally high-dimensional [6, 17], making metric learning in this domain infeasible due to a more than quadratic runtime with regard to the number of vector dimensions [16]. Thus, similar to our Wikipedia examples we employ the notion of (low-dimensional) word embeddings which have been shown to outperform their high-dimensional counterparts in terms of correlation with human intuition of semantic relatedness [1]. This can also be confirmed when using tagging data as input (see Table 2, cf. \u03c1high vs. \u03c1emb). In this section, we justify our choice of using GloVe to embed words based on tagging data and study the influence of dimensionality on the respective semantic content. Choosing an Embedding Algorithm. In this work, we apply the GloVe algorithm [21], which learns word embeddings from a word co-occurrence matrix. Other candidates are the well-known Word2Vec approach by [18] and the LINE algorithm [26]. However, Word2Vec relies on the meaningfulness of the sequential order of words which is not available from tagging data. LINE \u2014 which learns node embeddings preserving the first and second order neighborhood of the nodes in the graph \u2014 is more applicable. However, we found that it has a tendency to perform even worse than standard high dimensional representation for calculating semantic relatedness. Thus, overall we only report results on GloVe, since it was directly applicable to tagging data and showed the best results in our experiments.\n10 http://dmir.org/semmele\nEmbedding Dimension. One decision to make when generating word embeddings is choosing their dimension: We want the number of dimensions to be small to reduce the complexity of the metric learning approach, but it needs to be large enough to encode the necessary semantic information. In order to find a good embedding representation of the tags, we experimented with the dimension of the generated vector embeddings on the Delicious and BibSonomy tagging data measuring semantic relatedness using the standard cosine measure. Due to the internal random initialization of GloVe, we ran the vector embedding generation process 10 times for each number of dimensions in order to study the corresponding standard deviations.\nThe results for both experiments are shown in Figure 2. For BibSonomy the influence of the random initialization of GloVe on the semantic content of the vectors decreases with increasing dimensionality, as indicated by the error bars. For the larger and denser Delicious dataset, there is less room for the random initialization to influence the results. This explains the hardly visible standard deviations. With regard to the semantic content of the embeddings, the increase in semantic quality settles around a dimension of 100 for BibSonomy. For Delicious, adding more dimensions keeps increasing the semantic content. However, the 100 mark also signifies a drastic inhibition of the growth-rate. Thus, considering the quadratic training complexity of the LSML algorithm in terms of vector space dimension, we decided\nto perform all of the following experiments on tagging data with 100-dimensional embeddings."}, {"heading": "4.3 Integrating Different Levels of User Intentions", "text": "In this section we investigate how the amount of human feedback used for training influences the quality of the learned semantic relatedness measure. To this end, we evaluate various training set sizes extracted from the HIDs on the different embedding sets (pre-trained or extracted by GloVe, cf., Section 3).\nFor each HID, we first randomly sampled 20% of all matchable pairs as test sets. We gathered 5 such test datasets. For each test set, we sample training sets of different sizes (10% - 100%) on which we train a metric each. This metric is evaluated on the 20% of previously sampled test data. We repeat sampling training sets and learning 25 times. Then, for each training set size, we take the mean and the standard deviation over all experiments. As a baseline, we also report the Spearman correlation using the pure cosine measure on the test datasets. Figure 3 shows that we can indeed inject user feedback information about semantic relatedness into our\nrelatedness measure. The results indicate that we can best learn semantic relatedness with the human intuition encoded in the MEN dataset. This is consistent across all datasets except the BibSonomy embeddings. While it is also sometimes possible to use the knowledge from the WS-353 dataset to improve our semantic relatedness measure, it does not improve results as much as knowledge from other human intuition datasets. On the Delicious embeddings, it even decreases performance to learn from WS-353 knowledge. Surprisingly, while the Bib100 dataset yields the best results on the BibSonomy embeddings using the plain cosine measure, we cannot exploit the contained knowledge enough to learn semantic relatedness from it. Also, across all four embedding sets, the Bib100 dataset shows the biggest variance of results, while the standard deviation of the MEN dataset results are tightly bounded. We can generally observe that using vectors from WikiGloVe for training seems to be beneficial for our approach, as we can always improve the fit of our measure to human intuition significantly, regardless of the choice of training data."}, {"heading": "4.4 Transporting User Intentions", "text": "The previous experiments showed that the integration of a dedicated HID into a relatedness measure results in higher agreement of the measure with human intuition. Now, in order to transfer different user intentions across different settings, we trained metrics on one complete HID and evaluated them on a different HID. For example, training was done using all WS-353 relations but the metric was evaluated on the MEN HID. By this we evaluate if the learned knowledge generalizes from one notion of semantic relatedness (represented by a specific HID) to another.\nResults are given in Table 3. For each line, its header defines the dataset on which the metric was trained, while the column header is the dataset on which the trained metric was then evaluated. In each cell, the first value denotes the Spearman correlation of the cosine measure with the human relatedness scores in the evaluation dataset. The second value is the Spearman correlation of the relatedness scores calculated from the trained metric with the human relatedness scores in the evaluation dataset. Depending on whether the trained metric increased or decreased correlation with human intuition, we depict upwards or downwards arrows.\nFrom Table 3, we can see some interesting results: Generally, training a metric on BibSonomy embeddings almost always yields bad transfer results. The only improvement using BibSonomy embeddings is on the WS-353 dataset, when evaluating the metric trained on MEN. The Delicious embeddings are only useful for improving relatedness scores when the trained metric is evaluated on the MEN dataset. The most interesting part of these results is that, using WikiGloVe embeddings, we can always increase correlation with human intuition by a notable margin. However, on the WikiNav embeddings, the results differ only by smaller margins. The only exception here is a notable improvement on the Spearman correlation value of WS353, when using a metric trained on MEN data. Overall, it is generally possible to transfer knowledge from one HID to another. However, this is highly dependent on the underlying word representations."}, {"heading": "4.5 Robustness of the Learned Semantic Relatedness Measure", "text": "Here we inject wrong semantic relatedness information into our learning process. The goal is to show that i) wrong ratings do not collapse the relatedness measures, which ultimately makes our approach robust for different users with different intuitions of relatedness, and ii) that the promising results of the previous experiments are indeed caused by the successful injection of user feedback.\nThe setup is the same as with the random sampling experiment (Section 4.3), except that we randomly reassign the relatedness scores of the training pairs. This way, we evaluate on valid human intuition, but learn from false information. In Figure 4, we can see that shuffled relatedness scores exhibit a negative influence on the learned metric relatedness measure, as expected. On BibSonomy embeddings, only the measures trained on the MEN dataset yielded increasingly bad results, while the measures trained on the Bib100 or WS-353 datasets did not change very much, though they did not improve correlation either. All measures trained on Delicious embeddings dropped in performance. WS-353-trained measures stayed bad and showed even worse results, Bib100-trained measures also decreased in performance. Most notably, all embedding datasets except BibSonomy seem to be very receptive for changes induced by MEN relations: While performance increased in the first experiment, here, it decreased by a notable margin. Nevertheless, the decrease of all tested measures is mitigated by the inherent semantic content of the embeddings. Overall, this shows the robustness as well as the consistency of our approach, as was the goal of this experiment."}, {"heading": "5 Discussion of the Results", "text": "Integrating Different Amounts of User Feedback. It can be seen that in the random sampling experiments, the information in the MEN dataset is generally best\nsuited to learn semantic relatedness. While this might be due to its big size, it might also be due to this dataset was created11: Using crowdsourcing, each human worker was shown two pairs of words and had to determine which of both pairs is more related. The higher a word pair in MEN is rated, the more often it was considered more related than the other one that was given. Our approach exploits very similar constraints for learning. Keeping this explanation in mind, we are able to give a recommendation on how to gather human feedback in order to learn semantic relatedness with our method. The bad performance of MEN on the BibSonomy embeddings, both with the baseline and the metric, could be attributed to the very low overlap of the BibSonomy vocabulary and the MEN pairs (see Table 1) as well as the small size of the BibSonomy tagging data. On all other embedding datasets, where MEN is very useful to learn the metric, the pair overlap is notably higher. Throughout all settings in this experiment, we observed that using more data results in better relatedness scores, if there was a positive effect.\nTransporting User Intentions. The most notable result here is that knowledge transfer from one HID to another works best and with large improvements on the WikiGloVe embeddings. These embeddings are generated from the by far biggest\n11 https://staff.fnwi.uva.nl/e.bruni/MEN\nword collections, i.e., the Wikipedia of 2014 as well as the Gigaword5 corpus.12 It thus seems plausible that the embedding vectors encode a large portion of the semantic information of the underlying corpus and thus benefit most from the injected knowledge in our approach. It also shows that we are able to adapt the metric and transfer the knowledge if the vectors representations contain all necessary information. This is also in line with the notion that BibSonomy is the smallest corpus in our collection, which seems too sparse to properly learn semantic relatedness. Table 3a shows almost only deteriorating correlation scores when applying a learned relatedness measure, except for the MEN-trained measure evaluated on WS-353. Finally, results on WikiNav do not change very much, except when training the measure on MEN and evaluating it on WS-353, which is a similar phenomenon as on the BibSonomy embeddings.\nRobustness. On all four embedding datasets, evaluation performance decreases notably with the MEN dataset, with the worst performance loss on BibSonomy, where MEN does not perform well anyway. We observe similar responses on WikiGloVe. These results confirm (again) that word embeddings successfully manage to encode semantic information, and also that we cannot just \u201cunlearn\u201d it. Furthermore, all embedding sets except BibSonomy react the most when used with a measure trained on MEN. We attribute this to the same reasons as why MEN is seemingly best suited to learn semantic relations from, i.e., it is constructed in a very similar way to the form of the constraints that the learning algorithm is parameterized with. Another consequence of this is that the promising results of the previous experiments are indeed caused by the successful injection of semantic side information into the relatedness measure.\nAdditional remarks. We are well aware that with our current set of vector embeddings, we do not improve upon the current state-of-the-art evaluation results on WS-353 and MEN. However, this was not our goal in this work, as we wanted to demonstrate the feasibility of our metric learning approach to inject prior knowledge from human feedback into a semantic relatedness measure."}, {"heading": "6 Related Work", "text": "In the following, we will report the most relevant work in these fields of metric learning as well as semantic relatedness learning algorithms.\nMetric Learning. Since we focus on the adaptation of metric learning on semantic relatedness constraints, we give a short overview of different types of metric learning algorithms. Metric learning algorithms can be roughly split in two classes according to the nature of the exploited constraints.\nThe first class of metric learning algorithms utilizes link-based constraints, i.e., we have explicit information if two items are either similar or dissimilar. As one of the first to propose an approach to learn a distance metric, Xing et al. [31] proposed to parameterize the Euclidean metric with a Mahalanobis matrix M in order to improve kNN clusterings by incorporating side knowledge. Weinberger et al. [28] presented the LMNN algorithm, which aims to improve kNN clustering by placing\n12 https://nlp.stanford.edu/projects/glove/\nitems with similar classes near to each other, while pushing away items with different classes by a large margin. The metric learning algorithm proposed in [9] makes use of quadruplets (x, x\u2032, y, y\u2032) and distance constraints u and l. These parameters can be translated to constraints d(x, x\u2032) > u and d(y, y\u2032) < l. While the form of the constraints seems very similar to those of our approach, the constraints still only encode two classes of similar and dissimilar items. Finally, Qamar and Gaussier [22] propose an algorithm to learn a generalized cosine measure to improve kNN classification. This approach is similar to ours, as we also learn a generalized cosine measure, but their algorithm again exploits similarity and dissimilarity constraints with a large margin.\nThe other class of metric learning algorithms is based on relative constraints, e.g., for three items x, y, z, a constraint could be x is more similar to y than x to z. This setting is much more in line with the idea of actually measuring a continuous degree of relatedness instead of a preprocessing step for classification or clustering. In [24], Schultz and Joachims propose an early distance metric learning approach based on Ranking Support Vector Machines. Their algorithm takes sets of triplets (xi, xj , xk) which encode the constraints d(xi, xj) < d(xi, xk), i.e., xi is more similar to xj than to xk. These constraints are extracted from clickthrough data, where explicit preference information of a list of items compared to a reference item is available. This is however not the case in our scenario, as our constraints are based on distance comparisons between four different items instead of only three. The algorithm proposed in [16] makes use of relative distance comparisons encoded in quadruplets (x, x\u2032, y, y\u2032), which encode relative comparisons d(x, x\u2032) < d(y, y\u2032) without a separation margin, in order to learn a metric. This is a more general approach than the one provided by [24], as it is easy to convert triplet constraints to quadruplet constraints, but not the other way round. Learning Semantic Relatedness. While the task to correctly determine the semantic relatedness of words or texts has been around for a long time, there are still few approaches which actually learn semantic relatedness.\nLately, many unsupervised approaches to learn semantic relatedness in low dimensions have been proposed. These methods are also often called word embedding algorithms. Such methods train a model to predict a word from a given context [2, 7, 18, 26]. Other embedding methods focus on factorizing a term-document matrix [10, 21]. These methods all have in common that they do not inject any external knowledge. Anyhow, [1] showed that all those methods generally exhibit a notably higher correlation with human intuition than the standard high-dimensional vector representations proposed by [27].\nBridging the gap between unsupervised relatedness learning approach and human intuition by injecting side knowledge can be accomplished with post-processing methods or with directly injecting this knowledge in the embedding process. Both [14] and [19] propose approaches to inject synonymy and, in the case of the latter, also antonymy constraints into semantic vector representations. They aim to maximize the similarity of synonymous words, while minimizing the similarity of antonyms. Hereby, synonymy constraints acted as attractors in the semantic vector space, while the antonymy constraints acted as repellants. [11] presented a method to fit the embedding vectors to the neighborhood defined by relations in semantic lexicons. In a way, also this algorithm is based on similarity constraints, as the\ndistance between similar vectors is minimized. However, all of these works did not incorporate the actual degree of relatedness into their approaches, which is what we do in this work. There also exist methods which incorporate side knowledge directly into the embedding process, e.g., [4, 32]. However, our metric learning approach works on any already existing set of vector embeddings instead of actually training new word embeddings from raw data."}, {"heading": "7 Conclusion", "text": "In this work, we presented an approach to learn semantic relatedness from human intuition based on word embeddings. Our approach is scalable and fast in terms of constraints and produces significantly improved results compared to the widely used cosine measure, while yielding competitive results on human evaluation datasets. We argued for the use of word embeddings instead of high-dimensional vector representations for tagging data due to an improvement in their semantic content and their clear reduction of computational complexity when learning a metric.\nConcretely, we could show that we can exploit semantic relatedness information from HIDs to more realistically assess semantic relatedness, regardless of the underlying embedding dataset. Aditionally, we were able to encode and transfer knowledge from one HID to another, sometimes with a very large increase of correlation with human intuition. When training a metric on false information to assess the robustness of our approach, we argued that this actually supports our results, as the algorithm yields negative results, as we expected. Transferred to our previous positive results, we are indeed able to inject valid knowledge into our relatedness measure to produce a better fit to human intuition than only with word embeddings.\nFuture work includes the exploration of other graph embedding algorithms for tagging data, the exploration of crowdsourcing strategies to best gather data suitable for metric learning and further adaptation of metric learning algorithms to specific properties of social tagging systems. Acknowledgements. This work has been partially funded by the DFG grant \u201cPosts II\u201d and the BMBF funded junior research group \u201cCLiGS\u201d (grant identifier FKZ 01UG1408)."}], "references": [{"title": "Don\u2019t count, predict! A systematic comparison of context-counting vs. context-predicting semantic vectors.", "author": ["Marco Baroni", "Gerorgiana Dinu", "German Kruszewski"], "venue": null, "citeRegEx": "1", "shortCiteRegEx": "1", "year": 2014}, {"title": "A neural probabilistic language model.", "author": ["Yoshua Bengio"], "venue": "JMLR", "citeRegEx": "2", "shortCiteRegEx": "2", "year": 2003}, {"title": "The Social Bookmark and Publication Management System BibSonomy.", "author": ["Dominik Benz"], "venue": null, "citeRegEx": "3", "shortCiteRegEx": "3", "year": 2010}, {"title": "Knowledge-powered deep learning for word embedding.", "author": ["Jiang Bian", "Bin Gao", "Tie-Yan Liu"], "venue": "ECML/PKDD", "citeRegEx": "4", "shortCiteRegEx": "4", "year": 2014}, {"title": "Multimodal Distributional Semantics.", "author": ["Elia Bruni", "Nam-Khanh Tran", "Marco Baroni"], "venue": "JAIR", "citeRegEx": "5", "shortCiteRegEx": "5", "year": 2014}, {"title": "Semantic Grounding of Tag Relatedness in Social Bookmarking Systems.", "author": ["Ciro Cattuto"], "venue": "ISWC", "citeRegEx": "6", "shortCiteRegEx": "6", "year": 2008}, {"title": "A Unified Architecture for Natural Language Processing: Deep Neural Networks with Multitask Learning.", "author": ["Ronan Collobert", "Jason Weston"], "venue": null, "citeRegEx": "7", "shortCiteRegEx": "7", "year": 2008}, {"title": "Extracting Semantics from Random Walks on Wikipedia: Comparing learning and counting methods.", "author": ["Alexander Dallmann"], "venue": "WikiWorkshop@ICWSM", "citeRegEx": "8", "shortCiteRegEx": "8", "year": 2016}, {"title": "Information-theoretic metric learning.", "author": ["Jason V. Davis"], "venue": "In: ICML", "citeRegEx": "9", "shortCiteRegEx": "9", "year": 2007}, {"title": "Indexing by latent semantic analysis.", "author": ["Scott Deerwester"], "venue": "Journal of the American Society for Information Science", "citeRegEx": "10", "shortCiteRegEx": "10", "year": 1990}, {"title": "Retrofitting Word Vectors to Semantic Lexicons.", "author": ["Manaal Faruqui"], "venue": "CoRR", "citeRegEx": "11", "shortCiteRegEx": "11", "year": 2014}, {"title": "Placing Search in Context: the Concept Revisited.", "author": ["Lev Finkelstein"], "venue": null, "citeRegEx": "12", "shortCiteRegEx": "12", "year": 2001}, {"title": "Computing semantic relatedness using Wikipedia-based explicit semantic analysis.", "author": ["Evgeniy Gabrilovich", "Shaul Markovitch"], "venue": null, "citeRegEx": "13", "shortCiteRegEx": "13", "year": 2007}, {"title": "Large-scale Learning of Word Relatedness with Constraints.", "author": ["Guy Halawi"], "venue": "In: KDD", "citeRegEx": "14", "shortCiteRegEx": "14", "year": 2012}, {"title": "Linguistic Regularities in Sparse and Explicit Word Representations.", "author": ["Omer Levy", "Yoav Goldberg", "Israel Ramat-Gan"], "venue": null, "citeRegEx": "15", "shortCiteRegEx": "15", "year": 2014}, {"title": "Metric Learning from Relative Comparisons by Minimizing Squared Residual.", "author": ["E.Y. Liu"], "venue": null, "citeRegEx": "16", "shortCiteRegEx": "16", "year": 2012}, {"title": "Evaluating Similarity Measures for Emergent Semantics of Social Tagging.", "author": ["Benjamin Markines"], "venue": null, "citeRegEx": "17", "shortCiteRegEx": "17", "year": 2009}, {"title": "Distributed Representations of Words and Phrases and their Compositionality.", "author": ["Tomas Mikolov"], "venue": null, "citeRegEx": "18", "shortCiteRegEx": "18", "year": 2013}, {"title": "Counter-fitting Word Vectors to Linguistic Constraints.", "author": ["Nikola Mrk\u0161i\u0107"], "venue": "HLT-NAACL", "citeRegEx": "19", "shortCiteRegEx": "19", "year": 2016}, {"title": "Extracting Semantics from Unconstrained Navigation on Wikipedia.", "author": ["Thomas Niebler"], "venue": "KI - Ku\u0308nstliche Intelligenz", "citeRegEx": "20", "shortCiteRegEx": "20", "year": 2015}, {"title": "Glove: Global Vectors for Word Representation.", "author": ["Jeffrey Pennington", "Richard Socher", "Christopher D Manning"], "venue": "In: EMNLP. Vol", "citeRegEx": "21", "shortCiteRegEx": "21", "year": 2014}, {"title": "Online and batch learning of generalized cosine similarities.", "author": ["Ali Mustafa Qamar", "Eric Gaussier"], "venue": "ICDM", "citeRegEx": "22", "shortCiteRegEx": "22", "year": 2009}, {"title": "A Word at a Time: Computing Word Relatedness Using Temporal Semantic Analysis.", "author": ["Kira Radinsky"], "venue": null, "citeRegEx": "23", "shortCiteRegEx": "23", "year": 2011}, {"title": "Learning a distance metric from relative comparisons.", "author": ["Matthew Schultz", "Thorsten Joachims"], "venue": null, "citeRegEx": "24", "shortCiteRegEx": "24", "year": 2004}, {"title": "Computing Semantic Relatedness from Human Navigational Paths: A Case Study on Wikipedia.", "author": ["Philipp Singer"], "venue": "IJSWIS", "citeRegEx": "25", "shortCiteRegEx": "25", "year": 2013}, {"title": "LINE: Large-scale Information Network Embedding.", "author": ["Jian Tang"], "venue": null, "citeRegEx": "26", "shortCiteRegEx": "26", "year": 2015}, {"title": "From Frequency to Meaning: Vector Space Models of Semantics.", "author": ["Peter D. Turney", "Patrick Pantel"], "venue": "In: J. Artif. Int. Res", "citeRegEx": "27", "shortCiteRegEx": "27", "year": 2010}, {"title": "Distance Metric Learning for Large Margin Nearest Neighbor Classification.", "author": ["Kilian Q. Weinberger", "Lawrence K. Saul"], "venue": null, "citeRegEx": "28", "shortCiteRegEx": "28", "year": 2009}, {"title": "Wikispeedia: an online game for inferring semantic distances between concepts.", "author": ["Robert West", "Joelle Pineau", "Doina Precup"], "venue": null, "citeRegEx": "29", "shortCiteRegEx": "29", "year": 2009}, {"title": "Distance metric learning with application to clustering with side-information.", "author": ["Eric P Xing"], "venue": null, "citeRegEx": "31", "shortCiteRegEx": "31", "year": 2003}, {"title": "Improving Lexical Embeddings with Semantic Knowledge.", "author": ["Mo Yu", "Mark Dredze"], "venue": null, "citeRegEx": "32", "shortCiteRegEx": "32", "year": 2014}, {"title": "Harnessing Folksonomies to Produce a Social Classification of Resources.", "author": ["Arkaitz Zubiaga"], "venue": "IEEE Trans. on Knowl. and Data Eng", "citeRegEx": "33", "shortCiteRegEx": "33", "year": 2013}], "referenceMentions": [{"referenceID": 5, "context": "Recent work has shown that semantic relatedness between words can successfully be extracted from a wide range of sources, such as tagging data [6, 17], Wikipedia article texts [13, 23] or Wikipedia navigation [20, 25].", "startOffset": 143, "endOffset": 150}, {"referenceID": 16, "context": "Recent work has shown that semantic relatedness between words can successfully be extracted from a wide range of sources, such as tagging data [6, 17], Wikipedia article texts [13, 23] or Wikipedia navigation [20, 25].", "startOffset": 143, "endOffset": 150}, {"referenceID": 12, "context": "Recent work has shown that semantic relatedness between words can successfully be extracted from a wide range of sources, such as tagging data [6, 17], Wikipedia article texts [13, 23] or Wikipedia navigation [20, 25].", "startOffset": 176, "endOffset": 184}, {"referenceID": 22, "context": "Recent work has shown that semantic relatedness between words can successfully be extracted from a wide range of sources, such as tagging data [6, 17], Wikipedia article texts [13, 23] or Wikipedia navigation [20, 25].", "startOffset": 176, "endOffset": 184}, {"referenceID": 19, "context": "Recent work has shown that semantic relatedness between words can successfully be extracted from a wide range of sources, such as tagging data [6, 17], Wikipedia article texts [13, 23] or Wikipedia navigation [20, 25].", "startOffset": 209, "endOffset": 217}, {"referenceID": 24, "context": "Recent work has shown that semantic relatedness between words can successfully be extracted from a wide range of sources, such as tagging data [6, 17], Wikipedia article texts [13, 23] or Wikipedia navigation [20, 25].", "startOffset": 209, "endOffset": 217}, {"referenceID": 26, "context": "In particular, such approaches usually encode semantic information of words in continuous word vectors [27].", "startOffset": 103, "endOffset": 107}, {"referenceID": 0, "context": ", low-dimensional, dense vector representations, which reduce the computational complexity of our metric learning approach and have been shown to outperform high-dimensional representations in measuring semantic relatedness [1].", "startOffset": 224, "endOffset": 227}, {"referenceID": 7, "context": "While word embedding approaches have been applied to several Wikipedia domains (texts or navigation) [8, 15, 21], we are, to the best of our knowledge, the first to derive tag embeddings and study the relationship between their dimensionality and their semantic expressiveness.", "startOffset": 101, "endOffset": 112}, {"referenceID": 14, "context": "While word embedding approaches have been applied to several Wikipedia domains (texts or navigation) [8, 15, 21], we are, to the best of our knowledge, the first to derive tag embeddings and study the relationship between their dimensionality and their semantic expressiveness.", "startOffset": 101, "endOffset": 112}, {"referenceID": 20, "context": "While word embedding approaches have been applied to several Wikipedia domains (texts or navigation) [8, 15, 21], we are, to the best of our knowledge, the first to derive tag embeddings and study the relationship between their dimensionality and their semantic expressiveness.", "startOffset": 101, "endOffset": 112}, {"referenceID": 15, "context": "In this work, we apply the LSML algorithm [16], which learns from relative distance constraints of the form C := {(x, x\u2032, y, y\u2032) : d(x, x\u2032) < d(y, y\u2032)} .", "startOffset": 42, "endOffset": 46}, {"referenceID": 4, "context": "As such relatedness scores are commonly collected in a crowdsourcing task [5, 12], they thus represent explicit human feedback.", "startOffset": 74, "endOffset": 81}, {"referenceID": 11, "context": "As such relatedness scores are commonly collected in a crowdsourcing task [5, 12], they thus represent explicit human feedback.", "startOffset": 74, "endOffset": 81}, {"referenceID": 2, "context": "The social tagging system BibSonomy provides users with the possibility to collect bookmarks (links to websites) or references to scientific publications and annotate them with tags [3].", "startOffset": 182, "endOffset": 185}, {"referenceID": 31, "context": "We use a freely available dataset from 2011 [33].", "startOffset": 44, "endOffset": 48}, {"referenceID": 7, "context": "Both are related to Wikipedia, which has been shown time after time to yield high quality semantic content [8, 13, 20, 23, 25].", "startOffset": 107, "endOffset": 126}, {"referenceID": 12, "context": "Both are related to Wikipedia, which has been shown time after time to yield high quality semantic content [8, 13, 20, 23, 25].", "startOffset": 107, "endOffset": 126}, {"referenceID": 19, "context": "Both are related to Wikipedia, which has been shown time after time to yield high quality semantic content [8, 13, 20, 23, 25].", "startOffset": 107, "endOffset": 126}, {"referenceID": 22, "context": "Both are related to Wikipedia, which has been shown time after time to yield high quality semantic content [8, 13, 20, 23, 25].", "startOffset": 107, "endOffset": 126}, {"referenceID": 24, "context": "Both are related to Wikipedia, which has been shown time after time to yield high quality semantic content [8, 13, 20, 23, 25].", "startOffset": 107, "endOffset": 126}, {"referenceID": 20, "context": "The authors of the GloVe embedding algorithm [21] trained several datasets of vector embeddings on various text data and made them publicly available.", "startOffset": 45, "endOffset": 49}, {"referenceID": 12, "context": "Because it has been demonstrated several times that the textual content of Wikipedia articles can be exploited to calculate semantic relatedness [13, 23], we use the vectors based on Wikipedia as a reference for word embeddings generated from natural language.", "startOffset": 145, "endOffset": 153}, {"referenceID": 22, "context": "Because it has been demonstrated several times that the textual content of Wikipedia articles can be exploited to calculate semantic relatedness [13, 23], we use the vectors based on Wikipedia as a reference for word embeddings generated from natural language.", "startOffset": 145, "endOffset": 153}, {"referenceID": 17, "context": "Wulczyn published a set of word embeddings generated from navigation data on the Wikipedia webpage [30] using Word2Vec [18].", "startOffset": 119, "endOffset": 123}, {"referenceID": 7, "context": "Word2Vec was originally intended to be applied on natural language text, though it can also be applied on navigational paths [8].", "startOffset": 125, "endOffset": 128}, {"referenceID": 19, "context": "It has been shown that exploiting human navigational paths as a source of semantic relatedness yields meaningful results [20, 25, 29].", "startOffset": 121, "endOffset": 133}, {"referenceID": 24, "context": "It has been shown that exploiting human navigational paths as a source of semantic relatedness yields meaningful results [20, 25, 29].", "startOffset": 121, "endOffset": 133}, {"referenceID": 28, "context": "It has been shown that exploiting human navigational paths as a source of semantic relatedness yields meaningful results [20, 25, 29].", "startOffset": 121, "endOffset": 133}, {"referenceID": 11, "context": "The WordSimilarity-353 dataset consists of 353 pairs of English words and names [12].", "startOffset": 80, "endOffset": 84}, {"referenceID": 4, "context": "The MEN Test Collection [5] contains 3,000 word pairs together with humanassigned similarity judgments, obtained by crowdsourcing using Amazon Mechanical Turk.", "startOffset": 24, "endOffset": 27}, {"referenceID": 12, "context": "Most of the time, the quality of semantic relatedness measures is assessed by how well it fits human intuition [13, 18, 25].", "startOffset": 111, "endOffset": 123}, {"referenceID": 17, "context": "Most of the time, the quality of semantic relatedness measures is assessed by how well it fits human intuition [13, 18, 25].", "startOffset": 111, "endOffset": 123}, {"referenceID": 24, "context": "Most of the time, the quality of semantic relatedness measures is assessed by how well it fits human intuition [13, 18, 25].", "startOffset": 111, "endOffset": 123}, {"referenceID": 14, "context": "While there exist other evaluation approaches like analogy matching [15, 18] or concept categorization [1], they do not fit our setting, because we exclusively want to improve measuring relatedness.", "startOffset": 68, "endOffset": 76}, {"referenceID": 17, "context": "While there exist other evaluation approaches like analogy matching [15, 18] or concept categorization [1], they do not fit our setting, because we exclusively want to improve measuring relatedness.", "startOffset": 68, "endOffset": 76}, {"referenceID": 0, "context": "While there exist other evaluation approaches like analogy matching [15, 18] or concept categorization [1], they do not fit our setting, because we exclusively want to improve measuring relatedness.", "startOffset": 103, "endOffset": 106}, {"referenceID": 5, "context": "However, vector representations of words extracted from tagging data are traditionally high-dimensional [6, 17], making metric learning in this domain infeasible due to a more than quadratic runtime with regard to the number of vector dimensions [16].", "startOffset": 104, "endOffset": 111}, {"referenceID": 16, "context": "However, vector representations of words extracted from tagging data are traditionally high-dimensional [6, 17], making metric learning in this domain infeasible due to a more than quadratic runtime with regard to the number of vector dimensions [16].", "startOffset": 104, "endOffset": 111}, {"referenceID": 15, "context": "However, vector representations of words extracted from tagging data are traditionally high-dimensional [6, 17], making metric learning in this domain infeasible due to a more than quadratic runtime with regard to the number of vector dimensions [16].", "startOffset": 246, "endOffset": 250}, {"referenceID": 0, "context": "Thus, similar to our Wikipedia examples we employ the notion of (low-dimensional) word embeddings which have been shown to outperform their high-dimensional counterparts in terms of correlation with human intuition of semantic relatedness [1].", "startOffset": 239, "endOffset": 242}, {"referenceID": 20, "context": "In this work, we apply the GloVe algorithm [21], which learns word embeddings from a word co-occurrence matrix.", "startOffset": 43, "endOffset": 47}, {"referenceID": 17, "context": "Other candidates are the well-known Word2Vec approach by [18] and the LINE algorithm [26].", "startOffset": 57, "endOffset": 61}, {"referenceID": 25, "context": "Other candidates are the well-known Word2Vec approach by [18] and the LINE algorithm [26].", "startOffset": 85, "endOffset": 89}, {"referenceID": 29, "context": "[31] proposed to parameterize the Euclidean metric with a Mahalanobis matrix M in order to improve kNN clusterings by incorporating side knowledge.", "startOffset": 0, "endOffset": 4}, {"referenceID": 27, "context": "[28] presented the LMNN algorithm, which aims to improve kNN clustering by placing", "startOffset": 0, "endOffset": 4}, {"referenceID": 8, "context": "The metric learning algorithm proposed in [9] makes use of quadruplets (x, x\u2032, y, y\u2032) and distance constraints u and l.", "startOffset": 42, "endOffset": 45}, {"referenceID": 21, "context": "Finally, Qamar and Gaussier [22] propose an algorithm to learn a generalized cosine measure to improve kNN classification.", "startOffset": 28, "endOffset": 32}, {"referenceID": 23, "context": "In [24], Schultz and Joachims propose an early distance metric learning approach based on Ranking Support Vector Machines.", "startOffset": 3, "endOffset": 7}, {"referenceID": 15, "context": "The algorithm proposed in [16] makes use of relative distance comparisons encoded in quadruplets (x, x\u2032, y, y\u2032), which encode relative comparisons d(x, x\u2032) < d(y, y\u2032) without a separation margin, in order to learn a metric.", "startOffset": 26, "endOffset": 30}, {"referenceID": 23, "context": "This is a more general approach than the one provided by [24], as it is easy to convert triplet constraints to quadruplet constraints, but not the other way round.", "startOffset": 57, "endOffset": 61}, {"referenceID": 1, "context": "Such methods train a model to predict a word from a given context [2, 7, 18, 26].", "startOffset": 66, "endOffset": 80}, {"referenceID": 6, "context": "Such methods train a model to predict a word from a given context [2, 7, 18, 26].", "startOffset": 66, "endOffset": 80}, {"referenceID": 17, "context": "Such methods train a model to predict a word from a given context [2, 7, 18, 26].", "startOffset": 66, "endOffset": 80}, {"referenceID": 25, "context": "Such methods train a model to predict a word from a given context [2, 7, 18, 26].", "startOffset": 66, "endOffset": 80}, {"referenceID": 9, "context": "Other embedding methods focus on factorizing a term-document matrix [10, 21].", "startOffset": 68, "endOffset": 76}, {"referenceID": 20, "context": "Other embedding methods focus on factorizing a term-document matrix [10, 21].", "startOffset": 68, "endOffset": 76}, {"referenceID": 0, "context": "Anyhow, [1] showed that all those methods generally exhibit a notably higher correlation with human intuition than the standard high-dimensional vector representations proposed by [27].", "startOffset": 8, "endOffset": 11}, {"referenceID": 26, "context": "Anyhow, [1] showed that all those methods generally exhibit a notably higher correlation with human intuition than the standard high-dimensional vector representations proposed by [27].", "startOffset": 180, "endOffset": 184}, {"referenceID": 13, "context": "Both [14] and [19] propose approaches to inject synonymy and, in the case of the latter, also antonymy constraints into semantic vector representations.", "startOffset": 5, "endOffset": 9}, {"referenceID": 18, "context": "Both [14] and [19] propose approaches to inject synonymy and, in the case of the latter, also antonymy constraints into semantic vector representations.", "startOffset": 14, "endOffset": 18}, {"referenceID": 10, "context": "[11] presented a method to fit the embedding vectors to the neighborhood defined by relations in semantic lexicons.", "startOffset": 0, "endOffset": 4}, {"referenceID": 3, "context": ", [4, 32].", "startOffset": 2, "endOffset": 9}, {"referenceID": 30, "context": ", [4, 32].", "startOffset": 2, "endOffset": 9}], "year": 2017, "abstractText": "Assessing the degree of semantic relatedness between words is an important task with a variety of semantic applications, such as ontology learning for the Semantic Web, semantic search or query expansion. To accomplish this in an automated fashion, many relatedness measures have been proposed. However, most of these metrics only encode information contained in the underlying corpus and thus do not directly model human intuition. To solve this, we propose to utilize a metric learning approach to improve existing semantic relatedness measures by learning from additional information, such as explicit human feedback. For this, we argue to use word embeddings instead of traditional high-dimensional vector representations in order to leverage their semantic density and to reduce computational cost. We rigorously test our approach on several domains including tagging data as well as publicly available embeddings based on Wikipedia texts and navigation. Human feedback about semantic relatedness for learning and evaluation is extracted from publicly available datasets such as MEN or WS-353. We find that our method can significantly improve semantic relatedness measures by learning from additional information, such as explicit human feedback. For tagging data, we are the first to generate and study embeddings. Our results are of special interest for ontology and recommendation engineers, but also for any other researchers and practitioners of Semantic Web techniques.", "creator": "LaTeX with hyperref package"}}}