{"id": "1706.00007", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "31-May-2017", "title": "A Learning Based Optimal Human Robot Collaboration with Linear Temporal Logic Constraints", "abstract": "This paper considers an optimal task allocation problem for human robot collaboration in human robot systems with persistent tasks. Such human robot systems consist of human operators and intelligent robots collaborating with each other to accomplish complex tasks that cannot be done by either part alone. The system objective is to maximize the probability of successfully executing persistent tasks that are formulated as linear temporal logic specifications and minimize the average cost between consecutive visits of a particular proposition. Based on the results, the paper proposes to develop a general algorithm that is consistent with the performance requirements of the human task allocation problem. The system goal is to increase the probability of successfully executing persistent tasks that are defined as a temporal logic specification with a temporal logic specification as a simple, simple linear semantics specification for a distributed task allocation problem. To achieve a reasonable result, we have developed the algorithm to minimize the cost of successful, efficient, and reliable tasks that are not possible in human software.", "histories": [["v1", "Wed, 31 May 2017 17:52:48 GMT  (66kb,D)", "http://arxiv.org/abs/1706.00007v1", null]], "reviews": [], "SUBJECTS": "cs.RO cs.AI cs.HC", "authors": ["bo wu", "bin hu", "hai lin"], "accepted": false, "id": "1706.00007"}, "pdf": {"name": "1706.00007.pdf", "metadata": {"source": "CRF", "title": "A Learning Based Optimal Human Robot Collaboration with Linear Temporal Logic Constraints", "authors": ["Bo Wu", "Bin Hu", "Hai Lin"], "emails": [], "sections": [{"heading": null, "text": "Note to Practitioners\u2014This paper is motivated by the task allocation problem for a class of human robot collaboration systems. In such systems, the most efficient way to achieve a given task is for the human and the robot to smartly collaborate with each other. Our objective is to dynamically assign tasks to the human and the robot based on human cognitive and physiologic states as well as the robot\u2019s performance, so that the given task can be accomplished with the optimal probability and the minimized average cost to finish one round of the operation. To this end, we propose a mathematical model to capture the dynamic evolution of human cognitive and physiologic states, such as trust and fatigue. Such model in practice could be unknown initially, so we develop an efficient learning based algorithm to learn the model with predefined accuracy. Then we show that the performance of the optimal policy obtained on the learned model is sufficiently close to the optimal policy on the underlying ground truth model. Our proposed methods are applicable to manufacturing assembly process, semi-autonomous driving and other human robot collaboration systems that require optimal allocation of the tasks between human and robot. The limitation of the proposed approach is the assumption of the perfect real time observation of the human states. The authors believe that such limitation can be addressed with the recent advances in the cognitive science research.\nIndex Terms\u2014Formal methods, human robot collaboration, temporal logic\nThis work was supported by the National Science Foundation (NSF-CNS1446288 and NSF- ECCS-1253488).\nBin Hu is with New Mexico State University, Las Cruces, NM, 88003, USA. binhu.complicated@gmail.com\nBo Wu and Hai Lin are with University of Notre Dame, Notre Dame, IN, 46556, USA. bwu3@nd.edu, hlin1@nd.edu\nI. INTRODUCTION\nA. Background and Motivation\nHuman-robot collaboration consists of intelligent robots and human operators collaborating with each other to accomplish complex tasks that are less efficient or cannot be completed by either human or robots alone. Human-robot collaboration has become an important and even necessary part to ensure safe and efficient operations for many safety-critical systems, to name a few, such as modern manufacturing processes [1], [2], medical and health-care systems [3], [4], teleoperation [5] and semi-autonomous vehicle systems [6]. Thus, a reliable and efficient optimal control framework is important, even necessary especially for systems with safety-critical applications [7].\nIt is, however, fairly challenging to ensure desirable performance for human robot collaboration due to the complex interactions between human and robot. The complexity lies in (1) the inherent stochastic uncertainties caused by a variety of human characteristics and external environments (2) the difficulty of obtaining a priori knowledge about how human interacts with robot due to the unanticipated nature of human beings. To address these challenges, this paper proposes a learning based human-robot collaboration framework to ensure optimal system performance for a manufacturing task allocation system with linear temporal logic constraints (LTL) [8], a rich and expressive specification language to specify desired properties that\u2019s close to human natural language.\nB. Relevant Work\nHuman-robot collaboration has been a rapidly growing research area that has found its roles in many applications [9]. It is thus, beyond the scope of this paper to conduct an exhaustive literature review on this popular topic. However, there are not many research activities that examine the optimal performance for human robot collaboration under LTL constraints. This section will focus on the discussions of the relationship and differences between the proposed work in this paper and the relevant research work.\nAmong many factors affecting human robot interaction, human factors, such as trust and fatigue, have been long considered as overarching concerns in human robot systems that significantly affects system performance, especially as it is related to safety-critical applications [10]. Prior work in [11], [12] showed that the evolution of both human trust and fatigue are dynamical processes. The human trust toward the robot is highly dependent on the automation performance. These observations motivate research efforts on the development of quantitative models for human trust and fatigue to provide appropriate real time predictions [13], [14] and control of human trust levels [1]. In this paper, we explicitly consider\nar X\niv :1\n70 6.\n00 00\n7v 1\n[ cs\n.R O\n] 3\n1 M\nay 2\n01 7\n2 the impact of the human trust and fatigue on the human robot interaction. We assume the complete observability of the trust and fatigue level in real time, which can be met by using the techniques mentioned in [15], [16].\nTo address the challenge of modeling the unknown uncertainties in human robot interaction, this paper proposes a composition framework of multiple Markov Decision Process (MDP) models with possibly unknown transition probabilities. Our proposed framework can be viewed as a stochastic generalization of the conventional deterministic models proposed in [1], [13]. Under the MDP models for human robot interactions, the second challenge is to ensure the optimal performance when conducting persistent tasks, such as \u201cvisiting regions A infinite often to pick up products\u201d or \u201crepeating the steps of assembling the car engine infinite often\u201d, which are important and widely encountered situations in a variety of industrial systems. The desired performance metric for those persistent tasks is to maximize the probability of successfully executing those persistent tasks while optimizing some cost metric. Such performance specification is often formulated as an optimal control problem of MDP with temporal logic constraints. Wolff et. al [17] developed a method to automatically generate the optimal control policy subject to LTL specifications and optimizing the weighted average cost function on a nonprobabilistic model. The controller synthesis framework to optimize average cost per operation cycle, a natural performance metric for persistent tasks with temporal logic constraints in MDPs was considered in [18] and [19]. All the above results assume that the model is precisely known. However, in many practical applications, such assumption may not be true and the model has to be learned through interaction with the environment.\nMotivated by the need of considering unknown models in human robot collaboration , this paper studies a learning-based optimal task allocation problem where the optimal policies can be synthesized on the learned model to optimize the average cost per task cycle while maximizing the probability of satisfying the LTL constraints used to specify persistent tasks. The frameworks considered in [16], [20] are the most relevant to the work considered in this paper. To address the optimal control problem under unknown MDPs, Sadigh et. al [20] developed a reinforcement learning based approach to synthesize control policy for MDP with unknown transition probabilities to satisfy LTL specification with optimal probability. Fu et. al [16] extended the probably approximate correct (PAC)-MDP learning framework that synthesize controllers of unknown MDPs with temporal logic constraints. Both work focus on developing learning methods to maximize the probability of satisfying the LTL specification without considering the cost per task cycle metric. It is, however, unclear whether the methods in [16], [20] can be used to achieve optimal average cost per task cycle. To our best knowledge, this paper presents the first results that address the optimization problem that achieves optimal average costs per task cycle with LTL constraints under the unknown MDP models.\nC. Contributions\nThe objective of this paper is to (1) develop a human robot collaboration framework that is able to model the unknown stochastic uncertainties on human robot interactions, (2) as well as a learning based algorithm to ensure optimal performance for human robot collaboration with LTL constraints under unknown human models. The main contributions of this paper are summarized as below, \u2022 This paper proposes a human robot collaboration frame-\nwork with composition of multiple MDPs with unknown transition probabilities. Compared to the existing frameworks [13], [14], [21], [22], such framework enables the characterization of stochastic uncertainties as well as their unknown features for human robot interactions as well as the use of formal design methodologies for performance guarantee. \u2022 Based on the unknown MDP models, this paper further develops a learning-based algorithm inspired by probably approximately correct method to achieve the optimality for both LTL satisfaction and average cost per task cycles. To the best of our knowledge, this is the first set of results addressing both issues of LTL constraints and average cost per task cycles under unknown MDP models. \u2022 This paper also shows that the optimal policies achieved by the proposed learning method under the unknown MDP model, can asymptotically approach the ones with the true model. The optimality gap of the proposed learning algorithm can be analytically bounded and to achieve such bound, the complexity to learn the model is polynomial in the size of the MDP, the size of automaton from the LTL specification and other quantities that either are task specific or measure the confidence level and accuracy of the learned model.\nThis paper extends our preliminary results in [23] by considering synthesizing optimal policy under the model with unknown transition probabilities and prove its approximate optimality. The rest of this paper is structured as follows. Section II provides the necessary preliminaries; Section III models and formulates the problem. The task assignment problem is solved in Section IV and Section V for known and unknown model respectively. A simulation is presented in Section VI. Section VII concludes the paper."}, {"heading": "II. PRELIMINARIES", "text": "In this section, we introduce the required background knowledge about transition system, Markov Decision Process and temporal logic.\nA. Transition System\nTransition system is a popular model to describe the nonprobabilistic behavior of the system. For example, it can be used to describe the flow of the assembly task driven by worker\u2019s actions.\nDefinition 1. [8] A transition system is a tuple T S = (S,A,\u2192, I, AP,L) where \u2022 S = {s0, s1, ...} is a finite set of states;\n3 \u2022 A is a finite set of actions; \u2022 \u2192\u2286 S \u00d7A\u00d7 S is a transition relation. \u2022 I \u2286 S is a set of initial states; \u2022 AP is a set of atomic propositions; \u2022 L : S \u2192 2AP is a labeling function that maps each s \u2208 S\nto one or several elements of AP\nFor s \u2208 S and a \u2208 A, we denote Post(s, a) = {s\u2032 \u2208 S|(s, a, s\u2032) \u2208\u2192}. Specifically, T S = (S,A,\u2192, I, AP,L) is called an action-deterministic transition system if |I| \u2264 1 and |Post(s, a)| \u2264 1 for all s and a.\nB. Markov Decision Process\nDefinition 2. [8] An MDP with cost is a tuple M = (S, s\u0302, A, P, L,C) where \u2022 S = {s0, s1, ...} is a finite set of states; \u2022 s\u0302 \u2208 S is the initial state; \u2022 A is a finite set of actions; \u2022 P (s, a, s\u2032) := Pr(s(i+1) = s\u2032|s(i) = s, a(i) = a), \u2200i \u2265\n0. \u2022 L : S \u2192 2AP is the labeling function that maps each s \u2208 S to one or several elements of a set AP of atomic propositions. \u2022 c : S\u00d7A\u2192 R+ is the cost function that maps each state and action pair to a non-negative cost. The maximum cost is bounded by Rmax.\nFor each state s \u2208 S, we denote A(s) as the set of available actions. From the definition it is not hard to see that the actiondeterministic transition system is a special case of MDP with P (s, a, s\u2032) = 1 for any s \u2208 S and a \u2208 A that are defined. Vice versa, if we ignore the probabilities in each transition, the MDP will become a transition system which we denote as TSM.\nA path \u03c9 of an MDP is a non-empty sequence of the form \u03c9 = s0 a0\u2212\u2192 s1 a1\u2212\u2192 s2...si\nai\u2212\u2192 si+1..., where each transition is enabled by an action ai such that P (si, ai, si+1) > 0. We denote Pathfins as the collection of finite length paths that start in a state s. The nondeterminism of an MDP is resolved with the help of a scheduler.\nDefinition 3. A scheduler \u00b5 : Pathfins\u0302 \u2192 A (also known as adversary or policy) of an MDP M is a function mapping every finite path \u03c9fin \u2208 Pathfins\u0302 onto an action a \u2208 A(last(\u03c9fin)) where last(\u03c9fin) denotes the last state of \u03c9fin.\nIntuitively, the scheduler specifies the next action to take for each finite path. The behavior of an MDP M under a given scheduler \u00b5 is purely probabilistic and thus reduces to a discrete time Markov chain (DTMC) with a set of recurrent classes. A recurrent class Src refers to a set of recurrent states that the probability to return to any state s \u2208 Src after leaving it is 1 and any pair s, s\u2032 \u2208 Src is communicating, that is, s\u2032 is reachable from s (there exists a state sequence s0s1s2...sn with nonzero probability such that s0 = s, sn = s\u2032) and s is reachable from s\u2032. A policy \u00b5 is called memoryless if \u00b5(\u03c9fin) = \u00b5(last(\u03c9fin), that is, the action to select only depends on the current state that the MDP is in. A policy is said to have memory otherwise. An MDP is said\nto be communicating [24] if there exits a memoryless and deterministic (stationary) policy such that the induced DTMC is communicating, that is , all the states pair s, s\u2032 in the DTMC are communicating.\nC. Linear Temporal Logic\nUnder the MDP model, LTL can be used to describe a wide range of properties of sequences of states such as safety (bad things never happen), liveness (good things eventually happen), persistence (good things happen infinitely often), response (if A then B) and so on.\nAn LTL formula is built up from a set of atomic propositions (AP ), true, false, the Boolean operators \u00ac (negation), \u2228 (disjunction), \u2227 (conjunction) and temporal operators (always), X (next), \u222a (until), \u2666 (eventually). An LTL formula \u03c6 can always be represented by a deterministic Rabin automaton (DRA) [8] R\u03c6 = (Q, q0, 2AP , \u03b4, ACC) where Q is a set of finite states, q0 \u2208 Q is the initial state, 2AP is the alphabet, \u03b4 : Q \u00d7 2AP \u2192 Q is the transition function, and ACC = {(L(1),K(1)), ..., (L(M),K(M))}, with M being a positive integer, is a set of tuples where L(i),K(i) \u2286 Q for all i = 1, ...,M . Given a infinite word l = \u03c30\u03c31... where \u03c3i \u2208 2AP for all i, a unique path \u03c9 = q0q1... will be induced where qi+1 = \u03b4(qi, \u03c3i). A run \u03c9 is accepted in R\u03c6 if there exists a pair (L,K) \u2208 ACC such that 1) there exists n \u2265 0, such that for all m \u2265 n, we have qm /\u2208 L, and 2) there exist infinitely many indices k where qk \u2208 K. Note that L could be empty but K may not. Intuitively, for a pair (L,K), the acceptance condition means that an accepted run should visit states in L only finite times and states in K infinite times. Given an LTL formula \u03c6, it is always possible to construct a DRA that accepts exactly the words that satisfy \u03c6."}, {"heading": "III. MODELING AND PROBLEM FORMULATION", "text": "A. Modeling\nTask model Consider an industrial assembly process involving both human and robot as shown in Figure 1. The assembly task can be represented by an action-deterministic transition systemMw as shown in Figure 2. There are N parts that need to be assembled by actions Ar = {ar1, .., arNr} denoting the robot actions, and Ah = {ah1 , ..., ahNh} denoting the human actions. In Figure 2, ai \u2208 {a1, a2} can represent either human or robot\u2019s corresponding action.\nDuring the task execution all necessary parts are fed by suitable mechanisms such as the conveyor belts. The two arrows in Figure 1 denote the distribution of the parts. As seen in Figure 2, these assembly tasks often consist of a sequence\n4 w0start w1 w2\na1 a2\nah3\nFig. 2: Assembly plan Mw\nof stages where each stage represents one sub-task that needs human or machine\u2019s actions to complete. In practice, the difficulty levels of the sub-tasks in the assembly process often varies from stages to stages, which may result in stochastic variations on machine\u2019s performance. Robot Model This paper introduces an MDP to model the stochastic dynamics of the machine performances. For each robot action ari , robot may finish it with some cost representing the energy consumption and the time, additionally, ari may lead to a faulty state with certain probability pi to characterize the possible failure of the robot. Once the robot is in the faulty state, human repair is required.\nFormally the robot model is an MDP Mr = {Sr, sr0, Ar \u222a {repair}, P r, Lr, cr} where Sr is a finite set of states representing the machine state, sr0 \u2208 Sr is the initial state, and T r is the transition matrix. Figure 3 shows a simple example of two performance levels in a robotic system. In particular, the state labeled Normal represents a normal performance level under which the actions taken by the robot can accomplish the tasks as expected, while the state labeled Faulty denotes an abnormal status under which the robot will fail to performing any assigned tasks.\nHuman trust and fatigue model The interaction between human trust and robot performance is well known to exist in general human robot systems, such as process control systems [25] and human-robot collaboration system [14]. In particular, the work in [13], [14] demonstrated that the dynamics of the human trust can be adequately modeled as a first order linear system with the robot performance as its input. This finding motivates us to model the human trust as an MDP whose states represent different trust levels of the human operator.\nDefinition 4 (Human Trust Model). A human trust MDP model is a tuple Mt = {St, st0, At, P t, ct} where \u2022 St is a finite set of human trust levels. \u2022 st0 \u2208 St is the initial human trust level. \u2022 At = Ar \u222a {repair} is the action set \u2022 P t(st(i), a, st(i + 1) = Pr(st(i + 1)|st(i), a) for a \u2208 Ar \u222a {repair}.\n\u2022 ct : St \u00d7At \u2192 R+ is a positive cost function.\nSimilarly, it is also well known that the human performance is affected by the fatigue level [21]. Thus, we model the human fatigue process as an MDPMf = {Sf , sf0 , Af , P f , cf} where Af = Ah \u222aAr \u222a {repair}. Human robot interaction model. Under the definitions of the four models, namely task model Mw, robot model Mr, human trust model Mt and fatigue model Mf , the human robot interaction considered in this paper is characterized by the fact that the human trust and fatigue can be appropriately regulated by controlling robot performance through strategic task assignment. A desired level of human trust and fatigue will certainly improve the human performance in the assembly process, thereby leading to an effective human-robot collaboration. In the presence of human robot interaction, the manufacturing system is modeled as an MDPM from parallel composition of the four models.\nM =Mw||Mr||Mt||Mf\nWhere || denotes the parallel composition defined as follows.\nDefinition 5 (parallel composition). Given two Markov decision processes M1 = (S1, s10, A1, P1, L1, c1) and M2 = (S2, s 2 0, A2, P2, L2, c2), the parallel composition of M1 and M2 is the MDP M = M1||M2 = (S1 \u00d7 S2, s10 \u00d7 s20, A1 \u222a A2, P, L, c) where L(s1, s2) = L1(s1) \u222a L2(s2), and \u2022 P ((s1, s2), a, (s \u2032 1, s \u2032 2)) = P1(s1, a, s \u2032 1)P2(s2, a, s \u2032 2),\nc((s1, s2), a) = c1(s1, a) + c2(s2, a), if a \u2208 A1 \u2229 A2 and both P1(s1, a, s\u20321) and P2(s2, a, s \u2032 2) are defined, or\n\u2022 P ((s1, s2), a, (s \u2032 1, s2)) = P1(s1, a, s \u2032 1), c((s1, s2), a) =\nc1(s1, a) if a \u2208 A1\\A2 and P1(s1, a, s\u20321) is defined, or \u2022 P ((s1, s2), a, (s1, s \u2032 2)) = P2(s2, a, s \u2032 2), c((s1, s2), a) =\nc2(s2, a) if a \u2208 A2\\A1 and P2(s2, a, s\u20322) is defined.\nFrom the definition of the parallel composition, it can be seen that the state s of M is actually a four tuple s = (sw, sr, st, sf ). Also note that the transition probability in the manufacturing process is not only dependent on the actions taken by the robot or human operator, but also dependent on the robot performance or the human trust level when those actions are taken. This dependency explicitly models the impact of the human robot interaction on the manufacturing process, and addresses the practical concern that the human or robot\u2019s real time performance does affect how well the manufacturing tasks being accomplished. Furthermore, we would like to point out that the quantification of the cost related to human models is application specific. Such metric may need to consider the time-to-completion, workload assessment, comfort level and cognitive workload and so on [22]. Detailed task analysis with subjective rating from human worker are needed for cost function construction. Inverse reinforcement learning [26] may also be applied to learn a cost function based on human demonstrations of the human robot collaborative tasks.\nB. Problem formulation\nOnce we get the system modelM, we are interested in how to optimally assign actions to human and robot dynamically based on their current states.\n5 Consider the composed MDPM, suppose we are using the task model as shown in Figure 2, we label all the states of the form S\u03c0 = {w0, \u2217, \u2217, \u2217} as \u03c0 where \u2217 means arbitrary state in each submodule as appropriate. That is, S\u03c0 denotes all the states when one round of assembly is finished. The assembly process should keep on going and the finished state should be visited infinite times.\nWe say that each visit to the set S\u03c0 completes a cycle. That is, from the initial state, the first time to reach s \u2208 S\u03c0 is the first cycle, after that the path revisiting s\u2032 \u2208 S\u03c0 is the second cycle and so on. Given a path \u03c9s = s0s1...snsn+1..., then we denote the number of cycles completed up to stage n as C(\u03c9s, n) which starts with 1 at the very beginning. As we are dealing with an assembly task, the average cost per cycle (ACPC) is a more reasonable cost measure [18] to optimize. Then we are ready to formally define our problem.\nProblem 1. Given the composed MDP M and S\u03c0 , find a task assignment policy \u00b5 which optimizes the probability of finishing the assembly process infinitely often while minimizing the ACPC defined as\nJ(s0) = lim sup N\u2192\u221e\nE{ \u2211N k=0 c(sk, \u00b5(\u03c9 sk \u00b5 ))\nC(\u03c9s\u00b5, N) |S\u03c0 is visited\ninfinitely often and L(ws\u00b5) obeys other constraints} (1)\nwhere \u03c9s\u00b5 denotes the state path under policy \u00b5 and \u03c9 sk \u00b5 denotes the state path up to stage k. L(\u03c9s\u00b5) is the observed label sequence along the \u03c9s\u00b5. Other constraints may impose additional requirements on \u00b5 as well, such as the robot and human assembly action should be alternatively assigned."}, {"heading": "IV. DYNAMIC TASK ASSIGNMENT WITH KNOWN MODEL", "text": "The requirement that the assembly process should be finished infinite times with additional constraints can be written into the following LTL formula\n\u03c6 = \u2666\u03c0 \u2227 \u03d5 (2)\nwhere \u03d5 denotes other constraints. Therefore, we can convert the Problem 1 into the following.\nProblem 2. Given the composed MDP M, LTL formula \u03c6 in (2) and S\u03c0 , find a policy \u00b5 which optimizes the probability of satisfying \u03c6 while minimizing\nJ(s0) = lim sup N\u2192\u221e\nE{ \u2211N k=0 c(sk, \u00b5(\u03c9 sk \u00b5 ))\nC(\u03c9s\u00b5, N) |L(\u03c9s\u00b5) |= \u03c6} (3)\nGiven the task model, robot model, human trust model and human fatigue model as MDPs, we compose them using parallel composition introduced in Definition 5 into the system model M. The specification is given in terms of an LTL formula \u03c6 and is converted into a DRAR\u03c6. An example of the DRA corresponds to the LTL formula \u03c6 = \u2666\u03c0 is shown in Figure 4(a) where K = {q1} and is marked in double circles. So the accepted run in R\u03c6 should visit q1 infinitely often.\nThen the product P between the MDP M and Rabin automaton R\u03c6 is needed to capture all the paths of M to satisfy \u03c6.\nq0start q1\n\u03c0\n\u2205\n\u2205\n\u03c0\nL = \u2205,K = {q1}\n(a) DRA R\u03c6\ns0start s1\ns2\na0, 1\na1, 1a2, 0.4 a3, 0.5\na2, 0.6 a3, 0.5\n{\u03c0}\n(b) MDP M\nDefinition 6. [18] Given an MDP M = {S, s0, A, P,AP,L, c} and a DRA R\u03c6 = (Q, q0, 2\nAP , \u03b4, ACC), the product is an MDP P = (SP , s0 \u00d7 q0, A, PP , ACCP , SP\u03c0, cP) where \u2022 SP = S \u00d7Q \u2022 PP((s, q), a, (s\n\u2032, q\u2032) = Pr(s\u2032|s, a) if q\u2032 = \u03b4(q,L(s)), 0 otherwise; \u2022 ACCP = {(LP(1),KP(1)), ..., (LP(M),KP(M))} where LP(i) = S \u00d7 L(i), KP(i) = S \u00d7 K(i), for i = 1, ...,M ; \u2022 SP\u03c0 = S\u03c0 \u00d7Q; \u2022 cP((s, q), a) = c(s, a).\nA simple MDP M is shown in Figure 4(b) and its product MDP P is illustrated in Figure 4(c) where LP = \u2205,KP = {(s1, q1), (s0, q1)} which are marked in double circles. Note that there is a one-to-one correspondence between a path s0s1, ... on M and a path (s0, q0)(s1, q1)... on P with the same cost according to the Definition 6 which enables us to only focus on the behavior of the composed model P . If there is a memoryless policy on P , it is always possible to map it back toM and possibly become a policy with memory which is from the underlying DRA R\u03c6.\nThen the problem of maximizing the probability of satisfying the LTL formula \u03c6 for M can be transformed into a problem of maximizing the probability of reaching a set C(P) of Accepting Maximal End Components (AMEC) in the product MDP P [8].\nDefinition 7. [18] Given a pair (LP ,KP), an end component C is a communicating MDP (SC , AC , PC ,KC , SC\u03c0, cC) where SC \u2286 SP ,AC \u2286 A, AC(s) \u2286 AP(s) for all s \u2208 SC , KC = SC\u2229 KP , SC\u03c0 = SC\u2229SP\u03c0 , and cC(s, a) = cP(s, a) for s \u2208 SC , a \u2208 AC(s). For any P (s, a, s\u2032) > 0, s \u2208 SC , a \u2208 AC(s), s\u2032 \u2208 SC and PC(s, a, s\u2032) = PP(s, a, s\u2032). An Accepting Maximal End Components (AMEC) is the largest such en component with nonempty KC and SC \u2229 LP = \u2205.\n6 AMECs with respect to the same acceptance pair are pairwise disjoint. Therefore the total number of AMECs is bounded by |S||Q||ACCP |. There exists at least one such AMEC and the procedure of finding the AMEC set C(P) can be found in [8]. As shown in Figure 4(c), there is only one AMEC C in C(P) which is inside the dotted box. Once C is reached, it is always possible to construct a policy such that some K \u2208 KP is visited infinitely often and thus the LTL constraint is satisfied. Therefore the maximum probability of satisfying \u03c6 is equal to the maximum probability of reaching C(P). We can find a stationary policy f\u2192C via value iteration or linear program such that the probability of reaching a state in one of the AMEC C \u2208 C(P) equals Pmax(\u03c6). Note that f\u2192C is defined only outside of C.\nNow we focus on minimizing the average cost per cycle (ACPC). From (3) we know that as N goes to infinity, the cost contributed by the finite path from the initial state to a state in an AMEC would be zero and J(s0) is actually solely decided by the policy f C which is defined inside of the AMEC. Once inside C, the task is then to construct a stationary policy f C such that a state in KP is visited infinitely often and minimize (3). We can utilize Algorithm 1 in [18], a policy iteration algorithm to get the optimal (or suboptimal) f C for each C. Then we find the optimal policy fC for all C \u2208 C(P) such that\nfC = { f\u2192C(i), if i /\u2208 SC f C(i) otherwise\nThe Problem 2 is then solved by finding optimal policy f\u2217 from f\u2217C such that it incurs the optimal ACPC among all fC . Note that this stationary policy is defined on P , whose state is the tuple (s, q) where q is the DRA\u2019s state. Therefore different actions could be assigned for the same s onM since q may be different and it actually induces a policy with finite memory for M."}, {"heading": "V. DYNAMIC TASK ASSIGNMENT WITH UNKNOWN MODEL", "text": "For human robot interaction applications, in many cases the model may not be known a prior and has to be learned. This section discusses finding the optimal control policy under an unknown MDP model.\nWith the unknown MDP model M, LTL specification \u03c6, the composed MDP P , We have the following assumptions.\nAssumption 1. The structure of M, e.g. TSM is known, but the transition probability is not known.\nAssumption 2. Every loop in the form of s0s1...sns0 induced by any policy in C \u2208 C(P) of P includes at least one state (s, q) where s \u2208 S\u03c0 and the longest number of steps to finish a cycle starting at (s, q) and ending at (s\u2032, q\u2032) where s, s\u2032 \u2208 S\u03c0 is bounded by an finite positive integer L.\nAssumption 3. Given the LTL formula \u03c6 and the MDP M, Pmax(\u03c6) = 1 and for every AMEC C \u2208 C(P), there exists deterministic and memoryless policies such that P (\u2666C) = 1 under this policy. Furthermore, the first state (s, q) \u2208 C for all such polices visit is unique and s \u2208 S\u03c0 . We can such a state the entrance of C and denoted by ent(C).\nAssumption 4. Every C \u2208 C(P) is a unichain MDP [24], that is, for every deterministic and memoryless policy in C, it will incur single recurrent class.\nRemark 1. In many practical scenarios, the underlining structure of the MDP models can be known beforehand. For example, the assembly process model, the robot performance model and so on. Therefore, Assumption 1 is not overly restrictive. Assumption 2 makes sure that no matter which action is chosen, the system always makes progress towards finishing a cycle. Therefore the number of steps to finish a cycle is bounded. With Assumption 3, we can examining the optimality in each C \u2208 C(P) and designs the policy to reach C with the optimal ACPC. Also, since the first state in C to be visited is fixed, it facilitates us to compare the optimality of bounded time polices in different C\u2019s. Assumption 4 is similar to the one stated [18] in the sense that we guarantee that the optimal policy also satisfies the LTL specification.\nProblem 3. Given the MDP model M with unknown transition probability, and LTL specification \u03c6, two parameters \u03b4, with Assumptions 1, 2, 3 and 4, design an algorithm such that with probability at least 1 \u2212 \u03b4, find a policy f\u2192C for every C \u2208 C(P) such that C can be reached with probability 1. Furthermore, find a policy f C : S \u00d7 Q \u2192 A defined in one of the AMEC C \u2208 C(P) such that once enters this C, the T cycle ACPC is \u2212close to the optimal ACPC in M. And the sample complexity is polynomial in |S|, |A|, T, 1 ,\n1 \u03b4 and linear\nin the number of accepting pairs.\nFrom the problem formulation, we are only interested in the ACPC after reaching the AMEC. To solve Problem 3, we first define \u03b1\u2212approximation in MDPs by combining the definitions in [27] and [16] to consider both labels and rewards.\nDefinition 8. Let M = (S, s\u0302, A, P, L,C) and M\u0304 = (S\u0304, \u00af\u0302s, A\u0304, P\u0304 , L\u0304, C\u0304) be two labeled MDPs as defined in Definition 2. We say that M\u0304 is an \u03b1\u2212approximation of M if \u2022 S = S\u0304, s\u0302 = \u00af\u0302s, A = A\u0304, P (s, a, s\u2032) > 0 iff P\u0304 (s, a, s\u2032) > 0, L = L\u0304 and C = C\u0304. That is, they share the same state and action space, initial condition, structure, labeling and reward function.\n\u2022 |P (s, a, s\u2032)\u2212 P\u0304 (s, a, s\u2032)| \u2264 \u03b1 for any s, s\u2032 and a.\nBy definition, it is not hard to see that if M\u0304 is an \u03b1\u2212approximation of M, then P\u0304 = M\u0304 \u00d7 R\u03c6 is an \u03b1\u2212approximation of P = M\u00d7 R\u03c6. Since we assume that Pmax(M |= \u03c6) = 1, we then have the following lemma.\nLemma 1. If M\u0304 is an \u03b1\u2212approximation of M, \u03c6 is an LTL formula and Pmax(M |= \u03c6) = 1, then Pmax(M\u0304 |= \u03c6) = 1.\nProof. Since M\u0304 is an \u03b1\u2212approximation ofM, we know that P\u0304 = M\u0304\u00d7R\u03c6 is an \u03b1\u2212approximation of P =M\u00d7R\u03c6 where R\u03c6 is then DRA from \u03c6. By definition, Pmax(M |= \u03c6) = 1 implies that there exists a policy \u00b5 such that P\u00b5(\u2666C(P)) = 1 . Now we prove that Pmax(M\u0304 |= \u03c6) = 1 with the same policy \u00b5 by contradiction.\nFirst, observe that C(P) is identical with C(P\u0304) expect for the transition probabilities since P and P\u0304 share the same structure. Suppose under the same \u00b5 such that P\u00b5(\u2666C(P)) = 1, there\n7 exist paths with nonzero probability in P\u0304 that C(P\u0304) is never reached, those paths must also exist with nonzero probability in P under \u00b5 because of the same structure, which is not possible since we know Pmax(M |= \u03c6) = 1.\nOnce we have an estimated model that is close enough to the true MDP model, we have the following lemma to evaluate the performance of the synthesized optimal policy, which is similar to the simulation lemma in [27] but we extended it from T-step horizon to T-cycle horizon.\nLemma 2. If M\u0304 is a NTRmaxD2\u2212approximation ofM, N = |S|, T is a finite number of cycles and 0 < < 1, D is the longest number of steps to finish a cycle starting from any finishing state under any proper policy that can complete T cycle with probability 1, then for any LTL specification \u03c6, for the T-cycle policy f : S\u00d7Q\u2192 A defined in C, an AMEC, we have that |Jf,TP (s, q)\u2212J f,T\nP\u0304 (s, q)| \u2264 , where (s, q) = ent(C) and Jf,T is the average cost in T cycles with the policy f .\nProof. Under the T-cycle policy f , we have that\n|Jf,TP (s, q)\u2212J f,T P\u0304 (s, q)| \u2264 \u2211 \u03c9 |PP(\u03c9)JP(\u03c9)\u2212PP\u0304(\u03c9)JP\u0304(\u03c9)|\nwhere P (\u03c9) and J(\u03c9) are the probability of the path \u03c9 that runs for exactly T cycles and its corresponding average cost in T cycles under policy f . Since f is proper, we have that \u2211 \u03c9 PP(\u03c9) = \u2211 \u03c9 PP\u0304(\u03c9) = 1. Each such \u03c9 starts in a state (s, q) and ends in a state (s\u2032, q\u2032) where s, s\u2032 \u2208 S\u03c0 and runs for exactly T cycles. Note that the paths may be of different lengths by going through T cycles, but their length are bounded by DT . To facilitate our analysis, we (virtually) extend all the paths to DT . Once a path \u03c9 finishes T cycles but has not reached DT steps, it stays at the last state with probability 1 and receives 0 cost from then on until the path is DT steps long. Furthermore, the cycle counts will also stay at T . In this way, neither the probability nor the average cost will be affected.\nFrom Definition 8, it can be seen that\nJP(\u03c9) = JP\u0304(\u03c9) = \u2211DT k=1 ck T \u2264 DTRmax T = DRmax\nTherefore, we need to show that\u2211 \u03c9 |PP(\u03c9)\u2212 PP\u0304(\u03c9)| \u2264 DRmax\nWe define the following random processes Pi by following the policy f with all paths extended to DT steps, the first i transitions are the same as in P\u0304f and the rest transitions are the same as in Pf , where Pf and P\u0304f are DTMCs induced by the policy f from P and P\u0304 Clearly, we have that P\u0304f = PDT\nand Pf = P0. Then we have that\u2211 \u03c9 |PP(\u03c9)\u2212 PP\u0304(\u03c9)| = \u2211 \u03c9 |PP0(\u03c9)\u2212 PPDT (\u03c9)|\n= \u2211 \u03c9 |PP0(\u03c9)\u2212 PP1(\u03c9) + PP1(\u03c9)\u2212 PP2(\u03c9) + ... + PPDT\u22121(\u03c9)\u2212 PPDT (\u03c9)|\n\u2264 DT\u22121\u2211 i=0 \u2211 \u03c9 |PPi(\u03c9)\u2212 PPi+1(\u03c9)|\n(4)\nThen what\u2019s left to prove is that\u2211 \u03c9 |Pi(\u03c9)\u2212 Pi+1(\u03c9)| \u2264 TRmaxD2 (5)\nwhere for notational simplicity, we rewrite PPi as Pi. Inspired by [27], if si denotes the state that is reachable after i transitions, pre(si) and suf(si) denote the i-step prefix reaching si (not including si) and the suffix starting at si, respectively, for some \u03c9 = pre(si).si.suf(si+1), we have\nPi(\u03c9) = Pi(pre(si))Pi(si+1|si)Pi(suf(si+1))\n. Then (4) can be rewritten as\u2211 \u03c9 |Pi(\u03c9)\u2212 Pi+1(\u03c9)| = \u2211 si \u2211 pre(si) \u2211 si+1 \u2211 suf(si+1)\n|Pi(pre(si))Pi(si+1|si)Pi(suf(si+1))\u2212 Pi+1(pre(si))Pi+1(si+1|si)Pi+1(suf(si+1))|\n(6)\nNote that (6) holds even if we virtually extended all the \u03c9 to the same length. Also from the definition of Pi, it is not hard to observe that Pi(pre(si)) = Pi+1(pre(si)) and Pi(suf(si+1)) = Pi+1(suf(si+1)). Therefore (6) becomes\u2211 si \u2211 pre(si) Pi(pre(si)) \u2211 si+1 \u2211 suf(si+1) Pi(suf(si+1))|Pi(si+1|si)\n\u2212 Pi+1(si+1|si)| \u2264 \u2211 si \u2211 pre(si) Pi(pre(si)) \u2211 si+1 \u2211 suf(si)\nPi(suf(si+1))\nNTRmaxD2\n(7) Note that \u2211 si \u2211 pre(si)\nPi(pre(si)) = 1 since it sums over all prefix of i steps and \u2211 si+1 \u2211 suf(si)\nPi(suf(si+1)) \u2264 N since \u2211 suf(si)\nPi(suf(si+1)) = 1 and the number of choice of si+1 after si is bounded by N , which can be seen from the definition of product MDP. Therefore we have proven that (5) holds and thus the lemma is proved.\nLemma 3. If M\u0304 is an NTRmaxD2\u2212approximation ofM, and > 0, then for any LTL specification \u03c6, for T-cycle optimal policy f and g defined in C \u2208 C(P) for P\u0304 and P , we have that |JT,fP (s, q)\u2212J T,g P (s, q)| \u2264 2 , where (s, q) = ent(C) and JT is the average cost in T cycles.\nProof. This is the direct result from Lemma 2 and the fact that JT,fP\u0304 (s, q) \u2264 J T,g P\u0304 (s, q).\nLemma 3 is analogous to Lemma 2 in [16] and intuitively bounds the performance of the optimal T cycle policy in the estimated model when applied to the ground truth model. The\n8 Algorithm 1: ModelLearningAndPolicyFinding input : The state and action sets S and A, the labeling\nfunction L and the underlying transition system TSM for the MDP M. The specification DRA R\u03c6, , \u03b4, (estimated) mixing cycle T .\noutput: policy f : S \u00d7Q\u2192 A 1 Obtain the AMEC set C(P) with only the transition\nprobabilities unknown and f\u2192C for each C \u2208 C(P) from the product TSM \u00d7R\u03c6;\n2 for C \u2208 C(P) do 3 (s, q) = (s0, q0); 4 apply f\u2192C until reach ent(C); 5 C\u0304 \u2190 ModelLearning (C); 6 f C\u0304 \u2190 optimal T -cycle policy; 7 JC\u0304 = J f,T\nC\u0304 (ent(C\u0304)); end\n8 C\u2217 = arg minC\u0304 JC\u0304 ; 9 f\u2217\u2192 = f\u2192C\u2217 ;\n10 f\u2217 = f C\u2217 ; 11 return f = [f\u2217\u2192, f\u2217 ];\nfinite T cycle is chosen such that the average cost over T cycle for the optimal policy g satisfies the following definition.\nDefinition 9. Given the optimal policy g defined in C over infinite time horizon, the -mixing cycle is defined to be the smallest positive integer TC such that\nJg,TCP,C (s, q)\u2212 J g P,C(s, q) <\nfor (s, q) = ent(C) where Jg,TCP,C (s, q) is the average cost per cycle under policy g from (s, q) runs for T cycles and JgP,C(s, q) is the optimal ACPC. The -mixing cycle T for the MDP is defined to be T = maxC\u2208C(P){TC}.\nFrom the above discussion, it can be seen that it is essential to obtain an estimated MDP that is statistically close to the ground truth one. To this regard, we need to estimate the transition probabilities of the MDP. We follow the results in [16], when the number of sampling is large enough, the maximum likelihood estimator of the transition probability P (s, a, s\u2032) can be seen as a random variable of normal distribution with mean \u00b5 = count(s,a,s\n\u2032) count(s,a) and variance\n\u03c32 = count(s,a,s \u2032)(count(s,a)\u2212count(s,a,s\u2032))\ncount(s,a)2(count(s,a)+1) , where count(s, a) is the total number of times that action a is executed on s and count(s, a, s\u2032) is the total number of times that the transition s, a, s\u2032 is observed.\nThen we use the idea of known states [16], [27], [28] as defined below.\nDefinition 10. Given an MDP M and LTL specification \u03c6, a probabilistic transition ((s, q), a, (s\u2032, q\u2032)) from P =M\u00d7R\u03c6 is known if with probability at least 1 \u2212 \u03b4, for any (s, q\u2032) that is reachable by executing a, \u03c32k \u2264 NTRmaxD2 where \u03c3 2 is the variance of the transition probability estimator, k is the critical value for 1\u2212\u03b4 confidence interval, > 0 is a constant,\nN = |S|, T is the -mixing cycle and L is the longest step required to finish one cycle. A state (q, s) is known if any action a defined on it, ((s, q), a, (s\u2032, q\u2032)) is known for any (s\u2032, q\u2032).\nFrom Definition 10, if all the states of the MDP are known, then with probability no less than 1\u2212 \u03b4, it is an NTRmaxD2 - approximation of the true underling MDP. In fact, since we are only interested in the behavior inside the AMECs, it is sufficient that all the states in the AMECs are known. Then we have the following algorithm and theorem to shown that we can learn such model efficiently.\nTheorem 1. Given an MDP model M and LTL specification \u03c6 in the form of (2) and satisfy the Assumption 1, 2, 3 and 4. Given 0 < \u03b4 < 1, > 0, T is the -mixing cycle. With probability no less than 1 \u2212 \u03b4, Algorithm 1 will learn an estimated MDP model with all states in AMECs known within number of steps polynomial in |S|, |A|, T, 1 ,\n1 \u03b4 and linear in\nthe number of accepting pairs. The T -cycle optimal policy f : S \u00d7Q\u2192 A found on this estimated model will satisfy\nJf,TP (s, q)\u2212 J \u2217 P(s, q) < 3\nfor s = ent(C) and C incurs the minimum of T -cycle average cost.\nProof. The upper bound on the number of visits to make a state known is polynomial in |A|, T, 1 ,\n1 \u03b4 from Chernoff\nbound. Before all states in one c \u2208 C are known, the exploration policy makes sure that every state in c will be sufficiently visited because C is a communicating MDP. Once all the C \u2208 C(P) are known which takes the number of steps polynomial in |S|, |A|, T, 1 ,\n1 \u03b4 and linear in the number of\naccepting pairs, for every C, the optimal T cycle policy fC satisfies\n|JfC,TP,C (s, q)\u2212 J g,T P,C(s, q)| \u2264 2\nfrom Lemma 3. From the definition of \u2212mixing time, we know that Jg,TP,C(s, q)\u2212 J\u2217P,C(s, q) < . Therefore,\nJfC,TP,C (s, q)\u2212 J \u2217 P,C(s, q) < 3\nSince we select the AMEC with the smallest average cost, that is Jf,TP (s, q) = minC\u2208C(P) J fC,T P,C (s, q), therefore J f,T P,C(s, q)\u2212 J\u2217P,C(s, q) < 3 for all C \u2208 C(P), then we have that\nJf,TP (s, q)\u2212 J \u2217 P(s, q) < 3\nNote that f\u2192C can be computed using standard value iteration [29]. The sub-algorithm ModelLearning(C) in Algorithm 1 can be flexible as long as it can explore all the state transitions in C sufficiently well. For example, for each state (s, q) \u2208 C, we could select the action in a round-robin fashion to make sure every state and action pair is sampled. In Section VI, we solve the exploration and exploitation by following the strategy that for any unknown states, we select the action in a round-robin fashion while for states that are already known, we follow the strategy based on the current model that maximizes the probability to reach unknown states which\n9 can be efficiently computed by standard value iteration [30]. As to obtain the optimal stationary T -cycle policy, we utilize the policy evaluation method in [18] and find the policy that incurs the optimized T\u2212cycle ACPC."}, {"heading": "VI. EXAMPLE", "text": "We illustrate the validity of our framework in a case study of a human robot collaboration in an assembly scenario. The simulation is run in Matlab on a laptop with Intel i7 processor with 2.6GHz and 16GB of memory.\nFor the underlying true model to be learned, the task model is as shown in Figure 2. The robot model is as shown in Figure 3 with p0 = 0.6, p1 = 0.65. The fatigue model and trust model are as shown in Figure 5 and Figure 6. Their corresponding transition probabilities are as shown in Table I. For the fatigue model, it can be seen that for each human action ahi and repair, there are probabilities fhi and frepair for the human to stay at the same fatigue level and 1\u2212 fhi , 1\u2212 frepair to move to a higher fatigue level if possible. If the human is already at the highest fatigue level, any action involves human wouldn\u2019t make any change. If the robot is selected to perform actions ari , then the human would be idle. There is f i r probability for the human to stay at the same fatigue level and 1 \u2212 f ir probability to decrease to the lower fatigue level. When the human is at the lowest fatigue level, any idleness wouldn\u2019t change the fatigue level.\nAs shown in the human trust model in Figure 6, human action would not affect human trust to the robots. Any robot action would have certain probability for the human to stay at the same trust level, and certain probability to transfer to adjacent trust level when applicable. The transition probabilities imply the robot\u2019s performance as there is higher chance to increase human trust if the robot performs it well.\nThe four models are created using PRISM model checker [31] which also produces the composed system modelM. As for the cost, we assume it is unknown to the learner initially\nand is learned later. For the task model, all actions in the task model would incur a cost of 0.7. For the robot model, robot actions ar0 and a r 1 incur 0.003 and 0.07 respectively, the cost of repair is 0.07. The cost for human fatigue and trust models are as shown in Table II where the empty entries mean not applicable. Essentially we penalize the following cases by assigning a larger cost 1) human is idle and the fatigue level is low; 2) human is busy and the fatigue level is high; 3) human trust is low; 4) lost of trust due to robot failure. On the other hand, we reward the following cases 1) human is busy when fatigue level is low; 2) human is idle when fatigue level is high; 3) human is at the medium fatigue level 4) When human trust is high.\nThe action set for composed M is {ar0, ar1, ah0 , ah1 , a h 2 , repair}. The total number of states in this example is 54. The states refer to the tuple (sw, sr, st, sf ) where each element in the tuple is from task automaton, robot model, human fatigue model and human trust model respectively.\nWe label Snormal = {\u2217, 0, \u2217, \u2217} as normal, for all the states when the robot is in the normal state. Additionally, we label Sfaulty = {\u2217, 1, \u2217, \u2217} as faulty for the all the states when the robot is in the faulty state. Our LTL specification is as the following\n\u03c61 = \u2666\u03c0 \u2227 (faulty \u2192 Xnormal) (8)\nIn plain words, it requires the composed MDP M to visit the finish state in S\u03c0 infinitely often and whenever there is fault, it will be fixed in the next step, since leaving robot in faulty state for too long may permanently damage it. The corresponding DRA has 9 states and one acceptance pair. Therefore the product model has 486 states.\nFor this example, we set = 0.35, T = 10, Rmax = 1 and 90% confidence level. Even if the true model is unknown before learning, since the underline transition system is known, we can find that the maximum step to finish a cycle is D = 5 and calculate the AMEC. There is one AMEC with 75 states in the product model which includes the initial state (q0, s0), therefore there is no need to find f\u2192C . The model learning took 206 seconds and 812872 cycles. Then we obtain the T - cycle optimal policy by evaluating the T -cycle ACPC with formula (21) in from [18] for each possible deterministic and memoryless policy. The optimal T\u2212cycle ACPC we obtain is 1.134 while the optimal ACPC with infinite time horizon is 1.128. The T\u2212cycle optimal policy we found is almost identical to the one for unbounded case with only one different action choice. It can be seen that the performance bound we have is quite conservative due to the loose upper bound."}, {"heading": "VII. CONCLUSION", "text": "In this paper we proposed a learning based dynamic task assignment framework for a class of human robot interactive systems that human and robot work closely to finish a given mission repetitively. Due to the uncertainties in robot dynamics and the evolution of human cognitive and physiological states, we model the robot status, human trust and fatigue as MDPs respectively. A specification is given to ensure that the mission can be finished infinitely often with the optimal probability\n10\nand additional constraints can be added as necessary. The abstract model of the human robot system is a composed MDP from the task model, robot model, human fatigue and trust models. The task assignment problem is then converted to an optimal controller synthesis problem. When the system model is unknown, we proposed a PAC-learning inspired algorithm to efficiently learn the model and then find the optimal policy. An example has been explored to show the validity of our framework. Future work includes extending the problem to more general settings, such as two-player stochastic games to consider the case where the human action is not controllable and partial observability where the human states such as trust and fatigue cannot be directly observed."}], "references": [{"title": "Modeling and control of trust in human-robot collaborative manufacturing", "author": ["B. Sadrfaridpour", "H. Saeidi", "J. Burke", "K. Madathil", "Y. Wang"], "venue": "Robust Intelligence and Trust in Autonomous Systems. Springer, 2016, pp. 115\u2013141.", "citeRegEx": "1", "shortCiteRegEx": null, "year": 2016}, {"title": "Optimal subtask allocation for human and robot collaboration within hybrid assembly system", "author": ["F. Chen", "K. Sekiyama", "F. Cannella", "T. Fukuda"], "venue": "IEEE Transactions on Automation Science and Engineering, vol. 11, no. 4, pp. 1065\u20131075, 2014.", "citeRegEx": "2", "shortCiteRegEx": null, "year": 2014}, {"title": "Acceptance of healthcare robots for the older population: review and future directions", "author": ["E. Broadbent", "R. Stafford", "B. MacDonald"], "venue": "International journal of social robotics, vol. 1, no. 4, pp. 319\u2013330, 2009.", "citeRegEx": "3", "shortCiteRegEx": null, "year": 2009}, {"title": "Medical and health-care robotics", "author": ["A.M. Okamura", "M.J. Mataric", "H.I. Christensen"], "venue": "IEEE Robotics & Automation Magazine, vol. 17, no. 3, pp. 26\u201337, 2010.", "citeRegEx": "4", "shortCiteRegEx": null, "year": 2010}, {"title": "Experiments on human-in-theloop coordination for multirobot system with task abstraction", "author": ["C.-W. Lin", "M.-H. Khong", "Y.-C. Liu"], "venue": "IEEE Transactions on Automation Science and Engineering, vol. 12, no. 3, pp. 981\u2013989, 2015.", "citeRegEx": "5", "shortCiteRegEx": null, "year": 2015}, {"title": "Formal methods for semi-autonomous driving", "author": ["S.A. Seshia", "D. Sadigh", "S.S. Sastry"], "venue": "Proceedings of the 52nd Annual Design Automation Conference. ACM, 2015, p. 148.", "citeRegEx": "6", "shortCiteRegEx": null, "year": 2015}, {"title": "Safety in human-robot collaborative manufacturing environments: Metrics and control", "author": ["A.M. Zanchettin", "N.M. Ceriani", "P. Rocco", "H. Ding", "B. Matthias"], "venue": "IEEE Transactions on Automation Science and Engineering, vol. 13, no. 2, pp. 882\u2013893, 2016.", "citeRegEx": "7", "shortCiteRegEx": null, "year": 2016}, {"title": "Principles of Model Checking", "author": ["C. Baier", "J. Katoen"], "venue": null, "citeRegEx": "8", "shortCiteRegEx": "8", "year": 2008}, {"title": "Human\u2013robot collaboration: a survey", "author": ["A. Bauer", "D. Wollherr", "M. Buss"], "venue": "International Journal of Humanoid Robotics, vol. 5, no. 01, pp. 47\u201366, 2008.", "citeRegEx": "9", "shortCiteRegEx": null, "year": 2008}, {"title": "A meta-analysis of factors affecting trust in human-robot interaction", "author": ["P.A. Hancock", "D.R. Billings", "K.E. Schaefer", "J.Y. Chen", "E.J. De Visser", "R. Parasuraman"], "venue": "Human Factors: The Journal of the Human Factors and Ergonomics Society, vol. 53, no. 5, pp. 517\u2013527, 2011.", "citeRegEx": "10", "shortCiteRegEx": null, "year": 2011}, {"title": "Effects of changing reliability on trust of robot systems", "author": ["M. Desai", "M. Medvedev", "M. V\u00e1zquez", "S. McSheehy", "S. Gadea- Omelchenko", "C. Bruggeman", "A. Steinfeld", "H. Yanco"], "venue": "Human-Robot Interaction (HRI), 2012 7th ACM/IEEE International Conference on. IEEE, 2012, pp. 73\u201380.", "citeRegEx": "11", "shortCiteRegEx": null, "year": 2012}, {"title": "The effect of robot performance on human\u2013robot trust in time\u2013critical situations", "author": ["P. Robinette", "A.R. Wagner", "A.M. Howard"], "venue": "2015.", "citeRegEx": "12", "shortCiteRegEx": null, "year": 2015}, {"title": "Trust, control strategies and allocation of function in human-machine systems", "author": ["J. Lee", "N. Moray"], "venue": "Ergonomics, vol. 35, no. 10, pp. 1243\u2013 1270, 1992.", "citeRegEx": "13", "shortCiteRegEx": null, "year": 1992}, {"title": "Impact of robot failures and feedback on real-time trust", "author": ["M. Desai", "P. Kaniarasu", "M. Medvedev", "A. Steinfeld", "H. Yanco"], "venue": "Proceedings of the 8th ACM/IEEE international conference on Human-robot interaction. IEEE Press, 2013, pp. 251\u2013258.", "citeRegEx": "14", "shortCiteRegEx": null, "year": 2013}, {"title": "Mutual trust based scheduling for (semi) autonomous multi-agent systems", "author": ["X. Wang", "Z. Shi", "F. Zhang", "Y. Wang"], "venue": "2015 American Control Conference (ACC). IEEE, 2015, pp. 459\u2013464.", "citeRegEx": "15", "shortCiteRegEx": null, "year": 2015}, {"title": "Probably approximately correct mdp learning and control with temporal logic constraints", "author": ["J. Fu", "U. Topcu"], "venue": "Proceedings of Robotics: Science and Systems, Berkeley, USA, July 2014.", "citeRegEx": "16", "shortCiteRegEx": null, "year": 2014}, {"title": "Optimal control with weighted average costs and temporal logic specifications", "author": ["E.M. Wolff", "U. Topcu", "R.M. Murray"], "venue": "Robotics: Science and Systems, 2012.", "citeRegEx": "17", "shortCiteRegEx": null, "year": 2012}, {"title": "Optimal control of markov decision processes with linear temporal logic constraints", "author": ["X. Ding", "S.L. Smith", "C. Belta", "D. Rus"], "venue": "Automatic Control, IEEE Transactions on, vol. 59, no. 5, pp. 1244\u20131257, 2014.", "citeRegEx": "18", "shortCiteRegEx": null, "year": 2014}, {"title": "Optimal control of mdps with temporal logic constraints", "author": ["M. Svorenova", "I. Cerna", "C. Belta"], "venue": "Decision and Control (CDC), 2013 IEEE 52nd Annual Conference on. IEEE, 2013, pp. 3938\u20133943.", "citeRegEx": "19", "shortCiteRegEx": null, "year": 2013}, {"title": "A learning based approach to control synthesis of markov decision processes for linear temporal logic specifications", "author": ["D. Sadigh", "E.S. Kim", "S. Coogan", "S.S. Sastry", "S.A. Seshia"], "venue": "Decision and Control (CDC), 2014 IEEE 53rd Annual Conference on. IEEE, 2014, pp. 1091\u20131096.", "citeRegEx": "20", "shortCiteRegEx": null, "year": 2014}, {"title": "A probabilistic framework for modeling and real-time monitoring human fatigue", "author": ["Q. Ji", "P. Lan", "C. Looney"], "venue": "IEEE Transactions on systems, man, and cybernetics-Part A: Systems and humans, vol. 36, no. 5, pp. 862\u2013875, 2006.", "citeRegEx": "21", "shortCiteRegEx": null, "year": 2006}, {"title": "Synthesis of shared autonomy policies with temporal logic specifications", "author": ["J. Fu", "U. Topcu"], "venue": "IEEE Transactions on Automation Science and Engineering, vol. 13, no. 1, pp. 7\u201317, Jan 2016.", "citeRegEx": "22", "shortCiteRegEx": null, "year": 2016}, {"title": "Toward efficient manufaturing systems: a trust based human robot collaboration", "author": ["B. Wu", "B. Hu", "H. Lin"], "venue": "American Control Conference (ACC), 2015. IEEE, 2017, pp. 1536\u20131541. [Online]. Available: http://www3.nd.edu/\u223cbwu3/doc/ACC2017.pdf", "citeRegEx": "23", "shortCiteRegEx": null, "year": 2015}, {"title": "Puterman, Markov decision processes: discrete stochastic dynamic programming", "author": ["L. M"], "venue": null, "citeRegEx": "24", "shortCiteRegEx": "24", "year": 2014}, {"title": "Operators\u2019 trust in and use of automatic controllers in a supervisory process control task", "author": ["B.M. Muir"], "venue": "University of Toronto,", "citeRegEx": "25", "shortCiteRegEx": "25", "year": 1990}, {"title": "Apprenticeship learning via inverse reinforcement learning", "author": ["P. Abbeel", "A.Y. Ng"], "venue": "Proceedings of the twenty-first international conference on Machine learning. ACM, 2004, p. 1.", "citeRegEx": "26", "shortCiteRegEx": null, "year": 2004}, {"title": "R-max-a general polynomial time algorithm for near-optimal reinforcement learning", "author": ["R.I. Brafman", "M. Tennenholtz"], "venue": "Journal of Machine Learning Research, vol. 3, no. Oct, pp. 213\u2013231, 2002.", "citeRegEx": "27", "shortCiteRegEx": null, "year": 2002}, {"title": "Near-optimal reinforcement learning in polynomial time", "author": ["M. Kearns", "S. Singh"], "venue": "Machine Learning, vol. 49, no. 2-3, pp. 209\u2013232, 2002.", "citeRegEx": "28", "shortCiteRegEx": null, "year": 2002}, {"title": "Mathematical techniques for analyzing concurrent and probabilistic systems", "author": ["J.J. Rutten", "M. Kwiatkowska", "G. Norman", "D. Parker"], "venue": "American Mathematical Soc.,", "citeRegEx": "29", "shortCiteRegEx": "29", "year": 2004}, {"title": "Dynamic Programming and Optimal Control, 4th ed", "author": ["D.P. Bertsekas"], "venue": "Athena Scientific,", "citeRegEx": "30", "shortCiteRegEx": "30", "year": 2012}, {"title": "Prism 4.0: Verification of probabilistic real-time systems", "author": ["M. Kwiatkowska", "G. Norman", "D. Parker"], "venue": "International Conference on Computer Aided Verification. Springer, 2011, pp. 585\u2013591.", "citeRegEx": "31", "shortCiteRegEx": null, "year": 2011}], "referenceMentions": [{"referenceID": 0, "context": "Human-robot collaboration has become an important and even necessary part to ensure safe and efficient operations for many safety-critical systems, to name a few, such as modern manufacturing processes [1], [2], medical and health-care systems [3], [4], teleoperation [5] and semi-autonomous vehicle systems [6].", "startOffset": 202, "endOffset": 205}, {"referenceID": 1, "context": "Human-robot collaboration has become an important and even necessary part to ensure safe and efficient operations for many safety-critical systems, to name a few, such as modern manufacturing processes [1], [2], medical and health-care systems [3], [4], teleoperation [5] and semi-autonomous vehicle systems [6].", "startOffset": 207, "endOffset": 210}, {"referenceID": 2, "context": "Human-robot collaboration has become an important and even necessary part to ensure safe and efficient operations for many safety-critical systems, to name a few, such as modern manufacturing processes [1], [2], medical and health-care systems [3], [4], teleoperation [5] and semi-autonomous vehicle systems [6].", "startOffset": 244, "endOffset": 247}, {"referenceID": 3, "context": "Human-robot collaboration has become an important and even necessary part to ensure safe and efficient operations for many safety-critical systems, to name a few, such as modern manufacturing processes [1], [2], medical and health-care systems [3], [4], teleoperation [5] and semi-autonomous vehicle systems [6].", "startOffset": 249, "endOffset": 252}, {"referenceID": 4, "context": "Human-robot collaboration has become an important and even necessary part to ensure safe and efficient operations for many safety-critical systems, to name a few, such as modern manufacturing processes [1], [2], medical and health-care systems [3], [4], teleoperation [5] and semi-autonomous vehicle systems [6].", "startOffset": 268, "endOffset": 271}, {"referenceID": 5, "context": "Human-robot collaboration has become an important and even necessary part to ensure safe and efficient operations for many safety-critical systems, to name a few, such as modern manufacturing processes [1], [2], medical and health-care systems [3], [4], teleoperation [5] and semi-autonomous vehicle systems [6].", "startOffset": 308, "endOffset": 311}, {"referenceID": 6, "context": "Thus, a reliable and efficient optimal control framework is important, even necessary especially for systems with safety-critical applications [7].", "startOffset": 143, "endOffset": 146}, {"referenceID": 7, "context": "To address these challenges, this paper proposes a learning based human-robot collaboration framework to ensure optimal system performance for a manufacturing task allocation system with linear temporal logic constraints (LTL) [8], a rich and expressive specification language to specify desired properties that\u2019s close to human natural language.", "startOffset": 227, "endOffset": 230}, {"referenceID": 8, "context": "Human-robot collaboration has been a rapidly growing research area that has found its roles in many applications [9].", "startOffset": 113, "endOffset": 116}, {"referenceID": 9, "context": "Among many factors affecting human robot interaction, human factors, such as trust and fatigue, have been long considered as overarching concerns in human robot systems that significantly affects system performance, especially as it is related to safety-critical applications [10].", "startOffset": 276, "endOffset": 280}, {"referenceID": 10, "context": "Prior work in [11], [12] showed that the evolution of both human trust and fatigue are dynamical processes.", "startOffset": 14, "endOffset": 18}, {"referenceID": 11, "context": "Prior work in [11], [12] showed that the evolution of both human trust and fatigue are dynamical processes.", "startOffset": 20, "endOffset": 24}, {"referenceID": 12, "context": "These observations motivate research efforts on the development of quantitative models for human trust and fatigue to provide appropriate real time predictions [13], [14] and control of human trust levels [1].", "startOffset": 160, "endOffset": 164}, {"referenceID": 13, "context": "These observations motivate research efforts on the development of quantitative models for human trust and fatigue to provide appropriate real time predictions [13], [14] and control of human trust levels [1].", "startOffset": 166, "endOffset": 170}, {"referenceID": 0, "context": "These observations motivate research efforts on the development of quantitative models for human trust and fatigue to provide appropriate real time predictions [13], [14] and control of human trust levels [1].", "startOffset": 205, "endOffset": 208}, {"referenceID": 14, "context": "We assume the complete observability of the trust and fatigue level in real time, which can be met by using the techniques mentioned in [15], [16].", "startOffset": 136, "endOffset": 140}, {"referenceID": 15, "context": "We assume the complete observability of the trust and fatigue level in real time, which can be met by using the techniques mentioned in [15], [16].", "startOffset": 142, "endOffset": 146}, {"referenceID": 0, "context": "Our proposed framework can be viewed as a stochastic generalization of the conventional deterministic models proposed in [1], [13].", "startOffset": 121, "endOffset": 124}, {"referenceID": 12, "context": "Our proposed framework can be viewed as a stochastic generalization of the conventional deterministic models proposed in [1], [13].", "startOffset": 126, "endOffset": 130}, {"referenceID": 16, "context": "al [17] developed a method to automatically generate the optimal control policy subject to LTL specifications and optimizing the weighted average cost function on a nonprobabilistic model.", "startOffset": 3, "endOffset": 7}, {"referenceID": 17, "context": "The controller synthesis framework to optimize average cost per operation cycle, a natural performance metric for persistent tasks with temporal logic constraints in MDPs was considered in [18] and [19].", "startOffset": 189, "endOffset": 193}, {"referenceID": 18, "context": "The controller synthesis framework to optimize average cost per operation cycle, a natural performance metric for persistent tasks with temporal logic constraints in MDPs was considered in [18] and [19].", "startOffset": 198, "endOffset": 202}, {"referenceID": 15, "context": "The frameworks considered in [16], [20] are the most relevant to the work considered in this paper.", "startOffset": 29, "endOffset": 33}, {"referenceID": 19, "context": "The frameworks considered in [16], [20] are the most relevant to the work considered in this paper.", "startOffset": 35, "endOffset": 39}, {"referenceID": 19, "context": "al [20] developed a reinforcement learning based approach to synthesize control policy for MDP with unknown transition probabilities to satisfy LTL specification with optimal probability.", "startOffset": 3, "endOffset": 7}, {"referenceID": 15, "context": "al [16] extended the probably approximate correct (PAC)-MDP learning framework that synthesize controllers of unknown MDPs with temporal logic constraints.", "startOffset": 3, "endOffset": 7}, {"referenceID": 15, "context": "It is, however, unclear whether the methods in [16], [20] can be used to achieve optimal average cost per task cycle.", "startOffset": 47, "endOffset": 51}, {"referenceID": 19, "context": "It is, however, unclear whether the methods in [16], [20] can be used to achieve optimal average cost per task cycle.", "startOffset": 53, "endOffset": 57}, {"referenceID": 12, "context": "Compared to the existing frameworks [13], [14], [21], [22], such framework enables the characterization of stochastic uncertainties as well as their unknown features for human robot interactions as well as the use of formal design methodologies for performance guarantee.", "startOffset": 36, "endOffset": 40}, {"referenceID": 13, "context": "Compared to the existing frameworks [13], [14], [21], [22], such framework enables the characterization of stochastic uncertainties as well as their unknown features for human robot interactions as well as the use of formal design methodologies for performance guarantee.", "startOffset": 42, "endOffset": 46}, {"referenceID": 20, "context": "Compared to the existing frameworks [13], [14], [21], [22], such framework enables the characterization of stochastic uncertainties as well as their unknown features for human robot interactions as well as the use of formal design methodologies for performance guarantee.", "startOffset": 48, "endOffset": 52}, {"referenceID": 21, "context": "Compared to the existing frameworks [13], [14], [21], [22], such framework enables the characterization of stochastic uncertainties as well as their unknown features for human robot interactions as well as the use of formal design methodologies for performance guarantee.", "startOffset": 54, "endOffset": 58}, {"referenceID": 22, "context": "This paper extends our preliminary results in [23] by considering synthesizing optimal policy under the model with unknown transition probabilities and prove its approximate optimality.", "startOffset": 46, "endOffset": 50}, {"referenceID": 7, "context": "[8] A transition system is a tuple T S = (S,A,\u2192, I, AP,L) where", "startOffset": 0, "endOffset": 3}, {"referenceID": 7, "context": "[8] An MDP with cost is a tuple M = (S, \u015d, A, P, L,C) where", "startOffset": 0, "endOffset": 3}, {"referenceID": 23, "context": "An MDP is said to be communicating [24] if there exits a memoryless and deterministic (stationary) policy such that the induced DTMC is communicating, that is , all the states pair s, s\u2032 in the DTMC are communicating.", "startOffset": 35, "endOffset": 39}, {"referenceID": 7, "context": "An LTL formula \u03c6 can always be represented by a deterministic Rabin automaton (DRA) [8] R\u03c6 = (Q, q0, 2 , \u03b4, ACC) where Q is a set of finite states, q0 \u2208 Q is the initial state, 2 is the alphabet, \u03b4 : Q \u00d7 2 \u2192 Q is the transition function, and ACC = {(L(1),K(1)), .", "startOffset": 84, "endOffset": 87}, {"referenceID": 24, "context": "Human trust and fatigue model The interaction between human trust and robot performance is well known to exist in general human robot systems, such as process control systems [25] and human-robot collaboration system [14].", "startOffset": 175, "endOffset": 179}, {"referenceID": 13, "context": "Human trust and fatigue model The interaction between human trust and robot performance is well known to exist in general human robot systems, such as process control systems [25] and human-robot collaboration system [14].", "startOffset": 217, "endOffset": 221}, {"referenceID": 12, "context": "In particular, the work in [13], [14] demonstrated that the dynamics of the human trust can be adequately modeled as a first order linear system with the robot performance as its input.", "startOffset": 27, "endOffset": 31}, {"referenceID": 13, "context": "In particular, the work in [13], [14] demonstrated that the dynamics of the human trust can be adequately modeled as a first order linear system with the robot performance as its input.", "startOffset": 33, "endOffset": 37}, {"referenceID": 20, "context": "Similarly, it is also well known that the human performance is affected by the fatigue level [21].", "startOffset": 93, "endOffset": 97}, {"referenceID": 21, "context": "Such metric may need to consider the time-to-completion, workload assessment, comfort level and cognitive workload and so on [22].", "startOffset": 125, "endOffset": 129}, {"referenceID": 25, "context": "Inverse reinforcement learning [26] may also be applied to learn a cost function based on human demonstrations of the human robot collaborative tasks.", "startOffset": 31, "endOffset": 35}, {"referenceID": 17, "context": "As we are dealing with an assembly task, the average cost per cycle (ACPC) is a more reasonable cost measure [18] to optimize.", "startOffset": 109, "endOffset": 113}, {"referenceID": 17, "context": "[18] Given an MDP M = {S, s0, A, P,AP,L, c} and a DRA R\u03c6 = (Q, q0, 2 AP , \u03b4, ACC), the product is an MDP P = (SP , s0 \u00d7 q0, A, PP , ACCP , SP\u03c0, cP) where", "startOffset": 0, "endOffset": 4}, {"referenceID": 7, "context": "Then the problem of maximizing the probability of satisfying the LTL formula \u03c6 for M can be transformed into a problem of maximizing the probability of reaching a set C(P) of Accepting Maximal End Components (AMEC) in the product MDP P [8].", "startOffset": 236, "endOffset": 239}, {"referenceID": 17, "context": "[18] Given a pair (LP ,KP), an end component C is a communicating MDP (SC , AC , PC ,KC , SC\u03c0, cC) where SC \u2286 SP ,AC \u2286 A, AC(s) \u2286 AP(s) for all s \u2208 SC , KC = SC\u2229 KP , SC\u03c0 = SC\u2229SP\u03c0 , and cC(s, a) = cP(s, a) for s \u2208 SC , a \u2208 AC(s).", "startOffset": 0, "endOffset": 4}, {"referenceID": 7, "context": "There exists at least one such AMEC and the procedure of finding the AMEC set C(P) can be found in [8].", "startOffset": 99, "endOffset": 102}, {"referenceID": 17, "context": "We can utilize Algorithm 1 in [18], a policy iteration algorithm to get the optimal (or suboptimal) f C for each C.", "startOffset": 30, "endOffset": 34}, {"referenceID": 23, "context": "Every C \u2208 C(P) is a unichain MDP [24], that is, for every deterministic and memoryless policy in C, it will", "startOffset": 33, "endOffset": 37}, {"referenceID": 17, "context": "Assumption 4 is similar to the one stated [18] in the sense that we guarantee that the", "startOffset": 42, "endOffset": 46}, {"referenceID": 26, "context": "To solve Problem 3, we first define \u03b1\u2212approximation in MDPs by combining the definitions in [27] and [16] to consider both labels and rewards.", "startOffset": 92, "endOffset": 96}, {"referenceID": 15, "context": "To solve Problem 3, we first define \u03b1\u2212approximation in MDPs by combining the definitions in [27] and [16] to consider both labels and rewards.", "startOffset": 101, "endOffset": 105}, {"referenceID": 26, "context": "Once we have an estimated model that is close enough to the true MDP model, we have the following lemma to evaluate the performance of the synthesized optimal policy, which is similar to the simulation lemma in [27] but we extended it from T-step horizon to T-cycle horizon.", "startOffset": 211, "endOffset": 215}, {"referenceID": 26, "context": "Inspired by [27], if si denotes the state that is reachable after i transitions, pre(si) and suf(si) denote the i-step prefix reaching si (not including si) and the suffix starting at si, respectively, for some \u03c9 = pre(si).", "startOffset": 12, "endOffset": 16}, {"referenceID": 15, "context": "Lemma 3 is analogous to Lemma 2 in [16] and intuitively bounds the performance of the optimal T cycle policy in the estimated model when applied to the ground truth model.", "startOffset": 35, "endOffset": 39}, {"referenceID": 15, "context": "We follow the results in [16], when the number of sampling is large enough, the maximum likelihood estimator of the transition probability P (s, a, s\u2032) can be seen as a random variable of normal distribution with mean \u03bc = count(s,a,s \u2032) count(s,a) and variance \u03c3 = count(s,a,s \u2032)(count(s,a)\u2212count(s,a,s\u2032)) count(s,a)2(count(s,a)+1) , where count(s, a) is the total number of times that action a is executed on s and count(s, a, s\u2032) is the total number of times that the transition s, a, s\u2032 is observed.", "startOffset": 25, "endOffset": 29}, {"referenceID": 15, "context": "Then we use the idea of known states [16], [27], [28] as defined below.", "startOffset": 37, "endOffset": 41}, {"referenceID": 26, "context": "Then we use the idea of known states [16], [27], [28] as defined below.", "startOffset": 43, "endOffset": 47}, {"referenceID": 27, "context": "Then we use the idea of known states [16], [27], [28] as defined below.", "startOffset": 49, "endOffset": 53}, {"referenceID": 28, "context": "Note that f\u2192C can be computed using standard value iteration [29].", "startOffset": 61, "endOffset": 65}, {"referenceID": 29, "context": "can be efficiently computed by standard value iteration [30].", "startOffset": 56, "endOffset": 60}, {"referenceID": 17, "context": "As to obtain the optimal stationary T -cycle policy, we utilize the policy evaluation method in [18] and find the policy that incurs the optimized T\u2212cycle ACPC.", "startOffset": 96, "endOffset": 100}, {"referenceID": 30, "context": "The four models are created using PRISM model checker [31] which also produces the composed system modelM.", "startOffset": 54, "endOffset": 58}, {"referenceID": 17, "context": "Then we obtain the T cycle optimal policy by evaluating the T -cycle ACPC with formula (21) in from [18] for each possible deterministic and memoryless policy.", "startOffset": 100, "endOffset": 104}], "year": 2017, "abstractText": "This paper considers an optimal task allocation problem for human robot collaboration in human robot systems with persistent tasks. Such human robot systems consist of human operators and intelligent robots collaborating with each other to accomplish complex tasks that cannot be done by either part alone. The system objective is to maximize the probability of successfully executing persistent tasks that are formulated as linear temporal logic specifications and minimize the average cost between consecutive visits of a particular proposition. This paper proposes to model the human robot collaboration under a framework with the composition of multiple Markov Decision Process (MDP) with possibly unknown transition probabilities, which characterizes how human cognitive states, such as human trust and fatigue, stochastically change with the robot performance. Under the unknown MDP models, an algorithm is developed to learn the model and obtain an optimal task allocation policy that minimizes the expected average cost for each task cycle and maximizes the probability of satisfying linear temporal logic constraints. Moreover, this paper shows that the difference between the optimal policy based on the learned model and that based on the underlying ground truth model can be bounded by arbitrarily small constant and large confidence level with sufficient samples. The case study of an assembly process demonstrates the effectiveness and benefits of our proposed learning based human robot collaboration. Note to Practitioners\u2014This paper is motivated by the task allocation problem for a class of human robot collaboration systems. In such systems, the most efficient way to achieve a given task is for the human and the robot to smartly collaborate with each other. Our objective is to dynamically assign tasks to the human and the robot based on human cognitive and physiologic states as well as the robot\u2019s performance, so that the given task can be accomplished with the optimal probability and the minimized average cost to finish one round of the operation. To this end, we propose a mathematical model to capture the dynamic evolution of human cognitive and physiologic states, such as trust and fatigue. Such model in practice could be unknown initially, so we develop an efficient learning based algorithm to learn the model with predefined accuracy. Then we show that the performance of the optimal policy obtained on the learned model is sufficiently close to the optimal policy on the underlying ground truth model. Our proposed methods are applicable to manufacturing assembly process, semi-autonomous driving and other human robot collaboration systems that require optimal allocation of the tasks between human and robot. The limitation of the proposed approach is the assumption of the perfect real time observation of the human states. The authors believe that such limitation can be addressed with the recent advances in the cognitive science research.", "creator": "LaTeX with hyperref package"}}}