{"id": "1706.02109", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "7-Jun-2017", "title": "Guided Interaction Exploration in Artifact-centric Process Models", "abstract": "Artifact-centric process models aim to describe complex processes as a collection of interacting artifacts. Recent development in process mining allow for the discovery of such models. However, the focus is often on the representation of the individual artifacts rather than their interactions. Based on event data we can automatically discover composite state machines representing artifact-centric processes. Moreover, we provide ways of visualizing and quantifying interactions among different artifacts. For example, we are able to highlight strongly correlated behaviours in different artifacts. The approach has been fully implemented as a ProM plug-in; the CSM Miner provides an interactive artifact-centric process discovery tool focussing on interactions. The approach has been evaluated using real life data sets, including the personal loan and overdraft process of a Dutch financial institution. The CSM Miner is a powerful tool and has been validated with numerous other advanced applications, including the development and evaluation of the CSM Miner.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "histories": [["v1", "Wed, 7 Jun 2017 09:55:48 GMT  (2954kb,D)", "http://arxiv.org/abs/1706.02109v1", "10 pages, 4 figures, to be published in proceedings of the 19th IEEE Conference on Business Informatics, CBI 2017"]], "COMMENTS": "10 pages, 4 figures, to be published in proceedings of the 19th IEEE Conference on Business Informatics, CBI 2017", "reviews": [], "SUBJECTS": "cs.DB cs.AI", "authors": ["maikel l van eck", "natalia sidorova", "wil m p van der aalst"], "accepted": false, "id": "1706.02109"}, "pdf": {"name": "1706.02109.pdf", "metadata": {"source": "CRF", "title": "Guided Interaction Exploration in Artifact-centric Process Models", "authors": ["Maikel L. van Eck", "Natalia Sidorova", "Wil M.P. van der Aalst"], "emails": ["m.l.v.eck@tue.nl", "n.sidorova@tue.nl", "w.m.p.v.d.aalst@tue.nl"], "sections": [{"heading": null, "text": "Guided Interaction Exploration in Artifact-centric Process Models\nMaikel L. van Eck\u2217, Natalia Sidorova, Wil M.P. van der Aalst Eindhoven University of Technology, The Netherlands Email: {m.l.v.eck,n.sidorova,w.m.p.v.d.aalst}@tue.nl\nAbstract\u2014Artifact-centric process models aim to describe complex processes as a collection of interacting artifacts. Recent development in process mining allow for the discovery of such models. However, the focus is often on the representation of the individual artifacts rather than their interactions. Based on event data we can automatically discover composite state machines representing artifact-centric processes. Moreover, we provide ways of visualizing and quantifying interactions among different artifacts. For example, we are able to highlight strongly correlated behaviours in different artifacts. The approach has been fully implemented as a ProM plug-in; the CSM Miner provides an interactive artifact-centric process discovery tool focussing on interactions. The approach has been evaluated using real life data sets, including the personal loan and overdraft process of a Dutch financial institution.\nI. INTRODUCTION\nProcess discovery is the automated creation of process models that explain the behaviour captured in event data [1]. These process models can be studied e.g. to identify interesting process flows that differ from the process behaviour expected by a process expert or analyst. However, complex process behaviour can result in unstructured process models, which makes them difficult and time-consuming to analyse. Furthermore, there are often multiple views on the same process, and analysts do not always know what they are looking for.\nOne of the sources of complexity of discovered process models is that many process discovery approaches produce models that provide a monolithic view on the real process [1], [2]. These models generally explain the behaviour of a process in terms of the life-cycle of a single process instance. However, in reality a process instance may involve several interacting process objects or artifacts, each with their own life-cycle [3], [4]. For example, a procurement process with order and invoice objects, the behavioural process of a smart product with sensors that detect the product\u2019s state for different physical aspects, or the status of a single resource in terms of its status in the different processes it is involved in.\nRecently, it has become possible to automatically discover models for process artifacts and their behavioural interactions [2], [4], [5]. These techniques produce individual process models for each artifact or perspective similar to traditional process discovery approaches. The addition of artifact interaction enriches the individual models, connecting process elements from different artifact models. Such information\n\u2217This research was performed in the IMPULS collaboration project of Eindhoven University of Technology and Philips: \u201cMine your own body\u201d.\nhighlights e.g. whether a specific state in one artifact coincides with the state of another artifact.\nArtifact-centric techniques can provide more structured process models than traditional discovery approaches [2]. However, decomposing the behaviour of a process into interacting artifacts does not necessarily make the overall process easier to understand. Therefore, we present an approach to support the analysis of behavioural interactions between process artifacts. The goal is to find the most interesting or relevant interactions so that an analyst can inspect these first. This helps process analysts faced with complex processes featuring artifacts interacting in a bigger system.\nThere are different ways to interpret the interaction of artifacts [2], [5], [6]. We are interested in finding implications that given the occurrence of an element of one artifact-lifecycle provide information on the possible behaviour of other artifacts. Process data generally does not explicitly contain these interactions or causal relations between artifact behaviour, so instead, we use information on correlations between artifact behaviour to obtain such insights.\nThe analysis guidance involves the use of measures of interestingness to quantify artifact interactions. Such measures have been developed in the field of association rule learning to quantify the relevance of relations between sets of items [7], [8]. In this work we show how these measures can be defined in the context of process artifact interaction. Based on these measures a ranking of artifact interactions can be presented to process analysts when inspecting process discovery results. We have extended our artifact-centric process discovery tool, the CSM Miner [9] in the ProM process mining framework, to support the explanation and analysis of interactions.\nTo evaluate the use of analysis guidance in practice we have used the developed tool with real life process data. We discuss the results of this analysis and compare it to insights obtained by other researchers using traditional process mining approaches on the same data. This evaluation shows that the analysis guidance provides insights into the overall process behaviour by highlighting interesting artifact interactions.\nThe remainder of this paper is structured as follows. First, in Section II we discuss related work on artifact-centric process mining and measures of interestingness. In Section III we introduce a way to model processes representing artifact systems and define artifact interactions. Then in Section IV we define measures of interestingness in the context of process artifacts. We present the implementation of the analysis guidance in the\nar X\niv :1\n70 6.\n02 10\n9v 1\n[ cs\n.D B\n] 7\nJ un\n2 01\n7\nCSM Miner in Section V. We evaluate the tool using real life process data in Section VI. Finally, in Section VII we present future work and conclusions."}, {"heading": "II. RELATED WORK", "text": "A plethora of algorithms and tools for automated process discovery emerged over the last decade [1]. These produce models in various process model notations. Several approaches have also been developed to take an object-oriented or artifactcentric view of process mining [3], [4]. However, the number of techniques that can automatically discover the interactions between artifact models is limited [2], [5].\nThere are different types of behavioural interaction between artifacts that can be mined from process execution data. Like in monolithic process discovery, it is possible to establish causal dependencies between events that occur in different artifacts [5]. It is also possible to link a stage in one artifact lifecycle to stages in related artifact lifecycles by discovering synchronization conditions [6]. Similarly, one can identify artifact interaction defined as the co-occurrence of states and transitions from different artifacts as part of the states and transitions of the entire process [2].\nThe goal of the analysis of process artifacts and their interaction is to help the user understand complex behaviour by providing additional structure to the process through decomposition. There are several other existing approaches in process mining to deal with model complexity. Most process discovery tools have filtering options or sliders to adjust which activities and dependencies between activities are shown, often based on frequency information [1]. For some types of processes it is also possible to discover hierarchical process models that allow the analysis of a process at different levels of detail [10]. Trace clustering is a technique to decompose the process data of flexible processes with many different process instance variants that share little overlap in behaviour [11]. The clustered process instances are used to mine a more limited model with fewer and stronger dependencies between activities. However, all these approaches simplify the real behaviour shown by the data and hide information instead of using the complete information to guide the analyst.\nUnderstanding the relations between artifacts and their effect on the overall process behaviour is a challenge [5]. For complex processes this requires the analysis of large numbers of possible artifact interactions, many of which are not interesting. This problem is related to the problem in association rule learning that association rule mining algorithms produce large numbers of rules that are not equally relevant [7], [8], [12]. A solution in association rule learning for this problem involves the quantification of the interestingness of the association rules using specific measures of interestingness."}, {"heading": "III. MODELLING OF ARTIFACT SYSTEMS", "text": "In this work we use the notion of state machines to model processes representing artifact systems and the life-cycles of artifacts as presented in [2]. We developed the CSM Miner to support such models [9].\nRegarding notation, we write \u03c3k for the k-th element of a sequence \u03c3 \u2208 S\u2217 of elements from some set S, and |\u03c3| denotes the length of \u03c3. We write s \u2208 \u03c3 if s = \u03c3k for some k and \u03c3\u3008s, . . . , s\u2032\u3009 for the concatenation of \u03c3 with sequence \u3008s, . . . , s\u2032\u3009. Additionally, for s \u2208 S1 \u00d7 \u00b7 \u00b7 \u00b7 \u00d7 Sn we write s(i) for the value of the i-th component of s (i \u2208 {1, . . . , n})."}, {"heading": "A. Composite State Machines", "text": "A process consisting of a number of interacting artifacts is called an artifact system, and we model its behaviour as a Composite State Machine (CSM). The state of a CSM is defined as the composition of the states of its artifacts, i.e. it is a vector of states. The set of all possible states of a CSM is a subset of the cartesian product of the sets of states of its artifacts, as not all combinations of artifact states are necessarily possible. Each transition in a CSM represents a change in the state of at least one artifact; we do not allow self loops. Formally:\nDefinition 1. A Composite State MachineM = (S, T, b, f) is a model of a process with n artifacts where S \u2286 (S1\u00d7\u00b7 \u00b7 \u00b7\u00d7Sn) is a set of states, with S1, . . . , Sn the sets of artifact states, b = (b1, . . . , bn) is the initial source state, f = (f1, . . . , fn) is the final sink state, T \u2286 (S \u222a{b})\u00d7 (S \u222a{f}) is the set of transitions, and \u2200(s, s\u2032) \u2208 T : s 6= s\u2032. We define S = S\u222a{b, f} and Si = Si \u222a {bi, fi} for i \u2208 {1, . . . , n}.\nThe explicit initial and final states have no incoming and outgoing transitions, respectively. They are not true states: they only mark the points in time where a process instance begins and finishes. As a special case, we call a CSM with only one artifact an Artifact Model, which represents the behaviour of the artifact in isolation.\nWe can project a CSM onto a specific subset of its artifacts to focus only on their behaviour. A CSM Projection is obtained by reducing the cartesian product of each state to the given subset of artifacts, merging the identical states, and omitting unnecessary transitions and self loops. As transitions represent state changes, two states of a projection are only connected by a transition if there is a transition in the CSM whose source and target are reduced to these different states.\nDefinition 2. Given a CSM M and an ordered subset of indices \u03a0 = {i1, . . . , im} \u2286 {1, . . . , n}, with i1 < i2 < \u00b7 \u00b7 \u00b7 < im, we define the state projection function \u03c0\u03a0 : (S1 \u00d7 \u00b7 \u00b7 \u00b7 \u00d7 Sn) \u2192 (Si1 \u00d7 \u00b7 \u00b7 \u00b7 \u00d7 Sim) as follows: \u2200s \u2208 S, ij \u2208 \u03a0 : (\u03c0\u03a0(s))(j) = s(ij). A CSM Projection of M on \u03a0, M\u03a0 = (S\u03a0, T\u03a0, b\u03a0, f\u03a0), is defined as:\nS\u03a0 = {\u03c0\u03a0(s)|s \u2208 S}, T\u03a0 = {(\u03c0\u03a0(s), \u03c0\u03a0(s\u2032))|(s, s\u2032) \u2208 T \u2227 \u03c0\u03a0(s) 6= \u03c0\u03a0(s\u2032)}, b\u03a0 = \u03c0\u03a0(b), f\u03a0 = \u03c0\u03a0(f).\nThe Artifact Model Ai is defined as the projection M{i} of M on {i}.\nNote that the projection of a CSM is itself again a CSM, modelling only the behaviour of the artifacts projected on.\nIn Fig. 1 we present a simple healthcare process, which we use as a running example. This process (model M) has two distinct perspectives or artifacts: the status of the patient being treated (model A1), and the status of lab tests of the patient (model A2). The artificial initial and finial states are marked without border.\nThe healthcare process starts when the patient is registered, after which a lab test is planned to diagnose the patient. If the patient misses their appointment or if the results are inconclusive, then a new test is planned, but if the test results are ready then the treatment can proceed. During the treatment additional tests may be required, until the patient is healthy again and the process ends. Note that the composite process is smaller than the cartesian product of the artifacts (4\u00d7 5 = 20 states) because not all state combinations can be observed due to interdependencies. For example, once the patient is healthy no extra lab tests are needed. Such dependencies between artifacts can be interesting to analyse."}, {"heading": "B. Process Execution Data", "text": "The CSM models as introduced above provide only limited insights into the dependencies and interaction between the artifacts whose behaviour makes up the process of the artifact system. There are no expected sojourn times for the different states or frequencies for transitions. For the process in Fig. 1 an analyst could be interested e.g. in the average time spent Waiting on result (C) while the patient is In treatment (Y) or the difference in probability of transitioning to New test needed (E) before and after the patient is Diagnosed (X). To enrich the model with such information, we require a collection of process execution data.\nIn this work we assume the availability of both a CSM of the process of interest and a matching collection of process instance data consisting of execution sequences of the process. Each State Entry in an Execution Sequence, or trace, specifies the new state of the artifact system at a certain point in time. A collection of execution sequences together form a Log. Given\na log, a CSM can be discovered that matches the execution sequences in the log [2].\nDefinition 3. LetM be a CSM and T a time domain. We call e \u2208 (S\u00d7T) a State Entry. Function state(e) returns the state, time(e) returns the time, and statei(e) = \u03c0{i}(state(e)) returns the state projection of the state entry e. \u03c3 \u2208 (S \u00d7 T)\u2217 is an Execution Sequence of M iff: \u2022 state(\u03c31) = b, \u2022 state(\u03c3|\u03c3|) = f , \u2022 (state(\u03c3k), state(\u03c3k+1)) \u2208 T for k \u2208 {1, . . . , |\u03c3| \u2212 1}, \u2022 time(\u03c31) = time(\u03c32), and \u2022 time(\u03c3k) < time(\u03c3k+1) for k \u2208 {2, . . . , |\u03c3| \u2212 1}. The set TracesM is the set of all possible execution sequences of M. A Log LM : TracesM \u2192 N is a multiset of execution sequences.\nAn example of an execution sequence for the CSMs from Fig. 1 is provided in Fig. 2. Note that no time is spent in the artificial initial state b, representing the beginning of the known execution, but it is included in execution sequences to enable the calculation of the frequency of the different possible ways to start a process. Artificial final state f represents the point in time after which the process instance finished and the state is unknown.\nWe can use the time information in an execution sequence to calculate the time spent in a given state. By aggregating the durations of state entries over a log the models can be enriched with sojourn time statistics for each state. Similar to state sojourn times, we can also count the number of transitions occurring in a log. These numbers can be used to annotate the transitions in the process models with frequency statistics.\nDefinition 4. Let \u03c3k be a state entry of an execution sequence \u03c3 \u2208 TracesM of CSM M. The state entry\u2019s duration is given by:\n\u03b4(\u03c3k) = { time(\u03c3k+1)\u2212 time(\u03c3k), if 1 \u2264 k < |\u03c3| 0, if k = |\u03c3|\nThe total sojourn time of a state s \u2208 S for a log LM is: soj(s,LM) = \u2211 \u03c3\u2208LM ( \u2211 {k|state(\u03c3k)=s} \u03b4(\u03c3k) ) \u2217 LM(\u03c3)\nThe frequency of a transition (s, s\u2032) \u2208 T for a log LM is:\nfreqT ((s, s \u2032),LM) =\u2211\n\u03c3\u2208LM \u2223\u2223{k|state(\u03c3k) = s \u2227 state(\u03c3k+1) = s\u2032}\u2223\u2223 \u2217 LM(\u03c3) An execution sequence of a CSM can also be projected onto a subset of its artifacts such that it is an execution sequence of the matching projected CSM. The projection abstracts from state entries where the state of the specified artifacts does not change from the previous state entry, as these entries no longer represent transitions in the projected process model. With such projections we can calculate sojourn and frequency statistics to enrich projected CSMs as before.\nDefinition 5. Let M be a CSM, \u03a0 a set of artifact indices, and \u03c0\u03a0 a state projection function. We lift the application of projection function \u03c0\u03a0 to sequences \u03c3 \u2208 TracesM so that \u03c0\u03a0(\u03c3) \u2208 TracesM\u03a0 . We define \u03c0\u03a0(\u03c3) recursively:\nIf \u03c3 = \u3008\u3009 then \u03c0\u03a0(\u03c3) = \u3008\u3009, and if \u03c3 = \u3008e\u3009, with e \u2208 (S \u00d7 T), then \u03c0\u03a0(\u03c3) = \u3008(\u03c0\u03a0(state(e)), time(e))\u3009. For an execution sequence \u03c3\u3008e1, e2\u3009,\n\u03c0\u03a0(\u03c3\u3008e1, e2\u3009) =  \u03c0\u03a0(\u03c3\u3008e1\u3009), if \u03c0\u03a0(state(e1)) =\n\u03c0\u03a0(state(e2)) \u03c0\u03a0(\u03c3\u3008e1\u3009)\u03c0\u03a0(\u3008e2\u3009), otherwise\nA Log Projection L\u03a0M : TracesM\u03a0 \u2192 N of a log LM is a multiset of execution sequences such that: \u2200\u03c2 \u2208 TracesM\u03a0 : L\u03a0M(\u03c2) = \u2211 \u03c3\u2208LM:\u03c2=\u03c0\u03a0(\u03c3) LM(\u03c3).\nTable I shows an execution sequence \u03c3 of the running example process and its projections \u03c0\u03a0(\u03c3) for \u03a0 = {1} and \u03a0 = {2}, together with their corresponding durations.\nThe information in a collection of execution sequences can be used to enrich a CSM and its projections with state sojourn statistics and transition frequencies as described above. Fig. 3 shows the running example process of Fig. 1 annotated with frequency and average sojourn time information. Process execution data can also be used for the identification of relations between artifact model elements and the calculation of measures of interestingness for such relations."}, {"heading": "C. Artifact Interaction", "text": "Given a CSM M with multiple artifacts and a log LM, we want to find interesting artifact interactions that are a part of the artifact system behaviour. For example, if the state of an artifact cannot be advanced until a certain state in a different artifact has been reached then this may represent a bottleneck in the overall process. Similarly, the probability of making specific choices at a decision point in one artifact may be affected by the state of another artifact. The executions in a log do not explicitly describe such causal dependencies between the behaviour of different artifacts, but we can infer correlations between sets of artifact states or transitions. Based on this, we distinguish three types of artifact interaction: state co-occurrence, transition co-occurrence and forward-looking co-occurrence.\nWe focus here only on the interaction between pairs of artifacts, but the interaction definitions can be generalised to involve sets of artifacts. We formulate each interaction as an implication (X \u21d2 Y ) between two statements regarding the states or execution behaviour of the artifacts.\nState co-occurrence (si \u21d2S sj) is defined as the conditional probability that artifact model Aj is in state sj given that artifact model Ai is in state si. From the execution sequences in a log we can determine the strength of this interaction in the observed data. It is calculated as the amount of time the system state contains both states compared to the total time spent in si.\nDefinition 6. Let M be a CSM with artifacts i and j, si \u2208 Si and sj \u2208 Sj . The strength of the state co-occurrence (si \u21d2S sj) is defined as:\nP\u0302S(si \u21d2S sj) = soj((si, sj),L{i,j}M )\nsoj(si,L{i}M )\nIn Fig. 3 we can see that the average time spent In treatment (Y) given that the lab is Waiting on result (C) is 2 days, while the average time spent Registered (W) given that the lab is Waiting on result (C) is 4 days. So, the interaction (C \u21d2S W ) is a stronger co-occurrence ( 46 ) than the interaction (C \u21d2S Y ) ( 26 ).\nTransition co-occurrence ((si, s\u2032i) \u21d2T (sj , s\u2032j)) is defined as the conditional probability that, given that Ai is in a transition from si to s\u2032i, Aj has a state sj before and a state s\u2032j after the transition. If sj = s \u2032 j this co-occurrence specifies the state of Aj during the given transition in Ai, but if they differ then it specifies a transition in Aj that co-occurs with the transition in Ai. The strength of this interaction is calculated as the number of times we observe transitions for which both the condition and the consequence hold divided by the total number of observed transitions for which the condition holds.\nDefinition 7. Let M be a CSM with artifacts i and j, si, s \u2032 i \u2208 Si, si 6= s\u2032i, and sj , s\u2032j \u2208 Sj . The strength of the transition co-occurrence ((si, s\u2032i)\u21d2T (sj , s\u2032j)) is defined as:\nP\u0302T ((si, s \u2032 i)\u21d2T (sj , s\u2032j)) =\nfreqT (((si, sj), (s \u2032 i, s \u2032 j)),L {i,j} M )\nfreqT ((si, s\u2032i),L {i} M )\nIn Fig. 3 there are three types of transitions from Waiting on result (C) to Result ready (D): while the patient is Registered (W) (100 times), while the patient is In Treatment (Y) (70 times), and simultaneously together with a transition from In treatment (Y) to Healthy (Z) (20 times). Therefore, the strength of the transition co-occurrence ((C,D)\u21d2T (W,W )) is 100190 .\nForward-looking co-occurrence (si \u2227 sj \u21d2F (sj , s\u2032j)) is defined as the conditional probability that the next transition executed in Aj goes to state s\u2032j , given that Aj is in state sj and that Ai is in state si during and after the next transition in Aj . The strength of this interaction is calculated as the number of times we observe a transition from sj to s\u2032j while Ai has the specified state si divided by the total number of outgoing transitions from sj while Ai is in si.\nDefinition 8. LetM be a CSM with artifacts i and j, si \u2208 Si, and sj , s\u2032j \u2208 Sj , sj 6= s\u2032j . The strength of the forward-looking co-occurrence (si \u2227 sj \u21d2F (sj , s\u2032j)) is defined as:\nP\u0302F (si \u2227 sj \u21d2F (sj , s\u2032j)) =\nfreqT (((si, sj), (si, s \u2032 j)),L {i,j} M )\u2211\ns\u2032\u2032j \u2208Sj freqT (((si, sj), (si, s\u2032\u2032j )),L {i,j} M )\nIn Fig. 3 there are transitions from Waiting on result (C) to New test needed (E) that occur while the patient is In treatment (Y) (10 times). While In treatment (Y) and Waiting on result (C) there are also transitions to Result ready (D) (70 times). Therefore the interaction (Y \u2227 C \u21d2F (C,E)) has a strength of 1080 .\nIt is possible to calculate the artifact interactions defined above for all pairs of states and transitions of all pairs of artifacts. However, it is clear that this results in a very large number of interactions for a process analyst to inspect. One solution to this problem is to rank and filter the list of interactions to obtain the most interesting artifact relations and to present those to the analyst first."}, {"heading": "IV. ARTIFACT INTERACTION INTERESTINGNESS", "text": "In order to rank and filter artifact interactions based on their interestingness it is necessary to be able to quantify \u201cinterestingness\u201d. As we discussed in Section II, work has been performed in the field of association rule learning to develop measures of interestingness to help with the analysis of large sets of association rules [7], [8]. We have selected a number of such measures and we discuss their meaning and applicability in the context of artifact interactions that represent process behaviour."}, {"heading": "A. Probability Interpretation", "text": "The artifact interactions we defined in Section III-C are implications over binary stochastic variables representing statements of artifact behaviour. The implications are of the form (X \u21d2 Y ). Each statement X or Y is either true or false, with a certain probability that can be estimated from process execution data. The measures of interestingness objectively score statistical correlations between the variables based on these probabilities. We discuss the probabilities and their interpretations for each type of artifact interaction.\nState co-occurrence (si \u21d2S sj) is an implication between stochastic variables of the form (Xsi \u21d2 Ysj ) with Xsi defined as Ai has state si and Ysj defined as Aj has state sj . The probability of Xsi can be estimated based on the total sojourn time over all states:\nP\u0302S(Xsi) = soj(si,L{i}M )\u2211 s\u2208S soj(s,LM)\nTransition co-occurrence ((si, s\u2032i)\u21d2T (sj , s\u2032j)) is either an implication of the form (X(si,s\u2032i) \u21d2 Ysj ) if sj = s \u2032 j , with X(si,s\u2032i) defined as Ai is in transition from si to s \u2032 i, or it is an implication (X(si,s\u2032i) \u21d2 Y(sj ,s\u2032j)) if sj 6= s \u2032 j . Strictly speaking, the probability of X(si,s\u2032i) cannot be expressed because transitions are instantaneous and on a continuous time scale the probability to be in the specific point in time where the transition occurs is infinitesimal, i.e. not distinguishable from 0. As a result, a number of measures of interestingness would not be defined for transition co-occurrence. We express the probability based on the total frequency of transitions to avoid this issue:\nP\u0302T (X(si,s\u2032i)) = freqT ((si, s\n\u2032 i),L {i} M )\u2211\n(s,s\u2032)\u2208T freqT ((s, s\u2032),LM)\nForward-looking co-occurrence (si \u2227 sj \u21d2F (sj , s\u2032j)) is of the form (Xsi\u2227sj \u21d2 YF(sj ,s\u2032j)) with Xsi\u2227sj defined as Aj has state sj and Ai has state si during the next transition in Aj , and YF(sj ,s\u2032j) defined as the next transition in Aj is from sj to s\u2032j . The probability of Xsi\u2227sj is estimated by the probability\nto be in sj and the frequency of si in all possible transitions from sj :\nP\u0302F (Xsi\u2227sj ) = soj(sj ,L{j}M )\u2211 s\u2208S soj(s,LM)\n\u2217\u2211 s\u2032\u2032j \u2208Sj freqT (((si, sj), (si, s \u2032\u2032 j )),L\n{i,j} M )\u2211\ns\u2032\u2032j \u2208Sj freqT ((sj , s\u2032\u2032j ),L {j} M )\nBecause YF(sj ,s\u2032j) is only possible if Aj has state sj we can estimate it with the probability to be in sj and the frequency of each possible outgoing transition from sj :\nP\u0302F (YF(sj ,s\u2032j)) = soj(sj ,L{j}M )\u2211 s\u2208S soj(s,LM) \u2217\nfreqT ((sj , s \u2032 j),L {j} M )\u2211\ns\u2032\u2032j \u2208Sj freqT ((sj , s\u2032\u2032j ),L {j} M )"}, {"heading": "B. Measures of Interestingness", "text": "Below we present a selection of measures of interestingness that have been implemented in the CSM Miner to evaluate the interestingness of artifact interactions. The motivation for this selection is that each of these measures has an intuitive interpretation, and that evaluation studies in other application areas have shown that these measures have high predictive power and low collinearity with each other when used to approximate association rule interestingness [12].\nFor each measure we provide a definition, a short description of its intuitive meaning and its range. The measures are defined in terms of the probabilities of observing the conditions and consequences of the implications representing the different types of artifact interaction. Some measures are symmetric, i.e. their value for X \u21d2 Y is equal for Y \u21d2 X .\nConfidence: The confidence of an artifact interaction is also referred to as the strength of the prediction, which we introduced for each type of artifact interaction in Section III-C. It is defined as a conditional probability:\nconf(X \u21d2 Y ) = P (X \u21d2 Y ) = P (Y |X)\nThe range of conf is [0, 1] and it is asymmetric, i.e. in general conf(X \u21d2 Y ) 6= conf(Y \u21d2 X).\nSupport: In the context of association rule learning the support measure is traditionally defined as the frequency with which items occur in a set of transactions, which is an estimate of their probability of occurrence. In the setting of artifact interaction the support of individual statements is their probability interpretation as defined in the section above, e.g. supp(Xsi) = P\u0302S(Xsi) and supp(YF(sj ,s\u2032j)) = P\u0302F (YF(sj ,s\u2032j)). The support of an implication X \u21d2 Y is then the probability that the implication is true, multiplied by the probability of observing the condition of the implication:\nsupp(X \u21d2 Y ) = P (Y |X)P (X) = P (X \u2227 Y )\nThe range of supp is [0, 1] and it is symmetric.\nLift: The lift of an interaction is defined as the ratio between the probabilitiy of co-occurrence and the expected co-occurrence under statistical independence:\nlift(X \u21d2 Y ) = conf(X \u21d2 Y ) supp(Y ) = P (Y |X) P (Y ) = P (X \u2227 Y ) P (X)P (Y )\nThe range of lift is [0,\u221e] and it is symmetric. A lift measure of 0 indicates that they are never observed together, a value of 1 indicates that X and Y are independent, and a value above 1 indicates that X and Y are observed together more often than can be expected under conditions of statistical independence.\nConviction: The conviction of an interaction is similar to lift, but it is a directed measure. It looks at the expected probability of observing X without Y , i.e. the frequency of the implication being incorrect. It is defined as the ratio of the frequency of the implication being incorrect, if they were statistically independent, and the frequency of actual observations of the implication not holding:\nconvic(X \u21d2 Y ) = 1\u2212 supp(Y ) 1\u2212 conf(X \u21d2 Y ) = P (X)P (Y ) P (X \u2227 Y )\nThe range of convic is (0,\u221e] and it is asymmetric. A conviction measure of 1 indicates that X and Y are statistically independent, while a measure value of \u221e occurs for interactions that always hold in the observed data.\nCosine: The cosine measure is defined as the geometric mean of lift and support:\ncosine(X \u21d2 Y ) = supp(X \u21d2 Y )\u221a supp(X)supp(Y ) = P (X \u2227 Y )\u221a P (X)P (Y )\nThe range of cosine is [0, 1] and it is symmetric. It is a nullinvariant measurement, i.e. it is not affected by the number of observations involving neither X nor Y in the dataset, while e.g. the lift measure does not have this property.\nJaccard: The jaccard of an interaction is defined as the ratio between the probability of the co-occurrence of X and Y and the probability of observing either:\njaccard(X \u21d2 Y ) = supp(X \u21d2 Y ) supp(X) + supp(Y )\u2212 supp(X \u21d2 Y )\n= P (X \u2227 Y ) P (X \u2228 Y )\nThe range of jaccard is [0, 1], it is symmetric and a nullinvariant measurement. A jaccard measure of 0 means that items from X and Y are never observed together, and a value of 1 indicates that if they occur then they are always observed together.\nPhi-coefficient: The \u03c6-coefficient of an interaction is defined as the normalised difference between the probability of co-occurrence and the expected probability of co-occurrence under statistical independence:\n\u03c6(X \u21d2 Y ) = P (X \u2227 Y )\u2212 P (X)P (Y )\u221a P (X)P (Y )(1\u2212 P (X))(1\u2212 P (Y ))\nThe range of \u03c6 is [\u22121, 1] and it is symmetric. A value of 0 indicates that X and Y are statistically independent."}, {"heading": "V. ANALYSIS GUIDANCE IMPLEMENTATION", "text": "In this section we discuss the implementation of the analysis guidance in the CSM Miner [9], a plug-in1 in the process mining framework ProM.\nThe CSM Miner discovers a model of the artifact system and of each artifact in the input log, annotates them with sojourn times and frequencies, and presents them in an interactive visualisation. The interaction allows the user to click on a state or transition and this will highlight all other states and transitions for which supp(X \u21d2 Y ) > 0, based on either P\u0302S , P\u0302T or P\u0302F . The colour of the highlighting is dependent on conf(X \u21d2 Y ).\nThe analysis guidance for the exploration of artifact interactions is provided below the interactive model visualisation, as shown in Fig. 4. It provides a list of artifact interactions and for each interaction the measures discussed in Section IV are calculated. The user can sort the interactions by the measure values and can set minimum values for each measure to filter the list.\nWhen clicking on the artifact interactions in the list, the user is also presented with a textual interpretation based on four possible templates: \u2022 \u201cconf(si \u21d2S sj) of the total time spent in si is spent\nwhile being in sj\u201d (state co-occurrence) \u2022 \u201cTransitions from si to s\u2032i occur conf((si, s \u2032 i)\u21d2T sj) of\nthe times while being in sj\u201d (transition co-occurrence) \u2022 \u201cTransitions from si to s\u2032i occur conf((si, s \u2032 i) \u21d2T\n(sj , s \u2032 j)) of the times together with a transition from sj\nto s\u2032j\u201d (transition co-occurrence) \u2022 \u201cA transition from sj goes conf(si \u2227 sj \u21d2F (sj , s\u2032j))\nof the times to s\u2032j while being in si (compared to P\u0302F ((sj , s\u2032j)|sj) on average)\u201d (forward-looking cooccurrence)"}, {"heading": "VI. EVALUATION", "text": "To be able to create analysis guidance that suggests artifact interactions of interest to process analysts it is necessary to establish what qualifies as interesting or relevant. The measures introduced in Section IV are suggestions to quantify interest from the field of association rule learning, but it is unclear how these measures relate to the actual judgments of interest by process analysts. The aim of this evaluation is to show that the analysis guidance highlights behaviour in real life processes that is useful for understanding the process. Therefore, we compare the suggestions provided by the tool with insights obtained by other researchers using traditional process mining approaches on real life process data.\n1Contained in the CSMMiner package of the ProM 6 nightly build, available at http://www.promtools.org/."}, {"heading": "A. Process Description", "text": "The event data was taken from the BPI Challenge 2012 [13]. This dataset concerns process instances of a personal loan and overdraft application process at a Dutch financial institute. The events and activities in the log are related to three interrelated sub-processes, which can be considered as interacting process artifacts. The first artifact concerns the state of the application (A-states), the second relates to the work-items performed by the financial institute (W-states), and the third concerns the state of a potential offer that the institute can make to the applicant (O-states). This process has been analysed in several other papers [14], [15].\nThe overall process behavior is as follows. The process starts with the submission of the application. An unlogged check determines whether the application is pre-accepted or declined immediately. The application is accepted once all necessary information has been provided to complete the application. After the acceptance, the institute sends a concrete offer for the terms of the loan or overdraft to the applicant. When the response is returned, the application is validated and then accepted or declined. At any point in the process the applicant can decide to cancel their application and exit the process. In cases where the applicant does not respond in a timely manner, or if the application does not meet the criteria of the financial institute, then the application can be\ndeclined by the institute. In exceptional cases the financial institute checks the applications for fraud."}, {"heading": "B. Results", "text": "The data of the above process was mined by the CSM Miner and then analysed by looking at the measures of interestingness. We present a list of the top artifact interactions for several of the measures from Section IV and explain their relevance for understanding the process behaviour. Such lists can be obtained in the tool by sorting on the desired measure.\nTable II shows five examples of state co-occurrences with high conf scores. There are several state co-occurrences that have a conf score of 1, indicating that a given artifact state always co-occurs with a single state in another artifact. Not all of these are shown here because most are the result of the offer artifact not changing state from o::notStarted until after the application has been accepted. In general, the state co-occurrences with a high conf score indicate relations between artifact states that match the expected flow of the process as also described in other work [14]. For example, if the loan is activated then the offer has been accepted by the customer (a::activated \u21d2S o::accepted), and if the application is approved then the application has been validated (a::approved \u21d2S w::validation.end). Another example is that the financial institute only contacts the cus-\ntomer to follow-up on an offer after the offer has been sent (w::followupOffers.start \u21d2S o::sent). State co-occurrences highlighted with high conf scores can be compared to concurrent dependencies between events or activities in traditional process mining.\nBy contrast, a high supp measure indicates the cooccurring artifact states where a lot of time is spent. Table III shows the five pairs of artifact states with the highest supp scores; note that supp is a symmetric measure so condition and consequence are interchangeable. These results show that almost two thirds of the average time spent in a loan application is spent waiting for the customer to respond after the application has been finalised (a::finalized \u21d2S o::sent). During this period some time is spent calling the customer, but most of it is spent in between follow-ups (a::finalized \u21d2S w::followupOffers.end). Additionally, this measure shows that around 20% of the average total time is spent completing the application before an offer is sent out (a::preaccepted\u21d2S o::notStarted). These imbalances indicate a potential bottleneck at the customer. This shows that an initial overview of this measure can point out performance issues and encourage a process analyst to do a more thorough process performance and bottleneck analysis. The insights also match results from other process analyses [14], [15].\nA top five of most interesting artifact interactions according to the lift measure is shown in Table IV. lift shows relations between artifacts that are statistically strong in the sense that they occur much more often than would be expected by chance under independence assumptions. These results indicate that there are different reasons for an application to be declined (a::declined): the offer may have been declined (o::declined), the lead may not have matched the required criteria (a::declined \u21d2S w::processLeads.start), or fraud may have been discovered (a::declined \u21d2S w::fraudDetection.start). It also highlights the synchronisation between the cancellation of the application and the offer (a::cancelled \u21d2S o::cancelled), as lift is a symmetric. Although the results are not surprising given the process description and semantic understanding of the state names, lift does provide understanding of the strongest connections between artifacts.\nSimilar to lift, convic also provides an overview of strong\nrelations between artifacts, but this measure is asymmetric in condition and consequence. Table V shows several relations with high conviction. We have omitted relations that have even higher convic scores but that were also highlighted by the other measures. Again, the results show relations that are consistent with other analyses [14]. For example, given that the application has been validated we know that the offer must have been sent back, and given that the application has been accepted or preaccepted we know that the customer must have provided information to complete the application.\nThe top results for state co-occurrence in terms of cosine, jaccard and \u03c6 generally score high on at least one other measure. The exact order of the artifact interactions differs between the measures, but in general the state co-occurrence relations that are scored as most interesting are those that have a strong link to the overall behaviour of the application process.\nTable VI shows several transitions that always co-occur with the application state a::finalized. This means that these transitions, such as the creation and sending of an offer, are only enabled if the application has been finalized ((o::created,o::sent) \u21d2T a::finalized), i.e. if all the required information has been provided. In general, there are many trivial transition co-occurrences that have a conf of 1, which means there are clear synchronization points in the interaction between the artifacts. Other examples are related to the start of the process that only involves the application artifact.\nThere are many transition co-occurrences with high lift metric scores due to the clear synchronisation between artifacts. Table VII shows a number of these, with a minimum support of 0.001 to filter out patterns that are the result of very rare transitions. Especially the strong links between\nthe outcome of the application and the state of the offer are very clear again. Interestingly, there are transitions from the sending of the offer directly to its acceptance, without receiving a reply to the offer (o::sentBack). The lift measure shows that these transitions co-occur significantly often while calling the customer for incomplete information ((o::sent,o::accepted) \u21d2T w::callIncompleteFiles.start). This shows that it appears that the institute also allows the offer to be verbally accepted by customers during contact by phone. Also, a significant number of offers that were sent back and then cancelled were cancelled during contact by phone ((o::sentBack,o::cancelled) \u21d2T w::callIncompleteFiles.start). These observations are not immediately clear when looking at the control flow using traditional approaches [14], [15]\nThe above discussion shows that the presented approach is able to highlight artifact interactions that provide insights into the behaviour of a real life process. The insights obtained are comparable with those provided by traditional process mining approaches, but they do not require an analysis of the control flow of a complex or unstructured process model. Sorting and filtering functionalities ensure that the size of the list of potentially interesting artifact interactions remains manageable. However, there are often interactions that score well on multiple measures and it currently remains up to the user to identify the overlap between the top scoring interactions for two or more measures."}, {"heading": "VII. CONCLUSION & FUTURE WORK", "text": "In this paper we have presented an approach to objectively quantify the interestingness of interactions between artifacts in artifact-centric processes. This approach is based on measures of interestingness that have been defined in the context of process models. It highlights useful or surprising artifact interactions and thereby enables process analysts to deal with large or complex models. The approach has been implemented using an interactive process discovery tool, the CSM Miner, which has been shown to provide relevant insights on real life process execution data. Most of the insights discussed can also be obtained with traditional process mining techniques, but they require data preprocessing to obtain structured models and careful analysis of the behaviour of those complex models.\nWe aim to extend this work in several ways. The current evaluation is limited and provides only an indication of the usefulness of the approach in practice. We plan to conduct a user study to relate the objective measures of interestingness to the subjective interests of process analysts. Controlled experiments could also provide indications for cut-off or minimal values for the measures.\nExtensions of the approach itself are also possible. Instead of only looking at pairs of artifacts, we can generalise artifact interaction to sets of artifacts, similar to association rule learning. In contrast to association rule learning, infrequent relations may also be interesting when analysing a process. There is also room to improve the transformation of execution sequences into observations of artifact interaction. For example, correlations based on time intervals could be used to handle noise or non-fitting executions in the process data."}], "references": [{"title": "Process Mining - Data Science in Action, Second Edition", "author": ["W.M.P. van der Aalst"], "venue": null, "citeRegEx": "1", "shortCiteRegEx": "1", "year": 2016}, {"title": "Discovering and exploring state-based models for multi-perspective processes", "author": ["M.L. van Eck", "N. Sidorova", "W.M.P. van der Aalst"], "venue": "Business Process Management - 14th International Conference, BPM 2016, Rio de Janeiro, Brazil, September 18-22, 2016. Proceedings, 2016, pp. 142\u2013157.", "citeRegEx": "2", "shortCiteRegEx": null, "year": 2016}, {"title": "Proclets: A framework for lightweight interacting workflow processes", "author": ["W.M.P. van der Aalst", "P. Barthelmess", "C.A. Ellis", "J. Wainer"], "venue": "Int. J. Cooperative Inf. Syst., vol. 10, no. 4, pp. 443\u2013481, 2001.", "citeRegEx": "3", "shortCiteRegEx": null, "year": 2001}, {"title": "Artifact lifecycle discovery", "author": ["V. Popova", "D. Fahland", "M. Dumas"], "venue": "Int. J. Cooperative Inf. Syst., vol. 24, no. 1, 2015.", "citeRegEx": "4", "shortCiteRegEx": null, "year": 2015}, {"title": "Discovering interacting artifacts from ERP systems", "author": ["X. Lu", "M. Nagelkerke", "D. van de Wiel", "D. Fahland"], "venue": "IEEE Trans. Services Computing, vol. 8, no. 6, pp. 861\u2013873, 2015.", "citeRegEx": "5", "shortCiteRegEx": null, "year": 2015}, {"title": "Discovering unbounded synchronization conditions in artifact-centric process models", "author": ["V. Popova", "M. Dumas"], "venue": "Business Process Management Workshops - BPM 2013 International Workshops, Beijing, China, August 26, 2013, Revised Papers, 2013, pp. 28\u201340.", "citeRegEx": "6", "shortCiteRegEx": null, "year": 2013}, {"title": "Selecting the right objective measure for association analysis", "author": ["P. Tan", "V. Kumar", "J. Srivastava"], "venue": "Inf. Syst., vol. 29, no. 4, pp. 293\u2013 313, 2004.", "citeRegEx": "7", "shortCiteRegEx": null, "year": 2004}, {"title": "Analyzing the subjective interestingness of association rules", "author": ["B. Liu", "W. Hsu", "S. Chen", "Y. Ma"], "venue": "IEEE Intelligent Systems, vol. 15, no. 5, pp. 47\u201355, 2000.", "citeRegEx": "8", "shortCiteRegEx": null, "year": 2000}, {"title": "Composite state machine miner: Discovering and exploring multi-perspective processes", "author": ["M.L. van Eck", "N. Sidorova", "W.M.P. van der Aalst"], "venue": "Proceedings of the BPM Demo Track 2016 Co-located with the 14th International Conference on Business Process Management (BPM 2016), Rio de Janeiro, Brazil, September 21, 2016., 2016, pp. 73\u201377.", "citeRegEx": "9", "shortCiteRegEx": null, "year": 2016}, {"title": "Discovering hierarchical process models using prom", "author": ["R.P.J.C. Bose", "H.M.W.E. Verbeek", "W.M.P. van der Aalst"], "venue": "IS Olympics: Information Systems in a Diverse World - CAiSE Forum 2011, London, UK, June 20-24, 2011, Selected Extended Papers, 2011, pp. 33\u201348.", "citeRegEx": "10", "shortCiteRegEx": null, "year": 2011}, {"title": "Active trace clustering for improved process discovery", "author": ["J.D. Weerdt", "S.K.L.M. vanden Broucke", "J. Vanthienen", "B. Baesens"], "venue": "IEEE Trans. Knowl. Data Eng., vol. 25, no. 12, pp. 2708\u20132720, 2013.", "citeRegEx": "11", "shortCiteRegEx": null, "year": 2013}, {"title": "Comparing expert and metric-based assessments of association rule interestingness", "author": ["D.L. Bazaldua", "R.S. Baker", "M.O.S. Pedro"], "venue": "Proceedings of the 7th International Conference on Educational Data Mining, EDM 2014, London, UK, July 4-7, 2014, 2014, pp. 44\u201351.", "citeRegEx": "12", "shortCiteRegEx": null, "year": 2014}, {"title": "Bpi challenge 2012", "author": ["B.F. van Dongen"], "venue": "2012. [Online]. Available: http: //dx.doi.org/10.4121/uuid:3926db30-f712-4394-aebc-75976070e91f", "citeRegEx": "13", "shortCiteRegEx": null, "year": 2012}, {"title": "Process miningdriven optimization of a consumer loan approvals process - the BPIC 2012 challenge case study", "author": ["A.D. Bautista", "L. Wangikar", "S.M.K. Akbar"], "venue": "Business Process Management Workshops - BPM 2012 International Workshops, Tallinn, Estonia, September 3, 2012. Revised Papers, 2012, pp. 219\u2013220.", "citeRegEx": "14", "shortCiteRegEx": null, "year": 2012}, {"title": "Mining process performance from event logs", "author": ["A. Adriansyah", "J.C.A.M. Buijs"], "venue": "Business Process Management Workshops - BPM 2012 International Workshops, Tallinn, Estonia, September 3, 2012. Revised Papers, 2012, pp. 217\u2013218.", "citeRegEx": "15", "shortCiteRegEx": null, "year": 2012}], "referenceMentions": [{"referenceID": 0, "context": "Process discovery is the automated creation of process models that explain the behaviour captured in event data [1].", "startOffset": 112, "endOffset": 115}, {"referenceID": 0, "context": "One of the sources of complexity of discovered process models is that many process discovery approaches produce models that provide a monolithic view on the real process [1], [2].", "startOffset": 170, "endOffset": 173}, {"referenceID": 1, "context": "One of the sources of complexity of discovered process models is that many process discovery approaches produce models that provide a monolithic view on the real process [1], [2].", "startOffset": 175, "endOffset": 178}, {"referenceID": 2, "context": "However, in reality a process instance may involve several interacting process objects or artifacts, each with their own life-cycle [3],", "startOffset": 132, "endOffset": 135}, {"referenceID": 3, "context": "[4].", "startOffset": 0, "endOffset": 3}, {"referenceID": 1, "context": "Recently, it has become possible to automatically discover models for process artifacts and their behavioural interactions [2], [4], [5].", "startOffset": 123, "endOffset": 126}, {"referenceID": 3, "context": "Recently, it has become possible to automatically discover models for process artifacts and their behavioural interactions [2], [4], [5].", "startOffset": 128, "endOffset": 131}, {"referenceID": 4, "context": "Recently, it has become possible to automatically discover models for process artifacts and their behavioural interactions [2], [4], [5].", "startOffset": 133, "endOffset": 136}, {"referenceID": 1, "context": "Artifact-centric techniques can provide more structured process models than traditional discovery approaches [2].", "startOffset": 109, "endOffset": 112}, {"referenceID": 1, "context": "There are different ways to interpret the interaction of artifacts [2], [5], [6].", "startOffset": 67, "endOffset": 70}, {"referenceID": 4, "context": "There are different ways to interpret the interaction of artifacts [2], [5], [6].", "startOffset": 72, "endOffset": 75}, {"referenceID": 5, "context": "There are different ways to interpret the interaction of artifacts [2], [5], [6].", "startOffset": 77, "endOffset": 80}, {"referenceID": 6, "context": "Such measures have been developed in the field of association rule learning to quantify the relevance of relations between sets of items [7], [8].", "startOffset": 137, "endOffset": 140}, {"referenceID": 7, "context": "Such measures have been developed in the field of association rule learning to quantify the relevance of relations between sets of items [7], [8].", "startOffset": 142, "endOffset": 145}, {"referenceID": 8, "context": "We have extended our artifact-centric process discovery tool, the CSM Miner [9] in the ProM process mining framework,", "startOffset": 76, "endOffset": 79}, {"referenceID": 0, "context": "A plethora of algorithms and tools for automated process discovery emerged over the last decade [1].", "startOffset": 96, "endOffset": 99}, {"referenceID": 2, "context": "Several approaches have also been developed to take an object-oriented or artifactcentric view of process mining [3], [4].", "startOffset": 113, "endOffset": 116}, {"referenceID": 3, "context": "Several approaches have also been developed to take an object-oriented or artifactcentric view of process mining [3], [4].", "startOffset": 118, "endOffset": 121}, {"referenceID": 1, "context": "However, the number of techniques that can automatically discover the interactions between artifact models is limited [2], [5].", "startOffset": 118, "endOffset": 121}, {"referenceID": 4, "context": "However, the number of techniques that can automatically discover the interactions between artifact models is limited [2], [5].", "startOffset": 123, "endOffset": 126}, {"referenceID": 4, "context": "Like in monolithic process discovery, it is possible to establish causal dependencies between events that occur in different artifacts [5].", "startOffset": 135, "endOffset": 138}, {"referenceID": 5, "context": "It is also possible to link a stage in one artifact lifecycle to stages in related artifact lifecycles by discovering synchronization conditions [6].", "startOffset": 145, "endOffset": 148}, {"referenceID": 1, "context": "Similarly, one can identify artifact interaction defined as the co-occurrence of states and transitions from different artifacts as part of the states and transitions of the entire process [2].", "startOffset": 189, "endOffset": 192}, {"referenceID": 0, "context": "Most process discovery tools have filtering options or sliders to adjust which activities and dependencies between activities are shown, often based on frequency information [1].", "startOffset": 174, "endOffset": 177}, {"referenceID": 9, "context": "For some types of processes it is also possible to discover hierarchical process models that allow the analysis of a process at different levels of detail [10].", "startOffset": 155, "endOffset": 159}, {"referenceID": 10, "context": "Trace clustering is a technique to decompose the process data of flexible processes with many different process instance variants that share little overlap in behaviour [11].", "startOffset": 169, "endOffset": 173}, {"referenceID": 4, "context": "effect on the overall process behaviour is a challenge [5].", "startOffset": 55, "endOffset": 58}, {"referenceID": 6, "context": "This problem is related to the problem in association rule learning that association rule mining algorithms produce large numbers of rules that are not equally relevant [7], [8], [12].", "startOffset": 169, "endOffset": 172}, {"referenceID": 7, "context": "This problem is related to the problem in association rule learning that association rule mining algorithms produce large numbers of rules that are not equally relevant [7], [8], [12].", "startOffset": 174, "endOffset": 177}, {"referenceID": 11, "context": "This problem is related to the problem in association rule learning that association rule mining algorithms produce large numbers of rules that are not equally relevant [7], [8], [12].", "startOffset": 179, "endOffset": 183}, {"referenceID": 1, "context": "processes representing artifact systems and the life-cycles of artifacts as presented in [2].", "startOffset": 89, "endOffset": 92}, {"referenceID": 8, "context": "We developed the CSM Miner to support such models [9].", "startOffset": 50, "endOffset": 53}, {"referenceID": 1, "context": "Given a log, a CSM can be discovered that matches the execution sequences in the log [2].", "startOffset": 85, "endOffset": 88}, {"referenceID": 6, "context": "As we discussed in Section II, work has been performed in the field of association rule learning to develop measures of interestingness to help with the analysis of large sets of association rules [7], [8].", "startOffset": 197, "endOffset": 200}, {"referenceID": 7, "context": "As we discussed in Section II, work has been performed in the field of association rule learning to develop measures of interestingness to help with the analysis of large sets of association rules [7], [8].", "startOffset": 202, "endOffset": 205}, {"referenceID": 11, "context": "The motivation for this selection is that each of these measures has an intuitive interpretation, and that evaluation studies in other application areas have shown that these measures have high predictive power and low collinearity with each other when used to approximate association rule interestingness [12].", "startOffset": 306, "endOffset": 310}, {"referenceID": 0, "context": "The range of conf is [0, 1] and it is asymmetric, i.", "startOffset": 21, "endOffset": 27}, {"referenceID": 0, "context": "The range of supp is [0, 1] and it is symmetric.", "startOffset": 21, "endOffset": 27}, {"referenceID": 0, "context": "The range of cosine is [0, 1] and it is symmetric.", "startOffset": 23, "endOffset": 29}, {"referenceID": 0, "context": "The range of jaccard is [0, 1], it is symmetric and a nullinvariant measurement.", "startOffset": 24, "endOffset": 30}, {"referenceID": 8, "context": "In this section we discuss the implementation of the analysis guidance in the CSM Miner [9], a plug-in1 in the process mining framework ProM.", "startOffset": 88, "endOffset": 91}, {"referenceID": 12, "context": "The event data was taken from the BPI Challenge 2012 [13].", "startOffset": 53, "endOffset": 57}, {"referenceID": 13, "context": "This process has been analysed in several other papers [14], [15].", "startOffset": 55, "endOffset": 59}, {"referenceID": 14, "context": "This process has been analysed in several other papers [14], [15].", "startOffset": 61, "endOffset": 65}, {"referenceID": 13, "context": "In general, the state co-occurrences with a high conf score indicate relations between artifact states that match the expected flow of the process as also described in other work [14].", "startOffset": 179, "endOffset": 183}, {"referenceID": 13, "context": "The insights also match results from other process analyses [14], [15].", "startOffset": 60, "endOffset": 64}, {"referenceID": 14, "context": "The insights also match results from other process analyses [14], [15].", "startOffset": 66, "endOffset": 70}, {"referenceID": 13, "context": "Again, the results show relations that are consistent with other analyses [14].", "startOffset": 74, "endOffset": 78}, {"referenceID": 13, "context": "These observations are not immediately clear when looking at the control flow using traditional approaches [14], [15] The above discussion shows that the presented approach is able to highlight artifact interactions that provide insights into the behaviour of a real life process.", "startOffset": 107, "endOffset": 111}, {"referenceID": 14, "context": "These observations are not immediately clear when looking at the control flow using traditional approaches [14], [15] The above discussion shows that the presented approach is able to highlight artifact interactions that provide insights into the behaviour of a real life process.", "startOffset": 113, "endOffset": 117}], "year": 2017, "abstractText": "Artifact-centric process models aim to describe complex processes as a collection of interacting artifacts. Recent development in process mining allow for the discovery of such models. However, the focus is often on the representation of the individual artifacts rather than their interactions. Based on event data we can automatically discover composite state machines representing artifact-centric processes. Moreover, we provide ways of visualizing and quantifying interactions among different artifacts. For example, we are able to highlight strongly correlated behaviours in different artifacts. The approach has been fully implemented as a ProM plug-in; the CSM Miner provides an interactive artifact-centric process discovery tool focussing on interactions. The approach has been evaluated using real life data sets, including the personal loan and overdraft process of a Dutch financial institution.", "creator": "LaTeX with hyperref package"}}}