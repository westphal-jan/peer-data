{"id": "1708.06555", "review": {"conference": "EMNLP", "VERSION": "v1", "DATE_OF_SUBMISSION": "22-Aug-2017", "title": "Long-Short Range Context Neural Networks for Language Modeling", "abstract": "The goal of language modeling techniques is to capture the statistical and structural properties of natural languages from training corpora. This task typically involves the learning of short range dependencies, which generally model the syntactic properties of a language and/or long range dependencies, which are semantic in nature. We propose in this paper a new multi-span architecture, which separately models the short and long context information while it dynamically merges them to perform the language modeling task. A multispecific multispecific multispecific multispecific multispecific multispecific multispecific multispecific multispecific multispecific multispecific multispecific multispecific multispecific multispecific multispecific multispecific multispecific multispecific multispecific multispecific multispecific multispecific multispecific multispecific multispecific multispecific multispecific multispecific multispecific multispecific multispecific multispecific multispecific multispecific multispecific multispecific multispecific multispecific multispecific multispecific multispecific multispecific multispecific multispecific multispecific multispecific multispecific multispecific multispecific multispecific multispecific multispecific multispecific multispecific multispecific multispecific multispecific multispecific multispecific multispecific multispecific multispecific multispecific multispecific multispecific multispecific multispecific multispecific multispecific multispecific multispecific multispecific multispecific multispecific multispecific multispecific multispecific multispecific multispecific multispecific multispecific multispecific multispecific multispecific multispecific multispecific multispecific multispecific multispecific multispecific multispecific multispecific multispecific multispecific multispecific multispecific multispecific multispecific multispecific multispecific multispecific multispecific multispecific multispecific mult", "histories": [["v1", "Tue, 22 Aug 2017 10:26:41 GMT  (110kb,D)", "http://arxiv.org/abs/1708.06555v1", "Published at EMNLP'16"]], "COMMENTS": "Published at EMNLP'16", "reviews": [], "SUBJECTS": "cs.CL cs.LG", "authors": ["youssef oualil", "mittul singh", "clayton greenberg", "dietrich klakow"], "accepted": true, "id": "1708.06555"}, "pdf": {"name": "1708.06555.pdf", "metadata": {"source": "CRF", "title": "Long-Short Range Context Neural Networks for Language Modeling", "authors": ["Youssef Oualil", "Mittul Singh", "Clayton Greenberg", "Dietrich Klakow"], "emails": ["firstname.lastname@lsv.uni-saarland.de"], "sections": [{"heading": null, "text": "The goal of language modeling techniques is to capture the statistical and structural properties of natural languages from training corpora. This task typically involves the learning of short range dependencies, which generally model the syntactic properties of a language and/or long range dependencies, which are semantic in nature. We propose in this paper a new multi-span architecture, which separately models the short and long context information while it dynamically merges them to perform the language modeling task. This is done through a novel recurrent Long-Short Range Context (LSRC) network, which explicitly models the local (short) and global (long) context using two separate hidden states that evolve in time. This new architecture is an adaptation of the Long-Short Term Memory network (LSTM) to take into account the linguistic properties. Extensive experiments conducted on the Penn Treebank (PTB) and the Large Text Compression Benchmark (LTCB) corpus showed a significant reduction of the perplexity when compared to state-of-the-art language modeling techniques."}, {"heading": "1 Introduction", "text": "A high quality Language Model (LM) is considered to be an integral component of many systems for speech and language technology applications, such as machine translation (Brown et al., 1990), speech recognition (Katz, 1987), etc. The goal of an LM is to identify and predict probable sequences of predefined linguistic units, which are typically words.\nThese predictions are typically guided by the semantic and syntactic properties encoded by the LM.\nIn order to capture these properties, classical LMs were typically developed as fixed (short) context techniques such as, the word count-based methods (Rosenfeld, 2000; Kneser and Ney, 1995), commonly known as N -gram language models, as well as the Feedforward Neural Networks (FFNN) (Bengio et al., 2003), which were introduced as an alternative to overcome the exponential growth of parameters required for larger context sizes in N -gram models.\nIn order to overcome the short context constraint and capture long range dependencies known to be present in language, Bellegarda (1998a) proposed to use Latent Semantic Analysis (LSA) to capture the global context, and then combine it with the standard N -gram models, which capture the local context. In a similar but more recent approach, Mikolov and Zweig (2012) showed that Recurrent Neural Network (RNN)-based LM performance can be significantly improved using an additional global topic information obtained using Latent Dirichlet Allocation (LDA). In fact, although recurrent architectures theoretically allow the context to indefinitely cycle in the network, Hai Son et al. (2012) have shown that, in practice, this information changes quickly in the classical RNN (Mikolov et al., 2010) structure, and that it is experimentally equivalent to an 8-gram FFNN. Another alternative to model linguistic dependencies, Long-Short Term Memory (LSTM) (Sundermeyer et al., 2012), addresses some learning issues from the original RNN by controlling the longevity of context information in the netar X iv :1 70 8. 06 55\n5v 1\n[ cs\n.C L\n] 2\n2 A\nug 2\nwork. This architecture, however, does not particularly model long/short context but rather uses a single state to model the global linguistic context.\nMotivated by the works in (Bellegarda, 1998a; Mikolov and Zweig, 2012), this paper proposes a novel neural architecture which explicitly models 1) the local (short) context information, generally syntactic, as well as 2) the global (long) context, which is semantic in nature, using two separate recurrent hidden states. These states evolve in parallel within a long-short range context network. In doing so, the proposed architecture is particularly adapted to model natural languages that manifest local-global context information in their linguistic properties.\nWe proceed as follows. Section 2 presents a brief overview of short vs long range context language modeling techniques. Section 3 introduces the novel architecture, Long-Short Range Context (LSRC), which explicitly models these two dependencies. Then, Section 4 evaluates the proposed network in comparison to different state-of-the-art language models on the PTB and the LTCB corpus. Finally, we conclude in Section 5."}, {"heading": "2 Short vs Long Context Language Models", "text": "The goal of a language model is to estimate the probability distribution p(wT1 ) of word sequences wT1 = w1, \u00b7 \u00b7 \u00b7 , wT . Using the chain rule, this distribution can be expressed as\np(wT1 ) = T\u220f t=1 p(wt|wt\u221211 ) (1)\nThis probability is generally approximated under different simplifying assumptions, which are typically derived based on different linguistic observations. All these assumptions, however, aim at modeling the optimal context information, be it syntactic and/or semantic, to perform the word prediction. The resulting models can be broadly classified into two main categories: long and short range context models. The rest of this section presents a brief overview of these categories with a particular focus on Neural Network (NN)-based models."}, {"heading": "2.1 Short Range Context", "text": "This category includes models that approximate (1) based on the Markov dependence assumption of orderN\u22121. That is, the prediction of the current word\ndepends only on the last N \u2212 1 words in the history. In this case, (1) becomes\np(wT1 ) \u2248 T\u220f t=1 p(wt|wt\u22121t\u2212N+1) (2)\nThe most popular methods that subscribe in this category are the N -gram models (Rosenfeld, 2000; Kneser and Ney, 1995) as well as the FFNN model (Bengio et al., 2003), which estimates each of the terms involved in this product, i.e, p(wt|wt\u22121t\u2212N+1) in a single bottom-up evaluation of the network.\nAlthough these methods perform well and are easy to learn, the natural languages that they try to encode, however, are not generated under a Markov model due to their dynamic nature and the long range dependencies they manifest. Alleviating this assumption led to an extensive research to develop more suitable modeling techniques."}, {"heading": "2.2 Long Range Context", "text": "Conventionally, N-gram related LMs have not been built to capture long linguistic dependencies, although significant word triggering information is still available for large contexts. To illustrate such triggering correlations spread over a large context, we use correlation defined over a distance d, given by cd(w1, w2) =\nPd(w1,w2) P (w1)P (w2) . A value greater than 1 shows that it is more likely that the word w1 follows w2 at a distance d than expected without the occurrence ofw2. In Figure 1, we show the variation of this correlation for pronouns with the distance d. It can be observed that seeing another \u201che\u201d about twenty words after having seen a first \u201che\u201d is much more likely. A similar observation can be made for the word \u201cshe\u201d. It is, however, surprising that seeing \u201che\u201d after \u201che\u201d is three times more likely than seeing \u201cshe\u201d after \u201cshe\u201d, so \u201che\u201d is much more predictive. In the cases of cross-word triggering of \u201che\u201d\u2192 \u201cshe\u201d and \u201cshe\u201d\u2192 \u201che\u201d, we find that the correlation is suppressed in comparison to the same word triggering for distances larger than three. In summary, Figure 1 demonstrates that word triggering information exists at large distances, even up to one thousand words. These conclusions were confirmed by similar correlation experiments that we conducted\nfor different types of words and triggering relations.\nIn order to model this long-term correlation and overcome the restrictive Markov assumption, recurrent language models have been proposed to approximate (1) according to\np(wT1 ) \u2248 T\u220f t=1 p(wt|wt\u22121, ht\u22121) = T\u220f t=1 p(wt|ht) (3)\nIn NN-based recurrent models, ht is a context vector which represents the complete history, and modeled as a hidden state that evolves within the network."}, {"heading": "2.2.1 Elman-Type RNN-based LM", "text": "The classical RNN (Mikolov et al., 2010) estimates each of the product terms in (3) according to\nHt = f (Xt\u22121 + V \u00b7Ht\u22121) (4) Pt = g (W \u00b7Ht) (5)\nwhere Xt\u22121 is a continuous representation (i.e, embedding) of the word wt\u22121, V encodes the recurrent connection weights and W is the hidden-tooutput connection weights. These parameters define the network and are learned during training. Moreover, f(\u00b7) is an activation function, whereas g(\u00b7) is the softmax function. Figure (2) shows an example of the standard RNN architecture.\nTheoretically, the recurrent connections of an RNN allow the context to indefinitely cycle in the\nnetwork and thus, modeling long context. In practice, however, Hai Son et al. (2012) have shown that this information changes quickly over time, and that it is experimentally equivalent to an 8-gram FFNN. This observation was confirmed by the experiments that we report in this paper."}, {"heading": "2.2.2 Long-Short Term Memory Network", "text": "In order to alleviate the rapidly changing context issue in standard RNNs and control the longevity of the dependencies modeling in the network, the LSTM architecture (Sundermeyer et al., 2012) introduces an internal memory state Ct, which explicitly controls the amount of information, to forget or to add to the network, before estimating the current hidden state. Formally, this is done according to\n{i, f, o}t = \u03c3 ( U i,f,o \u00b7Xt\u22121 + V i,f,o \u00b7Ht\u22121 ) (6)\nC\u0303t = f (U c \u00b7Xt\u22121 + V c \u00b7Ht\u22121) (7)\nCt = ft Ct\u22121 + it C\u0303t (8) Ht = ot f (Ct) (9) Pt = g (W \u00b7Ht) (10)\nwhere is the element-wise multiplication operator, C\u0303t is the memory candidate, whereas it, ft and ot are the input, forget and output gates of the network, respectively. Figure 3 illustrates the recurrent module of an LSTM network. Learning of an LSTM model requires the training of the network parameters U i,f,o,c, V i,f,o,c and W .\nAlthough LSTM models have been shown to outperform classical RNN in modeling long range dependencies, they do not explicitly model long/short context but rather use a single state to encode the global linguistic context."}, {"heading": "3 Multi-Span Language Models", "text": "The attempts to learn and combine short and long range dependencies in language modeling led to what is known as multi-span LMs (Bellegarda, 1998a). The goal of these models is to learn the various constraints, both local and global, that are present in a language. This is typically done using two different models, which separately learn the local and global context, and then combine their resulting linguistic information to perform the word prediction. For instance, Bellegarda (1998b) proposed to use Latent Semantics Analysis (LSA) to capture the global context, and then combine it with the standard N -gram models, which capture the local context, whereas Mikolov and Zweig (2012) proposed to model the global topic information using Latent Dirichlet Allocation (LDA), which is then combined with an RNN-based LM. This idea is not particular to language modeling but has been also used in other Natural Language Processing (NLP) tasks, e.g., Anastasakos et al. (2014) proposed to use a local/global model to perform a spoken language understanding task."}, {"heading": "3.1 Long-Short Range Context Network", "text": "Following the line of thoughts in (Bellegarda, 1998b; Mikolov and Zweig, 2012), we propose a new multi-span model, which takes advantage of the LSTM ability to model long range context while, simultaneously, learning and integrating the short context through an additional recurrent, local state. In doing so, the resulting Long-Short Range Context (LSRC) network is able to separately model the\nshort/long context while it dynamically combines them to perform the next word prediction task. Formally, this new model is defined as\nH lt = f ( Xt\u22121 + U c l \u00b7H lt\u22121 ) (11)\n{i, f, o}t = \u03c3 ( V i,f,ol \u00b7H l t + V i,f,o g \u00b7H g t\u22121 ) (12)\nC\u0303t = f ( V cl \u00b7H lt + V cg \u00b7H g t\u22121 ) (13)\nCt = ft Ct\u22121 + it C\u0303t (14) Hgt = ot f (Ct) (15) Pt = g (W \u00b7Hgt ) (16)\nLearning of an LSRC model requires the training of the local parameters V i,f,o,cl and U c l , the global parameters V i,f,o,cg and the hidden-to-output connection weightsW . This can be done using the standard Back-Propagation Through Time (BPTT) algorithm, which is typically used to train recurrent networks.\nThe proposed approach uses two hidden states, namely, H lt and H g t to model short and long range context, respectively. More particularly, the local state H lt evolves according to (11) which is nothing but a simple recurrent model as it is defined in (4). In doing so, H lt is expected to have a similar behavior to RNN, which has been shown to capture local/short context (up to 10 words), whereas the global state Hgt follows the LSTM model, which is known to capture longer dependencies (see example in Figure 5). The main difference here, however, is the dependence of the network modules (gates and memory candidate) on the previous local state H lt instead of the last seen word Xt\u22121. This model is based on the assumption that the local context carries more linguistic information, and is therefore, more suitable to combine with the global context and update LSTM, compared to the last seen word. Figure 4 illustrates the recurrent module of an LSRC network. It is worth mentioning that this model was not particularly developed to separately learn syntactic and semantic information. This may come, however, as a result of the inherent local and global nature of these two types of linguistic properties."}, {"heading": "3.2 Context Range Estimation", "text": "For many NLP applications, capturing the global context information can be a crucial component to develop successful systems. This is mainly due to\nthe inherent nature of languages, where a single idea or topic can span over few sentences, paragraphs or a complete document. LSA-like approaches take advantage of this property, and aim at extracting some hidden \u201cconcepts\u201d that best explain the data in a lowdimension \u201csemantic space\u201d. To some extent, the hidden layer of LSRC/LSTM can be seen as a vector in a similar space. The information stored in this vector, however, changes continuously based on the processed words. Moreover, interpreting its content is generally difficult. As an alternative, measuring the temporal correlation of this hidden vector can be used as an indicator of the ability of the network to model short and long context dependencies. Formally, the temporal correlation of a hidden state H over a distance d is given by\ncd = 1\nD t=D\u2211 t=1 SM(Ht, Ht+d) (17)\nwhere D is the test data size in words and SM is a similarity measure such as the cosine similarity. This measure allows us to evaluate how fast does the information stored in the hidden state change over time.\nIn Figure 5, we show the variation of this temporal correlation for the local and global states of the proposed LSRC network in comparison to RNN and LSTM for various values of the distance d (up to 3000). This figure was obtained on the test set of the Penn Treebank (PTB) corpus, described in Section (4). The main conclusion we can draw from this figure is the ability of the LSRC local and global\nstates (trained jointly) to behave in a similar fashion to RNN and LSTM states (trained separately), respectively. We can also conclude that the LSRC global state and LSTM are able to capture long range correlations, whereas the context changes rapidly over time in RNN and LSRC local state."}, {"heading": "4 Experiments and Results", "text": ""}, {"heading": "4.1 Experimental Setup", "text": "We evaluated the proposed architecture on two different benchmark tasks. The first set of experiments was conducted on the commonly used Penn Treebank (PTB) corpus using the same experimental setup adopted in (Mikolov et al., 2011) and (Zhang et al., 2015). Namely, sections 0-20 are used for training while sections 21-22 and 23-24 are used for validation an testing, respectively. The vocabulary was limited to the most 10k frequent words while the remaining words were mapped to the token <unk>.\nIn order to evaluate how the proposed approach performs on large corpora in comparison to other methods, we run a second set of experiments on the Large Text Compression Benchmark (LTCB) (Mahoney, 2011). This corpus is based on the enwik9 dataset which contains the first 109 bytes of enwiki20060303-pages-articles.xml. We adopted the same training-test-validation data split as well as the the same data processing1 which were used in (Zhang et al., 2015). The vocabulary is limited to the most 80k\n1All the data processing steps described here for PTB and LTCB were performed using the FOFE toolkit in (Zhang et al., 2015), which is available at https://wiki.eecs.yorku.ca/lab/MLL/_media/ projects:fofe:fofe-code.zip\nfrequent words with all remaining words replaced by <unk>. Details about the sizes of these two corpora can be found in Table 1.\nSimilarly to the RNN LM toolkit2 (Mikolov et al., 2011), we have used a single end sentence tag between each two consecutive sentences, whereas the begin sentence tag was not included3."}, {"heading": "4.2 Baseline Models", "text": "The proposed LSRC architecture is compared to different LM approaches that model short or long range context. These include the commonly used N -gram Kneser-Ney (KN) (Kneser and Ney, 1995) model with and without cache (Kuhn and De Mori, 1990), as well as different feedforward and recurrent neural architectures. For short (fixed) size context models, we compare our method to 1) the FFNNbased LM (Bengio et al., 2003), as well as 2) the Fixed-size Ordinally Forgetting Encoding (FOFE) approach, which is implemented in (Zhang et al., 2015) as a sentence-based model. For these short size context models, we report the results of different history window sizes (1, 2 and 4). The 1st, 2nd and 4th-order FOFE results were either reported in (Zhang et al., 2015) or obtained using the freely available FOFE toolkit 1.\nFor recurrent models that were designed to capture long term context, we compared the proposed approach to 3) the full RNN (without classes) (Mikolov et al., 2011), 4) to a deep RNN (D-RNN)4 (Pascanu et al., 2013), which investigates different approaches to construct mutli-layer RNNs, and finally 5) to the LSTM model (Sundermeyer et al., 2012), which explicitly regulates the amount of\n2The RNN LM toolkit is available at http://www. rnnlm.org/\n3This explains the difference in the corpus size compared to the one reported in (Zhang et al., 2015).\n4The deep RNN results were obtained using Lp and maxout units, dropout regularization and gradient control techniques, which are known to significantly improve the performance. None of these techniques, however, were used in our experiments.\ninformation that propagates in the network. The recurrent models results are reported for different numbers of hidden layers (1 or 2). In order to investigate the impact of deep models on the LSRC architecture, we added a single hidden, non-recurrent layer (of size 400 for PTB and 600 for the LTCB experiments) to the LSRC model (D-LSRC). This was sufficient to improve the performance with a negligible increase in the number of model parameters."}, {"heading": "4.3 PTB Experiments", "text": "For the PTB experiments, the FFNN and FOFE models use a word embedding size of 200, whereas the hidden layer(s) size is fixed at 400, with all hidden units using the Rectified Linear Unit (ReLu) i.e., f(x) = max(0, x) as activation function. We also use the same learning setup adopted in (Zhang et al., 2015). Namely, we use the stochastic gradient descent algorithm with a mini-batch size of 200, the learning rate is initialized to 0.4, the momentum is set to 0.9, the weight decay is fixed at 4\u00d710\u22125, whereas the training is done in epochs. The weights initialization follows the normalized initialization proposed in (Glorot and Bengio, 2010). Similarly to (Mikolov et al., 2010), the learning rate is halved when no significant improvement of the validation data log-likelihood is observed. Then, we continue with seven more epochs while halving the learning rate after each epoch.\nRegarding the recurrent models, we use f = tanh(\u00b7) as activation function for all recurrent layers, whereas \u201df = sigmoid(\u00b7)\u201d is used for the input, forget and output gates of LSTM and LSRC. The additional non-recurrent layer in D-LSRC, however, uses the ReLu activation function. The word embedding size was set to 200 for LSTM and LSRC whereas it is the same as the hidden layer size for RNN (result of the RNN equation 4). In order to illustrate the effectiveness of the LSRC model, we also report the results when the embedding size is fixed at 100, LSRC(100). The training uses the BPTT algorithm for 5 time steps. Similarly to short context models, the mini-batch was set to 200. The learning rate, however, was set to 1.0 and the weight decay to 5 \u00d7 10\u22125. The use of momentum did not lead to any additional improvement. Moreover, the data is processed sequentially without any sentence independence assumption. Thus, the recurrent mod-\nels will be able to capture long range dependencies that exist beyond the sentence boundary.\nIn order to compare the model sizes, we also report the Number of Parameters (NoP) to train for each of the models above.\nTable 2 shows the perplexity evaluation on the PTB test set. As a first observation, we can clearly see that the proposed approach outperforms all other models for all configurations, in particular, RNN and LSTM. This observation includes other models that were reported in the literature, such as random forest LM (Xu and Jelinek, 2007), structured LM (Filimonov and Harper, 2009) and syntactic neural network LM (Emami and Jelinek, 2004). More particularly, we can conclude that LSRC, with an embedding size of 100, achieves a better performance than all other models while reducing the number of parameters by \u2248 29% and \u2248 17% compared to RNN and LSTM, respectively. Increasing the embedding size to 200, which is used by the other models, improves significantly the performance with a resulting NoP comparable to LSTM. The significance of the improvements obtained here over LSTM were confirmed through a statistical significance t-test, which\nled to p-values \u2264 10\u221210 for a significance level of 5% and 0.01%, respectively.\nThe results of the deep models in Table 2 also show that adding a single non-recurrent hidden layer to LSRC can significantly improve the performance. In fact, the additional layer bridges the gap between the LSRC models with an embedding size of 100 and 200, respectively. The resulting architectures outperform the other deep recurrent models with a significant reduction of the number of parameters (for the embedding size 100), and without usage of dropout regularization, Lp and maxout units or gradient control techniques compared to the deep RNN4(D-RNN).\nWe can conclude from these experiments that the explicit modeling of short and long range dependencies using two separate hidden states improves the performance while significantly reducing the number of parameters.\nIn order to show the consistency of the LSRC improvement over the other recurrent models, we report the variation of the models performance with respect to the hidden layer size in Figure 6. This figure shows that increasing the LSTM or RNN hidden layer size could not achieve a similar performance to the one obtained using LSRC with a small layer size (e.g., 300). It is also worth mentioning that this observation holds when comparing a 2-recurrent layers LSTM to LSRC with an additional non-recurrent layer."}, {"heading": "4.4 LTCB Experiments", "text": "The LTCB experiments use the same PTB setup with minor modifications. The results shown in Table 3 follow the same experimental setup proposed in (Zhang et al., 2015). More precisely, these results were obtained without use of momentum or weight decay (due to the long training time required for this corpus), the mini-batch size was set to 400, the learning rate was set to 0.4 and the BPTT step was fixed at 5. The FFNN and FOFE architectures use 2 hidden layers of size 600, whereas RNN, LSTM and LSRC have a single hidden layer of size 600. Moreover, the word embedding size was set to 200 for all models except RNN, which was set to 600. We also report results for an LSTM with 2 recurrent layers as well as for LSRC with an additional non-recurrent layer. The recurrent layers are marked with an \u201cR\u201d in Table 3.\nThe results shown in Table 3 generally confirm the conclusions we drew from the PTB experiments above. In particular, we can see that the proposed LSRC model largely outperforms all other models. In particular, LSRC clearly outperforms LSTM with a negligible increase in the number of parameters (resulting from the additional 200 \u00d7 200 = 0.04M local connection weights U cl ) for the single layer results. We can also see that this improvement is maintained for deep models (2 hidden layers), where the LSRC model achieves a slightly better performance while reducing the number of parameters by \u2248 2.5M and speeding up the training time by \u2248 20% compared to deep LSTM.\nThe PTB and LTCB results clearly highlight the\nimportance of recurrent models to capture long range dependencies for LM tasks. The training of these models, however, requires large amounts of data to significantly outperform short context models. This can be seen in the performance of RNN and LSTM in the PTB and LTCB tables above. We can also conclude from these results that the explicit modeling of long and short context in a multi-span model can lead to a significant improvement over state-of-the are models."}, {"heading": "5 Conclusion and Future Work", "text": "We investigated in this paper the importance, followed by the ability, of standard neural networks to encode long and short range dependencies for language modeling tasks. We also showed that these models were not particularly designed to, explicitly and separately, capture these two linguistic information. As an alternative solution, we proposed a novel long-short range context network, which takes advantage of the LSTM ability to capture long range dependencies, and combines it with a classical RNN network, which typically encodes a much shorter range of context. In doing so, this network is able to encode the short and long range linguistic dependencies using two separate network states that evolve in time. Experiments conducted on the PTB and the large LTCB corpus have shown that the proposed approach significantly outperforms different state-of-the are neural network architectures, including LSTM and RNN, even when smaller architectures are used. This work, however, did not investigate the nature of the long and short context encoded by this network or its possible applications for other NLP tasks. This is part of our future work."}, {"heading": "Acknowledgments", "text": "This work was in part supported by the Cluster of Excellence for Multimodal Computing and Interaction, the German Research Foundation (DFG) as part of SFB 1102, the EU FP7 Metalogue project (grant agreement number: 611073) and the EU Malorca project (grant agreement number: 698824)."}], "references": [{"title": "A multispan language modeling framework for large vocabulary speech recognition", "author": ["J.R. Bellegarda"], "venue": "IEEE Transactions on Speech and Audio Processing,", "citeRegEx": "Bellegarda.,? \\Q1998\\E", "shortCiteRegEx": "Bellegarda.", "year": 1998}, {"title": "Exploiting both local and global constraints for multispan statistical language modeling", "author": ["Jerome R. Bellegarda"], "venue": "In Proceedings of the 1998 IEEE International Conference on Acoustics, Speech and Signal Processing,", "citeRegEx": "Bellegarda.,? \\Q1998\\E", "shortCiteRegEx": "Bellegarda.", "year": 1998}, {"title": "A neural probabilistic language model", "author": ["Bengio et al.2003] Yoshua Bengio", "R\u00e9jean Ducharme", "Pascal Vincent", "Christian Jauvin"], "venue": "J. Mach. Learn. Res.,", "citeRegEx": "Bengio et al\\.,? \\Q2003\\E", "shortCiteRegEx": "Bengio et al\\.", "year": 2003}, {"title": "A statistical approach to machine translation", "author": ["Brown et al.1990] Peter F. Brown", "John Cocke", "Stephen A. Della Pietra", "Vincent J. Della Pietra", "Fredrick Jelinek", "John D. Lafferty", "Robert L. Mercer", "Paul S. Roossin"], "venue": "Comput. Linguist.,", "citeRegEx": "Brown et al\\.,? \\Q1990\\E", "shortCiteRegEx": "Brown et al\\.", "year": 1990}, {"title": "Exact training of a neural syntactic language model", "author": ["Emami", "Jelinek2004] Ahmad Emami", "Frederick Jelinek"], "venue": "In IEEE International Conference on Acoustics, Speech, and Signal Processing (ICASSP),", "citeRegEx": "Emami et al\\.,? \\Q2004\\E", "shortCiteRegEx": "Emami et al\\.", "year": 2004}, {"title": "A joint language model with fine-grain syntactic tags", "author": ["Filimonov", "Harper2009] Denis Filimonov", "Mary P. Harper"], "venue": "In Proceedings of the 2009 Conference on Empirical Methods in Natural Language Processing (EMNLP), A meeting of SIGDAT,", "citeRegEx": "Filimonov et al\\.,? \\Q2009\\E", "shortCiteRegEx": "Filimonov et al\\.", "year": 2009}, {"title": "Understanding the difficulty of training deep feedforward neural networks", "author": ["Glorot", "Bengio2010] Xavier Glorot", "Yoshua Bengio"], "venue": "In Proceedings of the Thirteenth International Conference on Artificial Intelligence and Statistics (AISTATS),", "citeRegEx": "Glorot et al\\.,? \\Q2010\\E", "shortCiteRegEx": "Glorot et al\\.", "year": 2010}, {"title": "Measuring the influence of long range dependencies with neural network language models", "author": ["Hai Son et al.2012] Le Hai Son", "Alexandre Allauzen", "Fran\u00e7ois Yvon"], "venue": "In Proceedings of the NAACL-HLT 2012 Workshop: Will We Ever Really Replace the N-", "citeRegEx": "Son et al\\.,? \\Q2012\\E", "shortCiteRegEx": "Son et al\\.", "year": 2012}, {"title": "Estimation of probabilities from sparse data for the language model component of a speech recognizer", "author": ["S. Katz"], "venue": "IEEE Transactions on Acoustics, Speech, and Signal Processing,", "citeRegEx": "Katz.,? \\Q1987\\E", "shortCiteRegEx": "Katz.", "year": 1987}, {"title": "A cache-based natural language", "author": ["De Mori"], "venue": null, "citeRegEx": "Mori.,? \\Q1990\\E", "shortCiteRegEx": "Mori.", "year": 1990}], "referenceMentions": [{"referenceID": 3, "context": "A high quality Language Model (LM) is considered to be an integral component of many systems for speech and language technology applications, such as machine translation (Brown et al., 1990), speech recognition (Katz, 1987), etc.", "startOffset": 170, "endOffset": 190}, {"referenceID": 8, "context": ", 1990), speech recognition (Katz, 1987), etc.", "startOffset": 28, "endOffset": 40}, {"referenceID": 2, "context": "In order to capture these properties, classical LMs were typically developed as fixed (short) context techniques such as, the word count-based methods (Rosenfeld, 2000; Kneser and Ney, 1995), commonly known as N -gram language models, as well as the Feedforward Neural Networks (FFNN) (Bengio et al., 2003), which were introduced as an alternative to overcome the exponential growth of parameters required for larger context sizes in N -gram models.", "startOffset": 285, "endOffset": 306}, {"referenceID": 0, "context": "In order to overcome the short context constraint and capture long range dependencies known to be present in language, Bellegarda (1998a) proposed to use Latent Semantic Analysis (LSA) to capture the global context, and then combine it with the standard N -gram models, which capture the local context.", "startOffset": 119, "endOffset": 138}, {"referenceID": 0, "context": "In order to overcome the short context constraint and capture long range dependencies known to be present in language, Bellegarda (1998a) proposed to use Latent Semantic Analysis (LSA) to capture the global context, and then combine it with the standard N -gram models, which capture the local context. In a similar but more recent approach, Mikolov and Zweig (2012) showed that Recurrent Neural Network (RNN)-based LM performance can be significantly improved using an additional global topic information obtained using Latent Dirichlet Allocation (LDA).", "startOffset": 119, "endOffset": 367}, {"referenceID": 0, "context": "In order to overcome the short context constraint and capture long range dependencies known to be present in language, Bellegarda (1998a) proposed to use Latent Semantic Analysis (LSA) to capture the global context, and then combine it with the standard N -gram models, which capture the local context. In a similar but more recent approach, Mikolov and Zweig (2012) showed that Recurrent Neural Network (RNN)-based LM performance can be significantly improved using an additional global topic information obtained using Latent Dirichlet Allocation (LDA). In fact, although recurrent architectures theoretically allow the context to indefinitely cycle in the network, Hai Son et al. (2012) have shown that, in practice, this information changes quickly in the classical RNN (Mikolov et al.", "startOffset": 119, "endOffset": 690}, {"referenceID": 2, "context": "The most popular methods that subscribe in this category are the N -gram models (Rosenfeld, 2000; Kneser and Ney, 1995) as well as the FFNN model (Bengio et al., 2003), which estimates each of the terms involved in this product, i.", "startOffset": 146, "endOffset": 167}, {"referenceID": 7, "context": "In practice, however, Hai Son et al. (2012) have shown that this information changes quickly over time, and that it is experimentally equivalent to an 8-gram FFNN.", "startOffset": 26, "endOffset": 44}, {"referenceID": 0, "context": "The attempts to learn and combine short and long range dependencies in language modeling led to what is known as multi-span LMs (Bellegarda, 1998a). The goal of these models is to learn the various constraints, both local and global, that are present in a language. This is typically done using two different models, which separately learn the local and global context, and then combine their resulting linguistic information to perform the word prediction. For instance, Bellegarda (1998b) proposed to use Latent Semantics Analysis (LSA) to capture the global context, and then combine it with the standard N -gram models, which capture the local context, whereas Mikolov and Zweig (2012) proposed to model the global topic information using Latent Dirichlet Allocation (LDA), which is then combined with an RNN-based LM.", "startOffset": 129, "endOffset": 491}, {"referenceID": 0, "context": "The attempts to learn and combine short and long range dependencies in language modeling led to what is known as multi-span LMs (Bellegarda, 1998a). The goal of these models is to learn the various constraints, both local and global, that are present in a language. This is typically done using two different models, which separately learn the local and global context, and then combine their resulting linguistic information to perform the word prediction. For instance, Bellegarda (1998b) proposed to use Latent Semantics Analysis (LSA) to capture the global context, and then combine it with the standard N -gram models, which capture the local context, whereas Mikolov and Zweig (2012) proposed to model the global topic information using Latent Dirichlet Allocation (LDA), which is then combined with an RNN-based LM.", "startOffset": 129, "endOffset": 690}, {"referenceID": 0, "context": "The attempts to learn and combine short and long range dependencies in language modeling led to what is known as multi-span LMs (Bellegarda, 1998a). The goal of these models is to learn the various constraints, both local and global, that are present in a language. This is typically done using two different models, which separately learn the local and global context, and then combine their resulting linguistic information to perform the word prediction. For instance, Bellegarda (1998b) proposed to use Latent Semantics Analysis (LSA) to capture the global context, and then combine it with the standard N -gram models, which capture the local context, whereas Mikolov and Zweig (2012) proposed to model the global topic information using Latent Dirichlet Allocation (LDA), which is then combined with an RNN-based LM. This idea is not particular to language modeling but has been also used in other Natural Language Processing (NLP) tasks, e.g., Anastasakos et al. (2014) proposed to use a local/global model to perform a spoken language understanding task.", "startOffset": 129, "endOffset": 977}, {"referenceID": 2, "context": "For short (fixed) size context models, we compare our method to 1) the FFNNbased LM (Bengio et al., 2003), as well as 2) the Fixed-size Ordinally Forgetting Encoding (FOFE) approach, which is implemented in (Zhang et al.", "startOffset": 84, "endOffset": 105}], "year": 2017, "abstractText": null, "creator": "LaTeX with hyperref package"}}}