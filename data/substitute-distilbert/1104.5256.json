{"id": "1104.5256", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "27-Apr-2011", "title": "Learning Undirected Graphical Models with Structure Penalty", "abstract": "observing undirected graphical models, learning the graph structure and learning the functions involved relate the program variables ( profiles ) to functional responses within the structure are two topics that have topics widely investigated in machine learning and optimization. learning graphical models in two volumes will have vanishing because graph structure mysteriously disappear after considering the features. the central contribution of this paper is the proposed method that expresses the graph structure and functions on the interval against the same time. general graphical models with binary outcomes conditioned on predictive variables easily proved to be equivalent to multivariate bernoulli model. the reparameterization of the potential functions in graphical model by conditional log odds ratios in multivariate bernoulli model offers advantage in the representation of the conditional independence structure in the model. additionally, we can formal structure penalty on groups of conditional log odds ratios to perform the graph structure. these groups of functions are designed with overlaps to enforce hierarchical function selection. in this way, we are known to shrink higher symmetry interactions to obtain a sparse tree structure. simulation studies show that the method is able to recover the graph structure. the analysis of county data from census bureau gives interesting relations relating unemployment rate, crime and others discovered by the model.", "histories": [["v1", "Wed, 27 Apr 2011 21:40:09 GMT  (102kb,S)", "http://arxiv.org/abs/1104.5256v1", "20 pages, 3 figures"]], "COMMENTS": "20 pages, 3 figures", "reviews": [], "SUBJECTS": "cs.AI cs.LG", "authors": ["shilin ding"], "accepted": false, "id": "1104.5256"}, "pdf": {"name": "1104.5256.pdf", "metadata": {"source": "CRF", "title": "Learning Undirected Graphical Models with Structure Penalty", "authors": ["Shilin Ding"], "emails": ["sding@stat.wisc.edu"], "sections": [{"heading": null, "text": "ar X\niv :1\n10 4.\n52 56\nv1 [\ncs .A\nI] 2\n7 A"}, {"heading": "1. Introduction", "text": "In undirected graphical models (Markov Random Fields), a graph G is defined as G = (V,E), where V = {1, \u00b7 \u00b7 \u00b7 ,K} is the set of nodes and E \u2282 V \u00d7V is the set of links between the nodes. In fact, V is associated to a set of multivariate response variables Y1, \u00b7 \u00b7 \u00b7 , YK , and E specifies the conditional independence structure among them. For example, a link between two nodes i, j indicates a pairwise interaction f ij. , and a clique between three nodes i, j, k indicates a third order interaction f ijk. These functions formulate the effects of predicative variables (features), X, on the responses and their interactions.\nGraphical models have been used in many applications. Conditional Random Fields (CRF) (Lafferty et al., 2001) and their extensions, e.g. dynamic CRF (Sutton et al., 2007), are well known in Natural Language Processing community. The CRFs achieve great success in sequentially structured text, by modeling the interaction of labels (Y ) on the nodes conditioned flexibly on the features (X). There are also numerous applications of graphical\nmodels to computer vision (Szeliski et al., 2007; Honorio and Samaras, 2010). Ising model is another classical example that draws great interest in image processing (Williams et al., 2004) and also has been recently applied to social networks (Banerjee et al., 2008).\nThe intuition of utilizing a graph structure is that some responses are related while others are not. However, in many cases, the graph is pre-determined by domain knowledge. For example, Duan et al. (2008) proposed a collective model for labeling music signals with fully connected graph, which they called collective conditional random fields. They have 10 semantic categories such as genre (blues, rap, . . . ), instrument (guitar, piano, . . . ), production (studio, live), rhythm(strong, weak, middle), and etc. It is possible that some links are not necessary: e.g. production and instrument. Estimating the parameters on these relations will lead to over-fitting. Therefore, graph structure learning is an important aspect of relation discovery in multivariate response applications and multi-task learning.\nMany papers have focused on the graphical model selection issue. Meinshausen and Buhlmann (2006) and Peng et al. (2009) studied sparse covariance estimation of Gaussian outcomes (Speed and Kiiveri, 1986) without input features. The covariance matrix determines the dependence structure in the Gaussian distribution and its sparsity specifies the linkage in Gaussian Markov Random Fields. This is not the case for non-elliptical distribution, such as the distribution of discrete random variables. Ravikumar et al. (2010) focused on graph structure selection of Ising model based on l1-regularized logistic regression. It gave sufficient conditions for consistently estimating the neighborhood of the nodes, without input features. However, two marginally independent response variables may become dependent after conditioning onX. So, ignoring the predicative variables may lead to inconsistent estimation of the graph structure. To the best of our knowledge, there is no previous work addressed the issue of learning the graph structure and the functions associated with the graph at the same time.\nIn this paper, our first contribution is the proof of the equivalence between the general graphical model with bivariate outcomes and multivariate Bernoulli (MVB) model. The functions that represent the effects of predicative variables on responses and their interactions (at all levels) can be formulated in MVB model, which is endowed with the advantage of interpreting the graph structure. It follows from the sparsity of links in the graphical models that some functions are constant zero, which means certain responses are conditionally independent. Therefore, we impose the structure penalty on groups of functions with overlaps to obtain sparse estimation of the graph structure. These groups are designed to enforce the sparsity on the functions and shrink higher order interactions so that they only appear after their lower components have entered the model.\nThe paper is organized as follows: Section 2 introduces graphical models and their relation with multivariate Bernoulli model. Section 3 and 4 discusses the model for learning the graph structure and the functions on the graph through structure penalty. The experiments are shown and discussed in Section 5. Section 6 gives the conclusion and future work."}, {"heading": "2. Conditional Independence in Graphical Models", "text": "The notations in this paper are summarized in Table 1.\nIn graphical models, G = (V,E), the distribution of multivariate discrete random variables Y1, . . . , YK is:\np(Y1 = y1, . . . , YK = yK |X) = 1\nZ(X)\n\u220f\nC\u2208C\n\u03a6C(yC ;X) (1)\nwhere Z is the normalization factor. The distribution is factorized according to the cliques in the graph. A clique C \u2282 \u2126 = {1, . . . ,K} is the set of nodes of a fully connected subgraph. \u03a6C(yC ;X) is the potential function on C. It depends on yC = {yi | i \u2208 C} and the predicative variables X which are shared across all response variables. One example of application is to model the relations of multiple clinical responses (hypertension, diabetes, etc.) and how they are affected by the person\u2019s genetic variables and environmental variables (smoking, income, etc.).\nFor the purpose of efficient computation, C is usually the set of all maximal cliques of the graph. The maximal clique is a clique that is not properly contained in any other clique in the graph. Different representations with C as the set of non-maximal cliques can be converted to maximal clique representation by redefinition of the potential functions (Wainwright and Jordan, 2008). Furthermore, C does not have to reflect the graph structure, as long as it is sufficient. For example, the most general choice for any given\ngraphical model is C = {\u2126}. The conditional independence between the response variables is implicitly formulated by the restrictions on the potential functions. See Theorem 2.2 and Example 2.1 for details.\nThe Markov property states that any two nodes not in a clique are conditionally independent given other nodes. For example, Ys, Yt are conditionally independent given all other variables that block the path from Ys to Yt. Therefore, C as the set of maximal cliques factorizes the graph and specifies the conditional independence in the model. In Figure 1(a), we have 2 cliques {1, 2, 3} and {3, 4}. In this case, {Y2, Y4} are conditionally independent given Y3, so are {Y1, Y4}.\nGiven the graph structure, the potential functions are convenient to characterize the distribution on the graph. However, if the graph is unknown in advance, estimating the potential functions does not give direct inference of the graph structure, because there are different representations with different choices of cliques in the same graph as mentioned above. Even if assuming the most general case where C = {\u2126}, the conditional independence between the nodes cannot be represented by \u03a6C in a simple form (see Example 2.1), which\nmakes the learning of graph structure difficult. The multivariate Bernoulli (MVB) model can represent a graphical model whose nodes are Bernoulli random variables, i.e. Yi = 0 or 1. And the parameterization in MVB model is suitable for learning the graph structure. We will show later that it is equivalent to GM (1) with binary outcomes. The distribution of MVB model is:\np(Y1 = y1, . . . , YK = yk|X)\n= exp{y1f 1 + \u00b7 \u00b7 \u00b7 + yKf K + \u00b7 \u00b7 \u00b7+ y1y2f 1,2 + \u00b7 \u00b7 \u00b7+ y1 . . . yKf 1,...,K \u2212 b(f)}\n= exp{ 2K\u22121 \u2211\n\u03c9=1\ny\u03c9f\u03c9 \u2212 b(f)} (2)\nHere, we use the following notations. Let \u03a8K be the power set of \u2126 = {1, . . . ,K}. Counting the empty set, there are 2K elements in \u03a8K . Where convenient in what follows, we will relabel these elements from 0 to 2K \u2212 1, e.g. for K = 3, we will use f1,2,3 and f7 interchangeably without further specification. Because there are 2K \u2212 1 free parameters in (2), denote \u03a8K = \u03a8K \u2212 {\u2205} for simple notation. Let \u03c9 denotes a set in \u03a8K , define Y = (y1, \u00b7 \u00b7 \u00b7 , y\u03c9, \u00b7 \u00b7 \u00b7 , y\u2126) be the augmented response with\ny\u03c9 = \u220f\ni\u2208\u03c9\nyi (3)\nAnd f = (f1, . . . , f\u03c9, . . . , f\u2126) be the vector of natural parameters, where f\u03c9(x) is the conditional log odds ratio (Gao et al., 2001) to be estimated\nf\u03c9 = logOR(Yi, i \u2208 \u03c9|Yj = 0, j /\u2208 \u03c9;X) (4)\nHere, the odds ratios are calculated recursively\nOR(Yi) = P (Yi = 1)\n1\u2212 P (Yi = 1) , (5)\nOR(Yi, i \u2208 \u03c9 \u222a {k}) = OR(Yi, i \u2208 \u03c9|Yk = 1)\nOR(Yi, i \u2208 \u03c9|Yk = 0) , suppose k /\u2208 \u03c9 (6)\nLater, we will call f1, \u00b7 \u00b7 \u00b7 , fK main effects, and f1,2, \u00b7 \u00b7 \u00b7 , f1,\u00b7\u00b7\u00b7 ,K measures the interactions between the response variables. We are interested in the sparse estimation of f\u03c9, which is in a Reproducing Kernel Hilbert Space (RKHS) H\u03c9 with kernel K\u03c9 (Wahba, 1990). Denote:\nS\u03c9(y;x) = \u2211\n\u03ba\u2282\u03c9\ny\u03baf\u03ba(x); S\u03c9(x) = \u2211\n\u03ba\u2282\u03c9\nf\u03ba(x); (7)\nThen the normalization factor is:\nexp(b(f(x))) = 1 + \u2211\n\u03c9\u2208\u03a8K\nexp(S\u03c9(x)) (8)\nAnd we have the following lemma:\nLemma 2.1 In multivariate Bernoulli model, define the odd-even partition of the power set of \u03c9 as: \u03a8\u03c9odd = {\u03ba \u2282 \u03c9 | |\u03ba| = |\u03c9| \u2212 k,where k is odd}, and \u03a8 \u03c9 even{\u03ba \u2282 \u03c9 | |\u03ba| = |\u03c9| \u2212 k, where k is even}. Note |\u03a8\u03c9odd| = |\u03a8 \u03c9 even| = 2\n|\u03c9|\u22121, the natural parameters have the following property:\nf\u03c9 = log\n\u220f\n\u03ba\u2208\u03a8\u03c9even p(Yi = 1, i \u2208 \u03ba, and Yj = 0, j \u2208 \u2126\u2212 \u03ba|X)\n\u220f\n\u03ba\u2208\u03a8\u03c9 odd\np(Yi = 1, i \u2208 \u03ba, and Yj = 0, j \u2208 \u2126\u2212 \u03ba|X) (9)\nand\nexp(S\u03c9) = p(Yi = 1, i \u2208 \u03c9, and Yj = 0, j \u2208 \u2126\u2212 \u03c9|X)\nP (Yi = 0, i \u2208 \u2126|X) (10)\nThe equivalence between graphical models and MVB model is given in the following theorem.\nTheorem 2.2 Graphical model of general form (1) with 0/1 nodes is equivalent to multivariate Bernoulli model (2). And the followings are equivalent:\n1. There is no |C|-order interaction in {Yi, i \u2208 C}. 2. There is no clique C \u2208 \u03a8K in the graph. 3. f\u03c9 = 0 for all \u03c9 such that C \u2282 \u03c9.\nA proof is given in Appendix A. Theorem 2.2 states that there is a clique C in the graphical model, if there is \u03c9 \u2283 C, f\u03c9 6= 0 in MVB model. The conditional independence specified in the graphical model can be fully formulated by MVB model.\nExample 2.1 For a graph with K nodes, the parameters in GM are {\u03a6\u03c9 | \u03c9 \u2208 \u03a8K}, where \u03a6\u03c9 = \u03a6\u2126(Yi = 1, i \u2208 \u03c9, and Yj = 0, j \u2208 \u2126\u2212\u03c9) is the potential function. We usually restrict \u03a6\u2205 = 1 to make the model identifiable. So there are 2\nK \u22121 free parameters. Similarly, there are also 2K \u2212 1 free parameters in MVB model (f1, . . . , f\u2126)\nWhen K = 2, \u2126 = {1, 2}, C = {\u2126}, define \u03a611 to be the potential function \u03a6\u2126(Y1 = 1, Y2 = 1;X) for simplicity, and define \u03a610,\u03a601,\u03a600 similarly. The probability distribution with the GM parameterization is\np(Y1 = 1, Y2 = 1|X) = 1\nZ \u03a611, p(Y1 = 1, Y2 = 0|X) =\n1 Z \u03a610,\np(Y1 = 0, Y2 = 1|X) = 1\nZ \u03a601, p(Y1 = 0, Y2 = 0|X) =\n1 Z \u03a600\nThe relation between GM and MVB model is\nf1 = log \u03a610 \u03a600 , f2 = log \u03a601 \u03a600 , f1,2 = log \u03a611 \u00b7 \u03a600 \u03a601 \u00b7 \u03a610\nNote, the independence between Y1 and Y2 implies\nf1,2 = 0 or log \u03a611 \u00b7 \u03a600 \u03a601 \u00b7 \u03a610 = 0 (11)\nTherefore, the sparseness in the conditional log odds ratios in MVB model gives a direct inference of the graph structure. But this property does not apply to GM."}, {"heading": "3. Structure Penalty", "text": "In many applications, the assumption of graphical models is that the graph structure has few large cliques. It is equivalent to the sparsity in higher order interactions in MVB model by Theorem 2.2. So we will impose a sparse penalty on the dependence structure to shrink higher order interactions.\nLet y(i) = (y1(i), . . . , yK(i)), x(i) = (x1(i), . . . , xp(i)) be the ith data point. The augmented representation of the multivariate responses is:\nY(i) = (y1(i), . . . , y\u03c9(i), . . . , y\u2126(i)) (12)\nThere are |\u03a8K | = 2 K \u2212 1 components in total1. Denote the number of components by q. In this paper, we consider the learning of the full model where q = |\u03a8K |. Suppose each function f\u03c9 is in a Reproducing Kernel Hilbert Space (RKHS) H\u03c9 with kernel K\u03c9 (Wahba, 1990). The general penalized log likelihood model is:\nmin I\u03bb(f) = L(f) + \u03bbJ(f) (13)\nwhere the first term is the negative log-likelihood:\nL(f) =\nn \u2211\ni=1\n( \u2212 Y(i)T f(x(i)) + b(f) )\n(14)\nand the second term J(\u00b7) is the structure penalty. The objective is to obtain sparse estimation of the cliques by structure penalty on f . Consider the pairwise links. No link between Ys, Yt in the graphical model means f \u03c9 = 0 for all \u03c9 \u2283 {s, t}. For example, in Figure 1(b), Y1, Y4 are conditionally independent means f1,4, f1,2,4,, f1,3,4, f1,2,3,4 are all zero. This objective is similar to sparse covariance matrix estimation in Gaussian data for neighborhood selection with lasso (Meinshausen and Buhlmann, 2006). However, our model will deal with higher order covariance structures that do not exist in Gaussian data. In addition, we not only consider the graph structure of responses Y alone, but also the functions of predicative variables X on Y .\nTo satisfy this intuition, the penalty is designed to shrink large cliques in the graph. Suppose in the true model, there is no interaction on clique C, then all f\u03c9 should be zero, for C \u2282 \u03c9. The penalty is designed to shrink such f\u03c9 to zero. The idea can be viewed as group lasso with overlaps. Group lasso (Yuan and Lin, 2006) leads to selection of variables in groups. It has consistent estimation when the groups are exclusive and union to the whole set. Jacob et al. (2009) considered the penalty on groups with arbitrary overlaps. Zhao et al. (2009) set up the general framework for hierarchical variable selections with overlapping groups, which we adopt here for the functions.\nWe consider the penalty guided by the structure in Figure 2. The guiding graph T has 2K \u2212 1 nodes: 1, . . . , \u03c9, . . . ,\u2126. With some abuse of notation, we use the element in \u03a8k to index the node in T . There is an edge from \u03c91 to \u03c92 if and only if \u03c91 \u2282 \u03c92 and |\u03c91|+1 = |\u03c92|. Domain knowledge can be applied here to design a different guiding structure. Jenatton et al. (2009) discussed how to define the groups to achieve different nonzero patterns.\n1. In applications with large graphs, we only consider up to m\u2019th interactions. We truncate higher order\ninteractions and get \u2211m\nk=1\n(\nK k\n)\nfunctions\nLet Tv = {\u03c9 \u2208 \u03a8K |v \u2282 \u03c9} be the subgraph rooted at v in T , including all the descendants of v. Denote fTv = (f\u03c9), \u03c9 \u2208 Tv. All the functions are categorized into groups with overlaps as G = (T1, . . . , T\u2126). The structure penalty on the group Tv of functions is:\nJ(fTv) = pv\n\u221a\n\u2211\n\u03c9\u2208Tv\n\u2016f\u03c9\u20162H\u03c9 (15)\nwhere pv is the weight for the penalty on Tv chosen empirically as 1\n|Tv| . Then the objective\nfunction is:\nmin f\nI\u03bb(f) = L(f) + \u03bb \u2211\nv\npv\n\u221a\n\u2211\n\u03c9\u2208Tv\n\u2016f\u03c9\u20162H\u03c9 (16)\nThe following theorem shows that by solving the objective (16), f\u03c91 will enter the model before f\u03c92 if \u03c91 \u2282 \u03c92. That is to say, if f\n\u03c91 does not exist, there will be no higher order interactions on \u03c92. The proof is given in Appendix A.\nTheorem 3.1 Objective (16) is convex, thus the minimal is attainable. Let \u03c91, \u03c92 \u2208 \u03a8Kand \u03c91 \u2282 \u03c92. If f \u2217 is the minimizer, that is 0 \u2208 \u2202I\u03bb(f \u2217) which is the subgradient of I\u03bb at f\n\u2217, then f\u2217\u03c92 = 0 almost sure if f\u2217\u03c91 = 0.\nExample 3.1 If K = 3, f = (f1, f2, f3, f1,2, f1,3, f2,3, f1,2,3). The grouped functions at node 1 in Figure 2 is fT1 = (f1, f1,2, f1,3, f1,2,3). The objective is:\nmin\u2212 l(y, f) + \u03bb ( p1 \u221a \u2016f1\u20162 + \u2016f1,2\u20162 + \u2016f1,3\u20162 + \u2016f1,2,3\u20162\n+p2 \u221a \u2016f2\u20162 + \u2016f1,2\u20162 + \u2016f2,3\u20162 + \u2016f1,2,3\u20162 +p3 \u221a \u2016f3\u20162 + \u2016f1,3\u20162 + \u2016f2,3\u20162 + \u2016f1,2,3\u20162 (17) +p4 \u221a \u2016f1,2\u20162 + \u2016f1,2,3\u20162 + p5 \u221a \u2016f1,3\u20162 + \u2016f1,2,3\u20162 +p6 \u221a \u2016f2,3\u20162 + \u2016f1,2,3\u20162 + p7 \u221a \u2016f1,2,3\u20162 )\nAlgorithm 1 Proximal Linearization Algorithm\nInput: c0, \u03b10, \u03b6 > 1, tol > 0 repeat\nChoose \u03b1k \u2208 [\u03b1min, \u03b1max] Solve Eq (19) for dk while \u03b4k = I\u03bb(ck)\u2212 I\u03bb(ck + dk) < \u2016dk\u2016 3 do\n// Insufficient decrease Set \u03b1k = max(\u03b1min, \u03b6\u03b1k) Solve Eq (19) for dk\nend while Set \u03b1k+1 = \u03b1k/\u03b6 Set ck+1 = ck + dk\nuntil \u03b4k < tol"}, {"heading": "4. Parameter Estimation", "text": "In this paper, we focus on the situation where the \u03c9th function space is H\u03c9 = {1}\u2295H\u03c91 . {1} refers to the constant function space, and H\u03c91 is a RKHS with a linear kernel. The function f\u03c9 \u2208 H\u03c9 has the form: f\u03c9(x) = c\u03c90 + \u2211p j=1 c \u03c9 j xj . Its norm is \u2016f \u03c9\u20162H\u03c9 = \u2016c \u03c9\u20162. Here, we denote c\u03c9 = (c\u03c90 , . . . , c \u03c9 p ) T \u2208 Rp+1 as a vector of length p+1 and c = (c\u03c9)\u03c9\u2208\u03a8K \u2208 R p\u0303 be the concatenated vector of all parameters of length p\u0303 = (p+ 1) \u00b7 q. Hence, the objective (16) is now:\nmin c\nI\u03bb(c) = L(c) + \u03bb \u2211\nv\npv\u2016c Tv\u2016 (18)\nwhere cTv = (c\u03c9)\u03c9\u2208Tv is a (p + 1) \u00b7 |T v| vector.\nTo solve (18), we iteratively solve the following proximal linearization problem (Wright, 2010):\nmin c\nLk +\u2207L T k (c\u2212 ck) + \u03b1k 2 \u2016c\u2212 ck\u2016 2 + \u03bbJ(c) (19)\nwhere Lk = L(ck), \u03b1k is a positive scalar chosen adaptively. With slight abuse of notation, we use ck to denote the vector of all parameters at kth step. Algorithm 1 summarized the framework of solving (18). Following the analysis in Wright (2010), we can show that the proximal linearization algorithm will converge for negative log-likelihood loss function plus group lasso type penalties with overlaps.\nHowever, solving group lasso with overlaps is not trivial due to the non-smoothness at the singular point. In recent years, several papers have addressed this problem. Jacob et al. (2009) duplicated the variables in the design matrix that appear in group overlaps, then solved the problem as group lasso without overlaps. Kim and Xing (2010) reparameterized the group norm with additional dummy variables. They alternatively optimized for the model parameters and the dummy variables at each iteration. The method performs efficiently on quadratic loss function for Gaussian data. But optimizing alternatively over two sets of parameters might not scale well on penalized logistic regression.\nIn this paper, we solve (19) by its smooth and convex dual problem proposed by Liu and Ye (2010). Let Z = {v \u2208 \u03a8K |\u2016c\nTv\u2016 = 0}, and Z\u0304 = \u03a8K \u2212Z be the complement. Define sv, v \u2208 \u03a8K as:\nsv \u2208 Sv = {s = (s \u03c9)\u03c9\u2208\u03a8K | s \u2208 R p\u0303, \u2016s\u2016 \u2264 \u03bbpv, s \u03c9 = 0 if \u03c9 \u2208 Tv} (20)\nthen the subgradient of (19) is:\n\u2207L+ \u03b1k(c\u2212 ck) + \u2211\nv\u2208Z\nsv + \u2211\nu\u2208Z\u0304\nru (21)\nwhere sv is the subgradient of \u03bbpv\u2016c Tv\u2016 for v \u2208 Z and ru is the subgradient for u \u2208 Z\u0304:\nru = argmaxsu\u3008su, c\u3009, for u \u2208 Z\u0304 (22)\nThe subgradient sv is in a unit ball of certain subspace of R p\u0303. These subspaces are not perpendicular to each other. Thus, sv\u2019s are not separable, and closed form solution of (19) cannot be obtained. We solve the proximal subproblem (19) by its smoothing and convex dual problem. Note (19) is equivalent to:\nmin c\u2208Rp\u0303 max S\u2208S \u03c6(c, S) = (23)\n\u2207LTk (c\u2212 ck) + \u03b1k 2 \u2016c\u2212 ck\u2016 2 + \u2211\nv\u2208\u2126\n\u3008sv, c\u3009\nwhere S is a p\u0303 \u00d7 q matrix whose columns are sv. S = {S|S = (s1, . . . , sv, . . . , s\u2126), sv \u2208 Sv for v \u2208 \u03a8K} is the feasible region of S. Since \u03c6(\u00b7, S) is lower semicontinuous and \u03c6(c, \u00b7) is upper semicontinuous, there exists a saddle point and the max and min are exchangeable. The solution of minimizing \u03c6(c, S) is:\nc\u0303 = argminc\u03c6(c, S) = ck \u2212 1\n\u03b1k \u2207Lk \u2212\n1\n\u03b1k\n\u2211\nv\nsv (24)\nSubstitute c\u0303 back into (23), we have the dual problem of (19) as:\nmax S\u2208S\n\u03b7(S) = \u2212 1 2 \u2016 \u2211\nv\nsv\u2016 2 + (\u03b1kck \u2212\u2207Lk)\nT \u2211\nv\nsv (25)\nFollowing the proof in Liu and Ye (2010), we can show that \u03b7(S) is convex and Lipschitz continuous. The differential is \u03b1kc\u0303e\nT where e \u2208 Rp\u0303 is a vector of ones. Hence, (25) can be solved by existing gradient methods. We use the accelerated gradient descent method implemented in (Liu et al., 2009)."}, {"heading": "5. Experiments", "text": ""}, {"heading": "5.1 Simulation Study", "text": "The simulations are performed to evaluate the learning accuracy of our method. The graphs of the response variables are depicted in Figure 1. In the simulation, we assume the most\ngeneral distribution family for each graphical model according to its graph structure. For example, in Model 1, we have 4 response variables, (Y1, Y2, Y3, Y4). There is a triangular clique (Y1, Y2, Y3), but Y4 is independent with the other response variables. In this case, we have a 15 conditional log odds ratios to estimate. In the true model, the non-zero functions are {f1, f2, f3, f1,2, f1,3, f2,3, f1,2,3, f4}. In Model 3, there are 255 functions and 25 of them are nonzero. In Model 4, there are 1023 functions and 25 of them are nonzero.\nThe predictive variables X = (X1, . . . ,X5) are independently generated from multivariate Gaussian distribution with mean 0 and variance 1. Each f\u03c9 has 6 parameters to estimate (1 of them is the intercept). These parameters, c\u03c9j , j = 1, \u00b7 \u00b7 \u00b7 , 5, are uniformly sampled from {\u22125,\u22124, \u00b7 \u00b7 \u00b7 , 5}. We set the intercepts c\u03c90 in main effects to 1, those in second or higher order interactions to 2. Each Y is randomly selected proportional to the probability in equation (2), where f = Xc. We generate 100 datasets for each graph structure in Figure 1 to evaluate the learning accuracy. The sample size in each dataset is 1000.\nThe tuning parameter \u03bb is chosen by two different tuning methods: 1) GACV (generalized approximation cross validation), 2) BGACV (B-type GACV). The details of the tuning methods are discussed in Appendix B.\nIn Table 2, we count, for each function f\u03c9, the number of runs out of the 100 replications in which f\u03c9 is recovered (\u2016c\u03c9\u2016 6= 0). The recovered functions in the true model are considered as true positive; while the others not in the true model are false positive. Since the main effects are always detected correctly, they are not listed in the table. The structure penalty is efficient in recognizing strong interactions in the responses, such as the interaction between Y1, Y2. But its performance on higher order interactions will be affected in more complex graph structures, e.g. f1,2,3 in Model 3 and 4.\nCompared to GACV, BGACV tends to achieve more sparse results in general, because they have large penalties on the degrees of freedom of the estimated model. On the contrary, GACV will discover more true positive functions with the cost of higher false positive rate.\nIn Figure 3, we show the learning results in terms of true positive rate (TPR) with increasing sample size from 100 to 1000. The experimental setting is the same as before.\nThe TPRs are improving along with the increasing sample size. Compared to Model 1 and 2, the algorithm needs substantially larger sample size to achieve high TPR on Model 3 and 4. GACV achieves better true positive rate in all four graphical models. This tuning method will obtain less sparse models compared to BGACV."}, {"heading": "5.2 Census Bureau County Data", "text": "We use the county data from U.S. Census Bureau2 to validate our method. It includes demographic data for all counties in United States, covering population, employment, votes (Scammon et al., 2005), and etc. We delete the counties which have missing value in the columns we are interested, and get 2668 data entries in total. The outcomes for this\n2. http://www.census.gov/statab/www/ccdb.html\nstudy are summarized in Table 3. \u201cVote\u201d is coded as 1 if the Republican candidate won in the 2004 presidential election. To dichotomize the rest response variables, the national mean is selected as a threshold. The third column in the table gives the percentage of positive in the data. The features in the model are: percentage of housing unit change; government expenditure; population percentage of 3 ethnic groups (White, African, Asian), people foreign born, people over 65, people under 18, people with high school education, and people with bachelor degree; birth rate; death rate.\nIn the experiment, We first standardize the data to be mean 0 variance 1. Then, we can get an estimated graphical model with every fixed \u03bb. Adjusting the regularization parameter \u03bb from 0.3289 to 0.1389, we will discover new interactions entering the model. The graph structure of \u03bb = 0.1559 (chosen by cross validation) is shown in Figure 4. The first number on edge indicates the order of the link entering the model, while the second one is the corresponding \u03bb. The unemployment rate plays an important role as a hub in the graph. It is strongly related to poverty and crimes. Population change is negatively related to violent crimes, as well as to unemployment rate.\nWe analyze the link between \u201cVote\u201d and \u201cPChange\u201d, which is recovered by our method before any other links. The marginal correlation between them (without conditioning on X) is 0.0389, which is the second smallest absolute value in the correlation matrix. The partial correlation method (Peng et al., 2009) is taken as an example to show how the links of response variables are discovered without considering X. The link between \u201cVote\u201d and \u201cPChange\u201d is the tenth recovered link using R package space. The reason is that after taking features into account, the dependence structure of response variables may change. The main contribution in this case is \u201cpercentage of housing unit change\u201d (X1) and \u201cpopulation percentage of people over 65\u201d (X2). Part of the fitted model is shown below:\nfV ote = 0.0463 \u00b7X1 + 0.0877 \u00b7X2 + \u00b7 \u00b7 \u00b7 fPChange = 0.2315 \u00b7X1 \u2212 0.0942 \u00b7X2 + \u00b7 \u00b7 \u00b7 fV ote,PChange = 0.0211 \u00b7X1 \u2212 0.0115 \u00b7X2 + \u00b7 \u00b7 \u00b7\nThe main effects suggest that with increase of housing units, the counties tend to increase in population and vote for Republican. With increase of people over 65, the counties tend to lose population, but still more likely to vote for Republican. The interaction function reveals that as housing units increase, the counties are more likely to have both positive results for \u201cVote\u201d and \u201cPChange\u201d. But this tendency will be counteracted by the increase of people over 65: the responses are less likely to take both positive values."}, {"heading": "6. Conclusions and Future Work", "text": "The structure penalty on the multivariate Bernoulli model can efficiently learn the graph structure, which indicates the conditional independence of the response variables. In this paper, we only consider linear models for the conditional log odds ratios. It can be extended to smoothing spline ANOVA model with more freedom by choosing the kernels. And Theorem 3.1 holds natually. It is also interesting to see how the penalty will improve the prediction power compared to large margin methods.\nAnother extension will be the selection of features for each f\u03c9. The sparsity in each function requires the sparsity within each group. But the graph structure would change with different selected features. One application is to discover the relations of multiple symptoms or clinical responses and how they are effected by the environmental and genetical covariates. Smoking could be significant for many diseases and their interactions, but other covariates, such as taking Vitamin might be only related to a subset of the symptoms. As a result, we will investigate sparse penalties within each function."}, {"heading": "Acknowledgments", "text": "Research is supported in part by NIH Grant EY09946, NSF Grant DMS-0906818 and ONR Grant N0014-09-1-0655."}, {"heading": "Appendix A. Proof", "text": "A.1 Proof of Theorem 2.2\nProof Given graphical model (1), let y\u03c9C be a realization of yC such that y \u03c9 C = {y \u03c9 i | i \u2208 C} where y\u03c9i = 1 if i \u2208 \u03c9 and y \u03c9 i = 0 otherwise. Let the odd-even partition of the power set of \u03c9 defined as in Lemma 2.1. The conditional log odds ratios in MVB model are:\nf\u03c9(x) = log\n\u220f\n\u03ba\u2208\u03a8\u03c9even\n\u220f\nC\u2208C \u03a6C(y \u03ba C ;x)\n\u220f\n\u03ba\u2208\u03a8\u03c9 odd\n\u220f\nC\u2208C \u03a6C(y \u03ba C ;x)\n(26)\nb(f) = log Z(x) \u220f\nC\u2208C \u03a6C(0;x)\nConversely, given the MVB model of 2, the cliques can be determined by the nonzero f\u03c9: clique C exists if C = \u03c9 and f\u03c9 6= 0. Then the maximal cliques can be inferred from the graph structure. And suppose they are C1, . . . , Cm. Let \u03c9i be \u03c8(\u03c9i) = Ci, i = 1, . . . ,m, and \u03ba1 = \u2205, \u03bai be \u03c8(\u03bai) = Ci\u2229(Ci\u22121\u222a\u00b7 \u00b7 \u00b7\u222aC1), i = 2, . . . ,m. Then one possible parameterization is:\n\u03a6Ci(yCi ;x) = exp ( S\u03c9i(y;x)\u2212 S\u03bai(y;x) )\n(27)\nZ(x) = exp(b(f))\nTherefore, graphical model (1) with bivariate outcomes is equivalent to the MVB Model (2).\nIn the latter part of the theorem, 1 \u21d2 2 and 3 \u21d2 1 follows naturally from the Markov property of graphical models. To show 2 \u21d2 3, notice that whenever \u03ba\u2229C = \u03ba\u2032\u2229C, y\u03baC = y \u03ba\u2032\nC . For any possible v = \u03ba \u2229 C, \u03ba\u2032 \u2208 {\u03ba|\u03ba = v \u222a u, s.t. u \u2282 \u03c9 \u2212 v} will give \u03ba\u2032 \u2229 C = v. There are 2|\u03c9\u2212v| such \u03ba\u2032 in total due to the choice of u. Also, they appear in the nominator and denominator of equation (26) equally. So, for any C \u2208 C,\n\u220f\n\u03ba\u2208\u03a8\u03c9even\n\u03a6C(y \u03ba C ;x) =\n\u220f\n\u03ba\u2208\u03a8\u03c9 odd\n\u03a6C(y \u03ba C ;x) (28)\nIt follows that f\u03c9 = 0 by (26).\nA.2 Proof of Theorem 3.1\nProof We give the proof for the linear case. The convexity of I\u03bb is easy to check, since L and J(fTv) are all convex in c. Suppose there is some \u03c92 \u2283 \u03c91 s.t. c\n\u2217\u03c92 6= 0, by the groups constructed through Figure 2, \u2016c\u2217Tv\u2016 6= 0 for all v \u2282 \u03c91. So the partial derivative of objective (18) with respect to c\u03c91 is\n\u2202L\n\u2202c\u03c91 + \u03bb\n\u2211\nv\u2282\u03c91\npv c\u2217\u03c91\n\u2016c\u2217Tv\u2016 = 0 (29)\nHence, the probability of {\u2203\u03c92 \u2283 \u03c91 s.t c \u2217\u03c92 6= 0} equals to the probability that \u2202L\n\u2202c\u03c91 = 0,\nwhich is 0."}, {"heading": "Appendix B. Tuning", "text": "For i-th data, we have:\nS\u03c9i = S \u03c9(x(i)) (30)\nbi = b(f(x(i))) = log (1 + \u2211\n\u03c9\nexpS\u03c9i ) (31)\nThen, the mean of the augmented response Y(i) in the multivariate Bernoulli model is:\n\u00b5(i) = E[Y(i)|x(i), f ] = (\u00b51(i), \u00b7 \u00b7 \u00b7 , \u00b5\u03ba(i), \u00b7 \u00b7 \u00b7 , \u00b5\u2126(i)) (32)\nwhere \u00b5\u03ba(i) = \u2202bi \u2202f\u03ba =\n\u2211\n\u03c9\u2208T\u03ba expS\u03c9i\nexp bi (33)\nThe q \u00d7 q covariance matrix of the augmented response is:\nW (i) = var(Y(i)|x(i), f) (34)\nwhere the (\u03b1, \u03b2)-th element of W (i) is:\nW\u03b1,\u03b2(i) = \u22022bi\n\u2202f\u03b1(\u2202f\u03b2)T =\n\u2211\n\u03c9\u2208T\u03b1\u2229T\u03b2 expS\u03c9i\nexp bi \u2212 \u00b5\u03b1(i) \u00b7 \u00b5\u03b2(i) (35)\nLet Rv be a p\u0303 \u00d7 p\u0303 diagonal matrix whose (i, i)-th element is 1 if ci 6= 0. Then, the v-th group penalty in (18) can be written as:\nJ(fTv) = pv\n\u221a\n\u2211\n\u03c9\u2208Tv\n\u2016f\u03c9\u20162 = pv\u2016Rvc\u2016 (36)\nNote Rv is symmetric and Rv \u00b7Rv = Rv, direct calculation yields the derivative and Hessian of the penalty term:\n\u2202J \u2202c = \u2211\nv:Rvc 6=0\npv Rvc\n\u2016Rvc\u2016 (37)\n\u22022J\n\u2202c\u2202cT =\n\u2211\nv:Rvc 6=0\npvJv = \u2211\nv:Rvc 6=0\npv Rv\n(\n\u2016Rvc\u2016 2I \u2212 c \u00b7 cT\n)\nRv\n\u2016Rvc\u20163 (38)\nwhere Jv . = (Rv(\u2016Rvc\u2016 2I \u2212 c \u00b7 cT )Rv)/\u2016Rvc\u2016 3. Denote the grand design matrix as:\nD = ( D(1)T \u00b7 \u00b7 \u00b7 D(n)T )T\n(39)\nwhere D(i) =\n\n    x(i)T 0 \u00b7 \u00b7 \u00b7 0 0 x(i)T \u00b7 \u00b7 \u00b7 0 ... ... . . .\n... 0 0 \u00b7 \u00b7 \u00b7 x(i)T\n\n   \n(40)\nSuppose there are N non-zero elements of c at location {a1, . . . , aN}. Let D\u0303 be the matrix composed by the a1, . . . , aN th column of D. Then, the Hessian matrix of I\u03bb in (16) is:\n\u22022I\u03bb \u2202c\u2202cT = \u22022L \u2202c\u2202cT + \u03bb \u22022J \u2202c\u2202cT = D\u0303TWD\u0303 + \u03bb \u2211\nv:Rvc 6=0\npvJv (41)\n(42)\nLet H be the nq \u00d7 nq influence matrix that implies\nf\u03bb,\u01eb \u2212 f\u03bb \u2248 H\u01eb (43)\nwhere \u01eb is a small perturbation on Y; f\u03bb = Dc\u03bb is the estimated function value with tuning parameter \u03bb; and f\u03bb,\u01eb is the estimated function value with the perturbation. Then, the analysis of the first order Taylor expansion of \u2202I\u03bb \u2202c\n(Y + \u01eb, c\u03bb,\u01eb) leads to the formulation of H as follows (refer to (Xiang and Wahba, 1996) and (Ma, 2010) Chapter 3 for more details)\nH = D\u0303 ( \u22022I\u03bb \u2202c\u2202cT )\u22121 D\u0303T = D\u0303 ( D\u0303TWD\u0303 + \u03bb \u2211\nv:Rvc 6=0\npvJv\n)\u22121 D\u0303T (44)\nThe (i, j)-th q \u00d7 q submatrix of H is\nH(i, j) = D\u0303(i)T ( \u22022I\u03bb \u2202c\u2202cT )\u22121 D\u0303(j) (45)\nLet Q(i) = I \u2212H(i, i)W (i) for i = 1, . . . , n, define the generalized average matrix, denoted as Q\u0304, of {Q(i), i = 1, . . . , n} as follows\nQ\u0304 = (\u03b4 \u2212 \u03b3)Iq\u00d7q + \u03b3 \u00b7 ee T =\n\n    \u03b4 \u03b3 \u00b7 \u00b7 \u00b7 \u03b3 \u03b3 \u03b4 \u00b7 \u00b7 \u00b7 \u03b3 ... ... . . .\n... \u03b3 \u03b3 \u00b7 \u00b7 \u00b7 \u03b4\n\n   \n(46)\nwhere e is the unit vector of length q and\n\u03b4 = 1\nnq \u2211n i=1 tr(Q(i)) , \u03b3 =\n1\nnq(q \u2212 1)\n[ eTQ(i)e\u2212 tr(Q(i)) ]\n(47)\nLet H\u0304 be the generalized average of {H(i, i), i = 1, \u00b7 \u00b7 \u00b7 , n}, the GACV score is\nGACV (\u03bb) = OBS(\u03bb) + 1\nn\nn \u2211\ni=1\nY(i)T Q\u0304\u22121H\u0304 ( Y(i) \u2212 \u00b5(i) )\n(48)\nwhere\nOBS(\u03bb) = 1\nn\n[ \u2212 Y(i)T f\u03bb(x(i)) + b(f\u03bb(x(i))) ]\n(49)\nis the observed log-likelihood.\nThe degrees of freedom of multivariate Bernoulli data is generally difficult to obtain. But we can have a good approximation from GACV (Shi et al., 2008) as\nd\u0302f(\u03bb) =\nn \u2211\ni=1\nY(i)T Q\u0304\u22121H\u0304 ( Y(i) \u2212 \u00b5(i) )\n(50)\nSo the BGACV score can be defined as\nBGACV (\u03bb) = OBS(\u03bb) + 1\nn\nlog n\n2\nn \u2211\ni=1\nY(i)T Q\u0304\u22121H\u0304 ( Y(i)\u2212 \u00b5(i) )\n(51)"}], "references": [{"title": "d\u2019Aspremont. Model selection through sparse maximum likelihood estimation for multivariate gaussian or binary data", "author": ["O. Banerjee", "L. El Ghaoui"], "venue": "The Journal of Machine Learning Research,", "citeRegEx": "Banerjee et al\\.,? \\Q2008\\E", "shortCiteRegEx": "Banerjee et al\\.", "year": 2008}, {"title": "Collective annotation of music from multiple semantic sategories", "author": ["Z. Duan", "L. Lu", "C. Zhang"], "venue": "In Proceedings of 9th International Conference on Music Information Retrieval,", "citeRegEx": "Duan et al\\.,? \\Q2008\\E", "shortCiteRegEx": "Duan et al\\.", "year": 2008}, {"title": "Smoothing Spline ANOVA for multivariate Bernoulli observations, with application to ophthalmology data", "author": ["F. Gao", "G. Wahba", "R. Klein", "B. Klein"], "venue": "Journal of the American Statistical Association,", "citeRegEx": "Gao et al\\.,? \\Q2001\\E", "shortCiteRegEx": "Gao et al\\.", "year": 2001}, {"title": "Multi-Task Learning of Gaussian Graphical Models", "author": ["J. Honorio", "D. Samaras"], "venue": "In Proceedings of the 27th International Conference on Machine learning,", "citeRegEx": "Honorio and Samaras.,? \\Q2010\\E", "shortCiteRegEx": "Honorio and Samaras.", "year": 2010}, {"title": "Group Lasso with overlap and graph Lasso", "author": ["L. Jacob", "G. Obozinski", "J.P. Vert"], "venue": "In Proceedings of the 26th Annual International Conference on Machine Learning,", "citeRegEx": "Jacob et al\\.,? \\Q2009\\E", "shortCiteRegEx": "Jacob et al\\.", "year": 2009}, {"title": "Structured variable selection with sparsityinducing norms", "author": ["R. Jenatton", "J.Y. Audibert", "F. Bach"], "venue": null, "citeRegEx": "Jenatton et al\\.,? \\Q2009\\E", "shortCiteRegEx": "Jenatton et al\\.", "year": 2009}, {"title": "Tree-guided group lasso for multi-task regression with structured sparsity", "author": ["S. Kim", "E.P. Xing"], "venue": "In Proceedings of 27th International Conference on Machine Learning,", "citeRegEx": "Kim and Xing.,? \\Q2010\\E", "shortCiteRegEx": "Kim and Xing.", "year": 2010}, {"title": "Conditional random fields: Probabilistic models for segmenting and labeling sequence data", "author": ["J. Lafferty", "A. McCallum", "F. Pereira"], "venue": "In Proceedings of the 18th International Conference on Machine Learning,", "citeRegEx": "Lafferty et al\\.,? \\Q2001\\E", "shortCiteRegEx": "Lafferty et al\\.", "year": 2001}, {"title": "Fast overlapping group", "author": ["J. Liu", "J. Ye"], "venue": "lasso. arXiv:1009.0306v1,", "citeRegEx": "Liu and Ye.,? \\Q2010\\E", "shortCiteRegEx": "Liu and Ye.", "year": 2010}, {"title": "SLEP: Sparse Learning with Efficient Projections", "author": ["J. Liu", "S. Ji", "J. Ye"], "venue": "Arizona State University,", "citeRegEx": "Liu et al\\.,? \\Q2009\\E", "shortCiteRegEx": "Liu et al\\.", "year": 2009}, {"title": "High-dimensional graphs and variable selection with the lasso", "author": ["N. Meinshausen", "P. Buhlmann"], "venue": "The Annals of Statistics,", "citeRegEx": "Meinshausen and Buhlmann.,? \\Q2006\\E", "shortCiteRegEx": "Meinshausen and Buhlmann.", "year": 2006}, {"title": "Partial correlation estimation by joint sparse regression models", "author": ["J. Peng", "P. Wang", "N. Zhou", "J. Zhu"], "venue": "Journal of the American Statistical Association,", "citeRegEx": "Peng et al\\.,? \\Q2009\\E", "shortCiteRegEx": "Peng et al\\.", "year": 2009}, {"title": "High-dimensional Ising model selection using l1-regularized logistic regression", "author": ["P. Ravikumar", "M.J. Wainwright", "J. Lafferty"], "venue": "Annals of Statistics,", "citeRegEx": "Ravikumar et al\\.,? \\Q2010\\E", "shortCiteRegEx": "Ravikumar et al\\.", "year": 2010}, {"title": "LASSO-Patternsearch algorithm with application to ophthalmology and genomic data", "author": ["W. Shi", "G. Wahba", "S. Wright", "K. Lee", "R. Klein", "B. Klein"], "venue": "Statistics and its Interface,", "citeRegEx": "Shi et al\\.,? \\Q2008\\E", "shortCiteRegEx": "Shi et al\\.", "year": 2008}, {"title": "Gaussian Markov distributions over finite graphs", "author": ["TP Speed", "HT Kiiveri"], "venue": "Annals of Statistics,", "citeRegEx": "Speed and Kiiveri.,? \\Q1986\\E", "shortCiteRegEx": "Speed and Kiiveri.", "year": 1986}, {"title": "Dynamic conditional random fields: Factorized probabilistic models for labeling and segmenting sequence data", "author": ["C. Sutton", "A. McCallum", "K. Rohanimanesh"], "venue": "The Journal of Machine Learning Research,", "citeRegEx": "Sutton et al\\.,? \\Q2007\\E", "shortCiteRegEx": "Sutton et al\\.", "year": 2007}, {"title": "A comparative study of energy minimization methods for markov random fields with smoothness-based priors", "author": ["R. Szeliski", "R. Zabih", "D. Scharstein", "O. Veksler", "V. Kolmogorov", "A. Agarwala", "M. Tappen", "C. Rother"], "venue": "IEEE Transactions on Pattern Analysis and Machine Intelligence,", "citeRegEx": "Szeliski et al\\.,? \\Q2007\\E", "shortCiteRegEx": "Szeliski et al\\.", "year": 2007}, {"title": "Spline Models for Observational Data", "author": ["G. Wahba"], "venue": "Society for Industrial Mathematics,", "citeRegEx": "Wahba.,? \\Q1990\\E", "shortCiteRegEx": "Wahba.", "year": 1990}, {"title": "The Variational Ising Classifier (VIC) algorithm for coherently contaminated data", "author": ["O. Williams", "A. Blake", "R. Cipolla"], "venue": "Advances in Neural Information Processing Systems,", "citeRegEx": "Williams et al\\.,? \\Q2004\\E", "shortCiteRegEx": "Williams et al\\.", "year": 2004}, {"title": "Accelerated block-coordinate relaxation for regularized optimization", "author": ["S.J. Wright"], "venue": "Technical report, Department of Computer Science, University of Wisconsin-Madison,", "citeRegEx": "Wright.,? \\Q2010\\E", "shortCiteRegEx": "Wright.", "year": 2010}, {"title": "A generalized approximate cross validation for smoothing splines with non-Gaussian data", "author": ["D. Xiang", "G. Wahba"], "venue": "Statistica Sinica,", "citeRegEx": "Xiang and Wahba.,? \\Q1996\\E", "shortCiteRegEx": "Xiang and Wahba.", "year": 1996}, {"title": "Model selection and estimation in regression with grouped variables", "author": ["M. Yuan", "Y. Lin"], "venue": "Journal of the Royal Statistical Society: Series B (Statistical Methodology),", "citeRegEx": "Yuan and Lin.,? \\Q2006\\E", "shortCiteRegEx": "Yuan and Lin.", "year": 2006}, {"title": "The composite absolute penalties family for grouped and hierarchical variable selection", "author": ["P. Zhao", "G. Rocha", "B. Yu"], "venue": "Annals of Statistics,", "citeRegEx": "Zhao et al\\.,? \\Q2009\\E", "shortCiteRegEx": "Zhao et al\\.", "year": 2009}], "referenceMentions": [{"referenceID": 7, "context": "Conditional Random Fields (CRF) (Lafferty et al., 2001) and their extensions, e.", "startOffset": 32, "endOffset": 55}, {"referenceID": 15, "context": "dynamic CRF (Sutton et al., 2007), are well known in Natural Language Processing community.", "startOffset": 12, "endOffset": 33}, {"referenceID": 16, "context": "models to computer vision (Szeliski et al., 2007; Honorio and Samaras, 2010).", "startOffset": 26, "endOffset": 76}, {"referenceID": 3, "context": "models to computer vision (Szeliski et al., 2007; Honorio and Samaras, 2010).", "startOffset": 26, "endOffset": 76}, {"referenceID": 18, "context": "Ising model is another classical example that draws great interest in image processing (Williams et al., 2004) and also has been recently applied to social networks (Banerjee et al.", "startOffset": 87, "endOffset": 110}, {"referenceID": 0, "context": ", 2004) and also has been recently applied to social networks (Banerjee et al., 2008).", "startOffset": 62, "endOffset": 85}, {"referenceID": 14, "context": "(2009) studied sparse covariance estimation of Gaussian outcomes (Speed and Kiiveri, 1986) without input features.", "startOffset": 65, "endOffset": 90}, {"referenceID": 0, "context": ", 2004) and also has been recently applied to social networks (Banerjee et al., 2008). The intuition of utilizing a graph structure is that some responses are related while others are not. However, in many cases, the graph is pre-determined by domain knowledge. For example, Duan et al. (2008) proposed a collective model for labeling music signals with fully connected graph, which they called collective conditional random fields.", "startOffset": 63, "endOffset": 294}, {"referenceID": 0, "context": ", 2004) and also has been recently applied to social networks (Banerjee et al., 2008). The intuition of utilizing a graph structure is that some responses are related while others are not. However, in many cases, the graph is pre-determined by domain knowledge. For example, Duan et al. (2008) proposed a collective model for labeling music signals with fully connected graph, which they called collective conditional random fields. They have 10 semantic categories such as genre (blues, rap, . . . ), instrument (guitar, piano, . . . ), production (studio, live), rhythm(strong, weak, middle), and etc. It is possible that some links are not necessary: e.g. production and instrument. Estimating the parameters on these relations will lead to over-fitting. Therefore, graph structure learning is an important aspect of relation discovery in multivariate response applications and multi-task learning. Many papers have focused on the graphical model selection issue. Meinshausen and Buhlmann (2006) and Peng et al.", "startOffset": 63, "endOffset": 999}, {"referenceID": 0, "context": ", 2004) and also has been recently applied to social networks (Banerjee et al., 2008). The intuition of utilizing a graph structure is that some responses are related while others are not. However, in many cases, the graph is pre-determined by domain knowledge. For example, Duan et al. (2008) proposed a collective model for labeling music signals with fully connected graph, which they called collective conditional random fields. They have 10 semantic categories such as genre (blues, rap, . . . ), instrument (guitar, piano, . . . ), production (studio, live), rhythm(strong, weak, middle), and etc. It is possible that some links are not necessary: e.g. production and instrument. Estimating the parameters on these relations will lead to over-fitting. Therefore, graph structure learning is an important aspect of relation discovery in multivariate response applications and multi-task learning. Many papers have focused on the graphical model selection issue. Meinshausen and Buhlmann (2006) and Peng et al. (2009) studied sparse covariance estimation of Gaussian outcomes (Speed and Kiiveri, 1986) without input features.", "startOffset": 63, "endOffset": 1022}, {"referenceID": 0, "context": ", 2004) and also has been recently applied to social networks (Banerjee et al., 2008). The intuition of utilizing a graph structure is that some responses are related while others are not. However, in many cases, the graph is pre-determined by domain knowledge. For example, Duan et al. (2008) proposed a collective model for labeling music signals with fully connected graph, which they called collective conditional random fields. They have 10 semantic categories such as genre (blues, rap, . . . ), instrument (guitar, piano, . . . ), production (studio, live), rhythm(strong, weak, middle), and etc. It is possible that some links are not necessary: e.g. production and instrument. Estimating the parameters on these relations will lead to over-fitting. Therefore, graph structure learning is an important aspect of relation discovery in multivariate response applications and multi-task learning. Many papers have focused on the graphical model selection issue. Meinshausen and Buhlmann (2006) and Peng et al. (2009) studied sparse covariance estimation of Gaussian outcomes (Speed and Kiiveri, 1986) without input features. The covariance matrix determines the dependence structure in the Gaussian distribution and its sparsity specifies the linkage in Gaussian Markov Random Fields. This is not the case for non-elliptical distribution, such as the distribution of discrete random variables. Ravikumar et al. (2010) focused on graph structure selection of Ising model based on l1-regularized logistic regression.", "startOffset": 63, "endOffset": 1423}, {"referenceID": 2, "context": ", f) be the vector of natural parameters, where f(x) is the conditional log odds ratio (Gao et al., 2001) to be estimated f = logOR(Yi, i \u2208 \u03c9|Yj = 0, j / \u2208 \u03c9;X) (4) Here, the odds ratios are calculated recursively OR(Yi) = P (Yi = 1) 1\u2212 P (Yi = 1) , (5) OR(Yi, i \u2208 \u03c9 \u222a {k}) = OR(Yi, i \u2208 \u03c9|Yk = 1) OR(Yi, i \u2208 \u03c9|Yk = 0) , suppose k / \u2208 \u03c9 (6) Later, we will call f, \u00b7 \u00b7 \u00b7 , f main effects, and f, \u00b7 \u00b7 \u00b7 , f1,\u00b7\u00b7\u00b7 ,K measures the interactions between the response variables.", "startOffset": 87, "endOffset": 105}, {"referenceID": 17, "context": "We are interested in the sparse estimation of f, which is in a Reproducing Kernel Hilbert Space (RKHS) H with kernel K (Wahba, 1990).", "startOffset": 119, "endOffset": 132}, {"referenceID": 17, "context": "Suppose each function f is in a Reproducing Kernel Hilbert Space (RKHS) H with kernel K (Wahba, 1990).", "startOffset": 88, "endOffset": 101}, {"referenceID": 10, "context": "This objective is similar to sparse covariance matrix estimation in Gaussian data for neighborhood selection with lasso (Meinshausen and Buhlmann, 2006).", "startOffset": 120, "endOffset": 152}, {"referenceID": 21, "context": "Group lasso (Yuan and Lin, 2006) leads to selection of variables in groups.", "startOffset": 12, "endOffset": 32}, {"referenceID": 4, "context": "Jacob et al. (2009) considered the penalty on groups with arbitrary overlaps.", "startOffset": 0, "endOffset": 20}, {"referenceID": 4, "context": "Jacob et al. (2009) considered the penalty on groups with arbitrary overlaps. Zhao et al. (2009) set up the general framework for hierarchical variable selections with overlapping groups, which we adopt here for the functions.", "startOffset": 0, "endOffset": 97}, {"referenceID": 4, "context": "Jacob et al. (2009) considered the penalty on groups with arbitrary overlaps. Zhao et al. (2009) set up the general framework for hierarchical variable selections with overlapping groups, which we adopt here for the functions. We consider the penalty guided by the structure in Figure 2. The guiding graph T has 2 \u2212 1 nodes: 1, . . . , \u03c9, . . . ,\u03a9. With some abuse of notation, we use the element in \u03a8k to index the node in T . There is an edge from \u03c91 to \u03c92 if and only if \u03c91 \u2282 \u03c92 and |\u03c91|+1 = |\u03c92|. Domain knowledge can be applied here to design a different guiding structure. Jenatton et al. (2009) discussed how to define the groups to achieve different nonzero patterns.", "startOffset": 0, "endOffset": 602}, {"referenceID": 19, "context": "To solve (18), we iteratively solve the following proximal linearization problem (Wright, 2010): min c Lk +\u2207L T k (c\u2212 ck) + \u03b1k 2 \u2016c\u2212 ck\u2016 2 + \u03bbJ(c) (19) where Lk = L(ck), \u03b1k is a positive scalar chosen adaptively.", "startOffset": 81, "endOffset": 95}, {"referenceID": 17, "context": "To solve (18), we iteratively solve the following proximal linearization problem (Wright, 2010): min c Lk +\u2207L T k (c\u2212 ck) + \u03b1k 2 \u2016c\u2212 ck\u2016 2 + \u03bbJ(c) (19) where Lk = L(ck), \u03b1k is a positive scalar chosen adaptively. With slight abuse of notation, we use ck to denote the vector of all parameters at kth step. Algorithm 1 summarized the framework of solving (18). Following the analysis in Wright (2010), we can show that the proximal linearization algorithm will converge for negative log-likelihood loss function plus group lasso type penalties with overlaps.", "startOffset": 82, "endOffset": 400}, {"referenceID": 4, "context": "Jacob et al. (2009) duplicated the variables in the design matrix that appear in group overlaps, then solved the problem as group lasso without overlaps.", "startOffset": 0, "endOffset": 20}, {"referenceID": 4, "context": "Jacob et al. (2009) duplicated the variables in the design matrix that appear in group overlaps, then solved the problem as group lasso without overlaps. Kim and Xing (2010) reparameterized the group norm with additional dummy variables.", "startOffset": 0, "endOffset": 174}, {"referenceID": 8, "context": "In this paper, we solve (19) by its smooth and convex dual problem proposed by Liu and Ye (2010). Let Z = {v \u2208 \u03a8K |\u2016c v\u2016 = 0}, and Z\u0304 = \u03a8K \u2212Z be the complement.", "startOffset": 79, "endOffset": 97}, {"referenceID": 9, "context": "We use the accelerated gradient descent method implemented in (Liu et al., 2009).", "startOffset": 62, "endOffset": 80}, {"referenceID": 8, "context": "Following the proof in Liu and Ye (2010), we can show that \u03b7(S) is convex and Lipschitz continuous.", "startOffset": 23, "endOffset": 41}, {"referenceID": 11, "context": "The partial correlation method (Peng et al., 2009) is taken as an example to show how the links of response variables are discovered without considering X.", "startOffset": 31, "endOffset": 50}], "year": 2013, "abstractText": "In undirected graphical models, learning the graph structure and learning the functions that relate the predictive variables (features) to the responses given the structure are two topics that have been widely investigated in machine learning and statistics. Learning graphical models in two stages will have problems because graph structure may change after considering the features. The main contribution of this paper is the proposed method that learns the graph structure and functions on the graph at the same time. General graphical models with binary outcomes conditioned on predictive variables are proved to be equivalent to multivariate Bernoulli model. The reparameterization of the potential functions in graphical model by conditional log odds ratios in multivariate Bernoulli model offers advantage in the representation of the conditional independence structure in the model. Additionally, we impose a structure penalty on groups of conditional log odds ratios to learn the graph structure. These groups of functions are designed with overlaps to enforce hierarchical function selection. In this way, we are able to shrink higher order interactions to obtain a sparse graph structure. Simulation studies show that the method is able to recover the graph structure. The analysis of county data from Census Bureau gives interesting relations between unemployment rate, crime and others discovered by the model.", "creator": "LaTeX with hyperref package"}}}