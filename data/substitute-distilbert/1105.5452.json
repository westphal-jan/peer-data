{"id": "1105.5452", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "27-May-2011", "title": "Unifying Class-Based Representation Formalisms", "abstract": "the notion of class is ubiquitous in theoretical terminology and hence proposed in many formalisms for the representation & structured knowledge used largely in knowledge representation modeling in databases. in this paper we study the basic issues description and representation formalisms systematically single out both their common characteristics and identify distinguishing features. such investigation leads us to propose a unifying framework in which we are able to capture the fundamental aspects of several representation languages expressed in different contexts. the proposed formalism is expressed in the style of description logics, which that been introduced in quantitative framework as a means to provide a semantically well - founded basis for performing structural aspects of knowledge representation systems. the description logic considered in this paper is a subset of first order logic with different computational characteristics. it is quite realistic and features a novel combination encompassing constructs that have not been studied before. the distinguishing constructs are number restrictions, which generalize existence and functional dependencies, inverse roles, which allow one to refer to the realization of a relationship, and possibly cyclic assertions, which are necessary for capturing real conceptual domains. we are able to show that it is precisely such combination of constructs that makes our proposal powerful enough to model the essential set of features for defining class structures that are common to frame systems, object - oriented database languages, then semantic data models. as a consequence of the established correspondences, several significant extensions of each of the above formalisms become available. the high expressiveness of the ways our observe and the need for capturing the reasoning in different styles forces us to distinguish between unrestricted and finite model reasoning. a notable feature of our proposal is that technically, both cases is decidable. we argue that, by advantage of the high expressive power characteristics of the overall reasoning capabilities on capturing unrestricted and finite models, our logic provides a common alternative than class - based representation statements.", "histories": [["v1", "Fri, 27 May 2011 01:49:59 GMT  (175kb)", "http://arxiv.org/abs/1105.5452v1", null]], "reviews": [], "SUBJECTS": "cs.AI", "authors": ["d calvanese", "m lenzerini", "d nardi"], "accepted": false, "id": "1105.5452"}, "pdf": {"name": "1105.5452.pdf", "metadata": {"source": "CRF", "title": null, "authors": ["Diego Calvanese", "alvanese dis.uniroma1.it", "Maurizio Lenzerini", "lenzerini dis.uniroma1.it", "Daniele Nardi"], "emails": [], "sections": [{"heading": null, "text": "Unifying Class-Based Representation Formalisms\nDiego Calvanese alvanese dis.uniroma1.it Maurizio Lenzerini lenzerini dis.uniroma1.it Daniele Nardi nardi dis.uniroma1.it Dipartimento di Informati a e Sistemisti a Universit a di Roma \\La Sapienza\" Via Salaria 113, I-00198 Roma, Italy\nAbstra t\nThe notion of lass is ubiquitous in omputer s ien e and is entral in many formalisms for the representation of stru tured knowledge used both in knowledge representation and in databases. In this paper we study the basi issues underlying su h representation formalisms and single out both their ommon hara teristi s and their distinguishing features. Su h investigation leads us to propose a unifying framework in whi h we are able to apture the fundamental aspe ts of several representation languages used in di erent ontexts. The proposed formalism is expressed in the style of des ription logi s, whi h have been introdu ed in knowledge representation as a means to provide a semanti ally well-founded basis for the stru tural aspe ts of knowledge representation systems. The des ription logi\nonsidered in this paper is a subset of rst order logi with ni e omputational hara teristi s. It is quite expressive and features a novel ombination of onstru ts that has not been studied before. The distinguishing onstru ts are number restri tions, whi h generalize existen e and fun tional dependen ies, inverse roles, whi h allow one to refer to the inverse of a relationship, and possibly y li assertions, whi h are ne essary for apturing real world domains. We are able to show that it is pre isely su h ombination of onstru ts that makes our logi powerful enough to model the essential set of features for de ning lass stru tures that are ommon to frame systems, obje t-oriented database languages, and semanti data models. As a onsequen e of the established orresponden es, several signi ant extensions of ea h of the above formalisms be ome available. The high expressiveness of the logi we propose and the need for apturing the reasoning in di erent ontexts for es us to distinguish between unrestri ted and nite model reasoning. A notable feature of our proposal is that reasoning in both ases is de idable. We argue that, by virtue of the high expressive power and of the asso iated reasoning apabilities on both unrestri ted and nite models, our logi provides a ommon ore for lass-based representation formalisms."}, {"heading": "1. Introdu tion", "text": "In many elds of omputer s ien e we nd formalisms for the representation of obje ts and\nlasses (Mots hnig-Pitrik & Mylopoulous, 1992). Generally speaking, an obje t denotes an element of the domain of interest, and a lass denotes a set of obje ts with ommon hara teristi s. We use the term \\ lass-based representation formalism\" to refer to a formalism that allows one to express several kinds of relationships and onstraints (e.g., sub lass onstraints) holding among the lasses that are meaningful in a set of appli ations. Moreover,\nlass-based formalisms aim at taking advantage of the lass stru ture in order to provide various information, su h as whether a lass is onsistent, i.e., it admits at least one obje t, whether a lass is a sub lass of another lass, and more generally, whether a given onstraint\n1999 AI A ess Foundation and Morgan Kaufmann Publishers. All rights reserved.\nholds between a given set of lasses. From the above hara terization, it should be lear that the formalisms referred to in this paper deal only with the stru tural aspe ts of obje ts and lasses, and do not in lude any features for the spe i ation of behavioral properties of obje ts.\nThree main families of lass-based formalisms are identi ed in this paper. The rst one omes from knowledge representation and in parti ular from the work on semanti networks and frames (see for example Lehmann, 1992; Sowa, 1991). The se ond one originates in the eld of databases and in parti ular from the work on semanti data models (see for example Hull & King, 1987). The third one arises from the work on types in programming languages and obje t-oriented systems (see for example Kim & Lo hovsky, 1989).\nIn the past there have been several attempts to establish relationships among the various families of lass-based formalisms (see Se tion 6 for a brief survey). The proposed solutions are not fully general and a formalism apturing both the modeling onstru ts and the reasoning te hniques for all the above families is still missing. In this paper we address this problem by proposing a lass-based representation formalism, based on des ription logi s (Bra hman & Levesque, 1984; S hmidt-S hau & Smolka, 1991; Donini, Lenzerini, Nardi, & S haerf, 1996), and by using it for omparing other formalisms.\nIn des ription logi s, stru tured knowledge is des ribed by means of so alled on epts and roles, whi h denote unary and binary predi ates, respe tively. Starting from a set of atomi symbols one an build omplex on ept and role expressions by applying suitable\nonstru tors whi h hara terize a des ription logi . Formally, on epts are interpreted as subsets of a domain and roles as binary relations over that domain, and all onstru ts are equipped with a pre ise set-theoreti semanti s. The most ommon onstru ts in lude boolean operations on on epts, and quanti ation over roles. For example, the on ept Person u 8 hild.Male, denotes the set of individuals that are instan es of the on ept Person and are onne ted through the role hild only to instan es of the on ept Male, while the on ept 9 hild denotes all individuals that are onne ted through the role hild to some individual. Further onstru ts that have been onsidered important in lude more general forms of quanti ation, number restri tions, whi h allow one to state limits on the number of onne tions that an individual may have via a ertain role, and onstru ts on roles, su h as interse tion, on atenation and inverse. A des ription logi knowledge base, expressing the intensional knowledge about the modeled domain, is built by stating in lusion assertions between on epts, whi h have to be satis ed by the models of the knowledge base. The assertions are used to spe ify ne essary and/or ne essary and su\u00c6 ient onditions for individuals to be instan es of ertain on epts. Reasoning on su h knowledge bases in ludes the dete tion of in onsisten ies in the knowledge base itself, determining whether a on ept\nan be populated in a model of the knowledge base, and he king subsumption, i.e., whether all instan es of a on ept are ne essarily also instan es of another on ept in all models of the knowledge base.\nIn this paper we propose a des ription logi alled aluni, whi h is quite expressive and in ludes a novel ombination of onstru ts, in luding number restri tions, inverse roles, and in lusion assertions with no restri tions on y les. Su h features make aluni powerful enough to provide a uni ed framework for frame systems, obje t-oriented languages, and semanti data models. We show this by establishing a pre ise orresponden e with a framebased language in the style of the one proposed by Fikes and Kehler (1985), with the\nEntity-Relationship model (Chen, 1976), and with an obje t-oriented language in the style of the one introdu ed by Abiteboul and Kanellakis (1989). More spe i ally, we identify the most relevant features to model lasses in ea h of the ited settings and show that a spe i ation in any of those lass-based formalisms an be equivalently expressed as a knowledge base in aluni. In this way, we are able to identify whi h are the ommonalities among the families and whi h are the spe i ities of ea h family. Therefore, even though there are spe i features of every family that are not addressed by aluni, we are able to show that the formalism proposed in this paper provides important features that are\nurrently missing in ea h family, although their relevan e has often been stressed. In this sense, our unifying framework points out possible developments for the languages belonging to all the three families.\nOne fundamental reason for regarding aluni as a unifying framework for lass-based representation formalisms is that reasoning in aluni is hard, but nonetheless de idable, as shown by Calvanese, Lenzerini, and Nardi (1994), Calvanese (1996 ). Consequently, the language features arising from di erent frameworks to build lass-based representations are not just given a ommon semanti a ount, but are ombined in a more expressive setting where one retains the apability of solving reasoning tasks. The ombination of onstru ts in luded in the language makes it ne essary to distinguish between reasoning with respe t to\nnite models, i.e., models with a nite domain, and reasoning with respe t to unrestri ted models. Calvanese (1996 ) devises suitable te hniques for both unrestri ted and nite model reasoning, that enable for reasoning in the di erent ontexts arising from assuming a nite domain, as it is often the ase in the eld of databases, or assuming that a domain an also be in nite. In the paper, we dis uss the results on reasoning in aluni, and ompare them with other results on reasoning in lass-based representation formalisms.\nSummarizing, our framework provides an adequate expressive power to a ount for the most signi ant features of the major families of lass-based formalisms. Moreover, it is equipped with suitable te hniques for reasoning in both nite and unrestri ted models. Therefore, we believe that aluni aptures the essential ore of the lass-based representation formalisms belonging to all three families mentioned above.\nThe paper is organized as follows. In the next se tion we present our formalism and in Se tions 3, 4, and 5 we dis uss three families of lass-based formalisms, namely, frame languages, semanti data models, and obje t-oriented data models, showing that their basi features are aptured by knowledge bases in aluni. The nal se tions ontain a review of related work, in luding a dis ussion of reasoning in aluni and lass-based formalism, and some on luding remarks."}, {"heading": "2. A Unifying Class-Based Representation Language", "text": "In this se tion, we present aluni, a lass-based formalism in the style of des ription logi s (DLs) (Bra hman & Levesque, 1984; S hmidt-S hau & Smolka, 1991; Donini et al., 1996; Donini, Lenzerini, Nardi, & Nutt, 1997). In DLs the domain of interest is modeled by means of on epts and roles, whi h denote lasses and binary relations, respe tively. Generally speaking, a DL is formed by three basi omponents:\nA des ription language, whi h spe i es how to onstru t omplex on ept and role expressions (also alled simply on epts and roles), by starting from a set of atomi\nsymbols and by applying suitable onstru tors. It is the set of allowed onstru ts that\nhara terizes the des ription language.\nA knowledge spe i ation me hanism, whi h spe i es how to onstru t a DL knowledge base, in whi h properties of on epts and roles are asserted.\nA set of basi reasoning tasks provided by the DL.\nIn the rest of the se tion we des ribe the spe i form that these three omponents assume in aluni.\n2.1 The Des ription Language of aluni\nIn the des ription language of aluni, alled ALUNI, on epts and roles are formed a -\nording to the syntax shown in Table 1, where A denotes an atomi on ept, P an atomi\nrole, C an arbitrary on ept expression, R an arbitrary role expression, and n a nonnegative integer. To in rease readability of on ept expressions, we also introdu e the following abbreviations:\n> A t :A; for some atomi on ept A\n? A u :A; for some atomi on ept A\n9R 9\n1\nR\n9\n=n\nR 9\nn\nR u 9\nn\nR\nCon epts are interpreted as subsets of a domain and roles as binary relations over that domain. Intuitively, :A represents the negation of an atomi on ept, and is interpreted as the omplement with respe t to the domain of interpretation. C\n1\nu C\n2\nrepresents the\nonjun tion of two on epts and is interpreted as set interse tion, while C\n1\ntC\n2\nrepresents\ndisjun tion and is interpreted as set union. Consequently, > represents the whole domain,\n1. \u2104S denotes the ardinality of a set S.\nand ? the empty set. 8R.C is alled universal quanti ation over roles and is used to denote those elements of the interpretation domain that are onne ted through role R only to instan es of the on ept C. 9 n R and 9 n R are alled number restri tions, and impose on their instan es restri tions on the minimum and maximum number of obje ts they are\nonne ted to through role R. P , alled the inverse of role P , represents the inverse of the\nbinary relation denoted by P .\nMore formally, an interpretation I = (\nI\n;\nI\n) onsists of an interpretation domain\nI\nand an interpretation fun tion\nI\nthat maps every on ept C to a subset C\nI\nof\nI\nand\nevery role R to a subset R\nI\nof\nI\nI\na ording to the semanti rules spe i ed in Table 1.\nThe sets C\nI\nand R\nI\nare alled the extensions of C and R respe tively.\nExample 2.1 Consider the on ept expression\n8enrolls.Student u 9\n2\nenrolls u 9\n30\nenrollsu\n8tea hes .(Professor t GradStudent) u 9\n=1\ntea hes u\n:AdvCourse\nspe ifying the onstraints for an obje t to be a university ourse. The expression re e ts the fa t that ea h ourse enrolls only students, and restri tions on the minimum and maximum number of enrolled students. By using the role tea hes and the inverse onstru tor we\nan state the property that ea h ourse is taught by exa tly one individual, who is either a professor or a graduate student. Finally, negation is used to express disjointness from the\non ept denoting advan ed ourses.\n2.2 Knowledge Bases in aluni\nAn aluni knowledge base, whi h expresses the knowledge about lasses and relations of the modeled domain, is formally de ned as a triple K = (A;P;T ), where A is a nite set of atomi on epts, P is a nite set of atomi roles, and T is a nite set of so alled in lusion assertions. Ea h su h assertion has the form\nA\n_\nC\nwhere A is an atomi on ept and C an arbitrary on ept expression. Su h an in lusion assertion states by means of the on ept C ne essary properties for an element of the domain in order to be an instan e of the atomi on ept A. Formally, an interpretation I satis es the in lusion assertion A _ C if A I C I . An interpretation I is a model of a knowledge base K if it satis es all in lusion assertions in K. A nite model is a model with nite domain.\nExample 2.1 ( ont.) The assertion\nCourse\n_\n8enrolls.Studentu 9\n2\nenrollsu 9\n30\nenrolls u\n8tea hes .(Professort GradStudent) u 9\n=1\ntea hes\nmakes use of a omplex on ept expression to state ne essary onditions for an obje t to be an instan e of the on ept Course.\nIn aluni no restri tions are imposed on the form that the in lusion assertions may assume. In parti ular we do not rule out y li assertions, i.e., assertions in whi h the\non ept expression on the right hand side refers, either dire tly or indire tly via other assertions, to the atomi on ept on the left hand side. In the presen e of y li assertions di erent semanti s may be adopted (Nebel, 1991). The one de ned above, alled des riptive semanti s, a epts all interpretations that satisfy the assertions in the knowledge base, and hen e interprets assertions as onstraints on the domain to be modeled. For in lusion assertions, des riptive semanti s has been laimed to provide the most intuitive results (Bu hheit, Donini, Nutt, & S haerf, 1998). Alternative semanti s whi h have been proposed are based on xpoint onstru tions (Nebel, 1991; S hild, 1994; De Gia omo & Lenzerini, 1994b), and hen e allow to de ne in a unique way the interpretation of on epts.\nIn general, y les in the knowledge base in rease the omplexity of reasoning (Nebel, 1991; Baader, 1996; Calvanese, 1996b) and require a spe ial treatment by reasoning pro edures (Baader, 1991; Bu hheit, Donini, & S haerf, 1993). For this reason, many DL based systems assume the knowledge base to be a y li (Bra hman, M Guinness, Patel-S hneider, Alperin Resni k, & Borgida, 1991; Bres iani, Fran oni, & Tessaris, 1995). However, this assumption is unrealisti in pra ti e, and y les are de nitely ne essary for a orre t modeling in many appli ation domains. Indeed, the use of y les is allowed in all data models used in databases, and, as shown in the following se tions, in order to apture their semanti s in aluni the possibility of using y li assertions is fundamental.\nBesides in lusion assertions, some DL based systems also make use of equivalen e assertions (Bu hheit et al., 1993), whi h express both ne essary and su\u00c6 ient onditions for an obje t to be an instan e of a on ept. Although this possibility is ruled out in aluni, this does not limit its ability of apturing both frame based systems and database models, where the onstraints that an be expressed orrespond naturally to in lusion assertions.\n2.3 Reasoning in aluni\nThe basi tasks we onsider when reasoning over an aluni knowledge base are on ept\nonsisten y and on ept subsumption:\nCon ept onsisten y is the problem of de iding whether a on ept C is onsistent in a knowledge base K (written as K 6j= C ?), i.e., whether K admits a model I su h that C I 6= ;.\nCon ept subsumption is the problem of de iding whether a on ept C\n1\nis subsumed by\na on ept C\n2\nin a knowledge base K (written as K j= C\n1\nC\n2\n), i.e., whether C\nI 1\nC\nI 2\nfor ea h model I of K.\nThe in lusion of number restri tions and inverse roles in ALUNI and the ability in aluni of using arbitrary, possibly y li in lusion assertions allows one to onstru t a knowledge base in whi h a ertain on ept is onsistent but has ne essarily an empty extension in all nite models of the knowledge base. Similarly, a subsumption relation between two\non epts may hold only if in nite models of the knowledge base are ruled out and only nite\nmodels are onsidered.\nExample 2.2 Let K\neven\nbe the knowledge base shown in Figure 1. Intuitively, the asser-\ntions in K\neven\nstate that for ea h number there is an even number whi h doubles it, and\nthat all numbers whi h double it are even. Ea h even number is a number, doubles at most one number, and doubles only numbers. Observe that for any model I of K\neven\n, the univer-\nsal quanti ations together with the fun tionality of doubles in the assertions imply that \u2104Even I \u2104Number I , while the dire t in lusion assertion between Even and Number implies that \u2104Even I \u2104Number I . Therefore, the two on epts have the same ardinality, and sin e one is a sub- on ept of the other, if the domain is nite, their extensions oin ide. This does not ne essarily hold for in nite domains. In fa t, the names we have hosen suggest already an in nite model of the knowledge base in whi h Number and Even are interpreted di erently. The model is obtained by taking the natural numbers as domain, and interpreting Number as the whole domain, Even as the even numbers, and doubles as the set f(2n; n) j n 0g.\nThe example above shows that aluni does not have the nite model property, whi h states that if a on ept is onsistent in a knowledge base then the knowledge base admits a nite model in whi h the on ept has a nonempty extension. Therefore, it is important to distinguish between reasoning with respe t to unrestri ted models and reasoning with respe t to nite models. We all (unrestri ted) on ept onsisten y (written as K 6j=\nu\nC\n?) and (unrestri ted) on ept subsumption (written as K j=\nu\nA C) the reasoning tasks\nas des ribed above, i.e., arried out without restri ting the attention to nite models. The\norresponding reasoning tasks arried out by onsidering nite models only, are alled nite on ept onsisten y (written as K 6j=\nf\nC ?) and nite on ept subsumption (written as\nK j=\nf\nA C).\nExample 2.2 ( ont.) Summing up the previous onsiderations, we an say that Number is not subsumed by Even in K\neven\n, i.e., K\neven\n6j=\nu\nNumber Even, but is nitely subsumed, i.e.,\nK\neven\nj=\nf\nNumber Even. Equivalently Numberu:Even is onsistent in K\neven\n, i.e., K\neven\n6j=\nu\nNumberu:Even ?, but is not nitely onsistent, i.e., K\neven\nj=\nf\nNumberu:Even ?.\nA distinguishing feature of aluni is that reasoning both in the nite and in the unrestri ted ase is de idable. In parti ular, unrestri ted on ept satis ability and on ept subsumption are de idable in deterministi exponential time (De Gia omo & Lenzerini,\n1994a; Calvanese et al., 1994), and sin e reasoning in stri t sublanguages of aluni is already EXPTIME-hard (Calvanese, 1996 ), the known algorithms are omputationally optimal. Finite on ept onsisten y in aluni is also de idable in deterministi exponential time while nite on ept subsumption (in the general ase) is de idable in deterministi double exponential time (Calvanese, 1996 ). A more pre ise dis ussion on the methods for reasoning in aluni is provided in Se tion 6.2, while a detailed a ount of the adopted algorithms and an analysis of their omputational omplexity is presented by Calvanese (1996 ).\nIn the next se tions we show how the two forms of reasoning with respe t to unrestri ted and nite models, apture the reasoning tasks that are typi ally onsidered in di erent formalisms for the stru tured representation of knowledge."}, {"heading": "3. Frame Based Systems", "text": "Frame languages are based on the idea of expressing knowledge by means of frames, whi h are stru tures representing lasses of obje ts in terms of the properties that their instan es must satisfy. Su h properties are de ned by the frame slots, that onstitute the items of a frame de nition. Sin e the 70s a large number of frame systems have been developed, with di erent goals and di erent features. DLs bear a lose relationship with the kl-one family of frame systems (Woods & S hmolze, 1992). However, here we would like to onsider frame systems from a more general perspe tive, as dis ussed for example by Karp (1992), Karp, Myers, and Gruber (1995), and establish the orresponden e with aluni knowledge bases in this ontext.\nWe remark that we are restri ting our attention to those aspe ts that are related to the taxonomi stru ture. Moreover, as dis ussed below, we onsider assertional knowledge bases, where intensional knowledge is hara terized in terms of in lusion assertions rather than de nitions. In addition, we do not onsider those features that annot be aptured in a rst-order framework, su h as default values in the slots, atta hed pro edures, and the spe i ation of overriding inheritan e poli ies. Some of the issues on erning the modeling of these aspe ts in DLs are addressed by Donini, Lenzerini, Nardi, Nutt, and S haerf (1994), Donini, Nardi, and Rosati (1995), within a modal nonmonotoni extension of DLs."}, {"heading": "3.1 Syntax of Frame Based Systems", "text": "To make the orresponden e pre ise, we need to x syntax and semanti s for the frame systems we onsider. Unfortunately, there is no a epted standard and we have hosen to use here basi ally the notation adopted by Fikes and Kehler (1985), whi h is used also in the KEE 2 system.\nDe nition 3.1 A frame knowledge base, denoted by F , is formed by a set of frame and slot names, and is onstituted by a set of frame de nitions of the following form:\nFrame : F in KB F E;\n2. KEE is a trademark of Intelli orp. Note that a KEE user does not dire tly spe ify her knowledge base\nin this notation, but is allowed to de ne frames intera tively via the graphi al system interfa e.\nwhere E is a frame expression, i.e., an expression formed a ording to the following syntax:\nE ! SuperClasses : F\n1\n; : : : ; F\nh\nMemberSlot : S\n1\nValueClass : H\n1\nCardinality.Min : m\n1\nCardinality.Max : n\n1\nMemberSlot : S\nk\nValueClass : H\nk\nCardinality.Min : m\nk\nCardinality.Max : n\nk\nF and S denote frame and slot names, respe tively, m and n denote positive integers, and H denotes slot onstraint, whi h an be spe i ed as follows:\nH ! F j\n(INTERSECTION H\n1\nH\n2\n) j\n(UNION H\n1\nH\n2\n) j\n(NOT H)\nFor readers that are familiar with the KEE system, we point out that we omit the spe i ation of the sub- lasses for a frame present in KEE, sin e it an be dire tly derived from the spe i ation of the super- lasses.\nExample 3.2 Figure 2 shows a simple example of a knowledge base modeling the situation at an university expressed in the frame language we have presented. The frame Course\nrepresents ourses whi h enroll students and are taught either by graduate students or professors. Cardinality restri tions are used to impose a minimum and maximum number of students that may be enrolled in a ourse, and to express that ea h ourse is taught by exa tly one individual. The frame AdvCourse represents ourses whi h enroll only graduate students, i.e., students who already have a degree. Basi ourses, on the other hand, may be taught only by professors."}, {"heading": "3.2 Semanti s of Frame Based Systems", "text": "To give semanti s to a set of frame de nitions we resort to their interpretation in terms of\nrst-order predi ate al ulus (Hayes, 1979). A ording to su h interpretation, frame names\nare treated as unary predi ates, while slots are onsidered binary predi ates.\nA frame expression E is interpreted as a predi ate logi formula E(x), whi h has one free variable, and onsists of the onjun tion of senten es, obtained from the super- lass spe i ation and from ea h slot spe i ation. In parti ular, for the super- lasses F\n1\n; : : : ; F\nh\nwe have:\nF\n1\n(x) ^ : : : ^ F\nh\n(x)\nand for a slot spe i ation\nMemberSlot : S\nValueClass : H Cardinality.Min : m Cardinality.Max : n\nwe have\n8y. (S(x; y)! H(y)) ^ 9y\n1\n; : : : ; y\nm\n. ((\nV\ni 6=j\ny\ni\n6= y\nj\n) ^ S(x; y\n1\n) ^ ^ S(x; y\nm\n)) ^\n8y\n1\n; : : : ; y\nn+1\n. ((S(x; y\n1\n) ^ ^ S(x; y\nn+1\n))!\nW\ni 6=j\ny\ni\n= y\nj\n);\nunder the assumption that within one frame de nition the o urren es of x refer to the same free variable. Finally the onstraints on the slots are interpreted as onjun tion, disjun tion and negation, respe tively, i.e.:\n(INTERSECTION H\n1\nH\n2\n) is interpreted as H\n1\n(x) ^H\n2\n(x)\n(UNION H\n1\nH\n2\n) is interpreted as H\n1\n(x) _H\n2\n(x)\n(NOT H) is interpreted as :H(x)\nA frame de nition\nFrame : F in KB F E\nis then onsidered as the universally quanti ed senten e of the form\n8x.(F (x)! E(x)):\nThe whole frame knowledge base F is onsidered as the onjun tion of all rst-order senten es orresponding to the frame de nitions in F .\nHere we regard frame de nitions as ne essary onditions, whi h is ommonpla e in the frame systems known as assertional frame systems, as opposed to de nitional systems, where frame de nitions are interpreted as ne essary and su\u00c6 ient onditions.\nIn order to enable the omparison with our formalisms for representing stru tured knowledge we restri t our attention to the reasoning tasks that involve the frame knowledge base, independently of the assertional knowledge, i.e., the frames instan es. Fikes and Kehler (1985) mention several reasoning servi es asso iated with frames, su h as:\nConsisten y he king, whi h amounts to verifying whether a frame F is satis able in a knowledge base. In parti ular, this involves both reasoning on ardinalities and\nhe king whether the ller of a given slot belongs to a ertain frame.\nInheritan e, whi h, in our ase, amounts to the ability of identifying whi h of the frames are more general than a given frame, sometimes alled all-super-of (Karp et al., 1995). All the properties of the more general frames are then inherited by the more spe i one. Su h a reasoning is therefore based on the more general ability to\nhe k the mutual relationhips between frame des riptions in the knowledge base.\nThese reasoning servi es are formalized in the rst-order semanti s as follows.\nDe nition 3.3 Let F be a frame knowledge base and F a frame in F . We say that F is\nonsistent in F if the rst-order senten e F ^9x.F (x) is satis able. Moreover, we say that\na frame des ription E is more general than F in F if F j= 8x.(F (x)! E(x)).\n3.3 Relationship between Frame Based Systems and aluni\nThe rst-order semanti s given above allows us to establish a straightforward relationship between frame languages and aluni. Indeed, we now present a translation from frame knowledge bases to aluni knowledge bases.\nWe rst de ne the fun tion that maps ea h frame expression into an ALUNI on ept\nexpression as follows:\nEvery frame name F is mapped into an atomi on ept (F ).\nEvery slot name S is mapped into an atomi role (S).\nEvery slot onstraint is mapped as follows\n(UNION H\n1\nH\n2\n) is mapped into (H\n1\n) t (H\n2\n):\n(INTERSECTION H\n1\nH\n2\n) is mapped into (H\n1\n) u (H\n2\n):\n(NOT H) is mapped into : (H):\nEvery frame expression of the form\nSuperClasses : F\n1\n; : : : ; F\nh\nMemberSlot : S\n1\nValueClass : H\n1\nCardinality.Min : m\n1\nCardinality.Max : n\n1\nMemberSlot : S\nk\nValueClass : H\nk\nCardinality.Min : m\nk\nCardinality.Max : n\nk\nis mapped into the lass expression\n(F\n1\n) u u (F\nh\n) u\n8 (S\n1\n). (H\n1\n) u 9\nm\n1\n(S\n1\n) u 9\nn\n1\n(S\n1\n) u\n8 (S\nk\n). (H\nk\n) u 9\nm\nk\n(S\nk\n) u 9\nn\nk\n(S\nk\n):\nThis mapping allows us to translate a frame knowledge base into an aluni knowledge base, as spe i ed in the following de nition.\nDe nition 3.4 The aluni knowledge base (F) = (A;P;T ) orresponding to a frame knowledge base F is obtained as follows:\nA onsists of one atomi on ept (F ) for ea h frame name F in F .\nP onsists of one atomi role (S) for ea h slot name S in F .\nT onsists of an in lusion assertion\n(F )\n_\n(E)\nfor ea h frame de nition\nFrame : F in KB F E\nin F .\nExample 3.2 ( ont.) We illustrate the translation on the frame knowledge base in Figure 2. The orresponding aluni knowledge base is shown in Figure 3.\nThe orre tness of the translation follows from the orresponden e between the settheoreti semanti s of aluni and the rst-order interpretation of frames (see for example Hayes, 1979; Borgida, 1996; Donini et al., 1996). We an observe that inverse roles are in fa t not ne essary for the formalization of frames. Indeed, the possibility of referring to the inverse of a slot has been rarely onsidered in frame knowledge representation systems (Some ex eptions are reported in Karp, 1992). Due to the absen e of inverse roles the distin tion between reasoning in nite and unrestri ted models is not ne essary 3 . Consequently, all the above mentioned forms of reasoning are aptured by unrestri ted on ept onsisten y and on ept subsumption in aluni knowledge bases. This is summarized in the following theorem.\nTheorem 3.5 Let F be a frame knowledge-base, F be a frame in F , E be a frame des ription, and (F), (F ), and (E) be their translations in aluni. Then the following hold:\nF is onsistent in F if and only if (F) 6j=\nu\n(F ) ?.\nE is more general than F in F if and only if (F) j=\nu\n(F ) (E).\nProof. The laim dire tly follows from the semanti s of frame knowledge bases and the translation into DLs that we have adopted.\nBy Theorem 3.5 it be omes possible to exploit the methods for unrestri ted reasoning on aluni knowledge bases in order to reason on frame knowledge bases. Sin e the problem of reasoning, e.g., in KEE is already EXPTIME- omplete, we do not pay in terms of omputational omplexity for the expressiveness added by the onstru ts of aluni. In fa t, by resorting to the orresponden e with aluni it be omes possible to add to frame systems useful features, su h as the possibility of spe ifying the inverse of a slot (Karp, 1992), and still retain the ability to reason in EXPTIME."}, {"heading": "4. Semanti Data Models", "text": "Semanti data models were introdu ed primarily as formalisms for database s hema design. They provide a means to model databases in a mu h ri her way than traditional data models supported by Database Management Systems, and are be oming more and more important be ause they are adopted in most of the re ent database design methodologies and Computer Aided Software Engineering tools.\nThe most widespread semanti data model is the Entity-Relationship (ER) model introdu ed by Chen (1976). It has by now be ome a standard, extensively used in the design phase of ommer ial appli ations. In the ommonly a epted ER notation, lasses are alled entities and are represented as boxes, whereas relationships between entities are represented as diamonds. Arrows between entities, alled ISA relationships, represent in lusion assertions. The links between entities and relationships represent the ER-roles, to whi h number restri tions are asso iated. Dashed links are used whenever su h restri tions are re ned for more spe i entities. Finally, elementary properties of entities are modeled by attributes,\n3. If we eliminate from ALUNI inverse roles, then the resulting DL has the nite model property.\nwhose values belong to one of several prede ned domains, su h as Integer, String, or Boolean.\nThe ER model does not provide onstru ts for expressing expli it disjointness or disjun - tion of entities, but extensions of the model allow for the use of generalization hierar hies whi h represent a ombination of these two onstru ts. In order to keep the presentation simple, we do not onsider generalization hierar hies in the formalization we provide, although their addition would be straightforward. Similarly, we omit attributes of relations.\nWe now show that all relevant aspe ts of the ER model an be aptured in aluni, and thus that reasoning on an ER s hema an be redu ed to reasoning on the orresponding aluni knowledge base. Sin e aluni is equipped with apabilities to reason on knowledge bases, both with respe t to nite and unrestri ted models (see Se tion 6.2), the redu tion shows that reasoning on the ER model, and more generally on semanti data models, is de idable.\nAs in the ase of frame-based systems, we restri t our attention to those aspe ts that onstitute the ore of the ER model. For this reason we do not onsider some features, su h as keys and weak entities, that have been introdu ed in the literature (Chen, 1976), but appear only in some of the formalizations of the ER model and the methodologies for\non eptual modeling based on the model. A proposal for the treatment of keys in des ription\nlogi s is presented by Borgida and Weddell (1997).\nIn order to establish the orresponden e between the ER model and aluni, we present\nformal syntax and semanti s of ER s hemata."}, {"heading": "4.1 Syntax of the Entity-Relationship Model", "text": "Although the ER model has by now be ome an industrial standard, several variants and extensions have been introdu ed, whi h di er in minor aspe ts in expressiveness and in notation (Chen, 1976; Teorey, 1989; Batini, Ceri, & Navathe, 1992; Thalheim, 1992, 1993). Also, ER s hemata are usually de ned using a graphi al notation whi h is parti ularly useful for an easy visualization of the data dependen ies, but whi h is not well suited for our purposes. Therefore we have hosen a formalization of the ER model whi h abstra ts with respe t to the most important hara teristi s and allows us to develop the orresponden e to aluni.\nIn the following, for two nite sets X and Y we all a fun tion from a subset of X\nto Y an X-labeled tuple over Y . The labeled tuple T that maps x\ni\n2 X to y\ni\n2 Y , for\ni 2 f1; : : : ; kg, is denoted [x\n1\n: y\n1\n; : : : ; x\nk\n: y\nk\n\u2104. We also write T [x\ni\n\u2104 to denote y\ni\n.\nDe nition 4.1 An ER s hema is a tuple S = (L\nS\n;\nS\n; att\nS\n; rel\nS\n; ard\nS\n), where\nL\nS\nis a nite alphabet partitioned into a set E\nS\nof entity symbols, a set A\nS\nof attribute\nsymbols, a set U\nS\nof role symbols, a set R\nS\nof relationship symbols, and a set D\nS\nof\ndomain symbols; ea h domain symbol D has an asso iated prede ned basi domain D B D , and we assume the various basi domains to be pairwise disjoint.\nS\nE\nS\nE\nS\nis a binary relation over E\nS\n.\natt\nS\nis a fun tion that maps ea h entity symbol in E\nS\nto an A\nS\n-labeled tuple over D\nS\n.\nrel\nS\nis a fun tion that maps ea h relationship symbol in R\nS\nto an U\nS\n-labeled tuple\nover E\nS\n. We assume without loss of generality that:\n{ Ea h role is spe i to exa tly one relationship, i.e., for two relationships\nR;R\n0\n2 R\nS\nwith R 6= R\n0\n, if rel\nS\n(R) = [U\n1\n:E\n1\n; : : : ; U\nk\n:E\nk\n\u2104 and rel\nS\n(R\n0\n) =\n[U\n0 1 :E 0 1 ; : : : ; U 0\nk\n0\n:E\n0 k 0 \u2104, then fU 1 ; : : : ; U k g and fU 0 1 ; : : : ; U 0 k 0 g are disjoint.\n{ For ea h role U 2 U\nS\nthere is a relationship R and an entity E su h that\nrel\nS\n(R) = [: : : ; U :E; : : :\u2104.\nard\nS\nis a fun tion from E\nS\nR\nS\nU\nS\nto IN\n0\n(IN\n0\n[ f1g) that satis es the fol-\nlowing ondition: for a relationship R 2 R\nS\nsu h that rel\nS\n(R) = [U\n1\n:E\n1\n; : : : ; U\nk\n:E\nk\n\u2104,\nard\nS\n(E;R;U) is de ned only if U = U\ni\nfor some i 2 f1; : : : ; kg, and if E\nS\nE\ni\n(where\nS\ndenotes the re exive transitive losure of\nS\n). The rst omponent\nof ard\nS\n(E;R;U) is denoted with min\nS\n(E;R;U) and the se ond omponent with\nmax\nS\n(E;R;U). If not stated otherwise, min\nS\n(E;R;U) is assumed to be 0 and\nmax\nS\n(E;R;U) is assumed to be 1.\nBefore spe ifying the formal semanti s of ER s hemata we give an intuitive des ription of\nthe omponents of a s hema. The relation\nS\nmodels the ISA-relationship between entities.\nWe do not need to make any spe ial assumption on the form of\nS\nsu h as a y li ity\nor inje tivity. The fun tion att\nS\nis used to model attributes of entities. If for example\natt\nS\nasso iates the A\nS\n-labeled tuple [A\n1\n: Integer; A\n2\n: String\u2104 to an entity E, then E has\ntwo attributes A\n1\n; A\n2\nwhose values are integers and strings respe tively. For simpli ity we\nassume attributes to be single-valued and mandatory, but we ould easily handle also multivalued attributes with asso iated ardinalities. The fun tion rel\nS\nasso iates a set of roles\nto ea h relationship symbol R, determining impli itly also the arity of R, and for ea h role U in su h set a distinguished entity, alled the primary entity for U in R. In a database satisfying the s hema only instan es of the primary entity are allowed to parti ipate in the relationship via the role U . The fun tion ard\nS\nspe i es ardinality onstraints, i.e.,\nonstraints on the minimum and maximum number of times an instan e of an entity may parti ipate in a relationship via some role. Sin e su h onstraints are meaningful only if the entity an e e tively parti ipate in the relationship, the fun tion is de ned only for the sub-entities of the primary entity. The spe ial value 1 is used when no restri tion is posed on the maximum ardinality. Su h onstraints an be used to spe ify both existen e dependen ies and fun tionality of relations (Cosmadakis & Kanellakis, 1986). They are often used only in a restri ted form, where the minimum ardinality is either 0 or 1 and the maximum ardinality is either 1 or 1. Cardinality onstraints in the form onsidered here have been introdu ed already by Abrial (1974) and subsequently studied by Grant and Minker (1984), Lenzerini and Nobili (1990), Ferg (1991), Ye, Parent, and Spa apietra (1994), Thalheim (1992).\nExample 4.2 Figure 4 shows a simple ER s hema modeling a state of a airs similar to the one represented by the KEE knowledge base in Figure 2. We have used the standard graphi notation for ER s hemata, ex ept for the dashed link, whi h represents the re nement of a ardinality onstraint for the parti ipation of a sub-entity (in our ase AdvCourse) in a relationship (in our ase ENROLLING)."}, {"heading": "4.2 Semanti s of the Entity-Relationship Model", "text": "The semanti s of an ER s hema an be given by spe ifying whi h database states are\nonsistent with the information stru ture represented by the s hema. Formally, a database\nstate B orresponding to an ER s hema S = (L\nS\n;\nS\n; att\nS\n; rel\nS\n; ard\nS\n) is onstituted by a\nnonempty nite set\nB\n, assumed to be disjoint from all basi domains, and a fun tion\nB\nthat maps\nevery domain symbol D 2 D\nS\nto the orresponding basi domain D\nB\nD\n,\nevery entity E 2 E\nS\nto a subset E\nB\nof\nB\n,\nevery attribute A 2 A\nS\nto a set A\nB\nB\nS\nD2D\nS\nD\nB\nD\n, and\nevery relationship R 2 R\nS\nto a set R\nB\nof U\nS\n-labeled tuples over\nB\n.\nThe elements of E\nB\n, A\nB\n, and R\nB\nare alled instan es of E, A, and R respe tively.\nA database state is onsidered a eptable if it satis es all integrity onstraints that are\npart of the s hema. This is aptured by the de nition of legal database state.\nDe nition 4.3 A database state B is said to be legal for an ER s hema S = (L\nS\n;\nS\n; att\nS\n; rel\nS\n; ard\nS\n), if it satis es the following onditions:\nFor ea h pair of entities E\n1\n; E\n2\n2 E\nS\nsu h that E\n1 S\nE\n2\n, it holds that E\nB 1\nE\nB 2 .\nFor ea h entity E 2 E\nS\n, if att\nS\n(E) = [A\n1\n:D\n1\n; : : : ; A\nh\n:D\nh\n\u2104, then for ea h instan e\ne 2 E\nB\nand for ea h i 2 f1; : : : ; hg the following holds:\n{ there is exa tly one element a\ni\n2 A\nB i whose rst omponent is e, and\n{ the se ond omponent of a\ni\nis an element of D\nB\nD\ni\n.\nFor ea h relationship R 2 R\nS\nsu h that rel\nS\n(R) = [U\n1\n:E\n1\n; : : : ; U\nk\n:E\nk\n\u2104, all instan es\nof R are of the form [U\n1\n: e\n1\n; : : : ; U\nk\n: e\nk\n\u2104, where e\ni\n2 E\nB i , i 2 f1; : : : ; kg.\nFor ea h relationship R 2 R\nS\nsu h that rel\nS\n(R) = [U\n1\n:E\n1\n; : : : ; U\nk\n:E\nk\n\u2104, for ea h\ni 2 f1; : : : ; kg, for ea h entity E 2 E\nS\nsu h that E\nS\nE\ni\nand for ea h instan e e of E\nin I, it holds that\nmin\nS\n(E;R;U\ni\n) \u2104fr 2 R\nB\nj r[U\ni\n\u2104 = eg max\nS\n(E;R;U\ni\n):\nNoti e that the de nition of database state re e ts the usual assumption in databases that database states are nite stru tures (see also Cosmadakis, Kanellakis, & Vardi, 1990). In fa t, the basi domains are not required to be nite, but for ea h legal database state for a s hema, only a nite set of values from the basi domains are a tually of interest. We de ne the a tive domain B\na t\nof a database state B as the set of all elements of the basi\ndomains D\nB\nD\n, D 2 D\nS\n, that e e tively appear as values of attributes in B. More formally:\nB a t = fd 2 D B D j D 2 D S ^ 9A 2 A S ; e 2 B . (e; d) 2 A B g:\nSin e\nB\nis nite and A\nS\nontains only a nite number of attributes, whi h are fun tional\nby de nition, also\nB a t is nite.\nReasoning in the ER model in ludes verifying entity satis ability and dedu ing inheritan e. Entity satis ability amounts to he king whether a given entity an be populated in some legal database state (Atzeni & Parker Jr., 1986; Lenzerini & Nobili, 1990; Di Battista & Lenzerini, 1993), and orresponds to the notion of on ept onsisten y in DLs. Dedu ing inheritan e amounts to verifying whether in all databases that are legal for the s hema, every instan e of an entity is also an instan e of another entity. Su h implied ISA relationships an arise for di erent reasons. Either trivially, through the transitive losure of the expli it ISA relationships present in the s hema, or in more subtle ways, through spe i patterns of ardinality restri tions along y les in the s hema and the requirement of the database state to be nite (Lenzerini & Nobili, 1990; Cosmadakis et al., 1990).\nExample 4.4 Figure 5 shows an ER s hema modeling the same situation as the knowledge base of Example 2.2. Arguing exa tly as in that example we an on lude that the two entities Number and Even denote the same set of elements in every nite database legal for the s hema, although the ISA relation from Number to Even is not stated expli itly. It is implied, however, due to the y le involving the relationship and the two entities and due to the parti ular form of ardinality onstraints.\n4.3 Relationship between Entity-Relationship S hemata and aluni\nWe now show that the di erent forms of reasoning on ER s hemata are aptured by nite\non ept onsisten y and nite on ept subsumption in aluni. The orresponden e between the two formalisms is established by de ning a translation from ER s hemata to aluni knowledge bases, and then proving that there is a orresponden e between legal database states and nite models of the derived knowledge base.\nDe nition 4.5 Let S = (L\nS\n;\nS\n; att\nS\n; rel\nS\n; ard\nS\n) be an ER s hema. The aluni knowl-\nedge base (S) = (A;P;T ) is de ned as follows: The set A of atomi on epts of (S) ontains the following elements:\nfor ea h domain symbol D 2 D\nS\n, an atomi on ept (D);\nfor ea h entity E 2 E\nS\n, an atomi on ept (E);\nfor ea h relationship R 2 R\nS\n, an atomi on ept (R).\nThe set P of atomi roles of (S) ontains the following elements:\nfor ea h attribute A 2 A\nS\n, an atomi role (A);\nfor ea h relationship R 2 R\nS\nsu h that rel\nS\n(R) = [U\n1\n:E\n1\n; : : : ; U\nk\n:E\nk\n\u2104, k atomi roles\n(U\n1\n); : : : ; (U\nk\n).\nThe set T of assertions of (S) ontains the following elements:\nfor ea h pair of entities E\n1\n; E\n2\n2 E\nS\nsu h that E\n1 S\nE\n2\n, the assertion\n(E\n1\n)\n_\n(E\n2\n) (1)\nfor ea h entity E 2 E\nS\nsu h that att\nS\n(E) = [A\n1\n:D\n1\n; : : : ; A\nh\n:D\nh\n\u2104, the assertion\n(E)\n_\n8 (A\n1\n). (D\n1\n) u u 8 (A\nh\n). (D\nh\n) u 9\n=1\n(A\n1\n) u u 9\n=1\n(A\nh\n) (2)\nfor ea h relationship R 2 R\nS\nsu h that rel\nS\n(R) = [U\n1\n:E\n1\n; : : : ; U\nk\n:E\nk\n\u2104, the assertions\n(R)\n_\n8 (U\n1\n). (E\n1\n) u u 8 (U\nk\n). (E\nk\n) u 9\n=1\n(U\n1\n) u u 9\n=1\n(U\nk\n) (3)\n(E\ni\n)\n_\n8( (U\ni\n)) . (R); i 2 f1; : : : ; kg (4)\nfor ea h relationship R 2 R\nS\nsu h that rel\nS\n(R) = [U\n1\n:E\n1\n; : : : ; U\nk\n:E\nk\n\u2104, for i 2\nf1; : : : ; kg, and for ea h entity E 2 E\nS\nsu h that E\nS\nE\ni\n,\n{ if m = min\nS\n(E;R;U\ni\n) 6= 0, the assertion\n(E)\n_\n9\nm\n( (U\ni\n)) : (5)\n{ if n = max\nS\n(E;R;U\ni\n) 6=1, the assertion\n(E)\n_\n9\nn\n( (U\ni\n)) : (6)\nfor ea h pair of symbols X\n1\n;X\n2\n2 E\nS\n[R\nS\n[D\nS\nsu h that X\n1\n6= X\n2\nand X\n1\n2 R\nS\n[D\nS\n,\nthe assertion\n(X\n1\n)\n_\n: (X\n2\n): (7)\nExample 4.2 ( ont.) We illustrate the translation on the ER s hema of Figure 4. The aluni knowledge base that aptures exa tly its semanti s is shown in Figure 6, where for brevity the disjointness assertions (7) are omitted, and assertions with the same on ept on the left hand side are ollapsed.\nThe translation makes use of both inverse attributes and number restri tions to apture the semanti s of ER s hemata. We observe that, by means of the inverse onstru tor, a binary relationship ould be treated in a simpler way by hoosing a traversal dire tion and mapping the relationship dire tly to a role. Noti e also that the assumption of a y li ity of the resulting knowledge base is unrealisti in this ase, and in order to exploit the orresponden e for reasoning in the ER model, we need te hniques that an deal with inverse attributes, number restri tions, and y les together. As shown in Example 2.2, the ombination of these fa tors auses the nite model property to fail to hold, and we need to resort to reasoning methods for nite models.\nIn fa t, we an redu e reasoning in the ER model to nite model reasoning in aluni knowledge bases. For this purpose we de ne a mapping between database states orresponding to an ER s hema and nite interpretations of the knowledge base derived from it. Due to the possible presen e of relations with arity greater than 2, this mapping is however not one-to-one and we rst need to hara terize those interpretations of the knowledge base that dire tly orrespond to database states.\nDe nition 4.6 Let S = (L\nS\n;\nS\n; att\nS\n; rel\nS\n; ard\nS\n) be an ER s hema and (S) be de ned\nas above. An interpretation I of (S) is relation-des riptive, if for every relationship R 2 R\nS\n, with rel\nS\n(R) = [U\n1\n:E\n1\n; : : : ; U\nk\n:E\nk\n\u2104, for every d; d\n0\n2 ( (R))\nI\n, we have that\n(\n^\n1 i k\n8d\n00\n2\nI\n. ((d; d\n00\n) 2 ( (U\ni\n))\nI\n$ (d\n0\n; d\n00\n) 2 ( (U\ni\n))\nI\n))! d = d\n0\n: (8)\nIntuitively, the extension of a relationship in a database state is a set of labeled tuples, and su h a set does not ontain the same element twi e. Therefore it is impli it in the semanti s of the ER model that there annot be two labeled tuples onne ted through all roles of the relationship to exa tly the same elements of the domain. In a model of the aluni knowledge base orresponding to the ER s hema, on the other hand, ea h tuple is represented by a new individual, and the above ondition is not impli it anymore. It also\nannot be imposed in aluni by suitable assertions. The following lemma, however, shows that we do not need su h an expli it ondition, when we are interested in reasoning on an aluni knowledge base orresponding to an ER s hema. This is due to the fa t that we an always restri t ourselves to onsidering only relation-des riptive models.\nLemma 4.7 Let S be an ER s hema, (S) be the aluni knowledge base obtained from S a ording to De nition 4.5, and C be a on ept expression of (S). If C is nitely onsistent in (S), then there is a nite relation-des riptive model I of (S) su h that C I 6= ;.\nProof. Let I\n0\nbe a nite model of (S) su h that C\nI\n6= ;. We an build a nite relation-\ndes riptive model I\n0\nby starting from I\n0\nand applying the following onstru tion on e for\nea h relationship in R\nS\n.\nLet I be the model obtained in the previous step and let R 2 R\nS\nwith rel\nS\n(R) =\n[U\n1\n:E\n1\n; : : : ; U\nk\n:E\nk\n\u2104 be the next relationship to whi h we apply the onstru tion. We on-\nstru t from I a model I\nR\nsu h that ondition 8 is satis ed for relationship R.\nGiven an individual r 2 ( (R))\nI\n, we denote by U\ni\n(d), i 2 f1; : : : ; kg the (unique)\nindividual e su h that (r; e) 2 ( (U\ni\n))\nI\n. For e\ni\n2 ( (E\ni\n))\nI\n, i 2 f1; : : : ; kg we de ne\nX\n(U\n1\n:e\n1\n;:::;U\nk\n:e\nk\n)\n= fr 2 ( (R))\nI\nj U\ni\n(d) = e\ni\n; for i 2 f1; : : : ; kgg. We all on i t-set\na set X\n(U\n1\n:e\n1\n;:::;U\nk\n:e\nk\n)\nwith more than one element. From ea h on i t-set X\n(U\n1\n:e\n1\n;:::;U\nk\n:e\nk\n)\nwe randomly hoose one individual r, and we say that the others indu e a on i t on (U\n1\n: e\n1\n; : : : ; U\nk\n: e\nk\n). We all Conf the ( nite) set of all obje ts indu ing a on i t on some\n(U\n1\n: e\n1\n; : : : ; U\nk\n: e\nk\n).\nWe de ne an interpretation I\n2\nConf\nas the disjoint union of 2\n\u2104Conf\nopies of I, one opy,\ndenoted by I\nZ\n, for every set Z 2 2\nConf\n. We denote by d\nZ\nthe opy in I\nZ\nof the individual\nd in I. Sin e the disjoint union of two models of an aluni knowledge base is again a model, I\n2\nConf\nis a model of (S). Let I\nZ\nand I\nZ\n0\nbe two opies of I in I\n2\nConf\n. We all\nex hanging U\nk\n(r\nZ\n) with U\nk\n(r\nZ\n0\n) the operation on I\n2\nConf\nonsisting of repla ing in ( (U\nk\n))\nI\nZ\nthe pair (r\nZ\n; U\nk\n(r\nZ\n)) with (r\nZ\n; U\nk\n(r\nZ\n0\n)) and, at the same time, repla ing in ( (U\nk\n))\nI\nZ\n0\nthe\npair (r\nZ\n0\n; U\nk\n(r\nZ\n0\n)) with (r\nZ\n0\n; U\nk\n(r\nZ\n)). Intuitively, by ex hanging U\nk\n(r\nZ\n) with U\nk\n(r\nZ\n0\n), the\nindividuals r\nZ\nand r\nZ\n0\ndo not indu e on i ts anymore.\nWe onstru t now from I\n2\nConf\nan interpretation I\nR\nas follows: For ea h r 2 Conf and\nfor ea h Z 2 2\nConf\nsu h that r 2 Z, we ex hange U\nk\n(r\nZ\n) with U\nk\n(r\nZnfrg\n). It is possible\nto show that all on i ts are thus eliminated while no new on i t is reated. Hen e, in I\nR\n, ondition 8 for R is satis ed. We still have to show that I\nR\nis a model of (S) in\nwhi h C\nI\nR\n6= ;. Indeed, it is straightforward to he k by indu tion that for every on ept\nexpression C\n0\nappearing in (S), for all Z 2 2\nConf\n, d 2 C\n0I\nif and only if d\nZ\n2 C\n0I\nR\n. Thus\nall assertions of (S) are still satis ed in I\nR\nand C\nI\nR\n6= ;.\nWith this result, the following orresponden e between legal database states for an ER s hema and relation-des riptive models of the resulting aluni knowledge base an be established.\nProposition 4.8 For every ER s hema S = (L\nS\n;\nS\n; att\nS\n; rel\nS\n; ard\nS\n) there exist two\nmappings\nS\n, from database states orresponding to S to nite interpretations of its transla-\ntion (S), and\nS\n, from nite relation-des riptive interpretations of (S) to database states\norresponding to S, su h that:\n1. For ea h legal database state B for S,\nS\n(B) is a nite model of (S), and for ea h\nsymbol X 2 E\nS\n[A\nS\n[R\nS\n[ D\nS\n, X\nB\n= ( (X))\nS\n(B)\n.\n2. For ea h nite relation-des riptive model I of (S),\nS\n(I) is a legal database state for\nS, for ea h entity E 2 E\nS\n, ( (E))\nI\n= E\nS\n(I)\n, and for ea h symbol X 2 A\nS\n[R\nS\n[D\nS\n,\n\u2104 (X)\nI\n= \u2104X\nS\n(I)\n.\nProof. (1) Given a database state B, we de ne the interpretation I =\nS\n(B) of (S) as\nfollows:\nI\n=\nB\n[\nB a t [\nS\nR2R\nS\nR\nB\n.\nFor ea h symbol X 2 E\nS\n[A\nS\n[R\nS\n[ D\nS\n,\n( (X))\nI\n= X\nB\n: (9)\nFor ea h relationship R 2 R\nS\nsu h that rel\nS\n(R) = [U\n1\n:E\n1\n; : : : ; U\nk\n:E\nk\n\u2104,\n( (U\ni\n))\nI\n= f(r; e) 2\nI\nI\nj r 2 R\nB\n; and r[U\ni\n\u2104 = eg; i 2 f1; : : : ; kg: (10)\nLet B be a legal database state. To prove laim (1) it is su\u00c6 ient to show that I satis es every assertion in (S). Assertions 1 are satis ed sin e B satis es the set in lusion between the extensions of the orresponding entities. With respe t to assertions 2, let E 2 E\nS\nbe an\nentity su h that att\nS\n(E) = [A\n1\n:D\n1\n; : : : ; A\nh\n:D\nh\n\u2104, and onsider an instan e e 2 ( (E))\nI\n. We\nhave to show that for ea h i 2 f1; : : : ; hg, there is exa tly one element e\ni\n2\nI\nsu h that\n(e; e\ni\n) 2 ( (A\ni\n))\nI\n, and moreover that e\ni\n2 ( (D\ni\n))\nI\n. By 9, e 2 E\nB\n, and by de nition of legal\ndatabase state there is exa tly one element a\ni\n2 A\nB i = ( (A i )) I whose rst omponent is e.\nMoreover, the se ond omponent e\ni\nof a\ni\nis an element of D\nB\nD\ni\n= ( (D\ni\n))\nI\n. With respe t\nto assertions 3, let R 2 R\nS\nbe a relationship su h that rel\nS\n(R) = [U\n1\n:E\n1\n; : : : ; U\nk\n:E\nk\n\u2104,\nand onsider an instan e r 2 ( (R))\nI\n. We have to show that for ea h i 2 f1; : : : ; kg\nthere is exa tly one element e\ni\n2\nI\nsu h that (r; e\ni\n) 2 ( (U\ni\n))\nI\n, and that moreover\ne\ni\n2 ( (E\ni\n))\nI\n. By 9, r 2 R\nB\n, and by de nition of legal database state, r is a labeled tuple\nof the form [U\n1\n: e\n0 1 ; : : : ; U k : e 0\nk\n\u2104, where e\n0 i 2 E B i , i 2 f1; : : : ; kg. Therefore r is a fun tion\nde ned on fU\n1\n; : : : ; U\nk\ng, and by 10, e\ni\nis unique and equal to e\n0 i . Moreover, again by 9,\ne\ni\n2 ( (E\ni\n))\nI\n= E\nB i . Assertions 4 are satis ed, sin e by 10 the rst omponent of ea h\nelement of ( (U\ni\n))\nI\nis always an element of R\nB\n= ( (R))\nI\n. With respe t to assertions 5,\nlet R 2 R\nS\nbe a relationship su h that rel\nS\n(R) = [U\n1\n:E\n1\n; : : : ; U\nk\n:E\nk\n\u2104, let E 2 E\nS\nbe an\nentity su h that E\nS\nE\ni\n, for some i 2 f1; : : : ; kg, and su h that m = min\nS\n(E;R;U\ni\n) 6= 0.\nConsider an instan e e 2 ( (E))\nI\n. We have to show that there are at least m pairs in\n( (U\ni\n))\nI\nthat have e as their se ond omponent. Sin e assertions 4 are satis ed we know\nthat the rst omponent of all su h pairs is an instan e of (R). By 9 and by de nition of legal database state, there are at least m labeled tuples in R B whose U\ni\nomponent is\nequal to e. By 10, ( (U\ni\n))\nI\nontains at least m pairs whose se ond omponent is equal to\ne. With respe t to assertions 6 we an pro eed in a similar way. Finally, assertions 7 are satis ed sin e rst, by de nition the basi domains are pairwise disjoint and disjoint from\nB\nand from the set of labeled tuples, se ond, no element of\nB\nis a labeled tuple, and\nthird, labeled tuples orresponding to di erent relationships annot be equal sin e they are de ned over di erent sets of roles.\n(2) Let I be a nite relation-des riptive interpretation of (S). For ea h basi domain\nD 2 D\nS\n, let\nD\nbe a fun tion from\nI\nto D\nB\nD\nthat is one-to-one and onto. Sin e\nI\nis nite and ea h basi domain ontains a ountable number of elements, su h a fun tion always exists. In order to de ne\nS\n(I) we rst spe ify a mapping\nthat asso iates to\nea h individual d 2\nI\nan element as follows:\nIf d 2 ( (E))\nI\nfor some entity E 2 E\nS\n, then\n(d) = d.\nIf d 2 ( (R))\nI\nfor some relationship R 2 R\nS\nwith rel\nS\n(R) = [U\n1\n:E\n1\n; : : : ; U\nk\n:E\nk\n\u2104, and\nthere are individuals d\n1\n; : : : ; d\nk\n2\nI\nsu h that (d; d\ni\n) 2 ( (U\ni\n))\nI\n, for i 2 f1; : : : ; kg,\nthen\n(d) = [U\n1\n: d\n1\n; : : : ; U\nk\n: d\nk\n\u2104.\nIf d 2 ( (D))\nI\nfor some basi domain D 2 D\nS\n, then\n(d) =\nD\n(d).\nOtherwise\n(d) = d.\nFor a pair of individuals (d\n1\n; d\n2\n) 2\nI\nI\n,\n((d\n1\n; d\n2\n)) = ( (d\n1\n);\n(d\n2\n)), and for a set\nX,\n(X) = f (x) j x 2 Xg.\nIf I is a model of (S) the above rules de ne\n(d) for every d 2\nI\n. Indeed, by\nassertions 7, ea h d 2\nI\nan be an instan e of at most one atomi on ept orresponding\nto a relationship or basi domain, and if this is the ase it is not an instan e of any atomi\non ept orresponding to an entity. Moreover, if d 2 ( (R))\nI\nfor some relationship R 2 R\nS\nwith rel\nS\n(R) = [U\n1\n:E\n1\n; : : : ; U\nk\n:E\nk\n\u2104, then by assertions 3, for ea h i 2 f1; : : : ; kg there is\nexa tly one element d\ni\n2\nI\nsu h that (d; d\ni\n) 2 ( (U\ni\n))\nI\n. If I is not a model of (S) and\nfor some d 2\nI\n,\n(d) is not uniquely determined, then we hoose nondeterministi ally\none possible value.\nWe an now de ne the database state B =\nS\n(I) orresponding to I:\nB\n=\nI\nn\nS\nR2R\nS\n( (R))\nI\n[\nS\nD2D\nS\n( (D))\nI\n.\nFor ea h symbol X 2 E\nS\n[A\nS\n[R\nS\n[ D\nS\n, X\nB\n=\n(( (X))\nI\n).\nIt is not di\u00c6 ult to see, that if I is a model of (S), then B de ned in su h a way is a legal database state for S with a tive domain S\nD2D\nS\n( (D))\nI\n.\nThe following theorem allows us to redu e reasoning on ER s hemata to nite model\nreasoning on aluni knowledge bases.\nTheorem 4.9 Let S be an ER s hema, E;E\n0\nbe two entities in S, and (S) be the trans-\nlation of S. Then the following holds:\n1. E is satis able in S if and only if (S) 6j=\nf\n(E) ?.\n2. E inherits from E\n0\nin S if and only if (S) j=\nf\n(E) (E\n0\n).\nProof. (1) \\)\" Let B be a legal database state with E\nB\n6= ;. By part 1 of Proposition 4.8,\nS\n(B) is a nite model of (S) in whi h ( (E))\nS\n(B)\n6= ;.\n\\(\" Let (E) be nitely onsistent in (S). By Lemma 4.7 there is a nite relation-\ndes riptive model I of (S) with (E)\nI\n6= ;. By part 2 of Proposition 4.8,\nS\n(I) is a\ndatabase state legal for S in whi h E\nB\n6= ;.\n(2) \\)\" Let (S) 6j=\nf\n(E) (E\n0\n). Then (E)u: (E\n0\n) is nitely onsistent in (S).\nBy Lemma 4.7 there is a nite relation-des riptive model I of (S) with d 2 ( (E))\nI\nand\nd 62 ( (E\n0\n))\nI\n, for some d 2\nI\n. By part 2 of Proposition 4.8,\nS\n(I) is a database state legal\nfor S in whi h d 2 E\nB\nand d 62 E\n0B\n. Therefore E does not inherit from E\n0\n.\n\\(\" Assume E does not inherit from E\n0\n. Then there is a database state B legal\nfor S where for an instan e e 2 E\nB\nwe have e 62 E\n0B\n. By part 1 of Proposition 4.8,\nS\n(B) is a nite model of (S) in whi h e 2 ( (E))\nS\n(B)\nand e 62 ( (E\n0\n))\nS\n(B)\n. Therefore\n(S) 6j=\nf\n(E) (E\n0\n).\nTheorem 4.9 allows us to e e tively exploit the reasoning methods that have been developed for aluni in order to reason on ER s hemas. The omplexity of the resulting method for reasoning on ER s hemata is exponential. Observe however, that the known algorithms for reasoning on ER s hemata are also exponential (Calvanese & Lenzerini, 1994b), and that the pre ise omputational omplexity of the problem is still open.\nMoreover, by exploiting the orresponden e with aluni, it be omes possible to add to the ER model (and more in general to semanti data models) several features and modeling primitives that are urrently missing, and whi h have been onsidered important, and fully take them into a ount when reasoning over s hemata. Su h additional features in lude for example the possibility to spe ify and use arbitrary boolean ombinations of entities, and to re ne properties of entities along ISA hierar hies."}, {"heading": "5. Obje t-Oriented Data Models", "text": "Obje t-oriented data models have been proposed with the goal of devising database formalisms that ould be integrated with obje t-oriented programming systems (Kim, 1990). They are the subje t of an a tive area of resear h in the database eld, and are based on the following features:\nThey rely on the notion of obje t identi er at the extensional level (as opposed to traditional data models whi h are value-oriented) and on the notion of lass at the intensional level.\nThe stru ture of the lasses is spe i ed by means of typing and inheritan e.\nAs in the previous se tion, we present the ommon basis of obje t-oriented data models with other lass-based formalisms by introdu ing a language for spe ifying obje t-oriented s hemata and show that su h s hemata an be orre tly represented as aluni knowledge bases. In our analysis, we on entrate our attention on the stru tural aspe ts of obje toriented data models. One of the hara teristi s of the obje t-oriented approa h is to provide me hanisms for spe ifying also the dynami properties of lasses and obje ts, typi ally through the de nition of methods asso iated to the lasses. Those aspe ts are outside the s ope of our investigations. Nevertheless, we argue that general te hniques for s hema level reasoning, in parti ular, type onsisten y and type inferen e, an be pro tably exploited for restri ted forms of reasoning on methods (Abiteboul, Kanellakis, Ramaswamy, & Waller, 1992)."}, {"heading": "5.1 Syntax of an Obje t-Oriented Model", "text": "Below we de ne a simple obje t-oriented language in the style of most popular models featuring omplex obje ts and obje t identity. Although we do not refer to any spe i formalism, our model is inspired by the ones presented by Abiteboul and Kanellakis (1989), Hull and King (1987).\nDe nition 5.1 An obje t-oriented s hema is a tuple S = (C\nS\n;A\nS\n;D\nS\n), where:\nC\nS\nis a nite set of lass names, denoted by the letter C.\nA\nS\nis a nite set of attribute names, denoted by the letter A.\nD\nS\nis a nite set of lass de larations of the form\nClass C is-a C\n1\n; : : : ; C\nk\ntype-is T;\nin whi h T denotes a type expression built a ording to the following syntax:\nT ! C j\nUnion T\n1\n; : : : ; T\nk\nEnd j\nSet-of T j\nRe ord A\n1\n:T\n1\n; : : : ; A\nk\n:T\nk\nEnd:\nD\nS\nontains exa tly one su h de laration for ea h lass C 2 C\nS\n.\nExample 5.2 Figure 7 shows a fragment of the obje t-oriented s hema orresponding to the KEE knowledge base of Figure 2.\nEa h lass de laration imposes onstraints on the instan es of the lass it refers to. The is-a part of a lass de laration allows one to spe ify in lusion between the sets of instan es of the involved lasses, while the type-is part spe i es through a type expression the stru ture assigned to the obje ts that are instan es of the lass."}, {"heading": "5.2 Semanti s of an Obje t-Oriented Model", "text": "The meaning of an obje t-oriented s hema is given by spe ifying the hara teristi s of an instan e of the s hema. The de nition of instan e makes use of the notions of obje t identi er and value.\nLet us rst hara terize the set of values that an be onstru ted from a set of symbols, alled obje t identi ers. Given a nite set O of symbols denoting real world obje ts, the set\nV\nO\nof values over O is indu tively de ned as follows:\nO V\nO\n.\nIf v\n1\n; : : : ; v\nk\n2 V\nO\nthen fjv\n1\n; : : : ; v\nk\njg 2 V\nO\n.\nIf v\n1\n; : : : ; v\nk\n2 V\nO\nthen [[A\n1\n: v\n1\n; : : : ; A\nk\n: v\nk\n\u2104\u2104 2 V\nO\n.\nNothing else is in V\nO\n.\nA database instan e J of a s hema S = (C\nS\n;A\nS\n;D\nS\n) is onstituted by\na nite set O\nJ\nof obje t identi ers;\na mapping\nJ\nassigning to ea h lass in C\nS\na subset of O\nJ\n;\na mapping\nJ\nassigning a value in V\nO\nJ\nto ea h obje t in O\nJ\n.\nAlthough the set V\nO\nJ\nof values that an be onstru ted from a set O\nJ\nof obje t identi ers\nis in nite, for a database instan e one needs only to onsider a nite subset of V\nO\nJ\n.\nDe nition 5.3 Given an obje t-oriented s hema S and an instan e J of S, the set V\nJ\nof\na tive values with respe t to J is onstituted by:\nthe set O\nJ\nof obje t identi ers.\nthe set of values assigned by\nJ\nto the elements of O\nJ\n, in luding those values that\nare not expli itly asso iated with obje t identi ers, but are used to form other values.\nThe interpretation of type expressions in J is de ned through an interpretation fun -\ntion\nJ\nthat assigns to ea h type expression a subset of V\nO\nJ\nsu h that the following ondi-\ntions are satis ed:\nC\nJ\n=\nJ\n(C)\n(Union T\n1\n; : : : ; T\nk\nEnd)\nJ\n= T\nJ 1 [ [ T J\nk\n(Set-of T )\nJ\n= ffjv\n1\n; : : : ; v\nk\njg j k 0; v\ni\n2 T\nJ\n; for i 2 f1; : : : ; kgg\n(Re ord A\n1\n:T\n1\n; : : : ; A\nk\n:T\nk\nEnd)\nJ\n= f[[A\n1\n: v\n1\n; : : : ; A\nh\n: v\nh\n\u2104\u2104 j h k;\nv\ni\n2 T\nJ i ; for i 2 f1; : : : ; kg;\nv\nj\n2 V\nO\nJ\n; for j 2 fk + 1; : : : ; hgg:\nNoti e that the instan es of type re ord may have more omponents than those spe i ed in the type of the lass. Thus we are using an open semanti s for re ords, whi h is typi al of obje t-oriented data models (Abiteboul & Kanellakis, 1989).\nIn order to hara terize obje t-oriented data models we onsider the instan es that are\nadmissible for the s hema.\nDe nition 5.4 Let S = (C\nS\n;A\nS\n;D\nS\n) be an obje t-oriented s hema. A database instan e\nJ of S is said to be legal (with respe t to S) if for ea h de laration\nClass C is-a C\n1\n; : : : ; C\nn\ntype-is T\nin D\nS\n, it holds that C\nJ\nC\nJ i for ea h i 2 f1; : : : ; ng, and that J (C J ) T J .\nTherefore, for a legal database instan e, the type expressions that are present in the s hema determine the ( nite) set of a tive values that must be onsidered. The onstru tion of su h values is limited by the depth of type expressions.\n5.3 Relationship between Obje t-Oriented S hemata and aluni\nWe establish now a relationship between aluni and the obje t-oriented language presented above. This is done by providing a mapping from obje t-oriented s hemata into aluni knowledge bases. Sin e the interpretation domain for aluni knowledge bases onsists of atomi obje ts, whereas ea h instan e of an obje t-oriented s hema is assigned a possibly stru tured value (see the de nition of V\nO\n), we need to expli itly represent some of the\nnotions that underlie the obje t-oriented language. In parti ular, while there is a orresponden e between on epts and lasses, one must expli itly a ount for the type stru ture of ea h lass. This an be a omplished by introdu ing in aluni on epts Abstra tClass, to represent the lasses, and Re Type and SetType to represent the orresponding types. The asso iations between lasses and types indu ed by the lass de larations, as well as the basi hara teristi s of types, are modeled by means of roles: the (fun tional) role value models the asso iation between lasses and types, and the role member is used for spe ifying the type of the elements of a set. Moreover, the on epts representing types are assumed to be mutually disjoint, and disjoint from the on epts representing lasses. These onstraints are expressed by adequate in lusion assertions that will be part of the knowledge base we are going to de ne.\nWe rst de ne the fun tion that maps ea h type expression into an ALUNI on ept\nexpression as follows:\nEvery lass C is mapped into an atomi on ept (C).\nEvery type expression Union T\n1\n; : : : ; T\nk\nEnd is mapped into (T\n1\n) t t (T\nk\n).\nEvery type expression Set-of T is mapped into SetType u 8member. (T ).\nEvery attribute A is mapped into an atomi role (A), and every type expression Re ord A\n1\n:T\n1\n; : : : ; A\nk\n:T\nk\nEnd is mapped into\nRe Type u 8 (A\n1\n). (T\n1\n) u 9\n=1\n(A\n1\n) u u\n8 (A\nk\n). (T\nk\n) u 9\n=1\n(A\nk\n):\nUsing we de ne the aluni knowledge base orresponding to an obje t-oriented s hema.\nDe nition 5.5 The aluni knowledge base (S) = (A;P;T ) orresponding to the obje toriented s hema S = (C\nS\n;A\nS\n;D\nS\n) is obtained as follows:\nA = fAbstra tClass; Re Type; SetTypeg [ f (C) j C 2 C\nS\ng.\nP = fvalue; memberg [ f (A) j A 2 A\nS\ng.\nT onsists of the following assertions:\nAbstra tClass\n_\n9\n=1\nvalue\nRe Type\n_\n8value.?\nSetType\n_\n8value.? u :Re Type\nand for ea h lass de laration\nClass C is-a C\n1\n; : : : ; C\nn\ntype-is T\nin D\nS\n, an in lusion assertion\n(C)\n_\nAbstra tClassu (C\n1\n) u u (C\nn\n) u 8value. (T ):\nFrom the above translation we an observe that inverse roles are not ne essary for the formalization of obje t-oriented data models. Indeed, the possibility of referring to the inverse of an attribute is generally ruled out in su h models. However, this strongly limits the expressive power of the data model, as pointed out in re ent papers (see for example Albano, Ghelli, & Orsini, 1991; Cattell, 1994). Note also that the use of number restri tions is limited to the value 1, whi h orresponds to existen e onstraints and fun tionality, whereas union is used in a more general form than for example in the KEE system.\nExample 5.2 ( ont.) We illustrate the translation on the fragment of obje t-oriented s hema in Figure 7. The orresponding aluni knowledge base is shown in Figure 8.\nBelow we dis uss the e e tiveness of the translation . First of all observe that the aluni knowledge base (S) resulting from the translation of an obje t-oriented s hema S may admit models that do not have a dire t ounterpart among legal database instan es of S. More pre isely, both an interpretation of (S) and a database instan e of S an be viewed as a dire ted labeled graph: In the ase of an interpretation, the nodes are domain individuals and the ar s are labeled with roles. In the ase of a database instan e, the nodes are either obje t identi ers or a tive values, and an ar either onne ts an obje t identi er to its asso iated value (in whi h ase it is labeled with value), or is part of the sub-stru ture representing a set or re ord value (in whi h ase it is labeled with member or with an attribute, in a ordan e with the type of the value). In a legal database instan e of S, a value v is represented by a sub-stru ture that has the form of a nite tree with v as root, set and re ord values as intermediate nodes, and obje ts identi ers as leaves. Clearly, su h a substru ture does not ontain y les. Conversely, in a model of (S), there may be y les involving only nodes that are instan es of SetType and Re Type and in whi h all roles are di erent from value. We all su h y les bad. A model ontaining bad y les\nannot be put dire tly in orresponden e with a legal database instan e. Also, due to the open semanti s of re ords one annot adopt a di erent translation for whi h bad y les in the model are ruled out.\nExample 5.6 Consider the obje t-oriented s hema S, ontaining a single lass de laration\nClass C type-is Re ord a\n1\n: Re ord a\n2\n: Re ord a\n3\n: C End End End\na\n3\nvalue\nwhi h is translated to\nC\n_\nAbstra tClass u 8value.(Re Type u 9 =1 a\n1\nu 8a\n1\n.(Re Type u 9\n=1\na\n2\nu 8a\n2\n.(Re Type u 9\n=1\na\n3\nu 8a\n3\n.C))):\nFigure 9 shows a model of (S) represented as a graph. For larity, we have named the instan es of C, and hen e of Abstra tClass, with o and the instan es of Re Type with v. Observe the two di erent types of y les in the graph. The y le involving individuals o\n2\n; v\n3\n; v\n4\n, and v\n5\ndoes not ause any problems sin e it ontains an ar labeled with value,\nwhi h is not part of the stru ture onstituting a omplex value. In fa t, v\n3\nrepresents the\nre ord value [[a\n1\n: [[a\n2\n: [[a\n3\n: o\n2\n\u2104\u2104\u2104\u2104\u2104\u2104. On the other hand, due to the bad y le involving v\n1\nand\nv\n2\n, individual v1 represents (together with o\n2\nonne ted via a\n3\nto v\n1\n) a re ord of in nite\ndepth.\nWe an nevertheless establish a orresponden e from nite models of (S) possibly ontaining bad y les to legal instan es of the obje t-oriented s hema S. This an be a hieved by unfolding the bad y les in a model of (S) to in nite trees. Obviously, the unfolding of a y le into an in nite tree, generates an in nite number of nodes, whi h would orrespond to an in nite database state. However, we an restri t the dupli ation of individuals to those that represent set and re ord values, and thus are instan es of SetType and Re Type. The instan es of Abstra tClass, instead, are not dupli ated in the pro ess of unfolding, and therefore their number remains nite. Moreover, sin e the set of possible a tive values asso iated with ea h obje t identi er is bound by the depth of the s hema, we\nan in fa t blo k the unfolding of bad y les to the nite tree of depth equal to the depth\nof the s hema.\nLet us rst formally de ne the depth of an obje t-oriented s hema S.\nDe nition 5.7 For a type expression T we de ne depth(T ) indu tively as follows:\ndepth(T ) =\n8 > > <\n> > :\n0; if T = C. max\n1 i k\n(depth(T\ni\n)); if T = Union T\n1\n; : : : ; T\nk\nEnd.\n1 + depth(T\n0\n); if T = Set-of T\n0\n.\n1 + max\n1 i k\n(depth(T\ni\n)); if T = Re ord A\n1\n:T\n1\n; : : : ; A\nk\n:T\nk\nEnd.\nThe depth of an obje t-oriented s hema S is de ned as the maximum of depth(T ) for a type expression T in S.\nvalue\na\na\na\na\na\n3\nWe an now introdu e the notion of unfolding of an aluni interpretation.\nDe nition 5.8 Let S be an obje t-oriented s hema, (S) its translation in aluni and I a nite interpretation of (S). We all unfolded version of I the interpretation obtained from I as follows: For ea h individual v that is part of a bad y le, unfold the bad y le into an (in nite) tree having v as root, by generating new individuals only for the instan es of Re Type and SetType. For a nonnegative integer m, we all m-unfolded version of I, denoted as I\njm\n, the interpretation obtained by trun ating at depth m ea h in nite tree\ngenerated in the pro ess of unfolding.\nExample 5.6 ( ont.) Figure 10 shows the unfolded version of the model in Figure 9. Noti e that only the bad y le has been unfolded to an in nite tree, and that all ar s labeled with a\n3\nlead to o\n2\n, whi h is an instan e of Abstra tClass and has not been dupli ated.\nThe orre tness of (S) is san tioned by the following proposition.\nProposition 5.9 For every obje t-oriented s hema S of depth m, there exist mappings:\n1.\nS\nfrom instan es of S into nite interpretations of (S) and\nV\nfrom a tive values\nof instan es of S into domain elements of the nite interpretations of (S) su h that: For ea h legal instan e J of S,\nS\n(J ) is a nite model of (S), and for ea h type\nexpression T of S and ea h v 2 V\nJ\n, v 2 T\nJ\nif and only if\nV\n(v) 2 ( (T ))\nS\n(J )\n.\n2.\nS\nfrom nite interpretations of (S) into instan es of S and\nV\nfrom domain el-\nements of the m-unfolded versions of the nite interpretations of (S) into a tive values of instan es of S, su h that: For ea h nite model I of (S),\nS\n(I) is a legal\ninstan e of S, and for ea h on ept (T ), whi h is the translation of a type expression T of S and ea h d 2 I jm , d 2 ( (T )) I jm if and only if\nV\n(d) 2 T\nS\n(I)\n.\nProof. (1) Given a database instan e J we de ne an interpretation\nS\n(J ) of (S) as\nfollows:\nV\nis a fun tion mapping every element of V\nJ\ninto a distin t element of\nS\n(J )\n.\nTherefore\nS\n(J )\nis de ned as the set of elements\nV\n(v) su h that v 2 V\nJ\n. Moreover\nwe denote with\nid\n,\nre\n, and\nset\nthe elements of\nS\n(J )\norresponding to obje t\nidenti ers, re ord and set values, respe tively.\nThe interpretation of atomi on epts is de ned as follows:\n( (C))\nS\n(J )\n= f\nV\n(o) j o 2\nJ\n(C)g;\nfor every (C) orresponding to a lass name C in S\nAbstra tClass\nS\n(J )\n=\nid\nRe Type\nS\n(J )\n=\nre\nSetType\nS\n(J )\n=\nset\nThe interpretation of atomi roles is de ned as follows:\n( (A))\nS\n(J )\n= f(d\n1\n; d\n2\n) j d\n1\n2\nre\nand\n1\nV\n(d\n1\n) = [[: : : ; A:\n1\nV\n(d\n2\n); : : :\u2104\u2104g;\nfor every (A) orresponding to an attribute name A in S\nmember\nS\n(J )\n= f(d\n1\n; d\n2\n) j d\n1\n2\nset\nand\n1\nV\n(d\n1\n) = fj: : : ;\n1\nV\n(d\n2\n); : : :jgg\nvalue\nS\n(J )\n= f(d\n1\n; d\n2\n) j (\n1\nV\n(d\n1\n);\n1\nV\n(d\n2\n)) 2\nJ\ng\nWe prove that for ea h type T and ea h v 2 V\nJ\n, v 2 T\nJ\nif and only if\nV\n(v) 2\n( (T ))\nS\n(J )\n. The rst part of the thesis then follows from the de nition of\nS\n(J ). The\nproof is by indu tion on the stru ture of the type expression.\nBase ase: T = C (i.e., T is a lass name). If o 2 C\nJ\nthen\nV\n(o) 2 ( (C))\nS\n(J )\n, and\nvi e-versa if d 2 ( (C))\nS\n(J )\nthen\n1\nV\n(d) 2 C\nJ\n.\nIndu tive ase: T = Re ord A\n1\n:T\n1\n; : : : ; A\nk\n:T\nk\nEnd and (T ) = Re Type u\n8 (A\n1\n). (T\n1\n) u 9\n=1\n(A\n1\n) u u 8 (A\nk\n). (T\nk\n) u 9\n=1\n(A\nk\n). We assume that v 2 T\nJ i\ni\nV\n(v) 2 ( (T\ni\n))\nS\n(J )\n, for i 2 f1; : : : ; kg, and show that v 2 T\nJ\ni\nV\n(v) 2 ( (T ))\nS\n(J )\n.\nSuppose that v 2 T\nJ\n, i.e., v = [[A\n1\n: v\n1\n; : : : ; A\nh\n: v\nh\n\u2104\u2104 with h k and v\ni\n2 T\nJ i for\ni 2 f1; : : : ; kg. By indu tion hypothesis\nV\n(v\ni\n) 2 ( (T\ni\n))\nS\n(J )\n, for i 2 f1; : : : ; kg, and by\nde nition of\nS\n,\nV\n(v) 2 Re Type\nS\n(J )\n, (\nV\n(v);\nV\n(v\ni\n)) 2 ( (A\ni\n))\nS\n(J )\nfor i 2 f1; : : : ; kg,\nand all roles (A) orresponding to attribute names are fun tional. Therefore,\nV\n(v) 2\n( (T ))\nS\n(J )\n.\nConversely, suppose that d =\nV\n(v) 2 ( (T ))\nS\n(J )\n. Then, for ea h i 2 f1; : : : ; kg there is\nexa tly one d\ni\n2\nS\n(J )\nsu h that (d; d\ni\n) 2 ( (A\ni\n))\nS\n(J )\n, and moreover d\ni\n2 ( (T\ni\n))\nS\n(J )\n.\nBy de nition of\nS\nwe have v = [[A\n1\n: v\n1\n; : : : ; A\nh\n: v\nh\n\u2104\u2104, with h k and v\ni\n=\n1\nV\n(d\ni\n), for\ni 2 f1; : : : ; kg. By indu tion hypothesis v\ni\n2 T\nJ i , for i 2 f1; : : : ; kg, and therefore v 2\n(Re ord A\n1\n:T\n1\n; : : : ; A\nk\n:T\nk\nEnd)\nJ\n.\nThe ases for T = Union T\n1\n; : : : ; T\nk\nEnd and T = Set-of T\n0\nan be treated analogously.\n(2) Given a nite model I of (S) of depthm, we de ne a legal database instan e\nS\n(I)\nas follows:\nV\nis a fun tion mapping every element of\nI\njm\ninto a distin t element of V\nS\n(I)\nsu h\nthat the following onditions are satis ed:\n{ O\nS\n(I)\nV\nS\n(I)\nis the set of elements\nV\n(d) su h that d 2 Abstra tClass\nI\njm\n.\n{ If d 2 Re Type\nI\njm\n, (d; d\ni\n) 2 ( (A\ni\n))\nI\njm\n, for i 2 f1; : : : ; kg, and there is no\nother individual d\n0\n2\nI\njm\nand attribute A\n0\nsu h that (d; d\n0\n) 2 ( (A\n0\n))\nI\njm\n, then\nV\n(d) = [[A\n1\n:\nV\n(d\n1\n); : : : ; A\nk\n:\nV\n(d\nk\n)\u2104\u2104.\n{ If d 2 SetType\nI\njm\n, (d; d\ni\n) 2 member\nI\njm\n, for i 2 f1; : : : ; kg, and there is no\nother individual d\n0\n2\nI\njm\nsu h that (d; d\n0\n) 2 (member)\nI\njm\n, then\nV\n(d) =\nf\nV\n(d\n1\n); : : : ;\nV\n(d\nk\n)g.\nFor every lass name C,\nS\n(I)\n(C) = f\nV\n(d) j d 2 ( (C))\nI\njm\ng.\nS\n(I)\n= f(o; v) j\nV\n(d\n1\n) = o;\nV\n(d\n2\n) = v; and (d\n1\n; d\n2\n) 2 value\nI\njm\ng.\nWe rst prove that for ea h on ept (T ), whi h is the translation of a type expression\nT of S, and ea h d 2\nI\njm\n, d 2 ( (T ))\nI\njm\nif and only if\nV\n(d) 2 T\nS\n(I)\n. The proof is\nby indu tion on the stru ture of the on ept expression. Again for the indu tive part we restri t our attention to the ase of re ord types.\nBase ase: T = C (i.e., (T ) is an atomi on ept). If d 2 ( (C))\nI\njm\nthen\nV\n(d) 2\nC\nS\n(I)\n, and vi e-versa if o 2 C\nS\n(I)\nthen\n1\nV\n(o) 2 ( (C))\nI\njm\n.\nIndu tive ase: (T ) = Re Type u 8 (A\n1\n). (T\n1\n) u 9\n=1\n(A\n1\n) u u 8 (A\nk\n). (T\nk\n) u\n9\n=1\n(A\nk\n) and T = Re ord A\n1\n:T\n1\n; : : : ; A\nk\n:T\nk\nEnd. We assume that d 2 ( (T\ni\n))\nI\njm\ni\nV\n(d) 2 T\nS\n(I)\ni\n, for i 2 f1; : : : ; kg, and show that d 2 ( (T ))\nI\njm\ni\nV\n(d) 2 T\nS\n(I)\n.\nSuppose that d 2 ( (T ))\nI\njm\n. Then d 2 Re Type\nI\njm\nand for ea h i 2 f1; : : : ; kg there\nis an individual d\ni\nsu h that d\ni\n2 ( (T\ni\n))\nI\njm\nand (d; d\ni\n) 2 ( (A\ni\n))\nI\njm\n. By onstru tion\nV\n(d) = [[A\n1\n: v\n1\n; : : : ; A\nh\n: v\nh\n\u2104\u2104 for some h k. Moreover, by indu tion hypothesis\nV\n(d\ni\n) 2\nT\nS\n(I)\ni\nand therefore\nV\n(d) 2 T\nS\n(I)\n.\nConversely, suppose that\nV\n(d) 2 T\nS\n(I)\n, i.e.,\nV\n(d) = [[A\n1\n: v\n1\n; : : : ; A\nh\n: v\nh\n\u2104\u2104 with h k\nand v\ni\n2 T\nS\n(I)\ni\nfor i 2 f1; : : : ; kg. By indu tion hypothesis d\ni\n=\n1\nV\n(v\ni\n) 2 ( (T\ni\n))\nI\njm\n,\nfor i 2 f1; : : : ; kg, and by de nition of\nV\n, d 2 Re Type\nI\njm\nand (d; d\ni\n) 2 ( (A\ni\n))\nI\njm\n,\nfor i 2 f1; : : : ; kg. Sin e all roles (A) orresponding to attribute names are fun tional, d 2 ( (T )) I jm .\nIt remains to show that for ea h de laration\nClass C is-a C\n1\n; : : : ; C\nn\ntype-is T\nin D\nS\n, (a) C\nS\n(I)\nC\nS\n(I)\ni\nfor ea h i 2 f1; : : : ; ng, and (b)\nS\n(I)\n(C\nS\n(I)\n) T\nS\n(I)\n.\n(a) follows from the fa t that (S) ontains the assertion (C)\n_\n(C\n1\n) u u (C\nn\n)\nand from the de nition of\nS\n(I)\n.\n(b) follows from what we have shown above and from the fa t that I\njm\nstill satis es the\nassertion (C)\n_\nAbstra tClass u 8value. (T ). In fa t, for some d 2 ( (C))\nI\nlet d\n0\nbe\nthe unique individual su h that (d; d\n0\n) 2 value\nI\n. Sin e I is a model of (S), d\n0\n2 ( (T ))\nI\n.\nWe argue that also d\n0\n2 ( (T ))\nI\njm\n. If d\n0\nis not part of a bad y le in I, then I and\nI\njm\noin ide on the sub-stru ture rooted at d\n0\nand formed by the individuals rea hed via\nmember and roles orresponding to attributes, and we are done. Otherwise, in I\njm\nsu h\nsub-stru ture is expanded into a nite tree. Sin e by onstru tion the depth of this tree is at least depth(T ), and the onne tions between individuals in I are preserved in I\njm\n, it\nfollows that d\n0\n2 ( (T ))\nI\njm\n.\nThe basi reasoning servi es onsidered in obje t-oriented databases are subtyping ( he k whether a type denotes a subset of another type in every legal instan e) and type\nonsisten y ( he k whether a type is onsistent in a legal instan e). Based on Proposition 5.9, we an show that these forms of reasoning are fully aptured by nite on ept\nonsisten y and nite on ept subsumption in aluni knowledge bases.\nTheorem 5.10 Let S be an obje t-oriented s hema, T; T\n0\ntwo type expressions in S, and\n(S) the translation of S. Then the following holds:\n1. T is onsistent in S if and only if (S) 6j=\nf\n(T ) ?.\n2. T is a subtype of T\n0\nin S if and only if (S) j=\nf\n(T ) (T\n0\n).\nProof. The proof is analogous to the proof of Theorem 4.9, but it makes use of Proposition 5.9 instead of Proposition 4.8.\nAgain, the orresponden e with aluni established by Theorem 5.10 allows us to make use of the reasoning te hniques developed for aluni to reason on obje t-oriented s hemas. Observe that reasoning in obje t-oriented models is already PSPACE-hard (Bergamas hi & Nebel, 1994) and thus the known algorithms are exponential. However, by resorting to aluni, it be omes possible to take into a ount for reasoning also various extensions of the obje t-oriented formalism. Su h extensions are useful for on eptual modeling and have already been proposed in the literature (Cattell & Barry, 1997). First of all, the same\nonsiderations developed for the ER model with regard to the use of arbitrary boolean onstru ts on lasses an be applied also in the obje t-oriented setting, whi h provides disjun tion but does not admit any form of negation. Additional features that an be added to obje t oriented models are inverses of attributes, ardinality onstraints on set-valued attributes, and more general forms of restri tions on the values of attributes."}, {"heading": "6. Related Work", "text": "In this se tion we brie y dis uss re ent results on the orresponden e between lass-based formalisms and on te hniques for reasoning in aluni and in lass-based representation formalisms."}, {"heading": "6.1 Relationships among Class-Based Formalisms", "text": "In the past there have been several attempts to establish relationships among lass-based formalisms. Bl asius, Hedst u k, and Rollinger (1990), Lenzerini, Nardi, and Simi (1991)\narry out a omparative analysis of lass-based languages and attempt to provide a uni ed view. The analysis makes it lear that several di\u00c6 ulties arise in identifying a ommon framework for the formalisms developed in di erent areas. Some re ent papers address this problem. For example, an analysis of the relationships between frame-based languages and types in programming languages has been arried out by Borgida (1992), while Bergamas hi and Sartori (1992), Piza, S hewe, and S hmidt (1992) use frame-based languages to enri h the dedu tive apabilities of semanti and obje t-oriented data models.\nArtale, Cesarini, and Soda (1996) study reasoning in obje t-oriented data models by presenting a translation to DLs in the style of the one dis ussed in Se tion 5. However, the proposed translation is appli able only in the ase where the shema ontains no re ursive\nlass de larations. This limitation is not present in the work by Bergamas hi and Nebel (1994), where a formalism derived from DLs is used to model omplex obje ts and an algorithm for omputing subsumption between lasses is provided.\nA re ent survey on the appli ation of DLs to the problem of data management has been presented by Borgida (1995) . The appli ation to the task of data modeling of reasoning te hniques derived from the orresponden es presented in Se tions 4 and 5 is dis ussed in more detail by Calvanese, Lenzerini, and Nardi (1998).\nRe ently, there have also been proposals to integrate the obje t-oriented and the logi\nprogramming paradigms (Kifer & Wu, 1993; Kifer, Lausen, & Wu, 1995). These proposals are however not dire tly related to the present work, sin e they aim at providing me hanisms for omputing with stru tured obje ts, rather than means for reasoning over a on eptual (obje t-oriented) representation of the domain of interest.\n6.2 Reasoning in aluni and in Class-Based Representation Formalisms\naluni is equipped with te hniques to reason both with respe t to unrestri ted and with respe t to nite models. We brie y sket h the main ideas underlying reasoning in both\nontexts. A detailed a ount of the reasoning te hniques has been arried out by Calvanese\n(1996 )."}, {"heading": "6.2.1 Unrestri ted Model Reasoning", "text": "We remind that reasoning on a knowledge base with respe t to unrestri ted models amounts to he k either on ept onsisten y, i.e., determine whether the knowledge base admits a (possibly in nite) model in whi h a given on ept has a nonempty extension, or on ept subsumption, i.e., determine whether the extension of one on ept is ontained in the extension of another on ept in every model (in luding the in nite ones) of the knowledge base.\nThe method to reason in aluni with respe t to unrestri ted models exploits a well known orresponden e between DLs and Propositional Dynami Logi s (PDLs) (Kozen & Tiuryn, 1990), whi h are a lass of logi s spe i ally designed to reason about programs. The\norresponden e, whi h has rst been pointed out by S hild (1991), relies on a substantial similarity of the interpretative stru tures of both formalisms, and allows one to exploit the reasoning te hniques developed for PDLs to reason in the orresponding DLs. In parti ular, sin e ALUNI, the des ription language of aluni, in ludes the onstru t for inverse roles, for the orresponden e one has to resort to onverse-PDL, a variant of PDL that in ludes\nonverse programs (Kozen & Tiuryn, 1990). However, be ause of the presen e of number restri tions in ALUNI whi h have no dire t orresponden e in PDLs, we annot rely on traditional te hniques for reasoning in PDLs. Re ently, en oding te hniques have been developed, whi h allow one to eliminate number restri tions from a knowledge base while preserving on ept onsisten y and on ept subsumption (De Gia omo & Lenzerini, 1994a). The en oding is appli able to knowledge bases formulated in expressive variants of DLs, and in parti ular it an be used to redu e unrestri ted model reasoning on aluni knowledge\nbases (both on ept onsisten y and on ept subsumption) to de iding satis ability of a formula of onverse-PDL. Reasoning in onverse-PDL is de idable in EXPTIME (Kozen & Tiuryn, 1990), and sin e the en oding is polynomial (De Gia omo & Lenzerini, 1994a) we obtain an EXPTIME de ision pro edure for unrestri ted on ept onsisten y and on ept subsumption in aluni knowledge bases. A simpli ed form of the en oding, whi h an be applied to de ide unrestri ted on ept onsisten y in aluni has also been presented by Calvanese et al. (1994)."}, {"heading": "6.2.2 Finite Model Reasoning", "text": "We remind that reasoning on a knowledge base with respe t to nite models amounts to\nhe k either nite on ept onsisten y or nite on ept subsumption, for whi h only the nite models of the knowledge base must be onsidered.\nFor nite model reasoning, the te hniques based on a redu tion to reasoning in PDLs are not appli able. Indeed, the PDL formula orresponding to an aluni knowledge base\nontains onstru ts both for onverse programs ( orresponding to inverse roles) and for fun tionality of dire t and inverse programs, and thus is a formula of a variant of PDL whi h does not have the nite model property (Vardi, 1985). However, after en oding fun tionality, one obtains a onverse-PDL formula, and sin e onverse-PDL has the nite model property (Fis her & Ladner, 1979), this formula is satis able if and only if it is\nnitely satis able. This shows that the en oding of number restri tions (and in parti ular the en oding of fun tionality), while preserving unrestri ted satis ability does not preserve\nnite satis ability (De Gia omo & Lenzerini, 1994a).\nFor nite model reasoning in aluni one an adopt a di erent te hnique, whi h is based on the idea of separating the reasoning pro ess in two distin t phases (see Calvanese, 1996 , for full details). The rst phase deals with all onstru ts ex ept number restri tions, and builds an \\expanded knowledge base\" in whi h these onstru ts are embedded impli itly in the on epts and roles. In the se ond phase the assertions involving number restri tions are used to derive from this expanded knowledge base a system of linear inequalities. The system is de ned in su h a way that its solutions of a ertain type (a eptable solutions) are dire tly related to the nite models of the original knowledge base. In parti ular, from ea h a eptable solution one an dire tly dedu e the ardinalities of the extensions of all on epts and roles in a possible nite model. The proposed method allows one to establish for aluni EXPTIME de idability for nite on ept onsisten y and for spe ial ases of nite on ept subsumption. By resorting to a more ompli ated en oding one an obtain a 2EXPTIME de ision pro edure for nite on ept subsumption in aluni in general (Calvanese, 1996a, 1996 ).\nReasoning with respe t to nite models has also been investigated in the ontext of dependen y theory in databases. As shown by Casanova, Fagin, and Papadimitriou (1984) for the relational model, when fun tional and in lusion dependen ies intera t, the dependen y impli ation problem in the nite ase di ers from the one in the unrestri ted ase. While the impli ation problem for arbitrary fun tional and in lusion dependen ies is unde idable (Chandra & Vardi, 1985; Mit hell, 1983), for fun tional and unary in lusion dependen ies it is solvable in polynomial time, both in the nite and the unrestri ted ase (Cosmadakis et al., 1990).\nConsisten y with respe t to nite models of s hemata expressed in an enri hed EntityRelationship model with ardinality onstraints has been shown de idable in polynomial time by Lenzerini and Nobili (1990). Calvanese and Lenzerini (1994b) extend the de idability result to in lude also ISA relationships, and Calvanese and Lenzerini (1994a) show EXPTIME de idability of reasoning in an expressive obje t-oriented model. An algorithm for omputing a re nement ordering for types (the analogue to a on ept hierar hy) in the framework of the O\n2\nobje t oriented model in dis ussed by Le luse and Ri hard (1989).\nReasoning in the stri t sublanguage of aluni obtained by omitting inverse roles and number restri tions is already EXPTIME-hard (Calvanese, 1996b). Therefore, the known algorithms for de iding unrestri ted on ept onsisten y and subsumption and nite on ept\nonsisten y are essentially optimal."}, {"heading": "7. Con lusions", "text": "We have presented a uni ed framework for representing information about lass stru tures and reasoning about them. We have pursued this goal by looking at various lass-based formalisms proposed in di erent elds of omputer s ien e, namely frame based systems used in knowledge representation, and semanti and obje t-oriented data models used in databases, and rephrasing them in the framework of des ription logi s. The resulting des ription logi , alled aluni in ludes a ombination of onstru ts that was not addressed before, although all of the onstru ts had previously been onsidered separately.\nThe major a hievement of the paper is the demonstration that lass-based formalisms an be given a pre ise hara terization by means of a powerful fragment of rst-order logi , whi h thus an be regarded as the essential ore of the lass-based representation formalisms belonging to all three families mentioned above. This has several onsequen es.\nFirst of all, any of the formalisms onsidered in the paper an be enri hed with onstru ts originating from other formalisms and treated in the general framework. In this sense, the work reported here not only provides a ommon powerful representation formalism, but may also ontribute to signi ant developments for the languages belonging to all the three families. For example, the usage of inverse roles in on ept languages greatly enhan es the expressivity of roles, while the ombination of ISA, number restri tions, and union enri hes the reasoning apabilities available in semanti data models.\nSe ondly, the omparison of lass-based formalisms from the elds of knowledge representation and on eptual data modeling makes it feasible to address the development of reasoning tools to support on eptual modeling (Calvanese et al., 1998). In fa t, reasoning apabilities be ome espe ially important in omplex s enarios su h as those arising in heterogenous database appli ations and Data Warehousing. This line of work was among the motivations for developing systems based on expressive des ription logi s (Horro ks, 1998; Horro ks & Patel-S hneider, 1999), and has lead to further extending the language of des ription logi s to support Information Integration and, more spe i ally, the on eptual modeling of Data Warehouses (Calvanese, De Gia omo, Lenzerini, Nardi, & Rosati, 1998).\nReferen es\nAbiteboul, S., Kanellakis, P., Ramaswamy, S., & Waller, E. (1992). Method s hemas. Te h.\nrep. CS-92-33, Brown University. An earlier version appeared in Pro . of the 9th Symp. on Prin iples of Database Systems PODS-90.\nAbiteboul, S., & Kanellakis, P. (1989). Obje t identity as a query language primitive. In\nPro eedings of the ACM SIGMOD International Conferen e on Management of Data, pp. 159{173.\nAbrial, J. R. (1974). Data semanti s. In Klimbie, J. W., & Ko eman, K. L. (Eds.), Data\nBase Management, pp. 1{59. North-Holland Publ. Co., Amsterdam.\nAlbano, A., Ghelli, G., & Orsini, R. (1991). A relationship me hanism for strongly typed\nObje t-Oriented database programming languages. In Pro eedings of the Seventeenth International Conferen e on Very Large Data Bases (VLDB'91), pp. 565{575 Bar elona.\nArtale, A., Cesarini, F., & Soda, G. (1996). Des ribing database obje ts in a on ept\nlanguage environment. IEEE Transa tions on Knowledge and Data Engineering, 8 (2), 345{351.\nAtzeni, P., & Parker Jr., D. S. (1986). Formal properties of net-based knowledge represen-\ntation s hemes. In Pro eedings of the Se ond IEEE International Conferen e on Data Engineering (ICDE'86), pp. 700{706 Los Angeles.\nBaader, F. (1991). Augmenting on ept languages by transitive losure of roles: An al-\nternative to terminologi al y les. In Pro eedings of the Twelfth International Joint Conferen e on Arti ial Intelligen e (IJCAI'91) Sydney, Australia.\nBaader, F. (1996). Using automata theory for hara terizing the semanti s of terminologi al\ny les. Annals of Mathemati s and Arti ial Intelligen e, 18, 175{219.\nBatini, C., Ceri, S., & Navathe, S. B. (1992). Con eptual Database Design, an Entity-\nRelationship Approa h. Benjamin and Cummings Publ. Co., Menlo Park, California.\nBergamas hi, S., & Nebel, B. (1994). A quisition and validation of omplex obje t database\ns hemata supporting multiple inheritan e. Applied Intelligen e, 4 (2), 185{203.\nBergamas hi, S., & Sartori, C. (1992). On taxonomi reasoning in on eptual design. ACM\nTransa tions on Database Systems, 17 (3), 385{422.\nBl asius, K. H., Hedst u k, U., & Rollinger, C.-R. (Eds.). (1990). Sorts and Types in Arti ial\nIntelligen e, Vol. 418 of Le ture Notes in Arti ial Intelligen e. Springer-Verlag.\nBorgida, A. (1992). From type systems to knowledge representation: Natural semanti s\nspe i ations for des ription logi s. Journal of Intelligent and Cooperative Information Systems, 1 (1), 93{126.\nBorgida, A. (1995). Des ription logi s in data management. IEEE Transa tions on Knowl-\nedge and Data Engineering, 7 (5), 671{682.\nBorgida, A. (1996). On the relative expressiveness of des ription logi s and predi ate logi s.\nArti ial Intelligen e, 82, 353{367.\nBorgida, A., & Weddell, G. E. (1997). Adding fun tional dependen ies to des ription logi s.\nIn Pro eedings of the Fifth International Conferen e on Dedu tive and Obje t-Oriented Databases (DOOD'97).\nBra hman, R. J., & Levesque, H. J. (1984). The tra tability of subsumption in frame-based\ndes ription languages. In Pro eedings of the Fourth National Conferen e on Arti ial Intelligen e (AAAI'84), pp. 34{37.\nBra hman, R. J., & Levesque, H. J. (Eds.). (1985). Readings in Knowledge Representation.\nMorgan Kaufmann, Los Altos.\nBra hman, R. J., M Guinness, D. L., Patel-S hneider, P. F., Alperin Resni k, L., & Borgida,\nA. (1991). Living with CLASSIC: When and how to use a KL-ONE-like language. In Sowa, J. F. (Ed.), Prin iples of Semanti Networks, pp. 401{456. Morgan Kaufmann, Los Altos.\nBres iani, P., Fran oni, E., & Tessaris, S. (1995). Implementing and testing expressive\ndes ription logi s: Preliminary report. In Borgida, A., Lenzerini, M., Nardi, D., & Nebel, B. (Eds.), Working Notes of the 1995 Des ription Logi s Workshop, Te hni al Report, RAP 07.95, Dipartimento di Informati a e Sistemisti a, Universit a di Roma \\La Sapienza\", pp. 131{139 Rome (Italy).\nBu hheit, M., Donini, F. M., Nutt, W., & S haerf, A. (1998). A re ned ar hite ture for\nterminologi al systems: Terminology = s hema + views. Arti ial Intelligen e, 99 (2), 209{260.\nBu hheit, M., Donini, F. M., & S haerf, A. (1993). De idable reasoning in terminologi al\nknowledge representation systems. Journal of Arti ial Intelligen e Resear h, 1, 109{ 138.\nCalvanese, D. (1996a). Finite model reasoning in des ription logi s. In Aiello, L. C., Doyle,\nJ., & Shapiro, S. C. (Eds.), Pro eedings of the Fifth International Conferen e on the Prin iples of Knowledge Representation and Reasoning (KR'96), pp. 292{303. Morgan Kaufmann, Los Altos.\nCalvanese, D. (1996b). Reasoning with in lusion axioms in des ription logi s: Algorithms\nand omplexity. In Wahlster, W. (Ed.), Pro eedings of the Twelfth European Conferen e on Arti ial Intelligen e (ECAI'96), pp. 303{307. John Wiley & Sons.\nCalvanese, D. (1996 ). Unrestri ted and Finite Model Reasoning in Class-\nBased Representation Formalisms. Ph.D. thesis, Dipartimento di Informati a e Sistemisti a, Universit a di Roma \\La Sapienza\". Available at http://www.dis.uniroma1.it/pub/ alvanes/thesis.ps.gz.\nCalvanese, D., De Gia omo, G., Lenzerini, M., Nardi, D., & Rosati, R. (1998). Des ription\nlogi framework for information integration. In Pro eedings of the Sixth International\nConferen e on Prin iples of Knowledge Representation and Reasoning (KR'98), pp. 2{13.\nCalvanese, D., & Lenzerini, M. (1994a). Making obje t-oriented s hemas more expressive.\nIn Pro eedings of the Thirteenth ACM SIGACT SIGMOD SIGART Symposium on Prin iples of Database Systems (PODS'94), pp. 243{254 Minneapolis. ACM Press and Addison Wesley.\nCalvanese, D., & Lenzerini, M. (1994b). On the intera tion between ISA and ardinality\nonstraints. In Pro eedings of the Tenth IEEE International Conferen e on Data Engineering (ICDE'94), pp. 204{213 Houston (Texas). IEEE Computer So iety Press.\nCalvanese, D., Lenzerini, M., & Nardi, D. (1994). A uni ed framework for lass based rep-\nresentation formalisms. In Doyle, J., Sandewall, E., & Torasso, P. (Eds.), Pro eedings of the Fourth International Conferen e on the Prin iples of Knowledge Representation and Reasoning (KR'94), pp. 109{120 Bonn. Morgan Kaufmann, Los Altos.\nCalvanese, D., Lenzerini, M., & Nardi, D. (1998). Des ription logi s for on eptual data\nmodeling. In Chomi ki, J., & Saake, G. (Eds.), Logi s for Databases and Information Systems, pp. 229{264. Kluwer A ademi Publisher.\nCasanova, M. A., Fagin, R., & Papadimitriou, C. H. (1984). In lusion dependen ies and\ntheir intera tion with fun tional dependen ies. Journal of Computer and System S ien es, 28 (1), 29{59.\nCattell, R. G. G. (Ed.). (1994). The Obje t Database Standard: ODMG-93. Morgan Kauf-\nmann, Los Altos. Release 1.1.\nCattell, R. G. G., & Barry, D. K. (Eds.). (1997). The Obje t Database Standard: ODMG\n2.0. Morgan Kaufmann, Los Altos.\nChandra, A. K., & Vardi, M. Y. (1985). The impli ation problem for fun tional and in lusion\ndependen ies is unde idable. SIAM Journal on Computing, 14 (3), 671{677.\nChen, P. P. (1976). The Entity-Relationship model: Toward a uni ed view of data. ACM\nTransa tions on Database Systems, 1 (1), 9{36.\nCosmadakis, S. S., & Kanellakis, P. C. (1986). Fun tional and in lusion dependen ies - A\ngraph theoreti al approa h. In Kanellakis, P. C., & Preparata, F. P. (Eds.), Advan es in Computing Resear h, Vol. 3, pp. 163{184. JAI Press.\nCosmadakis, S. S., Kanellakis, P. C., & Vardi, M. (1990). Polynomial-time impli ation\nproblems for unary in lusion dependen ies. Journal of the ACM, 37 (1), 15{46.\nDe Gia omo, G., & Lenzerini, M. (1994a). Boosting the orresponden e between des rip-\ntion logi s and propositional dynami logi s. In Pro eedings of the Twelfth National Conferen e on Arti ial Intelligen e (AAAI'94), pp. 205{212. AAAI Press/The MIT Press.\nDe Gia omo, G., & Lenzerini, M. (1994b). Con ept language with number restri tions and\nxpoints, and its relationship with - al ulus. In Pro eedings of the Eleventh European\nConferen e on Arti ial Intelligen e (ECAI'94), pp. 411{415.\nDi Battista, G., & Lenzerini, M. (1993). Dedu tive entity-relationship modeling. IEEE\nTransa tions on Knowledge and Data Engineering, 5 (3), 439{450.\nDonini, F. M., Lenzerini, M., Nardi, D., & Nutt, W. (1997). The omplexity of on ept\nlanguages. Information and Computation, 134, 1{58.\nDonini, F. M., Lenzerini, M., Nardi, D., Nutt, W., & S haerf, A. (1994). Queries, rules and\nde nitions. In Foundations of Knowledge Representation and Reasoning. SpringerVerlag.\nDonini, F. M., Lenzerini, M., Nardi, D., & S haerf, A. (1996). Reasoning in des ription\nlogi s. In Brewka, G. (Ed.), Prin iples of Knowledge Representation, Studies in Logi , Language and Information, pp. 193{238. CSLI Publi ations.\nDonini, F. M., Nardi, D., & Rosati, R. (1995). Non- rst-order features in on ept lan-\nguages. In Gori, M., & Soda, G. (Eds.), Pro eedings of the Fourth Conferen e of the Italian Asso iation for Arti ial Intelligen e (AI*IA'95), Vol. 992 of Le ture Notes in Arti ial Intelligen e, pp. 91{102. Springer-Verlag.\nFerg, S. (1991). Cardinality on epts in entity-relationship modeling. In Pro eedings of the\nTenth International Conferen e on the Entity-Relationship Approa h (ER'91), pp. 1{30.\nFikes, R., & Kehler, T. (1985). The role of frame-based representation in reasoning. Com-\nmuni ations of the ACM, 28 (9), 904{920.\nFis her, M. J., & Ladner, R. E. (1979). Propositional dynami logi of regular programs.\nJournal of Computer and System S ien es, 18, 194{211.\nGrant, J., & Minker, J. (1984). Numeri al dependen ies. In Gallaire, H., Minker, J., &\nNi olas, J.-M. (Eds.), Advan es in Database Theory II. Plenum Publ. Co., New York.\nHayes, P. J. (1979). The logi of frames. In Metzing, D. (Ed.), Frame Con eptions and Text\nUnderstanding, pp. 46{61. Walter de Gruyter and Co. Republished in (Bra hman & Levesque, 1985).\nHorro ks, I. (1998). Using an expressive des ription logi : FaCT or tion?. In Pro eedings\nof the Sixth International Conferen e on Prin iples of Knowledge Representation and Reasoning (KR'98), pp. 636{647.\nHorro ks, I., & Patel-S hneider, P. F. (1999). Optimizing des ription logi subsumption.\nJournal of Logi and Computation, 9 (3), 267{293.\nHull, R. B., & King, R. (1987). Semanti database modelling: Survey, appli ations and\nresear h issues. ACM Computing Surveys, 19 (3), 201{260.\nKarp, P. D. (1992). The design spa e of knowledge representation systems. Te h. rep. SRI\nAI Te hni al Note 520, SRI International, Menlo Park, CA.\nKarp, P. D., Myers, K. L., & Gruber, T. (1995). The generi frame proto ol. In Pro eedings\nof the Fourteenth International Joint Conferen e on Arti ial Intelligen e (IJCAI'95), Vol. A, pp. 768{774 Montreal, Canada.\nKifer, M., Lausen, G., & Wu, J. (1995). Logi al foundations of Obje t-Oriented and frame-\nbased languages. Journal of the ACM, 42 (4), 741{843.\nKifer, M., & Wu, J. (1993). A logi for programming with omplex obje ts. Journal of\nComputer and System S ien es, 47, 77{120.\nKim, W. (1990). Introdu tion to Obje t-Oriented Databases. The MIT Press.\nKim, W., & Lo hovsky, F. H. (Eds.). (1989). Obje t-Oriented Con epts, Databases, and\nAppli ations. ACM Press and Addison Wesley, New York.\nKozen, D., & Tiuryn, J. (1990). Logi s of programs. In van Leeuwen, J. (Ed.), Handbook of\nTheoreti al Computer S ien e { Formal Models and Semanti s, pp. 789{840. Elsevier S ien e Publishers (North-Holland), Amsterdam.\nLe luse, C., & Ri hard, P. (1989). Modeling omplex stru tures in obje t-oriented databases.\nIn Pro eedings of the Eighth ACM SIGACT SIGMOD SIGART Symposium on Prin-\niples of Database Systems (PODS'89), pp. 362{369.\nLehmann, F. (Ed.). (1992). Semanti Networks in Arti ial Intelligen e. Pergamon Press,\nOxford.\nLenzerini, M., Nardi, D., & Simi, M. (Eds.). (1991). Inheritan e Hierar hies in Knowledge\nRepresentation and Programming Languages. John Wiley & Sons, Chi hester.\nLenzerini, M., & Nobili, P. (1990). On the satis ability of dependen y onstraints in entity-\nrelationship s hemata. Information Systems, 15 (4), 453{461.\nMit hell, J. C. (1983). The impli ation problem for fun tional and in lusion dependen ies.\nInformation and Control, 56, 154{173.\nMots hnig-Pitrik, R., & Mylopoulous, J. (1992). Classes and instan es. Journal of Intelli-\ngent and Cooperative Information Systems, 1 (1).\nNebel, B. (1991). Terminologi al y les: Semanti s and omputational properties. In Sowa,\nJ. F. (Ed.), Prin iples of Semanti Networks, pp. 331{361. Morgan Kaufmann, Los Altos.\nPiza, B., S hewe, K.-D., & S hmidt, J. W. (1992). Term subsumption with type onstru -\ntors. In Yesha, Y. (Ed.), Pro eedings of the International Conferen e on Information and Knowledge Management (CIKM'92), pp. 449{456 Baltimore.\nS hild, K. (1991). A orresponden e theory for terminologi al logi s: Preliminary report.\nIn Pro eedings of the Twelfth International Joint Conferen e on Arti ial Intelligen e (IJCAI'91), pp. 466{471 Sydney, Australia.\nS hild, K. (1994). Terminologi al y les and the propositional - al ulus. In Doyle, J.,\nSandewall, E., & Torasso, P. (Eds.), Pro eedings of the Fourth International Conferen e on the Prin iples of Knowledge Representation and Reasoning (KR'94), pp. 509{520 Bonn. Morgan Kaufmann, Los Altos.\nS hmidt-S hau , M., & Smolka, G. (1991). Attributive on ept des riptions with omple-\nments. Arti ial Intelligen e, 48 (1), 1{26.\nSowa, J. F. (Ed.). (1991). Prin iples of Semanti Networks. Morgan Kaufmann, Los Altos.\nTeorey, T. J. (1989). Database Modeling and Design: The Entity-Relationship Approa h.\nMorgan Kaufmann, Los Altos.\nThalheim, B. (1992). Fundamentals of ardinality onstraints. In Pernoul, G., & Tjoa,\nA. M. (Eds.), Pro eedings of the Eleventh International Conferen e on the EntityRelationship Approa h (ER'92), pp. 7{23. Springer-Verlag.\nThalheim, B. (1993). Fundamentals of the Entity Relationship Model. Springer-Verlag.\nVardi, M. Y. (1985). The taming of onverse: Reasoning about two-way omputations.\nIn Parikh, R. (Ed.), Pro . of the 4th Workshop on Logi s of Programs, Vol. 193 of Le ture Notes in Computer S ien e, pp. 413{424. Springer-Verlag.\nWoods, W. A., & S hmolze, J. G. (1992). The KL-ONE family. In Lehmann, F. W. (Ed.),\nSemanti Networks in Arti ial Intelligen e, pp. 133{178. Pergamon Press. Published as a spe ial issue of Computers & Mathemati s with Appli ations, Volume 23, Number 2{9.\nYe, X., Parent, C., & Spa apietra, S. (1994). Cardinality onsisten y of derived obje ts in\nDOOD systems. In Lou opoulos, P. (Ed.), Pro eedings of the Thirteenth International Conferen e on the Entity-Relationship Approa h (ER'94), Vol. 881 of Le ture Notes in Computer S ien e, pp. 278{295 Man hester (UK). Springer-Verlag."}], "references": [], "referenceMentions": [], "year": 2013, "abstractText": "The notion of lass is ubiquitous in omputer s ien e and is entral in many formalisms for the representation of stru tured knowledge used both in knowledge representation and in databases. In this paper we study the basi issues underlying su h representation formalisms and single out both their ommon hara teristi s and their distinguishing features. Su h investigation leads us to propose a unifying framework in whi h we are able to apture the fundamental aspe ts of several representation languages used in di erent ontexts. The proposed formalism is expressed in the style of des ription logi s, whi h have been introdu ed in knowledge representation as a means to provide a semanti ally well-founded basis for the stru tural aspe ts of knowledge representation systems. The des ription logi onsidered in this paper is a subset of rst order logi with ni e omputational hara teristi s. It is quite expressive and features a novel ombination of onstru ts that has not been studied before. The distinguishing onstru ts are number restri tions, whi h generalize existen e and fun tional dependen ies, inverse roles, whi h allow one to refer to the inverse of a relationship, and possibly y li assertions, whi h are ne essary for apturing real world domains. We are able to show that it is pre isely su h ombination of onstru ts that makes our logi powerful enough to model the essential set of features for de ning lass stru tures that are ommon to frame systems, obje t-oriented database languages, and semanti data models. As a onsequen e of the established orresponden es, several signi ant extensions of ea h of the above formalisms be ome available. The high expressiveness of the logi we propose and the need for apturing the reasoning in di erent ontexts for es us to distinguish between unrestri ted and nite model reasoning. A notable feature of our proposal is that reasoning in both ases is de idable. We argue that, by virtue of the high expressive power and of the asso iated reasoning apabilities on both unrestri ted and nite models, our logi provides a ommon ore for lass-based representation formalisms.", "creator": "dvips(k) 5.78 Copyright 1998 Radical Eye Software (www.radicaleye.com)"}}}