{"id": "1212.1798", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "8-Dec-2012", "title": "IK-PSO, PSO Inverse Kinematics Solver with Application to Biped Gait Generation", "abstract": "this paper describes a new approach allowing the validation of a simplified rigid gait. this prototype combines a classical dynamic modeling with an inverse kinematics'solver based on particle swarm optimization, pso. first, an inverted pendulum, ip, is used to obtain a simplified dynamic model of motion robot and to forecast the target position of a key point in biped locomotion, the centre lateral mass, com. the proposed algorithm, namely y - pso, inverse kinematics pso, returns and inverse mass solution corresponding to that com respecting the joints constraints. in this paper the inertia weight pso variant is used to generate a possible solution according to the stability constraint compression function and a set from joints motions constraints. eli method is usable with success to optimal leg motion generation. since based about a pre - calculated sample, that satisfied the biped stability, ie proposal allowed also to compute a walk with application on a small size biped robot.", "histories": [["v1", "Sat, 8 Dec 2012 14:45:54 GMT  (718kb)", "http://arxiv.org/abs/1212.1798v1", "7 pages, 7 figures, \"Published with International Journal of Computer Applications (IJCA)\""]], "COMMENTS": "7 pages, 7 figures, \"Published with International Journal of Computer Applications (IJCA)\"", "reviews": [], "SUBJECTS": "cs.RO cs.AI", "authors": ["nizar rokbani", "adel m alimi"], "accepted": false, "id": "1212.1798"}, "pdf": {"name": "1212.1798.pdf", "metadata": {"source": "META", "title": "IK-PSO, PSO Inverse Kinematics Solver with Application to Biped Gait Generation", "authors": ["Nizar Rokbani", "Adel.M Alimi"], "emails": [], "sections": [{"heading": null, "text": "of a simplified Biped gait. This approach combines a classical dynamic modeling with an inverse kinematics\u2019 solver based on particle swarm optimization, PSO. First, an inverted pendulum, IP, is used to obtain a simplified dynamic model of the robot and to compute the target position of a key point in biped locomotion, the Centre Of Mass, COM. The proposed algorithm, called IK-PSO, Inverse Kinematics PSO, returns and inverse kinematics solution corresponding to that COM respecting the joints constraints. In This paper the inertia weight PSO variant is used to generate a possible solution according to the stability based fitness function and a set of joints motions constraints. The method is applied with success to a leg motion generation. Since based on a precalculated COM, that satisfied the biped stability, the proposal allowed also to plan a walk with application on a small size biped robot.\nGeneral Terms Robotics, Robotic Modeling, Computational Intelligence\nKeywords Biped robotics, Gait generation, Particle Swarm Optimization, Inverse kinematics. Inertia weight PSO."}, {"heading": "1. INTRODUCTION", "text": "A legged system is a robotic system that has a specific mission, ensuring locomotion. Such a system could be analyzed from its kinematics aspects and also its dynamics aspects. The kinematics aspects are centered on the joints motions, constraints and limits. Forward kinematics is the mathematical relationship between the end segments of an articulated system and its joints motions. In inverse kinematics, the problem consists of computing the needed joints motion s leading a known end segment position [1].\nBiped robots are specific robotic system that combines open and close kinematics chains; in biped locomotion two key phases are important, the double support phase and the single support phase also known as stance phase and swing phase. In double support both legs are in contact with the flow the obtained articulated body tend to move its COM, Centre of mass, position to prepare the next step, in single support or swing phase a leg is used as a support while the opposite one swings forwards, this motion causes the displacement of the COM in the same direction of the swing, when the swing leg is once again in contact with the floor the COM is placed on its surface and that gives a forward step.\nThe forward kinematics model of a robot could be simply obtained using the classical Denavit-Hartenberg method [2], while the inverse kinematics problem is little bit more complex. A classical approach to inverse kinematics consist in in writing the inverse mathematical formulation of the forward model, This approach is know to be time and memory consuming. The classical inverse modeling process based on\ngeometric [3], algebraic or iterative methods is limited if the system structure is complex [4].\nMany alternative methods are proposed to solve inverse kinematics problem. To tackle the inverse kinematics modeling an ANFIS (adaptive neuro fuzzy inference system) methodology were introduced in [5]. Basically, ANFIS methods used a set of data representing the end points of an articulated system and the joints motions needed to produce them to generate neuro-fuzzy network able to solve inverse kinematics. Genetic and evolutionary algorithms were also investigated as possible solutions to complex inverse kinematics problems [6] [7], combination of genetic and Particle swarm optimization was also investigated [8].\nIn this work the constrain weight particle swarm algorithm is investigated to solve inverse kinematics problem with a specific focus on biped robotics, including leg motion and also walking gaits.\nThe paper is organized as follows; section2 introduced the robotic modeling with both aspects kinematics and dynamics before detailing given a brief on particle swarm optimization. Section 3, is dedicated to IK-PSO, inverse kinematics PSO with application to swing leg motion generation and walking gaits of a biped robot. Experiments and results are detailed in section 4. The paper ends by a discussion the results and further works, in section5."}, {"heading": "2. MODELING IN BIPED ROBOTICS", "text": "A simplified biped robot could be observed as an articulated system with a specific configuration allowing it to be an open loop kinematics system or a closed loop kinematics one. A simplified 2D representation on the sagittal frame is showed in figure 1 (a); its equivalent inverted pendulum appears in figure1 (b).\nFor a planar robot, the kinematics modeling process consists in finding a solution to the end segments of each leg, (hip, knee and ankle) according to joints motions. Joints are supposed to produce rotations the hip joint motion is responsible of the knee position, the knee joints is in charge with the ankle end position and finally the ankle joint is responsible of the foot position.\nFor kinematic-modeling needs a set of frames are used, a key frame is the reference frame, for biped robots this frame is used to compute a specific point called, COM, centre of mass. The COM is a virtual point representing the centre of gravity of the body according to the relative position of joints and masses see figure 1 (b). A simplified dynamic model of a biped robot could be obtained using the inverted pendulum made by the COM and a virtual support leg that joined the COM to the ground. The IP model allowed an estimation of the needed torque to support the overall robot structure, see paragraph 2.2, dynamic modeling.\nAn important issue in biped robotics is the stability of the structure while walking [9]. Any motion has a direct impact on the stability and could lead to a fall down. Handling the kinematics of such a system should include both, the motion generation it self and the impact of the motion on the structure stability. The COM helps also a simple control of the stability; a biped is stable since its COM projection on the floor remains within the sustention polygon, with is the surface of foot prints wit respect to the walking cycle [10]."}, {"heading": "2.1 Kinematics model of an articulated system", "text": "Assuming an articulated system composed by a set of links and joints, to build a kinematics model we need a set of frames placed in specific points, generality the links end segments. For a robotic system with (n) end-segment\npositions, called 1 2 ( , ,.... )i n iP P P P , a set of joints rotations\ncorrespondent to them respectively  1 2, ,...... )i iq m   , and a set of translations Ti, where (i) stands for the iteration number, so the forward kinematics could be expressed by equation (1).\n( , )iPi f qi T (1)\nClassically the forward model is build using a set of geometric transformations; it could be obtained using a simplified approach such us the Denavit-Hartenberg one [11]. In this case the robot is observed as a set of links and joints, some rules should be observed when placing the frames on the links\nso that it will become easy to obtain the forward kinematics model.\nThe inverse kinematics is a function that gives, when it is defined, a set of angular rotations of the joints and elementary translations Ti in order to achieve a given position St. that could be expressed by the equation (2)\n1( , ) ( )i iQ T f Pi  (2)\nIf the system joints motions are limited to rotations the inverse kinematics problem is then establish as in equation (3).\n1 1 2( , ,..... ) ( )i nQ q q q f Pi   (3)\nThe i\nf J q    is known to be the Jacobian\u2019s of f() witch is\nno more that the first order derivative of f(). If J is invertible, the inverse kinematics is easy to compute using equation (3), if not we have to approximate J and to use the approximation to obtain a solution.\n1 *i iQ PJ     (4)\nSeveral methods are proposed, the Jacobian transpose methods uses transpose of J instead if its inverse, the pseudo inverse method replaces the Jacobian by its pseudo inverse, see equation (4), while it is not the exact inverse of J it still a good approximate on of it [4] ."}, {"heading": "2.2 Dynamic modeling of a biped robot", "text": "The inverted pendulum, IP, gives an approximation of the biped robot dynamic model; it allowed also the estimation of the robot stability [9]. In this case the IP supports a specific mass called the COM witch is virtual mass with a virtual position P(x,y,z); its linear velocity is assumed to be the linear velocity of the robot, and its acceleration the linear acceleration of the hole body too. The fundamental equation of dynamics could then be written as in (6). It gives an approximation of the torque needed in the angle joint of the support leg.\nTo establish a simplified model, the leg is represented by a set of masses and segments see figure 1 (a), where segments sizes and masses depends on the robot mechanical design. Known the legs segments masses and relative positions, the COM position, P (Xcom, Ycom), could be computed using equations (5)[10].\n1\n1\n1\n1\n1\n1\n1 *\n1 *\n1 *\nn\ncom min i\ni\ni\nn\ncom min i\ni\ni\nn\ncom min i\ni\ni\nx x mi\nm\ny y mi\nm\nz z mi\nm\n\n\n\n\n\n\n\n\n\n \n \n \n\nP (x,y,z), is the position vector in a 3D (x,y,z) frame. The planar representation used here is limited to (x,y). Considering the relative IP, leg angular position , \u03b8, and \u03c4 is the torque needed to ensure the COM placement. \n2 2\n2 2\n*cos( ) * * *sin( )\n( ) ( ) * *com com\nm g m a l\nx y a i j\nt t\n   \n   \n  \nEquation (5), represents also the equation of motion of the COM, allowing a pres-computed COM target position, this position target position is then used to compute the necessary joints motions"}, {"heading": "2.3 Particle swam optimization", "text": "Particle swarm optimization, PSO, was first investigated by Eberhart and Kennedy as a computational approach to solve complex problems simply by mimic the social comportment of animals. In a group each individual is represented by a particle with a position and a target mission [12].\nIn PSO, a problem is addressed threw a search space and a fitness function; a set of particles are randomly spread on the search space, and asked to find a solution, each particle is a potential solution of the problem, while the best one is the one fitting the fitness function. The swarm is generally asked to iterate until the fitness function is satisfied or to the end of a fixed iteration number. For each iteration the particles positions on the search space are updated according to a couple of equations see equation (7) and (8). Those equations are also used to formalize the interactions that could occurs within the group, this mimic the bird folks or the fish banks global positioning in witch the group has a comment objective, individual comportments still allowed within the group global policy and has a direct impact on it. The native PSO formulation appears in equations (7) and (8).\n1 21 * ()*( ) * ()*( )i lbest i Gbesti iV V c rand x x c rand x x               (7)\n1 1i i ix x V   \n   (8)\nWhere (V) stands for the velocity, (c1) and (c2) are called acceleration factors and (x) is the particle position. The velocity is a displacement of the particle, according to its best local and to the best particle of the swarm. Setting parameter\nc1 and c2 as equal will give equivalent potential weight to the local search strategy and the global search one. The local best is elected between particle neighborhoods; a neighborhood topology should be chosen before running PSO.\nA key issue in PSO is to establish a particle representation that fits the problem formulation and to define a fitness function that ends the solving process. It is also important to remind that PSO gives always a solution, even if the fitness function is not totally satisfied, the best particle is returned as a solution within the iteration number limit.\nAccording to [12], the PSO algorithm runs as follows:\n1) Initialize a population of particles\n2) For each particle evaluate the fitness function\n3) Compare fitness function to local best particle one, and if better set the particle as local best.\n4) Compare fitness to global best particle, and if better set new global best position as current particle\nposition.\n5) Update the particles positions according to equations (4) and (5).\n6) Loop to step (2) until stop criterion is met, (fitness\nfunction satisfied or maximum iteration number achieved).\nIt is also common to control and limit the velocity within a know range by fixing the maximum amount that the velocity could achieve, Vmax. Several variations were then introduced in order to optimize the native proposal. Inertia weight PSO is one of the major variants of PSO [13], it allowed to moderate the velocity using an inertia coefficient allowing to smooth or to fasten the search procedure.\nOn the other hand PSO was investigated as an optimization technique used in conjunction with other intelligent methods such as neural networks, genetic algorithms or ant systems [14]."}, {"heading": "3. IK-PSO, INVERSE KINEMATICS USING PSO", "text": "Particle swarm optimization was proposed for motion generation and optimization; attempts to use original PSO formulation to generate the gaits of biped robotic system [15] [16] [17]. In [15] a proposal using the symmetric characteristics\u2019 of the biped walking gaits to run a PSO that transfers the legs motions characteristics from one to another. In [16] a random gait generator using classical PSO [11] with a walking stability control was investigated, the proposal was then tuned with agent based architecture [17]. In [18] a PSO gait generator where inserted into a control flow using classical PID controllers. In this work the PSO is investigated as an alternative to IK solvers. The proposed algorithm could be applied to any robotic system, while in this paper the focus is made only on its use for biped robot."}, {"heading": "3.1 IK-PSO algorithm", "text": "The proposed IK-PSO solver, could be resumed as follows, first we assume that the particle is a vector of joint rotations Qi, so swarm will work in the joints frames and a particle represents a potential solution of the articulated system. Then the forward kinematics model corresponding to that solution is used to establish the resultant motion of the links. A specific point is considered as a key point for the motion\noptimality, it could be an end-segment, or a virtual point such the COM of a biped robot.\nThe following PSO formulation is proposed in [18], it has the advantage to fit better the requirement of our problem. PSO equations are introduced in (9) and (10)\n1 1 2* *( ) *( )\nlbest\nii ii i bestV w V q q q q                (9)\n1 1i i iq q V       (10)"}, {"heading": "3.2 Swing leg problem formulation", "text": "To apply the IK-PSO algorithm on simple double segment leg model, we have first to write the forward kinematics of that system. The forward kinematics of a leg 1, as it appears in figure 4, included two joints and two links. For each leg (i), Pi.1 and Pi.2 represent respectively the end-segments positions of link (i.1) and link (i.2). Where link (i.1) refers to the first link of leg (i), the opposite leg is here the support leg and is considered as a fix leg. For each leg the particle representations are in (11)\n1 2 1.1 1.2 2.1 2.2\n.1 1min, 1max\n.2 2min, 2max\n( , ) ( , ), ( , )\ni\ni\nQ q q\nunder\n   \n  \n  \n    \n         \n(11)\nThe forward model of leg (i) is expressed by equation (12).\n.1 1*cos( 1.1)\n.1 1*sin( 1.1)\n.2 1*cos( 1.1) 2cos( 1.1 1.2)\n.2 1*sin( 1.1) 2sin( 1.1 1.2)\nXi l\nYi l\nXi l l\nYi l l\n\n\n  \n  \n          \n(12)\nWhere (l1) is the length of link1.1 and (l2) is the length of link 1.2. Since the legs are symmetric, (l1) and (l2) are respectively the same for leg 2. Equation (12) expresses the kinematic model in the frame (X1, Y1), see figure 4.\nEquation (11), gives the forward model of the leg i, for both legs a simplified model is used, and the foot print is neglected. For a swing motion, only one leg is moving while the opposite one is assumed to be the support one.\nThe inverse kinematics problem of this swing leg could be written as follows: for a target position of P2.2, T2.2; find the corresponding joints positions. Additional constraint could be also added. The fitness function here could be simply the distance of P2.2 to the T2.2, see figure4.\n2 2.2 2.2ifitenss T P  (13)"}, {"heading": "3.3 Walking gait problem formulation", "text": "For walking gait generation, the same particles representation is used as in equation (11); the sagittal forward kinematics model of the system is written bellow, equation (13). The simplified equation of motion of the COM, detailed in paragraph 2.2, is used to generate a COM reference trajectory, and then IKPSO is then used to obtain the leg gaits. Since legs have symmetric comportment, only the swing leg is represented, the support leg is assumed to fix, the problem formulation is easier."}, {"heading": "No Return solution sets", "text": "1.1 1*cos( 1.1)\n1.1 1*sin( 1.1)\n1.2 1*cos( 1.1) 2cos( 1.1 1.2)\n1.2 1*sin( 1.1) 2sin( 1.1 1.2)\n2.1 1*cos( 2.1)\n2.1 1*sin( 2.1)\n2.2 1*cos( 2.1) 2cos( 2.1 2.2)\n2.2 1*sin( 2.1) 2sin( 2.1\nX l\nY l\nX l l\nY l l\nX l\nY l\nX l l\nY l l\n\n\n  \n  \n\n\n  \n  \n\n\n  \n  \n\n\n  \n   2.2)              (13)\nThe particles representation and the fitness function for case appears in equations (14) and (15).\n1.1 1.2 2.1 2.2( , , , )q        (14)\n2\nifitenss ComT Com  (15)\nThe gait generation method could be resumed as follows :\n1) Compute COM reference trajectory (comT).\n2) Initialize a population of particles\n3) For each particle evaluate the fitness function\n4) Compute the forward kinematics model\n5) Compute obtained COM position (com).\n6) Compare fitness function to local best particle one, and if better set the particle as local best.\n7) Compare fitness to global best particle, and if better set new global best position as current particle\nposition.\n8) Update the particles positions according to equations (4) and (5).\n9) Loop to step (2) until stop criterion is met, (fitness\nfunction satisfied or maximum iteration number achieved)."}, {"heading": "4. EXPERIMENTAL RESULTS", "text": ""}, {"heading": "4.1 IKPSO for swing leg motion generation", "text": "To test the IK-PSO algorithm a target position was fixed for the swing leg, the algorithm was run with a stop condition witch is fitness satisfaction or the end of iteration numbers, the maximum number of iteration was fixed to 5000, and witch is a commonly used parameter in standard PSO processing.\nFig 5, illustrates the solutions set of all possible motions that could be possible for a double segment articulated system, here no constraints were imposed on the search space. For a known target point, a solution appears in red, while not unique, it is the one with the best fitness function. For this case no limits or specific constraints were applied to joints angles, the system was left free to find any solution, and the fitness is simply the minimum distance between the end segment and the target\nAt the opposite of the previous example where we was interested only by the target position and particles velocity, figure 6, illustrates a swing leg motion in witch search spaces were limited for both joints with constraints as in equation (12). For both experiments the fitness function target appears in (11) and here and end-segment target position was used."}, {"heading": "4.2 Robot Prototyping", "text": "A robotic Kit is used here to validate the IK-PSO method [19]. For that, the assembled robot has a design close to the proposed simplified model, see figure 7. In this assembled biped, a leg is composed by a two segments and a footprint. Joints are actuated using servomotor that includes its controller with a build in PID controller.\nThe walking gait is obtained by generating a swing motion of leg 1, while leg 2 is use to support the robot, and a swing motion of leg 2 when leg one is the support one.\nIn our case the following steps were followed during the robot prototyping:\n First we build a simple biped robot with only three degree of freedom on each leg.\n Then the robot parameters were measured including, segments sizes, servos masses.\n Real robot motion angular constraints were report to the IK-PSO algorithms\n Using the inverted pendulum simplified model the COM target position was approximated.\n Distance of generated COM to targeted Com was used as a fitness function of the IK-PSO.\nThe detailed prototyping methodology is detailed in [19]. And the experiment leads to a successful walk of the robot."}, {"heading": "5. DISCUSSION AND FURTHER WORKS", "text": "In this paper we introduce a new proposal for motion generation of a biped robotic system. The proposal is based on an inverse kinematics solver that uses inertia weight particle swarm optimizer, PSO. The IK-PSO algorithm, Inverse Kinematics PSO, is based on a forward kinematic model, a specific formulation of PSO and a fitness function to give the inverse kinematics solution of a robotics system.\nThe IK-PSO generates a set of solutions, each one in a particle, then compute the forward equivalent target position of a specific point, the COM for a walking gait, and returns the best one.\nThe algorithm could solve any inverse kinematics problem, while here applied to the swing motion leg of a biped robot before being extended to the global walking gait, where a simplified inverted pendulum biped model is used to estimate the COM position. This position was then given to the IKPSO solver in order to generate the correspondent angular positions necessary for the joints motion.\nFor validation needs a robotics educational kit were used to build a simple biped, its parameters, were then injected to the IK-PSO in order to generate the joints rotations and control the robot walking with success."}, {"heading": "6. ACKNOWLEDGMENTS", "text": "The authors would like to acknowledge the financial support of this work by grants from General Direction of Scientific Research (DGRST), Tunisia, under the ARUB program."}, {"heading": "7. REFERENCES", "text": "[1] M.Y. Al-Zaydi, S.H.M. Amin. 1997. Simulation\nkinematics model of a multi-legged mobile robot. in the Proc of 8th International Conference on Advanced Robotics, pp : 89-94.\n[2] P.I Corke, P.I. 1996. A robotics toolbox for MATLAB. IEEE, Robotics & Automation Magazine, Volume: 3,\nIssue: 1,1996, pp: 24 \u2013 32.\n[3] A Jamali, R Khan, and M Rahman. 2011. A new geometrical approach to solve inverse kinematics of\nhyper redundant robots with variable link length. In Proc of Mechatronics (ICOM).\n[4] H. Das, J. Slotine,T.B. Sheridan. 1988. Inverse kinematic algorithms for redundant systems. Proc of IEEE\nInternational Conference on Robotics and Automations, pp: 43-48.\n[5] S. Alavandar, and M. J. Nigam. 2008. Neuro-Fuzzy based Approach for Inverse Kinematics solution of\nIndustrial Robot Manipulators. Int. J. of Computers, Communications & Control, Vol. III , No. 3, pp : 224- 234.\n[6] K Parker, AR Khoogar, and D.E. Goldberg. 1989. \"Inverse kinematics of redundant robots using genetic\nalgorithms\", In Proc of IEEE ICRA, pp: 271- 276.\n[7] O.Chocron,and P. Bidaud. 1997. Evolutionary algorithms in kinematic design of robotic systems. In Proc of\nIROS'97, pp: 1111- 1117.\n[8] R. Rajendra, and D.K. Pratihar. 2011. Multi-objective optimization in gait planning of biped robot using genetic\nalgorithm and particle swarm optimization tool. Journal of Control Engineering and Technology, pp : 81-94.\n[9] M. Vukobratovic, A. Frank, and D. Juricic. 1970. On the Stability of Biped Locomotion. IEEE Transactions on\nBiomedical Engineering, Volume: 17, Issue 1, pp: 25 \u2013 36.\n[10] N.Rokbani, B. Ammar Cherif and A. M. Alimi. 2009. Toward Intelligent Biped-Humanoids Gaits Generation.\nHumanoid Robots, Ben Choi (Ed.), ISBN: 978-953- 7619-44-2, InTech.\n[11] J. Denavit, and R.S. Hartenberg. 1955. A kinematics notation for lower-pair mechanisms based on matrices.\nJournal. Applied mechanics. Vol 22, pp : 215-221.\n[12] J. Kennedy and R. Eberhart. 1995. Particle swarm optimization. In Proc of IEEE International Conference\non Neural Networks.\n[13] Y. Shi, and R. Eberhart, 1998. A modified particle swarm optimizer. In Proc of the 1998 IEEE World\nCongress on Computational Intelligence and IEEE International Conference on Evolutionary Computation, pp: 69-73.\n[14] W. Elloumi, N. Rokbani and A.M. Alimi. 2009. Ant supervised by PSO. In Proc of International symposium\non Computational Intelligence and Intelligent Informatics, pp : 161-166.\n[15] N. Rokbani, A.M. Adel, and B. Ammar. 2007. Architectural Proposal for a Robotized Intelligent\nhumanoid, IZiman. In Proc of IEEE International\nConference on Automation and Logistics, ICAL2007, pp: 1941 \u2013 1946.\n[16] N. Rokbani, EL. Benbousasa and A.M ALIMI. 2008. Particle Swarm Optimization for Humanoid Walking\nGait Generation\u201d, In Proc of 11\u2019 Clawar 2008, ADVANCES IN MOBILE ROBOTICS, Chapter 90, pp: 744-751.\n[17] N. Rokbani, E. B. Boussada, B. Ammar and A.M. Alimi. 2009. From GAITS TO ROBOT, A HYBRID\nMETHODOLOGY FOR A BIPED WALKER. In Proc of 12\u2019 Clawar 2009. Mobile Robotics, chapter 84, pp: 685-692.\n[18] N. Rokbani, E.Benbousaada, B.Ammar and A.M. Alimi. 2010. Biped robot control using particle swarm\noptimization. In Proc. of Intl. Conf. on Systems Man and Cybernetics (SMC 2010), pp: 506 -512.\n[19] N. Rokbani, A. Zaidi and A.M Alimi. 2012. Prototyping a Biped Robot Using an Educational Robotics Kit.\nInternational Conference on Education and E-Learning Innovations, ICEELI'2012."}], "references": [{"title": "Simulation kinematics model of a multi-legged mobile robot", "author": ["M.Y. Al-Zaydi", "S.H.M. Amin"], "venue": "in the Proc of 8th International Conference on Advanced Robotics,", "citeRegEx": "1", "shortCiteRegEx": "1", "year": 1997}, {"title": "A robotics toolbox for MATLAB", "author": ["P.I.P.I Corke"], "venue": "IEEE, Robotics & Automation Magazine,", "citeRegEx": "2", "shortCiteRegEx": "2", "year": 1996}, {"title": "A new geometrical approach to solve inverse kinematics of hyper redundant robots with variable link length", "author": ["A Jamali", "R Khan", "M Rahman"], "venue": "In Proc of Mechatronics (ICOM)", "citeRegEx": "3", "shortCiteRegEx": "3", "year": 2011}, {"title": "Inverse kinematic algorithms for redundant systems", "author": ["H. Das", "J. Slotine", "T.B. Sheridan"], "venue": "Proc of IEEE International Conference on Robotics and Automations,", "citeRegEx": "4", "shortCiteRegEx": "4", "year": 1988}, {"title": "Neuro-Fuzzy based Approach for Inverse Kinematics solution of Industrial Robot Manipulators", "author": ["S. Alavandar", "M.J. Nigam"], "venue": "Int. J. of Computers, Communications & Control,", "citeRegEx": "5", "shortCiteRegEx": "5", "year": 2008}, {"title": "Inverse kinematics of redundant robots using genetic algorithms", "author": ["K Parker", "AR Khoogar", "D.E. Goldberg"], "venue": "In Proc of IEEE ICRA,", "citeRegEx": "6", "shortCiteRegEx": "6", "year": 1989}, {"title": "Evolutionary algorithms in kinematic design of robotic systems", "author": ["O.Chocron", "P. Bidaud"], "venue": "In Proc of IROS'97,", "citeRegEx": "7", "shortCiteRegEx": "7", "year": 1997}, {"title": "Multi-objective optimization in gait planning of biped robot using genetic algorithm and particle swarm optimization tool", "author": ["R. Rajendra", "D.K. Pratihar"], "venue": "Journal of Control Engineering and Technology,", "citeRegEx": "8", "shortCiteRegEx": "8", "year": 2011}, {"title": "On the Stability of Biped Locomotion", "author": ["M. Vukobratovic", "A. Frank", "D. Juricic"], "venue": "IEEE Transactions on Biomedical Engineering,", "citeRegEx": "9", "shortCiteRegEx": "9", "year": 1970}, {"title": "Toward Intelligent Biped-Humanoids Gaits Generation", "author": ["N.Rokbani", "B. Ammar Cherif", "A.M. Alimi"], "venue": "Humanoid Robots, Ben Choi (Ed.),", "citeRegEx": "10", "shortCiteRegEx": "10", "year": 2009}, {"title": "A kinematics notation for lower-pair mechanisms based on matrices", "author": ["J. Denavit", "R.S"], "venue": "Hartenberg", "citeRegEx": "11", "shortCiteRegEx": "11", "year": 1955}, {"title": "Particle swarm optimization", "author": ["J. Kennedy", "R. Eberhart"], "venue": "In Proc of IEEE International Conference on Neural Networks", "citeRegEx": "12", "shortCiteRegEx": "12", "year": 1995}, {"title": "A modified particle swarm optimizer", "author": ["Y. Shi", "R. Eberhart"], "venue": "Proc of the 1998 IEEE World Congress on Computational Intelligence and IEEE International Conference on Evolutionary Computation,", "citeRegEx": "13", "shortCiteRegEx": "13", "year": 1998}, {"title": "Ant supervised by PSO", "author": ["W. Elloumi", "N. Rokbani", "A.M. Alimi"], "venue": "Proc of International symposium on Computational Intelligence and Intelligent Informatics,", "citeRegEx": "14", "shortCiteRegEx": "14", "year": 2009}, {"title": "Architectural Proposal for a Robotized Intelligent humanoid, IZiman", "author": ["N. Rokbani", "A.M. Adel", "B. Ammar"], "venue": "Proc of IEEE International  International Journal of Computer Applications", "citeRegEx": "15", "shortCiteRegEx": "15", "year": 2007}, {"title": "Benbousasa and A.M ALIMI", "author": ["N. Rokbani", "EL"], "venue": "In Proc of 11\u2019 Clawar", "citeRegEx": "16", "shortCiteRegEx": "16", "year": 2008}, {"title": "From GAITS TO ROBOT, A HYBRID METHODOLOGY FOR A BIPED WALKER", "author": ["N. Rokbani", "E.B. Boussada", "B. Ammar", "A.M. Alimi"], "venue": "In Proc of 12\u2019", "citeRegEx": "17", "shortCiteRegEx": "17", "year": 2009}, {"title": "Biped robot control using particle swarm optimization", "author": ["N. Rokbani", "E.Benbousaada", "B.Ammar", "A.M. Alimi"], "venue": "In Proc. of Intl. Conf. on Systems Man and Cybernetics (SMC", "citeRegEx": "18", "shortCiteRegEx": "18", "year": 2010}, {"title": "Prototyping a Biped Robot Using an Educational Robotics Kit", "author": ["N. Rokbani", "A. Zaidi", "A.M Alimi"], "venue": "International Conference on Education and E-Learning Innovations,", "citeRegEx": "19", "shortCiteRegEx": "19", "year": 2012}], "referenceMentions": [{"referenceID": 0, "context": "In inverse kinematics, the problem consists of computing the needed joints motion s leading a known end segment position [1].", "startOffset": 121, "endOffset": 124}, {"referenceID": 1, "context": "The forward kinematics model of a robot could be simply obtained using the classical Denavit-Hartenberg method [2], while the inverse kinematics problem is little bit more complex.", "startOffset": 111, "endOffset": 114}, {"referenceID": 2, "context": "The classical inverse modeling process based on geometric [3], algebraic or iterative methods is limited if the system structure is complex [4].", "startOffset": 58, "endOffset": 61}, {"referenceID": 3, "context": "The classical inverse modeling process based on geometric [3], algebraic or iterative methods is limited if the system structure is complex [4].", "startOffset": 140, "endOffset": 143}, {"referenceID": 4, "context": "To tackle the inverse kinematics modeling an ANFIS (adaptive neuro fuzzy inference system) methodology were introduced in [5].", "startOffset": 122, "endOffset": 125}, {"referenceID": 5, "context": "Genetic and evolutionary algorithms were also investigated as possible solutions to complex inverse kinematics problems [6] [7], combination of genetic and Particle swarm optimization was also investigated [8].", "startOffset": 120, "endOffset": 123}, {"referenceID": 6, "context": "Genetic and evolutionary algorithms were also investigated as possible solutions to complex inverse kinematics problems [6] [7], combination of genetic and Particle swarm optimization was also investigated [8].", "startOffset": 124, "endOffset": 127}, {"referenceID": 7, "context": "Genetic and evolutionary algorithms were also investigated as possible solutions to complex inverse kinematics problems [6] [7], combination of genetic and Particle swarm optimization was also investigated [8].", "startOffset": 206, "endOffset": 209}, {"referenceID": 8, "context": "An important issue in biped robotics is the stability of the structure while walking [9].", "startOffset": 85, "endOffset": 88}, {"referenceID": 9, "context": "The COM helps also a simple control of the stability; a biped is stable since its COM projection on the floor remains within the sustention polygon, with is the surface of foot prints wit respect to the walking cycle [10].", "startOffset": 217, "endOffset": 221}, {"referenceID": 10, "context": "Classically the forward model is build using a set of geometric transformations; it could be obtained using a simplified approach such us the Denavit-Hartenberg one [11].", "startOffset": 165, "endOffset": 169}, {"referenceID": 3, "context": "Several methods are proposed, the Jacobian transpose methods uses transpose of J instead if its inverse, the pseudo inverse method replaces the Jacobian by its pseudo inverse, see equation (4), while it is not the exact inverse of J it still a good approximate on of it [4] .", "startOffset": 270, "endOffset": 273}, {"referenceID": 8, "context": "2 Dynamic modeling of a biped robot The inverted pendulum, IP, gives an approximation of the biped robot dynamic model; it allowed also the estimation of the robot stability [9].", "startOffset": 174, "endOffset": 177}, {"referenceID": 9, "context": "Known the legs segments masses and relative positions, the COM position, P (Xcom, Ycom), could be computed using equations (5)[10].", "startOffset": 126, "endOffset": 130}, {"referenceID": 11, "context": "In a group each individual is represented by a particle with a position and a target mission [12].", "startOffset": 93, "endOffset": 97}, {"referenceID": 11, "context": "According to [12], the PSO algorithm runs as follows:", "startOffset": 13, "endOffset": 17}, {"referenceID": 12, "context": "Inertia weight PSO is one of the major variants of PSO [13], it allowed to moderate the velocity using an inertia coefficient allowing to smooth or to fasten the search procedure.", "startOffset": 55, "endOffset": 59}, {"referenceID": 13, "context": "On the other hand PSO was investigated as an optimization technique used in conjunction with other intelligent methods such as neural networks, genetic algorithms or ant systems [14].", "startOffset": 178, "endOffset": 182}, {"referenceID": 14, "context": "IK-PSO, INVERSE KINEMATICS USING PSO Particle swarm optimization was proposed for motion generation and optimization; attempts to use original PSO formulation to generate the gaits of biped robotic system [15] [16] [17].", "startOffset": 205, "endOffset": 209}, {"referenceID": 15, "context": "IK-PSO, INVERSE KINEMATICS USING PSO Particle swarm optimization was proposed for motion generation and optimization; attempts to use original PSO formulation to generate the gaits of biped robotic system [15] [16] [17].", "startOffset": 210, "endOffset": 214}, {"referenceID": 16, "context": "IK-PSO, INVERSE KINEMATICS USING PSO Particle swarm optimization was proposed for motion generation and optimization; attempts to use original PSO formulation to generate the gaits of biped robotic system [15] [16] [17].", "startOffset": 215, "endOffset": 219}, {"referenceID": 14, "context": "In [15] a proposal using the symmetric characteristics\u2019 of the biped walking gaits to run a PSO that transfers the legs motions characteristics from one to another.", "startOffset": 3, "endOffset": 7}, {"referenceID": 15, "context": "In [16] a random gait generator using classical PSO [11] with a walking stability control was investigated, the proposal was then tuned with agent based architecture [17].", "startOffset": 3, "endOffset": 7}, {"referenceID": 10, "context": "In [16] a random gait generator using classical PSO [11] with a walking stability control was investigated, the proposal was then tuned with agent based architecture [17].", "startOffset": 52, "endOffset": 56}, {"referenceID": 16, "context": "In [16] a random gait generator using classical PSO [11] with a walking stability control was investigated, the proposal was then tuned with agent based architecture [17].", "startOffset": 166, "endOffset": 170}, {"referenceID": 17, "context": "In [18] a PSO gait generator where inserted into a control flow using classical PID controllers.", "startOffset": 3, "endOffset": 7}, {"referenceID": 17, "context": "The following PSO formulation is proposed in [18], it has the advantage to fit better the requirement of our problem.", "startOffset": 45, "endOffset": 49}, {"referenceID": 18, "context": "2 Robot Prototyping A robotic Kit is used here to validate the IK-PSO method [19].", "startOffset": 77, "endOffset": 81}, {"referenceID": 18, "context": "The detailed prototyping methodology is detailed in [19].", "startOffset": 52, "endOffset": 56}], "year": 2012, "abstractText": "This paper describes a new approach allowing the generation of a simplified Biped gait. This approach combines a classical dynamic modeling with an inverse kinematics\u2019 solver based on particle swarm optimization, PSO. First, an inverted pendulum, IP, is used to obtain a simplified dynamic model of the robot and to compute the target position of a key point in biped locomotion, the Centre Of Mass, COM. The proposed algorithm, called IK-PSO, Inverse Kinematics PSO, returns and inverse kinematics solution corresponding to that COM respecting the joints constraints. In This paper the inertia weight PSO variant is used to generate a possible solution according to the stability based fitness function and a set of joints motions constraints. The method is applied with success to a leg motion generation. Since based on a precalculated COM, that satisfied the biped stability, the proposal allowed also to plan a walk with application on a small size biped robot. General Terms Robotics, Robotic Modeling, Computational Intelligence", "creator": "Microsoft\u00ae Office Word 2007"}}}