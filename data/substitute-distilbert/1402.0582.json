{"id": "1402.0582", "review": {"conference": "arxiv", "VERSION": "v1", "DATE_OF_SUBMISSION": "4-Feb-2014", "title": "Scheduling a Dynamic Aircraft Repair Shop with Limited Repair Resources", "abstract": "we address a dynamic repair shop scheduling problem in the context of military civilian fleet management whether the goal is to maintain a full complement of aircraft over it long - term. a subset of flights, each with its requirement for a specific number and type certificate aircraft, are already scheduled over a long horizon. we need ideally assign aircraft to flights and schedule repair activities while considering the flights requirements, repair capacity, and aircraft failures. the number in aircraft awaiting repair constantly stabilize over time due those failures! it is therefore necessary to rebuild the repair schedule online. to solve the problem, you view progressive dynamic repair shop as successive static binary scheduling ms - problems over shorter time periods. we propose a specialized approach based on the logic - based benders decomposition to solve the static sub - problems, and design different rescheduling policies to schedule the dynamic repair shop. computational experiments from predicting the benders model increases able to find and prove optimal solutions on average four times faster than a mixed integer programming model. the rescheduling approach having both aspects of scheduling over a thin horizon and quickly adjusting multiple schedule increases aircraft available in the long stretches by 10 % compared to the approaches having either one of the aspects alone.", "histories": [["v1", "Tue, 4 Feb 2014 01:42:10 GMT  (663kb)", "http://arxiv.org/abs/1402.0582v1", null]], "reviews": [], "SUBJECTS": "cs.AI", "authors": ["maliheh aramon bajestani", "j christopher beck"], "accepted": false, "id": "1402.0582"}, "pdf": {"name": "1402.0582.pdf", "metadata": {"source": "CRF", "title": "Scheduling a Dynamic Aircraft Repair Shop with Limited Repair Resources", "authors": ["Maliheh Aramon Bajestani", "Christopher Beck"], "emails": ["maramon@mie.utoronto.ca", "jcb@mie.utoronto.ca"], "sections": [{"heading": "1. Introduction", "text": "The United States Air Force website outlines readiness as one of the vital elements to ensure the operational effectiveness in defense strategies (Schwartz, 2012). Deficiency in resourcing for operations and maintenance is stated as the common culprit for poor readiness. Since air forces are budget-constrained and highly dynamic environments, the optimal allocation of resources to activities to maintain readiness at an appropriate level is challenging. In this paper, we study a problem in the context of military aircraft repair shop where readiness is defined as the ability to effectively carry out the pre-scheduled missions. We need to decide when each failed aircraft should be repaired to guarantee the availability of aircraft at high and steady level. However, high frequency of unexpected failures in military aircraft (Safaei, Banjevic, & Jardine, 2011) and limited repair resources such as workforce, tools, and space (Kozanidis, Gavranis, & Kostarelou, 2012) constrain consistent aircraft availability.\nMotivated by the work of Safaei et al. (2010, 2011), we study the problem of scheduling a military aircraft repair shop, where a number of flights are planned over a long horizon. Every flight, also called a wave, has a maximum requirement for a specific number of aircraft of different types though it can be partially carried out without its maximum complement. At the beginning of the time horizon, an aircraft is either ready for a pre-flight check or is\nc\u00a92013 AI Access Foundation. All rights reserved.\nawaiting repair in the repair shop. Aircraft flow over a long horizon is illustrated in Figure 1. The goal is to determine an assignment of aircraft to waves and a schedule of repair jobs that will maximize flight coverage, that is, the extent to which the aircraft requirements of the flights are met. When an aircraft fails during a pre- or post-flight check, it enters the repair shop to be incorporated into the current repair schedule. Each aircraft failure requires a set of independent repair activities with known characteristics such as processing times and resource requirements to be scheduled on repair resources with a limited capacity.\nThe central idea of our solution approach is to view the dynamic repair shop as successive static sub-problems over shorter time periods. A solution of the static sub-problem determines an assignment of aircraft to flights and a schedule of repair jobs maximizing the flight coverage. When a failed aircraft enters the repair shop while the previous repair schedule is still under execution, we reschedule the repair activities by solving a new static sub-problem.\nAfter proving the NP-hardness of the static sub-problem, we explore several techniques to solve the problem: mixed integer programming (MIP); constraint programming (CP); logic-based Benders decomposition (LBBD) using either MIP or CP; and a dispatching heuristic motivated by the Apparent Tardiness Cost (ATC) dispatching rule. We then design three different rescheduling policies based on the length of the scheduling horizon and how frequently rescheduling is done.\nWe perform two separate empirical studies. The first indicates that the integration of the dispatching heuristic and LBBD results in the lowest mean run-time of the techniques tested to optimally schedule the repair shop. The second experiment demonstrates that both defining the static scheduling problem over a longer horizon and rescheduling more frequently provide the flights with 10% higher coverage than either one of them alone.\nThe remainder of the paper is organized as follows: We define the problem, and provide an overview of the relevant literature in Section 2. Section 3 proves the NP-hardness of the static sub-problem, defines a number of solution approaches for it, presents the details of the proposed policies for rescheduling the dynamic repair shop, and describes our model of the aircraft failures. The computational results on the performance of different scheduling techniques and on how and when rescheduling should be done are described in Section 4. A discussion of our solution approach and results are presented in Section 5. We end with conclusion and directions for the future work in Section 6."}, {"heading": "2. Background", "text": "In this section, the formal definition of the problem is given and the relevant literature is reviewed."}, {"heading": "2.1 Problem Definition", "text": "Figure 2 is a snapshot of the problem at time 0, where circles represent aircraft. A number of flights (five are shown) and their corresponding pre- and post-flight checks are already scheduled over a long horizon. It is assumed that the total number of aircraft is constant over a long horizon. A number of aircraft (three in the diagram) are ready for the pre-flight check while others are currently in the shop awaiting repair before they can proceed to a pre-flight check. Failure is only detected during a check and we assume that a check will always correctly assess the status of an aircraft at negligible cost and that the duration of a check is incorporated in the length of the corresponding wave.\nThe goal is to assign aircraft to waves to maximize coverage while at the same time creating a feasible repair schedule. The scheduling problem is under the constraints that the repair shop has limited capacity and the aircraft are subject to breakdown. We assume that once an aircraft fails, it goes to the repair shop and waits until its repair operations are performed.\nWe use the following notation to represent the problem.\n\u2022 N is the set of aircraft. \u03bbn is the failure rate of the aircraft n \u2208 N denoting the frequency of failure per time unit. For example if the failure rate is 0.2 per day, it means that the mean time to aircraft failure is 5 days.\n\u2022 K is the set of aircraft types. Ik denotes the set of aircraft type k \u2208 K where \u03b7k aircraft are ready (i.e., not in the repair shop at time 0). Let |Ik| denote the number of aircraft of type k, |Ik| \u2212 \u03b7k aircraft of type k are then in the repair shop at time 0. \u03bb\u0304k is the mean failure rate over all aircraft of type k.\n\u2022 R is the set of repair resources (called trades). The maximum capacity of trade r \u2208 R is Cr.\n\u2022 W is the set of waves. Each wave, w \u2208 W , has a start-time, stw, and an end-time, etw. Each wave requires at most akw aircraft of type k.\n\u2022 J is the set of existing jobs in the repair shop. Each job is associated with a specific aircraft type. Mr is the set of jobs requiring trade r. Each job might require more\nthan one trade to be completed. The processing time of job j on trade r is pjr and cjr is the capacity of trade r required by job j.\nTo model the deterioration of an aircraft, each time it flies a wave its failure rate, \u03bbn, increases by \u03b3 percent, i.e., its failure rate is (1 + 0.01\u00d7 \u03b3)\u03bbn after the flight. If an aircraft fails, its failure rate after repair returns to what it was just before the failure. In the other words, as in one of the standard repair models in the maintenance literature, repair is minimal (Wang, 2002). The probability of diagnosing aircraft n as failed in pre- and post-flight checks is a function of its failure rate right before the checks denoted as fpre(\u03bbn) and fpost(\u03bbn). The probability of failure detection in pre-flight checks is smaller than the post-flight checks because an aircraft is either just released from the repair shop or has already passed a previous post-flight check successfully (Safaei et al., 2011).\nTo find the probability of failure of an aircraft in pre- and post-flight checks for a specific wave, we need to track the complete history of the aircraft. For example, if we assume that a given aircraft is repaired and assigned to the first wave, then there are three paths: the aircraft fails the pre-flight check; the aircraft passes the pre-flight check, flies the wave, and fails the post-flight check; or the aircraft passes the pre-flight check, flies the wave, and passes the post-flight check. Therefore, the availability of the aircraft for the second wave can be represented as a random variable whose expected value depends on the probability of these three different paths and the scheduling decisions to repair the failed aircraft before the second wave. Similarly the availability of the aircraft for subsequent waves depends on its entire path through the checks, repair shop, and waves. As the number of waves and aircraft increase, the size of the state space will become prohibitive. Furthermore, the repair scheduling decisions themselves impact the aircraft histories: the probability that an aircraft is available for the third wave is different depending on if it was repaired in time for the first wave or only for the second wave. The details on approximating the failure probabilities are presented in Section 3.2.1.\nAs the complexity of the problem has not been shown, we prove that it is NP-hard in Section 3.1."}, {"heading": "2.2 Literature Review", "text": "This section provides necessary background on repair shop scheduling problem and the logic-based Benders decomposition."}, {"heading": "2.2.1 Repair Shop Scheduling", "text": "Repair shops have been mainly studied as a machine-repairman problem (Haque & Armstrong, 2007; Stecke, 1992) which has a set of workers and a set of machines that are subject to failures and therefore need repair. Workers and machines respectively correspond to trades and aircraft, in our problem. As the number of workers is less than the number of machines, it is necessary to allocate the repair jobs to the workers with the goal of optimizing a given performance measure (e.g., the total expected machine downtime) over the long-term. Derman, Liberman, and Ross (1980) did the early work on solving the scheduling problem of a repair shop with a single repairman. They showed that repairing the failed machines in non-decreasing order of failure rate stochastically maximizes the\nnumber of working machines. The literature on the scheduling of a repair shop was then extended by considering multiple repairmen, preemptive and non-preemptive repair, and different failure and repair distributions. A comprehensive review of the literature on the scheduling of a repair system is provided by Iravani, Krishnamurthy, and Chao (2007).\nThe analytical models in the literature are mainly developed using Markov Decision Processes (dynamic programming) and guarantee the optimality of a given performance measure in the long-term. These models often do not consider the combinatorics of the real scheduling problems such as different repair capacity limits, different due dates, and different resource and processing requirements. Therefore, they typically result in a static dispatching-type repair policy similar to that found by Derman et al. (1980). However, in our problem, the waves have different plane requirements and the processing times and the resource requirements of the repair activities become known when they enter the repair shop. Therefore, we believe that a better performance can be achieved by dealing directly with the combinatorics and explicitly scheduling the repair shop to meet the waves. To handle the uncertain and combinatorial structure of the scheduling problems, we use a dynamic scheduling approach.\nDynamic scheduling is the methodology developed in the scheduling literature where the operational uncertainties like machine breakdowns or the unexpected arrival of new orders prevent the execution of the schedule as planned (Aytug, Lawley, McKay, Mohan, & Uzsoy, 2005; O\u2019Donovan, Uzsoy, & McKay, 1999). The dynamic scheduling problem is often viewed as a collection of linked static sub-problems. Taking this view makes the myriad of algorithms developed for the static scheduling problems applicable. The developed algorithms can deal with the combinatorics of the scheduling problems and can optimize the quality of the schedule at discrete time points, i.e., for each static sub-problem. However, as they cannot completely deal with the operational uncertainties, a real-time disruption requires modification of the schedule to either permit the execution or to improve the quality of the schedule considering the most recently revealed information. The process of modifying the previous schedule is called rescheduling (Vieira, Hermann, & Lin, 2003; Aytug et al., 2005; Bidot, Vidal, Laborie, & Beck, 2009). How to solve static sub-problems and how to connect them using rescheduling strategies are the main aspects of the dynamic scheduling research. Although we are not aware of using dynamic scheduling in a repair system, it has been successfully applied to a variety of scheduling problems including single machine (Ovacik & Uzsoy, 1994; O\u2019Donovan et al., 1999; Cowling & Johansson, 2002), parallel machines (Vieira, Hermann, & Lin, 2000; Ovacik & Uzsoy, 1995), and job shop (Sabuncuoglu & Bayiz, 2000; Liu, Ong, & Ng, 2005; Vinod & Sridharan, 2011).\nOther areas of literature with similarities to our static problem are the operational level maintenance scheduling problem, in general, and the flight and maintenance planning problem of military aircraft, specifically. The former literature addresses the problem of finding a schedule for given maintenance activities such that the sum of maintenance costs is minimized. The focus is on the operational level, determining the maintenance activities performed in each time period (Budai, Huisman, & Dekker, 2006). Starting with the early work of Wagner, Giglio, and Glaser (1964), this literature was extended through developing mathematical models and effective solution approaches for a variety of applications (Frost & Dechter, 1998; Haghani & Shafahi, 2002; Budai et al., 2006; Grigoriev, van de Klundert, & Spieksma, 2006). The latter literature studies the problem of maintenance planning and\nmission assignment of military aircraft where the goal is to decide which aircraft to fly and which one to perform maintenance on, maximizing their long-term availability. Similar to the maintenance scheduling literature, mathematical programming is the common approach to solve the problems of this literature. Kozanidis, Gavranis, and Kostarelou (2012) recently proposed a mixed integer non-linear programming model to optimize the joint flight and maintenance plan of mission aircraft.\nSafaei et al. (2010) modeled the static problem addressed here as an operational level maintenance scheduling problem using MIP. Their MIP includes an assignment problem and two network problems: the former assigns the aircraft to the waves and the latter calculates the expected number of available aircraft for the waves as well as the expected number of available workers for the repair jobs. They later extended their work by using slightly different MIP model where the time-indexed approach is used to enforce the workforce availability constraint and they verified the validity of their model by a number of instances under different combinations of workforce sizes (Safaei et al., 2011).\nThe difference between the static problem addressed in this paper and the previous works on operational maintenance scheduling is that our objective function (flight coverage) depends not only on the scheduling decisions but also on the outcomes of the preand post-flight checks. These two quite different components of the problem motivate the decomposition approach, logic-based Benders decomposition, reviewed below."}, {"heading": "2.2.2 Logic-Based Benders Decomposition", "text": "The classical Benders decomposition (Benders, 1962; Geoffrion & Graves, 1974) is a mathematical programming approach for solving large-scale mixed integer programming models. It partitions the problem into a mixed integer master problem (MP) which is a relaxation of the global model and a set of linear sub-problems (SPs). Solving a problem by classical Benders involves iteratively solving the MP to optimality and using the solution to generate the sub-problems. The linear programming dual of the SPs is then solved to derive the tightest bound on the global cost function. If this bound is greater than or equal to the current MP solution (assuming a maximization problem), the MP solution and the SP solutions constitute a globally optimal solution. Otherwise, a constraint, a Benders cut, is added to the MP to express the violated bound and another iteration is performed.\nLogic-based Benders decomposition (Hooker & Yan, 1995; Hooker & Ottosson, 2003) was developed excluding the necessity that the MP should be a mixed integer model and the SPs should be linear. Therefore, the inference duals (Hooker, 2005) of the SPs are solved rather than the linear duals to find the tightest bound on the global cost function from the original constraints and the current MP solution. Although the logic-based Benders decomposition has more flexibility in modeling the problems, there is no standard procedure to derive the Benders cuts.\nRepresenting the relaxation of SPs in the MP, and designing a strong Benders cut are of great importance in decreasing the computational effort to identify the globally feasible and optimal solution. The former results in MP solutions which are likely to satisfy the SPs, and the latter rules out a large number of MP solutions in each iteration (Hooker, 2007).\nLogic-based Benders decomposition has been shown to be effective in a wide range of problems including scheduling (Hooker, 2005, 2007; Beck, 2010), facility and vehicle\nallocation (Fazel-Zarandi & Beck, 2012), and queue design and control problems (Terekhov, Beck, & Brown, 2009)."}, {"heading": "3. Solution Approach", "text": "The main idea of our solution approach is to view the dynamic problem as linked successive static sub-problems. As noted above, this is a common approach in dynamic scheduling. This view results in a rescheduling strategy based on scheduling static sub-problems over shorter time periods. Therefore, we have two sub-goals: how to solve and how to connect the static sub-problems. In this section, we first show that the static problem is NP-hard and present different solution techniques for solving it. We then define three rescheduling strategies designed to connect the static sub-problems. Finally, we describe our approach for modeling the dynamic events, i.e., aircraft failures."}, {"heading": "3.1 The Complexity of the Static Repair Shop Problem", "text": "We establish the NP-hardness of the static repair shop problem by reduction from a single machine scheduling problem with the objective of minimizing the weighted number of tardy jobs and with a common due date, i.e., 1|dj = d| \u2211 wjUj\n1 where dj , wj , and Uj denote the due date, the weight, and the variable representing whether a job is tardy or not for job j, respectively. Note that job j is tardy if its processing is not finished at or before its due date. This problem is equivalent to a one dimensional knapsack problem with non-uniform profit which is shown to be NP-complete by reduction from the PARTITION problem (Pinedo, 2002).\nTheorem 1. The static problem is NP-hard.\nProof. We show that an instance of the single machine scheduling problem, I, with a common due date and with the objective of minimizing the weighted number of tardy jobs reduces to the static repair shop problem. In instance I, we assume that there are T jobs, the jth having a processing time tj , a weight wj , and a common due date d. Without loss of generality, we further assume that the weights, wj , are in the interval [0, 1]. The objective is to schedule the jobs such that the sum of the weights of the tardy jobs is minimized or equivalently the sum of the non-tardy job weights is maximized. From instance I, an instance of the static repair shop problem can be formulated such that there is one wave, there are T failed aircraft in the repair shop (|N | = T ), there are T aircraft types (|K| = T ), and there is one repair resource (|R| = 1) with capacity C = 1. The start-time of the wave is st1 = d, requiring all T aircraft. Each failed aircraft, j, has a different type, and corresponds to one repair job in the repair shop with the processing time pj1 = tj and resource requirement cj1 = 1 for the single resource. The probability of failure in the precheck of the wave for aircraft j is (1\u2212wj). The repaired aircraft j contributes to the flight coverage if it survives the pre-check with probability wj . Therefore, to maximize the flight coverage, the goal is to schedule the failed aircraft so that the sum of the probabilities that\n1. The notation used for describing a problem in scheduling literature is \u03b1|\u03b2|\u03b3 where \u03b1 represents the machine environment, \u03b2 describes the processing characteristics and constraints in detail, and \u03b3 denotes the objective function (Pinedo, 2002).\nthe repaired aircraft survives the pre-check, i.e., \u2211 wj is maximized. The goal is equivalent to maximizing the sum of the non-tardy job weights in instance I. As the single machine scheduling problem with the objective of the weighted number of tardy jobs and with a common due date, i.e., 1|dj = d| \u2211 wjUj , is NP-hard (Pinedo, 2002), we conclude that the static repair shop problem is also NP-hard."}, {"heading": "3.2 Scheduling Techniques", "text": "We investigate a number of approaches to solve the repair shop scheduling problem including mixed integer programming, constraint programming, logic-based Benders decomposition, a dispatch rule, and a simple hybrid approach. Each of the approaches is described in detail in this section."}, {"heading": "3.2.1 Mixed Integer Programming", "text": "Mixed integer programming (MIP) is the default solution approach for many scheduling problems (Heinz & Beck, 2012). In a MIP formulation, the constraints are represented in the form of linear equalities and/or inequalities and polyhedral theory and linear programming techniques such as relaxation and cutting planes embedded in the state-of-the-art MIP solvers are applied to solve the problem (Queyranne & Schulz, 1994; Heinz & Beck, 2012). We propose a novel mixed integer programming model where the uncertainty in the outcome of the checks is modeled as expectation. This model is different from and, as we show below in Section 4.1.2, significantly faster than those of Safaei et al. (2010, 2011). Table 1 summarizes the notation defined in Section 2.1 and defines the decision variables of the MIP model.\nIn this section, without loss of generality, we interpret W as the set of waves in the current static sub-problem and consider the start-times of the waves as due dates to finish the repair of the aircraft. Therefore, we define D = {di|i = 1, 2, ..., |W |, |W | + 1} to be an ordered set of due dates consisting of the wave start-times plus a big value, B, sorted in ascending order. More specifically, di equals to the start-time of the i-th wave, sti. Because of the limited repair capacity, it is possible that some of the failed aircraft cannot be repaired in time for any of the waves. In such a case, the due date of the repair job is assigned to d|W |+1 = B. In our model, B equals the sum of the start-time of the last wave and the maximum processing times of all the jobs over all the trades, i.e., d|W | + max\nj,r (pjr) and we\ndo not enforce the repair resource capacity after d|W |. As explained in Section 2.1, the exact calculation of the aircraft failure probability and consequently of the expected number of available aircraft is intractable since it depends on the complete aircraft histories. Therefore, we distinguish aircraft based on their type and use a recursive equation (Equation 4) to approximate the expected number of available aircraft. The details of Equation (4) are provided later in this section. For each aircraft type of k, the average failure rate, \u03bb\u0304k, is used to calculate the probability of failure during preand post-flight checks, respectively: \u03beprek = f pre(\u03bb\u0304k) and \u03be post k = f\npost(\u03bb\u0304k). Furthermore, the failure rate of each aircraft is assumed to remain constant in the scheduling horizon of the static problem and to not increase after flying a wave. Therefore, our approximation is likely to underestimate the number of actual aircraft failures.\nThe MIP model is shown in Figure 3 where Zkw, the number of aircraft of type k that are assigned to fly in wave w, is a true decision variable: we can choose to send fewer aircraft on a wave than are currently (in expectation) available. In contrast, Ekw is the expected number of aircraft of type k available for wave w and is based on the probabilistic outcomes of previous waves and the number of newly repaired aircraft (Ukw). We refer to this model as MIP and we rely on the default branch-and-bound search in the IBM ILOG CPLEX 12.3 solver, a state-of-the-art commercial MIP solver to solve it. The details of MIP model are summarized as follows:\n\u2022 The objective function (1) maximizes the number of aircraft assigned to waves. Although we have modeled the uncertain outcome of the flight checks as expectation, the objective function is not the expected wave coverage because (i) each wave has specific upper bounds on plane requirements and (ii) the maximum wave coverage for each wave is 1. If the expected number of available aircraft, Ekw, is more than the requirement, akw, for a given wave, the extra aircraft do not fly the wave and so do not contribute to the coverage. By not flying \u201cextra\u201d planes, we do not decrease the probability that they will be available for the next wave.\n\u2022 Equation (2) calculates the number of aircraft of type k whose repair due date is stw. In the other words, summing the decision variables xij where job j is an aircraft of type k and where the i-th due date corresponds to the start-time of wave w gives the\nnumber of aircraft type k leaving the repair shop right before the pre-flight check of wave w.\n\u2022 Equation (3) calculates the expected number of available aircraft of type k for the first wave.\n\u2022 Equation (4) calculates the expected number of available aircraft of type k for the other waves. The first term includes those aircraft available but not used for the previous wave, i.e., (Ek(w\u22121) \u2212 Zk(w\u22121)), and those newly arrived from the repair shop, i.e., Ukw. The second term sums over all aircraft that become available because they have completed waves since the previous wave started where Vw = {v|v \u2208W, stw\u22121 < etv \u2264 stw}.\n\u2022 Constraints (5) and (6) ensure that the number of aircraft that are assigned to fly in each wave is less than or equal to the number of aircraft required and the expected number available.\n\u2022 Constraint (7) assigns exactly one due date to each job.\n\u2022 Equation (8) calculates the end-time of the jobs.\n\u2022 Constraint (9) guarantees that the end-time of each job is less than or equal to its assigned due date.\n\u2022 Constraint (10) is a logical-and constraint enforcing the capacity limit of trade r by summing over the capacity required by the set of jobs under repair at time t. Since the jobs after the start-time of the last wave do not contribute to the coverage, the capacity constraint is enforced only until the start-time of the last wave, i.e., st|W |. The logical \u201c\u2227\u201d constraint evaluates to 1 if and only if its two component constraints both evaluate to 1 and to 0 otherwise. A logical inequality evaluates to 1 if and only if it is true and 0 otherwise. For example, if job j is under repair at time t, both logical inequalities, (stjr \u2264 t) and (t < etjr) evaluate to 1 and the logical-and constraint, therefore, evaluates to 1. To linearize this constraint, we rely on the default approaches in IBM ILOG CPLEX for handling logical constraints. These approaches translate the logical constraints into their equivalent linear counterparts by creation of new variables and constraints (CPLEX, 2011).\n\u2022 Constraints (11) to (14) define the domains of the decision variables."}, {"heading": "3.2.2 Constraint Programming", "text": "Constraint programming is a paradigm for solving combinatorial optimization problems. The success of constraint programming (CP) in solving a wide variety of scheduling problems is well established in the literature (Beck, Davenport, Davis, & Fox, 1998; Baptiste, Pape, & Nuijten, 2001). The scheduling problems are usually defined as one or several instances of the constraints satisfaction problem (CSP) (Baptiste et al., 2001). An instance of CSP can be formally described as a triple of (V,D,C) where V = {V1, V2, ..., Vn} is a set of n variables, D = {D1, D2, ..., Dn} is a set of the variable domains, Di corresponding to the possible values that Vi can take, and C = {C1, C2, ..., Cm} is a set of m constraints,\neach defined over a subset of variables. A constraint Ck = {Vi, ..., Vj} is defined on the Cartesian product of the domains of the variables in its scope Di \u00d7 ...\u00d7Dj and is satisfied if the assignment of the variables in its scope corresponds to one of the value tuples in the constraint relation (Beck, 1999). Representing the scheduling problems using CSPs results in more modeling flexibility compared to mixed integer programming models as there is no restriction on the type of decision variables and constraints.\nCP solves scheduling problems by applying three general tools of heuristic search, constraint propagation, and backtracking within a branch-and-bound search tree (Beck, 1999; Beck & Refalo, 2003). Constraint propagation, one of the key principles contributing to the success of CP, is exploited by representing the problem as a conjunction of global constraints, each of which embeds efficient inference techniques that reduce the solution space within a branch-and-bound search tree (Baptiste et al., 2001). The possibility of using two global constraints, cumulative and global cardinality, to formulate the static repair shop problem motivates the CP model shown in Figure 4.\nTo formulate the problem using CP, we use the same decision variables as in Table 1. However, instead of xij , we define Dj corresponding to the assigned due date for job j. The CP model differs from MIP in several constraints defined below.\nThe global cardinality constraint (gcc) has the syntax of gcc(card, value, base) where card, value, and base are arrays of variables, values, and variables, respectively. The gcc constraint is satisfied if value[i] is taken by card[i] elements of base. In our CP model, for each aircraft type k, Constraint (15) enforces that Ukw counts the number of times that the start-time of wave w is assigned as a due date to the jobs associated with a failed aircraft of type k.\nThe cumulative constraint has the syntax of cumulative(s, p, c, C) where s = {s1, s2, ..., sn}, p = {p1, p2, ..., pn}, and c = {c1, c2, ..., cn} are vectors of the start-time variables, the processing time values, and the amount of required resource of each job, respectively, and where C is the total resource capacity value. The cumulative constraint ensures that the total amount of resource capacity used at any time never exceeds C (Hooker, 2005).\nConstraint (17) enforces the time windows: job j on trade r cannot be started later than (Dj \u2212 pjr). Constraint (18) defines the domain of the decision variables Dj .\nWe implement this model using IBM ILOG CP Optimizer 12.3 where the default search is used. The start-time variables, stjr, are defined by IloIntervalVar objects. To implement the global constraints, we use IloDistribute class for the gcc constraint and IloPulse and IloAlwaysIn functions for the cumulative constraint. Note that, the cumulative constraint is implemented for any time point t until st|W |."}, {"heading": "3.2.3 Logic-Based Benders Decomposition", "text": "As the static problem requires making two different decisions, assigning aircraft to the waves and scheduling repair jobs for failed aircraft, a decomposition approach may be well suited. A logic-based Benders decomposition (LBBD) method can be formulated where the master problem assigns aircraft to waves to maximize wave coverage and the sub-problems create the repair schedules given the due dates derived from the master problem solution. We propose four variations: Benders-MIP and Benders-MIP-T, where the master problems are solved using MIP, the latter with a tighter sub-problem relaxation (\u201cT\u201d stands for tighter); and Benders-CP and Benders-CP-T with a constraint programming-based master problem. All models use CP for the scheduling sub-problems.\nThe Due-Date Assignment Master Problem (DAMP): MIP Model To formulate the master problem as a MIP model, we use a binary variable xij for job j and the i-th due date with the same meaning as in the global MIP model. A MIP formulation of DAMP is as follows:\nMaximize Objective (1) Subject to: (19) Constraints (2) to (7), (11), (12), (14)\u2211 j\u2208Mr cjrpjr \u2264 Cr max j\u2208Mr ( |W |+1\u2211 i=1 xijdi), \u2200r (20)\nMIP cuts (21)\nThe master problem incorporates a number of the constraints in the global MIP model. It does not represent the start-times of jobs nor does it fully represent the capacity of the trades. As is common in Benders decomposition, the master problem includes a relaxation of the sub-problems (Constraints 20) and Benders cuts (Constraints 21).\nThe Sub-problem Relaxation Defining the area of job j as the area of a rectangle with height cjr and width pjr, Constraint (20) is the relaxation of the capacity of a trade, expressing a limit on the area of jobs that can be executed. The limit is defined using the area bounded by the capacity of the trade and the time interval [0,M ] where M is the maximum due date assigned to the jobs on the trade. This relaxation is due to Hooker (2005, 2007).\nWe tighten the relaxation of sub-problems in the Benders-MIP-T approach by enforcing an analogous limit on multiple intervals: [0, stw] for each wave w. For each interval, the sum of the areas of the jobs whose assigned due date is less than or equal to the end-time of the interval must be less than or equal to the available area. This relaxation is a special\ncase of the interval relaxation due to Hooker (2005, 2007). Formally, the tighter relaxation replaces Constraint (20) with:\n\u2211 j\u2208Mr cjrpjr(( |W |+1\u2211 i=1 xijdi) \u2264 stw) \u2264 stwCr, \u2200r, \u2200w (22)\nwhere (( \u2211|W |+1\ni=1 xijdi) \u2264 stw) is a logical inequality evaluating to 1 if and only if the assigned due date to job j is less than or equal to stw.\nThe Benders Cuts Before defining the cut formally, we demonstrate the intuition with an example. Consider a due date set, D = {14, 17, 20, 35}, and, for a given trade with five jobs, the current master solution: x21 = 1, x12 = 1, x43 = 1, x14 = 1, and x15 = 1. Job 1 is assigned to the second due date, 17, job 2 has the first due date, 14, and so on. If the current solution is infeasible due to the resource capacity of the trade, then we know that at least one of the jobs must have a later due date than it has in the current master solution. We can, therefore, constrain the sum of the consecutive xij up to and including the ones currently assigned to 1 to be one less than the number of jobs. In our example, the cut would be:\n(x11 + x21) + (x12)+ (x13 + x23 + x33 + x43) + (x14) + (x15) \u2264 5\u2212 1\nThese variables represent the possible due dates less than or equal to those currently assigned for all jobs. By constraining these variables to be at most one less than the number of jobs, at least one job must be assigned a later due date.\nFormally, assume that in iteration h, the solution of the DAMP assigns a set, Q, of due dates to the jobs on trade r. Assume further that there is no feasible solution on trade r with the assignments in Q. The cut after iteration h is:\n\u2211 j\u2208Mr \u2211 i\u2208Ihjr xij \u2264 |Mr| \u2212 1, \u2200r (23)\nwhere for each job j on trade r, Ihjr = {i\u2032|i\u2032 \u2264 i, and xhij = 1} is the set of due date indices less than or equal to the due date index assigned to job j in iteration h and |Mr| is the number of jobs on trade r. The validity of this cut is proved in Section 3.2.6.\nThe Due-Date Assignment Master Problem: CP Model We also formulate the DAMP using CP. Let Dj be the variable corresponding to the due date for job j similar to the global CP model.\nMaximize Objective (1) Subject to: Constraints (3) to (6), (12), (14), (15), (18)\u2211 j\u2208Mr cjrpjr \u2264 Cr max j\u2208Mr (Dj), \u2200r (24)\nCP cuts (25)\nThe master problem modeled using CP includes several constraints of the global CP model. Constraint (24) represents the relaxation of repair capacity limit of the trades guaranteeing that the sum of processing areas for the set of jobs on the same trade does not exceed the maximum available area.\nA tighter relaxation in a CP-based DAMP replaces (24) with the following defining the Benders-CP-T approach where the logical inequality (Dj \u2264 stw) evaluates to 1 if and only if the due date of job j, Dj , is less than or equal to the start time of wave w, stw.\u2211\nj\u2208Mr\ncjrpjr(Dj \u2264 stw) \u2264 stwCr, \u2200r, \u2200w\nThe CP cut is based on the same reasoning as the MIP cuts. If the assigned set of due dates to the jobs on trade r is not a feasible solution for the SP, the cut will guarantee that in the next iteration at least one of the assigned due dates will have a greater value. Formally, the cut is: \u2228\nDj > Dhj , \u2200j \u2208Mr (26) where Dhj is the due date assigned to job j in iteration h, \u2228\nrepresents the logical-or constraints and Mr is the set of jobs on trade r.\nRepair Scheduling Sub-problem Given a set of due dates assigned to the jobs on a trade, the goal of the repair scheduling sub-problem (RSSP) is to assign start-times to the jobs to satisfy the due dates and the trade capacity. We use a CP formulation where the RSSP for each trade is modeled by the cumulative constraint.\ncumulative([stjr|j \u2208Mr], [pjr|j \u2208Mr], [cjr|j \u2208Mr], Cr), \u2200r 0 \u2264 stjr \u2264 Dhj \u2212 pjr, \u2200j, \u2200r (27)\nRecall that [stjr|j \u2208 Mr] is the tuple of the start-time variables of the jobs on trade r, Dhj is the value assigned to the due date for job j in master problem in iteration h. The parameters pjr, cjr, Cr are as defined in Table 1. Constraint (27) enforces the time windows similar to constraint (17). It is worth mentioning that in the RSSP, the due date of job j, Dhj , is a value; however, it is a decision variable, Dj , in the global CP model.\nSince CP approaches are shown to be significantly more efficient than MIP for simple scheduling problems with resource capacity constraints (Hooker & Ottosson, 2003; Hooker, 2005, 2007), we do not experiment with MIP formulations of the sub-problems.\nTo implement the master problems in Benders-MIP and Benders-MIP-T, we use IBM ILOG CPLEX 12.3 solver; while Benders-CP and Benders-CP-T master problems and the RSSP are implemented in IBM ILOG CP Optimizer 12.3. The details on the implementation of the global constraints are similar to Section 3.2.2."}, {"heading": "3.2.4 A Dispatching Heuristic", "text": "Since the static problem is NP-hard, solving it to optimality may be prohibitively expensive. We therefore investigate a heuristic approach, inspired by the Apparent Tardiness Cost (ATC) heuristic, a composite dispatching rule that is typically applied to single machine scheduling problem with the sum of weighted tardiness objective (Pinedo, 2005). The heuristic computes a ranking index for each job and sorts the jobs in ascending order of the index. The heuristic then iterates through the jobs, scheduling each job at its earliest available time. The ranking index we use is as follows:\nIj = ST (kj) exp(\u2212 FNj FCj ), \u2200j\nIf we let kj denote the type of aircraft j, then ST (kj) is the start-time of the first wave that requires an aircraft of type kj . FNj is the fraction of the total number of aircraft of type kj required by the first wave that requires kj , and FCj is the maximum proportion of the capacity needed by job j over all its required trades, as follows.\nFCj = max r\n( pjrcjr\nST (kj)Cr )\nIntuitively, the earlier the start-time of the first relevant wave, the higher proportion of aircraft required by that wave, and the lower the proportion of capacity required before the wave, then the sooner the job will be scheduled. The exponential function is used to place more weight on the start-time.\nIn preliminary experiments, three other dispatching heuristics were investigated, with the chosen heuristic performing best. The first two heuristics rank the jobs with slightly different ranking indices equal to Ij = ST (kj) \u00d7 max r (pjr)\nFNj and Ij = ST (kj) \u00d7\nmax r (pjrcjr)\nFNj ,\nrespectively. The third heuristic is a two-stage approach based on a decomposition. The first stage finds the number of each aircraft type assigned to each wave and the second stage schedules the jobs in increasing order of max\nj,r (pjrcjr) considering the values determined in\nthe first stage as upper bounds on the number of jobs required before each wave. Our preliminary experiments demonstrated that our chosen dispatching rule results in on average of 6% higher wave coverage compared to the first two heuristics and in the same coverage as the third heuristic while having the advantage of being easy to understand and implement."}, {"heading": "3.2.5 Hybrid Heuristic-Complete Approaches", "text": "A hybrid heuristic-complete approach in which the heuristic solution provides a lower bound for the maximization objective (Equation 1) may improve the performance of the complete approaches. Therefore, a simple hybrid first runs the dispatching heuristic and then uses the objective value as a starting lower bound for the complete approaches. Assume that the\nheuristic finds a solution, S, with f(S) as the number of aircraft assigned to waves. Any of the complete approaches can now be modified by adding the following constraint:\n|W |\u2211 w=1 |K|\u2211 k=1 Zkw \u2265 f(S)\nFor LBBD variations, the above constraint is added to the master problem."}, {"heading": "3.2.6 Theoretical Results", "text": "To guarantee the finite convergence of a LBBD model to a globally optimal solution, the Benders cuts must be valid and the master decision variables must have finite domains. A Benders cut is valid in a given iteration, h, if and only if (1) it excludes the current globally infeasible assignment in the master problem without (2) removing any globally optimal assignments (Chu & Xia, 2004). The former guarantees the finite convergence and the latter guarantees the optimality. As the decision variables in DAMP have a finite domain, it is sufficient to prove the satisfaction of the two conditions.\nTheorem 2. Cut (23) is valid.\nProof. For condition (1), for the sub-problem in iteration h on trade r, by definition:\u2211 j\u2208Mr \u2211 i\u2208Ihjr xij = |Mr|\nConsequently, cut (23) excludes the current assignment of master problem. For condition (2), consider a global optimal solution S that does not satisfy cut (23) as generated in iteration h. As the cut states that at least one job must have a greater due date than it had in h, to violate the cut, all jobs in S must have equal or lesser due dates than they had in iteration h. However, because the sub-problem was infeasible in iteration h, any sub-problem with only equal or lesser due dates must also be infeasible as the available capacity on the trade is the same or less. Therefore, S must be infeasible and we contradict the assumption that S is globally optimal.\nTherefore, the cut is valid.\nAn analogous argument holds for cut (26)."}, {"heading": "3.3 Rescheduling Strategies", "text": "The dynamic repair shop problem over the long horizon can be viewed as static scheduling sub-problems over successive time periods. Let\u2019s assume that we start repairing the failed aircraft and assigning them to the waves based on the computed schedule at time 0. A wave might start while a repair is under way in the repair shop. If some aircraft fails the pre-flight check, it goes to the repair shop. Each failed aircraft requires a set of independent repair activities with known processing times and resource requirements. At the repair shop, some of the previously failed aircraft might be already repaired, some might be under repair, and others might be awaiting repair. Once the failed aircraft enters the repair shop, we have a new static repair scheduling sub-problem where the set of existing jobs (J), the number\nof aircraft not in the repair shop for each aircraft type (\u03b7k), and the failure rates of the aircraft (\u03bbn) are updated. The set of existing jobs includes the recently failed aircraft and the previously failed aircraft whose repairs are still under way or are not yet started. The new static sub-problem has an added constraint, namely that the repairs currently under way cannot be disrupted.\nWe connect the static sub-problems using three different policies denoted as Pij where i and j define the length of scheduling horizon and the frequency of rescheduling in number of waves, respectively. In all three policies, we schedule the repair activities, observe the aircraft failures, and respond to failures by rescheduling the repair activities.\nThe three policies discussed here are as follows:\n\u2022 P11: In Figure 5, we show that P11 schedules one wave at a time (i = 1) and reschedules after each wave (j = 1). P11 is a myopic policy aiming at providing the next first wave with the highest possible coverage.\n\u2022 P31: In contrast to P11, for P31 (Figure 5), the scheduling horizon is three waves but rescheduling is still done after each wave. P31 with a longer scheduling horizon than P11 trades-off the coverage among the next three waves. It is worth mentioning that we have chosen three as the length of the scheduling horizon because three waves are usually scheduled daily based on the real data (Safaei et al., 2011).\n\u2022 P33: This policy has a scheduling horizon with a length of three waves and reschedules after every third wave (Figure 5). P33 might trade-off the lower coverage of the next first wave for higher coverages of the second and the third waves; however, it has a lower frequency of rescheduling."}, {"heading": "3.4 Modeling the Aircraft Failures", "text": "To model the dynamic events, we simulate the aircraft failures in pre- and post-flight checks. Every aircraft either passes or fails each check. If the aircraft fails, a new set of repair activities with known processing times and resource requirements is added to the repair shop. If the aircraft passes, it flies the wave if required. As mentioned in Section 2.1, after repair the failure rate of the aircraft returns to what it was before the failure and it increases by \u03b3 percent each time it flies a wave due to deterioration. If \u03bbn is the initial failure rate of the aircraft n \u2208 N , its failure rate after flying w waves without failure will be \u03bbn(1 + 0.01\u00d7 \u03b3)w."}, {"heading": "4. Computational Experiments", "text": "In this section, we present two separate empirical studies. The first study compares the scheduling techniques experimentally and presents insights into each algorithm\u2019s performance through a deeper analysis of the results. The second study investigates the impact of using different scheduling techniques and rescheduling policies on the observed wave coverage."}, {"heading": "4.1 Experimental Results on Scheduling Techniques", "text": "This sub-section describes the experiment comparing different solution techniques for scheduling the static repair shop."}, {"heading": "4.1.1 Experimental Setup", "text": "The problem instances have 10 to 30 aircraft (in steps of 1), 3 or 4 trades, and 3 or 4 waves. Five instances for each combination of parameters are generated, resulting in 420 instances (21 total aircraft counts by 2 trades counts by 2 waves counts by 5 instances).\nAircraft : The number of aircraft types is equal to |N |5 , where |N | is the number of aircraft. The aircraft are randomly assigned to different types with uniform probability. The number of aircraft of type k is |Ik|. The failure rate for each aircraft is randomly chosen from the uniform distribution [0, 0.5]. The failure rate for aircraft of type k, \u03bb\u0304k, is the mean failure rate over all aircraft of type k. The functions used to represent aircraft n probability of failures in pre- and post-flight checks, respectively, are fpre(\u03bbn) = (1\u2212e\u2212\u03bbn) and fpost(\u03bbn) = (1\u2212e\u22123\u03bbn). It is worth mentioning that the conditions of a reliability function in the extreme values of failure rates hold true for the functions used. If the failure rate goes to 0, the probability of failure equals 0, and if the failure rate goes to \u221e, the probability of failure equals 1.\nWaves: The plane requirement of each aircraft type for each wave is randomly generated from the integer uniform distribution [1, |Ik|]. The length of each wave is drawn with uniform\nprobability from [3, 5]. To make an instance loose enough to permit feasible solutions yet tight enough to be challenging, a lower bound on the length of the scheduling horizon (H) is needed. The sum of the processing areas of the jobs in each trade, r, divided by the trade capacity is denoted by Sr. LB = max\nr (Sr) is a lower bound on the time required to\nschedule all jobs and we use H = 1.2\u00d7 LB. The end-time for each wave, etw, is generated as et|W | = H \u2212 rand[0, 3] for the final wave, |W |, and etw = stw+1\u2212 rand[0, 3] for w < |W |. Trades: The capacity limit for each trade is set at Cr = 10.\nRepair Jobs: Eighty percent of the aircraft are in the repair shop at the beginning, resulting in |J | = 0.8|N | repair jobs. The jobs are randomly assigned to the trades with replacement such that the number of jobs per trade is equal to |J |/2. Each job requires at least one trade and some require more than one trade. The capacity of trade r used by job j, cjr, is drawn from [1, 10] while the processing time, pjr, is drawn from [r, 10r]: jobs on trades with lower indices have shorter processing times than those on trades with higher indices.\nThough our problem instances are generated randomly, the setting of our experiment includes three numerical examples of Safaei et al. (2011) which are based on the real data. Furthermore, our setting consists of more instances and results in problem instances which are one and a half times bigger than the examples used in the literature (Safaei et al., 2011) where the number of aircraft is 10, 15, or 20; the number of waves is 3 or 4; and the number of trades and aircraft types is equal to 3 and 2.\nAll experiments were run with a 7200-second time limit on an AMD 270 CPU with 1 MB cache per core, 4 GB of main memory, running Red Hat Enterprise Linux 4."}, {"heading": "4.1.2 Experimental Results", "text": "Figure 6 shows scatter-plots of run-times of the six complete approaches. Both axes are log-scale, and the points below the line y = x indicate a lower run-time for the algorithm on the y-axis. The numbers in the boxes indicate the number of points below or above the line. Run-times are counted as equal if they differ less than 10%.\nThe graphs indicate a benefit for MIP over CP, for Benders-CP over MIP, for BendersMIP over Benders-CP and MIP, for Benders-MIP-T over Benders-MIP, and for BendersCP-T over Benders-CP. Table 2 presents further data, sorted in descending percentage of problems solved to optimality, for all algorithms. The changes in the results compared to the previous work (Aramon Bajestani & Beck, 2011b) are due to improved scheduling models, different solvers, and different test problems. The scheduling algorithms are enhanced by using a smaller value for B, the resource capacity constraint is enforced in a shorter interval, i.e., [0, st|W |], and more efficient formulations for Constraints (5), (6), and (20) are used.\nThe mean run-time of the MIP model given by Safaei et al. (2011) over eight scenarios with 10 aircraft and 3 waves is 294.75 seconds. However, our proposed MIP model has the run-time of 2.64 seconds on average over ten of the instances with the same number of aircraft and waves, indicating that it is significantly faster than Safaei et al.\u2019s model.\nMIP vs. CP The MIP approach has a clear superiority over the CP, achieving a lower run-time on 89% of the problem instances. The CP model outperforms the MIP only on 5% of the instances where it can solve to optimality within the time limit. A further investigation of the results shows that the mean quality of CP solution is 0.27% from the\nbest found solution across all the algorithms. Therefore, the poor performance of CP is due to its weakness in proving the optimality.\nBenders-CP vs. MIP The Benders-CP approach does better than MIP in terms of runtime on 52% of the instances while performing worse on 40%. However, Table 2 favors MIP in terms of the overall performance, smaller mean run-time, mainly because more instances are solved to optimality within the time limit.\nBenders-MIP vs. Benders-CP The Benders-MIP approach achieves a better runtime than Benders-CP on 88% of the test problems, performing worse on about 8%. The branching heuristics for Benders-CP often lead to an initial feasible master solution with tighter due dates than the initial master solution in Benders-MIP. The tighter, globally infeasible initial solution means that the CP-based master problem model requires more iterations to find a globally feasible solution.\nBenders-MIP vs. MIP The Benders-MIP approach achieves a better run-time than MIP on 90% of the test problems and a worse run-time on 8%, achieving a lower mean run-time and solving a higher proportion of the problem instances. When the time horizon is short, the MIP approach is faster, however, with longer horizons and more jobs, the number of constraints and variables grows, substantially reducing its performance.\nBenders-MIP-T vs. Benders-MIP The tighter relaxation in Benders-MIP-T slightly speeds up LBBD: Benders-MIP-T has a better run-time than Benders-MIP on 55% of problems instances and worse on 39%. The mean run-time decreases by 6% and the tighter relaxation solves one more instance to optimality. Tightening the relaxation of sub-problems increases the mean number of iterations in spite of our expectation. A closer look to the results shows that the mean number of iterations of the instances solved to optimality by both approaches (97.38% of the instances) decreases: 39.15 and 41.24 for Benders-MIP-T and Benders-MIP, respectively. However, the mean number of iterations of the instances timed out by both approaches (1.9% of the instances) increases from 1051.38 for BendersMIP to 1259.88 for Benders-MIP-T. Therefore, the increase in the number of iterations results from the timed-out instances which does not support that the tighter relaxation requires more iterations to optimality.\nFurthermore, the percentage of time solving the master problem decreases compared to Benders-MIP, while the sub-problem percentage run-time increases. This latter observation is because the sub-problems for Benders-MIP that can be quickly proved insoluble by the initial propagation of CP sub-problem model, violate the tighter relaxation in the BendersMIP-T master problem. Therefore, in the tighter model, the sub-problem solver is not called on these \u201ceasy\u201d sub-problems, increasing the percentage run-time spend on sub-problems.\nBenders-CP-T vs. Benders-CP The tighter relaxation in CP-based master problem results in a slightly lower mean run-time; however, as shown in Figure 6, their performance comparison is more even.\nIncomplete and Hybrid Approaches The dispatching heuristic is fast, finding a feasible solution to all problems. However, it finds (but, of course, does not prove) an optimal solution in only 9.76% of the instances and Benders-MIP-T finds and proves optimality for\nthese instances in 0.99 seconds on average. It seems that the heuristic can find the optimal solution only when the problem instance is relatively easy. The mean quality of the heuristic solution is 16% from optimal. In industries with expensive assets, such a reduction in solution quality can translate to costly under-use of a valuable resource (e.g., a fighter aircraft costs in the vicinity of 100 million dollars). However, finding a feasible solution almost instantaneously for large problem instances makes the heuristic approach compelling in situations where the long run-time might delay carrying out the waves. For example, if a wave starts within a very short time, flying the wave with lower coverage (achieved by the dispatching heuristic) is better than not carrying it out because of the long solving time of the complete approaches.\nTo evaluate the effect of combining the dispatching heuristic with the complete approaches, we examine using the hybrid heuristic-complete approach. A smaller feasible set is the direct consequence of defining a bound on the cost function. As the MIP model searches the feasible set, while LBBD methods explore the infeasible space, one intuition is that the MIP model should benefit more from using the heuristic solution. However, solving the master problem in LBBD requires searching in a relaxed feasible space and therefore the heuristic starting solution may also speed solving.\nTable 2 shows a very marginal benefit for bounding the Benders-MIP-T approaches with the dispatching heuristic solution. Bootstrap paired-t tests (Cohen, 1995) also indicate that there is no significant difference in mean run-time at p \u2264 0.01 for either hybrid.\nScalability Figure 7 shows our results as the number of aircraft per wave increases. We aggregate results by truncating |N ||W | and using the instances with three waves and both three and four trades. Note that each point represents 30 problem instances except x = 3 which has only 20 problems instances. We omitted x = 10 as we only have 10 problem instances for that point. The y-axis is log-scale.\nThe results show that the LBBD variations outperform the other techniques across all ratios.\nSummary The following observations on the performance of scheduling techniques are supported by this empirical study.\n\u2022 The LBBD approach combining mixed integer programming and constraint programming outperforms the mixed integer programming model. The mean run-time of Benders-MIP is almost 4 times lower than MIP. Furthermore, defining the time ratio for a given instance as the MIP run-time divided by Benders-MIP run-time, the Benders-MIP is almost 32 times faster than MIP, on average, with a geometric mean time ratio of 31.56. The time ratios range is [0.01, 94132.67] with a median of 38.32.\n\u2022 A tighter relaxation slightly speeds up LBBD. Benders-MIP-T and Benders-CP-T, both, have a run-time about 1.2 times faster than Benders-MIP and Benders-CP, respectively.\n\u2022 A dispatching heuristic can provide the optimal solution for the easy problem instances. However, the mean percent relative error of heuristic is almost 16% overall, indicating that the dispatching rule by itself is not effective enough for industries with high equipment cost.\n\u2022 The simple hybridization of the complete approaches with the dispatching heuristic does not result in a statistically significant difference in run-time."}, {"heading": "4.2 Experimental Results on Rescheduling Strategies", "text": "This sub-section describes experiment investigating the impact of applying different scheduling techniques and rescheduling policies in a dynamic repair shop."}, {"heading": "4.2.1 Experimental Setup", "text": "For our problem instances, the number of aircraft, the number of trades, and the total number of waves are set to {10, 15, 20, 25, 30}, {4}, and {30} respectively. Each combination has 5 instances for a total of 25 instances. Each instance is simulated 20 times. The parameters of the problem instances are generated as in Section 4.1 with the following modifications:\nAircraft : The failure rate of an aircraft is increased by \u03b3 = 5 percent each time it is used.\nRepair Jobs: Repair jobs that entered repair shop after time 0 are randomly assigned to the trades. The probability of assigning a job to each trade is considered as 0.5.\nWaves: The start-time of each wave is generated as st1 = rand[H3 , H 2 ] for the first wave, and stw = etw\u22121 + rand(0, 40) for 1 < w \u2264 30. As mentioned earlier the total number of waves is 30. The value of H is calculated as in Section 4.1.\nDynamic events: To simulate an aircraft failure, we generate a random value from the uniform distribution [0, 1] for each aircraft at each check. If the random value is less than the aircraft\u2019s probability of failure, the aircraft fails; otherwise, it passes. The aircraft\u2019s probability of failure in pre- and post-flight checks are calculated using (1 \u2212 e\u2212\u03bbn) and (1 \u2212 e\u22123\u03bbn), respectively. Recall that, \u03bbn is the failure rate of aircraft, n \u2208 N , which\nincreases by \u03b3 = 5 percent each time the aircraft flies a wave. Note that passing the pre-flight check of a wave does not necessarily mean that the aircraft flies the wave. If the number of available aircraft is more than the requirements, the aircraft that fly are randomly selected from those that passed the pre-flight check to meet the requirements. Our latter assumption implies that all aircraft ready at the beginning of a wave are checked regardless of the wave requirements. Since we have assumed that the pre- and post-flight checks have negligible cost, our assumption is reasonable to discover the potential aircraft failures sooner which is likely to increase their availability for the subsequent waves.\nWe experiment with three techniques including MIP, Benders-MIP-T, and the dispatching rule discussed in Section 3.2. The time-limit to schedule the repair activities at each decision time point is 600 seconds. We execute the best feasible schedule found before the time-limit if an algorithm times out. In the case that Benders-MIP-T times out, the schedule created by the dispatching heuristic is executed as Benders-MIP-T does not create a feasible schedule when it times-out.\nAs in the static problem, the scheduling uses IBM ILOG CPLEX 12.3 and IBM ILOG CP Optimizer 12.3. The simulation is implemented in C++."}, {"heading": "4.2.2 Experimental Results", "text": "In this section, we discuss our results to compare the performance of different scheduling and rescheduling techniques on the availability of the aircraft in the long run. We further investigate the effect of modeling the aircraft failures using the expected coverage.\nFigures 8, 9, and 10 illustrate the mean observed coverage up to flight w \u2208 {1, 2, ..., 28} for different scheduling and rescheduling techniques. Denoting \u03bdwpl as the coverage of flight w in the l-th simulation of instance p for a given policy, Owpl = Pw i=1 \u03bdipl w represents the mean observed coverage up to flight w in instance p and in simulation l. The mean observed\ncoverage up to flight w, shown in the figures, is calculated as Ow = PP p=1 PL l=1Owpl\nPL , where P and L are the number of instances and simulations, respectively. Table 3 shows the mean observed coverage up to flight 28, i.e., O28 and the variance of the observed coverage up to flight 28 for all scheduling techniques and rescheduling policies. As illustrated, BendersMIP-T using P31 achieves at least a 10% higher mean coverage than any other combinations of the scheduling and rescheduling techniques and has the lowest variance.\nThe impact of the scheduling algorithms A complete technique is anticipated to achieve higher flight coverage because it takes the expected probabilistic information into\n0\n0.1\n0.2\n0.3\n0.4\n0.5\n0.6\n0.7\n0.8\n0.9\n1\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28\nM ea\nn O\nbs er\nve d\nC ov\ner ag\ne\nUp to Flight\nBenders-MIP-T: P31 Benders-MIP-T: P11 Benders-MIP-T: P33\nFigure 8: Mean observed coverage for three different policies using BendersMIP-T.\naccount when creating a repair schedule, while the dispatching heuristic does not have this property. As shown in Table 3, Benders-MIP-T as a complete technique results in higher mean observed coverage over all policies when compared to the dispatching heuristic. However, MIP, incorporating the mean of known information on uncertainty into scheduling\nthe repair activities, results in flights with lower coverage than the dispatching heuristic over two of the rescheduling policies, P11 and P33. To understand the MIP performance, we make two conjectures.\nOur first conjecture is that the poor performance of MIP algorithm is because it frequently times out on most of the static sub-problems and the best found feasible solution or the dispatching heuristic is then used to create the repair schedule. However, our results do not support the conjecture. MIP algorithm only times out on 13% of the scheduling subproblems and a feasible solution is found in each, implying that the dispatching heuristic is never used to find a repair schedule.\nOur second conjecture is that the low coverage achieved by MIP can be attributed to its different way of scheduling the repair activities compared to the other two scheduling techniques. A deeper look into the schedules of the static sub-problems shows that the dispatching heuristic and Benders-MIP-T schedule the repair activities at the earliest possible time; however, MIP usually does not. Repairing the aircraft earlier makes more aircraft available which intuitively increases the coverage in the long run, even though the number of pre-flight checks that aircraft go through increases in expectation. The quick adjustment of the schedule makes some of the failed planes again available before the start-time of the next flight. To investigate the impact of making the aircraft available earlier using a given scheduling technique, we define the mean percentage of available aircraft for the first flight\nas \u03c1(Pij) = PP p=1 PL l=1 PS k=1 \u03c1kpl\nPLS where \u03c1kpl and S denote the percentage of aircraft available at the beginning of the first flight of the k-th static sub-problem in the l-th simulation of instance p and the number of static sub-problems in Pij policy, respectively. For example, in P31 policy for a given p and l, the first static sub-problem includes flights 1, 2, and 3. Then, \u03c11pl is the number of aircraft available for flight 1 divided by the total number of aircraft. The second static sub-problem schedules for flights 2, 3, and 4. Therefore, \u03c12pl is equal to the number of aircraft available for flight 2 divided by the total number of aircraft. We follow the same procedure to find \u03c1kpl for all 28 static sub-problems in P31 policy. We can find \u03c1(P11) and \u03c1(P33) using the same argument considering that the number of static sub-problems are 30 and 10, respectively.\nComparing any pair of the scheduling and the rescheduling techniques in Table 3, there is a positive relationship between making the aircraft available earlier and the wave coverage in the long term which supports our conjecture: if the mean percentage of available aircraft for the first flight (\u03c1) increases, the mean observed coverage in the long rum (O28) also increases.\nThe impact of rescheduling policies As illustrated in Figures 8 and 9, the P11 policy with either Benders-MIP-T or MIP in the short-term (i.e., for the first three flights) outperforms the other two policies. However, the P31 policy then leads to consistently higher coverage because it schedules over a longer horizon and adjusts the schedule as soon as aircraft failures occur. Although P31 with the dispatching heuristic also responds quickly to the aircraft failures, it does not incorporate the length of the scheduling horizon into the ranking index for repair activities and always repairs the aircraft for the earliest possible time, resulting in flights with the same coverage as P11.\nFigure 11 displays the cumulative percentage of the flights with a coverage less than or equal to \u03c9 for Benders-MIP-T, the dispatching heuristic and MIP where \u03c9 denotes the\nvalues on the x-axis. The best performing approach will have fewer flights with a low coverage and more flights with a high coverage. Therefore, its curve will be closer to the lower right-hand corner. As illustrated, Benders-MIP-T using P31 performs better than any other combination. The P31 rescheduling policy is computationally more expensive than the other two policies, its run-time per one static sub-problem, however, is small compared to the length of scheduling horizon being usually one day in the real applications (Safaei et al., 2011). The P31 policy using Benders-MIP-T has a run-time of on average 67 seconds per one static sub-problem and of less than 249 seconds on 90% of static sub-problems.\nIn summary, our analysis of the results identifies the Benders-MIP-T with P31 (BendersMIP-T:P31) as the best combination of the scheduling and the rescheduling techniques providing the flights with a higher mean coverage over the long term. Furthermore, it has the lowest variance for the observed coverage compared to the other scheduling and rescheduling techniques.\nThe impact of modeling the uncertainty in expectation Because of the random aircraft failures, the coverage achieved by any scheduling algorithm is a random variable. The ultimate goal is to construct a repair schedule which is optimal for the specific realization of the uncertainty that actually occurs. However, since the complete information on the aircraft failures is not known and the future uncertainty is dependent on the previous repair decisions, it is impossible to find a repair schedule which is ideal under any realization of uncertainty. As discussed earlier, we have modeled the aircraft failures using the expected value to find the optimal repair schedule. Since treating the uncertainty in the expectation form may be far from optimal for the actual realization of uncertainty, we perform a sensitivity analysis on the failure rates of the aircraft to investigate how the optimal repair schedule by Benders-MIP-T:P31 is hedged against various uncertain situations.\nUsing the same problem instances as in Section 4.2.1, two other experiments are set up where the failure rate of each aircraft (\u03bbn) is increased to \u03bbn+0.05 and \u03bbn+0.1. Our results show that while the mean observed coverage up to flight 28 decreases to 0.69 and 0.62, the variance of observed coverage does not change, indicating that modeling the uncertainty using the expected probabilistic information is a reasonable approach.\nTo find a possible upper bound (tighter than 1) on the mean observed coverage up to flight w under any scheduling algorithm, we define a policy called \u201cRelaxed\u201d which relaxes the repair capacity limit and repairs any failed aircraft after its maximum processing times over all trades. Although the Relaxed policy makes the aircraft available for the waves earlier than any other repair scheduling policy, we cannot guarantee that it results in the upper bound on the observed coverage unless all waves have the same requirements. The optimal decision might be to trade off the immediate low coverage for future higher coverage when the plane requirements for the waves are different. Applying the Relaxed scheduling policy on the same instances as in Section 4.2.1, the mean observed coverage up to flight 28, i.e. Ow, is 24% higher than the best identified algorithm, Benders-MIP-T:P31. More specifically, the Relaxed policy results in a mean coverage of 0.95 with the variance of 0.002.\nThe impact of longer scheduling horizon vs. more frequent rescheduling The P31 policy changes the repair schedule after each flight and trades-off the coverage among three consecutive flights by scheduling over a longer horizon. In contrast, the P11 policy schedules for one flight and reacts after each flight while the P33 policy reasons over a longer term without a quick response to the dynamic events. As already shown in Figures 8 and 9, the P31 policy with any of the complete techniques results in a higher mean coverage. The P11 policy outperforms the P33 for early waves, but the P33 provides the later waves with higher coverage.\nThe superiority of policy P31 indicates that both features of quick response to the dynamic events and long-term reasoning contribute to the overall performance. The contribution of each feature is significantly dependent on several parameters such as the aircraft failure rates, the plane requirements, and the repair capacity. When the failure rate is high, the probability of aircraft being diagnosed as failed in pre- and post- flight checks is higher. Therefore, the arrival rate of the aircraft to the repair shop is higher and the previously constructed schedule is more likely not to be executed as is. In such a system, frequent rescheduling is more likely to increase the coverage. When the plane requirements of the waves are widely varying and the repair capacity limit is tight, trading-off the coverage among the flights through scheduling over a longer horizon significantly contributes to the availability of the aircraft in the long term.\nSummary The following observations on how and when the scheduling and rescheduling should be done are supported by the second empirical study:\n\u2022 Solving the dynamic repair shop problem using the Benders-MIP-T scheduling technique and the P31 rescheduling policy results into an observed coverage with higher mean and lower variance than any other combination tested.\n\u2022 There is a positive relationship between making the failed aircraft available as early as possible and achieving a higher coverage in the long term.\n\u2022 Since the variance of the P31 policy with the Benders-MIP-T is not sensitive to the small changes in the aircraft failures, modeling the uncertainty with respect to the mean is a reasonable approach to balance against different uncertain scenarios."}, {"heading": "5. Discussion", "text": "The experimental results demonstrate that incorporating both probabilistic and execution time reasoning into the schedule of repair activities results in a better system performance. We showed that the decomposition technique, LBBD, and the rescheduling policy P31 result in a 10% higher mean observed coverage in the long term, increasing the utilization of the valuable resources. The decomposition technique considers the mean of known probabilistic information about uncertainty over a longer scheduling horizon and repairs the failed aircraft at the earliest time. The P31 rescheduling policy takes advantage of up-to-date information more frequently. It is also shown that the variance of the coverage does not increase as the aircraft failures increase, supporting the core idea of our solution approach: the dynamic repair shop problem is viewed as a collection of static sub-problems where the uncertainty on aircraft failures is treated as expectation.\nOptimizing with respect to the mean and considering a specific class of scheduling problems are limitations of our solution approach. We address each in detail below and discuss ideas to deal with them.\nModeling the uncertainty Optimizing with respect to the expected coverage can have unfavorable consequences: the constructed repair schedule may have a remarkably poor performance for particular realizations of uncertainty that might happen in actuality (Birge & Louveaux, 1997). There are a number of other possible approaches for solving the dynamic problem. We briefly discuss each method below.\nLeaving some availability slack on repair resources to make the schedule more robust and flexible (Branke & Mattfeld, 2002, 2005; Davenport, Gefflot, & Beck, 2001) is the first approach. For example, Branke and Mattfeld (2002, 2005) propose an anticipatory scheduling algorithm to predict the future job arrivals in a dynamic scheduling problem. A secondary objective, called flexibility, is included within each static sub-problem to penalize the early idleness of the machines. They experimentally show that this approach improves the system performance. Their conclusion is consistent with our observation in Section 4.2.2 on the positive relationship between repairing the aircraft earlier and achieving a higher coverage. It would be therefore interesting to adjust the MIP model such that a flexibility term is added in the objective function to quantify the value of making the repair resources available as early as possible. However, it appears that none of the existing work on such slack-based techniques uses analytical reasoning to decide the amount of slack or level of penalization of early slack that should be used for different levels of stochasticity.\nModeling each static sub-problem as a two-stage stochastic programming is the second approach (Birge & Louveaux, 1997). The first stage decision corresponds to constructing the repair schedule and occurs before aircraft failures in pre- and post-flight checks. The second stage decision, which includes the allocation of aircraft to flights, occurs after the pre-flight checks. One approach is to define Zskw as the number of aircraft of type k assigned to fly in wave w under scenario s. Each scenario s represents a possible realization of aircraft failures\nin the horizon of the static sub-problem with probability p(s). Therefore, the objective function (Equation 1) can be written as \u2211 s p(s) \u2211 k \u2211 w Z s kw. The main modeling challenge is then to calculate the probability of each scenario. As already explained in Section 2.1, the uncertainty in our problem is not exogenous information and is dependent on the first-stage decisions which is hard to represent it in a closed and tractable form. Computationally, two-stage stochastic programming models are substantially more challenging than most discrete optimization problems (Dyer & Stougie, 2003) and therefore the ability to solve such models of our problem to optimality is doubtful.\nThe third approach is to use multi-stage dynamic programming for solving the dynamic repair shop problem (Iravani et al., 2007). The goal is to construct a repair schedule at each decision epoch, marked by the arrival of newly failed aircraft to the repair shop, such that the coverage is maximized over the long term. Using the dynamic programming framework, the state of the repair shop at each decision time point is a tuple of the aircraft failure rates, the aircraft processing times, and the aircraft resource requirements. The decision or action is to assign start-times to the failed aircraft in the repair shop. There are several challenges in modeling the problem as a classical dynamic program. First, the expected wave coverage as a result of the current state and the action taken cannot be represented in a closed form expression because of the combinatorics involved in the scheduling problem. Second, the probabilities with which the repair shop transitions to a new state at the next decision epoch as a result of the current state, the action taken, and the revealed uncertainty on the aircraft failures are not known and are hard to calculate mainly, again, due to the combinatorics of the scheduling decisions and the fact that the processing times and the resource requirements of the repair operations become known upon aircraft failure. The challenges indicate that the analytical tools of the classical dynamic programming methodology cannot be used in modeling our problem. However, AI techniques which have a broader scope of applicability such as machine learning (Sutton & Barto, 1998), online stochastic combinatorial optimization (Van Hentenryck & Bent, 2006), and hindsight optimization (Burns, Benton, Ruml, Yoon, & Do, 2012) can be investigated as potential approaches in future work.\nExtending the scheduling problem Although our results are demonstrated for a specific class of scheduling problems where the only constraint is the repair capacity limit, our solution approach can be adapted for more complex scheduling problems. More specifically, the proposed MIP and CP algorithms for the static sub-problem can be easily extended to handle other types of scheduling constraints such as precedence constraints. However, modeling the problem via the decomposition approach would require additional effort. The existence of the precedence constraints among the repair activities of a failed aircraft makes the scheduling of different repair resources dependent. Therefore, a separate RSSP for each repair resource cannot be defined. One possible idea is to represent the scheduling problem as a single sub-problem where appropriate relaxation and Benders cut can be developed.\nTaking another perspective, we decomposed the problem into stochastic long-term planning and deterministic short-term scheduling problems in DAMP and RSSP, respectively. In the long-term plan, we deal with the uncertainty using the known information on the probability of aircraft failures to trade-off the coverage between the flights. In the short-\nterm schedule, we construct a feasible repair schedule to achieve the coverage as decided in the long-term plan. We then designed different rescheduling policies to investigate how the information revealed over time can be effectively used to adjust the repair schedule and change the long-term plan. We conclude that changing the long-term plan based on shortterm information which cannot be completely incorporated in the long-term plan from the beginning significantly increases the utilization of the airplanes.\nA typical hierarchical optimization approach does not deal with the interdependency between different levels of decision makings. However a communication technique as designed in this paper, capable of utilizing the short-term deterministic scheduling in the long-term stochastic planning is more likely to lead to higher system performance. In the problem addressed here, the assignment of the aircraft to the flights and the scheduling of the repair activities in the repair shop represent the long-term and the short-term reasoning, respectively. As a wide range of operational decisions can be viewed as integrated optimization problems, the pattern of the algorithms designed here might be applicable. Combining maintenance or inventory planning with job production scheduling is an example of the integrated operational problem where at the higher level of decision-making, the maintenance or inventory policy is determined whereas at the lower level, the jobs are scheduled (Terekhov, Dog\u0306ru, O\u0308zen, & Beck, 2012; Aramon Bajestani, 2013). If the maintenance or inventory policy leads to an infeasible scheduling problem at the lower level, then the higher level needs to be informed with this information so that the inventory or maintenance decisions are adjusted. Therefore, the overall approach demonstrated here has applications to other problems typically solved with a hierarchical optimization approach."}, {"heading": "6. Conclusion", "text": "In this paper, we address the problem of scheduling a dynamic repair shop in the context of aircraft fleet management. The goal is to maximize the flight coverage over a longterm by considering the repair capacity and the aircraft failures. The number of failed aircraft dynamically changes because of aircraft breakdowns. Our proposed solution solves the dynamic problem as successive static scheduling problems over shorter time periods. Several scheduling algorithms and different rescheduling policies are proposed to schedule the repair activities online with dynamic reaction to the aircraft failures. The length of the scheduling horizon and the frequency of rescheduling are the features defining our three policies.\nThe computational results show that an optimization approach using logic-based Benders decomposition, scheduling over a longer horizon, incorporating the mean of known information on aircraft failures, and adjusting the repair schedule as soon as new jobs enter the repair shop yield higher mean coverage and is a reasonable approach to balance against different uncertain scenarios.\nDeveloping richer solution approaches to better handle the uncertainty is a challenging and interesting topic to pursue in future work. However, within our solution technique, establishing a formal framework to exactly determine how long into the future we should plan ahead and how quickly we should change our schedule based on the new information is also a very interesting direction for the future work. The answer of these two questions seems to be highly dependent on the arrival rate of the new information and the impact of\nthe new information on the overall system performance. How to quantify these two values can be the starting point to provide solid responses to these two questions."}, {"heading": "Acknowledgments", "text": "This research was supported in part by the Natural Sciences and Engineering Research Council of Canada (NSERC) and the consortium members of Centre for Maintenance Optimization & Reliability Engineering (C-MORE). Thanks to Nima Safaei and Dragan Banjevic for introducing the problem to us and subsequent discussions. This paper is a combined and extended version of a conference paper (Aramon Bajestani & Beck, 2011b) and a workshop paper (Aramon Bajestani & Beck, 2011a) that have already appeared."}], "references": [{"title": "Integrating Maintenance Planning and Production Scheduling: Making Operational Decisions with a Strategic Perspective", "author": ["M. Aramon Bajestani"], "venue": "Ph.D. thesis, Department of Mechanical & Industrial Engineering,", "citeRegEx": "Bajestani,? \\Q2013\\E", "shortCiteRegEx": "Bajestani", "year": 2013}, {"title": "Scheduling a dynamic aircraft repair shop", "author": ["M. Aramon Bajestani", "J.C. Beck"], "venue": "In Proceedings of the ICAPS2011 Workshop on Scheduling and Planning Applications", "citeRegEx": "Bajestani and Beck,? \\Q2011\\E", "shortCiteRegEx": "Bajestani and Beck", "year": 2011}, {"title": "Scheduling an aircraft repair shop", "author": ["M. Aramon Bajestani", "J.C. Beck"], "venue": "In Proceedings of the Twenty-First International Conference on Automated Planning and Scheduling", "citeRegEx": "Bajestani and Beck,? \\Q2011\\E", "shortCiteRegEx": "Bajestani and Beck", "year": 2011}, {"title": "Executing production schedules in the face of uncertainties: A review and future directions", "author": ["H. Aytug", "M. Lawley", "K. McKay", "S. Mohan", "R. Uzsoy"], "venue": "European Journal of Operational Research,", "citeRegEx": "Aytug et al\\.,? \\Q2005\\E", "shortCiteRegEx": "Aytug et al\\.", "year": 2005}, {"title": "Constraint-based Scheduling. Kluwer Academic Publishers, Boston/Dordrecht/London", "author": ["P. Baptiste", "C.L. Pape", "W. Nuijten"], "venue": null, "citeRegEx": "Baptiste et al\\.,? \\Q2001\\E", "shortCiteRegEx": "Baptiste et al\\.", "year": 2001}, {"title": "Texture Measurements as a Basis for Heuristic Commitment Techniques in Constraint-Directed Scheduling", "author": ["J.C. Beck"], "venue": "Ph.D. thesis, Department of Computer Science,", "citeRegEx": "Beck,? \\Q1999\\E", "shortCiteRegEx": "Beck", "year": 1999}, {"title": "Checking-up on branch-and-check", "author": ["J.C. Beck"], "venue": "In Proceedings of the Sixteenth International Conference on Principles and Practice of Constraint Programming", "citeRegEx": "Beck,? \\Q2010\\E", "shortCiteRegEx": "Beck", "year": 2010}, {"title": "The ODO project: Toward a unified basis for constraint-directed scheduling", "author": ["J.C. Beck", "A.J. Davenport", "E.D. Davis", "M.S. Fox"], "venue": "Journal of Scheduling,", "citeRegEx": "Beck et al\\.,? \\Q1998\\E", "shortCiteRegEx": "Beck et al\\.", "year": 1998}, {"title": "A hybrid approach to scheduling with earliness and tardiness costs", "author": ["J.C. Beck", "P. Refalo"], "venue": "Annals of Operations Research,", "citeRegEx": "Beck and Refalo,? \\Q2003\\E", "shortCiteRegEx": "Beck and Refalo", "year": 2003}, {"title": "Partitioning procedures for solving mixed-variables programming problems", "author": ["J. Benders"], "venue": "Numerische Mathematik,", "citeRegEx": "Benders,? \\Q1962\\E", "shortCiteRegEx": "Benders", "year": 1962}, {"title": "A theoretical and practical framework for scheduling in a stochastic environment", "author": ["J. Bidot", "T. Vidal", "P. Laborie", "J.C. Beck"], "venue": "Journal of Scheduling,", "citeRegEx": "Bidot et al\\.,? \\Q2009\\E", "shortCiteRegEx": "Bidot et al\\.", "year": 2009}, {"title": "Introduction to Stochastic Programming", "author": ["J.R. Birge", "F. Louveaux"], "venue": null, "citeRegEx": "Birge and Louveaux,? \\Q1997\\E", "shortCiteRegEx": "Birge and Louveaux", "year": 1997}, {"title": "Anticipatory scheduling for dynamic job shop problems", "author": ["J. Branke", "D.C. Mattfeld"], "venue": "In Proceedings of the ICAPS2002 Workshop on On-line Planning and Scheduling,", "citeRegEx": "Branke and Mattfeld,? \\Q2002\\E", "shortCiteRegEx": "Branke and Mattfeld", "year": 2002}, {"title": "Anticipation and flexibility in dynamic scheduling", "author": ["J. Branke", "D.C. Mattfeld"], "venue": "International Journal of Production Research,", "citeRegEx": "Branke and Mattfeld,? \\Q2005\\E", "shortCiteRegEx": "Branke and Mattfeld", "year": 2005}, {"title": "Scheduling preventive railway maintenance activities", "author": ["G. Budai", "D. Huisman", "R. Dekker"], "venue": "Journal of the Operational Research Society,", "citeRegEx": "Budai et al\\.,? \\Q2006\\E", "shortCiteRegEx": "Budai et al\\.", "year": 2006}, {"title": "Anticipatory on-line planning", "author": ["E. Burns", "J. Benton", "W. Ruml", "S. Yoon", "M.B. Do"], "venue": "In Proceedings of the Twenty-Second International Conference on Automated Planning and Scheduling", "citeRegEx": "Burns et al\\.,? \\Q2012\\E", "shortCiteRegEx": "Burns et al\\.", "year": 2012}, {"title": "Generating Benders cuts for a general class of integer programming problems", "author": ["Y. Chu", "Q. Xia"], "venue": "In Proceedings of the First International Conference on the Integration of AI and OR Techniques in Constraint Programming", "citeRegEx": "Chu and Xia,? \\Q2004\\E", "shortCiteRegEx": "Chu and Xia", "year": 2004}, {"title": "Empirical Methods for Artificial Intelligence", "author": ["P.R. Cohen"], "venue": null, "citeRegEx": "Cohen,? \\Q1995\\E", "shortCiteRegEx": "Cohen", "year": 1995}, {"title": "Using real time information for effective dynamic scheduling", "author": ["P. Cowling", "M. Johansson"], "venue": "European Journal of Operational Research,", "citeRegEx": "Cowling and Johansson,? \\Q2002\\E", "shortCiteRegEx": "Cowling and Johansson", "year": 2002}, {"title": "Slack-based techniques for robust schedules", "author": ["A.J. Davenport", "C. Gefflot", "J.C. Beck"], "venue": "In Proceedings of the Sixth European Conference on Planning", "citeRegEx": "Davenport et al\\.,? \\Q2001\\E", "shortCiteRegEx": "Davenport et al\\.", "year": 2001}, {"title": "On the optimal assignment of servers and a repairman", "author": ["C. Derman", "G.J. Lieberman", "S.M. Ross"], "venue": "Journal of Applied Probabilities,", "citeRegEx": "Derman et al\\.,? \\Q1980\\E", "shortCiteRegEx": "Derman et al\\.", "year": 1980}, {"title": "Computational complexity of stochastic programming problems", "author": ["M. Dyer", "L. Stougie"], "venue": "Spor-report 2003-20,", "citeRegEx": "Dyer and Stougie,? \\Q2003\\E", "shortCiteRegEx": "Dyer and Stougie", "year": 2003}, {"title": "Using logic-based Benders decomposition to solve the capacity- and distance-constrained plant location problem", "author": ["M.M. Fazel-Zarandi", "J.C. Beck"], "venue": "INFORMS Journal on Computing,", "citeRegEx": "Fazel.Zarandi and Beck,? \\Q2012\\E", "shortCiteRegEx": "Fazel.Zarandi and Beck", "year": 2012}, {"title": "Optimizing with constraints: A case study in scheduling maintenance of electric power units", "author": ["D. Frost", "R. Dechter"], "venue": "Lecture Notes in Computer Science,", "citeRegEx": "Frost and Dechter,? \\Q1998\\E", "shortCiteRegEx": "Frost and Dechter", "year": 1998}, {"title": "Multicommodity distribution system design by Benders decomposition", "author": ["A.M. Geoffrion", "G.W. Graves"], "venue": "Management Science,", "citeRegEx": "Geoffrion and Graves,? \\Q1974\\E", "shortCiteRegEx": "Geoffrion and Graves", "year": 1974}, {"title": "Modeling and solving the periodic maintenance problem", "author": ["A. Grigoriev", "J. van de Klundert", "F.C.R. Spieksma"], "venue": "European Journal of Operational Research,", "citeRegEx": "Grigoriev et al\\.,? \\Q2006\\E", "shortCiteRegEx": "Grigoriev et al\\.", "year": 2006}, {"title": "Bus maintenance systems and maintenance scheduling: Model formulations and solutions", "author": ["A. Haghani", "Y. Shafahi"], "venue": "Transportation Research Part A,", "citeRegEx": "Haghani and Shafahi,? \\Q2002\\E", "shortCiteRegEx": "Haghani and Shafahi", "year": 2002}, {"title": "A survey of the machine interference problem", "author": ["L. Haque", "M.J. Armstrong"], "venue": "European Journal of Operational Research,", "citeRegEx": "Haque and Armstrong,? \\Q2007\\E", "shortCiteRegEx": "Haque and Armstrong", "year": 2007}, {"title": "Reconsidering mixed integer programming and MIPbased hybrids for scheduling", "author": ["S. Heinz", "J.C. Beck"], "venue": "In Proceedings of the Ninth International Conference on Integration of AI and OR Techniques in Constraint Programming for Combinatorial Optimization Problems", "citeRegEx": "Heinz and Beck,? \\Q2012\\E", "shortCiteRegEx": "Heinz and Beck", "year": 2012}, {"title": "A hybrid method for planning and scheduling", "author": ["J. Hooker"], "venue": null, "citeRegEx": "Hooker,? \\Q2005\\E", "shortCiteRegEx": "Hooker", "year": 2005}, {"title": "Planning and scheduling by logic-based Benders decomposition", "author": ["J. Hooker"], "venue": "Operations Research,", "citeRegEx": "Hooker,? \\Q2007\\E", "shortCiteRegEx": "Hooker", "year": 2007}, {"title": "Logic-based Benders decomposition", "author": ["J. Hooker", "G. Ottosson"], "venue": "Mathematical Programming,", "citeRegEx": "Hooker and Ottosson,? \\Q2003\\E", "shortCiteRegEx": "Hooker and Ottosson", "year": 2003}, {"title": "Logic circuit verification by Benders decomposition", "author": ["J. Hooker", "H. Yan"], "venue": "Principles and Practice of Constraint Programming: The Newport Papers,", "citeRegEx": "Hooker and Yan,? \\Q1995\\E", "shortCiteRegEx": "Hooker and Yan", "year": 1995}, {"title": "Optimal server scheduling in nonpreemptive finite-population queueing systems", "author": ["S.M.R. Iravani", "V. Krishnamurthy", "G.H. Chao"], "venue": "Queueing System,", "citeRegEx": "Iravani et al\\.,? \\Q2007\\E", "shortCiteRegEx": "Iravani et al\\.", "year": 2007}, {"title": "Mixed integer least squares optimization for flight and maintenance planning of mission aircraft", "author": ["G. Kozanidis", "A. Gavranis", "E. Kostarelou"], "venue": "Naval Research Logistics,", "citeRegEx": "Kozanidis et al\\.,? \\Q2012\\E", "shortCiteRegEx": "Kozanidis et al\\.", "year": 2012}, {"title": "Metaheuristics for minimizing the makespan of the dynamic shop scheduling problem", "author": ["S.Q. Liu", "H.L. Ong", "K.M. Ng"], "venue": "Advances in Engineering Software,", "citeRegEx": "Liu et al\\.,? \\Q2005\\E", "shortCiteRegEx": "Liu et al\\.", "year": 2005}, {"title": "Predictable scheduling of a single machine with breakdowns and sensitive", "author": ["R. O\u2019Donovan", "R. Uzsoy", "K.N. McKay"], "venue": "jobs. International Journal of Production Research,", "citeRegEx": "O.Donovan et al\\.,? \\Q1999\\E", "shortCiteRegEx": "O.Donovan et al\\.", "year": 1999}, {"title": "Rolling horizon algorithms for a single-machine dynamic scheduling problem with sequence-dependent setup times", "author": ["I.M. Ovacik", "R. Uzsoy"], "venue": "International Journal of Production Research,", "citeRegEx": "Ovacik and Uzsoy,? \\Q1994\\E", "shortCiteRegEx": "Ovacik and Uzsoy", "year": 1994}, {"title": "Rolling horizon procedures for dynamic parallel machine scheduling with sequence-dependent setup times", "author": ["I.M. Ovacik", "R. Uzsoy"], "venue": "International Journal of Production Research,", "citeRegEx": "Ovacik and Uzsoy,? \\Q1995\\E", "shortCiteRegEx": "Ovacik and Uzsoy", "year": 1995}, {"title": "Scheduling: Theory, Algorithms, and Systems (2nd edition)", "author": ["M. Pinedo"], "venue": null, "citeRegEx": "Pinedo,? \\Q2002\\E", "shortCiteRegEx": "Pinedo", "year": 2002}, {"title": "Planning and Scheduling in Manufacturing and Services", "author": ["M. Pinedo"], "venue": null, "citeRegEx": "Pinedo,? \\Q2005\\E", "shortCiteRegEx": "Pinedo", "year": 2005}, {"title": "Polyhedral approaches to machine scheduling problems", "author": ["M. Queyranne", "A. Schulz"], "venue": "Tech. rep. 408/1994,", "citeRegEx": "Queyranne and Schulz,? \\Q1994\\E", "shortCiteRegEx": "Queyranne and Schulz", "year": 1994}, {"title": "Analysis of reactive scheduling problems in a job shop environment", "author": ["I. Sabuncuoglu", "M. Bayiz"], "venue": "European Journal of Operational Research,", "citeRegEx": "Sabuncuoglu and Bayiz,? \\Q2000\\E", "shortCiteRegEx": "Sabuncuoglu and Bayiz", "year": 2000}, {"title": "Workforce constrained maintenance scheduling for aircraft fleet: A case study", "author": ["N. Safaei", "D. Banjevic", "A.K.S. Jardine"], "venue": "In Proceedings of Sixteenth ISSAT International Conference on Reliability and Quality in Design,", "citeRegEx": "Safaei et al\\.,? \\Q2010\\E", "shortCiteRegEx": "Safaei et al\\.", "year": 2010}, {"title": "Workforce-constrained maintenance scheduling for military aircraft fleet: A case study", "author": ["N. Safaei", "D. Banjevic", "A.K.S. Jardine"], "venue": "Annals of Operations Research,", "citeRegEx": "Safaei et al\\.,? \\Q2011\\E", "shortCiteRegEx": "Safaei et al\\.", "year": 2011}, {"title": "Balancing risk: Readiness, force structure, and modernization", "author": ["N. Schwartz"], "venue": "In CSAF remarks at 2012 Air Force Reserve Senior Leader Conference", "citeRegEx": "Schwartz,? \\Q2012\\E", "shortCiteRegEx": "Schwartz", "year": 2012}, {"title": "Machine Interference: Assignment of Machines to Operators. Handbook of Industrial Engineering (2nd edition)", "author": ["K.E. Stecke"], "venue": null, "citeRegEx": "Stecke,? \\Q1992\\E", "shortCiteRegEx": "Stecke", "year": 1992}, {"title": "Reinforcement Learning: An Introduction", "author": ["R.S. Sutton", "A.G. Barto"], "venue": null, "citeRegEx": "Sutton and Barto,? \\Q1998\\E", "shortCiteRegEx": "Sutton and Barto", "year": 1998}, {"title": "A constraint programming approach for solving a queueing design and control problem", "author": ["D. Terekhov", "J.C. Beck", "K.N. Brown"], "venue": "INFORMS Journal on Computing,", "citeRegEx": "Terekhov et al\\.,? \\Q2009\\E", "shortCiteRegEx": "Terekhov et al\\.", "year": 2009}, {"title": "Solving two-machine assembly scheduling problems with inventory constraints", "author": ["D. Terekhov", "M.K. Do\u011fru", "U. \u00d6zen", "J.C. Beck"], "venue": "Computers and Industrial Engineering,", "citeRegEx": "Terekhov et al\\.,? \\Q2012\\E", "shortCiteRegEx": "Terekhov et al\\.", "year": 2012}, {"title": "Online Stochastic Combinatorial Optimization", "author": ["P. Van Hentenryck", "R. Bent"], "venue": null, "citeRegEx": "Hentenryck and Bent,? \\Q2006\\E", "shortCiteRegEx": "Hentenryck and Bent", "year": 2006}, {"title": "Predicting the performance of rescheduling strategies for parallel machine systems", "author": ["G.E. Vieira", "J.W. Hermann", "E. Lin"], "venue": "Journal of Manufacturing Systems,", "citeRegEx": "Vieira et al\\.,? \\Q2000\\E", "shortCiteRegEx": "Vieira et al\\.", "year": 2000}, {"title": "Rescheduling manufacturing systems: A framework of strategies, policies and methods", "author": ["G.E. Vieira", "J.W. Hermann", "E. Lin"], "venue": "Journal of Scheduling,", "citeRegEx": "Vieira et al\\.,? \\Q2003\\E", "shortCiteRegEx": "Vieira et al\\.", "year": 2003}, {"title": "Simulation modeling and analysis of due-date assignment methods and scheduling decision rules in a dynamic job shop production system", "author": ["V. Vinod", "R. Sridharan"], "venue": "International Journal of Production Economics,", "citeRegEx": "Vinod and Sridharan,? \\Q2011\\E", "shortCiteRegEx": "Vinod and Sridharan", "year": 2011}, {"title": "Preventive maintenance scheduling by mathematical programming", "author": ["H.M. Wagner", "R.J. Giglio", "R.G. Glaser"], "venue": "Management Science,", "citeRegEx": "Wagner et al\\.,? \\Q1964\\E", "shortCiteRegEx": "Wagner et al\\.", "year": 1964}, {"title": "A survey of maintenance policies of deteriorating systems", "author": ["H. Wang"], "venue": "European Journal of Operational Research,", "citeRegEx": "Wang,? \\Q2002\\E", "shortCiteRegEx": "Wang", "year": 2002}], "referenceMentions": [{"referenceID": 45, "context": "The United States Air Force website outlines readiness as one of the vital elements to ensure the operational effectiveness in defense strategies (Schwartz, 2012).", "startOffset": 146, "endOffset": 162}, {"referenceID": 55, "context": "In the other words, as in one of the standard repair models in the maintenance literature, repair is minimal (Wang, 2002).", "startOffset": 109, "endOffset": 121}, {"referenceID": 44, "context": "The probability of failure detection in pre-flight checks is smaller than the post-flight checks because an aircraft is either just released from the repair shop or has already passed a previous post-flight check successfully (Safaei et al., 2011).", "startOffset": 226, "endOffset": 247}, {"referenceID": 46, "context": "Repair shops have been mainly studied as a machine-repairman problem (Haque & Armstrong, 2007; Stecke, 1992) which has a set of workers and a set of machines that are subject to failures and therefore need repair.", "startOffset": 69, "endOffset": 108}, {"referenceID": 46, "context": "Repair shops have been mainly studied as a machine-repairman problem (Haque & Armstrong, 2007; Stecke, 1992) which has a set of workers and a set of machines that are subject to failures and therefore need repair. Workers and machines respectively correspond to trades and aircraft, in our problem. As the number of workers is less than the number of machines, it is necessary to allocate the repair jobs to the workers with the goal of optimizing a given performance measure (e.g., the total expected machine downtime) over the long-term. Derman, Liberman, and Ross (1980) did the early work on solving the scheduling problem of a repair shop with a single repairman.", "startOffset": 95, "endOffset": 574}, {"referenceID": 3, "context": "The process of modifying the previous schedule is called rescheduling (Vieira, Hermann, & Lin, 2003; Aytug et al., 2005; Bidot, Vidal, Laborie, & Beck, 2009).", "startOffset": 70, "endOffset": 157}, {"referenceID": 36, "context": "Although we are not aware of using dynamic scheduling in a repair system, it has been successfully applied to a variety of scheduling problems including single machine (Ovacik & Uzsoy, 1994; O\u2019Donovan et al., 1999; Cowling & Johansson, 2002), parallel machines (Vieira, Hermann, & Lin, 2000; Ovacik & Uzsoy, 1995), and job shop (Sabuncuoglu & Bayiz, 2000; Liu, Ong, & Ng, 2005; Vinod & Sridharan, 2011).", "startOffset": 168, "endOffset": 241}, {"referenceID": 14, "context": "Starting with the early work of Wagner, Giglio, and Glaser (1964), this literature was extended through developing mathematical models and effective solution approaches for a variety of applications (Frost & Dechter, 1998; Haghani & Shafahi, 2002; Budai et al., 2006; Grigoriev, van de Klundert, & Spieksma, 2006).", "startOffset": 199, "endOffset": 313}, {"referenceID": 16, "context": "Therefore, they typically result in a static dispatching-type repair policy similar to that found by Derman et al. (1980). However, in our problem, the waves have different plane requirements and the processing times and the resource requirements of the repair activities become known when they enter the repair shop.", "startOffset": 101, "endOffset": 122}, {"referenceID": 3, "context": "The process of modifying the previous schedule is called rescheduling (Vieira, Hermann, & Lin, 2003; Aytug et al., 2005; Bidot, Vidal, Laborie, & Beck, 2009). How to solve static sub-problems and how to connect them using rescheduling strategies are the main aspects of the dynamic scheduling research. Although we are not aware of using dynamic scheduling in a repair system, it has been successfully applied to a variety of scheduling problems including single machine (Ovacik & Uzsoy, 1994; O\u2019Donovan et al., 1999; Cowling & Johansson, 2002), parallel machines (Vieira, Hermann, & Lin, 2000; Ovacik & Uzsoy, 1995), and job shop (Sabuncuoglu & Bayiz, 2000; Liu, Ong, & Ng, 2005; Vinod & Sridharan, 2011). Other areas of literature with similarities to our static problem are the operational level maintenance scheduling problem, in general, and the flight and maintenance planning problem of military aircraft, specifically. The former literature addresses the problem of finding a schedule for given maintenance activities such that the sum of maintenance costs is minimized. The focus is on the operational level, determining the maintenance activities performed in each time period (Budai, Huisman, & Dekker, 2006). Starting with the early work of Wagner, Giglio, and Glaser (1964), this literature was extended through developing mathematical models and effective solution approaches for a variety of applications (Frost & Dechter, 1998; Haghani & Shafahi, 2002; Budai et al.", "startOffset": 101, "endOffset": 1287}, {"referenceID": 44, "context": "They later extended their work by using slightly different MIP model where the time-indexed approach is used to enforce the workforce availability constraint and they verified the validity of their model by a number of instances under different combinations of workforce sizes (Safaei et al., 2011).", "startOffset": 277, "endOffset": 298}, {"referenceID": 42, "context": "Safaei et al. (2010) modeled the static problem addressed here as an operational level maintenance scheduling problem using MIP.", "startOffset": 0, "endOffset": 21}, {"referenceID": 9, "context": "The classical Benders decomposition (Benders, 1962; Geoffrion & Graves, 1974) is a mathematical programming approach for solving large-scale mixed integer programming models.", "startOffset": 36, "endOffset": 77}, {"referenceID": 29, "context": "Therefore, the inference duals (Hooker, 2005) of the SPs are solved rather than the linear duals to find the tightest bound on the global cost function from the original constraints and the current MP solution.", "startOffset": 31, "endOffset": 45}, {"referenceID": 30, "context": "The former results in MP solutions which are likely to satisfy the SPs, and the latter rules out a large number of MP solutions in each iteration (Hooker, 2007).", "startOffset": 146, "endOffset": 160}, {"referenceID": 6, "context": "Logic-based Benders decomposition has been shown to be effective in a wide range of problems including scheduling (Hooker, 2005, 2007; Beck, 2010), facility and vehicle", "startOffset": 114, "endOffset": 146}, {"referenceID": 39, "context": "This problem is equivalent to a one dimensional knapsack problem with non-uniform profit which is shown to be NP-complete by reduction from the PARTITION problem (Pinedo, 2002).", "startOffset": 162, "endOffset": 176}, {"referenceID": 39, "context": "The notation used for describing a problem in scheduling literature is \u03b1|\u03b2|\u03b3 where \u03b1 represents the machine environment, \u03b2 describes the processing characteristics and constraints in detail, and \u03b3 denotes the objective function (Pinedo, 2002).", "startOffset": 228, "endOffset": 242}, {"referenceID": 39, "context": ", 1|dj = d| \u2211 wjUj , is NP-hard (Pinedo, 2002), we conclude that the static repair shop problem is also NP-hard.", "startOffset": 32, "endOffset": 46}, {"referenceID": 4, "context": "The scheduling problems are usually defined as one or several instances of the constraints satisfaction problem (CSP) (Baptiste et al., 2001).", "startOffset": 118, "endOffset": 141}, {"referenceID": 5, "context": "\u00d7Dj and is satisfied if the assignment of the variables in its scope corresponds to one of the value tuples in the constraint relation (Beck, 1999).", "startOffset": 135, "endOffset": 147}, {"referenceID": 5, "context": "CP solves scheduling problems by applying three general tools of heuristic search, constraint propagation, and backtracking within a branch-and-bound search tree (Beck, 1999; Beck & Refalo, 2003).", "startOffset": 162, "endOffset": 195}, {"referenceID": 4, "context": "Constraint propagation, one of the key principles contributing to the success of CP, is exploited by representing the problem as a conjunction of global constraints, each of which embeds efficient inference techniques that reduce the solution space within a branch-and-bound search tree (Baptiste et al., 2001).", "startOffset": 287, "endOffset": 310}, {"referenceID": 29, "context": "The cumulative constraint ensures that the total amount of resource capacity used at any time never exceeds C (Hooker, 2005).", "startOffset": 110, "endOffset": 124}, {"referenceID": 40, "context": "We therefore investigate a heuristic approach, inspired by the Apparent Tardiness Cost (ATC) heuristic, a composite dispatching rule that is typically applied to single machine scheduling problem with the sum of weighted tardiness objective (Pinedo, 2005).", "startOffset": 241, "endOffset": 255}, {"referenceID": 44, "context": "It is worth mentioning that we have chosen three as the length of the scheduling horizon because three waves are usually scheduled daily based on the real data (Safaei et al., 2011).", "startOffset": 160, "endOffset": 181}, {"referenceID": 44, "context": "Furthermore, our setting consists of more instances and results in problem instances which are one and a half times bigger than the examples used in the literature (Safaei et al., 2011) where the number of aircraft is 10, 15, or 20; the number of waves is 3 or 4; and the number of trades and aircraft types is equal to 3 and 2.", "startOffset": 164, "endOffset": 185}, {"referenceID": 43, "context": "Though our problem instances are generated randomly, the setting of our experiment includes three numerical examples of Safaei et al. (2011) which are based on the real data.", "startOffset": 120, "endOffset": 141}, {"referenceID": 0, "context": "The changes in the results compared to the previous work (Aramon Bajestani & Beck, 2011b) are due to improved scheduling models, different solvers, and different test problems. The scheduling algorithms are enhanced by using a smaller value for B, the resource capacity constraint is enforced in a shorter interval, i.e., [0, st|W |], and more efficient formulations for Constraints (5), (6), and (20) are used. The mean run-time of the MIP model given by Safaei et al. (2011) over eight scenarios with 10 aircraft and 3 waves is 294.", "startOffset": 65, "endOffset": 477}, {"referenceID": 17, "context": "Bootstrap paired-t tests (Cohen, 1995) also indicate that there is no significant difference in mean run-time at p \u2264 0.", "startOffset": 25, "endOffset": 38}, {"referenceID": 44, "context": "The P31 rescheduling policy is computationally more expensive than the other two policies, its run-time per one static sub-problem, however, is small compared to the length of scheduling horizon being usually one day in the real applications (Safaei et al., 2011).", "startOffset": 242, "endOffset": 263}, {"referenceID": 33, "context": "The third approach is to use multi-stage dynamic programming for solving the dynamic repair shop problem (Iravani et al., 2007).", "startOffset": 105, "endOffset": 127}], "year": 2013, "abstractText": "We address a dynamic repair shop scheduling problem in the context of military aircraft fleet management where the goal is to maintain a full complement of aircraft over the longterm. A number of flights, each with a requirement for a specific number and type of aircraft, are already scheduled over a long horizon. We need to assign aircraft to flights and schedule repair activities while considering the flights requirements, repair capacity, and aircraft failures. The number of aircraft awaiting repair dynamically changes over time due to failures and it is therefore necessary to rebuild the repair schedule online. To solve the problem, we view the dynamic repair shop as successive static repair scheduling sub-problems over shorter time periods. We propose a complete approach based on the logic-based Benders decomposition to solve the static sub-problems, and design different rescheduling policies to schedule the dynamic repair shop. Computational experiments demonstrate that the Benders model is able to find and prove optimal solutions on average four times faster than a mixed integer programming model. The rescheduling approach having both aspects of scheduling over a longer horizon and quickly adjusting the schedule increases aircraft available in the long term by 10% compared to the approaches having either one of the aspects alone.", "creator": "TeX"}}}